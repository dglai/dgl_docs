Search.setIndex({"alltitles": {"1.1 Some Basic Definitions about Graphs (Graphs 101)": [[697, null]], "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [[741, null]], "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)": [[782, null]], "1.2 Graphs, Nodes, and Edges": [[701, null]], "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9": [[745, null]], "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0": [[786, null]], "1.3 Node and Edge Features": [[699, null]], "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [[743, null]], "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98": [[784, null]], "1.4 Creating Graphs from External Sources": [[698, null]], "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [[742, null]], "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[783, null]], "1.5 Heterogeneous Graphs": [[702, null]], "1.5 \u5f02\u6784\u56fe": [[746, null]], "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)": [[787, null]], "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30": [[785, null]], "1.6 Using DGLGraph on a GPU": [[700, null]], "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph": [[744, null]], "1\uc7a5: \uadf8\ub798\ud504": [[781, null]], "2.1 Built-in Functions and Message Passing APIs": [[705, null]], "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API": [[749, null]], "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4": [[790, null]], "2.2 Writing Efficient Message Passing Code": [[706, null]], "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [[750, null]], "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95": [[792, null]], "2.3 Apply Message Passing On Part Of The Graph": [[708, null]], "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[752, null]], "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30": [[794, null]], "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30": [[791, null]], "2.5 Message Passing on Heterogeneous Graph": [[707, null]], "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[751, null]], "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[793, null]], "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)": [[789, null]], "3.1 DGL NN Module Construction Function": [[721, null]], "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218": [[805, null]], "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [[761, null]], "3.2 DGL NN Module Forward Function": [[722, null]], "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218": [[806, null]], "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570": [[762, null]], "3.3 Heterogeneous GraphConv Module": [[723, null]], "3.3 Heterogeneous GraphConv \ubaa8\ub4c8": [[807, null]], "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757": [[763, null]], "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30": [[804, null]], "4.1 DGLDataset class": [[684, null]], "4.1 DGLDataset \ud074\ub798\uc2a4": [[771, null]], "4.1 DGLDataset\u7c7b": [[731, null]], "4.2 Download raw data (optional)": [[685, null]], "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)": [[772, null]], "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09": [[732, null]], "4.3 Process data": [[688, null]], "4.3 \u5904\u7406\u6570\u636e": [[734, null]], "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1": [[774, null]], "4.4 Save and load data": [[689, null]], "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [[735, null]], "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529": [[775, null]], "4.5 Loading OGB datasets using ogb package": [[687, null]], "4.5 ogb \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30": [[773, null]], "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6": [[733, null]], "4.6 Loading data from CSV files": [[686, null]], "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778": [[770, null]], "5.1 Node Classification/Regression": [[729, null]], "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52": [[769, null]], "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)": [[812, null]], "5.2 Edge Classification/Regression": [[725, null]], "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52": [[765, null]], "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)": [[809, null]], "5.3 Link Prediction": [[728, null]], "5.3 \u94fe\u63a5\u9884\u6d4b": [[768, null]], "5.3 \ub9c1\ud06c \uc608\uce21": [[811, null]], "5.4 Graph Classification": [[727, null]], "5.4 \u6574\u56fe\u5206\u7c7b": [[767, null]], "5.4 \uadf8\ub798\ud504 \ubd84\ub958": [[810, null]], "5.5 Use of Edge Weights": [[726, null]], "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd": [[766, null]], "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30": [[808, null]], "6.1 Training GNN for Node Classification with Neighborhood Sampling": [[716, null]], "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[759, null]], "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[802, null]], "6.2 Training GNN for Edge Classification with Neighborhood Sampling": [[711, null]], "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[755, null]], "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[797, null]], "6.3 Training GNN for Link Prediction with Neighborhood Sampling": [[714, null]], "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[757, null]], "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[800, null]], "6.4 Implementing Custom Graph Samplers": [[710, null]], "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [[754, null]], "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [[796, null]], "6.5 Training GNN with DGL sparse": [[718, null]], "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757": [[758, null]], "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30": [[801, null]], "6.6 Implementing Custom GNN Module for Mini-batch Training": [[715, null]], "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [[756, null]], "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860": [[799, null]], "6.7 Exact Offline Inference on Large Graphs": [[713, null]], "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30": [[798, null]], "6.8 Using GPU for Neighborhood Sampling": [[712, null]], "6.9 Data Loading Parallelism": [[717, null]], "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5": [[795, null]], "7.1 Data Preprocessing": [[694, null]], "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [[738, null]], "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac": [[779, null]], "7.1.1 Partitioning API": [[694, "partitioning-api"]], "7.1.1 \ubd84\uc0b0 \ud30c\ud2f0\uc154\ub2dd": [[779, "id3"]], "7.1.2 Distributed Graph Partitioning Pipeline": [[694, "distributed-graph-partitioning-pipeline"]], "7.2 Tools for launching distributed training/inference": [[695, null]], "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API": [[737, null]], "7.2 \ubd84\uc0b0 APIs": [[777, null]], "7.3 Programming APIs": [[691, null]], "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [[739, null]], "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30": [[778, null]], "7.3.1 \ubd84\uc0b0 \uadf8\ub798\ud504 \ub370\uc774\ud130 \uc811\uadfc\ud558\uae30": [[778, "id1"]], "7.3.2 \ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[778, "id2"]], "7.4 Advanced Graph Partitioning": [[693, null]], "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4": [[780, null]], "7.5 Heterogeneous Graph Under The Hood": [[692, null]], "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5": [[776, null]], "8\uc7a5: Mixed Precision \ud559\uc2b5": [[803, null]], "A Batched Graph in DGL": [[836, "a-batched-graph-in-dgl"]], "A Blitz Introduction to DGL": [[838, null]], "A brief introduction to R-GCN": [[849, "a-brief-introduction-to-r-gcn"]], "AGNNConv": [[356, null], [386, null]], "AIFBDataset": [[132, null]], "AMDataset": [[133, null]], "API Reference": [[13, null]], "APPNPConv": [[357, null], [387, null], [457, null]], "Access distributed graph data": [[692, "access-distributed-graph-data"]], "Access node/edge data": [[691, "access-node-edge-data"]], "Accessing graph structure": [[691, "accessing-graph-structure"]], "Action 1: Add nodes": [[857, "action-1-add-nodes"]], "Action 2: Add edges": [[857, "action-2-add-edges"]], "Action 3: Choose a destination": [[857, "action-3-choose-a-destination"]], "Actions": [[857, "actions"]], "ActorDataset": [[134, null]], "Adapt your model for minibatch training": [[711, "adapt-your-model-for-minibatch-training"], [716, "adapt-your-model-for-minibatch-training"]], "Adaptive Universal Transformer": [[861, "adaptive-universal-transformer"]], "AddEdge": [[645, null]], "AddMetaPaths": [[646, null]], "AddReverse": [[647, null]], "AddSelfLoop": [[648, null]], "Adjacency Related Utilities": [[0, "adjacency-related-utilities"]], "Adjacency and incidence matrix": [[1, "adjacency-and-incidence-matrix"]], "After Partition Loading": [[692, "after-partition-loading"]], "Alternative memory allocators": [[841, "alternative-memory-allocators"]], "AmazonCoBuyComputerDataset": [[135, null]], "AmazonCoBuyPhotoDataset": [[136, null]], "AmazonRatingsDataset": [[137, null]], "AsGraphPredDataset": [[138, null]], "AsLinkPredDataset": [[139, null]], "AsNodePredDataset": [[140, null]], "Assigning Node and Edge Features to Graph": [[833, "assigning-node-and-edge-features-to-graph"]], "AtomicConv": [[388, null]], "Attention layer of Transformer": [[861, "attention-layer-of-transformer"]], "Attributes and methods": [[12, "attributes-and-methods"]], "Attributes and methods of a DGL Sparse Matrix": [[820, "Attributes-and-methods-of-a-DGL-Sparse-Matrix"]], "AvgPooling": [[373, null], [432, null], [465, null]], "BA2MotifDataset": [[141, null]], "BACommunityDataset": [[142, null]], "BAShapeDataset": [[143, null]], "BFloat16 CPU example": [[719, "bfloat16-cpu-example"]], "BGSDataset": [[144, null]], "Backend Options": [[23, "backend-options"]], "Base Class": [[2, "base-class"]], "BaseTransform": [[649, null]], "BasicFeatureStore": [[287, null]], "Batch of Graphs": [[727, "batch-of-graphs"]], "Batching and Reading Out Ops": [[0, "batching-and-reading-out-ops"]], "Batching graphs for parallelism": [[850, "batching-graphs-for-parallelism"]], "Batching many small graphs": [[855, null], [864, "batching-many-small-graphs"]], "Benchmark the performance of KNN algorithms": [[14, null]], "Best practice of writing custom GNN modules": [[834, "best-practice-of-writing-custom-gnn-modules"]], "BiasedMHA": [[441, null]], "Binary community subgraph from Cora with a test dataset": [[850, "binary-community-subgraph-from-cora-with-a-test-dataset"]], "BitcoinOTCDataset": [[145, null]], "Broadcast operations": [[820, "Broadcast-operations"]], "Broadcast operators": [[12, "broadcast-operators"]], "Build Model": [[682, null]], "Building Docs Locally": [[21, "building-docs-locally"]], "Building a Graph Convolutional Network Using Sparse Matrices": [[815, null]], "Building and Testing": [[21, "building-and-testing"]], "BuiltinDataset": [[288, null]], "CFConv": [[389, null]], "CIFAR10SuperPixelDataset": [[146, null]], "CLUSTERDataset": [[147, null]], "CPU Best Practices": [[841, null]], "CSVDataset": [[148, null]], "Capsule Network": [[860, null]], "Chain-up LGNN abstractions as an LGNN layer": [[850, "chain-up-lgnn-abstractions-as-an-lgnn-layer"]], "Chain-up LGNN layers": [[850, "chain-up-lgnn-layers"]], "ChameleonDataset": [[149, null]], "Chapter 1: Graph": [[696, null]], "Chapter 2: Message Passing": [[704, null]], "Chapter 3: Building GNN Modules": [[720, null]], "Chapter 4: Graph Data Pipeline": [[683, null]], "Chapter 5: Training Graph Neural Networks": [[724, null]], "Chapter 6: Stochastic Training on Large Graphs": [[709, null]], "Chapter 7: Distributed Training": [[690, null]], "Chapter 8: Mixed Precision Training": [[719, null]], "ChebConv": [[358, null], [390, null], [458, null]], "Chunked Graph Format": [[694, "chunked-graph-format"]], "CiteseerGraphDataset": [[150, null]], "ClusterGCNSampler": [[209, null]], "CoauthorCSDataset": [[151, null]], "CoauthorPhysicsDataset": [[152, null]], "Coding styles": [[21, "coding-styles"]], "Comma Separated Values (CSV)": [[698, "comma-separated-values-csv"], [702, "comma-separated-values-csv"], [783, "comma-separated-values-csv"], [787, "comma-separated-values-csv"]], "Community detection": [[850, "community-detection"]], "Community detection in a supervised setting": [[850, "community-detection-in-a-supervised-setting"]], "Completing f(x, y)": [[850, "completing-f-x-y"]], "Compose": [[650, null]], "Composing OnDiskDataset from raw data": [[828, null]], "Computation on a Batched Graph": [[727, "computation-on-a-batched-graph"]], "Computation times": [[823, null], [839, null], [843, null], [847, null], [853, null], [856, null], [859, null], [863, null], [865, null], [869, null]], "Computing with DGLGraph": [[1, "computing-with-dglgraph"]], "Conclusion": [[14, "conclusion"], [825, "Conclusion"], [827, "Conclusion"]], "Containers": [[22, "containers"]], "Contribute to DGL": [[21, null]], "Contributing Code Changes": [[21, "contributing-code-changes"]], "Contributing Core Features": [[21, "contributing-core-features"]], "Contributing Documentations": [[21, "contributing-documentations"]], "Contributing Editorial Changes via GitHub Web Interface": [[21, "contributing-editorial-changes-via-github-web-interface"]], "Contributing New Models as Examples": [[21, "contributing-new-models-as-examples"]], "Contribution": [[813, "contribution"]], "Conv Layers": [[15, "conv-layers"], [16, "conv-layers"], [17, "conv-layers"]], "Converting Heterogeneous Graphs to Homogeneous Graphs": [[702, "converting-heterogeneous-graphs-to-homogeneous-graphs"]], "CopyTo": [[7, "copyto"], [289, null]], "Cora": [[851, "cora"]], "Cora dataset": [[850, "cora-dataset"]], "CoraFullDataset": [[153, null]], "CoraGraphDataset": [[154, null]], "CornellDataset": [[155, null]], "Create graph and model": [[849, "create-graph-and-model"]], "Creating Dataset from CSV via CSVDataset": [[837, "creating-dataset-from-csv-via-csvdataset"]], "Creating Graphs from External Libraries": [[698, "creating-graphs-from-external-libraries"]], "Creating a DGL Sparse Matrix": [[820, "Creating-a-DGL-Sparse-Matrix"]], "Creating a Dataset for Graph Classification from CSV": [[837, "creating-a-dataset-for-graph-classification-from-csv"]], "Creating a Dataset for Node Classification or Link Prediction from CSV": [[837, "creating-a-dataset-for-node-classification-or-link-prediction-from-csv"]], "Creating a Heterogeneous Graph": [[702, "creating-a-heterogeneous-graph"]], "Creation Ops": [[12, "creation-ops"]], "CuGraph Conv Layers": [[16, "cugraph-conv-layers"]], "CuGraphGATConv": [[391, null]], "CuGraphRelGraphConv": [[392, null]], "CuGraphSAGEConv": [[393, null]], "Custom Data Parser": [[686, "custom-data-parser"]], "DGL Binary Format": [[698, "dgl-binary-format"], [702, "dgl-binary-format"]], "DGL Built-in Function": [[5, "dgl-built-in-function"]], "DGL Foreign Function Interface (FFI)": [[22, null]], "DGL Graph Construction": [[833, "dgl-graph-construction"]], "DGL \u4e8c\u8fdb\u5236\u683c\u5f0f": [[742, "dgl"]], "DGL \ub370\uc774\ud130 \ub85c\ub354\uc5d0\uc11c GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc0ac\uc6a9\ud558\uae30": [[798, "dgl-gpu"]], "DGL \ubc14\uc774\ub108\ub9ac \ud3ec\uba67": [[783, "dgl"], [787, "dgl"]], "DGL \ubd84\uc0b0 \ubaa8\ub4c8 \ucd08\uae30\ud654": [[777, "dgl"]], "DGLDataset": [[156, null]], "DGLDataset Object Overview": [[837, "dgldataset-object-overview"]], "DGL\u4e8c\u8fdb\u5236\u683c\u5f0f": [[746, "dgl"]], "DGL\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": [[737, "dgl"]], "DGMG: Optimization objective": [[857, "dgmg-optimization-objective"]], "DGMG: The implementation": [[857, "dgmg-the-implementation"]], "DGMG: The main flow": [[857, "dgmg-the-main-flow"]], "DGNConv": [[394, null]], "Data Loader Preparation": [[866, "data-loader-preparation"]], "Data Loading": [[727, "data-loading"]], "Data Repository": [[23, "data-repository"]], "Data folder structure": [[686, "data-folder-structure"]], "Data hosting": [[21, "data-hosting"]], "Data preparation": [[830, "Data-preparation"], [831, "Data-preparation"]], "DataLoader": [[7, "dataloader"], [210, null], [290, null]], "DataLoaders": [[3, "dataloaders"]], "Dataset": [[7, "dataset"], [291, null]], "Dataset adapters": [[2, "dataset-adapters"]], "Dataset of a single feature-less graph": [[686, "dataset-of-a-single-feature-less-graph"]], "Dataset of a single graph with features and labels": [[686, "dataset-of-a-single-graph-with-features-and-labels"]], "Dataset of a single heterogeneous graph": [[686, "dataset-of-a-single-heterogeneous-graph"]], "Dataset of multiple graphs": [[686, "dataset-of-multiple-graphs"]], "DeepWalk": [[380, null]], "Define Model": [[836, "define-model"]], "Define a GNN model": [[844, "define-a-gnn-model"], [845, "define-a-gnn-model"]], "Define a GraphSAGE model": [[835, "define-a-graphsage-model"]], "Define a GraphSAGE model for minibatch training": [[714, "define-a-graphsage-model-for-minibatch-training"]], "Define a data loader with neighbor and negative sampling": [[714, "define-a-data-loader-with-neighbor-and-negative-sampling"]], "Define a neighborhood sampler and data loader": [[711, "define-a-neighborhood-sampler-and-data-loader"], [716, "define-a-neighborhood-sampler-and-data-loader"]], "Defining Data Loader": [[836, "defining-data-loader"]], "Defining Model": [[827, "Defining-Model"], [867, "defining-model"]], "Defining Model for Node Representation": [[825, "Defining-Model-for-Node-Representation"]], "Defining Neighbor Sampler and Data Loader in DGL": [[825, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [827, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"]], "Defining Traing Loop": [[825, "Defining-Traing-Loop"]], "Defining Training Loop": [[827, "Defining-Training-Loop"]], "Defining Traning and Evaluation Procedures": [[867, "defining-traning-and-evaluation-procedures"]], "Defining a Graph Convolutional Network (GCN)": [[832, "defining-a-graph-convolutional-network-gcn"]], "Defining new types": [[22, "defining-new-types"]], "Degree Bucketing for Message Passing with User Defined Functions": [[20, "degree-bucketing-for-message-passing-with-user-defined-functions"]], "Degree Encoding": [[682, "degree-encoding"]], "DegreeEncoder": [[442, null]], "Dense Conv Layers": [[15, "dense-conv-layers"], [16, "dense-conv-layers"]], "DenseChebConv": [[359, null], [395, null]], "DenseGraphConv": [[360, null], [396, null]], "DenseSAGEConv": [[361, null], [397, null]], "Description": [[6, "description"], [386, "description"], [387, "description"], [388, "description"], [389, "description"], [394, "description"], [397, "description"], [397, "id1"], [398, "description"], [400, "description"], [401, "description"], [402, "description"], [402, "id1"], [403, "description"], [404, "description"], [404, "id1"], [405, "description"], [405, "id1"], [406, "description"], [406, "id1"], [407, "description"], [409, "description"], [409, "id1"], [410, "description"], [411, "description"], [411, "id1"], [412, "description"], [412, "id1"], [415, "description"], [416, "description"], [418, "description"], [418, "id1"], [419, "description"], [419, "id1"], [420, "description"], [420, "id1"], [421, "description"], [422, "description"], [422, "id1"], [449, "description"], [449, "id1"], [450, "description"], [450, "id1"], [451, "description"], [453, "description"], [453, "id1"]], "Device Control": [[1, "device-control"]], "Diagonal Matrix": [[820, "Diagonal-Matrix"]], "DistEdgeDataLoader": [[211, null]], "DistGraph creation": [[691, "distgraph-creation"]], "DistGraph \uc0dd\uc131": [[777, "distgraph"]], "DistNodeDataLoader": [[212, null]], "Distributed DataLoader": [[4, "distributed-dataloader"]], "Distributed DistEmbedding": [[691, "distributed-distembedding"]], "Distributed Graph": [[4, "distributed-graph"]], "Distributed Graph Sampling Operators": [[4, "distributed-graph-sampling-operators"]], "Distributed Link Prediction": [[845, null]], "Distributed Node Classification": [[844, null]], "Distributed Node Embedding": [[4, "distributed-node-embedding"]], "Distributed Process Group Initialization": [[866, "distributed-process-group-initialization"]], "Distributed Sampling": [[4, "distributed-sampling"]], "Distributed Tensor": [[4, "distributed-tensor"], [691, "distributed-tensor"]], "Distributed embedding optimizer": [[4, "distributed-embedding-optimizer"]], "Distributed graph": [[691, "distributed-graph"]], "Distributed mini-batch sampler": [[844, "distributed-mini-batch-sampler"], [845, "distributed-mini-batch-sampler"]], "Distributed mode vs. standalone mode": [[691, "distributed-mode-vs-standalone-mode"]], "Distributed sampling": [[691, "distributed-sampling"]], "Distributed training": [[846, null]], "Distributed training script": [[844, "distributed-training-script"], [845, "distributed-training-script"]], "Distributed workload split": [[4, "distributed-workload-split"]], "Distributed \uadf8\ub798\ud504": [[777, "distributed"]], "DistributedItemSampler": [[292, null]], "DotGatConv": [[398, null]], "DropEdge": [[651, null]], "DropNode": [[652, null]], "During Preprocessing": [[692, "during-preprocessing"]], "EGATConv": [[399, null]], "EGNNConv": [[400, null]], "EGTLayer": [[443, null]], "Edge Prediction Datasets": [[2, "edge-prediction-datasets"]], "Edge Type Subgraph": [[702, "edge-type-subgraph"]], "Edge-wise User-defined Function": [[20, "edge-wise-user-defined-function"]], "EdgeConv": [[362, null], [401, null]], "EdgeData": [[686, "edgedata"]], "EdgeGATConv": [[402, null]], "EdgePredictor": [[449, null]], "EdgeWeightNorm": [[403, null]], "Element-wise functions": [[820, "Element-wise-functions"]], "Elementwise Operators": [[12, "elementwise-operators"]], "Elementwise operations": [[820, "Elementwise-operations"]], "Enabling ARGO on your own GNN program": [[840, "enabling-argo-on-your-own-gnn-program"]], "Encoding a dynamic graph": [[857, "encoding-a-dynamic-graph"]], "End-to-End Mixed Precision Training": [[719, "end-to-end-mixed-precision-training"]], "End-to-End Mixed Precision \ud559\uc2b5": [[803, "end-to-end-mixed-precision"]], "Environment Variables": [[23, null]], "Equation (1)": [[851, "equation-1"]], "Equation (2)": [[851, "equation-2"]], "Equation (3) & (4)": [[851, "equation-3-4"]], "Evaluating Performance with Link Prediction": [[825, "Evaluating-Performance-with-Link-Prediction"]], "Evaluation Loop": [[867, "evaluation-loop"]], "Even more customization by user-defined function": [[834, "even-more-customization-by-user-defined-function"]], "Example: MAG240M-LSC": [[694, "example-mag240m-lsc"]], "Examples on a heterogeneous graph": [[354, "examples-on-a-heterogeneous-graph"]], "Examples on a homogeneous graph": [[354, "examples-on-a-homogeneous-graph"]], "Exclude Edges After Sampling": [[710, "exclude-edges-after-sampling"]], "Execute on specific edges": [[861, "execute-on-specific-edges"]], "Exercise #1": [[820, "Exercise-#1"]], "Exercise #2": [[820, "Exercise-#2"]], "FB15k237Dataset": [[157, null]], "FB15kDataset": [[158, null]], "FakeNewsDataset": [[159, null]], "Farthest Point Sampler": [[6, "farthest-point-sampler"]], "FeatMask": [[653, null]], "Feature": [[293, null]], "Feature and FeatureStore": [[7, "feature-and-featurestore"]], "FeatureFetcher": [[7, "featurefetcher"], [294, null]], "FeatureStore": [[295, null]], "FlickrDataset": [[160, null]], "For heterogeneous graphs": [[711, "for-heterogeneous-graphs"], [714, "for-heterogeneous-graphs"], [716, "for-heterogeneous-graphs"]], "FraudAmazonDataset": [[161, null]], "FraudDataset": [[162, null]], "FraudYelpDataset": [[163, null]], "Frequently Asked Questions (FAQ)": [[24, null]], "Full R-GCN model defined": [[849, "full-r-gcn-model-defined"]], "Full YAML Specification": [[686, "full-yaml-specification"]], "FusedCSCSamplingGraph": [[296, null]], "GAT in DGL": [[851, "gat-in-dgl"]], "GATConv": [[363, null], [404, null], [459, null]], "GATv2Conv": [[405, null]], "GCN from the perspective of message passing": [[848, "gcn-from-the-perspective-of-message-passing"]], "GCN implementation with DGL": [[848, "gcn-implementation-with-dgl"]], "GCN in one formula": [[848, "gcn-in-one-formula"]], "GCN2Conv": [[406, null]], "GCNNorm": [[654, null]], "GDC": [[655, null]], "GDELTDataset": [[164, null]], "GINConv": [[364, null], [407, null], [460, null]], "GINDataset": [[165, null]], "GINEConv": [[408, null]], "GMMConv": [[365, null], [409, null]], "GNNExplainer": [[423, null]], "GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub7ec\ub97c DGL \ud568\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30": [[798, "gpu-dgl"]], "GPUCachedFeature": [[297, null]], "GSDDMM functions": [[9, "gsddmm-functions"]], "GSpMM functions": [[9, "gspmm-functions"]], "GatedGCNConv": [[410, null]], "GatedGraphConv": [[366, null], [411, null]], "GatherMM and SegmentMM Module": [[9, "gathermm-and-segmentmm-module"]], "General development process": [[21, "general-development-process"]], "Generate feature data for graph": [[830, "Generate-feature-data-for-graph"], [831, "Generate-feature-data-for-graph"]], "Generate graph structure data": [[830, "Generate-graph-structure-data"], [831, "Generate-graph-structure-data"]], "Generate tasks": [[830, "Generate-tasks"], [831, "Generate-tasks"]], "Generative Models of Graphs": [[857, null]], "Generative models": [[858, null], [864, "generative-models"]], "Get training and validation node IDs": [[844, "get-training-and-validation-node-ids"], [845, "get-training-and-validation-node-ids"]], "Getting Started": [[813, "getting-started"]], "Git setup (for developers)": [[21, "git-setup-for-developers"]], "Global Configurations": [[23, "global-configurations"]], "Global Pooling Layers": [[15, "global-pooling-layers"], [16, "global-pooling-layers"], [17, "global-pooling-layers"]], "GlobalAttentionPooling": [[374, null], [433, null], [466, null]], "GlobalUniform": [[226, null]], "Graph": [[7, "graph"]], "Graph Convolutional Layer": [[815, "Graph-Convolutional-Layer"]], "Graph Convolutional Network": [[848, null]], "Graph Create Ops": [[0, "graph-create-ops"]], "Graph Diffusion": [[816, "Graph-Diffusion"]], "Graph Diffusion in GNNs": [[816, "Graph-Diffusion-in-GNNs"]], "Graph Diffusion in Graph Neural Networks": [[816, null]], "Graph Partition Utilities": [[0, "graph-partition-utilities"]], "Graph Positional Encoding Ops:": [[0, "graph-positional-encoding-ops"]], "Graph Prediction Datasets": [[2, "graph-prediction-datasets"]], "Graph Readout": [[727, "graph-readout"]], "Graph Transform Ops": [[0, "graph-transform-ops"]], "Graph Transformations": [[833, "graph-transformations"]], "Graph Transformer Layer": [[817, "Graph-Transformer-Layer"]], "Graph Transformer Model": [[817, "Graph-Transformer-Model"]], "Graph Transformer in a Nutshell": [[817, null]], "Graph Traversal & Message Propagation": [[0, "graph-traversal-message-propagation"]], "Graph building": [[861, "graph-building"]], "Graph checking and graph type specification": [[722, "graph-checking-and-graph-type-specification"]], "Graph embedding": [[857, "graph-embedding"]], "Graph neural networks and its variants": [[852, null], [864, "graph-neural-networks-and-its-variants"]], "Graph partition book": [[4, "graph-partition-book"]], "Graph structure": [[861, "graph-structure"]], "GraphConv": [[367, null], [412, null], [461, null]], "GraphData": [[686, "graphdata"]], "GraphDataLoader": [[213, null]], "Graphormer Layer": [[682, "graphormer-layer"]], "GraphormerLayer": [[444, null]], "GroupRevRes": [[413, null]], "HGTConv": [[414, null]], "Half precision\uc744 \uc0ac\uc6a9\ud55c \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[803, "half-precision"]], "Handle dataset": [[849, "handle-dataset"]], "HeatKernel": [[656, null]], "HeteroEmbedding": [[381, null]], "HeteroGNNExplainer": [[424, null]], "HeteroGraphConv": [[355, null], [382, null], [467, null]], "HeteroGraphConv implementation logic:": [[723, "heterographconv-implementation-logic"]], "HeteroGraphConv \uad6c\ud604 \ub85c\uc9c1:": [[807, "heterographconv"]], "HeteroGraphConv\u7684\u5b9e\u73b0\u903b\u8f91": [[763, "heterographconv"]], "HeteroLinear": [[383, null]], "HeteroPGExplainer": [[425, null]], "HeteroSubgraphX": [[426, null]], "Heterogeneous Graphs": [[724, "heterogeneous-graphs"]], "Heterogeneous Learning Modules": [[15, "heterogeneous-learning-modules"], [16, "heterogeneous-learning-modules"], [17, "heterogeneous-learning-modules"]], "Heterogeneous graph": [[725, "heterogeneous-graph"], [727, "heterogeneous-graph"], [729, "heterogeneous-graph"]], "Heterogeneous graphs": [[715, "heterogeneous-graphs"], [728, "heterogeneous-graphs"]], "Heterogeneous \uadf8\ub798\ud504": [[808, "heterogeneous"], [809, "heterogeneous"], [810, "heterogeneous"], [812, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\ub4e4": [[796, "heterogeneous"], [796, "id5"], [801, "heterogeneous"], [811, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \ub178\ub4dc/\uc5d0\uc9c0 \ud53c\ucc98\ub4e4 \uc0dd\uc131\ud558\uae30": [[779, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uacbd\uc6b0": [[797, "heterogeneous"], [800, "heterogeneous"], [802, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uc5d0\uc9c0\ub4e4\uc5d0 \ub300\ud55c \uc5d0\uc9c0 \ud0c0\uc785 \uc608\uce21\ud558\uae30": [[809, "id3"]], "Homogeneous \uadf8\ub798\ud504, \uc774\ubd84 \uadf8\ub798\ud504(bipartite graph), \uadf8\ub9ac\uace0 MFG\ub97c \uc704\ud55c \ubaa8\ub4c8 \uc791\uc131\ud558\uae30": [[801, "homogeneous-bipartite-graph-mfg"]], "Homophily Measures": [[0, "homophily-measures"]], "How DGL Handles Computation Dependency\u00b6": [[827, "How-DGL-Handles-Computation-Dependency\u00b6"]], "How DGL implements Transformer with a graph neural network": [[861, "how-dgl-implements-transformer-with-a-graph-neural-network"]], "How Does DGL Represent A Graph?": [[833, null]], "Hyper-threading": [[841, "hyper-threading"]], "Hypergraph Neural Network (HGNN) Layer": [[818, "Hypergraph-Neural-Network-(HGNN)-Layer"]], "Hypergraph Neural Networks": [[818, null]], "Hypergraphs": [[818, "Hypergraphs"]], "ICEWS18Dataset": [[166, null]], "ID Conversion Utilities": [[692, "id-conversion-utilities"]], "ID mapping": [[694, "id-mapping"]], "ID \ub9e4\ud551": [[779, "id"]], "Implement LGNN in DGL": [[850, "implement-lgnn-in-dgl"]], "Implement R-GCN in DGL": [[849, "implement-r-gcn-in-dgl"]], "Implementing Offline Inference": [[713, "implementing-offline-inference"]], "Implementing \\text{fuse} as sparse matrix multiplication": [[850, "implementing-text-fuse-as-sparse-matrix-multiplication"]], "Implementing \\text{prev} and \\text{deg} as tensor operation": [[850, "implementing-text-prev-and-text-deg-as-tensor-operation"]], "Implementing \\text{radius} as message passing in DGL": [[850, "implementing-text-radius-as-message-passing-in-dgl"]], "Importing Packages": [[867, "importing-packages"]], "Improve Scalability on Multi-Core CPUs": [[840, null]], "InSubgraphSampler": [[298, null]], "Index": [[813, "index"]], "Inference": [[845, "inference"]], "Initialization": [[4, "initialization"]], "Initialization of the DGL distributed module": [[691, "initialization-of-the-dgl-distributed-module"]], "Initialize network communication": [[844, "initialize-network-communication"], [845, "initialize-network-communication"]], "Initializing a DGL Diagonal Sparse Matrix": [[820, "Initializing-a-DGL-Diagonal-Sparse-Matrix"]], "Input format": [[693, "input-format"]], "Install DGL package": [[825, "Install-DGL-package"], [827, "Install-DGL-package"], [830, "Install-DGL-package"], [831, "Install-DGL-package"]], "Install and Setup": [[814, null]], "Install from Conda or Pip": [[814, "install-from-conda-or-pip"]], "Install from source": [[814, "install-from-source"]], "Installation": [[840, "installation"]], "Instantiate OnDiskDataset": [[830, "Instantiate-OnDiskDataset"], [831, "Instantiate-OnDiskDataset"]], "Integrated Benchmarks": [[821, "integrated-benchmarks"]], "Intel": [[841, "intel"]], "Introducing attention to GCN": [[851, "introducing-attention-to-gcn"]], "Introduction": [[857, "introduction"]], "ItemSampler": [[7, "itemsampler"], [299, null]], "ItemSet": [[7, "itemset"], [300, null]], "ItemSetDict": [[301, null]], "JSON/GML Format": [[698, "json-gml-format"]], "JSON/GML \u683c\u5f0f": [[742, "json-gml"]], "JSON/GML \ud3ec\uba67": [[783, "json-gml"]], "JumpingKnowledge": [[453, null]], "KHopGraph": [[657, null]], "KNNGraph": [[429, null]], "KarateClubDataset": [[167, null]], "Key ideas of Capsule": [[860, "key-ideas-of-capsule"]], "Key ideas of R-GCN": [[849, "key-ideas-of-r-gcn"]], "Label Informativeness Measures": [[0, "label-informativeness-measures"]], "LabelPropagation": [[454, null]], "LaborSampler": [[214, null]], "LapPE": [[658, null]], "LapPosEncoder": [[445, null]], "Launch the distributed training job": [[844, "launch-the-distributed-training-job"]], "LayerNeighborSampler": [[302, null]], "LazyFeature": [[221, null]], "LegacyDataset": [[303, null]], "LegacyTUDataset": [[168, null]], "Line Graph Neural Network": [[850, null]], "Line graph neural network key ideas": [[850, "line-graph-neural-network-key-ideas"]], "LineGraph": [[659, null]], "Link Prediction": [[825, null]], "Link Prediction Task": [[830, "Link-Prediction-Task"], [831, "Link-Prediction-Task"]], "Link Prediction using Graph Neural Networks": [[835, null]], "Linux": [[814, "linux"]], "Load balancing": [[694, "load-balancing"]], "Load partitioned graphs": [[694, "load-partitioned-graphs"]], "Loading Cora Dataset": [[832, "loading-cora-dataset"]], "Loading Data": [[818, "Loading-Data"], [836, "loading-data"]], "Loading Dataset": [[825, "Loading-Dataset"], [827, "Loading-Dataset"]], "Loading Graphs from Disk": [[698, "loading-graphs-from-disk"]], "Loading Heterographs from Disk": [[702, "loading-heterographs-from-disk"]], "Loading and Saving Graphs": [[833, "loading-and-saving-graphs"]], "Loading graph and features": [[835, "loading-graph-and-features"]], "METIS partition algorithm": [[693, "metis-partition-algorithm"]], "MNISTSuperPixelDataset": [[169, null]], "MUTAGDataset": [[170, null]], "MXNet backend": [[814, "mxnet-backend"]], "Main Function for Each Process": [[866, "main-function-for-each-process"]], "Main Loop": [[854, "main-loop"]], "Main class of Transformer graph": [[861, "main-class-of-transformer-graph"]], "Make Your Own Dataset": [[837, null]], "Matrix Multiplication": [[12, "matrix-multiplication"]], "Matrix multiplication": [[820, "Matrix-multiplication"]], "Matrix transformations": [[820, "Matrix-transformations"]], "MaxPooling": [[375, null], [434, null], [468, null]], "Message Passing Paradigm": [[704, "message-passing-paradigm"]], "Message Passing Review": [[826, "Message-Passing-Review"]], "Message Passing with Edge Weights": [[726, "message-passing-with-edge-weights"]], "Message aggregation": [[861, "message-aggregation"]], "Message computation": [[861, "message-computation"]], "Message functions": [[5, "message-functions"]], "Message passing": [[861, "message-passing"]], "Message passing and GNNs": [[834, "message-passing-and-gnns"]], "Message passing and reducing": [[722, "message-passing-and-reducing"]], "Message-Passing with Half Precision": [[719, "message-passing-with-half-precision"]], "MetaPath2Vec": [[384, null]], "MinesweeperDataset": [[171, null]], "Mini-batch Data Loading": [[867, "mini-batch-data-loading"]], "MiniBatch": [[7, "minibatch"], [304, null]], "MiniBatchTransformer": [[305, null]], "MiniGCDataset": [[172, null]], "Misc": [[1, "misc"]], "Model Definition": [[727, "model-definition"]], "Model Forward": [[682, "model-forward"]], "Model Implementation Difference from Node Classification": [[725, "model-implementation-difference-from-node-classification"]], "Model Initialization": [[866, "model-initialization"]], "Model Overview": [[848, "model-overview"]], "Model implementation": [[860, "model-implementation"]], "More customization": [[834, "more-customization"]], "MovieLensDataset": [[173, null]], "Multi-head attention": [[851, "multi-head-attention"], [861, "multi-head-attention"]], "Multi-head attention layer": [[861, "multi-head-attention-layer"]], "MultiLayerFullNeighborSampler": [[215, null]], "Mutating topology": [[1, "mutating-topology"]], "NFS client side setup (ubuntu only)": [[844, "nfs-client-side-setup-ubuntu-only"]], "NFS server side setup (ubuntu only)": [[844, "nfs-server-side-setup-ubuntu-only"]], "NNConv": [[368, null], [415, null]], "Negative Samplers for Link Prediction": [[3, "negative-samplers-for-link-prediction"]], "Negative sampling": [[11, "negative-sampling"]], "Negative \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[800, "negative"]], "NegativeSampler": [[7, "negativesampler"], [306, null]], "Neighbor Matching": [[6, "neighbor-matching"]], "Neighbor Sampling Overview": [[826, null], [826, "id1"]], "Neighbor sampling": [[11, "neighbor-sampling"]], "NeighborSampler": [[216, null], [307, null]], "Network Embedding Modules": [[16, "network-embedding-modules"]], "Node Classification": [[827, null]], "Node Classification Task": [[830, "Node-Classification-Task"], [831, "Node-Classification-Task"]], "Node Classification with DGL": [[832, null]], "Node Prediction Datasets": [[2, "node-prediction-datasets"]], "Node embedding optimizer": [[10, "node-embedding-optimizer"]], "Node-wise User-defined Function": [[20, "node-wise-user-defined-function"]], "NodeData": [[686, "nodedata"]], "NodeEmbedding": [[452, null]], "NodeShuffle": [[660, null]], "Non-linear activation functions": [[12, "non-linear-activation-functions"], [820, "Non-linear-activation-functions"]], "OnDiskDataset": [[308, null]], "OnDiskDataset for Heterogeneous Graph": [[830, null]], "OnDiskDataset for Homogeneous Graph": [[831, null]], "One layer in LGNN, algorithm structure": [[850, "one-layer-in-lgnn-algorithm-structure"]], "OpenMP settings": [[841, "openmp-settings"]], "Operations on Sparse Matrix": [[820, "Operations-on-Sparse-Matrix"]], "Operators": [[12, "operators"]], "Organize Data into YAML File": [[830, "Organize-Data-into-YAML-File"], [831, "Organize-Data-into-YAML-File"]], "Output format": [[693, "output-format"]], "Overview": [[724, "overview"], [725, "overview"], [727, "overview"], [728, "overview"], [729, "overview"], [824, "overview"]], "Overview of Graph Classification with GNN": [[836, "overview-of-graph-classification-with-gnn"]], "Overview of Link Prediction with GNN": [[835, "overview-of-link-prediction-with-gnn"]], "Overview of Neighborhood Sampling Approaches": [[709, "overview-of-neighborhood-sampling-approaches"]], "Overview of Node Classification with GNN": [[832, "overview-of-node-classification-with-gnn"]], "PATTERNDataset": [[174, null]], "PGExplainer": [[427, null]], "PNAConv": [[416, null]], "PPIDataset": [[175, null]], "PPR": [[661, null]], "Paper Study with DGL": [[864, null]], "ParMETIS Installation": [[693, "parmetis-installation"]], "ParMETIS \uacb0\uacfc\ub4e4\uc744 DGLGraph\ub85c \ubcc0\ud658\ud558\uae30": [[779, "parmetis-dglgraph"]], "ParMETIS \uc124\uce58": [[779, "parmetis"]], "ParMETIS \uc2e4\ud589\ud558\uae30 \ubc0f \uacb0\uacfc \ud3ec\uba67\ub4e4": [[779, "id9"]], "ParMETIS\ub97c \uc704\ud55c \uc785\ub825 \ud3ec\uba67": [[779, "id8"]], "Parallel METIS partitioning": [[693, "parallel-metis-partitioning"]], "Partition": [[4, "partition"]], "Partition a graph": [[844, "partition-a-graph"], [845, "partition-a-graph"]], "Path Encoding": [[682, "path-encoding"]], "PathEncoder": [[446, null]], "PerSourceUniform": [[227, null]], "Performance Benchmarks": [[821, null]], "Positive graph, negative graph, and apply_edges": [[835, "positive-graph-negative-graph-and-apply-edges"]], "Predicting Edge Type of an Existing Edge on a Heterogeneous Graph": [[725, "predicting-edge-type-of-an-existing-edge-on-a-heterogeneous-graph"]], "Prepare Data": [[680, null]], "Prepare training and testing sets": [[835, "prepare-training-and-testing-sets"]], "Preprocessing and postprocessing": [[861, "preprocessing-and-postprocessing"]], "Processing Graph Classification datasets": [[688, "processing-graph-classification-datasets"]], "Processing Node Classification datasets": [[688, "processing-node-classification-datasets"]], "Processing dataset for Link Prediction datasets": [[688, "processing-dataset-for-link-prediction-datasets"]], "Protein-protein interaction (PPI) networks": [[851, "protein-protein-interaction-ppi-networks"]], "PubmedGraphDataset": [[176, null]], "Put everything together": [[851, "put-everything-together"]], "Put it all together": [[861, "put-it-all-together"]], "Putting it together": [[854, "putting-it-together"], [857, "putting-it-together"]], "PyTorch backend": [[814, "pytorch-backend"]], "QM7bDataset": [[177, null]], "QM9Dataset": [[178, null]], "QM9EdgeDataset": [[179, null]], "Querying Graph Structures": [[833, "querying-graph-structures"]], "Querying and manipulating batch information": [[1, "querying-and-manipulating-batch-information"]], "Querying and manipulating node/edge ID type": [[1, "querying-and-manipulating-node-edge-id-type"]], "Querying and manipulating sparse format": [[1, "querying-and-manipulating-sparse-format"]], "Querying graph structure": [[1, "querying-graph-structure"]], "Querying metagraph structure": [[1, "querying-metagraph-structure"]], "QuestionsDataset": [[180, null]], "Quickstart": [[820, null]], "R-GCN layers": [[849, "r-gcn-layers"]], "RadiusGraph": [[430, null]], "Random walk": [[11, "random-walk"]], "RandomWalkPE": [[662, null]], "RedditDataset": [[181, null]], "Reduce functions": [[5, "reduce-functions"]], "Reduce operations": [[820, "Reduce-operations"]], "Reference to the distributed graph": [[844, "reference-to-the-distributed-graph"], [845, "reference-to-the-distributed-graph"]], "RelGraphConv": [[369, null], [417, null], [462, null]], "Relation with Message Passing APIs": [[9, "relation-with-message-passing-apis"]], "Relational Graph Convolutional Network": [[849, null]], "RemoveSelfLoop": [[663, null]], "Removing edges in the minibatch from the original graph for neighbor sampling": [[711, "removing-edges-in-the-minibatch-from-the-original-graph-for-neighbor-sampling"]], "Resources": [[822, null]], "Results": [[14, "results"]], "Revisit classic models from a graph perspective": [[862, null], [864, "revisit-classic-models-from-a-graph-perspective"]], "Roadmap": [[683, "roadmap"], [696, "roadmap"], [704, "roadmap"], [709, "roadmap"], [720, "roadmap"], [724, "roadmap"]], "RomanEmpireDataset": [[182, null]], "RowFeatNormalizer": [[664, null]], "Run ParMETIS and output format": [[693, "run-parmetis-and-output-format"]], "SAGEConv": [[370, null], [418, null], [463, null]], "SAINTSampler": [[217, null]], "SBMMixtureDataset": [[183, null]], "SGConv": [[371, null], [419, null], [464, null]], "SIGNDiffusion": [[665, null]], "SSH Access": [[844, "ssh-access"]], "SSTDataset": [[184, null]], "SVDPE": [[666, null]], "SampledSubgraph": [[309, null]], "SampledSubgraphImpl": [[310, null]], "Sampler": [[218, null]], "Sampler Transformations": [[3, "sampler-transformations"]], "Sampler for Heterogeneous Graphs": [[710, "sampler-for-heterogeneous-graphs"]], "Samplers": [[3, "samplers"]], "SamplingGraph": [[311, null]], "Scenarios": [[824, "scenarios"]], "Score Modules for Link Prediction and Knowledge Graph Completion": [[16, "score-modules-for-link-prediction-and-knowledge-graph-completion"]], "Segment Reduce Module": [[9, "segment-reduce-module"]], "SegmentedKNNGraph": [[431, null]], "Sequential": [[379, null], [455, null]], "Set up distributed training environment": [[844, "set-up-distributed-training-environment"], [845, "set-up-distributed-training-environment"]], "Set2Set": [[376, null], [435, null]], "SetTransformerDecoder": [[436, null]], "SetTransformerEncoder": [[437, null]], "ShaDowKHopSampler": [[219, null]], "Simple implementation": [[861, "simple-implementation"]], "Single Machine Multi-GPU Minibatch Graph Classification": [[866, null]], "Single Machine Multi-GPU Minibatch Node Classification": [[867, null]], "Softmax": [[820, "Softmax"]], "SortPooling": [[377, null], [438, null], [469, null]], "Sparse Matrix": [[820, "Sparse-Matrix"]], "Sparse Multi-head Attention": [[817, "Sparse-Multi-head-Attention"]], "Sparse matrix class": [[12, "sparse-matrix-class"]], "Spatial Encoding": [[682, "spatial-encoding"]], "SpatialEncoder": [[447, null]], "SpatialEncoder3d": [[448, null]], "Spawning Trainer Processes": [[867, "spawning-trainer-processes"]], "Specification": [[694, "specification"]], "Speeding up with built-in functions": [[861, "speeding-up-with-built-in-functions"]], "Split and Load Partitions": [[4, "split-and-load-partitions"]], "Split workloads": [[691, "split-workloads"]], "SquirrelDataset": [[185, null]], "Step 1": [[840, "step-1"]], "Step 1: Batching": [[854, "step-1-batching"]], "Step 1: Setup and graph initialization": [[860, "step-1-setup-and-graph-initialization"]], "Step 2": [[840, "step-2"]], "Step 2: Define message passing functions": [[860, "step-2-define-message-passing-functions"]], "Step 2: Tree-LSTM cell with message-passing APIs": [[854, "step-2-tree-lstm-cell-with-message-passing-apis"]], "Step 3": [[840, "step-3"]], "Step 3: Define traversal": [[854, "step-3-define-traversal"]], "Step 3: Testing": [[860, "step-3-testing"]], "Step 4": [[840, "step-4"]], "Step 5": [[840, "step-5"]], "Step 6": [[840, "step-6"]], "Step 7": [[840, "step-7"]], "Step 8": [[840, "step-8"]], "Step.1 Graph Partitioning": [[694, "step-1-graph-partitioning"]], "Step.2 Data Dispatching": [[694, "step-2-data-dispatching"]], "Subgraph Extraction Ops": [[0, "subgraph-extraction-ops"]], "SubgraphSampler": [[7, "subgraphsampler"], [312, null]], "SubgraphX": [[428, null]], "Subset": [[196, null]], "SumPooling": [[378, null], [439, null], [470, null]], "Supervised community detection task with the Cora dataset": [[850, "supervised-community-detection-task-with-the-cora-dataset"]], "Supported Data types": [[9, "supported-data-types"]], "Supporting Multiple Platforms": [[21, "supporting-multiple-platforms"]], "System requirements": [[814, "system-requirements"]], "TAGConv": [[372, null], [420, null]], "TUDataset": [[186, null]], "TWIRLSConv": [[421, null]], "TWIRLSUnfoldingAndAttention": [[422, null]], "Task": [[313, null]], "Task and the dataset": [[861, "task-and-the-dataset"]], "Tensorflow backend": [[814, "tensorflow-backend"]], "TexasDataset": [[187, null]], "The DGMG class": [[857, "the-dgmg-class"]], "The second task, link prediction": [[849, "the-second-task-link-prediction"]], "The task and the dataset": [[854, "the-task-and-the-dataset"]], "Tips for making chunked graph data": [[694, "tips-for-making-chunked-graph-data"]], "ToLevi": [[667, null]], "ToSimple": [[668, null]], "TolokersDataset": [[188, null]], "Top-level": [[686, "top-level"]], "TorchBasedFeature": [[314, null]], "TorchBasedFeatureStore": [[315, null]], "Training": [[816, "Training"], [817, "Training"], [861, "training"]], "Training Loop": [[711, "training-loop"], [716, "training-loop"], [727, "training-loop"], [836, "training-loop"], [867, "training-loop"]], "Training a GNN for Graph Classification": [[836, null]], "Training and Evaluation": [[818, "Training-and-Evaluation"]], "Training and inference": [[850, "training-and-inference"]], "Training loop": [[714, "training-loop"], [725, "training-loop"], [728, "training-loop"], [729, "training-loop"], [834, "training-loop"], [835, "training-loop"], [844, "training-loop"], [845, "training-loop"], [849, "training-loop"]], "Training on CPUs": [[842, null]], "Training on GPU": [[832, "training-on-gpu"]], "Training on Multiple GPUs": [[868, null]], "Training the GCN": [[815, "Training-the-GCN"], [832, "training-the-gcn"]], "TransE": [[450, null]], "TransR": [[451, null]], "Transformer as a Graph Neural Network": [[861, null]], "Transforming graph": [[1, "transforming-graph"]], "Tree-LSTM in DGL": [[854, null]], "TreeCycleDataset": [[189, null]], "TreeGridDataset": [[190, null]], "Tutorials: dgl.sparse": [[819, null]], "TypedLinear": [[385, null]], "UVA and GPU support for PinSAGESampler/RandomWalkNeighborSampler": [[712, "uva-and-gpu-support-for-pinsagesampler-randomwalkneighborsampler"]], "Understand Graph Attention Network": [[851, null]], "Uniform": [[228, null]], "UniformNegativeSampler": [[316, null]], "Unit tests": [[21, "unit-tests"]], "Update feature after reducing for output": [[722, "update-feature-after-reducing-for-output"]], "Update node embeddings via graph propagation": [[857, "update-node-embeddings-via-graph-propagation"]], "User Guide": [[703, null]], "User-defined Functions": [[20, null]], "Using CUDA UVA-based neighborhood sampling in DGL data loaders": [[712, "using-cuda-uva-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using GPU-based neighbor sampling with DGL functions": [[712, "using-gpu-based-neighbor-sampling-with-dgl-functions"]], "Using GPU-based neighborhood sampling in DGL data loaders": [[712, "using-gpu-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using NN Modules with Edge Weights": [[726, "using-nn-modules-with-edge-weights"]], "Using Node/edge features": [[1, "using-node-edge-features"]], "Utilities": [[0, "utilities"], [2, "utilities"], [7, "utilities"]], "Utility Class and Functions for Feature Prefetching": [[3, "utility-class-and-functions-for-feature-prefetching"]], "Utility Modules": [[15, "utility-modules"], [16, "utility-modules"]], "Utility Modules for Graph Transformer": [[16, "utility-modules-for-graph-transformer"]], "Visualization": [[861, "visualization"]], "Visualize training progress": [[850, "visualize-training-progress"]], "Visualizing and understanding attention learned": [[851, "visualizing-and-understanding-attention-learned"]], "WN18Dataset": [[191, null]], "WeightAndSum": [[440, null]], "WeightBasis": [[456, null]], "Welcome to Deep Graph Library Tutorials and Documentation": [[813, null]], "What is a line-graph?": [[850, "what-is-a-line-graph"]], "What\u2019s next": [[836, "whats-next"]], "What\u2019s next?": [[832, "whats-next"], [833, "whats-next"], [834, "whats-next"], [851, "what-s-next"]], "WikiCSDataset": [[192, null]], "Windows": [[814, "windows"]], "WisconsinDataset": [[193, null]], "Working with Multiple Types": [[702, "working-with-multiple-types"]], "Working with different backends": [[814, "working-with-different-backends"]], "Write your own GNN module": [[834, null]], "Writing Neural Network Model": [[727, "writing-neural-network-model"]], "Writing modules that work on homogeneous graphs, bipartite graphs, and MFGs": [[715, "writing-modules-that-work-on-homogeneous-graphs-bipartite-graphs-and-mfgs"]], "Writing neural network model": [[729, "writing-neural-network-model"]], "YAML specification": [[829, null]], "YelpDataset": [[194, null]], "ZINCDataset": [[195, null]], "add_node_property_split": [[197, null]], "add_nodepred_split": [[198, null]], "check_sha1": [[199, null]], "dataset_name": [[829, "dataset-name"]], "dgl": [[0, null]], "dgl.DGLGraph": [[1, null]], "dgl.DGLGraph.__getitem__": [[26, null]], "dgl.DGLGraph.add_edges": [[27, null]], "dgl.DGLGraph.add_nodes": [[28, null]], "dgl.DGLGraph.add_self_loop": [[29, null]], "dgl.DGLGraph.adj": [[30, null]], "dgl.DGLGraph.adj_external": [[31, null]], "dgl.DGLGraph.adj_tensors": [[32, null]], "dgl.DGLGraph.adjacency_matrix": [[33, null]], "dgl.DGLGraph.apply_edges": [[34, null]], "dgl.DGLGraph.apply_nodes": [[35, null]], "dgl.DGLGraph.batch_num_edges": [[36, null]], "dgl.DGLGraph.batch_num_nodes": [[37, null]], "dgl.DGLGraph.batch_size": [[38, null]], "dgl.DGLGraph.canonical_etypes": [[39, null]], "dgl.DGLGraph.cpu": [[40, null]], "dgl.DGLGraph.create_formats_": [[41, null]], "dgl.DGLGraph.device": [[42, null]], "dgl.DGLGraph.dstdata": [[43, null]], "dgl.DGLGraph.dstnodes": [[44, null]], "dgl.DGLGraph.dsttypes": [[45, null]], "dgl.DGLGraph.edata": [[46, null]], "dgl.DGLGraph.edge_attr_schemes": [[47, null]], "dgl.DGLGraph.edge_ids": [[48, null]], "dgl.DGLGraph.edge_subgraph": [[49, null]], "dgl.DGLGraph.edge_type_subgraph": [[50, null]], "dgl.DGLGraph.edges": [[51, null]], "dgl.DGLGraph.etypes": [[52, null]], "dgl.DGLGraph.filter_edges": [[53, null]], "dgl.DGLGraph.filter_nodes": [[54, null]], "dgl.DGLGraph.find_edges": [[55, null]], "dgl.DGLGraph.formats": [[56, null]], "dgl.DGLGraph.has_edges_between": [[57, null]], "dgl.DGLGraph.has_nodes": [[58, null]], "dgl.DGLGraph.idtype": [[59, null]], "dgl.DGLGraph.in_degrees": [[60, null]], "dgl.DGLGraph.in_edges": [[61, null]], "dgl.DGLGraph.inc": [[62, null]], "dgl.DGLGraph.incidence_matrix": [[63, null]], "dgl.DGLGraph.int": [[64, null]], "dgl.DGLGraph.is_homogeneous": [[65, null]], "dgl.DGLGraph.is_multigraph": [[66, null]], "dgl.DGLGraph.is_pinned": [[67, null]], "dgl.DGLGraph.is_unibipartite": [[68, null]], "dgl.DGLGraph.line_graph": [[69, null]], "dgl.DGLGraph.local_scope": [[70, null]], "dgl.DGLGraph.long": [[71, null]], "dgl.DGLGraph.metagraph": [[72, null]], "dgl.DGLGraph.multi_update_all": [[73, null]], "dgl.DGLGraph.ndata": [[74, null]], "dgl.DGLGraph.node_attr_schemes": [[75, null]], "dgl.DGLGraph.node_type_subgraph": [[76, null]], "dgl.DGLGraph.nodes": [[77, null]], "dgl.DGLGraph.ntypes": [[78, null]], "dgl.DGLGraph.num_dst_nodes": [[79, null]], "dgl.DGLGraph.num_edges": [[80, null]], "dgl.DGLGraph.num_nodes": [[81, null]], "dgl.DGLGraph.num_src_nodes": [[82, null]], "dgl.DGLGraph.number_of_dst_nodes": [[83, null]], "dgl.DGLGraph.number_of_edges": [[84, null]], "dgl.DGLGraph.number_of_nodes": [[85, null]], "dgl.DGLGraph.number_of_src_nodes": [[86, null]], "dgl.DGLGraph.out_degrees": [[87, null]], "dgl.DGLGraph.out_edges": [[88, null]], "dgl.DGLGraph.pin_memory_": [[89, null]], "dgl.DGLGraph.predecessors": [[90, null]], "dgl.DGLGraph.prop_edges": [[91, null]], "dgl.DGLGraph.prop_nodes": [[92, null]], "dgl.DGLGraph.pull": [[93, null]], "dgl.DGLGraph.push": [[94, null]], "dgl.DGLGraph.remove_edges": [[95, null]], "dgl.DGLGraph.remove_nodes": [[96, null]], "dgl.DGLGraph.remove_self_loop": [[97, null]], "dgl.DGLGraph.reorder_graph": [[98, null]], "dgl.DGLGraph.reverse": [[99, null]], "dgl.DGLGraph.send_and_recv": [[100, null]], "dgl.DGLGraph.set_batch_num_edges": [[101, null]], "dgl.DGLGraph.set_batch_num_nodes": [[102, null]], "dgl.DGLGraph.srcdata": [[103, null]], "dgl.DGLGraph.srcnodes": [[104, null]], "dgl.DGLGraph.srctypes": [[105, null]], "dgl.DGLGraph.subgraph": [[106, null]], "dgl.DGLGraph.successors": [[107, null]], "dgl.DGLGraph.to": [[108, null]], "dgl.DGLGraph.to_canonical_etype": [[109, null]], "dgl.DGLGraph.to_cugraph": [[110, null]], "dgl.DGLGraph.to_simple": [[111, null]], "dgl.DGLGraph.unpin_memory_": [[112, null]], "dgl.DGLGraph.update_all": [[113, null]], "dgl.add_edges": [[114, null]], "dgl.add_nodes": [[115, null]], "dgl.add_reverse_edges": [[116, null]], "dgl.add_self_loop": [[117, null]], "dgl.adj_product_graph": [[118, null]], "dgl.adj_sum_graph": [[119, null]], "dgl.adjusted_homophily": [[120, null]], "dgl.apply_each": [[121, null]], "dgl.batch": [[122, null]], "dgl.bfs_edges_generator": [[123, null]], "dgl.bfs_nodes_generator": [[124, null]], "dgl.bipartite_from_networkx": [[125, null]], "dgl.bipartite_from_scipy": [[126, null]], "dgl.block_to_graph": [[127, null]], "dgl.broadcast_edges": [[128, null]], "dgl.broadcast_nodes": [[129, null]], "dgl.compact_graphs": [[130, null]], "dgl.create_block": [[131, null]], "dgl.data": [[2, null]], "dgl.dataloading": [[3, null]], "dgl.dataloading.BlockSampler": [[208, null]], "dgl.dataloading.as_edge_prediction_sampler": [[220, null]], "dgl.dfs_edges_generator": [[229, null]], "dgl.dfs_labeled_edges_generator": [[230, null]], "dgl.distributed": [[4, null]], "dgl.distributed.edge_split": [[231, null]], "dgl.distributed.find_edges": [[232, null]], "dgl.distributed.in_subgraph": [[233, null]], "dgl.distributed.initialize": [[234, null]], "dgl.distributed.load_partition": [[235, null]], "dgl.distributed.load_partition_book": [[236, null]], "dgl.distributed.load_partition_feats": [[237, null]], "dgl.distributed.node_split": [[238, null]], "dgl.distributed.partition_graph": [[239, null]], "dgl.distributed.sample_etype_neighbors": [[240, null]], "dgl.distributed.sample_neighbors": [[241, null]], "dgl.double_radius_node_labeling": [[242, null]], "dgl.edge_homophily": [[243, null]], "dgl.edge_label_informativeness": [[244, null]], "dgl.edge_subgraph": [[245, null]], "dgl.edge_type_subgraph": [[246, null]], "dgl.from_cugraph": [[247, null]], "dgl.from_networkx": [[248, null]], "dgl.from_scipy": [[249, null]], "dgl.function": [[5, null]], "dgl.function.copy_e": [[250, null]], "dgl.function.copy_u": [[251, null]], "dgl.function.e_add_u": [[252, null]], "dgl.function.e_add_v": [[253, null]], "dgl.function.e_div_u": [[254, null]], "dgl.function.e_div_v": [[255, null]], "dgl.function.e_dot_u": [[256, null]], "dgl.function.e_dot_v": [[257, null]], "dgl.function.e_mul_u": [[258, null]], "dgl.function.e_mul_v": [[259, null]], "dgl.function.e_sub_u": [[260, null]], "dgl.function.e_sub_v": [[261, null]], "dgl.function.max": [[262, null]], "dgl.function.mean": [[263, null]], "dgl.function.min": [[264, null]], "dgl.function.sum": [[265, null]], "dgl.function.u_add_e": [[266, null]], "dgl.function.u_add_v": [[267, null]], "dgl.function.u_div_e": [[268, null]], "dgl.function.u_div_v": [[269, null]], "dgl.function.u_dot_e": [[270, null]], "dgl.function.u_dot_v": [[271, null]], "dgl.function.u_mul_e": [[272, null]], "dgl.function.u_mul_v": [[273, null]], "dgl.function.u_sub_e": [[274, null]], "dgl.function.u_sub_v": [[275, null]], "dgl.function.v_add_e": [[276, null]], "dgl.function.v_add_u": [[277, null]], "dgl.function.v_div_e": [[278, null]], "dgl.function.v_div_u": [[279, null]], "dgl.function.v_dot_e": [[280, null]], "dgl.function.v_dot_u": [[281, null]], "dgl.function.v_mul_e": [[282, null]], "dgl.function.v_mul_u": [[283, null]], "dgl.function.v_sub_e": [[284, null]], "dgl.function.v_sub_u": [[285, null]], "dgl.geometry": [[6, null]], "dgl.graph": [[286, null]], "dgl.graphbolt.add_reverse_edges": [[317, null]], "dgl.graphbolt.compact_csc_format": [[318, null]], "dgl.graphbolt.etype_str_to_tuple": [[319, null]], "dgl.graphbolt.etype_tuple_to_str": [[320, null]], "dgl.graphbolt.exclude_seed_edges": [[321, null]], "dgl.graphbolt.expand_indptr": [[322, null]], "dgl.graphbolt.from_dglgraph": [[323, null]], "dgl.graphbolt.fused_csc_sampling_graph": [[324, null]], "dgl.graphbolt.index_select": [[325, null]], "dgl.graphbolt.isin": [[326, null]], "dgl.graphbolt.load_from_shared_memory": [[327, null]], "dgl.graphbolt.seed": [[328, null]], "dgl.graphbolt.unique_and_compact": [[329, null]], "dgl.graphbolt.unique_and_compact_csc_formats": [[330, null]], "dgl.heterograph": [[331, null]], "dgl.in_subgraph": [[332, null]], "dgl.is_libxsmm_enabled": [[333, null]], "dgl.khop_adj": [[334, null]], "dgl.khop_graph": [[335, null]], "dgl.khop_in_subgraph": [[336, null]], "dgl.khop_out_subgraph": [[337, null]], "dgl.knn_graph": [[338, null]], "dgl.lap_pe": [[339, null]], "dgl.laplacian_lambda_max": [[340, null]], "dgl.line_graph": [[341, null]], "dgl.linkx_homophily": [[342, null]], "dgl.load_graphs": [[343, null]], "dgl.max_edges": [[344, null]], "dgl.max_nodes": [[345, null]], "dgl.mean_edges": [[346, null]], "dgl.mean_nodes": [[347, null]], "dgl.merge": [[348, null]], "dgl.metapath_reachable_graph": [[349, null]], "dgl.metis_partition": [[350, null]], "dgl.metis_partition_assignment": [[351, null]], "dgl.multiprocessing": [[8, null]], "dgl.multiprocessing.pytorch.call_once_and_share": [[352, null]], "dgl.multiprocessing.pytorch.shared_tensor": [[353, null]], "dgl.nn (MXNet)": [[15, null]], "dgl.nn (PyTorch)": [[16, null]], "dgl.nn (TensorFlow)": [[17, null]], "dgl.nn.functional": [[18, null]], "dgl.nn.functional.edge_softmax": [[354, null]], "dgl.node_homophily": [[471, null]], "dgl.node_label_informativeness": [[472, null]], "dgl.node_subgraph": [[473, null]], "dgl.node_type_subgraph": [[474, null]], "dgl.norm_by_dst": [[475, null]], "dgl.ops": [[9, null]], "dgl.ops.copy_e_max": [[476, null]], "dgl.ops.copy_e_mean": [[477, null]], "dgl.ops.copy_e_min": [[478, null]], "dgl.ops.copy_e_sum": [[479, null]], "dgl.ops.copy_u": [[480, null]], "dgl.ops.copy_u_max": [[481, null]], "dgl.ops.copy_u_mean": [[482, null]], "dgl.ops.copy_u_min": [[483, null]], "dgl.ops.copy_u_sum": [[484, null]], "dgl.ops.copy_v": [[485, null]], "dgl.ops.e_add_u": [[486, null]], "dgl.ops.e_add_v": [[487, null]], "dgl.ops.e_div_u": [[488, null]], "dgl.ops.e_div_v": [[489, null]], "dgl.ops.e_dot_u": [[490, null]], "dgl.ops.e_dot_v": [[491, null]], "dgl.ops.e_mul_u": [[492, null]], "dgl.ops.e_mul_v": [[493, null]], "dgl.ops.e_sub_u": [[494, null]], "dgl.ops.e_sub_v": [[495, null]], "dgl.ops.gather_mm": [[496, null]], "dgl.ops.gsddmm": [[497, null]], "dgl.ops.gspmm": [[498, null]], "dgl.ops.segment_mm": [[499, null]], "dgl.ops.segment_reduce": [[500, null]], "dgl.ops.u_add_e": [[501, null]], "dgl.ops.u_add_e_max": [[502, null]], "dgl.ops.u_add_e_mean": [[503, null]], "dgl.ops.u_add_e_min": [[504, null]], "dgl.ops.u_add_e_sum": [[505, null]], "dgl.ops.u_add_v": [[506, null]], "dgl.ops.u_div_e": [[507, null]], "dgl.ops.u_div_e_max": [[508, null]], "dgl.ops.u_div_e_mean": [[509, null]], "dgl.ops.u_div_e_min": [[510, null]], "dgl.ops.u_div_e_sum": [[511, null]], "dgl.ops.u_div_v": [[512, null]], "dgl.ops.u_dot_e": [[513, null]], "dgl.ops.u_dot_v": [[514, null]], "dgl.ops.u_mul_e": [[515, null]], "dgl.ops.u_mul_e_max": [[516, null]], "dgl.ops.u_mul_e_mean": [[517, null]], "dgl.ops.u_mul_e_min": [[518, null]], "dgl.ops.u_mul_e_sum": [[519, null]], "dgl.ops.u_mul_v": [[520, null]], "dgl.ops.u_sub_e": [[521, null]], "dgl.ops.u_sub_e_max": [[522, null]], "dgl.ops.u_sub_e_mean": [[523, null]], "dgl.ops.u_sub_e_min": [[524, null]], "dgl.ops.u_sub_e_sum": [[525, null]], "dgl.ops.u_sub_v": [[526, null]], "dgl.ops.v_add_e": [[527, null]], "dgl.ops.v_add_u": [[528, null]], "dgl.ops.v_div_e": [[529, null]], "dgl.ops.v_div_u": [[530, null]], "dgl.ops.v_dot_e": [[531, null]], "dgl.ops.v_dot_u": [[532, null]], "dgl.ops.v_mul_e": [[533, null]], "dgl.ops.v_mul_u": [[534, null]], "dgl.ops.v_sub_e": [[535, null]], "dgl.ops.v_sub_u": [[536, null]], "dgl.optim": [[10, null]], "dgl.out_subgraph": [[537, null]], "dgl.partition_graph_with_halo": [[538, null]], "dgl.prop_edges": [[539, null]], "dgl.prop_edges_dfs": [[540, null]], "dgl.prop_nodes": [[541, null]], "dgl.prop_nodes_bfs": [[542, null]], "dgl.prop_nodes_topo": [[543, null]], "dgl.radius_graph": [[544, null]], "dgl.rand_bipartite": [[545, null]], "dgl.rand_graph": [[546, null]], "dgl.random_walk_pe": [[547, null]], "dgl.readout_edges": [[548, null]], "dgl.readout_nodes": [[549, null]], "dgl.remove_edges": [[550, null]], "dgl.remove_nodes": [[551, null]], "dgl.remove_self_loop": [[552, null]], "dgl.reorder_graph": [[553, null]], "dgl.reverse": [[554, null]], "dgl.sampling": [[11, null]], "dgl.sampling.PinSAGESampler": [[555, null]], "dgl.sampling.global_uniform_negative_sampling": [[556, null]], "dgl.sampling.node2vec_random_walk": [[557, null]], "dgl.sampling.pack_traces": [[558, null]], "dgl.sampling.random_walk": [[559, null]], "dgl.sampling.sample_labors": [[560, null]], "dgl.sampling.sample_neighbors": [[561, null]], "dgl.sampling.sample_neighbors_biased": [[562, null]], "dgl.sampling.select_topk": [[563, null]], "dgl.save_graphs": [[564, null]], "dgl.seed": [[565, null]], "dgl.segmented_knn_graph": [[566, null]], "dgl.shortest_dist": [[567, null]], "dgl.slice_batch": [[568, null]], "dgl.softmax_edges": [[569, null]], "dgl.softmax_nodes": [[570, null]], "dgl.sort_csc_by_tag": [[571, null]], "dgl.sort_csr_by_tag": [[572, null]], "dgl.sparse": [[12, null]], "dgl.sparse.SparseMatrix.T": [[573, null]], "dgl.sparse.SparseMatrix.coalesce": [[574, null]], "dgl.sparse.SparseMatrix.col": [[575, null]], "dgl.sparse.SparseMatrix.coo": [[576, null]], "dgl.sparse.SparseMatrix.cpu": [[577, null]], "dgl.sparse.SparseMatrix.csc": [[578, null]], "dgl.sparse.SparseMatrix.csr": [[579, null]], "dgl.sparse.SparseMatrix.cuda": [[580, null]], "dgl.sparse.SparseMatrix.device": [[581, null]], "dgl.sparse.SparseMatrix.double": [[582, null]], "dgl.sparse.SparseMatrix.dtype": [[583, null]], "dgl.sparse.SparseMatrix.float": [[584, null]], "dgl.sparse.SparseMatrix.has_duplicate": [[585, null]], "dgl.sparse.SparseMatrix.indices": [[586, null]], "dgl.sparse.SparseMatrix.int": [[587, null]], "dgl.sparse.SparseMatrix.long": [[588, null]], "dgl.sparse.SparseMatrix.neg": [[589, null]], "dgl.sparse.SparseMatrix.nnz": [[590, null]], "dgl.sparse.SparseMatrix.reduce": [[591, null]], "dgl.sparse.SparseMatrix.row": [[592, null]], "dgl.sparse.SparseMatrix.shape": [[593, null]], "dgl.sparse.SparseMatrix.smax": [[594, null]], "dgl.sparse.SparseMatrix.smean": [[595, null]], "dgl.sparse.SparseMatrix.smin": [[596, null]], "dgl.sparse.SparseMatrix.softmax": [[597, null]], "dgl.sparse.SparseMatrix.sum": [[598, null]], "dgl.sparse.SparseMatrix.t": [[599, null]], "dgl.sparse.SparseMatrix.to": [[600, null]], "dgl.sparse.SparseMatrix.to_dense": [[601, null]], "dgl.sparse.SparseMatrix.transpose": [[602, null]], "dgl.sparse.SparseMatrix.val": [[603, null]], "dgl.sparse.add": [[604, null]], "dgl.sparse.bsddmm": [[605, null]], "dgl.sparse.bspmm": [[606, null]], "dgl.sparse.diag": [[607, null]], "dgl.sparse.div": [[608, null]], "dgl.sparse.from_coo": [[609, null]], "dgl.sparse.from_csc": [[610, null]], "dgl.sparse.from_csr": [[611, null]], "dgl.sparse.identity": [[612, null]], "dgl.sparse.matmul": [[613, null]], "dgl.sparse.mul": [[614, null]], "dgl.sparse.power": [[615, null]], "dgl.sparse.sddmm": [[616, null]], "dgl.sparse.softmax": [[617, null]], "dgl.sparse.sp_add_v": [[618, null]], "dgl.sparse.sp_broadcast_v": [[619, null]], "dgl.sparse.sp_div_v": [[620, null]], "dgl.sparse.sp_mul_v": [[621, null]], "dgl.sparse.sp_sub_v": [[622, null]], "dgl.sparse.spmatrix": [[623, null]], "dgl.sparse.spmm": [[624, null]], "dgl.sparse.spspmm": [[625, null]], "dgl.sparse.sub": [[626, null]], "dgl.sparse.val_like": [[627, null]], "dgl.sum_edges": [[628, null]], "dgl.sum_nodes": [[629, null]], "dgl.svd_pe": [[630, null]], "dgl.to_bidirected": [[631, null]], "dgl.to_block": [[632, null]], "dgl.to_cugraph": [[633, null]], "dgl.to_double": [[634, null]], "dgl.to_float": [[635, null]], "dgl.to_half": [[636, null]], "dgl.to_heterogeneous": [[637, null]], "dgl.to_homogeneous": [[638, null]], "dgl.to_networkx": [[639, null]], "dgl.to_simple": [[640, null]], "dgl.to_simple_graph": [[641, null]], "dgl.topk_edges": [[642, null]], "dgl.topk_nodes": [[643, null]], "dgl.topological_nodes_generator": [[644, null]], "dgl.transforms": [[19, null]], "dgl.udf.EdgeBatch.batch_size": [[669, null]], "dgl.udf.EdgeBatch.data": [[670, null]], "dgl.udf.EdgeBatch.dst": [[671, null]], "dgl.udf.EdgeBatch.edges": [[672, null]], "dgl.udf.EdgeBatch.src": [[673, null]], "dgl.udf.NodeBatch.batch_size": [[674, null]], "dgl.udf.NodeBatch.data": [[675, null]], "dgl.udf.NodeBatch.mailbox": [[676, null]], "dgl.udf.NodeBatch.nodes": [[677, null]], "dgl.unbatch": [[678, null]], "dgl.use_libxsmm": [[679, null]], "download": [[200, null]], "edges.csv": [[698, "id2"], [742, "id6"], [783, "id6"]], "extract_archive": [[201, null]], "feature_data": [[829, "feature-data"]], "get_download_dir": [[202, null]], "graph": [[829, "graph"]], "load_info": [[203, null]], "load_labels": [[204, null]], "macOS": [[814, "macos"]], "mask_nodes_by_property": [[205, null]], "nodes.csv": [[698, "id1"], [742, "id5"], [783, "id5"]], "save_info": [[206, null]], "set_dst_lazy_features": [[222, null]], "set_edge_lazy_features": [[223, null]], "set_node_lazy_features": [[224, null]], "set_src_lazy_features": [[225, null]], "split_dataset": [[207, null]], "tasks": [[829, "tasks"]], "v0.4.3 Benchmarks": [[821, "v0-4-3-benchmarks"]], "v0.5 Benchmarks": [[821, "v0-5-benchmarks"]], "v0.6 Benchmarks": [[821, "v0-6-benchmarks"]], "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": [[765, "id3"]], "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": [[742, "id2"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": [[742, "id3"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": [[746, "id4"]], "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": [[746, "id3"]], "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": [[766, "id2"]], "\u5206\u5272\u6570\u636e\u96c6": [[737, "id8"]], "\u5206\u5e03\u5f0f\u56fe": [[737, "id1"]], "\u5206\u5e03\u5f0f\u5d4c\u5165": [[737, "id6"]], "\u5206\u5e03\u5f0f\u5f20\u91cf": [[737, "id5"]], "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": [[737, "id2"]], "\u5206\u5e03\u5f0f\u91c7\u6837": [[737, "id7"]], "\u521b\u5efaDistGraph": [[737, "distgraph"]], "\u521b\u5efa\u5f02\u6784\u56fe": [[746, "id2"]], "\u56fe\u8bfb\u51fa": [[767, "id4"]], "\u5728NN\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": [[766, "nn"]], "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": [[765, "id6"]], "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": [[734, "id2"]], "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": [[734, "id3"]], "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": [[734, "id4"]], "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": [[754, "id4"]], "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[755, "id2"], [759, "id2"]], "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": [[754, "guide-cn-minibatch-customizing-neighborhood-sampler-impl"]], "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": [[756, "id2"]], "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe\u3001\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": [[758, "id2"]], "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": [[746, "id6"]], "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": [[755, "id3"]], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": [[759, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[767, "id10"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": [[758, "id1"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": [[755, "id6"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[769, "guide-cn-training-rgcn-node-classification"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[765, "guide-cn-training-edge-classification-heterogeneous-graph"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": [[754, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[768, "id4"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": [[757, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": [[754, "id7"]], "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": [[764, "guide-cn-training-heterogeneous-graph-example"]], "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": [[767, "id6"]], "\u6279\u6b21\u7684\u56fe": [[767, "id3"]], "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": [[754, "id3"]], "\u6570\u636e\u52a0\u8f7d": [[767, "id9"]], "\u672c\u7ae0\u8def\u7ebf\u56fe": [[730, "id2"], [740, "id2"], [748, "id3"], [753, "id3"], [760, "id1"], [764, "id4"]], "\u6982\u8ff0": [[764, "id2"], [765, "id2"], [767, "id2"], [768, "id2"], [769, "id2"]], "\u6a21\u578b\u5b9a\u4e49": [[767, "id7"]], "\u6a21\u578b\u7684\u8bad\u7ec3": [[755, "id5"], [757, "id4"], [759, "id4"], [765, "id4"], [767, "id8"], [768, "id3"], [769, "id4"]], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": [[762, "id2"]], "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[748, "id2"]], "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": [[754, "id2"]], "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011": [[747, null]], "\u7b2c1\u7ae0\uff1a\u56fe": [[740, null]], "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[748, null]], "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757": [[760, null]], "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [[730, null]], "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [[764, null]], "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3": [[753, null]], "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3": [[736, null]], "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[757, "id2"]], "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [[767, "id5"], [769, "id3"]], "\u805a\u5408\u540e\uff0c\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": [[762, "id3"]], "\u8bbf\u95ee\u56fe\u7ed3\u6784": [[737, "id3"]], "\u8bbf\u95ee\u8282\u70b9/\u8fb9\u6570\u636e": [[737, "id4"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [[757, "id3"], [759, "guide-cn-minibatch-node-classification-model"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": [[755, "id4"]], "\u8d1f\u8f7d\u5747\u8861": [[738, "id2"]], "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": [[762, "id1"]], "\u8fb9\u7c7b\u578b\u5b50\u56fe": [[746, "id5"]], "\u9017\u53f7\u5206\u9694\u503c\uff08CSV\uff09": [[742, "csv"], [746, "csv"]], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": [[753, "id2"]], "\uac1c\uc694": [[808, "id2"], [809, "id1"], [810, "id2"], [811, "id2"], [812, "id1"]], "\uadf8\ub798\ud504 \uad6c\uc870 \uc811\uadfc": [[777, "id1"]], "\uadf8\ub798\ud504 \ub9ac\ub4dc\uc544\uc6c3(readout)": [[810, "readout"]], "\uadf8\ub798\ud504 \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[774, "id2"]], "\uadf8\ub798\ud504 \uccb4\ud06c\uc640 \uadf8\ub798\ud504 \ud0c0\uc785 \uba85\uc138\ud654(graph type specification)": [[806, "graph-type-specification"]], "\uadf8\ub798\ud504\ub4e4\uc758 \ubc30\uce58(batch)": [[810, "batch"]], "\ub178\ub4dc \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[774, "id3"]], "\ub178\ub4dc \ubd84\ub958 \ubaa8\ub378\uacfc \uad6c\ud604\uc0c1\uc758 \ucc28\uc774\uc810": [[809, "id2"]], "\ub178\ub4dc/\uc5d0\uc9c0 \ub370\uc774\ud130 \uc811\uadfc": [[777, "id2"]], "\ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc791\uc131\ud558\uae30": [[810, "id3"], [812, "id2"]], "\ub2e4\uc591\ud55c \ud0c0\uc785\uc744 \ub2e4\ub8e8\uae30": [[787, "id2"]], "\ub370\uc774\ud130 \ub85c\ub529": [[810, "id7"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[783, "id3"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uc774\uc885 \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[787, "id3"]], "\ub85c\ub4dc \ubc38\ub7f0\uc2f1": [[779, "id2"]], "\ub85c\ub4dc\ub9f5": [[770, "id2"], [781, "id2"], [789, "id1"], [795, "id1"], [804, "id1"], [808, "id3"]], "\ub9c1\ud06c \uc608\uce21 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[774, "id4"]], "\uba40\ud2f0-\ub808\uc774\uc5b4 \ubbf8\ub2c8\ubc30\uce58 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc744 \uc704\ud55c \uc774\ubd84 \uad6c\uc870(Bipartite Structure)": [[796, "bipartite-structure"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec \uc758\uc874\uc131 \ucc3e\uae30": [[796, "id3"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec\uacfc \ucd95\uc57d": [[806, "id1"]], "\uba54\uc9c0\uc2dc \uc804\ub2ec \ud328\ub7ec\ub2e4\uc784(Message Passing Paradigm)": [[789, "message-passing-paradigm"]], "\ubaa8\ub378 \uc815\uc758\ud558\uae30": [[810, "id5"]], "\ubaa8\ub378\uc744 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc5d0 \ub9de\uac8c \ub9cc\ub4e4\uae30": [[797, "id3"], [800, "id1"], [802, "guide-ko-minibatch-node-classification-model"]], "\ubc30\uce58 \uadf8\ub798\ud504\uc5d0 \uc5f0\uc0b0\ud558\uae30": [[810, "id4"]], "\ubd84\uc0b0 DistEmbedding": [[777, "distembedding"]], "\ubd84\uc0b0 \ubaa8\ub4dc vs. \ub2e8\ub3c5(standalone) \ubaa8\ub4dc": [[777, "vs-standalone"]], "\ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[777, "id3"]], "\ubd84\uc0b0 \ud150\uc11c(Distributed Tensor)": [[777, "distributed-tensor"]], "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]": [[788, null]], "\uc5d0\uc9c0 \ud0c0\uc785 \uc11c\ube0c\uadf8\ub798\ud504": [[787, "id4"]], "\uc624\ud504\ub77c\uc778 \ucd94\ub860 \uad6c\ud604\ud558\uae30": [[799, "id2"]], "\uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud574\uc11c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[783, "id2"]], "\uc6cc\ud06c\ub85c\ub4dc \ub098\ub204\uae30(Split workloads)": [[777, "split-workloads"]], "\uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[797, "id1"], [802, "id1"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc9c1\uc811 \ud574\ubcf4\uae30": [[796, "id2"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1(Neighborhood Sampling) \ubc29\ubc95 \uac1c\uc694": [[795, "neighborhood-sampling"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc704\ud574\uc11c \uc6d0\ubcf8 \uadf8\ub798\ud504\uc5d0\uc11c \ubbf8\ub2c8 \ubc30\uce58\uc758 \uc5d0\uc9c0\ub4e4 \uc81c\uac70\ud558\uae30": [[797, "id2"]], "\uc774\uc885 \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[787, "id1"]], "\uc774\uc885 \uadf8\ub798\ud504\ub97c \ub3d9\uc885 \uadf8\ub798\ud504\ub85c \ubcc0\ud658\ud558\uae30": [[787, "id5"]], "\ucd9c\ub825\uac12\uc744 \uc704\ud55c \ucd95\uc57d \ud6c4 \ud53c\uccd0 \uc5c5\ub370\uc774\ud2b8": [[806, "id2"]], "\ucee4\uc2a4\ud140 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \uad6c\ud604\ud558\uae30": [[796, "guide-ko-minibatch-customizing-neighborhood-sampler-impl"]], "\ud559\uc2b5 \ub8f9": [[797, "id4"], [800, "id2"], [802, "id3"], [810, "id6"], [811, "id3"]], "\ud559\uc2b5 \ub8f9(loop)": [[809, "loop"], [812, "loop"]], "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt": [[824, null]], "\ud83c\udd95 Tutorial: Graph Transformer": [[681, null]], "\ud83c\udd95 dgl.graphbolt": [[7, null]]}, "docnames": ["api/python/dgl", "api/python/dgl.DGLGraph", "api/python/dgl.data", "api/python/dgl.dataloading", "api/python/dgl.distributed", "api/python/dgl.function", "api/python/dgl.geometry", "api/python/dgl.graphbolt", "api/python/dgl.multiprocessing", "api/python/dgl.ops", "api/python/dgl.optim", "api/python/dgl.sampling", "api/python/dgl.sparse_v0", "api/python/index", "api/python/knn_benchmark", "api/python/nn-mxnet", "api/python/nn-pytorch", "api/python/nn-tensorflow", "api/python/nn.functional", "api/python/transforms", "api/python/udf", "contribute", "developer/ffi", "env_var", "faq", "features/dataset", "generated/dgl.DGLGraph.__getitem__", "generated/dgl.DGLGraph.add_edges", "generated/dgl.DGLGraph.add_nodes", "generated/dgl.DGLGraph.add_self_loop", "generated/dgl.DGLGraph.adj", "generated/dgl.DGLGraph.adj_external", "generated/dgl.DGLGraph.adj_tensors", "generated/dgl.DGLGraph.adjacency_matrix", "generated/dgl.DGLGraph.apply_edges", "generated/dgl.DGLGraph.apply_nodes", "generated/dgl.DGLGraph.batch_num_edges", "generated/dgl.DGLGraph.batch_num_nodes", "generated/dgl.DGLGraph.batch_size", "generated/dgl.DGLGraph.canonical_etypes", "generated/dgl.DGLGraph.cpu", "generated/dgl.DGLGraph.create_formats_", "generated/dgl.DGLGraph.device", "generated/dgl.DGLGraph.dstdata", "generated/dgl.DGLGraph.dstnodes", "generated/dgl.DGLGraph.dsttypes", "generated/dgl.DGLGraph.edata", "generated/dgl.DGLGraph.edge_attr_schemes", "generated/dgl.DGLGraph.edge_ids", "generated/dgl.DGLGraph.edge_subgraph", "generated/dgl.DGLGraph.edge_type_subgraph", "generated/dgl.DGLGraph.edges", "generated/dgl.DGLGraph.etypes", "generated/dgl.DGLGraph.filter_edges", "generated/dgl.DGLGraph.filter_nodes", "generated/dgl.DGLGraph.find_edges", "generated/dgl.DGLGraph.formats", "generated/dgl.DGLGraph.has_edges_between", "generated/dgl.DGLGraph.has_nodes", "generated/dgl.DGLGraph.idtype", "generated/dgl.DGLGraph.in_degrees", "generated/dgl.DGLGraph.in_edges", "generated/dgl.DGLGraph.inc", "generated/dgl.DGLGraph.incidence_matrix", "generated/dgl.DGLGraph.int", "generated/dgl.DGLGraph.is_homogeneous", "generated/dgl.DGLGraph.is_multigraph", "generated/dgl.DGLGraph.is_pinned", "generated/dgl.DGLGraph.is_unibipartite", "generated/dgl.DGLGraph.line_graph", "generated/dgl.DGLGraph.local_scope", "generated/dgl.DGLGraph.long", "generated/dgl.DGLGraph.metagraph", "generated/dgl.DGLGraph.multi_update_all", "generated/dgl.DGLGraph.ndata", "generated/dgl.DGLGraph.node_attr_schemes", "generated/dgl.DGLGraph.node_type_subgraph", "generated/dgl.DGLGraph.nodes", "generated/dgl.DGLGraph.ntypes", "generated/dgl.DGLGraph.num_dst_nodes", "generated/dgl.DGLGraph.num_edges", "generated/dgl.DGLGraph.num_nodes", "generated/dgl.DGLGraph.num_src_nodes", "generated/dgl.DGLGraph.number_of_dst_nodes", "generated/dgl.DGLGraph.number_of_edges", "generated/dgl.DGLGraph.number_of_nodes", "generated/dgl.DGLGraph.number_of_src_nodes", "generated/dgl.DGLGraph.out_degrees", "generated/dgl.DGLGraph.out_edges", "generated/dgl.DGLGraph.pin_memory_", "generated/dgl.DGLGraph.predecessors", "generated/dgl.DGLGraph.prop_edges", "generated/dgl.DGLGraph.prop_nodes", "generated/dgl.DGLGraph.pull", "generated/dgl.DGLGraph.push", "generated/dgl.DGLGraph.remove_edges", "generated/dgl.DGLGraph.remove_nodes", "generated/dgl.DGLGraph.remove_self_loop", "generated/dgl.DGLGraph.reorder_graph", "generated/dgl.DGLGraph.reverse", "generated/dgl.DGLGraph.send_and_recv", "generated/dgl.DGLGraph.set_batch_num_edges", "generated/dgl.DGLGraph.set_batch_num_nodes", "generated/dgl.DGLGraph.srcdata", "generated/dgl.DGLGraph.srcnodes", "generated/dgl.DGLGraph.srctypes", "generated/dgl.DGLGraph.subgraph", "generated/dgl.DGLGraph.successors", "generated/dgl.DGLGraph.to", "generated/dgl.DGLGraph.to_canonical_etype", "generated/dgl.DGLGraph.to_cugraph", "generated/dgl.DGLGraph.to_simple", "generated/dgl.DGLGraph.unpin_memory_", "generated/dgl.DGLGraph.update_all", "generated/dgl.add_edges", "generated/dgl.add_nodes", "generated/dgl.add_reverse_edges", "generated/dgl.add_self_loop", "generated/dgl.adj_product_graph", "generated/dgl.adj_sum_graph", "generated/dgl.adjusted_homophily", "generated/dgl.apply_each", "generated/dgl.batch", "generated/dgl.bfs_edges_generator", "generated/dgl.bfs_nodes_generator", "generated/dgl.bipartite_from_networkx", "generated/dgl.bipartite_from_scipy", "generated/dgl.block_to_graph", "generated/dgl.broadcast_edges", "generated/dgl.broadcast_nodes", "generated/dgl.compact_graphs", "generated/dgl.create_block", "generated/dgl.data.AIFBDataset", "generated/dgl.data.AMDataset", "generated/dgl.data.ActorDataset", "generated/dgl.data.AmazonCoBuyComputerDataset", "generated/dgl.data.AmazonCoBuyPhotoDataset", "generated/dgl.data.AmazonRatingsDataset", "generated/dgl.data.AsGraphPredDataset", "generated/dgl.data.AsLinkPredDataset", "generated/dgl.data.AsNodePredDataset", "generated/dgl.data.BA2MotifDataset", "generated/dgl.data.BACommunityDataset", "generated/dgl.data.BAShapeDataset", "generated/dgl.data.BGSDataset", "generated/dgl.data.BitcoinOTCDataset", "generated/dgl.data.CIFAR10SuperPixelDataset", "generated/dgl.data.CLUSTERDataset", "generated/dgl.data.CSVDataset", "generated/dgl.data.ChameleonDataset", "generated/dgl.data.CiteseerGraphDataset", "generated/dgl.data.CoauthorCSDataset", "generated/dgl.data.CoauthorPhysicsDataset", "generated/dgl.data.CoraFullDataset", "generated/dgl.data.CoraGraphDataset", "generated/dgl.data.CornellDataset", "generated/dgl.data.DGLDataset", "generated/dgl.data.FB15k237Dataset", "generated/dgl.data.FB15kDataset", "generated/dgl.data.FakeNewsDataset", "generated/dgl.data.FlickrDataset", "generated/dgl.data.FraudAmazonDataset", "generated/dgl.data.FraudDataset", "generated/dgl.data.FraudYelpDataset", "generated/dgl.data.GDELTDataset", "generated/dgl.data.GINDataset", "generated/dgl.data.ICEWS18Dataset", "generated/dgl.data.KarateClubDataset", "generated/dgl.data.LegacyTUDataset", "generated/dgl.data.MNISTSuperPixelDataset", "generated/dgl.data.MUTAGDataset", "generated/dgl.data.MinesweeperDataset", "generated/dgl.data.MiniGCDataset", "generated/dgl.data.MovieLensDataset", "generated/dgl.data.PATTERNDataset", "generated/dgl.data.PPIDataset", "generated/dgl.data.PubmedGraphDataset", "generated/dgl.data.QM7bDataset", "generated/dgl.data.QM9Dataset", "generated/dgl.data.QM9EdgeDataset", "generated/dgl.data.QuestionsDataset", "generated/dgl.data.RedditDataset", "generated/dgl.data.RomanEmpireDataset", "generated/dgl.data.SBMMixtureDataset", "generated/dgl.data.SSTDataset", "generated/dgl.data.SquirrelDataset", "generated/dgl.data.TUDataset", "generated/dgl.data.TexasDataset", "generated/dgl.data.TolokersDataset", "generated/dgl.data.TreeCycleDataset", "generated/dgl.data.TreeGridDataset", "generated/dgl.data.WN18Dataset", "generated/dgl.data.WikiCSDataset", "generated/dgl.data.WisconsinDataset", "generated/dgl.data.YelpDataset", "generated/dgl.data.ZINCDataset", "generated/dgl.data.utils.Subset", "generated/dgl.data.utils.add_node_property_split", "generated/dgl.data.utils.add_nodepred_split", "generated/dgl.data.utils.check_sha1", "generated/dgl.data.utils.download", "generated/dgl.data.utils.extract_archive", "generated/dgl.data.utils.get_download_dir", "generated/dgl.data.utils.load_info", "generated/dgl.data.utils.load_labels", "generated/dgl.data.utils.mask_nodes_by_property", "generated/dgl.data.utils.save_info", "generated/dgl.data.utils.split_dataset", "generated/dgl.dataloading.BlockSampler", "generated/dgl.dataloading.ClusterGCNSampler", "generated/dgl.dataloading.DataLoader", "generated/dgl.dataloading.DistEdgeDataLoader", "generated/dgl.dataloading.DistNodeDataLoader", "generated/dgl.dataloading.GraphDataLoader", "generated/dgl.dataloading.LaborSampler", "generated/dgl.dataloading.MultiLayerFullNeighborSampler", "generated/dgl.dataloading.NeighborSampler", "generated/dgl.dataloading.SAINTSampler", "generated/dgl.dataloading.Sampler", "generated/dgl.dataloading.ShaDowKHopSampler", "generated/dgl.dataloading.as_edge_prediction_sampler", "generated/dgl.dataloading.base.LazyFeature", "generated/dgl.dataloading.base.set_dst_lazy_features", "generated/dgl.dataloading.base.set_edge_lazy_features", "generated/dgl.dataloading.base.set_node_lazy_features", "generated/dgl.dataloading.base.set_src_lazy_features", "generated/dgl.dataloading.negative_sampler.GlobalUniform", "generated/dgl.dataloading.negative_sampler.PerSourceUniform", "generated/dgl.dataloading.negative_sampler.Uniform", "generated/dgl.dfs_edges_generator", "generated/dgl.dfs_labeled_edges_generator", "generated/dgl.distributed.edge_split", "generated/dgl.distributed.find_edges", "generated/dgl.distributed.in_subgraph", "generated/dgl.distributed.initialize", "generated/dgl.distributed.load_partition", "generated/dgl.distributed.load_partition_book", "generated/dgl.distributed.load_partition_feats", "generated/dgl.distributed.node_split", "generated/dgl.distributed.partition_graph", "generated/dgl.distributed.sample_etype_neighbors", "generated/dgl.distributed.sample_neighbors", "generated/dgl.double_radius_node_labeling", "generated/dgl.edge_homophily", "generated/dgl.edge_label_informativeness", "generated/dgl.edge_subgraph", "generated/dgl.edge_type_subgraph", "generated/dgl.from_cugraph", "generated/dgl.from_networkx", "generated/dgl.from_scipy", "generated/dgl.function.copy_e", "generated/dgl.function.copy_u", "generated/dgl.function.e_add_u", "generated/dgl.function.e_add_v", "generated/dgl.function.e_div_u", "generated/dgl.function.e_div_v", "generated/dgl.function.e_dot_u", "generated/dgl.function.e_dot_v", "generated/dgl.function.e_mul_u", "generated/dgl.function.e_mul_v", "generated/dgl.function.e_sub_u", "generated/dgl.function.e_sub_v", "generated/dgl.function.max", "generated/dgl.function.mean", "generated/dgl.function.min", "generated/dgl.function.sum", "generated/dgl.function.u_add_e", "generated/dgl.function.u_add_v", "generated/dgl.function.u_div_e", "generated/dgl.function.u_div_v", "generated/dgl.function.u_dot_e", "generated/dgl.function.u_dot_v", "generated/dgl.function.u_mul_e", "generated/dgl.function.u_mul_v", "generated/dgl.function.u_sub_e", "generated/dgl.function.u_sub_v", "generated/dgl.function.v_add_e", "generated/dgl.function.v_add_u", "generated/dgl.function.v_div_e", "generated/dgl.function.v_div_u", "generated/dgl.function.v_dot_e", "generated/dgl.function.v_dot_u", "generated/dgl.function.v_mul_e", "generated/dgl.function.v_mul_u", "generated/dgl.function.v_sub_e", "generated/dgl.function.v_sub_u", "generated/dgl.graph", "generated/dgl.graphbolt.BasicFeatureStore", "generated/dgl.graphbolt.BuiltinDataset", "generated/dgl.graphbolt.CopyTo", "generated/dgl.graphbolt.DataLoader", "generated/dgl.graphbolt.Dataset", "generated/dgl.graphbolt.DistributedItemSampler", "generated/dgl.graphbolt.Feature", "generated/dgl.graphbolt.FeatureFetcher", "generated/dgl.graphbolt.FeatureStore", "generated/dgl.graphbolt.FusedCSCSamplingGraph", "generated/dgl.graphbolt.GPUCachedFeature", "generated/dgl.graphbolt.InSubgraphSampler", "generated/dgl.graphbolt.ItemSampler", "generated/dgl.graphbolt.ItemSet", "generated/dgl.graphbolt.ItemSetDict", "generated/dgl.graphbolt.LayerNeighborSampler", "generated/dgl.graphbolt.LegacyDataset", "generated/dgl.graphbolt.MiniBatch", "generated/dgl.graphbolt.MiniBatchTransformer", "generated/dgl.graphbolt.NegativeSampler", "generated/dgl.graphbolt.NeighborSampler", "generated/dgl.graphbolt.OnDiskDataset", "generated/dgl.graphbolt.SampledSubgraph", "generated/dgl.graphbolt.SampledSubgraphImpl", "generated/dgl.graphbolt.SamplingGraph", "generated/dgl.graphbolt.SubgraphSampler", "generated/dgl.graphbolt.Task", "generated/dgl.graphbolt.TorchBasedFeature", "generated/dgl.graphbolt.TorchBasedFeatureStore", "generated/dgl.graphbolt.UniformNegativeSampler", "generated/dgl.graphbolt.add_reverse_edges", "generated/dgl.graphbolt.compact_csc_format", "generated/dgl.graphbolt.etype_str_to_tuple", "generated/dgl.graphbolt.etype_tuple_to_str", "generated/dgl.graphbolt.exclude_seed_edges", "generated/dgl.graphbolt.expand_indptr", "generated/dgl.graphbolt.from_dglgraph", "generated/dgl.graphbolt.fused_csc_sampling_graph", "generated/dgl.graphbolt.index_select", "generated/dgl.graphbolt.isin", "generated/dgl.graphbolt.load_from_shared_memory", "generated/dgl.graphbolt.seed", "generated/dgl.graphbolt.unique_and_compact", "generated/dgl.graphbolt.unique_and_compact_csc_formats", "generated/dgl.heterograph", "generated/dgl.in_subgraph", "generated/dgl.is_libxsmm_enabled", "generated/dgl.khop_adj", "generated/dgl.khop_graph", "generated/dgl.khop_in_subgraph", "generated/dgl.khop_out_subgraph", "generated/dgl.knn_graph", "generated/dgl.lap_pe", "generated/dgl.laplacian_lambda_max", "generated/dgl.line_graph", "generated/dgl.linkx_homophily", "generated/dgl.load_graphs", "generated/dgl.max_edges", "generated/dgl.max_nodes", "generated/dgl.mean_edges", "generated/dgl.mean_nodes", "generated/dgl.merge", "generated/dgl.metapath_reachable_graph", "generated/dgl.metis_partition", "generated/dgl.metis_partition_assignment", "generated/dgl.multiprocessing.pytorch.call_once_and_share", "generated/dgl.multiprocessing.pytorch.shared_tensor", "generated/dgl.nn.functional.edge_softmax", "generated/dgl.nn.mxnet.HeteroGraphConv", "generated/dgl.nn.mxnet.conv.AGNNConv", "generated/dgl.nn.mxnet.conv.APPNPConv", "generated/dgl.nn.mxnet.conv.ChebConv", "generated/dgl.nn.mxnet.conv.DenseChebConv", "generated/dgl.nn.mxnet.conv.DenseGraphConv", "generated/dgl.nn.mxnet.conv.DenseSAGEConv", "generated/dgl.nn.mxnet.conv.EdgeConv", "generated/dgl.nn.mxnet.conv.GATConv", "generated/dgl.nn.mxnet.conv.GINConv", "generated/dgl.nn.mxnet.conv.GMMConv", "generated/dgl.nn.mxnet.conv.GatedGraphConv", "generated/dgl.nn.mxnet.conv.GraphConv", "generated/dgl.nn.mxnet.conv.NNConv", "generated/dgl.nn.mxnet.conv.RelGraphConv", "generated/dgl.nn.mxnet.conv.SAGEConv", "generated/dgl.nn.mxnet.conv.SGConv", "generated/dgl.nn.mxnet.conv.TAGConv", "generated/dgl.nn.mxnet.glob.AvgPooling", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling", "generated/dgl.nn.mxnet.glob.MaxPooling", "generated/dgl.nn.mxnet.glob.Set2Set", "generated/dgl.nn.mxnet.glob.SortPooling", "generated/dgl.nn.mxnet.glob.SumPooling", "generated/dgl.nn.mxnet.utils.Sequential", "generated/dgl.nn.pytorch.DeepWalk", "generated/dgl.nn.pytorch.HeteroEmbedding", "generated/dgl.nn.pytorch.HeteroGraphConv", "generated/dgl.nn.pytorch.HeteroLinear", "generated/dgl.nn.pytorch.MetaPath2Vec", "generated/dgl.nn.pytorch.TypedLinear", "generated/dgl.nn.pytorch.conv.AGNNConv", "generated/dgl.nn.pytorch.conv.APPNPConv", "generated/dgl.nn.pytorch.conv.AtomicConv", "generated/dgl.nn.pytorch.conv.CFConv", "generated/dgl.nn.pytorch.conv.ChebConv", "generated/dgl.nn.pytorch.conv.CuGraphGATConv", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv", "generated/dgl.nn.pytorch.conv.DGNConv", "generated/dgl.nn.pytorch.conv.DenseChebConv", "generated/dgl.nn.pytorch.conv.DenseGraphConv", "generated/dgl.nn.pytorch.conv.DenseSAGEConv", "generated/dgl.nn.pytorch.conv.DotGatConv", "generated/dgl.nn.pytorch.conv.EGATConv", "generated/dgl.nn.pytorch.conv.EGNNConv", "generated/dgl.nn.pytorch.conv.EdgeConv", "generated/dgl.nn.pytorch.conv.EdgeGATConv", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm", "generated/dgl.nn.pytorch.conv.GATConv", "generated/dgl.nn.pytorch.conv.GATv2Conv", "generated/dgl.nn.pytorch.conv.GCN2Conv", "generated/dgl.nn.pytorch.conv.GINConv", "generated/dgl.nn.pytorch.conv.GINEConv", "generated/dgl.nn.pytorch.conv.GMMConv", "generated/dgl.nn.pytorch.conv.GatedGCNConv", "generated/dgl.nn.pytorch.conv.GatedGraphConv", "generated/dgl.nn.pytorch.conv.GraphConv", "generated/dgl.nn.pytorch.conv.GroupRevRes", "generated/dgl.nn.pytorch.conv.HGTConv", "generated/dgl.nn.pytorch.conv.NNConv", "generated/dgl.nn.pytorch.conv.PNAConv", "generated/dgl.nn.pytorch.conv.RelGraphConv", "generated/dgl.nn.pytorch.conv.SAGEConv", "generated/dgl.nn.pytorch.conv.SGConv", "generated/dgl.nn.pytorch.conv.TAGConv", "generated/dgl.nn.pytorch.conv.TWIRLSConv", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", "generated/dgl.nn.pytorch.explain.GNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX", "generated/dgl.nn.pytorch.explain.PGExplainer", "generated/dgl.nn.pytorch.explain.SubgraphX", "generated/dgl.nn.pytorch.factory.KNNGraph", "generated/dgl.nn.pytorch.factory.RadiusGraph", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph", "generated/dgl.nn.pytorch.glob.AvgPooling", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling", "generated/dgl.nn.pytorch.glob.MaxPooling", "generated/dgl.nn.pytorch.glob.Set2Set", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder", "generated/dgl.nn.pytorch.glob.SortPooling", "generated/dgl.nn.pytorch.glob.SumPooling", "generated/dgl.nn.pytorch.glob.WeightAndSum", "generated/dgl.nn.pytorch.gt.BiasedMHA", "generated/dgl.nn.pytorch.gt.DegreeEncoder", "generated/dgl.nn.pytorch.gt.EGTLayer", "generated/dgl.nn.pytorch.gt.GraphormerLayer", "generated/dgl.nn.pytorch.gt.LapPosEncoder", "generated/dgl.nn.pytorch.gt.PathEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d", "generated/dgl.nn.pytorch.link.EdgePredictor", "generated/dgl.nn.pytorch.link.TransE", "generated/dgl.nn.pytorch.link.TransR", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding", "generated/dgl.nn.pytorch.utils.JumpingKnowledge", "generated/dgl.nn.pytorch.utils.LabelPropagation", "generated/dgl.nn.pytorch.utils.Sequential", "generated/dgl.nn.pytorch.utils.WeightBasis", "generated/dgl.nn.tensorflow.conv.APPNPConv", "generated/dgl.nn.tensorflow.conv.ChebConv", "generated/dgl.nn.tensorflow.conv.GATConv", "generated/dgl.nn.tensorflow.conv.GINConv", "generated/dgl.nn.tensorflow.conv.GraphConv", "generated/dgl.nn.tensorflow.conv.RelGraphConv", "generated/dgl.nn.tensorflow.conv.SAGEConv", "generated/dgl.nn.tensorflow.conv.SGConv", "generated/dgl.nn.tensorflow.glob.AvgPooling", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv", "generated/dgl.nn.tensorflow.glob.MaxPooling", "generated/dgl.nn.tensorflow.glob.SortPooling", "generated/dgl.nn.tensorflow.glob.SumPooling", "generated/dgl.node_homophily", "generated/dgl.node_label_informativeness", "generated/dgl.node_subgraph", "generated/dgl.node_type_subgraph", "generated/dgl.norm_by_dst", "generated/dgl.ops.copy_e_max", "generated/dgl.ops.copy_e_mean", "generated/dgl.ops.copy_e_min", "generated/dgl.ops.copy_e_sum", "generated/dgl.ops.copy_u", "generated/dgl.ops.copy_u_max", "generated/dgl.ops.copy_u_mean", "generated/dgl.ops.copy_u_min", "generated/dgl.ops.copy_u_sum", "generated/dgl.ops.copy_v", "generated/dgl.ops.e_add_u", "generated/dgl.ops.e_add_v", "generated/dgl.ops.e_div_u", "generated/dgl.ops.e_div_v", "generated/dgl.ops.e_dot_u", "generated/dgl.ops.e_dot_v", "generated/dgl.ops.e_mul_u", "generated/dgl.ops.e_mul_v", "generated/dgl.ops.e_sub_u", "generated/dgl.ops.e_sub_v", "generated/dgl.ops.gather_mm", "generated/dgl.ops.gsddmm", "generated/dgl.ops.gspmm", "generated/dgl.ops.segment_mm", "generated/dgl.ops.segment_reduce", "generated/dgl.ops.u_add_e", "generated/dgl.ops.u_add_e_max", "generated/dgl.ops.u_add_e_mean", "generated/dgl.ops.u_add_e_min", "generated/dgl.ops.u_add_e_sum", "generated/dgl.ops.u_add_v", "generated/dgl.ops.u_div_e", "generated/dgl.ops.u_div_e_max", "generated/dgl.ops.u_div_e_mean", "generated/dgl.ops.u_div_e_min", "generated/dgl.ops.u_div_e_sum", "generated/dgl.ops.u_div_v", "generated/dgl.ops.u_dot_e", "generated/dgl.ops.u_dot_v", "generated/dgl.ops.u_mul_e", "generated/dgl.ops.u_mul_e_max", "generated/dgl.ops.u_mul_e_mean", "generated/dgl.ops.u_mul_e_min", "generated/dgl.ops.u_mul_e_sum", "generated/dgl.ops.u_mul_v", "generated/dgl.ops.u_sub_e", "generated/dgl.ops.u_sub_e_max", "generated/dgl.ops.u_sub_e_mean", "generated/dgl.ops.u_sub_e_min", "generated/dgl.ops.u_sub_e_sum", "generated/dgl.ops.u_sub_v", "generated/dgl.ops.v_add_e", "generated/dgl.ops.v_add_u", "generated/dgl.ops.v_div_e", "generated/dgl.ops.v_div_u", "generated/dgl.ops.v_dot_e", "generated/dgl.ops.v_dot_u", "generated/dgl.ops.v_mul_e", "generated/dgl.ops.v_mul_u", "generated/dgl.ops.v_sub_e", "generated/dgl.ops.v_sub_u", "generated/dgl.out_subgraph", "generated/dgl.partition_graph_with_halo", "generated/dgl.prop_edges", "generated/dgl.prop_edges_dfs", "generated/dgl.prop_nodes", "generated/dgl.prop_nodes_bfs", "generated/dgl.prop_nodes_topo", "generated/dgl.radius_graph", "generated/dgl.rand_bipartite", "generated/dgl.rand_graph", "generated/dgl.random_walk_pe", "generated/dgl.readout_edges", "generated/dgl.readout_nodes", "generated/dgl.remove_edges", "generated/dgl.remove_nodes", "generated/dgl.remove_self_loop", "generated/dgl.reorder_graph", "generated/dgl.reverse", "generated/dgl.sampling.PinSAGESampler", "generated/dgl.sampling.global_uniform_negative_sampling", "generated/dgl.sampling.node2vec_random_walk", "generated/dgl.sampling.pack_traces", "generated/dgl.sampling.random_walk", "generated/dgl.sampling.sample_labors", "generated/dgl.sampling.sample_neighbors", "generated/dgl.sampling.sample_neighbors_biased", "generated/dgl.sampling.select_topk", "generated/dgl.save_graphs", "generated/dgl.seed", "generated/dgl.segmented_knn_graph", "generated/dgl.shortest_dist", "generated/dgl.slice_batch", "generated/dgl.softmax_edges", "generated/dgl.softmax_nodes", "generated/dgl.sort_csc_by_tag", "generated/dgl.sort_csr_by_tag", "generated/dgl.sparse.SparseMatrix.T", "generated/dgl.sparse.SparseMatrix.coalesce", "generated/dgl.sparse.SparseMatrix.col", "generated/dgl.sparse.SparseMatrix.coo", "generated/dgl.sparse.SparseMatrix.cpu", "generated/dgl.sparse.SparseMatrix.csc", "generated/dgl.sparse.SparseMatrix.csr", "generated/dgl.sparse.SparseMatrix.cuda", "generated/dgl.sparse.SparseMatrix.device", "generated/dgl.sparse.SparseMatrix.double", "generated/dgl.sparse.SparseMatrix.dtype", "generated/dgl.sparse.SparseMatrix.float", "generated/dgl.sparse.SparseMatrix.has_duplicate", "generated/dgl.sparse.SparseMatrix.indices", "generated/dgl.sparse.SparseMatrix.int", "generated/dgl.sparse.SparseMatrix.long", "generated/dgl.sparse.SparseMatrix.neg", "generated/dgl.sparse.SparseMatrix.nnz", "generated/dgl.sparse.SparseMatrix.reduce", "generated/dgl.sparse.SparseMatrix.row", "generated/dgl.sparse.SparseMatrix.shape", "generated/dgl.sparse.SparseMatrix.smax", "generated/dgl.sparse.SparseMatrix.smean", "generated/dgl.sparse.SparseMatrix.smin", "generated/dgl.sparse.SparseMatrix.softmax", "generated/dgl.sparse.SparseMatrix.sum", "generated/dgl.sparse.SparseMatrix.t", "generated/dgl.sparse.SparseMatrix.to", "generated/dgl.sparse.SparseMatrix.to_dense", "generated/dgl.sparse.SparseMatrix.transpose", "generated/dgl.sparse.SparseMatrix.val", "generated/dgl.sparse.add", "generated/dgl.sparse.bsddmm", "generated/dgl.sparse.bspmm", "generated/dgl.sparse.diag", "generated/dgl.sparse.div", "generated/dgl.sparse.from_coo", "generated/dgl.sparse.from_csc", "generated/dgl.sparse.from_csr", "generated/dgl.sparse.identity", "generated/dgl.sparse.matmul", "generated/dgl.sparse.mul", "generated/dgl.sparse.power", "generated/dgl.sparse.sddmm", "generated/dgl.sparse.softmax", "generated/dgl.sparse.sp_add_v", "generated/dgl.sparse.sp_broadcast_v", "generated/dgl.sparse.sp_div_v", "generated/dgl.sparse.sp_mul_v", "generated/dgl.sparse.sp_sub_v", "generated/dgl.sparse.spmatrix", "generated/dgl.sparse.spmm", "generated/dgl.sparse.spspmm", "generated/dgl.sparse.sub", "generated/dgl.sparse.val_like", "generated/dgl.sum_edges", "generated/dgl.sum_nodes", "generated/dgl.svd_pe", "generated/dgl.to_bidirected", "generated/dgl.to_block", "generated/dgl.to_cugraph", "generated/dgl.to_double", "generated/dgl.to_float", "generated/dgl.to_half", "generated/dgl.to_heterogeneous", "generated/dgl.to_homogeneous", "generated/dgl.to_networkx", "generated/dgl.to_simple", "generated/dgl.to_simple_graph", "generated/dgl.topk_edges", "generated/dgl.topk_nodes", "generated/dgl.topological_nodes_generator", "generated/dgl.transforms.AddEdge", "generated/dgl.transforms.AddMetaPaths", "generated/dgl.transforms.AddReverse", "generated/dgl.transforms.AddSelfLoop", "generated/dgl.transforms.BaseTransform", "generated/dgl.transforms.Compose", "generated/dgl.transforms.DropEdge", "generated/dgl.transforms.DropNode", "generated/dgl.transforms.FeatMask", "generated/dgl.transforms.GCNNorm", "generated/dgl.transforms.GDC", "generated/dgl.transforms.HeatKernel", "generated/dgl.transforms.KHopGraph", "generated/dgl.transforms.LapPE", "generated/dgl.transforms.LineGraph", "generated/dgl.transforms.NodeShuffle", "generated/dgl.transforms.PPR", "generated/dgl.transforms.RandomWalkPE", "generated/dgl.transforms.RemoveSelfLoop", "generated/dgl.transforms.RowFeatNormalizer", "generated/dgl.transforms.SIGNDiffusion", "generated/dgl.transforms.SVDPE", "generated/dgl.transforms.ToLevi", "generated/dgl.transforms.ToSimple", "generated/dgl.udf.EdgeBatch.batch_size", "generated/dgl.udf.EdgeBatch.data", "generated/dgl.udf.EdgeBatch.dst", "generated/dgl.udf.EdgeBatch.edges", "generated/dgl.udf.EdgeBatch.src", "generated/dgl.udf.NodeBatch.batch_size", "generated/dgl.udf.NodeBatch.data", "generated/dgl.udf.NodeBatch.mailbox", "generated/dgl.udf.NodeBatch.nodes", "generated/dgl.unbatch", "generated/dgl.use_libxsmm", "graphtransformer/data", "graphtransformer/index", "graphtransformer/model", "guide/data", "guide/data-dataset", "guide/data-download", "guide/data-loadcsv", "guide/data-loadogb", "guide/data-process", "guide/data-savenload", "guide/distributed", "guide/distributed-apis", "guide/distributed-hetero", "guide/distributed-partition", "guide/distributed-preprocessing", "guide/distributed-tools", "guide/graph", "guide/graph-basic", "guide/graph-external", "guide/graph-feature", "guide/graph-gpu", "guide/graph-graphs-nodes-edges", "guide/graph-heterogeneous", "guide/index", "guide/message", "guide/message-api", "guide/message-efficient", "guide/message-heterograph", "guide/message-part", "guide/minibatch", "guide/minibatch-custom-sampler", "guide/minibatch-edge", "guide/minibatch-gpu-sampling", "guide/minibatch-inference", "guide/minibatch-link", "guide/minibatch-nn", "guide/minibatch-node", "guide/minibatch-parallelism", "guide/minibatch-sparse", "guide/mixed_precision", "guide/nn", "guide/nn-construction", "guide/nn-forward", "guide/nn-heterograph", "guide/training", "guide/training-edge", "guide/training-eweight", "guide/training-graph", "guide/training-link", "guide/training-node", "guide_cn/data", "guide_cn/data-dataset", "guide_cn/data-download", "guide_cn/data-loadogb", "guide_cn/data-process", "guide_cn/data-savenload", "guide_cn/distributed", "guide_cn/distributed-apis", "guide_cn/distributed-preprocessing", "guide_cn/distributed-tools", "guide_cn/graph", "guide_cn/graph-basic", "guide_cn/graph-external", "guide_cn/graph-feature", "guide_cn/graph-gpu", "guide_cn/graph-graphs-nodes-edges", "guide_cn/graph-heterogeneous", "guide_cn/index", "guide_cn/message", "guide_cn/message-api", "guide_cn/message-efficient", "guide_cn/message-heterograph", "guide_cn/message-part", "guide_cn/minibatch", "guide_cn/minibatch-custom-sampler", "guide_cn/minibatch-edge", "guide_cn/minibatch-inference", "guide_cn/minibatch-link", "guide_cn/minibatch-nn", "guide_cn/minibatch-node", "guide_cn/nn", "guide_cn/nn-construction", "guide_cn/nn-forward", "guide_cn/nn-heterograph", "guide_cn/training", "guide_cn/training-edge", "guide_cn/training-eweight", "guide_cn/training-graph", "guide_cn/training-link", "guide_cn/training-node", "guide_ko/data", "guide_ko/data-dataset", "guide_ko/data-download", "guide_ko/data-loadogb", "guide_ko/data-process", "guide_ko/data-savenload", "guide_ko/distributed", "guide_ko/distributed-apis", "guide_ko/distributed-hetero", "guide_ko/distributed-preprocessing", "guide_ko/distributed-tools", "guide_ko/graph", "guide_ko/graph-basic", "guide_ko/graph-external", "guide_ko/graph-feature", "guide_ko/graph-gpu", "guide_ko/graph-graphs-nodes-edges", "guide_ko/graph-heterogeneous", "guide_ko/index", "guide_ko/message", "guide_ko/message-api", "guide_ko/message-edge", "guide_ko/message-efficient", "guide_ko/message-heterograph", "guide_ko/message-part", "guide_ko/minibatch", "guide_ko/minibatch-custom-sampler", "guide_ko/minibatch-edge", "guide_ko/minibatch-gpu-sampling", "guide_ko/minibatch-inference", "guide_ko/minibatch-link", "guide_ko/minibatch-nn", "guide_ko/minibatch-node", "guide_ko/mixed_precision", "guide_ko/nn", "guide_ko/nn-construction", "guide_ko/nn-forward", "guide_ko/nn-heterograph", "guide_ko/training", "guide_ko/training-edge", "guide_ko/training-graph", "guide_ko/training-link", "guide_ko/training-node", "index", "install/index", "notebooks/sparse/gcn", "notebooks/sparse/graph_diffusion", "notebooks/sparse/graph_transformer", "notebooks/sparse/hgnn", "notebooks/sparse/index", "notebooks/sparse/quickstart", "performance", "resources", "sg_execution_times", "stochastic_training/index", "stochastic_training/link_prediction", "stochastic_training/neighbor_sampling_overview", "stochastic_training/node_classification", "stochastic_training/ondisk-dataset", "stochastic_training/ondisk-dataset-specification", "stochastic_training/ondisk_dataset_heterograph", "stochastic_training/ondisk_dataset_homograph", "tutorials/blitz/1_introduction", "tutorials/blitz/2_dglgraph", "tutorials/blitz/3_message_passing", "tutorials/blitz/4_link_predict", "tutorials/blitz/5_graph_classification", "tutorials/blitz/6_load_data", "tutorials/blitz/index", "tutorials/blitz/sg_execution_times", "tutorials/cpu/argo_tutorial", "tutorials/cpu/cpu_best_practises", "tutorials/cpu/index", "tutorials/cpu/sg_execution_times", "tutorials/dist/1_node_classification", "tutorials/dist/2_link_prediction", "tutorials/dist/index", "tutorials/dist/sg_execution_times", "tutorials/models/1_gnn/1_gcn", "tutorials/models/1_gnn/4_rgcn", "tutorials/models/1_gnn/6_line_graph", "tutorials/models/1_gnn/9_gat", "tutorials/models/1_gnn/index", "tutorials/models/1_gnn/sg_execution_times", "tutorials/models/2_small_graph/3_tree-lstm", "tutorials/models/2_small_graph/index", "tutorials/models/2_small_graph/sg_execution_times", "tutorials/models/3_generative_model/5_dgmg", "tutorials/models/3_generative_model/index", "tutorials/models/3_generative_model/sg_execution_times", "tutorials/models/4_old_wines/2_capsule", "tutorials/models/4_old_wines/7_transformer", "tutorials/models/4_old_wines/index", "tutorials/models/4_old_wines/sg_execution_times", "tutorials/models/index", "tutorials/models/sg_execution_times", "tutorials/multi/1_graph_classification", "tutorials/multi/2_node_classification", "tutorials/multi/index", "tutorials/multi/sg_execution_times"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/python/dgl.rst", "api/python/dgl.DGLGraph.rst", "api/python/dgl.data.rst", "api/python/dgl.dataloading.rst", "api/python/dgl.distributed.rst", "api/python/dgl.function.rst", "api/python/dgl.geometry.rst", "api/python/dgl.graphbolt.rst", "api/python/dgl.multiprocessing.rst", "api/python/dgl.ops.rst", "api/python/dgl.optim.rst", "api/python/dgl.sampling.rst", "api/python/dgl.sparse_v0.rst", "api/python/index.rst", "api/python/knn_benchmark.rst", "api/python/nn-mxnet.rst", "api/python/nn-pytorch.rst", "api/python/nn-tensorflow.rst", "api/python/nn.functional.rst", "api/python/transforms.rst", "api/python/udf.rst", "contribute.rst", "developer/ffi.rst", "env_var.rst", "faq.rst", "features/dataset.rst", "generated/dgl.DGLGraph.__getitem__.rst", "generated/dgl.DGLGraph.add_edges.rst", "generated/dgl.DGLGraph.add_nodes.rst", "generated/dgl.DGLGraph.add_self_loop.rst", "generated/dgl.DGLGraph.adj.rst", "generated/dgl.DGLGraph.adj_external.rst", "generated/dgl.DGLGraph.adj_tensors.rst", "generated/dgl.DGLGraph.adjacency_matrix.rst", "generated/dgl.DGLGraph.apply_edges.rst", "generated/dgl.DGLGraph.apply_nodes.rst", "generated/dgl.DGLGraph.batch_num_edges.rst", "generated/dgl.DGLGraph.batch_num_nodes.rst", "generated/dgl.DGLGraph.batch_size.rst", "generated/dgl.DGLGraph.canonical_etypes.rst", "generated/dgl.DGLGraph.cpu.rst", "generated/dgl.DGLGraph.create_formats_.rst", "generated/dgl.DGLGraph.device.rst", "generated/dgl.DGLGraph.dstdata.rst", "generated/dgl.DGLGraph.dstnodes.rst", "generated/dgl.DGLGraph.dsttypes.rst", "generated/dgl.DGLGraph.edata.rst", "generated/dgl.DGLGraph.edge_attr_schemes.rst", "generated/dgl.DGLGraph.edge_ids.rst", "generated/dgl.DGLGraph.edge_subgraph.rst", "generated/dgl.DGLGraph.edge_type_subgraph.rst", "generated/dgl.DGLGraph.edges.rst", "generated/dgl.DGLGraph.etypes.rst", "generated/dgl.DGLGraph.filter_edges.rst", "generated/dgl.DGLGraph.filter_nodes.rst", "generated/dgl.DGLGraph.find_edges.rst", "generated/dgl.DGLGraph.formats.rst", "generated/dgl.DGLGraph.has_edges_between.rst", "generated/dgl.DGLGraph.has_nodes.rst", "generated/dgl.DGLGraph.idtype.rst", "generated/dgl.DGLGraph.in_degrees.rst", "generated/dgl.DGLGraph.in_edges.rst", "generated/dgl.DGLGraph.inc.rst", "generated/dgl.DGLGraph.incidence_matrix.rst", "generated/dgl.DGLGraph.int.rst", "generated/dgl.DGLGraph.is_homogeneous.rst", "generated/dgl.DGLGraph.is_multigraph.rst", "generated/dgl.DGLGraph.is_pinned.rst", "generated/dgl.DGLGraph.is_unibipartite.rst", "generated/dgl.DGLGraph.line_graph.rst", "generated/dgl.DGLGraph.local_scope.rst", "generated/dgl.DGLGraph.long.rst", "generated/dgl.DGLGraph.metagraph.rst", "generated/dgl.DGLGraph.multi_update_all.rst", "generated/dgl.DGLGraph.ndata.rst", "generated/dgl.DGLGraph.node_attr_schemes.rst", "generated/dgl.DGLGraph.node_type_subgraph.rst", "generated/dgl.DGLGraph.nodes.rst", "generated/dgl.DGLGraph.ntypes.rst", "generated/dgl.DGLGraph.num_dst_nodes.rst", "generated/dgl.DGLGraph.num_edges.rst", "generated/dgl.DGLGraph.num_nodes.rst", "generated/dgl.DGLGraph.num_src_nodes.rst", "generated/dgl.DGLGraph.number_of_dst_nodes.rst", "generated/dgl.DGLGraph.number_of_edges.rst", "generated/dgl.DGLGraph.number_of_nodes.rst", "generated/dgl.DGLGraph.number_of_src_nodes.rst", "generated/dgl.DGLGraph.out_degrees.rst", "generated/dgl.DGLGraph.out_edges.rst", "generated/dgl.DGLGraph.pin_memory_.rst", "generated/dgl.DGLGraph.predecessors.rst", "generated/dgl.DGLGraph.prop_edges.rst", "generated/dgl.DGLGraph.prop_nodes.rst", "generated/dgl.DGLGraph.pull.rst", "generated/dgl.DGLGraph.push.rst", "generated/dgl.DGLGraph.remove_edges.rst", "generated/dgl.DGLGraph.remove_nodes.rst", "generated/dgl.DGLGraph.remove_self_loop.rst", "generated/dgl.DGLGraph.reorder_graph.rst", "generated/dgl.DGLGraph.reverse.rst", "generated/dgl.DGLGraph.send_and_recv.rst", "generated/dgl.DGLGraph.set_batch_num_edges.rst", "generated/dgl.DGLGraph.set_batch_num_nodes.rst", "generated/dgl.DGLGraph.srcdata.rst", "generated/dgl.DGLGraph.srcnodes.rst", "generated/dgl.DGLGraph.srctypes.rst", "generated/dgl.DGLGraph.subgraph.rst", "generated/dgl.DGLGraph.successors.rst", "generated/dgl.DGLGraph.to.rst", "generated/dgl.DGLGraph.to_canonical_etype.rst", "generated/dgl.DGLGraph.to_cugraph.rst", "generated/dgl.DGLGraph.to_simple.rst", "generated/dgl.DGLGraph.unpin_memory_.rst", "generated/dgl.DGLGraph.update_all.rst", "generated/dgl.add_edges.rst", "generated/dgl.add_nodes.rst", "generated/dgl.add_reverse_edges.rst", "generated/dgl.add_self_loop.rst", "generated/dgl.adj_product_graph.rst", "generated/dgl.adj_sum_graph.rst", "generated/dgl.adjusted_homophily.rst", "generated/dgl.apply_each.rst", "generated/dgl.batch.rst", "generated/dgl.bfs_edges_generator.rst", "generated/dgl.bfs_nodes_generator.rst", "generated/dgl.bipartite_from_networkx.rst", "generated/dgl.bipartite_from_scipy.rst", "generated/dgl.block_to_graph.rst", "generated/dgl.broadcast_edges.rst", "generated/dgl.broadcast_nodes.rst", "generated/dgl.compact_graphs.rst", "generated/dgl.create_block.rst", "generated/dgl.data.AIFBDataset.rst", "generated/dgl.data.AMDataset.rst", "generated/dgl.data.ActorDataset.rst", "generated/dgl.data.AmazonCoBuyComputerDataset.rst", "generated/dgl.data.AmazonCoBuyPhotoDataset.rst", "generated/dgl.data.AmazonRatingsDataset.rst", "generated/dgl.data.AsGraphPredDataset.rst", "generated/dgl.data.AsLinkPredDataset.rst", "generated/dgl.data.AsNodePredDataset.rst", "generated/dgl.data.BA2MotifDataset.rst", "generated/dgl.data.BACommunityDataset.rst", "generated/dgl.data.BAShapeDataset.rst", "generated/dgl.data.BGSDataset.rst", "generated/dgl.data.BitcoinOTCDataset.rst", "generated/dgl.data.CIFAR10SuperPixelDataset.rst", "generated/dgl.data.CLUSTERDataset.rst", "generated/dgl.data.CSVDataset.rst", "generated/dgl.data.ChameleonDataset.rst", "generated/dgl.data.CiteseerGraphDataset.rst", "generated/dgl.data.CoauthorCSDataset.rst", "generated/dgl.data.CoauthorPhysicsDataset.rst", "generated/dgl.data.CoraFullDataset.rst", "generated/dgl.data.CoraGraphDataset.rst", "generated/dgl.data.CornellDataset.rst", "generated/dgl.data.DGLDataset.rst", "generated/dgl.data.FB15k237Dataset.rst", "generated/dgl.data.FB15kDataset.rst", "generated/dgl.data.FakeNewsDataset.rst", "generated/dgl.data.FlickrDataset.rst", "generated/dgl.data.FraudAmazonDataset.rst", "generated/dgl.data.FraudDataset.rst", "generated/dgl.data.FraudYelpDataset.rst", "generated/dgl.data.GDELTDataset.rst", "generated/dgl.data.GINDataset.rst", "generated/dgl.data.ICEWS18Dataset.rst", "generated/dgl.data.KarateClubDataset.rst", "generated/dgl.data.LegacyTUDataset.rst", "generated/dgl.data.MNISTSuperPixelDataset.rst", "generated/dgl.data.MUTAGDataset.rst", "generated/dgl.data.MinesweeperDataset.rst", "generated/dgl.data.MiniGCDataset.rst", "generated/dgl.data.MovieLensDataset.rst", "generated/dgl.data.PATTERNDataset.rst", "generated/dgl.data.PPIDataset.rst", "generated/dgl.data.PubmedGraphDataset.rst", "generated/dgl.data.QM7bDataset.rst", "generated/dgl.data.QM9Dataset.rst", "generated/dgl.data.QM9EdgeDataset.rst", "generated/dgl.data.QuestionsDataset.rst", "generated/dgl.data.RedditDataset.rst", "generated/dgl.data.RomanEmpireDataset.rst", "generated/dgl.data.SBMMixtureDataset.rst", "generated/dgl.data.SSTDataset.rst", "generated/dgl.data.SquirrelDataset.rst", "generated/dgl.data.TUDataset.rst", "generated/dgl.data.TexasDataset.rst", "generated/dgl.data.TolokersDataset.rst", "generated/dgl.data.TreeCycleDataset.rst", "generated/dgl.data.TreeGridDataset.rst", "generated/dgl.data.WN18Dataset.rst", "generated/dgl.data.WikiCSDataset.rst", "generated/dgl.data.WisconsinDataset.rst", "generated/dgl.data.YelpDataset.rst", "generated/dgl.data.ZINCDataset.rst", "generated/dgl.data.utils.Subset.rst", "generated/dgl.data.utils.add_node_property_split.rst", "generated/dgl.data.utils.add_nodepred_split.rst", "generated/dgl.data.utils.check_sha1.rst", "generated/dgl.data.utils.download.rst", "generated/dgl.data.utils.extract_archive.rst", "generated/dgl.data.utils.get_download_dir.rst", "generated/dgl.data.utils.load_info.rst", "generated/dgl.data.utils.load_labels.rst", "generated/dgl.data.utils.mask_nodes_by_property.rst", "generated/dgl.data.utils.save_info.rst", "generated/dgl.data.utils.split_dataset.rst", "generated/dgl.dataloading.BlockSampler.rst", "generated/dgl.dataloading.ClusterGCNSampler.rst", "generated/dgl.dataloading.DataLoader.rst", "generated/dgl.dataloading.DistEdgeDataLoader.rst", "generated/dgl.dataloading.DistNodeDataLoader.rst", "generated/dgl.dataloading.GraphDataLoader.rst", "generated/dgl.dataloading.LaborSampler.rst", "generated/dgl.dataloading.MultiLayerFullNeighborSampler.rst", "generated/dgl.dataloading.NeighborSampler.rst", "generated/dgl.dataloading.SAINTSampler.rst", "generated/dgl.dataloading.Sampler.rst", "generated/dgl.dataloading.ShaDowKHopSampler.rst", "generated/dgl.dataloading.as_edge_prediction_sampler.rst", "generated/dgl.dataloading.base.LazyFeature.rst", "generated/dgl.dataloading.base.set_dst_lazy_features.rst", "generated/dgl.dataloading.base.set_edge_lazy_features.rst", "generated/dgl.dataloading.base.set_node_lazy_features.rst", "generated/dgl.dataloading.base.set_src_lazy_features.rst", "generated/dgl.dataloading.negative_sampler.GlobalUniform.rst", "generated/dgl.dataloading.negative_sampler.PerSourceUniform.rst", "generated/dgl.dataloading.negative_sampler.Uniform.rst", "generated/dgl.dfs_edges_generator.rst", "generated/dgl.dfs_labeled_edges_generator.rst", "generated/dgl.distributed.edge_split.rst", "generated/dgl.distributed.find_edges.rst", "generated/dgl.distributed.in_subgraph.rst", "generated/dgl.distributed.initialize.rst", "generated/dgl.distributed.load_partition.rst", "generated/dgl.distributed.load_partition_book.rst", "generated/dgl.distributed.load_partition_feats.rst", "generated/dgl.distributed.node_split.rst", "generated/dgl.distributed.partition_graph.rst", "generated/dgl.distributed.sample_etype_neighbors.rst", "generated/dgl.distributed.sample_neighbors.rst", "generated/dgl.double_radius_node_labeling.rst", "generated/dgl.edge_homophily.rst", "generated/dgl.edge_label_informativeness.rst", "generated/dgl.edge_subgraph.rst", "generated/dgl.edge_type_subgraph.rst", "generated/dgl.from_cugraph.rst", "generated/dgl.from_networkx.rst", "generated/dgl.from_scipy.rst", "generated/dgl.function.copy_e.rst", "generated/dgl.function.copy_u.rst", "generated/dgl.function.e_add_u.rst", "generated/dgl.function.e_add_v.rst", "generated/dgl.function.e_div_u.rst", "generated/dgl.function.e_div_v.rst", "generated/dgl.function.e_dot_u.rst", "generated/dgl.function.e_dot_v.rst", "generated/dgl.function.e_mul_u.rst", "generated/dgl.function.e_mul_v.rst", "generated/dgl.function.e_sub_u.rst", "generated/dgl.function.e_sub_v.rst", "generated/dgl.function.max.rst", "generated/dgl.function.mean.rst", "generated/dgl.function.min.rst", "generated/dgl.function.sum.rst", "generated/dgl.function.u_add_e.rst", "generated/dgl.function.u_add_v.rst", "generated/dgl.function.u_div_e.rst", "generated/dgl.function.u_div_v.rst", "generated/dgl.function.u_dot_e.rst", "generated/dgl.function.u_dot_v.rst", "generated/dgl.function.u_mul_e.rst", "generated/dgl.function.u_mul_v.rst", "generated/dgl.function.u_sub_e.rst", "generated/dgl.function.u_sub_v.rst", "generated/dgl.function.v_add_e.rst", "generated/dgl.function.v_add_u.rst", "generated/dgl.function.v_div_e.rst", "generated/dgl.function.v_div_u.rst", "generated/dgl.function.v_dot_e.rst", "generated/dgl.function.v_dot_u.rst", "generated/dgl.function.v_mul_e.rst", "generated/dgl.function.v_mul_u.rst", "generated/dgl.function.v_sub_e.rst", "generated/dgl.function.v_sub_u.rst", "generated/dgl.graph.rst", "generated/dgl.graphbolt.BasicFeatureStore.rst", "generated/dgl.graphbolt.BuiltinDataset.rst", "generated/dgl.graphbolt.CopyTo.rst", "generated/dgl.graphbolt.DataLoader.rst", "generated/dgl.graphbolt.Dataset.rst", "generated/dgl.graphbolt.DistributedItemSampler.rst", "generated/dgl.graphbolt.Feature.rst", "generated/dgl.graphbolt.FeatureFetcher.rst", "generated/dgl.graphbolt.FeatureStore.rst", "generated/dgl.graphbolt.FusedCSCSamplingGraph.rst", "generated/dgl.graphbolt.GPUCachedFeature.rst", "generated/dgl.graphbolt.InSubgraphSampler.rst", "generated/dgl.graphbolt.ItemSampler.rst", "generated/dgl.graphbolt.ItemSet.rst", "generated/dgl.graphbolt.ItemSetDict.rst", "generated/dgl.graphbolt.LayerNeighborSampler.rst", "generated/dgl.graphbolt.LegacyDataset.rst", "generated/dgl.graphbolt.MiniBatch.rst", "generated/dgl.graphbolt.MiniBatchTransformer.rst", "generated/dgl.graphbolt.NegativeSampler.rst", "generated/dgl.graphbolt.NeighborSampler.rst", "generated/dgl.graphbolt.OnDiskDataset.rst", "generated/dgl.graphbolt.SampledSubgraph.rst", "generated/dgl.graphbolt.SampledSubgraphImpl.rst", "generated/dgl.graphbolt.SamplingGraph.rst", "generated/dgl.graphbolt.SubgraphSampler.rst", "generated/dgl.graphbolt.Task.rst", "generated/dgl.graphbolt.TorchBasedFeature.rst", "generated/dgl.graphbolt.TorchBasedFeatureStore.rst", "generated/dgl.graphbolt.UniformNegativeSampler.rst", "generated/dgl.graphbolt.add_reverse_edges.rst", "generated/dgl.graphbolt.compact_csc_format.rst", "generated/dgl.graphbolt.etype_str_to_tuple.rst", "generated/dgl.graphbolt.etype_tuple_to_str.rst", "generated/dgl.graphbolt.exclude_seed_edges.rst", "generated/dgl.graphbolt.expand_indptr.rst", "generated/dgl.graphbolt.from_dglgraph.rst", "generated/dgl.graphbolt.fused_csc_sampling_graph.rst", "generated/dgl.graphbolt.index_select.rst", "generated/dgl.graphbolt.isin.rst", "generated/dgl.graphbolt.load_from_shared_memory.rst", "generated/dgl.graphbolt.seed.rst", "generated/dgl.graphbolt.unique_and_compact.rst", "generated/dgl.graphbolt.unique_and_compact_csc_formats.rst", "generated/dgl.heterograph.rst", "generated/dgl.in_subgraph.rst", "generated/dgl.is_libxsmm_enabled.rst", "generated/dgl.khop_adj.rst", "generated/dgl.khop_graph.rst", "generated/dgl.khop_in_subgraph.rst", "generated/dgl.khop_out_subgraph.rst", "generated/dgl.knn_graph.rst", "generated/dgl.lap_pe.rst", "generated/dgl.laplacian_lambda_max.rst", "generated/dgl.line_graph.rst", "generated/dgl.linkx_homophily.rst", "generated/dgl.load_graphs.rst", "generated/dgl.max_edges.rst", "generated/dgl.max_nodes.rst", "generated/dgl.mean_edges.rst", "generated/dgl.mean_nodes.rst", "generated/dgl.merge.rst", "generated/dgl.metapath_reachable_graph.rst", "generated/dgl.metis_partition.rst", "generated/dgl.metis_partition_assignment.rst", "generated/dgl.multiprocessing.pytorch.call_once_and_share.rst", "generated/dgl.multiprocessing.pytorch.shared_tensor.rst", "generated/dgl.nn.functional.edge_softmax.rst", "generated/dgl.nn.mxnet.HeteroGraphConv.rst", "generated/dgl.nn.mxnet.conv.AGNNConv.rst", "generated/dgl.nn.mxnet.conv.APPNPConv.rst", "generated/dgl.nn.mxnet.conv.ChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseGraphConv.rst", "generated/dgl.nn.mxnet.conv.DenseSAGEConv.rst", "generated/dgl.nn.mxnet.conv.EdgeConv.rst", "generated/dgl.nn.mxnet.conv.GATConv.rst", "generated/dgl.nn.mxnet.conv.GINConv.rst", "generated/dgl.nn.mxnet.conv.GMMConv.rst", "generated/dgl.nn.mxnet.conv.GatedGraphConv.rst", "generated/dgl.nn.mxnet.conv.GraphConv.rst", "generated/dgl.nn.mxnet.conv.NNConv.rst", "generated/dgl.nn.mxnet.conv.RelGraphConv.rst", "generated/dgl.nn.mxnet.conv.SAGEConv.rst", "generated/dgl.nn.mxnet.conv.SGConv.rst", "generated/dgl.nn.mxnet.conv.TAGConv.rst", "generated/dgl.nn.mxnet.glob.AvgPooling.rst", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.mxnet.glob.MaxPooling.rst", "generated/dgl.nn.mxnet.glob.Set2Set.rst", "generated/dgl.nn.mxnet.glob.SortPooling.rst", "generated/dgl.nn.mxnet.glob.SumPooling.rst", "generated/dgl.nn.mxnet.utils.Sequential.rst", "generated/dgl.nn.pytorch.DeepWalk.rst", "generated/dgl.nn.pytorch.HeteroEmbedding.rst", "generated/dgl.nn.pytorch.HeteroGraphConv.rst", "generated/dgl.nn.pytorch.HeteroLinear.rst", "generated/dgl.nn.pytorch.MetaPath2Vec.rst", "generated/dgl.nn.pytorch.TypedLinear.rst", "generated/dgl.nn.pytorch.conv.AGNNConv.rst", "generated/dgl.nn.pytorch.conv.APPNPConv.rst", "generated/dgl.nn.pytorch.conv.AtomicConv.rst", "generated/dgl.nn.pytorch.conv.CFConv.rst", "generated/dgl.nn.pytorch.conv.ChebConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphGATConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DGNConv.rst", "generated/dgl.nn.pytorch.conv.DenseChebConv.rst", "generated/dgl.nn.pytorch.conv.DenseGraphConv.rst", "generated/dgl.nn.pytorch.conv.DenseSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DotGatConv.rst", "generated/dgl.nn.pytorch.conv.EGATConv.rst", "generated/dgl.nn.pytorch.conv.EGNNConv.rst", "generated/dgl.nn.pytorch.conv.EdgeConv.rst", "generated/dgl.nn.pytorch.conv.EdgeGATConv.rst", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm.rst", "generated/dgl.nn.pytorch.conv.GATConv.rst", "generated/dgl.nn.pytorch.conv.GATv2Conv.rst", "generated/dgl.nn.pytorch.conv.GCN2Conv.rst", "generated/dgl.nn.pytorch.conv.GINConv.rst", "generated/dgl.nn.pytorch.conv.GINEConv.rst", "generated/dgl.nn.pytorch.conv.GMMConv.rst", "generated/dgl.nn.pytorch.conv.GatedGCNConv.rst", "generated/dgl.nn.pytorch.conv.GatedGraphConv.rst", "generated/dgl.nn.pytorch.conv.GraphConv.rst", "generated/dgl.nn.pytorch.conv.GroupRevRes.rst", "generated/dgl.nn.pytorch.conv.HGTConv.rst", "generated/dgl.nn.pytorch.conv.NNConv.rst", "generated/dgl.nn.pytorch.conv.PNAConv.rst", "generated/dgl.nn.pytorch.conv.RelGraphConv.rst", "generated/dgl.nn.pytorch.conv.SAGEConv.rst", "generated/dgl.nn.pytorch.conv.SGConv.rst", "generated/dgl.nn.pytorch.conv.TAGConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.rst", "generated/dgl.nn.pytorch.explain.GNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX.rst", "generated/dgl.nn.pytorch.explain.PGExplainer.rst", "generated/dgl.nn.pytorch.explain.SubgraphX.rst", "generated/dgl.nn.pytorch.factory.KNNGraph.rst", "generated/dgl.nn.pytorch.factory.RadiusGraph.rst", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph.rst", "generated/dgl.nn.pytorch.glob.AvgPooling.rst", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.pytorch.glob.MaxPooling.rst", "generated/dgl.nn.pytorch.glob.Set2Set.rst", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder.rst", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder.rst", "generated/dgl.nn.pytorch.glob.SortPooling.rst", "generated/dgl.nn.pytorch.glob.SumPooling.rst", "generated/dgl.nn.pytorch.glob.WeightAndSum.rst", "generated/dgl.nn.pytorch.gt.BiasedMHA.rst", "generated/dgl.nn.pytorch.gt.DegreeEncoder.rst", "generated/dgl.nn.pytorch.gt.EGTLayer.rst", "generated/dgl.nn.pytorch.gt.GraphormerLayer.rst", "generated/dgl.nn.pytorch.gt.LapPosEncoder.rst", "generated/dgl.nn.pytorch.gt.PathEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.link.EdgePredictor.rst", "generated/dgl.nn.pytorch.link.TransE.rst", "generated/dgl.nn.pytorch.link.TransR.rst", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding.rst", "generated/dgl.nn.pytorch.utils.JumpingKnowledge.rst", "generated/dgl.nn.pytorch.utils.LabelPropagation.rst", "generated/dgl.nn.pytorch.utils.Sequential.rst", "generated/dgl.nn.pytorch.utils.WeightBasis.rst", "generated/dgl.nn.tensorflow.conv.APPNPConv.rst", "generated/dgl.nn.tensorflow.conv.ChebConv.rst", "generated/dgl.nn.tensorflow.conv.GATConv.rst", "generated/dgl.nn.tensorflow.conv.GINConv.rst", "generated/dgl.nn.tensorflow.conv.GraphConv.rst", "generated/dgl.nn.tensorflow.conv.RelGraphConv.rst", "generated/dgl.nn.tensorflow.conv.SAGEConv.rst", "generated/dgl.nn.tensorflow.conv.SGConv.rst", "generated/dgl.nn.tensorflow.glob.AvgPooling.rst", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv.rst", "generated/dgl.nn.tensorflow.glob.MaxPooling.rst", "generated/dgl.nn.tensorflow.glob.SortPooling.rst", "generated/dgl.nn.tensorflow.glob.SumPooling.rst", "generated/dgl.node_homophily.rst", "generated/dgl.node_label_informativeness.rst", "generated/dgl.node_subgraph.rst", "generated/dgl.node_type_subgraph.rst", "generated/dgl.norm_by_dst.rst", "generated/dgl.ops.copy_e_max.rst", "generated/dgl.ops.copy_e_mean.rst", "generated/dgl.ops.copy_e_min.rst", "generated/dgl.ops.copy_e_sum.rst", "generated/dgl.ops.copy_u.rst", "generated/dgl.ops.copy_u_max.rst", "generated/dgl.ops.copy_u_mean.rst", "generated/dgl.ops.copy_u_min.rst", "generated/dgl.ops.copy_u_sum.rst", "generated/dgl.ops.copy_v.rst", "generated/dgl.ops.e_add_u.rst", "generated/dgl.ops.e_add_v.rst", "generated/dgl.ops.e_div_u.rst", "generated/dgl.ops.e_div_v.rst", "generated/dgl.ops.e_dot_u.rst", "generated/dgl.ops.e_dot_v.rst", "generated/dgl.ops.e_mul_u.rst", "generated/dgl.ops.e_mul_v.rst", "generated/dgl.ops.e_sub_u.rst", "generated/dgl.ops.e_sub_v.rst", "generated/dgl.ops.gather_mm.rst", "generated/dgl.ops.gsddmm.rst", "generated/dgl.ops.gspmm.rst", "generated/dgl.ops.segment_mm.rst", "generated/dgl.ops.segment_reduce.rst", "generated/dgl.ops.u_add_e.rst", "generated/dgl.ops.u_add_e_max.rst", "generated/dgl.ops.u_add_e_mean.rst", "generated/dgl.ops.u_add_e_min.rst", "generated/dgl.ops.u_add_e_sum.rst", "generated/dgl.ops.u_add_v.rst", "generated/dgl.ops.u_div_e.rst", "generated/dgl.ops.u_div_e_max.rst", "generated/dgl.ops.u_div_e_mean.rst", "generated/dgl.ops.u_div_e_min.rst", "generated/dgl.ops.u_div_e_sum.rst", "generated/dgl.ops.u_div_v.rst", "generated/dgl.ops.u_dot_e.rst", "generated/dgl.ops.u_dot_v.rst", "generated/dgl.ops.u_mul_e.rst", "generated/dgl.ops.u_mul_e_max.rst", "generated/dgl.ops.u_mul_e_mean.rst", "generated/dgl.ops.u_mul_e_min.rst", "generated/dgl.ops.u_mul_e_sum.rst", "generated/dgl.ops.u_mul_v.rst", "generated/dgl.ops.u_sub_e.rst", "generated/dgl.ops.u_sub_e_max.rst", "generated/dgl.ops.u_sub_e_mean.rst", "generated/dgl.ops.u_sub_e_min.rst", "generated/dgl.ops.u_sub_e_sum.rst", "generated/dgl.ops.u_sub_v.rst", "generated/dgl.ops.v_add_e.rst", "generated/dgl.ops.v_add_u.rst", "generated/dgl.ops.v_div_e.rst", "generated/dgl.ops.v_div_u.rst", "generated/dgl.ops.v_dot_e.rst", "generated/dgl.ops.v_dot_u.rst", "generated/dgl.ops.v_mul_e.rst", "generated/dgl.ops.v_mul_u.rst", "generated/dgl.ops.v_sub_e.rst", "generated/dgl.ops.v_sub_u.rst", "generated/dgl.out_subgraph.rst", "generated/dgl.partition_graph_with_halo.rst", "generated/dgl.prop_edges.rst", "generated/dgl.prop_edges_dfs.rst", "generated/dgl.prop_nodes.rst", "generated/dgl.prop_nodes_bfs.rst", "generated/dgl.prop_nodes_topo.rst", "generated/dgl.radius_graph.rst", "generated/dgl.rand_bipartite.rst", "generated/dgl.rand_graph.rst", "generated/dgl.random_walk_pe.rst", "generated/dgl.readout_edges.rst", "generated/dgl.readout_nodes.rst", "generated/dgl.remove_edges.rst", "generated/dgl.remove_nodes.rst", "generated/dgl.remove_self_loop.rst", "generated/dgl.reorder_graph.rst", "generated/dgl.reverse.rst", "generated/dgl.sampling.PinSAGESampler.rst", "generated/dgl.sampling.global_uniform_negative_sampling.rst", "generated/dgl.sampling.node2vec_random_walk.rst", "generated/dgl.sampling.pack_traces.rst", "generated/dgl.sampling.random_walk.rst", "generated/dgl.sampling.sample_labors.rst", "generated/dgl.sampling.sample_neighbors.rst", "generated/dgl.sampling.sample_neighbors_biased.rst", "generated/dgl.sampling.select_topk.rst", "generated/dgl.save_graphs.rst", "generated/dgl.seed.rst", "generated/dgl.segmented_knn_graph.rst", "generated/dgl.shortest_dist.rst", "generated/dgl.slice_batch.rst", "generated/dgl.softmax_edges.rst", "generated/dgl.softmax_nodes.rst", "generated/dgl.sort_csc_by_tag.rst", "generated/dgl.sort_csr_by_tag.rst", "generated/dgl.sparse.SparseMatrix.T.rst", "generated/dgl.sparse.SparseMatrix.coalesce.rst", "generated/dgl.sparse.SparseMatrix.col.rst", "generated/dgl.sparse.SparseMatrix.coo.rst", "generated/dgl.sparse.SparseMatrix.cpu.rst", "generated/dgl.sparse.SparseMatrix.csc.rst", "generated/dgl.sparse.SparseMatrix.csr.rst", "generated/dgl.sparse.SparseMatrix.cuda.rst", "generated/dgl.sparse.SparseMatrix.device.rst", "generated/dgl.sparse.SparseMatrix.double.rst", "generated/dgl.sparse.SparseMatrix.dtype.rst", "generated/dgl.sparse.SparseMatrix.float.rst", "generated/dgl.sparse.SparseMatrix.has_duplicate.rst", "generated/dgl.sparse.SparseMatrix.indices.rst", "generated/dgl.sparse.SparseMatrix.int.rst", "generated/dgl.sparse.SparseMatrix.long.rst", "generated/dgl.sparse.SparseMatrix.neg.rst", "generated/dgl.sparse.SparseMatrix.nnz.rst", "generated/dgl.sparse.SparseMatrix.reduce.rst", "generated/dgl.sparse.SparseMatrix.row.rst", "generated/dgl.sparse.SparseMatrix.shape.rst", "generated/dgl.sparse.SparseMatrix.smax.rst", "generated/dgl.sparse.SparseMatrix.smean.rst", "generated/dgl.sparse.SparseMatrix.smin.rst", "generated/dgl.sparse.SparseMatrix.softmax.rst", "generated/dgl.sparse.SparseMatrix.sum.rst", "generated/dgl.sparse.SparseMatrix.t.rst", "generated/dgl.sparse.SparseMatrix.to.rst", "generated/dgl.sparse.SparseMatrix.to_dense.rst", "generated/dgl.sparse.SparseMatrix.transpose.rst", "generated/dgl.sparse.SparseMatrix.val.rst", "generated/dgl.sparse.add.rst", "generated/dgl.sparse.bsddmm.rst", "generated/dgl.sparse.bspmm.rst", "generated/dgl.sparse.diag.rst", "generated/dgl.sparse.div.rst", "generated/dgl.sparse.from_coo.rst", "generated/dgl.sparse.from_csc.rst", "generated/dgl.sparse.from_csr.rst", "generated/dgl.sparse.identity.rst", "generated/dgl.sparse.matmul.rst", "generated/dgl.sparse.mul.rst", "generated/dgl.sparse.power.rst", "generated/dgl.sparse.sddmm.rst", "generated/dgl.sparse.softmax.rst", "generated/dgl.sparse.sp_add_v.rst", "generated/dgl.sparse.sp_broadcast_v.rst", "generated/dgl.sparse.sp_div_v.rst", "generated/dgl.sparse.sp_mul_v.rst", "generated/dgl.sparse.sp_sub_v.rst", "generated/dgl.sparse.spmatrix.rst", "generated/dgl.sparse.spmm.rst", "generated/dgl.sparse.spspmm.rst", "generated/dgl.sparse.sub.rst", "generated/dgl.sparse.val_like.rst", "generated/dgl.sum_edges.rst", "generated/dgl.sum_nodes.rst", "generated/dgl.svd_pe.rst", "generated/dgl.to_bidirected.rst", "generated/dgl.to_block.rst", "generated/dgl.to_cugraph.rst", "generated/dgl.to_double.rst", "generated/dgl.to_float.rst", "generated/dgl.to_half.rst", "generated/dgl.to_heterogeneous.rst", "generated/dgl.to_homogeneous.rst", "generated/dgl.to_networkx.rst", "generated/dgl.to_simple.rst", "generated/dgl.to_simple_graph.rst", "generated/dgl.topk_edges.rst", "generated/dgl.topk_nodes.rst", "generated/dgl.topological_nodes_generator.rst", "generated/dgl.transforms.AddEdge.rst", "generated/dgl.transforms.AddMetaPaths.rst", "generated/dgl.transforms.AddReverse.rst", "generated/dgl.transforms.AddSelfLoop.rst", "generated/dgl.transforms.BaseTransform.rst", "generated/dgl.transforms.Compose.rst", "generated/dgl.transforms.DropEdge.rst", "generated/dgl.transforms.DropNode.rst", "generated/dgl.transforms.FeatMask.rst", "generated/dgl.transforms.GCNNorm.rst", "generated/dgl.transforms.GDC.rst", "generated/dgl.transforms.HeatKernel.rst", "generated/dgl.transforms.KHopGraph.rst", "generated/dgl.transforms.LapPE.rst", "generated/dgl.transforms.LineGraph.rst", "generated/dgl.transforms.NodeShuffle.rst", "generated/dgl.transforms.PPR.rst", "generated/dgl.transforms.RandomWalkPE.rst", "generated/dgl.transforms.RemoveSelfLoop.rst", "generated/dgl.transforms.RowFeatNormalizer.rst", "generated/dgl.transforms.SIGNDiffusion.rst", "generated/dgl.transforms.SVDPE.rst", "generated/dgl.transforms.ToLevi.rst", "generated/dgl.transforms.ToSimple.rst", "generated/dgl.udf.EdgeBatch.batch_size.rst", "generated/dgl.udf.EdgeBatch.data.rst", "generated/dgl.udf.EdgeBatch.dst.rst", "generated/dgl.udf.EdgeBatch.edges.rst", "generated/dgl.udf.EdgeBatch.src.rst", "generated/dgl.udf.NodeBatch.batch_size.rst", "generated/dgl.udf.NodeBatch.data.rst", "generated/dgl.udf.NodeBatch.mailbox.rst", "generated/dgl.udf.NodeBatch.nodes.rst", "generated/dgl.unbatch.rst", "generated/dgl.use_libxsmm.rst", "graphtransformer/data.rst", "graphtransformer/index.rst", "graphtransformer/model.rst", "guide/data.rst", "guide/data-dataset.rst", "guide/data-download.rst", "guide/data-loadcsv.rst", "guide/data-loadogb.rst", "guide/data-process.rst", "guide/data-savenload.rst", "guide/distributed.rst", "guide/distributed-apis.rst", "guide/distributed-hetero.rst", "guide/distributed-partition.rst", "guide/distributed-preprocessing.rst", "guide/distributed-tools.rst", "guide/graph.rst", "guide/graph-basic.rst", "guide/graph-external.rst", "guide/graph-feature.rst", "guide/graph-gpu.rst", "guide/graph-graphs-nodes-edges.rst", "guide/graph-heterogeneous.rst", "guide/index.rst", "guide/message.rst", "guide/message-api.rst", "guide/message-efficient.rst", "guide/message-heterograph.rst", "guide/message-part.rst", "guide/minibatch.rst", "guide/minibatch-custom-sampler.rst", "guide/minibatch-edge.rst", "guide/minibatch-gpu-sampling.rst", "guide/minibatch-inference.rst", "guide/minibatch-link.rst", "guide/minibatch-nn.rst", "guide/minibatch-node.rst", "guide/minibatch-parallelism.rst", "guide/minibatch-sparse.rst", "guide/mixed_precision.rst", "guide/nn.rst", "guide/nn-construction.rst", "guide/nn-forward.rst", "guide/nn-heterograph.rst", "guide/training.rst", "guide/training-edge.rst", "guide/training-eweight.rst", "guide/training-graph.rst", "guide/training-link.rst", "guide/training-node.rst", "guide_cn/data.rst", "guide_cn/data-dataset.rst", "guide_cn/data-download.rst", "guide_cn/data-loadogb.rst", "guide_cn/data-process.rst", "guide_cn/data-savenload.rst", "guide_cn/distributed.rst", "guide_cn/distributed-apis.rst", "guide_cn/distributed-preprocessing.rst", "guide_cn/distributed-tools.rst", "guide_cn/graph.rst", "guide_cn/graph-basic.rst", "guide_cn/graph-external.rst", "guide_cn/graph-feature.rst", "guide_cn/graph-gpu.rst", "guide_cn/graph-graphs-nodes-edges.rst", "guide_cn/graph-heterogeneous.rst", "guide_cn/index.rst", "guide_cn/message.rst", "guide_cn/message-api.rst", "guide_cn/message-efficient.rst", "guide_cn/message-heterograph.rst", "guide_cn/message-part.rst", "guide_cn/minibatch.rst", "guide_cn/minibatch-custom-sampler.rst", "guide_cn/minibatch-edge.rst", "guide_cn/minibatch-inference.rst", "guide_cn/minibatch-link.rst", "guide_cn/minibatch-nn.rst", "guide_cn/minibatch-node.rst", "guide_cn/nn.rst", "guide_cn/nn-construction.rst", "guide_cn/nn-forward.rst", "guide_cn/nn-heterograph.rst", "guide_cn/training.rst", "guide_cn/training-edge.rst", "guide_cn/training-eweight.rst", "guide_cn/training-graph.rst", "guide_cn/training-link.rst", "guide_cn/training-node.rst", "guide_ko/data.rst", "guide_ko/data-dataset.rst", "guide_ko/data-download.rst", "guide_ko/data-loadogb.rst", "guide_ko/data-process.rst", "guide_ko/data-savenload.rst", "guide_ko/distributed.rst", "guide_ko/distributed-apis.rst", "guide_ko/distributed-hetero.rst", "guide_ko/distributed-preprocessing.rst", "guide_ko/distributed-tools.rst", "guide_ko/graph.rst", "guide_ko/graph-basic.rst", "guide_ko/graph-external.rst", "guide_ko/graph-feature.rst", "guide_ko/graph-gpu.rst", "guide_ko/graph-graphs-nodes-edges.rst", "guide_ko/graph-heterogeneous.rst", "guide_ko/index.rst", "guide_ko/message.rst", "guide_ko/message-api.rst", "guide_ko/message-edge.rst", "guide_ko/message-efficient.rst", "guide_ko/message-heterograph.rst", "guide_ko/message-part.rst", "guide_ko/minibatch.rst", "guide_ko/minibatch-custom-sampler.rst", "guide_ko/minibatch-edge.rst", "guide_ko/minibatch-gpu-sampling.rst", "guide_ko/minibatch-inference.rst", "guide_ko/minibatch-link.rst", "guide_ko/minibatch-nn.rst", "guide_ko/minibatch-node.rst", "guide_ko/mixed_precision.rst", "guide_ko/nn.rst", "guide_ko/nn-construction.rst", "guide_ko/nn-forward.rst", "guide_ko/nn-heterograph.rst", "guide_ko/training.rst", "guide_ko/training-edge.rst", "guide_ko/training-graph.rst", "guide_ko/training-link.rst", "guide_ko/training-node.rst", "index.rst", "install/index.rst", "notebooks/sparse/gcn.nblink", "notebooks/sparse/graph_diffusion.nblink", "notebooks/sparse/graph_transformer.nblink", "notebooks/sparse/hgnn.nblink", "notebooks/sparse/index.rst", "notebooks/sparse/quickstart.nblink", "performance.rst", "resources.rst", "sg_execution_times.rst", "stochastic_training/index.rst", "stochastic_training/link_prediction.nblink", "stochastic_training/neighbor_sampling_overview.nblink", "stochastic_training/node_classification.nblink", "stochastic_training/ondisk-dataset.rst", "stochastic_training/ondisk-dataset-specification.rst", "stochastic_training/ondisk_dataset_heterograph.nblink", "stochastic_training/ondisk_dataset_homograph.nblink", "tutorials/blitz/1_introduction.rst", "tutorials/blitz/2_dglgraph.rst", "tutorials/blitz/3_message_passing.rst", "tutorials/blitz/4_link_predict.rst", "tutorials/blitz/5_graph_classification.rst", "tutorials/blitz/6_load_data.rst", "tutorials/blitz/index.rst", "tutorials/blitz/sg_execution_times.rst", "tutorials/cpu/argo_tutorial.rst", "tutorials/cpu/cpu_best_practises.rst", "tutorials/cpu/index.rst", "tutorials/cpu/sg_execution_times.rst", "tutorials/dist/1_node_classification.rst", "tutorials/dist/2_link_prediction.rst", "tutorials/dist/index.rst", "tutorials/dist/sg_execution_times.rst", "tutorials/models/1_gnn/1_gcn.rst", "tutorials/models/1_gnn/4_rgcn.rst", "tutorials/models/1_gnn/6_line_graph.rst", "tutorials/models/1_gnn/9_gat.rst", "tutorials/models/1_gnn/index.rst", "tutorials/models/1_gnn/sg_execution_times.rst", "tutorials/models/2_small_graph/3_tree-lstm.rst", "tutorials/models/2_small_graph/index.rst", "tutorials/models/2_small_graph/sg_execution_times.rst", "tutorials/models/3_generative_model/5_dgmg.rst", "tutorials/models/3_generative_model/index.rst", "tutorials/models/3_generative_model/sg_execution_times.rst", "tutorials/models/4_old_wines/2_capsule.rst", "tutorials/models/4_old_wines/7_transformer.rst", "tutorials/models/4_old_wines/index.rst", "tutorials/models/4_old_wines/sg_execution_times.rst", "tutorials/models/index.rst", "tutorials/models/sg_execution_times.rst", "tutorials/multi/1_graph_classification.rst", "tutorials/multi/2_node_classification.rst", "tutorials/multi/index.rst", "tutorials/multi/sg_execution_times.rst"], "indexentries": {"__getitem__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__getitem__", false]], "__getitem__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__getitem__", false]], "__getitem__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__getitem__", false]], "__getitem__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__getitem__", false]], "__getitem__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__getitem__", false]], "__getitem__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__getitem__", false]], "__getitem__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__getitem__", false]], "__getitem__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__getitem__", false]], "__getitem__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__getitem__", false]], "__getitem__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__getitem__", false]], "__getitem__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__getitem__", false]], "__getitem__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__getitem__", false]], "__getitem__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__getitem__", false]], "__getitem__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__getitem__", false]], "__getitem__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__getitem__", false]], "__getitem__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__getitem__", false]], "__getitem__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__getitem__", false]], "__getitem__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__getitem__", false]], "__getitem__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__getitem__", false]], "__getitem__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__getitem__", false]], "__getitem__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__getitem__", false]], "__getitem__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__getitem__", false]], "__getitem__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__getitem__", false]], "__getitem__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__getitem__", false]], "__getitem__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__getitem__", false]], "__getitem__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__getitem__", false]], "__getitem__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__getitem__", false]], "__getitem__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__getitem__", false]], "__getitem__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__getitem__", false]], "__getitem__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__getitem__", false]], "__getitem__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__getitem__", false]], "__getitem__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__getitem__", false]], "__getitem__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__getitem__", false]], "__getitem__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__getitem__", false]], "__getitem__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__getitem__", false]], "__getitem__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__getitem__", false]], "__getitem__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__getitem__", false]], "__getitem__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__getitem__", false]], "__getitem__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__getitem__", false]], "__getitem__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__getitem__", false]], "__getitem__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__getitem__", false]], "__getitem__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__getitem__", false]], "__getitem__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__getitem__", false]], "__getitem__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__getitem__", false]], "__getitem__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__getitem__", false]], "__getitem__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__getitem__", false]], "__getitem__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__getitem__", false]], "__getitem__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__getitem__", false]], "__getitem__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__getitem__", false]], "__getitem__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__getitem__", false]], "__getitem__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__getitem__", false]], "__getitem__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__getitem__", false]], "__getitem__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__getitem__", false]], "__getitem__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__getitem__", false]], "__getitem__() (dgl.dglgraph method)": [[26, "dgl.DGLGraph.__getitem__", false]], "__init__() (dgl.dataloading.blocksampler method)": [[208, "dgl.dataloading.BlockSampler.__init__", false]], "__init__() (dgl.sampling.pinsagesampler method)": [[555, "dgl.sampling.PinSAGESampler.__init__", false]], "__len__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__len__", false]], "__len__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__len__", false]], "__len__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__len__", false]], "__len__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__len__", false]], "__len__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__len__", false]], "__len__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__len__", false]], "__len__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__len__", false]], "__len__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__len__", false]], "__len__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__len__", false]], "__len__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__len__", false]], "__len__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__len__", false]], "__len__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__len__", false]], "__len__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__len__", false]], "__len__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__len__", false]], "__len__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__len__", false]], "__len__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__len__", false]], "__len__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__len__", false]], "__len__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__len__", false]], "__len__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__len__", false]], "__len__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__len__", false]], "__len__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__len__", false]], "__len__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__len__", false]], "__len__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__len__", false]], "__len__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__len__", false]], "__len__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__len__", false]], "__len__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__len__", false]], "__len__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__len__", false]], "__len__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__len__", false]], "__len__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__len__", false]], "__len__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__len__", false]], "__len__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__len__", false]], "__len__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__len__", false]], "__len__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__len__", false]], "__len__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__len__", false]], "__len__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__len__", false]], "__len__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__len__", false]], "__len__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__len__", false]], "__len__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__len__", false]], "__len__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__len__", false]], "__len__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__len__", false]], "__len__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__len__", false]], "__len__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__len__", false]], "__len__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__len__", false]], "__len__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__len__", false]], "__len__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__len__", false]], "__len__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__len__", false]], "__len__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__len__", false]], "__len__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__len__", false]], "__len__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__len__", false]], "__len__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__len__", false]], "__len__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__len__", false]], "__len__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__len__", false]], "__len__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__len__", false]], "__len__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__len__", false]], "__len__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__len__", false]], "__len__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__len__", false]], "__len__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__len__", false]], "__len__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__len__", false]], "__len__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__len__", false]], "__len__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__len__", false]], "__len__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__len__", false]], "__len__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__len__", false]], "__len__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__len__", false]], "__len__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__len__", false]], "__len__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__len__", false]], "actordataset (class in dgl.data)": [[134, "dgl.data.ActorDataset", false]], "add() (in module dgl.sparse)": [[604, "dgl.sparse.add", false]], "add_edges() (dgl.dglgraph method)": [[27, "dgl.DGLGraph.add_edges", false]], "add_edges() (in module dgl)": [[114, "dgl.add_edges", false]], "add_node_property_split (class in dgl.data.utils)": [[197, "dgl.data.utils.add_node_property_split", false]], "add_nodepred_split (class in dgl.data.utils)": [[198, "dgl.data.utils.add_nodepred_split", false]], "add_nodes() (dgl.dglgraph method)": [[28, "dgl.DGLGraph.add_nodes", false]], "add_nodes() (in module dgl)": [[115, "dgl.add_nodes", false]], "add_reverse_edges() (in module dgl)": [[116, "dgl.add_reverse_edges", false]], "add_reverse_edges() (in module dgl.graphbolt)": [[317, "dgl.graphbolt.add_reverse_edges", false]], "add_self_loop() (dgl.dglgraph method)": [[29, "dgl.DGLGraph.add_self_loop", false]], "add_self_loop() (in module dgl)": [[117, "dgl.add_self_loop", false]], "addedge (class in dgl.transforms)": [[645, "dgl.transforms.AddEdge", false]], "addmetapaths (class in dgl.transforms)": [[646, "dgl.transforms.AddMetaPaths", false]], "addreverse (class in dgl.transforms)": [[647, "dgl.transforms.AddReverse", false]], "addselfloop (class in dgl.transforms)": [[648, "dgl.transforms.AddSelfLoop", false]], "adj() (dgl.dglgraph method)": [[30, "dgl.DGLGraph.adj", false]], "adj_external() (dgl.dglgraph method)": [[31, "dgl.DGLGraph.adj_external", false]], "adj_product_graph() (in module dgl)": [[118, "dgl.adj_product_graph", false]], "adj_sum_graph() (in module dgl)": [[119, "dgl.adj_sum_graph", false]], "adj_tensors() (dgl.dglgraph method)": [[32, "dgl.DGLGraph.adj_tensors", false]], "adjacency_matrix() (dgl.dglgraph method)": [[33, "dgl.DGLGraph.adjacency_matrix", false]], "adjusted_homophily() (in module dgl)": [[120, "dgl.adjusted_homophily", false]], "agnnconv (class in dgl.nn.mxnet.conv)": [[356, "dgl.nn.mxnet.conv.AGNNConv", false]], "agnnconv (class in dgl.nn.pytorch.conv)": [[386, "dgl.nn.pytorch.conv.AGNNConv", false]], "aifbdataset (class in dgl.data)": [[132, "dgl.data.AIFBDataset", false]], "all_nodes_set (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.all_nodes_set", false]], "amazoncobuycomputerdataset (class in dgl.data)": [[135, "dgl.data.AmazonCoBuyComputerDataset", false]], "amazoncobuyphotodataset (class in dgl.data)": [[136, "dgl.data.AmazonCoBuyPhotoDataset", false]], "amazonratingsdataset (class in dgl.data)": [[137, "dgl.data.AmazonRatingsDataset", false]], "amdataset (class in dgl.data)": [[133, "dgl.data.AMDataset", false]], "apply_each() (in module dgl)": [[121, "dgl.apply_each", false]], "apply_edges() (dgl.dglgraph method)": [[34, "dgl.DGLGraph.apply_edges", false]], "apply_nodes() (dgl.dglgraph method)": [[35, "dgl.DGLGraph.apply_nodes", false]], "appnpconv (class in dgl.nn.mxnet.conv)": [[357, "dgl.nn.mxnet.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.pytorch.conv)": [[387, "dgl.nn.pytorch.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.tensorflow.conv)": [[457, "dgl.nn.tensorflow.conv.APPNPConv", false]], "as_edge_prediction_sampler() (in module dgl.dataloading)": [[220, "dgl.dataloading.as_edge_prediction_sampler", false]], "asgraphpreddataset (class in dgl.data)": [[138, "dgl.data.AsGraphPredDataset", false]], "aslinkpreddataset (class in dgl.data)": [[139, "dgl.data.AsLinkPredDataset", false]], "asnodepreddataset (class in dgl.data)": [[140, "dgl.data.AsNodePredDataset", false]], "atomicconv (class in dgl.nn.pytorch.conv)": [[388, "dgl.nn.pytorch.conv.AtomicConv", false]], "avgpooling (class in dgl.nn.mxnet.glob)": [[373, "dgl.nn.mxnet.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.pytorch.glob)": [[432, "dgl.nn.pytorch.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.tensorflow.glob)": [[465, "dgl.nn.tensorflow.glob.AvgPooling", false]], "ba2motifdataset (class in dgl.data)": [[141, "dgl.data.BA2MotifDataset", false]], "bacommunitydataset (class in dgl.data)": [[142, "dgl.data.BACommunityDataset", false]], "barrier() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.barrier", false]], "basetransform (class in dgl.transforms)": [[649, "dgl.transforms.BaseTransform", false]], "bashapedataset (class in dgl.data)": [[143, "dgl.data.BAShapeDataset", false]], "basicfeaturestore (class in dgl.graphbolt)": [[287, "dgl.graphbolt.BasicFeatureStore", false]], "batch() (in module dgl)": [[122, "dgl.batch", false]], "batch_num_edges() (dgl.dglgraph method)": [[36, "dgl.DGLGraph.batch_num_edges", false]], "batch_num_nodes() (dgl.dglgraph method)": [[37, "dgl.DGLGraph.batch_num_nodes", false]], "batch_size (dgl.dglgraph property)": [[38, "dgl.DGLGraph.batch_size", false]], "batch_size() (dgl.udf.edgebatch method)": [[669, "dgl.udf.EdgeBatch.batch_size", false]], "batch_size() (dgl.udf.nodebatch method)": [[674, "dgl.udf.NodeBatch.batch_size", false]], "bfs_edges_generator() (in module dgl)": [[123, "dgl.bfs_edges_generator", false]], "bfs_nodes_generator() (in module dgl)": [[124, "dgl.bfs_nodes_generator", false]], "bgsdataset (class in dgl.data)": [[144, "dgl.data.BGSDataset", false]], "bias (dgl.nn.pytorch.conv.graphconv attribute)": [[412, "dgl.nn.pytorch.conv.GraphConv.bias", false]], "biasedmha (class in dgl.nn.pytorch.gt)": [[441, "dgl.nn.pytorch.gt.BiasedMHA", false]], "bipartite_from_networkx() (in module dgl)": [[125, "dgl.bipartite_from_networkx", false]], "bipartite_from_scipy() (in module dgl)": [[126, "dgl.bipartite_from_scipy", false]], "bitcoinotcdataset (class in dgl.data)": [[145, "dgl.data.BitcoinOTCDataset", false]], "block_to_graph() (in module dgl)": [[127, "dgl.block_to_graph", false]], "blocks (dgl.graphbolt.minibatch property)": [[304, "dgl.graphbolt.MiniBatch.blocks", false]], "blocksampler (class in dgl.dataloading)": [[208, "dgl.dataloading.BlockSampler", false]], "broadcast_edges() (in module dgl)": [[128, "dgl.broadcast_edges", false]], "broadcast_nodes() (in module dgl)": [[129, "dgl.broadcast_nodes", false]], "bsddmm() (in module dgl.sparse)": [[605, "dgl.sparse.bsddmm", false]], "bspmm() (in module dgl.sparse)": [[606, "dgl.sparse.bspmm", false]], "builtindataset (class in dgl.graphbolt)": [[288, "dgl.graphbolt.BuiltinDataset", false]], "call_once_and_share() (in module dgl.multiprocessing.pytorch)": [[352, "dgl.multiprocessing.pytorch.call_once_and_share", false]], "canonical_etypes (dgl.dglgraph property)": [[39, "dgl.DGLGraph.canonical_etypes", false]], "canonical_etypes (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.canonical_etypes", false]], "cfconv (class in dgl.nn.pytorch.conv)": [[389, "dgl.nn.pytorch.conv.CFConv", false]], "chameleondataset (class in dgl.data)": [[149, "dgl.data.ChameleonDataset", false]], "chebconv (class in dgl.nn.mxnet.conv)": [[358, "dgl.nn.mxnet.conv.ChebConv", false]], "chebconv (class in dgl.nn.pytorch.conv)": [[390, "dgl.nn.pytorch.conv.ChebConv", false]], "chebconv (class in dgl.nn.tensorflow.conv)": [[458, "dgl.nn.tensorflow.conv.ChebConv", false]], "check_sha1 (class in dgl.data.utils)": [[199, "dgl.data.utils.check_sha1", false]], "cifar10superpixeldataset (class in dgl.data)": [[146, "dgl.data.CIFAR10SuperPixelDataset", false]], "citeseergraphdataset (class in dgl.data)": [[150, "dgl.data.CiteseerGraphDataset", false]], "clusterdataset (class in dgl.data)": [[147, "dgl.data.CLUSTERDataset", false]], "clustergcnsampler (class in dgl.dataloading)": [[209, "dgl.dataloading.ClusterGCNSampler", false]], "coalesce() (dgl.sparse.sparsematrix method)": [[574, "dgl.sparse.SparseMatrix.coalesce", false]], "coauthorcsdataset (class in dgl.data)": [[151, "dgl.data.CoauthorCSDataset", false]], "coauthorphysicsdataset (class in dgl.data)": [[152, "dgl.data.CoauthorPhysicsDataset", false]], "col (dgl.sparse.sparsematrix property)": [[575, "dgl.sparse.SparseMatrix.col", false]], "collate_fn() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.collate_fn", false]], "compact_csc_format() (in module dgl.graphbolt)": [[318, "dgl.graphbolt.compact_csc_format", false]], "compact_graphs() (in module dgl)": [[130, "dgl.compact_graphs", false]], "compacted_negative_dsts (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.compacted_negative_dsts", false]], "compacted_negative_srcs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.compacted_negative_srcs", false]], "compacted_node_pairs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.compacted_node_pairs", false]], "compacted_seeds (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.compacted_seeds", false]], "compose (class in dgl.transforms)": [[650, "dgl.transforms.Compose", false]], "coo() (dgl.sparse.sparsematrix method)": [[576, "dgl.sparse.SparseMatrix.coo", false]], "copy_e() (in module dgl.function)": [[250, "dgl.function.copy_e", false]], "copy_e_max() (in module dgl.ops)": [[476, "dgl.ops.copy_e_max", false]], "copy_e_mean() (in module dgl.ops)": [[477, "dgl.ops.copy_e_mean", false]], "copy_e_min() (in module dgl.ops)": [[478, "dgl.ops.copy_e_min", false]], "copy_e_sum() (in module dgl.ops)": [[479, "dgl.ops.copy_e_sum", false]], "copy_to_shared_memory() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.copy_to_shared_memory", false]], "copy_to_shared_memory() (dgl.graphbolt.samplinggraph method)": [[311, "dgl.graphbolt.SamplingGraph.copy_to_shared_memory", false]], "copy_u() (in module dgl.function)": [[251, "dgl.function.copy_u", false]], "copy_u() (in module dgl.ops)": [[480, "dgl.ops.copy_u", false]], "copy_u_max() (in module dgl.ops)": [[481, "dgl.ops.copy_u_max", false]], "copy_u_mean() (in module dgl.ops)": [[482, "dgl.ops.copy_u_mean", false]], "copy_u_min() (in module dgl.ops)": [[483, "dgl.ops.copy_u_min", false]], "copy_u_sum() (in module dgl.ops)": [[484, "dgl.ops.copy_u_sum", false]], "copy_v() (in module dgl.ops)": [[485, "dgl.ops.copy_v", false]], "copyto (class in dgl.graphbolt)": [[289, "dgl.graphbolt.CopyTo", false]], "corafulldataset (class in dgl.data)": [[153, "dgl.data.CoraFullDataset", false]], "coragraphdataset (class in dgl.data)": [[154, "dgl.data.CoraGraphDataset", false]], "cornelldataset (class in dgl.data)": [[155, "dgl.data.CornellDataset", false]], "cpu() (dgl.dglgraph method)": [[40, "dgl.DGLGraph.cpu", false]], "cpu() (dgl.sparse.sparsematrix method)": [[577, "dgl.sparse.SparseMatrix.cpu", false]], "create_block() (in module dgl)": [[131, "dgl.create_block", false]], "create_formats_() (dgl.dglgraph method)": [[41, "dgl.DGLGraph.create_formats_", false]], "csc() (dgl.sparse.sparsematrix method)": [[578, "dgl.sparse.SparseMatrix.csc", false]], "csc_indptr (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.csc_indptr", false]], "csr() (dgl.sparse.sparsematrix method)": [[579, "dgl.sparse.SparseMatrix.csr", false]], "csvdataset (class in dgl.data)": [[148, "dgl.data.CSVDataset", false]], "cuda() (dgl.sparse.sparsematrix method)": [[580, "dgl.sparse.SparseMatrix.cuda", false]], "cugraphgatconv (class in dgl.nn.pytorch.conv)": [[391, "dgl.nn.pytorch.conv.CuGraphGATConv", false]], "cugraphrelgraphconv (class in dgl.nn.pytorch.conv)": [[392, "dgl.nn.pytorch.conv.CuGraphRelGraphConv", false]], "cugraphsageconv (class in dgl.nn.pytorch.conv)": [[393, "dgl.nn.pytorch.conv.CuGraphSAGEConv", false]], "data (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.data", false]], "data (dgl.udf.edgebatch property)": [[670, "dgl.udf.EdgeBatch.data", false]], "data (dgl.udf.nodebatch property)": [[675, "dgl.udf.NodeBatch.data", false]], "dataloader (class in dgl.dataloading)": [[210, "dgl.dataloading.DataLoader", false]], "dataloader (class in dgl.graphbolt)": [[290, "dgl.graphbolt.DataLoader", false]], "dataset (class in dgl.graphbolt)": [[291, "dgl.graphbolt.Dataset", false]], "dataset_name (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.dataset_name", false]], "dataset_name (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.dataset_name", false]], "dataset_name (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.dataset_name", false]], "deepwalk (class in dgl.nn.pytorch)": [[380, "dgl.nn.pytorch.DeepWalk", false]], "degreeencoder (class in dgl.nn.pytorch.gt)": [[442, "dgl.nn.pytorch.gt.DegreeEncoder", false]], "densechebconv (class in dgl.nn.mxnet.conv)": [[359, "dgl.nn.mxnet.conv.DenseChebConv", false]], "densechebconv (class in dgl.nn.pytorch.conv)": [[395, "dgl.nn.pytorch.conv.DenseChebConv", false]], "densegraphconv (class in dgl.nn.mxnet.conv)": [[360, "dgl.nn.mxnet.conv.DenseGraphConv", false]], "densegraphconv (class in dgl.nn.pytorch.conv)": [[396, "dgl.nn.pytorch.conv.DenseGraphConv", false]], "densesageconv (class in dgl.nn.mxnet.conv)": [[361, "dgl.nn.mxnet.conv.DenseSAGEConv", false]], "densesageconv (class in dgl.nn.pytorch.conv)": [[397, "dgl.nn.pytorch.conv.DenseSAGEConv", false]], "device (dgl.dglgraph property)": [[42, "dgl.DGLGraph.device", false]], "device (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.device", false]], "device (dgl.sparse.sparsematrix property)": [[581, "dgl.sparse.SparseMatrix.device", false]], "dfs_edges_generator() (in module dgl)": [[229, "dgl.dfs_edges_generator", false]], "dfs_labeled_edges_generator() (in module dgl)": [[230, "dgl.dfs_labeled_edges_generator", false]], "dgl": [[0, "module-dgl", false]], "dgl.data": [[2, "module-dgl.data", false]], "dgl.geometry": [[6, "module-dgl.geometry", false]], "dgl.nn.functional": [[18, "module-dgl.nn.functional", false]], "dgl.optim": [[10, "module-dgl.optim", false]], "dgl.sampling": [[11, "module-dgl.sampling", false]], "dgl.transforms": [[19, "module-dgl.transforms", false]], "dgldataset (class in dgl.data)": [[156, "dgl.data.DGLDataset", false]], "dglgraph (class in dgl)": [[1, "dgl.DGLGraph", false]], "dgnconv (class in dgl.nn.pytorch.conv)": [[394, "dgl.nn.pytorch.conv.DGNConv", false]], "diag() (in module dgl.sparse)": [[607, "dgl.sparse.diag", false]], "distdataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistDataLoader", false]], "distedgedataloader (class in dgl.dataloading)": [[211, "dgl.dataloading.DistEdgeDataLoader", false]], "distembedding (class in dgl.distributed)": [[4, "dgl.distributed.DistEmbedding", false]], "distgraph (class in dgl.distributed)": [[4, "dgl.distributed.DistGraph", false]], "distnodedataloader (class in dgl.dataloading)": [[212, "dgl.dataloading.DistNodeDataLoader", false]], "distributeditemsampler (class in dgl.graphbolt)": [[292, "dgl.graphbolt.DistributedItemSampler", false]], "disttensor (class in dgl.distributed)": [[4, "dgl.distributed.DistTensor", false]], "div() (in module dgl.sparse)": [[608, "dgl.sparse.div", false]], "dotgatconv (class in dgl.nn.pytorch.conv)": [[398, "dgl.nn.pytorch.conv.DotGatConv", false]], "double() (dgl.sparse.sparsematrix method)": [[582, "dgl.sparse.SparseMatrix.double", false]], "double_radius_node_labeling() (in module dgl)": [[242, "dgl.double_radius_node_labeling", false]], "download (class in dgl.data.utils)": [[200, "dgl.data.utils.download", false]], "dropedge (class in dgl.transforms)": [[651, "dgl.transforms.DropEdge", false]], "dropnode (class in dgl.transforms)": [[652, "dgl.transforms.DropNode", false]], "dst (dgl.udf.edgebatch property)": [[671, "dgl.udf.EdgeBatch.dst", false]], "dstdata (dgl.dglgraph property)": [[43, "dgl.DGLGraph.dstdata", false]], "dstnodes (dgl.dglgraph property)": [[44, "dgl.DGLGraph.dstnodes", false]], "dsttypes (dgl.dglgraph property)": [[45, "dgl.DGLGraph.dsttypes", false]], "dtype (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.dtype", false]], "dtype (dgl.sparse.sparsematrix property)": [[583, "dgl.sparse.SparseMatrix.dtype", false]], "e_add_u() (in module dgl.function)": [[252, "dgl.function.e_add_u", false]], "e_add_u() (in module dgl.ops)": [[486, "dgl.ops.e_add_u", false]], "e_add_v() (in module dgl.function)": [[253, "dgl.function.e_add_v", false]], "e_add_v() (in module dgl.ops)": [[487, "dgl.ops.e_add_v", false]], "e_div_u() (in module dgl.function)": [[254, "dgl.function.e_div_u", false]], "e_div_u() (in module dgl.ops)": [[488, "dgl.ops.e_div_u", false]], "e_div_v() (in module dgl.function)": [[255, "dgl.function.e_div_v", false]], "e_div_v() (in module dgl.ops)": [[489, "dgl.ops.e_div_v", false]], "e_dot_u() (in module dgl.function)": [[256, "dgl.function.e_dot_u", false]], "e_dot_u() (in module dgl.ops)": [[490, "dgl.ops.e_dot_u", false]], "e_dot_v() (in module dgl.function)": [[257, "dgl.function.e_dot_v", false]], "e_dot_v() (in module dgl.ops)": [[491, "dgl.ops.e_dot_v", false]], "e_mul_u() (in module dgl.function)": [[258, "dgl.function.e_mul_u", false]], "e_mul_u() (in module dgl.ops)": [[492, "dgl.ops.e_mul_u", false]], "e_mul_v() (in module dgl.function)": [[259, "dgl.function.e_mul_v", false]], "e_mul_v() (in module dgl.ops)": [[493, "dgl.ops.e_mul_v", false]], "e_sub_u() (in module dgl.function)": [[260, "dgl.function.e_sub_u", false]], "e_sub_u() (in module dgl.ops)": [[494, "dgl.ops.e_sub_u", false]], "e_sub_v() (in module dgl.function)": [[261, "dgl.function.e_sub_v", false]], "e_sub_v() (in module dgl.ops)": [[495, "dgl.ops.e_sub_v", false]], "edata (dgl.dglgraph property)": [[46, "dgl.DGLGraph.edata", false]], "edata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edata", false]], "edge_attr_schemes() (dgl.dglgraph method)": [[47, "dgl.DGLGraph.edge_attr_schemes", false]], "edge_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.edge_attr_schemes", false]], "edge_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attributes", false]], "edge_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.edge_feat_size", false]], "edge_features (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.edge_features", false]], "edge_homophily() (in module dgl)": [[243, "dgl.edge_homophily", false]], "edge_ids() (dgl.dglgraph method)": [[48, "dgl.DGLGraph.edge_ids", false]], "edge_ids() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.edge_ids", false]], "edge_label_informativeness() (in module dgl)": [[244, "dgl.edge_label_informativeness", false]], "edge_softmax() (in module dgl.nn.functional)": [[354, "dgl.nn.functional.edge_softmax", false]], "edge_split() (in module dgl.distributed)": [[231, "dgl.distributed.edge_split", false]], "edge_subgraph() (dgl.dglgraph method)": [[49, "dgl.DGLGraph.edge_subgraph", false]], "edge_subgraph() (in module dgl)": [[245, "dgl.edge_subgraph", false]], "edge_type_subgraph() (dgl.dglgraph method)": [[50, "dgl.DGLGraph.edge_type_subgraph", false]], "edge_type_subgraph() (in module dgl)": [[246, "dgl.edge_type_subgraph", false]], "edge_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.edge_type_to_id", false]], "edgeconv (class in dgl.nn.mxnet.conv)": [[362, "dgl.nn.mxnet.conv.EdgeConv", false]], "edgeconv (class in dgl.nn.pytorch.conv)": [[401, "dgl.nn.pytorch.conv.EdgeConv", false]], "edgegatconv (class in dgl.nn.pytorch.conv)": [[402, "dgl.nn.pytorch.conv.EdgeGATConv", false]], "edgepredictor (class in dgl.nn.pytorch.link)": [[449, "dgl.nn.pytorch.link.EdgePredictor", false]], "edges (dgl.dglgraph property)": [[51, "dgl.DGLGraph.edges", false]], "edges (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edges", false]], "edges() (dgl.udf.edgebatch method)": [[672, "dgl.udf.EdgeBatch.edges", false]], "edgeweightnorm (class in dgl.nn.pytorch.conv)": [[403, "dgl.nn.pytorch.conv.EdgeWeightNorm", false]], "egatconv (class in dgl.nn.pytorch.conv)": [[399, "dgl.nn.pytorch.conv.EGATConv", false]], "egnnconv (class in dgl.nn.pytorch.conv)": [[400, "dgl.nn.pytorch.conv.EGNNConv", false]], "egtlayer (class in dgl.nn.pytorch.gt)": [[443, "dgl.nn.pytorch.gt.EGTLayer", false]], "eid2localeid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2localeid", false]], "eid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2partid", false]], "end_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.end_time", false]], "etype_str_to_tuple() (in module dgl.graphbolt)": [[319, "dgl.graphbolt.etype_str_to_tuple", false]], "etype_tuple_to_str() (in module dgl.graphbolt)": [[320, "dgl.graphbolt.etype_tuple_to_str", false]], "etypes (dgl.dglgraph property)": [[52, "dgl.DGLGraph.etypes", false]], "etypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.etypes", false]], "exclude_edges() (dgl.graphbolt.sampledsubgraph method)": [[309, "dgl.graphbolt.SampledSubgraph.exclude_edges", false]], "exclude_seed_edges() (in module dgl.graphbolt)": [[321, "dgl.graphbolt.exclude_seed_edges", false]], "expand_indptr() (in module dgl.graphbolt)": [[322, "dgl.graphbolt.expand_indptr", false]], "explain_graph() (dgl.nn.pytorch.explain.gnnexplainer method)": [[423, "dgl.nn.pytorch.explain.GNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[424, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[425, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[426, "dgl.nn.pytorch.explain.HeteroSubgraphX.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.pgexplainer method)": [[427, "dgl.nn.pytorch.explain.PGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.subgraphx method)": [[428, "dgl.nn.pytorch.explain.SubgraphX.explain_graph", false]], "explain_node() (dgl.nn.pytorch.explain.gnnexplainer method)": [[423, "dgl.nn.pytorch.explain.GNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[424, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[425, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[427, "dgl.nn.pytorch.explain.PGExplainer.explain_node", false]], "extract_archive (class in dgl.data.utils)": [[201, "dgl.data.utils.extract_archive", false]], "fakenewsdataset (class in dgl.data)": [[159, "dgl.data.FakeNewsDataset", false]], "farthest_point_sampler (class in dgl.geometry)": [[6, "dgl.geometry.farthest_point_sampler", false]], "fb15k237dataset (class in dgl.data)": [[157, "dgl.data.FB15k237Dataset", false]], "fb15kdataset (class in dgl.data)": [[158, "dgl.data.FB15kDataset", false]], "feat_size (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.feat_size", false]], "featmask (class in dgl.transforms)": [[653, "dgl.transforms.FeatMask", false]], "feature (class in dgl.graphbolt)": [[293, "dgl.graphbolt.Feature", false]], "feature (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature", false]], "feature (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.feature", false]], "feature (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.feature", false]], "feature (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.feature", false]], "feature_name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature_name", false]], "featurefetcher (class in dgl.graphbolt)": [[294, "dgl.graphbolt.FeatureFetcher", false]], "features (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.features", false]], "featurestore (class in dgl.graphbolt)": [[295, "dgl.graphbolt.FeatureStore", false]], "filter_edges() (dgl.dglgraph method)": [[53, "dgl.DGLGraph.filter_edges", false]], "filter_nodes() (dgl.dglgraph method)": [[54, "dgl.DGLGraph.filter_nodes", false]], "find_edges() (dgl.dglgraph method)": [[55, "dgl.DGLGraph.find_edges", false]], "find_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.find_edges", false]], "find_edges() (in module dgl.distributed)": [[232, "dgl.distributed.find_edges", false]], "flickrdataset (class in dgl.data)": [[160, "dgl.data.FlickrDataset", false]], "float() (dgl.sparse.sparsematrix method)": [[584, "dgl.sparse.SparseMatrix.float", false]], "formats() (dgl.dglgraph method)": [[56, "dgl.DGLGraph.formats", false]], "forward() (dgl.nn.pytorch.conv.agnnconv method)": [[386, "dgl.nn.pytorch.conv.AGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.appnpconv method)": [[387, "dgl.nn.pytorch.conv.APPNPConv.forward", false]], "forward() (dgl.nn.pytorch.conv.atomicconv method)": [[388, "dgl.nn.pytorch.conv.AtomicConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cfconv method)": [[389, "dgl.nn.pytorch.conv.CFConv.forward", false]], "forward() (dgl.nn.pytorch.conv.chebconv method)": [[390, "dgl.nn.pytorch.conv.ChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[391, "dgl.nn.pytorch.conv.CuGraphGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[392, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[393, "dgl.nn.pytorch.conv.CuGraphSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densechebconv method)": [[395, "dgl.nn.pytorch.conv.DenseChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densegraphconv method)": [[396, "dgl.nn.pytorch.conv.DenseGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densesageconv method)": [[397, "dgl.nn.pytorch.conv.DenseSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dgnconv method)": [[394, "dgl.nn.pytorch.conv.DGNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dotgatconv method)": [[398, "dgl.nn.pytorch.conv.DotGatConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeconv method)": [[401, "dgl.nn.pytorch.conv.EdgeConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgegatconv method)": [[402, "dgl.nn.pytorch.conv.EdgeGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeweightnorm method)": [[403, "dgl.nn.pytorch.conv.EdgeWeightNorm.forward", false]], "forward() (dgl.nn.pytorch.conv.egatconv method)": [[399, "dgl.nn.pytorch.conv.EGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.egnnconv method)": [[400, "dgl.nn.pytorch.conv.EGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatconv method)": [[404, "dgl.nn.pytorch.conv.GATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgcnconv method)": [[410, "dgl.nn.pytorch.conv.GatedGCNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[411, "dgl.nn.pytorch.conv.GatedGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatv2conv method)": [[405, "dgl.nn.pytorch.conv.GATv2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.gcn2conv method)": [[406, "dgl.nn.pytorch.conv.GCN2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.ginconv method)": [[407, "dgl.nn.pytorch.conv.GINConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gineconv method)": [[408, "dgl.nn.pytorch.conv.GINEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gmmconv method)": [[409, "dgl.nn.pytorch.conv.GMMConv.forward", false]], "forward() (dgl.nn.pytorch.conv.graphconv method)": [[412, "dgl.nn.pytorch.conv.GraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.grouprevres method)": [[413, "dgl.nn.pytorch.conv.GroupRevRes.forward", false]], "forward() (dgl.nn.pytorch.conv.hgtconv method)": [[414, "dgl.nn.pytorch.conv.HGTConv.forward", false]], "forward() (dgl.nn.pytorch.conv.nnconv method)": [[415, "dgl.nn.pytorch.conv.NNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.pnaconv method)": [[416, "dgl.nn.pytorch.conv.PNAConv.forward", false]], "forward() (dgl.nn.pytorch.conv.relgraphconv method)": [[417, "dgl.nn.pytorch.conv.RelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sageconv method)": [[418, "dgl.nn.pytorch.conv.SAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sgconv method)": [[419, "dgl.nn.pytorch.conv.SGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.tagconv method)": [[420, "dgl.nn.pytorch.conv.TAGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsconv method)": [[421, "dgl.nn.pytorch.conv.TWIRLSConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsunfoldingandattention method)": [[422, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.forward", false]], "forward() (dgl.nn.pytorch.deepwalk method)": [[380, "dgl.nn.pytorch.DeepWalk.forward", false]], "forward() (dgl.nn.pytorch.explain.gnnexplainer method)": [[423, "dgl.nn.pytorch.explain.GNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[424, "dgl.nn.pytorch.explain.HeteroGNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[425, "dgl.nn.pytorch.explain.HeteroPGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[426, "dgl.nn.pytorch.explain.HeteroSubgraphX.forward", false]], "forward() (dgl.nn.pytorch.explain.pgexplainer method)": [[427, "dgl.nn.pytorch.explain.PGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.subgraphx method)": [[428, "dgl.nn.pytorch.explain.SubgraphX.forward", false]], "forward() (dgl.nn.pytorch.factory.knngraph method)": [[429, "dgl.nn.pytorch.factory.KNNGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.radiusgraph method)": [[430, "dgl.nn.pytorch.factory.RadiusGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.segmentedknngraph method)": [[431, "dgl.nn.pytorch.factory.SegmentedKNNGraph.forward", false]], "forward() (dgl.nn.pytorch.glob.avgpooling method)": [[432, "dgl.nn.pytorch.glob.AvgPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.globalattentionpooling method)": [[433, "dgl.nn.pytorch.glob.GlobalAttentionPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.maxpooling method)": [[434, "dgl.nn.pytorch.glob.MaxPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.set2set method)": [[435, "dgl.nn.pytorch.glob.Set2Set.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerdecoder method)": [[436, "dgl.nn.pytorch.glob.SetTransformerDecoder.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerencoder method)": [[437, "dgl.nn.pytorch.glob.SetTransformerEncoder.forward", false]], "forward() (dgl.nn.pytorch.glob.sortpooling method)": [[438, "dgl.nn.pytorch.glob.SortPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.sumpooling method)": [[439, "dgl.nn.pytorch.glob.SumPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.weightandsum method)": [[440, "dgl.nn.pytorch.glob.WeightAndSum.forward", false]], "forward() (dgl.nn.pytorch.gt.biasedmha method)": [[441, "dgl.nn.pytorch.gt.BiasedMHA.forward", false]], "forward() (dgl.nn.pytorch.gt.degreeencoder method)": [[442, "dgl.nn.pytorch.gt.DegreeEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.egtlayer method)": [[443, "dgl.nn.pytorch.gt.EGTLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.graphormerlayer method)": [[444, "dgl.nn.pytorch.gt.GraphormerLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.lapposencoder method)": [[445, "dgl.nn.pytorch.gt.LapPosEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.pathencoder method)": [[446, "dgl.nn.pytorch.gt.PathEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder method)": [[447, "dgl.nn.pytorch.gt.SpatialEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder3d method)": [[448, "dgl.nn.pytorch.gt.SpatialEncoder3d.forward", false]], "forward() (dgl.nn.pytorch.heteroembedding method)": [[381, "dgl.nn.pytorch.HeteroEmbedding.forward", false]], "forward() (dgl.nn.pytorch.heterographconv method)": [[382, "dgl.nn.pytorch.HeteroGraphConv.forward", false]], "forward() (dgl.nn.pytorch.heterolinear method)": [[383, "dgl.nn.pytorch.HeteroLinear.forward", false]], "forward() (dgl.nn.pytorch.link.edgepredictor method)": [[449, "dgl.nn.pytorch.link.EdgePredictor.forward", false]], "forward() (dgl.nn.pytorch.link.transe method)": [[450, "dgl.nn.pytorch.link.TransE.forward", false]], "forward() (dgl.nn.pytorch.link.transr method)": [[451, "dgl.nn.pytorch.link.TransR.forward", false]], "forward() (dgl.nn.pytorch.metapath2vec method)": [[384, "dgl.nn.pytorch.MetaPath2Vec.forward", false]], "forward() (dgl.nn.pytorch.typedlinear method)": [[385, "dgl.nn.pytorch.TypedLinear.forward", false]], "forward() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[453, "dgl.nn.pytorch.utils.JumpingKnowledge.forward", false]], "forward() (dgl.nn.pytorch.utils.labelpropagation method)": [[454, "dgl.nn.pytorch.utils.LabelPropagation.forward", false]], "forward() (dgl.nn.pytorch.utils.sequential method)": [[455, "dgl.nn.pytorch.utils.Sequential.forward", false]], "forward() (dgl.nn.pytorch.utils.weightbasis method)": [[456, "dgl.nn.pytorch.utils.WeightBasis.forward", false]], "fraudamazondataset (class in dgl.data)": [[161, "dgl.data.FraudAmazonDataset", false]], "frauddataset (class in dgl.data)": [[162, "dgl.data.FraudDataset", false]], "fraudyelpdataset (class in dgl.data)": [[163, "dgl.data.FraudYelpDataset", false]], "from_coo() (in module dgl.sparse)": [[609, "dgl.sparse.from_coo", false]], "from_csc() (in module dgl.sparse)": [[610, "dgl.sparse.from_csc", false]], "from_csr() (in module dgl.sparse)": [[611, "dgl.sparse.from_csr", false]], "from_cugraph() (in module dgl)": [[247, "dgl.from_cugraph", false]], "from_dglgraph() (in module dgl.graphbolt)": [[323, "dgl.graphbolt.from_dglgraph", false]], "from_networkx() (in module dgl)": [[248, "dgl.from_networkx", false]], "from_scipy() (in module dgl)": [[249, "dgl.from_scipy", false]], "fused_csc_sampling_graph() (in module dgl.graphbolt)": [[324, "dgl.graphbolt.fused_csc_sampling_graph", false]], "fusedcscsamplinggraph (class in dgl.graphbolt)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph", false]], "gatconv (class in dgl.nn.mxnet.conv)": [[363, "dgl.nn.mxnet.conv.GATConv", false]], "gatconv (class in dgl.nn.pytorch.conv)": [[404, "dgl.nn.pytorch.conv.GATConv", false]], "gatconv (class in dgl.nn.tensorflow.conv)": [[459, "dgl.nn.tensorflow.conv.GATConv", false]], "gatedgcnconv (class in dgl.nn.pytorch.conv)": [[410, "dgl.nn.pytorch.conv.GatedGCNConv", false]], "gatedgraphconv (class in dgl.nn.mxnet.conv)": [[366, "dgl.nn.mxnet.conv.GatedGraphConv", false]], "gatedgraphconv (class in dgl.nn.pytorch.conv)": [[411, "dgl.nn.pytorch.conv.GatedGraphConv", false]], "gather_mm() (in module dgl.ops)": [[496, "dgl.ops.gather_mm", false]], "gatv2conv (class in dgl.nn.pytorch.conv)": [[405, "dgl.nn.pytorch.conv.GATv2Conv", false]], "gcn2conv (class in dgl.nn.pytorch.conv)": [[406, "dgl.nn.pytorch.conv.GCN2Conv", false]], "gcnnorm (class in dgl.transforms)": [[654, "dgl.transforms.GCNNorm", false]], "gdc (class in dgl.transforms)": [[655, "dgl.transforms.GDC", false]], "gdeltdataset (class in dgl.data)": [[164, "dgl.data.GDELTDataset", false]], "get_download_dir (class in dgl.data.utils)": [[202, "dgl.data.utils.get_download_dir", false]], "get_edge_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_edge_partition_policy", false]], "get_etype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_etype_id", false]], "get_node_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_node_partition_policy", false]], "get_ntype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_ntype_id", false]], "get_part_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_part_size", false]], "get_partition_book() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_partition_book", false]], "get_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_size", false]], "ginconv (class in dgl.nn.mxnet.conv)": [[364, "dgl.nn.mxnet.conv.GINConv", false]], "ginconv (class in dgl.nn.pytorch.conv)": [[407, "dgl.nn.pytorch.conv.GINConv", false]], "ginconv (class in dgl.nn.tensorflow.conv)": [[460, "dgl.nn.tensorflow.conv.GINConv", false]], "gindataset (class in dgl.data)": [[165, "dgl.data.GINDataset", false]], "gineconv (class in dgl.nn.pytorch.conv)": [[408, "dgl.nn.pytorch.conv.GINEConv", false]], "global_uniform_negative_sampling() (in module dgl.sampling)": [[556, "dgl.sampling.global_uniform_negative_sampling", false]], "globalattentionpooling (class in dgl.nn.mxnet.glob)": [[374, "dgl.nn.mxnet.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.pytorch.glob)": [[433, "dgl.nn.pytorch.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.tensorflow.glob)": [[466, "dgl.nn.tensorflow.glob.GlobalAttentionPooling", false]], "globaluniform (class in dgl.dataloading.negative_sampler)": [[226, "dgl.dataloading.negative_sampler.GlobalUniform", false]], "gmmconv (class in dgl.nn.mxnet.conv)": [[365, "dgl.nn.mxnet.conv.GMMConv", false]], "gmmconv (class in dgl.nn.pytorch.conv)": [[409, "dgl.nn.pytorch.conv.GMMConv", false]], "gnnexplainer (class in dgl.nn.pytorch.explain)": [[423, "dgl.nn.pytorch.explain.GNNExplainer", false]], "gpucachedfeature (class in dgl.graphbolt)": [[297, "dgl.graphbolt.GPUCachedFeature", false]], "graph (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.graph", false]], "graph (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.graph", false]], "graph (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.graph", false]], "graph (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.graph", false]], "graph (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.graph", false]], "graph() (in module dgl)": [[286, "dgl.graph", false]], "graphconv (class in dgl.nn.mxnet.conv)": [[367, "dgl.nn.mxnet.conv.GraphConv", false]], "graphconv (class in dgl.nn.pytorch.conv)": [[412, "dgl.nn.pytorch.conv.GraphConv", false]], "graphconv (class in dgl.nn.tensorflow.conv)": [[461, "dgl.nn.tensorflow.conv.GraphConv", false]], "graphdataloader (class in dgl.dataloading)": [[213, "dgl.dataloading.GraphDataLoader", false]], "graphormerlayer (class in dgl.nn.pytorch.gt)": [[444, "dgl.nn.pytorch.gt.GraphormerLayer", false]], "graphpartitionbook (class in dgl.distributed)": [[4, "dgl.distributed.GraphPartitionBook", false]], "graphs (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.graphs", false]], "graphs (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.graphs", false]], "graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.graphs", false]], "grouprevres (class in dgl.nn.pytorch.conv)": [[413, "dgl.nn.pytorch.conv.GroupRevRes", false]], "gsddmm() (in module dgl.ops)": [[497, "dgl.ops.gsddmm", false]], "gspmm() (in module dgl.ops)": [[498, "dgl.ops.gspmm", false]], "has_duplicate() (dgl.sparse.sparsematrix method)": [[585, "dgl.sparse.SparseMatrix.has_duplicate", false]], "has_edges_between() (dgl.dglgraph method)": [[57, "dgl.DGLGraph.has_edges_between", false]], "has_nodes() (dgl.dglgraph method)": [[58, "dgl.DGLGraph.has_nodes", false]], "hash (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.hash", false]], "heatkernel (class in dgl.transforms)": [[656, "dgl.transforms.HeatKernel", false]], "heteroembedding (class in dgl.nn.pytorch)": [[381, "dgl.nn.pytorch.HeteroEmbedding", false]], "heterognnexplainer (class in dgl.nn.pytorch.explain)": [[424, "dgl.nn.pytorch.explain.HeteroGNNExplainer", false]], "heterograph() (in module dgl)": [[331, "dgl.heterograph", false]], "heterographconv (class in dgl.nn.mxnet)": [[355, "dgl.nn.mxnet.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.pytorch)": [[382, "dgl.nn.pytorch.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.tensorflow.glob)": [[467, "dgl.nn.tensorflow.glob.HeteroGraphConv", false]], "heterolinear (class in dgl.nn.pytorch)": [[383, "dgl.nn.pytorch.HeteroLinear", false]], "heteropgexplainer (class in dgl.nn.pytorch.explain)": [[425, "dgl.nn.pytorch.explain.HeteroPGExplainer", false]], "heterosubgraphx (class in dgl.nn.pytorch.explain)": [[426, "dgl.nn.pytorch.explain.HeteroSubgraphX", false]], "hgtconv (class in dgl.nn.pytorch.conv)": [[414, "dgl.nn.pytorch.conv.HGTConv", false]], "icews18dataset (class in dgl.data)": [[166, "dgl.data.ICEWS18Dataset", false]], "identity() (in module dgl.sparse)": [[612, "dgl.sparse.identity", false]], "idtype (dgl.dglgraph property)": [[59, "dgl.DGLGraph.idtype", false]], "idtype (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.idtype", false]], "in_degrees() (dgl.dglgraph method)": [[60, "dgl.DGLGraph.in_degrees", false]], "in_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.in_degrees", false]], "in_edges() (dgl.dglgraph method)": [[61, "dgl.DGLGraph.in_edges", false]], "in_subgraph() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.in_subgraph", false]], "in_subgraph() (in module dgl)": [[332, "dgl.in_subgraph", false]], "in_subgraph() (in module dgl.distributed)": [[233, "dgl.distributed.in_subgraph", false]], "inc() (dgl.dglgraph method)": [[62, "dgl.DGLGraph.inc", false]], "incidence_matrix() (dgl.dglgraph method)": [[63, "dgl.DGLGraph.incidence_matrix", false]], "index_select() (in module dgl.graphbolt)": [[325, "dgl.graphbolt.index_select", false]], "indexes (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.indexes", false]], "indices (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.indices", false]], "indices() (dgl.sparse.sparsematrix method)": [[586, "dgl.sparse.SparseMatrix.indices", false]], "initialize() (in module dgl.distributed)": [[234, "dgl.distributed.initialize", false]], "input_nodes (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.input_nodes", false]], "insubgraphsampler (class in dgl.graphbolt)": [[298, "dgl.graphbolt.InSubgraphSampler", false]], "int() (dgl.dglgraph method)": [[64, "dgl.DGLGraph.int", false]], "int() (dgl.sparse.sparsematrix method)": [[587, "dgl.sparse.SparseMatrix.int", false]], "is_homogeneous (dgl.dglgraph property)": [[65, "dgl.DGLGraph.is_homogeneous", false]], "is_libxsmm_enabled() (in module dgl)": [[333, "dgl.is_libxsmm_enabled", false]], "is_multigraph (dgl.dglgraph property)": [[66, "dgl.DGLGraph.is_multigraph", false]], "is_pinned() (dgl.dglgraph method)": [[67, "dgl.DGLGraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeaturestore method)": [[315, "dgl.graphbolt.TorchBasedFeatureStore.is_pinned", false]], "is_temporal (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.is_temporal", false]], "is_temporal (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.is_temporal", false]], "is_temporal (dgl.data.icews18dataset attribute)": [[166, "dgl.data.ICEWS18Dataset.is_temporal", false]], "is_unibipartite (dgl.dglgraph property)": [[68, "dgl.DGLGraph.is_unibipartite", false]], "isin() (in module dgl.graphbolt)": [[326, "dgl.graphbolt.isin", false]], "itemsampler (class in dgl.graphbolt)": [[299, "dgl.graphbolt.ItemSampler", false]], "itemset (class in dgl.graphbolt)": [[300, "dgl.graphbolt.ItemSet", false]], "itemsetdict (class in dgl.graphbolt)": [[301, "dgl.graphbolt.ItemSetDict", false]], "jumpingknowledge (class in dgl.nn.pytorch.utils)": [[453, "dgl.nn.pytorch.utils.JumpingKnowledge", false]], "karateclubdataset (class in dgl.data)": [[167, "dgl.data.KarateClubDataset", false]], "keys() (dgl.graphbolt.basicfeaturestore method)": [[287, "dgl.graphbolt.BasicFeatureStore.keys", false]], "keys() (dgl.graphbolt.featurestore method)": [[295, "dgl.graphbolt.FeatureStore.keys", false]], "khop_adj() (in module dgl)": [[334, "dgl.khop_adj", false]], "khop_graph() (in module dgl)": [[335, "dgl.khop_graph", false]], "khop_in_subgraph() (in module dgl)": [[336, "dgl.khop_in_subgraph", false]], "khop_out_subgraph() (in module dgl)": [[337, "dgl.khop_out_subgraph", false]], "khopgraph (class in dgl.transforms)": [[657, "dgl.transforms.KHopGraph", false]], "knn_graph() (in module dgl)": [[338, "dgl.knn_graph", false]], "knngraph (class in dgl.nn.pytorch.factory)": [[429, "dgl.nn.pytorch.factory.KNNGraph", false]], "labelpropagation (class in dgl.nn.pytorch.utils)": [[454, "dgl.nn.pytorch.utils.LabelPropagation", false]], "labels (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.labels", false]], "labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.labels", false]], "labels (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.labels", false]], "laborsampler (class in dgl.dataloading)": [[214, "dgl.dataloading.LaborSampler", false]], "lap_pe() (in module dgl)": [[339, "dgl.lap_pe", false]], "laplacian_lambda_max() (in module dgl)": [[340, "dgl.laplacian_lambda_max", false]], "lappe (class in dgl.transforms)": [[658, "dgl.transforms.LapPE", false]], "lapposencoder (class in dgl.nn.pytorch.gt)": [[445, "dgl.nn.pytorch.gt.LapPosEncoder", false]], "layerneighborsampler (class in dgl.graphbolt)": [[302, "dgl.graphbolt.LayerNeighborSampler", false]], "lazyfeature (class in dgl.dataloading.base)": [[221, "dgl.dataloading.base.LazyFeature", false]], "legacydataset (class in dgl.graphbolt)": [[303, "dgl.graphbolt.LegacyDataset", false]], "legacytudataset (class in dgl.data)": [[168, "dgl.data.LegacyTUDataset", false]], "lin (dgl.nn.pytorch.conv.tagconv attribute)": [[420, "dgl.nn.pytorch.conv.TAGConv.lin", false]], "line_graph() (dgl.dglgraph method)": [[69, "dgl.DGLGraph.line_graph", false]], "line_graph() (in module dgl)": [[341, "dgl.line_graph", false]], "linegraph (class in dgl.transforms)": [[659, "dgl.transforms.LineGraph", false]], "linkx_homophily() (in module dgl)": [[342, "dgl.linkx_homophily", false]], "load() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.load", false]], "load() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.load", false]], "load() (dgl.graphbolt.ondiskdataset method)": [[308, "dgl.graphbolt.OnDiskDataset.load", false]], "load_from_shared_memory() (in module dgl.graphbolt)": [[327, "dgl.graphbolt.load_from_shared_memory", false]], "load_graphs() (in module dgl)": [[343, "dgl.load_graphs", false]], "load_info (class in dgl.data.utils)": [[203, "dgl.data.utils.load_info", false]], "load_labels (class in dgl.data.utils)": [[204, "dgl.data.utils.load_labels", false]], "load_partition() (in module dgl.distributed)": [[235, "dgl.distributed.load_partition", false]], "load_partition_book() (in module dgl.distributed)": [[236, "dgl.distributed.load_partition_book", false]], "load_partition_feats() (in module dgl.distributed)": [[237, "dgl.distributed.load_partition_feats", false]], "local_partition (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.local_partition", false]], "local_scope() (dgl.dglgraph method)": [[70, "dgl.DGLGraph.local_scope", false]], "local_to_global_nid (dgl.nn.pytorch.metapath2vec attribute)": [[384, "dgl.nn.pytorch.MetaPath2Vec.local_to_global_nid", false]], "long() (dgl.dglgraph method)": [[71, "dgl.DGLGraph.long", false]], "long() (dgl.sparse.sparsematrix method)": [[588, "dgl.sparse.SparseMatrix.long", false]], "mailbox (dgl.udf.nodebatch property)": [[676, "dgl.udf.NodeBatch.mailbox", false]], "map_to_homo_eid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_eid", false]], "map_to_homo_nid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_nid", false]], "map_to_per_etype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_etype", false]], "map_to_per_ntype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_ntype", false]], "mask_nodes_by_property (class in dgl.data.utils)": [[205, "dgl.data.utils.mask_nodes_by_property", false]], "matmul() (in module dgl.sparse)": [[613, "dgl.sparse.matmul", false]], "max() (in module dgl.function)": [[262, "dgl.function.max", false]], "max_edges() (in module dgl)": [[344, "dgl.max_edges", false]], "max_nodes() (in module dgl)": [[345, "dgl.max_nodes", false]], "max_num_node (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.max_num_node", false]], "max_num_node (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.max_num_node", false]], "max_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.max_num_v", false]], "maxpooling (class in dgl.nn.mxnet.glob)": [[375, "dgl.nn.mxnet.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.pytorch.glob)": [[434, "dgl.nn.pytorch.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.tensorflow.glob)": [[468, "dgl.nn.tensorflow.glob.MaxPooling", false]], "mean() (in module dgl.function)": [[263, "dgl.function.mean", false]], "mean_edges() (in module dgl)": [[346, "dgl.mean_edges", false]], "mean_nodes() (in module dgl)": [[347, "dgl.mean_nodes", false]], "merge() (in module dgl)": [[348, "dgl.merge", false]], "metadata (dgl.graphbolt.task property)": [[313, "dgl.graphbolt.Task.metadata", false]], "metadata() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.metadata", false]], "metadata() (dgl.graphbolt.basicfeaturestore method)": [[287, "dgl.graphbolt.BasicFeatureStore.metadata", false]], "metadata() (dgl.graphbolt.feature method)": [[293, "dgl.graphbolt.Feature.metadata", false]], "metadata() (dgl.graphbolt.featurestore method)": [[295, "dgl.graphbolt.FeatureStore.metadata", false]], "metadata() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.metadata", false]], "metagraph() (dgl.dglgraph method)": [[72, "dgl.DGLGraph.metagraph", false]], "metapath2vec (class in dgl.nn.pytorch)": [[384, "dgl.nn.pytorch.MetaPath2Vec", false]], "metapath_reachable_graph() (in module dgl)": [[349, "dgl.metapath_reachable_graph", false]], "metis_partition() (in module dgl)": [[350, "dgl.metis_partition", false]], "metis_partition_assignment() (in module dgl)": [[351, "dgl.metis_partition_assignment", false]], "min() (in module dgl.function)": [[264, "dgl.function.min", false]], "min_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.min_num_v", false]], "minesweeperdataset (class in dgl.data)": [[171, "dgl.data.MinesweeperDataset", false]], "minibatch (class in dgl.graphbolt)": [[304, "dgl.graphbolt.MiniBatch", false]], "minibatchtransformer (class in dgl.graphbolt)": [[305, "dgl.graphbolt.MiniBatchTransformer", false]], "minigcdataset (class in dgl.data)": [[172, "dgl.data.MiniGCDataset", false]], "mnistsuperpixeldataset (class in dgl.data)": [[169, "dgl.data.MNISTSuperPixelDataset", false]], "mods (dgl.nn.pytorch.heterographconv attribute)": [[382, "dgl.nn.pytorch.HeteroGraphConv.mods", false]], "module": [[0, "module-dgl", false], [2, "module-dgl.data", false], [6, "module-dgl.geometry", false], [10, "module-dgl.optim", false], [11, "module-dgl.sampling", false], [18, "module-dgl.nn.functional", false], [19, "module-dgl.transforms", false]], "movielensdataset (class in dgl.data)": [[173, "dgl.data.MovieLensDataset", false]], "mul() (in module dgl.sparse)": [[614, "dgl.sparse.mul", false]], "multi_update_all() (dgl.dglgraph method)": [[73, "dgl.DGLGraph.multi_update_all", false]], "multilayerfullneighborsampler (class in dgl.dataloading)": [[215, "dgl.dataloading.MultiLayerFullNeighborSampler", false]], "mutagdataset (class in dgl.data)": [[170, "dgl.data.MUTAGDataset", false]], "name (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.name", false]], "name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.name", false]], "name (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.name", false]], "names (dgl.graphbolt.itemset property)": [[300, "dgl.graphbolt.ItemSet.names", false]], "names (dgl.graphbolt.itemsetdict property)": [[301, "dgl.graphbolt.ItemSetDict.names", false]], "ndata (dgl.dglgraph property)": [[74, "dgl.DGLGraph.ndata", false]], "ndata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ndata", false]], "neg() (dgl.sparse.sparsematrix method)": [[589, "dgl.sparse.SparseMatrix.neg", false]], "negative_dsts (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.negative_dsts", false]], "negative_node_pairs (dgl.graphbolt.minibatch property)": [[304, "dgl.graphbolt.MiniBatch.negative_node_pairs", false]], "negative_srcs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.negative_srcs", false]], "negativesampler (class in dgl.graphbolt)": [[306, "dgl.graphbolt.NegativeSampler", false]], "neighbor_matching (class in dgl.geometry)": [[6, "dgl.geometry.neighbor_matching", false]], "neighborsampler (class in dgl.dataloading)": [[216, "dgl.dataloading.NeighborSampler", false]], "neighborsampler (class in dgl.graphbolt)": [[307, "dgl.graphbolt.NeighborSampler", false]], "nid2localnid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2localnid", false]], "nid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2partid", false]], "nnconv (class in dgl.nn.mxnet.conv)": [[368, "dgl.nn.mxnet.conv.NNConv", false]], "nnconv (class in dgl.nn.pytorch.conv)": [[415, "dgl.nn.pytorch.conv.NNConv", false]], "nnz (dgl.sparse.sparsematrix property)": [[590, "dgl.sparse.SparseMatrix.nnz", false]], "node2vec_random_walk() (in module dgl.sampling)": [[557, "dgl.sampling.node2vec_random_walk", false]], "node_attr_schemes() (dgl.dglgraph method)": [[75, "dgl.DGLGraph.node_attr_schemes", false]], "node_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.node_attr_schemes", false]], "node_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.node_attributes", false]], "node_embed (dgl.nn.pytorch.deepwalk attribute)": [[380, "dgl.nn.pytorch.DeepWalk.node_embed", false]], "node_embed (dgl.nn.pytorch.metapath2vec attribute)": [[384, "dgl.nn.pytorch.MetaPath2Vec.node_embed", false]], "node_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.node_feat_size", false]], "node_features (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.node_features", false]], "node_homophily() (in module dgl)": [[471, "dgl.node_homophily", false]], "node_ids() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.node_ids", false]], "node_label_informativeness() (in module dgl)": [[472, "dgl.node_label_informativeness", false]], "node_pairs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.node_pairs", false]], "node_pairs_with_labels (dgl.graphbolt.minibatch property)": [[304, "dgl.graphbolt.MiniBatch.node_pairs_with_labels", false]], "node_split() (in module dgl.distributed)": [[238, "dgl.distributed.node_split", false]], "node_subgraph() (in module dgl)": [[473, "dgl.node_subgraph", false]], "node_type_offset (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_offset", false]], "node_type_subgraph() (dgl.dglgraph method)": [[76, "dgl.DGLGraph.node_type_subgraph", false]], "node_type_subgraph() (in module dgl)": [[474, "dgl.node_type_subgraph", false]], "node_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_to_id", false]], "nodeembedding (class in dgl.nn.pytorch.sparse_emb)": [[452, "dgl.nn.pytorch.sparse_emb.NodeEmbedding", false]], "nodes (dgl.dglgraph property)": [[77, "dgl.DGLGraph.nodes", false]], "nodes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.nodes", false]], "nodes() (dgl.udf.nodebatch method)": [[677, "dgl.udf.NodeBatch.nodes", false]], "nodeshuffle (class in dgl.transforms)": [[660, "dgl.transforms.NodeShuffle", false]], "norm_by_dst() (in module dgl)": [[475, "dgl.norm_by_dst", false]], "ntypes (dgl.dglgraph property)": [[78, "dgl.DGLGraph.ntypes", false]], "ntypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ntypes", false]], "num_atom_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_atom_types", false]], "num_bond_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_bond_types", false]], "num_classes (dgl.data.actordataset attribute)": [[134, "dgl.data.ActorDataset.num_classes", false]], "num_classes (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuycomputerdataset attribute)": [[135, "dgl.data.AmazonCoBuyComputerDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuyphotodataset attribute)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.num_classes", false]], "num_classes (dgl.data.amazonratingsdataset attribute)": [[137, "dgl.data.AmazonRatingsDataset.num_classes", false]], "num_classes (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.num_classes", false]], "num_classes (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_classes", false]], "num_classes (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.num_classes", false]], "num_classes (dgl.data.ba2motifdataset attribute)": [[141, "dgl.data.BA2MotifDataset.num_classes", false]], "num_classes (dgl.data.bacommunitydataset attribute)": [[142, "dgl.data.BACommunityDataset.num_classes", false]], "num_classes (dgl.data.bashapedataset attribute)": [[143, "dgl.data.BAShapeDataset.num_classes", false]], "num_classes (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.num_classes", false]], "num_classes (dgl.data.chameleondataset attribute)": [[149, "dgl.data.ChameleonDataset.num_classes", false]], "num_classes (dgl.data.citeseergraphdataset attribute)": [[150, "dgl.data.CiteseerGraphDataset.num_classes", false]], "num_classes (dgl.data.clusterdataset attribute)": [[147, "dgl.data.CLUSTERDataset.num_classes", false]], "num_classes (dgl.data.coauthorcsdataset attribute)": [[151, "dgl.data.CoauthorCSDataset.num_classes", false]], "num_classes (dgl.data.coauthorphysicsdataset attribute)": [[152, "dgl.data.CoauthorPhysicsDataset.num_classes", false]], "num_classes (dgl.data.corafulldataset attribute)": [[153, "dgl.data.CoraFullDataset.num_classes", false]], "num_classes (dgl.data.coragraphdataset attribute)": [[154, "dgl.data.CoraGraphDataset.num_classes", false]], "num_classes (dgl.data.cornelldataset attribute)": [[155, "dgl.data.CornellDataset.num_classes", false]], "num_classes (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_classes", false]], "num_classes (dgl.data.flickrdataset attribute)": [[160, "dgl.data.FlickrDataset.num_classes", false]], "num_classes (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.num_classes", false]], "num_classes (dgl.data.gindataset attribute)": [[165, "dgl.data.GINDataset.num_classes", false]], "num_classes (dgl.data.karateclubdataset attribute)": [[167, "dgl.data.KarateClubDataset.num_classes", false]], "num_classes (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_classes", false]], "num_classes (dgl.data.minesweeperdataset attribute)": [[171, "dgl.data.MinesweeperDataset.num_classes", false]], "num_classes (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_classes", false]], "num_classes (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.num_classes", false]], "num_classes (dgl.data.patterndataset attribute)": [[174, "dgl.data.PATTERNDataset.num_classes", false]], "num_classes (dgl.data.pubmedgraphdataset attribute)": [[176, "dgl.data.PubmedGraphDataset.num_classes", false]], "num_classes (dgl.data.questionsdataset attribute)": [[180, "dgl.data.QuestionsDataset.num_classes", false]], "num_classes (dgl.data.redditdataset attribute)": [[181, "dgl.data.RedditDataset.num_classes", false]], "num_classes (dgl.data.romanempiredataset attribute)": [[182, "dgl.data.RomanEmpireDataset.num_classes", false]], "num_classes (dgl.data.squirreldataset attribute)": [[185, "dgl.data.SquirrelDataset.num_classes", false]], "num_classes (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.num_classes", false]], "num_classes (dgl.data.texasdataset attribute)": [[187, "dgl.data.TexasDataset.num_classes", false]], "num_classes (dgl.data.tolokersdataset attribute)": [[188, "dgl.data.TolokersDataset.num_classes", false]], "num_classes (dgl.data.treecycledataset attribute)": [[189, "dgl.data.TreeCycleDataset.num_classes", false]], "num_classes (dgl.data.treegriddataset attribute)": [[190, "dgl.data.TreeGridDataset.num_classes", false]], "num_classes (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_classes", false]], "num_classes (dgl.data.wikicsdataset attribute)": [[192, "dgl.data.WikiCSDataset.num_classes", false]], "num_classes (dgl.data.wisconsindataset attribute)": [[193, "dgl.data.WisconsinDataset.num_classes", false]], "num_classes (dgl.data.yelpdataset attribute)": [[194, "dgl.data.YelpDataset.num_classes", false]], "num_dst_nodes() (dgl.dglgraph method)": [[79, "dgl.DGLGraph.num_dst_nodes", false]], "num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.num_edges", false]], "num_edges (dgl.graphbolt.samplinggraph property)": [[311, "dgl.graphbolt.SamplingGraph.num_edges", false]], "num_edges() (dgl.dglgraph method)": [[80, "dgl.DGLGraph.num_edges", false]], "num_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_edges", false]], "num_graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_graphs", false]], "num_graphs (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_graphs", false]], "num_labels (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_labels", false]], "num_labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.num_labels", false]], "num_labels (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_labels", false]], "num_labels (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_labels", false]], "num_labels (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_labels", false]], "num_labels (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_labels", false]], "num_layers() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.num_layers", false]], "num_nodes (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_nodes", false]], "num_nodes (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_nodes", false]], "num_nodes (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_nodes", false]], "num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.num_nodes", false]], "num_nodes (dgl.graphbolt.samplinggraph property)": [[311, "dgl.graphbolt.SamplingGraph.num_nodes", false]], "num_nodes() (dgl.dglgraph method)": [[81, "dgl.DGLGraph.num_nodes", false]], "num_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_nodes", false]], "num_partitions() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.num_partitions", false]], "num_rels (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_rels", false]], "num_rels (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_rels", false]], "num_rels (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_rels", false]], "num_src_nodes() (dgl.dglgraph method)": [[82, "dgl.DGLGraph.num_src_nodes", false]], "num_tasks (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_tasks", false]], "num_tasks (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_tasks", false]], "num_tasks (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_tasks", false]], "num_tasks (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_tasks", false]], "number_of_dst_nodes() (dgl.dglgraph method)": [[83, "dgl.DGLGraph.number_of_dst_nodes", false]], "number_of_edges() (dgl.dglgraph method)": [[84, "dgl.DGLGraph.number_of_edges", false]], "number_of_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_edges", false]], "number_of_nodes() (dgl.dglgraph method)": [[85, "dgl.DGLGraph.number_of_nodes", false]], "number_of_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_nodes", false]], "number_of_src_nodes() (dgl.dglgraph method)": [[86, "dgl.DGLGraph.number_of_src_nodes", false]], "ondiskdataset (class in dgl.graphbolt)": [[308, "dgl.graphbolt.OnDiskDataset", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraph property)": [[309, "dgl.graphbolt.SampledSubgraph.original_column_node_ids", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[310, "dgl.graphbolt.SampledSubgraphImpl.original_column_node_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraph property)": [[309, "dgl.graphbolt.SampledSubgraph.original_edge_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[310, "dgl.graphbolt.SampledSubgraphImpl.original_edge_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraph property)": [[309, "dgl.graphbolt.SampledSubgraph.original_row_node_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[310, "dgl.graphbolt.SampledSubgraphImpl.original_row_node_ids", false]], "out_degrees() (dgl.dglgraph method)": [[87, "dgl.DGLGraph.out_degrees", false]], "out_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.out_degrees", false]], "out_edges() (dgl.dglgraph method)": [[88, "dgl.DGLGraph.out_edges", false]], "out_subgraph() (in module dgl)": [[537, "dgl.out_subgraph", false]], "pack_traces() (in module dgl.sampling)": [[558, "dgl.sampling.pack_traces", false]], "part_id (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.part_id", false]], "part_policy (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.part_policy", false]], "partid (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.partid", false]], "partid2eids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2eids", false]], "partid2nids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2nids", false]], "partition_book (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.partition_book", false]], "partition_graph() (in module dgl.distributed)": [[239, "dgl.distributed.partition_graph", false]], "partition_graph_with_halo() (in module dgl)": [[538, "dgl.partition_graph_with_halo", false]], "partitionpolicy (class in dgl.distributed)": [[4, "dgl.distributed.PartitionPolicy", false]], "pathencoder (class in dgl.nn.pytorch.gt)": [[446, "dgl.nn.pytorch.gt.PathEncoder", false]], "patterndataset (class in dgl.data)": [[174, "dgl.data.PATTERNDataset", false]], "persourceuniform (class in dgl.dataloading.negative_sampler)": [[227, "dgl.dataloading.negative_sampler.PerSourceUniform", false]], "pgexplainer (class in dgl.nn.pytorch.explain)": [[427, "dgl.nn.pytorch.explain.PGExplainer", false]], "pin_memory_() (dgl.dglgraph method)": [[89, "dgl.DGLGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeaturestore method)": [[315, "dgl.graphbolt.TorchBasedFeatureStore.pin_memory_", false]], "pinsagesampler (class in dgl.sampling)": [[555, "dgl.sampling.PinSAGESampler", false]], "pnaconv (class in dgl.nn.pytorch.conv)": [[416, "dgl.nn.pytorch.conv.PNAConv", false]], "policy_str (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.policy_str", false]], "positive_node_pairs (dgl.graphbolt.minibatch property)": [[304, "dgl.graphbolt.MiniBatch.positive_node_pairs", false]], "power() (in module dgl.sparse)": [[615, "dgl.sparse.power", false]], "ppidataset (class in dgl.data)": [[175, "dgl.data.PPIDataset", false]], "ppr (class in dgl.transforms)": [[661, "dgl.transforms.PPR", false]], "predecessors() (dgl.dglgraph method)": [[90, "dgl.DGLGraph.predecessors", false]], "predict_category (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.predict_category", false]], "predict_category (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.predict_category", false]], "predict_category (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.predict_category", false]], "predict_category (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.predict_category", false]], "pretrained_emb (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.pretrained_emb", false]], "prop_edges() (dgl.dglgraph method)": [[91, "dgl.DGLGraph.prop_edges", false]], "prop_edges() (in module dgl)": [[539, "dgl.prop_edges", false]], "prop_edges_dfs() (in module dgl)": [[540, "dgl.prop_edges_dfs", false]], "prop_nodes() (dgl.dglgraph method)": [[92, "dgl.DGLGraph.prop_nodes", false]], "prop_nodes() (in module dgl)": [[541, "dgl.prop_nodes", false]], "prop_nodes_bfs() (in module dgl)": [[542, "dgl.prop_nodes_bfs", false]], "prop_nodes_topo() (in module dgl)": [[543, "dgl.prop_nodes_topo", false]], "pubmedgraphdataset (class in dgl.data)": [[176, "dgl.data.PubmedGraphDataset", false]], "pull() (dgl.dglgraph method)": [[93, "dgl.DGLGraph.pull", false]], "push() (dgl.dglgraph method)": [[94, "dgl.DGLGraph.push", false]], "qm7bdataset (class in dgl.data)": [[177, "dgl.data.QM7bDataset", false]], "qm9dataset (class in dgl.data)": [[178, "dgl.data.QM9Dataset", false]], "qm9edgedataset (class in dgl.data)": [[179, "dgl.data.QM9EdgeDataset", false]], "questionsdataset (class in dgl.data)": [[180, "dgl.data.QuestionsDataset", false]], "radius_graph() (in module dgl)": [[544, "dgl.radius_graph", false]], "radiusgraph (class in dgl.nn.pytorch.factory)": [[430, "dgl.nn.pytorch.factory.RadiusGraph", false]], "rand_bipartite() (in module dgl)": [[545, "dgl.rand_bipartite", false]], "rand_graph() (in module dgl)": [[546, "dgl.rand_graph", false]], "random_walk() (in module dgl.sampling)": [[559, "dgl.sampling.random_walk", false]], "random_walk_pe() (in module dgl)": [[547, "dgl.random_walk_pe", false]], "randomwalkpe (class in dgl.transforms)": [[662, "dgl.transforms.RandomWalkPE", false]], "rank() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.rank", false]], "raw_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_dir", false]], "raw_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_path", false]], "read() (dgl.graphbolt.basicfeaturestore method)": [[287, "dgl.graphbolt.BasicFeatureStore.read", false]], "read() (dgl.graphbolt.feature method)": [[293, "dgl.graphbolt.Feature.read", false]], "read() (dgl.graphbolt.featurestore method)": [[295, "dgl.graphbolt.FeatureStore.read", false]], "read() (dgl.graphbolt.gpucachedfeature method)": [[297, "dgl.graphbolt.GPUCachedFeature.read", false]], "read() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.read", false]], "readout_edges() (in module dgl)": [[548, "dgl.readout_edges", false]], "readout_nodes() (in module dgl)": [[549, "dgl.readout_nodes", false]], "redditdataset (class in dgl.data)": [[181, "dgl.data.RedditDataset", false]], "reduce() (dgl.sparse.sparsematrix method)": [[591, "dgl.sparse.SparseMatrix.reduce", false]], "rel_emb (dgl.nn.pytorch.link.transe attribute)": [[450, "dgl.nn.pytorch.link.TransE.rel_emb", false]], "rel_emb (dgl.nn.pytorch.link.transr attribute)": [[451, "dgl.nn.pytorch.link.TransR.rel_emb", false]], "rel_project (dgl.nn.pytorch.link.transr attribute)": [[451, "dgl.nn.pytorch.link.TransR.rel_project", false]], "relgraphconv (class in dgl.nn.mxnet.conv)": [[369, "dgl.nn.mxnet.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.pytorch.conv)": [[417, "dgl.nn.pytorch.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.tensorflow.conv)": [[462, "dgl.nn.tensorflow.conv.RelGraphConv", false]], "remove_edges() (dgl.dglgraph method)": [[95, "dgl.DGLGraph.remove_edges", false]], "remove_edges() (in module dgl)": [[550, "dgl.remove_edges", false]], "remove_nodes() (dgl.dglgraph method)": [[96, "dgl.DGLGraph.remove_nodes", false]], "remove_nodes() (in module dgl)": [[551, "dgl.remove_nodes", false]], "remove_self_loop() (dgl.dglgraph method)": [[97, "dgl.DGLGraph.remove_self_loop", false]], "remove_self_loop() (in module dgl)": [[552, "dgl.remove_self_loop", false]], "removeselfloop (class in dgl.transforms)": [[663, "dgl.transforms.RemoveSelfLoop", false]], "reorder_graph() (dgl.dglgraph method)": [[98, "dgl.DGLGraph.reorder_graph", false]], "reorder_graph() (in module dgl)": [[553, "dgl.reorder_graph", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[391, "dgl.nn.pytorch.conv.CuGraphGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[392, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[393, "dgl.nn.pytorch.conv.CuGraphSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densechebconv method)": [[395, "dgl.nn.pytorch.conv.DenseChebConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densegraphconv method)": [[396, "dgl.nn.pytorch.conv.DenseGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densesageconv method)": [[397, "dgl.nn.pytorch.conv.DenseSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.edgegatconv method)": [[402, "dgl.nn.pytorch.conv.EdgeGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.egatconv method)": [[399, "dgl.nn.pytorch.conv.EGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatconv method)": [[404, "dgl.nn.pytorch.conv.GATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[411, "dgl.nn.pytorch.conv.GatedGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatv2conv method)": [[405, "dgl.nn.pytorch.conv.GATv2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gcn2conv method)": [[406, "dgl.nn.pytorch.conv.GCN2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gmmconv method)": [[409, "dgl.nn.pytorch.conv.GMMConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.graphconv method)": [[412, "dgl.nn.pytorch.conv.GraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.nnconv method)": [[415, "dgl.nn.pytorch.conv.NNConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sageconv method)": [[418, "dgl.nn.pytorch.conv.SAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sgconv method)": [[419, "dgl.nn.pytorch.conv.SGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.tagconv method)": [[420, "dgl.nn.pytorch.conv.TAGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.deepwalk method)": [[380, "dgl.nn.pytorch.DeepWalk.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.glob.set2set method)": [[435, "dgl.nn.pytorch.glob.Set2Set.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.gt.biasedmha method)": [[441, "dgl.nn.pytorch.gt.BiasedMHA.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.heteroembedding method)": [[381, "dgl.nn.pytorch.HeteroEmbedding.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.edgepredictor method)": [[449, "dgl.nn.pytorch.link.EdgePredictor.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transe method)": [[450, "dgl.nn.pytorch.link.TransE.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transr method)": [[451, "dgl.nn.pytorch.link.TransR.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.metapath2vec method)": [[384, "dgl.nn.pytorch.MetaPath2Vec.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.typedlinear method)": [[385, "dgl.nn.pytorch.TypedLinear.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[453, "dgl.nn.pytorch.utils.JumpingKnowledge.reset_parameters", false]], "reverse() (dgl.dglgraph method)": [[99, "dgl.DGLGraph.reverse", false]], "reverse() (in module dgl)": [[554, "dgl.reverse", false]], "romanempiredataset (class in dgl.data)": [[182, "dgl.data.RomanEmpireDataset", false]], "row (dgl.sparse.sparsematrix property)": [[592, "dgl.sparse.SparseMatrix.row", false]], "rowfeatnormalizer (class in dgl.transforms)": [[664, "dgl.transforms.RowFeatNormalizer", false]], "sageconv (class in dgl.nn.mxnet.conv)": [[370, "dgl.nn.mxnet.conv.SAGEConv", false]], "sageconv (class in dgl.nn.pytorch.conv)": [[418, "dgl.nn.pytorch.conv.SAGEConv", false]], "sageconv (class in dgl.nn.tensorflow.conv)": [[463, "dgl.nn.tensorflow.conv.SAGEConv", false]], "saintsampler (class in dgl.dataloading)": [[217, "dgl.dataloading.SAINTSampler", false]], "sample_etype_neighbors() (in module dgl.distributed)": [[240, "dgl.distributed.sample_etype_neighbors", false]], "sample_labors() (in module dgl.sampling)": [[560, "dgl.sampling.sample_labors", false]], "sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.sample_layer_neighbors", false]], "sample_negative_edges_uniform() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.sample_negative_edges_uniform", false]], "sample_negative_edges_uniform_2() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.sample_negative_edges_uniform_2", false]], "sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.sample_neighbors", false]], "sample_neighbors() (in module dgl.distributed)": [[241, "dgl.distributed.sample_neighbors", false]], "sample_neighbors() (in module dgl.sampling)": [[561, "dgl.sampling.sample_neighbors", false]], "sample_neighbors_biased() (in module dgl.sampling)": [[562, "dgl.sampling.sample_neighbors_biased", false]], "sample_subgraphs() (dgl.graphbolt.insubgraphsampler method)": [[298, "dgl.graphbolt.InSubgraphSampler.sample_subgraphs", false]], "sample_subgraphs() (dgl.graphbolt.subgraphsampler method)": [[312, "dgl.graphbolt.SubgraphSampler.sample_subgraphs", false]], "sampled_csc (dgl.graphbolt.sampledsubgraph property)": [[309, "dgl.graphbolt.SampledSubgraph.sampled_csc", false]], "sampled_csc (dgl.graphbolt.sampledsubgraphimpl attribute)": [[310, "dgl.graphbolt.SampledSubgraphImpl.sampled_csc", false]], "sampled_subgraphs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.sampled_subgraphs", false]], "sampledsubgraph (class in dgl.graphbolt)": [[309, "dgl.graphbolt.SampledSubgraph", false]], "sampledsubgraphimpl (class in dgl.graphbolt)": [[310, "dgl.graphbolt.SampledSubgraphImpl", false]], "sampler (class in dgl.dataloading)": [[218, "dgl.dataloading.Sampler", false]], "sampling_stages() (dgl.graphbolt.neighborsampler method)": [[307, "dgl.graphbolt.NeighborSampler.sampling_stages", false]], "sampling_stages() (dgl.graphbolt.subgraphsampler method)": [[312, "dgl.graphbolt.SubgraphSampler.sampling_stages", false]], "samplinggraph (class in dgl.graphbolt)": [[311, "dgl.graphbolt.SamplingGraph", false]], "save() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.save", false]], "save() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.save", false]], "save_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_dir", false]], "save_graphs() (in module dgl)": [[564, "dgl.save_graphs", false]], "save_info (class in dgl.data.utils)": [[206, "dgl.data.utils.save_info", false]], "save_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_path", false]], "sbmmixturedataset (class in dgl.data)": [[183, "dgl.data.SBMMixtureDataset", false]], "sddmm() (in module dgl.sparse)": [[616, "dgl.sparse.sddmm", false]], "seed (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.seed", false]], "seed() (in module dgl)": [[565, "dgl.seed", false]], "seed() (in module dgl.graphbolt)": [[328, "dgl.graphbolt.seed", false]], "seed_nodes (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.seed_nodes", false]], "seeds (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.seeds", false]], "segment_mm() (in module dgl.ops)": [[499, "dgl.ops.segment_mm", false]], "segment_reduce() (in module dgl.ops)": [[500, "dgl.ops.segment_reduce", false]], "segmented_knn_graph() (in module dgl)": [[566, "dgl.segmented_knn_graph", false]], "segmentedknngraph (class in dgl.nn.pytorch.factory)": [[431, "dgl.nn.pytorch.factory.SegmentedKNNGraph", false]], "select_topk() (in module dgl.sampling)": [[563, "dgl.sampling.select_topk", false]], "send_and_recv() (dgl.dglgraph method)": [[100, "dgl.DGLGraph.send_and_recv", false]], "sequential (class in dgl.nn.mxnet.utils)": [[379, "dgl.nn.mxnet.utils.Sequential", false]], "sequential (class in dgl.nn.pytorch.utils)": [[455, "dgl.nn.pytorch.utils.Sequential", false]], "set2set (class in dgl.nn.mxnet.glob)": [[376, "dgl.nn.mxnet.glob.Set2Set", false]], "set2set (class in dgl.nn.pytorch.glob)": [[435, "dgl.nn.pytorch.glob.Set2Set", false]], "set_batch_num_edges() (dgl.dglgraph method)": [[101, "dgl.DGLGraph.set_batch_num_edges", false]], "set_batch_num_nodes() (dgl.dglgraph method)": [[102, "dgl.DGLGraph.set_batch_num_nodes", false]], "set_dst_lazy_features (class in dgl.dataloading.base)": [[222, "dgl.dataloading.base.set_dst_lazy_features", false]], "set_edge_features() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.set_edge_features", false]], "set_edge_lazy_features (class in dgl.dataloading.base)": [[223, "dgl.dataloading.base.set_edge_lazy_features", false]], "set_node_features() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.set_node_features", false]], "set_node_lazy_features (class in dgl.dataloading.base)": [[224, "dgl.dataloading.base.set_node_lazy_features", false]], "set_src_lazy_features (class in dgl.dataloading.base)": [[225, "dgl.dataloading.base.set_src_lazy_features", false]], "settransformerdecoder (class in dgl.nn.pytorch.glob)": [[436, "dgl.nn.pytorch.glob.SetTransformerDecoder", false]], "settransformerencoder (class in dgl.nn.pytorch.glob)": [[437, "dgl.nn.pytorch.glob.SetTransformerEncoder", false]], "sgconv (class in dgl.nn.mxnet.conv)": [[371, "dgl.nn.mxnet.conv.SGConv", false]], "sgconv (class in dgl.nn.pytorch.conv)": [[419, "dgl.nn.pytorch.conv.SGConv", false]], "sgconv (class in dgl.nn.tensorflow.conv)": [[464, "dgl.nn.tensorflow.conv.SGConv", false]], "shadowkhopsampler (class in dgl.dataloading)": [[219, "dgl.dataloading.ShaDowKHopSampler", false]], "shape (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.shape", false]], "shape (dgl.sparse.sparsematrix property)": [[593, "dgl.sparse.SparseMatrix.shape", false]], "shared_memory() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.shared_memory", false]], "shared_tensor() (in module dgl.multiprocessing.pytorch)": [[353, "dgl.multiprocessing.pytorch.shared_tensor", false]], "shortest_dist() (in module dgl)": [[567, "dgl.shortest_dist", false]], "signdiffusion (class in dgl.transforms)": [[665, "dgl.transforms.SIGNDiffusion", false]], "size() (dgl.graphbolt.basicfeaturestore method)": [[287, "dgl.graphbolt.BasicFeatureStore.size", false]], "size() (dgl.graphbolt.feature method)": [[293, "dgl.graphbolt.Feature.size", false]], "size() (dgl.graphbolt.featurestore method)": [[295, "dgl.graphbolt.FeatureStore.size", false]], "size() (dgl.graphbolt.gpucachedfeature method)": [[297, "dgl.graphbolt.GPUCachedFeature.size", false]], "size() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.size", false]], "slice_batch() (in module dgl)": [[568, "dgl.slice_batch", false]], "smax() (dgl.sparse.sparsematrix method)": [[594, "dgl.sparse.SparseMatrix.smax", false]], "smean() (dgl.sparse.sparsematrix method)": [[595, "dgl.sparse.SparseMatrix.smean", false]], "smin() (dgl.sparse.sparsematrix method)": [[596, "dgl.sparse.SparseMatrix.smin", false]], "softmax() (dgl.sparse.sparsematrix method)": [[597, "dgl.sparse.SparseMatrix.softmax", false]], "softmax() (in module dgl.sparse)": [[617, "dgl.sparse.softmax", false]], "softmax_edges() (in module dgl)": [[569, "dgl.softmax_edges", false]], "softmax_nodes() (in module dgl)": [[570, "dgl.softmax_nodes", false]], "sort_csc_by_tag() (in module dgl)": [[571, "dgl.sort_csc_by_tag", false]], "sort_csr_by_tag() (in module dgl)": [[572, "dgl.sort_csr_by_tag", false]], "sortpooling (class in dgl.nn.mxnet.glob)": [[377, "dgl.nn.mxnet.glob.SortPooling", false]], "sortpooling (class in dgl.nn.pytorch.glob)": [[438, "dgl.nn.pytorch.glob.SortPooling", false]], "sortpooling (class in dgl.nn.tensorflow.glob)": [[469, "dgl.nn.tensorflow.glob.SortPooling", false]], "sp_add_v() (in module dgl.sparse)": [[618, "dgl.sparse.sp_add_v", false]], "sp_broadcast_v() (in module dgl.sparse)": [[619, "dgl.sparse.sp_broadcast_v", false]], "sp_div_v() (in module dgl.sparse)": [[620, "dgl.sparse.sp_div_v", false]], "sp_mul_v() (in module dgl.sparse)": [[621, "dgl.sparse.sp_mul_v", false]], "sp_sub_v() (in module dgl.sparse)": [[622, "dgl.sparse.sp_sub_v", false]], "sparseadagrad (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdagrad", false]], "sparseadagrad (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdagrad", false]], "sparseadam (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdam", false]], "sparseadam (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdam", false]], "sparsematrix (class in dgl.sparse)": [[12, "dgl.sparse.SparseMatrix", false]], "spatialencoder (class in dgl.nn.pytorch.gt)": [[447, "dgl.nn.pytorch.gt.SpatialEncoder", false]], "spatialencoder3d (class in dgl.nn.pytorch.gt)": [[448, "dgl.nn.pytorch.gt.SpatialEncoder3d", false]], "split_dataset (class in dgl.data.utils)": [[207, "dgl.data.utils.split_dataset", false]], "spmatrix() (in module dgl.sparse)": [[623, "dgl.sparse.spmatrix", false]], "spmm() (in module dgl.sparse)": [[624, "dgl.sparse.spmm", false]], "spspmm() (in module dgl.sparse)": [[625, "dgl.sparse.spspmm", false]], "squirreldataset (class in dgl.data)": [[185, "dgl.data.SquirrelDataset", false]], "src (dgl.udf.edgebatch property)": [[673, "dgl.udf.EdgeBatch.src", false]], "srcdata (dgl.dglgraph property)": [[103, "dgl.DGLGraph.srcdata", false]], "srcnodes (dgl.dglgraph property)": [[104, "dgl.DGLGraph.srcnodes", false]], "srctypes (dgl.dglgraph property)": [[105, "dgl.DGLGraph.srctypes", false]], "sstdataset (class in dgl.data)": [[184, "dgl.data.SSTDataset", false]], "start_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.start_time", false]], "step() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.step", false]], "step() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.step", false]], "sub() (in module dgl.sparse)": [[626, "dgl.sparse.sub", false]], "subgraph() (dgl.dglgraph method)": [[106, "dgl.DGLGraph.subgraph", false]], "subgraphsampler (class in dgl.graphbolt)": [[312, "dgl.graphbolt.SubgraphSampler", false]], "subgraphx (class in dgl.nn.pytorch.explain)": [[428, "dgl.nn.pytorch.explain.SubgraphX", false]], "subset (class in dgl.data.utils)": [[196, "dgl.data.utils.Subset", false]], "successors() (dgl.dglgraph method)": [[107, "dgl.DGLGraph.successors", false]], "sum() (dgl.sparse.sparsematrix method)": [[598, "dgl.sparse.SparseMatrix.sum", false]], "sum() (in module dgl.function)": [[265, "dgl.function.sum", false]], "sum_edges() (in module dgl)": [[628, "dgl.sum_edges", false]], "sum_nodes() (in module dgl)": [[629, "dgl.sum_nodes", false]], "sumpooling (class in dgl.nn.mxnet.glob)": [[378, "dgl.nn.mxnet.glob.SumPooling", false]], "sumpooling (class in dgl.nn.pytorch.glob)": [[439, "dgl.nn.pytorch.glob.SumPooling", false]], "sumpooling (class in dgl.nn.tensorflow.glob)": [[470, "dgl.nn.tensorflow.glob.SumPooling", false]], "svd_pe() (in module dgl)": [[630, "dgl.svd_pe", false]], "svdpe (class in dgl.transforms)": [[666, "dgl.transforms.SVDPE", false]], "t (dgl.sparse.sparsematrix property)": [[573, "dgl.sparse.SparseMatrix.T", false]], "t() (dgl.sparse.sparsematrix method)": [[599, "dgl.sparse.SparseMatrix.t", false]], "tagconv (class in dgl.nn.mxnet.conv)": [[372, "dgl.nn.mxnet.conv.TAGConv", false]], "tagconv (class in dgl.nn.pytorch.conv)": [[420, "dgl.nn.pytorch.conv.TAGConv", false]], "task (class in dgl.graphbolt)": [[313, "dgl.graphbolt.Task", false]], "tasks (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.tasks", false]], "tasks (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.tasks", false]], "tasks (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.tasks", false]], "temporal_sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_neighbors", false]], "test_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.test_edges", false]], "test_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.test_idx", false]], "test_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.test_idx", false]], "test_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.test_mask", false]], "test_set (dgl.graphbolt.task property)": [[313, "dgl.graphbolt.Task.test_set", false]], "texasdataset (class in dgl.data)": [[187, "dgl.data.TexasDataset", false]], "to() (dgl.dglgraph method)": [[108, "dgl.DGLGraph.to", false]], "to() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.to", false]], "to() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.to", false]], "to() (dgl.graphbolt.sampledsubgraph method)": [[309, "dgl.graphbolt.SampledSubgraph.to", false]], "to() (dgl.graphbolt.samplinggraph method)": [[311, "dgl.graphbolt.SamplingGraph.to", false]], "to() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.to", false]], "to() (dgl.graphbolt.torchbasedfeaturestore method)": [[315, "dgl.graphbolt.TorchBasedFeatureStore.to", false]], "to() (dgl.sparse.sparsematrix method)": [[600, "dgl.sparse.SparseMatrix.to", false]], "to_bidirected() (in module dgl)": [[631, "dgl.to_bidirected", false]], "to_block() (in module dgl)": [[632, "dgl.to_block", false]], "to_canonical_etype() (dgl.dglgraph method)": [[109, "dgl.DGLGraph.to_canonical_etype", false]], "to_cugraph() (dgl.dglgraph method)": [[110, "dgl.DGLGraph.to_cugraph", false]], "to_cugraph() (in module dgl)": [[633, "dgl.to_cugraph", false]], "to_dense() (dgl.sparse.sparsematrix method)": [[601, "dgl.sparse.SparseMatrix.to_dense", false]], "to_double() (in module dgl)": [[634, "dgl.to_double", false]], "to_float() (in module dgl)": [[635, "dgl.to_float", false]], "to_half() (in module dgl)": [[636, "dgl.to_half", false]], "to_heterogeneous() (in module dgl)": [[637, "dgl.to_heterogeneous", false]], "to_homogeneous() (in module dgl)": [[638, "dgl.to_homogeneous", false]], "to_local() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_local", false]], "to_networkx() (in module dgl)": [[639, "dgl.to_networkx", false]], "to_partid() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_partid", false]], "to_pyg_data() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.to_pyg_data", false]], "to_simple() (dgl.dglgraph method)": [[111, "dgl.DGLGraph.to_simple", false]], "to_simple() (in module dgl)": [[640, "dgl.to_simple", false]], "to_simple_graph() (in module dgl)": [[641, "dgl.to_simple_graph", false]], "tolevi (class in dgl.transforms)": [[667, "dgl.transforms.ToLevi", false]], "tolokersdataset (class in dgl.data)": [[188, "dgl.data.TolokersDataset", false]], "topk_edges() (in module dgl)": [[642, "dgl.topk_edges", false]], "topk_nodes() (in module dgl)": [[643, "dgl.topk_nodes", false]], "topological_nodes_generator() (in module dgl)": [[644, "dgl.topological_nodes_generator", false]], "torchbasedfeature (class in dgl.graphbolt)": [[314, "dgl.graphbolt.TorchBasedFeature", false]], "torchbasedfeaturestore (class in dgl.graphbolt)": [[315, "dgl.graphbolt.TorchBasedFeatureStore", false]], "tosimple (class in dgl.transforms)": [[668, "dgl.transforms.ToSimple", false]], "total_num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_edges", false]], "total_num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_nodes", false]], "train_graph (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.train_graph", false]], "train_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.train_idx", false]], "train_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.train_idx", false]], "train_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.train_mask", false]], "train_set (dgl.graphbolt.task property)": [[313, "dgl.graphbolt.Task.train_set", false]], "train_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.train_size", false]], "train_step() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[425, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step", false]], "train_step() (dgl.nn.pytorch.explain.pgexplainer method)": [[427, "dgl.nn.pytorch.explain.PGExplainer.train_step", false]], "train_step_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[425, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step_node", false]], "train_step_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[427, "dgl.nn.pytorch.explain.PGExplainer.train_step_node", false]], "transe (class in dgl.nn.pytorch.link)": [[450, "dgl.nn.pytorch.link.TransE", false]], "transpose() (dgl.sparse.sparsematrix method)": [[602, "dgl.sparse.SparseMatrix.transpose", false]], "transr (class in dgl.nn.pytorch.link)": [[451, "dgl.nn.pytorch.link.TransR", false]], "treecycledataset (class in dgl.data)": [[189, "dgl.data.TreeCycleDataset", false]], "treegriddataset (class in dgl.data)": [[190, "dgl.data.TreeGridDataset", false]], "tudataset (class in dgl.data)": [[186, "dgl.data.TUDataset", false]], "twirlsconv (class in dgl.nn.pytorch.conv)": [[421, "dgl.nn.pytorch.conv.TWIRLSConv", false]], "twirlsunfoldingandattention (class in dgl.nn.pytorch.conv)": [[422, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", false]], "type_per_edge (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.type_per_edge", false]], "typedlinear (class in dgl.nn.pytorch)": [[385, "dgl.nn.pytorch.TypedLinear", false]], "u_add_e() (in module dgl.function)": [[266, "dgl.function.u_add_e", false]], "u_add_e() (in module dgl.ops)": [[501, "dgl.ops.u_add_e", false]], "u_add_e_max() (in module dgl.ops)": [[502, "dgl.ops.u_add_e_max", false]], "u_add_e_mean() (in module dgl.ops)": [[503, "dgl.ops.u_add_e_mean", false]], "u_add_e_min() (in module dgl.ops)": [[504, "dgl.ops.u_add_e_min", false]], "u_add_e_sum() (in module dgl.ops)": [[505, "dgl.ops.u_add_e_sum", false]], "u_add_v() (in module dgl.function)": [[267, "dgl.function.u_add_v", false]], "u_add_v() (in module dgl.ops)": [[506, "dgl.ops.u_add_v", false]], "u_div_e() (in module dgl.function)": [[268, "dgl.function.u_div_e", false]], "u_div_e() (in module dgl.ops)": [[507, "dgl.ops.u_div_e", false]], "u_div_e_max() (in module dgl.ops)": [[508, "dgl.ops.u_div_e_max", false]], "u_div_e_mean() (in module dgl.ops)": [[509, "dgl.ops.u_div_e_mean", false]], "u_div_e_min() (in module dgl.ops)": [[510, "dgl.ops.u_div_e_min", false]], "u_div_e_sum() (in module dgl.ops)": [[511, "dgl.ops.u_div_e_sum", false]], "u_div_v() (in module dgl.function)": [[269, "dgl.function.u_div_v", false]], "u_div_v() (in module dgl.ops)": [[512, "dgl.ops.u_div_v", false]], "u_dot_e() (in module dgl.function)": [[270, "dgl.function.u_dot_e", false]], "u_dot_e() (in module dgl.ops)": [[513, "dgl.ops.u_dot_e", false]], "u_dot_v() (in module dgl.function)": [[271, "dgl.function.u_dot_v", false]], "u_dot_v() (in module dgl.ops)": [[514, "dgl.ops.u_dot_v", false]], "u_mul_e() (in module dgl.function)": [[272, "dgl.function.u_mul_e", false]], "u_mul_e() (in module dgl.ops)": [[515, "dgl.ops.u_mul_e", false]], "u_mul_e_max() (in module dgl.ops)": [[516, "dgl.ops.u_mul_e_max", false]], "u_mul_e_mean() (in module dgl.ops)": [[517, "dgl.ops.u_mul_e_mean", false]], "u_mul_e_min() (in module dgl.ops)": [[518, "dgl.ops.u_mul_e_min", false]], "u_mul_e_sum() (in module dgl.ops)": [[519, "dgl.ops.u_mul_e_sum", false]], "u_mul_v() (in module dgl.function)": [[273, "dgl.function.u_mul_v", false]], "u_mul_v() (in module dgl.ops)": [[520, "dgl.ops.u_mul_v", false]], "u_sub_e() (in module dgl.function)": [[274, "dgl.function.u_sub_e", false]], "u_sub_e() (in module dgl.ops)": [[521, "dgl.ops.u_sub_e", false]], "u_sub_e_max() (in module dgl.ops)": [[522, "dgl.ops.u_sub_e_max", false]], "u_sub_e_mean() (in module dgl.ops)": [[523, "dgl.ops.u_sub_e_mean", false]], "u_sub_e_min() (in module dgl.ops)": [[524, "dgl.ops.u_sub_e_min", false]], "u_sub_e_sum() (in module dgl.ops)": [[525, "dgl.ops.u_sub_e_sum", false]], "u_sub_v() (in module dgl.function)": [[275, "dgl.function.u_sub_v", false]], "u_sub_v() (in module dgl.ops)": [[526, "dgl.ops.u_sub_v", false]], "unbatch() (in module dgl)": [[678, "dgl.unbatch", false]], "uniform (in module dgl.dataloading.negative_sampler)": [[228, "dgl.dataloading.negative_sampler.Uniform", false]], "uniformnegativesampler (class in dgl.graphbolt)": [[316, "dgl.graphbolt.UniformNegativeSampler", false]], "unique_and_compact() (in module dgl.graphbolt)": [[329, "dgl.graphbolt.unique_and_compact", false]], "unique_and_compact_csc_formats() (in module dgl.graphbolt)": [[330, "dgl.graphbolt.unique_and_compact_csc_formats", false]], "unpin_memory_() (dgl.dglgraph method)": [[112, "dgl.DGLGraph.unpin_memory_", false]], "update() (dgl.graphbolt.basicfeaturestore method)": [[287, "dgl.graphbolt.BasicFeatureStore.update", false]], "update() (dgl.graphbolt.feature method)": [[293, "dgl.graphbolt.Feature.update", false]], "update() (dgl.graphbolt.featurestore method)": [[295, "dgl.graphbolt.FeatureStore.update", false]], "update() (dgl.graphbolt.gpucachedfeature method)": [[297, "dgl.graphbolt.GPUCachedFeature.update", false]], "update() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.update", false]], "update_all() (dgl.dglgraph method)": [[113, "dgl.DGLGraph.update_all", false]], "url (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.url", false]], "use_libxsmm() (in module dgl)": [[679, "dgl.use_libxsmm", false]], "v_add_e() (in module dgl.function)": [[276, "dgl.function.v_add_e", false]], "v_add_e() (in module dgl.ops)": [[527, "dgl.ops.v_add_e", false]], "v_add_u() (in module dgl.function)": [[277, "dgl.function.v_add_u", false]], "v_add_u() (in module dgl.ops)": [[528, "dgl.ops.v_add_u", false]], "v_div_e() (in module dgl.function)": [[278, "dgl.function.v_div_e", false]], "v_div_e() (in module dgl.ops)": [[529, "dgl.ops.v_div_e", false]], "v_div_u() (in module dgl.function)": [[279, "dgl.function.v_div_u", false]], "v_div_u() (in module dgl.ops)": [[530, "dgl.ops.v_div_u", false]], "v_dot_e() (in module dgl.function)": [[280, "dgl.function.v_dot_e", false]], "v_dot_e() (in module dgl.ops)": [[531, "dgl.ops.v_dot_e", false]], "v_dot_u() (in module dgl.function)": [[281, "dgl.function.v_dot_u", false]], "v_dot_u() (in module dgl.ops)": [[532, "dgl.ops.v_dot_u", false]], "v_mul_e() (in module dgl.function)": [[282, "dgl.function.v_mul_e", false]], "v_mul_e() (in module dgl.ops)": [[533, "dgl.ops.v_mul_e", false]], "v_mul_u() (in module dgl.function)": [[283, "dgl.function.v_mul_u", false]], "v_mul_u() (in module dgl.ops)": [[534, "dgl.ops.v_mul_u", false]], "v_sub_e() (in module dgl.function)": [[284, "dgl.function.v_sub_e", false]], "v_sub_e() (in module dgl.ops)": [[535, "dgl.ops.v_sub_e", false]], "v_sub_u() (in module dgl.function)": [[285, "dgl.function.v_sub_u", false]], "v_sub_u() (in module dgl.ops)": [[536, "dgl.ops.v_sub_u", false]], "val (dgl.sparse.sparsematrix property)": [[603, "dgl.sparse.SparseMatrix.val", false]], "val_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.val_edges", false]], "val_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.val_idx", false]], "val_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.val_idx", false]], "val_like() (in module dgl.sparse)": [[627, "dgl.sparse.val_like", false]], "val_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.val_mask", false]], "val_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.val_size", false]], "validation_set (dgl.graphbolt.task property)": [[313, "dgl.graphbolt.Task.validation_set", false]], "verbose (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.verbose", false]], "vocab (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab", false]], "vocab_size (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab_size", false]], "weight (dgl.nn.pytorch.conv.graphconv attribute)": [[412, "dgl.nn.pytorch.conv.GraphConv.weight", false]], "weightandsum (class in dgl.nn.pytorch.glob)": [[440, "dgl.nn.pytorch.glob.WeightAndSum", false]], "weightbasis (class in dgl.nn.pytorch.utils)": [[456, "dgl.nn.pytorch.utils.WeightBasis", false]], "wikicsdataset (class in dgl.data)": [[192, "dgl.data.WikiCSDataset", false]], "wisconsindataset (class in dgl.data)": [[193, "dgl.data.WisconsinDataset", false]], "wn18dataset (class in dgl.data)": [[191, "dgl.data.WN18Dataset", false]], "yaml_data (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.yaml_data", false]], "yelpdataset (class in dgl.data)": [[194, "dgl.data.YelpDataset", false]], "zincdataset (class in dgl.data)": [[195, "dgl.data.ZINCDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "dgl"]], "dgl": [[1, 1, 1, "", "DGLGraph"], [114, 4, 1, "", "add_edges"], [115, 4, 1, "", "add_nodes"], [116, 4, 1, "", "add_reverse_edges"], [117, 4, 1, "", "add_self_loop"], [118, 4, 1, "", "adj_product_graph"], [119, 4, 1, "", "adj_sum_graph"], [120, 4, 1, "", "adjusted_homophily"], [121, 4, 1, "", "apply_each"], [122, 4, 1, "", "batch"], [123, 4, 1, "", "bfs_edges_generator"], [124, 4, 1, "", "bfs_nodes_generator"], [125, 4, 1, "", "bipartite_from_networkx"], [126, 4, 1, "", "bipartite_from_scipy"], [127, 4, 1, "", "block_to_graph"], [128, 4, 1, "", "broadcast_edges"], [129, 4, 1, "", "broadcast_nodes"], [130, 4, 1, "", "compact_graphs"], [131, 4, 1, "", "create_block"], [2, 0, 0, "-", "data"], [229, 4, 1, "", "dfs_edges_generator"], [230, 4, 1, "", "dfs_labeled_edges_generator"], [242, 4, 1, "", "double_radius_node_labeling"], [243, 4, 1, "", "edge_homophily"], [244, 4, 1, "", "edge_label_informativeness"], [245, 4, 1, "", "edge_subgraph"], [246, 4, 1, "", "edge_type_subgraph"], [247, 4, 1, "", "from_cugraph"], [248, 4, 1, "", "from_networkx"], [249, 4, 1, "", "from_scipy"], [6, 0, 0, "-", "geometry"], [286, 4, 1, "", "graph"], [331, 4, 1, "", "heterograph"], [332, 4, 1, "", "in_subgraph"], [333, 4, 1, "", "is_libxsmm_enabled"], [334, 4, 1, "", "khop_adj"], [335, 4, 1, "", "khop_graph"], [336, 4, 1, "", "khop_in_subgraph"], [337, 4, 1, "", "khop_out_subgraph"], [338, 4, 1, "", "knn_graph"], [339, 4, 1, "", "lap_pe"], [340, 4, 1, "", "laplacian_lambda_max"], [341, 4, 1, "", "line_graph"], [342, 4, 1, "", "linkx_homophily"], [343, 4, 1, "", "load_graphs"], [344, 4, 1, "", "max_edges"], [345, 4, 1, "", "max_nodes"], [346, 4, 1, "", "mean_edges"], [347, 4, 1, "", "mean_nodes"], [348, 4, 1, "", "merge"], [349, 4, 1, "", "metapath_reachable_graph"], [350, 4, 1, "", "metis_partition"], [351, 4, 1, "", "metis_partition_assignment"], [471, 4, 1, "", "node_homophily"], [472, 4, 1, "", "node_label_informativeness"], [473, 4, 1, "", "node_subgraph"], [474, 4, 1, "", "node_type_subgraph"], [475, 4, 1, "", "norm_by_dst"], [10, 0, 0, "-", "optim"], [537, 4, 1, "", "out_subgraph"], [538, 4, 1, "", "partition_graph_with_halo"], [539, 4, 1, "", "prop_edges"], [540, 4, 1, "", "prop_edges_dfs"], [541, 4, 1, "", "prop_nodes"], [542, 4, 1, "", "prop_nodes_bfs"], [543, 4, 1, "", "prop_nodes_topo"], [544, 4, 1, "", "radius_graph"], [545, 4, 1, "", "rand_bipartite"], [546, 4, 1, "", "rand_graph"], [547, 4, 1, "", "random_walk_pe"], [548, 4, 1, "", "readout_edges"], [549, 4, 1, "", "readout_nodes"], [550, 4, 1, "", "remove_edges"], [551, 4, 1, "", "remove_nodes"], [552, 4, 1, "", "remove_self_loop"], [553, 4, 1, "", "reorder_graph"], [554, 4, 1, "", "reverse"], [11, 0, 0, "-", "sampling"], [564, 4, 1, "", "save_graphs"], [565, 4, 1, "", "seed"], [566, 4, 1, "", "segmented_knn_graph"], [567, 4, 1, "", "shortest_dist"], [568, 4, 1, "", "slice_batch"], [569, 4, 1, "", "softmax_edges"], [570, 4, 1, "", "softmax_nodes"], [571, 4, 1, "", "sort_csc_by_tag"], [572, 4, 1, "", "sort_csr_by_tag"], [628, 4, 1, "", "sum_edges"], [629, 4, 1, "", "sum_nodes"], [630, 4, 1, "", "svd_pe"], [631, 4, 1, "", "to_bidirected"], [632, 4, 1, "", "to_block"], [633, 4, 1, "", "to_cugraph"], [634, 4, 1, "", "to_double"], [635, 4, 1, "", "to_float"], [636, 4, 1, "", "to_half"], [637, 4, 1, "", "to_heterogeneous"], [638, 4, 1, "", "to_homogeneous"], [639, 4, 1, "", "to_networkx"], [640, 4, 1, "", "to_simple"], [641, 4, 1, "", "to_simple_graph"], [642, 4, 1, "", "topk_edges"], [643, 4, 1, "", "topk_nodes"], [644, 4, 1, "", "topological_nodes_generator"], [19, 0, 0, "-", "transforms"], [678, 4, 1, "", "unbatch"], [679, 4, 1, "", "use_libxsmm"]], "dgl.DGLGraph": [[26, 2, 1, "", "__getitem__"], [27, 2, 1, "", "add_edges"], [28, 2, 1, "", "add_nodes"], [29, 2, 1, "", "add_self_loop"], [30, 2, 1, "", "adj"], [31, 2, 1, "", "adj_external"], [32, 2, 1, "", "adj_tensors"], [33, 2, 1, "", "adjacency_matrix"], [34, 2, 1, "", "apply_edges"], [35, 2, 1, "", "apply_nodes"], [36, 2, 1, "", "batch_num_edges"], [37, 2, 1, "", "batch_num_nodes"], [38, 3, 1, "", "batch_size"], [39, 3, 1, "", "canonical_etypes"], [40, 2, 1, "", "cpu"], [41, 2, 1, "", "create_formats_"], [42, 3, 1, "", "device"], [43, 3, 1, "", "dstdata"], [44, 3, 1, "", "dstnodes"], [45, 3, 1, "", "dsttypes"], [46, 3, 1, "", "edata"], [47, 2, 1, "", "edge_attr_schemes"], [48, 2, 1, "", "edge_ids"], [49, 2, 1, "", "edge_subgraph"], [50, 2, 1, "", "edge_type_subgraph"], [51, 3, 1, "", "edges"], [52, 3, 1, "", "etypes"], [53, 2, 1, "", "filter_edges"], [54, 2, 1, "", "filter_nodes"], [55, 2, 1, "", "find_edges"], [56, 2, 1, "", "formats"], [57, 2, 1, "", "has_edges_between"], [58, 2, 1, "", "has_nodes"], [59, 3, 1, "", "idtype"], [60, 2, 1, "", "in_degrees"], [61, 2, 1, "", "in_edges"], [62, 2, 1, "", "inc"], [63, 2, 1, "", "incidence_matrix"], [64, 2, 1, "", "int"], [65, 3, 1, "", "is_homogeneous"], [66, 3, 1, "", "is_multigraph"], [67, 2, 1, "", "is_pinned"], [68, 3, 1, "", "is_unibipartite"], [69, 2, 1, "", "line_graph"], [70, 2, 1, "", "local_scope"], [71, 2, 1, "", "long"], [72, 2, 1, "", "metagraph"], [73, 2, 1, "", "multi_update_all"], [74, 3, 1, "", "ndata"], [75, 2, 1, "", "node_attr_schemes"], [76, 2, 1, "", "node_type_subgraph"], [77, 3, 1, "", "nodes"], [78, 3, 1, "", "ntypes"], [79, 2, 1, "", "num_dst_nodes"], [80, 2, 1, "", "num_edges"], [81, 2, 1, "", "num_nodes"], [82, 2, 1, "", "num_src_nodes"], [83, 2, 1, "", "number_of_dst_nodes"], [84, 2, 1, "", "number_of_edges"], [85, 2, 1, "", "number_of_nodes"], [86, 2, 1, "", "number_of_src_nodes"], [87, 2, 1, "", "out_degrees"], [88, 2, 1, "", "out_edges"], [89, 2, 1, "", "pin_memory_"], [90, 2, 1, "", "predecessors"], [91, 2, 1, "", "prop_edges"], [92, 2, 1, "", "prop_nodes"], [93, 2, 1, "", "pull"], [94, 2, 1, "", "push"], [95, 2, 1, "", "remove_edges"], [96, 2, 1, "", "remove_nodes"], [97, 2, 1, "", "remove_self_loop"], [98, 2, 1, "", "reorder_graph"], [99, 2, 1, "", "reverse"], [100, 2, 1, "", "send_and_recv"], [101, 2, 1, "", "set_batch_num_edges"], [102, 2, 1, "", "set_batch_num_nodes"], [103, 3, 1, "", "srcdata"], [104, 3, 1, "", "srcnodes"], [105, 3, 1, "", "srctypes"], [106, 2, 1, "", "subgraph"], [107, 2, 1, "", "successors"], [108, 2, 1, "", "to"], [109, 2, 1, "", "to_canonical_etype"], [110, 2, 1, "", "to_cugraph"], [111, 2, 1, "", "to_simple"], [112, 2, 1, "", "unpin_memory_"], [113, 2, 1, "", "update_all"]], "dgl.data": [[132, 1, 1, "", "AIFBDataset"], [133, 1, 1, "", "AMDataset"], [134, 1, 1, "", "ActorDataset"], [135, 1, 1, "", "AmazonCoBuyComputerDataset"], [136, 1, 1, "", "AmazonCoBuyPhotoDataset"], [137, 1, 1, "", "AmazonRatingsDataset"], [138, 1, 1, "", "AsGraphPredDataset"], [139, 1, 1, "", "AsLinkPredDataset"], [140, 1, 1, "", "AsNodePredDataset"], [141, 1, 1, "", "BA2MotifDataset"], [142, 1, 1, "", "BACommunityDataset"], [143, 1, 1, "", "BAShapeDataset"], [144, 1, 1, "", "BGSDataset"], [145, 1, 1, "", "BitcoinOTCDataset"], [146, 1, 1, "", "CIFAR10SuperPixelDataset"], [147, 1, 1, "", "CLUSTERDataset"], [148, 1, 1, "", "CSVDataset"], [149, 1, 1, "", "ChameleonDataset"], [150, 1, 1, "", "CiteseerGraphDataset"], [151, 1, 1, "", "CoauthorCSDataset"], [152, 1, 1, "", "CoauthorPhysicsDataset"], [153, 1, 1, "", "CoraFullDataset"], [154, 1, 1, "", "CoraGraphDataset"], [155, 1, 1, "", "CornellDataset"], [156, 1, 1, "", "DGLDataset"], [157, 1, 1, "", "FB15k237Dataset"], [158, 1, 1, "", "FB15kDataset"], [159, 1, 1, "", "FakeNewsDataset"], [160, 1, 1, "", "FlickrDataset"], [161, 1, 1, "", "FraudAmazonDataset"], [162, 1, 1, "", "FraudDataset"], [163, 1, 1, "", "FraudYelpDataset"], [164, 1, 1, "", "GDELTDataset"], [165, 1, 1, "", "GINDataset"], [166, 1, 1, "", "ICEWS18Dataset"], [167, 1, 1, "", "KarateClubDataset"], [168, 1, 1, "", "LegacyTUDataset"], [169, 1, 1, "", "MNISTSuperPixelDataset"], [170, 1, 1, "", "MUTAGDataset"], [171, 1, 1, "", "MinesweeperDataset"], [172, 1, 1, "", "MiniGCDataset"], [173, 1, 1, "", "MovieLensDataset"], [174, 1, 1, "", "PATTERNDataset"], [175, 1, 1, "", "PPIDataset"], [176, 1, 1, "", "PubmedGraphDataset"], [177, 1, 1, "", "QM7bDataset"], [178, 1, 1, "", "QM9Dataset"], [179, 1, 1, "", "QM9EdgeDataset"], [180, 1, 1, "", "QuestionsDataset"], [181, 1, 1, "", "RedditDataset"], [182, 1, 1, "", "RomanEmpireDataset"], [183, 1, 1, "", "SBMMixtureDataset"], [184, 1, 1, "", "SSTDataset"], [185, 1, 1, "", "SquirrelDataset"], [186, 1, 1, "", "TUDataset"], [187, 1, 1, "", "TexasDataset"], [188, 1, 1, "", "TolokersDataset"], [189, 1, 1, "", "TreeCycleDataset"], [190, 1, 1, "", "TreeGridDataset"], [191, 1, 1, "", "WN18Dataset"], [192, 1, 1, "", "WikiCSDataset"], [193, 1, 1, "", "WisconsinDataset"], [194, 1, 1, "", "YelpDataset"], [195, 1, 1, "", "ZINCDataset"]], "dgl.data.AIFBDataset": [[132, 2, 1, "", "__getitem__"], [132, 2, 1, "", "__len__"], [132, 5, 1, "", "num_classes"], [132, 5, 1, "", "predict_category"]], "dgl.data.AMDataset": [[133, 2, 1, "", "__getitem__"], [133, 2, 1, "", "__len__"], [133, 5, 1, "", "num_classes"], [133, 5, 1, "", "predict_category"]], "dgl.data.ActorDataset": [[134, 2, 1, "", "__getitem__"], [134, 2, 1, "", "__len__"], [134, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyComputerDataset": [[135, 2, 1, "", "__getitem__"], [135, 2, 1, "", "__len__"], [135, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyPhotoDataset": [[136, 2, 1, "", "__getitem__"], [136, 2, 1, "", "__len__"], [136, 5, 1, "", "num_classes"]], "dgl.data.AmazonRatingsDataset": [[137, 2, 1, "", "__getitem__"], [137, 2, 1, "", "__len__"], [137, 5, 1, "", "num_classes"]], "dgl.data.AsGraphPredDataset": [[138, 2, 1, "", "__getitem__"], [138, 2, 1, "", "__len__"], [138, 5, 1, "", "edge_feat_size"], [138, 5, 1, "", "node_feat_size"], [138, 5, 1, "", "num_classes"], [138, 5, 1, "", "num_tasks"], [138, 5, 1, "", "test_idx"], [138, 5, 1, "", "train_idx"], [138, 5, 1, "", "val_idx"]], "dgl.data.AsLinkPredDataset": [[139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__len__"], [139, 5, 1, "", "feat_size"], [139, 5, 1, "", "test_edges"], [139, 5, 1, "", "train_graph"], [139, 5, 1, "", "val_edges"]], "dgl.data.AsNodePredDataset": [[140, 2, 1, "", "__getitem__"], [140, 2, 1, "", "__len__"], [140, 5, 1, "", "num_classes"], [140, 5, 1, "", "test_idx"], [140, 5, 1, "", "train_idx"], [140, 5, 1, "", "val_idx"]], "dgl.data.BA2MotifDataset": [[141, 2, 1, "", "__getitem__"], [141, 2, 1, "", "__len__"], [141, 5, 1, "", "num_classes"]], "dgl.data.BACommunityDataset": [[142, 2, 1, "", "__getitem__"], [142, 2, 1, "", "__len__"], [142, 5, 1, "", "num_classes"]], "dgl.data.BAShapeDataset": [[143, 2, 1, "", "__getitem__"], [143, 2, 1, "", "__len__"], [143, 5, 1, "", "num_classes"]], "dgl.data.BGSDataset": [[144, 2, 1, "", "__getitem__"], [144, 2, 1, "", "__len__"], [144, 5, 1, "", "num_classes"], [144, 5, 1, "", "predict_category"]], "dgl.data.BitcoinOTCDataset": [[145, 2, 1, "", "__getitem__"], [145, 2, 1, "", "__len__"], [145, 5, 1, "", "graphs"], [145, 5, 1, "", "is_temporal"]], "dgl.data.CIFAR10SuperPixelDataset": [[146, 2, 1, "", "__getitem__"], [146, 2, 1, "", "__len__"]], "dgl.data.CLUSTERDataset": [[147, 2, 1, "", "__getitem__"], [147, 2, 1, "", "__len__"], [147, 5, 1, "", "num_classes"]], "dgl.data.CSVDataset": [[148, 2, 1, "", "__getitem__"], [148, 2, 1, "", "__len__"], [148, 5, 1, "", "data"], [148, 5, 1, "", "graphs"]], "dgl.data.ChameleonDataset": [[149, 2, 1, "", "__getitem__"], [149, 2, 1, "", "__len__"], [149, 5, 1, "", "num_classes"]], "dgl.data.CiteseerGraphDataset": [[150, 2, 1, "", "__getitem__"], [150, 2, 1, "", "__len__"], [150, 5, 1, "", "num_classes"]], "dgl.data.CoauthorCSDataset": [[151, 2, 1, "", "__getitem__"], [151, 2, 1, "", "__len__"], [151, 5, 1, "", "num_classes"]], "dgl.data.CoauthorPhysicsDataset": [[152, 2, 1, "", "__getitem__"], [152, 2, 1, "", "__len__"], [152, 5, 1, "", "num_classes"]], "dgl.data.CoraFullDataset": [[153, 2, 1, "", "__getitem__"], [153, 2, 1, "", "__len__"], [153, 5, 1, "", "num_classes"]], "dgl.data.CoraGraphDataset": [[154, 2, 1, "", "__getitem__"], [154, 2, 1, "", "__len__"], [154, 5, 1, "", "num_classes"]], "dgl.data.CornellDataset": [[155, 2, 1, "", "__getitem__"], [155, 2, 1, "", "__len__"], [155, 5, 1, "", "num_classes"]], "dgl.data.DGLDataset": [[156, 2, 1, "", "__getitem__"], [156, 2, 1, "", "__len__"], [156, 5, 1, "", "hash"], [156, 5, 1, "", "name"], [156, 5, 1, "", "raw_dir"], [156, 5, 1, "", "raw_path"], [156, 5, 1, "", "save_dir"], [156, 5, 1, "", "save_path"], [156, 5, 1, "", "url"], [156, 5, 1, "", "verbose"]], "dgl.data.FB15k237Dataset": [[157, 2, 1, "", "__getitem__"], [157, 2, 1, "", "__len__"], [157, 5, 1, "", "num_nodes"], [157, 5, 1, "", "num_rels"]], "dgl.data.FB15kDataset": [[158, 2, 1, "", "__getitem__"], [158, 2, 1, "", "__len__"], [158, 5, 1, "", "num_nodes"], [158, 5, 1, "", "num_rels"]], "dgl.data.FakeNewsDataset": [[159, 2, 1, "", "__getitem__"], [159, 2, 1, "", "__len__"], [159, 5, 1, "", "feature"], [159, 5, 1, "", "feature_name"], [159, 5, 1, "", "graphs"], [159, 5, 1, "", "labels"], [159, 5, 1, "", "name"], [159, 5, 1, "", "num_classes"], [159, 5, 1, "", "num_graphs"], [159, 5, 1, "", "test_mask"], [159, 5, 1, "", "train_mask"], [159, 5, 1, "", "val_mask"]], "dgl.data.FlickrDataset": [[160, 2, 1, "", "__getitem__"], [160, 2, 1, "", "__len__"], [160, 5, 1, "", "num_classes"]], "dgl.data.FraudAmazonDataset": [[161, 2, 1, "", "__getitem__"], [161, 2, 1, "", "__len__"]], "dgl.data.FraudDataset": [[162, 2, 1, "", "__getitem__"], [162, 2, 1, "", "__len__"], [162, 5, 1, "", "graph"], [162, 5, 1, "", "num_classes"], [162, 5, 1, "", "seed"], [162, 5, 1, "", "train_size"], [162, 5, 1, "", "val_size"]], "dgl.data.FraudYelpDataset": [[163, 2, 1, "", "__getitem__"], [163, 2, 1, "", "__len__"]], "dgl.data.GDELTDataset": [[164, 2, 1, "", "__getitem__"], [164, 2, 1, "", "__len__"], [164, 5, 1, "", "end_time"], [164, 5, 1, "", "is_temporal"], [164, 5, 1, "", "start_time"]], "dgl.data.GINDataset": [[165, 2, 1, "", "__getitem__"], [165, 2, 1, "", "__len__"], [165, 5, 1, "", "num_classes"]], "dgl.data.ICEWS18Dataset": [[166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__len__"], [166, 5, 1, "", "is_temporal"]], "dgl.data.KarateClubDataset": [[167, 2, 1, "", "__getitem__"], [167, 2, 1, "", "__len__"], [167, 5, 1, "", "num_classes"]], "dgl.data.LegacyTUDataset": [[168, 2, 1, "", "__getitem__"], [168, 2, 1, "", "__len__"], [168, 5, 1, "", "max_num_node"], [168, 5, 1, "", "num_classes"], [168, 5, 1, "", "num_labels"]], "dgl.data.MNISTSuperPixelDataset": [[169, 2, 1, "", "__getitem__"], [169, 2, 1, "", "__len__"]], "dgl.data.MUTAGDataset": [[170, 2, 1, "", "__getitem__"], [170, 2, 1, "", "__len__"], [170, 5, 1, "", "graph"], [170, 5, 1, "", "num_classes"], [170, 5, 1, "", "predict_category"]], "dgl.data.MinesweeperDataset": [[171, 2, 1, "", "__getitem__"], [171, 2, 1, "", "__len__"], [171, 5, 1, "", "num_classes"]], "dgl.data.MiniGCDataset": [[172, 2, 1, "", "__getitem__"], [172, 2, 1, "", "__len__"], [172, 5, 1, "", "max_num_v"], [172, 5, 1, "", "min_num_v"], [172, 5, 1, "", "num_classes"], [172, 5, 1, "", "num_graphs"]], "dgl.data.MovieLensDataset": [[173, 2, 1, "", "__getitem__"], [173, 2, 1, "", "__len__"]], "dgl.data.PATTERNDataset": [[174, 2, 1, "", "__getitem__"], [174, 2, 1, "", "__len__"], [174, 5, 1, "", "num_classes"]], "dgl.data.PPIDataset": [[175, 2, 1, "", "__getitem__"], [175, 2, 1, "", "__len__"], [175, 5, 1, "", "features"], [175, 5, 1, "", "labels"], [175, 5, 1, "", "num_labels"]], "dgl.data.PubmedGraphDataset": [[176, 2, 1, "", "__getitem__"], [176, 2, 1, "", "__len__"], [176, 5, 1, "", "num_classes"]], "dgl.data.QM7bDataset": [[177, 2, 1, "", "__getitem__"], [177, 2, 1, "", "__len__"], [177, 5, 1, "", "num_labels"], [177, 5, 1, "", "num_tasks"]], "dgl.data.QM9Dataset": [[178, 2, 1, "", "__getitem__"], [178, 2, 1, "", "__len__"], [178, 5, 1, "", "num_labels"], [178, 5, 1, "", "num_tasks"]], "dgl.data.QM9EdgeDataset": [[179, 2, 1, "", "__getitem__"], [179, 2, 1, "", "__len__"], [179, 5, 1, "", "num_labels"], [179, 5, 1, "", "num_tasks"]], "dgl.data.QuestionsDataset": [[180, 2, 1, "", "__getitem__"], [180, 2, 1, "", "__len__"], [180, 5, 1, "", "num_classes"]], "dgl.data.RedditDataset": [[181, 2, 1, "", "__getitem__"], [181, 2, 1, "", "__len__"], [181, 5, 1, "", "num_classes"]], "dgl.data.RomanEmpireDataset": [[182, 2, 1, "", "__getitem__"], [182, 2, 1, "", "__len__"], [182, 5, 1, "", "num_classes"]], "dgl.data.SBMMixtureDataset": [[183, 2, 1, "", "__getitem__"], [183, 2, 1, "", "__len__"], [183, 2, 1, "", "collate_fn"]], "dgl.data.SSTDataset": [[184, 2, 1, "", "__getitem__"], [184, 2, 1, "", "__len__"], [184, 5, 1, "", "num_classes"], [184, 5, 1, "", "pretrained_emb"], [184, 5, 1, "", "vocab"], [184, 5, 1, "", "vocab_size"]], "dgl.data.SquirrelDataset": [[185, 2, 1, "", "__getitem__"], [185, 2, 1, "", "__len__"], [185, 5, 1, "", "num_classes"]], "dgl.data.TUDataset": [[186, 2, 1, "", "__getitem__"], [186, 2, 1, "", "__len__"], [186, 5, 1, "", "max_num_node"], [186, 5, 1, "", "num_classes"], [186, 5, 1, "", "num_labels"]], "dgl.data.TexasDataset": [[187, 2, 1, "", "__getitem__"], [187, 2, 1, "", "__len__"], [187, 5, 1, "", "num_classes"]], "dgl.data.TolokersDataset": [[188, 2, 1, "", "__getitem__"], [188, 2, 1, "", "__len__"], [188, 5, 1, "", "num_classes"]], "dgl.data.TreeCycleDataset": [[189, 2, 1, "", "__getitem__"], [189, 2, 1, "", "__len__"], [189, 5, 1, "", "num_classes"]], "dgl.data.TreeGridDataset": [[190, 2, 1, "", "__getitem__"], [190, 2, 1, "", "__len__"], [190, 5, 1, "", "num_classes"]], "dgl.data.WN18Dataset": [[191, 2, 1, "", "__getitem__"], [191, 2, 1, "", "__len__"], [191, 5, 1, "", "num_nodes"], [191, 5, 1, "", "num_rels"]], "dgl.data.WikiCSDataset": [[192, 2, 1, "", "__getitem__"], [192, 2, 1, "", "__len__"], [192, 5, 1, "", "num_classes"]], "dgl.data.WisconsinDataset": [[193, 2, 1, "", "__getitem__"], [193, 2, 1, "", "__len__"], [193, 5, 1, "", "num_classes"]], "dgl.data.YelpDataset": [[194, 2, 1, "", "__getitem__"], [194, 2, 1, "", "__len__"], [194, 5, 1, "", "num_classes"]], "dgl.data.ZINCDataset": [[195, 2, 1, "", "__getitem__"], [195, 2, 1, "", "__len__"], [195, 5, 1, "", "num_atom_types"], [195, 5, 1, "", "num_bond_types"]], "dgl.data.utils": [[196, 1, 1, "", "Subset"], [197, 1, 1, "", "add_node_property_split"], [198, 1, 1, "", "add_nodepred_split"], [199, 1, 1, "", "check_sha1"], [200, 1, 1, "", "download"], [201, 1, 1, "", "extract_archive"], [202, 1, 1, "", "get_download_dir"], [203, 1, 1, "", "load_info"], [204, 1, 1, "", "load_labels"], [205, 1, 1, "", "mask_nodes_by_property"], [206, 1, 1, "", "save_info"], [207, 1, 1, "", "split_dataset"]], "dgl.data.utils.Subset": [[196, 2, 1, "", "__getitem__"], [196, 2, 1, "", "__len__"]], "dgl.dataloading": [[208, 1, 1, "", "BlockSampler"], [209, 1, 1, "", "ClusterGCNSampler"], [210, 1, 1, "", "DataLoader"], [211, 1, 1, "", "DistEdgeDataLoader"], [212, 1, 1, "", "DistNodeDataLoader"], [213, 1, 1, "", "GraphDataLoader"], [214, 1, 1, "", "LaborSampler"], [215, 1, 1, "", "MultiLayerFullNeighborSampler"], [216, 1, 1, "", "NeighborSampler"], [217, 1, 1, "", "SAINTSampler"], [218, 1, 1, "", "Sampler"], [219, 1, 1, "", "ShaDowKHopSampler"], [220, 4, 1, "", "as_edge_prediction_sampler"]], "dgl.dataloading.BlockSampler": [[208, 2, 1, "", "__init__"]], "dgl.dataloading.base": [[221, 1, 1, "", "LazyFeature"], [222, 1, 1, "", "set_dst_lazy_features"], [223, 1, 1, "", "set_edge_lazy_features"], [224, 1, 1, "", "set_node_lazy_features"], [225, 1, 1, "", "set_src_lazy_features"]], "dgl.dataloading.negative_sampler": [[226, 1, 1, "", "GlobalUniform"], [227, 1, 1, "", "PerSourceUniform"], [228, 5, 1, "", "Uniform"]], "dgl.distributed": [[4, 1, 1, "", "DistDataLoader"], [4, 1, 1, "", "DistEmbedding"], [4, 1, 1, "", "DistGraph"], [4, 1, 1, "", "DistTensor"], [4, 1, 1, "", "GraphPartitionBook"], [4, 1, 1, "", "PartitionPolicy"], [231, 4, 1, "", "edge_split"], [232, 4, 1, "", "find_edges"], [233, 4, 1, "", "in_subgraph"], [234, 4, 1, "", "initialize"], [235, 4, 1, "", "load_partition"], [236, 4, 1, "", "load_partition_book"], [237, 4, 1, "", "load_partition_feats"], [238, 4, 1, "", "node_split"], [239, 4, 1, "", "partition_graph"], [240, 4, 1, "", "sample_etype_neighbors"], [241, 4, 1, "", "sample_neighbors"]], "dgl.distributed.DistGraph": [[4, 2, 1, "", "barrier"], [4, 3, 1, "", "device"], [4, 3, 1, "", "edata"], [4, 2, 1, "", "edge_attr_schemes"], [4, 3, 1, "", "edges"], [4, 3, 1, "", "etypes"], [4, 2, 1, "", "find_edges"], [4, 2, 1, "", "get_edge_partition_policy"], [4, 2, 1, "", "get_etype_id"], [4, 2, 1, "", "get_node_partition_policy"], [4, 2, 1, "", "get_ntype_id"], [4, 2, 1, "", "get_partition_book"], [4, 3, 1, "", "idtype"], [4, 2, 1, "", "in_degrees"], [4, 3, 1, "", "local_partition"], [4, 3, 1, "", "ndata"], [4, 2, 1, "", "node_attr_schemes"], [4, 3, 1, "", "nodes"], [4, 3, 1, "", "ntypes"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_nodes"], [4, 2, 1, "", "number_of_edges"], [4, 2, 1, "", "number_of_nodes"], [4, 2, 1, "", "out_degrees"], [4, 2, 1, "", "rank"]], "dgl.distributed.DistTensor": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "name"], [4, 3, 1, "", "part_policy"], [4, 3, 1, "", "shape"]], "dgl.distributed.GraphPartitionBook": [[4, 3, 1, "", "canonical_etypes"], [4, 2, 1, "", "eid2localeid"], [4, 2, 1, "", "eid2partid"], [4, 2, 1, "", "map_to_homo_eid"], [4, 2, 1, "", "map_to_homo_nid"], [4, 2, 1, "", "map_to_per_etype"], [4, 2, 1, "", "map_to_per_ntype"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "nid2localnid"], [4, 2, 1, "", "nid2partid"], [4, 2, 1, "", "num_partitions"], [4, 3, 1, "", "partid"], [4, 2, 1, "", "partid2eids"], [4, 2, 1, "", "partid2nids"], [4, 2, 1, "", "shared_memory"]], "dgl.distributed.PartitionPolicy": [[4, 2, 1, "", "get_part_size"], [4, 2, 1, "", "get_size"], [4, 3, 1, "", "part_id"], [4, 3, 1, "", "partition_book"], [4, 3, 1, "", "policy_str"], [4, 2, 1, "", "to_local"], [4, 2, 1, "", "to_partid"]], "dgl.distributed.optim": [[4, 1, 1, "", "SparseAdagrad"], [4, 1, 1, "", "SparseAdam"]], "dgl.distributed.optim.SparseAdagrad": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.distributed.optim.SparseAdam": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.function": [[250, 4, 1, "", "copy_e"], [251, 4, 1, "", "copy_u"], [252, 4, 1, "", "e_add_u"], [253, 4, 1, "", "e_add_v"], [254, 4, 1, "", "e_div_u"], [255, 4, 1, "", "e_div_v"], [256, 4, 1, "", "e_dot_u"], [257, 4, 1, "", "e_dot_v"], [258, 4, 1, "", "e_mul_u"], [259, 4, 1, "", "e_mul_v"], [260, 4, 1, "", "e_sub_u"], [261, 4, 1, "", "e_sub_v"], [262, 4, 1, "", "max"], [263, 4, 1, "", "mean"], [264, 4, 1, "", "min"], [265, 4, 1, "", "sum"], [266, 4, 1, "", "u_add_e"], [267, 4, 1, "", "u_add_v"], [268, 4, 1, "", "u_div_e"], [269, 4, 1, "", "u_div_v"], [270, 4, 1, "", "u_dot_e"], [271, 4, 1, "", "u_dot_v"], [272, 4, 1, "", "u_mul_e"], [273, 4, 1, "", "u_mul_v"], [274, 4, 1, "", "u_sub_e"], [275, 4, 1, "", "u_sub_v"], [276, 4, 1, "", "v_add_e"], [277, 4, 1, "", "v_add_u"], [278, 4, 1, "", "v_div_e"], [279, 4, 1, "", "v_div_u"], [280, 4, 1, "", "v_dot_e"], [281, 4, 1, "", "v_dot_u"], [282, 4, 1, "", "v_mul_e"], [283, 4, 1, "", "v_mul_u"], [284, 4, 1, "", "v_sub_e"], [285, 4, 1, "", "v_sub_u"]], "dgl.geometry": [[6, 1, 1, "", "farthest_point_sampler"], [6, 1, 1, "", "neighbor_matching"]], "dgl.graphbolt": [[287, 1, 1, "", "BasicFeatureStore"], [288, 1, 1, "", "BuiltinDataset"], [289, 1, 1, "", "CopyTo"], [290, 1, 1, "", "DataLoader"], [291, 1, 1, "", "Dataset"], [292, 1, 1, "", "DistributedItemSampler"], [293, 1, 1, "", "Feature"], [294, 1, 1, "", "FeatureFetcher"], [295, 1, 1, "", "FeatureStore"], [296, 1, 1, "", "FusedCSCSamplingGraph"], [297, 1, 1, "", "GPUCachedFeature"], [298, 1, 1, "", "InSubgraphSampler"], [299, 1, 1, "", "ItemSampler"], [300, 1, 1, "", "ItemSet"], [301, 1, 1, "", "ItemSetDict"], [302, 1, 1, "", "LayerNeighborSampler"], [303, 1, 1, "", "LegacyDataset"], [304, 1, 1, "", "MiniBatch"], [305, 1, 1, "", "MiniBatchTransformer"], [306, 1, 1, "", "NegativeSampler"], [307, 1, 1, "", "NeighborSampler"], [308, 1, 1, "", "OnDiskDataset"], [309, 1, 1, "", "SampledSubgraph"], [310, 1, 1, "", "SampledSubgraphImpl"], [311, 1, 1, "", "SamplingGraph"], [312, 1, 1, "", "SubgraphSampler"], [313, 1, 1, "", "Task"], [314, 1, 1, "", "TorchBasedFeature"], [315, 1, 1, "", "TorchBasedFeatureStore"], [316, 1, 1, "", "UniformNegativeSampler"], [317, 4, 1, "", "add_reverse_edges"], [318, 4, 1, "", "compact_csc_format"], [319, 4, 1, "", "etype_str_to_tuple"], [320, 4, 1, "", "etype_tuple_to_str"], [321, 4, 1, "", "exclude_seed_edges"], [322, 4, 1, "", "expand_indptr"], [323, 4, 1, "", "from_dglgraph"], [324, 4, 1, "", "fused_csc_sampling_graph"], [325, 4, 1, "", "index_select"], [326, 4, 1, "", "isin"], [327, 4, 1, "", "load_from_shared_memory"], [328, 4, 1, "", "seed"], [329, 4, 1, "", "unique_and_compact"], [330, 4, 1, "", "unique_and_compact_csc_formats"]], "dgl.graphbolt.BasicFeatureStore": [[287, 2, 1, "", "keys"], [287, 2, 1, "", "metadata"], [287, 2, 1, "", "read"], [287, 2, 1, "", "size"], [287, 2, 1, "", "update"]], "dgl.graphbolt.Dataset": [[291, 3, 1, "", "all_nodes_set"], [291, 3, 1, "", "dataset_name"], [291, 3, 1, "", "feature"], [291, 3, 1, "", "graph"], [291, 3, 1, "", "tasks"]], "dgl.graphbolt.Feature": [[293, 2, 1, "", "metadata"], [293, 2, 1, "", "read"], [293, 2, 1, "", "size"], [293, 2, 1, "", "update"]], "dgl.graphbolt.FeatureStore": [[295, 2, 1, "", "keys"], [295, 2, 1, "", "metadata"], [295, 2, 1, "", "read"], [295, 2, 1, "", "size"], [295, 2, 1, "", "update"]], "dgl.graphbolt.FusedCSCSamplingGraph": [[296, 2, 1, "", "copy_to_shared_memory"], [296, 3, 1, "", "csc_indptr"], [296, 3, 1, "", "edge_attributes"], [296, 3, 1, "", "edge_type_to_id"], [296, 2, 1, "", "in_subgraph"], [296, 3, 1, "", "indices"], [296, 3, 1, "", "node_attributes"], [296, 3, 1, "", "node_type_offset"], [296, 3, 1, "", "node_type_to_id"], [296, 3, 1, "", "num_edges"], [296, 3, 1, "", "num_nodes"], [296, 2, 1, "", "pin_memory_"], [296, 2, 1, "", "sample_layer_neighbors"], [296, 2, 1, "", "sample_negative_edges_uniform"], [296, 2, 1, "", "sample_negative_edges_uniform_2"], [296, 2, 1, "", "sample_neighbors"], [296, 2, 1, "", "temporal_sample_neighbors"], [296, 2, 1, "", "to"], [296, 3, 1, "", "total_num_edges"], [296, 3, 1, "", "total_num_nodes"], [296, 3, 1, "", "type_per_edge"]], "dgl.graphbolt.GPUCachedFeature": [[297, 2, 1, "", "read"], [297, 2, 1, "", "size"], [297, 2, 1, "", "update"]], "dgl.graphbolt.InSubgraphSampler": [[298, 2, 1, "", "sample_subgraphs"]], "dgl.graphbolt.ItemSet": [[300, 3, 1, "", "names"]], "dgl.graphbolt.ItemSetDict": [[301, 3, 1, "", "names"]], "dgl.graphbolt.LegacyDataset": [[303, 3, 1, "", "all_nodes_set"], [303, 3, 1, "", "dataset_name"], [303, 3, 1, "", "feature"], [303, 3, 1, "", "graph"], [303, 3, 1, "", "tasks"]], "dgl.graphbolt.MiniBatch": [[304, 3, 1, "", "blocks"], [304, 5, 1, "", "compacted_negative_dsts"], [304, 5, 1, "", "compacted_negative_srcs"], [304, 5, 1, "", "compacted_node_pairs"], [304, 5, 1, "", "compacted_seeds"], [304, 5, 1, "", "edge_features"], [304, 2, 1, "", "edge_ids"], [304, 5, 1, "", "indexes"], [304, 5, 1, "", "input_nodes"], [304, 5, 1, "", "labels"], [304, 5, 1, "", "negative_dsts"], [304, 3, 1, "", "negative_node_pairs"], [304, 5, 1, "", "negative_srcs"], [304, 5, 1, "", "node_features"], [304, 2, 1, "", "node_ids"], [304, 5, 1, "", "node_pairs"], [304, 3, 1, "", "node_pairs_with_labels"], [304, 2, 1, "", "num_layers"], [304, 3, 1, "", "positive_node_pairs"], [304, 5, 1, "", "sampled_subgraphs"], [304, 5, 1, "", "seed_nodes"], [304, 5, 1, "", "seeds"], [304, 2, 1, "", "set_edge_features"], [304, 2, 1, "", "set_node_features"], [304, 2, 1, "", "to"], [304, 2, 1, "", "to_pyg_data"]], "dgl.graphbolt.NeighborSampler": [[307, 2, 1, "", "sampling_stages"]], "dgl.graphbolt.OnDiskDataset": [[308, 3, 1, "", "all_nodes_set"], [308, 3, 1, "", "dataset_name"], [308, 3, 1, "", "feature"], [308, 3, 1, "", "graph"], [308, 2, 1, "", "load"], [308, 3, 1, "", "tasks"], [308, 3, 1, "", "yaml_data"]], "dgl.graphbolt.SampledSubgraph": [[309, 2, 1, "", "exclude_edges"], [309, 3, 1, "", "original_column_node_ids"], [309, 3, 1, "", "original_edge_ids"], [309, 3, 1, "", "original_row_node_ids"], [309, 3, 1, "", "sampled_csc"], [309, 2, 1, "", "to"]], "dgl.graphbolt.SampledSubgraphImpl": [[310, 5, 1, "", "original_column_node_ids"], [310, 5, 1, "", "original_edge_ids"], [310, 5, 1, "", "original_row_node_ids"], [310, 5, 1, "", "sampled_csc"]], "dgl.graphbolt.SamplingGraph": [[311, 2, 1, "", "copy_to_shared_memory"], [311, 3, 1, "", "num_edges"], [311, 3, 1, "", "num_nodes"], [311, 2, 1, "", "to"]], "dgl.graphbolt.SubgraphSampler": [[312, 2, 1, "", "sample_subgraphs"], [312, 2, 1, "", "sampling_stages"]], "dgl.graphbolt.Task": [[313, 3, 1, "", "metadata"], [313, 3, 1, "", "test_set"], [313, 3, 1, "", "train_set"], [313, 3, 1, "", "validation_set"]], "dgl.graphbolt.TorchBasedFeature": [[314, 2, 1, "", "is_pinned"], [314, 2, 1, "", "metadata"], [314, 2, 1, "", "pin_memory_"], [314, 2, 1, "", "read"], [314, 2, 1, "", "size"], [314, 2, 1, "", "to"], [314, 2, 1, "", "update"]], "dgl.graphbolt.TorchBasedFeatureStore": [[315, 2, 1, "", "is_pinned"], [315, 2, 1, "", "pin_memory_"], [315, 2, 1, "", "to"]], "dgl.multiprocessing.pytorch": [[352, 4, 1, "", "call_once_and_share"], [353, 4, 1, "", "shared_tensor"]], "dgl.nn": [[18, 0, 0, "-", "functional"]], "dgl.nn.functional": [[354, 4, 1, "", "edge_softmax"]], "dgl.nn.mxnet": [[355, 1, 1, "", "HeteroGraphConv"]], "dgl.nn.mxnet.conv": [[356, 1, 1, "", "AGNNConv"], [357, 1, 1, "", "APPNPConv"], [358, 1, 1, "", "ChebConv"], [359, 1, 1, "", "DenseChebConv"], [360, 1, 1, "", "DenseGraphConv"], [361, 1, 1, "", "DenseSAGEConv"], [362, 1, 1, "", "EdgeConv"], [363, 1, 1, "", "GATConv"], [364, 1, 1, "", "GINConv"], [365, 1, 1, "", "GMMConv"], [366, 1, 1, "", "GatedGraphConv"], [367, 1, 1, "", "GraphConv"], [368, 1, 1, "", "NNConv"], [369, 1, 1, "", "RelGraphConv"], [370, 1, 1, "", "SAGEConv"], [371, 1, 1, "", "SGConv"], [372, 1, 1, "", "TAGConv"]], "dgl.nn.mxnet.glob": [[373, 1, 1, "", "AvgPooling"], [374, 1, 1, "", "GlobalAttentionPooling"], [375, 1, 1, "", "MaxPooling"], [376, 1, 1, "", "Set2Set"], [377, 1, 1, "", "SortPooling"], [378, 1, 1, "", "SumPooling"]], "dgl.nn.mxnet.utils": [[379, 1, 1, "", "Sequential"]], "dgl.nn.pytorch": [[380, 1, 1, "", "DeepWalk"], [381, 1, 1, "", "HeteroEmbedding"], [382, 1, 1, "", "HeteroGraphConv"], [383, 1, 1, "", "HeteroLinear"], [384, 1, 1, "", "MetaPath2Vec"], [385, 1, 1, "", "TypedLinear"]], "dgl.nn.pytorch.DeepWalk": [[380, 2, 1, "", "forward"], [380, 5, 1, "", "node_embed"], [380, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroEmbedding": [[381, 2, 1, "", "forward"], [381, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroGraphConv": [[382, 2, 1, "", "forward"], [382, 5, 1, "", "mods"]], "dgl.nn.pytorch.HeteroLinear": [[383, 2, 1, "", "forward"]], "dgl.nn.pytorch.MetaPath2Vec": [[384, 2, 1, "", "forward"], [384, 5, 1, "", "local_to_global_nid"], [384, 5, 1, "", "node_embed"], [384, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.TypedLinear": [[385, 2, 1, "", "forward"], [385, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv": [[386, 1, 1, "", "AGNNConv"], [387, 1, 1, "", "APPNPConv"], [388, 1, 1, "", "AtomicConv"], [389, 1, 1, "", "CFConv"], [390, 1, 1, "", "ChebConv"], [391, 1, 1, "", "CuGraphGATConv"], [392, 1, 1, "", "CuGraphRelGraphConv"], [393, 1, 1, "", "CuGraphSAGEConv"], [394, 1, 1, "", "DGNConv"], [395, 1, 1, "", "DenseChebConv"], [396, 1, 1, "", "DenseGraphConv"], [397, 1, 1, "", "DenseSAGEConv"], [398, 1, 1, "", "DotGatConv"], [399, 1, 1, "", "EGATConv"], [400, 1, 1, "", "EGNNConv"], [401, 1, 1, "", "EdgeConv"], [402, 1, 1, "", "EdgeGATConv"], [403, 1, 1, "", "EdgeWeightNorm"], [404, 1, 1, "", "GATConv"], [405, 1, 1, "", "GATv2Conv"], [406, 1, 1, "", "GCN2Conv"], [407, 1, 1, "", "GINConv"], [408, 1, 1, "", "GINEConv"], [409, 1, 1, "", "GMMConv"], [410, 1, 1, "", "GatedGCNConv"], [411, 1, 1, "", "GatedGraphConv"], [412, 1, 1, "", "GraphConv"], [413, 1, 1, "", "GroupRevRes"], [414, 1, 1, "", "HGTConv"], [415, 1, 1, "", "NNConv"], [416, 1, 1, "", "PNAConv"], [417, 1, 1, "", "RelGraphConv"], [418, 1, 1, "", "SAGEConv"], [419, 1, 1, "", "SGConv"], [420, 1, 1, "", "TAGConv"], [421, 1, 1, "", "TWIRLSConv"], [422, 1, 1, "", "TWIRLSUnfoldingAndAttention"]], "dgl.nn.pytorch.conv.AGNNConv": [[386, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.APPNPConv": [[387, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.AtomicConv": [[388, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CFConv": [[389, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.ChebConv": [[390, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CuGraphGATConv": [[391, 2, 1, "", "forward"], [391, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphRelGraphConv": [[392, 2, 1, "", "forward"], [392, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphSAGEConv": [[393, 2, 1, "", "forward"], [393, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DGNConv": [[394, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.DenseChebConv": [[395, 2, 1, "", "forward"], [395, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseGraphConv": [[396, 2, 1, "", "forward"], [396, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseSAGEConv": [[397, 2, 1, "", "forward"], [397, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DotGatConv": [[398, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EGATConv": [[399, 2, 1, "", "forward"], [399, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EGNNConv": [[400, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeConv": [[401, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeGATConv": [[402, 2, 1, "", "forward"], [402, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EdgeWeightNorm": [[403, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GATConv": [[404, 2, 1, "", "forward"], [404, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GATv2Conv": [[405, 2, 1, "", "forward"], [405, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GCN2Conv": [[406, 2, 1, "", "forward"], [406, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GINConv": [[407, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GINEConv": [[408, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GMMConv": [[409, 2, 1, "", "forward"], [409, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GatedGCNConv": [[410, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GatedGraphConv": [[411, 2, 1, "", "forward"], [411, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GraphConv": [[412, 5, 1, "", "bias"], [412, 2, 1, "", "forward"], [412, 2, 1, "", "reset_parameters"], [412, 5, 1, "", "weight"]], "dgl.nn.pytorch.conv.GroupRevRes": [[413, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.HGTConv": [[414, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.NNConv": [[415, 2, 1, "", "forward"], [415, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.PNAConv": [[416, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.RelGraphConv": [[417, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.SAGEConv": [[418, 2, 1, "", "forward"], [418, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.SGConv": [[419, 2, 1, "", "forward"], [419, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TAGConv": [[420, 2, 1, "", "forward"], [420, 5, 1, "", "lin"], [420, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TWIRLSConv": [[421, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention": [[422, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain": [[423, 1, 1, "", "GNNExplainer"], [424, 1, 1, "", "HeteroGNNExplainer"], [425, 1, 1, "", "HeteroPGExplainer"], [426, 1, 1, "", "HeteroSubgraphX"], [427, 1, 1, "", "PGExplainer"], [428, 1, 1, "", "SubgraphX"]], "dgl.nn.pytorch.explain.GNNExplainer": [[423, 2, 1, "", "explain_graph"], [423, 2, 1, "", "explain_node"], [423, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroGNNExplainer": [[424, 2, 1, "", "explain_graph"], [424, 2, 1, "", "explain_node"], [424, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroPGExplainer": [[425, 2, 1, "", "explain_graph"], [425, 2, 1, "", "explain_node"], [425, 2, 1, "", "forward"], [425, 2, 1, "", "train_step"], [425, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.HeteroSubgraphX": [[426, 2, 1, "", "explain_graph"], [426, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.PGExplainer": [[427, 2, 1, "", "explain_graph"], [427, 2, 1, "", "explain_node"], [427, 2, 1, "", "forward"], [427, 2, 1, "", "train_step"], [427, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.SubgraphX": [[428, 2, 1, "", "explain_graph"], [428, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory": [[429, 1, 1, "", "KNNGraph"], [430, 1, 1, "", "RadiusGraph"], [431, 1, 1, "", "SegmentedKNNGraph"]], "dgl.nn.pytorch.factory.KNNGraph": [[429, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.RadiusGraph": [[430, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.SegmentedKNNGraph": [[431, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob": [[432, 1, 1, "", "AvgPooling"], [433, 1, 1, "", "GlobalAttentionPooling"], [434, 1, 1, "", "MaxPooling"], [435, 1, 1, "", "Set2Set"], [436, 1, 1, "", "SetTransformerDecoder"], [437, 1, 1, "", "SetTransformerEncoder"], [438, 1, 1, "", "SortPooling"], [439, 1, 1, "", "SumPooling"], [440, 1, 1, "", "WeightAndSum"]], "dgl.nn.pytorch.glob.AvgPooling": [[432, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.GlobalAttentionPooling": [[433, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.MaxPooling": [[434, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.Set2Set": [[435, 2, 1, "", "forward"], [435, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.glob.SetTransformerDecoder": [[436, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SetTransformerEncoder": [[437, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SortPooling": [[438, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SumPooling": [[439, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.WeightAndSum": [[440, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt": [[441, 1, 1, "", "BiasedMHA"], [442, 1, 1, "", "DegreeEncoder"], [443, 1, 1, "", "EGTLayer"], [444, 1, 1, "", "GraphormerLayer"], [445, 1, 1, "", "LapPosEncoder"], [446, 1, 1, "", "PathEncoder"], [447, 1, 1, "", "SpatialEncoder"], [448, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt.BiasedMHA": [[441, 2, 1, "", "forward"], [441, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.gt.DegreeEncoder": [[442, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.EGTLayer": [[443, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.GraphormerLayer": [[444, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.LapPosEncoder": [[445, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.PathEncoder": [[446, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder": [[447, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder3d": [[448, 2, 1, "", "forward"]], "dgl.nn.pytorch.link": [[449, 1, 1, "", "EdgePredictor"], [450, 1, 1, "", "TransE"], [451, 1, 1, "", "TransR"]], "dgl.nn.pytorch.link.EdgePredictor": [[449, 2, 1, "", "forward"], [449, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransE": [[450, 2, 1, "", "forward"], [450, 5, 1, "", "rel_emb"], [450, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransR": [[451, 2, 1, "", "forward"], [451, 5, 1, "", "rel_emb"], [451, 5, 1, "", "rel_project"], [451, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.sparse_emb": [[452, 1, 1, "", "NodeEmbedding"]], "dgl.nn.pytorch.utils": [[453, 1, 1, "", "JumpingKnowledge"], [454, 1, 1, "", "LabelPropagation"], [455, 1, 1, "", "Sequential"], [456, 1, 1, "", "WeightBasis"]], "dgl.nn.pytorch.utils.JumpingKnowledge": [[453, 2, 1, "", "forward"], [453, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.utils.LabelPropagation": [[454, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.Sequential": [[455, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.WeightBasis": [[456, 2, 1, "", "forward"]], "dgl.nn.tensorflow.conv": [[457, 1, 1, "", "APPNPConv"], [458, 1, 1, "", "ChebConv"], [459, 1, 1, "", "GATConv"], [460, 1, 1, "", "GINConv"], [461, 1, 1, "", "GraphConv"], [462, 1, 1, "", "RelGraphConv"], [463, 1, 1, "", "SAGEConv"], [464, 1, 1, "", "SGConv"]], "dgl.nn.tensorflow.glob": [[465, 1, 1, "", "AvgPooling"], [466, 1, 1, "", "GlobalAttentionPooling"], [467, 1, 1, "", "HeteroGraphConv"], [468, 1, 1, "", "MaxPooling"], [469, 1, 1, "", "SortPooling"], [470, 1, 1, "", "SumPooling"]], "dgl.ops": [[476, 4, 1, "", "copy_e_max"], [477, 4, 1, "", "copy_e_mean"], [478, 4, 1, "", "copy_e_min"], [479, 4, 1, "", "copy_e_sum"], [480, 4, 1, "", "copy_u"], [481, 4, 1, "", "copy_u_max"], [482, 4, 1, "", "copy_u_mean"], [483, 4, 1, "", "copy_u_min"], [484, 4, 1, "", "copy_u_sum"], [485, 4, 1, "", "copy_v"], [486, 4, 1, "", "e_add_u"], [487, 4, 1, "", "e_add_v"], [488, 4, 1, "", "e_div_u"], [489, 4, 1, "", "e_div_v"], [490, 4, 1, "", "e_dot_u"], [491, 4, 1, "", "e_dot_v"], [492, 4, 1, "", "e_mul_u"], [493, 4, 1, "", "e_mul_v"], [494, 4, 1, "", "e_sub_u"], [495, 4, 1, "", "e_sub_v"], [496, 4, 1, "", "gather_mm"], [497, 4, 1, "", "gsddmm"], [498, 4, 1, "", "gspmm"], [499, 4, 1, "", "segment_mm"], [500, 4, 1, "", "segment_reduce"], [501, 4, 1, "", "u_add_e"], [502, 4, 1, "", "u_add_e_max"], [503, 4, 1, "", "u_add_e_mean"], [504, 4, 1, "", "u_add_e_min"], [505, 4, 1, "", "u_add_e_sum"], [506, 4, 1, "", "u_add_v"], [507, 4, 1, "", "u_div_e"], [508, 4, 1, "", "u_div_e_max"], [509, 4, 1, "", "u_div_e_mean"], [510, 4, 1, "", "u_div_e_min"], [511, 4, 1, "", "u_div_e_sum"], [512, 4, 1, "", "u_div_v"], [513, 4, 1, "", "u_dot_e"], [514, 4, 1, "", "u_dot_v"], [515, 4, 1, "", "u_mul_e"], [516, 4, 1, "", "u_mul_e_max"], [517, 4, 1, "", "u_mul_e_mean"], [518, 4, 1, "", "u_mul_e_min"], [519, 4, 1, "", "u_mul_e_sum"], [520, 4, 1, "", "u_mul_v"], [521, 4, 1, "", "u_sub_e"], [522, 4, 1, "", "u_sub_e_max"], [523, 4, 1, "", "u_sub_e_mean"], [524, 4, 1, "", "u_sub_e_min"], [525, 4, 1, "", "u_sub_e_sum"], [526, 4, 1, "", "u_sub_v"], [527, 4, 1, "", "v_add_e"], [528, 4, 1, "", "v_add_u"], [529, 4, 1, "", "v_div_e"], [530, 4, 1, "", "v_div_u"], [531, 4, 1, "", "v_dot_e"], [532, 4, 1, "", "v_dot_u"], [533, 4, 1, "", "v_mul_e"], [534, 4, 1, "", "v_mul_u"], [535, 4, 1, "", "v_sub_e"], [536, 4, 1, "", "v_sub_u"]], "dgl.optim.pytorch": [[10, 1, 1, "", "SparseAdagrad"], [10, 1, 1, "", "SparseAdam"]], "dgl.sampling": [[555, 1, 1, "", "PinSAGESampler"], [556, 4, 1, "", "global_uniform_negative_sampling"], [557, 4, 1, "", "node2vec_random_walk"], [558, 4, 1, "", "pack_traces"], [559, 4, 1, "", "random_walk"], [560, 4, 1, "", "sample_labors"], [561, 4, 1, "", "sample_neighbors"], [562, 4, 1, "", "sample_neighbors_biased"], [563, 4, 1, "", "select_topk"]], "dgl.sampling.PinSAGESampler": [[555, 2, 1, "", "__init__"]], "dgl.sparse": [[12, 1, 1, "", "SparseMatrix"], [604, 4, 1, "", "add"], [605, 4, 1, "", "bsddmm"], [606, 4, 1, "", "bspmm"], [607, 4, 1, "", "diag"], [608, 4, 1, "", "div"], [609, 4, 1, "", "from_coo"], [610, 4, 1, "", "from_csc"], [611, 4, 1, "", "from_csr"], [612, 4, 1, "", "identity"], [613, 4, 1, "", "matmul"], [614, 4, 1, "", "mul"], [615, 4, 1, "", "power"], [616, 4, 1, "", "sddmm"], [617, 4, 1, "", "softmax"], [618, 4, 1, "", "sp_add_v"], [619, 4, 1, "", "sp_broadcast_v"], [620, 4, 1, "", "sp_div_v"], [621, 4, 1, "", "sp_mul_v"], [622, 4, 1, "", "sp_sub_v"], [623, 4, 1, "", "spmatrix"], [624, 4, 1, "", "spmm"], [625, 4, 1, "", "spspmm"], [626, 4, 1, "", "sub"], [627, 4, 1, "", "val_like"]], "dgl.sparse.SparseMatrix": [[573, 3, 1, "", "T"], [574, 2, 1, "", "coalesce"], [575, 3, 1, "", "col"], [576, 2, 1, "", "coo"], [577, 2, 1, "", "cpu"], [578, 2, 1, "", "csc"], [579, 2, 1, "", "csr"], [580, 2, 1, "", "cuda"], [581, 3, 1, "", "device"], [582, 2, 1, "", "double"], [583, 3, 1, "", "dtype"], [584, 2, 1, "", "float"], [585, 2, 1, "", "has_duplicate"], [586, 2, 1, "", "indices"], [587, 2, 1, "", "int"], [588, 2, 1, "", "long"], [589, 2, 1, "", "neg"], [590, 3, 1, "", "nnz"], [591, 2, 1, "", "reduce"], [592, 3, 1, "", "row"], [593, 3, 1, "", "shape"], [594, 2, 1, "", "smax"], [595, 2, 1, "", "smean"], [596, 2, 1, "", "smin"], [597, 2, 1, "", "softmax"], [598, 2, 1, "", "sum"], [599, 2, 1, "", "t"], [600, 2, 1, "", "to"], [601, 2, 1, "", "to_dense"], [602, 2, 1, "", "transpose"], [603, 3, 1, "", "val"]], "dgl.transforms": [[645, 1, 1, "", "AddEdge"], [646, 1, 1, "", "AddMetaPaths"], [647, 1, 1, "", "AddReverse"], [648, 1, 1, "", "AddSelfLoop"], [649, 1, 1, "", "BaseTransform"], [650, 1, 1, "", "Compose"], [651, 1, 1, "", "DropEdge"], [652, 1, 1, "", "DropNode"], [653, 1, 1, "", "FeatMask"], [654, 1, 1, "", "GCNNorm"], [655, 1, 1, "", "GDC"], [656, 1, 1, "", "HeatKernel"], [657, 1, 1, "", "KHopGraph"], [658, 1, 1, "", "LapPE"], [659, 1, 1, "", "LineGraph"], [660, 1, 1, "", "NodeShuffle"], [661, 1, 1, "", "PPR"], [662, 1, 1, "", "RandomWalkPE"], [663, 1, 1, "", "RemoveSelfLoop"], [664, 1, 1, "", "RowFeatNormalizer"], [665, 1, 1, "", "SIGNDiffusion"], [666, 1, 1, "", "SVDPE"], [667, 1, 1, "", "ToLevi"], [668, 1, 1, "", "ToSimple"]], "dgl.udf.EdgeBatch": [[669, 2, 1, "", "batch_size"], [670, 3, 1, "", "data"], [671, 3, 1, "", "dst"], [672, 2, 1, "", "edges"], [673, 3, 1, "", "src"]], "dgl.udf.NodeBatch": [[674, 2, 1, "", "batch_size"], [675, 3, 1, "", "data"], [676, 3, 1, "", "mailbox"], [677, 2, 1, "", "nodes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [4, 5, 8, 11, 22, 34, 35, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 73, 74, 87, 88, 90, 93, 94, 100, 103, 107, 113, 122, 125, 130, 131, 151, 152, 161, 163, 167, 168, 180, 182, 183, 188, 208, 210, 213, 220, 221, 230, 232, 234, 239, 240, 241, 242, 244, 245, 286, 292, 296, 299, 300, 304, 309, 316, 331, 332, 336, 337, 348, 349, 388, 396, 398, 402, 411, 412, 414, 435, 455, 472, 473, 497, 498, 537, 553, 560, 561, 562, 564, 567, 571, 572, 658, 685, 686, 688, 689, 690, 692, 694, 696, 699, 701, 704, 705, 706, 707, 709, 710, 717, 719, 720, 722, 724, 726, 727, 729, 751, 772, 779, 784, 793, 803, 804, 810, 815, 816, 817, 818, 819, 820, 821, 822, 825, 826, 827, 830, 831, 837, 841, 844, 845, 848, 849, 850, 854, 857, 860, 861, 866, 867], "0": [0, 4, 5, 6, 9, 10, 14, 20, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 207, 210, 213, 214, 216, 217, 219, 220, 226, 227, 229, 230, 239, 242, 243, 244, 245, 246, 247, 248, 249, 286, 290, 292, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 310, 312, 314, 316, 317, 318, 322, 324, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 352, 354, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 454, 455, 471, 472, 473, 474, 475, 499, 500, 537, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 577, 578, 579, 580, 582, 584, 585, 587, 588, 591, 594, 595, 596, 597, 598, 600, 604, 605, 606, 607, 608, 610, 611, 612, 613, 614, 615, 616, 617, 619, 624, 625, 626, 630, 631, 632, 633, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 686, 687, 688, 690, 691, 692, 693, 694, 698, 699, 700, 701, 702, 708, 710, 711, 712, 713, 714, 716, 718, 719, 722, 723, 724, 725, 727, 728, 729, 733, 734, 736, 737, 739, 742, 743, 744, 745, 746, 752, 754, 755, 756, 757, 759, 762, 763, 764, 765, 767, 768, 769, 773, 774, 776, 777, 778, 779, 780, 783, 784, 785, 786, 787, 794, 796, 797, 798, 799, 800, 802, 803, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 821, 823, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 839, 840, 841, 843, 844, 845, 847, 848, 849, 850, 851, 853, 854, 856, 857, 859, 860, 861, 863, 865, 866, 867, 869], "00": [25, 339, 630, 666, 817, 818, 820, 821, 823, 839, 843, 847, 853, 856, 859, 863, 865, 869], "000": [14, 146, 147, 169, 173, 174, 191, 195, 817, 823, 840, 841, 843, 844, 845, 847, 861, 863, 865], "0000": [9, 118, 173, 354, 388, 396, 407, 412, 417, 422, 475, 547, 591, 595, 597, 608, 617, 654, 658, 662, 816, 820], "00000": [848, 849, 851, 854], "000000": 816, "000007645": 841, "00001": [848, 849, 851, 854], "00002": [848, 849, 851, 854], "00003": [848, 849, 851, 854], "00004": [848, 849, 851, 854], "00005": [848, 849, 851, 854], "00006": [848, 849, 851, 854], "00007": [848, 849, 851, 854], "00008": [848, 849, 851, 854], "00009": [848, 849, 851, 854], "0000e": [339, 630, 666], "00010": [848, 849, 851], "00011": [848, 849, 851], "00012": [848, 849, 851], "00013": [848, 849, 851], "00014": [848, 849, 851], "00015": [848, 849, 851], "00016": [848, 849, 851], "00017": [848, 849, 851], "00018": [848, 849, 851], "00019": [848, 849, 851], "00020": [848, 849, 851], "00021": [848, 849, 851], "00022": [848, 849, 851], "00023": [848, 849, 851], "00024": [848, 849, 851], "00025": [848, 851], "00026": [848, 851], "00027": [848, 851], "00028": [848, 851], "00029": [848, 851], "00030": 848, "00031": 848, "00032": 848, "00033": 848, "00034": 848, "00035": 848, "00036": 848, "00037": 848, "00038": 848, "00039": 848, "00040": 848, "00041": 848, "00042": 848, "00043": 848, "00044": 848, "00045": 848, "00046": 848, "00047": 848, "00048": 848, "00049": 848, "0005": [425, 427], "0009": 849, "001": [4, 10, 452, 562, 817, 818, 825, 844, 845], "0019e": 820, "002": [14, 817, 834, 851], "002158116134429955": 686, "0028": 436, "003": [14, 555, 817, 823, 834, 866, 869], "004": [14, 817, 834], "0040": 848, "0041": 848, "005": [423, 424, 817, 834], "0054e": 820, "006": [14, 817, 834, 851], "0061": 830, "007": [14, 817, 834], "0073": 848, "00743445923710373": 686, "008": [14, 817, 834], "0085": 830, "00852695": 830, "008790817766266334": 686, "0089": 407, "009": [14, 817, 834], "0090": 820, "0093": 817, "00982": [146, 147, 169, 174, 195], "0099": 437, "01": [142, 143, 189, 339, 380, 423, 424, 425, 427, 630, 666, 714, 820, 823, 830, 832, 834, 835, 836, 839, 849, 853, 856, 861, 866, 867], "010": [14, 817, 834], "011": [14, 817], "0118": 407, "012": [817, 834], "01217200152200748": 686, "0129": 405, "013": 817, "01315": 821, "0134": 455, "014": [14, 817, 834], "01404": 162, "0142": [432, 433, 434, 435, 436, 437, 438, 439, 440], "0145": 435, "0148": 821, "015": [14, 817, 823, 833, 839], "0152": 821, "0154": 831, "0155": 415, "0156": [436, 821], "016": [14, 817], "0163": 661, "0164": 390, "0169": 455, "017": [14, 817, 834], "0177": 817, "018": [817, 834], "0180": [597, 617, 833], "0184": 392, "0185": 821, "019": [14, 817], "0192": 821, "01973": 555, "02": [820, 823, 853], "0200": 655, "0201": 817, "0207": 407, "021": 834, "0210e": 820, "0215": 830, "0217": 661, "0219": 395, "02216": 718, "023": 14, "0235": 435, "0239": 405, "024": 834, "025": [384, 851], "0255": [661, 820], "026": 14, "0268": [398, 404], "0276": 436, "0278": 658, "0280e": 820, "0283": 849, "0285": 817, "0289": 820, "029": 834, "0297": [642, 643], "03": [820, 823, 839], "030": 14, "0305": 831, "03053533": 831, "0309": 831, "0315": [398, 404], "0331": 817, "03348": 443, "0340": 817, "0341": 455, "0349": 831, "035": 834, "0361": [817, 848], "0365": 831, "03671": 840, "0369": 831, "0375": 412, "0376": 435, "03819": 861, "0383": 661, "0386": [686, 848], "038622249776255946": 686, "039": 14, "0390": [398, 404], "0394": 831, "03d": [817, 825], "03f": 827, "04": [14, 391, 392, 393, 814, 820, 830], "040": 173, "0400": 655, "0401": 397, "0406": [411, 656], "0413": 848, "04133991340612775": 686, "0418": 820, "042": 834, "0425": [411, 833], "0428": 436, "0429": 817, "043": 136, "043591": 837, "0442": 821, "0443": 848, "0448": 455, "04486384200747007": 686, "045": 14, "0451": 817, "04573": 427, "0461": 436, "0470": 436, "04758099": 831, "0476": [831, 848], "04789413": 830, "0479": 830, "0483": 435, "0483e": 339, "04878384701995819": 686, "0489": 817, "049629338970987646": 686, "04it": 817, "05": [455, 661, 665, 698, 742, 783, 851, 854], "050": 823, "0510": 661, "0511": 848, "05152": 428, "0523": 411, "0524": 849, "0527": 395, "05287": 134, "0529": 820, "05354099924658973": 686, "0539": [642, 643], "054": [14, 159, 173], "054016385555202384": 686, "0541": [407, 656], "0543": [398, 404], "0544": [128, 129], "055": 834, "0550": 848, "0551e": 830, "0553": 821, "0556": [455, 816], "0564": 830, "0565": 820, "0566": 831, "058": [14, 821], "0580": [411, 432, 433, 434, 435, 436, 437, 438, 439, 440, 830], "0588": 816, "0591": 118, "059172654879085296": 686, "0593": 848, "0596": 405, "05d": [848, 849, 851, 854, 867], "06": [25, 821], "060": 14, "0600": [173, 655], "0608": 439, "0609e": 820, "0630": 424, "0634": 437, "0638": 661, "0640": 830, "0641": 848, "0643": 817, "0649": 830, "0654": 816, "066": 834, "0665": 849, "0682": 820, "0692": 848, "0694": 830, "0698": 830, "0699": [432, 433, 434, 435, 436, 437, 438, 439, 440], "07": [630, 666], "0711e": 339, "072": 834, "0724": [128, 129], "0729": 440, "073": 161, "0730": 820, "0731": 816, "0732": 830, "0735": 833, "074": 14, "0749": 848, "07502571020414439": 686, "0752": 830, "0758": 407, "0762": [398, 404], "0767": 816, "0768": 820, "0769": 816, "077": 14, "07735409": 831, "0774": 831, "07816474278491703": 686, "0783": [398, 404], "0790": 820, "08": [4, 10, 244, 472], "0800": 655, "0804": [642, 643], "0809": 830, "0811": [817, 848], "0812": 656, "0820": 831, "08204893": 831, "0830": 830, "0832": 411, "0833": 9, "0835": 395, "0836": 816, "084": [823, 867, 869], "0845": 436, "08543289788089736": 686, "0857": [411, 642, 643], "086": 14, "0866": 820, "0868": 686, "08680051341900807": 686, "08691420300562658": 686, "08692": 162, "087": 869, "0876": 392, "088": [832, 834], "0880": [642, 643, 848], "0888": [418, 851], "0889": 851, "0890": 851, "0891": 816, "0892": 820, "08983": 861, "09": 821, "0901": 817, "0902": 848, "0904": 851, "0905": 851, "0906": 851, "0907": 851, "0908": 851, "0909": [816, 851], "091": 834, "0910": 851, "0911194482288028": 686, "0912": 851, "0913": 437, "0914": 851, "0915": [423, 851], "0916": 851, "0917": 816, "0918": 851, "0920": 437, "0921": 851, "0925": 851, "0928": 851, "0928555079874982": 686, "093": 834, "0930": 851, "0935": [405, 830, 851], "0937": [423, 830], "0939": 851, "0949": 817, "0952": 820, "0953": 816, "0957": 848, "0990e": 830, "0k": [178, 179], "0x7fec820937b8": [691, 737, 777], "0\ubd80\ud130": [779, 786, 787], "0\uc5d0": 779, "0\uc73c\ub85c": 798, "0\uc740": [778, 779], "0\uc744": 779, "0\uc774": [803, 806], "0\uc774\uace0": 779, "0\uc778": 806, "1": [1, 4, 5, 6, 9, 10, 12, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 139, 140, 142, 143, 146, 147, 148, 158, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 177, 183, 184, 186, 189, 190, 192, 195, 197, 198, 205, 207, 210, 214, 216, 217, 219, 226, 227, 229, 230, 231, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 262, 263, 264, 265, 286, 292, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 310, 314, 315, 316, 317, 318, 322, 324, 325, 326, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 349, 351, 354, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 471, 472, 473, 474, 475, 496, 499, 500, 537, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 630, 631, 632, 633, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 685, 686, 687, 688, 690, 691, 692, 693, 695, 703, 704, 706, 707, 709, 711, 712, 713, 714, 715, 718, 719, 720, 722, 723, 724, 725, 727, 728, 730, 732, 733, 734, 736, 737, 739, 740, 747, 748, 750, 751, 753, 754, 755, 756, 757, 758, 760, 762, 763, 764, 765, 767, 768, 770, 772, 773, 774, 776, 777, 780, 781, 789, 792, 793, 795, 796, 797, 798, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 811, 814, 815, 816, 817, 818, 821, 825, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 841, 844, 845, 848, 849, 850, 856, 859, 861, 866, 867], "10": [4, 5, 6, 9, 10, 14, 20, 26, 130, 134, 135, 137, 142, 145, 146, 147, 149, 155, 159, 161, 163, 166, 168, 169, 171, 173, 174, 180, 182, 185, 187, 188, 192, 193, 195, 210, 214, 216, 219, 220, 245, 292, 297, 299, 300, 301, 302, 307, 308, 309, 310, 314, 318, 332, 335, 336, 337, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 450, 451, 452, 454, 473, 499, 500, 537, 545, 546, 553, 555, 604, 607, 608, 614, 615, 619, 626, 639, 651, 653, 656, 660, 665, 686, 690, 691, 692, 702, 710, 711, 714, 716, 717, 718, 724, 725, 727, 728, 729, 736, 737, 746, 754, 764, 765, 767, 768, 769, 776, 777, 787, 796, 808, 809, 810, 811, 812, 814, 815, 816, 818, 820, 825, 827, 830, 831, 832, 834, 835, 836, 844, 845, 848, 850, 851, 854, 857, 860, 861, 866, 867], "100": [9, 22, 172, 173, 174, 194, 286, 384, 385, 423, 424, 426, 428, 429, 431, 441, 443, 444, 448, 545, 546, 615, 688, 698, 719, 725, 728, 729, 734, 742, 765, 768, 769, 774, 783, 798, 803, 809, 811, 812, 815, 817, 818, 830, 831, 832, 834, 835, 851, 854, 857, 860, 861], "1000": [4, 9, 14, 141, 150, 154, 176, 205, 209, 217, 308, 384, 413, 608, 655, 668, 711, 712, 724, 725, 739, 764, 765, 780, 798, 808, 809, 815, 816, 817, 818, 830, 831, 832, 834, 835, 848, 850, 851, 861], "10000": [14, 132, 133, 144, 147, 170, 171, 174, 183, 195, 830, 831, 836], "100000": 173, "1000000": 239, "1002": 455, "1008": 397, "1008e": 830, "1009": 830, "100k": 173, "100x100": 171, "101": [184, 429, 431, 696, 781, 830, 831, 854, 861], "1014": [128, 129], "10150": 161, "102": [429, 431, 815, 830, 831, 850, 854, 861], "1022": 555, "1024": [168, 186, 210, 213, 214, 215, 216, 220, 682, 710, 713, 714, 716, 717, 718, 727, 754, 755, 757, 759, 767, 796, 797, 800, 802, 810, 827, 844, 845, 867], "103": [815, 830, 831, 834, 854, 861], "103121": 827, "1037097085190507": 686, "1038000": 188, "1039": 658, "104": [830, 831, 832, 836, 854, 861], "1041": [185, 848], "1043998": 779, "1046": 417, "1047": 817, "1048": 816, "105": [830, 831, 834, 854, 861], "1052": 686, "10522806046048205": 686, "10556": [25, 154, 815, 816, 818, 825, 832, 834, 835, 848, 850, 851], "105878": 827, "1059": 825, "106": [830, 831, 837, 854, 861], "1060": [172, 825], "1061": 825, "1062": 830, "1066": 118, "107": [830, 831, 854, 861], "108": [14, 174, 830, 831, 854, 861], "1083": [656, 831], "1086": 686, "10864079337442234": 686, "10888627": 830, "1089": [555, 830], "109": [830, 831, 854, 861], "10903": 766, "1092": 149, "1095": 821, "1099": 418, "10m": 173, "11": [9, 14, 133, 161, 192, 292, 299, 300, 301, 309, 310, 423, 619, 639, 651, 652, 660, 719, 754, 796, 814, 815, 816, 817, 818, 820, 821, 825, 830, 831, 850, 854, 861], "110": [830, 831, 832, 834, 854, 861], "1101": 830, "1107": 409, "111": [830, 831, 854, 861], "1113": 25, "11158102039672668": 686, "112": [830, 831, 834, 854, 861], "11227546": 830, "1123": [405, 830], "1126": 436, "1127": 817, "113": [830, 831, 854, 861], "1134": 848, "1134649": 779, "1135": 389, "1137": 830, "11370067": 830, "1138": 391, "1139": 455, "114": [181, 719, 815, 830, 831, 834, 854, 861], "1140\uc5b5\uac1c\uc758": 803, "1142": 849, "11446843700743892": 686, "1145": [134, 163, 173, 423, 686], "114615892": 25, "115": [830, 831, 834, 854, 861], "1154897249106891": 686, "1155": [405, 686], "1156": [405, 831], "1157": 405, "116": [830, 831, 854, 861], "1160": 830, "1161": 849, "1162": 830, "11640": [137, 171, 180, 182, 188], "1166": 418, "1166240": 827, "1166243": 827, "117": [144, 147, 830, 831, 854, 861], "11701": 192, "11758": 188, "1177": 830, "1178": [25, 168, 825, 827], "1179": 830, "118": [830, 831, 854, 861], "1180": [825, 827], "1181": [825, 827], "1182": [825, 827], "1183": [825, 827], "1184": [825, 827], "119": [136, 830, 831, 854, 861], "1191": 555, "1194614": 779, "1197": 831, "11971027": 831, "11d": 179, "11\ubc88": 796, "11\ubc88\uc5d0\uc11c": 796, "11\uc6d4": 788, "12": [9, 14, 79, 81, 178, 179, 292, 296, 298, 299, 300, 301, 309, 310, 399, 402, 409, 410, 423, 426, 428, 619, 651, 660, 719, 803, 814, 820, 821, 825, 827, 830, 831, 850, 854, 861], "120": [150, 193, 830, 831, 834, 854, 861], "1200": 9, "1203": 694, "1203354": 779, "1209": 389, "121": [175, 820, 830, 831, 851, 854, 861], "1212": 820, "1218": 820, "122": [830, 831, 832, 854, 861], "1224e": 820, "123": [14, 146, 192, 830, 831, 854, 861], "1230": 555, "12345": [866, 867], "12346": 452, "1236": 848, "1237": [817, 831], "123718280": [4, 239], "1239": 820, "124": [25, 825, 827, 830, 831, 854, 861], "1242": 820, "125": [825, 827, 830, 831, 834, 854, 861], "1250": 9, "1253": 830, "12534714": 830, "126": [14, 153, 825, 827, 830, 831, 854, 861], "1261": 415, "1261310": 239, "1262": 437, "127": [452, 830, 831, 840, 854, 861, 866, 867], "128": [5, 165, 380, 384, 421, 428, 443, 711, 825, 830, 831, 854, 861], "1282": 555, "1283": 389, "1286": 830, "12860": 694, "12861": 694, "1289": 555, "129": [830, 831, 848, 851, 854, 861], "12k": 195, "13": [9, 135, 165, 194, 292, 299, 300, 301, 309, 310, 608, 651, 814, 817, 820, 823, 825, 827, 830, 831, 832, 850, 854, 857, 859, 861], "130": [178, 179, 830, 831, 834, 854, 861], "13004484304932734": 836, "130622": 25, "1309": 417, "131": [830, 831, 854, 861], "1311": 423, "1316": 831, "132": [161, 830, 831, 854, 861], "1323": [642, 643], "1328": [118, 833], "133": [14, 830, 831, 854, 861], "1330": 424, "134": [830, 831, 854, 861], "1342": 411, "1346": 848, "1348": 820, "1349": 435, "135": [14, 830, 831, 834, 854, 861], "1353": 656, "136": [25, 145, 830, 831, 854, 861], "1361": [435, 658], "1364": 686, "1364240150959487": 686, "137": [825, 827, 830, 831, 854, 861], "1371": 407, "1373e": [630, 666], "13752": 25, "1376": [411, 830], "1377": 409, "13774964202156292": 686, "138": [825, 827, 830, 831, 854, 861], "1380": 830, "1380331": 830, "1388": 411, "139": [825, 827, 830, 831, 854, 861], "1393": 686, "1393107840629273": 686, "1395": 407, "14": [14, 158, 177, 292, 298, 299, 300, 301, 309, 310, 652, 688, 734, 774, 820, 825, 827, 830, 831, 850, 854, 861], "140": [132, 154, 815, 816, 818, 825, 827, 830, 831, 832, 834, 835, 848, 850, 851, 854, 861], "1405": 830, "1408": 407, "141": [825, 827, 830, 831, 854, 861], "1411": 831, "1414": 830, "141442": 191, "142": [830, 831, 854, 861], "1428": 817, "1428571492433548": 120, "1429": 816, "143": [830, 831, 854, 861], "1431": 25, "1432": 836, "1433": [154, 815, 816, 818, 832, 834, 835, 848, 850, 851], "144": [830, 831, 854, 861], "1440": 417, "145": [25, 830, 831, 832, 834, 854, 861], "1454": 830, "14541": 157, "1458": [642, 643], "1459": 831, "146": [830, 831, 854, 861], "14627522432017592": 686, "1465": 848, "147": [163, 815, 830, 831, 854, 861], "1477e": 820, "1479": [398, 404], "148": [14, 830, 831, 836, 854, 861], "1480": 820, "1481": 820, "148100": 170, "149": [825, 827, 830, 831, 854, 861], "1496": 423, "15": [9, 14, 25, 151, 164, 177, 210, 214, 216, 219, 220, 292, 299, 300, 301, 302, 307, 309, 310, 399, 402, 499, 648, 651, 661, 699, 710, 719, 803, 815, 820, 821, 825, 827, 830, 831, 832, 834, 835, 837, 840, 850, 854, 861], "150": [825, 827, 830, 831, 834, 854, 860, 861], "1500": 661, "1502": [820, 830], "1505": 555, "151": [825, 827, 830, 831, 854, 861], "1513": 820, "1516": 411, "1517": 820, "152": [823, 830, 831, 849, 853, 854, 861], "1520": [134, 642, 643], "15218126307872892": 686, "153": [181, 830, 831, 854, 861], "1531": 820, "1533": 555, "1538": 830, "15381017": 830, "154": [820, 830, 831, 854, 861], "1540": 830, "1543": 830, "155": [830, 831, 834, 854, 861], "1557019": 134, "1557108": 134, "1559": 409, "156": [25, 167, 830, 831, 837, 854, 861], "1560": 605, "1561": 830, "15694736": 779, "157": [159, 830, 831, 854, 861], "158": [14, 815, 830, 831, 854, 861], "1588": 820, "159": [830, 831, 854, 861], "1593": 848, "1594": [398, 404], "15k": [178, 179], "15\u884c\u547d\u540d\u4e3a": 743, "15\uc5d0\uc11c": 784, "16": [165, 168, 172, 183, 186, 195, 299, 300, 301, 339, 440, 441, 442, 443, 444, 445, 446, 455, 547, 662, 695, 699, 719, 739, 780, 803, 814, 815, 817, 818, 820, 821, 825, 827, 830, 831, 832, 833, 834, 835, 836, 840, 844, 848, 849, 850, 854, 857, 861], "160": [830, 831, 834, 854, 861], "1600": 831, "1601": 831, "16011982": 831, "1603": 861, "1607": 411, "161": [14, 830, 831, 854, 861], "1612": 854, "162": [830, 831, 854, 861], "163": [136, 151, 830, 831, 854, 861], "1639": 555, "164": [816, 830, 831, 834, 854, 861], "1646": 409, "165": [820, 830, 831, 834, 854, 861], "1657": 820, "1658": 555, "166": [830, 831, 854, 861], "1664": 185, "1667": [9, 830], "167": [14, 830, 831, 854, 861], "16738734": 779, "1675": 830, "1678": 437, "168": [830, 831, 844, 854, 861], "1681403185591509": 686, "1682": 173, "16846068931179736": 686, "1689": 830, "169": [830, 831, 854, 861], "1690": 393, "1692": 831, "169343": 827, "1695": 817, "1696": 424, "16974127573016262": 686, "1698": 830, "16gb": [14, 719, 803], "16\uc904": 784, "17": [14, 25, 182, 299, 300, 301, 339, 652, 820, 825, 827, 830, 831, 850, 854, 861], "170": [14, 827, 830, 831, 834, 854, 861], "1706": 718, "1707": 849, "171": [830, 831, 854, 861], "1710": 766, "172": [694, 695, 739, 780, 830, 831, 854, 861], "1726": 830, "173": [14, 830, 831, 854, 861], "1732": 848, "1735": [423, 605], "17362119257450104": 835, "174": [827, 830, 831, 832, 854, 861], "1745": 555, "175": [695, 739, 780, 827, 830, 831, 834, 854, 861], "1752": [642, 643], "17535": 157, "17583413999295983": 686, "176": [827, 830, 831, 854, 861], "1766": 848, "1769e": 830, "177": [827, 830, 831, 854, 861], "178": [825, 827, 830, 831, 854, 861], "1780": 439, "1785": 424, "1786": 849, "1789": 436, "179": [14, 825, 827, 830, 831, 854, 861], "1790": 830, "18": [9, 14, 151, 182, 191, 300, 301, 499, 619, 651, 699, 820, 830, 831, 836, 850, 854, 861], "180": [825, 827, 830, 831, 834, 854, 861], "1804": 407, "1806": 555, "1807": 861, "1809": 390, "181": [830, 831, 836, 854, 861], "1812": 820, "1818": [555, 608], "182": [14, 825, 827, 830, 831, 854, 861], "183": [155, 187, 825, 827, 830, 831, 854, 861], "18333": 25, "1835": 411, "1837": 820, "18389137408509248": 686, "1839": 686, "184": [455, 830, 831, 854, 861], "1843": 686, "18431292077750894": 686, "1847": 423, "1849": 403, "185": [830, 831, 834, 854, 861], "1850": 405, "186": [823, 830, 831, 835, 839, 854, 861], "186100": 137, "18626464175355095": 686, "187": [694, 830, 831, 854, 861], "1871": 849, "1877": 455, "188": [25, 165, 174, 186, 830, 831, 854, 861], "1883": 848, "1884": 830, "189": [825, 830, 831, 854, 861], "1897e": 820, "1898": 833, "18th": 182, "18\uc904\uc744": 784, "19": [138, 153, 179, 300, 301, 309, 310, 651, 694, 695, 739, 780, 820, 825, 827, 830, 831, 850, 854, 861], "190": [147, 825, 830, 831, 834, 854, 861], "1902": 436, "1908": 405, "1909": 821, "191": [825, 830, 831, 854, 861], "19117861103555467": 686, "192": [825, 830, 831, 834, 844, 854, 861], "1925": 401, "192640": 25, "193": [455, 825, 830, 831, 854, 861], "193011360": 694, "1931": [642, 643], "1932390907048961": 686, "1934": 830, "1937": 831, "1939": [424, 830], "1939743": 779, "194": [825, 830, 831, 854, 861], "1943": [409, 830], "19432473": 830, "19438444077968597": 835, "1944": 849, "195": [825, 830, 831, 834, 854, 861], "1951": 555, "1952": 393, "19536": [184, 854], "1954": 658, "196": [455, 830, 831, 854, 861], "1965": 854, "1966": 424, "197": [830, 831, 854, 861], "19717": [25, 176], "1974": 830, "1975": 820, "19793": 25, "198": [133, 820, 830, 831, 854, 861], "19895271": 830, "199": [823, 830, 831, 837, 839, 854, 861], "1990": [830, 831], "1994": 854, "1996": 437, "1997": 833, "19982": 830, "19989": 830, "19999998807907104": 342, "1_gcn": [823, 848, 853], "1_gnn": [823, 850, 853], "1_graph_classif": [823, 866, 869], "1_introduct": [823, 832, 839], "1_node_classif": [823, 844, 847], "1d": [48, 51, 53, 54, 61, 88, 122, 131, 214, 216, 219, 231, 238, 239, 286, 296, 302, 307, 322, 326, 331, 385, 392, 399, 404, 414, 417, 475, 538, 625], "1e": [4, 10, 244, 423, 427, 428, 472, 718, 719, 803, 815, 848, 850, 851, 854, 861], "1gb": [712, 798], "1m": 173, "1\u5b57\u7b26\u4e32": 732, "1\u8282": 740, "1\u8282\u4e2d": 756, "1\u8282\u4e2d\u5bf9\u5f02\u6784\u56fe\u7684\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": [765, 768], "1\u8282\u4e2d\u5bf9\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": 765, "1\u8282\u7684gnn\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a": [765, 768], "1\uc5d0": 779, "1\uc740": 779, "1\uc744": 779, "1\uc7a5": 788, "1\uc808\uc758": 781, "1\ucc28\uc6d0": 786, "2": [4, 5, 6, 9, 10, 12, 14, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 146, 147, 159, 161, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 183, 184, 186, 188, 189, 190, 197, 205, 207, 216, 220, 226, 227, 229, 230, 239, 242, 243, 244, 245, 246, 247, 248, 249, 286, 292, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 310, 314, 315, 316, 317, 318, 324, 326, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 349, 354, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 454, 455, 471, 472, 473, 474, 475, 496, 499, 537, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 630, 631, 632, 633, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 683, 686, 690, 691, 693, 696, 698, 699, 700, 702, 703, 709, 710, 712, 714, 715, 716, 717, 719, 720, 724, 727, 729, 730, 736, 738, 739, 740, 742, 743, 744, 746, 747, 748, 753, 754, 756, 757, 758, 759, 760, 764, 767, 768, 769, 770, 776, 779, 780, 781, 783, 784, 785, 787, 789, 795, 796, 798, 799, 800, 801, 802, 803, 804, 808, 810, 812, 813, 814, 815, 816, 817, 818, 821, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 841, 843, 844, 845, 847, 848, 849, 850, 861, 863, 866, 867, 869], "20": [9, 25, 130, 161, 162, 171, 172, 174, 175, 181, 192, 209, 234, 299, 300, 301, 309, 310, 318, 399, 402, 408, 410, 413, 415, 425, 426, 427, 428, 436, 437, 547, 604, 614, 615, 619, 626, 645, 651, 652, 662, 664, 665, 692, 694, 725, 727, 728, 729, 765, 767, 768, 769, 809, 810, 811, 812, 814, 815, 817, 820, 823, 830, 831, 832, 834, 835, 836, 839, 850, 851, 854, 857, 860, 861], "200": [200, 555, 692, 778, 816, 821, 830, 831, 834, 854, 861], "2000": [4, 9, 126, 249, 668, 817, 830], "20000": 830, "2002": [118, 134, 167, 405], "2003": [146, 147, 169, 174, 195], "2005": 161, "2007": 820, "2008": 162, "200\uac1c": 778, "201": [830, 831, 854, 861], "2010": 435, "2011": 427, "2014": 181, "2015": [135, 136, 405, 814, 854], "2016": [151, 152], "2017": [815, 817, 825, 827, 830, 831, 834], "2018": [164, 166, 555, 686, 834], "20181320245665535": 686, "2019": 814, "202": [830, 831, 834, 854, 861], "2020": [817, 825, 827, 830, 831], "2020\u5e749\u6708": 747, "2021\ub144": 788, "2022": [825, 827, 830, 831], "2023": [214, 296, 302, 560], "2024": [825, 827, 830, 831], "203": [830, 831, 854, 861], "204": [830, 831, 854, 861], "20466": 157, "2048": 444, "2049": 848, "205": [694, 695, 739, 780, 830, 831, 854, 861], "2053": [432, 433, 434, 435, 436, 437, 438, 439, 440], "2055": 833, "206": [830, 831, 837, 854, 861], "2062": 455, "207": [455, 830, 831, 854, 861], "208": [455, 830, 831, 854, 861], "2080": 439, "2085": 401, "209": [173, 455, 830, 831, 854, 861], "2095": 405, "2099": 830, "20gb": 234, "20x10": 860, "21": [14, 162, 300, 301, 309, 310, 619, 694, 820, 821, 825, 827, 830, 831, 850, 854, 861], "210": [184, 830, 831, 854, 861], "2101": 401, "2102": [406, 428], "2104": 162, "2106": 411, "2108": 443, "211": [177, 830, 831, 832, 854, 861], "2110": 555, "212": [830, 831, 854, 861], "21209": 25, "2125": 411, "213": [455, 830, 831, 854, 861], "2134": 407, "2136": 436, "21394654203489705": 686, "214": [830, 831, 854, 861], "2142": 833, "2147": 833, "21474836480": 234, "2148": 831, "215": [830, 831, 836, 854, 861], "2154": 423, "21556918323040009": 835, "2159": 396, "216": [161, 192, 815, 830, 831, 854, 861], "2167": 424, "217": [830, 831, 854, 861], "217073": 185, "2178": 412, "218": [830, 831, 836, 854, 861], "2182": 405, "219": [830, 831, 854, 861], "21937428942781778": 686, "2194": 440, "21st": 854, "22": [14, 25, 300, 301, 820, 830, 831, 836, 854, 861], "220": [455, 830, 831, 854, 861], "2208": 803, "2209": [803, 833], "221": [825, 827, 830, 831, 854, 861], "22131880861864428": 686, "22155005": 779, "2215e": 830, "2216": 424, "222": [823, 825, 827, 830, 831, 850, 853, 854, 861], "2222": 9, "22296293": 694, "223": [825, 827, 830, 831, 854, 861], "2233": 848, "2235": 423, "2236": 833, "22368988": 831, "2237": 831, "224": [825, 827, 830, 831, 854, 861], "2240": 389, "2245": 25, "225": [455, 825, 827, 830, 831, 854, 861], "226": [830, 831, 854], "22662": 182, "227": [830, 831, 854], "2272": 411, "2276e": 820, "2277": 149, "228": [14, 830, 831, 854], "2282": [439, 830], "2284": 455, "2288": 831, "2289": 389, "229": [830, 831, 854], "2291": [435, 436, 830], "22912713": 830, "23": [181, 195, 300, 301, 391, 392, 393, 694, 695, 698, 739, 742, 780, 783, 820, 830, 831, 854, 861], "230": [555, 830, 831, 854], "2302": [137, 171, 180, 182, 188], "2303": 411, "23033": [25, 166], "2304": 25, "2309": 849, "231": [830, 831, 854], "23142237259162102": 686, "232": [163, 181, 830, 831, 854], "2324": 435, "2326": 409, "232965": 25, "233": [830, 831, 854], "2330": 455, "2335": 830, "23368113896545695": 686, "2337": 686, "2338": 389, "234": [455, 830, 831, 854], "2340": 391, "2342": 401, "2347": 401, "2348": 424, "235": [830, 831, 854], "2351": [432, 433, 434, 435, 436, 437, 438, 439, 440], "2358": 820, "236": [830, 831, 854], "2360": 440, "2362": 423, "2363": 437, "23682038840665198": 686, "237": [157, 830, 831, 854], "2370": 390, "237062007188797": 835, "2372": [175, 851], "2373": 555, "2378": 820, "238": [136, 830, 831, 854], "2384": 403, "2387": 407, "239": [455, 830, 831, 854], "24": [166, 175, 300, 431, 619, 645, 820, 830, 831, 851, 854, 861], "240": [25, 166, 455, 830, 831, 854], "2402": 840, "2407": 830, "2408": 555, "241": [830, 831, 854], "2411e": 820, "24157202": 830, "2416": 830, "2417": 433, "242": [830, 831, 854], "2422": 830, "24222209": 830, "2426": [432, 433, 434, 435, 436, 437, 438, 439, 440], "24285506608575758": 686, "243": [830, 831, 854], "2432": 134, "2438": 848, "244": [25, 817, 830, 831, 854], "2440": 830, "2449029": [4, 239], "24492": 137, "245": [135, 177, 830, 831, 854], "2450": 424, "2451": 406, "246": [830, 831, 854], "2462": 830, "2467": 455, "2469": 411, "247": [152, 830, 831, 854], "2472495901894738": 686, "2473": 412, "248": [825, 827, 830, 831, 854], "2481": 396, "2486": 817, "249": [825, 827, 830, 831, 854], "2492": 831, "2496": 185, "2497": [423, 833], "25": [9, 147, 161, 300, 399, 402, 430, 431, 455, 544, 690, 691, 736, 737, 776, 777, 815, 817, 820, 823, 830, 831, 832, 834, 835, 844, 845, 849, 850, 853, 854, 861], "250": [160, 455, 817, 825, 827, 830, 831, 854], "2500": [9, 608, 820], "2502": [418, 831], "2502009": 831, "250k": 195, "251": [193, 825, 827, 830, 831, 854], "2513": 424, "25177597999572754": 244, "252": [825, 827, 830, 831, 854], "2524": 411, "253": [825, 827, 830, 831, 854], "2530": 658, "2533": 423, "253458867276219": 686, "254": [830, 831, 854], "2541": 555, "2543": 820, "255": [830, 831, 844, 854], "2556": 455, "256": [718, 719, 803, 816, 817, 825, 830, 831, 844, 845, 854, 867], "2564": 849, "2567e": 820, "257": [14, 830, 831, 854], "2573e": 830, "258": [830, 831, 832, 854], "25851261615753174": 835, "259": [830, 831, 854], "2597": 424, "26": [165, 820, 825, 827, 830, 831, 854, 861], "260": [830, 831, 854], "2607": 424, "261": [830, 831, 832, 854], "2611": 424, "262": [159, 825, 827, 830, 831, 854], "2622": 423, "263": [825, 827, 830, 831, 854], "2633": 831, "2638": 423, "264": [830, 831, 854], "2643": 423, "2644": [411, 424], "2649": 423, "26499036865016423": 686, "265": [830, 831, 854], "2650": 686, "2650e": 830, "2652": 432, "2654": [409, 435, 455], "2658": 424, "2659": 455, "266": [830, 831, 854], "2663": 424, "2665": 848, "2669": 403, "267": [455, 830, 831, 854], "2674e": 830, "2675": 423, "2677": 848, "268": [830, 831, 854], "2684": 424, "2687": 555, "2688": [398, 404], "2689": [597, 617, 820], "269": [830, 831, 854], "2695": [642, 643], "27": [25, 626, 820, 830, 831, 839, 854, 861], "270": [830, 831, 854], "2703": 435, "2704": 830, "27040743": 830, "2708": [25, 154, 815, 816, 818, 825, 832, 834, 835, 848, 850, 851], "2709": [432, 433, 434, 435, 436, 437, 438, 439, 440], "271": [455, 830, 831, 854], "2711e": 820, "2716": 424, "27163": 170, "2719": 415, "272": [170, 830, 831, 854], "2721": [128, 129], "272115": 157, "273": [830, 831], "2730008213674695": 686, "2733": [423, 830], "27330925": 830, "2736": 830, "2738": [423, 424], "274": [830, 831], "2743": 433, "275": [830, 831], "2757": 411, "276": [830, 831], "2766": [642, 643], "277": [163, 830, 831], "2775": 118, "278": [830, 831, 850], "2780": [424, 820], "2783258": 163, "2783370": 163, "2787": 455, "2789": 455, "279": [830, 831], "2794": 423, "2796588354307046": 686, "2797": 412, "2798": 830, "28": [9, 169, 195, 422, 820, 821, 830, 831, 835, 854, 861], "280": [830, 831], "2801026999950409": 835, "281": [830, 831], "282": [830, 831], "282119": 837, "2823": [424, 555], "2826": 658, "2828": [430, 544], "283": [815, 830, 831], "28357022069634585": 686, "2836": 831, "28367647637469273": 686, "284": [25, 830, 831], "2845": 830, "28451354": 830, "285": [830, 831], "2852": 401, "2855": 407, "2858e": 830, "286": [830, 831], "2860": 820, "2863": 820, "2863627767733977": 686, "2864": 686, "2866": 849, "287": [830, 831], "287326": 25, "2876": 424, "288": [164, 815, 830, 831], "2882": 455, "289": [827, 830, 831], "2894": 830, "29": [144, 195, 619, 694, 695, 739, 780, 820, 821, 830, 831, 853, 854, 861], "290": [827, 830, 831], "2900": 820, "29000": 861, "29028626": 830, "2903": 830, "2908": 424, "291": [823, 830, 831, 860, 863], "2911": 848, "2918": 555, "292": [830, 831, 836], "2921": 820, "2927": 455, "293": [830, 831], "294": [830, 831], "295": [830, 831, 834], "29501": 840, "296": [817, 830, 831], "2962": 423, "2963": 820, "29660083": 779, "297": [830, 831], "2976": 424, "298": [155, 178, 179, 830, 831], "2983": 830, "29834275": 830, "2987": 854, "299": [830, 831], "2994": [412, 436], "2_capsul": [823, 860, 863], "2_dglgraph": [823, 833, 839], "2_link_predict": [823, 845, 847], "2_node_classif": [823, 867, 869], "2_small_graph": [823, 856], "2a240410": [825, 827, 830, 831], "2d": [296, 338, 385, 392, 414, 417, 448, 566], "2gb": [719, 803], "2k": 630, "2motif": 141, "2x3": 31, "2xlarg": 14, "2\uac1c\uc758": 779, "2\ub97c": 790, "2\ubc88\uc9f8": 796, "2\uc7a5": [788, 808, 812], "3": [4, 5, 6, 9, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 142, 143, 161, 169, 172, 173, 174, 176, 178, 179, 183, 190, 197, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 239, 242, 243, 244, 245, 246, 247, 248, 249, 286, 290, 291, 292, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 314, 315, 316, 318, 324, 326, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 349, 354, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 471, 472, 473, 474, 496, 499, 500, 537, 544, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 566, 567, 568, 571, 572, 574, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 630, 632, 633, 637, 638, 639, 640, 642, 643, 644, 648, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 664, 666, 667, 668, 674, 675, 676, 677, 678, 683, 686, 690, 693, 696, 698, 700, 701, 702, 703, 704, 709, 711, 712, 715, 718, 719, 724, 727, 729, 730, 736, 737, 740, 742, 744, 745, 746, 747, 748, 753, 754, 760, 764, 767, 769, 770, 776, 777, 779, 781, 783, 785, 786, 787, 789, 795, 796, 803, 804, 808, 810, 812, 814, 816, 818, 820, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 841, 848, 849, 850, 861], "30": [25, 166, 181, 299, 399, 402, 410, 422, 450, 451, 455, 604, 614, 615, 619, 626, 719, 803, 815, 820, 830, 831, 832, 834, 835, 851, 854, 861], "300": [137, 142, 143, 159, 182, 192, 194, 830, 831], "3000": [4, 126, 249, 555, 655, 724, 764, 808, 861], "3003": 861, "30050": [695, 739, 780, 844, 845], "3008": 831, "301": [180, 830, 831], "302": [830, 831], "3020": 432, "3020976483821869": 835, "3025": [398, 404], "3027939452162367": 686, "3028": 686, "303": [830, 831], "3030": [642, 643], "30351": 827, "3039": 423, "304": [164, 830, 831], "305": [161, 830, 831], "3052": 831, "3053": 396, "306": [830, 831], "3063": 411, "3068": 817, "307": [830, 831], "307080": 180, "3078": 435, "308": [159, 830, 831], "3080": 412, "3082": 817, "3083": 831, "309": [830, 831], "30k": 861, "30x": 840, "31": [118, 119, 164, 166, 694, 695, 701, 739, 745, 780, 786, 821, 830, 831, 854, 861], "310": [159, 830, 831], "3105": 436, "311": [153, 830, 831], "3113": 831, "312": [830, 831], "3126": 455, "313": [830, 831], "3131": 830, "31328748118329997": 686, "3134": [432, 433, 434, 435, 436, 437, 438, 439, 440], "3135": 424, "3139": 854, "314": [159, 830, 831], "3147": 833, "3148": [686, 849], "3148264185956532": 686, "315": [830, 831], "316": [830, 831, 834], "3161154827254189": 686, "3163": 418, "3168": [642, 643], "317": [14, 830, 831], "3170": 848, "3171": 830, "3174": [642, 643], "3176": 820, "318": [830, 831], "3189": 436, "319": [830, 831, 832], "3191": 406, "32": [25, 146, 163, 172, 207, 334, 385, 413, 443, 455, 687, 701, 733, 745, 773, 786, 814, 821, 825, 827, 830, 831, 854, 861, 866], "320": [830, 831], "3203": 437, "3207": 830, "32070028": 830, "321": [830, 831], "3219496197945605": 686, "322": [830, 831], "32269246": 830, "3227": 830, "323": [830, 831], "3231": 436, "3235": 440, "3238171339035034": 835, "324": [830, 831], "3241": [820, 830], "3246e": [630, 666], "325": [187, 830, 831], "326": [830, 831], "3267": 830, "327": [830, 831], "327576": 25, "328": [830, 831], "329": [830, 831], "3291": 830, "3292e": 830, "3295": 392, "32x": 840, "33": [604, 619, 820, 830, 831, 836, 851, 854, 861], "330": [165, 830, 831], "3303": 417, "3304": 420, "331": [830, 831], "3316": 419, "332": [830, 831], "3320": 849, "33234211884156384": 686, "3326": 412, "3327": [25, 150], "333": [151, 815, 830, 831], "3330": [432, 433, 434, 435, 436, 437, 438, 439, 440], "3333": [9, 354, 569, 570, 595, 654], "33391": 134, "334": [830, 831, 834], "3342": 411, "3346": [642, 643], "3349": 831, "335": [830, 831], "3355": 830, "33578572": 830, "3358": 830, "336": [830, 831], "3364": 411, "337": [830, 831, 834], "3371": 407, "338": [830, 831], "3381872773170471": 472, "339": [830, 831], "3391": 803, "33929432608774135": 686, "3394": 803, "3396": 831, "3396e": 820, "34": [25, 152, 166, 167, 825, 827, 830, 831, 837, 854, 861], "340": [830, 831], "3400": 605, "34095091": 831, "341": [830, 831], "3410": 831, "3419": 817, "342": [830, 831], "34270118": [693, 694], "343": [830, 831], "3439899477636117": 686, "3439e": 820, "344": [815, 830, 831], "3444": 831, "3447": 411, "3448": 848, "34493": 25, "345": [14, 158, 830, 831], "3455": [642, 643], "3458": 830, "346": [830, 831], "3461253345012665": 835, "3462": 409, "3466": 401, "3468": 455, "347": [830, 831], "348": [830, 831], "3484": 831, "34846782265758314": 686, "3489": 658, "349": [830, 831], "3497": 412, "3498e": 820, "35": [145, 147, 174, 815, 830, 831, 832, 834, 835, 854, 861], "350": [142, 830, 831], "3504": [848, 851], "35076354": 779, "351": [161, 830, 831], "3514": 403, "3516": 395, "352": [830, 831], "3523777809254057": 686, "353": [815, 830, 831], "354": [830, 831], "3541": 412, "3549e": 830, "355": [830, 831], "356": [172, 830, 831], "3569": 407, "357": [830, 831], "35711": 827, "3575": 820, "3577": 849, "358": [830, 831], "3582": 831, "3585": 831, "359": [14, 823, 830, 831, 836, 839], "36": [132, 830, 831, 854, 861], "360": [830, 831], "3600": 830, "3607": 831, "361": [830, 831], "36101": 149, "3612": 820, "3615": 830, "362": [830, 831], "3622": 830, "36222602": 830, "3623": 406, "363": [830, 831], "3632": [830, 848], "3637": [432, 433, 434, 435, 436, 437, 438, 439, 440], "364": [830, 831], "3642": 831, "3643": 455, "3648": [134, 849], "365": [830, 831], "3658": 403, "3659": 830, "366": [823, 830, 831, 848, 853], "3664": 390, "36649684241348557": 686, "3665": [440, 686], "367": [830, 831], "3672": 118, "36786902637778773": 686, "368": [830, 831], "3681861460208893": 835, "3685": 396, "369": [830, 831], "3690": 848, "37": [155, 187, 195, 825, 827, 830, 831, 854, 861], "370": [830, 831], "3700": 405, "370293": 837, "3703": 150, "371": [830, 831], "37135841": 830, "3714": 830, "3717": 412, "372": [830, 831], "3727": 831, "373": [14, 830, 831], "3736": 455, "3737": 437, "374": [830, 831], "3745": 820, "375": [830, 831], "3758": [392, 848], "376": [830, 831], "3760": 830, "377": [830, 831], "3770": 605, "3772": 455, "3774": 820, "378": [830, 831], "3781": 411, "379": [14, 830, 831, 854], "3796": 219, "38": [825, 827, 830, 831, 854, 861], "380": [830, 831], "3803": 406, "3805": [398, 404], "3808": [642, 643], "3809": 411, "381": [825, 827, 830, 831], "382": [825, 827, 830, 831], "3820": [436, 850], "3825": [398, 404], "383": [825, 827, 830, 831], "384": [164, 830, 831], "3840": 118, "3847": 411, "385": [830, 831], "386": [830, 831], "3863": 849, "3864": 850, "3866": 418, "3867": 830, "387": [830, 831], "3872": [642, 643], "3874": 830, "3877": 850, "388": [815, 830, 831], "3884e": 830, "3886": 831, "3889": 831, "38894836": 831, "389": [815, 830, 831], "38906409": 830, "3891": [432, 433, 434, 435, 436, 437, 438, 439, 440, 830], "3893": 411, "39": [25, 163, 195, 455, 619, 825, 827, 830, 831, 854, 861], "390": [830, 831], "3900": 830, "3907462954521179": 835, "391": [830, 831], "39161865931662243": 686, "392": [830, 831], "393": [821, 830, 831], "3934": [642, 643], "3935": 850, "3938": 658, "394": [830, 831], "3943": [398, 404], "395": [830, 831], "3950": 850, "39534097273254654": 686, "3959": 850, "396": [830, 831], "397": [830, 831, 832], "3970": 820, "398": [821, 830, 831], "3980e": 830, "3985": 455, "399": [821, 830, 831], "3992": 830, "3996": 417, "3_generative_model": [823, 859], "3_message_pass": [823, 834, 839], "3_tree": [823, 854, 856], "3d": [179, 338, 429, 431, 441, 443, 444, 448, 566], "3e": 816, "3f": [815, 816, 818, 825, 832, 834], "3x3": 820, "3\uac00\uc9c0": [774, 776, 800], "3\uac1c\uc758": [790, 799], "3\ub2e8\uacc4\ub85c": 806, "3\uc7a5": [788, 801, 808, 812], "4": [4, 5, 9, 12, 14, 20, 21, 22, 26, 27, 30, 34, 35, 36, 37, 46, 47, 51, 55, 56, 58, 60, 61, 73, 74, 75, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 107, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 132, 142, 143, 148, 172, 173, 195, 209, 210, 213, 214, 215, 216, 217, 219, 220, 229, 230, 239, 242, 243, 244, 245, 249, 286, 290, 292, 296, 297, 298, 299, 300, 301, 302, 307, 314, 315, 316, 318, 324, 326, 331, 332, 334, 335, 336, 337, 338, 340, 341, 342, 348, 354, 381, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 445, 446, 447, 448, 449, 450, 451, 453, 455, 471, 472, 473, 500, 537, 544, 552, 553, 554, 557, 559, 560, 561, 564, 566, 571, 572, 574, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 607, 608, 609, 610, 611, 614, 615, 616, 617, 619, 623, 626, 627, 630, 637, 639, 640, 642, 643, 644, 653, 655, 656, 658, 660, 661, 664, 666, 667, 678, 690, 691, 694, 695, 696, 699, 700, 701, 702, 703, 709, 711, 712, 716, 718, 719, 724, 729, 730, 737, 738, 739, 740, 743, 744, 745, 746, 747, 753, 755, 757, 759, 764, 769, 770, 776, 777, 779, 781, 784, 785, 786, 787, 789, 795, 797, 800, 802, 803, 808, 812, 815, 816, 817, 818, 820, 825, 827, 830, 831, 832, 833, 835, 837, 841, 844, 845, 850, 853, 854, 860, 861], "40": [138, 147, 159, 299, 335, 380, 455, 614, 619, 815, 825, 827, 830, 831, 832, 834, 835, 850, 854, 861], "400": [615, 692, 778, 830, 831, 857, 861], "4000": [173, 817, 820], "4000000": 210, "4007": [455, 820], "4008": 831, "400\uac1c\uc758": 778, "401": [830, 831], "4013": 830, "4014": 830, "402": [830, 831], "4022": 405, "4028": 803, "403": [830, 831], "4037": 831, "404": [830, 831], "4042": 436, "405": [830, 831], "40559906615287566": 686, "406": [555, 815, 830, 831], "4063": 411, "407": [830, 831], "40707309111756307": 686, "4072e": 830, "408": [830, 831], "4081642382536248": 686, "4083": 830, "409": [830, 831], "40943": 191, "4096": 411, "41": [159, 191, 821, 825, 827, 830, 831, 854, 861], "410": [168, 186, 815, 830, 831], "4102c744bb9d6fd7b40ac67a300e49cd87e28392": [688, 734, 774], "4103": 831, "4104": 147, "411": [830, 831], "4111": [432, 433, 434, 435, 436, 437, 438, 439, 440], "41127": 138, "4113": 848, "412": [830, 831], "4126": 411, "413": [830, 831], "41374921798706055": 835, "414": [830, 831], "4141": 830, "415": [152, 830, 831], "4151": 850, "41516080644186737": 686, "41527155506593394": 686, "4155": 850, "416": [830, 831], "4167": 9, "417": [830, 831], "418": [830, 831], "4184": 830, "419": [14, 830, 831], "4190e": 830, "4197": 830, "4197669213305396": 686, "4199e": 830, "42": [25, 198, 817, 825, 827, 830, 831, 854, 861], "420": [830, 831], "4202": 820, "4205": 830, "4205e": 820, "421": [830, 831], "4216530595907526": 686, "4217": 830, "422": [830, 831], "4220": 455, "4221": 412, "42222014": 779, "4225": 830, "423": [830, 831], "424": [830, 831], "4249": [432, 433, 434, 435, 436, 437, 438, 439, 440], "425": [830, 831], "426": [830, 831], "4265": 830, "4268": 686, "4268254673041745": 686, "427": [830, 831], "4273": 405, "4279": [411, 850], "428": [830, 831, 832], "4288": 830, "42881537": 830, "429": [830, 831], "4293": 817, "4296": 850, "42988138237505735": 686, "4299": 686, "43": [698, 742, 783, 825, 827, 830, 831, 836, 854, 861], "430": [830, 831], "431": [181, 192, 830, 831], "4318": [642, 643], "432": [14, 830, 831], "4323": 417, "4325": [128, 129], "433": [830, 831], "4331": 392, "4335": 392, "4337": 830, "4338": 439, "434": [830, 831], "4347": 830, "4349": [432, 433, 434, 435, 436, 437, 438, 439, 440, 831], "435": [830, 831], "4352441728115082": 835, "436": [830, 831], "4361": 833, "437": [830, 831], "4376": 854, "438": [830, 831], "4381": 831, "4387": 850, "4388": 831, "439": [830, 831], "44": [174, 820, 821, 830, 831, 854, 861], "440": [830, 831], "4400": 173, "441": [830, 831, 854], "4415": 833, "442": [830, 831], "443": [830, 831], "444": [830, 831], "4441": 850, "44412796119211184": 686, "4444": 830, "445": [14, 830, 831], "4451": [642, 643], "4457": 817, "4458": 411, "446": [830, 831, 854], "4465": 407, "447": [830, 831], "4470617033458436": 686, "4471": 830, "448": [830, 831], "4482": 412, "4484e": 820, "449": [830, 831], "4496": 830, "44961974": 830, "4497": 437, "45": [163, 455, 815, 825, 830, 831, 832, 834, 835, 837, 840, 854, 861], "450": [815, 830, 831], "4500966": 861, "4502": 830, "4508": 658, "451": [830, 831], "4511": 439, "4513": 830, "4514": 848, "452": [830, 831], "4523600060547709": 686, "4526": 850, "453": [830, 831], "454": [830, 831], "4542": [411, 455], "45441619816038514": 686, "455": [830, 831], "456": [149, 830, 831], "4561e": 820, "457": [14, 830, 831], "4570": [398, 404, 803], "4572": 817, "45736753": 830, "4574": 830, "4577": 830, "45774946": 830, "458": [830, 831], "459": [830, 831], "4590": 455, "45906511": 831, "4591": 831, "4598": 830, "46": [423, 821, 825, 830, 831, 836, 854, 861], "460": [830, 831], "4600": 173, "4609": 803, "461": [830, 831], "4610": 850, "4615": 833, "4619": 830, "462": [830, 831], "4620": 455, "46220213174819946": 835, "4629": [128, 129], "463": [830, 831], "4630": 455, "4631": [412, 848], "464": [159, 830, 831], "4641": 850, "4647410679872376": 686, "465": [830, 831], "4650": 850, "4652": 411, "4653": 437, "4654086994009452": 686, "466": [830, 831], "4660": 848, "4661": 831, "4663": 850, "4664": 118, "467": [830, 831], "4673": 412, "4676": 820, "468": [830, 831], "4682": 407, "4684": 817, "469": [830, 831], "4692371689047904": 686, "4698": 392, "47": [423, 555, 619, 825, 830, 831, 854, 861], "470": [830, 831, 834], "4704": 830, "47041099": 830, "471": [830, 831], "472": [815, 830, 831], "4721": 817, "47224962583565544": 686, "4729": 820, "473": [830, 831], "4731": 658, "47382": [168, 186], "474": [161, 830, 831], "475": [830, 831], "4755": [432, 433, 434, 435, 436, 437, 438, 439, 440], "4756": [686, 830], "47562693094002173": 686, "476": [830, 831], "4760": 435, "4762": 433, "4762e": 820, "4764": 850, "4765": 833, "4766": 831, "477": [830, 831], "4770": 406, "4770019763881086": 686, "478": [14, 821, 830, 831], "4780e": 820, "479": [830, 831], "47958267": 831, "4796": 831, "4797": 395, "4799": [820, 831], "48": [423, 825, 830, 831, 854, 861], "480": [830, 831], "4800": 173, "4801": [398, 404], "4805": 405, "481": [815, 830, 831], "4817": 455, "482": [830, 831], "4821": 407, "4825e": 820, "4828": 830, "483": [830, 831], "483142": 158, "4837": 432, "484": [830, 831], "4847": 411, "485": [830, 831], "4854": 817, "486": [163, 830, 831], "487": [14, 830, 831], "4874816834926605": 835, "488": [830, 831], "48810": 132, "4884": 174, "4885": 437, "4888": 4, "489": [815, 830, 831], "48921": 180, "49": [25, 423, 825, 830, 831, 854, 861], "490": [821, 830, 831], "4900": 850, "49037522512771525": 686, "4904": 437, "4909": 686, "490938012147181": 686, "491": [135, 821, 830, 831], "4910e": 339, "4912": 830, "492": [181, 830, 831], "4921e": 339, "493": [152, 830, 831, 839], "493888090726854": 686, "49397782380750765": 686, "494": [830, 831, 832], "4940": [437, 686], "4942": 820, "4948": [411, 831], "495": [14, 152, 830, 831], "4952e": 830, "4953": 848, "4954": [642, 643], "4955e": 820, "496": [830, 831], "4964": 817, "497": [830, 831], "4977": 437, "498": [830, 831], "4983": 817, "499": [830, 831], "4994": 817, "4_link_predict": [823, 835, 839], "4_old_win": [823, 863], "4_rgcn": [823, 849, 853], "4d": 179, "4f": [817, 848, 849, 850, 851, 854, 866, 867], "4m": [210, 712, 798], "4part_data": [844, 845], "4th": 719, "4\u6761\u8fb9": 743, "4\uac00\uc9c0": 775, "4\uac1c\uac00": 783, "4\uac1c\uc758": [786, 808], "4\uc7a5": [788, 808, 810, 812], "5": [5, 6, 9, 12, 14, 20, 22, 26, 27, 28, 34, 35, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 107, 113, 114, 115, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 137, 142, 143, 145, 146, 147, 148, 149, 152, 155, 156, 159, 161, 163, 172, 173, 174, 178, 184, 185, 187, 193, 197, 200, 205, 210, 214, 216, 219, 220, 229, 230, 242, 244, 245, 249, 292, 296, 297, 298, 299, 300, 301, 302, 307, 314, 315, 318, 324, 330, 331, 332, 335, 336, 337, 338, 339, 341, 348, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 454, 472, 473, 499, 500, 537, 544, 548, 549, 553, 554, 555, 558, 559, 560, 561, 562, 566, 571, 572, 591, 598, 604, 605, 607, 609, 610, 611, 612, 616, 623, 625, 626, 627, 637, 639, 640, 642, 643, 644, 645, 648, 651, 652, 653, 655, 656, 658, 660, 661, 664, 665, 678, 680, 682, 683, 686, 688, 690, 691, 693, 696, 697, 698, 699, 700, 701, 703, 704, 709, 710, 711, 712, 713, 714, 717, 719, 722, 730, 734, 737, 739, 740, 741, 742, 743, 744, 745, 747, 748, 753, 754, 757, 759, 762, 764, 770, 774, 777, 780, 781, 782, 783, 784, 785, 786, 789, 795, 796, 800, 802, 803, 806, 808, 814, 815, 816, 817, 818, 820, 825, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 850, 851, 854, 860, 861, 866, 867], "50": [146, 171, 174, 175, 181, 423, 429, 431, 455, 545, 555, 619, 815, 825, 830, 831, 832, 834, 835, 848, 850, 851, 854, 861], "500": [150, 154, 160, 176, 698, 724, 725, 742, 764, 765, 783, 808, 809, 815, 816, 818, 830, 831, 832, 834, 835, 836, 848, 850, 851, 860], "5000": [4, 9, 25, 126, 191, 249, 354, 387, 388, 422, 475, 547, 555, 569, 570, 591, 595, 608, 654, 662, 724, 764, 808, 820], "50000": [14, 146, 158], "500000": 210, "5007": 830, "500k": 210, "501": [830, 831], "5010": 817, "5011": 407, "5015": 830, "50154522": 830, "502": [830, 831], "503": [830, 831], "5030": 411, "5034": 803, "5035": 831, "5039": 803, "504": [830, 831], "5041": [398, 404], "5042": 415, "505": [830, 831, 834], "5050": 820, "5053": 390, "5054": 433, "506": [830, 831], "5065": [642, 643], "507": [830, 831], "508": [830, 831], "509": [830, 831, 851], "50905826": 830, "5091": 830, "5097": 455, "5097e": 820, "51": [193, 423, 825, 830, 831, 854, 861], "510": [830, 831], "511": [830, 831], "5110": 820, "5117": 658, "512": [441, 444, 680, 682, 830, 831, 834, 854], "5123": 830, "513": [830, 831], "514": [830, 831], "5142": 455, "515": [193, 830, 831], "5159": 407, "516": [830, 831], "5161360502243042": 835, "5169": 411, "517": [830, 831], "5171": [642, 643], "518": [830, 831], "5182": [642, 643], "5184": 833, "5188": 831, "519": [830, 831], "5191278830882644": 686, "5192": 395, "5197": [432, 433, 434, 435, 436, 437, 438, 439, 440, 642, 643, 686], "5197462471155317": 686, "52": [423, 817, 821, 830, 831, 854, 861], "520": [830, 831], "5200": 820, "52000000": 239, "5201": 185, "521": [830, 831], "5215": 420, "5217": 422, "522": [830, 831], "5221": [437, 455], "5227": 686, "5227112950269823": 686, "5228": 820, "523": [830, 831], "5236": 407, "5237": 437, "524": [14, 815, 830, 831, 853], "5243": 415, "525": [830, 831], "5251800239734318": 686, "5259": 395, "526": [830, 831], "5266": 407, "527": [830, 831], "5278": [432, 433, 434, 435, 436, 437, 438, 439, 440], "5279": 833, "528": [830, 831], "5286": 403, "5287": 412, "529": [219, 830, 831, 851], "529195480661293": 686, "5297": [642, 643], "5299": 817, "53": [14, 423, 821, 830, 831, 854, 861], "530": [830, 831, 834], "5303": [642, 643], "5306": 437, "531": [830, 831], "5312": 455, "5316": 831, "532": [830, 831], "5322": 440, "5327": 395, "533": [830, 831], "5333": 9, "534": [830, 831], "5341": [817, 833], "5347": [398, 404], "5348": 686, "534822233529295": 686, "535": [830, 831], "5352": 415, "5355": 830, "5357": 817, "536": [830, 831], "5365": 686, "5365210052235699": 686, "5366": 833, "537": [830, 831], "538": [830, 831], "5385e": 820, "539": [830, 831], "5398": 418, "54": [423, 830, 831, 854, 861], "540": [830, 831], "5400": 831, "5400687466285844": 686, "5401": 686, "5406": 616, "5409": 817, "541": [830, 831, 832], "5417": [831, 848], "5418": [642, 643], "542": [14, 830, 831], "5420": 439, "5421": 405, "543": [830, 831], "544": [184, 830, 831], "5440": 830, "5445": 432, "545": [830, 831], "5452678203582764": 835, "5452e": 820, "5454": [411, 658], "5454703921677284": 686, "5455": 686, "546": [830, 831], "547": [830, 831, 854], "5477868606453535": 686, "548": [830, 831], "549": [830, 831], "5490": 420, "5493": 830, "5495035052928215": 686, "55": [147, 181, 423, 815, 820, 830, 831, 832, 834, 835, 854, 861], "550": [830, 831], "551": [830, 831], "5511": 436, "5512": 405, "5513": 420, "5514": 817, "5516": 850, "552": [830, 831], "5520": 455, "5527": 817, "5529": 435, "553": [830, 831], "5530": 833, "5538": 436, "554": [830, 831], "5540": 412, "5541": [128, 129, 820], "5543": 817, "555": [830, 831], "5551": 411, "5552": 833, "5555": 831, "556": [830, 831], "5561": 817, "5563827995742111": 686, "5564": 686, "557": [830, 831], "55745598": 830, "5575": 830, "558": [815, 830, 831], "559": [830, 831], "56": [423, 830, 831, 854, 861], "560": [830, 831], "5607": 820, "561": [830, 831, 850], "5611e": 830, "5612": 658, "5614": 118, "5614197853127827": 686, "562": [815, 830, 831, 850], "5622e": 820, "5628": 817, "563": [830, 831], "564": [830, 831], "5643": 411, "565": [830, 831, 834], "5657": 820, "5658": [432, 433, 434, 435, 436, 437, 438, 439, 440], "566": [555, 815, 830, 831], "5668682": 133, "567": [830, 831], "5671": 455, "5678": 854, "568": [169, 830, 831], "5681": 830, "569": [830, 831], "5692": [642, 643], "57": [423, 619, 818, 830, 831, 854, 861], "570": [830, 831], "571": [830, 831], "5711": 411, "572": [830, 831], "5721": 407, "5725": [432, 433, 434, 435, 436, 437, 438, 439, 440], "5725330322207948": 686, "573": [14, 815, 830, 831], "5734e": 820, "574": [830, 831], "5740": 830, "574418": 25, "5746912787380253": 686, "5748": 848, "5749": 686, "5749339182767451": 686, "575": [830, 831], "5753": 820, "576": [830, 831], "5762e": 820, "577": [830, 831], "5772": 820, "578": [830, 831, 832], "5781": 830, "579": [830, 831], "58": [14, 825, 830, 831, 854, 861], "580": [830, 831], "58006496": 830, "5801": 830, "581": [830, 831], "582": [830, 831, 832], "5822": 435, "5824": 830, "5825": 830, "5826e": 830, "583": [830, 831], "584": [830, 831], "5840": 440, "58436972": 831, "5844": 831, "5845": 455, "5847": 432, "5849": 401, "585": [830, 831], "5854": 803, "5855": 830, "586": [830, 831], "587": [830, 831], "5873": 418, "5878": 411, "588": [14, 830, 831], "5887": 817, "589": [830, 831], "59": [25, 155, 187, 455, 825, 830, 831, 854, 861], "590": [830, 831], "5901": [642, 643], "5905": 848, "59071": 158, "5908": 803, "591": [830, 831], "5913335505943637": 686, "592": [145, 830, 831], "5923": 658, "593": [830, 831], "5937484188166621": 686, "594": [830, 831], "5942": [433, 820], "5945": [398, 404], "595": [816, 830, 831], "59518201": 831, "5952": 831, "5953e": 830, "596": [830, 831], "5960": 435, "5962": 803, "5967": 803, "597": [830, 831], "598": [830, 831], "5982": 831, "59821215": 831, "599": [830, 831], "5990": 830, "59904408": 830, "59944": 827, "5996": 833, "5997": 820, "5_dgmg": [823, 857, 859], "5_graph_classif": [823, 836, 839], "5a0c40b": 857, "5e": [425, 427, 718, 719, 803, 815], "5f": 818, "5x4": 833, "5\uac1c\uc758": 800, "5\uc7a5": [788, 795], "6": [3, 6, 9, 11, 20, 26, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 107, 117, 118, 119, 122, 130, 131, 142, 147, 148, 150, 151, 156, 163, 172, 173, 189, 210, 214, 215, 216, 242, 292, 296, 297, 299, 300, 301, 302, 307, 314, 315, 318, 330, 331, 338, 339, 354, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 549, 553, 555, 561, 566, 614, 630, 632, 637, 639, 640, 652, 660, 666, 682, 683, 696, 699, 703, 708, 722, 724, 725, 727, 740, 743, 747, 752, 753, 764, 765, 767, 778, 781, 784, 794, 795, 808, 809, 810, 814, 816, 818, 820, 825, 827, 830, 831, 833, 837, 839, 850, 854, 860, 861], "60": [169, 176, 189, 299, 455, 614, 619, 815, 825, 830, 831, 832, 834, 835, 854, 861], "600": [25, 830, 831, 857], "6000": 217, "60000": 169, "6000000238418579": 471, "6001": 830, "6004": 830, "60040392": 830, "6005": 25, "6008": 411, "601": [830, 831], "6012": 830, "602": [181, 830, 831], "603": [830, 831], "6032": 433, "604": [830, 831], "604045": 173, "604094": 173, "6044": 420, "6045": 437, "6049": 830, "605": [830, 831], "606": [821, 830, 831], "6060": 830, "6066": [398, 404], "607": [830, 831], "6073": 817, "6077": 830, "608": [821, 830, 831], "6088": 820, "609": [830, 831], "6091": 831, "6095": 658, "61": [825, 830, 831, 854, 861], "610": [816, 830, 831], "6106": 412, "611": [830, 831], "6113": 831, "6114": [642, 643], "6118": [432, 433, 434, 435, 436, 437, 438, 439, 440], "6118386331195641": 686, "61191552": 694, "61191553": 694, "61191556": 694, "612": [830, 831], "613": [830, 831], "614": [815, 830, 831, 832], "6143": 411, "6144": 290, "6146": 433, "615": [181, 830, 831], "6156748364694707": 686, "616": [830, 831], "6163": [390, 833], "6167e": 820, "617": [830, 831], "618": [830, 831, 834], "619": [830, 831], "6190": 854, "6196e": 820, "6199": 437, "61gb": 14, "61m": [712, 798], "62": [825, 830, 831, 854, 861], "620": [830, 831], "620118223673067": 686, "621": [830, 831], "6211": 437, "6213": 455, "6216": 820, "62175057": 831, "6218": 831, "622": [830, 831], "6220": 411, "6221": 455, "6222": 432, "6227": 830, "623": [827, 830, 831], "624": [830, 831], "625": [827, 830, 831], "6252": 831, "62539528": 239, "6254": 658, "6259": 830, "626": [827, 830, 831], "6260": 848, "627": [825, 827, 830, 831], "6275": 820, "628": [825, 827, 830, 831], "629": [825, 827, 830, 831], "6295": 658, "63": [25, 701, 745, 825, 830, 831, 854, 861], "630": [163, 825, 827, 830, 831], "6305": 436, "631": [825, 827, 830, 831], "6317": 436, "6319": 455, "632": [825, 827, 830, 831], "6325": 658, "633": [825, 827, 830, 831], "634": [825, 827, 830, 831], "6340": [411, 817], "634899790318452": 686, "635": [827, 830, 831], "6355": [432, 831], "63563": 25, "6358": 830, "636": [815, 827, 830, 831], "6365": [432, 433, 434, 435, 436, 437, 438, 439, 440], "637": [830, 831], "6373": 420, "6375": [401, 817], "6375445528248924": 686, "6379": [642, 643], "638": [830, 831], "6381e": 820, "639": [14, 827, 830, 831], "6393": 411, "6399": 435, "64": [14, 172, 195, 385, 421, 423, 427, 428, 563, 701, 745, 786, 825, 827, 830, 831, 840, 854, 861], "640": [816, 827, 830, 831], "6403241753578186": 835, "6408": 405, "641": [815, 827, 830, 831, 850], "6418": 455, "642": [827, 830, 831], "6425": 830, "643": [827, 830, 831], "6430l": 840, "6431": 848, "6437": [820, 830], "64370869": 830, "644": [827, 830, 831], "6447": 820, "645": [827, 830, 831], "6453746567017163": 686, "646": [827, 830, 831], "6462162561249654": 686, "647": [830, 831], "6477": 391, "6478": 831, "648": [830, 831, 832, 834], "648874463": 694, "649": [830, 831], "6494437360242048": 686, "64d0f3f": 14, "65": [153, 815, 821, 825, 830, 831, 832, 834, 835, 854, 861], "650": [136, 830, 831], "6506e": 830, "6507": 820, "651": [830, 831], "6512e": [630, 666], "6515": [642, 643], "65188318": 830, "6519": 830, "652": [14, 830, 831], "6520": 848, "6526403892728874": 686, "653": [830, 831, 834], "6534": 833, "6539": 820, "654": [830, 831], "6544": [817, 830], "6549": 412, "655": [830, 831], "6557": [430, 544], "6558": 455, "656": [816, 830, 831], "6562": 803, "6568": [398, 404, 415], "657": [830, 831], "658": [14, 830, 831, 834], "6580": 686, "6580438064356824": 686, "6582": 830, "6585": 616, "65854": 182, "6588": 830, "659": [830, 831], "6594951663841697": 686, "6595": 686, "6596": 830, "6597": 418, "6598715708878852": 686, "66": [820, 825, 827, 830, 831, 854, 861], "660": [830, 831, 834], "661": [830, 831], "6610": 848, "662": [830, 831], "6624186423087752": 686, "6628": 817, "663": [815, 830, 831], "6630": 848, "6638": 830, "664": [830, 831], "6641": 831, "665": [830, 831], "6655": 803, "6659": 831, "666": [821, 830, 831, 832], "6667": [595, 654], "667": [830, 831], "668": [830, 831], "669": [830, 831], "6690": 848, "6694943496824788": 686, "67": [825, 827, 830, 831, 854, 861], "670": [830, 831], "6702": [642, 643], "6707": 831, "671": [815, 825, 827, 830, 831], "6717": 817, "672": [825, 827, 830, 831, 832], "672884": 144, "673": [825, 827, 830, 831], "674": [821, 825, 827, 830, 831, 832], "6743": 831, "6746269314422184": 686, "675": [825, 827, 830, 831, 834], "6751": 817, "6754": 436, "6754e": 830, "676": [830, 831, 832], "6765e": 820, "677": [163, 173, 830, 831], "6776": 830, "6776417760682221": 686, "678": [830, 831, 834], "6781": 820, "679": [830, 831], "6795": 817, "67985810014162": 686, "6799": 686, "68": [170, 821, 825, 827, 830, 831, 854, 861], "680": [830, 831, 832], "681": [830, 831], "6810484348765842": 686, "6811": 817, "682": [173, 830, 831, 832], "6825": [432, 433, 434, 435, 436, 437, 438, 439, 440], "683": [815, 830, 831, 832], "684": [815, 830, 831, 832], "6845": 436, "685": [830, 831], "6856783032417297": 835, "686": [830, 831, 832, 834], "687": [830, 831], "6871": 412, "6876": 435, "688": [14, 830, 831, 832, 834], "6882": 455, "689": [827, 830, 831], "6893": [642, 643], "69": [173, 821, 825, 830, 831, 851, 854, 861], "690": [816, 821, 827, 830, 831], "6901": 831, "6901745368284345": 686, "6906": 118, "6907": 437, "6908": 396, "691": [823, 827, 830, 831, 854, 856], "6910": 658, "6911": 830, "692": [830, 831], "6925": [432, 433, 434, 435, 436, 437, 438, 439, 440], "692873149428549": 686, "6929": 830, "693": [830, 831], "6931": 411, "6935": 820, "6937": 455, "6939": 830, "694": [830, 831, 834], "6943": 803, "695": [830, 831, 832], "6950": 848, "6954": [455, 820], "6955": 437, "6958": 848, "696": [830, 831, 832, 834], "6962": 432, "697": [830, 831], "698": [14, 830, 831], "6984483599662781": 835, "6985674921582508": 686, "698592283371875": 686, "6986": 686, "699": [830, 831], "6994": 850, "6_line_graph": [823, 850, 853], "6_load_data": [823, 837, 839], "6gb": 694, "6\u4e2a\u8282\u70b9": 743, "6\uc740": 778, "6\uc744": 796, "6\uc7a5": [788, 794, 806, 808], "7": [6, 9, 14, 20, 26, 79, 80, 81, 82, 122, 136, 142, 154, 160, 161, 162, 163, 165, 171, 172, 177, 179, 242, 292, 296, 297, 298, 299, 300, 301, 302, 307, 314, 324, 338, 339, 403, 431, 548, 549, 553, 558, 597, 617, 630, 637, 639, 651, 652, 660, 666, 699, 702, 703, 708, 709, 712, 727, 736, 743, 746, 747, 752, 754, 767, 776, 784, 787, 794, 795, 796, 810, 814, 815, 816, 818, 820, 821, 825, 827, 830, 831, 832, 834, 835, 848, 850, 851, 854, 860, 861], "70": [25, 153, 184, 210, 815, 821, 830, 831, 832, 834, 835, 854, 861], "700": [830, 831, 834], "7000": [430, 544], "701": [192, 830, 831, 832], "702": [830, 831], "7020": 848, "7026": 803, "703": [181, 830, 831], "7031": 803, "704": [830, 831], "7048": [398, 404], "705": [830, 831], "7051530741717352": 686, "7053": 411, "706": [173, 830, 831], "7060": 830, "707": [830, 831, 834], "7071": 654, "7074e": 820, "708": [830, 831, 832, 834], "7081": 820, "70828622": 830, "7083": 830, "709": [830, 831], "7090": 848, "7091": 436, "7095": 455, "70it": 818, "71": [169, 184, 830, 831, 854, 861], "710": [153, 830, 831, 834], "711": [830, 831], "7114": 850, "712": [816, 830, 831, 832], "713": [694, 815, 830, 831, 834], "7138": 436, "714": [830, 831, 836], "7141": 118, "715": [830, 831, 832], "7153": 118, "7158": 820, "716": [194, 830, 831], "7163": 803, "7164": 831, "7168": [803, 830], "717": [161, 162, 163, 830, 831], "7174910641836348": 686, "718": [830, 831], "7185e": 830, "719": [830, 831], "7196969604886617": 686, "7197": 686, "72": [830, 831, 854, 861], "720": [830, 831, 834], "7204": 833, "721": [830, 831], "7211": 25, "722": [135, 830, 831, 834], "72258528": 831, "7226": 831, "7227": 831, "723": [830, 831], "724": [816, 830, 831, 832, 834], "725": [830, 831], "726": [192, 815, 816, 830, 831, 834], "7262": 132, "7269": [128, 129], "727": [830, 831], "7279": 830, "728": [830, 831, 834], "7287": 437, "7287e": [630, 666], "729": [149, 830, 831], "7291568018841328": 686, "73": [830, 831, 854, 861], "730": [816, 827, 830, 831, 834], "7301": 820, "730570": 837, "731": [827, 830, 831], "7311": [597, 617, 820], "73118458": 830, "7312": 830, "7313": 854, "7319": 817, "732": [159, 816, 827, 830, 831, 834], "7321742043493028": 686, "733": [827, 830, 831], "7330": 848, "734": [816, 827, 830, 831, 832, 834], "7340": 848, "735": [827, 830, 831], "7350": 848, "7352138669985214": 686, "7356": [433, 817], "736": [827, 830, 831, 834], "7362": 830, "7365": 455, "7368": 686, "736833152378035": 686, "737": [815, 830, 831], "7370": 848, "738": [830, 831, 832, 834], "7380": 848, "73816027": 831, "7382": 831, "739": [830, 831], "7390": 848, "74": [25, 830, 831, 854, 861], "740": [159, 815, 827, 830, 831, 834], "7400": 848, "7405": 817, "741": [827, 830, 831], "7410": [433, 848], "742": [830, 831, 832, 834], "7422": 830, "7426": 686, "7426272601929126": 686, "7427": 432, "743": [816, 830, 831, 834], "7430": 848, "744": [830, 831, 834], "7440": 848, "745": [136, 816, 830, 831, 834], "7450": [830, 831, 848], "74503843": 831, "7457985352827006": 686, "746": [816, 830, 831, 834], "7465": 455, "7468": 830, "74680806": 830, "747": [830, 831, 834], "7477": 833, "748": [165, 830, 831, 834], "7480": 848, "749": [830, 831, 834], "7490": 848, "75": [14, 243, 430, 544, 714, 757, 800, 815, 830, 831, 832, 834, 835, 854, 861], "750": [830, 831, 832, 834], "7500": [547, 662, 848], "7507": [642, 643], "7509": 854, "751": [815, 830, 831], "7510": 848, "752": [135, 821, 830, 831, 834], "7520": 848, "7525": 403, "753": [816, 830, 831], "754": [815, 830, 831, 834], "7540": [439, 848], "755": [14, 830, 831, 832], "7556": 390, "7558e": 830, "756": [160, 830, 831, 834], "7560": [435, 848], "75652": 827, "7567": [432, 433, 434, 435, 436, 437, 438, 439, 440], "757": [830, 831, 834], "7570": 848, "758": [830, 831, 832, 834], "7583": 830, "7583372765843964": 686, "7587": 411, "7588": 686, "7588441197954202": 686, "7589": 830, "759": [830, 831, 834], "7596": 830, "76": [830, 831, 854, 861], "760": [815, 830, 831], "7600": 134, "761": [830, 831], "7613943085507672": 686, "7614": 686, "762": [815, 830, 831, 832], "7620": 848, "763": [830, 831, 832], "7631": 850, "764": [830, 831, 832], "7649": 830, "765": [830, 831, 832], "7650": 25, "7653e": 820, "765544096939567": 686, "7656": 422, "76576779": 831, "7658": 831, "766": [830, 831, 832], "7665": 407, "767": [135, 830, 831, 832], "7670": 848, "76750": [825, 827], "768": [159, 815, 830, 831, 832, 854], "7681": 830, "7682e": 830, "7687": 848, "769": [830, 831, 832], "7692": 411, "7697": 686, "7697294432580938": 686, "77": [821, 830, 831, 854, 861], "770": [830, 831, 832], "7709": 419, "771": [815, 830, 831], "7710": [128, 129, 440, 830], "7711": 412, "7719": 830, "772": [815, 830, 831, 832], "7720": 803, "7721": 411, "773": [830, 831], "7733": 830, "77330102": 830, "774": [830, 831], "7746": 850, "775": [823, 830, 831, 832, 839], "7751": 830, "7752": 455, "776": [815, 816, 830, 831, 832], "776002616178397": 686, "7760e": 830, "7761": 831, "7762": 455, "7766": 455, "777": [830, 831], "7773": 407, "7774": 392, "7776": 850, "7778": 850, "778": [135, 830, 831], "77800": 818, "7787": 423, "779": [830, 831], "7794e": 830, "77it": 817, "78": [830, 831, 854, 861], "780": [815, 830, 831, 832], "7807": 830, "781": [815, 818, 830, 831], "78100": 818, "78185475": 830, "7819": [686, 830], "7819383771535038": 686, "782": [830, 831, 832], "7827": 803, "783": [830, 831], "784": [14, 815, 823, 830, 831, 851, 853], "7845": 850, "7846": 455, "7849": 439, "785": [830, 831], "7859": 817, "786": [815, 830, 831], "7861": 817, "7863421810531344": 686, "7864": 831, "7865": 403, "7866": 850, "787": [830, 831], "788": [151, 815, 830, 831], "78804": 171, "7884": [817, 831], "789": [830, 831], "7891": [686, 830], "7891429392727503": 686, "7893727601272978": 686, "7894": 455, "79": [455, 821, 830, 831, 854, 861], "790": [815, 830, 831], "7901988878812207": 686, "7902": 686, "7904": 849, "7905": 412, "791": [815, 830, 831], "792": [830, 831], "7924": 437, "793": [153, 830, 831], "794": [14, 830, 831], "7946": 411, "7948": 849, "7949": [432, 433, 434, 435, 436, 437, 438, 439, 440], "795": [815, 830, 831], "796": [830, 831], "7963": 850, "797": [830, 831], "7971": 850, "7973": 437, "798": [159, 830, 831], "7989": 850, "799": [830, 831], "7993": 411, "7997": [642, 643], "7998": 849, "7999": 850, "7_transform": [823, 861, 863], "7g": [719, 803], "7\u548c11": 754, "7\u884c": 736, "7\ubd80\ud130": 798, "7\uc7a5": 788, "8": [4, 6, 9, 10, 14, 20, 130, 136, 139, 140, 142, 152, 153, 172, 184, 189, 190, 198, 207, 244, 245, 292, 297, 299, 300, 301, 302, 307, 314, 324, 332, 336, 337, 338, 341, 391, 392, 393, 399, 402, 410, 441, 443, 444, 446, 447, 448, 449, 453, 455, 472, 473, 553, 555, 561, 619, 637, 639, 651, 660, 682, 698, 699, 701, 703, 709, 742, 745, 754, 783, 786, 796, 814, 815, 816, 817, 818, 820, 825, 827, 830, 831, 836, 845, 850, 851, 854, 860, 861, 866], "80": [142, 143, 161, 190, 193, 455, 815, 817, 830, 831, 832, 834, 835, 854, 861, 866], "800": [830, 831], "801": [830, 831], "802": [133, 555, 830, 831], "8025": 830, "803": [830, 831], "8030": 437, "8034": 850, "8035": 831, "8038": 831, "804": [14, 830, 831], "8043": 436, "805": [151, 163, 830, 831], "8053": 849, "8058": 411, "806": [830, 831], "8065": 424, "80678327": 831, "8068": [418, 831], "807": [816, 830, 831], "808": [830, 831], "8080": 21, "8086": 455, "8089": 850, "809": [830, 831], "8090": 658, "809016994374948": 340, "81": [151, 814, 821, 830, 831, 851, 854, 861], "810": [830, 831], "811": [830, 831, 832], "8110": 830, "8111": 433, "8113": 432, "811333": 25, "8114": 849, "8117650553546695": 686, "812": [555, 830, 831], "8126": 850, "813": [815, 830, 831, 834], "8130": 830, "8132": 423, "8135": 405, "8137": [432, 433, 434, 435, 436, 437, 438, 439, 440], "8138": 833, "8138e": 830, "814": [830, 831], "8143": 831, "8146": 423, "8149": 686, "8149104951283953": 686, "815": [830, 831], "816": [830, 831], "8166": 831, "8168": [820, 854], "817": [830, 831], "8174": 830, "818": [161, 830, 831], "8181": 849, "8183": 850, "8189658": 779, "819": [194, 830, 831], "8199": 435, "82": [172, 830, 831, 851, 854, 861], "820": [830, 831], "8201": 831, "8202": 848, "8208": 420, "821": [161, 830, 831], "8210": 850, "821187": 837, "822": [815, 830, 831], "823": [14, 830, 831], "82307783": 830, "8231": 830, "8235": 412, "824": [830, 831], "8245": 411, "8248": 850, "825": [830, 831], "8250": [817, 830], "8253": 849, "826": [830, 831], "8262": 407, "827": [830, 831], "8270": 850, "828": [830, 831], "8282": 850, "8282e": 820, "8287": 423, "829": [14, 830, 831], "82956099": 830, "8296": [830, 833], "83": [195, 821, 830, 831, 851, 854, 861], "830": [830, 831], "8300": 854, "8307": [642, 643], "831": [178, 179, 181, 830, 831], "8315": [833, 854], "832": [830, 831], "8323": 403, "8325": 423, "8326": 406, "8326121496142408": 686, "833": [830, 831], "8330": 849, "834": [816, 830, 831], "835": [830, 831], "836": [830, 831], "8363": 850, "837": [830, 831], "8371": 424, "8376": 830, "8377": [432, 433, 434, 435, 436, 437, 438, 439, 440], "838": [830, 831], "8380h": 840, "8387": 436, "839": [830, 831], "8393": 831, "84": [195, 830, 831, 854, 861], "840": [830, 831], "8400": 605, "841": [830, 831], "8411": 849, "842": [153, 830, 831], "8427": 831, "84273009": 831, "843": [830, 831], "8435": 848, "8437": 423, "8439e": 820, "844": [830, 831], "8440": 830, "8443": 831, "845": [830, 831], "8451": 830, "8451870383322376": 686, "8453123358491914": 686, "8456": 830, "846": [830, 831], "847": [194, 830, 831], "8470": 437, "8478810655406659": 686, "848": [830, 831], "8484": 830, "8486": 830, "84860196": 830, "8487": 405, "8489": [642, 643], "849": [830, 831], "8494919263589972": 686, "8495": 686, "8497": 849, "84985547": 831, "8499": 831, "849983324532477": 686, "85": [815, 830, 831, 832, 834, 835, 854, 861], "850": [830, 831], "8507e": 830, "851": [830, 831], "8515": 423, "852": [830, 831], "8521": [432, 433, 434, 435, 436, 437, 438, 439, 440], "8528": 830, "85283124": 830, "853": [830, 831], "8531": 849, "8536": 387, "854": [830, 831], "8544": 184, "8549": 455, "855": [830, 831], "856": [825, 827, 830, 831], "8563": 820, "857": [830, 831], "8574": 849, "8577": 833, "858": [830, 831], "8582": 403, "8586722047523594": 686, "8589": 849, "859": [816, 830, 831], "8592": 831, "8597": 455, "86": [830, 831, 854, 861], "860": [14, 830, 831], "8608": 854, "861": [830, 831], "8613": 686, "8613368738351794": 686, "862": [830, 831], "8622": 849, "8628": 830, "86281038": 830, "863": [830, 831], "8634": [398, 404], "8637e": 830, "864": [830, 831], "8643238446466464": 686, "8648": 455, "865": [830, 831], "8651": 830, "8652": 831, "8654": 417, "86573472329756": 686, "866": [830, 831], "8661": 831, "8667": 439, "8669": 820, "867": [830, 831], "8674": 403, "8675": 849, "8679": 406, "868": [830, 831], "869": [830, 831, 834], "8690": 849, "87": [155, 187, 830, 831, 854, 861], "870": [830, 831], "8706": 830, "871": [830, 831], "8710": 219, "8715767748481147": 686, "872": [830, 831], "8723": 830, "8726": 436, "873": [830, 831], "8734": 849, "874": [830, 831], "8745": 830, "8747": 830, "875": [830, 831], "8753101998792645": 686, "8757520744192612": 686, "876": [830, 831], "8764": 407, "8769": 830, "877": [830, 831], "87717667": 830, "8772": 830, "87728309": 830, "8773": 830, "8778998699783784": 686, "878": [14, 173, 815, 830, 831], "879": [830, 831], "8799": 849, "88": [168, 186, 820, 821, 830, 831, 854, 861], "880": [816, 830, 831], "8805": [833, 849], "881": [145, 830, 831], "8813": 686, "8813472954005022": 686, "881680": 133, "882": [830, 831], "8820475730554121": 835, "8825": 423, "883": [830, 831], "884": [830, 831, 834], "8843": 407, "885": [830, 831], "8851": 851, "8851294998284638": 686, "8854": 437, "886": [830, 831], "88651": [25, 176], "8869": [436, 849], "887": [830, 831], "8873": 851, "888": [830, 831], "889": [830, 831], "8893": 830, "8894": 851, "89": [145, 160, 168, 455, 825, 827, 830, 831, 854, 861], "890": [830, 831], "8901": 854, "891": [830, 831], "8916": [830, 851], "892": [181, 830, 831, 832], "8920": 455, "8922": 424, "893": [830, 831], "8938": [432, 433, 434, 435, 436, 437, 438, 439, 440, 851], "894": [151, 830, 831], "8942": 849, "8944": 849, "8945": [432, 433, 434, 435, 436, 437, 438, 439, 440], "8948": [432, 433, 434, 435, 436, 437, 438, 439, 440], "895": [830, 831], "8954": [642, 643], "8959": 851, "896": [830, 831], "8964": 686, "8964389655603473": 686, "897": [14, 830, 831], "8974": 854, "8975": 686, "8975240205792763": 686, "898": [816, 830, 831], "8981": 851, "899": [160, 815, 830, 831], "8g": [719, 803], "8\u548c": 754, "8\u548c11": 754, "8\uac1c\uc758": [779, 783], "8\uacfc": 784, "8\ubc88\uc774": 796, "8\uc5d0": 796, "8\uc758": 796, "8\uc7a5": 788, "9": [4, 9, 10, 20, 26, 138, 148, 163, 195, 245, 292, 296, 297, 298, 299, 300, 301, 314, 332, 336, 337, 339, 403, 423, 455, 473, 553, 614, 615, 637, 639, 660, 698, 699, 708, 709, 719, 742, 743, 752, 754, 783, 784, 794, 796, 814, 816, 818, 820, 821, 825, 827, 830, 831, 840, 850, 854, 861], "90": [455, 815, 825, 827, 830, 831, 832, 834, 835, 854, 861], "900": [14, 615, 830, 831], "9000": 861, "9002": 851, "901": [830, 831], "9011": 423, "9016": [398, 404], "902": [14, 830, 831], "9023": 851, "9024": 849, "9027": [396, 854], "9028": [432, 433, 434, 435, 436, 437, 438, 439, 440], "903": [830, 831], "9030": [432, 433, 434, 435, 436, 437, 438, 439, 440], "9036": 830, "90361209": 830, "904": [830, 831], "90417744": 830, "9042": 830, "9044": 851, "9048": 830, "905": [830, 831], "906": [830, 831], "9062": 820, "9065": 851, "90665304": 830, "9067": 830, "9068": 830, "907": [830, 831], "908": [830, 831], "9081": [437, 830], "9086": 851, "9089": 415, "909": [830, 831], "9091": 407, "9092": 830, "91": [825, 827, 830, 831, 854, 861], "910": [830, 831], "9105": [605, 642, 643], "9107": 851, "9108": 455, "911": [830, 831], "9110": 849, "9112": 849, "912": [830, 831], "9121": 854, "9125": 831, "91252485": 831, "9127": 851, "913": [830, 831], "9137": [432, 433, 434, 435, 436, 437, 438, 439, 440], "9137336384979067": 686, "914": [816, 830, 831], "9140": [642, 643], "9142": 820, "9148": 851, "915": [830, 831], "9156": 455, "916": [830, 831, 832], "9164": 831, "9166": 424, "9167": 9, "9168": 851, "9168191778828504": 686, "917": [830, 831], "918": [830, 831], "9189": 851, "919": [830, 831], "9190": 820, "92": [830, 831, 854, 857, 860, 861], "920": [830, 831], "9204": 849, "9209": 851, "921": [815, 830, 831], "9217": 831, "922": [830, 831], "9226": 391, "9228": [25, 150], "9229": 851, "923": [830, 831], "9230": 437, "924": [152, 830, 831], "9241": 411, "9242": 831, "9243": 830, "9246": 848, "925": [830, 831], "9250": 851, "926": [816, 830, 831], "9268": 387, "9269": 820, "927": [830, 831], "9270": 851, "9273": 419, "928": [14, 830, 831], "9280": [642, 643], "9285": [830, 831], "9288e": 339, "929": [830, 831], "9290": 851, "9297": 419, "93": [25, 821, 825, 827, 830, 831, 854, 861], "930": [830, 831], "9302": [391, 820], "9307": 803, "931": [830, 831], "9310": [849, 851], "9315": 411, "932": [830, 831], "9324": 831, "933": [830, 831], "9330": 851, "9331": 849, "934": [830, 831], "9343": [419, 831], "93431232": 831, "935": [830, 831], "9350": 851, "936": [830, 831], "936706701616337": 686, "9368": [128, 129], "9369": 851, "937": [816, 830, 831], "9370": 830, "9370522452510665": 686, "938": [830, 831], "9385": 830, "93852512": 830, "9388": 830, "9389": 851, "939": [830, 831], "9394": 831, "9397636966928355": 686, "94": [825, 827, 830, 831, 854, 861], "940": [830, 831], "9400": 831, "94001689": 831, "9403": 830, "9404": 803, "9409": 851, "941": [830, 831], "9414": 830, "9418796835016118": 686, "9419": 686, "942": [830, 831], "9422093637539785": 686, "9427": 820, "9429": 851, "943": [173, 830, 831], "9430": [455, 830, 831], "9431": 849, "944": [161, 830, 831], "9441": 419, "9449": 851, "945": [830, 831, 832], "9453": 830, "94534268": 830, "9457": 854, "946": [816, 821, 830, 831], "947": [830, 831], "9478": 830, "948": [830, 831], "94806": 144, "9484": 820, "949": [830, 831, 834], "9490": 440, "9497": 820, "95": [25, 815, 830, 831, 832, 834, 835, 854, 861], "950": [830, 831], "951": [158, 830, 831], "9511783938523962": 686, "9512": [686, 830], "952": [14, 830, 831], "953": [830, 831], "9536": 831, "95362504": 831, "9539": [168, 186, 830], "95392906": 830, "954": [163, 194, 815, 830, 831], "95479629": 830, "9548": 830, "955": [830, 831], "9551": 830, "956": [830, 831], "957": [830, 831], "9572": 406, "9576": 848, "9577": 849, "958": [161, 830, 831], "9582": 820, "959": [823, 830, 831, 834, 839], "9599": 405, "96": [821, 830, 831, 854, 861], "960": [830, 831], "9600": 173, "9602": 831, "9609": 440, "961": [830, 831], "962": [152, 830, 831], "9620": 849, "963": [14, 823, 830, 831, 857, 859], "9634": 387, "9637": 455, "964": [830, 831], "9644": 830, "965": [181, 830, 831], "9650": 831, "96501316": 831, "966": [14, 830, 831], "966043": [693, 694], "967": [830, 831], "9679": 831, "96790165": 831, "968": [830, 831], "969": [830, 831], "9698": 390, "97": [830, 831, 854, 857, 861], "970": [14, 830, 831], "971": [830, 831], "9712e": 820, "9714": 616, "972": [555, 830, 831], "9722": 849, "973": [14, 830, 831, 851], "9733": 830, "9735": 833, "974": [694, 830, 831], "9748": 820, "975": [830, 831, 851], "97505217": 831, "9751": 831, "9751e": 820, "9757": 849, "9759e": 820, "976": [830, 831], "977": [14, 830, 831], "9774471538377553": 686, "9777": 831, "978": [830, 831], "9784264442230887": 686, "9786": 849, "979": [830, 831], "9794634290792008": 686, "98": [25, 163, 695, 739, 780, 821, 830, 831, 854, 861], "980": [830, 831], "981": [830, 831], "9819": 833, "982": [830, 831], "9820": [597, 617], "98278545": 830, "9828": 830, "983": [830, 831], "9830": 25, "984": [146, 830, 831], "9840": 437, "9848072295736628": 686, "985": [14, 830, 831], "9852": 830, "9857": 849, "986": [830, 831], "9868": 401, "987": [830, 831], "988": [830, 831], "9886": [830, 831], "98862758": 830, "989": [830, 831], "9891": 831, "99": [830, 831, 854, 861], "990": [830, 831], "9908": 831, "991": [830, 831], "9914": 820, "991848": 25, "992": [830, 831], "9923": 830, "99230312": 830, "9927": 420, "9929": 854, "993": [830, 831], "994": [830, 831], "9940e": 820, "9949": 403, "995": [14, 830, 831], "9952376085297715": 686, "99589222": 830, "9959": 830, "996": [815, 830, 831], "997": [830, 831], "9971749359397111": 686, "9972": 437, "998": [830, 831], "9986": 391, "9987": 849, "9989": 831, "999": [4, 10, 14, 830, 831], "9990": [432, 433, 434, 435, 436, 437, 438, 439, 440], "9993": 831, "9995": 830, "9_gat": [823, 851, 853], "9\uc5d0\uc11c": 784, "A": [4, 6, 7, 12, 14, 20, 21, 22, 26, 27, 28, 31, 34, 35, 39, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 71, 75, 79, 82, 87, 88, 93, 94, 95, 96, 100, 105, 109, 110, 118, 119, 121, 127, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 203, 205, 206, 207, 220, 230, 231, 235, 238, 240, 241, 244, 287, 288, 291, 292, 293, 294, 295, 296, 299, 300, 302, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315, 317, 318, 322, 326, 334, 335, 340, 341, 349, 350, 351, 381, 382, 383, 384, 385, 386, 387, 389, 390, 392, 395, 396, 398, 399, 401, 402, 403, 404, 405, 406, 409, 410, 412, 414, 416, 417, 419, 420, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 441, 443, 444, 454, 455, 472, 473, 474, 496, 538, 555, 557, 558, 559, 560, 561, 562, 563, 571, 572, 574, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 632, 633, 634, 635, 636, 637, 638, 639, 641, 642, 643, 647, 650, 655, 656, 661, 665, 680, 686, 688, 691, 692, 694, 695, 697, 699, 700, 702, 706, 718, 726, 727, 728, 785, 787, 815, 816, 817, 818, 820, 821, 823, 824, 828, 832, 834, 835, 837, 839, 844, 848, 850, 851, 854, 861, 862, 864, 865], "AND": 21, "And": [168, 173, 186, 239, 296, 317, 318, 329, 330, 403, 431, 560, 561, 562, 820, 829, 830], "As": [14, 20, 22, 197, 239, 292, 296, 299, 560, 561, 562, 563, 632, 638, 688, 691, 693, 694, 717, 723, 835, 836, 841, 844, 845, 850, 851, 861], "At": [686, 721, 850, 857], "Be": [817, 851], "Being": [4, 10, 727], "But": [89, 292, 299, 717, 814, 818, 857], "By": [4, 31, 32, 41, 53, 54, 70, 122, 125, 126, 131, 200, 201, 207, 210, 220, 231, 238, 239, 248, 249, 292, 299, 331, 350, 351, 354, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 545, 546, 638, 686, 691, 692, 701, 702, 713, 719, 727, 787, 814, 824, 825, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 844, 857, 860, 861], "For": [4, 5, 9, 10, 20, 21, 22, 24, 43, 46, 51, 52, 55, 59, 60, 61, 66, 72, 74, 87, 88, 89, 90, 103, 107, 113, 114, 115, 116, 118, 119, 122, 128, 129, 165, 179, 195, 209, 214, 215, 216, 217, 220, 221, 226, 227, 233, 234, 239, 240, 241, 287, 289, 293, 295, 296, 297, 304, 307, 308, 314, 315, 316, 341, 354, 380, 382, 385, 388, 435, 441, 444, 553, 555, 560, 561, 562, 563, 564, 569, 570, 571, 572, 610, 611, 631, 632, 637, 638, 640, 646, 647, 648, 654, 659, 663, 672, 680, 682, 686, 688, 689, 690, 691, 692, 693, 694, 697, 699, 701, 702, 705, 706, 708, 709, 710, 712, 715, 717, 718, 721, 722, 723, 725, 726, 727, 728, 729, 778, 787, 813, 814, 816, 817, 818, 820, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 837, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866], "If": [4, 6, 21, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 43, 44, 45, 46, 48, 51, 54, 56, 57, 58, 60, 64, 65, 70, 71, 73, 74, 79, 80, 81, 82, 87, 89, 90, 93, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 144, 145, 148, 156, 165, 168, 170, 177, 178, 179, 183, 184, 207, 210, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 235, 237, 238, 239, 240, 241, 245, 247, 248, 249, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 307, 308, 309, 311, 312, 314, 315, 317, 318, 322, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 343, 349, 350, 354, 380, 382, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 431, 432, 434, 438, 439, 441, 442, 444, 445, 448, 452, 456, 473, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 542, 543, 548, 550, 551, 552, 553, 554, 557, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 577, 580, 582, 584, 587, 588, 591, 594, 595, 596, 597, 598, 600, 607, 608, 609, 610, 611, 612, 613, 614, 617, 619, 623, 630, 631, 632, 637, 638, 640, 642, 643, 644, 646, 647, 648, 655, 656, 658, 659, 661, 664, 666, 678, 679, 685, 686, 691, 693, 694, 698, 701, 702, 705, 708, 709, 710, 711, 712, 714, 715, 716, 719, 724, 725, 726, 729, 786, 814, 815, 816, 817, 818, 820, 822, 825, 827, 829, 833, 835, 836, 837, 841, 844, 857], "In": [4, 6, 8, 14, 21, 22, 27, 41, 51, 70, 140, 150, 181, 183, 186, 210, 214, 221, 231, 234, 238, 239, 244, 245, 246, 296, 298, 302, 307, 309, 314, 315, 317, 332, 336, 337, 340, 349, 380, 384, 388, 396, 397, 413, 452, 455, 472, 473, 474, 537, 559, 562, 566, 571, 572, 605, 613, 616, 619, 637, 640, 680, 682, 686, 688, 690, 691, 692, 694, 695, 697, 698, 701, 702, 704, 705, 710, 713, 715, 716, 717, 718, 720, 721, 722, 724, 725, 726, 727, 728, 729, 814, 815, 816, 818, 820, 824, 825, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 849, 850, 851, 852, 854, 857, 860, 861, 864, 866, 867], "It": [4, 6, 7, 8, 9, 20, 21, 22, 34, 35, 48, 60, 73, 87, 91, 92, 93, 94, 100, 113, 120, 125, 126, 128, 129, 130, 131, 132, 138, 139, 141, 142, 143, 158, 162, 178, 179, 189, 190, 191, 197, 198, 205, 208, 210, 211, 212, 217, 219, 220, 234, 239, 240, 241, 246, 248, 249, 286, 289, 292, 294, 296, 302, 304, 307, 309, 316, 318, 330, 331, 336, 337, 338, 349, 381, 383, 384, 389, 391, 392, 393, 394, 401, 406, 408, 413, 417, 423, 424, 425, 426, 427, 428, 429, 430, 431, 438, 443, 449, 450, 451, 452, 453, 456, 475, 476, 477, 478, 479, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544, 545, 546, 555, 556, 562, 563, 564, 566, 567, 637, 665, 682, 684, 686, 688, 691, 692, 693, 694, 697, 702, 705, 706, 717, 718, 719, 813, 816, 824, 825, 827, 829, 830, 831, 835, 836, 837, 844, 848, 849, 851, 852, 854, 857, 858, 860, 861, 864, 866, 867], "Its": [53, 54, 142, 239, 413, 425, 426, 427, 428, 500, 562, 694, 857], "NOT": [5, 21, 22, 230, 412, 848, 849, 850, 851, 854, 857, 860, 861], "No": [385, 722, 851, 866, 867], "Not": 841, "ON": 814, "Of": 704, "On": [22, 116, 426, 428, 704, 711, 719], "One": [20, 21, 43, 44, 46, 51, 73, 74, 77, 103, 104, 122, 130, 221, 229, 230, 233, 292, 390, 448, 560, 638, 678, 684, 686, 688, 690, 691, 698, 700, 701, 702, 705, 711, 712, 713, 722, 725, 726, 727, 729, 818, 832, 836, 851, 854], "Or": [216, 559, 711, 716, 814], "Such": [300, 717, 725, 728, 830, 831, 836, 860], "That": [4, 22, 26, 231, 238, 240, 302, 307, 691, 850, 857, 866], "The": [0, 2, 3, 4, 6, 8, 9, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 380, 381, 382, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 577, 580, 581, 582, 584, 587, 588, 590, 591, 593, 594, 595, 596, 597, 598, 600, 601, 602, 605, 609, 610, 611, 612, 613, 617, 623, 624, 625, 627, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 653, 654, 655, 656, 657, 659, 661, 662, 664, 665, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 732, 772, 787, 797, 798, 802, 814, 815, 816, 817, 818, 819, 820, 821, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 844, 845, 848, 850, 851, 855, 860, 861, 862, 864, 866, 867], "Then": [6, 113, 130, 174, 239, 338, 384, 388, 429, 431, 476, 477, 478, 479, 481, 482, 483, 484, 555, 566, 693, 716, 725, 844, 845, 850, 861], "There": [1, 22, 62, 63, 116, 126, 147, 217, 230, 231, 238, 291, 388, 454, 619, 686, 688, 692, 694, 698, 728, 820, 834, 851, 854, 857, 861], "These": [150, 162, 244, 472, 699, 716, 723, 814, 834, 862, 864], "To": [1, 4, 5, 14, 21, 22, 51, 68, 77, 89, 116, 122, 210, 213, 214, 215, 216, 219, 220, 239, 244, 307, 312, 350, 351, 384, 412, 423, 424, 472, 545, 546, 559, 560, 561, 562, 640, 684, 686, 691, 692, 694, 701, 702, 710, 712, 716, 718, 723, 725, 728, 729, 787, 814, 816, 820, 821, 825, 830, 831, 832, 841, 844, 849, 850, 851, 854, 857, 861, 866, 867], "Will": [200, 213], "With": [77, 209, 213, 385, 407, 558, 560, 561, 562, 639, 678, 709, 726, 727, 814, 832, 840, 848, 850, 857], "_": [0, 21, 244, 297, 298, 299, 314, 402, 405, 406, 410, 414, 420, 423, 424, 426, 435, 443, 448, 472, 646, 672, 682, 693, 714, 715, 728, 729, 754, 757, 758, 768, 769, 796, 800, 801, 811, 812, 816, 817, 825, 833, 835, 837, 840, 848, 849, 850, 851, 857, 860, 861, 866], "_0": 825, "_1": [394, 423, 424, 646, 825], "_2": [449, 646, 825], "_3": 825, "_4": [754, 796, 825], "_5": [754, 796, 826], "_7": [754, 796], "_8": [754, 796], "__": [137, 171, 180, 182, 188, 711, 718], "__all__": [4, 34, 35, 53, 54, 60, 87, 122, 354], "__call__": [650, 686, 757, 800, 825], "__forward__": 850, "__getitem__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 684, 686, 688, 689, 731, 734, 735, 771, 774, 775, 837], "__init__": [21, 208, 218, 298, 312, 413, 423, 424, 425, 426, 427, 428, 455, 555, 684, 688, 692, 710, 711, 713, 714, 715, 716, 718, 719, 721, 723, 725, 727, 728, 729, 731, 734, 754, 755, 756, 757, 758, 759, 761, 763, 765, 767, 768, 769, 771, 774, 796, 797, 799, 800, 801, 802, 803, 805, 807, 809, 810, 811, 812, 815, 816, 817, 818, 820, 825, 827, 832, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "__iter__": [825, 827], "__len__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 684, 688, 731, 734, 754, 771, 774, 796, 837], "__main__": [857, 866, 867], "__name__": [857, 866, 867], "__next__": [825, 827], "__path__": 21, "__version__": [815, 816, 817, 818, 820, 825, 827, 830, 831], "__\u4e2d\u7684\u505a\u6cd5": 766, "_aggre_typ": [721, 722, 761, 762, 805, 806], "_apply_fn": [825, 827], "_basedataloaderit": [825, 827], "_basenegativesampl": [226, 227], "_c_csc_graph": 827, "_call_overload_packet_from_python": 825, "_check_iterator_valid": [825, 827], "_check_sampler_argu": 827, "_collate_fn": [687, 733, 773], "_continu": 861, "_convert_to_homogeneous_nod": 827, "_convert_to_sampled_subgraph": 827, "_datapipe_it": [825, 827], "_dataset_fetch": [825, 827], "_dataset_kind": [825, 827], "_datasetkind": [825, 827], "_dgl_graph": [689, 735, 775], "_dist_train": 561, "_dst": 127, "_e": [4, 118, 125, 126, 231, 239, 398, 401, 409, 412, 415, 418, 632], "_etype_str_to_tupl": 319, "_etype_tuple_to_str": 320, "_extract_gz": [685, 732, 772], "_ffi": 22, "_ft": [705, 749, 790], "_g": [688, 734, 774], "_gener": 0, "_get_dgl_url": [688, 734, 774], "_get_next": [825, 827, 857], "_get_previ": 857, "_has_torchbind_op_overload": 825, "_hook_iter": [825, 827], "_i": [386, 402, 646, 665, 705, 749, 790, 820, 854, 861], "_id": [168, 186, 219, 245, 332, 336, 337, 473, 537, 553, 637, 638, 693, 694, 833], "_in_dst_feat": [718, 721, 761, 805], "_in_src_feat": [718, 721, 761, 805], "_info": [689, 735, 775], "_ini_api": 22, "_init_api": 22, "_initialize_edge_repr": 857, "_initialize_node_repr": 857, "_iterabledataset_len_cal": [825, 827], "_iterabledatasetfetch": [825, 827], "_iterdatapipeserializationwrapp": [825, 827], "_j": [402, 705, 749, 790, 820, 851, 861], "_k": [342, 432, 433, 434, 439], "_l": 854, "_label": [688, 734, 774], "_load_graph": [688, 734, 774], "_mean": [848, 851], "_method": [848, 851], "_must_dispatch_in_python": 825, "_n": [4, 238, 239, 398, 401, 409, 415, 418], "_name": [688, 734, 774], "_next_data": [825, 827], "_next_index": [825, 827], "_node_pairs_preprocess": 825, "_num_task": [688, 734, 774], "_num_yield": [825, 827], "_number_of_samples_yield": [825, 827], "_op": 825, "_out_feat": [718, 721, 761, 805], "_p": [450, 451], "_pin_memori": [825, 827], "_pin_memory_devic": [825, 827], "_preprocess": 825, "_preprocess_featur": [688, 734, 774], "_reset": [825, 827], "_sample_neighbor": 827, "_sample_per_lay": 827, "_sample_with_etyp": 714, "_sampler_it": [825, 827], "_seed_nod": 827, "_sha1_str": [685, 688, 732, 734, 772, 774], "_singleprocessdataloaderit": [825, 827], "_src": 127, "_static": [832, 833, 834, 835, 836, 837], "_t": 435, "_tag": [571, 572], "_tag_offset": [562, 571, 572], "_time": [825, 827], "_transform": [825, 827], "_type": [637, 638], "_type_kei": 22, "_u": [4, 125, 126, 412, 728, 754, 768, 796, 811, 848], "_url": [688, 734, 774], "_util": [825, 827], "_v": [125, 126, 412, 728, 754, 768, 796, 811, 820], "a1": [26, 820], "a2": [26, 820], "a_": [354, 385, 400, 411, 417, 420, 456, 705, 749, 790, 849, 850, 851, 857], "a_0": [178, 179], "a_1": [816, 857], "a_1x": 816, "a_2x": 816, "a_div": 718, "a_dst": 127, "a_hat": [815, 816, 820], "a_i": 816, "a_new": 820, "a_r": 816, "a_rx": 816, "a_src": 127, "a_t": 857, "a_tild": 816, "a_tre": 854, "ab": [118, 119, 127, 131, 134, 137, 146, 169, 171, 180, 182, 188, 349, 428, 555, 821, 840], "ab1": 26, "ab2": 26, "abil": 851, "abl": [694, 825, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 840], "about": [1, 20, 21, 22, 158, 244, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 388, 472, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 632, 679, 684, 691, 694, 696, 698, 699, 714, 727, 816, 836, 849, 850, 851, 854, 861], "abov": [5, 22, 130, 142, 178, 179, 210, 220, 245, 250, 251, 262, 263, 264, 265, 332, 336, 337, 354, 387, 388, 394, 403, 405, 406, 411, 412, 419, 420, 449, 453, 473, 537, 571, 572, 632, 682, 685, 688, 699, 702, 704, 705, 706, 710, 714, 716, 722, 725, 727, 728, 729, 818, 820, 826, 827, 844, 845, 848, 849, 851, 857, 860, 867], "absent": 316, "absolut": [201, 202, 694, 813], "abstract": [156, 291, 309, 313, 649, 684, 696, 710, 820], "abund": 727, "ac": 144, "academ": [151, 152, 159, 288, 694], "academi": 849, "acc": [729, 769, 812, 815, 816, 818, 827, 832, 834, 848, 850, 854, 866, 867], "acc_perm1": 850, "acc_perm2": 850, "acceler": [289, 391, 392, 393, 452, 694, 816, 841, 854, 861], "accept": [21, 22, 209, 308, 352, 392, 646, 700, 716, 785, 827, 833, 844], "access": [4, 22, 89, 108, 122, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 214, 287, 291, 293, 295, 315, 350, 353, 538, 688, 690, 694, 695, 699, 705, 711, 712, 716, 867], "accompani": 340, "accomplish": 860, "accord": [9, 39, 52, 78, 91, 92, 139, 140, 141, 209, 214, 216, 220, 226, 227, 231, 238, 239, 242, 296, 338, 385, 394, 441, 448, 496, 499, 553, 555, 562, 564, 566, 642, 643, 678, 694, 714, 721, 722, 806, 817, 851, 861], "accordingli": [95, 96, 125, 248, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 553, 686, 693, 825, 827], "account": [120, 844], "accumul": [574, 861], "accur": 832, "accuraci": [21, 292, 299, 729, 812, 815, 816, 818, 821, 827, 832, 834, 836, 844, 849, 850, 851, 860, 861, 867], "accuracy_scor": [827, 844], "achiev": [21, 22, 41, 384, 386, 396, 398, 401, 402, 404, 405, 406, 409, 412, 419, 706, 711, 717, 726, 728, 729, 817, 850, 860], "acl": 854, "acm": [134, 173], "acquaint": 813, "across": [22, 73, 113, 120, 128, 129, 130, 217, 244, 304, 413, 452, 453, 472, 638, 690, 691, 702, 722, 787, 841, 857, 866], "act": [234, 682, 861], "act_loss": 861, "act_loss_weight": 861, "action": [166, 426, 428], "action_step": 857, "activ": [151, 152, 180, 390, 391, 395, 396, 397, 402, 404, 405, 406, 407, 410, 412, 415, 417, 418, 419, 420, 443, 444, 630, 637, 666, 682, 719, 721, 722, 727, 761, 762, 803, 805, 806, 810, 815, 816, 848, 849, 851, 857, 860, 861], "actor": [134, 166], "actual": [4, 5, 22, 210, 221, 352, 556, 560, 561, 562, 722], "ad": [4, 10, 27, 28, 114, 115, 116, 142, 143, 150, 186, 189, 190, 288, 317, 348, 392, 417, 419, 454, 455, 648, 665, 686, 694, 701, 815, 829, 833, 840, 855, 857, 861, 864], "adagrad": [4, 10, 691, 777, 854], "adam": [4, 10, 423, 424, 425, 426, 427, 428, 690, 691, 711, 714, 716, 718, 719, 725, 727, 728, 729, 736, 737, 754, 755, 757, 759, 765, 767, 768, 769, 776, 777, 796, 797, 800, 802, 803, 809, 810, 811, 812, 815, 816, 817, 818, 825, 827, 832, 834, 835, 836, 844, 845, 848, 849, 850, 851, 861, 866, 867], "adapt": [13, 165, 196, 406, 420, 424, 425, 426, 713, 860], "adavantag": 851, "add": [9, 21, 22, 27, 28, 114, 115, 116, 117, 125, 132, 133, 135, 136, 140, 142, 143, 144, 150, 151, 152, 153, 154, 157, 158, 165, 170, 176, 189, 190, 191, 192, 198, 248, 252, 253, 266, 267, 276, 277, 339, 386, 390, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 441, 444, 486, 487, 497, 498, 501, 502, 503, 504, 505, 506, 527, 528, 619, 630, 645, 646, 647, 648, 658, 666, 678, 686, 688, 691, 705, 706, 710, 714, 749, 790, 818, 820, 829, 833, 837, 840, 841, 844, 848, 849, 851, 854, 861], "add_edg": [28, 95, 96, 115, 125, 248, 348, 455, 550, 551, 848, 857], "add_edge_ag": 857, "add_edge_log_p": 857, "add_edge_or_not": 857, "add_edges_from": 857, "add_nod": [27, 95, 96, 114, 348, 455, 550, 551, 857], "add_node_ag": 857, "add_node_and_upd": 857, "add_node_log_p": 857, "add_nodes_from": [125, 248], "add_on": 299, "add_reverse_edg": 833, "add_safe_glob": [825, 827, 830, 831], "add_self_loop": [386, 391, 393, 398, 401, 402, 403, 404, 405, 406, 409, 412, 415, 418, 419, 421, 422, 552, 803], "addbackward0": [390, 392, 395, 396, 403, 406, 409, 411, 412, 415, 417, 418], "addedg": [13, 857], "addit": [4, 8, 21, 121, 140, 148, 173, 179, 182, 229, 230, 239, 245, 246, 332, 336, 337, 354, 405, 406, 412, 413, 423, 424, 425, 426, 427, 428, 441, 442, 444, 473, 474, 537, 553, 604, 618, 680, 686, 688, 691, 694, 695, 702, 706, 710, 714, 722, 723, 726, 727, 814, 820, 844, 848, 851, 852, 857, 864], "addition": [220, 339, 557, 559, 639, 824, 861], "addmetapath": 13, "addmmbackward": [397, 407, 419, 420], "addmmbackward0": 393, "addnod": 857, "address": [210, 452, 695, 702, 712, 716, 719, 826, 844, 845, 857, 861], "addrevers": [13, 424, 425, 426, 650, 686], "addselfloop": [13, 719], "adj": [33, 118, 146, 169, 395, 396, 397, 835], "adj_extern": [571, 572], "adj_neg": 835, "adjac": [13, 30, 31, 32, 118, 119, 126, 131, 249, 286, 331, 334, 335, 341, 387, 395, 396, 397, 406, 419, 420, 454, 562, 571, 572, 646, 654, 655, 656, 661, 665, 693, 694, 726, 778, 815, 816, 817, 818, 820, 848, 850, 851], "adjust": [120, 729, 860, 861], "adopt": [425, 427, 690, 729, 832, 861], "advanc": [210, 292, 557, 559, 680, 690, 692, 694, 705, 709, 813, 841, 850, 854, 861], "advantag": [312, 694, 711, 712, 727, 816, 841, 851], "affect": [292, 299, 854], "affili": [694, 837], "affiliated_with": [694, 779], "affin": [388, 841, 861], "affinit": 841, "after": [4, 73, 91, 92, 93, 94, 95, 96, 100, 113, 167, 239, 290, 336, 337, 350, 351, 386, 398, 399, 401, 402, 404, 405, 406, 409, 412, 419, 421, 445, 454, 538, 550, 551, 555, 559, 571, 572, 638, 655, 656, 661, 664, 686, 688, 693, 694, 705, 717, 728, 814, 816, 830, 831, 835, 840, 844, 845, 850, 854, 857, 861, 866], "afterward": [4, 423, 424, 425, 426, 427, 428, 444, 834, 840], "ag": [698, 742, 783, 837], "again": [21, 637, 638, 694, 711, 714, 844, 850, 851, 867], "against": [21, 326, 728, 729, 821, 825, 827], "agg": [723, 763, 807], "agg_fn": [723, 763, 807], "aggreg": [5, 9, 73, 91, 92, 93, 94, 100, 111, 113, 117, 262, 263, 264, 265, 382, 386, 388, 391, 392, 393, 394, 396, 397, 398, 401, 402, 404, 405, 406, 407, 409, 412, 414, 415, 416, 418, 419, 423, 424, 425, 427, 453, 476, 477, 478, 479, 481, 482, 483, 484, 498, 500, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 518, 519, 522, 523, 524, 525, 548, 549, 640, 648, 668, 704, 705, 707, 713, 715, 718, 721, 722, 723, 727, 729, 761, 762, 763, 767, 769, 793, 796, 805, 806, 807, 810, 812, 815, 817, 826, 832, 834, 836, 844, 848, 849, 850, 851], "aggregate_radiu": 850, "aggregate\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 769, "aggregate\ub418\uace0": 799, "aggregate\ub97c": 810, "aggregation\ub9cc": 801, "aggregation\uc744": [805, 807], "aggregator_typ": [393, 407, 409, 415, 418, 721, 729, 761, 769, 805, 812, 827, 866], "aggregator_type\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 769, "aggress": 821, "aggretate\ud558\ub294": 799, "agnn": 386, "agnost": [9, 21], "agre": 860, "agreement": 860, "ahead": [835, 854], "ai": [23, 815, 816, 817, 818, 820, 821, 825, 827, 830, 831, 837, 857], "aifb": [132, 849], "aifbdataset": 849, "aim": [848, 849, 850, 851, 854, 857, 860, 861], "aka": 705, "al": [72, 135, 136, 555, 815, 817, 826, 832, 834, 848, 854], "albert": [141, 142, 143], "algorithm": [0, 3, 4, 6, 10, 209, 239, 291, 338, 351, 421, 426, 428, 429, 431, 553, 555, 560, 566, 691, 692, 694, 709, 713, 727, 816, 844, 852, 857, 860, 861, 864, 867], "alia": [1, 4, 29, 33, 44, 49, 50, 69, 76, 83, 84, 85, 86, 97, 98, 99, 104, 106, 111, 156, 228, 573, 599, 820], "align": [5, 9, 300, 851], "alist": [723, 763, 807], "aliv": 290, "all": [4, 5, 6, 9, 14, 20, 21, 22, 26, 30, 34, 35, 39, 41, 44, 45, 48, 51, 52, 53, 54, 56, 60, 61, 68, 70, 73, 77, 78, 79, 81, 82, 87, 88, 89, 95, 101, 102, 104, 105, 113, 117, 119, 121, 122, 126, 127, 128, 129, 130, 131, 133, 137, 143, 144, 146, 148, 156, 157, 158, 161, 164, 169, 179, 182, 184, 186, 189, 190, 191, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 226, 227, 231, 233, 238, 239, 240, 241, 242, 244, 246, 249, 288, 289, 291, 296, 300, 303, 304, 308, 312, 315, 316, 318, 329, 330, 331, 332, 338, 343, 350, 353, 354, 384, 388, 396, 401, 402, 406, 412, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 447, 453, 454, 472, 474, 476, 478, 481, 483, 499, 502, 504, 508, 510, 516, 518, 522, 524, 537, 538, 545, 546, 550, 552, 557, 558, 559, 560, 561, 562, 563, 566, 567, 632, 638, 640, 642, 643, 648, 655, 656, 661, 664, 670, 680, 686, 688, 690, 691, 692, 693, 694, 695, 697, 700, 701, 702, 705, 707, 709, 712, 713, 715, 716, 717, 722, 724, 725, 726, 727, 728, 729, 745, 786, 787, 796, 809, 812, 813, 816, 817, 818, 819, 820, 823, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 837, 840, 844, 848, 849, 850, 851, 854, 857, 860, 866, 867], "all_acc": 850, "all_edg": [555, 560, 561, 754, 796], "all_logit": [834, 835], "all_loss": 850, "all_nodes_set": [291, 303, 308, 713], "alloc": 234, "allow": [4, 20, 22, 30, 31, 32, 34, 35, 41, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 126, 131, 146, 169, 245, 246, 248, 249, 286, 290, 331, 332, 336, 337, 382, 384, 473, 475, 500, 537, 548, 550, 552, 560, 566, 569, 571, 572, 637, 686, 691, 694, 698, 699, 702, 712, 717, 719, 821, 825, 827, 830, 831, 834, 840, 844, 852, 861, 864, 866], "allow_dupl": 648, "allow_zero_in_degre": [386, 398, 401, 402, 404, 405, 406, 409, 412, 419], "allowlist": [825, 827, 830, 831], "almost": [231, 238, 562, 688, 711, 714, 716, 718, 725, 867], "alon": [832, 833], "along": [9, 20, 21, 48, 73, 91, 92, 93, 94, 100, 113, 165, 210, 298, 302, 307, 325, 348, 382, 438, 446, 500, 558, 559, 560, 591, 594, 595, 596, 598, 642, 643, 646, 696, 729, 815, 816, 820, 834, 850, 852, 861, 864, 866], "alongsid": [711, 813], "alp": [421, 422], "alpha": [178, 179, 387, 406, 421, 422, 443, 454, 661, 665, 851], "alpha1": [423, 424], "alpha2": [423, 424], "alpha_": [398, 402, 404, 405, 435, 851], "alpha_1": [423, 424], "alpha_2": [423, 424], "alpha_i": 453, "alreadi": [64, 71, 89, 108, 109, 117, 156, 159, 161, 162, 163, 200, 296, 317, 348, 577, 580, 582, 584, 587, 588, 600, 631, 684, 685, 686, 688, 700, 716, 724, 771, 825, 827, 830, 831, 834, 835, 837, 848, 861], "also": [0, 1, 2, 4, 5, 8, 14, 21, 22, 27, 28, 43, 44, 46, 70, 74, 101, 102, 103, 104, 114, 118, 119, 122, 130, 131, 144, 162, 174, 184, 214, 216, 220, 226, 227, 239, 240, 245, 246, 289, 292, 296, 309, 317, 318, 325, 330, 331, 332, 336, 337, 354, 382, 414, 415, 417, 423, 424, 425, 427, 452, 473, 474, 537, 550, 551, 554, 556, 562, 571, 572, 578, 579, 632, 637, 639, 680, 682, 684, 687, 688, 690, 691, 692, 693, 694, 697, 698, 700, 701, 702, 705, 710, 711, 712, 714, 715, 716, 725, 727, 729, 785, 817, 820, 826, 827, 828, 833, 834, 835, 836, 837, 840, 841, 844, 845, 849, 850, 851, 854, 857, 858, 860, 861, 864, 866, 867], "altern": [21, 22, 290, 821, 854, 860], "although": [4, 423, 424, 425, 426, 427, 428, 557, 559, 816, 833, 834, 835], "alwai": [21, 101, 102, 142, 143, 183, 189, 190, 200, 201, 239, 292, 297, 343, 350, 351, 430, 544, 555, 686, 693, 698, 826, 833], "always_preserv": 130, "am": 133, "amazon": [14, 21, 25, 135, 136, 137, 161, 162, 288, 788, 841], "amazon_co_buy_comput": 140, "amazonaw": [23, 688, 734, 774], "amazoncobui": [25, 135, 136], "amazoncobuycomputerdataset": [140, 197, 198], "amazoncobuydata": [688, 734, 774], "ambigu": [48, 57, 80], "among": [4, 14, 120, 161, 304, 336, 337, 384, 690, 715, 727, 830, 831, 835, 849, 850, 852, 857, 861, 862, 864], "amount": [244, 290, 472, 693, 860], "amp": [719, 803], "amp_dtyp": 719, "amp_en": 719, "amper": [9, 705, 790], "amplif": [394, 416], "amx": 719, "an": [0, 1, 4, 6, 7, 9, 14, 20, 21, 22, 31, 32, 34, 36, 39, 44, 46, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 64, 71, 73, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 104, 107, 109, 112, 113, 116, 118, 119, 126, 128, 131, 138, 140, 147, 151, 152, 156, 162, 165, 167, 168, 172, 173, 180, 181, 182, 186, 188, 207, 209, 210, 211, 212, 217, 220, 232, 233, 234, 239, 240, 242, 244, 245, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 296, 298, 299, 300, 302, 304, 307, 308, 309, 311, 313, 324, 331, 332, 335, 338, 339, 340, 341, 349, 352, 354, 388, 391, 392, 393, 396, 397, 402, 404, 405, 406, 407, 410, 412, 413, 414, 417, 418, 420, 421, 422, 423, 424, 425, 427, 429, 430, 432, 438, 445, 472, 496, 499, 537, 548, 549, 553, 555, 556, 557, 558, 559, 560, 562, 566, 571, 572, 578, 579, 627, 630, 631, 632, 637, 638, 640, 642, 643, 646, 648, 649, 651, 654, 655, 656, 658, 659, 661, 666, 670, 672, 678, 680, 682, 685, 686, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 704, 705, 706, 707, 709, 710, 711, 713, 714, 715, 716, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 732, 772, 796, 800, 807, 810, 814, 815, 817, 818, 824, 825, 827, 830, 831, 832, 833, 835, 836, 837, 840, 841, 844, 845, 848, 849, 851, 852, 854, 857, 861, 864, 866, 867], "analog": 851, "analogu": [183, 207, 562], "analysi": [134, 688, 854, 857], "analyz": 5, "andd": 120, "angl": [391, 402, 404, 405], "angstrom": 178, "ani": [4, 5, 20, 21, 22, 26, 70, 116, 121, 130, 131, 148, 207, 210, 214, 216, 219, 220, 234, 239, 286, 289, 292, 296, 298, 299, 312, 313, 331, 332, 335, 336, 337, 341, 349, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 386, 387, 392, 400, 406, 412, 423, 424, 425, 426, 427, 428, 431, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 473, 474, 537, 554, 560, 561, 562, 563, 564, 591, 594, 595, 596, 631, 632, 634, 635, 636, 637, 638, 640, 653, 664, 680, 686, 691, 700, 702, 710, 719, 725, 727, 785, 787, 796, 816, 824, 825, 826, 827, 829, 830, 831, 834, 835, 844, 848, 849, 850, 851, 857, 860, 861, 866], "ani2": 860, "anim": [713, 816, 826, 850, 857, 860], "annot": [184, 854, 861], "anonym": [4, 145], "anoth": [4, 21, 48, 130, 142, 162, 179, 220, 302, 307, 341, 421, 555, 637, 700, 711, 718, 725, 728, 729, 816, 821, 830, 831, 833, 835, 849, 850, 851, 857], "answer": 180, "anyth": 21, "anywher": [164, 685], "apach": [23, 813, 814], "apart": 698, "api": [0, 4, 7, 8, 21, 22, 41, 56, 68, 101, 102, 234, 240, 241, 291, 350, 562, 640, 684, 687, 688, 690, 693, 698, 699, 700, 701, 702, 704, 710, 716, 719, 722, 723, 738, 755, 759, 776, 779, 797, 802, 807, 813, 815, 816, 817, 818, 820, 821, 833, 834, 848, 850, 851, 855, 862, 864, 866], "apinn": [720, 729, 758, 760, 769, 804, 812], "api\u4e5f\u652f\u6301python\u7684\u53ef\u8fed\u4ee3\u7c7b\u578b": 745, "api\u4e5f\u80fd\u5904\u7406\u7279\u5f81\u6570\u636e\u548c\u56fe\u7ea7\u522b\u7684\u6807\u7b7e\u6570\u636e": 742, "api\u4ee5\u6613\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u52a0\u8f7d\u7684\u683c\u5f0f\u6784\u9020\u5212\u5206\u7ed3\u679c": 738, "api\u4ee5\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u4fe1\u606f\u65f6": 746, "api\u548c": 762, "api\u5c06": 744, "api\u5c06\u5f02\u6784\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 746, "api\u5c06\u65b0id\u5206\u914d\u7ed9\u8f93\u5165\u56fe\u7684\u8282\u70b9\u548c\u8fb9": 738, "api\u7684\u8f93\u5165": 745, "api\uac00": 779, "api\uacfc": 779, "api\ub294": [776, 777, 779, 786], "api\ub4e4": [777, 783, 784, 786, 787, 789], "api\ub4e4\uacfc": 789, "api\ub4e4\uc740": [777, 783], "api\ub4e4\uc744": [773, 777, 783, 786], "api\ub4e4\uc758": 777, "api\ub4e4\uc774": 771, "api\ub4e4\uc774\ub2e4": 777, "api\ub85c": 790, "api\ub97c": [774, 776, 777, 778, 779, 783, 785, 787, 803], "api\uc5d0": 779, "api\uc5d0\uc11c\ub294": 786, "api\uc640": 806, "api\uc740": 779, "api\uc758": 777, "appear": [36, 51, 52, 131, 219, 331, 632, 711], "append": [292, 298, 299, 312, 382, 680, 713, 714, 718, 719, 723, 763, 803, 807, 816, 817, 825, 827, 834, 837, 844, 845, 848, 849, 850, 851, 857, 860, 861, 867], "appendix": [183, 302], "appendix_c": 183, "appi": [386, 397, 398, 401, 402, 404, 406, 409, 412, 419], "appl": 22, "appli": [0, 1, 9, 20, 27, 28, 73, 91, 92, 93, 94, 100, 113, 116, 117, 121, 148, 220, 240, 289, 296, 305, 348, 354, 382, 383, 385, 388, 391, 392, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 417, 418, 419, 420, 423, 424, 432, 433, 434, 439, 444, 445, 446, 447, 448, 449, 453, 454, 455, 497, 498, 597, 617, 619, 648, 650, 654, 655, 656, 661, 663, 686, 702, 704, 706, 721, 722, 725, 727, 810, 817, 820, 833, 840, 848, 849, 850, 851, 854, 861], "applic": [14, 138, 220, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 435, 817, 835, 836, 854, 857], "apply_edg": [5, 9, 20, 35, 455, 669, 670, 671, 672, 673, 705, 706, 719, 725, 728, 749, 750, 755, 757, 765, 768, 790, 792, 797, 800, 803, 809, 811, 851, 861], "apply_func": [407, 408, 849], "apply_nod": [34, 861], "apply_node_func": [73, 91, 92, 93, 94, 100, 113, 539, 540, 541, 542, 543, 708, 752, 794, 854], "apply_norm": 392, "appnp": [387, 665], "appoint": 6, "appreci": 854, "approach": [131, 286, 302, 331, 338, 429, 430, 431, 544, 566, 690, 694, 700, 702, 705, 706, 850, 858, 860, 864], "appropri": [120, 210, 213, 719, 861], "approv": 21, "approx": 406, "approxim": [14, 338, 387, 429, 431, 566, 665], "apt": [814, 844], "ar": [1, 4, 5, 6, 9, 10, 11, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 78, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 135, 136, 137, 140, 142, 143, 145, 147, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 163, 165, 171, 173, 174, 178, 179, 180, 182, 186, 187, 188, 191, 192, 193, 195, 197, 210, 213, 214, 216, 217, 219, 220, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 304, 307, 308, 309, 312, 313, 314, 315, 316, 318, 329, 330, 331, 332, 335, 336, 337, 338, 342, 348, 349, 350, 354, 380, 382, 384, 385, 386, 388, 394, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 429, 430, 431, 441, 443, 444, 448, 452, 454, 455, 472, 473, 474, 475, 497, 500, 537, 538, 540, 544, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 571, 572, 574, 600, 608, 610, 611, 613, 614, 619, 623, 631, 632, 634, 635, 636, 638, 640, 642, 643, 647, 648, 654, 664, 678, 680, 684, 686, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 705, 706, 707, 709, 710, 711, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 746, 754, 771, 775, 786, 787, 793, 796, 797, 812, 814, 815, 816, 817, 818, 819, 820, 821, 822, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 840, 844, 848, 849, 850, 851, 852, 854, 855, 857, 860, 861, 862, 864, 867], "arang": [9, 20, 95, 96, 117, 157, 158, 191, 209, 217, 219, 220, 245, 292, 297, 299, 300, 301, 314, 322, 332, 336, 337, 380, 384, 473, 537, 550, 551, 552, 553, 604, 605, 608, 614, 615, 616, 626, 648, 651, 652, 694, 710, 711, 755, 756, 797, 799, 830, 831, 835, 836, 845, 849, 860], "arbitrari": [4, 20, 48, 111, 125, 248, 300, 352, 413, 555, 640, 668, 682, 686, 694, 726, 728, 818, 825, 827, 830, 831, 833, 835, 857], "arbitrarili": 668, "arc": 697, "architectur": [9, 438, 682, 705, 817, 849, 850, 861], "archiv": 201, "archlinux": 844, "archwiki": 844, "area": 835, "arena": 841, "arg": [22, 121, 312, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 413, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 690, 714, 736, 754, 757, 776, 796, 800, 825, 827, 840, 845, 866, 867], "argmax": [815, 816, 827, 832, 834, 836, 844, 849, 854], "argo_scal": 840, "argo_tutori": [823, 840, 843], "argument": [4, 20, 22, 34, 36, 37, 51, 54, 73, 93, 94, 100, 108, 113, 117, 121, 122, 131, 140, 210, 211, 212, 213, 216, 220, 239, 245, 286, 290, 312, 322, 331, 332, 336, 337, 343, 351, 352, 382, 411, 413, 423, 424, 425, 426, 427, 428, 453, 473, 500, 537, 553, 559, 560, 561, 563, 564, 571, 572, 632, 637, 640, 678, 694, 695, 700, 701, 705, 710, 712, 716, 726, 785, 797, 798, 815, 825, 833, 835, 841, 844, 851], "argument\ub85c": 802, "ari": [818, 854], "arnold": 854, "around": [290, 827, 867], "arr": [4, 314, 691, 737, 777], "arrai": [4, 7, 21, 101, 102, 125, 126, 148, 197, 198, 205, 207, 217, 220, 232, 239, 248, 249, 309, 314, 553, 557, 558, 559, 562, 571, 572, 578, 579, 686, 691, 694, 702, 779, 829, 830, 831, 837, 844, 850], "arrang": [553, 571, 572, 688], "array_lik": 207, "array\ub294": 779, "array\ub4e4\uc5d0": 777, "array\ub4e4\uc744": 777, "array\ub4e4\uc758": 777, "array\ub97c": 786, "arrow": [826, 850], "arrows": 854, "art": [693, 821, 861], "articl": [149, 182, 185, 192, 833, 841], "arxiv": [134, 137, 146, 147, 161, 162, 169, 171, 174, 180, 182, 188, 195, 288, 427, 428, 443, 555, 716, 718, 766, 821, 827, 840, 861, 867], "as_edge_prediction_sampl": [214, 216], "as_tensor": 817, "as_tupl": [688, 734, 774, 779, 849, 850], "asarrai": [4, 691, 737, 777], "ascend": [197, 205, 286, 296, 438, 563], "asgraphpreddataset": 817, "aslinkpreddataset": 845, "aspect": [178, 179, 857], "aspirincod": 747, "assembl": [857, 861], "assert": [89, 121, 219, 688, 734, 754, 774, 796, 825, 827], "assertionerror": 827, "assign": [4, 27, 28, 39, 52, 78, 114, 115, 125, 141, 142, 143, 147, 173, 221, 222, 223, 224, 225, 231, 235, 238, 239, 240, 248, 350, 351, 538, 553, 562, 638, 691, 692, 693, 694, 699, 700, 701, 725, 729, 744, 785, 809, 834, 837, 844, 849, 850, 861], "associ": [43, 46, 47, 74, 75, 103, 197, 205, 240, 241, 304, 382, 413, 424, 426, 557, 559, 560, 561, 562, 563, 691, 697, 702, 726, 787, 849, 850, 851, 860, 861], "assum": [48, 130, 207, 210, 214, 215, 216, 217, 219, 221, 240, 244, 296, 309, 322, 341, 423, 472, 557, 559, 560, 561, 562, 637, 686, 688, 690, 691, 694, 724, 725, 727, 728, 779, 832, 834, 837, 844, 845, 857, 861, 866, 867], "assume_num_node_within_int32": 309, "assumpt": [20, 695, 841, 850], "assur": 678, "astyp": [398, 399, 402, 404, 405, 415, 837], "asv": 821, "asym_a": 820, "asymmetr": 697, "async": [825, 827], "asynchron": 210, "aten": 817, "atom": [177, 178, 179, 195, 388, 440], "atom_encod": 817, "atomencod": 817, "att": [414, 861], "att_anim": 861, "att_map": 861, "att_weight_map": 861, "attach": [4, 141, 142, 143, 189, 190, 691, 849, 860], "attempt": 200, "attend": [857, 861], "attent": [9, 354, 386, 391, 398, 399, 402, 404, 405, 414, 421, 422, 433, 436, 437, 441, 443, 444, 446, 447, 448, 453, 630, 646, 666, 682, 719, 820, 823, 852, 853, 862, 864], "attention_weight": 402, "attenu": [394, 416], "attn": [441, 817], "attn_aft": 422, "attn_bef": 421, "attn_bia": [441, 444, 682], "attn_bias_typ": [441, 444], "attn_drop": [402, 404, 405, 441], "attn_dropout": [421, 422, 443, 444], "attn_fc": 851, "attn_head": 851, "attn_mask": [441, 444, 680, 682], "attr": [165, 179, 423, 427, 428, 443, 597, 617, 727, 766, 767, 779, 810, 836, 866], "attract": [73, 113], "attribut": [22, 122, 125, 140, 149, 159, 165, 179, 185, 186, 247, 248, 289, 296, 300, 302, 307, 324, 639, 642, 643, 678, 692, 694, 707, 725, 779, 832, 833, 836, 837, 861], "attrvisitor": 22, "auc": [825, 835, 845], "augment": [443, 645, 651, 652, 653, 694, 815, 850], "auroc": 825, "aut": 861, "authent": 844, "author": [145, 151, 152, 177, 178, 179, 181, 308, 315, 388, 646, 685, 694, 697, 716, 779, 848, 849, 850, 851, 854, 857, 860, 861], "author___affiliated_with___institut": 694, "author___writes___pap": 694, "authorship": [151, 152], "auto": [21, 22, 813, 820, 825, 827, 840, 861, 867], "auto_cast_to_optimal_dtyp": 308, "autocast": [719, 803], "autoencod": 849, "autograd": [9, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 574, 821], "autom": 21, "automat": [4, 21, 22, 156, 221, 289, 299, 414, 417, 421, 556, 637, 685, 691, 692, 694, 705, 710, 715, 719, 803, 820, 844, 845, 848], "auxiliari": [693, 694], "av": 394, "avail": [4, 21, 118, 119, 148, 168, 183, 186, 207, 239, 288, 338, 429, 431, 564, 566, 686, 690, 715, 727, 729, 816, 821, 841, 858, 861, 864], "averag": [4, 10, 137, 149, 175, 177, 181, 183, 185, 195, 244, 394, 396, 412, 432, 472, 640, 655, 656, 661, 727, 810, 820, 834, 835, 836, 851, 861, 866, 867], "avg": 25, "avg_deg": 183, "avg_degre": [655, 656, 661], "avg_loss": [817, 861], "avgpool": [423, 428], "avoid": [21, 34, 70, 73, 89, 93, 94, 100, 113, 116, 130, 220, 292, 299, 322, 335, 341, 386, 396, 398, 401, 402, 404, 405, 406, 409, 412, 419, 441, 443, 444, 554, 560, 561, 562, 563, 631, 638, 640, 680, 691, 694, 698, 706, 717, 723, 867], "aw": [288, 841], "awai": [4, 855, 864], "awar": [710, 727, 851], "awesom": 21, "ax": [816, 857, 860], "axi": [401, 848, 850, 851, 860], "b": [6, 22, 26, 45, 79, 82, 105, 118, 119, 121, 127, 128, 129, 131, 179, 309, 310, 317, 349, 385, 390, 399, 402, 404, 405, 410, 412, 417, 425, 427, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 446, 447, 448, 456, 496, 499, 548, 549, 555, 604, 608, 613, 614, 625, 626, 632, 637, 642, 643, 647, 692, 722, 727, 754, 755, 757, 759, 762, 767, 796, 797, 800, 802, 806, 810, 818, 820, 849, 850, 854, 857, 860], "b_": [850, 857, 860], "b_dst": 127, "b_h": 861, "b_iou": 854, "b_o": 861, "b_size": 840, "b_src": 127, "ba": [118, 127, 131, 141, 142, 143, 349, 555], "bachman": 837, "back": [21, 22, 44, 104, 122, 555, 637, 640, 692, 714, 799, 825, 833], "backend": [3, 4, 6, 8, 9, 21, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 210, 214, 215, 216, 219, 245, 246, 247, 248, 249, 286, 331, 332, 336, 337, 338, 348, 354, 429, 430, 431, 432, 433, 434, 435, 439, 440, 455, 473, 474, 537, 544, 566, 568, 631, 633, 637, 638, 639, 647, 653, 659, 664, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 690, 691, 698, 700, 720, 724, 736, 737, 776, 777, 785, 817, 821, 841, 844, 845, 851, 854, 866, 867], "backend_unittest": 21, "backprop": [719, 803], "backpropag": 716, "backpropagate\ub97c": 802, "backtrack": [69, 341, 659, 850], "backup": 690, "backward": [4, 9, 10, 118, 119, 380, 384, 423, 424, 425, 426, 427, 428, 452, 690, 691, 709, 710, 711, 714, 716, 718, 719, 725, 727, 728, 729, 736, 737, 754, 755, 757, 759, 765, 767, 768, 769, 776, 777, 796, 797, 800, 802, 803, 809, 810, 811, 812, 815, 816, 817, 818, 825, 827, 832, 834, 835, 836, 844, 845, 848, 849, 850, 851, 854, 866, 867], "backwards\ub97c": 796, "bad": [21, 22, 441, 442, 444, 446, 447, 850], "bag": [135, 136, 155, 187, 193], "baidu": 21, "balanc": [189, 190, 239, 350, 351, 454, 693, 844], "balance_edg": [209, 239, 350, 351, 694, 738, 779, 844, 845], "balance_ntyp": [209, 239, 350, 351, 694, 738, 779, 844], "balkance_edg": 209, "ban": 188, "bandwidth": 290, "bar": [120, 815, 816, 820], "barab\u00e1si": [141, 142, 143], "barrier": [4, 840], "baryshnikov": 849, "base": [4, 6, 13, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 231, 238, 239, 242, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 475, 538, 555, 557, 559, 597, 607, 617, 630, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 682, 684, 691, 692, 701, 710, 722, 727, 728, 816, 821, 824, 825, 827, 830, 831, 835, 836, 837, 849, 850, 851, 860, 861], "base_dir": [308, 830, 831], "baselin": 821, "basenam": [830, 831], "basetransform": [13, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668], "bash": [21, 814], "basi": [385, 392, 417, 448, 456, 716, 849], "basic": [7, 9, 156, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 684, 687, 693, 696, 813, 819, 832, 834, 835, 837, 844, 845, 850, 857, 861, 867], "basicfeaturestor": [303, 315], "batch": [4, 6, 7, 13, 20, 22, 27, 28, 36, 37, 38, 53, 54, 95, 96, 101, 102, 114, 115, 116, 117, 128, 129, 130, 165, 168, 172, 183, 186, 208, 210, 213, 220, 245, 246, 292, 299, 305, 332, 335, 338, 340, 341, 349, 380, 384, 385, 390, 401, 410, 421, 425, 427, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 445, 446, 447, 448, 473, 474, 537, 548, 549, 550, 551, 552, 554, 560, 566, 568, 569, 570, 605, 606, 613, 631, 640, 641, 642, 643, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 687, 688, 690, 691, 705, 708, 709, 712, 716, 717, 722, 733, 736, 737, 739, 767, 773, 776, 777, 780, 799, 813, 817, 820, 824, 840, 851, 857, 861], "batch_depend": 214, "batch_f": [432, 433, 434, 435, 436, 437, 438, 439, 440], "batch_first": [442, 680, 721, 761, 805], "batch_g": [432, 433, 434, 435, 436, 437, 438, 439, 440], "batch_input": [690, 736, 776, 844, 845], "batch_label": [690, 736, 776, 844], "batch_norm": [401, 410, 445], "batch_num_edg": [95, 96, 122, 678, 727, 810, 836], "batch_num_nod": [96, 122, 678, 727, 810, 836], "batch_pr": [690, 736, 776, 844, 845], "batch_siz": [4, 122, 183, 209, 210, 213, 214, 215, 216, 219, 220, 292, 298, 299, 302, 307, 316, 380, 384, 423, 427, 428, 441, 443, 444, 687, 688, 690, 691, 710, 711, 712, 713, 714, 716, 717, 718, 727, 733, 734, 736, 737, 754, 755, 756, 757, 759, 767, 773, 774, 776, 777, 796, 797, 798, 799, 800, 802, 810, 817, 825, 827, 836, 840, 844, 845, 850, 854, 861, 866, 867], "batch_tre": 854, "batch_walk": 380, "batched_g": 817, "batched_graph": [165, 168, 172, 186, 213, 727, 767, 810, 836, 850, 854], "batched_label": [165, 168, 172, 186, 850], "batched_pmpd": 850, "batchedgraph": 861, "batcher": 854, "batcher_dev": 854, "batchnorm": 413, "batchnorm1": 817, "batchnorm1d": [413, 817, 850], "batchnorm2": 817, "bbg": 122, "bc": 118, "bcewithlogitsloss": [817, 851], "bdd": [385, 417], "beam": 861, "beat": 21, "becam": 167, "becasu": 317, "becaus": [4, 9, 21, 22, 34, 73, 93, 94, 100, 113, 122, 131, 286, 331, 382, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 562, 691, 692, 693, 698, 706, 712, 713, 728, 818, 834, 844, 850, 851, 858, 864, 867], "becom": [122, 126, 131, 248, 249, 286, 331, 418, 550, 616, 711, 861], "been": [4, 22, 120, 131, 162, 173, 188, 230, 286, 290, 331, 385, 414, 417, 562, 688, 695, 712, 716, 817, 830, 831, 850, 854, 861], "befor": [4, 21, 89, 108, 117, 126, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 223, 224, 225, 234, 249, 290, 292, 299, 317, 350, 421, 422, 433, 444, 452, 538, 549, 556, 559, 562, 664, 680, 682, 691, 692, 693, 694, 712, 714, 717, 719, 820, 832, 837, 840, 844, 850, 851, 854, 858, 861, 864, 866, 867], "begin": [349, 443, 754, 796, 818, 819, 844, 850, 851, 857, 866], "beginn": 813, "behavior": [229, 230, 308, 691, 698, 728, 837, 841, 857, 860, 861], "behind": [691, 849, 866], "being": [21, 45, 79, 82, 105, 108, 122, 214, 216, 219, 245, 248, 302, 307, 332, 336, 337, 473, 537, 548, 549, 554, 560, 571, 572, 835, 850, 857, 860], "believ": 841, "belong": [4, 68, 116, 142, 143, 174, 181, 189, 190, 197, 205, 220, 229, 230, 231, 235, 238, 239, 304, 342, 350, 538, 631, 678, 693, 694, 725, 818, 837, 849, 850, 858, 864], "below": [4, 5, 22, 89, 131, 220, 239, 286, 292, 331, 335, 416, 417, 456, 566, 655, 656, 661, 686, 688, 690, 691, 692, 693, 694, 695, 699, 701, 702, 709, 710, 718, 722, 726, 815, 816, 817, 818, 820, 821, 830, 831, 840, 844, 845, 848, 850, 851, 857, 860, 861, 866], "benchmark": [22, 132, 135, 136, 146, 151, 152, 153, 159, 162, 169, 179, 192, 338, 339, 342, 410, 471, 658, 687, 694, 733, 773, 817, 827], "benefici": 706, "benefit": [688, 694, 824, 835], "benign": 161, "bernoulli": [724, 725, 764, 765, 808, 809, 857], "bernoulli_": [754, 796], "bernoulli_action_log_prob": 857, "bert": [159, 861], "besid": [159, 343, 413, 564, 690, 706, 714, 721, 723, 857, 861], "best": [4, 14, 392, 547, 662, 684, 712, 717, 771, 820, 823, 827, 832, 833, 835, 842, 843, 851], "best_test_acc": [832, 834], "best_val_acc": [832, 834], "beta": [4, 10, 386, 389, 406, 861], "beta1": [4, 10, 423, 424], "beta2": [4, 10, 423, 424], "beta_": 448, "beta_1": [423, 424], "beta_2": [423, 424], "beta_l": 406, "better": [21, 630, 666, 688, 701, 713, 774, 818, 821, 833, 837, 840, 841, 850], "between": [4, 5, 26, 48, 56, 66, 72, 101, 102, 116, 118, 119, 142, 147, 149, 155, 166, 174, 178, 179, 182, 185, 187, 193, 195, 207, 226, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 296, 302, 307, 338, 388, 406, 409, 426, 428, 429, 431, 441, 446, 447, 448, 452, 454, 538, 556, 557, 560, 566, 567, 571, 572, 640, 682, 692, 694, 697, 702, 711, 717, 725, 727, 728, 817, 818, 820, 833, 835, 837, 848, 849, 850, 851, 857, 860, 861, 866], "bewteen": [398, 404, 405], "beyond": [120, 243, 244, 472, 694, 834, 835], "bf": 542, "bf16": 719, "bfs_nodes_gener": [0, 542], "bg": [36, 37, 38, 95, 96, 116, 122, 128, 129, 144, 423, 425, 427, 428, 548, 549, 568, 569, 570, 642, 643, 678, 701, 727, 745, 767, 786, 810, 866], "bg1": [116, 631], "bhg": [122, 678], "bi": [6, 340, 631, 861], "bi_part": 398, "bia": [383, 390, 391, 392, 393, 395, 396, 397, 399, 402, 403, 404, 405, 406, 409, 411, 412, 415, 417, 418, 419, 420, 441, 444, 446, 447, 448, 449, 562, 682, 718, 721, 761, 805, 848, 849, 851, 854], "bias": 448, "biasedmha": 682, "bidecod": [725, 765], "bidirect": [116, 162, 173, 220, 339, 430, 544, 555, 631, 658, 833], "big": [402, 727], "bigger": [836, 855, 864], "billion": [694, 709], "bilstm": 453, "bin": [204, 343, 564, 689, 693, 735, 775, 779, 837], "binar": 854, "binari": [5, 9, 161, 163, 171, 180, 186, 189, 190, 239, 454, 497, 498, 564, 680, 693, 694, 705, 779, 790, 818, 835, 851, 854], "binary_cross_entropy_with_logit": [714, 825, 835, 845], "binaryreducebackward": [386, 398, 404], "bind": [388, 814, 840], "bio": 841, "bipartit": [9, 26, 44, 45, 68, 79, 82, 104, 105, 116, 118, 119, 125, 126, 130, 349, 389, 391, 392, 393, 396, 397, 398, 399, 401, 402, 404, 405, 409, 412, 415, 418, 545, 555, 562, 632, 697, 702, 722, 723, 782, 787, 797, 806, 807, 826, 850, 860], "bipartite_from_networkx": 126, "bipartite_from_scipi": 125, "bisect": [350, 351, 692], "bisect_left": 692, "bit": [21, 22, 334, 701, 728, 857, 861], "bitcoin": 145, "bitcoinotc": [25, 145], "bitcoinotcdata": [688, 734, 774], "bitcoinotcdataset": [685, 732, 772], "bla": [14, 338, 429, 431, 566], "blitz": [813, 823, 837, 839], "blitz_1_introduct": 832, "blitz_2_dglgraph": 833, "blitz_3_message_pass": 834, "blitz_4_link_predict": 835, "blitz_5_graph_classif": 836, "blitz_6_load_data": 837, "bloat16": 719, "blob": [165, 210, 825, 827, 830, 831, 840], "block": [4, 10, 127, 131, 180, 183, 210, 214, 215, 216, 220, 291, 304, 385, 417, 437, 452, 632, 690, 691, 692, 710, 711, 713, 714, 715, 716, 718, 720, 722, 723, 736, 737, 754, 755, 756, 757, 758, 759, 762, 776, 777, 778, 796, 797, 799, 800, 801, 802, 804, 806, 817, 825, 827, 840, 844, 845, 849, 850, 851, 857, 867], "block3": [754, 796], "block_diag": 850, "block_id": [754, 796], "block_typ": 437, "blocksampl": [214, 216, 712, 754, 796, 798], "blog": [822, 841], "blue": 816, "bmatrix": 818, "bmm": 849, "bn": 850, "board": 841, "bodi": 22, "boil": 848, "boldsymbol": [728, 754, 768, 796, 811], "bond": [177, 179, 195], "book": [137, 231, 236, 238, 693, 694, 822], "bool": [4, 6, 10, 31, 48, 57, 58, 65, 66, 67, 95, 96, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 207, 210, 213, 214, 216, 217, 219, 226, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 245, 286, 290, 292, 296, 299, 302, 307, 308, 309, 321, 323, 332, 335, 336, 337, 338, 339, 341, 350, 351, 380, 383, 384, 385, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 441, 443, 444, 445, 449, 454, 473, 537, 538, 540, 542, 543, 544, 550, 551, 553, 554, 556, 557, 559, 560, 561, 562, 563, 566, 567, 568, 630, 631, 632, 638, 640, 642, 643, 644, 646, 647, 648, 658, 659, 664, 666, 684, 686, 688, 724, 725, 731, 754, 764, 765, 771, 774, 779, 796, 808, 809, 829, 837, 844, 845, 857], "boolean": [53, 54, 210, 213, 216, 231, 238, 245, 296, 302, 307, 326, 333, 473, 561, 679, 691, 725, 729, 777, 832, 844], "booltensor": 851, "boost": 717, "borrow": [22, 199, 200, 727], "both": [0, 9, 21, 22, 44, 56, 62, 63, 73, 89, 104, 116, 118, 119, 130, 134, 149, 155, 181, 185, 187, 193, 210, 216, 230, 296, 302, 304, 307, 308, 317, 335, 341, 348, 349, 382, 396, 397, 398, 399, 402, 403, 404, 405, 412, 414, 415, 418, 442, 448, 473, 474, 554, 564, 591, 594, 595, 596, 598, 608, 613, 614, 631, 632, 637, 638, 640, 686, 690, 691, 694, 696, 701, 702, 704, 705, 713, 719, 725, 820, 821, 829, 832, 833, 835, 837, 844, 849, 850, 851, 852, 857, 861, 864], "bother": [685, 820], "bottom": [142, 143, 854], "bought": [135, 136, 137, 697, 712, 782], "bound": [234, 442, 447, 562, 719, 827], "boundari": 816, "bpr": [728, 811], "branch": [21, 192, 693, 779], "brand": 22, "breadth": [123, 124, 557], "break": [51, 219, 825, 827, 861], "breviti": 688, "brew": 814, "brief": [696, 850], "briefli": 816, "bring": [20, 661, 717], "broadcast": [5, 9, 128, 129, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 318, 407, 418, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 605, 618, 619, 620, 621, 622, 705], "broadcast_edg": 129, "broadcast_nod": 128, "broken": 851, "brook": 747, "brookhuang16211": 747, "bruteforc": [14, 338, 429, 431, 566], "bsddmm": 817, "bspmm": 817, "bucket": 13, "budget": 217, "buffer": [234, 292, 299, 338, 429, 431, 566, 717], "buffer_devic": 713, "buffer_s": [292, 299], "bugfix": 21, "bui": [545, 697, 782], "build": [14, 22, 157, 158, 191, 214, 215, 216, 234, 302, 432, 433, 434, 435, 436, 437, 438, 439, 440, 560, 681, 688, 691, 698, 702, 703, 709, 712, 715, 724, 727, 729, 774, 813, 814, 817, 818, 819, 832, 835, 836, 851, 854, 857], "build_dgl": 814, "build_ext": [21, 814], "build_hidden_lay": 849, "build_input_lay": 849, "build_model": 849, "build_output_lay": 849, "built": [3, 9, 13, 22, 34, 73, 91, 92, 93, 94, 100, 113, 162, 179, 181, 288, 691, 704, 706, 719, 722, 726, 727, 729, 749, 790, 803, 806, 813, 820, 821, 824, 834, 848, 851, 854, 857], "builtin": [9, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 688, 689, 714, 715, 816, 825, 834, 835, 848, 849, 851], "builtindataset": [716, 718, 825, 827, 867], "builtinfunct": [34, 73, 91, 92, 93, 94, 100, 113], "bulit": [34, 73, 93, 94, 100, 113], "bunch": [694, 722], "busi": 194, "button": 21, "buyer": 697, "bwtype": 555, "byte": 234, "c": [6, 21, 22, 25, 118, 119, 120, 121, 151, 152, 179, 183, 192, 288, 291, 342, 391, 392, 393, 400, 410, 413, 454, 496, 701, 786, 814, 816, 827, 840, 854, 860, 861], "c_": [178, 179, 396, 403, 412, 849, 851, 854, 860], "c_csc_graph": 296, "c_etyp": [319, 320, 424, 426, 707, 751, 793], "c_etype_func_dict": [424, 426], "c_etype_str": [319, 320], "c_i": 849, "c_j": 854, "c_k": [342, 388], "c_sampled_subgraph": 827, "cach": [23, 138, 139, 140, 142, 143, 148, 156, 189, 190, 209, 210, 217, 297, 419, 689, 714, 800, 815, 816, 818, 832, 834, 835, 841, 848, 849, 850, 851], "cache_path": 209, "cache_s": 297, "caculatorgetbrand": 22, "cal": [178, 179], "calc": 22, "calcul": [4, 22, 313, 322, 391, 392, 393, 430, 475, 544, 569, 570, 571, 572, 597, 617, 638, 690, 694, 727, 810, 816, 820, 825, 850, 851, 857, 860, 861, 867], "calculate_gain": [718, 721, 761, 805, 849, 851], "calculatorobject": 22, "call": [0, 4, 6, 9, 21, 22, 26, 45, 52, 66, 79, 82, 105, 108, 117, 118, 119, 131, 145, 156, 217, 239, 286, 292, 299, 331, 354, 382, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 421, 423, 424, 425, 426, 427, 428, 471, 554, 560, 562, 613, 637, 638, 642, 643, 678, 688, 691, 692, 693, 694, 697, 700, 701, 702, 705, 706, 707, 708, 716, 721, 722, 723, 725, 727, 728, 744, 785, 790, 817, 825, 826, 827, 830, 831, 832, 833, 834, 844, 850, 851, 854, 857, 861, 862, 864, 867], "callabl": [4, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 121, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 220, 292, 299, 352, 382, 391, 396, 397, 402, 404, 405, 406, 407, 408, 410, 412, 415, 417, 418, 419, 420, 443, 444, 452, 539, 540, 541, 542, 543, 555, 650, 721, 825, 827], "came": 22, "can": [4, 5, 6, 7, 9, 12, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 73, 74, 75, 77, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 117, 118, 119, 120, 122, 125, 128, 129, 130, 131, 147, 156, 161, 163, 168, 186, 197, 207, 210, 213, 214, 216, 217, 220, 221, 229, 230, 231, 233, 234, 239, 240, 241, 244, 245, 246, 248, 286, 290, 292, 296, 299, 302, 304, 307, 308, 309, 314, 315, 331, 332, 336, 337, 338, 340, 350, 351, 354, 381, 382, 383, 384, 386, 388, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 404, 405, 406, 409, 411, 412, 415, 417, 418, 419, 421, 429, 430, 431, 433, 441, 445, 448, 449, 450, 451, 452, 453, 456, 472, 473, 475, 500, 537, 538, 544, 548, 549, 550, 551, 552, 553, 556, 559, 560, 561, 562, 563, 566, 569, 570, 571, 572, 616, 632, 637, 638, 640, 642, 643, 665, 679, 680, 682, 684, 685, 686, 688, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 732, 772, 784, 813, 814, 816, 817, 818, 819, 820, 821, 824, 825, 826, 827, 829, 832, 833, 834, 835, 836, 840, 841, 844, 845, 848, 849, 850, 851, 852, 854, 857, 858, 860, 861, 862, 864, 866], "candid": [338, 429, 431, 566], "cannot": [4, 20, 21, 210, 304, 332, 336, 337, 427, 473, 537, 691, 692, 694, 699, 700, 702, 705, 724, 744, 746, 785, 787], "canon": [4, 26, 36, 39, 46, 48, 51, 52, 57, 66, 80, 109, 131, 239, 319, 320, 331, 384, 424, 639, 647, 654, 702, 787, 824, 829, 830], "canonical_etyp": [4, 52, 66, 109, 382, 424, 425, 426, 647, 702, 707, 715, 723, 746, 751, 754, 755, 757, 758, 763, 787, 793, 796, 797, 800, 801, 807, 849], "cap": 840, "capabl": [210, 719, 861], "capac": [1, 9, 297, 566, 694, 705, 709, 851, 852, 864], "capav": [178, 179], "capsul": [354, 823, 862, 863, 864], "captur": [697, 707], "care": [162, 423, 424, 425, 426, 427, 428], "carlo": [426, 428], "carri": [289, 693, 694, 727], "cartesian": 448, "case": [4, 5, 9, 14, 21, 22, 27, 32, 34, 41, 42, 44, 48, 51, 73, 93, 94, 100, 104, 108, 109, 113, 116, 125, 126, 131, 140, 181, 200, 210, 214, 231, 238, 248, 249, 286, 331, 340, 349, 354, 386, 389, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 409, 412, 415, 418, 419, 432, 433, 434, 435, 436, 437, 438, 439, 440, 454, 455, 559, 567, 571, 572, 613, 619, 637, 678, 680, 685, 686, 689, 691, 694, 701, 702, 706, 710, 712, 715, 716, 722, 725, 806, 818, 820, 825, 827, 830, 831, 835, 837, 841, 844, 849, 850, 851, 854, 861], "case1": [449, 453, 591, 594, 595, 596, 597, 598, 607, 609, 610, 611, 612, 617, 623, 647, 648, 653, 654, 659, 663, 664, 668], "case2": [449, 453, 591, 594, 595, 596, 597, 598, 607, 609, 610, 611, 612, 617, 623, 647, 648, 653, 654, 659, 663, 664, 668], "case3": [449, 453, 597, 607, 609, 612, 617, 623, 647, 648], "case4": 449, "case\ub4e4\uc5d0": 779, "casio": 22, "cast": [64, 71, 131, 286, 308, 331, 392, 634, 635, 636, 817], "cat": [157, 158, 191, 220, 298, 312, 432, 433, 434, 435, 436, 437, 438, 439, 440, 446, 449, 453, 566, 680, 706, 711, 715, 725, 750, 755, 758, 765, 792, 797, 801, 809, 816, 817, 825, 834, 835, 837, 845, 850, 851, 857, 860, 867], "cat_feat": [706, 750, 792], "catbackward": 435, "catch": [825, 827], "categor": [160, 194, 725, 833, 841, 849, 857], "categori": [5, 132, 133, 135, 136, 144, 150, 154, 155, 161, 170, 176, 187, 193, 714, 729, 820, 832, 835, 836, 837, 849], "category_id": 849, "caus": [290, 292, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 722, 840], "caution": 4, "cc": [22, 167, 693, 779], "cd": [21, 137, 814], "cdgnn": 850, "cdot": [116, 120, 186, 386, 390, 393, 394, 398, 401, 402, 413, 414, 415, 418, 435, 449, 554, 665, 722, 754, 762, 796, 806, 816, 834, 854, 857, 860, 861], "cedric": 860, "cell": [171, 825, 827], "center": [384, 423, 424, 425, 427, 448, 833], "cento": 814, "central": 834, "centric": [696, 821], "centuri": 854, "certain": [27, 150, 154, 176, 560, 561, 571, 572, 698, 707, 721, 836, 860], "certif": 200, "certifi": [825, 827, 830, 831], "cetyp": 849, "chain": [182, 307, 312, 698, 717, 783, 835, 848, 854, 857, 861], "chainer": 21, "challeng": [151, 152, 854, 855, 857, 858, 864], "chameleon": 149, "chang": [1, 6, 26, 64, 70, 71, 131, 145, 177, 178, 179, 286, 331, 419, 571, 572, 685, 686, 688, 716, 719, 825, 827, 840, 857, 866], "channel": [413, 850, 851, 861], "chapter": [1, 3, 5, 11, 20, 632, 684, 692, 693, 694, 703, 708, 715, 722, 727, 729, 840, 841], "char": 22, "charact": 857, "character": [120, 244, 472, 727, 818], "characterist": [244, 472, 707], "charg": 690, "charset": [825, 827, 830, 831], "chart": 684, "cheatsheet": 5, "chebconv": 395, "chebnet": 390, "chebyshev": [390, 395], "check": [21, 22, 56, 65, 66, 67, 101, 102, 156, 199, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 562, 684, 685, 688, 689, 693, 694, 708, 710, 719, 771, 772, 775, 813, 814, 815, 816, 817, 818, 821, 835, 849, 851, 857, 866], "check_eq_shap": [722, 762, 806], "check_sha1": [685, 732, 772], "checkout": 21, "checkpoint": [698, 840], "chee": 860, "chemic": 857, "chemistri": [179, 388, 415], "chen": 747, "child": 854, "children": [426, 428], "china": 23, "choic": [23, 454, 497, 545, 546, 693, 835, 836], "choos": [126, 131, 226, 227, 245, 248, 249, 286, 296, 331, 473, 545, 546, 557, 559, 562, 638, 692, 729, 814, 820, 826, 841], "choose_dest": 857, "choose_dest_ag": 857, "choose_dest_and_upd": 857, "choose_dest_log_p": 857, "choosedestandupd": 857, "chosen": [146, 169, 195, 226, 227, 240, 241, 296, 300, 316, 338, 425, 427, 560, 561, 562, 563, 814], "chrsmrr": [168, 186], "chunk": [692, 854], "chunk_graph": 694, "chunkfilespec": 694, "ci": 21, "cifar10": [146, 169], "cikm": 162, "circ": [389, 441, 817], "circl": 857, "circular": 172, "citat": [150, 153, 154, 176, 288, 661, 818, 832, 835, 850], "citation2": [288, 845], "citation_graph": [850, 851], "citationdata": [688, 734, 774], "citationgraphdataset": [25, 150, 154, 176, 688, 734, 774], "citationgraphdataset\u6e90\u4ee3\u7801": 734, "cite": [308, 694, 779, 818, 835, 849, 850], "citegrh": [850, 851], "cites": [25, 150, 688, 734, 774, 821], "citeseergraphdataset": [688, 719, 724, 729, 734, 764, 769, 774, 808, 812], "citizen": 22, "cla": [816, 857, 860], "clamp": [442, 447, 454, 680, 728, 768, 800, 811, 861], "clang": 814, "class": [0, 1, 4, 6, 8, 10, 13, 22, 31, 120, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 243, 244, 249, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 342, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 555, 606, 613, 624, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 683, 685, 686, 688, 691, 692, 710, 711, 713, 714, 715, 716, 718, 719, 721, 723, 725, 727, 728, 729, 731, 734, 754, 755, 756, 757, 758, 759, 761, 763, 765, 767, 768, 769, 771, 774, 796, 797, 799, 800, 801, 802, 803, 805, 807, 809, 810, 811, 812, 815, 816, 817, 818, 819, 820, 825, 827, 828, 829, 832, 834, 835, 836, 837, 841, 844, 845, 848, 849, 850, 851, 854, 860, 866, 867], "classic": [421, 710, 813, 816, 860, 861], "classif": [2, 120, 122, 132, 133, 135, 136, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 159, 160, 161, 163, 165, 167, 168, 169, 170, 172, 175, 176, 181, 186, 189, 190, 192, 194, 209, 210, 211, 213, 214, 215, 216, 219, 220, 244, 288, 302, 304, 307, 396, 412, 423, 424, 425, 426, 427, 428, 438, 454, 472, 651, 654, 691, 694, 709, 714, 718, 724, 728, 809, 811, 815, 821, 823, 824, 825, 834, 835, 838, 839, 845, 846, 847, 848, 849, 850, 851, 857, 868, 869], "classifi": [149, 155, 185, 187, 193, 426, 428, 727, 728, 729, 767, 810, 848, 849, 850], "claud": 854, "clean": [21, 683, 702, 705], "clear": [851, 861], "clearli": [21, 851], "clf": [380, 860], "cli": 21, "click": [21, 220, 724, 725, 728, 764, 765, 768, 808, 809, 811, 816], "click_dst": [724, 764, 808], "click_src": [724, 764, 808], "client": [4, 234], "cliqu": 172, "clock": [183, 207], "clone": [21, 56, 64, 71, 89, 108, 413, 634, 635, 636, 693, 779, 814, 850, 857, 861], "cloner": 21, "close": [178, 380, 384, 688, 816, 851, 860, 861], "cloud": [6, 14, 21, 338, 401, 429, 431, 566], "club": [167, 698, 742, 783, 816, 837], "cluster": [4, 6, 147, 209, 553, 690, 691, 693, 694, 695, 821, 844, 845, 850], "cluster_gcn": 209, "cm": 816, "cmake": 814, "cmap": [816, 850], "cn": 23, "cnn": [401, 409, 833, 861], "cnt": 640, "co": [4, 134, 135, 136, 137, 151, 152, 288, 386, 388, 449, 646, 818, 820], "coalesc": [239, 585, 640, 668, 718, 820], "coarsen": 6, "coauthor": [25, 151, 152, 697], "coauthordata": [688, 734, 774], "code": [4, 22, 130, 145, 164, 166, 175, 177, 178, 179, 183, 184, 196, 199, 200, 209, 220, 234, 289, 382, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 685, 687, 688, 690, 691, 692, 698, 699, 701, 702, 704, 705, 710, 711, 715, 716, 717, 718, 719, 720, 722, 725, 726, 727, 729, 739, 774, 780, 815, 816, 817, 818, 820, 821, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 852, 854, 855, 857, 858, 860, 861, 862, 864, 866, 867], "coef": [426, 428, 655], "coeffici": [4, 10, 385, 417, 422, 454, 456, 475, 655, 849, 860], "coff_budget": [425, 427], "coff_connect": [425, 427], "col": [609, 623, 820, 850], "col_sort": 286, "colab": 819, "collab": [25, 165, 168, 186], "collaps": 164, "collat": [183, 213, 680], "collate_dgl": 817, "collate_fn": [4, 183, 213, 380, 384, 687, 690, 691, 733, 736, 737, 773, 776, 777, 817, 825, 827, 850, 854], "collect": [5, 7, 22, 122, 133, 164, 240, 241, 296, 388, 425, 427, 452, 687, 690, 691, 824, 825, 849, 850, 854, 857, 866, 867], "colon": 694, "color": [22, 816, 818, 826, 850, 851], "colorbar": 851, "column": [4, 31, 32, 118, 119, 131, 286, 309, 318, 322, 324, 331, 338, 395, 396, 397, 544, 575, 576, 578, 579, 591, 594, 595, 596, 597, 598, 609, 610, 611, 617, 619, 623, 653, 686, 702, 746, 787, 818, 820, 837, 844, 845, 850], "com": [21, 23, 135, 136, 151, 152, 153, 159, 162, 165, 210, 679, 688, 693, 734, 747, 774, 779, 788, 814, 825, 827, 830, 831, 840, 841], "combin": [20, 26, 239, 385, 389, 416, 417, 422, 433, 449, 456, 564, 638, 694, 704, 705, 706, 713, 716, 725, 729, 816, 832, 836, 849, 851, 861], "combine_nam": 26, "come": [134, 149, 155, 185, 187, 193, 300, 392, 417, 453, 638, 835, 857, 861], "comma": 686, "command": [21, 691, 693, 695, 814, 815, 816, 817, 818, 820, 844, 850], "comment": [21, 181, 715], "commerc": 818, "commerci": 159, "commit": 21, "committ": 21, "committor": 21, "common": [14, 21, 26, 130, 160, 210, 213, 386, 396, 398, 401, 402, 404, 405, 406, 409, 412, 419, 698, 702, 705, 706, 708, 719, 722, 723, 725, 727, 807, 813, 824, 825, 833, 837, 844, 849, 851, 866], "commonli": [12, 128, 129, 384, 440, 548, 549, 555, 632, 656, 661, 665, 683, 691, 697, 705, 720, 721, 836, 848], "commun": [21, 142, 147, 167, 174, 181, 183, 234, 239, 351, 690, 691, 693, 694, 727, 852, 864, 866], "comp_cor": 840, "compact": [130, 296, 298, 302, 304, 307, 309, 318, 329, 330, 423, 424, 714, 718, 825], "compact_graph": 712, "compact_temporal_nod": 825, "compacted_csc_format": [318, 330], "compacted_mat": 718, "compacted_negative_dst": [289, 299, 304, 825], "compacted_negative_src": [289, 299, 304, 825], "compacted_node_list": 329, "compacted_node_pair": [289, 299, 302, 304, 825], "compacted_pair": [714, 825], "compacted_se": 304, "compani": 384, "companion": [850, 852, 864], "compar": [120, 156, 244, 300, 472, 560, 566, 715, 722, 728, 729, 820, 850, 851, 861], "comparison": [21, 821], "compat": [8, 21, 548, 549, 709, 719, 724, 727, 814, 820], "competit": [860, 867], "compil": [9, 22, 693, 705], "complet": [13, 52, 338, 451, 682, 688, 693, 725, 729, 765, 809, 818, 820, 832, 835, 840, 849, 851, 854, 857, 860, 861, 866], "complex": [9, 338, 429, 431, 566, 686, 707, 817, 834, 835, 851, 857, 861], "complic": [335, 721, 725], "compon": [11, 122, 229, 230, 291, 304, 338, 566, 568, 682, 683, 690, 691, 696, 725, 727, 825, 827, 836, 844, 861], "compos": [3, 13, 22, 159, 174, 245, 288, 332, 336, 337, 338, 384, 416, 456, 473, 537, 566, 817, 824, 849, 851], "composit": [22, 304, 317], "compress": [578, 579, 610, 611, 820], "comput": [0, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 60, 70, 87, 122, 126, 131, 135, 136, 151, 192, 210, 211, 212, 214, 215, 216, 220, 222, 223, 224, 225, 239, 242, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 302, 304, 309, 331, 338, 339, 341, 354, 380, 382, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 454, 456, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 547, 555, 560, 566, 567, 569, 570, 591, 594, 595, 596, 598, 613, 630, 640, 658, 662, 666, 674, 675, 676, 677, 680, 682, 688, 690, 691, 694, 696, 704, 705, 706, 707, 709, 711, 713, 714, 715, 716, 717, 719, 722, 725, 726, 728, 729, 779, 797, 799, 802, 809, 811, 812, 815, 816, 817, 818, 820, 821, 824, 825, 826, 832, 833, 834, 835, 836, 841, 844, 845, 848, 849, 850, 851, 854, 857, 862, 864, 866, 867], "computation": 861, "compute_auc": 835, "compute_cor": [840, 841], "compute_loss": [710, 711, 716, 728, 754, 755, 757, 759, 768, 796, 797, 800, 802, 811, 835], "compute_mod": [430, 544], "conan": 854, "conatin": 304, "concat": [393, 418, 722, 762, 806, 834, 851, 857, 861], "concat_message_funct": [706, 750, 792], "concat_typ": 558, "concat_vid": 558, "concat_vtyp": 558, "concaten": [26, 122, 296, 388, 413, 416, 432, 433, 434, 435, 436, 437, 438, 439, 440, 449, 453, 558, 638, 672, 702, 706, 711, 722, 725, 727, 746, 765, 787, 806, 809, 816, 827, 830, 835, 836, 844, 850, 851, 854, 861], "concentr": [851, 860], "concept": [144, 214, 215, 216, 696, 711, 716, 813, 816, 834, 851], "concis": [9, 705], "conclus": 851, "concret": 89, "concurr": 691, "conda": [391, 392, 393, 825, 827, 830, 831, 840, 848, 851], "condit": [182, 244, 414, 417, 421, 422, 472, 702, 857], "conduct": [14, 161, 163, 302, 307, 496, 688, 693, 709, 727], "confid": 726, "config": [235, 236, 237, 553, 693, 694, 779, 814], "configur": [0, 4, 21, 217, 239, 691, 693, 694, 695, 779, 814, 840, 841, 844, 845, 849, 857], "conflict": 167, "confus": 857, "conjunct": 866, "connect": [1, 4, 96, 120, 130, 133, 137, 144, 151, 152, 161, 162, 163, 171, 173, 174, 178, 180, 181, 182, 188, 220, 229, 230, 234, 335, 338, 341, 349, 350, 388, 391, 394, 402, 404, 405, 409, 410, 413, 415, 416, 425, 427, 538, 551, 555, 566, 571, 572, 632, 646, 657, 678, 691, 697, 725, 726, 727, 728, 817, 818, 824, 832, 833, 836, 844, 845, 848, 849, 850, 851, 857, 860, 861], "consecut": [6, 32, 95, 96, 125, 131, 207, 248, 286, 304, 331, 562, 571, 572, 692, 694, 702, 833], "consequ": [713, 833], "consid": [53, 54, 197, 205, 214, 216, 296, 302, 307, 380, 384, 388, 555, 560, 567, 571, 572, 694, 706, 709, 713, 715, 726, 816, 818, 820, 825, 827, 833, 834, 835, 841, 850, 854, 857, 860], "consider": 857, "consist": [164, 166, 173, 177, 178, 179, 192, 240, 241, 291, 296, 304, 313, 340, 555, 562, 567, 632, 697, 711, 716, 720, 818, 825, 827, 832, 835, 837, 848, 850, 851, 861], "const": 22, "constant": [143, 168, 179, 189, 190, 244, 400, 409, 410, 472, 680, 728, 849, 851, 861], "constexpr": 22, "constitu": [184, 854], "constrain": [195, 425, 427, 861], "constraint": [72, 239, 298, 312, 350, 351, 702, 857], "constrant": [239, 350, 351], "construct": [0, 4, 125, 130, 131, 141, 142, 143, 189, 190, 196, 210, 239, 248, 286, 296, 304, 331, 338, 350, 351, 429, 430, 431, 544, 555, 566, 632, 686, 691, 694, 698, 700, 702, 706, 712, 720, 722, 728, 785, 815, 817, 818, 825, 827, 830, 831, 835, 844, 850, 861, 866], "construct_negative_graph": [728, 768, 811], "constructor": [4, 12, 455, 710], "consum": [290, 299, 706, 719], "consumpt": [706, 712, 713, 719, 821], "contain": [0, 2, 4, 6, 11, 21, 27, 28, 53, 54, 57, 58, 73, 114, 115, 116, 121, 130, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 160, 164, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 186, 191, 192, 194, 195, 207, 220, 235, 239, 240, 241, 246, 286, 291, 296, 298, 302, 303, 304, 307, 308, 312, 317, 325, 331, 338, 343, 348, 350, 381, 386, 389, 394, 397, 398, 399, 402, 404, 405, 407, 408, 409, 412, 418, 429, 430, 431, 448, 455, 474, 538, 544, 560, 561, 562, 563, 566, 571, 572, 585, 631, 632, 639, 680, 686, 687, 691, 693, 694, 695, 701, 707, 711, 716, 725, 728, 809, 811, 820, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 844, 850, 854, 855, 857, 864], "containertyp": 22, "content": [26, 159, 199, 201, 353, 685, 686, 694, 715, 732, 772, 833, 841], "context": [4, 21, 31, 42, 62, 63, 70, 89, 108, 125, 126, 131, 210, 245, 246, 248, 249, 286, 292, 296, 302, 304, 307, 309, 331, 332, 336, 337, 354, 384, 473, 474, 537, 545, 546, 560, 561, 562, 563, 632, 690, 701, 707, 712, 816, 833, 867], "contextlib": [825, 827], "context\ub97c": 798, "contigu": [4, 318, 329, 330, 350, 538, 566, 693, 713, 844], "continu": [296, 389, 638, 686, 709, 723, 763, 807, 821], "contrari": [116, 818], "contrast": [240, 645, 651, 652, 653, 697, 713, 728, 768, 811, 832, 849, 851, 860], "contrib": 861, "contribut": [425, 427, 560, 720, 861], "control": [0, 4, 13, 93, 113, 308, 387, 426, 428, 545, 546, 557, 642, 643, 655, 656, 661, 686, 813, 825, 827, 830, 831, 841], "contruct": [729, 812], "conv": [13, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 425, 427, 457, 458, 459, 460, 461, 462, 463, 464, 718, 720, 722, 729, 760, 769, 804, 806, 812], "conv1": [406, 427, 428, 711, 716, 727, 729, 755, 756, 757, 759, 767, 769, 797, 799, 800, 802, 810, 812, 815, 827, 832, 834, 835, 836, 866], "conv2": [406, 427, 428, 711, 716, 727, 729, 755, 756, 757, 759, 767, 769, 797, 799, 800, 802, 810, 812, 815, 827, 832, 834, 835, 836, 866], "conveni": [9, 684, 725, 835, 866], "convent": [0, 5, 125, 133, 144, 705], "converg": [214, 292, 299, 302, 560, 719, 816], "convers": [22, 554, 600, 638, 693, 698, 701, 719, 820], "convert": [9, 22, 109, 110, 118, 119, 125, 126, 127, 138, 139, 140, 146, 148, 169, 239, 247, 248, 249, 319, 320, 322, 323, 582, 584, 587, 588, 600, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 667, 668, 686, 692, 693, 694, 698, 701, 714, 718, 719, 786, 820, 825, 833, 837, 844, 845, 849, 850], "convert_partit": 779, "convnet": 851, "convolut": [134, 149, 155, 185, 187, 193, 209, 382, 385, 388, 389, 390, 392, 395, 396, 397, 400, 406, 407, 409, 410, 411, 412, 414, 415, 417, 418, 419, 420, 421, 443, 456, 471, 555, 630, 651, 654, 655, 666, 709, 715, 723, 725, 727, 729, 765, 795, 801, 809, 810, 812, 816, 819, 822, 823, 834, 836, 850, 851, 852, 853, 857, 860, 861, 864], "convolutin": 850, "convolution\uc740": 807, "convolution\uc744": 812, "convolution\uc758": 812, "coo": [31, 32, 41, 56, 126, 131, 239, 249, 286, 322, 331, 564, 586, 609, 820, 850], "coo_matrix": [126, 249, 835, 850], "coolwarm": 850, "cooper": 166, "coord": 448, "coord_feat": 400, "coord_feat_out": 400, "coordin": [12, 31, 126, 178, 179, 249, 309, 338, 400, 409, 430, 448, 544, 566, 576, 586, 609, 623, 820], "coordint": 409, "copi": [5, 7, 9, 34, 40, 56, 64, 71, 73, 89, 93, 94, 100, 108, 113, 116, 126, 130, 131, 234, 245, 246, 248, 249, 286, 289, 290, 296, 304, 309, 311, 314, 315, 331, 332, 335, 336, 337, 341, 349, 413, 473, 474, 480, 481, 482, 483, 484, 485, 537, 553, 554, 560, 561, 562, 563, 571, 572, 601, 631, 634, 635, 636, 637, 639, 640, 647, 670, 671, 673, 693, 694, 700, 702, 705, 706, 712, 717, 744, 749, 785, 787, 790, 799, 817, 827, 833, 834, 835, 837, 850, 854, 857, 861, 867], "copy_": [5, 20, 670, 854, 860, 861], "copy_edata": [99, 111, 116, 130, 554, 560, 561, 562, 563, 640, 647], "copy_fil": [739, 780], "copy_lh": [497, 498], "copy_ndata": [99, 111, 116, 130, 335, 554, 560, 561, 562, 563, 631, 640], "copy_rh": [497, 498], "copy_to": [289, 290, 710, 711, 713, 714, 716, 717, 718, 825, 827, 867], "copy_to_shared_memori": [296, 311], "copy_u": [5, 73, 91, 92, 93, 94, 100, 113, 423, 424, 426, 455, 673, 674, 675, 676, 677, 707, 715, 719, 722, 726, 751, 758, 762, 766, 793, 801, 803, 806, 834, 848, 850, 854], "copy_u_sum": 9, "copy_v": 9, "copyreducebackward": 401, "copyto": 825, "cora": [25, 153, 154, 288, 688, 734, 774, 815, 816, 818, 821, 825, 835, 848], "cora_v2": [139, 688, 734, 774, 815, 816, 818], "corabinari": 850, "coraful": 25, "corafulldata": [688, 734, 774], "corafulldataset": 219, "coragraphdataset": [139, 380, 423, 427, 815, 816, 818, 825, 832, 834, 835, 848], "core": [8, 691, 696, 815, 820, 821, 823, 841, 842, 843, 848, 851, 854, 866], "cornel": 155, "corner": 722, "corpu": 861, "correct": [21, 22, 729, 769, 812, 848], "correctli": [220, 694, 814, 850], "correspond": [7, 20, 21, 22, 27, 43, 46, 53, 54, 74, 90, 101, 102, 103, 107, 109, 113, 117, 118, 119, 122, 134, 139, 147, 148, 156, 165, 178, 179, 182, 192, 205, 210, 213, 214, 216, 221, 231, 238, 239, 296, 300, 301, 302, 304, 307, 309, 317, 318, 329, 330, 338, 341, 354, 382, 391, 392, 393, 402, 413, 422, 425, 429, 430, 431, 441, 444, 448, 449, 453, 544, 554, 556, 558, 567, 610, 611, 630, 638, 646, 648, 658, 659, 666, 686, 692, 694, 701, 702, 705, 714, 715, 716, 723, 726, 727, 729, 815, 816, 817, 818, 825, 827, 830, 831, 832, 834, 850, 851, 854, 861], "correspondenc": 385, "corrsepond": 4, "corrupt": [560, 561, 562, 563, 691, 777], "cosin": [338, 429, 431, 449, 566], "cost": [9, 14, 210, 638], "costli": [637, 713, 826], "could": [9, 21, 22, 32, 66, 216, 239, 240, 241, 289, 291, 292, 296, 299, 308, 317, 354, 386, 387, 432, 434, 438, 439, 497, 498, 555, 564, 571, 572, 637, 666, 686, 688, 692, 694, 706, 710, 714, 715, 727, 729, 820, 825, 827, 830, 831, 835, 841, 850, 854], "coulomb": 177, "count": [111, 302, 338, 429, 431, 566, 591, 594, 595, 596, 640, 668, 832, 841], "counter": 840, "counterpart": [211, 212, 292, 299, 317, 691, 694, 844, 845], "coupl": 860, "cours": [155, 187, 193], "coustom": 782, "cout": 22, "covari": 409, "cover": [14, 21, 209, 690, 691, 692, 693, 694, 698, 709, 717, 813, 819, 826, 861], "cp": 384, "cpp": [817, 837, 850], "cpplint": 21, "cpu": [4, 9, 10, 14, 21, 31, 42, 62, 63, 89, 108, 112, 118, 119, 125, 126, 130, 131, 209, 210, 216, 217, 240, 241, 248, 249, 286, 291, 314, 331, 334, 338, 341, 349, 429, 430, 431, 544, 545, 546, 553, 557, 558, 560, 561, 562, 563, 566, 571, 572, 632, 639, 640, 694, 700, 711, 712, 713, 716, 717, 744, 756, 785, 798, 799, 813, 814, 816, 817, 820, 823, 825, 827, 830, 831, 832, 843, 844, 845, 848, 851, 854, 861, 866], "cpu_best_practis": [823, 841, 843], "cpu_count": 867, "cpu\uc5d0\uc11c\ub9cc": 798, "cpu\uc758": 799, "crawlscript": 747, "creat": [1, 3, 4, 5, 9, 12, 13, 21, 22, 27, 28, 41, 42, 44, 48, 51, 55, 56, 57, 58, 60, 61, 64, 65, 70, 71, 77, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 104, 107, 109, 116, 118, 119, 125, 126, 128, 129, 131, 138, 139, 148, 156, 157, 158, 191, 197, 205, 220, 234, 245, 247, 248, 249, 286, 292, 296, 299, 300, 324, 331, 332, 336, 337, 348, 353, 354, 381, 382, 414, 417, 432, 433, 434, 435, 437, 438, 439, 440, 452, 537, 548, 549, 554, 555, 559, 564, 568, 569, 570, 607, 609, 610, 611, 612, 623, 627, 640, 642, 643, 650, 669, 672, 683, 685, 686, 688, 690, 691, 692, 694, 695, 696, 699, 700, 701, 708, 711, 716, 718, 719, 723, 725, 732, 772, 774, 776, 786, 787, 803, 814, 815, 816, 817, 827, 830, 831, 832, 835, 836, 844, 845, 848, 850, 851, 854, 857, 860, 861, 867], "create_block": [127, 632], "create_dataload": [827, 867], "create_dev_conda_env": 814, "create_featur": 849, "create_formats_": [56, 89, 712], "create_train_dataload": 825, "createcacul": 22, "createcalcul": 22, "creation": [4, 210, 690, 722, 827, 833, 837], "credit": [832, 833, 834, 835, 836, 837], "crisi": 166, "criteria": [710, 844], "criterion": [192, 423, 427, 428, 861, 866], "critic": [9, 21, 22, 137, 171, 180, 182, 188, 423, 424, 426, 428, 698, 851], "cross": [73, 101, 102, 693, 694, 707, 728, 793, 811, 835, 849, 850, 861], "cross_entropi": [424, 425, 426, 711, 718, 719, 725, 727, 729, 765, 767, 769, 803, 809, 810, 812, 816, 818, 827, 832, 834, 836, 849, 850, 867], "cross_reduc": 73, "cross_sum": 73, "crossentropyloss": [423, 427, 428, 690, 719, 736, 776, 815, 844, 845, 866], "crowdsourc": 188, "crucial": [423, 424, 425, 427], "cs224w": 832, "csc": [32, 41, 56, 89, 131, 239, 286, 296, 309, 318, 324, 330, 331, 562, 564, 571, 610, 820], "csc_format": [318, 330], "csc_indptr": [296, 322, 324, 718, 827, 830, 831], "cscforamtbas": 310, "cscformatbas": [296, 298, 302, 307, 309, 310, 318, 330], "cscsamplinggraph": 310, "csr": [32, 41, 56, 118, 119, 126, 131, 239, 249, 286, 331, 562, 564, 571, 572, 611, 820], "csr_csc_g": 56, "csr_g": 56, "csr_matrix": [126, 249], "csrc": [837, 850], "csrmmbackward": 118, "csv": [148, 308, 683, 685, 694, 732, 772, 779, 829, 830, 831], "csvdataset": 686, "csvdatatset": 686, "csv\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u683c\u5f0f": 742, "csv\uac00": 783, "ctx": [31, 62, 63], "cu": 384, "cu118": [815, 816, 817, 818], "cuda": [4, 14, 89, 108, 110, 125, 126, 210, 247, 248, 249, 286, 289, 290, 297, 314, 325, 331, 338, 391, 392, 393, 429, 431, 566, 577, 600, 633, 700, 711, 716, 719, 744, 754, 755, 757, 759, 785, 796, 797, 798, 800, 802, 803, 814, 815, 816, 817, 818, 825, 827, 832, 861, 866, 867], "cuda_g": [700, 744, 785], "cuda\ub294": 798, "cudf": 247, "cugraph": [13, 110, 247, 391, 392, 393, 633], "cugraph_g": [110, 247, 633], "cugraph_graph": 247, "cugraphbaseconv": [391, 392, 393], "cumsum": 692, "cup": [151, 152], "cur": [692, 778], "current": [1, 4, 14, 20, 21, 27, 28, 56, 130, 138, 139, 144, 200, 220, 231, 235, 238, 239, 243, 292, 350, 351, 403, 406, 452, 553, 559, 600, 691, 710, 813, 814, 825, 827, 830, 831, 845, 854], "current_devic": [210, 297], "curv": [835, 851], "cuspars": [118, 119], "custom": [4, 194, 213, 382, 412, 553, 632, 682, 683, 684, 692, 694, 697, 709, 711, 712, 714, 716, 717, 718, 720, 723, 729, 771, 800, 824, 827, 837], "customgraphconv": [715, 758, 801], "customheterographconv": [715, 758, 801], "customiz": [300, 729], "customized_parser_dataset": 686, "customized_sample_neg": 714, "customized_sample_neighbor": 710, "customizednegativesampl": 714, "customizedneighborsampl": 710, "cut": [239, 351, 682, 694, 779], "cuthil": 553, "cutoff": [178, 388], "cutom": 718, "cv": [178, 179], "cycl": [141, 172, 189, 245, 332, 473, 537, 857], "cycle_s": 189, "cython": [21, 814], "d": [4, 9, 14, 21, 120, 138, 139, 140, 146, 169, 170, 178, 179, 232, 242, 325, 351, 385, 387, 390, 394, 401, 406, 410, 414, 416, 417, 419, 420, 422, 423, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 445, 446, 450, 451, 454, 496, 499, 548, 549, 597, 607, 609, 610, 611, 612, 614, 615, 616, 617, 619, 623, 627, 642, 643, 665, 675, 676, 677, 686, 701, 727, 767, 810, 815, 816, 817, 820, 827, 835, 848, 850, 860, 866], "d1": [385, 496, 499, 820], "d2": [385, 496, 499, 820], "d_": [242, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 449, 850], "d_1": [704, 748, 789], "d_2": [704, 748, 789], "d_e": 818, "d_e_inv": 818, "d_ff": [436, 437], "d_hat": [718, 815, 816, 820], "d_hat_invsqrt": [815, 816], "d_head": [436, 437], "d_i": 9, "d_k": 861, "d_model": [436, 437], "d_t": [242, 424, 425, 426], "d_v": 818, "d_v_invsqrt": 818, "dada": [830, 831], "dadta": [830, 831], "dai": [21, 164, 181, 685], "damm": 854, "data": [0, 1, 3, 4, 5, 6, 7, 13, 14, 22, 26, 27, 28, 34, 35, 41, 43, 44, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 68, 70, 73, 74, 75, 77, 87, 88, 89, 91, 92, 93, 94, 100, 103, 104, 108, 112, 113, 114, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 231, 235, 237, 238, 239, 245, 246, 248, 249, 250, 286, 289, 290, 291, 292, 293, 298, 299, 300, 302, 304, 307, 308, 309, 313, 331, 332, 336, 337, 338, 343, 348, 350, 352, 380, 382, 384, 385, 392, 399, 417, 423, 424, 425, 426, 427, 428, 429, 431, 448, 450, 452, 454, 456, 473, 474, 496, 537, 538, 545, 546, 553, 554, 564, 566, 571, 572, 582, 583, 584, 587, 588, 600, 610, 611, 612, 632, 634, 635, 636, 638, 639, 640, 667, 676, 681, 682, 684, 687, 690, 693, 695, 696, 698, 699, 700, 701, 702, 703, 705, 707, 709, 710, 713, 715, 718, 719, 721, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 737, 739, 746, 749, 751, 754, 755, 758, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 777, 778, 779, 780, 785, 787, 788, 790, 793, 796, 797, 801, 803, 808, 809, 810, 811, 812, 814, 815, 816, 817, 820, 824, 829, 832, 833, 834, 835, 837, 840, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861], "data0": 686, "data1": 686, "data_dict": [131, 331], "data_it": 861, "data_load": 292, "data_path": 148, "data_pip": 299, "data_root_dir": [239, 693, 694, 738, 779], "data_type_dict": [688, 734, 774], "databas": [164, 837], "dataflow": 850, "datafram": [148, 247, 686, 830, 831], "datail": 179, "dataload": [10, 11, 13, 183, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 292, 302, 312, 380, 384, 423, 427, 428, 452, 680, 682, 687, 688, 690, 691, 710, 711, 712, 713, 714, 716, 717, 718, 727, 733, 734, 736, 737, 754, 755, 756, 757, 759, 767, 773, 774, 776, 777, 796, 797, 798, 799, 800, 802, 810, 817, 825, 827, 836, 840, 841, 844, 845, 850, 854, 866, 867], "dataloader\u4e2d\u8fd0\u884c": 737, "dataloader\u5728\u6bcf\u4e2a\u8bad\u7ec3\u5468\u671f\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u91c7\u6837\u5de5\u4f5c\u8fdb\u7a0b": 737, "dataloader\u76f8\u540c\u7684\u63a5\u53e3": 737, "dataloader\ub294": 777, "dataloader\ub97c": [797, 802], "dataloader\uc5d0\uc11c": 777, "dataloader\uc640": 777, "datapars": 686, "datapip": [7, 289, 290, 292, 294, 298, 299, 302, 305, 306, 307, 312, 316, 710, 711, 713, 714, 716, 717, 718, 824, 825, 827, 867], "datapoint": [196, 207], "dataset": [4, 13, 14, 21, 23, 25, 120, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 210, 213, 244, 288, 290, 303, 308, 380, 423, 425, 427, 428, 472, 680, 683, 684, 685, 689, 690, 691, 716, 718, 719, 724, 727, 729, 733, 734, 736, 737, 764, 767, 771, 773, 774, 776, 777, 808, 810, 815, 816, 817, 818, 821, 823, 824, 829, 830, 831, 834, 835, 836, 838, 839, 848, 851, 866, 867], "dataset_it": [825, 827], "dataset_nam": [291, 303, 308, 684, 686, 731, 771, 830, 831], "dataset\ub97c": 770, "datatyp": [719, 820], "dateset": 821, "dateutil": [825, 827, 830, 831], "datset": [25, 172], "dcmake_configuration_typ": 814, "dcmake_cxx_flag": 814, "dd": [25, 168, 186, 861], "ddgl_export": 814, "ddmlc_force_shared_crt": 814, "ddp": [292, 840, 866, 867], "ddp_seed": [210, 213], "de": 861, "deal": [122, 715, 727, 858, 864], "dealloc": 841, "debian": 814, "debug": [4, 23], "dec": 861, "dec_graph": [725, 765, 809], "decai": 406, "decid": [9, 22, 131, 331, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 421, 701, 825, 827, 857, 861], "declar": [691, 825], "decod": [436, 861], "decompos": [385, 417, 854, 861], "decomposit": [385, 392, 417, 456, 716, 849], "decomposition\uc740": 802, "decor": [292, 299], "decreas": [423, 424], "dedupl": [302, 307], "deep": [4, 23, 209, 219, 406, 409, 425, 427, 438, 651, 722, 727, 729, 820, 821, 822, 833, 854, 857, 858, 864], "deepchem": [688, 734, 774], "deepcopi": 857, "deepset": 445, "deepset_encod": 445, "deepwalk": 832, "def": [4, 5, 10, 20, 22, 53, 54, 70, 73, 100, 218, 250, 251, 262, 263, 264, 265, 298, 299, 312, 382, 413, 415, 423, 424, 425, 426, 427, 428, 452, 455, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 684, 685, 686, 687, 688, 689, 691, 692, 705, 706, 710, 711, 713, 714, 715, 716, 718, 719, 721, 722, 723, 725, 727, 728, 729, 731, 732, 733, 734, 735, 737, 749, 750, 754, 755, 756, 757, 758, 759, 761, 762, 763, 765, 767, 768, 769, 771, 772, 773, 774, 775, 777, 790, 792, 796, 797, 799, 800, 801, 802, 803, 805, 806, 807, 809, 810, 811, 812, 815, 816, 817, 818, 820, 825, 827, 832, 834, 835, 836, 837, 840, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "defalt": 441, "default": [4, 6, 9, 10, 14, 23, 27, 28, 31, 32, 34, 35, 41, 48, 51, 53, 54, 61, 62, 63, 79, 81, 82, 88, 89, 116, 117, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 205, 207, 208, 209, 210, 213, 214, 216, 219, 226, 231, 234, 235, 238, 239, 244, 245, 246, 248, 249, 286, 288, 289, 290, 292, 298, 299, 307, 308, 309, 312, 324, 331, 332, 335, 336, 337, 338, 339, 341, 343, 350, 351, 354, 380, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 441, 442, 443, 444, 445, 446, 447, 448, 452, 454, 472, 473, 474, 537, 539, 541, 544, 545, 546, 547, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 566, 567, 630, 631, 632, 637, 638, 639, 640, 648, 653, 658, 662, 664, 665, 666, 684, 686, 691, 692, 693, 694, 695, 701, 702, 705, 771, 786, 787, 814, 817, 820, 824, 825, 827, 829, 830, 831, 841, 844, 845, 857, 861, 867], "defin": [4, 5, 7, 9, 13, 27, 28, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 120, 146, 156, 169, 210, 220, 242, 243, 244, 250, 251, 262, 263, 264, 265, 307, 312, 313, 341, 342, 384, 388, 394, 406, 407, 412, 423, 424, 425, 426, 427, 428, 436, 450, 451, 471, 472, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 682, 683, 684, 686, 690, 691, 699, 702, 704, 705, 719, 725, 727, 728, 729, 749, 769, 776, 787, 790, 803, 809, 811, 812, 815, 816, 818, 820, 829, 848, 850, 851, 861, 866], "definit": [66, 72, 239, 388, 618, 620, 621, 622, 690, 696, 711, 714, 718, 729, 849, 850, 854], "deform": 860, "defus": [214, 296, 302, 560], "deg": [722, 762, 806], "deg_emb": 682, "deg_g": 850, "deg_lg": 850, "deg_proj": 850, "degg_batch": 183, "deglg_batch": 183, "degrad": 214, "degre": [4, 13, 60, 87, 120, 130, 165, 181, 183, 217, 244, 386, 391, 392, 393, 394, 396, 398, 401, 402, 404, 405, 406, 409, 412, 416, 419, 420, 426, 428, 442, 472, 475, 655, 656, 661, 665, 680, 693, 694, 714, 718, 722, 815, 816, 818, 820, 833, 834, 848, 850, 851, 854], "degree_as_nlabel": 165, "degree_embed": 442, "degree_encod": [442, 682], "degreeencod": 682, "degree\uac00": 806, "degree\ub4e4": 779, "degree\uc758": 800, "del": 857, "delet": [21, 180, 302, 307, 550, 551], "delimit": 694, "deliv": 857, "delta": [178, 179, 394, 416], "demo": 817, "demonstr": [42, 450, 451, 640, 686, 718, 724, 725, 819, 830, 831, 837, 844, 852, 854, 861, 864], "denomin": [4, 10, 403], "denot": [120, 242, 388, 402, 409, 420, 454, 664, 815, 816, 848, 849, 850, 851, 854], "dens": [9, 13, 226, 296, 334, 395, 396, 397, 441, 444, 496, 497, 499, 556, 601, 605, 606, 613, 616, 624, 682, 691, 711, 720, 760, 777, 797, 804, 816, 817, 820], "densiti": [183, 197, 556, 698, 742, 783, 850, 857], "departur": 854, "depend": [9, 21, 31, 89, 126, 131, 182, 210, 211, 212, 214, 215, 216, 220, 244, 248, 249, 286, 302, 304, 331, 391, 392, 393, 452, 472, 548, 549, 560, 686, 694, 697, 707, 709, 711, 712, 713, 715, 716, 720, 795, 826, 841, 851, 854, 861], "dependency\ub4e4\uc744": 802, "dependency\uc5d0\uc11c": 797, "deploi": [852, 864], "deprec": [116, 144, 168, 177, 178, 179, 186, 234, 631, 641, 850], "depth": [1, 229, 230, 557], "deriv": [394, 725, 816], "desc": 817, "descend": [642, 643], "descent": [14, 338, 429, 431, 566, 709, 795, 866], "describ": [5, 21, 43, 46, 47, 74, 75, 103, 167, 239, 302, 315, 401, 417, 456, 632, 637, 645, 646, 651, 652, 653, 654, 694, 705, 709, 722, 724, 725, 728, 816, 818, 826, 827, 829, 830, 831, 832, 835, 837, 848, 850, 851, 857, 860], "descript": [61, 88, 131, 137, 160, 178, 179, 180, 286, 315, 331, 849, 861], "deserv": 851, "design": [4, 150, 154, 176, 243, 288, 304, 388, 562, 682, 691, 692, 694, 707, 713, 717, 727, 820, 824, 828, 850, 861], "desir": [20, 22, 120, 226, 556, 655, 656, 661, 693], "desktop": 841, "despit": 694, "dest": 857, "dest_list": 857, "destin": [4, 5, 9, 26, 27, 30, 31, 32, 34, 39, 43, 44, 45, 47, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 73, 79, 80, 82, 87, 88, 90, 91, 92, 93, 94, 100, 104, 105, 107, 109, 113, 114, 117, 118, 119, 123, 125, 126, 127, 131, 200, 214, 216, 220, 226, 227, 232, 242, 246, 247, 249, 286, 292, 296, 299, 304, 311, 316, 317, 318, 330, 331, 349, 354, 382, 389, 391, 392, 393, 395, 396, 397, 398, 399, 402, 404, 405, 415, 418, 449, 475, 476, 477, 478, 479, 481, 482, 483, 484, 485, 487, 489, 491, 493, 495, 497, 498, 502, 503, 504, 505, 506, 508, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 545, 548, 550, 552, 553, 556, 562, 569, 571, 572, 632, 647, 648, 654, 663, 671, 686, 693, 694, 702, 705, 707, 714, 721, 722, 723, 787, 793, 796, 826, 830, 833, 834, 835, 837, 850, 854, 861, 867], "destination_typ": [702, 746, 787], "destroi": [4, 691], "destroy_process_group": 866, "dests_prob": 857, "dests_scor": 857, "detach": [380, 817, 825, 827, 834, 844, 850, 867], "detail": [4, 9, 21, 22, 91, 146, 169, 209, 214, 216, 217, 220, 222, 223, 224, 225, 230, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 555, 561, 618, 620, 621, 622, 679, 680, 682, 686, 688, 690, 691, 692, 694, 698, 705, 708, 710, 711, 712, 714, 716, 717, 718, 722, 729, 813, 814, 821, 825, 827, 830, 831, 834, 837, 844, 845, 851, 857, 861, 866, 867], "detect": [145, 161, 163, 181, 183, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 852, 864], "determin": [4, 26, 240, 241, 394, 416, 448, 556, 560, 561, 562, 563, 638, 692, 694, 702, 719, 721, 722, 860], "determinist": [131, 198, 302, 331, 382, 553], "dev": [183, 184, 207, 719, 814, 815, 816, 817, 818, 820, 825, 827, 830, 831, 848, 851, 854], "dev_data": 184, "devel": 814, "develop": [22, 27, 28, 30, 31, 41, 44, 45, 56, 82, 95, 96, 101, 102, 104, 105, 109, 114, 115, 354, 550, 551, 637, 638, 691, 709, 711, 716, 726, 814, 833, 841, 844], "deviat": [394, 416, 448], "devic": [4, 7, 13, 31, 34, 35, 43, 46, 48, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 74, 87, 88, 89, 93, 94, 100, 103, 108, 125, 126, 130, 131, 208, 209, 210, 211, 212, 214, 216, 217, 245, 246, 247, 248, 249, 286, 289, 296, 297, 304, 309, 311, 314, 315, 322, 325, 331, 332, 336, 337, 338, 391, 392, 393, 429, 430, 431, 452, 473, 474, 537, 544, 545, 546, 553, 559, 560, 561, 562, 563, 566, 580, 600, 612, 680, 690, 700, 701, 710, 711, 712, 713, 714, 716, 717, 718, 719, 736, 744, 754, 755, 756, 757, 759, 776, 785, 796, 797, 798, 799, 800, 802, 803, 816, 817, 820, 825, 827, 830, 831, 834, 840, 850, 854, 861, 866, 867], "device_count": [866, 867], "device_id": 866, "device_typ": 719, "df": [229, 230, 247, 540, 686, 830, 831], "dfrac": [441, 817], "dfs_labeled_edg": 230, "dfs_labeled_edges_gener": 540, "dgl": [13, 14, 20, 23, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 704, 705, 706, 707, 709, 710, 711, 714, 715, 716, 719, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 743, 744, 745, 746, 747, 749, 750, 751, 754, 755, 756, 757, 758, 759, 760, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 778, 779, 784, 785, 786, 788, 790, 791, 792, 793, 796, 797, 799, 800, 801, 802, 803, 804, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 821, 823, 824, 826, 834, 835, 837, 839, 840, 841, 844, 845, 852, 855, 856, 857, 860, 862, 866, 867], "dgl_declare_object_type_info": 22, "dgl_download_dir": 23, "dgl_g": 816, "dgl_home": 21, "dgl_library_path": 21, "dgl_log_debug": 23, "dgl_mxnet_set_np_shap": 814, "dgl_register_glob": 22, "dgl_repo": 23, "dgl_warn": [830, 831, 854, 857, 860], "dglarg": 22, "dglbackend": [21, 23, 814, 815, 816, 817, 818, 820, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 854, 857, 860, 866, 867], "dglblock": [127, 131, 391, 392, 393, 632], "dglbuiltindataset": [134, 141, 142, 143, 145, 147, 159, 160, 162, 164, 165, 166, 168, 174, 175, 181, 184, 186, 189, 190, 192, 194, 195, 685, 688, 732, 734, 772, 774], "dgldataset": [138, 139, 140, 148, 167, 172, 173, 177, 178, 179, 183, 197, 198, 303, 683, 686, 688, 724, 730, 731, 734, 764, 770, 774, 808], "dgldataset\u7c7b": [730, 747], "dgldefaultdir": 23, "dglerror": [27, 28, 95, 96, 386, 398, 401, 402, 403, 404, 405, 406, 409, 412, 419, 632, 700, 702, 744, 746, 785, 787], "dglfunccal": 22, "dglgraph": [0, 4, 5, 6, 9, 13, 22, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 209, 210, 222, 223, 224, 225, 229, 230, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 286, 292, 299, 323, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 354, 380, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 454, 455, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 678, 680, 686, 687, 688, 689, 691, 692, 694, 696, 698, 699, 701, 702, 722, 727, 733, 734, 737, 740, 742, 743, 744, 745, 746, 754, 755, 757, 762, 767, 773, 774, 775, 777, 778, 779, 781, 783, 784, 786, 787, 796, 797, 800, 806, 810, 833, 835, 836, 848, 849, 850, 851, 854, 857, 860], "dglgraphproppreddataset": [138, 687, 733, 773, 817], "dglgraph\ub85c": 783, "dgllinkproppreddataset": [687, 733, 773, 845], "dglnn": [382, 711, 713, 714, 716, 727, 729, 755, 757, 759, 767, 769, 797, 800, 802, 810, 812, 817, 825, 844, 845, 867], "dglnodeproppreddataset": [687, 733, 773, 844], "dglretvalu": 22, "dglroutinglay": 860, "dglsp": [12, 574, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 718, 815, 816, 817, 818, 820], "dglwarn": [830, 831, 854, 857, 860], "dgl\u4e0d\u63d0\u4f9b\u5bf9\u6765\u81ea\u591a\u4e2a\u8bad\u7ec3\u5668\u7684\u5e76\u53d1\u5199\u5165\u7684\u4fdd\u62a4": 737, "dgl\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 758, "dgl\u4e2d\u7684": 757, "dgl\u4e3a\u5206\u5e03\u5f0f\u5f20\u91cf\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u5355\u673a\u666e\u901a\u5f20\u91cf\u7684\u63a5\u53e3": 737, "dgl\u4e5f\u4f1a\u6839\u636e\u8fb9\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f": 745, "dgl\u4e5f\u652f\u6301\u4ece\u5176\u4ed6\u7684\u6570\u636e\u6e90\u6765\u521b\u5efa\u56fe\u5bf9\u8c61": 745, "dgl\u4e5f\u652f\u6301\u76f4\u63a5\u4eces3": 742, "dgl\u4ec5\u5141\u8bb8\u521b\u5efa\u5355\u4e2adistgraph\u5bf9\u8c61": 737, "dgl\u4ec5\u652f\u6301\u5bc6\u96c6\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 737, "dgl\u4ee5\u540e\u5c06\u4e3a\u7a00\u758f\u5d4c\u5165\u6dfb\u52a0\u66f4\u591a\u7684\u4f18\u5316\u5668": 737, "dgl\u4f18\u5316\u4e86\u6d88\u606f\u4f20\u9012\u7684\u5185\u5b58\u6d88\u8017\u548c\u8ba1\u7b97\u901f\u5ea6": 750, "dgl\u4f1a\u5212\u5206\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 737, "dgl\u4f1a\u5728\u5185\u90e8\u5c061\u6761\u65e0\u5411\u8fb9\u8f6c\u6362\u4e3a2\u6761\u6709\u5411\u8fb9": 742, "dgl\u4f1a\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 736, "dgl\u4f1a\u5c06\u5b83\u4eec\u5206\u7247\u5e76\u5b58\u50a8\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u673a\u4e0a": 737, "dgl\u4f1a\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u6bcf\u6761\u8fb9": 743, "dgl\u4f1a\u68c0\u67e5\u8f93\u5165\u56fe\u4e2d\u662f\u5426\u6709\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9": 762, "dgl\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u7684\u6574\u578b\u5f20\u91cf": 745, "dgl\u4f7f\u7528\u4e00\u4e2a\u5305\u542b2\u4e2a\u8282\u70b9\u5f20\u91cf\u7684\u5143\u7ec4": 745, "dgl\u4f7f\u7528\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u6765\u8868\u793a\u4e00\u4e2a\u8282\u70b9": 745, "dgl\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684meti": 738, "dgl\u4fdd\u8bc1\u8fb9\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u4e0e\u751f\u6210\u7684\u5757\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u76f8\u540c": 755, "dgl\u5047\u5b9a\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7684\u9700\u8981\u5408\u5e76\u7684\u7279\u5f81\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u6570\u636e\u7c7b\u578b": 746, "dgl\u5185\u7f6e\u4e86\u5e38\u89c1\u7684\u56fe\u8bfb\u51fa\u51fd\u6570": 767, "dgl\u5185\u7f6e\u7684nn\u6a21\u5757\u5982\u679c\u5728forward\u51fd\u6570\u4e2d\u652f\u6301\u4e00\u4e2a\u53ef\u9009\u7684": 766, "dgl\u5185\u7f6e\u7684\u6d88\u606f": 762, "dgl\u53ef\u4ee5\u5904\u7406\u6700\u591a": 745, "dgl\u53ef\u4ee5\u95f4\u63a5\u5730\u4ece\u8fd9\u4e9b\u6765\u6e90\u521b\u5efa\u56fe": 742, "dgl\u540c\u6837\u652f\u6301\u5b83\u5728mxnet\u548ctensorflow\u540e\u7aef\u91cc\u7684\u5b9e\u73b0": [758, 767], "dgl\u548c\u8fd9\u4e9b\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u5176\u72ec\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c": 760, "dgl\u5728": 730, "dgl\u5728\u5185\u90e8\u5c06scipy\u77e9\u9635\u548cnetworkx\u56fe\u8f6c\u6362\u4e3a\u5f20\u91cf\u6765\u521b\u5efa\u56fe": 742, "dgl\u5728\u547d\u540d\u7a7a\u95f4": 749, "dgl\u5728\u96c6\u7fa4\u6240\u6709\u673a\u5668\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u8bad\u7ec3\u811a\u672c": 736, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6574\u56fe\u5206\u7c7b\u7684\u6837\u4f8b": 767, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5206\u5e03\u5f0f\u7ec4\u4ef6\u4ee5\u652f\u6301\u5206\u5e03\u5f0f\u8bad\u7ec3": 736, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7ba1\u9053": 753, "dgl\u5b9e\u73b0\u4e86\u591a\u4e2a\u53ef\u7528\u4e8e\u751f\u6210\u8fb9\u754c\u7684\u51fd\u6570": 754, "dgl\u5bf9\u8fb9\u754c\u5b50\u56fe\u505a\u4e86\u4e00\u4e2a\u8f6c\u6362": 754, "dgl\u5c06\u56fe\u5212\u5206\u7ed3\u679c\u5b58\u50a8\u5728\u8f93\u51fa\u76ee\u5f55\u4e2d\u7684\u591a\u4e2a\u6587\u4ef6\u4e2d": 738, "dgl\u5c06\u9700\u8981\u8ba1\u7b97gnn\u8f93\u51fa\u7684\u8282\u70b9\u79f0\u4e3a": 754, "dgl\u5df2\u7ecf\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528\u7684": 760, "dgl\u5efa\u8bae": 749, "dgl\u5efa\u8bae\u4f7f\u7528\u8282\u70b9\u63a9\u7801\u6765\u6307\u5b9a\u6570\u636e\u96c6\u7684\u5212\u5206": 734, "dgl\u5efa\u8bae\u7528\u6237\u5b9e\u73b0\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e\u7684\u51fd\u6570": 735, "dgl\u5efa\u8bae\u7528\u6237\u5c3d\u91cf\u51cf\u5c11\u8fb9\u7684\u7279\u5f81\u7ef4\u6570": 750, "dgl\u5efa\u8bae\u8ba9": 734, "dgl\u5efa\u8bae\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ece\u70b9\u5230\u8fb9\u7684\u5185\u5b58\u62f7\u8d1d": 750, "dgl\u63a8\u8350\u4f7f\u7528tensor\u4f5c\u4e3adgl": 745, "dgl\u63a8\u8350\u7528\u6237\u5c06\u56fe\u6570\u636e\u5904\u7406\u4e3a": 730, "dgl\u63a8\u8350\u91cd\u65b0\u6392\u5217\u56fe\u7684\u8282\u70b9": 734, "dgl\u63d0\u4f9b": 737, "dgl\u63d0\u4f9b\u4e86": [737, 746, 754, 763], "dgl\u63d0\u4f9b\u4e864\u4e2a\u51fd\u6570\u8ba9\u4efb\u52a1\u53d8\u5f97\u7b80\u5355": 735, "dgl\u63d0\u4f9b\u4e86api\u4ee5\u4ece\u78c1\u76d8\u4e2d\u52a0\u8f7d\u6216\u5411\u78c1\u76d8\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u56fe": 742, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2aapi\u4ee5\u6267\u884c\u8fd9\u4e24\u4e2a\u6b65\u9aa4": 738, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u529f\u80fd\u7684\u51fd\u6570": 766, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684rgcn\u7684\u7aef\u5230\u7aef\u7684\u4f8b\u5b50": 769, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a00\u758f\u7684adagrad\u4f18\u5316\u5668": 737, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u793a\u4f8b": 759, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u56fe\u5377\u79ef\u6a21\u5757": 769, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177": 736, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784": 737, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784\u548c\u591a\u79cdapi": 737, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7ea7\u522b\u7684api": 737, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u811a\u672c\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 739, "dgl\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b0\u7c7b\u578b\u7684\u8bed\u6cd5": 746, "dgl\u63d0\u4f9b\u4e86\u51e0\u4e2a\u90bb\u5c45\u91c7\u6837\u7c7b": 759, "dgl\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u7684api": 736, "dgl\u63d0\u4f9b\u4e86\u540d\u4e3a": 734, "dgl\u63d0\u4f9b\u4e86\u5728\u540c\u6784\u56fe\u4e0a\u505a\u94fe\u8def\u9884\u6d4b\u7684\u4e00\u4e2a\u793a\u4f8b": 757, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u91c7\u6837\u7684\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668": 737, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u542f\u52a8\u96c6\u7fa4\u4e2d\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684tool": 739, "dgl\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684": 759, "dgl\u63d0\u4f9b\u4e86\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5": 745, "dgl\u63d0\u4f9b\u7684\u4e00\u4e9b\u91c7\u6837\u65b9\u6cd5\u4e5f\u652f\u6301\u5f02\u6784\u56fe": 759, "dgl\u652f\u6301": 749, "dgl\u652f\u6301\u4f7f\u7528": 745, "dgl\u652f\u6301\u5185\u7f6e\u7684\u805a\u5408\u51fd\u6570": 749, "dgl\u73b0\u5728\u652f\u6301": 749, "dgl\u7684gin\u6837\u4f8b": 767, "dgl\u7684graphsage\u6837\u4f8b": 769, "dgl\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u5177\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u4ea4\u4e92\u8fdb\u7a0b": 736, "dgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u5c0f\u6279\u6b21\u751f\u6210\u4e09\u9879": 757, "dgl\u786e\u4fdd\u5757\u7684\u8f93\u51fa\u8282\u70b9\u5c06\u59cb\u7ec8\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 754, "dgl\u793e\u533a\u7684\u4e00\u7fa4\u70ed\u5fc3\u8d21\u732e\u8005\u628adgl\u7528\u6237\u6307\u5357\u8bd1\u6210\u4e86\u4e2d\u6587": 747, "dgl\u79f0\u4e4b\u4e3a": 745, "dgl\u79f0\u5b83\u4eec\u4e3a\u7ea2\u8272\u8282\u70b98\u5728\u7b2c\u4e8c\u4e2agnn\u5c42\u7684": 754, "dgl\u79f0\u5b83\u4eec\u4e3a\u89c4\u8303\u8fb9\u7c7b\u578b": 746, "dgl\u79f0\u8fd9\u79cd\u4ec5\u5305\u542b\u5fc5\u8981\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u4e8c\u5206\u56fe\u4e3a\u4e00\u4e2a": 754, "dgl\u8981\u6c42\u9884\u5904\u7406\u56fe\u6570\u636e\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 738, "dgl\u901a\u8fc7\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784": 740, "dgl\u91c7\u7528\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5": 736, "dgl\u91cc\u5bf9\u56fe\u8fdb\u884c\u53d8\u6362\u7684\u51fd\u6570\u4f1a\u53bb\u6389\u56fe\u4e0a\u7684\u6279\u6b21\u4fe1\u606f": 767, "dgl\u9ed8\u8ba4\u4f7f\u7528int64": 745, "dgl\ub294": [786, 802, 810], "dgl\uc5d0\uc11c": [778, 779, 782, 786, 787, 790, 797, 802, 806, 808], "dgl\uc5d0\uc11c\ub294": [774, 775, 786, 792, 796, 797, 800, 802], "dgl\uc740": [770, 771, 774, 775, 776, 777, 778, 779, 780, 781, 783, 786, 787, 790, 791, 792, 795, 796, 801, 803, 804, 809, 810, 812], "dgl\uc758": [774, 776, 777, 779, 787, 789, 790, 792, 800, 801, 802, 806], "dgl\uc774": [779, 796, 797, 802], "dgmg": [858, 864], "dgmg_cycl": 857, "dgmg_msg": 857, "dgmg_reduc": 857, "dgmgskeleton": 857, "dgn": 394, "dh": 817, "diag": [604, 608, 613, 614, 615, 626, 718, 815, 816, 818, 820], "diagmatrix": [587, 588], "diagon": [385, 396, 406, 417, 420, 607, 608, 612, 613, 614, 815, 816, 818, 850], "diagram": 694, "dichotomi": [120, 244, 472], "dict": [4, 20, 27, 28, 43, 46, 47, 56, 73, 74, 75, 103, 114, 115, 121, 130, 131, 148, 203, 204, 205, 206, 208, 210, 213, 214, 216, 219, 220, 222, 223, 224, 225, 233, 235, 236, 237, 239, 240, 241, 245, 287, 293, 294, 295, 296, 298, 301, 304, 308, 309, 310, 311, 312, 313, 314, 317, 318, 321, 324, 329, 330, 331, 332, 336, 337, 343, 350, 354, 381, 382, 383, 384, 423, 424, 425, 426, 427, 428, 473, 537, 538, 553, 560, 561, 563, 564, 632, 640, 646, 678, 689, 694, 759, 775, 796, 802, 835, 854, 857, 860, 861], "dict_kei": 382, "dictionari": [22, 43, 46, 47, 74, 75, 101, 102, 103, 121, 122, 131, 148, 210, 220, 235, 239, 241, 245, 294, 296, 301, 304, 309, 311, 317, 318, 329, 330, 331, 332, 336, 337, 343, 381, 424, 426, 473, 537, 560, 561, 563, 640, 678, 686, 694, 702, 707, 710, 711, 716, 723, 725, 729, 779, 793, 807, 832, 835, 837], "dictionary\uac00": 779, "dictionary\ub294": 779, "dictionary\ub4e4\uc744": 802, "dictionary\ub97c": [779, 800], "dictionary\uc5d0": 779, "dictionary\uc640": 800, "dict\u5bf9\u8c61": 735, "diff": 322, "differ": [4, 5, 11, 51, 61, 73, 88, 91, 92, 113, 116, 120, 126, 131, 135, 136, 138, 139, 140, 151, 152, 153, 158, 159, 172, 178, 179, 186, 192, 214, 216, 217, 219, 220, 229, 230, 234, 239, 242, 244, 248, 249, 286, 300, 301, 304, 318, 331, 336, 337, 350, 351, 381, 382, 384, 399, 416, 420, 425, 426, 427, 428, 431, 445, 455, 472, 560, 562, 566, 631, 637, 686, 688, 691, 694, 696, 697, 699, 702, 707, 709, 711, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 727, 728, 729, 784, 787, 817, 818, 820, 825, 830, 831, 833, 836, 841, 844, 849, 850, 851, 852, 854, 855, 857, 860, 861, 864, 866, 867], "differenti": [118, 119, 711, 851], "diffus": [655, 656, 661, 665, 819], "diffuse_op": 665, "digit": [199, 200], "digraph": [125, 248, 639, 698, 742, 783], "dii": 21, "dim": [73, 262, 263, 264, 265, 325, 338, 382, 409, 445, 446, 566, 591, 594, 595, 596, 597, 598, 617, 642, 643, 672, 680, 705, 706, 729, 749, 750, 769, 790, 792, 812, 815, 816, 817, 820, 825, 827, 834, 848, 849, 851, 857, 860], "dim_ff": 861, "dim_model": 861, "dim_nfeat": 836, "dimens": [4, 5, 9, 10, 14, 20, 139, 150, 154, 176, 300, 314, 325, 338, 354, 382, 390, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 422, 423, 429, 431, 438, 442, 446, 452, 500, 544, 566, 591, 594, 595, 596, 597, 598, 605, 613, 617, 619, 642, 643, 682, 692, 699, 705, 706, 707, 721, 727, 815, 817, 820, 832, 834, 836, 848, 849, 851, 861, 866], "dimension": [9, 159, 300, 304, 338, 401, 403, 407, 409, 429, 431, 557, 558, 559, 566, 699, 706, 816, 833, 836], "dipol": [178, 179], "dir": [394, 694, 779], "dir1": 394, "direct": [6, 123, 124, 126, 134, 149, 155, 159, 178, 185, 187, 193, 229, 230, 247, 248, 288, 338, 340, 394, 442, 540, 542, 543, 545, 567, 631, 644, 667, 686, 697, 698, 701, 782, 826, 833, 834, 850, 857, 860], "direction": 697, "directli": [9, 21, 64, 71, 89, 108, 109, 112, 117, 131, 148, 210, 245, 302, 304, 307, 332, 336, 337, 338, 343, 392, 429, 431, 473, 537, 564, 566, 647, 648, 686, 698, 818, 820, 834, 835, 837, 840, 849], "directoractor": 134, "directori": [21, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 209, 288, 308, 684, 685, 689, 693, 695, 771, 772, 775, 814, 829, 830, 831, 840, 844, 861], "dirnam": 202, "disabl": [4, 9, 299, 705, 814, 841], "disable_shared_mem": 4, "disallow": 559, "disambigu": 702, "disappear": [4, 691], "disast": 850, "discard": [27, 28, 114, 115, 116, 117, 130, 245, 246, 332, 335, 341, 349, 473, 474, 537, 551, 554, 631, 640, 641, 727, 817], "discov": [861, 862, 864], "discoveri": 857, "discret": [656, 851], "disct": 632, "discuss": [21, 632, 724, 729, 850], "diseas": [560, 561, 702, 746, 787], "disease\u6cbb\u7597\u8fb9": 746, "disease\u8282\u70b9": 746, "disjoint": 122, "disk": [4, 138, 139, 140, 156, 203, 206, 291, 297, 308, 314, 315, 684, 685, 689, 694, 771, 828, 830, 831, 835, 837], "dislik": [724, 725, 764, 765, 808, 809], "dislike_dst": [724, 764, 808], "dislike_src": [724, 764, 808], "dispatch": [9, 693], "dispatch_data": 694, "displai": [56, 816, 854], "dist": [338, 429, 430, 431, 446, 447, 544, 566, 567, 680, 682, 817, 823, 840, 847, 866, 867], "dist_anim": 860, "dist_graph": [691, 737, 777], "dist_list": 860, "dist_matrix": 860, "distanc": [6, 178, 179, 242, 338, 388, 429, 430, 431, 446, 447, 544, 566, 567, 680, 682, 857], "distdataload": [4, 211, 212, 690, 691, 736, 737, 776, 777], "distedgedataload": [691, 737, 845], "distembed": [4, 690, 736, 737, 776], "distgraph": [4, 211, 212, 232, 233, 239, 240, 241, 690, 692, 694, 736, 737, 738, 776, 778, 779, 844, 845], "distgraphserv": 4, "distgraph\u5c06\u56fe\u6570\u636e\u52a0\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u4e2d": 737, "distgraph\uc758": 777, "distinct": [142, 686, 852, 864], "distinguish": [68, 156, 637, 680, 686, 702, 820], "distmult": 849, "distnodedataload": [691, 737, 777, 844, 845], "distplot": 860, "distribut": [13, 120, 142, 174, 197, 205, 210, 211, 212, 213, 226, 227, 244, 292, 296, 316, 352, 353, 381, 409, 425, 427, 452, 472, 562, 693, 703, 714, 725, 728, 736, 737, 738, 776, 778, 779, 800, 823, 840, 847, 851, 857, 860, 861, 867], "distributeddataparallel": [210, 213, 690, 736, 776, 840, 844, 845, 866, 867], "distributeditemsampl": 867, "distributedli": [292, 691], "distributedsampl": [210, 213], "disttenor": 4, "disttensor": [4, 231, 238, 690, 691, 692, 736, 737, 776, 777, 778], "disttensor\u4e2d\u7684\u884c\u6570\u5fc5\u987b\u4e0e\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u6216\u8fb9\u6570\u76f8\u540c": 737, "div": [9, 254, 255, 268, 269, 278, 279, 488, 489, 497, 498, 507, 508, 509, 510, 511, 512, 529, 530, 705, 749, 790, 820], "dive": [722, 822], "divers": 861, "divid": [45, 68, 79, 82, 105, 142, 143, 189, 190, 231, 238, 396, 412, 645, 715, 718, 722, 806, 835, 848, 851], "divis": [4, 394, 403, 416, 417, 441, 443, 444, 608, 620], "dl": [134, 173, 813], "dlg": 779, "dlg\uc758": 790, "dm": 860, "dmlc": [21, 814, 840], "dncoder": 861, "dnn": [720, 804], "do": [4, 9, 21, 22, 70, 89, 101, 102, 114, 116, 130, 140, 180, 239, 296, 329, 338, 348, 350, 382, 422, 429, 431, 441, 442, 444, 446, 447, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 552, 556, 561, 566, 632, 685, 691, 701, 702, 709, 710, 715, 716, 725, 728, 729, 796, 827, 828, 830, 831, 832, 835, 850, 851, 854, 857], "do_someth": 0, "doc": [9, 14, 168, 186, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 711, 723, 820, 834], "docstr": 21, "document": [8, 22, 214, 216, 239, 829, 844], "doc\uc5d0\uc11c": 807, "doe": [4, 8, 21, 26, 27, 28, 64, 71, 93, 113, 116, 130, 131, 134, 149, 155, 164, 185, 187, 193, 292, 299, 331, 350, 452, 498, 538, 574, 591, 594, 595, 596, 613, 632, 655, 656, 661, 685, 691, 693, 694, 698, 702, 706, 712, 716, 722, 725, 732, 772, 787, 806, 820, 823, 825, 827, 832, 834, 835, 836, 837, 838, 839, 848, 850, 851, 854, 857, 861, 866], "doesn": [4, 56, 168, 200, 719, 850], "doi": [134, 163, 173], "domain": [287, 295, 308, 315, 829, 830, 831, 835, 841], "don": [21, 89, 240, 241, 557, 559, 560, 632, 713, 820, 825, 827, 830, 831, 861], "done": [6, 21, 156, 329, 680, 684, 691, 815, 816, 818, 832, 834, 835, 840, 841, 844, 848, 849, 850, 851], "donghuixu": 747, "donot_use_mm_for_euclid_dist": [430, 544], "dot": [9, 256, 257, 270, 271, 280, 281, 398, 449, 490, 491, 497, 513, 514, 531, 532, 705, 719, 725, 728, 749, 768, 790, 800, 803, 809, 811, 817, 835, 845, 850, 851, 854, 861], "dotpredictor": [725, 765, 809, 835], "dotproductpredictor": [725, 728, 765, 768, 809, 811], "doubl": [9, 22, 173, 242, 634, 686, 699, 705, 784, 790, 857], "down": [290, 817, 848, 851], "download": [2, 21, 23, 132, 133, 134, 135, 136, 137, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 202, 288, 683, 684, 687, 731, 732, 771, 772, 814, 815, 816, 818, 820, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "downstream": [694, 725, 728, 729, 824, 844, 849], "doxygen": 21, "dozen": 22, "dpi": 860, "dramat": 851, "draw": [384, 825, 854, 857], "draw_circular": 857, "draw_networkx": 850, "draw_networkx_edg": [816, 860], "draw_networkx_nod": [816, 860], "drawn": [713, 818], "drive": 21, "driven": [858, 864], "drop": [4, 210, 213, 247, 292, 299, 302, 646, 651, 652, 655, 656, 661, 860, 867], "drop_last": [4, 209, 210, 213, 214, 215, 216, 219, 220, 292, 299, 690, 712, 727, 736, 754, 755, 756, 757, 759, 767, 776, 796, 797, 798, 799, 800, 802, 810, 836, 840, 844, 845, 850, 867], "drop_uneven_input": [292, 867], "dropbox": 21, "dropedg": 13, "dropnod": 13, "dropout": [387, 391, 392, 393, 394, 397, 402, 404, 405, 410, 413, 414, 416, 417, 418, 421, 422, 436, 437, 441, 443, 444, 682, 690, 713, 718, 719, 729, 736, 776, 812, 818, 851, 854, 861, 867], "dropouta": [436, 437], "dropouth": [436, 437], "dropout\u6982\u7387": 769, "drug": [52, 122, 560, 561, 678, 702, 746, 787, 857], "drugai": 747, "drug\u76f8\u4e92\u4f5c\u7528\u8fb9": 746, "drug\u8282\u70b9": 746, "dst": [34, 62, 63, 68, 110, 220, 242, 300, 301, 354, 389, 398, 399, 402, 404, 405, 409, 412, 418, 449, 450, 451, 553, 556, 609, 632, 633, 637, 672, 688, 698, 705, 706, 711, 714, 719, 722, 723, 725, 728, 734, 742, 749, 750, 754, 755, 757, 762, 763, 765, 768, 774, 783, 790, 792, 796, 797, 800, 803, 806, 807, 809, 811, 830, 831, 834, 835, 837, 851, 861, 867], "dst_dtype": [722, 762, 806], "dst_field": 861, "dst_id": [59, 126, 249, 286, 686, 693, 779], "dst_id_field": 686, "dst_input": [723, 763, 807], "dst_node": [318, 632, 796, 806], "dst_node_id": 693, "dst_timestamp": 318, "dst_type": [131, 331, 424, 426], "dst_x": 711, "dstdata": [4, 9, 44, 68, 208, 221, 222, 382, 571, 632, 690, 692, 706, 715, 718, 722, 723, 736, 750, 754, 758, 759, 762, 763, 776, 778, 792, 796, 801, 802, 806, 807], "dstnode": [43, 68, 208, 222, 632, 715, 754, 758, 796, 801], "dsttype": [26, 68, 105, 226, 227, 382, 707, 723, 751, 763, 793, 807], "dt": 686, "dtype": [4, 10, 21, 47, 64, 75, 95, 96, 117, 126, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 245, 246, 249, 296, 300, 308, 322, 332, 336, 337, 352, 353, 382, 447, 473, 474, 537, 550, 551, 552, 557, 559, 571, 572, 582, 587, 600, 612, 637, 651, 652, 659, 665, 678, 680, 686, 688, 691, 693, 694, 699, 702, 712, 713, 719, 723, 724, 725, 734, 737, 743, 746, 763, 764, 765, 774, 777, 779, 784, 787, 803, 807, 808, 809, 817, 820, 827, 830, 831, 833, 836, 837, 844, 845, 848, 850, 851, 861, 867], "due": [22, 118, 119, 192, 292, 308, 553, 638, 701, 713, 848, 861], "dump": [779, 845], "duplic": [116, 135, 136, 151, 152, 153, 186, 192, 288, 332, 336, 337, 427, 473, 537, 585, 640, 648, 668, 693, 820, 854], "dur": [848, 851], "dure": [5, 21, 89, 292, 338, 341, 419, 429, 431, 556, 560, 561, 566, 630, 666, 691, 693, 694, 700, 705, 710, 716, 825, 827, 830, 831, 833, 841, 844, 851, 854, 857, 860, 861], "duse_cuda": 814, "duse_libxsmm": 814, "duse_openmp": 814, "dvd": 137, "dwivedi": 817, "dx": [163, 394, 850, 861], "dynam": [401, 858, 860, 861, 862, 864], "e": [0, 4, 5, 9, 21, 22, 26, 41, 42, 48, 54, 62, 63, 70, 108, 112, 118, 119, 120, 122, 125, 126, 130, 131, 166, 174, 178, 186, 210, 213, 220, 239, 243, 244, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 286, 290, 291, 331, 338, 340, 354, 382, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 427, 429, 431, 446, 449, 450, 451, 455, 472, 497, 498, 545, 546, 553, 554, 558, 559, 564, 566, 569, 571, 572, 607, 609, 610, 611, 623, 638, 639, 655, 656, 661, 670, 671, 673, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 704, 705, 706, 710, 711, 719, 725, 726, 727, 733, 741, 748, 749, 766, 773, 774, 782, 789, 790, 791, 814, 815, 816, 817, 818, 820, 821, 826, 832, 833, 834, 835, 841, 850, 851, 857, 861, 866], "e1": [296, 318, 324, 330], "e2": [296, 318, 324, 330], "e2d": 861, "e2n": 667, "e_": [388, 398, 399, 403, 404, 405, 407, 408, 410, 411, 412, 415, 416, 417, 418, 826, 834, 850, 851], "e_add_u": 5, "e_add_v": 5, "e_attr": 125, "e_div_u": 5, "e_div_v": 5, "e_dot_u": 5, "e_dot_v": 5, "e_feat": [164, 166, 455], "e_ij": 389, "e_mul_u": 5, "e_mul_v": 5, "e_sub_u": 5, "e_sub_v": [5, 9], "e_t": [424, 425], "e_typ": [157, 158, 191], "e_weight": 6, "each": [0, 4, 5, 6, 7, 14, 20, 22, 34, 35, 36, 37, 39, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 78, 87, 88, 92, 93, 94, 100, 101, 102, 116, 117, 122, 123, 124, 126, 130, 131, 135, 136, 141, 142, 147, 150, 151, 152, 153, 154, 157, 158, 171, 174, 175, 176, 178, 179, 181, 182, 183, 184, 191, 195, 197, 198, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 231, 234, 238, 239, 240, 241, 242, 245, 249, 286, 289, 292, 296, 299, 300, 301, 302, 304, 305, 307, 309, 316, 318, 324, 326, 329, 330, 331, 332, 336, 337, 338, 340, 350, 351, 354, 380, 381, 382, 384, 385, 386, 387, 388, 390, 394, 396, 398, 401, 402, 403, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 418, 419, 421, 422, 429, 430, 431, 433, 435, 436, 437, 438, 442, 446, 447, 448, 452, 454, 456, 473, 499, 500, 537, 538, 544, 547, 548, 549, 552, 553, 555, 557, 558, 559, 560, 561, 562, 563, 566, 567, 569, 570, 571, 572, 632, 637, 638, 640, 644, 647, 648, 655, 663, 664, 669, 672, 674, 675, 676, 677, 678, 682, 683, 686, 688, 689, 690, 691, 692, 693, 694, 695, 697, 699, 701, 702, 704, 707, 709, 710, 711, 714, 716, 717, 719, 722, 723, 724, 725, 726, 727, 728, 729, 774, 779, 784, 802, 809, 811, 816, 817, 818, 820, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 867], "earli": [166, 192, 725, 809], "earlier": [290, 691, 849, 857], "eas": [21, 22, 304], "easi": [21, 22, 335, 558, 684, 694, 728, 813, 820], "easier": [70, 692, 694, 835], "easili": [122, 229, 230, 709, 714, 717, 725, 824, 826, 832, 851], "ec2": [14, 841], "ecosystem": 820, "ed": [854, 861], "edata": [4, 5, 9, 20, 27, 30, 34, 47, 51, 53, 70, 95, 96, 108, 114, 117, 118, 119, 122, 125, 126, 128, 145, 147, 157, 158, 164, 166, 174, 177, 179, 191, 195, 208, 214, 216, 219, 221, 223, 245, 248, 249, 332, 336, 337, 354, 423, 446, 455, 473, 537, 548, 550, 551, 552, 553, 554, 559, 560, 561, 562, 563, 564, 568, 569, 632, 637, 638, 639, 640, 642, 647, 648, 651, 652, 653, 654, 655, 656, 659, 661, 664, 665, 667, 668, 669, 670, 671, 672, 673, 678, 680, 686, 688, 691, 692, 693, 694, 699, 702, 706, 719, 725, 726, 728, 734, 737, 738, 743, 746, 750, 755, 757, 765, 766, 768, 774, 777, 778, 779, 784, 787, 791, 792, 797, 800, 803, 809, 811, 832, 833, 834, 835, 837, 848, 849, 860], "edata_develop": 354, "edata_dict": 354, "edata_follow": 354, "edata_pars": [148, 686], "edata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 245, 246, 299, 332, 335, 336, 337, 341, 473, 474, 537, 546, 550, 551, 552, 568, 637, 651, 652, 659, 665, 678, 686, 693, 694, 698, 699, 701, 727, 742, 743, 745, 783, 784, 786, 810, 833, 836, 837], "edeg": [45, 79, 82, 105], "edg": [0, 4, 5, 6, 7, 9, 13, 21, 25, 26, 27, 30, 31, 32, 34, 36, 39, 41, 46, 47, 48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 295, 296, 298, 302, 304, 307, 308, 309, 311, 312, 315, 316, 317, 318, 321, 324, 330, 331, 332, 335, 336, 337, 338, 340, 341, 348, 349, 350, 351, 354, 382, 384, 386, 387, 388, 389, 392, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 446, 449, 450, 451, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 571, 572, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 647, 648, 650, 651, 653, 654, 655, 656, 657, 659, 661, 662, 663, 664, 665, 667, 668, 669, 670, 671, 673, 678, 680, 682, 686, 688, 690, 692, 693, 694, 696, 697, 704, 705, 706, 707, 709, 712, 714, 715, 717, 719, 721, 723, 724, 727, 728, 729, 734, 743, 745, 746, 747, 749, 750, 755, 757, 764, 765, 768, 774, 778, 779, 784, 786, 787, 789, 790, 791, 792, 796, 797, 800, 803, 808, 809, 810, 811, 813, 815, 816, 817, 818, 820, 824, 825, 827, 829, 830, 831, 832, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 852, 854, 860, 864, 866], "edge_attent": 851, "edge_attr": [179, 248, 639], "edge_attr_dtyp": 779, "edge_attr_schem": [4, 75], "edge_attribut": [296, 324, 827], "edge_classif": 308, "edge_color": 850, "edge_data": [308, 686, 694, 779], "edge_dir": [214, 216, 240, 241, 560, 561, 562, 563], "edge_drop": 387, "edge_feat": [177, 239, 389, 394, 399, 400, 402, 408, 410, 416, 693, 694, 738, 779], "edge_feat_0": 831, "edge_feat_0_path": 831, "edge_feat_1": 831, "edge_feat_1_path": 831, "edge_feat_nam": [29, 117, 648, 653, 664], "edge_feat_s": [138, 394, 400, 416, 443], "edge_featur": [289, 294, 299, 304, 711, 837], "edge_feature_kei": 294, "edge_follow_feat_0": 830, "edge_follow_feat_0_path": 830, "edge_follow_feat_1": 830, "edge_follow_feat_1_path": 830, "edge_func": 415, "edge_gat": 402, "edge_id": [32, 232, 304], "edge_id_attr_nam": [125, 248], "edge_in_feat": 389, "edge_index": 694, "edge_label": [25, 315, 725, 755, 765, 797, 809], "edge_like_feat_0": 830, "edge_like_feat_0_path": 830, "edge_like_feat_1": 830, "edge_like_feat_1_path": 830, "edge_map": [239, 694, 738, 779], "edge_mask": [423, 424, 425, 754, 796], "edge_permute_algo": [98, 553], "edge_pred_graph": [725, 765, 809], "edge_predict": [755, 797], "edge_repr": 857, "edge_split": [678, 691, 737, 777, 845], "edge_subgraph": [157, 158, 191, 473, 712, 754, 755, 757, 796, 797, 800, 833], "edge_timestamp_attr_nam": 296, "edge_trainer_id": 231, "edge_typ": [131, 296, 304, 331, 692, 694, 702, 722, 746, 762, 779, 787, 806], "edge_type_id": 693, "edge_type_subgraph": [26, 474, 702, 746, 787], "edge_type_to_id": [296, 324, 830], "edge_udf": [20, 669, 670, 671, 672, 673], "edge_upd": 443, "edge_weight": [6, 145, 214, 387, 399, 403, 404, 406, 407, 412, 418, 419, 420, 425, 427, 726, 766], "edgebatch": [20, 53, 705, 749, 790], "edgedataload": [691, 737, 755, 757, 777, 797, 798, 800, 845], "edgedataview": 4, "edgelist": 860, "edgepredictor": 845, "edges1": 382, "edges2": 382, "edges3": 382, "edges_0": 686, "edges_1": 686, "edges_b": 860, "edges_data": 837, "edges_dst": 837, "edges_field": 861, "edges_gener": [91, 539], "edges_group": 837, "edges_of_id": 837, "edges_path": 831, "edges_perm": 553, "edges_src": 837, "edges_to_exclud": 309, "edges_with_feature_on": 53, "edgeweightnorm": [387, 406, 412, 419, 420, 726, 766], "edist": 388, "edu": [145, 175, 181, 184], "educ": 849, "ee": 861, "efeat": [389, 399, 402, 408, 415, 443, 693, 694], "effect": [10, 210, 213, 243, 286, 391, 392, 393, 417, 453, 567, 571, 572, 655, 656, 661, 689, 817, 861], "effici": [4, 5, 9, 22, 34, 73, 93, 94, 100, 113, 122, 126, 131, 209, 239, 248, 249, 286, 331, 338, 384, 426, 428, 429, 431, 562, 566, 638, 694, 701, 704, 715, 719, 722, 727, 824, 828, 834, 841, 848, 849, 850, 851, 854, 857, 860, 861], "effort": [849, 866], "eg": [702, 746, 787], "egat": 399, "egat_model": [399, 402], "egnn": 400, "egt": 443, "eid": [4, 20, 26, 51, 55, 61, 88, 89, 95, 96, 125, 130, 211, 223, 232, 233, 239, 240, 241, 245, 248, 332, 336, 337, 349, 354, 423, 473, 537, 550, 551, 553, 557, 559, 560, 561, 562, 563, 568, 632, 637, 640, 672, 692, 694, 702, 746, 754, 757, 778, 779, 787, 796, 800, 833, 835, 861], "eid2localeid": 4, "eid2partid": 4, "eid_attr": 639, "eid_het2hom": 692, "eid_hom2het": 692, "eid_offset": 692, "eid_rang": 779, "eids_dict": [757, 800], "eig": 394, "eig_vec": 394, "eigenvalu": [339, 340, 390, 395, 445, 658], "eigenvector": [339, 394, 445, 658], "eight": [171, 693], "eigval": [445, 658], "eigval_nam": [445, 658], "eigvec": [445, 658], "eisfischerh\u00fctt": 861, "either": [9, 21, 26, 32, 34, 62, 63, 73, 91, 92, 93, 94, 100, 113, 131, 182, 210, 214, 216, 220, 223, 240, 241, 304, 312, 314, 315, 331, 338, 382, 430, 544, 558, 560, 561, 562, 563, 566, 591, 594, 595, 596, 598, 632, 694, 697, 701, 715, 829, 832, 835, 844, 857], "el": [449, 705, 749, 790], "electron": [178, 179], "element": [0, 4, 5, 22, 31, 32, 34, 35, 36, 37, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 93, 94, 100, 119, 121, 122, 214, 216, 219, 220, 239, 240, 241, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 296, 302, 304, 307, 309, 324, 326, 331, 332, 336, 337, 339, 340, 350, 351, 385, 389, 431, 473, 499, 537, 538, 548, 549, 559, 560, 561, 563, 574, 575, 578, 579, 590, 591, 592, 597, 603, 610, 611, 617, 623, 627, 638, 642, 643, 691, 716, 717, 722, 817, 818, 835, 836], "elementwis": [449, 604, 605, 608, 614, 615, 616, 626], "elif": [715, 722, 758, 762, 801, 806, 825], "elimin": 130, "ell": 646, "els": [73, 388, 421, 422, 423, 424, 425, 427, 680, 686, 711, 713, 715, 716, 719, 722, 723, 754, 756, 758, 762, 763, 796, 799, 801, 803, 806, 807, 815, 816, 817, 818, 820, 825, 827, 830, 831, 849, 851, 857, 861, 866, 867], "elsewher": 612, "elu": [443, 719, 803, 851], "emap": 844, "emb": [4, 10, 381, 425, 427, 452, 691, 737, 777, 849, 854, 857, 861], "emb_dim": [380, 384], "emb_stat": 4, "embed": [5, 13, 137, 149, 158, 180, 182, 184, 185, 191, 313, 380, 381, 384, 425, 427, 442, 443, 446, 447, 450, 451, 452, 682, 690, 691, 692, 694, 714, 728, 729, 812, 825, 844, 845, 848, 849, 850, 851, 854, 861], "embedding_dim": [4, 381, 442, 452, 682], "emit": [725, 857], "emphas": 835, "empir": [14, 120, 182], "emploi": [20, 302, 307, 426, 427, 428, 718, 817, 851, 861], "employ": 861, "empti": [32, 56, 131, 204, 235, 286, 331, 343, 348, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 713, 722, 848, 851, 861], "empty_tensor": 825, "en": [841, 861], "enabl": [9, 23, 425, 427, 705, 712, 717, 719, 803, 814, 824, 857, 861, 867], "enable_cpu_affin": [840, 841], "enc": 861, "encapsul": 723, "enclos": [242, 686], "encod": [13, 135, 136, 139, 159, 165, 171, 339, 437, 442, 445, 446, 447, 448, 454, 547, 630, 658, 662, 666, 697, 817, 833, 845, 849, 850, 852, 861, 862, 864], "encompass": [302, 304, 307], "encount": [848, 851], "encourag": [426, 428, 728], "end": [4, 20, 22, 27, 114, 164, 217, 239, 339, 349, 384, 388, 438, 555, 567, 630, 658, 666, 672, 680, 694, 701, 716, 721, 725, 727, 729, 754, 786, 796, 802, 809, 810, 812, 818, 819, 825, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "end_epoch_tim": 714, "end_tim": 164, "endl": 22, "endmark": [825, 827], "endpoint": [4, 34, 48, 53, 100, 116, 473, 474, 631, 640, 850], "energi": [178, 179], "enforc": 844, "english": [149, 182, 185, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812], "enhanc": [21, 309, 816, 852, 862, 864], "enjoi": [9, 21, 817], "enough": [14, 694, 836], "enrich": 851, "ensur": [304, 316, 406, 691, 693, 711, 827, 844, 866], "entail": 857, "enter": 70, "enthalpi": [178, 179], "entir": [3, 9, 45, 79, 82, 105, 210, 287, 293, 295, 297, 314, 690, 694, 711, 712, 715, 727, 824, 835, 836, 844, 851], "entiti": [132, 133, 144, 158, 161, 170, 304, 450, 451, 696, 697, 728, 781, 849, 852, 864], "entri": [126, 164, 177, 249, 325, 441, 444, 562, 612, 698, 726, 783, 818, 820, 850], "entropi": [244, 423, 424, 425, 427, 472, 728, 811, 835, 849, 851, 860], "entropy_list": 860, "enumer": [298, 690, 692, 698, 713, 714, 718, 719, 736, 756, 776, 799, 803, 825, 827, 844, 845, 854, 861, 867], "env": [825, 827, 830, 831, 848, 851], "environ": [14, 21, 292, 693, 814, 815, 816, 817, 818, 820, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 848, 849, 850, 851, 854, 857, 860, 866, 867], "enzym": [25, 168, 186], "ep": [4, 10, 244, 403, 472, 655, 656, 661, 840, 861], "epoch": [4, 210, 213, 380, 423, 424, 425, 426, 427, 688, 690, 691, 714, 718, 719, 725, 727, 728, 729, 734, 736, 739, 765, 767, 768, 769, 774, 776, 777, 780, 803, 809, 810, 811, 812, 815, 816, 817, 818, 821, 825, 827, 832, 834, 835, 836, 840, 844, 845, 848, 849, 850, 851, 854, 861, 866, 867], "epoch_end": 867, "epoch_start": 867, "epsilon": [178, 179, 394, 407, 408], "epsilon_": [178, 179], "eq": [422, 854], "equal": [128, 129, 139, 173, 182, 205, 219, 244, 296, 302, 307, 322, 354, 386, 421, 455, 472, 499, 500, 562, 607, 699, 754, 796, 841, 851, 860], "equat": [387, 388, 405, 406, 419, 420, 449, 453, 704, 818, 848, 849, 850, 854], "equip": 9, "equival": [26, 73, 222, 223, 224, 225, 245, 250, 251, 262, 263, 264, 265, 289, 296, 322, 325, 332, 382, 387, 396, 401, 406, 412, 419, 420, 430, 537, 544, 589, 604, 606, 608, 613, 614, 615, 624, 625, 626, 642, 643, 670, 673, 705, 706, 711, 716, 726, 820, 833, 834, 850, 854], "equivari": [400, 850], "er": [705, 749, 790], "erdos_renyi_graph": 455, "error": [48, 89, 109, 116, 131, 286, 292, 299, 331, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 630, 631, 632, 666, 678, 694, 700, 744, 754, 785, 796, 825, 827, 830, 831, 857, 867], "errorbar": 860, "especi": [21, 125, 248, 712, 713, 826, 849], "essenc": 851, "essenti": [20, 22, 239, 456, 715, 814, 817, 826, 834, 844, 848, 857], "establish": 4, "estim": [426, 428, 712, 728, 768, 811, 832, 833, 834, 835, 836, 837, 866], "et": [72, 135, 136, 555, 815, 817, 826, 832, 834, 848, 854], "eta": [244, 472], "etc": [0, 1, 4, 11, 21, 125, 162, 248, 354, 684, 693, 694, 705, 710, 711, 715, 717, 721, 727, 820, 835, 844, 860], "ether": 4, "etyp": [4, 26, 27, 29, 30, 31, 32, 33, 34, 36, 39, 47, 48, 50, 51, 53, 55, 57, 60, 61, 62, 63, 80, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 100, 107, 109, 113, 114, 117, 118, 125, 126, 128, 130, 208, 214, 216, 219, 220, 223, 226, 227, 231, 239, 240, 246, 296, 304, 319, 320, 324, 344, 346, 382, 384, 392, 411, 414, 417, 424, 425, 426, 475, 545, 548, 550, 552, 554, 556, 560, 561, 563, 569, 628, 631, 632, 637, 638, 639, 640, 642, 646, 647, 648, 663, 668, 686, 688, 692, 693, 694, 702, 707, 711, 714, 715, 716, 723, 725, 727, 728, 729, 734, 746, 751, 754, 755, 757, 758, 759, 763, 765, 767, 768, 769, 774, 778, 779, 787, 793, 796, 797, 800, 801, 802, 807, 809, 810, 811, 812, 830, 849], "etype2id": 692, "etype2id_map": 692, "etype_attr": 639, "etype_count": 638, "etype_dict": 73, "etype_field": 637, "etype_id": 779, "etype_sort": 240, "etype_weight": [424, 426], "etypes_list": 239, "etypes\u662f\u4e00\u4e2a\u5217\u8868": 767, "eu": 48, "euclidean": [338, 429, 430, 431, 544, 566, 857], "ev": [48, 178, 179], "eval": [729, 769, 812, 816, 817, 818, 825, 827, 848, 857, 861, 866, 867], "eval_dataload": 825, "evalu": [137, 171, 180, 182, 188, 197, 205, 304, 694, 695, 709, 713, 729, 769, 812, 815, 816, 817, 821, 832, 835, 836, 848, 851, 857, 861, 866], "even": [4, 210, 349, 550, 691, 709, 824, 850, 854], "evenli": [231, 238, 844], "event": [164, 166], "everi": [0, 4, 10, 21, 117, 119, 121, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 214, 215, 216, 219, 240, 241, 331, 340, 354, 382, 405, 423, 424, 425, 426, 427, 428, 554, 559, 560, 561, 563, 691, 694, 698, 713, 725, 727, 821, 827, 833, 836, 844, 857, 858, 861, 864, 866], "everyth": [21, 290, 844], "evid": 851, "evolut": [857, 860], "evolv": 850, "eweight": [126, 249, 423, 424, 726, 764, 766, 791], "eweight_nam": [30, 126, 249, 547, 654, 655, 656, 661, 662, 665], "eweight\ub97c": 791, "exact": [709, 867], "exactli": [8, 117, 296, 632, 691, 711, 719, 818, 835, 844, 845, 851, 857], "exampl": [0, 3, 4, 5, 6, 9, 10, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 205, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 234, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 324, 326, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 471, 472, 473, 474, 475, 500, 537, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 574, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 630, 631, 632, 633, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 684, 685, 686, 688, 689, 690, 691, 692, 693, 695, 697, 698, 699, 701, 702, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 725, 726, 727, 728, 729, 771, 774, 800, 810, 812, 813, 815, 816, 817, 818, 819, 823, 824, 825, 826, 830, 831, 832, 833, 834, 835, 836, 837, 839, 840, 841, 843, 844, 845, 847, 848, 849, 850, 851, 853, 854, 856, 857, 859, 860, 861, 863, 865, 866, 867, 869], "examplelay": 455, "exceed": [446, 709], "except": [4, 171, 211, 212, 339, 401, 632, 637, 658, 691, 693, 711, 714, 715, 716, 729, 815, 816, 817, 818, 820, 825, 827, 830, 831, 851, 867], "exception": 824, "exchang": [304, 844], "exclud": [220, 226, 309, 317, 321, 556, 558, 560, 561, 711, 717, 755, 797], "exclude_edg": [309, 317, 560, 561, 710], "exclude_eid": 220, "exclude_seed_edg": [710, 711, 714, 717, 825], "exclude_self": [116, 338, 429, 431, 566], "exclude_self_loop": [226, 556], "excluded_edg": [560, 561], "exclus": [216, 220, 292, 559, 866], "execut": [89, 156, 292, 352, 691, 823, 825, 827, 830, 831, 839, 843, 847, 853, 856, 859, 860, 863, 865, 867, 869], "exhaust": 728, "exhibit": 851, "exist": [0, 4, 21, 27, 28, 114, 115, 117, 142, 143, 186, 200, 226, 231, 238, 317, 335, 348, 349, 550, 556, 580, 627, 631, 640, 645, 655, 656, 661, 680, 689, 691, 697, 711, 728, 735, 775, 813, 815, 816, 824, 830, 831, 832, 834, 835, 844, 849, 854, 857], "exist_ok": [830, 831], "exit": [70, 848], "exmapl": 6, "exp": [354, 388, 389, 409, 448, 569, 570, 820, 851, 857, 861], "expand": [336, 337, 426, 428, 722, 806, 857], "expand_as_pair": [721, 722, 761, 762, 805, 806], "expans": [336, 337], "expect": [109, 120, 199, 200, 307, 312, 403, 419, 702, 787, 815, 848, 849, 861], "expected_fanout_len": 827, "expens": 66, "experi": [14, 173, 547, 662, 719, 832, 837, 851], "experiment": [4, 6, 10, 391, 392, 393, 452, 825, 827, 830, 831], "explain": [141, 423, 424, 425, 426, 427, 428, 683, 704, 813, 848, 851], "explain_graph": [423, 424, 425, 426, 427, 428], "explain_nod": [423, 424, 425, 427], "explan": [1, 3, 11, 142, 143, 189, 190, 209, 217, 220, 222, 223, 224, 225, 423, 424, 425, 426, 427, 428, 693, 711, 716, 848, 849, 850, 851, 854, 857, 860, 861], "explanatori": [425, 427], "explic": 4, "explicit": [701, 820, 857], "explicitli": [286, 331, 691, 692, 701, 786, 820, 825, 827, 830, 831, 857], "exploit": [22, 426, 428, 849], "explor": [426, 428, 682, 817, 855, 857, 864, 866], "explos": [214, 296, 302, 560], "expon": 615, "exponenti": [615, 861], "export": [21, 693, 779, 814, 841, 844], "expos": [20, 22, 824], "express": [5, 696, 725, 728, 834, 852, 860, 864], "extend": [5, 153, 210, 388, 426, 428, 714, 728, 849, 852, 854, 864], "extens": [183, 814, 825, 827, 830, 831, 861], "extent": [178, 179], "extern": [2, 31, 412, 688, 696, 701], "extra": [22, 174, 289, 382, 422, 554, 640, 686, 717, 817, 840, 844, 849], "extra_attr": [289, 827, 867], "extra_cached_hop": [350, 538], "extract": [1, 13, 95, 96, 159, 162, 173, 201, 220, 233, 245, 246, 288, 304, 332, 336, 337, 473, 474, 537, 550, 551, 568, 685, 694, 712, 723, 729, 754, 772, 796, 812, 815, 816, 818, 833, 849, 850], "extract_arch": [685, 732, 772], "extrem": 850, "ey": 835, "e\u662f\u8fb9\u7684\u6570\u91cf": 766, "f": [4, 9, 10, 292, 394, 399, 409, 410, 423, 424, 426, 428, 452, 688, 690, 692, 711, 713, 714, 715, 716, 718, 719, 722, 725, 727, 729, 734, 736, 755, 756, 757, 758, 759, 762, 765, 767, 769, 774, 776, 797, 799, 800, 801, 802, 803, 806, 809, 810, 812, 815, 816, 817, 818, 820, 825, 827, 830, 831, 832, 834, 835, 836, 844, 845, 848, 849, 851, 854, 857, 860, 861, 866, 867], "f1": [382, 678, 851], "f1_": 851, "f2": [382, 678], "f4": 840, "f9065fa7": 156, "f_": [388, 394, 399, 407, 408, 413, 415, 433, 854, 857], "f_r": [723, 763, 807], "f_size": 860, "face": 22, "facilit": 304, "fact": [699, 711, 848, 857], "factor": [394, 416, 448, 719, 849], "factori": [429, 430, 431], "factor\ub97c": 803, "faculti": [155, 187, 193], "fail": [21, 816, 817, 818], "failur": 200, "faithfulli": 186, "fake": 159, "fakenew": 159, "fall": [4, 44, 104, 309, 350, 538, 692], "fallback": 297, "fallback_featur": 297, "fals": [4, 10, 25, 31, 48, 57, 58, 65, 66, 69, 70, 95, 96, 99, 111, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 234, 235, 237, 239, 240, 241, 245, 286, 290, 292, 296, 299, 302, 307, 308, 315, 316, 321, 323, 326, 332, 335, 338, 339, 341, 350, 351, 385, 386, 391, 392, 394, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 412, 414, 415, 416, 417, 419, 421, 422, 425, 426, 427, 428, 429, 430, 431, 433, 441, 444, 445, 447, 449, 454, 473, 537, 538, 540, 542, 543, 544, 550, 551, 554, 556, 557, 559, 560, 561, 562, 563, 566, 567, 568, 585, 630, 631, 632, 638, 640, 642, 643, 644, 647, 648, 658, 659, 664, 666, 682, 684, 686, 687, 688, 690, 692, 693, 694, 702, 712, 718, 727, 731, 733, 734, 736, 746, 754, 755, 756, 757, 759, 767, 771, 773, 774, 776, 778, 787, 796, 797, 798, 799, 800, 802, 810, 815, 816, 817, 818, 820, 825, 827, 829, 830, 831, 832, 836, 840, 844, 845, 849, 850, 851, 854, 857, 860, 861, 866, 867], "famili": [813, 857, 858, 864], "familiar": [715, 728, 844], "famou": 816, "fanout": [214, 216, 219, 240, 241, 296, 298, 302, 307, 312, 391, 392, 393, 560, 561, 562, 691, 692, 710, 718, 737, 754, 777, 778, 796, 825, 827], "faq": 814, "far": [719, 849, 851, 857], "farthest_point_sampl": 6, "fashion": [690, 825], "fast": [22, 125, 138, 139, 140, 248, 338, 390, 395, 429, 431, 566, 698], "fast_neg": 380, "faster": [148, 168, 210, 226, 338, 385, 414, 417, 429, 431, 556, 566, 719, 817, 830, 831], "favor": 835, "fb15k": [157, 158], "fb15k237": 157, "fb15k237dataset": [688, 734, 774], "fc": [402, 404, 405, 409, 425, 427, 851], "fc_neigh": [718, 721, 722, 761, 762, 805, 806], "fc_pool": [721, 722, 761, 762, 805, 806], "fc_self": [718, 721, 722, 761, 762, 805, 806], "feat": [4, 10, 25, 43, 46, 51, 64, 71, 74, 103, 128, 129, 135, 136, 137, 138, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 168, 169, 171, 173, 174, 175, 176, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 217, 219, 235, 308, 315, 344, 345, 346, 347, 383, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 450, 451, 452, 455, 548, 549, 569, 570, 628, 629, 638, 642, 643, 648, 665, 680, 686, 688, 691, 692, 694, 706, 710, 711, 713, 714, 716, 717, 718, 719, 722, 727, 728, 729, 734, 737, 750, 762, 767, 768, 769, 774, 777, 778, 792, 803, 806, 810, 811, 812, 815, 816, 817, 818, 825, 827, 830, 831, 832, 834, 835, 837, 844, 845, 848, 851, 866, 867], "feat0": 129, "feat1": [125, 128, 248, 648, 692, 778], "feat2": [125, 248], "feat3": 125, "feat_0": [406, 830, 831], "feat_1": [830, 831], "feat_a": 850, "feat_b": 850, "feat_data": 315, "feat_dict": [707, 751, 793], "feat_dim": [446, 682], "feat_drop": [391, 393, 397, 402, 404, 405, 418], "feat_dst": [706, 718, 722, 762, 806], "feat_dst\uc758": 792, "feat_list": 453, "feat_mask": [423, 424], "feat_nam": [287, 295, 394, 445, 658, 662, 666, 702, 746, 787], "feat_nn": 433, "feat_siz": [139, 423, 427, 428, 441, 443, 444, 682], "feat_src": [706, 718, 722, 762, 806], "feat_src\uc640": 792, "featmask": 13, "featur": [0, 4, 5, 9, 13, 19, 20, 26, 27, 28, 30, 34, 35, 43, 44, 46, 47, 51, 53, 54, 56, 64, 70, 71, 73, 74, 75, 77, 91, 92, 93, 94, 95, 96, 100, 103, 104, 108, 113, 114, 115, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 208, 210, 214, 216, 217, 219, 221, 222, 223, 224, 225, 233, 235, 237, 239, 240, 241, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 294, 295, 297, 303, 304, 308, 309, 313, 314, 315, 332, 335, 336, 337, 338, 341, 348, 349, 354, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 449, 450, 451, 455, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 544, 548, 549, 550, 551, 553, 554, 555, 557, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 631, 632, 634, 635, 636, 637, 638, 639, 640, 642, 643, 647, 648, 653, 664, 665, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 680, 682, 684, 688, 690, 691, 692, 693, 694, 696, 697, 698, 700, 702, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 723, 724, 725, 726, 727, 728, 729, 734, 744, 755, 757, 759, 764, 765, 768, 769, 774, 779, 784, 785, 787, 793, 797, 799, 800, 801, 802, 803, 806, 808, 809, 810, 811, 812, 815, 816, 817, 820, 824, 825, 826, 827, 828, 829, 832, 834, 836, 837, 841, 844, 848, 849, 850, 851, 854, 857, 860, 862, 864, 866, 867], "feature_data": [308, 830, 831], "feature_nam": [159, 222, 223, 224, 225, 287, 295, 304, 779], "feature_sotr": 315, "feature_stor": 294, "featurefetch": 290, "featureless": 694, "features_to_us": 388, "featurestor": [287, 291, 294], "febd69": 857, "fed": [108, 416, 425, 427], "fedora": 814, "feed": [436, 437, 680, 714, 716, 725, 817, 835, 849, 854, 861], "feed_forward": 861, "feedback": [728, 768, 811], "feedforward": [444, 682], "feel": [21, 820], "fell": 22, "fetch": [7, 21, 208, 222, 223, 224, 225, 290, 294, 714, 717, 718, 824, 825, 827, 851], "fetch_featur": [294, 710, 711, 713, 714, 716, 717, 718, 825, 827, 867], "fetcher": [7, 290, 294, 824], "few": [1, 4, 14, 22, 632, 690, 691, 709, 715, 729, 844, 845, 857, 861], "fewer": [171, 292, 302, 560, 826, 860], "ffn": [436, 437, 861], "ffn1": 817, "ffn2": 817, "field": [21, 22, 25, 27, 28, 114, 115, 146, 151, 152, 168, 169, 184, 186, 192, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 308, 309, 394, 548, 637, 642, 643, 686, 688, 693, 705, 829, 830, 831, 850, 854, 861], "field_of_studi": 779, "fig": [816, 857, 860], "fig2": 860, "figsiz": [850, 860], "figur": [690, 694, 702, 709, 817, 818, 850, 854, 860, 861], "file": [4, 21, 22, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 206, 209, 234, 235, 236, 237, 239, 291, 308, 343, 564, 683, 685, 688, 691, 693, 694, 695, 702, 725, 729, 732, 772, 779, 814, 815, 816, 818, 823, 825, 827, 829, 832, 834, 835, 837, 839, 840, 843, 844, 845, 847, 848, 849, 850, 851, 853, 856, 859, 863, 865, 869], "file_nam": 686, "file_path": [685, 732, 772], "file_system": 867, "filelock": [825, 827, 830, 831], "filenam": [199, 204, 343, 564], "filesystem": 235, "fill": [27, 28, 93, 113, 114, 115, 117, 446, 567, 609, 610, 611, 623, 648, 857], "fill_data": [29, 117, 648], "film": 134, "filter": [53, 54, 163, 386, 388, 389, 390, 395, 398, 401, 402, 404, 405, 406, 409, 412, 419], "filter_edg": 861, "filter_nod": 861, "final": [6, 22, 132, 133, 144, 170, 239, 388, 416, 445, 449, 688, 705, 706, 709, 723, 727, 729, 749, 790, 814, 830, 831, 849, 850, 851, 854, 861, 866], "final_ft": [705, 749, 790], "final_tmp": [425, 427], "find": [14, 21, 26, 55, 130, 131, 317, 331, 426, 428, 556, 695, 722, 728, 815, 816, 817, 818, 833, 834, 835, 837, 849, 850, 851, 857, 861], "find_edg": [4, 89, 757, 800], "fine": [89, 307, 312, 713, 820, 841, 854], "fingerprint": 844, "finish": [21, 815, 816, 818, 830, 831, 844, 866], "first": [4, 9, 21, 22, 27, 51, 56, 73, 118, 119, 121, 123, 124, 125, 126, 130, 131, 137, 139, 140, 141, 162, 171, 180, 181, 182, 184, 188, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 229, 230, 239, 244, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 296, 300, 325, 331, 336, 337, 338, 354, 382, 388, 401, 412, 419, 423, 429, 431, 438, 472, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 553, 557, 558, 559, 562, 566, 613, 623, 632, 637, 638, 648, 682, 687, 691, 692, 694, 702, 712, 713, 715, 721, 722, 727, 729, 814, 815, 816, 820, 826, 830, 831, 833, 835, 836, 837, 840, 844, 845, 848, 849, 850, 851, 854, 857, 861, 862, 864, 866, 867], "firstli": 817, "fission": 167, "fit": [210, 308, 380, 407, 408, 415, 694, 709, 712, 724, 826, 828, 833, 834], "five": [137, 141, 142, 143, 155, 187, 193, 686, 829, 854], "fix": [197, 198, 205, 214, 216, 217, 350, 410, 538, 560, 710, 861], "flag": [31, 57, 58, 245, 333, 394, 416, 454, 473, 679, 814, 844], "flatten": [558, 719, 803], "flexibl": [20, 632, 686, 824, 861], "flickr": 160, "flickrdataset": 194, "flip": [630, 666, 825, 827, 830, 831], "flist": 73, "float": [4, 9, 10, 22, 95, 96, 117, 120, 138, 139, 140, 142, 143, 161, 162, 163, 178, 183, 189, 190, 198, 205, 240, 241, 243, 244, 296, 302, 307, 334, 340, 342, 354, 380, 386, 387, 388, 391, 392, 393, 394, 395, 397, 402, 403, 404, 405, 406, 407, 408, 410, 414, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 430, 436, 437, 441, 443, 444, 454, 471, 472, 544, 550, 551, 552, 556, 557, 559, 560, 561, 562, 605, 616, 634, 635, 636, 645, 648, 651, 652, 653, 655, 656, 661, 665, 672, 677, 686, 688, 699, 705, 718, 724, 757, 764, 774, 784, 790, 800, 808, 815, 816, 817, 832, 834, 836, 850, 854, 861, 867], "float16": [9, 636, 705, 719, 790, 803], "float16\uc744": 790, "float32": [4, 9, 10, 47, 75, 95, 96, 117, 146, 147, 165, 168, 169, 174, 219, 246, 288, 353, 388, 398, 399, 402, 404, 405, 415, 474, 550, 551, 552, 563, 584, 635, 659, 665, 678, 688, 691, 692, 699, 702, 713, 734, 737, 743, 746, 774, 777, 778, 784, 787, 820, 833, 836], "float64": [126, 249, 582, 634, 686, 830, 831, 837], "floattensor": [440, 558, 559, 560, 561, 563, 706, 750, 792, 850], "flow": [127, 131, 167, 208, 210, 211, 212, 684, 711, 714, 716, 796, 797, 800, 802, 826, 827, 861], "flush": 719, "fly": [391, 392, 393, 857], "fmt": 32, "fn": [5, 9, 20, 21, 34, 73, 91, 92, 93, 94, 100, 113, 121, 423, 424, 426, 455, 669, 670, 671, 672, 673, 674, 675, 676, 677, 705, 706, 707, 715, 719, 722, 725, 726, 728, 749, 750, 751, 758, 762, 765, 766, 768, 790, 791, 792, 793, 801, 803, 806, 809, 811, 825, 827, 834, 835, 848, 849, 850, 854, 860, 861], "fn_": 851, "focu": [840, 841, 854, 857], "focus": [688, 849, 850, 852, 861, 864], "folder": [22, 156, 693, 694, 702, 787, 844], "follow": [0, 3, 4, 5, 6, 9, 20, 21, 22, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 140, 141, 142, 143, 148, 156, 178, 179, 182, 189, 190, 204, 209, 214, 216, 219, 220, 229, 230, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 292, 294, 299, 301, 308, 331, 332, 336, 337, 338, 341, 342, 343, 348, 354, 381, 382, 383, 388, 399, 401, 403, 406, 412, 413, 414, 423, 424, 429, 430, 431, 432, 433, 434, 435, 439, 440, 450, 451, 454, 455, 471, 473, 474, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 540, 542, 543, 544, 552, 554, 558, 559, 560, 561, 562, 566, 568, 569, 570, 571, 572, 574, 610, 611, 631, 632, 633, 637, 638, 639, 644, 647, 648, 653, 659, 663, 664, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 697, 698, 699, 701, 702, 704, 706, 709, 710, 711, 712, 713, 714, 715, 716, 719, 721, 724, 725, 726, 727, 728, 729, 754, 755, 764, 796, 797, 808, 814, 817, 818, 820, 824, 825, 826, 827, 830, 831, 832, 833, 834, 835, 837, 840, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "follow_dst": [724, 764, 808], "follow_edg": 830, "follow_edges_path": 830, "follow_src": [724, 764, 808], "followed_bi": 711, "follows\uc640": 787, "foo": 70, "footnot": [840, 841], "footprint": [694, 706], "foral": [393, 409, 414, 418, 497, 722, 762, 806, 834], "forc": [231, 238, 308, 840, 857, 861], "force_even": [231, 238, 690, 736, 776, 845], "force_preprocess": 308, "force_reload": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 684, 688, 731, 734, 771, 774], "forcibli": [394, 416], "forg": 840, "fork": [8, 21, 840], "form": [20, 21, 22, 26, 51, 61, 88, 130, 131, 173, 208, 210, 245, 286, 296, 300, 331, 332, 336, 337, 349, 380, 384, 403, 425, 426, 427, 428, 456, 473, 537, 545, 546, 555, 560, 561, 630, 640, 646, 666, 692, 694, 701, 727, 745, 757, 786, 800, 827, 834, 835, 836, 849, 850, 851, 860, 862, 864], "formal": [20, 72, 244, 472, 646, 694, 816, 849], "format": [0, 4, 12, 13, 30, 31, 32, 34, 35, 41, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 118, 119, 126, 131, 239, 240, 245, 246, 248, 249, 286, 287, 294, 295, 296, 304, 308, 309, 315, 318, 322, 330, 331, 332, 336, 337, 473, 475, 537, 548, 550, 552, 564, 569, 571, 572, 601, 610, 611, 623, 638, 685, 686, 688, 692, 701, 712, 719, 721, 722, 732, 734, 761, 762, 772, 774, 778, 779, 803, 805, 806, 820, 827, 829, 830, 831, 834, 835, 844, 845, 848, 849, 851, 854, 857, 861, 866], "former": [354, 423, 424, 425, 426, 427, 428, 556, 691, 711], "formul": [401, 412, 605, 616, 723, 725, 826, 832, 835, 849, 850, 862, 864], "formula": [354, 386, 407, 408, 411, 415, 705, 722], "formular": 664, "forth": [22, 638], "forum": 21, "forward": [4, 70, 230, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 706, 711, 713, 714, 715, 716, 718, 719, 720, 723, 725, 726, 727, 728, 729, 755, 756, 757, 758, 759, 762, 763, 765, 767, 768, 769, 797, 799, 800, 801, 802, 803, 804, 807, 809, 810, 811, 812, 815, 816, 817, 818, 820, 825, 827, 832, 834, 835, 836, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "forward_infer": 857, "forward_train": 857, "found": [26, 48, 70, 317, 429, 431, 547, 559, 662, 679, 686, 688, 705, 723, 815, 820, 821, 825, 827, 830, 831, 834, 848, 849, 861, 866, 867], "four": [499, 566, 665, 689, 692, 693, 701, 724, 829, 844, 850, 851], "fourth": 558, "fp16": [719, 803], "fp16\ub97c": 803, "fp16\uc744": 803, "fp_": 851, "frac": [120, 178, 179, 243, 244, 342, 354, 388, 389, 394, 406, 409, 412, 414, 419, 432, 448, 449, 471, 472, 562, 569, 570, 664, 727, 767, 810, 815, 816, 817, 820, 848, 849, 850, 851, 857, 860, 861], "frac_list": [207, 866], "fraction": [207, 406], "fragment": 841, "frame": [9, 816, 825, 827, 857, 860], "framework": [4, 7, 9, 21, 23, 42, 59, 62, 63, 108, 125, 126, 131, 186, 234, 245, 246, 248, 249, 286, 331, 332, 336, 337, 338, 429, 431, 436, 437, 473, 474, 537, 545, 546, 560, 561, 562, 563, 566, 691, 698, 700, 702, 720, 785, 813, 821, 824, 830, 831, 834, 854, 857, 861], "fraud": [145, 161, 162, 163], "frauddataset": [161, 163], "fraudul": [145, 161, 162], "free": [21, 178, 179, 813, 820, 826, 829, 851], "freebas": 158, "frequenc": 394, "frequent": [22, 135, 136, 137, 182, 694], "friendship": [194, 697, 727], "from": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 22, 26, 27, 32, 45, 48, 68, 73, 79, 82, 89, 93, 94, 95, 96, 105, 112, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 229, 230, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 286, 287, 288, 289, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 327, 329, 330, 331, 332, 335, 336, 337, 338, 340, 342, 343, 348, 349, 354, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 471, 472, 473, 474, 537, 544, 545, 546, 547, 551, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 567, 568, 571, 572, 607, 609, 610, 611, 623, 627, 631, 632, 637, 639, 640, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 671, 672, 673, 680, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 696, 700, 701, 705, 706, 707, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 727, 728, 729, 731, 732, 733, 734, 735, 761, 762, 767, 771, 772, 773, 774, 775, 779, 783, 785, 786, 797, 803, 805, 806, 809, 810, 811, 815, 816, 817, 818, 820, 823, 824, 825, 826, 827, 830, 831, 832, 833, 834, 835, 836, 839, 840, 843, 844, 845, 847, 849, 851, 853, 854, 856, 857, 859, 860, 861, 863, 865, 866, 867, 869], "from_coo": [815, 820], "from_csc": [718, 820], "from_csr": 820, "from_cudf_edgelist": 247, "from_networkx": [249, 286, 698, 742, 783], "from_numpi": [314, 837, 850], "from_scipi": [248, 286, 698, 742, 783], "fromnumer": [848, 851], "fromt": [146, 169], "front": 722, "frontier": [4, 91, 92, 123, 124, 229, 230, 539, 540, 541, 542, 543, 555, 644, 691, 692, 737, 754, 777, 778, 796], "frontier2": [754, 796], "fsspec": [825, 827, 830, 831], "fstab": 844, "ft": [705, 726, 749, 766, 790, 791], "full": [4, 26, 153, 191, 292, 299, 308, 709, 713, 715, 716, 718, 725, 729, 802, 815, 816, 817, 825, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 850, 851, 854, 857, 860, 861, 866, 867], "fulli": [4, 21, 290, 690, 722, 820, 821, 848], "func": [34, 35, 53, 54, 352, 678, 705, 707, 751, 793, 854, 861], "funcanim": [816, 857, 860], "function": [0, 1, 4, 13, 21, 26, 27, 28, 34, 35, 53, 54, 64, 70, 71, 73, 89, 91, 92, 93, 94, 95, 96, 100, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 130, 146, 156, 168, 169, 183, 197, 213, 231, 234, 235, 238, 240, 242, 244, 245, 246, 249, 289, 292, 294, 298, 299, 302, 304, 305, 306, 307, 309, 312, 316, 317, 332, 335, 338, 339, 340, 341, 349, 350, 352, 381, 382, 383, 386, 390, 391, 394, 395, 396, 397, 398, 401, 402, 404, 405, 406, 407, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 443, 444, 448, 449, 452, 455, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 556, 559, 560, 561, 562, 564, 566, 571, 572, 574, 578, 579, 613, 630, 631, 633, 637, 638, 639, 640, 641, 642, 643, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 684, 685, 688, 689, 691, 693, 694, 698, 704, 706, 707, 710, 711, 714, 715, 716, 719, 720, 723, 725, 726, 727, 728, 729, 749, 750, 751, 757, 758, 759, 762, 765, 766, 767, 769, 789, 790, 791, 792, 793, 800, 801, 802, 803, 806, 807, 809, 810, 812, 815, 816, 817, 818, 821, 825, 826, 827, 830, 831, 832, 835, 836, 840, 844, 845, 848, 849, 850, 851, 852, 854, 857, 864, 867], "functional_datapip": [292, 298, 299, 312, 710, 714, 718], "functool": [711, 825, 849, 857, 861], "fundament": [849, 857], "further": [45, 66, 68, 73, 79, 82, 91, 92, 93, 94, 100, 105, 113, 210, 292, 299, 694, 706, 723, 725, 814, 820, 821, 851, 861], "furthermor": [125, 130, 693, 700, 849], "fuse": [9, 216, 498, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 518, 519, 522, 523, 524, 525], "fused_csc_sampling_graph": [296, 298, 302, 307, 316, 827], "fusedcscsamplinggraph": [298, 302, 307, 308, 316, 323, 324, 327, 710, 718, 827, 830, 831], "futur": [6, 21, 183, 686, 719, 825, 827, 830, 831, 857, 861], "futurewarn": [825, 827, 830, 831], "fwtype": 555, "g": [0, 4, 5, 6, 9, 10, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 239, 240, 241, 242, 245, 246, 247, 248, 249, 286, 323, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 354, 380, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 440, 445, 446, 449, 450, 451, 452, 454, 455, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 566, 567, 568, 571, 572, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 722, 723, 725, 727, 728, 733, 734, 736, 737, 738, 741, 743, 744, 745, 746, 750, 751, 752, 754, 755, 756, 757, 758, 759, 762, 763, 765, 767, 768, 773, 774, 776, 777, 778, 779, 782, 784, 785, 786, 787, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 806, 807, 809, 810, 811, 814, 815, 816, 817, 820, 821, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866], "g1": [36, 37, 38, 89, 101, 102, 108, 122, 128, 129, 343, 382, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 447, 455, 548, 549, 557, 559, 564, 568, 569, 570, 642, 643, 658, 678, 727, 767, 810, 850], "g1_node_feat": [432, 433, 434, 435, 436, 437, 438, 439, 440], "g2": [36, 37, 38, 95, 96, 101, 102, 122, 128, 129, 130, 343, 382, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 447, 455, 548, 549, 558, 559, 564, 568, 569, 570, 642, 643, 658, 678, 727, 767, 810], "g2_node_feat": [432, 433, 434, 435, 436, 437, 438, 439, 440], "g3": [455, 658, 678], "g32": [701, 745, 786], "g32_2": [701, 745, 786], "g64": [701, 745, 786], "g64_2": [701, 745, 786], "g_": [4, 10, 666], "g_2": 335, "g_atom": 179, "g_batch": 183, "g_edg": [560, 561], "g_int": 64, "g_l": 850, "g_layer": 850, "g_list": 564, "g_long": 71, "g_m": 857, "g_nodes_explain": 428, "g_r": [723, 763, 807], "g_sort": [562, 571, 572], "g_t": 857, "gai": [848, 850], "gain": [718, 721, 761, 805, 821, 848, 849, 850, 851, 854, 857, 860, 861], "galleri": [21, 823, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 844, 845, 846, 848, 849, 850, 851, 854, 857, 860, 861, 864, 866, 867, 868], "game": [4, 27, 28, 30, 31, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 171, 214, 216, 219, 245, 246, 331, 332, 336, 337, 354, 382, 424, 425, 426, 473, 474, 537, 545, 550, 551, 552, 554, 637, 638, 639, 640, 647, 648, 653, 663, 664, 668, 678, 702, 746, 754, 787, 796], "gamma": [817, 850], "gamma_": [388, 448, 850], "gamma_k": 388, "gan": [848, 861], "gap": [178, 179, 433, 851], "gat": [354, 399, 719, 726, 791, 803, 820, 821, 852, 864], "gatconv": [391, 402, 706, 719, 750, 792, 803, 851], "gate": [410, 411, 433, 857], "gate_nn": 433, "gatedgcn": 410, "gatedgraphconv": 433, "gather": [9, 214, 215, 216, 302, 307, 496, 560, 716, 729, 754, 796, 827, 834, 850], "gathermm": 13, "gatlay": 851, "gatv2": 405, "gat\ub97c": 803, "gaussian": [14, 409, 448], "gb": [234, 292, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 314, 315, 316, 317, 318, 330, 694, 710, 711, 713, 714, 716, 717, 718, 821, 825, 827, 830, 831, 867], "gcc": [693, 779, 814], "gclass": [423, 427, 428, 836], "gcmc": [755, 797], "gcmclayer": [725, 765, 809], "gcn": [134, 149, 155, 185, 187, 193, 209, 397, 398, 403, 412, 418, 440, 471, 665, 711, 713, 716, 718, 719, 721, 722, 755, 757, 761, 762, 791, 797, 800, 805, 806, 814, 821, 836, 850, 852, 854, 864], "gcn_model": 815, "gcn_msg": 848, "gcn_reduc": 848, "gcnii": 406, "gcnlayer": [815, 848], "gcnnorm": 13, "gcn\uc744": [799, 802], "gdata_pars": 148, "gdc": 13, "gdelt": [25, 164], "gdeltdataset": [689, 735, 775], "ge": 431, "gen": [825, 827], "gender": 833, "gene": [560, 561, 702, 746, 787, 851], "gener": [0, 1, 3, 4, 5, 7, 9, 10, 20, 34, 73, 91, 92, 93, 94, 100, 113, 117, 123, 124, 128, 129, 138, 139, 140, 141, 142, 143, 172, 174, 183, 189, 190, 207, 210, 211, 212, 213, 217, 220, 226, 227, 229, 291, 296, 300, 306, 316, 338, 382, 388, 391, 392, 393, 399, 402, 423, 424, 425, 427, 429, 431, 445, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 545, 546, 548, 549, 553, 555, 556, 557, 559, 560, 566, 630, 644, 648, 666, 682, 690, 691, 693, 694, 698, 701, 704, 705, 709, 711, 714, 715, 716, 717, 719, 721, 724, 725, 808, 817, 823, 824, 826, 827, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 844, 845, 846, 848, 849, 850, 851, 854, 859, 860, 861, 866, 867, 868], "generaliz": 851, "generic_join": 292, "gene\u76f8\u4e92\u4f5c\u7528\u8fb9": 746, "gene\u8282\u70b9": 746, "gentl": 848, "geom": [134, 149, 155, 185, 187, 193, 471], "geometr": [134, 149, 155, 185, 186, 187, 193, 409, 448, 471, 821], "geomgcndataset": [149, 155, 185, 187, 193], "get": [0, 1, 4, 22, 26, 30, 31, 42, 43, 44, 46, 48, 51, 56, 68, 70, 74, 77, 103, 104, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 209, 210, 231, 238, 244, 246, 287, 290, 292, 293, 295, 297, 304, 314, 333, 338, 381, 384, 419, 429, 431, 440, 472, 474, 556, 560, 562, 566, 568, 571, 572, 640, 678, 682, 684, 686, 687, 688, 690, 692, 694, 699, 702, 705, 711, 713, 714, 716, 723, 724, 727, 728, 763, 771, 773, 774, 784, 787, 796, 807, 814, 815, 816, 820, 825, 827, 841, 851, 857, 861, 866], "get_aggregate_fn": [723, 763, 807], "get_attent": [398, 399, 402, 404, 405, 433], "get_cmap": 850, "get_dataload": 866, "get_dataset": 861, "get_dist": [430, 544], "get_edge_partition_polici": 4, "get_edge_split": [687, 733, 773], "get_etype_id": [4, 638, 779], "get_group": 837, "get_idx_split": [687, 733, 773, 844], "get_log_prob": 857, "get_node_partition_polici": [4, 692, 778], "get_ntype_id": [4, 638, 779], "get_o": 861, "get_part_s": 4, "get_partition_book": [4, 690, 692, 736, 776, 778, 845], "get_seq_by_id": 861, "get_siz": 4, "ggnn": 433, "ghz": 179, "giant": 130, "gid": 568, "gilmer": [826, 834], "gin": [727, 767, 810, 836, 866], "ginconv": [727, 767, 810, 866], "gindataset": [423, 427, 428, 688, 727, 734, 767, 774, 810, 836, 866], "girvan": 167, "git": [693, 779, 814], "github": [135, 136, 151, 152, 153, 159, 162, 165, 168, 186, 210, 679, 693, 747, 779, 813, 814, 825, 827, 830, 831, 840, 849, 850, 860, 861], "git\uc5d0\uc11c": 779, "give": [4, 11, 27, 114, 207, 244, 335, 472, 553, 567, 632, 677, 698, 699, 714, 784, 815, 825, 836], "given": [4, 5, 6, 9, 14, 22, 30, 31, 32, 35, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 79, 81, 82, 87, 88, 93, 109, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 148, 164, 183, 184, 197, 198, 200, 205, 208, 209, 213, 214, 216, 219, 220, 229, 230, 231, 232, 233, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 286, 289, 292, 296, 298, 302, 304, 307, 312, 317, 318, 322, 331, 332, 339, 341, 343, 349, 386, 389, 391, 392, 393, 395, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 412, 414, 415, 418, 425, 427, 430, 449, 455, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 544, 546, 548, 549, 553, 555, 556, 559, 560, 561, 562, 563, 567, 571, 572, 591, 594, 595, 596, 598, 627, 632, 637, 640, 644, 646, 648, 655, 656, 658, 659, 661, 664, 678, 686, 691, 694, 700, 701, 716, 725, 727, 728, 729, 786, 820, 824, 827, 832, 835, 836, 837, 849, 851, 854, 857, 860, 861], "gklib": [693, 779], "gklib\uc744": 779, "glabel": 564, "glist": 343, "gloabl": 4, "glob": [373, 374, 375, 376, 377, 378, 432, 433, 434, 435, 436, 437, 438, 439, 440, 465, 466, 467, 468, 469, 470], "global": [4, 13, 128, 129, 164, 235, 236, 239, 384, 433, 443, 560, 630, 666, 814, 844], "global_test_eid": 845, "global_valid_eid": 845, "gloo": [690, 691, 736, 737, 776, 777, 840, 844, 845, 866], "glorot": [397, 404, 405, 409, 411, 412, 415, 418, 420], "glove": [184, 854], "glove_emb": 184, "glove_embed_fil": 184, "gluon": [199, 200, 720, 804], "gluoncv": 814, "gluonnlp": 814, "gluon\u7684nn\u5757": 760, "gm_": [4, 10], "gml": [702, 787], "gnn": [4, 7, 12, 21, 135, 136, 137, 146, 151, 152, 153, 159, 162, 165, 169, 171, 180, 182, 188, 210, 213, 214, 215, 216, 219, 220, 296, 302, 354, 413, 423, 424, 425, 426, 427, 428, 453, 455, 560, 703, 709, 713, 717, 724, 725, 726, 728, 729, 747, 758, 764, 769, 788, 791, 795, 796, 799, 803, 808, 809, 811, 812, 813, 821, 823, 825, 826, 827, 837, 838, 839, 841, 848, 850, 851, 866, 867], "gnn_modul": 413, "gnnbenchmarkdataset": [135, 136, 151, 152, 153], "gnnexplain": [142, 143, 189, 190, 424], "gnnlayer": 413, "gnn\uc5d0": 802, "gnn\uc740": 795, "gnn\uc744": [796, 799, 809, 811], "gnu": [814, 841], "go": [14, 21, 22, 559, 813, 814, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "goal": 188, "goe": [4, 20, 21, 701, 711, 834, 835], "gone": 836, "good": [135, 136, 162, 835, 844, 851], "googl": [21, 819, 861], "gossipcop": 159, "got": 827, "goto": 156, "gp_": [4, 10], "gpb": [4, 239, 692, 778], "gpt": 861, "gpu": [6, 9, 10, 14, 21, 89, 108, 110, 112, 118, 119, 125, 126, 210, 248, 249, 286, 289, 297, 314, 331, 338, 341, 349, 430, 452, 544, 553, 555, 559, 560, 561, 566, 580, 632, 633, 696, 705, 709, 713, 716, 717, 719, 724, 785, 790, 795, 799, 803, 808, 813, 814, 816, 817, 821, 823, 826, 827, 844, 854, 861, 869], "gpu_0": [10, 452], "gpu_cach": 210, "gpu\u56fe\u53ea\u63a5\u53d7gpu\u4e0a\u7684\u7279\u5f81\u6570\u636e": 744, "gpu\ub85c": [785, 797, 802], "gpu\ub97c": 799, "gpu\uc5d0": [785, 795, 798, 802], "gpu\uc5d0\uc11c": [781, 798], "graclu": 6, "grad": [9, 118, 119], "grad_fn": [9, 118, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 409, 411, 412, 415, 417, 418, 419, 420, 433, 435, 436, 437, 440], "gradient": [4, 9, 10, 380, 384, 394, 413, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 690, 709, 719, 795, 803, 836, 844, 866], "gradscal": [719, 803], "gradual": [857, 860, 861], "graident\ub4e4\uc740": 803, "grain": [307, 312, 820, 841, 854], "granular": [164, 166], "grapbolt": 718, "graph": [3, 6, 9, 11, 13, 14, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 287, 288, 290, 291, 294, 295, 296, 298, 299, 302, 303, 304, 307, 308, 309, 311, 312, 313, 316, 317, 318, 324, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 682, 684, 687, 689, 690, 695, 699, 700, 703, 704, 705, 706, 712, 717, 718, 719, 721, 723, 726, 733, 734, 735, 738, 739, 742, 743, 744, 745, 746, 749, 754, 762, 764, 765, 766, 767, 768, 769, 771, 773, 774, 775, 778, 779, 780, 781, 782, 783, 784, 785, 786, 790, 791, 793, 795, 796, 797, 798, 800, 802, 803, 807, 808, 809, 810, 811, 812, 814, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 834, 838, 839, 840, 853, 854, 858, 859, 863, 867, 868, 869], "graph0": 686, "graph1": 686, "graph_data": [686, 702, 746, 787], "graph_degre": 183, "graph_edg": 837, "graph_emb": 857, "graph_embed_func": 857, "graph_feat": [128, 129, 427, 428], "graph_format": 239, "graph_hidden_s": 857, "graph_id": [686, 837], "graph_id_field": 686, "graph_index": 21, "graph_label": 564, "graph_list": 343, "graph_nam": [4, 239, 690, 691, 692, 693, 694, 736, 737, 738, 776, 777, 778, 779, 844, 845], "graph_op": 857, "graph_path": [689, 735, 775], "graph_pool": 861, "graph_prop": 857, "graph_prop_func": 857, "graph_properti": 837, "graph_sampl": [210, 211, 212], "graph_topologi": [825, 827, 830, 831], "graph_train": 845, "graphbolt": [234, 235, 239, 240, 241, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 710, 711, 712, 714, 716, 717, 718, 825, 827, 828, 830, 831, 841, 867], "graphbolt_test": 308, "graphconv": [382, 387, 396, 403, 406, 413, 419, 420, 425, 427, 428, 711, 716, 719, 720, 722, 727, 729, 755, 756, 757, 759, 762, 767, 769, 797, 799, 800, 802, 804, 806, 810, 812, 832, 836, 848], "graphdataload": [423, 427, 428, 687, 688, 727, 733, 734, 767, 773, 774, 810, 817, 836, 866], "graphdataloader\uc758": 810, "graphemb": 857, "graphgp": 445, "graphic": 304, "graphmetadata": 296, "graphnet": 821, "graphorm": [444, 680], "graphormerlay": 682, "graphpartitionbook": [4, 231, 235, 236, 238, 240, 692], "graphpool": 861, "graphpr": 138, "graphprop": 857, "graphproppr": [138, 687, 733, 773, 817], "graphsag": [175, 181, 393, 397, 418, 690, 712, 713, 716, 718, 722, 729, 739, 756, 769, 780, 799, 800, 802, 806, 812, 825, 827, 834, 844, 845, 851, 867], "graphsage\u4e2dgcn\u805a\u5408\u4e0d\u9700\u8981fc_self": 762, "graphsage\u7684\u5b9e\u73b0": 759, "graphsage\ub97c": 776, "graphsage\uc5d0\uc11c": 812, "graphsaint": [160, 194, 217], "graphtransform": 682, "graphviz_layout": 854, "graphwis": 437, "graph\uc5d0": 796, "graph\uc758": [797, 802, 812], "great": 850, "greater": [131, 197, 286, 314, 331, 560, 561, 562, 841, 854], "greatli": [852, 864], "greedi": 6, "green": 826, "grid": [171, 172, 190], "grid_siz": 190, "groud": 812, "ground": [150, 154, 167, 176, 729, 812, 832, 845, 850, 857, 867], "group": [4, 20, 137, 166, 167, 182, 292, 352, 353, 413, 452, 680, 682, 690, 702, 714, 820, 834, 837, 850], "groupbi": 837, "grouplen": 173, "growth": 849, "grpah": 667, "gru": [411, 857], "grucel": 857, "gsddmm": 13, "gsddmmbackward": 9, "gspmm": 13, "gspmmbackward": [9, 405], "gt": [441, 442, 443, 444, 445, 446, 447, 448, 681, 817, 825, 827, 830, 831], "gtlayer": 817, "gtmodel": 817, "guarante": [4, 101, 102, 226, 231, 238, 556, 866], "guid": [1, 3, 11, 21, 209, 210, 214, 215, 216, 217, 220, 222, 223, 224, 225, 632, 688, 693, 712, 729, 738, 788, 813, 844, 854], "guide_cn": [747, 764], "guidelin": 813, "guo": [854, 861], "gz": [685, 732, 772], "gz_file_path": [685, 732, 772], "gz\u6216": 732, "gz\u6587\u4ef6": 732, "h": [4, 5, 22, 25, 27, 28, 30, 34, 35, 43, 44, 46, 51, 53, 54, 56, 70, 73, 74, 77, 91, 92, 93, 94, 100, 103, 104, 108, 113, 114, 115, 116, 121, 128, 129, 145, 177, 178, 179, 244, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 348, 386, 387, 390, 391, 399, 400, 402, 404, 405, 406, 414, 419, 420, 423, 424, 425, 426, 427, 428, 446, 447, 448, 449, 450, 451, 455, 472, 474, 548, 549, 553, 554, 569, 570, 638, 639, 640, 642, 643, 651, 652, 653, 659, 664, 665, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 700, 705, 707, 709, 715, 719, 722, 725, 727, 728, 729, 744, 749, 751, 753, 754, 756, 758, 762, 765, 767, 768, 769, 785, 790, 793, 795, 796, 799, 801, 803, 806, 809, 810, 811, 812, 814, 817, 818, 820, 826, 827, 832, 834, 835, 836, 845, 848, 849, 851, 854, 857, 861], "h1": [5, 47, 75, 382, 639, 660, 817], "h2": [5, 47, 70, 75, 382, 639, 660, 817], "h2h": 849, "h2o": 849, "h_": [120, 388, 393, 399, 404, 405, 410, 411, 415, 418, 424, 426, 722, 723, 762, 763, 806, 807, 818, 834, 848, 851, 854], "h_atom": 179, "h_cat": 854, "h_dict": [729, 769, 812], "h_dim": 849, "h_dst": [449, 715, 756, 758, 799, 801], "h_e": [394, 400, 416], "h_feat": [827, 832, 834, 835, 836], "h_g": [727, 767, 810], "h_head": [450, 451], "h_i": [386, 389, 390, 394, 395, 396, 397, 398, 400, 401, 404, 405, 407, 408, 409, 411, 412, 415, 416, 417, 418, 449, 453, 820, 849, 851, 861], "h_item": [729, 769, 812], "h_j": [386, 389, 394, 396, 398, 400, 401, 404, 405, 406, 407, 408, 412, 415, 416, 417, 418, 449, 849, 854], "h_jl": 854, "h_max": 5, "h_n": [394, 400, 416, 834], "h_neg_dst": 845, "h_neg_src": 845, "h_neigh": [715, 722, 758, 762, 801, 806], "h_new": 5, "h_pos_dst": 845, "h_pos_src": 845, "h_self": [722, 762, 806], "h_size": 854, "h_src": [449, 715, 758, 801], "h_sub_g": [702, 746, 787], "h_sum": [5, 128, 129], "h_t": 861, "h_tail": [450, 451], "h_total": 834, "h_u": [725, 765, 809, 826, 834, 835, 857], "h_user": [729, 769, 812], "h_v": [721, 725, 727, 761, 765, 767, 805, 809, 810, 826, 834, 835, 848], "h_x": 400, "ha": [4, 5, 9, 14, 22, 27, 28, 30, 31, 32, 34, 36, 37, 47, 48, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 107, 113, 114, 115, 117, 118, 119, 120, 122, 131, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 160, 162, 166, 167, 168, 170, 173, 175, 176, 184, 191, 192, 194, 220, 221, 230, 239, 245, 286, 289, 290, 292, 309, 325, 331, 332, 336, 337, 338, 341, 348, 350, 382, 403, 412, 429, 430, 431, 448, 452, 473, 475, 537, 544, 548, 550, 552, 553, 556, 558, 559, 562, 566, 569, 570, 571, 572, 605, 632, 637, 642, 643, 684, 686, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 702, 705, 711, 712, 713, 715, 719, 720, 722, 724, 725, 727, 774, 782, 814, 817, 818, 820, 821, 829, 830, 831, 833, 834, 835, 836, 844, 845, 848, 849, 850, 851, 854, 857, 858, 861, 862, 864], "hadamard": 817, "half": [9, 141, 636, 705, 706, 790, 861], "halo": [235, 239, 350, 538, 693, 694, 779], "halo_hop": 239, "halt": [559, 861], "halt_and_accum": 861, "halt_dec": 861, "halt_enc": 861, "haltingunit": 861, "hamilton": 834, "hand": 694, "handcraft": [161, 163], "handl": [210, 291, 386, 398, 399, 401, 402, 404, 405, 406, 409, 412, 419, 498, 685, 686, 693, 694, 696, 698, 701, 705, 722, 723, 828, 833, 836, 851, 857, 861], "hang": [292, 867], "hao": 851, "happen": [210, 226, 556, 850], "happend": 164, "har": [852, 864], "hard": [21, 244, 472, 857], "hardwar": [717, 841], "harm": [302, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419], "harvard": 861, "has_cach": [156, 684, 689, 731, 735, 771, 775], "has_dupl": 820, "has_edges_between": [560, 561, 857], "has_nontree_edg": [230, 540], "has_reverse_edg": [230, 540], "has_top": 779, "hasattr": 139, "hash": [156, 199, 200, 242, 685, 732, 772], "hash_kei": 156, "hat": [406, 410, 423, 424, 835, 848, 850, 860], "have": [4, 6, 9, 10, 14, 21, 22, 26, 34, 35, 48, 53, 55, 56, 57, 58, 60, 61, 68, 87, 88, 93, 94, 100, 115, 116, 117, 118, 119, 122, 125, 126, 130, 131, 161, 165, 171, 174, 180, 186, 188, 197, 205, 210, 211, 212, 214, 216, 219, 220, 226, 227, 230, 233, 234, 240, 241, 245, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 295, 296, 297, 309, 314, 317, 325, 331, 332, 335, 336, 337, 340, 341, 349, 350, 354, 382, 384, 385, 401, 414, 417, 419, 425, 426, 427, 428, 432, 434, 438, 439, 453, 473, 537, 538, 554, 555, 557, 559, 560, 561, 562, 563, 571, 572, 591, 594, 595, 596, 613, 623, 627, 631, 632, 637, 638, 640, 686, 688, 690, 691, 692, 693, 694, 695, 697, 699, 702, 705, 707, 709, 711, 713, 715, 716, 718, 719, 723, 725, 727, 729, 784, 787, 796, 817, 820, 825, 826, 827, 830, 831, 832, 833, 834, 835, 836, 837, 841, 844, 845, 849, 850, 851, 854, 855, 857, 861, 864, 866, 867], "hdf": [343, 564, 698], "hdfs\u4e2d\u52a0\u8f7d\u6216\u5411s3": 742, "hdfs\u4fdd\u5b58\u56fe": 742, "hdfs\uc5d0": 783, "he": [95, 96, 117, 550, 551, 552, 554, 640, 648, 702, 705, 746, 749, 787, 790, 854, 857], "head": [9, 304, 391, 398, 399, 402, 404, 405, 414, 436, 437, 441, 443, 444, 445, 446, 447, 448, 450, 451, 682, 719, 803, 837, 852, 862, 864], "head_dim": 817, "head_out": 851, "head_siz": 414, "header": [686, 829, 830, 831], "head\uc758": 803, "heat": [178, 179, 656], "heatkernel": 13, "heavi": 195, "heavili": 705, "height": [189, 190], "height_in": 860, "height_in_i": 860, "height_out": 860, "height_out_i": 860, "held": 164, "help": [161, 292, 317, 638, 701, 702, 727, 828, 832, 850], "henc": [116, 126, 130, 135, 136, 151, 152, 153, 192, 249, 335, 341, 554, 631, 640, 698, 702, 787], "here": [5, 9, 21, 31, 145, 151, 152, 164, 166, 175, 177, 178, 179, 183, 184, 239, 307, 312, 382, 679, 686, 687, 688, 692, 693, 706, 707, 711, 716, 719, 721, 724, 725, 728, 774, 779, 815, 816, 817, 818, 821, 825, 826, 833, 834, 835, 836, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861], "hereaft": 861, "hetergen": [245, 473], "hetero": 693, "hetero_block": [754, 796], "hetero_fronti": [754, 796], "hetero_graph": [724, 725, 728, 729, 764, 765, 768, 769, 808, 809, 811, 812], "heteroclassifi": [727, 767, 810], "heterodotproductpredictor": [725, 728, 765, 768, 809, 811], "heterogen": [1, 4, 7, 13, 26, 27, 28, 31, 34, 35, 36, 37, 38, 42, 47, 51, 53, 54, 65, 66, 72, 75, 77, 79, 82, 93, 94, 95, 96, 100, 101, 102, 108, 113, 114, 115, 116, 117, 140, 214, 216, 219, 220, 221, 222, 223, 224, 225, 239, 241, 245, 288, 292, 296, 299, 304, 309, 311, 317, 318, 329, 330, 331, 332, 336, 337, 381, 382, 383, 384, 386, 398, 401, 402, 404, 405, 406, 409, 412, 414, 419, 424, 425, 426, 473, 537, 550, 551, 552, 560, 571, 572, 631, 632, 637, 638, 639, 640, 646, 647, 648, 653, 654, 663, 664, 667, 668, 690, 693, 694, 696, 697, 704, 720, 722, 776, 781, 782, 793, 798, 804, 806, 828, 829, 854], "heterogenen": [113, 554], "heterogeneous_graph_nc_lp": 830, "heterograph": [1, 4, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 122, 125, 126, 130, 220, 245, 246, 332, 336, 337, 349, 354, 382, 384, 398, 399, 401, 402, 404, 405, 409, 412, 415, 418, 424, 425, 426, 473, 474, 537, 550, 551, 552, 554, 555, 558, 559, 560, 561, 631, 632, 637, 638, 639, 640, 646, 647, 648, 653, 663, 664, 668, 678, 686, 707, 712, 723, 724, 728, 729, 746, 754, 764, 768, 769, 787, 796, 807, 808, 811, 812, 857, 860], "heterographconv": [425, 711, 714, 716, 727, 729, 755, 757, 759, 763, 767, 769, 797, 800, 802, 810, 812], "heterogrph": [91, 92], "heteromlppredictor": [725, 765, 809], "heterophili": [120, 137, 171, 180, 182, 188, 244, 472], "heterophilousgraphdataset": [137, 171, 180, 182, 188], "hexadecim": [199, 200], "hg": [51, 55, 60, 61, 77, 87, 88, 90, 101, 102, 107, 354, 424, 425, 426, 427, 637, 638, 702, 710, 727, 746, 767, 779, 787, 810], "hg1": [36, 37, 38, 122, 678], "hg2": [36, 37, 38, 122, 678], "hg_2": 637, "hhhiddleston": 747, "hid_feat": [425, 727, 729, 767, 769, 810, 812], "hid_siz": [718, 719], "hidden": [168, 389, 400, 421, 436, 437, 444, 682, 709, 721, 725, 729, 795, 805, 809, 849, 850, 851, 854, 861], "hidden_d": 421, "hidden_dim": [425, 428, 727, 767, 810, 818, 851], "hidden_feat": [389, 711, 716, 755, 757, 759, 797, 800, 802], "hidden_featur": [711, 716, 725, 728, 754, 755, 756, 757, 759, 765, 768, 796, 797, 799, 800, 802, 809, 811], "hidden_s": [168, 400, 444, 682, 713, 714, 815, 816, 817, 825, 867], "hidden_x": [713, 714, 718, 825, 867], "hierarch": 183, "high": [239, 244, 290, 426, 428, 450, 451, 472, 564, 691, 705, 706, 777, 814, 821, 824, 851, 860, 861], "high2low": [426, 428], "higher": [9, 214, 423, 424, 425, 426, 427, 428, 728, 850, 851, 860, 862, 864], "highest": [178, 179, 851], "highli": [392, 393, 683, 813, 821, 824, 841, 849], "highlight": [688, 718, 815, 816, 817, 818, 850, 861, 867], "hing": 800, "hint": [707, 793], "histogram": [851, 860], "histor": 159, "hold": [6, 36, 37, 125, 182, 210, 217, 247, 248, 296, 438, 647, 648, 668, 694, 702, 723, 834], "holist": 11, "home": [23, 139, 693, 779, 825, 827, 830, 831, 837, 844, 850, 854, 857, 860], "homebrew": 814, "homegen": [778, 810], "homo": [178, 179, 396, 397], "homogen": [1, 4, 6, 7, 9, 26, 27, 28, 34, 35, 36, 37, 38, 42, 47, 48, 53, 54, 55, 57, 60, 61, 65, 66, 75, 77, 79, 82, 87, 88, 90, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 122, 138, 139, 209, 210, 214, 215, 216, 219, 220, 222, 223, 224, 225, 239, 240, 245, 288, 294, 296, 304, 308, 309, 311, 317, 318, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 349, 386, 398, 399, 401, 402, 404, 405, 406, 409, 412, 415, 418, 419, 423, 427, 428, 473, 537, 544, 547, 550, 551, 552, 553, 554, 555, 557, 559, 562, 567, 630, 632, 633, 637, 638, 639, 640, 647, 648, 653, 655, 656, 657, 658, 659, 661, 662, 663, 664, 665, 667, 668, 686, 692, 693, 694, 697, 711, 714, 716, 722, 725, 727, 728, 729, 778, 779, 782, 787, 796, 797, 800, 802, 806, 809, 810, 811, 812, 828, 829, 830], "homogeneous_graph_nc_lp": 831, "homogeneous\uc5ec\uc57c": 801, "homograph": [41, 56, 686], "homophil": [162, 342, 471], "homophili": [13, 120, 243, 244, 342, 471, 472], "hood": [690, 693, 848, 866], "hook": [423, 424, 425, 426, 427, 428], "hook_iter": [825, 827], "hop": [219, 239, 302, 307, 335, 336, 337, 350, 419, 420, 423, 424, 425, 427, 538, 657, 816, 826, 850, 851], "hop2j_list": 850, "host": [1, 2, 5], "hostil": 166, "hot": [165, 168, 171, 454, 833, 857], "hotel": 163, "hour": 166, "hous": [141, 142, 143], "how": [4, 9, 11, 21, 139, 162, 165, 220, 244, 396, 399, 405, 407, 412, 433, 435, 440, 472, 555, 556, 571, 572, 640, 682, 683, 684, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 697, 704, 706, 709, 713, 715, 716, 718, 719, 720, 721, 724, 725, 729, 754, 796, 802, 814, 815, 816, 817, 818, 823, 824, 825, 826, 828, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 844, 848, 849, 850, 851, 852, 857, 860, 862, 864, 866, 867], "howev": [4, 9, 21, 22, 171, 235, 292, 302, 307, 692, 694, 697, 701, 713, 722, 814, 826, 835, 836, 840, 844, 850, 851, 854, 857, 861], "html": [9, 21, 145, 184, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 815, 816, 817, 818, 820, 825, 827, 830, 831, 841], "http": [9, 21, 23, 133, 134, 135, 136, 137, 144, 145, 146, 147, 151, 152, 153, 159, 161, 162, 163, 165, 167, 168, 169, 171, 173, 174, 175, 177, 180, 181, 182, 184, 186, 188, 195, 210, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 427, 428, 443, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 555, 679, 688, 693, 718, 734, 747, 766, 774, 779, 814, 815, 816, 817, 818, 820, 821, 825, 827, 830, 831, 837, 840, 841, 844, 857, 861], "hu": [705, 749, 790, 857], "huaiwen": 747, "huang": [747, 848, 850], "huge": 719, "hugectr": 210, "human": 851, "hundr": [694, 813], "hurt": 851, "hv": [96, 116, 117, 551, 554, 640, 702, 705, 746, 749, 787, 790, 857], "hv_init": 857, "hv_old": 857, "hx": [719, 803], "hy": [719, 803], "hyper": [4, 421, 851, 854], "hypercub": 172, "hyperedg": 818, "hyperedge_degre": 818, "hypergraph": 819, "hyperlink": [155, 187, 192, 193, 304], "hyperparamet": [192, 406, 426, 428, 555, 728, 851], "hyperthread": 841, "h\u662f\u4ece5": [765, 768], "h\u73b0\u5728\u662f\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u5f20\u91cf\u5bf9": 758, "i": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 200, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 322, 325, 326, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 353, 354, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 471, 472, 473, 474, 476, 478, 481, 483, 496, 497, 498, 499, 502, 504, 508, 510, 516, 518, 522, 524, 537, 538, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 577, 580, 581, 591, 594, 595, 596, 597, 598, 605, 607, 609, 610, 611, 613, 616, 617, 619, 623, 630, 631, 632, 634, 635, 636, 638, 640, 642, 643, 644, 646, 647, 648, 655, 656, 658, 659, 661, 664, 665, 666, 670, 671, 672, 673, 675, 676, 677, 678, 680, 681, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 732, 733, 745, 746, 749, 754, 762, 763, 768, 772, 773, 774, 778, 779, 782, 785, 786, 787, 790, 791, 796, 799, 801, 806, 807, 810, 811, 813, 814, 815, 816, 817, 818, 820, 821, 822, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 851, 854, 855, 857, 858, 860, 861, 862, 864, 866, 867], "i2h": 849, "i64": [693, 779], "i_": 414, "i_1": [116, 554], "i_2": 554, "i_j": 854, "i_n": 116, "ic": 861, "icew": 166, "icews18": [25, 166], "icon": 816, "id": [0, 4, 6, 13, 20, 26, 27, 32, 34, 35, 39, 44, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 77, 78, 87, 88, 90, 92, 93, 94, 95, 96, 100, 104, 107, 114, 115, 122, 123, 124, 125, 126, 130, 131, 133, 138, 140, 144, 184, 197, 205, 209, 220, 221, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 286, 287, 292, 293, 295, 296, 297, 299, 304, 308, 309, 314, 317, 318, 322, 324, 329, 330, 331, 332, 336, 337, 338, 350, 351, 352, 354, 380, 381, 384, 423, 424, 425, 426, 427, 429, 430, 431, 448, 473, 537, 538, 544, 545, 546, 550, 551, 553, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 571, 572, 632, 637, 638, 639, 640, 644, 672, 677, 680, 686, 688, 690, 693, 701, 702, 708, 710, 711, 716, 718, 778, 786, 787, 796, 797, 800, 802, 818, 827, 830, 831, 833, 837, 849, 854, 861, 866], "id2etyp": 692, "id2ntyp": 692, "id_": 221, "id_tensor": 4, "idconvert": 692, "idea": [21, 22, 727, 728, 820, 835, 854, 861, 862, 864], "ideal": 851, "ident": [116, 220, 394, 406, 416, 560, 632, 647, 654, 690, 711, 728, 815, 816, 818, 820, 825, 867], "identifi": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 240, 246, 423, 424, 426, 428, 452, 475, 548, 550, 552, 569, 691, 692, 722, 725, 727], "idf": 161, "idna": [825, 827, 830, 831], "idtyp": [4, 54, 64, 71, 125, 126, 131, 248, 249, 286, 331, 545, 546, 701, 712, 745, 786], "idx": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 684, 688, 689, 731, 734, 735, 771, 774, 775, 817], "idx_b": 496, "idx_list": 343, "id\uac00": 779, "id\uac12\ub4e4\uc744": 778, "id\uac12\ub4e4\uc774": 774, "id\uac12\uc744": 779, "id\ub294": [778, 779, 787, 796], "id\ub4e4\uacfc": 778, "id\ub4e4\ub85c": 778, "id\ub4e4\uc5d0": 786, "id\ub4e4\uc640": 796, "id\ub4e4\uc740": [779, 787], "id\ub4e4\uc744": [778, 779], "id\ub4e4\uc758": [797, 800, 802], "id\ub77c\uace0": 786, "id\ub85c": [778, 786], "id\ub97c": [778, 779, 786, 787, 794, 797], "id\ub9cc\uc744": 779, "id\uc5d0": 779, "id\uc640": [778, 779, 797], "id\uc758": [778, 779, 786], "id\uc774\ub2e4": 779, "ie": 164, "ignor": [116, 133, 144, 200, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 423, 424, 425, 426, 427, 428, 686, 825, 827], "ignore_bipartit": 116, "ii": [406, 420], "ij": [354, 386, 388, 396, 398, 399, 400, 404, 405, 406, 409, 410, 411, 415, 420, 749, 790, 818, 820, 851, 860, 861], "ik": 851, "illustr": [692, 694, 701, 712, 815, 816, 817, 818, 830, 844, 845, 850, 861], "imag": [146, 160, 169, 821, 833, 836], "imaginari": 817, "imbal": [162, 694], "imdb": 186, "imdbbinari": [165, 866], "imdbmulti": 165, "immedi": [22, 41, 557, 851], "immunolog": 851, "impact": [14, 556], "impl": [825, 827, 830, 831], "implement": [0, 4, 6, 7, 9, 10, 14, 21, 22, 23, 197, 289, 298, 302, 307, 312, 388, 412, 429, 430, 441, 452, 476, 478, 481, 483, 502, 504, 508, 510, 516, 518, 522, 524, 553, 650, 682, 683, 684, 685, 686, 688, 689, 690, 691, 692, 694, 704, 705, 706, 709, 711, 716, 717, 718, 722, 727, 729, 802, 813, 815, 816, 820, 824, 832, 834, 837, 851, 852, 854, 862, 864, 867], "impli": 849, "implicit": [89, 728, 768, 811, 820], "implicitli": [27, 114, 302, 307, 825, 827, 830, 831, 857], "import": [4, 5, 6, 9, 20, 21, 22, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 120, 122, 125, 126, 128, 129, 131, 137, 138, 141, 142, 143, 146, 147, 149, 155, 160, 169, 171, 173, 174, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 204, 214, 217, 218, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 296, 297, 298, 299, 300, 301, 302, 307, 309, 314, 315, 316, 318, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 342, 343, 348, 354, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 471, 472, 473, 474, 475, 500, 537, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 560, 564, 566, 567, 568, 569, 570, 571, 572, 607, 630, 631, 633, 637, 638, 639, 640, 642, 643, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 682, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 698, 699, 700, 701, 702, 705, 706, 707, 710, 711, 715, 716, 719, 721, 722, 723, 724, 725, 726, 727, 729, 731, 732, 733, 734, 735, 736, 737, 742, 743, 744, 745, 746, 749, 750, 751, 754, 758, 759, 761, 762, 763, 764, 765, 766, 767, 769, 771, 772, 773, 774, 775, 776, 777, 778, 783, 784, 785, 786, 787, 790, 791, 792, 793, 796, 801, 802, 803, 805, 806, 807, 808, 809, 810, 812, 815, 816, 817, 818, 820, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866], "importance_sampl": [214, 560], "importerror": [815, 816, 817, 818, 820, 825, 827, 830, 831], "imposs": [562, 825], "impress": 851, "improv": [4, 10, 21, 655, 688, 719, 823, 841, 842, 843, 849, 854, 857, 858, 861, 864], "in_": [389, 398, 399, 402, 404, 405, 409, 412, 418], "in_degre": [4, 87, 89, 442, 680, 682, 700, 722, 744, 757, 762, 785, 800, 806, 833, 850], "in_dim": [424, 426, 428, 725, 727, 765, 767, 809, 810, 851], "in_dir": 694, "in_edg": [88, 700, 744, 785, 850], "in_edge_feat": 399, "in_feat": [383, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 408, 409, 411, 412, 415, 417, 418, 419, 420, 423, 425, 427, 440, 449, 453, 690, 711, 715, 716, 718, 719, 721, 727, 729, 736, 755, 757, 758, 759, 761, 767, 769, 776, 797, 800, 801, 802, 803, 805, 810, 812, 827, 832, 834, 835, 836, 844, 845, 848, 849, 850], "in_feat_nam": 665, "in_feats\u662f\u8f93\u5165\u7279\u5f81\u7684\u7ef4\u5ea6": 769, "in_featur": [711, 716, 725, 728, 754, 755, 756, 757, 759, 765, 768, 796, 797, 799, 800, 802, 809, 811, 848, 854], "in_indx": 860, "in_memori": [308, 315, 829, 830, 831], "in_nod": 860, "in_node_feat": 399, "in_siz": [383, 385, 394, 400, 414, 416, 713, 714, 718, 719, 815, 816, 818, 820, 825, 827, 867], "in_subgraph": [296, 298, 336, 537, 712, 754, 796], "in_test_mask": [197, 205], "in_train_mask": [197, 205], "in_valid_mask": [197, 205], "inbound": [214, 216, 219, 233, 240, 241, 296, 298, 332, 560, 561, 562, 563, 632, 796], "inc": 63, "incept": [665, 816], "incid": [13, 62, 63, 220, 244, 245, 246, 472, 694, 704, 711, 725, 789, 797, 818, 825, 835, 850], "includ": [4, 21, 22, 48, 62, 63, 132, 133, 138, 139, 144, 157, 158, 161, 162, 163, 170, 179, 191, 197, 205, 214, 216, 219, 230, 235, 239, 288, 308, 313, 318, 336, 337, 392, 401, 410, 417, 429, 431, 540, 555, 632, 686, 690, 693, 694, 697, 698, 705, 708, 717, 721, 722, 723, 725, 727, 728, 818, 826, 829, 830, 831, 835, 840, 841, 851, 854, 857, 861], "include_dst_in_src": 632, "include_original_edge_id": [308, 323], "include_reverse_edg": [321, 711, 825], "inclus": [21, 207], "incom": [20, 61, 100, 117, 214, 216, 296, 332, 350, 354, 402, 476, 477, 478, 479, 481, 482, 483, 484, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 518, 519, 522, 523, 524, 525, 648, 704, 796, 834, 849, 851, 854, 861], "incomplet": [4, 210, 213, 685, 732, 772], "inconsist": [162, 388], "incorpor": [173, 729], "increas": [308, 406, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 556, 690, 821, 840], "increment": [559, 674, 825, 827, 857, 861], "incur": [245, 246, 292, 299, 332, 336, 337, 473, 474, 537, 717], "inde": [22, 632, 637], "indent": 779, "independ": [120, 569, 570, 642, 643, 702], "index": [4, 6, 21, 22, 95, 96, 108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 286, 287, 288, 293, 295, 297, 299, 304, 309, 314, 325, 331, 388, 406, 578, 579, 642, 643, 684, 688, 691, 694, 700, 718, 722, 734, 744, 771, 774, 785, 820, 825, 827, 829, 830, 831, 844, 849, 861], "indic": [4, 6, 9, 12, 30, 31, 32, 53, 54, 62, 63, 101, 102, 131, 135, 136, 139, 140, 142, 143, 145, 146, 149, 151, 152, 169, 171, 180, 183, 185, 189, 190, 196, 209, 210, 213, 218, 220, 231, 238, 239, 240, 245, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 302, 304, 307, 309, 310, 311, 314, 316, 318, 324, 325, 329, 330, 331, 340, 343, 350, 351, 395, 441, 443, 444, 454, 473, 496, 538, 555, 556, 558, 559, 574, 575, 576, 577, 578, 579, 580, 582, 584, 585, 587, 588, 589, 591, 592, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 632, 640, 680, 688, 691, 693, 694, 697, 701, 702, 705, 716, 718, 723, 726, 729, 769, 812, 815, 816, 817, 818, 820, 826, 827, 830, 831, 832, 837, 844, 848, 849, 850, 851, 854, 857], "indices1": [613, 625], "indices2": [613, 625], "indirectli": 698, "individu": [121, 122, 166, 390, 435, 560, 694, 857], "indptr": [32, 296, 298, 302, 307, 309, 310, 316, 318, 322, 330, 578, 579, 610, 611, 820], "induc": [26, 134, 197, 209, 217, 219, 233, 245, 246, 296, 298, 302, 307, 332, 336, 337, 423, 424, 425, 427, 437, 473, 474, 537, 561, 562, 563, 632, 711, 827, 833, 854, 861], "induced_dst": 632, "induced_src": 632, "induct": [160, 175, 194, 217, 393, 397, 418, 718, 851], "industri": 162, "ineffici": [14, 727], "inf": 443, "infeas": 713, "infer": [4, 131, 286, 289, 331, 454, 607, 609, 610, 611, 623, 637, 690, 694, 701, 709, 719, 756, 786, 799, 820, 841, 854, 857, 861], "inferenc": 841, "infin": [476, 478, 481, 483, 502, 504, 508, 510, 516, 518, 522, 524], "infinitesim": 394, "influenc": 134, "info": [203, 206], "info_path": [689, 735, 775], "inform": [4, 13, 22, 27, 28, 59, 95, 96, 101, 102, 114, 115, 116, 117, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 206, 220, 235, 236, 239, 244, 245, 246, 248, 249, 286, 291, 298, 302, 307, 313, 331, 332, 335, 341, 349, 388, 423, 424, 427, 452, 472, 473, 474, 537, 545, 546, 550, 551, 552, 554, 631, 638, 640, 641, 678, 679, 682, 684, 686, 688, 689, 691, 692, 693, 694, 701, 702, 710, 726, 727, 729, 771, 775, 814, 829, 832, 834, 835, 836, 844, 849, 850, 851, 854, 857, 861, 867], "informat": 849, "infti": 421, "inher": [855, 864], "inherit": [309, 650, 684, 685, 691, 714, 720, 832, 837], "init": [4, 10, 381, 422, 425, 427, 452, 718, 721, 761, 805, 814, 817, 849, 851, 857, 860, 861], "init_att": 422, "init_beta": 386, "init_ep": [407, 408], "init_func": [4, 10, 452, 691, 737, 777], "init_graph": 860, "init_method": [866, 867], "init_model": 866, "init_node_activ": 857, "init_process_group": [234, 690, 691, 736, 737, 776, 777, 840, 844, 845, 866, 867], "init_tmp": [425, 427], "initi": [10, 13, 27, 28, 70, 118, 119, 128, 129, 168, 197, 205, 207, 292, 308, 314, 354, 388, 397, 402, 404, 405, 406, 407, 408, 409, 411, 412, 415, 418, 419, 420, 421, 425, 427, 428, 441, 450, 451, 452, 454, 548, 549, 564, 569, 570, 642, 643, 655, 656, 661, 690, 692, 721, 736, 737, 739, 776, 777, 780, 816, 824, 825, 827, 840, 848, 849, 850, 854, 857, 867], "initialize_hv": 857, "inner": [713, 728, 799, 811, 850], "inner_edg": [239, 693, 694], "inner_nod": [239, 693, 694, 779], "innermost": 307, "innov": 850, "inp_dropout": 421, "inplac": [21, 27, 28, 70, 89, 112, 348, 814, 854], "input": [4, 5, 6, 9, 20, 21, 34, 53, 56, 57, 58, 60, 73, 87, 100, 109, 110, 116, 118, 119, 121, 122, 126, 130, 131, 132, 133, 135, 136, 138, 140, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 210, 214, 216, 220, 222, 223, 224, 225, 231, 233, 238, 239, 240, 242, 245, 246, 247, 248, 249, 286, 292, 296, 298, 299, 300, 304, 312, 318, 325, 326, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 348, 349, 350, 351, 354, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 449, 450, 451, 454, 455, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 547, 548, 549, 550, 553, 554, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 591, 594, 595, 596, 597, 598, 605, 617, 631, 633, 637, 638, 639, 640, 641, 642, 643, 646, 647, 654, 655, 656, 659, 661, 665, 678, 682, 684, 691, 692, 694, 701, 705, 709, 710, 711, 714, 715, 716, 721, 722, 723, 725, 726, 727, 729, 763, 767, 769, 771, 778, 779, 799, 801, 806, 807, 810, 812, 816, 817, 820, 824, 825, 826, 827, 834, 836, 840, 844, 845, 848, 849, 850, 851, 854, 857, 861, 866, 867], "input_": [722, 762, 806], "input_col": [825, 827], "input_d": 421, "input_dict": 817, "input_dim": [424, 425, 426, 435], "input_dir": 779, "input_dst": [722, 762, 806], "input_feat": 410, "input_featur": [710, 716, 754, 755, 757, 759, 796, 797, 800, 802, 849], "input_id": [184, 381], "input_nod": [210, 214, 215, 216, 219, 220, 299, 304, 710, 713, 754, 755, 756, 757, 759, 796, 797, 799, 800, 802, 827, 844, 845], "input_nodes_timestamp": 296, "input_s": 866, "inputs\u662f\u8282\u70b9\u7684\u7279\u5f81": 767, "ins": 705, "insert": [298, 312, 691, 710, 718, 737, 777, 827], "insert_revers": [132, 133, 144, 170], "insid": [21, 201, 294, 296, 304, 309, 318, 329, 330, 401, 409, 421, 455, 694, 727], "insight": [848, 849, 850, 851, 854, 857, 860, 861], "inspect": [693, 694, 852, 854, 864], "inspir": [171, 421, 816, 834], "instal": [21, 391, 392, 393, 687, 733, 773, 779, 815, 816, 817, 818, 820, 841, 844], "instanc": [14, 20, 133, 144, 156, 162, 165, 168, 172, 186, 209, 289, 290, 309, 382, 423, 424, 425, 426, 427, 428, 694, 697, 705, 711, 715, 716, 725, 729, 818, 825, 826, 827, 833, 835, 836, 841, 850, 861, 866], "instanti": [31, 73, 91, 92, 246, 313, 474, 669, 670, 671, 672, 673, 674, 675, 676, 677], "instead": [4, 9, 21, 48, 57, 80, 116, 118, 168, 177, 178, 179, 186, 214, 216, 219, 221, 302, 340, 423, 424, 425, 426, 427, 428, 437, 560, 561, 562, 563, 642, 643, 647, 691, 698, 702, 711, 713, 715, 727, 801, 818, 826, 836, 850, 851, 857, 860, 862, 864, 867], "institut": [694, 779, 849], "instruct": [21, 693, 814, 844], "instructon": 719, "instrument": 161, "insubgraph_sampl": 298, "int": [4, 6, 22, 27, 28, 34, 35, 38, 48, 53, 54, 55, 57, 58, 59, 60, 61, 71, 79, 80, 81, 82, 87, 88, 90, 93, 94, 95, 96, 100, 107, 114, 115, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 286, 290, 292, 296, 297, 299, 300, 304, 306, 307, 311, 316, 322, 324, 328, 331, 332, 334, 335, 336, 337, 338, 339, 343, 350, 351, 352, 353, 380, 381, 383, 384, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 473, 537, 538, 545, 546, 547, 550, 551, 555, 556, 557, 559, 560, 561, 562, 563, 565, 566, 567, 568, 590, 591, 593, 594, 595, 596, 597, 598, 607, 609, 610, 611, 612, 617, 623, 630, 638, 642, 643, 648, 655, 656, 657, 658, 661, 662, 665, 666, 669, 674, 686, 688, 699, 701, 718, 719, 729, 734, 745, 769, 774, 779, 784, 786, 803, 812, 825, 829, 830, 831, 834, 835, 836, 837, 854, 857], "int16": [147, 174], "int32": [4, 59, 64, 71, 118, 119, 125, 126, 131, 248, 249, 286, 300, 309, 331, 392, 545, 546, 558, 563, 571, 572, 587, 600, 693, 694, 699, 701, 743, 745, 784, 786, 820, 827, 830, 831], "int64": [4, 31, 59, 64, 71, 125, 126, 131, 138, 147, 165, 168, 174, 184, 186, 195, 219, 245, 248, 249, 286, 296, 331, 332, 336, 337, 473, 537, 545, 546, 558, 560, 637, 651, 652, 686, 693, 694, 701, 745, 779, 786, 827, 833, 836, 837], "int8": [693, 694, 837], "integ": [22, 32, 39, 52, 78, 95, 96, 122, 125, 131, 138, 140, 142, 143, 189, 190, 200, 207, 210, 214, 216, 219, 239, 240, 248, 286, 296, 300, 304, 311, 324, 331, 385, 392, 400, 414, 417, 431, 496, 499, 553, 562, 571, 572, 637, 638, 686, 692, 693, 694, 699, 701, 702, 784, 814, 833, 866], "integr": [166, 693, 720, 726, 824, 862, 864], "intel": 719, "inter": [850, 858, 864], "interact": [52, 166, 175, 178, 389, 560, 561, 690, 697, 702, 746, 787, 837], "interaction_cutoff": 388, "interatom": 178, "interest": [686, 690, 857, 861], "interfac": [4, 6, 20, 165, 235, 497, 498, 691, 692, 696, 699, 702, 707, 716, 833, 861], "intermedi": [307, 425, 427, 667, 705, 709, 848], "intermediari": 851, "intern": [1, 4, 20, 22, 39, 52, 78, 126, 131, 178, 179, 248, 249, 286, 331, 381, 561, 562, 571, 572, 691, 692, 698, 701, 705, 723, 807, 817, 825, 830, 831, 837, 850], "interpol": 557, "intersect": [56, 197, 205], "interv": [816, 857, 860], "intimid": 850, "intra": [174, 850, 858, 864], "intra_src": 850, "introduc": [22, 77, 134, 158, 173, 191, 242, 339, 392, 394, 408, 413, 441, 442, 443, 444, 445, 446, 447, 448, 547, 630, 638, 655, 656, 658, 661, 662, 666, 680, 681, 683, 687, 696, 702, 704, 712, 713, 720, 724, 727, 816, 824, 825, 850, 854, 861], "introduct": [696, 813, 834, 835, 836, 848], "introductori": 832, "inttensor": [562, 571, 572], "intuit": [22, 244, 472, 820, 866], "inv": 820, "inv_sigma": 409, "inv_vocab": 854, "invalid": [5, 173, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 441, 443, 444, 680, 692, 722, 848, 851], "invari": [436, 437], "invent": 834, "invers": [157, 818], "inverse_indic": [336, 337, 425, 427], "invert": [317, 854], "investig": 162, "invok": [4, 20, 22, 27, 34, 73, 93, 94, 100, 113, 114, 117, 126, 131, 156, 216, 234, 248, 249, 286, 331, 352, 382, 691, 692, 693, 694, 695, 702, 705, 719, 832, 844, 845, 866], "involv": [4, 21, 302, 304, 307, 317, 700, 710, 713, 714, 725, 727, 728, 729, 837, 848, 851, 866], "io": [162, 168, 186, 688, 734, 747, 774], "iostream": 22, "iou": 854, "ip": [694, 695, 780, 844, 845], "ip_addr1": [844, 845], "ip_addr2": [844, 845], "ip_addr3": 844, "ip_addr4": 844, "ip_config": [234, 690, 691, 694, 695, 736, 737, 739, 776, 777, 780, 844, 845], "ipynb": [832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "ipython": [816, 825, 827], "ip\u5730\u5740\u540e\u9762\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u7aef\u53e3": 739, "ip\u914d\u7f6e\u6587\u4ef6": 739, "irrespect": 861, "is_avail": [711, 716, 816, 861, 866, 867], "is_bf16_support": 719, "is_block": [715, 722, 723, 758, 762, 763, 801, 806, 807], "is_cuda": 325, "is_gdata": 4, "is_homogen": 323, "is_input_lay": 849, "is_last_lay": [713, 714, 825, 867], "is_libxsmm_en": 679, "is_pin": [89, 314, 315], "is_tempor": [145, 164, 166], "is_train": [861, 867], "is_unibipartit": [44, 45, 79, 82, 104, 105], "is_valid": 857, "isab": 437, "isinst": [715, 718, 722, 723, 758, 762, 763, 801, 806, 807, 825, 827], "isn": 698, "isol": [130, 150, 245, 332, 336, 337, 537, 550, 701, 786, 796], "isomorph": [407, 408, 866], "isotrop": [178, 179], "issu": [21, 126, 131, 168, 248, 249, 286, 331, 685, 719, 732, 772, 825, 826, 827, 830, 831], "item": [4, 7, 22, 132, 133, 135, 136, 144, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 175, 176, 177, 178, 179, 181, 183, 191, 192, 194, 196, 220, 222, 223, 224, 225, 292, 299, 300, 301, 304, 319, 320, 340, 382, 425, 558, 559, 686, 688, 696, 697, 710, 711, 712, 714, 717, 718, 719, 722, 723, 724, 725, 727, 728, 729, 734, 757, 762, 763, 764, 765, 767, 768, 769, 774, 781, 800, 803, 806, 807, 808, 809, 810, 811, 812, 817, 824, 825, 827, 830, 831, 835, 836, 848, 849, 850, 851, 854, 857, 866, 867], "item_feat": [725, 728, 729, 765, 768, 769, 809, 811, 812], "item_id": 830, "item_sampl": [292, 298, 299, 302, 316], "item_set": [292, 298, 299, 300, 301, 302, 307, 316, 710, 867], "itemsampl": [292, 298, 302, 307, 316, 710, 711, 713, 714, 716, 717, 718, 825, 827, 867], "itemset": [291, 292, 298, 299, 301, 302, 303, 307, 308, 313, 316, 710, 711, 714, 716, 717, 827, 830, 831, 867], "itemsetdict": [291, 292, 299, 303, 308, 313, 710, 711, 716, 830], "item\uc744": 809, "iter": [0, 3, 4, 6, 7, 34, 35, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 92, 93, 94, 100, 114, 131, 165, 168, 172, 177, 178, 179, 186, 209, 210, 211, 212, 213, 220, 245, 286, 290, 292, 299, 300, 301, 302, 307, 331, 332, 336, 337, 387, 421, 425, 427, 431, 435, 473, 537, 550, 551, 639, 682, 688, 701, 709, 711, 713, 714, 716, 717, 727, 759, 786, 796, 797, 799, 802, 816, 825, 827, 836, 857, 860], "iterabledatapip": 717, "iterate\ud558\uace0": [800, 802], "iterate\ud558\ub294": [799, 800, 802], "iterate\ud558\uba74\uc11c": [796, 810], "iterate\ud55c\ub2e4": [796, 810], "iterate\ud574\uc11c": 797, "iterating\ud558\ub294": 802, "iteration\ub9c8\ub2e4": 802, "iteration\uc744": 774, "iterator_id": [825, 827], "iteratordecor": [825, 827], "iterator\ub294": 802, "iterator\ub97c": 802, "iterdatapip": [289, 299], "iterrow": 837, "itertool": 835, "ith": [196, 207], "its": [1, 4, 6, 10, 14, 22, 26, 45, 47, 68, 75, 79, 82, 105, 109, 138, 141, 146, 164, 165, 167, 168, 169, 172, 173, 182, 186, 209, 217, 244, 309, 315, 318, 338, 354, 382, 406, 409, 412, 418, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 472, 560, 562, 566, 569, 570, 571, 572, 637, 638, 646, 667, 691, 692, 693, 694, 696, 701, 704, 710, 716, 719, 724, 725, 726, 727, 729, 816, 818, 820, 821, 826, 832, 836, 837, 844, 845, 848, 850, 851, 854, 857, 860, 861, 866], "itself": [21, 210, 429, 431, 547, 557, 559, 562, 567, 725, 818, 840, 848, 850, 861], "j": [4, 10, 21, 126, 249, 338, 354, 380, 384, 388, 389, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 416, 417, 418, 420, 429, 431, 448, 559, 567, 571, 572, 631, 647, 705, 749, 790, 818, 820, 849, 850, 851, 854, 860, 861], "j4": 814, "j_1": [116, 554], "j_2": 554, "j_n": 116, "jake": [854, 860], "jean": 854, "ji": [403, 407, 412, 418, 705, 861], "jinj": [860, 861], "jinja2": [825, 827, 830, 831], "jinyang": 860, "jk": [403, 854], "jl": 854, "job": [21, 694, 695, 866], "join": [142, 156, 292, 424, 426, 685, 689, 690, 694, 732, 735, 772, 775, 813, 830, 831, 844, 867], "joint": 857, "json": [4, 239, 690, 691, 692, 693, 694, 695, 702, 736, 737, 738, 739, 776, 777, 778, 779, 780, 814, 844], "json\u4e2d\u7684\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 738, "json\u6587\u4ef6\u5305\u542b\u6240\u6709\u5212\u5206\u7684\u914d\u7f6e": 738, "json\u7684json\u6587\u4ef6": 738, "json\uacfc": 787, "judici": [852, 864], "jump": [453, 851], "jupyt": [691, 777, 819, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "jure": 834, "just": [21, 22, 45, 79, 82, 105, 234, 682, 692, 694, 702, 714, 727, 729, 827, 830, 831, 836, 844, 845, 851], "k": [14, 21, 120, 121, 122, 178, 179, 183, 209, 219, 221, 222, 223, 224, 225, 226, 227, 334, 335, 336, 337, 338, 339, 342, 350, 351, 387, 388, 390, 394, 395, 403, 409, 414, 419, 420, 423, 424, 425, 427, 429, 431, 432, 433, 434, 436, 438, 439, 441, 445, 448, 454, 547, 553, 563, 566, 605, 606, 613, 630, 642, 643, 657, 658, 662, 665, 666, 714, 722, 723, 727, 728, 729, 757, 762, 763, 767, 768, 769, 800, 806, 807, 810, 811, 812, 817, 820, 834, 835, 850, 851, 854, 857, 860, 861], "k_i": 861, "k_j": 861, "k_proj": 817, "kai": 854, "karat": [167, 698, 742, 783, 816, 837], "karate_club": 837, "karateclub": 25, "karateclubdata": [688, 734, 774], "karateclubdataset": [816, 837], "karlsruh": 132, "karypislab": [693, 779], "kd": [14, 338, 429, 431, 566], "kdd": [151, 152], "kde": 860, "keep": [6, 22, 139, 140, 186, 233, 302, 349, 394, 553, 646, 706, 717, 850, 854], "keep_orig_edg": 646, "keepdim": [719, 803, 857, 860, 861], "kei": [22, 26, 27, 28, 73, 108, 114, 115, 121, 122, 131, 148, 178, 179, 205, 210, 213, 221, 223, 239, 240, 241, 245, 287, 291, 294, 295, 296, 301, 304, 309, 318, 329, 330, 331, 332, 336, 337, 350, 381, 382, 383, 424, 425, 426, 473, 537, 538, 553, 564, 680, 686, 687, 688, 694, 707, 711, 716, 723, 733, 773, 817, 837, 844, 851, 854, 855, 857, 861, 862, 864], "kept": 130, "kera": [720, 804], "kernel": [5, 9, 34, 73, 93, 94, 100, 113, 168, 186, 388, 409, 436, 437, 448, 498, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 518, 519, 522, 523, 524, 525, 656, 719, 813, 821, 844, 848], "kevin": 747, "keyboardinterrupt": [825, 827], "keyerror": [721, 722, 761, 762, 805, 806], "keyword": [121, 134, 151, 152, 239, 312], "kg": [429, 431], "kgdata": [688, 734, 774], "khop_in_subgraph": 337, "khop_out_subgraph": 336, "khopgraph": 13, "ki": [403, 861], "kick": [815, 816, 817], "kind": [126, 210, 249, 313, 687, 851], "kipf": [815, 822, 832, 848], "kit": 841, "kl": 854, "knn": [338, 566], "knn_g": [338, 566], "knn_graph": [14, 566], "know": [21, 244, 472, 711, 728, 834, 837, 849, 867], "knowledg": [13, 21, 164, 166, 244, 451, 453, 472, 835, 849, 866], "knowledgegraphdataset": [157, 158, 191, 688, 734, 774], "known": [195, 454, 698, 854, 861], "known_host": 844, "konect": 167, "kv": 861, "kvstore": 4, "kwarg": [108, 121, 138, 139, 140, 210, 211, 212, 213, 215, 239, 312, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 423, 424, 425, 426, 427, 428, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 754, 796, 825, 827], "l": [242, 341, 385, 386, 387, 389, 390, 393, 394, 395, 396, 397, 398, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 423, 424, 425, 427, 428, 446, 454, 567, 605, 606, 613, 616, 624, 625, 659, 665, 709, 719, 722, 723, 728, 753, 754, 756, 762, 763, 768, 795, 796, 799, 803, 806, 807, 811, 815, 818, 820, 826, 834, 835, 844, 845, 848, 849, 850, 851, 854, 861], "l1": [430, 544], "l2": [338, 429, 430, 431, 544, 566, 721, 805, 849], "l2norm": 849, "l_": 850, "label": [4, 6, 13, 21, 25, 120, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 208, 213, 214, 216, 217, 219, 220, 230, 242, 243, 244, 289, 292, 299, 300, 301, 304, 308, 315, 332, 342, 343, 380, 423, 425, 427, 428, 454, 471, 472, 537, 540, 551, 553, 564, 684, 687, 688, 689, 694, 698, 710, 711, 714, 716, 718, 719, 724, 725, 727, 729, 733, 734, 735, 755, 759, 764, 765, 767, 769, 771, 773, 774, 775, 797, 802, 803, 808, 809, 810, 812, 815, 816, 817, 818, 825, 827, 829, 830, 831, 832, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 854, 861, 866, 867], "label0_nod": 850, "label1": 850, "label_dict": [204, 343, 689, 735, 775, 837], "label_kei": [178, 179], "label_propag": 454, "labels_follow": 299, "labels_item": 301, "labels_lik": 299, "labels_us": 301, "labelsmooth": 861, "labor": [214, 302, 560], "laborsampl": 302, "lab\uc758": 788, "lacon": 816, "ladder": 172, "lake": 861, "lam": [421, 422], "lambda": [4, 34, 35, 406, 421, 422, 861], "lambda_": [390, 406], "lambda_max": [390, 395], "land": 547, "langl": [178, 179], "languag": [159, 164, 817, 833, 836, 854, 857, 861], "lapacian": 0, "laplacian": [339, 340, 390, 394, 421, 422, 445, 658, 817, 818], "laplacian_lambda_max": 390, "laplacian_p": 817, "laplacianp": [394, 445], "lapp": [13, 445], "larg": [3, 10, 11, 14, 22, 66, 123, 124, 125, 126, 131, 134, 168, 181, 209, 229, 230, 248, 249, 286, 292, 299, 308, 331, 338, 342, 393, 397, 413, 418, 429, 431, 452, 456, 471, 566, 632, 637, 644, 684, 689, 694, 703, 708, 712, 718, 722, 724, 727, 813, 814, 825, 826, 828, 829, 835, 836, 850, 861], "larger": [178, 239, 292, 296, 299, 304, 312, 425, 427, 456, 560, 706, 729, 826], "largest": [131, 286, 331, 340, 390, 395, 438, 563, 630, 642, 643, 666, 701, 786, 850], "last": [4, 5, 9, 208, 210, 213, 214, 216, 292, 296, 299, 406, 412, 605, 638, 643, 695, 704, 705, 711, 722, 817, 825, 827, 840, 848, 851, 867], "latent": 854, "later": [149, 155, 185, 187, 193, 386, 471, 691, 694, 814, 835], "latest": [694, 857], "latter": [354, 423, 424, 425, 426, 427, 428, 556, 691, 706, 711, 862, 864], "launch": [4, 452, 690, 691, 694, 718, 739, 777, 780, 840, 866], "law": 694, "layer": [13, 208, 210, 214, 215, 216, 219, 220, 296, 302, 304, 307, 381, 383, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 449, 453, 555, 560, 691, 706, 709, 710, 711, 713, 714, 716, 717, 718, 719, 720, 727, 728, 729, 756, 799, 802, 803, 804, 812, 820, 825, 826, 827, 832, 834, 835, 836, 844, 845, 848, 851, 860, 862, 864, 867], "layer1": [848, 850, 851], "layer2": [848, 850, 851], "layer3": 850, "layer_depend": 214, "layer_id": 304, "layer_idx": [713, 714, 718, 825, 867], "layer_norm": 417, "layernorm": 861, "layer\uc640": 810, "layout": [31, 62, 63, 699], "lazi": [222, 223, 224, 225, 245, 246, 332, 336, 337, 473, 474, 537], "lazyfeatur": [222, 223, 224, 225], "lbrace": [186, 704, 748, 754, 789, 796], "ld_library_path": [693, 779], "ld_preload": 841, "ldot": [413, 453, 646], "lead": [386, 396, 398, 401, 402, 404, 405, 406, 409, 412, 419, 691, 699, 701, 722, 840], "leaf": [159, 184, 426, 428, 854], "leak": 4, "leakag": [220, 710], "leaky_relu": [820, 851], "leakyrelu": [391, 399, 402, 404, 405, 820, 851], "learn": [4, 10, 13, 14, 23, 160, 179, 194, 217, 342, 380, 383, 384, 386, 391, 393, 397, 401, 402, 404, 405, 409, 418, 419, 422, 423, 424, 425, 427, 438, 445, 451, 453, 454, 471, 557, 645, 651, 652, 653, 655, 688, 714, 718, 724, 725, 727, 729, 788, 800, 813, 814, 816, 817, 820, 822, 825, 826, 827, 832, 833, 834, 835, 837, 848, 849, 850, 854, 855, 857, 860, 861, 864, 866, 867], "learn_beta": 386, "learn_ep": [407, 408], "learnabl": [4, 118, 119, 380, 384, 386, 388, 390, 391, 392, 393, 395, 396, 397, 399, 402, 404, 405, 406, 407, 408, 409, 411, 412, 415, 418, 419, 420, 421, 435, 442, 446, 447, 448, 449, 450, 451, 453, 547, 662, 682, 691, 721, 777, 805, 816, 851, 857], "least": [21, 119, 161, 182, 421, 441, 444, 632, 829, 850, 851], "leav": [705, 821, 833, 835, 854], "left": [118, 342, 387, 390, 393, 399, 402, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 418, 433, 434, 448, 453, 497, 498, 499, 630, 665, 666, 704, 706, 722, 727, 728, 748, 754, 762, 768, 789, 796, 806, 811, 820, 826, 834, 835, 849, 851, 854, 861], "leftarrow": [834, 861], "legaci": 303, "legitim": 163, "len": [73, 138, 145, 146, 147, 164, 165, 166, 168, 169, 172, 174, 184, 186, 195, 207, 220, 298, 308, 322, 382, 453, 496, 500, 559, 566, 584, 606, 607, 610, 611, 625, 680, 686, 688, 713, 714, 718, 719, 723, 725, 728, 729, 734, 754, 757, 763, 765, 768, 769, 774, 796, 800, 803, 807, 809, 811, 812, 816, 817, 825, 835, 836, 837, 840, 844, 845, 848, 849, 850, 854, 857, 860, 861, 866, 867], "length": [36, 37, 142, 164, 182, 205, 207, 217, 231, 238, 239, 287, 293, 295, 296, 297, 302, 307, 314, 325, 335, 354, 390, 446, 499, 500, 538, 557, 558, 559, 562, 567, 605, 606, 680, 682, 691, 697, 699, 784, 820, 833, 855, 860, 861, 864], "leq": [854, 861], "leskovec": 834, "less": [118, 119, 139, 161, 226, 292, 299, 338, 429, 431, 446, 556, 566, 694, 701, 712, 840, 851], "let": [43, 46, 74, 103, 126, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 496, 694, 704, 779, 816, 820, 825, 827, 830, 831, 844, 845, 848, 850, 857, 866], "level": [0, 5, 23, 120, 128, 129, 148, 427, 548, 549, 564, 642, 643, 691, 692, 694, 698, 705, 723, 727, 777, 817, 834, 836, 837, 841, 848, 851, 854, 857, 860, 862, 864], "level\uc758": 777, "leverag": [384, 392, 393, 706, 719, 816, 821, 850, 854, 858, 864], "levi": 667, "lexicograph": [123, 574], "lexicon": 144, "lg": [341, 667, 850], "lg1": 850, "lg_batch": 183, "lg_layer": 850, "lg_x": 850, "lgnn": [852, 864], "lgnncore": 850, "lgnnlayer": 850, "lh": 497, "lhs_data": [497, 498], "lhs_field": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], "lhs_target": 497, "li": [244, 399, 472, 656, 661, 665, 720, 747, 830, 831, 849, 851, 857, 860], "lib": [693, 779, 817, 825, 827, 830, 831, 841, 844, 848, 851], "libgoogl": 841, "librari": [8, 12, 21, 22, 718, 814, 820, 821, 840, 841, 857], "libtcmalloc": 841, "libxsmm": 679, "licens": 813, "life": 4, "lifesci": [435, 440], "ligand": 388, "light": 22, "like": [9, 21, 22, 26, 116, 131, 162, 214, 216, 219, 226, 292, 299, 301, 302, 319, 320, 413, 425, 427, 555, 556, 680, 682, 685, 686, 691, 694, 702, 706, 711, 713, 715, 716, 721, 722, 724, 725, 727, 746, 765, 777, 787, 814, 827, 830, 831, 832, 834, 836, 837, 848, 861, 866], "like_edg": 830, "like_edges_path": 830, "like_orig_eids_0": 694, "liked_bi": 711, "likelihood": [556, 557, 728, 811, 850], "limit": [22, 243, 290, 308, 713, 821, 825, 827, 830, 831, 850, 867], "limits_": [402, 849, 861], "lin": [407, 415, 420], "line": [22, 183, 341, 659, 691, 693, 694, 695, 699, 814, 823, 825, 827, 832, 844, 852, 853, 860, 864, 866], "line_graph": [183, 850], "line_graph_degre": 183, "linear": [383, 385, 397, 401, 407, 408, 410, 412, 414, 415, 416, 418, 420, 423, 424, 425, 426, 427, 433, 441, 449, 456, 706, 711, 714, 715, 716, 718, 721, 725, 727, 750, 755, 758, 761, 765, 767, 792, 797, 801, 805, 809, 810, 815, 816, 817, 818, 825, 834, 835, 848, 849, 850, 851, 854, 857, 861, 866], "linear_deg": 850, "linear_dst": [706, 750, 792], "linear_fus": 850, "linear_model": 380, "linear_prev": 850, "linear_radiu": 850, "linear_src": [706, 750, 792], "linearity\uc640": 802, "linearli": [385, 417, 815], "linegraph": 13, "lingfan": [849, 857], "link": [2, 13, 139, 149, 157, 158, 185, 191, 211, 214, 216, 220, 242, 289, 302, 304, 307, 449, 450, 451, 687, 691, 709, 710, 724, 727, 729, 733, 757, 773, 774, 800, 817, 823, 824, 827, 832, 838, 839, 846, 847, 850], "link_predict": [308, 825, 830, 831], "linkpr": 139, "linkproppr": [687, 733, 773, 845], "linspac": 860, "lint": 21, "linux": 841, "list": [4, 10, 21, 22, 27, 36, 37, 39, 45, 52, 54, 56, 73, 78, 92, 95, 96, 105, 117, 119, 121, 122, 123, 124, 125, 130, 131, 145, 148, 159, 178, 179, 183, 196, 197, 205, 207, 208, 209, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 235, 239, 246, 248, 286, 287, 289, 291, 292, 294, 295, 298, 299, 300, 301, 302, 303, 304, 307, 308, 312, 315, 329, 331, 340, 343, 348, 349, 382, 384, 390, 394, 416, 417, 453, 455, 474, 540, 542, 553, 559, 560, 562, 564, 566, 571, 572, 576, 586, 609, 632, 637, 638, 644, 646, 648, 650, 653, 655, 664, 678, 682, 686, 687, 688, 689, 693, 694, 701, 705, 710, 711, 716, 718, 722, 723, 727, 728, 729, 773, 774, 786, 810, 825, 829, 832, 833, 837, 841, 844, 850, 854, 857, 860, 861], "listen": 691, "liter": [133, 144], "literatur": 725, "littl": [21, 22, 70, 711, 727, 861], "live": [4, 849], "ll": 836, "load": [0, 2, 3, 138, 139, 140, 142, 143, 148, 156, 166, 179, 181, 184, 189, 190, 203, 204, 213, 235, 236, 237, 288, 304, 308, 314, 315, 327, 343, 423, 425, 427, 428, 683, 684, 688, 690, 691, 693, 709, 716, 718, 719, 731, 735, 742, 771, 773, 774, 775, 783, 803, 815, 816, 817, 824, 829, 830, 831, 834, 837, 840, 844, 845, 848, 849, 850, 851, 857, 866], "load_cor": 840, "load_cora": [850, 851], "load_cora_data": [848, 851], "load_data": 818, "load_edg": 237, "load_feat": 235, "load_graph": [204, 564, 689, 698, 702, 735, 742, 746, 775, 783, 787, 833], "load_info": [689, 735, 775], "load_nod": 237, "load_partit": [4, 239, 693, 694], "load_partition_book": [4, 693, 694], "load_partition_feat": [693, 694], "load_state_dict": [840, 857], "load_subtensor": [690, 736, 776], "load_tensor": 694, "load_url": 857, "loader": [41, 209, 210, 211, 212, 213, 290, 850, 867], "loader_cor": [840, 841], "local": [4, 23, 70, 197, 214, 231, 235, 238, 239, 343, 390, 395, 452, 560, 564, 684, 685, 688, 689, 690, 691, 693, 694, 771, 774, 779, 817, 825, 827, 832, 841, 844, 848, 851, 861], "local_edg": 779, "local_nod": 779, "local_node_idx": 779, "local_partit": 4, "local_scop": [423, 424, 425, 426, 427, 455, 715, 722, 725, 727, 728, 755, 757, 758, 762, 765, 767, 768, 797, 800, 801, 806, 809, 810, 811, 834, 835, 848], "local_to_global_nid": 384, "local_var": 70, "localhost": 21, "locat": [4, 146, 169, 231, 238, 605, 616, 684, 688, 693, 820], "lock": [10, 67, 89, 112, 841], "log": [23, 132, 133, 144, 170, 200, 389, 394, 406, 416, 423, 424, 426, 428, 728, 768, 811, 835, 850, 851, 857, 860], "log_prob": 857, "log_softmax": [848, 851, 854, 857], "logic": [156, 825, 827, 861], "logical_and": 779, "login": 844, "logisticregress": 380, "logit": [354, 423, 424, 425, 426, 427, 428, 714, 719, 725, 727, 729, 765, 767, 769, 803, 809, 810, 812, 815, 816, 817, 820, 825, 832, 834, 848, 849, 851, 854, 857], "logit\uc73c\ub85c": 809, "logn": 429, "logp": [848, 851, 854], "logsigmoid": 857, "lollipop": 172, "long": [4, 14, 22, 59, 64, 68, 118, 131, 286, 331, 447, 454, 584, 680, 694, 701, 712, 714, 745, 786, 850, 854, 861], "longer": [825, 827, 830, 831, 855, 857, 864], "longest": [182, 567], "longtensor": [4, 226, 296, 298, 302, 307, 316, 318, 330, 381, 384, 411, 450, 451, 454, 555, 632, 691, 718, 737, 754, 777, 796, 817, 818, 833, 837, 850, 857], "look": [9, 21, 137, 171, 180, 182, 188, 221, 713, 715, 716, 725, 825, 827, 830, 831, 833, 854, 857, 861], "lookup": [22, 849], "loop": [21, 62, 63, 116, 117, 181, 226, 338, 386, 392, 396, 398, 401, 402, 404, 405, 406, 409, 412, 417, 419, 429, 430, 431, 544, 552, 556, 566, 648, 663, 690, 691, 693, 694, 697, 713, 776, 782, 802, 816, 818, 840, 841, 850, 851, 857, 861], "loopi": 850, "loss": [4, 10, 304, 380, 384, 423, 424, 425, 426, 427, 428, 452, 690, 691, 710, 711, 714, 716, 718, 719, 725, 727, 728, 729, 736, 737, 754, 755, 757, 759, 765, 767, 768, 769, 776, 777, 796, 797, 800, 802, 803, 809, 810, 811, 812, 815, 816, 817, 818, 825, 826, 827, 832, 834, 835, 836, 840, 844, 845, 848, 849, 850, 851, 854, 857, 861, 866, 867], "loss_comput": 861, "loss_fcn": [690, 719, 736, 776, 815, 817, 844, 845], "loss_perm1": 850, "loss_perm2": 850, "loss\uac00": 803, "loss\ub97c": [802, 811, 812], "loss\uc5d0": 803, "lot": [22, 168, 186, 689, 712, 713, 727, 728], "low": [5, 239, 244, 290, 338, 394, 426, 428, 429, 431, 450, 451, 472, 564, 566, 691, 692, 706, 777, 814, 840, 851], "low2high": [426, 428], "lower": [22, 422, 688, 691, 734, 774, 834, 851, 860, 862, 864], "lowest": [178, 179], "lp": [450, 451, 830, 831], "lp_task": [830, 831], "lp_test_follow_neg_dst": 830, "lp_test_follow_neg_dsts_path": 830, "lp_test_follow_node_pair": 830, "lp_test_follow_node_pairs_path": 830, "lp_test_like_neg_dst": 830, "lp_test_like_neg_dsts_path": 830, "lp_test_like_node_pair": 830, "lp_test_like_node_pairs_path": 830, "lp_test_neg_dst": 831, "lp_test_neg_dsts_path": 831, "lp_test_node_pair": 831, "lp_test_node_pairs_path": 831, "lp_train_follow_node_pair": 830, "lp_train_follow_node_pairs_path": 830, "lp_train_like_node_pair": 830, "lp_train_like_node_pairs_path": 830, "lp_train_node_pair": 831, "lp_train_node_pairs_path": 831, "lp_val_follow_neg_dst": 830, "lp_val_follow_neg_dsts_path": 830, "lp_val_follow_node_pair": 830, "lp_val_follow_node_pairs_path": 830, "lp_val_like_neg_dst": 830, "lp_val_like_neg_dsts_path": 830, "lp_val_like_node_pair": 830, "lp_val_like_node_pairs_path": 830, "lp_val_neg_dst": 831, "lp_val_neg_dsts_path": 831, "lp_val_node_pair": 831, "lp_val_node_pairs_path": 831, "lpe": 445, "lr": [4, 10, 380, 384, 423, 424, 425, 427, 428, 452, 690, 691, 714, 718, 719, 736, 737, 739, 776, 777, 780, 803, 815, 816, 817, 818, 825, 832, 834, 835, 836, 844, 845, 848, 849, 850, 851, 854, 861, 866, 867], "lr1": [691, 737, 777], "lr2": [691, 737, 777], "lr_schedul": 817, "lsc": 288, "lsc_2part": 694, "lsc_chunk": 694, "lstm": [418, 435, 453, 721, 761, 805, 823, 855, 856, 858, 861, 864], "lt": [14, 817, 818, 825, 827, 830, 831], "lumo": [178, 179], "lut": 861, "lvert": [448, 721, 761, 805], "m": [5, 9, 21, 62, 63, 73, 91, 92, 93, 94, 100, 113, 126, 128, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 348, 385, 394, 400, 414, 416, 423, 424, 426, 429, 431, 437, 455, 562, 605, 606, 613, 616, 624, 625, 674, 675, 676, 677, 705, 707, 715, 719, 722, 726, 728, 749, 751, 758, 762, 766, 768, 790, 791, 793, 801, 803, 806, 811, 814, 818, 820, 826, 834, 848, 850, 857, 860], "m_": [400, 704, 748, 789, 826, 834], "m_i": 400, "m_r": 451, "m_v": [826, 834], "machin": [4, 177, 178, 179, 211, 212, 231, 238, 239, 452, 688, 690, 691, 692, 693, 694, 695, 719, 788, 813, 821, 823, 832, 837, 844, 845, 850, 854, 857, 858, 861, 864, 868, 869], "machine_id": 4, "made": [181, 423, 424, 425, 427, 849, 861], "mag": [288, 694, 716, 779], "mag240m": 288, "mag_lsc_partit": 694, "maggi": 747, "magnitud": 851, "mag\uc758": 779, "mai": [4, 6, 20, 21, 41, 116, 186, 214, 220, 226, 235, 290, 292, 299, 317, 350, 385, 414, 417, 538, 556, 637, 638, 685, 686, 688, 690, 691, 694, 702, 710, 721, 722, 723, 725, 726, 727, 728, 729, 732, 772, 814, 816, 825, 827, 832, 833, 835, 837, 844, 849, 867], "mailbox": [5, 20, 100, 262, 263, 264, 265, 674, 675, 677, 705, 719, 722, 749, 762, 790, 803, 806, 834, 851, 854, 857, 861], "main": [4, 21, 210, 290, 690, 691, 717, 727, 767, 810, 820, 821, 825, 827, 830, 831, 840, 841, 850, 851, 867], "mainland": 23, "mainli": [4, 691], "maintain": [4, 6, 10, 27, 28, 114, 115, 116, 117, 126, 130, 131, 145, 245, 246, 248, 249, 286, 290, 331, 332, 335, 341, 349, 473, 474, 537, 551, 554, 631, 640, 641, 727, 844, 854, 861], "major": [144, 231, 238, 699, 718, 720, 727, 784, 830, 844, 867], "make": [8, 20, 21, 22, 70, 120, 122, 137, 140, 162, 171, 180, 182, 188, 198, 210, 214, 215, 216, 226, 229, 230, 240, 241, 244, 292, 381, 407, 413, 418, 423, 424, 432, 434, 438, 439, 441, 444, 472, 556, 560, 562, 664, 670, 680, 684, 685, 688, 689, 690, 691, 693, 695, 701, 705, 715, 716, 725, 727, 772, 779, 809, 814, 817, 823, 832, 833, 835, 838, 839, 854, 860, 861], "make_model": 861, "make_shar": 22, "makedir": [689, 735, 775, 830, 831], "malici": [825, 827, 830, 831], "manag": [287, 292, 295, 315, 691, 702, 814, 821, 867], "mandatori": [21, 829], "manhattan": [430, 544], "mani": [4, 22, 122, 214, 226, 556, 560, 683, 686, 691, 695, 698, 710, 720, 722, 817, 832, 833, 834, 835, 844, 854, 857, 861], "manifold": 409, "manipul": [0, 13, 22, 305, 851], "manner": 860, "manual": [4, 101, 102, 155, 168, 186, 187, 193, 290, 386, 398, 401, 402, 404, 405, 406, 409, 412, 414, 417, 419, 693, 698, 813, 834, 841, 844, 867], "manual_se": 866, "map": [4, 5, 20, 26, 43, 46, 47, 74, 75, 101, 102, 103, 109, 121, 130, 131, 186, 220, 233, 239, 296, 299, 304, 309, 317, 318, 321, 324, 329, 330, 331, 381, 383, 384, 406, 415, 424, 425, 429, 431, 433, 538, 632, 640, 646, 686, 692, 693, 711, 722, 723, 762, 778, 806, 825, 833, 844, 850, 857, 861], "map_to_homo_eid": [4, 692, 778], "map_to_homo_nid": [4, 692, 778], "map_to_per_etyp": [4, 240, 692, 778], "map_to_per_ntyp": [4, 240, 692, 778], "mapper": 299, "mapperiterdatapip": [305, 825, 827], "margin": [728, 811], "mark": [144, 167, 222, 223, 224, 225, 242, 835], "marker": 860, "marketplac": 697, "markupsaf": [825, 827, 830, 831], "mask": [22, 132, 133, 140, 144, 150, 154, 157, 158, 159, 160, 161, 162, 163, 170, 173, 176, 181, 184, 191, 192, 194, 197, 198, 205, 216, 231, 238, 245, 423, 424, 425, 427, 441, 443, 444, 454, 473, 653, 680, 684, 688, 719, 724, 725, 729, 754, 769, 771, 774, 796, 808, 812, 837, 844, 848, 851, 854, 861], "massiv": [693, 694, 709], "master": [21, 165, 840], "master_addr": 840, "master_port": 840, "mat": [627, 685, 688, 732, 734, 772, 774, 850], "mat_path": [688, 734, 774], "match": [4, 5, 9, 118, 199, 200, 296, 309, 348, 349, 352, 427, 455, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 559, 685, 732, 772, 820], "materi": [9, 89, 712, 833, 857], "materialize_data": 108, "math": [244, 402, 472, 642, 643, 705, 722, 782, 796, 811, 848, 850, 854], "mathbb": [704, 748, 789, 816, 817, 818, 857, 861], "mathbf": [402, 406, 411, 454], "mathcal": [243, 342, 354, 389, 392, 393, 394, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 414, 415, 417, 418, 471, 497, 498, 569, 570, 646, 704, 705, 722, 723, 727, 728, 748, 749, 754, 762, 763, 767, 768, 789, 790, 796, 806, 807, 810, 811, 820, 826, 834, 835, 851, 854], "mathemat": [120, 243, 342, 391, 392, 403, 406, 412, 450, 451, 471, 605, 616, 706, 815, 816, 834, 848, 850], "mathrm": [118, 244, 386, 393, 398, 399, 402, 404, 405, 407, 408, 409, 411, 415, 418, 433, 435, 472, 722, 762, 806, 861], "matmul": [820, 849], "matplotlib": [816, 850, 854, 857, 860], "matric": [41, 62, 63, 118, 119, 183, 385, 402, 417, 441, 605, 608, 613, 614, 616, 625, 646, 698, 816, 819, 820, 848], "matrix": [0, 9, 13, 14, 30, 31, 32, 62, 63, 118, 119, 126, 131, 146, 169, 177, 249, 286, 331, 334, 335, 338, 341, 387, 395, 396, 397, 399, 405, 406, 409, 412, 419, 420, 429, 430, 431, 446, 451, 454, 456, 496, 497, 498, 499, 544, 562, 566, 571, 572, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 646, 655, 656, 661, 665, 698, 706, 718, 725, 726, 765, 809, 813, 815, 816, 817, 818, 819, 833, 848, 849, 851, 852, 864], "matrix\uc774\ub2e4": 778, "matter": [21, 297, 435, 850, 851, 861], "mat\u6587\u4ef6\u4e0b\u8f7d\u5230\u76ee\u5f55": 732, "max": [5, 9, 73, 117, 342, 344, 345, 382, 390, 393, 394, 407, 409, 415, 416, 434, 453, 476, 481, 498, 500, 502, 508, 516, 522, 548, 549, 571, 572, 609, 610, 611, 623, 648, 680, 701, 705, 707, 721, 722, 728, 729, 749, 751, 761, 762, 768, 769, 786, 790, 793, 805, 806, 811, 812, 820, 848, 850, 857, 860, 862, 864, 866], "max_": [401, 434], "max_allow_nod": 168, "max_degre": [442, 682], "max_depth": 861, "max_dist": [447, 682], "max_in_degre": [391, 392, 393], "max_len": [446, 680, 682], "max_node_typ": 448, "max_num_nod": [168, 186, 680, 682], "max_num_v": 172, "max_queue_s": 234, "max_uva_thread": 290, "maxim": [6, 231, 234, 238, 380, 694, 834, 841, 857], "maximum": [6, 118, 119, 168, 172, 186, 391, 392, 393, 394, 401, 416, 441, 442, 443, 444, 446, 447, 448, 555, 591, 594, 665, 682, 727, 728, 811, 851, 855, 861, 864], "mayb": 21, "mb": [694, 823, 839, 843, 847, 853, 856, 859, 863, 865, 869], "mcaulei": [135, 136], "mckee": 553, "mct": [426, 428], "md": [210, 814, 825, 827, 830, 831], "mean": [4, 5, 9, 10, 73, 117, 137, 147, 150, 154, 176, 177, 180, 210, 211, 212, 239, 290, 292, 294, 296, 299, 304, 307, 309, 318, 330, 346, 347, 354, 382, 393, 394, 406, 407, 409, 412, 415, 416, 418, 423, 424, 426, 429, 430, 431, 432, 433, 435, 436, 438, 439, 477, 482, 498, 500, 503, 509, 517, 523, 545, 546, 548, 549, 591, 595, 631, 632, 640, 648, 668, 691, 701, 705, 707, 713, 714, 715, 718, 719, 721, 722, 725, 728, 729, 749, 751, 758, 761, 762, 765, 768, 769, 777, 786, 790, 793, 800, 801, 803, 805, 806, 809, 811, 812, 815, 816, 817, 820, 825, 827, 832, 834, 835, 837, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 867], "mean_nod": [424, 425, 426, 427, 727, 767, 810, 836], "mean_udf": 834, "meaning": 726, "meaningless": 116, "meant": [22, 698], "measur": [13, 120, 161, 243, 244, 338, 342, 426, 428, 429, 431, 450, 451, 471, 472, 566, 682, 851, 861, 867], "mechan": [5, 20, 22, 446, 447, 448, 717, 726, 817, 850, 851, 857, 861, 862, 864, 867], "medium": 14, "meet": [387, 816], "mem": [10, 823, 839, 843, 847, 853, 856, 859, 863, 865, 869], "member": [21, 425, 427, 705, 834, 835, 837, 850, 866], "memmap": 694, "memo": 5, "memori": [4, 9, 10, 14, 67, 89, 112, 126, 131, 184, 210, 234, 248, 249, 286, 291, 292, 296, 297, 299, 311, 314, 315, 327, 331, 338, 353, 429, 431, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 556, 566, 638, 690, 694, 701, 706, 709, 712, 713, 719, 803, 814, 821, 828, 829, 830, 831, 835, 854, 861], "meng": 747, "mention": [691, 693, 694, 713, 861], "merg": [21, 229, 230, 678, 702, 705, 707, 723, 725, 787, 836, 850, 851], "merit": 22, "merlin": 210, "messag": [1, 13, 53, 73, 91, 92, 93, 94, 100, 113, 127, 130, 131, 178, 179, 208, 210, 211, 212, 214, 215, 216, 219, 220, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 386, 387, 388, 389, 392, 394, 396, 398, 401, 402, 404, 405, 406, 407, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 426, 427, 428, 476, 477, 478, 479, 481, 482, 483, 484, 498, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 518, 519, 522, 523, 524, 525, 539, 540, 541, 542, 543, 560, 632, 669, 670, 671, 672, 673, 674, 675, 676, 677, 693, 703, 711, 713, 714, 715, 716, 720, 721, 723, 724, 727, 729, 747, 788, 793, 796, 797, 800, 802, 803, 808, 812, 813, 827, 833, 835, 849, 851, 852, 855, 857, 862, 864], "message_func": [73, 91, 92, 93, 94, 100, 113, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 539, 540, 541, 542, 543, 705, 707, 708, 749, 751, 752, 790, 793, 794, 834, 849, 851, 854, 857, 861], "meta": [4, 148, 291, 313, 384, 452, 686, 692, 694, 854], "meta_g": 72, "metadata": [4, 235, 239, 287, 293, 295, 296, 308, 313, 314, 686, 691, 692, 693, 694, 695, 718, 779, 825, 827, 828, 829, 830, 831, 867], "metadata_path": [830, 831], "metagraph": [13, 26, 101, 102, 117, 119, 122, 127, 130, 131, 173, 220, 245, 331, 332, 336, 337, 424, 473, 537, 545, 554, 637, 640, 667, 678, 686, 702, 746, 787], "metapath": [349, 384, 555, 558, 559, 646], "method": [1, 22, 89, 112, 160, 194, 208, 209, 210, 217, 218, 220, 221, 231, 238, 239, 289, 298, 307, 312, 338, 342, 381, 382, 385, 390, 402, 404, 405, 418, 429, 431, 471, 500, 539, 541, 555, 566, 638, 686, 698, 701, 709, 710, 713, 714, 724, 725, 826, 827, 832, 833, 835, 837, 841, 848, 849], "methodologi": [632, 713, 728], "meti": [4, 6, 209, 231, 238, 239, 350, 351, 553, 694, 738, 779, 844], "metirs\ub97c": 779, "metis_partition_assign": [209, 553], "metis\u4ec5\u5e73\u8861\u6bcf\u4e2a\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u6570": 738, "metis\u5212\u5206\u7684\u597d\u5904\u5728\u4e8e": 738, "metis\uc640": 779, "metis\uc740": 779, "metis\uc758": 779, "metric": [21, 338, 429, 430, 431, 544, 566, 713, 825, 827, 835, 844, 845], "metric\uc744": 799, "mf": 867, "mfg": [127, 131, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 711, 714, 716, 797, 800, 802, 826, 827, 845], "mfg\uac00": 796, "mfg\ub4e4\ub85c": 796, "mfg\ub4e4\uc740": 796, "mfg\ub4e4\uc758": [796, 797, 802], "mfg\ub85c": 796, "mfg\ub97c": [796, 802], "mfg\uc5d0": 801, "mfg\uc5d0\uc11c": 801, "mfg\uc5d0\uc11c\uc758": 796, "mfg\uc758": [796, 797, 802], "mfg\uc778": 801, "mgf\uac00": 801, "mha": 817, "michal": 837, "michel": 167, "micro": 851, "microbenchmark": 821, "microsoft": [151, 152, 288, 694], "middl": [142, 143], "might": [349, 388, 697, 707, 727, 841, 850], "migrat": 21, "mikhail": 849, "million": [452, 709, 719, 813, 827], "min": [5, 9, 73, 117, 242, 382, 393, 394, 416, 478, 483, 498, 500, 504, 510, 518, 524, 548, 549, 607, 648, 680, 705, 707, 721, 728, 749, 751, 761, 768, 790, 793, 800, 805, 811, 820, 850], "min_num_v": 172, "mind": [690, 850], "mine": [132, 171], "minesweep": 171, "mini": [4, 7, 165, 168, 172, 186, 208, 210, 220, 305, 688, 690, 691, 708, 709, 712, 716, 722, 727, 776, 813, 824, 836, 840], "mini_batch": [711, 716], "mini_cn": 736, "mini_feature_dataset": 686, "mini_featureless_dataset": 686, "mini_hetero_dataset": 686, "mini_multi_dataset": 686, "minibatch": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 289, 292, 299, 300, 305, 316, 321, 709, 713, 717, 797, 823, 824, 825, 826, 827, 829, 836, 868, 869], "minibatch_transform": [825, 827], "minibatcher_default": [292, 299], "minibatchtransform": [294, 306, 312, 711, 825, 827], "minigcdataset": [688, 734, 774], "minim": [8, 21, 22, 239, 351, 380, 686, 693, 694, 716, 717, 728, 850, 851], "minimum": [6, 9, 172, 186, 296, 394, 416, 591, 596, 664, 705, 727, 850], "minji": [848, 850, 851, 854], "minkowski": [430, 544], "minst": 169, "minut": [164, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "misc": 13, "miss": [686, 825, 849, 851], "mix": [9, 14, 306, 416, 703, 705, 788, 790, 850, 852, 864], "mixtur": [183, 409], "mkdir": [814, 844], "ml": 173, "mle": 857, "mlp": [400, 416, 421, 445, 725, 727, 767, 810, 835], "mlppredictor": [725, 765, 809, 835], "mlp\ub97c": 809, "mlsoar": 747, "mm": 850, "mmap": [830, 831], "mmap_mod": 314, "mnist": [14, 169, 860], "mod": [382, 723, 763, 807], "mod_arg": [382, 723, 763, 807], "mod_kwarg": [382, 425, 723, 763, 807], "mode": [4, 147, 164, 166, 174, 175, 184, 195, 209, 217, 234, 350, 351, 453, 455, 689, 735, 775, 814, 816, 825, 827, 830, 831, 854, 861], "modelmodel_opt": 861, "model_state_dict": 840, "model_typ": 445, "model_zoo": 857, "modelnet": 14, "modif": [441, 444, 690, 844, 845], "modifi": [8, 148, 149, 155, 185, 187, 193, 198, 290, 296, 314, 315, 441, 444, 634, 635, 636, 716, 726, 813, 814, 840, 844], "modul": [4, 6, 8, 13, 18, 21, 234, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 655, 656, 657, 658, 659, 661, 662, 665, 681, 682, 690, 703, 709, 711, 713, 714, 716, 718, 719, 724, 725, 727, 728, 729, 755, 756, 757, 758, 759, 761, 763, 765, 767, 768, 769, 797, 799, 800, 801, 802, 803, 804, 805, 807, 809, 810, 811, 812, 815, 816, 817, 818, 820, 823, 825, 826, 827, 830, 831, 832, 835, 836, 838, 839, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "modular": 694, "moduledict": [424, 426, 715, 723, 758, 763, 801, 807], "modulelist": [682, 713, 714, 718, 719, 803, 816, 817, 825, 844, 845, 849, 850, 851, 857, 867], "mol": [178, 179], "mol_encod": 817, "molass": 747, "molecul": [177, 178, 179, 440], "molecular": [178, 179, 195, 388, 435, 440, 448, 836], "moleculenet": 179, "molhiv": [138, 687, 733, 773, 817], "moment": [178, 179, 394, 416, 553], "moment3": [394, 416], "moment4": [394, 416], "moment5": [394, 416], "monitor": 860, "mont": [426, 428], "month": [163, 181], "monthli": [149, 185], "more": [3, 4, 9, 20, 21, 22, 27, 28, 66, 91, 95, 96, 120, 122, 156, 161, 168, 214, 216, 226, 230, 244, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 292, 304, 335, 388, 406, 423, 424, 425, 427, 452, 472, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 555, 556, 561, 562, 632, 638, 680, 686, 688, 689, 690, 691, 694, 698, 702, 706, 708, 709, 710, 711, 712, 716, 717, 718, 721, 723, 725, 727, 729, 746, 787, 813, 814, 816, 818, 820, 825, 827, 830, 831, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866], "moreov": [118, 119], "most": [1, 14, 116, 126, 131, 147, 151, 152, 159, 182, 226, 248, 249, 286, 331, 426, 428, 555, 632, 688, 689, 691, 692, 701, 705, 710, 715, 719, 725, 726, 727, 729, 820, 825, 827, 832, 841, 861], "mostli": 22, "motif": [141, 142, 143, 189, 190, 851], "mount": 844, "move": [4, 89, 108, 577, 580, 685, 692, 716, 816, 861, 867], "movement": [245, 246, 332, 336, 337, 473, 474, 537, 717], "movi": [43, 173, 850], "movielen": 173, "mp": [292, 840, 866, 867], "mpicc": [693, 779], "mpirun": [693, 779], "mpmath": [825, 827, 830, 831], "mpnn": [415, 435], "mq": 562, "msbuild": 814, "msg": [262, 263, 264, 265, 414, 848, 849, 850, 861], "mu": [178, 179, 409, 448], "mu_": 414, "mu_k": 409, "much": [4, 122, 139, 244, 472, 556, 560, 706, 813, 821, 826, 830, 831, 844, 849, 851, 857, 861], "mufei": [849, 851, 857], "muhyun": 788, "mul": [9, 258, 259, 272, 273, 282, 283, 441, 444, 492, 493, 497, 498, 515, 516, 517, 518, 519, 520, 533, 534, 619, 705, 749, 790, 820], "mulbackward0": 9, "multi": [9, 41, 149, 158, 162, 185, 191, 194, 292, 300, 391, 398, 402, 403, 404, 405, 414, 441, 444, 446, 447, 448, 450, 452, 545, 546, 641, 682, 688, 694, 699, 712, 716, 728, 729, 813, 823, 825, 827, 832, 833, 834, 842, 843, 844, 849, 852, 862, 864, 868, 869], "multi30k": 861, "multi_update_al": [424, 426, 707, 723, 751, 763, 793, 807], "multiclass": [165, 425, 426, 427, 428, 454, 818, 867], "multidigraph": [72, 637], "multigraph": [48, 66, 118, 119, 697, 782, 857], "multihead": 436, "multiheadattent": 861, "multiheadgatlay": 851, "multilabel": 454, "multilay": [214, 215, 216, 302, 560, 716, 725], "multilayerdropoutsampl": [754, 796], "multilayerfullneighborsampl": [754, 755, 756, 757, 759, 796, 797, 799, 800, 802], "multilayerneighborsampl": [210, 691, 737, 754, 777, 796, 844, 845], "multilevel": [350, 351], "multinomi": [714, 757, 800], "multipl": [0, 4, 7, 9, 14, 22, 26, 27, 28, 36, 37, 41, 43, 46, 47, 48, 51, 52, 54, 55, 56, 57, 60, 61, 65, 74, 75, 77, 87, 88, 90, 91, 92, 95, 96, 103, 107, 118, 126, 128, 129, 130, 131, 229, 230, 239, 248, 249, 286, 287, 290, 291, 295, 296, 302, 307, 308, 315, 331, 338, 340, 343, 381, 382, 384, 389, 416, 425, 427, 429, 430, 431, 440, 441, 444, 452, 453, 496, 497, 498, 499, 544, 548, 549, 552, 555, 559, 560, 564, 566, 569, 570, 580, 605, 613, 614, 616, 631, 632, 640, 646, 650, 680, 682, 690, 691, 692, 694, 697, 701, 707, 712, 715, 717, 723, 727, 728, 729, 793, 814, 816, 817, 821, 830, 831, 832, 835, 841, 844, 848, 849, 851, 852, 857, 861, 864, 866, 867], "multipli": [5, 183, 216, 394, 416, 423, 424, 548, 549, 605, 606, 613, 616, 621, 624, 625, 705, 719, 726, 815, 820, 849, 861], "multiprocess": [4, 290, 717, 866, 867], "multiprocessingwrapp": [825, 827], "multiprocessor": 290, "multpli": 726, "music": [137, 161], "must": [4, 6, 9, 27, 28, 34, 35, 36, 37, 43, 46, 48, 51, 53, 54, 55, 57, 58, 60, 61, 73, 74, 87, 88, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 113, 118, 119, 122, 125, 130, 131, 138, 139, 140, 147, 164, 174, 175, 197, 198, 205, 209, 210, 211, 212, 214, 216, 218, 219, 220, 240, 241, 245, 248, 249, 286, 287, 293, 295, 296, 297, 302, 307, 314, 315, 331, 332, 334, 336, 337, 339, 340, 341, 352, 382, 386, 389, 394, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 412, 416, 417, 418, 424, 425, 426, 427, 428, 431, 454, 473, 499, 500, 537, 547, 548, 549, 550, 553, 557, 558, 559, 560, 561, 562, 563, 566, 567, 571, 572, 591, 594, 595, 596, 598, 607, 625, 630, 632, 640, 678, 684, 686, 688, 691, 692, 695, 699, 700, 702, 705, 712, 715, 746, 785, 787, 798, 820, 827, 833, 849, 854], "mutag": [25, 165, 168, 170, 186, 423, 427, 428, 727, 767, 810], "mutat": [13, 70, 854, 857], "mutual": [149, 161, 185, 216, 220, 244, 472, 559, 697, 866], "mxnet": [4, 9, 13, 21, 23, 199, 200, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 688, 701, 715, 720, 727, 729, 760, 804, 810, 813, 821, 852, 864], "mxnet\uacfc": 812, "mxnet\uc5d0\uc11c\ub294": 774, "mxnet\uc758": 786, "mxnet\uc774\ub098": 801, "my": [694, 695], "my_agg_func": 382, "my_sample_subgraph": [298, 312], "my_train_script": 695, "myadd": 22, "mydata": 694, "mydatapars": 686, "mydataset": [684, 685, 731, 771, 772], "mygraph": [694, 695], "myrepo": 694, "mysubgraphsampl": [298, 312], "n": [6, 9, 14, 20, 21, 62, 63, 126, 129, 186, 190, 239, 242, 249, 296, 318, 329, 330, 338, 339, 342, 350, 351, 354, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 454, 471, 496, 499, 547, 562, 566, 567, 571, 572, 605, 606, 607, 610, 611, 613, 616, 623, 624, 625, 630, 639, 642, 643, 658, 666, 675, 676, 677, 680, 692, 705, 709, 718, 722, 749, 753, 754, 762, 790, 795, 796, 800, 806, 815, 816, 817, 818, 820, 821, 826, 830, 831, 834, 848, 850, 851, 854, 857, 860, 861, 865], "n0": 296, "n1": [296, 318, 324, 330, 447], "n2": [296, 318, 324, 330, 447], "n2e": 667, "n3": 324, "n_": [386, 389, 396, 397, 398, 399, 402, 404, 405, 407, 408, 409, 410, 412, 414, 418], "n_0": 122, "n_1": 122, "n_base": 849, "n_class": [428, 690, 719, 725, 727, 736, 765, 767, 776, 803, 809, 810, 844, 845], "n_click": [724, 764, 808], "n_commun": 183, "n_dislik": [724, 764, 808], "n_edg": [728, 755, 768, 797, 803, 811, 818, 861], "n_epoch": [210, 213, 849], "n_etyp": 411, "n_feat": 455, "n_featur": [728, 729, 768, 769, 811, 812], "n_follow": [724, 764, 808], "n_graph": 183, "n_head": [437, 445], "n_hetero_featur": [724, 729, 764, 769, 808, 812], "n_hidden": [719, 803, 844, 845, 849], "n_hidden_lay": 849, "n_i": [122, 432, 433, 434, 439, 849], "n_item": [724, 764, 808], "n_iter": 435, "n_k": 122, "n_kernel": 409, "n_label": [729, 769, 812], "n_layer": [435, 436, 437, 754, 756, 796, 799, 844, 845], "n_max_click": [724, 764, 808], "n_node": [183, 837, 861], "n_search": 840, "n_step": 411, "n_t": [424, 425, 426], "n_token": 861, "n_train": 837, "n_user": [724, 764, 808], "n_user_class": [724, 729, 764, 769, 808, 812], "n_val": 837, "naive_propagate_attent": 861, "name": [0, 4, 5, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 45, 46, 47, 48, 52, 53, 55, 57, 58, 60, 61, 62, 63, 68, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 133, 138, 156, 159, 162, 165, 168, 173, 178, 179, 186, 197, 200, 205, 208, 214, 216, 219, 220, 221, 222, 223, 224, 225, 235, 236, 239, 240, 241, 245, 246, 248, 249, 287, 288, 289, 291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 315, 316, 327, 332, 336, 337, 343, 382, 394, 416, 452, 473, 474, 475, 498, 537, 545, 547, 548, 549, 550, 551, 552, 553, 555, 557, 559, 560, 561, 562, 563, 564, 568, 569, 570, 571, 572, 637, 639, 640, 646, 648, 653, 654, 655, 656, 658, 661, 662, 664, 665, 666, 668, 670, 684, 685, 686, 687, 688, 691, 692, 693, 694, 699, 702, 705, 710, 711, 716, 725, 727, 731, 732, 733, 734, 737, 739, 746, 771, 772, 773, 774, 777, 779, 780, 784, 787, 814, 820, 825, 827, 829, 830, 831, 834, 835, 837, 844, 845, 857, 861, 866], "namedrockunit": 144, "namedtupl": 854, "nameerror": 827, "namespac": [1, 22, 133, 144, 705, 813], "name\u76ee\u5f55\u4e2d": 732, "nan": [339, 441, 444, 658, 848, 851], "narrow_row": [722, 762, 806], "nation": 166, "nativ": [8, 291, 690, 710, 814, 817, 820], "nativelayernormbackward": 437, "natur": [553, 726, 817, 850, 854, 860, 861], "nb": [825, 827], "nblink": 711, "nc": [830, 831], "nc_task": [830, 831], "nc_test_id": 831, "nc_test_ids_path": 831, "nc_test_item_id": 830, "nc_test_item_ids_path": 830, "nc_test_item_label": 830, "nc_test_item_labels_path": 830, "nc_test_label": 831, "nc_test_labels_path": 831, "nc_test_user_id": 830, "nc_test_user_ids_path": 830, "nc_test_user_label": 830, "nc_test_user_labels_path": 830, "nc_train_id": 831, "nc_train_ids_path": 831, "nc_train_item_id": 830, "nc_train_item_ids_path": 830, "nc_train_item_label": 830, "nc_train_item_labels_path": 830, "nc_train_label": 831, "nc_train_labels_path": 831, "nc_train_user_id": 830, "nc_train_user_ids_path": 830, "nc_train_user_label": 830, "nc_train_user_labels_path": 830, "nc_val_id": 831, "nc_val_ids_path": 831, "nc_val_item_id": 830, "nc_val_item_ids_path": 830, "nc_val_item_label": 830, "nc_val_item_labels_path": 830, "nc_val_label": 831, "nc_val_labels_path": 831, "nc_val_user_id": 830, "nc_val_user_ids_path": 830, "nc_val_user_label": 830, "nc_val_user_labels_path": 830, "nccl": [866, 867], "nci1": 165, "ndarrai": [22, 27, 54, 95, 96, 125, 131, 183, 205, 248, 286, 331, 698, 701, 742, 783, 814, 850], "ndarraypartit": 452, "ndarray\u7c7b\u578b\u4f5c\u4e3aapi\u7684\u8f93\u5165": 745, "ndarri": 786, "ndata": [4, 5, 9, 28, 34, 35, 43, 54, 56, 64, 71, 75, 77, 93, 94, 95, 96, 100, 103, 108, 113, 115, 117, 122, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 167, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 217, 219, 221, 224, 239, 245, 248, 332, 336, 337, 348, 380, 394, 423, 424, 425, 426, 427, 428, 441, 445, 455, 473, 537, 549, 550, 551, 553, 554, 562, 568, 570, 571, 572, 637, 638, 639, 640, 643, 652, 653, 658, 659, 660, 662, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 686, 688, 690, 691, 693, 694, 699, 700, 702, 705, 706, 715, 719, 725, 726, 727, 728, 729, 734, 736, 737, 738, 743, 744, 746, 749, 750, 754, 755, 757, 758, 759, 765, 766, 767, 768, 769, 774, 776, 777, 779, 784, 785, 787, 790, 792, 796, 797, 800, 801, 802, 803, 809, 810, 811, 812, 815, 816, 817, 818, 832, 833, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866], "ndata_pars": [148, 686], "ndata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 245, 246, 299, 332, 335, 336, 337, 341, 473, 474, 537, 546, 550, 551, 568, 637, 651, 652, 659, 665, 678, 686, 693, 694, 698, 699, 701, 727, 742, 743, 745, 783, 784, 786, 810, 833, 836, 837], "nearbi": [380, 384], "nearest": [14, 338, 429, 431, 566, 728, 811], "nearli": 861, "necessari": [4, 21, 41, 210, 214, 216, 220, 562, 632, 706, 711, 712, 729, 799, 812, 826, 836, 840, 844, 861], "necessarili": [131, 331, 637, 715, 826, 834, 857], "need": [4, 5, 6, 21, 48, 57, 65, 77, 89, 118, 138, 139, 140, 145, 214, 229, 230, 239, 245, 246, 292, 294, 302, 307, 309, 332, 336, 337, 338, 350, 351, 385, 413, 423, 424, 425, 426, 427, 428, 429, 431, 453, 473, 474, 537, 538, 566, 571, 572, 638, 685, 686, 691, 692, 693, 694, 695, 701, 702, 706, 707, 710, 713, 714, 715, 716, 717, 721, 722, 723, 725, 726, 727, 728, 729, 778, 786, 787, 814, 820, 825, 826, 829, 830, 831, 832, 835, 836, 837, 844, 845, 857, 861, 866, 867], "needham": 835, "neg": [6, 7, 13, 120, 139, 161, 163, 184, 214, 216, 219, 220, 226, 227, 240, 241, 292, 296, 299, 300, 301, 302, 304, 306, 307, 316, 380, 384, 391, 402, 404, 405, 476, 481, 502, 508, 516, 522, 556, 557, 559, 560, 561, 562, 664, 686, 717, 728, 757, 820, 824, 825, 830, 831, 845, 849, 850, 854], "neg_dst": [300, 728, 768, 811, 845], "neg_dsts_follow": 301, "neg_dsts_lik": 301, "neg_eid": 835, "neg_featur": 845, "neg_g": [728, 768, 811], "neg_graph": 845, "neg_pair_graph": 220, "neg_ratio": 139, "neg_sampl": [220, 226, 227, 302, 316], "neg_scor": [728, 757, 768, 800, 811, 835, 845], "neg_src": [728, 768, 811, 845], "neg_u": 835, "neg_v": [384, 835], "neg_weight": 380, "negat": [589, 820], "negative_dst": [299, 300, 301, 304, 316, 829, 830, 831], "negative_dsts_follow": 299, "negative_dsts_lik": 299, "negative_edge_dst": [139, 845], "negative_edge_src": [139, 845], "negative_graph": [728, 757, 768, 800, 811], "negative_node_pair": 304, "negative_ratio": [296, 306, 316], "negative_s": [380, 384], "negative_sampl": [220, 226, 227, 228, 757, 800], "negative_slop": [391, 402, 404, 405], "negative_src": [299, 300, 304, 316, 829], "negativesampl": [316, 714, 717, 757, 800], "neghborhood": 825, "neglig": 22, "neigh": [722, 762, 806], "neighbor": [4, 13, 14, 171, 210, 214, 215, 216, 219, 220, 233, 240, 241, 244, 296, 302, 307, 335, 338, 349, 388, 391, 392, 393, 401, 402, 409, 412, 417, 429, 430, 431, 472, 544, 555, 557, 559, 560, 561, 562, 563, 566, 571, 572, 657, 688, 709, 710, 713, 716, 717, 718, 728, 729, 754, 796, 811, 820, 824, 832, 834, 835, 836, 848, 849, 851, 857], "neighbor_match": 6, "neighbor_sampl": 827, "neighbor_sampling_overview": 711, "neighborhood": [1, 214, 220, 296, 302, 336, 337, 423, 424, 425, 427, 555, 560, 561, 632, 691, 713, 718, 729, 755, 759, 797, 802, 832, 849, 850, 851, 852, 864], "neighborsampl": [215, 220, 302, 690, 711, 713, 716, 736, 776], "neighbor\ub4e4\uc5d0": 774, "neighbour": [394, 416], "neighbourhood": [416, 850], "neither": [168, 571, 572], "nelement": 857, "neo4j": 835, "neq": 850, "net": [416, 441, 443, 444, 455, 848, 851], "net_typ": 234, "network": [4, 13, 72, 134, 141, 142, 143, 145, 149, 150, 154, 155, 164, 165, 166, 167, 175, 176, 183, 185, 187, 189, 190, 192, 193, 209, 210, 219, 234, 242, 243, 288, 313, 339, 354, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 398, 400, 402, 404, 405, 406, 407, 408, 410, 411, 412, 413, 417, 419, 420, 421, 423, 424, 425, 426, 427, 428, 433, 436, 437, 440, 453, 455, 456, 471, 547, 555, 557, 646, 651, 654, 658, 662, 665, 682, 690, 691, 693, 694, 695, 697, 698, 703, 707, 709, 715, 716, 721, 725, 726, 728, 742, 754, 783, 796, 813, 817, 819, 820, 821, 822, 823, 833, 834, 836, 837, 838, 839, 840, 853, 854, 857, 862, 863, 866, 867], "networkx": [72, 125, 230, 248, 455, 637, 639, 698, 742, 783, 816, 825, 827, 830, 831, 850, 851, 854, 857, 860], "networkx\ub294": 783, "network\ub97c": 795, "neural": [4, 141, 142, 143, 165, 179, 183, 189, 190, 192, 210, 219, 242, 243, 313, 339, 386, 387, 389, 390, 395, 400, 407, 408, 410, 411, 413, 415, 421, 423, 424, 425, 426, 427, 428, 433, 436, 437, 455, 547, 555, 658, 662, 665, 682, 703, 707, 709, 715, 716, 721, 726, 728, 754, 796, 813, 817, 819, 820, 821, 823, 832, 833, 834, 836, 838, 839, 840, 848, 853, 857, 862, 863, 866, 867], "neurip": [214, 296, 302, 560], "neuron": 850, "neutral": [184, 854], "never": [234, 430, 544, 711], "nevertheless": 692, "new": [0, 1, 3, 4, 26, 27, 28, 34, 40, 70, 89, 114, 115, 116, 117, 118, 119, 122, 138, 140, 142, 143, 159, 210, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 296, 325, 332, 335, 336, 337, 342, 348, 349, 382, 384, 392, 399, 401, 414, 417, 423, 424, 427, 471, 537, 550, 551, 552, 553, 554, 558, 560, 561, 562, 563, 571, 572, 589, 627, 631, 632, 646, 647, 648, 663, 668, 691, 692, 694, 701, 702, 709, 712, 715, 787, 796, 820, 821, 822, 832, 833, 834, 835, 836, 848, 849, 854, 857, 861, 862, 864], "new_cent": [423, 424], "new_d": [139, 140], "new_dataset": 138, "new_edge_feat": [399, 410], "new_edges_mask": [754, 796], "new_empti": 825, "new_etyp": 648, "new_g": [26, 130, 349, 645, 646, 647, 648, 650, 651, 652, 655, 656, 657, 659, 661, 663], "new_g1": 26, "new_g2": [26, 130], "new_label": 454, "new_node_feat": [399, 402, 410], "new_node_id": [423, 424], "new_val": 820, "newer": [298, 312], "newg": 833, "newh": 70, "newli": [114, 115, 840], "newman": 167, "next": [299, 302, 307, 557, 559, 638, 682, 686, 692, 694, 716, 759, 802, 825, 827, 835, 850, 854, 861], "next_func": [825, 827], "next_lg_x": 850, "next_x": 850, "nf": [695, 780], "nfeat": [389, 399, 402, 408, 425, 426, 427, 428, 443, 444, 451, 693, 694], "nh": 817, "nice": [22, 727, 822], "nid": [4, 10, 26, 95, 96, 130, 212, 219, 221, 222, 224, 225, 239, 245, 332, 336, 337, 423, 452, 473, 537, 550, 551, 553, 568, 632, 637, 677, 690, 691, 692, 694, 702, 708, 736, 737, 746, 752, 754, 776, 777, 778, 779, 787, 794, 796, 827, 833, 845, 861], "nid2localnid": 4, "nid2partid": 4, "nid_het2hom": 692, "nid_hom2het": 692, "nid_offset": 692, "nid_rang": 779, "nightli": 821, "nine": 165, "niter": 850, "nk": [338, 429, 431, 566], "nl": 133, "nlh": [709, 753, 795], "nll_loss": [848, 851, 854], "nlp": [184, 861], "nmap": 844, "nn": [10, 13, 14, 21, 121, 210, 213, 338, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 566, 680, 682, 690, 691, 706, 711, 713, 714, 715, 716, 718, 719, 720, 723, 725, 727, 728, 729, 736, 750, 755, 756, 757, 758, 759, 761, 762, 763, 765, 767, 768, 769, 776, 777, 792, 797, 799, 800, 801, 802, 803, 804, 807, 809, 810, 811, 812, 815, 816, 817, 818, 820, 825, 827, 832, 834, 835, 836, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "nnz": [12, 30, 31, 62, 63, 574, 577, 580, 582, 584, 586, 587, 588, 589, 597, 600, 602, 604, 605, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 619, 623, 625, 626, 627, 820], "nn\u6a21\u5757": [760, 761, 763], "nn\u6a21\u5757\u4e2d": 760, "nn\u6a21\u5757\u53ef\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u8f93\u5165\u4e2d\u91cd\u590d\u4f7f\u7528": 762, "nn\u6a21\u5757\u662f\u7528\u6237\u6784\u5efagnn\u6a21\u578b\u7684\u57fa\u672c\u6a21\u5757": 760, "nn\u6a21\u5757\u7684api\u53c2\u8003": 759, "nn\u6a21\u5757\u7684forward\u51fd\u6570": [747, 760], "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [747, 760], "nn\u6a21\u5757\u7684\u7236\u7c7b\u53d6\u51b3\u4e8e\u540e\u7aef\u6240\u4f7f\u7528\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 760, "nn\u6a21\u5757\u76f8\u6bd4": 762, "nn\u6a21\u5757\u989d\u5916\u589e\u52a0\u4e861\u4e2a\u53c2\u6570": 762, "no_grad": [729, 769, 812, 817, 827, 835, 844, 845, 848, 866, 867], "no_subtree_check": 844, "noam": 861, "noamopt": 861, "node": [0, 5, 6, 7, 9, 13, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 39, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 224, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 262, 263, 264, 265, 286, 287, 288, 289, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 311, 312, 315, 316, 317, 318, 322, 324, 329, 330, 331, 332, 335, 336, 337, 338, 339, 341, 342, 348, 349, 350, 351, 354, 380, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 454, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 572, 630, 631, 632, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 667, 671, 672, 673, 674, 675, 676, 678, 680, 682, 686, 687, 690, 692, 693, 694, 696, 697, 700, 702, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 717, 718, 719, 721, 722, 723, 724, 726, 727, 728, 733, 744, 745, 746, 749, 751, 754, 758, 762, 764, 765, 768, 769, 773, 774, 778, 779, 784, 785, 786, 787, 789, 790, 793, 796, 797, 799, 801, 803, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 820, 823, 824, 826, 829, 834, 835, 836, 838, 839, 841, 846, 847, 848, 849, 850, 851, 852, 854, 860, 861, 864, 866, 868, 869], "node1": 850, "node2": 850, "node2vec": [557, 832], "node_activ": 857, "node_activation_hidden_s": 857, "node_attr": [25, 248, 639], "node_attr_dtyp": 779, "node_attr_schem": [4, 47], "node_attribut": [296, 324, 827], "node_classif": [308, 827, 830, 831], "node_color": [816, 850, 854, 857, 860], "node_data": [308, 686, 694, 779], "node_degre": [714, 818], "node_emb": [380, 384, 694, 779, 844], "node_embed": [728, 768, 811], "node_feat": [239, 315, 389, 394, 399, 400, 402, 408, 410, 416, 680, 682, 693, 694, 738, 779], "node_feat_0": 831, "node_feat_0_path": 831, "node_feat_1": 831, "node_feat_1_path": 831, "node_feat_dim": [706, 750, 792], "node_feat_nam": [653, 664], "node_feat_out": 400, "node_feat_s": 138, "node_featur": [289, 294, 299, 304, 710, 714, 716, 718, 725, 728, 729, 765, 768, 769, 809, 811, 812, 825, 827, 837, 845, 867], "node_feature_kei": [294, 710, 711, 713, 714, 716, 717, 718, 825, 827, 867], "node_g": 857, "node_gener": 541, "node_hidden_s": 857, "node_id": [300, 304, 322, 423, 424, 686, 693, 779, 849], "node_id_field": 686, "node_ids_item": 301, "node_ids_us": 301, "node_in_feat": 389, "node_input": 845, "node_item_feat_0": 830, "node_item_feat_0_path": 830, "node_item_feat_1": 830, "node_item_feat_1_path": 830, "node_label": [25, 168, 186, 694, 729, 769, 812, 837], "node_map": [239, 694, 738, 779], "node_min": [426, 428], "node_pair": [289, 296, 299, 300, 301, 302, 304, 307, 308, 316, 711, 714, 825, 829, 830, 831], "node_pairs_follow": [299, 301], "node_pairs_label": 711, "node_pairs_lik": [299, 301], "node_pairs_with_label": [304, 714, 825], "node_pari": 711, "node_part": 538, "node_permute_algo": [98, 553], "node_repr": 845, "node_s": [816, 850, 854, 860], "node_split": [678, 690, 691, 736, 737, 776, 777, 844, 845], "node_subgraph": [106, 245, 712], "node_timestamp_attr_nam": 296, "node_to_graph": 857, "node_trainer_id": 238, "node_typ": [239, 304, 448, 692, 694, 702, 746, 779, 787, 857], "node_type_emb": 857, "node_type_id": [692, 693, 778], "node_type_offset": [296, 324, 830], "node_type_offset_": 296, "node_type_subgraph": 246, "node_type_to_id": [296, 324, 830], "node_udf": [20, 674, 675, 676, 677], "node_update_func": 857, "node_user_feat_0": 830, "node_user_feat_0_path": 830, "node_user_feat_1": 830, "node_user_feat_1_path": 830, "node_weight_list": 693, "node_year": 694, "nodebatch": [20, 54, 705, 749, 790], "nodedataload": [691, 737, 754, 755, 756, 759, 777, 796, 797, 798, 799, 802, 844], "nodedataview": [4, 639], "nodeembed": 10, "nodelist": 860, "nodepr": 140, "nodeproppr": [687, 733, 773, 844], "nodes_": 861, "nodes_0": 686, "nodes_1": 686, "nodes_d": 861, "nodes_data": 837, "nodes_gener": [92, 541], "nodes_perm": 553, "nodes_timestamp": 825, "nodes_with_feature_on": 54, "nodeshuffl": 13, "nodeview": 72, "nodewis": 437, "nois": [728, 768, 811], "noisi": 162, "non": [6, 9, 21, 27, 30, 114, 116, 162, 182, 184, 197, 200, 205, 210, 214, 216, 219, 240, 241, 296, 309, 312, 324, 339, 342, 354, 394, 403, 445, 471, 553, 557, 559, 560, 561, 562, 574, 575, 578, 579, 590, 591, 592, 594, 595, 596, 597, 598, 603, 605, 610, 611, 613, 617, 619, 623, 625, 627, 658, 664, 680, 686, 694, 700, 716, 726, 728, 785, 798, 802, 815, 824, 835, 837, 848, 850, 854, 862, 864, 867], "none": [4, 6, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 113, 114, 115, 116, 117, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 231, 234, 237, 238, 239, 240, 241, 245, 246, 248, 249, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 307, 308, 309, 310, 312, 314, 316, 317, 318, 321, 322, 324, 331, 332, 336, 337, 343, 344, 345, 346, 347, 350, 351, 382, 385, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 433, 437, 441, 443, 444, 446, 447, 448, 449, 452, 453, 454, 473, 474, 475, 497, 498, 537, 538, 540, 542, 543, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 559, 560, 561, 562, 563, 564, 567, 569, 570, 578, 579, 591, 594, 595, 596, 598, 600, 607, 609, 610, 611, 612, 623, 628, 629, 631, 632, 637, 638, 639, 642, 643, 648, 653, 655, 656, 658, 661, 662, 664, 665, 678, 680, 684, 688, 713, 714, 718, 721, 722, 723, 731, 734, 754, 761, 762, 763, 771, 774, 796, 805, 806, 807, 825, 827, 831, 849, 854, 857, 861, 867], "nonlinear": [729, 816, 850], "nonneg": 183, "nontre": [230, 540], "nonzero": [126, 214, 249, 555, 571, 572, 589, 605, 616, 688, 698, 734, 774, 779, 783, 820, 849, 850], "norm": [338, 396, 397, 403, 412, 413, 414, 417, 418, 419, 421, 429, 430, 431, 450, 451, 544, 566, 711, 716, 721, 722, 755, 757, 759, 761, 762, 797, 800, 802, 805, 806, 817, 820, 849, 850, 861], "norm_": 410, "norm_bi": 354, "norm_by_dst": 849, "norm_edge_weight": 403, "norm_first": [444, 682], "norm_typ": 454, "norm_x": 861, "normal": [4, 128, 129, 142, 150, 154, 176, 244, 340, 354, 390, 392, 394, 396, 397, 400, 401, 402, 403, 409, 410, 412, 416, 417, 418, 419, 421, 422, 444, 445, 454, 472, 475, 559, 569, 570, 654, 664, 665, 682, 684, 694, 715, 721, 722, 726, 727, 806, 810, 815, 818, 820, 825, 827, 830, 831, 832, 836, 837, 849, 850, 851, 860, 861], "normalis": 664, "normalization\uacfc": 771, "normalization\uc73c\ub85c": 805, "normalization\uc744": [805, 806], "normalization\uc774": 801, "normliz": 805, "north": 23, "nose": 21, "notabl": [690, 711], "notat": [816, 857], "note": [4, 6, 9, 10, 14, 21, 22, 26, 27, 28, 34, 39, 43, 46, 48, 52, 66, 68, 70, 73, 74, 78, 93, 94, 95, 96, 100, 101, 102, 103, 108, 110, 113, 114, 115, 116, 117, 118, 119, 126, 130, 131, 134, 135, 136, 149, 150, 151, 152, 153, 154, 155, 159, 168, 173, 176, 184, 185, 186, 187, 192, 193, 210, 214, 215, 216, 220, 226, 234, 245, 246, 248, 249, 286, 292, 296, 299, 304, 307, 314, 316, 317, 318, 331, 332, 335, 336, 337, 341, 348, 349, 354, 382, 384, 392, 394, 396, 397, 398, 416, 417, 429, 431, 432, 433, 434, 435, 437, 438, 439, 440, 441, 443, 444, 452, 453, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 550, 551, 552, 553, 554, 557, 558, 560, 561, 562, 563, 571, 572, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 684, 687, 688, 689, 690, 692, 698, 702, 707, 713, 715, 719, 722, 723, 724, 727, 729, 736, 737, 738, 739, 776, 777, 778, 779, 780, 793, 799, 815, 816, 817, 818, 825, 826, 827, 830, 831, 832, 833, 834, 840, 844, 848, 850, 851, 854, 861], "notebook": [691, 711, 819, 825, 827, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "notebook\u4e2d\u5f00\u53d1\u548c\u8fd0\u884c\u4ee3\u7801": 737, "notebook\u4e2d\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 737, "notebook\uc5d0\uc11c": 777, "noth": [552, 857], "notic": [632, 638, 826, 835, 836], "notimplementederror": 857, "notion": [22, 850], "noun": [149, 185], "now": [183, 233, 348, 637, 691, 693, 711, 715, 716, 729, 801, 818, 830, 831, 840, 844, 851, 857, 867], "np": [4, 125, 126, 205, 248, 249, 314, 315, 386, 387, 388, 389, 390, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 415, 417, 418, 419, 420, 425, 427, 562, 686, 691, 692, 693, 724, 725, 737, 764, 765, 777, 779, 808, 809, 827, 830, 831, 833, 835, 844, 845, 848, 850, 851, 860, 861], "npoint": 6, "nproc": [866, 867], "npy": [239, 308, 314, 315, 694, 738, 779, 830, 831], "nty": [382, 723, 763, 807], "ntype": [4, 26, 28, 35, 37, 54, 58, 75, 76, 79, 81, 82, 83, 85, 86, 96, 115, 118, 129, 157, 158, 191, 198, 210, 214, 216, 221, 238, 239, 296, 324, 345, 347, 382, 414, 424, 425, 426, 474, 549, 551, 555, 570, 629, 637, 638, 639, 643, 686, 688, 692, 693, 694, 702, 707, 710, 714, 715, 727, 728, 734, 746, 751, 758, 767, 768, 774, 778, 779, 787, 793, 801, 810, 811, 849], "ntype2id": 692, "ntype2id_map": 692, "ntype_attr": 639, "ntype_count": 638, "ntype_field": 637, "ntype_id": 779, "ntype_output": 382, "ntypes_list": 239, "null": [120, 815, 816, 817, 818, 820, 829], "nullcontext": [825, 827], "num": [28, 115, 300, 308, 739, 779, 780, 825, 829, 830, 831], "num_atom_typ": 195, "num_bas": [385, 392, 417, 456, 849], "num_base_edges_per_nod": [142, 143], "num_base_nod": [142, 143], "num_bond_typ": 195, "num_child": [426, 428], "num_class": [132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 308, 423, 424, 425, 426, 427, 689, 694, 711, 718, 719, 735, 755, 757, 775, 797, 800, 803, 815, 816, 818, 827, 829, 830, 831, 832, 834, 836, 849, 854, 866, 867], "num_correct": 836, "num_dst": 556, "num_dst_nod": [82, 83, 131, 545, 796], "num_edgnum_edges_per_chunk": [692, 694], "num_embed": [4, 381, 452], "num_epoch": [380, 423, 424, 690, 736, 776, 817, 840], "num_etyp": 414, "num_exampl": 836, "num_featur": [425, 427], "num_gpu": 866, "num_graph": [138, 139, 140, 159, 172, 680, 682], "num_head": [391, 398, 399, 402, 404, 405, 414, 436, 441, 443, 444, 446, 447, 448, 682, 817, 851], "num_hidden": [690, 736, 776, 844, 845], "num_hidden_lay": 849, "num_hop": [4, 239, 423, 424, 425, 426, 427, 428], "num_input_nod": 754, "num_inter_edg": 142, "num_it": 217, "num_kernel": 448, "num_label": [168, 175, 177, 178, 179, 186, 844, 845], "num_lay": [215, 304, 445, 453, 690, 736, 754, 776, 796, 817, 844, 845], "num_mlp_aft": 421, "num_mlp_befor": 421, "num_motif": [142, 143, 189, 190], "num_neighbor": 555, "num_nod": [4, 5, 10, 26, 27, 28, 85, 95, 96, 101, 102, 114, 115, 117, 122, 127, 138, 146, 147, 157, 158, 165, 168, 169, 172, 173, 174, 184, 186, 191, 192, 195, 205, 219, 239, 245, 246, 286, 296, 299, 311, 331, 332, 335, 336, 337, 341, 380, 382, 384, 399, 402, 408, 410, 413, 424, 425, 426, 443, 444, 447, 449, 450, 451, 452, 453, 455, 473, 474, 537, 545, 546, 550, 551, 552, 553, 554, 568, 637, 638, 640, 651, 652, 653, 659, 664, 665, 667, 678, 680, 686, 691, 692, 693, 694, 698, 699, 701, 702, 715, 718, 727, 728, 737, 742, 743, 745, 746, 754, 756, 758, 768, 777, 778, 779, 783, 784, 786, 787, 796, 799, 801, 810, 811, 815, 816, 817, 830, 831, 833, 835, 836, 837, 844, 845, 849, 854, 857], "num_node_typ": 296, "num_node_weight": 779, "num_nodes_dict": [118, 119, 331, 728, 754, 768, 796, 811, 837], "num_nodes_per_chunk": [692, 694], "num_ntyp": 414, "num_of_class": 176, "num_output": 456, "num_output_nod": 754, "num_part": [209, 239, 694, 779, 844, 845], "num_partit": [4, 694], "num_positive_edg": 139, "num_post_lay": 445, "num_prop_round": 857, "num_random_walk": 555, "num_rel": [157, 158, 191, 392, 417, 450, 451, 849], "num_replica": 292, "num_rollout": [426, 428], "num_sampl": [556, 695, 739, 780, 844], "num_se": [557, 559], "num_serv": [695, 739, 780, 844], "num_split": 192, "num_src": 556, "num_src_nod": [79, 86, 131, 545, 796], "num_task": [138, 177, 178, 179, 688, 734, 774, 817], "num_test": [830, 831, 836], "num_test_item": 867, "num_tow": [394, 416], "num_train": [695, 739, 780, 830, 831, 836, 844], "num_train_item": 867, "num_trainers_per_machin": 239, "num_travers": 555, "num_trial": 857, "num_typ": 385, "num_val": [830, 831], "num_val_item": 867, "num_valid": 857, "num_virtual_nod": 443, "num_vocab": 854, "num_work": [209, 210, 213, 214, 215, 216, 217, 219, 220, 290, 712, 739, 754, 755, 757, 759, 780, 796, 797, 798, 800, 802, 825, 840, 841, 854], "num_worker_thread": 234, "numa": 841, "number": [3, 4, 6, 9, 10, 14, 21, 22, 28, 36, 37, 38, 62, 63, 70, 79, 80, 81, 82, 101, 102, 113, 115, 118, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 231, 234, 235, 238, 239, 240, 241, 242, 249, 286, 290, 292, 296, 297, 299, 300, 302, 304, 307, 311, 325, 331, 336, 337, 338, 339, 342, 350, 351, 354, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 538, 545, 546, 547, 550, 553, 555, 556, 560, 561, 562, 563, 566, 567, 571, 572, 590, 608, 610, 611, 614, 615, 630, 638, 640, 645, 655, 656, 657, 658, 661, 662, 665, 666, 669, 670, 671, 673, 674, 675, 676, 677, 678, 682, 684, 686, 688, 691, 692, 693, 694, 695, 699, 701, 702, 706, 707, 710, 712, 715, 719, 726, 729, 771, 774, 786, 787, 791, 798, 816, 818, 820, 826, 827, 829, 830, 832, 833, 835, 836, 837, 840, 841, 844, 848, 849, 851, 857, 860, 861, 866, 867], "number_of_dst_nod": [632, 715, 722, 723, 754, 756, 758, 762, 763, 796, 799, 801, 806, 807], "number_of_edg": 4, "number_of_nod": 4, "number_of_src_nod": [715, 754, 758, 796, 801], "numclass": [815, 816, 818, 832, 834, 835, 848, 850, 851], "numedg": [815, 816, 818, 832, 834, 835, 848, 850, 851], "numer": [4, 10, 22, 244, 394, 410, 472, 686, 699, 833, 837, 857, 861], "numfeat": [815, 816, 818, 832, 834, 835, 848, 850, 851], "numnod": [815, 816, 818, 832, 834, 835, 848, 850, 851], "numpi": [5, 9, 21, 27, 31, 54, 95, 96, 125, 126, 128, 129, 131, 168, 183, 198, 205, 239, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 308, 314, 315, 331, 380, 386, 387, 388, 389, 390, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 415, 417, 418, 419, 420, 425, 427, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 686, 690, 692, 694, 698, 701, 702, 724, 736, 742, 764, 776, 779, 783, 786, 787, 808, 814, 817, 825, 827, 829, 830, 831, 833, 835, 837, 844, 845, 848, 850, 851, 860, 861], "numtestsampl": [815, 816, 818, 832, 834, 835, 848, 850, 851], "numtrainingsampl": [815, 816, 818, 832, 834, 835, 848, 850, 851], "numvalidationsampl": [815, 816, 818, 832, 834, 835, 848, 850, 851], "nutshel": 819, "nvidia": [210, 391, 392, 393, 719, 803], "nx": [125, 248, 455, 698, 742, 783, 816, 850, 851, 854, 857, 860], "nx_agraph": 854, "nx_g": [125, 248, 639, 698, 742, 783, 816, 857], "nx_g1": 850, "nx_graph": [125, 248], "nxg": [698, 742, 783], "nxn": [429, 430], "o": [4, 9, 22, 156, 338, 429, 431, 566, 685, 689, 709, 732, 735, 753, 772, 775, 815, 816, 817, 818, 820, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 840, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "o1": 820, "o2": 820, "o3": 820, "o4": 820, "o5": 820, "o6": 820, "o7": 820, "o8": 820, "o_j": 854, "ob": 456, "obg": 773, "obj": [825, 827], "obj_": 22, "object": [4, 22, 26, 42, 53, 54, 59, 108, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 210, 218, 220, 221, 229, 230, 239, 245, 246, 247, 248, 249, 286, 291, 293, 295, 296, 300, 301, 304, 309, 311, 313, 314, 315, 324, 327, 331, 332, 336, 337, 351, 352, 354, 382, 423, 424, 452, 473, 474, 537, 540, 542, 543, 545, 546, 548, 549, 560, 561, 562, 563, 564, 569, 570, 639, 642, 643, 644, 649, 650, 680, 686, 687, 688, 689, 690, 691, 692, 694, 698, 700, 710, 722, 757, 785, 800, 814, 815, 825, 827, 829, 830, 831, 832, 833, 836, 849, 850], "objectbas": 22, "objectref": 22, "objtyp": [239, 351], "observ": [840, 850, 860], "obtain": [14, 244, 336, 337, 399, 402, 441, 444, 445, 453, 472, 558, 632, 646, 688, 711, 715, 725, 727, 728, 729, 774, 816, 832, 833, 851, 854, 867], "occasion": [173, 837], "occup": 833, "occupi": [178, 179], "occur": [26, 239], "occurr": 134, "odot": [410, 449, 854], "ofev": 164, "off": [426, 428, 682, 814, 815, 816, 817, 841, 850, 851, 860, 861], "offer": [813, 824, 832, 840, 854, 860], "offic": 145, "offici": [21, 167, 184, 687, 848, 849, 850, 851, 854, 857, 860, 861], "offlin": [709, 799], "offset": [296, 322, 324, 403, 558, 562, 571, 572], "often": [21, 120, 686, 688, 826, 833, 837, 840], "ogb": [4, 138, 288, 683, 712, 733, 739, 770, 780, 798, 817, 827, 844, 845], "ogb_exampl": 840, "ogb_example_argo": 840, "ogbg": [138, 687, 733, 773, 817], "ogbl": [288, 687, 733, 773, 845], "ogbn": [288, 687, 716, 718, 733, 773, 779, 827, 844, 867], "ok": [5, 700, 785], "old": [27, 28, 114, 423, 640, 848], "old_step_count": 857, "omega": 816, "omit": [4, 27, 28, 30, 31, 32, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 117, 128, 129, 308, 475, 548, 549, 550, 551, 552, 556, 557, 559, 569, 570, 638, 642, 643, 680, 682, 729, 812, 833], "omp": 234, "omp_num_thread": 867, "onc": [21, 131, 234, 286, 290, 296, 302, 307, 308, 331, 693, 694, 727, 816, 857, 861, 866], "ondisk": 308, "ondisk_dataset": [825, 827, 830, 831], "ondisk_dataset_heterograph": 830, "ondisk_dataset_homograph": 831, "ondiskdataset": [288, 824, 829], "ondiskfeaturedata": 315, "ondiskfeaturedatadomain": [830, 831], "ondisktask": [830, 831], "one": [0, 4, 5, 6, 9, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 44, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 77, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 107, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 144, 147, 150, 154, 157, 158, 160, 161, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 180, 182, 183, 184, 188, 191, 192, 194, 195, 198, 205, 214, 216, 219, 220, 230, 233, 239, 240, 241, 245, 246, 248, 249, 286, 302, 304, 307, 331, 332, 336, 337, 338, 349, 384, 385, 386, 401, 409, 411, 412, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 454, 473, 475, 497, 498, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 518, 519, 522, 523, 524, 525, 537, 548, 549, 550, 551, 552, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 586, 591, 630, 632, 637, 640, 642, 643, 668, 669, 684, 685, 686, 687, 688, 690, 691, 692, 693, 694, 695, 697, 698, 699, 701, 702, 705, 706, 707, 708, 709, 710, 713, 714, 715, 716, 718, 721, 722, 723, 724, 725, 726, 727, 728, 729, 733, 746, 771, 773, 774, 786, 787, 809, 814, 816, 818, 820, 821, 825, 826, 827, 832, 833, 834, 836, 841, 844, 845, 849, 850, 851, 854, 857, 860, 861, 862, 864, 866], "onehot_label": [688, 734, 774], "ones": [0, 1, 4, 9, 27, 28, 34, 35, 43, 44, 45, 46, 51, 56, 64, 70, 71, 74, 77, 79, 82, 93, 94, 100, 103, 104, 105, 108, 113, 114, 115, 116, 122, 125, 231, 238, 248, 309, 348, 354, 382, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 409, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 447, 453, 500, 554, 559, 564, 584, 607, 612, 613, 625, 627, 632, 638, 639, 640, 647, 653, 669, 673, 674, 675, 676, 677, 678, 680, 690, 692, 694, 698, 699, 702, 743, 746, 784, 787, 821, 834, 835, 845, 854, 857, 860, 861], "ones_lik": 845, "onli": [3, 4, 10, 14, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 41, 47, 48, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 125, 128, 129, 130, 132, 133, 134, 138, 139, 140, 144, 146, 147, 150, 154, 157, 158, 159, 160, 167, 169, 170, 176, 178, 191, 192, 194, 210, 213, 214, 216, 219, 220, 233, 234, 235, 239, 240, 241, 245, 246, 248, 286, 287, 289, 293, 295, 296, 297, 302, 304, 307, 308, 314, 332, 335, 336, 337, 338, 339, 382, 391, 392, 393, 394, 397, 398, 399, 401, 402, 403, 404, 405, 411, 413, 419, 429, 431, 433, 443, 445, 449, 453, 473, 474, 537, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 631, 632, 633, 637, 639, 640, 642, 643, 648, 654, 655, 656, 657, 658, 659, 661, 662, 663, 665, 667, 678, 682, 686, 687, 688, 690, 691, 692, 693, 694, 698, 699, 700, 702, 705, 708, 711, 713, 714, 715, 716, 719, 725, 726, 727, 729, 733, 773, 774, 799, 810, 814, 817, 820, 827, 832, 833, 834, 836, 837, 841, 848, 849, 850, 851, 854, 857, 860, 861, 866], "onlin": [160, 380], "onto": [26, 292, 712, 716, 832, 857, 867], "ood": [197, 205], "oom": [719, 803, 821], "op": [1, 13, 344, 345, 346, 347, 391, 392, 393, 449, 548, 549, 619, 628, 629, 712, 719, 754, 796, 803, 820, 825], "open": [21, 291, 687, 694, 733, 773, 779, 825, 827, 830, 831, 845], "openmp": 8, "opennmt": 861, "oper": [0, 5, 6, 9, 11, 21, 22, 70, 116, 128, 129, 130, 210, 214, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 290, 302, 307, 314, 315, 325, 335, 338, 341, 354, 388, 401, 429, 431, 435, 441, 444, 449, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 548, 549, 554, 560, 561, 562, 563, 566, 571, 572, 613, 619, 631, 638, 640, 663, 665, 678, 684, 691, 692, 700, 702, 705, 706, 710, 712, 718, 719, 720, 722, 726, 727, 728, 814, 815, 816, 817, 819, 827, 834, 840, 841, 851, 852, 857, 861, 862, 864], "operand": [9, 118, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "oplu": 416, "oplus_": [385, 416, 417], "opoverloadpacket": 825, "opportun": [824, 832], "opposit": 834, "opt": [710, 711, 716, 725, 727, 728, 729, 754, 755, 757, 759, 765, 767, 768, 769, 796, 797, 800, 802, 809, 810, 811, 812, 825, 827, 830, 831, 848, 851], "optim": [13, 14, 214, 222, 223, 224, 225, 299, 312, 313, 380, 384, 392, 393, 423, 424, 425, 426, 427, 428, 452, 560, 690, 691, 694, 705, 706, 711, 714, 716, 717, 718, 719, 722, 725, 727, 728, 729, 736, 737, 754, 755, 757, 759, 765, 767, 768, 769, 776, 777, 796, 797, 800, 802, 803, 809, 810, 811, 812, 813, 815, 816, 817, 818, 821, 824, 825, 827, 832, 834, 835, 836, 840, 841, 844, 845, 848, 849, 850, 851, 854, 860, 861, 866, 867], "optimis": [825, 827], "optimizer_exp": [425, 427], "optimizer_state_dict": 840, "optimizer\ub4e4\uc744": 777, "optimizer\ub97c": 803, "optimizer\uc5d0": 777, "option": [4, 6, 10, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 116, 117, 118, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 213, 214, 216, 217, 219, 220, 221, 226, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 248, 249, 286, 287, 288, 290, 292, 293, 295, 296, 297, 299, 300, 302, 307, 308, 314, 317, 318, 322, 324, 331, 332, 335, 336, 337, 338, 339, 341, 343, 352, 353, 354, 380, 382, 383, 384, 385, 386, 387, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 472, 473, 474, 475, 496, 500, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 556, 557, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 591, 594, 595, 596, 598, 600, 607, 609, 610, 611, 612, 623, 630, 631, 632, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 648, 651, 652, 653, 654, 655, 656, 658, 659, 661, 662, 664, 665, 666, 668, 678, 683, 686, 694, 695, 698, 721, 722, 725, 726, 770, 779, 814, 829, 830, 831, 844, 845], "optiona": 414, "oracl": 857, "orbit": [178, 179], "order": [0, 4, 9, 20, 51, 56, 91, 92, 95, 96, 123, 125, 130, 131, 141, 142, 143, 189, 190, 197, 205, 229, 230, 240, 248, 286, 296, 307, 331, 338, 349, 382, 384, 413, 430, 435, 438, 449, 453, 455, 473, 543, 544, 553, 560, 561, 562, 563, 566, 574, 578, 579, 632, 637, 650, 661, 691, 693, 694, 701, 702, 711, 716, 717, 727, 787, 820, 825, 830, 831, 833, 849, 850, 854, 857, 866], "ordereddict": 184, "ordinari": 723, "org": [9, 133, 134, 137, 146, 147, 161, 162, 163, 169, 171, 173, 174, 177, 178, 180, 182, 188, 195, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 427, 428, 443, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 555, 718, 766, 814, 820, 821, 840, 844, 861], "organ": [21, 230, 239, 693, 694, 723, 813, 828], "organiz": 132, "orient": [567, 860], "orig": 694, "orig_dst_id": [693, 779], "orig_eid": 694, "orig_eids_0": 694, "orig_id": [350, 538, 693, 694, 738, 779], "orig_nid": 694, "orig_nids_0": 694, "orig_node_emb": [694, 779, 844], "orig_src_id": [693, 779], "orig_type_edge_id": 779, "orig_type_node_id": 779, "origianl": 694, "origin": [3, 21, 26, 56, 64, 70, 71, 100, 108, 116, 122, 125, 130, 135, 136, 142, 143, 146, 151, 152, 153, 169, 183, 186, 189, 190, 192, 208, 209, 220, 221, 233, 239, 240, 241, 245, 248, 288, 292, 304, 308, 309, 317, 318, 321, 325, 332, 335, 336, 337, 341, 349, 350, 388, 401, 412, 423, 424, 426, 428, 441, 473, 537, 538, 553, 554, 558, 559, 560, 561, 562, 563, 569, 570, 577, 580, 582, 584, 587, 588, 589, 600, 631, 632, 634, 635, 636, 637, 639, 640, 646, 647, 657, 667, 668, 675, 676, 677, 685, 693, 694, 700, 702, 705, 715, 722, 725, 726, 727, 772, 785, 787, 796, 797, 816, 818, 820, 833, 835, 836, 837, 840, 844, 849, 850, 852, 861, 864], "original_column_node_id": [298, 302, 307, 309, 310], "original_edge_id": [302, 307, 309, 310, 827], "original_row_node_id": [298, 302, 307, 309, 310, 318], "origini": 558, "ot": 288, "otc": 145, "other": [0, 1, 9, 21, 68, 120, 121, 180, 182, 186, 207, 210, 235, 239, 242, 244, 289, 292, 299, 304, 308, 325, 352, 354, 380, 392, 421, 425, 427, 472, 555, 637, 655, 656, 661, 680, 682, 688, 689, 690, 691, 693, 694, 695, 697, 698, 701, 702, 706, 710, 711, 712, 724, 728, 729, 775, 814, 816, 818, 820, 821, 825, 826, 827, 829, 832, 833, 834, 835, 844, 848, 850, 851, 854, 857, 861, 866], "other_typ": 555, "otherwis": [4, 6, 31, 36, 37, 44, 51, 54, 56, 62, 63, 64, 71, 104, 108, 118, 165, 183, 184, 207, 210, 214, 216, 229, 230, 231, 238, 240, 241, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 292, 296, 302, 304, 307, 309, 314, 326, 332, 336, 337, 339, 349, 412, 426, 428, 442, 444, 448, 473, 537, 538, 548, 549, 557, 559, 560, 561, 562, 567, 591, 594, 595, 596, 598, 600, 607, 609, 610, 611, 612, 623, 632, 638, 646, 658, 678, 679, 685, 691, 711, 732, 772, 816, 818, 850, 866, 867], "ouptut": 861, "our": [3, 9, 21, 433, 555, 712, 713, 719, 728, 729, 813, 818, 821, 827, 844, 848, 849, 850, 851], "ourselv": 857, "out": [1, 4, 13, 14, 22, 62, 63, 70, 87, 130, 132, 133, 135, 136, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 197, 205, 214, 216, 217, 240, 241, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 299, 337, 386, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 437, 440, 441, 442, 443, 444, 446, 447, 448, 537, 560, 561, 562, 563, 572, 605, 616, 684, 693, 694, 706, 719, 723, 750, 771, 792, 803, 813, 814, 815, 816, 817, 820, 821, 833, 848, 849, 850, 851, 860], "out1": 9, "out2": 9, "out3": 9, "out4": 9, "out_1": 9, "out_2": 9, "out_3": 9, "out_class": [725, 765, 809], "out_degre": [4, 60, 442, 680, 682, 833], "out_dim": [706, 750, 792, 849, 851], "out_dir": 694, "out_dst": [706, 750, 792], "out_edg": 61, "out_edge_feat": 399, "out_feat": [383, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 402, 404, 405, 406, 408, 409, 411, 412, 415, 417, 418, 419, 420, 423, 425, 427, 449, 665, 711, 715, 716, 718, 721, 727, 729, 755, 757, 758, 759, 761, 767, 769, 797, 800, 801, 802, 805, 810, 812, 834, 848, 849, 850], "out_feat_1": 665, "out_feat_2": 665, "out_feat_nam": 665, "out_feats\u662f\u8f93\u51fa\u7279\u5f81\u7684\u7ef4\u5ea6": 769, "out_featur": [711, 716, 725, 728, 754, 755, 756, 757, 759, 765, 768, 796, 797, 799, 800, 802, 809, 811, 848, 854], "out_field": 861, "out_indx": 860, "out_nod": 860, "out_node_feat": 399, "out_path": [4, 239, 844, 845], "out_proj": 817, "out_siz": [383, 385, 394, 400, 416, 713, 718, 719, 815, 816, 817, 818, 820, 867], "out_src": [706, 750, 792], "out_subgraph": [332, 337, 712], "out_test_mask": [197, 205], "out_valid_mask": [197, 205], "outbound": [240, 241, 537, 557, 559, 560, 561, 562, 563, 632], "outcom": 537, "outdat": [685, 732, 772], "outer": [713, 799], "outermost": [304, 307], "outfil": 779, "outgo": [88, 354, 849], "outmultiedgedataview": [72, 639, 702, 746, 787], "output": [4, 5, 9, 21, 53, 54, 73, 133, 144, 174, 208, 209, 210, 214, 216, 217, 239, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 304, 322, 332, 336, 337, 338, 352, 382, 383, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 449, 453, 455, 456, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 560, 561, 562, 563, 566, 597, 613, 617, 682, 692, 694, 705, 706, 709, 711, 713, 715, 716, 721, 723, 727, 763, 779, 799, 801, 807, 820, 825, 826, 827, 834, 844, 848, 849, 850, 851, 860, 861], "output_col": [825, 827], "output_d": 421, "output_devic": [49, 50, 76, 106, 208, 209, 214, 216, 217, 219, 245, 246, 332, 336, 337, 473, 474, 537, 560, 561, 562, 563, 866], "output_feat": 410, "output_featur": 849, "output_label": [710, 716, 754, 759, 796, 802], "output_nod": [210, 214, 215, 216, 219, 754, 756, 759, 799, 802, 845], "output_predict": [710, 716, 754, 759, 796, 802], "output_s": 322, "outsid": [684, 691, 694, 705, 790, 820], "over": [3, 7, 79, 82, 164, 166, 177, 178, 179, 209, 210, 211, 212, 213, 244, 290, 292, 299, 300, 301, 354, 394, 416, 432, 434, 439, 472, 548, 549, 569, 570, 571, 572, 642, 643, 668, 686, 711, 712, 713, 714, 716, 717, 727, 796, 799, 814, 816, 825, 827, 834, 836, 840, 841, 844, 848, 851, 854, 857, 860, 861], "overal": [429, 694, 727, 835, 840, 851, 857, 861, 867], "overfit": 849, "overhead": [22, 70, 338, 392, 429, 431, 566, 717, 840, 841], "overlap": [290, 717], "overlap_feature_fetch": 290, "overlap_graph_fetch": 290, "overrid": [210, 213, 218, 714], "overridden": [307, 312, 423, 424, 425, 426, 427, 428], "overview": [698, 850, 867], "overwit": 156, "overwrit": [200, 201], "overwritten": 814, "own": [21, 156, 338, 412, 429, 431, 564, 566, 682, 691, 692, 693, 694, 706, 710, 711, 712, 714, 716, 729, 820, 821, 823, 824, 827, 832, 835, 838, 839, 841, 844, 845, 849, 851, 857, 861], "owner": 694, "ownership": 694, "p": [120, 147, 161, 174, 214, 216, 219, 386, 421, 422, 430, 431, 450, 451, 544, 557, 559, 562, 651, 652, 653, 693, 694, 754, 779, 796, 844, 854, 857, 861], "p1d": 680, "p3": 14, "p3d": 680, "p_": [386, 388], "p_n": [728, 768, 811], "p_p": 174, "pack": 558, "packag": [0, 2, 3, 6, 11, 21, 148, 391, 392, 393, 452, 683, 702, 719, 803, 813, 814, 815, 816, 817, 818, 820, 821, 834, 840, 841, 844, 848, 851, 854], "package\ub97c": 803, "packed_func": 22, "packed_func_ext": 22, "packedfunc": 22, "pad": [339, 442, 443, 445, 446, 447, 557, 558, 559, 567, 630, 642, 643, 658, 666, 680, 817, 855, 861, 864, 867], "pad_id": 861, "pad_num_nod": 680, "pad_sequ": [442, 680], "pad_word": [184, 854], "padding_idx": 861, "page": [10, 21, 67, 89, 112, 134, 149, 155, 185, 187, 193, 710, 814, 815, 816, 817, 818, 825, 827], "pagerank": [387, 661, 665, 816], "pai": 719, "pair": [6, 32, 48, 66, 178, 183, 220, 226, 227, 239, 240, 241, 292, 296, 299, 300, 301, 302, 304, 307, 309, 316, 317, 318, 330, 338, 341, 380, 382, 384, 386, 389, 397, 398, 399, 401, 402, 404, 405, 407, 408, 409, 412, 415, 418, 429, 431, 446, 447, 448, 449, 545, 546, 556, 566, 567, 659, 680, 682, 692, 694, 697, 698, 701, 711, 714, 715, 727, 728, 783, 801, 817, 825, 830, 831, 835, 837, 845, 849, 850, 851, 861], "pair_graph": 220, "pairwis": [429, 430], "panda": [148, 168, 686, 698, 702, 783, 825, 827, 830, 831, 837], "pandas\uc640": 787, "papaer": 861, "paper": [137, 151, 152, 153, 154, 162, 165, 167, 171, 180, 182, 188, 214, 288, 296, 302, 308, 315, 338, 388, 396, 412, 421, 422, 429, 431, 441, 471, 547, 557, 560, 566, 646, 662, 692, 694, 697, 716, 721, 778, 779, 813, 816, 818, 821, 832, 835, 836, 848, 849, 850, 851, 852, 854, 855, 857, 858, 860, 861, 862], "paper___cites___pap": 694, "papers100m": 288, "paradigm": [3, 690, 834, 854], "paral": 854, "parallel": [4, 48, 66, 122, 210, 213, 240, 241, 292, 382, 440, 631, 640, 668, 690, 692, 694, 709, 736, 776, 817, 840, 841, 844, 845, 851, 854, 855, 857, 858, 864, 866, 867], "param": [4, 6, 10, 32, 386, 387, 388, 389, 394, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 416, 418, 419, 420, 421, 422, 449, 450, 453], "paramet": [4, 6, 10, 14, 20, 26, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 591, 594, 595, 596, 597, 598, 600, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 630, 631, 632, 633, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 661, 662, 664, 665, 666, 668, 678, 679, 684, 688, 690, 691, 705, 706, 707, 711, 714, 716, 718, 719, 720, 721, 722, 723, 725, 727, 728, 729, 731, 734, 736, 737, 750, 754, 755, 757, 759, 765, 767, 768, 769, 771, 774, 776, 777, 792, 796, 797, 800, 802, 803, 805, 809, 810, 811, 812, 814, 815, 816, 817, 818, 820, 825, 827, 832, 834, 835, 836, 840, 844, 845, 848, 849, 850, 851, 854, 857, 861, 866, 867], "parameter": [141, 425, 427, 725, 809, 849, 850, 857], "parametr": [857, 862, 864], "parent": [210, 213, 233, 245, 473, 860], "pari": 830, "parit": [350, 351], "paritt": 452, "parmeti": [692, 694], "parmetis\uac00": 779, "parmetis\ub290": 779, "parmetis\ub294": 779, "parmetis\uc5d0": 779, "parmetis\uc758": 779, "parquet": 694, "pars": [148, 686, 694, 698, 702, 837, 854, 855, 864], "parser": 148, "part": [4, 21, 22, 135, 151, 152, 197, 205, 239, 289, 436, 437, 446, 560, 682, 688, 691, 694, 698, 704, 707, 711, 722, 779, 817, 830, 831, 834, 861], "part0": [239, 693, 694, 738, 779], "part1": [239, 693, 694, 738, 779], "part1_end": 239, "part1_start": 239, "part2": 694, "part2_end": 239, "part2_start": 239, "part_config": [4, 235, 236, 237, 690, 691, 692, 695, 736, 737, 739, 776, 777, 778, 780, 844], "part_data": [693, 694], "part_graph": 239, "part_id": [4, 235, 236, 237, 350, 693, 694, 779], "part_method": [4, 239], "part_polici": [4, 692, 778], "part_ratio": [197, 205], "partial": [4, 711, 825, 849, 851, 857, 861], "particip": [210, 213], "particular": [4, 21, 90, 107, 149, 185, 197, 221, 239, 246, 413, 424, 568, 605, 616, 692, 702, 713, 820, 835, 836], "particularli": [244, 300, 472, 698, 702, 818], "partid": 4, "partid2eid": 4, "partid2nid": 4, "partit": [13, 209, 231, 235, 236, 237, 238, 239, 350, 351, 413, 452, 538, 553, 678, 684, 690, 691, 695, 779, 850, 866], "partiti": 861, "partitioend": [350, 538], "partition_algo": 694, "partition_book": [4, 231, 238, 693, 694], "partition_graph": [4, 691, 693, 694, 738, 777, 779, 844, 845], "partitionpolici": [4, 692, 778], "partmetis\ub97c": 779, "partx": [693, 694], "pascal": [9, 705, 790], "pass": [0, 1, 4, 5, 13, 22, 73, 91, 92, 121, 122, 130, 131, 178, 179, 208, 209, 210, 213, 214, 215, 220, 239, 245, 296, 312, 332, 336, 337, 350, 351, 386, 387, 388, 389, 392, 398, 399, 401, 402, 404, 405, 406, 409, 412, 413, 415, 416, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 449, 455, 473, 537, 560, 564, 632, 669, 670, 671, 672, 673, 674, 675, 676, 677, 684, 686, 688, 691, 693, 694, 700, 703, 710, 713, 715, 716, 720, 723, 724, 727, 729, 731, 734, 747, 771, 774, 788, 793, 803, 808, 812, 813, 827, 829, 830, 831, 835, 841, 844, 845, 851, 852, 855, 857, 862, 864], "passwordless": [695, 780, 844], "pass\ub97c": 803, "path": [4, 21, 156, 184, 199, 200, 201, 202, 203, 206, 209, 234, 235, 236, 237, 239, 308, 315, 335, 343, 349, 384, 446, 447, 558, 559, 564, 567, 646, 680, 685, 686, 689, 693, 694, 695, 732, 735, 772, 775, 779, 825, 827, 829, 830, 831, 840, 844, 857], "path_data": [446, 680, 682], "path_encod": [446, 682], "path_graph": [698, 742, 783], "path_len": 680, "pathencod": 682, "pathlik": 4, "patit": 692, "pattern": [22, 120, 174, 833, 851], "pb": [690, 736, 776], "pc": 384, "pcgnn_www2021": 162, "pci": 290, "pcie": 717, "pd": [183, 686, 830, 831, 837, 850], "pdf": [147, 161, 162, 174, 195, 427, 443, 718, 766, 861], "pe": [394, 658, 662, 817], "peek": 825, "peocess": 307, "peopl": [145, 697, 727], "pep8": 21, "per": [4, 101, 102, 138, 166, 175, 186, 214, 215, 216, 219, 220, 226, 227, 239, 240, 245, 296, 302, 311, 318, 329, 330, 332, 336, 337, 338, 392, 429, 431, 473, 475, 537, 560, 566, 648, 675, 676, 677, 687, 692, 694, 702, 707, 778, 793, 816, 825, 841, 851, 866], "percent": [850, 851], "percentag": [145, 857], "perfetch": 717, "perform": [0, 1, 4, 5, 9, 21, 22, 91, 92, 118, 119, 122, 130, 141, 142, 143, 162, 168, 188, 189, 190, 207, 210, 217, 219, 221, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 298, 299, 302, 307, 308, 316, 350, 351, 354, 382, 386, 388, 389, 392, 398, 401, 402, 404, 405, 406, 409, 412, 419, 423, 424, 425, 426, 427, 428, 440, 441, 442, 444, 446, 447, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 548, 556, 560, 561, 562, 563, 569, 570, 600, 642, 643, 665, 691, 692, 694, 696, 698, 700, 706, 709, 712, 713, 717, 719, 721, 722, 723, 725, 727, 728, 729, 816, 817, 820, 826, 827, 834, 835, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 858, 864, 866, 867], "perftools4": 841, "perhap": 851, "perman": 21, "permiss": 21, "permut": [197, 205, 436, 437, 553, 835, 850], "permute_config": [98, 553], "persist": [4, 691], "persistent_work": 290, "person": [387, 646, 661, 665, 816, 849], "personen": 132, "persourceuniform": 228, "perspect": [860, 861], "perturb": [142, 143, 189, 190], "perturb_ratio": [142, 143, 189, 190], "pgexplain": 425, "phase": [722, 854, 861], "phi": [401, 414, 497, 704, 728, 748, 754, 768, 789, 796, 811], "phi_e": 400, "phi_h": 400, "phi_x": 400, "photo": [25, 135, 136], "php": 844, "physic": [25, 151, 152, 694], "pi": [388, 448, 850], "pick": [6, 14, 214, 216, 219, 429, 430, 557, 559, 560, 562, 714, 835, 851], "pickl": [825, 827, 830, 831, 845], "pictur": 861, "piec": 834, "pin": [10, 67, 89, 112, 210, 296, 314, 315, 325, 559, 712, 867], "pin_memori": [314, 713, 757, 800, 825, 827], "pin_memory_": [296, 314, 315, 712, 867], "pin_prefetch": 210, "pinsag": 555, "pip": [687, 733, 773, 815, 816, 817, 818, 820, 825, 827, 830, 831, 840], "pipe": [717, 827], "pipelin": [3, 7, 290, 684, 692, 703, 709, 712, 714, 724, 727, 729, 824, 826, 827, 845], "pixel": [146, 169], "pkl": [209, 689, 735, 775, 845], "place": [1, 21, 70, 116, 130, 210, 290, 296, 297, 314, 315, 335, 341, 554, 560, 561, 562, 563, 631, 640, 700, 840, 866, 867], "placehold": 221, "plai": [4, 27, 28, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 114, 115, 116, 117, 122, 130, 214, 216, 219, 245, 246, 331, 332, 336, 337, 382, 423, 424, 425, 426, 427, 428, 473, 474, 537, 550, 551, 552, 554, 639, 640, 647, 648, 653, 663, 664, 668, 678, 702, 746, 754, 787, 796, 816, 819], "plain": 828, "plan": 724, "platform": [145, 188], "player": [46, 74, 103, 653, 664], "pleas": [4, 9, 21, 22, 27, 28, 114, 115, 116, 117, 130, 148, 210, 214, 215, 216, 245, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 292, 332, 335, 341, 349, 407, 418, 473, 474, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 551, 553, 554, 555, 562, 631, 632, 640, 641, 680, 682, 688, 693, 710, 711, 714, 716, 717, 718, 719, 727, 729, 818, 825, 827, 830, 831, 834, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 867], "plenti": 833, "plot": [851, 854], "plot_tre": 854, "plt": [816, 850, 854, 857, 860], "plu": [131, 159, 286, 331, 706, 818, 821], "pm": [183, 850, 851], "pm_dglpart": [693, 779], "pm_pd": [183, 850], "pm_pd_batch": 183, "pm_pd_y": 850, "pma": 436, "pmpd": 850, "pmpd1": 850, "pn": 768, "pna": 416, "pnaconv": 394, "png": [832, 833, 834, 835, 836, 837, 840], "po": [6, 179, 816, 850, 854, 860, 861], "point": [9, 14, 178, 179, 296, 302, 307, 338, 401, 429, 430, 431, 544, 566, 634, 635, 636, 705, 796, 818, 850, 861], "point_idx": 6, "pointer": [22, 131, 286, 296, 324, 331, 610, 611, 698], "poisson": 302, "polariz": [178, 179], "polici": [4, 692], "policy_str": 4, "polit": 166, "politifact": 159, "ponder": 861, "ponderli": 162, "pool": [6, 13, 388, 418, 423, 428, 432, 433, 434, 435, 436, 438, 439, 445, 453, 720, 721, 722, 760, 761, 762, 804, 805, 806, 854, 860, 861, 862, 864, 866], "pooler": 817, "poorli": 841, "pop": [425, 427, 428, 848, 849, 851, 854, 866], "popul": [21, 208, 322, 425, 427], "popular": [167, 197, 691, 702, 729, 814, 821, 832], "port": [695, 844, 845], "port1": [844, 845], "port2": [844, 845], "portion": [4, 10, 691, 826, 832], "pos_dst": 845, "pos_enc": [817, 861], "pos_enc_s": 817, "pos_encod": 445, "pos_featur": 845, "pos_graph": 845, "pos_linear": 817, "pos_pair_graph": 220, "pos_scor": [728, 757, 768, 800, 811, 835, 845], "pos_src": 845, "pos_u": 384, "pos_v": 384, "pose": 860, "posit": [6, 13, 120, 145, 150, 157, 158, 161, 163, 184, 191, 214, 220, 240, 241, 296, 302, 304, 306, 307, 316, 339, 380, 382, 384, 400, 403, 441, 443, 444, 445, 547, 557, 559, 560, 630, 658, 662, 666, 680, 686, 714, 800, 817, 820, 825, 845, 851, 854, 861], "positionwis": [436, 437], "positive_edge_dst": [139, 845], "positive_edge_src": [139, 845], "positive_graph": [757, 800], "positive_node_pair": [304, 711], "possibl": [21, 137, 220, 226, 292, 299, 308, 388, 545, 546, 556, 698, 705, 706, 712, 825, 827, 830, 831, 835, 836, 844, 849, 850, 857, 861], "possible_dest": 857, "possible_dests_emb": 857, "possibli": [298, 312, 727, 825, 827], "possibly_batched_index": [825, 827], "post": [21, 24, 163, 181, 861], "post0": [825, 827, 830, 831], "post_func": 861, "post_pair": 861, "postiv": 800, "potenti": [308, 711, 836, 840, 849], "power": [10, 22, 165, 407, 425, 427, 430, 445, 544, 655, 694, 714, 754, 796, 816, 820, 832, 836, 855, 864], "ppa": [687, 733, 773], "ppi": [25, 821], "ppidata": [688, 734, 774], "ppidataset": 25, "ppr": [13, 665], "pq": 183, "pr": 21, "practic": [300, 386, 396, 398, 401, 402, 404, 405, 406, 409, 412, 419, 471, 684, 708, 727, 817, 823, 825, 835, 837, 842, 843, 850, 851, 866], "practice\ub4e4\uc744": 771, "practis": [386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 706, 841], "pramet": 421, "pre": [4, 23, 125, 173, 248, 302, 307, 385, 408, 412, 414, 417, 421, 422, 816, 817, 825, 827, 830, 831, 857, 861], "pre_func": 861, "pre_kv": 861, "pre_pair": 861, "pre_q": 861, "precis": [9, 634, 635, 636, 703, 705, 788, 790, 835, 851], "precomput": 394, "precond": [421, 422], "pred": [4, 427, 711, 725, 728, 755, 757, 765, 768, 797, 800, 809, 811, 815, 816, 832, 834, 835, 836, 850, 854, 866], "predction": 198, "predecessor": [93, 107, 336, 338, 342, 429, 431, 471, 566, 796], "predefin": [150, 154, 176, 729], "predic": [53, 54, 850, 861], "predict": [13, 132, 133, 137, 138, 139, 140, 144, 150, 154, 157, 158, 162, 170, 171, 173, 176, 177, 178, 179, 180, 188, 191, 197, 211, 214, 216, 220, 242, 244, 302, 304, 307, 387, 388, 423, 424, 425, 427, 428, 435, 440, 449, 472, 687, 691, 709, 710, 711, 716, 724, 727, 729, 733, 757, 773, 774, 800, 815, 816, 817, 823, 824, 827, 832, 834, 836, 838, 839, 844, 846, 847, 850, 851, 854, 857, 860], "predict_categori": [132, 133, 144, 170, 849], "prediction\u6570\u636e\u96c6": 733, "prediction\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 733, "predictor": [440, 449, 711, 714, 725, 755, 757, 797, 800, 817, 825, 845], "prefer": [168, 186, 701, 834], "prefetch": [13, 208, 209, 214, 216, 217, 220, 221, 222, 223, 224, 225, 717], "prefetch_edata": [209, 217], "prefetch_edge_feat": [208, 214, 216, 219], "prefetch_label": [208, 214, 216, 220], "prefetch_ndata": [209, 217], "prefetch_node_feat": [208, 214, 216, 219], "prefix": [632, 693, 779], "preform": [296, 302, 307, 718], "prepar": [292, 681, 682, 694, 724, 727, 825, 827, 837, 844, 861], "prepare_for_train": 857, "prepare_train": 857, "prepend": 68, "preprocess": [132, 133, 144, 170, 179, 184, 690, 693, 815, 816, 818, 824, 825, 827, 830, 831, 835, 867], "prerequisit": 693, "presenc": [149, 185], "present": [296, 309, 424, 426, 817, 849, 851, 860], "preserv": [95, 96, 127, 231, 233, 238, 240, 241, 550, 552, 560, 561, 562, 563, 655, 656, 661, 820, 848, 854], "presort": [414, 417], "pretrain": [159, 184, 814], "pretrained_emb": [184, 854], "prev_proj": 850, "prevent": [122, 145, 413, 441, 444, 648, 710, 719, 814, 849], "previou": [186, 289, 386, 714, 717, 725, 727, 728, 811, 826, 835, 837, 850, 861, 867], "previous": [716, 718, 725], "price": 22, "primari": [291, 682], "prime": [399, 402], "primit": [3, 392, 393, 857], "princip": [416, 788], "principl": [698, 715], "print": [4, 6, 20, 21, 22, 42, 53, 54, 70, 108, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 219, 245, 292, 296, 298, 309, 310, 316, 317, 319, 320, 324, 330, 335, 381, 382, 383, 385, 387, 403, 406, 408, 412, 429, 431, 442, 446, 447, 448, 474, 475, 553, 567, 568, 637, 645, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 668, 684, 686, 687, 691, 693, 694, 701, 716, 719, 725, 728, 729, 733, 737, 745, 754, 759, 765, 768, 769, 771, 773, 777, 786, 796, 802, 803, 809, 811, 812, 815, 816, 817, 818, 820, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 844, 848, 849, 850, 851, 854, 857, 861, 866, 867], "print_everi": [132, 133, 144, 170], "printcalcul": 22, "prior": [855, 864], "prioriti": [239, 564, 814], "prob": [214, 216, 219, 240, 241, 425, 427, 557, 559, 560, 561, 857, 861], "prob_nam": [302, 307, 827], "probabl": [147, 174, 214, 216, 217, 219, 240, 241, 296, 302, 307, 387, 425, 427, 441, 443, 444, 547, 555, 557, 559, 560, 561, 562, 651, 652, 653, 661, 665, 714, 729, 796, 800, 825, 835, 850, 851, 857, 858, 860, 861, 864], "problem": [292, 719, 832, 835, 849, 850, 855, 861, 864, 867], "probs_nam": [296, 827], "proc_id": 292, "proce": [702, 727, 848, 850, 861], "procedur": [6, 425, 427, 688, 861], "process": [0, 2, 4, 6, 8, 22, 41, 134, 137, 138, 139, 140, 142, 143, 149, 155, 156, 171, 173, 180, 182, 185, 187, 188, 189, 190, 193, 210, 213, 231, 234, 238, 289, 290, 292, 299, 302, 304, 307, 352, 353, 384, 387, 406, 419, 420, 423, 424, 425, 427, 440, 452, 454, 574, 682, 683, 684, 686, 687, 689, 690, 691, 692, 693, 694, 695, 709, 712, 717, 727, 731, 734, 771, 774, 775, 816, 817, 824, 836, 837, 841, 844, 845, 849, 850, 851, 854, 857, 861], "prod_": 9, "produc": [230, 591, 594, 595, 596, 598, 694, 722, 835, 848, 851], "product": [4, 118, 135, 136, 137, 161, 163, 288, 384, 398, 412, 449, 591, 616, 697, 712, 718, 725, 728, 739, 780, 798, 811, 817, 818, 835, 844, 845, 851, 860, 861], "product\ub85c": 800, "product\ub97c": [809, 811], "profil": [159, 188, 825, 827], "prog": 854, "program": [9, 21, 22, 292, 690, 696, 816, 837, 867], "progress": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 426, 428, 684, 771, 858, 864], "progressbar": [825, 827], "prohibit": 159, "proj": 861, "project": [22, 155, 187, 188, 193, 388, 441, 451, 711, 834, 848, 849, 850, 857], "project_initial_featur": 406, "prompt": 814, "prop": [422, 857], "prop_edg": 92, "prop_edges_yyi": 0, "prop_nod": [91, 854], "prop_nodes_topo": 854, "prop_nodes_xxx": 0, "prop_step": [421, 422], "propag": [13, 91, 92, 159, 387, 421, 422, 454, 540, 542, 543, 713, 729, 812, 816, 826, 850, 854], "propagagtion\uc744": 799, "propagate_attent": 861, "propagation\uc744": 812, "propagation\uc758": 799, "proper": [210, 841], "properli": [138, 139, 140], "properti": [4, 38, 39, 42, 43, 44, 45, 46, 51, 52, 59, 65, 66, 68, 74, 77, 78, 103, 104, 105, 120, 138, 160, 162, 177, 178, 179, 195, 197, 205, 291, 296, 300, 301, 303, 304, 308, 309, 311, 313, 435, 440, 573, 574, 575, 581, 583, 590, 592, 593, 603, 670, 671, 673, 675, 676, 687, 688, 699, 727, 733, 734, 773, 774, 817, 833, 836, 837, 849, 857, 860], "property_nam": 197, "property_valu": 205, "proport": [214, 216, 217, 219, 306, 316, 693, 714], "propos": [162, 197, 205, 244, 385, 472, 630, 666, 832, 834, 849, 851, 854, 861], "protect": [691, 837], "protein": [25, 52, 165, 175, 388, 687, 733, 773, 836], "proteom": 857, "protest": 164, "prototyp": [22, 701], "proven": 817, "provid": [0, 3, 4, 5, 7, 8, 9, 21, 34, 35, 73, 80, 89, 93, 113, 131, 138, 139, 140, 165, 168, 178, 179, 205, 208, 209, 213, 214, 216, 219, 220, 286, 291, 292, 296, 302, 307, 309, 312, 331, 338, 343, 382, 407, 412, 418, 425, 427, 429, 431, 452, 553, 564, 566, 571, 572, 600, 637, 665, 678, 683, 684, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 701, 702, 708, 709, 711, 714, 715, 716, 719, 724, 725, 726, 727, 729, 820, 824, 825, 827, 828, 832, 833, 834, 835, 836, 837, 840, 841, 844, 848, 849, 851, 854, 860, 861, 866, 867], "provis": [690, 695], "proxi": 133, "prune": [426, 428], "pseudo": [207, 382, 409], "pseudocod": 860, "psi": [448, 498, 704, 748, 789], "psi_": 498, "psutil": [825, 827, 830, 831], "pt": [315, 694, 830, 831, 840], "ptc": 165, "pth": 857, "pub": 162, "public": [22, 150, 176, 850], "publish": 821, "pubm": [25, 176, 688, 734, 774, 821], "pull": [0, 21, 92, 850, 854], "purchas": [135, 136, 137, 288, 755, 797, 818], "pure": [178, 179, 705, 721], "purl": 133, "purpos": [4, 239, 292, 299, 304, 562, 684, 686, 688, 702, 713, 725, 851], "push": [4, 21, 821], "put": [22, 239, 350, 351, 422, 443, 553, 682, 712, 716, 717, 830, 831, 832, 860, 866], "py": [21, 22, 199, 200, 694, 695, 727, 739, 767, 779, 780, 810, 814, 817, 823, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 839, 840, 841, 843, 844, 845, 847, 848, 849, 850, 851, 853, 854, 856, 857, 859, 860, 861, 863, 866, 867, 869], "pyarrow": [694, 779], "pydant": 148, "pyg": [304, 821], "pygcn": 848, "pygraphviz": 854, "pylibcugraphop": [391, 392, 393], "pylint": 21, "pylintrc": 21, "pyplot": [816, 850, 854, 857, 860], "python": [0, 8, 21, 22, 34, 53, 92, 100, 203, 205, 206, 210, 391, 392, 393, 689, 690, 691, 694, 698, 701, 735, 775, 777, 783, 813, 814, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "python3": [21, 695, 739, 780, 814, 817, 825, 827, 830, 831, 844, 848, 851], "pythonpath": 21, "python\uc758": 775, "pytorch": [3, 4, 5, 6, 8, 9, 10, 13, 14, 21, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 186, 196, 210, 213, 214, 215, 216, 219, 234, 245, 246, 247, 248, 249, 262, 263, 264, 265, 286, 289, 292, 314, 315, 331, 332, 336, 337, 338, 348, 354, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 473, 474, 537, 544, 555, 566, 568, 631, 633, 637, 638, 639, 647, 653, 659, 664, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 682, 688, 690, 691, 701, 715, 717, 719, 720, 721, 722, 724, 727, 729, 758, 760, 763, 767, 769, 776, 777, 797, 801, 802, 803, 804, 805, 810, 812, 813, 815, 816, 817, 818, 820, 821, 822, 824, 825, 827, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 852, 854, 855, 857, 858, 860, 861, 862, 864, 866, 867], "pytorchcaffe2": 841, "pytorch\u7684nn\u6a21\u5757": 760, "pytorch\u7684tensor\u7c7b": 745, "pytorch\ub294": 803, "pytorch\ub85c": 801, "pytorch\ub97c": 808, "pytorch\uc640": [774, 777], "pytorch\uc758": [786, 803, 806], "pytz": [825, 827, 830, 831], "pyyaml": 148, "py\u548claunch": 739, "py\u5e94\u8be5\u4f7f\u7528\u76f8\u540c\u7684ip\u914d\u7f6e\u6587\u4ef6": 739, "q": [147, 174, 180, 414, 435, 441, 557, 562, 817, 861], "q_": [385, 417], "q_i": 861, "q_j": 861, "q_p": 174, "q_proj": 817, "q_t": 435, "qi": [848, 850], "qingbiao": 747, "qingbiaoli": 747, "qipeng": [854, 861], "qk": [441, 817], "qkv": 861, "qm7b": [25, 177, 688, 734, 774], "qm7bdata": [688, 734, 774], "qm7bdataset": [685, 688, 732, 734, 772, 774], "qm7bdataset\u6e90\u4ee3\u7801": 734, "qm9": 178, "qm9dataset": 179, "qm9edg": 179, "qm9edgedataset": 178, "qquad": 850, "qualiti": [214, 861], "quan": [848, 861], "quantiti": [244, 472], "quantum": [177, 178, 179, 389, 415], "queri": [4, 13, 36, 37, 38, 45, 47, 48, 51, 54, 55, 56, 57, 58, 60, 61, 75, 77, 79, 80, 81, 82, 87, 88, 89, 90, 105, 107, 304, 701, 817, 861], "question": [180, 850], "queue": [4, 234], "queue_siz": 4, "quick": [22, 701, 820], "quickli": 834, "quickstart": 819, "quit": [22, 689, 718, 851], "quot": [686, 833], "r": [14, 60, 87, 118, 119, 163, 178, 179, 314, 317, 385, 399, 402, 404, 405, 417, 430, 432, 433, 434, 439, 450, 451, 496, 499, 544, 647, 694, 704, 707, 718, 723, 748, 763, 789, 807, 816, 817, 818, 820, 857, 860, 861], "r0": [296, 692, 778], "r1": [296, 692, 778], "r2": [178, 179, 296, 692, 778], "r3": [296, 692, 778], "r_": [388, 646, 723, 763, 807, 820], "r_1": 646, "r_2": 646, "r_g": 544, "r_i": [392, 448], "r_j": [448, 646], "r_k": 388, "r_t": [214, 435, 560], "radial": 388, "radiu": [242, 430, 544], "radius_proj": 850, "rais": [21, 48, 89, 109, 116, 131, 145, 177, 178, 179, 183, 286, 331, 339, 386, 398, 401, 402, 403, 404, 405, 406, 409, 412, 419, 630, 631, 632, 658, 666, 685, 692, 721, 722, 732, 761, 762, 772, 805, 806, 825, 827], "ram": [14, 308, 694], "rand": [6, 9, 128, 129, 214, 216, 219, 398, 399, 401, 402, 404, 405, 409, 410, 412, 415, 418, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 446, 448, 455, 642, 643, 698, 719, 742, 783, 803, 830, 831], "rand_bipartit": 546, "rand_graph": [9, 299, 384, 399, 402, 410, 413, 432, 433, 434, 435, 436, 437, 438, 439, 440, 449, 450, 451, 454, 545, 645, 651, 652, 653, 664, 665, 719, 803], "randint": [385, 450, 451, 711, 724, 725, 728, 764, 765, 768, 808, 809, 811, 830, 831], "randn": [5, 47, 75, 118, 119, 121, 382, 383, 385, 408, 413, 424, 425, 426, 449, 450, 451, 606, 607, 613, 616, 624, 648, 664, 665, 667, 699, 700, 724, 725, 743, 744, 754, 764, 765, 784, 785, 796, 808, 809, 820, 833, 860], "random": [0, 6, 13, 142, 143, 161, 162, 163, 172, 173, 174, 183, 189, 190, 197, 198, 205, 207, 214, 217, 239, 244, 292, 299, 328, 380, 384, 398, 399, 402, 404, 405, 412, 415, 432, 433, 434, 435, 436, 437, 438, 439, 440, 472, 545, 546, 547, 555, 557, 558, 559, 560, 565, 662, 665, 694, 713, 718, 724, 725, 764, 765, 808, 809, 817, 830, 831, 835, 851, 866], "random_flip": [630, 666], "random_partit": 694, "random_se": [161, 162, 163, 197, 205, 560], "random_st": [142, 143, 173, 189, 190, 207, 866], "random_walk": [558, 712], "random_walk_with_restart": 559, "randomli": [6, 142, 143, 147, 171, 174, 189, 190, 207, 209, 210, 213, 226, 227, 231, 238, 240, 241, 296, 450, 451, 560, 561, 562, 630, 645, 651, 652, 653, 660, 666, 694, 724, 796, 808, 824, 835], "randomst": [183, 207], "randomwalkp": 13, "rang": [4, 128, 129, 145, 164, 165, 168, 172, 186, 210, 213, 239, 297, 299, 300, 309, 314, 318, 329, 330, 350, 380, 423, 424, 425, 426, 427, 442, 447, 454, 538, 556, 562, 571, 572, 638, 680, 682, 688, 690, 692, 694, 718, 719, 725, 727, 728, 729, 734, 736, 765, 767, 768, 769, 774, 776, 803, 809, 810, 811, 812, 815, 816, 817, 825, 827, 832, 834, 835, 836, 840, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "rangepartitionbook": 4, "rangl": [178, 179], "rank": [4, 231, 238, 352, 438, 661, 834, 840, 866, 867], "rapid": 849, "rare": [226, 556], "rate": [4, 10, 14, 137, 161, 163, 173, 387, 391, 392, 393, 397, 402, 404, 405, 410, 414, 417, 418, 421, 422, 423, 424, 436, 437, 682, 725, 849], "rather": [142, 143, 189, 190, 818, 850, 857], "ratio": [138, 139, 140, 161, 163, 173, 197, 198, 205, 243, 296, 394, 416, 645], "raw": [0, 95, 96, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 245, 332, 336, 337, 445, 473, 537, 550, 551, 568, 665, 683, 684, 686, 688, 694, 726, 770, 771, 821, 824, 830, 831, 837], "raw_dir": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 684, 685, 688, 731, 732, 734, 771, 772, 774], "raw_dir\u4e0b\u7684self": 732, "raw_dir\u6307\u5b9a\u7684\u503c": 731, "raw_path": [156, 685, 688, 732, 734, 772, 774], "rb": [417, 845, 849], "rbf": 388, "rbf_kernel_mean": 388, "rbf_kernel_sc": 388, "rbrace": [186, 704, 748, 754, 789, 796], "rcmk": 553, "rcount": [848, 851], "rdf": [132, 133, 144, 170, 849], "rdfdata": [688, 734, 774], "rdfgraphdataset": [132, 133, 144, 170], "re": [6, 95, 96, 134, 137, 138, 139, 140, 148, 149, 155, 171, 173, 180, 182, 185, 187, 188, 193, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 411, 412, 415, 417, 418, 419, 420, 421, 422, 551, 553, 688, 821, 825, 827, 830, 831, 867], "reach": [709, 854, 861], "reachabl": 349, "read": [1, 3, 4, 5, 13, 21, 168, 183, 207, 287, 293, 294, 295, 297, 308, 314, 382, 686, 691, 693, 694, 713, 813, 820, 821, 835, 837, 844, 845, 854, 861, 867], "read_csv": 837, "reader": [848, 851], "readi": [710, 830, 831, 844, 857], "readm": [21, 210], "readonli": [116, 631], "readout": [437, 440, 548, 549, 836], "readout_edg": [344, 346, 549, 628], "readout_nod": [345, 347, 548, 629, 727, 767, 810], "real": [159, 162, 292, 680, 694, 779, 816, 817, 826, 833, 857, 861], "realiz": 20, "realli": [137, 171, 180, 182, 188, 317, 441, 442, 444, 446, 447], "reason": [21, 164, 166, 292, 691, 713, 825, 827], "reassign": 693, "recal": [14, 817, 826, 849, 851, 861], "receiv": [20, 53, 100, 221, 292, 387, 396, 412, 674, 675, 676, 677, 705, 834, 857], "recent": [162, 817, 825, 827, 861], "recip": [423, 424, 425, 426, 427, 428], "recogn": [722, 762, 806], "recognit": 174, "recommand": 27, "recommend": [5, 21, 22, 34, 73, 93, 94, 100, 113, 120, 125, 163, 173, 210, 248, 292, 299, 395, 396, 397, 555, 638, 683, 684, 688, 689, 691, 693, 694, 697, 705, 706, 712, 725, 728, 814, 825, 827, 829, 830, 831, 834, 835, 840, 841, 844, 848, 849, 850, 851, 854, 857, 860, 861, 866], "reconstruct": 849, "record": [56, 132, 145, 640, 816, 854, 857], "recov": [694, 836, 849], "recreat": 820, "recurr": [164, 166, 411, 435, 861, 862, 864], "recurs": [21, 350, 351, 814], "reddit": [25, 181, 719, 803, 821], "redditbinari": 165, "redditdata": [688, 734, 774], "redditdataset": [25, 719, 803], "redditmulti5k": 165, "redistribut": [813, 814], "reduc": [13, 20, 73, 91, 92, 93, 94, 100, 113, 244, 262, 263, 264, 265, 308, 472, 498, 500, 539, 540, 541, 542, 543, 594, 595, 596, 598, 694, 704, 705, 707, 713, 719, 789, 790, 793, 803, 806, 826, 834, 841, 848, 849, 851, 854, 861, 867], "reduce_func": [73, 91, 92, 93, 94, 100, 113, 262, 263, 264, 265, 539, 540, 541, 542, 543, 705, 707, 708, 749, 751, 752, 790, 793, 794, 834, 851, 854, 857, 861], "reduce_op": 498, "reduceop": 867, "reducer\ub294": 793, "reduct": [9, 73, 91, 92, 93, 94, 100, 113, 214, 500, 591, 594, 595, 596, 707, 723, 793, 807, 834, 854], "redund": [292, 556], "ref": [144, 738], "refer": [4, 9, 21, 22, 24, 44, 72, 104, 135, 136, 146, 147, 148, 151, 152, 153, 159, 162, 164, 166, 169, 174, 175, 177, 178, 179, 181, 183, 195, 210, 214, 215, 216, 239, 240, 292, 296, 316, 385, 417, 432, 433, 434, 435, 436, 438, 439, 443, 497, 498, 555, 561, 632, 680, 682, 688, 691, 698, 702, 710, 711, 712, 716, 717, 718, 728, 729, 755, 759, 797, 802, 813, 815, 816, 818, 825, 827, 830, 831, 833, 834, 836, 841, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "refere": 861, "reflect": [22, 26, 70, 149, 185, 304, 309, 816], "refresh": [818, 827], "regard": [407, 412, 418, 476, 477, 478, 479, 619, 726, 820], "regardless": [4, 80, 117, 130, 233, 289, 296, 309, 343, 349, 693, 694, 857], "regim": 713, "region": [23, 816], "regist": [22, 423, 424, 425, 426, 427, 428, 721], "register_object": 22, "registr": 720, "registri": 22, "regress": [2, 138, 177, 178, 179, 195, 211, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 688, 711, 722, 724, 728, 774, 808, 836], "regression_test": [825, 827, 830, 831, 837, 850, 854, 857, 860], "regression\ub3c4": 812, "regular": [171, 385, 392, 399, 417, 425, 427, 456, 691, 849], "regularli": 866, "reiniti": [380, 384, 391, 392, 393, 395, 396, 397, 399, 402, 404, 405, 406, 409, 411, 412, 415, 418, 419, 420, 435, 449, 450, 451, 453, 721, 805, 851], "reject": [556, 646], "rel": [95, 96, 308, 425, 426, 428, 450, 451, 688, 694, 695, 711, 714, 716, 727, 729, 734, 755, 757, 759, 767, 769, 774, 797, 800, 802, 810, 812, 829, 830, 831], "rel_data_path": [739, 780], "rel_emb": [450, 451], "rel_graph": [723, 763, 807], "rel_nam": [425, 711, 714, 716, 725, 727, 728, 729, 755, 757, 759, 765, 767, 768, 769, 797, 800, 802, 809, 810, 811, 812], "rel_project": 451, "rel_typ": [25, 164, 166], "relabel": [4, 6, 122, 125, 239, 245, 248, 318, 332, 336, 337, 473, 537, 702, 718], "relabel_idx": 6, "relabel_nod": [49, 106, 157, 158, 191, 245, 332, 336, 337, 473, 537, 754, 796], "relat": [1, 13, 18, 21, 26, 52, 59, 113, 117, 122, 125, 126, 131, 132, 133, 144, 157, 158, 161, 162, 163, 170, 191, 203, 206, 220, 245, 248, 249, 286, 289, 309, 310, 331, 332, 336, 337, 354, 382, 385, 392, 394, 416, 417, 448, 450, 451, 456, 473, 537, 545, 546, 646, 682, 686, 688, 694, 696, 697, 702, 707, 711, 722, 723, 787, 793, 820, 823, 824, 825, 827, 830, 831, 851, 852, 853, 861, 864], "relation_submodul": 382, "relationship": [150, 154, 176, 559, 711, 818, 835, 849, 850, 852, 864], "releas": [6, 814, 825, 827, 830, 831], "relev": [680, 728], "relgraphconv": [392, 638], "relgraphconvlay": [729, 769, 812], "reli": [719, 824, 844], "reliabl": 22, "reload": [132, 133, 135, 136, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 308, 684, 771], "relu": [121, 390, 395, 401, 407, 408, 410, 428, 444, 682, 690, 711, 713, 714, 715, 716, 718, 719, 721, 722, 727, 729, 736, 755, 756, 757, 758, 759, 761, 762, 767, 769, 776, 797, 799, 800, 801, 802, 805, 806, 810, 812, 815, 816, 817, 818, 820, 825, 827, 832, 834, 835, 836, 844, 845, 848, 849, 850, 851, 866, 867], "relubackward0": 407, "remain": [100, 180, 181, 302, 307, 308, 551, 709, 718, 841, 851], "remaind": 861, "remap": 694, "remot": [21, 145, 177, 178, 179, 684, 685], "remov": [95, 96, 118, 119, 130, 135, 136, 151, 152, 153, 157, 168, 186, 192, 245, 288, 332, 336, 337, 537, 550, 551, 552, 558, 640, 648, 663, 715, 716, 830, 831, 835, 861], "remove_edg": [27, 28, 96, 114, 115, 551, 835], "remove_nod": [27, 28, 95, 114, 115, 550], "remove_self_loop": 117, "removeselfloop": 13, "renam": [127, 641], "render": 21, "reorder": [150, 154, 160, 176, 194, 414, 553, 562, 688, 774], "reorder_graph": [150, 154, 160, 176, 194, 414, 417, 688, 734, 774], "reparameter": 422, "repeat": [6, 128, 129, 142, 317, 318, 336, 337, 445, 729, 857, 860, 866], "repeat_interleav": [128, 129, 322, 714, 728, 757, 768, 800, 811], "repeatedli": [384, 728, 861], "replac": [21, 100, 131, 216, 219, 221, 226, 240, 241, 286, 296, 302, 307, 318, 329, 330, 331, 443, 476, 478, 481, 483, 502, 504, 508, 510, 516, 518, 522, 524, 545, 546, 556, 560, 561, 562, 630, 640, 666, 682, 691, 692, 694, 714, 715, 716, 737, 757, 777, 778, 800, 817, 820, 827, 834, 835, 848, 860, 861, 862, 864], "replic": 235, "replica": [292, 867], "repo": [21, 23, 685, 694, 732, 772, 815, 816, 817, 818, 820, 825, 827, 830, 831, 861], "report": [14, 851], "repositori": [21, 814, 821, 849], "repres": [3, 5, 21, 22, 26, 31, 32, 51, 61, 88, 118, 119, 126, 131, 134, 135, 136, 149, 151, 152, 153, 155, 159, 162, 173, 184, 185, 187, 188, 192, 193, 220, 249, 286, 288, 296, 300, 304, 309, 318, 322, 326, 330, 331, 382, 388, 389, 395, 396, 397, 409, 412, 416, 418, 425, 426, 427, 428, 556, 562, 591, 638, 646, 686, 693, 697, 701, 705, 707, 711, 716, 718, 722, 723, 728, 818, 820, 823, 826, 832, 834, 835, 836, 838, 839, 849, 851, 854, 860], "represensit": 14, "represent": [0, 32, 62, 63, 131, 155, 187, 193, 214, 215, 216, 220, 286, 302, 304, 324, 331, 380, 382, 384, 388, 389, 393, 397, 413, 418, 437, 440, 441, 442, 444, 446, 447, 449, 453, 547, 548, 549, 560, 576, 578, 579, 586, 642, 643, 662, 707, 709, 711, 713, 718, 722, 725, 727, 728, 729, 799, 800, 809, 810, 811, 817, 820, 826, 832, 834, 835, 836, 845, 848, 849, 850, 852, 854, 855, 857, 860, 861, 862, 864], "representation\ub4e4\uacfc": 809, "representation\ub4e4\ub85c": 809, "representation\ub4e4\ub85c\ubd80\ud130": 797, "representation\ub4e4\uc744": [796, 797, 799, 800, 810], "representation\ub4e4\uc758": [800, 809, 812], "representation\ub4e4\uc774": [796, 802], "representation\uc740": [806, 811], "representation\uc744": [795, 797, 799, 802, 809, 810], "representation\uc774\uace0": 810, "representation\uc774\ub2e4": 811, "repurpos": [138, 139, 140, 725], "reput": 145, "request": [21, 691, 825, 827, 830, 831, 837], "requir": [4, 5, 9, 10, 21, 51, 55, 60, 61, 66, 87, 88, 90, 107, 122, 130, 148, 210, 216, 217, 220, 290, 291, 300, 308, 391, 392, 393, 394, 407, 408, 415, 418, 423, 424, 449, 453, 497, 498, 544, 553, 686, 690, 691, 692, 693, 694, 700, 701, 705, 709, 710, 716, 717, 719, 722, 806, 815, 816, 817, 818, 820, 825, 826, 827, 829, 830, 831, 832, 835, 836, 844, 850, 854, 861, 867], "requires_grad": [9, 854], "requires_grad_": [9, 118, 119, 850], "research": [817, 849, 850, 851, 852, 854, 857, 861, 864], "reserv": 637, "reset": [385, 454, 721], "reset_paramet": [380, 381, 384, 385, 391, 392, 393, 395, 396, 397, 399, 402, 404, 405, 406, 409, 411, 412, 415, 418, 419, 420, 435, 441, 449, 450, 451, 453, 718, 721, 761, 805, 851], "reshap": [95, 96, 117, 297, 299, 300, 301, 314, 550, 551, 552, 648, 711, 817, 820, 860], "reshuffl": [4, 239, 350, 538, 779], "resid": 308, "residu": [391, 394, 402, 404, 405, 406, 409, 410, 413, 415, 416, 817, 861], "resolv": 21, "resourc": [2, 308, 690, 709, 717, 867], "respect": [5, 95, 96, 140, 147, 184, 214, 215, 216, 219, 239, 242, 302, 309, 313, 380, 384, 400, 416, 424, 426, 497, 498, 550, 551, 553, 556, 568, 597, 617, 693, 694, 702, 705, 706, 715, 817, 829, 830, 831, 835, 840, 841, 850, 857, 861], "respons": [298, 302, 305, 307, 690, 691, 825, 827, 844], "rest": [6, 95, 96, 141, 239, 290, 332, 336, 337, 537, 632, 684, 690, 722, 727, 819, 825, 835, 837], "restart": [559, 661, 665, 844], "restart_prob": [558, 559], "restaur": 163, "restrict": [44, 104, 118, 119, 126, 131, 248, 249, 286, 331, 841, 857], "resuffl": [350, 538], "result": [6, 9, 20, 21, 51, 56, 61, 70, 73, 88, 95, 96, 116, 118, 119, 122, 125, 126, 130, 197, 198, 209, 214, 226, 227, 239, 240, 241, 245, 246, 248, 249, 290, 304, 309, 332, 335, 336, 337, 338, 341, 349, 352, 382, 388, 399, 419, 420, 449, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 545, 546, 548, 549, 550, 551, 553, 554, 557, 559, 560, 561, 562, 563, 567, 568, 569, 570, 591, 594, 595, 596, 605, 606, 613, 616, 624, 631, 632, 637, 638, 639, 640, 654, 655, 656, 661, 665, 674, 678, 691, 693, 694, 696, 697, 698, 700, 705, 707, 717, 718, 723, 727, 729, 790, 793, 816, 820, 821, 825, 827, 834, 835, 837, 841, 844, 845, 850, 851, 861], "result_dict": [757, 800], "ret": [394, 416, 848, 851, 861], "retain": [56, 702, 787, 820], "retri": 200, "retriev": [22, 125, 126, 192, 233, 248, 249, 292, 301, 381, 547, 568, 637, 654, 655, 656, 661, 662, 665, 670, 671, 672, 673, 727, 833, 835, 837, 850], "return": [0, 4, 5, 6, 10, 20, 22, 26, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 100, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 207, 209, 214, 217, 218, 219, 220, 221, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 286, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 322, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 657, 659, 663, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 680, 686, 687, 688, 689, 691, 692, 694, 705, 706, 707, 710, 711, 713, 714, 715, 716, 718, 719, 722, 725, 727, 728, 729, 733, 734, 735, 737, 749, 750, 751, 754, 755, 756, 757, 758, 759, 762, 765, 767, 768, 769, 773, 774, 775, 777, 778, 790, 792, 793, 796, 797, 799, 800, 801, 802, 803, 806, 809, 810, 811, 812, 815, 816, 817, 818, 820, 825, 827, 830, 831, 832, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "return_count": [111, 638, 640, 668], "return_eid": [557, 559, 827], "return_eigv": 339, "return_label": 230, "return_map": [239, 694, 779, 844], "return_path": [446, 447, 567, 680], "return_uv": 48, "retweet": 159, "reuiqr": 449, "reus": [692, 711, 728, 827], "reusabl": 722, "rev": 779, "rev_plai": [424, 647], "rev_r": 647, "rev_rev_plai": 424, "reveal": [244, 472], "revers": [116, 123, 124, 130, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 170, 176, 191, 192, 220, 229, 230, 288, 298, 309, 312, 317, 321, 340, 413, 540, 542, 543, 553, 644, 647, 678, 686, 688, 694, 710, 711, 734, 774, 797, 833, 850], "reverse_edg": [150, 154, 176], "reverse_eid": [220, 755, 797], "reverse_etyp": [220, 755, 797], "reverse_etypes_map": [317, 321, 711], "reverse_id": [220, 755, 797], "reverse_typ": [220, 755, 797], "revert": 678, "review": [21, 135, 136, 137, 161, 162, 163, 194], "revis": 861, "revisit": 557, "reweight": 421, "rewond": 747, "rewrit": 715, "rfeat": 451, "rg": [430, 553, 554], "rgcn": [711, 713, 716, 725, 727, 728, 729, 755, 756, 757, 765, 767, 768, 769, 797, 799, 800, 802, 809, 810, 811, 812, 849], "rgcnlayer": 849, "rgcn\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u4e0e\u5b83\u975e\u5e38\u76f8\u4f3c": 759, "rgcn\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6": 769, "rgcn\u7684\u5b9e\u73b0": 759, "rh": 497, "rhel": 814, "rho": [422, 498, 704, 748, 754, 789, 796, 850], "rhs_data": [497, 498], "rhs_field": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], "rhs_target": 497, "rich": 162, "richer": 860, "rid": 713, "right": [4, 5, 118, 150, 342, 387, 390, 393, 396, 399, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 418, 433, 434, 448, 453, 497, 498, 499, 630, 665, 666, 685, 691, 692, 704, 706, 710, 711, 716, 722, 727, 728, 748, 754, 755, 757, 759, 762, 768, 789, 796, 797, 800, 802, 806, 811, 820, 826, 834, 835, 849, 851, 854, 861], "rightarrow": [354, 850, 857], "riski": 145, "rng": 183, "rnn": [442, 680, 861, 862, 864], "robust": [197, 205], "roc_auc_scor": [825, 835, 845], "rocauc": 817, "rock": 854, "role": [182, 242, 423, 424, 425, 426, 427, 428], "roll": 560, "rollout": [426, 428], "roman": 182, "room": 705, "root": [159, 217, 288, 403, 412, 446, 447, 567, 680, 814, 815, 816, 818, 854], "rossmann": 399, "rotat": 179, "roughli": [191, 239, 388, 693, 844, 850], "round": [91, 92, 729, 857], "rout": [860, 862, 864], "routin": [22, 833], "routing_num": 860, "row": [4, 27, 31, 32, 118, 119, 131, 150, 154, 176, 286, 287, 293, 295, 296, 297, 304, 309, 314, 318, 324, 331, 338, 381, 395, 396, 397, 441, 444, 454, 544, 548, 549, 566, 576, 578, 579, 584, 591, 594, 595, 596, 597, 598, 606, 609, 610, 611, 617, 619, 623, 642, 643, 664, 665, 691, 693, 699, 715, 779, 784, 801, 818, 820, 837, 844, 845, 850], "row1": 625, "row2": 625, "row_id": 718, "row_sort": 286, "rowfeatnorm": 13, "rpc": 4, "rr": [317, 747], "rst": [382, 718, 722, 723, 762, 763, 806, 807], "rtype": [386, 387, 388, 389, 394, 397, 401, 403, 406, 407, 409, 411, 412, 416, 418, 419, 420, 421, 422, 449, 450, 453, 591], "rule": [21, 220, 727, 850, 851, 857, 861], "run": [4, 10, 14, 21, 214, 234, 239, 290, 325, 421, 423, 424, 425, 426, 427, 428, 560, 562, 685, 690, 691, 694, 709, 717, 719, 723, 814, 817, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "run_epoch": 861, "runnabl": 21, "runtim": [0, 4, 14, 22, 156, 679, 691, 692, 694, 825, 827, 840, 841], "runtimeerror": [183, 825], "runtimewarn": [848, 851], "russia": [164, 849], "rv": 22, "rvert": 448, "rvert_2": [721, 761, 805], "rw": [665, 844], "r\uc5d0": 793, "s2": 435, "s3": [21, 23, 288, 343, 564, 688, 698, 734, 774, 783], "s_": 820, "s_c": 850, "s_i": 861, "s_j": [860, 861], "s_norm": 860, "sab": 437, "safe": [159, 702], "sage": [397, 690, 713, 714, 718, 725, 728, 729, 736, 765, 768, 769, 776, 809, 811, 812, 825, 840, 844, 845, 867], "sageconv": [382, 397, 713, 714, 715, 718, 720, 721, 722, 729, 758, 760, 761, 762, 769, 801, 804, 805, 806, 812, 825, 826, 827, 834, 835, 844, 845, 867], "sageconv\u7684\u6570\u5b66\u516c\u5f0f\u5982\u4e0b": 762, "sageconv\uc5d0\uc11c": 806, "sageconv\uc758": [805, 806], "sai": [21, 684, 709, 827], "said": [211, 212, 213], "same": [0, 3, 4, 5, 8, 9, 20, 28, 34, 35, 42, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 68, 70, 74, 87, 88, 91, 92, 93, 94, 100, 103, 108, 113, 116, 118, 119, 120, 121, 122, 130, 131, 134, 156, 161, 163, 181, 188, 197, 200, 205, 208, 209, 210, 211, 212, 214, 216, 219, 230, 231, 233, 238, 239, 240, 245, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 295, 296, 297, 300, 301, 302, 307, 314, 315, 325, 326, 331, 332, 336, 337, 338, 341, 349, 350, 353, 382, 384, 386, 387, 394, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 412, 413, 415, 416, 418, 429, 430, 432, 434, 438, 439, 441, 448, 452, 453, 455, 473, 474, 537, 538, 544, 550, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 566, 567, 569, 570, 571, 572, 574, 578, 579, 597, 617, 627, 631, 632, 637, 638, 640, 648, 663, 680, 685, 686, 688, 690, 691, 692, 693, 694, 697, 698, 699, 700, 701, 702, 707, 711, 712, 714, 716, 718, 719, 720, 722, 723, 725, 727, 728, 729, 744, 772, 785, 787, 793, 796, 799, 814, 817, 820, 825, 826, 830, 833, 834, 835, 837, 840, 844, 845, 848, 849, 850, 851, 854, 857, 861, 866, 867], "sampl": [3, 6, 7, 9, 13, 14, 122, 130, 139, 146, 147, 160, 165, 168, 169, 172, 173, 174, 175, 181, 184, 186, 194, 195, 198, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 233, 234, 240, 241, 244, 291, 292, 296, 298, 299, 302, 304, 306, 307, 309, 310, 311, 312, 316, 317, 321, 380, 384, 385, 425, 426, 427, 428, 435, 472, 497, 571, 572, 605, 616, 632, 684, 686, 690, 692, 713, 717, 718, 722, 727, 728, 737, 754, 777, 796, 797, 798, 817, 820, 824, 825, 827, 829, 835, 836, 841, 844, 849, 850, 854, 857, 858, 861, 864, 867], "sample_bia": [425, 427], "sample_block": [690, 691, 736, 737, 754, 776, 777, 796], "sample_fronti": [754, 796], "sample_in_subgraph": 298, "sample_layer_neighbor": [296, 302], "sample_log_prob": 857, "sample_neg": 306, "sample_negative_edges_uniform": 296, "sample_negative_edges_uniform_2": 296, "sample_neighbor": [4, 214, 216, 240, 296, 298, 307, 312, 690, 691, 692, 710, 711, 712, 713, 714, 716, 717, 736, 737, 754, 776, 777, 778, 796, 798, 825, 827, 867], "sample_neighbors_bias": [571, 572], "sample_point": 6, "sample_sparse_neighbor": 718, "sample_subgraph": [298, 307, 312, 710, 718], "sample_uniform_neg": [307, 316, 714, 717, 825], "sample_util": 825, "sampled_csc": [296, 298, 302, 307, 309, 310], "sampled_matric": 718, "sampled_matrix": 718, "sampled_subgraph": [289, 298, 299, 302, 304, 307, 710, 718, 827], "sampledsubgraph": [298, 304, 310, 312, 710], "sampledsubgraphimpl": [296, 302, 307, 309], "sampleperlay": 827, "sampler": [7, 13, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 292, 298, 299, 302, 306, 307, 312, 391, 392, 393, 555, 556, 560, 690, 691, 695, 709, 712, 714, 718, 736, 737, 754, 755, 756, 757, 759, 776, 777, 796, 797, 798, 799, 800, 802, 824, 836, 840], "sampler1": 712, "sampler2": 712, "sampling_stag": [307, 312], "samplinggraph": [291, 296, 303, 308, 711], "saniti": 849, "satisfi": [53, 54, 414, 417, 574, 715, 825, 827, 830, 831, 850, 861], "satisif": 120, "save": [0, 2, 4, 9, 23, 156, 206, 239, 314, 315, 343, 564, 639, 654, 683, 684, 686, 693, 694, 698, 702, 705, 706, 707, 709, 719, 723, 725, 726, 729, 731, 735, 742, 771, 775, 779, 783, 793, 812, 815, 816, 818, 827, 830, 831, 832, 834, 835, 837, 840, 844, 857, 861], "save_dir": [156, 684, 731, 771], "save_graph": [172, 204, 343, 689, 698, 702, 735, 742, 746, 775, 783, 787, 833], "save_info": [689, 735, 775], "save_path": [138, 139, 140, 156, 684, 689, 731, 735, 771, 775], "save_tensor": 779, "sbm": [147, 174], "sbmdata": [688, 734, 774], "scalabl": [384, 445, 557, 665, 816, 821, 823, 824, 842, 843], "scalar": [6, 118, 119, 125, 214, 216, 219, 248, 300, 386, 398, 399, 402, 403, 404, 405, 412, 415, 418, 425, 427, 433, 591, 594, 595, 596, 598, 605, 608, 609, 610, 611, 614, 615, 623, 624, 697, 699, 726, 784, 800, 820, 835, 848, 850, 851, 860, 862, 864], "scalar_v": 820, "scale": [125, 134, 149, 185, 248, 342, 394, 412, 416, 448, 452, 471, 555, 694, 719, 803, 813, 817, 826, 835, 840, 841, 851, 861], "scale_const": 861, "scaled_exp": 861, "scaler": [394, 416, 607, 612, 719, 803], "scenario": [14, 22, 302, 307, 562, 692, 709, 727], "scene": [402, 691], "schedul": [817, 824], "schema": [72, 233, 694, 702, 779], "scheme": [4, 47, 75, 95, 96, 117, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 245, 246, 332, 336, 337, 473, 474, 537, 550, 551, 552, 637, 651, 652, 659, 665, 678, 686, 693, 694, 699, 702, 743, 746, 784, 787, 833, 836, 837], "schnet": 389, "schwarzenegg": 854, "scienc": [151, 192, 288], "scientif": [150, 176, 850], "scientist\uac00": 788, "scikit": 840, "scipi": [9, 31, 118, 119, 126, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 553, 555, 698, 742, 783, 816, 820, 825, 827, 830, 831, 835, 850], "scipy_fmt": [31, 571, 572], "scope": [70, 835, 848, 850], "score": [13, 380, 398, 399, 404, 405, 414, 433, 449, 450, 451, 453, 711, 725, 726, 728, 755, 757, 765, 768, 797, 800, 809, 811, 817, 820, 825, 827, 835, 845, 849, 851, 861], "score_neg": 845, "score_po": 845, "scorepredictor": [711, 755, 757, 797, 800], "scorer": [450, 451], "scrape": 191, "scratch": [142, 143, 189, 190, 380, 833, 848, 849, 851], "script": [4, 21, 690, 691, 694, 695, 814, 815, 816, 817, 832, 833, 834, 835, 836, 837, 840, 841, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "script_fold": [739, 780], "scriptobject": 296, "sddmm": [480, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 506, 507, 512, 513, 514, 515, 520, 521, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 605, 817, 820], "sdg\uc5d0\uc11c": 777, "seaborn": 860, "seal": 835, "seamlessli": [720, 824], "search": [123, 124, 229, 230, 338, 426, 428, 429, 431, 566, 728, 811, 813, 840, 851, 861], "search\uc640": 811, "second": [20, 130, 131, 210, 214, 215, 216, 219, 286, 331, 339, 382, 455, 558, 559, 560, 566, 568, 613, 623, 632, 638, 694, 722, 727, 821, 826, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 850, 851, 854, 857, 860, 861, 862, 864, 866, 867], "section": [14, 21, 210, 214, 215, 216, 678, 680, 682, 683, 687, 688, 690, 691, 693, 694, 698, 704, 709, 713, 715, 722, 724, 725, 728, 729, 809, 811, 832, 835, 840, 844, 845, 850, 851, 867], "sector": 166, "secur": [825, 827, 830, 831], "see": [1, 4, 9, 20, 21, 44, 61, 66, 88, 89, 91, 104, 130, 131, 146, 169, 209, 210, 211, 212, 214, 216, 217, 220, 222, 223, 224, 225, 230, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 331, 338, 391, 392, 399, 414, 417, 423, 424, 433, 435, 440, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 571, 572, 576, 578, 579, 586, 609, 610, 611, 618, 620, 621, 622, 632, 638, 684, 686, 688, 691, 697, 698, 699, 701, 702, 705, 711, 713, 714, 715, 716, 724, 727, 729, 814, 816, 817, 825, 826, 827, 830, 831, 833, 834, 835, 836, 837, 844, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "seed": [4, 142, 143, 161, 162, 163, 172, 173, 183, 189, 190, 197, 198, 205, 207, 208, 210, 213, 214, 216, 219, 296, 298, 300, 301, 302, 304, 307, 312, 321, 436, 545, 546, 555, 559, 560, 561, 691, 692, 710, 711, 717, 718, 737, 777, 778, 817, 825, 827, 844, 850, 866], "seed2_contribut": 560, "seed_nod": [216, 289, 298, 299, 300, 301, 304, 710, 713, 754, 796, 825, 827, 829, 830, 831, 867], "seeds_timestamp": [298, 312, 825], "seem": [388, 850, 851], "seen": [716, 729, 821, 848, 849, 850, 851, 861], "seg": [431, 500, 566], "segal": 854, "seglen": 500, "seglen_a": 499, "segment": [13, 122, 135, 136, 499, 500, 571, 572, 678], "segmentmm": 13, "segmentreducebackward": [433, 440], "select": [6, 21, 56, 142, 143, 147, 171, 174, 182, 189, 190, 209, 210, 217, 239, 240, 241, 296, 302, 307, 338, 394, 416, 425, 427, 429, 431, 438, 441, 442, 444, 555, 560, 561, 562, 563, 564, 566, 580, 640, 668, 709, 713, 719, 796, 814, 816, 820, 824, 826, 827, 857], "self": [26, 62, 63, 116, 117, 156, 162, 164, 165, 181, 218, 220, 226, 298, 309, 312, 338, 386, 392, 396, 398, 401, 402, 404, 405, 406, 409, 412, 413, 417, 419, 423, 424, 425, 426, 427, 428, 429, 430, 431, 440, 443, 455, 544, 552, 556, 566, 630, 648, 663, 666, 682, 684, 685, 686, 688, 689, 692, 693, 694, 697, 707, 710, 711, 713, 714, 715, 716, 718, 719, 721, 722, 723, 725, 727, 728, 729, 731, 732, 734, 735, 751, 754, 755, 756, 757, 758, 759, 761, 762, 763, 765, 767, 768, 769, 771, 772, 774, 775, 782, 793, 796, 797, 799, 800, 801, 802, 803, 805, 806, 807, 809, 810, 811, 812, 815, 816, 817, 818, 820, 825, 827, 832, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "self_": 825, "self_and_has_next_method": [825, 827], "self_attn": 861, "self_loop": [165, 181, 386, 392, 398, 401, 402, 404, 405, 406, 409, 412, 417, 419, 423, 427, 428, 430, 544, 836, 866], "sell": [382, 697, 782], "seller": 697, "semant": [5, 9, 132, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 726, 854, 861], "semi": [140, 147, 386, 396, 412, 654, 694, 713, 779, 799, 832, 848, 850, 857], "send": [53, 73, 91, 94, 100, 113, 412, 414, 727, 825, 827, 851, 857, 861], "send_and_recv": [0, 91, 861], "send_sourc": 100, "sent": [412, 833, 834, 860, 861], "sentenc": [182, 184, 854, 855, 857, 861, 862, 864], "sentiment": [184, 854, 857], "separ": [4, 142, 143, 171, 180, 338, 389, 686, 693, 694, 717, 723, 727, 729, 814, 827, 830, 836, 841, 848], "septemb": 181, "sequenc": [54, 121, 131, 207, 286, 331, 348, 380, 384, 411, 433, 435, 650, 855, 857, 861, 864], "sequenti": [91, 92, 302, 646, 714, 817, 825, 857], "seri": [702, 826, 827, 850], "serial": [446, 825, 827, 830, 831], "serv": [296, 682, 690, 715, 849], "server": [4, 21, 145, 177, 178, 179, 234, 684, 685, 690, 691, 692, 695, 845], "servic": [21, 159, 291, 690, 691], "set": [0, 1, 4, 6, 7, 10, 21, 23, 43, 44, 45, 46, 51, 68, 70, 72, 74, 77, 79, 82, 92, 101, 102, 103, 104, 105, 122, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 147, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 176, 181, 189, 190, 191, 194, 198, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 231, 238, 239, 242, 243, 245, 246, 290, 291, 292, 296, 299, 304, 308, 312, 313, 328, 331, 332, 336, 337, 338, 342, 349, 351, 354, 386, 390, 391, 392, 393, 394, 396, 398, 401, 402, 403, 404, 405, 406, 409, 412, 416, 417, 419, 421, 422, 425, 427, 429, 430, 431, 435, 436, 437, 441, 444, 448, 454, 471, 473, 474, 537, 544, 545, 546, 556, 559, 562, 565, 566, 632, 638, 640, 642, 643, 670, 671, 673, 675, 676, 677, 679, 681, 688, 690, 691, 693, 694, 697, 701, 702, 710, 711, 712, 713, 715, 716, 717, 719, 721, 722, 723, 725, 727, 728, 729, 774, 786, 787, 814, 815, 816, 819, 820, 824, 825, 827, 829, 830, 831, 832, 834, 836, 837, 840, 849, 851, 854, 857, 860, 861, 866, 867], "set_batch_num_edg": [27, 28, 102, 114, 115, 116, 117, 130, 245, 246, 332, 335, 341, 349, 473, 474, 537, 551, 554, 631, 640, 641, 727, 767, 810], "set_batch_num_nod": [27, 28, 101, 114, 115, 116, 117, 130, 245, 246, 332, 335, 341, 349, 473, 474, 537, 551, 554, 631, 640, 641, 727, 767, 810], "set_bodi": 22, "set_default_backend": 814, "set_devic": [866, 867], "set_e_initi": 857, "set_edge_featur": 304, "set_edgecolor": 816, "set_epoch": [213, 866], "set_grad_en": 861, "set_n_initi": [27, 28, 93, 113, 857], "set_node_featur": 304, "set_num_thread": 841, "set_postfix": [818, 827], "set_sharing_strategi": 867, "set_start_method": 840, "set_titl": 860, "set_trans_dec": 436, "set_trans_enc": 437, "set_xlabel": 860, "settran": 437, "settransformerdecod": 437, "settransformerencod": 436, "setup": [4, 712, 840, 841], "seven": 850, "sever": [244, 291, 472, 684, 688, 699, 711, 716, 717, 722, 849, 861, 862, 864], "sg": [245, 332, 336, 337, 423, 424, 473, 537, 560, 561, 562, 563, 640, 668, 708, 710, 752, 754, 794, 796], "sg1": 833, "sg2": 833, "sgc": 419, "sgd": 691, "sh": [21, 814], "sha": [685, 732, 772], "sha1": [199, 200], "sha1_hash": [199, 200], "shall": [20, 678], "shallow": [64, 71, 219, 571, 572, 634, 635, 636], "shamelessli": 22, "shape": [4, 5, 6, 9, 12, 30, 47, 75, 95, 96, 117, 120, 126, 128, 129, 138, 143, 146, 147, 165, 168, 169, 174, 184, 186, 192, 195, 219, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 296, 300, 301, 322, 324, 326, 332, 336, 337, 338, 339, 342, 352, 353, 354, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 471, 472, 473, 474, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 547, 548, 549, 550, 551, 552, 557, 559, 566, 567, 569, 570, 571, 572, 574, 577, 580, 582, 584, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 630, 637, 638, 642, 643, 648, 651, 652, 655, 656, 659, 661, 665, 667, 670, 671, 673, 675, 676, 677, 678, 680, 682, 686, 688, 691, 693, 694, 699, 702, 718, 719, 726, 727, 728, 729, 734, 737, 743, 746, 768, 769, 774, 777, 779, 784, 787, 791, 800, 803, 811, 812, 814, 815, 816, 817, 818, 820, 829, 830, 831, 832, 833, 834, 835, 836, 837, 844, 845, 848, 850, 854, 861], "shape\uc740": 810, "shaplei": [426, 428], "shapley_step": [426, 428], "shard": [4, 691, 777], "share": [4, 22, 26, 69, 116, 122, 130, 131, 246, 286, 291, 296, 311, 327, 331, 335, 338, 341, 352, 353, 382, 406, 429, 431, 452, 554, 562, 566, 571, 572, 631, 637, 640, 690, 693, 694, 695, 779, 814, 841, 844, 849, 850, 851, 861], "share_edata": [99, 554], "share_ndata": [99, 554], "share_weight": 405, "shared_memori": 4, "shared_memory_nam": [296, 311, 327], "sharemem": [14, 338, 429, 431, 566], "sharp": 851, "sharper": 851, "shchur": [135, 136, 151, 152, 153], "shelf": 851, "shell": 840, "shift": [197, 205, 389], "short": [385, 702, 707, 821, 834, 854], "shortcut": 182, "shortest": [242, 446, 447, 567, 680, 682], "shortest_dist": [446, 447, 680], "shortest_path": 680, "shot": [725, 809], "should": [4, 21, 42, 53, 54, 89, 91, 116, 125, 126, 128, 129, 130, 131, 146, 169, 173, 178, 179, 184, 195, 196, 210, 214, 216, 219, 220, 222, 223, 224, 225, 240, 241, 248, 249, 286, 292, 294, 296, 298, 300, 302, 304, 307, 309, 312, 314, 317, 318, 322, 329, 330, 331, 335, 340, 341, 386, 387, 391, 392, 393, 394, 395, 396, 397, 407, 408, 415, 416, 419, 423, 424, 425, 426, 427, 428, 431, 442, 443, 446, 448, 452, 455, 545, 546, 553, 554, 555, 559, 560, 561, 562, 563, 564, 608, 609, 610, 611, 613, 614, 623, 631, 637, 638, 640, 650, 655, 656, 661, 665, 686, 691, 693, 694, 695, 701, 710, 712, 713, 719, 722, 820, 825, 827, 830, 831, 832, 833, 834, 835, 837, 841, 844, 849, 850, 857, 860, 866, 867], "show": [4, 9, 14, 118, 119, 220, 239, 244, 472, 680, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 709, 711, 713, 714, 719, 727, 728, 729, 815, 818, 825, 826, 827, 828, 830, 831, 832, 835, 836, 844, 848, 849, 850, 851, 852, 854, 857, 861, 862, 864], "shown": [120, 688, 691, 701, 718, 722, 844, 845, 860, 861], "shuffl": [4, 168, 186, 207, 209, 210, 213, 214, 215, 216, 219, 220, 231, 238, 239, 292, 299, 380, 384, 423, 427, 428, 660, 687, 688, 690, 691, 694, 710, 711, 712, 713, 714, 716, 717, 727, 733, 734, 736, 737, 754, 755, 756, 757, 759, 767, 773, 774, 776, 777, 796, 797, 798, 799, 800, 802, 810, 817, 825, 827, 830, 831, 840, 844, 845, 854, 866, 867], "shut": 290, "side": [22, 632, 826], "sigma": [410, 412, 414, 417, 418, 448, 722, 728, 762, 768, 806, 811, 815, 816, 818, 848, 849, 851, 854, 861], "sigma_": 410, "sigma_k": 409, "sigmoid": [410, 820, 854, 857], "sign": [145, 630, 665, 666, 816], "sign_diffus": 816, "signal": [21, 174, 354, 816, 857], "signatur": [21, 53, 54, 851], "signdiffus": 13, "signifi": [296, 302, 307], "signific": [684, 712, 717, 824, 841, 851, 854], "significantli": [309, 719, 826], "silent": [386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 423, 424, 425, 426, 427, 428, 722], "sim": [728, 768, 811, 835], "similar": [4, 9, 26, 34, 53, 54, 100, 128, 129, 130, 161, 214, 221, 302, 338, 380, 398, 429, 431, 449, 450, 451, 566, 632, 678, 687, 688, 690, 691, 692, 702, 711, 714, 715, 716, 718, 719, 728, 729, 746, 787, 814, 820, 821, 825, 827, 829, 832, 836, 844, 845, 849, 850, 851, 857, 860, 861, 866, 867], "similarli": [130, 221, 235, 239, 691, 693, 725, 818, 857, 862, 864], "simpl": [21, 22, 48, 118, 119, 342, 406, 471, 631, 640, 641, 668, 683, 689, 692, 719, 816, 832, 836, 848, 850, 851, 852, 857, 860, 864], "simple_reduc": 100, "simplelosscomput": 861, "simplest": [716, 820], "simpli": [21, 22, 711, 714, 716, 717, 725, 727, 729, 832, 834, 835, 836, 848, 850, 851, 855, 857, 864], "simplic": [682, 694, 716, 830, 837, 851], "simplifi": [419, 715, 725, 816, 820, 848, 857, 861, 866], "simplifiedgat": 820, "simul": 850, "simultan": [290, 591, 594, 595, 596, 598, 690, 816, 854], "sin": 820, "sinc": [21, 27, 28, 56, 114, 115, 122, 145, 173, 182, 338, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 423, 424, 425, 426, 427, 428, 429, 431, 446, 447, 566, 571, 572, 632, 680, 684, 688, 702, 705, 712, 725, 727, 728, 815, 820, 825, 826, 835, 836, 837, 848, 850, 851, 854, 857], "singl": [0, 4, 6, 22, 27, 28, 34, 35, 41, 43, 44, 46, 48, 51, 53, 55, 56, 57, 58, 60, 61, 73, 74, 77, 87, 88, 93, 94, 95, 96, 100, 101, 102, 103, 104, 128, 129, 131, 148, 164, 210, 211, 212, 214, 215, 216, 219, 220, 300, 301, 304, 308, 336, 337, 338, 340, 348, 352, 386, 409, 432, 433, 434, 435, 436, 437, 438, 439, 440, 452, 453, 475, 555, 559, 560, 561, 563, 635, 642, 643, 688, 690, 691, 694, 702, 705, 713, 715, 723, 724, 725, 727, 787, 799, 801, 821, 823, 826, 827, 832, 836, 837, 844, 845, 850, 851, 854, 861, 868, 869], "singular": [630, 666], "site": [184, 825, 827, 830, 831, 848, 851], "six": [825, 827, 830, 831], "size": [4, 5, 9, 20, 21, 22, 31, 62, 63, 120, 122, 128, 129, 135, 136, 138, 139, 146, 147, 151, 152, 153, 159, 160, 161, 162, 163, 168, 169, 174, 177, 181, 184, 192, 194, 196, 205, 210, 234, 287, 292, 293, 295, 297, 299, 314, 322, 325, 380, 381, 383, 384, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 548, 549, 606, 613, 624, 642, 643, 648, 667, 680, 692, 694, 702, 706, 709, 710, 717, 718, 727, 739, 750, 780, 787, 792, 810, 814, 820, 825, 827, 830, 831, 834, 840, 841, 848, 849, 850, 851, 854, 855, 857, 861, 864, 866, 867], "skeleton": 857, "skip": [411, 688, 723, 774, 825, 827, 830, 831, 850, 851, 854], "sklearn": [380, 825, 827, 835, 844, 845], "skm": 845, "sleeplessai": 747, "slice": [4, 26, 210, 292, 299, 699, 715, 848, 851], "slightli": 214, "sln": 814, "slope": [391, 402, 404, 405], "slow": [22, 713, 835, 850], "slower": [338, 429, 431, 566, 861], "sm_53": [9, 705, 790], "small": [4, 10, 14, 70, 123, 124, 126, 167, 226, 229, 230, 244, 249, 286, 338, 403, 410, 423, 424, 429, 431, 472, 556, 566, 644, 678, 690, 691, 694, 719, 724, 727, 826, 832, 835, 836, 837, 844, 850], "smaller": [4, 130, 292, 296, 299, 385, 388, 609, 610, 611, 623, 655, 656, 661, 814, 849, 850], "smallest": [308, 339, 394, 429, 445, 563, 642, 643, 658], "smax": [591, 820], "smean": [591, 820], "smin": [591, 820], "smooth": [406, 422, 861], "sn": 860, "snap": [145, 175, 181], "snippet": [698, 701, 702, 726, 850], "so": [4, 5, 8, 9, 21, 22, 125, 130, 140, 186, 197, 226, 229, 230, 231, 238, 244, 248, 287, 290, 293, 295, 297, 314, 350, 392, 398, 472, 538, 553, 556, 560, 562, 571, 572, 634, 635, 636, 638, 686, 688, 689, 691, 692, 694, 710, 712, 716, 725, 729, 818, 827, 830, 831, 832, 833, 835, 836, 841, 844, 848, 849, 850, 851, 854, 857, 860, 866], "soc": 145, "social": [134, 167, 380, 697, 835], "socio": 166, "socket": 234, "soduku": 433, "softmax": [354, 386, 402, 414, 433, 435, 441, 444, 569, 570, 817, 834, 849, 851, 857, 860, 861], "softmax_edg": 570, "softmax_i": [398, 402, 404, 405], "softmax_nod": 569, "softwar": [813, 841], "solubl": 195, "solut": [22, 683, 712, 788, 844, 850], "solv": [292, 433, 813, 849, 850, 855, 864, 867], "some": [0, 4, 5, 9, 14, 21, 27, 28, 41, 43, 46, 48, 74, 93, 103, 113, 114, 115, 128, 129, 131, 134, 150, 168, 186, 235, 239, 246, 289, 292, 331, 350, 351, 382, 386, 392, 398, 401, 402, 404, 405, 406, 409, 412, 419, 425, 427, 550, 553, 638, 682, 685, 686, 688, 692, 693, 694, 696, 698, 701, 702, 705, 706, 709, 710, 721, 728, 774, 814, 821, 826, 833, 835, 844, 851, 857, 860, 866], "some_complex_data": 686, "someth": 724, "sometim": [22, 706, 711, 724, 725, 727, 826, 834], "somewhat": 711, "song": 747, "soon": 694, "sophist": 727, "sort": [39, 51, 52, 78, 123, 168, 186, 197, 205, 240, 296, 385, 414, 417, 438, 553, 562, 571, 572, 574, 642, 643, 854, 861], "sort_csc_by_tag": 562, "sort_csr_by_tag": 562, "sortbi": [642, 643], "sorted_by_typ": 385, "sorted_feat": [642, 643], "sorted_idx": [642, 643], "sortpool": [642, 643], "sourc": [1, 4, 5, 6, 9, 10, 12, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 471, 472, 473, 474, 475, 480, 481, 482, 483, 484, 485, 486, 488, 490, 492, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 532, 534, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 574, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 599, 600, 601, 602, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 672, 673, 674, 677, 678, 679, 686, 688, 693, 694, 696, 701, 702, 705, 714, 717, 721, 722, 774, 787, 796, 826, 830, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "source_typ": [702, 746, 787], "sourcetensor": 850, "sp": [698, 742, 783, 835, 850], "sp_": 820, "sp_add_v": 820, "sp_broadcast_v": [618, 620, 621, 622], "sp_mat": [126, 249], "space": [9, 329, 330, 448, 702, 849, 857, 861], "spaci": 159, "spam": 163, "span": 4, "spars": [4, 9, 10, 13, 31, 32, 41, 56, 62, 63, 89, 126, 131, 248, 249, 286, 331, 380, 384, 391, 423, 424, 452, 498, 555, 682, 691, 698, 709, 712, 742, 777, 783, 813, 816, 818, 835, 848, 852, 861, 864], "sparse2th": 850, "sparse_coo": [31, 62, 63], "sparse_coo_tensor": 850, "sparse_emb": 452, "sparse_matrix": 613, "sparse_optim": [691, 737, 777], "sparseadagrad": [4, 10, 452, 691, 737, 777], "sparseadam": [4, 10, 380, 384, 452], "sparseattn": 817, "sparsefloat": 850, "sparsematrix": [12, 30, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 718, 815, 820], "sparsemha": 817, "sparseneighborsampl": 718, "sparser": 861, "sparsetensor": [31, 62, 63, 850], "sparsif": [655, 656, 661], "sparsiti": [655, 656, 661, 817, 820], "spatial": [178, 179, 447, 448], "spatial_encod": [447, 448, 682], "spatialencod": 682, "spawn": [210, 292, 712, 866], "spd": 680, "speak": 850, "special": [184, 394, 697, 702, 711, 716, 719, 820, 824, 850, 854], "specif": [14, 21, 42, 59, 108, 125, 126, 131, 165, 234, 241, 245, 246, 248, 249, 286, 289, 296, 304, 331, 332, 335, 336, 337, 381, 384, 424, 451, 473, 474, 537, 545, 546, 556, 560, 561, 562, 563, 632, 655, 656, 661, 665, 682, 688, 690, 699, 702, 713, 714, 717, 787, 797, 813, 828, 830, 831, 841, 850, 866], "specifi": [4, 5, 6, 27, 28, 31, 34, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 68, 72, 75, 77, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 113, 117, 122, 125, 131, 140, 146, 148, 156, 159, 161, 162, 163, 169, 173, 196, 200, 214, 216, 217, 219, 229, 230, 239, 245, 248, 286, 287, 289, 293, 295, 296, 297, 304, 308, 309, 311, 314, 315, 331, 336, 337, 338, 382, 385, 394, 398, 399, 402, 403, 404, 405, 415, 416, 418, 430, 448, 473, 538, 544, 550, 551, 553, 559, 564, 566, 571, 572, 607, 609, 610, 611, 623, 632, 637, 638, 640, 684, 686, 688, 691, 692, 694, 695, 701, 702, 705, 707, 711, 716, 722, 725, 728, 746, 771, 787, 793, 806, 814, 818, 820, 825, 829, 830, 831, 833, 844, 854, 867], "specifici": 840, "spectral": [390, 395], "speed": [10, 21, 22, 292, 299, 302, 309, 638, 701, 706, 712, 727, 813, 821, 825, 827, 835, 854, 857, 860], "speedup": [694, 840, 851], "sphinx": [21, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 844, 845, 846, 848, 849, 850, 851, 854, 857, 860, 861, 864, 866, 867, 868], "sphinx_gallery_thumbnail_path": [832, 833, 834, 835, 836, 837], "sphinx_rtd_them": 21, "spilt": 192, "spinlock": 841, "splash": 854, "split": [13, 132, 133, 134, 137, 138, 139, 140, 144, 146, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 168, 169, 170, 171, 173, 176, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 205, 207, 209, 210, 213, 231, 238, 239, 292, 416, 538, 558, 637, 678, 684, 687, 688, 690, 692, 706, 707, 721, 722, 725, 729, 734, 771, 773, 774, 809, 825, 827, 835, 844, 850, 866], "split_dataset": 866, "split_edg": [687, 733, 773], "split_idx": [687, 733, 773], "split_mask": 205, "split_ratio": [138, 139, 140], "splitted_idx": 844, "split\ub97c": 777, "spmat": [698, 742, 783], "spmatrix": [12, 31, 126, 249, 574, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 604, 605, 606, 608, 609, 613, 614, 615, 616, 617, 619, 624, 625, 626, 627, 815, 816, 817, 818, 820], "spmm": [476, 477, 478, 479, 481, 482, 483, 484, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 518, 519, 522, 523, 524, 525, 613], "spmv": 851, "spp": 389, "spring_layout": [816, 850], "sprod": 591, "spspmm": 613, "sq": 860, "sqrt": [4, 10, 338, 403, 412, 414, 429, 431, 441, 448, 566, 817, 851, 860, 861], "squar": [4, 10, 249, 403, 412, 818], "squash": 860, "squeez": [53, 54, 686, 688, 714, 734, 774, 825, 835, 849, 850], "squirrel": 185, "squre": 421, "src": [5, 22, 34, 62, 63, 68, 98, 100, 110, 220, 242, 251, 354, 389, 398, 399, 402, 404, 405, 409, 412, 418, 449, 450, 451, 553, 556, 609, 632, 633, 637, 672, 688, 698, 705, 706, 711, 714, 718, 719, 722, 723, 725, 728, 734, 742, 749, 750, 754, 755, 757, 762, 763, 765, 768, 774, 783, 790, 792, 796, 797, 800, 803, 806, 807, 809, 811, 817, 830, 831, 834, 835, 837, 849, 850, 851, 854, 857, 861], "src_dot_dst": 861, "src_emb": [857, 861], "src_embed_expand": 857, "src_field": 861, "src_id": [59, 126, 249, 286, 686, 693, 779], "src_id_field": 686, "src_input": [723, 763, 807], "src_label": 850, "src_list": 857, "src_mul_egd": 861, "src_node": [632, 796], "src_node_id": 693, "src_po": 861, "src_seq": 861, "src_timestamp": 318, "src_type": [131, 331, 424, 426, 722, 762, 806], "src_x": 711, "srcdata": [4, 9, 68, 104, 208, 221, 225, 572, 632, 690, 691, 692, 706, 715, 718, 722, 736, 737, 750, 754, 755, 757, 758, 759, 762, 776, 777, 778, 792, 796, 797, 800, 801, 802, 806, 827, 845], "srcdst": 51, "srcnode": [68, 103, 208, 225, 632, 715, 754, 758, 796, 801], "srctype": [26, 45, 68, 226, 227, 707, 710, 714, 751, 793], "srl": 849, "ssh": [695, 780], "ssl": 200, "ssp": 389, "sst": 854, "sstbatch": 854, "sstdata": [688, 734, 774], "sstdataset": 854, "stabil": [4, 10, 244, 410, 472, 851, 857, 861], "stabl": 394, "stack": [20, 73, 338, 382, 406, 442, 455, 586, 672, 680, 682, 687, 707, 717, 729, 733, 751, 773, 793, 815, 816, 817, 818, 832, 834, 849, 850, 851], "staff": [155, 187, 193], "stage": [7, 304, 307, 312, 706, 714, 717, 816, 824, 827, 830, 831, 845, 861], "stai": [578, 579, 719], "stand": [402, 558, 680, 820, 866], "standalon": [4, 821], "standard": [5, 7, 21, 138, 140, 394, 416, 448, 680, 682, 683, 684, 686, 688, 849, 854], "stanford": [145, 175, 181, 184, 832, 854], "star": [161, 163, 172, 833], "start": [6, 32, 114, 115, 125, 131, 164, 229, 230, 239, 248, 286, 304, 309, 324, 331, 336, 337, 384, 547, 555, 557, 559, 571, 572, 686, 691, 692, 693, 696, 701, 702, 709, 713, 719, 727, 814, 815, 816, 817, 818, 822, 825, 827, 830, 831, 833, 844, 845, 849, 850, 854, 857, 860, 866], "start_epoch": [210, 213], "start_epoch_tim": 714, "start_idx": 6, "start_tim": 164, "state": [4, 10, 21, 142, 143, 166, 189, 190, 693, 709, 795, 821, 854, 857, 858, 860, 861, 864], "state_dict": [4, 840, 857], "statement": [715, 725, 820], "static": [22, 851, 860], "static_cast": 22, "staticmethod": [22, 825, 860], "statist": [132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 693, 849, 850, 851], "statu": 56, "std": [22, 394, 416, 825, 827, 860], "steadili": [858, 864], "step": [4, 9, 10, 21, 92, 141, 142, 143, 156, 189, 190, 214, 239, 302, 307, 380, 384, 411, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 452, 454, 498, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 518, 519, 522, 523, 524, 525, 547, 553, 559, 560, 662, 690, 691, 692, 693, 704, 705, 709, 710, 711, 713, 714, 716, 718, 719, 721, 725, 727, 728, 729, 736, 737, 754, 755, 757, 759, 765, 767, 768, 769, 776, 777, 796, 797, 800, 802, 803, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 820, 825, 827, 830, 831, 832, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 857, 861, 866, 867], "step_count": 857, "step_forward": 861, "step_siz": 817, "steplr": 817, "steven": 854, "still": [22, 70, 93, 108, 113, 231, 238, 686, 688, 711, 713, 714, 716, 719, 725, 727, 836, 861], "stochast": [3, 11, 183, 632, 703, 708, 711, 716, 722, 724, 727, 788, 794, 796, 797, 802, 806, 808, 810, 813, 826, 845, 857, 867], "stochastic_train": 711, "stochastical\ud558\uac8c": 795, "stochastictwolayergcn": [711, 716, 755, 756, 757, 759, 797, 799, 800, 802], "stochastictwolayerrgcn": [711, 716, 754, 755, 757, 759, 796, 797, 800, 802], "stop": [192, 557, 559, 725, 857], "stopiter": [825, 827], "stopping_mask": 192, "stopping\uc774\ub098": 809, "storag": [1, 4, 21, 116, 131, 211, 212, 286, 291, 294, 308, 331, 341, 553, 554, 686, 695, 701, 702, 821, 844], "store": [0, 1, 4, 7, 10, 31, 34, 53, 54, 59, 92, 95, 96, 100, 101, 102, 125, 126, 131, 134, 137, 138, 140, 141, 142, 143, 146, 149, 155, 156, 159, 161, 162, 163, 165, 168, 169, 171, 173, 180, 182, 184, 185, 186, 187, 188, 189, 190, 193, 200, 203, 204, 205, 206, 209, 220, 231, 233, 238, 239, 240, 241, 245, 248, 249, 286, 287, 288, 291, 292, 295, 297, 299, 309, 314, 315, 331, 332, 336, 337, 338, 343, 350, 354, 382, 385, 390, 429, 431, 452, 473, 500, 537, 538, 545, 546, 550, 551, 553, 555, 557, 559, 560, 561, 562, 563, 564, 566, 568, 571, 572, 609, 610, 611, 632, 637, 638, 639, 640, 654, 655, 656, 658, 661, 662, 665, 666, 684, 685, 686, 688, 690, 691, 692, 693, 694, 698, 699, 701, 702, 705, 709, 726, 729, 771, 772, 778, 779, 790, 820, 825, 827, 828, 830, 831, 832, 833, 837, 844, 845, 848, 854, 857, 861], "store_id": [49, 95, 96, 98, 106, 245, 332, 336, 337, 473, 537, 550, 551, 553, 568], "store_typ": 638, "stori": 821, "str": [4, 20, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 231, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 291, 294, 295, 296, 298, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 317, 318, 321, 324, 327, 329, 330, 331, 332, 336, 337, 338, 343, 349, 350, 351, 354, 382, 384, 385, 392, 393, 394, 396, 403, 407, 409, 412, 415, 416, 417, 418, 421, 424, 425, 426, 429, 430, 431, 437, 441, 442, 444, 445, 449, 452, 453, 454, 473, 474, 475, 497, 498, 500, 537, 544, 545, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 566, 569, 570, 571, 572, 591, 619, 632, 637, 638, 639, 640, 642, 643, 646, 648, 653, 654, 655, 656, 658, 661, 662, 664, 665, 666, 668, 678, 684, 723, 731, 763, 771, 807, 867], "straight": 706, "straightforward": [849, 850], "strategi": [197, 231, 238, 408, 426, 428, 557, 709, 824, 837, 844, 850], "stream": [210, 290, 300, 322], "streamlin": 824, "strength": [406, 697, 726], "strict": 694, "string": [4, 22, 23, 26, 39, 52, 109, 121, 122, 131, 183, 223, 289, 296, 304, 308, 319, 320, 331, 381, 382, 383, 384, 685, 686, 694, 702, 705, 707, 727, 810, 829, 830, 833], "strong": [342, 471], "strongli": 21, "structur": [0, 4, 7, 13, 19, 21, 22, 56, 59, 67, 89, 101, 102, 108, 112, 125, 126, 131, 132, 141, 142, 143, 147, 150, 154, 159, 161, 162, 163, 167, 170, 173, 174, 175, 176, 181, 184, 197, 205, 210, 233, 235, 239, 247, 248, 249, 286, 304, 309, 313, 331, 423, 424, 425, 427, 441, 545, 546, 547, 554, 564, 632, 656, 662, 682, 690, 693, 694, 696, 697, 698, 700, 701, 710, 727, 779, 817, 820, 824, 829, 844, 849, 851, 852, 854, 855, 857, 858, 862, 864], "strucutr": 828, "strutur": [89, 112, 694], "stub": 21, "student": [155, 187, 193], "studi": [151, 152, 162, 813], "studio": 814, "style": [9, 850, 851], "stype": [382, 723, 763, 807], "sub": [9, 144, 260, 261, 274, 275, 284, 285, 382, 455, 494, 495, 497, 498, 521, 522, 523, 524, 525, 526, 535, 536, 619, 705, 716, 749, 790, 820, 867], "sub_g": [245, 246, 332, 473, 474, 537, 702, 746, 787], "subbackward0": 389, "subclass": [3, 218, 298, 300, 312, 423, 424, 425, 426, 427, 428, 683, 684, 688, 710, 712], "subg": [209, 217, 710, 779], "subgraph": [1, 3, 7, 13, 26, 134, 208, 209, 210, 214, 216, 217, 218, 219, 220, 221, 233, 240, 241, 242, 245, 246, 291, 296, 298, 302, 307, 309, 310, 312, 317, 321, 332, 336, 337, 350, 423, 424, 425, 426, 427, 428, 473, 474, 537, 538, 560, 561, 562, 563, 690, 692, 708, 710, 711, 712, 713, 714, 717, 722, 723, 752, 754, 794, 796, 806, 824, 825, 827, 833, 835, 851, 857, 861], "subgraph_sampl": [302, 825], "subgraphs_nod": [298, 312], "subgraphsampl": [218, 298, 307, 710, 718, 825], "subgraphx": 426, "subject": [6, 849], "sublay": [436, 437, 861], "sublist": 56, "submatrix": [338, 718], "submodul": [4, 382, 721, 814, 834], "subnet": 844, "suboptim": [694, 779], "subpackag": [5, 851], "subplot": [816, 857, 860], "subprocess": [290, 292], "subreddit": 181, "subsect": 716, "subsequ": [302, 307, 693, 694], "subset": [4, 14, 45, 79, 82, 105, 130, 146, 155, 157, 158, 169, 178, 179, 187, 193, 195, 197, 205, 207, 217, 231, 238, 246, 288, 292, 299, 304, 381, 423, 424, 474, 691, 694, 699, 824, 826, 836, 857, 866], "subsetrandomsampl": 836, "subspac": 817, "substanc": 816, "substitut": [824, 851], "substract": [622, 820], "subtract": [626, 664], "subtract_min": 664, "subtre": 854, "succe": [4, 691], "success": 817, "successor": [90, 94, 337, 349, 857], "sudo": [814, 844], "suffer": 840, "suffici": 844, "suffix": [127, 685, 772], "sugar": [344, 345, 346, 347, 628, 629, 854], "suggest": [21, 23, 425, 427, 705, 706, 833, 841, 851], "suitabl": [338, 429, 431, 566, 689, 693, 694, 709], "sum": [4, 5, 9, 10, 20, 22, 73, 79, 82, 91, 92, 93, 94, 100, 113, 117, 118, 119, 122, 138, 139, 140, 173, 197, 198, 205, 240, 241, 382, 393, 394, 402, 407, 409, 415, 416, 420, 423, 424, 425, 426, 431, 439, 440, 443, 452, 455, 479, 484, 498, 500, 505, 511, 519, 525, 548, 549, 557, 559, 560, 566, 591, 628, 629, 640, 648, 664, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 691, 692, 705, 707, 715, 718, 719, 721, 722, 723, 726, 727, 729, 749, 751, 758, 761, 762, 763, 766, 767, 769, 777, 790, 791, 793, 801, 803, 805, 806, 807, 810, 812, 815, 816, 818, 820, 826, 832, 834, 836, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "sum_": [120, 122, 338, 342, 354, 385, 388, 389, 390, 394, 398, 400, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 417, 420, 429, 431, 432, 433, 435, 439, 453, 456, 471, 566, 569, 570, 705, 727, 728, 749, 767, 768, 790, 810, 811, 818, 820, 826, 834, 835, 849, 851, 854, 857, 861], "sum_edg": 128, "sum_i": [664, 860], "sum_nod": 129, "sum_p": 861, "summar": [21, 727, 824, 851, 857], "summari": 824, "summat": [119, 128, 129, 382, 499, 500, 548, 574, 640, 727, 810, 826, 834, 850], "sumpool": [817, 866], "super": [146, 169, 218, 298, 312, 413, 423, 424, 425, 426, 427, 428, 455, 684, 688, 710, 711, 713, 714, 715, 716, 718, 719, 721, 723, 725, 727, 728, 729, 731, 734, 754, 755, 756, 757, 758, 759, 761, 763, 765, 767, 768, 769, 771, 774, 796, 797, 799, 800, 801, 802, 803, 805, 807, 809, 810, 811, 812, 815, 816, 817, 818, 820, 825, 827, 832, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "superpixel": [146, 169], "superpixeldataset": [146, 169], "superscript": 848, "superset": 632, "supervis": [140, 147, 183, 386, 396, 412, 654, 694, 713, 779, 799, 832, 848, 857], "supplementari": 399, "support": [4, 5, 10, 13, 22, 110, 117, 122, 126, 138, 139, 146, 169, 210, 233, 239, 249, 290, 292, 294, 299, 304, 341, 343, 350, 351, 354, 385, 397, 403, 452, 454, 455, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 553, 555, 557, 559, 560, 561, 562, 564, 567, 574, 613, 633, 639, 648, 667, 678, 686, 690, 691, 692, 693, 694, 698, 701, 705, 716, 719, 721, 726, 727, 761, 805, 813, 814, 815, 816, 817, 818, 820, 827, 830, 831, 832, 834, 837, 841, 861, 867], "suppos": [21, 296, 316, 499, 726, 791, 826, 848, 861], "suppress": [386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 837], "sure": [6, 21, 22, 229, 230, 292, 407, 418, 432, 434, 438, 439, 441, 444, 562, 685, 693, 772, 817, 857], "surpass": 21, "svd": [630, 666], "svd_pe": 666, "svdpe": 13, "swap": 317, "switch": [814, 816], "sym": 454, "sym_new_etyp": 647, "symbol": [5, 686, 861], "symmetr": [183, 340, 412, 454, 654, 665, 697, 725, 809, 815, 820, 850], "sympi": [825, 827, 830, 831], "sync": 844, "synchron": [4, 322, 691, 777, 841, 857, 866, 867], "synset": 191, "syntact": [182, 854, 855, 864], "syntax": [344, 345, 346, 347, 628, 629, 702, 725, 787, 854], "synthet": [14, 141, 142, 143, 172, 189, 190, 686, 724, 725, 809, 836, 837], "syntheticdataset": 837, "system": [4, 22, 166, 173, 452, 555, 697, 818, 835, 840, 841, 844], "systemat": [425, 427], "systemctl": 844, "t": [4, 10, 21, 56, 60, 87, 89, 118, 119, 131, 163, 164, 168, 200, 214, 240, 241, 242, 291, 331, 349, 385, 388, 398, 402, 404, 405, 409, 411, 414, 417, 421, 422, 424, 425, 426, 435, 441, 449, 450, 451, 453, 454, 555, 557, 559, 560, 632, 638, 650, 656, 665, 693, 694, 698, 704, 713, 718, 719, 748, 789, 817, 818, 820, 825, 827, 830, 831, 844, 850, 851, 857, 861], "t0": [692, 778, 848, 851], "t1": [692, 778], "t_co": [825, 827], "t_i": 861, "t_j": 861, "tabl": [178, 179, 380, 381, 384, 694, 821, 837, 851], "tabular": [694, 698], "tackl": [425, 426, 427, 428, 850], "tag": [21, 562, 571, 572], "tag_offset": [571, 572], "tag_offset_nam": [562, 571, 572], "tag_pos_nam": [571, 572], "tag_typ": [571, 572], "tail": [304, 450, 451], "take": [20, 51, 118, 119, 120, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 210, 214, 215, 216, 219, 220, 240, 241, 286, 292, 299, 312, 340, 398, 399, 402, 404, 405, 413, 415, 416, 418, 423, 424, 425, 426, 427, 428, 556, 560, 561, 562, 563, 591, 597, 617, 619, 668, 682, 686, 688, 691, 694, 701, 702, 705, 707, 709, 710, 711, 712, 714, 716, 720, 722, 723, 724, 725, 726, 727, 729, 814, 816, 818, 826, 834, 835, 837, 840, 841, 849, 850, 851, 854, 857, 861, 866], "taken": [161, 163, 850], "talk": 836, "tanh": [820, 854], "tape": 137, "tar": [685, 732, 772], "target": [108, 132, 133, 144, 170, 177, 178, 179, 201, 242, 317, 405, 414, 426, 428, 600, 694, 716, 717, 825, 827, 861], "target_class": [426, 428], "target_dir": 201, "target_idx": 849, "target_ntyp": 140, "task": [2, 7, 21, 122, 132, 133, 135, 136, 137, 138, 139, 140, 144, 146, 147, 150, 151, 152, 153, 154, 159, 160, 161, 163, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 188, 194, 195, 197, 198, 288, 289, 291, 302, 303, 304, 307, 308, 687, 688, 691, 694, 710, 716, 718, 724, 725, 727, 728, 729, 774, 813, 817, 818, 821, 824, 825, 827, 828, 832, 836, 844, 845, 851, 857, 866, 867], "task_lint": 21, "task_nam": [825, 827], "task_unit_test": 21, "tau": [414, 421, 422], "tb": 385, "tcmalloc": 841, "tcp": [866, 867], "tcpstore": 452, "teach": 835, "teacher": 857, "team": [21, 861, 866], "techniqu": [384, 725, 854, 861], "technologi": 841, "teleport": 387, "tell": [5, 21, 130, 210, 213, 239, 686, 716, 833, 834, 836], "temperatur": [425, 427], "templat": [21, 156, 684, 771], "tempor": [25, 145, 164, 166, 214, 296, 298, 312], "temporal_sample_neighbor": 296, "temporari": 25, "ten": 159, "tend": [120, 707], "tensor": [0, 1, 5, 6, 7, 9, 12, 13, 20, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 138, 139, 140, 146, 159, 165, 168, 169, 172, 173, 175, 177, 178, 179, 184, 186, 195, 210, 213, 220, 221, 226, 227, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 286, 287, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 322, 324, 325, 326, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 542, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 582, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 648, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 686, 688, 692, 694, 698, 699, 700, 701, 702, 705, 710, 712, 715, 718, 719, 720, 722, 723, 726, 727, 729, 734, 737, 743, 744, 745, 746, 767, 774, 784, 785, 786, 787, 791, 801, 803, 810, 814, 816, 817, 818, 820, 821, 825, 827, 830, 831, 832, 833, 834, 836, 837, 844, 849, 851, 852, 854, 857, 861, 864, 866, 867], "tensor_new": 850, "tensor_numpi": 837, "tensorcor": 719, "tensorcore\ub4e4\uc744": 803, "tensorflow": [9, 13, 21, 23, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 688, 701, 715, 720, 727, 729, 801, 804, 810, 813, 821], "tensorflow\u7684keras\u5c42": 760, "tensorflow\u7684tensor\u7c7b\u6216mxnet\u7684ndarray\u7c7b": 745, "tensorflow\uc5d0\uc11c\ub294": 774, "tensorflow\uc5d0\uc11c\ub3c4": 812, "tensorflow\uc758": 786, "term": [4, 10, 14, 144, 149, 185, 316, 380, 383, 391, 399, 402, 403, 404, 412, 422, 682, 813, 840, 850, 854, 857, 860], "termin": [555, 559], "termination_prob": 555, "tesla": 14, "test": [4, 9, 25, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 239, 291, 308, 313, 326, 687, 691, 694, 718, 725, 729, 733, 737, 738, 773, 777, 779, 809, 814, 815, 816, 817, 818, 820, 824, 825, 827, 829, 830, 831, 832, 834, 836, 837, 844, 845, 848, 851, 861, 866, 867], "test_acc": [815, 816, 818, 832, 834, 866, 867], "test_data": [164, 166, 184], "test_dataload": [817, 836], "test_edg": [139, 845], "test_edge_mask": [157, 158, 191], "test_el": 326, "test_idx": [138, 140, 817, 849], "test_label": [687, 733, 773, 845], "test_load": [687, 733, 773, 866], "test_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 380, 686, 688, 729, 734, 769, 774, 812, 815, 816, 818, 832, 834, 837, 844, 848, 849], "test_metr": 817, "test_neg_dst": 845, "test_neg_g": 835, "test_neg_src": 845, "test_neg_u": 835, "test_neg_v": 835, "test_nid": 844, "test_pos_dst": 845, "test_pos_g": 835, "test_pos_src": 845, "test_pos_u": 835, "test_pos_v": 835, "test_pr": 845, "test_rat": 173, "test_ratio": 173, "test_sampl": 836, "test_set": [308, 313, 825, 827, 829, 830, 831, 866, 867], "test_siz": [817, 835], "texa": 187, "text": [161, 182, 389, 406, 412, 414, 421, 441, 694, 704, 724, 748, 789, 817, 834, 849, 851, 857, 860], "textbf": [857, 860], "textrm": [178, 179, 854, 861], "textur": 860, "tf": [4, 161, 821], "tf_force_gpu_allow_growth": 814, "tf_geometr": 821, "tgt": 861, "tgt_emb": 861, "tgt_po": 861, "tgt_seq": 861, "tgt_y": 861, "tgz": [685, 688, 734, 772, 774], "tgz\u6587\u4ef6": 732, "th": [4, 5, 9, 10, 27, 34, 36, 37, 48, 53, 55, 60, 87, 100, 114, 116, 122, 128, 129, 138, 146, 147, 157, 158, 165, 168, 169, 172, 174, 175, 186, 191, 214, 216, 219, 220, 245, 338, 340, 354, 382, 386, 387, 388, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 455, 473, 500, 544, 548, 549, 554, 558, 559, 564, 569, 570, 631, 638, 640, 642, 643, 667, 677, 678, 680, 682, 690, 691, 692, 693, 694, 698, 699, 700, 701, 702, 709, 727, 736, 737, 742, 743, 744, 745, 746, 776, 777, 778, 779, 783, 784, 785, 786, 787, 810, 817, 818, 820, 826, 837, 840, 844, 845, 848, 849, 850, 854, 860, 861], "than": [4, 21, 27, 28, 66, 95, 96, 118, 119, 120, 121, 131, 139, 142, 143, 161, 168, 178, 189, 190, 226, 286, 289, 292, 296, 298, 304, 312, 314, 331, 338, 385, 388, 425, 427, 429, 431, 446, 456, 556, 560, 561, 562, 566, 609, 610, 611, 623, 655, 656, 661, 701, 702, 706, 712, 723, 725, 728, 746, 787, 814, 818, 821, 830, 831, 840, 841, 844, 849, 850, 851, 854, 857], "thei": [1, 4, 9, 11, 20, 21, 26, 56, 117, 119, 122, 130, 131, 138, 140, 151, 152, 188, 233, 240, 241, 244, 304, 309, 318, 331, 348, 349, 388, 455, 472, 554, 557, 559, 560, 683, 684, 690, 691, 692, 694, 699, 700, 702, 705, 711, 715, 719, 722, 723, 724, 726, 817, 821, 825, 827, 829, 830, 831, 832, 834, 836, 844, 850, 851, 854, 857, 860], "them": [1, 4, 5, 9, 41, 48, 56, 68, 73, 93, 100, 113, 120, 130, 133, 142, 144, 148, 149, 155, 178, 185, 187, 193, 205, 221, 244, 245, 248, 289, 317, 332, 336, 337, 338, 388, 423, 424, 425, 426, 427, 428, 433, 442, 449, 472, 473, 537, 552, 562, 564, 608, 614, 632, 640, 646, 686, 690, 691, 692, 694, 697, 698, 702, 704, 712, 717, 725, 727, 813, 820, 826, 828, 830, 831, 832, 833, 835, 844, 850, 854, 855, 857, 861, 864, 866], "themselv": [21, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 711, 826, 835], "theori": 850, "ther": 422, "therefor": [4, 26, 220, 292, 299, 638, 691, 692, 711, 712, 818, 835, 845, 849, 850, 851, 854], "theta": [401, 402, 407, 408, 415, 419, 420, 816, 850], "theta_": [816, 850], "theta_0": 816, "theta_i": 850, "theta_k": 655, "theta_r": 816, "theta_x": 850, "thew": 26, "thi": [4, 5, 6, 7, 8, 10, 14, 21, 22, 24, 26, 27, 28, 34, 40, 41, 44, 45, 48, 51, 52, 59, 70, 73, 79, 82, 89, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 137, 140, 141, 142, 143, 145, 148, 156, 157, 158, 159, 160, 162, 164, 165, 166, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 197, 209, 210, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 231, 234, 238, 239, 240, 241, 242, 244, 245, 246, 286, 290, 292, 296, 298, 299, 300, 302, 304, 307, 308, 309, 312, 317, 322, 331, 332, 335, 336, 337, 338, 339, 341, 349, 350, 351, 354, 382, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 409, 411, 412, 416, 419, 420, 423, 424, 425, 426, 427, 428, 429, 431, 433, 435, 442, 445, 446, 447, 448, 452, 453, 455, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 547, 550, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 563, 566, 571, 572, 578, 579, 602, 609, 610, 611, 613, 619, 623, 630, 631, 632, 634, 635, 636, 637, 638, 640, 641, 654, 655, 656, 657, 658, 659, 661, 662, 663, 665, 666, 667, 675, 676, 677, 678, 680, 681, 682, 683, 684, 687, 688, 689, 690, 691, 692, 693, 694, 695, 698, 701, 702, 704, 705, 706, 708, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 774, 779, 799, 812, 814, 815, 816, 817, 818, 820, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 852, 854, 855, 857, 858, 860, 861, 862, 864, 866, 867], "thing": [210, 226, 556, 689, 711, 854], "third": [131, 210, 214, 215, 216, 219, 220, 286, 331, 558], "thoma": 822, "thorough": 632, "thoroughli": [850, 851], "those": [27, 28, 114, 116, 209, 220, 242, 292, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 429, 431, 705, 706, 709, 721, 826, 833, 851, 854, 857, 861], "though": [21, 22, 240, 241, 560, 698, 850], "thought": [857, 861], "thousand": 827, "thre": 861, "thread": [21, 210, 234, 290, 844, 867], "three": [14, 48, 62, 63, 80, 126, 131, 161, 163, 198, 217, 230, 239, 249, 286, 331, 382, 454, 566, 638, 686, 688, 690, 691, 693, 694, 705, 713, 718, 722, 829, 834, 835, 837, 840, 849, 850, 854, 857, 861, 867], "threshold": [296, 422, 426, 428, 655, 656, 661], "through": [22, 235, 691, 727, 813, 836, 844, 845, 849], "throughout": [304, 701, 857], "throughput": 690, "throw": 678, "thrown": [825, 827, 855, 864], "thu": [4, 9, 14, 22, 70, 122, 182, 198, 244, 245, 302, 332, 336, 337, 392, 419, 456, 472, 473, 537, 548, 549, 686, 691, 692, 694, 698, 700, 719, 816, 848, 849, 850, 851, 854, 857, 860, 861, 866], "thumb": 21, "thumbnail": [832, 833, 834, 835, 836, 837], "ti": 51, "tid": 692, "tild": [387, 390, 406, 414, 419, 420, 454, 816, 848, 850], "tile": 860, "time": [6, 113, 118, 164, 166, 200, 214, 296, 299, 302, 307, 336, 337, 385, 412, 413, 429, 445, 556, 559, 560, 656, 665, 684, 689, 691, 694, 706, 713, 714, 719, 727, 750, 792, 816, 817, 818, 820, 821, 825, 827, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "time_enc": 861, "timestamp": [296, 298, 312, 318], "tini": [130, 184, 854], "tiny_data": 184, "tiny_sst": 854, "tip": [210, 709], "tissu": 851, "titl": [698, 742, 783], "tmp": [314, 315, 425, 427, 694, 738, 779], "to_add_edg": 857, "to_bfloat16": 719, "to_bidirect": [6, 116, 701, 745, 786], "to_block": [4, 131, 691, 692, 710, 712, 737, 754, 777, 778, 796, 798], "to_csv": [830, 831], "to_dens": [816, 818, 820], "to_direct": [247, 248], "to_heterogen": 638, "to_homogen": [414, 417, 637, 702, 746, 787, 849], "to_homogenen": 26, "to_jshtml": 816, "to_loc": 4, "to_networkx": [816, 850, 854, 860], "to_numpi": [686, 837], "to_partid": 4, "to_pyg_data": 304, "to_simpl": [118, 119, 186, 641], "to_undirect": 816, "tocoo": [126, 249], "todens": 835, "todo": [825, 827], "togeth": [11, 26, 91, 92, 101, 102, 130, 135, 136, 137, 214, 216, 239, 329, 339, 348, 420, 421, 422, 432, 434, 438, 439, 553, 694, 702, 717, 727, 818, 830, 831, 850, 866], "toi": [175, 861], "token": [854, 861, 862, 864], "tolevi": 13, "tolist": [558, 816, 827, 854], "tolok": 188, "toloka": 188, "tone": 164, "too": [4, 22, 60, 87, 239, 290, 292, 299, 308, 694, 700, 712, 785, 820, 826, 861], "tool": [690, 691, 694, 739, 779, 780, 814, 820, 821, 827, 832, 844], "toolbox": 399, "top": [142, 143, 161, 414, 438, 642, 643, 691, 694, 813, 817, 818, 820, 824, 835, 840, 844, 849], "topic": [331, 639, 693, 709, 850], "topk": [338, 429, 431, 566, 642, 643], "topolog": [543, 644, 854], "topologi": [13, 291, 308, 388, 420, 726, 854, 855, 857, 864], "topological_nodes_gener": [543, 854], "torch": [4, 5, 6, 8, 9, 10, 12, 20, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 131, 138, 146, 147, 165, 168, 169, 172, 174, 183, 184, 186, 195, 209, 210, 213, 214, 216, 217, 219, 220, 226, 227, 243, 244, 245, 246, 248, 249, 262, 263, 264, 265, 286, 287, 289, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 322, 324, 325, 326, 329, 330, 331, 332, 336, 337, 338, 342, 348, 352, 353, 354, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 471, 472, 473, 474, 500, 537, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 558, 559, 560, 561, 562, 563, 564, 566, 568, 569, 570, 571, 572, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 591, 592, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 631, 632, 633, 637, 638, 639, 640, 642, 643, 647, 648, 651, 652, 653, 654, 655, 656, 659, 660, 661, 664, 665, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 686, 687, 688, 690, 691, 693, 694, 698, 699, 700, 701, 702, 705, 706, 710, 711, 712, 713, 714, 715, 716, 718, 719, 721, 722, 723, 724, 725, 727, 728, 729, 733, 734, 736, 737, 742, 743, 744, 745, 746, 749, 750, 754, 755, 756, 757, 758, 759, 761, 762, 763, 764, 765, 767, 768, 769, 773, 774, 776, 777, 783, 784, 785, 786, 787, 790, 792, 796, 797, 798, 799, 800, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 815, 816, 817, 818, 820, 825, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "torch_feat": [297, 314], "torch_featur": 314, "torchaudio": 820, "torchbasedfeatur": [297, 830, 831], "torchbasedfeaturestor": [308, 830, 831], "torchdata": [292, 299, 717, 825, 827, 830, 831], "torchmetr": [818, 867], "torchvis": 820, "tosimpl": [13, 650], "total": [4, 10, 80, 81, 181, 292, 296, 299, 302, 307, 311, 380, 385, 413, 431, 440, 688, 692, 693, 717, 823, 832, 833, 834, 835, 836, 837, 839, 840, 841, 843, 844, 845, 847, 848, 849, 850, 851, 853, 854, 856, 857, 859, 860, 861, 863, 865, 866, 867, 869], "total_correct": 866, "total_loss": [714, 718, 817, 825, 866, 867], "total_node_weight": 693, "total_num_edg": [296, 324], "total_num_nod": [296, 324, 713, 827, 830, 831], "touch": 21, "toward": 651, "tower": [394, 416], "tp_": 851, "tq": [818, 827], "tqdm": [713, 714, 817, 818, 825, 827, 830, 831, 861, 867], "tqdm_notebook": [825, 827], "tr": 854, "trace": [557, 558, 559], "traceback": [825, 827], "track": 854, "trade": [145, 426, 428, 861], "traffic": [149, 185], "train": [3, 4, 7, 9, 10, 11, 23, 25, 89, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 209, 210, 213, 214, 215, 216, 219, 220, 231, 234, 238, 239, 291, 292, 299, 302, 308, 313, 384, 394, 408, 413, 416, 419, 423, 424, 425, 426, 427, 428, 452, 630, 632, 666, 681, 682, 687, 688, 691, 692, 693, 694, 703, 705, 708, 710, 712, 713, 717, 722, 733, 736, 764, 767, 769, 773, 774, 776, 779, 790, 796, 797, 802, 803, 808, 809, 810, 812, 813, 814, 821, 823, 825, 826, 829, 830, 831, 837, 838, 839, 840, 841, 848, 851, 854, 855, 857, 858, 860, 864, 866], "train_acc": [832, 834, 849], "train_data": [164, 166, 184], "train_dataload": [817, 825, 827, 836, 844, 845], "train_dataset": [146, 169], "train_dataset_subset": [146, 169], "train_dist": [739, 780, 844], "train_edg": [157, 158, 191], "train_edge_mask": [157, 158, 191], "train_eid": [214, 216, 220, 755, 797, 845], "train_eid_dict": [755, 757, 797, 800], "train_g": [157, 158, 191, 835], "train_graph": 139, "train_idx": [138, 140, 688, 734, 774, 817, 849], "train_it": 861, "train_label": [687, 733, 773], "train_load": [687, 733, 773, 854, 866], "train_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 239, 380, 423, 686, 688, 690, 691, 694, 719, 724, 725, 729, 734, 736, 737, 738, 764, 765, 769, 774, 776, 777, 779, 803, 808, 809, 812, 815, 816, 818, 832, 834, 837, 844, 848, 849, 851], "train_neg_g": 835, "train_neg_u": 835, "train_neg_v": 835, "train_nid": [210, 214, 215, 216, 219, 690, 691, 712, 736, 737, 754, 759, 776, 777, 796, 798, 802, 840, 844, 845], "train_nid_dict": [759, 802], "train_on": [209, 210, 213, 214, 215, 216, 217, 220], "train_pos_g": 835, "train_pos_u": 835, "train_pos_v": 835, "train_rat": 173, "train_sampl": 836, "train_se": [757, 800], "train_set": [157, 158, 191, 308, 313, 710, 711, 716, 825, 827, 829, 830, 831, 850, 866, 867], "train_siz": [161, 162, 163, 164, 166, 817, 835], "train_step": [425, 427], "train_step_nod": [425, 427], "trainabl": [4, 815, 820, 849], "trainer": [4, 231, 238, 239, 690, 691, 692, 694, 695, 844, 845], "trainer_id": 239, "trainer\uc5d0\uac8c": 776, "training_load": 850, "training_set": 195, "training\uc744": 790, "trainset": [147, 174, 854], "trang": [714, 818], "transact": 145, "transduct": [140, 197, 198, 419, 691, 737, 777], "transfer": [210, 289], "transform": [9, 13, 26, 27, 28, 114, 115, 116, 117, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 245, 246, 305, 332, 335, 338, 341, 349, 354, 383, 385, 388, 394, 398, 402, 414, 424, 425, 426, 429, 430, 431, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 456, 473, 474, 537, 544, 551, 554, 562, 631, 640, 641, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 682, 686, 694, 698, 710, 711, 712, 714, 717, 719, 727, 815, 819, 823, 825, 827, 848, 849, 850, 851, 854, 857, 862, 863, 864], "transform1": 658, "transform2": 658, "transform3": 658, "transformer_encod": 445, "transit": 559, "translat": [158, 191, 450, 861], "translationdataset": 861, "transmiss": 210, "transpar": [692, 717], "transpos": [31, 554, 571, 573, 599, 817, 820, 850], "travel": [816, 857], "travers": [13, 91, 92, 123, 124, 229, 230, 540, 542, 543, 555, 557, 559, 644], "traversal_ord": 854, "treat": [309, 318, 384, 560, 561, 640, 665, 702, 722, 746, 787, 833, 835, 836, 837, 850, 854, 855, 861, 864], "tree": [14, 21, 159, 182, 184, 189, 190, 230, 338, 426, 428, 429, 431, 566, 823, 855, 856, 858, 861, 864], "tree_height": [189, 190], "treebank": [184, 854], "treelstm": 854, "treelstmcel": 854, "tri": [4, 148, 239, 350, 351], "trick": [22, 848], "trigger": [0, 91, 92, 403, 707, 719, 793, 817, 821, 834, 837, 850, 851, 854], "tripl": [450, 451, 849], "triplet": [4, 30, 31, 32, 34, 39, 47, 48, 52, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 131, 223, 246, 331, 475, 548, 550, 552, 569, 637, 686, 702], "trivial": [9, 339, 394, 445, 658, 854], "troubl": 21, "true": [4, 6, 9, 10, 25, 31, 48, 49, 57, 58, 65, 66, 67, 69, 95, 96, 98, 99, 106, 111, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 197, 198, 200, 201, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 235, 237, 238, 239, 240, 241, 245, 247, 286, 290, 292, 296, 299, 302, 307, 308, 309, 314, 315, 325, 326, 332, 333, 335, 336, 337, 338, 339, 341, 380, 383, 384, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 441, 442, 443, 444, 445, 446, 454, 473, 537, 538, 540, 542, 543, 544, 550, 551, 553, 554, 556, 557, 559, 560, 561, 562, 563, 566, 567, 568, 571, 585, 630, 631, 632, 638, 639, 640, 642, 643, 644, 646, 647, 648, 658, 659, 664, 666, 679, 680, 686, 687, 688, 690, 691, 693, 694, 710, 711, 712, 713, 714, 716, 717, 718, 719, 721, 727, 733, 734, 736, 737, 754, 755, 756, 757, 759, 761, 767, 773, 774, 776, 777, 779, 796, 797, 798, 799, 800, 802, 803, 805, 810, 814, 815, 816, 817, 818, 820, 825, 827, 829, 830, 831, 832, 836, 837, 840, 844, 845, 848, 849, 850, 854, 857, 860, 861, 866, 867], "truediv": 619, "trueli": [693, 694], "truli": [239, 713], "truncat": 446, "trust": 145, "truth": [150, 154, 167, 176, 729, 812, 832, 845, 850, 857, 867], "trv_a_tre": 854, "trv_graph": 854, "try": [116, 130, 207, 226, 239, 335, 341, 554, 555, 556, 631, 640, 693, 815, 816, 817, 818, 820, 825, 827, 830, 831, 836, 841], "tudata": [688, 734, 774], "tudataset": 25, "tune": [192, 290, 406, 719, 813, 840, 841, 851], "tupl": [4, 10, 22, 26, 27, 32, 36, 48, 51, 54, 61, 73, 88, 95, 123, 125, 131, 132, 133, 139, 144, 156, 170, 183, 196, 217, 239, 248, 286, 287, 295, 296, 300, 301, 304, 309, 317, 318, 319, 320, 329, 330, 331, 349, 352, 353, 354, 381, 382, 383, 424, 456, 556, 559, 560, 576, 578, 579, 593, 607, 609, 610, 611, 612, 623, 687, 688, 692, 701, 715, 722, 723, 758, 762, 773, 801, 806], "tuple\uacfc": 778, "tuple\uc744": [774, 778], "tuple\uc758": 806, "ture": [9, 705, 790], "turn": [21, 210, 213, 333, 350, 538, 719, 817, 826, 841, 844, 850, 857], "tutori": [9, 21, 210, 214, 215, 216, 292, 682, 698, 705, 711, 712, 715, 716, 718, 783, 796, 797, 802, 815, 816, 817, 818, 820, 822, 823, 824, 825, 826, 827, 828, 830, 831, 832, 833, 834, 835, 836, 837, 839, 840, 843, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 869], "tvm": 22, "tvt": 313, "tweak": 21, "tweet": 159, "twirl": 421, "twitter": [159, 697], "two": [3, 4, 5, 9, 26, 34, 45, 48, 51, 52, 53, 58, 68, 77, 79, 81, 82, 100, 105, 116, 118, 119, 125, 126, 128, 129, 130, 135, 136, 141, 142, 159, 162, 163, 178, 180, 182, 188, 231, 238, 239, 244, 248, 296, 304, 336, 337, 338, 349, 350, 351, 384, 385, 386, 388, 389, 394, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 412, 418, 452, 453, 455, 472, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 547, 548, 549, 553, 555, 556, 562, 569, 570, 571, 572, 605, 613, 616, 619, 625, 631, 632, 637, 638, 640, 642, 643, 646, 662, 678, 682, 686, 691, 692, 693, 694, 696, 697, 698, 699, 700, 702, 705, 706, 707, 711, 713, 715, 716, 719, 723, 725, 727, 728, 729, 797, 812, 818, 820, 826, 827, 829, 832, 835, 836, 837, 844, 848, 849, 850, 851, 852, 854, 857, 860, 861, 862, 864], "twolayergcn": [716, 759, 802], "tx": 665, "txt": [690, 691, 693, 694, 695, 736, 737, 739, 776, 777, 779, 780, 844, 845], "ty_a": 637, "ty_b": 637, "type": [4, 5, 6, 10, 13, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 286, 287, 292, 293, 294, 295, 296, 297, 299, 302, 304, 307, 308, 309, 311, 314, 315, 317, 318, 321, 322, 324, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 348, 349, 350, 351, 352, 353, 354, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 456, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 566, 568, 569, 570, 571, 572, 574, 575, 577, 580, 581, 582, 583, 584, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 654, 663, 669, 672, 674, 677, 678, 686, 688, 690, 692, 693, 694, 696, 697, 698, 699, 700, 701, 705, 707, 711, 714, 715, 716, 718, 719, 721, 723, 724, 727, 728, 729, 744, 746, 761, 762, 774, 778, 785, 787, 793, 796, 805, 809, 810, 811, 814, 820, 825, 827, 829, 830, 831, 833, 836, 837, 848, 849, 851, 854, 857, 866], "type_": [222, 223, 224, 225], "type_edge_id": 779, "type_nam": [287, 295], "type_per_edg": [296, 324, 830], "type_wise_edge_id": 693, "type_wise_id": [692, 778], "type_wise_node_id": 693, "typestr": [62, 63], "typic": [1, 4, 11, 240, 385, 688, 695, 705, 719, 721, 722, 816, 841, 850, 857, 861], "typl": [128, 642], "tzdata": [825, 827, 830, 831], "u": [4, 5, 21, 27, 48, 51, 57, 61, 87, 88, 90, 94, 107, 114, 130, 131, 161, 163, 178, 179, 226, 227, 230, 243, 251, 252, 254, 256, 258, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 281, 283, 285, 286, 296, 316, 331, 335, 341, 342, 349, 398, 399, 401, 402, 404, 405, 409, 412, 413, 415, 416, 418, 471, 497, 498, 554, 570, 631, 632, 640, 659, 672, 685, 688, 697, 700, 701, 702, 704, 705, 706, 717, 728, 734, 741, 744, 745, 746, 748, 749, 750, 754, 768, 774, 782, 785, 786, 787, 789, 790, 792, 796, 811, 813, 816, 826, 833, 834, 835, 841, 848, 850, 854, 857, 860, 861], "u0": [178, 179], "u0_atom": 179, "u_": [409, 854], "u_0": [178, 179], "u_add_": 5, "u_add_e_max": 9, "u_add_v": [5, 34, 455, 705, 706, 749, 750, 790, 792], "u_atom": 179, "u_attr": 125, "u_div_": 5, "u_div_v": [5, 9], "u_dot_": 5, "u_dot_v": [5, 9, 719, 725, 728, 757, 765, 768, 800, 803, 809, 811, 835], "u_f": 854, "u_fea": [401, 409, 412, 418], "u_feat": [398, 399, 402, 404, 405, 415], "u_hat": 860, "u_iou": 854, "u_j": 854, "u_l": 854, "u_mul_": [5, 9, 423, 424, 705, 719, 726, 749, 766, 790, 791, 803, 834, 861], "u_mul_e_sum": 9, "u_mul_e_udf": 834, "u_mul_v": 5, "u_sub_": 5, "u_sub_v": 5, "ubuntu": [14, 139, 814, 825, 827, 830, 831, 837, 841, 850, 854, 857, 860], "uc": 384, "ucidata": 167, "udf": [20, 691, 705, 719, 737, 790, 803, 851, 854], "udf_max": 5, "udf_u_mul_": 5, "udf\ub294": 790, "udf\uc640": 790, "udf\uc758": 790, "uint32": 814, "uint8": [691, 737, 777, 830, 861], "uk": 144, "un": [837, 851], "unari": [5, 705, 790], "unbatch": [101, 102, 122, 836, 854], "unblock": [386, 398, 401, 402, 404, 405, 406, 409, 412, 419], "uncertainti": [197, 205], "unchang": 109, "uncom": [815, 816, 817, 818, 820], "uncompress": 201, "uncov": 849, "undefin": [229, 230, 240, 241, 332, 336, 337, 473, 537, 557, 559, 560, 561, 562, 691, 837], "under": [1, 5, 14, 22, 95, 96, 137, 161, 163, 171, 180, 182, 188, 197, 205, 239, 245, 332, 336, 337, 473, 537, 550, 551, 553, 562, 568, 640, 685, 686, 690, 693, 694, 695, 709, 772, 813, 814, 834, 835, 844, 848, 849, 851, 857, 866], "underflow": [719, 803], "underli": [425, 427, 691], "underset": [723, 763, 807, 850], "understand": [21, 440, 448, 693, 709, 816, 821, 823, 826, 834, 836, 844, 850, 852, 853, 864], "undirect": [6, 173, 220, 247, 248, 288, 697, 698, 701, 782, 797, 833, 857], "uneven": 867, "unexist": [441, 444], "unfamiliar": 21, "uni": [44, 45, 68, 79, 82, 104, 105, 126, 401, 545], "unidirect": [116, 125, 349, 396, 397, 398, 399, 401, 402, 404, 405, 409, 412, 415, 418, 715, 801], "unifi": [21, 210, 304, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 712, 824], "uniform": [174, 205, 214, 216, 219, 220, 226, 227, 296, 316, 397, 404, 405, 409, 411, 412, 415, 418, 420, 559, 560, 562, 714, 728, 757, 798, 800, 851], "uniform_": [4, 691, 737, 777], "uniformli": [214, 216, 217, 226, 227, 244, 296, 316, 381, 413, 472, 545, 546, 557, 559, 560, 714, 825], "uniformnegativesampl": [302, 714, 825], "uniform\uc0d8\ud50c\ub9c1\uc740": 798, "uniniti": 353, "union": [4, 209, 220, 292, 296, 298, 299, 300, 309, 311, 312, 317, 318, 330, 429, 431, 854], "uniqu": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 162, 182, 216, 226, 240, 246, 298, 302, 307, 312, 318, 329, 330, 452, 475, 548, 550, 552, 556, 560, 569, 574, 691, 692, 694, 699, 701, 702, 720, 727, 825, 844, 845], "unique_and_compact": 825, "unique_and_compact_per_typ": 825, "unique_dst": 330, "unique_dst_nod": 330, "unique_nod": [329, 330], "unit": [7, 178, 179, 694, 849, 854, 866], "univers": [132, 167, 862, 864], "unknown": [147, 171], "unlabel": [161, 454, 694, 713], "unleash": 840, "unless": [210, 825, 827, 830, 831], "unlik": [118, 119, 302, 850, 851, 858, 864], "unmark": 6, "unnam": 686, "unnecessari": [706, 723, 841], "unnorm": [240, 241, 296, 302, 307, 399, 403, 557, 559, 560, 561, 562], "unobserv": 851, "unoccupi": [178, 179], "unorm": 421, "unpack": [693, 694, 714], "unpickl": [825, 827, 830, 831], "unpin": 112, "unpin_memory_": 89, "unplug": 173, "unreach": [242, 446, 447, 567, 680], "unscal": [719, 803], "unsqueez": [128, 129, 446, 677, 722, 762, 768, 806, 849, 850, 854, 857], "unsupervis": [714, 800, 850], "until": [4, 6, 21, 214, 560, 709, 854, 861], "untrust": [825, 827, 830, 831], "untyp": [849, 857], "unus": 21, "unvisit": [426, 428], "unweight": [288, 567, 654, 665, 697, 726, 782], "up": [4, 9, 22, 221, 240, 241, 431, 557, 559, 560, 566, 638, 688, 694, 701, 705, 706, 727, 832, 835, 840, 848, 849, 851, 854, 860, 867], "updat": [4, 10, 20, 21, 27, 28, 34, 35, 73, 91, 92, 93, 94, 100, 113, 222, 223, 224, 225, 287, 293, 294, 295, 297, 314, 348, 382, 384, 388, 389, 391, 396, 397, 399, 402, 404, 405, 406, 407, 408, 410, 412, 418, 419, 420, 443, 452, 454, 539, 540, 541, 542, 543, 682, 690, 691, 704, 705, 706, 707, 708, 715, 719, 727, 750, 790, 792, 793, 803, 814, 820, 821, 825, 826, 827, 834, 844, 850, 851, 854, 860, 861, 866], "update_al": [5, 9, 20, 423, 455, 669, 670, 671, 672, 673, 674, 675, 676, 677, 705, 706, 707, 708, 715, 719, 722, 726, 749, 750, 751, 752, 758, 762, 766, 790, 791, 792, 793, 794, 801, 803, 806, 834, 835, 848, 849, 850, 851, 857, 860], "update_all_exampl": [705, 749, 790], "update_graph": 861, "upgrad": 816, "upload": [21, 844], "upon": [22, 162, 820], "upper": [234, 422, 442, 447], "upstream": [21, 854], "upward": 854, "urandom": [183, 207], "url": [23, 156, 200, 684, 685, 688, 731, 732, 734, 771, 772, 774, 820], "urllib": 837, "urllib3": [825, 827, 830, 831], "urlretriev": 837, "us": [4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 142, 143, 144, 145, 148, 150, 154, 159, 160, 162, 165, 167, 168, 173, 176, 177, 178, 179, 181, 183, 184, 186, 189, 190, 194, 195, 197, 205, 207, 209, 210, 213, 214, 217, 220, 222, 223, 224, 225, 229, 231, 234, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 286, 290, 291, 292, 294, 296, 299, 300, 302, 304, 305, 306, 307, 309, 312, 313, 317, 322, 325, 329, 331, 332, 335, 336, 337, 338, 339, 341, 348, 349, 350, 351, 354, 380, 381, 384, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 404, 405, 406, 407, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 439, 440, 441, 443, 444, 445, 447, 449, 450, 451, 452, 455, 456, 472, 473, 474, 537, 540, 542, 543, 544, 545, 546, 547, 548, 549, 551, 553, 554, 555, 559, 560, 561, 562, 563, 566, 568, 582, 584, 587, 588, 600, 627, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 653, 658, 659, 662, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 679, 680, 682, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 701, 702, 704, 705, 707, 709, 710, 711, 713, 714, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 772, 779, 786, 787, 803, 812, 814, 816, 818, 819, 820, 823, 825, 826, 827, 829, 830, 831, 832, 834, 836, 837, 838, 839, 840, 841, 844, 845, 848, 849, 850, 851, 852, 854, 855, 857, 858, 860, 861, 864, 866, 867], "usag": [0, 1, 8, 9, 21, 25, 56, 126, 131, 210, 248, 249, 286, 331, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 687, 688, 698, 705, 708, 813, 819, 821, 841], "use_alternate_stream": 210, "use_cpu_affin": 841, "use_ddp": [210, 213, 840, 866], "use_eta": [421, 422], "use_featur": [146, 169], "use_fp16": 803, "use_graphbolt": [234, 235, 239, 240, 241], "use_index": 299, "use_int64_tensor_s": 814, "use_libxsmm": 333, "use_libxsmm_flag": 333, "use_mm_for_euclid_dist": [430, 544], "use_mm_for_euclid_dist_if_necessari": [430, 544], "use_norm": 414, "use_panda": 168, "use_prefetch_thread": 210, "use_uva": [10, 210, 712], "user": [1, 3, 4, 5, 9, 11, 13, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 140, 145, 156, 159, 161, 163, 173, 180, 181, 210, 214, 215, 216, 219, 220, 234, 239, 240, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 299, 301, 308, 313, 319, 320, 331, 332, 335, 336, 337, 341, 350, 351, 354, 381, 382, 383, 384, 386, 396, 398, 401, 402, 404, 405, 406, 409, 412, 419, 424, 425, 426, 473, 474, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 545, 550, 551, 552, 553, 554, 558, 559, 560, 561, 562, 563, 571, 572, 631, 632, 637, 638, 639, 640, 647, 648, 653, 663, 664, 668, 678, 686, 690, 691, 692, 693, 694, 695, 696, 697, 699, 702, 705, 710, 711, 712, 714, 717, 719, 724, 725, 728, 729, 746, 749, 754, 764, 765, 768, 769, 781, 787, 788, 790, 796, 803, 808, 809, 811, 812, 813, 814, 824, 825, 827, 828, 829, 830, 831, 841, 844, 854], "user_emb": 384, "user_feat": [725, 728, 729, 765, 768, 769, 809, 811, 812], "user_id": 830, "user_nid": 384, "user_orig_nids_0": 694, "usernam": 21, "userwarn": [145, 177, 178, 179, 685, 732, 772, 817, 837, 850], "user\uac00": 809, "user\uc640": [787, 809], "usr": 817, "usual": [4, 10, 21, 329, 456, 555, 691, 695, 705, 709, 711, 713, 717, 721, 722, 727, 729, 818, 825, 827, 830, 831, 836, 848, 851], "util": [1, 4, 11, 13, 146, 169, 183, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 288, 290, 302, 304, 307, 313, 343, 379, 380, 384, 442, 453, 454, 455, 456, 564, 680, 681, 682, 685, 688, 689, 690, 694, 698, 712, 717, 720, 721, 722, 726, 729, 732, 734, 735, 760, 761, 762, 772, 774, 775, 779, 804, 805, 806, 816, 821, 825, 827, 830, 831, 836, 837, 840, 841, 850, 854, 857], "utransform": 861, "utyp": [125, 126, 384, 545, 632, 715, 728, 758, 768, 801, 811], "uv": [51, 61, 88, 555, 672], "uva": [210, 290, 555, 559], "v": [4, 5, 21, 22, 27, 35, 48, 51, 57, 60, 61, 62, 63, 87, 88, 90, 93, 94, 107, 114, 120, 121, 131, 161, 178, 179, 226, 227, 230, 243, 244, 253, 255, 257, 259, 261, 267, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 296, 316, 331, 335, 341, 342, 349, 388, 392, 398, 399, 401, 402, 404, 405, 409, 412, 414, 415, 417, 418, 471, 472, 497, 498, 554, 570, 618, 619, 620, 621, 622, 631, 632, 640, 646, 659, 672, 697, 700, 701, 702, 704, 705, 706, 715, 722, 723, 727, 728, 729, 741, 744, 745, 746, 748, 749, 750, 754, 758, 762, 763, 767, 768, 769, 782, 785, 786, 787, 789, 790, 792, 796, 801, 806, 807, 810, 811, 812, 817, 820, 826, 834, 835, 848, 850, 854, 857, 860, 861], "v0": 778, "v1": 820, "v100": [14, 719, 803], "v2": 820, "v3": 820, "v_": 850, "v_1": 820, "v_2": 820, "v_a": 692, "v_add_": 5, "v_add_u": 5, "v_attr": 125, "v_b": [385, 417, 456, 692, 849], "v_div_": 5, "v_div_u": 5, "v_dot_": 5, "v_dot_u": 5, "v_fea": [401, 409, 412, 418], "v_feat": [398, 399, 402, 404, 405, 415], "v_i": [402, 728, 768, 811, 851, 854, 861], "v_j": [860, 861], "v_k": [854, 861], "v_max": 857, "v_mul_": 5, "v_mul_u": 5, "v_p": 431, "v_proj": 817, "v_sub_": 5, "v_sub_u": 5, "vacabulari": 184, "vaganova": 849, "val": [101, 102, 134, 137, 138, 139, 140, 149, 155, 168, 171, 180, 182, 185, 186, 187, 188, 192, 193, 328, 500, 565, 574, 584, 585, 589, 591, 594, 595, 596, 597, 598, 602, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 619, 623, 624, 626, 627, 815, 816, 817, 818, 820, 830, 831, 832, 834, 845, 866], "val1": [613, 625], "val2": [613, 625], "val_acc": [815, 816, 818, 832, 834, 849, 866], "val_edg": [139, 157, 158, 191, 845], "val_edge_mask": [157, 158, 191], "val_g": [157, 158, 191], "val_idx": [138, 140, 817], "val_lik": 820, "val_load": 866, "val_loss": 849, "val_mask": [25, 137, 140, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 171, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 686, 688, 729, 734, 769, 774, 812, 815, 816, 818, 832, 834, 837, 844], "val_metr": 817, "val_nid": 844, "val_set": [157, 158, 191, 866], "val_siz": [161, 162, 163, 597, 605, 609, 610, 611, 612, 617, 619, 623, 817, 820], "valid": [5, 25, 91, 125, 138, 139, 140, 147, 150, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173, 174, 175, 176, 181, 191, 192, 194, 195, 197, 198, 205, 207, 248, 291, 308, 313, 443, 678, 687, 691, 694, 713, 725, 729, 733, 773, 809, 812, 815, 816, 824, 825, 827, 829, 830, 831, 832, 834, 835, 837, 849, 851, 854, 857, 861, 866, 867], "valid_data": [164, 166], "valid_dataload": [817, 827, 844], "valid_it": 861, "valid_label": [687, 733, 773], "valid_load": [687, 733, 773], "valid_mask": [173, 729, 769, 812], "valid_nid": 844, "valid_r": 173, "valid_ratio": 173, "valid_set": [827, 867], "validation_set": [308, 313, 827, 829, 830, 831, 867], "valu": [4, 9, 12, 22, 23, 30, 31, 34, 51, 57, 58, 61, 62, 63, 73, 88, 89, 93, 113, 114, 115, 117, 120, 121, 126, 131, 137, 147, 148, 156, 164, 174, 178, 179, 183, 184, 197, 205, 210, 214, 216, 219, 220, 239, 240, 241, 243, 244, 245, 249, 286, 287, 290, 291, 293, 294, 295, 296, 297, 302, 304, 307, 309, 314, 318, 322, 326, 329, 330, 331, 332, 336, 337, 342, 350, 354, 380, 382, 384, 386, 390, 391, 392, 393, 395, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 433, 438, 441, 443, 444, 452, 471, 472, 473, 476, 478, 481, 483, 500, 502, 504, 508, 510, 516, 518, 522, 524, 537, 538, 547, 553, 558, 560, 567, 574, 577, 578, 579, 580, 582, 584, 587, 588, 589, 591, 594, 595, 596, 597, 598, 600, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 619, 623, 624, 625, 626, 627, 630, 648, 662, 664, 666, 684, 686, 693, 694, 719, 722, 723, 726, 771, 816, 817, 820, 825, 827, 830, 831, 837, 848, 850, 851, 854, 860, 861, 867], "valueerror": 692, "valueobject": 22, "van": 854, "vanilla": [817, 861], "vanillar": 817, "vanish": 413, "var": [394, 416, 825, 827], "vare": 186, "varepsilon": [410, 861], "vari": [686, 721, 722, 816, 830, 831], "variabl": [21, 244, 472, 693, 814, 833, 840, 841, 850], "varianc": [394, 416], "variant": [214, 244, 472, 560, 848, 851], "variat": [214, 560, 850], "varieti": [698, 857, 861], "variou": [4, 14, 221, 304, 416, 691, 717, 820, 830, 831, 833, 836, 860], "vast": 833, "vaswani": 817, "vcpu": 14, "ve": 820, "vec": [150, 399, 404, 405, 816, 851], "vector": [128, 129, 159, 214, 216, 219, 231, 238, 239, 350, 351, 380, 381, 384, 394, 399, 402, 409, 415, 422, 436, 437, 442, 567, 591, 594, 595, 596, 598, 605, 606, 607, 609, 610, 611, 612, 616, 618, 619, 620, 621, 622, 623, 630, 666, 682, 686, 694, 699, 725, 815, 816, 818, 820, 832, 833, 835, 836, 844, 848, 851, 854, 857, 860, 861, 862, 864], "vector_v": 820, "venu": 646, "verbos": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 427, 684, 688, 731, 734, 771, 774], "veri": [4, 10, 22, 122, 184, 691, 698, 711, 713, 714, 716, 725, 727, 728, 844, 845, 854, 858, 861, 864], "verifi": [21, 130, 200, 632, 722, 850], "verify_ssl": 200, "versa": [850, 851], "versatil": 813, "versin": 806, "version": [4, 10, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 216, 244, 398, 422, 472, 562, 686, 694, 725, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 820, 821, 825, 827, 830, 831, 848, 857, 860, 867], "vert": [413, 435, 449, 453], "vertex": [6, 214, 238, 302, 351, 409, 560], "vertic": [214, 302, 350, 560, 697, 850], "vh": 137, "via": [5, 11, 22, 41, 93, 113, 122, 214, 216, 233, 296, 302, 308, 391, 392, 393, 406, 426, 428, 454, 545, 546, 560, 564, 686, 690, 697, 699, 710, 711, 712, 713, 716, 719, 728, 813, 825, 827, 830, 831, 833, 834, 835, 836, 841, 844], "viabl": 694, "vibrat": [178, 179], "vice": [850, 851], "vid": [58, 558], "video": 137, "view": [4, 9, 43, 44, 46, 51, 74, 77, 103, 104, 245, 332, 336, 337, 455, 473, 537, 553, 558, 559, 571, 572, 605, 619, 670, 671, 673, 675, 676, 726, 728, 768, 800, 811, 817, 849, 851, 854, 857, 860, 861], "viewbackward": [388, 436], "viewbackward0": 391, "virtual": [10, 210, 443, 680, 712], "visibl": [116, 130, 335, 341, 554, 631, 640], "vision": [817, 833, 862, 864], "visit": [0, 22, 217, 230, 555], "visitattr": 22, "visitor": 22, "visual": [814, 816, 854, 860], "viz_idx": 861, "vocab": [184, 854], "vocab_fil": 184, "vocab_s": [184, 854, 861], "vocabulari": [174, 184, 854], "void": 22, "vol": [239, 351], "volta": [9, 705, 790], "volum": [239, 351], "vote": 161, "vs2019": 814, "vtype": [125, 126, 384, 545, 558, 632, 715, 728, 758, 768, 801, 811], "w": [5, 21, 27, 28, 60, 87, 114, 115, 118, 119, 122, 126, 167, 249, 332, 336, 337, 341, 380, 384, 389, 390, 393, 397, 404, 405, 406, 412, 414, 417, 418, 423, 424, 537, 548, 549, 553, 647, 653, 654, 655, 656, 659, 661, 664, 665, 667, 668, 678, 699, 706, 711, 715, 719, 722, 725, 726, 743, 750, 755, 758, 762, 765, 766, 779, 784, 792, 797, 801, 803, 806, 809, 815, 816, 818, 820, 830, 831, 834, 848, 849, 851, 854, 857], "w1": [413, 818, 835], "w2": [818, 835], "w_": [405, 411, 704, 748, 789, 848, 861], "w_0": [417, 849], "w_comp": 849, "w_h": 861, "w_i": 398, "w_iou": 854, "w_j": 398, "w_k": [409, 861], "w_l": [706, 750, 792], "w_new": 5, "w_o": [456, 861], "w_q": 861, "w_r": [417, 706, 750, 792, 849], "w_t": 385, "w_v": 861, "wa": [9, 141, 158, 162, 182, 186, 191, 388, 440, 701, 816, 844, 849, 854, 861], "wai": [1, 4, 5, 126, 209, 231, 238, 249, 350, 351, 394, 399, 416, 452, 655, 656, 661, 668, 684, 688, 691, 701, 702, 709, 711, 713, 715, 720, 728, 818, 820, 833, 834, 844, 845, 851, 861], "wait": 21, "walk": [13, 217, 380, 384, 412, 547, 555, 557, 558, 559, 662, 665, 844, 845], "walk_length": [380, 557], "walkthrough": [715, 820], "wang": [848, 850, 851, 854], "want": [4, 21, 22, 41, 210, 214, 216, 217, 219, 244, 289, 299, 472, 560, 685, 686, 691, 694, 697, 702, 708, 710, 711, 714, 716, 717, 725, 726, 728, 729, 782, 825, 827, 833, 835, 837, 844, 851], "warn": [166, 837], "watch": [43, 860], "wayn": 167, "wb": 845, "wc": 413, "we": [4, 6, 9, 14, 21, 22, 27, 28, 31, 41, 45, 68, 79, 82, 105, 133, 137, 144, 171, 179, 180, 181, 182, 188, 207, 210, 220, 233, 239, 240, 244, 313, 336, 337, 338, 350, 351, 354, 384, 385, 388, 395, 396, 397, 406, 412, 417, 429, 431, 471, 472, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 555, 560, 566, 571, 572, 637, 680, 682, 686, 690, 691, 692, 693, 694, 702, 709, 710, 711, 712, 713, 716, 717, 718, 719, 720, 724, 725, 728, 729, 778, 813, 814, 815, 816, 817, 818, 820, 821, 825, 827, 830, 831, 834, 835, 836, 840, 841, 844, 845, 848, 849, 850, 851, 857, 860, 861, 866, 867], "web": [132, 155, 187, 193, 555, 661], "webkb": [155, 187, 193], "websit": [145, 167, 180, 688, 734, 774, 814], "wedg": 243, "week": 161, "weight": [5, 6, 21, 118, 119, 120, 125, 126, 145, 244, 248, 249, 296, 302, 307, 344, 345, 346, 347, 354, 380, 381, 382, 384, 385, 387, 390, 392, 397, 399, 402, 403, 404, 405, 406, 407, 409, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 440, 441, 454, 456, 472, 547, 548, 549, 555, 560, 561, 563, 628, 629, 654, 655, 656, 661, 662, 665, 693, 697, 698, 699, 707, 714, 718, 721, 724, 742, 743, 751, 757, 761, 779, 783, 784, 793, 800, 805, 815, 816, 818, 820, 834, 837, 848, 849, 851, 854, 857, 860, 861, 867], "weight1": 779, "weight2": 779, "weight_and_sum": 440, "weight_anim": 860, "weight_column": 555, "weight_decai": [718, 719, 803, 815, 849, 854], "weight_nam": [118, 119], "weighted_reduc": 867, "weightedsageconv": 834, "weights_onli": [825, 827, 830, 831], "weihua916": 165, "welcom": [21, 720, 861], "well": [4, 7, 21, 56, 96, 125, 126, 130, 173, 220, 235, 239, 289, 551, 632, 680, 684, 685, 686, 688, 694, 695, 700, 702, 709, 711, 713, 714, 724, 725, 727, 728, 787, 809, 818, 821, 826, 833, 837, 841, 844, 848, 851, 860, 861], "were": [137, 149, 180, 182, 185, 715, 814, 857, 861], "west": [688, 734, 774], "wh": [424, 426, 707, 751, 793], "wh_": [707, 751, 793], "what": [9, 21, 22, 239, 564, 717, 728, 729, 818, 820, 825, 826, 848, 854, 857, 861], "whatev": 21, "wheel": [172, 815, 816, 817, 818, 820, 825, 827, 830, 831], "when": [1, 4, 10, 14, 20, 21, 22, 31, 36, 41, 48, 51, 56, 57, 68, 70, 80, 89, 125, 130, 146, 157, 158, 168, 169, 173, 191, 200, 210, 213, 214, 221, 222, 223, 224, 225, 231, 234, 238, 239, 240, 241, 245, 246, 248, 286, 289, 290, 292, 296, 300, 309, 313, 325, 332, 336, 337, 338, 339, 350, 351, 385, 386, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 404, 405, 406, 409, 411, 412, 417, 419, 422, 426, 428, 429, 430, 431, 433, 473, 474, 537, 544, 554, 556, 559, 560, 561, 562, 563, 566, 567, 630, 632, 638, 640, 658, 666, 686, 691, 692, 693, 694, 698, 702, 711, 713, 714, 716, 719, 722, 723, 727, 818, 820, 827, 830, 831, 835, 836, 840, 844, 848, 850, 857, 861], "whenev": [705, 835], "whenver": 857, "where": [4, 9, 10, 14, 21, 26, 34, 45, 48, 53, 57, 58, 62, 63, 73, 79, 82, 100, 105, 120, 128, 129, 130, 131, 135, 136, 157, 159, 162, 171, 186, 210, 214, 215, 216, 219, 226, 227, 239, 242, 243, 249, 296, 304, 309, 316, 318, 329, 330, 331, 334, 335, 338, 339, 340, 341, 342, 349, 354, 385, 386, 387, 389, 390, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 471, 496, 497, 498, 544, 547, 555, 556, 557, 559, 562, 566, 567, 610, 611, 613, 623, 630, 642, 643, 655, 656, 659, 661, 664, 665, 666, 670, 671, 673, 675, 676, 677, 680, 686, 688, 692, 693, 694, 695, 697, 706, 709, 712, 723, 725, 726, 727, 728, 729, 791, 815, 816, 817, 818, 820, 825, 826, 827, 830, 831, 832, 833, 834, 835, 848, 849, 850, 851, 854, 857, 861, 866], "wherea": [850, 851], "whether": [4, 9, 10, 21, 48, 53, 54, 57, 58, 62, 63, 65, 66, 68, 117, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 210, 213, 214, 216, 219, 220, 226, 233, 234, 235, 237, 239, 240, 241, 245, 286, 296, 297, 302, 304, 307, 308, 309, 333, 341, 343, 349, 350, 351, 385, 394, 398, 399, 401, 402, 404, 405, 406, 410, 414, 416, 417, 427, 430, 433, 443, 449, 454, 473, 544, 556, 560, 561, 562, 563, 642, 643, 679, 682, 684, 689, 693, 694, 715, 716, 725, 728, 771, 775, 820, 829, 830, 831, 832, 835, 837, 850, 857, 861], "which": [0, 1, 4, 9, 10, 20, 21, 22, 32, 36, 41, 42, 51, 56, 61, 88, 92, 116, 120, 122, 130, 131, 140, 143, 146, 148, 158, 161, 162, 163, 169, 171, 178, 179, 180, 182, 183, 186, 188, 189, 190, 195, 197, 205, 210, 211, 212, 217, 219, 222, 223, 224, 225, 230, 235, 239, 243, 244, 286, 288, 291, 292, 296, 298, 299, 302, 304, 305, 307, 308, 309, 313, 316, 325, 331, 332, 335, 336, 337, 341, 342, 350, 354, 382, 385, 386, 388, 389, 391, 392, 393, 394, 396, 398, 401, 402, 404, 405, 406, 409, 412, 415, 417, 419, 423, 425, 427, 441, 442, 443, 444, 447, 450, 451, 455, 471, 472, 473, 537, 538, 545, 546, 553, 554, 555, 556, 557, 559, 562, 567, 571, 572, 609, 616, 623, 630, 631, 632, 637, 640, 642, 643, 646, 648, 653, 656, 661, 664, 665, 666, 670, 673, 678, 681, 682, 685, 686, 688, 690, 691, 693, 694, 695, 698, 699, 700, 701, 705, 706, 707, 710, 711, 712, 713, 714, 715, 716, 717, 719, 722, 723, 725, 726, 729, 793, 813, 814, 815, 820, 824, 825, 826, 827, 830, 831, 832, 834, 835, 840, 841, 844, 850, 851, 854, 857, 861, 866], "while": [5, 9, 22, 68, 73, 92, 114, 115, 147, 179, 197, 205, 210, 214, 239, 290, 296, 308, 317, 396, 397, 412, 423, 424, 425, 426, 427, 428, 443, 560, 562, 613, 682, 691, 692, 693, 694, 698, 706, 710, 719, 727, 818, 821, 825, 827, 844, 850, 851, 857], "whitespac": 693, "whl": 820, "who": [21, 145, 159, 690, 709, 813, 844], "whole": [173, 210, 239, 664, 694, 705, 712, 714, 718, 722, 814, 850, 861], "whom": 145, "whose": [4, 10, 54, 116, 118, 119, 121, 125, 126, 131, 221, 239, 241, 331, 335, 338, 382, 423, 473, 474, 544, 556, 571, 572, 631, 654, 655, 656, 657, 661, 694, 709, 818, 850], "why": [22, 826, 851], "wi": 413, "wide": [1, 435, 686, 729, 832], "width": [850, 860], "wiki": [192, 844], "wikic": 192, "wikipedia": [134, 149, 182, 185, 192, 576, 578, 579, 586, 609, 610, 611, 833], "wildcard": 26, "win": [116, 631, 640], "window": [183, 207, 841], "window_s": [380, 384], "wisconsin": 193, "wise": [4, 5, 13, 73, 113, 219, 220, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 389, 448, 548, 549, 569, 570, 597, 617, 642, 643, 692, 704, 705, 707, 778, 789, 793, 817, 835, 837, 851, 861], "wish": [21, 117, 130, 709, 711, 716, 725, 813], "with_label": [850, 854, 857], "within": [4, 20, 21, 161, 209, 286, 292, 296, 299, 304, 309, 350, 353, 380, 384, 423, 424, 425, 426, 427, 428, 430, 538, 544, 692, 707, 723, 799, 818, 850, 857, 861], "without": [5, 6, 21, 27, 28, 114, 115, 116, 131, 240, 241, 244, 245, 286, 292, 296, 299, 302, 307, 321, 331, 412, 429, 431, 472, 545, 546, 549, 552, 560, 561, 562, 609, 610, 611, 623, 640, 668, 685, 686, 702, 705, 719, 727, 787, 826, 850, 854], "wm": 640, "wmt14": 861, "wn18": 191, "word": [21, 108, 135, 136, 137, 155, 180, 182, 184, 187, 193, 210, 213, 244, 382, 472, 637, 691, 832, 854, 857, 861], "word2vec": 159, "wordid": 854, "wordnet": 191, "work": [3, 4, 8, 9, 11, 21, 116, 118, 119, 188, 214, 216, 219, 292, 386, 398, 401, 402, 404, 405, 406, 409, 412, 419, 452, 555, 631, 655, 656, 657, 658, 659, 661, 662, 665, 683, 684, 695, 697, 709, 710, 712, 713, 724, 725, 729, 833, 835, 837, 841, 850, 855, 857, 861, 864, 866, 867], "workaround": 851, "worker": [4, 188, 234, 290, 691, 695, 712, 737, 777, 780, 798, 841], "workflow": [832, 835], "workload": [13, 231, 238, 690, 694, 709, 722, 820, 841, 866], "workspac": [695, 739, 779, 780, 844], "workspace\ub294": 780, "workspace\uc758": 780, "world": [162, 164, 292, 694, 779, 826, 833, 857, 861], "world_siz": [840, 866, 867], "would": [9, 21, 26, 89, 130, 131, 210, 214, 216, 219, 318, 349, 390, 398, 399, 402, 404, 405, 415, 418, 419, 437, 555, 560, 632, 642, 643, 706, 709, 711, 713, 715, 724, 725, 826, 834, 835, 837, 854, 857, 861], "wouldn": 857, "wrap": [131, 210, 211, 212, 297, 714, 717, 719, 803, 840, 861, 866, 867], "wrap_gener": [825, 827], "wrap_next": [825, 827], "wrapper": [8, 21, 22, 293, 300, 301, 314, 840, 867], "writabl": 837, "write": [4, 21, 22, 308, 315, 382, 564, 640, 649, 691, 694, 704, 710, 722, 725, 779, 815, 818, 823, 830, 831, 832, 835, 837, 838, 839, 850, 854, 857], "write_t": 694, "writeback": 640, "writeback_map": [111, 640], "writer": 134, "written": [9, 705, 819, 825, 827, 850, 861], "wrong": [21, 419], "wu": 747, "wv": 861, "www": [162, 747, 815, 816, 817, 818, 825, 827, 834, 841], "x": [5, 6, 9, 21, 34, 35, 93, 94, 100, 113, 122, 132, 133, 144, 170, 183, 184, 245, 338, 348, 380, 385, 387, 389, 391, 392, 393, 394, 400, 413, 414, 416, 419, 420, 422, 429, 430, 431, 432, 433, 434, 439, 473, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 544, 566, 606, 613, 624, 664, 665, 678, 682, 694, 699, 700, 711, 713, 714, 716, 718, 719, 725, 728, 743, 744, 754, 755, 756, 757, 759, 765, 768, 784, 785, 796, 797, 799, 800, 802, 803, 809, 811, 814, 815, 816, 817, 818, 820, 825, 827, 833, 844, 845, 848, 854, 857, 860, 861, 867], "x1": [338, 566, 605, 616, 820], "x2": [338, 566, 605, 616, 820], "x64": 814, "x86_64": 841, "x_": [338, 413, 429, 431, 497, 566, 569, 820], "x_0": 413, "x_1": [413, 820], "x_2": [413, 820], "x_c": 413, "x_dst": [382, 756, 799], "x_e": [498, 569], "x_i": [400, 409, 411, 413, 435, 664, 820, 861], "x_j": [400, 409, 820, 854, 861], "x_sign": 816, "x_size": 854, "x_src": 382, "x_type": 385, "x_u": [497, 498, 570, 704, 748, 789], "x_uv": 857, "x_v": [497, 498, 570, 704, 748, 789], "xavier": [381, 402, 404, 405, 418, 419], "xavier_normal_": 851, "xavier_uniform_": [10, 425, 427, 452, 718, 721, 761, 805, 849], "xcode": 814, "xeon": [719, 840], "xi": [244, 472, 816], "xlabel": 860, "xrightarrow": 646, "xtick": 860, "xuv": 857, "xv1": 820, "xv2": 820, "xw_t": 385, "xxx": [0, 693, 738, 779], "xxx_edg": [693, 779], "xxx_node": [693, 779], "xxx_note": 779, "xxx_stat": [693, 779], "xxx\ub294": 779, "y": [9, 21, 120, 184, 243, 244, 342, 380, 385, 423, 424, 441, 444, 454, 471, 472, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 699, 713, 714, 718, 719, 725, 743, 754, 756, 765, 784, 796, 799, 803, 809, 814, 816, 818, 820, 825, 833, 835, 854, 860, 867], "y1": 9, "y_": [244, 338, 429, 431, 472, 566, 728, 768, 811, 835], "y_dst": 382, "y_hat": [711, 718, 817, 818, 867], "y_i": 867, "y_pred": 817, "y_true": 817, "y_u": [243, 342, 471], "y_v": [120, 243, 342, 471], "yaml": [148, 308, 313, 828], "yaml_cont": [830, 831], "yaml_data": 308, "yandex": 180, "ye": [854, 861], "year": [694, 697], "yellow": 826, "yelp": [162, 163, 194], "yet": [4, 712, 841], "yield": [220, 289, 403, 413, 637, 638, 711, 716, 825, 826, 827, 836, 851], "ying": 555, "yingtongd": 162, "yiran": 747, "yizhou": 72, "ylabel": 860, "you": [6, 9, 14, 21, 22, 26, 89, 114, 118, 119, 130, 131, 186, 210, 213, 214, 216, 217, 219, 286, 289, 292, 331, 413, 419, 559, 560, 561, 562, 632, 682, 685, 686, 699, 705, 710, 711, 712, 714, 715, 716, 724, 725, 728, 729, 732, 772, 813, 814, 816, 819, 820, 822, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 849, 850, 851, 852, 854, 857, 858, 860, 861, 864, 866, 867], "your": [6, 8, 9, 21, 118, 119, 145, 164, 166, 175, 177, 178, 179, 183, 184, 682, 688, 691, 705, 709, 710, 712, 713, 714, 715, 720, 724, 725, 729, 774, 823, 826, 827, 832, 835, 838, 839, 841, 857, 861], "your_cod": 840, "yu": [848, 849, 850, 857], "yum": 814, "yyi": 0, "z": [9, 178, 390, 816, 850, 851, 861], "z2": 851, "z_": 354, "z_e": 569, "z_i": [388, 390, 851], "z_j": [388, 851], "z_list": 850, "z_v": [570, 850], "zachari": [167, 837], "zero": [4, 27, 28, 30, 43, 46, 70, 74, 89, 93, 103, 108, 113, 114, 115, 118, 119, 120, 122, 125, 130, 150, 178, 179, 210, 234, 239, 248, 296, 304, 309, 324, 339, 348, 386, 396, 398, 401, 402, 404, 405, 406, 409, 411, 412, 415, 419, 442, 446, 448, 452, 453, 454, 476, 477, 478, 479, 481, 482, 483, 484, 500, 502, 503, 504, 505, 508, 509, 510, 511, 516, 517, 518, 519, 522, 523, 524, 525, 554, 561, 562, 574, 575, 578, 579, 590, 591, 592, 594, 595, 596, 597, 598, 603, 605, 610, 611, 612, 613, 617, 619, 623, 625, 627, 630, 632, 638, 639, 640, 642, 643, 658, 666, 678, 680, 686, 691, 693, 694, 702, 712, 719, 722, 724, 725, 726, 737, 746, 754, 756, 764, 765, 777, 779, 787, 796, 799, 808, 809, 816, 820, 835, 837, 844, 850, 854, 857, 860, 861], "zero_grad": [380, 384, 423, 424, 425, 426, 427, 428, 690, 710, 711, 714, 716, 718, 719, 725, 727, 728, 729, 736, 754, 755, 757, 759, 765, 767, 768, 769, 776, 796, 797, 800, 802, 803, 809, 810, 811, 812, 815, 816, 817, 818, 825, 827, 832, 834, 835, 836, 844, 845, 848, 849, 850, 851, 854, 866, 867], "zero_initi": 857, "zeros_lik": [754, 796, 845], "zhang": [747, 848, 849, 850, 851, 854, 857, 860, 861], "zhao": [854, 860], "zheng": [848, 849, 850, 851, 854, 857, 860, 861], "zhiyu": 747, "zhiyuchen": 747, "zhjwy9343": 747, "zhou": [860, 861], "zihao": [854, 861], "zinc": 195, "zip": [165, 168, 172, 186, 685, 688, 713, 714, 718, 734, 772, 774, 815, 816, 818, 825, 832, 833, 834, 835, 836, 837, 840, 841, 844, 845, 848, 849, 850, 851, 854, 857, 860, 861, 866, 867], "zpve": [178, 179], "\u4e00\u4e2a\u4e8c\u5206\u56fe": 746, "\u4e00\u4e2a\u4ec5\u5e73\u8861\u56fe\u4e2d\u8282\u70b9": 738, "\u4e00\u4e2a\u53ef\u9009\u9879\u662f\u7528\u6237\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u793a\u4f8b\u68c0\u67e5\u4e0b\u8f7d\u540e\u6587\u4ef6\u7684sha": 732, "\u4e00\u4e2a\u540c\u6784\u56fe": 746, "\u4e00\u4e2a\u56fe\u6279\u6b21\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u5f20\u5927\u56fe": 767, "\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e0c\u671b": 768, "\u4e00\u4e2a\u5b50\u56fe\u5bf9\u5e94\u4e00\u79cd\u5173\u7cfb": 746, "\u4e00\u4e2a\u5e94\u7528\u4e8e": 750, "\u4e00\u4e2a\u5f02\u6784\u56fe\u7531\u4e00\u7cfb\u5217\u5b50\u56fe\u6784\u6210": 746, "\u4e00\u4e2a\u5f02\u6784\u56fe\u793a\u4f8b": 746, "\u4e00\u4e2a\u6279\u6b21\u4e2d\u4e0d\u540c\u7684\u56fe\u662f\u5b8c\u5168\u5206\u5f00\u7684": 767, "\u4e00\u4e2a\u662f\u8fb9\u7684\u96c6\u5408": 741, "\u4e00\u4e2a\u6709\u6548\u7684\u56fe\u540d\u79f0\u5e94\u8be5\u4ec5\u5305\u542b\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf": 738, "\u4e00\u4e2a\u6b63\u6837\u672c\u56fe": 757, "\u4e00\u4e2a\u6d88\u606f\u4f20\u9012\u8fd0\u7b97\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u51fd\u6570": 766, "\u4e00\u4e2a\u7528\u4e8e\u6307\u5b9a": 749, "\u4e00\u4e2a\u7528\u4e8e\u6307\u793a\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7684\u5b57\u6bb5\u540d": 749, "\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5d4c\u5165": 737, "\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b": 750, "\u4e00\u4e2a\u805a\u5408\u51fd\u6570\u548c\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570": 749, "\u4e00\u4e2a\u8d1f\u6837\u672c\u56fe": 757, "\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u805a\u5408\u64cd\u4f5c\u5305\u62ec": 749, "\u4e00\u4e9b\u6a21\u5757\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u805a\u5408\u51fd\u6570": 761, "\u4e00\u53f0\u673a\u5668\u53ef\u80fd\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b": 736, "\u4e00\u662f\u8282\u70b9\u7684\u96c6\u5408": 741, "\u4e00\u6761\u8fb9": 741, "\u4e00\u6761\u94fe\u8def0": 742, "\u4e00\u6837": 737, "\u4e00\u6b21\u6027\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684": 765, "\u4e00\u76f4\u5230\u8f93\u5165": 753, "\u4e00\u79cd\u5b58\u50a8\u5f02\u6784\u56fe\u7684\u5e38\u89c1\u65b9\u6cd5\u662f\u5728\u4e0d\u540c\u7684csv\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 746, "\u4e00\u822c\u6765\u8bf4": 749, "\u4e00\u822c\u6d41\u7a0b\u662f": 767, "\u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u591a\u5c42gnn\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 765, "\u4e0a\u56fe\u4e2d\u9690\u53bb\u4e86\u548c\u8ba1\u7b97\u4e0d\u76f8\u5173\u7684\u8fb9": 754, "\u4e0a\u7684\u5206\u5e03\u5f0f\u90bb\u5c45\u91c7\u6837\u63d0\u4f9b\u4e86": 737, "\u4e0a\u7684\u7279\u5f81\u4e3a": 748, "\u4e0a\u7684\u7684\u7279\u5f81\u4e3a": 748, "\u4e0a\u7684\u8282\u70b9": 754, "\u4e0a\u7684\u8bad\u7ec3\u53ea\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u6a21\u578b\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 769, "\u4e0a\u8c03\u7528\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570": 737, "\u4e0a\u8fd0\u884c": 737, "\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684for\u5faa\u73af\u4e3a\u5904\u7406\u5f02\u6784\u56fe\u8ba1\u7b97\u7684\u4e3b\u8981\u903b\u8f91": 763, "\u4e0a\u8ff0\u51fd\u6570\u7684\u6570\u5b66\u516c\u5f0f\u4e3a": 749, "\u4e0a\u9762\u4ee3\u7801\u91cc\u7684": 761, "\u4e0a\u9762\u7684dataloader\u4e00\u6b21\u8fed\u4ee3\u4f1a\u751f\u6210\u4e09\u4e2a\u8f93\u51fa": 759, "\u4e0a\u9762\u7684dgl": 759, "\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230": 732, "\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4e00\u4e2a": 732, "\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u4e86\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408\u7684\u8ba1\u7b97": 762, "\u4e0b\u4f8b\u7684\u8f93\u51fa\u8282\u70b9\u5305\u542b\u4e86\u6ca1\u6709\u5165\u8fb9\u7684\u5b64\u7acb\u8282\u70b9": 754, "\u4e0b\u56fe\u663e\u793a\u4e86\u4ee5\u8282\u70b98\u4e3a\u79cd\u5b50\u8282\u70b9\u65f6\u7b2c\u4e8c\u4e2agnn\u5c42\u6240\u9700\u7684\u5757": 754, "\u4e0b\u56fe\u663e\u793a\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\u53ca\u5b83\u4eec\u95f4\u7684\u76f8\u4e92\u4f5c\u7528": 736, "\u4e0b\u6587\u5c55\u793a\u4e86sageconv\u793a\u4f8b\u4e2d\u7684": 762, "\u4e0b\u6587\u662f\u5728\u4e00\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 768, "\u4e0b\u6587\u7ee7\u7eed\u4f7f\u7528\u4e0a\u8ff0\u7684\u4f8b\u5b50": 754, "\u4e0b\u7684\u76ee\u5f55": 732, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": [730, 747], "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e\u96c6\u7684url": 731, "\u4e0b\u8f7d\u6587\u4ef6": 732, "\u4e0b\u9762\u4e2d\u4f7f\u7528": 734, "\u4e0b\u9762\u4ee5": 734, "\u4e0b\u9762\u4f7f\u7528": 734, "\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684": 734, "\u4e0b\u9762\u5c55\u793a\u4e86\u5728\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684\u793a\u4f8b": 739, "\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50": 746, "\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u901a\u8fc7\u5bf9\u8282\u70b9\u7279\u5f81\u964d\u7ef4\u6765\u51cf\u5c11\u6d88\u606f\u7ef4\u5ea6\u7684\u793a\u4f8b": 750, "\u4e0b\u9762\u662f\u4f7f\u7528\u70b9\u79ef\u8ba1\u7b97\u8fb9\u5f97\u5206\u7684\u4f8b\u5b50": 768, "\u4e0b\u9762\u662f\u901a\u8fc7\u4f7f\u7528\u51c6\u786e\u6027\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u4e00\u4e2a\u4f8b\u5b50": 769, "\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u4e13\u95e8\u7528\u4e8e\u5728\u90bb\u5c45\u91c7\u6837\u65f6\u5220\u9664\u5c0f\u6279\u6b21\u7684\u4e00\u4e9b\u8fb9\u548c\u5b83\u4eec\u7684\u53cd\u5411\u8fb9": 755, "\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 769, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f": 758, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u5728dgl\u4e2d\u521b\u5efa\u5f02\u6784\u56fe\u7684\u793a\u4f8b": 746, "\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4f7f\u7528\u4e86": 745, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b": 731, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e00\u4e2a\u62e5\u6709": 765, "\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe": 768, "\u4e0b\u9762\u7684\u52a8\u753b\u5c55\u793a\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b": 756, "\u4e0b\u9762\u7684\u6d41\u7a0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6a21\u7248\u7684\u5de5\u4f5c\u65b9\u5f0f": 731, "\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u4fdd\u5b58\u548c\u8bfb\u53d6\u56fe\u548c\u6570\u636e\u96c6\u4fe1\u606f\u7684\u5217\u8868": 735, "\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8bad\u7ec3\u96c6\u62c6\u5206": 737, "\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5\u7684\u793a\u4f8b": 757, "\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e": [757, 759], "\u4e0d\u540c\u540d\u79f0\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u5f62\u72b6": 743, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u5355\u72ec\u7684id": 746, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e38\u5e38\u5177\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u5c5e\u6027": 751, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6216\u5927\u5c0f": 746, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6709\u5355\u72ec\u7684id": 746, "\u4e0d\u5fc5\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5": 746, "\u4e0d\u662fpytorch\u7684nn\u6a21\u5757": 737, "\u4e0d\u80fd\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u5b50\u96c6": 743, "\u4e0d\u8fc7": 745, "\u4e0d\u8fc7\u5927\u90e8\u5206\u7684dgl": 745, "\u4e0e": [736, 737], "\u4e0e\u4e0d\u5b58\u5728\u7684\u8fb9": 757, "\u4e0e\u4e4b\u524d\u7684\u4efb\u52a1\u7c7b\u4f3c": 767, "\u4e0e\u540c\u6784\u56fe\u7684\u60c5\u51b5\u7c7b\u4f3c": 746, "\u4e0e\u5f02\u6784\u56fe\u76f8\u5173\u8054\u7684": 746, "\u4e0e\u6574\u56fe\u5206\u7c7b\u4e0d\u540c": 734, "\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92": 736, "\u4e0e\u6b64\u540c\u65f6": 738, "\u4e0e\u8fb9\u7279\u5f81": 749, "\u4e0e\u901a\u5e38\u4ee5\u5f20\u91cf\u4e3a\u53c2\u6570\u7684pytorch": 762, "\u4e0e\u91c7\u6837\u5668\u8fdb\u884c\u4ea4\u4e92\u4ee5\u83b7\u5f97\u5c0f\u6279\u6b21\u6570\u636e": 736, "\u4e0e\u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5668\u8fde\u63a5\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u5b83\u4eec": 737, "\u4e14\u53ea\u8003\u8651\u5e73\u5747\u805a\u5408\u51fd\u6570\u7684\u60c5\u51b5": 758, "\u4e14\u663e\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u5b58\u50a8\u7684\u8bbe\u5907\u4fe1\u606f": 745, "\u4e24\u4e2a\u51fd\u6570\u5728\u53d8\u6362\u540e\u7684\u56fe\u4e0a\u91cd\u65b0\u52a0\u5165\u6279\u6b21\u4fe1\u606f": 767, "\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684numpy\u6570\u7ec4\u4f1a\u5f88\u5927": 738, "\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u8fb9\u7684\u8054\u7cfb": 755, "\u4e24\u540d\u4f5c\u8005\u53ef\u4ee5\u5728\u4e0d\u540c\u5e74\u4efd\u5171\u540c\u7f72\u540d\u6587\u7ae0": 741, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b": 765, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 765, "\u4e2a\u4eba\u59d3\u540d": 747, "\u4e2a\u4eba\u94fe\u63a5": 747, "\u4e2a\u5bf9\u5e94\u7684\u8d1f\u91c7\u6837\u6837\u672c": 768, "\u4e2a\u8282\u70b9\u6216\u8fb9": 745, "\u4e2a\u8282\u70b9\u7684\u56fe\u4e0a\u8fd0\u884c\u7684": 753, "\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 757, "\u4e2d": [732, 734, 735, 741, 742, 746, 759], "\u4e2d\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u6574\u56fe\u4e0a\u8bad\u7ec3\u4e00\u4e2a2\u5c42\u7684rgcn\u6a21\u578b": 759, "\u4e2d\u4ecb\u7ecd\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 764, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u65b9\u6cd5\u548c": 764, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236": 769, "\u4e2d\u521b\u5efa": 737, "\u4e2d\u53ef\u4ee5\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801": 734, "\u4e2d\u5904\u7406\u6bcf\u4e2a\u6570\u636e\u5b9e\u4f8b\u662f\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5": 735, "\u4e2d\u5b58\u50a8\u7ed3\u679c": 749, "\u4e2d\u5b9a\u4e49\u7684": 765, "\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u96c6\u7684\u57fa\u7c7b": 731, "\u4e2d\u5b9e\u73b0\u4e86\u5e38\u7528\u7684\u6d88\u606f\u51fd\u6570\u548c\u805a\u5408\u51fd\u6570\u4f5c\u4e3a": 749, "\u4e2d\u5df2\u7ecf\u6709\u4e86": 769, "\u4e2d\u6240\u4ecb\u7ecd\u7684": 757, "\u4e2d\u6240\u8ff0\u7684\u5168\u56fe\u8bad\u7ec3": 753, "\u4e2d\u6240\u8ff0\u7684\u8fb9\u56de\u5f52\u6a21\u578b\u76f8\u540c": 768, "\u4e2d\u6240\u91c7\u6837\u7684\u8282\u70b9": 768, "\u4e2d\u627e\u5230": 734, "\u4e2d\u6307\u5b9a": 738, "\u4e2d\u6307\u5b9a\u66f4\u65b0\u51fd\u6570": 749, "\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 739, "\u4e2d\u6587\u7248": [683, 684, 685, 687, 688, 689, 690, 691, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 711, 713, 714, 715, 716, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729], "\u4e2d\u6587\u7248\u94fe\u63a5": 813, "\u4e2d\u662f\u5426\u5b58\u6709\u5904\u7406\u540e\u7684\u6570\u636e": 731, "\u4e2d\u67e5\u770b\u5f02\u6784\u56fe\u5377\u79ef": 769, "\u4e2d\u6807\u8bc6\u8282\u70b9\u6570\u636e": 737, "\u4e2d\u7684": 737, "\u4e2d\u7684\u4e00\u4e2a": 751, "\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20": 759, "\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9": 746, "\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801": 734, "\u4e2d\u7684\u4f8b\u5b50": 769, "\u4e2d\u7684\u505a\u6cd5\u7c7b\u4f3c": 769, "\u4e2d\u7684\u5206\u533a\u6570\u636e\u548c\u76f8\u5173\u6587\u4ef6": 739, "\u4e2d\u7684\u5b57\u6bb5\u540d": 749, "\u4e2d\u7684\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 767, "\u4e2d\u7684\u7279\u5f81\u6765\u52a0\u8f7d\u6807\u7b7e": 759, "\u4e2d\u7684\u8fb9": 746, "\u4e2d\u8282\u70b9\u7684\u96c6\u5408": 767, "\u4e2d\u95f4\u67d0\u4e00\u5c42\u5bf9\u5e94\u7684\u8fb9\u754c\u9700\u8981\u5305\u542b\u8be5\u5c42\u53ca\u6240\u6709\u540e\u7eed\u5c42\u8ba1\u7b97\u6d89\u53ca\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 754, "\u4e2d\u95f4\u6d88\u606f": 749, "\u4e3a\u4e86\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3": 738, "\u4e3a\u4e86\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u83b7\u5f97\u5e73\u8861\u7684\u5de5\u4f5c\u8d1f\u8f7d": 738, "\u4e3a\u4e86\u5904\u7406\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u672c\u5730\u78c1\u76d8\u4e0a\u7684\u56fe\u6570\u636e\u96c6": 731, "\u4e3a\u4e86\u5b8c\u6210\u5355\u4e2a\u56fe\u7684\u9884\u6d4b": 767, "\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684": 746, "\u4e3a\u4e86\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u7c7b": 769, "\u4e3a\u4e86\u5e76\u884c\u5316\u8ba1\u7b97": 736, "\u4e3a\u4e86\u6307\u4ee3\u591a\u6761\u8fb9": 745, "\u4e3a\u4e86\u8bbe\u7f6e": 746, "\u4e3a\u4e86\u968f\u673a": 759, "\u4e3a\u4f8b": 734, "\u4e3a\u540e\u7eed\u5728\u56fe\u4e0a\u8fdb\u884c\u7684\u8ba1\u7b97\u4e0e\u5206\u6790\u7684\u6027\u80fd\u6539\u5584\u63d0\u4f9b\u53ef\u80fd": 734, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": [747, 753, 759], "\u4e3a\u5f02\u6784\u56fe\u4fee\u6539gnn\u6a21\u5757\u7684\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684": 758, "\u4e3a\u5f02\u6784\u56fe\u751f\u6210\u8fb9\u754c\u4e0e\u4e3a\u540c\u6784\u56fe\u751f\u6210\u8fb9\u754c\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c": 754, "\u4e3a\u63d0\u5347\u6570\u636e\u52a0\u8f7d\u901f\u5ea6": 767, "\u4e3a\u6709\u5411\u56fe": 754, "\u4e3a\u67d0\u4e00\u79cd\u8fb9\u7c7b\u578b": 768, "\u4e3a\u6b64": [754, 757], "\u4e3a\u7b80\u4fbf\u8d77\u89c1": 734, "\u4e3a\u7b80\u5355\u8d77\u89c1": 759, "\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0\u7684id": 738, "\u4e3b\u8981\u539f\u56e0\u662fpytorch": 737, "\u4e3b\u8981\u5e94\u7528\u573a\u666f\u662f\u8fd0\u884c\u91c7\u6837api\u4ee5\u652f\u6301\u5c0f\u6279\u91cf\u8bad\u7ec3": 737, "\u4e3b\u8ba1\u7b97\u673a": 739, "\u4e4b\u524d\u58f0\u660e\u5206\u5e03\u5f0f\u5d4c\u5165": 737, "\u4e4b\u524d\u88ab\u58f0\u660e": 737, "\u4e4b\u524d\u8c03\u7528": 737, "\u4e4b\u540e": 762, "\u4e4b\u95f4\u5206\u6570\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e0e": 768, "\u4e4b\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684": 768, "\u4e4b\u95f4\u7684\u5173\u7cfb": 741, "\u4e4b\u95f4\u7684\u5f97\u5206": 768, "\u4e4b\u95f4\u7684\u5f97\u5206\u8981\u9ad8\u4e8e": 768, "\u4e58\u4ee52\u5f97\u5230\u6700\u7ec8\u7ed3\u679c": 749, "\u4e5f\u53ef\u4ee5\u5728\u4e0d\u6d89\u53ca\u6d88\u606f\u4f20\u9012\u7684\u60c5\u51b5\u4e0b": 749, "\u4e5f\u53ef\u4ee5\u662f\u6709\u5411\u7684": 741, "\u4e5f\u5c06\u5728gpu\u4e0a": 744, "\u4e5f\u5c31\u662f\u8bf4": 737, "\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u7ea7\u522b\u7684\u91c7\u6837api": 737, "\u4e5f\u63d0\u4f9b\u4e86": 737, "\u4e5f\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 755, "\u4e5f\u79f0\u4e3a": 749, "\u4e86\u89e3\u4e86\u4e0a\u8ff0\u8ba1\u7b97\u89c4\u5219\u540e": 767, "\u4e8c\u5206\u56fe\u662f\u4e00\u7c7b\u7279\u6b8a\u7684": 741, "\u4e8c\u5206\u56fe\u7684\u60c5\u51b5": 762, "\u4ea4\u53c9\u71b5\u635f\u5931": 768, "\u4eba\u4eec\u81ea\u7136\u4f1a\u60f3\u8981\u5728\u6a21\u578b\u5f00\u53d1\u4e2d\u4f7f\u7528\u5b83\u4eec": 766, "\u4ec5\u4ec5\u4fdd\u7559\u4e86\u8f93\u51fa\u8282\u70b9\u6240\u9700\u8981\u6536\u96c6\u6d88\u606f\u7684\u8fb9": 754, "\u4ec5\u5141\u8bb8\u4f7f\u7528\u6570\u503c\u7c7b\u578b": 743, "\u4ec5\u6709\u7684\u4ee3\u7801\u4fee\u6539\u51fa\u73b0\u5728\u7b2c4": 736, "\u4ecd\u7136\u5177\u6709\u76f8\u540c\u7684\u7ed3\u679c": 767, "\u4ece": [731, 754], "\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230": 754, "\u4ece\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa": 754, "\u4ece\u5185\u5b58\u89d2\u5ea6\u6765\u8bf4\u662f\u9ad8\u6548\u7684": 750, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [734, 740, 745, 747], "\u4ece\u5de6\u81f3\u53f3": 767, "\u4ece\u6210\u5bf9\u7684\u8fb9": 742, "\u4ece\u7528\u4e8e\u56fe\u548c\u7a00\u758f\u77e9\u9635\u7684\u5916\u90e8python\u5e93": 742, "\u4ece\u76ee\u5f55": 735, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe\u6570\u636e": 742, "\u4ece\u800c\u4ea7\u751f\u5305\u542b\u8fb9\u5c0f\u6279\u6b21\u7684\u5b50\u56fe\u4ee5\u53ca\u4f9b\u4e0b\u6587\u4e2d\u6a21\u5757\u4f7f\u7528\u7684": 755, "\u4ece\u800c\u4ee5\u5c0f\u6279\u6b21\u904d\u5386\u6574\u4e2a\u56fe\u6570\u636e\u96c6": 767, "\u4ece\u800c\u51cf\u5c11\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u7f51\u7edc\u901a\u4fe1": 738, "\u4ece\u800c\u5b8c\u6210\u540e\u5411\u4f20\u64ad": 769, "\u4ece\u800c\u5bfc\u81f4\u591a\u6b21\u521b\u5efa\u548c\u5220\u9664": 737, "\u4ece\u800c\u8fdb\u4e00\u6b65\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u5e76\u8282\u7701\u5185\u5b58\u5360\u7528": 750, "\u4ece\u8f93\u51fa\u5f00\u59cb": 753, "\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u6d88\u606f\u4f20\u9012\u5747\u4f7f\u7528": 762, "\u4ee3\u7801\u5b9e\u73b0\u7684\u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u8c03\u7528": 755, "\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u8bfb": 758, "\u4ee3\u7801\u91cc\u79fb\u9664\u4e86\u5f52\u4e00\u5316": 758, "\u4ee3\u8868\u8ba1\u7b97": 759, "\u4ee5\u4e0a3\u79cd\u56fe\u7c7b\u578b\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u76f8\u540c\u7684": 762, "\u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u73b0\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684": 750, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u5f20\u91cf": 737, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e862\u4e2a\u8282\u70b9\u7279\u5f81": 743, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u6570\u636e\u52a0\u8f7d\u5668": 755, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u7684": 759, "\u4ee5\u4e0b\u4ee3\u7801\u5728\u6ce8\u91ca\u91cc\u4fdd\u7559\u4e86\u6574\u56fe\u5b9e\u73b0\u7684\u8bed\u53e5": 758, "\u4ee5\u4e0b\u4ee3\u7801\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f8b\u5b50": 766, "\u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5728": 732, "\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4e3a": 733, "\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5bf9\u6bcf\u79cd\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a\u53d6\u5e73\u5747\u503c\u5e76\u6c42\u548c": 767, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u4e3a\u4ecescipy\u7a00\u758f\u77e9\u9635\u548cnetworkx\u56fe\u521b\u5efadgl\u56fe\u7684\u793a\u4f8b": 742, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u5b9e\u73b0\u4e86\u901a\u8fc7\u5408\u5e76\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u5e76\u5c06\u5176\u6620\u5c04\u5230\u5168\u8fde\u63a5\u5c42\u6765\u9884\u6d4b\u8fb9\u7684\u5f97\u5206": 755, "\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210\u4e86\u4e00\u4e2a\u968f\u673a\u56fe\u7528\u4e8e\u6f14\u793a\u8fb9\u5206\u7c7b": 765, "\u4ee5\u4e0b\u4ee3\u7801\u7528\u4e86": 765, "\u4ee5\u4e0b\u4ee3\u7801\u7531\u4e8e\u8f93\u51fa\u8282\u70b9\u672a\u8986\u76d6\u6240\u6709\u8fd9\u4e9b\u8282\u70b9": 754, "\u4ee5\u4e0b\u4ee3\u7801\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u5206\u5e03\u5f0f\u65b9\u5f0f\u8bad\u7ec3graphsage\u7684\u793a\u4f8b": 736, "\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86": 767, "\u4ee5\u4e0b\u5185\u5bb9\u8bf4\u660e\u4e86\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f": 730, "\u4ee5\u4e0b\u56fe\u4e3a\u4f8b": 754, "\u4ee5\u4e0b\u5c0f\u8282\u5c06\u9010\u4e00\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4": 759, "\u4ee5\u4e0b\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9\u5747\u5300\u91c7\u68375\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 757, "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50": 751, "\u4ee5\u4e0b\u793a\u4f8b\u5c06\u8bad\u7ec3\u96c6\u5185\u548c\u8bad\u7ec3\u96c6\u5916\u7684\u8282\u70b9\u770b\u4f5c\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 738, "\u4ee5\u4e0b\u9762\u7528\u4e8e\u5168\u56fe\u7684gnn\u6a21\u5757\u4e3a\u4f8b": 758, "\u4ee5\u4e0b\u9762\u7684\u81ea\u5b9a\u4e49\u56fe\u5377\u79ef\u6a21\u5757\u4ee3\u7801\u4e3a\u4f8b": 758, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u5b50\u56fe\u7ed3\u6784": 738, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8282\u70b9\u7279\u5f81": 738, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8fb9\u7279\u5f81": 738, "\u4ee5\u4fbf\u533a\u5206": 755, "\u4ee5\u4fbf\u5b83\u4e5f\u53ef\u4ee5\u5728\u5f02\u6784\u56fe\u4e0a\u4f7f\u7528": 754, "\u4ee5\u4fbf\u6bcf\u4e2a\u8bad\u7ec3\u5668\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bad\u7ec3\u96c6\u5b50\u96c6": 737, "\u4ee5\u50a8\u5b58\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u5c5e\u6027": 743, "\u4ee5\u5145\u5206\u5229\u7528": 762, "\u4ee5\u5229\u7528\u66f4\u5927\u8303\u56f4\u7684\u90bb\u5c45\u4fe1\u606f": 769, "\u4ee5\u53ca": 736, "\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6267\u884c\u7684\u8ba1\u7b97": 740, "\u4ee5\u53ca\u53ef\u5b9a\u5236\u7684\u805a\u5408\u51fd\u6570\u548c\u975e\u7ebf\u6027\u51fd\u6570": 769, "\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5e26\u6709\u6d88\u606f\u4f20\u9012\u7684gnn\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282": 769, "\u4ee5\u53ca\u60f3\u8981\u4e86\u89e3\u5982\u4f55\u5728\u5c0f\u6279\u6b21\u6570\u636e\u4e0a\u8fdb\u884c\u8bc4\u4f30\u548c\u63a8\u7406\u6a21\u578b\u7684\u7528\u6237": 753, "\u4ee5\u53ca\u628a\u5b83\u4eec\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\u7684\u7c7b\u578b\u8fdb\u884c\u5408\u5e76\u540e\u7684\u5355\u4e00\u8fb9\u7c7b\u578b": 765, "\u4ee5\u53ca\u6765\u81ea\u8f93\u5165\u8282\u70b9\u7684\u8868\u793a\u5982\u4f55\u4f20\u64ad\u5230\u8f93\u51fa\u8282\u70b9": 759, "\u4ee5\u53ca\u7531\u5c0f\u6279\u6b21\u8fb9\u5bfc\u51fa\u7684\u539f\u59cb\u56fe\u7684\u5b50\u56fe": 755, "\u4ee5\u53ca\u8ba1\u7b97\u5176\u4e24\u7aef\u8282\u70b9\u8868\u793a\u6240\u9700\u7684\u5757\u5217\u8868": 755, "\u4ee5\u53ca\u8bf8\u5982\u7c7b\u522b\u6570": 731, "\u4ee5\u53ca\u8d1f\u91c7\u6837\u5668": 757, "\u4ee5\u53ca\u8fb9\u7684\u6807\u7b7e": 765, "\u4ee5\u591a\u5c42gcn\u4e3a\u4f8b": 759, "\u4ee5\u5bfc\u5165\u6570\u636e\u7684\u7279\u5b9a\u90e8\u5206": 734, "\u4ee5\u5c06\u4efb\u4f55\u8fb9\u754c\u8f6c\u6362\u4e3a\u5757": 754, "\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u7ec4\u8fb9\u8fdb\u884c\u8fed\u4ee3": 755, "\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u548c\u7f51\u7edc\u901a\u4fe1": 736, "\u4ee5\u652f\u6301\u9700\u8981\u8282\u70b9\u5d4c\u5165\u7684\u76f4\u63a8": 737, "\u4ee5\u67e5\u770b\u5982\u4f55\u4ece\u5916\u90e8\u6570\u636e\u6e90\u6784\u5efa\u56fe\u7684\u5b8c\u6574\u6307\u5357": 734, "\u4ee5\u6982\u7387p\u968f\u673a\u9009\u62e9\u8fb9": 754, "\u4ee5\u7a81\u51fa\u5c55\u793a\u7528\u4e8e\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 734, "\u4ee5\u83b7\u5f97": 734, "\u4ee5\u8868\u683c\u683c\u5f0f\u50a8\u5b58\u8282\u70b9": 742, "\u4ee5\u8bbf\u95ee\u7fa4\u96c6\u4e2d\u7684\u5206\u533a\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 737, "\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 737, "\u4ee5\u8fdb\u884c\u8fed\u4ee3": 734, "\u4ee5\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 754, "\u4ee5\u907f\u514d\u91c7\u6837\u6240\u5e26\u6765\u7684\u968f\u673a\u6027": 756, "\u4ee5\u9632\u4f5c\u8005\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u66f4\u6539\u4e86\u6587\u4ef6": 732, "\u4efb\u4f55\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u4ee5\u7528\u4f5c\u8fb9\u754c": 754, "\u4efb\u4f55\u6d89\u53cagpu\u56fe\u7684\u64cd\u4f5c\u90fd\u662f\u5728gpu\u4e0a\u8fd0\u884c\u7684": 744, "\u4efb\u52a1": 768, "\u4efb\u52a1\u52a0\u8f7d\u6570\u636e\u96c6": 733, "\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u4e00\u6b65\u805a\u5408": 763, "\u4f1a\u6839\u636eip\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u5bf9\u5e94\u7684\u8ba1\u7b97\u673a\u6765\u5b58\u50a8\u56fe\u5206\u533a": 739, "\u4f1a\u7ed3\u5408\u805a\u5408\u540e\u7684\u6d88\u606f\u548c\u8282\u70b9\u672c\u8eab\u7684\u7279\u5f81\u6765\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 748, "\u4f1a\u805a\u5408\u8282\u70b9\u63a5\u53d7\u5230\u7684\u6d88\u606f": 748, "\u4f1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684": 763, "\u4f1a\u975e\u5e38\u6d88\u8017\u8d44\u6e90": 756, "\u4f20\u7ed9": 738, "\u4f46\u4e0d\u540c\u7684\u662f": 767, "\u4f46\u4e0d\u652f\u6301\u4e00\u4e9b\u8ba1\u7b97\u8fd0\u7b97\u7b26": 737, "\u4f46\u5176\u57fa\u672c\u601d\u60f3\u548c\u672c\u7ae0\u63cf\u8ff0\u7684\u6d41\u7a0b\u662f\u4e00\u81f4\u7684": 765, "\u4f46\u53ea\u5bf9\u4e00\u5c42\u8fdb\u884c\u8ba1\u7b97": 756, "\u4f46\u5b83\u6bcf\u6b21\u53ea\u4e3a\u4e00\u5c42\u8fdb\u884c\u91c7\u6837": 756, "\u4f46\u662f": [754, 762], "\u4f46\u662f\u4efb\u4f55\u62e5\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u7528\u4f5c\u8fb9\u754c": 754, "\u4f46\u6709\u65f6\u7528\u6237\u8fd8\u662f\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u91c7\u6837\u5668": 754, "\u4f46\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u79cd\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe\u5bf9\u8c61": 733, "\u4f46\u8fd8\u662f\u6709\u4e00\u4e9b\u660e\u663e\u7684\u533a\u522b": 755, "\u4f4d\u4e8e\u8282\u70b9\u5217\u8868\u7684\u6700\u524d\u9762": 762, "\u4f4d\u6216": 745, "\u4f4d\u6574\u6570": 745, "\u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u8282\u70b9id\u548c\u8fb9id": 745, "\u4f5c\u4e3a\u4e00\u4e2a\u672a\u7ecf\u8fc7\u5f52\u4e00\u5316\u7684\u7c7b\u522b\u7684\u5206\u5e03": 765, "\u4f5c\u4e3a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u5982\u4f55\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684dgl": 760, "\u4f5c\u4e3a\u5165\u53c2": 757, "\u4f5c\u4e3a\u53c2\u6570": 759, "\u4f5c\u4e3a\u6f14\u793a\u7684\u6837\u4f8b\u4ee3\u7801": 769, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e": 737, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e\u4e4b\u4e00\u6dfb\u52a0\u5230": 737, "\u4f5c\u4e3a\u8282\u70b9\u8868\u793a\u8ba1\u7b97\u6a21\u578b\u4ee5\u53ca\u524d\u4e00\u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684": 765, "\u4f5c\u4e3a\u8f93\u5165": 754, "\u4f5c\u4e3a\u8fb9\u9884\u6d4b\u6a21\u578b": 765, "\u4f5c\u5f0a": 755, "\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9": 734, "\u4f7f\u7528": 737, "\u4f7f\u7528dgl": 767, "\u4f7f\u7528int32\u6784\u5efa\u56fe": 745, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": [730, 747], "\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 749, "\u4f7f\u7528\u5e73\u5747\u8bfb\u51fa\u8ba1\u7b97\u56fe\u8868\u793a": 767, "\u4f7f\u7528\u5e95\u5c42api\u65f6": 737, "\u4f7f\u7528\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 769, "\u4f7f\u7528\u6240\u6709\u8282\u70b9": 769, "\u4f7f\u7528\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 769, "\u4f7f\u7528\u6709\u5411\u7684networkx\u56fe": 742, "\u4f7f\u7528\u6a21\u578b\u65f6\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u8282\u70b9\u7c7b\u578b\u548c\u6570\u636e\u7279\u5f81\u7684\u5b57\u5178": 765, "\u4f7f\u7528\u8be5\u540d\u79f0\u6765\u8bc6\u522b\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u56fe": 738, "\u4f7f\u7528\u8d1f\u91c7\u6837\u65b9\u6cd5\u540e": 757, "\u4f7f\u7528\u8fd9\u6837\u7684": 737, "\u4f8b\u5982": [735, 737, 738, 739, 740, 741, 743, 746, 749, 752, 754, 755, 757, 758, 759, 761, 765, 766, 767, 768, 769], "\u4f8b\u5982nf": 739, "\u4f8b\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7fa4\u793e\u533a": 767, "\u4f8b\u5982\u4f7f\u7528": 767, "\u4f8b\u5982\u5728\u4e0b\u56fe\u4e2d": 746, "\u4f8b\u5982\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b": 737, "\u4f8b\u5982\u60f3\u5728\u67d0\u4e00\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u5206\u7c7b\u4efb\u52a1": 765, "\u4f8b\u5982\u6c42\u548c\u4ee5\u53ca\u6c42\u5747\u503c": 737, "\u4f8b\u5982\u8282\u70b9\u548c\u8fb9\u7684\u6570\u91cf": 737, "\u4f9d\u6279\u6b21\u5bf9\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3": 756, "\u4fdd\u5b58dglgraph\u5bf9\u8c61\u548c\u6807\u7b7e\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 735, "\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 735, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [730, 731, 747], "\u4fdd\u5b58\u56fe\u548c\u6807\u7b7e": 735, "\u4fdd\u5b58\u8bad\u7ec3\u597d\u7684\u6a21\u578b": 769, "\u4fdd\u7559\u5173\u7cfb": 746, "\u4fee\u6539\u6a21\u578b\u8bad\u7ec3\u5faa\u73af\u90e8\u5206": 759, "\u501f\u7528\u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u5c0f\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5": 767, "\u503c\u4e3a\u4e00\u7684\u5143\u7d20\u8868\u793a\u4e00\u6761\u8fb9": 766, "\u503c\u4e3a\u4f5c\u7528\u5728\u8be5\u5173\u7cfb\u4e0ann\u6a21\u5757\u5bf9\u8c61": 763, "\u503c\u5219\u4e3a\u5bf9\u5e94nn\u6a21\u5757\u7684\u81ea\u5b9a\u4e49\u53c2\u6570": 763, "\u503c\u662f\u8fd9\u79cd\u5173\u7cfb\u5bf9\u5e94": 751, "\u5047\u5b9agraph": 766, "\u5047\u8bbe\u6279\u6b21\u5927\u5c0f\u4e3a": 767, "\u5047\u8bbe\u6709\u5982\u4e0b\u7684\u8fb9\u754c": 754, "\u5047\u8bbe\u7ea2\u8272\u8282\u70b9\u4e3a\u9700\u8981\u66f4\u65b0\u7684\u76ee\u6807\u8282\u70b9": 754, "\u5047\u8bbe\u8282\u70b9": 748, "\u5047\u8bbe\u8981\u4f7f\u75282\u5c42gnn\u8ba1\u7b97\u79cd\u5b50\u8282\u70b98": 754, "\u5143\u7d20\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8fb9\u7c7b\u578b": 767, "\u5143\u7ec4\u4e2d\u7684\u7b2c1\u4e2a\u5143\u7d20\u4e3a\u6e90\u8282\u70b9\u7279\u5f81": 762, "\u5148\u6765\u770b\u4e00\u4e0b": 754, "\u5168\u56fe": 769, "\u51713\u4e2a\u6210\u5458\u5c5e\u6027": 749, "\u5173\u4e8e": 743, "\u5173\u4e8edgl\u5185\u7f6e\u56fe\u5377\u79ef\u6a21\u5757\u7684\u5b8c\u6574\u5217\u8868": 769, "\u5173\u4e8e\u5185\u7f6e\u51fd\u6570\u7684\u5217\u8868": 749, "\u5173\u4e8e\u5185\u7f6e\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5": 757, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [740, 747], "\u5173\u4e8e\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u8fdb\u9636\u7528\u6cd5": 749, "\u5173\u6ce8": [746, 755], "\u5173\u7cfb": 755, "\u5173\u7cfb\u53ef\u4ee5\u662f\u65e0\u5411\u7684": 741, "\u5173\u7cfb\u8868\u793a\u4e3a": 762, "\u5176\u4e2d": [738, 745, 750, 754, 763, 767, 768], "\u5176\u4e2dxxx\u662f\u63d0\u4f9b\u7ed9\u5212\u5206api\u7684\u56fe\u7684\u540d\u79f0": 738, "\u5176\u4e2d\u4e00\u4e9b\u4ee3\u7801\u6f14\u793a\u4e86\u67e5\u8be2\u56fe\u7ed3\u6784\u7684\u90e8\u5206api\u7684\u4f7f\u7528\u65b9\u6cd5": 745, "\u5176\u4e2d\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u6a21\u5757\u7ec4\u4ef6": 767, "\u5176\u4e2d\u5305\u542b\u6240\u6709\u8d1f\u91c7\u6837\u7684\u8282\u70b9\u5bf9\u4f5c\u4e3a\u8fb9": 768, "\u5176\u4e2d\u5305\u542b\u6709\u5173\u8f93\u5165\u56fe\u7684\u6240\u6709\u4fe1\u606f": 737, "\u5176\u4e2d\u5305\u542b\u7531\u8d1f\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u6240\u6709\u4e0d\u5b58\u5728\u7684\u8fb9": 757, "\u5176\u4e2d\u5305\u542b\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u5185\u6240\u6709\u7684\u8fb9": 757, "\u5176\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b": 737, "\u5176\u4e2d\u7684\u8fb9\u8fde\u63a5\u4e24\u7c7b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 741, "\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8fb9\u754c": 754, "\u5176\u4e2d\u7ea2\u8272\u548c\u7eff\u8272\u8282\u70b9": 754, "\u5176\u4e2d\u8282\u70b9\u548c\u8fb9\u53ef\u4ee5\u662f\u6709\u7c7b\u578b\u7684": 740, "\u5176\u4f59\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8": 736, "\u5176\u503c\u4e3a\u6bcf\u4e2a\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 763, "\u5176\u6570\u5b66\u5b9a\u4e49\u4e3a": 763, "\u5176\u6700\u7ec8\u8868\u793a\u5c06\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c": 753, "\u5176\u6b21": 767, "\u5176\u6d88\u606f\u4f20\u9012\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b": 754, "\u5176\u7ed3\u679c": 744, "\u5176\u7ed3\u679c\u662f": 756, "\u5176\u884c\u4e3a\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u975e\u5e38\u76f8\u4f3c": 737, "\u5176\u9002\u7528\u4e8e\u5355\u5411\u4e8c\u5206\u56fe": 758, "\u5176\u952e\u4e3a": 763, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 732, "\u5177\u4f53\u5982\u4e0b\u6240\u793a": 769, "\u5177\u4f53\u6765\u8bf4": [736, 756], "\u5177\u4f53\u884c\u4e3a\u5982\u4e0b": 746, "\u5177\u6709\u5bf9\u96c6\u7fa4\u5185\u6240\u6709\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u65e0\u5bc6\u7801ssh\u8bbf\u95ee\u6743\u9650": 739, "\u5177\u6709\u76f8\u540c\u7684\u952e": 763, "\u5185\u7f6e\u51fd\u6570": 749, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": [747, 748], "\u5185\u7f6e\u6d88\u606f\u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u5143\u51fd\u6570\u6216\u4e8c\u5143\u51fd\u6570": 749, "\u5185\u7f6e\u7684dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u7684\u8f93\u5165\u56fe\u53ca\u7279\u5f81\u5fc5\u987b\u6ee1\u8db3\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00": 758, "\u518d\u5c06": 749, "\u518d\u6784\u5efa\u4e00\u4e2a\u5173\u7cfb\u5b57\u5178": 746, "\u518d\u6b21\u63d0\u9192\u4e0b": 759, "\u518d\u7531\u8fb9\u754c\u8f6c\u6362\u6210\u5757": 754, "\u51c6\u5907\u4e00\u4e2a\u6279\u6b21\u7684\u56fe": 767, "\u51fa\u4e8e\u5efa\u6a21\u7684\u76ee\u7684": 746, "\u51fd\u6570": [734, 745, 746, 749, 762, 767], "\u51fd\u6570\u4e2d\u5b9e\u73b0\u6570\u636e\u5904\u7406": 734, "\u51fd\u6570\u6267\u884c\u4e86\u5b9e\u9645\u7684\u6d88\u606f\u4f20\u9012\u548c\u8ba1\u7b97": 762, "\u51fd\u6570\u662f\u57fa\u4e8e\u5747\u5300\u5206\u5e03\u7684\u91c7\u6837\u51fd\u6570": 757, "\u51fd\u6570\u6765\u5728\u8fd0\u884c\u65f6\u62c6\u5206\u8bad\u7ec3": 737, "\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684": 745, "\u51fd\u6570\u6765\u6784\u5efa\u4e00\u4e2a": 745, "\u51fd\u6570\u7684\u5185\u5bb9\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a3\u9879\u64cd\u4f5c": 762, "\u51fd\u6570\u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u5728\u5b8c\u6210\u6d88\u606f\u805a\u5408\u540e\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 762, "\u51fd\u6570\u7684\u8f93\u5165\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 765, "\u51fd\u6570\u7684\u8f93\u51fa\u4e0d\u4f1a\u5168\u4e3a0": 762, "\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u7684\u5bf9\u8c61": 763, "\u51fd\u6570\u805a\u5408\u6765\u81ea\u591a\u4e2a\u5173\u7cfb\u7684\u7ed3\u679c": 763, "\u51fd\u6570\u8fd8\u4f7f\u75282\u4e2a\u989d\u5916\u7684\u5b57\u5178\u53c2\u6570": 763, "\u51fd\u6570\u8fdb\u884c\u89e3\u538b\u7f29": 732, "\u51fd\u6570\u9700\u8981\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u8f93\u5165\u56fe\u7c7b\u578b": 763, "\u51fd\u6570\u9700\u8981\u5904\u7406\u8f93\u5165\u7684\u8bb8\u591a\u6781\u7aef\u60c5\u51b5": 762, "\u5206\u522b\u5728\u7b2c8": 743, "\u5206\u522b\u662f\u53ef\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u51fd\u6570\u4e0e\u805a\u5408\u51fd\u6570": 754, "\u5206\u522b\u662f\u77e9\u9635": 750, "\u5206\u522b\u7528\u4e8e\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5f02\u6784\u56fe\u548c\u52a0\u8f7d\u5b83\u4eec": 746, "\u5206\u522b\u7528\u4e8e\u8bbf\u95ee\u6e90\u8282\u70b9": 749, "\u5206\u533a": [736, 738], "\u5206\u533a0\u7684\u6570\u636e": 738, "\u5206\u533a1\u7684\u6570\u636e": 738, "\u5206\u533a\u6570\u636e\u548c\u8bad\u7ec3\u811a\u672c\u90fd\u5df2\u88ab\u590d\u5236\u5230\u96c6\u7fa4\u6216\u5b58\u5728\u96c6\u7fa4\u4e2d\u6240\u6709\u8ba1\u7b97\u673a\u5747\u53ef\u8bbf\u95ee\u7684\u5168\u5c40\u5b58\u50a8\u7a7a\u95f4": 739, "\u5206\u533a\u914d\u7f6e\u6587\u4ef6\u4ee5\u53ca\u56fe\u5206\u533a": 739, "\u5206\u5e03\u5f0f\u5d4c\u5165\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u5f20\u91cf\u4e4b\u4e0a": 737, "\u5206\u5e03\u5f0f\u5d4c\u5165\u7684\u521b\u5efa\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684\u521b\u5efa\u975e\u5e38\u76f8\u4f3c": 737, "\u5206\u5e03\u5f0f\u5f20\u91cf\u5fc5\u987b\u4e0e\u56fe\u7684\u8282\u70b9\u6216\u8fb9\u76f8\u5173\u8054": 737, "\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668\u5177\u6709\u4e0epytorch": 737, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u548c\u72ec\u7acb\u6a21\u5f0f": 737, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": [736, 747], "\u5206\u5e03\u5f0f\u8bad\u7ec3": 747, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u5c06\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u5206\u533a": 739, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [736, 747], "\u5206\u5e03\u5f0f\u91c7\u6837\u548c\u6570\u636e\u5206\u5272": 737, "\u5206\u5e03\u5f0f\u91c7\u6837\u6a21\u5757\u9075\u5faa\u76f8\u540c\u7684\u8bbe\u8ba1": 737, "\u5206\u914did\u540e": 738, "\u5206\u914d\u7ed9": 737, "\u5207\u7247\u53d6\u8f93\u5165\u7279\u5f81\u7684\u524d\u51e0\u884c": 758, "\u5207\u7247\u884c\u6570\u53ef\u4ee5\u901a\u8fc7": 758, "\u5212\u5206api\u901a\u8fc7\u5728": 738, "\u5212\u5206\u6216\u7279\u5f81\u5f52\u4e00\u5316\u7b49\u64cd\u4f5c\u5efa\u8bae\u5728": 731, "\u5212\u5206\u63a9\u7801": 734, "\u5217\u8868": 733, "\u5219": 737, "\u5219dgl\u4f1a\u81ea\u52a8\u5c06\u8f93\u5165\u8282\u70b9\u7279\u5f81\u524d\u4e00\u90e8\u5206\u8bbe\u4e3a\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 758, "\u5219dgl\u5141\u8bb8\u4f7f\u7528": 746, "\u5219\u4e0d\u9700\u8981\u6307\u5b9a\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b": 746, "\u5219\u53ea\u9700\u8981\u6309\u7167\u5982\u4e0b\u7684\u65b9\u6cd5\u91cd\u5199forward\u51fd\u6570": 758, "\u5219\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6d88\u606f\u6216\u805a\u5408\u51fd\u6570": 749, "\u5219\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u7b80\u5355\u5730\u5b9a\u4e49\u91c7\u6837\u5668": 754, "\u5219\u53ef\u4ee5\u6dfb\u52a0\u53c2\u6570": 734, "\u5219\u53ef\u4ee5\u901a\u8fc7": 759, "\u5219\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u76f4\u63a5\u8bfb\u53d6\u5757\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 754, "\u5219\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u51fd\u6570": 732, "\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee": 759, "\u5219\u56fe\u8bfb\u51fa\u7684\u5f20\u91cf\u5f62\u72b6\u4e3a": 767, "\u5219\u5b83\u4e5f\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55": 732, "\u5219\u6307\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u7ed3\u679c": 763, "\u5219\u6a21\u578b\u5728\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3\u65f6\u53ea\u9700\u505a\u5f88\u5c0f\u7684\u8c03\u6574": 759, "\u5219\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u8fb9\u7c7b\u578b\u53ca\u5176\u53cd\u5411\u8fb9\u7c7b\u578b\u4e4b\u95f4\u7684\u6620\u5c04": 755, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u5411\u4e8c\u5206\u56fe": 758, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u540c\u6784\u56fe": 758, "\u5219\u8fb9\u662f\u65e0\u5411\u7684": 741, "\u5219\u8fb9\u662f\u6709\u5411\u7684": 741, "\u5219\u901a\u5e38\u4e0d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7cbe\u786e\u7684\u79bb\u7ebf\u63a8\u65ad": 756, "\u5219\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u4f18\u5316\u5668": 737, "\u5219\u9ed8\u8ba4\u503c\u4e3a": 739, "\u521b\u5efa": 734, "\u521b\u5efa\u4e00\u4e2a": 745, "\u521b\u5efa\u4e00\u4e2a\u5177\u67093\u79cd\u8282\u70b9\u7c7b\u578b\u548c3\u79cd\u8fb9\u7c7b\u578b\u7684\u5f02\u6784\u56fe": 746, "\u521b\u5efa\u5206\u5e03\u5f0f\u56fe\u5bf9\u8c61": 736, "\u521b\u5efa\u5d4c\u5165\u65f6": 737, "\u521b\u5efa\u800c\u6765": 742, "\u521b\u5efa\u91c7\u6837\u5668": 736, "\u521b\u5efa\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u793a\u4f8b": 734, "\u521d\u59cb\u5316api\u5e94\u6309\u4ee5\u4e0b\u987a\u5e8f\u8c03\u7528": 737, "\u521d\u59cb\u5316dgl\u7684\u5206\u5e03\u5f0f\u6a21\u5757": 736, "\u521d\u59cb\u5316\u53c2\u6570": 761, "\u521d\u59cb\u56fe\u548c\u8981\u8ba1\u7b97\u8868\u793a\u7684\u8282\u70b9": 754, "\u5220\u9664\u5c0f\u6279\u6b21\u4e2d\u7684\u8fb9\u53ca\u5176\u53cd\u5411\u8fb9\u7684\u65b9\u6cd5\u5982\u4e0b": 755, "\u5229\u7528\u8282\u70b9\u81ea\u8eab\u7684\u7279\u5f81\u548c\u5176\u90bb\u8282\u70b9\u53ca\u8fb9\u7684\u7279\u5f81\u6765\u8ba1\u7b97\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 769, "\u5229\u7528\u8fd9\u4e9b\u4f18\u5316\u7684\u4e00\u4e2a\u5e38\u89c1\u5b9e\u8df5\u662f\u901a\u8fc7\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 750, "\u5230": [745, 765], "\u524d\u8005\u5728": 737, "\u524d\u9762\u7ae0\u8282\u91cc\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7528\u5728\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 754, "\u5269\u4f59\u90e8\u5206\u7684\u8bad\u7ec3\u4ee3\u7801\u548c\u540c\u6784\u56fe\u4ee3\u7801\u76f8\u540c": 767, "\u52a0\u6743\u7684": 741, "\u52a0\u6cd5\u53ef\u4ee5\u901a\u8fc7dgl\u7684\u5185\u7f6e\u51fd\u6570": 750, "\u52a0\u8f7d": 733, "\u5305\u542b\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b": 758, "\u5305\u542b\u4e86\u6bcf\u4e2agnn\u5c42\u8981\u8ba1\u7b97\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u51fa": 759, "\u5305\u542b\u4e86\u96c6\u7fa4\u4e2d\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 739, "\u5305\u542b\u591a\u4e2a\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u7c7b": 736, "\u5305\u542b\u90bb\u5c45\u91c7\u6837\u548c\u6d88\u606f\u4f20\u9012": 756, "\u5305\u62ec": [736, 742, 762], "\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e": 768, "\u5305\u62ec\u5206\u533a\u4e2d\u7684\u56fe\u7ed3\u6784": 737, "\u5305\u62ec\u81ea\u5faa\u73af\u7684\u8fb9": 741, "\u5305\u62ec\u8bbf\u95ee\u8282\u70b9": 737, "\u5305\u63d0\u4f9b\u4e86\u7528\u4e8e\u4e0b\u8f7d\u548c\u5904\u7406ogb\u6570\u636e\u96c6\u5230": 733, "\u533a\u522b\u53ea\u5728\u4e8e\u8282\u70b9\u88ab\u5212\u5206\u4e3a\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 758, "\u5355\u5411\u4e8c\u5206\u56fe": 758, "\u5355\u72ec\u8c03\u7528\u9010\u8fb9\u8ba1\u7b97": 749, "\u5373": [750, 754, 766], "\u5373\u4e00\u7ec4\u673a\u5668": 736, "\u5373\u4efb\u610f\u4e24\u4e2a\u56fe\u4e4b\u95f4\u6ca1\u6709\u8fb9\u8fde\u63a5": 767, "\u5373\u4f7f": 737, "\u5373\u6267\u884c": 750, "\u5373\u6839\u636e\u7ed3\u6784\u548c\u6574\u4f53\u4fe1\u606f\u5bf9\u56fe\u8fdb\u884c\u5206\u7c7b": 767, "\u5373\u6b63\u786e\u7684\u6807\u6ce8": 769, "\u5373\u6bcf\u4e2a\u884c\u5207\u7247\u50a8\u5b581\u4e2a\u8282\u70b9\u62161\u6761\u8fb9\u7684\u7279\u5f81": 743, "\u5373\u8282\u70b94": 754, "\u5373\u8fb9": 745, "\u5373\u9884\u6d4b\u4efb\u52a1\u6570": 734, "\u539f\u5219\u662f\u5c06": 758, "\u539f\u56e0\u662f\u6d88\u606f\u4f20\u9012\u540e\u7684\u7279\u5f81\u7ec4\u5408\u9700\u8981\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u8282\u70b9\u8868\u793a": 754, "\u539f\u56e0\u662f\u8fd9\u9700\u8981\u4e3a\u6bcf\u4e00\u5c42\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u8868\u793a": 756, "\u539f\u56fe\u4e0a\u7684\u5176\u4ed6\u8282\u70b9\u662f\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u7684": 754, "\u539f\u59cb\u7279\u5f81\u5728cpu\u4e0a": 744, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8282\u70b9id": 746, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8fb9id": 746, "\u539f\u59cb\u7684\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684id\u88ab\u5b58\u50a8\u5728": 746, "\u539f\u59cb\u8282\u70b9\u7c7b\u578b": 746, "\u539f\u59cb\u8fb9\u7c7b\u578b": 746, "\u53c2\u6570": 763, "\u53c2\u8003\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7b2c16\u548c18\u884c": 743, "\u53c2\u8003\u624b\u518c\u63d0\u4f9b\u4e86\u8be5\u7528\u6cd5\u7684\u66f4\u591a\u7ec6\u8282": 742, "\u53c2\u8003\u7528\u6237\u6307\u5357": 751, "\u53c2\u89c1": [749, 758], "\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u548c\u6574\u578b": 743, "\u53cd\u5411\u8fb9\u901a\u5e38\u5177\u6709\u4e0e\u6b63\u5411\u8fb9\u672c\u8eab\u4e0d\u540c\u7684\u8fb9\u7c7b\u578b": 755, "\u53d6\u5e73\u5747\u503c": 767, "\u53d8\u91cf": 766, "\u53e6\u4e00\u4e2a\u5e94\u7528\u4e8e": 750, "\u53e6\u4e00\u4e2a\u7528\u4e8e\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 737, "\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 744, "\u53e6\u5916": [737, 739, 750], "\u53e6\u89c1": 742, "\u53ea\u4f7f\u7528": 746, "\u53ea\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u5305\u62ec\u8282\u70b9\u8868\u793a\u7684\u5b57\u5178\u6765\u8ba1\u7b97\u9884\u6d4b\u503c": 769, "\u53ea\u8981\u4f7f\u8fd4\u56de\u7684\u56fe\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9": 754, "\u53ea\u9700\u8981\u6309\u4e0b\u4f8b\u7f16\u5199\u4ee3\u7801": 765, "\u53ea\u9700\u8981\u8282\u70b94": 754, "\u53ea\u9700\u8981\u9884\u6d4b\u6bcf\u4e2a\u8fb9\u7684\u6807\u91cf\u5206\u6570\u800c\u4e0d\u662f\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03": 757, "\u53ef\u4ee5\u4ece\u5916\u90e8\u6765\u6e90\u6784\u9020\u4e00\u4e2a": 742, "\u53ef\u4ee5\u4f7f\u7528": [745, 754], "\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u56fe\u8868\u793a": 741, "\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e0a\u8ff0\u8fb9\u754c\u8f6c\u6362\u4e3a\u8f93\u51fa\u8282\u70b9\u4e3a8\u7684\u5757": 754, "\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4ee5\u4e0b\u4ee3\u7801\u7684\u65b9\u6cd5\u83b7\u53d6\u5355\u4e2a\u56fe\u6570\u636e\u96c6\u7684\u56fe\u6570\u636e": 764, "\u53ef\u4ee5\u5148\u62bd\u53d6\u5f02\u6784\u56fe\u7684\u8fb9\u7c7b\u578b\u5b50\u56fe": 746, "\u53ef\u4ee5\u5148\u901a\u8fc7\u60f3\u8981\u56ca\u62ec\u7684\u8282\u70b9\u7f16\u53f7\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe": 752, "\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u7684\u5757": 754, "\u53ef\u4ee5\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c": 737, "\u53ef\u4ee5\u5982\u4e0b\u5b9a\u4e49\u94fe\u63a5\u9884\u6d4b\u6a21\u578b": 757, "\u53ef\u4ee5\u5b8c\u6210\u4e00\u8f6e\u6d88\u606f\u4f20\u9012\u8ba1\u7b97": 769, "\u53ef\u4ee5\u5c06\u5176\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4fee\u6539\u4ee5\u652f\u6301\u8fb9\u6743\u91cd": 766, "\u53ef\u4ee5\u5c06\u8be5\u7c7b\u578b\u6570\u636e\u52a0\u8f7d\u5230python\u5bf9\u8c61": 742, "\u53ef\u4ee5\u5f97\u5230\u591a\u5f20\u7528\u4e8e\u5206\u7c7b\u7684\u56fe": 767, "\u53ef\u4ee5\u627e\u5230": 762, "\u53ef\u4ee5\u63a5\u53d7\u975e\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570": 744, "\u53ef\u4ee5\u63d0\u9ad8\u8282\u70b9": 734, "\u53ef\u4ee5\u662f\u5f02\u6784\u56fe\u6216\u6765\u81ea\u5f02\u6784\u56fe\u7684\u5b50\u56fe\u533a\u5757": 763, "\u53ef\u4ee5\u7528\u4e8e\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u6a21\u5757": 737, "\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u8282\u70b9\u6536\u5230\u7684\u6d88\u606f": 749, "\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f": 732, "\u53ef\u4ee5\u8ba9\u7528\u6237\u4e0d\u7528\u4e00\u6b21\u6027\u628a\u6240\u6709\u8282\u70b9\u7279\u5f81\u62f7\u8d1d\u5230gpu\u4e0a": 753, "\u53ef\u4ee5\u901a\u8fc7": 754, "\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u552f\u4e00\u6807\u8bc6": 737, "\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u56fe\u5377\u79ef\u6a21\u5757\u6765\u5b9e\u73b0\u8fd9\u79cd\u7f51\u7edc\u67b6\u6784": 769, "\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c": 765, "\u53ef\u4ee5\u9075\u5faa\u76f8\u540c\u7684\u539f\u7406\u6765\u6784\u5efa\u56fe": 742, "\u53ef\u4ee5\u91cd\u5199\u4e0a\u9762\u7684": 754, "\u53ef\u547d\u540d\u7684\u7279\u5f81": 743, "\u53ef\u5c06\u6570\u636e\u548c\u8ba1\u7b97\u540c\u65f6\u5206\u5e03\u5728\u4e00\u7ec4\u8ba1\u7b97\u8d44\u6e90\u4e2d": 736, "\u53ef\u5c06\u6570\u636e\u590d\u5236\u5230\u96c6\u7fa4\u7684\u8ba1\u7b97\u673a\u4e0a": 736, "\u53ef\u6309\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u5b83\u7684\u4e24\u7aef\u8282\u70b9\u9690\u85cf\u8868\u793a\u7684\u70b9\u79ef\u6765\u4f5c\u4e3a\u5206\u6570": 765, "\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u5de5\u4f5c\u7684\u60f3\u6cd5\u90fd\u5f88\u7c7b\u4f3c": 768, "\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7ef4\u5ea6\u7684\u8868\u793a\u6765\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u5efa\u6a21": 751, "\u53ef\u9009": [730, 738, 747], "\u53ef\u907f\u514d\u8be5\u884c\u4e3a": 742, "\u5404\u79cd\u6570\u636e\u683c\u5f0f": 742, "\u5408\u5e76\u6210\u4e00\u79cd\u8fb9\u7684\u56fe": 765, "\u540c\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u53ef\u4ee5\u6709\u591a\u6761": 741, "\u540c\u65f6": [745, 754], "\u540c\u65f6dgl\u4e5f\u5efa\u8bae\u5b9e\u73b0\u4fdd\u5b58\u548c\u5bfc\u5165\u51fd\u6570": 731, "\u540c\u65f6\u4e5f\u652f\u6301\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u91c7\u6837\u7b56\u7565": 753, "\u540c\u65f6\u5c06\u8fb9id\u6620\u5c04\u5230\u5176\u53cd\u5411\u8fb9id": 755, "\u540c\u65f6\u5efa\u7acb\u53cd\u5411\u8fb9": 765, "\u540c\u65f6\u7701\u7565\u4e86\u8be6\u7ec6\u7684\u6570\u636e\u5904\u7406\u4ee3\u7801\u4ee5\u7a81\u51fa\u5c55\u793a\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 734, "\u540c\u6784\u56fe": 762, "\u540c\u6784\u56fe\u548c\u4e8c\u5206\u56fe\u53ea\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f02\u6784\u56fe": 746, "\u540c\u6784\u56fe\u548c\u5757": 758, "\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e4b\u95f4\u552f\u4e00\u7684\u5b9e\u73b0\u5dee\u5f02\u662f\u540e\u8005\u9700\u8981\u7528": 757, "\u540c\u6784\u56fe\u7684\u60c5\u51b5": 762, "\u540c\u6784\u7684": 741, "\u540c\u6837": [737, 759], "\u540c\u6837\u5730": 765, "\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 765, "\u540d\u79f0\u5c31\u5f88\u6709\u7528": 737, "\u540e": 767, "\u540e\u4e00\u79cd\u65b9\u6cd5\u6548\u7387\u9ad8\u5f97\u591a": 750, "\u540e\u7eed\u7ae0\u8282\u7684\u5185\u5bb9\u5747\u5047\u8bbe\u7528\u6237\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u56fe\u548c\u8282\u70b9": 764, "\u540e\u8005\u53ef\u4ee5\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u8fdb\u884c\u8fed\u4ee3": 759, "\u540e\u8005\u652f\u6301\u89e3\u538b\u7f29zip\u6587\u4ef6": 732, "\u5411\u524d": 755, "\u5411\u540e": 755, "\u5411\u91cf\u6216\u591a\u7ef4\u5f20\u91cf": 743, "\u5426\u5219": 755, "\u5426\u5219\u7528\u6237\u9700\u8981\u81ea\u5df1\u5b9e\u73b0": 732, "\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u7a7a\u95f4": 739, "\u542f\u52a8\u811a\u672c\u4f1a\u5728\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u6307\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u4efb\u52a1": 739, "\u542f\u52a8\u811a\u672c\u5728\u540e\u53f0\u542f\u52a8\u670d\u52a1\u5668": 737, "\u5434\u7d2b\u8587": 747, "\u548c": [731, 734, 735, 736, 737, 738, 740, 741, 742, 743, 745, 746, 749, 750, 751, 754, 755, 756, 760, 761, 762, 763, 765, 767, 768, 769], "\u548c1\u4e2a\u8fb9\u7279\u5f81": 743, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 756, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 756, "\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9": 746, "\u548c\u4ece\u4e00\u4e2a\u4efb\u610f\u7684\u566a\u58f0\u5206\u5e03": 768, "\u548c\u5305\u542b\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u5757": 758, "\u548c\u5b50\u56fe\u5757": 762, "\u548c\u5b83\u4eec\u7684\u5173\u7cfb": 740, "\u548c\u5c0f\u6279\u91cf\u7684\u8fb9id\u6570\u7ec4": 757, "\u548c\u666e\u901a\u7684nn\u6a21\u5757\u4e00\u6837": 763, "\u548c\u7528\u4e8e\u5206\u5e03\u5f0f\u53ef\u5b66\u4e60\u5d4c\u5165\u7684": 737, "\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81": 762, "\u548c\u8282\u70b9\u5206\u7c7b\u4e00\u6837\u7684\u90bb\u5c45\u91c7\u6837\u5668": 755, "\u552f\u4e00\u7684\u533a\u522b\u662f\u5728\u8c03\u7528": 765, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4e3a\u8bad\u7ec3\u96c6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u7684\u5b57\u5178": 759, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528": [737, 755], "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u63d0\u4f9b\u8d1f\u91c7\u6837\u65b9\u6cd5": 757, "\u5546\u54c1": 741, "\u5546\u5bb6": 741, "\u56de\u5f52": [734, 747, 764, 768], "\u56de\u5f52\u4e2d\u7684\u8282\u70b9\u8868\u793a\u6a21\u578b": 757, "\u56de\u5f52\u4e2d\u7684\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 757, "\u56de\u5f52\u4efb\u52a1": 765, "\u56de\u5f52\u6240\u9700\u7684\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 755, "\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u8fb9\u5f97\u5206\u6a21\u578b\u76f8\u540c": 768, "\u56de\u5f52\u7684\u6a21\u578b": 765, "\u56de\u5f52\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b": 755, "\u56de\u5f52\u7684\u8bad\u7ec3\u7c7b\u4f3c": 755, "\u56de\u5f52\u91cc\u7684\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c": 757, "\u56de\u60f3\u4e00\u4e0b\u5728": 754, "\u56e0\u4e3a": 750, "\u56e0\u4e3a\u4e0a\u8ff0\u7684\u5f97\u5206\u9884\u6d4b\u6a21\u578b\u5728\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 768, "\u56e0\u4e3a\u4e0d\u9700\u8981\u5728\u8fb9\u4e0a\u4fdd\u5b58feat_src\u548cfeat_dst": 750, "\u56e0\u4e3a\u53cb\u8c0a\u662f\u76f8\u4e92\u7684": 741, "\u56e0\u4e3a\u540c\u6b65sgd\u4f1a\u5047\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c0f\u6279\u6b21": 737, "\u56e0\u4e3a\u5b83\u4eec\u7ecf\u8fc7\u4e86\u5927\u91cf\u4f18\u5316": 749, "\u56e0\u4e3a\u5bf9\u4e8e\u5904\u7406\u540e\u7684\u5927\u578b\u6570\u636e\u96c6": 731, "\u56e0\u4e3a\u5d4c\u5165\u662f\u6a21\u578b\u7684\u4e00\u90e8\u5206": 737, "\u56e0\u4e3a\u7528\u6237\u9700\u8981\u6307\u5b9a\u5728\u54ea\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b": 768, "\u56e0\u4e3a\u9700\u8981\u4ece\u7b2c\u4e00\u5c42\u5f00\u59cb\u5bf9\u8282\u70b9\u8868\u793a\u9010\u5c42\u8ba1\u7b97": 756, "\u56e0\u6b64": [734, 737, 739, 742, 744, 746, 754, 755, 757], "\u56e0\u6b64\u5982\u679c\u4e00\u5f20\u56fe\u5f88\u5927": 738, "\u56e0\u6b64\u6570\u636e\u96c6\u7684\u5212\u5206\u662f\u5728\u56fe\u7684\u8282\u70b9\u96c6\u4e0a\u8fdb\u884c": 734, "\u56e0\u6b64\u672c\u793a\u4f8b\u8bf4\u660e\u4e86\u5982\u4f55\u4f7f\u7528\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5411\u91cf\u7684\u70b9\u79ef\u6765\u8ba1\u7b97\u5206\u6570": 757, "\u56e0\u6b64\u7528\u6237\u65e0\u6cd5\u4ecenn\u6a21\u5757\u7684\u53c2\u6570\u8bbf\u95ee\u5b83": 737, "\u56e0\u6b64\u76f4\u63a5\u5728\u8fb9\u754c\u5b50\u56fe\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012\u6709\u5f88\u5927\u5f00\u9500": 754, "\u56e0\u6b64\u901a\u5e38\u53ef\u4ee5\u5728\u968f\u673a\u62bd\u53d6\u7684\u5c0f\u6279\u6b21\u56fe\u4e0a\u8fdb\u884c\u9ad8\u6548\u7684\u8bad\u7ec3": 767, "\u56e0\u6b64\u9700\u8981\u5c06\u6240\u8981\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b": 765, "\u56fe": [734, 747], "\u56fe\u4e0a\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38\u6709\u4e09\u79cd\u7c7b\u578b": 734, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5b50\u56fe\u5bf9\u5e94\u4e00\u5f20\u539f\u59cb\u5c0f\u56fe": 767, "\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u662fdgl\u901a\u8fc7\u7ed9\u5b9a\u7684\u56fe\u7684\u8fb9\u5217\u8868\u4e2d\u6700\u5927\u7684\u70b9id\u63a8\u65ad\u6240\u5f97\u51fa\u7684": 745, "\u56fe\u5212\u5206api\u5f53\u524d\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c": 738, "\u56fe\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u4e8c\u5206\u56fe": 762, "\u56fe\u53ef\u4ee5\u662f": 741, "\u56fe\u540d\u79f0\u6807\u8bc6\u4e86\u96c6\u7fa4\u4e2d\u6240\u9700\u52a0\u8f7d\u7684\u56fe": 737, "\u56fe\u5c06\u4f1a\u88ab\u89c6\u4e3a\u4e8c\u5206\u56fe": 762, "\u56fe\u6216\u5f20\u91cf": 744, "\u56fe\u6570\u636e\u4e2d\u7684\u8bad\u7ec3": 769, "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [747, 764, 767, 769], "\u56fe\u662f\u7528\u4ee5\u8868\u793a\u5b9e\u4f53\u53ca\u5176\u5173\u7cfb\u7684\u7ed3\u6784": 741, "\u56fe\u6ce8\u610f\u529b\u7f51\u7edc": 766, "\u56fe\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210": 741, "\u56fe\u7684": 734, "\u56fe\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4e86": 769, "\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e2a\u5178\u578b\u9009\u9879\u662f\u805a\u5408\u7c7b\u578b": 761, "\u56fe\u8868\u793a\u5b9e\u4f53": 740, "\u5728": [734, 735, 737, 759, 762], "\u5728dgl": 760, "\u5728dgl\u4e2d": [746, 749, 751, 754], "\u5728dgl\u4e2d\u79f0\u4e4b\u4e3a": 759, "\u5728dgl\u7684\u56fe\u91cc": 745, "\u5728dgl\u91cc\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5b9e\u73b0\u8fd9\u4e00\u9700\u6c42": 766, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 740, "\u5728gpu\u4e0a\u8fdb\u884c\u5168\u56fe\u524d\u5411\u4f20\u64ad\u901a\u5e38\u7531\u4e8e\u663e\u5b58\u5927\u5c0f\u7684\u9650\u5236\u800c\u4e0d\u53ef\u884c": 756, "\u5728graph": 749, "\u5728jupyt": 737, "\u5728mxnet\u4e2d\u662ffloat\u5f20\u91cf": 734, "\u5728nn\u6a21\u5757\u4e2d": 762, "\u5728node": 733, "\u5728python\u5b57\u5178\u91cc\u4fdd\u5b58\u5176\u4ed6\u4fe1\u606f": 735, "\u5728sageconv\u4e2d": 761, "\u5728sageconv\u8bba\u6587\u91cc": 761, "\u5728update_all\u5916\u8c03\u7528\u66f4\u65b0\u51fd\u6570": 749, "\u5728user\u7c7b\u578b\u7684\u8282\u70b9\u548cclick\u7c7b\u578b\u7684\u8fb9\u4e0a\u968f\u673a\u751f\u6210\u8bad\u7ec3\u96c6\u7684\u63a9\u7801": 764, "\u5728\u4e00\u4e2a\u52a0\u6743\u56fe\u91cc": 766, "\u5728\u4e00\u4e2a\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 736, "\u5728\u4e00\u5c42\u4e2d": 756, "\u5728\u4e0a\u9762\u7684\u7b49\u5f0f\u4e2d": 748, "\u5728\u4ecb\u7ecddgl\u4e2d\u90bb\u5c45\u91c7\u6837\u7684\u7528\u6cd5\u4e4b\u524d": 754, "\u5728\u4f7f\u7528pytorch\u65f6": 737, "\u5728\u4f7f\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 751, "\u5728\u5185\u7f6e\u6570\u636e\u96c6": 735, "\u5728\u5185\u90e8": 737, "\u5728\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0b": 737, "\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e2d": 737, "\u5728\u521b\u5efa\u56fe\u7684\u65f6\u5019": 745, "\u5728\u521d\u6b65\u4e86\u89e3\u4e86\u5206\u5e03\u5f0f\u7ec4\u4ef6\u540e": 736, "\u5728\u52a0\u6743\u56fe\u4e2d": 741, "\u5728\u533a\u5757\u521b\u5efa\u7684\u9636\u6bb5": 762, "\u5728\u534a\u76d1\u7763\u8282\u70b9\u5206\u7c7b\u7684\u573a\u666f\u91cc": 738, "\u5728\u540c\u6784\u56fe\u4e2d": 741, "\u5728\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e0a\u505a\u8bc4\u5206\u9884\u6d4b\u65f6": 755, "\u5728\u56fe\u5212\u5206\u540e": 738, "\u5728\u56fe\u5212\u5206\u671f\u95f4\u7684\u56fe\u540d\u79f0": 737, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [747, 748], "\u5728\u57fa\u4e8e\u90bb\u5c45\u91c7\u6837\u7684\u8fb9\u5206\u7c7b\u4e2d": 755, "\u5728\u591a\u91cd\u56fe\u4e2d": 741, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": [747, 752, 762, 764], "\u5728\u5b58\u50a8\u56fe\u5206\u533a\u6570\u636e": 736, "\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u91c7\u6837\u5668\u540e": 754, "\u5728\u5bf9\u56fe\u8fdb\u884c\u5212\u5206\u65f6": 738, "\u5728\u5c0f\u6279\u6b21\u8bad\u7ec3\u4e2d": 762, "\u5728\u5f02\u6784\u56fe\u4e0a": 755, "\u5728\u5f02\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u548c\u5728\u540c\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u7565\u6709\u4e0d\u540c": 767, "\u5728\u5f02\u6784\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8282\u70b9\u5206\u7c7b\u7684\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684": 759, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [747, 748], "\u5728\u5f02\u6784\u56fe\u4e2d": 741, "\u5728\u5f02\u6784\u56fe\u7684\u60c5\u51b5\u4e0b": 762, "\u5728\u5f53\u524d\u5b9e\u73b0\u4e2d": 737, "\u5728\u5f97\u5230": 767, "\u5728\u6240\u6709\u8fb9\u7c7b\u578b\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012": 769, "\u5728\u63a8\u8350\u573a\u666f\u4e2d\u5f88\u5e38\u89c1": 765, "\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d": 741, "\u5728\u6574\u4e2a\u56fe\u6279\u6b21\u4e0a\u8fdb\u884c\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3": 767, "\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5": 750, "\u5728\u672c\u4f8b\u4e2d\u7701\u7565": 769, "\u5728\u672c\u8282\u4e2d": 736, "\u5728\u6784\u9020\u51fd\u6570\u4e2d": 761, "\u5728\u67d0\u4e9b\u573a\u666f\u4e2d": 768, "\u5728\u67d0\u79cd\u7c7b\u578b\u7684\u8fb9\u4e0a\u4e3a\u6bcf\u4e00\u6761\u8fb9\u9884\u6d4b\u7684\u7aef\u5230\u7aef\u6a21\u578b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a": 765, "\u5728\u6bcf\u4e2a\u5206\u533a\u7684\u6587\u4ef6\u5939\u5185": 738, "\u5728\u6bcf\u4e2a\u751f\u6210\u5757\u5217\u8868\u7684\u8fed\u4ee3\u4e2d": 759, "\u5728\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u4e2d\u7684\u8282\u70b9\u6570\u4e0a\u5b9e\u73b0\u5206\u533a\u95f4\u7684\u5e73\u8861": 738, "\u5728\u6d88\u606f\u4f20\u9012\u65f6": 749, "\u5728\u6d88\u606f\u51fd\u6570\u91cc": 766, "\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 737, "\u5728\u7528\u591a\u5c42\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 754, "\u5728\u7b2c9\u884c\u547d\u540d\u4e3a": 743, "\u5728\u7c7bdgldataset\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u5904\u7406\u6a21\u7248\u7684\u6d41\u7a0b\u56fe": 731, "\u5728\u7f16\u5199\u5b8c\u8fd9\u4e9b\u4ee3\u7801\u4e4b\u540e": 734, "\u5728\u8bad\u7ec3\u5668\u8fdb\u7a0b\u4e2d": 737, "\u5728\u8bad\u7ec3\u671f\u95f4": 738, "\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u63a9\u7801\u533a\u5206\u8bad\u7ec3": 765, "\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 754, "\u5728\u8fb9\u4e0a\u5c06\u4ee5\u4e0a\u4e24\u90e8\u5206\u7ebf\u6027\u64cd\u4f5c\u7684\u7ed3\u679c\u76f8\u52a0": 750, "\u5728\u8fb9\u96c6": 741, "\u5728\u8fd9\u4e2a\u573a\u666f\u91cc": 767, "\u5728\u8fd9\u4e2a\u6279\u6b21\u7684\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u4ee5\u66f4\u65b0\u8282\u70b9\u6216\u8fb9\u7684\u7279\u5f81": 767, "\u5728\u8fd9\u4e9b\u673a\u5668\u4e0a": 739, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": 762, "\u5728\u8fd9\u91cc\u53ef\u4ee5\u590d\u7528\u4e0a\u8ff0\u63d0\u5230\u7684": 765, "\u5728\u8fdb\u884c\u63a8\u65ad\u65f6": 756, "\u5757": [754, 755, 759], "\u5757\u4e5f\u53ef\u7528\u4e8e\u5f02\u6784\u56fe": 754, "\u5757\u7684\u8f93\u51fa\u8282\u70b9\u4e3a": 754, "\u578b\u8282\u70b9\u5230": 746, "\u578b\u8282\u70b9\u7684\u8fb9": 746, "\u57fa\u4e8egnn\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u9700\u9884\u6d4b\u7684\u8282\u70b9\u5bf9": 768, "\u5904\u7406\u548c\u4fdd\u5b58\u56fe\u6570\u636e\u63d0\u4f9b\u4e86\u7b80\u5355\u800c\u5e72\u51c0\u7684\u89e3\u51b3\u65b9\u6848": 730, "\u5904\u7406\u5b8c\u6210\u7684\u6570\u636e\u96c6\u7684\u4fdd\u5b58\u76ee\u5f55": 731, "\u5904\u7406\u6570\u636e": [730, 747], "\u5904\u7406\u8fc7\u7684\u6570\u636e\u6bd4\u8f83\u5927": 735, "\u590d\u5236\u5230": 739, "\u590d\u5236\u5230gpu": 744, "\u591a\u5c42\u611f\u77e5\u673a": 765, "\u5927\u90e8\u5206\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u9988\u8ba1\u7b97\u4e2d\u4ec5\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5f15\u5165\u56fe\u7ed3\u6784\u4fe1\u606f": 766, "\u5982": [742, 745, 757, 764, 765, 769], "\u5982panda": 742, "\u5982\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684": 743, "\u5982\u4e0b": 743, "\u5982\u4e0b\u4ee3\u7801\u6240\u6f14\u793a\u7684": 754, "\u5982\u4e0b\u4f8b\u6240\u793a": 745, "\u5982\u4e0b\u56fe\u6240\u793a": [753, 754], "\u5982\u4e0b\u6240\u793a": [754, 755], "\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u6240\u793a": 745, "\u5982\u4ee3\u7801\u6240\u793a": 734, "\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a": 737, "\u5982\u524d\u6240\u8ff0": 737, "\u5982\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b": 743, "\u5982\u63cf\u8ff0\u8282\u70b9\u4e4b\u95f4\u7684\u5bf9\u79f0\u5173\u7cfb": 741, "\u5982\u63cf\u8ff0\u975e\u5bf9\u79f0\u5173\u7cfb": 741, "\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684id\u76f8\u540c": 755, "\u5982\u679c\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u9002\u7528": 746, "\u5982\u679c\u4ee5\u6a21\u578b\u9009\u62e9\u4e3a\u76ee\u7684\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u8bc4\u4ef7\u6307\u6807": 756, "\u5982\u679c\u4f7f\u7528": 745, "\u5982\u679c\u5177\u6709\u6700\u5927id\u7684\u8282\u70b9\u6ca1\u6709\u8fb9": 745, "\u5982\u679c\u539f\u56fe\u5305\u542b\u591a\u79cd\u8282\u70b9\u7c7b\u578b": 758, "\u5982\u679c\u539f\u56fe\u53ea\u5305\u542b\u4e00\u79cd\u8282\u70b9\u7c7b\u578b": 758, "\u5982\u679c\u539f\u59cb\u6570\u636e\u5df2\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6": 734, "\u5982\u679c\u53ea\u9884\u6d4b": 769, "\u5982\u679c\u540e\u7aef\u6846\u67b6\u4e5f\u63d0\u4f9b\u4e86\u4ece\u78c1\u76d8\u4e2d\u4fdd\u5b58\u6216\u52a0\u8f7d\u5f20\u91cf\u7684\u5de5\u5177": 742, "\u5982\u679c\u56fe\u662f\u5f02\u6784\u7684": 769, "\u5982\u679c\u56fe\u91cc\u53ea\u6709\u4e00\u79cd\u8282\u70b9\u6216\u8fb9\u7c7b\u578b": 746, "\u5982\u679c\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8005\u8fb9\u7684\u6570\u91cf\u5c0f\u4e8e": 745, "\u5982\u679c\u5bf9\u901f\u5ea6\u4e0d\u592a\u5173\u6ce8\u7684\u8bdd": 742, "\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 759, "\u5982\u679c\u6570\u636e\u96c6\u662f\u4e00\u4e2azip\u6587\u4ef6": 732, "\u5982\u679c\u6587\u4ef6\u662f": 732, "\u5982\u679c\u662f\u4ece\u56fe\u4e2d\u5f97\u5230\u7684\u8fb9\u754c": 754, "\u5982\u679c\u672a\u63d0\u4f9b\u5177\u4f53\u7aef\u53e3": 739, "\u5982\u679c\u6a21\u578b\u540c\u65f6\u5177\u6709\u8282\u70b9\u5d4c\u5165\u548c\u89c4\u5219\u7684\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 737, "\u5982\u679c\u7279\u5f81\u5b58\u50a8\u5728": 759, "\u5982\u679c\u7528\u6237\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u7684\u6a21\u578b\u8ba1\u7b97\u4e86\u8282\u70b9\u7684\u8868\u793a": 765, "\u5982\u679c\u7528\u6237\u53ea\u60f3\u66f4\u65b0\u56fe\u4e2d\u7684\u90e8\u5206\u8282\u70b9": 752, "\u5982\u679c\u7528\u6237\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u4e00\u6b21\u4ec5\u4f7f\u7528\u4e00\u5f20\u56fe": 767, "\u5982\u679c\u7528\u6237\u5df2\u6709\u4e00\u4e2a\u7528\u4e8e\u6574\u4e2a\u56fe\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u4f20\u9012\u6a21\u5757": 758, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u6570\u636e\u96c6\u6216\u5176\u4ed6\u517c\u5bb9": 764, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5220\u9664\u5f02\u6784\u56fe\u4e2d\u7684\u53cd\u5411\u8fb9": 755, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5f00\u53d1\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 755, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 759, "\u5982\u679c\u7528\u6237\u60f3\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u4e00\u4e2a\u5206\u6570": 765, "\u5982\u679c\u7528\u6237\u60f3\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u4ee3\u7801\u800c\u53c8\u4e0d\u60f3\u81ea\u5df1\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u6b63\u786e\u7684\u76ee\u5f55\u4e2d": 732, "\u5982\u679c\u7528\u6237\u60f3\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 757, "\u5982\u679c\u7528\u6237\u60f3\u9884\u6d4b\u8fb9\u7c7b\u578b\u4e3a": 765, "\u5982\u679c\u7528\u6237\u6709\u5305\u542b\u6570\u767e\u4e07\u751a\u81f3\u6570\u5341\u4ebf\u4e2a\u8282\u70b9\u6216\u8fb9\u7684\u5927\u56fe": 753, "\u5982\u679c\u7528\u6237\u6a21\u578b\u5728\u5168\u56fe\u4e0a\u662f\u6309\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u7684": 759, "\u5982\u679c\u7528\u6237\u719f\u6089": 768, "\u5982\u679c\u7528\u6237\u719f\u6089\u5982\u4f55\u5b9a\u5236\u7528\u4e8e\u66f4\u65b0\u6574\u4e2a\u540c\u6784\u56fe\u6216\u5f02\u6784\u56fe\u7684gnn\u6a21\u5757": 758, "\u5982\u679c\u7528\u6237\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 732, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570\u65e0\u6cd5\u7528\u5185\u7f6e\u51fd\u6570\u5b9e\u73b0": 749, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757\u5168\u4f7f\u7528\u7684\u662fdgl\u5185\u7f6e\u6a21\u5757": 759, "\u5982\u679c\u7528\u6237\u8981\u5f15\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 737, "\u5982\u679c\u8981\u4ee5\u67d0\u79cd\u6982\u7387\u5c06\u79cd\u5b50\u8282\u70b9\u7684\u5165\u8fb9\u968f\u673a\u5254\u9664": 754, "\u5982\u679c\u8bad\u7ec3\u811a\u672c\u91cc\u5305\u542b\u9700\u8981\u5728\u670d\u52a1\u5668": 737, "\u5982\u679c\u8be5api\u6ca1\u6709\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0id": 738, "\u5982\u679c\u8be5\u7c7b\u7ee7\u627f\u81ea": 732, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u4e0d\u662f\u5757": 758, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u662f\u4e00\u4e2a\u5757": 758, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5f20\u91cf\u5bf9": 758, "\u5982\u679c\u9700\u8981\u7684\u8bdd": 769, "\u5b50\u56fe\u5728dgl\u4e2d\u79f0\u4e3a\u533a\u5757": 762, "\u5b50\u56fe\u5757\u7684\u60c5\u51b5": 762, "\u5b50\u56fe\u662f\u4ece\u76f8\u540c\u7684\u6570\u636e\u52a0\u8f7d\u5668\u4ea7\u751f\u7684": 755, "\u5b50\u56fe\u91c7\u6837\u548c\u90bb\u5c45\u91c7\u6837\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11\u7528gpu\u8bad\u7ec3gnn\u6a21\u578b\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6d88\u8017": 756, "\u5b50\u6a21\u5757\u6839\u636e\u805a\u5408\u7c7b\u578b\u800c\u6709\u6240\u4e0d\u540c": 761, "\u5b50\u7c7b\u4e4b\u5916\u5b8c\u6210": 731, "\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570": 731, "\u5b58\u50a8\u4e86\u5212\u5206\u63a9\u7801": 734, "\u5b58\u50a8\u4e86\u8f93\u5165\u8282\u70b9\u7279\u5f81": 766, "\u5b58\u50a8\u5206\u533a\u7684\u56fe\u7ed3\u6784\u4ee5\u53ca\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u4e00\u4e9b\u5143\u6570\u636e": 738, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u533aid": 738, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u7684\u5206\u533aid": 738, "\u5b58\u50a8\u5c5e\u4e8e\u8be5\u5206\u533a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u7279\u5f81": 738, "\u5b58\u50a8\u6587\u4ef6\u7684\u8def\u5f84": 732, "\u5b58\u50a8\u9690\u5c42\u8868\u793a\u9700\u8981": 753, "\u5b5f\u51e1\u8363": 747, "\u5b83\u4e3a": 737, "\u5b83\u4ece\u805a\u5408\u4e0e\u66f4\u65b0\u7684\u89d2\u5ea6\u5f52\u7eb3\u603b\u7ed3\u4e86\u591a\u79cdgnn\u6a21\u578b\u7684\u5b9e\u73b0": 748, "\u5b83\u4eec\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684api\u76f8\u4f3c": 736, "\u5b83\u4eec\u4e3b\u8981\u88ab\u7528\u6765\u63d0\u4f9b\u56fe\u4fe1\u606f": 737, "\u5b83\u4eec\u53ea\u5305\u62ec\u4e00\u79cd\u5173\u7cfb": 746, "\u5b83\u4eec\u5b58\u50a8\u8282\u70b9\u548c\u8fb9id\u4e0e\u5206\u533aid\u4e4b\u95f4\u7684\u6620\u5c04": 738, "\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e": 737, "\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f\u5b57\u7b26\u4e32": 749, "\u5b83\u4eec\u786e\u4fdd\u6240\u6709\u90e8\u5206\u90fd\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u548c\u8fb9": 737, "\u5b83\u4eec\u901a\u8fc7": 741, "\u5b83\u4eec\u9075\u5faa\u4e86\u7531": 730, "\u5b83\u4eec\u90fd\u662f\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9": 762, "\u5b83\u5141\u8bb8\u7528\u6237\u4e3a\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u90e8\u5206\u90bb\u5c45\u8282\u70b9\u4ee5\u6c47\u805a\u4fe1\u606f": 754, "\u5b83\u5177\u6709": 765, "\u5b83\u5177\u6709\u4e0e\u5e38\u89c4\u5f20\u91cf\u76f8\u540c\u7684api": 737, "\u5b83\u5206\u6279\u8fed\u4ee3\u8bad\u7ec3\u8282\u70b9id\u6570\u7ec4": 759, "\u5b83\u52a0\u8f7d\u5206\u533a\u6570\u636e": 737, "\u5b83\u5305\u62ec": 763, "\u5b83\u53ef\u4ee5\u7528\u6700\u5c11\u7684\u8fb9\u5206\u5272\u4ee5\u751f\u6210\u5206\u533a": 738, "\u5b83\u53ef\u83b7\u53d6\u8282\u70b9\u7684\u6240\u6709\u90bb\u5c45": 759, "\u5b83\u5728\u5355\u4e2aapi\u8c03\u7528\u91cc\u5408\u5e76\u4e86\u6d88\u606f\u751f\u6210": 749, "\u5b83\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6240\u6709\u8ba1\u7b97": 737, "\u5b83\u5b9e\u73b0\u4e86\u7528\u4e8e\u5904\u7406\u56fe\u6570\u636e\u7684\u57fa\u672c\u6a21\u7248": 731, "\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9": 757, "\u5b83\u5c06\u4ee5\u72ec\u7acb\u6a21\u5f0f\u8fd0\u884c": 737, "\u5b83\u5c06\u751f\u6210\u4e24\u4e2a\u989d\u5916\u7684numpy\u6587\u4ef6": 738, "\u5b83\u5e94\u5f53\u4ee5\u539f\u56fe": 757, "\u5b83\u5e94\u8be5\u7ee7\u627f": 760, "\u5b83\u6307\u5b9a\u8282\u70b9\u96c6\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u7c7b\u578b\u7ea6\u675f": 746, "\u5b83\u63a5\u53d7\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408\u4f5c\u4e3a\u8f93\u5165": 745, "\u5b83\u662fgraphsage\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u56fe\u5377\u79ef\u6a21\u5757": 769, "\u5b83\u662f\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 759, "\u5b83\u7528": 736, "\u5b83\u7ee7\u627f\u81ea": 731, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8282\u70b9": 749, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8fb9": 749, "\u5b83\u8fd4\u56de\u4ee5\u8fb9\u7c7b\u578b\u4e3a\u952e": 757, "\u5b83\u901a\u8fc7\u5c06\u8fb9\u4e0a\u7279\u5f81\u4e0e\u5176\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408\u6765\u751f\u6210\u6d88\u606f": 748, "\u5b8b\u6021\u7136": 747, "\u5b8c\u5168\u76f8\u540c": 755, "\u5b8c\u6574\u7684\u5185\u7f6e\u91c7\u6837\u65b9\u6cd5\u6e05\u5355": 759, "\u5b98\u65b9\u7684": 733, "\u5b9a\u4e49": [737, 746], "\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u9010\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u8ba1\u7b97": 748, "\u5b9a\u4e49\u6a21\u578b\u548c\u4f18\u5316\u5668": 736, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 759, "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [747, 753, 755, 759], "\u5b9e\u4f8b\u5316heterographconv": 769, "\u5b9e\u4f8b\u5316sageconv": 769, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad\u7684\u65b9\u6cd5\u4f9d\u7136\u9700\u8981\u4f7f\u7528": 756, "\u5b9e\u73b0\u903b\u8f91\u4e0e\u6d88\u606f\u4f20\u9012\u7ea7\u522b\u7684api": 763, "\u5b9e\u9645\u5e94\u7528\u4e2d": 768, "\u5bf9dataloader\u8fdb\u884c\u8fed\u4ee3": 759, "\u5bf9\u4e00\u6761\u8fb9\u8ba1\u7b97\u9884\u6d4b\u503c\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5c06\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u51fd\u6570": 765, "\u5bf9\u4e8e": 758, "\u5bf9\u4e8emxnet\u540e\u7aef": 760, "\u5bf9\u4e8epytorch\u540e\u7aef": 760, "\u5bf9\u4e8etensorflow\u540e\u7aef": 760, "\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26\u6743\u91cd\u7684\u56fe": 766, "\u5bf9\u4e8e\u4e00\u4e2a\u52a0\u6743\u56fe": 766, "\u5bf9\u4e8e\u4e00\u4e2a\u6307\u5b9a\u7684\u5c42": 756, "\u5bf9\u4e8e\u4e00\u5143\u51fd\u6570": 749, "\u5bf9\u4e8e\u4e00\u822c\u7684pytorch\u6a21\u5757": 761, "\u5bf9\u4e8e\u4e8c\u5143\u51fd\u6570": 749, "\u5bf9\u4e8e\u4e8c\u5206\u56fe": 763, "\u5bf9\u4e8e\u5168\u90bb\u5c45\u91c7\u6837": 759, "\u5bf9\u4e8e\u5177\u6709\u4e24\u4e2a\u5173\u7cfb": 746, "\u5bf9\u4e8e\u5177\u6709\u5341\u4ebf\u7ea7\u6570\u91cf\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 738, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3": 737, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u8bc4\u4f30": 737, "\u5bf9\u4e8e\u52a0\u6743\u56fe": 743, "\u5bf9\u4e8e\u540c\u6784\u56fe\u4e0a\u7684\u5168\u56fe\u8bad\u7ec3": 762, "\u5bf9\u4e8e\u56fe\u4e0a\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b": 769, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc": 761, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4": 769, "\u5bf9\u4e8e\u591a\u4e2a\u8282\u70b9": 745, "\u5bf9\u4e8e\u5e95\u5c42\u7684\u91c7\u6837api": 737, "\u5bf9\u4e8e\u5f97\u5206\u7684\u9884\u6d4b": 757, "\u5bf9\u4e8e\u65e0\u5411\u7684\u56fe": 745, "\u5bf9\u4e8e\u65e0\u6cd5\u5168\u90e8\u8f7d\u5165\u7684\u60c5\u51b5": 764, "\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5": 750, "\u5bf9\u4e8e\u6d88\u606f\u4f20\u9012": 749, "\u5bf9\u4e8e\u7279\u5b9a\u76ee\u6807\u8282\u70b9": 761, "\u5bf9\u4e8e\u79bb\u7ebf\u63a8\u65ad\u7684\u793a\u4f8b": 756, "\u5bf9\u4e8e\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 737, "\u5bf9\u4e8e\u8981\u62f7\u8d1d\u7684\u7279\u5f81": 746, "\u5bf9\u4e8e\u8bad\u7ec3\u811a\u672c": 736, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u6570\u91cf": 758, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u7279\u5f81": 758, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u6570\u91cf": 758, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 758, "\u5bf9\u4e8e\u8fb9\u56de\u5f52\u4efb\u52a1": 765, "\u5bf9\u4e8e\u8fd9\u4e2a\u5757": 754, "\u5bf9\u4e8e\u90bb\u5c45\u91c7\u6837": 754, "\u5bf9\u5176\u8fdb\u884c\u62c6\u5206": 737, "\u5bf9\u56fe\u8fdb\u884c\u5206\u533a\u7684\u8ba1\u7b97\u673a": 739, "\u5bf9\u5b83\u6240\u6709\u8282\u70b9\u7279\u5f81\u53d6\u5e73\u5747\u503c\u7684\u805a\u5408\u8bfb\u51fa\u516c\u5f0f\u5982\u4e0b": 767, "\u5bf9\u5e94\u4e8e\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b": 746, "\u5bf9\u5e94\u7740\u4e0b\u56fe\u6240\u793a\u7684\u5305\u542b4\u4e2a\u8282\u70b9\u7684\u56fe": 745, "\u5bf9\u5f02\u6784\u56fe\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u7684\u63a5\u53e3\u662f": 751, "\u5bf9\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u5408\u5e76\u7528\u6237\u6307\u5b9a\u7684\u7279\u5f81": 746, "\u5bf9\u6240\u6709\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u6c42\u548c": 767, "\u5bf9\u6bcf\u4e2a\u5173\u7cfb\u8ba1\u7b97\u548c\u805a\u5408\u6d88\u606f": 751, "\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u6d88\u606f": 751, "\u5bf9\u6bcf\u6761\u8fb9\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u8868\u793a": 765, "\u5bf9\u8c61": [737, 738, 742, 745], "\u5bf9\u8c61\u65f6": 742, "\u5bf9\u8c61\u67098\u6761\u8fb9": 742, "\u5bf9\u8c61\u6d88\u5931": 737, "\u5bf9\u8c61\u7684api": 733, "\u5bf9\u8c61\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 745, "\u5bf9\u8c61\u7684\u5217\u8868\u548c\u6807\u7b7e\u5f20\u91cf\u7684\u5217\u8868": 734, "\u5bf9\u8c61\u7684\u8282\u70b9\u548c\u8fb9\u53ef\u5177\u6709\u591a\u4e2a\u7528\u6237\u5b9a\u4e49\u7684": 743, "\u5bf9\u8f93\u5165\u8282\u70b9\u7279\u5f81": 758, "\u5bfc\u5165\u548c\u4fdd\u5b58": 731, "\u5bfc\u5165\u5904\u7406\u540e\u7684\u6570\u636e": 731, "\u5bfc\u5165\u6570\u636e": 734, "\u5c06": 758, "\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 738, "\u5c06\u4e00\u5f20\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u805a\u5408\u6210\u6574\u5f20\u56fe\u7684\u56fe\u8868\u793a": 767, "\u5c06\u4e0a\u8ff0\u56fe\u4f5c\u4e3a\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u8f93\u5165": 765, "\u5c06\u4e0e\u8f93\u5165\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u7279\u5f81\u52a0\u8f7d\u5230gpu\u4e0a": 759, "\u5c06\u4e0e\u8f93\u51fa\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u6807\u7b7e\u52a0\u8f7d\u5230gpu\u4e0a": 759, "\u5c06\u4e3a\u7a7a": 762, "\u5c06\u4ee5\u5206\u5e03\u5f0f\u6a21\u5f0f\u8fd0\u884c": 737, "\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u56fe\u7684\u5217\u8868": 759, "\u5c06\u4f1a\u62a5\u9519": 754, "\u5c06\u5176\u547d\u540d\u4e3a": 743, "\u5c06\u539f\u59cb\u6570\u636e\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8": 731, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe": 731, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 734, "\u5c06\u5757\u5217\u8868\u548c\u8f93\u5165\u8282\u70b9\u7279\u5f81\u4f20\u5165\u591a\u5c42gnn\u5e76\u83b7\u53d6\u8f93\u51fa": 759, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u4fdd\u5b58\u81f3": 731, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u7f13\u5b58\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 735, "\u5c06\u5f97\u5230\u7684\u56fe\u548c\u8f93\u5165\u7279\u5f81\u4f20\u5165\u4e0a\u8ff0\u6a21\u578b": 757, "\u5c06\u5fc5\u8981\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81\u590d\u5236\u5230gpu\u4e0a": 756, "\u5c06\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 734, "\u5c06\u6570\u636e\u96c6\u7684\u6709\u7528\u4fe1\u606f": 735, "\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55self": 732, "\u5c06\u6bcf\u4e2a\u7c7b\u578b\u6d88\u606f\u805a\u5408\u7684\u7ed3\u679c\u76f8\u52a0": 751, "\u5c06\u88ab\u6e05\u9664": 749, "\u5c06\u8ba1\u7b97\u673a": 739, "\u5c06\u8f93\u51fa\u590d\u5236\u56decpu": 756, "\u5c06\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 766, "\u5c0f\u6279\u6b21\u662f\u4e00\u4e2a\u5143\u7ec4": 733, "\u5c24\u5176\u662f\u5728\u5305\u542b\u5927\u91cf\u672a\u6807\u8bb0\u6570\u636e\u7684\u534a\u76d1\u7763\u7cfb\u7edf\u4e2d": 756, "\u5c31\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 754, "\u5c31\u597d\u50cf\u8fd9\u4e9b\u8fb9\u6839\u672c\u4e0d\u5b58\u5728\u4e00\u6837": 755, "\u5c31\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u7684\u5e73\u5747\u503c\u8bfb\u51fa\u8ba1\u7b97": 767, "\u5c31\u662f\u56fe\u7684\u6a21\u5f0f": 746, "\u5c3d\u53ef\u80fd": 749, "\u5c42\u56fe\u5377\u79ef\u7f51\u7edc": 753, "\u5c42\u8fdb\u884c\u8ba1\u7b97": 753, "\u5c42\u9009\u62e9\u8be5\u6279\u6b21\u8282\u70b9\u7684\u5168\u90e8\u6216\u90e8\u5206\u90bb\u5c45\u8282\u70b9": 753, "\u5c5e\u4e8e\u53e6\u4e00\u7c7b\u578b\u7684\u53cd\u5411\u8fb9": 755, "\u5d4c\u5165": 736, "\u5df2\u7ecf\u8d2d\u4e70": 741, "\u5e26\u6807\u7b7e\u548c\u672a\u5e26\u6807\u7b7e": 738, "\u5e38\u7528\u7684\u5f02\u6784\u56fe": 741, "\u5e38\u7528\u7684\u805a\u5408\u7c7b\u578b\u5305\u62ec": 761, "\u5e38\u89c1\u7684\u66f4\u65b0\u64cd\u4f5c\u662f\u6839\u636e\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u6765\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u548c\u8fdb\u884c\u5f52\u4e00\u5316": 762, "\u5e38\u89c1\u7684\u805a\u5408\u65b9\u6cd5\u5305\u62ec": 767, "\u5e76\u4e14\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u901a\u4fe1": 737, "\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u8c03\u7528\u5b83\u65f6": 737, "\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u7ef4\u5ea6\u5e7f\u64ad": 749, "\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7": 754, "\u5e76\u4e14\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 749, "\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8868\u793a\u8bad\u7ec3": 737, "\u5e76\u4e14\u60f3\u5c06\u5176\u7528\u4e8e\u5757": 758, "\u5e76\u4e14\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u7684\u5b57\u5178": [755, 757], "\u5e76\u4e14\u6709\u591a\u4e2a\u5df2\u6709\u7684api\u53ef\u4ee5\u7b80\u5316\u6b64\u64cd\u4f5c": 731, "\u5e76\u4e14\u7528\u6237\u4e0d\u5e0c\u671b\u5728\u5efa\u6a21\u4e2d\u533a\u5206\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b": 746, "\u5e76\u4e14\u7528\u6237\u5e0c\u671b\u5bf9\u5d4c\u5165\u6267\u884c\u7a00\u758f\u66f4\u65b0": 737, "\u5e76\u4e14\u805a\u5408\u51fd\u6570\u7684\u8f93\u51fa\u503c\u5168\u4e3a0": 762, "\u5e76\u4e14\u904d\u5386\u79cd\u5b50\u8282\u70b9\u751f\u6210\u4e00\u7cfb\u5217\u7684\u5757": 754, "\u5e76\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u51fa\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u53ef\u80fd\u5f97\u5206": 765, "\u5e76\u4e3a\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4f7f\u7528\u4e00\u79cd\u56fe\u5377\u79ef\u6a21\u5757": 769, "\u5e76\u4ece\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 765, "\u5e76\u4f5c\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u6700\u7ec8\u7ed3\u679c": 769, "\u5e76\u4f7f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8bad\u7ec3\u5668\u5747\u53ef\u8bbf\u95ee\u5b83\u4eec": 737, "\u5e76\u5411\u672c\u5730\u8bad\u7ec3\u5668\u8fd4\u56de\u4e00\u90e8\u5206": 737, "\u5e76\u5411\u672c\u5730\u8fdb\u7a0b\u8fd4\u56de\u8282\u70b9\u7684\u5b50\u96c6": 737, "\u5e76\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\u4f7f\u7528": 765, "\u5e76\u5728\u540c\u6837\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u5c06\u5206\u533a\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 736, "\u5e76\u5728\u6240\u6709\u673a\u5668\u4e0a\u542f\u52a8\u8bad\u7ec3\u4efb\u52a1": 736, "\u5e76\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u8981\u8fdb\u884c\u591a\u8f6e\u7684\u4fe1\u606f\u4f20\u9012": 769, "\u5e76\u5bf9\u5b83\u4eec\u5e94\u7528\u76f8\u540c\u7684\u64cd\u4f5c": 746, "\u5e76\u5bf9\u8282\u70b9\u548c\u8fb9\u91c7\u6837\u4ee5\u751f\u6210\u7528\u4e8e\u8bad\u7ec3\u7684\u5c0f\u6279\u6b21\u6570\u636e": 736, "\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5757": 754, "\u5e76\u5c06\u5206\u533a\u6570\u636e\u81ea\u52a8\u52a0\u8f7d\u5230\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e2d": 737, "\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u7a00\u758f\u4f18\u5316\u5668": 737, "\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d": 737, "\u5e76\u5c06\u751f\u6210\u7684\u5757\u5217\u8868\u653e\u5230gpu\u4e0a": 755, "\u5e76\u5c06\u751f\u6210\u7684\u5b50\u56fe\u5217\u8868\u653e\u5230gpu\u4e0a": 759, "\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728outputs\u5b57\u5178\u4e2d": 763, "\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237": 763, "\u5e76\u5c06\u8f93\u51fa\u4f5c\u4e3a\u8282\u70b9\u7684\u65b0\u7279\u5f81": 749, "\u5e76\u5c55\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u7ba1\u9053\u7684\u6bcf\u4e2a\u7ec4\u4ef6": 730, "\u5e76\u63d0\u53d6\u8f93\u51fa\u7684user\u8282\u70b9\u5d4c\u5165": 769, "\u5e76\u6709\u53ef\u80fd\u5229\u7528\u8fd9\u70b9": 755, "\u5e76\u7528\u5b83\u6784\u9020\u4e00\u4e2a\u5f02\u6784\u56fe": 746, "\u5e76\u7528\u5bf9\u5e94\u7684\u4e24\u4e2a\u7aef\u70b9id\u8868\u793a\u4e00\u6761\u8fb9": 745, "\u5e76\u8ba1\u7b97\u672c\u5730\u8fdb\u7a0b\u7684\u8282\u70b9": 736, "\u5e76\u8df3\u8fc7\u4ece\u6587\u4ef6\u6784\u5efa\u56fe\u7684\u5b9e\u73b0": 734, "\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u7684\u5b57\u5178": 769, "\u5e76\u8fd4\u56de\u6e90\u8282\u70b9id\u6570\u7ec4\u548c\u76ee\u6807\u8282\u70b9id\u6570\u7ec4": 757, "\u5e76\u901a\u8fc7\u5728\u8bad\u7ec3\u8282\u70b9\u4e0a\u6bd4\u8f83\u9884\u6d4b\u548c\u771f\u5b9e\u6807\u7b7e\u6765\u8ba1\u7b97\u635f\u5931": 769, "\u5e76\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u4e2d\u5177\u6709\u5e42\u5f8b\u5206\u5e03\u7684\u56fe\u8fdb\u884c\u4e86\u4f18\u5316": 738, "\u5e94\u7528\u56fe\u5377\u79ef\u548c\u6fc0\u6d3b\u51fd\u6570": 767, "\u5e95\u5c42api\u8981\u6c42\u7528\u6237\u7f16\u5199\u4ee3\u7801\u4ee5\u660e\u786e\u5b9a\u4e49\u5982\u4f55\u5bf9\u8282\u70b9\u5c42\u8fdb\u884c\u91c7\u6837": 737, "\u5efa\u7acb\u70b9\u548c\u8fb9\u7279\u5f81": 765, "\u5efa\u8bae\u7684\u5b9e\u73b0\u662f\u5c06\u7ebf\u6027\u64cd\u4f5c\u5206\u6210\u4e24\u90e8\u5206": 750, "\u5f02\u6784\u56fe": [740, 741, 747, 751, 762], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u540c\u6784\u56fe\u7684\u6a21\u578b\u8bad\u7ec3\u662f\u4e00\u6837\u7684": 769, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": [747, 760], "\u5f02\u6784\u56fe\u4e0a\u7684\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206": 751, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 759, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 768, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u548c\u540c\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6ca1\u6709\u592a\u5927\u533a\u522b": 768, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u6a21\u578b\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u51e0\u4e4e\u76f8\u540c": 757, "\u5f02\u6784\u56fe\u4e2d\u8282\u70b9\u7c7b\u578b\u7684\u987a\u5e8f": 746, "\u5f02\u6784\u56fe\u4e2d\u8fb9\u7c7b\u578b\u7684\u987a\u5e8f": 746, "\u5f02\u6784\u56fe\u4e3a\u7ba1\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u53ca\u5176\u76f8\u5173\u7279\u5f81\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u63a5\u53e3": 746, "\u5f02\u6784\u56fe\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u8fb9\u7684\u7c7b\u578b": 764, "\u5f02\u6784\u56fe\u7684\u5377\u79ef\u64cd\u4f5c\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u53c2\u6570": 763, "\u5f02\u6784\u56fe\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u51e0\u4e4e\u76f8\u540c": 755, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 769, "\u5f02\u6784\u56fe\u91cc\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 746, "\u5f02\u6784\u7684": 741, "\u5f20\u5efa": 747, "\u5f20\u6000\u6587": 747, "\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570\u5fc5\u987b\u5728gpu\u4e0a": 744, "\u5f52\u4e00\u5316": 762, "\u5f52\u4e00\u5316\u53ef\u4ee5\u662fl2\u5f52\u4e00\u5316": 761, "\u5f53": 753, "\u5f531\u4e2a\u8282\u70b9\u5165\u5ea6\u4e3a0\u65f6": 762, "\u5f53\u4e00\u53f0\u673a\u5668\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u65f6": 737, "\u5f53\u4f7f\u7528": 742, "\u5f53\u524d": 737, "\u5f53\u524d\u4ec5\u652f\u6301\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 737, "\u5f53\u524d\u7248\u672c\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3api\u4ec5\u652f\u6301pytorch\u540e\u7aef": 736, "\u5f53\u524d\u7248\u672c\u7684\u5b9e\u73b0\u4ec5\u652f\u6301\u5177\u6709\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 736, "\u5f53\u5f15\u5165\u591a\u79cd\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u540e": 746, "\u5f53\u7528\u6237\u4f7f\u7528\u542f\u52a8\u811a\u672c\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 737, "\u5f53\u7528\u6237\u5728python\u547d\u4ee4\u884c\u6216jupyt": 737, "\u5f53\u811a\u672c\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 737, "\u5f53\u8bad\u7ec3\u811a\u672c\u5728\u8bad\u7ec3\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 737, "\u5f53\u8f93\u5165\u7279\u5f81": 762, "\u5f53\u8fb9\u7c7b\u578b\u552f\u4e00\u5730\u786e\u5b9a\u4e86\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u7684\u7c7b\u578b\u65f6": 746, "\u5f90\u4e1c\u8f89": 747, "\u5f97\u5206": 768, "\u5f97\u5230": 765, "\u5f97\u5230\u5757\u4e2d\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u521d\u59cb\u8282\u70b9id": 754, "\u5f97\u5230\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 758, "\u5f97\u5230\u8fb9id\u5230\u8f93\u5165\u8fb9\u754c\u4e2d\u8fb9\u7684\u521d\u59cbid\u7684\u6620\u5c04": 754, "\u5fc5\u987b\u5728": 737, "\u5fc5\u987b\u5728dgl\u7684\u4efb\u4f55\u5176\u4ed6\u5206\u5e03\u5f0fapi\u4e4b\u524d": 737, "\u5fc5\u987b\u5728\u521d\u59cb\u5316": 737, "\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u7684\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8c03\u7528\u542f\u52a8\u811a\u672c": 739, "\u60c5\u51b5\u4f1a\u6709\u6240\u4e0d\u540c": 755, "\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f": 741, "\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570": 754, "\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u90bb\u5c45\u91c7\u6837\u7b56\u7565": 754, "\u60f3\u8981\u5b9e\u73b0\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u517c\u5bb9\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 753, "\u60f3\u8981\u7528dgl\u63d0\u4f9b\u7684\u90bb\u5c45\u91c7\u6837\u5668\u505a\u8fb9\u5206\u7c7b": 755, "\u60f3\u8d2d\u4e70": 741, "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528g": 763, "\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528\u4e00\u4e2a\u96c6\u7fa4\u7684\u73af\u5883\u8bbe\u7f6e": 736, "\u6216": [741, 746, 758], "\u6216numpi": 745, "\u6216\u4e3a\u76f8\u5173\u5b9e\u4f53\u63a8\u8350\u8fdb\u884c\u6700\u8fd1\u90bb\u641c\u7d22\u6216\u6700\u5927\u5185\u79ef\u641c\u7d22": 768, "\u6216\u65e0\u5411\u56fe\u4e2d\u7684\u90bb\u5c45": 754, "\u6216\u662f": 741, "\u6216\u8005\u60f3\u8981\u5173\u4e8e\u5757\u7684\u66f4\u6df1\u5165\u7684\u4ecb\u7ecd": 759, "\u6216\u8005\u60f3\u8981\u5bf9\u5757\u7684\u6982\u5ff5\u6709\u66f4\u8be6\u7ec6\u7684\u4e86\u89e3": 755, "\u6240\u4ee5dgl\u4e0d\u63a8\u8350\u5728": 749, "\u6240\u4ee5\u5f53\u5c06\u65e0\u5411\u7684networkx\u56fe\u8f6c\u6362\u4e3a": 742, "\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u5c06\u5176\u9644\u52a0\u5230\u4f18\u5316\u5668\u4e0a\u4ee5\u8fdb\u884c\u5c0f\u6279\u91cf\u8bad\u7ec3": 737, "\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019": 735, "\u6240\u4ee5\u8fd9\u91cc\u96be\u4ee5\u679a\u4e3e\u6240\u6709\u9009\u9879": 742, "\u6240\u6709\u6d88\u606f\u4f20\u9012\u51fd\u6570": 767, "\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6709\u65b9\u5411\u7684": 745, "\u6240\u6709\u8282\u70b9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5b9e\u4f53": 741, "\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u5fc5\u987b\u8c03\u7528\u521b\u5efa": 737, "\u6240\u6709\u8fb9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5173\u7cfb": 741, "\u6240\u8ff0": 764, "\u6267\u884c\u542f\u52a8\u811a\u672c\u7684\u8ba1\u7b97\u673a": 739, "\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u5bf9\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u64cd\u4f5c": 749, "\u6269\u5c55\u4e3a": 762, "\u6279\u6b21": [747, 752, 759, 762, 764], "\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u5f20\u91cf\u5747\u901a\u8fc7\u5c06\u6240\u6709\u56fe\u4e0a\u7684\u76f8\u5e94\u7279\u5f81\u62fc\u63a5\u5f97\u5230": 767, "\u6279\u6b21\u5316\u7684\u56fe": 767, "\u6279\u91cf\u5f52\u4e00\u5316\u7b49": 767, "\u628a\u5b83\u5b58\u5728\u56fe\u4e2d\u7528\u6765\u505a\u6d88\u606f\u4f20\u9012": 751, "\u628a\u5b83\u7684\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\u53d8\u6210\u4e86\u4e00\u4e2a\u5c0f\u7684\u4e8c\u5206\u56fe": 754, "\u628a\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 766, "\u62bd\u53d6\u51fa\u6765": 763, "\u62c6\u5206\u8bad\u7ec3\u96c6": 736, "\u62f7\u8d1d\u8282\u70b9\u7279\u5f81": 746, "\u62f7\u8d1d\u8fb9\u7684\u7279\u5f81": 746, "\u62fc\u63a5": 750, "\u6307\u4ee3\u4e00\u6761": 745, "\u6307\u5411\u8282\u70b9": 745, "\u6307\u5b9a\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55\u6216\u5df2\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55": 731, "\u6307\u5b9a\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 739, "\u6307\u5b9a\u56fe\u7c7b\u578b": 762, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u5206\u533a\u6570\u636e\u7684\u76f8\u5bf9\u8def\u5f84": 739, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u7528\u6237\u7684\u8bad\u7ec3\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84": 739, "\u6307\u5b9a\u6bcf\u4e2a\u5173\u7cfb\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570": 751, "\u6307\u5b9a\u8bad\u7ec3\u673a\u5668\u4e2d\u5b58\u50a8\u4e0e\u5206\u5e03\u5f0f\u8bad\u7ec3\u6709\u5173\u7684\u6240\u6709\u6570\u636e\u7684\u76ee\u5f55": 739, "\u6307\u5b9a\u96c6\u7fa4\u7684ip\u914d\u7f6e\u6587\u4ef6": 739, "\u6307\u793a\u76f8\u5e94\u8282\u70b9\u548c\u8fb9\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7279\u5f81\u5b57\u6bb5\u540d": 749, "\u6362\u53e5\u8bdd\u8bf4": 737, "\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570": 749, "\u63a5\u53d7\u4e00\u4e2a\u5982\u4e0a\u6240\u8ff0\u7684\u53c2\u6570": 749, "\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178": 751, "\u63a5\u53d7\u6765\u81ea\u540e\u7aef\u6846\u67b6\u7684\u4efb\u4f55\u8bbe\u5907\u5bf9\u8c61": 744, "\u63a5\u53e3\u53ef\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5f81": 743, "\u63a5\u53e3\u7684\u91cd\u8981\u8bf4\u660e": 743, "\u63a5\u6536\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u5f20\u91cf\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 769, "\u63a5\u7740\u8c03\u7528\u7528\u6237\u9884\u5148\u6ce8\u518c\u5728\u8be5\u5173\u7cfb\u4e0a\u7684nn\u6a21\u5757": 763, "\u63a8\u65ad": 737, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [736, 747], "\u63a8\u65ad\u7b97\u6cd5\u4e0d\u540c\u4e8e\u8bad\u7ec3\u7b97\u6cd5": 756, "\u63a8\u65ad\u7b97\u6cd5\u5c06\u5305\u542b\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 756, "\u63a8\u7406\u671f\u95f4\u5b9a\u4f4d\u8282\u70b9": 738, "\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5e03\u5c14\u6570\u7ec4\u8868\u793a\u8bad\u7ec3": 737, "\u63a9\u7801": 731, "\u63a9\u7801\u5728pytorch\u548ctensorflow\u4e2d\u662fbool\u5f20\u91cf": 734, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee5\u56fe\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u62bd\u8c61": 740, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u540c\u6784\u56fe\u8282\u70b9\u5206\u7c7b\u7684\u4f8b\u5b50": 769, "\u63d0\u4f9b\u4e86\u4e00\u4e9b\u529f\u80fd": 737, "\u63d0\u4f9b\u4e86\u4e00\u5c0f\u90e8\u5206": 737, "\u63d0\u4f9b\u4e86\u51e0\u4e2aapi\u6765\u8bbf\u95ee\u56fe\u7ed3\u6784": 737, "\u63d0\u4f9b\u4e86\u5bf9": 758, "\u63d0\u4f9b\u4e86\u63a5\u53e3\u4ee5\u5904\u7406\u56fe\u7684\u7ed3\u6784": 740, "\u63d0\u4f9b\u4e86\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 734, "\u63d0\u5230\u7684\u4e24\u5c42gcn\u4e3a\u4f8b": 756, "\u64cd\u4f5c": 749, "\u652f\u6301\u7d22\u5f15\u8bfb\u53d6\u548c\u5199\u5165": 737, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u975e\u5e38\u76f8\u4f3c": 755, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8fb9\u5206\u7c7b": 757, "\u6570\u636e\u5bfc\u5165": 734, "\u6570\u636e\u6587\u4ef6\u5939": 746, "\u6570\u636e\u6837\u672c\u7684\u6570\u91cf": 731, "\u6570\u636e\u96c6\u4e2d\u56fe\u7684\u6570\u91cf": 734, "\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u5f20\u56fe\u90fd\u6709\u5b83\u72ec\u7279\u7684\u7ed3\u6784\u548c\u8282\u70b9\u4e0e\u8fb9\u7684\u7279\u5f81": 767, "\u6570\u636e\u96c6\u4e2d\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u56fe": 734, "\u6570\u636e\u96c6\u4e5f\u53ea\u5305\u62ec\u4e00\u4e2a\u56fe": 733, "\u6570\u636e\u96c6\u7c7b\u4f3c": 733, "\u6574\u56fe\u5206\u7c7b": [734, 747, 764, 769], "\u6574\u56fe\u5206\u7c7b\u4e0e\u8282\u70b9\u5206\u7c7b\u6216\u94fe\u63a5\u9884\u6d4b\u7684\u4e3b\u8981\u533a\u522b\u662f": 767, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u8fd8\u9700\u8981\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u8868\u793a": 767, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u9700\u8981\u5728\u5f88\u591a\u56fe\u4e0a\u8fdb\u884c\u8bad\u7ec3": 767, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u4e0e\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u5178\u578b\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u7684\u5927\u591a\u6570\u6570\u636e\u96c6\u7c7b\u4f3c": 734, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u91cc\u7684\u6bcf\u4e2a\u6570\u636e\u70b9\u662f\u4e00\u4e2a\u56fe\u548c\u5b83\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4": 767, "\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u53ef\u4ee5\u8bc6\u522b\u793e\u533a\u7684\u7c7b\u578b": 767, "\u6574\u56fe\u5206\u7c7b\u6d41\u7a0b": 767, "\u6574\u56fe\u5206\u7c7b\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a": 767, "\u6587\u4ef6\u4e2d\u52a0\u8f7d": 742, "\u6587\u4ef6\u7684\u6240\u6709\u8def\u5f84\u90fd\u5e94\u6307\u5b9a\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u7684\u76f8\u5bf9\u8def\u5f84": 739, "\u65b9\u4fbf\u5e7f\u5927\u4e2d\u6587\u7528\u6237\u7fa4\u5b66\u4e60\u548c\u4f7f\u7528dgl": 747, "\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\u9a8c\u8bc1": 745, "\u65b9\u6cd5": [752, 754], "\u65b9\u6cd5\u4ece\u6700\u540e\u4e00\u5c42\u5f00\u59cb\u751f\u6210\u4e00\u4e2a\u5757\u7684\u5217\u8868": 754, "\u65b9\u6cd5\u8ba1\u7b97\u8fb9\u9884\u6d4b\u7684\u7ec4\u4ef6\u5373\u53ef\u8fdb\u884c\u8fb9\u5206\u7c7b": 765, "\u65b9\u6cd5\u8ba1\u7b97\u9884\u6d4b\u503c\u5373\u53ef": 765, "\u65e0\u5411\u7684": 741, "\u65e0\u76d1\u7763\u5b66\u4e60graphsag": 757, "\u65e0\u9700\u8fdb\u884c\u6b64\u7c7b\u68c0\u9a8c": 762, "\u65f6": 737, "\u65f6\u5206\u5e03\u5f0f\u91c7\u6837\u4ee3\u7801\u4e0e\u5355\u8fdb\u7a0b\u91c7\u6837\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c": 737, "\u65f6\u8bbe\u7f6e": 755, "\u65f6\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u8fed\u4ee3": 755, "\u65f6\u9700\u8981\u6307\u5b9a\u8fb9\u7684\u7c7b\u578b": 765, "\u662f": 738, "\u662f1\u4e2a\u5143\u7ec4\u65f6": 762, "\u662f\u4e00\u4e2apython\u7c7b": 737, "\u662f\u4e00\u4e2a\u56fe\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u51c6\u6570\u636e\u96c6": 733, "\u662f\u4e00\u4e2a\u5728\u4e8c\u5206\u56fe\u4e0a\u505a\u8fb9\u5206\u7c7b\u7684\u4ee3\u7801\u793a\u4f8b": 755, "\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u90bb\u5c45\u91c7\u6837\u5668\u7c7b": 754, "\u662f\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\u7684\u51fd\u6570": 754, "\u662f\u4e00\u4e2a\u9ad8\u7ea7api": 749, "\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 755, "\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 740, "\u662f\u4ece\u5747\u5300\u5206\u5e03\u4e2d\u91c7\u6837\u7684": 768, "\u662f\u4ee5\u8fb9\u7c7b\u578b\u5b57\u5178\u548c\u9884\u6d4b\u7ed3\u679c\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 757, "\u662f\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 751, "\u662f\u5426\u6253\u5370\u8fdb\u5ea6\u4fe1\u606f": 731, "\u662f\u5426\u91cd\u65b0\u5bfc\u5165\u6570\u636e\u96c6": 731, "\u662f\u56fe": 767, "\u662f\u5904\u7406": 731, "\u662f\u5b9a\u4e49\u5728\u6bcf\u6761\u8fb9\u4e0a\u7684\u6d88\u606f\u51fd\u6570": 748, "\u662f\u5bf9\u5e94\u6bcf\u4e2a\u5173\u7cfb": 763, "\u662f\u5e38\u6570\u9879\u8d85\u53c2\u6570": 768, "\u662f\u7528\u4e8e\u7279\u5f81\u5f52\u4e00\u5316\u7684\u53ef\u8c03\u7528\u51fd\u6570": 761, "\u662f\u805a\u5408\u51fd\u6570": 763, "\u662f\u8282\u70b9": 767, "\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55": 739, "\u662f\u987e\u5ba2": 741, "\u6635\u79f0": 747, "\u6682\u4e0d\u652f\u6301\u7a00\u758f\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 737, "\u66f4\u591a\u7ec6\u8282": 734, "\u66f4\u591a\u8be6\u7ec6\u7528\u6cd5\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357": 752, "\u66f4\u65b0\u51fd\u6570": [748, 749], "\u66f4\u65b0\u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u53c2\u6570": 749, "\u66ff\u6362\u4e3a": 758, "\u6700\u540e": [763, 767], "\u6700\u5e38\u89c1\u548c\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4efb\u52a1\u4e4b\u4e00\u5c31\u662f\u8282\u70b9\u5206\u7c7b": 769, "\u6700\u7b80\u5355\u7684\u90bb\u5c45\u91c7\u6837\u5668\u662f": 759, "\u6709": 749, "\u67093\u4e2a\u6587\u4ef6\u4ee5dgl\u683c\u5f0f\u5b58\u50a8\u5206\u533a\u6570\u636e": 738, "\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9002\u5408\u4fdd\u5b58\u5904\u7406\u8fc7\u7684\u6570\u636e": 735, "\u6709\u5173dgl\u7684\u5185\u7f6e\u91c7\u6837\u5668\u7684\u5b8c\u6574\u5217\u8868": 755, "\u6709\u5173dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u5982\u4f55\u5de5\u4f5c": 769, "\u6709\u5173\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 734, "\u6709\u5173\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 734, "\u6709\u5173\u8bad\u7ec3\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 734, "\u6709\u5173\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 734, "\u6709\u5206\u5e03\u5f0f\u7684\u7248\u672c": 737, "\u6709\u5411": 741, "\u6709\u5411\u7684": 741, "\u6709\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u53ef\u50a8\u5b58\u56fe": 742, "\u6709\u65f6\u5e0c\u671b\u4ece\u8ba1\u7b97\u4f9d\u8d56\u4e2d\u5220\u9664\u51fa\u73b0\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u8fb9": 755, "\u6709\u65f6\u7528\u6237\u4f1a\u60f3\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 764, "\u6709\u65f6\u7528\u6237\u5e0c\u671b\u9884\u6d4b\u56fe\u4e2d\u8fb9\u7684\u5c5e\u6027\u503c": 765, "\u6709\u65f6\u8fb9\u4e0a\u7684\u6d88\u606f\u53ef\u80fd\u662f\u9ad8\u7ef4\u7684": 750, "\u6709\u7740\u8bb8\u591a\u4f7f\u7528\u8282\u70b9\u5d4c\u5165\u7684\u65b9\u6cd5": 768, "\u670d\u52a1\u5668": 736, "\u670d\u52a1\u5668\u8fdb\u7a0b": 736, "\u670d\u52a1\u5668\u8fdb\u7a0b\u8d1f\u8d23\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570": 737, "\u672a\u52a0\u6743\u7684": 741, "\u672a\u6765dgl\u5c06\u652f\u6301\u5206\u5e03\u5f0f\u56fe\u5212\u5206": 738, "\u672c\u4f8b\u4e2d\u7701\u7565": 769, "\u672c\u7ae0\u4e2d\u9009\u62e9": 769, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5728\u5927\u56fe\u4e0a\u8fdb\u884c\u968f\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u65b9\u6cd5": 753, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4e3a\u7528\u6237\u81ea\u5df1\u7684\u56fe\u6570\u636e\u521b\u5efa\u4e00\u4e2adgl\u6570\u636e\u96c6": 730, "\u672c\u7ae0\u4ee3\u7801\u4f7f\u7528pytorch\u4f5c\u4e3adgl\u7684\u540e\u7aef\u6846\u67b6": 764, "\u672c\u7ae0\u4f1a\u4ee5\u4e0b\u9762\u4ee3\u7801\u6240\u521b\u5efa\u7684\u4e00\u4e2a\u5f02\u6784\u56fe\u4e3a\u4f8b": 764, "\u672c\u7ae0\u4f59\u4e0b\u7684\u5c0f\u8282\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4e3b\u9898": 753, "\u672c\u7ae0\u5047\u8bbe\u7528\u6237\u7684\u56fe\u4ee5\u53ca\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u90fd\u80fd\u5b58\u8fdbgpu": 764, "\u672c\u7ae0\u5171\u6709\u56db\u8282": 764, "\u672c\u7ae0\u5c06\u4f7f\u7528pytorch\u4f5c\u4e3a\u540e\u7aef": 760, "\u672c\u7ae0\u7684": 769, "\u672c\u7ae0\u7684\u524d\u534a\u90e8\u5206\u4ecb\u7ecd\u4e86\u4e0d\u540c\u573a\u666f\u4e0b\u5982\u4f55\u8fdb\u884c\u968f\u673a\u8bad\u7ec3\u7684\u65b9\u6cd5": 753, "\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u5206\u5e03\u5f0f\u7ec4\u4ef6": 736, "\u672c\u7ae0\u7684\u540e\u7eed\u90e8\u5206\u5c55\u793a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5": 731, "\u672c\u7ae0\u7684\u5f02\u6784\u56fe\u6837\u4f8b\u6570\u636e": 765, "\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u89e3\u91ca\u4e86\u5982\u4f55\u5728\u5f02\u6784\u56fe\u4e0a\u5b9e\u73b0\u6d88\u606f\u4f20\u9012": 748, "\u672c\u7ae0\u901a\u8fc7\u4f7f\u7528": 764, "\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u4e86dgl\u7684\u6d88\u606f\u4f20\u9012api": 748, "\u672c\u7ae0\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e86\u56fe\u7684\u5b9a\u4e49": 740, "\u672c\u8282\u4e0d\u6d89\u53ca\u901a\u8fc7\u8f6c\u6362\u5176\u4ed6\u56fe\u6765\u751f\u6210\u56fe\u7684\u51fd\u6570": 742, "\u672c\u8282\u4ec5\u7ed9\u51fa\u4e00\u4e9b\u5e38\u89c1\u683c\u5f0f\u7684\u4e00\u822c\u60c5\u51b5": 742, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728gpu\u663e\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u5c0f\u6279\u6b21\u5904\u7406\u548c\u90bb\u5c45\u91c7\u6837\u5b9e\u73b0\u5168\u56fe\u524d\u5411\u4f20\u64ad\u7684\u65b9\u6cd5": 756, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97api": 737, "\u672c\u8282\u4ee5\u5185\u7f6e\u6570\u636e\u96c6": 734, "\u672c\u8282\u4ee5\u5185\u7f6e\u7684\u6570\u636e\u96c6": 734, "\u672c\u8282\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u7684\u57fa\u672c\u7528\u6cd5": 733, "\u672c\u8282\u4f1a\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u7528\u6237\u81ea\u5df1\u7684\u91c7\u6837\u5668\u5e76\u5c06\u5176\u52a0\u5165\u5230gnn\u7684\u8bad\u7ec3\u6846\u67b6\u4e2d": 754, "\u672c\u8282\u4f7f\u7528dgl\u5185\u7f6e\u7684\u6570\u636e\u96c6": 769, "\u672c\u8282\u5c06\u5c55\u793a\u5982\u4f55\u5904\u7406\u4e0e\u8fd9\u4e9b\u4efb\u52a1\u76f8\u5173\u7684\u6570\u636e\u96c6": 734, "\u672c\u8282\u628a\u8282\u70b9": 768, "\u672c\u8282\u91cd\u70b9\u4ecb\u7ecd\u4e86\u5904\u7406\u56fe": 734, "\u672c\u8d28\u4e0a": 758, "\u673a\u5668\u96c6\u7fa4\u4e0a": 739, "\u674e\u5e86\u6807": 747, "\u6765\u4fdd\u5b58\u56fe\u7684\u70b9id": 745, "\u6765\u505a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u94fe\u8def\u9884\u6d4b\u7684\u6570\u636e\u96c6": 734, "\u6765\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u5757\u7684\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 759, "\u6765\u5904\u7406zip\u6587\u4ef6": 732, "\u6765\u5c55\u793a\u6a21\u578b\u7684\u8bad\u7ec3": 769, "\u6765\u5e73\u8861\u6bcf\u4e2a\u7c7b\u578b\u8282\u70b9\u5728\u5b50\u56fe\u4e2d\u7684\u5165\u5ea6": 738, "\u6765\u5f00\u53d1\u6d88\u606f\u4f20\u9012\u529f\u80fd": 750, "\u6765\u6307\u4ee3\u8fd9\u4e24\u4e2a\u5173\u7cfb\u662f\u53ef\u4ee5\u7684": 746, "\u6765\u6307\u5b9a\u6574\u5408\u4e0d\u540c\u5173\u7cfb\u805a\u5408\u7ed3\u679c\u7684\u65b9\u5f0f": 751, "\u6765\u6307\u793a\u6b64\u591a\u4efb\u52a1\u6570\u636e\u96c6\u4e2d\u7684\u9884\u6d4b\u4efb\u52a1\u603b\u6570": 734, "\u6765\u66ff\u6362\u56fe": 759, "\u6765\u67e5\u770bdgl\u7684\u5185\u7f6e\u6a21\u578b\u6a21\u5757\u662f\u5426\u652f\u6301\u63a5\u53d7": 759, "\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684\u6570\u636e\u96c6": 734, "\u6765\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 764, "\u6765\u81eanetworkx": 742, "\u6765\u81eascipi": 742, "\u6765\u81ea\u52a8\u5b8c\u6210": 732, "\u6765\u83b7\u53d6\u8282\u70b9": 736, "\u6765\u83b7\u53d6\u88ab\u5212\u5206\u7684\u56fe\u5206\u533a\u6570\u636e": 736, "\u6765\u83b7\u5f97\u5206\u7c7b\u8f93\u51fa": 767, "\u6765\u8ba1\u7b97\u8282\u70b9\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 768, "\u6765\u8ba1\u7b97\u8fb9\u7684\u5206\u6570": 757, "\u6765\u8bbf\u95ee\u8282\u70b9\u548c\u8fb9\u4e2d\u7684\u6570\u636e": 737, "\u6765\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 757, "\u6784\u5efa\u4e00\u4e2a2\u5c42\u7684gnn\u6a21\u578b": 769, "\u6784\u5efa\u4e86\u4e00\u4e2a\u65e0\u5411\u7684networkx\u56fe": 742, "\u6784\u5efa\u56fe": 734, "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": [747, 758, 764, 769], "\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u6ce8\u518c\u548c\u524d\u5411\u4f20\u64ad\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u5f20\u91cf\u64cd\u4f5c\u4e0e\u540e\u7aef\u6846\u67b6\u4e00\u6837": 760, "\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1": 761, "\u6784\u9020\u51fd\u6570\u7684\u6700\u540e\u8c03\u7528\u4e86": 761, "\u6807\u7b7e": [731, 734], "\u6807\u7b7e\u548c\u6570\u636e\u96c6\u5212\u5206\u7684\u63a9\u7801": 731, "\u6807\u7b7e\u6570\u7b49\u57fa\u672c\u4fe1\u606f": 731, "\u6807\u91cf\u6574\u578b\u7279\u5f81": 743, "\u6829\u6829\u7684\u590f\u5929": 747, "\u6839\u636e": 765, "\u6839\u636edgl\u6240\u4f7f\u7528\u7684\u540e\u7aef\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 760, "\u6839\u636e\u4efb\u52a1\u8bbe\u8ba1\u5206\u7c7b\u5c42": 767, "\u6839\u636e\u5176\u590d\u6742\u6027": 751, "\u6839\u636e\u5f53\u524d\u7684\u4efb\u52a1\u60c5\u51b5": 738, "\u6839\u636e\u8fd9\u4e2a\u826f\u597d\u7684\u6027\u8d28": 767, "\u6839\u636e\u9700\u8981\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u6765\u9009\u62e9": 758, "\u68c0\u67e5": 732, "\u68c0\u67e5\u5728": [731, 735], "\u68c0\u6d4b\u8f93\u5165\u56fe\u5bf9\u8c61\u662f\u5426\u7b26\u5408\u89c4\u8303": 762, "\u6a21\u5757": [747, 758, 764, 769], "\u6a21\u5757\u4e2d": 762, "\u6a21\u5757\u4f5c\u4e3a\u56fe\u5377\u79ef\u5c42": 767, "\u6a21\u5757\u63a5\u53d7\u7684\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684": 759, "\u6a21\u5757\u9996\u5148\u5bf9\u6bcf\u79cd\u8fb9\u7c7b\u578b\u8fdb\u884c\u5355\u72ec\u7684\u56fe\u5377\u79ef\u8ba1\u7b97": 769, "\u6a21\u578b": 737, "\u6a21\u578b\u4e2d\u5e94\u7279\u522b\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9": 767, "\u6a21\u578b\u5b9a\u4e49": 736, "\u6a21\u578b\u5b9a\u4e49\u5b8c\u6210\u540e": 767, "\u6a21\u578b\u5b9e\u73b0\u4f4d\u4e8e": 767, "\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6\u4e2d": 765, "\u6a21\u578b\u5c06": 755, "\u6a21\u578b\u63a5\u53d7\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868": 755, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u51e0\u4e4e\u76f8\u540c": 759, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c": 755, "\u6a21\u578b\u7684\u8f93\u5165\u662f\u5e26\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u7684\u6279\u6b21\u5316\u56fe": 767, "\u6a21\u578b\u8bad\u7ec3\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u4f4d\u4e8e": 767, "\u6a21\u578b\u8bad\u7ec3\u7684\u5faa\u73af": 736, "\u6b22\u8fce\u7ed9dgl\u8d21\u732e\u66f4\u591a\u7684\u6a21\u5757": 760, "\u6b63\u5728\u9500\u552e": 741, "\u6b63\u6837\u672c": 757, "\u6b64\u51fd\u6570\u5bf9": 749, "\u6b64\u521b\u5efa\u8fc7\u7a0b\u624d\u80fd\u6210\u529f": 737, "\u6b64\u5904\u53ea\u662f\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49gnn\u6a21\u5757\u7684\u4e00\u4e2a\u793a\u4f8b": 758, "\u6b64\u5916": [734, 744, 746], "\u6b64\u6a21\u5f0f\u4e3b\u8981\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5": 737, "\u6b64\u8c03\u7528\u901a\u8fc7\u5c06\u6e90\u8282\u70b9\u7279\u5f81": 749, "\u6bcf\u4e00\u6761\u8fb9": 768, "\u6bcf\u4e2a": 733, "\u6bcf\u4e2a\u5173\u7cfb\u4e0a\u7684dgl": 763, "\u6bcf\u4e2a\u5173\u7cfb\u7531\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4": 746, "\u6bcf\u4e2a\u56fe\u7684\u6807\u7b7e\u6570": 734, "\u6bcf\u4e2a\u8282\u70b9\u7279\u5f81\u5177\u6709\u552f\u4e00\u540d\u79f0": 743, "\u6bcf\u4e2a\u8fb9\u7279\u5f81\u4e5f\u5177\u6709\u552f\u4e00\u540d\u79f0": 743, "\u6bcf\u53f0\u8ba1\u7b97\u673a\u8d1f\u8d23\u4e00\u4e2a\u4e14\u53ea\u8d1f\u8d23\u4e00\u4e2a\u5206\u533a": 737, "\u6bcf\u5c42\u53ea\u5c55\u793a\u524d3\u4e2a\u5c0f\u6279\u6b21": 756, "\u6bcf\u6761\u8fb9\u7684\u6743\u91cd": 743, "\u6bcf\u6761\u8fb9\u90fd\u4e0e\u4e00\u4e2a\u6807\u91cf\u6743\u91cd\u503c\u76f8\u5173\u8054": 741, "\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u91cf\u6743\u91cd": 766, "\u6bcf\u6b21\u68af\u5ea6\u4e0b\u964d": 753, "\u6bcf\u79cd\u5173\u7cfb\u5bf9\u5e94\u4e00\u4e2a": 762, "\u6bcf\u8282\u5bf9\u5e94\u4e00\u79cd\u56fe\u5b66\u4e60\u4efb\u52a1": 764, "\u6bcf\u884c\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 739, "\u6bd4\u5982": [750, 761], "\u6bd4\u5982gml\u6216json": 746, "\u6bd4\u5982\u5217\u8868": 745, "\u6bd4\u5982\u5728": 762, "\u6c88\u6210": 747, "\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u8fb9": 754, "\u6ca1\u6709\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u5c31\u6ca1\u6709\u660e\u786e\u7684\u8fd4\u56de\u503c": 746, "\u6ce8\u518c\u53c2\u6570\u548c\u5b50\u6a21\u5757": 761, "\u6ce8\u518c\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u6216\u8005\u5b50\u6a21\u5757": 761, "\u6ce8\u610f": [742, 746, 756, 758, 764], "\u6ce8\u610f\u7ed3\u679c\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u7279\u5f81": 751, "\u6ce8\u610f\u8ba1\u7b97\u65b9\u6cd5\u662f\u4e00\u6837\u7684": 756, "\u6d4b\u8bd5\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u5bf9\u5e94\u8282\u70b9": 737, "\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u91cd\u590d\u591a\u8f6e": 769, "\u6d88\u606f\u4f20\u9012\u662f\u5b9e\u73b0gnn\u7684\u4e00\u79cd\u901a\u7528\u6846\u67b6\u548c\u7f16\u7a0b\u8303\u5f0f": 748, "\u6d88\u606f\u4f20\u9012\u7684\u5b9a\u4e49\u662f": 754, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [747, 764, 765, 769], "\u6d88\u606f\u4f20\u9012\u9700\u8981\u805a\u96c6\u5176\u90bb\u5c45": 754, "\u6d88\u606f\u51fd\u6570": 749, "\u6d88\u606f\u7684\u5185\u7f6e\u51fd\u6570\u7684\u547d\u540d\u7ea6\u5b9a\u662f": 749, "\u6d88\u606f\u805a\u5408\u548c\u8282\u70b9\u7279\u5f81\u66f4\u65b0": 749, "\u6e38\u620f": 746, "\u6e90": [749, 750], "\u6e90\u4ee3\u7801": 734, "\u6e90\u6587\u4ef6\u4e2d\u7684": 767, "\u6e90\u8282\u70b9": 757, "\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u76f8\u540c": 762, "\u6e90\u8282\u70b9\u7279\u5f81": 762, "\u6e90\u8282\u70b9\u7c7b\u578b": 746, "\u6fc0\u6d3b\u51fd\u6570": 762, "\u70b9\u4e0a\u8ba1\u7b97": 748, "\u7136\u540e": [759, 769], "\u7136\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e9b": 740, "\u7136\u540e\u540c\u6837\u901a\u8fc7\u8c03\u7528": 765, "\u7136\u540e\u5728\u5b50\u56fe\u4e0a\u8c03\u7528": 752, "\u7136\u540e\u5728\u7f51\u7edc\u7684\u7b2c": 753, "\u7136\u540e\u5bf9\u6240\u6709\u6d88\u606f\u6c42\u548c\u6765\u66f4\u65b0\u8282\u70b9\u7279\u5f81": 749, "\u7136\u540e\u5c06\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4e0a\u7684\u6d88\u606f\u805a\u5408\u7ed3\u679c\u518d\u76f8\u52a0": 769, "\u7136\u540e\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u8fb9\u7684": 749, "\u7136\u540e\u5c06\u8be5\u5b50\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 746, "\u7136\u540e\u5e94\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42": 750, "\u7136\u540e\u6839\u636e\u56fe\u7c7b\u578b\u6269\u5c55\u8f93\u5165\u7279\u5f81": 762, "\u7136\u540e\u8bb2\u89e3\u4e86\u5982\u4f55\u9ad8\u6548\u5730\u5728\u70b9\u548c\u8fb9\u4e0a\u4f7f\u7528\u8fd9\u4e9bapi": 748, "\u7136\u800c": 756, "\u7269\u54c1": [740, 741], "\u7279\u5f81": [731, 746], "\u7279\u5f81\u4e0a": 749, "\u7279\u5f81\u4e5f\u5fc5\u987b\u5728gpu\u4e0a": 744, "\u7279\u5f81\u548c\u5212\u5206\u63a9\u7801\u7684\u6807\u51c6\u65b9\u6cd5": 734, "\u7279\u5f81\u548c\u76ee\u6807\u8282\u70b9\u7684": 749, "\u7279\u5f81\u5c3a\u5bf8\u662f7": 767, "\u7279\u5f81\u5f20\u91cf\u4f7f\u7528": 743, "\u7279\u5f81\u6570\u636e\u4e5f\u62f7\u8d1d\u5230\u4e86gpu\u4e0a": 744, "\u7279\u5f81\u6c42\u548c": 749, "\u7279\u6b64\u81f4\u8c22\u4e0b\u8ff0\u8d21\u732e\u8005": 747, "\u72ec\u7acb\u6a21\u5f0f\u8981\u6c42\u8f93\u5165\u56fe\u4ec5\u5177\u6709\u4e00\u4e2a\u5206\u533a": 737, "\u738b\u5efa\u6c11": 747, "\u73a9": 746, "\u751f\u6210\u8fb9\u754c": 754, "\u7528": [736, 745, 760], "\u7528\u4e8e\u5206\u5e03\u5f0f\u56fe\u7684": 737, "\u7528\u4e8e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684": 737, "\u7528\u4e8e\u521d\u59cb\u5316": 737, "\u7528\u4e8e\u5728dgl\u4e2d\u81ea\u5b9a\u4e49\u56fe\u6570\u636e\u96c6\u7684\u6a21\u677f": 731, "\u7528\u4e8e\u5728\u673a\u5668\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1": 739, "\u7528\u4e8e\u5b9a\u4e49\u5f02\u6784\u56fe\u4e0agnn\u6a21\u5757": 763, "\u7528\u4e8e\u5bf9\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u91c7\u6837\u4ee5\u751f\u6210\u5c0f\u6279\u6b21\u8bad\u7ec3\u6570\u636e": 737, "\u7528\u4e8e\u5c06\u56fe\u5206\u533a\u590d\u5236\u5230\u96c6\u7fa4": 739, "\u7528\u4e8e\u6307\u5b9a\u56fe\u7c7b\u578b\u5e76\u5c06": 762, "\u7528\u4e8e\u8bbf\u95ee\u5176\u5143\u6570\u636e": 737, "\u7528\u4e8e\u8bbf\u95ee\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d\u7684\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 737, "\u7528\u4ece0\u5f00\u59cb\u7684\u8fde\u7eed\u6574\u6570\u91cd\u65b0\u6807\u8bb0\u6240\u6709\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 746, "\u7528\u4fdd\u5b58\u7684\u8fb9\u7279\u5f81\u4e0e\u5bf9\u5e94\u8fb9\u7684\u539f\u59cb\u6d88\u606f\u76f8\u4e58": 766, "\u7528\u6237": [740, 741, 746], "\u7528\u6237\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5b83": 749, "\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528mlp": 765, "\u7528\u6237\u4e5f\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a": 765, "\u7528\u6237\u4ec5\u9700\u5bf9\u5355\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u8bad\u7ec3": 736, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 754, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528": 759, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8282\u70b9": 757, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7": 738, "\u7528\u6237\u53ea\u9700\u4f7f\u7528\u65b0\u7684\u8282\u70b9\u548c\u8fb9\u7684id": 738, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 759, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u51fa\u8282\u70b9\u7684\u6807\u7b7e": 759, "\u7528\u6237\u53ea\u9700\u8981\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a": 765, "\u7528\u6237\u53ef\u4ee5\u4ece\u8fd4\u56de\u7684\u5b57\u5178\u4e2d\u63d0\u53d6": 769, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528": [755, 769], "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u50cfpandas\u8fd9\u6837\u7684\u5305\u5148\u5c06csv\u6587\u4ef6\u89e3\u6790\u4e3anumpy\u6570\u7ec4\u6216\u6846\u67b6\u5f20\u91cf": 746, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 749, "\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u52a0\u8f7d\u5668": 754, "\u7528\u6237\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5c06\u8bad\u7ec3\u96c6": 738, "\u7528\u6237\u53ef\u4ee5\u53c2\u7167": 756, "\u7528\u6237\u53ef\u4ee5\u53c2\u8003": [734, 754, 755, 757, 759], "\u7528\u6237\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u5185\u7f6e\u6570\u636e\u96c6": 734, "\u7528\u6237\u53ef\u4ee5\u53ea\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4\u6765\u6307\u5b9a\u8fb9\u7c7b\u578b": 746, "\u7528\u6237\u53ef\u4ee5\u5728": [734, 769], "\u7528\u6237\u53ef\u4ee5\u5728\u5b9e\u4f8b\u5316": 755, "\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u6709\u5173\u6570\u636e\u96c6\u7684\u56fe": 731, "\u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b": 767, "\u7528\u6237\u53ef\u4ee5\u5bf9\u8981\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b\u6784\u9020\u4e00\u4e2a\u8d1f\u91c7\u6837\u56fe": 768, "\u7528\u6237\u53ef\u4ee5\u5c06": 737, "\u7528\u6237\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u6cbf\u6240\u6709\u5165\u8fb9\u4f20\u9012\u6d88\u606f\u7684\u8fb9\u754c": 754, "\u7528\u6237\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u6807\u7b7e\u4f7f\u7528": 765, "\u7528\u6237\u53ef\u4ee5\u5c06\u6743\u91cd\u50a8\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 743, "\u7528\u6237\u53ef\u4ee5\u5c06\u7528\u4e8e\u5757\u7684\u8bed\u53e5\u548c\u539f\u5148\u7528\u4e8e\u6574\u56fe\u7684\u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83": 758, "\u7528\u6237\u53ef\u4ee5\u5c06\u91c7\u6837\u5668\u5bf9\u8c61\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668\u5bf9\u8c61": 754, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u62d3\u5c55\u4e3a\u5bf9\u591a\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 768, "\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u5173\u7cfb\u5207\u7247\u7684\u65b9\u5f0f\u521b\u5efa\u8fd9\u4e2a\u56fe": 765, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u4f7f\u7528": 734, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6a21\u578b\u7684\u8bad\u7ec3": 769, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199\u9884\u6d4b\u6a21\u5757": 765, "\u7528\u6237\u53ef\u4ee5\u6309\u8282\u70b9\u7c7b\u578b\u6765\u83b7\u53d6\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 754, "\u7528\u6237\u53ef\u4ee5\u67e5\u9605": 759, "\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027": 734, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u590d\u7528\u5b83": 755, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 769, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528": 755, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528graphdataload": 767, "\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u7f16\u5199\u5728\u6240\u6709\u8fb9\u4e0a\u8fdb\u884c\u9884\u6d4b\u7684\u5168\u56fe\u8bad\u7ec3\u4ee3\u7801": 765, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": [754, 767], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539nn\u6a21\u5757\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c\u6765\u7ed9nn\u6a21\u5757\u589e\u52a0\u8fb9\u6743\u91cd\u652f\u6301": 766, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u4f20\u5165\u4e24\u4e2agpu\u5f20\u91cf\u6765\u521b\u5efagpu\u4e0a\u7684": 744, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u8981\u4fdd\u7559\u7684\u5173\u7cfb\u6765\u521b\u5efa\u5f02\u6784\u56fe\u7684\u5b50\u56fe": 746, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u8fb9": 757, "\u7528\u6237\u53ef\u4ee5\u904d\u5386\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u83b7\u5f97\u7531\u5c0f\u6279\u6b21\u8fb9\u7ec4\u6210\u7684\u5b50\u56fe": 755, "\u7528\u6237\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528": 768, "\u7528\u6237\u53ef\u4ee5\u91cd\u7528\u5728\u8fb9\u5206\u7c7b": 757, "\u7528\u6237\u53ef\u5c06\u4e00\u7cfb\u5217\u7684\u56fe\u5efa\u7acb\u6210\u4e00\u4e2a\u56fe\u6279\u6b21": 767, "\u7528\u6237\u53ef\u5c06\u5176\u4f20\u7ed9\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a": 767, "\u7528\u6237\u53ef\u5c06\u591a\u5f20\u56fe\u7ec4\u6210\u4e00\u4e2a\u6279\u6b21": 767, "\u7528\u6237\u53ef\u7528\u5982\u4e0b\u4ee3\u7801\u83b7\u53d6": 769, "\u7528\u6237\u53ef\u80fd\u4f1a\u9700\u8981\u6807\u51c6\u5316\u539f\u59cb\u8fb9\u6743\u91cd": 766, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u6cbf\u7740\u6240\u6709\u8fb9\u7c7b\u578b\u4ece\u90bb\u5c45\u90a3\u91cc\u6536\u96c6\u6d88\u606f": 769, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u9884\u6d4b\u7ed9\u5b9a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9": 768, "\u7528\u6237\u53ef\u80fd\u9700\u8981\u5c06\u4e00\u4e9b\u5173\u7cfb\u5408\u5e76": 746, "\u7528\u6237\u5728\u8bad\u7ec3\u8fb9\u5206\u7c7b\u6a21\u578b\u65f6": 755, "\u7528\u6237\u5728\u8c03\u7528dglgraph": 746, "\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 749, "\u7528\u6237\u5c06\u9700\u8981\u4e00\u53f0\u5927\u5185\u5b58\u7684\u673a\u5668\u6765\u5bf9\u56fe\u8fdb\u884c\u5212\u5206": 738, "\u7528\u6237\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b": 767, "\u7528\u6237\u5e0c\u671b\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e94\u7528\u4e0d\u540c\u7684\u64cd\u4f5c": 746, "\u7528\u6237\u5fc5\u987b\u5b9e\u73b0": 734, "\u7528\u6237\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5757": 759, "\u7528\u6237\u6307\u5357\u5c06\u4ee5\u5185\u7f6e\u6570\u636e\u96c6\u4e3a\u4f8b": 734, "\u7528\u6237\u6700\u597d\u4f7f\u7528": 745, "\u7528\u6237\u6709\u65f6\u4f1a\u5e0c\u671b\u4ece\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u56fe\u4e2d\u5220\u53bb\u90e8\u5206\u8fb9\u53ca\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9": 755, "\u7528\u6237\u7684\u4efb\u52a1\u662f\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 765, "\u7528\u6237\u81ea\u5df1\u7684\u8bad\u7ec3\u4ee3\u7801": 734, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5411\u7c7b\u6dfb\u52a0\u5c5e\u6027\u4ee5\u6307\u793a\u4e00\u4e9b\u6709\u7528\u7684\u6570\u636e\u96c6\u4fe1\u606f": 734, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5c06\u65b0\u7684": 737, "\u7528\u6237\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u552f\u4e00\u7684\u5f20\u91cf\u540d\u79f0": 737, "\u7528\u6237\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 757, "\u7528\u6237\u8fd8\u5fc5\u987b\u5c06gnn\u7684\u5c42\u6570\u4f20\u9012\u7ed9\u7236\u7c7b": 754, "\u7528\u6237\u8fd8\u662f\u5728\u8282\u70b9\u6216\u8fb9\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 767, "\u7528\u6237\u8fd8\u9700\u8981\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5206\u5272\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 737, "\u7528\u6237\u9664\u4e86\u9700\u8981\u4f7f\u7528\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 767, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u6307\u5b9a\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf": 739, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u6761\u8fb9\u90fd\u521b\u5efa\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9": 745, "\u7528\u6237\u9700\u8981\u4ece\u6a21\u578b\u4e2d\u6536\u96c6\u6240\u6709\u5206\u5e03\u5f0f\u5d4c\u5165": 737, "\u7528\u6237\u9700\u8981\u5206\u5272\u8bad\u7ec3\u96c6": 737, "\u7528\u6237\u9700\u8981\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 757, "\u7528\u6237\u9700\u8981\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u53e6\u5916\u4e00\u4e2a\u56fe": 768, "\u7528\u6237\u9700\u8981\u63d0\u4f9b\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 737, "\u7528\u6237\u9700\u8981\u660e\u786e\u5730\u6307\u660e\u8282\u70b9\u7684\u6570\u91cf": 745, "\u7528\u6237\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8fb9\u5206\u7c7b": 765, "\u7528\u6237\u9996\u5148\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u7684\u7ef4\u5ea6": 761, "\u7528\u6765\u6307\u5b9a\u4e0d\u540c\u8bad\u7ec3\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u6240\u4f7f\u7528\u7684\u7aef\u53e3": 739, "\u7528\u8be5\u6a21\u5757\u8fdb\u884c\u79bb\u7ebf\u63a8\u65ad": 756, "\u7528\u8fb9\u4e24\u7aef\u8282\u70b9\u8868\u793a\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u6253\u5206": 755, "\u7531gpu\u5f20\u91cf\u6784\u9020\u7684\u56fe\u4e5f\u5728gpu\u4e0a": 744, "\u7531\u4e8etensor\u7c7b\u5185\u90e8\u4f7f\u7528c\u6765\u5b58\u50a8": 745, "\u7531\u4e8e\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\u5c06\u539f\u6765\u7684\u8fb9\u7c7b\u578b\u5b58\u6210\u8fb9\u7279\u5f81": 765, "\u7531\u4e8e\u6574\u56fe\u5206\u7c7b\u5904\u7406\u7684\u662f\u5f88\u591a\u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe": 767, "\u7531\u4e8e\u66f4\u65b0\u51fd\u6570\u901a\u5e38\u53ef\u4ee5\u7528\u7eaf\u5f20\u91cf\u64cd\u4f5c\u5b9e\u73b0": 749, "\u7531\u4e8e\u8fd9\u91cc\u7684\u5173\u7cfb\u5b9a\u4e49\u6d88\u9664\u4e86\u8fb9\u7c7b\u578b\u7684\u6b67\u4e49": 746, "\u7531\u591a\u5c42gnn\u8ba1\u7b97\u5f97\u51fa": 768, "\u7684": [745, 753], "\u7684api\u4ee5\u65b9\u4fbf\u6570\u636e\u8bbf\u95ee": 737, "\u7684api\u7528\u4e8e\u6b64\u4f18\u5316": 734, "\u7684nn\u6a21\u5757": 763, "\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u6240\u4e0d\u540c": 755, "\u7684\u5177\u4f53\u5b9a\u4e49": 769, "\u7684\u5178\u578b\u793a\u4f8b\u5982\u4e0b": 739, "\u7684\u5185\u5b58\u7a7a\u95f4": 753, "\u7684\u51fd\u6570\u662f": 762, "\u7684\u5212\u5206": 738, "\u7684\u5212\u5206\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba1\u7b97\u8d1f\u8f7d\u4e0d\u5e73\u8861": 738, "\u7684\u521b\u5efa\u662f\u4e00\u4e2a\u540c\u6b65\u64cd\u4f5c": 737, "\u7684\u521b\u5efa\u9700\u8981": 737, "\u7684\u524d\u9a71\u8282\u70b9": 754, "\u7684\u539f\u5219": 743, "\u7684\u53c2\u6570": 751, "\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6d88\u606f\u51fd\u6570": 749, "\u7684\u56fe\u540d\u79f0\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570": 738, "\u7684\u5b50\u7c7b": [730, 734], "\u7684\u5b9e\u4f8b": 749, "\u7684\u5b9e\u73b0\u4e5f\u53d1\u751f\u4e86\u53d8\u5316": 734, "\u7684\u5b9e\u73b0\u4f1a\u5305\u542b\u4e24\u4e2a\u5b57\u5178": 759, "\u7684\u5b9e\u73b0\u5982\u4e0b": 754, "\u7684\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206": 750, "\u7684\u5f02\u6784\u56fe": 746, "\u7684\u5f20\u91cf": 766, "\u7684\u5f97\u5206\u6765\u8bad\u7ec3\u94fe\u8def\u6a21\u578b": 757, "\u7684\u6210\u5458\u5c5e\u6027": 749, "\u7684\u6240\u6709\u5165\u8fb9": 754, "\u7684\u6559\u7a0b": 742, "\u7684\u6570\u636e": 764, "\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c": 736, "\u7684\u6d88\u606f": 754, "\u7684\u7236\u7c7b": 754, "\u7684\u7279\u5f81": [740, 743, 767, 769], "\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u4e14\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5bfc\u5165\u56fe\u6570\u636e": 731, "\u7684\u793a\u4f8b": 763, "\u7684\u7b80\u5316\u7248": 758, "\u7684\u805a\u5408\u7ed3\u679c\u8fdb\u884c\u64cd\u4f5c": 749, "\u7684\u8282\u70b9": 741, "\u7684\u8282\u70b9\u5d4c\u5165": 769, "\u7684\u8282\u70b9\u7279\u5f81": 754, "\u7684\u8282\u70b9\u8868\u793a": 768, "\u7684\u8282\u70b9\u8868\u793a\u6a21\u5757\u79f0\u4f5c": 765, "\u7684\u8868\u5f81": 767, "\u7684\u8868\u793a\u6240\u9700\u7684\u8282\u70b9": 759, "\u7684\u8ba1\u7b97": 767, "\u7684\u8bba\u6587\u4e2d": 754, "\u7684\u8be6\u7ec6\u4fe1\u606f": 734, "\u7684\u8bed\u6cd5\u4e0e\u5e38\u89c4\u56fe\u4e2d\u7684": 754, "\u7684\u8bed\u6cd5\u5c06\u53ea\u5305\u542b\u8be5\u5173\u7cfb\u7684\u5b50\u56fe": 763, "\u7684\u8f93\u51fa": 754, "\u7684\u8f93\u51fa\u5f20\u91cf\u7684\u5217\u8868": 763, "\u7684\u8fb9": [745, 768], "\u7684\u8fb9\u4e92\u76f8\u8fde\u63a5": 741, "\u7684\u8fb9\u603b\u662f\u6709\u5411\u7684": 742, "\u7684\u8fb9\u7684\u6807\u7b7e": 765, "\u7684\u8fb9\u7c7b\u578b": 765, "\u7684\u90e8\u5206": 734, "\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u5411\u540e\u8fed\u4ee3": 754, "\u76ee\u524d": 737, "\u76ee\u5f55\u4e2d": 734, "\u76ee\u6807": [749, 750], "\u76ee\u6807\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 749, "\u76ee\u6807\u8282\u70b9\u6570\u7ec4\u5bf9\u4e3a\u503c\u7684\u5b57\u5178": 757, "\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 746, "\u76f4\u5230\u5230\u8fbe\u8f93\u5165\u5c42": 753, "\u76f4\u5230\u8bad\u7ec3\u4efb\u52a1\u7ed3\u675f": 737, "\u76f8\u4e58\u751f\u6210\u6d88\u606f": 749, "\u76f8\u5173api": [742, 743, 745, 746], "\u76f8\u5173\u6982\u8ff0\u8bf7\u9605\u8bfbapi\u53c2\u8003\u624b\u518c": 742, "\u76f8\u5173\u7684\u6838\u5fc3\u6982\u5ff5": 740, "\u76f8\u5173\u7684\u7279\u5f81\u4e5f\u4f1a\u88ab\u62f7\u8d1d": 746, "\u76f8\u540c": [754, 763], "\u76f8\u540c\u540d\u79f0\u7684\u7279\u5f81\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b": 743, "\u76f8\u5bf9\u5730": 741, "\u76f8\u6bd4\u4e4b\u4e0b": 756, "\u76f8\u6bd4\u540c\u6784\u56fe": 746, "\u77e5\u9053": 755, "\u786e\u5b9a": 762, "\u793a\u4f8b\u5982\u4e0b\u6240\u793a": 757, "\u793e\u4ea4\u7f51\u7edc\u7684\u56fe\u7531\u8868\u793a\u540c\u4e00\u5b9e\u4f53\u7c7b\u578b\u7684\u4eba\u53ca\u5176\u76f8\u4e92\u4e4b\u95f4\u7684\u793e\u4ea4\u5173\u7cfb\u7ec4\u6210": 741, "\u79cd\u5b50\u8282\u70b9": 754, "\u79f0\u4e3a": 731, "\u79f0\u4e3a\u70b9id": 745, "\u79f0\u4e3a\u8fb9id": 745, "\u7ae0\u8282": 747, "\u7ae0\u8282\u4e2d\u4e5f\u4f1a\u63d0\u5230": 754, "\u7b2c1\u7ae0": 747, "\u7b2c2\u4e2a\u5143\u7d20\u4e3a\u76ee\u6807\u8282\u70b9\u7279\u5f81": 762, "\u7b2c2\u7ae0": [747, 764, 765, 769], "\u7b2c3\u7ae0": [747, 758, 764, 769], "\u7b2c4\u7ae0": [747, 764, 767, 769], "\u7b2c5\u7ae0": [747, 753], "\u7b2c6\u7ae0": [747, 752, 762, 764], "\u7b2c7\u7ae0": 747, "\u7b2c\u4e00\u90e8\u5206\u4e0e": 755, "\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8f93\u51fa\u8282\u70b9": 754, "\u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u8fb9\u4e0a\u7684\u9884\u6d4b\u503c": 765, "\u7b2c\u4e8c\u90e8\u5206\u7684\u8f93\u5165\u901a\u5e38\u662f\u524d\u4e00\u90e8\u5206\u7684\u8f93\u51fa": 755, "\u7b49": [749, 761], "\u7b49conv\u6a21\u5757\u4e2d": 762, "\u7b49\u4ef7\u4e8e\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u63a5\u6536\u5230\u6d88\u606f\u6c42\u548c\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 749, "\u7ba1\u7406\u5728\u591a\u4e2a\u8ba1\u7b97\u673a\u4e2d\u88ab\u5212\u5206\u548c\u5b58\u50a8\u7684\u5bc6\u96c6\u5f20\u91cf": 737, "\u7c7b": 732, "\u7c7b\u4e2d\u4e0b\u8f7d\u4e00\u4e2a": 732, "\u7c7b\u4e2d\u770b\u5230\u6a21\u578b\u5b9e\u73b0\u7684\u7ec6\u8282": 769, "\u7c7b\u4f3c": 736, "\u7c7b\u548c": 759, "\u7c7b\u578b\u7684\u8282\u70b9\u4e5f\u4f1a\u88ab\u4fdd\u7559": 746, "\u7c7b\u578b\u7684\u8282\u70b9\u7684": 746, "\u7c7b\u578b\u7684\u8fb9\u7684": 746, "\u7c7b\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u6570\u636e\u5904\u7406\u7ba1\u9053": 730, "\u7c7b\u6709\u62bd\u8c61\u51fd\u6570": 731, "\u7c7b\u8fdb\u884c\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 759, "\u7ea2\u8272\u70b9": 754, "\u7ec6\u8282\u5185\u5bb9\u53ef\u4ee5\u5728\u4e0b\u9762\u7684disttensor\u548cdistembedding\u7ae0\u8282\u91cc\u67e5\u770b": 737, "\u7ed3\u5408\u4e86\u8282\u70b9\u8868\u793a\u6a21\u5757\u548c\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u6a21\u578b\u5982\u4e0b\u6240\u793a": 765, "\u7ed3\u5408\u4f7f\u7528": [755, 759], "\u7ed9\u5b9agnn\u5c42": 754, "\u7ed9\u5b9a\u4e00\u5f20\u56fe": 767, "\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 768, "\u7ed9\u5b9a\u8ba1\u7b97\u8282\u70b9\u548c\u8fb9\u4e0a\u8868\u793a\u7684\u6a21\u578b\u540e": 765, "\u7ed9\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u7f16\u53f7": 745, "\u7ef4\u5ea6\u901a\u5e38\u5305\u62ec\u8f93\u5165\u7684\u7ef4\u5ea6": 761, "\u7eff\u8272\u548c\u7ea2\u8272\u8282\u70b9": 754, "\u7eff\u8272\u70b9": 754, "\u7eff\u8272\u8282\u70b9": 754, "\u7f13\u5b58\u6982\u7387\u5206\u5e03": 757, "\u7f16\u5199dgl": [747, 760], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [747, 748, 762], "\u7f16\u7801\u5e02\u573a\u7684\u56fe\u53ef\u4ee5\u6709\u8868\u793a": 741, "\u8003\u8651\u4ee5\u4e0b\u57fa\u4e8edgl\u7684\u6d88\u606f\u4f20\u9012\u793a\u4f8b": 766, "\u8003\u8651\u4ee5\u4e0b\u8fb9\u754c": 754, "\u8003\u8651\u5230\u67d0\u4e9b\u56fe\u8fb9\u7684\u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u8282\u70b9\u7684\u6570\u91cf": 750, "\u8003\u8651\u5728\u4e00\u4e2a\u6709": 753, "\u800c": 742, "\u800c\u4e0d\u662f": 755, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7279\u5f81\u5f20\u91cf": 758, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5927\u56fe": 767, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u6807\u7b7e": 759, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81": 759, "\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u5927\u56fe\u6570\u636e": 767, "\u800c\u4e0d\u662f\u5e95\u5c42\u6846\u67b6\u91cc\u7684\u5f20\u91cf": 737, "\u800c\u4e0d\u662f\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u5f20\u91cf\u7684\u5b57\u5178": [755, 757], "\u800c\u4e14\u4e24\u79cd\u8282\u70b9\u5177\u6709\u4e0d\u540c\u7684\u7279\u5f81": 746, "\u800c\u4ee5\u4e0b\u7528\u6237\u5b9a\u4e49\u6d88\u606f\u51fd\u6570\u4e0e\u6b64\u5185\u7f6e\u51fd\u6570\u7b49\u4ef7": 749, "\u800c\u540e\u8005\u5219\u6807\u8bc6dgl\u670d\u52a1\u5668\u4e2d\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 737, "\u800c\u5728cpu\u4e0a\u8fdb\u884c\u5219\u8ba1\u7b97\u901f\u5ea6\u5f88\u6162": 756, "\u800c\u65e0\u9700\u8bbe\u8ba1\u590d\u6742\u7684\u56fe\u91c7\u6837\u7b97\u6cd5": 767, "\u800c\u662f\u5728": 749, "\u800c\u7ebf\u6027\u5c42\u8f93\u51fa\u7ef4\u6570\u8f83\u4f4e": 750, "\u800c\u975e4\u6761": 742, "\u805a\u5408\u51fd\u6570": [748, 749], "\u805a\u5408\u51fd\u6570\u6765\u5b9e\u73b0": 762, "\u805a\u5408\u51fd\u6570\u901a\u5e38\u6709\u4e24\u4e2a\u53c2\u6570": 749, "\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u4e0a\u7684\u7ed3\u679c": 763, "\u805a\u5408\u7c7b\u578b": 761, "\u805a\u5408\u7c7b\u578b\u51b3\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u4e0d\u540c\u8fb9\u4e0a\u7684\u4fe1\u606f": 761, "\u80e1\u9a8f": 747, "\u8282\u70b9": [740, 749], "\u8282\u70b92": 754, "\u8282\u70b93": 754, "\u8282\u70b93\u662f\u4e00\u4e2a\u5b64\u7acb\u8282\u70b9": 754, "\u8282\u70b98": 754, "\u8282\u70b9\u5206\u7c7b": [734, 747, 764], "\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b": 734, "\u8282\u70b9\u5206\u7c7b\u7684rgcn\u6a21\u578b": 765, "\u8282\u70b9\u5206\u7c7b\u901a\u5e38\u5728\u5355\u4e2a\u56fe\u4e0a\u8fdb\u884c": 734, "\u8282\u70b9\u548c": [750, 765], "\u8282\u70b9\u548c\u8fb9": [740, 747], "\u8282\u70b9\u548c\u8fb9id\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4": 745, "\u8282\u70b9\u548c\u8fb9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u6784\u5efa\u7684": 745, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [740, 747], "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0": 743, "\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684": 741, "\u8282\u70b9\u56de\u5f52\u4efb\u52a1\u4e5f\u7c7b\u4f3c": 769, "\u8282\u70b9\u5f20\u91cf": 745, "\u8282\u70b9\u6570\u636e\u540d\u79f0\u548c\u5f20\u91cf\u540d\u79f0\u4e0d\u5fc5\u76f8\u540c": 737, "\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 737, "\u8282\u70b9\u6807\u7b7e\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u5668\u4e2d": 759, "\u8282\u70b9\u7279\u5f81": 750, "\u8282\u70b9\u7279\u5f81\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u4e2d": 759, "\u8282\u70b9\u7279\u5f81\u548c\u6807\u7b7e\u5b58\u50a8\u5728\u5176\u56fe\u4e0a": 769, "\u8282\u70b9\u7279\u5f81\u548c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u5b58\u50a8\u5728": 734, "\u8282\u70b9\u7279\u5f81\u7ef4\u6570\u8f83\u9ad8": 750, "\u8282\u70b9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u7684": 746, "\u8282\u70b9\u7684\u6807\u7b7e": 734, "\u8282\u70b9\u7684\u7279\u5f81": 734, "\u8282\u70b9\u7684\u7c7b\u522b": 769, "\u8282\u70b9\u7684\u8fb9": 765, "\u8282\u70b9\u7c7b\u578b": 734, "\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7ed3\u679c": 759, "\u8282\u70b9\u8868\u793a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6": 768, "\u82e5\u7528\u56fe\u5bf9twitter\u7528\u6237\u7684\u5173\u6ce8\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21": 741, "\u82e5\u7528\u56fe\u5bf9\u793e\u4ea4\u7f51\u7edc\u4e2d\u4eba\u4eec\u7684\u53cb\u8c0a\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21": 741, "\u83ab\u4f73\u5e05\u5b50": 747, "\u83b7\u53d6": [746, 754], "\u83b7\u53d6drug\u8282\u70b9\u7684\u6570\u91cf": 746, "\u83b7\u53d6\u5212\u5206\u7684\u63a9\u7801": 734, "\u83b7\u53d6\u5212\u5206\u7684\u6807\u7b7e": 733, "\u83b7\u53d6\u5355\u4e00\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81": 746, "\u83b7\u53d6\u539f\u59cbid": 738, "\u83b7\u53d6\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u91cf": 746, "\u83b7\u53d6\u6807\u7b7e": 734, "\u83b7\u53d6\u7279\u5b9a\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u7684\u7279\u5f81": 746, "\u83b7\u53d6\u79cd": 754, "\u83b7\u53d6\u805a\u5408\u51fd\u6570\u7684\u5185\u90e8\u51fd\u6570": 763, "\u83b7\u53d6\u8282\u70b91\u7684\u7279\u5f81": 743, "\u83b7\u53d6\u8282\u70b9\u7279\u5f81": 734, "\u83b7\u53d6\u8282\u70b9\u7684id": 745, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u8fb9\u7c7b\u578b": 734, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u63a9\u7801": 734, "\u83b7\u53d6\u8fb90\u548c3\u7684\u7279\u5f81": 743, "\u83b7\u53d6\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 755, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9": 745, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9\u548c\u8fb9id": 745, "\u83b7\u5f97": 758, "\u867d\u7136dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u90bb\u5c45\u91c7\u6837\u5668": 754, "\u867d\u7136\u4e0a\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u8fb9\u754c": 754, "\u867d\u7136\u8fd9\u4e24\u4e2a\u6a21\u5757\u90fd\u6bd4\u4e0a\u8ff0\u7684\u793a\u4f8b\u4ee3\u7801\u8981\u590d\u6742": 765, "\u884c\u4f18\u5148": 743, "\u8868\u660e\u4e24\u8282\u70b9\u95f4\u5b58\u5728\u5173\u7cfb": 741, "\u8868\u793a": 749, "\u8868\u793a\u5728\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u5b58\u5728\u4ece": 746, "\u8868\u793a\u5b83\u662f\u4ece\u8282\u70b9": 745, "\u8868\u793a\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u8ba1\u7b97\u7ed3\u679c": 763, "\u88ab\u4e70\u4e0b": 755, "\u88ab\u5173\u6ce8": 755, "\u88ab\u805a\u5408\u7684\u7279\u5f81\u5c06\u4f1a\u4e0e\u8282\u70b9\u7684\u521d\u59cb\u7279\u5f81\u62fc\u63a5\u8d77\u6765": 762, "\u8981\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u91c7\u6837\u5668": 759, "\u8981\u5bf9\u6e90\u8282\u70b9\u7684": 749, "\u8981\u5c06\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u5165": 759, "\u8981\u6267\u884c\u8d1f\u91c7\u6837": 768, "\u8981\u67e5\u627e\u7ed9\u5b9a\u8282\u70b9\u7c7b\u578b\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u6570\u91cf": 754, "\u8981\u805a\u5408\u7684\u7279\u5f81\u5927\u5c0f\u4e3a": 767, "\u8981\u8ba1\u7b97": 754, "\u89c11": 740, "\u8ba1\u7b97": [754, 768], "\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u94fe\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 768, "\u8ba1\u7b97\u5e94\u7528\u4e8e\u7ed9\u5b9a\u7684\u4e00\u5806\u76ee\u6807\u8282\u70b9\u6240\u91c7\u6837\u7684\u5b50\u56fe": 762, "\u8ba1\u7b97\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 757, "\u8ba1\u7b97\u5fc5\u987b\u5728\u8fb9\u4e0a\u4fdd\u5b58\u6d88\u606f": 750, "\u8ba1\u7b97\u635f\u5931\u503c": 769, "\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u63a5\u53d7\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7684\u4e24\u4e2a\u5b57\u5178": 755, "\u8ba1\u7b97\u635f\u5931\u5e76\u53cd\u5411\u4f20\u64ad": 759, "\u8ba1\u7b97\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 755, "\u8ba1\u7b97\u8f93\u51fa": 756, "\u8ba1\u7b97\u8fb9\u5b50\u56fe\u4e2d\u8fb9\u7684\u5f97\u5206": 755, "\u8ba1\u7b97\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u5ea6": 769, "\u8bad\u7ec3": [734, 747, 752, 762, 764, 769], "\u8bad\u7ec3\u4e00\u4e2a\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u6d89\u53ca\u5230\u6bd4\u5bf9\u4e24\u4e2a\u76f8\u8fde\u63a5\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u4e0e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u7684\u5dee\u5f02": 768, "\u8bad\u7ec3\u4e0b\u6e38\u4efb\u52a1\u7684\u5206\u7c7b\u5668": 768, "\u8bad\u7ec3\u540e": 768, "\u8bad\u7ec3\u5668": 736, "\u8bad\u7ec3\u5668\u4f1a\u5bf9\u5c40\u90e8\u5206\u533a\u4e2d\u5e26\u6807\u7b7e\u8282\u70b9\u7684\u5b50\u96c6\u8fdb\u884c\u8ba1\u7b97": 738, "\u8bad\u7ec3\u5668\u8fdb\u7a0b": 736, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [747, 753], "\u8bad\u7ec3\u5faa\u73af\u901a\u8fc7\u6570\u636e\u52a0\u8f7d\u5668\u53bb\u904d\u5386\u6570\u636e": 757, "\u8bad\u7ec3\u6548\u7387\u4f1a\u5f88\u4f4e": 767, "\u8bad\u7ec3\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357\u53ef\u4ee5\u5728": 734, "\u8bad\u7ec3\u6a21\u578b": 759, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u548c\u540c\u6784\u56fe\u65f6\u4e00\u81f4": 768, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u91cc\u4f1a\u91cd\u590d\u6784\u5efa\u8d1f\u91c7\u6837\u56fe\u5e76\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u503c": 768, "\u8bad\u7ec3\u7b97\u6cd5\u6709\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 756, "\u8bad\u7ec3\u811a\u672c": 739, "\u8bad\u7ec3\u8fc7\u7a0b\u5305\u62ec\u904d\u5386dataloader\u548c\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u90e8\u5206": 767, "\u8bad\u7ec3\u90e8\u5206\u548c\u540c\u6784\u56fe\u7684\u8bad\u7ec3\u57fa\u672c\u4e00\u81f4": 765, "\u8bad\u7ec3\u90e8\u5206\u5982\u4e0b\u6240\u793a": 765, "\u8bb0\u4e3a": 741, "\u8bb0\u4f5c": 768, "\u8bb2\u89e3\u4e86\u5982\u4f55\u5bf9\u5c0f\u89c4\u6a21\u7684\u56fe\u6570\u636e\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 764, "\u8bb8\u591a\u573a\u666f\u4e2d\u7684\u56fe\u6570\u636e\u662f\u7531\u591a\u4e2a\u56fe\u7ec4\u6210": 767, "\u8bb8\u591a\u635f\u5931\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807": 768, "\u8bb8\u591a\u77e5\u540dpython\u5e93": 742, "\u8bbe\u7f6e": 746, "\u8bbe\u7f6e\u9009\u9879": 761, "\u8bbf\u95ee\u5176\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 754, "\u8bbf\u95ee\u8be5\u5757\u7684\u8f93\u5165\u8282\u70b9\u7279\u5f81": 754, "\u8be5api\u4f1a\u76f8\u5e94\u5730\u6253\u4e71\u6240\u6709\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 738, "\u8be5api\u652f\u6301\u968f\u673a\u5212\u5206\u548c\u4e00\u4e2a\u57fa\u4e8e": 738, "\u8be5pytorch\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u6279\u7684\u5f62\u5f0f\u8fed\u4ee3\u8bad\u7ec3\u8fb9id\u7684\u6570\u7ec4": 755, "\u8be5\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\u5b9e\u73b0": 758, "\u8be5\u4f8b\u5b50\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u5355\u4e2a\u8282\u70b9": 754, "\u8be5\u4f8b\u5b50\u91cc\u7701\u7565\u4e86\u8bad\u7ec3\u65e9\u505c\u548c\u6a21\u578b\u4fdd\u5b58\u90e8\u5206\u7684\u4ee3\u7801": 765, "\u8be5\u505a\u6cd5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c": 750, "\u8be5\u51fd\u6570\u5047\u5b9a\u539f\u59cb\u6570\u636e\u5df2\u7ecf\u4f4d\u4e8e": 734, "\u8be5\u51fd\u6570\u7684\u7ec6\u8282\u5982\u4e0b\u6240\u793a": 762, "\u8be5\u540d\u79f0\u4ecd\u5b58\u5728\u4e8e\u7fa4\u96c6\u4e2d": 737, "\u8be5\u56fe\u5177\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 746, "\u8be5\u5b50\u56fe\u5305\u62ec\u521d\u59cb\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u548c\u6307\u5b9a\u8282\u70b9\u7684\u5165\u8fb9": 754, "\u8be5\u5f20\u91cf\u7684\u7b2c\u4e00\u7ef4\u5fc5\u987b\u4e0e\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u6570\u91cf\u4e00\u81f4": 743, "\u8be5\u6587\u4ef6\u5305\u542b\u672c\u5730\u8ba1\u7b97\u673a\u4e2d\u5206\u533a\u6570\u636e\u7684\u4fe1\u606f": 739, "\u8be5\u65b9\u6cd5\u80fd\u8282\u7701\u5728\u5927\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u9500\u548c\u8ba1\u7b97\u8d44\u6e90": 753, "\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4e3a\u5b83\u4eec\u751f\u6210\u8fb9\u754c": 754, "\u8be5\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u957f\u5ea6\u6216\u8fde\u63a5\u7684\u5f3a\u5ea6": 741, "\u8be5\u6a21\u578b\u4e0e\u5f02\u6784\u56fe\u4e0a\u8fb9\u5206\u7c7b\u7684\u6a21\u578b\u6709\u4e9b\u4e0d\u540c": 768, "\u8be5\u6a21\u578b\u7684\u8f93\u5165\u5305\u62ec\u4e0a\u8ff0\u4e09\u9879\u4ee5\u53ca\u8f93\u5165\u7684\u7279\u5f81": 757, "\u8be5\u7c7b\u4e3a\u5bfc\u5165": 730, "\u8be5\u811a\u672c\u5305\u542b\u56db\u4e2a\u53c2\u6570": 739, "\u8be5\u811a\u672c\u6709\u4ee5\u4e0b\u5047\u8bbe": 739, "\u8be5\u8fb9\u7c7b\u578b\u662f\u901a\u8fc7\u5408\u5e76\u6240\u6709\u4ece": 765, "\u8be5\u91c7\u6837\u65b9\u6cd5\u6839\u636e\u4e0e\u8282\u70b9\u7684\u5ea6\u7684\u5e42\u6210\u6b63\u6bd4\u7684\u6982\u7387\u5206\u5e03\u5bf9\u8d1f\u6837\u672c\u76ee\u6807\u8282\u70b9\u8fdb\u884c\u91c7\u6837": 757, "\u8be6\u7ec6\u7684\u5b9e\u73b0\u8bf7\u53c2\u8003": 734, "\u8be6\u7ec6\u89e3\u91ca": 738, "\u8bf4\u660e\u805a\u5408\u662f\u9010\u7c7b\u8fdb\u884c\u7684": 751, "\u8bf7\u4f7f\u7528": 732, "\u8bf7\u53c2\u8003": [734, 755, 769], "\u8bf7\u53c2\u8003dgl\u7684\u5185\u7f6e\u6570\u636e\u96c6": 734, "\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357\u7684": 764, "\u8bf7\u53c2\u89c1": [734, 738, 749], "\u8bf7\u53c2\u89c1\u542f\u52a8\u811a\u672c\u90e8\u5206": 737, "\u8bf7\u53c2\u9605": 731, "\u8bf7\u53c2\u9605\u4e0b\u6587\u91cc\u5206\u5e03\u5f0f\u56fe\u91c7\u6837\u90e8\u5206": 737, "\u8bf7\u53c2\u9605\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u7ae0\u8282": 737, "\u8bf7\u6ce8\u610f": [731, 734, 735, 736, 754, 759, 762, 769], "\u8bf7\u786e\u4fdd\u4f7f\u7528\u4e0e\u539f\u59cb\u6587\u4ef6\u540d\u76f8\u540c\u7684\u540e\u7f00": 732, "\u8bf7\u786e\u4fdd\u5b83\u88ab\u5b58\u653e\u5728\u76ee\u5f55": 732, "\u8bf8\u5982\u91c7\u6837": 731, "\u8bfb\u51fa": 767, "\u8bfb\u51fa\u51fd\u6570\u4f1a\u5206\u522b\u4f5c\u7528\u5728\u56fe\u6279\u6b21\u4e2d\u7684\u6bcf\u5f20\u56fe\u4e0a": 767, "\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528networkx\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u89e3\u6790": 742, "\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003": [759, 769], "\u8bfb\u8005\u53ef\u4ee5\u5728api\u6587\u6863\u4e2d\u627e\u5230": 763, "\u8bfb\u8005\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53c2\u8003": 765, "\u8bfb\u8005\u53ef\u53c2\u8003": [741, 745], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": 756, "\u8c03\u7528\u540e": 749, "\u8c03\u7528\u6b64api": 737, "\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u635f\u5931": 768, "\u8d1f\u6837\u672c": 757, "\u8d1f\u8d23\u4f7f\u7528": 754, "\u8d1f\u8d23\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684": 739, "\u8d1f\u91c7\u6837": 768, "\u8d2d\u4e70": 755, "\u8d4b\u503c": 765, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [747, 753], "\u8df3\u8fc7\u4e00\u4e9b\u5904\u7406\u7684\u4ee3\u7801": 734, "\u8df3\u8fc7\u6570\u636e\u5904\u7406": 734, "\u8f6c\u6362\u6210int32": 745, "\u8f6c\u6362\u6210int64": 745, "\u8f7d\u5165ogb\u7684graph": 733, "\u8f7d\u5165ogb\u7684link": 733, "\u8f7d\u5165ogb\u7684nod": 733, "\u8f7d\u5165\u6570\u636e\u96c6": 733, "\u8f83\u5927\u65f6": 753, "\u8f93\u5165": 763, "\u8f93\u5165\u4ecd\u7136\u662fdgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868\u548c\u8f93\u5165\u7279\u5f81": 755, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81": 769, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81\u5b57\u5178": 769, "\u8f93\u5165\u7279\u5f81\u5c06\u88ab\u7ec4\u7ec7\u4e3a\u5143\u7ec4": 763, "\u8f93\u5165\u7684user\u548cgame\u8282\u70b9": 754, "\u8f93\u5165\u7ef4\u5ea6\u53ef\u88ab\u5206\u4e3a\u6e90\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6": 761, "\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u5c06\u540c\u65f6\u5305\u542b\u8fd9\u4e9b\u5b64\u7acb\u8282\u70b9": 754, "\u8f93\u5165\u8fd8\u53ef\u4ee5\u5305\u62ec\u8fb9\u81ea\u8eab\u7684\u7279\u5f81": 765, "\u8f93\u51fa\u7684user\u548cgame\u8282\u70b9": 754, "\u8f93\u51fa\u7684\u7ef4\u5ea6\u548c\u9690\u5c42\u7684\u7ef4\u5ea6": 761, "\u8f93\u51fa\u76ee\u5f55\u91cc\u59cb\u7ec8\u5305\u542b\u4e00\u4e2a\u540d\u4e3axxx": 738, "\u8f93\u51fa\u8282\u70b9": 754, "\u8f93\u51fa\u8282\u70b9\u4e5f\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 754, "\u8f93\u51fa\u8282\u70b9\u53ef\u4ee5\u6bd4\u4ee5\u4e0a\u8282\u70b9\u5305\u542b\u66f4\u591a\u8282\u70b9": 754, "\u8f93\u51fa\u8282\u70b9\u7684id\u4f4d\u4e8e\u5176\u5b83\u8282\u70b9\u4e4b\u524d": 754, "\u8fb9": [734, 738, 740, 741, 743, 745, 748, 749], "\u8fb9\u4e0a\u8ba1\u7b97": 748, "\u8fb9\u5206\u7c7b": [747, 755, 764, 768, 769], "\u8fb9\u5206\u7c7b\u4e2d\u76f8\u540c\u7684\u90bb\u5c45\u91c7\u6837\u5668": 757, "\u8fb9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u7684\u8bad\u7ec3": 764, "\u8fb9\u5206\u7c7b\u6a21\u578b\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210": 755, "\u8fb9\u53ca\u5176\u7279\u5f81": 742, "\u8fb9\u5b50\u56fe\u4ee5\u53ca\u8f93\u5165\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad": 755, "\u8fb9\u6743\u91cd\u53ef\u4ee5\u662f\u8fde\u63a5\u5f3a\u5ea6\u6216\u8005\u4fe1\u5fc3\u6307\u6570": 766, "\u8fb9\u6743\u91cd\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a": 766, "\u8fb9\u7279\u5f81": [736, 737], "\u8fb9\u7279\u5f81\u548c\u56fe\u91c7\u6837": 737, "\u8fb9\u754c\u5b50\u56fe": 754, "\u8fb9\u7684id\u4f4d\u4e8e\u90bb\u8fd1\u533a\u95f4\u5185": 734, "\u8fb9\u7684\u7279\u5f81\u6570\u636e": 764, "\u8fb9\u7684\u90bb\u5c45\u7684\u5c40\u90e8\u6027": 734, "\u8fb9\u7c7b\u578b": [734, 746], "\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u79f0\u4f5c": 765, "\u8fb9\u7c7b\u578b\u9884\u6d4b\u7684\u7b2c\u4e00\u6b65\u4ecd\u7136\u662f\u8ba1\u7b97\u8282\u70b9\u8868\u793a": 765, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": [736, 747], "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u56fe\u4f5c\u4e3a\u8fb9\u754c": 754, "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u8fb9\u754c": 754, "\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178": 754, "\u8fd4\u56de\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\u7684\u5143\u7ec4": 734, "\u8fd4\u56de\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u7279\u5f81\u5b57\u5178": 751, "\u8fd4\u56de\u7684\u662f": 737, "\u8fd8\u5141\u8bb8\u901a\u8fc7\u6307\u5b9a": 738, "\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u4e0b\u6e38\u4efb\u52a1\u83b7\u53d6\u9690\u85cf\u8282\u70b9\u8868\u793a": 769, "\u8fd8\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\u8de8\u7c7b\u578b\u6574\u5408\u51fd\u6570": 751, "\u8fd8\u652f\u6301\u751f\u6210\u7528\u4e8e\u94fe\u63a5\u9884\u6d4b\u7684\u8d1f\u6837\u672c": 757, "\u8fd8\u662f": 765, "\u8fd8\u80fd\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528": 745, "\u8fd8\u9700\u8981\u5728\u8bfb\u51fa\u51fd\u6570\u4e2d\u805a\u5408\u4e0d\u540c\u7c7b\u522b\u7684\u8282\u70b9": 767, "\u8fd8\u9700\u8981\u5c06\u5176\u4e0e": 759, "\u8fd92\u4e2a\u5b57\u5178\u4e0e": 763, "\u8fd9\u4e00\u793a\u4f8b\u6765\u4e86\u89e3\u5982\u4f55\u9884\u6d4b\u5f02\u6784\u56fe\u4e2d\u7684\u8fb9\u7c7b\u578b": 765, "\u8fd9\u4e00\u7ae0\u4e2d\u63d0\u5230\u7684\u56fe\u5377\u79ef\u7f51\u7edc\u83b7\u5f97": 765, "\u8fd9\u4e0e\u5728": 769, "\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u5e03\u5c14\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165": 737, "\u8fd9\u4e2a": 764, "\u8fd9\u4e2aapi\u4f1a\u4e0edgl\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u5e76\u521b\u5efa\u91c7\u6837\u5668\u8fdb\u7a0b": 737, "\u8fd9\u4e2aapi\u5c06\u8fd0\u884c\u670d\u52a1\u5668\u4ee3\u7801": 737, "\u8fd9\u4e2a\u4f8b\u5b50\u662f\u8bc4\u5206\u9884\u6d4b\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 765, "\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u628a\u539f\u56fe\u8f6c\u6362\u6210\u4e00\u4e2a\u5305\u542b\u53cd\u5411\u8fb9\u7684\u56fe": 745, "\u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u53d8\u91cf\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u548c\u5176\u4ed6\u8f93\u5165\u7279\u5f81": 766, "\u8fd9\u4e2a\u5b57\u5178\u7684\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u91cc": 751, "\u8fd9\u4e2a\u5b57\u5178\u7684\u952e\u4e3a\u5173\u7cfb\u540d": 763, "\u8fd9\u4e2a\u63a5\u53e3\u5c06\u66f4\u65b0\u6240\u6709\u7684\u8fb9": 749, "\u8fd9\u4e2a\u6570\u636e\u52a0\u8f7d\u5668\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668": 754, "\u8fd9\u4e2a\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe": 734, "\u8fd9\u4e2a\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 734, "\u8fd9\u4e2a\u6574\u5408\u65b9\u5f0f\u53ef\u4ee5\u662f": 751, "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f02\u6784\u56fe": 765, "\u8fd9\u4e2a\u6a21\u578b\u4e0d\u4ec5\u53ef\u4ee5\u505a\u8282\u70b9\u5206\u7c7b": 769, "\u8fd9\u4e2a\u6a21\u578b\u5177\u6709\u53ef\u8c03\u8282\u7684\u5c42\u6570": 769, "\u8fd9\u4e2a\u8fc7\u7a0b": 734, "\u8fd9\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u4f1a\u6784\u5efa\u8ba1\u7b97\u7684\u4f9d\u8d56\u5173\u7cfb\u56fe": 753, "\u8fd9\u4e3a\u4ece\u6574\u4f53\u4e0a\u8fdb\u884c\u7cfb\u7edf\u4f18\u5316\u63d0\u4f9b\u4e86\u7a7a\u95f4": 749, "\u8fd9\u4e48\u505a\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4": 731, "\u8fd9\u4e9budf\u5fc5\u987b\u5728": 737, "\u8fd9\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u72ec\u7acb\u7684id\u7a7a\u95f4\u548c\u7279\u5f81": 746, "\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32": 749, "\u8fd9\u4e9b\u56fe\u8868\u793a\u6bcf\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56": 759, "\u8fd9\u4e9b\u5c5e\u6027\u65e8\u5728\u523b\u753b\u6bcf\u4e00\u79cd\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 751, "\u8fd9\u4e9b\u5e03\u5c14\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf": 737, "\u8fd9\u4e9b\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u548c\u6d88\u606f\u4f20\u9012\u4e2d\u7684\u503c\u65e0\u6548": 762, "\u8fd9\u4e9b\u670d\u52a1\u5668\u4e00\u8d77\u5de5\u4f5c\u4ee5\u5c06\u56fe\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 736, "\u8fd9\u4e9b\u6784\u5efa\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u91cd\u89c6\u6027\u80fd\u7684\u573a\u666f": 742, "\u8fd9\u4e9b\u6a21\u5757\u662f\u7eafpytorch": 761, "\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u662f\u6807\u91cf": 743, "\u8fd9\u4e9b\u7c7b\u4f1a\u751f\u6210\u9700\u8ba1\u7b97\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u8ba1\u7b97\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u56fe": 759, "\u8fd9\u4e9b\u8282\u70b9\u4e0e\u7528\u6237\u5e0c\u671b\u8ba1\u7b97\u6700\u7ec8\u8868\u793a\u7684\u8282\u70b9\u76f8\u540c": 759, "\u8fd9\u4e9b\u8282\u70b9\u662f\u8ba1\u7b97\u8282\u70b9\u6700\u7ec8\u8868\u793a\u6240\u9700\u7684\u6240\u6709\u5fc5\u9700\u7684\u8282\u70b9": 759, "\u8fd9\u4ec5\u662f\u4e2a\u4f8b\u5b50": 767, "\u8fd9\u4f1a\u5c06\u56fe\u7ed3\u6784\u548c\u7279\u5f81\u6570\u636e\u90fd\u62f7\u8d1d\u5230\u6307\u5b9a\u7684\u8bbe\u5907": 744, "\u8fd9\u4f1a\u975e\u5e38\u6d88\u8017\u5185\u5b58": 750, "\u8fd9\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4": 738, "\u8fd9\u5305\u62ec\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 736, "\u8fd9\u53d6\u51b3\u4e8e\u56fe\u4e2d\u8fb9\u7684\u65b9\u5411\u6027": 741, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u574f": 737, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u6027\u80fd\u4e0d\u4f73": 762, "\u8fd9\u53ef\u80fd\u5e26\u6765\u975e\u6700\u4f18\u7684\u914d\u7f6e": 738, "\u8fd9\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528": 746, "\u8fd9\u5bf9\u4e8e\u540c\u6b65sgd\u975e\u5e38\u91cd\u8981": 737, "\u8fd9\u5c31\u5e26\u6765\u4e86\u5177\u6709\u4e0d\u540c\u7279\u5f81\u7684\u591a\u6761\u8fb9": 741, "\u8fd9\u5e73\u8861\u4e86\u4e0d\u540c\u7c7b\u578b\u8282\u70b9\u7684\u8fde\u8fb9\u6570\u91cf": 738, "\u8fd9\u5f88\u5bb9\u6613\u8d85\u8fc7\u4e00\u5757gpu\u7684\u663e\u5b58\u9650\u5236": 753, "\u8fd9\u662f\u4e00\u4e2a": 749, "\u8fd9\u662f\u56e0\u4e3adgl\u8981\u5b9a\u4f4d\u5e76\u5220\u9664\u5305\u542b\u5728\u5c0f\u6279\u6b21\u4e2d\u7684\u53cd\u5411\u8fb9": 755, "\u8fd9\u662f\u56e0\u4e3a\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u8fb9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee": 738, "\u8fd9\u662f\u56e0\u4e3a\u5b83\u5bf9\u4e00\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u6d88\u606f\u7684\u805a\u5408\u548c\u7ed3\u5408": 756, "\u8fd9\u662f\u56e0\u4e3a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u53ea\u7528\u4e00\u4e2a\u56fe": 734, "\u8fd9\u662f\u5c0f\u6279\u91cf\u8bad\u7ec3\u4e2d\u7684\u5e38\u89c1\u7528\u6cd5": 752, "\u8fd9\u662f\u7531\u4e8e": 742, "\u8fd9\u6837\u4e0d\u4ec5\u80fd\u63d0\u5347\u901f\u5ea6": 745, "\u8fd9\u6837\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5e2e\u7528\u6237\u8282\u7701\u5927\u91cf\u7684\u6570\u636e\u5904\u7406\u65f6\u95f4": 735, "\u8fd9\u6837\u7684\u4efb\u52a1\u79f0\u4f5c": 768, "\u8fd9\u6837\u7684\u65b9\u6cd5\u79f0\u4f5c": 768, "\u8fd9\u70b9\u5728\u4e4b\u540e\u7684": 754, "\u8fd9\u79cd\u60c5\u51b5\u4e0b": 765, "\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97dgl\u7684\u4ee3\u7801\u53ef\u4ee5\u65e0\u7f1d\u5d4c\u5165\u5230\u540e\u7aef\u6846\u67b6\u7684\u4ee3\u7801\u4e2d": 760, "\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f": 746, "\u8fd9\u7b49\u4ef7\u4e8e\u628a\u6bcf\u6761\u6d88\u606f\u548c\u5bf9\u5e94\u7684\u8fb9\u6743\u91cd\u76f8\u4e58": 766, "\u8fd9\u7c7b\u64cd\u4f5c\u53eb\u505a": 767, "\u8fd9\u8981\u6c42\u6240\u6709\u5f20\u91cf\u53c2\u6570\u90fd\u5df2\u7ecf\u653e\u5728gpu\u4e0a": 744, "\u8fd9\u90e8\u5206\u4ee3\u7801\u4f1a\u56e0\u6a21\u5757\u800c\u5f02": 762, "\u8fd9\u91cc": 734, "\u8fd9\u91cc\u4ee56": 756, "\u8fd9\u91cc\u5148\u89e3\u91ca\u4e00\u4e0b\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 754, "\u8fd9\u91cc\u5220\u9664\u4e86\u81ea\u73af": 759, "\u8fd9\u91cc\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u5faa\u73af\u4ec5\u5305\u542b\u4f7f\u7528\u5b9a\u5236\u7684\u6279\u5904\u7406\u8fed\u4ee3\u5668\u904d\u5386\u6570\u636e\u96c6\u7684\u5185\u5bb9": 759, "\u8fd9\u91cc\u7684\u79bb\u7ebf\u63a8\u65ad\u88ab\u5b9e\u73b0\u4e3agnn\u6a21\u5757\u7684\u4e00\u4e2a\u65b9\u6cd5": 756, "\u8fd9\u91cc\u7701\u7565\u4e86": 734, "\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8f93\u5165\u7684\u56fe\u6570\u636e\u4e0d\u80fd\u5305\u542b\u8fb9\u7684\u7c7b\u578b\u4fe1\u606f": 765, "\u8fdb\u800c\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u6765\u6784\u5efadglgraph\u5bf9\u8c61": 742, "\u8fdb\u884c\u4f18\u5316": 750, "\u8fdb\u884c\u521b\u5efa\u65f6": 742, "\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 769, "\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97": 769, "\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316": 761, "\u8fdb\u884c\u8bad\u7ec3": 765, "\u8fde\u63a5\u4e00\u5bf9\u8282\u70b9": 741, "\u9009\u62e9\u4e00\u4e2a\u5c0f\u6279\u6b21\u7684\u56fe\u8282\u70b9": 753, "\u9010\u5143\u7d20\u6c42\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c": 767, "\u9010\u5c42\u8ba1\u7b97\u8868\u793a": 756, "\u901a\u5e38": [737, 758], "\u901a\u5e38\u4f1a\u805a\u5408\u5e76\u6c47\u603b\u5355\u4e2a\u56fe\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f": 767, "\u901a\u5e38\u5728\u6d88\u606f\u4f20\u9012\u7684\u6700\u540e\u4e00\u6b65\u5c06\u5176\u4e0e\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408": 749, "\u901a\u5e38\u65e0\u6cd5\u8fdb\u884c": 753, "\u901a\u5e38\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u90bb\u5c45\u8fdb\u884c\u771f\u6b63\u7684\u805a\u5408": 756, "\u901a\u5e38\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u91c7\u6837\u8fc7\u7a0b\u53d8\u6162\u5f88\u591a": 755, "\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u591a\u5c42\u7684\u56fe\u795e\u7ecf\u7f51\u7edc": 769, "\u901a\u8fc7": [743, 749], "\u901a\u8fc7idx\u5f97\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e00\u4e2a\u6837\u672c": 731, "\u901a\u8fc7idx\u83b7\u53d6\u5bf9\u5e94\u7684\u56fe\u548c\u6807\u7b7e": 734, "\u901a\u8fc7\u5173\u7cfb\u540d": 763, "\u901a\u8fc7\u5e73\u5747\u8bfb\u51fa\u503c\u6765\u8ba1\u7b97\u5355\u56fe\u7684\u8868\u5f81": 767, "\u901a\u8fc7\u5f20\u91cf\u5206\u914d\u521b\u5efa\u7279\u5f81\u65f6": 743, "\u901a\u8fc7\u7528\u56fe\u523b\u753b\u540c\u4e00\u793e\u533a\u91cc\u4eba\u4e0e\u4eba\u95f4\u7684\u53cb\u8c0a": 767, "\u901a\u8fc7\u7d22\u5f15": 762, "\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u5bf9\u8fb9\u5c5e\u6027\u7684\u9884\u6d4b": 765, "\u901a\u8fc7\u8c03\u7528": 763, "\u904d\u5386\u6240\u6709\u8fb9\u7684\u7c7b\u578b": 754, "\u90a3\u4e48\u5728\u5757\u4e0a\u8ba1\u7b97\u7684\u4ee3\u7801\u4e5f\u662f\u7c7b\u4f3c\u7684": 758, "\u90a3\u4e48\u5b83\u4eec\u5df2\u7ecf\u652f\u6301\u4e86\u8fb9\u6743\u91cd": 766, "\u90a3\u4e48\u7528\u6237\u53ea\u9700\u8981\u518d\u7f16\u5199\u4e00\u4e2a\u7528": 765, "\u90a3\u4e48\u7528\u6237\u5c31\u9700\u8981\u8c03\u7528\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 750, "\u90a3\u4e48\u8be5\u51fd\u6570\u5e94\u4ee5\u521d\u59cb\u56fe\u4ee5\u53ca\u7531\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u6784\u6210\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 757, "\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b\u901a\u5e38\u5982\u4e0b": 753, "\u90bb\u5c45\u91c7\u6837\u5728\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u66f4\u597d\u5730\u53d1\u6325\u4f5c\u7528": 756, "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u5757\u7684\u5217\u8868": 757, "\u90bb\u63a5\u77e9\u9635\u91cc\u7684\u5143\u7d20\u4e0d\u662f\u96f6\u5c31\u662f\u4e00": 766, "\u90fd\u662f\u540e\u7eed\u56fe\u795e\u7ecf\u7f51\u7edc\u5c42\u8ba1\u7b97\u4e2d\u67d0\u6761\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 754, "\u90fd\u6709": 768, "\u90fd\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 758, "\u914d\u7f6e\u6587\u4ef6": 739, "\u91c7\u6837": 757, "\u91c7\u6837\u4ee3\u7801\u7c7b\u4f3c\u4e8e\u5355\u8fdb\u7a0b\u91c7\u6837": 737, "\u91c7\u6837\u5668": 736, "\u91c7\u6837\u5668\u65e0\u6cd5\u5728\u5177\u6709\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7684pytorch": 737, "\u91c7\u6837\u5668\u8fdb\u7a0b": 736, "\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf\u5fc5\u987b\u5339\u914d": 739, "\u91cc\u5b9e\u73b0\u4e86\u5f88\u591a\u5e38\u7528\u7684\u56fe\u6570\u636e\u96c6": 730, "\u91cc\u6240\u4ecb\u7ecd\u7684\u6027\u80fd\u4f18\u5316": 762, "\u91cc\u662f\u5426\u6709\u5904\u7406\u8fc7\u7684\u6570\u636e\u6587\u4ef6": 735, "\u91cc\u7684": 768, "\u91cc\u8bfb\u53d6\u5904\u7406\u8fc7\u7684\u6570\u636e": 735, "\u91cc\u9762\u4fdd\u5b58\u4e86\u8bad\u7ec3\u811a\u672c": 739, "\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b": 753, "\u91cd\u6392\u56fe\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u5c40\u90e8\u6027": 734, "\u91cd\u65b0\u521d\u59cb\u5316\u53ef\u5b66\u4e60\u7684\u53c2\u6570": 761, "\u9488\u5bf9mxnet\u548cpytorch\u540e\u7aef\u4e5f\u6709\u5bf9\u5e94\u7684\u6a21\u5757": 769, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [747, 753], "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [747, 753], "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [747, 753], "\u94fe\u63a5\u9884\u6d4b": [734, 747, 757, 764, 769], "\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u4e5f\u5e94\u4f7f\u7528\u7c7b\u4f3c\u7684\u5e03\u5c14\u6570\u7ec4": 737, "\u94fe\u63a5\u9884\u6d4b\u548c\u6574\u56fe\u5206\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 764, "\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5904\u7406\u4e0e\u8282\u70b9\u5206\u7c7b\u76f8\u4f3c": 734, "\u9500\u6bc1distgraph\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0distgraph\u7684\u884c\u4e3a\u6ca1\u6709\u88ab\u5b9a\u4e49": 737, "\u952e\u662f\u4e00\u79cd\u5173\u7cfb": 751, "\u957f\u5ea6\u4e3a3\u7684\u8282\u70b9\u7279\u5f81": 743, "\u95f4\u9694\u635f\u5931": 768, "\u9648\u77e5\u96e8": 747, "\u9664\u4e86": 755, "\u9664\u4e86\u56fe\u7ed3\u6784": 742, "\u9664\u4e86\u5e73\u8861\u8282\u70b9\u7684\u7c7b\u578b\u4e4b\u5916": 738, "\u9664\u4e86\u5f20\u91cf\u7684\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b\u4e4b\u5916": 737, "\u9664\u4e86\u6570\u636e\u7ef4\u5ea6": 761, "\u9664\u4e86\u7528\u6237\u5728\u521b\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u65f6\u65e0\u6cd5\u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 737, "\u9664\u4e86\u8f93\u5165\u56fe\u548c\u8f93\u5165\u5f20\u91cf": 763, "\u9664\u4ee5\u5165\u5ea6": 762, "\u9664\u6b64\u4e4b\u5916": 750, "\u968f\u540e": 757, "\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b": 755, "\u9690\u5c42\u5927\u5c0f\u4e3a": 753, "\u96c6\u7fa4\u4e2d\u7684\u6bcf\u53f0\u673a\u5668\u5404\u81ea\u8d1f\u8d23\u4e00\u5f20\u5b50\u56fe": 736, "\u9700\u8981\u4e0b\u56fe\u4e2d\u7684\u6765\u81ea\u8282\u70b94": 754, "\u9700\u8981\u4ee5\u5c0f\u6279\u6b21\u7684\u65b9\u5f0f\u8ba1\u7b97\u8fd9\u4e2agnn\u5c42\u6240\u6709\u8282\u70b9\u7684\u8f93\u51fa\u8868\u793a": 756, "\u9700\u8981\u5411\u6570\u636e\u8f7d\u5165\u5668\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u5bf9\u5e94\u8fb9id\u7684\u5b57\u5178": 757, "\u9700\u8981\u5bf9\u7528\u4e8e\u6574\u56fe\u7684gnn\u6a21\u5757\u8fdb\u884c\u5982\u4e0b\u8c03\u6574\u4ee5\u5c06\u5176\u7528\u4e8e\u5757\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5": 758, "\u9700\u8981\u5c06\u5176\u4e0e": 755, "\u9700\u8981\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a": 734, "\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u8282\u70b9\u548c\u8fb9\u7c7b\u578b": 746, "\u9700\u8981\u6839\u636e\u56fe\u7c7b\u578b\u88ab\u6307\u5b9a": 762, "\u9700\u8981\u6ce8\u610f": 767, "\u9700\u8981\u6ce8\u610f\u7684\u662f\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u8282\u70b9\u548c\u8fb9\u5c5e\u6027\u6ca1\u6709\u6279\u6b21\u5927\u5c0f\u5bf9\u5e94\u7684\u7ef4\u5ea6": 767, "\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c": 759, "\u975e\u7ebf\u6027\u548c\u57fa\u5206\u89e3": 759, "\u975e\u96f6\u7684\u5143\u7d20\u53ef\u4ee5\u53d6\u4efb\u610f\u6807\u91cf\u503c": 766, "\u975e\u96f6\u9879": 742, "\u9762\u5411\u90a3\u4e9b\u60f3\u8981\u5f00\u53d1\u65b0\u7684\u91c7\u6837\u7b97\u6cd5": 753, "\u987e\u5ba2": 741, "\u9884\u6d4b\u56fe\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u8fb9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u4efb\u52a1\u7c7b\u578b": 765, "\u9884\u6d4b\u5b83\u7684\u7c7b\u578b\u662f": 765, "\u9884\u6d4b\u7ed3\u679c\u523b\u753b\u4e86\u6574\u4e2a\u8f93\u5165\u56fe\u7684\u5c5e\u6027": 767, "\u9884\u6d4b\u8fb9\u5f97\u5206\u7684\u6a21\u578b\u548c\u8fb9\u5206\u7c7b": 768, "\u9996\u5148": 767, "\u9996\u5148\u4f7f\u7528pip\u5b89\u88c5ogb\u5305": 733, "\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0a\u56fe\u6240\u793a\u7684dglgraph": 754, "\u9996\u5148\u6211\u4eec\u904d\u5386\u56fe\u4e2d\u6240\u6709\u7684\u5173\u7cfb": 763, "\u9a8c\u8bc1": 737, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u6570\u636e\u96c6": 765, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u7684\u5206\u5272\u4e5f\u4ee5\u5e03\u5c14\u63a9\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u56fe\u4e0a": 769, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 737, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4ece\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u7c7b\u522b\u4e2d\u5206\u914d\u7684\u4e00\u4e2a\u7c7b\u522b": 769, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u6807\u6ce8\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57": 769, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u5212\u5206": 765, "\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u8282\u70b9\u770b\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 738, "\u9ad8\u5c42\u91c7\u6837api\u4e3a\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u91c7\u6837\u7b97\u6cd5": 737, "\u9ec4\u5d1f": 747, "\u9ed8\u8ba4": 731, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [737, 738], "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u8fdb\u884c\u7279\u5f81\u5408\u5e76": 746, "\uac00": [774, 776, 777, 779, 789, 792, 793, 803, 806, 807, 810], "\uac00\uae4c\uc6b4": 774, "\uac00\ub2a5": 812, "\uac00\ub2a5\ub3c4": 811, "\uac00\ub2a5\ud558\ub2e4": [774, 779, 784, 790, 792, 794, 798, 800, 809, 810, 812], "\uac00\ub2a5\ud55c": [780, 790, 792, 812], "\uac00\uc774\ub4dc\ub294": 774, "\uac00\uc774\ub4dc\uc640": 798, "\uac00\uc7a5": [790, 801, 802, 806, 809, 812], "\uac00\uc815\ud558\uace0": [776, 811], "\uac00\uc815\ud558\ub294": 777, "\uac00\uc815\ud558\uba74": 809, "\uac00\uc815\ud558\uc790": 792, "\uac00\uc815\ud55c\ub2e4": [779, 780, 808, 809], "\uac00\uc838\ub2e4": 798, "\uac00\uc911\uce58": [779, 782, 784, 789], "\uac00\uc911\uce58\uace0": 791, "\uac00\uc911\uce58\ub294": [782, 791], "\uac00\uc911\uce58\ub4e4\uc744": 805, "\uac00\uc911\uce58\ub85c": 779, "\uac00\uc911\uce58\ub97c": [779, 782, 784, 791], "\uac00\uc911\uce58\uc640": 782, "\uac00\uc911\uce58\uc758": 779, "\uac00\uc911\uce58\uc774\ub2e4": 779, "\uac00\uc9c0": [776, 777, 779, 795, 797, 802, 811, 812], "\uac00\uc9c0\uace0": [802, 810, 812], "\uac01": [770, 775, 776, 777, 778, 779, 780, 782, 784, 786, 787, 789, 793, 795, 796, 798, 799, 800, 802, 803, 806, 807, 809, 810, 811, 812], "\uac01\uac01": [790, 792, 801], "\uac04\uacb0\ud558\uac8c": 790, "\uac04\ub2e8\ud558\uac8c": [775, 802, 809], "\uac04\ub2e8\ud558\uace0": 770, "\uac04\ub2e8\ud558\ub2e4": [779, 802, 809], "\uac04\ub2e8\ud55c": 781, "\uac04\ub2e8\ud788": 809, "\uac04\ub7b5\ud558\uac8c": 774, "\uac04\ub7b5\ud55c": 809, "\uac04\uc12d\uc774": 810, "\uac04\uc5d0": [778, 787], "\uac04\uc758": [782, 810, 811], "\uac12": 772, "\uac12\ub3c4": 779, "\uac12\ub4e4\uc744": 812, "\uac12\ub4e4\uc774\ub2e4": 779, "\uac12\ub4e4\uc778\ub370": 779, "\uac12\uc5d0": [797, 800, 803], "\uac12\uc73c\ub85c": [779, 803], "\uac12\uc740": [779, 793, 807, 809], "\uac12\uc744": [778, 779, 791, 806, 809], "\uac12\uc758": 778, "\uac12\uc774": 779, "\uac12\uc774\ub2e4": 779, "\uac12\uc778": 780, "\uac15\ub3c4\ub97c": 782, "\uac15\ub825\ud55c\uac00": 796, "\uac15\uc870\ud558\uae30": 774, "\uac15\ud558\uac8c": 770, "\uac16\uac70\ub098": 782, "\uac16\uac8c": 793, "\uac16\uace0": [773, 777, 778, 779, 784, 786, 787, 790, 798, 801, 809], "\uac16\uae30": [779, 793], "\uac16\ub294": [777, 778, 779, 781, 782, 783, 784, 786, 787, 793, 795, 796, 797, 801, 803, 809, 810], "\uac16\ub294\ub2e4": [776, 778, 779, 782, 784, 787, 790, 791, 798, 799, 808, 811], "\uac16\ub294\ub2e4\uace0": [777, 779], "\uac16\ub294\ub2e4\uba74": [779, 787, 797], "\uac16\ub294\ub370": [777, 779, 790, 803], "\uac16\ub3c4\ub85d": [777, 778, 779, 796], "\uac16\uc544\uc57c": 784, "\uac16\uc73c\uba70": 809, "\uac16\uc744": [781, 782, 784, 793, 807], "\uac16\uc74c": 801, "\uac16\uc9c0": [782, 806], "\uac19\uace0": 777, "\uac19\ub2e4": [771, 776, 777, 779, 780, 787, 790, 792, 793, 795, 796, 797, 798, 800, 802, 806, 809, 810, 811], "\uac19\ub3c4\ub85d": 779, "\uac19\uc544\uc57c": [780, 784, 786], "\uac19\uc544\uc57c\ub9cc": 777, "\uac19\uc740": [771, 776, 777, 778, 779, 780, 782, 784, 786, 787, 790, 791, 792, 796, 797, 798, 801, 802, 805, 806, 807, 808, 809, 810, 811, 812], "\uac19\uc744": 777, "\uac19\uc774": [774, 782, 789, 796, 797, 800, 801, 805, 807, 808, 809, 810, 811, 812], "\uac1c": 786, "\uac1c\uac00": 779, "\uac1c\uae4c\uc9c0": 786, "\uac1c\ub150\uc5d0": [797, 802], "\uac1c\ub150\uc740": [796, 797, 802], "\uac1c\ub150\uc744": 781, "\uac1c\ub97c": 777, "\uac1c\ub9cc": 777, "\uac1c\ubc1c": 777, "\uac1c\ubc1c\uc744": 786, "\uac1c\ubc1c\uc774": 798, "\uac1c\ubc1c\ud558\uace0": 777, "\uac1c\uc218": [771, 777, 780], "\uac1c\uc218\uac00": [779, 796], "\uac1c\uc218\uacfc": [777, 780], "\uac1c\uc218\ub294": [777, 780, 801], "\uac1c\uc218\ub97c": [777, 779], "\uac1c\uc218\uc5d0": [779, 798], "\uac1c\uc218\uc640": [777, 779, 784], "\uac1c\uc218\uc758": [777, 779], "\uac1c\uc22b\ub97c": 774, "\uac1c\uc758": [773, 777, 778, 779, 780, 800, 811], "\uac1c\uc778": 795, "\uac1d\uccb4": [775, 776, 783, 806], "\uac1d\uccb4\uac00": 777, "\uac1d\uccb4\ub294": 790, "\uac1d\uccb4\ub4e4\uc744": 777, "\uac1d\uccb4\ub4e4\uc758": 774, "\uac1d\uccb4\ub85c": [773, 779], "\uac1d\uccb4\ub97c": [777, 790, 797], "\uac1d\uccb4\ub9cc": 773, "\uac1d\uccb4\uc5d0": 777, "\uac1d\uccb4\uc640": 775, "\uac1d\uccb4\uc774\ub2e4": 790, "\uac2f\uc218\ub97c": 803, "\uac70\uafb8\ub85c": 795, "\uac70\ub4ed": 779, "\uac70\ub4ed\uc81c\uacf1\uc5d0": 800, "\uac70\uc758": [774, 797, 800, 802, 809], "\uac78\ub9ac\ub294": 799, "\uac78\uccd0\uc11c": [779, 787, 806], "\uac80\uc0c9\ud560": 778, "\uac80\uc99d": [777, 779, 799, 809, 812], "\uac80\uc99d\uacfc": 795, "\uac80\uc99d\uc744": 772, "\uac83": [797, 801, 802, 803], "\uac83\uacfc": [777, 779, 782, 797, 800, 804, 809], "\uac83\uacfc\ub294": 802, "\uac83\ub3c4": [772, 786, 790, 809], "\uac83\ub3e0": 798, "\uac83\ub4e4\uc5d0": 783, "\uac83\ub4e4\uc774\ub2e4": 779, "\uac83\ub9cc\uc774": 801, "\uac83\uc5d0": [779, 801], "\uac83\uc73c\ub85c": [779, 798, 802, 812], "\uac83\uc740": [774, 777, 784, 791, 796, 797, 799, 801, 802, 809, 810, 811, 812], "\uac83\uc744": [770, 771, 774, 775, 777, 778, 779, 787, 790, 792, 796, 800, 801, 810, 812], "\uac83\uc774": [773, 774, 775, 779, 792, 796, 797, 798, 799, 800, 802, 810, 811], "\uac83\uc774\uace0": [774, 777, 797], "\uac83\uc774\ub2e4": [771, 772, 774, 777, 779, 782, 784, 786, 787, 792, 795, 796, 797, 800, 801, 802, 806, 807, 809, 810, 811, 812], "\uac83\uc774\uc9c0\ub9cc": 803, "\uac83\uc778\ub2e4": 779, "\uac83\uc778\uc9c0": [796, 801], "\uac83\uc778\uc9c0\uc5d0": 801, "\uac83\uc77c": [800, 810], "\uac83\uc785\ub2c8\ub2e4": 788, "\uac83\uc9c0\ub9cc": 779, "\uac83\ucc98\ub7fc": [791, 797, 800], "\uacb0\uacfc": [785, 792, 796, 799, 807], "\uacb0\uacfc\uac00": 810, "\uacb0\uacfc\ub294": [779, 806, 807], "\uacb0\uacfc\ub4e4\uc740": 807, "\uacb0\uacfc\ub4e4\uc774": 779, "\uacb0\uacfc\ub77c\ub294": 802, "\uacb0\uacfc\ub85c": 797, "\uacb0\uacfc\ub85c\uc11c": 812, "\uacb0\uacfc\ub97c": [779, 781, 790, 792, 793, 796, 802, 807, 810], "\uacb0\uacfc\uc5d0": [777, 790], "\uacb0\uacfc\uc640": 790, "\uacb0\uacfc\uc758": 810, "\uacb0\uc815\ud55c\ub2e4": 805, "\uacb0\uc815\ud560": [778, 787], "\uacb0\ud569\ud558\uace0": 790, "\uacbd\ub85c\ub4e4\uc740": 780, "\uacbd\ub85c\ub85c": 780, "\uacbd\ub85c\ub97c": 780, "\uacbd\uc6b0": [772, 775, 777, 779, 780, 784, 787, 790, 794, 795, 796, 801, 803, 805, 806, 807, 810, 811], "\uacbd\uc6b0\uac00": [787, 809, 811], "\uacbd\uc6b0\ub294": 787, "\uacbd\uc6b0\ub3c4": [775, 796, 801, 808, 810], "\uacbd\uc6b0\ub4e4": 801, "\uacbd\uc6b0\ub77c\uba74": 790, "\uacbd\uc6b0\ub97c": 792, "\uacbd\uc6b0\uc5d0": [775, 777, 799, 806], "\uacbd\uc6b0\uc5d0\ub294": [774, 779, 786, 792, 795, 805], "\uacbd\uc6b0\uc5d0\ub9cc": 777, "\uacbd\uc6b0\uc640": [774, 787, 796, 810], "\uacbd\uc6b0\uc640\ub294": 810, "\uacc4\ub2e8\ub41c": 811, "\uacc4\uc0b0": [800, 803, 806, 809], "\uacc4\uc0b0\ub418\uc5b4\uc57c": [795, 802], "\uacc4\uc0b0\ub41c": 779, "\uacc4\uc0b0\uc740": 799, "\uacc4\uc0b0\uc744": [776, 778, 779], "\uacc4\uc0b0\uc774": 777, "\uacc4\uc0b0\uc801\uc778": 779, "\uacc4\uc0b0\ud558\uace0\uc790": 809, "\uacc4\uc0b0\ud558\uae30": [776, 796, 797, 800, 809], "\uacc4\uc0b0\ud558\uae30\ub97c": 802, "\uacc4\uc0b0\ud558\ub294": [796, 797, 799, 800, 809, 811, 812], "\uacc4\uc0b0\ud558\ub294\ub370": 802, "\uacc4\uc0b0\ud558\uba74": 809, "\uacc4\uc0b0\ud55c": 802, "\uacc4\uc0b0\ud55c\ub2e4": [797, 811], "\uacc4\uc0b0\ud55c\ub2e4\uace0": 809, "\uacc4\uc0b0\ud560": [796, 799, 802, 811, 812], "\uacc4\uc0b0\ud574\uc57c\ud558\uae30": 799, "\uacc4\uc0b0\ud574\uc57c\ud55c\ub2e4": 799, "\uacc4\uc18d": 803, "\uacc4\ud68d\uc774\ub77c\uba74": 808, "\uace0\uac1d": 782, "\uace0\uae09": [790, 795], "\uace0\ub824\ud558\uac8c": 779, "\uace0\ub824\ud558\uc790": 796, "\uace0\ub824\ud55c": 779, "\uace0\ub824\ud574\uc11c": 779, "\uace0\ub9bd": 796, "\uace0\ub9bd\ub41c": 796, "\uace0\uc720\uc758": 804, "\uace0\uc720\ud558\uac8c": [777, 787], "\uace0\uc720\ud558\ub2e4": 778, "\uace0\uc720\ud55c": [778, 779, 784, 786], "\uace0\uce58\uae30": 802, "\uacf1\ud558\uace0": [790, 803], "\uacf1\ud558\uae30": 791, "\uacf1\ud574\uc11c": 790, "\uacf3\uc5d0": [779, 783], "\uacf5\uac04\uacfc": 787, "\uacf5\ub3d9": 782, "\uacf5\ubc31": 779, "\uacf5\ubc31\uc73c\ub85c": 779, "\uacf5\uc2dd": 773, "\uacf5\uc2dd\uc5d0": 796, "\uacf5\uc2dd\uc73c\ub85c": [790, 807], "\uacf5\uc2dd\uc740": [796, 806], "\uacf5\ud1b5\uc801\uc778": 783, "\uacfc": [776, 777, 779, 780, 781, 782, 803, 805, 808], "\uacfc\uc815\uc5d0\uc11c": [779, 806], "\uacfc\uc81c": 811, "\uacfc\uc81c\ub4e4\uc758": 808, "\uacfc\uc81c\ub97c": 779, "\uad00\uacc4": [781, 782, 787, 793], "\uad00\uacc4\uac00": [782, 787, 807], "\uad00\uacc4\ub294": [782, 787, 806, 807], "\uad00\uacc4\ub2f9": [787, 806], "\uad00\uacc4\ub4e4\uc744": [787, 797], "\uad00\uacc4\ub4e4\uc758": 807, "\uad00\uacc4\ub85c": 807, "\uad00\uacc4\ub85c\ubd80\ud130": 807, "\uad00\uacc4\ub97c": [782, 787, 807, 810], "\uad00\uacc4\uc5d0": 807, "\uad00\uacc4\uc758": 793, "\uad00\uacc4\uc774\uace0": [793, 797], "\uad00\uacc4\uc778": 797, "\uad00\ub828": [780, 807], "\uad00\ub828\ub41c": [774, 780, 787, 790, 805, 811], "\uad00\ub828\uc5c6\uc774": 778, "\uad00\ub828\uc774": 798, "\uad00\ub9ac\ud558\ub294\ub370": 787, "\uad00\ub9ac\ud55c\ub2e4": 777, "\uad49\uc7a5\ud788": [775, 810], "\uad50\uccb4\ud558\ub294": 802, "\uad50\uccb4\ud55c\ub2e4": 801, "\uad6c\ub3d9\ud558\uace0": 777, "\uad6c\ub9e4\uc790": 782, "\uad6c\ubcc4\uc774": 787, "\uad6c\ubcc4\ud558\uace0": 777, "\uad6c\ubcc4\ud558\ub294": 779, "\uad6c\ubcc4\ud558\ub294\ub370": 777, "\uad6c\ubcc4\ud574\ubcfc": 810, "\uad6c\ubd84\ub418\ub294": 779, "\uad6c\ubd84\ub41c\ub2e4": 779, "\uad6c\ubd84\ub41c\ub2e4\uace0": 809, "\uad6c\ubd84\uc9c1\uae30": 797, "\uad6c\ubd84\ud55c\ub2e4\uba74": 778, "\uad6c\uc131": 779, "\uad6c\uc131\ub418\uc5b4": [804, 808], "\uad6c\uc131\ub418\uc5b4\uc57c": 779, "\uad6c\uc131\ub41c": [779, 782, 810, 811], "\uad6c\uc131\ub41c\ub2e4": [779, 782, 797, 802, 807, 812], "\uad6c\uc131\ud558\ub294": 779, "\uad6c\uc131\ud560": 779, "\uad6c\uc785": 782, "\uad6c\uc785\ud588\uc74c": 782, "\uad6c\uc870": 781, "\uad6c\uc870\ub294": 777, "\uad6c\uc870\ub85c": 781, "\uad6c\uc870\ub97c": [786, 810], "\uad6c\uc870\uc640": [776, 777, 779, 783, 785], "\uad6c\uc870\uc774\ub2e4": 782, "\uad6c\uccb4\uc801\uc778": 774, "\uad6c\ud558\uace0": 809, "\uad6c\ud558\uae30": [790, 812], "\uad6c\ud558\ub294\ub370": [797, 800], "\uad6c\ud574\uc9c4": 810, "\uad6c\ud604": [774, 802, 809, 812], "\uad6c\ud604\uacfc": [797, 800], "\uad6c\ud604\ub355\uc5d0": 804, "\uad6c\ud604\ub3c4": [797, 800], "\uad6c\ud604\ub418\uc5b4": [790, 806, 807, 812], "\uad6c\ud604\ub418\uc5b4\uc57c": 771, "\uad6c\ud604\ub41c\ub2e4": [806, 809], "\uad6c\ud604\ub41c\ub2e4\ub294": 799, "\uad6c\ud604\uc0c1\uc758": [797, 800], "\uad6c\ud604\uc5d0": 774, "\uad6c\ud604\uc5d0\uc11c": 802, "\uad6c\ud604\uc740": [774, 777, 792, 796, 801, 802, 810], "\uad6c\ud604\uc774": [774, 790, 797, 800, 801], "\uad6c\ud604\ud558\uace0": [770, 776, 777, 790, 795, 803, 810], "\uad6c\ud604\ud558\uae30": [775, 795, 802], "\uad6c\ud604\ud558\uae30\ub9cc": 796, "\uad6c\ud604\ud558\ub294": [770, 771, 799, 801, 802], "\uad6c\ud604\ud558\ub294\ub370": 771, "\uad6c\ud604\ud558\ub294\uc9c0": 789, "\uad6c\ud604\ud558\uba74": 792, "\uad6c\ud604\ud55c": [796, 801], "\uad6c\ud604\ud55c\ub2e4": [771, 772], "\uad6c\ud604\ud560": [772, 774, 775, 790, 812], "\uad6c\ud604\ud574\uc11c": 772, "\uad6c\ud604\ud574\uc57c": 774, "\uad8c\uc7a5\ud558\ub294\ub370": [771, 790], "\uad8c\uc7a5\ud55c\ub2e4": [770, 774, 775, 777, 792], "\uaddc\uce59\uc740": 790, "\uaddc\uce59\uc744": 810, "\uade0\ub4f1": 811, "\uade0\ub4f1\ud558\uac8c": 800, "\uade0\uc77c": 798, "\uade0\ud5dd\uc744": 779, "\uade0\ud615\uc744": 779, "\uade0\ud615\uc7a1\ud78c": 779, "\uadf8": [771, 777, 778, 779, 781, 783, 787, 789, 790, 792, 794, 795, 796, 799, 800, 802, 805, 806, 809, 810, 811, 812], "\uadf8\uac83\ub4e4\uc5d0": 787, "\uadf8\uac83\ub4e4\uc740": 777, "\uadf8\uac83\ub4e4\uc744": [777, 796], "\uadf8\uac83\ub4e4\uc758": [776, 779, 782, 783, 795, 797, 809], "\uadf8\uac83\uc740": 811, "\uadf8\uac83\uc758": [779, 802], "\uadf8\ub300\ub85c": [796, 800], "\uadf8\ub4e4\uc758": 782, "\uadf8\ub798\ub4e4": 810, "\uadf8\ub798\uc11c": [779, 783], "\uadf8\ub798\ud504": [771, 773, 776, 779, 780, 785, 788, 789, 793, 795, 796, 797, 799, 800, 802, 805, 807], "\uadf8\ub798\ud504\uac00": [777, 778, 779, 780, 782, 787, 796, 797, 801, 806, 809, 810, 812], "\uadf8\ub798\ud504\uac04\uc758": [797, 800], "\uadf8\ub798\ud504\ub098": 801, "\uadf8\ub798\ud504\ub294": [778, 779, 781, 782, 785, 787, 796, 797, 798, 801, 806, 810], "\uadf8\ub798\ud504\ub3c4": 796, "\uadf8\ub798\ud504\ub4e4": 774, "\uadf8\ub798\ud504\ub4e4\uacfc": 800, "\uadf8\ub798\ud504\ub4e4\ub85c": [776, 779], "\uadf8\ub798\ud504\ub4e4\uc5d0": [795, 800, 807, 808, 809, 810, 811], "\uadf8\ub798\ud504\ub4e4\uc5d0\uc11c": 811, "\uadf8\ub798\ud504\ub4e4\uc744": [778, 786, 810], "\uadf8\ub798\ud504\ub4e4\uc758": [774, 775, 779, 787, 797, 800, 802], "\uadf8\ub798\ud504\ub85c": [779, 780, 786, 796, 806, 810, 811], "\uadf8\ub798\ud504\ub85c\ubd80\ud130": [778, 783], "\uadf8\ub798\ud504\ub97c": [773, 774, 776, 777, 778, 779, 782, 783, 786, 796, 797, 798, 801, 802, 808, 809, 810, 811, 812], "\uadf8\ub798\ud504\ub9cc": 774, "\uadf8\ub798\ud504\ubcc4": 784, "\uadf8\ub798\ud504\uc5d0": [774, 777, 781, 785, 786, 788, 789, 794, 796, 799, 801, 802, 806, 808, 811, 812], "\uadf8\ub798\ud504\uc5d0\ub3c4": 796, "\uadf8\ub798\ud504\uc5d0\uc11c": [774, 779, 782, 793, 796, 807], "\uadf8\ub798\ud504\uc5d0\uc11c\ub294": 779, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": [789, 811], "\uadf8\ub798\ud504\uc640": [787, 796, 797, 798, 800, 801, 807, 808, 809, 810], "\uadf8\ub798\ud504\uc758": [774, 777, 778, 779, 781, 782, 784, 786, 787, 792, 796, 798, 801, 806, 807, 810], "\uadf8\ub798\ud504\uc774\uace0": 782, "\uadf8\ub798\ud504\uc774\uae30": 783, "\uadf8\ub798\ud504\uc774\ub2e4": [782, 793, 810, 811], "\uadf8\ub798\ud504\uc774\uc5b4\uc57c": 801, "\uadf8\ub798\ud504\uc774\uc790": 810, "\uadf8\ub798\ud504\uc778": [784, 795, 797], "\uadf8\ub798\ud504\uc77c": 787, "\uadf8\ub798\ud504\ud2d1": 778, "\uadf8\ub7a8\uc758": 787, "\uadf8\ub7a8\ud504\ub97c": 811, "\uadf8\ub7ec\uba74": 809, "\uadf8\ub7f0": 811, "\uadf8\ub807\uc9c0": [772, 797, 808], "\uadf8\ub8f9": 776, "\uadf8\ub8f9\uc73c\ub85c": 787, "\uadf8\ub9ac\uace0": [771, 774, 776, 777, 779, 780, 781, 782, 783, 787, 789, 790, 796, 797, 803, 804, 805, 808, 810, 812], "\uadf8\ub9bc\uc5d0\uc11c\uc640": 796, "\uadf8\ub9bc\uc740": [776, 778, 796], "\uadf8\ub9bc\uc758": 796, "\uadf8\uc5d0": [779, 793], "\uadf8\uc640": [782, 797], "\uae30\ub2a5": 783, "\uae30\ub2a5\uc740": 798, "\uae30\ub2a5\uc744": [779, 783, 790, 796], "\uae30\ubc18\uc73c\ub85c": [778, 780, 806], "\uae30\ubc18\uc758": [779, 811], "\uae30\ubc18\uc774\ub2e4": 796, "\uae30\ubc95\uc744": 809, "\uae30\ubc95\uc774\ub2e4": 791, "\uae30\ubcf8": [771, 777, 778, 779, 780, 790, 796], "\uae30\ubcf8\uc801\uc73c\ub85c": 801, "\uae30\ubcf8\uc801\uc778": [771, 773, 779, 781, 802], "\uae30\uc220\uc801\uc73c\ub85c\ub294": 796, "\uae30\uc5ec\ub97c": 804, "\uae30\uc900\uc758": 788, "\uae30\ud638\ub9cc\uc73c\ub85c": 779, "\uae38\uc774": 782, "\uae38\uc774\ub294": 777, "\uae40\ubb34\ud604": 788, "\uae54\ub054\ud55c": [770, 787], "\uae68\uc9d0": 777, "\uaf2d": [771, 779], "\ub05d\ub098\uba74": 779, "\ub098\ub204\uace0": [776, 777, 779], "\ub098\ub204\ub294": [777, 779, 792], "\ub098\ub208\ub2e4": 779, "\ub098\ub220\uc57c\ub9cc": 777, "\ub098\ub220\uc57c\ud55c\ub2e4": 777, "\ub098\ub220\uc838": 774, "\ub098\ub220\uc838\uc11c": [777, 778], "\ub098\ub220\uc9c4": 777, "\ub098\ub25c\ub2e4": [793, 805], "\ub098\ub25c\ub2e4\ub294": 801, "\ub098\ub260": 806, "\ub098\uba38\uc9c0": [776, 779, 810], "\ub098\uba38\uc9c0\ub294": 796, "\ub098\uba38\uc9c0\uc5d0\uc11c\ub294": [771, 776], "\ub098\uc544\uac00": [779, 785], "\ub098\uc5f4\ub418\uc5b4": 779, "\ub098\uc5f4\ud558\uace0": 779, "\ub098\uc5f4\ud558\uae30\ub294": 783, "\ub098\ud0c0\ub0b8\ub2e4": [782, 786], "\ub098\ud0c0\ub0b8\ub2e4\ub294": 810, "\ub0a8\uc544\uc788\ub2e4": 790, "\ub0ae\ub2e4\uace0": 792, "\ub0ae\ucd94\ub294": 792, "\ub0b4\ubcf4\ub0b4\ub294": 809, "\ub0b4\ubd80\uc801\uc73c\ub85c": [783, 790], "\ub0b4\ubd80\uc801\uc73c\ub85c\ub294": 777, "\ub0b4\uc5d0\uc11c": 779, "\ub0b4\uc6a9\uc73c\ub85c": 796, "\ub0b4\uc6a9\uc740": [774, 790], "\ub0b4\uc6a9\uc774": 783, "\ub0b8": 797, "\ub108\ubb34": [792, 798, 809], "\ub110\ub9ac": 812, "\ub118\uc744": 795, "\ub123\uae30": 798, "\ub124": [778, 779, 780], "\ub124\uac00\uc9c0": 778, "\ub124\uac00\ud2f0\ube0c": 811, "\ub124\uc784\uc2a4\ud328\uc774\uc2a4\uc5d0": 790, "\ub124\ud2b8\uc6cc\ud06c": [776, 779, 780, 788, 795, 801, 811], "\ub124\ud2b8\uc6cc\ud06c\uac00": [796, 812], "\ub124\ud2b8\uc6cc\ud06c\ub294": [782, 812], "\ub124\ud2b8\uc6cc\ud06c\ub4e4\uc5d0\uc11c": 793, "\ub124\ud2b8\uc6cc\ud06c\ub97c": [777, 802, 808, 809], "\ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c": 782, "\ub124\ud2b8\uc6cc\ud06c\uc758": 805, "\ub178\ub4dc": [776, 778, 781, 782, 783, 784, 787, 789, 790, 795, 796, 797, 800, 801, 806, 807, 808, 810, 811], "\ub178\ub4dc\uac00": [777, 779, 795, 802], "\ub178\ub4dc\uac04\uc758": 787, "\ub178\ub4dc\ub098": 793, "\ub178\ub4dc\ub294": [798, 812], "\ub178\ub4dc\ub4e4": [777, 779, 781, 795, 796, 797, 811], "\ub178\ub4dc\ub4e4\uac04\uc758": [781, 782], "\ub178\ub4dc\ub4e4\uacfc": [782, 784, 787, 796, 797, 798, 802], "\ub178\ub4dc\ub4e4\ub85c": 778, "\ub178\ub4dc\ub4e4\ub9cc\uc774": 796, "\ub178\ub4dc\ub4e4\uc5d0": [779, 796, 799, 802, 810, 811], "\ub178\ub4dc\ub4e4\uc5d0\uac8c": 790, "\ub178\ub4dc\ub4e4\uc5d0\uc11c": 796, "\ub178\ub4dc\ub4e4\uc640": 774, "\ub178\ub4dc\ub4e4\uc740": [778, 779, 782, 796, 802], "\ub178\ub4dc\ub4e4\uc744": [776, 779, 796, 800, 802, 806], "\ub178\ub4dc\ub4e4\uc758": [777, 779, 782, 792, 794, 795, 796, 799, 802, 806, 809, 810, 811, 812], "\ub178\ub4dc\ub4e4\uc774": [778, 782, 796, 797, 801], "\ub178\ub4dc\ub4e4\uc774\ub098": [779, 810], "\ub178\ub4dc\ub4e4\uc774\ub2e4": [781, 796, 806], "\ub178\ub4dc\ub85c": [792, 801, 802], "\ub178\ub4dc\ub97c": [778, 779, 782, 786, 790, 796, 800, 806, 812], "\ub178\ub4dc\ubcc4": 789, "\ub178\ub4dc\uc5d0": [779, 784, 786, 789, 800, 802, 805, 807, 809, 812], "\ub178\ub4dc\uc5d0\ub3c4": 796, "\ub178\ub4dc\uc5d0\uc11c": [774, 792], "\ub178\ub4dc\uc640": [776, 777, 778, 779, 781, 786, 787, 789, 790, 793, 796, 801, 806, 810], "\ub178\ub4dc\uc758": [774, 777, 779, 786, 787, 789, 790, 791, 794, 796, 797, 799, 801, 802, 805, 806, 809, 812], "\ub178\ub4e4\ub4e4": 796, "\ub178\ub4e4\ub4e4\uc744": 796, "\ub178\ub4e4\ub4e4\uc758": 799, "\ub178\ub4e4\uc5d0": 796, "\ub178\ub4e4\uc744": 796, "\ub178\ub4e4\uc758": [777, 779], "\ub178\uc774\uc988": 811, "\ub178\ud2b8": [779, 793, 796, 798, 809, 810], "\ub179\uc0c9": 796, "\ub179\uc0c9\uacfc": 796, "\ub179\uc0c9\uc73c\ub85c": 796, "\ub192\ub3c4\ub85d": 811, "\ub192\uc740": 792, "\ub193\uc774\uac8c": 806, "\ub208\uc5d0": 797, "\ub274\ub7f4": [788, 793, 795, 796, 801, 802, 805, 811], "\ub290\ub9b0": 799, "\ub294": [771, 773, 777, 779, 780, 782, 783, 786, 787, 789, 790, 793, 796, 797, 798, 800, 802, 803, 806, 807, 808, 810, 811, 812], "\ub298": 796, "\ub2a5\ub825\uc774": 790, "\ub2e4\ub8e8\uace0": 801, "\ub2e4\ub8e8\uae30": [772, 810], "\ub2e4\ub8e8\ub294": 798, "\ub2e4\ub8e8\ub294\ub370": 781, "\ub2e4\ub8e8\uc9c0": 783, "\ub2e4\ub8ec": 799, "\ub2e4\ub8ec\ub2e4": [776, 777, 795], "\ub2e4\ub8f0": [783, 786, 806, 807], "\ub2e4\ub974\uac8c": [774, 777, 802, 806], "\ub2e4\ub974\uae30": 796, "\ub2e4\ub974\uc9c0": [809, 810, 811], "\ub2e4\ub978": [777, 779, 780, 781, 782, 783, 785, 786, 787, 790, 792, 793, 797, 798, 802, 807, 808, 809, 810, 812], "\ub2e4\ub978\ub370": [799, 811], "\ub2e4\ub984\uc744": 773, "\ub2e4\uba74": 778, "\ub2e4\uc2dc": [777, 779, 787, 801], "\ub2e4\uc591\ud55c": [777, 783, 807, 811], "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0": 772, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 770, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294": 772, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c": 772, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c\ub2e4": 772, "\ub2e4\uc6b4\ub85c\ub4dc\ud574\uc11c": 773, "\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc": [779, 809, 811, 812], "\ub2e4\uc74c": [770, 772, 773, 774, 775, 777, 778, 779, 786, 787, 790, 796, 797, 798, 800, 801, 802, 803, 805, 809, 810, 811, 812], "\ub2e4\uc74c\uacfc": [771, 774, 776, 779, 780, 787, 789, 790, 791, 792, 793, 795, 796, 797, 800, 801, 802, 806, 807, 808, 809, 810, 811, 812], "\ub2e4\uc74c\uc5d0": 806, "\ub2e4\uc74c\uc5d0\ub294": 796, "\ub2e4\uc74c\uc73c\ub85c": 795, "\ub2e4\uc74c\uc73c\ub85c\ub294": [800, 805], "\ub2e4\uc74c\uc740": [779, 780, 800, 803, 811, 812], "\ub2e4\uc74c\uc744": [780, 807], "\ub2e4\uc911": [778, 782], "\ub2e4\uc911\uc758": 777, "\ub2e4\ucc28\uc6d0": 784, "\ub2e8": [775, 777, 779], "\ub2e8\uacc4\uac00": 777, "\ub2e8\uacc4\ub4e4\uc744": 805, "\ub2e8\uacc4\ub85c": 779, "\ub2e8\uacc4\ub97c": [779, 802], "\ub2e8\uacc4\ub9c8\ub2e4": 795, "\ub2e8\uacc4\uc5d0\uc11c": [789, 792, 806], "\ub2e8\ubc29\ud5a5": 801, "\ub2e8\uc21c\ud558\uac8c": [797, 801, 802, 810, 812], "\ub2e8\uc21c\ud55c": 802, "\ub2e8\uc21c\ud788": 796, "\ub2e8\uc704\ub85c": 810, "\ub2e8\uc77c": [774, 776, 777, 779, 790, 801, 807, 808, 809], "\ub2e8\uc885": 806, "\ub2e8\uc9c0": [787, 796, 801, 812], "\ub2e8\ud56d": 790, "\ub2e8\ud56d\uc758": 790, "\ub2ec\ub77c\uc9c4\ub2e4": [797, 805], "\ub2ec\uc131\ud558\uae30": 811, "\ub2ec\uc131\ud558\ub294": 792, "\ub2f4\uace0": [777, 779, 797, 802, 810], "\ub2f4\ub2f9\ud558\ub294": 793, "\ub2f4\ub2f9\ud55c\ub2e4": [777, 779, 796], "\ub300\ub7b5": 779, "\ub300\ubd80\ubd84": [777, 786, 803], "\ub300\ubd80\ubd84\uc758": [775, 810], "\ub300\uc0c1": 801, "\ub300\uc0c1\uc73c\ub85c": 801, "\ub300\uc2e0": [777, 787, 800], "\ub300\uc2e0\uc5d0": [797, 800], "\ub300\uce6d\uc801\uc778": 782, "\ub300\ud45c\ud558\ub3c4\ub85d": 802, "\ub300\ud55c": [770, 771, 772, 774, 775, 777, 778, 780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 796, 797, 799, 800, 801, 802, 803, 806, 807, 808, 810, 811, 812], "\ub300\ud574": [776, 802, 807], "\ub300\ud574\uc11c": [777, 779, 796, 799, 800, 802, 803, 805, 807, 808, 809, 810, 811, 812], "\ub300\ud578": 795, "\ub354": [774, 775, 777, 779, 785, 790, 792, 796, 799, 803, 812], "\ub354\ubd88\uc5b4": [779, 783, 807, 810], "\ub354\ubd88\uc5b4\uc11c": 778, "\ub354\ud55c\ub2e4": 792, "\ub354\ud560": 774, "\ub354\ud574\uc11c": [779, 790, 810], "\ub355\uc5d0": 810, "\ub370\uc774": 777, "\ub370\uc774\ud130": [771, 779, 783, 786, 787, 788, 790, 796, 803, 805, 808, 812], "\ub370\uc774\ud130\uac00": [774, 775, 780, 799, 810], "\ub370\uc774\ud130\ub294": [774, 779], "\ub370\uc774\ud130\ub3c4": [779, 783], "\ub370\uc774\ud130\ub85c": 778, "\ub370\uc774\ud130\ub85c\ub354\ub97c": 810, "\ub370\uc774\ud130\ub85c\uc11c": 777, "\ub370\uc774\ud130\ub97c": [770, 772, 775, 776, 777, 778, 779, 783, 785], "\ub370\uc774\ud130\ub9cc": 785, "\ub370\uc774\ud130\uc14b": [771, 773, 775, 803, 808, 812], "\ub370\uc774\ud130\uc14b\uacfc": 774, "\ub370\uc774\ud130\uc14b\ub4e4": 770, "\ub370\uc774\ud130\uc14b\ub4e4\uc740": 774, "\ub370\uc774\ud130\uc14b\ub4e4\uc744": 773, "\ub370\uc774\ud130\uc14b\uc5d0": [771, 773, 774, 775, 799], "\ub370\uc774\ud130\uc14b\uc740": [773, 774, 812], "\ub370\uc774\ud130\uc14b\uc744": [770, 771, 773, 774, 802, 808, 810], "\ub370\uc774\ud130\uc14b\uc758": [773, 774, 810], "\ub370\uc774\ud130\uc14b\uc774": 772, "\ub370\uc774\ud130\uc5d0": [777, 778, 779, 780, 797], "\ub370\uc774\ud130\uc640": [776, 777, 778, 779, 780, 783], "\ub370\uc774\ud130\uc758": [774, 777], "\ub370\uc774\ud14c\uc14b\uc744": 774, "\ub370\uc774\ud2b8\ub97c": 771, "\ub374\uc2a4": 777, "\ub3c4\uad6c\ub4e4\uc744": 776, "\ub3c4\uc6c0\uc774": 792, "\ub3c4\ucc29\uc9c0": 787, "\ub3c4\ucd9c\ud560": 809, "\ub3c5\ub9bd\uc801\uc778": 787, "\ub3d5\uae30": 779, "\ub3d5\ub294": 780, "\ub3d9\uae30\ud654": 777, "\ub3d9\uc2dc": 777, "\ub3d9\uc2dc\uc5d0": [776, 777], "\ub3d9\uc548": [779, 790], "\ub3d9\uc548\uc5d0": 777, "\ub3d9\uc77c\ud558\uac8c": 787, "\ub3d9\uc77c\ud558\uae30\uc5d0": 797, "\ub3d9\uc77c\ud558\ub2e4": [774, 779, 792, 796, 803, 804, 806, 811, 812], "\ub3d9\uc77c\ud558\ub3c4\ub85d": 797, "\ub3d9\uc77c\ud55c": [776, 777, 790], "\ub3d9\uc791\uc740": 806, "\ub3d9\uc791\ud558\uac8c": 801, "\ub3d9\uc791\ud558\ub294": [798, 809], "\ub3d9\uc791\ud558\ub294\uc9c0": [770, 801, 812], "\ub3d9\uc791\ud558\ub294\uc9c0\ub97c": 771, "\ub3d9\uc791\ud55c\ub2e4": [777, 798, 801], "\ub3d9\uc791\ud560": 796, "\ub3d9\uc791\ud568": 798, "\ub3d9\uc885": 782, "\ub418\uac8c": 776, "\ub418\uace0": 806, "\ub418\uae30": 806, "\ub418\uae30\ub3c4": 793, "\ub418\ub294": 796, "\ub418\ub3c4\ub85d": 802, "\ub418\ubc84\ub9bc": 803, "\ub41c\ub2e4": [774, 782, 787, 792, 793, 796, 797, 806, 809, 810, 811, 812], "\ub41c\ub2e4\ub294": 802, "\ub420": [779, 780, 796], "\ub450": [777, 779, 780, 782, 784, 785, 787, 792, 793, 797, 800, 803, 809, 810, 811], "\ub450\uac00\uc9c0": [777, 778, 787, 798, 807], "\ub450\uac1c": 801, "\ub450\uac1c\ub85c": 792, "\ub450\uac1c\uc758": [782, 783, 790, 802], "\ub450\ubc88\uc9f8": [779, 796, 797], "\ub450\ubc88\uc9f8\ub294": [797, 806], "\ub450\ubc88\uc9f8\ub85c": 810, "\ub458\uc740": 809, "\ub4a4\uc5d0": 780, "\ub4e4": [796, 810], "\ub4e4\uaca0\ub2e4": 774, "\ub4e4\ub9cc": 796, "\ub4e4\uba74": [777, 790, 791, 800, 809, 810, 811], "\ub4e4\uc5b4": [775, 777, 778, 779, 781, 782, 784, 790, 796, 798, 801, 802, 809, 810, 811, 812], "\ub4e4\uc5b4\uac08": [798, 808], "\ub4e4\uc5b4\ubcf4\uc790": [792, 796, 801, 802], "\ub4e4\uc744": [790, 797], "\ub4e4\uc758": [789, 797, 800, 802], "\ub4e4\uc790": 801, "\ub4ec\ub140": 787, "\ub4f1": 771, "\ub4f1\uacfc": 805, "\ub4f1\ub85d": 805, "\ub4f1\ub85d\uacfc": 804, "\ub4f1\ub85d\ud55c\ub2e4": 805, "\ub4f1\uc740": 779, "\ub4f1\uc758": 812, "\ub4f1\uc774": [790, 810], "\ub4f1\uc7a5\ud55c\ub2e4\ub294": 796, "\ub514\ub809\ud1a0\ub9ac": [772, 780], "\ub514\ub809\ud1a0\ub9ac\ub85c": [772, 780], "\ub514\ub809\ud1a0\ub9ac\ub97c": [779, 780], "\ub514\ub809\ud1a0\ub9ac\uc5d0": [772, 774, 779], "\ub514\ub809\ud1a0\ub9ac\uc640": 779, "\ub514\ub809\ud1a0\ub9ac\uc758": 779, "\ub514\ubc14\uc774\uc2a4": 786, "\ub514\ubc14\uc774\uc2a4\ub85c": 798, "\ub514\uc2a4\ud06c\ub85c": 775, "\ub514\uc2a4\ud06c\uc5d0": [771, 772, 775, 783], "\ub514\uc790\uc778\uc744": 777, "\ub525\ub7ec\ub2dd": 812, "\ub525\ub7ec\ub2dd\uc5d0\uc11c": 810, "\ub530\ub77c": [779, 786, 804, 805, 806, 811, 812], "\ub530\ub77c\uc11c": [774, 777, 778, 779, 780, 782, 783, 785, 796, 797, 798, 800, 801, 803, 806], "\ub530\ub974\uace0": 777, "\ub530\ub974\uba74": 796, "\ub530\ub978\ub2e4": [770, 784], "\ub54c": [776, 777, 778, 779, 787, 790, 792, 797, 799, 800, 802, 805, 807, 809, 810, 811], "\ub54c\uae4c\uc9c0": 795, "\ub54c\ub294": [778, 787, 803], "\ub54c\ub85c\ub294": [792, 797, 808], "\ub54c\ub860": 809, "\ub54c\ubb38\uc5d0": [774, 775, 777, 782, 787, 792, 796, 799, 800, 803, 806, 809, 810, 811], "\ub54c\ubb38\uc774\ub2e4": [770, 771, 777, 779, 783, 786, 790, 792, 796, 797, 798, 799, 811], "\ub54c\uc758": 803, "\ub5a0\uc62c\ub824": 796, "\ub610\ub294": [771, 772, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 790, 791, 793, 795, 796, 801, 805, 807, 808, 810, 811, 812], "\ub610\ud55c": [771, 774, 777, 779, 780, 786, 795, 802, 809, 812], "\ub611\uac19\uc774": 810, "\ub73b": 811, "\ub744\ub294": 797, "\ub77c\uace0": [786, 790, 796, 802, 809, 811], "\ub77c\ub294": [774, 778, 779, 790], "\ub77c\uc774\ube0c\ub7ec\ub9ac": 783, "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4": 783, "\ub77c\uc778": 784, "\ub77c\uc778\uc774\ub2e4": 776, "\ub798\ud551\ud558\uba74": 803, "\ub79c\ub364": 779, "\ub7ec\ud37c\ub7f0\uc2a4": 783, "\ub7f0\uce58": 780, "\ub7f0\uce6d\ud558\uae30": 776, "\ub808\uc774\ube14": [771, 774, 783, 810], "\ub808\uc774\ube14\uacfc": 812, "\ub808\uc774\ube14\ub4e4\uc758": 774, "\ub808\uc774\ube14\ub85c": 809, "\ub808\uc774\ube14\ub9cc": 802, "\ub808\uc774\ube14\uc740": [802, 812], "\ub808\uc774\ube14\uc744": [775, 787, 802, 809], "\ub808\uc774\ube14\uc774": [779, 799], "\ub808\uc774\uc544\uc6c3\uc744": 784, "\ub808\uc774\uc5b4": [792, 799, 802, 803, 809, 811, 812], "\ub808\uc774\uc5b4\uac00": 777, "\ub808\uc774\uc5b4\ub4e4": 799, "\ub808\uc774\uc5b4\ub4e4\uc744": 799, "\ub808\uc774\uc5b4\ub85c\ubd80\ud130": 796, "\ub808\uc774\uc5b4\ub97c": 796, "\ub808\uc774\uc5b4\ubd80\ud130": 799, "\ub808\uc774\uc5b4\uc5d0": [796, 797, 799, 802, 810], "\ub808\uc774\uc5b4\uc5d0\uc11c": [795, 802], "\ub808\uc774\uc5b4\uc758": [792, 795, 796, 799], "\ub808\uc774\uc774\ubcc4\ub85c": 799, "\ub85c": [778, 780, 781, 783, 786, 789, 801, 802, 803, 806, 807, 812], "\ub85c\ub354": 777, "\ub85c\ub354\uac00": [797, 802], "\ub85c\ub354\ub294": 800, "\ub85c\ub354\ub85c\ubd80\ud130": 797, "\ub85c\ub354\ub97c": [777, 796, 797, 800], "\ub85c\ub354\uc5d0": 800, "\ub85c\ub354\uc5d0\uc11c": 797, "\ub85c\ub4dc\ub420": [777, 778, 802], "\ub85c\ub4dc\uc548\ub2e4": 779, "\ub85c\ub4dc\uc5d0": 771, "\ub85c\ub4dc\ud558\uace0": [777, 779], "\ub85c\ub4dc\ud558\uae30": [770, 774], "\ub85c\ub4dc\ud558\ub294": 802, "\ub85c\ub4dc\ud558\uba74": 802, "\ub85c\ub4dc\ud55c\ub2e4": [777, 802], "\ub85c\ub4dc\ud55c\ub2e4\ub294": 802, "\ub85c\ub529": [770, 771, 773], "\ub85c\ub529\ub420": 779, "\ub85c\ub529\uc744": 771, "\ub85c\ub529\ud558\uace0": [770, 771, 783], "\ub85c\ub529\ud558\uae30": 779, "\ub85c\ub529\ud558\ub294": [773, 783, 798], "\ub85c\ub529\ud55c\ub2e4": 802, "\ub85c\ub529\ud568": 775, "\ub85c\ubd80\ud130": [777, 778, 783, 796], "\ub85c\uc11c": 789, "\ub85c\uc758": 786, "\ub85c\uc9c1\uc73c\ub85c": 807, "\ub85c\uceec": [771, 772, 775, 776, 777, 779, 780], "\ub8e8\ud504": 782, "\ub8f9\uacfc": [776, 797, 799, 811, 812], "\ub8f9\uc740": [797, 800, 802, 809, 810, 811, 812], "\ub8f9\uc744": [779, 799, 809, 812], "\ub8f9\uc774\ub791": 802, "\ub97c": [771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 789, 790, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 806, 807, 808, 809, 810, 811, 812], "\ub9ac\uadf8\ub798\uc158": [774, 808], "\ub9ac\uadf8\ub808\uc158": [797, 808, 811, 812], "\ub9ac\uadf8\ub808\uc158\uacfc": 797, "\ub9ac\uadf8\ub808\uc158\uc5d0\uc11c": 800, "\ub9ac\uadf8\ub808\uc158\uc744": [797, 800, 809], "\ub9ac\ub4c0\uc154": 793, "\ub9ac\ub4dc\uc544\uc6c3\uc740": 810, "\ub9ac\uc14b": 805, "\ub9ac\uc18c\uc2a4\ub4e4\uc758": 776, "\ub9ac\uc18c\uc2a4\ub97c": 799, "\ub9ac\uc2a4\ud2b8": [800, 802], "\ub9ac\uc2a4\ud2b8\ub4e4\uc5d0": 807, "\ub9ac\uc2a4\ud2b8\ub85c": 774, "\ub9ac\uc2a4\ud2b8\ub85c\ubd80\ud130": 810, "\ub9ac\uc2a4\ud2b8\ub97c": [796, 797, 802, 810], "\ub9ac\uc2a4\ud2b8\uc5d0": 810, "\ub9ac\uc2a4\ud2b8\uc5d0\uc11c": 797, "\ub9ac\uc2a4\ud2b8\uc640": [774, 775, 797], "\ub9ac\uc2a4\ud2b8\uc758": 806, "\ub9ac\uc2a4\ud2b8\uc774\ub2e4": 807, "\ub9ac\ud134\ub418\uc9c0": 777, "\ub9ac\ud134\ub41c": [796, 812], "\ub9ac\ud134\ub41c\ub2e4": [779, 797], "\ub9ac\ud134\ud558\uae30": 809, "\ub9ac\ud134\ud558\ub3c4\ub85d": 774, "\ub9ac\ud134\ud55c\ub2e4": [777, 779, 797, 809, 812], "\ub9ac\ud134\ud55c\ub2e4\ub294": 777, "\ub9ac\ud134\ud574\uc57c": 800, "\ub9ac\ud134\ud574\uc57c\ud55c\ub2e4": 800, "\ub9b4\ub9ac\uc988\uc5d0\uc11c": 778, "\ub9c1\ud06c": [777, 795, 808, 810, 812], "\ub9c1\ud06c\ub97c": 774, "\ub9c8\ub2e4": [777, 800], "\ub9c8\uc2a4\ud06c": 774, "\ub9c8\uc2a4\ud06c\ub294": 774, "\ub9c8\uc2a4\ud06c\ub4e4\uc744": 774, "\ub9c8\uc2a4\ud06c\ub85c": 809, "\ub9c8\uc2a4\ud06c\ub85c\uc11c": 812, "\ub9c8\uc2a4\ud06c\ub97c": 774, "\ub9c8\uc2a4\ud130": 780, "\ub9c8\uc9c0\ub9c9": [789, 790, 792, 796, 797, 802, 806], "\ub9c8\uc9c0\ub9c9\uc5d0\ub294": 805, "\ub9c8\uc9c0\ub9c9\uc73c\ub85c": [790, 795, 807, 810], "\ub9c8\uce5c": 774, "\ub9cc": 798, "\ub9cc\ub4dc\ub294": [770, 774, 777, 779, 783, 786, 787, 789, 796, 797, 801, 802, 804, 811], "\ub9cc\ub4dc\ub294\ub370": [783, 804], "\ub9cc\ub4e0": [779, 794, 800, 808, 809], "\ub9cc\ub4e0\ub2e4": [779, 783, 797, 802, 809, 810], "\ub9cc\ub4e4": [777, 778, 779, 783, 785, 796, 797, 805, 806, 810], "\ub9cc\ub4e4\uac8c": 796, "\ub9cc\ub4e4\uace0": [777, 786, 787, 801, 811], "\ub9cc\ub4e4\uace0\uc790": [795, 809], "\ub9cc\ub4e4\uae30": [776, 778, 779, 786, 788, 790, 799, 801, 808, 812], "\ub9cc\ub4e4\uba74": 783, "\ub9cc\ub4e4\uc5b4": [777, 797], "\ub9cc\ub4e4\uc5b4\ub0b4\uae30": 810, "\ub9cc\ub4e4\uc5b4\ub0b4\ub294": 796, "\ub9cc\ub4e4\uc5b4\ub0b8\ub2e4": [800, 810], "\ub9cc\ub4e4\uc5b4\ub0bc": 806, "\ub9cc\ub4e4\uc5b4\uc11c": [792, 810], "\ub9cc\ub4e4\uc5b4\uc57c": [777, 779, 786], "\ub9cc\ub4e4\uc5b4\uc57c\ud560": 796, "\ub9cc\ub4e4\uc5b4\uc84c\ub2e4\uba74": 796, "\ub9cc\ub4e4\uc5b4\uc9c0\uba74": [777, 779], "\ub9cc\ub4e4\uc5b4\uc9c4\ub2e4": [777, 782, 784], "\ub9cc\ub4e4\uc5b4\uc9c8": [779, 797], "\ub9cc\ub4e4\uc5c8\ub2e4": 774, "\ub9cc\ub4e4\uc5c8\ub2e4\uba74": 809, "\ub9cc\ub4e4\uc790": 772, "\ub9cc\uc57d": [772, 774, 777, 778, 779, 783, 787, 790, 792, 795, 796, 797, 798, 800, 802, 803, 808, 812], "\ub9cc\uc744": [778, 812], "\ub9cc\uc871\ud558\uc9c0": 787, "\ub9cc\uc871\ud574\uc57c": 801, "\ub9ce\uc740": [774, 777, 779, 792, 796, 798, 799, 810], "\ub9ce\uc774": [770, 771, 792, 804, 810, 811], "\ub9d0\ud558\uc790\uba74": 777, "\ub9de\uac8c": 799, "\ub9de\ub3c4\ub85d": [779, 802], "\ub9de\ucd94\uac83\uc744": 779, "\ub9de\ucd94\ub294": 779, "\ub9de\ucd98\ub2e4": 779, "\ub9de\ucd9c": 779, "\ub9e4": [777, 802], "\ub9e4\ub274\uc5bc\uc758": 783, "\ub9e4\ubc88": 802, "\ub9e4\uc6b0": [792, 802], "\ub9e4\ud551": 797, "\ub9e4\ud551\uc740": 796, "\ub9e4\ud551\uc744": [779, 797], "\ub9e4\ud551\uc774\ub2e4": 779, "\ub9e4\ud551\ud558\ub294": 807, "\ub9f4\ubc84": 790, "\ub9f4\ubc84\ub97c": 790, "\uba04\uc57d": 779, "\uba38\uc2e0": 780, "\uba38\uc2e0\ub4e4\uc5d0": [777, 779], "\uba38\uc2e0\ub4e4\uc758": [777, 780], "\uba38\uc2e0\ub7ec\ub2dd": 774, "\uba38\uc2e0\ub7ec\ub2dd\uc5d0\ub294": 774, "\uba38\uc2e0\uc5d0": [778, 779, 780], "\uba38\uc2e0\uc5d0\uc11c": [777, 779, 780], "\uba38\uc2e0\uc740": 780, "\uba38\uc2e0\uc744": 780, "\uba38\uc2e0\uc758": [777, 780], "\uba38\uc2e0\uc774": [777, 780], "\uba3c\uc800": [777, 796], "\uba40\ud2f0": [774, 798, 802, 809, 811, 812], "\uba4b\uc9c4": 810, "\uba54\ub274\uc5bc\uc5d0": 783, "\uba54\ubaa8\ub9ac": [792, 798, 799, 803], "\uba54\ubaa8\ub9ac\uac00": [795, 803], "\uba54\ubaa8\ub9ac\ub098": 802, "\uba54\ubaa8\ub9ac\ub97c": [792, 798, 803], "\uba54\ubaa8\ub9ac\uc5d0": [798, 808], "\uba54\ubaa8\ub9ac\uc640": 799, "\uba54\uc18c\ub4dc": 796, "\uba54\uc18c\ub4dc\ub294": 796, "\uba54\uc18c\ub4dc\ub85c": [799, 809], "\uba54\uc18c\ub4dc\ub97c": [786, 796, 809], "\uba54\uc18c\ub4dc\uc5d0": 809, "\uba54\uc18c\uc2a4\ub4e4": 796, "\uba54\uc2dc\uc9c0": [789, 799, 801, 802, 804, 807, 808, 810, 812], "\uba54\uc2dc\uc9c0\ub4e4": 790, "\uba54\uc2dc\uc9c0\ub4e4\uc5b4": 799, "\uba54\uc2dc\uc9c0\ub4e4\uc744": [789, 790], "\uba54\uc2dc\uc9c0\ub4e4\uc774": 805, "\uba54\uc2dc\uc9c0\ub97c": [789, 792, 796, 802, 812], "\uba54\uc2dc\uc9c0\uc758": 792, "\uba54\uc9c0\uc2dc": [788, 793, 808, 812], "\uba54\ucf13\ud50c\ub798\uc774\uc2a4\ub97c": 782, "\uba54\ud0c0": 779, "\uba54\ud0c0\uadf8\ub798\ud504": 787, "\uba54\ud0c0\uadf8\ub798\ud504\uc758": 787, "\uba54\ud0c0\ub370\uc774\ud130\ub97c": 777, "\uba54\ud551\uc744": 779, "\uba64\uba38\ub97c": 796, "\uba85\ub839": 779, "\uba85\ub839\uc73c\ub85c": 773, "\uba85\ub839\uc740": 779, "\uba85\ub839\uc744": 779, "\uba85\ub839\uc758": 779, "\uba85\ub839\uc774": 779, "\uba85\ub839\ud589\uc774\ub098": 777, "\uba85\uc2dc\ub41c": [780, 806], "\uba85\uc2dc\ub41c\ub2e4\uba74": 779, "\uba85\uc2dc\uc801\uc73c\ub85c": 777, "\uba85\uc2dc\uc801\uc778": 786, "\uba85\uc2dc\ud558\uace0": 787, "\uba85\uc2dc\ud558\uae30\ub9cc": 809, "\uba85\uc2dc\ud558\ub294": 779, "\uba85\uc2dc\ud558\uc9c0": 779, "\uba85\uc2dc\ud55c\ub2e4": 779, "\uba85\uc2dc\ud560": [787, 797], "\uba85\uc2dc\ud574\uc57c": [778, 806], "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4": 787, "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4\ub294": 802, "\uba85\ud655\ud558\uac8c": 787, "\uba87": [776, 777, 779, 795, 797, 801, 802, 811, 812], "\uba87\uac00\uc9c0": [781, 811], "\uba87\uac1c\uc758": 801, "\ubaa8\ub378": [774, 776, 777, 795, 799, 806, 809], "\ubaa8\ub378\uacfc": 811, "\ubaa8\ub378\uacfc\ub294": 811, "\ubaa8\ub378\ub85c": [777, 809], "\ubaa8\ub378\ub9c1": [787, 793], "\ubaa8\ub378\ub9c1\uc5d0": 782, "\ubaa8\ub378\ub9c1\uc5d0\uc11c": [787, 791], "\ubaa8\ub378\ub9c1\ud558\ub294\ub370": 782, "\ubaa8\ub378\uc5d0": [774, 800, 809, 810, 812], "\ubaa8\ub378\uc5d0\uc11c\ub294": 812, "\ubaa8\ub378\uc740": [797, 800, 809, 811, 812], "\ubaa8\ub378\uc744": [777, 795, 799, 803, 804, 809, 810, 811, 812], "\ubaa8\ub378\uc758": [777, 795, 803, 810], "\ubaa8\ub378\uc774": [777, 798, 810], "\ubaa8\ub450": [779, 782, 787, 790, 796, 798, 799, 806, 810, 811], "\ubaa8\ub450\ub97c": 800, "\ubaa8\ub450\uc5d0": 796, "\ubaa8\ub4c8": [776, 788, 795, 802, 808, 812], "\ubaa8\ub4c8\uacfc": [806, 809], "\ubaa8\ub4c8\ub3c4": 777, "\ubaa8\ub4c8\ub4e4\uc740": [801, 802, 805], "\ubaa8\ub4c8\ub4e4\uc744": 812, "\ubaa8\ub4c8\ub9cc\uc744": 802, "\ubaa8\ub4c8\uc5d0": [806, 807, 810], "\ubaa8\ub4c8\uc5d0\uc11c": [797, 804, 806], "\ubaa8\ub4c8\uc740": [804, 805, 806, 809], "\ubaa8\ub4c8\uc744": [777, 795, 801, 802, 803, 804, 807, 808, 809, 812], "\ubaa8\ub4c8\uc758": [777, 799, 801, 804, 805, 809, 812], "\ubaa8\ub4c8\uc774": [777, 801, 802, 807, 812], "\ubaa8\ub4c8\uc774\uace0": 807, "\ubaa8\ub4c8\uc774\ub2e4": 805, "\ubaa8\ub4c8\uc778": 812, "\ubaa8\ub4c8\ucc98\ub7fc": 807, "\ubaa8\ub4dc\ub294": 777, "\ubaa8\ub4dc\ub85c": 777, "\ubaa8\ub4dc\uc5d0\uc11c\ub294": 777, "\ubaa8\ub4dc\uc640": 777, "\ubaa8\ub4e0": [776, 777, 778, 779, 780, 782, 783, 785, 786, 787, 790, 793, 795, 796, 798, 799, 800, 801, 802, 806, 809, 810, 812], "\ubaa8\uc544\uc11c": 787, "\ubaa8\uc74c\uc774\ub2e4": 773, "\ubaa9\ub85d": 810, "\ubaa9\ub85d\uc5d0": 810, "\ubaa9\ub85d\uc740": [790, 797, 802, 812], "\ubaa9\ub85d\uc744": [797, 802], "\ubaa9\ub85d\uc774": 796, "\ubaa9\uc801": 807, "\ubaa9\uc801\uc73c\ub85c": [787, 799], "\ubaa9\uc801\uc73c\ub85c\ub294": 799, "\ubaa9\uc801\uc740": 771, "\ubaa9\uc801\uc9c0": [779, 790, 796, 800, 802, 805, 806, 807], "\ubaa9\uc801\uc9c0\uac00": 796, "\ubaa9\uc801\uc9c0\uc640": 787, "\ubaa9\uc801\uc9c0\uc778": 796, "\ubb38\ubc95\uc744": 787, "\ubb38\uc790": 787, "\ubb38\uc790\ub4e4\uacfc": 779, "\ubb38\uc790\ub85c": 779, "\ubb38\uc790\ub9cc\ub4e4": 787, "\ubb38\uc790\uc5f4": 787, "\ubb38\uc790\uc5f4\uc774\ub2e4": [790, 793], "\ubb38\uc7a5\uc73c\ub85c": 809, "\ubb38\uc81c\ub294": 810, "\ubb38\uc81c\ub4e4\uacfc": 810, "\ubb38\uc81c\ub97c": [803, 806], "\ubb38\uc81c\uc640": 810, "\ubb38\uc81c\uc778": 809, "\ubbf8\ub2c8": [774, 776, 777, 794, 795, 799, 806, 810], "\ubbf8\ub2c8\ubc30\uce58": [777, 778, 800], "\ubbf8\ub2c8\ubc30\uce58\ub97c": 799, "\ubbf8\ub2c8\ubc30\uce58\ub9cc": 799, "\ubbf8\ub2c8\ubc30\uce58\uc5d0": [800, 802], "\ubbf8\ub2c8\ubc30\uce58\uc5d0\uc11c": 797, "\ubbf8\ub2c8\ubc30\uce58\uc640": 799, "\ubbf8\ub2c8\ubc30\uce58\uc758": [797, 799], "\ubbf8\ub798\uc758": 809, "\ubbf8\ub9ac": 812, "\ubbf8\ub9cc\uc758": 798, "\ubc0f": [774, 775, 777, 778, 781, 783, 784, 786, 787, 788, 789, 795, 796, 799, 803, 806, 808, 810, 812], "\ubc11\uc904": 779, "\ubc14\uafb8\uace0": 778, "\ubc14\uafb8\uae30\ub9cc": 796, "\ubc14\uafb8\ub294": 801, "\ubc14\uafb8\uba74": 803, "\ubc14\ub010": 774, "\ubc14\ub014": 778, "\ubc16\uc5d0\uc11c": [771, 790], "\ubc18\uacfc": 792, "\ubc18\ub300": 797, "\ubc18\ub300\ub85c": 782, "\ubc18\ub300\uc758": 779, "\ubc18\ub4dc\uc2dc": [790, 801], "\ubc18\uba74": 799, "\ubc18\uba74\uc5d0": 792, "\ubc18\ubcf5": 795, "\ubc18\ubcf5\ub41c\ub2e4": 795, "\ubc18\ubcf5\uc801\uc73c\ub85c": 811, "\ubc18\ubcf5\ud574\uc11c": 812, "\ubc18\uc774": 792, "\ubc18\ud658\ud558\ub294": 802, "\ubc1b\uace0": [777, 807, 812], "\ubc1b\ub294": [800, 806], "\ubc1b\ub294\ub2e4": [779, 786, 793, 802, 806, 807], "\ubc1b\ub294\ub2e4\ub294": [797, 800, 802], "\ubc1b\ub294\ub370": 790, "\ubc1b\uc544\ub4e4\uc778\ub2e4": 785, "\ubc1b\uc544\uc11c": 800, "\ubc1b\uc544\uc57c\ud558\uace0": 800, "\ubc1b\uc744": 802, "\ubc1c\ub824\uc640\uc11c": 810, "\ubc1c\uc0dd\uc2dc\ud0a4\ub294\ub370": 796, "\ubc1c\uc0dd\ud560": [777, 799], "\ubc25\ubc99\uc73c\ub85c": 791, "\ubc29\ubc95": [777, 786, 789, 806], "\ubc29\ubc95\uacfc": [796, 797, 802, 808], "\ubc29\ubc95\ub3c4": 795, "\ubc29\ubc95\ub4e4\uc5d0": 783, "\ubc29\ubc95\ub4e4\uc744": [786, 796], "\ubc29\ubc95\uc5d0": [774, 792, 808], "\ubc29\ubc95\uc73c\ub85c": [777, 779, 794, 798], "\ubc29\ubc95\uc73c\ub85c\ub294": 785, "\ubc29\ubc95\uc740": [774, 779, 783, 787, 792, 795, 799, 803, 809, 810, 811, 812], "\ubc29\ubc95\uc744": [770, 771, 773, 774, 779, 789, 790, 796, 799, 800, 803, 804, 809, 812], "\ubc29\ubc95\uc774\ub2e4": [774, 794, 798], "\ubc29\uc2dd\uc73c\ub85c": [789, 796], "\ubc29\uc2dd\uc744": 776, "\ubc29\uc2dd\uc758": 804, "\ubc29\uc9c0\ud558\ub294": 777, "\ubc29\ud5a5\uc131": [782, 796], "\ubc29\ud5a5\uc131\uc5d0": 782, "\ubc29\ud5a5\uc131\uc744": 782, "\ubc29\ud5a5\uc131\uc774": 782, "\ubc29\ud5a5\uc744": 786, "\ubc29\ud5a5\uc774": 783, "\ubc30\uc5f4": [787, 797, 800, 802], "\ubc30\uc5f4\uacfc": 800, "\ubc30\uc5f4\uc758": 800, "\ubc30\uc81c\ud558\uace0\uc790": 797, "\ubc30\uc81c\ud558\ub294": 797, "\ubc30\uce58": [774, 776, 777, 794, 795, 799, 806], "\ubc30\uce58\ub4e4\uc744": 777, "\ubc30\uce58\ub4e4\uc758": 802, "\ubc30\uce58\ub85c\ubd80\ud130": 797, "\ubc30\uce58\ub97c": [776, 777, 790, 795, 810], "\ubc30\uce58\uc548\uc5d0": 797, "\ubc30\uce58\uc5d0": [790, 810], "\ubc30\uce58\uc5d0\uc11c": 795, "\ubc31\uc564\ub4dc\ub9cc": 776, "\ubc31\uc5d4\ub4dc": [783, 804], "\ubc31\uc5d4\ub4dc\ub85c": [804, 808], "\ubc31\uc5d4\ub4dc\ub97c": 804, "\ubc84\ub9b0\ub2e4\ub294": 810, "\ubc84\uc804": 788, "\ubc84\uc804\ub3c4": [801, 810], "\ubc84\uc804\uc758": 779, "\ubc84\uc804\uc774\ub2e4": 809, "\ubc84\ud2f1\uc2a4\ub4e4": 782, "\ubc88": 812, "\ubc88\uc5ed\ud55c": 788, "\ubc88\ud638": 786, "\ubc88\ud638\uac00": [780, 786], "\ubc88\ud638\ub294": 786, "\ubc88\ud638\ub3c4": 780, "\ubc88\ud638\ub97c": 786, "\ubc94\uc704\ub3c4": 779, "\ubc94\uc704\ub97c": 779, "\ubc94\uc704\uc5d0": 774, "\ubc94\uc704\uc758": 812, "\ubc94\uc8fc\ud615": 809, "\ubc95\uc744": 795, "\ubc95\uce59\uc758": 779, "\ubca0\uce58\ub4e4\uc5d0": 797, "\ubca1\ud130": [784, 809], "\ubca1\ud130\ub294": 779, "\ubca1\ud130\ub4e4\uc758": 779, "\ubca1\ud130\ub97c": 779, "\ubca1\ud130\uc778": 779, "\ubca4\uce58\ub9c8\ud0b9": 773, "\ubcc0\uacbd\ub418\uc5c8\ub294\uc9c0": 772, "\ubcc0\uacbd\uc740": 776, "\ubcc0\uacbd\ud558\uae30": 802, "\ubcc0\uacbd\ud574\uc11c": 809, "\ubcc0\uacbd\ud574\uc57c\ud560": 802, "\ubcc0\uc218\ub4e4": 779, "\ubcc0\ud615": 791, "\ubcc0\ud658": [777, 810], "\ubcc0\ud658\ub41c": 810, "\ubcc0\ud658\ub41c\ub2e4": 774, "\ubcc0\ud658\uc740": 787, "\ubcc0\ud658\uc744": 786, "\ubcc0\ud658\ud558\uace0": 779, "\ubcc0\ud658\ud558\uae30": 783, "\ubcc0\ud658\ud558\ub294": [778, 796], "\ubcc0\ud658\ud558\ub294\ub370": 783, "\ubcc0\ud658\ud558\ub3c4\ub85d": 779, "\ubcc0\ud658\ud558\uba74": [774, 783], "\ubcc0\ud658\ud558\uba74\uc11c": 796, "\ubcc0\ud658\ud55c\ub2e4": [778, 783, 787], "\ubcc0\ud658\ud560": [786, 787], "\ubcc0\ud658\ud574\uc11c": 783, "\ubcc4\ub3c4\ub85c": 779, "\ubcc4\ub3c4\ub85d": 810, "\ubcc4\ub3c4\uc758": [787, 811, 812], "\ubcc4\ub85c\ub3c4": 807, "\ubcd1\ub82c\ub85c": 779, "\ubcd1\ub82c\ud654": 776, "\ubcd1\ub82c\ud654\uc2dc\ud0a4\uace0": 776, "\ubcd1\ud569": [790, 809], "\ubcd1\ud569\uc774\uc804\uc5d0": 791, "\ubcd1\ud569\ud558\ub294": 809, "\ubcf4\ub0b4\uc8fc\uc138\uc694": 788, "\ubcf4\ub2e4": [777, 795, 796, 797, 798, 802], "\ubcf4\ub77c": 779, "\ubcf4\uba74": 787, "\ubcf4\uc5ec\uc8fc\uace0": 799, "\ubcf4\uc5ec\uc8fc\uae30": 801, "\ubcf4\uc5ec\uc8fc\ub294": 778, "\ubcf4\uc5ec\uc900\ub2e4": [770, 771, 773, 775, 776, 778, 779, 780, 786, 796, 797, 803], "\ubcf4\uc790": [777, 784, 786, 796, 799, 801], "\ubcf4\uc874\ud558\uace0": 787, "\ubcf4\ud1b5": [790, 812], "\ubcf4\ud1b5\uc740": [777, 790, 791, 797, 799, 805, 810], "\ubcf4\ud1b5\uc758": [807, 810], "\ubcf4\ud1b5\uc774\ub2e4": 797, "\ubcf4\ud638\ub97c": 777, "\ubcf5\uc0ac": 780, "\ubcf5\uc0ac\ub41c\ub2e4": 780, "\ubcf5\uc0ac\ub97c": 792, "\ubcf5\uc0ac\ud558\uace0": 776, "\ubcf5\uc0ac\ud558\uba74\uc11c": 787, "\ubcf5\uc0ac\ud55c\ub2e4": [780, 785], "\ubcf5\uc0ac\ud560": 785, "\ubcf5\uc7a1\ud558\ub2c8": 809, "\ubcf5\uc7a1\ud55c": [793, 796, 805, 810], "\ubcf8\uac83\uacfc": 812, "\ubcfc": 774, "\ubd80\ub3d9\uc18c\uc218\uc810": 790, "\ubd80\ub978\ub2e4": [786, 796, 802, 810], "\ubd80\ubd84": [774, 797], "\ubd80\ubd84\ub4e4\uc774": 777, "\ubd80\ubd84\uc5d0": 797, "\ubd80\ubd84\uc73c\ub85c": 797, "\ubd80\ubd84\uc740": [797, 806], "\ubd80\ubd84\uc744": [774, 777], "\ubd80\ubd84\uc758": [797, 806], "\ubd80\uc0b0": 777, "\ubd80\uc18d": [789, 797, 800, 809], "\ubd80\uc18d\ub418\ub294": 779, "\ubd80\uc218\uc801\uc73c\ub85c": 809, "\ubd80\uc5ec": 779, "\ubd80\uc5ec\ub41c\ub2e4": [779, 786], "\ubd80\uc5ec\ud558\uace0": 786, "\ubd80\uc5ec\ud558\uae30": 779, "\ubd80\uc5ec\ud558\ub294\ub370": 786, "\ubd80\uc5ec\ud55c\ub2e4": [779, 787], "\ubd80\ud130": [774, 777, 807, 809], "\ubd84\ub4e4\uc744": 795, "\ubd84\ub958": [777, 795, 800, 808, 811], "\ubd84\ub958\uac00": 810, "\ubd84\ub958\uae30": 811, "\ubd84\ub958\ub098": 810, "\ubd84\ub958\ub294": [774, 809, 810], "\ubd84\ub958\ub418\uc5b4": 812, "\ubd84\ub958\ub97c": [796, 808, 809], "\ubd84\ub958\uc5d0": 797, "\ubd84\ub958\uc5d0\uc11c": [797, 800], "\ubd84\ub958\uc640\ub294": 774, "\ubd84\ub958\uc744": [797, 800], "\ubd84\ub958\uc758": [774, 779, 797, 809], "\ubd84\ub958\uc774\ub2e4": 812, "\ubd84\ub958\ud558\uae30": 812, "\ubd84\ub958\ud558\ub294": [809, 811], "\ubd84\ub958\ud55c\ub2e4": 810, "\ubd84\ub958\ud560": 810, "\ubd84\ub9ac\ub418\uc5b4": 810, "\ubd84\uc0b0": 788, "\ubd84\uc0b0\ud558\uace0": 779, "\ubd84\uc0b0\ud558\ub294": 776, "\ubd84\uc0b0\ud559\uc2b5\uc774": 777, "\ubd84\uc11d\uc744": 774, "\ubd84\ud3ec": 800, "\ubd84\ud3ec\ub97c": 779, "\ubd84\ud3ec\uc5d0": 800, "\ubd84\ud3ec\uc5d0\uc11c": 811, "\ubd84\ud45c": 811, "\ubd84\ud560": [774, 777, 812], "\ubd84\ud560\uc744": 774, "\ubd84\ud560\ud558\uae30": 774, "\ubd84\ud560\ud558\uc5ec": 792, "\ubd88\uac00\ub2a5\ud558\ub2e4": [783, 784], "\ubd88\uac00\ub2a5\ud558\ub2e4\uba74": 790, "\ubd88\uade0\ud615\ud558\uac8c": 779, "\ubd88\ub9b0\ub2e4": 809, "\ubd88\ud544\uc694\ud55c": 792, "\ubd99\uc5ec\uc918\uc57c": 777, "\ube0c\ub79c\uce58\ub97c": 779, "\ube0c\ub85c\ub4dc\uce90\uc2a4\ud305\uc744": 790, "\ube14\ub85d": 806, "\ube14\ub85d\ub4e4\ub85c": 804, "\ube14\ub85d\uc774": 806, "\ube14\ub85d\uc77c": 807, "\ube44\uad50\ud558\ub294": 800, "\ube44\uad50\ud558\uba74": 806, "\ube44\uad50\ud558\uba74\uc11c": 811, "\ube44\uad50\ud574": 801, "\ube44\uad50\ud574\uc11c": 812, "\ube44\ub300\uce6d\uc801\uc778": 782, "\ube44\ub840\ud558\ub294": 800, "\ube44\ubc29\ud5a5\uc131": [782, 786], "\ube44\uc120\ud615\uc131": 812, "\ube44\uc2b7\ud558\uac8c": [777, 779, 802, 809], "\ube44\uc2b7\ud558\ub2e4": [774, 777, 797, 800, 801, 802, 811, 812], "\ube44\uc2b7\ud558\ub2e4\ub294": 801, "\ube44\uc2b7\ud558\uc9c0\ub9cc": 773, "\ube44\uc2b7\ud55c": [776, 777, 779, 803], "\ube44\ud2b8": 786, "\ube44\ud2b8\ub97c": 786, "\ube44\ud574\uc11c": 798, "\ube44\ud65c\uc131\ud654\ub418\uc5b4": 790, "\ube44\ud65c\uc131\ud654\ub418\uc5c8\uc744": 803, "\ube44\ud6a8\uc728\uc801\uc774\ub2e4": 810, "\ube44\ud6a8\uc728\uc801\uc778": 792, "\ube4c\ub4dc\uc778": [800, 802, 810, 812], "\ube4c\ub529": 804, "\ube4c\ud2b8\uc778": [774, 775, 789, 792, 801, 803, 812], "\ube4c\ud2b8\uc778\uc73c\ub85c": 797, "\ube60\ub974\uac8c": [774, 810], "\ube60\ub974\uace0": [786, 792], "\ube60\ub974\ub2e4": 803, "\ube60\ub974\uc9c0\ub294": 783, "\ube60\ub978": 786, "\ube68\uac04": 796, "\ube68\uac04\uc0c9": 796, "\ubfd0\ub9cc": 812, "\ubfd0\ub9cc\uc544\ub2c8\ub77c": 777, "\ubfd0\uc774\ub2e4": [800, 801, 802, 810], "\ubfd0\uc784\uc744": 787, "\uc0ac\ub77c\uc838\ub3c4": 777, "\uc0ac\ub78c\ub4e4": 782, "\uc0ac\ub78c\ub4e4\uacfc": 782, "\uc0ac\ub78c\ub4e4\uc758": 810, "\uc0ac\uc2e4\ub4e4": 784, "\uc0ac\uc2e4\uc744": 797, "\uc0ac\uc6a9": [777, 803, 809, 812], "\uc0ac\uc6a9\uacfc": 792, "\uc0ac\uc6a9\ub418\uace0": 805, "\uc0ac\uc6a9\ub418\uae30": [774, 783, 796], "\uc0ac\uc6a9\ub418\ub294": [770, 774, 777, 782, 787, 790, 791, 792, 794, 804, 805, 806, 810, 812], "\uc0ac\uc6a9\ub418\ub294\ub370": 803, "\uc0ac\uc6a9\ub418\uc5b4\uc57c": 780, "\uc0ac\uc6a9\ub41c": [777, 779, 790], "\uc0ac\uc6a9\ub41c\ub2e4": [777, 779, 780, 783, 786, 796, 799, 807, 810], "\uc0ac\uc6a9\ub41c\ub2e4\uba74": 782, "\uc0ac\uc6a9\ub41c\uba70": 803, "\uc0ac\uc6a9\ub420": [776, 777, 779, 780, 796, 797, 800, 809, 812], "\uc0ac\uc6a9\ub7c9\uc744": [792, 803], "\uc0ac\uc6a9\ubc95\uc740": [794, 796], "\uc0ac\uc6a9\ubc95\uc744": [773, 790], "\uc0ac\uc6a9\uc790": [784, 790], "\uc0ac\uc6a9\uc790\uac00": [777, 779, 787], "\uc0ac\uc6a9\uc790\ub294": [777, 778, 779, 780, 790], "\uc0ac\uc6a9\uc790\ub4e4\uacfc": 782, "\uc0ac\uc6a9\uc790\ub4e4\uc740": 779, "\uc0ac\uc6a9\uc790\uc758": 780, "\uc0ac\uc6a9\ud558\uaca0\ub2e4": 808, "\uc0ac\uc6a9\ud558\uace0": [779, 791, 797, 802], "\uc0ac\uc6a9\ud558\uae30": [779, 781, 786, 795, 800, 802], "\uc0ac\uc6a9\ud558\uae30\ub97c": 800, "\uc0ac\uc6a9\ud558\ub294": [774, 779, 786, 790, 792, 796, 798, 800, 803, 809, 810, 811, 812], "\uc0ac\uc6a9\ud558\ub294\ub370": [774, 795], "\uc0ac\uc6a9\ud558\ub294\uc9c0\ub294": 782, "\uc0ac\uc6a9\ud558\ub824\uba74": 797, "\uc0ac\uc6a9\ud558\uba70": 800, "\uc0ac\uc6a9\ud558\uba74": [783, 786, 792, 795], "\uc0ac\uc6a9\ud558\uba74\uc11c": 803, "\uc0ac\uc6a9\ud558\uc790": 810, "\uc0ac\uc6a9\ud558\uc9c0": [779, 803, 810], "\uc0ac\uc6a9\ud558\uc9c0\ub9cc": 799, "\uc0ac\uc6a9\ud55c": [774, 777, 779, 781, 786, 795, 798, 799, 804, 812], "\uc0ac\uc6a9\ud55c\ub2e4": [774, 778, 779, 780, 786, 797, 798, 800, 801, 808, 809, 810, 812], "\uc0ac\uc6a9\ud55c\ub2e4\ub294": [777, 797, 800], "\uc0ac\uc6a9\ud55c\ub2e4\uba74": 782, "\uc0ac\uc6a9\ud560": [774, 777, 779, 783, 786, 787, 797, 798, 800, 802, 808, 809], "\uc0ac\uc6a9\ud574": 810, "\uc0ac\uc6a9\ud574\ub3c4": 787, "\uc0ac\uc6a9\ud574\uc11c": [770, 774, 777, 778, 779, 780, 781, 782, 785, 786, 787, 789, 790, 792, 794, 796, 797, 799, 802, 803, 807, 808, 809, 810, 811, 812], "\uc0ac\uc6a9\ud574\uc57c": [777, 778, 779], "\uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4": [786, 797], "\uc0ac\uc6a9\ud588\ub2e4\uba74": 772, "\uc0ac\uc6a9\ud588\ub358": 800, "\uc0ac\uc774\uc5d0": [782, 797, 810, 811], "\uc0ac\uc774\uc758": [779, 796, 811], "\uc0ac\uc804": [793, 797, 800, 807], "\uc0ac\uc804\ub4e4\uc744": [797, 800], "\uc0ac\uc804\uc5d0\uc11c": 812, "\uc0ac\uc804\uc744": [787, 797, 800, 802, 807, 809, 812], "\uc0ac\uc804\uc758": 793, "\uc0ad\uc81c\ud558\uac8c\ud558\uae30": 777, "\uc0ad\uc81c\ud558\uae30\ub3c4": 797, "\uc0ad\uc81c\ud558\uae30\ub97c": 796, "\uc0b4\ud3b4\ubcf4\uaca0\ub2e4": 806, "\uc0b4\ud3b4\ubcf4\uae30": 796, "\uc0b4\ud3b4\ubcf4\uc790": [774, 790, 796, 802, 803], "\uc0c1\uad00\ud558\uc9c0": 779, "\uc0c1\ub2f9\ud55c": 798, "\uc0c1\ub2f9\ud788": 775, "\uc0c1\ub300": 780, "\uc0c1\ub300\uc801\uc73c\ub85c": [779, 810], "\uc0c1\uc138\ud55c": [797, 802], "\uc0c1\uc18d\ud55c": 796, "\uc0c1\uc18d\ud55c\ub2e4": 804, "\uc0c1\uc18d\ud574\uc11c": [771, 772], "\uc0c1\uc218": 811, "\uc0c1\uc704": 796, "\uc0c1\ud0dc\ub97c": 795, "\uc0c1\ud488": 782, "\uc0c1\ud638\uad00\uacc4\ub97c": 782, "\uc0c1\ud638\uc791\uc6a9\uc744": 776, "\uc0c1\ud669\uc5d0\uc11c": 810, "\uc0c8\ub85c\uc6b4": [777, 778, 779, 787, 795, 801], "\uc0d8\ub4e4\ub85c": 811, "\uc0d8\ub4e4\uc740": 811, "\uc0d8\ud50c": 800, "\uc0d8\ud50c\ub41c": [797, 800, 806], "\uc0d8\ud50c\ub7ec": [776, 777, 780, 795], "\uc0d8\ud50c\ub7ec\uac00": [798, 800], "\uc0d8\ud50c\ub7ec\ub294": [777, 802], "\uc0d8\ud50c\ub7ec\ub2e4": 800, "\uc0d8\ud50c\ub7ec\ub4e4\uacfc": 795, "\uc0d8\ud50c\ub7ec\ub4e4\uc5d0": 797, "\uc0d8\ud50c\ub7ec\ub4e4\uc740": [800, 802], "\uc0d8\ud50c\ub7ec\ub4e4\uc758": 802, "\uc0d8\ud50c\ub7ec\ub85c": 796, "\uc0d8\ud50c\ub7ec\ub97c": [796, 797, 800, 802], "\uc0d8\ud50c\ub7ec\uc640": 776, "\uc0d8\ud50c\ub9c1": [771, 800, 810], "\uc0d8\ud50c\ub9c1\uacfc": [777, 799], "\uc0d8\ud50c\ub9c1\ub41c": 811, "\uc0d8\ud50c\ub9c1\ub41c\ub2e4": 811, "\uc0d8\ud50c\ub9c1\ub420\uc9c0\ub97c": 777, "\uc0d8\ud50c\ub9c1\uc5d0": 795, "\uc0d8\ud50c\ub9c1\uc5d0\uc11c": [778, 802], "\uc0d8\ud50c\ub9c1\uc73c\ub85c": 799, "\uc0d8\ud50c\ub9c1\uc740": [777, 797, 798, 799], "\uc0d8\ud50c\ub9c1\uc744": [777, 795, 796, 798, 799, 811], "\uc0d8\ud50c\ub9c1\uc774": 799, "\uc0d8\ud50c\ub9c1\ud558\ub294": 800, "\uc0d8\ud50c\ub9c1\ud55c\ub2e4": [776, 778, 800], "\uc0d8\ud50c\ud558\ub294": 796, "\uc0dd\uac01\ud574": [796, 799], "\uc0dd\uac01\ud574\ubcf4\uc790": [795, 796], "\uc0dd\uae38": 803, "\uc0dd\ub7b5\ud55c\ub2e4": [774, 809], "\uc0dd\ub7b5\ud574\uc11c": 774, "\uc0dd\ub7b5\ud588\ub2e4": 774, "\uc0dd\uc120\ud55c": 779, "\uc0dd\uc131": [776, 783, 790, 804, 806], "\uc0dd\uc131\ub418\ub294": 806, "\uc0dd\uc131\ub41c": [777, 783, 797, 802], "\uc0dd\uc131\ub41c\ub2e4": [779, 807], "\uc0dd\uc131\uc2dc": 785, "\uc0dd\uc131\uc740": 777, "\uc0dd\uc131\uc744": [777, 800], "\uc0dd\uc131\uc774": 777, "\uc0dd\uc131\ud558\uace0": [777, 778, 784, 790, 796], "\uc0dd\uc131\ud558\uae30": [774, 776, 777, 781, 786], "\uc0dd\uc131\ud558\ub294": [777, 783, 786, 796, 802], "\uc0dd\uc131\ud558\ub294\uac83\uc744": 796, "\uc0dd\uc131\ud558\ub294\ub370": [777, 779, 796], "\uc0dd\uc131\ud558\uba70": 795, "\uc0dd\uc131\ud558\uba74": 811, "\uc0dd\uc131\ud558\uc9c0\ub9cc": 796, "\uc0dd\uc131\ud55c": [779, 800, 802, 808], "\uc0dd\uc131\ud55c\ub2e4": [777, 780, 784, 790, 796, 802], "\uc0dd\uc131\ud560": [777, 778, 787, 796, 809, 810], "\uc0e4\ub4dc": 777, "\uc11c\ub85c": [774, 779, 781, 782, 787, 797, 812], "\uc11c\ubc84": [776, 777], "\uc11c\ubc84\ub4e4\uac04\uc758": 777, "\uc11c\ubc84\ub4e4\uacfc": [776, 777], "\uc11c\ubc84\ub4e4\uc5d0\uc11c": 777, "\uc11c\ubc84\ub4e4\uc740": 776, "\uc11c\ubc84\ub4e4\uc744": [776, 777], "\uc11c\ubc84\ub4e4\uc774": 777, "\uc11c\ubc84\uc5d0": 778, "\uc11c\ube0c": [772, 774, 776, 778, 779, 796, 797, 798, 799, 806], "\uc11c\ube0c\uadf8\ub798\ud504": [806, 807], "\uc11c\ube0c\uadf8\ub798\ud504\ub97c": [787, 794], "\uc11c\ube0c\uadf8\ub798\ud504\uc5d0": 794, "\uc11c\ube0c\ubaa8\ub4c8": 805, "\uc11c\ube0c\ubaa8\ub4c8\ub4e4\uc744": 805, "\uc11c\ube0c\ubaa8\ub4c8\uc740": 805, "\uc11c\ube0c\uc14b\uc5d0": 779, "\uc11c\ube0c\uc14b\uc744": 777, "\uc11c\ube0c\ud074\ub798\uc2a4": 771, "\uc11c\ube0c\ud074\ub798\uc2a4\ub85c": 770, "\uc11c\ube0c\ud074\ub798\uc2a4\uc5d0\uc11c": 771, "\uc11c\uce58\ud558\ub294": 771, "\uc11e\uace0": 779, "\uc11e\uae30\uc804\uc758": 779, "\uc11e\ub294\ub2e4": 779, "\uc11e\uc5b4\uc57c\ud55c\ub2e4": 779, "\uc11e\uc5b4\uc900\ub2e4": 779, "\uc11e\uc778": 779, "\uc120\uc5b8\ub418\uc57c": 777, "\uc120\ud0dd": 799, "\uc120\ud0dd\uc744": 799, "\uc120\ud0dd\uc801\uc73c\ub85c": 780, "\uc120\ud0dd\uc801\uc778": 779, "\uc120\ud0dd\ud55c\ub2e4": [778, 795, 800, 803], "\uc120\ud0dd\ud560\uc9c0": 809, "\uc120\ud0dd\ud560\uc9c0\ub97c": 809, "\uc120\ud589": 796, "\uc120\ud615": 792, "\uc124\uba85\ub41c": 806, "\uc124\uba85\uc740": 809, "\uc124\uba85\uc744": [779, 797, 802], "\uc124\uba85\ud558\uace0": 770, "\uc124\uba85\ud558\uae30": 808, "\uc124\uba85\ud558\uae30\uc5d0\ub294": 809, "\uc124\uba85\ud55c": [800, 811], "\uc124\uba85\ud55c\ub2e4": [773, 774, 789, 796, 802, 812], "\uc124\uba85\ud588\ub4ef\uc774": 796, "\uc124\uc815": [776, 777, 780, 805], "\uc124\uc815\ub41c": 806, "\uc124\uc815\ub4e4\uc744": 779, "\uc124\uc815\uc5d0\uc11c\ub294": 790, "\uc124\uc815\uc73c\ub85c": [778, 779], "\uc124\uc815\uc73c\ub85c\ub294": [777, 790], "\uc124\uc815\uc740": 779, "\uc124\uc815\uc744": 779, "\uc124\uc815\ud558\uace0": 787, "\uc124\uc815\ud558\uae30": 798, "\uc124\uc815\ud558\ub294": 779, "\uc124\uc815\ud55c\ub2e4": 807, "\uc124\uc815\ud574\uc57c": 779, "\uc124\uce58\ub294": 779, "\uc124\uce58\ud558\ub294": 779, "\uc124\uce58\ud558\uc790": 779, "\uc124\uce58\ud55c\ub2e4": [773, 779], "\uc131\ub2a5": [795, 806], "\uc131\ub2a5\uc740": 803, "\uc131\ub2a5\uc774": 783, "\uc131\ub9bd\ud558\uae30": 792, "\uc131\uc9c8": 810, "\uc138": 779, "\uc138\uac00\uc9c0": [777, 806], "\uc138\uac1c\uc758": 802, "\uc138\ud305\uc5d0\uc11c": 777, "\uc139\uc158": 777, "\uc140\ud504": 779, "\uc148\ud50c\ub4e4": 811, "\uc14b": 779, "\uc14b\ub3c4": 777, "\uc14b\uc5d0": [777, 779, 802], "\uc14b\uc73c\ub85c": 777, "\uc14b\uc744": [776, 777], "\uc14b\uc758": 812, "\uc14b\uc774": 809, "\uc18c\uac1c\ub294": 783, "\uc18c\uac1c\ub97c": 781, "\uc18c\uac1c\ud55c": [795, 808, 810, 812], "\uc18c\uac1c\ud55c\ub2e4": [770, 771, 779, 781, 783, 789, 799, 804], "\uc18c\uc15c": 782, "\uc18c\uc2a4": [774, 779, 790, 791, 796, 800, 802, 805, 806], "\uc18c\uc2a4\ub4e4\ub85c": 774, "\uc18c\uc2a4\ub4e4\ub85c\ubd80\ud130": 783, "\uc18c\uc2a4\ub85c\ubd80\ud130": 786, "\uc18c\uc2a4\ub97c": [774, 781, 786], "\uc18d\ub3c4": [798, 799], "\uc18d\ub3c4\ub3c4": 786, "\uc18d\ub3c4\ub97c": 779, "\uc18d\ub4dc\ub97c": 792, "\uc18d\uc131": 779, "\uc18d\uc131\ub4e4\uc744": 779, "\uc18d\uc131\ub4e4\uc758": 779, "\uc18d\uc131\uc744": [779, 784, 793, 809], "\uc18d\uc131\uc758": 779, "\uc18d\ud558\ub294": 779, "\uc18d\ud558\ub294\uc9c0\ub97c": 777, "\uc18d\ud55c": [779, 790, 796], "\uc18d\ud55c\ub2e4": 778, "\uc194\ub8e8\uc158\uc740": 779, "\uc194\ub8e8\uc158\uc744": 779, "\uc218": [771, 772, 774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 790, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812], "\uc218\uac00": [792, 812], "\uc218\ub3c4": [778, 800, 806, 809], "\uc218\ub834\ud55c\ub2e4": 803, "\uc218\ub97c": [779, 796], "\uc218\ubc31\ub9cc": 795, "\uc218\ubcf4\ub2e4": 792, "\uc218\uc2dd\uc5d0\uc11c": 789, "\uc218\uc2ed\uc5b5": 779, "\uc218\uc2ed\uc5b5\uac1c\uc758": 795, "\uc218\uc5d0": 779, "\uc218\uc640": 777, "\uc218\uc758": [777, 778, 780, 796, 810], "\uc218\uc815\ud558\uba74": 776, "\uc218\uc815\ud560": 802, "\uc218\uc900\uc758": [777, 783, 807, 810], "\uc218\uc9d1\ud558\uace0": 777, "\uc218\uc9d1\ud558\uae30\ub97c": 812, "\uc218\uc9d1\ud558\ub294": 796, "\uc218\uc9d1\ud558\ub3c4\ub85d": 802, "\uc218\uc9d1\ud560": 796, "\uc218\ud559": [790, 806], "\uc218\ud559\uc801\uc73c\ub85c": 792, "\uc218\ud589": 780, "\uc218\ud589\ub418\uace0": 777, "\uc218\ud589\ub418\ub294": 812, "\uc218\ud589\ub418\ub294\uc9c0": 795, "\uc218\ud589\ub418\uba74": 777, "\uc218\ud589\ub41c": [780, 781, 796], "\uc218\ud589\ub41c\ub2e4": [771, 777, 779, 785, 803, 806, 810], "\uc218\ud589\ub420": [777, 790], "\uc218\ud589\uc774": 779, "\uc218\ud589\uc774\ub2e4": 777, "\uc218\ud589\ud558\uace0": [777, 812], "\uc218\ud589\ud558\uae30": [796, 803, 811], "\uc218\ud589\ud558\ub294": [776, 777, 780, 795, 799, 806, 812], "\uc218\ud589\ud558\uba74\uc11c": [776, 779], "\uc218\ud589\ud558\uc790": 809, "\uc218\ud589\ud558\uc9c0": 772, "\uc218\ud589\ud558\uc9c0\ub9cc": 810, "\uc218\ud589\ud55c\ub2e4": [779, 789, 799, 802, 803, 805, 806, 812], "\uc218\ud589\ud55c\ub2e4\uace0": 811, "\uc218\ud589\ud55c\ub2e4\ub294": 796, "\uc218\ud589\ud560": [776, 777, 779, 796, 799, 807, 810, 811], "\uc218\ud589\ud560\uc9c0\ub97c": 796, "\uc218\ud589\ud574\uc11c": [772, 810, 812], "\uc21c\uc11c\ub300\ub85c": 810, "\uc21c\uc11c\ub3c4": 771, "\uc21c\uc11c\ub3c4\ub294": 771, "\uc21c\uc11c\ub85c": 777, "\uc21c\uc11c\uc5d0": 786, "\uc21c\uc218": 790, "\uc21c\uc218\ud55c": 805, "\uc22b\uc790": 784, "\uc27d\uac8c": [771, 779], "\uc27d\ub2e4": 811, "\uc27d\uc9c0": 799, "\uc2a4\uce7c\ub77c": [782, 784, 791], "\uc2a4\ud06c\ub9bd\ud2b8": [777, 779, 780], "\uc2a4\ud06c\ub9bd\ud2b8\uac00": [777, 780], "\uc2a4\ud06c\ub9bd\ud2b8\ub294": 780, "\uc2a4\ud06c\ub9bd\ud2b8\ub4e4\uc744": 780, "\uc2a4\ud06c\ub9bd\ud2b8\ub97c": [776, 777, 779], "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0": 777, "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c": 780, "\uc2a4\ud06c\ub9bd\ud2b8\uc774\ub2e4": 803, "\uc2a4\ud0a4\ub9c8": 779, "\uc2a4\ud0a4\ub9c8\ub97c": 779, "\uc2a4\ud0a4\ub9c8\uc774\ub2e4": 787, "\uc2a4\ud0ed\uc5d0\uc11c": 790, "\uc2a4\ud1a0\ub9ac\uc9c0": 780, "\uc2ac\ub77c\uc774\uc2a4\ub294": 784, "\uc2dc\uac01\ud654\ud558\uba74": 795, "\uc2dc\uac04": 803, "\uc2dc\uac04\uc744": [771, 775, 799], "\uc2dc\ub098\ub9ac\uc624\ub4e4\ub85c": 795, "\uc2dc\ub4dc": [778, 796], "\uc2dc\ub9ac\uc988\ub85c": 787, "\uc2dc\uc2a4\ud15c\uc5d0\uc11c": 782, "\uc2dc\uc791": 780, "\uc2dc\uc791\uc73c\ub85c": 781, "\uc2dc\uc791\ud558\uace0": 787, "\uc2dc\uc791\ud558\uae30": 780, "\uc2dc\uc791\ud558\ub294": [779, 787, 796], "\uc2dc\uc791\ud55c\ub2e4": [786, 795], "\uc2dc\uc791\ud560": 810, "\uc2dc\uc791\ud574\uc11c": 799, "\uc2dd\ubcc4\ub420": 777, "\uc2e4\uc81c": [779, 806], "\uc2e4\uc81c\ub85c": 806, "\uc2e4\ud589": 778, "\uc2e4\ud589\ub418\ub294": [779, 780, 790], "\uc2e4\ud589\ub418\uba74": 777, "\uc2e4\ud589\ub418\uc57c": 780, "\uc2e4\ud589\ub41c": 779, "\uc2e4\ud589\ub41c\ub2e4": [776, 777, 779, 812], "\uc2e4\ud589\ub420": [777, 779, 780], "\uc2e4\ud589\ud558\uace0": [772, 777, 806], "\uc2e4\ud589\ud558\ub294": [776, 777, 792], "\uc2e4\ud589\ud558\uba74": 777, "\uc2e4\ud589\ud55c\ub2e4": 776, "\uc2e4\ud589\ud560": 777, "\uc2e4\ud589\ud574\uc11c": [776, 779], "\uc2e4\ud589\ud574\uc57c\ud558\uace0": 777, "\uc2e4\ud5d8\uc801\uc73c\ub85c": 778, "\uc2e4\ud5d8\uc801\uc778": 798, "\uc2f1\uae00": 777, "\uc2f6\ub2e4": [779, 787], "\uc2f6\ub2e4\uba74": [772, 779, 801, 802, 812], "\uc2f6\uc73c\uba74": 790, "\uc2f6\uc740": [777, 787, 794, 795, 811], "\uc30d\ub4e4": 782, "\uc30d\ub4e4\ub85c\ub9cc": 811, "\uc30d\uc5d0": 811, "\uc30d\uc73c\ub85c": 786, "\uc30d\uc744": [782, 800], "\uc30d\uc758": 800, "\uc30d\uc774\ub2e4": 810, "\uc30d\uc778": 801, "\uc313\uc544\uc11c": 812, "\uc4f0\uae30\ub97c": 777, "\uc4f0\uc774\ub294": [809, 810], "\uc544\ub2c8\uae30": 806, "\uc544\ub2c8\ub2e4": [777, 803], "\uc544\ub2c8\ub77c": [783, 810, 812], "\uc544\ub2cc": [801, 810], "\uc544\ub2cc\uc9c0\ub97c": 811, "\uc544\ub2d8\uc744": 801, "\uc544\ub798": [771, 776, 777, 778, 779, 780, 783, 784, 786, 787, 790, 796, 797, 799, 800, 801, 809, 811, 812], "\uc544\ub798\uc640": [786, 797, 802, 809, 810], "\uc544\ub798\uc758": [772, 787], "\uc544\ub9c8\ub3c4": 810, "\uc544\ubb34\uac83\ub3c4": 806, "\uc544\uc6c3\ud48b\ub4e4\uc744": 807, "\uc544\uc6c3\ud48b\uc740": 779, "\uc544\uc774\ub514\uc5b4\ub294": 811, "\uc544\uc774\ub514\uc5b4\ub97c": 810, "\uc544\uc774\ud15c\ub4e4\uc744": 800, "\uc544\uc774\ud15c\ub4e4\uc758": 782, "\uc544\uc774\ud15c\uc640": 800, "\uc544\uc774\ud15c\uc740": 810, "\uc544\uc774\ud15c\uc744": 802, "\uc544\uc8fc": [776, 783, 797, 799, 800], "\uc544\uc9c1": 803, "\uc544\ud06c\ub4e4": 782, "\uc544\ud0a4\ud14d\ud0c0": 790, "\uc548\uc5d0\ub294": 779, "\uc548\uc5d0\uc11c": 807, "\uc54a\uaca0\ub2e4": 783, "\uc54a\uace0": [772, 779, 787, 790, 803, 810], "\uc54a\uae30": [796, 798], "\uc54a\ub294": [779, 790, 800, 803], "\uc54a\ub294\ub2e4": [777, 779, 782, 798, 809, 810], "\uc54a\ub294\ub2e4\uba74": [787, 798], "\uc54a\ub294\uc9c0": 806, "\uc54a\ub2e4": [777, 783, 799, 809, 810, 811], "\uc54a\ub2e4\uba74": 808, "\uc54a\uc558\ub358": 797, "\uc54a\uc73c\uba74": 797, "\uc54a\uc740": [772, 774, 775, 779, 780, 796, 806], "\uc54a\uc744": 779, "\uc54a\uc9c0\ub9cc": 783, "\uc54c": 801, "\uc54c\uace0": [790, 811], "\uc54c\uace0\ub9ac\uc998\uacfc\ub294": 799, "\uc54c\uace0\ub9ac\uc998\ub4e4": 795, "\uc54c\uace0\ub9ac\uc998\uc740": 799, "\uc54c\uace0\ub9ac\uc998\uc744": [777, 810], "\uc54c\ub824\uc8fc\uace0": 802, "\uc54c\ub824\uc900\ub2e4": [779, 787], "\uc54c\ub824\uc9c4": 783, "\uc54c\uc218": 796, "\uc54c\uc544\ub0bc": 796, "\uc54c\uc544\ub450\uc790": [774, 787, 802, 812], "\uc54c\uc544\ubcf8\ub2e4": [774, 795, 808], "\uc54c\uc544\ubd24\ub2e4": 809, "\uc54c\ud30c\ubcb3": 779, "\uc55e": 809, "\uc55e\uc5d0": 806, "\uc55e\uc5d0\uc11c": [777, 802, 811], "\uc55e\uc73c\ub85c": 778, "\uc55e\uc73c\ub85c\uc758": 803, "\uc560\ub2c8\ub9e4\uc774\uc158\uc740": 799, "\uc564\ud2f0\ud2f0\ub4e4": 781, "\uc57d": 798, "\uc57d\uac04": [797, 810, 811], "\uc591\ubc29\ud5a5\uc5d0": 786, "\uc591\ubc29\ud5a5\uc758": 786, "\uc591\ubc29\ud5a5\uc774\uae30": 782, "\uc5b4\ub290\uc815\ub3c4": 797, "\uc5b4\ub514\uc11c\ub098": 772, "\uc5b4\ub5a4": [777, 779, 793, 796, 797, 802, 805, 811], "\uc5b4\ub5bb\uac8c": [770, 771, 777, 778, 779, 782, 789, 795, 796, 799, 801, 802, 805, 812], "\uc5b4\ub824\uc6b8": 795, "\uc5b8\uae09\ud55c": 790, "\uc5b8\uae09\ud588\ub4ef\uc774": 777, "\uc5b8\ub354\ud50c\ub85c\uc6b0": 803, "\uc5b8\uc5b4\uc5d0\uc11c": 786, "\uc5bb\uae30": [776, 779, 809], "\uc5bb\ub294": [778, 797], "\uc5bb\ub294\ub2e4": [797, 801, 802, 810], "\uc5bb\uc5b4\uc9c4": 807, "\uc5bb\uc740": [797, 807], "\uc5bb\uc744": [787, 796, 802, 808, 811], "\uc5bc\ub9c8\ub098": 796, "\uc5c5\ub370\uc774\ud2b8": [789, 790], "\uc5c5\ub370\uc774\ud2b8\ub97c": [777, 790, 794, 798, 803], "\uc5c5\ub370\uc774\ud2b8\ud558\uace0": 790, "\uc5c5\ub370\uc774\ud2b8\ud558\ub294": [796, 801, 803, 806, 810], "\uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4": [789, 790, 810], "\uc5c6\uac70\ub098": 782, "\uc5c6\uac8c": 806, "\uc5c6\uace0": 778, "\uc5c6\uae30": 792, "\uc5c6\ub294": [779, 783, 795, 799], "\uc5c6\ub294\uc9c0\ub97c": 802, "\uc5c6\ub2e4": [777, 778, 787, 796, 806, 810], "\uc5c6\ub2e4\ub294": [777, 799], "\uc5c6\uc560\uace0": 777, "\uc5c6\uc5b4\uc57c": 779, "\uc5c6\uc744": 782, "\uc5c6\uc774": 780, "\uc5d0": [774, 776, 777, 778, 779, 780, 787, 790, 793, 796, 797, 802, 803, 806, 807, 809, 810, 811, 812], "\uc5d0\ub294": [797, 802], "\uc5d0\ub7ec\ub97c": 796, "\uc5d0\uc11c": [770, 771, 772, 775, 777, 778, 779, 780, 782, 786, 791, 795, 796, 799, 800, 802, 806, 808, 810, 812], "\uc5d0\uc11c\ub294": [782, 809], "\uc5d0\uc11c\uc758": 801, "\uc5d0\uc9c0": [776, 778, 781, 782, 784, 789, 790, 792, 793, 795, 796, 800, 801, 808, 810, 811, 812], "\uc5d0\uc9c0\uac00": [779, 782, 786, 787, 797, 809, 810, 811], "\uc5d0\uc9c0\ub098": 779, "\uc5d0\uc9c0\ub294": [778, 782, 786, 787], "\uc5d0\uc9c0\ub3c4": 796, "\uc5d0\uc9c0\ub4e4\uacfc": 797, "\uc5d0\uc9c0\ub4e4\ub3c4": [782, 797], "\uc5d0\uc9c0\ub4e4\ub9cc\uc744": 796, "\uc5d0\uc9c0\ub4e4\uc5d0": [779, 797, 810], "\uc5d0\uc9c0\ub4e4\uc740": [784, 786, 797], "\uc5d0\uc9c0\ub4e4\uc744": [777, 781, 782, 786, 795, 797, 798, 800], "\uc5d0\uc9c0\ub4e4\uc758": [779, 782, 784, 787, 792, 796, 797, 800, 809, 811], "\uc5d0\uc9c0\ub4e4\uc774": [774, 779, 782, 793, 797, 811], "\uc5d0\uc9c0\ub85c": [782, 783, 811], "\uc5d0\uc9c0\ub85c\uc758": 792, "\uc5d0\uc9c0\ub97c": [776, 777, 778, 779, 783, 786, 787, 793, 796, 797, 800, 803], "\uc5d0\uc9c0\ubcc4": [789, 790], "\uc5d0\uc9c0\uc5d0": [779, 784, 786, 787, 789, 792, 809], "\uc5d0\uc9c0\uc5d0\ub294": 786, "\uc5d0\uc9c0\uc640": [777, 779, 787], "\uc5d0\uc9c0\uc640\ub294": 797, "\uc5d0\uc9c0\uc744": 796, "\uc5d0\uc9c0\uc758": [776, 777, 779, 781, 782, 787, 789, 790, 791, 793, 796, 797, 798, 800, 805, 809, 810, 811, 812], "\uc5d0\uc9c0\uc774\ub2e4": 786, "\uc5d0\uce58": [777, 783, 810], "\uc5d4\ud130\ub9ac": 811, "\uc5d4\ud2b8\ub9ac\ub97c": 779, "\uc5ec\uae30\uc11c": [778, 779, 796, 802, 805, 807, 809, 810, 811, 812], "\uc5ec\uae30\uc11c\ub294": [779, 808], "\uc5ec\uae30\uc11c\ubd80\ud130\ub294": 779, "\uc5ec\ub7ec": [774, 776, 777, 778, 779, 782, 783, 786, 787, 793, 795, 796, 801, 805, 806, 807, 810, 811, 812], "\uc5ec\ub7ec\uac00\uc9c0\uac00": 811, "\uc5ec\ub7ec\uac1c\uac00": 807, "\uc5ec\ub7ec\ubc88": 777, "\uc5ec\ub7ec\ubd84": 802, "\uc5ec\ub7ec\ubd84\ub9cc\uc758": [797, 802], "\uc5ec\ub7ec\ubd84\uc740": 812, "\uc5ec\ub7ec\ubd84\uc758": [790, 804], "\uc5ec\ubd80\ub97c": 779, "\uc5ec\uc804\ud788": [796, 799, 802], "\uc5ec\uc9c0\uac00": 790, "\uc5ed": 797, "\uc5ed\ubc29\ud5a5": 797, "\uc5ed\ubc29\ud5a5\uc758": 797, "\uc5ed\uc2dc": [773, 785, 802], "\uc5ed\ud560\uc744": [779, 789, 796], "\uc5f0\uacb0": [782, 806, 811], "\uc5f0\uacb0\ub418\ub294": 796, "\uc5f0\uacb0\ub418\uc5b4": [777, 779, 782], "\uc5f0\uacb0\ub418\uc9c0": 796, "\uc5f0\uacb0\ub41c": [786, 807, 811], "\uc5f0\uacb0\ub41c\ub2e4": 782, "\uc5f0\uacb0\ub85c": 782, "\uc5f0\uacb0\uc744": 777, "\uc5f0\uacb0\ud558\uace0": [792, 797, 809], "\uc5f0\uacb0\ud558\ub294": [782, 809, 810], "\uc5f0\uacb0\ud55c\ub2e4": [777, 782], "\uc5f0\uacb0\ud574\uc11c": 810, "\uc5f0\uad00\ub41c": [778, 787, 797, 807], "\uc5f0\uc0b0": [774, 777, 781, 785, 792, 795, 803, 810], "\uc5f0\uc0b0\uacfc": [776, 793], "\uc5f0\uc0b0\ub4e4\uc740": [803, 806, 810], "\uc5f0\uc0b0\ub4e4\uc744": 810, "\uc5f0\uc0b0\ub9cc": 790, "\uc5f0\uc0b0\uc18d\ub3c4\uac00": 792, "\uc5f0\uc0b0\uc5d0": 804, "\uc5f0\uc0b0\uc73c\ub85c": 790, "\uc5f0\uc0b0\uc740": [785, 804, 806], "\uc5f0\uc0b0\uc744": [776, 787, 789, 790, 792, 801, 806, 810], "\uc5f0\uc0b0\uc758": 792, "\uc5f0\uc0b0\uc774": [799, 806], "\uc5f0\uc18d\ub41c": [778, 779], "\uc5fc\ub450\ud574\ub450\uace0": 776, "\uc5fc\ub450\ud574\uc11c": 810, "\uc601\ubb38": 788, "\uc601\uc18d\uc801\uc778": 777, "\uc601\uc5ed\uc5d0\uc11c\ub294": 799, "\uc608": [777, 780, 783, 784, 786, 787, 803, 809], "\uc608\ub294": [774, 775, 780, 811], "\uc608\ub4e4": 782, "\uc608\ub4e4\ub85c": 799, "\uc608\ub4e4\uc744": 774, "\uc608\ub85c": [771, 774, 796, 801, 802], "\uc608\ub97c": [775, 777, 778, 779, 780, 781, 782, 784, 787, 790, 791, 796, 797, 798, 800, 801, 802, 809, 810, 811, 812], "\uc608\ub97c\ub4e4\uba74": 787, "\uc608\uc758": 784, "\uc608\uc774\ub2e4": [772, 779, 800], "\uc608\uc804\uacfc": 796, "\uc608\uc815\uc774\ub2e4": 777, "\uc608\uc81c": [800, 802, 809, 812], "\uc608\uc81c\uac00": 812, "\uc608\uc81c\ub294": [777, 778, 779, 791, 793, 797, 800, 802, 803, 810, 811], "\uc608\uc81c\ub4e4\uc740": 808, "\uc608\uc81c\ub4e4\uc744": [774, 775, 812], "\uc608\uc81c\ub4e4\uc774": 807, "\uc608\uc81c\ub85c": [774, 800, 804, 809], "\uc608\uc81c\ub97c": [786, 792, 808, 812], "\uc608\uc81c\uc5d0": 809, "\uc608\uc81c\uc5d0\uc11c": 809, "\uc608\uc81c\uc5d0\uc11c\uc640": 774, "\uc608\uc81c\uc640": 802, "\uc608\uc81c\uc758": [774, 784, 796], "\uc608\uc81c\uc774\ub2e4": [776, 779, 783, 787, 792, 797, 810, 811], "\uc608\uc81c\uc778": [800, 802], "\uc608\uc81c\ucc98\ub7fc": 772, "\uc608\uce21": [777, 795, 797, 802, 808, 809, 810, 812], "\uc608\uce21\uac12\uc744": 809, "\uc608\uce21\uacfc": 811, "\uc608\uce21\ub97c": 800, "\uc608\uce21\uc740": [800, 809, 811], "\uc608\uce21\uc744": [800, 809, 810, 811, 812], "\uc608\uce21\uc758": [800, 809], "\uc608\uce21\ud558\uace0": [809, 811, 812], "\uc608\uce21\ud558\uae30": [797, 800], "\uc608\uce21\ud558\uae30\ub9cc": 800, "\uc608\uce21\ud558\ub294": [797, 809, 811], "\uc608\uce21\ud558\uba74": 809, "\uc608\uce21\ud560": 809, "\uc624\ub958": 788, "\uc624\ub978\ucabd": 792, "\uc624\ub978\ucabd\uc73c\ub85c": 810, "\uc624\uc9c1": [773, 787], "\uc624\ud37c\ub808\uc774\ud130\ub294": 777, "\uc624\ud504\ub77c\uc778": 795, "\uc62c\ub824\uc11c": 798, "\uc62c\ub824\uc57c\ud560": 795, "\uc62e\uaca8\ub193\ub294\ub2e4": 797, "\uc62e\uae30\ub294": [772, 802], "\uc635\uc158": 805, "\uc635\uc158\ub4e4": 783, "\uc635\uc158\ub4e4\uc744": 783, "\uc635\uc158\uc5d0": 806, "\uc635\uc158\uc73c\ub85c": 805, "\uc640": [771, 774, 775, 776, 777, 778, 779, 781, 782, 784, 787, 790, 792, 796, 797, 798, 800, 802, 803, 804, 806, 807, 809, 810, 811, 812], "\uc644\ub8cc\ub418\uba74": [779, 790], "\uc644\ub8cc\ub41c\ub2e4": 777, "\uc644\ubcbd\ud55c": 774, "\uc644\uc804\ud558\uac8c": 798, "\uc644\uc804\ud55c": 776, "\uc644\uc804\ud788": [797, 810], "\uc678\ubd80": [774, 781, 786, 802], "\uc678\uc5d0": 779, "\uc67c\ucabd": 792, "\uc67c\ucabd\ubd80\ud130": 810, "\uc694\uad6c\ub418\uae30": 790, "\uc694\uad6c\ub7c9\uc740": 798, "\uc694\uc18c\ub294": 806, "\uc694\uc57d\ud55c\ub2e4": 810, "\uc6a9\ub3c4\ub97c": 809, "\uc6a9\ub7c9\uc744": 795, "\uc6b0\ub9ac\ub294": [777, 779, 799, 809, 812], "\uc6b0\uc120": [773, 777, 778, 787, 796, 809], "\uc6cc\ud06c\ub85c\ub4dc": 795, "\uc6cc\ud06c\ub85c\ub4dc\ub97c": 779, "\uc6d0\uaca9": 771, "\uc6d0\ub798": 790, "\uc6d0\ub798\uc758": [787, 806, 809, 810], "\uc6d0\ubcf8": [779, 796, 800, 801], "\uc6d0\ubcf8\uc758": 796, "\uc6d0\uc18c\ub4e4\uc740": 777, "\uc6d0\uc18c\ub97c": 802, "\uc6d0\uce59\uc740": 801, "\uc6d0\ud558\ub294": [794, 802, 809], "\uc6d0\ud55c\ub2e4\uba74": [796, 800], "\uc6d0\ud560": 812, "\uc6d0\ud568": 782, "\uc6d0\ud65c\ud558\uac8c": 804, "\uc704": [772, 774, 779, 784, 787, 789, 790, 792, 796, 798, 802, 809, 810, 812], "\uc704\ub97c": 811, "\uc704\uc5d0\uc11c": [790, 811, 812], "\uc704\uc758": [774, 796, 810], "\uc704\uc8fc": 784, "\uc704\uce58\uc774\ub2e4": 780, "\uc704\uce58\ud55c": 785, "\uc704\uce58\ud55c\ub2e4": 796, "\uc704\ud55c": [771, 773, 775, 776, 777, 778, 782, 783, 786, 787, 790, 795, 797, 799, 800, 802, 807, 808, 809, 811, 812], "\uc704\ud568\uc774\ub2e4": 774, "\uc704\ud568\uc774\uc9c0": 801, "\uc704\ud574": [770, 774, 775, 777, 778, 797], "\uc704\ud574\uc11c": [771, 772, 774, 776, 777, 778, 779, 780, 782, 784, 786, 787, 790, 793, 796, 799, 800, 802, 803, 805, 807, 808, 809, 810, 811, 812], "\uc704\ud574\uc11c\ub294": [779, 786, 790, 796, 800, 801, 802], "\uc704\ud574\uc11c\uc774\ub2e4": [797, 806], "\uc704\ud578": 777, "\uc720\ub3c4\ub41c": 797, "\uc720\ub3c4\ud558\ub294": 796, "\uc720\uba85\ud558\uace0": 812, "\uc720\uba85\ud55c": [777, 787], "\uc720\uc0ac\ud558\ub2e4": [802, 809], "\uc720\uc6a9\ud558\ub2e4": [777, 787], "\uc720\uc6a9\ud55c": [774, 775], "\uc720\uc758\ud558\uc790": [773, 783, 796, 802], "\uc720\uc77c\ud55c": [776, 777, 797, 800, 810], "\uc720\uc9c0\ud558\uae30": 810, "\uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744": 783, "\uc720\ud6a8\ud558\uc9c0": 806, "\uc73c\ub85c": [778, 788, 790, 807], "\uc740": [773, 774, 777, 778, 779, 780, 781, 789, 797, 800, 801, 802, 805, 811], "\uc740\ub2c9": 805, "\uc744": [771, 774, 776, 777, 778, 779, 780, 782, 783, 788, 790, 793, 796, 801, 802, 807, 809, 811, 812], "\uc758": [770, 771, 774, 775, 777, 778, 779, 780, 781, 782, 784, 789, 790, 796, 797, 798, 800, 802, 806, 807, 809, 810, 811, 812], "\uc758\ubbf8\ud558\ub294\ub370": 805, "\uc758\ubbf8\ud55c\ub2e4": [779, 790, 796, 802, 807], "\uc758\ubbf8\ud560": 782, "\uc758\uc874\uc131": 795, "\uc758\uc874\ud558\uae30": 799, "\uc758\ud574": 779, "\uc758\ud574\uc11c": 797, "\uc774": [770, 771, 773, 774, 776, 777, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812], "\uc774\uac83\ub4e4\uc740": [770, 802, 806, 807], "\uc774\uac83\ub4e4\uc744": [777, 787, 802], "\uc774\uac83\uc740": [787, 790, 797, 799], "\uc774\uac83\uc744": 787, "\uc774\uace0": [774, 810], "\uc774\ub098": [778, 803, 809, 811], "\uc774\ub294": [770, 771, 775, 776, 777, 778, 779, 783, 785, 786, 790, 794, 796, 797, 798, 806, 807, 809, 812], "\uc774\ub2e4": [774, 777, 787, 790, 793], "\uc774\ub4e4": [782, 796], "\uc774\ub4e4\uc740": 782, "\uc774\ub4e4\uc744": 779, "\uc774\ub54c": 774, "\uc774\ub77c\uace0": [771, 806, 810], "\uc774\ub77c\ub294": 809, "\uc774\ub77c\uba74": [772, 812], "\uc774\ub7f0": [773, 783, 796, 804, 806, 810], "\uc774\ub904\uc9c4\ub2e4": [774, 787, 811], "\uc774\ub97c": [770, 771, 772, 774, 775, 777, 778, 779, 783, 786, 787, 790, 791, 792, 795, 796, 797, 800, 801, 802, 803, 809, 810, 811], "\uc774\ub984": [784, 790], "\uc774\ub984\uacfc": 777, "\uc774\ub984\ub4e4\uc744": 779, "\uc774\ub984\uc740": [777, 779], "\uc774\ub984\uc744": [777, 779, 784, 790], "\uc774\ub984\uc758": [779, 784, 809], "\uc774\ub984\uc774": 777, "\uc774\ub984\uc774\uace0": 790, "\uc774\ub984\uc774\ub2e4": [779, 790], "\uc774\ubbf8": [772, 785, 808, 812], "\uc774\ubd84": [782, 787, 797, 806, 807], "\uc774\uc0c1": 790, "\uc774\uc288\uac00": 803, "\uc774\uc5b4\uc9c4": 786, "\uc774\uc640": [774, 790], "\uc774\uc678\uc758": [798, 805], "\uc774\uc6a9\ud55c": [809, 812], "\uc774\uc6a9\ud560": [783, 797], "\uc774\uc6a9\ud574\uc11c": [784, 787, 806, 810], "\uc774\uc6c3": [777, 799, 812], "\uc774\uc6c3\ub4e4\ub85c\ubd80\ud130": [802, 812], "\uc774\uc6c3\ub4e4\uc5d0": [799, 812], "\uc774\uc720\ub294": [771, 777, 779, 783, 786, 790, 792, 796, 811], "\uc774\uc804": [796, 797, 809, 810], "\uc774\uc804\uc5d0": 809, "\uc774\uc81c": [791, 800, 802], "\uc774\uc81c\uc758": 784, "\uc774\uc885": [781, 782, 789, 806, 812], "\uc774\uc9c4": [809, 812], "\uc774\ud130\ub808\uc774\uc158\uc5d0": 810, "\uc774\ud558\uc778": 786, "\uc774\ud56d": 790, "\uc774\ud574\ud558\uace0": 795, "\uc775\uc219\ud558\ub2e4\uba74": 801, "\uc778": [779, 795, 807, 810], "\uc778\ub371\uc2a4\ub97c": [777, 806], "\uc778\ubc14\uc6b4\ub4dc": 796, "\uc778\uc2a4\ud134\uc2a4\ub97c": 782, "\uc778\uc2a4\ud134\uc2a4\uc5d0": 812, "\uc778\uc790": 790, "\uc778\uc790\ub294": 796, "\uc778\uc790\ub4e4\uc740": 798, "\uc778\uc790\ub4e4\uc744": 779, "\uc778\uc790\ub4e4\uc774": 785, "\uc778\uc790\ub85c": [779, 786, 790, 793, 797, 800, 802, 807], "\uc778\uc790\ub97c": [780, 798], "\uc778\uc790\uc774\ub2e4": 779, "\uc778\uc9c0": 797, "\uc778\ucea1\uc290\ub808\uc774\uc158\uc774\ub2e4": 807, "\uc778\ucf54\ub529\ud55c": 782, "\uc778\ud130\uc5d1\uc158\uc744": 776, "\uc778\ud130\ud328\uc774\uc2a4\ub97c": 777, "\uc778\ud130\ud398\uc774\uc2a4\ub294": 793, "\uc778\ud130\ud398\uc774\uc2a4\ub97c": [777, 781, 784, 787], "\uc778\ud130\ud398\uc774\uc2a4\uc758": 784, "\uc778\ud2f0\ud2f0\ub4e4\uacfc": 782, "\uc77c": [782, 792], "\uc77c\ub3c4": 809, "\uc77c\ub4e4\uc5d0": 774, "\uc77c\ubc18": [777, 796], "\uc77c\ubc18\uc801": 810, "\uc77c\ubc18\uc801\uc73c\ub85c": [770, 774, 777, 786, 790, 792, 795, 801, 804, 806], "\uc77c\ubc18\uc801\uc778": [783, 787, 805, 806, 809, 810], "\uc77c\ubc88\uc801\uc73c\ub85c": 774, "\uc77c\ubd80": [791, 802], "\uc77c\ubd80\ub294": 774, "\uc77c\ubd80\ub97c": 795, "\uc77c\ubd80\ub9cc": 794, "\uc77c\ubd80\uc5d0": 789, "\uc77c\ubd80\uc5d0\ub9cc": 784, "\uc77c\ubd80\uc774\uae30": 777, "\uc77c\uc5b4\ub098\ub294\uc9c0\ub97c": 799, "\uc77c\uc5b4\ub09c\ub2e4": [774, 777], "\uc77c\uc744": [772, 802, 812], "\uc77c\uc774": 774, "\uc77c\uc774\ud0ac": 806, "\uc77d\uae30": 787, "\uc77d\uae30\uc640": 777, "\uc77d\ub294": 783, "\uc77d\uc744": 796, "\uc784\ubc30\ub529\uc740": 777, "\uc784\ubca0\ub529": 778, "\uc784\ubca0\ub529\uacfc": 777, "\uc784\ubca0\ub529\ub4e4\uc5d0": 777, "\uc784\ubca0\ub529\ub4e4\uc740": 778, "\uc784\ubca0\ub529\ub4e4\uc744": [777, 779], "\uc784\ubca0\ub529\uc744": [776, 777, 778, 779, 811, 812], "\uc784\ubca0\ub529\uc774": 777, "\uc784\uc2dc\ub85c": 775, "\uc784\uc758\ub85c": [796, 808], "\uc784\uc758\uc131\uc744": 799, "\uc784\uc758\uc758": [779, 796, 809, 811], "\uc785\ub825": [771, 777, 797, 800, 801, 802, 805, 806, 807, 810], "\uc785\ub825\uacfc": [790, 796], "\uc785\ub825\uae4c\uc9c0\uc758": 795, "\uc785\ub825\uc5d0": [795, 806], "\uc785\ub825\uc73c\ub85c": [777, 786, 796, 802, 809, 812], "\uc785\ub825\uc740": [797, 810], "\uc785\ub825\ud558\ub294": 800, "\uc785\ub825\ud558\uba74": 809, "\uc785\ub825\ud574\uc11c": [797, 802], "\uc788\uac8c\ud55c\ub2e4": 775, "\uc788\uace0": [771, 777, 779, 790, 796, 801, 803, 804, 807, 810, 811, 812], "\uc788\uae30": [771, 774, 790, 796, 797], "\uc788\ub294": [770, 771, 776, 777, 779, 782, 783, 785, 792, 797, 798, 799, 800, 802, 805, 806, 807, 808, 809, 810, 812], "\uc788\ub294\ub370": [779, 783, 806, 811], "\uc788\ub294\uc9c0": [779, 802], "\uc788\ub2e4": [770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812], "\uc788\ub2e4\uace0": 808, "\uc788\ub2e4\ub294": [779, 787], "\uc788\ub2e4\uba74": [779, 787, 802, 811], "\uc788\ub3c4\ub85d": [774, 777, 796], "\uc788\ub4ef\uc774": [774, 796], "\uc788\uc5b4\uc11c": 803, "\uc788\uc5b4\uc57c": [772, 774, 779, 806, 807], "\uc788\uc5b4\uc57c\ub9cc": 777, "\uc788\uc73c\ub2c8": 783, "\uc788\uc73c\uba70": [774, 779, 805], "\uc788\uc744": [774, 787, 802], "\uc788\uc74c": 810, "\uc788\uc74c\uc744": [782, 799, 807, 812], "\uc788\uc9c0": 777, "\uc788\uc9c0\ub9cc": [796, 797], "\uc790\ub3d9\uc73c\ub85c": [772, 777, 778, 790, 801, 803], "\uc790\ub3d9\uc744": 772, "\uc790\ub3d9\ud654\ud560": 772, "\uc790\ub8cc": [777, 781, 782], "\uc790\uc138\ud558\uac8c": 806, "\uc790\uc138\ud55c": [774, 783, 790, 794, 809], "\uc790\uc138\ud788": 801, "\uc790\uc2e0\uc758": [802, 812], "\uc790\uc6d0\uc744": 795, "\uc790\uccb4": 782, "\uc791\ub3d9\uc744": 798, "\uc791\ub3d9\ud558\uac8c": 796, "\uc791\ub3d9\ud558\ub3c4\ub85d": 801, "\uc791\ub3d9\ud558\uba74\uc11c": 776, "\uc791\uc131": [789, 806], "\uc791\uc131\ud558\uace0\uc790": 809, "\uc791\uc131\ud558\ub294": [801, 812], "\uc791\uc131\ud558\uba74": 809, "\uc791\uc131\ud55c\ub2e4": 809, "\uc791\uc131\ud560": [809, 812], "\uc791\uc131\ud574\uc57c\ud55c\ub2e4": 777, "\uc791\uc5c5": 780, "\uc791\uc5c5\uc740": 771, "\uc791\uc740": [777, 779, 796, 803, 808, 810], "\uc798": 783, "\uc798\ub77c\uc11c": 801, "\uc7a0\uc7ac\uc801\uc73c\ub85c": 797, "\uc7a0\uc7ac\uc801\uc73c\ub85c\ub294": 779, "\uc7a0\uc7ac\uc801\uc778": 806, "\uc7a1": 780, "\uc7a1\ub294": [779, 796], "\uc7a1\uc744": [776, 780], "\uc7a1\uc774": 780, "\uc7a5\ub294": 789, "\uc7a5\uc5d0\uc11c\ub294": [804, 808], "\uc7a5\uc740": [770, 781, 795, 808], "\uc7a5\uc758": [771, 808], "\uc7a5\uc810\uc740": 779, "\uc7a5\uc810\uc744": 810, "\uc7ac\ubc30\uc5f4\ud558\ub294": 774, "\uc7ac\uc0ac\uc6a9\ub420": 806, "\uc7ac\uc0ac\uc6a9\ud55c\ub2e4": 800, "\uc7ac\uc0ac\uc6a9\ud560": 797, "\uc7ac\uc791\uc131\ud574\uc11c": 796, "\uc7ac\ud560\ub2f9": 779, "\uc7ac\ud560\ub2f9\uc774": 779, "\uc7ac\ud560\ub2f9\ud55c\ub2e4": 779, "\uc7ac\ud65c\uc6a9\ud574\uc11c": 811, "\uc800\uc790\uac00": 782, "\uc800\uc791\uc744": 782, "\uc800\uc7a5": [775, 791], "\uc800\uc7a5\uacf5\uac04\ub3c4": 786, "\uc800\uc7a5\uacfc": [770, 771], "\uc800\uc7a5\ub418\ub294": [780, 786], "\uc800\uc7a5\ub418\uc5b4": [777, 796, 802, 812], "\uc800\uc7a5\ub418\uc5b4\uc57c": 779, "\uc800\uc7a5\ub41c": [779, 802], "\uc800\uc7a5\ub41c\ub2e4": [777, 778, 779, 785, 787, 807], "\uc800\uc7a5\ub420": [779, 780], "\uc800\uc7a5\uc18c\ub97c": 787, "\uc800\uc7a5\uc18c\uc5d0": 802, "\uc800\uc7a5\uc740": 809, "\uc800\uc7a5\uc774": 792, "\uc800\uc7a5\ud558\uace0": [776, 779, 783, 787], "\uc800\uc7a5\ud558\uae30": [771, 775, 783, 784, 807], "\uc800\uc7a5\ud558\ub294": [775, 777, 779, 780, 787, 790], "\uc800\uc7a5\ud558\ub294\ub370": [770, 779, 786, 795], "\uc800\uc7a5\ud55c\ub2e4": [777, 778, 779, 780, 783, 784, 790], "\uc800\uc7a5\ud560": [771, 779, 780, 784, 792], "\uc801\uac8c": 786, "\uc801\ub2e4": 802, "\uc801\uc6a9\ub418\uace0": 812, "\uc801\uc6a9\ub418\uae30": 811, "\uc801\uc6a9\ub418\ub294": 801, "\uc801\uc6a9\ub418\ub294\ub370": 790, "\uc801\uc6a9\ub418\uc5b4": 810, "\uc801\uc6a9\ub41c\ub2e4": [787, 806], "\uc801\uc6a9\ub429\ub2c8\ub2e4": 796, "\uc801\uc6a9\ud558\uace0": [787, 792, 806], "\uc801\uc6a9\ud558\uae30": [789, 795, 807], "\uc801\uc6a9\ud558\uae30\ub3c4": 805, "\uc801\uc6a9\ud558\ub294": [789, 791, 792], "\uc801\uc6a9\ud55c\ub2e4": [792, 809], "\uc801\uc6a9\ud574\ubcf4\uba74": 809, "\uc801\uc740": [777, 796, 798], "\uc801\uc808\ud55c": [778, 803], "\uc801\ud569\ud558\uc9c0": [775, 783], "\uc804\ub2ec": [788, 801, 802, 804, 806, 807, 808, 810, 812], "\uc804\ub2ec\ub418\ub294": 779, "\uc804\ub2ec\ub41c": [789, 790], "\uc804\ub2ec\uc5d0": [789, 792], "\uc804\ub2ec\uc740": [793, 796, 806, 812], "\uc804\ub2ec\uc744": [789, 790, 793, 799, 803, 810, 812], "\uc804\ub2ec\uc774": [790, 812], "\uc804\ub2ec\ud55c\ub2e4": 800, "\uc804\ub2ec\ud560": 796, "\uc804\ub2ec\ud574\uc11c": [785, 810], "\uc804\ub2ec\ud574\uc57c": [777, 796], "\uc804\ub7b5\uc740": 779, "\uc804\ub7b5\uc744": [795, 796], "\uc804\ubc18\uc801\uc73c\ub85c": 790, "\uc804\ubd80\uc774\ub2e4": 802, "\uc804\uc5d0": [777, 779, 803], "\uc804\uc790\ub294": 777, "\uc804\ucc98\ub9ac": 776, "\uc804\ucc98\ub9ac\uac00": 779, "\uc804\ucc98\ub9ac\ub294": 779, "\uc804\uccb4": [774, 779, 795, 796, 797, 798, 799, 801, 802, 806, 809, 810, 812], "\uc804\uccb4\ub97c": [795, 806], "\uc804\uccb4\uc5d0": 802, "\uc804\ud30c\ub418\uc5b4\uc57c": 802, "\uc804\ud615\uc801\uc778": [774, 780, 805, 806], "\uc804\ud658\ud558\ub294": 796, "\uc808\ub300\ub85c": 777, "\uc808\ub4e4\uc5d0\uc11c": 770, "\uc808\ub4e4\uc5d0\uc11c\ub294": 795, "\uc808\ub85c": 808, "\uc808\uc57d\ud560": [775, 795, 803], "\uc808\uc5d0\uc11c": [774, 795, 809], "\uc808\uc5d0\uc11c\ub294": [774, 776, 783, 789, 796, 806], "\uc808\uc740": [773, 777, 799, 812], "\uc808\uc744": 779, "\uc808\uc758": 776, "\uc808\ucc28\ub294": [774, 795], "\uc808\ucc98\ub85c": 787, "\uc810\uac80\uc740": 806, "\uc810\uc218": 800, "\uc810\uc218\uac00": 811, "\uc810\uc218\ub97c": [797, 800, 809, 811], "\uc810\uc218\ubcf4\ub2e4": 811, "\uc810\uc218\uc640": [800, 811], "\uc810\uc740": [777, 802], "\uc810\uc744": [774, 783, 796, 797, 799, 800, 802, 810], "\uc810\uc774\ub2e4": [777, 779, 797, 800], "\uc811\uadfc": [780, 790], "\uc811\uadfc\uc131\uc744": 774, "\uc811\uadfc\uc744": [777, 780], "\uc811\uadfc\ud558\uae30": [776, 777], "\uc811\uadfc\ud558\ub294": 777, "\uc811\uadfc\ud560": [777, 778, 784, 796], "\uc811\uadfc\ud574\uc11c": 802, "\uc815\ub82c\ud55c\ub2e4": 778, "\uc815\ubcf4": [771, 775, 786], "\uc815\ubcf4\ub4e4\uc744": [774, 779, 810], "\uc815\ubcf4\ub97c": [775, 777, 779, 780, 787, 797, 810, 812], "\uc815\ubcf4\uc640": 797, "\uc815\uc0c1\uc801\uc778": 777, "\uc815\uc218": [779, 786], "\uc815\uc218\ub85c": 787, "\uc815\uc218\ub97c": 786, "\uc815\uc758": [776, 781, 784, 790], "\uc815\uc758\ub294": 812, "\uc815\uc758\ub418\uc5b4": 777, "\uc815\uc758\ub418\uc5c8\ub2e4\uba74": 810, "\uc815\uc758\ub41c": [771, 812], "\uc815\uc758\ub41c\ub2e4": [796, 810], "\uc815\uc758\uc5d0": 781, "\uc815\uc758\ud558\uace0": 770, "\uc815\uc758\ud558\ub098": 771, "\uc815\uc758\ud558\ub294": 777, "\uc815\uc758\ud558\ub294\ub370": 812, "\uc815\uc758\ud55c": [800, 809], "\uc815\uc758\ud55c\ub2e4": [789, 796, 801, 810], "\uc815\uc758\ud560": [796, 800], "\uc815\ucc45\uc740": 778, "\uc815\ucc45\uc744": 778, "\uc815\ud574\uc57c": 780, "\uc815\ud574\uc9c4": [806, 812], "\uc815\ud655\ub3c4": 812, "\uc815\ud655\ud558\uac8c": 777, "\uc815\ud655\ud55c": 795, "\uc81c\uac70\ub418\uc5b4": 801, "\uc81c\uac70\ud558\uae30": 799, "\uc81c\uac70\ud558\ub294": 797, "\uc81c\uac70\ud55c\ub2e4": 790, "\uc81c\uac70\ud588\ub2e4": 802, "\uc81c\uacf1": 779, "\uc81c\uacf5\ub418\ub294": [802, 808], "\uc81c\uacf5\ud558\uae30": [770, 776], "\uc81c\uacf5\ud558\ub294": [771, 779, 797, 802], "\uc81c\uacf5\ud558\ub294\ub370": 783, "\uc81c\uacf5\ud558\uc9c0\ub9cc": 796, "\uc81c\uacf5\ud55c\ub2e4": [773, 774, 775, 776, 777, 778, 779, 780, 781, 783, 786, 787, 790, 795, 796, 800, 802, 803, 809, 812], "\uc81c\uacf5\ud55c\ub2e4\uba74": 783, "\uc81c\uacf5\ud560": 774, "\uc81c\uacf5\ud568": [801, 812], "\uc81c\uacf5\ud574\uc57c": 777, "\uc81c\uacf5\ud574\uc57c\ud55c\ub2e4": 800, "\uc81c\uc548\ud558\ub294": 792, "\uc81c\uc57d": 787, "\uc81c\uc57d\uc774\ub098": 799, "\uc81c\uc678\ud558\uace0\ub294": 812, "\uc81c\uc678\ud558\uba74": [797, 800], "\uc81c\ud55c\uc801\uc778": 799, "\uc870\uac74\uc744": [787, 798], "\uc870\uae08\ub9cc": 776, "\uc870\uc815\uac00\ub2a5": 812, "\uc874\uc7ac\ud558\ub294": [777, 811], "\uc874\uc7ac\ud558\ub294\uc9c0": 811, "\uc874\uc7ac\ud558\uc9c0": [797, 800, 810], "\uc874\uc7ac\ud55c\ub2e4": 804, "\uc874\uc7ac\ud55c\ub2e4\ub294": [773, 797], "\uc874\uc7ac\ud55c\ub2e4\uba74": 772, "\uc874\uc7ac\ud574\uc57c\ud558\uba70": 785, "\uc880\ub354": 805, "\uc885\ub8cc\ub418\uba74": 811, "\uc885\ub958": 810, "\uc885\ub958\ub97c": 810, "\uc885\ub958\uc5d0": 812, "\uc885\ub958\uc758": [773, 774, 776, 801, 806, 807, 810], "\uc885\uc885": [809, 810], "\uc88b\ub2e4": 799, "\uc88b\uc740": 779, "\uc8fc\ub85c": [774, 777], "\uc8fc\ubaa9\ud558\uc790": 799, "\uc8fc\uc11d": 801, "\uc8fc\uc18c": 780, "\uc8fc\uc18c\ub4e4\uc744": 780, "\uc8fc\uc18c\uc774\ub2e4": 780, "\uc8fc\uc5b4\uc84c\uc744": 809, "\uc8fc\uc5b4\uc9c0\uba74": 796, "\uc8fc\uc5b4\uc9c4": [779, 796, 809], "\uc8fc\uc694": [774, 777, 804, 810], "\uc8fc\uc758": 808, "\uc8fc\uc758\ud558\uc790": [799, 801, 810], "\uc900\ub2e4": [777, 798], "\uc900\ube44\ud558\uace0": 779, "\uc900\ube44\ud55c\ub2e4": 810, "\uc904\ub9cc": 779, "\uc904\uc5ec\uc900\ub2e4": 779, "\uc904\uc740": 780, "\uc904\uc774\uae30": 799, "\uc904\uc778": 792, "\uc904\uc77c": 771, "\uc911": 775, "\uc911\uac04": [779, 795], "\uc911\uac04\uc5d0": 790, "\uc911\ubcf5\ub41c": 779, "\uc911\uc2ec\uc758": 781, "\uc911\uc5d0": [777, 778, 780, 793, 801, 812], "\uc911\uc694\ud558\ub2e4": [777, 779], "\uc911\uc694\ud55c": [774, 779, 783, 784], "\uc911\uc758": 786, "\uc911\uc774\ub2e4": 798, "\uc989": [774, 777, 779, 784, 790, 792, 796, 797, 800, 802, 806, 809, 810, 811], "\uc9c0\uae08\uc740": 777, "\uc9c0\ub2c8\uace0": 810, "\uc9c0\uc5b4\ubcf8\ub2e4\uba74": 810, "\uc9c0\uc6d0\ub418\ub294": [790, 797, 802], "\uc9c0\uc6d0\uc740": 790, "\uc9c0\uc6d0\uc744": [779, 803], "\uc9c0\uc6d0\ud558\uace0": [786, 791], "\uc9c0\uc6d0\ud558\uae30": [776, 777, 786, 790], "\uc9c0\uc6d0\ud558\ub294": 803, "\uc9c0\uc6d0\ud558\ub294\ub370": 798, "\uc9c0\uc6d0\ud558\uc9c0": [777, 798], "\uc9c0\uc6d0\ud558\uc9c0\ub9cc": 777, "\uc9c0\uc6d0\ud55c\ub2e4": [776, 777, 778, 779, 786, 790, 795, 798, 800, 802, 810], "\uc9c0\uc6d0\ud568": 798, "\uc9c0\uc815\ub418\uace0": 778, "\uc9c0\uc815\ub418\uba74": 800, "\uc9c0\uc815\ub418\uc5b4\uc57c": 780, "\uc9c0\uc815\ub418\uc9c0": 780, "\uc9c0\uc815\ub41c": 780, "\uc9c0\uc815\ub420": 778, "\uc9c0\uc815\ud558\uae30": [774, 787], "\uc9c0\uc815\ud558\ub294": 774, "\uc9c0\uc815\ud558\ub294\ub370": 779, "\uc9c0\uc815\ud558\uc9c0": 790, "\uc9c0\uc815\ud55c": 787, "\uc9c0\uc815\ud55c\ub2e4": [777, 778, 779, 780, 787], "\uc9c0\uc815\ud560": [777, 780, 797], "\uc9c0\uc815\ud574\uc57c": [778, 805], "\uc9c0\uc815\ud574\uc57c\ud558\uae30": 811, "\uc9c0\uce6d\ud558\ub294": 790, "\uc9c0\ucf1c\ubcf4\uc790": [798, 803], "\uc9c1\uad00\uc801\uc73c\ub85c": 792, "\uc9c1\uc811": [772, 777, 778, 779, 783, 790, 792, 800, 801], "\uc9c4\ub2e4": 776, "\uc9c4\uc785": 796, "\uc9c4\ud589": [798, 810], "\uc9c8\ubb38\uc740": 788, "\uc9d1\uacc4": [790, 793], "\uc9d1\uacc4\ub41c\ub2e4": 807, "\uc9d1\uacc4\ud558\ub294": 807, "\uc9d1\uc911\ud574\uc11c": 774, "\uc9d1\ud55c\uc740": 802, "\uc9d1\ud569": [782, 810], "\uc9d1\ud569\ub418\uc5b4\uc57c": 805, "\uc9d1\ud569\ub4e4\uc5d0": 776, "\uc9d1\ud569\uc5d0": 787, "\uc9d1\ud569\uc73c\ub85c": 782, "\uc9d1\ud569\uc744": [786, 796, 797], "\uc9e7\uac8c": 787, "\ucc28\ub840": 812, "\ucc28\uc6d0": [778, 784, 790, 805], "\ucc28\uc6d0\uacfc": 805, "\ucc28\uc6d0\ub4e4": 805, "\ucc28\uc6d0\ub4e4\uc744": 793, "\ucc28\uc6d0\uc73c\ub85c": 805, "\ucc28\uc6d0\uc740": [784, 792, 805], "\ucc28\uc6d0\uc744": [792, 805], "\ucc28\uc6d0\uc758": 798, "\ucc28\uc6d0\uc774": [792, 810], "\ucc28\uc6d0\uc774\ub780": 805, "\ucc28\uc774\uac00": 810, "\ucc28\uc774\ub97c": 803, "\ucc28\uc774\uc810\uc740": [777, 779, 797, 800, 801, 804, 810], "\ucc28\uc774\uc810\uc774": 797, "\ucc28\uc9c0\ud558\uace0": 798, "\ucc28\uc9c0\ud558\uae30\ub3c4": 792, "\ucc28\uc9c0\ud558\uc9c0": 798, "\ucc38\uace0": [771, 790], "\ucc38\uace0\ud558\uace0\uc790": 777, "\ucc38\uace0\ud558\uba74": 774, "\ucc38\uace0\ud558\uc790": [774, 779, 782, 783, 786, 790, 794, 796, 797, 798, 799, 802, 808, 810, 812], "\ucc38\uace0\ud560": [783, 784, 786, 787], "\ucc38\uc870": 777, "\ucc38\uc870\ub9cc": 783, "\ucc38\uc870\ud558\uae30": 783, "\ucc38\uc870\ud558\uc790": 783, "\ucc3e\ub294\ub2e4": 780, "\ucc3e\uc544\ub0b4\uc57c\ud55c\ub2e4": 810, "\ucc3e\uc544\ub0bc": 806, "\ucc3e\uc544\ubcfc": 802, "\ucc44\ud0dd\ud558\uace0": 776, "\ucc45\uc784\uc744": 776, "\ucc98\ub7fc": [772, 777, 797], "\ucc98\ub9ac": [771, 774], "\ucc98\ub9ac\ub418\uc9c0": 774, "\ucc98\ub9ac\ub97c": 801, "\ucc98\ub9ac\ud558\uace0": 770, "\ucc98\ub9ac\ud558\uae30": 771, "\ucc98\ub9ac\ud558\ub294": [774, 775], "\uccab": [778, 799, 801], "\uccab\ubc88\uc9f8": [779, 784, 796, 797, 799, 802, 806], "\uccab\ubc88\uc9f8\ub294": 797, "\uccab\uc9f8\ub85c": 810, "\uccb4\ud06c": 806, "\uccb4\ud06c\uac00": 806, "\uccb4\ud06c\ud3ec\uc778\ud2b8\ub97c": 783, "\ucd08\uae30\ud654\ub41c\ub2e4": 778, "\ucd08\uae30\ud654\ud558\uae30": 776, "\ucd08\uae30\ud654\ud55c\ub2e4": [777, 805], "\ucd1d": [774, 778], "\ucd5c\ub300": 810, "\ucd5c\uc120\uc758": 798, "\ucd5c\uc18c\ub4e4\uc774": 810, "\ucd5c\uc18c\uc758": 779, "\ucd5c\uc18c\ud55c\uc758": 790, "\ucd5c\uc2e0": 779, "\ucd5c\uc801\uc740": 803, "\ucd5c\uc801\uc774\uc9c0": 779, "\ucd5c\uc801\ud654\ub418\uc5b4": 779, "\ucd5c\uc801\ud654\ub41c": 790, "\ucd5c\uc801\ud654\ub420": 792, "\ucd5c\uc801\ud654\ub4e4\uc744": 792, "\ucd5c\uc801\ud654\ub97c": 806, "\ucd5c\uc801\ud654\ud558\uace0": 792, "\ucd5c\uc801\ud654\ud560": 790, "\ucd5c\uc885": [795, 802], "\ucd94\uac00": [798, 806], "\ucd94\uac00\ub41c": 786, "\ucd94\uac00\ub85c": [774, 779, 787, 792], "\ucd94\uac00\uc801\uc73c\ub85c": [772, 779], "\ucd94\uac00\uc801\uc778": 807, "\ucd94\uac00\ud558\ub294": 774, "\ucd94\uac00\ud55c\ub2e4": 774, "\ucd94\uac00\ud560": [774, 777], "\ucd94\ub860": 795, "\ucd94\ub860\uc5d0": 777, "\ucd94\ub860\uc5d0\uc11c": 779, "\ucd94\ub860\uc740": 799, "\ucd94\ub860\uc744": [776, 799], "\ucd94\ub860\uc758": 799, "\ucd94\ub860\uc774": [779, 795], "\ucd94\uc0c1\ud654\ub97c": 781, "\ucd94\ucc9c": 782, "\ucd94\ucc9c\uc5d0\uc11c": 809, "\ucd94\ucc9c\uc744": 811, "\ucd94\ucd9c\ub420": 772, "\ucd94\ucd9c\uc744": 772, "\ucd94\ucd9c\ud558\uace0": 787, "\ucd94\ucd9c\ud558\uba74": 812, "\ucd94\ucd9c\ud558\uc790": 772, "\ucd94\ucd9c\ud55c\ub2e4": 772, "\ucd94\ucd9c\ud560": 807, "\ucd95\uc18c": [789, 790], "\ucd95\uc57d": [790, 793, 807], "\ucd9c\ub825": [779, 790, 796, 797, 799, 801, 802, 805], "\ucd9c\ub825\uacfc": 797, "\ucd9c\ub825\uc2dc\uc791\ud574\uc11c": 795, "\ucd9c\ub825\uc73c\ub85c": 802, "\ucd9c\ub825\uc73c\ub85c\ub294": 796, "\ucd9c\ub825\uc758": 796, "\ucda9\ubd84\ud558\ub2e4": 799, "\ucda9\ubd84\ud558\uc9c0": 779, "\ucda9\uc871\ud558\uba74": 798, "\ucde8\uae09\ud55c\ub2e4": 806, "\ucde8\ud558\uac8c\ud558\uba74": 809, "\uce58\uc6d0\uc744": 805, "\uce5c\uad6c": 782, "\uce5c\ubaa9": 810, "\uce5c\uc219\ud560": 811, "\uce74\ud14c\uace0\ub9ac\ub85c": 812, "\uce74\ud14c\ub85c\uae30\ub4e4\ub85c": 812, "\uce90\ub178\ub2c8\uceec": 787, "\ucee4\ub110\uc758": 803, "\ucee4\ub2e4\ub780": 810, "\ucee4\ubba4\ub2c8\ud2f0\uc5d0": 810, "\ucee4\ubba4\ub2c8\ud2f0\uc758": 810, "\ucee4\uc11c": 792, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ub41c": 807, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c": 802, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\uc774": 812, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [795, 797, 802], "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\ub294": 795, "\ucee4\uc2a4\ud140": [770, 795, 798, 802, 804, 812], "\ucee4\uc9c8": 779, "\ucee8\ud0dd\uc2a4\ud2b8": 786, "\ucef4\ud30c\uc77c\uacfc": 779, "\ucef4\ud30c\uc77c\uc744": 790, "\ucef4\ud30c\uc77c\ud558\uace0": 779, "\ucef4\ud30c\uc77c\ud55c\ub2e4": 779, "\ucef4\ud3ec\ub10c\ub4dc\ub4e4\uc744": 776, "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uacfc": [776, 810], "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uc744": [776, 781], "\ucef4\ud3ec\ub10c\ud2b8\ub97c": [770, 776, 810], "\ucef4\ud3ec\ub10c\ud2b8\ub9cc": 809, "\ucef4\ud4e8\ud130": 776, "\ucef4\ud4e8\ud130\ub294": [776, 777], "\ucef4\ud4e8\ud130\ub4e4\uc5d0": 776, "\ucef4\ud4e8\ud130\ub4e4\uc758": [776, 779], "\ucef4\ud4e8\ud130\ub97c": 779, "\ucef4\ud4e8\ud130\uc5d0": 777, "\ucef4\ud4e8\ud130\uc5d0\uc11c": [776, 779, 803], "\ucef4\ud4e8\ud305": 790, "\ucef7": 779, "\ucf00\uc774\uc2a4\ub294": 777, "\ucf00\uc774\uc2a4\ub4e4\uc744": 806, "\ucf54\ub4dc": [774, 776, 779, 789, 797, 800, 803, 806, 810], "\ucf54\ub4dc\ub294": [772, 773, 774, 776, 777, 778, 779, 783, 784, 786, 787, 796, 797, 800, 801, 802, 804, 806, 809, 810, 811, 812], "\ucf54\ub4dc\ub3c4": 801, "\ucf54\ub4dc\ub4e4\uacfc": 801, "\ucf54\ub4dc\ub97c": [772, 774, 776, 777, 790], "\ucf54\ub4dc\uc5d0\uc11c": [774, 796], "\ucf54\ub4dc\uc640": [777, 804, 809], "\ucf54\ub4dc\uc758": [774, 806], "\ucf54\ub4dc\uc774\ub2e4": 812, "\ucf54\ub4dc\ucc98\ub7fc": 812, "\ucffc\ub9ac\ud558\ub294": 786, "\ud06c\uac8c": 809, "\ud06c\uae30": 775, "\ud06c\uae30\uac00": [795, 810], "\ud06c\uae30\ub77c\uace0": 808, "\ud06c\uae30\ub97c": [778, 787], "\ud06c\uae30\uc758": 777, "\ud06c\uae30\uc774\uace0": 798, "\ud06c\ub85c\uc2a4": 793, "\ud070": [771, 779, 788, 794, 806, 808, 810, 812], "\ud074\ub798\uc2a4": [770, 802], "\ud074\ub798\uc2a4\ub294": [777, 796], "\ud074\ub798\uc2a4\ub4e4\uc744": 802, "\ud074\ub798\uc2a4\ub97c": [771, 772, 776, 802], "\ud074\ub798\uc2a4\uc5d0": [771, 774, 796, 812], "\ud074\ub798\uc2a4\uc5d0\ub294": 771, "\ud074\ub798\uc2a4\uc5d0\uc11c": 770, "\ud074\ub798\uc2a4\uc774\uace0": 798, "\ud074\ub798\uc2a4\uc774\ub2e4": [771, 777], "\ud074\ub798\uc2a4\uc778": [774, 796], "\ud074\ub7ec\uc2a4\ud130": [776, 780], "\ud074\ub7ec\uc2a4\ud130\uc5d0": [777, 780], "\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c": [776, 777, 779, 780], "\ud074\ub7ec\uc2a4\ud130\uc758": [776, 777, 779, 780], "\ud074\ub7ec\uc2a4\ud130\uc774": 776, "\ud074\ub85c\ubc8c": 780, "\ud074\ub860\ud558\uace0": 779, "\ud074\ub860\ud55c\ub2e4": 779, "\ud0a4\uac12\ub294": 793, "\ud0a4\ub85c": [779, 807], "\ud0c0\uc785": [778, 779, 784, 786, 793, 805, 807], "\ud0c0\uc785\uac04\uc758": 797, "\ud0c0\uc785\uacfc": [777, 778, 787, 797, 800, 809, 812], "\ud0c0\uc785\ub4e4\uacfc": [778, 779, 797, 800, 802, 812], "\ud0c0\uc785\ub4e4\uc5d0": [787, 806, 812], "\ud0c0\uc785\ub4e4\uc640": [800, 802], "\ud0c0\uc785\ub4e4\uc740": 793, "\ud0c0\uc785\ub4e4\uc744": [779, 796, 797, 800, 807], "\ud0c0\uc785\ub4e4\uc758": 779, "\ud0c0\uc785\ub4e4\uc774": 779, "\ud0c0\uc785\ub9cc": 809, "\ud0c0\uc785\ub9cc\uc744": 777, "\ud0c0\uc785\ubcc4": [778, 787], "\ud0c0\uc785\ubcc4\ub85c": [779, 796, 812], "\ud0c0\uc785\uc5d0": [778, 779, 787, 790, 793, 805, 806, 807, 809, 810, 811, 812], "\ud0c0\uc785\uc5d0\uc11c": 778, "\ud0c0\uc785\uc5d0\uc11c\uc758": 779, "\ud0c0\uc785\uc73c\ub85c": [782, 807, 809, 811], "\ud0c0\uc785\uc73c\ub85c\ub294": 805, "\ud0c0\uc785\uc740": [778, 786, 805], "\ud0c0\uc785\uc744": [778, 779, 781, 782, 784, 790, 793, 797, 801, 803, 808, 809, 811], "\ud0c0\uc785\uc758": [778, 779, 781, 782, 787, 793, 796, 797, 809], "\ud0c0\uc785\uc774": [778, 779, 786, 787, 806, 807], "\ud0c0\uc785\uc774\ub098": 778, "\ud0c0\uc785\uc774\ub2e4": 779, "\ud0c0\uc785\uc774\ub77c\uace0": 787, "\ud134\uc11c": 784, "\ud14c\uc2a4\ud06c": 774, "\ud14c\uc2a4\ud06c\ub4e4\uc5d0": 809, "\ud14c\uc2a4\ud06c\ub4e4\uc744": 812, "\ud14c\uc2a4\ud06c\ub97c": [773, 808], "\ud14c\uc2a4\ud06c\uc5d0": 779, "\ud14c\uc2a4\ud06c\uc5d0\ub3c4": 777, "\ud14c\uc2a4\ud06c\uc5d0\uc11c": 774, "\ud14c\uc2a4\ud06c\uc758": 777, "\ud14c\uc2a4\ud2b8": [777, 779, 809, 812], "\ud14c\uc2a4\ud2b8\ub97c": 777, "\ud14c\uc2a4\ud2b8\uc758": 774, "\ud14c\uc774\ube14": 783, "\ud14c\uc785\ub4e4\uc758": 779, "\ud150\uc11c": [778, 785, 786, 790, 804], "\ud150\uc11c\uac00": [777, 784], "\ud150\uc11c\ub294": [777, 784, 803], "\ud150\uc11c\ub4e4\uacfc": [778, 807], "\ud150\uc11c\ub4e4\uc5d0": 787, "\ud150\uc11c\ub4e4\uc744": [777, 806], "\ud150\uc11c\ub4e4\uc758": [774, 779, 797, 800, 801, 812], "\ud150\uc11c\ub85c": 783, "\ud150\uc11c\ub97c": [777, 778, 783, 785, 786, 807], "\ud150\uc11c\uc5d0": 803, "\ud150\uc11c\uc5ec\uc57c\ub9cc": 790, "\ud150\uc11c\uc640": 777, "\ud150\uc11c\uc758": [784, 786], "\ud150\uc11c\uc774\uace0": 801, "\ud15c\ud50c\ub9bf\uc740": 771, "\ud1a0\uc774": 779, "\ud1a0\ud53d\ub4e4\uc744": 795, "\ud1b5\uacc4\ub4e4\uc744": 779, "\ud1b5\uc2e0\uc5d0": 780, "\ud1b5\uc2e0\uc744": [776, 779], "\ud1b5\uc2e0\uc774": 777, "\ud1b5\ud569\ub420": 804, "\ud1b5\ud569\ud558\ub294": [789, 807], "\ud1b5\ud574\uc11c": [777, 778, 779, 783, 790, 796, 799, 800, 807, 811], "\ud1b5\ud574\uc11c\ub294": 796, "\ud234\ub4e4": 776, "\ud234\uc740": 777, "\ud29c\ud1a0\ub9ac\uc5bc": 790, "\ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c": 798, "\ud29c\ud50c": 786, "\ud2b8\ub808\uc774\ub108": [776, 777], "\ud2b8\ub808\uc774\ub108\uac00": 777, "\ud2b8\ub808\uc774\ub108\ub294": 779, "\ud2b8\ub808\uc774\ub108\ub4e4\uc740": [776, 777], "\ud2b8\ub808\uc774\ub108\ub4e4\uc758": 780, "\ud2b8\ub808\uc774\ub108\ub4e4\uc774": 777, "\ud2b8\ub808\uc774\ub108\uc5d0": 780, "\ud2b8\ub808\uc774\ub108\uc5d0\uac8c": [776, 777], "\ud2b8\ub9ac\ud50c": 787, "\ud2b8\uc704\ud130\uc758": 782, "\ud2b9\ubcc4\ud558\uac8c": 802, "\ud2b9\ubcc4\ud55c": [782, 787, 806], "\ud2b9\ubcc4\ud788": 783, "\ud2b9\uc131\uc744": 810, "\ud2b9\uc815": [772, 774, 778, 779, 787, 796, 799, 805, 809], "\ud2b9\uc9d5\uacfc": 786, "\ud2b9\uc9d5\uc744": [793, 810], "\ud2b9\ud788": [776, 787, 799], "\ud2f0\uc555\uc5d0": 809, "\ud2f0\uc785\uc5d0": 779, "\ud301\uc744": 795, "\ud30c\ub77c\uba54\ud130": [804, 805], "\ud30c\ub77c\uba54\ud130\ub4e4": 807, "\ud30c\ub77c\uba54\ud130\ub4e4\uacfc": 805, "\ud30c\ub77c\uba54\ud130\ub4e4\ub85c\uc368": 807, "\ud30c\ub77c\uba54\ud130\ub4e4\uc740": 790, "\ud30c\ub77c\uba54\ud130\ub4e4\uc744": [777, 793, 803], "\ud30c\ub77c\uba54\ud130\ub85c": [792, 806], "\ud30c\ub77c\uba54\ud130\ub97c": [774, 790, 796], "\ud30c\ub77c\uba54\ud130\uc774\ub2e4": 811, "\ud30c\ub77c\ubbf8\ud130\ub4e4\uc740": 790, "\ud30c\ub77c\ubbf8\ud130\ub85c": 790, "\ud30c\uc2f1\ud558\uace0": 787, "\ud30c\uc2f1\ud558\ub294": 783, "\ud30c\uc774\uc120": 786, "\ud30c\uc774\ud504\ub77c\uc778": [788, 808, 810, 812], "\ud30c\uc774\ud504\ub77c\uc778\uc5d0": 771, "\ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c": 771, "\ud30c\uc774\ud504\ub77c\uc778\uc740": 810, "\ud30c\uc774\ud504\ub77c\uc778\uc744": [770, 771, 795], "\ud30c\uc774\ud504\ub77c\uc778\uc758": 770, "\ud30c\uc774\ud504\ub77c\uc778\uc774": [770, 771], "\ud30c\uc77c": [772, 779, 780, 809, 812], "\ud30c\uc77c\ub4e4": [779, 780], "\ud30c\uc77c\ub4e4\ub85c": 774, "\ud30c\uc77c\ub4e4\uc5d0": 779, "\ud30c\uc77c\ub4e4\uc740": [772, 779], "\ud30c\uc77c\ub4e4\uc744": [772, 787], "\ud30c\uc77c\ub4e4\uc758": [779, 780], "\ud30c\uc77c\ub4e4\uc774": 779, "\ud30c\uc77c\ub85c": [774, 779], "\ud30c\uc77c\ub85c\uc11c": 779, "\ud30c\uc77c\uc5d0": [772, 779, 787], "\ud30c\uc77c\uc5d0\uc11c": 779, "\ud30c\uc77c\uc740": 779, "\ud30c\uc77c\uc744": [772, 777, 779, 780], "\ud30c\uc77c\uc758": 779, "\ud30c\uc77c\uc774": [772, 779, 780], "\ud30c\uc77c\uc774\ub2e4": 779, "\ud30c\uccd0": 771, "\ud30c\ud0c0\uc154\ub2dd": 779, "\ud30c\ud0c0\uc158\uacfc": 777, "\ud30c\ud0c0\uc158\ub41c": 780, "\ud30c\ud0c0\uc158\uc5d0": 779, "\ud30c\ud130\uc158\ud558\uae30": 777, "\ud30c\ud2b8\ub85c": 793, "\ud30c\ud2f0\uc154\ub2dd": [771, 777], "\ud30c\ud2f0\uc154\ub2dd\uc740": 779, "\ud30c\ud2f0\uc154\ub2dd\uc744": 779, "\ud30c\ud2f0\uc154\ub2dd\uc758": 779, "\ud30c\ud2f0\uc154\ub2dd\ud55c\ub2e4": 779, "\ud30c\ud2f0\uc154\ub2dd\ud560": 779, "\ud30c\ud2f0\uc158": [776, 777, 778, 779, 780], "\ud30c\ud2f0\uc158\uacfc": 779, "\ud30c\ud2f0\uc158\ub418\uc5b4": 777, "\ud30c\ud2f0\uc158\ub41c": [776, 777, 779, 780], "\ud30c\ud2f0\uc158\ub4e4\uc5d0": 779, "\ud30c\ud2f0\uc158\ub4e4\uc744": [779, 780], "\ud30c\ud2f0\uc158\ub4e4\uc758": 779, "\ud30c\ud2f0\uc158\ub4e4\uc774": [779, 780], "\ud30c\ud2f0\uc158\uc5d0": 779, "\ud30c\ud2f0\uc158\uc5d0\uc11c": 777, "\ud30c\ud2f0\uc158\uc73c\ub85c": 779, "\ud30c\ud2f0\uc158\uc740": 779, "\ud30c\ud2f0\uc158\uc744": [777, 778, 779, 780], "\ud30c\ud2f0\uc158\uc758": [777, 779], "\ud30c\ud2f0\uc158\uc774": [779, 780], "\ud30c\ud2f0\uc158\uc774\ub2e4": 777, "\ud30c\ud2f0\uc158\ud558\uae30": 779, "\ud310\ub9e4\uc790": 782, "\ud310\ub9e4\ud568": 782, "\ud314\ub85c\uc6b0": 782, "\ud328\uc2a4": 803, "\ud328\uc2a4\uc6cc\ub4dc": 780, "\ud328\ud0a4\uc9c0": 773, "\ud328\ud0a4\uc9c0\ub4e4\uc744": 787, "\ud328\ud0a4\uc9c0\ub97c": [770, 779], "\ud398\uc774\ud37c\uc5d0\uc11c\ub294": 805, "\ud3b8\ub9ac\ud558\uace0": 771, "\ud3c9\uac00": [799, 809], "\ud3c9\uac00\ud558\ub294": 812, "\ud3c9\uade0": 810, "\ud3c9\uade0\uc744": 810, "\ud3ec\uba67\ub4e4\uc5d0\ub3c4": 787, "\ud3ec\uba67\ub4e4\uc774": 783, "\ud3ec\uba67\uc73c\ub85c": [779, 783, 787], "\ud3ec\uba67\uc744": 786, "\ud3ec\uba67\uc758": 803, "\ud3ec\uba67\uc774": 772, "\ud3ec\uba67\uc778": 772, "\ud3ec\ud2b8": 780, "\ud3ec\ud568": [776, 803], "\ud3ec\ud568\ub418\uc5b4": [779, 812], "\ud3ec\ud568\ub41c": 779, "\ud3ec\ud568\ub41c\ub2e4\ub294": 779, "\ud3ec\ud568\ub420": 796, "\ud3ec\ud568\ud558\uace0": [774, 776, 779, 796, 804], "\ud3ec\ud568\ud558\ub294": 796, "\ud3ec\ud568\ud558\ub294\ub370": 779, "\ud3ec\ud568\ud558\uc9c0": [796, 809], "\ud3ec\ud568\ud558\uc9c0\ub9cc": 796, "\ud3ec\ud568\ud55c": [782, 796, 800], "\ud3ec\ud568\ud55c\ub2e4": [779, 807], "\ud3ec\ud568\ud560": 796, "\ud3ec\ud568\ud574\uc57c": 796, "\ud3f4\ub354\ub294": 779, "\ud45c\uc2dc\ub41c": 796, "\ud45c\uc900": [770, 774], "\ud45c\uc900\uc801\uc778": 771, "\ud45c\ud604\ub418\uace0": 799, "\ud45c\ud604\ub418\uba70": 781, "\ud45c\ud604\ub418\uc5b4\uc57c": 811, "\ud45c\ud604\ub41c\ub2e4": [786, 787, 806, 807], "\ud45c\ud604\uc744": 812, "\ud45c\ud604\ud558\uace0": 782, "\ud45c\ud604\ud558\uae30": [782, 786, 790, 793], "\ud45c\ud604\ud558\ub294": [779, 782, 809], "\ud45c\ud604\ud558\ub294\ub370": 811, "\ud45c\ud604\ud558\uba74": 790, "\ud45c\ud604\ud560": 782, "\ud48d\ubd80\ud55c": 810, "\ud504\ub798\ud504\uc5d0\uc11c": 796, "\ud504\ub808\uc784\uc6cc\ud06c": 804, "\ud504\ub808\uc784\uc6cc\ud06c\uac00": 783, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0": 804, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c": 796, "\ud504\ub808\uc784\uc6cc\ud06c\uc758": [777, 787, 804], "\ud504\ub85c\uadf8\ub798\ubc0d": 781, "\ud504\ub85c\uc138\uc2a4": [777, 810], "\ud504\ub85c\uc138\uc2a4\ub294": [776, 777, 779, 795], "\ud504\ub85c\uc138\uc2a4\ub41c": 775, "\ud504\ub85c\uc138\uc2a4\ub4e4\uacfc\uc758": 777, "\ud504\ub85c\uc138\uc2a4\ub4e4\uc740": [776, 777], "\ud504\ub85c\uc138\uc2a4\ub4e4\uc744": [776, 777], "\ud504\ub85c\uc138\uc2a4\ub97c": [776, 777, 779, 798, 810], "\ud504\ub85c\uc138\uc2a4\ub9cc": 777, "\ud504\ub85c\uc138\uc2a4\uc5d0": 777, "\ud504\ub85c\uc138\uc2a4\uc5d0\uc11c": 777, "\ud504\ub85c\uc138\uc2a4\uc758": [777, 780], "\ud504\ub85c\uc138\uc2f1": [770, 775], "\ud504\ub85c\uc138\uc2f1\ub418\uc5b4": 808, "\ud504\ub85c\uc138\uc2f1\ub41c": 775, "\ud504\ub85c\uc138\uc2f1\uc758": 774, "\ud504\ub85c\uc138\uc2f1\ud558\uace0": 771, "\ud504\ub85c\uc138\uc2f1\ud558\ub294": [770, 773, 774], "\ud504\ub85c\ud1a0\ud0c0\uc785": 786, "\ud504\ub85c\ud2f0\uc5b4\uac00": 796, "\ud504\ub85c\ud37c\ud2f0\ub4e4\uc744": 774, "\ud504\ub85c\ud37c\ud2f0\ub97c": 774, "\ud504\ub860\ud2f0\uc5b4": 796, "\ud504\ub860\ud2f0\uc5b4\uac00": 796, "\ud504\ub860\ud2f0\uc5b4\ub294": 796, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uacfc": 796, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uc744": 796, "\ud504\ub860\ud2f0\uc5b4\ub85c": 796, "\ud504\ub860\ud2f0\uc5b4\ub97c": 796, "\ud504\ub860\ud2f0\uc5b4\uc5d0\uc11c": 796, "\ud504\ub860\ud2f0\uc5b4\uc758": 796, "\ud504\ub860\ud2f0\uc5b4\uc774\uace0": 796, "\ud53c\ucc98": [781, 783, 785, 787, 790, 792, 805, 810, 812], "\ud53c\ucc98\uac00": [784, 787, 802], "\ud53c\ucc98\ub294": 784, "\ud53c\ucc98\ub4e4\uacfc": 781, "\ud53c\ucc98\ub4e4\ub9cc": 784, "\ud53c\ucc98\ub4e4\uc740": 784, "\ud53c\ucc98\ub4e4\uc744": [782, 783, 787, 797, 802], "\ud53c\ucc98\ub77c\uace0": 789, "\ud53c\ucc98\ub85c": [784, 790, 809], "\ud53c\ucc98\ub97c": [776, 784, 789, 790, 796, 801, 802], "\ud53c\ucc98\ub9cc": 802, "\ud53c\ucc98\uc5d0": 792, "\ud53c\ucc98\uc640": [789, 790], "\ud53c\ucc98\uc758": [790, 801], "\ud53c\ucc98\uc774\uace0": [789, 806], "\ud53c\ucc98\uc774\ub2e4": 806, "\ud53c\uccd0": [771, 776, 777, 779, 785, 810, 812], "\ud53c\uccd0\uac00": [787, 801], "\ud53c\uccd0\ub294": [784, 796, 801, 807, 810], "\ud53c\uccd0\ub3c4": [779, 784, 812], "\ud53c\uccd0\ub4e4": [774, 802, 810], "\ud53c\uccd0\ub4e4\uacfc": [779, 810], "\ud53c\uccd0\ub4e4\ub85c\ubd80\ud130": 801, "\ud53c\uccd0\ub4e4\ub9cc": 777, "\ud53c\uccd0\ub4e4\uc5d0": [803, 809, 810], "\ud53c\uccd0\ub4e4\uc740": [790, 802, 808], "\ud53c\uccd0\ub4e4\uc744": [777, 779, 784, 787, 796, 797, 798, 800, 802, 810], "\ud53c\uccd0\ub4e4\uc758": 809, "\ud53c\uccd0\ub4e4\uc774": [797, 798, 802, 808], "\ud53c\uccd0\ub85c": 791, "\ud53c\uccd0\ub97c": [784, 787, 790, 791, 792, 795, 798, 801, 806, 810, 812], "\ud53c\uccd0\uc5d0": [792, 796, 803], "\ud53c\uccd0\uc640": [791, 792, 806], "\ud53c\uccd0\uc758": [792, 801, 812], "\ud53c\uccd0\uc774\ub2e4": 810, "\ud53c\ud558\ub294": 792, "\ud53c\ud560": 783, "\ud544\ub4dc": 790, "\ud544\ub4dc\ub294": 779, "\ud544\ub4dc\ub4e4\ub85c": 779, "\ud544\ub4dc\ub4e4\uc740": 779, "\ud544\ub4dc\ub4e4\uc744": 779, "\ud544\ub4dc\ub4e4\uc774\ub2e4": 779, "\ud544\ub4dc\ub97c": 779, "\ud544\ub4dc\uc5d0": [774, 779, 790], "\ud544\ub4dc\uc778": 779, "\ud544\uc694": 806, "\ud544\uc694\uac00": [779, 787, 792, 795, 796, 799], "\ud544\uc694\ub294": 777, "\ud544\uc694\ub85c": [777, 779], "\ud544\uc694\ub85c\ud558\uae30": 799, "\ud544\uc694\ud558\uace0": [795, 796], "\ud544\uc694\ud558\ub2e4": [777, 779, 796, 797, 801, 802, 809, 812], "\ud544\uc694\ud558\uc9c0": 787, "\ud544\uc694\ud55c": [771, 781, 795, 802, 804], "\ud544\uc694\ud55c\ub370": 799, "\ud544\uc694\ud55c\uc9c0": 802, "\ud558\uac70\ub098": 795, "\ud558\uac8c\ub41c\ub2e4": 809, "\ud558\uace0": [786, 794, 796, 797, 809], "\ud558\uae30": [774, 776, 787, 794, 796, 802, 810], "\ud558\ub098\uac00": [793, 812], "\ud558\ub098\ub294": [777, 786, 790, 792], "\ud558\ub098\ub85c": 777, "\ud558\ub098\ub85c\uc11c": 777, "\ud558\ub098\ub97c": [801, 812], "\ud558\ub098\uc529": 802, "\ud558\ub098\uc5d0\uc11c": 780, "\ud558\ub098\uc758": [774, 777, 779, 780, 787, 795, 799, 801, 806, 809, 810, 811], "\ud558\ub294": [771, 776, 777, 779, 790, 797, 798, 802, 803, 811], "\ud558\ub294\ub370": 796, "\ud558\ub294\uc9c0": 779, "\ud558\ub294\uc9c0\ub97c": [802, 805], "\ud558\uba70": 786, "\ud558\uba74": [796, 809], "\ud558\uba74\ub418\uae30": 800, "\ud558\uba74\ub41c\ub2e4": 796, "\ud558\uba74\uc11c": [776, 802], "\ud558\uc774\ub808\ubca8": 790, "\ud558\uc774\ud37c": 811, "\ud558\uc790": [771, 789], "\ud558\uc9c0\ub9cc": [774, 778, 779, 782, 786, 796, 799, 806], "\ud559\uc2b5": [777, 779, 788, 794, 796, 799, 806, 808], "\ud559\uc2b5\uacfc": [776, 795], "\ud559\uc2b5\ub420": 800, "\ud559\uc2b5\uc2dc": 779, "\ud559\uc2b5\uc2dc\ud0a4\ub294": [806, 811], "\ud559\uc2b5\uc5d0": [774, 776, 780, 799, 803], "\ud559\uc2b5\uc5d0\ub3c4": 802, "\ud559\uc2b5\uc5d0\uc11c": [794, 802], "\ud559\uc2b5\uc5d0\uc11c\ub294": [777, 778], "\ud559\uc2b5\uc740": [776, 803, 812], "\ud559\uc2b5\uc744": [776, 777, 778, 780, 795, 802, 803, 810], "\ud559\uc2b5\uc758": [806, 810], "\ud559\uc2b5\uc774": [774, 779, 780, 802, 811], "\ud559\uc2b5\uc774\ub2e4": 811, "\ud559\uc2b5\ud558\uae30": [776, 777, 788, 795, 810], "\ud559\uc2b5\ud558\ub294": [776, 795, 797, 802, 808], "\ud559\uc2b5\ud558\ub294\ub370": [795, 799], "\ud559\uc2b5\ud560": [797, 803, 805, 810], "\ud55c": [773, 776, 777, 778, 779, 780, 784, 787, 801, 807, 811, 812], "\ud55c\uac00\uc9c0": 790, "\ud55c\uac1c\uac00": 810, "\ud55c\uac1c\ub97c": 803, "\ud55c\uac1c\uc529": 810, "\ud55c\uac1c\uc5d0": 796, "\ud55c\uac1c\uc758": [773, 776, 779, 784, 787, 790, 810], "\ud55c\uae00": 788, "\ud55c\ub2e4": [772, 774, 776, 777, 778, 779, 780, 784, 786, 787, 790, 792, 793, 796, 797, 800, 801, 802, 803, 805, 806, 807, 809, 811], "\ud55c\ub2e4\uba74": [797, 809], "\ud55c\ubc88\uc5d0": 799, "\ud55c\ubc88\uc758": 810, "\ud560": [777, 779, 780, 783, 795, 796, 797, 802, 811], "\ud560\ub2f9\ub418\uc5b4": [779, 812], "\ud560\ub2f9\ub418\uc5c8\ub2e4\uba74": 779, "\ud560\ub2f9\ub41c": 779, "\ud560\ub2f9\ub41c\ub2e4": 779, "\ud560\ub2f9\uc73c\ub85c": 784, "\ud560\ub2f9\uc744": 778, "\ud560\ub2f9\ud558\ub294": 784, "\ud560\ub2f9\ud558\uc9c0": 779, "\ud560\ub2f9\ud55c": 779, "\ud560\ub2f9\ud560": 777, "\ud560\ub2f9\ud574\uc57c": 777, "\ud560\uc9c0\ub97c": 778, "\ud568\uaed8": [776, 777, 779, 783, 785, 792, 797, 812], "\ud568\uc218": [774, 786, 787, 789, 792, 803, 804, 812], "\ud568\uc218\uac00": [777, 790, 811], "\ud568\uc218\ub294": [777, 790, 796, 800, 805, 806, 807, 809, 810], "\ud568\uc218\ub4e4": [771, 798], "\ud568\uc218\ub4e4\uacfc": 790, "\ud568\uc218\ub4e4\ub85c": 806, "\ud568\uc218\ub4e4\uc5d0": 790, "\ud568\uc218\ub4e4\uc740": [783, 790, 798, 810], "\ud568\uc218\ub4e4\uc744": [777, 790], "\ud568\uc218\ub4e4\uc774": 796, "\ud568\uc218\ub85c": [772, 790, 809, 810, 811], "\ud568\uc218\ub85c\ub294": 790, "\ud568\uc218\ub97c": [771, 772, 775, 786, 790, 792, 796, 800, 801, 805, 806, 807, 809], "\ud568\uc218\uc548\uc5d0": 810, "\ud568\uc218\uc5d0": 774, "\ud568\uc218\uc5d0\uc11c": [774, 791, 804, 810], "\ud568\uc218\uc5d0\uc11c\uc758": 804, "\ud568\uc218\uc640": 792, "\ud568\uc218\uc758": [774, 790, 796, 805, 806], "\ud568\uc218\uc774\uace0": 796, "\ud568\uc218\uc774\ub2e4": [790, 796, 800, 805, 806, 807], "\ud569": 810, "\ud569\uc0b0\ud558\ub294": 810, "\ud569\uc740": 792, "\ud569\uccd0\uc11c": [789, 810], "\ud569\uccd0\uc57c\ud55c\ub2e4": [796, 802], "\ud569\uccd0\uc9c0\ub294\uc9c0\uc5d0": 799, "\ud569\ucce4\ub294\ub370": 790, "\ud569\uce58\uace0": 810, "\ud569\uce58\ub294": 793, "\ud569\uce58\ub294\ub370": 796, "\ud569\uce5c": 809, "\ud569\uce5c\ub2e4": 787, "\ud569\ud558\ub294": [790, 812], "\ud569\ud574\uc11c": 798, "\ud56d\uc0c1": [779, 783, 790, 796, 806], "\ud574\uacb0\ud558\uae30": 803, "\ud574\ub2f9": [780, 809, 812], "\ud574\ub2f9\ud558\ub294": [786, 802], "\ud574\ub2f9\ud55c\ub2e4": 787, "\ud574\uc11c": [777, 796], "\ud574\uc57c\ud55c\ub2e4": [801, 810], "\ud574\uc5d0": 782, "\ud574\uc8fc\uae30": 790, "\ud574\uc8fc\ub294": [772, 800], "\ud574\uc900\ub2e4": [776, 777, 802], "\ud575\uc2ec": 781, "\ud588\ub2e4\uba74": 782, "\ud588\uc73c\ub2c8": 801, "\ud589": [777, 779, 784], "\ud589\ub4e4": 801, "\ud589\ub82c\uacfc": 783, "\ud589\ub82c\uc744": 783, "\ud589\ub82c\uc758": 792, "\ud589\uc73c\ub85c": 801, "\ud589\uc740": 779, "\ud589\uc758": [777, 801], "\ud5a5\uc0c1\uc2dc\ucf1c\uc11c": 774, "\ud5a5\uc0c1\uc744": 798, "\ud5a5\uc0c1\ud558\uace0": 803, "\ud5a5\ud6c4": 779, "\ud5c8\uc6a9\ub41c\ub2e4": 784, "\ud5c8\uc6a9\ud55c\ub2e4": 803, "\ud5e4\ud14c\ub85c\uadf8\ub798\ud504\ub294": 793, "\ud604\uc0c1\uc744": 783, "\ud604\uc7ac": [776, 777], "\ud604\uc7ac\ub294": [777, 798], "\ud611\uccd0\uc9c4": 810, "\ud615\uc2dd\uc73c\ub85c": 779, "\ud615\ud0dc\ub85c": [776, 779, 782, 783, 790], "\ud615\ud0dc\uc758": [783, 787], "\ud615\ud0dc\uc774\uace0": 779, "\ud638\ucd9c\ub418\uace0": 807, "\ud638\ucd9c\ub418\uc5b4\uc57c": 777, "\ud638\ucd9c\ub41c\ub2e4": 777, "\ud638\ucd9c\ub420": 805, "\ud638\ucd9c\ub85c": [790, 805], "\ud638\ucd9c\uc2dc": 792, "\ud638\ucd9c\uc774": 790, "\ud638\ucd9c\ud558\uae30": 777, "\ud638\ucd9c\ud558\ub294": [790, 794], "\ud638\ucd9c\ud558\uc9c0": 790, "\ud638\ucd9c\ud55c": 777, "\ud638\ucd9c\ud55c\ub2e4": 810, "\ud638\ucd9c\ud560": [787, 790, 797, 800], "\ud638\ucd9c\ud574\uc57c": 792, "\ud638\ud658\ub418\ub294": [795, 808, 810], "\ud638\ud658\ub41c\ub2e4": 803, "\ud655\ub960": 800, "\ud655\ub960\ub4e4": 812, "\ud655\ub960\uc5d0": 796, "\ud655\uc778\ub418\uba74": 806, "\ud655\uc778\ud558\ub294": [772, 806], "\ud655\uc778\ud558\uc790": [774, 800], "\ud655\uc778\ud55c\ub2e4": 797, "\ud655\uc778\ud560": [774, 812], "\ud655\uc7a5\ud558\ub294": [806, 811], "\ud655\uc7a5\ud574\uc11c": 779, "\ud658\uacbd": 779, "\ud658\uc601\ud55c\ub2e4": 804, "\ud65c\uc131\ud654": [803, 806], "\ud65c\uc131\ud654\uc2dc\ud0ac": 790, "\ud65c\uc131\ud654\ud558\uba74": 803, "\ud65c\uc131\ud654\ud574\uc11c": 779, "\ud65c\uc6a9\ud558\uae30": [803, 806], "\ud65c\uc6a9\ud558\ub294": 792, "\ud65c\uc6a9\ud55c": 812, "\ud65c\uc6a9\ud55c\ub2e4": 812, "\ud65c\uc6a9\ud560": 812, "\ud65c\uc6a9\ud574\uc11c": 779, "\ud68c": 812, "\ud68c\uc18c": 783, "\ud6a8\uacfc\uc801\uc73c\ub85c": 810, "\ud6a8\uc728\uc801\uc73c\ub85c": [786, 789], "\ud6a8\uc728\uc801\uc774\uace0": 803, "\ud6a8\uc728\uc801\uc774\ub2e4": 775, "\ud6a8\uc728\uc801\uc778": [789, 801, 806], "\ud6a8\uc728\uc801\uc778\ub370": 792, "\ud6c4": [779, 792, 794, 795, 802, 810], "\ud6c4\uc5d0": [774, 796], "\ud6c4\uc5d0\ub294": 806, "\ud6c4\uc758": [774, 779], "\ud6c4\uc790\uac00": 792, "\ud6c4\uc790\ub294": 777, "\ud6e8\uc52c": [792, 795], "\ud754\ud558\uac8c": 791, "\ud754\ud55c": 790, "\ud754\ud788": [782, 794, 805, 809, 810], "\ud76c\uc18c\ud589\ub82c\uacfc": 783, "\ud788\ub4e0": 812, "\ud835\udc3e": 820}, "titles": ["dgl", "dgl.DGLGraph", "dgl.data", "dgl.dataloading", "dgl.distributed", "dgl.function", "dgl.geometry", "\ud83c\udd95 dgl.graphbolt", "dgl.multiprocessing", "dgl.ops", "dgl.optim", "dgl.sampling", "dgl.sparse", "API Reference", "Benchmark the performance of KNN algorithms", "dgl.nn (MXNet)", "dgl.nn (PyTorch)", "dgl.nn (TensorFlow)", "dgl.nn.functional", "dgl.transforms", "User-defined Functions", "Contribute to DGL", "DGL Foreign Function Interface (FFI)", "Environment Variables", "Frequently Asked Questions (FAQ)", "&lt;no title&gt;", "dgl.DGLGraph.__getitem__", "dgl.DGLGraph.add_edges", "dgl.DGLGraph.add_nodes", "dgl.DGLGraph.add_self_loop", "dgl.DGLGraph.adj", "dgl.DGLGraph.adj_external", "dgl.DGLGraph.adj_tensors", "dgl.DGLGraph.adjacency_matrix", "dgl.DGLGraph.apply_edges", "dgl.DGLGraph.apply_nodes", "dgl.DGLGraph.batch_num_edges", "dgl.DGLGraph.batch_num_nodes", "dgl.DGLGraph.batch_size", "dgl.DGLGraph.canonical_etypes", "dgl.DGLGraph.cpu", "dgl.DGLGraph.create_formats_", "dgl.DGLGraph.device", "dgl.DGLGraph.dstdata", "dgl.DGLGraph.dstnodes", "dgl.DGLGraph.dsttypes", "dgl.DGLGraph.edata", "dgl.DGLGraph.edge_attr_schemes", "dgl.DGLGraph.edge_ids", "dgl.DGLGraph.edge_subgraph", "dgl.DGLGraph.edge_type_subgraph", "dgl.DGLGraph.edges", "dgl.DGLGraph.etypes", "dgl.DGLGraph.filter_edges", "dgl.DGLGraph.filter_nodes", "dgl.DGLGraph.find_edges", "dgl.DGLGraph.formats", "dgl.DGLGraph.has_edges_between", "dgl.DGLGraph.has_nodes", "dgl.DGLGraph.idtype", "dgl.DGLGraph.in_degrees", "dgl.DGLGraph.in_edges", "dgl.DGLGraph.inc", "dgl.DGLGraph.incidence_matrix", "dgl.DGLGraph.int", "dgl.DGLGraph.is_homogeneous", "dgl.DGLGraph.is_multigraph", "dgl.DGLGraph.is_pinned", "dgl.DGLGraph.is_unibipartite", "dgl.DGLGraph.line_graph", "dgl.DGLGraph.local_scope", "dgl.DGLGraph.long", "dgl.DGLGraph.metagraph", "dgl.DGLGraph.multi_update_all", "dgl.DGLGraph.ndata", "dgl.DGLGraph.node_attr_schemes", "dgl.DGLGraph.node_type_subgraph", "dgl.DGLGraph.nodes", "dgl.DGLGraph.ntypes", "dgl.DGLGraph.num_dst_nodes", "dgl.DGLGraph.num_edges", "dgl.DGLGraph.num_nodes", "dgl.DGLGraph.num_src_nodes", "dgl.DGLGraph.number_of_dst_nodes", "dgl.DGLGraph.number_of_edges", "dgl.DGLGraph.number_of_nodes", "dgl.DGLGraph.number_of_src_nodes", "dgl.DGLGraph.out_degrees", "dgl.DGLGraph.out_edges", "dgl.DGLGraph.pin_memory_", "dgl.DGLGraph.predecessors", "dgl.DGLGraph.prop_edges", "dgl.DGLGraph.prop_nodes", "dgl.DGLGraph.pull", "dgl.DGLGraph.push", "dgl.DGLGraph.remove_edges", "dgl.DGLGraph.remove_nodes", "dgl.DGLGraph.remove_self_loop", "dgl.DGLGraph.reorder_graph", "dgl.DGLGraph.reverse", "dgl.DGLGraph.send_and_recv", "dgl.DGLGraph.set_batch_num_edges", "dgl.DGLGraph.set_batch_num_nodes", "dgl.DGLGraph.srcdata", "dgl.DGLGraph.srcnodes", "dgl.DGLGraph.srctypes", "dgl.DGLGraph.subgraph", "dgl.DGLGraph.successors", "dgl.DGLGraph.to", "dgl.DGLGraph.to_canonical_etype", "dgl.DGLGraph.to_cugraph", "dgl.DGLGraph.to_simple", "dgl.DGLGraph.unpin_memory_", "dgl.DGLGraph.update_all", "dgl.add_edges", "dgl.add_nodes", "dgl.add_reverse_edges", "dgl.add_self_loop", "dgl.adj_product_graph", "dgl.adj_sum_graph", "dgl.adjusted_homophily", "dgl.apply_each", "dgl.batch", "dgl.bfs_edges_generator", "dgl.bfs_nodes_generator", "dgl.bipartite_from_networkx", "dgl.bipartite_from_scipy", "dgl.block_to_graph", "dgl.broadcast_edges", "dgl.broadcast_nodes", "dgl.compact_graphs", "dgl.create_block", "AIFBDataset", "AMDataset", "ActorDataset", "AmazonCoBuyComputerDataset", "AmazonCoBuyPhotoDataset", "AmazonRatingsDataset", "AsGraphPredDataset", "AsLinkPredDataset", "AsNodePredDataset", "BA2MotifDataset", "BACommunityDataset", "BAShapeDataset", "BGSDataset", "BitcoinOTCDataset", "CIFAR10SuperPixelDataset", "CLUSTERDataset", "CSVDataset", "ChameleonDataset", "CiteseerGraphDataset", "CoauthorCSDataset", "CoauthorPhysicsDataset", "CoraFullDataset", "CoraGraphDataset", "CornellDataset", "DGLDataset", "FB15k237Dataset", "FB15kDataset", "FakeNewsDataset", "FlickrDataset", "FraudAmazonDataset", "FraudDataset", "FraudYelpDataset", "GDELTDataset", "GINDataset", "ICEWS18Dataset", "KarateClubDataset", "LegacyTUDataset", "MNISTSuperPixelDataset", "MUTAGDataset", "MinesweeperDataset", "MiniGCDataset", "MovieLensDataset", "PATTERNDataset", "PPIDataset", "PubmedGraphDataset", "QM7bDataset", "QM9Dataset", "QM9EdgeDataset", "QuestionsDataset", "RedditDataset", "RomanEmpireDataset", "SBMMixtureDataset", "SSTDataset", "SquirrelDataset", "TUDataset", "TexasDataset", "TolokersDataset", "TreeCycleDataset", "TreeGridDataset", "WN18Dataset", "WikiCSDataset", "WisconsinDataset", "YelpDataset", "ZINCDataset", "Subset", "add_node_property_split", "add_nodepred_split", "check_sha1", "download", "extract_archive", "get_download_dir", "load_info", "load_labels", "mask_nodes_by_property", "save_info", "split_dataset", "dgl.dataloading.BlockSampler", "ClusterGCNSampler", "DataLoader", "DistEdgeDataLoader", "DistNodeDataLoader", "GraphDataLoader", "LaborSampler", "MultiLayerFullNeighborSampler", "NeighborSampler", "SAINTSampler", "Sampler", "ShaDowKHopSampler", "dgl.dataloading.as_edge_prediction_sampler", "LazyFeature", "set_dst_lazy_features", "set_edge_lazy_features", "set_node_lazy_features", "set_src_lazy_features", "GlobalUniform", "PerSourceUniform", "Uniform", "dgl.dfs_edges_generator", "dgl.dfs_labeled_edges_generator", "dgl.distributed.edge_split", "dgl.distributed.find_edges", "dgl.distributed.in_subgraph", "dgl.distributed.initialize", "dgl.distributed.load_partition", "dgl.distributed.load_partition_book", "dgl.distributed.load_partition_feats", "dgl.distributed.node_split", "dgl.distributed.partition_graph", "dgl.distributed.sample_etype_neighbors", "dgl.distributed.sample_neighbors", "dgl.double_radius_node_labeling", "dgl.edge_homophily", "dgl.edge_label_informativeness", "dgl.edge_subgraph", "dgl.edge_type_subgraph", "dgl.from_cugraph", "dgl.from_networkx", "dgl.from_scipy", "dgl.function.copy_e", "dgl.function.copy_u", "dgl.function.e_add_u", "dgl.function.e_add_v", "dgl.function.e_div_u", "dgl.function.e_div_v", "dgl.function.e_dot_u", "dgl.function.e_dot_v", "dgl.function.e_mul_u", "dgl.function.e_mul_v", "dgl.function.e_sub_u", "dgl.function.e_sub_v", "dgl.function.max", "dgl.function.mean", "dgl.function.min", "dgl.function.sum", "dgl.function.u_add_e", "dgl.function.u_add_v", "dgl.function.u_div_e", "dgl.function.u_div_v", "dgl.function.u_dot_e", "dgl.function.u_dot_v", "dgl.function.u_mul_e", "dgl.function.u_mul_v", "dgl.function.u_sub_e", "dgl.function.u_sub_v", "dgl.function.v_add_e", "dgl.function.v_add_u", "dgl.function.v_div_e", "dgl.function.v_div_u", "dgl.function.v_dot_e", "dgl.function.v_dot_u", "dgl.function.v_mul_e", "dgl.function.v_mul_u", "dgl.function.v_sub_e", "dgl.function.v_sub_u", "dgl.graph", "BasicFeatureStore", "BuiltinDataset", "CopyTo", "DataLoader", "Dataset", "DistributedItemSampler", "Feature", "FeatureFetcher", "FeatureStore", "FusedCSCSamplingGraph", "GPUCachedFeature", "InSubgraphSampler", "ItemSampler", "ItemSet", "ItemSetDict", "LayerNeighborSampler", "LegacyDataset", "MiniBatch", "MiniBatchTransformer", "NegativeSampler", "NeighborSampler", "OnDiskDataset", "SampledSubgraph", "SampledSubgraphImpl", "SamplingGraph", "SubgraphSampler", "Task", "TorchBasedFeature", "TorchBasedFeatureStore", "UniformNegativeSampler", "dgl.graphbolt.add_reverse_edges", "dgl.graphbolt.compact_csc_format", "dgl.graphbolt.etype_str_to_tuple", "dgl.graphbolt.etype_tuple_to_str", "dgl.graphbolt.exclude_seed_edges", "dgl.graphbolt.expand_indptr", "dgl.graphbolt.from_dglgraph", "dgl.graphbolt.fused_csc_sampling_graph", "dgl.graphbolt.index_select", "dgl.graphbolt.isin", "dgl.graphbolt.load_from_shared_memory", "dgl.graphbolt.seed", "dgl.graphbolt.unique_and_compact", "dgl.graphbolt.unique_and_compact_csc_formats", "dgl.heterograph", "dgl.in_subgraph", "dgl.is_libxsmm_enabled", "dgl.khop_adj", "dgl.khop_graph", "dgl.khop_in_subgraph", "dgl.khop_out_subgraph", "dgl.knn_graph", "dgl.lap_pe", "dgl.laplacian_lambda_max", "dgl.line_graph", "dgl.linkx_homophily", "dgl.load_graphs", "dgl.max_edges", "dgl.max_nodes", "dgl.mean_edges", "dgl.mean_nodes", "dgl.merge", "dgl.metapath_reachable_graph", "dgl.metis_partition", "dgl.metis_partition_assignment", "dgl.multiprocessing.pytorch.call_once_and_share", "dgl.multiprocessing.pytorch.shared_tensor", "dgl.nn.functional.edge_softmax", "HeteroGraphConv", "AGNNConv", "APPNPConv", "ChebConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "EdgeConv", "GATConv", "GINConv", "GMMConv", "GatedGraphConv", "GraphConv", "NNConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SortPooling", "SumPooling", "Sequential", "DeepWalk", "HeteroEmbedding", "HeteroGraphConv", "HeteroLinear", "MetaPath2Vec", "TypedLinear", "AGNNConv", "APPNPConv", "AtomicConv", "CFConv", "ChebConv", "CuGraphGATConv", "CuGraphRelGraphConv", "CuGraphSAGEConv", "DGNConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "DotGatConv", "EGATConv", "EGNNConv", "EdgeConv", "EdgeGATConv", "EdgeWeightNorm", "GATConv", "GATv2Conv", "GCN2Conv", "GINConv", "GINEConv", "GMMConv", "GatedGCNConv", "GatedGraphConv", "GraphConv", "GroupRevRes", "HGTConv", "NNConv", "PNAConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "TWIRLSConv", "TWIRLSUnfoldingAndAttention", "GNNExplainer", "HeteroGNNExplainer", "HeteroPGExplainer", "HeteroSubgraphX", "PGExplainer", "SubgraphX", "KNNGraph", "RadiusGraph", "SegmentedKNNGraph", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SetTransformerDecoder", "SetTransformerEncoder", "SortPooling", "SumPooling", "WeightAndSum", "BiasedMHA", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "LapPosEncoder", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "EdgePredictor", "TransE", "TransR", "NodeEmbedding", "JumpingKnowledge", "LabelPropagation", "Sequential", "WeightBasis", "APPNPConv", "ChebConv", "GATConv", "GINConv", "GraphConv", "RelGraphConv", "SAGEConv", "SGConv", "AvgPooling", "GlobalAttentionPooling", "HeteroGraphConv", "MaxPooling", "SortPooling", "SumPooling", "dgl.node_homophily", "dgl.node_label_informativeness", "dgl.node_subgraph", "dgl.node_type_subgraph", "dgl.norm_by_dst", "dgl.ops.copy_e_max", "dgl.ops.copy_e_mean", "dgl.ops.copy_e_min", "dgl.ops.copy_e_sum", "dgl.ops.copy_u", "dgl.ops.copy_u_max", "dgl.ops.copy_u_mean", "dgl.ops.copy_u_min", "dgl.ops.copy_u_sum", "dgl.ops.copy_v", "dgl.ops.e_add_u", "dgl.ops.e_add_v", "dgl.ops.e_div_u", "dgl.ops.e_div_v", "dgl.ops.e_dot_u", "dgl.ops.e_dot_v", "dgl.ops.e_mul_u", "dgl.ops.e_mul_v", "dgl.ops.e_sub_u", "dgl.ops.e_sub_v", "dgl.ops.gather_mm", "dgl.ops.gsddmm", "dgl.ops.gspmm", "dgl.ops.segment_mm", "dgl.ops.segment_reduce", "dgl.ops.u_add_e", "dgl.ops.u_add_e_max", "dgl.ops.u_add_e_mean", "dgl.ops.u_add_e_min", "dgl.ops.u_add_e_sum", "dgl.ops.u_add_v", "dgl.ops.u_div_e", "dgl.ops.u_div_e_max", "dgl.ops.u_div_e_mean", "dgl.ops.u_div_e_min", "dgl.ops.u_div_e_sum", "dgl.ops.u_div_v", "dgl.ops.u_dot_e", "dgl.ops.u_dot_v", "dgl.ops.u_mul_e", "dgl.ops.u_mul_e_max", "dgl.ops.u_mul_e_mean", "dgl.ops.u_mul_e_min", "dgl.ops.u_mul_e_sum", "dgl.ops.u_mul_v", "dgl.ops.u_sub_e", "dgl.ops.u_sub_e_max", "dgl.ops.u_sub_e_mean", "dgl.ops.u_sub_e_min", "dgl.ops.u_sub_e_sum", "dgl.ops.u_sub_v", "dgl.ops.v_add_e", "dgl.ops.v_add_u", "dgl.ops.v_div_e", "dgl.ops.v_div_u", "dgl.ops.v_dot_e", "dgl.ops.v_dot_u", "dgl.ops.v_mul_e", "dgl.ops.v_mul_u", "dgl.ops.v_sub_e", "dgl.ops.v_sub_u", "dgl.out_subgraph", "dgl.partition_graph_with_halo", "dgl.prop_edges", "dgl.prop_edges_dfs", "dgl.prop_nodes", "dgl.prop_nodes_bfs", "dgl.prop_nodes_topo", "dgl.radius_graph", "dgl.rand_bipartite", "dgl.rand_graph", "dgl.random_walk_pe", "dgl.readout_edges", "dgl.readout_nodes", "dgl.remove_edges", "dgl.remove_nodes", "dgl.remove_self_loop", "dgl.reorder_graph", "dgl.reverse", "dgl.sampling.PinSAGESampler", "dgl.sampling.global_uniform_negative_sampling", "dgl.sampling.node2vec_random_walk", "dgl.sampling.pack_traces", "dgl.sampling.random_walk", "dgl.sampling.sample_labors", "dgl.sampling.sample_neighbors", "dgl.sampling.sample_neighbors_biased", "dgl.sampling.select_topk", "dgl.save_graphs", "dgl.seed", "dgl.segmented_knn_graph", "dgl.shortest_dist", "dgl.slice_batch", "dgl.softmax_edges", "dgl.softmax_nodes", "dgl.sort_csc_by_tag", "dgl.sort_csr_by_tag", "dgl.sparse.SparseMatrix.T", "dgl.sparse.SparseMatrix.coalesce", "dgl.sparse.SparseMatrix.col", "dgl.sparse.SparseMatrix.coo", "dgl.sparse.SparseMatrix.cpu", "dgl.sparse.SparseMatrix.csc", "dgl.sparse.SparseMatrix.csr", "dgl.sparse.SparseMatrix.cuda", "dgl.sparse.SparseMatrix.device", "dgl.sparse.SparseMatrix.double", "dgl.sparse.SparseMatrix.dtype", "dgl.sparse.SparseMatrix.float", "dgl.sparse.SparseMatrix.has_duplicate", "dgl.sparse.SparseMatrix.indices", "dgl.sparse.SparseMatrix.int", "dgl.sparse.SparseMatrix.long", "dgl.sparse.SparseMatrix.neg", "dgl.sparse.SparseMatrix.nnz", "dgl.sparse.SparseMatrix.reduce", "dgl.sparse.SparseMatrix.row", "dgl.sparse.SparseMatrix.shape", "dgl.sparse.SparseMatrix.smax", "dgl.sparse.SparseMatrix.smean", "dgl.sparse.SparseMatrix.smin", "dgl.sparse.SparseMatrix.softmax", "dgl.sparse.SparseMatrix.sum", "dgl.sparse.SparseMatrix.t", "dgl.sparse.SparseMatrix.to", "dgl.sparse.SparseMatrix.to_dense", "dgl.sparse.SparseMatrix.transpose", "dgl.sparse.SparseMatrix.val", "dgl.sparse.add", "dgl.sparse.bsddmm", "dgl.sparse.bspmm", "dgl.sparse.diag", "dgl.sparse.div", "dgl.sparse.from_coo", "dgl.sparse.from_csc", "dgl.sparse.from_csr", "dgl.sparse.identity", "dgl.sparse.matmul", "dgl.sparse.mul", "dgl.sparse.power", "dgl.sparse.sddmm", "dgl.sparse.softmax", "dgl.sparse.sp_add_v", "dgl.sparse.sp_broadcast_v", "dgl.sparse.sp_div_v", "dgl.sparse.sp_mul_v", "dgl.sparse.sp_sub_v", "dgl.sparse.spmatrix", "dgl.sparse.spmm", "dgl.sparse.spspmm", "dgl.sparse.sub", "dgl.sparse.val_like", "dgl.sum_edges", "dgl.sum_nodes", "dgl.svd_pe", "dgl.to_bidirected", "dgl.to_block", "dgl.to_cugraph", "dgl.to_double", "dgl.to_float", "dgl.to_half", "dgl.to_heterogeneous", "dgl.to_homogeneous", "dgl.to_networkx", "dgl.to_simple", "dgl.to_simple_graph", "dgl.topk_edges", "dgl.topk_nodes", "dgl.topological_nodes_generator", "AddEdge", "AddMetaPaths", "AddReverse", "AddSelfLoop", "BaseTransform", "Compose", "DropEdge", "DropNode", "FeatMask", "GCNNorm", "GDC", "HeatKernel", "KHopGraph", "LapPE", "LineGraph", "NodeShuffle", "PPR", "RandomWalkPE", "RemoveSelfLoop", "RowFeatNormalizer", "SIGNDiffusion", "SVDPE", "ToLevi", "ToSimple", "dgl.udf.EdgeBatch.batch_size", "dgl.udf.EdgeBatch.data", "dgl.udf.EdgeBatch.dst", "dgl.udf.EdgeBatch.edges", "dgl.udf.EdgeBatch.src", "dgl.udf.NodeBatch.batch_size", "dgl.udf.NodeBatch.data", "dgl.udf.NodeBatch.mailbox", "dgl.udf.NodeBatch.nodes", "dgl.unbatch", "dgl.use_libxsmm", "Prepare Data", "\ud83c\udd95 Tutorial: Graph Transformer", "Build Model", "Chapter 4: Graph Data Pipeline", "4.1 DGLDataset class", "4.2 Download raw data (optional)", "4.6 Loading data from CSV files", "4.5 Loading OGB datasets using <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> package", "4.3 Process data", "4.4 Save and load data", "Chapter 7: Distributed Training", "7.3 Programming APIs", "7.5 Heterogeneous Graph Under The Hood", "7.4 Advanced Graph Partitioning", "7.1 Data Preprocessing", "7.2 Tools for launching distributed training/inference", "Chapter 1: Graph", "1.1 Some Basic Definitions about Graphs (Graphs 101)", "1.4 Creating Graphs from External Sources", "1.3 Node and Edge Features", "1.6 Using DGLGraph on a GPU", "1.2 Graphs, Nodes, and Edges", "1.5 Heterogeneous Graphs", "User Guide", "Chapter 2: Message Passing", "2.1 Built-in Functions and Message Passing APIs", "2.2 Writing Efficient Message Passing Code", "2.5 Message Passing on Heterogeneous Graph", "2.3 Apply Message Passing On Part Of The Graph", "Chapter 6: Stochastic Training on Large Graphs", "6.4 Implementing Custom Graph Samplers", "6.2 Training GNN for Edge Classification with Neighborhood Sampling", "6.8 Using GPU for Neighborhood Sampling", "6.7 Exact Offline Inference on Large Graphs", "6.3 Training GNN for Link Prediction with Neighborhood Sampling", "6.6 Implementing Custom GNN Module for Mini-batch Training", "6.1 Training GNN for Node Classification with Neighborhood Sampling", "6.9 Data Loading Parallelism", "6.5 Training GNN with DGL sparse", "Chapter 8: Mixed Precision Training", "Chapter 3: Building GNN Modules", "3.1 DGL NN Module Construction Function", "3.2 DGL NN Module Forward Function", "3.3 Heterogeneous GraphConv Module", "Chapter 5: Training Graph Neural Networks", "5.2 Edge Classification/Regression", "5.5 Use of Edge Weights", "5.4 Graph Classification", "5.3 Link Prediction", "5.1 Node Classification/Regression", "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053", "4.1 DGLDataset\u7c7b", "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09", "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6", "4.3 \u5904\u7406\u6570\u636e", "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e", "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3", "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API", "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406", "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177", "\u7b2c1\u7ae0\uff1a\u56fe", "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5", "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe", "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81", "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph", "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9", "1.5 \u5f02\u6784\u56fe", "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011", "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f", "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API", "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801", "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3", "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668", "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad", "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757", "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757", "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570", "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570", "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757", "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc", "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52", "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd", "5.4 \u6574\u56fe\u5206\u7c7b", "5.3 \u94fe\u63a5\u9884\u6d4b", "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52", "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778", "4.1 DGLDataset \ud074\ub798\uc2a4", "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)", "4.5 <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30", "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1", "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529", "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5", "7.2 \ubd84\uc0b0 APIs", "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30", "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac", "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4", "1\uc7a5: \uadf8\ub798\ud504", "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)", "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30", "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98", "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30", "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0", "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)", "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]", "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)", "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4", "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30", "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95", "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec", "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30", "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5", "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30", "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30", "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860", "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30", "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "8\uc7a5: Mixed Precision \ud559\uc2b5", "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30", "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218", "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218", "3.3 Heterogeneous GraphConv \ubaa8\ub4c8", "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30", "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)", "5.4 \uadf8\ub798\ud504 \ubd84\ub958", "5.3 \ub9c1\ud06c \uc608\uce21", "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)", "Welcome to Deep Graph Library Tutorials and Documentation", "Install and Setup", "Building a Graph Convolutional Network Using Sparse Matrices", "Graph Diffusion in Graph Neural Networks", "Graph Transformer in a Nutshell", "Hypergraph Neural Networks", "Tutorials: dgl.sparse", "Quickstart", "Performance Benchmarks", "Resources", "Computation times", "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt", "Link Prediction", "Neighbor Sampling Overview", "Node Classification", "Composing OnDiskDataset from raw data", "YAML specification", "OnDiskDataset for Heterogeneous Graph", "OnDiskDataset for Homogeneous Graph", "Node Classification with DGL", "How Does DGL Represent A Graph?", "Write your own GNN module", "Link Prediction using Graph Neural Networks", "Training a GNN for Graph Classification", "Make Your Own Dataset", "A Blitz Introduction to DGL", "Computation times", "Improve Scalability on Multi-Core CPUs", "CPU Best Practices", "Training on CPUs", "Computation times", "Distributed Node Classification", "Distributed Link Prediction", "Distributed training", "Computation times", "Graph Convolutional Network", "Relational Graph Convolutional Network", "Line Graph Neural Network", "Understand Graph Attention Network", "Graph neural networks and its variants", "Computation times", "Tree-LSTM in DGL", "Batching many small graphs", "Computation times", "Generative Models of Graphs", "Generative models", "Computation times", "Capsule Network", "Transformer as a Graph Neural Network", "Revisit classic models from a graph perspective", "Computation times", "Paper Study with DGL", "Computation times", "Single Machine Multi-GPU Minibatch Graph Classification", "Single Machine Multi-GPU Minibatch Node Classification", "Training on Multiple GPUs", "Computation times"], "titleterms": {"": [832, 833, 834, 836, 851], "1": [684, 694, 696, 697, 698, 699, 700, 701, 702, 705, 716, 721, 729, 731, 738, 741, 742, 743, 744, 745, 746, 749, 759, 761, 769, 771, 778, 779, 782, 783, 784, 785, 786, 787, 790, 802, 805, 812, 820, 840, 851, 854, 857, 860], "101": [697, 782], "1\uc7a5": 781, "2": [685, 694, 695, 701, 704, 705, 706, 707, 708, 711, 722, 725, 732, 737, 745, 749, 750, 751, 752, 755, 762, 765, 772, 777, 778, 786, 790, 791, 792, 793, 794, 797, 806, 809, 820, 840, 851, 854, 857, 860], "2\uc7a5": 789, "3": [688, 691, 699, 708, 714, 720, 721, 722, 723, 728, 734, 739, 743, 752, 757, 761, 762, 763, 768, 774, 778, 784, 794, 800, 805, 806, 807, 811, 821, 840, 851, 854, 857, 860], "3\uc7a5": 804, "4": [683, 684, 685, 686, 687, 688, 689, 693, 698, 710, 727, 731, 732, 733, 734, 735, 742, 754, 767, 771, 772, 773, 774, 775, 780, 783, 791, 796, 810, 821, 840, 851], "4\uc7a5": 770, "5": [687, 692, 702, 707, 718, 724, 725, 726, 727, 728, 729, 733, 746, 751, 758, 765, 766, 767, 768, 769, 773, 787, 793, 801, 809, 810, 811, 812, 821, 840], "5\uc7a5": 808, "6": [686, 700, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 744, 754, 755, 756, 757, 758, 759, 785, 796, 797, 798, 799, 800, 801, 802, 821, 840], "6\uc7a5": 795, "7": [690, 691, 692, 693, 694, 695, 713, 737, 738, 739, 777, 778, 779, 780, 798, 840], "7\uc7a5": 776, "8": [712, 719, 840], "8\uc7a5": 803, "9": 717, "A": [833, 836, 838, 849], "For": [711, 714, 716], "Of": 708, "On": 708, "One": 850, "The": [692, 708, 849, 854, 857], "__getitem__": 26, "about": 697, "abstract": 850, "access": [691, 692, 844], "action": 857, "activ": [12, 820], "actordataset": 134, "adapt": [2, 711, 716, 861], "add": [604, 857], "add_edg": [27, 114], "add_nod": [28, 115], "add_node_property_split": 197, "add_nodepred_split": 198, "add_reverse_edg": [116, 317], "add_self_loop": [29, 117], "addedg": 645, "addmetapath": 646, "addrevers": 647, "addselfloop": 648, "adj": 30, "adj_extern": 31, "adj_product_graph": 118, "adj_sum_graph": 119, "adj_tensor": 32, "adjac": [0, 1], "adjacency_matrix": 33, "adjusted_homophili": 120, "advanc": 693, "after": [692, 710, 722], "aggreg": 861, "agnnconv": [356, 386], "aifbdataset": 132, "algorithm": [14, 693, 850], "all": 861, "alloc": 841, "altern": 841, "amazoncobuycomputerdataset": 135, "amazoncobuyphotodataset": 136, "amazonratingsdataset": 137, "amdataset": 133, "an": [725, 850], "api": [9, 13, 691, 694, 705, 777, 854], "api\ub4e4": 790, "appli": 708, "apply_each": 121, "apply_edg": [34, 835], "apply_nod": 35, "appnpconv": [357, 387, 457], "approach": 709, "argo": 840, "as_edge_prediction_sampl": 220, "asgraphpreddataset": 138, "ask": 24, "aslinkpreddataset": 139, "asnodepreddataset": 140, "assign": 833, "atomicconv": 388, "attent": [817, 851, 861], "attribut": [12, 820], "avgpool": [373, 432, 465], "ba2motifdataset": 141, "backend": [23, 814], "bacommunitydataset": 142, "balanc": 694, "base": [2, 712], "basetransform": 649, "bashapedataset": 143, "basic": 697, "basicfeaturestor": 287, "batch": [0, 1, 122, 715, 727, 810, 836, 844, 845, 850, 854, 855, 864, 867], "batch_num_edg": 36, "batch_num_nod": 37, "batch_siz": [38, 669, 674], "benchmark": [14, 821], "best": [834, 841], "bfloat16": 719, "bfs_edges_gener": 123, "bfs_nodes_gener": 124, "bgsdataset": 144, "biasedmha": 441, "binari": [698, 702, 850], "bipartit": [715, 796, 801], "bipartite_from_networkx": 125, "bipartite_from_scipi": 126, "bitcoinotcdataset": 145, "blitz": 838, "block_to_graph": 127, "blocksampl": 208, "book": 4, "brief": 849, "broadcast": [12, 820], "broadcast_edg": 128, "broadcast_nod": 129, "bsddmm": 605, "bspmm": 606, "bucket": 20, "build": [21, 682, 720, 815, 861], "built": [5, 705, 861], "builtindataset": 288, "call_once_and_shar": 352, "canonical_etyp": 39, "capsul": 860, "cell": 854, "cfconv": 389, "chain": 850, "chameleondataset": 149, "chang": 21, "chapter": [683, 690, 696, 704, 709, 719, 720, 724], "chebconv": [358, 390, 458], "check": 722, "check_sha1": 199, "choos": 857, "chunk": 694, "cifar10superpixeldataset": 146, "citeseergraphdataset": 150, "class": [2, 3, 12, 684, 857, 861], "classic": [862, 864], "classif": [688, 711, 716, 725, 727, 729, 827, 830, 831, 832, 836, 837, 844, 866, 867], "client": 844, "clusterdataset": 147, "clustergcnsampl": 209, "coalesc": 574, "coauthorcsdataset": 151, "coauthorphysicsdataset": 152, "code": [21, 706], "col": 575, "comma": [698, 702, 783, 787], "commun": [844, 845, 850], "compact_csc_format": 318, "compact_graph": 130, "complet": [16, 850], "compos": [650, 828], "comput": [1, 727, 823, 827, 839, 843, 847, 853, 856, 859, 861, 863, 865, 869], "conclus": [14, 825, 827], "conda": 814, "configur": 23, "construct": [721, 833], "contain": 22, "contribut": [21, 813], "control": 1, "conv": [15, 16, 17], "convers": 692, "convert": 702, "convolut": [815, 832, 848, 849], "coo": 576, "copy_": 250, "copy_e_max": 476, "copy_e_mean": 477, "copy_e_min": 478, "copy_e_sum": 479, "copy_u": [251, 480], "copy_u_max": 481, "copy_u_mean": 482, "copy_u_min": 483, "copy_u_sum": 484, "copy_v": 485, "copyto": [7, 289], "cora": [832, 850, 851], "corafulldataset": 153, "coragraphdataset": 154, "core": [21, 840], "cornelldataset": 155, "cpu": [40, 577, 719, 840, 841, 842], "creat": [0, 698, 702, 820, 837, 849], "create_block": 131, "create_formats_": 41, "creation": [12, 691], "csc": 578, "csr": 579, "csv": [686, 698, 702, 742, 746, 783, 787, 837], "csvdataset": [148, 837], "cuda": [580, 712], "cugraph": 16, "cugraphgatconv": 391, "cugraphrelgraphconv": 392, "cugraphsageconv": 393, "custom": [686, 710, 715, 834], "data": [2, 9, 21, 23, 670, 675, 680, 683, 685, 686, 688, 689, 691, 692, 694, 711, 712, 714, 716, 717, 727, 818, 825, 827, 828, 830, 831, 836, 866, 867], "dataload": [3, 4, 7, 208, 210, 220, 290], "dataset": [2, 7, 291, 686, 687, 688, 825, 827, 832, 837, 849, 850, 854, 861], "dataset_nam": 829, "deep": 813, "deepwalk": 380, "defin": [20, 22, 711, 714, 716, 825, 827, 832, 834, 835, 836, 844, 845, 849, 854, 860, 867], "definit": [697, 727], "deg": 850, "degre": [20, 682], "degreeencod": 442, "dens": [15, 16], "densechebconv": [359, 395], "densegraphconv": [360, 396], "densesageconv": [361, 397], "depend": 827, "descript": [6, 386, 387, 388, 389, 394, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 415, 416, 418, 419, 420, 421, 422, 449, 450, 451, 453], "destin": 857, "detect": 850, "develop": 21, "devic": [1, 42, 581], "dfs_edges_gener": 229, "dfs_labeled_edges_gener": 230, "dgl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 208, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 691, 698, 702, 712, 718, 721, 722, 742, 761, 777, 783, 787, 798, 805, 806, 819, 820, 825, 827, 830, 831, 832, 833, 836, 838, 848, 849, 850, 851, 854, 861, 864], "dgldataset": [156, 684, 771, 837], "dgldataset\u7c7b": 731, "dglgraph": [1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 700, 785], "dglgraph\ub85c": 779, "dgl\u4e8c\u8fdb\u5236\u683c\u5f0f": 746, "dgl\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": 737, "dgmg": 857, "dgnconv": 394, "diag": 607, "diagon": 820, "differ": [725, 814], "diffus": 816, "disk": [698, 702], "dispatch": 694, "distedgedataload": 211, "distembed": [691, 777], "distgraph": [691, 777], "distnodedataload": 212, "distribut": [4, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 690, 691, 692, 694, 695, 777, 844, 845, 846, 866], "distributeditemsampl": 292, "div": 608, "doc": 21, "document": [21, 813], "doe": 833, "dotgatconv": 398, "doubl": 582, "double_radius_node_label": 242, "download": [200, 685], "dropedg": 651, "dropnod": 652, "dst": 671, "dstdata": 43, "dstnode": 44, "dsttype": 45, "dtype": 583, "dure": 692, "dynam": 857, "e_add_u": [252, 486], "e_add_v": [253, 487], "e_div_u": [254, 488], "e_div_v": [255, 489], "e_dot_u": [256, 490], "e_dot_v": [257, 491], "e_mul_u": [258, 492], "e_mul_v": [259, 493], "e_sub_u": [260, 494], "e_sub_v": [261, 495], "each": 866, "edata": 46, "edg": [1, 2, 20, 51, 672, 691, 698, 699, 701, 702, 710, 711, 725, 726, 742, 783, 833, 857, 861], "edge_attr_schem": 47, "edge_homophili": 243, "edge_id": 48, "edge_label_inform": 244, "edge_softmax": 354, "edge_split": 231, "edge_subgraph": [49, 245], "edge_type_subgraph": [50, 246], "edgebatch": [669, 670, 671, 672, 673], "edgeconv": [362, 401], "edgedata": 686, "edgegatconv": 402, "edgepredictor": 449, "edgeweightnorm": 403, "editori": 21, "effici": 706, "egatconv": 399, "egnnconv": 400, "egtlay": 443, "element": 820, "elementwis": [12, 820], "embed": [4, 10, 16, 857], "enabl": 840, "encod": [0, 682, 857], "end": [719, 803], "environ": [23, 844, 845], "equat": 851, "etyp": 52, "etype_str_to_tupl": 319, "etype_tuple_to_str": 320, "evalu": [818, 825, 867], "even": 834, "everyth": 851, "exact": 713, "exampl": [21, 354, 694, 719], "exclud": 710, "exclude_seed_edg": 321, "execut": 861, "exercis": 820, "exist": 725, "expand_indptr": 322, "extern": 698, "extract": 0, "extract_arch": 201, "f": 850, "fakenewsdataset": 159, "faq": 24, "farthest": 6, "fb15k237dataset": 157, "fb15kdataset": 158, "featmask": 653, "featur": [1, 3, 7, 21, 293, 686, 699, 722, 830, 831, 833, 835], "feature_data": 829, "featurefetch": [7, 294], "featurestor": [7, 295], "ffi": 22, "file": [686, 830, 831], "filter_edg": 53, "filter_nod": 54, "find_edg": [55, 232], "flickrdataset": 160, "float": 584, "flow": 857, "folder": 686, "foreign": 22, "format": [1, 56, 693, 694, 698, 702], "formula": 848, "forward": [682, 722, 806], "fraudamazondataset": 161, "frauddataset": 162, "fraudyelpdataset": 163, "frequent": 24, "from": [686, 698, 702, 711, 725, 814, 828, 837, 848, 850, 862, 864], "from_coo": 609, "from_csc": 610, "from_csr": 611, "from_cugraph": 247, "from_dglgraph": 323, "from_networkx": 248, "from_scipi": 249, "full": [686, 849], "function": [3, 5, 9, 12, 18, 20, 22, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 354, 705, 712, 721, 722, 820, 834, 860, 861, 866], "fuse": 850, "fused_csc_sampling_graph": 324, "fusedcscsamplinggraph": 296, "gat": 851, "gatconv": [363, 404, 459], "gatedgcnconv": 410, "gatedgraphconv": [366, 411], "gather_mm": 496, "gathermm": 9, "gatv2conv": 405, "gcn": [815, 832, 848, 849, 851], "gcn2conv": 406, "gcnnorm": 654, "gdc": 655, "gdeltdataset": 164, "gener": [21, 830, 831, 857, 858, 864], "geometri": 6, "get": [813, 844, 845], "get_download_dir": 202, "ginconv": [364, 407, 460], "gindataset": 165, "gineconv": 408, "git": 21, "github": 21, "global": [15, 16, 17, 23], "global_uniform_negative_sampl": 556, "globalattentionpool": [374, 433, 466], "globaluniform": 226, "gml": [698, 742, 783], "gmmconv": [365, 409], "gnn": [711, 714, 715, 716, 718, 720, 760, 797, 800, 801, 802, 804, 816, 824, 832, 834, 835, 836, 840, 844, 845], "gnnexplain": 423, "gpu": [700, 712, 798, 832, 866, 867, 868], "gpucachedfeatur": 297, "gpu\uc5d0\uc11c": 785, "graph": [0, 1, 2, 4, 7, 16, 286, 354, 681, 683, 686, 688, 691, 692, 693, 694, 696, 697, 698, 701, 702, 707, 708, 709, 710, 711, 713, 714, 715, 716, 722, 724, 725, 727, 728, 729, 787, 801, 806, 813, 815, 816, 817, 829, 830, 831, 832, 833, 835, 836, 837, 844, 845, 848, 849, 850, 851, 852, 855, 857, 860, 861, 862, 864, 866], "graphbolt": [7, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 824], "graphconv": [367, 412, 461, 723, 807], "graphdata": 686, "graphdataload": 213, "graphorm": 682, "graphormerlay": 444, "graphsag": [714, 835], "group": 866, "grouprevr": 413, "gsddmm": [9, 497], "gspmm": [9, 498], "guid": 703, "half": [719, 803], "handl": [827, 849], "has_dupl": 585, "has_edges_between": 57, "has_nod": 58, "head": [817, 851, 861], "heatkernel": 656, "heteroembed": 381, "heterogen": [15, 16, 17, 354, 686, 692, 702, 707, 710, 711, 714, 715, 716, 723, 724, 725, 727, 728, 729, 778, 779, 787, 796, 797, 800, 801, 802, 807, 808, 809, 810, 811, 812, 830], "heterognnexplain": 424, "heterograph": [331, 702], "heterographconv": [355, 382, 467, 723, 807], "heterographconv\u7684\u5b9e\u73b0\u903b\u8f91": 763, "heterolinear": 383, "heteropgexplain": 425, "heterosubgraphx": 426, "hgnn": 818, "hgtconv": 414, "homogen": [354, 702, 715, 801, 831], "homophili": 0, "hood": 692, "host": 21, "how": [827, 833, 861], "hyper": 841, "hypergraph": 818, "i": 850, "icews18dataset": 166, "id": [1, 692, 694, 779, 844, 845], "idea": [849, 850, 860], "ident": 612, "idtyp": 59, "implement": [710, 713, 715, 723, 725, 848, 849, 850, 857, 860, 861], "import": 867, "improv": 840, "in_degre": 60, "in_edg": 61, "in_subgraph": [233, 332], "inc": 62, "incid": 1, "incidence_matrix": 63, "index": 813, "index_select": 325, "indic": 586, "infer": [695, 713, 845, 850], "inform": [0, 1], "initi": [4, 234, 691, 820, 844, 845, 860, 866], "input": 693, "instal": [693, 814, 825, 827, 830, 831, 840], "instanti": [830, 831], "insubgraphsampl": 298, "int": [64, 587], "integr": 821, "intel": 841, "interact": 851, "interfac": [21, 22], "introduc": 851, "introduct": [838, 849, 857], "is_homogen": 65, "is_libxsmm_en": 333, "is_multigraph": 66, "is_pin": 67, "is_unibipartit": 68, "isin": 326, "itemsampl": [7, 299], "itemset": [7, 300], "itemsetdict": 301, "its": [852, 864], "job": 844, "json": [698, 742, 783], "jumpingknowledg": 453, "karateclubdataset": 167, "kei": [849, 850, 860], "khop_adj": 334, "khop_graph": 335, "khop_in_subgraph": 336, "khop_out_subgraph": 337, "khopgraph": 657, "knn": 14, "knn_graph": 338, "knngraph": 429, "knowledg": 16, "label": [0, 686], "labelpropag": 454, "laborsampl": 214, "lap_p": 339, "laplacian_lambda_max": 340, "lapp": 658, "lapposencod": 445, "larg": [709, 713], "launch": [695, 844], "layer": [15, 16, 17, 682, 815, 817, 818, 849, 850, 861], "layerneighborsampl": 302, "lazyfeatur": 221, "learn": [15, 16, 17, 851], "legacydataset": 303, "legacytudataset": 168, "less": 686, "level": 686, "lgnn": 850, "librari": [698, 813], "line": 850, "line_graph": [69, 341], "linear": [12, 820], "linegraph": 659, "link": [3, 16, 688, 714, 728, 825, 830, 831, 835, 837, 845, 849], "linkx_homophili": 342, "linux": 814, "load": [4, 686, 687, 689, 692, 694, 698, 702, 717, 727, 818, 825, 827, 832, 833, 835, 836, 867], "load_from_shared_memori": 327, "load_graph": 343, "load_info": 203, "load_label": 204, "load_partit": 235, "load_partition_book": 236, "load_partition_feat": 237, "loader": [711, 712, 714, 716, 825, 827, 836, 866], "local": 21, "local_scop": 70, "logic": 723, "long": [71, 588], "loop": [711, 714, 716, 725, 727, 728, 729, 809, 812, 825, 827, 834, 835, 836, 844, 845, 849, 854, 867], "lsc": 694, "lstm": 854, "machin": [866, 867], "maco": 814, "mag240m": 694, "mailbox": 676, "main": [854, 857, 861, 866], "make": [694, 837], "mani": [855, 864], "manipul": 1, "map": 694, "mask_nodes_by_properti": 205, "match": 6, "matmul": 613, "matric": 815, "matrix": [1, 12, 820, 850], "max": 262, "max_edg": 344, "max_nod": 345, "maxpool": [375, 434, 468], "mean": 263, "mean_edg": 346, "mean_nod": 347, "measur": 0, "memori": 841, "merg": 348, "messag": [0, 5, 9, 20, 704, 705, 706, 707, 708, 719, 722, 726, 789, 826, 834, 848, 850, 854, 860, 861], "metagraph": [1, 72], "metapath2vec": 384, "metapath_reachable_graph": 349, "method": [12, 820], "meti": 693, "metis_partit": 350, "metis_partition_assign": 351, "mfg": 715, "mfg\ub97c": 801, "min": 264, "minesweeperdataset": 171, "mini": [715, 844, 845, 867], "minibatch": [7, 304, 711, 714, 716, 866, 867], "minibatchtransform": 305, "minigcdataset": 172, "misc": 1, "mix": [719, 803], "mnistsuperpixeldataset": 169, "mode": 691, "model": [21, 682, 711, 714, 716, 725, 727, 729, 817, 825, 827, 835, 836, 844, 845, 848, 849, 857, 858, 860, 862, 864, 866, 867], "modul": [9, 15, 16, 17, 691, 715, 720, 721, 722, 723, 726, 834], "more": 834, "movielensdataset": 173, "mul": 614, "multi": [817, 840, 851, 861, 866, 867], "multi_update_al": 73, "multilayerfullneighborsampl": 215, "multipl": [12, 21, 686, 702, 820, 850, 868], "multiprocess": [8, 352, 353], "mutagdataset": 170, "mutat": 1, "mxnet": [15, 814], "ndata": 74, "neg": [3, 11, 589, 714, 800, 835], "negativesampl": [7, 306], "neighbor": [6, 11, 711, 712, 714, 825, 826, 827], "neighborhood": [709, 711, 712, 714, 716, 795], "neighborsampl": [216, 307], "network": [16, 724, 727, 729, 815, 816, 818, 832, 835, 844, 845, 848, 849, 850, 851, 852, 860, 861, 864], "neural": [724, 727, 729, 816, 818, 835, 850, 852, 861, 864], "new": [21, 22], "next": [832, 833, 834, 836, 851], "nf": 844, "nn": [15, 16, 17, 18, 354, 721, 722, 726, 805, 806], "nnconv": [368, 415], "nnz": 590, "nn\u6a21\u5757\u7684forward\u51fd\u6570": 762, "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": 761, "node": [1, 2, 4, 10, 20, 77, 677, 688, 691, 698, 699, 701, 716, 725, 729, 742, 783, 825, 827, 830, 831, 832, 833, 837, 844, 845, 857, 867], "node2vec_random_walk": 557, "node_attr_schem": 75, "node_homophili": 471, "node_label_inform": 472, "node_split": 238, "node_subgraph": 473, "node_type_subgraph": [76, 474], "nodebatch": [674, 675, 676, 677], "nodedata": 686, "nodeembed": 452, "nodeshuffl": 660, "non": [12, 820], "norm_by_dst": 475, "ntype": 78, "num_dst_nod": 79, "num_edg": 80, "num_nod": 81, "num_src_nod": 82, "number_of_dst_nod": 83, "number_of_edg": 84, "number_of_nod": 85, "number_of_src_nod": 86, "nutshel": 817, "object": [837, 857], "offlin": 713, "ogb": [687, 773], "ondiskdataset": [308, 828, 830, 831], "one": 848, "onli": 844, "op": [0, 9, 12, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536], "openmp": 841, "oper": [4, 12, 820, 850], "optim": [4, 10, 857], "option": [23, 685, 772], "organ": [830, 831], "origin": 711, "out": 0, "out_degre": 87, "out_edg": 88, "out_subgraph": 537, "output": [693, 722], "overview": [709, 724, 725, 727, 728, 729, 824, 826, 832, 835, 836, 837, 848], "own": [834, 837, 840], "pack_trac": 558, "packag": [687, 825, 827, 830, 831, 867], "paper": 864, "paradigm": [704, 789], "parallel": [693, 717, 850], "parmeti": [693, 779], "parmetis\ub97c": 779, "parser": 686, "part": 708, "partit": [0, 4, 692, 693, 694, 844, 845], "partition_graph": 239, "partition_graph_with_halo": 538, "pass": [9, 20, 704, 705, 706, 707, 708, 719, 722, 726, 789, 826, 834, 848, 850, 854, 860, 861], "path": 682, "pathencod": 446, "patterndataset": 174, "perform": [14, 821, 825], "persourceuniform": 227, "perspect": [848, 862, 864], "pgexplain": 427, "pin_memory_": 89, "pinsagesampl": [555, 712], "pip": 814, "pipelin": [683, 694], "platform": 21, "pnaconv": 416, "point": 6, "pool": [15, 16, 17], "posit": [0, 835], "postprocess": 861, "power": 615, "ppi": 851, "ppidataset": 175, "ppr": 661, "practic": [834, 841], "precis": [719, 803], "precision\uc744": 803, "predecessor": 90, "predict": [2, 3, 16, 688, 714, 725, 728, 825, 830, 831, 835, 837, 845, 849], "prefetch": 3, "prepar": [680, 830, 831, 835, 866], "preprocess": [692, 694, 861], "prev": 850, "procedur": 867, "process": [21, 688, 866, 867], "program": [691, 840], "progress": 850, "prop_edg": [91, 539], "prop_edges_df": 540, "prop_nod": [92, 541], "prop_nodes_bf": 542, "prop_nodes_topo": 543, "propag": [0, 857], "protein": 851, "pubmedgraphdataset": 176, "pull": 93, "push": 94, "put": [851, 854, 857, 861], "pytorch": [16, 352, 353, 814], "qm7bdataset": 177, "qm9dataset": 178, "qm9edgedataset": 179, "queri": [1, 833], "question": 24, "questionsdataset": 180, "quickstart": 820, "r": 849, "radiu": 850, "radius_graph": 544, "radiusgraph": 430, "rand_bipartit": 545, "rand_graph": 546, "random": 11, "random_walk": 559, "random_walk_p": 547, "randomwalkneighborsampl": 712, "randomwalkp": 662, "raw": [685, 772, 828], "read": 0, "readout": [727, 810], "readout_edg": 548, "readout_nod": 549, "redditdataset": 181, "reduc": [5, 9, 591, 722, 820], "refer": [13, 844, 845], "regress": [725, 729, 809, 812], "relat": [0, 9, 849], "relgraphconv": [369, 417, 462], "remov": 711, "remove_edg": [95, 550], "remove_nod": [96, 551], "remove_self_loop": [97, 552], "removeselfloop": 663, "reorder_graph": [98, 553], "repositori": 23, "repres": 833, "represent": 825, "requir": 814, "resourc": 822, "result": 14, "revers": [99, 554], "review": 826, "revisit": [862, 864], "roadmap": [683, 696, 704, 709, 720, 724], "romanempiredataset": 182, "row": 592, "rowfeatnorm": 664, "run": 693, "sageconv": [370, 418, 463], "saintsampl": 217, "sampl": [4, 11, 555, 556, 557, 558, 559, 560, 561, 562, 563, 691, 709, 710, 711, 712, 714, 716, 795, 826], "sample_etype_neighbor": 240, "sample_labor": 560, "sample_neighbor": [241, 561], "sample_neighbors_bias": 562, "sampledsubgraph": 309, "sampledsubgraphimpl": 310, "sampler": [3, 6, 218, 710, 711, 716, 825, 827, 844, 845], "samplinggraph": 311, "save": [689, 833], "save_graph": 564, "save_info": 206, "sbmmixturedataset": 183, "scalabl": 840, "scenario": 824, "score": 16, "script": [844, 845], "sddmm": 616, "second": 849, "seed": [328, 565], "segment": 9, "segment_mm": 499, "segment_reduc": 500, "segmented_knn_graph": 566, "segmentedknngraph": 431, "segmentmm": 9, "select_topk": 563, "send_and_recv": 100, "separ": [698, 702, 783, 787], "sequenti": [379, 455], "server": 844, "set": [835, 841, 844, 845, 850], "set2set": [376, 435], "set_batch_num_edg": 101, "set_batch_num_nod": 102, "set_dst_lazy_featur": 222, "set_edge_lazy_featur": 223, "set_node_lazy_featur": 224, "set_src_lazy_featur": 225, "settransformerdecod": 436, "settransformerencod": 437, "setup": [21, 814, 844, 860], "sgconv": [371, 419, 464], "shadowkhopsampl": 219, "shape": 593, "shared_tensor": 353, "shortest_dist": 567, "side": 844, "signdiffus": 665, "simpl": 861, "singl": [686, 866, 867], "slice_batch": 568, "small": [855, 864], "smax": 594, "smean": 595, "smin": 596, "softmax": [597, 617, 820], "softmax_edg": 569, "softmax_nod": 570, "some": 697, "sort_csc_by_tag": 571, "sort_csr_by_tag": 572, "sortpool": [377, 438, 469], "sourc": [698, 814], "sp_add_v": 618, "sp_broadcast_v": 619, "sp_div_v": 620, "sp_mul_v": 621, "sp_sub_v": 622, "spars": [1, 12, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 718, 815, 817, 819, 820, 850], "sparsematrix": [573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603], "spatial": 682, "spatialencod": 447, "spatialencoder3d": 448, "spawn": 867, "specif": [686, 694, 722, 806, 829, 861], "speed": 861, "split": [4, 691, 777], "split_dataset": 207, "spmatrix": 623, "spmm": 624, "spspmm": 625, "squirreldataset": 185, "src": 673, "srcdata": 103, "srcnode": 104, "srctype": 105, "ssh": 844, "sstdataset": 184, "standalon": [691, 777], "start": 813, "step": [694, 840, 854, 860], "stochast": [709, 795, 824], "structur": [1, 686, 691, 796, 830, 831, 833, 850, 861], "studi": 864, "style": 21, "sub": 626, "subgraph": [0, 106, 702, 850], "subgraphsampl": [7, 312], "subgraphx": 428, "subset": 196, "successor": 107, "sum": [265, 598], "sum_edg": 628, "sum_nod": 629, "sumpool": [378, 439, 470], "supervis": 850, "support": [9, 21, 712], "svd_pe": 630, "svdpe": 666, "system": 814, "t": [573, 599], "tagconv": [372, 420], "task": [313, 829, 830, 831, 849, 850, 854, 861], "tensor": [4, 691, 777, 850], "tensorflow": [17, 814], "test": [21, 835, 850, 860], "texasdataset": 187, "text": 850, "thread": 841, "time": [823, 839, 843, 847, 853, 856, 859, 863, 865, 869], "tip": 694, "to_bidirect": 631, "to_block": 632, "to_canonical_etyp": 109, "to_cugraph": [110, 633], "to_dens": 601, "to_doubl": 634, "to_float": 635, "to_half": 636, "to_heterogen": 637, "to_homogen": 638, "to_networkx": 639, "to_simpl": [111, 640], "to_simple_graph": 641, "togeth": [851, 854, 857, 861], "tolevi": 667, "tolokersdataset": 188, "tool": 695, "top": 686, "topk_edg": 642, "topk_nod": 643, "topologi": 1, "topological_nodes_gener": 644, "torchbasedfeatur": 314, "torchbasedfeaturestor": 315, "tosimpl": 668, "tra": 825, "train": [690, 695, 709, 711, 714, 715, 716, 718, 719, 724, 725, 727, 728, 729, 815, 816, 817, 818, 824, 827, 832, 834, 835, 836, 842, 844, 845, 846, 849, 850, 861, 867, 868], "trainer": 867, "trane": 867, "trans": 450, "transform": [0, 1, 3, 16, 19, 681, 817, 820, 833, 861], "transpos": 602, "transr": 451, "travers": [0, 854], "tree": 854, "treecycledataset": 189, "treegriddataset": 190, "tudataset": 186, "tutori": [681, 813, 819], "twirlsconv": 421, "twirlsunfoldingandattent": 422, "type": [1, 9, 22, 702, 722, 725, 806], "typedlinear": 385, "u_add_": [266, 501], "u_add_e_max": 502, "u_add_e_mean": 503, "u_add_e_min": 504, "u_add_e_sum": 505, "u_add_v": [267, 506], "u_div_": [268, 507], "u_div_e_max": 508, "u_div_e_mean": 509, "u_div_e_min": 510, "u_div_e_sum": 511, "u_div_v": [269, 512], "u_dot_": [270, 513], "u_dot_v": [271, 514], "u_mul_": [272, 515], "u_mul_e_max": 516, "u_mul_e_mean": 517, "u_mul_e_min": 518, "u_mul_e_sum": 519, "u_mul_v": [273, 520], "u_sub_": [274, 521], "u_sub_e_max": 522, "u_sub_e_mean": 523, "u_sub_e_min": 524, "u_sub_e_sum": 525, "u_sub_v": [275, 526], "ubuntu": 844, "udf": [669, 670, 671, 672, 673, 674, 675, 676, 677], "unbatch": 678, "under": 692, "understand": 851, "uniform": 228, "uniformnegativesampl": 316, "unique_and_compact": 329, "unique_and_compact_csc_format": 330, "unit": 21, "univers": 861, "unpin_memory_": 112, "up": [844, 845, 850, 861], "updat": [722, 857], "update_al": 113, "us": [1, 687, 700, 712, 726, 815, 835], "use_libxsmm": 679, "user": [20, 703, 834], "util": [0, 2, 3, 7, 15, 16, 692], "uva": 712, "v": [691, 777], "v0": 821, "v_add_": [276, 527], "v_add_u": [277, 528], "v_div_": [278, 529], "v_div_u": [279, 530], "v_dot_": [280, 531], "v_dot_u": [281, 532], "v_mul_": [282, 533], "v_mul_u": [283, 534], "v_sub_": [284, 535], "v_sub_u": [285, 536], "val": 603, "val_lik": 627, "valid": [844, 845], "valu": [698, 702, 783, 787], "variabl": 23, "variant": [852, 864], "via": [21, 837, 857], "visual": [850, 851, 861], "walk": 11, "web": 21, "weight": 726, "weightandsum": 440, "weightbasi": 456, "welcom": 813, "what": [832, 833, 834, 836, 850, 851], "wikicsdataset": 192, "window": 814, "wisconsindataset": 193, "wise": [20, 820], "wn18dataset": 191, "work": [702, 715, 814], "workload": [4, 691, 777], "write": [706, 715, 727, 729, 834], "x": 850, "y": 850, "yaml": [686, 829, 830, 831], "yelpdataset": 194, "your": [711, 716, 834, 837, 840], "zincdataset": 195, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": 732, "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": 765, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": 758, "\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": 758, "\u4e8c\u8fdb\u5236\u683c\u5f0f": 742, "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": 742, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": 742, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": 742, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": 746, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": 733, "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": 746, "\u4f7f\u7528\u8fb9\u6743\u91cd": 766, "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": 766, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": 735, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": 741, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": 749, "\u5206\u5272\u6570\u636e\u96c6": 737, "\u5206\u5e03\u5f0f\u56fe": 737, "\u5206\u5e03\u5f0f\u5d4c\u5165": 737, "\u5206\u5e03\u5f0f\u5f20\u91cf": 737, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": 737, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": 737, "\u5206\u5e03\u5f0f\u8bad\u7ec3": 736, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": 738, "\u5206\u5e03\u5f0f\u91c7\u6837": 737, "\u521b\u5efadistgraph": 737, "\u521b\u5efa\u5f02\u6784\u56fe": 746, "\u5305\u542b\u8fc7\u65f6\u4fe1\u606f": 747, "\u53ef\u9009": 732, "\u56de\u5f52": [765, 769], "\u56fe": [740, 745], "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": 730, "\u56fe\u8bfb\u51fa": 767, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 744, "\u5728nn\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": 766, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 752, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": 753, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 751, "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": 765, "\u5904\u7406\u6570\u636e": 734, "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 734, "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": 734, "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": 734, "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": 754, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [755, 759], "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 754, "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 754, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": 756, "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 758, "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": 746, "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": 755, "\u5f02\u6784\u56fe": 746, "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": 759, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": 763, "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 767, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": 758, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": 755, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 769, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 765, "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": 754, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 768, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 757, "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": 754, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 764, "\u6279\u6b21": 753, "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": 767, "\u6279\u6b21\u7684\u56fe": 767, "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": 754, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": 739, "\u6570\u636e\u52a0\u8f7d": 767, "\u6574\u56fe\u5206\u7c7b": 767, "\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": 762, "\u672c\u7ae0\u8def\u7ebf\u56fe": [730, 740, 748, 753, 760, 764], "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": 760, "\u683c\u5f0f": 742, "\u6982\u8ff0": [764, 765, 767, 768, 769], "\u6a21\u5757": 760, "\u6a21\u578b\u5b9a\u4e49": 767, "\u6a21\u578b\u7684\u8bad\u7ec3": [755, 757, 759, 765, 767, 768, 769], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": 762, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": 748, "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 754, "\u7528\u6237\u6307\u5357": 747, "\u7b2c1\u7ae0": 740, "\u7b2c2\u7ae0": 748, "\u7b2c3\u7ae0": 760, "\u7b2c4\u7ae0": 730, "\u7b2c5\u7ae0": 764, "\u7b2c6\u7ae0": 753, "\u7b2c7\u7ae0": 736, "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": 757, "\u7f16\u5199dgl": 762, "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [767, 769], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": 750, "\u805a\u5408\u540e": 762, "\u8282\u70b9\u5206\u7c7b": 769, "\u8282\u70b9\u548c\u8fb9": 745, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 743, "\u8bad\u7ec3": 753, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": 764, "\u8bbf\u95ee\u56fe\u7ed3\u6784": 737, "\u8bbf\u95ee\u8282\u70b9": 737, "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [757, 759], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": 755, "\u8d1f\u8f7d\u5747\u8861": 738, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": 756, "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": 762, "\u8fb9\u5206\u7c7b": 765, "\u8fb9\u6570\u636e": 737, "\u8fb9\u7c7b\u578b\u5b50\u56fe": 746, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 739, "\u9017\u53f7\u5206\u9694\u503c": [742, 746], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": 753, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 759, "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 755, "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 757, "\u94fe\u63a5\u9884\u6d4b": 768, "\uac00\uc774\ub4dc": 788, "\uac00\uc911\uce58": 791, "\uac1c\uc694": [795, 808, 809, 810, 811, 812], "\uacb0\uacfc": 779, "\uacb0\uacfc\ub4e4\uc744": 779, "\uacbd\uc6b0": [797, 800, 802], "\uad6c\uc870": [777, 796], "\uad6c\ud604": 807, "\uad6c\ud604\uc0c1\uc758": 809, "\uad6c\ud604\ud558\uae30": [796, 799, 801], "\uadf8\ub798\ud504": [770, 774, 777, 778, 781, 782, 783, 786, 787, 794, 801, 806, 808, 809, 810, 812], "\uadf8\ub798\ud504\ub4e4": [796, 801, 811], "\uadf8\ub798\ud504\ub4e4\uc5d0": 799, "\uadf8\ub798\ud504\ub4e4\uc758": 810, "\uadf8\ub798\ud504\ub85c": 787, "\uadf8\ub798\ud504\ub97c": 787, "\uadf8\ub798\ud504\uc5d0": [779, 782, 795, 810], "\uadf8\ub798\ud504\uc5d0\uc11c": 797, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": 793, "\uadf8\ub798\ud504\uc758": [797, 800, 802, 809], "\uadf8\ub9ac\uace0": [786, 801], "\uae30\ubc18\uc758": 798, "\uae30\ubcf8\uc801\uc778": 782, "\ub098\ub204\uae30": 777, "\ub124\ud2b8\uc6cc\ud06c": [808, 810, 812], "\ub178\ub4dc": [774, 777, 779, 786, 802, 809, 812], "\ub178\ub4dc\uc640": 784, "\ub274\ub7f4": [808, 810, 812], "\ub2e4\ub8e8\uae30": 787, "\ub2e4\uc591\ud55c": 787, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 772, "\ub2e8\ub3c5": 777, "\ub300\ud55c": [779, 782, 795, 809], "\ub300\ud578": 799, "\ub370\uc774\ud130": [770, 772, 774, 775, 777, 778, 797, 798, 800, 802, 810], "\ub370\uc774\ud130\uc14b": 774, "\ub370\uc774\ud130\uc14b\ub4e4": 773, "\ub3d9\uc885": 787, "\ub4a4\uccd0\uc9c4": 788, "\ub514\uc2a4\ud06c\uc5d0\uc11c": [783, 787], "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c": 783, "\ub7f0\uce6d\ud558\uae30": 780, "\ub808\uc774\uc5b4": 796, "\ub85c\ub354": [797, 800, 802], "\ub85c\ub354\uc5d0\uc11c": 798, "\ub85c\ub4dc": 779, "\ub85c\ub4dc\ub9f5": [770, 781, 789, 795, 804, 808], "\ub85c\ub4dc\ud558\uae30": 773, "\ub85c\ub529": [775, 810], "\ub85c\ub529\ud558\uae30": [783, 787], "\ub85c\uc9c1": 807, "\ub8f9": [797, 800, 802, 809, 810, 811, 812], "\ub9ac\uadf8\ub798\uc158": 812, "\ub9ac\uadf8\ub808\uc158": 809, "\ub9ac\ub4dc\uc544\uc6c3": 810, "\ub9c1\ud06c": [774, 800, 811], "\ub9cc\ub4e4\uae30": [797, 800, 802, 804], "\ub9de\uac8c": [797, 800, 802], "\ub9e4\ud551": 779, "\uba40\ud2f0": 796, "\uba54\uc2dc\uc9c0": [790, 791, 792, 793, 796, 803, 806], "\uba54\uc9c0\uc2dc": [789, 794], "\uba85\uc138\ud654": 806, "\uba87\uac00\uc9c0": 782, "\ubaa8\ub378": [797, 800, 802, 810, 812], "\ubaa8\ub378\uacfc": 809, "\ubaa8\ub378\uc744": [797, 800, 802], "\ubaa8\ub4c8": [777, 801, 804, 805, 807], "\ubaa8\ub4c8\uc758": 806, "\ubaa8\ub4dc": 777, "\ubbf8\ub2c8": [797, 800, 801, 802], "\ubbf8\ub2c8\ubc30\uce58": 796, "\ubc0f": [779, 790, 797, 800, 802, 809], "\ubc14\uc774\ub108\ub9ac": [783, 787], "\ubc29\ubc95": [792, 795], "\ubc30\uce58": [797, 800, 801, 802, 810], "\ubc30\uce58\uc758": 797, "\ubc38\ub7f0\uc2f1": 779, "\ubcc0\ud658\ud558\uae30": [779, 787], "\ubd84\ub958": [774, 797, 802, 809, 810, 812], "\ubd84\uc0b0": [776, 777, 778, 779, 780], "\ube4c\ud2b8\uc778": 790, "\uc0ac\uc6a9\uc790": 788, "\uc0ac\uc6a9\ud558\uae30": [785, 798], "\uc0ac\uc6a9\ud55c": [783, 797, 800, 802, 803], "\uc0ac\uc6a9\ud574\uc11c": [773, 783], "\uc0d8\ud50c\ub7ec": [796, 797, 800, 802], "\uc0d8\ud50c\ub7ec\ub97c": 798, "\uc0d8\ud50c\ub9c1": [777, 778, 795, 796, 798], "\uc0d8\ud50c\ub9c1\uc5d0": 798, "\uc0d8\ud50c\ub9c1\uc744": [797, 800, 802], "\uc0dd\uc131": [777, 805], "\uc0dd\uc131\ud558\uae30": [779, 783, 787], "\uc11c\ube0c\uadf8\ub798\ud504": 787, "\uc124\uce58": 779, "\uc18c\uc2a4\ub97c": 783, "\uc2dc\ub300\uc5d0": 788, "\uc2e4\ud589\ud558\uae30": 779, "\uc5c5\ub370\uc774\ud2b8": 806, "\uc5d0\uc9c0": [777, 779, 786, 787, 791, 797, 809], "\uc5d0\uc9c0\ub4e4": 797, "\uc5d0\uc9c0\ub4e4\uc5d0": 809, "\uc5d0\uc9c0\uc758": 784, "\uc5f0\uc0b0\ud558\uae30": 810, "\uc608\uce21": [774, 800, 811], "\uc608\uce21\ud558\uae30": 809, "\uc624\ud504\ub77c\uc778": 799, "\uc678\ubd80": 783, "\uc6cc\ud06c\ub85c\ub4dc": 777, "\uc6d0\ubcf8": 797, "\uc704\ud55c": [779, 780, 796, 801, 806], "\uc704\ud574\uc11c": 797, "\uc758\uc874\uc131": 796, "\uc774\ubd84": [796, 801], "\uc774\uc6c3": [795, 796, 797, 798, 800, 802], "\uc774\uc885": [787, 793], "\uc77c\ubd80\uc5d0": 794, "\uc785\ub825": 779, "\uc791\uc131": 792, "\uc791\uc131\ud558\uae30": [801, 810, 812], "\uc800\uc7a5\uacfc": 775, "\uc801\uc6a9\ud558\uae30": [791, 794], "\uc804\ub2ec": [789, 790, 792, 793, 794, 796, 803], "\uc804\ub2ec\uacfc": 806, "\uc804\ub2ec\uc5d0": 791, "\uc804\ub2ec\uc744": 796, "\uc804\ucc98\ub9ac": 779, "\uc811\uadfc": 777, "\uc811\uadfc\ud558\uae30": 778, "\uc815\uc758": 782, "\uc815\uc758\ud558\uae30": [797, 800, 802, 810], "\uc815\ud655\ud55c": 799, "\uc81c\uac70\ud558\uae30": 797, "\uc9c1\uc811": 796, "\ucc28\uc774\uc810": 809, "\ucc3e\uae30": 796, "\uccb4\ud06c\uc640": 806, "\ucd08\uae30\ud654": 777, "\ucd94\ub860": 799, "\ucd94\ub860\uc744": 780, "\ucd95\uc57d": 806, "\ucd9c\ub825\uac12\uc744": 806, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": 796, "\ucee4\uc2a4\ud140": [796, 801], "\ucf54\ub4dc": 792, "\ud070": [795, 799], "\ud074\ub798\uc2a4": 771, "\ud0c0\uc785": [787, 806, 809], "\ud0c0\uc785\uc744": 787, "\ud150\uc11c": 777, "\ud234\ub4e4": 780, "\ud30c\uc774\ud504\ub77c\uc778": 770, "\ud30c\ud2f0\uc154\ub2dd": 779, "\ud328\ub7ec\ub2e4\uc784": 789, "\ud328\ud0a4\uc9c0\ub97c": 773, "\ud3ec\uba67": [779, 783, 787], "\ud3ec\uba67\ub4e4": 779, "\ud504\ub85c\uc138\uc2f1": 774, "\ud53c\ucc98": 784, "\ud53c\ucc98\ub4e4": 779, "\ud53c\uccd0": 806, "\ud559\uc2b5": [776, 780, 795, 797, 800, 802, 803, 809, 810, 811, 812], "\ud559\uc2b5\uc5d0": [797, 800, 802], "\ud559\uc2b5\uc744": [779, 801], "\ud559\uc2b5\ud558\uae30": [778, 797, 800, 802, 808], "\ud568\uaed8": 798, "\ud568\uc218": [790, 805, 806], "\ud568\uc218\uc640": 798, "\ud574\ubcf4\uae30": 796, "\ud6a8\uc728\uc801\uc778": 792, "\ud6c4": 806}})