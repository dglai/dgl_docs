Search.setIndex({"alltitles": {"1.1 Some Basic Definitions about Graphs (Graphs 101)": [[699, null]], "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [[743, null]], "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)": [[784, null]], "1.2 Graphs, Nodes, and Edges": [[703, null]], "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9": [[747, null]], "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0": [[788, null]], "1.3 Node and Edge Features": [[701, null]], "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [[745, null]], "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98": [[786, null]], "1.4 Creating Graphs from External Sources": [[700, null]], "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [[744, null]], "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[785, null]], "1.5 Heterogeneous Graphs": [[704, null]], "1.5 \u5f02\u6784\u56fe": [[748, null]], "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)": [[789, null]], "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30": [[787, null]], "1.6 Using DGLGraph on a GPU": [[702, null]], "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph": [[746, null]], "1\uc7a5: \uadf8\ub798\ud504": [[783, null]], "2.1 Built-in Functions and Message Passing APIs": [[707, null]], "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API": [[751, null]], "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4": [[792, null]], "2.2 Writing Efficient Message Passing Code": [[708, null]], "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [[752, null]], "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95": [[794, null]], "2.3 Apply Message Passing On Part Of The Graph": [[710, null]], "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[754, null]], "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30": [[796, null]], "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30": [[793, null]], "2.5 Message Passing on Heterogeneous Graph": [[709, null]], "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[753, null]], "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[795, null]], "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)": [[791, null]], "3.1 DGL NN Module Construction Function": [[723, null]], "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218": [[807, null]], "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [[763, null]], "3.2 DGL NN Module Forward Function": [[724, null]], "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218": [[808, null]], "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570": [[764, null]], "3.3 Heterogeneous GraphConv Module": [[725, null]], "3.3 Heterogeneous GraphConv \ubaa8\ub4c8": [[809, null]], "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757": [[765, null]], "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30": [[806, null]], "4.1 DGLDataset class": [[686, null]], "4.1 DGLDataset \ud074\ub798\uc2a4": [[773, null]], "4.1 DGLDataset\u7c7b": [[733, null]], "4.2 Download raw data (optional)": [[687, null]], "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)": [[774, null]], "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09": [[734, null]], "4.3 Process data": [[690, null]], "4.3 \u5904\u7406\u6570\u636e": [[736, null]], "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1": [[776, null]], "4.4 Save and load data": [[691, null]], "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [[737, null]], "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529": [[777, null]], "4.5 Loading OGB datasets using ogb package": [[689, null]], "4.5 ogb \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30": [[775, null]], "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6": [[735, null]], "4.6 Loading data from CSV files": [[688, null]], "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778": [[772, null]], "5.1 Node Classification/Regression": [[731, null]], "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52": [[771, null]], "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)": [[814, null]], "5.2 Edge Classification/Regression": [[727, null]], "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52": [[767, null]], "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)": [[811, null]], "5.3 Link Prediction": [[730, null]], "5.3 \u94fe\u63a5\u9884\u6d4b": [[770, null]], "5.3 \ub9c1\ud06c \uc608\uce21": [[813, null]], "5.4 Graph Classification": [[729, null]], "5.4 \u6574\u56fe\u5206\u7c7b": [[769, null]], "5.4 \uadf8\ub798\ud504 \ubd84\ub958": [[812, null]], "5.5 Use of Edge Weights": [[728, null]], "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd": [[768, null]], "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30": [[810, null]], "6.1 Training GNN for Node Classification with Neighborhood Sampling": [[718, null]], "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[761, null]], "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[804, null]], "6.2 Training GNN for Edge Classification with Neighborhood Sampling": [[713, null]], "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[757, null]], "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[799, null]], "6.3 Training GNN for Link Prediction with Neighborhood Sampling": [[716, null]], "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[759, null]], "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[802, null]], "6.4 Implementing Custom Graph Samplers": [[712, null]], "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [[756, null]], "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [[798, null]], "6.5 Training GNN with DGL sparse": [[720, null]], "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757": [[760, null]], "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30": [[803, null]], "6.6 Implementing Custom GNN Module for Mini-batch Training": [[717, null]], "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [[758, null]], "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860": [[801, null]], "6.7 Exact Offline Inference on Large Graphs": [[715, null]], "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30": [[800, null]], "6.8 Using GPU for Neighborhood Sampling": [[714, null]], "6.9 Data Loading Parallelism": [[719, null]], "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5": [[797, null]], "7.1 Data Preprocessing": [[696, null]], "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [[740, null]], "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac": [[781, null]], "7.1.1 Partitioning API": [[696, "partitioning-api"]], "7.1.1 \ubd84\uc0b0 \ud30c\ud2f0\uc154\ub2dd": [[781, "id3"]], "7.1.2 Distributed Graph Partitioning Pipeline": [[696, "distributed-graph-partitioning-pipeline"]], "7.2 Tools for launching distributed training/inference": [[697, null]], "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API": [[739, null]], "7.2 \ubd84\uc0b0 APIs": [[779, null]], "7.3 Programming APIs": [[693, null]], "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [[741, null]], "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30": [[780, null]], "7.3.1 \ubd84\uc0b0 \uadf8\ub798\ud504 \ub370\uc774\ud130 \uc811\uadfc\ud558\uae30": [[780, "id1"]], "7.3.2 \ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[780, "id2"]], "7.4 Advanced Graph Partitioning": [[695, null]], "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4": [[782, null]], "7.5 Heterogeneous Graph Under The Hood": [[694, null]], "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5": [[778, null]], "8\uc7a5: Mixed Precision \ud559\uc2b5": [[805, null]], "A Batched Graph in DGL": [[838, "a-batched-graph-in-dgl"]], "A Blitz Introduction to DGL": [[840, null]], "A brief introduction to R-GCN": [[850, "a-brief-introduction-to-r-gcn"]], "AGNNConv": [[354, null], [384, null]], "AIFBDataset": [[132, null]], "AMDataset": [[133, null]], "API Reference": [[13, null]], "APPNPConv": [[355, null], [385, null], [462, null]], "Access distributed graph data": [[694, "access-distributed-graph-data"]], "Access node/edge data": [[693, "access-node-edge-data"]], "Accessing graph structure": [[693, "accessing-graph-structure"]], "Action 1: Add nodes": [[858, "action-1-add-nodes"]], "Action 2: Add edges": [[858, "action-2-add-edges"]], "Action 3: Choose a destination": [[858, "action-3-choose-a-destination"]], "Actions": [[858, "actions"]], "ActorDataset": [[134, null]], "Adapt your model for minibatch training": [[713, "adapt-your-model-for-minibatch-training"], [718, "adapt-your-model-for-minibatch-training"]], "Adaptive Universal Transformer": [[862, "adaptive-universal-transformer"]], "AddEdge": [[650, null]], "AddMetaPaths": [[651, null]], "AddReverse": [[652, null]], "AddSelfLoop": [[653, null]], "Adjacency Related Utilities": [[0, "adjacency-related-utilities"]], "Adjacency and incidence matrix": [[1, "adjacency-and-incidence-matrix"]], "After Partition Loading": [[694, "after-partition-loading"]], "Alternative memory allocators": [[842, "alternative-memory-allocators"]], "AmazonCoBuyComputerDataset": [[135, null]], "AmazonCoBuyPhotoDataset": [[136, null]], "AmazonRatingsDataset": [[137, null]], "AsGraphPredDataset": [[138, null]], "AsLinkPredDataset": [[139, null]], "AsNodePredDataset": [[140, null]], "Assigning Node and Edge Features to Graph": [[835, "assigning-node-and-edge-features-to-graph"]], "AtomicConv": [[386, null]], "Attention layer of Transformer": [[862, "attention-layer-of-transformer"]], "Attributes and methods": [[12, "attributes-and-methods"]], "Attributes and methods of a DGL Sparse Matrix": [[822, "Attributes-and-methods-of-a-DGL-Sparse-Matrix"]], "AvgPooling": [[371, null], [430, null], [470, null]], "BA2MotifDataset": [[141, null]], "BACommunityDataset": [[142, null]], "BAShapeDataset": [[143, null]], "BFloat16 CPU example": [[721, "bfloat16-cpu-example"]], "BGSDataset": [[144, null]], "Backend Options": [[23, "backend-options"]], "Base Class": [[2, "base-class"]], "BaseTransform": [[654, null]], "BasicFeatureStore": [[287, null]], "Batch of Graphs": [[729, "batch-of-graphs"]], "Batching and Reading Out Ops": [[0, "batching-and-reading-out-ops"]], "Batching graphs for parallelism": [[851, "batching-graphs-for-parallelism"]], "Batching many small graphs": [[856, null], [865, "batching-many-small-graphs"]], "Benchmark the performance of KNN algorithms": [[14, null]], "Best practice of writing custom GNN modules": [[836, "best-practice-of-writing-custom-gnn-modules"]], "BiasedMHA": [[446, null]], "BiasedMultiheadAttention": [[439, null]], "Binary community subgraph from Cora with a test dataset": [[851, "binary-community-subgraph-from-cora-with-a-test-dataset"]], "BitcoinOTCDataset": [[145, null]], "Broadcast operations": [[822, "Broadcast-operations"]], "Broadcast operators": [[12, "broadcast-operators"]], "Building Docs Locally": [[21, "building-docs-locally"]], "Building a Graph Convolutional Network Using Sparse Matrices": [[817, null]], "Building and Testing": [[21, "building-and-testing"]], "BuiltinDataset": [[288, null]], "CFConv": [[387, null]], "CIFAR10SuperPixelDataset": [[146, null]], "CLUSTERDataset": [[147, null]], "CPU Best Practices": [[842, null]], "CSVDataset": [[148, null]], "Capsule Network": [[861, null]], "Chain-up LGNN abstractions as an LGNN layer": [[851, "chain-up-lgnn-abstractions-as-an-lgnn-layer"]], "Chain-up LGNN layers": [[851, "chain-up-lgnn-layers"]], "ChameleonDataset": [[149, null]], "Chapter 1: Graph": [[698, null]], "Chapter 2: Message Passing": [[706, null]], "Chapter 3: Building GNN Modules": [[722, null]], "Chapter 4: Graph Data Pipeline": [[685, null]], "Chapter 5: Training Graph Neural Networks": [[726, null]], "Chapter 6: Stochastic Training on Large Graphs": [[711, null]], "Chapter 7: Distributed Training": [[692, null]], "Chapter 8: Mixed Precision Training": [[721, null]], "ChebConv": [[356, null], [388, null], [463, null]], "Chunked Graph Format": [[696, "chunked-graph-format"]], "CiteseerGraphDataset": [[150, null]], "ClusterGCNSampler": [[209, null]], "CoauthorCSDataset": [[151, null]], "CoauthorPhysicsDataset": [[152, null]], "Coding styles": [[21, "coding-styles"]], "Comma Separated Values (CSV)": [[700, "comma-separated-values-csv"], [704, "comma-separated-values-csv"], [785, "comma-separated-values-csv"], [789, "comma-separated-values-csv"]], "Community detection": [[851, "community-detection"]], "Community detection in a supervised setting": [[851, "community-detection-in-a-supervised-setting"]], "Completing f(x, y)": [[851, "completing-f-x-y"]], "Compose": [[655, null]], "Composing OnDiskDataset from raw data": [[830, null]], "Computation on a Batched Graph": [[729, "computation-on-a-batched-graph"]], "Computation times": [[825, null], [841, null], [844, null], [848, null], [854, null], [857, null], [860, null], [864, null], [866, null], [870, null]], "Computing with DGLGraph": [[1, "computing-with-dglgraph"]], "Conclusion": [[14, "conclusion"], [827, "Conclusion"], [829, "Conclusion"]], "Containers": [[22, "containers"]], "Contribute to DGL": [[21, null]], "Contributing Code Changes": [[21, "contributing-code-changes"]], "Contributing Core Features": [[21, "contributing-core-features"]], "Contributing Documentations": [[21, "contributing-documentations"]], "Contributing Editorial Changes via GitHub Web Interface": [[21, "contributing-editorial-changes-via-github-web-interface"]], "Contributing New Models as Examples": [[21, "contributing-new-models-as-examples"]], "Contribution": [[815, "contribution"]], "Conv Layers": [[15, "conv-layers"], [16, "conv-layers"], [17, "conv-layers"]], "Converting Heterogeneous Graphs to Homogeneous Graphs": [[704, "converting-heterogeneous-graphs-to-homogeneous-graphs"]], "CopyTo": [[7, "copyto"], [289, null]], "Cora": [[852, "cora"]], "Cora dataset": [[851, "cora-dataset"]], "CoraFullDataset": [[153, null]], "CoraGraphDataset": [[154, null]], "CornellDataset": [[155, null]], "Create graph and model": [[850, "create-graph-and-model"]], "Creating Dataset from CSV via CSVDataset": [[839, "creating-dataset-from-csv-via-csvdataset"]], "Creating Graphs from External Libraries": [[700, "creating-graphs-from-external-libraries"]], "Creating a DGL Sparse Matrix": [[822, "Creating-a-DGL-Sparse-Matrix"]], "Creating a Dataset for Graph Classification from CSV": [[839, "creating-a-dataset-for-graph-classification-from-csv"]], "Creating a Dataset for Node Classification or Link Prediction from CSV": [[839, "creating-a-dataset-for-node-classification-or-link-prediction-from-csv"]], "Creating a Heterogeneous Graph": [[704, "creating-a-heterogeneous-graph"]], "Creation Ops": [[12, "creation-ops"]], "CuGraph Conv Layers": [[16, "cugraph-conv-layers"]], "CuGraphGATConv": [[389, null]], "CuGraphRelGraphConv": [[390, null]], "CuGraphSAGEConv": [[391, null]], "Custom Data Parser": [[688, "custom-data-parser"]], "DGL Binary Format": [[700, "dgl-binary-format"], [704, "dgl-binary-format"]], "DGL Built-in Function": [[5, "dgl-built-in-function"]], "DGL Foreign Function Interface (FFI)": [[22, null]], "DGL Graph Construction": [[835, "dgl-graph-construction"]], "DGL \u4e8c\u8fdb\u5236\u683c\u5f0f": [[744, "dgl"]], "DGL \ub370\uc774\ud130 \ub85c\ub354\uc5d0\uc11c GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc0ac\uc6a9\ud558\uae30": [[800, "dgl-gpu"]], "DGL \ubc14\uc774\ub108\ub9ac \ud3ec\uba67": [[785, "dgl"], [789, "dgl"]], "DGL \ubd84\uc0b0 \ubaa8\ub4c8 \ucd08\uae30\ud654": [[779, "dgl"]], "DGLDataset": [[156, null]], "DGLDataset Object Overview": [[839, "dgldataset-object-overview"]], "DGL\u4e8c\u8fdb\u5236\u683c\u5f0f": [[748, "dgl"]], "DGL\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": [[739, "dgl"]], "DGMG: Optimization objective": [[858, "dgmg-optimization-objective"]], "DGMG: The implementation": [[858, "dgmg-the-implementation"]], "DGMG: The main flow": [[858, "dgmg-the-main-flow"]], "DGNConv": [[392, null]], "Data Loader Preparation": [[867, "data-loader-preparation"]], "Data Loading": [[729, "data-loading"]], "Data Repository": [[23, "data-repository"]], "Data folder structure": [[688, "data-folder-structure"]], "Data hosting": [[21, "data-hosting"]], "Data preparation": [[832, "Data-preparation"], [833, "Data-preparation"]], "DataLoader": [[7, "dataloader"], [210, null], [290, null]], "DataLoaders": [[3, "dataloaders"]], "Dataset": [[7, "dataset"], [291, null]], "Dataset adapters": [[2, "dataset-adapters"]], "Dataset of a single feature-less graph": [[688, "dataset-of-a-single-feature-less-graph"]], "Dataset of a single graph with features and labels": [[688, "dataset-of-a-single-graph-with-features-and-labels"]], "Dataset of a single heterogeneous graph": [[688, "dataset-of-a-single-heterogeneous-graph"]], "Dataset of multiple graphs": [[688, "dataset-of-multiple-graphs"]], "DeepWalk": [[378, null]], "Define Model": [[838, "define-model"]], "Define a GNN model": [[845, "define-a-gnn-model"], [846, "define-a-gnn-model"]], "Define a GraphSAGE model": [[837, "define-a-graphsage-model"]], "Define a GraphSAGE model for minibatch training": [[716, "define-a-graphsage-model-for-minibatch-training"]], "Define a data loader with neighbor and negative sampling": [[716, "define-a-data-loader-with-neighbor-and-negative-sampling"]], "Define a neighborhood sampler and data loader": [[713, "define-a-neighborhood-sampler-and-data-loader"], [718, "define-a-neighborhood-sampler-and-data-loader"]], "Defining Data Loader": [[838, "defining-data-loader"]], "Defining Model": [[829, "Defining-Model"], [868, "defining-model"]], "Defining Model for Node Representation": [[827, "Defining-Model-for-Node-Representation"]], "Defining Neighbor Sampler and Data Loader in DGL": [[827, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [829, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"]], "Defining Traing Loop": [[827, "Defining-Traing-Loop"]], "Defining Training Loop": [[829, "Defining-Training-Loop"]], "Defining Traning and Evaluation Procedures": [[868, "defining-traning-and-evaluation-procedures"]], "Defining a Graph Convolutional Network (GCN)": [[834, "defining-a-graph-convolutional-network-gcn"]], "Defining new types": [[22, "defining-new-types"]], "Degree Bucketing for Message Passing with User Defined Functions": [[20, "degree-bucketing-for-message-passing-with-user-defined-functions"]], "DegreeEncoder": [[440, null], [447, null]], "Dense Conv Layers": [[15, "dense-conv-layers"], [16, "dense-conv-layers"]], "DenseChebConv": [[357, null], [393, null]], "DenseGraphConv": [[358, null], [394, null]], "DenseSAGEConv": [[359, null], [395, null]], "Description": [[6, "description"], [384, "description"], [385, "description"], [386, "description"], [387, "description"], [392, "description"], [395, "description"], [395, "id1"], [396, "description"], [398, "description"], [399, "description"], [400, "description"], [400, "id1"], [401, "description"], [402, "description"], [402, "id1"], [403, "description"], [403, "id1"], [404, "description"], [404, "id1"], [405, "description"], [407, "description"], [407, "id1"], [408, "description"], [409, "description"], [409, "id1"], [410, "description"], [410, "id1"], [413, "description"], [414, "description"], [416, "description"], [416, "id1"], [417, "description"], [417, "id1"], [418, "description"], [418, "id1"], [419, "description"], [420, "description"], [420, "id1"], [454, "description"], [454, "id1"], [455, "description"], [455, "id1"], [456, "description"], [458, "description"], [458, "id1"]], "Device Control": [[1, "device-control"]], "Diagonal Matrix": [[822, "Diagonal-Matrix"]], "DistEdgeDataLoader": [[211, null]], "DistGraph creation": [[693, "distgraph-creation"]], "DistGraph \uc0dd\uc131": [[779, "distgraph"]], "DistNodeDataLoader": [[212, null]], "Distributed DataLoader": [[4, "distributed-dataloader"]], "Distributed DistEmbedding": [[693, "distributed-distembedding"]], "Distributed Graph": [[4, "distributed-graph"]], "Distributed Graph Sampling Operators": [[4, "distributed-graph-sampling-operators"]], "Distributed Link Prediction": [[846, null]], "Distributed Node Classification": [[845, null]], "Distributed Node Embedding": [[4, "distributed-node-embedding"]], "Distributed Process Group Initialization": [[867, "distributed-process-group-initialization"]], "Distributed Sampling": [[4, "distributed-sampling"]], "Distributed Tensor": [[4, "distributed-tensor"], [693, "distributed-tensor"]], "Distributed embedding optimizer": [[4, "distributed-embedding-optimizer"]], "Distributed graph": [[693, "distributed-graph"]], "Distributed mini-batch sampler": [[845, "distributed-mini-batch-sampler"], [846, "distributed-mini-batch-sampler"]], "Distributed mode vs. standalone mode": [[693, "distributed-mode-vs-standalone-mode"]], "Distributed sampling": [[693, "distributed-sampling"]], "Distributed training": [[847, null]], "Distributed training script": [[845, "distributed-training-script"], [846, "distributed-training-script"]], "Distributed workload split": [[4, "distributed-workload-split"]], "Distributed \uadf8\ub798\ud504": [[779, "distributed"]], "DistributedItemSampler": [[292, null]], "DotGatConv": [[396, null]], "DropEdge": [[656, null]], "DropNode": [[657, null]], "During Preprocessing": [[694, "during-preprocessing"]], "EGATConv": [[397, null]], "EGNNConv": [[398, null]], "EGTLayer": [[441, null], [448, null]], "Edge Prediction Datasets": [[2, "edge-prediction-datasets"]], "Edge Type Subgraph": [[704, "edge-type-subgraph"]], "Edge-wise User-defined Function": [[20, "edge-wise-user-defined-function"]], "EdgeConv": [[360, null], [399, null]], "EdgeData": [[688, "edgedata"]], "EdgeGATConv": [[400, null]], "EdgePredictor": [[454, null]], "EdgeWeightNorm": [[401, null]], "Element-wise functions": [[822, "Element-wise-functions"]], "Elementwise Operators": [[12, "elementwise-operators"]], "Elementwise operations": [[822, "Elementwise-operations"]], "Encoding a dynamic graph": [[858, "encoding-a-dynamic-graph"]], "End-to-End Mixed Precision Training": [[721, "end-to-end-mixed-precision-training"]], "End-to-End Mixed Precision \ud559\uc2b5": [[805, "end-to-end-mixed-precision"]], "Environment Variables": [[23, null]], "Equation (1)": [[852, "equation-1"]], "Equation (2)": [[852, "equation-2"]], "Equation (3) & (4)": [[852, "equation-3-4"]], "Evaluating Performance with Link Prediction": [[827, "Evaluating-Performance-with-Link-Prediction"]], "Evaluation Loop": [[868, "evaluation-loop"]], "Even more customization by user-defined function": [[836, "even-more-customization-by-user-defined-function"]], "Example: MAG240M-LSC": [[696, "example-mag240m-lsc"]], "Examples on a heterogeneous graph": [[352, "examples-on-a-heterogeneous-graph"]], "Examples on a homogeneous graph": [[352, "examples-on-a-homogeneous-graph"]], "Exclude Edges After Sampling": [[712, "exclude-edges-after-sampling"]], "Execute on specific edges": [[862, "execute-on-specific-edges"]], "Exercise #1": [[822, "Exercise-#1"]], "Exercise #2": [[822, "Exercise-#2"]], "FB15k237Dataset": [[157, null]], "FB15kDataset": [[158, null]], "FakeNewsDataset": [[159, null]], "Farthest Point Sampler": [[6, "farthest-point-sampler"]], "FeatMask": [[658, null]], "Feature": [[293, null]], "Feature and FeatureStore": [[7, "feature-and-featurestore"]], "FeatureFetcher": [[7, "featurefetcher"], [294, null]], "FeatureStore": [[295, null]], "FlickrDataset": [[160, null]], "For heterogeneous graphs": [[713, "for-heterogeneous-graphs"], [716, "for-heterogeneous-graphs"], [718, "for-heterogeneous-graphs"]], "FraudAmazonDataset": [[161, null]], "FraudDataset": [[162, null]], "FraudYelpDataset": [[163, null]], "Frequently Asked Questions (FAQ)": [[24, null]], "Full R-GCN model defined": [[850, "full-r-gcn-model-defined"]], "Full YAML Specification": [[688, "full-yaml-specification"]], "FusedCSCSamplingGraph": [[296, null]], "GAT in DGL": [[852, "gat-in-dgl"]], "GATConv": [[361, null], [402, null], [464, null]], "GATv2Conv": [[403, null]], "GCN from the perspective of message passing": [[849, "gcn-from-the-perspective-of-message-passing"]], "GCN implementation with DGL": [[849, "gcn-implementation-with-dgl"]], "GCN in one formula": [[849, "gcn-in-one-formula"]], "GCN2Conv": [[404, null]], "GCNNorm": [[659, null]], "GDC": [[660, null]], "GDELTDataset": [[164, null]], "GINConv": [[362, null], [405, null], [465, null]], "GINDataset": [[165, null]], "GINEConv": [[406, null]], "GMMConv": [[363, null], [407, null]], "GNNExplainer": [[421, null]], "GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub7ec\ub97c DGL \ud568\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30": [[800, "gpu-dgl"]], "GPUCachedFeature": [[297, null]], "GSDDMM functions": [[9, "gsddmm-functions"]], "GSpMM functions": [[9, "gspmm-functions"]], "GatedGCNConv": [[408, null]], "GatedGraphConv": [[364, null], [409, null]], "GatherMM and SegmentMM Module": [[9, "gathermm-and-segmentmm-module"]], "General development process": [[21, "general-development-process"]], "Generate feature data for graph": [[832, "Generate-feature-data-for-graph"], [833, "Generate-feature-data-for-graph"]], "Generate graph structure data": [[832, "Generate-graph-structure-data"], [833, "Generate-graph-structure-data"]], "Generate tasks": [[832, "Generate-tasks"], [833, "Generate-tasks"]], "Generative Models of Graphs": [[858, null]], "Generative models": [[859, null], [865, "generative-models"]], "Get training and validation node IDs": [[845, "get-training-and-validation-node-ids"], [846, "get-training-and-validation-node-ids"]], "Getting Started": [[815, "getting-started"]], "Git setup (for developers)": [[21, "git-setup-for-developers"]], "Global Configurations": [[23, "global-configurations"]], "Global Pooling Layers": [[15, "global-pooling-layers"], [16, "global-pooling-layers"], [17, "global-pooling-layers"]], "GlobalAttentionPooling": [[372, null], [431, null], [471, null]], "GlobalUniform": [[226, null]], "Graph": [[7, "graph"]], "Graph Convolutional Layer": [[817, "Graph-Convolutional-Layer"]], "Graph Convolutional Network": [[849, null]], "Graph Create Ops": [[0, "graph-create-ops"]], "Graph Diffusion": [[818, "Graph-Diffusion"]], "Graph Diffusion in GNNs": [[818, "Graph-Diffusion-in-GNNs"]], "Graph Diffusion in Graph Neural Networks": [[818, null]], "Graph Partition Utilities": [[0, "graph-partition-utilities"]], "Graph Positional Encoding Ops:": [[0, "graph-positional-encoding-ops"]], "Graph Prediction Datasets": [[2, "graph-prediction-datasets"]], "Graph Readout": [[729, "graph-readout"]], "Graph Transform Ops": [[0, "graph-transform-ops"]], "Graph Transformations": [[835, "graph-transformations"]], "Graph Transformer Layer": [[819, "Graph-Transformer-Layer"]], "Graph Transformer Model": [[819, "Graph-Transformer-Model"]], "Graph Transformer in a Nutshell": [[819, null]], "Graph Traversal & Message Propagation": [[0, "graph-traversal-message-propagation"]], "Graph building": [[862, "graph-building"]], "Graph checking and graph type specification": [[724, "graph-checking-and-graph-type-specification"]], "Graph embedding": [[858, "graph-embedding"]], "Graph neural networks and its variants": [[853, null], [865, "graph-neural-networks-and-its-variants"]], "Graph partition book": [[4, "graph-partition-book"]], "Graph structure": [[862, "graph-structure"]], "GraphConv": [[365, null], [410, null], [466, null]], "GraphData": [[688, "graphdata"]], "GraphDataLoader": [[213, null]], "GraphormerLayer": [[442, null], [449, null]], "GroupRevRes": [[411, null]], "HGTConv": [[412, null]], "Half precision\uc744 \uc0ac\uc6a9\ud55c \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[805, "half-precision"]], "Handle dataset": [[850, "handle-dataset"]], "HeatKernel": [[661, null]], "HeteroEmbedding": [[379, null]], "HeteroGNNExplainer": [[422, null]], "HeteroGraphConv": [[353, null], [380, null], [472, null]], "HeteroGraphConv implementation logic:": [[725, "heterographconv-implementation-logic"]], "HeteroGraphConv \uad6c\ud604 \ub85c\uc9c1:": [[809, "heterographconv"]], "HeteroGraphConv\u7684\u5b9e\u73b0\u903b\u8f91": [[765, "heterographconv"]], "HeteroLinear": [[381, null]], "HeteroPGExplainer": [[423, null]], "HeteroSubgraphX": [[424, null]], "Heterogeneous Graphs": [[726, "heterogeneous-graphs"]], "Heterogeneous Learning Modules": [[15, "heterogeneous-learning-modules"], [16, "heterogeneous-learning-modules"], [17, "heterogeneous-learning-modules"]], "Heterogeneous graph": [[727, "heterogeneous-graph"], [729, "heterogeneous-graph"], [731, "heterogeneous-graph"]], "Heterogeneous graphs": [[717, "heterogeneous-graphs"], [730, "heterogeneous-graphs"]], "Heterogeneous \uadf8\ub798\ud504": [[810, "heterogeneous"], [811, "heterogeneous"], [812, "heterogeneous"], [814, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\ub4e4": [[798, "heterogeneous"], [798, "id5"], [803, "heterogeneous"], [813, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \ub178\ub4dc/\uc5d0\uc9c0 \ud53c\ucc98\ub4e4 \uc0dd\uc131\ud558\uae30": [[781, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uacbd\uc6b0": [[799, "heterogeneous"], [802, "heterogeneous"], [804, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uc5d0\uc9c0\ub4e4\uc5d0 \ub300\ud55c \uc5d0\uc9c0 \ud0c0\uc785 \uc608\uce21\ud558\uae30": [[811, "id3"]], "Homogeneous \uadf8\ub798\ud504, \uc774\ubd84 \uadf8\ub798\ud504(bipartite graph), \uadf8\ub9ac\uace0 MFG\ub97c \uc704\ud55c \ubaa8\ub4c8 \uc791\uc131\ud558\uae30": [[803, "homogeneous-bipartite-graph-mfg"]], "Homophily Measures": [[0, "homophily-measures"]], "How DGL Handles Computation Dependency\u00b6": [[829, "How-DGL-Handles-Computation-Dependency\u00b6"]], "How DGL implements Transformer with a graph neural network": [[862, "how-dgl-implements-transformer-with-a-graph-neural-network"]], "How Does DGL Represent A Graph?": [[835, null]], "Hyper-threading": [[842, "hyper-threading"]], "Hypergraph Neural Network (HGNN) Layer": [[820, "Hypergraph-Neural-Network-(HGNN)-Layer"]], "Hypergraph Neural Networks": [[820, null]], "Hypergraphs": [[820, "Hypergraphs"]], "ICEWS18Dataset": [[166, null]], "ID Conversion Utilities": [[694, "id-conversion-utilities"]], "ID mapping": [[696, "id-mapping"]], "ID \ub9e4\ud551": [[781, "id"]], "Implement LGNN in DGL": [[851, "implement-lgnn-in-dgl"]], "Implement R-GCN in DGL": [[850, "implement-r-gcn-in-dgl"]], "Implementing Offline Inference": [[715, "implementing-offline-inference"]], "Implementing \\text{fuse} as sparse matrix multiplication": [[851, "implementing-text-fuse-as-sparse-matrix-multiplication"]], "Implementing \\text{prev} and \\text{deg} as tensor operation": [[851, "implementing-text-prev-and-text-deg-as-tensor-operation"]], "Implementing \\text{radius} as message passing in DGL": [[851, "implementing-text-radius-as-message-passing-in-dgl"]], "Importing Packages": [[868, "importing-packages"]], "InSubgraphSampler": [[298, null]], "Index": [[815, "index"]], "Inference": [[846, "inference"]], "Initialization": [[4, "initialization"]], "Initialization of the DGL distributed module": [[693, "initialization-of-the-dgl-distributed-module"]], "Initialize network communication": [[845, "initialize-network-communication"], [846, "initialize-network-communication"]], "Initializing a DGL Diagonal Sparse Matrix": [[822, "Initializing-a-DGL-Diagonal-Sparse-Matrix"]], "Input format": [[695, "input-format"]], "Install DGL package": [[827, "Install-DGL-package"], [829, "Install-DGL-package"], [832, "Install-DGL-package"], [833, "Install-DGL-package"]], "Install and Setup": [[816, null]], "Install from Conda or Pip": [[816, "install-from-conda-or-pip"]], "Install from source": [[816, "install-from-source"]], "Instantiate OnDiskDataset": [[832, "Instantiate-OnDiskDataset"], [833, "Instantiate-OnDiskDataset"]], "Integrated Benchmarks": [[823, "integrated-benchmarks"]], "Intel": [[842, "intel"]], "Introducing attention to GCN": [[852, "introducing-attention-to-gcn"]], "Introduction": [[858, "introduction"]], "ItemSampler": [[7, "itemsampler"], [299, null]], "ItemSet": [[7, "itemset"], [300, null]], "ItemSetDict": [[301, null]], "JSON/GML Format": [[700, "json-gml-format"]], "JSON/GML \u683c\u5f0f": [[744, "json-gml"]], "JSON/GML \ud3ec\uba67": [[785, "json-gml"]], "JumpingKnowledge": [[458, null]], "KHopGraph": [[662, null]], "KNNGraph": [[427, null]], "KarateClubDataset": [[167, null]], "Key ideas of Capsule": [[861, "key-ideas-of-capsule"]], "Key ideas of R-GCN": [[850, "key-ideas-of-r-gcn"]], "Label Informativeness Measures": [[0, "label-informativeness-measures"]], "LabelPropagation": [[459, null]], "LaborSampler": [[214, null]], "LapPE": [[663, null]], "LapPosEncoder": [[450, null]], "Launch the distributed training job": [[845, "launch-the-distributed-training-job"]], "LayerNeighborSampler": [[302, null]], "LazyFeature": [[221, null]], "LegacyDataset": [[303, null]], "LegacyTUDataset": [[168, null]], "Line Graph Neural Network": [[851, null]], "Line graph neural network key ideas": [[851, "line-graph-neural-network-key-ideas"]], "LineGraph": [[664, null]], "Link Prediction": [[827, null]], "Link Prediction Task": [[832, "Link-Prediction-Task"], [833, "Link-Prediction-Task"]], "Link Prediction using Graph Neural Networks": [[837, null]], "Linux": [[816, "linux"]], "Load balancing": [[696, "load-balancing"]], "Load partitioned graphs": [[696, "load-partitioned-graphs"]], "Loading Cora Dataset": [[834, "loading-cora-dataset"]], "Loading Data": [[820, "Loading-Data"], [838, "loading-data"]], "Loading Dataset": [[827, "Loading-Dataset"], [829, "Loading-Dataset"]], "Loading Graphs from Disk": [[700, "loading-graphs-from-disk"]], "Loading Heterographs from Disk": [[704, "loading-heterographs-from-disk"]], "Loading and Saving Graphs": [[835, "loading-and-saving-graphs"]], "Loading graph and features": [[837, "loading-graph-and-features"]], "METIS partition algorithm": [[695, "metis-partition-algorithm"]], "MNISTSuperPixelDataset": [[169, null]], "MUTAGDataset": [[170, null]], "MXNet backend": [[816, "mxnet-backend"]], "Main Function for Each Process": [[867, "main-function-for-each-process"]], "Main Loop": [[855, "main-loop"]], "Main class of Transformer graph": [[862, "main-class-of-transformer-graph"]], "Make Your Own Dataset": [[839, null]], "Matrix Multiplication": [[12, "matrix-multiplication"]], "Matrix multiplication": [[822, "Matrix-multiplication"]], "Matrix transformations": [[822, "Matrix-transformations"]], "MaxPooling": [[373, null], [432, null], [473, null]], "Message Passing Paradigm": [[706, "message-passing-paradigm"]], "Message Passing Review": [[828, "Message-Passing-Review"]], "Message Passing with Edge Weights": [[728, "message-passing-with-edge-weights"]], "Message aggregation": [[862, "message-aggregation"]], "Message computation": [[862, "message-computation"]], "Message functions": [[5, "message-functions"]], "Message passing": [[862, "message-passing"]], "Message passing and GNNs": [[836, "message-passing-and-gnns"]], "Message passing and reducing": [[724, "message-passing-and-reducing"]], "Message-Passing with Half Precision": [[721, "message-passing-with-half-precision"]], "MetaPath2Vec": [[382, null]], "MinesweeperDataset": [[171, null]], "Mini-batch Data Loading": [[868, "mini-batch-data-loading"]], "MiniBatch": [[7, "minibatch"], [304, null]], "MiniBatchTransformer": [[305, null]], "MiniGCDataset": [[172, null]], "Misc": [[1, "misc"]], "Model Definition": [[729, "model-definition"]], "Model Implementation Difference from Node Classification": [[727, "model-implementation-difference-from-node-classification"]], "Model Initialization": [[867, "model-initialization"]], "Model Overview": [[849, "model-overview"]], "Model implementation": [[861, "model-implementation"]], "More customization": [[836, "more-customization"]], "MovieLensDataset": [[173, null]], "Multi-head attention": [[852, "multi-head-attention"], [862, "multi-head-attention"]], "Multi-head attention layer": [[862, "multi-head-attention-layer"]], "MultiLayerFullNeighborSampler": [[215, null]], "Mutating topology": [[1, "mutating-topology"]], "NFS client side setup (ubuntu only)": [[845, "nfs-client-side-setup-ubuntu-only"]], "NFS server side setup (ubuntu only)": [[845, "nfs-server-side-setup-ubuntu-only"]], "NNConv": [[366, null], [413, null]], "Negative Samplers for Link Prediction": [[3, "negative-samplers-for-link-prediction"]], "Negative sampling": [[11, "negative-sampling"]], "Negative \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[802, "negative"]], "NegativeSampler": [[7, "negativesampler"], [306, null]], "Neighbor Matching": [[6, "neighbor-matching"]], "Neighbor Sampling Overview": [[828, null], [828, "id1"]], "Neighbor sampling": [[11, "neighbor-sampling"]], "NeighborSampler": [[216, null], [307, null]], "Network Embedding Modules": [[16, "network-embedding-modules"]], "Node Classification": [[829, null]], "Node Classification Task": [[832, "Node-Classification-Task"], [833, "Node-Classification-Task"]], "Node Classification with DGL": [[834, null]], "Node Prediction Datasets": [[2, "node-prediction-datasets"]], "Node embedding optimizer": [[10, "node-embedding-optimizer"]], "Node-wise User-defined Function": [[20, "node-wise-user-defined-function"]], "NodeData": [[688, "nodedata"]], "NodeEmbedding": [[457, null]], "NodeShuffle": [[665, null]], "Non-linear activation functions": [[12, "non-linear-activation-functions"], [822, "Non-linear-activation-functions"]], "OnDiskDataset": [[308, null]], "OnDiskDataset for Heterogeneous Graph": [[832, null]], "OnDiskDataset for Homogeneous Graph": [[833, null]], "One layer in LGNN, algorithm structure": [[851, "one-layer-in-lgnn-algorithm-structure"]], "OpenMP settings": [[842, "openmp-settings"]], "Operations on Sparse Matrix": [[822, "Operations-on-Sparse-Matrix"]], "Operators": [[12, "operators"]], "Organize Data into YAML File": [[832, "Organize-Data-into-YAML-File"], [833, "Organize-Data-into-YAML-File"]], "Output format": [[695, "output-format"]], "Overview": [[726, "overview"], [727, "overview"], [729, "overview"], [730, "overview"], [731, "overview"], [826, "overview"]], "Overview of Graph Classification with GNN": [[838, "overview-of-graph-classification-with-gnn"]], "Overview of Link Prediction with GNN": [[837, "overview-of-link-prediction-with-gnn"]], "Overview of Neighborhood Sampling Approaches": [[711, "overview-of-neighborhood-sampling-approaches"]], "Overview of Node Classification with GNN": [[834, "overview-of-node-classification-with-gnn"]], "PATTERNDataset": [[174, null]], "PGExplainer": [[425, null]], "PNAConv": [[414, null]], "PPIDataset": [[175, null]], "PPR": [[666, null]], "Paper Study with DGL": [[865, null]], "ParMETIS Installation": [[695, "parmetis-installation"]], "ParMETIS \uacb0\uacfc\ub4e4\uc744 DGLGraph\ub85c \ubcc0\ud658\ud558\uae30": [[781, "parmetis-dglgraph"]], "ParMETIS \uc124\uce58": [[781, "parmetis"]], "ParMETIS \uc2e4\ud589\ud558\uae30 \ubc0f \uacb0\uacfc \ud3ec\uba67\ub4e4": [[781, "id9"]], "ParMETIS\ub97c \uc704\ud55c \uc785\ub825 \ud3ec\uba67": [[781, "id8"]], "Parallel METIS partitioning": [[695, "parallel-metis-partitioning"]], "Partition": [[4, "partition"]], "Partition a graph": [[845, "partition-a-graph"], [846, "partition-a-graph"]], "PathEncoder": [[443, null], [451, null]], "PerSourceUniform": [[227, null]], "Performance Benchmarks": [[823, null]], "Positive graph, negative graph, and apply_edges": [[837, "positive-graph-negative-graph-and-apply-edges"]], "Predicting Edge Type of an Existing Edge on a Heterogeneous Graph": [[727, "predicting-edge-type-of-an-existing-edge-on-a-heterogeneous-graph"]], "Prepare training and testing sets": [[837, "prepare-training-and-testing-sets"]], "Preprocessing and postprocessing": [[862, "preprocessing-and-postprocessing"]], "Processing Graph Classification datasets": [[690, "processing-graph-classification-datasets"]], "Processing Node Classification datasets": [[690, "processing-node-classification-datasets"]], "Processing dataset for Link Prediction datasets": [[690, "processing-dataset-for-link-prediction-datasets"]], "Protein-protein interaction (PPI) networks": [[852, "protein-protein-interaction-ppi-networks"]], "PubmedGraphDataset": [[176, null]], "Put everything together": [[852, "put-everything-together"]], "Put it all together": [[862, "put-it-all-together"]], "Putting it together": [[855, "putting-it-together"], [858, "putting-it-together"]], "PyTorch backend": [[816, "pytorch-backend"]], "QM7bDataset": [[177, null]], "QM9Dataset": [[178, null]], "QM9EdgeDataset": [[179, null]], "Querying Graph Structures": [[835, "querying-graph-structures"]], "Querying and manipulating batch information": [[1, "querying-and-manipulating-batch-information"]], "Querying and manipulating node/edge ID type": [[1, "querying-and-manipulating-node-edge-id-type"]], "Querying and manipulating sparse format": [[1, "querying-and-manipulating-sparse-format"]], "Querying graph structure": [[1, "querying-graph-structure"]], "Querying metagraph structure": [[1, "querying-metagraph-structure"]], "QuestionsDataset": [[180, null]], "Quickstart": [[822, null]], "R-GCN layers": [[850, "r-gcn-layers"]], "RadiusGraph": [[428, null]], "Random walk": [[11, "random-walk"]], "RandomWalkPE": [[667, null]], "RedditDataset": [[181, null]], "Reduce functions": [[5, "reduce-functions"]], "Reduce operations": [[822, "Reduce-operations"]], "Reference to the distributed graph": [[845, "reference-to-the-distributed-graph"], [846, "reference-to-the-distributed-graph"]], "RelGraphConv": [[367, null], [415, null], [467, null]], "Relation with Message Passing APIs": [[9, "relation-with-message-passing-apis"]], "Relational Graph Convolutional Network": [[850, null]], "RemoveSelfLoop": [[668, null]], "Removing edges in the minibatch from the original graph for neighbor sampling": [[713, "removing-edges-in-the-minibatch-from-the-original-graph-for-neighbor-sampling"]], "Resources": [[824, null]], "Results": [[14, "results"]], "Revisit classic models from a graph perspective": [[863, null], [865, "revisit-classic-models-from-a-graph-perspective"]], "Roadmap": [[685, "roadmap"], [698, "roadmap"], [706, "roadmap"], [711, "roadmap"], [722, "roadmap"], [726, "roadmap"]], "RomanEmpireDataset": [[182, null]], "RowFeatNormalizer": [[669, null]], "Run ParMETIS and output format": [[695, "run-parmetis-and-output-format"]], "SAGEConv": [[368, null], [416, null], [468, null]], "SAINTSampler": [[217, null]], "SBMMixtureDataset": [[183, null]], "SGConv": [[369, null], [417, null], [469, null]], "SIGNDiffusion": [[670, null]], "SSH Access": [[845, "ssh-access"]], "SSTDataset": [[184, null]], "SVDPE": [[671, null]], "SampledSubgraph": [[309, null]], "SampledSubgraphImpl": [[310, null]], "Sampler": [[218, null]], "Sampler Transformations": [[3, "sampler-transformations"]], "Sampler for Heterogeneous Graphs": [[712, "sampler-for-heterogeneous-graphs"]], "Samplers": [[3, "samplers"]], "SamplingGraph": [[311, null]], "Scenarios": [[826, "scenarios"]], "Score Modules for Link Prediction and Knowledge Graph Completion": [[16, "score-modules-for-link-prediction-and-knowledge-graph-completion"]], "Segment Reduce Module": [[9, "segment-reduce-module"]], "SegmentedKNNGraph": [[429, null]], "Sequential": [[377, null], [460, null]], "Set up distributed training environment": [[845, "set-up-distributed-training-environment"], [846, "set-up-distributed-training-environment"]], "Set2Set": [[374, null], [433, null]], "SetTransformerDecoder": [[434, null]], "SetTransformerEncoder": [[435, null]], "ShaDowKHopSampler": [[219, null]], "Simple implementation": [[862, "simple-implementation"]], "Single Machine Multi-GPU Minibatch Graph Classification": [[867, null]], "Single Machine Multi-GPU Minibatch Node Classification": [[868, null]], "Softmax": [[822, "Softmax"]], "SortPooling": [[375, null], [436, null], [474, null]], "Sparse Matrix": [[822, "Sparse-Matrix"]], "Sparse Multi-head Attention": [[819, "Sparse-Multi-head-Attention"]], "Sparse matrix class": [[12, "sparse-matrix-class"]], "SpatialEncoder": [[444, null], [452, null]], "SpatialEncoder3d": [[445, null], [453, null]], "Spawning Trainer Processes": [[868, "spawning-trainer-processes"]], "Specification": [[696, "specification"]], "Speeding up with built-in functions": [[862, "speeding-up-with-built-in-functions"]], "Split and Load Partitions": [[4, "split-and-load-partitions"]], "Split workloads": [[693, "split-workloads"]], "SquirrelDataset": [[185, null]], "Step 1: Batching": [[855, "step-1-batching"]], "Step 1: Setup and graph initialization": [[861, "step-1-setup-and-graph-initialization"]], "Step 2: Define message passing functions": [[861, "step-2-define-message-passing-functions"]], "Step 2: Tree-LSTM cell with message-passing APIs": [[855, "step-2-tree-lstm-cell-with-message-passing-apis"]], "Step 3: Define traversal": [[855, "step-3-define-traversal"]], "Step 3: Testing": [[861, "step-3-testing"]], "Step.1 Graph Partitioning": [[696, "step-1-graph-partitioning"]], "Step.2 Data Dispatching": [[696, "step-2-data-dispatching"]], "Subgraph Extraction Ops": [[0, "subgraph-extraction-ops"]], "SubgraphSampler": [[7, "subgraphsampler"], [312, null]], "SubgraphX": [[426, null]], "Subset": [[196, null]], "SumPooling": [[376, null], [437, null], [475, null]], "Supervised community detection task with the Cora dataset": [[851, "supervised-community-detection-task-with-the-cora-dataset"]], "Supported Data types": [[9, "supported-data-types"]], "Supporting Multiple Platforms": [[21, "supporting-multiple-platforms"]], "System requirements": [[816, "system-requirements"]], "TAGConv": [[370, null], [418, null]], "TUDataset": [[186, null]], "TWIRLSConv": [[419, null]], "TWIRLSUnfoldingAndAttention": [[420, null]], "Task": [[313, null]], "Task and the dataset": [[862, "task-and-the-dataset"]], "Tensorflow backend": [[816, "tensorflow-backend"]], "TexasDataset": [[187, null]], "The DGMG class": [[858, "the-dgmg-class"]], "The second task, link prediction": [[850, "the-second-task-link-prediction"]], "The task and the dataset": [[855, "the-task-and-the-dataset"]], "Tips for making chunked graph data": [[696, "tips-for-making-chunked-graph-data"]], "ToLevi": [[672, null]], "ToSimple": [[673, null]], "TolokersDataset": [[188, null]], "Top-level": [[688, "top-level"]], "TorchBasedFeature": [[314, null]], "TorchBasedFeatureStore": [[315, null]], "Training": [[818, "Training"], [819, "Training"], [862, "training"]], "Training Loop": [[713, "training-loop"], [718, "training-loop"], [729, "training-loop"], [838, "training-loop"], [868, "training-loop"]], "Training a GNN for Graph Classification": [[838, null]], "Training and Evaluation": [[820, "Training-and-Evaluation"]], "Training and inference": [[851, "training-and-inference"]], "Training loop": [[716, "training-loop"], [727, "training-loop"], [730, "training-loop"], [731, "training-loop"], [836, "training-loop"], [837, "training-loop"], [845, "training-loop"], [846, "training-loop"], [850, "training-loop"]], "Training on CPUs": [[843, null]], "Training on GPU": [[834, "training-on-gpu"]], "Training on Multiple GPUs": [[869, null]], "Training the GCN": [[817, "Training-the-GCN"], [834, "training-the-gcn"]], "TransE": [[455, null]], "TransR": [[456, null]], "Transformer as a Graph Neural Network": [[862, null]], "Transforming graph": [[1, "transforming-graph"]], "Tree-LSTM in DGL": [[855, null]], "TreeCycleDataset": [[189, null]], "TreeGridDataset": [[190, null]], "Tutorials: dgl.sparse": [[821, null]], "TypedLinear": [[383, null]], "UVA and GPU support for PinSAGESampler/RandomWalkNeighborSampler": [[714, "uva-and-gpu-support-for-pinsagesampler-randomwalkneighborsampler"]], "Understand Graph Attention Network": [[852, null]], "Uniform": [[228, null]], "UniformNegativeSampler": [[316, null]], "Unit tests": [[21, "unit-tests"]], "Update feature after reducing for output": [[724, "update-feature-after-reducing-for-output"]], "Update node embeddings via graph propagation": [[858, "update-node-embeddings-via-graph-propagation"]], "User Guide": [[705, null]], "User-defined Functions": [[20, null]], "Using CUDA UVA-based neighborhood sampling in DGL data loaders": [[714, "using-cuda-uva-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using GPU-based neighbor sampling with DGL functions": [[714, "using-gpu-based-neighbor-sampling-with-dgl-functions"]], "Using GPU-based neighborhood sampling in DGL data loaders": [[714, "using-gpu-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using NN Modules with Edge Weights": [[728, "using-nn-modules-with-edge-weights"]], "Using Node/edge features": [[1, "using-node-edge-features"]], "Utilities": [[0, "utilities"], [2, "utilities"], [7, "utilities"]], "Utility Class and Functions for Feature Prefetching": [[3, "utility-class-and-functions-for-feature-prefetching"]], "Utility Modules": [[15, "utility-modules"], [16, "utility-modules"]], "Utility Modules for Graph Transformer": [[16, "utility-modules-for-graph-transformer"]], "Visualization": [[862, "visualization"]], "Visualize training progress": [[851, "visualize-training-progress"]], "Visualizing and understanding attention learned": [[852, "visualizing-and-understanding-attention-learned"]], "WN18Dataset": [[191, null]], "WeightAndSum": [[438, null]], "WeightBasis": [[461, null]], "Welcome to Deep Graph Library Tutorials and Documentation": [[815, null]], "What is a line-graph?": [[851, "what-is-a-line-graph"]], "What\u2019s next": [[838, "whats-next"]], "What\u2019s next?": [[834, "whats-next"], [835, "whats-next"], [836, "whats-next"], [852, "what-s-next"]], "WikiCSDataset": [[192, null]], "Windows": [[816, "windows"]], "WisconsinDataset": [[193, null]], "Working with Multiple Types": [[704, "working-with-multiple-types"]], "Working with different backends": [[816, "working-with-different-backends"]], "Write your own GNN module": [[836, null]], "Writing Neural Network Model": [[729, "writing-neural-network-model"]], "Writing modules that work on homogeneous graphs, bipartite graphs, and MFGs": [[717, "writing-modules-that-work-on-homogeneous-graphs-bipartite-graphs-and-mfgs"]], "Writing neural network model": [[731, "writing-neural-network-model"]], "YAML specification": [[831, null]], "YelpDataset": [[194, null]], "ZINCDataset": [[195, null]], "add_node_property_split": [[197, null]], "add_nodepred_split": [[198, null]], "check_sha1": [[199, null]], "dataset_name": [[831, "dataset-name"]], "dgl": [[0, null]], "dgl.DGLGraph": [[1, null]], "dgl.DGLGraph.__getitem__": [[26, null]], "dgl.DGLGraph.add_edges": [[27, null]], "dgl.DGLGraph.add_nodes": [[28, null]], "dgl.DGLGraph.add_self_loop": [[29, null]], "dgl.DGLGraph.adj": [[30, null]], "dgl.DGLGraph.adj_external": [[31, null]], "dgl.DGLGraph.adj_tensors": [[32, null]], "dgl.DGLGraph.adjacency_matrix": [[33, null]], "dgl.DGLGraph.apply_edges": [[34, null]], "dgl.DGLGraph.apply_nodes": [[35, null]], "dgl.DGLGraph.batch_num_edges": [[36, null]], "dgl.DGLGraph.batch_num_nodes": [[37, null]], "dgl.DGLGraph.batch_size": [[38, null]], "dgl.DGLGraph.canonical_etypes": [[39, null]], "dgl.DGLGraph.cpu": [[40, null]], "dgl.DGLGraph.create_formats_": [[41, null]], "dgl.DGLGraph.device": [[42, null]], "dgl.DGLGraph.dstdata": [[43, null]], "dgl.DGLGraph.dstnodes": [[44, null]], "dgl.DGLGraph.dsttypes": [[45, null]], "dgl.DGLGraph.edata": [[46, null]], "dgl.DGLGraph.edge_attr_schemes": [[47, null]], "dgl.DGLGraph.edge_ids": [[48, null]], "dgl.DGLGraph.edge_subgraph": [[49, null]], "dgl.DGLGraph.edge_type_subgraph": [[50, null]], "dgl.DGLGraph.edges": [[51, null]], "dgl.DGLGraph.etypes": [[52, null]], "dgl.DGLGraph.filter_edges": [[53, null]], "dgl.DGLGraph.filter_nodes": [[54, null]], "dgl.DGLGraph.find_edges": [[55, null]], "dgl.DGLGraph.formats": [[56, null]], "dgl.DGLGraph.has_edges_between": [[57, null]], "dgl.DGLGraph.has_nodes": [[58, null]], "dgl.DGLGraph.idtype": [[59, null]], "dgl.DGLGraph.in_degrees": [[60, null]], "dgl.DGLGraph.in_edges": [[61, null]], "dgl.DGLGraph.inc": [[62, null]], "dgl.DGLGraph.incidence_matrix": [[63, null]], "dgl.DGLGraph.int": [[64, null]], "dgl.DGLGraph.is_homogeneous": [[65, null]], "dgl.DGLGraph.is_multigraph": [[66, null]], "dgl.DGLGraph.is_pinned": [[67, null]], "dgl.DGLGraph.is_unibipartite": [[68, null]], "dgl.DGLGraph.line_graph": [[69, null]], "dgl.DGLGraph.local_scope": [[70, null]], "dgl.DGLGraph.long": [[71, null]], "dgl.DGLGraph.metagraph": [[72, null]], "dgl.DGLGraph.multi_update_all": [[73, null]], "dgl.DGLGraph.ndata": [[74, null]], "dgl.DGLGraph.node_attr_schemes": [[75, null]], "dgl.DGLGraph.node_type_subgraph": [[76, null]], "dgl.DGLGraph.nodes": [[77, null]], "dgl.DGLGraph.ntypes": [[78, null]], "dgl.DGLGraph.num_dst_nodes": [[79, null]], "dgl.DGLGraph.num_edges": [[80, null]], "dgl.DGLGraph.num_nodes": [[81, null]], "dgl.DGLGraph.num_src_nodes": [[82, null]], "dgl.DGLGraph.number_of_dst_nodes": [[83, null]], "dgl.DGLGraph.number_of_edges": [[84, null]], "dgl.DGLGraph.number_of_nodes": [[85, null]], "dgl.DGLGraph.number_of_src_nodes": [[86, null]], "dgl.DGLGraph.out_degrees": [[87, null]], "dgl.DGLGraph.out_edges": [[88, null]], "dgl.DGLGraph.pin_memory_": [[89, null]], "dgl.DGLGraph.predecessors": [[90, null]], "dgl.DGLGraph.prop_edges": [[91, null]], "dgl.DGLGraph.prop_nodes": [[92, null]], "dgl.DGLGraph.pull": [[93, null]], "dgl.DGLGraph.push": [[94, null]], "dgl.DGLGraph.remove_edges": [[95, null]], "dgl.DGLGraph.remove_nodes": [[96, null]], "dgl.DGLGraph.remove_self_loop": [[97, null]], "dgl.DGLGraph.reorder_graph": [[98, null]], "dgl.DGLGraph.reverse": [[99, null]], "dgl.DGLGraph.send_and_recv": [[100, null]], "dgl.DGLGraph.set_batch_num_edges": [[101, null]], "dgl.DGLGraph.set_batch_num_nodes": [[102, null]], "dgl.DGLGraph.srcdata": [[103, null]], "dgl.DGLGraph.srcnodes": [[104, null]], "dgl.DGLGraph.srctypes": [[105, null]], "dgl.DGLGraph.subgraph": [[106, null]], "dgl.DGLGraph.successors": [[107, null]], "dgl.DGLGraph.to": [[108, null]], "dgl.DGLGraph.to_canonical_etype": [[109, null]], "dgl.DGLGraph.to_cugraph": [[110, null]], "dgl.DGLGraph.to_simple": [[111, null]], "dgl.DGLGraph.unpin_memory_": [[112, null]], "dgl.DGLGraph.update_all": [[113, null]], "dgl.add_edges": [[114, null]], "dgl.add_nodes": [[115, null]], "dgl.add_reverse_edges": [[116, null]], "dgl.add_self_loop": [[117, null]], "dgl.adj_product_graph": [[118, null]], "dgl.adj_sum_graph": [[119, null]], "dgl.adjusted_homophily": [[120, null]], "dgl.apply_each": [[121, null]], "dgl.batch": [[122, null]], "dgl.bfs_edges_generator": [[123, null]], "dgl.bfs_nodes_generator": [[124, null]], "dgl.bipartite_from_networkx": [[125, null]], "dgl.bipartite_from_scipy": [[126, null]], "dgl.block_to_graph": [[127, null]], "dgl.broadcast_edges": [[128, null]], "dgl.broadcast_nodes": [[129, null]], "dgl.compact_graphs": [[130, null]], "dgl.create_block": [[131, null]], "dgl.data": [[2, null]], "dgl.dataloading": [[3, null]], "dgl.dataloading.BlockSampler": [[208, null]], "dgl.dataloading.as_edge_prediction_sampler": [[220, null]], "dgl.dfs_edges_generator": [[229, null]], "dgl.dfs_labeled_edges_generator": [[230, null]], "dgl.distributed": [[4, null]], "dgl.distributed.edge_split": [[231, null]], "dgl.distributed.find_edges": [[232, null]], "dgl.distributed.in_subgraph": [[233, null]], "dgl.distributed.initialize": [[234, null]], "dgl.distributed.load_partition": [[235, null]], "dgl.distributed.load_partition_book": [[236, null]], "dgl.distributed.load_partition_feats": [[237, null]], "dgl.distributed.node_split": [[238, null]], "dgl.distributed.partition_graph": [[239, null]], "dgl.distributed.sample_etype_neighbors": [[240, null]], "dgl.distributed.sample_neighbors": [[241, null]], "dgl.double_radius_node_labeling": [[242, null]], "dgl.edge_homophily": [[243, null]], "dgl.edge_label_informativeness": [[244, null]], "dgl.edge_subgraph": [[245, null]], "dgl.edge_type_subgraph": [[246, null]], "dgl.from_cugraph": [[247, null]], "dgl.from_networkx": [[248, null]], "dgl.from_scipy": [[249, null]], "dgl.function": [[5, null]], "dgl.function.copy_e": [[250, null]], "dgl.function.copy_u": [[251, null]], "dgl.function.e_add_u": [[252, null]], "dgl.function.e_add_v": [[253, null]], "dgl.function.e_div_u": [[254, null]], "dgl.function.e_div_v": [[255, null]], "dgl.function.e_dot_u": [[256, null]], "dgl.function.e_dot_v": [[257, null]], "dgl.function.e_mul_u": [[258, null]], "dgl.function.e_mul_v": [[259, null]], "dgl.function.e_sub_u": [[260, null]], "dgl.function.e_sub_v": [[261, null]], "dgl.function.max": [[262, null]], "dgl.function.mean": [[263, null]], "dgl.function.min": [[264, null]], "dgl.function.sum": [[265, null]], "dgl.function.u_add_e": [[266, null]], "dgl.function.u_add_v": [[267, null]], "dgl.function.u_div_e": [[268, null]], "dgl.function.u_div_v": [[269, null]], "dgl.function.u_dot_e": [[270, null]], "dgl.function.u_dot_v": [[271, null]], "dgl.function.u_mul_e": [[272, null]], "dgl.function.u_mul_v": [[273, null]], "dgl.function.u_sub_e": [[274, null]], "dgl.function.u_sub_v": [[275, null]], "dgl.function.v_add_e": [[276, null]], "dgl.function.v_add_u": [[277, null]], "dgl.function.v_div_e": [[278, null]], "dgl.function.v_div_u": [[279, null]], "dgl.function.v_dot_e": [[280, null]], "dgl.function.v_dot_u": [[281, null]], "dgl.function.v_mul_e": [[282, null]], "dgl.function.v_mul_u": [[283, null]], "dgl.function.v_sub_e": [[284, null]], "dgl.function.v_sub_u": [[285, null]], "dgl.geometry": [[6, null]], "dgl.graph": [[286, null]], "dgl.graphbolt.add_reverse_edges": [[317, null]], "dgl.graphbolt.compact_csc_format": [[318, null]], "dgl.graphbolt.etype_str_to_tuple": [[319, null]], "dgl.graphbolt.etype_tuple_to_str": [[320, null]], "dgl.graphbolt.exclude_seed_edges": [[321, null]], "dgl.graphbolt.from_dglgraph": [[322, null]], "dgl.graphbolt.fused_csc_sampling_graph": [[323, null]], "dgl.graphbolt.isin": [[324, null]], "dgl.graphbolt.load_from_shared_memory": [[325, null]], "dgl.graphbolt.seed": [[326, null]], "dgl.graphbolt.unique_and_compact": [[327, null]], "dgl.graphbolt.unique_and_compact_csc_formats": [[328, null]], "dgl.heterograph": [[329, null]], "dgl.in_subgraph": [[330, null]], "dgl.is_libxsmm_enabled": [[331, null]], "dgl.khop_adj": [[332, null]], "dgl.khop_graph": [[333, null]], "dgl.khop_in_subgraph": [[334, null]], "dgl.khop_out_subgraph": [[335, null]], "dgl.knn_graph": [[336, null]], "dgl.lap_pe": [[337, null]], "dgl.laplacian_lambda_max": [[338, null]], "dgl.line_graph": [[339, null]], "dgl.linkx_homophily": [[340, null]], "dgl.load_graphs": [[341, null]], "dgl.max_edges": [[342, null]], "dgl.max_nodes": [[343, null]], "dgl.mean_edges": [[344, null]], "dgl.mean_nodes": [[345, null]], "dgl.merge": [[346, null]], "dgl.metapath_reachable_graph": [[347, null]], "dgl.metis_partition": [[348, null]], "dgl.metis_partition_assignment": [[349, null]], "dgl.multiprocessing": [[8, null]], "dgl.multiprocessing.pytorch.call_once_and_share": [[350, null]], "dgl.multiprocessing.pytorch.shared_tensor": [[351, null]], "dgl.nn (MXNet)": [[15, null]], "dgl.nn (PyTorch)": [[16, null]], "dgl.nn (TensorFlow)": [[17, null]], "dgl.nn.functional": [[18, null]], "dgl.nn.functional.edge_softmax": [[352, null]], "dgl.node_homophily": [[476, null]], "dgl.node_label_informativeness": [[477, null]], "dgl.node_subgraph": [[478, null]], "dgl.node_type_subgraph": [[479, null]], "dgl.norm_by_dst": [[480, null]], "dgl.ops": [[9, null]], "dgl.ops.copy_e_max": [[481, null]], "dgl.ops.copy_e_mean": [[482, null]], "dgl.ops.copy_e_min": [[483, null]], "dgl.ops.copy_e_sum": [[484, null]], "dgl.ops.copy_u": [[485, null]], "dgl.ops.copy_u_max": [[486, null]], "dgl.ops.copy_u_mean": [[487, null]], "dgl.ops.copy_u_min": [[488, null]], "dgl.ops.copy_u_sum": [[489, null]], "dgl.ops.copy_v": [[490, null]], "dgl.ops.e_add_u": [[491, null]], "dgl.ops.e_add_v": [[492, null]], "dgl.ops.e_div_u": [[493, null]], "dgl.ops.e_div_v": [[494, null]], "dgl.ops.e_dot_u": [[495, null]], "dgl.ops.e_dot_v": [[496, null]], "dgl.ops.e_mul_u": [[497, null]], "dgl.ops.e_mul_v": [[498, null]], "dgl.ops.e_sub_u": [[499, null]], "dgl.ops.e_sub_v": [[500, null]], "dgl.ops.gather_mm": [[501, null]], "dgl.ops.gsddmm": [[502, null]], "dgl.ops.gspmm": [[503, null]], "dgl.ops.segment_mm": [[504, null]], "dgl.ops.segment_reduce": [[505, null]], "dgl.ops.u_add_e": [[506, null]], "dgl.ops.u_add_e_max": [[507, null]], "dgl.ops.u_add_e_mean": [[508, null]], "dgl.ops.u_add_e_min": [[509, null]], "dgl.ops.u_add_e_sum": [[510, null]], "dgl.ops.u_add_v": [[511, null]], "dgl.ops.u_div_e": [[512, null]], "dgl.ops.u_div_e_max": [[513, null]], "dgl.ops.u_div_e_mean": [[514, null]], "dgl.ops.u_div_e_min": [[515, null]], "dgl.ops.u_div_e_sum": [[516, null]], "dgl.ops.u_div_v": [[517, null]], "dgl.ops.u_dot_e": [[518, null]], "dgl.ops.u_dot_v": [[519, null]], "dgl.ops.u_mul_e": [[520, null]], "dgl.ops.u_mul_e_max": [[521, null]], "dgl.ops.u_mul_e_mean": [[522, null]], "dgl.ops.u_mul_e_min": [[523, null]], "dgl.ops.u_mul_e_sum": [[524, null]], "dgl.ops.u_mul_v": [[525, null]], "dgl.ops.u_sub_e": [[526, null]], "dgl.ops.u_sub_e_max": [[527, null]], "dgl.ops.u_sub_e_mean": [[528, null]], "dgl.ops.u_sub_e_min": [[529, null]], "dgl.ops.u_sub_e_sum": [[530, null]], "dgl.ops.u_sub_v": [[531, null]], "dgl.ops.v_add_e": [[532, null]], "dgl.ops.v_add_u": [[533, null]], "dgl.ops.v_div_e": [[534, null]], "dgl.ops.v_div_u": [[535, null]], "dgl.ops.v_dot_e": [[536, null]], "dgl.ops.v_dot_u": [[537, null]], "dgl.ops.v_mul_e": [[538, null]], "dgl.ops.v_mul_u": [[539, null]], "dgl.ops.v_sub_e": [[540, null]], "dgl.ops.v_sub_u": [[541, null]], "dgl.optim": [[10, null]], "dgl.out_subgraph": [[542, null]], "dgl.partition_graph_with_halo": [[543, null]], "dgl.prop_edges": [[544, null]], "dgl.prop_edges_dfs": [[545, null]], "dgl.prop_nodes": [[546, null]], "dgl.prop_nodes_bfs": [[547, null]], "dgl.prop_nodes_topo": [[548, null]], "dgl.radius_graph": [[549, null]], "dgl.rand_bipartite": [[550, null]], "dgl.rand_graph": [[551, null]], "dgl.random_walk_pe": [[552, null]], "dgl.readout_edges": [[553, null]], "dgl.readout_nodes": [[554, null]], "dgl.remove_edges": [[555, null]], "dgl.remove_nodes": [[556, null]], "dgl.remove_self_loop": [[557, null]], "dgl.reorder_graph": [[558, null]], "dgl.reverse": [[559, null]], "dgl.sampling": [[11, null]], "dgl.sampling.PinSAGESampler": [[560, null]], "dgl.sampling.global_uniform_negative_sampling": [[561, null]], "dgl.sampling.node2vec_random_walk": [[562, null]], "dgl.sampling.pack_traces": [[563, null]], "dgl.sampling.random_walk": [[564, null]], "dgl.sampling.sample_labors": [[565, null]], "dgl.sampling.sample_neighbors": [[566, null]], "dgl.sampling.sample_neighbors_biased": [[567, null]], "dgl.sampling.select_topk": [[568, null]], "dgl.save_graphs": [[569, null]], "dgl.seed": [[570, null]], "dgl.segmented_knn_graph": [[571, null]], "dgl.shortest_dist": [[572, null]], "dgl.slice_batch": [[573, null]], "dgl.softmax_edges": [[574, null]], "dgl.softmax_nodes": [[575, null]], "dgl.sort_csc_by_tag": [[576, null]], "dgl.sort_csr_by_tag": [[577, null]], "dgl.sparse": [[12, null]], "dgl.sparse.SparseMatrix.T": [[578, null]], "dgl.sparse.SparseMatrix.coalesce": [[579, null]], "dgl.sparse.SparseMatrix.col": [[580, null]], "dgl.sparse.SparseMatrix.coo": [[581, null]], "dgl.sparse.SparseMatrix.cpu": [[582, null]], "dgl.sparse.SparseMatrix.csc": [[583, null]], "dgl.sparse.SparseMatrix.csr": [[584, null]], "dgl.sparse.SparseMatrix.cuda": [[585, null]], "dgl.sparse.SparseMatrix.device": [[586, null]], "dgl.sparse.SparseMatrix.double": [[587, null]], "dgl.sparse.SparseMatrix.dtype": [[588, null]], "dgl.sparse.SparseMatrix.float": [[589, null]], "dgl.sparse.SparseMatrix.has_duplicate": [[590, null]], "dgl.sparse.SparseMatrix.indices": [[591, null]], "dgl.sparse.SparseMatrix.int": [[592, null]], "dgl.sparse.SparseMatrix.long": [[593, null]], "dgl.sparse.SparseMatrix.neg": [[594, null]], "dgl.sparse.SparseMatrix.nnz": [[595, null]], "dgl.sparse.SparseMatrix.reduce": [[596, null]], "dgl.sparse.SparseMatrix.row": [[597, null]], "dgl.sparse.SparseMatrix.shape": [[598, null]], "dgl.sparse.SparseMatrix.smax": [[599, null]], "dgl.sparse.SparseMatrix.smean": [[600, null]], "dgl.sparse.SparseMatrix.smin": [[601, null]], "dgl.sparse.SparseMatrix.softmax": [[602, null]], "dgl.sparse.SparseMatrix.sum": [[603, null]], "dgl.sparse.SparseMatrix.t": [[604, null]], "dgl.sparse.SparseMatrix.to": [[605, null]], "dgl.sparse.SparseMatrix.to_dense": [[606, null]], "dgl.sparse.SparseMatrix.transpose": [[607, null]], "dgl.sparse.SparseMatrix.val": [[608, null]], "dgl.sparse.add": [[609, null]], "dgl.sparse.bsddmm": [[610, null]], "dgl.sparse.bspmm": [[611, null]], "dgl.sparse.diag": [[612, null]], "dgl.sparse.div": [[613, null]], "dgl.sparse.from_coo": [[614, null]], "dgl.sparse.from_csc": [[615, null]], "dgl.sparse.from_csr": [[616, null]], "dgl.sparse.identity": [[617, null]], "dgl.sparse.matmul": [[618, null]], "dgl.sparse.mul": [[619, null]], "dgl.sparse.power": [[620, null]], "dgl.sparse.sddmm": [[621, null]], "dgl.sparse.softmax": [[622, null]], "dgl.sparse.sp_add_v": [[623, null]], "dgl.sparse.sp_broadcast_v": [[624, null]], "dgl.sparse.sp_div_v": [[625, null]], "dgl.sparse.sp_mul_v": [[626, null]], "dgl.sparse.sp_sub_v": [[627, null]], "dgl.sparse.spmatrix": [[628, null]], "dgl.sparse.spmm": [[629, null]], "dgl.sparse.spspmm": [[630, null]], "dgl.sparse.sub": [[631, null]], "dgl.sparse.val_like": [[632, null]], "dgl.sum_edges": [[633, null]], "dgl.sum_nodes": [[634, null]], "dgl.svd_pe": [[635, null]], "dgl.to_bidirected": [[636, null]], "dgl.to_block": [[637, null]], "dgl.to_cugraph": [[638, null]], "dgl.to_double": [[639, null]], "dgl.to_float": [[640, null]], "dgl.to_half": [[641, null]], "dgl.to_heterogeneous": [[642, null]], "dgl.to_homogeneous": [[643, null]], "dgl.to_networkx": [[644, null]], "dgl.to_simple": [[645, null]], "dgl.to_simple_graph": [[646, null]], "dgl.topk_edges": [[647, null]], "dgl.topk_nodes": [[648, null]], "dgl.topological_nodes_generator": [[649, null]], "dgl.transforms": [[19, null]], "dgl.udf.EdgeBatch.batch_size": [[674, null]], "dgl.udf.EdgeBatch.data": [[675, null]], "dgl.udf.EdgeBatch.dst": [[676, null]], "dgl.udf.EdgeBatch.edges": [[677, null]], "dgl.udf.EdgeBatch.src": [[678, null]], "dgl.udf.NodeBatch.batch_size": [[679, null]], "dgl.udf.NodeBatch.data": [[680, null]], "dgl.udf.NodeBatch.mailbox": [[681, null]], "dgl.udf.NodeBatch.nodes": [[682, null]], "dgl.unbatch": [[683, null]], "dgl.use_libxsmm": [[684, null]], "download": [[200, null]], "edges.csv": [[700, "id2"], [744, "id6"], [785, "id6"]], "extract_archive": [[201, null]], "feature_data": [[831, "feature-data"]], "get_download_dir": [[202, null]], "graph": [[831, "graph"]], "load_info": [[203, null]], "load_labels": [[204, null]], "macOS": [[816, "macos"]], "mask_nodes_by_property": [[205, null]], "nodes.csv": [[700, "id1"], [744, "id5"], [785, "id5"]], "save_info": [[206, null]], "set_dst_lazy_features": [[222, null]], "set_edge_lazy_features": [[223, null]], "set_node_lazy_features": [[224, null]], "set_src_lazy_features": [[225, null]], "split_dataset": [[207, null]], "tasks": [[831, "tasks"]], "v0.4.3 Benchmarks": [[823, "v0-4-3-benchmarks"]], "v0.5 Benchmarks": [[823, "v0-5-benchmarks"]], "v0.6 Benchmarks": [[823, "v0-6-benchmarks"]], "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": [[767, "id3"]], "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": [[744, "id2"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": [[744, "id3"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": [[748, "id4"]], "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": [[748, "id3"]], "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": [[768, "id2"]], "\u5206\u5272\u6570\u636e\u96c6": [[739, "id8"]], "\u5206\u5e03\u5f0f\u56fe": [[739, "id1"]], "\u5206\u5e03\u5f0f\u5d4c\u5165": [[739, "id6"]], "\u5206\u5e03\u5f0f\u5f20\u91cf": [[739, "id5"]], "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": [[739, "id2"]], "\u5206\u5e03\u5f0f\u91c7\u6837": [[739, "id7"]], "\u521b\u5efaDistGraph": [[739, "distgraph"]], "\u521b\u5efa\u5f02\u6784\u56fe": [[748, "id2"]], "\u56fe\u8bfb\u51fa": [[769, "id4"]], "\u5728NN\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": [[768, "nn"]], "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": [[767, "id6"]], "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": [[736, "id2"]], "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": [[736, "id3"]], "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": [[736, "id4"]], "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": [[756, "id4"]], "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[757, "id2"], [761, "id2"]], "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": [[756, "guide-cn-minibatch-customizing-neighborhood-sampler-impl"]], "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": [[758, "id2"]], "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe\u3001\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": [[760, "id2"]], "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": [[748, "id6"]], "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": [[757, "id3"]], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": [[761, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[769, "id10"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": [[760, "id1"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": [[757, "id6"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[771, "guide-cn-training-rgcn-node-classification"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[767, "guide-cn-training-edge-classification-heterogeneous-graph"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": [[756, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[770, "id4"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": [[759, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": [[756, "id7"]], "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": [[766, "guide-cn-training-heterogeneous-graph-example"]], "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": [[769, "id6"]], "\u6279\u6b21\u7684\u56fe": [[769, "id3"]], "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": [[756, "id3"]], "\u6570\u636e\u52a0\u8f7d": [[769, "id9"]], "\u672c\u7ae0\u8def\u7ebf\u56fe": [[732, "id2"], [742, "id2"], [750, "id3"], [755, "id3"], [762, "id1"], [766, "id4"]], "\u6982\u8ff0": [[766, "id2"], [767, "id2"], [769, "id2"], [770, "id2"], [771, "id2"]], "\u6a21\u578b\u5b9a\u4e49": [[769, "id7"]], "\u6a21\u578b\u7684\u8bad\u7ec3": [[757, "id5"], [759, "id4"], [761, "id4"], [767, "id4"], [769, "id8"], [770, "id3"], [771, "id4"]], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": [[764, "id2"]], "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[750, "id2"]], "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": [[756, "id2"]], "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011": [[749, null]], "\u7b2c1\u7ae0\uff1a\u56fe": [[742, null]], "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[750, null]], "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757": [[762, null]], "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [[732, null]], "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [[766, null]], "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3": [[755, null]], "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3": [[738, null]], "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[759, "id2"]], "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [[769, "id5"], [771, "id3"]], "\u805a\u5408\u540e\uff0c\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": [[764, "id3"]], "\u8bbf\u95ee\u56fe\u7ed3\u6784": [[739, "id3"]], "\u8bbf\u95ee\u8282\u70b9/\u8fb9\u6570\u636e": [[739, "id4"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [[759, "id3"], [761, "guide-cn-minibatch-node-classification-model"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": [[757, "id4"]], "\u8d1f\u8f7d\u5747\u8861": [[740, "id2"]], "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": [[764, "id1"]], "\u8fb9\u7c7b\u578b\u5b50\u56fe": [[748, "id5"]], "\u9017\u53f7\u5206\u9694\u503c\uff08CSV\uff09": [[744, "csv"], [748, "csv"]], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": [[755, "id2"]], "\uac1c\uc694": [[810, "id2"], [811, "id1"], [812, "id2"], [813, "id2"], [814, "id1"]], "\uadf8\ub798\ud504 \uad6c\uc870 \uc811\uadfc": [[779, "id1"]], "\uadf8\ub798\ud504 \ub9ac\ub4dc\uc544\uc6c3(readout)": [[812, "readout"]], "\uadf8\ub798\ud504 \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[776, "id2"]], "\uadf8\ub798\ud504 \uccb4\ud06c\uc640 \uadf8\ub798\ud504 \ud0c0\uc785 \uba85\uc138\ud654(graph type specification)": [[808, "graph-type-specification"]], "\uadf8\ub798\ud504\ub4e4\uc758 \ubc30\uce58(batch)": [[812, "batch"]], "\ub178\ub4dc \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[776, "id3"]], "\ub178\ub4dc \ubd84\ub958 \ubaa8\ub378\uacfc \uad6c\ud604\uc0c1\uc758 \ucc28\uc774\uc810": [[811, "id2"]], "\ub178\ub4dc/\uc5d0\uc9c0 \ub370\uc774\ud130 \uc811\uadfc": [[779, "id2"]], "\ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc791\uc131\ud558\uae30": [[812, "id3"], [814, "id2"]], "\ub2e4\uc591\ud55c \ud0c0\uc785\uc744 \ub2e4\ub8e8\uae30": [[789, "id2"]], "\ub370\uc774\ud130 \ub85c\ub529": [[812, "id7"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[785, "id3"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uc774\uc885 \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[789, "id3"]], "\ub85c\ub4dc \ubc38\ub7f0\uc2f1": [[781, "id2"]], "\ub85c\ub4dc\ub9f5": [[772, "id2"], [783, "id2"], [791, "id1"], [797, "id1"], [806, "id1"], [810, "id3"]], "\ub9c1\ud06c \uc608\uce21 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[776, "id4"]], "\uba40\ud2f0-\ub808\uc774\uc5b4 \ubbf8\ub2c8\ubc30\uce58 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc744 \uc704\ud55c \uc774\ubd84 \uad6c\uc870(Bipartite Structure)": [[798, "bipartite-structure"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec \uc758\uc874\uc131 \ucc3e\uae30": [[798, "id3"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec\uacfc \ucd95\uc57d": [[808, "id1"]], "\uba54\uc9c0\uc2dc \uc804\ub2ec \ud328\ub7ec\ub2e4\uc784(Message Passing Paradigm)": [[791, "message-passing-paradigm"]], "\ubaa8\ub378 \uc815\uc758\ud558\uae30": [[812, "id5"]], "\ubaa8\ub378\uc744 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc5d0 \ub9de\uac8c \ub9cc\ub4e4\uae30": [[799, "id3"], [802, "id1"], [804, "guide-ko-minibatch-node-classification-model"]], "\ubc30\uce58 \uadf8\ub798\ud504\uc5d0 \uc5f0\uc0b0\ud558\uae30": [[812, "id4"]], "\ubd84\uc0b0 DistEmbedding": [[779, "distembedding"]], "\ubd84\uc0b0 \ubaa8\ub4dc vs. \ub2e8\ub3c5(standalone) \ubaa8\ub4dc": [[779, "vs-standalone"]], "\ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[779, "id3"]], "\ubd84\uc0b0 \ud150\uc11c(Distributed Tensor)": [[779, "distributed-tensor"]], "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]": [[790, null]], "\uc5d0\uc9c0 \ud0c0\uc785 \uc11c\ube0c\uadf8\ub798\ud504": [[789, "id4"]], "\uc624\ud504\ub77c\uc778 \ucd94\ub860 \uad6c\ud604\ud558\uae30": [[801, "id2"]], "\uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud574\uc11c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[785, "id2"]], "\uc6cc\ud06c\ub85c\ub4dc \ub098\ub204\uae30(Split workloads)": [[779, "split-workloads"]], "\uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[799, "id1"], [804, "id1"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc9c1\uc811 \ud574\ubcf4\uae30": [[798, "id2"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1(Neighborhood Sampling) \ubc29\ubc95 \uac1c\uc694": [[797, "neighborhood-sampling"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc704\ud574\uc11c \uc6d0\ubcf8 \uadf8\ub798\ud504\uc5d0\uc11c \ubbf8\ub2c8 \ubc30\uce58\uc758 \uc5d0\uc9c0\ub4e4 \uc81c\uac70\ud558\uae30": [[799, "id2"]], "\uc774\uc885 \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[789, "id1"]], "\uc774\uc885 \uadf8\ub798\ud504\ub97c \ub3d9\uc885 \uadf8\ub798\ud504\ub85c \ubcc0\ud658\ud558\uae30": [[789, "id5"]], "\ucd9c\ub825\uac12\uc744 \uc704\ud55c \ucd95\uc57d \ud6c4 \ud53c\uccd0 \uc5c5\ub370\uc774\ud2b8": [[808, "id2"]], "\ucee4\uc2a4\ud140 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \uad6c\ud604\ud558\uae30": [[798, "guide-ko-minibatch-customizing-neighborhood-sampler-impl"]], "\ud559\uc2b5 \ub8f9": [[799, "id4"], [802, "id2"], [804, "id3"], [812, "id6"], [813, "id3"]], "\ud559\uc2b5 \ub8f9(loop)": [[811, "loop"], [814, "loop"]], "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt": [[826, null]], "\ud83c\udd95 dgl.graphbolt": [[7, null]]}, "docnames": ["api/python/dgl", "api/python/dgl.DGLGraph", "api/python/dgl.data", "api/python/dgl.dataloading", "api/python/dgl.distributed", "api/python/dgl.function", "api/python/dgl.geometry", "api/python/dgl.graphbolt", "api/python/dgl.multiprocessing", "api/python/dgl.ops", "api/python/dgl.optim", "api/python/dgl.sampling", "api/python/dgl.sparse_v0", "api/python/index", "api/python/knn_benchmark", "api/python/nn-mxnet", "api/python/nn-pytorch", "api/python/nn-tensorflow", "api/python/nn.functional", "api/python/transforms", "api/python/udf", "contribute", "developer/ffi", "env_var", "faq", "features/dataset", "generated/dgl.DGLGraph.__getitem__", "generated/dgl.DGLGraph.add_edges", "generated/dgl.DGLGraph.add_nodes", "generated/dgl.DGLGraph.add_self_loop", "generated/dgl.DGLGraph.adj", "generated/dgl.DGLGraph.adj_external", "generated/dgl.DGLGraph.adj_tensors", "generated/dgl.DGLGraph.adjacency_matrix", "generated/dgl.DGLGraph.apply_edges", "generated/dgl.DGLGraph.apply_nodes", "generated/dgl.DGLGraph.batch_num_edges", "generated/dgl.DGLGraph.batch_num_nodes", "generated/dgl.DGLGraph.batch_size", "generated/dgl.DGLGraph.canonical_etypes", "generated/dgl.DGLGraph.cpu", "generated/dgl.DGLGraph.create_formats_", "generated/dgl.DGLGraph.device", "generated/dgl.DGLGraph.dstdata", "generated/dgl.DGLGraph.dstnodes", "generated/dgl.DGLGraph.dsttypes", "generated/dgl.DGLGraph.edata", "generated/dgl.DGLGraph.edge_attr_schemes", "generated/dgl.DGLGraph.edge_ids", "generated/dgl.DGLGraph.edge_subgraph", "generated/dgl.DGLGraph.edge_type_subgraph", "generated/dgl.DGLGraph.edges", "generated/dgl.DGLGraph.etypes", "generated/dgl.DGLGraph.filter_edges", "generated/dgl.DGLGraph.filter_nodes", "generated/dgl.DGLGraph.find_edges", "generated/dgl.DGLGraph.formats", "generated/dgl.DGLGraph.has_edges_between", "generated/dgl.DGLGraph.has_nodes", "generated/dgl.DGLGraph.idtype", "generated/dgl.DGLGraph.in_degrees", "generated/dgl.DGLGraph.in_edges", "generated/dgl.DGLGraph.inc", "generated/dgl.DGLGraph.incidence_matrix", "generated/dgl.DGLGraph.int", "generated/dgl.DGLGraph.is_homogeneous", "generated/dgl.DGLGraph.is_multigraph", "generated/dgl.DGLGraph.is_pinned", "generated/dgl.DGLGraph.is_unibipartite", "generated/dgl.DGLGraph.line_graph", "generated/dgl.DGLGraph.local_scope", "generated/dgl.DGLGraph.long", "generated/dgl.DGLGraph.metagraph", "generated/dgl.DGLGraph.multi_update_all", "generated/dgl.DGLGraph.ndata", "generated/dgl.DGLGraph.node_attr_schemes", "generated/dgl.DGLGraph.node_type_subgraph", "generated/dgl.DGLGraph.nodes", "generated/dgl.DGLGraph.ntypes", "generated/dgl.DGLGraph.num_dst_nodes", "generated/dgl.DGLGraph.num_edges", "generated/dgl.DGLGraph.num_nodes", "generated/dgl.DGLGraph.num_src_nodes", "generated/dgl.DGLGraph.number_of_dst_nodes", "generated/dgl.DGLGraph.number_of_edges", "generated/dgl.DGLGraph.number_of_nodes", "generated/dgl.DGLGraph.number_of_src_nodes", "generated/dgl.DGLGraph.out_degrees", "generated/dgl.DGLGraph.out_edges", "generated/dgl.DGLGraph.pin_memory_", "generated/dgl.DGLGraph.predecessors", "generated/dgl.DGLGraph.prop_edges", "generated/dgl.DGLGraph.prop_nodes", "generated/dgl.DGLGraph.pull", "generated/dgl.DGLGraph.push", "generated/dgl.DGLGraph.remove_edges", "generated/dgl.DGLGraph.remove_nodes", "generated/dgl.DGLGraph.remove_self_loop", "generated/dgl.DGLGraph.reorder_graph", "generated/dgl.DGLGraph.reverse", "generated/dgl.DGLGraph.send_and_recv", "generated/dgl.DGLGraph.set_batch_num_edges", "generated/dgl.DGLGraph.set_batch_num_nodes", "generated/dgl.DGLGraph.srcdata", "generated/dgl.DGLGraph.srcnodes", "generated/dgl.DGLGraph.srctypes", "generated/dgl.DGLGraph.subgraph", "generated/dgl.DGLGraph.successors", "generated/dgl.DGLGraph.to", "generated/dgl.DGLGraph.to_canonical_etype", "generated/dgl.DGLGraph.to_cugraph", "generated/dgl.DGLGraph.to_simple", "generated/dgl.DGLGraph.unpin_memory_", "generated/dgl.DGLGraph.update_all", "generated/dgl.add_edges", "generated/dgl.add_nodes", "generated/dgl.add_reverse_edges", "generated/dgl.add_self_loop", "generated/dgl.adj_product_graph", "generated/dgl.adj_sum_graph", "generated/dgl.adjusted_homophily", "generated/dgl.apply_each", "generated/dgl.batch", "generated/dgl.bfs_edges_generator", "generated/dgl.bfs_nodes_generator", "generated/dgl.bipartite_from_networkx", "generated/dgl.bipartite_from_scipy", "generated/dgl.block_to_graph", "generated/dgl.broadcast_edges", "generated/dgl.broadcast_nodes", "generated/dgl.compact_graphs", "generated/dgl.create_block", "generated/dgl.data.AIFBDataset", "generated/dgl.data.AMDataset", "generated/dgl.data.ActorDataset", "generated/dgl.data.AmazonCoBuyComputerDataset", "generated/dgl.data.AmazonCoBuyPhotoDataset", "generated/dgl.data.AmazonRatingsDataset", "generated/dgl.data.AsGraphPredDataset", "generated/dgl.data.AsLinkPredDataset", "generated/dgl.data.AsNodePredDataset", "generated/dgl.data.BA2MotifDataset", "generated/dgl.data.BACommunityDataset", "generated/dgl.data.BAShapeDataset", "generated/dgl.data.BGSDataset", "generated/dgl.data.BitcoinOTCDataset", "generated/dgl.data.CIFAR10SuperPixelDataset", "generated/dgl.data.CLUSTERDataset", "generated/dgl.data.CSVDataset", "generated/dgl.data.ChameleonDataset", "generated/dgl.data.CiteseerGraphDataset", "generated/dgl.data.CoauthorCSDataset", "generated/dgl.data.CoauthorPhysicsDataset", "generated/dgl.data.CoraFullDataset", "generated/dgl.data.CoraGraphDataset", "generated/dgl.data.CornellDataset", "generated/dgl.data.DGLDataset", "generated/dgl.data.FB15k237Dataset", "generated/dgl.data.FB15kDataset", "generated/dgl.data.FakeNewsDataset", "generated/dgl.data.FlickrDataset", "generated/dgl.data.FraudAmazonDataset", "generated/dgl.data.FraudDataset", "generated/dgl.data.FraudYelpDataset", "generated/dgl.data.GDELTDataset", "generated/dgl.data.GINDataset", "generated/dgl.data.ICEWS18Dataset", "generated/dgl.data.KarateClubDataset", "generated/dgl.data.LegacyTUDataset", "generated/dgl.data.MNISTSuperPixelDataset", "generated/dgl.data.MUTAGDataset", "generated/dgl.data.MinesweeperDataset", "generated/dgl.data.MiniGCDataset", "generated/dgl.data.MovieLensDataset", "generated/dgl.data.PATTERNDataset", "generated/dgl.data.PPIDataset", "generated/dgl.data.PubmedGraphDataset", "generated/dgl.data.QM7bDataset", "generated/dgl.data.QM9Dataset", "generated/dgl.data.QM9EdgeDataset", "generated/dgl.data.QuestionsDataset", "generated/dgl.data.RedditDataset", "generated/dgl.data.RomanEmpireDataset", "generated/dgl.data.SBMMixtureDataset", "generated/dgl.data.SSTDataset", "generated/dgl.data.SquirrelDataset", "generated/dgl.data.TUDataset", "generated/dgl.data.TexasDataset", "generated/dgl.data.TolokersDataset", "generated/dgl.data.TreeCycleDataset", "generated/dgl.data.TreeGridDataset", "generated/dgl.data.WN18Dataset", "generated/dgl.data.WikiCSDataset", "generated/dgl.data.WisconsinDataset", "generated/dgl.data.YelpDataset", "generated/dgl.data.ZINCDataset", "generated/dgl.data.utils.Subset", "generated/dgl.data.utils.add_node_property_split", "generated/dgl.data.utils.add_nodepred_split", "generated/dgl.data.utils.check_sha1", "generated/dgl.data.utils.download", "generated/dgl.data.utils.extract_archive", "generated/dgl.data.utils.get_download_dir", "generated/dgl.data.utils.load_info", "generated/dgl.data.utils.load_labels", "generated/dgl.data.utils.mask_nodes_by_property", "generated/dgl.data.utils.save_info", "generated/dgl.data.utils.split_dataset", "generated/dgl.dataloading.BlockSampler", "generated/dgl.dataloading.ClusterGCNSampler", "generated/dgl.dataloading.DataLoader", "generated/dgl.dataloading.DistEdgeDataLoader", "generated/dgl.dataloading.DistNodeDataLoader", "generated/dgl.dataloading.GraphDataLoader", "generated/dgl.dataloading.LaborSampler", "generated/dgl.dataloading.MultiLayerFullNeighborSampler", "generated/dgl.dataloading.NeighborSampler", "generated/dgl.dataloading.SAINTSampler", "generated/dgl.dataloading.Sampler", "generated/dgl.dataloading.ShaDowKHopSampler", "generated/dgl.dataloading.as_edge_prediction_sampler", "generated/dgl.dataloading.base.LazyFeature", "generated/dgl.dataloading.base.set_dst_lazy_features", "generated/dgl.dataloading.base.set_edge_lazy_features", "generated/dgl.dataloading.base.set_node_lazy_features", "generated/dgl.dataloading.base.set_src_lazy_features", "generated/dgl.dataloading.negative_sampler.GlobalUniform", "generated/dgl.dataloading.negative_sampler.PerSourceUniform", "generated/dgl.dataloading.negative_sampler.Uniform", "generated/dgl.dfs_edges_generator", "generated/dgl.dfs_labeled_edges_generator", "generated/dgl.distributed.edge_split", "generated/dgl.distributed.find_edges", "generated/dgl.distributed.in_subgraph", "generated/dgl.distributed.initialize", "generated/dgl.distributed.load_partition", "generated/dgl.distributed.load_partition_book", "generated/dgl.distributed.load_partition_feats", "generated/dgl.distributed.node_split", "generated/dgl.distributed.partition_graph", "generated/dgl.distributed.sample_etype_neighbors", "generated/dgl.distributed.sample_neighbors", "generated/dgl.double_radius_node_labeling", "generated/dgl.edge_homophily", "generated/dgl.edge_label_informativeness", "generated/dgl.edge_subgraph", "generated/dgl.edge_type_subgraph", "generated/dgl.from_cugraph", "generated/dgl.from_networkx", "generated/dgl.from_scipy", "generated/dgl.function.copy_e", "generated/dgl.function.copy_u", "generated/dgl.function.e_add_u", "generated/dgl.function.e_add_v", "generated/dgl.function.e_div_u", "generated/dgl.function.e_div_v", "generated/dgl.function.e_dot_u", "generated/dgl.function.e_dot_v", "generated/dgl.function.e_mul_u", "generated/dgl.function.e_mul_v", "generated/dgl.function.e_sub_u", "generated/dgl.function.e_sub_v", "generated/dgl.function.max", "generated/dgl.function.mean", "generated/dgl.function.min", "generated/dgl.function.sum", "generated/dgl.function.u_add_e", "generated/dgl.function.u_add_v", "generated/dgl.function.u_div_e", "generated/dgl.function.u_div_v", "generated/dgl.function.u_dot_e", "generated/dgl.function.u_dot_v", "generated/dgl.function.u_mul_e", "generated/dgl.function.u_mul_v", "generated/dgl.function.u_sub_e", "generated/dgl.function.u_sub_v", "generated/dgl.function.v_add_e", "generated/dgl.function.v_add_u", "generated/dgl.function.v_div_e", "generated/dgl.function.v_div_u", "generated/dgl.function.v_dot_e", "generated/dgl.function.v_dot_u", "generated/dgl.function.v_mul_e", "generated/dgl.function.v_mul_u", "generated/dgl.function.v_sub_e", "generated/dgl.function.v_sub_u", "generated/dgl.graph", "generated/dgl.graphbolt.BasicFeatureStore", "generated/dgl.graphbolt.BuiltinDataset", "generated/dgl.graphbolt.CopyTo", "generated/dgl.graphbolt.DataLoader", "generated/dgl.graphbolt.Dataset", "generated/dgl.graphbolt.DistributedItemSampler", "generated/dgl.graphbolt.Feature", "generated/dgl.graphbolt.FeatureFetcher", "generated/dgl.graphbolt.FeatureStore", "generated/dgl.graphbolt.FusedCSCSamplingGraph", "generated/dgl.graphbolt.GPUCachedFeature", "generated/dgl.graphbolt.InSubgraphSampler", "generated/dgl.graphbolt.ItemSampler", "generated/dgl.graphbolt.ItemSet", "generated/dgl.graphbolt.ItemSetDict", "generated/dgl.graphbolt.LayerNeighborSampler", "generated/dgl.graphbolt.LegacyDataset", "generated/dgl.graphbolt.MiniBatch", "generated/dgl.graphbolt.MiniBatchTransformer", "generated/dgl.graphbolt.NegativeSampler", "generated/dgl.graphbolt.NeighborSampler", "generated/dgl.graphbolt.OnDiskDataset", "generated/dgl.graphbolt.SampledSubgraph", "generated/dgl.graphbolt.SampledSubgraphImpl", "generated/dgl.graphbolt.SamplingGraph", "generated/dgl.graphbolt.SubgraphSampler", "generated/dgl.graphbolt.Task", "generated/dgl.graphbolt.TorchBasedFeature", "generated/dgl.graphbolt.TorchBasedFeatureStore", "generated/dgl.graphbolt.UniformNegativeSampler", "generated/dgl.graphbolt.add_reverse_edges", "generated/dgl.graphbolt.compact_csc_format", "generated/dgl.graphbolt.etype_str_to_tuple", "generated/dgl.graphbolt.etype_tuple_to_str", "generated/dgl.graphbolt.exclude_seed_edges", "generated/dgl.graphbolt.from_dglgraph", "generated/dgl.graphbolt.fused_csc_sampling_graph", "generated/dgl.graphbolt.isin", "generated/dgl.graphbolt.load_from_shared_memory", "generated/dgl.graphbolt.seed", "generated/dgl.graphbolt.unique_and_compact", "generated/dgl.graphbolt.unique_and_compact_csc_formats", "generated/dgl.heterograph", "generated/dgl.in_subgraph", "generated/dgl.is_libxsmm_enabled", "generated/dgl.khop_adj", "generated/dgl.khop_graph", "generated/dgl.khop_in_subgraph", "generated/dgl.khop_out_subgraph", "generated/dgl.knn_graph", "generated/dgl.lap_pe", "generated/dgl.laplacian_lambda_max", "generated/dgl.line_graph", "generated/dgl.linkx_homophily", "generated/dgl.load_graphs", "generated/dgl.max_edges", "generated/dgl.max_nodes", "generated/dgl.mean_edges", "generated/dgl.mean_nodes", "generated/dgl.merge", "generated/dgl.metapath_reachable_graph", "generated/dgl.metis_partition", "generated/dgl.metis_partition_assignment", "generated/dgl.multiprocessing.pytorch.call_once_and_share", "generated/dgl.multiprocessing.pytorch.shared_tensor", "generated/dgl.nn.functional.edge_softmax", "generated/dgl.nn.mxnet.HeteroGraphConv", "generated/dgl.nn.mxnet.conv.AGNNConv", "generated/dgl.nn.mxnet.conv.APPNPConv", "generated/dgl.nn.mxnet.conv.ChebConv", "generated/dgl.nn.mxnet.conv.DenseChebConv", "generated/dgl.nn.mxnet.conv.DenseGraphConv", "generated/dgl.nn.mxnet.conv.DenseSAGEConv", "generated/dgl.nn.mxnet.conv.EdgeConv", "generated/dgl.nn.mxnet.conv.GATConv", "generated/dgl.nn.mxnet.conv.GINConv", "generated/dgl.nn.mxnet.conv.GMMConv", "generated/dgl.nn.mxnet.conv.GatedGraphConv", "generated/dgl.nn.mxnet.conv.GraphConv", "generated/dgl.nn.mxnet.conv.NNConv", "generated/dgl.nn.mxnet.conv.RelGraphConv", "generated/dgl.nn.mxnet.conv.SAGEConv", "generated/dgl.nn.mxnet.conv.SGConv", "generated/dgl.nn.mxnet.conv.TAGConv", "generated/dgl.nn.mxnet.glob.AvgPooling", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling", "generated/dgl.nn.mxnet.glob.MaxPooling", "generated/dgl.nn.mxnet.glob.Set2Set", "generated/dgl.nn.mxnet.glob.SortPooling", "generated/dgl.nn.mxnet.glob.SumPooling", "generated/dgl.nn.mxnet.utils.Sequential", "generated/dgl.nn.pytorch.DeepWalk", "generated/dgl.nn.pytorch.HeteroEmbedding", "generated/dgl.nn.pytorch.HeteroGraphConv", "generated/dgl.nn.pytorch.HeteroLinear", "generated/dgl.nn.pytorch.MetaPath2Vec", "generated/dgl.nn.pytorch.TypedLinear", "generated/dgl.nn.pytorch.conv.AGNNConv", "generated/dgl.nn.pytorch.conv.APPNPConv", "generated/dgl.nn.pytorch.conv.AtomicConv", "generated/dgl.nn.pytorch.conv.CFConv", "generated/dgl.nn.pytorch.conv.ChebConv", "generated/dgl.nn.pytorch.conv.CuGraphGATConv", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv", "generated/dgl.nn.pytorch.conv.DGNConv", "generated/dgl.nn.pytorch.conv.DenseChebConv", "generated/dgl.nn.pytorch.conv.DenseGraphConv", "generated/dgl.nn.pytorch.conv.DenseSAGEConv", "generated/dgl.nn.pytorch.conv.DotGatConv", "generated/dgl.nn.pytorch.conv.EGATConv", "generated/dgl.nn.pytorch.conv.EGNNConv", "generated/dgl.nn.pytorch.conv.EdgeConv", "generated/dgl.nn.pytorch.conv.EdgeGATConv", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm", "generated/dgl.nn.pytorch.conv.GATConv", "generated/dgl.nn.pytorch.conv.GATv2Conv", "generated/dgl.nn.pytorch.conv.GCN2Conv", "generated/dgl.nn.pytorch.conv.GINConv", "generated/dgl.nn.pytorch.conv.GINEConv", "generated/dgl.nn.pytorch.conv.GMMConv", "generated/dgl.nn.pytorch.conv.GatedGCNConv", "generated/dgl.nn.pytorch.conv.GatedGraphConv", "generated/dgl.nn.pytorch.conv.GraphConv", "generated/dgl.nn.pytorch.conv.GroupRevRes", "generated/dgl.nn.pytorch.conv.HGTConv", "generated/dgl.nn.pytorch.conv.NNConv", "generated/dgl.nn.pytorch.conv.PNAConv", "generated/dgl.nn.pytorch.conv.RelGraphConv", "generated/dgl.nn.pytorch.conv.SAGEConv", "generated/dgl.nn.pytorch.conv.SGConv", "generated/dgl.nn.pytorch.conv.TAGConv", "generated/dgl.nn.pytorch.conv.TWIRLSConv", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", "generated/dgl.nn.pytorch.explain.GNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX", "generated/dgl.nn.pytorch.explain.PGExplainer", "generated/dgl.nn.pytorch.explain.SubgraphX", "generated/dgl.nn.pytorch.factory.KNNGraph", "generated/dgl.nn.pytorch.factory.RadiusGraph", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph", "generated/dgl.nn.pytorch.glob.AvgPooling", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling", "generated/dgl.nn.pytorch.glob.MaxPooling", "generated/dgl.nn.pytorch.glob.Set2Set", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder", "generated/dgl.nn.pytorch.glob.SortPooling", "generated/dgl.nn.pytorch.glob.SumPooling", "generated/dgl.nn.pytorch.glob.WeightAndSum", "generated/dgl.nn.pytorch.graph_transformer.BiasedMultiheadAttention", "generated/dgl.nn.pytorch.graph_transformer.DegreeEncoder", "generated/dgl.nn.pytorch.graph_transformer.EGTLayer", "generated/dgl.nn.pytorch.graph_transformer.GraphormerLayer", "generated/dgl.nn.pytorch.graph_transformer.PathEncoder", "generated/dgl.nn.pytorch.graph_transformer.SpatialEncoder", "generated/dgl.nn.pytorch.graph_transformer.SpatialEncoder3d", "generated/dgl.nn.pytorch.gt.BiasedMHA", "generated/dgl.nn.pytorch.gt.DegreeEncoder", "generated/dgl.nn.pytorch.gt.EGTLayer", "generated/dgl.nn.pytorch.gt.GraphormerLayer", "generated/dgl.nn.pytorch.gt.LapPosEncoder", "generated/dgl.nn.pytorch.gt.PathEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d", "generated/dgl.nn.pytorch.link.EdgePredictor", "generated/dgl.nn.pytorch.link.TransE", "generated/dgl.nn.pytorch.link.TransR", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding", "generated/dgl.nn.pytorch.utils.JumpingKnowledge", "generated/dgl.nn.pytorch.utils.LabelPropagation", "generated/dgl.nn.pytorch.utils.Sequential", "generated/dgl.nn.pytorch.utils.WeightBasis", "generated/dgl.nn.tensorflow.conv.APPNPConv", "generated/dgl.nn.tensorflow.conv.ChebConv", "generated/dgl.nn.tensorflow.conv.GATConv", "generated/dgl.nn.tensorflow.conv.GINConv", "generated/dgl.nn.tensorflow.conv.GraphConv", "generated/dgl.nn.tensorflow.conv.RelGraphConv", "generated/dgl.nn.tensorflow.conv.SAGEConv", "generated/dgl.nn.tensorflow.conv.SGConv", "generated/dgl.nn.tensorflow.glob.AvgPooling", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv", "generated/dgl.nn.tensorflow.glob.MaxPooling", "generated/dgl.nn.tensorflow.glob.SortPooling", "generated/dgl.nn.tensorflow.glob.SumPooling", "generated/dgl.node_homophily", "generated/dgl.node_label_informativeness", "generated/dgl.node_subgraph", "generated/dgl.node_type_subgraph", "generated/dgl.norm_by_dst", "generated/dgl.ops.copy_e_max", "generated/dgl.ops.copy_e_mean", "generated/dgl.ops.copy_e_min", "generated/dgl.ops.copy_e_sum", "generated/dgl.ops.copy_u", "generated/dgl.ops.copy_u_max", "generated/dgl.ops.copy_u_mean", "generated/dgl.ops.copy_u_min", "generated/dgl.ops.copy_u_sum", "generated/dgl.ops.copy_v", "generated/dgl.ops.e_add_u", "generated/dgl.ops.e_add_v", "generated/dgl.ops.e_div_u", "generated/dgl.ops.e_div_v", "generated/dgl.ops.e_dot_u", "generated/dgl.ops.e_dot_v", "generated/dgl.ops.e_mul_u", "generated/dgl.ops.e_mul_v", "generated/dgl.ops.e_sub_u", "generated/dgl.ops.e_sub_v", "generated/dgl.ops.gather_mm", "generated/dgl.ops.gsddmm", "generated/dgl.ops.gspmm", "generated/dgl.ops.segment_mm", "generated/dgl.ops.segment_reduce", "generated/dgl.ops.u_add_e", "generated/dgl.ops.u_add_e_max", "generated/dgl.ops.u_add_e_mean", "generated/dgl.ops.u_add_e_min", "generated/dgl.ops.u_add_e_sum", "generated/dgl.ops.u_add_v", "generated/dgl.ops.u_div_e", "generated/dgl.ops.u_div_e_max", "generated/dgl.ops.u_div_e_mean", "generated/dgl.ops.u_div_e_min", "generated/dgl.ops.u_div_e_sum", "generated/dgl.ops.u_div_v", "generated/dgl.ops.u_dot_e", "generated/dgl.ops.u_dot_v", "generated/dgl.ops.u_mul_e", "generated/dgl.ops.u_mul_e_max", "generated/dgl.ops.u_mul_e_mean", "generated/dgl.ops.u_mul_e_min", "generated/dgl.ops.u_mul_e_sum", "generated/dgl.ops.u_mul_v", "generated/dgl.ops.u_sub_e", "generated/dgl.ops.u_sub_e_max", "generated/dgl.ops.u_sub_e_mean", "generated/dgl.ops.u_sub_e_min", "generated/dgl.ops.u_sub_e_sum", "generated/dgl.ops.u_sub_v", "generated/dgl.ops.v_add_e", "generated/dgl.ops.v_add_u", "generated/dgl.ops.v_div_e", "generated/dgl.ops.v_div_u", "generated/dgl.ops.v_dot_e", "generated/dgl.ops.v_dot_u", "generated/dgl.ops.v_mul_e", "generated/dgl.ops.v_mul_u", "generated/dgl.ops.v_sub_e", "generated/dgl.ops.v_sub_u", "generated/dgl.out_subgraph", "generated/dgl.partition_graph_with_halo", "generated/dgl.prop_edges", "generated/dgl.prop_edges_dfs", "generated/dgl.prop_nodes", "generated/dgl.prop_nodes_bfs", "generated/dgl.prop_nodes_topo", "generated/dgl.radius_graph", "generated/dgl.rand_bipartite", "generated/dgl.rand_graph", "generated/dgl.random_walk_pe", "generated/dgl.readout_edges", "generated/dgl.readout_nodes", "generated/dgl.remove_edges", "generated/dgl.remove_nodes", "generated/dgl.remove_self_loop", "generated/dgl.reorder_graph", "generated/dgl.reverse", "generated/dgl.sampling.PinSAGESampler", "generated/dgl.sampling.global_uniform_negative_sampling", "generated/dgl.sampling.node2vec_random_walk", "generated/dgl.sampling.pack_traces", "generated/dgl.sampling.random_walk", "generated/dgl.sampling.sample_labors", "generated/dgl.sampling.sample_neighbors", "generated/dgl.sampling.sample_neighbors_biased", "generated/dgl.sampling.select_topk", "generated/dgl.save_graphs", "generated/dgl.seed", "generated/dgl.segmented_knn_graph", "generated/dgl.shortest_dist", "generated/dgl.slice_batch", "generated/dgl.softmax_edges", "generated/dgl.softmax_nodes", "generated/dgl.sort_csc_by_tag", "generated/dgl.sort_csr_by_tag", "generated/dgl.sparse.SparseMatrix.T", "generated/dgl.sparse.SparseMatrix.coalesce", "generated/dgl.sparse.SparseMatrix.col", "generated/dgl.sparse.SparseMatrix.coo", "generated/dgl.sparse.SparseMatrix.cpu", "generated/dgl.sparse.SparseMatrix.csc", "generated/dgl.sparse.SparseMatrix.csr", "generated/dgl.sparse.SparseMatrix.cuda", "generated/dgl.sparse.SparseMatrix.device", "generated/dgl.sparse.SparseMatrix.double", "generated/dgl.sparse.SparseMatrix.dtype", "generated/dgl.sparse.SparseMatrix.float", "generated/dgl.sparse.SparseMatrix.has_duplicate", "generated/dgl.sparse.SparseMatrix.indices", "generated/dgl.sparse.SparseMatrix.int", "generated/dgl.sparse.SparseMatrix.long", "generated/dgl.sparse.SparseMatrix.neg", "generated/dgl.sparse.SparseMatrix.nnz", "generated/dgl.sparse.SparseMatrix.reduce", "generated/dgl.sparse.SparseMatrix.row", "generated/dgl.sparse.SparseMatrix.shape", "generated/dgl.sparse.SparseMatrix.smax", "generated/dgl.sparse.SparseMatrix.smean", "generated/dgl.sparse.SparseMatrix.smin", "generated/dgl.sparse.SparseMatrix.softmax", "generated/dgl.sparse.SparseMatrix.sum", "generated/dgl.sparse.SparseMatrix.t", "generated/dgl.sparse.SparseMatrix.to", "generated/dgl.sparse.SparseMatrix.to_dense", "generated/dgl.sparse.SparseMatrix.transpose", "generated/dgl.sparse.SparseMatrix.val", "generated/dgl.sparse.add", "generated/dgl.sparse.bsddmm", "generated/dgl.sparse.bspmm", "generated/dgl.sparse.diag", "generated/dgl.sparse.div", "generated/dgl.sparse.from_coo", "generated/dgl.sparse.from_csc", "generated/dgl.sparse.from_csr", "generated/dgl.sparse.identity", "generated/dgl.sparse.matmul", "generated/dgl.sparse.mul", "generated/dgl.sparse.power", "generated/dgl.sparse.sddmm", "generated/dgl.sparse.softmax", "generated/dgl.sparse.sp_add_v", "generated/dgl.sparse.sp_broadcast_v", "generated/dgl.sparse.sp_div_v", "generated/dgl.sparse.sp_mul_v", "generated/dgl.sparse.sp_sub_v", "generated/dgl.sparse.spmatrix", "generated/dgl.sparse.spmm", "generated/dgl.sparse.spspmm", "generated/dgl.sparse.sub", "generated/dgl.sparse.val_like", "generated/dgl.sum_edges", "generated/dgl.sum_nodes", "generated/dgl.svd_pe", "generated/dgl.to_bidirected", "generated/dgl.to_block", "generated/dgl.to_cugraph", "generated/dgl.to_double", "generated/dgl.to_float", "generated/dgl.to_half", "generated/dgl.to_heterogeneous", "generated/dgl.to_homogeneous", "generated/dgl.to_networkx", "generated/dgl.to_simple", "generated/dgl.to_simple_graph", "generated/dgl.topk_edges", "generated/dgl.topk_nodes", "generated/dgl.topological_nodes_generator", "generated/dgl.transforms.AddEdge", "generated/dgl.transforms.AddMetaPaths", "generated/dgl.transforms.AddReverse", "generated/dgl.transforms.AddSelfLoop", "generated/dgl.transforms.BaseTransform", "generated/dgl.transforms.Compose", "generated/dgl.transforms.DropEdge", "generated/dgl.transforms.DropNode", "generated/dgl.transforms.FeatMask", "generated/dgl.transforms.GCNNorm", "generated/dgl.transforms.GDC", "generated/dgl.transforms.HeatKernel", "generated/dgl.transforms.KHopGraph", "generated/dgl.transforms.LapPE", "generated/dgl.transforms.LineGraph", "generated/dgl.transforms.NodeShuffle", "generated/dgl.transforms.PPR", "generated/dgl.transforms.RandomWalkPE", "generated/dgl.transforms.RemoveSelfLoop", "generated/dgl.transforms.RowFeatNormalizer", "generated/dgl.transforms.SIGNDiffusion", "generated/dgl.transforms.SVDPE", "generated/dgl.transforms.ToLevi", "generated/dgl.transforms.ToSimple", "generated/dgl.udf.EdgeBatch.batch_size", "generated/dgl.udf.EdgeBatch.data", "generated/dgl.udf.EdgeBatch.dst", "generated/dgl.udf.EdgeBatch.edges", "generated/dgl.udf.EdgeBatch.src", "generated/dgl.udf.NodeBatch.batch_size", "generated/dgl.udf.NodeBatch.data", "generated/dgl.udf.NodeBatch.mailbox", "generated/dgl.udf.NodeBatch.nodes", "generated/dgl.unbatch", "generated/dgl.use_libxsmm", "guide/data", "guide/data-dataset", "guide/data-download", "guide/data-loadcsv", "guide/data-loadogb", "guide/data-process", "guide/data-savenload", "guide/distributed", "guide/distributed-apis", "guide/distributed-hetero", "guide/distributed-partition", "guide/distributed-preprocessing", "guide/distributed-tools", "guide/graph", "guide/graph-basic", "guide/graph-external", "guide/graph-feature", "guide/graph-gpu", "guide/graph-graphs-nodes-edges", "guide/graph-heterogeneous", "guide/index", "guide/message", "guide/message-api", "guide/message-efficient", "guide/message-heterograph", "guide/message-part", "guide/minibatch", "guide/minibatch-custom-sampler", "guide/minibatch-edge", "guide/minibatch-gpu-sampling", "guide/minibatch-inference", "guide/minibatch-link", "guide/minibatch-nn", "guide/minibatch-node", "guide/minibatch-parallelism", "guide/minibatch-sparse", "guide/mixed_precision", "guide/nn", "guide/nn-construction", "guide/nn-forward", "guide/nn-heterograph", "guide/training", "guide/training-edge", "guide/training-eweight", "guide/training-graph", "guide/training-link", "guide/training-node", "guide_cn/data", "guide_cn/data-dataset", "guide_cn/data-download", "guide_cn/data-loadogb", "guide_cn/data-process", "guide_cn/data-savenload", "guide_cn/distributed", "guide_cn/distributed-apis", "guide_cn/distributed-preprocessing", "guide_cn/distributed-tools", "guide_cn/graph", "guide_cn/graph-basic", "guide_cn/graph-external", "guide_cn/graph-feature", "guide_cn/graph-gpu", "guide_cn/graph-graphs-nodes-edges", "guide_cn/graph-heterogeneous", "guide_cn/index", "guide_cn/message", "guide_cn/message-api", "guide_cn/message-efficient", "guide_cn/message-heterograph", "guide_cn/message-part", "guide_cn/minibatch", "guide_cn/minibatch-custom-sampler", "guide_cn/minibatch-edge", "guide_cn/minibatch-inference", "guide_cn/minibatch-link", "guide_cn/minibatch-nn", "guide_cn/minibatch-node", "guide_cn/nn", "guide_cn/nn-construction", "guide_cn/nn-forward", "guide_cn/nn-heterograph", "guide_cn/training", "guide_cn/training-edge", "guide_cn/training-eweight", "guide_cn/training-graph", "guide_cn/training-link", "guide_cn/training-node", "guide_ko/data", "guide_ko/data-dataset", "guide_ko/data-download", "guide_ko/data-loadogb", "guide_ko/data-process", "guide_ko/data-savenload", "guide_ko/distributed", "guide_ko/distributed-apis", "guide_ko/distributed-hetero", "guide_ko/distributed-preprocessing", "guide_ko/distributed-tools", "guide_ko/graph", "guide_ko/graph-basic", "guide_ko/graph-external", "guide_ko/graph-feature", "guide_ko/graph-gpu", "guide_ko/graph-graphs-nodes-edges", "guide_ko/graph-heterogeneous", "guide_ko/index", "guide_ko/message", "guide_ko/message-api", "guide_ko/message-edge", "guide_ko/message-efficient", "guide_ko/message-heterograph", "guide_ko/message-part", "guide_ko/minibatch", "guide_ko/minibatch-custom-sampler", "guide_ko/minibatch-edge", "guide_ko/minibatch-gpu-sampling", "guide_ko/minibatch-inference", "guide_ko/minibatch-link", "guide_ko/minibatch-nn", "guide_ko/minibatch-node", "guide_ko/mixed_precision", "guide_ko/nn", "guide_ko/nn-construction", "guide_ko/nn-forward", "guide_ko/nn-heterograph", "guide_ko/training", "guide_ko/training-edge", "guide_ko/training-graph", "guide_ko/training-link", "guide_ko/training-node", "index", "install/index", "notebooks/sparse/gcn", "notebooks/sparse/graph_diffusion", "notebooks/sparse/graph_transformer", "notebooks/sparse/hgnn", "notebooks/sparse/index", "notebooks/sparse/quickstart", "performance", "resources", "sg_execution_times", "stochastic_training/index", "stochastic_training/link_prediction", "stochastic_training/neighbor_sampling_overview", "stochastic_training/node_classification", "stochastic_training/ondisk-dataset", "stochastic_training/ondisk-dataset-specification", "stochastic_training/ondisk_dataset_heterograph", "stochastic_training/ondisk_dataset_homograph", "tutorials/blitz/1_introduction", "tutorials/blitz/2_dglgraph", "tutorials/blitz/3_message_passing", "tutorials/blitz/4_link_predict", "tutorials/blitz/5_graph_classification", "tutorials/blitz/6_load_data", "tutorials/blitz/index", "tutorials/blitz/sg_execution_times", "tutorials/cpu/cpu_best_practises", "tutorials/cpu/index", "tutorials/cpu/sg_execution_times", "tutorials/dist/1_node_classification", "tutorials/dist/2_link_prediction", "tutorials/dist/index", "tutorials/dist/sg_execution_times", "tutorials/models/1_gnn/1_gcn", "tutorials/models/1_gnn/4_rgcn", "tutorials/models/1_gnn/6_line_graph", "tutorials/models/1_gnn/9_gat", "tutorials/models/1_gnn/index", "tutorials/models/1_gnn/sg_execution_times", "tutorials/models/2_small_graph/3_tree-lstm", "tutorials/models/2_small_graph/index", "tutorials/models/2_small_graph/sg_execution_times", "tutorials/models/3_generative_model/5_dgmg", "tutorials/models/3_generative_model/index", "tutorials/models/3_generative_model/sg_execution_times", "tutorials/models/4_old_wines/2_capsule", "tutorials/models/4_old_wines/7_transformer", "tutorials/models/4_old_wines/index", "tutorials/models/4_old_wines/sg_execution_times", "tutorials/models/index", "tutorials/models/sg_execution_times", "tutorials/multi/1_graph_classification", "tutorials/multi/2_node_classification", "tutorials/multi/index", "tutorials/multi/sg_execution_times"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/python/dgl.rst", "api/python/dgl.DGLGraph.rst", "api/python/dgl.data.rst", "api/python/dgl.dataloading.rst", "api/python/dgl.distributed.rst", "api/python/dgl.function.rst", "api/python/dgl.geometry.rst", "api/python/dgl.graphbolt.rst", "api/python/dgl.multiprocessing.rst", "api/python/dgl.ops.rst", "api/python/dgl.optim.rst", "api/python/dgl.sampling.rst", "api/python/dgl.sparse_v0.rst", "api/python/index.rst", "api/python/knn_benchmark.rst", "api/python/nn-mxnet.rst", "api/python/nn-pytorch.rst", "api/python/nn-tensorflow.rst", "api/python/nn.functional.rst", "api/python/transforms.rst", "api/python/udf.rst", "contribute.rst", "developer/ffi.rst", "env_var.rst", "faq.rst", "features/dataset.rst", "generated/dgl.DGLGraph.__getitem__.rst", "generated/dgl.DGLGraph.add_edges.rst", "generated/dgl.DGLGraph.add_nodes.rst", "generated/dgl.DGLGraph.add_self_loop.rst", "generated/dgl.DGLGraph.adj.rst", "generated/dgl.DGLGraph.adj_external.rst", "generated/dgl.DGLGraph.adj_tensors.rst", "generated/dgl.DGLGraph.adjacency_matrix.rst", "generated/dgl.DGLGraph.apply_edges.rst", "generated/dgl.DGLGraph.apply_nodes.rst", "generated/dgl.DGLGraph.batch_num_edges.rst", "generated/dgl.DGLGraph.batch_num_nodes.rst", "generated/dgl.DGLGraph.batch_size.rst", "generated/dgl.DGLGraph.canonical_etypes.rst", "generated/dgl.DGLGraph.cpu.rst", "generated/dgl.DGLGraph.create_formats_.rst", "generated/dgl.DGLGraph.device.rst", "generated/dgl.DGLGraph.dstdata.rst", "generated/dgl.DGLGraph.dstnodes.rst", "generated/dgl.DGLGraph.dsttypes.rst", "generated/dgl.DGLGraph.edata.rst", "generated/dgl.DGLGraph.edge_attr_schemes.rst", "generated/dgl.DGLGraph.edge_ids.rst", "generated/dgl.DGLGraph.edge_subgraph.rst", "generated/dgl.DGLGraph.edge_type_subgraph.rst", "generated/dgl.DGLGraph.edges.rst", "generated/dgl.DGLGraph.etypes.rst", "generated/dgl.DGLGraph.filter_edges.rst", "generated/dgl.DGLGraph.filter_nodes.rst", "generated/dgl.DGLGraph.find_edges.rst", "generated/dgl.DGLGraph.formats.rst", "generated/dgl.DGLGraph.has_edges_between.rst", "generated/dgl.DGLGraph.has_nodes.rst", "generated/dgl.DGLGraph.idtype.rst", "generated/dgl.DGLGraph.in_degrees.rst", "generated/dgl.DGLGraph.in_edges.rst", "generated/dgl.DGLGraph.inc.rst", "generated/dgl.DGLGraph.incidence_matrix.rst", "generated/dgl.DGLGraph.int.rst", "generated/dgl.DGLGraph.is_homogeneous.rst", "generated/dgl.DGLGraph.is_multigraph.rst", "generated/dgl.DGLGraph.is_pinned.rst", "generated/dgl.DGLGraph.is_unibipartite.rst", "generated/dgl.DGLGraph.line_graph.rst", "generated/dgl.DGLGraph.local_scope.rst", "generated/dgl.DGLGraph.long.rst", "generated/dgl.DGLGraph.metagraph.rst", "generated/dgl.DGLGraph.multi_update_all.rst", "generated/dgl.DGLGraph.ndata.rst", "generated/dgl.DGLGraph.node_attr_schemes.rst", "generated/dgl.DGLGraph.node_type_subgraph.rst", "generated/dgl.DGLGraph.nodes.rst", "generated/dgl.DGLGraph.ntypes.rst", "generated/dgl.DGLGraph.num_dst_nodes.rst", "generated/dgl.DGLGraph.num_edges.rst", "generated/dgl.DGLGraph.num_nodes.rst", "generated/dgl.DGLGraph.num_src_nodes.rst", "generated/dgl.DGLGraph.number_of_dst_nodes.rst", "generated/dgl.DGLGraph.number_of_edges.rst", "generated/dgl.DGLGraph.number_of_nodes.rst", "generated/dgl.DGLGraph.number_of_src_nodes.rst", "generated/dgl.DGLGraph.out_degrees.rst", "generated/dgl.DGLGraph.out_edges.rst", "generated/dgl.DGLGraph.pin_memory_.rst", "generated/dgl.DGLGraph.predecessors.rst", "generated/dgl.DGLGraph.prop_edges.rst", "generated/dgl.DGLGraph.prop_nodes.rst", "generated/dgl.DGLGraph.pull.rst", "generated/dgl.DGLGraph.push.rst", "generated/dgl.DGLGraph.remove_edges.rst", "generated/dgl.DGLGraph.remove_nodes.rst", "generated/dgl.DGLGraph.remove_self_loop.rst", "generated/dgl.DGLGraph.reorder_graph.rst", "generated/dgl.DGLGraph.reverse.rst", "generated/dgl.DGLGraph.send_and_recv.rst", "generated/dgl.DGLGraph.set_batch_num_edges.rst", "generated/dgl.DGLGraph.set_batch_num_nodes.rst", "generated/dgl.DGLGraph.srcdata.rst", "generated/dgl.DGLGraph.srcnodes.rst", "generated/dgl.DGLGraph.srctypes.rst", "generated/dgl.DGLGraph.subgraph.rst", "generated/dgl.DGLGraph.successors.rst", "generated/dgl.DGLGraph.to.rst", "generated/dgl.DGLGraph.to_canonical_etype.rst", "generated/dgl.DGLGraph.to_cugraph.rst", "generated/dgl.DGLGraph.to_simple.rst", "generated/dgl.DGLGraph.unpin_memory_.rst", "generated/dgl.DGLGraph.update_all.rst", "generated/dgl.add_edges.rst", "generated/dgl.add_nodes.rst", "generated/dgl.add_reverse_edges.rst", "generated/dgl.add_self_loop.rst", "generated/dgl.adj_product_graph.rst", "generated/dgl.adj_sum_graph.rst", "generated/dgl.adjusted_homophily.rst", "generated/dgl.apply_each.rst", "generated/dgl.batch.rst", "generated/dgl.bfs_edges_generator.rst", "generated/dgl.bfs_nodes_generator.rst", "generated/dgl.bipartite_from_networkx.rst", "generated/dgl.bipartite_from_scipy.rst", "generated/dgl.block_to_graph.rst", "generated/dgl.broadcast_edges.rst", "generated/dgl.broadcast_nodes.rst", "generated/dgl.compact_graphs.rst", "generated/dgl.create_block.rst", "generated/dgl.data.AIFBDataset.rst", "generated/dgl.data.AMDataset.rst", "generated/dgl.data.ActorDataset.rst", "generated/dgl.data.AmazonCoBuyComputerDataset.rst", "generated/dgl.data.AmazonCoBuyPhotoDataset.rst", "generated/dgl.data.AmazonRatingsDataset.rst", "generated/dgl.data.AsGraphPredDataset.rst", "generated/dgl.data.AsLinkPredDataset.rst", "generated/dgl.data.AsNodePredDataset.rst", "generated/dgl.data.BA2MotifDataset.rst", "generated/dgl.data.BACommunityDataset.rst", "generated/dgl.data.BAShapeDataset.rst", "generated/dgl.data.BGSDataset.rst", "generated/dgl.data.BitcoinOTCDataset.rst", "generated/dgl.data.CIFAR10SuperPixelDataset.rst", "generated/dgl.data.CLUSTERDataset.rst", "generated/dgl.data.CSVDataset.rst", "generated/dgl.data.ChameleonDataset.rst", "generated/dgl.data.CiteseerGraphDataset.rst", "generated/dgl.data.CoauthorCSDataset.rst", "generated/dgl.data.CoauthorPhysicsDataset.rst", "generated/dgl.data.CoraFullDataset.rst", "generated/dgl.data.CoraGraphDataset.rst", "generated/dgl.data.CornellDataset.rst", "generated/dgl.data.DGLDataset.rst", "generated/dgl.data.FB15k237Dataset.rst", "generated/dgl.data.FB15kDataset.rst", "generated/dgl.data.FakeNewsDataset.rst", "generated/dgl.data.FlickrDataset.rst", "generated/dgl.data.FraudAmazonDataset.rst", "generated/dgl.data.FraudDataset.rst", "generated/dgl.data.FraudYelpDataset.rst", "generated/dgl.data.GDELTDataset.rst", "generated/dgl.data.GINDataset.rst", "generated/dgl.data.ICEWS18Dataset.rst", "generated/dgl.data.KarateClubDataset.rst", "generated/dgl.data.LegacyTUDataset.rst", "generated/dgl.data.MNISTSuperPixelDataset.rst", "generated/dgl.data.MUTAGDataset.rst", "generated/dgl.data.MinesweeperDataset.rst", "generated/dgl.data.MiniGCDataset.rst", "generated/dgl.data.MovieLensDataset.rst", "generated/dgl.data.PATTERNDataset.rst", "generated/dgl.data.PPIDataset.rst", "generated/dgl.data.PubmedGraphDataset.rst", "generated/dgl.data.QM7bDataset.rst", "generated/dgl.data.QM9Dataset.rst", "generated/dgl.data.QM9EdgeDataset.rst", "generated/dgl.data.QuestionsDataset.rst", "generated/dgl.data.RedditDataset.rst", "generated/dgl.data.RomanEmpireDataset.rst", "generated/dgl.data.SBMMixtureDataset.rst", "generated/dgl.data.SSTDataset.rst", "generated/dgl.data.SquirrelDataset.rst", "generated/dgl.data.TUDataset.rst", "generated/dgl.data.TexasDataset.rst", "generated/dgl.data.TolokersDataset.rst", "generated/dgl.data.TreeCycleDataset.rst", "generated/dgl.data.TreeGridDataset.rst", "generated/dgl.data.WN18Dataset.rst", "generated/dgl.data.WikiCSDataset.rst", "generated/dgl.data.WisconsinDataset.rst", "generated/dgl.data.YelpDataset.rst", "generated/dgl.data.ZINCDataset.rst", "generated/dgl.data.utils.Subset.rst", "generated/dgl.data.utils.add_node_property_split.rst", "generated/dgl.data.utils.add_nodepred_split.rst", "generated/dgl.data.utils.check_sha1.rst", "generated/dgl.data.utils.download.rst", "generated/dgl.data.utils.extract_archive.rst", "generated/dgl.data.utils.get_download_dir.rst", "generated/dgl.data.utils.load_info.rst", "generated/dgl.data.utils.load_labels.rst", "generated/dgl.data.utils.mask_nodes_by_property.rst", "generated/dgl.data.utils.save_info.rst", "generated/dgl.data.utils.split_dataset.rst", "generated/dgl.dataloading.BlockSampler.rst", "generated/dgl.dataloading.ClusterGCNSampler.rst", "generated/dgl.dataloading.DataLoader.rst", "generated/dgl.dataloading.DistEdgeDataLoader.rst", "generated/dgl.dataloading.DistNodeDataLoader.rst", "generated/dgl.dataloading.GraphDataLoader.rst", "generated/dgl.dataloading.LaborSampler.rst", "generated/dgl.dataloading.MultiLayerFullNeighborSampler.rst", "generated/dgl.dataloading.NeighborSampler.rst", "generated/dgl.dataloading.SAINTSampler.rst", "generated/dgl.dataloading.Sampler.rst", "generated/dgl.dataloading.ShaDowKHopSampler.rst", "generated/dgl.dataloading.as_edge_prediction_sampler.rst", "generated/dgl.dataloading.base.LazyFeature.rst", "generated/dgl.dataloading.base.set_dst_lazy_features.rst", "generated/dgl.dataloading.base.set_edge_lazy_features.rst", "generated/dgl.dataloading.base.set_node_lazy_features.rst", "generated/dgl.dataloading.base.set_src_lazy_features.rst", "generated/dgl.dataloading.negative_sampler.GlobalUniform.rst", "generated/dgl.dataloading.negative_sampler.PerSourceUniform.rst", "generated/dgl.dataloading.negative_sampler.Uniform.rst", "generated/dgl.dfs_edges_generator.rst", "generated/dgl.dfs_labeled_edges_generator.rst", "generated/dgl.distributed.edge_split.rst", "generated/dgl.distributed.find_edges.rst", "generated/dgl.distributed.in_subgraph.rst", "generated/dgl.distributed.initialize.rst", "generated/dgl.distributed.load_partition.rst", "generated/dgl.distributed.load_partition_book.rst", "generated/dgl.distributed.load_partition_feats.rst", "generated/dgl.distributed.node_split.rst", "generated/dgl.distributed.partition_graph.rst", "generated/dgl.distributed.sample_etype_neighbors.rst", "generated/dgl.distributed.sample_neighbors.rst", "generated/dgl.double_radius_node_labeling.rst", "generated/dgl.edge_homophily.rst", "generated/dgl.edge_label_informativeness.rst", "generated/dgl.edge_subgraph.rst", "generated/dgl.edge_type_subgraph.rst", "generated/dgl.from_cugraph.rst", "generated/dgl.from_networkx.rst", "generated/dgl.from_scipy.rst", "generated/dgl.function.copy_e.rst", "generated/dgl.function.copy_u.rst", "generated/dgl.function.e_add_u.rst", "generated/dgl.function.e_add_v.rst", "generated/dgl.function.e_div_u.rst", "generated/dgl.function.e_div_v.rst", "generated/dgl.function.e_dot_u.rst", "generated/dgl.function.e_dot_v.rst", "generated/dgl.function.e_mul_u.rst", "generated/dgl.function.e_mul_v.rst", "generated/dgl.function.e_sub_u.rst", "generated/dgl.function.e_sub_v.rst", "generated/dgl.function.max.rst", "generated/dgl.function.mean.rst", "generated/dgl.function.min.rst", "generated/dgl.function.sum.rst", "generated/dgl.function.u_add_e.rst", "generated/dgl.function.u_add_v.rst", "generated/dgl.function.u_div_e.rst", "generated/dgl.function.u_div_v.rst", "generated/dgl.function.u_dot_e.rst", "generated/dgl.function.u_dot_v.rst", "generated/dgl.function.u_mul_e.rst", "generated/dgl.function.u_mul_v.rst", "generated/dgl.function.u_sub_e.rst", "generated/dgl.function.u_sub_v.rst", "generated/dgl.function.v_add_e.rst", "generated/dgl.function.v_add_u.rst", "generated/dgl.function.v_div_e.rst", "generated/dgl.function.v_div_u.rst", "generated/dgl.function.v_dot_e.rst", "generated/dgl.function.v_dot_u.rst", "generated/dgl.function.v_mul_e.rst", "generated/dgl.function.v_mul_u.rst", "generated/dgl.function.v_sub_e.rst", "generated/dgl.function.v_sub_u.rst", "generated/dgl.graph.rst", "generated/dgl.graphbolt.BasicFeatureStore.rst", "generated/dgl.graphbolt.BuiltinDataset.rst", "generated/dgl.graphbolt.CopyTo.rst", "generated/dgl.graphbolt.DataLoader.rst", "generated/dgl.graphbolt.Dataset.rst", "generated/dgl.graphbolt.DistributedItemSampler.rst", "generated/dgl.graphbolt.Feature.rst", "generated/dgl.graphbolt.FeatureFetcher.rst", "generated/dgl.graphbolt.FeatureStore.rst", "generated/dgl.graphbolt.FusedCSCSamplingGraph.rst", "generated/dgl.graphbolt.GPUCachedFeature.rst", "generated/dgl.graphbolt.InSubgraphSampler.rst", "generated/dgl.graphbolt.ItemSampler.rst", "generated/dgl.graphbolt.ItemSet.rst", "generated/dgl.graphbolt.ItemSetDict.rst", "generated/dgl.graphbolt.LayerNeighborSampler.rst", "generated/dgl.graphbolt.LegacyDataset.rst", "generated/dgl.graphbolt.MiniBatch.rst", "generated/dgl.graphbolt.MiniBatchTransformer.rst", "generated/dgl.graphbolt.NegativeSampler.rst", "generated/dgl.graphbolt.NeighborSampler.rst", "generated/dgl.graphbolt.OnDiskDataset.rst", "generated/dgl.graphbolt.SampledSubgraph.rst", "generated/dgl.graphbolt.SampledSubgraphImpl.rst", "generated/dgl.graphbolt.SamplingGraph.rst", "generated/dgl.graphbolt.SubgraphSampler.rst", "generated/dgl.graphbolt.Task.rst", "generated/dgl.graphbolt.TorchBasedFeature.rst", "generated/dgl.graphbolt.TorchBasedFeatureStore.rst", "generated/dgl.graphbolt.UniformNegativeSampler.rst", "generated/dgl.graphbolt.add_reverse_edges.rst", "generated/dgl.graphbolt.compact_csc_format.rst", "generated/dgl.graphbolt.etype_str_to_tuple.rst", "generated/dgl.graphbolt.etype_tuple_to_str.rst", "generated/dgl.graphbolt.exclude_seed_edges.rst", "generated/dgl.graphbolt.from_dglgraph.rst", "generated/dgl.graphbolt.fused_csc_sampling_graph.rst", "generated/dgl.graphbolt.isin.rst", "generated/dgl.graphbolt.load_from_shared_memory.rst", "generated/dgl.graphbolt.seed.rst", "generated/dgl.graphbolt.unique_and_compact.rst", "generated/dgl.graphbolt.unique_and_compact_csc_formats.rst", "generated/dgl.heterograph.rst", "generated/dgl.in_subgraph.rst", "generated/dgl.is_libxsmm_enabled.rst", "generated/dgl.khop_adj.rst", "generated/dgl.khop_graph.rst", "generated/dgl.khop_in_subgraph.rst", "generated/dgl.khop_out_subgraph.rst", "generated/dgl.knn_graph.rst", "generated/dgl.lap_pe.rst", "generated/dgl.laplacian_lambda_max.rst", "generated/dgl.line_graph.rst", "generated/dgl.linkx_homophily.rst", "generated/dgl.load_graphs.rst", "generated/dgl.max_edges.rst", "generated/dgl.max_nodes.rst", "generated/dgl.mean_edges.rst", "generated/dgl.mean_nodes.rst", "generated/dgl.merge.rst", "generated/dgl.metapath_reachable_graph.rst", "generated/dgl.metis_partition.rst", "generated/dgl.metis_partition_assignment.rst", "generated/dgl.multiprocessing.pytorch.call_once_and_share.rst", "generated/dgl.multiprocessing.pytorch.shared_tensor.rst", "generated/dgl.nn.functional.edge_softmax.rst", "generated/dgl.nn.mxnet.HeteroGraphConv.rst", "generated/dgl.nn.mxnet.conv.AGNNConv.rst", "generated/dgl.nn.mxnet.conv.APPNPConv.rst", "generated/dgl.nn.mxnet.conv.ChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseGraphConv.rst", "generated/dgl.nn.mxnet.conv.DenseSAGEConv.rst", "generated/dgl.nn.mxnet.conv.EdgeConv.rst", "generated/dgl.nn.mxnet.conv.GATConv.rst", "generated/dgl.nn.mxnet.conv.GINConv.rst", "generated/dgl.nn.mxnet.conv.GMMConv.rst", "generated/dgl.nn.mxnet.conv.GatedGraphConv.rst", "generated/dgl.nn.mxnet.conv.GraphConv.rst", "generated/dgl.nn.mxnet.conv.NNConv.rst", "generated/dgl.nn.mxnet.conv.RelGraphConv.rst", "generated/dgl.nn.mxnet.conv.SAGEConv.rst", "generated/dgl.nn.mxnet.conv.SGConv.rst", "generated/dgl.nn.mxnet.conv.TAGConv.rst", "generated/dgl.nn.mxnet.glob.AvgPooling.rst", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.mxnet.glob.MaxPooling.rst", "generated/dgl.nn.mxnet.glob.Set2Set.rst", "generated/dgl.nn.mxnet.glob.SortPooling.rst", "generated/dgl.nn.mxnet.glob.SumPooling.rst", "generated/dgl.nn.mxnet.utils.Sequential.rst", "generated/dgl.nn.pytorch.DeepWalk.rst", "generated/dgl.nn.pytorch.HeteroEmbedding.rst", "generated/dgl.nn.pytorch.HeteroGraphConv.rst", "generated/dgl.nn.pytorch.HeteroLinear.rst", "generated/dgl.nn.pytorch.MetaPath2Vec.rst", "generated/dgl.nn.pytorch.TypedLinear.rst", "generated/dgl.nn.pytorch.conv.AGNNConv.rst", "generated/dgl.nn.pytorch.conv.APPNPConv.rst", "generated/dgl.nn.pytorch.conv.AtomicConv.rst", "generated/dgl.nn.pytorch.conv.CFConv.rst", "generated/dgl.nn.pytorch.conv.ChebConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphGATConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DGNConv.rst", "generated/dgl.nn.pytorch.conv.DenseChebConv.rst", "generated/dgl.nn.pytorch.conv.DenseGraphConv.rst", "generated/dgl.nn.pytorch.conv.DenseSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DotGatConv.rst", "generated/dgl.nn.pytorch.conv.EGATConv.rst", "generated/dgl.nn.pytorch.conv.EGNNConv.rst", "generated/dgl.nn.pytorch.conv.EdgeConv.rst", "generated/dgl.nn.pytorch.conv.EdgeGATConv.rst", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm.rst", "generated/dgl.nn.pytorch.conv.GATConv.rst", "generated/dgl.nn.pytorch.conv.GATv2Conv.rst", "generated/dgl.nn.pytorch.conv.GCN2Conv.rst", "generated/dgl.nn.pytorch.conv.GINConv.rst", "generated/dgl.nn.pytorch.conv.GINEConv.rst", "generated/dgl.nn.pytorch.conv.GMMConv.rst", "generated/dgl.nn.pytorch.conv.GatedGCNConv.rst", "generated/dgl.nn.pytorch.conv.GatedGraphConv.rst", "generated/dgl.nn.pytorch.conv.GraphConv.rst", "generated/dgl.nn.pytorch.conv.GroupRevRes.rst", "generated/dgl.nn.pytorch.conv.HGTConv.rst", "generated/dgl.nn.pytorch.conv.NNConv.rst", "generated/dgl.nn.pytorch.conv.PNAConv.rst", "generated/dgl.nn.pytorch.conv.RelGraphConv.rst", "generated/dgl.nn.pytorch.conv.SAGEConv.rst", "generated/dgl.nn.pytorch.conv.SGConv.rst", "generated/dgl.nn.pytorch.conv.TAGConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.rst", "generated/dgl.nn.pytorch.explain.GNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX.rst", "generated/dgl.nn.pytorch.explain.PGExplainer.rst", "generated/dgl.nn.pytorch.explain.SubgraphX.rst", "generated/dgl.nn.pytorch.factory.KNNGraph.rst", "generated/dgl.nn.pytorch.factory.RadiusGraph.rst", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph.rst", "generated/dgl.nn.pytorch.glob.AvgPooling.rst", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.pytorch.glob.MaxPooling.rst", "generated/dgl.nn.pytorch.glob.Set2Set.rst", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder.rst", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder.rst", "generated/dgl.nn.pytorch.glob.SortPooling.rst", "generated/dgl.nn.pytorch.glob.SumPooling.rst", "generated/dgl.nn.pytorch.glob.WeightAndSum.rst", "generated/dgl.nn.pytorch.graph_transformer.BiasedMultiheadAttention.rst", "generated/dgl.nn.pytorch.graph_transformer.DegreeEncoder.rst", "generated/dgl.nn.pytorch.graph_transformer.EGTLayer.rst", "generated/dgl.nn.pytorch.graph_transformer.GraphormerLayer.rst", "generated/dgl.nn.pytorch.graph_transformer.PathEncoder.rst", "generated/dgl.nn.pytorch.graph_transformer.SpatialEncoder.rst", "generated/dgl.nn.pytorch.graph_transformer.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.gt.BiasedMHA.rst", "generated/dgl.nn.pytorch.gt.DegreeEncoder.rst", "generated/dgl.nn.pytorch.gt.EGTLayer.rst", "generated/dgl.nn.pytorch.gt.GraphormerLayer.rst", "generated/dgl.nn.pytorch.gt.LapPosEncoder.rst", "generated/dgl.nn.pytorch.gt.PathEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.link.EdgePredictor.rst", "generated/dgl.nn.pytorch.link.TransE.rst", "generated/dgl.nn.pytorch.link.TransR.rst", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding.rst", "generated/dgl.nn.pytorch.utils.JumpingKnowledge.rst", "generated/dgl.nn.pytorch.utils.LabelPropagation.rst", "generated/dgl.nn.pytorch.utils.Sequential.rst", "generated/dgl.nn.pytorch.utils.WeightBasis.rst", "generated/dgl.nn.tensorflow.conv.APPNPConv.rst", "generated/dgl.nn.tensorflow.conv.ChebConv.rst", "generated/dgl.nn.tensorflow.conv.GATConv.rst", "generated/dgl.nn.tensorflow.conv.GINConv.rst", "generated/dgl.nn.tensorflow.conv.GraphConv.rst", "generated/dgl.nn.tensorflow.conv.RelGraphConv.rst", "generated/dgl.nn.tensorflow.conv.SAGEConv.rst", "generated/dgl.nn.tensorflow.conv.SGConv.rst", "generated/dgl.nn.tensorflow.glob.AvgPooling.rst", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv.rst", "generated/dgl.nn.tensorflow.glob.MaxPooling.rst", "generated/dgl.nn.tensorflow.glob.SortPooling.rst", "generated/dgl.nn.tensorflow.glob.SumPooling.rst", "generated/dgl.node_homophily.rst", "generated/dgl.node_label_informativeness.rst", "generated/dgl.node_subgraph.rst", "generated/dgl.node_type_subgraph.rst", "generated/dgl.norm_by_dst.rst", "generated/dgl.ops.copy_e_max.rst", "generated/dgl.ops.copy_e_mean.rst", "generated/dgl.ops.copy_e_min.rst", "generated/dgl.ops.copy_e_sum.rst", "generated/dgl.ops.copy_u.rst", "generated/dgl.ops.copy_u_max.rst", "generated/dgl.ops.copy_u_mean.rst", "generated/dgl.ops.copy_u_min.rst", "generated/dgl.ops.copy_u_sum.rst", "generated/dgl.ops.copy_v.rst", "generated/dgl.ops.e_add_u.rst", "generated/dgl.ops.e_add_v.rst", "generated/dgl.ops.e_div_u.rst", "generated/dgl.ops.e_div_v.rst", "generated/dgl.ops.e_dot_u.rst", "generated/dgl.ops.e_dot_v.rst", "generated/dgl.ops.e_mul_u.rst", "generated/dgl.ops.e_mul_v.rst", "generated/dgl.ops.e_sub_u.rst", "generated/dgl.ops.e_sub_v.rst", "generated/dgl.ops.gather_mm.rst", "generated/dgl.ops.gsddmm.rst", "generated/dgl.ops.gspmm.rst", "generated/dgl.ops.segment_mm.rst", "generated/dgl.ops.segment_reduce.rst", "generated/dgl.ops.u_add_e.rst", "generated/dgl.ops.u_add_e_max.rst", "generated/dgl.ops.u_add_e_mean.rst", "generated/dgl.ops.u_add_e_min.rst", "generated/dgl.ops.u_add_e_sum.rst", "generated/dgl.ops.u_add_v.rst", "generated/dgl.ops.u_div_e.rst", "generated/dgl.ops.u_div_e_max.rst", "generated/dgl.ops.u_div_e_mean.rst", "generated/dgl.ops.u_div_e_min.rst", "generated/dgl.ops.u_div_e_sum.rst", "generated/dgl.ops.u_div_v.rst", "generated/dgl.ops.u_dot_e.rst", "generated/dgl.ops.u_dot_v.rst", "generated/dgl.ops.u_mul_e.rst", "generated/dgl.ops.u_mul_e_max.rst", "generated/dgl.ops.u_mul_e_mean.rst", "generated/dgl.ops.u_mul_e_min.rst", "generated/dgl.ops.u_mul_e_sum.rst", "generated/dgl.ops.u_mul_v.rst", "generated/dgl.ops.u_sub_e.rst", "generated/dgl.ops.u_sub_e_max.rst", "generated/dgl.ops.u_sub_e_mean.rst", "generated/dgl.ops.u_sub_e_min.rst", "generated/dgl.ops.u_sub_e_sum.rst", "generated/dgl.ops.u_sub_v.rst", "generated/dgl.ops.v_add_e.rst", "generated/dgl.ops.v_add_u.rst", "generated/dgl.ops.v_div_e.rst", "generated/dgl.ops.v_div_u.rst", "generated/dgl.ops.v_dot_e.rst", "generated/dgl.ops.v_dot_u.rst", "generated/dgl.ops.v_mul_e.rst", "generated/dgl.ops.v_mul_u.rst", "generated/dgl.ops.v_sub_e.rst", "generated/dgl.ops.v_sub_u.rst", "generated/dgl.out_subgraph.rst", "generated/dgl.partition_graph_with_halo.rst", "generated/dgl.prop_edges.rst", "generated/dgl.prop_edges_dfs.rst", "generated/dgl.prop_nodes.rst", "generated/dgl.prop_nodes_bfs.rst", "generated/dgl.prop_nodes_topo.rst", "generated/dgl.radius_graph.rst", "generated/dgl.rand_bipartite.rst", "generated/dgl.rand_graph.rst", "generated/dgl.random_walk_pe.rst", "generated/dgl.readout_edges.rst", "generated/dgl.readout_nodes.rst", "generated/dgl.remove_edges.rst", "generated/dgl.remove_nodes.rst", "generated/dgl.remove_self_loop.rst", "generated/dgl.reorder_graph.rst", "generated/dgl.reverse.rst", "generated/dgl.sampling.PinSAGESampler.rst", "generated/dgl.sampling.global_uniform_negative_sampling.rst", "generated/dgl.sampling.node2vec_random_walk.rst", "generated/dgl.sampling.pack_traces.rst", "generated/dgl.sampling.random_walk.rst", "generated/dgl.sampling.sample_labors.rst", "generated/dgl.sampling.sample_neighbors.rst", "generated/dgl.sampling.sample_neighbors_biased.rst", "generated/dgl.sampling.select_topk.rst", "generated/dgl.save_graphs.rst", "generated/dgl.seed.rst", "generated/dgl.segmented_knn_graph.rst", "generated/dgl.shortest_dist.rst", "generated/dgl.slice_batch.rst", "generated/dgl.softmax_edges.rst", "generated/dgl.softmax_nodes.rst", "generated/dgl.sort_csc_by_tag.rst", "generated/dgl.sort_csr_by_tag.rst", "generated/dgl.sparse.SparseMatrix.T.rst", "generated/dgl.sparse.SparseMatrix.coalesce.rst", "generated/dgl.sparse.SparseMatrix.col.rst", "generated/dgl.sparse.SparseMatrix.coo.rst", "generated/dgl.sparse.SparseMatrix.cpu.rst", "generated/dgl.sparse.SparseMatrix.csc.rst", "generated/dgl.sparse.SparseMatrix.csr.rst", "generated/dgl.sparse.SparseMatrix.cuda.rst", "generated/dgl.sparse.SparseMatrix.device.rst", "generated/dgl.sparse.SparseMatrix.double.rst", "generated/dgl.sparse.SparseMatrix.dtype.rst", "generated/dgl.sparse.SparseMatrix.float.rst", "generated/dgl.sparse.SparseMatrix.has_duplicate.rst", "generated/dgl.sparse.SparseMatrix.indices.rst", "generated/dgl.sparse.SparseMatrix.int.rst", "generated/dgl.sparse.SparseMatrix.long.rst", "generated/dgl.sparse.SparseMatrix.neg.rst", "generated/dgl.sparse.SparseMatrix.nnz.rst", "generated/dgl.sparse.SparseMatrix.reduce.rst", "generated/dgl.sparse.SparseMatrix.row.rst", "generated/dgl.sparse.SparseMatrix.shape.rst", "generated/dgl.sparse.SparseMatrix.smax.rst", "generated/dgl.sparse.SparseMatrix.smean.rst", "generated/dgl.sparse.SparseMatrix.smin.rst", "generated/dgl.sparse.SparseMatrix.softmax.rst", "generated/dgl.sparse.SparseMatrix.sum.rst", "generated/dgl.sparse.SparseMatrix.t.rst", "generated/dgl.sparse.SparseMatrix.to.rst", "generated/dgl.sparse.SparseMatrix.to_dense.rst", "generated/dgl.sparse.SparseMatrix.transpose.rst", "generated/dgl.sparse.SparseMatrix.val.rst", "generated/dgl.sparse.add.rst", "generated/dgl.sparse.bsddmm.rst", "generated/dgl.sparse.bspmm.rst", "generated/dgl.sparse.diag.rst", "generated/dgl.sparse.div.rst", "generated/dgl.sparse.from_coo.rst", "generated/dgl.sparse.from_csc.rst", "generated/dgl.sparse.from_csr.rst", "generated/dgl.sparse.identity.rst", "generated/dgl.sparse.matmul.rst", "generated/dgl.sparse.mul.rst", "generated/dgl.sparse.power.rst", "generated/dgl.sparse.sddmm.rst", "generated/dgl.sparse.softmax.rst", "generated/dgl.sparse.sp_add_v.rst", "generated/dgl.sparse.sp_broadcast_v.rst", "generated/dgl.sparse.sp_div_v.rst", "generated/dgl.sparse.sp_mul_v.rst", "generated/dgl.sparse.sp_sub_v.rst", "generated/dgl.sparse.spmatrix.rst", "generated/dgl.sparse.spmm.rst", "generated/dgl.sparse.spspmm.rst", "generated/dgl.sparse.sub.rst", "generated/dgl.sparse.val_like.rst", "generated/dgl.sum_edges.rst", "generated/dgl.sum_nodes.rst", "generated/dgl.svd_pe.rst", "generated/dgl.to_bidirected.rst", "generated/dgl.to_block.rst", "generated/dgl.to_cugraph.rst", "generated/dgl.to_double.rst", "generated/dgl.to_float.rst", "generated/dgl.to_half.rst", "generated/dgl.to_heterogeneous.rst", "generated/dgl.to_homogeneous.rst", "generated/dgl.to_networkx.rst", "generated/dgl.to_simple.rst", "generated/dgl.to_simple_graph.rst", "generated/dgl.topk_edges.rst", "generated/dgl.topk_nodes.rst", "generated/dgl.topological_nodes_generator.rst", "generated/dgl.transforms.AddEdge.rst", "generated/dgl.transforms.AddMetaPaths.rst", "generated/dgl.transforms.AddReverse.rst", "generated/dgl.transforms.AddSelfLoop.rst", "generated/dgl.transforms.BaseTransform.rst", "generated/dgl.transforms.Compose.rst", "generated/dgl.transforms.DropEdge.rst", "generated/dgl.transforms.DropNode.rst", "generated/dgl.transforms.FeatMask.rst", "generated/dgl.transforms.GCNNorm.rst", "generated/dgl.transforms.GDC.rst", "generated/dgl.transforms.HeatKernel.rst", "generated/dgl.transforms.KHopGraph.rst", "generated/dgl.transforms.LapPE.rst", "generated/dgl.transforms.LineGraph.rst", "generated/dgl.transforms.NodeShuffle.rst", "generated/dgl.transforms.PPR.rst", "generated/dgl.transforms.RandomWalkPE.rst", "generated/dgl.transforms.RemoveSelfLoop.rst", "generated/dgl.transforms.RowFeatNormalizer.rst", "generated/dgl.transforms.SIGNDiffusion.rst", "generated/dgl.transforms.SVDPE.rst", "generated/dgl.transforms.ToLevi.rst", "generated/dgl.transforms.ToSimple.rst", "generated/dgl.udf.EdgeBatch.batch_size.rst", "generated/dgl.udf.EdgeBatch.data.rst", "generated/dgl.udf.EdgeBatch.dst.rst", "generated/dgl.udf.EdgeBatch.edges.rst", "generated/dgl.udf.EdgeBatch.src.rst", "generated/dgl.udf.NodeBatch.batch_size.rst", "generated/dgl.udf.NodeBatch.data.rst", "generated/dgl.udf.NodeBatch.mailbox.rst", "generated/dgl.udf.NodeBatch.nodes.rst", "generated/dgl.unbatch.rst", "generated/dgl.use_libxsmm.rst", "guide/data.rst", "guide/data-dataset.rst", "guide/data-download.rst", "guide/data-loadcsv.rst", "guide/data-loadogb.rst", "guide/data-process.rst", "guide/data-savenload.rst", "guide/distributed.rst", "guide/distributed-apis.rst", "guide/distributed-hetero.rst", "guide/distributed-partition.rst", "guide/distributed-preprocessing.rst", "guide/distributed-tools.rst", "guide/graph.rst", "guide/graph-basic.rst", "guide/graph-external.rst", "guide/graph-feature.rst", "guide/graph-gpu.rst", "guide/graph-graphs-nodes-edges.rst", "guide/graph-heterogeneous.rst", "guide/index.rst", "guide/message.rst", "guide/message-api.rst", "guide/message-efficient.rst", "guide/message-heterograph.rst", "guide/message-part.rst", "guide/minibatch.rst", "guide/minibatch-custom-sampler.rst", "guide/minibatch-edge.rst", "guide/minibatch-gpu-sampling.rst", "guide/minibatch-inference.rst", "guide/minibatch-link.rst", "guide/minibatch-nn.rst", "guide/minibatch-node.rst", "guide/minibatch-parallelism.rst", "guide/minibatch-sparse.rst", "guide/mixed_precision.rst", "guide/nn.rst", "guide/nn-construction.rst", "guide/nn-forward.rst", "guide/nn-heterograph.rst", "guide/training.rst", "guide/training-edge.rst", "guide/training-eweight.rst", "guide/training-graph.rst", "guide/training-link.rst", "guide/training-node.rst", "guide_cn/data.rst", "guide_cn/data-dataset.rst", "guide_cn/data-download.rst", "guide_cn/data-loadogb.rst", "guide_cn/data-process.rst", "guide_cn/data-savenload.rst", "guide_cn/distributed.rst", "guide_cn/distributed-apis.rst", "guide_cn/distributed-preprocessing.rst", "guide_cn/distributed-tools.rst", "guide_cn/graph.rst", "guide_cn/graph-basic.rst", "guide_cn/graph-external.rst", "guide_cn/graph-feature.rst", "guide_cn/graph-gpu.rst", "guide_cn/graph-graphs-nodes-edges.rst", "guide_cn/graph-heterogeneous.rst", "guide_cn/index.rst", "guide_cn/message.rst", "guide_cn/message-api.rst", "guide_cn/message-efficient.rst", "guide_cn/message-heterograph.rst", "guide_cn/message-part.rst", "guide_cn/minibatch.rst", "guide_cn/minibatch-custom-sampler.rst", "guide_cn/minibatch-edge.rst", "guide_cn/minibatch-inference.rst", "guide_cn/minibatch-link.rst", "guide_cn/minibatch-nn.rst", "guide_cn/minibatch-node.rst", "guide_cn/nn.rst", "guide_cn/nn-construction.rst", "guide_cn/nn-forward.rst", "guide_cn/nn-heterograph.rst", "guide_cn/training.rst", "guide_cn/training-edge.rst", "guide_cn/training-eweight.rst", "guide_cn/training-graph.rst", "guide_cn/training-link.rst", "guide_cn/training-node.rst", "guide_ko/data.rst", "guide_ko/data-dataset.rst", "guide_ko/data-download.rst", "guide_ko/data-loadogb.rst", "guide_ko/data-process.rst", "guide_ko/data-savenload.rst", "guide_ko/distributed.rst", "guide_ko/distributed-apis.rst", "guide_ko/distributed-hetero.rst", "guide_ko/distributed-preprocessing.rst", "guide_ko/distributed-tools.rst", "guide_ko/graph.rst", "guide_ko/graph-basic.rst", "guide_ko/graph-external.rst", "guide_ko/graph-feature.rst", "guide_ko/graph-gpu.rst", "guide_ko/graph-graphs-nodes-edges.rst", "guide_ko/graph-heterogeneous.rst", "guide_ko/index.rst", "guide_ko/message.rst", "guide_ko/message-api.rst", "guide_ko/message-edge.rst", "guide_ko/message-efficient.rst", "guide_ko/message-heterograph.rst", "guide_ko/message-part.rst", "guide_ko/minibatch.rst", "guide_ko/minibatch-custom-sampler.rst", "guide_ko/minibatch-edge.rst", "guide_ko/minibatch-gpu-sampling.rst", "guide_ko/minibatch-inference.rst", "guide_ko/minibatch-link.rst", "guide_ko/minibatch-nn.rst", "guide_ko/minibatch-node.rst", "guide_ko/mixed_precision.rst", "guide_ko/nn.rst", "guide_ko/nn-construction.rst", "guide_ko/nn-forward.rst", "guide_ko/nn-heterograph.rst", "guide_ko/training.rst", "guide_ko/training-edge.rst", "guide_ko/training-graph.rst", "guide_ko/training-link.rst", "guide_ko/training-node.rst", "index.rst", "install/index.rst", "notebooks/sparse/gcn.nblink", "notebooks/sparse/graph_diffusion.nblink", "notebooks/sparse/graph_transformer.nblink", "notebooks/sparse/hgnn.nblink", "notebooks/sparse/index.rst", "notebooks/sparse/quickstart.nblink", "performance.rst", "resources.rst", "sg_execution_times.rst", "stochastic_training/index.rst", "stochastic_training/link_prediction.nblink", "stochastic_training/neighbor_sampling_overview.nblink", "stochastic_training/node_classification.nblink", "stochastic_training/ondisk-dataset.rst", "stochastic_training/ondisk-dataset-specification.rst", "stochastic_training/ondisk_dataset_heterograph.nblink", "stochastic_training/ondisk_dataset_homograph.nblink", "tutorials/blitz/1_introduction.rst", "tutorials/blitz/2_dglgraph.rst", "tutorials/blitz/3_message_passing.rst", "tutorials/blitz/4_link_predict.rst", "tutorials/blitz/5_graph_classification.rst", "tutorials/blitz/6_load_data.rst", "tutorials/blitz/index.rst", "tutorials/blitz/sg_execution_times.rst", "tutorials/cpu/cpu_best_practises.rst", "tutorials/cpu/index.rst", "tutorials/cpu/sg_execution_times.rst", "tutorials/dist/1_node_classification.rst", "tutorials/dist/2_link_prediction.rst", "tutorials/dist/index.rst", "tutorials/dist/sg_execution_times.rst", "tutorials/models/1_gnn/1_gcn.rst", "tutorials/models/1_gnn/4_rgcn.rst", "tutorials/models/1_gnn/6_line_graph.rst", "tutorials/models/1_gnn/9_gat.rst", "tutorials/models/1_gnn/index.rst", "tutorials/models/1_gnn/sg_execution_times.rst", "tutorials/models/2_small_graph/3_tree-lstm.rst", "tutorials/models/2_small_graph/index.rst", "tutorials/models/2_small_graph/sg_execution_times.rst", "tutorials/models/3_generative_model/5_dgmg.rst", "tutorials/models/3_generative_model/index.rst", "tutorials/models/3_generative_model/sg_execution_times.rst", "tutorials/models/4_old_wines/2_capsule.rst", "tutorials/models/4_old_wines/7_transformer.rst", "tutorials/models/4_old_wines/index.rst", "tutorials/models/4_old_wines/sg_execution_times.rst", "tutorials/models/index.rst", "tutorials/models/sg_execution_times.rst", "tutorials/multi/1_graph_classification.rst", "tutorials/multi/2_node_classification.rst", "tutorials/multi/index.rst", "tutorials/multi/sg_execution_times.rst"], "indexentries": {"__getitem__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__getitem__", false]], "__getitem__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__getitem__", false]], "__getitem__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__getitem__", false]], "__getitem__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__getitem__", false]], "__getitem__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__getitem__", false]], "__getitem__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__getitem__", false]], "__getitem__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__getitem__", false]], "__getitem__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__getitem__", false]], "__getitem__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__getitem__", false]], "__getitem__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__getitem__", false]], "__getitem__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__getitem__", false]], "__getitem__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__getitem__", false]], "__getitem__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__getitem__", false]], "__getitem__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__getitem__", false]], "__getitem__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__getitem__", false]], "__getitem__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__getitem__", false]], "__getitem__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__getitem__", false]], "__getitem__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__getitem__", false]], "__getitem__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__getitem__", false]], "__getitem__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__getitem__", false]], "__getitem__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__getitem__", false]], "__getitem__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__getitem__", false]], "__getitem__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__getitem__", false]], "__getitem__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__getitem__", false]], "__getitem__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__getitem__", false]], "__getitem__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__getitem__", false]], "__getitem__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__getitem__", false]], "__getitem__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__getitem__", false]], "__getitem__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__getitem__", false]], "__getitem__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__getitem__", false]], "__getitem__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__getitem__", false]], "__getitem__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__getitem__", false]], "__getitem__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__getitem__", false]], "__getitem__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__getitem__", false]], "__getitem__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__getitem__", false]], "__getitem__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__getitem__", false]], "__getitem__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__getitem__", false]], "__getitem__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__getitem__", false]], "__getitem__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__getitem__", false]], "__getitem__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__getitem__", false]], "__getitem__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__getitem__", false]], "__getitem__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__getitem__", false]], "__getitem__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__getitem__", false]], "__getitem__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__getitem__", false]], "__getitem__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__getitem__", false]], "__getitem__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__getitem__", false]], "__getitem__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__getitem__", false]], "__getitem__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__getitem__", false]], "__getitem__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__getitem__", false]], "__getitem__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__getitem__", false]], "__getitem__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__getitem__", false]], "__getitem__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__getitem__", false]], "__getitem__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__getitem__", false]], "__getitem__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__getitem__", false]], "__getitem__() (dgl.dglgraph method)": [[26, "dgl.DGLGraph.__getitem__", false]], "__init__() (dgl.dataloading.blocksampler method)": [[208, "dgl.dataloading.BlockSampler.__init__", false]], "__init__() (dgl.sampling.pinsagesampler method)": [[560, "dgl.sampling.PinSAGESampler.__init__", false]], "__len__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__len__", false]], "__len__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__len__", false]], "__len__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__len__", false]], "__len__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__len__", false]], "__len__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__len__", false]], "__len__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__len__", false]], "__len__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__len__", false]], "__len__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__len__", false]], "__len__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__len__", false]], "__len__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__len__", false]], "__len__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__len__", false]], "__len__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__len__", false]], "__len__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__len__", false]], "__len__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__len__", false]], "__len__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__len__", false]], "__len__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__len__", false]], "__len__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__len__", false]], "__len__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__len__", false]], "__len__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__len__", false]], "__len__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__len__", false]], "__len__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__len__", false]], "__len__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__len__", false]], "__len__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__len__", false]], "__len__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__len__", false]], "__len__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__len__", false]], "__len__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__len__", false]], "__len__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__len__", false]], "__len__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__len__", false]], "__len__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__len__", false]], "__len__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__len__", false]], "__len__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__len__", false]], "__len__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__len__", false]], "__len__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__len__", false]], "__len__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__len__", false]], "__len__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__len__", false]], "__len__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__len__", false]], "__len__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__len__", false]], "__len__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__len__", false]], "__len__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__len__", false]], "__len__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__len__", false]], "__len__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__len__", false]], "__len__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__len__", false]], "__len__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__len__", false]], "__len__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__len__", false]], "__len__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__len__", false]], "__len__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__len__", false]], "__len__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__len__", false]], "__len__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__len__", false]], "__len__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__len__", false]], "__len__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__len__", false]], "__len__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__len__", false]], "__len__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__len__", false]], "__len__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__len__", false]], "__len__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__len__", false]], "__len__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__len__", false]], "__len__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__len__", false]], "__len__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__len__", false]], "__len__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__len__", false]], "__len__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__len__", false]], "__len__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__len__", false]], "__len__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__len__", false]], "__len__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__len__", false]], "__len__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__len__", false]], "__len__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__len__", false]], "__len__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__len__", false]], "actordataset (class in dgl.data)": [[134, "dgl.data.ActorDataset", false]], "add() (in module dgl.sparse)": [[609, "dgl.sparse.add", false]], "add_edges() (dgl.dglgraph method)": [[27, "dgl.DGLGraph.add_edges", false]], "add_edges() (in module dgl)": [[114, "dgl.add_edges", false]], "add_node_property_split (class in dgl.data.utils)": [[197, "dgl.data.utils.add_node_property_split", false]], "add_nodepred_split (class in dgl.data.utils)": [[198, "dgl.data.utils.add_nodepred_split", false]], "add_nodes() (dgl.dglgraph method)": [[28, "dgl.DGLGraph.add_nodes", false]], "add_nodes() (in module dgl)": [[115, "dgl.add_nodes", false]], "add_reverse_edges() (in module dgl)": [[116, "dgl.add_reverse_edges", false]], "add_reverse_edges() (in module dgl.graphbolt)": [[317, "dgl.graphbolt.add_reverse_edges", false]], "add_self_loop() (dgl.dglgraph method)": [[29, "dgl.DGLGraph.add_self_loop", false]], "add_self_loop() (in module dgl)": [[117, "dgl.add_self_loop", false]], "addedge (class in dgl.transforms)": [[650, "dgl.transforms.AddEdge", false]], "addmetapaths (class in dgl.transforms)": [[651, "dgl.transforms.AddMetaPaths", false]], "addreverse (class in dgl.transforms)": [[652, "dgl.transforms.AddReverse", false]], "addselfloop (class in dgl.transforms)": [[653, "dgl.transforms.AddSelfLoop", false]], "adj() (dgl.dglgraph method)": [[30, "dgl.DGLGraph.adj", false]], "adj_external() (dgl.dglgraph method)": [[31, "dgl.DGLGraph.adj_external", false]], "adj_product_graph() (in module dgl)": [[118, "dgl.adj_product_graph", false]], "adj_sum_graph() (in module dgl)": [[119, "dgl.adj_sum_graph", false]], "adj_tensors() (dgl.dglgraph method)": [[32, "dgl.DGLGraph.adj_tensors", false]], "adjacency_matrix() (dgl.dglgraph method)": [[33, "dgl.DGLGraph.adjacency_matrix", false]], "adjusted_homophily() (in module dgl)": [[120, "dgl.adjusted_homophily", false]], "agnnconv (class in dgl.nn.mxnet.conv)": [[354, "dgl.nn.mxnet.conv.AGNNConv", false]], "agnnconv (class in dgl.nn.pytorch.conv)": [[384, "dgl.nn.pytorch.conv.AGNNConv", false]], "aifbdataset (class in dgl.data)": [[132, "dgl.data.AIFBDataset", false]], "all_nodes_set (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.all_nodes_set", false]], "amazoncobuycomputerdataset (class in dgl.data)": [[135, "dgl.data.AmazonCoBuyComputerDataset", false]], "amazoncobuyphotodataset (class in dgl.data)": [[136, "dgl.data.AmazonCoBuyPhotoDataset", false]], "amazonratingsdataset (class in dgl.data)": [[137, "dgl.data.AmazonRatingsDataset", false]], "amdataset (class in dgl.data)": [[133, "dgl.data.AMDataset", false]], "apply_each() (in module dgl)": [[121, "dgl.apply_each", false]], "apply_edges() (dgl.dglgraph method)": [[34, "dgl.DGLGraph.apply_edges", false]], "apply_nodes() (dgl.dglgraph method)": [[35, "dgl.DGLGraph.apply_nodes", false]], "appnpconv (class in dgl.nn.mxnet.conv)": [[355, "dgl.nn.mxnet.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.pytorch.conv)": [[385, "dgl.nn.pytorch.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.tensorflow.conv)": [[462, "dgl.nn.tensorflow.conv.APPNPConv", false]], "as_edge_prediction_sampler() (in module dgl.dataloading)": [[220, "dgl.dataloading.as_edge_prediction_sampler", false]], "asgraphpreddataset (class in dgl.data)": [[138, "dgl.data.AsGraphPredDataset", false]], "aslinkpreddataset (class in dgl.data)": [[139, "dgl.data.AsLinkPredDataset", false]], "asnodepreddataset (class in dgl.data)": [[140, "dgl.data.AsNodePredDataset", false]], "atomicconv (class in dgl.nn.pytorch.conv)": [[386, "dgl.nn.pytorch.conv.AtomicConv", false]], "avgpooling (class in dgl.nn.mxnet.glob)": [[371, "dgl.nn.mxnet.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.pytorch.glob)": [[430, "dgl.nn.pytorch.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.tensorflow.glob)": [[470, "dgl.nn.tensorflow.glob.AvgPooling", false]], "ba2motifdataset (class in dgl.data)": [[141, "dgl.data.BA2MotifDataset", false]], "bacommunitydataset (class in dgl.data)": [[142, "dgl.data.BACommunityDataset", false]], "barrier() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.barrier", false]], "basetransform (class in dgl.transforms)": [[654, "dgl.transforms.BaseTransform", false]], "bashapedataset (class in dgl.data)": [[143, "dgl.data.BAShapeDataset", false]], "basicfeaturestore (class in dgl.graphbolt)": [[287, "dgl.graphbolt.BasicFeatureStore", false]], "batch() (in module dgl)": [[122, "dgl.batch", false]], "batch_num_edges() (dgl.dglgraph method)": [[36, "dgl.DGLGraph.batch_num_edges", false]], "batch_num_nodes() (dgl.dglgraph method)": [[37, "dgl.DGLGraph.batch_num_nodes", false]], "batch_size (dgl.dglgraph property)": [[38, "dgl.DGLGraph.batch_size", false]], "batch_size() (dgl.udf.edgebatch method)": [[674, "dgl.udf.EdgeBatch.batch_size", false]], "batch_size() (dgl.udf.nodebatch method)": [[679, "dgl.udf.NodeBatch.batch_size", false]], "bfs_edges_generator() (in module dgl)": [[123, "dgl.bfs_edges_generator", false]], "bfs_nodes_generator() (in module dgl)": [[124, "dgl.bfs_nodes_generator", false]], "bgsdataset (class in dgl.data)": [[144, "dgl.data.BGSDataset", false]], "bias (dgl.nn.pytorch.conv.graphconv attribute)": [[410, "dgl.nn.pytorch.conv.GraphConv.bias", false]], "biasedmha (class in dgl.nn.pytorch.gt)": [[446, "dgl.nn.pytorch.gt.BiasedMHA", false]], "biasedmultiheadattention (class in dgl.nn.pytorch.graph_transformer)": [[439, "dgl.nn.pytorch.graph_transformer.BiasedMultiheadAttention", false]], "bipartite_from_networkx() (in module dgl)": [[125, "dgl.bipartite_from_networkx", false]], "bipartite_from_scipy() (in module dgl)": [[126, "dgl.bipartite_from_scipy", false]], "bitcoinotcdataset (class in dgl.data)": [[145, "dgl.data.BitcoinOTCDataset", false]], "block_to_graph() (in module dgl)": [[127, "dgl.block_to_graph", false]], "blocks (dgl.graphbolt.minibatch property)": [[304, "dgl.graphbolt.MiniBatch.blocks", false]], "blocksampler (class in dgl.dataloading)": [[208, "dgl.dataloading.BlockSampler", false]], "broadcast_edges() (in module dgl)": [[128, "dgl.broadcast_edges", false]], "broadcast_nodes() (in module dgl)": [[129, "dgl.broadcast_nodes", false]], "bsddmm() (in module dgl.sparse)": [[610, "dgl.sparse.bsddmm", false]], "bspmm() (in module dgl.sparse)": [[611, "dgl.sparse.bspmm", false]], "builtindataset (class in dgl.graphbolt)": [[288, "dgl.graphbolt.BuiltinDataset", false]], "call_once_and_share() (in module dgl.multiprocessing.pytorch)": [[350, "dgl.multiprocessing.pytorch.call_once_and_share", false]], "canonical_etypes (dgl.dglgraph property)": [[39, "dgl.DGLGraph.canonical_etypes", false]], "canonical_etypes (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.canonical_etypes", false]], "cfconv (class in dgl.nn.pytorch.conv)": [[387, "dgl.nn.pytorch.conv.CFConv", false]], "chameleondataset (class in dgl.data)": [[149, "dgl.data.ChameleonDataset", false]], "chebconv (class in dgl.nn.mxnet.conv)": [[356, "dgl.nn.mxnet.conv.ChebConv", false]], "chebconv (class in dgl.nn.pytorch.conv)": [[388, "dgl.nn.pytorch.conv.ChebConv", false]], "chebconv (class in dgl.nn.tensorflow.conv)": [[463, "dgl.nn.tensorflow.conv.ChebConv", false]], "check_sha1 (class in dgl.data.utils)": [[199, "dgl.data.utils.check_sha1", false]], "cifar10superpixeldataset (class in dgl.data)": [[146, "dgl.data.CIFAR10SuperPixelDataset", false]], "citeseergraphdataset (class in dgl.data)": [[150, "dgl.data.CiteseerGraphDataset", false]], "clusterdataset (class in dgl.data)": [[147, "dgl.data.CLUSTERDataset", false]], "clustergcnsampler (class in dgl.dataloading)": [[209, "dgl.dataloading.ClusterGCNSampler", false]], "coalesce() (dgl.sparse.sparsematrix method)": [[579, "dgl.sparse.SparseMatrix.coalesce", false]], "coauthorcsdataset (class in dgl.data)": [[151, "dgl.data.CoauthorCSDataset", false]], "coauthorphysicsdataset (class in dgl.data)": [[152, "dgl.data.CoauthorPhysicsDataset", false]], "col (dgl.sparse.sparsematrix property)": [[580, "dgl.sparse.SparseMatrix.col", false]], "collate_fn() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.collate_fn", false]], "compact_csc_format() (in module dgl.graphbolt)": [[318, "dgl.graphbolt.compact_csc_format", false]], "compact_graphs() (in module dgl)": [[130, "dgl.compact_graphs", false]], "compacted_negative_dsts (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.compacted_negative_dsts", false]], "compacted_negative_srcs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.compacted_negative_srcs", false]], "compacted_node_pairs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.compacted_node_pairs", false]], "compose (class in dgl.transforms)": [[655, "dgl.transforms.Compose", false]], "coo() (dgl.sparse.sparsematrix method)": [[581, "dgl.sparse.SparseMatrix.coo", false]], "copy_e() (in module dgl.function)": [[250, "dgl.function.copy_e", false]], "copy_e_max() (in module dgl.ops)": [[481, "dgl.ops.copy_e_max", false]], "copy_e_mean() (in module dgl.ops)": [[482, "dgl.ops.copy_e_mean", false]], "copy_e_min() (in module dgl.ops)": [[483, "dgl.ops.copy_e_min", false]], "copy_e_sum() (in module dgl.ops)": [[484, "dgl.ops.copy_e_sum", false]], "copy_to_shared_memory() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.copy_to_shared_memory", false]], "copy_to_shared_memory() (dgl.graphbolt.samplinggraph method)": [[311, "dgl.graphbolt.SamplingGraph.copy_to_shared_memory", false]], "copy_u() (in module dgl.function)": [[251, "dgl.function.copy_u", false]], "copy_u() (in module dgl.ops)": [[485, "dgl.ops.copy_u", false]], "copy_u_max() (in module dgl.ops)": [[486, "dgl.ops.copy_u_max", false]], "copy_u_mean() (in module dgl.ops)": [[487, "dgl.ops.copy_u_mean", false]], "copy_u_min() (in module dgl.ops)": [[488, "dgl.ops.copy_u_min", false]], "copy_u_sum() (in module dgl.ops)": [[489, "dgl.ops.copy_u_sum", false]], "copy_v() (in module dgl.ops)": [[490, "dgl.ops.copy_v", false]], "copyto (class in dgl.graphbolt)": [[289, "dgl.graphbolt.CopyTo", false]], "corafulldataset (class in dgl.data)": [[153, "dgl.data.CoraFullDataset", false]], "coragraphdataset (class in dgl.data)": [[154, "dgl.data.CoraGraphDataset", false]], "cornelldataset (class in dgl.data)": [[155, "dgl.data.CornellDataset", false]], "cpu() (dgl.dglgraph method)": [[40, "dgl.DGLGraph.cpu", false]], "cpu() (dgl.sparse.sparsematrix method)": [[582, "dgl.sparse.SparseMatrix.cpu", false]], "create_block() (in module dgl)": [[131, "dgl.create_block", false]], "create_formats_() (dgl.dglgraph method)": [[41, "dgl.DGLGraph.create_formats_", false]], "csc() (dgl.sparse.sparsematrix method)": [[583, "dgl.sparse.SparseMatrix.csc", false]], "csc_indptr (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.csc_indptr", false]], "csr() (dgl.sparse.sparsematrix method)": [[584, "dgl.sparse.SparseMatrix.csr", false]], "csvdataset (class in dgl.data)": [[148, "dgl.data.CSVDataset", false]], "cuda() (dgl.sparse.sparsematrix method)": [[585, "dgl.sparse.SparseMatrix.cuda", false]], "cugraphgatconv (class in dgl.nn.pytorch.conv)": [[389, "dgl.nn.pytorch.conv.CuGraphGATConv", false]], "cugraphrelgraphconv (class in dgl.nn.pytorch.conv)": [[390, "dgl.nn.pytorch.conv.CuGraphRelGraphConv", false]], "cugraphsageconv (class in dgl.nn.pytorch.conv)": [[391, "dgl.nn.pytorch.conv.CuGraphSAGEConv", false]], "data (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.data", false]], "data (dgl.udf.edgebatch property)": [[675, "dgl.udf.EdgeBatch.data", false]], "data (dgl.udf.nodebatch property)": [[680, "dgl.udf.NodeBatch.data", false]], "dataloader (class in dgl.dataloading)": [[210, "dgl.dataloading.DataLoader", false]], "dataloader (class in dgl.graphbolt)": [[290, "dgl.graphbolt.DataLoader", false]], "dataset (class in dgl.graphbolt)": [[291, "dgl.graphbolt.Dataset", false]], "dataset_name (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.dataset_name", false]], "dataset_name (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.dataset_name", false]], "dataset_name (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.dataset_name", false]], "deepwalk (class in dgl.nn.pytorch)": [[378, "dgl.nn.pytorch.DeepWalk", false]], "degreeencoder (class in dgl.nn.pytorch.graph_transformer)": [[440, "dgl.nn.pytorch.graph_transformer.DegreeEncoder", false]], "degreeencoder (class in dgl.nn.pytorch.gt)": [[447, "dgl.nn.pytorch.gt.DegreeEncoder", false]], "densechebconv (class in dgl.nn.mxnet.conv)": [[357, "dgl.nn.mxnet.conv.DenseChebConv", false]], "densechebconv (class in dgl.nn.pytorch.conv)": [[393, "dgl.nn.pytorch.conv.DenseChebConv", false]], "densegraphconv (class in dgl.nn.mxnet.conv)": [[358, "dgl.nn.mxnet.conv.DenseGraphConv", false]], "densegraphconv (class in dgl.nn.pytorch.conv)": [[394, "dgl.nn.pytorch.conv.DenseGraphConv", false]], "densesageconv (class in dgl.nn.mxnet.conv)": [[359, "dgl.nn.mxnet.conv.DenseSAGEConv", false]], "densesageconv (class in dgl.nn.pytorch.conv)": [[395, "dgl.nn.pytorch.conv.DenseSAGEConv", false]], "device (dgl.dglgraph property)": [[42, "dgl.DGLGraph.device", false]], "device (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.device", false]], "device (dgl.sparse.sparsematrix property)": [[586, "dgl.sparse.SparseMatrix.device", false]], "dfs_edges_generator() (in module dgl)": [[229, "dgl.dfs_edges_generator", false]], "dfs_labeled_edges_generator() (in module dgl)": [[230, "dgl.dfs_labeled_edges_generator", false]], "dgl": [[0, "module-dgl", false]], "dgl.data": [[2, "module-dgl.data", false]], "dgl.geometry": [[6, "module-dgl.geometry", false]], "dgl.nn.functional": [[18, "module-dgl.nn.functional", false]], "dgl.optim": [[10, "module-dgl.optim", false]], "dgl.sampling": [[11, "module-dgl.sampling", false]], "dgl.transforms": [[19, "module-dgl.transforms", false]], "dgldataset (class in dgl.data)": [[156, "dgl.data.DGLDataset", false]], "dglgraph (class in dgl)": [[1, "dgl.DGLGraph", false]], "dgnconv (class in dgl.nn.pytorch.conv)": [[392, "dgl.nn.pytorch.conv.DGNConv", false]], "diag() (in module dgl.sparse)": [[612, "dgl.sparse.diag", false]], "distdataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistDataLoader", false]], "distedgedataloader (class in dgl.dataloading)": [[211, "dgl.dataloading.DistEdgeDataLoader", false]], "distembedding (class in dgl.distributed)": [[4, "dgl.distributed.DistEmbedding", false]], "distgraph (class in dgl.distributed)": [[4, "dgl.distributed.DistGraph", false]], "distnodedataloader (class in dgl.dataloading)": [[212, "dgl.dataloading.DistNodeDataLoader", false]], "distributeditemsampler (class in dgl.graphbolt)": [[292, "dgl.graphbolt.DistributedItemSampler", false]], "disttensor (class in dgl.distributed)": [[4, "dgl.distributed.DistTensor", false]], "div() (in module dgl.sparse)": [[613, "dgl.sparse.div", false]], "dotgatconv (class in dgl.nn.pytorch.conv)": [[396, "dgl.nn.pytorch.conv.DotGatConv", false]], "double() (dgl.sparse.sparsematrix method)": [[587, "dgl.sparse.SparseMatrix.double", false]], "double_radius_node_labeling() (in module dgl)": [[242, "dgl.double_radius_node_labeling", false]], "download (class in dgl.data.utils)": [[200, "dgl.data.utils.download", false]], "dropedge (class in dgl.transforms)": [[656, "dgl.transforms.DropEdge", false]], "dropnode (class in dgl.transforms)": [[657, "dgl.transforms.DropNode", false]], "dst (dgl.udf.edgebatch property)": [[676, "dgl.udf.EdgeBatch.dst", false]], "dstdata (dgl.dglgraph property)": [[43, "dgl.DGLGraph.dstdata", false]], "dstnodes (dgl.dglgraph property)": [[44, "dgl.DGLGraph.dstnodes", false]], "dsttypes (dgl.dglgraph property)": [[45, "dgl.DGLGraph.dsttypes", false]], "dtype (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.dtype", false]], "dtype (dgl.sparse.sparsematrix property)": [[588, "dgl.sparse.SparseMatrix.dtype", false]], "e_add_u() (in module dgl.function)": [[252, "dgl.function.e_add_u", false]], "e_add_u() (in module dgl.ops)": [[491, "dgl.ops.e_add_u", false]], "e_add_v() (in module dgl.function)": [[253, "dgl.function.e_add_v", false]], "e_add_v() (in module dgl.ops)": [[492, "dgl.ops.e_add_v", false]], "e_div_u() (in module dgl.function)": [[254, "dgl.function.e_div_u", false]], "e_div_u() (in module dgl.ops)": [[493, "dgl.ops.e_div_u", false]], "e_div_v() (in module dgl.function)": [[255, "dgl.function.e_div_v", false]], "e_div_v() (in module dgl.ops)": [[494, "dgl.ops.e_div_v", false]], "e_dot_u() (in module dgl.function)": [[256, "dgl.function.e_dot_u", false]], "e_dot_u() (in module dgl.ops)": [[495, "dgl.ops.e_dot_u", false]], "e_dot_v() (in module dgl.function)": [[257, "dgl.function.e_dot_v", false]], "e_dot_v() (in module dgl.ops)": [[496, "dgl.ops.e_dot_v", false]], "e_mul_u() (in module dgl.function)": [[258, "dgl.function.e_mul_u", false]], "e_mul_u() (in module dgl.ops)": [[497, "dgl.ops.e_mul_u", false]], "e_mul_v() (in module dgl.function)": [[259, "dgl.function.e_mul_v", false]], "e_mul_v() (in module dgl.ops)": [[498, "dgl.ops.e_mul_v", false]], "e_sub_u() (in module dgl.function)": [[260, "dgl.function.e_sub_u", false]], "e_sub_u() (in module dgl.ops)": [[499, "dgl.ops.e_sub_u", false]], "e_sub_v() (in module dgl.function)": [[261, "dgl.function.e_sub_v", false]], "e_sub_v() (in module dgl.ops)": [[500, "dgl.ops.e_sub_v", false]], "edata (dgl.dglgraph property)": [[46, "dgl.DGLGraph.edata", false]], "edata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edata", false]], "edge_attr_schemes() (dgl.dglgraph method)": [[47, "dgl.DGLGraph.edge_attr_schemes", false]], "edge_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.edge_attr_schemes", false]], "edge_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attributes", false]], "edge_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.edge_feat_size", false]], "edge_features (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.edge_features", false]], "edge_homophily() (in module dgl)": [[243, "dgl.edge_homophily", false]], "edge_ids() (dgl.dglgraph method)": [[48, "dgl.DGLGraph.edge_ids", false]], "edge_ids() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.edge_ids", false]], "edge_label_informativeness() (in module dgl)": [[244, "dgl.edge_label_informativeness", false]], "edge_softmax() (in module dgl.nn.functional)": [[352, "dgl.nn.functional.edge_softmax", false]], "edge_split() (in module dgl.distributed)": [[231, "dgl.distributed.edge_split", false]], "edge_subgraph() (dgl.dglgraph method)": [[49, "dgl.DGLGraph.edge_subgraph", false]], "edge_subgraph() (in module dgl)": [[245, "dgl.edge_subgraph", false]], "edge_type_subgraph() (dgl.dglgraph method)": [[50, "dgl.DGLGraph.edge_type_subgraph", false]], "edge_type_subgraph() (in module dgl)": [[246, "dgl.edge_type_subgraph", false]], "edge_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.edge_type_to_id", false]], "edgeconv (class in dgl.nn.mxnet.conv)": [[360, "dgl.nn.mxnet.conv.EdgeConv", false]], "edgeconv (class in dgl.nn.pytorch.conv)": [[399, "dgl.nn.pytorch.conv.EdgeConv", false]], "edgegatconv (class in dgl.nn.pytorch.conv)": [[400, "dgl.nn.pytorch.conv.EdgeGATConv", false]], "edgepredictor (class in dgl.nn.pytorch.link)": [[454, "dgl.nn.pytorch.link.EdgePredictor", false]], "edges (dgl.dglgraph property)": [[51, "dgl.DGLGraph.edges", false]], "edges (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edges", false]], "edges() (dgl.udf.edgebatch method)": [[677, "dgl.udf.EdgeBatch.edges", false]], "edgeweightnorm (class in dgl.nn.pytorch.conv)": [[401, "dgl.nn.pytorch.conv.EdgeWeightNorm", false]], "egatconv (class in dgl.nn.pytorch.conv)": [[397, "dgl.nn.pytorch.conv.EGATConv", false]], "egnnconv (class in dgl.nn.pytorch.conv)": [[398, "dgl.nn.pytorch.conv.EGNNConv", false]], "egtlayer (class in dgl.nn.pytorch.graph_transformer)": [[441, "dgl.nn.pytorch.graph_transformer.EGTLayer", false]], "egtlayer (class in dgl.nn.pytorch.gt)": [[448, "dgl.nn.pytorch.gt.EGTLayer", false]], "eid2localeid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2localeid", false]], "eid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2partid", false]], "end_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.end_time", false]], "etype_str_to_tuple() (in module dgl.graphbolt)": [[319, "dgl.graphbolt.etype_str_to_tuple", false]], "etype_tuple_to_str() (in module dgl.graphbolt)": [[320, "dgl.graphbolt.etype_tuple_to_str", false]], "etypes (dgl.dglgraph property)": [[52, "dgl.DGLGraph.etypes", false]], "etypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.etypes", false]], "exclude_edges() (dgl.graphbolt.sampledsubgraph method)": [[309, "dgl.graphbolt.SampledSubgraph.exclude_edges", false]], "exclude_seed_edges() (in module dgl.graphbolt)": [[321, "dgl.graphbolt.exclude_seed_edges", false]], "explain_graph() (dgl.nn.pytorch.explain.gnnexplainer method)": [[421, "dgl.nn.pytorch.explain.GNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[422, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[423, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[424, "dgl.nn.pytorch.explain.HeteroSubgraphX.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.pgexplainer method)": [[425, "dgl.nn.pytorch.explain.PGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.subgraphx method)": [[426, "dgl.nn.pytorch.explain.SubgraphX.explain_graph", false]], "explain_node() (dgl.nn.pytorch.explain.gnnexplainer method)": [[421, "dgl.nn.pytorch.explain.GNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[422, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[423, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[425, "dgl.nn.pytorch.explain.PGExplainer.explain_node", false]], "extract_archive (class in dgl.data.utils)": [[201, "dgl.data.utils.extract_archive", false]], "fakenewsdataset (class in dgl.data)": [[159, "dgl.data.FakeNewsDataset", false]], "farthest_point_sampler (class in dgl.geometry)": [[6, "dgl.geometry.farthest_point_sampler", false]], "fb15k237dataset (class in dgl.data)": [[157, "dgl.data.FB15k237Dataset", false]], "fb15kdataset (class in dgl.data)": [[158, "dgl.data.FB15kDataset", false]], "feat_size (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.feat_size", false]], "featmask (class in dgl.transforms)": [[658, "dgl.transforms.FeatMask", false]], "feature (class in dgl.graphbolt)": [[293, "dgl.graphbolt.Feature", false]], "feature (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature", false]], "feature (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.feature", false]], "feature (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.feature", false]], "feature (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.feature", false]], "feature_name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature_name", false]], "featurefetcher (class in dgl.graphbolt)": [[294, "dgl.graphbolt.FeatureFetcher", false]], "features (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.features", false]], "featurestore (class in dgl.graphbolt)": [[295, "dgl.graphbolt.FeatureStore", false]], "filter_edges() (dgl.dglgraph method)": [[53, "dgl.DGLGraph.filter_edges", false]], "filter_nodes() (dgl.dglgraph method)": [[54, "dgl.DGLGraph.filter_nodes", false]], "find_edges() (dgl.dglgraph method)": [[55, "dgl.DGLGraph.find_edges", false]], "find_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.find_edges", false]], "find_edges() (in module dgl.distributed)": [[232, "dgl.distributed.find_edges", false]], "flickrdataset (class in dgl.data)": [[160, "dgl.data.FlickrDataset", false]], "float() (dgl.sparse.sparsematrix method)": [[589, "dgl.sparse.SparseMatrix.float", false]], "formats() (dgl.dglgraph method)": [[56, "dgl.DGLGraph.formats", false]], "forward() (dgl.nn.pytorch.conv.agnnconv method)": [[384, "dgl.nn.pytorch.conv.AGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.appnpconv method)": [[385, "dgl.nn.pytorch.conv.APPNPConv.forward", false]], "forward() (dgl.nn.pytorch.conv.atomicconv method)": [[386, "dgl.nn.pytorch.conv.AtomicConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cfconv method)": [[387, "dgl.nn.pytorch.conv.CFConv.forward", false]], "forward() (dgl.nn.pytorch.conv.chebconv method)": [[388, "dgl.nn.pytorch.conv.ChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[389, "dgl.nn.pytorch.conv.CuGraphGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[390, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[391, "dgl.nn.pytorch.conv.CuGraphSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densechebconv method)": [[393, "dgl.nn.pytorch.conv.DenseChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densegraphconv method)": [[394, "dgl.nn.pytorch.conv.DenseGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densesageconv method)": [[395, "dgl.nn.pytorch.conv.DenseSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dgnconv method)": [[392, "dgl.nn.pytorch.conv.DGNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dotgatconv method)": [[396, "dgl.nn.pytorch.conv.DotGatConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeconv method)": [[399, "dgl.nn.pytorch.conv.EdgeConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgegatconv method)": [[400, "dgl.nn.pytorch.conv.EdgeGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeweightnorm method)": [[401, "dgl.nn.pytorch.conv.EdgeWeightNorm.forward", false]], "forward() (dgl.nn.pytorch.conv.egatconv method)": [[397, "dgl.nn.pytorch.conv.EGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.egnnconv method)": [[398, "dgl.nn.pytorch.conv.EGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatconv method)": [[402, "dgl.nn.pytorch.conv.GATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgcnconv method)": [[408, "dgl.nn.pytorch.conv.GatedGCNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[409, "dgl.nn.pytorch.conv.GatedGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatv2conv method)": [[403, "dgl.nn.pytorch.conv.GATv2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.gcn2conv method)": [[404, "dgl.nn.pytorch.conv.GCN2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.ginconv method)": [[405, "dgl.nn.pytorch.conv.GINConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gineconv method)": [[406, "dgl.nn.pytorch.conv.GINEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gmmconv method)": [[407, "dgl.nn.pytorch.conv.GMMConv.forward", false]], "forward() (dgl.nn.pytorch.conv.graphconv method)": [[410, "dgl.nn.pytorch.conv.GraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.grouprevres method)": [[411, "dgl.nn.pytorch.conv.GroupRevRes.forward", false]], "forward() (dgl.nn.pytorch.conv.hgtconv method)": [[412, "dgl.nn.pytorch.conv.HGTConv.forward", false]], "forward() (dgl.nn.pytorch.conv.nnconv method)": [[413, "dgl.nn.pytorch.conv.NNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.pnaconv method)": [[414, "dgl.nn.pytorch.conv.PNAConv.forward", false]], "forward() (dgl.nn.pytorch.conv.relgraphconv method)": [[415, "dgl.nn.pytorch.conv.RelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sageconv method)": [[416, "dgl.nn.pytorch.conv.SAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sgconv method)": [[417, "dgl.nn.pytorch.conv.SGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.tagconv method)": [[418, "dgl.nn.pytorch.conv.TAGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsconv method)": [[419, "dgl.nn.pytorch.conv.TWIRLSConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsunfoldingandattention method)": [[420, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.forward", false]], "forward() (dgl.nn.pytorch.deepwalk method)": [[378, "dgl.nn.pytorch.DeepWalk.forward", false]], "forward() (dgl.nn.pytorch.explain.gnnexplainer method)": [[421, "dgl.nn.pytorch.explain.GNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[422, "dgl.nn.pytorch.explain.HeteroGNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[423, "dgl.nn.pytorch.explain.HeteroPGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[424, "dgl.nn.pytorch.explain.HeteroSubgraphX.forward", false]], "forward() (dgl.nn.pytorch.explain.pgexplainer method)": [[425, "dgl.nn.pytorch.explain.PGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.subgraphx method)": [[426, "dgl.nn.pytorch.explain.SubgraphX.forward", false]], "forward() (dgl.nn.pytorch.factory.knngraph method)": [[427, "dgl.nn.pytorch.factory.KNNGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.radiusgraph method)": [[428, "dgl.nn.pytorch.factory.RadiusGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.segmentedknngraph method)": [[429, "dgl.nn.pytorch.factory.SegmentedKNNGraph.forward", false]], "forward() (dgl.nn.pytorch.glob.avgpooling method)": [[430, "dgl.nn.pytorch.glob.AvgPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.globalattentionpooling method)": [[431, "dgl.nn.pytorch.glob.GlobalAttentionPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.maxpooling method)": [[432, "dgl.nn.pytorch.glob.MaxPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.set2set method)": [[433, "dgl.nn.pytorch.glob.Set2Set.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerdecoder method)": [[434, "dgl.nn.pytorch.glob.SetTransformerDecoder.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerencoder method)": [[435, "dgl.nn.pytorch.glob.SetTransformerEncoder.forward", false]], "forward() (dgl.nn.pytorch.glob.sortpooling method)": [[436, "dgl.nn.pytorch.glob.SortPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.sumpooling method)": [[437, "dgl.nn.pytorch.glob.SumPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.weightandsum method)": [[438, "dgl.nn.pytorch.glob.WeightAndSum.forward", false]], "forward() (dgl.nn.pytorch.gt.biasedmha method)": [[446, "dgl.nn.pytorch.gt.BiasedMHA.forward", false]], "forward() (dgl.nn.pytorch.gt.degreeencoder method)": [[447, "dgl.nn.pytorch.gt.DegreeEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.egtlayer method)": [[448, "dgl.nn.pytorch.gt.EGTLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.graphormerlayer method)": [[449, "dgl.nn.pytorch.gt.GraphormerLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.lapposencoder method)": [[450, "dgl.nn.pytorch.gt.LapPosEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.pathencoder method)": [[451, "dgl.nn.pytorch.gt.PathEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder method)": [[452, "dgl.nn.pytorch.gt.SpatialEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder3d method)": [[453, "dgl.nn.pytorch.gt.SpatialEncoder3d.forward", false]], "forward() (dgl.nn.pytorch.heteroembedding method)": [[379, "dgl.nn.pytorch.HeteroEmbedding.forward", false]], "forward() (dgl.nn.pytorch.heterographconv method)": [[380, "dgl.nn.pytorch.HeteroGraphConv.forward", false]], "forward() (dgl.nn.pytorch.heterolinear method)": [[381, "dgl.nn.pytorch.HeteroLinear.forward", false]], "forward() (dgl.nn.pytorch.link.edgepredictor method)": [[454, "dgl.nn.pytorch.link.EdgePredictor.forward", false]], "forward() (dgl.nn.pytorch.link.transe method)": [[455, "dgl.nn.pytorch.link.TransE.forward", false]], "forward() (dgl.nn.pytorch.link.transr method)": [[456, "dgl.nn.pytorch.link.TransR.forward", false]], "forward() (dgl.nn.pytorch.metapath2vec method)": [[382, "dgl.nn.pytorch.MetaPath2Vec.forward", false]], "forward() (dgl.nn.pytorch.typedlinear method)": [[383, "dgl.nn.pytorch.TypedLinear.forward", false]], "forward() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[458, "dgl.nn.pytorch.utils.JumpingKnowledge.forward", false]], "forward() (dgl.nn.pytorch.utils.labelpropagation method)": [[459, "dgl.nn.pytorch.utils.LabelPropagation.forward", false]], "forward() (dgl.nn.pytorch.utils.sequential method)": [[460, "dgl.nn.pytorch.utils.Sequential.forward", false]], "forward() (dgl.nn.pytorch.utils.weightbasis method)": [[461, "dgl.nn.pytorch.utils.WeightBasis.forward", false]], "fraudamazondataset (class in dgl.data)": [[161, "dgl.data.FraudAmazonDataset", false]], "frauddataset (class in dgl.data)": [[162, "dgl.data.FraudDataset", false]], "fraudyelpdataset (class in dgl.data)": [[163, "dgl.data.FraudYelpDataset", false]], "from_coo() (in module dgl.sparse)": [[614, "dgl.sparse.from_coo", false]], "from_csc() (in module dgl.sparse)": [[615, "dgl.sparse.from_csc", false]], "from_csr() (in module dgl.sparse)": [[616, "dgl.sparse.from_csr", false]], "from_cugraph() (in module dgl)": [[247, "dgl.from_cugraph", false]], "from_dglgraph() (in module dgl.graphbolt)": [[322, "dgl.graphbolt.from_dglgraph", false]], "from_networkx() (in module dgl)": [[248, "dgl.from_networkx", false]], "from_scipy() (in module dgl)": [[249, "dgl.from_scipy", false]], "fused_csc_sampling_graph() (in module dgl.graphbolt)": [[323, "dgl.graphbolt.fused_csc_sampling_graph", false]], "fusedcscsamplinggraph (class in dgl.graphbolt)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph", false]], "gatconv (class in dgl.nn.mxnet.conv)": [[361, "dgl.nn.mxnet.conv.GATConv", false]], "gatconv (class in dgl.nn.pytorch.conv)": [[402, "dgl.nn.pytorch.conv.GATConv", false]], "gatconv (class in dgl.nn.tensorflow.conv)": [[464, "dgl.nn.tensorflow.conv.GATConv", false]], "gatedgcnconv (class in dgl.nn.pytorch.conv)": [[408, "dgl.nn.pytorch.conv.GatedGCNConv", false]], "gatedgraphconv (class in dgl.nn.mxnet.conv)": [[364, "dgl.nn.mxnet.conv.GatedGraphConv", false]], "gatedgraphconv (class in dgl.nn.pytorch.conv)": [[409, "dgl.nn.pytorch.conv.GatedGraphConv", false]], "gather_mm() (in module dgl.ops)": [[501, "dgl.ops.gather_mm", false]], "gatv2conv (class in dgl.nn.pytorch.conv)": [[403, "dgl.nn.pytorch.conv.GATv2Conv", false]], "gcn2conv (class in dgl.nn.pytorch.conv)": [[404, "dgl.nn.pytorch.conv.GCN2Conv", false]], "gcnnorm (class in dgl.transforms)": [[659, "dgl.transforms.GCNNorm", false]], "gdc (class in dgl.transforms)": [[660, "dgl.transforms.GDC", false]], "gdeltdataset (class in dgl.data)": [[164, "dgl.data.GDELTDataset", false]], "get_download_dir (class in dgl.data.utils)": [[202, "dgl.data.utils.get_download_dir", false]], "get_edge_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_edge_partition_policy", false]], "get_etype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_etype_id", false]], "get_node_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_node_partition_policy", false]], "get_ntype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_ntype_id", false]], "get_part_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_part_size", false]], "get_partition_book() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_partition_book", false]], "get_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_size", false]], "ginconv (class in dgl.nn.mxnet.conv)": [[362, "dgl.nn.mxnet.conv.GINConv", false]], "ginconv (class in dgl.nn.pytorch.conv)": [[405, "dgl.nn.pytorch.conv.GINConv", false]], "ginconv (class in dgl.nn.tensorflow.conv)": [[465, "dgl.nn.tensorflow.conv.GINConv", false]], "gindataset (class in dgl.data)": [[165, "dgl.data.GINDataset", false]], "gineconv (class in dgl.nn.pytorch.conv)": [[406, "dgl.nn.pytorch.conv.GINEConv", false]], "global_uniform_negative_sampling() (in module dgl.sampling)": [[561, "dgl.sampling.global_uniform_negative_sampling", false]], "globalattentionpooling (class in dgl.nn.mxnet.glob)": [[372, "dgl.nn.mxnet.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.pytorch.glob)": [[431, "dgl.nn.pytorch.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.tensorflow.glob)": [[471, "dgl.nn.tensorflow.glob.GlobalAttentionPooling", false]], "globaluniform (class in dgl.dataloading.negative_sampler)": [[226, "dgl.dataloading.negative_sampler.GlobalUniform", false]], "gmmconv (class in dgl.nn.mxnet.conv)": [[363, "dgl.nn.mxnet.conv.GMMConv", false]], "gmmconv (class in dgl.nn.pytorch.conv)": [[407, "dgl.nn.pytorch.conv.GMMConv", false]], "gnnexplainer (class in dgl.nn.pytorch.explain)": [[421, "dgl.nn.pytorch.explain.GNNExplainer", false]], "gpucachedfeature (class in dgl.graphbolt)": [[297, "dgl.graphbolt.GPUCachedFeature", false]], "graph (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.graph", false]], "graph (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.graph", false]], "graph (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.graph", false]], "graph (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.graph", false]], "graph (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.graph", false]], "graph() (in module dgl)": [[286, "dgl.graph", false]], "graphconv (class in dgl.nn.mxnet.conv)": [[365, "dgl.nn.mxnet.conv.GraphConv", false]], "graphconv (class in dgl.nn.pytorch.conv)": [[410, "dgl.nn.pytorch.conv.GraphConv", false]], "graphconv (class in dgl.nn.tensorflow.conv)": [[466, "dgl.nn.tensorflow.conv.GraphConv", false]], "graphdataloader (class in dgl.dataloading)": [[213, "dgl.dataloading.GraphDataLoader", false]], "graphormerlayer (class in dgl.nn.pytorch.graph_transformer)": [[442, "dgl.nn.pytorch.graph_transformer.GraphormerLayer", false]], "graphormerlayer (class in dgl.nn.pytorch.gt)": [[449, "dgl.nn.pytorch.gt.GraphormerLayer", false]], "graphpartitionbook (class in dgl.distributed)": [[4, "dgl.distributed.GraphPartitionBook", false]], "graphs (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.graphs", false]], "graphs (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.graphs", false]], "graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.graphs", false]], "grouprevres (class in dgl.nn.pytorch.conv)": [[411, "dgl.nn.pytorch.conv.GroupRevRes", false]], "gsddmm() (in module dgl.ops)": [[502, "dgl.ops.gsddmm", false]], "gspmm() (in module dgl.ops)": [[503, "dgl.ops.gspmm", false]], "has_duplicate() (dgl.sparse.sparsematrix method)": [[590, "dgl.sparse.SparseMatrix.has_duplicate", false]], "has_edges_between() (dgl.dglgraph method)": [[57, "dgl.DGLGraph.has_edges_between", false]], "has_nodes() (dgl.dglgraph method)": [[58, "dgl.DGLGraph.has_nodes", false]], "hash (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.hash", false]], "heatkernel (class in dgl.transforms)": [[661, "dgl.transforms.HeatKernel", false]], "heteroembedding (class in dgl.nn.pytorch)": [[379, "dgl.nn.pytorch.HeteroEmbedding", false]], "heterognnexplainer (class in dgl.nn.pytorch.explain)": [[422, "dgl.nn.pytorch.explain.HeteroGNNExplainer", false]], "heterograph() (in module dgl)": [[329, "dgl.heterograph", false]], "heterographconv (class in dgl.nn.mxnet)": [[353, "dgl.nn.mxnet.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.pytorch)": [[380, "dgl.nn.pytorch.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.tensorflow.glob)": [[472, "dgl.nn.tensorflow.glob.HeteroGraphConv", false]], "heterolinear (class in dgl.nn.pytorch)": [[381, "dgl.nn.pytorch.HeteroLinear", false]], "heteropgexplainer (class in dgl.nn.pytorch.explain)": [[423, "dgl.nn.pytorch.explain.HeteroPGExplainer", false]], "heterosubgraphx (class in dgl.nn.pytorch.explain)": [[424, "dgl.nn.pytorch.explain.HeteroSubgraphX", false]], "hgtconv (class in dgl.nn.pytorch.conv)": [[412, "dgl.nn.pytorch.conv.HGTConv", false]], "icews18dataset (class in dgl.data)": [[166, "dgl.data.ICEWS18Dataset", false]], "identity() (in module dgl.sparse)": [[617, "dgl.sparse.identity", false]], "idtype (dgl.dglgraph property)": [[59, "dgl.DGLGraph.idtype", false]], "idtype (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.idtype", false]], "in_degrees() (dgl.dglgraph method)": [[60, "dgl.DGLGraph.in_degrees", false]], "in_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.in_degrees", false]], "in_edges() (dgl.dglgraph method)": [[61, "dgl.DGLGraph.in_edges", false]], "in_subgraph() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.in_subgraph", false]], "in_subgraph() (in module dgl)": [[330, "dgl.in_subgraph", false]], "in_subgraph() (in module dgl.distributed)": [[233, "dgl.distributed.in_subgraph", false]], "inc() (dgl.dglgraph method)": [[62, "dgl.DGLGraph.inc", false]], "incidence_matrix() (dgl.dglgraph method)": [[63, "dgl.DGLGraph.incidence_matrix", false]], "indices (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.indices", false]], "indices() (dgl.sparse.sparsematrix method)": [[591, "dgl.sparse.SparseMatrix.indices", false]], "initialize() (in module dgl.distributed)": [[234, "dgl.distributed.initialize", false]], "input_nodes (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.input_nodes", false]], "insubgraphsampler (class in dgl.graphbolt)": [[298, "dgl.graphbolt.InSubgraphSampler", false]], "int() (dgl.dglgraph method)": [[64, "dgl.DGLGraph.int", false]], "int() (dgl.sparse.sparsematrix method)": [[592, "dgl.sparse.SparseMatrix.int", false]], "is_homogeneous (dgl.dglgraph property)": [[65, "dgl.DGLGraph.is_homogeneous", false]], "is_libxsmm_enabled() (in module dgl)": [[331, "dgl.is_libxsmm_enabled", false]], "is_multigraph (dgl.dglgraph property)": [[66, "dgl.DGLGraph.is_multigraph", false]], "is_pinned() (dgl.dglgraph method)": [[67, "dgl.DGLGraph.is_pinned", false]], "is_temporal (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.is_temporal", false]], "is_temporal (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.is_temporal", false]], "is_temporal (dgl.data.icews18dataset attribute)": [[166, "dgl.data.ICEWS18Dataset.is_temporal", false]], "is_unibipartite (dgl.dglgraph property)": [[68, "dgl.DGLGraph.is_unibipartite", false]], "isin() (in module dgl.graphbolt)": [[324, "dgl.graphbolt.isin", false]], "itemsampler (class in dgl.graphbolt)": [[299, "dgl.graphbolt.ItemSampler", false]], "itemset (class in dgl.graphbolt)": [[300, "dgl.graphbolt.ItemSet", false]], "itemsetdict (class in dgl.graphbolt)": [[301, "dgl.graphbolt.ItemSetDict", false]], "jumpingknowledge (class in dgl.nn.pytorch.utils)": [[458, "dgl.nn.pytorch.utils.JumpingKnowledge", false]], "karateclubdataset (class in dgl.data)": [[167, "dgl.data.KarateClubDataset", false]], "khop_adj() (in module dgl)": [[332, "dgl.khop_adj", false]], "khop_graph() (in module dgl)": [[333, "dgl.khop_graph", false]], "khop_in_subgraph() (in module dgl)": [[334, "dgl.khop_in_subgraph", false]], "khop_out_subgraph() (in module dgl)": [[335, "dgl.khop_out_subgraph", false]], "khopgraph (class in dgl.transforms)": [[662, "dgl.transforms.KHopGraph", false]], "knn_graph() (in module dgl)": [[336, "dgl.knn_graph", false]], "knngraph (class in dgl.nn.pytorch.factory)": [[427, "dgl.nn.pytorch.factory.KNNGraph", false]], "labelpropagation (class in dgl.nn.pytorch.utils)": [[459, "dgl.nn.pytorch.utils.LabelPropagation", false]], "labels (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.labels", false]], "labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.labels", false]], "labels (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.labels", false]], "laborsampler (class in dgl.dataloading)": [[214, "dgl.dataloading.LaborSampler", false]], "lap_pe() (in module dgl)": [[337, "dgl.lap_pe", false]], "laplacian_lambda_max() (in module dgl)": [[338, "dgl.laplacian_lambda_max", false]], "lappe (class in dgl.transforms)": [[663, "dgl.transforms.LapPE", false]], "lapposencoder (class in dgl.nn.pytorch.gt)": [[450, "dgl.nn.pytorch.gt.LapPosEncoder", false]], "layerneighborsampler (class in dgl.graphbolt)": [[302, "dgl.graphbolt.LayerNeighborSampler", false]], "lazyfeature (class in dgl.dataloading.base)": [[221, "dgl.dataloading.base.LazyFeature", false]], "legacydataset (class in dgl.graphbolt)": [[303, "dgl.graphbolt.LegacyDataset", false]], "legacytudataset (class in dgl.data)": [[168, "dgl.data.LegacyTUDataset", false]], "lin (dgl.nn.pytorch.conv.tagconv attribute)": [[418, "dgl.nn.pytorch.conv.TAGConv.lin", false]], "line_graph() (dgl.dglgraph method)": [[69, "dgl.DGLGraph.line_graph", false]], "line_graph() (in module dgl)": [[339, "dgl.line_graph", false]], "linegraph (class in dgl.transforms)": [[664, "dgl.transforms.LineGraph", false]], "linkx_homophily() (in module dgl)": [[340, "dgl.linkx_homophily", false]], "load() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.load", false]], "load() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.load", false]], "load() (dgl.graphbolt.ondiskdataset method)": [[308, "dgl.graphbolt.OnDiskDataset.load", false]], "load_from_shared_memory() (in module dgl.graphbolt)": [[325, "dgl.graphbolt.load_from_shared_memory", false]], "load_graphs() (in module dgl)": [[341, "dgl.load_graphs", false]], "load_info (class in dgl.data.utils)": [[203, "dgl.data.utils.load_info", false]], "load_labels (class in dgl.data.utils)": [[204, "dgl.data.utils.load_labels", false]], "load_partition() (in module dgl.distributed)": [[235, "dgl.distributed.load_partition", false]], "load_partition_book() (in module dgl.distributed)": [[236, "dgl.distributed.load_partition_book", false]], "load_partition_feats() (in module dgl.distributed)": [[237, "dgl.distributed.load_partition_feats", false]], "local_partition (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.local_partition", false]], "local_scope() (dgl.dglgraph method)": [[70, "dgl.DGLGraph.local_scope", false]], "local_to_global_nid (dgl.nn.pytorch.metapath2vec attribute)": [[382, "dgl.nn.pytorch.MetaPath2Vec.local_to_global_nid", false]], "long() (dgl.dglgraph method)": [[71, "dgl.DGLGraph.long", false]], "long() (dgl.sparse.sparsematrix method)": [[593, "dgl.sparse.SparseMatrix.long", false]], "mailbox (dgl.udf.nodebatch property)": [[681, "dgl.udf.NodeBatch.mailbox", false]], "map_to_homo_eid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_eid", false]], "map_to_homo_nid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_nid", false]], "map_to_per_etype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_etype", false]], "map_to_per_ntype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_ntype", false]], "mask_nodes_by_property (class in dgl.data.utils)": [[205, "dgl.data.utils.mask_nodes_by_property", false]], "matmul() (in module dgl.sparse)": [[618, "dgl.sparse.matmul", false]], "max() (in module dgl.function)": [[262, "dgl.function.max", false]], "max_edges() (in module dgl)": [[342, "dgl.max_edges", false]], "max_nodes() (in module dgl)": [[343, "dgl.max_nodes", false]], "max_num_node (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.max_num_node", false]], "max_num_node (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.max_num_node", false]], "max_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.max_num_v", false]], "maxpooling (class in dgl.nn.mxnet.glob)": [[373, "dgl.nn.mxnet.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.pytorch.glob)": [[432, "dgl.nn.pytorch.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.tensorflow.glob)": [[473, "dgl.nn.tensorflow.glob.MaxPooling", false]], "mean() (in module dgl.function)": [[263, "dgl.function.mean", false]], "mean_edges() (in module dgl)": [[344, "dgl.mean_edges", false]], "mean_nodes() (in module dgl)": [[345, "dgl.mean_nodes", false]], "merge() (in module dgl)": [[346, "dgl.merge", false]], "metadata (dgl.graphbolt.task property)": [[313, "dgl.graphbolt.Task.metadata", false]], "metadata() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.metadata", false]], "metadata() (dgl.graphbolt.basicfeaturestore method)": [[287, "dgl.graphbolt.BasicFeatureStore.metadata", false]], "metadata() (dgl.graphbolt.feature method)": [[293, "dgl.graphbolt.Feature.metadata", false]], "metadata() (dgl.graphbolt.featurestore method)": [[295, "dgl.graphbolt.FeatureStore.metadata", false]], "metadata() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.metadata", false]], "metagraph() (dgl.dglgraph method)": [[72, "dgl.DGLGraph.metagraph", false]], "metapath2vec (class in dgl.nn.pytorch)": [[382, "dgl.nn.pytorch.MetaPath2Vec", false]], "metapath_reachable_graph() (in module dgl)": [[347, "dgl.metapath_reachable_graph", false]], "metis_partition() (in module dgl)": [[348, "dgl.metis_partition", false]], "metis_partition_assignment() (in module dgl)": [[349, "dgl.metis_partition_assignment", false]], "min() (in module dgl.function)": [[264, "dgl.function.min", false]], "min_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.min_num_v", false]], "minesweeperdataset (class in dgl.data)": [[171, "dgl.data.MinesweeperDataset", false]], "minibatch (class in dgl.graphbolt)": [[304, "dgl.graphbolt.MiniBatch", false]], "minibatchtransformer (class in dgl.graphbolt)": [[305, "dgl.graphbolt.MiniBatchTransformer", false]], "minigcdataset (class in dgl.data)": [[172, "dgl.data.MiniGCDataset", false]], "mnistsuperpixeldataset (class in dgl.data)": [[169, "dgl.data.MNISTSuperPixelDataset", false]], "mods (dgl.nn.pytorch.heterographconv attribute)": [[380, "dgl.nn.pytorch.HeteroGraphConv.mods", false]], "module": [[0, "module-dgl", false], [2, "module-dgl.data", false], [6, "module-dgl.geometry", false], [10, "module-dgl.optim", false], [11, "module-dgl.sampling", false], [18, "module-dgl.nn.functional", false], [19, "module-dgl.transforms", false]], "movielensdataset (class in dgl.data)": [[173, "dgl.data.MovieLensDataset", false]], "mul() (in module dgl.sparse)": [[619, "dgl.sparse.mul", false]], "multi_update_all() (dgl.dglgraph method)": [[73, "dgl.DGLGraph.multi_update_all", false]], "multilayerfullneighborsampler (class in dgl.dataloading)": [[215, "dgl.dataloading.MultiLayerFullNeighborSampler", false]], "mutagdataset (class in dgl.data)": [[170, "dgl.data.MUTAGDataset", false]], "name (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.name", false]], "name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.name", false]], "name (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.name", false]], "names (dgl.graphbolt.itemset property)": [[300, "dgl.graphbolt.ItemSet.names", false]], "names (dgl.graphbolt.itemsetdict property)": [[301, "dgl.graphbolt.ItemSetDict.names", false]], "ndata (dgl.dglgraph property)": [[74, "dgl.DGLGraph.ndata", false]], "ndata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ndata", false]], "neg() (dgl.sparse.sparsematrix method)": [[594, "dgl.sparse.SparseMatrix.neg", false]], "negative_dsts (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.negative_dsts", false]], "negative_node_pairs (dgl.graphbolt.minibatch property)": [[304, "dgl.graphbolt.MiniBatch.negative_node_pairs", false]], "negative_srcs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.negative_srcs", false]], "negativesampler (class in dgl.graphbolt)": [[306, "dgl.graphbolt.NegativeSampler", false]], "neighbor_matching (class in dgl.geometry)": [[6, "dgl.geometry.neighbor_matching", false]], "neighborsampler (class in dgl.dataloading)": [[216, "dgl.dataloading.NeighborSampler", false]], "neighborsampler (class in dgl.graphbolt)": [[307, "dgl.graphbolt.NeighborSampler", false]], "nid2localnid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2localnid", false]], "nid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2partid", false]], "nnconv (class in dgl.nn.mxnet.conv)": [[366, "dgl.nn.mxnet.conv.NNConv", false]], "nnconv (class in dgl.nn.pytorch.conv)": [[413, "dgl.nn.pytorch.conv.NNConv", false]], "nnz (dgl.sparse.sparsematrix property)": [[595, "dgl.sparse.SparseMatrix.nnz", false]], "node2vec_random_walk() (in module dgl.sampling)": [[562, "dgl.sampling.node2vec_random_walk", false]], "node_attr_schemes() (dgl.dglgraph method)": [[75, "dgl.DGLGraph.node_attr_schemes", false]], "node_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.node_attr_schemes", false]], "node_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.node_attributes", false]], "node_embed (dgl.nn.pytorch.deepwalk attribute)": [[378, "dgl.nn.pytorch.DeepWalk.node_embed", false]], "node_embed (dgl.nn.pytorch.metapath2vec attribute)": [[382, "dgl.nn.pytorch.MetaPath2Vec.node_embed", false]], "node_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.node_feat_size", false]], "node_features (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.node_features", false]], "node_homophily() (in module dgl)": [[476, "dgl.node_homophily", false]], "node_ids() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.node_ids", false]], "node_label_informativeness() (in module dgl)": [[477, "dgl.node_label_informativeness", false]], "node_pairs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.node_pairs", false]], "node_pairs_with_labels (dgl.graphbolt.minibatch property)": [[304, "dgl.graphbolt.MiniBatch.node_pairs_with_labels", false]], "node_split() (in module dgl.distributed)": [[238, "dgl.distributed.node_split", false]], "node_subgraph() (in module dgl)": [[478, "dgl.node_subgraph", false]], "node_type_offset (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_offset", false]], "node_type_subgraph() (dgl.dglgraph method)": [[76, "dgl.DGLGraph.node_type_subgraph", false]], "node_type_subgraph() (in module dgl)": [[479, "dgl.node_type_subgraph", false]], "node_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_to_id", false]], "nodeembedding (class in dgl.nn.pytorch.sparse_emb)": [[457, "dgl.nn.pytorch.sparse_emb.NodeEmbedding", false]], "nodes (dgl.dglgraph property)": [[77, "dgl.DGLGraph.nodes", false]], "nodes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.nodes", false]], "nodes() (dgl.udf.nodebatch method)": [[682, "dgl.udf.NodeBatch.nodes", false]], "nodeshuffle (class in dgl.transforms)": [[665, "dgl.transforms.NodeShuffle", false]], "norm_by_dst() (in module dgl)": [[480, "dgl.norm_by_dst", false]], "ntypes (dgl.dglgraph property)": [[78, "dgl.DGLGraph.ntypes", false]], "ntypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ntypes", false]], "num_atom_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_atom_types", false]], "num_bond_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_bond_types", false]], "num_classes (dgl.data.actordataset attribute)": [[134, "dgl.data.ActorDataset.num_classes", false]], "num_classes (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuycomputerdataset attribute)": [[135, "dgl.data.AmazonCoBuyComputerDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuyphotodataset attribute)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.num_classes", false]], "num_classes (dgl.data.amazonratingsdataset attribute)": [[137, "dgl.data.AmazonRatingsDataset.num_classes", false]], "num_classes (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.num_classes", false]], "num_classes (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_classes", false]], "num_classes (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.num_classes", false]], "num_classes (dgl.data.ba2motifdataset attribute)": [[141, "dgl.data.BA2MotifDataset.num_classes", false]], "num_classes (dgl.data.bacommunitydataset attribute)": [[142, "dgl.data.BACommunityDataset.num_classes", false]], "num_classes (dgl.data.bashapedataset attribute)": [[143, "dgl.data.BAShapeDataset.num_classes", false]], "num_classes (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.num_classes", false]], "num_classes (dgl.data.chameleondataset attribute)": [[149, "dgl.data.ChameleonDataset.num_classes", false]], "num_classes (dgl.data.citeseergraphdataset attribute)": [[150, "dgl.data.CiteseerGraphDataset.num_classes", false]], "num_classes (dgl.data.clusterdataset attribute)": [[147, "dgl.data.CLUSTERDataset.num_classes", false]], "num_classes (dgl.data.coauthorcsdataset attribute)": [[151, "dgl.data.CoauthorCSDataset.num_classes", false]], "num_classes (dgl.data.coauthorphysicsdataset attribute)": [[152, "dgl.data.CoauthorPhysicsDataset.num_classes", false]], "num_classes (dgl.data.corafulldataset attribute)": [[153, "dgl.data.CoraFullDataset.num_classes", false]], "num_classes (dgl.data.coragraphdataset attribute)": [[154, "dgl.data.CoraGraphDataset.num_classes", false]], "num_classes (dgl.data.cornelldataset attribute)": [[155, "dgl.data.CornellDataset.num_classes", false]], "num_classes (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_classes", false]], "num_classes (dgl.data.flickrdataset attribute)": [[160, "dgl.data.FlickrDataset.num_classes", false]], "num_classes (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.num_classes", false]], "num_classes (dgl.data.gindataset attribute)": [[165, "dgl.data.GINDataset.num_classes", false]], "num_classes (dgl.data.karateclubdataset attribute)": [[167, "dgl.data.KarateClubDataset.num_classes", false]], "num_classes (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_classes", false]], "num_classes (dgl.data.minesweeperdataset attribute)": [[171, "dgl.data.MinesweeperDataset.num_classes", false]], "num_classes (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_classes", false]], "num_classes (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.num_classes", false]], "num_classes (dgl.data.patterndataset attribute)": [[174, "dgl.data.PATTERNDataset.num_classes", false]], "num_classes (dgl.data.pubmedgraphdataset attribute)": [[176, "dgl.data.PubmedGraphDataset.num_classes", false]], "num_classes (dgl.data.questionsdataset attribute)": [[180, "dgl.data.QuestionsDataset.num_classes", false]], "num_classes (dgl.data.redditdataset attribute)": [[181, "dgl.data.RedditDataset.num_classes", false]], "num_classes (dgl.data.romanempiredataset attribute)": [[182, "dgl.data.RomanEmpireDataset.num_classes", false]], "num_classes (dgl.data.squirreldataset attribute)": [[185, "dgl.data.SquirrelDataset.num_classes", false]], "num_classes (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.num_classes", false]], "num_classes (dgl.data.texasdataset attribute)": [[187, "dgl.data.TexasDataset.num_classes", false]], "num_classes (dgl.data.tolokersdataset attribute)": [[188, "dgl.data.TolokersDataset.num_classes", false]], "num_classes (dgl.data.treecycledataset attribute)": [[189, "dgl.data.TreeCycleDataset.num_classes", false]], "num_classes (dgl.data.treegriddataset attribute)": [[190, "dgl.data.TreeGridDataset.num_classes", false]], "num_classes (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_classes", false]], "num_classes (dgl.data.wikicsdataset attribute)": [[192, "dgl.data.WikiCSDataset.num_classes", false]], "num_classes (dgl.data.wisconsindataset attribute)": [[193, "dgl.data.WisconsinDataset.num_classes", false]], "num_classes (dgl.data.yelpdataset attribute)": [[194, "dgl.data.YelpDataset.num_classes", false]], "num_dst_nodes() (dgl.dglgraph method)": [[79, "dgl.DGLGraph.num_dst_nodes", false]], "num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.num_edges", false]], "num_edges (dgl.graphbolt.samplinggraph property)": [[311, "dgl.graphbolt.SamplingGraph.num_edges", false]], "num_edges() (dgl.dglgraph method)": [[80, "dgl.DGLGraph.num_edges", false]], "num_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_edges", false]], "num_graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_graphs", false]], "num_graphs (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_graphs", false]], "num_labels (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_labels", false]], "num_labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.num_labels", false]], "num_labels (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_labels", false]], "num_labels (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_labels", false]], "num_labels (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_labels", false]], "num_labels (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_labels", false]], "num_layers() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.num_layers", false]], "num_nodes (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_nodes", false]], "num_nodes (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_nodes", false]], "num_nodes (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_nodes", false]], "num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.num_nodes", false]], "num_nodes (dgl.graphbolt.samplinggraph property)": [[311, "dgl.graphbolt.SamplingGraph.num_nodes", false]], "num_nodes() (dgl.dglgraph method)": [[81, "dgl.DGLGraph.num_nodes", false]], "num_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_nodes", false]], "num_partitions() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.num_partitions", false]], "num_rels (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_rels", false]], "num_rels (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_rels", false]], "num_rels (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_rels", false]], "num_src_nodes() (dgl.dglgraph method)": [[82, "dgl.DGLGraph.num_src_nodes", false]], "num_tasks (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_tasks", false]], "num_tasks (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_tasks", false]], "num_tasks (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_tasks", false]], "num_tasks (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_tasks", false]], "number_of_dst_nodes() (dgl.dglgraph method)": [[83, "dgl.DGLGraph.number_of_dst_nodes", false]], "number_of_edges() (dgl.dglgraph method)": [[84, "dgl.DGLGraph.number_of_edges", false]], "number_of_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_edges", false]], "number_of_nodes() (dgl.dglgraph method)": [[85, "dgl.DGLGraph.number_of_nodes", false]], "number_of_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_nodes", false]], "number_of_src_nodes() (dgl.dglgraph method)": [[86, "dgl.DGLGraph.number_of_src_nodes", false]], "ondiskdataset (class in dgl.graphbolt)": [[308, "dgl.graphbolt.OnDiskDataset", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraph property)": [[309, "dgl.graphbolt.SampledSubgraph.original_column_node_ids", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[310, "dgl.graphbolt.SampledSubgraphImpl.original_column_node_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraph property)": [[309, "dgl.graphbolt.SampledSubgraph.original_edge_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[310, "dgl.graphbolt.SampledSubgraphImpl.original_edge_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraph property)": [[309, "dgl.graphbolt.SampledSubgraph.original_row_node_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[310, "dgl.graphbolt.SampledSubgraphImpl.original_row_node_ids", false]], "out_degrees() (dgl.dglgraph method)": [[87, "dgl.DGLGraph.out_degrees", false]], "out_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.out_degrees", false]], "out_edges() (dgl.dglgraph method)": [[88, "dgl.DGLGraph.out_edges", false]], "out_subgraph() (in module dgl)": [[542, "dgl.out_subgraph", false]], "pack_traces() (in module dgl.sampling)": [[563, "dgl.sampling.pack_traces", false]], "part_id (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.part_id", false]], "part_policy (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.part_policy", false]], "partid (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.partid", false]], "partid2eids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2eids", false]], "partid2nids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2nids", false]], "partition_book (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.partition_book", false]], "partition_graph() (in module dgl.distributed)": [[239, "dgl.distributed.partition_graph", false]], "partition_graph_with_halo() (in module dgl)": [[543, "dgl.partition_graph_with_halo", false]], "partitionpolicy (class in dgl.distributed)": [[4, "dgl.distributed.PartitionPolicy", false]], "pathencoder (class in dgl.nn.pytorch.graph_transformer)": [[443, "dgl.nn.pytorch.graph_transformer.PathEncoder", false]], "pathencoder (class in dgl.nn.pytorch.gt)": [[451, "dgl.nn.pytorch.gt.PathEncoder", false]], "patterndataset (class in dgl.data)": [[174, "dgl.data.PATTERNDataset", false]], "persourceuniform (class in dgl.dataloading.negative_sampler)": [[227, "dgl.dataloading.negative_sampler.PerSourceUniform", false]], "pgexplainer (class in dgl.nn.pytorch.explain)": [[425, "dgl.nn.pytorch.explain.PGExplainer", false]], "pin_memory_() (dgl.dglgraph method)": [[89, "dgl.DGLGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeaturestore method)": [[315, "dgl.graphbolt.TorchBasedFeatureStore.pin_memory_", false]], "pinsagesampler (class in dgl.sampling)": [[560, "dgl.sampling.PinSAGESampler", false]], "pnaconv (class in dgl.nn.pytorch.conv)": [[414, "dgl.nn.pytorch.conv.PNAConv", false]], "policy_str (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.policy_str", false]], "positive_node_pairs (dgl.graphbolt.minibatch property)": [[304, "dgl.graphbolt.MiniBatch.positive_node_pairs", false]], "power() (in module dgl.sparse)": [[620, "dgl.sparse.power", false]], "ppidataset (class in dgl.data)": [[175, "dgl.data.PPIDataset", false]], "ppr (class in dgl.transforms)": [[666, "dgl.transforms.PPR", false]], "predecessors() (dgl.dglgraph method)": [[90, "dgl.DGLGraph.predecessors", false]], "predict_category (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.predict_category", false]], "predict_category (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.predict_category", false]], "predict_category (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.predict_category", false]], "predict_category (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.predict_category", false]], "pretrained_emb (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.pretrained_emb", false]], "prop_edges() (dgl.dglgraph method)": [[91, "dgl.DGLGraph.prop_edges", false]], "prop_edges() (in module dgl)": [[544, "dgl.prop_edges", false]], "prop_edges_dfs() (in module dgl)": [[545, "dgl.prop_edges_dfs", false]], "prop_nodes() (dgl.dglgraph method)": [[92, "dgl.DGLGraph.prop_nodes", false]], "prop_nodes() (in module dgl)": [[546, "dgl.prop_nodes", false]], "prop_nodes_bfs() (in module dgl)": [[547, "dgl.prop_nodes_bfs", false]], "prop_nodes_topo() (in module dgl)": [[548, "dgl.prop_nodes_topo", false]], "pubmedgraphdataset (class in dgl.data)": [[176, "dgl.data.PubmedGraphDataset", false]], "pull() (dgl.dglgraph method)": [[93, "dgl.DGLGraph.pull", false]], "push() (dgl.dglgraph method)": [[94, "dgl.DGLGraph.push", false]], "qm7bdataset (class in dgl.data)": [[177, "dgl.data.QM7bDataset", false]], "qm9dataset (class in dgl.data)": [[178, "dgl.data.QM9Dataset", false]], "qm9edgedataset (class in dgl.data)": [[179, "dgl.data.QM9EdgeDataset", false]], "questionsdataset (class in dgl.data)": [[180, "dgl.data.QuestionsDataset", false]], "radius_graph() (in module dgl)": [[549, "dgl.radius_graph", false]], "radiusgraph (class in dgl.nn.pytorch.factory)": [[428, "dgl.nn.pytorch.factory.RadiusGraph", false]], "rand_bipartite() (in module dgl)": [[550, "dgl.rand_bipartite", false]], "rand_graph() (in module dgl)": [[551, "dgl.rand_graph", false]], "random_walk() (in module dgl.sampling)": [[564, "dgl.sampling.random_walk", false]], "random_walk_pe() (in module dgl)": [[552, "dgl.random_walk_pe", false]], "randomwalkpe (class in dgl.transforms)": [[667, "dgl.transforms.RandomWalkPE", false]], "rank() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.rank", false]], "raw_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_dir", false]], "raw_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_path", false]], "read() (dgl.graphbolt.basicfeaturestore method)": [[287, "dgl.graphbolt.BasicFeatureStore.read", false]], "read() (dgl.graphbolt.feature method)": [[293, "dgl.graphbolt.Feature.read", false]], "read() (dgl.graphbolt.featurestore method)": [[295, "dgl.graphbolt.FeatureStore.read", false]], "read() (dgl.graphbolt.gpucachedfeature method)": [[297, "dgl.graphbolt.GPUCachedFeature.read", false]], "read() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.read", false]], "readout_edges() (in module dgl)": [[553, "dgl.readout_edges", false]], "readout_nodes() (in module dgl)": [[554, "dgl.readout_nodes", false]], "redditdataset (class in dgl.data)": [[181, "dgl.data.RedditDataset", false]], "reduce() (dgl.sparse.sparsematrix method)": [[596, "dgl.sparse.SparseMatrix.reduce", false]], "rel_emb (dgl.nn.pytorch.link.transe attribute)": [[455, "dgl.nn.pytorch.link.TransE.rel_emb", false]], "rel_emb (dgl.nn.pytorch.link.transr attribute)": [[456, "dgl.nn.pytorch.link.TransR.rel_emb", false]], "rel_project (dgl.nn.pytorch.link.transr attribute)": [[456, "dgl.nn.pytorch.link.TransR.rel_project", false]], "relgraphconv (class in dgl.nn.mxnet.conv)": [[367, "dgl.nn.mxnet.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.pytorch.conv)": [[415, "dgl.nn.pytorch.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.tensorflow.conv)": [[467, "dgl.nn.tensorflow.conv.RelGraphConv", false]], "remove_edges() (dgl.dglgraph method)": [[95, "dgl.DGLGraph.remove_edges", false]], "remove_edges() (in module dgl)": [[555, "dgl.remove_edges", false]], "remove_nodes() (dgl.dglgraph method)": [[96, "dgl.DGLGraph.remove_nodes", false]], "remove_nodes() (in module dgl)": [[556, "dgl.remove_nodes", false]], "remove_self_loop() (dgl.dglgraph method)": [[97, "dgl.DGLGraph.remove_self_loop", false]], "remove_self_loop() (in module dgl)": [[557, "dgl.remove_self_loop", false]], "removeselfloop (class in dgl.transforms)": [[668, "dgl.transforms.RemoveSelfLoop", false]], "reorder_graph() (dgl.dglgraph method)": [[98, "dgl.DGLGraph.reorder_graph", false]], "reorder_graph() (in module dgl)": [[558, "dgl.reorder_graph", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[389, "dgl.nn.pytorch.conv.CuGraphGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[390, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[391, "dgl.nn.pytorch.conv.CuGraphSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densechebconv method)": [[393, "dgl.nn.pytorch.conv.DenseChebConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densegraphconv method)": [[394, "dgl.nn.pytorch.conv.DenseGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densesageconv method)": [[395, "dgl.nn.pytorch.conv.DenseSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.edgegatconv method)": [[400, "dgl.nn.pytorch.conv.EdgeGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.egatconv method)": [[397, "dgl.nn.pytorch.conv.EGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatconv method)": [[402, "dgl.nn.pytorch.conv.GATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[409, "dgl.nn.pytorch.conv.GatedGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatv2conv method)": [[403, "dgl.nn.pytorch.conv.GATv2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gcn2conv method)": [[404, "dgl.nn.pytorch.conv.GCN2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gmmconv method)": [[407, "dgl.nn.pytorch.conv.GMMConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.graphconv method)": [[410, "dgl.nn.pytorch.conv.GraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.nnconv method)": [[413, "dgl.nn.pytorch.conv.NNConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sageconv method)": [[416, "dgl.nn.pytorch.conv.SAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sgconv method)": [[417, "dgl.nn.pytorch.conv.SGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.tagconv method)": [[418, "dgl.nn.pytorch.conv.TAGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.deepwalk method)": [[378, "dgl.nn.pytorch.DeepWalk.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.glob.set2set method)": [[433, "dgl.nn.pytorch.glob.Set2Set.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.gt.biasedmha method)": [[446, "dgl.nn.pytorch.gt.BiasedMHA.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.heteroembedding method)": [[379, "dgl.nn.pytorch.HeteroEmbedding.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.edgepredictor method)": [[454, "dgl.nn.pytorch.link.EdgePredictor.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transe method)": [[455, "dgl.nn.pytorch.link.TransE.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transr method)": [[456, "dgl.nn.pytorch.link.TransR.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.metapath2vec method)": [[382, "dgl.nn.pytorch.MetaPath2Vec.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.typedlinear method)": [[383, "dgl.nn.pytorch.TypedLinear.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[458, "dgl.nn.pytorch.utils.JumpingKnowledge.reset_parameters", false]], "reverse() (dgl.dglgraph method)": [[99, "dgl.DGLGraph.reverse", false]], "reverse() (in module dgl)": [[559, "dgl.reverse", false]], "romanempiredataset (class in dgl.data)": [[182, "dgl.data.RomanEmpireDataset", false]], "row (dgl.sparse.sparsematrix property)": [[597, "dgl.sparse.SparseMatrix.row", false]], "rowfeatnormalizer (class in dgl.transforms)": [[669, "dgl.transforms.RowFeatNormalizer", false]], "sageconv (class in dgl.nn.mxnet.conv)": [[368, "dgl.nn.mxnet.conv.SAGEConv", false]], "sageconv (class in dgl.nn.pytorch.conv)": [[416, "dgl.nn.pytorch.conv.SAGEConv", false]], "sageconv (class in dgl.nn.tensorflow.conv)": [[468, "dgl.nn.tensorflow.conv.SAGEConv", false]], "saintsampler (class in dgl.dataloading)": [[217, "dgl.dataloading.SAINTSampler", false]], "sample_etype_neighbors() (in module dgl.distributed)": [[240, "dgl.distributed.sample_etype_neighbors", false]], "sample_labors() (in module dgl.sampling)": [[565, "dgl.sampling.sample_labors", false]], "sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.sample_layer_neighbors", false]], "sample_negative_edges_uniform() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.sample_negative_edges_uniform", false]], "sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.sample_neighbors", false]], "sample_neighbors() (in module dgl.distributed)": [[241, "dgl.distributed.sample_neighbors", false]], "sample_neighbors() (in module dgl.sampling)": [[566, "dgl.sampling.sample_neighbors", false]], "sample_neighbors_biased() (in module dgl.sampling)": [[567, "dgl.sampling.sample_neighbors_biased", false]], "sample_subgraphs() (dgl.graphbolt.insubgraphsampler method)": [[298, "dgl.graphbolt.InSubgraphSampler.sample_subgraphs", false]], "sample_subgraphs() (dgl.graphbolt.neighborsampler method)": [[307, "dgl.graphbolt.NeighborSampler.sample_subgraphs", false]], "sample_subgraphs() (dgl.graphbolt.subgraphsampler method)": [[312, "dgl.graphbolt.SubgraphSampler.sample_subgraphs", false]], "sampled_csc (dgl.graphbolt.sampledsubgraph property)": [[309, "dgl.graphbolt.SampledSubgraph.sampled_csc", false]], "sampled_csc (dgl.graphbolt.sampledsubgraphimpl attribute)": [[310, "dgl.graphbolt.SampledSubgraphImpl.sampled_csc", false]], "sampled_subgraphs (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.sampled_subgraphs", false]], "sampledsubgraph (class in dgl.graphbolt)": [[309, "dgl.graphbolt.SampledSubgraph", false]], "sampledsubgraphimpl (class in dgl.graphbolt)": [[310, "dgl.graphbolt.SampledSubgraphImpl", false]], "sampler (class in dgl.dataloading)": [[218, "dgl.dataloading.Sampler", false]], "samplinggraph (class in dgl.graphbolt)": [[311, "dgl.graphbolt.SamplingGraph", false]], "save() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.save", false]], "save() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.save", false]], "save_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_dir", false]], "save_graphs() (in module dgl)": [[569, "dgl.save_graphs", false]], "save_info (class in dgl.data.utils)": [[206, "dgl.data.utils.save_info", false]], "save_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_path", false]], "sbmmixturedataset (class in dgl.data)": [[183, "dgl.data.SBMMixtureDataset", false]], "sddmm() (in module dgl.sparse)": [[621, "dgl.sparse.sddmm", false]], "seed (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.seed", false]], "seed() (in module dgl)": [[570, "dgl.seed", false]], "seed() (in module dgl.graphbolt)": [[326, "dgl.graphbolt.seed", false]], "seed_nodes (dgl.graphbolt.minibatch attribute)": [[304, "dgl.graphbolt.MiniBatch.seed_nodes", false]], "segment_mm() (in module dgl.ops)": [[504, "dgl.ops.segment_mm", false]], "segment_reduce() (in module dgl.ops)": [[505, "dgl.ops.segment_reduce", false]], "segmented_knn_graph() (in module dgl)": [[571, "dgl.segmented_knn_graph", false]], "segmentedknngraph (class in dgl.nn.pytorch.factory)": [[429, "dgl.nn.pytorch.factory.SegmentedKNNGraph", false]], "select_topk() (in module dgl.sampling)": [[568, "dgl.sampling.select_topk", false]], "send_and_recv() (dgl.dglgraph method)": [[100, "dgl.DGLGraph.send_and_recv", false]], "sequential (class in dgl.nn.mxnet.utils)": [[377, "dgl.nn.mxnet.utils.Sequential", false]], "sequential (class in dgl.nn.pytorch.utils)": [[460, "dgl.nn.pytorch.utils.Sequential", false]], "set2set (class in dgl.nn.mxnet.glob)": [[374, "dgl.nn.mxnet.glob.Set2Set", false]], "set2set (class in dgl.nn.pytorch.glob)": [[433, "dgl.nn.pytorch.glob.Set2Set", false]], "set_batch_num_edges() (dgl.dglgraph method)": [[101, "dgl.DGLGraph.set_batch_num_edges", false]], "set_batch_num_nodes() (dgl.dglgraph method)": [[102, "dgl.DGLGraph.set_batch_num_nodes", false]], "set_dst_lazy_features (class in dgl.dataloading.base)": [[222, "dgl.dataloading.base.set_dst_lazy_features", false]], "set_edge_features() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.set_edge_features", false]], "set_edge_lazy_features (class in dgl.dataloading.base)": [[223, "dgl.dataloading.base.set_edge_lazy_features", false]], "set_node_features() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.set_node_features", false]], "set_node_lazy_features (class in dgl.dataloading.base)": [[224, "dgl.dataloading.base.set_node_lazy_features", false]], "set_src_lazy_features (class in dgl.dataloading.base)": [[225, "dgl.dataloading.base.set_src_lazy_features", false]], "settransformerdecoder (class in dgl.nn.pytorch.glob)": [[434, "dgl.nn.pytorch.glob.SetTransformerDecoder", false]], "settransformerencoder (class in dgl.nn.pytorch.glob)": [[435, "dgl.nn.pytorch.glob.SetTransformerEncoder", false]], "sgconv (class in dgl.nn.mxnet.conv)": [[369, "dgl.nn.mxnet.conv.SGConv", false]], "sgconv (class in dgl.nn.pytorch.conv)": [[417, "dgl.nn.pytorch.conv.SGConv", false]], "sgconv (class in dgl.nn.tensorflow.conv)": [[469, "dgl.nn.tensorflow.conv.SGConv", false]], "shadowkhopsampler (class in dgl.dataloading)": [[219, "dgl.dataloading.ShaDowKHopSampler", false]], "shape (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.shape", false]], "shape (dgl.sparse.sparsematrix property)": [[598, "dgl.sparse.SparseMatrix.shape", false]], "shared_memory() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.shared_memory", false]], "shared_tensor() (in module dgl.multiprocessing.pytorch)": [[351, "dgl.multiprocessing.pytorch.shared_tensor", false]], "shortest_dist() (in module dgl)": [[572, "dgl.shortest_dist", false]], "signdiffusion (class in dgl.transforms)": [[670, "dgl.transforms.SIGNDiffusion", false]], "size() (dgl.graphbolt.basicfeaturestore method)": [[287, "dgl.graphbolt.BasicFeatureStore.size", false]], "size() (dgl.graphbolt.feature method)": [[293, "dgl.graphbolt.Feature.size", false]], "size() (dgl.graphbolt.featurestore method)": [[295, "dgl.graphbolt.FeatureStore.size", false]], "size() (dgl.graphbolt.gpucachedfeature method)": [[297, "dgl.graphbolt.GPUCachedFeature.size", false]], "size() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.size", false]], "slice_batch() (in module dgl)": [[573, "dgl.slice_batch", false]], "smax() (dgl.sparse.sparsematrix method)": [[599, "dgl.sparse.SparseMatrix.smax", false]], "smean() (dgl.sparse.sparsematrix method)": [[600, "dgl.sparse.SparseMatrix.smean", false]], "smin() (dgl.sparse.sparsematrix method)": [[601, "dgl.sparse.SparseMatrix.smin", false]], "softmax() (dgl.sparse.sparsematrix method)": [[602, "dgl.sparse.SparseMatrix.softmax", false]], "softmax() (in module dgl.sparse)": [[622, "dgl.sparse.softmax", false]], "softmax_edges() (in module dgl)": [[574, "dgl.softmax_edges", false]], "softmax_nodes() (in module dgl)": [[575, "dgl.softmax_nodes", false]], "sort_csc_by_tag() (in module dgl)": [[576, "dgl.sort_csc_by_tag", false]], "sort_csr_by_tag() (in module dgl)": [[577, "dgl.sort_csr_by_tag", false]], "sortpooling (class in dgl.nn.mxnet.glob)": [[375, "dgl.nn.mxnet.glob.SortPooling", false]], "sortpooling (class in dgl.nn.pytorch.glob)": [[436, "dgl.nn.pytorch.glob.SortPooling", false]], "sortpooling (class in dgl.nn.tensorflow.glob)": [[474, "dgl.nn.tensorflow.glob.SortPooling", false]], "sp_add_v() (in module dgl.sparse)": [[623, "dgl.sparse.sp_add_v", false]], "sp_broadcast_v() (in module dgl.sparse)": [[624, "dgl.sparse.sp_broadcast_v", false]], "sp_div_v() (in module dgl.sparse)": [[625, "dgl.sparse.sp_div_v", false]], "sp_mul_v() (in module dgl.sparse)": [[626, "dgl.sparse.sp_mul_v", false]], "sp_sub_v() (in module dgl.sparse)": [[627, "dgl.sparse.sp_sub_v", false]], "sparseadagrad (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdagrad", false]], "sparseadagrad (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdagrad", false]], "sparseadam (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdam", false]], "sparseadam (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdam", false]], "sparsematrix (class in dgl.sparse)": [[12, "dgl.sparse.SparseMatrix", false]], "spatialencoder (class in dgl.nn.pytorch.graph_transformer)": [[444, "dgl.nn.pytorch.graph_transformer.SpatialEncoder", false]], "spatialencoder (class in dgl.nn.pytorch.gt)": [[452, "dgl.nn.pytorch.gt.SpatialEncoder", false]], "spatialencoder3d (class in dgl.nn.pytorch.graph_transformer)": [[445, "dgl.nn.pytorch.graph_transformer.SpatialEncoder3d", false]], "spatialencoder3d (class in dgl.nn.pytorch.gt)": [[453, "dgl.nn.pytorch.gt.SpatialEncoder3d", false]], "split_dataset (class in dgl.data.utils)": [[207, "dgl.data.utils.split_dataset", false]], "spmatrix() (in module dgl.sparse)": [[628, "dgl.sparse.spmatrix", false]], "spmm() (in module dgl.sparse)": [[629, "dgl.sparse.spmm", false]], "spspmm() (in module dgl.sparse)": [[630, "dgl.sparse.spspmm", false]], "squirreldataset (class in dgl.data)": [[185, "dgl.data.SquirrelDataset", false]], "src (dgl.udf.edgebatch property)": [[678, "dgl.udf.EdgeBatch.src", false]], "srcdata (dgl.dglgraph property)": [[103, "dgl.DGLGraph.srcdata", false]], "srcnodes (dgl.dglgraph property)": [[104, "dgl.DGLGraph.srcnodes", false]], "srctypes (dgl.dglgraph property)": [[105, "dgl.DGLGraph.srctypes", false]], "sstdataset (class in dgl.data)": [[184, "dgl.data.SSTDataset", false]], "start_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.start_time", false]], "step() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.step", false]], "step() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.step", false]], "sub() (in module dgl.sparse)": [[631, "dgl.sparse.sub", false]], "subgraph() (dgl.dglgraph method)": [[106, "dgl.DGLGraph.subgraph", false]], "subgraphsampler (class in dgl.graphbolt)": [[312, "dgl.graphbolt.SubgraphSampler", false]], "subgraphx (class in dgl.nn.pytorch.explain)": [[426, "dgl.nn.pytorch.explain.SubgraphX", false]], "subset (class in dgl.data.utils)": [[196, "dgl.data.utils.Subset", false]], "successors() (dgl.dglgraph method)": [[107, "dgl.DGLGraph.successors", false]], "sum() (dgl.sparse.sparsematrix method)": [[603, "dgl.sparse.SparseMatrix.sum", false]], "sum() (in module dgl.function)": [[265, "dgl.function.sum", false]], "sum_edges() (in module dgl)": [[633, "dgl.sum_edges", false]], "sum_nodes() (in module dgl)": [[634, "dgl.sum_nodes", false]], "sumpooling (class in dgl.nn.mxnet.glob)": [[376, "dgl.nn.mxnet.glob.SumPooling", false]], "sumpooling (class in dgl.nn.pytorch.glob)": [[437, "dgl.nn.pytorch.glob.SumPooling", false]], "sumpooling (class in dgl.nn.tensorflow.glob)": [[475, "dgl.nn.tensorflow.glob.SumPooling", false]], "svd_pe() (in module dgl)": [[635, "dgl.svd_pe", false]], "svdpe (class in dgl.transforms)": [[671, "dgl.transforms.SVDPE", false]], "t (dgl.sparse.sparsematrix property)": [[578, "dgl.sparse.SparseMatrix.T", false]], "t() (dgl.sparse.sparsematrix method)": [[604, "dgl.sparse.SparseMatrix.t", false]], "tagconv (class in dgl.nn.mxnet.conv)": [[370, "dgl.nn.mxnet.conv.TAGConv", false]], "tagconv (class in dgl.nn.pytorch.conv)": [[418, "dgl.nn.pytorch.conv.TAGConv", false]], "task (class in dgl.graphbolt)": [[313, "dgl.graphbolt.Task", false]], "tasks (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.tasks", false]], "tasks (dgl.graphbolt.legacydataset property)": [[303, "dgl.graphbolt.LegacyDataset.tasks", false]], "tasks (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.tasks", false]], "temporal_sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_neighbors", false]], "test_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.test_edges", false]], "test_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.test_idx", false]], "test_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.test_idx", false]], "test_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.test_mask", false]], "test_set (dgl.graphbolt.task property)": [[313, "dgl.graphbolt.Task.test_set", false]], "texasdataset (class in dgl.data)": [[187, "dgl.data.TexasDataset", false]], "to() (dgl.dglgraph method)": [[108, "dgl.DGLGraph.to", false]], "to() (dgl.graphbolt.fusedcscsamplinggraph method)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.to", false]], "to() (dgl.graphbolt.minibatch method)": [[304, "dgl.graphbolt.MiniBatch.to", false]], "to() (dgl.graphbolt.sampledsubgraph method)": [[309, "dgl.graphbolt.SampledSubgraph.to", false]], "to() (dgl.graphbolt.samplinggraph method)": [[311, "dgl.graphbolt.SamplingGraph.to", false]], "to() (dgl.sparse.sparsematrix method)": [[605, "dgl.sparse.SparseMatrix.to", false]], "to_bidirected() (in module dgl)": [[636, "dgl.to_bidirected", false]], "to_block() (in module dgl)": [[637, "dgl.to_block", false]], "to_canonical_etype() (dgl.dglgraph method)": [[109, "dgl.DGLGraph.to_canonical_etype", false]], "to_cugraph() (dgl.dglgraph method)": [[110, "dgl.DGLGraph.to_cugraph", false]], "to_cugraph() (in module dgl)": [[638, "dgl.to_cugraph", false]], "to_dense() (dgl.sparse.sparsematrix method)": [[606, "dgl.sparse.SparseMatrix.to_dense", false]], "to_double() (in module dgl)": [[639, "dgl.to_double", false]], "to_float() (in module dgl)": [[640, "dgl.to_float", false]], "to_half() (in module dgl)": [[641, "dgl.to_half", false]], "to_heterogeneous() (in module dgl)": [[642, "dgl.to_heterogeneous", false]], "to_homogeneous() (in module dgl)": [[643, "dgl.to_homogeneous", false]], "to_local() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_local", false]], "to_networkx() (in module dgl)": [[644, "dgl.to_networkx", false]], "to_partid() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_partid", false]], "to_simple() (dgl.dglgraph method)": [[111, "dgl.DGLGraph.to_simple", false]], "to_simple() (in module dgl)": [[645, "dgl.to_simple", false]], "to_simple_graph() (in module dgl)": [[646, "dgl.to_simple_graph", false]], "tolevi (class in dgl.transforms)": [[672, "dgl.transforms.ToLevi", false]], "tolokersdataset (class in dgl.data)": [[188, "dgl.data.TolokersDataset", false]], "topk_edges() (in module dgl)": [[647, "dgl.topk_edges", false]], "topk_nodes() (in module dgl)": [[648, "dgl.topk_nodes", false]], "topological_nodes_generator() (in module dgl)": [[649, "dgl.topological_nodes_generator", false]], "torchbasedfeature (class in dgl.graphbolt)": [[314, "dgl.graphbolt.TorchBasedFeature", false]], "torchbasedfeaturestore (class in dgl.graphbolt)": [[315, "dgl.graphbolt.TorchBasedFeatureStore", false]], "tosimple (class in dgl.transforms)": [[673, "dgl.transforms.ToSimple", false]], "total_num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_edges", false]], "total_num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_nodes", false]], "train_graph (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.train_graph", false]], "train_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.train_idx", false]], "train_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.train_idx", false]], "train_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.train_mask", false]], "train_set (dgl.graphbolt.task property)": [[313, "dgl.graphbolt.Task.train_set", false]], "train_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.train_size", false]], "train_step() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[423, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step", false]], "train_step() (dgl.nn.pytorch.explain.pgexplainer method)": [[425, "dgl.nn.pytorch.explain.PGExplainer.train_step", false]], "train_step_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[423, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step_node", false]], "train_step_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[425, "dgl.nn.pytorch.explain.PGExplainer.train_step_node", false]], "transe (class in dgl.nn.pytorch.link)": [[455, "dgl.nn.pytorch.link.TransE", false]], "transpose() (dgl.sparse.sparsematrix method)": [[607, "dgl.sparse.SparseMatrix.transpose", false]], "transr (class in dgl.nn.pytorch.link)": [[456, "dgl.nn.pytorch.link.TransR", false]], "treecycledataset (class in dgl.data)": [[189, "dgl.data.TreeCycleDataset", false]], "treegriddataset (class in dgl.data)": [[190, "dgl.data.TreeGridDataset", false]], "tudataset (class in dgl.data)": [[186, "dgl.data.TUDataset", false]], "twirlsconv (class in dgl.nn.pytorch.conv)": [[419, "dgl.nn.pytorch.conv.TWIRLSConv", false]], "twirlsunfoldingandattention (class in dgl.nn.pytorch.conv)": [[420, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", false]], "type_per_edge (dgl.graphbolt.fusedcscsamplinggraph property)": [[296, "dgl.graphbolt.FusedCSCSamplingGraph.type_per_edge", false]], "typedlinear (class in dgl.nn.pytorch)": [[383, "dgl.nn.pytorch.TypedLinear", false]], "u_add_e() (in module dgl.function)": [[266, "dgl.function.u_add_e", false]], "u_add_e() (in module dgl.ops)": [[506, "dgl.ops.u_add_e", false]], "u_add_e_max() (in module dgl.ops)": [[507, "dgl.ops.u_add_e_max", false]], "u_add_e_mean() (in module dgl.ops)": [[508, "dgl.ops.u_add_e_mean", false]], "u_add_e_min() (in module dgl.ops)": [[509, "dgl.ops.u_add_e_min", false]], "u_add_e_sum() (in module dgl.ops)": [[510, "dgl.ops.u_add_e_sum", false]], "u_add_v() (in module dgl.function)": [[267, "dgl.function.u_add_v", false]], "u_add_v() (in module dgl.ops)": [[511, "dgl.ops.u_add_v", false]], "u_div_e() (in module dgl.function)": [[268, "dgl.function.u_div_e", false]], "u_div_e() (in module dgl.ops)": [[512, "dgl.ops.u_div_e", false]], "u_div_e_max() (in module dgl.ops)": [[513, "dgl.ops.u_div_e_max", false]], "u_div_e_mean() (in module dgl.ops)": [[514, "dgl.ops.u_div_e_mean", false]], "u_div_e_min() (in module dgl.ops)": [[515, "dgl.ops.u_div_e_min", false]], "u_div_e_sum() (in module dgl.ops)": [[516, "dgl.ops.u_div_e_sum", false]], "u_div_v() (in module dgl.function)": [[269, "dgl.function.u_div_v", false]], "u_div_v() (in module dgl.ops)": [[517, "dgl.ops.u_div_v", false]], "u_dot_e() (in module dgl.function)": [[270, "dgl.function.u_dot_e", false]], "u_dot_e() (in module dgl.ops)": [[518, "dgl.ops.u_dot_e", false]], "u_dot_v() (in module dgl.function)": [[271, "dgl.function.u_dot_v", false]], "u_dot_v() (in module dgl.ops)": [[519, "dgl.ops.u_dot_v", false]], "u_mul_e() (in module dgl.function)": [[272, "dgl.function.u_mul_e", false]], "u_mul_e() (in module dgl.ops)": [[520, "dgl.ops.u_mul_e", false]], "u_mul_e_max() (in module dgl.ops)": [[521, "dgl.ops.u_mul_e_max", false]], "u_mul_e_mean() (in module dgl.ops)": [[522, "dgl.ops.u_mul_e_mean", false]], "u_mul_e_min() (in module dgl.ops)": [[523, "dgl.ops.u_mul_e_min", false]], "u_mul_e_sum() (in module dgl.ops)": [[524, "dgl.ops.u_mul_e_sum", false]], "u_mul_v() (in module dgl.function)": [[273, "dgl.function.u_mul_v", false]], "u_mul_v() (in module dgl.ops)": [[525, "dgl.ops.u_mul_v", false]], "u_sub_e() (in module dgl.function)": [[274, "dgl.function.u_sub_e", false]], "u_sub_e() (in module dgl.ops)": [[526, "dgl.ops.u_sub_e", false]], "u_sub_e_max() (in module dgl.ops)": [[527, "dgl.ops.u_sub_e_max", false]], "u_sub_e_mean() (in module dgl.ops)": [[528, "dgl.ops.u_sub_e_mean", false]], "u_sub_e_min() (in module dgl.ops)": [[529, "dgl.ops.u_sub_e_min", false]], "u_sub_e_sum() (in module dgl.ops)": [[530, "dgl.ops.u_sub_e_sum", false]], "u_sub_v() (in module dgl.function)": [[275, "dgl.function.u_sub_v", false]], "u_sub_v() (in module dgl.ops)": [[531, "dgl.ops.u_sub_v", false]], "unbatch() (in module dgl)": [[683, "dgl.unbatch", false]], "uniform (in module dgl.dataloading.negative_sampler)": [[228, "dgl.dataloading.negative_sampler.Uniform", false]], "uniformnegativesampler (class in dgl.graphbolt)": [[316, "dgl.graphbolt.UniformNegativeSampler", false]], "unique_and_compact() (in module dgl.graphbolt)": [[327, "dgl.graphbolt.unique_and_compact", false]], "unique_and_compact_csc_formats() (in module dgl.graphbolt)": [[328, "dgl.graphbolt.unique_and_compact_csc_formats", false]], "unpin_memory_() (dgl.dglgraph method)": [[112, "dgl.DGLGraph.unpin_memory_", false]], "update() (dgl.graphbolt.basicfeaturestore method)": [[287, "dgl.graphbolt.BasicFeatureStore.update", false]], "update() (dgl.graphbolt.feature method)": [[293, "dgl.graphbolt.Feature.update", false]], "update() (dgl.graphbolt.featurestore method)": [[295, "dgl.graphbolt.FeatureStore.update", false]], "update() (dgl.graphbolt.gpucachedfeature method)": [[297, "dgl.graphbolt.GPUCachedFeature.update", false]], "update() (dgl.graphbolt.torchbasedfeature method)": [[314, "dgl.graphbolt.TorchBasedFeature.update", false]], "update_all() (dgl.dglgraph method)": [[113, "dgl.DGLGraph.update_all", false]], "url (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.url", false]], "use_libxsmm() (in module dgl)": [[684, "dgl.use_libxsmm", false]], "v_add_e() (in module dgl.function)": [[276, "dgl.function.v_add_e", false]], "v_add_e() (in module dgl.ops)": [[532, "dgl.ops.v_add_e", false]], "v_add_u() (in module dgl.function)": [[277, "dgl.function.v_add_u", false]], "v_add_u() (in module dgl.ops)": [[533, "dgl.ops.v_add_u", false]], "v_div_e() (in module dgl.function)": [[278, "dgl.function.v_div_e", false]], "v_div_e() (in module dgl.ops)": [[534, "dgl.ops.v_div_e", false]], "v_div_u() (in module dgl.function)": [[279, "dgl.function.v_div_u", false]], "v_div_u() (in module dgl.ops)": [[535, "dgl.ops.v_div_u", false]], "v_dot_e() (in module dgl.function)": [[280, "dgl.function.v_dot_e", false]], "v_dot_e() (in module dgl.ops)": [[536, "dgl.ops.v_dot_e", false]], "v_dot_u() (in module dgl.function)": [[281, "dgl.function.v_dot_u", false]], "v_dot_u() (in module dgl.ops)": [[537, "dgl.ops.v_dot_u", false]], "v_mul_e() (in module dgl.function)": [[282, "dgl.function.v_mul_e", false]], "v_mul_e() (in module dgl.ops)": [[538, "dgl.ops.v_mul_e", false]], "v_mul_u() (in module dgl.function)": [[283, "dgl.function.v_mul_u", false]], "v_mul_u() (in module dgl.ops)": [[539, "dgl.ops.v_mul_u", false]], "v_sub_e() (in module dgl.function)": [[284, "dgl.function.v_sub_e", false]], "v_sub_e() (in module dgl.ops)": [[540, "dgl.ops.v_sub_e", false]], "v_sub_u() (in module dgl.function)": [[285, "dgl.function.v_sub_u", false]], "v_sub_u() (in module dgl.ops)": [[541, "dgl.ops.v_sub_u", false]], "val (dgl.sparse.sparsematrix property)": [[608, "dgl.sparse.SparseMatrix.val", false]], "val_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.val_edges", false]], "val_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.val_idx", false]], "val_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.val_idx", false]], "val_like() (in module dgl.sparse)": [[632, "dgl.sparse.val_like", false]], "val_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.val_mask", false]], "val_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.val_size", false]], "validation_set (dgl.graphbolt.task property)": [[313, "dgl.graphbolt.Task.validation_set", false]], "verbose (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.verbose", false]], "vocab (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab", false]], "vocab_size (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab_size", false]], "weight (dgl.nn.pytorch.conv.graphconv attribute)": [[410, "dgl.nn.pytorch.conv.GraphConv.weight", false]], "weightandsum (class in dgl.nn.pytorch.glob)": [[438, "dgl.nn.pytorch.glob.WeightAndSum", false]], "weightbasis (class in dgl.nn.pytorch.utils)": [[461, "dgl.nn.pytorch.utils.WeightBasis", false]], "wikicsdataset (class in dgl.data)": [[192, "dgl.data.WikiCSDataset", false]], "wisconsindataset (class in dgl.data)": [[193, "dgl.data.WisconsinDataset", false]], "wn18dataset (class in dgl.data)": [[191, "dgl.data.WN18Dataset", false]], "yaml_data (dgl.graphbolt.ondiskdataset property)": [[308, "dgl.graphbolt.OnDiskDataset.yaml_data", false]], "yelpdataset (class in dgl.data)": [[194, "dgl.data.YelpDataset", false]], "zincdataset (class in dgl.data)": [[195, "dgl.data.ZINCDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "dgl"]], "dgl": [[1, 1, 1, "", "DGLGraph"], [114, 4, 1, "", "add_edges"], [115, 4, 1, "", "add_nodes"], [116, 4, 1, "", "add_reverse_edges"], [117, 4, 1, "", "add_self_loop"], [118, 4, 1, "", "adj_product_graph"], [119, 4, 1, "", "adj_sum_graph"], [120, 4, 1, "", "adjusted_homophily"], [121, 4, 1, "", "apply_each"], [122, 4, 1, "", "batch"], [123, 4, 1, "", "bfs_edges_generator"], [124, 4, 1, "", "bfs_nodes_generator"], [125, 4, 1, "", "bipartite_from_networkx"], [126, 4, 1, "", "bipartite_from_scipy"], [127, 4, 1, "", "block_to_graph"], [128, 4, 1, "", "broadcast_edges"], [129, 4, 1, "", "broadcast_nodes"], [130, 4, 1, "", "compact_graphs"], [131, 4, 1, "", "create_block"], [2, 0, 0, "-", "data"], [229, 4, 1, "", "dfs_edges_generator"], [230, 4, 1, "", "dfs_labeled_edges_generator"], [242, 4, 1, "", "double_radius_node_labeling"], [243, 4, 1, "", "edge_homophily"], [244, 4, 1, "", "edge_label_informativeness"], [245, 4, 1, "", "edge_subgraph"], [246, 4, 1, "", "edge_type_subgraph"], [247, 4, 1, "", "from_cugraph"], [248, 4, 1, "", "from_networkx"], [249, 4, 1, "", "from_scipy"], [6, 0, 0, "-", "geometry"], [286, 4, 1, "", "graph"], [329, 4, 1, "", "heterograph"], [330, 4, 1, "", "in_subgraph"], [331, 4, 1, "", "is_libxsmm_enabled"], [332, 4, 1, "", "khop_adj"], [333, 4, 1, "", "khop_graph"], [334, 4, 1, "", "khop_in_subgraph"], [335, 4, 1, "", "khop_out_subgraph"], [336, 4, 1, "", "knn_graph"], [337, 4, 1, "", "lap_pe"], [338, 4, 1, "", "laplacian_lambda_max"], [339, 4, 1, "", "line_graph"], [340, 4, 1, "", "linkx_homophily"], [341, 4, 1, "", "load_graphs"], [342, 4, 1, "", "max_edges"], [343, 4, 1, "", "max_nodes"], [344, 4, 1, "", "mean_edges"], [345, 4, 1, "", "mean_nodes"], [346, 4, 1, "", "merge"], [347, 4, 1, "", "metapath_reachable_graph"], [348, 4, 1, "", "metis_partition"], [349, 4, 1, "", "metis_partition_assignment"], [476, 4, 1, "", "node_homophily"], [477, 4, 1, "", "node_label_informativeness"], [478, 4, 1, "", "node_subgraph"], [479, 4, 1, "", "node_type_subgraph"], [480, 4, 1, "", "norm_by_dst"], [10, 0, 0, "-", "optim"], [542, 4, 1, "", "out_subgraph"], [543, 4, 1, "", "partition_graph_with_halo"], [544, 4, 1, "", "prop_edges"], [545, 4, 1, "", "prop_edges_dfs"], [546, 4, 1, "", "prop_nodes"], [547, 4, 1, "", "prop_nodes_bfs"], [548, 4, 1, "", "prop_nodes_topo"], [549, 4, 1, "", "radius_graph"], [550, 4, 1, "", "rand_bipartite"], [551, 4, 1, "", "rand_graph"], [552, 4, 1, "", "random_walk_pe"], [553, 4, 1, "", "readout_edges"], [554, 4, 1, "", "readout_nodes"], [555, 4, 1, "", "remove_edges"], [556, 4, 1, "", "remove_nodes"], [557, 4, 1, "", "remove_self_loop"], [558, 4, 1, "", "reorder_graph"], [559, 4, 1, "", "reverse"], [11, 0, 0, "-", "sampling"], [569, 4, 1, "", "save_graphs"], [570, 4, 1, "", "seed"], [571, 4, 1, "", "segmented_knn_graph"], [572, 4, 1, "", "shortest_dist"], [573, 4, 1, "", "slice_batch"], [574, 4, 1, "", "softmax_edges"], [575, 4, 1, "", "softmax_nodes"], [576, 4, 1, "", "sort_csc_by_tag"], [577, 4, 1, "", "sort_csr_by_tag"], [633, 4, 1, "", "sum_edges"], [634, 4, 1, "", "sum_nodes"], [635, 4, 1, "", "svd_pe"], [636, 4, 1, "", "to_bidirected"], [637, 4, 1, "", "to_block"], [638, 4, 1, "", "to_cugraph"], [639, 4, 1, "", "to_double"], [640, 4, 1, "", "to_float"], [641, 4, 1, "", "to_half"], [642, 4, 1, "", "to_heterogeneous"], [643, 4, 1, "", "to_homogeneous"], [644, 4, 1, "", "to_networkx"], [645, 4, 1, "", "to_simple"], [646, 4, 1, "", "to_simple_graph"], [647, 4, 1, "", "topk_edges"], [648, 4, 1, "", "topk_nodes"], [649, 4, 1, "", "topological_nodes_generator"], [19, 0, 0, "-", "transforms"], [683, 4, 1, "", "unbatch"], [684, 4, 1, "", "use_libxsmm"]], "dgl.DGLGraph": [[26, 2, 1, "", "__getitem__"], [27, 2, 1, "", "add_edges"], [28, 2, 1, "", "add_nodes"], [29, 2, 1, "", "add_self_loop"], [30, 2, 1, "", "adj"], [31, 2, 1, "", "adj_external"], [32, 2, 1, "", "adj_tensors"], [33, 2, 1, "", "adjacency_matrix"], [34, 2, 1, "", "apply_edges"], [35, 2, 1, "", "apply_nodes"], [36, 2, 1, "", "batch_num_edges"], [37, 2, 1, "", "batch_num_nodes"], [38, 3, 1, "", "batch_size"], [39, 3, 1, "", "canonical_etypes"], [40, 2, 1, "", "cpu"], [41, 2, 1, "", "create_formats_"], [42, 3, 1, "", "device"], [43, 3, 1, "", "dstdata"], [44, 3, 1, "", "dstnodes"], [45, 3, 1, "", "dsttypes"], [46, 3, 1, "", "edata"], [47, 2, 1, "", "edge_attr_schemes"], [48, 2, 1, "", "edge_ids"], [49, 2, 1, "", "edge_subgraph"], [50, 2, 1, "", "edge_type_subgraph"], [51, 3, 1, "", "edges"], [52, 3, 1, "", "etypes"], [53, 2, 1, "", "filter_edges"], [54, 2, 1, "", "filter_nodes"], [55, 2, 1, "", "find_edges"], [56, 2, 1, "", "formats"], [57, 2, 1, "", "has_edges_between"], [58, 2, 1, "", "has_nodes"], [59, 3, 1, "", "idtype"], [60, 2, 1, "", "in_degrees"], [61, 2, 1, "", "in_edges"], [62, 2, 1, "", "inc"], [63, 2, 1, "", "incidence_matrix"], [64, 2, 1, "", "int"], [65, 3, 1, "", "is_homogeneous"], [66, 3, 1, "", "is_multigraph"], [67, 2, 1, "", "is_pinned"], [68, 3, 1, "", "is_unibipartite"], [69, 2, 1, "", "line_graph"], [70, 2, 1, "", "local_scope"], [71, 2, 1, "", "long"], [72, 2, 1, "", "metagraph"], [73, 2, 1, "", "multi_update_all"], [74, 3, 1, "", "ndata"], [75, 2, 1, "", "node_attr_schemes"], [76, 2, 1, "", "node_type_subgraph"], [77, 3, 1, "", "nodes"], [78, 3, 1, "", "ntypes"], [79, 2, 1, "", "num_dst_nodes"], [80, 2, 1, "", "num_edges"], [81, 2, 1, "", "num_nodes"], [82, 2, 1, "", "num_src_nodes"], [83, 2, 1, "", "number_of_dst_nodes"], [84, 2, 1, "", "number_of_edges"], [85, 2, 1, "", "number_of_nodes"], [86, 2, 1, "", "number_of_src_nodes"], [87, 2, 1, "", "out_degrees"], [88, 2, 1, "", "out_edges"], [89, 2, 1, "", "pin_memory_"], [90, 2, 1, "", "predecessors"], [91, 2, 1, "", "prop_edges"], [92, 2, 1, "", "prop_nodes"], [93, 2, 1, "", "pull"], [94, 2, 1, "", "push"], [95, 2, 1, "", "remove_edges"], [96, 2, 1, "", "remove_nodes"], [97, 2, 1, "", "remove_self_loop"], [98, 2, 1, "", "reorder_graph"], [99, 2, 1, "", "reverse"], [100, 2, 1, "", "send_and_recv"], [101, 2, 1, "", "set_batch_num_edges"], [102, 2, 1, "", "set_batch_num_nodes"], [103, 3, 1, "", "srcdata"], [104, 3, 1, "", "srcnodes"], [105, 3, 1, "", "srctypes"], [106, 2, 1, "", "subgraph"], [107, 2, 1, "", "successors"], [108, 2, 1, "", "to"], [109, 2, 1, "", "to_canonical_etype"], [110, 2, 1, "", "to_cugraph"], [111, 2, 1, "", "to_simple"], [112, 2, 1, "", "unpin_memory_"], [113, 2, 1, "", "update_all"]], "dgl.data": [[132, 1, 1, "", "AIFBDataset"], [133, 1, 1, "", "AMDataset"], [134, 1, 1, "", "ActorDataset"], [135, 1, 1, "", "AmazonCoBuyComputerDataset"], [136, 1, 1, "", "AmazonCoBuyPhotoDataset"], [137, 1, 1, "", "AmazonRatingsDataset"], [138, 1, 1, "", "AsGraphPredDataset"], [139, 1, 1, "", "AsLinkPredDataset"], [140, 1, 1, "", "AsNodePredDataset"], [141, 1, 1, "", "BA2MotifDataset"], [142, 1, 1, "", "BACommunityDataset"], [143, 1, 1, "", "BAShapeDataset"], [144, 1, 1, "", "BGSDataset"], [145, 1, 1, "", "BitcoinOTCDataset"], [146, 1, 1, "", "CIFAR10SuperPixelDataset"], [147, 1, 1, "", "CLUSTERDataset"], [148, 1, 1, "", "CSVDataset"], [149, 1, 1, "", "ChameleonDataset"], [150, 1, 1, "", "CiteseerGraphDataset"], [151, 1, 1, "", "CoauthorCSDataset"], [152, 1, 1, "", "CoauthorPhysicsDataset"], [153, 1, 1, "", "CoraFullDataset"], [154, 1, 1, "", "CoraGraphDataset"], [155, 1, 1, "", "CornellDataset"], [156, 1, 1, "", "DGLDataset"], [157, 1, 1, "", "FB15k237Dataset"], [158, 1, 1, "", "FB15kDataset"], [159, 1, 1, "", "FakeNewsDataset"], [160, 1, 1, "", "FlickrDataset"], [161, 1, 1, "", "FraudAmazonDataset"], [162, 1, 1, "", "FraudDataset"], [163, 1, 1, "", "FraudYelpDataset"], [164, 1, 1, "", "GDELTDataset"], [165, 1, 1, "", "GINDataset"], [166, 1, 1, "", "ICEWS18Dataset"], [167, 1, 1, "", "KarateClubDataset"], [168, 1, 1, "", "LegacyTUDataset"], [169, 1, 1, "", "MNISTSuperPixelDataset"], [170, 1, 1, "", "MUTAGDataset"], [171, 1, 1, "", "MinesweeperDataset"], [172, 1, 1, "", "MiniGCDataset"], [173, 1, 1, "", "MovieLensDataset"], [174, 1, 1, "", "PATTERNDataset"], [175, 1, 1, "", "PPIDataset"], [176, 1, 1, "", "PubmedGraphDataset"], [177, 1, 1, "", "QM7bDataset"], [178, 1, 1, "", "QM9Dataset"], [179, 1, 1, "", "QM9EdgeDataset"], [180, 1, 1, "", "QuestionsDataset"], [181, 1, 1, "", "RedditDataset"], [182, 1, 1, "", "RomanEmpireDataset"], [183, 1, 1, "", "SBMMixtureDataset"], [184, 1, 1, "", "SSTDataset"], [185, 1, 1, "", "SquirrelDataset"], [186, 1, 1, "", "TUDataset"], [187, 1, 1, "", "TexasDataset"], [188, 1, 1, "", "TolokersDataset"], [189, 1, 1, "", "TreeCycleDataset"], [190, 1, 1, "", "TreeGridDataset"], [191, 1, 1, "", "WN18Dataset"], [192, 1, 1, "", "WikiCSDataset"], [193, 1, 1, "", "WisconsinDataset"], [194, 1, 1, "", "YelpDataset"], [195, 1, 1, "", "ZINCDataset"]], "dgl.data.AIFBDataset": [[132, 2, 1, "", "__getitem__"], [132, 2, 1, "", "__len__"], [132, 5, 1, "", "num_classes"], [132, 5, 1, "", "predict_category"]], "dgl.data.AMDataset": [[133, 2, 1, "", "__getitem__"], [133, 2, 1, "", "__len__"], [133, 5, 1, "", "num_classes"], [133, 5, 1, "", "predict_category"]], "dgl.data.ActorDataset": [[134, 2, 1, "", "__getitem__"], [134, 2, 1, "", "__len__"], [134, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyComputerDataset": [[135, 2, 1, "", "__getitem__"], [135, 2, 1, "", "__len__"], [135, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyPhotoDataset": [[136, 2, 1, "", "__getitem__"], [136, 2, 1, "", "__len__"], [136, 5, 1, "", "num_classes"]], "dgl.data.AmazonRatingsDataset": [[137, 2, 1, "", "__getitem__"], [137, 2, 1, "", "__len__"], [137, 5, 1, "", "num_classes"]], "dgl.data.AsGraphPredDataset": [[138, 2, 1, "", "__getitem__"], [138, 2, 1, "", "__len__"], [138, 5, 1, "", "edge_feat_size"], [138, 5, 1, "", "node_feat_size"], [138, 5, 1, "", "num_classes"], [138, 5, 1, "", "num_tasks"], [138, 5, 1, "", "test_idx"], [138, 5, 1, "", "train_idx"], [138, 5, 1, "", "val_idx"]], "dgl.data.AsLinkPredDataset": [[139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__len__"], [139, 5, 1, "", "feat_size"], [139, 5, 1, "", "test_edges"], [139, 5, 1, "", "train_graph"], [139, 5, 1, "", "val_edges"]], "dgl.data.AsNodePredDataset": [[140, 2, 1, "", "__getitem__"], [140, 2, 1, "", "__len__"], [140, 5, 1, "", "num_classes"], [140, 5, 1, "", "test_idx"], [140, 5, 1, "", "train_idx"], [140, 5, 1, "", "val_idx"]], "dgl.data.BA2MotifDataset": [[141, 2, 1, "", "__getitem__"], [141, 2, 1, "", "__len__"], [141, 5, 1, "", "num_classes"]], "dgl.data.BACommunityDataset": [[142, 2, 1, "", "__getitem__"], [142, 2, 1, "", "__len__"], [142, 5, 1, "", "num_classes"]], "dgl.data.BAShapeDataset": [[143, 2, 1, "", "__getitem__"], [143, 2, 1, "", "__len__"], [143, 5, 1, "", "num_classes"]], "dgl.data.BGSDataset": [[144, 2, 1, "", "__getitem__"], [144, 2, 1, "", "__len__"], [144, 5, 1, "", "num_classes"], [144, 5, 1, "", "predict_category"]], "dgl.data.BitcoinOTCDataset": [[145, 2, 1, "", "__getitem__"], [145, 2, 1, "", "__len__"], [145, 5, 1, "", "graphs"], [145, 5, 1, "", "is_temporal"]], "dgl.data.CIFAR10SuperPixelDataset": [[146, 2, 1, "", "__getitem__"], [146, 2, 1, "", "__len__"]], "dgl.data.CLUSTERDataset": [[147, 2, 1, "", "__getitem__"], [147, 2, 1, "", "__len__"], [147, 5, 1, "", "num_classes"]], "dgl.data.CSVDataset": [[148, 2, 1, "", "__getitem__"], [148, 2, 1, "", "__len__"], [148, 5, 1, "", "data"], [148, 5, 1, "", "graphs"]], "dgl.data.ChameleonDataset": [[149, 2, 1, "", "__getitem__"], [149, 2, 1, "", "__len__"], [149, 5, 1, "", "num_classes"]], "dgl.data.CiteseerGraphDataset": [[150, 2, 1, "", "__getitem__"], [150, 2, 1, "", "__len__"], [150, 5, 1, "", "num_classes"]], "dgl.data.CoauthorCSDataset": [[151, 2, 1, "", "__getitem__"], [151, 2, 1, "", "__len__"], [151, 5, 1, "", "num_classes"]], "dgl.data.CoauthorPhysicsDataset": [[152, 2, 1, "", "__getitem__"], [152, 2, 1, "", "__len__"], [152, 5, 1, "", "num_classes"]], "dgl.data.CoraFullDataset": [[153, 2, 1, "", "__getitem__"], [153, 2, 1, "", "__len__"], [153, 5, 1, "", "num_classes"]], "dgl.data.CoraGraphDataset": [[154, 2, 1, "", "__getitem__"], [154, 2, 1, "", "__len__"], [154, 5, 1, "", "num_classes"]], "dgl.data.CornellDataset": [[155, 2, 1, "", "__getitem__"], [155, 2, 1, "", "__len__"], [155, 5, 1, "", "num_classes"]], "dgl.data.DGLDataset": [[156, 2, 1, "", "__getitem__"], [156, 2, 1, "", "__len__"], [156, 5, 1, "", "hash"], [156, 5, 1, "", "name"], [156, 5, 1, "", "raw_dir"], [156, 5, 1, "", "raw_path"], [156, 5, 1, "", "save_dir"], [156, 5, 1, "", "save_path"], [156, 5, 1, "", "url"], [156, 5, 1, "", "verbose"]], "dgl.data.FB15k237Dataset": [[157, 2, 1, "", "__getitem__"], [157, 2, 1, "", "__len__"], [157, 5, 1, "", "num_nodes"], [157, 5, 1, "", "num_rels"]], "dgl.data.FB15kDataset": [[158, 2, 1, "", "__getitem__"], [158, 2, 1, "", "__len__"], [158, 5, 1, "", "num_nodes"], [158, 5, 1, "", "num_rels"]], "dgl.data.FakeNewsDataset": [[159, 2, 1, "", "__getitem__"], [159, 2, 1, "", "__len__"], [159, 5, 1, "", "feature"], [159, 5, 1, "", "feature_name"], [159, 5, 1, "", "graphs"], [159, 5, 1, "", "labels"], [159, 5, 1, "", "name"], [159, 5, 1, "", "num_classes"], [159, 5, 1, "", "num_graphs"], [159, 5, 1, "", "test_mask"], [159, 5, 1, "", "train_mask"], [159, 5, 1, "", "val_mask"]], "dgl.data.FlickrDataset": [[160, 2, 1, "", "__getitem__"], [160, 2, 1, "", "__len__"], [160, 5, 1, "", "num_classes"]], "dgl.data.FraudAmazonDataset": [[161, 2, 1, "", "__getitem__"], [161, 2, 1, "", "__len__"]], "dgl.data.FraudDataset": [[162, 2, 1, "", "__getitem__"], [162, 2, 1, "", "__len__"], [162, 5, 1, "", "graph"], [162, 5, 1, "", "num_classes"], [162, 5, 1, "", "seed"], [162, 5, 1, "", "train_size"], [162, 5, 1, "", "val_size"]], "dgl.data.FraudYelpDataset": [[163, 2, 1, "", "__getitem__"], [163, 2, 1, "", "__len__"]], "dgl.data.GDELTDataset": [[164, 2, 1, "", "__getitem__"], [164, 2, 1, "", "__len__"], [164, 5, 1, "", "end_time"], [164, 5, 1, "", "is_temporal"], [164, 5, 1, "", "start_time"]], "dgl.data.GINDataset": [[165, 2, 1, "", "__getitem__"], [165, 2, 1, "", "__len__"], [165, 5, 1, "", "num_classes"]], "dgl.data.ICEWS18Dataset": [[166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__len__"], [166, 5, 1, "", "is_temporal"]], "dgl.data.KarateClubDataset": [[167, 2, 1, "", "__getitem__"], [167, 2, 1, "", "__len__"], [167, 5, 1, "", "num_classes"]], "dgl.data.LegacyTUDataset": [[168, 2, 1, "", "__getitem__"], [168, 2, 1, "", "__len__"], [168, 5, 1, "", "max_num_node"], [168, 5, 1, "", "num_classes"], [168, 5, 1, "", "num_labels"]], "dgl.data.MNISTSuperPixelDataset": [[169, 2, 1, "", "__getitem__"], [169, 2, 1, "", "__len__"]], "dgl.data.MUTAGDataset": [[170, 2, 1, "", "__getitem__"], [170, 2, 1, "", "__len__"], [170, 5, 1, "", "graph"], [170, 5, 1, "", "num_classes"], [170, 5, 1, "", "predict_category"]], "dgl.data.MinesweeperDataset": [[171, 2, 1, "", "__getitem__"], [171, 2, 1, "", "__len__"], [171, 5, 1, "", "num_classes"]], "dgl.data.MiniGCDataset": [[172, 2, 1, "", "__getitem__"], [172, 2, 1, "", "__len__"], [172, 5, 1, "", "max_num_v"], [172, 5, 1, "", "min_num_v"], [172, 5, 1, "", "num_classes"], [172, 5, 1, "", "num_graphs"]], "dgl.data.MovieLensDataset": [[173, 2, 1, "", "__getitem__"], [173, 2, 1, "", "__len__"]], "dgl.data.PATTERNDataset": [[174, 2, 1, "", "__getitem__"], [174, 2, 1, "", "__len__"], [174, 5, 1, "", "num_classes"]], "dgl.data.PPIDataset": [[175, 2, 1, "", "__getitem__"], [175, 2, 1, "", "__len__"], [175, 5, 1, "", "features"], [175, 5, 1, "", "labels"], [175, 5, 1, "", "num_labels"]], "dgl.data.PubmedGraphDataset": [[176, 2, 1, "", "__getitem__"], [176, 2, 1, "", "__len__"], [176, 5, 1, "", "num_classes"]], "dgl.data.QM7bDataset": [[177, 2, 1, "", "__getitem__"], [177, 2, 1, "", "__len__"], [177, 5, 1, "", "num_labels"], [177, 5, 1, "", "num_tasks"]], "dgl.data.QM9Dataset": [[178, 2, 1, "", "__getitem__"], [178, 2, 1, "", "__len__"], [178, 5, 1, "", "num_labels"], [178, 5, 1, "", "num_tasks"]], "dgl.data.QM9EdgeDataset": [[179, 2, 1, "", "__getitem__"], [179, 2, 1, "", "__len__"], [179, 5, 1, "", "num_labels"], [179, 5, 1, "", "num_tasks"]], "dgl.data.QuestionsDataset": [[180, 2, 1, "", "__getitem__"], [180, 2, 1, "", "__len__"], [180, 5, 1, "", "num_classes"]], "dgl.data.RedditDataset": [[181, 2, 1, "", "__getitem__"], [181, 2, 1, "", "__len__"], [181, 5, 1, "", "num_classes"]], "dgl.data.RomanEmpireDataset": [[182, 2, 1, "", "__getitem__"], [182, 2, 1, "", "__len__"], [182, 5, 1, "", "num_classes"]], "dgl.data.SBMMixtureDataset": [[183, 2, 1, "", "__getitem__"], [183, 2, 1, "", "__len__"], [183, 2, 1, "", "collate_fn"]], "dgl.data.SSTDataset": [[184, 2, 1, "", "__getitem__"], [184, 2, 1, "", "__len__"], [184, 5, 1, "", "num_classes"], [184, 5, 1, "", "pretrained_emb"], [184, 5, 1, "", "vocab"], [184, 5, 1, "", "vocab_size"]], "dgl.data.SquirrelDataset": [[185, 2, 1, "", "__getitem__"], [185, 2, 1, "", "__len__"], [185, 5, 1, "", "num_classes"]], "dgl.data.TUDataset": [[186, 2, 1, "", "__getitem__"], [186, 2, 1, "", "__len__"], [186, 5, 1, "", "max_num_node"], [186, 5, 1, "", "num_classes"], [186, 5, 1, "", "num_labels"]], "dgl.data.TexasDataset": [[187, 2, 1, "", "__getitem__"], [187, 2, 1, "", "__len__"], [187, 5, 1, "", "num_classes"]], "dgl.data.TolokersDataset": [[188, 2, 1, "", "__getitem__"], [188, 2, 1, "", "__len__"], [188, 5, 1, "", "num_classes"]], "dgl.data.TreeCycleDataset": [[189, 2, 1, "", "__getitem__"], [189, 2, 1, "", "__len__"], [189, 5, 1, "", "num_classes"]], "dgl.data.TreeGridDataset": [[190, 2, 1, "", "__getitem__"], [190, 2, 1, "", "__len__"], [190, 5, 1, "", "num_classes"]], "dgl.data.WN18Dataset": [[191, 2, 1, "", "__getitem__"], [191, 2, 1, "", "__len__"], [191, 5, 1, "", "num_nodes"], [191, 5, 1, "", "num_rels"]], "dgl.data.WikiCSDataset": [[192, 2, 1, "", "__getitem__"], [192, 2, 1, "", "__len__"], [192, 5, 1, "", "num_classes"]], "dgl.data.WisconsinDataset": [[193, 2, 1, "", "__getitem__"], [193, 2, 1, "", "__len__"], [193, 5, 1, "", "num_classes"]], "dgl.data.YelpDataset": [[194, 2, 1, "", "__getitem__"], [194, 2, 1, "", "__len__"], [194, 5, 1, "", "num_classes"]], "dgl.data.ZINCDataset": [[195, 2, 1, "", "__getitem__"], [195, 2, 1, "", "__len__"], [195, 5, 1, "", "num_atom_types"], [195, 5, 1, "", "num_bond_types"]], "dgl.data.utils": [[196, 1, 1, "", "Subset"], [197, 1, 1, "", "add_node_property_split"], [198, 1, 1, "", "add_nodepred_split"], [199, 1, 1, "", "check_sha1"], [200, 1, 1, "", "download"], [201, 1, 1, "", "extract_archive"], [202, 1, 1, "", "get_download_dir"], [203, 1, 1, "", "load_info"], [204, 1, 1, "", "load_labels"], [205, 1, 1, "", "mask_nodes_by_property"], [206, 1, 1, "", "save_info"], [207, 1, 1, "", "split_dataset"]], "dgl.data.utils.Subset": [[196, 2, 1, "", "__getitem__"], [196, 2, 1, "", "__len__"]], "dgl.dataloading": [[208, 1, 1, "", "BlockSampler"], [209, 1, 1, "", "ClusterGCNSampler"], [210, 1, 1, "", "DataLoader"], [211, 1, 1, "", "DistEdgeDataLoader"], [212, 1, 1, "", "DistNodeDataLoader"], [213, 1, 1, "", "GraphDataLoader"], [214, 1, 1, "", "LaborSampler"], [215, 1, 1, "", "MultiLayerFullNeighborSampler"], [216, 1, 1, "", "NeighborSampler"], [217, 1, 1, "", "SAINTSampler"], [218, 1, 1, "", "Sampler"], [219, 1, 1, "", "ShaDowKHopSampler"], [220, 4, 1, "", "as_edge_prediction_sampler"]], "dgl.dataloading.BlockSampler": [[208, 2, 1, "", "__init__"]], "dgl.dataloading.base": [[221, 1, 1, "", "LazyFeature"], [222, 1, 1, "", "set_dst_lazy_features"], [223, 1, 1, "", "set_edge_lazy_features"], [224, 1, 1, "", "set_node_lazy_features"], [225, 1, 1, "", "set_src_lazy_features"]], "dgl.dataloading.negative_sampler": [[226, 1, 1, "", "GlobalUniform"], [227, 1, 1, "", "PerSourceUniform"], [228, 5, 1, "", "Uniform"]], "dgl.distributed": [[4, 1, 1, "", "DistDataLoader"], [4, 1, 1, "", "DistEmbedding"], [4, 1, 1, "", "DistGraph"], [4, 1, 1, "", "DistTensor"], [4, 1, 1, "", "GraphPartitionBook"], [4, 1, 1, "", "PartitionPolicy"], [231, 4, 1, "", "edge_split"], [232, 4, 1, "", "find_edges"], [233, 4, 1, "", "in_subgraph"], [234, 4, 1, "", "initialize"], [235, 4, 1, "", "load_partition"], [236, 4, 1, "", "load_partition_book"], [237, 4, 1, "", "load_partition_feats"], [238, 4, 1, "", "node_split"], [239, 4, 1, "", "partition_graph"], [240, 4, 1, "", "sample_etype_neighbors"], [241, 4, 1, "", "sample_neighbors"]], "dgl.distributed.DistGraph": [[4, 2, 1, "", "barrier"], [4, 3, 1, "", "device"], [4, 3, 1, "", "edata"], [4, 2, 1, "", "edge_attr_schemes"], [4, 3, 1, "", "edges"], [4, 3, 1, "", "etypes"], [4, 2, 1, "", "find_edges"], [4, 2, 1, "", "get_edge_partition_policy"], [4, 2, 1, "", "get_etype_id"], [4, 2, 1, "", "get_node_partition_policy"], [4, 2, 1, "", "get_ntype_id"], [4, 2, 1, "", "get_partition_book"], [4, 3, 1, "", "idtype"], [4, 2, 1, "", "in_degrees"], [4, 3, 1, "", "local_partition"], [4, 3, 1, "", "ndata"], [4, 2, 1, "", "node_attr_schemes"], [4, 3, 1, "", "nodes"], [4, 3, 1, "", "ntypes"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_nodes"], [4, 2, 1, "", "number_of_edges"], [4, 2, 1, "", "number_of_nodes"], [4, 2, 1, "", "out_degrees"], [4, 2, 1, "", "rank"]], "dgl.distributed.DistTensor": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "name"], [4, 3, 1, "", "part_policy"], [4, 3, 1, "", "shape"]], "dgl.distributed.GraphPartitionBook": [[4, 3, 1, "", "canonical_etypes"], [4, 2, 1, "", "eid2localeid"], [4, 2, 1, "", "eid2partid"], [4, 2, 1, "", "map_to_homo_eid"], [4, 2, 1, "", "map_to_homo_nid"], [4, 2, 1, "", "map_to_per_etype"], [4, 2, 1, "", "map_to_per_ntype"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "nid2localnid"], [4, 2, 1, "", "nid2partid"], [4, 2, 1, "", "num_partitions"], [4, 3, 1, "", "partid"], [4, 2, 1, "", "partid2eids"], [4, 2, 1, "", "partid2nids"], [4, 2, 1, "", "shared_memory"]], "dgl.distributed.PartitionPolicy": [[4, 2, 1, "", "get_part_size"], [4, 2, 1, "", "get_size"], [4, 3, 1, "", "part_id"], [4, 3, 1, "", "partition_book"], [4, 3, 1, "", "policy_str"], [4, 2, 1, "", "to_local"], [4, 2, 1, "", "to_partid"]], "dgl.distributed.optim": [[4, 1, 1, "", "SparseAdagrad"], [4, 1, 1, "", "SparseAdam"]], "dgl.distributed.optim.SparseAdagrad": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.distributed.optim.SparseAdam": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.function": [[250, 4, 1, "", "copy_e"], [251, 4, 1, "", "copy_u"], [252, 4, 1, "", "e_add_u"], [253, 4, 1, "", "e_add_v"], [254, 4, 1, "", "e_div_u"], [255, 4, 1, "", "e_div_v"], [256, 4, 1, "", "e_dot_u"], [257, 4, 1, "", "e_dot_v"], [258, 4, 1, "", "e_mul_u"], [259, 4, 1, "", "e_mul_v"], [260, 4, 1, "", "e_sub_u"], [261, 4, 1, "", "e_sub_v"], [262, 4, 1, "", "max"], [263, 4, 1, "", "mean"], [264, 4, 1, "", "min"], [265, 4, 1, "", "sum"], [266, 4, 1, "", "u_add_e"], [267, 4, 1, "", "u_add_v"], [268, 4, 1, "", "u_div_e"], [269, 4, 1, "", "u_div_v"], [270, 4, 1, "", "u_dot_e"], [271, 4, 1, "", "u_dot_v"], [272, 4, 1, "", "u_mul_e"], [273, 4, 1, "", "u_mul_v"], [274, 4, 1, "", "u_sub_e"], [275, 4, 1, "", "u_sub_v"], [276, 4, 1, "", "v_add_e"], [277, 4, 1, "", "v_add_u"], [278, 4, 1, "", "v_div_e"], [279, 4, 1, "", "v_div_u"], [280, 4, 1, "", "v_dot_e"], [281, 4, 1, "", "v_dot_u"], [282, 4, 1, "", "v_mul_e"], [283, 4, 1, "", "v_mul_u"], [284, 4, 1, "", "v_sub_e"], [285, 4, 1, "", "v_sub_u"]], "dgl.geometry": [[6, 1, 1, "", "farthest_point_sampler"], [6, 1, 1, "", "neighbor_matching"]], "dgl.graphbolt": [[287, 1, 1, "", "BasicFeatureStore"], [288, 1, 1, "", "BuiltinDataset"], [289, 1, 1, "", "CopyTo"], [290, 1, 1, "", "DataLoader"], [291, 1, 1, "", "Dataset"], [292, 1, 1, "", "DistributedItemSampler"], [293, 1, 1, "", "Feature"], [294, 1, 1, "", "FeatureFetcher"], [295, 1, 1, "", "FeatureStore"], [296, 1, 1, "", "FusedCSCSamplingGraph"], [297, 1, 1, "", "GPUCachedFeature"], [298, 1, 1, "", "InSubgraphSampler"], [299, 1, 1, "", "ItemSampler"], [300, 1, 1, "", "ItemSet"], [301, 1, 1, "", "ItemSetDict"], [302, 1, 1, "", "LayerNeighborSampler"], [303, 1, 1, "", "LegacyDataset"], [304, 1, 1, "", "MiniBatch"], [305, 1, 1, "", "MiniBatchTransformer"], [306, 1, 1, "", "NegativeSampler"], [307, 1, 1, "", "NeighborSampler"], [308, 1, 1, "", "OnDiskDataset"], [309, 1, 1, "", "SampledSubgraph"], [310, 1, 1, "", "SampledSubgraphImpl"], [311, 1, 1, "", "SamplingGraph"], [312, 1, 1, "", "SubgraphSampler"], [313, 1, 1, "", "Task"], [314, 1, 1, "", "TorchBasedFeature"], [315, 1, 1, "", "TorchBasedFeatureStore"], [316, 1, 1, "", "UniformNegativeSampler"], [317, 4, 1, "", "add_reverse_edges"], [318, 4, 1, "", "compact_csc_format"], [319, 4, 1, "", "etype_str_to_tuple"], [320, 4, 1, "", "etype_tuple_to_str"], [321, 4, 1, "", "exclude_seed_edges"], [322, 4, 1, "", "from_dglgraph"], [323, 4, 1, "", "fused_csc_sampling_graph"], [324, 4, 1, "", "isin"], [325, 4, 1, "", "load_from_shared_memory"], [326, 4, 1, "", "seed"], [327, 4, 1, "", "unique_and_compact"], [328, 4, 1, "", "unique_and_compact_csc_formats"]], "dgl.graphbolt.BasicFeatureStore": [[287, 2, 1, "", "metadata"], [287, 2, 1, "", "read"], [287, 2, 1, "", "size"], [287, 2, 1, "", "update"]], "dgl.graphbolt.Dataset": [[291, 3, 1, "", "all_nodes_set"], [291, 3, 1, "", "dataset_name"], [291, 3, 1, "", "feature"], [291, 3, 1, "", "graph"], [291, 3, 1, "", "tasks"]], "dgl.graphbolt.Feature": [[293, 2, 1, "", "metadata"], [293, 2, 1, "", "read"], [293, 2, 1, "", "size"], [293, 2, 1, "", "update"]], "dgl.graphbolt.FeatureStore": [[295, 2, 1, "", "metadata"], [295, 2, 1, "", "read"], [295, 2, 1, "", "size"], [295, 2, 1, "", "update"]], "dgl.graphbolt.FusedCSCSamplingGraph": [[296, 2, 1, "", "copy_to_shared_memory"], [296, 3, 1, "", "csc_indptr"], [296, 3, 1, "", "edge_attributes"], [296, 3, 1, "", "edge_type_to_id"], [296, 2, 1, "", "in_subgraph"], [296, 3, 1, "", "indices"], [296, 3, 1, "", "node_attributes"], [296, 3, 1, "", "node_type_offset"], [296, 3, 1, "", "node_type_to_id"], [296, 3, 1, "", "num_edges"], [296, 3, 1, "", "num_nodes"], [296, 2, 1, "", "pin_memory_"], [296, 2, 1, "", "sample_layer_neighbors"], [296, 2, 1, "", "sample_negative_edges_uniform"], [296, 2, 1, "", "sample_neighbors"], [296, 2, 1, "", "temporal_sample_neighbors"], [296, 2, 1, "", "to"], [296, 3, 1, "", "total_num_edges"], [296, 3, 1, "", "total_num_nodes"], [296, 3, 1, "", "type_per_edge"]], "dgl.graphbolt.GPUCachedFeature": [[297, 2, 1, "", "read"], [297, 2, 1, "", "size"], [297, 2, 1, "", "update"]], "dgl.graphbolt.InSubgraphSampler": [[298, 2, 1, "", "sample_subgraphs"]], "dgl.graphbolt.ItemSet": [[300, 3, 1, "", "names"]], "dgl.graphbolt.ItemSetDict": [[301, 3, 1, "", "names"]], "dgl.graphbolt.LegacyDataset": [[303, 3, 1, "", "all_nodes_set"], [303, 3, 1, "", "dataset_name"], [303, 3, 1, "", "feature"], [303, 3, 1, "", "graph"], [303, 3, 1, "", "tasks"]], "dgl.graphbolt.MiniBatch": [[304, 3, 1, "", "blocks"], [304, 5, 1, "", "compacted_negative_dsts"], [304, 5, 1, "", "compacted_negative_srcs"], [304, 5, 1, "", "compacted_node_pairs"], [304, 5, 1, "", "edge_features"], [304, 2, 1, "", "edge_ids"], [304, 5, 1, "", "input_nodes"], [304, 5, 1, "", "labels"], [304, 5, 1, "", "negative_dsts"], [304, 3, 1, "", "negative_node_pairs"], [304, 5, 1, "", "negative_srcs"], [304, 5, 1, "", "node_features"], [304, 2, 1, "", "node_ids"], [304, 5, 1, "", "node_pairs"], [304, 3, 1, "", "node_pairs_with_labels"], [304, 2, 1, "", "num_layers"], [304, 3, 1, "", "positive_node_pairs"], [304, 5, 1, "", "sampled_subgraphs"], [304, 5, 1, "", "seed_nodes"], [304, 2, 1, "", "set_edge_features"], [304, 2, 1, "", "set_node_features"], [304, 2, 1, "", "to"]], "dgl.graphbolt.NeighborSampler": [[307, 2, 1, "", "sample_subgraphs"]], "dgl.graphbolt.OnDiskDataset": [[308, 3, 1, "", "all_nodes_set"], [308, 3, 1, "", "dataset_name"], [308, 3, 1, "", "feature"], [308, 3, 1, "", "graph"], [308, 2, 1, "", "load"], [308, 3, 1, "", "tasks"], [308, 3, 1, "", "yaml_data"]], "dgl.graphbolt.SampledSubgraph": [[309, 2, 1, "", "exclude_edges"], [309, 3, 1, "", "original_column_node_ids"], [309, 3, 1, "", "original_edge_ids"], [309, 3, 1, "", "original_row_node_ids"], [309, 3, 1, "", "sampled_csc"], [309, 2, 1, "", "to"]], "dgl.graphbolt.SampledSubgraphImpl": [[310, 5, 1, "", "original_column_node_ids"], [310, 5, 1, "", "original_edge_ids"], [310, 5, 1, "", "original_row_node_ids"], [310, 5, 1, "", "sampled_csc"]], "dgl.graphbolt.SamplingGraph": [[311, 2, 1, "", "copy_to_shared_memory"], [311, 3, 1, "", "num_edges"], [311, 3, 1, "", "num_nodes"], [311, 2, 1, "", "to"]], "dgl.graphbolt.SubgraphSampler": [[312, 2, 1, "", "sample_subgraphs"]], "dgl.graphbolt.Task": [[313, 3, 1, "", "metadata"], [313, 3, 1, "", "test_set"], [313, 3, 1, "", "train_set"], [313, 3, 1, "", "validation_set"]], "dgl.graphbolt.TorchBasedFeature": [[314, 2, 1, "", "metadata"], [314, 2, 1, "", "pin_memory_"], [314, 2, 1, "", "read"], [314, 2, 1, "", "size"], [314, 2, 1, "", "update"]], "dgl.graphbolt.TorchBasedFeatureStore": [[315, 2, 1, "", "pin_memory_"]], "dgl.multiprocessing.pytorch": [[350, 4, 1, "", "call_once_and_share"], [351, 4, 1, "", "shared_tensor"]], "dgl.nn": [[18, 0, 0, "-", "functional"]], "dgl.nn.functional": [[352, 4, 1, "", "edge_softmax"]], "dgl.nn.mxnet": [[353, 1, 1, "", "HeteroGraphConv"]], "dgl.nn.mxnet.conv": [[354, 1, 1, "", "AGNNConv"], [355, 1, 1, "", "APPNPConv"], [356, 1, 1, "", "ChebConv"], [357, 1, 1, "", "DenseChebConv"], [358, 1, 1, "", "DenseGraphConv"], [359, 1, 1, "", "DenseSAGEConv"], [360, 1, 1, "", "EdgeConv"], [361, 1, 1, "", "GATConv"], [362, 1, 1, "", "GINConv"], [363, 1, 1, "", "GMMConv"], [364, 1, 1, "", "GatedGraphConv"], [365, 1, 1, "", "GraphConv"], [366, 1, 1, "", "NNConv"], [367, 1, 1, "", "RelGraphConv"], [368, 1, 1, "", "SAGEConv"], [369, 1, 1, "", "SGConv"], [370, 1, 1, "", "TAGConv"]], "dgl.nn.mxnet.glob": [[371, 1, 1, "", "AvgPooling"], [372, 1, 1, "", "GlobalAttentionPooling"], [373, 1, 1, "", "MaxPooling"], [374, 1, 1, "", "Set2Set"], [375, 1, 1, "", "SortPooling"], [376, 1, 1, "", "SumPooling"]], "dgl.nn.mxnet.utils": [[377, 1, 1, "", "Sequential"]], "dgl.nn.pytorch": [[378, 1, 1, "", "DeepWalk"], [379, 1, 1, "", "HeteroEmbedding"], [380, 1, 1, "", "HeteroGraphConv"], [381, 1, 1, "", "HeteroLinear"], [382, 1, 1, "", "MetaPath2Vec"], [383, 1, 1, "", "TypedLinear"]], "dgl.nn.pytorch.DeepWalk": [[378, 2, 1, "", "forward"], [378, 5, 1, "", "node_embed"], [378, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroEmbedding": [[379, 2, 1, "", "forward"], [379, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroGraphConv": [[380, 2, 1, "", "forward"], [380, 5, 1, "", "mods"]], "dgl.nn.pytorch.HeteroLinear": [[381, 2, 1, "", "forward"]], "dgl.nn.pytorch.MetaPath2Vec": [[382, 2, 1, "", "forward"], [382, 5, 1, "", "local_to_global_nid"], [382, 5, 1, "", "node_embed"], [382, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.TypedLinear": [[383, 2, 1, "", "forward"], [383, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv": [[384, 1, 1, "", "AGNNConv"], [385, 1, 1, "", "APPNPConv"], [386, 1, 1, "", "AtomicConv"], [387, 1, 1, "", "CFConv"], [388, 1, 1, "", "ChebConv"], [389, 1, 1, "", "CuGraphGATConv"], [390, 1, 1, "", "CuGraphRelGraphConv"], [391, 1, 1, "", "CuGraphSAGEConv"], [392, 1, 1, "", "DGNConv"], [393, 1, 1, "", "DenseChebConv"], [394, 1, 1, "", "DenseGraphConv"], [395, 1, 1, "", "DenseSAGEConv"], [396, 1, 1, "", "DotGatConv"], [397, 1, 1, "", "EGATConv"], [398, 1, 1, "", "EGNNConv"], [399, 1, 1, "", "EdgeConv"], [400, 1, 1, "", "EdgeGATConv"], [401, 1, 1, "", "EdgeWeightNorm"], [402, 1, 1, "", "GATConv"], [403, 1, 1, "", "GATv2Conv"], [404, 1, 1, "", "GCN2Conv"], [405, 1, 1, "", "GINConv"], [406, 1, 1, "", "GINEConv"], [407, 1, 1, "", "GMMConv"], [408, 1, 1, "", "GatedGCNConv"], [409, 1, 1, "", "GatedGraphConv"], [410, 1, 1, "", "GraphConv"], [411, 1, 1, "", "GroupRevRes"], [412, 1, 1, "", "HGTConv"], [413, 1, 1, "", "NNConv"], [414, 1, 1, "", "PNAConv"], [415, 1, 1, "", "RelGraphConv"], [416, 1, 1, "", "SAGEConv"], [417, 1, 1, "", "SGConv"], [418, 1, 1, "", "TAGConv"], [419, 1, 1, "", "TWIRLSConv"], [420, 1, 1, "", "TWIRLSUnfoldingAndAttention"]], "dgl.nn.pytorch.conv.AGNNConv": [[384, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.APPNPConv": [[385, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.AtomicConv": [[386, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CFConv": [[387, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.ChebConv": [[388, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CuGraphGATConv": [[389, 2, 1, "", "forward"], [389, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphRelGraphConv": [[390, 2, 1, "", "forward"], [390, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphSAGEConv": [[391, 2, 1, "", "forward"], [391, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DGNConv": [[392, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.DenseChebConv": [[393, 2, 1, "", "forward"], [393, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseGraphConv": [[394, 2, 1, "", "forward"], [394, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseSAGEConv": [[395, 2, 1, "", "forward"], [395, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DotGatConv": [[396, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EGATConv": [[397, 2, 1, "", "forward"], [397, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EGNNConv": [[398, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeConv": [[399, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeGATConv": [[400, 2, 1, "", "forward"], [400, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EdgeWeightNorm": [[401, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GATConv": [[402, 2, 1, "", "forward"], [402, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GATv2Conv": [[403, 2, 1, "", "forward"], [403, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GCN2Conv": [[404, 2, 1, "", "forward"], [404, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GINConv": [[405, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GINEConv": [[406, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GMMConv": [[407, 2, 1, "", "forward"], [407, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GatedGCNConv": [[408, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GatedGraphConv": [[409, 2, 1, "", "forward"], [409, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GraphConv": [[410, 5, 1, "", "bias"], [410, 2, 1, "", "forward"], [410, 2, 1, "", "reset_parameters"], [410, 5, 1, "", "weight"]], "dgl.nn.pytorch.conv.GroupRevRes": [[411, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.HGTConv": [[412, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.NNConv": [[413, 2, 1, "", "forward"], [413, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.PNAConv": [[414, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.RelGraphConv": [[415, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.SAGEConv": [[416, 2, 1, "", "forward"], [416, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.SGConv": [[417, 2, 1, "", "forward"], [417, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TAGConv": [[418, 2, 1, "", "forward"], [418, 5, 1, "", "lin"], [418, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TWIRLSConv": [[419, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention": [[420, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain": [[421, 1, 1, "", "GNNExplainer"], [422, 1, 1, "", "HeteroGNNExplainer"], [423, 1, 1, "", "HeteroPGExplainer"], [424, 1, 1, "", "HeteroSubgraphX"], [425, 1, 1, "", "PGExplainer"], [426, 1, 1, "", "SubgraphX"]], "dgl.nn.pytorch.explain.GNNExplainer": [[421, 2, 1, "", "explain_graph"], [421, 2, 1, "", "explain_node"], [421, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroGNNExplainer": [[422, 2, 1, "", "explain_graph"], [422, 2, 1, "", "explain_node"], [422, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroPGExplainer": [[423, 2, 1, "", "explain_graph"], [423, 2, 1, "", "explain_node"], [423, 2, 1, "", "forward"], [423, 2, 1, "", "train_step"], [423, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.HeteroSubgraphX": [[424, 2, 1, "", "explain_graph"], [424, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.PGExplainer": [[425, 2, 1, "", "explain_graph"], [425, 2, 1, "", "explain_node"], [425, 2, 1, "", "forward"], [425, 2, 1, "", "train_step"], [425, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.SubgraphX": [[426, 2, 1, "", "explain_graph"], [426, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory": [[427, 1, 1, "", "KNNGraph"], [428, 1, 1, "", "RadiusGraph"], [429, 1, 1, "", "SegmentedKNNGraph"]], "dgl.nn.pytorch.factory.KNNGraph": [[427, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.RadiusGraph": [[428, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.SegmentedKNNGraph": [[429, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob": [[430, 1, 1, "", "AvgPooling"], [431, 1, 1, "", "GlobalAttentionPooling"], [432, 1, 1, "", "MaxPooling"], [433, 1, 1, "", "Set2Set"], [434, 1, 1, "", "SetTransformerDecoder"], [435, 1, 1, "", "SetTransformerEncoder"], [436, 1, 1, "", "SortPooling"], [437, 1, 1, "", "SumPooling"], [438, 1, 1, "", "WeightAndSum"]], "dgl.nn.pytorch.glob.AvgPooling": [[430, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.GlobalAttentionPooling": [[431, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.MaxPooling": [[432, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.Set2Set": [[433, 2, 1, "", "forward"], [433, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.glob.SetTransformerDecoder": [[434, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SetTransformerEncoder": [[435, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SortPooling": [[436, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SumPooling": [[437, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.WeightAndSum": [[438, 2, 1, "", "forward"]], "dgl.nn.pytorch.graph_transformer": [[439, 1, 1, "", "BiasedMultiheadAttention"], [440, 1, 1, "", "DegreeEncoder"], [441, 1, 1, "", "EGTLayer"], [442, 1, 1, "", "GraphormerLayer"], [443, 1, 1, "", "PathEncoder"], [444, 1, 1, "", "SpatialEncoder"], [445, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt": [[446, 1, 1, "", "BiasedMHA"], [447, 1, 1, "", "DegreeEncoder"], [448, 1, 1, "", "EGTLayer"], [449, 1, 1, "", "GraphormerLayer"], [450, 1, 1, "", "LapPosEncoder"], [451, 1, 1, "", "PathEncoder"], [452, 1, 1, "", "SpatialEncoder"], [453, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt.BiasedMHA": [[446, 2, 1, "", "forward"], [446, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.gt.DegreeEncoder": [[447, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.EGTLayer": [[448, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.GraphormerLayer": [[449, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.LapPosEncoder": [[450, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.PathEncoder": [[451, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder": [[452, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder3d": [[453, 2, 1, "", "forward"]], "dgl.nn.pytorch.link": [[454, 1, 1, "", "EdgePredictor"], [455, 1, 1, "", "TransE"], [456, 1, 1, "", "TransR"]], "dgl.nn.pytorch.link.EdgePredictor": [[454, 2, 1, "", "forward"], [454, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransE": [[455, 2, 1, "", "forward"], [455, 5, 1, "", "rel_emb"], [455, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransR": [[456, 2, 1, "", "forward"], [456, 5, 1, "", "rel_emb"], [456, 5, 1, "", "rel_project"], [456, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.sparse_emb": [[457, 1, 1, "", "NodeEmbedding"]], "dgl.nn.pytorch.utils": [[458, 1, 1, "", "JumpingKnowledge"], [459, 1, 1, "", "LabelPropagation"], [460, 1, 1, "", "Sequential"], [461, 1, 1, "", "WeightBasis"]], "dgl.nn.pytorch.utils.JumpingKnowledge": [[458, 2, 1, "", "forward"], [458, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.utils.LabelPropagation": [[459, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.Sequential": [[460, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.WeightBasis": [[461, 2, 1, "", "forward"]], "dgl.nn.tensorflow.conv": [[462, 1, 1, "", "APPNPConv"], [463, 1, 1, "", "ChebConv"], [464, 1, 1, "", "GATConv"], [465, 1, 1, "", "GINConv"], [466, 1, 1, "", "GraphConv"], [467, 1, 1, "", "RelGraphConv"], [468, 1, 1, "", "SAGEConv"], [469, 1, 1, "", "SGConv"]], "dgl.nn.tensorflow.glob": [[470, 1, 1, "", "AvgPooling"], [471, 1, 1, "", "GlobalAttentionPooling"], [472, 1, 1, "", "HeteroGraphConv"], [473, 1, 1, "", "MaxPooling"], [474, 1, 1, "", "SortPooling"], [475, 1, 1, "", "SumPooling"]], "dgl.ops": [[481, 4, 1, "", "copy_e_max"], [482, 4, 1, "", "copy_e_mean"], [483, 4, 1, "", "copy_e_min"], [484, 4, 1, "", "copy_e_sum"], [485, 4, 1, "", "copy_u"], [486, 4, 1, "", "copy_u_max"], [487, 4, 1, "", "copy_u_mean"], [488, 4, 1, "", "copy_u_min"], [489, 4, 1, "", "copy_u_sum"], [490, 4, 1, "", "copy_v"], [491, 4, 1, "", "e_add_u"], [492, 4, 1, "", "e_add_v"], [493, 4, 1, "", "e_div_u"], [494, 4, 1, "", "e_div_v"], [495, 4, 1, "", "e_dot_u"], [496, 4, 1, "", "e_dot_v"], [497, 4, 1, "", "e_mul_u"], [498, 4, 1, "", "e_mul_v"], [499, 4, 1, "", "e_sub_u"], [500, 4, 1, "", "e_sub_v"], [501, 4, 1, "", "gather_mm"], [502, 4, 1, "", "gsddmm"], [503, 4, 1, "", "gspmm"], [504, 4, 1, "", "segment_mm"], [505, 4, 1, "", "segment_reduce"], [506, 4, 1, "", "u_add_e"], [507, 4, 1, "", "u_add_e_max"], [508, 4, 1, "", "u_add_e_mean"], [509, 4, 1, "", "u_add_e_min"], [510, 4, 1, "", "u_add_e_sum"], [511, 4, 1, "", "u_add_v"], [512, 4, 1, "", "u_div_e"], [513, 4, 1, "", "u_div_e_max"], [514, 4, 1, "", "u_div_e_mean"], [515, 4, 1, "", "u_div_e_min"], [516, 4, 1, "", "u_div_e_sum"], [517, 4, 1, "", "u_div_v"], [518, 4, 1, "", "u_dot_e"], [519, 4, 1, "", "u_dot_v"], [520, 4, 1, "", "u_mul_e"], [521, 4, 1, "", "u_mul_e_max"], [522, 4, 1, "", "u_mul_e_mean"], [523, 4, 1, "", "u_mul_e_min"], [524, 4, 1, "", "u_mul_e_sum"], [525, 4, 1, "", "u_mul_v"], [526, 4, 1, "", "u_sub_e"], [527, 4, 1, "", "u_sub_e_max"], [528, 4, 1, "", "u_sub_e_mean"], [529, 4, 1, "", "u_sub_e_min"], [530, 4, 1, "", "u_sub_e_sum"], [531, 4, 1, "", "u_sub_v"], [532, 4, 1, "", "v_add_e"], [533, 4, 1, "", "v_add_u"], [534, 4, 1, "", "v_div_e"], [535, 4, 1, "", "v_div_u"], [536, 4, 1, "", "v_dot_e"], [537, 4, 1, "", "v_dot_u"], [538, 4, 1, "", "v_mul_e"], [539, 4, 1, "", "v_mul_u"], [540, 4, 1, "", "v_sub_e"], [541, 4, 1, "", "v_sub_u"]], "dgl.optim.pytorch": [[10, 1, 1, "", "SparseAdagrad"], [10, 1, 1, "", "SparseAdam"]], "dgl.sampling": [[560, 1, 1, "", "PinSAGESampler"], [561, 4, 1, "", "global_uniform_negative_sampling"], [562, 4, 1, "", "node2vec_random_walk"], [563, 4, 1, "", "pack_traces"], [564, 4, 1, "", "random_walk"], [565, 4, 1, "", "sample_labors"], [566, 4, 1, "", "sample_neighbors"], [567, 4, 1, "", "sample_neighbors_biased"], [568, 4, 1, "", "select_topk"]], "dgl.sampling.PinSAGESampler": [[560, 2, 1, "", "__init__"]], "dgl.sparse": [[12, 1, 1, "", "SparseMatrix"], [609, 4, 1, "", "add"], [610, 4, 1, "", "bsddmm"], [611, 4, 1, "", "bspmm"], [612, 4, 1, "", "diag"], [613, 4, 1, "", "div"], [614, 4, 1, "", "from_coo"], [615, 4, 1, "", "from_csc"], [616, 4, 1, "", "from_csr"], [617, 4, 1, "", "identity"], [618, 4, 1, "", "matmul"], [619, 4, 1, "", "mul"], [620, 4, 1, "", "power"], [621, 4, 1, "", "sddmm"], [622, 4, 1, "", "softmax"], [623, 4, 1, "", "sp_add_v"], [624, 4, 1, "", "sp_broadcast_v"], [625, 4, 1, "", "sp_div_v"], [626, 4, 1, "", "sp_mul_v"], [627, 4, 1, "", "sp_sub_v"], [628, 4, 1, "", "spmatrix"], [629, 4, 1, "", "spmm"], [630, 4, 1, "", "spspmm"], [631, 4, 1, "", "sub"], [632, 4, 1, "", "val_like"]], "dgl.sparse.SparseMatrix": [[578, 3, 1, "", "T"], [579, 2, 1, "", "coalesce"], [580, 3, 1, "", "col"], [581, 2, 1, "", "coo"], [582, 2, 1, "", "cpu"], [583, 2, 1, "", "csc"], [584, 2, 1, "", "csr"], [585, 2, 1, "", "cuda"], [586, 3, 1, "", "device"], [587, 2, 1, "", "double"], [588, 3, 1, "", "dtype"], [589, 2, 1, "", "float"], [590, 2, 1, "", "has_duplicate"], [591, 2, 1, "", "indices"], [592, 2, 1, "", "int"], [593, 2, 1, "", "long"], [594, 2, 1, "", "neg"], [595, 3, 1, "", "nnz"], [596, 2, 1, "", "reduce"], [597, 3, 1, "", "row"], [598, 3, 1, "", "shape"], [599, 2, 1, "", "smax"], [600, 2, 1, "", "smean"], [601, 2, 1, "", "smin"], [602, 2, 1, "", "softmax"], [603, 2, 1, "", "sum"], [604, 2, 1, "", "t"], [605, 2, 1, "", "to"], [606, 2, 1, "", "to_dense"], [607, 2, 1, "", "transpose"], [608, 3, 1, "", "val"]], "dgl.transforms": [[650, 1, 1, "", "AddEdge"], [651, 1, 1, "", "AddMetaPaths"], [652, 1, 1, "", "AddReverse"], [653, 1, 1, "", "AddSelfLoop"], [654, 1, 1, "", "BaseTransform"], [655, 1, 1, "", "Compose"], [656, 1, 1, "", "DropEdge"], [657, 1, 1, "", "DropNode"], [658, 1, 1, "", "FeatMask"], [659, 1, 1, "", "GCNNorm"], [660, 1, 1, "", "GDC"], [661, 1, 1, "", "HeatKernel"], [662, 1, 1, "", "KHopGraph"], [663, 1, 1, "", "LapPE"], [664, 1, 1, "", "LineGraph"], [665, 1, 1, "", "NodeShuffle"], [666, 1, 1, "", "PPR"], [667, 1, 1, "", "RandomWalkPE"], [668, 1, 1, "", "RemoveSelfLoop"], [669, 1, 1, "", "RowFeatNormalizer"], [670, 1, 1, "", "SIGNDiffusion"], [671, 1, 1, "", "SVDPE"], [672, 1, 1, "", "ToLevi"], [673, 1, 1, "", "ToSimple"]], "dgl.udf.EdgeBatch": [[674, 2, 1, "", "batch_size"], [675, 3, 1, "", "data"], [676, 3, 1, "", "dst"], [677, 2, 1, "", "edges"], [678, 3, 1, "", "src"]], "dgl.udf.NodeBatch": [[679, 2, 1, "", "batch_size"], [680, 3, 1, "", "data"], [681, 3, 1, "", "mailbox"], [682, 2, 1, "", "nodes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [4, 5, 8, 11, 22, 34, 35, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 73, 74, 87, 88, 90, 93, 94, 100, 103, 107, 113, 122, 125, 130, 131, 151, 152, 161, 163, 167, 168, 180, 182, 183, 188, 208, 210, 213, 220, 221, 230, 232, 234, 239, 240, 241, 242, 244, 245, 286, 292, 296, 299, 300, 304, 309, 316, 329, 330, 334, 335, 346, 347, 386, 394, 396, 400, 409, 410, 412, 433, 460, 477, 478, 502, 503, 542, 558, 565, 566, 567, 569, 572, 576, 577, 663, 687, 688, 690, 691, 692, 694, 696, 698, 701, 703, 706, 707, 708, 709, 711, 712, 719, 721, 722, 724, 726, 728, 729, 731, 753, 774, 781, 786, 795, 805, 806, 812, 817, 818, 819, 820, 821, 822, 823, 824, 827, 828, 829, 832, 833, 839, 842, 845, 846, 849, 850, 851, 855, 858, 861, 862, 867, 868], "0": [0, 4, 5, 6, 9, 10, 14, 20, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 207, 210, 213, 214, 216, 217, 219, 220, 226, 227, 229, 230, 239, 242, 243, 244, 245, 246, 247, 248, 249, 286, 290, 292, 296, 297, 298, 299, 300, 301, 302, 304, 307, 309, 310, 312, 314, 316, 317, 318, 323, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 350, 352, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 476, 477, 478, 479, 480, 504, 505, 542, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 579, 582, 583, 584, 585, 587, 589, 590, 592, 593, 596, 599, 600, 601, 602, 603, 605, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 624, 629, 630, 631, 635, 636, 637, 638, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 688, 689, 690, 692, 693, 694, 695, 696, 700, 701, 702, 703, 704, 710, 712, 713, 714, 715, 716, 718, 720, 721, 724, 725, 726, 727, 729, 730, 731, 735, 736, 738, 739, 741, 744, 745, 746, 747, 748, 754, 756, 757, 758, 759, 761, 764, 765, 766, 767, 769, 770, 771, 775, 776, 778, 779, 780, 781, 782, 785, 786, 787, 788, 789, 796, 798, 799, 800, 801, 802, 804, 805, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 823, 825, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 845, 846, 848, 849, 850, 851, 852, 854, 855, 857, 858, 860, 861, 862, 864, 866, 867, 868, 870], "00": [25, 337, 635, 671, 819, 820, 823, 825, 827, 829, 841, 844, 848, 854, 857, 860, 864, 866, 870], "000": [14, 146, 147, 169, 173, 174, 191, 195, 819, 825, 842, 844, 845, 846, 848, 862, 864, 866], "0000": [9, 118, 173, 352, 386, 394, 405, 410, 415, 420, 480, 552, 596, 600, 602, 613, 622, 659, 663, 667, 818, 822], "00000": [849, 850, 852, 855], "000000": 818, "000007645": 842, "00001": [849, 850, 852, 855], "00002": [849, 850, 852, 855], "00003": [849, 850, 852, 855], "00004": [849, 850, 852, 855], "00005": [849, 850, 852, 855], "00006": [849, 850, 852, 855], "00007": [849, 850, 852, 855], "00008": [849, 850, 852, 855], "00009": [849, 850, 852, 855], "0000e": [337, 635, 671], "00010": [849, 850, 852], "00011": [849, 850, 852], "00012": [849, 850, 852], "00013": [849, 850, 852], "00014": [849, 850, 852], "00015": [849, 850, 852], "00016": [849, 850, 852], "00017": [849, 850, 852], "00018": [849, 850, 852], "00019": [849, 850, 852], "00020": [849, 850, 852], "00021": [849, 850, 852], "00022": [849, 850, 852], "00023": [849, 850, 852], "00024": [849, 850, 852], "00025": [849, 852], "00026": [849, 852], "00027": [849, 852], "00028": [849, 852], "00029": [849, 852], "00030": 849, "00031": 849, "00032": 849, "00033": 849, "00034": 849, "00035": 849, "00036": 849, "00037": 849, "00038": 849, "00039": 849, "00040": 849, "00041": 849, "00042": 849, "00043": 849, "00044": 849, "00045": 849, "00046": 849, "00047": 849, "00048": 849, "00049": 849, "0005": [423, 425], "001": [4, 10, 457, 567, 819, 820, 827, 845, 846], "002": [14, 819, 836, 852], "0020e": 832, "002158116134429955": 688, "0025": 822, "0028": 434, "003": [14, 560, 819, 825, 836, 867, 870], "0035": 832, "0038": 833, "004": [14, 819, 836], "0040": 849, "0041": [832, 849], "005": [421, 422, 819, 836], "0059": 822, "006": [14, 819, 836, 852], "0060": 832, "007": [14, 819, 836], "00743445923710373": 688, "008": [14, 819, 836], "008790817766266334": 688, "0089": 405, "009": [14, 819, 836], "0093": 819, "00982": [146, 147, 169, 174, 195], "0099": 435, "01": [142, 143, 189, 337, 378, 421, 422, 423, 425, 635, 671, 716, 825, 832, 834, 836, 837, 838, 841, 850, 854, 857, 862, 867, 868], "010": [14, 819, 836], "0105": 822, "011": [14, 819], "0118": 405, "012": [819, 836], "01217200152200748": 688, "0123": 835, "0129": 403, "013": [819, 836], "01315": 823, "0134": 460, "014": [14, 819, 836], "01404": 162, "0142": [430, 431, 432, 433, 434, 435, 436, 437, 438], "0145": 433, "0146": [832, 833], "0148": 823, "015": [14, 819, 825, 835, 841], "0152": 823, "0155": 413, "0156": [434, 823], "016": [14, 819, 836], "0163": 666, "0164": [388, 833], "0169": 460, "017": [14, 819], "0177": [819, 832], "018": [819, 836], "0180": [602, 622], "0184": 390, "0185": 823, "019": [14, 819, 836], "0192": 823, "01973": 560, "0198": 822, "02": [825, 829, 832, 854], "0200": 660, "0201": 819, "0207": 405, "0217": 666, "0219": 393, "0221444": 833, "02216": 720, "0229": 832, "023": [14, 836], "0235": 433, "0239": 403, "025": [382, 852], "0252611": 833, "0253": 832, "0255": 666, "026": 14, "0261": 850, "0268": [396, 402], "0273": 835, "0276": 434, "0278": 663, "0280": 832, "02804737": 832, "0285": 819, "0286": 833, "0289": 822, "0297": [647, 648], "03": [825, 832, 841], "030": 14, "031": 836, "0315": [396, 402], "033": 836, "0331": 819, "0333e": 832, "03348": 448, "0340": 819, "0341": 460, "036": 836, "0360": 849, "0361": 819, "0372": 822, "0375": 410, "0376": 433, "03819": 862, "0383": 666, "0384": 849, "0386": 688, "038622249776255946": 688, "039": 14, "0390": [396, 402], "0398": 835, "03d": [819, 827], "03f": 829, "04": [14, 389, 390, 391, 816, 832], "040": 173, "0400": 660, "0401": 395, "0406": [409, 661], "0411": 849, "04133991340612775": 688, "0419": 832, "0425": 409, "0428": 434, "0429": 819, "043": 136, "043591": 839, "044": 836, "0440": 849, "0442": 823, "0444": 850, "0448": [460, 832], "04486384200747007": 688, "045": 14, "0451": [819, 849], "04573": 425, "046": [825, 858, 860], "0461": 434, "0470": 434, "0472": 849, "0483": [433, 832], "0483e": 337, "04878384701995819": 688, "0489": 819, "049629338970987646": 688, "04it": 819, "05": [460, 666, 670, 700, 744, 785, 852, 855], "0507": 849, "051": 836, "0510": 666, "0513": 822, "05152": 426, "0520": 822, "0523": 409, "0527": 393, "05287": 134, "0532": 835, "0535": 832, "05354099924658973": 688, "0539": [647, 648], "054": [14, 159, 173], "054016385555202384": 688, "0541": [405, 661], "0543": [396, 402], "0544": [128, 129], "0545": 849, "0553": 823, "0556": [460, 818], "058": [14, 823], "0580": [409, 430, 431, 432, 433, 434, 435, 436, 437, 438], "0587": 849, "0588": 818, "0591": 118, "059172654879085296": 688, "0596": 403, "0597": 832, "0599": 832, "05d": [849, 850, 852, 855, 868], "06": [25, 823], "060": 14, "0600": [173, 660], "0608": 437, "0617": [832, 833], "0621": 832, "0628": 832, "0630": 422, "0633": 849, "0634": 435, "0637": 850, "06370207": 832, "0638": 666, "0641": 822, "0643": 819, "0650": 832, "0654": 818, "066": 836, "0675": 832, "0683": 849, "0685": 832, "0693": 822, "06936886": 832, "0696": 832, "0699": [430, 431, 432, 433, 434, 435, 436, 437, 438], "07": [635, 671], "0711e": 337, "0715": 832, "0724": [128, 129], "0729": 438, "073": 161, "0731": 818, "0739": 849, "074": 14, "07443747": 833, "07502571020414439": 688, "07506874": 833, "0751": 832, "0754": 833, "0758": 405, "0762": [396, 402], "0767": 818, "0769": 818, "077": 14, "0778": 822, "07816474278491703": 688, "0783": [396, 402], "0799": 849, "08": [4, 10, 244, 477], "080": 834, "0800": [660, 832], "0804": [647, 648], "0805": [822, 835], "0807": 832, "0811": 819, "0812": 661, "08122798": 832, "0818": 833, "0829": 822, "083": [825, 868, 870], "0832": 409, "0833": 9, "0835": 393, "0836": 818, "0845": 434, "08503712": 832, "0853": 822, "08543289788089736": 688, "0857": [409, 647, 648], "086": [14, 836, 870], "0866": [832, 849], "0868": 688, "08680051341900807": 688, "08691420300562658": 688, "08692": 162, "0876": 390, "0880": [647, 648], "0884": 822, "0888": 416, "0891": 818, "08983": 862, "0899": 822, "09": 823, "0901": 819, "0906": 833, "0909": 818, "0911194482288028": 688, "0912": 835, "0913": [435, 852], "0914": 852, "0915": [421, 852], "0916": 852, "0917": [818, 852], "0918": 852, "0920": [435, 852], "0921": 852, "0922": 852, "0924": 852, "0926": 852, "0927": 852, "0928": 852, "0928555079874982": 688, "0929": 852, "0930": 852, "0932": 852, "0934": 852, "0935": [403, 852], "0937": 421, "0938": 849, "09422079": 833, "0949": 819, "0953": 818, "0968": 832, "0974": 832, "0976": 852, "0982": 833, "0992": 822, "0it": [827, 829], "0k": [178, 179], "0x7fec820937b8": [693, 739, 779], "0\ubd80\ud130": [781, 788, 789], "0\uc5d0": 781, "0\uc73c\ub85c": 800, "0\uc740": [780, 781], "0\uc744": 781, "0\uc774": [805, 808], "0\uc774\uace0": 781, "0\uc778": 808, "1": [1, 4, 5, 6, 9, 10, 12, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 139, 140, 142, 143, 146, 147, 148, 158, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 177, 183, 184, 186, 189, 190, 192, 195, 197, 198, 205, 207, 210, 214, 216, 217, 219, 226, 227, 229, 230, 231, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 262, 263, 264, 265, 286, 292, 296, 297, 298, 299, 300, 301, 302, 304, 307, 309, 310, 314, 315, 316, 317, 318, 323, 324, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 349, 352, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 480, 501, 504, 505, 542, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 688, 689, 690, 692, 693, 694, 695, 697, 705, 706, 708, 709, 711, 713, 714, 715, 716, 717, 720, 721, 722, 724, 725, 726, 727, 729, 730, 732, 734, 735, 736, 738, 739, 741, 742, 749, 750, 752, 753, 755, 756, 757, 758, 759, 760, 762, 764, 765, 766, 767, 769, 770, 772, 774, 775, 776, 778, 779, 782, 783, 791, 794, 795, 797, 798, 799, 800, 801, 802, 803, 805, 806, 808, 809, 810, 811, 812, 813, 816, 817, 818, 819, 820, 823, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 844, 845, 846, 849, 850, 851, 857, 860, 862, 867, 868], "10": [4, 5, 6, 9, 10, 14, 20, 26, 130, 134, 135, 137, 142, 145, 146, 147, 149, 155, 159, 161, 163, 166, 168, 169, 171, 173, 174, 180, 182, 185, 187, 188, 192, 193, 195, 210, 214, 216, 219, 220, 245, 292, 297, 299, 300, 301, 302, 307, 308, 309, 310, 314, 318, 330, 333, 334, 335, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 455, 456, 457, 459, 478, 504, 505, 542, 550, 551, 558, 560, 609, 612, 613, 619, 620, 624, 631, 644, 656, 658, 661, 665, 670, 688, 692, 693, 694, 704, 712, 713, 716, 718, 719, 720, 726, 727, 729, 730, 731, 738, 739, 748, 756, 766, 767, 769, 770, 771, 778, 779, 789, 798, 810, 811, 812, 813, 814, 816, 817, 818, 820, 822, 827, 829, 832, 833, 834, 836, 837, 838, 845, 846, 849, 851, 852, 855, 858, 861, 862, 867, 868], "100": [9, 22, 172, 173, 174, 194, 286, 382, 383, 421, 422, 424, 426, 427, 429, 446, 448, 449, 453, 550, 551, 620, 690, 700, 721, 727, 730, 731, 736, 744, 767, 770, 771, 776, 785, 800, 805, 811, 813, 814, 817, 819, 820, 827, 829, 832, 833, 834, 836, 837, 852, 855, 858, 861, 862], "1000": [4, 9, 14, 141, 150, 154, 176, 205, 209, 217, 308, 382, 411, 613, 660, 673, 713, 714, 726, 727, 741, 766, 767, 782, 800, 810, 811, 817, 818, 819, 820, 832, 833, 834, 836, 837, 849, 851, 852, 862], "10000": [14, 132, 133, 144, 147, 170, 171, 174, 183, 195, 832, 833, 838], "100000": 173, "1000000": 239, "1002": 460, "1008": 395, "100k": 173, "100x100": 171, "101": [184, 427, 429, 698, 783, 827, 829, 832, 833, 855, 862], "1014": [128, 129], "10150": 161, "1018": 849, "102": [427, 429, 817, 827, 829, 832, 833, 851, 855, 862], "1022": [560, 835], "1023": 832, "1024": [168, 186, 210, 213, 214, 215, 216, 220, 712, 715, 716, 718, 719, 720, 729, 756, 757, 759, 761, 769, 798, 799, 802, 804, 812, 829, 845, 846, 868], "1027": 822, "1029": 822, "103": [817, 827, 829, 832, 833, 836, 855, 862], "103121": 829, "1037097085190507": 688, "1038000": 188, "1039": 663, "104": [827, 829, 832, 833, 855, 862], "1040": 822, "1041": 185, "1043998": 781, "1046": 415, "1047": 819, "1048": 818, "105": [827, 829, 832, 833, 836, 855, 862], "1052": 688, "10522806046048205": 688, "1053": 850, "10548": 827, "10552": 827, "10556": [25, 154, 817, 818, 820, 827, 834, 836, 837, 849, 851, 852], "105878": 829, "1059": 827, "106": [832, 833, 836, 839, 855, 862], "1060": [172, 827], "1061": 827, "1066": 118, "107": [832, 833, 834, 855, 862], "1076": 850, "108": [14, 174, 832, 833, 855, 862], "1082": 832, "1083": 661, "1085": 832, "1086": 688, "10864079337442234": 688, "1089": 560, "109": [832, 833, 855, 862], "10903": 768, "1092": [149, 832], "1095": 823, "1099": 416, "10m": 173, "11": [9, 14, 133, 161, 192, 292, 299, 300, 301, 309, 310, 421, 624, 644, 656, 657, 665, 721, 756, 798, 816, 817, 818, 819, 820, 822, 823, 825, 827, 832, 833, 851, 855, 862], "110": [832, 833, 836, 855, 862], "1105": 849, "1106": 832, "1107": 407, "111": [832, 833, 855, 862], "1113": 25, "11158102039672668": 688, "112": [832, 833, 855, 862], "1120": 832, "1123": 403, "1126": 434, "1127": 819, "113": [832, 833, 855, 862], "1134": 833, "1134649": 781, "1135": [387, 822], "1138": 389, "1139": 460, "114": [181, 721, 817, 832, 833, 836, 855, 862], "1140\uc5b5\uac1c\uc758": 805, "11446843700743892": 688, "1145": [134, 163, 173, 421, 688], "114615892": 25, "115": [832, 833, 836, 855, 862], "1154897249106891": 688, "1155": [403, 688], "1156": 403, "1157": 403, "116": [832, 833, 855, 862], "11640": [137, 171, 180, 182, 188], "1166": 416, "1166240": 829, "1166243": 829, "117": [144, 147, 832, 833, 855, 862], "11701": 192, "11758": 188, "1178": [25, 168, 827, 829], "118": [832, 833, 855, 862], "1180": [827, 829, 849], "1181": [827, 829], "1182": [827, 829], "1183": [827, 829], "1184": [827, 829], "11893777": 832, "119": [136, 832, 833, 855, 862], "1191": 560, "1194614": 781, "11d": 179, "11\ubc88": 798, "11\ubc88\uc5d0\uc11c": 798, "11\uc6d4": 790, "12": [9, 14, 79, 81, 178, 179, 292, 296, 298, 299, 300, 301, 309, 310, 397, 400, 407, 408, 421, 424, 426, 624, 656, 665, 721, 805, 816, 822, 823, 827, 829, 832, 833, 851, 855, 862], "120": [150, 193, 827, 832, 833, 836, 855, 862], "1200": 9, "1201": 849, "1203": 696, "1203354": 781, "1205": 822, "1209": 387, "121": [175, 822, 827, 832, 833, 838, 852, 855, 862], "1215": 822, "122": [827, 832, 833, 855, 862], "1222": 832, "123": [14, 146, 192, 827, 832, 833, 855, 862], "1230": 560, "12345": [867, 868], "12346": 457, "1235": 822, "1237": 819, "123718280": [4, 239], "124": [25, 827, 829, 832, 833, 855, 862], "125": [827, 829, 832, 833, 836, 855, 862], "1250": 9, "1254": 832, "126": [14, 153, 827, 829, 832, 833, 834, 855, 862], "1261": 413, "1261310": 239, "1262": 435, "127": [457, 832, 833, 855, 862, 867, 868], "1272": 822, "128": [5, 165, 378, 382, 419, 426, 448, 713, 827, 832, 833, 855, 862], "1282": 560, "1283": [387, 833], "1285": 833, "12860": 696, "12861": 696, "1288": 822, "1289": 560, "129": [832, 833, 849, 852, 855, 862], "12k": 195, "13": [9, 135, 165, 194, 292, 299, 300, 301, 309, 310, 613, 656, 816, 819, 822, 825, 827, 829, 832, 833, 834, 851, 855, 858, 860, 862], "130": [178, 179, 832, 833, 836, 855, 862], "1306": 849, "130622": 25, "1309": 415, "131": [832, 833, 855, 862], "1310": 849, "1311": 421, "132": [161, 832, 833, 855, 862], "1323": [647, 648], "1328": 118, "133": [14, 832, 833, 855, 862], "1330": 422, "134": [829, 832, 833, 855, 862], "1342": 409, "1344": 822, "1349": 433, "135": [14, 829, 832, 833, 836, 855, 862], "1353": 661, "1354": 832, "136": [25, 145, 829, 832, 833, 855, 862], "1361": [433, 663], "1362": 822, "1364": 688, "1364240150959487": 688, "1368": 822, "137": [827, 829, 832, 833, 855, 862], "1371": 405, "1373e": [635, 671], "13752": 25, "1376": 409, "1377": 407, "13774964202156292": 688, "138": [827, 829, 832, 833, 855, 862], "1380e": 832, "1388": [409, 832], "139": [825, 827, 829, 832, 833, 850, 854, 855, 862], "1393": 688, "1393107840629273": 688, "1395": 405, "14": [14, 158, 177, 292, 298, 299, 300, 301, 309, 310, 657, 690, 736, 776, 822, 827, 829, 832, 833, 851, 855, 862], "140": [132, 154, 817, 818, 820, 827, 829, 832, 833, 834, 836, 837, 849, 851, 852, 855, 862], "1408": 405, "141": [827, 829, 832, 833, 855, 862], "1412": 835, "141442": 191, "1417": 832, "14182171": 832, "142": [829, 832, 833, 855, 862], "1420": 849, "1421": 832, "1427": 833, "1428": 819, "1428571492433548": 120, "1429": 818, "143": [829, 832, 833, 855, 862], "1431": 25, "1433": [154, 817, 818, 820, 834, 836, 837, 849, 851, 852], "144": [829, 832, 833, 834, 855, 862], "1440": 415, "145": [25, 829, 832, 833, 836, 855, 862], "1451": 832, "14541": 157, "1458": [647, 648], "146": [829, 832, 833, 855, 862], "14627522432017592": 688, "1467e": 832, "1468": 822, "147": [163, 817, 829, 832, 833, 855, 862], "1473": 827, "1479": [396, 402], "148": [14, 829, 832, 833, 855, 862], "148100": 170, "1483": 833, "1487": 832, "149": [827, 829, 832, 833, 834, 836, 855, 862], "1496": [421, 833], "14989629": 833, "15": [9, 14, 25, 151, 164, 177, 210, 214, 216, 219, 220, 292, 299, 300, 301, 302, 307, 309, 310, 397, 400, 504, 653, 656, 666, 701, 712, 721, 805, 817, 822, 823, 827, 829, 832, 833, 834, 836, 837, 839, 851, 855, 862], "150": [827, 829, 832, 833, 836, 855, 861, 862], "1500": 666, "1505": 560, "151": [827, 829, 832, 833, 836, 855, 862], "1516": 409, "152": [832, 833, 855, 862], "1520": [134, 647, 648], "15218126307872892": 688, "1526": 832, "153": [181, 832, 833, 855, 862], "1532": 832, "1533": 560, "154": [822, 832, 833, 836, 855, 862], "1546": 849, "155": [832, 833, 836, 855, 862], "1557019": 134, "1557108": 134, "1559": 407, "156": [25, 167, 832, 833, 839, 855, 862], "1560": 610, "15694736": 781, "157": [159, 832, 833, 855, 862], "1571": 833, "1579": 822, "158": [14, 817, 832, 833, 855, 862], "1587": 832, "159": [832, 833, 855, 862], "1594": [396, 402], "1597": 850, "15k": [178, 179], "15\u884c\u547d\u540d\u4e3a": 745, "15\uc5d0\uc11c": 786, "16": [165, 168, 172, 183, 186, 195, 299, 300, 301, 337, 438, 446, 447, 448, 449, 450, 451, 460, 552, 667, 697, 701, 721, 741, 782, 805, 816, 817, 819, 820, 822, 823, 827, 829, 832, 833, 834, 835, 836, 837, 838, 845, 849, 850, 851, 855, 858, 862], "160": [832, 833, 836, 855, 862], "16029718": 833, "1603": 862, "1607": 409, "161": [14, 827, 829, 832, 833, 855, 862], "162": [827, 829, 832, 833, 836, 855, 862], "163": [136, 151, 827, 829, 832, 833, 855, 862], "1633": 832, "1639": [560, 832], "164": [818, 827, 829, 832, 833, 855, 862], "1646": 407, "165": [822, 832, 833, 836, 855, 862], "1652": 822, "1658": 560, "166": [832, 833, 855, 862], "1663": 822, "1664": 185, "1667": 9, "167": [14, 832, 833, 855, 862], "16738734": 781, "1678": 435, "168": [832, 833, 845, 855, 862], "1681403185591509": 688, "1682": [173, 849], "16846068931179736": 688, "169": [832, 833, 836, 855, 862], "1690": 391, "169343": 829, "1695": 819, "1696": 422, "16974127573016262": 688, "16gb": [14, 721, 805], "16\uc904": 786, "17": [14, 25, 182, 299, 300, 301, 337, 657, 822, 827, 829, 832, 833, 851, 855, 862], "170": [14, 829, 832, 833, 834, 836, 855, 862], "1706": 720, "171": [832, 833, 838, 855, 862], "1710": 768, "172": [696, 697, 741, 782, 832, 833, 855, 862], "1720": 833, "1726": 832, "173": [14, 832, 833, 855, 862], "1735": [421, 610], "174": [832, 833, 855, 862], "1745": 560, "175": [697, 741, 782, 832, 833, 836, 855, 862], "1752": [647, 648], "17535": 157, "1757": 850, "17583413999295983": 688, "176": [832, 833, 855, 862], "177": [832, 833, 855, 862], "1771": 832, "178": [827, 829, 832, 833, 855, 862], "1780": [437, 849], "1785": 422, "17855714": 832, "1789": 434, "179": [14, 827, 829, 832, 833, 834, 836, 855, 862], "18": [9, 14, 151, 182, 191, 300, 301, 504, 624, 656, 701, 822, 832, 833, 838, 851, 855, 862], "180": [827, 829, 832, 833, 836, 855, 862], "1804": 405, "1806": 560, "1807": 862, "1809": 388, "181": [832, 833, 855, 862], "1818": [560, 613], "182": [14, 827, 829, 832, 833, 855, 862], "1821": 832, "183": [155, 187, 827, 829, 832, 833, 855, 862], "1830": 849, "18333": 25, "1835": 409, "18389137408509248": 688, "1839": 688, "184": [460, 832, 833, 855, 862], "1842": 832, "1843": 688, "18431292077750894": 688, "1847": 421, "1848": 832, "1849": 401, "185": [832, 833, 836, 855, 862], "1850": 403, "186": [832, 833, 855, 862], "186100": 137, "1862": 827, "18626464175355095": 688, "1865": 832, "1866": 832, "187": [696, 832, 833, 855, 862], "1875": 832, "1876": 822, "1877": 460, "188": [25, 165, 174, 186, 832, 833, 836, 855, 862], "1887": 832, "189": [832, 833, 855, 862], "1895": 835, "18th": 182, "18\uc904\uc744": 786, "19": [138, 153, 179, 300, 301, 309, 310, 656, 696, 697, 741, 782, 822, 825, 827, 829, 832, 833, 838, 851, 855, 862], "190": [147, 832, 833, 836, 855, 862], "1900": [822, 832], "1902": [434, 833], "1908": 403, "1909": [823, 832], "191": [832, 833, 855, 862], "19117861103555467": 688, "192": [832, 833, 845, 855, 862], "1925": 399, "192640": 25, "193": [460, 832, 833, 855, 862], "193011360": 696, "1931": [647, 648], "1932390907048961": 688, "1939": 422, "1939743": 781, "194": [832, 833, 855, 862], "1941": 855, "1943": 407, "195": [832, 833, 836, 855, 862], "1950": 833, "1951": 560, "1952": 391, "19536": [184, 855], "1954": 663, "196": [460, 832, 833, 855, 862], "1966": 422, "197": [832, 833, 855, 862], "19717": [25, 176], "19793": 25, "198": [133, 822, 832, 833, 855, 862], "1985": 822, "199": [832, 833, 855, 862], "1991": 849, "1996": 435, "1997": 832, "19978": 832, "1999": [832, 833], "19992": 832, "19999998807907104": 340, "1_gcn": [825, 849, 854], "1_gnn": [825, 851, 854], "1_graph_classif": [825, 867, 870], "1_introduct": [825, 834, 841], "1_node_classif": [825, 845, 848], "1d": [48, 51, 53, 54, 61, 88, 122, 131, 214, 216, 219, 231, 238, 239, 286, 296, 302, 307, 324, 329, 383, 390, 397, 402, 412, 415, 480, 543, 630], "1e": [4, 10, 244, 421, 425, 426, 477, 720, 721, 805, 817, 849, 851, 852, 855, 862], "1gb": [714, 800], "1m": [173, 829], "1\u5b57\u7b26\u4e32": 734, "1\u8282": 742, "1\u8282\u4e2d": 758, "1\u8282\u4e2d\u5bf9\u5f02\u6784\u56fe\u7684\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": [767, 770], "1\u8282\u4e2d\u5bf9\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": 767, "1\u8282\u7684gnn\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a": [767, 770], "1\uc5d0": 781, "1\uc740": 781, "1\uc744": 781, "1\uc7a5": 790, "1\uc808\uc758": 783, "1\ucc28\uc6d0": 788, "2": [4, 5, 6, 9, 10, 12, 14, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 146, 147, 159, 161, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 183, 184, 186, 188, 189, 190, 197, 205, 207, 216, 220, 226, 227, 229, 230, 239, 242, 243, 244, 245, 246, 247, 248, 249, 286, 292, 296, 297, 298, 299, 300, 301, 302, 307, 309, 310, 314, 315, 316, 317, 318, 323, 324, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 352, 379, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 447, 450, 451, 452, 453, 454, 455, 456, 459, 460, 476, 477, 478, 479, 480, 501, 504, 542, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 688, 692, 693, 695, 698, 700, 701, 702, 704, 705, 711, 712, 714, 716, 717, 718, 719, 721, 722, 726, 729, 731, 732, 738, 740, 741, 742, 744, 745, 746, 748, 749, 750, 755, 756, 758, 759, 760, 761, 762, 766, 769, 770, 771, 772, 778, 781, 782, 783, 785, 786, 787, 789, 791, 797, 798, 800, 801, 802, 803, 804, 805, 806, 810, 812, 814, 815, 816, 817, 818, 819, 820, 823, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 848, 849, 850, 851, 862, 864, 867, 868, 870], "20": [9, 25, 130, 161, 162, 171, 172, 174, 175, 181, 192, 209, 234, 299, 300, 301, 309, 310, 318, 397, 400, 406, 408, 411, 413, 423, 424, 425, 426, 434, 435, 552, 609, 619, 620, 624, 631, 650, 656, 657, 667, 669, 670, 694, 696, 727, 729, 730, 731, 767, 769, 770, 771, 811, 812, 813, 814, 817, 819, 822, 825, 832, 833, 834, 836, 837, 838, 841, 851, 852, 855, 858, 861, 862], "200": [200, 560, 694, 780, 818, 823, 832, 833, 836, 855, 862], "2000": [4, 9, 126, 249, 673, 819, 832], "20000": 832, "2002": [118, 134, 167, 403], "2003": [146, 147, 169, 174, 195], "2005": 161, "2008": 162, "200\uac1c": 780, "201": [832, 833, 855, 862], "2010": 433, "2011": 425, "2014": 181, "2015": [135, 136, 403, 816, 855], "2016": [151, 152], "2017": [817, 819, 827, 829, 832, 833, 836], "2018": [164, 166, 560, 688, 836], "20181320245665535": 688, "2019": 816, "202": [832, 833, 855, 862], "2020": [819, 827, 829, 832, 833], "2020\u5e749\u6708": 749, "2021\ub144": 790, "2022": [827, 829, 832, 833], "2023": [214, 296, 302, 565], "2024": [827, 829, 832, 833], "2026": 822, "2027": 832, "203": [832, 833, 855, 862], "204": [832, 833, 855, 862], "20466": 157, "2048": 449, "205": [696, 697, 741, 782, 832, 833, 855, 862], "2053": [430, 431, 432, 433, 434, 435, 436, 437, 438], "206": [825, 832, 833, 837, 839, 841, 855, 862], "2062": 460, "207": [460, 832, 833, 855, 862], "2072e": 832, "208": [460, 832, 833, 855, 862], "2080": 437, "2083": 833, "2085": 399, "20874637": 832, "209": [173, 460, 832, 833, 855, 862], "2095": 403, "20gb": 234, "20x10": 861, "21": [14, 162, 300, 301, 309, 310, 624, 696, 822, 823, 827, 829, 832, 833, 851, 855, 862], "210": [184, 832, 833, 855, 862], "2101": 399, "2102": [404, 426], "2104": 162, "2106": [409, 855], "2108": 448, "211": [177, 832, 833, 855, 862], "2110": 560, "212": [832, 833, 855, 862], "21209": 25, "2125": 409, "213": [460, 825, 832, 833, 839, 841, 855, 862], "2131": 833, "21319406": 833, "2132": 832, "2134": 405, "2136": 434, "21394654203489705": 688, "21399208": 832, "214": [832, 833, 855, 862], "21474836480": 234, "215": [832, 833, 855, 862], "2154": 421, "2159": 394, "216": [161, 192, 817, 832, 833, 855, 862], "2166": 849, "2167": 422, "2168": 822, "217": [832, 833, 834, 855, 862], "217073": 185, "2178": 410, "2179": 832, "218": [832, 833, 855, 862], "2182": 403, "2188": 850, "219": [832, 833, 855, 862], "2190": 833, "21937428942781778": 688, "2194": 438, "21st": 855, "22": [14, 25, 300, 301, 822, 832, 833, 855, 862], "220": [460, 832, 833, 855, 862], "2201": 832, "2208": 805, "2209": 805, "221": [827, 829, 832, 833, 855, 862], "22131880861864428": 688, "22155005": 781, "2216": 422, "2217": 832, "222": [827, 829, 832, 833, 855, 862], "2222": 9, "22296293": 696, "223": [827, 829, 832, 833, 855, 862], "2230": 832, "2235": 421, "224": [827, 829, 832, 833, 855, 862], "2240": [387, 849], "2245": 25, "225": [460, 827, 829, 832, 833, 855, 862], "2255": 835, "2256": 822, "2258": 822, "226": [832, 833, 855], "2265": 833, "22662": 182, "227": [832, 833, 855], "2271": 832, "2272": 409, "2277": 149, "228": [14, 832, 833, 855], "2282": 437, "2284": 460, "2286788": 833, "2289": 387, "229": [832, 833, 855], "2291": [433, 434], "23": [181, 195, 300, 301, 389, 390, 391, 696, 697, 700, 741, 744, 782, 785, 822, 832, 833, 855, 862], "230": [560, 832, 833, 855], "2302": [137, 171, 180, 182, 188], "2303": 409, "23033": [25, 166], "2304": 25, "231": [832, 833, 855], "23142237259162102": 688, "232": [163, 181, 832, 833, 855], "2323": 832, "2324": 433, "2326": 407, "232965": 25, "233": [832, 833, 855], "2330": [460, 833], "23368113896545695": 688, "2337": 688, "2338": 387, "234": [460, 832, 833, 855], "2340": 389, "2342": 399, "2347": 399, "2348": 422, "235": [832, 833, 855], "2351": [430, 431, 432, 433, 434, 435, 436, 437, 438], "2356": 832, "2357": 849, "236": [832, 833, 855], "2360": 438, "2361": 833, "2362": 421, "2363": 435, "23682038840665198": 688, "237": [157, 832, 833, 855], "2370": 388, "2372": [175, 852], "2373": 560, "238": [136, 832, 833, 855], "2384": 401, "2387": 405, "239": [460, 832, 833, 855], "24": [166, 175, 300, 429, 624, 650, 822, 825, 832, 833, 851, 852, 854, 855, 862], "240": [25, 166, 460, 832, 833, 855], "2408": 560, "240k": 827, "241": [832, 833, 855], "2417": 431, "24190318": 832, "242": [832, 833, 855], "2426": [430, 431, 432, 433, 434, 435, 436, 437, 438], "24285506608575758": 688, "243": [832, 833, 855], "2432": 134, "244": [25, 819, 832, 833, 855], "2449029": [4, 239], "24492": 137, "245": [135, 177, 832, 833, 855], "2450": 422, "2451": 404, "2452": 822, "2457": 835, "246": [832, 833, 855], "2467": 460, "2469": 409, "247": [152, 832, 833, 855], "2472495901894738": 688, "2473": 410, "2477": 850, "248": [832, 833, 834, 855], "2481": 394, "2486": 819, "249": [832, 833, 855], "2491": 833, "2494": 832, "2496": 185, "2497": 421, "25": [9, 147, 161, 300, 397, 400, 428, 429, 460, 549, 692, 693, 738, 739, 778, 779, 817, 819, 822, 832, 833, 834, 836, 837, 845, 846, 850, 855, 862], "250": [160, 460, 819, 832, 833, 855], "2500": [9, 613, 822, 850], "2502": 416, "250k": 195, "251": [193, 832, 833, 855], "2513": 422, "25177597999572754": 244, "2519": 833, "252": [832, 833, 855], "2524": 409, "253": [832, 833, 855], "2530": 663, "2533": [421, 832], "253458867276219": 688, "254": [832, 833, 855], "2541": 560, "255": [832, 833, 838, 845, 855], "2556": 460, "256": [720, 721, 805, 818, 819, 827, 832, 833, 845, 846, 855, 868], "2567": 849, "257": [14, 832, 833, 855], "25790247": 832, "258": [832, 833, 855], "2582": [827, 855], "259": [832, 833, 855], "2597": [422, 832], "2598": 833, "26": [165, 822, 827, 829, 832, 833, 855, 862], "260": [832, 833, 855], "2606": 833, "2607": 422, "261": [832, 833, 855], "2611": 422, "262": [159, 832, 833, 836, 855], "2622": 421, "263": [832, 833, 836, 855], "2633": 833, "2638": 421, "264": [832, 833, 855], "2643": 421, "2644": [409, 422], "2649": 421, "26499036865016423": 688, "265": [832, 833, 855], "2650": 688, "2652": 430, "2654": [407, 433, 460], "2658": 422, "2659": 460, "26595447": 832, "266": [832, 833, 834, 855], "2662": 833, "2663": 422, "2664": 832, "2669": 401, "267": [460, 832, 833, 855], "2672": 832, "2675": 421, "268": [832, 833, 855], "2680": 832, "2684": 422, "2687": 560, "2688": [396, 402, 832], "2689": [602, 622, 822], "269": [832, 833, 855], "2695": [647, 648], "27": [25, 631, 822, 832, 833, 838, 841, 855, 862], "270": [832, 833, 855], "2703": [433, 832], "2706": 827, "2708": [25, 154, 817, 818, 820, 827, 834, 836, 837, 849, 851, 852], "2709": [430, 431, 432, 433, 434, 435, 436, 437, 438], "271": [460, 832, 833, 854, 855], "2716": 422, "27163": 170, "2718": 832, "2719": 413, "272": [170, 832, 833, 855], "2721": [128, 129], "272115": 157, "273": [832, 833], "2730008213674695": 688, "2733": 421, "2738": [421, 422], "274": [832, 833], "2743": 431, "275": [832, 833], "2755": 822, "2757": 409, "276": [832, 833], "2766": [647, 648], "277": [163, 832, 833], "2770": [833, 835], "2775": 118, "2777": 850, "278": [832, 833, 851], "2780": 422, "2783258": 163, "2783370": 163, "2787": 460, "2789": 460, "279": [832, 833], "2791": 832, "2794": 421, "2796588354307046": 688, "2797": 410, "2797468602657318": 837, "2798": 849, "28": [9, 169, 195, 420, 822, 823, 832, 833, 837, 855, 862], "280": [832, 833], "2801": 832, "281": [832, 833], "282": [832, 833], "282119": 839, "2823": [422, 560], "2826": 663, "2828": [428, 549], "283": [817, 832, 833, 836], "2830": 833, "28357022069634585": 688, "28367647637469273": 688, "284": [25, 832, 833], "285": [832, 833], "2852": 399, "2855": 405, "2857": 833, "286": [832, 833, 855], "2863627767733977": 688, "2864": 688, "287": [832, 833], "2873": 835, "287326": 25, "2876": 422, "2879": 833, "288": [164, 817, 832, 833], "2882": 460, "289": [829, 832, 833], "29": [144, 195, 624, 696, 697, 741, 782, 822, 823, 832, 833, 854, 855, 862], "290": [829, 832, 833], "29000": 862, "2906": 822, "2908": 422, "2909": 832, "291": [832, 833], "2918": 560, "292": [825, 832, 833, 861, 864], "29230652": 832, "2927": 460, "293": [832, 833], "2938": 832, "294": [832, 833], "2940": 832, "2942": 833, "295": [832, 833], "296": [819, 832, 833], "2962": 421, "29660083": 781, "2967": 832, "2969270646572113": 837, "2969301": 832, "297": [832, 833], "2976": 422, "298": [155, 178, 179, 832, 833], "299": [832, 833], "2994": [410, 434], "2998": 833, "2_capsul": [825, 861, 864], "2_dglgraph": [825, 835, 841], "2_link_predict": [825, 846, 848], "2_node_classif": [825, 868, 870], "2_small_graph": [825, 857], "2a240410": [827, 829, 832, 833], "2d": [336, 383, 390, 412, 415, 453, 571], "2gb": [721, 805], "2k": 635, "2motif": 141, "2x3": 31, "2xlarg": 14, "2\uac1c\uc758": 781, "2\ub97c": 792, "2\ubc88\uc9f8": 798, "2\uc7a5": [790, 810, 814], "3": [4, 5, 6, 9, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 142, 143, 161, 169, 172, 173, 174, 176, 178, 179, 183, 190, 197, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 239, 242, 243, 244, 245, 246, 247, 248, 249, 286, 291, 292, 296, 297, 298, 299, 300, 301, 302, 307, 309, 310, 314, 315, 316, 318, 323, 324, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 352, 379, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 447, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 476, 477, 478, 479, 501, 504, 505, 542, 549, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 573, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 637, 638, 642, 643, 644, 645, 647, 648, 649, 653, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 669, 671, 672, 673, 679, 680, 681, 682, 683, 685, 688, 692, 695, 698, 700, 702, 703, 704, 705, 706, 711, 713, 714, 717, 720, 721, 726, 729, 731, 732, 738, 739, 742, 744, 746, 747, 748, 749, 750, 755, 756, 762, 766, 769, 771, 772, 778, 779, 781, 783, 785, 787, 788, 789, 791, 797, 798, 805, 806, 810, 812, 814, 816, 818, 820, 822, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 849, 850, 851, 862], "30": [25, 166, 181, 299, 397, 400, 408, 420, 455, 456, 460, 609, 619, 620, 624, 631, 721, 805, 817, 822, 832, 833, 834, 836, 837, 852, 855, 862], "300": [137, 142, 143, 159, 182, 192, 194, 832, 833], "3000": [4, 126, 249, 560, 660, 726, 766, 810, 862], "3003": [832, 862], "3004": 822, "3004484304932735": 838, "30050": [697, 741, 782, 845, 846], "301": [180, 832, 833], "302": [832, 833, 836], "3020": 430, "3024": 822, "3025": [396, 402], "3027939452162367": 688, "3028": 688, "303": [832, 833], "3030": [647, 648], "30351": 829, "3039": 421, "304": [164, 832, 833], "305": [161, 832, 833], "3053": [394, 832], "3054": 849, "306": [832, 833], "3063": 409, "3068": 819, "307": [832, 833], "307080": 180, "3078": 433, "308": [159, 832, 833], "3080": 410, "3082": 819, "3083": 833, "309": [832, 833], "30k": 862, "31": [118, 119, 164, 166, 696, 697, 703, 741, 747, 782, 788, 823, 829, 832, 833, 855, 862], "310": [159, 832, 833], "3100": 850, "3102": 832, "3105": 434, "3109e": 832, "311": [153, 832, 833], "31160037": 832, "312": [832, 833], "3126": 460, "313": [832, 833], "3131": 832, "31328748118329997": 688, "3133": 833, "3134": [430, 431, 432, 433, 434, 435, 436, 437, 438], "3135": 422, "314": [159, 832, 833], "31475234031677246": 837, "31479557": 832, "3148": 688, "3148264185956532": 688, "315": [832, 833], "316": [832, 833], "3160": 832, "3161154827254189": 688, "3163": 416, "3168": [647, 648], "317": [14, 832, 833], "3174": [647, 648], "318": [832, 833], "3183": 832, "3184": 833, "3189": 434, "319": [832, 833], "3191": 404, "32": [25, 146, 163, 172, 207, 332, 383, 411, 448, 460, 689, 703, 735, 747, 775, 788, 816, 823, 827, 829, 832, 833, 855, 862, 867], "320": [832, 833], "3203": 435, "3206": 832, "321": [832, 833], "3214": 832, "3219496197945605": 688, "322": [832, 833], "323": [832, 833], "3231": 434, "3235": 438, "324": [832, 833], "3246e": [635, 671], "325": [187, 832, 833], "326": [832, 833], "3266": 833, "327": [832, 833], "3273": 850, "327576": 25, "3277": 832, "328": [832, 833, 834], "3280": 833, "3289": 849, "329": [832, 833, 836], "3295": 390, "3299e": 832, "33": [609, 624, 822, 832, 833, 852, 855, 862], "330": [165, 832, 833], "3303": 415, "3304": 418, "3308": 832, "331": [832, 833], "3316": 417, "332": [832, 833, 838], "33234211884156384": 688, "3326": 410, "3327": [25, 150], "3327259123325348": 837, "333": [151, 817, 832, 833], "3330": [430, 431, 432, 433, 434, 435, 436, 437, 438], "3333": [9, 352, 574, 575, 600, 659, 835], "3337": 849, "33391": 134, "334": [832, 833], "3342": 409, "3346": [647, 648], "335": [832, 833], "3353": 822, "3357": 850, "3358": 832, "336": [832, 833], "3364": [409, 832], "337": [832, 833], "3371": 405, "338": [832, 833], "3381872773170471": 477, "339": [832, 833], "3391": 805, "33929432608774135": 688, "3394": 805, "3397": 832, "34": [25, 152, 166, 167, 827, 829, 832, 833, 839, 855, 862], "340": [832, 833], "3400": 610, "341": [832, 833], "3419": 819, "342": [832, 833], "3420": 833, "34244913": 832, "34270118": [695, 696], "3428": 832, "343": [832, 833], "3439899477636117": 688, "344": [817, 832, 833], "3441": 832, "3447": [409, 822], "34493": 25, "345": [14, 158, 832, 833], "3455": [647, 648], "346": [832, 833], "3462": 407, "3466": 399, "3468": [460, 833], "347": [832, 833], "3470": 849, "348": [832, 833], "3481": 833, "34846782265758314": 688, "3487": 822, "3489": 663, "349": [832, 833], "3497": 410, "35": [145, 147, 174, 817, 832, 833, 834, 836, 837, 855, 862], "350": [142, 832, 833], "3504": [849, 852], "3507421016693115": 837, "35076354": 781, "351": [161, 832, 833], "3514": 401, "3516": 393, "352": [832, 833], "3523777809254057": 688, "3524": 833, "3525": 832, "353": [817, 832, 833], "354": [832, 833], "3541": 410, "355": [832, 833], "3558": 850, "356": [172, 832, 833], "3569": 405, "357": [832, 833], "35711": 829, "3578": 833, "358": [832, 833], "359": [14, 832, 833], "3593": 833, "36": [132, 832, 833, 855, 862], "360": [832, 833], "361": [832, 833], "36101": 149, "362": [832, 833], "3623": 404, "363": [825, 832, 833, 849, 854], "3631": 850, "3633": 833, "3637": [430, 431, 432, 433, 434, 435, 436, 437, 438], "364": [832, 833], "3643": [460, 822], "3648": 134, "365": [832, 833], "3650": 849, "3658": 401, "366": [832, 833], "3664": 388, "36649684241348557": 688, "3665": [438, 688], "367": [832, 833], "3670": 832, "3672": 118, "3676": 822, "3678": 832, "36786902637778773": 688, "368": [832, 833], "368327260017395": 837, "3685": 394, "369": [832, 833], "37": [155, 187, 195, 827, 829, 832, 833, 855, 862], "370": [832, 833], "3700": 403, "370293": 839, "3703": 150, "371": [832, 833], "3717": 410, "372": [832, 833], "3722": 833, "3723": 833, "373": [14, 832, 833], "37318742": 832, "3732e": 832, "3736": 460, "3737": 435, "374": [832, 833], "375": [832, 833], "37507185": 832, "3758": 390, "376": [832, 833], "3766": 832, "377": [832, 833], "3770": 610, "3772": 460, "378": [832, 833], "3781": 409, "3789": [832, 833], "379": [14, 832, 833], "3795": 832, "3796": 219, "38": [827, 829, 832, 833, 855, 862], "380": [832, 833], "3803": 404, "3805": [396, 402], "3808": [647, 648], "3809": 409, "381": [827, 829, 832, 833], "3819": 832, "382": [827, 829, 832, 833], "3820": [434, 855], "3825": [396, 402], "383": [827, 829, 832, 833], "384": [164, 832, 833], "3840": [118, 832], "38449722": 833, "3847": [409, 832], "3848": 832, "385": [832, 833], "3857075870037079": 837, "386": [832, 833], "3860": 850, "3861": 850, "3866": 416, "387": [832, 833], "3872": [647, 648], "3873": 832, "388": [817, 832, 833], "389": [817, 832, 833], "3891": [430, 431, 432, 433, 434, 435, 436, 437, 438], "3893": 409, "3896": 832, "3899": 822, "39": [25, 163, 195, 460, 624, 827, 829, 832, 833, 855, 862], "390": [832, 833], "3906": 832, "391": [832, 833], "3910": 822, "39161865931662243": 688, "392": [832, 833], "3928": 833, "393": [823, 832, 833], "3934": [647, 648], "3936": 832, "3938": 663, "394": [832, 833], "3943": [396, 402, 822], "3944": 832, "3946": 832, "395": [832, 833], "39534097273254654": 688, "396": [832, 833], "39606016": 832, "397": [832, 833], "3971": 822, "3972": 832, "398": [823, 832, 833], "3984": 851, "3985": 460, "399": [823, 832, 833], "3990971": 833, "3991": 849, "3996": 415, "3997": 833, "3_generative_model": [825, 860], "3_message_pass": [825, 836, 841], "3_tree": [825, 855, 857], "3d": [179, 336, 427, 429, 446, 448, 449, 453, 571], "3e": 818, "3f": [817, 818, 820, 827, 834, 836], "3x3": 822, "3\uac00\uc9c0": [776, 778, 802], "3\uac1c\uc758": [792, 801], "3\ub2e8\uacc4\ub85c": 808, "3\uc7a5": [790, 803, 810, 814], "4": [4, 5, 9, 12, 14, 20, 21, 22, 26, 27, 30, 34, 35, 36, 37, 46, 47, 51, 55, 56, 58, 60, 61, 73, 74, 75, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 107, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 132, 142, 143, 148, 172, 173, 195, 209, 210, 213, 214, 215, 216, 217, 219, 220, 229, 230, 239, 242, 243, 244, 245, 249, 286, 292, 296, 297, 298, 299, 300, 301, 302, 307, 314, 315, 316, 318, 324, 329, 330, 332, 333, 334, 335, 336, 338, 339, 340, 346, 352, 379, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 476, 477, 478, 505, 542, 549, 557, 558, 559, 562, 564, 565, 566, 569, 571, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 612, 613, 614, 615, 616, 619, 620, 621, 622, 624, 628, 631, 632, 635, 642, 644, 645, 647, 648, 649, 658, 660, 661, 663, 665, 666, 669, 671, 672, 683, 692, 693, 696, 697, 698, 701, 702, 703, 704, 705, 711, 713, 714, 718, 720, 721, 726, 731, 732, 739, 740, 741, 742, 745, 746, 747, 748, 749, 755, 757, 759, 761, 766, 771, 772, 778, 779, 781, 783, 786, 787, 788, 789, 791, 797, 799, 802, 804, 805, 810, 814, 817, 818, 819, 820, 822, 827, 829, 832, 833, 834, 835, 837, 839, 842, 845, 846, 851, 854, 855, 861, 862], "40": [138, 147, 159, 299, 333, 378, 460, 619, 624, 817, 827, 829, 832, 833, 834, 836, 837, 851, 855, 862], "400": [620, 694, 780, 832, 833, 858, 862], "4000": [173, 819, 822], "4000000": 210, "4007": [460, 833], "400\uac1c\uc758": 780, "401": [832, 833], "402": [832, 833], "4020548164844513": 837, "4022": [403, 832], "4028": 805, "4029": 822, "40294181": 832, "403": [832, 833], "404": [832, 833], "4042": 434, "405": [832, 833], "4050": 832, "40559906615287566": 688, "406": [560, 817, 832, 833, 834], "4063": 409, "407": [832, 833], "40707309111756307": 688, "40708478": 832, "4074": 832, "4077": 832, "4078": 833, "408": [832, 833], "4080": 851, "4081642382536248": 688, "4083": 832, "409": [832, 833, 834], "4093": 833, "40943": 191, "4096": 409, "41": [159, 191, 823, 827, 829, 832, 833, 855, 862], "410": [168, 186, 817, 832, 833], "4102c744bb9d6fd7b40ac67a300e49cd87e28392": [690, 736, 776], "4104": 147, "41094716": 832, "411": [832, 833], "4111": [430, 431, 432, 433, 434, 435, 436, 437, 438], "41127": 138, "4113": 833, "412": [832, 833], "4120": 849, "4125": 832, "4126": 409, "4127": 822, "413": [832, 833], "414": [832, 833], "4140": 822, "415": [152, 832, 833], "41516080644186737": 688, "41527155506593394": 688, "4154": 822, "416": [832, 833], "4167": 9, "417": [832, 833], "4177": 833, "418": [832, 833], "4189": 851, "419": [14, 832, 833], "41928672790527344": 837, "4196": 832, "4197669213305396": 688, "42": [25, 198, 819, 827, 829, 832, 833, 855, 862], "420": [832, 833], "4208": 822, "4209": 851, "421": [832, 833], "4216530595907526": 688, "4217": 832, "422": [832, 833], "4220": 460, "4221": 410, "4222": 832, "42222014": 781, "4228": 832, "423": [832, 833], "424": [832, 833], "4247": 832, "4249": [430, 431, 432, 433, 434, 435, 436, 437, 438], "425": [832, 833], "4255": 851, "426": [832, 833], "4268": 688, "4268254673041745": 688, "427": [825, 832, 833, 838, 841], "4273": 403, "4279": 409, "428": [832, 833], "4280": [832, 851], "429": [832, 833], "4293": [819, 851], "42988138237505735": 688, "4299": [688, 833], "43": [700, 744, 785, 827, 829, 832, 833, 855, 862], "430": [832, 833], "4302": 822, "4306": 851, "431": [181, 192, 832, 833], "4318": [647, 648, 832], "432": [14, 832, 833], "4323": 415, "4325": [128, 129], "433": [832, 833], "4331": 390, "43349734": 832, "4335": 390, "4338": 437, "434": [832, 833], "434887558221817": 837, "4349": [430, 431, 432, 433, 434, 435, 436, 437, 438], "435": [832, 833], "436": [832, 833], "4361": 849, "437": [832, 833], "4371": 833, "438": [832, 833], "439": [832, 833], "4390": 822, "4395": 833, "44": [174, 822, 823, 827, 832, 833, 855, 862], "440": [832, 833], "4400": 173, "4401": 849, "4404": 851, "4405": 833, "4407": 832, "441": [832, 833, 855], "442": [832, 833], "44229384": 833, "443": [832, 833], "4430": 832, "4437": 835, "4438": 851, "444": [832, 833], "44412796119211184": 688, "4445": 835, "445": [14, 832, 833], "4451": [647, 648], "4453": 833, "4457": 819, "4458": [409, 833], "446": [832, 833], "4463": 832, "4465": 405, "447": [832, 833], "4470617033458436": 688, "4475": 851, "448": [832, 833], "4482": 410, "449": [832, 833], "4497": 435, "44987436": 832, "4499": 822, "45": [163, 460, 817, 827, 832, 833, 834, 836, 837, 839, 855, 862], "450": [817, 832, 833], "4500966": 862, "4503": 851, "4508": 663, "451": [832, 833], "4511": 437, "4518": 822, "452": [832, 833], "4523600060547709": 688, "4526": 833, "453": [832, 833], "4536": 851, "454": [832, 833], "4541": 832, "4542": [409, 460], "4543": 832, "45441619816038514": 688, "455": [832, 833], "4552139639854431": 837, "4553e": 832, "4558": 832, "456": [149, 832, 833], "457": [14, 832, 833], "4570": [396, 402, 805], "4572": 819, "4573": 833, "458": [832, 833], "4586": 832, "459": [832, 833], "4590": 460, "46": [421, 823, 827, 832, 833, 855, 862], "460": [832, 833], "4600": 173, "4601": [822, 851], "4609": 805, "461": [832, 833], "462": [832, 833], "4620": 460, "4623": 833, "4629": [128, 129], "463": [832, 833], "4630": 460, "4631": 410, "464": [159, 832, 833], "4647410679872376": 688, "465": [832, 833], "4652": [409, 832], "4653": 435, "4654086994009452": 688, "466": [832, 833, 836], "4664": 118, "467": [827, 829, 832, 833, 836], "4670": 851, "4670e": 832, "4673": 410, "4674": 822, "468": [832, 833], "4680": 832, "4682": 405, "4683": 832, "4684": 819, "469": [832, 833], "4692371689047904": 688, "4698": 390, "47": [421, 560, 624, 827, 832, 833, 855, 862], "470": [832, 833], "4700": 822, "4706": 822, "471": [832, 833], "472": [817, 832, 833], "4721": 819, "47224962583565544": 688, "4727": 851, "473": [832, 833], "4731": 663, "47382": [168, 186], "474": [161, 832, 833], "475": [832, 833], "4750": 833, "4754476547241211": 837, "4755": [430, 431, 432, 433, 434, 435, 436, 437, 438], "4756": 688, "47562693094002173": 688, "476": [832, 833], "4760": 433, "4762": [431, 855], "4764": 849, "477": [832, 833], "4770": 404, "4770019763881086": 688, "4775": 832, "478": [14, 823, 832, 833], "47840304": 832, "4787": 833, "4788": 832, "479": [832, 833], "4797": 393, "48": [421, 827, 832, 833, 855, 862], "480": [832, 833], "4800": 173, "4801": [396, 402], "4805": 403, "481": [817, 832, 833], "4810e": 832, "4817": 460, "482": [832, 833], "4821": 405, "483": [832, 833], "483142": 158, "4837": 430, "48374886": 832, "484": [832, 833], "4844": [822, 832], "4847": 409, "485": [832, 833, 836], "4850": 833, "4854": 819, "486": [163, 832, 833, 836], "487": [14, 832, 833], "488": [832, 833], "48810": 132, "4884": 174, "4885": 435, "4888": 4, "489": [817, 832, 833], "48921": 180, "4893": [832, 851], "49": [25, 421, 827, 829, 832, 833, 838, 855, 862], "490": [823, 832, 833, 836], "49036488": 832, "49037522512771525": 688, "4904": 435, "4909": 688, "490938012147181": 688, "491": [135, 823, 832, 833, 836], "4910e": 337, "49150916": 833, "492": [181, 832, 833], "4921": 832, "4921e": 337, "493": [152, 832, 833], "493888090726854": 688, "49397782380750765": 688, "494": [832, 833], "4940": [435, 688], "4941767156124115": 837, "4946": 833, "4948": 409, "495": [14, 152, 832, 833], "4954": [647, 648], "4955": 822, "496": [832, 833], "4964": 819, "4969": 832, "497": [832, 833], "4977": 435, "498": [832, 833], "4981": 822, "4983": 819, "499": [832, 833], "4994": 819, "4_link_predict": [825, 837, 841], "4_old_win": [825, 864], "4_rgcn": [825, 850, 854], "4d": 179, "4f": [819, 849, 850, 851, 852, 855, 867, 868], "4m": [210, 714, 800], "4part_data": [845, 846], "4th": 721, "4\u6761\u8fb9": 745, "4\uac00\uc9c0": 777, "4\uac1c\uac00": 785, "4\uac1c\uc758": [788, 810], "4\uc7a5": [790, 810, 812, 814], "5": [5, 6, 9, 12, 14, 20, 22, 26, 27, 28, 34, 35, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 107, 113, 114, 115, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 137, 142, 143, 145, 146, 147, 148, 149, 152, 155, 156, 159, 161, 163, 172, 173, 174, 178, 184, 185, 187, 193, 197, 200, 205, 210, 214, 216, 219, 220, 229, 230, 242, 244, 245, 249, 292, 296, 297, 298, 299, 300, 301, 302, 307, 314, 315, 318, 323, 328, 329, 330, 333, 334, 335, 336, 337, 339, 346, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 447, 450, 459, 477, 478, 504, 505, 542, 549, 553, 554, 558, 559, 560, 563, 564, 565, 566, 567, 571, 576, 577, 596, 603, 609, 610, 612, 614, 615, 616, 617, 621, 628, 630, 631, 632, 642, 644, 645, 647, 648, 649, 650, 653, 656, 657, 658, 660, 661, 663, 665, 666, 669, 670, 683, 685, 688, 690, 692, 693, 695, 698, 699, 700, 701, 702, 703, 705, 706, 711, 712, 713, 714, 715, 716, 719, 721, 724, 732, 736, 739, 741, 742, 743, 744, 745, 746, 747, 749, 750, 755, 756, 759, 761, 764, 766, 772, 776, 779, 782, 783, 784, 785, 786, 787, 788, 791, 797, 798, 802, 804, 805, 808, 810, 816, 817, 818, 819, 820, 822, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 851, 852, 855, 861, 862, 867, 868], "50": [146, 171, 174, 175, 181, 421, 427, 429, 460, 550, 560, 624, 817, 827, 829, 832, 833, 834, 836, 837, 849, 851, 852, 855, 862], "500": [150, 154, 160, 176, 700, 726, 727, 744, 766, 767, 785, 810, 811, 817, 818, 820, 832, 833, 834, 836, 837, 838, 849, 851, 852, 861], "5000": [4, 9, 25, 126, 191, 249, 352, 385, 386, 420, 480, 552, 560, 574, 575, 596, 600, 613, 659, 667, 726, 766, 810, 822], "50000": [14, 146, 158], "500000": 210, "500k": 210, "501": [832, 833, 836], "5010": 819, "5011": 405, "5012": 851, "5016": 822, "5018": 832, "502": [832, 833], "503": [832, 833, 834], "5030": 409, "5034": 805, "5035": 833, "5039": 805, "504": [832, 833], "5041": [396, 402], "5042": 413, "505": [832, 833], "5053": 388, "5054": 431, "506": [832, 833, 836], "5062": 833, "5065": [647, 648], "5067": 832, "507": [832, 833, 836], "5076": 832, "508": [832, 833], "5080": 822, "5082": 822, "5088": 822, "509": [832, 833, 852], "5097": 460, "5099": 832, "51": [193, 421, 827, 829, 832, 833, 855, 862], "510": [832, 833], "5107": 833, "511": [832, 833], "5117": 663, "512": [446, 449, 832, 833, 855], "5120": 849, "513": [832, 833], "5131": 832, "514": [832, 833], "5141": 835, "5142": 460, "5145": 832, "5146": 833, "515": [193, 832, 833], "5151": 851, "5159": 405, "516": [832, 833], "51649048": 832, "5166": 832, "5169": 409, "517": [832, 833], "5171": [647, 648], "5172640085220337": 837, "518": [832, 833, 836], "5182": [647, 648, 855], "519": [832, 833], "5191": 832, "5191278830882644": 688, "5192": 393, "5197": [430, 431, 432, 433, 434, 435, 436, 437, 438, 647, 648, 688], "5197462471155317": 688, "52": [421, 819, 823, 829, 832, 833, 855, 862], "520": [832, 833], "52000000": 239, "5201": 185, "5206": [833, 849], "521": [832, 833], "5215": 418, "5217": 420, "522": [832, 833, 836], "5221": [435, 460], "5222": 833, "5227": 688, "5227112950269823": 688, "523": [832, 833], "5234": 832, "5236": [405, 832], "5237": 435, "524": [14, 817, 832, 833, 841], "5243": 413, "525": [832, 833], "5251800239734318": 688, "5259": 393, "526": [832, 833], "5266": 405, "527": [832, 833], "5275": 832, "5278": [430, 431, 432, 433, 434, 435, 436, 437, 438], "5279": 822, "528": [832, 833], "5284": 833, "5285": 833, "5286": 401, "5287": 410, "529": [219, 832, 833, 852], "529195480661293": 688, "5297": [647, 648], "5299": 819, "53": [14, 421, 823, 829, 832, 833, 855, 862], "530": [832, 833], "5303": [647, 648], "5306": 435, "531": [832, 833], "5310": 832, "5312": 460, "5315": 832, "532": [832, 833], "5322": 438, "5327": 393, "533": [832, 833], "5333": 9, "5335882306098938": 837, "534": [832, 833], "5341": 819, "5347": [396, 402], "5348": 688, "534822233529295": 688, "535": [832, 833], "5352": 413, "5357": 819, "536": [832, 833], "5364": 832, "5365": 688, "5365210052235699": 688, "537": [832, 833], "5371": 822, "538": [832, 833], "539": [832, 833, 836], "5392": 832, "5398": 416, "54": [421, 829, 832, 833, 855, 862], "540": [832, 833], "5400687466285844": 688, "5401": 688, "5406": 621, "5407": 833, "5409": 819, "541": [832, 833], "5410": 851, "5414": 833, "5418": [647, 648], "542": [14, 832, 833], "5420": 437, "5421": 403, "543": [832, 833], "544": [184, 832, 833], "5445": [430, 832], "5446988": 832, "5447": 832, "5448": 832, "545": [832, 833], "5454": [409, 663], "5454703921677284": 688, "5455": 688, "546": [832, 833], "547": [832, 833], "5477868606453535": 688, "5479e": 832, "548": [832, 833], "549": [832, 833], "5490": 418, "5495035052928215": 688, "55": [147, 181, 421, 817, 822, 829, 832, 833, 834, 836, 837, 855, 862], "550": [832, 833], "551": [832, 833], "5511": 434, "5512": 403, "5513": 418, "5514": 819, "552": [832, 833], "5520": 460, "5527": [819, 833], "5529": 433, "553": [832, 833], "5538": [434, 832], "554": [829, 832, 833], "5540": 410, "5541": [128, 129], "5543": 819, "555": [829, 832, 833], "5551": 409, "556": [832, 833], "5561": 819, "5563": 849, "5563827995742111": 688, "5564": 688, "557": [829, 832, 833, 834], "558": [817, 829, 832, 833], "5580": 832, "5585": 832, "5589": 832, "559": [829, 832, 833], "55965944": 833, "56": [421, 829, 832, 833, 838, 855, 862], "560": [829, 832, 833], "561": [832, 833, 851], "5612": 663, "5614": 118, "5614197853127827": 688, "562": [817, 829, 832, 833, 851], "56202794": 833, "5622928738594055": 837, "5628": 819, "563": [829, 832, 833], "564": [829, 832, 833, 836], "5643": 409, "565": [829, 832, 833], "5653": 835, "56543017": 832, "5657": 822, "5658": [430, 431, 432, 433, 434, 435, 436, 437, 438], "566": [560, 817, 829, 832, 833], "5660": 835, "56662854": 833, "5668682": 133, "567": [829, 832, 833], "5671": 460, "5673": 822, "568": [169, 829, 832, 833], "5681": 822, "5683": 833, "569": [829, 832, 833], "5692": [647, 648], "5693": 849, "57": [421, 624, 820, 829, 832, 833, 855, 862], "570": [832, 833], "571": [832, 833], "5711": 409, "572": [832, 833], "5721": 405, "5725": [430, 431, 432, 433, 434, 435, 436, 437, 438, 832], "5725330322207948": 688, "573": [14, 817, 832, 833], "574": [832, 833], "574418": 25, "5746912787380253": 688, "5749": 688, "5749339182767451": 688, "575": [832, 833], "57507094": 832, "576": [832, 833], "5763": 832, "5766": 833, "5769": 832, "577": [832, 833], "5770": 835, "578": [832, 833], "5781": 832, "579": [832, 833], "5796": 822, "58": [14, 829, 832, 833, 855, 862], "580": [832, 833], "5803": 822, "5808": 822, "581": [832, 833], "5810": 833, "582": [832, 833], "5822": 433, "583": [832, 833, 836], "5837e": 832, "584": [832, 833], "5840": 438, "5845": 460, "5847": 430, "5849": 399, "585": [832, 833], "5851": 822, "5854": 805, "58599468": 832, "586": [832, 833, 836], "5865": 832, "5866": 822, "587": [832, 833], "5873": [416, 832], "5878": 409, "588": [14, 832, 833], "5887": 819, "589": [832, 833], "5890": 822, "5892": 833, "5897": 832, "5899": 855, "59": [25, 155, 187, 460, 827, 832, 833, 855, 862], "590": [832, 833], "5901": [647, 648], "59071": 158, "5908": 805, "591": [832, 833], "5910": 849, "5913335505943637": 688, "592": [145, 832, 833], "5923": 663, "5927": 832, "593": [832, 833], "5930": 832, "5937484188166621": 688, "594": [832, 833, 836], "5941": 832, "5942": 431, "5945": [396, 402], "59497222": 833, "595": [818, 832, 833], "5952": 832, "596": [832, 833], "5960": 433, "5962": 805, "5967": 805, "597": [832, 833], "598": [827, 832, 833], "599": [832, 833], "5992": 833, "59944": 829, "5_dgmg": [825, 858, 860], "5_graph_classif": [825, 838, 841], "5a0c40b": 858, "5e": [423, 425, 720, 721, 805, 817], "5f": 820, "5x4": 835, "5\uac1c\uc758": 802, "5\uc7a5": [790, 797], "6": [3, 6, 9, 11, 20, 26, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 107, 117, 118, 119, 122, 130, 131, 142, 147, 148, 150, 151, 156, 163, 172, 173, 189, 210, 214, 215, 216, 242, 292, 296, 297, 299, 300, 301, 302, 307, 314, 315, 318, 328, 329, 336, 337, 352, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 554, 558, 560, 566, 571, 619, 635, 637, 642, 644, 645, 657, 665, 671, 685, 698, 701, 705, 710, 724, 726, 727, 729, 742, 745, 749, 754, 755, 766, 767, 769, 780, 783, 786, 796, 797, 810, 811, 812, 816, 818, 820, 822, 827, 829, 832, 833, 835, 839, 841, 851, 855, 861, 862], "60": [169, 176, 189, 299, 460, 619, 624, 817, 827, 832, 833, 834, 836, 837, 855, 862], "600": [25, 832, 833, 858], "6000": 217, "60000": 169, "6000000238418579": 476, "6004": 833, "6005": 25, "6008": 409, "601": [832, 833, 836], "602": [181, 832, 833], "6020": 833, "603": [832, 833], "6032": 431, "6038": 833, "604": [832, 833, 834], "604045": 173, "604094": 173, "6044": 418, "6045": 435, "605": [832, 833], "6050": 835, "606": [823, 832, 833], "6066": [396, 402], "607": [832, 833], "6073": 819, "608": [823, 832, 833], "6081": 833, "6084": 822, "60866226": 832, "6089": 832, "609": [832, 833], "6095": 663, "61": [827, 832, 833, 855, 862], "610": [818, 832, 833], "6106": 410, "611": [829, 832, 833], "6114": [647, 648], "61161392": 832, "6118": [430, 431, 432, 433, 434, 435, 436, 437, 438], "6118386331195641": 688, "61191552": 696, "61191553": 696, "61191556": 696, "612": [829, 832, 833], "613": [829, 832, 833, 834], "6132": 833, "614": [817, 832, 833], "6143": 409, "6146": 431, "615": [181, 832, 833], "6156748364694707": 688, "616": [832, 833], "6161": 822, "6163": 388, "617": [832, 833], "618": [832, 833], "6189": 832, "619": [832, 833], "6199": 435, "61gb": 14, "61m": [714, 800], "62": [832, 833, 855, 862], "620": [832, 833, 834], "620118223673067": 688, "6206": [822, 833], "621": [832, 833, 834], "6211": 435, "6213": 460, "622": [832, 833], "6220": [409, 822], "6221": 460, "6222": 430, "623": [832, 833], "6233": 833, "6237": 849, "624": [832, 833], "6248": 832, "625": [832, 833], "62539528": 239, "6254": 663, "626": [832, 833], "6261": 832, "62616728": 832, "6267": 832, "6267638206481934": 837, "627": [827, 829, 832, 833], "6273": 833, "628": [827, 829, 832, 833], "6287": 833, "629": [827, 829, 832, 833], "6291": 822, "6295": 663, "63": [25, 703, 747, 827, 829, 832, 833, 855, 862], "630": [163, 827, 829, 832, 833], "6305": 434, "631": [827, 829, 832, 833], "6317": 434, "6319": 460, "632": [827, 829, 832, 833, 834, 836], "6325": 663, "633": [827, 829, 832, 833], "634": [827, 829, 832, 833], "6340": [409, 819], "634899790318452": 688, "635": [832, 833], "6355": 430, "63563": 25, "6356691": 833, "636": [817, 832, 833], "6365": [430, 431, 432, 433, 434, 435, 436, 437, 438], "637": [832, 833], "6373": 418, "6375": [399, 819], "6375445528248924": 688, "6379": [647, 648], "638": [832, 833], "639": [14, 832, 833], "6393": 409, "6399": 433, "64": [14, 172, 195, 383, 419, 421, 425, 426, 568, 703, 747, 788, 827, 829, 832, 833, 855, 862], "640": [818, 832, 833], "6408": 403, "641": [817, 832, 833, 851], "6418": 460, "642": [832, 833], "643": [832, 833], "6433e": 832, "644": [832, 833], "6441": 832, "645": [832, 833], "6450": 849, "6453": 835, "6453746567017163": 688, "646": [832, 833], "6462162561249654": 688, "647": [832, 833], "6470": 833, "6477": 389, "648": [832, 833], "6483": 832, "648874463": 696, "649": [829, 832, 833], "6492": 832, "6494437360242048": 688, "64d0f3f": 14, "65": [153, 817, 823, 832, 833, 834, 836, 837, 855, 862], "650": [136, 829, 832, 833], "6505": 832, "651": [829, 832, 833], "6512e": [635, 671], "6515": [647, 648], "652": [14, 829, 832, 833], "6526403892728874": 688, "653": [829, 832, 833], "6530": 833, "654": [829, 832, 833], "6544": 819, "6544e": 832, "6549": 410, "655": [829, 832, 833], "6557": [428, 549], "6558": 460, "656": [818, 829, 832, 833, 834], "6561": 833, "6562": 805, "6568": [396, 402, 413], "657": [829, 832, 833], "6576": 832, "6577": 832, "658": [14, 829, 832, 833, 834], "6580": 688, "6580438064356824": 688, "6585": 621, "65854": 182, "659": [829, 832, 833, 834], "6590e": 832, "6594951663841697": 688, "6595": 688, "6597": 416, "6598715708878852": 688, "66": [822, 827, 829, 832, 833, 855, 862], "660": [832, 833], "6602": 835, "6605": 832, "6606": 822, "661": [832, 833], "662": [832, 833, 834], "6620": 833, "6621": 833, "6624186423087752": 688, "6628": 819, "663": [817, 829, 832, 833], "6630": 832, "664": [829, 832, 833], "665": [832, 833], "6655": 805, "666": [823, 832, 833], "6662": 832, "6667": [600, 659], "667": [832, 833], "6675": 832, "66776418": 832, "668": [832, 833, 836], "6689": 832, "669": [832, 833], "66933766": 832, "6694943496824788": 688, "67": [832, 833, 855, 862], "670": [832, 833], "6702": [647, 648], "671": [817, 827, 829, 832, 833], "6717": 819, "672": [827, 829, 832, 833], "672884": 144, "673": [827, 829, 832, 833], "674": [823, 827, 829, 832, 833], "6746269314422184": 688, "6746882200241089": 837, "675": [827, 829, 832, 833], "6751": 819, "6754": 434, "676": [832, 833, 834], "6767": 832, "677": [163, 173, 832, 833], "6776": 833, "6776417760682221": 688, "678": [832, 833, 836], "6780": 833, "6783": 833, "6788": 832, "679": [832, 833], "6795": 819, "67985810014162": 688, "6799": 688, "68": [170, 823, 832, 833, 855, 862], "680": [832, 833, 834], "68069293": 832, "681": [832, 833], "6810484348765842": 688, "6811": 819, "682": [173, 832, 833], "6820": 849, "6824": 849, "6825": [430, 431, 432, 433, 434, 435, 436, 437, 438], "6827": 832, "683": [817, 832, 833, 855], "68315846": 833, "684": [817, 832, 833, 834, 836], "6845": 434, "685": [832, 833], "686": [832, 833], "687": [832, 833, 834], "6871": 410, "6876": 433, "6877": 835, "688": [14, 832, 833, 836], "6882": 460, "689": [832, 833, 834], "6893": [647, 648], "69": [173, 823, 832, 833, 852, 855, 862], "690": [818, 823, 832, 833, 834], "6901745368284345": 688, "6906": 118, "6907": 435, "6908": [394, 832, 833], "691": [832, 833], "6910": 663, "6914": 832, "6916221976280212": 837, "692": [832, 833], "6925": [430, 431, 432, 433, 434, 435, 436, 437, 438], "692873149428549": 688, "6929": 832, "693": [832, 833], "6931": 409, "6937": [460, 822], "694": [832, 833], "69407372": 832, "6943": 805, "695": [832, 833], "6952": 849, "6954": 460, "6955": 435, "696": [832, 833, 836], "6962": 430, "6963e": 832, "697": [832, 833], "698": [14, 832, 833], "6985674921582508": 688, "698592283371875": 688, "6986": 688, "6989": 832, "699": [832, 833], "6994": 851, "6_line_graph": [825, 851, 854], "6_load_data": [825, 839, 841], "6gb": 696, "6\u4e2a\u8282\u70b9": 745, "6\uc740": 780, "6\uc744": 798, "6\uc7a5": [790, 796, 808, 810], "7": [6, 9, 14, 20, 26, 79, 80, 81, 82, 122, 136, 142, 154, 160, 161, 162, 163, 165, 171, 172, 177, 179, 242, 292, 296, 297, 298, 299, 300, 301, 302, 307, 314, 323, 336, 337, 401, 429, 553, 554, 558, 563, 602, 622, 635, 642, 644, 656, 657, 665, 671, 701, 704, 705, 710, 711, 714, 729, 738, 745, 748, 749, 754, 756, 769, 778, 786, 789, 796, 797, 798, 812, 816, 817, 818, 820, 822, 823, 827, 829, 832, 833, 834, 836, 837, 849, 851, 852, 855, 861, 862], "70": [25, 153, 184, 210, 817, 823, 832, 833, 834, 836, 837, 855, 862], "700": [832, 833, 834], "7000": [428, 549], "7003": 832, "701": [192, 832, 833], "7012": 832, "7014": 832, "702": [832, 833], "7021": 822, "7023": 822, "7026": [805, 832], "703": [181, 832, 833], "7031": 805, "7033": 855, "704": [832, 833], "7045": 833, "7048": [396, 402], "705": [832, 833], "7051530741717352": 688, "7052": 832, "7053": 409, "7054": 832, "706": [173, 832, 833, 834], "70621083": 832, "707": [832, 833, 836], "7071": 659, "708": [832, 833], "7080": 849, "709": [832, 833, 836], "7091": 434, "7095": 460, "70it": 820, "71": [169, 184, 827, 829, 832, 833, 855, 862], "710": [153, 832, 833], "711": [832, 833], "7111": 832, "712": [818, 832, 833], "713": [696, 817, 832, 833, 834], "7138": 434, "714": [832, 833], "7141": [118, 822], "7149215340614319": 837, "715": [832, 833], "7153": 118, "716": [194, 832, 833], "7163": 805, "7165": 822, "7168": 805, "717": [161, 162, 163, 832, 833], "7174": 833, "7174910641836348": 688, "7176e": 832, "718": [832, 833], "719": [832, 833], "7191": 832, "7196969604886617": 688, "7197": 688, "72": [827, 829, 832, 833, 855, 862], "720": [825, 832, 833, 834, 836, 855, 857], "721": [832, 833], "7211": 25, "722": [135, 832, 833, 834, 836], "723": [832, 833, 836], "7234": 832, "724": [818, 832, 833, 836], "72461738": 833, "725": [832, 833], "7250": 849, "726": [192, 817, 818, 832, 833, 834], "7262": 132, "7268": [832, 833], "7269": [128, 129], "727": [832, 833, 836], "728": [832, 833], "72833325": 832, "7287": 435, "7287e": [635, 671], "729": [149, 832, 833], "7290": 832, "7291568018841328": 688, "73": [827, 829, 832, 833, 855, 862], "730": [818, 832, 833, 834, 836], "7301": 833, "730570": 839, "7307": 833, "731": [832, 833], "7311": [602, 622, 822], "7319": 819, "732": [159, 818, 832, 833], "7321742043493028": 688, "7327": 832, "733": [832, 833], "7334": 832, "734": [818, 832, 833, 836], "7349": 832, "735": [832, 833], "7350": 849, "7352138669985214": 688, "7356": [431, 819], "736": [832, 833, 836], "7360": 849, "7365": 460, "7368": [688, 833], "736833152378035": 688, "737": [817, 832, 833], "7370": 849, "7376": [822, 833], "73791084": 833, "738": [832, 833, 834, 836], "7380": [833, 849], "739": [832, 833], "7390": 849, "74": [25, 827, 829, 832, 833, 855, 862], "740": [159, 817, 832, 833, 836], "7400": [822, 849], "7405": 819, "741": [832, 833, 836], "7410": [431, 849], "7412": 832, "742": [832, 833, 834, 836], "7420": 849, "74207034": 832, "7423": 832, "7426": 688, "7426272601929126": 688, "7427": 430, "743": [818, 832, 833, 836], "744": [832, 833, 836], "7440": 849, "7445": 832, "7448e": 832, "7449e": 832, "745": [136, 818, 832, 833, 836], "7457985352827006": 688, "746": [818, 832, 833, 836], "7465": 460, "747": [832, 833, 836], "7476": 833, "748": [165, 832, 833, 836], "7480": 849, "749": [832, 833, 834, 836], "75": [14, 243, 428, 549, 716, 759, 802, 817, 827, 829, 832, 833, 834, 836, 837, 855, 862], "750": [832, 833, 834, 836], "7500": [552, 667], "7507": [647, 648], "751": [817, 832, 833], "7510": 849, "752": [135, 823, 832, 833, 836], "7521": 822, "7525": 401, "753": [818, 832, 833, 836], "7532": 851, "754": [817, 832, 833, 834], "7540": 437, "755": [14, 832, 833, 836], "7550": 849, "7556": 388, "7557": 855, "756": [160, 832, 833, 834, 836], "7560": [433, 849], "7564": 822, "75652": 829, "7567": [430, 431, 432, 433, 434, 435, 436, 437, 438], "757": [832, 833, 836], "7573": 832, "758": [832, 833, 834, 836], "7580": 849, "7583372765843964": 688, "7584": 833, "7587": 409, "7588": 688, "7588441197954202": 688, "759": [832, 833, 834, 836], "7590": 849, "76": [832, 833, 855, 862], "760": [817, 832, 833, 834], "7600": [134, 849], "76017339": 833, "7608": 833, "761": [832, 833], "7613943085507672": 688, "7614": 688, "762": [817, 832, 833, 834], "7620": 849, "7629": 822, "763": [832, 833, 836], "7630": 849, "764": [832, 833, 836], "7640": 849, "7646e": 832, "765": [832, 833, 836], "7650": [25, 849], "765544096939567": 688, "7656": 420, "7659": 851, "766": [832, 833, 834, 836], "7665": 405, "7667": 851, "767": [135, 832, 833, 834, 836], "7670": 822, "76750": [827, 829], "7678": 833, "768": [159, 817, 832, 833, 834, 836, 855], "7680": [832, 849], "769": [832, 833, 836], "7692": 409, "7697": 688, "7697294432580938": 688, "77": [823, 832, 833, 855, 862], "770": [832, 833, 834, 836], "7700": 849, "7702": 851, "7704": 855, "7709": 417, "771": [817, 832, 833, 834], "7710": [128, 129, 438], "7711": 410, "772": [817, 832, 833, 834, 836], "7720": 805, "7721": 409, "7726": 822, "773": [832, 833, 834], "7730": 849, "774": [832, 833], "7740": 849, "775": [832, 833], "7752": 460, "7753": 822, "7756": 835, "776": [817, 818, 832, 833], "776002616178397": 688, "7762": 460, "7766": 460, "7767": 851, "7768": 822, "777": [832, 833, 834], "7773": 405, "7774": 390, "778": [135, 832, 833], "77800": 820, "7787": 421, "7788": 822, "779": [832, 833], "7793": 832, "77it": 819, "78": [832, 833, 855, 862], "780": [817, 832, 833], "7802": 855, "781": [817, 820, 832, 833], "78100": 820, "7815": [832, 851], "7819": 688, "7819383771535038": 688, "782": [832, 833], "7821": 822, "7827": 805, "783": [832, 833], "784": [14, 817, 832, 833], "7840": 850, "7846": 460, "7849": 437, "785": [832, 833], "7852": 832, "7859": [819, 822], "78597807": 832, "786": [817, 832, 833], "7861": 819, "7863421810531344": 688, "7865": 401, "787": [832, 833], "7873": 850, "788": [151, 817, 825, 832, 833, 834, 841], "78804": 171, "7884": 819, "7889": 851, "789": [832, 833], "7891": 688, "7891429392727503": 688, "7893727601272978": 688, "7894": 460, "79": [460, 823, 832, 833, 855, 862], "790": [817, 832, 833], "7901988878812207": 688, "7902": 688, "7905": 410, "7907": [833, 850], "791": [817, 832, 833], "7914": 851, "79141926": 832, "7918": 851, "792": [832, 833], "7924": [435, 833], "793": [153, 832, 833], "7932e": 832, "7935": 851, "7939": 850, "794": [14, 832, 833], "7944": 855, "7946": 409, "7949": [430, 431, 432, 433, 434, 435, 436, 437, 438], "795": [817, 825, 832, 833, 834, 852, 854], "796": [832, 833], "797": [832, 833], "7972": 850, "7973": 435, "7979": 835, "798": [159, 832, 833], "7980": 822, "7981": 835, "7983": 833, "799": [832, 833], "7990": 832, "7992": 851, "7993": 409, "7994": 851, "7997": [647, 648], "7_transform": [825, 862, 864], "7g": [721, 805], "7\u548c11": 756, "7\u884c": 738, "7\ubd80\ud130": 800, "7\uc7a5": 790, "8": [4, 6, 9, 10, 14, 20, 130, 136, 139, 140, 142, 152, 153, 172, 184, 189, 190, 198, 207, 244, 245, 292, 297, 299, 300, 301, 302, 307, 314, 330, 334, 335, 336, 339, 389, 390, 391, 397, 400, 408, 446, 448, 449, 451, 452, 453, 454, 458, 460, 477, 478, 558, 560, 566, 624, 642, 644, 656, 665, 700, 701, 703, 705, 711, 744, 747, 756, 785, 788, 798, 816, 817, 818, 819, 820, 822, 827, 829, 832, 833, 838, 846, 851, 852, 855, 861, 862, 867], "80": [142, 143, 161, 190, 193, 460, 817, 819, 832, 833, 834, 836, 837, 855, 862, 867], "800": [832, 833], "8001": 851, "8006": [822, 850], "801": [832, 833], "8017": [832, 851], "8019": 832, "802": [133, 560, 832, 833], "803": [832, 833], "8030": 435, "8031": 851, "8032": 833, "8039": 833, "804": [14, 832, 833], "8043": [434, 850], "8044": 832, "8046": 832, "805": [151, 163, 832, 833], "8055": 833, "8058": 409, "806": [832, 833], "8065": [422, 832, 851], "8068": 416, "807": [818, 832, 833, 836], "80728842": 832, "8078": 833, "808": [832, 833], "8080": 21, "8081": 832, "8086": 460, "8087": 850, "809": [832, 833], "8090": 663, "809016994374948": 338, "8095": 855, "81": [151, 816, 823, 832, 833, 852, 855, 862], "810": [832, 833], "8105": 833, "8109": 849, "811": [832, 833], "8111": [431, 833], "8113": [430, 851], "811333": 25, "8117650553546695": 688, "8119": 851, "812": [560, 832, 833], "8124": 835, "81244791": 832, "813": [817, 832, 833], "8132": 421, "8135": 403, "8137": [430, 431, 432, 433, 434, 435, 436, 437, 438], "814": [832, 833], "8141": 833, "8142": 850, "8146": 421, "8149": 688, "8149104951283953": 688, "815": [832, 833], "8158": 851, "816": [832, 833], "817": [832, 833], "8174": 832, "818": [161, 832, 833], "81845812": 832, "8185e": 832, "8189658": 781, "819": [194, 832, 833], "8199": 433, "82": [172, 832, 833, 852, 855, 862], "820": [832, 833], "8203": 822, "8208": 418, "821": [161, 832, 833], "821187": 839, "8212": 850, "822": [817, 832, 833], "823": [14, 832, 833], "8235": 410, "824": [832, 833], "8241": 833, "8244": 832, "8245": 409, "8247": 832, "825": [832, 833], "8250": 819, "8251": 851, "8252": 832, "8256": 832, "826": [832, 833], "8262": 405, "827": [832, 833], "8278": 855, "828": [832, 833], "8287": 421, "829": [14, 832, 833], "8293": 833, "82995981": 832, "83": [195, 823, 832, 833, 852, 855, 862], "830": [832, 833], "8300": 850, "8301": 832, "8307": [647, 648], "831": [178, 179, 181, 832, 833], "832": [832, 833], "8323": 401, "8325": 421, "8326": 404, "8326121496142408": 688, "833": [832, 833], "834": [818, 832, 833], "8349": 849, "835": [832, 833], "836": [832, 833], "8368": 850, "8369": 833, "837": [832, 833], "8371": 422, "8377": [430, 431, 432, 433, 434, 435, 436, 437, 438], "8379": 822, "838": [832, 833], "8382": 850, "8387": 434, "839": [832, 833], "8399": 850, "84": [195, 832, 833, 855, 862], "840": [832, 833], "8400": 610, "841": [832, 833], "8410": 850, "842": [153, 832, 833], "8421": 850, "84234341": 832, "8425": 855, "8425893398620876": 837, "843": [832, 833], "8437": 421, "8438": 822, "844": [832, 833], "8440": 832, "84450939": 832, "8448": 850, "845": [832, 833], "8450": 822, "8451870383322376": 688, "8453123358491914": 688, "8456": 832, "846": [832, 833], "847": [194, 832, 833], "8470": 435, "8478810655406659": 688, "848": [832, 833], "8482": [822, 850], "8487": 403, "8489": [647, 648], "849": [832, 833], "8494919263589972": 688, "8495": 688, "849983324532477": 688, "85": [817, 832, 833, 834, 836, 837, 855, 862], "850": [832, 833], "851": [832, 833], "8512": 822, "8515": 421, "852": [832, 833], "8521": [430, 431, 432, 433, 434, 435, 436, 437, 438], "8525": 833, "8526": 850, "853": [832, 833], "8531": 833, "8532": 833, "8536": 385, "854": [832, 833], "8544": 184, "8547": 850, "8549": 460, "855": [832, 833], "85560486": 833, "8557": 835, "856": [832, 833], "857": [832, 833], "8572": 832, "858": [832, 833], "8582": [401, 850], "8586722047523594": 688, "859": [818, 832, 833], "85963877": 833, "8597": 460, "85987389": 832, "86": [832, 833, 855, 862], "860": [14, 832, 833], "8602": 832, "861": [832, 833], "8613": 688, "8613368738351794": 688, "8614": 822, "862": [832, 833], "863": [832, 833], "8634": [396, 402], "8635": 822, "864": [832, 833], "8641": 832, "8643238446466464": 688, "8645": 832, "8648": 460, "8649": 835, "865": [832, 833], "8650": 832, "8654": [415, 850], "8656": 832, "86573472329756": 688, "866": [832, 833], "8664e": 832, "8667": 437, "867": [832, 833], "8673": 832, "8674": 401, "8679": 404, "868": [832, 833], "869": [832, 833, 836], "87": [155, 187, 832, 833, 855, 862], "870": [832, 833], "871": [832, 833], "8710": 219, "8713": 832, "87134528": 832, "8715767748481147": 688, "8717": 850, "872": [832, 833], "8726": 434, "873": [832, 833], "87329524": 832, "8737": 832, "874": [825, 832, 833, 836, 841], "8745": 850, "875": [832, 833], "8753101998792645": 688, "8754": 832, "8757520744192612": 688, "876": [832, 833], "8764": 405, "877": [832, 833], "8778998699783784": 688, "878": [14, 173, 817, 832, 833], "879": [832, 833], "88": [168, 186, 822, 823, 829, 832, 833, 838, 855, 862], "880": [818, 832, 833], "8808": 832, "881": [145, 832, 833, 834], "8813": 688, "88130406": 833, "8813472954005022": 688, "8815e": 832, "881680": 133, "882": [832, 833], "8820": 855, "8825": 421, "8829": 832, "883": [832, 833], "884": [832, 833], "8841": 849, "8843": 405, "885": [832, 833], "8851294998284638": 688, "8854": 435, "8855": 852, "8859e": 832, "886": [832, 833], "8860": 850, "88651": [25, 176], "8869": 434, "887": [832, 833], "8872e": 832, "8877": 852, "8878": 833, "888": [832, 833], "889": [832, 833, 838], "89": [145, 160, 168, 460, 827, 829, 832, 833, 855, 862], "890": [832, 833], "8900": 852, "8901": 855, "891": [832, 833], "8917": 822, "892": [181, 832, 833], "8920": 460, "8922": 422, "8923": 852, "893": [832, 833], "8932": 850, "8938": [430, 431, 432, 433, 434, 435, 436, 437, 438], "894": [151, 832, 833, 836], "8945": [430, 431, 432, 433, 434, 435, 436, 437, 438, 852], "8948": [430, 431, 432, 433, 434, 435, 436, 437, 438], "895": [832, 833], "8954": [647, 648], "896": [832, 833], "8962": 833, "8964": 688, "8964389655603473": 688, "8967": 852, "897": [14, 832, 833], "8970": 822, "8975": 688, "8975240205792763": 688, "898": [818, 832, 833], "8988": 822, "8989": 852, "899": [160, 817, 832, 833], "8992": 832, "8g": [721, 805], "8mb": 829, "8\u548c": 756, "8\u548c11": 756, "8\uac1c\uc758": [781, 785], "8\uacfc": 786, "8\ubc88\uc774": 798, "8\uc5d0": 798, "8\uc758": 798, "8\uc7a5": 790, "9": [4, 9, 10, 20, 26, 138, 148, 163, 195, 245, 292, 296, 297, 298, 299, 300, 301, 314, 330, 334, 335, 337, 401, 421, 460, 478, 558, 619, 620, 642, 644, 665, 700, 701, 710, 711, 721, 744, 745, 754, 756, 785, 786, 796, 798, 816, 818, 820, 822, 823, 827, 829, 832, 833, 851, 855, 862], "90": [460, 817, 827, 829, 832, 833, 834, 836, 837, 855, 862], "900": [14, 620, 832, 833], "9000": 862, "9002": 850, "900576": 832, "901": [832, 833], "9011": [421, 852], "9015": 822, "9016": [396, 402], "902": [14, 832, 833], "9023": 832, "9027": 394, "9028": [430, 431, 432, 433, 434, 435, 436, 437, 438, 832], "903": [832, 833], "9030": [430, 431, 432, 433, 434, 435, 436, 437, 438], "9033": 852, "904": [832, 833], "905": [832, 833], "9054": 832, "9055": 852, "9057": 835, "906": [832, 833], "907": [832, 833], "9077": 852, "908": [832, 833], "9081": 435, "9089": 413, "909": [832, 833], "9091": 405, "9097278": 832, "90975754": 833, "9099": 852, "91": [827, 829, 832, 833, 855, 862], "910": [832, 833], "9105": [610, 647, 648], "9108": 460, "911": [832, 833], "9115": 832, "912": [832, 833], "9120": 852, "913": [832, 833], "9137": [430, 431, 432, 433, 434, 435, 436, 437, 438], "9137336384979067": 688, "9139": 832, "914": [818, 832, 833, 834], "9140": [647, 648], "9142": 852, "915": [832, 833], "9156": 460, "916": [832, 833], "9163": 852, "9166": 422, "91664484": 833, "9167": 9, "9168191778828504": 688, "917": [832, 833], "9175": 850, "918": [832, 833], "9184": 852, "919": [832, 833], "9191": 822, "92": [832, 833, 855, 858, 861, 862], "920": [832, 833], "9200": 850, "9206": 852, "921": [817, 832, 833], "922": [832, 833], "9226": 389, "9227": 852, "9228": [25, 150], "923": [832, 833], "9230": 435, "9234": 832, "924": [152, 832, 833], "9241": 409, "9248": 852, "925": [832, 833], "9257": 833, "926": [818, 832, 833], "9268": 385, "9269": 852, "927": [832, 833], "9271e": 832, "9273": 417, "928": [14, 832, 833], "9280": [647, 648], "9288e": 337, "929": [832, 833], "9290": 852, "9297": 417, "93": [25, 823, 827, 829, 832, 833, 838, 855, 862], "930": [832, 833], "9302": 389, "9306": 833, "9307": 805, "93071116": 833, "931": [832, 833], "9311": 852, "9315": 409, "932": [832, 833], "9324e": 832, "933": [832, 833], "9332": 852, "9335": [822, 832], "934": [832, 833], "9343": 417, "9344": 832, "935": [832, 833], "9353": 852, "9357": 850, "936": [832, 833], "936706701616337": 688, "9368": [128, 129], "937": [818, 832, 833], "9370522452510665": 688, "9373": 852, "9375": 832, "9377": 855, "938": [825, 832, 833], "9386": 850, "9387": 833, "939": [832, 833], "9394": 852, "9397636966928355": 688, "94": [827, 829, 832, 833, 855, 862], "940": [832, 833], "9404": 805, "941": [832, 833], "9414": 855, "9415": 852, "9418796835016118": 688, "9419": 688, "942": [832, 833], "9420": 855, "9422093637539785": 688, "9429": 850, "943": [173, 832, 833], "9430": 460, "9436": 852, "9438": 832, "944": [161, 832, 833], "9441": [417, 832], "9444": 850, "945": [832, 833, 834], "9450": 833, "9457": 852, "946": [818, 823, 832, 833], "947": [832, 833], "9478": 852, "948": [832, 833], "9480": 832, "94806": 144, "949": [832, 833], "9490": 438, "9498": [822, 833], "95": [25, 817, 832, 833, 834, 836, 837, 855, 858, 862], "950": [832, 833], "9500": 850, "9506": 832, "951": [158, 832, 833], "9511783938523962": 688, "9512": 688, "9516": 835, "952": [14, 832, 833, 836], "953": [832, 833, 836], "9532": 850, "9539": [168, 186], "954": [163, 194, 817, 832, 833], "9546": 833, "955": [832, 833], "9551": 835, "9552": 849, "9558": 833, "9559196": 832, "956": [832, 833], "9562": 833, "957": [832, 833], "9571": 850, "9572": 404, "958": [161, 832, 833], "959": [832, 833], "9591": 832, "9599": 403, "96": [823, 832, 833, 855, 862], "960": [832, 833], "9600": 173, "9603": 833, "9609": 438, "961": [832, 833], "962": [152, 832, 833], "962133": 832, "9626": 849, "963": [14, 832, 833], "9634": 385, "9635": 832, "9637": [460, 850], "964": [832, 833], "9643": 850, "965": [181, 832, 833], "9658": 832, "966": [14, 832, 833], "966043": [695, 696], "9662": 822, "967": [832, 833], "968": [832, 833], "969": [832, 833], "9698": 388, "97": [832, 833, 855, 862], "970": [14, 832, 833], "971": [832, 833], "9714": 621, "972": [560, 832, 833], "9722": 850, "973": [14, 832, 833, 852], "9737": 832, "9739": 832, "974": [696, 825, 832, 833, 851, 854], "97412832": 833, "97415705": 833, "975": [832, 833, 852], "9752": [832, 833], "9759e": 832, "976": [832, 833], "977": [14, 832, 833], "9774471538377553": 688, "978": [832, 833], "9784264442230887": 688, "9786": 850, "979": [832, 833], "9794634290792008": 688, "97mb": 827, "98": [25, 163, 697, 741, 782, 823, 832, 833, 855, 862], "980": [832, 833], "981": [832, 833], "9818": 822, "982": [832, 833], "9820": [602, 622], "9824": 833, "983": [832, 833], "9830": 25, "9833338": 832, "984": [146, 832, 833], "9840": 435, "9848072295736628": 688, "985": [14, 832, 833], "9852": 832, "9857": [822, 850], "986": [832, 833], "9868": 399, "987": [832, 833], "9878": 822, "988": [832, 833], "989": [832, 833], "99": [832, 833, 855, 862], "990": [832, 833], "991": [832, 833], "9912": 835, "991848": 25, "992": [832, 833], "9924": 832, "9926": 833, "9927": 418, "9929": 850, "993": [832, 833], "994": [832, 833], "9942": 850, "9949": [401, 832], "995": [14, 832, 833], "9950": 833, "9952376085297715": 688, "996": [817, 832, 833], "997": [832, 833], "9971749359397111": 688, "9972": 435, "998": [832, 833], "9980": 833, "9986": 389, "999": [4, 10, 14, 832, 833], "9990": [430, 431, 432, 433, 434, 435, 436, 437, 438, 833], "9_gat": [825, 852, 854], "9\uc5d0\uc11c": 786, "A": [4, 6, 7, 12, 14, 20, 21, 22, 26, 27, 28, 31, 34, 35, 39, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 71, 75, 79, 82, 87, 88, 93, 94, 95, 96, 100, 105, 109, 110, 118, 119, 121, 127, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 203, 205, 206, 207, 220, 230, 231, 235, 238, 240, 241, 244, 287, 288, 291, 292, 293, 294, 295, 296, 299, 300, 302, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315, 317, 318, 324, 332, 333, 338, 339, 347, 348, 349, 379, 380, 381, 382, 383, 384, 385, 387, 388, 390, 393, 394, 396, 397, 399, 400, 401, 402, 403, 404, 407, 408, 410, 412, 414, 415, 417, 418, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 446, 448, 449, 459, 460, 477, 478, 479, 501, 543, 560, 562, 563, 564, 565, 566, 567, 568, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 652, 655, 660, 661, 666, 670, 688, 690, 693, 694, 696, 697, 699, 701, 702, 704, 708, 720, 728, 729, 730, 787, 789, 817, 818, 819, 820, 822, 823, 825, 826, 830, 834, 836, 837, 839, 841, 845, 849, 851, 852, 855, 862, 863, 865, 866], "AND": 21, "And": [168, 173, 186, 239, 296, 317, 318, 327, 328, 401, 429, 565, 566, 567, 822, 831, 832], "As": [14, 20, 22, 197, 239, 292, 296, 299, 565, 566, 567, 568, 637, 643, 690, 693, 695, 696, 719, 725, 837, 838, 842, 845, 846, 851, 852, 862], "At": [688, 723, 851, 858], "Be": [819, 852], "Being": [4, 10, 729], "But": [89, 292, 299, 719, 816, 820, 858], "By": [4, 31, 32, 41, 53, 54, 70, 122, 125, 126, 131, 200, 201, 207, 210, 220, 231, 238, 239, 248, 249, 292, 299, 329, 348, 349, 352, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 550, 551, 643, 688, 693, 694, 703, 704, 715, 721, 729, 789, 816, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 845, 858, 861, 862], "For": [4, 5, 9, 10, 20, 21, 22, 24, 43, 46, 51, 52, 55, 59, 60, 61, 66, 72, 74, 87, 88, 89, 90, 103, 107, 113, 114, 115, 116, 118, 119, 122, 128, 129, 165, 179, 195, 209, 214, 215, 216, 217, 220, 221, 226, 227, 233, 234, 239, 240, 241, 287, 289, 293, 295, 296, 297, 304, 307, 314, 315, 316, 339, 352, 378, 380, 383, 386, 433, 446, 449, 558, 560, 565, 566, 567, 568, 569, 574, 575, 576, 577, 615, 616, 636, 637, 642, 643, 645, 651, 652, 653, 659, 664, 668, 677, 688, 690, 691, 692, 693, 694, 695, 696, 699, 701, 703, 704, 707, 708, 710, 711, 712, 714, 717, 719, 720, 723, 724, 725, 727, 728, 729, 730, 731, 780, 789, 815, 816, 818, 819, 820, 822, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867], "If": [4, 6, 21, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 43, 44, 45, 46, 48, 51, 54, 56, 57, 58, 60, 64, 65, 70, 71, 73, 74, 79, 80, 81, 82, 87, 89, 90, 93, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 144, 145, 148, 156, 165, 168, 170, 177, 178, 179, 183, 184, 207, 210, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 235, 237, 238, 239, 240, 241, 245, 247, 248, 249, 286, 287, 289, 290, 292, 293, 294, 295, 296, 297, 299, 300, 302, 304, 307, 308, 309, 311, 314, 315, 317, 318, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 341, 347, 348, 352, 378, 380, 381, 382, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 429, 430, 432, 436, 437, 446, 447, 449, 450, 453, 457, 461, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 547, 548, 553, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 582, 585, 587, 589, 592, 593, 596, 599, 600, 601, 602, 603, 605, 612, 613, 614, 615, 616, 617, 618, 619, 622, 624, 628, 635, 636, 637, 642, 643, 645, 647, 648, 649, 651, 652, 653, 660, 661, 663, 664, 666, 669, 671, 683, 684, 687, 688, 693, 695, 696, 700, 703, 704, 707, 710, 711, 712, 713, 714, 716, 717, 718, 721, 726, 727, 728, 731, 788, 816, 817, 818, 819, 820, 822, 824, 827, 829, 831, 835, 837, 838, 839, 842, 845, 858], "In": [4, 6, 8, 14, 21, 22, 27, 41, 51, 70, 140, 150, 181, 183, 186, 210, 214, 221, 231, 234, 238, 239, 244, 245, 246, 296, 298, 302, 307, 309, 314, 315, 317, 330, 334, 335, 338, 347, 378, 382, 386, 394, 395, 411, 457, 460, 477, 478, 479, 542, 564, 567, 571, 576, 577, 610, 618, 621, 624, 642, 645, 688, 690, 692, 693, 694, 696, 697, 699, 700, 703, 704, 706, 707, 712, 715, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 816, 817, 818, 820, 822, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 850, 851, 852, 853, 855, 858, 861, 862, 865, 867, 868], "It": [4, 6, 7, 8, 9, 20, 21, 22, 34, 35, 48, 60, 73, 87, 91, 92, 93, 94, 100, 113, 120, 125, 126, 128, 129, 130, 131, 132, 138, 139, 141, 142, 143, 158, 162, 178, 179, 189, 190, 191, 197, 198, 205, 208, 210, 211, 212, 217, 219, 220, 234, 239, 240, 241, 246, 248, 249, 286, 289, 292, 294, 296, 302, 304, 307, 309, 316, 318, 328, 329, 334, 335, 336, 347, 379, 381, 382, 387, 389, 390, 391, 392, 399, 404, 406, 411, 415, 421, 422, 423, 424, 425, 426, 427, 428, 429, 436, 448, 454, 455, 456, 457, 458, 461, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 549, 550, 551, 560, 561, 567, 568, 569, 571, 572, 642, 670, 686, 688, 690, 693, 694, 695, 696, 699, 704, 707, 708, 719, 720, 721, 815, 818, 826, 827, 829, 831, 832, 833, 837, 838, 839, 845, 849, 850, 852, 853, 855, 858, 859, 861, 862, 865, 867, 868], "Its": [53, 54, 142, 239, 411, 423, 424, 425, 426, 505, 567, 696, 858], "NOT": [5, 21, 22, 230, 410, 849, 850, 851, 852, 855, 858, 861, 862], "No": [383, 724, 852, 867, 868], "Not": 842, "ON": 816, "Of": 706, "On": [22, 116, 424, 426, 706, 713, 721], "One": [20, 21, 43, 44, 46, 51, 73, 74, 77, 103, 104, 122, 130, 221, 229, 230, 233, 292, 388, 453, 565, 643, 683, 686, 688, 690, 692, 693, 700, 702, 703, 704, 707, 713, 714, 715, 724, 727, 728, 729, 731, 820, 834, 838, 852, 855], "Or": [216, 564, 713, 718, 816], "Such": [300, 719, 727, 730, 832, 833, 838, 861], "That": [4, 22, 26, 231, 238, 240, 302, 307, 693, 851, 858, 867], "The": [0, 2, 3, 4, 6, 8, 9, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 323, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 378, 379, 380, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 582, 585, 586, 587, 589, 592, 593, 595, 596, 598, 599, 600, 601, 602, 603, 605, 606, 607, 610, 614, 615, 616, 617, 618, 622, 628, 629, 630, 632, 636, 637, 638, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 658, 659, 660, 661, 662, 664, 666, 667, 669, 670, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 703, 704, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 774, 789, 799, 800, 804, 816, 817, 818, 819, 820, 821, 822, 823, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 845, 846, 849, 851, 852, 856, 861, 862, 863, 865, 867, 868], "Then": [6, 113, 130, 174, 239, 336, 382, 386, 427, 429, 481, 482, 483, 484, 486, 487, 488, 489, 560, 571, 695, 718, 727, 845, 846, 851, 862], "There": [1, 22, 62, 63, 116, 126, 147, 217, 230, 231, 238, 291, 386, 459, 624, 688, 690, 694, 696, 700, 730, 822, 836, 852, 855, 858, 862], "These": [150, 162, 244, 477, 701, 718, 725, 816, 836, 863, 865], "To": [1, 4, 5, 14, 21, 22, 51, 68, 77, 89, 116, 122, 210, 213, 214, 215, 216, 219, 220, 239, 244, 348, 349, 382, 410, 421, 422, 477, 550, 551, 564, 565, 566, 567, 645, 686, 688, 693, 694, 696, 703, 704, 712, 714, 718, 720, 725, 727, 730, 731, 789, 816, 818, 822, 823, 827, 829, 832, 833, 834, 842, 845, 850, 851, 852, 855, 858, 862, 867, 868], "Will": [200, 213], "With": [77, 209, 213, 383, 405, 563, 565, 566, 567, 644, 683, 711, 728, 729, 816, 834, 849, 851, 858], "_": [0, 21, 244, 297, 298, 299, 314, 400, 403, 404, 408, 412, 418, 421, 422, 424, 433, 448, 453, 477, 651, 677, 695, 716, 717, 730, 731, 756, 759, 760, 770, 771, 798, 802, 803, 813, 814, 818, 819, 827, 835, 837, 839, 849, 850, 851, 852, 858, 861, 862, 867], "_0": 827, "_1": [392, 421, 422, 651, 827], "_2": [454, 651, 827], "_3": 827, "_4": [756, 798, 827], "_5": [756, 798, 828], "_7": [756, 798], "_8": [756, 798], "__": [137, 171, 180, 182, 188, 713, 720], "__all__": [4, 34, 35, 53, 54, 60, 87, 122, 352], "__call__": [655, 688, 759, 802, 827], "__forward__": 851, "__getitem__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 686, 688, 690, 691, 733, 736, 737, 773, 776, 777, 839], "__init__": [21, 208, 218, 298, 307, 312, 411, 421, 422, 423, 424, 425, 426, 460, 560, 686, 690, 694, 712, 713, 715, 716, 717, 718, 720, 721, 723, 725, 727, 729, 730, 731, 733, 736, 756, 757, 758, 759, 760, 761, 763, 765, 767, 769, 770, 771, 773, 776, 798, 799, 801, 802, 803, 804, 805, 807, 809, 811, 812, 813, 814, 817, 818, 819, 820, 822, 827, 829, 834, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "__iter__": [827, 829], "__len__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 686, 690, 733, 736, 756, 773, 776, 798, 839], "__main__": [858, 867, 868], "__name__": [858, 867, 868], "__next__": [827, 829], "__path__": 21, "__version__": [817, 818, 819, 820, 822, 827, 829, 832, 833], "__\u4e2d\u7684\u505a\u6cd5": 768, "_aggre_typ": [723, 724, 763, 764, 807, 808], "_apply_fn": [827, 829], "_basedataloaderit": [827, 829], "_basenegativesampl": [226, 227], "_c_csc_graph": 829, "_call_overload_packet_from_python": 827, "_check_iterator_valid": [827, 829], "_check_sampler_argu": 829, "_collate_fn": [689, 735, 775], "_continu": 862, "_convert_to_homogeneous_nod": 829, "_convert_to_sampled_subgraph": 829, "_datapipe_it": [827, 829], "_dataset_fetch": [827, 829], "_dataset_kind": [827, 829], "_datasetkind": [827, 829], "_dgl_graph": [691, 737, 777], "_dist_train": 566, "_dst": 127, "_e": [4, 118, 125, 126, 231, 239, 396, 399, 407, 410, 413, 416, 637], "_etype_str_to_tupl": 319, "_etype_tuple_to_str": 320, "_extract_gz": [687, 734, 774], "_ffi": 22, "_ft": [707, 751, 792], "_g": [690, 736, 776], "_gener": 0, "_get_dgl_url": [690, 736, 776], "_get_next": [827, 829, 858], "_get_previ": 858, "_has_torchbind_op_overload": 827, "_hook_iter": [827, 829], "_i": [384, 400, 651, 670, 707, 751, 792, 822, 855, 862], "_id": [168, 186, 219, 245, 330, 334, 335, 478, 542, 558, 642, 643, 695, 696, 835], "_in_dst_feat": [720, 723, 763, 807], "_in_src_feat": [720, 723, 763, 807], "_info": [691, 737, 777], "_ini_api": 22, "_init_api": 22, "_initialize_edge_repr": 858, "_initialize_node_repr": 858, "_iterabledataset_len_cal": [827, 829], "_iterabledatasetfetch": [827, 829], "_iterdatapipeserializationwrapp": [827, 829], "_j": [400, 707, 751, 792, 822, 852, 862], "_k": [340, 430, 431, 432, 437], "_l": 855, "_label": [690, 736, 776], "_load_graph": [690, 736, 776], "_mean": [849, 852], "_method": [849, 852], "_must_dispatch_in_python": 827, "_n": [4, 238, 239, 396, 399, 407, 413, 416], "_name": [690, 736, 776], "_next_data": [827, 829], "_next_index": [827, 829], "_node_pairs_preprocess": 827, "_num_task": [690, 736, 776], "_num_yield": [827, 829], "_number_of_samples_yield": [827, 829], "_op": 827, "_out_feat": [720, 723, 763, 807], "_p": [455, 456], "_pin_memori": [827, 829], "_pin_memory_devic": [827, 829], "_preprocess_featur": [690, 736, 776], "_reset": [827, 829], "_sampl": [827, 829], "_sample_neighbor": 829, "_sample_with_etyp": 716, "_sampler_it": [827, 829], "_sha1_str": [687, 690, 734, 736, 774, 776], "_singleprocessdataloaderit": [827, 829], "_src": 127, "_static": [834, 835, 836, 837, 838, 839], "_t": 433, "_tag": [576, 577], "_tag_offset": [567, 576, 577], "_time": [827, 829], "_transform": [827, 829], "_type": [642, 643], "_type_kei": 22, "_u": [4, 125, 126, 410, 730, 756, 770, 798, 813, 849], "_url": [690, 736, 776], "_util": [827, 829], "_v": [125, 126, 410, 730, 756, 770, 798, 813, 822], "a1": [26, 822], "a2": [26, 822], "a_": [352, 383, 398, 409, 415, 418, 461, 707, 751, 792, 850, 851, 852, 858], "a_0": [178, 179], "a_1": [818, 858], "a_1x": 818, "a_2x": 818, "a_div": 720, "a_dst": 127, "a_hat": [817, 818, 822], "a_i": 818, "a_new": 822, "a_r": 818, "a_rx": 818, "a_src": 127, "a_t": 858, "a_tild": 818, "a_tre": 855, "ab": [118, 119, 127, 131, 134, 137, 146, 169, 171, 180, 182, 188, 347, 426, 560, 823], "ab1": 26, "ab2": 26, "abil": 852, "abl": [696, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839], "about": [1, 20, 21, 22, 158, 244, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 386, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 637, 684, 686, 693, 696, 698, 700, 701, 716, 729, 818, 838, 850, 851, 852, 855, 862], "abov": [5, 22, 130, 142, 178, 179, 210, 220, 245, 250, 251, 262, 263, 264, 265, 330, 334, 335, 352, 385, 386, 392, 401, 403, 404, 409, 410, 417, 418, 454, 458, 478, 542, 576, 577, 637, 687, 690, 701, 704, 706, 707, 708, 712, 716, 718, 724, 727, 729, 730, 731, 820, 822, 828, 829, 845, 846, 849, 850, 852, 858, 861, 868], "absent": 316, "absolut": [201, 202, 696, 815], "abstract": [156, 291, 309, 313, 654, 686, 698, 712, 822], "abund": 729, "ac": 144, "academ": [151, 152, 159, 288, 696], "academi": 850, "acc": [731, 771, 814, 817, 818, 820, 829, 834, 836, 849, 851, 855, 867, 868], "acc_perm1": 851, "acc_perm2": 851, "acceler": [289, 389, 390, 391, 457, 696, 818, 842, 855, 862], "accept": [21, 22, 209, 350, 390, 651, 702, 718, 787, 829, 835, 845], "access": [4, 22, 89, 108, 122, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 214, 287, 291, 293, 295, 315, 348, 351, 543, 690, 692, 696, 697, 701, 707, 713, 714, 718], "accompani": 338, "accomplish": 861, "accord": [9, 39, 52, 78, 91, 92, 139, 140, 141, 209, 214, 216, 220, 226, 227, 231, 238, 239, 242, 296, 336, 383, 392, 446, 453, 501, 504, 558, 560, 567, 569, 571, 647, 648, 683, 696, 716, 723, 724, 808, 819, 852, 862], "accordingli": [95, 96, 125, 248, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 558, 688, 695], "account": [120, 845], "accumul": [579, 862], "accur": 834, "accuraci": [21, 292, 299, 731, 814, 817, 818, 820, 823, 829, 834, 836, 838, 845, 850, 851, 852, 861, 862, 868], "accuracy_scor": [829, 845], "achiev": [21, 22, 41, 382, 384, 394, 396, 399, 400, 402, 403, 404, 407, 410, 417, 708, 713, 719, 728, 730, 731, 819, 851, 861], "acl": 855, "acm": [134, 173], "acquaint": 815, "across": [22, 73, 113, 120, 128, 129, 130, 217, 244, 304, 411, 457, 458, 477, 643, 692, 693, 704, 724, 789, 842, 858, 867], "act": [234, 862], "act_loss": 862, "act_loss_weight": 862, "action": [166, 424, 426], "action_step": 858, "activ": [151, 152, 180, 388, 389, 393, 394, 395, 400, 402, 403, 404, 405, 408, 410, 413, 415, 416, 417, 418, 448, 449, 635, 642, 671, 721, 723, 724, 729, 763, 764, 805, 807, 808, 812, 817, 818, 849, 850, 852, 858, 861, 862], "actor": [134, 166], "actual": [4, 5, 22, 210, 221, 350, 561, 565, 566, 567, 724], "ad": [4, 10, 27, 28, 114, 115, 116, 142, 143, 150, 186, 189, 190, 288, 317, 346, 390, 415, 417, 459, 460, 653, 670, 688, 696, 703, 817, 831, 835, 856, 858, 862, 865], "adagrad": [4, 10, 693, 779, 855], "adam": [4, 10, 421, 422, 423, 424, 425, 426, 692, 693, 713, 716, 718, 720, 721, 727, 729, 730, 731, 738, 739, 756, 757, 759, 761, 767, 769, 770, 771, 778, 779, 798, 799, 802, 804, 805, 811, 812, 813, 814, 817, 818, 819, 820, 827, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 862, 867, 868], "adapt": [13, 165, 196, 404, 418, 422, 423, 424, 715, 861], "adavantag": 852, "add": [9, 21, 22, 27, 28, 114, 115, 116, 117, 125, 132, 133, 135, 136, 140, 142, 143, 144, 150, 151, 152, 153, 154, 157, 158, 165, 170, 176, 189, 190, 191, 192, 198, 248, 252, 253, 266, 267, 276, 277, 337, 384, 388, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 446, 449, 491, 492, 502, 503, 506, 507, 508, 509, 510, 511, 532, 533, 624, 635, 650, 651, 652, 653, 663, 671, 683, 688, 690, 693, 707, 708, 712, 716, 751, 792, 820, 822, 831, 835, 839, 842, 845, 849, 850, 852, 855, 862], "add_edg": [28, 95, 96, 115, 125, 248, 346, 460, 555, 556, 849, 858], "add_edge_ag": 858, "add_edge_log_p": 858, "add_edge_or_not": 858, "add_edges_from": 858, "add_nod": [27, 95, 96, 114, 346, 460, 555, 556, 858], "add_node_ag": 858, "add_node_and_upd": 858, "add_node_log_p": 858, "add_nodes_from": [125, 248], "add_on": 299, "add_reverse_edg": 835, "add_safe_glob": [827, 829, 832, 833], "add_self_loop": [384, 389, 391, 396, 399, 400, 401, 402, 403, 404, 407, 410, 413, 416, 417, 419, 420, 557, 805], "addbackward0": [388, 390, 393, 394, 401, 404, 407, 409, 410, 413, 415, 416], "addedg": [13, 858], "addit": [4, 8, 21, 121, 140, 148, 173, 179, 182, 229, 230, 239, 245, 246, 330, 334, 335, 352, 403, 404, 410, 411, 421, 422, 423, 424, 425, 426, 446, 447, 449, 478, 479, 542, 558, 609, 623, 688, 690, 693, 696, 697, 704, 708, 712, 716, 724, 725, 728, 729, 816, 822, 845, 849, 852, 853, 858, 865], "addition": [220, 337, 562, 564, 644, 826, 862], "addmetapath": 13, "addmmbackward": [395, 405, 417, 418], "addmmbackward0": 391, "addnod": 858, "address": [210, 457, 697, 704, 714, 718, 721, 828, 845, 846, 858, 862], "addrevers": [13, 422, 423, 424, 655, 688], "addselfloop": [13, 721], "adj": [33, 118, 146, 169, 393, 394, 395, 837], "adj_extern": [576, 577], "adj_neg": 837, "adjac": [13, 30, 31, 32, 118, 119, 126, 131, 249, 286, 329, 332, 333, 339, 385, 393, 394, 395, 404, 417, 418, 459, 567, 576, 577, 651, 659, 660, 661, 666, 670, 695, 696, 728, 780, 817, 818, 819, 820, 822, 849, 851, 852], "adjust": [120, 731, 861, 862], "adopt": [423, 425, 692, 731, 834, 862], "advanc": [210, 292, 562, 564, 692, 694, 696, 707, 711, 815, 842, 851, 855, 862], "advantag": [696, 713, 714, 729, 818, 842, 852], "affect": [292, 299, 855], "affili": [696, 839], "affiliated_with": [696, 781], "affin": [386, 842, 862], "affinit": 842, "after": [4, 73, 91, 92, 93, 94, 95, 96, 100, 113, 167, 239, 290, 334, 335, 348, 349, 384, 396, 397, 399, 400, 402, 403, 404, 407, 410, 417, 419, 450, 459, 543, 555, 556, 560, 564, 576, 577, 643, 660, 661, 666, 669, 688, 690, 695, 696, 707, 719, 730, 816, 818, 832, 833, 837, 845, 846, 851, 855, 858, 862, 867], "afterward": [4, 421, 422, 423, 424, 425, 426, 449, 836], "ag": [700, 744, 785, 839], "again": [21, 642, 643, 696, 713, 716, 845, 851, 852, 868], "against": [21, 324, 730, 731, 823, 827, 829], "agg": [725, 765, 809], "agg_fn": [725, 765, 809], "aggreg": [5, 9, 73, 91, 92, 93, 94, 100, 111, 113, 117, 262, 263, 264, 265, 380, 384, 386, 389, 390, 391, 392, 394, 395, 396, 399, 400, 402, 403, 404, 405, 407, 410, 412, 413, 414, 416, 417, 421, 422, 423, 425, 458, 481, 482, 483, 484, 486, 487, 488, 489, 503, 505, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 553, 554, 645, 653, 673, 706, 707, 709, 715, 717, 720, 723, 724, 725, 729, 731, 763, 764, 765, 769, 771, 795, 798, 807, 808, 809, 812, 814, 817, 819, 828, 834, 836, 838, 845, 849, 850, 851, 852], "aggregate_radiu": 851, "aggregate\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 771, "aggregate\ub418\uace0": 801, "aggregate\ub97c": 812, "aggregation\ub9cc": 803, "aggregation\uc744": [807, 809], "aggregator_typ": [391, 405, 407, 413, 416, 723, 731, 763, 771, 807, 814, 829, 867], "aggregator_type\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 771, "aggress": 823, "aggretate\ud558\ub294": 801, "agnn": 384, "agnost": [9, 21], "agre": 861, "agreement": 861, "ahead": [837, 855], "ai": [23, 817, 818, 819, 820, 822, 823, 827, 829, 832, 833, 839, 858], "aifb": [132, 850], "aifbdataset": 850, "aim": [849, 850, 851, 852, 855, 858, 861, 862], "aka": 707, "al": [72, 135, 136, 560, 817, 819, 828, 834, 836, 849, 855], "albert": [141, 142, 143], "algorithm": [0, 3, 4, 6, 10, 209, 239, 291, 336, 349, 419, 424, 426, 427, 429, 558, 560, 565, 571, 693, 694, 696, 711, 715, 729, 818, 845, 853, 858, 861, 862, 865, 868], "alia": [1, 4, 29, 33, 44, 49, 50, 69, 76, 83, 84, 85, 86, 97, 98, 99, 104, 106, 111, 156, 228, 578, 604, 822], "align": [5, 9, 852], "alist": [725, 765, 809], "aliv": 290, "all": [4, 5, 6, 9, 14, 20, 21, 22, 26, 30, 34, 35, 39, 41, 44, 45, 48, 51, 52, 53, 54, 56, 60, 61, 68, 70, 73, 77, 78, 79, 81, 82, 87, 88, 89, 95, 101, 102, 104, 105, 113, 117, 119, 121, 122, 126, 127, 128, 129, 130, 131, 133, 137, 143, 144, 146, 148, 156, 157, 158, 161, 164, 169, 179, 182, 184, 186, 189, 190, 191, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 226, 227, 231, 233, 238, 239, 240, 241, 242, 244, 246, 249, 288, 289, 291, 296, 300, 303, 304, 308, 312, 316, 318, 327, 328, 329, 330, 336, 341, 348, 351, 352, 382, 386, 394, 399, 400, 404, 410, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 452, 458, 459, 477, 479, 481, 483, 486, 488, 504, 507, 509, 513, 515, 521, 523, 527, 529, 542, 543, 550, 551, 555, 557, 562, 563, 564, 565, 566, 567, 568, 571, 572, 637, 643, 645, 647, 648, 653, 660, 661, 666, 669, 675, 688, 690, 692, 693, 694, 695, 696, 697, 699, 702, 703, 704, 707, 709, 711, 714, 715, 717, 718, 719, 724, 726, 727, 728, 729, 730, 731, 747, 788, 789, 798, 811, 814, 815, 818, 819, 820, 821, 822, 825, 827, 828, 829, 831, 832, 833, 835, 836, 837, 838, 839, 845, 849, 850, 851, 852, 855, 858, 861, 867, 868], "all_acc": 851, "all_edg": [560, 565, 566, 756, 798], "all_logit": [836, 837], "all_loss": 851, "all_nodes_set": [291, 303, 308, 715], "alloc": 234, "allow": [4, 20, 22, 30, 31, 32, 34, 35, 41, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 126, 131, 146, 169, 245, 246, 248, 249, 286, 290, 329, 330, 334, 335, 380, 382, 478, 480, 505, 542, 553, 555, 557, 565, 571, 574, 576, 577, 642, 688, 693, 696, 700, 701, 704, 714, 719, 721, 823, 827, 829, 832, 833, 836, 845, 853, 862, 865, 867], "allow_dupl": 653, "allow_zero_in_degre": [384, 396, 399, 400, 402, 403, 404, 407, 410, 417], "allowlist": [827, 829, 832, 833], "almost": [231, 238, 567, 690, 713, 716, 718, 720, 727, 868], "alon": [834, 835], "along": [9, 20, 21, 48, 73, 91, 92, 93, 94, 100, 113, 165, 210, 298, 302, 307, 346, 380, 436, 451, 505, 563, 564, 565, 596, 599, 600, 601, 603, 647, 648, 651, 698, 731, 817, 818, 822, 836, 851, 853, 862, 865, 867], "alongsid": [713, 815], "alp": [419, 420], "alpha": [178, 179, 385, 404, 419, 420, 448, 459, 666, 670, 852], "alpha1": [421, 422], "alpha2": [421, 422], "alpha_": [396, 400, 402, 403, 433, 852], "alpha_1": [421, 422], "alpha_2": [421, 422], "alpha_i": 458, "alreadi": [64, 71, 89, 108, 109, 117, 156, 159, 161, 162, 163, 200, 296, 317, 346, 582, 585, 587, 589, 592, 593, 605, 636, 686, 687, 688, 690, 702, 718, 726, 773, 827, 829, 832, 833, 836, 837, 839, 849, 862], "also": [0, 1, 2, 4, 5, 8, 14, 21, 22, 27, 28, 43, 44, 46, 70, 74, 101, 102, 103, 104, 114, 118, 119, 122, 130, 131, 144, 162, 174, 184, 214, 216, 220, 226, 227, 239, 240, 245, 246, 289, 292, 296, 309, 317, 318, 328, 329, 330, 334, 335, 352, 380, 412, 413, 415, 421, 422, 423, 425, 457, 478, 479, 542, 555, 556, 559, 561, 567, 576, 577, 583, 584, 637, 642, 644, 686, 689, 690, 692, 693, 694, 695, 696, 699, 700, 702, 703, 704, 707, 712, 713, 714, 716, 717, 718, 727, 729, 731, 787, 819, 822, 828, 829, 830, 835, 836, 837, 838, 839, 842, 845, 846, 850, 851, 852, 855, 858, 859, 861, 862, 865, 867, 868], "altern": [21, 22, 823, 855, 861], "although": [4, 421, 422, 423, 424, 425, 426, 562, 564, 818, 835, 836, 837], "alwai": [21, 101, 102, 142, 143, 183, 189, 190, 200, 201, 239, 292, 297, 341, 348, 349, 428, 549, 560, 688, 695, 700, 828, 835], "always_preserv": 130, "am": 133, "amazon": [14, 21, 25, 135, 136, 137, 161, 162, 288, 790, 842], "amazon_co_buy_comput": 140, "amazonaw": [23, 690, 736, 776], "amazoncobui": [25, 135, 136], "amazoncobuycomputerdataset": [140, 197, 198], "amazoncobuydata": [690, 736, 776], "ambigu": [48, 57, 80], "among": [4, 14, 120, 161, 304, 334, 335, 382, 692, 717, 729, 832, 833, 837, 850, 851, 853, 858, 862, 863, 865], "amount": [244, 477, 695, 861], "amp": [721, 805], "amp_dtyp": 721, "amp_en": 721, "amper": [9, 707, 792], "amplif": [392, 414], "amx": 721, "an": [0, 1, 4, 6, 7, 9, 14, 20, 21, 22, 31, 32, 34, 36, 39, 44, 46, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 64, 71, 73, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 104, 107, 109, 112, 113, 116, 118, 119, 126, 128, 131, 138, 140, 147, 151, 152, 156, 162, 165, 167, 168, 172, 173, 180, 181, 182, 186, 188, 207, 209, 210, 211, 212, 217, 220, 232, 233, 234, 239, 240, 242, 244, 245, 246, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 296, 298, 299, 300, 302, 304, 307, 308, 309, 311, 313, 323, 329, 330, 333, 336, 337, 338, 339, 347, 350, 352, 386, 389, 390, 391, 394, 395, 400, 402, 403, 404, 405, 408, 410, 411, 412, 415, 416, 418, 419, 420, 421, 422, 423, 425, 427, 428, 430, 436, 450, 477, 501, 504, 542, 553, 554, 558, 560, 561, 562, 563, 564, 565, 567, 571, 576, 577, 583, 584, 632, 635, 636, 637, 642, 643, 645, 647, 648, 651, 653, 654, 656, 659, 660, 661, 663, 664, 666, 671, 675, 677, 683, 687, 688, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 706, 707, 708, 709, 711, 712, 713, 715, 716, 717, 718, 721, 722, 723, 724, 725, 726, 728, 729, 730, 731, 734, 774, 798, 802, 809, 812, 816, 817, 819, 820, 826, 827, 829, 832, 833, 834, 835, 837, 838, 839, 842, 845, 846, 849, 850, 852, 853, 855, 858, 862, 865, 867, 868], "analog": 852, "analogu": [183, 207, 567], "analysi": [134, 690, 855, 858], "analyz": 5, "andd": 120, "angl": [389, 400, 402, 403], "angstrom": 178, "ani": [4, 5, 20, 21, 22, 26, 70, 116, 121, 130, 131, 148, 207, 210, 214, 216, 219, 220, 234, 239, 286, 289, 292, 296, 298, 299, 307, 312, 313, 329, 330, 333, 334, 335, 339, 347, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 384, 385, 390, 398, 404, 410, 421, 422, 423, 424, 425, 426, 429, 439, 440, 441, 442, 443, 444, 445, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 542, 559, 565, 566, 567, 568, 569, 596, 599, 600, 601, 636, 637, 639, 640, 641, 642, 643, 645, 658, 669, 688, 693, 702, 704, 712, 721, 727, 729, 787, 789, 798, 818, 826, 827, 828, 829, 831, 832, 833, 836, 837, 845, 849, 850, 851, 852, 858, 861, 862, 867], "ani2": 861, "anim": [715, 818, 828, 851, 858, 861], "annot": [184, 855, 862], "anonym": [4, 145], "anoth": [4, 21, 48, 130, 142, 162, 179, 220, 302, 307, 339, 419, 560, 642, 702, 713, 720, 727, 730, 731, 818, 823, 829, 832, 833, 835, 837, 850, 851, 852, 858], "answer": 180, "anyth": 21, "anywher": [164, 687], "apach": [23, 815, 816], "apart": 700, "api": [0, 4, 7, 8, 21, 22, 41, 56, 68, 101, 102, 234, 240, 241, 291, 348, 567, 645, 686, 689, 690, 692, 695, 700, 701, 702, 703, 704, 706, 712, 718, 721, 724, 725, 740, 757, 761, 778, 781, 799, 804, 809, 815, 817, 818, 819, 820, 822, 823, 835, 836, 849, 851, 852, 856, 863, 865, 867], "apinn": [722, 731, 760, 762, 771, 806, 814], "api\u4e5f\u652f\u6301python\u7684\u53ef\u8fed\u4ee3\u7c7b\u578b": 747, "api\u4e5f\u80fd\u5904\u7406\u7279\u5f81\u6570\u636e\u548c\u56fe\u7ea7\u522b\u7684\u6807\u7b7e\u6570\u636e": 744, "api\u4ee5\u6613\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u52a0\u8f7d\u7684\u683c\u5f0f\u6784\u9020\u5212\u5206\u7ed3\u679c": 740, "api\u4ee5\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u4fe1\u606f\u65f6": 748, "api\u548c": 764, "api\u5c06": 746, "api\u5c06\u5f02\u6784\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 748, "api\u5c06\u65b0id\u5206\u914d\u7ed9\u8f93\u5165\u56fe\u7684\u8282\u70b9\u548c\u8fb9": 740, "api\u7684\u8f93\u5165": 747, "api\uac00": 781, "api\uacfc": 781, "api\ub294": [778, 779, 781, 788], "api\ub4e4": [779, 785, 786, 788, 789, 791], "api\ub4e4\uacfc": 791, "api\ub4e4\uc740": [779, 785], "api\ub4e4\uc744": [775, 779, 785, 788], "api\ub4e4\uc758": 779, "api\ub4e4\uc774": 773, "api\ub4e4\uc774\ub2e4": 779, "api\ub85c": 792, "api\ub97c": [776, 778, 779, 780, 781, 785, 787, 789, 805], "api\uc5d0": 781, "api\uc5d0\uc11c\ub294": 788, "api\uc640": 808, "api\uc740": 781, "api\uc758": 779, "appear": [36, 51, 52, 131, 219, 329, 637, 713], "append": [292, 298, 299, 307, 312, 380, 715, 716, 720, 721, 725, 765, 805, 809, 818, 819, 827, 829, 836, 839, 845, 846, 849, 850, 851, 852, 858, 861, 862, 868], "appendix": [183, 302], "appendix_c": 183, "appi": [384, 395, 396, 399, 400, 402, 404, 407, 410, 417], "appl": 22, "appli": [0, 1, 9, 20, 27, 28, 73, 91, 92, 93, 94, 100, 113, 116, 117, 121, 148, 220, 240, 289, 296, 305, 346, 352, 380, 381, 383, 386, 389, 390, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 408, 410, 411, 412, 413, 415, 416, 417, 418, 421, 422, 430, 431, 432, 437, 449, 450, 451, 452, 453, 454, 458, 459, 460, 502, 503, 602, 622, 624, 653, 655, 659, 660, 661, 666, 668, 688, 704, 706, 708, 723, 724, 727, 729, 812, 819, 822, 835, 849, 850, 851, 852, 855, 862], "applic": [14, 138, 220, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 433, 819, 837, 838, 855, 858], "apply_edg": [5, 9, 20, 35, 460, 674, 675, 676, 677, 678, 707, 708, 721, 727, 730, 751, 752, 757, 759, 767, 770, 792, 794, 799, 802, 805, 811, 813, 852, 862], "apply_func": [405, 406, 850], "apply_nod": [34, 862], "apply_node_func": [73, 91, 92, 93, 94, 100, 113, 544, 545, 546, 547, 548, 710, 754, 796, 855], "apply_norm": 390, "apply_to": [827, 829], "appnp": [385, 670], "appoint": 6, "appreci": 855, "approach": [131, 286, 302, 329, 336, 427, 428, 429, 549, 571, 692, 696, 702, 704, 707, 708, 851, 859, 861, 865], "appropri": [120, 210, 213, 721, 862], "approv": 21, "approx": 404, "approxim": [14, 336, 385, 427, 429, 571, 670], "apt": [816, 845], "ar": [1, 4, 5, 6, 9, 10, 11, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 78, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 135, 136, 137, 140, 142, 143, 145, 147, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 163, 165, 171, 173, 174, 178, 179, 180, 182, 186, 187, 188, 191, 192, 193, 195, 197, 210, 213, 214, 216, 217, 219, 220, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 244, 245, 246, 247, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 299, 304, 308, 309, 313, 314, 315, 316, 318, 327, 328, 329, 330, 333, 334, 335, 336, 340, 346, 347, 348, 352, 378, 380, 382, 383, 384, 386, 392, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 427, 428, 429, 446, 448, 449, 453, 457, 459, 460, 477, 478, 479, 480, 502, 505, 542, 543, 545, 549, 553, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 576, 577, 579, 605, 613, 615, 616, 618, 619, 624, 628, 636, 637, 639, 640, 641, 643, 645, 647, 648, 652, 653, 659, 669, 683, 686, 688, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 707, 708, 709, 711, 712, 713, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 748, 756, 773, 777, 788, 789, 795, 798, 799, 814, 816, 817, 818, 819, 820, 821, 822, 823, 824, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 845, 849, 850, 851, 852, 853, 855, 856, 858, 861, 862, 863, 865, 868], "arang": [9, 20, 95, 96, 117, 157, 158, 191, 209, 217, 219, 220, 245, 292, 297, 299, 300, 301, 314, 330, 334, 335, 378, 382, 478, 542, 555, 556, 557, 558, 609, 610, 613, 619, 620, 621, 631, 653, 656, 657, 696, 712, 713, 757, 758, 799, 801, 832, 833, 837, 838, 846, 850, 861], "arbitrari": [4, 20, 48, 111, 125, 248, 350, 411, 560, 645, 673, 688, 696, 728, 730, 820, 827, 829, 832, 833, 835, 837, 858], "arbitrarili": 673, "arc": 699, "architectur": [9, 436, 707, 819, 850, 851, 862], "archiv": 201, "archlinux": 845, "archwiki": 845, "area": 837, "arena": 842, "arg": [22, 121, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 411, 439, 440, 441, 442, 443, 444, 445, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 692, 716, 738, 756, 759, 778, 798, 802, 827, 829, 846, 867, 868], "argmax": [817, 818, 829, 834, 836, 838, 845, 850, 855], "argument": [4, 20, 22, 34, 36, 37, 51, 54, 73, 93, 94, 100, 108, 113, 117, 121, 122, 131, 140, 210, 211, 212, 213, 216, 220, 239, 245, 286, 329, 330, 334, 335, 341, 349, 350, 380, 409, 411, 421, 422, 423, 424, 425, 426, 458, 478, 505, 542, 558, 564, 565, 566, 568, 569, 576, 577, 637, 642, 645, 683, 696, 697, 702, 703, 707, 712, 714, 718, 728, 787, 799, 800, 817, 827, 835, 837, 842, 845, 852], "argument\ub85c": 804, "ari": [820, 855], "arnold": 855, "around": [829, 868], "arr": [4, 314, 693, 739, 779], "arrai": [4, 7, 21, 101, 102, 125, 126, 148, 197, 198, 205, 207, 217, 220, 232, 239, 248, 249, 309, 314, 558, 562, 563, 564, 567, 576, 577, 583, 584, 688, 693, 696, 704, 781, 832, 833, 839, 845, 851], "arrang": [558, 576, 577, 690], "array_lik": 207, "array\ub294": 781, "array\ub4e4\uc5d0": 779, "array\ub4e4\uc744": 779, "array\ub4e4\uc758": 779, "array\ub97c": 788, "arrow": [828, 851], "arrows": 855, "art": [695, 823, 862], "articl": [149, 182, 185, 192, 835, 842], "arxiv": [134, 137, 146, 147, 161, 162, 169, 171, 174, 180, 182, 188, 195, 288, 425, 426, 448, 560, 718, 720, 768, 823, 829, 862, 868], "as_edge_prediction_sampl": [214, 216], "as_tensor": 819, "as_tupl": [690, 736, 776, 781, 850, 851], "asarrai": [4, 693, 739, 779], "ascend": [197, 205, 286, 296, 436, 568], "asgraphpreddataset": 819, "aslinkpreddataset": 846, "aspect": [178, 179, 858], "aspirincod": 749, "assembl": [858, 862], "assert": [89, 121, 219, 690, 736, 756, 776, 798, 827, 829], "assertionerror": 829, "assign": [4, 27, 28, 39, 52, 78, 114, 115, 125, 141, 142, 143, 147, 173, 221, 222, 223, 224, 225, 231, 235, 238, 239, 240, 248, 348, 349, 543, 558, 567, 643, 693, 694, 695, 696, 701, 702, 703, 727, 731, 746, 787, 811, 836, 839, 845, 850, 851, 862], "associ": [43, 46, 47, 74, 75, 103, 197, 205, 240, 241, 304, 380, 411, 422, 424, 562, 564, 565, 566, 567, 568, 693, 699, 704, 728, 789, 850, 851, 852, 861, 862], "assum": [48, 130, 207, 210, 214, 215, 216, 217, 219, 221, 240, 244, 296, 309, 339, 421, 477, 562, 564, 565, 566, 567, 642, 688, 690, 692, 693, 696, 726, 727, 729, 730, 781, 834, 836, 839, 845, 846, 858, 862, 867, 868], "assume_num_node_within_int32": 309, "assumpt": [20, 697, 842, 851], "assur": 683, "astyp": [396, 397, 400, 402, 403, 413, 839], "asv": 823, "asym_a": 822, "asymmetr": 699, "asynchron": 210, "aten": 819, "atom": [177, 178, 179, 195, 386, 438], "atom_encod": 819, "atomencod": 819, "att": [412, 862], "att_anim": 862, "att_map": 862, "att_weight_map": 862, "attach": [4, 141, 142, 143, 189, 190, 693, 850, 861], "attempt": 200, "attend": [858, 862], "attent": [9, 352, 384, 389, 396, 397, 400, 402, 403, 412, 419, 420, 431, 434, 435, 446, 448, 449, 451, 452, 453, 458, 635, 651, 671, 721, 822, 825, 853, 854, 863, 865], "attention_weight": 400, "attenu": [392, 414], "attn": [446, 819], "attn_aft": 420, "attn_bef": 419, "attn_bia": [446, 449], "attn_bias_typ": [446, 449], "attn_drop": [400, 402, 403, 446], "attn_dropout": [419, 420, 448, 449], "attn_fc": 852, "attn_head": 852, "attn_mask": [446, 449], "attr": [165, 179, 421, 425, 426, 448, 602, 622, 729, 768, 769, 781, 812, 838, 867], "attract": [73, 113], "attribut": [22, 122, 125, 140, 149, 159, 165, 179, 185, 186, 247, 248, 289, 296, 302, 307, 323, 644, 647, 648, 683, 694, 696, 709, 727, 781, 834, 835, 838, 839, 862], "attrvisitor": 22, "auc": [827, 837, 846], "augment": [448, 650, 656, 657, 658, 696, 817, 851], "auroc": 827, "aut": 862, "authent": 845, "author": [145, 151, 152, 177, 178, 179, 181, 308, 315, 386, 651, 687, 696, 699, 718, 781, 849, 850, 851, 852, 855, 858, 861, 862], "author___affiliated_with___institut": 696, "author___writes___pap": 696, "authorship": [151, 152], "auto": [21, 22, 815, 822], "autocast": [721, 805], "autoencod": 850, "autograd": [9, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 579, 823], "autom": 21, "automat": [4, 21, 22, 156, 221, 289, 299, 412, 415, 419, 561, 642, 687, 693, 694, 696, 707, 712, 717, 721, 805, 822, 845, 846, 849], "auxiliari": [695, 696], "av": 392, "avail": [4, 21, 118, 119, 148, 168, 183, 186, 207, 239, 288, 336, 427, 429, 569, 571, 688, 692, 717, 729, 731, 818, 823, 842, 859, 862, 865], "averag": [4, 10, 137, 149, 175, 177, 181, 183, 185, 195, 244, 392, 394, 410, 430, 477, 645, 660, 661, 666, 729, 812, 822, 836, 837, 838, 852, 862, 867, 868], "avg": 25, "avg_deg": 183, "avg_degre": [660, 661, 666], "avg_loss": [819, 862], "avgpool": [421, 426], "avoid": [21, 34, 70, 73, 89, 93, 94, 100, 113, 116, 130, 220, 292, 299, 333, 339, 384, 394, 396, 399, 400, 402, 403, 404, 407, 410, 417, 446, 448, 449, 559, 565, 566, 567, 568, 636, 643, 645, 693, 696, 700, 708, 719, 725, 868], "aw": [288, 842], "awai": [4, 856, 865], "awar": [712, 729, 852], "awesom": 21, "ax": [818, 858, 861], "axi": [399, 849, 851, 852, 861], "b": [6, 22, 26, 45, 79, 82, 105, 118, 119, 121, 127, 128, 129, 131, 179, 309, 310, 317, 347, 383, 388, 397, 400, 402, 403, 408, 410, 415, 423, 425, 430, 431, 432, 433, 434, 436, 437, 438, 446, 447, 451, 452, 453, 461, 501, 504, 553, 554, 560, 609, 613, 618, 619, 630, 631, 637, 642, 647, 648, 652, 694, 724, 729, 756, 757, 759, 761, 764, 769, 798, 799, 802, 804, 808, 812, 820, 822, 850, 851, 855, 858, 861], "b_": [851, 858, 861], "b_dst": 127, "b_h": 862, "b_iou": 855, "b_o": 862, "b_src": 127, "ba": [118, 127, 131, 141, 142, 143, 347, 560], "bachman": 839, "back": [21, 22, 44, 104, 122, 560, 642, 645, 694, 716, 801, 827, 835], "backend": [3, 4, 6, 8, 9, 21, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 210, 214, 215, 216, 219, 245, 246, 247, 248, 249, 286, 329, 330, 334, 335, 336, 346, 352, 427, 428, 429, 430, 431, 432, 433, 437, 438, 460, 478, 479, 542, 549, 571, 573, 636, 638, 642, 643, 644, 652, 658, 664, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 692, 693, 700, 702, 722, 726, 738, 739, 778, 779, 787, 819, 823, 842, 845, 846, 852, 855, 867, 868], "backend_unittest": 21, "backprop": [721, 805], "backpropag": 718, "backpropagate\ub97c": 804, "backtrack": [69, 339, 664, 851], "backup": 692, "backward": [4, 9, 10, 118, 119, 378, 382, 421, 422, 423, 424, 425, 426, 457, 692, 693, 711, 712, 713, 716, 718, 720, 721, 727, 729, 730, 731, 738, 739, 756, 757, 759, 761, 767, 769, 770, 771, 778, 779, 798, 799, 802, 804, 805, 811, 812, 813, 814, 817, 818, 819, 820, 827, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 867, 868], "backwards\ub97c": 798, "bad": [21, 22, 446, 447, 449, 451, 452, 851], "bag": [135, 136, 155, 187, 193], "baidu": 21, "balanc": [189, 190, 239, 348, 349, 459, 695, 845], "balance_edg": [209, 239, 348, 349, 696, 740, 781, 845, 846], "balance_ntyp": [209, 239, 348, 349, 696, 740, 781, 845], "balkance_edg": 209, "ban": 188, "bar": [120, 817, 818, 822], "barab\u00e1si": [141, 142, 143], "barrier": [4, 868], "baryshnikov": 850, "base": [4, 6, 13, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 231, 238, 239, 242, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 543, 560, 562, 564, 602, 612, 622, 635, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 686, 693, 694, 703, 712, 724, 729, 730, 818, 823, 826, 827, 829, 832, 833, 837, 838, 839, 850, 851, 852, 861, 862], "base_dir": [832, 833], "baselin": 823, "basenam": [832, 833], "basetransform": [13, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673], "bash": [21, 816], "basi": [383, 390, 415, 453, 461, 718, 850], "basic": [7, 9, 156, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 686, 689, 695, 698, 815, 821, 834, 836, 837, 839, 845, 846, 851, 858, 862, 868], "basicfeaturestor": [303, 315], "batch": [4, 6, 7, 13, 20, 22, 27, 28, 36, 37, 38, 53, 54, 95, 96, 101, 102, 114, 115, 116, 117, 128, 129, 130, 165, 168, 172, 183, 186, 208, 210, 213, 220, 245, 246, 292, 299, 305, 330, 333, 336, 338, 339, 347, 378, 382, 383, 388, 399, 408, 419, 423, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 447, 450, 451, 452, 453, 478, 479, 542, 553, 554, 555, 556, 557, 559, 565, 571, 573, 574, 575, 610, 611, 618, 636, 645, 646, 647, 648, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 689, 690, 692, 693, 707, 710, 711, 714, 718, 719, 724, 735, 738, 739, 741, 769, 775, 778, 779, 782, 801, 815, 819, 822, 826, 852, 858, 862], "batch_depend": 214, "batch_f": [430, 431, 432, 433, 434, 435, 436, 437, 438], "batch_first": [447, 723, 763, 807], "batch_g": [430, 431, 432, 433, 434, 435, 436, 437, 438], "batch_input": [692, 738, 778, 845, 846], "batch_label": [692, 738, 778, 845], "batch_norm": [399, 408, 450], "batch_num_edg": [95, 96, 122, 683, 729, 812, 838], "batch_num_nod": [96, 122, 683, 729, 812, 838], "batch_pr": [692, 738, 778, 845, 846], "batch_siz": [4, 122, 183, 209, 210, 213, 214, 215, 216, 219, 220, 292, 298, 299, 302, 307, 316, 378, 382, 421, 425, 426, 446, 448, 449, 689, 690, 692, 693, 712, 713, 714, 715, 716, 718, 719, 720, 729, 735, 736, 738, 739, 756, 757, 758, 759, 761, 769, 775, 776, 778, 779, 798, 799, 800, 801, 802, 804, 812, 819, 827, 829, 838, 845, 846, 851, 855, 862, 867, 868], "batch_tre": 855, "batch_walk": 378, "batched_g": 819, "batched_graph": [165, 168, 172, 186, 213, 729, 769, 812, 838, 851, 855], "batched_label": [165, 168, 172, 186, 851], "batched_pmpd": 851, "batchedgraph": 862, "batcher": 855, "batcher_dev": 855, "batchnorm": 411, "batchnorm1": 819, "batchnorm1d": [411, 819, 851], "batchnorm2": 819, "bbg": 122, "bc": 118, "bcewithlogitsloss": [819, 852], "bdd": [383, 415], "beam": 862, "beat": 21, "becam": 167, "becasu": 317, "becaus": [4, 9, 21, 22, 34, 73, 93, 94, 100, 113, 122, 131, 286, 329, 380, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 567, 693, 694, 695, 700, 708, 714, 715, 730, 820, 836, 845, 851, 852, 859, 865], "becom": [122, 126, 131, 248, 249, 286, 329, 416, 555, 621, 713, 862], "been": [4, 22, 120, 131, 162, 173, 188, 230, 286, 290, 329, 383, 412, 415, 567, 690, 697, 714, 718, 819, 851, 855, 862], "befor": [4, 21, 89, 108, 117, 126, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 223, 224, 225, 234, 249, 290, 292, 299, 317, 348, 419, 420, 431, 449, 457, 543, 554, 561, 564, 567, 669, 693, 694, 695, 696, 714, 716, 719, 721, 822, 834, 839, 845, 851, 852, 855, 859, 862, 865, 867], "begin": [347, 448, 756, 798, 820, 821, 845, 851, 852, 858, 867], "beginn": 815, "behavior": [229, 230, 308, 693, 700, 730, 839, 842, 858, 861, 862], "behind": [693, 850, 867], "being": [21, 45, 79, 82, 105, 108, 122, 214, 216, 219, 245, 248, 302, 307, 330, 334, 335, 478, 542, 553, 554, 559, 565, 576, 577, 837, 851, 858, 861], "believ": 842, "belong": [4, 68, 116, 142, 143, 174, 181, 189, 190, 197, 205, 220, 229, 230, 231, 235, 238, 239, 340, 348, 543, 636, 683, 695, 696, 727, 820, 839, 850, 851, 859, 865], "below": [4, 5, 22, 89, 131, 220, 239, 286, 292, 329, 333, 414, 415, 461, 571, 660, 661, 666, 688, 690, 692, 693, 694, 695, 696, 697, 701, 703, 704, 711, 712, 720, 724, 728, 817, 818, 819, 820, 822, 823, 832, 833, 845, 846, 849, 851, 852, 858, 861, 862, 867], "benchmark": [22, 132, 135, 136, 146, 151, 152, 153, 159, 162, 169, 179, 192, 336, 337, 340, 408, 476, 663, 689, 696, 735, 775, 819, 829], "benefici": 708, "benefit": [690, 696, 826, 837], "benign": 161, "bernoulli": [726, 727, 766, 767, 810, 811, 858], "bernoulli_": [756, 798], "bernoulli_action_log_prob": 858, "bert": [159, 862], "besid": [159, 341, 411, 569, 692, 708, 716, 723, 725, 858, 862], "best": [4, 14, 390, 552, 667, 686, 714, 719, 773, 822, 825, 829, 834, 835, 837, 843, 844, 852], "best_test_acc": [834, 836], "best_val_acc": [834, 836], "beta": [4, 10, 384, 387, 404, 862], "beta1": [4, 10, 421, 422], "beta2": [4, 10, 421, 422], "beta_": 453, "beta_1": [421, 422], "beta_2": [421, 422], "beta_l": 404, "better": [21, 635, 671, 690, 703, 715, 776, 820, 823, 835, 839, 842, 851], "between": [4, 5, 26, 48, 56, 66, 72, 101, 102, 116, 118, 119, 142, 147, 149, 155, 166, 174, 178, 179, 182, 185, 187, 193, 195, 207, 226, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 296, 302, 307, 336, 386, 404, 407, 424, 426, 427, 429, 446, 451, 452, 453, 457, 459, 543, 561, 562, 565, 571, 572, 576, 577, 645, 694, 696, 699, 704, 713, 719, 727, 729, 730, 819, 820, 822, 835, 837, 839, 849, 850, 851, 852, 858, 861, 862, 867], "bewteen": [396, 402, 403], "beyond": [120, 243, 244, 477, 696, 836, 837], "bf": 547, "bf16": 721, "bfs_nodes_gener": [0, 547], "bg": [36, 37, 38, 95, 96, 116, 122, 128, 129, 144, 421, 423, 425, 426, 553, 554, 573, 574, 575, 647, 648, 683, 703, 729, 747, 769, 788, 812, 867], "bg1": [116, 636], "bhg": [122, 683], "bi": [6, 338, 636, 862], "bi_part": 396, "bia": [381, 388, 389, 390, 391, 393, 394, 395, 397, 400, 401, 402, 403, 404, 407, 409, 410, 413, 415, 416, 417, 418, 446, 449, 451, 452, 453, 454, 567, 720, 723, 763, 807, 849, 850, 852, 855], "bias": 453, "bidecod": [727, 767], "bidirect": [116, 162, 173, 220, 337, 428, 549, 560, 636, 663, 835], "big": [400, 729], "bigger": [838, 856, 865], "billion": [696, 711], "bilstm": 458, "bin": [204, 341, 569, 691, 695, 737, 777, 781, 839], "binar": 855, "binari": [5, 9, 161, 163, 171, 180, 186, 189, 190, 239, 459, 502, 503, 569, 695, 696, 707, 781, 792, 820, 837, 852, 855], "binary_cross_entropy_with_logit": [716, 827, 837, 846], "binaryreducebackward": [384, 396, 402], "bind": [386, 816], "bio": 842, "bipartit": [9, 26, 44, 45, 68, 79, 82, 104, 105, 116, 118, 119, 125, 126, 130, 347, 387, 389, 390, 391, 394, 395, 396, 397, 399, 400, 402, 403, 407, 410, 413, 416, 550, 560, 567, 637, 699, 704, 724, 725, 784, 789, 799, 808, 809, 828, 851, 861], "bipartite_from_networkx": 126, "bipartite_from_scipi": 125, "bisect": [348, 349, 694], "bisect_left": 694, "bit": [21, 22, 332, 703, 730, 858, 862], "bitcoin": 145, "bitcoinotc": [25, 145], "bitcoinotcdata": [690, 736, 776], "bitcoinotcdataset": [687, 734, 774], "bla": [14, 336, 427, 429, 571], "blitz": [815, 825, 839, 841], "blitz_1_introduct": 834, "blitz_2_dglgraph": 835, "blitz_3_message_pass": 836, "blitz_4_link_predict": 837, "blitz_5_graph_classif": 838, "blitz_6_load_data": 839, "bloat16": 721, "blob": [165, 210, 827, 829, 832, 833], "block": [4, 10, 127, 131, 180, 183, 210, 214, 215, 216, 220, 291, 304, 383, 415, 435, 457, 637, 692, 693, 694, 712, 713, 715, 716, 717, 718, 720, 722, 724, 725, 738, 739, 756, 757, 758, 759, 760, 761, 764, 778, 779, 780, 798, 799, 801, 802, 803, 804, 806, 808, 819, 827, 829, 845, 846, 850, 851, 852, 858, 868], "block3": [756, 798], "block_diag": 851, "block_id": [756, 798], "block_typ": 435, "blocksampl": [214, 216, 714, 756, 798, 800], "blog": [824, 842], "blue": 818, "bmatrix": 820, "bmm": 850, "bn": 851, "board": 842, "bodi": 22, "boil": 849, "boldsymbol": [730, 756, 770, 798, 813], "bond": [177, 179, 195], "book": [137, 231, 236, 238, 695, 696, 824], "bool": [4, 6, 10, 31, 48, 57, 58, 65, 66, 67, 95, 96, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 207, 210, 213, 214, 216, 217, 219, 226, 229, 230, 231, 235, 237, 238, 239, 240, 241, 245, 286, 290, 292, 296, 299, 302, 307, 308, 309, 321, 322, 330, 333, 334, 335, 336, 337, 339, 348, 349, 378, 381, 382, 383, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 446, 448, 449, 450, 454, 459, 478, 542, 543, 545, 547, 548, 549, 555, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 571, 572, 573, 635, 636, 637, 643, 645, 647, 648, 649, 651, 652, 653, 663, 664, 669, 671, 686, 688, 690, 726, 727, 733, 756, 766, 767, 773, 776, 781, 798, 810, 811, 831, 839, 845, 846, 858], "boolean": [53, 54, 210, 213, 216, 231, 238, 245, 296, 302, 307, 324, 331, 478, 566, 684, 693, 727, 731, 779, 834, 845], "booltensor": 852, "boost": 719, "borrow": [22, 199, 200, 729], "both": [0, 9, 21, 22, 44, 56, 62, 63, 73, 89, 104, 116, 118, 119, 130, 134, 149, 155, 181, 185, 187, 193, 210, 216, 230, 296, 302, 304, 307, 317, 333, 339, 346, 347, 380, 394, 395, 396, 397, 400, 401, 402, 403, 410, 412, 413, 416, 447, 453, 478, 479, 559, 569, 596, 599, 600, 601, 603, 613, 618, 619, 636, 637, 642, 643, 645, 688, 692, 693, 696, 698, 703, 704, 706, 707, 715, 721, 727, 822, 823, 831, 834, 835, 837, 839, 845, 850, 851, 852, 853, 858, 862, 865], "bother": [687, 822], "bottom": [142, 143, 855], "bought": [135, 136, 137, 699, 714, 784], "bound": [234, 447, 452, 567, 721], "boundari": 818, "bpr": [730, 813], "branch": [21, 192, 695, 781], "brand": 22, "breadth": [123, 124, 562], "break": [51, 219, 827, 829, 862], "breviti": 690, "brew": 816, "brief": [698, 851], "briefli": 818, "bring": [20, 666, 719], "broadcast": [5, 9, 128, 129, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 318, 405, 416, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 610, 623, 624, 625, 626, 627, 707], "broadcast_edg": 129, "broadcast_nod": 128, "broken": 852, "brook": 749, "brookhuang16211": 749, "bruteforc": [14, 336, 427, 429, 571], "bsddmm": 819, "bspmm": 819, "bucket": 13, "budget": 217, "buffer": [234, 292, 299, 336, 427, 429, 571, 719], "buffer_devic": 715, "buffer_s": [292, 299, 827, 829], "bugfix": 21, "bui": [550, 699, 784], "build": [14, 22, 157, 158, 191, 214, 215, 216, 234, 302, 430, 431, 432, 433, 434, 435, 436, 437, 438, 565, 690, 693, 700, 704, 705, 711, 714, 717, 726, 729, 731, 776, 815, 816, 819, 820, 821, 834, 837, 838, 852, 855, 858], "build_dgl": 816, "build_ext": [21, 816], "build_hidden_lay": 850, "build_input_lay": 850, "build_model": 850, "build_output_lay": 850, "built": [3, 9, 13, 22, 34, 73, 91, 92, 93, 94, 100, 113, 162, 179, 181, 288, 693, 706, 708, 721, 724, 728, 729, 731, 751, 792, 805, 808, 815, 822, 823, 826, 836, 849, 852, 855, 858], "builtin": [9, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 690, 691, 716, 717, 818, 827, 836, 837, 849, 850, 852], "builtindataset": [718, 720, 827, 829, 868], "builtinfunct": [34, 73, 91, 92, 93, 94, 100, 113], "bulit": [34, 73, 93, 94, 100, 113], "bunch": [696, 724], "busi": 194, "button": 21, "buyer": 699, "bwtype": 560, "byte": 234, "c": [6, 21, 22, 25, 118, 119, 120, 121, 151, 152, 179, 183, 192, 288, 291, 340, 389, 390, 391, 398, 408, 411, 459, 501, 703, 788, 816, 818, 829, 855, 861, 862], "c_": [178, 179, 394, 401, 410, 850, 852, 855, 861], "c_csc_graph": 296, "c_etyp": [319, 320, 422, 424, 709, 753, 795], "c_etype_func_dict": [422, 424], "c_etype_str": [319, 320], "c_i": 850, "c_j": 855, "c_k": [340, 386], "c_sampled_subgraph": 829, "cach": [23, 138, 139, 140, 142, 143, 148, 156, 189, 190, 209, 210, 217, 297, 417, 691, 716, 802, 817, 818, 820, 834, 836, 837, 842, 849, 850, 851, 852], "cache_path": 209, "cache_s": 297, "caculatorgetbrand": 22, "cal": [178, 179], "calc": 22, "calcul": [4, 22, 313, 389, 390, 391, 428, 480, 549, 574, 575, 576, 577, 602, 622, 643, 692, 696, 729, 812, 818, 822, 827, 851, 852, 858, 861, 862], "calculate_gain": [720, 723, 763, 807, 850, 852], "calculatorobject": 22, "call": [0, 4, 6, 9, 21, 22, 26, 45, 52, 66, 79, 82, 105, 108, 117, 118, 119, 131, 145, 156, 217, 239, 286, 292, 299, 329, 352, 380, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 419, 421, 422, 423, 424, 425, 426, 476, 559, 565, 567, 618, 642, 643, 647, 648, 683, 690, 693, 694, 695, 696, 699, 702, 703, 704, 707, 708, 709, 710, 718, 723, 724, 725, 727, 729, 730, 746, 787, 792, 819, 827, 828, 829, 832, 833, 834, 835, 836, 845, 851, 852, 855, 858, 862, 863, 865, 868], "callabl": [4, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 121, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 220, 292, 299, 350, 380, 389, 394, 395, 400, 402, 403, 404, 405, 406, 408, 410, 413, 415, 416, 417, 418, 448, 449, 457, 544, 545, 546, 547, 548, 560, 655, 723, 827, 829], "came": 22, "can": [4, 5, 6, 7, 9, 12, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 73, 74, 75, 77, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 117, 118, 119, 120, 122, 125, 128, 129, 130, 131, 147, 156, 161, 163, 168, 186, 197, 207, 210, 213, 214, 216, 217, 220, 221, 229, 230, 231, 233, 234, 239, 240, 241, 244, 245, 246, 248, 286, 292, 296, 299, 302, 307, 308, 309, 314, 315, 329, 330, 334, 335, 336, 338, 348, 349, 352, 379, 380, 381, 382, 384, 386, 388, 389, 390, 391, 392, 394, 396, 397, 398, 399, 400, 402, 403, 404, 407, 409, 410, 413, 415, 416, 417, 419, 427, 428, 429, 431, 446, 450, 453, 454, 455, 456, 457, 458, 461, 477, 478, 480, 505, 542, 543, 549, 553, 554, 555, 556, 557, 558, 561, 564, 565, 566, 567, 568, 571, 574, 575, 576, 577, 621, 637, 642, 643, 645, 647, 648, 670, 684, 686, 687, 688, 690, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 774, 786, 815, 816, 818, 819, 820, 821, 822, 823, 826, 827, 828, 829, 831, 834, 835, 836, 837, 838, 842, 845, 846, 849, 850, 851, 852, 853, 855, 858, 859, 861, 862, 863, 865, 867], "candid": [336, 427, 429, 571], "cannot": [4, 20, 21, 210, 330, 334, 335, 425, 478, 542, 693, 694, 696, 701, 702, 704, 707, 726, 746, 748, 787, 789], "canon": [4, 26, 36, 39, 46, 48, 51, 52, 57, 66, 80, 109, 131, 239, 319, 320, 329, 382, 422, 644, 652, 659, 704, 789, 826, 831, 832], "canonical_etyp": [4, 52, 66, 109, 380, 422, 423, 424, 652, 704, 709, 717, 725, 748, 753, 756, 757, 759, 760, 765, 789, 795, 798, 799, 802, 803, 809, 850], "capabl": [210, 721, 862], "capac": [1, 9, 297, 571, 696, 707, 711, 852, 853, 865], "capav": [178, 179], "capsul": [352, 825, 863, 864, 865], "captur": [699, 709], "care": [162, 421, 422, 423, 424, 425, 426], "carlo": [424, 426], "carri": [289, 695, 696, 729], "cartesian": 453, "case": [4, 5, 9, 14, 21, 22, 27, 32, 34, 41, 42, 44, 48, 51, 73, 93, 94, 100, 104, 108, 109, 113, 116, 125, 126, 131, 140, 181, 200, 210, 214, 231, 238, 248, 249, 286, 329, 338, 347, 352, 384, 387, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 407, 410, 413, 416, 417, 430, 431, 432, 433, 434, 435, 436, 437, 438, 459, 460, 564, 572, 576, 577, 618, 624, 642, 683, 687, 688, 691, 693, 696, 703, 704, 708, 712, 714, 717, 718, 724, 727, 808, 820, 822, 827, 829, 832, 833, 837, 839, 842, 845, 850, 851, 852, 855, 862], "case1": [454, 458, 596, 599, 600, 601, 602, 603, 612, 614, 615, 616, 617, 622, 628, 652, 653, 658, 659, 664, 668, 669, 673], "case2": [454, 458, 596, 599, 600, 601, 602, 603, 612, 614, 615, 616, 617, 622, 628, 652, 653, 658, 659, 664, 668, 669, 673], "case3": [454, 458, 602, 612, 614, 617, 622, 628, 652, 653], "case4": 454, "case\ub4e4\uc5d0": 781, "casio": 22, "cast": [64, 71, 131, 286, 329, 390, 639, 640, 641, 819], "cat": [157, 158, 191, 220, 298, 307, 312, 430, 431, 432, 433, 434, 435, 436, 437, 438, 451, 454, 458, 571, 708, 713, 717, 727, 752, 757, 760, 767, 794, 799, 803, 811, 818, 819, 827, 836, 837, 839, 846, 851, 852, 858, 861, 868], "cat_feat": [708, 752, 794], "catbackward": 433, "categor": [160, 194, 727, 835, 842, 850, 858], "categori": [5, 132, 133, 135, 136, 144, 150, 154, 155, 161, 170, 176, 187, 193, 716, 731, 822, 834, 837, 838, 839, 850], "category_id": 850, "caus": [292, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 724], "caution": 4, "cc": [22, 167, 695, 781], "cd": [21, 137, 816], "cdgnn": 851, "cdot": [116, 120, 186, 384, 388, 391, 392, 396, 399, 400, 411, 412, 413, 416, 433, 454, 559, 670, 724, 756, 764, 798, 808, 818, 836, 855, 858, 861, 862], "cedric": 861, "cell": [171, 827, 829], "center": [382, 421, 422, 423, 425, 453, 835], "cento": 816, "central": 836, "centric": [698, 823], "centuri": 855, "certain": [27, 150, 154, 176, 565, 566, 576, 577, 700, 709, 723, 838, 861], "certif": 200, "certifi": [827, 829, 832, 833], "cetyp": 850, "chain": [182, 700, 719, 785, 837, 849, 855, 858, 862], "chainer": 21, "challeng": [151, 152, 855, 856, 858, 859, 865], "chameleon": 149, "chang": [1, 6, 26, 64, 70, 71, 131, 145, 177, 178, 179, 286, 329, 417, 576, 577, 687, 688, 690, 718, 721, 858, 867], "channel": [411, 851, 852, 862], "chapter": [1, 3, 5, 11, 20, 637, 686, 694, 695, 696, 705, 710, 717, 724, 729, 731, 842], "char": 22, "charact": 858, "character": [120, 244, 477, 729, 820], "characterist": [244, 477, 709], "charg": 692, "charset": [827, 829, 832, 833], "chart": 686, "cheatsheet": 5, "chebconv": 393, "chebnet": 388, "chebyshev": [388, 393], "check": [21, 22, 56, 65, 66, 67, 101, 102, 156, 199, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 567, 686, 687, 690, 691, 695, 696, 710, 712, 721, 773, 774, 777, 815, 816, 817, 818, 819, 820, 823, 837, 850, 852, 858, 867], "check_eq_shap": [724, 764, 808], "check_sha1": [687, 734, 774], "checkout": 21, "checkpoint": 700, "chee": 861, "chemic": 858, "chemistri": [179, 386, 413], "chen": 749, "child": 855, "children": [424, 426], "china": 23, "choic": [23, 459, 502, 550, 551, 695, 837, 838], "choos": [126, 131, 226, 227, 245, 248, 249, 286, 296, 329, 478, 550, 551, 562, 564, 567, 643, 694, 731, 816, 822, 828, 842], "choose_dest": 858, "choose_dest_ag": 858, "choose_dest_and_upd": 858, "choose_dest_log_p": 858, "choosedestandupd": 858, "chosen": [146, 169, 195, 226, 227, 240, 241, 296, 316, 336, 423, 425, 565, 566, 567, 568, 816], "chrsmrr": [168, 186], "chunk": [694, 855], "chunk_graph": 696, "chunkfilespec": 696, "ci": 21, "cifar10": [146, 169], "cikm": 162, "circ": [387, 446, 819], "circl": 858, "circular": 172, "citat": [150, 153, 154, 176, 288, 666, 820, 834, 837, 851], "citation2": [288, 846], "citation_graph": [851, 852], "citationdata": [690, 736, 776], "citationgraphdataset": [25, 150, 154, 176, 690, 736, 776], "citationgraphdataset\u6e90\u4ee3\u7801": 736, "cite": [308, 696, 781, 820, 837, 850, 851], "citegrh": [851, 852], "cites": [25, 150, 690, 736, 776, 823], "citeseergraphdataset": [690, 721, 726, 731, 736, 766, 771, 776, 810, 814], "citizen": 22, "cla": [818, 858, 861], "clamp": [447, 452, 459, 730, 770, 802, 813, 862], "clang": 816, "class": [0, 1, 4, 6, 8, 10, 13, 22, 31, 120, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 243, 244, 249, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 340, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 560, 611, 618, 629, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 685, 687, 688, 690, 693, 694, 712, 713, 715, 716, 717, 718, 720, 721, 723, 725, 727, 729, 730, 731, 733, 736, 756, 757, 758, 759, 760, 761, 763, 765, 767, 769, 770, 771, 773, 776, 798, 799, 801, 802, 803, 804, 805, 807, 809, 811, 812, 813, 814, 817, 818, 819, 820, 821, 822, 827, 829, 830, 831, 834, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 861, 867, 868], "classic": [419, 712, 815, 818, 861, 862], "classif": [2, 120, 122, 132, 133, 135, 136, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 159, 160, 161, 163, 165, 167, 168, 169, 170, 172, 175, 176, 181, 186, 189, 190, 192, 194, 209, 210, 211, 213, 214, 215, 216, 219, 220, 244, 288, 302, 304, 307, 394, 410, 421, 422, 423, 424, 425, 426, 436, 459, 477, 656, 659, 693, 696, 711, 716, 720, 726, 730, 811, 813, 817, 823, 825, 826, 827, 836, 837, 840, 841, 846, 847, 848, 849, 850, 851, 852, 858, 869, 870], "classifi": [149, 155, 185, 187, 193, 424, 426, 729, 730, 731, 769, 812, 849, 850, 851], "claud": 855, "clean": [21, 685, 704, 707], "clear": [852, 862], "clearli": [21, 852], "clf": [378, 861], "cli": 21, "click": [21, 220, 726, 727, 730, 766, 767, 770, 810, 811, 813, 818], "click_dst": [726, 766, 810], "click_src": [726, 766, 810], "client": [4, 234], "cliqu": 172, "clock": [183, 207], "clone": [21, 56, 64, 71, 89, 108, 411, 639, 640, 641, 695, 781, 816, 851, 858, 862], "cloner": 21, "close": [178, 378, 382, 690, 818, 852, 861, 862], "cloud": [6, 14, 21, 336, 399, 427, 429, 571], "club": [167, 700, 744, 785, 818, 839], "cluster": [4, 6, 147, 209, 558, 692, 693, 695, 696, 697, 823, 845, 846, 851], "cluster_gcn": 209, "cm": 818, "cmake": 816, "cmap": [818, 851], "cn": 23, "cnn": [399, 407, 835, 862], "cnt": 645, "co": [4, 134, 135, 136, 137, 151, 152, 288, 384, 386, 454, 651, 820, 822], "coalesc": [239, 590, 645, 673, 720, 822], "coarsen": 6, "coauthor": [25, 151, 152, 699], "coauthordata": [690, 736, 776], "code": [4, 22, 130, 145, 164, 166, 175, 177, 178, 179, 183, 184, 196, 199, 200, 209, 220, 234, 289, 380, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 687, 689, 690, 692, 693, 694, 700, 701, 703, 704, 706, 707, 712, 713, 717, 718, 719, 720, 721, 722, 724, 727, 728, 729, 731, 741, 776, 782, 817, 818, 819, 820, 822, 823, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 867, 868], "coef": [424, 426, 660], "coeffici": [4, 10, 383, 415, 420, 459, 461, 480, 660, 850, 861], "coff_budget": [423, 425], "coff_connect": [423, 425], "col": [614, 628, 822, 851], "col_sort": 286, "colab": 821, "collab": [25, 165, 168, 186], "collaps": 164, "collat": [183, 213], "collate_dgl": 819, "collate_fn": [4, 183, 213, 378, 382, 689, 692, 693, 735, 738, 739, 775, 778, 779, 819, 827, 829, 851, 855], "collect": [5, 7, 22, 122, 133, 164, 240, 241, 296, 386, 423, 425, 457, 689, 692, 693, 826, 827, 850, 851, 855, 858, 867, 868], "colon": 696, "color": [22, 818, 820, 828, 851, 852], "colorbar": 852, "column": [4, 31, 32, 118, 119, 131, 286, 309, 318, 323, 329, 336, 393, 394, 395, 549, 580, 581, 583, 584, 596, 599, 600, 601, 602, 603, 614, 615, 616, 622, 624, 628, 658, 688, 704, 748, 789, 820, 822, 839, 845, 846, 851], "com": [21, 23, 135, 136, 151, 152, 153, 159, 162, 165, 210, 684, 690, 695, 736, 749, 776, 781, 790, 816, 827, 829, 832, 833, 842], "combin": [20, 26, 239, 383, 387, 414, 415, 420, 431, 454, 461, 569, 643, 696, 706, 707, 708, 715, 718, 727, 731, 818, 834, 838, 850, 852, 862], "combine_nam": 26, "come": [134, 149, 155, 185, 187, 193, 300, 390, 415, 458, 643, 837, 858, 862], "comma": 688, "command": [21, 693, 695, 697, 816, 817, 818, 819, 820, 822, 845, 851], "comment": [21, 181, 717], "commerc": 820, "commerci": 159, "commit": 21, "committ": 21, "committor": 21, "common": [14, 21, 26, 130, 160, 210, 213, 384, 394, 396, 399, 400, 402, 403, 404, 407, 410, 417, 700, 704, 707, 708, 710, 721, 724, 725, 727, 729, 809, 815, 826, 827, 835, 839, 845, 850, 852, 867], "commonli": [12, 128, 129, 382, 438, 553, 554, 560, 637, 661, 666, 670, 685, 693, 699, 707, 722, 723, 838, 849], "commun": [21, 142, 147, 167, 174, 181, 183, 234, 239, 349, 692, 693, 695, 696, 729, 827, 829, 853, 865, 867], "compact": [130, 296, 298, 302, 304, 307, 309, 318, 327, 328, 421, 422, 716, 720, 827], "compact_graph": 714, "compacted_csc_format": [318, 328, 829], "compacted_mat": 720, "compacted_negative_dst": [289, 299, 304, 827], "compacted_negative_src": [289, 299, 304, 827], "compacted_node_list": 327, "compacted_node_pair": [289, 299, 302, 304, 827], "compacted_pair": [716, 827], "compani": 382, "companion": [851, 853, 865], "compar": [120, 156, 244, 477, 565, 571, 717, 724, 730, 731, 822, 851, 852, 862], "comparison": [21, 823], "compat": [8, 21, 553, 554, 711, 721, 726, 729, 816, 822], "competit": [861, 868], "compil": [9, 22, 695, 707], "complet": [13, 52, 336, 456, 690, 695, 727, 731, 767, 811, 820, 822, 834, 837, 850, 852, 855, 858, 861, 862, 867], "complex": [9, 336, 427, 429, 571, 688, 709, 819, 836, 837, 852, 858, 862], "complic": [333, 723, 727], "compon": [11, 122, 229, 230, 291, 304, 336, 571, 573, 685, 692, 693, 698, 727, 729, 827, 829, 838, 845, 862], "compos": [3, 13, 22, 159, 174, 245, 288, 330, 334, 335, 336, 382, 414, 461, 478, 542, 571, 819, 826, 850, 852], "composit": [22, 304, 317], "compress": [583, 584, 615, 616, 822], "comput": [0, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 60, 70, 87, 122, 126, 131, 135, 136, 151, 192, 210, 211, 212, 214, 215, 216, 220, 222, 223, 224, 225, 239, 242, 244, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 302, 304, 309, 329, 336, 337, 339, 352, 378, 380, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 448, 449, 459, 461, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 552, 560, 565, 571, 572, 574, 575, 596, 599, 600, 601, 603, 618, 635, 645, 663, 667, 671, 679, 680, 681, 682, 690, 692, 693, 696, 698, 706, 707, 708, 709, 711, 713, 715, 716, 717, 718, 719, 721, 724, 727, 728, 730, 731, 781, 799, 801, 804, 811, 813, 814, 817, 818, 819, 820, 822, 823, 826, 827, 828, 834, 835, 836, 837, 838, 842, 845, 846, 849, 850, 851, 852, 855, 858, 863, 865, 867, 868], "computation": 862, "compute_auc": 837, "compute_cor": 842, "compute_loss": [712, 713, 718, 730, 756, 757, 759, 761, 770, 798, 799, 802, 804, 813, 837], "compute_mod": [428, 549], "conan": 855, "conatin": 304, "concat": [391, 416, 724, 764, 808, 836, 852, 858, 862], "concat_message_funct": [708, 752, 794], "concat_typ": 563, "concat_vid": 563, "concat_vtyp": 563, "concaten": [26, 122, 386, 411, 414, 430, 431, 432, 433, 434, 435, 436, 437, 438, 454, 458, 563, 643, 677, 704, 708, 713, 724, 727, 729, 748, 767, 789, 808, 811, 818, 829, 832, 837, 838, 845, 851, 852, 855, 862], "concentr": [852, 861], "concept": [144, 214, 215, 216, 698, 713, 718, 815, 818, 836, 852], "concis": [9, 707], "conclus": 852, "concret": 89, "concurr": 693, "conda": [389, 390, 391, 827, 829, 832, 833, 849, 852], "condit": [182, 244, 412, 415, 419, 420, 477, 704, 858], "conduct": [14, 161, 163, 302, 307, 501, 690, 695, 711, 729], "confid": 728, "config": [235, 236, 237, 558, 695, 696, 781, 816], "configur": [0, 4, 21, 217, 239, 693, 695, 696, 697, 781, 816, 842, 845, 846, 850, 858], "conflict": 167, "confus": 858, "conjunct": 867, "connect": [1, 4, 96, 120, 130, 133, 137, 144, 151, 152, 161, 162, 163, 171, 173, 174, 178, 180, 181, 182, 188, 220, 229, 230, 234, 333, 336, 339, 347, 348, 386, 389, 392, 400, 402, 403, 407, 408, 411, 413, 414, 423, 425, 543, 556, 560, 571, 576, 577, 637, 651, 662, 683, 693, 699, 727, 728, 729, 730, 819, 820, 826, 834, 835, 838, 845, 846, 849, 850, 851, 852, 858, 861, 862], "consecut": [6, 32, 95, 96, 125, 131, 207, 248, 286, 329, 567, 576, 577, 694, 696, 704, 835], "consequ": [715, 835], "consid": [53, 54, 197, 205, 214, 216, 296, 302, 307, 378, 382, 386, 560, 565, 572, 576, 577, 696, 708, 711, 715, 717, 728, 818, 820, 822, 827, 829, 835, 836, 837, 842, 851, 855, 858, 861], "consider": 858, "consist": [164, 166, 173, 177, 178, 179, 192, 240, 241, 291, 296, 304, 313, 338, 560, 567, 572, 637, 699, 713, 718, 722, 820, 827, 829, 834, 837, 839, 849, 851, 852, 862], "const": 22, "constant": [143, 168, 179, 189, 190, 244, 398, 407, 408, 477, 730, 850, 852, 862], "constexpr": 22, "constitu": [184, 855], "constrain": [195, 423, 425, 862], "constraint": [72, 239, 348, 349, 704, 858], "constrant": [239, 348, 349], "construct": [0, 4, 125, 130, 131, 141, 142, 143, 189, 190, 196, 210, 239, 248, 286, 304, 329, 336, 348, 349, 427, 428, 429, 549, 560, 571, 637, 688, 693, 696, 700, 702, 704, 708, 714, 722, 724, 730, 787, 817, 819, 820, 827, 829, 832, 833, 837, 845, 851, 862, 867], "construct_negative_graph": [730, 770, 813], "constructor": [4, 12, 460, 712], "consum": [290, 299, 708, 721], "consumpt": [708, 714, 715, 721, 823], "contain": [0, 2, 4, 6, 11, 21, 27, 28, 53, 54, 57, 58, 73, 114, 115, 116, 121, 130, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 160, 164, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 186, 191, 192, 194, 195, 207, 220, 235, 239, 240, 241, 246, 286, 291, 296, 302, 303, 304, 307, 308, 317, 329, 336, 341, 346, 348, 379, 384, 387, 392, 395, 396, 397, 400, 402, 403, 405, 406, 407, 410, 416, 427, 428, 429, 453, 460, 479, 543, 549, 565, 566, 567, 568, 571, 576, 577, 590, 636, 637, 644, 688, 689, 693, 695, 696, 697, 703, 709, 713, 718, 727, 730, 811, 813, 822, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 845, 851, 855, 856, 858, 865], "containertyp": 22, "content": [26, 159, 199, 201, 351, 687, 688, 696, 717, 734, 774, 835, 842], "context": [4, 21, 31, 42, 62, 63, 70, 89, 108, 125, 126, 131, 210, 245, 246, 248, 249, 286, 292, 296, 302, 307, 309, 329, 330, 334, 335, 352, 382, 478, 479, 542, 550, 551, 565, 566, 567, 568, 637, 692, 703, 709, 714, 818, 835, 868], "contextlib": [827, 829], "context\ub97c": 800, "contigu": [4, 318, 327, 328, 348, 543, 571, 695, 715, 845], "continu": [296, 387, 643, 688, 711, 725, 765, 809, 823], "contrari": [116, 820], "contrast": [240, 650, 656, 657, 658, 699, 715, 730, 770, 813, 834, 850, 852, 861], "contrib": 862, "contribut": [423, 425, 565, 722, 862], "control": [0, 4, 13, 93, 113, 308, 385, 424, 426, 550, 551, 562, 647, 648, 660, 661, 666, 688, 815, 827, 829, 832, 833, 842], "contruct": [731, 814], "conv": [13, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 423, 425, 462, 463, 464, 465, 466, 467, 468, 469, 720, 722, 724, 731, 762, 771, 806, 808, 814], "conv1": [404, 425, 426, 713, 718, 729, 731, 757, 758, 759, 761, 769, 771, 799, 801, 802, 804, 812, 814, 817, 829, 834, 836, 837, 838, 867], "conv2": [404, 425, 426, 713, 718, 729, 731, 757, 758, 759, 761, 769, 771, 799, 801, 802, 804, 812, 814, 817, 829, 834, 836, 837, 838, 867], "conveni": [9, 686, 727, 837, 867], "convent": [0, 5, 125, 133, 144, 707], "converg": [214, 292, 299, 302, 565, 721, 818], "convers": [22, 559, 605, 643, 695, 700, 703, 721, 822], "convert": [9, 22, 109, 110, 118, 119, 125, 126, 127, 138, 139, 140, 146, 148, 169, 247, 248, 249, 319, 320, 322, 587, 589, 592, 593, 605, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 672, 673, 688, 694, 695, 696, 700, 703, 716, 720, 721, 788, 822, 827, 835, 839, 845, 846, 850, 851], "convert_partit": 781, "convnet": 852, "convolut": [134, 149, 155, 185, 187, 193, 209, 380, 383, 386, 387, 388, 390, 393, 394, 395, 398, 404, 405, 407, 408, 409, 410, 412, 413, 415, 416, 417, 418, 419, 448, 461, 476, 560, 635, 656, 659, 660, 671, 711, 717, 725, 727, 729, 731, 767, 797, 803, 811, 812, 814, 818, 821, 824, 825, 836, 838, 851, 852, 853, 854, 858, 861, 862, 865], "convolutin": 851, "convolution\uc740": 809, "convolution\uc744": 814, "convolution\uc758": 814, "coo": [31, 32, 41, 56, 126, 131, 239, 249, 286, 329, 569, 591, 614, 822, 851], "coo_matrix": [126, 249, 837, 851], "coolwarm": 851, "cooper": 166, "coord": 453, "coord_feat": 398, "coord_feat_out": 398, "coordin": [12, 31, 126, 178, 179, 249, 309, 336, 398, 407, 428, 453, 549, 571, 581, 591, 614, 628, 822], "coordint": 407, "copi": [5, 7, 9, 34, 40, 56, 64, 71, 73, 89, 93, 94, 100, 108, 113, 116, 126, 130, 131, 234, 245, 246, 248, 249, 286, 289, 296, 304, 309, 311, 314, 315, 329, 330, 333, 334, 335, 339, 347, 411, 478, 479, 485, 486, 487, 488, 489, 490, 542, 558, 559, 565, 566, 567, 568, 576, 577, 606, 636, 639, 640, 641, 642, 644, 645, 652, 675, 676, 678, 695, 696, 702, 704, 707, 708, 714, 719, 746, 751, 787, 789, 792, 801, 819, 829, 835, 836, 837, 839, 851, 855, 858, 862, 868], "copy_": [5, 20, 675, 855, 861, 862], "copy_edata": [99, 111, 116, 130, 559, 565, 566, 567, 568, 645, 652], "copy_fil": [741, 782], "copy_lh": [502, 503], "copy_ndata": [99, 111, 116, 130, 333, 559, 565, 566, 567, 568, 636, 645], "copy_rh": [502, 503], "copy_to": [289, 712, 713, 715, 716, 718, 719, 720, 827, 829, 868], "copy_to_shared_memori": [296, 311], "copy_u": [5, 73, 91, 92, 93, 94, 100, 113, 421, 422, 424, 460, 678, 679, 680, 681, 682, 709, 717, 721, 724, 728, 753, 760, 764, 768, 795, 803, 805, 808, 836, 849, 851, 855], "copy_u_sum": 9, "copy_v": 9, "copyreducebackward": 399, "copyto": [827, 829], "cora": [25, 153, 154, 288, 690, 736, 776, 817, 818, 820, 823, 827, 837, 849], "cora_v2": [139, 690, 736, 776, 817, 818, 820], "corabinari": 851, "coraful": 25, "corafulldata": [690, 736, 776], "corafulldataset": 219, "coragraphdataset": [139, 378, 421, 425, 817, 818, 820, 827, 834, 836, 837, 849], "core": [8, 693, 698, 817, 822, 823, 842, 849, 852, 855, 867], "cornel": 155, "corner": 724, "corpu": 862, "correct": [21, 22, 731, 771, 814, 849], "correctli": [220, 696, 816, 851], "correspond": [7, 20, 21, 22, 27, 43, 46, 53, 54, 74, 90, 101, 102, 103, 107, 109, 113, 117, 118, 119, 122, 134, 139, 147, 148, 156, 165, 178, 179, 182, 192, 205, 210, 213, 214, 216, 221, 231, 238, 239, 296, 300, 301, 302, 304, 307, 309, 317, 318, 327, 328, 336, 339, 352, 380, 389, 390, 391, 400, 411, 420, 423, 427, 428, 429, 446, 449, 453, 454, 458, 549, 559, 561, 563, 572, 615, 616, 635, 643, 651, 653, 663, 664, 671, 688, 694, 696, 703, 704, 707, 716, 717, 718, 725, 728, 729, 731, 817, 818, 819, 820, 827, 829, 832, 833, 834, 836, 851, 852, 855, 862], "correspondenc": 383, "corrsepond": 4, "corrupt": [565, 566, 567, 568, 693, 779], "cosin": [336, 427, 429, 454, 571], "cost": [9, 14, 210, 643], "costli": [642, 715, 828], "could": [9, 21, 22, 32, 66, 216, 239, 240, 241, 289, 291, 292, 296, 299, 308, 317, 352, 384, 385, 430, 432, 436, 437, 502, 503, 560, 569, 576, 577, 642, 671, 688, 690, 694, 696, 708, 712, 716, 717, 729, 731, 822, 827, 829, 832, 833, 837, 842, 851, 855], "coulomb": 177, "count": [111, 302, 336, 427, 429, 571, 596, 599, 600, 601, 645, 673, 834, 842], "counterpart": [211, 212, 292, 299, 317, 693, 696, 845, 846], "coupl": 861, "cours": [155, 187, 193], "coustom": 784, "cout": 22, "covari": 407, "cover": [14, 21, 209, 692, 693, 694, 695, 696, 700, 711, 719, 815, 821, 828, 862], "cp": 382, "cpp": [819, 839, 851], "cpplint": 21, "cpu": [4, 9, 10, 14, 21, 31, 42, 62, 63, 89, 108, 112, 118, 119, 125, 126, 130, 131, 209, 210, 216, 217, 240, 241, 248, 249, 286, 291, 314, 329, 332, 336, 339, 347, 427, 428, 429, 549, 550, 551, 558, 562, 563, 565, 566, 567, 568, 571, 576, 577, 637, 644, 645, 696, 702, 713, 714, 715, 718, 719, 746, 758, 787, 800, 801, 815, 816, 818, 819, 822, 825, 827, 829, 832, 833, 834, 844, 845, 846, 849, 852, 855, 862, 867], "cpu_best_practis": [825, 842, 844], "cpu_count": 868, "cpu\uc5d0\uc11c\ub9cc": 800, "cpu\uc758": 801, "crawlscript": 749, "creat": [1, 3, 4, 5, 9, 12, 13, 21, 22, 27, 28, 41, 42, 44, 48, 51, 55, 56, 57, 58, 60, 61, 64, 65, 70, 71, 77, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 104, 107, 109, 116, 118, 119, 125, 126, 128, 129, 131, 138, 139, 148, 156, 157, 158, 191, 197, 205, 220, 234, 245, 247, 248, 249, 286, 292, 296, 299, 300, 323, 329, 330, 334, 335, 346, 351, 352, 379, 380, 412, 415, 430, 431, 432, 433, 435, 436, 437, 438, 457, 542, 553, 554, 559, 560, 564, 569, 573, 574, 575, 612, 614, 615, 616, 617, 628, 632, 645, 647, 648, 655, 674, 677, 685, 687, 688, 690, 692, 693, 694, 696, 697, 698, 701, 702, 703, 710, 713, 718, 720, 721, 725, 727, 734, 774, 776, 778, 788, 789, 805, 816, 817, 818, 819, 832, 833, 834, 837, 838, 845, 846, 849, 851, 852, 855, 858, 861, 862, 868], "create_block": [127, 637], "create_dataload": 868, "create_dev_conda_env": 816, "create_featur": 850, "create_formats_": [56, 89, 714], "createcacul": 22, "createcalcul": 22, "creation": [4, 210, 692, 724, 829, 835, 839], "credit": [834, 835, 836, 837, 838, 839], "crisi": 166, "criteria": [712, 845], "criterion": [192, 421, 425, 426, 862, 867], "critic": [9, 21, 22, 137, 171, 180, 182, 188, 421, 422, 424, 426, 700, 852], "cross": [73, 101, 102, 695, 696, 709, 730, 795, 813, 837, 850, 851, 862], "cross_entropi": [422, 423, 424, 713, 720, 721, 727, 729, 731, 767, 769, 771, 805, 811, 812, 814, 818, 820, 829, 834, 836, 838, 850, 851, 868], "cross_reduc": 73, "cross_sum": 73, "crossentropyloss": [421, 425, 426, 692, 721, 738, 778, 817, 845, 846, 867], "crowdsourc": 188, "crucial": [421, 422, 423, 425], "cs224w": 834, "csc": [32, 41, 56, 89, 131, 239, 286, 296, 309, 318, 323, 328, 329, 567, 569, 576, 615, 822], "csc_format": [318, 328], "csc_indptr": [296, 323, 720, 827, 829, 832, 833], "cscforamtbas": 310, "cscformatbas": [296, 298, 302, 307, 309, 310, 318, 328], "cscsamplinggraph": 310, "csr": [32, 41, 56, 118, 119, 126, 131, 239, 249, 286, 329, 567, 569, 576, 577, 616, 822], "csr_csc_g": 56, "csr_g": 56, "csr_matrix": [126, 249], "csrc": [839, 851], "csrmmbackward": 118, "csv": [148, 308, 685, 687, 696, 734, 774, 781, 831, 832, 833], "csvdataset": 688, "csvdatatset": 688, "csv\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u683c\u5f0f": 744, "csv\uac00": 785, "ctx": [31, 62, 63], "cu": 382, "cu118": [817, 818, 819, 820], "cuda": [4, 14, 89, 108, 110, 125, 126, 210, 247, 248, 249, 286, 289, 297, 314, 329, 336, 389, 390, 391, 427, 429, 571, 582, 605, 638, 702, 713, 718, 721, 746, 756, 757, 759, 761, 787, 798, 799, 800, 802, 804, 805, 816, 817, 818, 819, 820, 827, 829, 834, 862, 867, 868], "cuda_g": [702, 746, 787], "cuda\ub294": 800, "cudf": 247, "cugraph": [13, 110, 247, 389, 390, 391, 638], "cugraph_g": [110, 247, 638], "cugraph_graph": 247, "cugraphbaseconv": [389, 390, 391], "cumsum": 694, "cup": [151, 152], "cur": [694, 780], "current": [1, 4, 14, 20, 21, 27, 28, 56, 130, 138, 139, 144, 200, 220, 231, 235, 238, 239, 243, 292, 348, 349, 401, 404, 457, 558, 564, 605, 693, 712, 815, 816, 827, 829, 832, 833, 846, 855], "current_devic": [210, 297], "curv": [837, 852], "cuspars": [118, 119], "custom": [4, 194, 213, 380, 410, 558, 637, 685, 686, 694, 696, 699, 711, 713, 714, 716, 718, 719, 720, 722, 725, 731, 773, 802, 826, 829, 839], "customgraphconv": [717, 760, 803], "customheterographconv": [717, 760, 803], "customiz": 731, "customized_parser_dataset": 688, "customized_sample_neg": 716, "customized_sample_neighbor": 712, "customizednegativesampl": 716, "customizedneighborsampl": 712, "cut": [239, 349, 696, 781], "cuthil": 558, "cutoff": [178, 386], "cutom": 720, "cv": [178, 179], "cycl": [141, 172, 189, 245, 330, 478, 542, 858], "cycle_s": 189, "cython": [21, 816], "d": [4, 9, 14, 21, 120, 138, 139, 140, 146, 169, 170, 178, 179, 232, 242, 349, 383, 385, 388, 392, 399, 404, 408, 412, 414, 415, 417, 418, 420, 421, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 446, 447, 450, 451, 455, 456, 459, 501, 504, 553, 554, 602, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 628, 632, 647, 648, 670, 680, 681, 682, 688, 703, 729, 769, 812, 817, 818, 819, 822, 829, 837, 849, 851, 861, 867], "d1": [383, 501, 504, 822], "d2": [383, 501, 504, 822], "d_": [242, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 454, 851], "d_1": [706, 750, 791], "d_2": [706, 750, 791], "d_e": 820, "d_e_inv": 820, "d_ff": [434, 435], "d_hat": [720, 817, 818, 822], "d_hat_invsqrt": [817, 818], "d_head": [434, 435], "d_i": 9, "d_k": 862, "d_model": [434, 435], "d_t": [242, 422, 423, 424], "d_v": 820, "d_v_invsqrt": 820, "dada": [832, 833], "dadta": [832, 833], "dai": [21, 164, 181, 687], "damm": 855, "data": [0, 1, 3, 4, 5, 6, 7, 13, 14, 22, 26, 27, 28, 34, 35, 41, 43, 44, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 68, 70, 73, 74, 75, 77, 87, 88, 89, 91, 92, 93, 94, 100, 103, 104, 108, 112, 113, 114, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 231, 235, 237, 238, 239, 245, 246, 248, 249, 250, 286, 289, 290, 291, 292, 293, 298, 299, 300, 302, 304, 307, 308, 309, 313, 329, 330, 334, 335, 336, 341, 346, 348, 350, 378, 380, 382, 383, 390, 397, 415, 421, 422, 423, 424, 425, 426, 427, 429, 453, 455, 457, 459, 461, 478, 479, 501, 542, 543, 550, 551, 558, 559, 569, 571, 576, 577, 587, 588, 589, 592, 593, 605, 615, 616, 617, 637, 639, 640, 641, 643, 644, 645, 672, 681, 686, 689, 692, 695, 697, 698, 700, 701, 702, 703, 704, 705, 707, 709, 711, 712, 715, 717, 720, 721, 723, 726, 727, 730, 731, 732, 733, 734, 735, 736, 737, 739, 741, 748, 751, 753, 756, 757, 760, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 779, 780, 781, 782, 787, 789, 790, 792, 795, 798, 799, 803, 805, 810, 811, 812, 813, 814, 816, 817, 818, 819, 822, 826, 831, 834, 835, 836, 837, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862], "data0": 688, "data1": 688, "data_dict": [131, 329], "data_it": 862, "data_load": 292, "data_path": 148, "data_pip": 299, "data_root_dir": [239, 695, 696, 740, 781], "data_type_dict": [690, 736, 776], "databas": [164, 839], "dataflow": 851, "datafram": [148, 247, 688, 832, 833], "datail": 179, "dataload": [10, 11, 13, 183, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 292, 302, 378, 382, 421, 425, 426, 457, 689, 690, 692, 693, 712, 713, 714, 715, 716, 718, 719, 720, 729, 735, 736, 738, 739, 756, 757, 758, 759, 761, 769, 775, 776, 778, 779, 798, 799, 800, 801, 802, 804, 812, 819, 827, 829, 838, 842, 845, 846, 851, 855, 867, 868], "dataloader\u4e2d\u8fd0\u884c": 739, "dataloader\u5728\u6bcf\u4e2a\u8bad\u7ec3\u5468\u671f\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u91c7\u6837\u5de5\u4f5c\u8fdb\u7a0b": 739, "dataloader\u76f8\u540c\u7684\u63a5\u53e3": 739, "dataloader\ub294": 779, "dataloader\ub97c": [799, 804], "dataloader\uc5d0\uc11c": 779, "dataloader\uc640": 779, "datapars": 688, "datapip": [7, 289, 290, 292, 294, 298, 299, 302, 305, 306, 307, 312, 316, 712, 713, 715, 716, 718, 719, 720, 826, 827, 829, 868], "datapoint": [196, 207], "dataset": [4, 13, 14, 21, 23, 25, 120, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 210, 213, 244, 288, 290, 303, 308, 378, 421, 423, 425, 426, 477, 685, 686, 687, 691, 692, 693, 718, 720, 721, 726, 729, 731, 735, 736, 738, 739, 766, 769, 773, 775, 776, 778, 779, 810, 812, 817, 818, 819, 820, 823, 825, 826, 831, 832, 833, 836, 837, 838, 840, 841, 849, 852, 867, 868], "dataset_it": [827, 829], "dataset_nam": [291, 303, 308, 686, 688, 733, 773, 832, 833], "dataset\ub97c": 772, "datatyp": [721, 822], "dateset": 823, "dateutil": [827, 829, 832, 833], "datset": [25, 172], "dcmake_configuration_typ": 816, "dcmake_cxx_flag": 816, "dd": [25, 168, 186, 862], "ddgl_export": 816, "ddmlc_force_shared_crt": 816, "ddp": [292, 867, 868], "ddp_seed": [210, 213], "de": 862, "deal": [122, 717, 729, 859, 865], "dealloc": 842, "debian": 816, "debug": [4, 23], "dec": 862, "dec_graph": [727, 767, 811], "decai": 404, "decid": [9, 22, 131, 329, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 419, 703, 827, 829, 858, 862], "declar": [693, 827], "decod": [434, 862], "decompos": [383, 415, 855, 862], "decomposit": [383, 390, 415, 461, 718, 850], "decomposition\uc740": 804, "decor": [292, 299], "decreas": [421, 422], "dedupl": [302, 307, 827, 829], "deep": [4, 23, 209, 219, 404, 407, 423, 425, 436, 656, 724, 729, 731, 822, 823, 824, 835, 855, 858, 859, 865], "deepchem": [690, 736, 776], "deepcopi": 858, "deepset": 450, "deepset_encod": 450, "deepwalk": 834, "def": [4, 5, 10, 20, 22, 53, 54, 70, 73, 100, 218, 250, 251, 262, 263, 264, 265, 298, 299, 307, 312, 380, 411, 413, 421, 422, 423, 424, 425, 426, 457, 460, 674, 675, 676, 677, 678, 679, 680, 681, 682, 686, 687, 688, 689, 690, 691, 693, 694, 707, 708, 712, 713, 715, 716, 717, 718, 720, 721, 723, 724, 725, 727, 729, 730, 731, 733, 734, 735, 736, 737, 739, 751, 752, 756, 757, 758, 759, 760, 761, 763, 764, 765, 767, 769, 770, 771, 773, 774, 775, 776, 777, 779, 792, 794, 798, 799, 801, 802, 803, 804, 805, 807, 808, 809, 811, 812, 813, 814, 817, 818, 819, 820, 822, 827, 829, 834, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "defalt": 446, "default": [4, 6, 9, 10, 14, 23, 27, 28, 31, 32, 34, 35, 41, 48, 51, 53, 54, 61, 62, 63, 79, 81, 82, 88, 89, 116, 117, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 205, 207, 208, 209, 210, 213, 214, 216, 219, 226, 231, 234, 235, 238, 239, 244, 245, 246, 248, 249, 286, 288, 289, 290, 292, 299, 308, 309, 323, 329, 330, 333, 334, 335, 336, 337, 339, 341, 348, 349, 352, 378, 381, 382, 383, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 446, 447, 448, 449, 450, 451, 452, 453, 457, 459, 477, 478, 479, 542, 544, 546, 549, 550, 551, 552, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 571, 572, 635, 636, 637, 642, 643, 644, 645, 653, 658, 663, 667, 669, 670, 671, 686, 688, 693, 694, 695, 696, 697, 703, 704, 707, 773, 788, 789, 816, 819, 822, 826, 827, 829, 831, 832, 833, 842, 845, 846, 858, 862, 868], "default_tensor": 829, "defin": [4, 5, 7, 9, 13, 27, 28, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 120, 146, 156, 169, 210, 220, 242, 243, 244, 250, 251, 262, 263, 264, 265, 313, 339, 340, 382, 386, 392, 404, 405, 410, 421, 422, 423, 424, 425, 426, 434, 455, 456, 476, 477, 674, 675, 676, 677, 678, 679, 680, 681, 682, 685, 686, 688, 692, 693, 701, 704, 706, 707, 721, 727, 729, 730, 731, 751, 771, 778, 789, 792, 805, 811, 813, 814, 817, 818, 820, 822, 831, 849, 851, 852, 862, 867], "definit": [66, 72, 239, 386, 623, 625, 626, 627, 692, 698, 713, 716, 720, 731, 850, 851, 855], "deform": 861, "defus": [214, 296, 302, 565], "deg": [724, 764, 808], "deg_g": 851, "deg_lg": 851, "deg_proj": 851, "degg_batch": 183, "deglg_batch": 183, "degrad": 214, "degre": [4, 13, 60, 87, 120, 130, 165, 181, 183, 217, 244, 384, 389, 390, 391, 392, 394, 396, 399, 400, 402, 403, 404, 407, 410, 414, 417, 418, 424, 426, 447, 477, 480, 660, 661, 666, 670, 695, 696, 716, 720, 724, 817, 818, 820, 822, 835, 836, 849, 851, 852, 855], "degree_as_nlabel": 165, "degree_embed": 447, "degree_encod": 447, "degree\uac00": 808, "degree\ub4e4": 781, "degree\uc758": 802, "del": 858, "delet": [21, 180, 302, 307, 555, 556], "delimit": 696, "deliv": 858, "delta": [178, 179, 392, 414], "demo": 819, "demonstr": [42, 455, 456, 645, 688, 720, 726, 727, 821, 832, 833, 839, 845, 853, 855, 862, 865], "denomin": [4, 10, 401], "denot": [120, 242, 386, 400, 407, 418, 459, 669, 817, 818, 849, 850, 851, 852, 855], "dens": [9, 13, 226, 296, 332, 393, 394, 395, 446, 449, 501, 502, 504, 561, 606, 610, 611, 618, 621, 629, 693, 713, 722, 762, 779, 799, 806, 818, 819, 822], "densiti": [183, 197, 561, 700, 744, 785, 851, 858], "departur": 855, "depend": [9, 21, 31, 89, 126, 131, 182, 210, 211, 212, 214, 215, 216, 220, 244, 248, 249, 286, 302, 329, 389, 390, 391, 457, 477, 553, 554, 565, 688, 696, 699, 709, 711, 713, 714, 715, 717, 718, 722, 797, 828, 842, 852, 855, 862], "dependency\ub4e4\uc744": 804, "dependency\uc5d0\uc11c": 799, "deploi": [853, 865], "deprec": [116, 144, 168, 177, 178, 179, 186, 234, 636, 646, 851], "depth": [1, 229, 230, 562], "deriv": [392, 727, 818], "desc": 819, "descend": [647, 648], "descent": [14, 336, 427, 429, 571, 711, 797, 867], "describ": [5, 21, 43, 46, 47, 74, 75, 103, 167, 239, 302, 315, 399, 415, 461, 637, 642, 650, 651, 656, 657, 658, 659, 696, 707, 711, 724, 726, 727, 730, 818, 820, 828, 829, 831, 832, 833, 834, 837, 839, 849, 851, 852, 858, 861], "descript": [61, 88, 131, 137, 160, 178, 179, 180, 286, 315, 329, 850, 862], "deserv": 852, "design": [4, 150, 154, 176, 243, 288, 304, 386, 567, 693, 694, 696, 709, 715, 719, 729, 822, 826, 830, 851, 862], "desir": [20, 22, 120, 226, 561, 660, 661, 666, 695], "desktop": 842, "despit": 696, "dest": 858, "dest_list": 858, "destin": [4, 5, 9, 26, 27, 30, 31, 32, 34, 39, 43, 44, 45, 47, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 73, 79, 80, 82, 87, 88, 90, 91, 92, 93, 94, 100, 104, 105, 107, 109, 113, 114, 117, 118, 119, 123, 125, 126, 127, 131, 200, 214, 216, 220, 226, 227, 232, 242, 246, 247, 249, 286, 292, 296, 299, 304, 311, 316, 317, 318, 328, 329, 347, 352, 380, 387, 389, 390, 391, 393, 394, 395, 396, 397, 400, 402, 403, 413, 416, 454, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 494, 496, 498, 500, 502, 503, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 550, 553, 555, 557, 558, 561, 567, 574, 576, 577, 637, 652, 653, 659, 668, 676, 688, 695, 696, 704, 707, 709, 716, 723, 724, 725, 789, 795, 798, 828, 832, 835, 836, 837, 839, 851, 855, 862, 868], "destination_typ": [704, 748, 789], "destroi": [4, 693], "destroy_process_group": 867, "dests_prob": 858, "dests_scor": 858, "detach": [378, 819, 827, 829, 836, 845, 851], "detail": [4, 9, 21, 22, 91, 146, 169, 209, 214, 216, 217, 220, 222, 223, 224, 225, 230, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 566, 623, 625, 626, 627, 684, 688, 690, 692, 693, 694, 696, 700, 707, 710, 712, 713, 714, 716, 718, 719, 720, 724, 731, 815, 816, 823, 827, 829, 832, 833, 836, 839, 845, 846, 852, 858, 862, 867, 868], "detect": [145, 161, 163, 181, 183, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 853, 865], "determin": [4, 26, 240, 241, 392, 414, 453, 561, 565, 566, 567, 568, 643, 694, 696, 704, 721, 723, 724, 861], "determinist": [131, 198, 302, 329, 380, 558], "dev": [183, 184, 207, 721, 816, 817, 818, 819, 820, 822, 827, 829, 832, 833, 849, 852, 855], "dev_data": 184, "devel": 816, "develop": [22, 27, 28, 30, 31, 41, 44, 45, 56, 82, 95, 96, 101, 102, 104, 105, 109, 114, 115, 352, 555, 556, 642, 643, 693, 711, 713, 718, 728, 816, 835, 842, 845], "deviat": [392, 414, 453], "devic": [4, 7, 13, 31, 34, 35, 43, 46, 48, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 74, 87, 88, 89, 93, 94, 100, 103, 108, 125, 126, 130, 131, 208, 209, 210, 211, 212, 214, 216, 217, 245, 246, 247, 248, 249, 286, 289, 296, 297, 304, 309, 311, 314, 329, 330, 334, 335, 336, 389, 390, 391, 427, 428, 429, 457, 478, 479, 542, 549, 550, 551, 558, 564, 565, 566, 567, 568, 571, 585, 605, 617, 692, 702, 703, 712, 713, 714, 715, 716, 718, 719, 720, 721, 738, 746, 756, 757, 758, 759, 761, 778, 787, 798, 799, 800, 801, 802, 804, 805, 818, 819, 822, 827, 829, 832, 833, 836, 851, 855, 862, 867, 868], "device_count": [867, 868], "device_id": 867, "device_typ": 721, "df": [229, 230, 247, 545, 688, 832, 833], "dfrac": [446, 819], "dfs_labeled_edg": 230, "dfs_labeled_edges_gener": 545, "dgl": [13, 14, 20, 23, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 699, 701, 702, 703, 706, 707, 708, 709, 711, 712, 713, 716, 717, 718, 721, 722, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 751, 752, 753, 756, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 781, 786, 787, 788, 790, 792, 793, 794, 795, 798, 799, 801, 802, 803, 804, 805, 806, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 823, 825, 826, 828, 836, 837, 839, 841, 842, 845, 846, 853, 856, 857, 858, 861, 863, 867, 868], "dgl_declare_object_type_info": 22, "dgl_download_dir": 23, "dgl_g": 818, "dgl_home": 21, "dgl_library_path": 21, "dgl_log_debug": 23, "dgl_mxnet_set_np_shap": 816, "dgl_register_glob": 22, "dgl_repo": 23, "dgl_warn": [855, 858, 861], "dglarg": 22, "dglbackend": [21, 23, 816, 817, 818, 819, 820, 822, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 867, 868], "dglblock": [127, 131, 389, 390, 391, 637], "dglbuiltindataset": [134, 141, 142, 143, 145, 147, 159, 160, 162, 164, 165, 166, 168, 174, 175, 181, 184, 186, 189, 190, 192, 194, 195, 687, 690, 734, 736, 774, 776], "dgldataset": [138, 139, 140, 148, 167, 172, 173, 177, 178, 179, 183, 197, 198, 303, 685, 688, 690, 726, 732, 733, 736, 766, 772, 776, 810], "dgldataset\u7c7b": [732, 749], "dgldefaultdir": 23, "dglerror": [27, 28, 95, 96, 384, 396, 399, 400, 401, 402, 403, 404, 407, 410, 417, 637, 702, 704, 746, 748, 787, 789], "dglfunccal": 22, "dglgraph": [0, 4, 5, 6, 9, 13, 22, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 209, 210, 222, 223, 224, 225, 229, 230, 233, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 286, 292, 299, 322, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 352, 378, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 459, 460, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 683, 688, 689, 690, 691, 693, 694, 696, 698, 700, 701, 703, 704, 724, 729, 735, 736, 739, 742, 744, 745, 746, 747, 748, 756, 757, 759, 764, 769, 775, 776, 777, 779, 780, 781, 783, 785, 786, 788, 789, 798, 799, 802, 808, 812, 835, 837, 838, 849, 850, 851, 852, 855, 858, 861], "dglgraphproppreddataset": [138, 689, 735, 775, 819], "dglgraph\ub85c": 785, "dgllinkproppreddataset": [689, 735, 775, 846], "dglnn": [380, 713, 715, 716, 718, 729, 731, 757, 759, 761, 769, 771, 799, 802, 804, 812, 814, 819, 827, 845, 846, 868], "dglnodeproppreddataset": [689, 735, 775, 845], "dglretvalu": 22, "dglroutinglay": 861, "dglsp": [12, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 720, 817, 818, 819, 820, 822], "dglwarn": [855, 858, 861], "dgl\u4e0d\u63d0\u4f9b\u5bf9\u6765\u81ea\u591a\u4e2a\u8bad\u7ec3\u5668\u7684\u5e76\u53d1\u5199\u5165\u7684\u4fdd\u62a4": 739, "dgl\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 760, "dgl\u4e2d\u7684": 759, "dgl\u4e3a\u5206\u5e03\u5f0f\u5f20\u91cf\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u5355\u673a\u666e\u901a\u5f20\u91cf\u7684\u63a5\u53e3": 739, "dgl\u4e5f\u4f1a\u6839\u636e\u8fb9\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f": 747, "dgl\u4e5f\u652f\u6301\u4ece\u5176\u4ed6\u7684\u6570\u636e\u6e90\u6765\u521b\u5efa\u56fe\u5bf9\u8c61": 747, "dgl\u4e5f\u652f\u6301\u76f4\u63a5\u4eces3": 744, "dgl\u4ec5\u5141\u8bb8\u521b\u5efa\u5355\u4e2adistgraph\u5bf9\u8c61": 739, "dgl\u4ec5\u652f\u6301\u5bc6\u96c6\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 739, "dgl\u4ee5\u540e\u5c06\u4e3a\u7a00\u758f\u5d4c\u5165\u6dfb\u52a0\u66f4\u591a\u7684\u4f18\u5316\u5668": 739, "dgl\u4f18\u5316\u4e86\u6d88\u606f\u4f20\u9012\u7684\u5185\u5b58\u6d88\u8017\u548c\u8ba1\u7b97\u901f\u5ea6": 752, "dgl\u4f1a\u5212\u5206\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 739, "dgl\u4f1a\u5728\u5185\u90e8\u5c061\u6761\u65e0\u5411\u8fb9\u8f6c\u6362\u4e3a2\u6761\u6709\u5411\u8fb9": 744, "dgl\u4f1a\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 738, "dgl\u4f1a\u5c06\u5b83\u4eec\u5206\u7247\u5e76\u5b58\u50a8\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u673a\u4e0a": 739, "dgl\u4f1a\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u6bcf\u6761\u8fb9": 745, "dgl\u4f1a\u68c0\u67e5\u8f93\u5165\u56fe\u4e2d\u662f\u5426\u6709\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9": 764, "dgl\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u7684\u6574\u578b\u5f20\u91cf": 747, "dgl\u4f7f\u7528\u4e00\u4e2a\u5305\u542b2\u4e2a\u8282\u70b9\u5f20\u91cf\u7684\u5143\u7ec4": 747, "dgl\u4f7f\u7528\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u6765\u8868\u793a\u4e00\u4e2a\u8282\u70b9": 747, "dgl\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684meti": 740, "dgl\u4fdd\u8bc1\u8fb9\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u4e0e\u751f\u6210\u7684\u5757\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u76f8\u540c": 757, "dgl\u5047\u5b9a\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7684\u9700\u8981\u5408\u5e76\u7684\u7279\u5f81\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u6570\u636e\u7c7b\u578b": 748, "dgl\u5185\u7f6e\u4e86\u5e38\u89c1\u7684\u56fe\u8bfb\u51fa\u51fd\u6570": 769, "dgl\u5185\u7f6e\u7684nn\u6a21\u5757\u5982\u679c\u5728forward\u51fd\u6570\u4e2d\u652f\u6301\u4e00\u4e2a\u53ef\u9009\u7684": 768, "dgl\u5185\u7f6e\u7684\u6d88\u606f": 764, "dgl\u53ef\u4ee5\u5904\u7406\u6700\u591a": 747, "dgl\u53ef\u4ee5\u95f4\u63a5\u5730\u4ece\u8fd9\u4e9b\u6765\u6e90\u521b\u5efa\u56fe": 744, "dgl\u540c\u6837\u652f\u6301\u5b83\u5728mxnet\u548ctensorflow\u540e\u7aef\u91cc\u7684\u5b9e\u73b0": [760, 769], "dgl\u548c\u8fd9\u4e9b\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u5176\u72ec\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c": 762, "dgl\u5728": 732, "dgl\u5728\u5185\u90e8\u5c06scipy\u77e9\u9635\u548cnetworkx\u56fe\u8f6c\u6362\u4e3a\u5f20\u91cf\u6765\u521b\u5efa\u56fe": 744, "dgl\u5728\u547d\u540d\u7a7a\u95f4": 751, "dgl\u5728\u96c6\u7fa4\u6240\u6709\u673a\u5668\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u8bad\u7ec3\u811a\u672c": 738, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6574\u56fe\u5206\u7c7b\u7684\u6837\u4f8b": 769, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5206\u5e03\u5f0f\u7ec4\u4ef6\u4ee5\u652f\u6301\u5206\u5e03\u5f0f\u8bad\u7ec3": 738, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7ba1\u9053": 755, "dgl\u5b9e\u73b0\u4e86\u591a\u4e2a\u53ef\u7528\u4e8e\u751f\u6210\u8fb9\u754c\u7684\u51fd\u6570": 756, "dgl\u5bf9\u8fb9\u754c\u5b50\u56fe\u505a\u4e86\u4e00\u4e2a\u8f6c\u6362": 756, "dgl\u5c06\u56fe\u5212\u5206\u7ed3\u679c\u5b58\u50a8\u5728\u8f93\u51fa\u76ee\u5f55\u4e2d\u7684\u591a\u4e2a\u6587\u4ef6\u4e2d": 740, "dgl\u5c06\u9700\u8981\u8ba1\u7b97gnn\u8f93\u51fa\u7684\u8282\u70b9\u79f0\u4e3a": 756, "dgl\u5df2\u7ecf\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528\u7684": 762, "dgl\u5efa\u8bae": 751, "dgl\u5efa\u8bae\u4f7f\u7528\u8282\u70b9\u63a9\u7801\u6765\u6307\u5b9a\u6570\u636e\u96c6\u7684\u5212\u5206": 736, "dgl\u5efa\u8bae\u7528\u6237\u5b9e\u73b0\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e\u7684\u51fd\u6570": 737, "dgl\u5efa\u8bae\u7528\u6237\u5c3d\u91cf\u51cf\u5c11\u8fb9\u7684\u7279\u5f81\u7ef4\u6570": 752, "dgl\u5efa\u8bae\u8ba9": 736, "dgl\u5efa\u8bae\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ece\u70b9\u5230\u8fb9\u7684\u5185\u5b58\u62f7\u8d1d": 752, "dgl\u63a8\u8350\u4f7f\u7528tensor\u4f5c\u4e3adgl": 747, "dgl\u63a8\u8350\u7528\u6237\u5c06\u56fe\u6570\u636e\u5904\u7406\u4e3a": 732, "dgl\u63a8\u8350\u91cd\u65b0\u6392\u5217\u56fe\u7684\u8282\u70b9": 736, "dgl\u63d0\u4f9b": 739, "dgl\u63d0\u4f9b\u4e86": [739, 748, 756, 765], "dgl\u63d0\u4f9b\u4e864\u4e2a\u51fd\u6570\u8ba9\u4efb\u52a1\u53d8\u5f97\u7b80\u5355": 737, "dgl\u63d0\u4f9b\u4e86api\u4ee5\u4ece\u78c1\u76d8\u4e2d\u52a0\u8f7d\u6216\u5411\u78c1\u76d8\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u56fe": 744, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2aapi\u4ee5\u6267\u884c\u8fd9\u4e24\u4e2a\u6b65\u9aa4": 740, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u529f\u80fd\u7684\u51fd\u6570": 768, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684rgcn\u7684\u7aef\u5230\u7aef\u7684\u4f8b\u5b50": 771, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a00\u758f\u7684adagrad\u4f18\u5316\u5668": 739, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u793a\u4f8b": 761, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u56fe\u5377\u79ef\u6a21\u5757": 771, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177": 738, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784": 739, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784\u548c\u591a\u79cdapi": 739, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7ea7\u522b\u7684api": 739, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u811a\u672c\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 741, "dgl\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b0\u7c7b\u578b\u7684\u8bed\u6cd5": 748, "dgl\u63d0\u4f9b\u4e86\u51e0\u4e2a\u90bb\u5c45\u91c7\u6837\u7c7b": 761, "dgl\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u7684api": 738, "dgl\u63d0\u4f9b\u4e86\u540d\u4e3a": 736, "dgl\u63d0\u4f9b\u4e86\u5728\u540c\u6784\u56fe\u4e0a\u505a\u94fe\u8def\u9884\u6d4b\u7684\u4e00\u4e2a\u793a\u4f8b": 759, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u91c7\u6837\u7684\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668": 739, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u542f\u52a8\u96c6\u7fa4\u4e2d\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684tool": 741, "dgl\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684": 761, "dgl\u63d0\u4f9b\u4e86\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5": 747, "dgl\u63d0\u4f9b\u7684\u4e00\u4e9b\u91c7\u6837\u65b9\u6cd5\u4e5f\u652f\u6301\u5f02\u6784\u56fe": 761, "dgl\u652f\u6301": 751, "dgl\u652f\u6301\u4f7f\u7528": 747, "dgl\u652f\u6301\u5185\u7f6e\u7684\u805a\u5408\u51fd\u6570": 751, "dgl\u73b0\u5728\u652f\u6301": 751, "dgl\u7684gin\u6837\u4f8b": 769, "dgl\u7684graphsage\u6837\u4f8b": 771, "dgl\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u5177\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u4ea4\u4e92\u8fdb\u7a0b": 738, "dgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u5c0f\u6279\u6b21\u751f\u6210\u4e09\u9879": 759, "dgl\u786e\u4fdd\u5757\u7684\u8f93\u51fa\u8282\u70b9\u5c06\u59cb\u7ec8\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 756, "dgl\u793e\u533a\u7684\u4e00\u7fa4\u70ed\u5fc3\u8d21\u732e\u8005\u628adgl\u7528\u6237\u6307\u5357\u8bd1\u6210\u4e86\u4e2d\u6587": 749, "dgl\u79f0\u4e4b\u4e3a": 747, "dgl\u79f0\u5b83\u4eec\u4e3a\u7ea2\u8272\u8282\u70b98\u5728\u7b2c\u4e8c\u4e2agnn\u5c42\u7684": 756, "dgl\u79f0\u5b83\u4eec\u4e3a\u89c4\u8303\u8fb9\u7c7b\u578b": 748, "dgl\u79f0\u8fd9\u79cd\u4ec5\u5305\u542b\u5fc5\u8981\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u4e8c\u5206\u56fe\u4e3a\u4e00\u4e2a": 756, "dgl\u8981\u6c42\u9884\u5904\u7406\u56fe\u6570\u636e\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 740, "dgl\u901a\u8fc7\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784": 742, "dgl\u91c7\u7528\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5": 738, "dgl\u91cc\u5bf9\u56fe\u8fdb\u884c\u53d8\u6362\u7684\u51fd\u6570\u4f1a\u53bb\u6389\u56fe\u4e0a\u7684\u6279\u6b21\u4fe1\u606f": 769, "dgl\u9ed8\u8ba4\u4f7f\u7528int64": 747, "dgl\ub294": [788, 804, 812], "dgl\uc5d0\uc11c": [780, 781, 784, 788, 789, 792, 799, 804, 808, 810], "dgl\uc5d0\uc11c\ub294": [776, 777, 788, 794, 798, 799, 802, 804], "dgl\uc740": [772, 773, 776, 777, 778, 779, 780, 781, 782, 783, 785, 788, 789, 792, 793, 794, 797, 798, 803, 805, 806, 811, 812, 814], "dgl\uc758": [776, 778, 779, 781, 789, 791, 792, 794, 802, 803, 804, 808], "dgl\uc774": [781, 798, 799, 804], "dgmg": [859, 865], "dgmg_cycl": 858, "dgmg_msg": 858, "dgmg_reduc": 858, "dgmgskeleton": 858, "dgn": 392, "dh": 819, "diag": [609, 613, 618, 619, 620, 631, 720, 817, 818, 820, 822], "diagmatrix": [592, 593], "diagon": [383, 394, 404, 415, 418, 612, 613, 617, 618, 619, 817, 818, 820, 851], "diagram": 696, "dichotomi": [120, 244, 477], "dict": [4, 20, 27, 28, 43, 46, 47, 56, 73, 74, 75, 103, 114, 115, 121, 130, 131, 148, 203, 204, 205, 206, 208, 210, 213, 214, 216, 219, 220, 222, 223, 224, 225, 233, 235, 236, 237, 239, 240, 241, 245, 287, 293, 294, 295, 296, 298, 301, 304, 307, 308, 309, 310, 311, 312, 313, 314, 317, 318, 321, 323, 327, 328, 329, 330, 334, 335, 341, 348, 352, 379, 380, 381, 382, 421, 422, 423, 424, 425, 426, 478, 542, 543, 558, 565, 566, 568, 569, 637, 645, 651, 683, 691, 696, 761, 777, 798, 804, 829, 837, 855, 858, 861, 862], "dict_kei": 380, "dictionari": [22, 43, 46, 47, 74, 75, 101, 102, 103, 121, 122, 131, 148, 210, 220, 235, 239, 241, 245, 294, 296, 301, 304, 309, 311, 317, 318, 327, 328, 329, 330, 334, 335, 341, 379, 422, 424, 478, 542, 565, 566, 568, 645, 683, 688, 696, 704, 709, 712, 713, 718, 725, 727, 731, 781, 795, 809, 834, 837, 839], "dictionary\uac00": 781, "dictionary\ub294": 781, "dictionary\ub4e4\uc744": 804, "dictionary\ub97c": [781, 802], "dictionary\uc5d0": 781, "dictionary\uc640": 802, "dict\u5bf9\u8c61": 737, "differ": [4, 5, 11, 51, 61, 73, 88, 91, 92, 113, 116, 120, 126, 131, 135, 136, 138, 139, 140, 151, 152, 153, 158, 159, 172, 178, 179, 186, 192, 214, 216, 217, 219, 220, 229, 230, 234, 239, 242, 244, 248, 249, 286, 300, 301, 304, 318, 329, 334, 335, 348, 349, 379, 380, 382, 397, 414, 418, 423, 424, 425, 426, 429, 450, 460, 477, 565, 567, 571, 636, 642, 688, 690, 693, 696, 698, 699, 701, 704, 709, 711, 713, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 729, 730, 731, 786, 789, 819, 820, 822, 827, 832, 833, 835, 838, 842, 845, 850, 851, 852, 853, 855, 856, 858, 861, 862, 865, 867, 868], "differenti": [118, 119, 713, 852], "diffus": [660, 661, 666, 670, 821], "diffuse_op": 670, "digit": [199, 200], "digraph": [125, 248, 644, 700, 744, 785], "dii": 21, "dim": [73, 262, 263, 264, 265, 336, 380, 407, 450, 451, 571, 596, 599, 600, 601, 602, 603, 622, 647, 648, 677, 707, 708, 731, 751, 752, 771, 792, 794, 814, 817, 818, 819, 822, 827, 829, 836, 849, 850, 852, 858, 861], "dim_ff": 862, "dim_model": 862, "dim_nfeat": 838, "dimens": [4, 5, 9, 10, 14, 20, 139, 150, 154, 176, 300, 314, 336, 352, 380, 388, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 419, 420, 421, 427, 429, 436, 447, 451, 457, 505, 549, 571, 596, 599, 600, 601, 602, 603, 610, 618, 622, 624, 647, 648, 694, 701, 707, 708, 709, 723, 729, 817, 819, 822, 834, 836, 838, 849, 850, 852, 862, 867], "dimension": [9, 159, 300, 336, 399, 401, 405, 407, 427, 429, 562, 563, 564, 571, 701, 708, 818, 835, 838], "dipol": [178, 179], "dir": [392, 696, 781], "dir1": 392, "direct": [6, 123, 124, 126, 134, 149, 155, 159, 178, 185, 187, 193, 229, 230, 247, 248, 288, 336, 338, 392, 447, 545, 547, 548, 550, 572, 636, 649, 672, 688, 699, 700, 703, 784, 828, 835, 836, 851, 858, 861], "direction": 699, "directli": [9, 21, 64, 71, 89, 108, 109, 112, 117, 131, 148, 210, 245, 302, 304, 307, 330, 334, 335, 336, 341, 390, 427, 429, 478, 542, 569, 571, 652, 653, 688, 700, 820, 822, 836, 837, 839, 850], "directoractor": 134, "directori": [21, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 209, 288, 308, 686, 687, 691, 695, 697, 773, 774, 777, 816, 831, 832, 833, 845, 862], "dirnam": 202, "disabl": [4, 9, 299, 707, 816, 842], "disable_shared_mem": 4, "disallow": 564, "disambigu": 704, "disappear": [4, 693], "disast": 851, "discard": [27, 28, 114, 115, 116, 117, 130, 245, 246, 330, 333, 339, 347, 478, 479, 542, 556, 559, 636, 645, 646, 729, 819], "discov": [862, 863, 865], "discoveri": 858, "discret": [661, 852], "disct": 637, "discuss": [21, 637, 726, 731, 851], "diseas": [565, 566, 704, 748, 789], "disease\u6cbb\u7597\u8fb9": 748, "disease\u8282\u70b9": 748, "disjoint": 122, "disk": [4, 138, 139, 140, 156, 203, 206, 291, 297, 308, 314, 315, 686, 687, 691, 696, 773, 827, 830, 837, 839], "dislik": [726, 727, 766, 767, 810, 811], "dislike_dst": [726, 766, 810], "dislike_src": [726, 766, 810], "dispatch": [9, 695], "dispatch_data": 696, "displai": [56, 818, 855], "dist": [336, 427, 428, 429, 451, 452, 549, 571, 572, 819, 825, 848, 867, 868], "dist_anim": 861, "dist_graph": [693, 739, 779], "dist_list": 861, "dist_matrix": 861, "distanc": [6, 178, 179, 242, 336, 386, 427, 428, 429, 451, 452, 549, 571, 572, 858], "distdataload": [4, 211, 212, 692, 693, 738, 739, 778, 779], "distedgedataload": [693, 739, 846], "distembed": [4, 692, 738, 739, 778], "distgraph": [4, 211, 212, 232, 233, 239, 240, 241, 692, 694, 696, 738, 739, 740, 778, 780, 781, 845, 846], "distgraphserv": 4, "distgraph\u5c06\u56fe\u6570\u636e\u52a0\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u4e2d": 739, "distgraph\uc758": 779, "distinct": [142, 688, 853, 865], "distinguish": [68, 156, 642, 688, 704, 822], "distmult": 850, "distnodedataload": [693, 739, 779, 845, 846], "distplot": 861, "distribut": [13, 120, 142, 174, 197, 205, 210, 211, 212, 213, 226, 227, 244, 292, 296, 316, 350, 351, 379, 407, 423, 425, 457, 477, 567, 695, 705, 716, 727, 730, 738, 739, 740, 778, 780, 781, 802, 825, 848, 852, 858, 861, 862, 868], "distributeddataparallel": [210, 213, 692, 738, 778, 845, 846, 867, 868], "distributeditemsampl": 868, "distributedli": [292, 693], "distributedsampl": [210, 213], "disttenor": 4, "disttensor": [4, 231, 238, 692, 693, 694, 738, 739, 778, 779, 780], "disttensor\u4e2d\u7684\u884c\u6570\u5fc5\u987b\u4e0e\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u6216\u8fb9\u6570\u76f8\u540c": 739, "div": [9, 254, 255, 268, 269, 278, 279, 493, 494, 502, 503, 512, 513, 514, 515, 516, 517, 534, 535, 707, 751, 792, 822], "dive": [724, 824], "divers": 862, "divid": [45, 68, 79, 82, 105, 142, 143, 189, 190, 231, 238, 394, 410, 650, 717, 720, 724, 808, 837, 849, 852], "divis": [4, 392, 401, 414, 415, 446, 448, 449, 613, 625], "dl": [134, 173, 815], "dlg": 781, "dlg\uc758": 792, "dm": 861, "dmlc": [21, 816], "dncoder": 862, "dnn": [722, 806], "do": [4, 9, 21, 22, 70, 89, 101, 102, 114, 116, 130, 140, 180, 239, 327, 336, 346, 348, 380, 420, 427, 429, 446, 447, 449, 451, 452, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 557, 561, 566, 571, 637, 687, 693, 703, 704, 711, 712, 717, 718, 727, 730, 731, 798, 829, 830, 832, 833, 834, 837, 851, 852, 855, 858], "do_someth": 0, "doc": [9, 14, 168, 186, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 713, 725, 822, 836], "docstr": 21, "document": [8, 22, 214, 216, 239, 831, 845], "doc\uc5d0\uc11c": 809, "doe": [4, 8, 21, 26, 27, 28, 64, 71, 93, 113, 116, 130, 131, 134, 149, 155, 164, 185, 187, 193, 292, 299, 329, 348, 457, 503, 543, 579, 596, 599, 600, 601, 618, 637, 660, 661, 666, 687, 693, 695, 696, 700, 704, 708, 714, 718, 724, 727, 734, 774, 789, 808, 822, 825, 827, 829, 834, 836, 837, 838, 839, 840, 841, 849, 851, 852, 855, 858, 862, 867], "doesn": [4, 56, 168, 200, 721, 851], "doi": [134, 163, 173], "domain": [287, 295, 308, 315, 831, 832, 833, 837, 842], "don": [21, 89, 240, 241, 562, 564, 565, 637, 715, 822, 827, 829, 832, 833, 862], "done": [6, 21, 156, 327, 686, 693, 817, 818, 820, 834, 836, 837, 842, 845, 849, 850, 851, 852], "donghuixu": 749, "donot_use_mm_for_euclid_dist": [428, 549], "dot": [9, 256, 257, 270, 271, 280, 281, 396, 454, 495, 496, 502, 518, 519, 536, 537, 707, 721, 727, 730, 751, 770, 792, 802, 805, 811, 813, 819, 837, 846, 851, 852, 855, 862], "dotpredictor": [727, 767, 811, 837], "dotproductpredictor": [727, 730, 767, 770, 811, 813], "doubl": [9, 22, 173, 242, 639, 688, 701, 707, 786, 792, 858], "down": [290, 819, 849, 852], "download": [2, 21, 23, 132, 133, 134, 135, 136, 137, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 202, 288, 685, 686, 689, 733, 734, 773, 774, 816, 817, 818, 820, 822, 827, 829, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "downstream": [696, 727, 730, 731, 826, 845, 850], "doxygen": 21, "dozen": 22, "dpi": 861, "dramat": 852, "draw": [382, 827, 855, 858], "draw_circular": 858, "draw_networkx": 851, "draw_networkx_edg": [818, 861], "draw_networkx_nod": [818, 861], "drawn": [715, 820], "drive": 21, "driven": [859, 865], "drop": [4, 210, 213, 247, 292, 299, 302, 651, 656, 657, 660, 661, 666, 861, 868], "drop_last": [4, 209, 210, 213, 214, 215, 216, 219, 220, 292, 299, 692, 714, 729, 738, 756, 757, 758, 759, 761, 769, 778, 798, 799, 800, 801, 802, 804, 812, 838, 845, 846, 851, 868], "drop_uneven_input": [292, 868], "dropbox": 21, "dropedg": 13, "dropnod": 13, "dropout": [385, 389, 390, 391, 392, 395, 400, 402, 403, 408, 411, 412, 414, 415, 416, 419, 420, 434, 435, 446, 448, 449, 692, 715, 720, 721, 731, 738, 778, 814, 820, 852, 855, 862, 868], "dropouta": [434, 435], "dropouth": [434, 435], "dropout\u6982\u7387": 771, "drug": [52, 122, 565, 566, 683, 704, 748, 789, 858], "drugai": 749, "drug\u76f8\u4e92\u4f5c\u7528\u8fb9": 748, "drug\u8282\u70b9": 748, "dst": [34, 62, 63, 68, 110, 220, 242, 300, 301, 352, 387, 396, 397, 400, 402, 403, 407, 410, 416, 454, 455, 456, 558, 561, 614, 637, 638, 642, 677, 690, 700, 707, 708, 713, 716, 721, 724, 725, 727, 730, 736, 744, 751, 752, 756, 757, 759, 764, 765, 767, 770, 776, 785, 792, 794, 798, 799, 802, 805, 808, 809, 811, 813, 832, 833, 836, 837, 839, 852, 862, 868], "dst_dtype": [724, 764, 808], "dst_field": 862, "dst_id": [59, 126, 249, 286, 688, 695, 781], "dst_id_field": 688, "dst_input": [725, 765, 809], "dst_node": [318, 637, 798, 808], "dst_node_id": 695, "dst_timestamp": 318, "dst_type": [131, 329, 422, 424], "dst_x": 713, "dstdata": [4, 9, 44, 68, 208, 221, 222, 380, 576, 637, 692, 694, 708, 717, 720, 724, 725, 738, 752, 756, 760, 761, 764, 765, 778, 780, 794, 798, 803, 804, 808, 809], "dstnode": [43, 68, 208, 222, 637, 717, 756, 760, 798, 803], "dsttype": [26, 68, 105, 226, 227, 380, 709, 725, 753, 765, 795, 809], "dt": 688, "dtype": [4, 10, 21, 47, 64, 75, 95, 96, 117, 126, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 245, 246, 249, 296, 330, 334, 335, 350, 351, 380, 452, 478, 479, 542, 555, 556, 557, 562, 564, 576, 577, 587, 592, 605, 617, 642, 656, 657, 664, 670, 683, 688, 690, 693, 695, 696, 701, 704, 714, 715, 721, 725, 726, 727, 736, 739, 745, 748, 765, 766, 767, 776, 779, 781, 786, 789, 805, 809, 810, 811, 819, 822, 829, 832, 833, 835, 838, 839, 845, 846, 849, 851, 852, 862, 868], "due": [22, 118, 119, 192, 292, 308, 558, 643, 703, 715, 849, 862], "dump": [781, 846], "duplic": [116, 135, 136, 151, 152, 153, 186, 192, 288, 330, 334, 335, 425, 478, 542, 590, 645, 653, 673, 695, 822, 855], "dur": [849, 852], "dure": [5, 21, 89, 292, 336, 339, 417, 427, 429, 561, 565, 566, 571, 635, 671, 693, 695, 696, 702, 707, 712, 718, 827, 829, 832, 833, 835, 842, 845, 852, 855, 858, 861, 862], "duse_cuda": 816, "duse_libxsmm": 816, "duse_openmp": 816, "dvd": 137, "dwivedi": 819, "dx": [163, 392, 851, 862], "dynam": [399, 859, 861, 862, 863, 865], "e": [0, 4, 5, 9, 21, 22, 26, 41, 42, 48, 54, 62, 63, 70, 108, 112, 118, 119, 120, 122, 125, 126, 130, 131, 166, 174, 178, 186, 210, 213, 220, 239, 243, 244, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 268, 270, 272, 274, 276, 278, 280, 282, 284, 286, 290, 291, 329, 336, 338, 352, 380, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 425, 427, 429, 451, 454, 455, 456, 460, 477, 502, 503, 550, 551, 558, 559, 563, 564, 569, 571, 574, 576, 577, 612, 614, 615, 616, 628, 643, 644, 660, 661, 666, 675, 676, 678, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 706, 707, 708, 712, 713, 721, 727, 728, 729, 735, 743, 750, 751, 768, 775, 776, 784, 791, 792, 793, 816, 817, 818, 819, 820, 822, 823, 827, 828, 829, 834, 835, 836, 837, 842, 851, 852, 858, 862, 867], "e1": [296, 318, 323, 328], "e2": [296, 318, 323, 328], "e2d": 862, "e2n": 672, "e_": [386, 396, 397, 401, 402, 403, 405, 406, 408, 409, 410, 413, 414, 415, 416, 828, 836, 851, 852], "e_add_u": 5, "e_add_v": 5, "e_attr": 125, "e_div_u": 5, "e_div_v": 5, "e_dot_u": 5, "e_dot_v": 5, "e_feat": [164, 166, 460], "e_ij": 387, "e_mul_u": 5, "e_mul_v": 5, "e_sub_u": 5, "e_sub_v": [5, 9], "e_t": [422, 423], "e_typ": [157, 158, 191], "e_weight": 6, "each": [0, 4, 5, 6, 7, 14, 20, 22, 34, 35, 36, 37, 39, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 78, 87, 88, 92, 93, 94, 100, 101, 102, 116, 117, 122, 123, 124, 126, 130, 131, 135, 136, 141, 142, 147, 150, 151, 152, 153, 154, 157, 158, 171, 174, 175, 176, 178, 179, 181, 182, 183, 184, 191, 195, 197, 198, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 231, 234, 238, 239, 240, 241, 242, 245, 249, 286, 289, 292, 296, 299, 300, 301, 302, 304, 305, 307, 309, 316, 318, 323, 324, 327, 328, 329, 330, 334, 335, 336, 338, 348, 349, 352, 378, 379, 380, 382, 383, 384, 385, 386, 388, 392, 394, 396, 399, 400, 401, 402, 403, 404, 405, 407, 410, 411, 412, 413, 414, 416, 417, 419, 420, 427, 428, 429, 431, 433, 434, 435, 436, 447, 451, 452, 453, 457, 459, 461, 478, 504, 505, 542, 543, 549, 552, 553, 554, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 571, 572, 574, 575, 576, 577, 637, 642, 643, 645, 649, 652, 653, 660, 668, 669, 674, 677, 679, 680, 681, 682, 683, 685, 688, 690, 691, 692, 693, 694, 695, 696, 697, 699, 701, 703, 704, 706, 709, 711, 712, 713, 716, 718, 719, 721, 724, 725, 726, 727, 728, 729, 730, 731, 776, 781, 786, 804, 811, 813, 818, 819, 820, 822, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 868], "earli": [166, 192, 727, 811], "earlier": [693, 850, 858], "eas": [21, 22, 304], "easi": [21, 22, 333, 563, 686, 696, 730, 815, 822], "easier": [70, 694, 696, 837], "easili": [122, 229, 230, 711, 716, 719, 727, 826, 828, 834, 852], "ec2": [14, 842], "ecosystem": 822, "ed": [855, 862], "edata": [4, 5, 9, 20, 27, 30, 34, 47, 51, 53, 70, 95, 96, 108, 114, 117, 118, 119, 122, 125, 126, 128, 145, 147, 157, 158, 164, 166, 174, 177, 179, 191, 195, 208, 214, 216, 219, 221, 223, 245, 248, 249, 330, 334, 335, 352, 421, 451, 460, 478, 542, 553, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 573, 574, 637, 642, 643, 644, 645, 647, 652, 653, 656, 657, 658, 659, 660, 661, 664, 666, 669, 670, 672, 673, 674, 675, 676, 677, 678, 683, 688, 690, 693, 694, 695, 696, 701, 704, 708, 721, 727, 728, 730, 736, 739, 740, 745, 748, 752, 757, 759, 767, 768, 770, 776, 779, 780, 781, 786, 789, 793, 794, 799, 802, 805, 811, 813, 834, 835, 836, 837, 839, 849, 850, 861], "edata_develop": 352, "edata_dict": 352, "edata_follow": 352, "edata_pars": [148, 688], "edata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 245, 246, 299, 330, 333, 334, 335, 339, 478, 479, 542, 551, 555, 556, 557, 573, 642, 656, 657, 664, 670, 683, 688, 695, 696, 700, 701, 703, 729, 744, 745, 747, 785, 786, 788, 812, 835, 838, 839], "edeg": [45, 79, 82, 105], "edg": [0, 4, 5, 6, 7, 9, 13, 21, 25, 26, 27, 30, 31, 32, 34, 36, 39, 41, 46, 47, 48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 295, 296, 298, 302, 304, 307, 308, 309, 311, 315, 316, 317, 318, 321, 323, 328, 329, 330, 333, 334, 335, 336, 338, 339, 346, 347, 348, 349, 352, 380, 382, 384, 385, 386, 387, 390, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 448, 451, 454, 455, 456, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 655, 656, 658, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 678, 683, 688, 690, 692, 694, 695, 696, 698, 699, 706, 707, 708, 709, 711, 714, 716, 717, 719, 721, 723, 725, 726, 729, 730, 731, 736, 745, 747, 748, 749, 751, 752, 757, 759, 766, 767, 770, 776, 780, 781, 786, 788, 789, 791, 792, 793, 794, 798, 799, 802, 805, 810, 811, 812, 813, 815, 817, 818, 819, 820, 822, 826, 827, 829, 831, 832, 833, 834, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 853, 855, 861, 865, 867], "edge_attent": 852, "edge_attr": [179, 248, 644], "edge_attr_dtyp": 781, "edge_attr_schem": [4, 75], "edge_attribut": [296, 323, 827, 829], "edge_classif": 308, "edge_color": 851, "edge_data": [308, 688, 696, 781], "edge_dir": [214, 216, 240, 241, 565, 566, 567, 568], "edge_drop": 385, "edge_feat": [177, 239, 387, 392, 397, 398, 400, 406, 408, 414, 695, 696, 740, 781], "edge_feat_0": 833, "edge_feat_0_path": 833, "edge_feat_1": 833, "edge_feat_1_path": 833, "edge_feat_nam": [29, 117, 653, 658, 669], "edge_feat_s": [138, 392, 398, 414, 448], "edge_featur": [289, 294, 299, 304, 713, 839], "edge_feature_kei": 294, "edge_follow_feat_0": 832, "edge_follow_feat_0_path": 832, "edge_follow_feat_1": 832, "edge_follow_feat_1_path": 832, "edge_func": 413, "edge_gat": 400, "edge_id": [32, 232, 304], "edge_id_attr_nam": [125, 248], "edge_in_feat": 387, "edge_index": 696, "edge_label": [25, 315, 727, 757, 767, 799, 811], "edge_like_feat_0": 832, "edge_like_feat_0_path": 832, "edge_like_feat_1": 832, "edge_like_feat_1_path": 832, "edge_map": [239, 696, 740, 781], "edge_mask": [421, 422, 423, 756, 798], "edge_permute_algo": [98, 558], "edge_pred_graph": [727, 767, 811], "edge_predict": [757, 799], "edge_repr": 858, "edge_split": [683, 693, 739, 779, 846], "edge_subgraph": [157, 158, 191, 478, 714, 756, 757, 759, 798, 799, 802, 835], "edge_timestamp_attr_nam": 296, "edge_trainer_id": 231, "edge_typ": [131, 296, 304, 329, 694, 696, 704, 724, 748, 764, 781, 789, 808], "edge_type_id": 695, "edge_type_subgraph": [26, 479, 704, 748, 789], "edge_type_to_id": [296, 323, 832], "edge_udf": [20, 674, 675, 676, 677, 678], "edge_upd": 448, "edge_weight": [6, 145, 214, 385, 397, 401, 402, 404, 405, 410, 416, 417, 418, 423, 425, 728, 768], "edgebatch": [20, 53, 707, 751, 792], "edgedataload": [693, 739, 757, 759, 779, 799, 800, 802, 846], "edgedataview": 4, "edgelist": 861, "edgepredictor": 846, "edges1": 380, "edges2": 380, "edges3": 380, "edges_0": 688, "edges_1": 688, "edges_b": 861, "edges_data": 839, "edges_dst": 839, "edges_field": 862, "edges_gener": [91, 544], "edges_group": 839, "edges_of_id": 839, "edges_path": 833, "edges_perm": 558, "edges_src": 839, "edges_to_exclud": 309, "edges_with_feature_on": 53, "edgeweightnorm": [385, 404, 410, 417, 418, 728, 768], "edist": 386, "edu": [145, 175, 181, 184], "educ": 850, "ee": 862, "efeat": [387, 397, 400, 406, 413, 448, 695, 696], "effect": [10, 210, 213, 243, 286, 389, 390, 391, 415, 458, 572, 576, 577, 660, 661, 666, 691, 819, 862], "effici": [4, 5, 9, 22, 34, 73, 93, 94, 100, 113, 122, 126, 131, 209, 239, 248, 249, 286, 329, 336, 382, 424, 426, 427, 429, 567, 571, 643, 696, 703, 706, 717, 721, 724, 729, 826, 830, 836, 842, 849, 850, 851, 852, 855, 858, 861, 862], "effort": [850, 867], "eg": [704, 748, 789], "egat": 397, "egat_model": [397, 400], "egnn": 398, "egt": 448, "eid": [4, 20, 26, 51, 55, 61, 88, 89, 95, 96, 125, 130, 211, 223, 232, 233, 239, 240, 241, 245, 248, 330, 334, 335, 347, 352, 421, 478, 542, 555, 556, 558, 562, 564, 565, 566, 567, 568, 573, 637, 642, 645, 677, 694, 696, 704, 748, 756, 759, 780, 781, 789, 798, 802, 835, 837, 862], "eid2localeid": 4, "eid2partid": 4, "eid_attr": 644, "eid_het2hom": 694, "eid_hom2het": 694, "eid_offset": 694, "eid_rang": 781, "eids_dict": [759, 802], "eig": 392, "eig_vec": 392, "eigenvalu": [337, 338, 388, 393, 450, 663], "eigenvector": [337, 392, 450, 663], "eight": [171, 695], "eigval": [450, 663], "eigval_nam": [450, 663], "eigvec": [450, 663], "eisfischerh\u00fctt": 862, "either": [9, 21, 26, 32, 34, 62, 63, 73, 91, 92, 93, 94, 100, 113, 131, 182, 210, 214, 216, 220, 223, 240, 241, 314, 315, 329, 336, 380, 428, 549, 563, 565, 566, 567, 568, 571, 596, 599, 600, 601, 603, 637, 696, 699, 703, 717, 829, 831, 834, 837, 845, 858], "el": [454, 707, 751, 792], "electron": [178, 179], "element": [0, 4, 5, 22, 31, 32, 34, 35, 36, 37, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 93, 94, 100, 119, 121, 122, 214, 216, 219, 220, 239, 240, 241, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 296, 302, 307, 309, 323, 324, 329, 330, 334, 335, 337, 338, 348, 349, 383, 387, 429, 478, 504, 542, 543, 553, 554, 564, 565, 566, 568, 579, 580, 583, 584, 595, 596, 597, 602, 608, 615, 616, 622, 628, 632, 643, 647, 648, 693, 718, 719, 724, 819, 820, 837, 838], "elementwis": [454, 609, 610, 613, 619, 620, 621, 631], "elif": [717, 724, 760, 764, 803, 808, 827], "elimin": 130, "ell": 651, "els": [73, 386, 419, 420, 421, 422, 423, 425, 688, 713, 715, 717, 718, 721, 724, 725, 756, 758, 760, 764, 765, 798, 801, 803, 805, 808, 809, 817, 818, 819, 820, 822, 827, 829, 832, 833, 850, 852, 858, 862, 867, 868], "elsewher": 617, "elu": [448, 721, 805, 852], "emap": 845, "emb": [4, 10, 379, 423, 425, 457, 693, 739, 779, 850, 855, 858, 862], "emb_dim": [378, 382], "emb_stat": 4, "embed": [5, 13, 137, 149, 158, 180, 182, 184, 185, 191, 313, 378, 379, 382, 423, 425, 447, 448, 451, 452, 455, 456, 457, 692, 693, 694, 696, 716, 730, 731, 814, 827, 845, 846, 849, 850, 851, 852, 855, 862], "embedding_dim": [4, 379, 447, 457], "emit": [727, 858], "emphas": 837, "empir": [14, 120, 182], "emploi": [20, 302, 307, 424, 425, 426, 720, 819, 852, 862], "employ": 862, "empti": [32, 56, 131, 204, 235, 286, 329, 341, 346, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 715, 724, 849, 852, 862], "empty_tensor": 827, "en": [842, 862], "enabl": [9, 23, 423, 425, 707, 714, 719, 721, 805, 816, 826, 858, 862], "enable_cpu_affin": 842, "enc": 862, "encapsul": 725, "enclos": [242, 688], "encod": [13, 135, 136, 139, 159, 165, 171, 337, 435, 447, 450, 451, 452, 453, 459, 552, 635, 663, 667, 671, 699, 819, 835, 846, 850, 851, 853, 862, 863, 865], "encompass": [302, 307], "encount": [849, 852], "encourag": [424, 426, 730], "end": [4, 20, 22, 27, 114, 164, 217, 239, 337, 347, 382, 386, 436, 560, 572, 635, 663, 671, 677, 696, 703, 718, 723, 727, 729, 731, 756, 788, 798, 804, 811, 812, 814, 820, 821, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "end_epoch_tim": 716, "end_tim": 164, "endl": 22, "endpoint": [4, 34, 48, 53, 100, 116, 478, 479, 636, 645, 851], "energi": [178, 179], "enforc": 845, "english": [149, 182, 185, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814], "enhanc": [21, 309, 818, 853, 863, 865], "enjoi": [9, 21, 819], "enough": [14, 696, 838], "enrich": 852, "ensur": [304, 316, 404, 693, 695, 713, 829, 845, 867], "entail": 858, "enter": 70, "enthalpi": [178, 179], "entir": [3, 9, 45, 79, 82, 105, 210, 287, 293, 295, 297, 314, 692, 696, 713, 714, 717, 729, 826, 837, 838, 845, 852], "entiti": [132, 133, 144, 158, 161, 170, 455, 456, 698, 699, 730, 783, 850, 853, 865], "entri": [126, 164, 177, 249, 446, 449, 567, 617, 700, 728, 785, 820, 822, 851], "entropi": [244, 421, 422, 423, 425, 477, 730, 813, 837, 850, 852, 861], "entropy_list": 861, "enumer": [298, 692, 694, 700, 715, 716, 720, 721, 738, 758, 778, 801, 805, 827, 829, 845, 846, 855, 862, 868], "env": [827, 829, 832, 833, 849, 852], "environ": [14, 21, 292, 695, 816, 817, 818, 819, 820, 822, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 849, 850, 851, 852, 855, 858, 861, 867, 868], "enzym": [25, 168, 186], "ep": [4, 10, 244, 401, 477, 660, 661, 666, 862], "epoch": [4, 210, 213, 378, 421, 422, 423, 424, 425, 690, 692, 693, 716, 720, 721, 727, 729, 730, 731, 736, 738, 741, 767, 769, 770, 771, 776, 778, 779, 782, 805, 811, 812, 813, 814, 817, 818, 819, 820, 823, 827, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 862, 867, 868], "epoch_end": 868, "epoch_start": 868, "epsilon": [178, 179, 392, 405, 406], "epsilon_": [178, 179], "eq": [420, 855], "equal": [128, 129, 139, 173, 182, 205, 219, 244, 296, 302, 307, 352, 384, 419, 460, 477, 504, 505, 567, 612, 701, 756, 798, 842, 852, 861], "equat": [385, 386, 403, 404, 417, 418, 454, 458, 706, 820, 849, 850, 851, 855], "equip": 9, "equival": [26, 73, 222, 223, 224, 225, 245, 250, 251, 262, 263, 264, 265, 289, 296, 330, 380, 385, 394, 399, 404, 410, 417, 418, 428, 542, 549, 594, 609, 611, 613, 618, 619, 620, 629, 630, 631, 647, 648, 675, 678, 707, 708, 713, 718, 728, 822, 835, 836, 851, 855], "equivari": [398, 851], "er": [707, 751, 792], "erdos_renyi_graph": 460, "error": [48, 89, 109, 116, 131, 286, 292, 299, 329, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 635, 636, 637, 671, 683, 696, 702, 746, 756, 787, 798, 827, 829, 832, 833, 858, 868], "errorbar": 861, "especi": [21, 125, 248, 714, 715, 828, 850], "essenc": 852, "essenti": [20, 22, 239, 461, 717, 816, 819, 828, 836, 845, 849, 858], "establish": 4, "estim": [424, 426, 714, 730, 770, 813, 834, 835, 836, 837, 838, 839, 867], "et": [72, 135, 136, 560, 817, 819, 828, 834, 836, 849, 855], "eta": [244, 477], "etc": [0, 1, 4, 11, 21, 125, 162, 248, 352, 686, 695, 696, 707, 712, 713, 717, 719, 723, 729, 822, 837, 845, 861], "ether": 4, "etyp": [4, 26, 27, 29, 30, 31, 32, 33, 34, 36, 39, 47, 48, 50, 51, 53, 55, 57, 60, 61, 62, 63, 80, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 100, 107, 109, 113, 114, 117, 118, 125, 126, 128, 130, 208, 214, 216, 219, 220, 223, 226, 227, 231, 239, 240, 246, 296, 304, 319, 320, 323, 342, 344, 380, 382, 390, 409, 412, 415, 422, 423, 424, 480, 550, 553, 555, 557, 559, 561, 565, 566, 568, 574, 633, 636, 637, 642, 643, 644, 645, 647, 651, 652, 653, 668, 673, 688, 690, 694, 695, 696, 704, 709, 713, 716, 717, 718, 725, 727, 729, 730, 731, 736, 748, 753, 756, 757, 759, 760, 761, 765, 767, 769, 770, 771, 776, 780, 781, 789, 795, 798, 799, 802, 803, 804, 809, 811, 812, 813, 814, 832, 850], "etype2id": 694, "etype2id_map": 694, "etype_attr": 644, "etype_count": 643, "etype_dict": 73, "etype_field": 642, "etype_id": 781, "etype_sort": 240, "etype_weight": [422, 424], "etypes_list": 239, "etypes\u662f\u4e00\u4e2a\u5217\u8868": 769, "eu": 48, "euclidean": [336, 427, 428, 429, 549, 571, 858], "ev": [48, 178, 179], "eval": [731, 771, 814, 818, 819, 820, 827, 829, 849, 858, 862, 867, 868], "eval_dataload": 827, "evalu": [137, 171, 180, 182, 188, 197, 205, 304, 696, 697, 711, 715, 731, 771, 814, 817, 818, 819, 823, 834, 837, 838, 849, 852, 858, 862, 867], "even": [4, 210, 347, 555, 693, 711, 826, 851, 855], "evenli": [231, 238, 845], "event": [164, 166], "everi": [0, 4, 10, 21, 117, 119, 121, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 214, 215, 216, 219, 240, 241, 329, 338, 352, 380, 403, 421, 422, 423, 424, 425, 426, 559, 564, 565, 566, 568, 693, 696, 700, 715, 727, 729, 823, 829, 835, 838, 845, 858, 859, 862, 865, 867], "everyth": [21, 290, 845], "evid": 852, "evolut": [858, 861], "evolv": 851, "eweight": [126, 249, 421, 422, 728, 766, 768, 793], "eweight_nam": [30, 126, 249, 552, 659, 660, 661, 666, 667, 670], "eweight\ub97c": 793, "exact": 711, "exactli": [8, 117, 296, 637, 693, 713, 721, 820, 837, 845, 846, 852, 858], "exampl": [0, 3, 4, 5, 6, 9, 10, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 205, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 234, 239, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 323, 324, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 476, 477, 478, 479, 480, 505, 542, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 687, 688, 690, 691, 692, 693, 694, 695, 697, 699, 700, 701, 703, 704, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 724, 725, 726, 727, 728, 729, 730, 731, 773, 776, 802, 812, 814, 815, 817, 818, 819, 820, 821, 825, 826, 827, 828, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 845, 846, 848, 849, 850, 851, 852, 854, 855, 857, 858, 860, 861, 862, 864, 866, 867, 868, 870], "examplelay": 460, "exceed": [451, 711], "except": [4, 171, 211, 212, 337, 399, 637, 642, 663, 693, 695, 713, 716, 717, 718, 731, 817, 818, 819, 820, 822, 827, 829, 832, 833, 852, 868], "exception": 826, "exchang": [304, 845], "exclud": [220, 226, 309, 317, 321, 561, 563, 565, 566, 713, 719, 757, 799], "exclude_edg": [309, 317, 565, 566, 712], "exclude_eid": 220, "exclude_seed_edg": [712, 713, 716, 719, 827], "exclude_self": [116, 336, 427, 429, 571], "exclude_self_loop": [226, 561], "excluded_edg": [565, 566], "exclus": [216, 220, 292, 564, 867], "execut": [89, 156, 292, 350, 693, 825, 827, 829, 832, 833, 841, 844, 848, 854, 857, 860, 861, 864, 866, 870], "exhaust": 730, "exhibit": 852, "exist": [0, 4, 21, 27, 28, 114, 115, 117, 142, 143, 186, 200, 226, 231, 238, 317, 333, 346, 347, 555, 561, 585, 632, 636, 645, 650, 660, 661, 666, 691, 693, 699, 713, 730, 737, 777, 815, 817, 818, 826, 834, 836, 837, 845, 850, 855, 858], "exist_ok": [832, 833], "exit": [70, 849], "exmapl": 6, "exp": [352, 386, 387, 407, 453, 574, 575, 822, 852, 858, 862], "expand": [334, 335, 424, 426, 724, 808, 858], "expand_as_pair": [723, 724, 763, 764, 807, 808], "expans": [334, 335], "expect": [109, 120, 199, 200, 401, 417, 704, 789, 817, 849, 850, 862], "expected_fanout_len": 829, "expens": 66, "experi": [14, 173, 552, 667, 721, 834, 839, 852], "experiment": [4, 6, 10, 389, 390, 391, 457, 827, 829, 832, 833], "explain": [141, 421, 422, 423, 424, 425, 426, 685, 706, 815, 849, 852], "explain_graph": [421, 422, 423, 424, 425, 426], "explain_nod": [421, 422, 423, 425], "explan": [1, 3, 11, 142, 143, 189, 190, 209, 217, 220, 222, 223, 224, 225, 421, 422, 423, 424, 425, 426, 695, 713, 718, 849, 850, 851, 852, 855, 858, 861, 862], "explanatori": [423, 425], "explic": 4, "explicit": [703, 822, 858], "explicitli": [286, 329, 693, 694, 703, 788, 822, 827, 829, 832, 833, 858], "exploit": [22, 424, 426, 850], "explor": [424, 426, 819, 856, 858, 865, 867], "explos": [214, 296, 302, 565], "expon": 620, "exponenti": [620, 862], "export": [21, 695, 781, 816, 842, 845], "expos": [20, 22, 826], "express": [5, 698, 727, 730, 836, 853, 861, 865], "extend": [5, 153, 210, 386, 424, 426, 716, 730, 850, 853, 855, 865], "extens": [183, 816, 827, 829, 832, 833, 862], "extent": [178, 179], "extern": [2, 31, 410, 690, 698, 703], "extra": [22, 174, 289, 380, 420, 559, 645, 688, 719, 819, 845, 850], "extra_attr": [289, 827, 829], "extra_cached_hop": [348, 543], "extract": [1, 13, 95, 96, 159, 162, 173, 201, 220, 233, 245, 246, 288, 304, 330, 334, 335, 478, 479, 542, 555, 556, 573, 687, 696, 714, 725, 731, 756, 774, 798, 814, 817, 818, 820, 827, 829, 835, 850, 851], "extract_arch": [687, 734, 774], "extrem": 851, "ey": 837, "e\u662f\u8fb9\u7684\u6570\u91cf": 768, "f": [4, 9, 10, 292, 392, 397, 407, 408, 421, 422, 424, 426, 457, 690, 692, 694, 713, 715, 716, 717, 718, 720, 721, 724, 727, 729, 731, 736, 738, 757, 758, 759, 760, 761, 764, 767, 769, 771, 776, 778, 799, 801, 802, 803, 804, 805, 808, 811, 812, 814, 817, 818, 819, 820, 822, 827, 829, 832, 833, 834, 836, 837, 838, 845, 846, 849, 850, 852, 855, 858, 861, 862, 867, 868], "f1": [380, 683, 852], "f1_": 852, "f2": [380, 683], "f9065fa7": 156, "f_": [386, 392, 397, 405, 406, 411, 413, 431, 855, 858], "f_r": [725, 765, 809], "f_size": 861, "face": 22, "facilit": 304, "fact": [701, 713, 849, 858], "factor": [392, 414, 453, 721, 850], "factori": [427, 428, 429], "factor\ub97c": 805, "faculti": [155, 187, 193], "fail": [21, 818, 819, 820], "failur": 200, "faithfulli": 186, "fake": 159, "fakenew": 159, "fall": [4, 44, 104, 309, 348, 543, 694], "fallback": 297, "fallback_featur": 297, "fals": [4, 10, 25, 31, 48, 57, 58, 65, 66, 69, 70, 95, 96, 99, 111, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 235, 237, 239, 240, 241, 245, 286, 292, 296, 299, 302, 307, 308, 315, 316, 321, 322, 324, 330, 333, 336, 337, 339, 348, 349, 383, 384, 389, 390, 392, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 410, 412, 413, 414, 415, 417, 419, 420, 423, 424, 425, 426, 427, 428, 429, 431, 446, 449, 450, 452, 454, 459, 478, 542, 543, 545, 547, 548, 549, 555, 556, 559, 561, 562, 564, 565, 566, 567, 568, 571, 572, 573, 590, 635, 636, 637, 643, 645, 647, 648, 649, 652, 653, 663, 664, 669, 671, 686, 688, 689, 690, 692, 694, 695, 696, 704, 714, 720, 729, 733, 735, 736, 738, 748, 756, 757, 758, 759, 761, 769, 773, 775, 776, 778, 780, 789, 798, 799, 800, 801, 802, 804, 812, 817, 818, 819, 820, 822, 827, 829, 831, 832, 833, 834, 838, 845, 846, 850, 851, 852, 855, 858, 861, 862, 867, 868], "famili": [815, 858, 859, 865], "familiar": [717, 730, 845], "famou": 818, "fanout": [214, 216, 219, 240, 241, 296, 298, 302, 307, 312, 389, 390, 391, 565, 566, 567, 693, 694, 712, 720, 739, 756, 779, 780, 798, 827, 829], "faq": 816, "far": [721, 850, 852, 858], "farthest_point_sampl": 6, "fashion": [692, 827], "fast": [22, 125, 138, 139, 140, 248, 336, 388, 393, 427, 429, 571, 700], "fast_neg": 378, "faster": [148, 168, 210, 226, 336, 383, 412, 415, 427, 429, 561, 571, 721, 819], "favor": 837, "fb15k": [157, 158], "fb15k237": 157, "fb15k237dataset": [690, 736, 776], "fc": [400, 402, 403, 407, 423, 425, 852], "fc_neigh": [720, 723, 724, 763, 764, 807, 808], "fc_pool": [723, 724, 763, 764, 807, 808], "fc_self": [720, 723, 724, 763, 764, 807, 808], "feat": [4, 10, 25, 43, 46, 51, 64, 71, 74, 103, 128, 129, 135, 136, 137, 138, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 168, 169, 171, 173, 174, 175, 176, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 217, 219, 235, 308, 315, 342, 343, 344, 345, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 455, 456, 457, 460, 553, 554, 574, 575, 633, 634, 643, 647, 648, 653, 670, 688, 690, 693, 694, 696, 708, 712, 713, 715, 716, 718, 719, 720, 721, 724, 729, 730, 731, 736, 739, 752, 764, 769, 770, 771, 776, 779, 780, 794, 805, 808, 812, 813, 814, 817, 818, 819, 820, 827, 829, 832, 833, 834, 836, 837, 839, 845, 846, 849, 852, 867, 868], "feat0": 129, "feat1": [125, 128, 248, 653, 694, 780], "feat2": [125, 248], "feat3": 125, "feat_0": [404, 832, 833], "feat_1": [832, 833], "feat_a": 851, "feat_b": 851, "feat_data": 315, "feat_dict": [709, 753, 795], "feat_dim": 451, "feat_drop": [389, 391, 395, 400, 402, 403, 416], "feat_dst": [708, 720, 724, 764, 808], "feat_dst\uc758": 794, "feat_list": 458, "feat_mask": [421, 422], "feat_nam": [392, 450, 663, 667, 671, 704, 748, 789], "feat_nn": 431, "feat_siz": [139, 421, 425, 426, 446, 448, 449], "feat_src": [708, 720, 724, 764, 808], "feat_src\uc640": 794, "featmask": 13, "featur": [0, 4, 5, 9, 13, 19, 20, 26, 27, 28, 30, 34, 35, 43, 44, 46, 47, 51, 53, 54, 56, 64, 70, 71, 73, 74, 75, 77, 91, 92, 93, 94, 95, 96, 100, 103, 104, 108, 113, 114, 115, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 208, 210, 214, 216, 217, 219, 221, 222, 223, 224, 225, 233, 235, 237, 239, 240, 241, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 290, 291, 294, 295, 297, 303, 304, 308, 309, 313, 314, 315, 330, 333, 334, 335, 336, 339, 346, 347, 352, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 448, 449, 451, 454, 455, 456, 460, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 549, 553, 554, 555, 556, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 571, 574, 575, 576, 577, 636, 637, 639, 640, 641, 642, 643, 644, 645, 647, 648, 652, 653, 658, 669, 670, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 686, 690, 692, 693, 694, 695, 696, 698, 699, 700, 702, 704, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 736, 746, 757, 759, 761, 766, 767, 770, 771, 776, 781, 786, 787, 789, 795, 799, 801, 802, 803, 804, 805, 808, 810, 811, 812, 813, 814, 817, 818, 819, 822, 826, 827, 828, 829, 830, 831, 834, 836, 838, 839, 842, 845, 849, 850, 851, 852, 855, 858, 861, 863, 865, 867, 868], "feature_data": [308, 832, 833], "feature_nam": [159, 222, 223, 224, 225, 287, 295, 304, 781], "feature_sotr": 315, "feature_stor": 294, "featurefetch": 290, "featureless": 696, "features_to_us": 386, "featurestor": [287, 291, 294], "febd69": 858, "fed": [108, 414, 423, 425], "fedora": 816, "feed": [434, 435, 716, 718, 727, 819, 837, 850, 855, 862], "feed_forward": 862, "feedback": [730, 770, 813], "feedforward": 449, "feel": [21, 822], "fell": 22, "fetch": [7, 21, 208, 222, 223, 224, 225, 290, 294, 716, 719, 720, 826, 827, 829, 852], "fetch_featur": [294, 712, 713, 715, 716, 718, 719, 720, 827, 829, 868], "fetcher": [7, 294, 826], "few": [1, 4, 14, 22, 637, 692, 693, 711, 717, 731, 845, 846, 858, 862], "fewer": [171, 292, 302, 565, 828, 861], "ffn": [434, 435, 862], "ffn1": 819, "ffn2": 819, "field": [21, 22, 25, 27, 28, 114, 115, 146, 151, 152, 168, 169, 184, 186, 192, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 308, 309, 392, 553, 642, 647, 648, 688, 690, 695, 707, 831, 832, 833, 851, 855, 862], "field_of_studi": 781, "fig": [818, 858, 861], "fig2": 861, "figsiz": [851, 861], "figur": [692, 696, 704, 711, 819, 820, 851, 855, 861, 862], "file": [4, 21, 22, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 206, 209, 234, 235, 236, 237, 239, 291, 308, 341, 569, 685, 687, 690, 693, 695, 696, 697, 704, 727, 731, 734, 774, 781, 816, 817, 818, 820, 825, 827, 829, 831, 834, 836, 837, 839, 841, 844, 845, 846, 848, 849, 850, 851, 852, 854, 857, 860, 864, 866, 870], "file_nam": 688, "file_path": [687, 734, 774], "file_system": 868, "filelock": [827, 829, 832, 833], "filenam": [199, 204, 341, 569], "filesystem": 235, "fill": [27, 28, 93, 113, 114, 115, 117, 451, 572, 614, 615, 616, 628, 653, 858], "fill_data": [29, 117, 653], "film": 134, "filter": [53, 54, 163, 384, 386, 387, 388, 393, 396, 399, 400, 402, 403, 404, 407, 410, 417], "filter_edg": 862, "filter_nod": 862, "final": [6, 22, 132, 133, 144, 170, 239, 386, 414, 450, 454, 690, 707, 708, 711, 725, 729, 731, 751, 792, 816, 832, 833, 850, 851, 852, 855, 862, 867], "final_ft": [707, 751, 792], "final_tmp": [423, 425], "find": [14, 21, 26, 55, 130, 131, 317, 329, 424, 426, 561, 697, 724, 730, 817, 818, 819, 820, 835, 836, 837, 839, 850, 851, 852, 858, 862], "find_edg": [4, 89, 759, 802], "fine": [89, 715, 822, 842, 855], "fingerprint": 845, "finish": [21, 817, 818, 820, 827, 845, 867], "first": [4, 9, 21, 22, 27, 51, 56, 73, 118, 119, 121, 123, 124, 125, 126, 130, 131, 137, 139, 140, 141, 162, 171, 180, 181, 182, 184, 188, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 229, 230, 239, 244, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 296, 300, 329, 334, 335, 336, 352, 380, 386, 399, 410, 417, 421, 427, 429, 436, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 558, 562, 563, 564, 567, 571, 618, 628, 637, 642, 643, 653, 689, 693, 694, 696, 704, 714, 715, 717, 723, 724, 729, 731, 816, 817, 818, 822, 828, 832, 833, 835, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 862, 863, 865, 867, 868], "firstli": 819, "fission": 167, "fit": [210, 308, 378, 405, 406, 413, 696, 711, 714, 726, 828, 830, 835, 836], "five": [137, 141, 142, 143, 155, 187, 193, 688, 831, 855], "fix": [197, 198, 205, 214, 216, 217, 348, 408, 543, 565, 712, 862], "flag": [31, 57, 58, 245, 331, 392, 414, 459, 478, 684, 816, 845], "flatten": [563, 721, 805], "flexibl": [20, 637, 688, 826, 862], "flickr": 160, "flickrdataset": 194, "flip": [635, 671, 827, 829, 832, 833], "flist": 73, "float": [4, 9, 10, 22, 95, 96, 117, 120, 138, 139, 140, 142, 143, 161, 162, 163, 178, 183, 189, 190, 198, 205, 240, 241, 243, 244, 296, 302, 307, 332, 338, 340, 352, 378, 384, 385, 386, 389, 390, 391, 392, 393, 395, 400, 401, 402, 403, 404, 405, 406, 408, 412, 414, 415, 416, 419, 420, 421, 422, 423, 424, 425, 426, 428, 434, 435, 446, 448, 449, 459, 476, 477, 549, 555, 556, 557, 561, 562, 564, 565, 566, 567, 610, 621, 639, 640, 641, 650, 653, 656, 657, 658, 660, 661, 666, 670, 677, 682, 688, 690, 701, 707, 720, 726, 759, 766, 776, 786, 792, 802, 810, 817, 818, 819, 834, 836, 838, 851, 855, 862, 868], "float16": [9, 641, 707, 721, 792, 805], "float16\uc744": 792, "float32": [4, 9, 10, 47, 75, 95, 96, 117, 146, 147, 165, 168, 169, 174, 219, 246, 288, 351, 386, 396, 397, 400, 402, 403, 413, 479, 555, 556, 557, 568, 589, 640, 664, 670, 683, 690, 693, 694, 701, 704, 715, 736, 739, 745, 748, 776, 779, 780, 786, 789, 822, 835, 838, 868], "float64": [126, 249, 587, 639, 688, 832, 833, 839], "floattensor": [438, 563, 564, 565, 566, 568, 708, 752, 794, 851], "flow": [127, 131, 167, 208, 210, 211, 212, 686, 713, 716, 718, 798, 799, 802, 804, 828, 829, 862], "flush": 721, "fly": [389, 390, 391, 858], "fmt": 32, "fn": [5, 9, 20, 21, 34, 73, 91, 92, 93, 94, 100, 113, 121, 421, 422, 424, 460, 674, 675, 676, 677, 678, 679, 680, 681, 682, 707, 708, 709, 717, 721, 724, 727, 728, 730, 751, 752, 753, 760, 764, 767, 768, 770, 792, 793, 794, 795, 803, 805, 808, 811, 813, 827, 829, 836, 837, 849, 850, 851, 855, 861, 862], "fn_": 852, "focu": [842, 855, 858], "focus": [690, 850, 851, 853, 862, 865], "folder": [22, 156, 695, 696, 704, 789, 845], "follow": [0, 3, 4, 5, 6, 9, 20, 21, 22, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 140, 141, 142, 143, 148, 156, 178, 179, 182, 189, 190, 204, 209, 214, 216, 219, 220, 229, 230, 239, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 292, 294, 299, 301, 308, 329, 330, 334, 335, 336, 339, 340, 341, 346, 352, 379, 380, 381, 386, 397, 399, 401, 404, 410, 411, 412, 421, 422, 427, 428, 429, 430, 431, 432, 433, 437, 438, 455, 456, 459, 460, 476, 478, 479, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 547, 548, 549, 557, 559, 563, 564, 565, 566, 567, 571, 573, 574, 575, 576, 577, 579, 615, 616, 636, 637, 638, 642, 643, 644, 649, 652, 653, 658, 664, 668, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 699, 700, 701, 703, 704, 706, 708, 711, 712, 713, 714, 715, 716, 717, 718, 721, 723, 726, 727, 728, 729, 730, 731, 756, 757, 766, 798, 799, 810, 816, 819, 820, 822, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "follow_dst": [726, 766, 810], "follow_edg": 832, "follow_edges_path": 832, "follow_src": [726, 766, 810], "followed_bi": 713, "follows\uc640": 789, "foo": 70, "footnot": 842, "footprint": [696, 708], "foral": [391, 407, 412, 416, 502, 724, 764, 808, 836], "forc": [231, 238, 858, 862], "force_even": [231, 238, 692, 738, 778, 846], "force_reload": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 686, 690, 733, 736, 773, 776], "forcibli": [392, 414], "fork": [8, 21], "form": [20, 21, 22, 26, 51, 61, 88, 130, 131, 173, 208, 210, 245, 286, 296, 300, 329, 330, 334, 335, 347, 378, 382, 401, 423, 424, 425, 426, 461, 478, 542, 550, 551, 560, 565, 566, 635, 645, 651, 671, 694, 696, 703, 729, 747, 759, 788, 802, 829, 836, 837, 838, 850, 851, 852, 861, 863, 865], "formal": [20, 72, 244, 477, 651, 696, 818, 850], "format": [0, 4, 12, 13, 30, 31, 32, 34, 35, 41, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 118, 119, 126, 131, 239, 240, 245, 246, 248, 249, 286, 294, 296, 304, 308, 309, 315, 318, 328, 329, 330, 334, 335, 478, 480, 542, 553, 555, 557, 569, 574, 576, 577, 606, 615, 616, 628, 643, 687, 688, 690, 694, 703, 714, 721, 723, 724, 734, 736, 763, 764, 774, 776, 780, 781, 805, 807, 808, 822, 829, 831, 832, 833, 836, 837, 845, 846, 849, 850, 852, 855, 858, 862, 867], "former": [352, 421, 422, 423, 424, 425, 426, 561, 693, 713], "formul": [399, 410, 610, 621, 725, 727, 828, 834, 837, 850, 851, 863, 865], "formula": [352, 384, 405, 406, 409, 413, 707, 724], "formular": 669, "forth": [22, 643], "forum": 21, "forward": [4, 70, 230, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 708, 713, 715, 716, 717, 718, 720, 721, 722, 725, 727, 728, 729, 730, 731, 757, 758, 759, 760, 761, 764, 765, 767, 769, 770, 771, 799, 801, 802, 803, 804, 805, 806, 809, 811, 812, 813, 814, 817, 818, 819, 820, 822, 827, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "forward_infer": 858, "forward_train": 858, "found": [26, 48, 70, 317, 427, 429, 552, 564, 667, 684, 688, 690, 707, 725, 817, 822, 823, 827, 829, 832, 833, 836, 849, 850, 862, 867, 868], "four": [504, 571, 670, 691, 694, 695, 703, 726, 831, 845, 851, 852], "fourth": 563, "fp16": [721, 805], "fp16\ub97c": 805, "fp16\uc744": 805, "fp_": 852, "frac": [120, 178, 179, 243, 244, 340, 352, 386, 387, 392, 404, 407, 410, 412, 417, 430, 453, 454, 476, 477, 567, 574, 575, 669, 729, 769, 812, 817, 818, 819, 822, 849, 850, 851, 852, 858, 861, 862], "frac_list": [207, 867], "fraction": [207, 404], "fragment": 842, "frame": [9, 818, 858, 861], "framework": [4, 7, 9, 21, 23, 42, 59, 62, 63, 108, 125, 126, 131, 186, 234, 245, 246, 248, 249, 286, 329, 330, 334, 335, 336, 427, 429, 434, 435, 478, 479, 542, 550, 551, 565, 566, 567, 568, 571, 693, 700, 702, 704, 722, 787, 815, 823, 826, 832, 833, 836, 855, 858, 862], "fraud": [145, 161, 162, 163], "frauddataset": [161, 163], "fraudul": [145, 161, 162], "free": [21, 178, 179, 815, 822, 828, 831, 852], "freebas": 158, "frequenc": 392, "frequent": [22, 135, 136, 137, 182, 696], "friendship": [194, 699, 729], "from": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 22, 26, 27, 32, 45, 48, 68, 73, 79, 82, 89, 93, 94, 95, 96, 105, 112, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 229, 230, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 286, 287, 288, 289, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 325, 327, 328, 329, 330, 333, 334, 335, 336, 338, 340, 341, 346, 347, 352, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 476, 477, 478, 479, 542, 549, 550, 551, 552, 556, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 576, 577, 612, 614, 615, 616, 628, 632, 636, 637, 642, 644, 645, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 677, 678, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 698, 702, 703, 707, 708, 709, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 729, 730, 731, 733, 734, 735, 736, 737, 763, 764, 769, 773, 774, 775, 776, 777, 781, 785, 787, 788, 799, 805, 807, 808, 811, 812, 813, 817, 818, 819, 820, 822, 825, 826, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 841, 844, 845, 846, 848, 850, 852, 854, 855, 857, 858, 860, 861, 862, 864, 866, 867, 868, 870], "from_coo": [817, 822], "from_csc": [720, 822], "from_csr": 822, "from_cudf_edgelist": 247, "from_networkx": [249, 286, 700, 744, 785], "from_numpi": [314, 839, 851], "from_scipi": [248, 286, 700, 744, 785], "fromnumer": [849, 852], "fromt": [146, 169], "front": 724, "frontier": [4, 91, 92, 123, 124, 229, 230, 544, 545, 546, 547, 548, 560, 649, 693, 694, 739, 756, 779, 780, 798], "frontier2": [756, 798], "fsspec": [827, 829, 832, 833], "fstab": 845, "ft": [707, 728, 751, 768, 792, 793], "full": [4, 26, 153, 191, 292, 299, 308, 711, 715, 717, 718, 720, 727, 731, 804, 817, 818, 819, 827, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 851, 852, 855, 858, 861, 862, 867, 868], "fulli": [4, 21, 692, 724, 822, 823, 849], "func": [34, 35, 53, 54, 350, 683, 707, 709, 753, 795, 855, 862], "funcanim": [818, 858, 861], "function": [0, 1, 4, 13, 21, 26, 27, 28, 34, 35, 53, 54, 64, 70, 71, 73, 89, 91, 92, 93, 94, 95, 96, 100, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 130, 146, 156, 168, 169, 183, 197, 213, 231, 234, 235, 238, 240, 242, 244, 245, 246, 249, 289, 292, 294, 298, 299, 302, 304, 305, 306, 307, 309, 312, 316, 317, 330, 333, 336, 337, 338, 339, 347, 348, 350, 379, 380, 381, 384, 388, 389, 392, 393, 394, 395, 396, 399, 400, 402, 403, 404, 405, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 448, 449, 453, 454, 457, 460, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 561, 564, 565, 566, 567, 569, 571, 576, 577, 579, 583, 584, 618, 635, 636, 638, 642, 643, 644, 645, 646, 647, 648, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 687, 690, 691, 693, 695, 696, 700, 706, 708, 709, 712, 713, 716, 717, 718, 721, 722, 725, 727, 728, 729, 730, 731, 751, 752, 753, 759, 760, 761, 764, 767, 768, 769, 771, 791, 792, 793, 794, 795, 802, 803, 804, 805, 808, 809, 811, 812, 814, 817, 818, 819, 820, 823, 827, 828, 829, 832, 833, 834, 837, 838, 845, 846, 849, 850, 851, 852, 853, 855, 858, 865, 868], "functional_datapip": [292, 298, 299, 307, 312, 712, 716, 720], "functool": [713, 827, 850, 858, 862], "fundament": [850, 858], "further": [45, 66, 68, 73, 79, 82, 91, 92, 93, 94, 100, 105, 113, 210, 292, 299, 696, 708, 725, 727, 816, 822, 823, 852, 862], "furthermor": [125, 130, 695, 702, 850], "fuse": [9, 216, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530], "fused_csc_sampling_graph": [296, 298, 302, 307, 316, 829], "fusedcscsamplinggraph": [298, 302, 307, 308, 316, 322, 323, 325, 712, 720, 827, 829, 832, 833], "futur": [6, 21, 183, 688, 721, 827, 829, 832, 833, 858, 862], "futurewarn": [827, 829, 832, 833], "fwtype": 560, "g": [0, 4, 5, 6, 9, 10, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 239, 240, 241, 242, 245, 246, 247, 248, 249, 286, 322, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 346, 347, 348, 349, 352, 378, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 438, 450, 451, 454, 455, 456, 457, 459, 460, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 571, 572, 573, 576, 577, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 724, 725, 727, 729, 730, 735, 736, 738, 739, 740, 743, 745, 746, 747, 748, 752, 753, 754, 756, 757, 758, 759, 760, 761, 764, 765, 767, 769, 770, 775, 776, 778, 779, 780, 781, 784, 786, 787, 788, 789, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 808, 809, 811, 812, 813, 816, 817, 818, 819, 822, 823, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867], "g1": [36, 37, 38, 89, 101, 102, 108, 122, 128, 129, 341, 380, 430, 431, 432, 433, 434, 435, 436, 437, 438, 447, 452, 460, 553, 554, 562, 564, 569, 573, 574, 575, 647, 648, 663, 683, 729, 769, 812, 851], "g1_node_feat": [430, 431, 432, 433, 434, 435, 436, 437, 438], "g2": [36, 37, 38, 95, 96, 101, 102, 122, 128, 129, 130, 341, 380, 430, 431, 432, 433, 434, 435, 436, 437, 438, 447, 452, 460, 553, 554, 563, 564, 569, 573, 574, 575, 647, 648, 663, 683, 729, 769, 812], "g2_node_feat": [430, 431, 432, 433, 434, 435, 436, 437, 438], "g3": [460, 663, 683], "g32": [703, 747, 788], "g32_2": [703, 747, 788], "g64": [703, 747, 788], "g64_2": [703, 747, 788], "g_": [4, 10, 671], "g_2": 333, "g_atom": 179, "g_batch": 183, "g_edg": [565, 566], "g_int": 64, "g_l": 851, "g_layer": 851, "g_list": 569, "g_long": 71, "g_m": 858, "g_nodes_explain": 426, "g_r": [725, 765, 809], "g_sort": [567, 576, 577], "g_t": 858, "gai": [849, 851], "gain": [720, 723, 763, 807, 823, 849, 850, 851, 852, 855, 858, 861, 862], "galleri": [21, 825, 834, 835, 836, 837, 838, 839, 840, 842, 843, 845, 846, 847, 849, 850, 851, 852, 855, 858, 861, 862, 865, 867, 868, 869], "game": [4, 27, 28, 30, 31, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 171, 214, 216, 219, 245, 246, 329, 330, 334, 335, 352, 380, 422, 423, 424, 478, 479, 542, 550, 555, 556, 557, 559, 642, 643, 644, 645, 652, 653, 658, 668, 669, 673, 683, 704, 748, 756, 789, 798], "gamma": [819, 851], "gamma_": [386, 453, 851], "gamma_k": 386, "gan": [849, 862], "gap": [178, 179, 431, 852], "gat": [352, 397, 721, 728, 793, 805, 822, 823, 853, 865], "gatconv": [389, 400, 708, 721, 752, 794, 805, 852], "gate": [408, 409, 431, 858], "gate_nn": 431, "gatedgcn": 408, "gatedgraphconv": 431, "gather": [9, 214, 215, 216, 302, 307, 501, 565, 718, 731, 756, 798, 829, 836, 851], "gathermm": 13, "gatlay": 852, "gatv2": 403, "gat\ub97c": 805, "gaussian": [14, 407, 453], "gb": [234, 292, 296, 297, 298, 299, 300, 301, 302, 307, 309, 310, 314, 315, 316, 317, 318, 328, 696, 712, 713, 715, 716, 718, 719, 720, 823, 827, 829, 832, 833, 868], "gcc": [695, 781, 816], "gclass": [421, 425, 426, 838], "gcmc": [757, 799], "gcmclayer": [727, 767, 811], "gcn": [134, 149, 155, 185, 187, 193, 209, 395, 396, 401, 410, 416, 438, 476, 670, 713, 715, 718, 720, 721, 723, 724, 757, 759, 763, 764, 793, 799, 802, 807, 808, 816, 823, 838, 851, 853, 855, 865], "gcn_model": 817, "gcn_msg": 849, "gcn_reduc": 849, "gcnii": 404, "gcnlayer": [817, 849], "gcnnorm": 13, "gcn\uc744": [801, 804], "gdata_pars": 148, "gdc": 13, "gdelt": [25, 164], "gdeltdataset": [691, 737, 777], "ge": 429, "gen": [827, 829], "gender": 835, "gene": [565, 566, 704, 748, 789, 852], "gener": [0, 1, 3, 4, 5, 7, 9, 10, 20, 34, 73, 91, 92, 93, 94, 100, 113, 117, 123, 124, 128, 129, 138, 139, 140, 141, 142, 143, 172, 174, 183, 189, 190, 207, 210, 211, 212, 213, 217, 220, 226, 227, 229, 291, 296, 306, 316, 336, 380, 386, 389, 390, 391, 397, 400, 421, 422, 423, 425, 427, 429, 450, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 550, 551, 553, 554, 558, 560, 561, 562, 564, 565, 571, 635, 649, 653, 671, 692, 693, 695, 696, 700, 703, 706, 707, 711, 713, 716, 717, 718, 719, 721, 723, 726, 727, 810, 819, 825, 826, 828, 829, 834, 835, 836, 837, 838, 839, 840, 842, 843, 845, 846, 847, 849, 850, 851, 852, 855, 860, 861, 862, 867, 868, 869], "generaliz": 852, "generic_join": 292, "gene\u76f8\u4e92\u4f5c\u7528\u8fb9": 748, "gene\u8282\u70b9": 748, "gentl": 849, "geom": [134, 149, 155, 185, 187, 193, 476], "geometr": [134, 149, 155, 185, 186, 187, 193, 407, 453, 476, 823], "geomgcndataset": [149, 155, 185, 187, 193], "get": [0, 1, 4, 22, 26, 30, 31, 42, 43, 44, 46, 48, 51, 56, 68, 70, 74, 77, 103, 104, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 209, 210, 231, 238, 244, 246, 287, 292, 293, 295, 297, 304, 314, 331, 336, 379, 382, 417, 427, 429, 438, 477, 479, 561, 565, 567, 571, 573, 576, 577, 645, 683, 686, 688, 689, 690, 692, 694, 696, 701, 704, 707, 713, 715, 716, 718, 725, 726, 729, 730, 765, 773, 775, 776, 786, 789, 798, 809, 816, 817, 818, 822, 827, 829, 842, 852, 858, 862, 867], "get_aggregate_fn": [725, 765, 809], "get_attent": [396, 397, 400, 402, 403, 431], "get_cmap": 851, "get_dataload": 867, "get_dataset": 862, "get_dist": [428, 549], "get_edge_partition_polici": 4, "get_edge_split": [689, 735, 775], "get_etype_id": [4, 643, 781], "get_group": 839, "get_idx_split": [689, 735, 775, 845], "get_log_prob": 858, "get_node_partition_polici": [4, 694, 780], "get_ntype_id": [4, 643, 781], "get_o": 862, "get_part_s": 4, "get_partition_book": [4, 692, 694, 738, 778, 780, 846], "get_seq_by_id": 862, "get_siz": 4, "ggnn": 431, "ghz": 179, "giant": 130, "gid": 573, "gilmer": [828, 836], "gin": [729, 769, 812, 838, 867], "ginconv": [729, 769, 812, 867], "gindataset": [421, 425, 426, 690, 729, 736, 769, 776, 812, 838, 867], "girvan": 167, "git": [695, 781, 816], "github": [135, 136, 151, 152, 153, 159, 162, 165, 168, 186, 210, 684, 695, 749, 781, 815, 816, 827, 829, 832, 833, 850, 851, 861, 862], "git\uc5d0\uc11c": 781, "give": [4, 11, 27, 114, 207, 244, 333, 477, 558, 572, 637, 682, 700, 701, 716, 786, 817, 827, 838], "given": [4, 5, 6, 9, 14, 22, 30, 31, 32, 35, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 79, 81, 82, 87, 88, 93, 109, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 148, 164, 183, 184, 197, 198, 200, 205, 208, 209, 213, 214, 216, 219, 220, 229, 230, 231, 232, 233, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 286, 289, 292, 296, 298, 302, 304, 307, 312, 317, 318, 329, 330, 337, 339, 341, 347, 384, 387, 389, 390, 391, 393, 395, 396, 397, 399, 400, 402, 403, 405, 406, 407, 410, 412, 413, 416, 423, 425, 428, 454, 460, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 551, 553, 554, 558, 560, 561, 564, 565, 566, 567, 568, 572, 576, 577, 596, 599, 600, 601, 603, 632, 637, 642, 645, 649, 651, 653, 660, 661, 663, 664, 666, 669, 683, 688, 693, 696, 702, 703, 718, 727, 729, 730, 731, 788, 822, 826, 829, 834, 837, 838, 839, 850, 852, 855, 858, 861, 862], "gklib": [695, 781], "gklib\uc744": 781, "glabel": 569, "glist": 341, "gloabl": 4, "glob": [371, 372, 373, 374, 375, 376, 430, 431, 432, 433, 434, 435, 436, 437, 438, 470, 471, 472, 473, 474, 475], "global": [4, 13, 128, 129, 164, 235, 236, 239, 382, 431, 448, 565, 635, 671, 816, 845], "global_test_eid": 846, "global_valid_eid": 846, "gloo": [692, 693, 738, 739, 778, 779, 845, 846, 867], "glorot": [395, 402, 403, 407, 409, 410, 413, 416, 418], "glove": [184, 855], "glove_emb": 184, "glove_embed_fil": 184, "gluon": [199, 200, 722, 806], "gluoncv": 816, "gluonnlp": 816, "gluon\u7684nn\u5757": 762, "gm_": [4, 10], "gml": [704, 789], "gnn": [4, 7, 12, 21, 135, 136, 137, 146, 151, 152, 153, 159, 162, 165, 169, 171, 180, 182, 188, 210, 213, 214, 215, 216, 219, 220, 296, 302, 352, 411, 421, 422, 423, 424, 425, 426, 458, 460, 565, 705, 711, 715, 719, 726, 727, 728, 730, 731, 749, 760, 766, 771, 790, 793, 797, 798, 801, 805, 810, 811, 813, 814, 815, 823, 825, 827, 828, 829, 839, 840, 841, 842, 849, 851, 852, 867, 868], "gnn_modul": 411, "gnnbenchmarkdataset": [135, 136, 151, 152, 153], "gnnexplain": [142, 143, 189, 190, 422], "gnnlayer": 411, "gnn\uc5d0": 804, "gnn\uc740": 797, "gnn\uc744": [798, 801, 811, 813], "gnu": [816, 842], "go": [14, 21, 22, 564, 815, 816, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "goal": 188, "goe": [4, 20, 21, 703, 713, 836, 837], "gone": 838, "good": [135, 136, 162, 837, 845, 852], "googl": [21, 821, 862], "gossipcop": 159, "got": 829, "goto": 156, "gp_": [4, 10], "gpb": [4, 239, 694, 780], "gpt": 862, "gpu": [6, 9, 10, 14, 21, 89, 108, 110, 112, 118, 119, 125, 126, 210, 248, 249, 286, 289, 290, 297, 314, 329, 336, 339, 347, 428, 457, 549, 558, 560, 564, 565, 566, 571, 585, 637, 638, 698, 707, 711, 715, 718, 719, 721, 726, 787, 792, 797, 801, 805, 810, 815, 816, 818, 819, 823, 825, 828, 829, 845, 855, 862, 870], "gpu_0": [10, 457], "gpu_cach": 210, "gpu\u56fe\u53ea\u63a5\u53d7gpu\u4e0a\u7684\u7279\u5f81\u6570\u636e": 746, "gpu\ub85c": [787, 799, 804], "gpu\ub97c": 801, "gpu\uc5d0": [787, 797, 800, 804], "gpu\uc5d0\uc11c": [783, 800], "graclu": 6, "grad": [9, 118, 119], "grad_fn": [9, 118, 384, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 399, 401, 402, 403, 404, 405, 407, 409, 410, 413, 415, 416, 417, 418, 431, 433, 434, 435, 438], "gradient": [4, 9, 10, 378, 382, 392, 411, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 692, 711, 721, 797, 805, 838, 845, 867], "gradscal": [721, 805], "gradual": [858, 861, 862], "graident\ub4e4\uc740": 805, "grain": [822, 842, 855], "granular": [164, 166], "grapbolt": 720, "graph": [3, 6, 9, 11, 13, 14, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 287, 288, 291, 294, 295, 296, 298, 299, 302, 303, 304, 307, 308, 309, 311, 312, 313, 316, 317, 318, 323, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 689, 691, 692, 697, 701, 702, 705, 706, 707, 708, 714, 719, 720, 721, 723, 725, 728, 735, 736, 737, 740, 741, 744, 745, 746, 747, 748, 751, 756, 764, 766, 767, 768, 769, 770, 771, 773, 775, 776, 777, 780, 781, 782, 783, 784, 785, 786, 787, 788, 792, 793, 795, 797, 798, 799, 800, 802, 804, 805, 809, 810, 811, 812, 813, 814, 816, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 836, 840, 841, 854, 855, 859, 860, 864, 868, 869, 870], "graph0": 688, "graph1": 688, "graph_data": [688, 704, 748, 789], "graph_degre": 183, "graph_edg": 839, "graph_emb": 858, "graph_embed_func": 858, "graph_feat": [128, 129, 425, 426], "graph_format": 239, "graph_hidden_s": 858, "graph_id": [688, 839], "graph_id_field": 688, "graph_index": 21, "graph_label": 569, "graph_list": 341, "graph_nam": [4, 239, 692, 693, 694, 695, 696, 738, 739, 740, 778, 779, 780, 781, 845, 846], "graph_op": 858, "graph_path": [691, 737, 777], "graph_pool": 862, "graph_prop": 858, "graph_prop_func": 858, "graph_properti": 839, "graph_sampl": [210, 211, 212], "graph_topologi": [827, 829, 832, 833], "graph_train": 846, "graph_transform": [439, 440, 441, 442, 443, 444, 445], "graphbolt": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 712, 713, 714, 716, 718, 719, 720, 827, 829, 830, 832, 833, 842, 868], "graphbolt_test": 308, "graphconv": [380, 385, 394, 401, 404, 411, 417, 418, 423, 425, 426, 713, 718, 721, 722, 724, 729, 731, 757, 758, 759, 761, 764, 769, 771, 799, 801, 802, 804, 806, 808, 812, 814, 834, 838, 849], "graphdataload": [421, 425, 426, 689, 690, 729, 735, 736, 769, 775, 776, 812, 819, 838, 867], "graphdataloader\uc758": 812, "graphemb": 858, "graphgp": 450, "graphic": 304, "graphmetadata": 296, "graphnet": 823, "graphorm": 449, "graphpartitionbook": [4, 231, 235, 236, 238, 240, 694], "graphpool": 862, "graphpr": 138, "graphprop": 858, "graphproppr": [138, 689, 735, 775, 819], "graphsag": [175, 181, 391, 395, 416, 692, 714, 715, 718, 720, 724, 731, 741, 758, 771, 782, 801, 802, 804, 808, 814, 827, 829, 836, 845, 846, 852, 868], "graphsage\u4e2dgcn\u805a\u5408\u4e0d\u9700\u8981fc_self": 764, "graphsage\u7684\u5b9e\u73b0": 761, "graphsage\ub97c": 778, "graphsage\uc5d0\uc11c": 814, "graphsaint": [160, 194, 217], "graphviz_layout": 855, "graphwis": 435, "graph\uc5d0": 798, "graph\uc758": [799, 804, 814], "great": 851, "greater": [131, 197, 286, 314, 329, 565, 566, 567, 842, 855], "greatli": [853, 865], "greedi": 6, "green": 828, "grid": [171, 172, 190], "grid_siz": 190, "groud": 814, "ground": [150, 154, 167, 176, 731, 814, 834, 846, 851, 858, 868], "group": [4, 20, 137, 166, 167, 182, 292, 350, 351, 411, 457, 692, 704, 716, 822, 836, 839, 851], "groupbi": 839, "grouplen": 173, "growth": 850, "grpah": 672, "gru": [409, 858], "grucel": 858, "gsddmm": 13, "gsddmmbackward": 9, "gspmm": 13, "gspmmbackward": [9, 403], "gt": [446, 447, 448, 449, 450, 451, 452, 453, 819, 827, 829, 832, 833], "gtlayer": 819, "gtmodel": 819, "guarante": [4, 101, 102, 226, 231, 238, 561, 867], "guid": [1, 3, 11, 21, 209, 210, 214, 215, 216, 217, 220, 222, 223, 224, 225, 637, 690, 695, 714, 731, 740, 790, 815, 845, 855], "guide_cn": [749, 766], "guidelin": 815, "guo": [855, 862], "gz": [687, 734, 774], "gz_file_path": [687, 734, 774], "gz\u6216": 734, "gz\u6587\u4ef6": 734, "h": [4, 5, 22, 25, 27, 28, 30, 34, 35, 43, 44, 46, 51, 53, 54, 56, 70, 73, 74, 77, 91, 92, 93, 94, 100, 103, 104, 108, 113, 114, 115, 116, 121, 128, 129, 145, 177, 178, 179, 244, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 346, 384, 385, 388, 389, 397, 398, 400, 402, 403, 404, 412, 417, 418, 421, 422, 423, 424, 425, 426, 451, 452, 453, 454, 455, 456, 460, 477, 479, 553, 554, 558, 559, 574, 575, 643, 644, 645, 647, 648, 656, 657, 658, 664, 669, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 702, 707, 709, 711, 717, 721, 724, 727, 729, 730, 731, 746, 751, 753, 755, 756, 758, 760, 764, 767, 769, 770, 771, 787, 792, 795, 797, 798, 801, 803, 805, 808, 811, 812, 813, 814, 816, 819, 820, 822, 828, 829, 834, 836, 837, 838, 846, 849, 850, 852, 855, 858, 862], "h1": [5, 47, 75, 380, 644, 665, 819], "h2": [5, 47, 70, 75, 380, 644, 665, 819], "h2h": 850, "h2o": 850, "h_": [120, 386, 391, 397, 402, 403, 408, 409, 413, 416, 422, 424, 724, 725, 764, 765, 808, 809, 820, 836, 849, 852, 855], "h_atom": 179, "h_cat": 855, "h_dict": [731, 771, 814], "h_dim": 850, "h_dst": [454, 717, 758, 760, 801, 803], "h_e": [392, 398, 414], "h_feat": [829, 834, 836, 837, 838], "h_g": [729, 769, 812], "h_head": [455, 456], "h_i": [384, 387, 388, 392, 393, 394, 395, 396, 398, 399, 402, 403, 405, 406, 407, 409, 410, 413, 414, 415, 416, 454, 458, 822, 850, 852, 862], "h_item": [731, 771, 814], "h_j": [384, 387, 392, 394, 396, 398, 399, 402, 403, 404, 405, 406, 410, 413, 414, 415, 416, 454, 850, 855], "h_jl": 855, "h_max": 5, "h_n": [392, 398, 414, 836], "h_neg_dst": 846, "h_neg_src": 846, "h_neigh": [717, 724, 760, 764, 803, 808], "h_new": 5, "h_pos_dst": 846, "h_pos_src": 846, "h_self": [724, 764, 808], "h_size": 855, "h_src": [454, 717, 760, 803], "h_sub_g": [704, 748, 789], "h_sum": [5, 128, 129], "h_t": 862, "h_tail": [455, 456], "h_total": 836, "h_u": [727, 767, 811, 828, 836, 837, 858], "h_user": [731, 771, 814], "h_v": [723, 727, 729, 763, 767, 769, 807, 811, 812, 828, 836, 837, 849], "h_x": 398, "ha": [4, 5, 9, 14, 22, 27, 28, 30, 31, 32, 34, 36, 37, 47, 48, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 107, 113, 114, 115, 117, 118, 119, 120, 122, 131, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 160, 162, 166, 167, 168, 170, 173, 175, 176, 184, 191, 192, 194, 220, 221, 230, 239, 245, 286, 289, 290, 292, 309, 329, 330, 334, 335, 336, 339, 346, 348, 380, 401, 410, 427, 428, 429, 453, 457, 478, 480, 542, 549, 553, 555, 557, 558, 561, 563, 564, 567, 571, 574, 575, 576, 577, 610, 637, 642, 647, 648, 686, 688, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 704, 707, 713, 714, 715, 717, 721, 722, 724, 726, 727, 729, 776, 784, 816, 819, 820, 822, 823, 831, 832, 835, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 858, 859, 862, 863, 865], "hadamard": 819, "half": [9, 141, 641, 707, 708, 792, 862], "halo": [235, 239, 348, 543, 695, 696, 781], "halo_hop": 239, "halt": [564, 862], "halt_and_accum": 862, "halt_dec": 862, "halt_enc": 862, "haltingunit": 862, "hamilton": 836, "hand": 696, "handcraft": [161, 163], "handl": [210, 291, 384, 396, 397, 399, 400, 402, 403, 404, 407, 410, 417, 503, 687, 688, 695, 696, 698, 700, 703, 707, 724, 725, 830, 835, 838, 852, 858, 862], "hang": [292, 868], "hao": 852, "happen": [210, 226, 561, 851], "happend": 164, "har": [853, 865], "hard": [21, 244, 477, 858], "hardwar": [719, 842], "harm": [302, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417], "harvard": 862, "has_cach": [156, 686, 691, 733, 737, 773, 777], "has_dupl": 822, "has_edges_between": [565, 566, 858], "has_nontree_edg": [230, 545], "has_original_eid": 829, "has_reverse_edg": [230, 545], "has_top": 781, "hasattr": 139, "hash": [156, 199, 200, 242, 687, 734, 774], "hash_kei": 156, "hat": [404, 408, 421, 422, 837, 849, 851, 861], "have": [4, 6, 9, 10, 14, 21, 22, 26, 34, 35, 48, 53, 55, 56, 57, 58, 60, 61, 68, 87, 88, 93, 94, 100, 115, 116, 117, 118, 119, 122, 125, 126, 130, 131, 161, 165, 171, 174, 180, 186, 188, 197, 205, 210, 211, 212, 214, 216, 219, 220, 226, 227, 230, 233, 234, 240, 241, 245, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 291, 292, 293, 295, 296, 297, 309, 314, 317, 329, 330, 333, 334, 335, 338, 339, 347, 348, 352, 380, 382, 383, 399, 412, 415, 417, 423, 424, 425, 426, 430, 432, 436, 437, 458, 478, 542, 543, 559, 560, 562, 564, 565, 566, 567, 568, 576, 577, 596, 599, 600, 601, 618, 628, 632, 636, 637, 642, 643, 645, 688, 690, 692, 693, 694, 695, 696, 697, 699, 701, 704, 707, 709, 711, 713, 715, 717, 718, 720, 721, 725, 727, 729, 731, 786, 789, 798, 819, 822, 827, 828, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 850, 851, 852, 855, 856, 858, 862, 865, 867, 868], "hdf": [341, 569, 700], "hdfs\u4e2d\u52a0\u8f7d\u6216\u5411s3": 744, "hdfs\u4fdd\u5b58\u56fe": 744, "hdfs\uc5d0": 785, "he": [95, 96, 117, 555, 556, 557, 559, 645, 653, 704, 707, 748, 751, 789, 792, 855, 858], "head": [9, 304, 389, 396, 397, 400, 402, 403, 412, 434, 435, 446, 448, 449, 450, 451, 452, 453, 455, 456, 721, 805, 839, 853, 863, 865], "head_dim": 819, "head_out": 852, "head_siz": 412, "header": [688, 832, 833], "head\uc758": 805, "heat": [178, 179, 661], "heatkernel": 13, "heavi": 195, "heavili": 707, "height": [189, 190], "height_in": 861, "height_in_i": 861, "height_out": 861, "height_out_i": 861, "held": 164, "help": [161, 292, 317, 643, 703, 704, 729, 830, 834, 851], "henc": [116, 126, 130, 135, 136, 151, 152, 153, 192, 249, 333, 339, 559, 636, 645, 700, 704, 789], "here": [5, 9, 21, 31, 145, 151, 152, 164, 166, 175, 177, 178, 179, 183, 184, 239, 380, 684, 688, 689, 690, 694, 695, 708, 709, 713, 718, 721, 723, 726, 727, 730, 776, 781, 817, 818, 819, 820, 823, 827, 828, 835, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862], "hereaft": 862, "hetergen": [245, 478], "hetero": 695, "hetero_block": [756, 798], "hetero_fronti": [756, 798], "hetero_graph": [726, 727, 730, 731, 766, 767, 770, 771, 810, 811, 813, 814], "heteroclassifi": [729, 769, 812], "heterodotproductpredictor": [727, 730, 767, 770, 811, 813], "heterogen": [1, 4, 7, 13, 26, 27, 28, 31, 34, 35, 36, 37, 38, 42, 47, 51, 53, 54, 65, 66, 72, 75, 77, 79, 82, 93, 94, 95, 96, 100, 101, 102, 108, 113, 114, 115, 116, 117, 140, 214, 216, 219, 220, 221, 222, 223, 224, 225, 239, 241, 245, 288, 292, 296, 299, 304, 309, 311, 317, 318, 327, 328, 329, 330, 334, 335, 379, 380, 381, 382, 384, 396, 399, 400, 402, 403, 404, 407, 410, 412, 417, 422, 423, 424, 478, 542, 555, 556, 557, 565, 576, 577, 636, 637, 642, 643, 644, 645, 651, 652, 653, 658, 659, 668, 669, 672, 673, 692, 695, 696, 698, 699, 706, 722, 724, 778, 783, 784, 795, 800, 806, 808, 830, 831, 855], "heterogenen": [113, 559], "heterogeneous_graph_nc_lp": 832, "heterograph": [1, 4, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 122, 125, 126, 130, 220, 245, 246, 330, 334, 335, 347, 352, 380, 382, 396, 397, 399, 400, 402, 403, 407, 410, 413, 416, 422, 423, 424, 478, 479, 542, 555, 556, 557, 559, 560, 563, 564, 565, 566, 636, 637, 642, 643, 644, 645, 651, 652, 653, 658, 668, 669, 673, 683, 688, 709, 714, 725, 726, 730, 731, 748, 756, 766, 770, 771, 789, 798, 809, 810, 813, 814, 858, 861], "heterographconv": [423, 713, 716, 718, 729, 731, 757, 759, 761, 765, 769, 771, 799, 802, 804, 812, 814], "heterogrph": [91, 92], "heteromlppredictor": [727, 767, 811], "heterophili": [120, 137, 171, 180, 182, 188, 244, 477], "heterophilousgraphdataset": [137, 171, 180, 182, 188], "hexadecim": [199, 200], "hg": [51, 55, 60, 61, 77, 87, 88, 90, 101, 102, 107, 352, 422, 423, 424, 425, 642, 643, 704, 712, 729, 748, 769, 781, 789, 812], "hg1": [36, 37, 38, 122, 683], "hg2": [36, 37, 38, 122, 683], "hg_2": 642, "hhhiddleston": 749, "hid_feat": [423, 729, 731, 769, 771, 812, 814], "hid_siz": [720, 721], "hidden": [168, 387, 398, 419, 434, 435, 449, 711, 723, 727, 731, 797, 807, 811, 850, 851, 852, 855, 862], "hidden_d": 419, "hidden_dim": [423, 426, 729, 769, 812, 820, 852], "hidden_feat": [387, 713, 718, 757, 759, 761, 799, 802, 804], "hidden_featur": [713, 718, 727, 730, 756, 757, 758, 759, 761, 767, 770, 798, 799, 801, 802, 804, 811, 813], "hidden_s": [168, 398, 449, 715, 716, 817, 818, 819, 827, 868], "hidden_x": [715, 716, 720, 827, 868], "hierarch": 183, "high": [239, 244, 424, 426, 455, 456, 477, 569, 693, 707, 708, 779, 816, 823, 826, 852, 861, 862], "high2low": [424, 426], "higher": [9, 214, 421, 422, 423, 424, 425, 426, 730, 851, 852, 861, 863, 865], "highest": [178, 179, 852], "highli": [390, 391, 685, 815, 823, 826, 842, 850], "highlight": [690, 720, 817, 818, 819, 820, 851, 862, 868], "hing": 802, "hint": [709, 795], "histogram": [852, 861], "histor": 159, "hold": [6, 36, 37, 125, 182, 210, 217, 247, 248, 296, 436, 652, 653, 673, 696, 704, 725, 836], "holist": 11, "home": [23, 139, 695, 781, 827, 829, 832, 833, 839, 845, 851, 855, 858, 861], "homebrew": 816, "homegen": [780, 812], "homo": [178, 179, 394, 395], "homogen": [1, 4, 6, 7, 9, 26, 27, 28, 34, 35, 36, 37, 38, 42, 47, 48, 53, 54, 55, 57, 60, 61, 65, 66, 75, 77, 79, 82, 87, 88, 90, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 122, 138, 139, 209, 210, 214, 215, 216, 219, 220, 222, 223, 224, 225, 239, 240, 245, 288, 294, 296, 304, 308, 309, 311, 317, 318, 327, 328, 330, 332, 334, 335, 336, 337, 338, 339, 347, 384, 396, 397, 399, 400, 402, 403, 404, 407, 410, 413, 416, 417, 421, 425, 426, 478, 542, 549, 552, 555, 556, 557, 558, 559, 560, 562, 564, 567, 572, 635, 637, 638, 642, 643, 644, 645, 652, 653, 658, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 688, 694, 695, 696, 699, 713, 716, 718, 724, 727, 729, 730, 731, 780, 781, 784, 789, 798, 799, 802, 804, 808, 811, 812, 813, 814, 830, 831, 832], "homogeneous_graph_nc_lp": 833, "homogeneous\uc5ec\uc57c": 803, "homograph": [41, 56, 688], "homophil": [162, 340, 476], "homophili": [13, 120, 243, 244, 340, 476, 477], "hood": [692, 695, 849, 867], "hook": [421, 422, 423, 424, 425, 426], "hook_iter": [827, 829], "hop": [219, 239, 302, 307, 333, 334, 335, 348, 417, 418, 421, 422, 423, 425, 543, 662, 818, 828, 829, 851, 852], "hop2j_list": 851, "host": [1, 2, 5], "hostil": 166, "hot": [165, 168, 171, 459, 835, 858], "hotel": 163, "hour": 166, "hous": [141, 142, 143], "how": [4, 9, 11, 21, 139, 162, 165, 220, 244, 394, 397, 403, 405, 410, 431, 433, 438, 477, 560, 561, 576, 577, 645, 685, 686, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 706, 708, 711, 715, 717, 718, 720, 721, 722, 723, 726, 727, 731, 756, 798, 804, 816, 817, 818, 819, 820, 825, 826, 827, 828, 830, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 845, 849, 850, 851, 852, 853, 858, 861, 863, 865, 867, 868], "howev": [4, 9, 21, 22, 171, 235, 292, 302, 307, 694, 696, 699, 703, 715, 724, 816, 828, 837, 838, 845, 851, 852, 855, 858, 862], "html": [9, 21, 145, 184, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 817, 818, 819, 820, 822, 827, 829, 832, 833, 842], "http": [9, 21, 23, 133, 134, 135, 136, 137, 144, 145, 146, 147, 151, 152, 153, 159, 161, 162, 163, 165, 167, 168, 169, 171, 173, 174, 175, 177, 180, 181, 182, 184, 186, 188, 195, 210, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 425, 426, 448, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 684, 690, 695, 720, 736, 749, 768, 776, 781, 816, 817, 818, 819, 820, 822, 823, 827, 829, 832, 833, 839, 842, 845, 858, 862], "hu": [707, 751, 792, 858], "huaiwen": 749, "huang": [749, 849, 851], "huge": 721, "hugectr": 210, "human": 852, "hundr": [696, 815], "hurt": 852, "hv": [96, 116, 117, 556, 559, 645, 704, 707, 748, 751, 789, 792, 858], "hv_init": 858, "hv_old": 858, "hx": [721, 805], "hy": [721, 805], "hyper": [4, 419, 852, 855], "hypercub": 172, "hyperedg": 820, "hyperedge_degre": 820, "hypergraph": 821, "hyperlink": [155, 187, 192, 193], "hyperparamet": [192, 404, 424, 426, 560, 730, 852], "hyperthread": 842, "h\u662f\u4ece5": [767, 770], "h\u73b0\u5728\u662f\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u5f20\u91cf\u5bf9": 760, "i": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 200, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 351, 352, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 481, 483, 486, 488, 501, 502, 503, 504, 507, 509, 513, 515, 521, 523, 527, 529, 542, 543, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 582, 585, 586, 596, 599, 600, 601, 602, 603, 610, 612, 614, 615, 616, 618, 621, 622, 624, 628, 635, 636, 637, 639, 640, 641, 643, 645, 647, 648, 649, 651, 652, 653, 660, 661, 663, 664, 666, 669, 670, 671, 675, 676, 677, 678, 680, 681, 682, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 747, 748, 751, 756, 764, 765, 770, 774, 775, 776, 780, 781, 784, 787, 788, 789, 792, 793, 798, 801, 803, 808, 809, 812, 813, 815, 816, 817, 818, 819, 820, 822, 823, 824, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 852, 855, 856, 858, 859, 861, 862, 863, 865, 867, 868], "i2h": 850, "i64": [695, 781], "i_": 412, "i_1": [116, 559], "i_2": 559, "i_j": 855, "i_n": 116, "ic": 862, "icew": 166, "icews18": [25, 166], "icon": 818, "id": [0, 4, 6, 13, 20, 26, 27, 32, 34, 35, 39, 44, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 77, 78, 87, 88, 90, 92, 93, 94, 95, 96, 100, 104, 107, 114, 115, 122, 123, 124, 125, 126, 130, 131, 133, 138, 140, 144, 184, 197, 205, 209, 220, 221, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 249, 286, 287, 292, 293, 295, 296, 297, 299, 304, 308, 309, 314, 317, 318, 323, 327, 328, 329, 330, 334, 335, 336, 348, 349, 350, 352, 378, 379, 382, 421, 422, 423, 424, 425, 427, 428, 429, 453, 478, 542, 543, 549, 550, 551, 555, 556, 558, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 576, 577, 637, 642, 643, 644, 645, 649, 677, 682, 688, 690, 692, 695, 703, 704, 710, 712, 713, 718, 720, 780, 788, 789, 798, 799, 802, 804, 820, 829, 832, 833, 835, 839, 850, 855, 862, 867], "id2etyp": 694, "id2ntyp": 694, "id_": 221, "id_tensor": 4, "idconvert": 694, "idea": [21, 22, 729, 730, 822, 837, 855, 862, 863, 865], "ideal": 852, "ident": [116, 220, 392, 404, 414, 565, 637, 652, 659, 692, 713, 730, 817, 818, 820, 822, 827, 868], "identifi": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 240, 246, 421, 422, 424, 426, 457, 480, 553, 555, 557, 574, 693, 694, 724, 727, 729], "idf": 161, "idna": [827, 829, 832, 833], "idtyp": [4, 54, 64, 71, 125, 126, 131, 248, 249, 286, 329, 550, 551, 703, 714, 747, 788], "idx": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 686, 690, 691, 733, 736, 737, 773, 776, 777, 819], "idx_b": 501, "idx_list": 341, "id\uac00": 781, "id\uac12\ub4e4\uc744": 780, "id\uac12\ub4e4\uc774": 776, "id\uac12\uc744": 781, "id\ub294": [780, 781, 789, 798], "id\ub4e4\uacfc": 780, "id\ub4e4\ub85c": 780, "id\ub4e4\uc5d0": 788, "id\ub4e4\uc640": 798, "id\ub4e4\uc740": [781, 789], "id\ub4e4\uc744": [780, 781], "id\ub4e4\uc758": [799, 802, 804], "id\ub77c\uace0": 788, "id\ub85c": [780, 788], "id\ub97c": [780, 781, 788, 789, 796, 799], "id\ub9cc\uc744": 781, "id\uc5d0": 781, "id\uc640": [780, 781, 799], "id\uc758": [780, 781, 788], "id\uc774\ub2e4": 781, "ie": 164, "ignor": [116, 133, 144, 200, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 421, 422, 423, 424, 425, 426, 688, 827, 829], "ignore_bipartit": 116, "ii": [404, 418], "ij": [352, 384, 386, 394, 396, 397, 398, 402, 403, 404, 407, 408, 409, 413, 418, 751, 792, 820, 822, 852, 861, 862], "ik": 852, "illustr": [694, 696, 703, 714, 817, 818, 819, 820, 832, 845, 846, 851, 862], "imag": [146, 160, 169, 823, 835, 838], "imaginari": 819, "imbal": [162, 696], "imdb": 186, "imdbbinari": [165, 867], "imdbmulti": 165, "immedi": [22, 41, 562, 852], "immunolog": 852, "impact": [14, 561], "impl": [827, 829, 832, 833], "implement": [0, 4, 6, 7, 9, 10, 14, 21, 22, 23, 197, 289, 298, 302, 307, 312, 386, 410, 427, 428, 446, 457, 481, 483, 486, 488, 507, 509, 513, 515, 521, 523, 527, 529, 558, 655, 685, 686, 687, 688, 690, 691, 692, 693, 694, 696, 706, 707, 708, 711, 713, 718, 719, 720, 724, 729, 731, 804, 815, 817, 818, 822, 826, 834, 836, 839, 852, 853, 855, 863, 865, 868], "impli": 850, "implicit": [89, 730, 770, 813, 822], "implicitli": [27, 114, 302, 307, 827, 829, 832, 833, 858], "import": [4, 5, 6, 9, 20, 21, 22, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 120, 122, 125, 126, 128, 129, 131, 137, 138, 141, 142, 143, 146, 147, 149, 155, 160, 169, 171, 173, 174, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 204, 214, 217, 218, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 292, 296, 297, 298, 299, 300, 301, 302, 307, 309, 314, 315, 316, 318, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 340, 341, 346, 352, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 476, 477, 478, 479, 480, 505, 542, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 565, 569, 571, 572, 573, 574, 575, 576, 577, 612, 635, 636, 638, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 700, 701, 702, 703, 704, 707, 708, 709, 712, 713, 717, 718, 721, 723, 724, 725, 726, 727, 728, 729, 731, 733, 734, 735, 736, 737, 738, 739, 744, 745, 746, 747, 748, 751, 752, 753, 756, 760, 761, 763, 764, 765, 766, 767, 768, 769, 771, 773, 774, 775, 776, 777, 778, 779, 780, 785, 786, 787, 788, 789, 792, 793, 794, 795, 798, 803, 804, 805, 807, 808, 809, 810, 811, 812, 814, 817, 818, 819, 820, 822, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867], "importance_sampl": [214, 565], "importerror": [817, 818, 819, 820, 822, 827, 829, 832, 833], "imposs": [567, 827], "impress": 852, "improv": [4, 10, 21, 660, 690, 721, 842, 850, 855, 858, 859, 862, 865], "in_": [387, 396, 397, 400, 402, 403, 407, 410, 416], "in_degre": [4, 87, 89, 447, 702, 724, 746, 759, 764, 787, 802, 808, 835, 851], "in_dim": [422, 424, 426, 727, 729, 767, 769, 811, 812, 852], "in_dir": 696, "in_edg": [88, 702, 746, 787, 851], "in_edge_feat": 397, "in_feat": [381, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 406, 407, 409, 410, 413, 415, 416, 417, 418, 421, 423, 425, 438, 454, 458, 692, 713, 717, 718, 720, 721, 723, 729, 731, 738, 757, 759, 760, 761, 763, 769, 771, 778, 799, 802, 803, 804, 805, 807, 812, 814, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851], "in_feat_nam": 670, "in_feats\u662f\u8f93\u5165\u7279\u5f81\u7684\u7ef4\u5ea6": 771, "in_featur": [713, 718, 727, 730, 756, 757, 758, 759, 761, 767, 770, 798, 799, 801, 802, 804, 811, 813, 849, 855], "in_indx": 861, "in_memori": [308, 315, 831, 832, 833], "in_nod": 861, "in_node_feat": 397, "in_siz": [381, 383, 392, 398, 412, 414, 715, 716, 720, 721, 817, 818, 820, 822, 827, 829, 868], "in_subgraph": [296, 298, 334, 542, 714, 756, 798], "in_test_mask": [197, 205], "in_train_mask": [197, 205], "in_valid_mask": [197, 205], "inbound": [214, 216, 219, 233, 240, 241, 296, 298, 330, 565, 566, 567, 568, 637, 798], "inc": 63, "incept": [670, 818], "incid": [13, 62, 63, 220, 244, 245, 246, 477, 696, 706, 713, 727, 791, 799, 820, 827, 837, 851], "includ": [4, 21, 22, 48, 62, 63, 132, 133, 138, 139, 144, 157, 158, 161, 162, 163, 170, 179, 191, 197, 205, 214, 216, 219, 230, 235, 239, 288, 308, 313, 318, 334, 335, 390, 399, 408, 415, 427, 429, 545, 560, 637, 688, 692, 695, 696, 699, 700, 707, 710, 719, 723, 724, 725, 727, 729, 730, 820, 828, 831, 832, 833, 837, 842, 852, 855, 858, 862], "include_dst_in_src": 637, "include_original_edge_id": [308, 322], "include_reverse_edg": [321, 713, 827], "inclus": [21, 207], "incom": [20, 61, 100, 117, 214, 216, 296, 330, 348, 352, 400, 481, 482, 483, 484, 486, 487, 488, 489, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 653, 706, 798, 836, 850, 852, 855, 862], "incomplet": [4, 210, 213, 687, 734, 774], "inconsist": [162, 386], "incorpor": [173, 731], "increas": [404, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 561, 692, 823], "increment": [564, 679, 827, 829, 858, 862], "incur": [245, 246, 292, 299, 330, 334, 335, 478, 479, 542, 719], "inde": [22, 637, 642], "indent": 781, "independ": [120, 574, 575, 647, 648, 704], "index": [4, 6, 21, 22, 95, 96, 108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 286, 287, 288, 293, 295, 297, 299, 309, 314, 329, 386, 404, 583, 584, 647, 648, 686, 690, 693, 696, 702, 720, 724, 736, 746, 773, 776, 787, 822, 827, 829, 832, 833, 845, 850, 862], "indic": [4, 6, 9, 12, 30, 31, 32, 53, 54, 62, 63, 101, 102, 131, 135, 136, 139, 140, 142, 143, 145, 146, 149, 151, 152, 169, 171, 180, 183, 185, 189, 190, 196, 209, 210, 213, 218, 220, 231, 238, 239, 240, 245, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 302, 304, 307, 309, 310, 311, 314, 316, 318, 323, 327, 328, 329, 338, 341, 348, 349, 393, 446, 448, 449, 459, 478, 501, 543, 560, 561, 563, 564, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 637, 645, 690, 693, 695, 696, 699, 703, 704, 707, 718, 720, 725, 728, 731, 771, 814, 817, 818, 819, 820, 822, 827, 828, 829, 832, 833, 834, 839, 845, 849, 850, 851, 852, 855, 858], "indices1": [618, 630], "indices2": [618, 630], "indirectli": 700, "individu": [121, 122, 166, 388, 433, 565, 696, 858], "indptr": [32, 296, 298, 302, 307, 309, 310, 316, 318, 328, 583, 584, 615, 616, 822], "induc": [26, 134, 197, 209, 217, 219, 233, 245, 246, 296, 298, 302, 307, 330, 334, 335, 421, 422, 423, 425, 435, 478, 479, 542, 566, 567, 568, 637, 713, 829, 835, 855, 862], "induced_dst": 637, "induced_src": 637, "induct": [160, 175, 194, 217, 391, 395, 416, 720, 852], "industri": 162, "ineffici": [14, 729], "inf": 448, "infeas": 715, "infer": [4, 131, 286, 289, 329, 459, 612, 614, 615, 616, 628, 642, 692, 696, 703, 711, 721, 758, 788, 801, 822, 842, 855, 858, 862], "inferenc": 842, "infin": [481, 483, 486, 488, 507, 509, 513, 515, 521, 523, 527, 529], "infinitesim": 392, "influenc": 134, "info": [203, 206], "info_path": [691, 737, 777], "inform": [4, 13, 22, 27, 28, 59, 95, 96, 101, 102, 114, 115, 116, 117, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 206, 220, 235, 236, 239, 244, 245, 246, 248, 249, 286, 291, 298, 302, 307, 313, 329, 330, 333, 339, 347, 386, 421, 422, 425, 457, 477, 478, 479, 542, 550, 551, 555, 556, 557, 559, 636, 643, 645, 646, 683, 684, 686, 688, 690, 691, 693, 694, 695, 696, 703, 704, 712, 728, 729, 731, 773, 777, 816, 831, 834, 836, 837, 838, 845, 850, 851, 852, 855, 858, 862, 868], "informat": 850, "infti": 419, "inher": [856, 865], "inherit": [309, 655, 686, 687, 693, 716, 722, 834, 839], "init": [4, 10, 379, 420, 423, 425, 457, 720, 723, 763, 807, 816, 819, 850, 852, 858, 861, 862], "init_att": 420, "init_beta": 384, "init_ep": [405, 406], "init_func": [4, 10, 457, 693, 739, 779], "init_graph": 861, "init_method": [867, 868], "init_model": 867, "init_node_activ": 858, "init_process_group": [234, 692, 693, 738, 739, 778, 779, 845, 846, 867, 868], "init_tmp": [423, 425], "initi": [10, 13, 27, 28, 70, 118, 119, 128, 129, 168, 197, 205, 207, 292, 308, 314, 352, 386, 395, 400, 402, 403, 404, 405, 406, 407, 409, 410, 413, 416, 417, 418, 419, 423, 425, 426, 446, 455, 456, 457, 459, 553, 554, 569, 574, 575, 647, 648, 660, 661, 666, 692, 694, 723, 738, 739, 741, 778, 779, 782, 818, 826, 827, 829, 849, 850, 851, 855, 858, 868], "initialize_hv": 858, "inner": [715, 730, 801, 813, 851], "inner_edg": [239, 695, 696], "inner_nod": [239, 695, 696, 781], "innermost": 307, "innov": 851, "inp_dropout": 419, "inplac": [21, 27, 28, 70, 89, 112, 346, 816, 855], "input": [4, 5, 6, 9, 20, 21, 34, 53, 56, 57, 58, 60, 73, 87, 100, 109, 110, 116, 118, 119, 121, 122, 126, 130, 131, 132, 133, 135, 136, 138, 140, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 210, 214, 216, 220, 222, 223, 224, 225, 231, 233, 238, 239, 240, 242, 245, 246, 247, 248, 249, 286, 292, 296, 298, 299, 300, 304, 307, 312, 318, 324, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 346, 347, 348, 349, 352, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 448, 449, 450, 451, 454, 455, 456, 459, 460, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 552, 553, 554, 555, 558, 559, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 596, 599, 600, 601, 602, 603, 610, 622, 636, 638, 642, 643, 644, 645, 646, 647, 648, 651, 652, 659, 660, 661, 664, 666, 670, 683, 686, 693, 694, 696, 703, 707, 711, 712, 713, 716, 717, 718, 723, 724, 725, 727, 728, 729, 731, 765, 769, 771, 773, 780, 781, 801, 803, 808, 809, 812, 814, 818, 819, 822, 826, 827, 828, 829, 836, 838, 845, 846, 849, 850, 851, 852, 855, 858, 862, 867, 868], "input_": [724, 764, 808], "input_col": [827, 829], "input_d": 419, "input_dict": 819, "input_dim": [422, 423, 424, 433], "input_dir": 781, "input_dst": [724, 764, 808], "input_feat": 408, "input_featur": [712, 718, 756, 757, 759, 761, 798, 799, 802, 804, 850], "input_id": [184, 379], "input_nod": [210, 214, 215, 216, 219, 220, 299, 304, 712, 715, 756, 757, 758, 759, 761, 798, 799, 801, 802, 804, 829, 845, 846], "input_nodes_timestamp": 296, "input_s": 867, "inputs\u662f\u8282\u70b9\u7684\u7279\u5f81": 769, "ins": 707, "insert": [298, 307, 312, 693, 712, 720, 739, 779, 829], "insert_revers": [132, 133, 144, 170], "insid": [21, 201, 294, 296, 304, 309, 318, 327, 328, 399, 407, 419, 460, 696, 729], "insight": [849, 850, 851, 852, 855, 858, 861, 862], "inspect": [695, 696, 853, 855, 865], "inspir": [171, 419, 818, 836], "instal": [21, 389, 390, 391, 689, 735, 775, 781, 817, 818, 819, 820, 822, 842, 845], "instanc": [14, 20, 133, 144, 156, 162, 165, 168, 172, 186, 209, 289, 290, 309, 380, 421, 422, 423, 424, 425, 426, 696, 699, 707, 713, 717, 718, 727, 731, 820, 827, 828, 829, 835, 837, 838, 842, 851, 862, 867], "instanti": [31, 73, 91, 92, 246, 313, 479, 674, 675, 676, 677, 678, 679, 680, 681, 682], "instead": [4, 9, 21, 48, 57, 80, 116, 118, 168, 177, 178, 179, 186, 214, 216, 219, 221, 302, 338, 421, 422, 423, 424, 425, 426, 435, 565, 566, 567, 568, 647, 648, 652, 693, 700, 704, 713, 715, 717, 729, 803, 820, 828, 838, 851, 852, 858, 861, 863, 865, 868], "institut": [696, 781, 850], "instruct": [21, 695, 816, 845], "instructon": 721, "instrument": 161, "insubgraph_sampl": 298, "int": [4, 6, 22, 27, 28, 34, 35, 38, 48, 53, 54, 55, 57, 58, 59, 60, 61, 71, 79, 80, 81, 82, 87, 88, 90, 93, 94, 95, 96, 100, 107, 114, 115, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 286, 290, 292, 296, 297, 299, 300, 304, 306, 307, 311, 316, 323, 326, 329, 330, 332, 333, 334, 335, 336, 337, 341, 348, 349, 350, 351, 378, 379, 381, 382, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 433, 434, 435, 436, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 478, 542, 543, 550, 551, 552, 555, 556, 560, 561, 562, 564, 565, 566, 567, 568, 570, 571, 572, 573, 595, 596, 598, 599, 600, 601, 602, 603, 612, 614, 615, 616, 617, 622, 628, 635, 643, 647, 648, 653, 660, 661, 662, 663, 666, 667, 670, 671, 674, 679, 688, 690, 701, 703, 720, 721, 731, 736, 747, 771, 776, 781, 786, 788, 805, 814, 827, 831, 832, 833, 836, 837, 838, 839, 855, 858], "int16": [147, 174], "int32": [4, 59, 64, 71, 118, 119, 125, 126, 131, 248, 249, 286, 309, 329, 390, 550, 551, 563, 568, 576, 577, 592, 605, 695, 696, 701, 703, 745, 747, 786, 788, 822, 829, 832, 833], "int64": [4, 31, 59, 64, 71, 125, 126, 131, 138, 147, 165, 168, 174, 184, 186, 195, 219, 245, 248, 249, 286, 296, 329, 330, 334, 335, 478, 542, 550, 551, 563, 565, 642, 656, 657, 688, 695, 696, 703, 747, 781, 788, 829, 835, 838, 839], "int8": [695, 696, 839], "integ": [22, 32, 39, 52, 78, 95, 96, 122, 125, 131, 138, 140, 142, 143, 189, 190, 200, 207, 210, 214, 216, 219, 239, 240, 248, 286, 296, 300, 311, 323, 329, 383, 390, 398, 412, 415, 429, 501, 504, 558, 567, 576, 577, 642, 643, 688, 694, 695, 696, 701, 703, 704, 786, 816, 835, 867], "integr": [166, 695, 722, 728, 826, 863, 865], "intel": 721, "inter": [851, 859, 865], "interact": [52, 166, 175, 178, 387, 565, 566, 692, 699, 704, 748, 789, 839], "interaction_cutoff": 386, "interatom": 178, "interest": [688, 692, 858, 862], "interfac": [4, 6, 20, 165, 235, 502, 503, 693, 694, 698, 701, 704, 709, 718, 835, 862], "intermedi": [307, 423, 425, 672, 707, 711, 849], "intermediari": 852, "intern": [1, 4, 20, 22, 39, 52, 78, 126, 131, 178, 179, 248, 249, 286, 329, 379, 566, 567, 576, 577, 693, 694, 700, 703, 707, 725, 809, 819, 827, 839, 851], "interpol": 562, "intersect": [56, 197, 205], "interv": [818, 858, 861], "intimid": 851, "intra": [174, 851, 859, 865], "intra_src": 851, "introduc": [22, 77, 134, 158, 173, 191, 242, 337, 390, 392, 406, 411, 446, 447, 448, 449, 450, 451, 452, 453, 552, 635, 643, 660, 661, 663, 666, 667, 671, 685, 689, 698, 704, 706, 714, 715, 722, 726, 729, 818, 826, 827, 851, 855, 862], "introduct": [698, 815, 836, 837, 838, 849], "introductori": 834, "inttensor": [567, 576, 577], "intuit": [22, 244, 477, 822, 867], "inv": 822, "inv_sigma": 407, "inv_vocab": 855, "invalid": [5, 173, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 446, 448, 449, 694, 724, 829, 849, 852], "invari": [434, 435], "invent": 836, "invers": [157, 820], "inverse_indic": [334, 335, 423, 425], "invert": [317, 855], "investig": 162, "invok": [4, 20, 22, 27, 34, 73, 93, 94, 100, 113, 114, 117, 126, 131, 156, 216, 234, 248, 249, 286, 329, 350, 380, 693, 694, 695, 696, 697, 704, 707, 721, 834, 845, 846, 867], "involv": [4, 21, 302, 304, 307, 317, 702, 712, 715, 716, 727, 729, 730, 731, 839, 849, 852, 867], "io": [162, 168, 186, 690, 736, 749, 776], "iostream": 22, "iou": 855, "ip": [696, 697, 782, 845, 846], "ip_addr1": [845, 846], "ip_addr2": [845, 846], "ip_addr3": 845, "ip_addr4": 845, "ip_config": [234, 692, 693, 696, 697, 738, 739, 741, 778, 779, 782, 845, 846], "ipynb": [834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "ipython": 818, "ip\u5730\u5740\u540e\u9762\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u7aef\u53e3": 741, "ip\u914d\u7f6e\u6587\u4ef6": 741, "irrespect": 862, "is_avail": [713, 718, 818, 862, 867, 868], "is_bf16_support": 721, "is_block": [717, 724, 725, 760, 764, 765, 803, 808, 809], "is_gdata": 4, "is_homogen": 322, "is_input_lay": 850, "is_last_lay": [715, 716, 827, 868], "is_libxsmm_en": 684, "is_pin": 89, "is_tempor": [145, 164, 166], "is_train": 862, "is_unibipartit": [44, 45, 79, 82, 104, 105], "is_valid": 858, "isab": 435, "isinst": [717, 720, 724, 725, 760, 764, 765, 803, 808, 809, 827, 829], "isn": 700, "isol": [130, 150, 245, 330, 334, 335, 542, 555, 703, 788, 798], "isomorph": [405, 406, 867], "isotrop": [178, 179], "issu": [21, 126, 131, 168, 248, 249, 286, 329, 687, 721, 734, 774, 827, 828, 829, 832, 833], "item": [4, 7, 22, 132, 133, 135, 136, 144, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 175, 176, 177, 178, 179, 181, 183, 191, 192, 194, 196, 220, 222, 223, 224, 225, 292, 299, 300, 301, 319, 320, 338, 380, 423, 563, 564, 688, 690, 698, 699, 712, 713, 714, 716, 719, 720, 721, 724, 725, 726, 727, 729, 730, 731, 736, 759, 764, 765, 766, 767, 769, 770, 771, 776, 783, 802, 805, 808, 809, 810, 811, 812, 813, 814, 819, 826, 827, 829, 832, 833, 837, 838, 849, 850, 851, 852, 855, 858, 867, 868], "item_feat": [727, 730, 731, 767, 770, 771, 811, 813, 814], "item_id": 832, "item_sampl": [292, 298, 299, 302, 316], "item_set": [292, 298, 299, 300, 301, 302, 307, 316, 712, 868], "itemsampl": [292, 298, 302, 307, 316, 712, 713, 715, 716, 718, 719, 720, 827, 829, 868], "itemset": [291, 292, 298, 299, 301, 302, 303, 307, 308, 313, 316, 712, 713, 716, 718, 719, 832, 833, 868], "itemsetdict": [291, 292, 299, 303, 308, 313, 712, 713, 718, 832], "item\uc744": 811, "iter": [0, 3, 4, 6, 7, 34, 35, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 92, 93, 94, 100, 114, 131, 165, 168, 172, 177, 178, 179, 186, 209, 210, 211, 212, 213, 220, 245, 286, 290, 292, 299, 300, 301, 302, 307, 329, 330, 334, 335, 385, 419, 423, 425, 429, 433, 478, 542, 555, 556, 644, 690, 703, 711, 713, 715, 716, 718, 719, 729, 761, 788, 798, 799, 801, 804, 818, 827, 829, 838, 858, 861], "iterabledatapip": 719, "iterate\ud558\uace0": [802, 804], "iterate\ud558\ub294": [801, 802, 804], "iterate\ud558\uba74\uc11c": [798, 812], "iterate\ud55c\ub2e4": [798, 812], "iterate\ud574\uc11c": 799, "iterating\ud558\ub294": 804, "iteration\ub9c8\ub2e4": 804, "iteration\uc744": 776, "iterator_id": [827, 829], "iteratordecor": [827, 829], "iterator\ub294": 804, "iterator\ub97c": 804, "iterdatapip": [289, 299], "iterrow": 839, "itertool": 837, "ith": [196, 207], "itr": [827, 829], "its": [1, 4, 6, 10, 14, 22, 26, 45, 47, 68, 75, 79, 82, 105, 109, 138, 141, 146, 164, 165, 167, 168, 169, 172, 173, 182, 186, 209, 217, 244, 309, 315, 318, 336, 352, 380, 404, 407, 410, 416, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 477, 565, 567, 571, 574, 575, 576, 577, 642, 643, 651, 672, 693, 694, 695, 696, 698, 703, 706, 712, 718, 721, 726, 727, 728, 729, 731, 818, 820, 822, 823, 828, 834, 838, 839, 845, 846, 849, 851, 852, 855, 858, 861, 862, 867], "itself": [21, 210, 427, 429, 552, 562, 564, 567, 572, 727, 820, 849, 851, 862], "j": [4, 10, 21, 126, 249, 336, 352, 378, 382, 386, 387, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414, 415, 416, 418, 427, 429, 453, 564, 572, 576, 577, 636, 652, 707, 751, 792, 820, 822, 850, 851, 852, 855, 861, 862], "j4": 816, "j_1": [116, 559], "j_2": 559, "j_n": 116, "jake": [855, 861], "jean": 855, "ji": [401, 405, 410, 416, 707, 862], "jinj": [861, 862], "jinja2": [827, 829, 832, 833], "jinyang": 861, "jk": [401, 855], "jl": 855, "job": [21, 696, 697, 867], "join": [142, 156, 292, 422, 424, 687, 691, 692, 696, 734, 737, 774, 777, 815, 832, 833, 845, 868], "joint": 858, "json": [4, 239, 692, 693, 694, 695, 696, 697, 704, 738, 739, 740, 741, 778, 779, 780, 781, 782, 816, 845], "json\u4e2d\u7684\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 740, "json\u6587\u4ef6\u5305\u542b\u6240\u6709\u5212\u5206\u7684\u914d\u7f6e": 740, "json\u7684json\u6587\u4ef6": 740, "json\uacfc": 789, "judici": [853, 865], "jump": [458, 852], "jupyt": [693, 779, 821, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "jure": 836, "just": [21, 22, 45, 79, 82, 105, 234, 694, 696, 704, 716, 729, 731, 832, 833, 838, 845, 846, 852], "k": [14, 21, 120, 121, 122, 178, 179, 183, 209, 219, 221, 222, 223, 224, 225, 226, 227, 332, 333, 334, 335, 336, 337, 340, 348, 349, 385, 386, 388, 392, 393, 401, 407, 412, 417, 418, 421, 422, 423, 425, 427, 429, 430, 431, 432, 434, 436, 437, 446, 450, 453, 459, 552, 558, 568, 571, 610, 611, 618, 635, 647, 648, 662, 663, 667, 670, 671, 716, 724, 725, 729, 730, 731, 759, 764, 765, 769, 770, 771, 802, 808, 809, 812, 813, 814, 819, 822, 836, 837, 851, 852, 855, 858, 861, 862], "k_i": 862, "k_j": 862, "k_proj": 819, "kai": 855, "karat": [167, 700, 744, 785, 818, 839], "karate_club": 839, "karateclub": 25, "karateclubdata": [690, 736, 776], "karateclubdataset": [818, 839], "karlsruh": 132, "karypislab": [695, 781], "kd": [14, 336, 427, 429, 571], "kdd": [151, 152], "kde": 861, "keep": [6, 22, 139, 140, 186, 233, 302, 347, 392, 558, 651, 708, 719, 851, 855], "keep_orig_edg": 651, "keepdim": [721, 805, 858, 861, 862], "kei": [22, 26, 27, 28, 73, 108, 114, 115, 121, 122, 131, 148, 178, 179, 205, 210, 213, 221, 223, 239, 240, 241, 245, 291, 294, 296, 301, 304, 309, 318, 327, 328, 329, 330, 334, 335, 348, 379, 380, 381, 422, 423, 424, 478, 542, 543, 558, 569, 688, 689, 690, 696, 709, 713, 718, 725, 735, 775, 819, 839, 845, 852, 855, 856, 858, 862, 863, 865], "kept": 130, "kera": [722, 806], "kernel": [5, 9, 34, 73, 93, 94, 100, 113, 168, 186, 386, 407, 434, 435, 453, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 661, 721, 815, 823, 845, 849], "kevin": 749, "keyerror": [723, 724, 763, 764, 807, 808], "keyword": [121, 134, 151, 152], "kg": [427, 429], "kgdata": [690, 736, 776], "khop_in_subgraph": 335, "khop_out_subgraph": 334, "khopgraph": 13, "ki": [401, 862], "kick": [817, 818, 819], "kind": [126, 210, 249, 313, 689, 852], "kipf": [817, 824, 834, 849], "kit": 842, "kl": 855, "knn": [336, 571], "knn_g": [336, 571], "knn_graph": [14, 571], "know": [21, 244, 477, 713, 730, 836, 839, 850, 868], "knowledg": [13, 21, 164, 166, 244, 456, 458, 477, 837, 850, 867], "knowledgegraphdataset": [157, 158, 191, 690, 736, 776], "known": [195, 459, 700, 855, 862], "known_host": 845, "konect": 167, "kv": 862, "kvstore": 4, "kwarg": [108, 121, 138, 139, 140, 210, 211, 212, 213, 215, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 421, 422, 423, 424, 425, 426, 439, 440, 441, 442, 443, 444, 445, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 756, 798, 827, 829], "l": [242, 339, 383, 384, 385, 387, 388, 391, 392, 393, 394, 395, 396, 398, 399, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 414, 415, 416, 421, 422, 423, 425, 426, 451, 459, 572, 610, 611, 618, 621, 629, 630, 664, 670, 711, 721, 724, 725, 730, 755, 756, 758, 764, 765, 770, 797, 798, 801, 805, 808, 809, 813, 817, 820, 822, 828, 836, 837, 845, 846, 849, 850, 851, 852, 855, 862], "l1": [428, 549], "l2": [336, 427, 428, 429, 549, 571, 723, 807, 850], "l2norm": 850, "l_": 851, "label": [4, 6, 13, 21, 25, 120, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 208, 213, 214, 216, 217, 219, 220, 230, 242, 243, 244, 289, 292, 299, 300, 301, 304, 308, 315, 330, 340, 341, 378, 421, 423, 425, 426, 459, 476, 477, 542, 545, 556, 558, 569, 686, 689, 690, 691, 696, 700, 712, 713, 716, 718, 720, 721, 726, 727, 729, 731, 735, 736, 737, 757, 761, 766, 767, 769, 771, 773, 775, 776, 777, 799, 804, 805, 810, 811, 812, 814, 817, 818, 819, 820, 827, 829, 831, 832, 833, 834, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 862, 867, 868], "label0_nod": 851, "label1": 851, "label_dict": [204, 341, 691, 737, 777, 839], "label_kei": [178, 179], "label_propag": 459, "labels_follow": 299, "labels_item": 301, "labels_lik": 299, "labels_us": 301, "labelsmooth": 862, "labor": [214, 302, 565], "laborsampl": 302, "lab\uc758": 790, "lacon": 818, "ladder": 172, "lake": 862, "lam": [419, 420], "lambda": [4, 34, 35, 404, 419, 420, 862], "lambda_": [388, 404], "lambda_max": [388, 393], "land": 552, "langl": [178, 179], "languag": [159, 164, 819, 835, 838, 855, 858, 862], "lapacian": 0, "laplacian": [337, 338, 388, 392, 419, 420, 450, 663, 819, 820], "laplacian_lambda_max": 388, "laplacian_p": 819, "laplacianp": [392, 450], "lapp": [13, 450], "larg": [3, 10, 11, 14, 22, 66, 123, 124, 125, 126, 131, 134, 168, 181, 209, 229, 230, 248, 249, 286, 292, 299, 308, 329, 336, 340, 391, 395, 411, 416, 427, 429, 457, 461, 476, 571, 637, 642, 649, 686, 691, 696, 705, 710, 714, 720, 724, 726, 729, 815, 816, 827, 828, 830, 837, 838, 851, 862], "larger": [178, 239, 292, 296, 299, 304, 312, 423, 425, 461, 565, 708, 731, 828], "largest": [131, 286, 329, 338, 388, 393, 436, 568, 635, 647, 648, 671, 703, 788, 851], "last": [4, 5, 9, 208, 210, 213, 214, 216, 292, 296, 299, 404, 410, 610, 643, 648, 697, 706, 707, 713, 724, 819, 827, 829, 849, 852, 868], "latent": 855, "later": [149, 155, 185, 187, 193, 296, 384, 476, 693, 696, 816, 837], "latest": [696, 858], "latter": [352, 421, 422, 423, 424, 425, 426, 561, 693, 708, 713, 863, 865], "launch": [4, 457, 692, 693, 696, 720, 741, 779, 782, 867], "law": 696, "layer": [13, 208, 210, 214, 215, 216, 219, 220, 296, 302, 304, 307, 379, 381, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 448, 449, 450, 454, 458, 560, 565, 693, 708, 711, 712, 713, 715, 716, 718, 719, 720, 721, 722, 729, 730, 731, 758, 801, 804, 805, 806, 814, 822, 827, 828, 829, 834, 836, 837, 838, 845, 846, 849, 852, 861, 863, 865, 868], "layer1": [849, 851, 852], "layer2": [849, 851, 852], "layer3": 851, "layer_depend": 214, "layer_id": 304, "layer_idx": [715, 716, 720, 827, 868], "layer_norm": 415, "layernorm": 862, "layer\uc640": 812, "layout": [31, 62, 63, 701], "lazi": [222, 223, 224, 225, 245, 246, 330, 334, 335, 478, 479, 542], "lazyfeatur": [222, 223, 224, 225], "lbrace": [186, 706, 750, 756, 791, 798], "ld_library_path": [695, 781], "ld_preload": 842, "ldot": [411, 458, 651], "lead": [384, 394, 396, 399, 400, 402, 403, 404, 407, 410, 417, 693, 701, 703, 724], "leaf": [159, 184, 424, 426, 855], "leak": 4, "leakag": [220, 712], "leaky_relu": [822, 852], "leakyrelu": [389, 397, 400, 402, 403, 822, 852], "learn": [4, 10, 13, 14, 23, 160, 179, 194, 217, 340, 378, 381, 382, 384, 389, 391, 395, 399, 400, 402, 403, 407, 416, 417, 420, 421, 422, 423, 425, 436, 450, 456, 458, 459, 476, 562, 650, 656, 657, 658, 660, 690, 716, 720, 726, 727, 729, 731, 790, 802, 815, 816, 818, 819, 822, 824, 827, 828, 829, 834, 835, 836, 837, 839, 849, 850, 851, 855, 856, 858, 861, 862, 865, 867, 868], "learn_beta": 384, "learn_ep": [405, 406], "learnabl": [4, 118, 119, 378, 382, 384, 386, 388, 389, 390, 391, 393, 394, 395, 397, 400, 402, 403, 404, 405, 406, 407, 409, 410, 413, 416, 417, 418, 419, 433, 447, 451, 452, 453, 454, 455, 456, 458, 552, 667, 693, 723, 779, 807, 818, 852, 858], "least": [21, 119, 161, 182, 419, 446, 449, 637, 831, 851, 852], "leav": [707, 823, 835, 837, 855], "left": [118, 340, 385, 388, 391, 397, 400, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 416, 431, 432, 453, 458, 502, 503, 504, 635, 670, 671, 706, 708, 724, 729, 730, 750, 756, 764, 770, 791, 798, 808, 813, 822, 828, 836, 837, 850, 852, 855, 862], "leftarrow": [836, 862], "legaci": 303, "legitim": 163, "len": [73, 138, 145, 146, 147, 164, 165, 166, 168, 169, 172, 174, 184, 186, 195, 207, 220, 298, 380, 458, 501, 505, 564, 571, 589, 611, 612, 615, 616, 630, 688, 690, 715, 716, 720, 721, 725, 727, 730, 731, 736, 756, 759, 765, 767, 770, 771, 776, 798, 802, 805, 809, 811, 813, 814, 818, 819, 827, 829, 837, 838, 839, 845, 846, 849, 850, 851, 855, 858, 861, 862, 867, 868], "length": [36, 37, 142, 164, 182, 205, 207, 217, 231, 238, 239, 287, 293, 295, 296, 297, 302, 307, 314, 333, 352, 388, 451, 504, 505, 543, 562, 563, 564, 567, 572, 610, 611, 693, 699, 701, 786, 822, 835, 856, 861, 862, 865], "leq": [855, 862], "leskovec": 836, "less": [118, 119, 139, 161, 226, 292, 299, 336, 427, 429, 451, 561, 571, 696, 703, 714, 852], "let": [43, 46, 74, 103, 126, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 501, 696, 706, 781, 818, 822, 827, 829, 832, 833, 845, 846, 849, 851, 858, 867], "level": [0, 5, 23, 120, 128, 129, 148, 425, 553, 554, 569, 647, 648, 693, 694, 696, 700, 707, 725, 729, 779, 819, 836, 838, 839, 842, 849, 852, 855, 858, 861, 863, 865], "level\uc758": 779, "leverag": [382, 390, 391, 708, 721, 818, 823, 851, 855, 859, 865], "levi": 672, "lexicograph": [123, 579], "lexicon": 144, "lg": [339, 672, 851], "lg1": 851, "lg_batch": 183, "lg_layer": 851, "lg_x": 851, "lgnn": [853, 865], "lgnncore": 851, "lgnnlayer": 851, "lh": 502, "lhs_data": [502, 503], "lhs_field": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], "lhs_target": 502, "li": [244, 397, 477, 661, 666, 670, 722, 749, 832, 833, 850, 852, 858, 861], "lib": [695, 781, 819, 827, 829, 832, 833, 842, 845, 849, 852], "libgoogl": 842, "librari": [8, 12, 21, 22, 720, 816, 822, 823, 842, 858], "libtcmalloc": 842, "libxsmm": 684, "licens": 815, "life": 4, "lifesci": [433, 438], "ligand": 386, "light": 22, "like": [9, 21, 22, 26, 116, 131, 162, 214, 216, 219, 226, 292, 299, 301, 302, 319, 320, 411, 423, 425, 560, 561, 687, 688, 693, 696, 704, 708, 713, 715, 717, 718, 723, 724, 726, 727, 729, 748, 767, 779, 789, 816, 829, 832, 833, 834, 836, 838, 839, 849, 862, 867], "like_edg": 832, "like_edges_path": 832, "like_orig_eids_0": 696, "liked_bi": 713, "likelihood": [561, 562, 730, 813, 851], "limit": [22, 243, 308, 715, 823, 827, 829, 832, 833, 851, 868], "limits_": [400, 850, 862], "lin": [405, 413, 418], "line": [22, 183, 339, 664, 693, 695, 696, 697, 701, 816, 825, 827, 829, 834, 845, 853, 854, 861, 865, 867], "line_graph": [183, 851], "line_graph_degre": 183, "linear": [381, 383, 395, 399, 405, 406, 408, 410, 412, 413, 414, 416, 418, 421, 422, 423, 424, 425, 431, 446, 454, 461, 708, 713, 716, 717, 718, 720, 723, 727, 729, 752, 757, 760, 763, 767, 769, 794, 799, 803, 807, 811, 812, 817, 818, 819, 820, 827, 836, 837, 849, 850, 851, 852, 855, 858, 862, 867], "linear_deg": 851, "linear_dst": [708, 752, 794], "linear_fus": 851, "linear_model": 378, "linear_prev": 851, "linear_radiu": 851, "linear_src": [708, 752, 794], "linearity\uc640": 804, "linearli": [383, 415, 817], "linegraph": 13, "lingfan": [850, 858], "link": [2, 13, 139, 149, 157, 158, 185, 191, 211, 214, 216, 220, 242, 289, 302, 304, 307, 454, 455, 456, 689, 693, 711, 712, 726, 729, 731, 735, 759, 775, 776, 802, 819, 825, 826, 829, 834, 840, 841, 847, 848, 851], "link_predict": [827, 832, 833], "linkpr": 139, "linkproppr": [689, 735, 775, 846], "linspac": 861, "lint": 21, "linux": 842, "list": [4, 10, 21, 22, 27, 36, 37, 39, 45, 52, 54, 56, 73, 78, 92, 95, 96, 105, 117, 119, 121, 122, 123, 124, 125, 130, 131, 145, 148, 159, 178, 179, 183, 196, 197, 205, 207, 208, 209, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 235, 239, 246, 248, 286, 289, 291, 292, 294, 298, 299, 300, 301, 302, 303, 304, 307, 308, 312, 315, 327, 329, 338, 341, 346, 347, 380, 382, 388, 392, 414, 415, 458, 460, 479, 545, 547, 558, 564, 565, 567, 569, 571, 576, 577, 581, 591, 614, 637, 642, 643, 649, 651, 653, 655, 658, 660, 669, 683, 688, 689, 690, 691, 695, 696, 703, 707, 712, 713, 718, 720, 724, 725, 729, 730, 731, 775, 776, 788, 812, 827, 831, 834, 835, 839, 842, 845, 851, 855, 858, 861, 862], "listen": 693, "liter": [133, 144], "literatur": 727, "littl": [21, 22, 70, 713, 729, 862], "live": [4, 850], "ll": 838, "load": [0, 2, 3, 138, 139, 140, 142, 143, 148, 156, 166, 179, 181, 184, 189, 190, 203, 204, 213, 235, 236, 237, 288, 304, 308, 314, 315, 325, 341, 421, 423, 425, 426, 685, 686, 690, 692, 693, 695, 711, 718, 720, 721, 733, 737, 744, 773, 775, 776, 777, 785, 805, 817, 818, 819, 826, 831, 832, 833, 836, 839, 845, 846, 849, 850, 851, 852, 858, 867], "load_cora": [851, 852], "load_cora_data": [849, 852], "load_data": 820, "load_edg": 237, "load_feat": 235, "load_graph": [204, 569, 691, 700, 704, 737, 744, 748, 777, 785, 789, 835], "load_info": [691, 737, 777], "load_nod": 237, "load_partit": [4, 239, 695, 696], "load_partition_book": [4, 695, 696], "load_partition_feat": [695, 696], "load_state_dict": 858, "load_subtensor": [692, 738, 778], "load_tensor": 696, "load_url": 858, "loader": [41, 209, 210, 211, 212, 213, 290, 851, 868], "loader_cor": 842, "local": [4, 23, 70, 197, 214, 231, 235, 238, 239, 341, 388, 393, 457, 565, 569, 686, 687, 690, 691, 692, 693, 695, 696, 773, 776, 781, 819, 827, 829, 834, 842, 845, 849, 852, 862], "local_edg": 781, "local_nod": 781, "local_node_idx": 781, "local_partit": 4, "local_scop": [421, 422, 423, 424, 425, 460, 717, 724, 727, 729, 730, 757, 759, 760, 764, 767, 769, 770, 799, 802, 803, 808, 811, 812, 813, 836, 837, 849], "local_to_global_nid": 382, "local_var": 70, "localhost": 21, "locat": [4, 146, 169, 231, 238, 610, 621, 686, 690, 695, 822], "lock": [10, 67, 89, 112, 842], "log": [23, 132, 133, 144, 170, 200, 387, 392, 404, 414, 421, 422, 424, 426, 730, 770, 813, 837, 851, 852, 858, 861], "log_prob": 858, "log_softmax": [849, 852, 855, 858], "logic": [156, 827, 829, 862], "logical_and": 781, "login": 845, "logisticregress": 378, "logit": [352, 421, 422, 423, 424, 425, 426, 716, 721, 727, 729, 731, 767, 769, 771, 805, 811, 812, 814, 817, 818, 819, 822, 827, 834, 836, 849, 850, 852, 855, 858], "logit\uc73c\ub85c": 811, "logn": 427, "logp": [849, 852, 855], "logsigmoid": 858, "lollipop": 172, "long": [4, 14, 22, 59, 64, 68, 118, 131, 286, 329, 452, 459, 589, 696, 703, 714, 716, 747, 788, 851, 855, 862], "longer": [827, 829, 832, 833, 856, 858, 865], "longest": [182, 572], "longtensor": [4, 226, 296, 298, 302, 307, 316, 318, 328, 379, 382, 409, 455, 456, 459, 560, 637, 693, 720, 739, 756, 779, 798, 819, 820, 835, 839, 851, 858], "look": [9, 21, 137, 171, 180, 182, 188, 221, 715, 717, 718, 727, 827, 829, 832, 833, 835, 855, 858, 862], "lookup": [22, 850], "loop": [21, 62, 63, 116, 117, 181, 226, 336, 384, 390, 394, 396, 399, 400, 402, 403, 404, 407, 410, 415, 417, 427, 428, 429, 549, 557, 561, 571, 653, 668, 692, 693, 695, 696, 699, 715, 778, 784, 804, 818, 820, 842, 851, 852, 858, 862], "loopi": 851, "loss": [4, 10, 304, 378, 382, 421, 422, 423, 424, 425, 426, 457, 692, 693, 712, 713, 716, 718, 720, 721, 727, 729, 730, 731, 738, 739, 756, 757, 759, 761, 767, 769, 770, 771, 778, 779, 798, 799, 802, 804, 805, 811, 812, 813, 814, 817, 818, 819, 820, 827, 828, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 858, 862, 867, 868], "loss_comput": 862, "loss_fcn": [692, 721, 738, 778, 817, 819, 845, 846], "loss_perm1": 851, "loss_perm2": 851, "loss\uac00": 805, "loss\ub97c": [804, 813, 814], "loss\uc5d0": 805, "lot": [22, 168, 186, 691, 714, 715, 729, 730], "low": [5, 239, 244, 336, 392, 424, 426, 427, 429, 455, 456, 477, 569, 571, 693, 694, 708, 779, 816, 852], "low2high": [424, 426], "lower": [22, 420, 690, 693, 736, 776, 836, 852, 861, 863, 865], "lowest": [178, 179], "lp": [455, 456, 832, 833], "lp_task": [832, 833], "lp_test_follow_neg_dst": 832, "lp_test_follow_neg_dsts_path": 832, "lp_test_follow_node_pair": 832, "lp_test_follow_node_pairs_path": 832, "lp_test_like_neg_dst": 832, "lp_test_like_neg_dsts_path": 832, "lp_test_like_node_pair": 832, "lp_test_like_node_pairs_path": 832, "lp_test_neg_dst": 833, "lp_test_neg_dsts_path": 833, "lp_test_node_pair": 833, "lp_test_node_pairs_path": 833, "lp_train_follow_node_pair": 832, "lp_train_follow_node_pairs_path": 832, "lp_train_like_node_pair": 832, "lp_train_like_node_pairs_path": 832, "lp_train_node_pair": 833, "lp_train_node_pairs_path": 833, "lp_val_follow_neg_dst": 832, "lp_val_follow_neg_dsts_path": 832, "lp_val_follow_node_pair": 832, "lp_val_follow_node_pairs_path": 832, "lp_val_like_neg_dst": 832, "lp_val_like_neg_dsts_path": 832, "lp_val_like_node_pair": 832, "lp_val_like_node_pairs_path": 832, "lp_val_neg_dst": 833, "lp_val_neg_dsts_path": 833, "lp_val_node_pair": 833, "lp_val_node_pairs_path": 833, "lpe": 450, "lr": [4, 10, 378, 382, 421, 422, 423, 425, 426, 457, 692, 693, 716, 720, 721, 738, 739, 741, 778, 779, 782, 805, 817, 818, 819, 820, 827, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 862, 867, 868], "lr1": [693, 739, 779], "lr2": [693, 739, 779], "lr_schedul": 819, "lsc": 288, "lsc_2part": 696, "lsc_chunk": 696, "lstm": [416, 433, 458, 723, 763, 807, 825, 856, 857, 859, 862, 865], "lt": [14, 819, 820, 827, 829, 832, 833], "lumo": [178, 179], "lut": 862, "lvert": [453, 723, 763, 807], "m": [5, 9, 21, 62, 63, 73, 91, 92, 93, 94, 100, 113, 126, 128, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 346, 383, 392, 398, 412, 414, 421, 422, 424, 427, 429, 435, 460, 567, 610, 611, 618, 621, 629, 630, 679, 680, 681, 682, 707, 709, 717, 721, 724, 728, 730, 751, 753, 760, 764, 768, 770, 792, 793, 795, 803, 805, 808, 813, 816, 820, 822, 828, 836, 849, 851, 858, 861], "m_": [398, 706, 750, 791, 828, 836], "m_i": 398, "m_r": 456, "m_v": [828, 836], "machin": [4, 177, 178, 179, 211, 212, 231, 238, 239, 457, 690, 692, 693, 694, 695, 696, 697, 721, 790, 815, 823, 825, 834, 839, 845, 846, 851, 855, 858, 859, 862, 865, 869, 870], "machine_id": 4, "made": [181, 421, 422, 423, 425, 850, 862], "mag": [288, 696, 718, 781], "mag240m": 288, "mag_lsc_partit": 696, "maggi": 749, "magnitud": 852, "mag\uc758": 781, "mai": [4, 6, 20, 21, 41, 116, 186, 214, 220, 226, 235, 292, 299, 317, 348, 383, 412, 415, 543, 561, 642, 643, 687, 688, 690, 692, 693, 696, 704, 712, 723, 724, 725, 727, 728, 729, 730, 731, 734, 774, 816, 818, 827, 829, 834, 835, 837, 839, 845, 850, 868], "mailbox": [5, 20, 100, 262, 263, 264, 265, 679, 680, 682, 707, 721, 724, 751, 764, 792, 805, 808, 836, 852, 855, 858, 862], "main": [4, 21, 210, 290, 692, 693, 719, 729, 769, 812, 822, 823, 827, 829, 832, 833, 842, 851, 852, 868], "mainland": 23, "mainli": [4, 693], "maintain": [4, 6, 10, 27, 28, 114, 115, 116, 117, 126, 130, 131, 145, 245, 246, 248, 249, 286, 290, 329, 330, 333, 339, 347, 478, 479, 542, 556, 559, 636, 645, 646, 729, 845, 855, 862], "major": [144, 231, 238, 701, 720, 722, 729, 786, 832, 845, 868], "make": [8, 20, 21, 22, 70, 120, 122, 137, 140, 162, 171, 180, 182, 188, 198, 210, 214, 215, 216, 226, 229, 230, 240, 241, 244, 292, 379, 405, 411, 416, 421, 422, 430, 432, 436, 437, 446, 449, 477, 561, 565, 567, 669, 675, 686, 687, 690, 691, 692, 693, 695, 697, 703, 707, 717, 718, 727, 729, 774, 781, 811, 816, 819, 825, 834, 835, 837, 840, 841, 855, 861, 862], "make_model": 862, "make_shar": 22, "makedir": [691, 737, 777, 832, 833], "malici": [827, 829, 832, 833], "manag": [287, 292, 295, 315, 693, 704, 816, 823, 868], "mandatori": [21, 831], "manhattan": [428, 549], "mani": [4, 22, 122, 214, 226, 561, 565, 685, 688, 693, 697, 700, 712, 722, 724, 819, 834, 835, 836, 837, 845, 855, 858, 862], "manifold": 407, "manipul": [0, 13, 22, 305, 852], "manner": 861, "manual": [4, 101, 102, 155, 168, 186, 187, 193, 384, 396, 399, 400, 402, 403, 404, 407, 410, 412, 415, 417, 695, 700, 815, 836, 842, 845, 868], "manual_se": 867, "map": [4, 5, 20, 26, 43, 46, 47, 74, 75, 101, 102, 103, 109, 121, 130, 131, 186, 220, 233, 239, 296, 299, 304, 309, 317, 318, 321, 323, 327, 328, 329, 379, 381, 382, 404, 413, 422, 423, 427, 429, 431, 543, 637, 645, 651, 688, 694, 695, 713, 724, 725, 764, 780, 808, 827, 835, 845, 851, 858, 862], "map_to_homo_eid": [4, 694, 780], "map_to_homo_nid": [4, 694, 780], "map_to_per_etyp": [4, 240, 694, 780], "map_to_per_ntyp": [4, 240, 694, 780], "mapper": 299, "mapperiterdatapip": [305, 827, 829], "margin": [730, 813], "mark": [144, 167, 222, 223, 224, 225, 242, 837], "marker": 861, "marketplac": 699, "markupsaf": [827, 829, 832, 833], "mask": [22, 132, 133, 140, 144, 150, 154, 157, 158, 159, 160, 161, 162, 163, 170, 173, 176, 181, 184, 191, 192, 194, 197, 198, 205, 216, 231, 238, 245, 421, 422, 423, 425, 446, 448, 449, 459, 478, 658, 686, 690, 721, 726, 727, 731, 756, 771, 773, 776, 798, 810, 814, 839, 845, 849, 852, 855, 862], "massiv": [695, 696, 711], "master": [21, 165], "mat": [632, 687, 690, 734, 736, 774, 776, 851], "mat_path": [690, 736, 776], "match": [4, 5, 9, 118, 199, 200, 296, 309, 346, 347, 350, 425, 460, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 564, 687, 734, 774, 822], "materi": [9, 89, 714, 835, 858], "materialize_data": 108, "math": [244, 400, 477, 647, 648, 707, 724, 784, 798, 813, 849, 851, 855], "mathbb": [706, 750, 791, 818, 819, 820, 858, 862], "mathbf": [400, 404, 409, 459], "mathcal": [243, 340, 352, 387, 390, 391, 392, 396, 398, 399, 400, 401, 402, 403, 405, 406, 407, 409, 410, 412, 413, 415, 416, 476, 502, 503, 574, 575, 651, 706, 707, 724, 725, 729, 730, 750, 751, 756, 764, 765, 769, 770, 791, 792, 798, 808, 809, 812, 813, 822, 828, 836, 837, 852, 855], "mathemat": [120, 243, 340, 389, 390, 401, 404, 410, 455, 456, 476, 610, 621, 708, 817, 818, 836, 849, 851], "mathrm": [118, 244, 384, 391, 396, 397, 400, 402, 403, 405, 406, 407, 409, 413, 416, 431, 433, 477, 724, 764, 808, 862], "matmul": [822, 850], "matplotlib": [818, 851, 855, 858, 861], "matric": [41, 62, 63, 118, 119, 183, 383, 400, 415, 446, 610, 613, 618, 619, 621, 630, 651, 700, 818, 821, 822, 849], "matrix": [0, 9, 13, 14, 30, 31, 32, 62, 63, 118, 119, 126, 131, 146, 169, 177, 249, 286, 329, 332, 333, 336, 339, 385, 393, 394, 395, 397, 403, 404, 407, 410, 417, 418, 427, 428, 429, 451, 456, 459, 461, 501, 502, 503, 504, 549, 567, 571, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 651, 660, 661, 666, 670, 700, 708, 720, 727, 728, 767, 811, 815, 817, 818, 819, 820, 821, 835, 849, 850, 852, 853, 865], "matrix\uc774\ub2e4": 780, "matter": [21, 297, 433, 851, 852, 862], "mat\u6587\u4ef6\u4e0b\u8f7d\u5230\u76ee\u5f55": 734, "max": [5, 9, 73, 117, 340, 342, 343, 380, 388, 391, 392, 405, 407, 413, 414, 432, 458, 481, 486, 503, 505, 507, 513, 521, 527, 553, 554, 576, 577, 614, 615, 616, 628, 653, 703, 707, 709, 723, 724, 730, 731, 751, 753, 763, 764, 770, 771, 788, 792, 795, 807, 808, 813, 814, 822, 849, 851, 858, 861, 863, 865, 867], "max_": [399, 432], "max_allow_nod": 168, "max_degre": 447, "max_depth": 862, "max_dist": 452, "max_in_degre": [389, 390, 391], "max_len": 451, "max_node_typ": 453, "max_num_nod": [168, 186], "max_num_v": 172, "max_queue_s": 234, "maxim": [6, 231, 234, 238, 378, 696, 836, 842, 858], "maximum": [6, 118, 119, 168, 172, 186, 389, 390, 391, 392, 399, 414, 446, 447, 448, 449, 451, 452, 453, 560, 596, 599, 670, 729, 730, 813, 852, 856, 862, 865], "mayb": 21, "mb": [696, 825, 841, 844, 848, 854, 857, 860, 864, 866, 870], "mcaulei": [135, 136], "mckee": 558, "mct": [424, 426], "md": [210, 816, 827, 829, 832, 833], "mean": [4, 5, 9, 10, 73, 117, 137, 147, 150, 154, 176, 177, 180, 210, 211, 212, 239, 292, 294, 296, 299, 304, 307, 309, 318, 328, 344, 345, 352, 380, 391, 392, 404, 405, 407, 410, 413, 414, 416, 421, 422, 424, 427, 428, 429, 430, 431, 433, 434, 436, 437, 482, 487, 503, 505, 508, 514, 522, 528, 550, 551, 553, 554, 596, 600, 636, 637, 645, 653, 673, 693, 703, 707, 709, 715, 716, 717, 720, 721, 723, 724, 727, 730, 731, 751, 753, 760, 763, 764, 767, 770, 771, 779, 788, 792, 795, 802, 803, 805, 807, 808, 811, 813, 814, 817, 818, 819, 822, 827, 829, 834, 836, 837, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 868], "mean_nod": [422, 423, 424, 425, 729, 769, 812, 838], "mean_udf": 836, "meaning": 728, "meaningless": 116, "meant": [22, 700], "measur": [13, 120, 161, 243, 244, 336, 340, 424, 426, 427, 429, 455, 456, 476, 477, 571, 852, 862], "mechan": [5, 20, 22, 451, 452, 453, 719, 728, 819, 851, 852, 858, 862, 863, 865, 868], "medium": 14, "meet": [385, 818], "mem": [10, 825, 841, 844, 848, 854, 857, 860, 864, 866, 870], "member": [21, 423, 425, 707, 836, 837, 839, 851, 867], "memmap": 696, "memo": 5, "memori": [4, 9, 10, 14, 67, 89, 112, 126, 131, 184, 210, 234, 248, 249, 286, 291, 292, 296, 297, 299, 311, 314, 315, 325, 329, 336, 351, 427, 429, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 561, 571, 643, 692, 696, 703, 708, 711, 714, 715, 721, 805, 816, 823, 830, 831, 832, 833, 837, 855, 862], "meng": 749, "mention": [693, 695, 696, 715, 862], "merg": [21, 229, 230, 683, 704, 707, 709, 725, 727, 789, 838, 851, 852], "merit": 22, "merlin": 210, "messag": [1, 13, 53, 73, 91, 92, 93, 94, 100, 113, 127, 130, 131, 178, 179, 208, 210, 211, 212, 214, 215, 216, 219, 220, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 384, 385, 386, 387, 390, 392, 394, 396, 399, 400, 402, 403, 404, 405, 407, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 424, 425, 426, 481, 482, 483, 484, 486, 487, 488, 489, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 544, 545, 546, 547, 548, 565, 637, 674, 675, 676, 677, 678, 679, 680, 681, 682, 695, 705, 713, 715, 716, 717, 718, 722, 723, 725, 726, 729, 731, 749, 790, 795, 798, 799, 802, 804, 805, 810, 814, 815, 829, 835, 837, 850, 852, 853, 856, 858, 863, 865], "message_func": [73, 91, 92, 93, 94, 100, 113, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 544, 545, 546, 547, 548, 707, 709, 710, 751, 753, 754, 792, 795, 796, 836, 850, 852, 855, 858, 862], "meta": [4, 148, 291, 313, 382, 457, 688, 694, 696, 855], "meta_g": 72, "metadata": [4, 235, 239, 287, 293, 295, 296, 313, 314, 688, 693, 694, 695, 696, 697, 720, 781, 827, 829, 830, 831, 832, 833, 868], "metadata_path": [832, 833], "metagraph": [13, 26, 101, 102, 117, 119, 122, 127, 130, 131, 173, 220, 245, 329, 330, 334, 335, 422, 478, 542, 550, 559, 642, 645, 672, 683, 688, 704, 748, 789], "metapath": [347, 382, 560, 563, 564, 651], "method": [1, 22, 89, 112, 160, 194, 208, 209, 210, 217, 218, 220, 221, 231, 238, 239, 289, 298, 307, 312, 336, 340, 379, 380, 383, 388, 400, 402, 403, 416, 427, 429, 476, 505, 544, 546, 560, 571, 643, 688, 700, 703, 711, 712, 715, 716, 726, 727, 828, 834, 835, 837, 839, 842, 849, 850], "methodologi": [637, 715, 730], "meti": [4, 6, 209, 231, 238, 239, 348, 349, 558, 696, 740, 781, 845], "metirs\ub97c": 781, "metis_partition_assign": [209, 558], "metis\u4ec5\u5e73\u8861\u6bcf\u4e2a\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u6570": 740, "metis\u5212\u5206\u7684\u597d\u5904\u5728\u4e8e": 740, "metis\uc640": 781, "metis\uc740": 781, "metis\uc758": 781, "metric": [21, 336, 427, 428, 429, 549, 571, 715, 827, 829, 837, 845, 846], "metric\uc744": 801, "mf": 868, "mfg": [127, 131, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 713, 716, 718, 799, 802, 804, 828, 829, 846], "mfg\uac00": 798, "mfg\ub4e4\ub85c": 798, "mfg\ub4e4\uc740": 798, "mfg\ub4e4\uc758": [798, 799, 804], "mfg\ub85c": 798, "mfg\ub97c": [798, 804], "mfg\uc5d0": 803, "mfg\uc5d0\uc11c": 803, "mfg\uc5d0\uc11c\uc758": 798, "mfg\uc758": [798, 799, 804], "mfg\uc778": 803, "mgf\uac00": 803, "mha": 819, "michal": 839, "michel": 167, "micro": 852, "microbenchmark": 823, "microsoft": [151, 152, 288, 696], "middl": [142, 143], "might": [347, 386, 699, 709, 729, 842, 851], "migrat": 21, "mikhail": 850, "million": [457, 711, 721, 815, 829], "min": [5, 9, 73, 117, 242, 380, 391, 392, 414, 483, 488, 503, 505, 509, 515, 523, 529, 553, 554, 612, 653, 707, 709, 723, 730, 751, 753, 763, 770, 792, 795, 802, 807, 813, 822, 851], "min_num_v": 172, "mind": [692, 851], "mine": [132, 171], "minesweep": 171, "mini": [4, 7, 165, 168, 172, 186, 208, 210, 220, 305, 690, 692, 693, 710, 711, 714, 718, 724, 729, 778, 815, 826, 838], "mini_batch": [713, 718], "mini_cn": 738, "mini_feature_dataset": 688, "mini_featureless_dataset": 688, "mini_hetero_dataset": 688, "mini_multi_dataset": 688, "minibatch": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 289, 292, 299, 305, 316, 321, 711, 715, 719, 799, 825, 826, 827, 828, 829, 831, 838, 869, 870], "minibatch_transform": [827, 829], "minibatcher_default": [292, 299], "minibatchtransform": [294, 306, 312, 713, 827, 829], "minigcdataset": [690, 736, 776], "minim": [8, 21, 22, 239, 349, 378, 688, 695, 696, 718, 719, 730, 851, 852], "minimum": [6, 9, 172, 186, 296, 392, 414, 596, 601, 669, 707, 729, 851], "minji": [849, 851, 852, 855], "minkowski": [428, 549], "minst": 169, "minut": [164, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "misc": 13, "miss": [688, 827, 850, 852], "mix": [9, 14, 306, 414, 705, 707, 790, 792, 851, 853, 865], "mixtur": [183, 407], "mkdir": [816, 845], "ml": 173, "mle": 858, "mlp": [398, 414, 419, 450, 727, 729, 769, 812, 837], "mlppredictor": [727, 767, 811, 837], "mlp\ub97c": 811, "mlsoar": 749, "mm": 851, "mmap": [832, 833], "mmap_mod": 314, "mnist": [14, 169, 861], "mod": [380, 725, 765, 809], "mod_arg": [380, 725, 765, 809], "mod_kwarg": [380, 423, 725, 765, 809], "mode": [4, 147, 164, 166, 174, 175, 184, 195, 209, 217, 234, 348, 349, 458, 460, 691, 737, 777, 816, 818, 827, 829, 832, 833, 855, 862], "model": [4, 7, 9, 12, 14, 23, 70, 120, 158, 159, 167, 183, 191, 197, 205, 210, 213, 222, 223, 224, 225, 292, 378, 382, 383, 387, 389, 390, 401, 407, 409, 410, 411, 413, 415, 417, 418, 421, 422, 423, 424, 425, 426, 434, 435, 450, 455, 458, 461, 560, 562, 690, 692, 693, 697, 699, 704, 709, 712, 714, 715, 719, 720, 721, 722, 724, 728, 730, 738, 739, 756, 757, 759, 761, 767, 769, 770, 771, 778, 779, 798, 799, 802, 804, 805, 811, 812, 813, 814, 815, 816, 817, 818, 820, 822, 823, 825, 832, 833, 834, 835, 836, 851, 852, 853, 854, 855, 856, 857, 860, 862, 864, 866], "model_opt": 862, "model_typ": 450, "model_zoo": 858, "modelnet": 14, "modif": [446, 449, 692, 845, 846], "modifi": [8, 148, 149, 155, 185, 187, 193, 198, 290, 446, 449, 639, 640, 641, 718, 728, 815, 816, 845], "modul": [4, 6, 8, 13, 18, 21, 234, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 660, 661, 662, 663, 664, 666, 667, 670, 692, 705, 711, 713, 715, 716, 718, 720, 721, 726, 727, 729, 730, 731, 757, 758, 759, 760, 761, 763, 765, 767, 769, 770, 771, 799, 801, 802, 803, 804, 805, 806, 807, 809, 811, 812, 813, 814, 817, 818, 819, 820, 822, 825, 827, 828, 829, 832, 833, 834, 837, 838, 840, 841, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "modular": 696, "moduledict": [422, 424, 717, 725, 760, 765, 803, 809], "modulelist": [715, 716, 720, 721, 805, 818, 819, 827, 845, 846, 850, 851, 852, 858, 868], "mol": [178, 179], "mol_encod": 819, "molass": 749, "molecul": [177, 178, 179, 438], "molecular": [178, 179, 195, 386, 433, 438, 453, 838], "moleculenet": 179, "molhiv": [138, 689, 735, 775, 819], "moment": [178, 179, 392, 414, 558], "moment3": [392, 414], "moment4": [392, 414], "moment5": [392, 414], "monitor": 861, "mont": [424, 426], "month": [163, 181], "monthli": [149, 185], "more": [3, 4, 9, 20, 21, 22, 27, 28, 66, 91, 95, 96, 120, 122, 156, 161, 168, 214, 216, 226, 230, 244, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 292, 333, 386, 404, 421, 422, 423, 425, 457, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 561, 566, 567, 637, 643, 688, 690, 691, 692, 693, 696, 700, 704, 708, 710, 711, 712, 713, 714, 718, 719, 720, 723, 725, 727, 729, 731, 748, 789, 815, 816, 818, 820, 822, 827, 829, 832, 833, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867], "moreov": [118, 119], "most": [1, 14, 116, 126, 131, 147, 151, 152, 159, 182, 226, 248, 249, 286, 329, 424, 426, 560, 637, 690, 691, 693, 694, 703, 707, 712, 717, 721, 727, 728, 729, 731, 822, 827, 829, 834, 842, 862], "mostli": 22, "motif": [141, 142, 143, 189, 190, 852], "mount": 845, "move": [4, 89, 108, 582, 585, 687, 694, 718, 818, 862], "movement": [245, 246, 330, 334, 335, 478, 479, 542, 719], "movi": [43, 173, 851], "movielen": 173, "mp": [292, 867, 868], "mpicc": [695, 781], "mpirun": [695, 781], "mpmath": [827, 829, 832, 833], "mpnn": [413, 433], "mq": 567, "msbuild": 816, "msg": [262, 263, 264, 265, 412, 849, 850, 851, 862], "mu": [178, 179, 407, 453], "mu_": 412, "mu_k": 407, "much": [4, 122, 139, 244, 477, 561, 565, 708, 815, 823, 828, 845, 850, 852, 858, 862], "mufei": [850, 852, 858], "muhyun": 790, "mul": [9, 258, 259, 272, 273, 282, 283, 446, 449, 497, 498, 502, 503, 520, 521, 522, 523, 524, 525, 538, 539, 624, 707, 751, 792, 822], "mulbackward0": 9, "multi": [9, 41, 149, 158, 162, 185, 191, 194, 292, 300, 389, 396, 400, 401, 402, 403, 412, 446, 449, 451, 452, 453, 455, 457, 550, 551, 646, 690, 696, 701, 714, 718, 730, 731, 815, 825, 827, 829, 834, 835, 836, 845, 850, 853, 863, 865, 869, 870], "multi30k": 862, "multi_update_al": [422, 424, 709, 725, 753, 765, 795, 809], "multiclass": [165, 423, 424, 425, 426, 459, 820, 868], "multidigraph": [72, 642], "multigraph": [48, 66, 118, 119, 699, 784, 858], "multihead": 434, "multiheadattent": 862, "multiheadgatlay": 852, "multilabel": 459, "multilay": [214, 215, 216, 302, 565, 718, 727], "multilayerdropoutsampl": [756, 798], "multilayerfullneighborsampl": [756, 757, 758, 759, 761, 798, 799, 801, 802, 804], "multilayerneighborsampl": [210, 693, 739, 756, 779, 798, 845, 846], "multilevel": [348, 349], "multinomi": [716, 759, 802], "multipl": [0, 4, 7, 9, 14, 22, 26, 27, 28, 36, 37, 41, 43, 46, 47, 48, 51, 52, 54, 55, 56, 57, 60, 61, 65, 74, 75, 77, 87, 88, 90, 91, 92, 95, 96, 103, 107, 118, 126, 128, 129, 130, 131, 229, 230, 239, 248, 249, 286, 287, 291, 295, 296, 302, 307, 308, 315, 329, 336, 338, 341, 379, 380, 382, 387, 414, 423, 425, 427, 428, 429, 438, 446, 449, 457, 458, 501, 502, 503, 504, 549, 553, 554, 557, 560, 564, 565, 569, 571, 574, 575, 585, 610, 618, 619, 621, 636, 637, 645, 651, 655, 692, 693, 694, 696, 699, 703, 709, 714, 717, 719, 725, 729, 730, 731, 795, 816, 818, 819, 823, 832, 833, 834, 837, 842, 845, 849, 850, 852, 853, 858, 862, 865, 867, 868], "multipli": [5, 183, 216, 392, 414, 421, 422, 553, 554, 610, 611, 618, 621, 626, 629, 630, 707, 721, 728, 817, 822, 850, 862], "multiprocess": [4, 290, 719, 867, 868], "multiprocessingwrapp": [827, 829], "multpli": 728, "music": [137, 161], "must": [4, 6, 9, 27, 28, 34, 35, 36, 37, 43, 46, 48, 51, 53, 54, 55, 57, 58, 60, 61, 73, 74, 87, 88, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 113, 118, 119, 122, 125, 130, 131, 138, 139, 140, 147, 164, 174, 175, 197, 198, 205, 209, 210, 211, 212, 214, 216, 218, 219, 220, 240, 241, 245, 248, 249, 286, 287, 293, 295, 296, 297, 302, 307, 314, 315, 329, 330, 332, 334, 335, 337, 338, 339, 350, 380, 384, 387, 392, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 410, 414, 415, 416, 422, 423, 424, 425, 426, 429, 459, 478, 504, 505, 542, 552, 553, 554, 555, 558, 562, 563, 564, 565, 566, 567, 568, 571, 572, 576, 577, 596, 599, 600, 601, 603, 612, 630, 635, 637, 645, 683, 686, 688, 690, 693, 694, 697, 701, 702, 704, 707, 714, 717, 748, 787, 789, 800, 822, 829, 835, 850, 855], "mutag": [25, 165, 168, 170, 186, 421, 425, 426, 729, 769, 812], "mutat": [13, 70, 855, 858], "mutual": [149, 161, 185, 216, 220, 244, 477, 564, 699, 867], "mxnet": [4, 9, 13, 21, 23, 199, 200, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 690, 703, 717, 722, 729, 731, 762, 806, 812, 815, 823, 853, 865], "mxnet\uacfc": 814, "mxnet\uc5d0\uc11c\ub294": 776, "mxnet\uc758": 788, "mxnet\uc774\ub098": 803, "my": [696, 697], "my_agg_func": 380, "my_sample_subgraph": [298, 307, 312], "my_train_script": 697, "myadd": 22, "mydata": 696, "mydatapars": 688, "mydataset": [686, 687, 733, 773, 774], "mygraph": [696, 697], "myrepo": 696, "mysubgraphsampl": [298, 307, 312], "n": [6, 9, 14, 20, 21, 62, 63, 126, 129, 186, 190, 239, 242, 249, 318, 327, 328, 336, 337, 340, 348, 349, 352, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 459, 476, 501, 504, 552, 567, 571, 572, 576, 577, 610, 611, 612, 615, 616, 618, 621, 628, 629, 630, 635, 644, 647, 648, 663, 671, 680, 681, 682, 694, 707, 711, 720, 724, 751, 755, 756, 764, 792, 797, 798, 802, 808, 817, 818, 819, 820, 822, 823, 828, 832, 833, 836, 849, 851, 852, 855, 858, 861, 862, 866], "n0": 296, "n1": [296, 318, 323, 328, 452], "n2": [296, 318, 323, 328, 452], "n2e": 672, "n3": 323, "n_": [384, 387, 394, 395, 396, 397, 400, 402, 403, 405, 406, 407, 408, 410, 412, 416], "n_0": 122, "n_1": 122, "n_base": 850, "n_class": [426, 692, 721, 727, 729, 738, 767, 769, 778, 805, 811, 812, 845, 846], "n_click": [726, 766, 810], "n_commun": 183, "n_dislik": [726, 766, 810], "n_edg": [730, 757, 770, 799, 805, 813, 820, 862], "n_epoch": [210, 213, 850], "n_etyp": 409, "n_feat": 460, "n_featur": [730, 731, 770, 771, 813, 814], "n_follow": [726, 766, 810], "n_graph": 183, "n_head": [435, 450], "n_hetero_featur": [726, 731, 766, 771, 810, 814], "n_hidden": [721, 805, 845, 846, 850], "n_hidden_lay": 850, "n_i": [122, 430, 431, 432, 437, 850], "n_item": [726, 766, 810], "n_iter": 433, "n_k": 122, "n_kernel": 407, "n_label": [731, 771, 814], "n_layer": [433, 434, 435, 756, 758, 798, 801, 845, 846], "n_max_click": [726, 766, 810], "n_node": [183, 839, 862], "n_step": 409, "n_t": [422, 423, 424], "n_token": 862, "n_train": 839, "n_user": [726, 766, 810], "n_user_class": [726, 731, 766, 771, 810, 814], "n_val": 839, "naive_propagate_attent": 862, "name": [0, 4, 5, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 45, 46, 47, 48, 52, 53, 55, 57, 58, 60, 61, 62, 63, 68, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 133, 138, 156, 159, 162, 165, 168, 173, 178, 179, 186, 197, 200, 205, 208, 214, 216, 219, 220, 221, 222, 223, 224, 225, 235, 236, 239, 240, 241, 245, 246, 248, 249, 287, 288, 289, 291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 311, 312, 315, 316, 325, 330, 334, 335, 341, 380, 392, 414, 457, 478, 479, 480, 503, 542, 550, 552, 553, 554, 555, 556, 557, 558, 560, 562, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 642, 644, 645, 651, 653, 658, 659, 660, 661, 663, 666, 667, 669, 670, 671, 673, 675, 686, 687, 688, 689, 690, 693, 694, 695, 696, 701, 704, 707, 712, 713, 718, 727, 729, 733, 734, 735, 736, 739, 741, 748, 773, 774, 775, 776, 779, 781, 782, 786, 789, 816, 822, 827, 829, 831, 832, 833, 836, 837, 839, 845, 846, 858, 862, 867], "namedrockunit": 144, "namedtupl": 855, "nameerror": 829, "namespac": [1, 22, 133, 144, 707, 815], "name\u76ee\u5f55\u4e2d": 734, "nan": [337, 446, 449, 663, 849, 852], "narrow_row": [724, 764, 808], "nation": 166, "nativ": [8, 291, 692, 712, 816, 819, 822], "nativelayernormbackward": 435, "natur": [558, 728, 819, 851, 855, 861, 862], "nblink": 713, "nc": [832, 833], "nc_task": [832, 833], "nc_test_id": 833, "nc_test_ids_path": 833, "nc_test_item_id": 832, "nc_test_item_ids_path": 832, "nc_test_item_label": 832, "nc_test_item_labels_path": 832, "nc_test_label": 833, "nc_test_labels_path": 833, "nc_test_user_id": 832, "nc_test_user_ids_path": 832, "nc_test_user_label": 832, "nc_test_user_labels_path": 832, "nc_train_id": 833, "nc_train_ids_path": 833, "nc_train_item_id": 832, "nc_train_item_ids_path": 832, "nc_train_item_label": 832, "nc_train_item_labels_path": 832, "nc_train_label": 833, "nc_train_labels_path": 833, "nc_train_user_id": 832, "nc_train_user_ids_path": 832, "nc_train_user_label": 832, "nc_train_user_labels_path": 832, "nc_val_id": 833, "nc_val_ids_path": 833, "nc_val_item_id": 832, "nc_val_item_ids_path": 832, "nc_val_item_label": 832, "nc_val_item_labels_path": 832, "nc_val_label": 833, "nc_val_labels_path": 833, "nc_val_user_id": 832, "nc_val_user_ids_path": 832, "nc_val_user_label": 832, "nc_val_user_labels_path": 832, "nccl": [867, 868], "nci1": 165, "ndarrai": [22, 27, 54, 95, 96, 125, 131, 183, 205, 248, 286, 329, 700, 703, 744, 785, 816, 851], "ndarraypartit": 457, "ndarray\u7c7b\u578b\u4f5c\u4e3aapi\u7684\u8f93\u5165": 747, "ndarri": 788, "ndata": [4, 5, 9, 28, 34, 35, 43, 54, 56, 64, 71, 75, 77, 93, 94, 95, 96, 100, 103, 108, 113, 115, 117, 122, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 167, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 217, 219, 221, 224, 239, 245, 248, 330, 334, 335, 346, 378, 392, 421, 422, 423, 424, 425, 426, 446, 450, 460, 478, 542, 554, 555, 556, 558, 559, 567, 573, 575, 576, 577, 642, 643, 644, 645, 648, 657, 658, 663, 664, 665, 667, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 688, 690, 692, 693, 695, 696, 701, 702, 704, 707, 708, 717, 721, 727, 728, 729, 730, 731, 736, 738, 739, 740, 745, 746, 748, 751, 752, 756, 757, 759, 760, 761, 767, 768, 769, 770, 771, 776, 778, 779, 781, 786, 787, 789, 792, 794, 798, 799, 802, 803, 804, 805, 811, 812, 813, 814, 817, 818, 819, 820, 834, 835, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867], "ndata_pars": [148, 688], "ndata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 245, 246, 299, 330, 333, 334, 335, 339, 478, 479, 542, 551, 555, 556, 573, 642, 656, 657, 664, 670, 683, 688, 695, 696, 700, 701, 703, 729, 744, 745, 747, 785, 786, 788, 812, 835, 838, 839], "nearbi": [378, 382], "nearest": [14, 336, 427, 429, 571, 730, 813], "nearli": 862, "necessari": [4, 21, 41, 210, 214, 216, 220, 567, 637, 708, 713, 714, 731, 801, 814, 828, 838, 845, 862], "necessarili": [131, 329, 642, 717, 828, 836, 858], "need": [4, 5, 6, 21, 48, 57, 65, 77, 89, 118, 138, 139, 140, 145, 214, 229, 230, 239, 245, 246, 292, 294, 302, 307, 309, 330, 334, 335, 336, 348, 349, 383, 411, 421, 422, 423, 424, 425, 426, 427, 429, 458, 478, 479, 542, 543, 571, 576, 577, 643, 687, 688, 693, 694, 695, 696, 697, 703, 704, 708, 709, 712, 715, 716, 717, 718, 719, 723, 724, 725, 727, 728, 729, 730, 731, 780, 788, 789, 816, 822, 827, 828, 829, 832, 833, 834, 837, 838, 839, 845, 846, 858, 862, 867, 868], "needham": 837, "neg": [6, 7, 13, 120, 139, 161, 163, 184, 214, 216, 219, 220, 226, 227, 240, 241, 292, 296, 299, 300, 301, 302, 304, 306, 307, 316, 378, 382, 389, 400, 402, 403, 481, 486, 507, 513, 521, 527, 561, 562, 564, 565, 566, 567, 669, 688, 719, 730, 759, 822, 826, 827, 832, 833, 846, 850, 851, 855], "neg_dst": [300, 730, 770, 813, 827, 846], "neg_dsts_follow": 301, "neg_dsts_lik": 301, "neg_eid": 837, "neg_featur": 846, "neg_g": [730, 770, 813], "neg_graph": 846, "neg_pair_graph": 220, "neg_ratio": 139, "neg_sampl": [220, 226, 227, 302, 316], "neg_scor": [730, 759, 770, 802, 813, 837, 846], "neg_src": [730, 770, 813, 846], "neg_u": 837, "neg_v": [382, 837], "neg_weight": 378, "negat": [594, 822], "negative_dst": [299, 300, 301, 304, 316, 831, 832, 833], "negative_dsts_follow": 299, "negative_dsts_lik": 299, "negative_edge_dst": [139, 846], "negative_edge_src": [139, 846], "negative_graph": [730, 759, 770, 802, 813], "negative_node_pair": 304, "negative_ratio": [296, 306, 316], "negative_s": [378, 382], "negative_sampl": [220, 226, 227, 228, 759, 802], "negative_slop": [389, 400, 402, 403], "negative_src": [299, 304, 316, 831], "negativesampl": [316, 716, 719, 759, 802], "neghborhood": 827, "neglig": 22, "neigh": [724, 764, 808], "neighbor": [4, 13, 14, 171, 210, 214, 215, 216, 219, 220, 233, 240, 241, 244, 296, 302, 307, 333, 336, 347, 386, 389, 390, 391, 399, 400, 407, 410, 415, 427, 428, 429, 477, 549, 560, 562, 564, 565, 566, 567, 568, 571, 576, 577, 662, 690, 711, 712, 715, 718, 719, 720, 730, 731, 756, 798, 813, 822, 826, 834, 836, 837, 838, 849, 850, 852, 858], "neighbor_match": 6, "neighbor_sampl": 829, "neighbor_sampling_overview": 713, "neighborhood": [1, 214, 220, 296, 302, 334, 335, 421, 422, 423, 425, 560, 565, 566, 637, 693, 715, 720, 731, 757, 761, 799, 804, 834, 850, 851, 852, 853, 865], "neighborsampl": [215, 220, 302, 692, 713, 715, 718, 738, 778, 827, 829], "neighbor\ub4e4\uc5d0": 776, "neighbour": [392, 414], "neighbourhood": [414, 851], "neither": [168, 576, 577], "nelement": 858, "neo4j": 837, "neq": 851, "net": [414, 446, 448, 449, 460, 849, 852], "net_typ": 234, "network": [4, 13, 72, 134, 141, 142, 143, 145, 149, 150, 154, 155, 164, 165, 166, 167, 175, 176, 183, 185, 187, 189, 190, 192, 193, 209, 210, 219, 234, 242, 243, 288, 313, 337, 352, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 396, 398, 400, 402, 403, 404, 405, 406, 408, 409, 410, 411, 415, 417, 418, 419, 421, 422, 423, 424, 425, 426, 431, 434, 435, 438, 458, 460, 461, 476, 552, 560, 562, 651, 656, 659, 663, 667, 670, 692, 693, 695, 696, 697, 699, 700, 705, 709, 711, 717, 718, 723, 727, 728, 730, 744, 756, 785, 798, 815, 819, 821, 822, 823, 824, 825, 835, 836, 838, 839, 840, 841, 854, 855, 858, 863, 864, 867, 868], "networkx": [72, 125, 230, 248, 460, 642, 644, 700, 744, 785, 818, 827, 829, 832, 833, 851, 852, 855, 858, 861], "networkx\ub294": 785, "network\ub97c": 797, "neural": [4, 141, 142, 143, 165, 179, 183, 189, 190, 192, 210, 219, 242, 243, 313, 337, 384, 385, 387, 388, 393, 398, 405, 406, 408, 409, 411, 413, 419, 421, 422, 423, 424, 425, 426, 431, 434, 435, 460, 552, 560, 663, 667, 670, 705, 709, 711, 717, 718, 723, 728, 730, 756, 798, 815, 819, 821, 822, 823, 825, 834, 835, 836, 838, 840, 841, 849, 854, 858, 863, 864, 867, 868], "neurip": [214, 296, 302, 565], "neuron": 851, "neutral": [184, 855], "never": [234, 428, 549, 713], "nevertheless": 694, "new": [0, 1, 3, 4, 26, 27, 28, 34, 40, 70, 89, 114, 115, 116, 117, 118, 119, 122, 138, 140, 142, 143, 159, 210, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 296, 330, 333, 334, 335, 340, 346, 347, 380, 382, 390, 397, 399, 412, 415, 421, 422, 425, 476, 542, 555, 556, 557, 558, 559, 563, 565, 566, 567, 568, 576, 577, 594, 632, 636, 637, 651, 652, 653, 668, 673, 693, 694, 696, 703, 704, 711, 714, 717, 789, 798, 822, 823, 824, 834, 835, 836, 837, 838, 849, 850, 855, 858, 862, 863, 865], "new_cent": [421, 422], "new_d": [139, 140], "new_dataset": 138, "new_edge_feat": [397, 408], "new_edges_mask": [756, 798], "new_empti": 827, "new_etyp": 653, "new_g": [26, 130, 347, 650, 651, 652, 653, 655, 656, 657, 660, 661, 662, 664, 666, 668], "new_g1": 26, "new_g2": [26, 130], "new_label": 459, "new_node_feat": [397, 400, 408], "new_node_id": [421, 422], "new_val": 822, "newg": 835, "newh": 70, "newli": [114, 115], "newman": 167, "next": [299, 302, 307, 562, 564, 643, 688, 694, 696, 718, 761, 804, 827, 829, 837, 851, 855, 862], "next_func": [827, 829], "next_lg_x": 851, "next_x": 851, "nf": [697, 782], "nfeat": [387, 397, 400, 406, 423, 424, 425, 426, 448, 449, 456, 695, 696], "nh": 819, "nice": [22, 729, 824], "nid": [4, 10, 26, 95, 96, 130, 212, 219, 221, 222, 224, 225, 239, 245, 330, 334, 335, 421, 457, 478, 542, 555, 556, 558, 573, 637, 642, 682, 692, 693, 694, 696, 704, 710, 738, 739, 748, 754, 756, 778, 779, 780, 781, 789, 796, 798, 829, 835, 846, 862], "nid2localnid": 4, "nid2partid": 4, "nid_het2hom": 694, "nid_hom2het": 694, "nid_offset": 694, "nid_rang": 781, "nightli": 823, "nine": 165, "niter": 851, "nk": [336, 427, 429, 571], "nl": 133, "nlh": [711, 755, 797], "nll_loss": [849, 852, 855], "nlp": [184, 862], "nmap": 845, "nn": [10, 13, 14, 21, 121, 210, 213, 336, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 571, 692, 693, 708, 713, 715, 716, 717, 718, 720, 721, 722, 725, 727, 729, 730, 731, 738, 752, 757, 758, 759, 760, 761, 763, 764, 765, 767, 769, 770, 771, 778, 779, 794, 799, 801, 802, 803, 804, 805, 806, 809, 811, 812, 813, 814, 817, 818, 819, 820, 822, 827, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "nnz": [12, 30, 31, 62, 63, 579, 582, 585, 587, 589, 591, 592, 593, 594, 602, 605, 607, 609, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 624, 628, 630, 631, 632, 822], "nn\u6a21\u5757": [762, 763, 765], "nn\u6a21\u5757\u4e2d": 762, "nn\u6a21\u5757\u53ef\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u8f93\u5165\u4e2d\u91cd\u590d\u4f7f\u7528": 764, "nn\u6a21\u5757\u662f\u7528\u6237\u6784\u5efagnn\u6a21\u578b\u7684\u57fa\u672c\u6a21\u5757": 762, "nn\u6a21\u5757\u7684api\u53c2\u8003": 761, "nn\u6a21\u5757\u7684forward\u51fd\u6570": [749, 762], "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [749, 762], "nn\u6a21\u5757\u7684\u7236\u7c7b\u53d6\u51b3\u4e8e\u540e\u7aef\u6240\u4f7f\u7528\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 762, "nn\u6a21\u5757\u76f8\u6bd4": 764, "nn\u6a21\u5757\u989d\u5916\u589e\u52a0\u4e861\u4e2a\u53c2\u6570": 764, "no_grad": [731, 771, 814, 819, 829, 837, 845, 846, 849, 867, 868], "no_subtree_check": 845, "noam": 862, "noamopt": 862, "node": [0, 5, 6, 7, 9, 13, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 39, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 224, 226, 227, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 262, 263, 264, 265, 286, 287, 288, 289, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 311, 312, 315, 316, 317, 318, 323, 327, 328, 329, 330, 333, 334, 335, 336, 337, 339, 340, 346, 347, 348, 349, 352, 378, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 459, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 676, 677, 678, 679, 680, 681, 683, 688, 689, 692, 694, 695, 696, 698, 699, 702, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 719, 720, 721, 723, 724, 725, 726, 728, 729, 730, 735, 746, 747, 748, 751, 753, 756, 760, 764, 766, 767, 770, 771, 775, 776, 780, 781, 786, 787, 788, 789, 791, 792, 795, 798, 799, 801, 803, 805, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 822, 825, 826, 828, 831, 836, 837, 838, 840, 841, 842, 847, 848, 849, 850, 851, 852, 853, 855, 861, 862, 865, 867, 869, 870], "node1": 851, "node2": 851, "node2vec": [562, 834], "node_activ": 858, "node_activation_hidden_s": 858, "node_attr": [25, 248, 644], "node_attr_dtyp": 781, "node_attr_schem": [4, 47], "node_attribut": [296, 323, 827, 829], "node_classif": [829, 832, 833], "node_color": [818, 851, 855, 858, 861], "node_data": [308, 688, 696, 781], "node_degre": [716, 820], "node_emb": [378, 382, 696, 781, 845], "node_embed": [730, 770, 813], "node_feat": [239, 315, 387, 392, 397, 398, 400, 406, 408, 414, 695, 696, 740, 781], "node_feat_0": 833, "node_feat_0_path": 833, "node_feat_1": 833, "node_feat_1_path": 833, "node_feat_dim": [708, 752, 794], "node_feat_nam": [658, 669], "node_feat_out": 398, "node_feat_s": 138, "node_featur": [289, 294, 299, 304, 712, 716, 718, 720, 727, 730, 731, 767, 770, 771, 811, 813, 814, 827, 829, 839, 846, 868], "node_feature_kei": [294, 712, 713, 715, 716, 718, 719, 720, 827, 829, 868], "node_g": 858, "node_gener": 546, "node_hidden_s": 858, "node_id": [300, 304, 421, 422, 688, 695, 781, 850], "node_id_field": 688, "node_ids_item": 301, "node_ids_us": 301, "node_in_feat": 387, "node_input": 846, "node_item_feat_0": 832, "node_item_feat_0_path": 832, "node_item_feat_1": 832, "node_item_feat_1_path": 832, "node_label": [25, 168, 186, 696, 731, 771, 814, 839], "node_map": [239, 696, 740, 781], "node_min": [424, 426], "node_pair": [289, 296, 299, 300, 301, 302, 304, 307, 308, 316, 713, 716, 827, 829, 831, 832, 833], "node_pairs_follow": [299, 301], "node_pairs_label": 713, "node_pairs_lik": [299, 301], "node_pairs_with_label": [304, 716, 827], "node_pari": 713, "node_part": 543, "node_permute_algo": [98, 558], "node_repr": 846, "node_s": [818, 851, 855, 861], "node_split": [683, 692, 693, 738, 739, 778, 779, 845, 846], "node_subgraph": [106, 245, 714], "node_timestamp_attr_nam": 296, "node_to_graph": 858, "node_trainer_id": 238, "node_typ": [239, 304, 453, 694, 696, 704, 748, 781, 789, 858], "node_type_emb": 858, "node_type_id": [694, 695, 780], "node_type_offset": [296, 323, 832], "node_type_offset_": 296, "node_type_subgraph": 246, "node_type_to_id": [296, 323, 832], "node_udf": [20, 679, 680, 681, 682], "node_update_func": 858, "node_user_feat_0": 832, "node_user_feat_0_path": 832, "node_user_feat_1": 832, "node_user_feat_1_path": 832, "node_weight_list": 695, "node_year": 696, "nodebatch": [20, 54, 707, 751, 792], "nodedataload": [693, 739, 756, 757, 758, 761, 779, 798, 799, 800, 801, 804, 845], "nodedataview": [4, 644], "nodeembed": 10, "nodelist": 861, "nodepr": 140, "nodeproppr": [689, 735, 775, 845], "nodes_": 862, "nodes_0": 688, "nodes_1": 688, "nodes_d": 862, "nodes_data": 839, "nodes_gener": [92, 546], "nodes_perm": 558, "nodes_with_feature_on": 54, "nodeshuffl": 13, "nodeview": 72, "nodewis": 435, "nois": [730, 770, 813], "noisi": 162, "non": [6, 9, 21, 27, 30, 114, 116, 162, 182, 184, 197, 200, 205, 210, 214, 216, 219, 240, 241, 296, 309, 323, 337, 340, 352, 392, 401, 450, 476, 558, 562, 564, 565, 566, 567, 579, 580, 583, 584, 595, 596, 597, 599, 600, 601, 602, 603, 608, 610, 615, 616, 618, 622, 624, 628, 630, 632, 663, 669, 688, 696, 702, 718, 728, 730, 787, 800, 804, 817, 826, 837, 839, 849, 851, 855, 863, 865, 868], "none": [4, 6, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 113, 114, 115, 116, 117, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 231, 234, 237, 238, 239, 240, 241, 245, 246, 248, 249, 286, 287, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 304, 307, 309, 310, 312, 314, 316, 317, 318, 321, 323, 329, 330, 334, 335, 341, 342, 343, 344, 345, 348, 349, 380, 383, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 431, 435, 446, 448, 449, 451, 452, 453, 454, 457, 458, 459, 478, 479, 480, 502, 503, 542, 543, 545, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 572, 574, 575, 583, 584, 596, 599, 600, 601, 603, 605, 612, 614, 615, 616, 617, 628, 633, 634, 636, 637, 642, 643, 644, 647, 648, 653, 658, 660, 661, 663, 666, 667, 669, 670, 683, 686, 690, 715, 716, 720, 723, 724, 725, 733, 736, 756, 763, 764, 765, 773, 776, 798, 807, 808, 809, 827, 829, 833, 850, 855, 858, 862, 868], "nonlinear": [731, 818, 851], "nonneg": 183, "nontre": [230, 545], "nonzero": [126, 214, 249, 560, 576, 577, 594, 610, 621, 690, 700, 736, 776, 781, 785, 822, 850, 851], "norm": [336, 394, 395, 401, 410, 411, 412, 415, 416, 417, 419, 427, 428, 429, 455, 456, 549, 571, 713, 718, 723, 724, 757, 759, 761, 763, 764, 799, 802, 804, 807, 808, 819, 822, 850, 851, 862], "norm_": 408, "norm_bi": 352, "norm_by_dst": 850, "norm_edge_weight": 401, "norm_first": 449, "norm_typ": 459, "norm_x": 862, "normal": [4, 128, 129, 142, 150, 154, 176, 244, 338, 352, 388, 390, 392, 394, 395, 398, 399, 400, 401, 407, 408, 410, 414, 415, 416, 417, 419, 420, 449, 450, 459, 477, 480, 564, 574, 575, 659, 669, 670, 686, 696, 717, 723, 724, 728, 729, 808, 812, 817, 820, 822, 827, 829, 832, 833, 834, 838, 839, 850, 851, 852, 861, 862], "normalis": 669, "normalization\uacfc": 773, "normalization\uc73c\ub85c": 807, "normalization\uc744": [807, 808], "normalization\uc774": 803, "normliz": 807, "north": 23, "nose": 21, "notabl": [692, 713], "notat": [818, 858], "note": [4, 6, 9, 10, 14, 21, 22, 26, 27, 28, 34, 39, 43, 46, 48, 52, 66, 68, 70, 73, 74, 78, 93, 94, 95, 96, 100, 101, 102, 103, 108, 110, 113, 114, 115, 116, 117, 118, 119, 126, 130, 131, 134, 135, 136, 149, 150, 151, 152, 153, 154, 155, 159, 168, 173, 176, 184, 185, 186, 187, 192, 193, 210, 214, 215, 216, 220, 226, 234, 245, 246, 248, 249, 286, 292, 296, 299, 304, 307, 314, 316, 317, 318, 329, 330, 333, 334, 335, 339, 346, 347, 352, 380, 382, 390, 392, 394, 395, 396, 414, 415, 427, 429, 430, 431, 432, 433, 435, 436, 437, 438, 446, 448, 449, 457, 458, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 555, 556, 557, 558, 559, 562, 563, 565, 566, 567, 568, 576, 577, 636, 637, 638, 642, 643, 644, 645, 646, 647, 648, 686, 689, 690, 691, 692, 694, 700, 704, 709, 715, 717, 721, 724, 725, 726, 729, 731, 738, 739, 740, 741, 778, 779, 780, 781, 782, 795, 801, 817, 818, 819, 820, 827, 828, 829, 832, 833, 834, 835, 836, 845, 849, 851, 852, 855, 862], "notebook": [693, 713, 821, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "notebook\u4e2d\u5f00\u53d1\u548c\u8fd0\u884c\u4ee3\u7801": 739, "notebook\u4e2d\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 739, "notebook\uc5d0\uc11c": 779, "noth": [557, 858], "notic": [637, 643, 828, 837, 838], "notimplementederror": 858, "notion": [22, 851], "noun": [149, 185], "now": [183, 233, 346, 642, 693, 695, 713, 717, 718, 731, 803, 820, 831, 832, 833, 845, 852, 858], "np": [4, 125, 126, 205, 248, 249, 314, 315, 384, 385, 386, 387, 388, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 413, 415, 416, 417, 418, 423, 425, 567, 688, 693, 694, 695, 726, 727, 739, 766, 767, 779, 781, 810, 811, 827, 829, 832, 833, 835, 837, 845, 846, 849, 851, 852, 861, 862], "npoint": 6, "nproc": [867, 868], "npy": [239, 308, 314, 315, 696, 740, 781, 832, 833], "nty": [380, 725, 765, 809], "ntype": [4, 26, 28, 35, 37, 54, 58, 75, 76, 79, 81, 82, 83, 85, 86, 96, 115, 118, 129, 157, 158, 191, 198, 210, 214, 216, 221, 238, 239, 296, 323, 343, 345, 380, 412, 422, 423, 424, 479, 554, 556, 560, 575, 634, 642, 643, 644, 648, 688, 690, 694, 695, 696, 704, 709, 712, 716, 717, 729, 730, 736, 748, 753, 760, 769, 770, 776, 780, 781, 789, 795, 803, 812, 813, 829, 850], "ntype2id": 694, "ntype2id_map": 694, "ntype_attr": 644, "ntype_count": 643, "ntype_field": 642, "ntype_id": 781, "ntype_output": 380, "ntypes_list": 239, "null": [120, 817, 818, 819, 820, 822, 831], "nullcontext": [827, 829], "num": [28, 115, 300, 308, 741, 781, 782, 827, 831, 832, 833], "num_atom_typ": 195, "num_bas": [383, 390, 415, 461, 850], "num_base_edges_per_nod": [142, 143], "num_base_nod": [142, 143], "num_bond_typ": 195, "num_child": [424, 426], "num_class": [132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 308, 421, 422, 423, 424, 425, 691, 696, 713, 720, 721, 737, 757, 759, 777, 799, 802, 805, 817, 818, 820, 829, 831, 832, 833, 834, 836, 838, 850, 855, 867, 868], "num_correct": 838, "num_dst": 561, "num_dst_nod": [82, 83, 131, 550, 798], "num_edgnum_edges_per_chunk": [694, 696], "num_embed": [4, 379, 457], "num_epoch": [378, 421, 422, 692, 738, 778, 819], "num_etyp": 412, "num_exampl": 838, "num_featur": [423, 425], "num_gpu": 867, "num_graph": [138, 139, 140, 159, 172], "num_head": [389, 396, 397, 400, 402, 403, 412, 434, 446, 448, 449, 451, 452, 453, 819, 852], "num_hidden": [692, 738, 778, 845, 846], "num_hidden_lay": 850, "num_hop": [4, 239, 421, 422, 423, 424, 425, 426], "num_input_nod": 756, "num_inter_edg": 142, "num_it": 217, "num_kernel": 453, "num_label": [168, 175, 177, 178, 179, 186, 845, 846], "num_lay": [215, 304, 450, 458, 692, 738, 756, 778, 798, 819, 829, 845, 846], "num_mlp_aft": 419, "num_mlp_befor": 419, "num_motif": [142, 143, 189, 190], "num_neighbor": 560, "num_nod": [4, 5, 10, 26, 27, 28, 85, 95, 96, 101, 102, 114, 115, 117, 122, 127, 138, 146, 147, 157, 158, 165, 168, 169, 172, 173, 174, 184, 186, 191, 192, 195, 205, 219, 239, 245, 246, 286, 296, 299, 311, 329, 330, 333, 334, 335, 339, 378, 380, 382, 397, 400, 406, 408, 411, 422, 423, 424, 448, 449, 452, 454, 455, 456, 457, 458, 460, 478, 479, 542, 550, 551, 555, 556, 557, 558, 559, 573, 642, 643, 645, 656, 657, 658, 664, 669, 670, 672, 683, 688, 693, 694, 695, 696, 700, 701, 703, 704, 717, 720, 729, 730, 739, 744, 745, 747, 748, 756, 758, 760, 770, 779, 780, 781, 785, 786, 788, 789, 798, 801, 803, 812, 813, 817, 818, 819, 827, 829, 832, 833, 835, 837, 838, 839, 845, 846, 850, 855, 858], "num_node_typ": 296, "num_node_weight": 781, "num_nodes_dict": [118, 119, 329, 730, 756, 770, 798, 813, 839], "num_nodes_per_chunk": [694, 696], "num_ntyp": 412, "num_of_class": 176, "num_output": 461, "num_output_nod": 756, "num_part": [209, 239, 696, 781, 845, 846], "num_partit": [4, 696], "num_positive_edg": 139, "num_post_lay": 450, "num_prop_round": 858, "num_random_walk": 560, "num_rel": [157, 158, 191, 390, 415, 455, 456, 850], "num_replica": 292, "num_rollout": [424, 426], "num_sampl": [561, 697, 741, 782, 845], "num_se": [562, 564], "num_serv": [697, 741, 782, 845], "num_split": 192, "num_src": 561, "num_src_nod": [79, 86, 131, 550, 798], "num_task": [138, 177, 178, 179, 690, 736, 776, 819], "num_test": [832, 833, 838], "num_tow": [392, 414], "num_train": [697, 741, 782, 832, 833, 838, 845], "num_trainers_per_machin": 239, "num_travers": 560, "num_trial": 858, "num_typ": 383, "num_val": [832, 833], "num_valid": 858, "num_virtual_nod": 448, "num_vocab": 855, "num_work": [209, 210, 213, 214, 215, 216, 217, 219, 220, 290, 714, 741, 756, 757, 759, 761, 782, 798, 799, 800, 802, 804, 827, 829, 842, 855], "num_worker_thread": 234, "numa": 842, "number": [3, 4, 6, 9, 10, 14, 21, 22, 28, 36, 37, 38, 62, 63, 70, 79, 80, 81, 82, 101, 102, 113, 115, 118, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 231, 234, 235, 238, 239, 240, 241, 242, 249, 286, 290, 292, 296, 297, 299, 300, 302, 304, 307, 311, 329, 334, 335, 336, 337, 340, 348, 349, 352, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 543, 550, 551, 552, 555, 558, 560, 561, 565, 566, 567, 568, 571, 572, 576, 577, 595, 613, 615, 616, 619, 620, 635, 643, 645, 650, 660, 661, 662, 663, 666, 667, 670, 671, 674, 675, 676, 678, 679, 680, 681, 682, 683, 686, 688, 690, 693, 694, 695, 696, 697, 701, 703, 704, 708, 709, 712, 714, 717, 721, 728, 731, 773, 776, 788, 789, 793, 800, 818, 820, 822, 828, 829, 831, 832, 834, 835, 837, 838, 839, 842, 845, 849, 850, 852, 858, 861, 862, 867, 868], "number_of_dst_nod": [637, 717, 724, 725, 756, 758, 760, 764, 765, 798, 801, 803, 808, 809], "number_of_edg": 4, "number_of_nod": 4, "number_of_src_nod": [717, 756, 760, 798, 803], "numclass": [817, 818, 820, 834, 836, 837, 849, 851, 852], "numedg": [817, 818, 820, 834, 836, 837, 849, 851, 852], "numer": [4, 10, 22, 244, 392, 408, 477, 688, 701, 835, 839, 858, 862], "numfeat": [817, 818, 820, 834, 836, 837, 849, 851, 852], "numnod": [817, 818, 820, 834, 836, 837, 849, 851, 852], "numpi": [5, 9, 21, 27, 31, 54, 95, 96, 125, 126, 128, 129, 131, 168, 183, 198, 205, 239, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 308, 314, 315, 329, 378, 384, 385, 386, 387, 388, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 413, 415, 416, 417, 418, 423, 425, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 688, 692, 694, 696, 700, 703, 704, 726, 738, 744, 766, 778, 781, 785, 788, 789, 810, 816, 819, 827, 829, 831, 832, 833, 835, 837, 839, 845, 846, 849, 851, 852, 861, 862], "numtestsampl": [817, 818, 820, 834, 836, 837, 849, 851, 852], "numtrainingsampl": [817, 818, 820, 834, 836, 837, 849, 851, 852], "numvalidationsampl": [817, 818, 820, 834, 836, 837, 849, 851, 852], "nutshel": 821, "nvidia": [210, 389, 390, 391, 721, 805], "nx": [125, 248, 460, 700, 744, 785, 818, 851, 852, 855, 858, 861], "nx_agraph": 855, "nx_g": [125, 248, 644, 700, 744, 785, 818, 858], "nx_g1": 851, "nx_graph": [125, 248], "nxg": [700, 744, 785], "nxn": [427, 428], "o": [4, 9, 22, 156, 336, 427, 429, 571, 687, 691, 711, 734, 737, 755, 774, 777, 817, 818, 819, 820, 822, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "o1": 822, "o2": 822, "o3": 822, "o4": 822, "o5": 822, "o6": 822, "o7": 822, "o8": 822, "o_j": 855, "ob": 461, "obg": 775, "obj": [827, 829], "obj_": 22, "object": [4, 22, 26, 42, 53, 54, 59, 108, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 210, 218, 220, 221, 229, 230, 239, 245, 246, 247, 248, 249, 286, 291, 293, 295, 296, 300, 301, 304, 309, 311, 313, 323, 325, 329, 330, 334, 335, 349, 350, 352, 380, 421, 422, 457, 478, 479, 542, 545, 547, 548, 550, 551, 553, 554, 565, 566, 567, 568, 569, 574, 575, 644, 647, 648, 649, 654, 655, 688, 689, 690, 691, 692, 693, 694, 696, 700, 702, 712, 724, 759, 787, 802, 816, 817, 827, 829, 831, 832, 833, 834, 835, 838, 850, 851], "objectbas": 22, "objectref": 22, "objtyp": [239, 349], "observ": [851, 861], "obtain": [14, 244, 334, 335, 397, 400, 446, 449, 450, 458, 477, 563, 637, 651, 690, 713, 717, 727, 729, 730, 731, 776, 818, 834, 835, 852, 855, 868], "occasion": [173, 839], "occup": 835, "occupi": [178, 179], "occur": [26, 239], "occurr": 134, "odot": [408, 454, 855], "ofev": 164, "off": [424, 426, 816, 817, 818, 819, 842, 851, 852, 861, 862], "offer": [815, 826, 834, 855, 861], "offic": 145, "offici": [21, 167, 184, 689, 849, 850, 851, 852, 855, 858, 861, 862], "offlin": [711, 801], "offset": [296, 323, 401, 563, 567, 576, 577], "often": [21, 120, 688, 690, 828, 835, 839], "ogb": [4, 138, 288, 685, 714, 735, 741, 772, 782, 800, 819, 829, 845, 846], "ogbg": [138, 689, 735, 775, 819], "ogbl": [288, 689, 735, 775, 846], "ogbn": [288, 689, 718, 720, 735, 775, 781, 829, 845, 868], "ok": [5, 702, 787], "old": [27, 28, 114, 421, 645, 849], "old_step_count": 858, "omega": 818, "omit": [4, 27, 28, 30, 31, 32, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 117, 128, 129, 308, 480, 553, 554, 555, 556, 557, 561, 562, 564, 574, 575, 643, 647, 648, 731, 814, 835], "omp": 234, "omp_num_thread": 868, "onc": [21, 131, 234, 286, 290, 296, 302, 307, 308, 329, 695, 696, 729, 818, 858, 862, 867], "ondisk_dataset": [827, 829, 832, 833], "ondisk_dataset_heterograph": 832, "ondisk_dataset_homograph": 833, "ondiskdataset": [288, 826, 831], "ondiskfeaturedata": 315, "ondiskfeaturedatadomain": [832, 833], "ondisktask": [832, 833], "one": [0, 4, 5, 6, 9, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 44, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 77, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 107, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 144, 147, 150, 154, 157, 158, 160, 161, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 180, 182, 183, 184, 188, 191, 192, 194, 195, 198, 205, 214, 216, 219, 220, 230, 233, 239, 240, 241, 245, 246, 248, 249, 286, 302, 304, 307, 329, 330, 334, 335, 336, 347, 382, 383, 384, 399, 407, 409, 410, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 449, 459, 478, 480, 502, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 542, 553, 554, 555, 556, 557, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 574, 575, 576, 577, 591, 596, 635, 637, 642, 645, 647, 648, 673, 674, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 699, 700, 701, 703, 704, 707, 708, 709, 710, 711, 712, 715, 716, 717, 718, 720, 723, 724, 725, 726, 727, 728, 729, 730, 731, 735, 748, 773, 775, 776, 788, 789, 811, 816, 818, 820, 822, 823, 827, 828, 829, 834, 835, 836, 838, 842, 845, 846, 850, 851, 852, 855, 858, 861, 862, 863, 865, 867], "onehot_label": [690, 736, 776], "ones": [0, 1, 4, 9, 27, 28, 34, 35, 43, 44, 45, 46, 51, 56, 64, 70, 71, 74, 77, 79, 82, 93, 94, 100, 103, 104, 105, 108, 113, 114, 115, 116, 122, 125, 231, 238, 248, 309, 346, 352, 380, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 402, 403, 404, 405, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 452, 458, 505, 559, 564, 569, 589, 612, 617, 618, 630, 632, 637, 643, 644, 645, 652, 658, 674, 678, 679, 680, 681, 682, 683, 692, 694, 696, 700, 701, 704, 745, 748, 786, 789, 823, 836, 837, 846, 855, 858, 861, 862], "ones_lik": 846, "onli": [3, 4, 10, 14, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 41, 47, 48, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 125, 128, 129, 130, 132, 133, 134, 138, 139, 140, 144, 146, 147, 150, 154, 157, 158, 159, 160, 167, 169, 170, 176, 178, 191, 192, 194, 210, 213, 214, 216, 219, 220, 233, 234, 235, 239, 240, 241, 245, 246, 248, 286, 287, 289, 290, 293, 295, 296, 297, 302, 307, 308, 314, 330, 333, 334, 335, 336, 337, 380, 389, 390, 391, 392, 395, 396, 397, 399, 400, 401, 402, 403, 409, 411, 417, 427, 429, 431, 448, 450, 454, 458, 478, 479, 542, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 636, 637, 638, 642, 644, 645, 647, 648, 653, 659, 660, 661, 662, 663, 664, 666, 667, 668, 670, 672, 683, 688, 689, 690, 692, 693, 694, 695, 696, 700, 701, 702, 704, 707, 710, 713, 715, 716, 717, 718, 721, 727, 728, 729, 731, 735, 775, 776, 801, 812, 816, 819, 822, 829, 831, 834, 835, 836, 838, 839, 842, 849, 850, 851, 852, 855, 858, 861, 862, 867], "onlin": [160, 378], "onto": [26, 292, 714, 718, 834, 858, 868], "ood": [197, 205], "oom": [721, 805, 823], "op": [1, 13, 342, 343, 344, 345, 389, 390, 391, 454, 553, 554, 624, 633, 634, 714, 721, 756, 798, 805, 822, 827], "open": [21, 291, 689, 696, 735, 775, 781, 827, 829, 832, 833, 846], "openmp": 8, "opennmt": 862, "oper": [0, 5, 6, 9, 11, 21, 22, 70, 116, 128, 129, 130, 210, 214, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 302, 307, 314, 315, 333, 336, 339, 352, 386, 399, 427, 429, 433, 446, 449, 454, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 553, 554, 559, 565, 566, 567, 568, 571, 576, 577, 618, 624, 636, 643, 645, 668, 670, 683, 686, 693, 694, 702, 704, 707, 708, 712, 714, 720, 721, 722, 724, 728, 729, 730, 816, 817, 818, 819, 821, 829, 836, 842, 852, 853, 858, 862, 863, 865], "operand": [9, 118, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541], "oplu": 414, "oplus_": [383, 414, 415], "opoverloadpacket": 827, "opportun": [826, 834], "opposit": 836, "opt": [712, 713, 718, 727, 729, 730, 731, 756, 757, 759, 761, 767, 769, 770, 771, 798, 799, 802, 804, 811, 812, 813, 814, 827, 829, 832, 833, 849, 852], "optim": [13, 14, 214, 222, 223, 224, 225, 299, 313, 378, 382, 390, 391, 421, 422, 423, 424, 425, 426, 457, 565, 692, 693, 696, 707, 708, 713, 716, 718, 719, 720, 721, 724, 727, 729, 730, 731, 738, 739, 756, 757, 759, 761, 767, 769, 770, 771, 778, 779, 798, 799, 802, 804, 805, 811, 812, 813, 814, 815, 817, 818, 819, 820, 823, 826, 827, 829, 834, 836, 837, 838, 842, 845, 846, 849, 850, 851, 852, 855, 861, 862, 867, 868], "optimis": [827, 829], "optimizer_exp": [423, 425], "optimizer\ub4e4\uc744": 779, "optimizer\ub97c": 805, "optimizer\uc5d0": 779, "option": [4, 6, 10, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 116, 117, 118, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 213, 214, 216, 217, 219, 220, 221, 226, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 244, 245, 246, 248, 249, 286, 287, 288, 290, 292, 293, 295, 296, 297, 299, 300, 302, 307, 308, 314, 317, 318, 323, 329, 330, 333, 334, 335, 336, 337, 339, 341, 350, 351, 352, 378, 380, 381, 382, 383, 384, 385, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 477, 478, 479, 480, 501, 505, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 596, 599, 600, 601, 603, 605, 612, 614, 615, 616, 617, 628, 635, 636, 637, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 656, 657, 658, 659, 660, 661, 663, 664, 666, 667, 669, 670, 671, 673, 683, 685, 688, 696, 697, 700, 723, 724, 727, 728, 772, 781, 816, 831, 832, 833, 845, 846], "optiona": 412, "oracl": 858, "orbit": [178, 179], "order": [0, 4, 9, 20, 51, 56, 91, 92, 95, 96, 123, 125, 130, 131, 141, 142, 143, 189, 190, 197, 205, 229, 230, 240, 248, 286, 296, 307, 329, 336, 347, 380, 382, 411, 428, 433, 436, 454, 458, 460, 478, 548, 549, 558, 565, 566, 567, 568, 571, 579, 583, 584, 637, 642, 655, 666, 693, 695, 696, 703, 704, 713, 718, 719, 729, 789, 822, 827, 832, 833, 835, 850, 851, 855, 858, 867], "ordereddict": 184, "ordinari": 725, "org": [9, 133, 134, 137, 146, 147, 161, 162, 163, 169, 171, 173, 174, 177, 178, 180, 182, 188, 195, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 425, 426, 448, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 720, 768, 816, 822, 823, 845, 862], "organ": [21, 230, 239, 695, 696, 725, 815, 830], "organiz": 132, "orient": [572, 861], "orig": 696, "orig_dst_id": [695, 781], "orig_eid": 696, "orig_eids_0": 696, "orig_id": [348, 543, 695, 696, 740, 781], "orig_nid": 696, "orig_nids_0": 696, "orig_node_emb": [696, 781, 845], "orig_src_id": [695, 781], "orig_type_edge_id": 781, "orig_type_node_id": 781, "origianl": 696, "origin": [3, 21, 26, 56, 64, 70, 71, 100, 108, 116, 122, 125, 130, 135, 136, 142, 143, 146, 151, 152, 153, 169, 183, 186, 189, 190, 192, 208, 209, 220, 221, 233, 239, 240, 241, 245, 248, 288, 292, 308, 309, 317, 318, 321, 330, 333, 334, 335, 339, 347, 348, 386, 399, 410, 421, 422, 424, 426, 446, 478, 542, 543, 558, 559, 563, 564, 565, 566, 567, 568, 574, 575, 582, 585, 587, 589, 592, 593, 594, 605, 636, 637, 639, 640, 641, 642, 644, 645, 651, 652, 662, 672, 673, 680, 681, 682, 687, 695, 696, 702, 704, 707, 717, 724, 727, 728, 729, 774, 787, 789, 798, 799, 818, 820, 822, 835, 837, 838, 839, 845, 850, 851, 853, 862, 865], "original_column_node_id": [298, 302, 307, 309, 310], "original_edge_id": [302, 307, 309, 310, 829], "original_row_node_id": [298, 302, 307, 309, 310, 318, 829], "origini": 563, "ot": 288, "otc": 145, "other": [0, 1, 9, 21, 68, 120, 121, 180, 182, 186, 207, 210, 235, 239, 242, 244, 289, 292, 299, 308, 350, 352, 378, 390, 419, 423, 425, 477, 560, 642, 660, 661, 666, 690, 691, 692, 693, 695, 696, 697, 699, 700, 703, 704, 708, 712, 713, 714, 726, 730, 731, 777, 816, 818, 820, 822, 823, 827, 828, 829, 831, 834, 835, 836, 837, 845, 849, 851, 852, 855, 858, 862, 867], "other_typ": 560, "otherwis": [4, 6, 31, 36, 37, 44, 51, 54, 56, 62, 63, 64, 71, 104, 108, 118, 165, 183, 184, 207, 210, 214, 216, 229, 230, 231, 238, 240, 241, 245, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 292, 296, 302, 304, 307, 309, 314, 324, 330, 334, 335, 337, 347, 410, 424, 426, 447, 449, 453, 478, 542, 543, 553, 554, 562, 564, 565, 566, 567, 572, 596, 599, 600, 601, 603, 605, 612, 614, 615, 616, 617, 628, 637, 643, 651, 663, 683, 684, 687, 693, 713, 734, 774, 818, 820, 851, 867, 868], "ouptut": 862, "our": [3, 9, 21, 431, 560, 714, 715, 721, 730, 731, 815, 820, 823, 845, 849, 850, 851, 852], "ourselv": 858, "out": [1, 4, 13, 14, 22, 62, 63, 70, 87, 130, 132, 133, 135, 136, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 197, 205, 214, 216, 217, 240, 241, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 299, 335, 384, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 435, 438, 446, 447, 448, 449, 451, 452, 453, 542, 565, 566, 567, 568, 577, 610, 621, 686, 695, 696, 708, 721, 725, 752, 773, 794, 805, 815, 816, 817, 818, 819, 822, 823, 835, 849, 850, 851, 852, 861], "out1": 9, "out2": 9, "out3": 9, "out4": 9, "out_1": 9, "out_2": 9, "out_3": 9, "out_class": [727, 767, 811], "out_degre": [4, 60, 447, 835], "out_dim": [708, 752, 794, 850, 852], "out_dir": 696, "out_dst": [708, 752, 794], "out_edg": 61, "out_edge_feat": 397, "out_feat": [381, 387, 388, 389, 390, 391, 393, 394, 395, 396, 399, 400, 402, 403, 404, 406, 407, 409, 410, 413, 415, 416, 417, 418, 421, 423, 425, 454, 670, 713, 717, 718, 720, 723, 729, 731, 757, 759, 760, 761, 763, 769, 771, 799, 802, 803, 804, 807, 812, 814, 836, 849, 850, 851], "out_feat_1": 670, "out_feat_2": 670, "out_feat_nam": 670, "out_feats\u662f\u8f93\u51fa\u7279\u5f81\u7684\u7ef4\u5ea6": 771, "out_featur": [713, 718, 727, 730, 756, 757, 758, 759, 761, 767, 770, 798, 799, 801, 802, 804, 811, 813, 849, 855], "out_field": 862, "out_indx": 861, "out_nod": 861, "out_node_feat": 397, "out_path": [4, 239, 845, 846], "out_proj": 819, "out_siz": [381, 383, 392, 398, 414, 715, 720, 721, 817, 818, 819, 820, 822, 868], "out_src": [708, 752, 794], "out_subgraph": [330, 335, 714], "out_test_mask": [197, 205], "out_valid_mask": [197, 205], "outbound": [240, 241, 542, 562, 564, 565, 566, 567, 568, 637], "outcom": 542, "outdat": [687, 734, 774], "outer": [715, 801], "outermost": [304, 307], "outfil": 781, "outgo": [88, 352, 850], "outmultiedgedataview": [72, 644, 704, 748, 789], "output": [4, 5, 9, 21, 53, 54, 73, 133, 144, 174, 208, 209, 210, 214, 216, 217, 239, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 304, 330, 334, 335, 336, 350, 380, 381, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 454, 458, 460, 461, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 565, 566, 567, 568, 571, 602, 618, 622, 694, 696, 707, 708, 711, 713, 715, 717, 718, 723, 725, 729, 765, 781, 801, 803, 809, 822, 827, 828, 829, 836, 845, 849, 850, 851, 852, 861, 862], "output_col": [827, 829], "output_d": 419, "output_devic": [49, 50, 76, 106, 208, 209, 214, 216, 217, 219, 245, 246, 330, 334, 335, 478, 479, 542, 565, 566, 567, 568, 867], "output_feat": 408, "output_featur": 850, "output_label": [712, 718, 756, 761, 798, 804], "output_nod": [210, 214, 215, 216, 219, 756, 758, 761, 801, 804, 846], "output_predict": [712, 718, 756, 761, 798, 804], "outsid": [686, 693, 696, 707, 792, 822], "over": [3, 7, 79, 82, 164, 166, 177, 178, 179, 209, 210, 211, 212, 213, 244, 290, 292, 299, 300, 301, 352, 392, 414, 430, 432, 437, 477, 553, 554, 574, 575, 576, 577, 647, 648, 673, 688, 713, 714, 715, 716, 718, 719, 729, 798, 801, 816, 818, 827, 829, 836, 838, 842, 845, 849, 852, 855, 858, 861, 862], "overal": [427, 696, 729, 837, 852, 858, 862, 868], "overfit": 850, "overhead": [22, 70, 336, 390, 427, 429, 571, 719, 842], "overlap": 719, "overrid": [210, 213, 218, 716], "overridden": [421, 422, 423, 424, 425, 426], "overview": [700, 851, 868], "overwit": 156, "overwrit": [200, 201], "overwritten": 816, "own": [21, 156, 336, 410, 427, 429, 569, 571, 693, 694, 695, 696, 708, 712, 713, 714, 716, 718, 731, 822, 823, 825, 826, 829, 834, 837, 840, 841, 842, 845, 846, 850, 852, 858, 862], "owner": 696, "ownership": 696, "p": [120, 147, 161, 174, 214, 216, 219, 384, 419, 420, 428, 429, 455, 456, 549, 562, 564, 567, 656, 657, 658, 695, 696, 756, 781, 798, 845, 855, 858, 862], "p3": 14, "p_": [384, 386], "p_n": [730, 770, 813], "p_p": 174, "pack": 563, "packag": [0, 2, 3, 6, 11, 21, 148, 389, 390, 391, 457, 685, 704, 721, 805, 815, 816, 817, 818, 819, 820, 822, 823, 836, 842, 845, 849, 852, 855], "package\ub97c": 805, "packed_func": 22, "packed_func_ext": 22, "packedfunc": 22, "pad": [337, 447, 448, 450, 451, 452, 562, 563, 564, 572, 635, 647, 648, 663, 671, 819, 856, 862, 865, 868], "pad_id": 862, "pad_sequ": 447, "pad_word": [184, 855], "padding_idx": 862, "page": [10, 21, 67, 89, 112, 134, 149, 155, 185, 187, 193, 712, 816, 817, 818, 819, 820, 827, 829], "pagerank": [385, 666, 670, 818], "pai": 721, "pair": [6, 32, 48, 66, 178, 183, 220, 226, 227, 239, 240, 241, 292, 296, 299, 300, 301, 302, 304, 307, 309, 316, 317, 318, 328, 336, 339, 378, 380, 382, 384, 387, 395, 396, 397, 399, 400, 402, 403, 405, 406, 407, 410, 413, 416, 427, 429, 451, 452, 453, 454, 550, 551, 561, 571, 572, 664, 694, 696, 699, 700, 703, 713, 716, 717, 729, 730, 785, 803, 819, 827, 832, 833, 837, 839, 846, 850, 851, 852, 862], "pair_graph": 220, "pairwis": [427, 428], "panda": [148, 168, 688, 700, 704, 785, 827, 829, 832, 833, 839], "pandas\uc640": 789, "papaer": 862, "paper": [137, 151, 152, 153, 154, 162, 165, 167, 171, 180, 182, 188, 214, 288, 296, 302, 308, 315, 336, 386, 394, 410, 419, 420, 427, 429, 446, 476, 552, 562, 565, 571, 651, 667, 694, 696, 699, 718, 723, 780, 781, 815, 818, 820, 823, 834, 837, 838, 849, 850, 851, 852, 853, 855, 856, 858, 859, 861, 862, 863], "paper___cites___pap": 696, "paradigm": [3, 692, 836, 855], "paral": 855, "parallel": [4, 48, 66, 122, 210, 213, 240, 241, 292, 380, 438, 636, 645, 673, 692, 694, 696, 711, 738, 778, 819, 842, 845, 846, 852, 855, 856, 858, 859, 865, 867, 868], "param": [4, 6, 10, 32, 384, 385, 386, 387, 392, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 414, 416, 417, 418, 419, 420, 454, 455, 458, 868], "paramet": [4, 6, 10, 14, 20, 26, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 596, 599, 600, 601, 602, 603, 605, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 671, 673, 683, 684, 686, 690, 692, 693, 707, 708, 709, 713, 716, 718, 720, 721, 722, 723, 724, 725, 727, 729, 730, 731, 733, 736, 738, 739, 752, 756, 757, 759, 761, 767, 769, 770, 771, 773, 776, 778, 779, 794, 798, 799, 802, 804, 805, 807, 811, 812, 813, 814, 816, 817, 818, 819, 820, 822, 827, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 858, 862, 867, 868], "parameter": [141, 423, 425, 727, 811, 850, 851, 858], "parametr": [858, 863, 865], "parent": [210, 213, 233, 245, 478, 861], "pari": 832, "parit": [348, 349], "paritt": 457, "parmeti": [694, 696], "parmetis\uac00": 781, "parmetis\ub290": 781, "parmetis\ub294": 781, "parmetis\uc5d0": 781, "parmetis\uc758": 781, "parquet": 696, "pars": [148, 688, 696, 700, 704, 839, 855, 856, 865], "parser": 148, "part": [4, 21, 22, 135, 151, 152, 197, 205, 239, 289, 434, 435, 451, 565, 690, 693, 696, 700, 706, 709, 713, 724, 781, 819, 832, 833, 836, 862], "part0": [239, 695, 696, 740, 781], "part1": [239, 695, 696, 740, 781], "part1_end": 239, "part1_start": 239, "part2": 696, "part2_end": 239, "part2_start": 239, "part_config": [4, 235, 236, 237, 692, 693, 694, 697, 738, 739, 741, 778, 779, 780, 782, 845], "part_data": [695, 696], "part_graph": 239, "part_id": [4, 235, 236, 237, 348, 695, 696, 781], "part_method": [4, 239], "part_polici": [4, 694, 780], "part_ratio": [197, 205], "partial": [4, 713, 827, 850, 852, 858, 862], "particip": [210, 213], "particular": [4, 21, 90, 107, 149, 185, 197, 221, 239, 246, 411, 422, 573, 610, 621, 694, 704, 715, 822, 837, 838], "particularli": [244, 300, 477, 700, 704, 820], "partid": 4, "partid2eid": 4, "partid2nid": 4, "partit": [13, 209, 231, 235, 236, 237, 238, 239, 348, 349, 411, 457, 543, 558, 683, 686, 692, 693, 697, 781, 851, 867], "partiti": 862, "partitioend": [348, 543], "partition_algo": 696, "partition_book": [4, 231, 238, 695, 696], "partition_graph": [4, 693, 695, 696, 740, 779, 781, 845, 846], "partitionpolici": [4, 694, 780], "partmetis\ub97c": 781, "partx": [695, 696], "pascal": [9, 707, 792], "pass": [0, 1, 4, 5, 13, 22, 73, 91, 92, 121, 122, 130, 131, 178, 179, 208, 209, 210, 213, 214, 215, 220, 239, 245, 296, 330, 334, 335, 348, 349, 384, 385, 386, 387, 390, 396, 397, 399, 400, 402, 403, 404, 407, 410, 411, 413, 414, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 454, 460, 478, 542, 565, 569, 637, 674, 675, 676, 677, 678, 679, 680, 681, 682, 686, 688, 690, 693, 695, 696, 702, 705, 712, 715, 717, 718, 722, 725, 726, 729, 731, 733, 736, 749, 773, 776, 790, 795, 805, 810, 814, 815, 829, 831, 832, 833, 837, 842, 845, 846, 852, 853, 856, 858, 863, 865], "passwordless": [697, 782, 845], "pass\ub97c": 805, "path": [4, 21, 156, 184, 199, 200, 201, 202, 203, 206, 209, 234, 235, 236, 237, 239, 308, 315, 333, 341, 347, 382, 451, 452, 563, 564, 569, 572, 651, 687, 688, 691, 695, 696, 697, 734, 737, 774, 777, 781, 827, 829, 831, 832, 833, 845, 858], "path_data": 451, "path_encod": 451, "path_graph": [700, 744, 785], "pathlik": 4, "patit": 694, "pattern": [22, 120, 174, 835, 852], "pb": [692, 738, 778], "pc": 382, "pcgnn_www2021": 162, "pcie": 719, "pd": [183, 688, 832, 833, 839, 851], "pdf": [147, 161, 162, 174, 195, 425, 448, 720, 768, 862], "pe": [392, 663, 667, 819], "peek": 827, "peocess": 307, "peopl": [145, 699, 729], "pep8": 21, "per": [4, 101, 102, 138, 166, 175, 186, 214, 215, 216, 219, 220, 226, 227, 239, 240, 245, 296, 302, 311, 318, 327, 328, 330, 334, 335, 336, 390, 427, 429, 478, 480, 542, 565, 571, 653, 680, 681, 682, 689, 694, 696, 704, 709, 780, 795, 818, 827, 842, 852, 867], "percent": [851, 852], "percentag": [145, 858], "perfetch": 719, "perform": [0, 1, 4, 5, 9, 21, 22, 91, 92, 118, 119, 122, 130, 141, 142, 143, 162, 168, 188, 189, 190, 207, 210, 217, 219, 221, 239, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 298, 299, 302, 307, 316, 348, 349, 352, 380, 384, 386, 387, 390, 396, 399, 400, 402, 403, 404, 407, 410, 417, 421, 422, 423, 424, 425, 426, 438, 446, 447, 449, 451, 452, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 553, 561, 565, 566, 567, 568, 574, 575, 605, 647, 648, 670, 693, 694, 696, 698, 700, 702, 708, 711, 714, 715, 719, 721, 723, 724, 725, 727, 729, 730, 731, 818, 819, 822, 828, 829, 836, 837, 842, 845, 846, 849, 850, 851, 852, 855, 858, 859, 865, 867], "perftools4": 842, "perhap": 852, "perman": 21, "permiss": 21, "permut": [197, 205, 434, 435, 558, 837, 851], "permute_config": [98, 558], "persist": [4, 693], "persistent_work": 290, "person": [385, 651, 666, 670, 818, 850], "personen": 132, "persourceuniform": 228, "perspect": [861, 862], "perturb": [142, 143, 189, 190], "perturb_ratio": [142, 143, 189, 190], "pgexplain": 423, "phase": [724, 855, 862], "phi": [399, 412, 502, 706, 730, 750, 756, 770, 791, 798, 813], "phi_e": 398, "phi_h": 398, "phi_x": 398, "photo": [25, 135, 136], "php": 845, "physic": [25, 151, 152, 696], "pi": [386, 453, 851], "pick": [6, 14, 214, 216, 219, 427, 428, 562, 564, 565, 567, 716, 837, 852], "pickl": [827, 829, 832, 833, 846], "pictur": 862, "piec": 836, "pin": [10, 67, 89, 112, 210, 296, 314, 315, 564, 714], "pin_memori": [314, 715, 759, 802, 827, 829], "pin_memory_": [296, 314, 315, 714], "pin_prefetch": 210, "pinsag": 560, "pip": [689, 735, 775, 817, 818, 819, 820, 822, 827, 829, 832, 833], "pipe": [719, 829], "pipelin": [3, 7, 290, 686, 694, 705, 711, 714, 716, 726, 729, 731, 826, 828, 829, 846], "pixel": [146, 169], "pkl": [209, 691, 737, 777, 846], "place": [1, 21, 70, 116, 130, 210, 290, 296, 297, 314, 315, 333, 339, 559, 565, 566, 567, 568, 636, 645, 702, 867], "placehold": 221, "plai": [4, 27, 28, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 114, 115, 116, 117, 122, 130, 214, 216, 219, 245, 246, 329, 330, 334, 335, 380, 421, 422, 423, 424, 425, 426, 478, 479, 542, 555, 556, 557, 559, 644, 645, 652, 653, 658, 668, 669, 673, 683, 704, 748, 756, 789, 798, 818, 821], "plain": 830, "plan": 726, "platform": [145, 188], "player": [46, 74, 103, 658, 669], "pleas": [4, 9, 21, 22, 27, 28, 114, 115, 116, 117, 130, 148, 210, 214, 215, 216, 245, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 289, 292, 330, 333, 339, 347, 405, 416, 478, 479, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 556, 558, 559, 560, 567, 636, 637, 645, 646, 690, 695, 712, 713, 716, 718, 719, 720, 721, 729, 731, 820, 827, 829, 832, 833, 836, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 868], "plenti": 835, "plot": [852, 855], "plot_tre": 855, "plt": [818, 851, 855, 858, 861], "plu": [131, 159, 286, 329, 708, 820, 823], "pm": [183, 851, 852], "pm_dglpart": [695, 781], "pm_pd": [183, 851], "pm_pd_batch": 183, "pm_pd_y": 851, "pma": 434, "pmpd": 851, "pmpd1": 851, "pn": 770, "pna": 414, "pnaconv": 392, "png": [834, 835, 836, 837, 838, 839], "po": [6, 179, 818, 851, 855, 861, 862], "point": [9, 14, 178, 179, 296, 302, 307, 336, 399, 427, 428, 429, 549, 571, 639, 640, 641, 707, 798, 820, 851, 862], "point_idx": 6, "pointer": [22, 131, 286, 296, 323, 329, 615, 616, 700], "poisson": 302, "polariz": [178, 179], "polici": [4, 694], "policy_str": 4, "polit": 166, "politifact": 159, "ponder": 862, "ponderli": 162, "pool": [6, 13, 386, 416, 421, 426, 430, 431, 432, 433, 434, 436, 437, 450, 458, 722, 723, 724, 762, 763, 764, 806, 807, 808, 855, 861, 862, 863, 865, 867], "pooler": 819, "poorli": 842, "pop": [423, 425, 426, 849, 850, 852, 855, 867], "popul": [21, 208, 423, 425], "popular": [167, 197, 693, 704, 731, 816, 823, 834], "port": [697, 845, 846], "port1": [845, 846], "port2": [845, 846], "portion": [4, 10, 693, 828, 834], "pos_dst": 846, "pos_enc": [819, 862], "pos_enc_s": 819, "pos_encod": 450, "pos_featur": 846, "pos_graph": 846, "pos_linear": 819, "pos_pair_graph": 220, "pos_scor": [730, 759, 770, 802, 813, 837, 846], "pos_src": 846, "pos_u": 382, "pos_v": 382, "pose": 861, "posit": [6, 13, 120, 145, 150, 157, 158, 161, 163, 184, 191, 214, 220, 240, 241, 296, 302, 304, 306, 307, 316, 337, 378, 380, 382, 398, 401, 446, 448, 449, 450, 552, 562, 564, 565, 635, 663, 667, 671, 688, 716, 802, 819, 822, 827, 846, 852, 855, 862], "positionwis": [434, 435], "positive_edge_dst": [139, 846], "positive_edge_src": [139, 846], "positive_graph": [759, 802], "positive_node_pair": [304, 713], "possibl": [21, 137, 220, 226, 292, 299, 386, 550, 551, 561, 700, 707, 708, 714, 827, 829, 832, 833, 837, 838, 845, 850, 851, 858, 862], "possible_dest": 858, "possible_dests_emb": 858, "possibli": [729, 827, 829], "possibly_batched_index": [827, 829], "post": [21, 24, 163, 181, 862], "post0": [827, 829, 832, 833], "post_func": 862, "post_pair": 862, "postiv": 802, "potenti": [713, 838, 850], "power": [10, 22, 165, 405, 423, 425, 428, 450, 549, 660, 696, 716, 756, 798, 818, 822, 834, 838, 856, 865], "ppa": [689, 735, 775], "ppi": [25, 823], "ppidata": [690, 736, 776], "ppidataset": 25, "ppr": [13, 670], "pq": 183, "pr": 21, "practic": [384, 394, 396, 399, 400, 402, 403, 404, 407, 410, 417, 476, 686, 710, 729, 819, 825, 827, 837, 839, 843, 844, 851, 852, 867], "practice\ub4e4\uc744": 773, "practis": [384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 708, 842], "pramet": 419, "pre": [4, 23, 125, 173, 248, 302, 307, 383, 406, 410, 412, 415, 419, 420, 818, 819, 827, 829, 832, 833, 858, 862], "pre_func": 862, "pre_kv": 862, "pre_pair": 862, "pre_q": 862, "precis": [9, 639, 640, 641, 705, 707, 790, 792, 837, 852], "precomput": 392, "precond": [419, 420], "pred": [4, 425, 713, 727, 730, 757, 759, 767, 770, 799, 802, 811, 813, 817, 818, 834, 836, 837, 838, 851, 855, 867], "predction": 198, "predecessor": [93, 107, 334, 336, 340, 427, 429, 476, 571, 798], "predefin": [150, 154, 176, 731], "predic": [53, 54, 851, 862], "predict": [13, 132, 133, 137, 138, 139, 140, 144, 150, 154, 157, 158, 162, 170, 171, 173, 176, 177, 178, 179, 180, 188, 191, 197, 211, 214, 216, 220, 242, 244, 302, 304, 307, 385, 386, 421, 422, 423, 425, 426, 433, 438, 454, 477, 689, 693, 711, 712, 713, 718, 726, 729, 731, 735, 759, 775, 776, 802, 817, 818, 819, 825, 826, 829, 834, 836, 838, 840, 841, 845, 847, 848, 851, 852, 855, 858, 861], "predict_categori": [132, 133, 144, 170, 850], "prediction\u6570\u636e\u96c6": 735, "prediction\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 735, "predictor": [438, 454, 713, 716, 727, 757, 759, 799, 802, 819, 827, 846], "prefer": [168, 186, 703, 836], "prefetch": [13, 208, 209, 214, 216, 217, 220, 221, 222, 223, 224, 225, 719, 827, 829], "prefetch_buff": [827, 829], "prefetch_data": [827, 829], "prefetch_edata": [209, 217], "prefetch_edge_feat": [208, 214, 216, 219], "prefetch_label": [208, 214, 216, 220], "prefetch_ndata": [209, 217], "prefetch_node_feat": [208, 214, 216, 219], "prefetcheriterdatapip": [827, 829], "prefix": [637, 695, 781], "preform": [296, 302, 307, 720], "prepar": [292, 696, 726, 729, 827, 829, 839, 845, 862], "prepare_for_train": 858, "prepare_train": 858, "prepend": 68, "preprocess": [132, 133, 144, 170, 179, 184, 692, 695, 817, 818, 820, 826, 827, 829, 832, 833, 837, 868], "prerequisit": 695, "presenc": [149, 185], "present": [296, 309, 422, 424, 819, 850, 852, 861], "preserv": [95, 96, 127, 231, 233, 238, 240, 241, 555, 557, 565, 566, 567, 568, 660, 661, 666, 822, 849, 855], "presort": [412, 415], "pretrain": [159, 184, 816], "pretrained_emb": [184, 855], "prev_proj": 851, "prevent": [122, 145, 411, 446, 449, 653, 712, 721, 816, 850], "previou": [186, 289, 384, 716, 719, 727, 729, 730, 813, 828, 837, 839, 851, 862, 868], "previous": [718, 720, 727], "price": 22, "primari": 291, "prime": [397, 400], "primit": [3, 390, 391, 858], "princip": [414, 790], "principl": [700, 717], "print": [4, 6, 20, 21, 22, 42, 53, 54, 70, 108, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 219, 245, 292, 296, 298, 309, 310, 316, 317, 319, 320, 323, 328, 333, 379, 380, 381, 383, 385, 401, 404, 406, 410, 427, 429, 447, 451, 452, 453, 479, 480, 558, 572, 573, 642, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 673, 686, 688, 689, 693, 695, 696, 703, 718, 721, 727, 730, 731, 735, 739, 747, 756, 761, 767, 770, 771, 773, 775, 779, 788, 798, 804, 805, 811, 813, 814, 817, 818, 819, 820, 822, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 845, 849, 850, 851, 852, 855, 858, 862, 867, 868], "print_everi": [132, 133, 144, 170], "printcalcul": 22, "prior": [856, 865], "prioriti": [239, 569, 816], "prob": [214, 216, 219, 240, 241, 423, 425, 562, 564, 565, 566, 858, 862], "prob_nam": [302, 307, 827, 829], "probabl": [147, 174, 214, 216, 217, 219, 240, 241, 296, 302, 307, 385, 423, 425, 446, 448, 449, 552, 560, 562, 564, 565, 566, 567, 656, 657, 658, 666, 670, 716, 731, 798, 802, 827, 837, 851, 852, 858, 859, 861, 862, 865], "problem": [292, 721, 834, 837, 850, 851, 856, 862, 865, 868], "probs_nam": [296, 829], "proc_id": 292, "proce": [704, 729, 849, 851, 862], "procedur": [6, 423, 425, 690, 862], "process": [0, 2, 4, 6, 8, 22, 41, 134, 137, 138, 139, 140, 142, 143, 149, 155, 156, 171, 173, 180, 182, 185, 187, 188, 189, 190, 193, 210, 213, 231, 234, 238, 289, 290, 292, 299, 302, 304, 307, 350, 351, 382, 385, 404, 417, 418, 421, 422, 423, 425, 438, 457, 459, 579, 685, 686, 688, 689, 691, 692, 693, 694, 695, 696, 697, 711, 714, 719, 729, 733, 736, 773, 776, 777, 818, 819, 826, 838, 839, 842, 845, 846, 850, 851, 852, 855, 858, 862], "prod_": 9, "produc": [230, 596, 599, 600, 601, 603, 696, 724, 837, 849, 852], "product": [4, 118, 135, 136, 137, 161, 163, 288, 382, 396, 410, 454, 596, 621, 699, 714, 720, 727, 730, 741, 782, 800, 813, 819, 820, 837, 845, 846, 852, 861, 862], "product\ub85c": 802, "product\ub97c": [811, 813], "profil": [159, 188, 827, 829], "prog": 855, "program": [9, 21, 22, 292, 692, 698, 818, 839, 868], "progress": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 424, 426, 686, 773, 859, 865], "progressbar": [827, 829], "prohibit": 159, "proj": 862, "project": [22, 155, 187, 188, 193, 386, 446, 456, 713, 836, 849, 850, 851, 858], "project_initial_featur": 404, "prompt": 816, "prop": [420, 858], "prop_edg": 92, "prop_edges_yyi": 0, "prop_nod": [91, 855], "prop_nodes_topo": 855, "prop_nodes_xxx": 0, "prop_step": [419, 420], "propag": [13, 91, 92, 159, 385, 419, 420, 459, 545, 547, 548, 715, 731, 814, 818, 828, 851, 855], "propagagtion\uc744": 801, "propagate_attent": 862, "propagation\uc744": 814, "propagation\uc758": 801, "proper": [210, 842], "properli": [138, 139, 140], "properti": [4, 38, 39, 42, 43, 44, 45, 46, 51, 52, 59, 65, 66, 68, 74, 77, 78, 103, 104, 105, 120, 138, 160, 162, 177, 178, 179, 195, 197, 205, 291, 296, 300, 301, 303, 304, 308, 309, 311, 313, 433, 438, 578, 579, 580, 586, 588, 595, 597, 598, 608, 675, 676, 678, 680, 681, 689, 690, 701, 729, 735, 736, 775, 776, 819, 835, 838, 839, 850, 858, 861], "property_nam": 197, "property_valu": 205, "proport": [214, 216, 217, 219, 306, 316, 695, 716], "propos": [162, 197, 205, 244, 383, 477, 635, 671, 834, 836, 850, 852, 855, 862], "protect": [693, 839], "protein": [25, 52, 165, 175, 386, 689, 735, 775, 838], "proteom": 858, "protest": 164, "prototyp": [22, 703], "proven": 819, "provid": [0, 3, 4, 5, 7, 8, 9, 21, 34, 35, 73, 80, 89, 93, 113, 131, 138, 139, 140, 165, 168, 178, 179, 205, 208, 209, 213, 214, 216, 219, 220, 286, 291, 292, 296, 302, 307, 309, 329, 336, 341, 380, 405, 410, 416, 423, 425, 427, 429, 457, 558, 569, 571, 576, 577, 605, 642, 670, 683, 685, 686, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 703, 704, 710, 711, 713, 716, 717, 718, 721, 726, 727, 728, 729, 731, 822, 826, 827, 829, 830, 834, 835, 836, 837, 838, 839, 842, 845, 849, 850, 852, 855, 861, 862, 867, 868], "provis": [692, 697], "proxi": 133, "prune": [424, 426], "pseudo": [207, 380, 407], "pseudocod": 861, "psi": [453, 503, 706, 750, 791], "psi_": 503, "psutil": [827, 829, 832, 833], "pt": [315, 696, 832, 833], "ptc": 165, "pth": 858, "pub": 162, "public": [22, 150, 176, 851], "publish": 823, "pubm": [25, 176, 690, 736, 776, 823], "pull": [0, 21, 92, 851, 855], "purchas": [135, 136, 137, 288, 757, 799, 820], "pure": [178, 179, 707, 723], "purl": 133, "purpos": [4, 239, 292, 299, 304, 567, 686, 688, 690, 704, 715, 727, 852], "push": [4, 21, 823], "put": [22, 239, 348, 349, 420, 448, 558, 714, 718, 719, 832, 833, 834, 861, 867], "py": [21, 22, 199, 200, 696, 697, 729, 741, 769, 781, 782, 812, 816, 819, 825, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 841, 842, 844, 845, 846, 848, 849, 850, 851, 852, 854, 855, 857, 858, 860, 861, 862, 864, 867, 868, 870], "pyarrow": [696, 781], "pydant": 148, "pyg": 823, "pygcn": 849, "pygraphviz": 855, "pylibcugraphop": [389, 390, 391], "pylint": 21, "pylintrc": 21, "pyplot": [818, 851, 855, 858, 861], "python": [0, 8, 21, 22, 34, 53, 92, 100, 203, 205, 206, 210, 389, 390, 391, 691, 692, 693, 696, 700, 703, 737, 777, 779, 785, 815, 816, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "python3": [21, 697, 741, 782, 816, 819, 827, 829, 832, 833, 845, 849, 852], "pythonpath": 21, "python\uc758": 777, "pytorch": [3, 4, 5, 6, 8, 9, 10, 13, 14, 21, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 186, 196, 210, 213, 214, 215, 216, 219, 234, 245, 246, 247, 248, 249, 262, 263, 264, 265, 286, 289, 292, 314, 315, 329, 330, 334, 335, 336, 346, 352, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 478, 479, 542, 549, 560, 571, 573, 636, 638, 642, 643, 644, 652, 658, 664, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 690, 692, 693, 703, 717, 719, 721, 722, 723, 724, 726, 729, 731, 760, 762, 765, 769, 771, 778, 779, 799, 803, 804, 805, 806, 807, 812, 814, 815, 817, 818, 819, 820, 822, 823, 824, 826, 827, 829, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 867, 868], "pytorchcaffe2": 842, "pytorch\u7684nn\u6a21\u5757": 762, "pytorch\u7684tensor\u7c7b": 747, "pytorch\ub294": 805, "pytorch\ub85c": 803, "pytorch\ub97c": 810, "pytorch\uc640": [776, 779], "pytorch\uc758": [788, 805, 808], "pytz": [827, 829, 832, 833], "pyyaml": 148, "py\u548claunch": 741, "py\u5e94\u8be5\u4f7f\u7528\u76f8\u540c\u7684ip\u914d\u7f6e\u6587\u4ef6": 741, "q": [147, 174, 180, 412, 433, 446, 562, 567, 819, 862], "q_": [383, 415], "q_i": 862, "q_j": 862, "q_p": 174, "q_proj": 819, "q_t": 433, "qi": [849, 851], "qingbiao": 749, "qingbiaoli": 749, "qipeng": [855, 862], "qk": [446, 819], "qkv": 862, "qm7b": [25, 177, 690, 736, 776], "qm7bdata": [690, 736, 776], "qm7bdataset": [687, 690, 734, 736, 774, 776], "qm7bdataset\u6e90\u4ee3\u7801": 736, "qm9": 178, "qm9dataset": 179, "qm9edg": 179, "qm9edgedataset": 178, "qquad": 851, "qualiti": [214, 862], "quan": [849, 862], "quantiti": [244, 477], "quantum": [177, 178, 179, 387, 413], "queri": [4, 13, 36, 37, 38, 45, 47, 48, 51, 54, 55, 56, 57, 58, 60, 61, 75, 77, 79, 80, 81, 82, 87, 88, 89, 90, 105, 107, 703, 819, 862], "question": [180, 851], "queue": [4, 234], "queue_siz": 4, "quick": [22, 703, 822], "quickli": 836, "quickstart": 821, "quit": [22, 691, 720, 852], "quot": [688, 835], "r": [14, 60, 87, 118, 119, 163, 178, 179, 314, 317, 383, 397, 400, 402, 403, 415, 428, 430, 431, 432, 437, 455, 456, 501, 504, 549, 652, 696, 706, 709, 720, 725, 750, 765, 791, 809, 818, 819, 820, 822, 858, 861, 862], "r0": [296, 694, 780], "r1": [296, 694, 780], "r2": [178, 179, 296, 694, 780], "r3": [296, 694, 780], "r_": [386, 651, 725, 765, 809, 822], "r_1": 651, "r_2": 651, "r_g": 549, "r_i": [390, 453], "r_j": [453, 651], "r_k": 386, "r_t": [214, 433, 565], "radial": 386, "radiu": [242, 428, 549], "radius_proj": 851, "rais": [21, 48, 89, 109, 116, 131, 145, 177, 178, 179, 183, 286, 329, 337, 384, 396, 399, 400, 401, 402, 403, 404, 407, 410, 417, 635, 636, 637, 663, 671, 687, 694, 723, 724, 734, 763, 764, 774, 807, 808, 827, 829], "ram": [14, 308, 696], "rand": [6, 9, 128, 129, 214, 216, 219, 396, 397, 399, 400, 402, 403, 407, 408, 410, 413, 416, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 448, 449, 451, 453, 460, 647, 648, 700, 721, 744, 785, 805, 832, 833], "rand_bipartit": 551, "rand_graph": [9, 299, 382, 397, 400, 408, 411, 430, 431, 432, 433, 434, 435, 436, 437, 438, 454, 455, 456, 459, 550, 650, 656, 657, 658, 669, 670, 721, 805], "randint": [383, 455, 456, 713, 726, 727, 730, 766, 767, 770, 810, 811, 813, 832, 833], "randn": [5, 47, 75, 118, 119, 121, 380, 381, 383, 406, 411, 422, 423, 424, 454, 455, 456, 611, 612, 618, 621, 629, 653, 669, 670, 672, 701, 702, 726, 727, 745, 746, 756, 766, 767, 786, 787, 798, 810, 811, 822, 835, 861], "random": [0, 6, 13, 142, 143, 161, 162, 163, 172, 173, 174, 183, 189, 190, 197, 198, 205, 207, 214, 217, 239, 244, 292, 299, 326, 378, 382, 396, 397, 400, 402, 403, 410, 413, 430, 431, 432, 433, 434, 435, 436, 437, 438, 477, 550, 551, 552, 560, 562, 563, 564, 565, 570, 667, 670, 696, 715, 720, 726, 727, 766, 767, 810, 811, 819, 832, 833, 837, 852, 867], "random_flip": [635, 671], "random_partit": 696, "random_se": [161, 162, 163, 197, 205, 565], "random_st": [142, 143, 173, 189, 190, 207, 867], "random_walk": [563, 714], "random_walk_with_restart": 564, "randomli": [6, 142, 143, 147, 171, 174, 189, 190, 207, 209, 210, 213, 226, 227, 231, 238, 240, 241, 296, 455, 456, 565, 566, 567, 635, 650, 656, 657, 658, 665, 671, 696, 726, 798, 810, 826, 837], "randomst": [183, 207], "randomwalkp": 13, "rang": [4, 128, 129, 145, 164, 165, 168, 172, 186, 210, 213, 239, 297, 299, 300, 309, 314, 318, 327, 328, 348, 378, 421, 422, 423, 424, 425, 447, 452, 459, 543, 561, 567, 576, 577, 643, 690, 692, 694, 696, 720, 721, 727, 729, 730, 731, 736, 738, 767, 769, 770, 771, 776, 778, 805, 811, 812, 813, 814, 817, 818, 819, 827, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "rangepartitionbook": 4, "rangl": [178, 179], "rank": [4, 231, 238, 350, 436, 666, 836, 867, 868], "rapid": 850, "rare": [226, 561], "rate": [4, 10, 14, 137, 161, 163, 173, 385, 389, 390, 391, 395, 400, 402, 403, 408, 412, 415, 416, 419, 420, 421, 422, 434, 435, 727, 850], "rather": [142, 143, 189, 190, 820, 851, 858], "ratio": [138, 139, 140, 161, 163, 173, 197, 198, 205, 243, 296, 392, 414, 650], "raw": [0, 95, 96, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 245, 330, 334, 335, 450, 478, 542, 555, 556, 573, 670, 685, 686, 688, 690, 696, 728, 772, 773, 823, 826, 832, 833, 839], "raw_dir": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 686, 687, 690, 733, 734, 736, 773, 774, 776], "raw_dir\u4e0b\u7684self": 734, "raw_dir\u6307\u5b9a\u7684\u503c": 733, "raw_path": [156, 687, 690, 734, 736, 774, 776], "rb": [415, 846, 850], "rbf": 386, "rbf_kernel_mean": 386, "rbf_kernel_sc": 386, "rbrace": [186, 706, 750, 756, 791, 798], "rcmk": 558, "rcount": [849, 852], "rdf": [132, 133, 144, 170, 850], "rdfdata": [690, 736, 776], "rdfgraphdataset": [132, 133, 144, 170], "re": [6, 95, 96, 134, 137, 138, 139, 140, 148, 149, 155, 171, 173, 180, 182, 185, 187, 188, 193, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 399, 401, 402, 403, 404, 405, 406, 407, 409, 410, 413, 415, 416, 417, 418, 419, 420, 556, 558, 690, 823, 827, 829, 832, 833, 868], "reach": [711, 855, 862], "reachabl": 347, "read": [1, 3, 4, 5, 13, 21, 168, 183, 207, 287, 293, 294, 295, 297, 308, 314, 380, 688, 693, 695, 696, 715, 815, 822, 823, 837, 839, 845, 846, 855, 862, 868], "read_csv": 839, "reader": [849, 852], "readi": [712, 832, 833, 845, 858], "readm": [21, 210], "readonli": [116, 636], "readout": [435, 438, 553, 554, 838], "readout_edg": [342, 344, 554, 633], "readout_nod": [343, 345, 553, 634, 729, 769, 812], "real": [159, 162, 292, 696, 781, 818, 819, 828, 835, 858, 862], "realiz": 20, "realli": [137, 171, 180, 182, 188, 317, 446, 447, 449, 451, 452], "reason": [21, 164, 166, 292, 693, 715, 827, 829], "reassign": 695, "recal": [14, 819, 828, 850, 852, 862], "receiv": [20, 53, 100, 221, 292, 385, 394, 410, 679, 680, 681, 682, 707, 836, 858], "recent": [162, 819, 827, 829, 862], "recip": [421, 422, 423, 424, 425, 426], "recogn": [724, 764, 808], "recognit": 174, "recommand": 27, "recommend": [5, 21, 22, 34, 73, 93, 94, 100, 113, 120, 125, 163, 173, 210, 248, 292, 299, 393, 394, 395, 560, 643, 685, 686, 690, 691, 693, 695, 696, 699, 707, 708, 714, 727, 730, 816, 827, 829, 832, 833, 836, 837, 842, 845, 849, 850, 851, 852, 855, 858, 861, 862, 867], "reconstruct": 850, "record": [56, 132, 145, 645, 818, 855, 858], "recov": [696, 838, 850], "recreat": 822, "recurr": [164, 166, 409, 433, 862, 863, 865], "recurs": [21, 348, 349, 816], "recursive_appli": [827, 829], "reddit": [25, 181, 721, 805, 823], "redditbinari": 165, "redditdata": [690, 736, 776], "redditdataset": [25, 721, 805], "redditmulti5k": 165, "redistribut": [815, 816], "reduc": [13, 20, 73, 91, 92, 93, 94, 100, 113, 244, 262, 263, 264, 265, 477, 503, 505, 544, 545, 546, 547, 548, 599, 600, 601, 603, 696, 706, 707, 709, 715, 721, 791, 792, 795, 805, 808, 828, 836, 842, 849, 850, 852, 855, 862, 868], "reduce_func": [73, 91, 92, 93, 94, 100, 113, 262, 263, 264, 265, 544, 545, 546, 547, 548, 707, 709, 710, 751, 753, 754, 792, 795, 796, 836, 852, 855, 858, 862], "reduce_op": 503, "reduceop": 868, "reducer\ub294": 795, "reduct": [9, 73, 91, 92, 93, 94, 100, 113, 214, 505, 596, 599, 600, 601, 709, 725, 795, 809, 836, 855], "redund": [292, 561], "ref": [144, 740], "refer": [4, 9, 21, 22, 24, 44, 72, 104, 135, 136, 146, 147, 148, 151, 152, 153, 159, 162, 164, 166, 169, 174, 175, 177, 178, 179, 181, 183, 195, 210, 214, 215, 216, 239, 240, 292, 296, 316, 383, 415, 430, 431, 432, 433, 434, 436, 437, 448, 502, 503, 560, 566, 637, 690, 693, 700, 704, 712, 713, 714, 718, 719, 720, 730, 731, 757, 761, 799, 804, 815, 817, 818, 820, 827, 829, 832, 833, 835, 836, 838, 842, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "refere": 862, "reflect": [22, 26, 70, 149, 185, 304, 309, 818], "refresh": [820, 829], "regard": [405, 410, 416, 481, 482, 483, 484, 624, 728, 822], "regardless": [4, 80, 117, 130, 233, 289, 296, 309, 341, 347, 695, 696, 858], "regim": 715, "region": [23, 818], "regist": [22, 421, 422, 423, 424, 425, 426, 723], "register_object": 22, "registr": 722, "registri": 22, "regress": [2, 138, 177, 178, 179, 195, 211, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 690, 713, 724, 726, 730, 776, 810, 838], "regression_test": [827, 829, 832, 833, 839, 851, 855, 858, 861], "regression\ub3c4": 814, "regular": [171, 383, 390, 397, 415, 423, 425, 461, 693, 850], "regularli": 867, "reiniti": [378, 382, 389, 390, 391, 393, 394, 395, 397, 400, 402, 403, 404, 407, 409, 410, 413, 416, 417, 418, 433, 454, 455, 456, 458, 723, 807, 852], "reject": [561, 651], "rel": [95, 96, 308, 423, 424, 426, 455, 456, 690, 696, 697, 713, 716, 718, 729, 731, 736, 757, 759, 761, 769, 771, 776, 799, 802, 804, 812, 814, 831, 832, 833], "rel_data_path": [741, 782], "rel_emb": [455, 456], "rel_graph": [725, 765, 809], "rel_nam": [423, 713, 716, 718, 727, 729, 730, 731, 757, 759, 761, 767, 769, 770, 771, 799, 802, 804, 811, 812, 813, 814], "rel_project": 456, "rel_typ": [25, 164, 166], "relabel": [4, 6, 122, 125, 239, 245, 248, 318, 330, 334, 335, 478, 542, 704, 720], "relabel_idx": 6, "relabel_nod": [49, 106, 157, 158, 191, 245, 330, 334, 335, 478, 542, 756, 798], "relat": [1, 13, 18, 21, 26, 52, 59, 113, 117, 122, 125, 126, 131, 132, 133, 144, 157, 158, 161, 162, 163, 170, 191, 203, 206, 220, 245, 248, 249, 286, 289, 309, 310, 329, 330, 334, 335, 352, 380, 383, 390, 392, 414, 415, 453, 455, 456, 461, 478, 542, 550, 551, 651, 688, 690, 696, 698, 699, 704, 709, 713, 724, 725, 789, 795, 822, 825, 826, 827, 829, 832, 833, 852, 853, 854, 862, 865], "relation_submodul": 380, "relationship": [150, 154, 176, 564, 713, 820, 837, 850, 851, 853, 865], "releas": [6, 816, 827, 829, 832, 833], "relev": 730, "relgraphconv": [390, 643], "relgraphconvlay": [731, 771, 814], "reli": [721, 826, 845], "reliabl": 22, "reload": [132, 133, 135, 136, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 686, 773], "relu": [121, 388, 393, 399, 405, 406, 408, 426, 449, 692, 713, 715, 716, 717, 718, 720, 721, 723, 724, 729, 731, 738, 757, 758, 759, 760, 761, 763, 764, 769, 771, 778, 799, 801, 802, 803, 804, 807, 808, 812, 814, 817, 818, 819, 820, 822, 827, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 867, 868], "relubackward0": 405, "remain": [100, 180, 181, 302, 307, 308, 556, 711, 720, 842, 852], "remaind": 862, "remap": 696, "remot": [21, 145, 177, 178, 179, 686, 687], "remov": [95, 96, 118, 119, 130, 135, 136, 151, 152, 153, 157, 168, 186, 192, 245, 288, 330, 334, 335, 542, 555, 556, 557, 563, 645, 653, 668, 717, 718, 837, 862], "remove_edg": [27, 28, 96, 114, 115, 556, 837], "remove_nod": [27, 28, 95, 114, 115, 555], "remove_self_loop": 117, "removeselfloop": 13, "renam": [127, 646], "render": 21, "reorder": [150, 154, 160, 176, 194, 412, 558, 567, 690, 776], "reorder_graph": [150, 154, 160, 176, 194, 412, 415, 690, 736, 776], "reparameter": 420, "repeat": [6, 128, 129, 142, 317, 318, 334, 335, 450, 731, 858, 861, 867], "repeat_interleav": [128, 129, 716, 730, 759, 770, 802, 813], "repeatedli": [382, 730, 862], "replac": [21, 100, 131, 216, 219, 221, 226, 240, 241, 286, 296, 302, 307, 318, 327, 328, 329, 448, 481, 483, 486, 488, 507, 509, 513, 515, 521, 523, 527, 529, 550, 551, 561, 565, 566, 567, 635, 645, 671, 693, 694, 696, 716, 717, 718, 739, 759, 779, 780, 802, 819, 822, 827, 829, 836, 837, 849, 861, 862, 863, 865], "replic": 235, "replica": [292, 868], "repo": [21, 23, 687, 696, 734, 774, 817, 818, 819, 820, 822, 827, 829, 832, 833, 862], "report": [14, 852], "repositori": [21, 816, 823, 850], "repres": [3, 5, 21, 22, 26, 31, 32, 51, 61, 88, 118, 119, 126, 131, 134, 135, 136, 149, 151, 152, 153, 155, 159, 162, 173, 184, 185, 187, 188, 192, 193, 220, 249, 286, 288, 296, 300, 304, 309, 318, 324, 328, 329, 380, 386, 387, 393, 394, 395, 407, 410, 414, 416, 423, 424, 425, 426, 561, 567, 596, 643, 651, 688, 695, 699, 703, 707, 709, 713, 718, 720, 724, 725, 730, 820, 822, 825, 828, 834, 836, 837, 838, 840, 841, 850, 852, 855, 861], "represensit": 14, "represent": [0, 32, 62, 63, 131, 155, 187, 193, 214, 215, 216, 220, 286, 302, 304, 323, 329, 378, 380, 382, 386, 387, 391, 395, 411, 416, 435, 438, 446, 447, 449, 451, 452, 454, 458, 552, 553, 554, 565, 581, 583, 584, 591, 647, 648, 667, 709, 711, 713, 715, 720, 724, 727, 729, 730, 731, 801, 802, 811, 812, 813, 819, 822, 828, 834, 836, 837, 838, 846, 849, 850, 851, 853, 855, 856, 858, 861, 862, 863, 865], "representation\ub4e4\uacfc": 811, "representation\ub4e4\ub85c": 811, "representation\ub4e4\ub85c\ubd80\ud130": 799, "representation\ub4e4\uc744": [798, 799, 801, 802, 812], "representation\ub4e4\uc758": [802, 811, 814], "representation\ub4e4\uc774": [798, 804], "representation\uc740": [808, 813], "representation\uc744": [797, 799, 801, 804, 811, 812], "representation\uc774\uace0": 812, "representation\uc774\ub2e4": 813, "repurpos": [138, 139, 140, 727], "reput": 145, "request": [21, 693, 827, 829, 832, 833, 839], "requir": [4, 5, 9, 10, 21, 51, 55, 60, 61, 66, 87, 88, 90, 107, 122, 130, 148, 210, 216, 217, 220, 291, 300, 389, 390, 391, 392, 405, 406, 413, 416, 421, 422, 454, 458, 502, 503, 549, 558, 688, 692, 693, 694, 695, 696, 702, 703, 707, 711, 712, 718, 719, 721, 724, 808, 817, 818, 819, 820, 822, 827, 828, 829, 832, 833, 834, 837, 838, 845, 851, 855, 862, 868], "requires_grad": [9, 855], "requires_grad_": [9, 118, 119, 851], "research": [819, 850, 851, 852, 853, 855, 858, 862, 865], "reserv": 642, "reset": [383, 459, 723], "reset_paramet": [378, 379, 382, 383, 389, 390, 391, 393, 394, 395, 397, 400, 402, 403, 404, 407, 409, 410, 413, 416, 417, 418, 433, 446, 454, 455, 456, 458, 720, 723, 763, 807, 852], "reshap": [95, 96, 117, 297, 299, 300, 301, 314, 555, 556, 557, 653, 713, 819, 822, 861], "reshuffl": [4, 239, 348, 543, 781], "resid": 308, "residu": [389, 392, 400, 402, 403, 404, 407, 408, 411, 413, 414, 819, 862], "resolv": 21, "resourc": [2, 308, 692, 711, 719, 868], "respect": [5, 95, 96, 140, 147, 184, 214, 215, 216, 219, 239, 242, 302, 309, 313, 378, 382, 398, 414, 422, 424, 502, 503, 555, 556, 558, 561, 573, 602, 622, 695, 696, 704, 707, 708, 717, 819, 831, 832, 833, 837, 842, 851, 858, 862], "respons": [298, 302, 305, 307, 692, 693, 827, 829, 845], "rest": [6, 95, 96, 141, 239, 330, 334, 335, 542, 637, 686, 692, 724, 729, 821, 827, 837, 839], "restart": [564, 666, 670, 845], "restart_prob": [563, 564], "restaur": 163, "restrict": [44, 104, 118, 119, 126, 131, 248, 249, 286, 329, 842, 858], "resuffl": [348, 543], "result": [6, 9, 20, 21, 51, 56, 61, 70, 73, 88, 95, 96, 116, 118, 119, 122, 125, 126, 130, 197, 198, 209, 214, 226, 227, 239, 240, 241, 245, 246, 248, 249, 290, 304, 309, 330, 333, 334, 335, 336, 339, 347, 350, 380, 386, 397, 417, 418, 454, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 550, 551, 553, 554, 555, 556, 558, 559, 562, 564, 565, 566, 567, 568, 572, 573, 574, 575, 596, 599, 600, 601, 610, 611, 618, 621, 629, 636, 637, 642, 643, 644, 645, 659, 660, 661, 666, 670, 679, 683, 693, 695, 696, 698, 699, 700, 702, 707, 709, 719, 720, 725, 729, 731, 792, 795, 818, 822, 823, 827, 829, 836, 837, 839, 842, 845, 846, 851, 852, 862], "result_dict": [759, 802], "ret": [392, 414, 849, 852, 862], "retain": [56, 704, 789, 822], "retri": 200, "retriev": [22, 125, 126, 192, 233, 248, 249, 292, 301, 379, 552, 573, 642, 659, 660, 661, 666, 667, 670, 675, 676, 677, 678, 729, 835, 837, 839, 851], "return": [0, 4, 5, 6, 10, 20, 22, 26, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 100, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 207, 209, 214, 217, 218, 219, 220, 221, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 286, 287, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 317, 318, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 662, 664, 668, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 688, 689, 690, 691, 693, 694, 696, 707, 708, 709, 712, 713, 715, 716, 717, 718, 720, 721, 724, 727, 729, 730, 731, 735, 736, 737, 739, 751, 752, 753, 756, 757, 758, 759, 760, 761, 764, 767, 769, 770, 771, 775, 776, 777, 779, 780, 792, 794, 795, 798, 799, 801, 802, 803, 804, 805, 808, 811, 812, 813, 814, 817, 818, 819, 820, 822, 827, 829, 832, 833, 834, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "return_count": [111, 643, 645, 673], "return_eid": [562, 564], "return_eigv": 337, "return_label": 230, "return_map": [239, 696, 781, 845], "return_path": [451, 452, 572], "return_uv": 48, "retweet": 159, "reuiqr": 454, "reus": [694, 713, 730], "reusabl": 724, "rev": 781, "rev_plai": [422, 652], "rev_r": 652, "rev_rev_plai": 422, "reveal": [244, 477], "revers": [116, 123, 124, 130, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 170, 176, 191, 192, 220, 229, 230, 288, 298, 307, 309, 312, 317, 321, 338, 411, 545, 547, 548, 558, 649, 652, 683, 688, 690, 696, 712, 713, 736, 776, 799, 835, 851], "reverse_edg": [150, 154, 176], "reverse_eid": [220, 757, 799], "reverse_etyp": [220, 757, 799], "reverse_etypes_map": [317, 321, 713], "reverse_id": [220, 757, 799], "reverse_typ": [220, 757, 799], "revert": 683, "review": [21, 135, 136, 137, 161, 162, 163, 194], "revis": 862, "revisit": 562, "reweight": 419, "rewond": 749, "rewrit": 717, "rfeat": 456, "rg": [428, 558, 559], "rgcn": [713, 715, 718, 727, 729, 730, 731, 757, 758, 759, 767, 769, 770, 771, 799, 801, 802, 804, 811, 812, 813, 814, 850], "rgcnlayer": 850, "rgcn\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u4e0e\u5b83\u975e\u5e38\u76f8\u4f3c": 761, "rgcn\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6": 771, "rgcn\u7684\u5b9e\u73b0": 761, "rh": 502, "rhel": 816, "rho": [420, 503, 706, 750, 756, 791, 798, 851], "rhs_data": [502, 503], "rhs_field": [252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285], "rhs_target": 502, "rich": 162, "richer": 861, "rid": 715, "right": [4, 5, 118, 150, 340, 385, 388, 391, 394, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 412, 413, 416, 431, 432, 453, 458, 502, 503, 504, 635, 670, 671, 687, 693, 694, 706, 708, 712, 713, 718, 724, 729, 730, 750, 756, 757, 759, 761, 764, 770, 791, 798, 799, 802, 804, 808, 813, 822, 828, 836, 837, 850, 852, 855, 862], "rightarrow": [352, 851, 858], "riski": 145, "rng": 183, "rnn": [447, 862, 863, 865], "robust": [197, 205], "roc_auc_scor": [827, 837, 846], "rocauc": 819, "rock": 855, "role": [182, 242, 421, 422, 423, 424, 425, 426], "roll": 565, "rollout": [424, 426], "roman": 182, "room": 707, "root": [159, 217, 288, 401, 410, 451, 452, 572, 816, 817, 818, 820, 855], "rossmann": 397, "rotat": 179, "roughli": [191, 239, 386, 695, 845, 851], "round": [91, 92, 731, 858], "rout": [861, 863, 865], "routin": [22, 835], "routing_num": 861, "row": [4, 27, 31, 32, 118, 119, 131, 150, 154, 176, 286, 287, 293, 295, 296, 297, 309, 314, 318, 323, 329, 336, 379, 393, 394, 395, 446, 449, 459, 549, 553, 554, 571, 581, 583, 584, 589, 596, 599, 600, 601, 602, 603, 611, 614, 615, 616, 622, 624, 628, 647, 648, 669, 670, 693, 695, 701, 717, 781, 786, 803, 820, 822, 839, 845, 846, 851], "row1": 630, "row2": 630, "row_id": 720, "row_sort": 286, "rowfeatnorm": 13, "rpc": 4, "rr": [317, 749], "rst": [380, 720, 724, 725, 764, 765, 808, 809], "rtype": [384, 385, 386, 387, 392, 395, 399, 401, 404, 405, 407, 409, 410, 414, 416, 417, 418, 419, 420, 454, 455, 458, 596], "rule": [21, 220, 729, 851, 852, 858, 862], "run": [4, 10, 14, 21, 214, 234, 239, 419, 421, 422, 423, 424, 425, 426, 565, 567, 687, 692, 693, 696, 711, 719, 721, 725, 816, 819, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "run_epoch": 862, "runnabl": 21, "runtim": [0, 4, 14, 22, 156, 684, 693, 694, 696, 842], "runtimeerror": [183, 827], "runtimewarn": [849, 852], "russia": [164, 850], "rv": 22, "rvert": 453, "rvert_2": [723, 763, 807], "rw": [670, 845], "r\uc5d0": 795, "s2": 433, "s3": [21, 23, 288, 341, 569, 690, 700, 736, 776, 785], "s_": 822, "s_c": 851, "s_i": 862, "s_j": [861, 862], "s_norm": 861, "sab": 435, "safe": [159, 704], "sage": [395, 692, 715, 716, 720, 727, 730, 731, 738, 767, 770, 771, 778, 811, 813, 814, 827, 845, 846, 868], "sageconv": [380, 395, 715, 716, 717, 720, 722, 723, 724, 731, 760, 762, 763, 764, 771, 803, 806, 807, 808, 814, 827, 828, 829, 836, 837, 845, 846, 868], "sageconv\u7684\u6570\u5b66\u516c\u5f0f\u5982\u4e0b": 764, "sageconv\uc5d0\uc11c": 808, "sageconv\uc758": [807, 808], "sai": [21, 686, 711, 829], "said": [211, 212, 213], "same": [0, 3, 4, 5, 8, 9, 20, 28, 34, 35, 42, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 68, 70, 74, 87, 88, 91, 92, 93, 94, 100, 103, 108, 113, 116, 118, 119, 120, 121, 122, 130, 131, 134, 156, 161, 163, 181, 188, 197, 200, 205, 208, 209, 210, 211, 212, 214, 216, 219, 230, 231, 233, 238, 239, 240, 245, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 295, 296, 297, 300, 301, 302, 307, 314, 324, 329, 330, 334, 335, 336, 339, 347, 348, 351, 380, 382, 384, 385, 392, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 410, 411, 413, 414, 416, 427, 428, 430, 432, 436, 437, 446, 453, 457, 458, 460, 478, 479, 542, 543, 549, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 574, 575, 576, 577, 579, 583, 584, 602, 622, 632, 636, 637, 642, 643, 645, 653, 668, 687, 688, 690, 692, 693, 694, 695, 696, 699, 700, 701, 702, 703, 704, 709, 713, 714, 716, 718, 720, 721, 722, 724, 725, 727, 729, 730, 731, 746, 774, 787, 789, 795, 798, 801, 816, 819, 822, 827, 828, 832, 835, 836, 837, 839, 845, 846, 849, 850, 851, 852, 855, 858, 862, 867, 868], "sampl": [3, 6, 7, 9, 13, 14, 122, 130, 139, 146, 147, 160, 165, 168, 169, 172, 173, 174, 175, 181, 184, 186, 194, 195, 198, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 233, 234, 240, 241, 244, 291, 292, 296, 298, 299, 302, 304, 306, 307, 309, 310, 311, 312, 316, 317, 321, 378, 382, 383, 423, 424, 425, 426, 433, 477, 502, 576, 577, 610, 621, 637, 686, 688, 692, 694, 715, 719, 720, 724, 729, 730, 739, 756, 779, 798, 799, 800, 819, 822, 826, 827, 829, 831, 837, 838, 842, 845, 850, 851, 855, 858, 859, 862, 865, 868], "sample_bia": [423, 425], "sample_block": [692, 693, 738, 739, 756, 778, 779, 798], "sample_fronti": [756, 798], "sample_in_subgraph": 298, "sample_layer_neighbor": [296, 302], "sample_log_prob": 858, "sample_neg": 306, "sample_negative_edges_uniform": 296, "sample_neighbor": [4, 214, 216, 240, 296, 298, 307, 312, 692, 693, 694, 712, 713, 714, 715, 716, 718, 719, 738, 739, 756, 778, 779, 780, 798, 800, 827, 829, 868], "sample_neighbors_bias": [576, 577], "sample_point": 6, "sample_sparse_neighbor": 720, "sample_subgraph": [298, 307, 312, 712, 720, 829], "sample_uniform_neg": [307, 316, 716, 719, 827], "sample_util": 827, "sampled_csc": [296, 298, 302, 307, 309, 310, 829], "sampled_matric": 720, "sampled_matrix": 720, "sampled_subgraph": [289, 298, 299, 302, 304, 307, 712, 720, 829], "sampledsubgraph": [298, 304, 307, 310, 312, 712], "sampledsubgraphimpl": [296, 302, 307, 309], "sampler": [7, 13, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 234, 292, 298, 299, 302, 306, 307, 312, 389, 390, 391, 560, 561, 565, 692, 693, 697, 711, 714, 716, 720, 738, 739, 756, 757, 758, 759, 761, 778, 779, 798, 799, 800, 801, 802, 804, 826, 838], "sampler1": 714, "sampler2": 714, "samplinggraph": [291, 296, 303, 308, 713], "saniti": 850, "satisfi": [53, 54, 412, 415, 579, 717, 827, 829, 832, 833, 851, 862], "satisif": 120, "save": [0, 2, 4, 9, 23, 156, 206, 239, 314, 315, 341, 569, 644, 659, 685, 686, 688, 695, 696, 700, 704, 707, 708, 709, 711, 721, 725, 727, 728, 731, 733, 737, 744, 773, 777, 781, 785, 795, 814, 817, 818, 820, 829, 832, 833, 834, 836, 837, 839, 845, 858, 862], "save_dir": [156, 686, 733, 773], "save_graph": [172, 204, 341, 691, 700, 704, 737, 744, 748, 777, 785, 789, 835], "save_info": [691, 737, 777], "save_path": [138, 139, 140, 156, 686, 691, 733, 737, 773, 777], "save_tensor": 781, "sbm": [147, 174], "sbmdata": [690, 736, 776], "scalabl": [382, 450, 562, 670, 818, 823, 826], "scalar": [6, 118, 119, 125, 214, 216, 219, 248, 384, 396, 397, 400, 401, 402, 403, 410, 413, 416, 423, 425, 431, 596, 599, 600, 601, 603, 610, 613, 614, 615, 616, 619, 620, 628, 629, 699, 701, 728, 786, 802, 822, 837, 849, 851, 852, 861, 863, 865], "scalar_v": 822, "scale": [125, 134, 149, 185, 248, 340, 392, 410, 414, 453, 457, 476, 560, 696, 721, 805, 815, 819, 828, 837, 842, 852, 862], "scale_const": 862, "scaled_exp": 862, "scaler": [392, 414, 612, 617, 721, 805], "scenario": [14, 22, 302, 307, 567, 694, 711, 729], "scene": [400, 693], "schedul": [819, 826], "schema": [72, 233, 696, 704, 781], "scheme": [4, 47, 75, 95, 96, 117, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 245, 246, 330, 334, 335, 478, 479, 542, 555, 556, 557, 642, 656, 657, 664, 670, 683, 688, 695, 696, 701, 704, 745, 748, 786, 789, 835, 838, 839], "schnet": 387, "schwarzenegg": 855, "scienc": [151, 192, 288], "scientif": [150, 176, 851], "scientist\uac00": 790, "scipi": [9, 31, 118, 119, 126, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 558, 560, 700, 744, 785, 818, 822, 827, 829, 832, 833, 837, 851], "scipy_fmt": [31, 576, 577], "scope": [70, 837, 849, 851], "score": [13, 378, 396, 397, 402, 403, 412, 431, 454, 455, 456, 458, 713, 727, 728, 730, 757, 759, 767, 770, 799, 802, 811, 813, 819, 822, 827, 829, 837, 846, 850, 852, 862], "score_neg": 846, "score_po": 846, "scorepredictor": [713, 757, 759, 799, 802], "scorer": [455, 456], "scrape": 191, "scratch": [142, 143, 189, 190, 378, 835, 849, 850, 852], "script": [4, 21, 692, 693, 696, 697, 816, 817, 818, 819, 834, 835, 836, 837, 838, 839, 842, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "script_fold": [741, 782], "scriptobject": 296, "sddmm": [485, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 511, 512, 517, 518, 519, 520, 525, 526, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 610, 819, 822], "sdg\uc5d0\uc11c": 779, "seaborn": 861, "seal": 837, "seamlessli": [722, 826], "search": [123, 124, 229, 230, 336, 424, 426, 427, 429, 571, 730, 813, 815, 852, 862], "search\uc640": 813, "second": [20, 130, 131, 210, 214, 215, 216, 219, 286, 329, 337, 380, 460, 563, 564, 565, 571, 573, 618, 628, 637, 643, 696, 724, 729, 823, 828, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 851, 852, 855, 858, 861, 862, 863, 865, 867, 868], "section": [14, 21, 210, 214, 215, 216, 683, 685, 689, 690, 692, 693, 695, 696, 700, 706, 711, 715, 717, 724, 726, 727, 730, 731, 811, 813, 834, 837, 845, 846, 851, 852, 868], "sector": 166, "secur": [827, 829, 832, 833], "see": [1, 4, 9, 20, 21, 44, 61, 66, 88, 89, 91, 104, 130, 131, 146, 169, 209, 210, 211, 212, 214, 216, 217, 220, 222, 223, 224, 225, 230, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 329, 336, 389, 390, 397, 412, 415, 421, 422, 431, 433, 438, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 576, 577, 581, 583, 584, 591, 614, 615, 616, 623, 625, 626, 627, 637, 643, 686, 688, 690, 693, 699, 700, 701, 703, 704, 707, 713, 715, 716, 717, 718, 726, 729, 731, 816, 818, 819, 827, 828, 829, 832, 833, 835, 836, 837, 838, 839, 845, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "seed": [4, 142, 143, 161, 162, 163, 172, 173, 183, 189, 190, 197, 198, 205, 207, 208, 210, 213, 214, 216, 219, 296, 298, 300, 301, 302, 304, 307, 312, 321, 434, 550, 551, 560, 564, 565, 566, 693, 694, 712, 713, 719, 720, 739, 779, 780, 819, 827, 829, 832, 833, 845, 851, 867], "seed2_contribut": 565, "seed_nod": [216, 289, 298, 299, 300, 301, 304, 712, 715, 756, 798, 827, 829, 831, 832, 833], "seeds_timestamp": [298, 307, 312, 829], "seem": [386, 851, 852], "seen": [718, 731, 823, 849, 850, 851, 852, 862], "seg": [429, 505, 571], "segal": 855, "seglen": 505, "seglen_a": 504, "segment": [13, 122, 135, 136, 504, 505, 576, 577, 683], "segmentmm": 13, "segmentreducebackward": [431, 438], "select": [6, 21, 56, 142, 143, 147, 171, 174, 182, 189, 190, 209, 210, 217, 239, 240, 241, 296, 302, 307, 336, 392, 414, 423, 425, 427, 429, 436, 446, 447, 449, 560, 565, 566, 567, 568, 569, 571, 585, 645, 673, 711, 715, 721, 798, 816, 818, 822, 826, 828, 829, 858], "self": [26, 62, 63, 116, 117, 156, 162, 164, 165, 181, 218, 220, 226, 298, 307, 309, 312, 336, 384, 390, 394, 396, 399, 400, 402, 403, 404, 407, 410, 411, 415, 417, 421, 422, 423, 424, 425, 426, 427, 428, 429, 438, 448, 460, 549, 557, 561, 571, 635, 653, 668, 671, 686, 687, 688, 690, 691, 694, 695, 696, 699, 709, 712, 713, 715, 716, 717, 718, 720, 721, 723, 724, 725, 727, 729, 730, 731, 733, 734, 736, 737, 753, 756, 757, 758, 759, 760, 761, 763, 764, 765, 767, 769, 770, 771, 773, 774, 776, 777, 784, 795, 798, 799, 801, 802, 803, 804, 805, 807, 808, 809, 811, 812, 813, 814, 817, 818, 819, 820, 822, 827, 829, 834, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "self_": 827, "self_and_has_next_method": [827, 829], "self_attn": 862, "self_loop": [165, 181, 384, 390, 396, 399, 400, 402, 403, 404, 407, 410, 415, 417, 421, 425, 426, 428, 549, 838, 867], "sell": [380, 699, 784], "seller": 699, "semant": [5, 9, 132, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 728, 855, 862], "semi": [140, 147, 384, 394, 410, 659, 696, 715, 781, 801, 834, 849, 851, 858], "send": [53, 73, 91, 94, 100, 113, 410, 412, 729, 827, 829, 852, 858, 862], "send_and_recv": [0, 91, 862], "send_sourc": 100, "sent": [410, 835, 836, 861, 862], "sentenc": [182, 184, 855, 856, 858, 862, 863, 865], "sentiment": [184, 855, 858], "separ": [4, 142, 143, 171, 180, 336, 387, 688, 695, 696, 719, 725, 729, 731, 816, 829, 832, 838, 842, 849], "septemb": 181, "sequenc": [54, 121, 131, 207, 286, 329, 346, 378, 382, 409, 431, 433, 655, 856, 858, 862, 865], "sequenti": [91, 92, 302, 651, 716, 819, 827, 858], "seri": [704, 828, 829, 851], "serial": [451, 827, 829, 832, 833], "serv": [296, 692, 717, 850], "server": [4, 21, 145, 177, 178, 179, 234, 686, 687, 692, 693, 694, 697, 846], "servic": [21, 159, 291, 692, 693], "set": [0, 1, 4, 6, 7, 10, 21, 23, 43, 44, 45, 46, 51, 68, 70, 72, 74, 77, 79, 82, 92, 101, 102, 103, 104, 105, 122, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 147, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 176, 181, 189, 190, 191, 194, 198, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 231, 238, 239, 242, 243, 245, 246, 291, 292, 296, 299, 304, 308, 312, 313, 326, 329, 330, 334, 335, 336, 340, 347, 349, 352, 384, 388, 389, 390, 391, 392, 394, 396, 399, 400, 401, 402, 403, 404, 407, 410, 414, 415, 417, 419, 420, 423, 425, 427, 428, 429, 433, 434, 435, 446, 449, 453, 459, 476, 478, 479, 542, 549, 550, 551, 561, 564, 567, 570, 571, 637, 643, 645, 647, 648, 675, 676, 678, 680, 681, 682, 684, 690, 692, 693, 695, 696, 699, 703, 704, 712, 713, 714, 715, 717, 718, 719, 721, 723, 724, 725, 727, 729, 730, 731, 776, 788, 789, 816, 817, 818, 821, 822, 826, 827, 829, 831, 832, 833, 834, 836, 838, 839, 850, 852, 855, 858, 861, 862, 867, 868], "set_batch_num_edg": [27, 28, 102, 114, 115, 116, 117, 130, 245, 246, 330, 333, 339, 347, 478, 479, 542, 556, 559, 636, 645, 646, 729, 769, 812], "set_batch_num_nod": [27, 28, 101, 114, 115, 116, 117, 130, 245, 246, 330, 333, 339, 347, 478, 479, 542, 556, 559, 636, 645, 646, 729, 769, 812], "set_bodi": 22, "set_default_backend": 816, "set_devic": [867, 868], "set_e_initi": 858, "set_edge_featur": 304, "set_edgecolor": 818, "set_epoch": [213, 867], "set_grad_en": 862, "set_layer_dtyp": 868, "set_n_initi": [27, 28, 93, 113, 858], "set_node_featur": 304, "set_num_thread": 842, "set_postfix": [820, 829], "set_sharing_strategi": 868, "set_titl": 861, "set_trans_dec": 434, "set_trans_enc": 435, "set_xlabel": 861, "settran": 435, "settransformerdecod": 435, "settransformerencod": 434, "setup": [4, 714, 842], "seven": 851, "sever": [244, 291, 477, 686, 690, 701, 713, 718, 719, 724, 850, 862, 863, 865], "sg": [245, 330, 334, 335, 421, 422, 478, 542, 565, 566, 567, 568, 645, 673, 710, 712, 754, 756, 796, 798], "sg1": 835, "sg2": 835, "sgc": 417, "sgd": 693, "sh": [21, 816], "sha": [687, 734, 774], "sha1": [199, 200], "sha1_hash": [199, 200], "shall": [20, 683], "shallow": [64, 71, 219, 576, 577, 639, 640, 641], "shamelessli": 22, "shape": [4, 5, 6, 9, 12, 30, 47, 75, 95, 96, 117, 120, 126, 128, 129, 138, 143, 146, 147, 165, 168, 169, 174, 184, 186, 192, 195, 219, 242, 243, 244, 245, 246, 249, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 296, 300, 301, 323, 324, 330, 334, 335, 336, 337, 340, 350, 351, 352, 378, 379, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 476, 477, 478, 479, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 552, 553, 554, 555, 556, 557, 562, 564, 571, 572, 574, 575, 576, 577, 579, 582, 585, 587, 589, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 642, 643, 647, 648, 653, 656, 657, 660, 661, 664, 666, 670, 672, 675, 676, 678, 680, 681, 682, 683, 688, 690, 693, 695, 696, 701, 704, 720, 721, 728, 729, 730, 731, 736, 739, 745, 748, 770, 771, 776, 779, 781, 786, 789, 793, 802, 805, 813, 814, 816, 817, 818, 819, 820, 822, 834, 835, 836, 837, 838, 839, 845, 846, 849, 851, 855, 862], "shape\uc740": 812, "shaplei": [424, 426], "shapley_step": [424, 426], "shard": [4, 693, 779], "shardingfilteriterdatapip": [827, 829], "share": [4, 22, 26, 69, 116, 122, 130, 131, 246, 286, 291, 296, 311, 325, 329, 333, 336, 339, 350, 351, 380, 404, 427, 429, 457, 559, 567, 571, 576, 577, 636, 642, 645, 692, 695, 696, 697, 781, 816, 842, 845, 850, 851, 852, 862], "share_edata": [99, 559], "share_ndata": [99, 559], "share_weight": 403, "shared_memori": 4, "shared_memory_nam": [296, 311, 325], "sharemem": [14, 336, 427, 429, 571], "sharp": 852, "sharper": 852, "shchur": [135, 136, 151, 152, 153], "shelf": 852, "shift": [197, 205, 387], "short": [383, 704, 709, 823, 836, 855], "shortcut": 182, "shortest": [242, 451, 452, 572], "shortest_dist": [451, 452], "shot": [727, 811], "should": [4, 21, 42, 53, 54, 89, 91, 116, 125, 126, 128, 129, 130, 131, 146, 169, 173, 178, 179, 184, 195, 196, 210, 214, 216, 219, 220, 222, 223, 224, 225, 240, 241, 248, 249, 286, 292, 294, 296, 298, 300, 302, 304, 307, 309, 312, 314, 317, 318, 327, 328, 329, 333, 338, 339, 384, 385, 389, 390, 391, 392, 393, 394, 395, 405, 406, 413, 414, 417, 421, 422, 423, 424, 425, 426, 429, 447, 448, 451, 453, 457, 460, 550, 551, 558, 559, 560, 564, 565, 566, 567, 568, 569, 613, 614, 615, 616, 618, 619, 628, 636, 642, 643, 645, 655, 660, 661, 666, 670, 688, 693, 695, 696, 697, 703, 712, 714, 715, 721, 724, 822, 827, 829, 832, 833, 834, 835, 836, 837, 839, 842, 845, 850, 851, 858, 861, 867, 868], "show": [4, 9, 14, 118, 119, 220, 239, 244, 477, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 711, 713, 715, 716, 721, 729, 730, 731, 817, 820, 827, 828, 829, 830, 832, 833, 834, 837, 838, 845, 849, 850, 851, 852, 853, 855, 858, 862, 863, 865], "shown": [120, 690, 693, 703, 720, 724, 845, 846, 861, 862], "shuffl": [4, 168, 186, 207, 209, 210, 213, 214, 215, 216, 219, 220, 231, 238, 239, 292, 299, 378, 382, 421, 425, 426, 665, 689, 690, 692, 693, 696, 712, 713, 714, 715, 716, 718, 719, 729, 735, 736, 738, 739, 756, 757, 758, 759, 761, 769, 775, 776, 778, 779, 798, 799, 800, 801, 802, 804, 812, 819, 827, 829, 832, 833, 845, 846, 855, 867, 868], "shut": 290, "side": [22, 637, 828], "sigma": [408, 410, 412, 415, 416, 453, 724, 730, 764, 770, 808, 813, 817, 818, 820, 849, 850, 852, 855, 862], "sigma_": 408, "sigma_k": 407, "sigmoid": [408, 822, 855, 858], "sign": [145, 635, 670, 671, 818], "sign_diffus": 818, "signal": [21, 174, 352, 818, 858], "signatur": [21, 53, 54, 852], "signdiffus": 13, "signifi": [296, 302, 307], "signific": [686, 714, 719, 826, 842, 852, 855], "significantli": [309, 721, 828], "silent": [384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 421, 422, 423, 424, 425, 426, 724], "sim": [730, 770, 813, 837], "similar": [4, 9, 26, 34, 53, 54, 100, 128, 129, 130, 161, 214, 221, 302, 336, 378, 396, 427, 429, 454, 455, 456, 571, 637, 683, 689, 690, 692, 693, 694, 704, 713, 716, 717, 718, 720, 721, 730, 731, 748, 789, 816, 822, 823, 827, 831, 834, 838, 845, 846, 850, 851, 852, 858, 861, 862, 867, 868], "similarli": [130, 221, 235, 239, 693, 695, 727, 820, 858, 863, 865], "simpl": [21, 22, 48, 118, 119, 340, 404, 476, 636, 645, 646, 673, 685, 691, 694, 721, 818, 834, 838, 849, 851, 852, 853, 858, 861, 865], "simple_reduc": 100, "simplelosscomput": 862, "simplest": [718, 822], "simpli": [21, 22, 713, 716, 718, 719, 727, 729, 731, 834, 836, 837, 838, 849, 851, 852, 856, 858, 865], "simplic": [696, 718, 832, 839, 852], "simplifi": [417, 717, 727, 818, 822, 849, 858, 862, 867], "simplifiedgat": 822, "simul": 851, "simultan": [596, 599, 600, 601, 603, 692, 818, 855], "sin": 822, "sinc": [21, 27, 28, 56, 114, 115, 122, 145, 173, 182, 336, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 421, 422, 423, 424, 425, 426, 427, 429, 451, 452, 571, 576, 577, 637, 686, 690, 704, 707, 714, 727, 729, 730, 817, 822, 827, 828, 837, 838, 839, 849, 851, 852, 855, 858], "singl": [0, 4, 6, 22, 27, 28, 34, 35, 41, 43, 44, 46, 48, 51, 53, 55, 56, 57, 58, 60, 61, 73, 74, 77, 87, 88, 93, 94, 95, 96, 100, 101, 102, 103, 104, 128, 129, 131, 148, 164, 210, 211, 212, 214, 215, 216, 219, 220, 290, 300, 301, 304, 334, 335, 336, 338, 346, 350, 384, 407, 430, 431, 432, 433, 434, 435, 436, 437, 438, 457, 458, 480, 560, 564, 565, 566, 568, 640, 647, 648, 690, 692, 693, 696, 704, 707, 715, 717, 725, 726, 727, 729, 789, 801, 803, 823, 825, 828, 829, 834, 838, 839, 845, 846, 851, 852, 855, 862, 869, 870], "singular": [635, 671], "site": [184, 827, 829, 832, 833, 849, 852], "six": [827, 829, 832, 833], "size": [4, 5, 9, 20, 21, 22, 31, 62, 63, 120, 122, 128, 129, 135, 136, 138, 139, 146, 147, 151, 152, 153, 159, 160, 161, 162, 163, 168, 169, 174, 177, 181, 184, 192, 194, 196, 205, 210, 234, 287, 292, 293, 295, 297, 299, 314, 378, 379, 381, 382, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 553, 554, 611, 618, 629, 647, 648, 653, 672, 694, 696, 704, 708, 711, 712, 719, 720, 729, 741, 752, 782, 789, 794, 812, 816, 822, 827, 829, 832, 833, 836, 842, 849, 850, 851, 852, 855, 856, 858, 862, 865, 867, 868], "skeleton": 858, "skip": [409, 690, 725, 776, 832, 833, 851, 852, 855], "sklearn": [378, 827, 829, 837, 845, 846], "skm": 846, "sleeplessai": 749, "slice": [4, 26, 210, 292, 299, 701, 717, 849, 852], "slightli": 214, "sln": 816, "slope": [389, 400, 402, 403], "slow": [22, 715, 837, 851], "slower": [336, 427, 429, 571, 862], "sm_53": [9, 707, 792], "small": [4, 10, 14, 70, 123, 124, 126, 167, 226, 229, 230, 244, 249, 286, 336, 401, 408, 421, 422, 427, 429, 477, 561, 571, 649, 683, 692, 693, 696, 721, 726, 729, 828, 834, 837, 838, 839, 845, 851], "smaller": [4, 130, 292, 299, 383, 386, 614, 615, 616, 628, 660, 661, 666, 816, 850, 851], "smallest": [337, 392, 427, 450, 568, 647, 648, 663], "smax": [596, 822], "smean": [596, 822], "smin": [596, 822], "smooth": [404, 420, 862], "sn": 861, "snap": [145, 175, 181], "snippet": [700, 703, 704, 728, 851], "so": [4, 5, 8, 9, 21, 22, 125, 130, 140, 186, 197, 226, 229, 230, 231, 238, 244, 248, 287, 293, 295, 297, 314, 348, 390, 396, 477, 543, 558, 561, 565, 567, 576, 577, 639, 640, 641, 643, 688, 690, 691, 693, 694, 696, 712, 714, 718, 727, 731, 820, 829, 834, 835, 837, 838, 842, 845, 849, 850, 851, 852, 855, 858, 861, 867], "soc": 145, "social": [134, 167, 378, 699, 837], "socio": 166, "socket": 234, "soduku": 431, "softmax": [352, 384, 400, 412, 431, 433, 446, 449, 574, 575, 819, 836, 850, 852, 858, 861, 862], "softmax_edg": 575, "softmax_i": [396, 400, 402, 403], "softmax_nod": 574, "softwar": [815, 842], "solubl": 195, "solut": [22, 685, 714, 790, 845, 851], "solv": [292, 431, 815, 850, 851, 856, 865, 868], "some": [0, 4, 5, 9, 14, 21, 27, 28, 41, 43, 46, 48, 74, 93, 103, 113, 114, 115, 128, 129, 131, 134, 150, 168, 186, 235, 239, 246, 289, 292, 329, 348, 349, 380, 384, 390, 396, 399, 400, 402, 403, 404, 407, 410, 417, 423, 425, 555, 558, 643, 687, 688, 690, 694, 695, 696, 698, 700, 703, 704, 707, 708, 711, 712, 723, 730, 776, 816, 823, 828, 835, 837, 845, 852, 858, 861, 867], "some_complex_data": 688, "someth": 726, "sometim": [22, 708, 713, 726, 727, 729, 828, 836], "somewhat": 713, "song": 749, "soon": 696, "sophist": 729, "sort": [39, 51, 52, 78, 123, 168, 186, 197, 205, 240, 296, 383, 412, 415, 436, 558, 567, 576, 577, 579, 647, 648, 855, 862], "sort_csc_by_tag": 567, "sort_csr_by_tag": 567, "sortbi": [647, 648], "sorted_by_typ": 383, "sorted_feat": [647, 648], "sorted_idx": [647, 648], "sortpool": [647, 648], "sourc": [1, 4, 5, 6, 9, 10, 12, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 493, 495, 497, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 677, 678, 679, 682, 683, 684, 688, 690, 695, 696, 698, 703, 704, 707, 716, 719, 723, 724, 776, 789, 798, 828, 832, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "source_typ": [704, 748, 789], "sourcetensor": 851, "sp": [700, 744, 785, 837, 851], "sp_": 822, "sp_add_v": 822, "sp_broadcast_v": [623, 625, 626, 627], "sp_mat": [126, 249], "space": [9, 327, 328, 453, 704, 850, 858, 862], "spaci": 159, "spam": 163, "span": 4, "spars": [4, 9, 10, 13, 31, 32, 41, 56, 62, 63, 89, 126, 131, 248, 249, 286, 329, 378, 382, 389, 421, 422, 457, 503, 560, 693, 700, 711, 714, 744, 779, 785, 815, 818, 820, 837, 849, 853, 862, 865], "sparse2th": 851, "sparse_coo": [31, 62, 63], "sparse_coo_tensor": 851, "sparse_emb": 457, "sparse_matrix": 618, "sparse_optim": [693, 739, 779], "sparseadagrad": [4, 10, 457, 693, 739, 779], "sparseadam": [4, 10, 378, 382, 457], "sparseattn": 819, "sparsefloat": 851, "sparsematrix": [12, 30, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 720, 817, 822], "sparsemha": 819, "sparseneighborsampl": 720, "sparser": 862, "sparsetensor": [31, 62, 63, 851], "sparsif": [660, 661, 666], "sparsiti": [660, 661, 666, 819, 822], "spatial": [178, 179, 452, 453], "spatial_encod": [452, 453], "spawn": [210, 292, 714, 867], "speak": 851, "special": [184, 392, 699, 704, 713, 718, 721, 822, 826, 851, 855], "specif": [14, 21, 42, 59, 108, 125, 126, 131, 165, 234, 241, 245, 246, 248, 249, 286, 289, 296, 329, 330, 333, 334, 335, 379, 382, 422, 456, 478, 479, 542, 550, 551, 561, 565, 566, 567, 568, 637, 660, 661, 666, 670, 690, 692, 701, 704, 715, 716, 719, 789, 799, 815, 830, 832, 833, 842, 851, 867], "specifi": [4, 5, 6, 27, 28, 31, 34, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 68, 72, 75, 77, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 113, 117, 122, 125, 131, 140, 146, 148, 156, 159, 161, 162, 163, 169, 173, 196, 200, 214, 216, 217, 219, 229, 230, 239, 245, 248, 286, 287, 289, 293, 295, 296, 297, 304, 308, 309, 311, 314, 329, 334, 335, 336, 380, 383, 392, 396, 397, 400, 401, 402, 403, 413, 414, 416, 428, 453, 478, 543, 549, 555, 556, 558, 564, 569, 571, 576, 577, 612, 614, 615, 616, 628, 637, 642, 643, 645, 686, 688, 690, 693, 694, 696, 697, 703, 704, 707, 709, 713, 718, 724, 727, 730, 748, 773, 789, 795, 808, 816, 820, 822, 827, 831, 832, 833, 835, 845, 855, 868], "spectral": [388, 393], "speed": [10, 21, 22, 292, 299, 302, 309, 643, 703, 708, 714, 729, 815, 823, 827, 829, 837, 855, 858, 861], "speedup": [696, 852], "sphinx": [21, 834, 835, 836, 837, 838, 839, 840, 842, 843, 845, 846, 847, 849, 850, 851, 852, 855, 858, 861, 862, 865, 867, 868, 869], "sphinx_gallery_thumbnail_path": [834, 835, 836, 837, 838, 839], "sphinx_rtd_them": 21, "spilt": 192, "spinlock": 842, "splash": 855, "split": [13, 132, 133, 134, 137, 138, 139, 140, 144, 146, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 168, 169, 170, 171, 173, 176, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 205, 207, 209, 210, 213, 231, 238, 239, 292, 414, 543, 563, 642, 683, 686, 689, 690, 692, 694, 708, 709, 723, 724, 727, 731, 736, 773, 775, 776, 811, 827, 829, 837, 845, 851, 867], "split_dataset": 867, "split_edg": [689, 735, 775], "split_idx": [689, 735, 775], "split_mask": 205, "split_ratio": [138, 139, 140], "splitted_idx": 845, "split\ub97c": 779, "spmat": [700, 744, 785], "spmatrix": [12, 31, 126, 249, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 613, 614, 618, 619, 620, 621, 622, 624, 629, 630, 631, 632, 817, 818, 819, 820, 822], "spmm": [481, 482, 483, 484, 486, 487, 488, 489, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 618], "spmv": 852, "spp": 387, "spring_layout": [818, 851], "sprod": 596, "spspmm": 618, "sq": 861, "sqrt": [4, 10, 336, 401, 410, 412, 427, 429, 446, 453, 571, 819, 852, 861, 862], "squar": [4, 10, 249, 401, 410, 820], "squash": 861, "squeez": [53, 54, 688, 690, 716, 736, 776, 827, 837, 850, 851], "squirrel": 185, "squre": 419, "src": [5, 22, 34, 62, 63, 68, 98, 100, 110, 220, 242, 251, 352, 387, 396, 397, 400, 402, 403, 407, 410, 416, 454, 455, 456, 558, 561, 614, 637, 638, 642, 677, 690, 700, 707, 708, 713, 716, 720, 721, 724, 725, 727, 730, 736, 744, 751, 752, 756, 757, 759, 764, 765, 767, 770, 776, 785, 792, 794, 798, 799, 802, 805, 808, 809, 811, 813, 819, 832, 833, 836, 837, 839, 850, 851, 852, 855, 858, 862], "src_dot_dst": 862, "src_emb": [858, 862], "src_embed_expand": 858, "src_field": 862, "src_id": [59, 126, 249, 286, 688, 695, 781], "src_id_field": 688, "src_input": [725, 765, 809], "src_label": 851, "src_list": 858, "src_mul_egd": 862, "src_node": [637, 798], "src_node_id": 695, "src_po": 862, "src_seq": 862, "src_timestamp": 318, "src_type": [131, 329, 422, 424, 724, 764, 808], "src_x": 713, "srcdata": [4, 9, 68, 104, 208, 221, 225, 577, 637, 692, 693, 694, 708, 717, 720, 724, 738, 739, 752, 756, 757, 759, 760, 761, 764, 778, 779, 780, 794, 798, 799, 802, 803, 804, 808, 829, 846], "srcdst": 51, "srcnode": [68, 103, 208, 225, 637, 717, 756, 760, 798, 803], "srctype": [26, 45, 68, 226, 227, 709, 712, 716, 753, 795], "srl": 850, "ssh": [697, 782], "ssl": 200, "ssp": 387, "sst": 855, "sstbatch": 855, "sstdata": [690, 736, 776], "sstdataset": 855, "stabil": [4, 10, 244, 408, 477, 852, 858, 862], "stabl": 392, "stack": [20, 73, 336, 380, 404, 447, 460, 591, 677, 689, 709, 719, 731, 735, 753, 775, 795, 817, 818, 819, 820, 834, 836, 850, 851, 852], "staff": [155, 187, 193], "stage": [7, 304, 708, 716, 719, 818, 826, 829, 832, 833, 846, 862], "stai": [583, 584, 721], "stand": [400, 563, 822, 867], "standalon": [4, 823], "standard": [5, 7, 21, 138, 140, 392, 414, 453, 685, 686, 688, 690, 850, 855], "stanford": [145, 175, 181, 184, 834, 855], "star": [161, 163, 172, 835], "start": [6, 32, 114, 115, 125, 131, 164, 229, 230, 239, 248, 286, 309, 323, 329, 334, 335, 382, 552, 560, 562, 564, 576, 577, 688, 693, 694, 695, 698, 703, 704, 711, 715, 721, 729, 816, 817, 818, 819, 820, 824, 827, 829, 832, 833, 835, 845, 846, 850, 851, 855, 858, 861, 867], "start_epoch": [210, 213], "start_epoch_tim": 716, "start_idx": 6, "start_tim": 164, "state": [4, 10, 21, 142, 143, 166, 189, 190, 695, 711, 797, 823, 855, 858, 859, 861, 862, 865], "state_dict": [4, 858], "statement": [717, 727, 822], "static": [22, 852, 861], "static_cast": 22, "staticmethod": [22, 861], "statist": [132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 695, 850, 851, 852], "statu": 56, "std": [22, 392, 414, 827, 829, 861], "steadili": [859, 865], "step": [4, 9, 10, 21, 92, 141, 142, 143, 156, 189, 190, 214, 239, 302, 307, 378, 382, 409, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 457, 459, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 552, 558, 564, 565, 667, 692, 693, 694, 695, 706, 707, 711, 712, 713, 715, 716, 718, 720, 721, 723, 727, 729, 730, 731, 738, 739, 756, 757, 759, 761, 767, 769, 770, 771, 778, 779, 798, 799, 802, 804, 805, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 822, 827, 829, 832, 833, 834, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 858, 862, 867, 868], "step_count": 858, "step_forward": 862, "step_siz": 819, "steplr": 819, "steven": 855, "still": [22, 70, 93, 108, 113, 231, 238, 688, 690, 713, 715, 716, 718, 721, 727, 729, 838, 862], "stochast": [3, 11, 183, 637, 705, 710, 713, 718, 724, 726, 729, 790, 796, 798, 799, 804, 808, 810, 812, 815, 828, 846, 858, 868], "stochastic_train": 713, "stochastical\ud558\uac8c": 797, "stochastictwolayergcn": [713, 718, 757, 758, 759, 761, 799, 801, 802, 804], "stochastictwolayerrgcn": [713, 718, 756, 757, 759, 761, 798, 799, 802, 804], "stop": [192, 562, 564, 727, 858], "stopiter": [827, 829], "stopping_mask": 192, "stopping\uc774\ub098": 811, "storag": [1, 4, 21, 116, 131, 211, 212, 286, 291, 294, 329, 339, 558, 559, 688, 697, 703, 704, 823, 845], "store": [0, 1, 4, 7, 10, 31, 34, 53, 54, 59, 92, 95, 96, 100, 101, 102, 125, 126, 131, 134, 137, 138, 140, 141, 142, 143, 146, 149, 155, 156, 159, 161, 162, 163, 165, 168, 169, 171, 173, 180, 182, 184, 185, 186, 187, 188, 189, 190, 193, 200, 203, 204, 205, 206, 209, 220, 231, 233, 238, 239, 240, 241, 245, 248, 249, 286, 287, 288, 291, 292, 295, 297, 299, 309, 314, 315, 329, 330, 334, 335, 336, 341, 348, 352, 380, 383, 388, 427, 429, 457, 478, 505, 542, 543, 550, 551, 555, 556, 558, 560, 562, 564, 565, 566, 567, 568, 569, 571, 573, 576, 577, 614, 615, 616, 637, 642, 643, 644, 645, 659, 660, 661, 663, 666, 667, 670, 671, 686, 687, 688, 690, 692, 693, 694, 695, 696, 700, 701, 703, 704, 707, 711, 728, 731, 773, 774, 780, 781, 792, 822, 827, 829, 830, 832, 833, 834, 835, 839, 845, 846, 849, 855, 858, 862], "store_id": [49, 95, 96, 98, 106, 245, 330, 334, 335, 478, 542, 555, 556, 558, 573], "store_typ": 643, "stori": 823, "str": [4, 20, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 231, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 291, 294, 295, 296, 298, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 317, 318, 321, 323, 325, 327, 328, 329, 330, 334, 335, 336, 341, 347, 348, 349, 352, 380, 382, 383, 390, 391, 392, 394, 401, 405, 407, 410, 413, 414, 415, 416, 419, 422, 423, 424, 427, 428, 429, 435, 446, 447, 449, 450, 454, 457, 458, 459, 478, 479, 480, 502, 503, 505, 542, 549, 550, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 574, 575, 576, 577, 596, 624, 637, 642, 643, 644, 645, 647, 648, 651, 653, 658, 659, 660, 661, 663, 666, 667, 669, 670, 671, 673, 683, 686, 725, 733, 765, 773, 809, 868], "straight": 708, "straightforward": [850, 851], "strategi": [197, 231, 238, 406, 424, 426, 562, 711, 826, 839, 845, 851], "stream": [210, 300], "streamlin": 826, "strength": [404, 699, 728], "strict": 696, "string": [4, 22, 23, 26, 39, 52, 109, 121, 122, 131, 183, 223, 289, 296, 304, 319, 320, 329, 379, 380, 381, 382, 687, 688, 696, 704, 707, 709, 729, 812, 831, 832, 835], "strong": [340, 476], "strongli": 21, "structur": [0, 4, 7, 13, 19, 21, 22, 56, 59, 67, 89, 101, 102, 108, 112, 125, 126, 131, 132, 141, 142, 143, 147, 150, 154, 159, 161, 162, 163, 167, 170, 173, 174, 175, 176, 181, 184, 197, 205, 210, 233, 235, 239, 247, 248, 249, 286, 304, 309, 313, 329, 421, 422, 423, 425, 446, 550, 551, 552, 559, 569, 637, 661, 667, 692, 695, 696, 698, 699, 700, 702, 703, 712, 729, 781, 819, 822, 826, 831, 845, 850, 852, 853, 855, 856, 858, 859, 863, 865], "strucutr": 830, "strutur": [89, 112, 696], "stub": 21, "student": [155, 187, 193], "studi": [151, 152, 162, 815], "studio": 816, "style": [9, 851, 852], "stype": [380, 725, 765, 809], "sub": [9, 144, 260, 261, 274, 275, 284, 285, 380, 460, 499, 500, 502, 503, 526, 527, 528, 529, 530, 531, 540, 541, 624, 707, 718, 751, 792, 822, 868], "sub_g": [245, 246, 330, 478, 479, 542, 704, 748, 789], "subbackward0": 387, "subclass": [3, 218, 298, 300, 307, 312, 421, 422, 423, 424, 425, 426, 685, 686, 690, 712, 714], "subg": [209, 217, 712, 781], "subgraph": [1, 3, 7, 13, 26, 134, 208, 209, 210, 214, 216, 217, 218, 219, 220, 221, 233, 240, 241, 242, 245, 246, 291, 296, 298, 302, 307, 309, 310, 312, 317, 321, 330, 334, 335, 348, 421, 422, 423, 424, 425, 426, 478, 479, 542, 543, 565, 566, 567, 568, 692, 694, 710, 712, 713, 714, 715, 716, 719, 724, 725, 754, 756, 796, 798, 808, 826, 827, 829, 835, 837, 852, 858, 862], "subgraph_sampl": [302, 827, 829], "subgraphs_nod": [298, 307, 312], "subgraphsampl": [218, 298, 307, 712, 720, 827, 829], "subgraphx": 424, "subject": [6, 850], "sublay": [434, 435, 862], "sublist": 56, "submatrix": [336, 720], "submodul": [4, 380, 723, 816, 836], "subnet": 845, "suboptim": [696, 781], "subpackag": [5, 852], "subplot": [818, 858, 861], "subprocess": [290, 292], "subreddit": 181, "subsect": 718, "subsequ": [302, 307, 695, 696], "subset": [4, 14, 45, 79, 82, 105, 130, 146, 155, 157, 158, 169, 178, 179, 187, 193, 195, 197, 205, 207, 217, 231, 238, 246, 288, 292, 299, 304, 379, 421, 422, 479, 693, 696, 701, 826, 828, 838, 858, 867], "subsetrandomsampl": 838, "subspac": 819, "substanc": 818, "substitut": [826, 852], "substract": [627, 822], "subtract": [631, 669], "subtract_min": 669, "subtre": 855, "succe": [4, 693], "success": 819, "successor": [90, 94, 335, 347, 858], "sudo": [816, 845], "suffici": 845, "suffix": [127, 687, 774], "sugar": [342, 343, 344, 345, 633, 634, 855], "suggest": [21, 23, 423, 425, 707, 708, 835, 842, 852], "suitabl": [336, 427, 429, 571, 691, 695, 696, 711], "sum": [4, 5, 9, 10, 20, 22, 73, 79, 82, 91, 92, 93, 94, 100, 113, 117, 118, 119, 122, 138, 139, 140, 173, 197, 198, 205, 240, 241, 380, 391, 392, 400, 405, 407, 413, 414, 418, 421, 422, 423, 424, 429, 437, 438, 448, 457, 460, 484, 489, 503, 505, 510, 516, 524, 530, 553, 554, 562, 564, 565, 571, 596, 633, 634, 645, 653, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 693, 694, 707, 709, 717, 720, 721, 723, 724, 725, 728, 729, 731, 751, 753, 760, 763, 764, 765, 768, 769, 771, 779, 792, 793, 795, 803, 805, 807, 808, 809, 812, 814, 817, 818, 820, 822, 828, 834, 836, 838, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "sum_": [120, 122, 336, 340, 352, 383, 386, 387, 388, 392, 396, 398, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 415, 418, 427, 429, 430, 431, 433, 437, 458, 461, 476, 571, 574, 575, 707, 729, 730, 751, 769, 770, 792, 812, 813, 820, 822, 828, 836, 837, 850, 852, 855, 858, 862], "sum_edg": 128, "sum_i": [669, 861], "sum_nod": 129, "sum_p": 862, "summar": [21, 729, 826, 852, 858], "summari": 826, "summat": [119, 128, 129, 380, 504, 505, 553, 579, 645, 729, 812, 828, 836, 851], "sumpool": [819, 867], "super": [146, 169, 218, 298, 307, 312, 411, 421, 422, 423, 424, 425, 426, 460, 686, 690, 712, 713, 715, 716, 717, 718, 720, 721, 723, 725, 727, 729, 730, 731, 733, 736, 756, 757, 758, 759, 760, 761, 763, 765, 767, 769, 770, 771, 773, 776, 798, 799, 801, 802, 803, 804, 805, 807, 809, 811, 812, 813, 814, 817, 818, 819, 820, 822, 827, 829, 834, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "superpixel": [146, 169], "superpixeldataset": [146, 169], "superscript": 849, "superset": 637, "supervis": [140, 147, 183, 384, 394, 410, 659, 696, 715, 781, 801, 834, 849, 858], "supplementari": 397, "support": [4, 5, 10, 13, 22, 110, 117, 122, 126, 138, 139, 146, 169, 210, 233, 239, 249, 292, 294, 299, 339, 341, 348, 349, 352, 383, 395, 401, 457, 459, 460, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 558, 560, 562, 564, 565, 566, 567, 569, 572, 579, 618, 638, 644, 653, 672, 683, 688, 692, 693, 694, 695, 696, 700, 703, 707, 718, 721, 723, 728, 729, 763, 807, 815, 816, 817, 818, 819, 820, 822, 829, 832, 833, 834, 836, 839, 842, 862, 868], "suppos": [21, 296, 316, 504, 728, 793, 828, 849, 862], "suppress": [384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 839], "sure": [6, 21, 22, 229, 230, 292, 405, 416, 430, 432, 436, 437, 446, 449, 567, 687, 695, 774, 819, 858], "surpass": 21, "svd": [635, 671], "svd_pe": 671, "svdpe": 13, "swap": 317, "switch": [816, 818], "sym": 459, "sym_new_etyp": 652, "symbol": [5, 688, 862], "symmetr": [183, 338, 410, 459, 659, 670, 699, 727, 811, 817, 822, 851], "sympi": [827, 829, 832, 833], "sync": 845, "synchron": [4, 693, 779, 842, 858, 867], "synset": 191, "syntact": [182, 855, 856, 865], "syntax": [342, 343, 344, 345, 633, 634, 704, 727, 789, 855], "synthet": [14, 141, 142, 143, 172, 189, 190, 688, 726, 727, 811, 838, 839], "syntheticdataset": 839, "system": [4, 22, 166, 173, 457, 560, 699, 820, 837, 842, 845], "systemat": [423, 425], "systemctl": 845, "t": [4, 10, 21, 56, 60, 87, 89, 118, 119, 131, 163, 164, 168, 200, 214, 240, 241, 242, 291, 329, 347, 383, 386, 396, 400, 402, 403, 407, 409, 412, 415, 419, 420, 422, 423, 424, 433, 446, 454, 455, 456, 458, 459, 560, 562, 564, 565, 637, 643, 655, 661, 670, 695, 696, 700, 706, 715, 720, 721, 750, 791, 819, 820, 822, 827, 829, 832, 833, 845, 851, 852, 858, 862], "t0": [694, 780, 849, 852], "t1": [694, 780], "t_co": [827, 829], "t_i": 862, "t_j": 862, "tabl": [178, 179, 378, 379, 382, 696, 823, 839, 852], "tabular": [696, 700], "tackl": [423, 424, 425, 426, 851], "tag": [21, 567, 576, 577], "tag_offset": [576, 577], "tag_offset_nam": [567, 576, 577], "tag_pos_nam": [576, 577], "tag_typ": [576, 577], "tail": [304, 455, 456], "take": [20, 51, 118, 119, 120, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 210, 214, 215, 216, 219, 220, 240, 241, 286, 292, 299, 338, 396, 397, 400, 402, 403, 411, 413, 414, 416, 421, 422, 423, 424, 425, 426, 561, 565, 566, 567, 568, 596, 602, 622, 624, 673, 688, 690, 693, 696, 703, 704, 707, 709, 711, 712, 713, 714, 716, 718, 722, 724, 725, 726, 727, 728, 729, 731, 816, 818, 820, 828, 836, 837, 839, 842, 850, 851, 852, 855, 858, 862, 867], "taken": [161, 163, 851], "talk": 838, "tanh": [822, 855], "tape": 137, "tar": [687, 734, 774], "target": [108, 132, 133, 144, 170, 177, 178, 179, 201, 242, 317, 403, 412, 424, 426, 605, 696, 718, 719, 827, 829, 862], "target_class": [424, 426], "target_dir": 201, "target_idx": 850, "target_ntyp": 140, "task": [2, 7, 21, 122, 132, 133, 135, 136, 137, 138, 139, 140, 144, 146, 147, 150, 151, 152, 153, 154, 159, 160, 161, 163, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 188, 194, 195, 197, 198, 288, 289, 291, 302, 303, 304, 307, 308, 689, 690, 693, 696, 712, 718, 720, 726, 727, 729, 730, 731, 776, 815, 819, 820, 823, 826, 827, 829, 830, 834, 838, 845, 846, 852, 858, 867, 868], "task_lint": 21, "task_nam": [827, 829], "task_unit_test": 21, "tau": [412, 419, 420], "tb": 383, "tcmalloc": 842, "tcp": [867, 868], "tcpstore": 457, "teach": 837, "teacher": 858, "team": [21, 862, 867], "techniqu": [382, 727, 855, 862], "technologi": 842, "teleport": 385, "tell": [5, 21, 130, 210, 213, 239, 688, 718, 835, 836, 838], "temperatur": [423, 425], "templat": [21, 156, 686, 773], "tempor": [25, 145, 164, 166, 214, 296], "temporal_sample_neighbor": 296, "temporari": 25, "ten": 159, "tend": [120, 709], "tensor": [0, 1, 5, 6, 7, 9, 12, 13, 20, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 138, 139, 140, 146, 159, 165, 168, 169, 172, 173, 175, 177, 178, 179, 184, 186, 195, 210, 213, 220, 221, 226, 227, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 286, 287, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 309, 310, 312, 314, 315, 316, 317, 318, 323, 324, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 346, 347, 348, 349, 350, 351, 352, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 547, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 688, 690, 694, 696, 700, 701, 702, 703, 704, 707, 712, 714, 717, 720, 721, 722, 724, 725, 728, 729, 731, 736, 739, 745, 746, 747, 748, 769, 776, 786, 787, 788, 789, 793, 803, 805, 812, 816, 818, 819, 820, 822, 823, 827, 829, 832, 833, 834, 835, 836, 838, 839, 845, 850, 852, 853, 855, 858, 862, 865, 867, 868], "tensor_new": 851, "tensor_numpi": 839, "tensorcor": 721, "tensorcore\ub4e4\uc744": 805, "tensorflow": [9, 13, 21, 23, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 690, 703, 717, 722, 729, 731, 803, 806, 812, 815, 823], "tensorflow\u7684keras\u5c42": 762, "tensorflow\u7684tensor\u7c7b\u6216mxnet\u7684ndarray\u7c7b": 747, "tensorflow\uc5d0\uc11c\ub294": 776, "tensorflow\uc5d0\uc11c\ub3c4": 814, "tensorflow\uc758": 788, "term": [4, 10, 14, 144, 149, 185, 316, 378, 381, 389, 397, 400, 401, 402, 410, 420, 815, 851, 855, 858, 861], "termin": [560, 564], "terminaterequir": [827, 829], "termination_prob": 560, "tesla": 14, "test": [4, 9, 25, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 239, 291, 308, 313, 324, 689, 693, 696, 720, 727, 731, 735, 739, 740, 775, 779, 781, 811, 816, 817, 818, 819, 820, 822, 826, 827, 829, 831, 832, 833, 834, 836, 838, 839, 845, 846, 849, 852, 862, 867, 868], "test_acc": [817, 818, 820, 834, 836, 867, 868], "test_data": [164, 166, 184], "test_dataload": [819, 838], "test_edg": [139, 846], "test_edge_mask": [157, 158, 191], "test_el": 324, "test_idx": [138, 140, 819, 850], "test_label": [689, 735, 775, 846], "test_load": [689, 735, 775, 867], "test_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 378, 688, 690, 731, 736, 771, 776, 814, 817, 818, 820, 834, 836, 839, 845, 849, 850], "test_metr": 819, "test_neg_dst": 846, "test_neg_g": 837, "test_neg_src": 846, "test_neg_u": 837, "test_neg_v": 837, "test_nid": 845, "test_pos_dst": 846, "test_pos_g": 837, "test_pos_src": 846, "test_pos_u": 837, "test_pos_v": 837, "test_pr": 846, "test_rat": 173, "test_ratio": 173, "test_sampl": 838, "test_set": [308, 313, 827, 829, 831, 832, 833, 867, 868], "test_siz": [819, 837], "texa": 187, "text": [161, 182, 387, 404, 410, 412, 419, 446, 696, 706, 726, 750, 791, 819, 836, 850, 852, 858, 861], "textbf": [858, 861], "textrm": [178, 179, 855, 862], "textur": 861, "tf": [4, 161, 823], "tf_force_gpu_allow_growth": 816, "tf_geometr": 823, "tgt": 862, "tgt_emb": 862, "tgt_po": 862, "tgt_seq": 862, "tgt_y": 862, "tgz": [687, 690, 736, 774, 776], "tgz\u6587\u4ef6": 734, "th": [4, 5, 9, 10, 27, 34, 36, 37, 48, 53, 55, 60, 87, 100, 114, 116, 122, 128, 129, 138, 146, 147, 157, 158, 165, 168, 169, 172, 174, 175, 186, 191, 214, 216, 219, 220, 245, 336, 338, 352, 380, 384, 385, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 478, 505, 549, 553, 554, 559, 563, 564, 569, 574, 575, 636, 643, 645, 647, 648, 672, 682, 683, 692, 693, 694, 695, 696, 700, 701, 702, 703, 704, 711, 729, 738, 739, 744, 745, 746, 747, 748, 778, 779, 780, 781, 785, 786, 787, 788, 789, 812, 819, 820, 822, 828, 839, 845, 846, 849, 850, 851, 855, 861, 862], "than": [4, 21, 27, 28, 66, 95, 96, 118, 119, 120, 121, 131, 139, 142, 143, 161, 168, 178, 189, 190, 226, 286, 289, 292, 296, 314, 329, 336, 383, 386, 423, 425, 427, 429, 451, 461, 561, 565, 566, 567, 571, 614, 615, 616, 628, 660, 661, 666, 703, 704, 708, 714, 725, 727, 730, 748, 789, 816, 820, 823, 842, 845, 850, 851, 852, 855, 858], "thei": [1, 4, 9, 11, 20, 21, 26, 56, 117, 119, 122, 130, 131, 138, 140, 151, 152, 188, 233, 240, 241, 244, 304, 309, 318, 329, 346, 347, 386, 460, 477, 559, 562, 564, 565, 685, 686, 692, 693, 694, 696, 701, 702, 704, 707, 713, 717, 721, 724, 725, 726, 728, 819, 823, 827, 829, 831, 832, 833, 834, 836, 838, 845, 851, 852, 855, 858, 861], "them": [1, 4, 5, 9, 41, 48, 56, 68, 73, 93, 100, 113, 120, 130, 133, 142, 144, 148, 149, 155, 178, 185, 187, 193, 205, 221, 244, 245, 248, 289, 317, 330, 334, 335, 336, 386, 421, 422, 423, 424, 425, 426, 431, 447, 454, 477, 478, 542, 557, 567, 569, 613, 619, 637, 645, 651, 688, 692, 693, 694, 696, 699, 700, 704, 706, 714, 719, 727, 729, 815, 822, 828, 830, 832, 833, 834, 835, 837, 845, 851, 855, 856, 858, 862, 865, 867], "themselv": [21, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 713, 828, 837], "theori": 851, "ther": 420, "therefor": [4, 26, 220, 292, 299, 643, 693, 694, 713, 714, 820, 837, 846, 850, 851, 852, 855], "theta": [399, 400, 405, 406, 413, 417, 418, 818, 851], "theta_": [818, 851], "theta_0": 818, "theta_i": 851, "theta_k": 660, "theta_r": 818, "theta_x": 851, "thew": 26, "thi": [4, 5, 6, 7, 8, 10, 14, 21, 22, 24, 26, 27, 28, 34, 40, 41, 44, 45, 48, 51, 52, 59, 70, 73, 79, 82, 89, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 137, 140, 141, 142, 143, 145, 148, 156, 157, 158, 159, 160, 162, 164, 165, 166, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 197, 209, 210, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 231, 234, 238, 239, 240, 241, 242, 244, 245, 246, 286, 290, 292, 296, 298, 299, 300, 302, 304, 307, 308, 309, 312, 317, 329, 330, 333, 334, 335, 336, 337, 339, 347, 348, 349, 352, 380, 384, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 414, 417, 418, 421, 422, 423, 424, 425, 426, 427, 429, 431, 433, 447, 450, 451, 452, 453, 457, 458, 460, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 552, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 571, 576, 577, 583, 584, 607, 614, 615, 616, 618, 624, 628, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 659, 660, 661, 662, 663, 664, 666, 667, 668, 670, 671, 672, 680, 681, 682, 683, 685, 686, 689, 690, 691, 692, 693, 694, 695, 696, 697, 700, 703, 704, 706, 707, 708, 710, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 776, 781, 801, 814, 816, 817, 818, 819, 820, 822, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 853, 855, 856, 858, 859, 861, 862, 863, 865, 867, 868], "thing": [210, 226, 561, 691, 713, 855], "third": [131, 210, 214, 215, 216, 219, 220, 286, 329, 563], "thoma": 824, "thorough": 637, "thoroughli": [851, 852], "those": [27, 28, 114, 116, 209, 220, 242, 292, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 427, 429, 707, 708, 711, 723, 828, 835, 852, 855, 858, 862], "though": [21, 22, 240, 241, 565, 700, 851], "thought": [858, 862], "thousand": 829, "thre": 862, "thread": [21, 210, 234, 845, 868], "thread_work": [827, 829], "three": [14, 48, 62, 63, 80, 126, 131, 161, 163, 198, 217, 230, 239, 249, 286, 329, 380, 459, 571, 643, 688, 690, 692, 693, 695, 696, 707, 715, 720, 724, 831, 836, 837, 839, 850, 851, 855, 858, 862, 868], "threshold": [296, 420, 424, 426, 660, 661, 666], "through": [22, 235, 693, 729, 815, 838, 845, 846, 850], "throughout": [304, 703, 858], "throughput": 692, "throw": 683, "thrown": [827, 829, 856, 865], "thu": [4, 9, 14, 22, 70, 122, 182, 198, 244, 245, 302, 330, 334, 335, 390, 417, 461, 477, 478, 542, 553, 554, 688, 693, 694, 696, 700, 702, 721, 818, 849, 850, 851, 852, 855, 858, 861, 862, 867], "thumb": 21, "thumbnail": [834, 835, 836, 837, 838, 839], "ti": 51, "tid": 694, "tild": [385, 388, 404, 412, 417, 418, 459, 818, 849, 851], "tile": 861, "time": [6, 113, 118, 164, 166, 200, 214, 296, 299, 302, 307, 334, 335, 383, 410, 411, 427, 450, 561, 564, 565, 661, 670, 686, 691, 693, 696, 708, 715, 716, 721, 729, 752, 794, 818, 819, 820, 822, 823, 827, 829, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "time_enc": 862, "timestamp": [296, 318], "tini": [130, 184, 855], "tiny_data": 184, "tiny_sst": 855, "tip": [210, 711], "tissu": 852, "titl": [700, 744, 785], "tmp": [314, 315, 423, 425, 696, 740, 781], "to_add_edg": 858, "to_bfloat16": 721, "to_bidirect": [6, 116, 703, 747, 788], "to_block": [4, 131, 693, 694, 712, 714, 739, 756, 779, 780, 798, 800], "to_csv": [832, 833], "to_dens": [818, 820, 822], "to_direct": [247, 248], "to_heterogen": 643, "to_homogen": [412, 415, 642, 704, 748, 789, 850], "to_homogenen": 26, "to_jshtml": 818, "to_loc": 4, "to_networkx": [818, 851, 855, 861], "to_numpi": [688, 839], "to_partid": 4, "to_simpl": [118, 119, 186, 646], "to_undirect": 818, "tocoo": [126, 249], "todens": 837, "todo": [827, 829], "togeth": [11, 26, 91, 92, 101, 102, 130, 135, 136, 137, 214, 216, 239, 327, 337, 346, 418, 419, 420, 430, 432, 436, 437, 558, 696, 704, 719, 729, 820, 832, 833, 851, 867], "toi": [175, 862], "token": [855, 862, 863, 865], "tolevi": 13, "tolist": [563, 818, 829, 855], "tolok": 188, "toloka": 188, "tone": 164, "too": [4, 22, 60, 87, 239, 292, 299, 308, 696, 702, 714, 787, 822, 828, 862], "tool": [692, 693, 696, 741, 781, 782, 816, 822, 823, 829, 834, 845], "toolbox": 397, "top": [142, 143, 161, 412, 436, 647, 648, 693, 696, 815, 819, 820, 822, 826, 837, 845, 850], "topic": [329, 644, 695, 711, 851], "topk": [336, 427, 429, 571, 647, 648], "topolog": [548, 649, 855], "topologi": [13, 291, 308, 386, 418, 728, 855, 856, 858, 865], "topological_nodes_gener": [548, 855], "torch": [4, 5, 6, 8, 9, 10, 12, 20, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 131, 138, 146, 147, 165, 168, 169, 172, 174, 183, 184, 186, 195, 209, 210, 213, 214, 216, 217, 219, 220, 226, 227, 243, 244, 245, 246, 248, 249, 262, 263, 264, 265, 286, 287, 289, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 323, 324, 327, 328, 329, 330, 334, 335, 336, 340, 346, 350, 351, 352, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 505, 542, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 636, 637, 638, 642, 643, 644, 645, 647, 648, 652, 653, 656, 657, 658, 659, 660, 661, 664, 665, 666, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 688, 689, 690, 692, 693, 695, 696, 700, 701, 702, 703, 704, 707, 708, 712, 713, 714, 715, 716, 717, 718, 720, 721, 723, 724, 725, 726, 727, 729, 730, 731, 735, 736, 738, 739, 744, 745, 746, 747, 748, 751, 752, 756, 757, 758, 759, 760, 761, 763, 764, 765, 766, 767, 769, 770, 771, 775, 776, 778, 779, 785, 786, 787, 788, 789, 792, 794, 798, 799, 800, 801, 802, 803, 804, 805, 807, 808, 809, 810, 811, 812, 813, 814, 817, 818, 819, 820, 822, 827, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "torch_feat": [297, 314], "torch_featur": 314, "torchaudio": 822, "torchbasedfeatur": [297, 832, 833], "torchbasedfeaturestor": [308, 832, 833], "torchdata": [292, 299, 719, 827, 829, 832, 833], "torchmetr": [820, 868], "torchvis": 822, "tosimpl": [13, 655], "total": [4, 10, 80, 81, 181, 292, 296, 299, 302, 307, 311, 378, 383, 411, 429, 438, 690, 694, 695, 719, 825, 834, 835, 836, 837, 838, 839, 841, 842, 844, 845, 846, 848, 849, 850, 851, 852, 854, 855, 857, 858, 860, 861, 862, 864, 866, 867, 868, 870], "total_correct": 867, "total_loss": [716, 720, 819, 827, 867, 868], "total_node_weight": 695, "total_num_edg": [296, 323], "total_num_nod": [296, 323, 715], "touch": 21, "toward": 656, "tower": [392, 414], "tp_": 852, "tq": [820, 829], "tqdm": [715, 716, 819, 820, 827, 829, 832, 833, 862, 868], "tr": 855, "trace": [562, 563, 564], "traceback": [827, 829], "track": 855, "trade": [145, 424, 426, 862], "traffic": [149, 185], "train": [3, 4, 7, 9, 10, 11, 23, 25, 89, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 209, 210, 213, 214, 215, 216, 219, 220, 231, 238, 239, 291, 292, 299, 302, 308, 313, 382, 392, 406, 411, 414, 417, 421, 422, 423, 424, 425, 426, 457, 635, 637, 671, 689, 690, 693, 694, 695, 696, 705, 707, 710, 712, 714, 715, 719, 724, 735, 738, 766, 769, 771, 775, 776, 778, 781, 792, 798, 799, 804, 805, 810, 811, 812, 814, 815, 816, 823, 825, 827, 828, 831, 832, 833, 839, 840, 841, 842, 849, 852, 855, 856, 858, 859, 861, 865, 867], "train_acc": [834, 836, 850], "train_data": [164, 166, 184], "train_dataload": [819, 827, 829, 838, 845, 846], "train_dataset": [146, 169], "train_dataset_subset": [146, 169], "train_dist": [741, 782, 845], "train_edg": [157, 158, 191], "train_edge_mask": [157, 158, 191], "train_eid": [214, 216, 220, 757, 799, 846], "train_eid_dict": [757, 759, 799, 802], "train_g": [157, 158, 191, 837], "train_graph": 139, "train_idx": [138, 140, 690, 736, 776, 819, 850], "train_it": 862, "train_label": [689, 735, 775], "train_load": [689, 735, 775, 855, 867], "train_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 239, 378, 421, 688, 690, 692, 693, 696, 721, 726, 727, 731, 736, 738, 739, 740, 766, 767, 771, 776, 778, 779, 781, 805, 810, 811, 814, 817, 818, 820, 834, 836, 839, 845, 849, 850, 852], "train_neg_g": 837, "train_neg_u": 837, "train_neg_v": 837, "train_nid": [210, 214, 215, 216, 219, 692, 693, 714, 738, 739, 756, 761, 778, 779, 798, 800, 804, 845, 846], "train_nid_dict": [761, 804], "train_on": [209, 210, 213, 214, 215, 216, 217, 220], "train_pos_g": 837, "train_pos_u": 837, "train_pos_v": 837, "train_rat": 173, "train_sampl": 838, "train_se": [759, 802], "train_set": [157, 158, 191, 308, 313, 712, 713, 718, 827, 829, 831, 832, 833, 851, 867, 868], "train_siz": [161, 162, 163, 164, 166, 819, 837], "train_step": [423, 425], "train_step_nod": [423, 425], "trainabl": [4, 817, 822, 850], "trainer": [4, 231, 238, 239, 692, 693, 694, 696, 697, 845, 846], "trainer_id": 239, "trainer\uc5d0\uac8c": 778, "training_load": 851, "training_set": 195, "training\uc744": 792, "trainset": [147, 174, 855], "trang": [716, 820], "transact": 145, "transduct": [140, 197, 198, 417, 693, 739, 779], "transfer": [210, 289], "transform": [9, 13, 26, 27, 28, 114, 115, 116, 117, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 245, 246, 305, 330, 333, 336, 339, 347, 352, 381, 383, 386, 392, 396, 400, 412, 422, 423, 424, 427, 428, 429, 434, 435, 446, 447, 448, 449, 450, 451, 452, 453, 461, 478, 479, 542, 549, 556, 559, 567, 636, 645, 646, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 688, 696, 700, 712, 713, 714, 716, 719, 721, 729, 817, 821, 825, 827, 829, 849, 850, 851, 852, 855, 858, 863, 864, 865], "transform1": 663, "transform2": 663, "transform3": 663, "transformer_encod": 450, "transit": 564, "translat": [158, 191, 455, 862], "translationdataset": 862, "transmiss": 210, "transpar": [694, 719], "transpos": [31, 559, 576, 578, 604, 819, 822, 851], "travel": [818, 858], "travers": [13, 91, 92, 123, 124, 229, 230, 545, 547, 548, 560, 562, 564, 649], "traversal_ord": 855, "treat": [309, 318, 382, 565, 566, 645, 670, 704, 724, 748, 789, 835, 837, 838, 839, 851, 855, 856, 862, 865], "tree": [14, 21, 159, 182, 184, 189, 190, 230, 336, 424, 426, 427, 429, 571, 825, 856, 857, 859, 862, 865], "tree_height": [189, 190], "treebank": [184, 855], "treelstm": 855, "treelstmcel": 855, "tri": [4, 148, 239, 348, 349], "trick": [22, 849], "trigger": [0, 91, 92, 401, 709, 721, 795, 819, 823, 836, 839, 851, 852, 855], "tripl": [455, 456, 850], "triplet": [4, 30, 31, 32, 34, 39, 47, 48, 52, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 131, 223, 246, 329, 480, 553, 555, 557, 574, 642, 688, 704], "trivial": [9, 337, 392, 450, 663, 855], "troubl": 21, "true": [4, 6, 9, 10, 25, 31, 48, 49, 57, 58, 65, 66, 67, 69, 95, 96, 98, 99, 106, 111, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 197, 198, 200, 201, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 235, 237, 238, 239, 240, 241, 245, 247, 286, 290, 292, 296, 299, 302, 307, 308, 309, 315, 324, 330, 331, 333, 334, 335, 336, 337, 339, 378, 381, 382, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 446, 447, 448, 449, 450, 451, 459, 478, 542, 543, 545, 547, 548, 549, 555, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 571, 572, 573, 576, 590, 635, 636, 637, 643, 644, 645, 647, 648, 649, 651, 652, 653, 663, 664, 669, 671, 684, 688, 689, 690, 692, 693, 695, 696, 712, 713, 714, 715, 716, 718, 719, 720, 721, 723, 729, 735, 736, 738, 739, 756, 757, 758, 759, 761, 763, 769, 775, 776, 778, 779, 781, 798, 799, 800, 801, 802, 804, 805, 807, 812, 816, 817, 818, 819, 820, 822, 827, 829, 831, 832, 833, 834, 838, 839, 845, 846, 849, 850, 851, 855, 858, 861, 862, 867, 868], "truediv": 624, "trueli": [695, 696], "truli": [239, 715], "truncat": 451, "trust": 145, "truth": [150, 154, 167, 176, 731, 814, 834, 846, 851, 858, 868], "trv_a_tre": 855, "trv_graph": 855, "try": [116, 130, 207, 226, 239, 333, 339, 559, 560, 561, 636, 645, 695, 817, 818, 819, 820, 822, 827, 829, 832, 833, 838, 842], "tudata": [690, 736, 776], "tudataset": 25, "tune": [192, 404, 721, 815, 842, 852], "tupl": [4, 10, 22, 26, 27, 32, 36, 48, 51, 54, 61, 73, 88, 95, 123, 125, 131, 132, 133, 139, 144, 156, 170, 183, 196, 217, 239, 248, 286, 287, 296, 300, 301, 304, 309, 317, 318, 319, 320, 327, 328, 329, 347, 350, 351, 352, 379, 380, 381, 422, 461, 561, 564, 565, 581, 583, 584, 598, 612, 614, 615, 616, 617, 628, 689, 690, 694, 703, 717, 724, 725, 760, 764, 775, 803, 808, 827], "tuple\uacfc": 780, "tuple\uc744": [776, 780], "tuple\uc758": 808, "ture": [9, 707, 792], "turn": [21, 210, 213, 331, 348, 543, 721, 819, 828, 842, 845, 851, 858], "tutori": [9, 21, 210, 214, 215, 216, 292, 700, 707, 713, 714, 717, 718, 720, 785, 798, 799, 804, 817, 818, 819, 820, 822, 824, 825, 826, 827, 828, 829, 830, 832, 833, 834, 835, 836, 837, 838, 839, 841, 844, 845, 846, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 870], "tvm": 22, "tvt": 313, "tweak": 21, "tweet": 159, "twirl": 419, "twitter": [159, 699], "two": [3, 4, 5, 9, 26, 34, 45, 48, 51, 52, 53, 58, 68, 77, 79, 81, 82, 100, 105, 116, 118, 119, 125, 126, 128, 129, 130, 135, 136, 141, 142, 159, 162, 163, 178, 180, 182, 188, 231, 238, 239, 244, 248, 296, 304, 334, 335, 336, 347, 348, 349, 382, 383, 384, 386, 387, 392, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 410, 416, 457, 458, 460, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 552, 553, 554, 558, 560, 561, 567, 574, 575, 576, 577, 610, 618, 621, 624, 630, 636, 637, 642, 643, 645, 647, 648, 651, 667, 683, 688, 693, 694, 695, 696, 698, 699, 700, 701, 702, 704, 707, 708, 709, 713, 715, 717, 718, 721, 725, 727, 729, 730, 731, 799, 814, 820, 822, 828, 831, 834, 837, 838, 839, 845, 849, 850, 851, 852, 853, 855, 858, 861, 862, 863, 865], "twolayergcn": [718, 761, 804], "tx": 670, "txt": [692, 693, 695, 696, 697, 738, 739, 741, 778, 779, 781, 782, 845, 846], "ty_a": 642, "ty_b": 642, "type": [4, 5, 6, 10, 13, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 286, 287, 292, 293, 294, 295, 296, 297, 299, 302, 304, 307, 308, 309, 311, 314, 315, 317, 318, 321, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 346, 347, 348, 349, 350, 351, 352, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 429, 430, 432, 433, 434, 435, 436, 437, 438, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 573, 574, 575, 576, 577, 579, 580, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 659, 668, 674, 677, 679, 682, 683, 688, 690, 692, 694, 695, 696, 698, 699, 700, 701, 702, 703, 707, 709, 713, 716, 717, 718, 720, 721, 723, 725, 726, 729, 730, 731, 746, 748, 763, 764, 776, 780, 787, 789, 795, 798, 807, 811, 812, 813, 816, 822, 827, 829, 831, 832, 833, 835, 838, 839, 849, 850, 852, 855, 858, 867], "type_": [222, 223, 224, 225], "type_edge_id": 781, "type_nam": [287, 295], "type_per_edg": [296, 323, 832], "type_wise_edge_id": 695, "type_wise_id": [694, 780], "type_wise_node_id": 695, "typestr": [62, 63], "typic": [1, 4, 11, 240, 383, 690, 697, 707, 721, 723, 724, 818, 842, 851, 858, 862], "typl": [128, 647], "tzdata": [827, 829, 832, 833], "u": [4, 5, 21, 27, 48, 51, 57, 61, 87, 88, 90, 94, 107, 114, 130, 131, 161, 163, 178, 179, 226, 227, 230, 243, 251, 252, 254, 256, 258, 260, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 281, 283, 285, 286, 296, 316, 329, 333, 339, 340, 347, 396, 397, 399, 400, 402, 403, 407, 410, 411, 413, 414, 416, 476, 502, 503, 559, 575, 636, 637, 645, 664, 677, 687, 690, 699, 702, 703, 704, 706, 707, 708, 719, 730, 736, 743, 746, 747, 748, 750, 751, 752, 756, 770, 776, 784, 787, 788, 789, 791, 792, 794, 798, 813, 815, 818, 828, 835, 836, 837, 842, 849, 851, 855, 858, 861, 862], "u0": [178, 179], "u0_atom": 179, "u_": [407, 855], "u_0": [178, 179], "u_add_": 5, "u_add_e_max": 9, "u_add_v": [5, 34, 460, 707, 708, 751, 752, 792, 794], "u_atom": 179, "u_attr": 125, "u_div_": 5, "u_div_v": [5, 9], "u_dot_": 5, "u_dot_v": [5, 9, 721, 727, 730, 759, 767, 770, 802, 805, 811, 813, 837], "u_f": 855, "u_fea": [399, 407, 410, 416], "u_feat": [396, 397, 400, 402, 403, 413], "u_hat": 861, "u_iou": 855, "u_j": 855, "u_l": 855, "u_mul_": [5, 9, 421, 422, 707, 721, 728, 751, 768, 792, 793, 805, 836, 862], "u_mul_e_sum": 9, "u_mul_e_udf": 836, "u_mul_v": 5, "u_sub_": 5, "u_sub_v": 5, "ubuntu": [14, 139, 816, 827, 829, 832, 833, 839, 842, 851, 855, 858, 861], "uc": 382, "ucidata": 167, "udf": [20, 693, 707, 721, 739, 792, 805, 852, 855], "udf_max": 5, "udf_u_mul_": 5, "udf\ub294": 792, "udf\uc640": 792, "udf\uc758": 792, "uint32": 816, "uint8": [693, 739, 779, 832, 862], "uk": 144, "un": [839, 852], "unari": [5, 707, 792], "unbatch": [101, 102, 122, 838, 855], "unblock": [384, 396, 399, 400, 402, 403, 404, 407, 410, 417], "uncertainti": [197, 205], "unchang": 109, "uncom": [817, 818, 819, 820, 822], "uncompress": 201, "uncov": 850, "undefin": [229, 230, 240, 241, 330, 334, 335, 478, 542, 562, 564, 565, 566, 567, 693, 839], "under": [1, 5, 14, 22, 95, 96, 137, 161, 163, 171, 180, 182, 188, 197, 205, 239, 245, 330, 334, 335, 478, 542, 555, 556, 558, 567, 573, 645, 687, 688, 692, 695, 696, 697, 711, 774, 815, 816, 836, 837, 845, 849, 850, 852, 858, 867], "underflow": [721, 805], "underli": [423, 425, 693], "underset": [725, 765, 809, 851], "understand": [21, 438, 453, 695, 711, 818, 823, 825, 828, 836, 838, 845, 851, 853, 854, 865], "undirect": [6, 173, 220, 247, 248, 288, 699, 700, 703, 784, 799, 835, 858], "uneven": 868, "unexist": [446, 449], "unfamiliar": 21, "uni": [44, 45, 68, 79, 82, 104, 105, 126, 399, 550], "unidirect": [116, 125, 347, 394, 395, 396, 397, 399, 400, 402, 403, 407, 410, 413, 416, 717, 803], "unifi": [21, 210, 304, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 714, 826], "uniform": [174, 205, 214, 216, 219, 220, 226, 227, 296, 316, 395, 402, 403, 407, 409, 410, 413, 416, 418, 564, 565, 567, 716, 730, 759, 800, 802, 852], "uniform_": [4, 693, 739, 779], "uniformli": [214, 216, 217, 226, 227, 244, 296, 316, 379, 411, 477, 550, 551, 562, 564, 565, 716, 827], "uniformnegativesampl": [302, 716, 827], "uniform\uc0d8\ud50c\ub9c1\uc740": 800, "uniniti": 351, "union": [4, 209, 220, 292, 296, 298, 299, 300, 307, 309, 311, 312, 317, 318, 328, 427, 429, 855], "uniqu": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 162, 182, 216, 226, 240, 246, 298, 302, 307, 312, 318, 327, 328, 457, 480, 553, 555, 557, 561, 565, 574, 579, 693, 694, 696, 701, 703, 704, 722, 729, 827, 845, 846], "unique_and_compact": 827, "unique_and_compact_csc_format": 829, "unique_and_compact_per_typ": 827, "unique_dst": 328, "unique_dst_nod": 328, "unique_nod": [327, 328], "unit": [7, 178, 179, 696, 850, 855, 867], "univers": [132, 167, 863, 865], "unknown": [147, 171], "unlabel": [161, 459, 696, 715], "unless": [210, 827, 829, 832, 833], "unlik": [118, 119, 302, 851, 852, 859, 865], "unmark": 6, "unnam": 688, "unnecessari": [708, 725, 842], "unnorm": [240, 241, 296, 302, 307, 397, 401, 562, 564, 565, 566, 567], "unobserv": 852, "unoccupi": [178, 179], "unorm": 419, "unpack": [695, 696, 716], "unpickl": [827, 829, 832, 833], "unpin": 112, "unpin_memory_": 89, "unplug": 173, "unreach": [242, 451, 452, 572], "unscal": [721, 805], "unsqueez": [128, 129, 451, 682, 724, 764, 770, 808, 850, 851, 855, 858], "unsupervis": [716, 802, 851], "until": [4, 6, 21, 214, 565, 711, 855, 862], "untrust": [827, 829, 832, 833], "untyp": [850, 858], "unus": 21, "unvisit": [424, 426], "unweight": [288, 572, 659, 670, 699, 728, 784], "up": [4, 9, 22, 221, 240, 241, 429, 562, 564, 565, 571, 643, 690, 696, 703, 707, 708, 729, 834, 837, 849, 850, 852, 855, 861, 868], "updat": [4, 10, 20, 21, 27, 28, 34, 35, 73, 91, 92, 93, 94, 100, 113, 222, 223, 224, 225, 287, 293, 294, 295, 297, 314, 346, 380, 382, 386, 387, 389, 394, 395, 397, 400, 402, 403, 404, 405, 406, 408, 410, 416, 417, 418, 448, 457, 459, 544, 545, 546, 547, 548, 692, 693, 706, 707, 708, 709, 710, 717, 721, 729, 752, 792, 794, 795, 805, 816, 822, 823, 827, 828, 829, 836, 845, 851, 852, 855, 861, 862, 867], "update_al": [5, 9, 20, 421, 460, 674, 675, 676, 677, 678, 679, 680, 681, 682, 707, 708, 709, 710, 717, 721, 724, 728, 751, 752, 753, 754, 760, 764, 768, 792, 793, 794, 795, 796, 803, 805, 808, 836, 837, 849, 850, 851, 852, 858, 861], "update_all_exampl": [707, 751, 792], "update_graph": 862, "upgrad": 818, "upload": [21, 845], "upon": [22, 162, 822], "upper": [234, 420, 447, 452], "upstream": [21, 855], "upward": 855, "urandom": [183, 207], "url": [23, 156, 200, 686, 687, 690, 733, 734, 736, 773, 774, 776, 822], "urllib": 839, "urllib3": [827, 829, 832, 833], "urlretriev": 839, "us": [4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 142, 143, 144, 145, 148, 150, 154, 159, 160, 162, 165, 167, 168, 173, 176, 177, 178, 179, 181, 183, 184, 186, 189, 190, 194, 195, 197, 205, 207, 209, 210, 213, 214, 217, 220, 222, 223, 224, 225, 229, 231, 234, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 262, 263, 264, 265, 286, 291, 292, 294, 296, 299, 300, 302, 304, 305, 306, 307, 309, 312, 313, 317, 327, 329, 330, 333, 334, 335, 336, 337, 339, 346, 347, 348, 349, 352, 378, 379, 382, 383, 384, 385, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402, 403, 404, 405, 407, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 437, 438, 446, 448, 449, 450, 452, 454, 455, 456, 457, 460, 461, 477, 478, 479, 542, 545, 547, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 564, 565, 566, 567, 568, 571, 573, 587, 589, 592, 593, 605, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 658, 663, 664, 667, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 687, 688, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 703, 704, 706, 707, 709, 711, 712, 713, 715, 716, 718, 720, 721, 722, 723, 724, 725, 726, 727, 729, 730, 731, 774, 781, 788, 789, 805, 814, 816, 818, 820, 821, 822, 825, 827, 828, 829, 831, 832, 833, 834, 836, 838, 839, 840, 841, 842, 845, 846, 849, 850, 851, 852, 853, 855, 856, 858, 859, 861, 862, 865, 867, 868], "usag": [0, 1, 8, 9, 21, 25, 56, 126, 131, 210, 248, 249, 286, 329, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 689, 690, 700, 707, 710, 815, 821, 823, 842], "use_alternate_stream": 210, "use_cpu_affin": 842, "use_ddp": [210, 213, 867], "use_eta": [419, 420], "use_featur": [146, 169], "use_fp16": 805, "use_index": 299, "use_int64_tensor_s": 816, "use_libxsmm": 331, "use_libxsmm_flag": 331, "use_mm_for_euclid_dist": [428, 549], "use_mm_for_euclid_dist_if_necessari": [428, 549], "use_norm": 412, "use_panda": 168, "use_prefetch_thread": 210, "use_uva": [10, 210, 714], "user": [1, 3, 4, 5, 9, 11, 13, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 140, 145, 156, 159, 161, 163, 173, 180, 181, 210, 214, 215, 216, 219, 220, 234, 239, 240, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 299, 301, 308, 313, 319, 320, 329, 330, 333, 334, 335, 339, 348, 349, 352, 379, 380, 381, 382, 384, 394, 396, 399, 400, 402, 403, 404, 407, 410, 417, 422, 423, 424, 478, 479, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 550, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 576, 577, 636, 637, 642, 643, 644, 645, 652, 653, 658, 668, 669, 673, 683, 688, 692, 693, 694, 695, 696, 697, 698, 699, 701, 704, 707, 712, 713, 714, 716, 719, 721, 726, 727, 730, 731, 748, 751, 756, 766, 767, 770, 771, 783, 789, 790, 792, 798, 805, 810, 811, 813, 814, 815, 816, 826, 827, 829, 830, 831, 832, 833, 842, 845, 855], "user_emb": 382, "user_feat": [727, 730, 731, 767, 770, 771, 811, 813, 814], "user_id": 832, "user_nid": 382, "user_orig_nids_0": 696, "usernam": 21, "userwarn": [145, 177, 178, 179, 687, 734, 774, 819, 839, 851], "user\uac00": 811, "user\uc640": [789, 811], "usr": 819, "usual": [4, 10, 21, 327, 461, 560, 693, 697, 707, 711, 713, 715, 719, 723, 724, 729, 731, 820, 827, 829, 832, 833, 838, 849, 852], "util": [1, 4, 11, 13, 146, 169, 183, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 288, 302, 304, 307, 313, 341, 377, 378, 382, 447, 458, 459, 460, 461, 569, 687, 690, 691, 692, 696, 700, 714, 719, 722, 723, 724, 728, 731, 734, 736, 737, 762, 763, 764, 774, 776, 777, 781, 806, 807, 808, 818, 823, 827, 829, 838, 839, 842, 851, 855, 858], "utransform": 862, "utyp": [125, 126, 382, 550, 637, 717, 730, 760, 770, 803, 813], "uv": [51, 61, 88, 560, 677], "uva": [210, 560, 564], "v": [4, 5, 21, 22, 27, 35, 48, 51, 57, 60, 61, 62, 63, 87, 88, 90, 93, 94, 107, 114, 120, 121, 131, 161, 178, 179, 226, 227, 230, 243, 244, 253, 255, 257, 259, 261, 267, 269, 271, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 296, 316, 329, 333, 339, 340, 347, 386, 390, 396, 397, 399, 400, 402, 403, 407, 410, 412, 413, 415, 416, 476, 477, 502, 503, 559, 575, 623, 624, 625, 626, 627, 636, 637, 645, 651, 664, 677, 699, 702, 703, 704, 706, 707, 708, 717, 724, 725, 729, 730, 731, 743, 746, 747, 748, 750, 751, 752, 756, 760, 764, 765, 769, 770, 771, 784, 787, 788, 789, 791, 792, 794, 798, 803, 808, 809, 812, 813, 814, 819, 822, 828, 836, 837, 849, 851, 855, 858, 861, 862], "v0": 780, "v1": 822, "v100": [14, 721, 805], "v2": 822, "v3": 822, "v_": 851, "v_1": 822, "v_2": 822, "v_a": 694, "v_add_": 5, "v_add_u": 5, "v_attr": 125, "v_b": [383, 415, 461, 694, 850], "v_div_": 5, "v_div_u": 5, "v_dot_": 5, "v_dot_u": 5, "v_fea": [399, 407, 410, 416], "v_feat": [396, 397, 400, 402, 403, 413], "v_i": [400, 730, 770, 813, 852, 855, 862], "v_j": [861, 862], "v_k": [855, 862], "v_max": 858, "v_mul_": 5, "v_mul_u": 5, "v_p": 429, "v_proj": 819, "v_sub_": 5, "v_sub_u": 5, "vacabulari": 184, "vaganova": 850, "val": [101, 102, 134, 137, 138, 139, 140, 149, 155, 168, 171, 180, 182, 185, 186, 187, 188, 192, 193, 326, 505, 570, 579, 589, 590, 594, 596, 599, 600, 601, 602, 603, 607, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 624, 628, 629, 631, 632, 817, 818, 819, 820, 822, 832, 833, 834, 836, 846, 867], "val1": [618, 630], "val2": [618, 630], "val_acc": [817, 818, 820, 834, 836, 850, 867], "val_edg": [139, 157, 158, 191, 846], "val_edge_mask": [157, 158, 191], "val_g": [157, 158, 191], "val_idx": [138, 140, 819], "val_lik": 822, "val_load": 867, "val_loss": 850, "val_mask": [25, 137, 140, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 171, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 688, 690, 731, 736, 771, 776, 814, 817, 818, 820, 834, 836, 839, 845], "val_metr": 819, "val_nid": 845, "val_set": [157, 158, 191, 867], "val_siz": [161, 162, 163, 602, 610, 614, 615, 616, 617, 622, 624, 628, 819, 822], "valid": [5, 25, 91, 125, 138, 139, 140, 147, 150, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173, 174, 175, 176, 181, 191, 192, 194, 195, 197, 198, 205, 207, 248, 291, 308, 313, 448, 683, 689, 693, 696, 715, 727, 731, 735, 775, 811, 814, 817, 818, 826, 827, 829, 831, 832, 833, 834, 836, 837, 839, 850, 852, 855, 858, 862, 867, 868], "valid_data": [164, 166], "valid_dataload": [819, 829, 845], "valid_it": 862, "valid_label": [689, 735, 775], "valid_load": [689, 735, 775], "valid_mask": [173, 731, 771, 814], "valid_nid": 845, "valid_r": 173, "valid_ratio": 173, "valid_set": [829, 868], "validation_set": [308, 313, 829, 831, 832, 833, 868], "valu": [4, 9, 12, 22, 23, 30, 31, 34, 51, 57, 58, 61, 62, 63, 73, 88, 89, 93, 113, 114, 115, 117, 120, 121, 126, 131, 137, 147, 148, 156, 164, 174, 178, 179, 183, 184, 197, 205, 210, 214, 216, 219, 220, 239, 240, 241, 243, 244, 245, 249, 286, 287, 291, 293, 294, 295, 296, 297, 302, 304, 307, 309, 314, 318, 324, 327, 328, 329, 330, 334, 335, 340, 348, 352, 378, 380, 382, 384, 388, 389, 390, 391, 393, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 413, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 431, 436, 446, 448, 449, 457, 476, 477, 478, 481, 483, 486, 488, 505, 507, 509, 513, 515, 521, 523, 527, 529, 542, 543, 552, 558, 563, 565, 572, 579, 582, 583, 584, 585, 587, 589, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 653, 667, 669, 671, 686, 688, 695, 696, 721, 724, 725, 728, 773, 818, 819, 822, 827, 829, 832, 833, 839, 849, 851, 852, 855, 861, 862, 868], "valueerror": [694, 829], "valueobject": 22, "van": 855, "vanilla": [819, 862], "vanillar": 819, "vanish": 411, "var": [392, 414, 827, 829], "vare": 186, "varepsilon": [408, 862], "vari": [688, 723, 724, 818, 832, 833], "variabl": [21, 244, 477, 695, 816, 835, 842, 851], "varianc": [392, 414], "variant": [214, 244, 477, 565, 849, 852], "variat": [214, 565, 851], "varieti": [700, 858, 862], "variou": [4, 14, 221, 414, 693, 719, 822, 832, 833, 835, 838, 861], "vast": 835, "vaswani": 819, "vcpu": 14, "ve": 822, "vec": [150, 397, 402, 403, 818, 852], "vector": [128, 129, 159, 214, 216, 219, 231, 238, 239, 348, 349, 378, 379, 382, 392, 397, 400, 407, 413, 420, 434, 435, 447, 572, 596, 599, 600, 601, 603, 610, 611, 612, 614, 615, 616, 617, 621, 623, 624, 625, 626, 627, 628, 635, 671, 688, 696, 701, 727, 817, 818, 820, 822, 834, 835, 837, 838, 845, 849, 852, 855, 858, 861, 862, 863, 865], "vector_v": 822, "venu": 651, "verbos": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 425, 686, 690, 733, 736, 773, 776], "veri": [4, 10, 22, 122, 184, 693, 700, 713, 715, 716, 718, 727, 729, 730, 845, 846, 855, 859, 862, 865], "verifi": [21, 130, 200, 637, 724, 851], "verify_ssl": 200, "versa": [851, 852], "versatil": 815, "versin": 808, "version": [4, 10, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 216, 244, 396, 420, 477, 567, 688, 696, 727, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 822, 823, 827, 829, 832, 833, 849, 858, 861, 868], "vert": [411, 433, 454, 458], "vertex": [6, 214, 238, 302, 349, 407, 565], "vertic": [214, 302, 348, 565, 699, 851], "vh": 137, "via": [5, 11, 22, 41, 93, 113, 122, 214, 216, 233, 296, 302, 308, 389, 390, 391, 404, 424, 426, 459, 550, 551, 565, 569, 688, 692, 699, 701, 712, 713, 714, 715, 718, 721, 730, 815, 827, 829, 832, 833, 835, 836, 837, 838, 842, 845], "viabl": 696, "vibrat": [178, 179], "vice": [851, 852], "vid": [58, 563], "video": 137, "view": [4, 9, 43, 44, 46, 51, 74, 77, 103, 104, 245, 330, 334, 335, 460, 478, 542, 558, 563, 564, 576, 577, 610, 624, 675, 676, 678, 680, 681, 728, 730, 770, 802, 813, 819, 827, 850, 852, 855, 858, 861, 862], "viewbackward": [386, 434], "viewbackward0": 389, "virtual": [10, 210, 448, 714], "visibl": [116, 130, 333, 339, 559, 636, 645], "vision": [819, 835, 863, 865], "visit": [0, 22, 217, 230, 560], "visitattr": 22, "visitor": 22, "visual": [816, 818, 855, 861], "viz_idx": 862, "vocab": [184, 855], "vocab_fil": 184, "vocab_s": [184, 855, 862], "vocabulari": [174, 184, 855], "void": 22, "vol": [239, 349], "volta": [9, 707, 792], "volum": [239, 349], "vote": 161, "vs2019": 816, "vtype": [125, 126, 382, 550, 563, 637, 717, 730, 760, 770, 803, 813], "w": [5, 21, 27, 28, 60, 87, 114, 115, 118, 119, 122, 126, 167, 249, 330, 334, 335, 339, 378, 382, 387, 388, 391, 395, 402, 403, 404, 410, 412, 415, 416, 421, 422, 542, 553, 554, 558, 652, 658, 659, 660, 661, 664, 666, 669, 670, 672, 673, 683, 701, 708, 713, 717, 721, 724, 727, 728, 745, 752, 757, 760, 764, 767, 768, 781, 786, 794, 799, 803, 805, 808, 811, 817, 818, 820, 822, 832, 833, 836, 849, 850, 852, 855, 858], "w1": [411, 820, 837], "w2": [820, 837], "w_": [403, 409, 706, 750, 791, 849, 862], "w_0": [415, 850], "w_comp": 850, "w_h": 862, "w_i": 396, "w_iou": 855, "w_j": 396, "w_k": [407, 862], "w_l": [708, 752, 794], "w_new": 5, "w_o": [461, 862], "w_q": 862, "w_r": [415, 708, 752, 794, 850], "w_t": 383, "w_v": 862, "wa": [9, 141, 158, 162, 182, 186, 191, 386, 438, 703, 818, 845, 850, 855, 862], "wai": [1, 4, 5, 126, 209, 231, 238, 249, 348, 349, 392, 397, 414, 457, 660, 661, 666, 673, 686, 690, 693, 703, 704, 711, 713, 715, 717, 722, 730, 820, 822, 835, 836, 845, 846, 852, 862], "wait": 21, "walk": [13, 217, 378, 382, 410, 552, 560, 562, 563, 564, 667, 670, 845, 846], "walk_length": [378, 562], "walkthrough": [717, 822], "wang": [849, 851, 852, 855], "want": [4, 21, 22, 41, 210, 214, 216, 217, 219, 244, 289, 299, 477, 565, 687, 688, 693, 696, 699, 704, 710, 712, 713, 716, 718, 719, 727, 728, 730, 731, 784, 827, 829, 835, 837, 839, 845, 852], "warn": [166, 839], "watch": [43, 861], "wayn": 167, "wb": 846, "wc": 411, "we": [4, 6, 9, 14, 21, 22, 27, 28, 31, 41, 45, 68, 79, 82, 105, 133, 137, 144, 171, 179, 180, 181, 182, 188, 207, 210, 220, 233, 239, 240, 244, 313, 334, 335, 336, 348, 349, 352, 382, 383, 386, 393, 394, 395, 404, 410, 415, 427, 429, 476, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 565, 571, 576, 577, 642, 688, 692, 693, 694, 695, 696, 704, 711, 712, 713, 714, 715, 718, 719, 720, 721, 722, 726, 727, 730, 731, 780, 815, 816, 817, 818, 819, 820, 822, 823, 827, 829, 832, 833, 836, 837, 838, 842, 845, 846, 849, 850, 851, 852, 858, 861, 862, 867, 868], "web": [132, 155, 187, 193, 560, 666], "webkb": [155, 187, 193], "websit": [145, 167, 180, 690, 736, 776, 816], "wedg": 243, "week": 161, "weight": [5, 6, 21, 118, 119, 120, 125, 126, 145, 244, 248, 249, 296, 302, 307, 342, 343, 344, 345, 352, 378, 379, 380, 382, 383, 385, 388, 390, 395, 397, 400, 401, 402, 403, 404, 405, 407, 410, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 438, 446, 459, 461, 477, 552, 553, 554, 560, 565, 566, 568, 633, 634, 659, 660, 661, 666, 667, 670, 695, 699, 700, 701, 709, 716, 720, 723, 726, 744, 745, 753, 759, 763, 781, 785, 786, 795, 802, 807, 817, 818, 820, 822, 836, 839, 849, 850, 852, 855, 858, 861, 862], "weight1": 781, "weight2": 781, "weight_and_sum": 438, "weight_anim": 861, "weight_column": 560, "weight_decai": [720, 721, 805, 817, 850, 855], "weight_nam": [118, 119], "weightedsageconv": 836, "weights_onli": [827, 829, 832, 833], "weihua916": 165, "welcom": [21, 722, 862], "well": [4, 7, 21, 56, 96, 125, 126, 130, 173, 220, 235, 239, 289, 556, 637, 686, 687, 688, 690, 696, 697, 702, 704, 711, 713, 715, 716, 726, 727, 729, 730, 789, 811, 820, 823, 828, 835, 839, 842, 845, 849, 852, 861, 862], "were": [137, 149, 180, 182, 185, 717, 816, 858, 862], "west": [690, 736, 776], "wh": [422, 424, 709, 753, 795], "wh_": [709, 753, 795], "what": [9, 21, 22, 239, 569, 719, 730, 731, 820, 822, 827, 828, 849, 855, 858, 862], "whatev": 21, "wheel": [172, 817, 818, 819, 820, 822, 827, 829, 832, 833], "when": [1, 4, 10, 14, 20, 21, 22, 31, 36, 41, 48, 51, 56, 57, 68, 70, 80, 89, 125, 130, 146, 157, 158, 168, 169, 173, 191, 200, 210, 213, 214, 221, 222, 223, 224, 225, 231, 234, 238, 239, 240, 241, 245, 246, 248, 286, 289, 292, 296, 300, 309, 313, 330, 334, 335, 336, 337, 348, 349, 383, 384, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 402, 403, 404, 407, 409, 410, 415, 417, 420, 424, 426, 427, 428, 429, 431, 478, 479, 542, 549, 559, 561, 564, 565, 566, 567, 568, 571, 572, 635, 637, 643, 645, 663, 671, 688, 693, 694, 695, 696, 700, 704, 713, 715, 716, 718, 721, 724, 725, 729, 820, 822, 829, 832, 833, 837, 838, 845, 849, 851, 858, 862], "whenev": [707, 837], "whenver": 858, "where": [4, 9, 10, 14, 21, 26, 34, 45, 48, 53, 57, 58, 62, 63, 73, 79, 82, 100, 105, 120, 128, 129, 130, 131, 135, 136, 157, 159, 162, 171, 186, 210, 214, 215, 216, 219, 226, 227, 239, 242, 243, 249, 296, 304, 309, 316, 318, 327, 328, 329, 332, 333, 336, 337, 338, 339, 340, 347, 352, 383, 384, 385, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 476, 501, 502, 503, 549, 552, 560, 561, 562, 564, 567, 571, 572, 615, 616, 618, 628, 635, 647, 648, 660, 661, 664, 666, 669, 670, 671, 675, 676, 678, 680, 681, 682, 688, 690, 694, 695, 696, 697, 699, 708, 711, 714, 725, 727, 728, 729, 730, 731, 793, 817, 818, 819, 820, 822, 827, 828, 829, 832, 833, 834, 835, 836, 837, 849, 850, 851, 852, 855, 858, 862, 867], "wherea": [851, 852], "whether": [4, 9, 10, 21, 48, 53, 54, 57, 58, 62, 63, 65, 66, 68, 117, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 210, 213, 214, 216, 219, 220, 226, 233, 235, 237, 239, 240, 241, 245, 286, 296, 297, 302, 304, 307, 308, 309, 331, 339, 341, 347, 348, 349, 383, 392, 396, 397, 399, 400, 402, 403, 404, 408, 412, 414, 415, 425, 428, 431, 448, 454, 459, 478, 549, 561, 565, 566, 567, 568, 647, 648, 684, 686, 691, 695, 696, 717, 718, 727, 730, 773, 777, 822, 831, 832, 833, 834, 837, 839, 851, 858, 862], "which": [0, 1, 4, 9, 10, 20, 21, 22, 32, 36, 41, 42, 51, 56, 61, 88, 92, 116, 120, 122, 130, 131, 140, 143, 146, 148, 158, 161, 162, 163, 169, 171, 178, 179, 180, 182, 183, 186, 188, 189, 190, 195, 197, 205, 210, 211, 212, 217, 219, 222, 223, 224, 225, 230, 235, 239, 243, 244, 286, 288, 291, 292, 296, 298, 299, 302, 305, 307, 308, 309, 313, 316, 329, 330, 333, 334, 335, 339, 340, 348, 352, 380, 383, 384, 386, 387, 389, 390, 391, 392, 394, 396, 399, 400, 402, 403, 404, 407, 410, 413, 415, 417, 421, 423, 425, 446, 447, 448, 449, 452, 455, 456, 460, 476, 477, 478, 542, 543, 550, 551, 558, 559, 560, 561, 562, 564, 567, 572, 576, 577, 614, 621, 628, 635, 636, 637, 642, 645, 647, 648, 651, 653, 658, 661, 666, 669, 670, 671, 675, 678, 683, 687, 688, 690, 692, 693, 695, 696, 697, 700, 701, 702, 703, 707, 708, 709, 712, 713, 714, 715, 716, 717, 718, 719, 721, 724, 725, 727, 728, 731, 795, 815, 816, 817, 822, 826, 827, 828, 829, 832, 833, 834, 836, 837, 842, 845, 851, 852, 855, 858, 862, 867], "while": [5, 9, 22, 68, 73, 92, 114, 115, 147, 179, 197, 205, 210, 214, 239, 296, 308, 317, 394, 395, 410, 421, 422, 423, 424, 425, 426, 448, 565, 567, 618, 693, 694, 695, 696, 700, 708, 712, 721, 729, 820, 823, 827, 829, 845, 851, 852, 858], "whitespac": 695, "whl": 822, "who": [21, 145, 159, 692, 711, 815, 845], "whole": [173, 210, 239, 669, 696, 707, 714, 716, 720, 724, 816, 829, 851, 862], "whom": 145, "whose": [4, 10, 54, 116, 118, 119, 121, 125, 126, 131, 221, 239, 241, 329, 333, 336, 380, 421, 478, 479, 549, 561, 576, 577, 636, 659, 660, 661, 662, 666, 696, 711, 820, 851], "why": [22, 828, 852], "wi": 411, "wide": [1, 433, 688, 731, 834], "width": [851, 861], "wiki": [192, 845], "wikic": 192, "wikipedia": [134, 149, 182, 185, 192, 581, 583, 584, 591, 614, 615, 616, 835], "wildcard": 26, "win": [116, 636, 645], "window": [183, 207, 842], "window_s": [378, 382], "wisconsin": 193, "wise": [4, 5, 13, 73, 113, 219, 220, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 387, 453, 553, 554, 574, 575, 602, 622, 647, 648, 694, 706, 707, 709, 780, 791, 795, 819, 837, 839, 852, 862], "wish": [21, 117, 130, 711, 713, 718, 727, 815], "with_label": [851, 855, 858], "within": [4, 20, 21, 161, 209, 286, 292, 296, 299, 309, 348, 351, 378, 382, 421, 422, 423, 424, 425, 426, 428, 543, 549, 694, 709, 725, 801, 820, 851, 858, 862], "without": [5, 6, 21, 27, 28, 114, 115, 116, 131, 240, 241, 244, 245, 286, 292, 296, 299, 302, 307, 321, 329, 410, 427, 429, 477, 550, 551, 554, 557, 565, 566, 567, 614, 615, 616, 628, 645, 673, 687, 688, 704, 707, 721, 729, 789, 828, 851, 855], "wm": 645, "wmt14": 862, "wn18": 191, "word": [21, 108, 135, 136, 137, 155, 180, 182, 184, 187, 193, 210, 213, 244, 380, 477, 642, 693, 834, 855, 858, 862], "word2vec": 159, "wordid": 855, "wordnet": 191, "work": [3, 4, 8, 9, 11, 21, 116, 118, 119, 188, 214, 216, 219, 290, 292, 384, 396, 399, 400, 402, 403, 404, 407, 410, 417, 457, 560, 636, 660, 661, 662, 663, 664, 666, 667, 670, 685, 686, 697, 699, 711, 712, 714, 715, 726, 727, 731, 835, 837, 839, 842, 851, 856, 858, 862, 865, 867, 868], "workaround": 852, "worker": [4, 188, 234, 290, 693, 697, 714, 739, 779, 782, 800, 842], "workflow": [834, 837], "workload": [13, 231, 238, 692, 696, 711, 724, 822, 842, 867], "workspac": [697, 741, 781, 782, 845], "workspace\ub294": 782, "workspace\uc758": 782, "world": [162, 164, 292, 696, 781, 828, 835, 858, 862], "world_siz": [867, 868], "would": [9, 21, 26, 89, 130, 131, 210, 214, 216, 219, 318, 347, 388, 396, 397, 400, 402, 403, 413, 416, 417, 435, 560, 565, 637, 647, 648, 708, 711, 713, 715, 717, 726, 727, 828, 836, 837, 839, 855, 858, 862], "wouldn": 858, "wrap": [131, 210, 211, 212, 297, 716, 719, 721, 805, 862, 867, 868], "wrap_gener": [827, 829], "wrap_next": [827, 829], "wrapper": [8, 21, 22, 293, 300, 301, 314, 868], "writabl": 839, "write": [4, 21, 22, 308, 315, 380, 569, 645, 654, 693, 696, 706, 712, 724, 727, 781, 817, 820, 825, 832, 833, 834, 837, 839, 840, 841, 851, 855, 858], "write_t": 696, "writeback": 645, "writeback_map": [111, 645], "writer": 134, "written": [9, 707, 821, 827, 829, 851, 862], "wrong": [21, 417], "wu": 749, "wv": 862, "www": [162, 749, 817, 818, 819, 820, 827, 829, 836, 842], "x": [5, 6, 9, 21, 34, 35, 93, 94, 100, 113, 122, 132, 133, 144, 170, 183, 184, 245, 336, 346, 378, 383, 385, 387, 389, 390, 391, 392, 398, 411, 412, 414, 417, 418, 420, 427, 428, 429, 430, 431, 432, 437, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 549, 571, 611, 618, 629, 669, 670, 683, 696, 701, 702, 713, 715, 716, 718, 720, 721, 727, 730, 745, 746, 756, 757, 758, 759, 761, 767, 770, 786, 787, 798, 799, 801, 802, 804, 805, 811, 813, 816, 817, 818, 819, 820, 822, 827, 829, 835, 845, 846, 849, 855, 858, 861, 862, 868], "x1": [336, 571, 610, 621, 822], "x2": [336, 571, 610, 621, 822], "x64": 816, "x86_64": 842, "x_": [336, 411, 427, 429, 502, 571, 574, 822], "x_0": 411, "x_1": [411, 822], "x_2": [411, 822], "x_c": 411, "x_dst": [380, 758, 801], "x_e": [503, 574], "x_i": [398, 407, 409, 411, 433, 669, 822, 862], "x_j": [398, 407, 822, 855, 862], "x_sign": 818, "x_size": 855, "x_src": 380, "x_type": 383, "x_u": [502, 503, 575, 706, 750, 791], "x_uv": 858, "x_v": [502, 503, 575, 706, 750, 791], "xavier": [379, 400, 402, 403, 416, 417], "xavier_normal_": 852, "xavier_uniform_": [10, 423, 425, 457, 720, 723, 763, 807, 850], "xcode": 816, "xeon": 721, "xi": [244, 477, 818], "xlabel": 861, "xrightarrow": 651, "xtick": 861, "xuv": 858, "xv1": 822, "xv2": 822, "xw_t": 383, "xxx": [0, 695, 740, 781], "xxx_edg": [695, 781], "xxx_node": [695, 781], "xxx_note": 781, "xxx_stat": [695, 781], "xxx\ub294": 781, "y": [9, 21, 120, 184, 243, 244, 340, 378, 383, 421, 422, 446, 449, 459, 476, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 701, 715, 716, 720, 721, 727, 745, 756, 758, 767, 786, 798, 801, 805, 811, 816, 818, 820, 822, 827, 835, 837, 855, 861, 868], "y1": 9, "y_": [244, 336, 427, 429, 477, 571, 730, 770, 813, 837], "y_dst": 380, "y_hat": [713, 720, 819, 820, 868], "y_pred": 819, "y_true": 819, "y_u": [243, 340, 476], "y_v": [120, 243, 340, 476], "yaml": [148, 308, 313, 830], "yaml_cont": [832, 833], "yaml_data": 308, "yandex": 180, "ye": [855, 862], "year": [696, 699], "yellow": 828, "yelp": [162, 163, 194], "yet": [4, 714, 842], "yield": [220, 289, 401, 411, 642, 643, 713, 718, 827, 828, 829, 838, 852], "ying": 560, "yingtongd": 162, "yiran": 749, "yizhou": 72, "ylabel": 861, "you": [6, 9, 14, 21, 22, 26, 89, 114, 118, 119, 130, 131, 186, 210, 213, 214, 216, 217, 219, 286, 289, 292, 329, 411, 417, 564, 565, 566, 567, 637, 687, 688, 701, 707, 712, 713, 714, 716, 717, 718, 726, 727, 730, 731, 734, 774, 815, 816, 818, 821, 822, 824, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 842, 845, 846, 850, 851, 852, 853, 855, 858, 859, 861, 862, 865, 867, 868], "your": [6, 8, 9, 21, 118, 119, 145, 164, 166, 175, 177, 178, 179, 183, 184, 690, 693, 707, 711, 712, 714, 715, 716, 717, 722, 726, 727, 731, 776, 825, 828, 829, 834, 837, 840, 841, 842, 858, 862], "yu": [849, 850, 851, 858], "yum": 816, "yyi": 0, "z": [9, 178, 388, 818, 851, 852, 862], "z2": 852, "z_": 352, "z_e": 574, "z_i": [386, 388, 852], "z_j": [386, 852], "z_list": 851, "z_v": [575, 851], "zachari": [167, 839], "zero": [4, 27, 28, 30, 43, 46, 70, 74, 89, 93, 103, 108, 113, 114, 115, 118, 119, 120, 122, 125, 130, 150, 178, 179, 210, 234, 239, 248, 296, 309, 323, 337, 346, 384, 394, 396, 399, 400, 402, 403, 404, 407, 409, 410, 413, 417, 447, 451, 453, 457, 458, 459, 481, 482, 483, 484, 486, 487, 488, 489, 505, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 559, 566, 567, 579, 580, 583, 584, 595, 596, 597, 599, 600, 601, 602, 603, 608, 610, 615, 616, 617, 618, 622, 624, 628, 630, 632, 635, 637, 643, 644, 645, 647, 648, 663, 671, 683, 688, 693, 695, 696, 704, 714, 721, 724, 726, 727, 728, 739, 748, 756, 758, 766, 767, 779, 781, 789, 798, 801, 810, 811, 818, 822, 837, 839, 845, 851, 855, 858, 861, 862], "zero_grad": [378, 382, 421, 422, 423, 424, 425, 426, 692, 712, 713, 716, 718, 720, 721, 727, 729, 730, 731, 738, 756, 757, 759, 761, 767, 769, 770, 771, 778, 798, 799, 802, 804, 805, 811, 812, 813, 814, 817, 818, 819, 820, 827, 829, 834, 836, 837, 838, 845, 846, 849, 850, 851, 852, 855, 867, 868], "zero_initi": 858, "zeros_lik": [756, 798, 846], "zhang": [749, 849, 850, 851, 852, 855, 858, 861, 862], "zhao": [855, 861], "zheng": [849, 850, 851, 852, 855, 858, 861, 862], "zhiyu": 749, "zhiyuchen": 749, "zhjwy9343": 749, "zhou": [861, 862], "zihao": [855, 862], "zinc": 195, "zip": [165, 168, 172, 186, 687, 690, 715, 716, 720, 736, 774, 776, 817, 818, 820, 827, 829, 834, 835, 836, 837, 838, 839, 842, 845, 846, 849, 850, 851, 852, 855, 858, 861, 862, 867, 868], "zpve": [178, 179], "\u4e00\u4e2a\u4e8c\u5206\u56fe": 748, "\u4e00\u4e2a\u4ec5\u5e73\u8861\u56fe\u4e2d\u8282\u70b9": 740, "\u4e00\u4e2a\u53ef\u9009\u9879\u662f\u7528\u6237\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u793a\u4f8b\u68c0\u67e5\u4e0b\u8f7d\u540e\u6587\u4ef6\u7684sha": 734, "\u4e00\u4e2a\u540c\u6784\u56fe": 748, "\u4e00\u4e2a\u56fe\u6279\u6b21\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u5f20\u5927\u56fe": 769, "\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e0c\u671b": 770, "\u4e00\u4e2a\u5b50\u56fe\u5bf9\u5e94\u4e00\u79cd\u5173\u7cfb": 748, "\u4e00\u4e2a\u5e94\u7528\u4e8e": 752, "\u4e00\u4e2a\u5f02\u6784\u56fe\u7531\u4e00\u7cfb\u5217\u5b50\u56fe\u6784\u6210": 748, "\u4e00\u4e2a\u5f02\u6784\u56fe\u793a\u4f8b": 748, "\u4e00\u4e2a\u6279\u6b21\u4e2d\u4e0d\u540c\u7684\u56fe\u662f\u5b8c\u5168\u5206\u5f00\u7684": 769, "\u4e00\u4e2a\u662f\u8fb9\u7684\u96c6\u5408": 743, "\u4e00\u4e2a\u6709\u6548\u7684\u56fe\u540d\u79f0\u5e94\u8be5\u4ec5\u5305\u542b\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf": 740, "\u4e00\u4e2a\u6b63\u6837\u672c\u56fe": 759, "\u4e00\u4e2a\u6d88\u606f\u4f20\u9012\u8fd0\u7b97\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u51fd\u6570": 768, "\u4e00\u4e2a\u7528\u4e8e\u6307\u5b9a": 751, "\u4e00\u4e2a\u7528\u4e8e\u6307\u793a\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7684\u5b57\u6bb5\u540d": 751, "\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5d4c\u5165": 739, "\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b": 752, "\u4e00\u4e2a\u805a\u5408\u51fd\u6570\u548c\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570": 751, "\u4e00\u4e2a\u8d1f\u6837\u672c\u56fe": 759, "\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u805a\u5408\u64cd\u4f5c\u5305\u62ec": 751, "\u4e00\u4e9b\u6a21\u5757\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u805a\u5408\u51fd\u6570": 763, "\u4e00\u53f0\u673a\u5668\u53ef\u80fd\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b": 738, "\u4e00\u662f\u8282\u70b9\u7684\u96c6\u5408": 743, "\u4e00\u6761\u8fb9": 743, "\u4e00\u6761\u94fe\u8def0": 744, "\u4e00\u6837": 739, "\u4e00\u6b21\u6027\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684": 767, "\u4e00\u76f4\u5230\u8f93\u5165": 755, "\u4e00\u79cd\u5b58\u50a8\u5f02\u6784\u56fe\u7684\u5e38\u89c1\u65b9\u6cd5\u662f\u5728\u4e0d\u540c\u7684csv\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 748, "\u4e00\u822c\u6765\u8bf4": 751, "\u4e00\u822c\u6d41\u7a0b\u662f": 769, "\u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u591a\u5c42gnn\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 767, "\u4e0a\u56fe\u4e2d\u9690\u53bb\u4e86\u548c\u8ba1\u7b97\u4e0d\u76f8\u5173\u7684\u8fb9": 756, "\u4e0a\u7684\u5206\u5e03\u5f0f\u90bb\u5c45\u91c7\u6837\u63d0\u4f9b\u4e86": 739, "\u4e0a\u7684\u7279\u5f81\u4e3a": 750, "\u4e0a\u7684\u7684\u7279\u5f81\u4e3a": 750, "\u4e0a\u7684\u8282\u70b9": 756, "\u4e0a\u7684\u8bad\u7ec3\u53ea\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u6a21\u578b\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 771, "\u4e0a\u8c03\u7528\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570": 739, "\u4e0a\u8fd0\u884c": 739, "\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684for\u5faa\u73af\u4e3a\u5904\u7406\u5f02\u6784\u56fe\u8ba1\u7b97\u7684\u4e3b\u8981\u903b\u8f91": 765, "\u4e0a\u8ff0\u51fd\u6570\u7684\u6570\u5b66\u516c\u5f0f\u4e3a": 751, "\u4e0a\u9762\u4ee3\u7801\u91cc\u7684": 763, "\u4e0a\u9762\u7684dataloader\u4e00\u6b21\u8fed\u4ee3\u4f1a\u751f\u6210\u4e09\u4e2a\u8f93\u51fa": 761, "\u4e0a\u9762\u7684dgl": 761, "\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230": 734, "\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4e00\u4e2a": 734, "\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u4e86\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408\u7684\u8ba1\u7b97": 764, "\u4e0b\u4f8b\u7684\u8f93\u51fa\u8282\u70b9\u5305\u542b\u4e86\u6ca1\u6709\u5165\u8fb9\u7684\u5b64\u7acb\u8282\u70b9": 756, "\u4e0b\u56fe\u663e\u793a\u4e86\u4ee5\u8282\u70b98\u4e3a\u79cd\u5b50\u8282\u70b9\u65f6\u7b2c\u4e8c\u4e2agnn\u5c42\u6240\u9700\u7684\u5757": 756, "\u4e0b\u56fe\u663e\u793a\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\u53ca\u5b83\u4eec\u95f4\u7684\u76f8\u4e92\u4f5c\u7528": 738, "\u4e0b\u6587\u5c55\u793a\u4e86sageconv\u793a\u4f8b\u4e2d\u7684": 764, "\u4e0b\u6587\u662f\u5728\u4e00\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 770, "\u4e0b\u6587\u7ee7\u7eed\u4f7f\u7528\u4e0a\u8ff0\u7684\u4f8b\u5b50": 756, "\u4e0b\u7684\u76ee\u5f55": 734, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": [732, 749], "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e\u96c6\u7684url": 733, "\u4e0b\u8f7d\u6587\u4ef6": 734, "\u4e0b\u9762\u4e2d\u4f7f\u7528": 736, "\u4e0b\u9762\u4ee5": 736, "\u4e0b\u9762\u4f7f\u7528": 736, "\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684": 736, "\u4e0b\u9762\u5c55\u793a\u4e86\u5728\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684\u793a\u4f8b": 741, "\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50": 748, "\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u901a\u8fc7\u5bf9\u8282\u70b9\u7279\u5f81\u964d\u7ef4\u6765\u51cf\u5c11\u6d88\u606f\u7ef4\u5ea6\u7684\u793a\u4f8b": 752, "\u4e0b\u9762\u662f\u4f7f\u7528\u70b9\u79ef\u8ba1\u7b97\u8fb9\u5f97\u5206\u7684\u4f8b\u5b50": 770, "\u4e0b\u9762\u662f\u901a\u8fc7\u4f7f\u7528\u51c6\u786e\u6027\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u4e00\u4e2a\u4f8b\u5b50": 771, "\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u4e13\u95e8\u7528\u4e8e\u5728\u90bb\u5c45\u91c7\u6837\u65f6\u5220\u9664\u5c0f\u6279\u6b21\u7684\u4e00\u4e9b\u8fb9\u548c\u5b83\u4eec\u7684\u53cd\u5411\u8fb9": 757, "\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 771, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f": 760, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u5728dgl\u4e2d\u521b\u5efa\u5f02\u6784\u56fe\u7684\u793a\u4f8b": 748, "\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4f7f\u7528\u4e86": 747, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b": 733, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e00\u4e2a\u62e5\u6709": 767, "\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe": 770, "\u4e0b\u9762\u7684\u52a8\u753b\u5c55\u793a\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b": 758, "\u4e0b\u9762\u7684\u6d41\u7a0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6a21\u7248\u7684\u5de5\u4f5c\u65b9\u5f0f": 733, "\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u4fdd\u5b58\u548c\u8bfb\u53d6\u56fe\u548c\u6570\u636e\u96c6\u4fe1\u606f\u7684\u5217\u8868": 737, "\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8bad\u7ec3\u96c6\u62c6\u5206": 739, "\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5\u7684\u793a\u4f8b": 759, "\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e": [759, 761], "\u4e0d\u540c\u540d\u79f0\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u5f62\u72b6": 745, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u5355\u72ec\u7684id": 748, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e38\u5e38\u5177\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u5c5e\u6027": 753, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6216\u5927\u5c0f": 748, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6709\u5355\u72ec\u7684id": 748, "\u4e0d\u5fc5\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5": 748, "\u4e0d\u662fpytorch\u7684nn\u6a21\u5757": 739, "\u4e0d\u80fd\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u5b50\u96c6": 745, "\u4e0d\u8fc7": 747, "\u4e0d\u8fc7\u5927\u90e8\u5206\u7684dgl": 747, "\u4e0e": [738, 739], "\u4e0e\u4e0d\u5b58\u5728\u7684\u8fb9": 759, "\u4e0e\u4e4b\u524d\u7684\u4efb\u52a1\u7c7b\u4f3c": 769, "\u4e0e\u540c\u6784\u56fe\u7684\u60c5\u51b5\u7c7b\u4f3c": 748, "\u4e0e\u5f02\u6784\u56fe\u76f8\u5173\u8054\u7684": 748, "\u4e0e\u6574\u56fe\u5206\u7c7b\u4e0d\u540c": 736, "\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92": 738, "\u4e0e\u6b64\u540c\u65f6": 740, "\u4e0e\u8fb9\u7279\u5f81": 751, "\u4e0e\u901a\u5e38\u4ee5\u5f20\u91cf\u4e3a\u53c2\u6570\u7684pytorch": 764, "\u4e0e\u91c7\u6837\u5668\u8fdb\u884c\u4ea4\u4e92\u4ee5\u83b7\u5f97\u5c0f\u6279\u6b21\u6570\u636e": 738, "\u4e0e\u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5668\u8fde\u63a5\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u5b83\u4eec": 739, "\u4e14\u53ea\u8003\u8651\u5e73\u5747\u805a\u5408\u51fd\u6570\u7684\u60c5\u51b5": 760, "\u4e14\u663e\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u5b58\u50a8\u7684\u8bbe\u5907\u4fe1\u606f": 747, "\u4e24\u4e2a\u51fd\u6570\u5728\u53d8\u6362\u540e\u7684\u56fe\u4e0a\u91cd\u65b0\u52a0\u5165\u6279\u6b21\u4fe1\u606f": 769, "\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684numpy\u6570\u7ec4\u4f1a\u5f88\u5927": 740, "\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u8fb9\u7684\u8054\u7cfb": 757, "\u4e24\u540d\u4f5c\u8005\u53ef\u4ee5\u5728\u4e0d\u540c\u5e74\u4efd\u5171\u540c\u7f72\u540d\u6587\u7ae0": 743, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b": 767, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 767, "\u4e2a\u4eba\u59d3\u540d": 749, "\u4e2a\u4eba\u94fe\u63a5": 749, "\u4e2a\u5bf9\u5e94\u7684\u8d1f\u91c7\u6837\u6837\u672c": 770, "\u4e2a\u8282\u70b9\u6216\u8fb9": 747, "\u4e2a\u8282\u70b9\u7684\u56fe\u4e0a\u8fd0\u884c\u7684": 755, "\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 759, "\u4e2d": [734, 736, 737, 743, 744, 748, 761], "\u4e2d\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u6574\u56fe\u4e0a\u8bad\u7ec3\u4e00\u4e2a2\u5c42\u7684rgcn\u6a21\u578b": 761, "\u4e2d\u4ecb\u7ecd\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 766, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u65b9\u6cd5\u548c": 766, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236": 771, "\u4e2d\u521b\u5efa": 739, "\u4e2d\u53ef\u4ee5\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801": 736, "\u4e2d\u5904\u7406\u6bcf\u4e2a\u6570\u636e\u5b9e\u4f8b\u662f\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5": 737, "\u4e2d\u5b58\u50a8\u7ed3\u679c": 751, "\u4e2d\u5b9a\u4e49\u7684": 767, "\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u96c6\u7684\u57fa\u7c7b": 733, "\u4e2d\u5b9e\u73b0\u4e86\u5e38\u7528\u7684\u6d88\u606f\u51fd\u6570\u548c\u805a\u5408\u51fd\u6570\u4f5c\u4e3a": 751, "\u4e2d\u5df2\u7ecf\u6709\u4e86": 771, "\u4e2d\u6240\u4ecb\u7ecd\u7684": 759, "\u4e2d\u6240\u8ff0\u7684\u5168\u56fe\u8bad\u7ec3": 755, "\u4e2d\u6240\u8ff0\u7684\u8fb9\u56de\u5f52\u6a21\u578b\u76f8\u540c": 770, "\u4e2d\u6240\u91c7\u6837\u7684\u8282\u70b9": 770, "\u4e2d\u627e\u5230": 736, "\u4e2d\u6307\u5b9a": 740, "\u4e2d\u6307\u5b9a\u66f4\u65b0\u51fd\u6570": 751, "\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 741, "\u4e2d\u6587\u7248": [685, 686, 687, 689, 690, 691, 692, 693, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 713, 715, 716, 717, 718, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731], "\u4e2d\u6587\u7248\u94fe\u63a5": 815, "\u4e2d\u662f\u5426\u5b58\u6709\u5904\u7406\u540e\u7684\u6570\u636e": 733, "\u4e2d\u67e5\u770b\u5f02\u6784\u56fe\u5377\u79ef": 771, "\u4e2d\u6807\u8bc6\u8282\u70b9\u6570\u636e": 739, "\u4e2d\u7684": 739, "\u4e2d\u7684\u4e00\u4e2a": 753, "\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20": 761, "\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9": 748, "\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801": 736, "\u4e2d\u7684\u4f8b\u5b50": 771, "\u4e2d\u7684\u505a\u6cd5\u7c7b\u4f3c": 771, "\u4e2d\u7684\u5206\u533a\u6570\u636e\u548c\u76f8\u5173\u6587\u4ef6": 741, "\u4e2d\u7684\u5b57\u6bb5\u540d": 751, "\u4e2d\u7684\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 769, "\u4e2d\u7684\u7279\u5f81\u6765\u52a0\u8f7d\u6807\u7b7e": 761, "\u4e2d\u7684\u8fb9": 748, "\u4e2d\u8282\u70b9\u7684\u96c6\u5408": 769, "\u4e2d\u95f4\u67d0\u4e00\u5c42\u5bf9\u5e94\u7684\u8fb9\u754c\u9700\u8981\u5305\u542b\u8be5\u5c42\u53ca\u6240\u6709\u540e\u7eed\u5c42\u8ba1\u7b97\u6d89\u53ca\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 756, "\u4e2d\u95f4\u6d88\u606f": 751, "\u4e3a\u4e86\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3": 740, "\u4e3a\u4e86\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u83b7\u5f97\u5e73\u8861\u7684\u5de5\u4f5c\u8d1f\u8f7d": 740, "\u4e3a\u4e86\u5904\u7406\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u672c\u5730\u78c1\u76d8\u4e0a\u7684\u56fe\u6570\u636e\u96c6": 733, "\u4e3a\u4e86\u5b8c\u6210\u5355\u4e2a\u56fe\u7684\u9884\u6d4b": 769, "\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684": 748, "\u4e3a\u4e86\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u7c7b": 771, "\u4e3a\u4e86\u5e76\u884c\u5316\u8ba1\u7b97": 738, "\u4e3a\u4e86\u6307\u4ee3\u591a\u6761\u8fb9": 747, "\u4e3a\u4e86\u8bbe\u7f6e": 748, "\u4e3a\u4e86\u968f\u673a": 761, "\u4e3a\u4f8b": 736, "\u4e3a\u540e\u7eed\u5728\u56fe\u4e0a\u8fdb\u884c\u7684\u8ba1\u7b97\u4e0e\u5206\u6790\u7684\u6027\u80fd\u6539\u5584\u63d0\u4f9b\u53ef\u80fd": 736, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": [749, 755, 761], "\u4e3a\u5f02\u6784\u56fe\u4fee\u6539gnn\u6a21\u5757\u7684\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684": 760, "\u4e3a\u5f02\u6784\u56fe\u751f\u6210\u8fb9\u754c\u4e0e\u4e3a\u540c\u6784\u56fe\u751f\u6210\u8fb9\u754c\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c": 756, "\u4e3a\u63d0\u5347\u6570\u636e\u52a0\u8f7d\u901f\u5ea6": 769, "\u4e3a\u6709\u5411\u56fe": 756, "\u4e3a\u67d0\u4e00\u79cd\u8fb9\u7c7b\u578b": 770, "\u4e3a\u6b64": [756, 759], "\u4e3a\u7b80\u4fbf\u8d77\u89c1": 736, "\u4e3a\u7b80\u5355\u8d77\u89c1": 761, "\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0\u7684id": 740, "\u4e3b\u8981\u539f\u56e0\u662fpytorch": 739, "\u4e3b\u8981\u5e94\u7528\u573a\u666f\u662f\u8fd0\u884c\u91c7\u6837api\u4ee5\u652f\u6301\u5c0f\u6279\u91cf\u8bad\u7ec3": 739, "\u4e3b\u8ba1\u7b97\u673a": 741, "\u4e4b\u524d\u58f0\u660e\u5206\u5e03\u5f0f\u5d4c\u5165": 739, "\u4e4b\u524d\u88ab\u58f0\u660e": 739, "\u4e4b\u524d\u8c03\u7528": 739, "\u4e4b\u540e": 764, "\u4e4b\u95f4\u5206\u6570\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e0e": 770, "\u4e4b\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684": 770, "\u4e4b\u95f4\u7684\u5173\u7cfb": 743, "\u4e4b\u95f4\u7684\u5f97\u5206": 770, "\u4e4b\u95f4\u7684\u5f97\u5206\u8981\u9ad8\u4e8e": 770, "\u4e58\u4ee52\u5f97\u5230\u6700\u7ec8\u7ed3\u679c": 751, "\u4e5f\u53ef\u4ee5\u5728\u4e0d\u6d89\u53ca\u6d88\u606f\u4f20\u9012\u7684\u60c5\u51b5\u4e0b": 751, "\u4e5f\u53ef\u4ee5\u662f\u6709\u5411\u7684": 743, "\u4e5f\u5c06\u5728gpu\u4e0a": 746, "\u4e5f\u5c31\u662f\u8bf4": 739, "\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u7ea7\u522b\u7684\u91c7\u6837api": 739, "\u4e5f\u63d0\u4f9b\u4e86": 739, "\u4e5f\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 757, "\u4e5f\u79f0\u4e3a": 751, "\u4e86\u89e3\u4e86\u4e0a\u8ff0\u8ba1\u7b97\u89c4\u5219\u540e": 769, "\u4e8c\u5206\u56fe\u662f\u4e00\u7c7b\u7279\u6b8a\u7684": 743, "\u4e8c\u5206\u56fe\u7684\u60c5\u51b5": 764, "\u4ea4\u53c9\u71b5\u635f\u5931": 770, "\u4eba\u4eec\u81ea\u7136\u4f1a\u60f3\u8981\u5728\u6a21\u578b\u5f00\u53d1\u4e2d\u4f7f\u7528\u5b83\u4eec": 768, "\u4ec5\u4ec5\u4fdd\u7559\u4e86\u8f93\u51fa\u8282\u70b9\u6240\u9700\u8981\u6536\u96c6\u6d88\u606f\u7684\u8fb9": 756, "\u4ec5\u5141\u8bb8\u4f7f\u7528\u6570\u503c\u7c7b\u578b": 745, "\u4ec5\u6709\u7684\u4ee3\u7801\u4fee\u6539\u51fa\u73b0\u5728\u7b2c4": 738, "\u4ecd\u7136\u5177\u6709\u76f8\u540c\u7684\u7ed3\u679c": 769, "\u4ece": [733, 756], "\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230": 756, "\u4ece\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa": 756, "\u4ece\u5185\u5b58\u89d2\u5ea6\u6765\u8bf4\u662f\u9ad8\u6548\u7684": 752, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [736, 742, 747, 749], "\u4ece\u5de6\u81f3\u53f3": 769, "\u4ece\u6210\u5bf9\u7684\u8fb9": 744, "\u4ece\u7528\u4e8e\u56fe\u548c\u7a00\u758f\u77e9\u9635\u7684\u5916\u90e8python\u5e93": 744, "\u4ece\u76ee\u5f55": 737, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe\u6570\u636e": 744, "\u4ece\u800c\u4ea7\u751f\u5305\u542b\u8fb9\u5c0f\u6279\u6b21\u7684\u5b50\u56fe\u4ee5\u53ca\u4f9b\u4e0b\u6587\u4e2d\u6a21\u5757\u4f7f\u7528\u7684": 757, "\u4ece\u800c\u4ee5\u5c0f\u6279\u6b21\u904d\u5386\u6574\u4e2a\u56fe\u6570\u636e\u96c6": 769, "\u4ece\u800c\u51cf\u5c11\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u7f51\u7edc\u901a\u4fe1": 740, "\u4ece\u800c\u5b8c\u6210\u540e\u5411\u4f20\u64ad": 771, "\u4ece\u800c\u5bfc\u81f4\u591a\u6b21\u521b\u5efa\u548c\u5220\u9664": 739, "\u4ece\u800c\u8fdb\u4e00\u6b65\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u5e76\u8282\u7701\u5185\u5b58\u5360\u7528": 752, "\u4ece\u8f93\u51fa\u5f00\u59cb": 755, "\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u6d88\u606f\u4f20\u9012\u5747\u4f7f\u7528": 764, "\u4ee3\u7801\u5b9e\u73b0\u7684\u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u8c03\u7528": 757, "\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u8bfb": 760, "\u4ee3\u7801\u91cc\u79fb\u9664\u4e86\u5f52\u4e00\u5316": 760, "\u4ee3\u8868\u8ba1\u7b97": 761, "\u4ee5\u4e0a3\u79cd\u56fe\u7c7b\u578b\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u76f8\u540c\u7684": 764, "\u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u73b0\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684": 752, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u5f20\u91cf": 739, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e862\u4e2a\u8282\u70b9\u7279\u5f81": 745, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u6570\u636e\u52a0\u8f7d\u5668": 757, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u7684": 761, "\u4ee5\u4e0b\u4ee3\u7801\u5728\u6ce8\u91ca\u91cc\u4fdd\u7559\u4e86\u6574\u56fe\u5b9e\u73b0\u7684\u8bed\u53e5": 760, "\u4ee5\u4e0b\u4ee3\u7801\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f8b\u5b50": 768, "\u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5728": 734, "\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4e3a": 735, "\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5bf9\u6bcf\u79cd\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a\u53d6\u5e73\u5747\u503c\u5e76\u6c42\u548c": 769, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u4e3a\u4ecescipy\u7a00\u758f\u77e9\u9635\u548cnetworkx\u56fe\u521b\u5efadgl\u56fe\u7684\u793a\u4f8b": 744, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u5b9e\u73b0\u4e86\u901a\u8fc7\u5408\u5e76\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u5e76\u5c06\u5176\u6620\u5c04\u5230\u5168\u8fde\u63a5\u5c42\u6765\u9884\u6d4b\u8fb9\u7684\u5f97\u5206": 757, "\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210\u4e86\u4e00\u4e2a\u968f\u673a\u56fe\u7528\u4e8e\u6f14\u793a\u8fb9\u5206\u7c7b": 767, "\u4ee5\u4e0b\u4ee3\u7801\u7528\u4e86": 767, "\u4ee5\u4e0b\u4ee3\u7801\u7531\u4e8e\u8f93\u51fa\u8282\u70b9\u672a\u8986\u76d6\u6240\u6709\u8fd9\u4e9b\u8282\u70b9": 756, "\u4ee5\u4e0b\u4ee3\u7801\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u5206\u5e03\u5f0f\u65b9\u5f0f\u8bad\u7ec3graphsage\u7684\u793a\u4f8b": 738, "\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86": 769, "\u4ee5\u4e0b\u5185\u5bb9\u8bf4\u660e\u4e86\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f": 732, "\u4ee5\u4e0b\u56fe\u4e3a\u4f8b": 756, "\u4ee5\u4e0b\u5c0f\u8282\u5c06\u9010\u4e00\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4": 761, "\u4ee5\u4e0b\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9\u5747\u5300\u91c7\u68375\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 759, "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50": 753, "\u4ee5\u4e0b\u793a\u4f8b\u5c06\u8bad\u7ec3\u96c6\u5185\u548c\u8bad\u7ec3\u96c6\u5916\u7684\u8282\u70b9\u770b\u4f5c\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 740, "\u4ee5\u4e0b\u9762\u7528\u4e8e\u5168\u56fe\u7684gnn\u6a21\u5757\u4e3a\u4f8b": 760, "\u4ee5\u4e0b\u9762\u7684\u81ea\u5b9a\u4e49\u56fe\u5377\u79ef\u6a21\u5757\u4ee3\u7801\u4e3a\u4f8b": 760, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u5b50\u56fe\u7ed3\u6784": 740, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8282\u70b9\u7279\u5f81": 740, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8fb9\u7279\u5f81": 740, "\u4ee5\u4fbf\u533a\u5206": 757, "\u4ee5\u4fbf\u5b83\u4e5f\u53ef\u4ee5\u5728\u5f02\u6784\u56fe\u4e0a\u4f7f\u7528": 756, "\u4ee5\u4fbf\u6bcf\u4e2a\u8bad\u7ec3\u5668\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bad\u7ec3\u96c6\u5b50\u96c6": 739, "\u4ee5\u50a8\u5b58\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u5c5e\u6027": 745, "\u4ee5\u5145\u5206\u5229\u7528": 764, "\u4ee5\u5229\u7528\u66f4\u5927\u8303\u56f4\u7684\u90bb\u5c45\u4fe1\u606f": 771, "\u4ee5\u53ca": 738, "\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6267\u884c\u7684\u8ba1\u7b97": 742, "\u4ee5\u53ca\u53ef\u5b9a\u5236\u7684\u805a\u5408\u51fd\u6570\u548c\u975e\u7ebf\u6027\u51fd\u6570": 771, "\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5e26\u6709\u6d88\u606f\u4f20\u9012\u7684gnn\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282": 771, "\u4ee5\u53ca\u60f3\u8981\u4e86\u89e3\u5982\u4f55\u5728\u5c0f\u6279\u6b21\u6570\u636e\u4e0a\u8fdb\u884c\u8bc4\u4f30\u548c\u63a8\u7406\u6a21\u578b\u7684\u7528\u6237": 755, "\u4ee5\u53ca\u628a\u5b83\u4eec\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\u7684\u7c7b\u578b\u8fdb\u884c\u5408\u5e76\u540e\u7684\u5355\u4e00\u8fb9\u7c7b\u578b": 767, "\u4ee5\u53ca\u6765\u81ea\u8f93\u5165\u8282\u70b9\u7684\u8868\u793a\u5982\u4f55\u4f20\u64ad\u5230\u8f93\u51fa\u8282\u70b9": 761, "\u4ee5\u53ca\u7531\u5c0f\u6279\u6b21\u8fb9\u5bfc\u51fa\u7684\u539f\u59cb\u56fe\u7684\u5b50\u56fe": 757, "\u4ee5\u53ca\u8ba1\u7b97\u5176\u4e24\u7aef\u8282\u70b9\u8868\u793a\u6240\u9700\u7684\u5757\u5217\u8868": 757, "\u4ee5\u53ca\u8bf8\u5982\u7c7b\u522b\u6570": 733, "\u4ee5\u53ca\u8d1f\u91c7\u6837\u5668": 759, "\u4ee5\u53ca\u8fb9\u7684\u6807\u7b7e": 767, "\u4ee5\u591a\u5c42gcn\u4e3a\u4f8b": 761, "\u4ee5\u5bfc\u5165\u6570\u636e\u7684\u7279\u5b9a\u90e8\u5206": 736, "\u4ee5\u5c06\u4efb\u4f55\u8fb9\u754c\u8f6c\u6362\u4e3a\u5757": 756, "\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u7ec4\u8fb9\u8fdb\u884c\u8fed\u4ee3": 757, "\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u548c\u7f51\u7edc\u901a\u4fe1": 738, "\u4ee5\u652f\u6301\u9700\u8981\u8282\u70b9\u5d4c\u5165\u7684\u76f4\u63a8": 739, "\u4ee5\u67e5\u770b\u5982\u4f55\u4ece\u5916\u90e8\u6570\u636e\u6e90\u6784\u5efa\u56fe\u7684\u5b8c\u6574\u6307\u5357": 736, "\u4ee5\u6982\u7387p\u968f\u673a\u9009\u62e9\u8fb9": 756, "\u4ee5\u7a81\u51fa\u5c55\u793a\u7528\u4e8e\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 736, "\u4ee5\u83b7\u5f97": 736, "\u4ee5\u8868\u683c\u683c\u5f0f\u50a8\u5b58\u8282\u70b9": 744, "\u4ee5\u8bbf\u95ee\u7fa4\u96c6\u4e2d\u7684\u5206\u533a\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 739, "\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 739, "\u4ee5\u8fdb\u884c\u8fed\u4ee3": 736, "\u4ee5\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 756, "\u4ee5\u907f\u514d\u91c7\u6837\u6240\u5e26\u6765\u7684\u968f\u673a\u6027": 758, "\u4ee5\u9632\u4f5c\u8005\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u66f4\u6539\u4e86\u6587\u4ef6": 734, "\u4efb\u4f55\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u4ee5\u7528\u4f5c\u8fb9\u754c": 756, "\u4efb\u4f55\u6d89\u53cagpu\u56fe\u7684\u64cd\u4f5c\u90fd\u662f\u5728gpu\u4e0a\u8fd0\u884c\u7684": 746, "\u4efb\u52a1": 770, "\u4efb\u52a1\u52a0\u8f7d\u6570\u636e\u96c6": 735, "\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u4e00\u6b65\u805a\u5408": 765, "\u4f1a\u6839\u636eip\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u5bf9\u5e94\u7684\u8ba1\u7b97\u673a\u6765\u5b58\u50a8\u56fe\u5206\u533a": 741, "\u4f1a\u7ed3\u5408\u805a\u5408\u540e\u7684\u6d88\u606f\u548c\u8282\u70b9\u672c\u8eab\u7684\u7279\u5f81\u6765\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 750, "\u4f1a\u805a\u5408\u8282\u70b9\u63a5\u53d7\u5230\u7684\u6d88\u606f": 750, "\u4f1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684": 765, "\u4f1a\u975e\u5e38\u6d88\u8017\u8d44\u6e90": 758, "\u4f20\u7ed9": 740, "\u4f46\u4e0d\u540c\u7684\u662f": 769, "\u4f46\u4e0d\u652f\u6301\u4e00\u4e9b\u8ba1\u7b97\u8fd0\u7b97\u7b26": 739, "\u4f46\u5176\u57fa\u672c\u601d\u60f3\u548c\u672c\u7ae0\u63cf\u8ff0\u7684\u6d41\u7a0b\u662f\u4e00\u81f4\u7684": 767, "\u4f46\u53ea\u5bf9\u4e00\u5c42\u8fdb\u884c\u8ba1\u7b97": 758, "\u4f46\u5b83\u6bcf\u6b21\u53ea\u4e3a\u4e00\u5c42\u8fdb\u884c\u91c7\u6837": 758, "\u4f46\u662f": [756, 764], "\u4f46\u662f\u4efb\u4f55\u62e5\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u7528\u4f5c\u8fb9\u754c": 756, "\u4f46\u6709\u65f6\u7528\u6237\u8fd8\u662f\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u91c7\u6837\u5668": 756, "\u4f46\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u79cd\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe\u5bf9\u8c61": 735, "\u4f46\u8fd8\u662f\u6709\u4e00\u4e9b\u660e\u663e\u7684\u533a\u522b": 757, "\u4f4d\u4e8e\u8282\u70b9\u5217\u8868\u7684\u6700\u524d\u9762": 764, "\u4f4d\u6216": 747, "\u4f4d\u6574\u6570": 747, "\u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u8282\u70b9id\u548c\u8fb9id": 747, "\u4f5c\u4e3a\u4e00\u4e2a\u672a\u7ecf\u8fc7\u5f52\u4e00\u5316\u7684\u7c7b\u522b\u7684\u5206\u5e03": 767, "\u4f5c\u4e3a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u5982\u4f55\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684dgl": 762, "\u4f5c\u4e3a\u5165\u53c2": 759, "\u4f5c\u4e3a\u53c2\u6570": 761, "\u4f5c\u4e3a\u6f14\u793a\u7684\u6837\u4f8b\u4ee3\u7801": 771, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e": 739, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e\u4e4b\u4e00\u6dfb\u52a0\u5230": 739, "\u4f5c\u4e3a\u8282\u70b9\u8868\u793a\u8ba1\u7b97\u6a21\u578b\u4ee5\u53ca\u524d\u4e00\u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684": 767, "\u4f5c\u4e3a\u8f93\u5165": 756, "\u4f5c\u4e3a\u8fb9\u9884\u6d4b\u6a21\u578b": 767, "\u4f5c\u5f0a": 757, "\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9": 736, "\u4f7f\u7528": 739, "\u4f7f\u7528dgl": 769, "\u4f7f\u7528int32\u6784\u5efa\u56fe": 747, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": [732, 749], "\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 751, "\u4f7f\u7528\u5e73\u5747\u8bfb\u51fa\u8ba1\u7b97\u56fe\u8868\u793a": 769, "\u4f7f\u7528\u5e95\u5c42api\u65f6": 739, "\u4f7f\u7528\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 771, "\u4f7f\u7528\u6240\u6709\u8282\u70b9": 771, "\u4f7f\u7528\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 771, "\u4f7f\u7528\u6709\u5411\u7684networkx\u56fe": 744, "\u4f7f\u7528\u6a21\u578b\u65f6\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u8282\u70b9\u7c7b\u578b\u548c\u6570\u636e\u7279\u5f81\u7684\u5b57\u5178": 767, "\u4f7f\u7528\u8be5\u540d\u79f0\u6765\u8bc6\u522b\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u56fe": 740, "\u4f7f\u7528\u8d1f\u91c7\u6837\u65b9\u6cd5\u540e": 759, "\u4f7f\u7528\u8fd9\u6837\u7684": 739, "\u4f8b\u5982": [737, 739, 740, 741, 742, 743, 745, 748, 751, 754, 756, 757, 759, 760, 761, 763, 767, 768, 769, 770, 771], "\u4f8b\u5982nf": 741, "\u4f8b\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7fa4\u793e\u533a": 769, "\u4f8b\u5982\u4f7f\u7528": 769, "\u4f8b\u5982\u5728\u4e0b\u56fe\u4e2d": 748, "\u4f8b\u5982\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b": 739, "\u4f8b\u5982\u60f3\u5728\u67d0\u4e00\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u5206\u7c7b\u4efb\u52a1": 767, "\u4f8b\u5982\u6c42\u548c\u4ee5\u53ca\u6c42\u5747\u503c": 739, "\u4f8b\u5982\u8282\u70b9\u548c\u8fb9\u7684\u6570\u91cf": 739, "\u4f9d\u6279\u6b21\u5bf9\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3": 758, "\u4fdd\u5b58dglgraph\u5bf9\u8c61\u548c\u6807\u7b7e\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 737, "\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 737, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [732, 733, 749], "\u4fdd\u5b58\u56fe\u548c\u6807\u7b7e": 737, "\u4fdd\u5b58\u8bad\u7ec3\u597d\u7684\u6a21\u578b": 771, "\u4fdd\u7559\u5173\u7cfb": 748, "\u4fee\u6539\u6a21\u578b\u8bad\u7ec3\u5faa\u73af\u90e8\u5206": 761, "\u501f\u7528\u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u5c0f\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5": 769, "\u503c\u4e3a\u4e00\u7684\u5143\u7d20\u8868\u793a\u4e00\u6761\u8fb9": 768, "\u503c\u4e3a\u4f5c\u7528\u5728\u8be5\u5173\u7cfb\u4e0ann\u6a21\u5757\u5bf9\u8c61": 765, "\u503c\u5219\u4e3a\u5bf9\u5e94nn\u6a21\u5757\u7684\u81ea\u5b9a\u4e49\u53c2\u6570": 765, "\u503c\u662f\u8fd9\u79cd\u5173\u7cfb\u5bf9\u5e94": 753, "\u5047\u5b9agraph": 768, "\u5047\u8bbe\u6279\u6b21\u5927\u5c0f\u4e3a": 769, "\u5047\u8bbe\u6709\u5982\u4e0b\u7684\u8fb9\u754c": 756, "\u5047\u8bbe\u7ea2\u8272\u8282\u70b9\u4e3a\u9700\u8981\u66f4\u65b0\u7684\u76ee\u6807\u8282\u70b9": 756, "\u5047\u8bbe\u8282\u70b9": 750, "\u5047\u8bbe\u8981\u4f7f\u75282\u5c42gnn\u8ba1\u7b97\u79cd\u5b50\u8282\u70b98": 756, "\u5143\u7d20\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8fb9\u7c7b\u578b": 769, "\u5143\u7ec4\u4e2d\u7684\u7b2c1\u4e2a\u5143\u7d20\u4e3a\u6e90\u8282\u70b9\u7279\u5f81": 764, "\u5148\u6765\u770b\u4e00\u4e0b": 756, "\u5168\u56fe": 771, "\u51713\u4e2a\u6210\u5458\u5c5e\u6027": 751, "\u5173\u4e8e": 745, "\u5173\u4e8edgl\u5185\u7f6e\u56fe\u5377\u79ef\u6a21\u5757\u7684\u5b8c\u6574\u5217\u8868": 771, "\u5173\u4e8e\u5185\u7f6e\u51fd\u6570\u7684\u5217\u8868": 751, "\u5173\u4e8e\u5185\u7f6e\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5": 759, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [742, 749], "\u5173\u4e8e\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u8fdb\u9636\u7528\u6cd5": 751, "\u5173\u6ce8": [748, 757], "\u5173\u7cfb": 757, "\u5173\u7cfb\u53ef\u4ee5\u662f\u65e0\u5411\u7684": 743, "\u5173\u7cfb\u8868\u793a\u4e3a": 764, "\u5176\u4e2d": [740, 747, 752, 756, 765, 769, 770], "\u5176\u4e2dxxx\u662f\u63d0\u4f9b\u7ed9\u5212\u5206api\u7684\u56fe\u7684\u540d\u79f0": 740, "\u5176\u4e2d\u4e00\u4e9b\u4ee3\u7801\u6f14\u793a\u4e86\u67e5\u8be2\u56fe\u7ed3\u6784\u7684\u90e8\u5206api\u7684\u4f7f\u7528\u65b9\u6cd5": 747, "\u5176\u4e2d\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u6a21\u5757\u7ec4\u4ef6": 769, "\u5176\u4e2d\u5305\u542b\u6240\u6709\u8d1f\u91c7\u6837\u7684\u8282\u70b9\u5bf9\u4f5c\u4e3a\u8fb9": 770, "\u5176\u4e2d\u5305\u542b\u6709\u5173\u8f93\u5165\u56fe\u7684\u6240\u6709\u4fe1\u606f": 739, "\u5176\u4e2d\u5305\u542b\u7531\u8d1f\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u6240\u6709\u4e0d\u5b58\u5728\u7684\u8fb9": 759, "\u5176\u4e2d\u5305\u542b\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u5185\u6240\u6709\u7684\u8fb9": 759, "\u5176\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b": 739, "\u5176\u4e2d\u7684\u8fb9\u8fde\u63a5\u4e24\u7c7b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 743, "\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8fb9\u754c": 756, "\u5176\u4e2d\u7ea2\u8272\u548c\u7eff\u8272\u8282\u70b9": 756, "\u5176\u4e2d\u8282\u70b9\u548c\u8fb9\u53ef\u4ee5\u662f\u6709\u7c7b\u578b\u7684": 742, "\u5176\u4f59\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8": 738, "\u5176\u503c\u4e3a\u6bcf\u4e2a\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 765, "\u5176\u6570\u5b66\u5b9a\u4e49\u4e3a": 765, "\u5176\u6700\u7ec8\u8868\u793a\u5c06\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c": 755, "\u5176\u6b21": 769, "\u5176\u6d88\u606f\u4f20\u9012\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b": 756, "\u5176\u7ed3\u679c": 746, "\u5176\u7ed3\u679c\u662f": 758, "\u5176\u884c\u4e3a\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u975e\u5e38\u76f8\u4f3c": 739, "\u5176\u9002\u7528\u4e8e\u5355\u5411\u4e8c\u5206\u56fe": 760, "\u5176\u952e\u4e3a": 765, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 734, "\u5177\u4f53\u5982\u4e0b\u6240\u793a": 771, "\u5177\u4f53\u6765\u8bf4": [738, 758], "\u5177\u4f53\u884c\u4e3a\u5982\u4e0b": 748, "\u5177\u6709\u5bf9\u96c6\u7fa4\u5185\u6240\u6709\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u65e0\u5bc6\u7801ssh\u8bbf\u95ee\u6743\u9650": 741, "\u5177\u6709\u76f8\u540c\u7684\u952e": 765, "\u5185\u7f6e\u51fd\u6570": 751, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": [749, 750], "\u5185\u7f6e\u6d88\u606f\u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u5143\u51fd\u6570\u6216\u4e8c\u5143\u51fd\u6570": 751, "\u5185\u7f6e\u7684dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u7684\u8f93\u5165\u56fe\u53ca\u7279\u5f81\u5fc5\u987b\u6ee1\u8db3\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00": 760, "\u518d\u5c06": 751, "\u518d\u6784\u5efa\u4e00\u4e2a\u5173\u7cfb\u5b57\u5178": 748, "\u518d\u6b21\u63d0\u9192\u4e0b": 761, "\u518d\u7531\u8fb9\u754c\u8f6c\u6362\u6210\u5757": 756, "\u51c6\u5907\u4e00\u4e2a\u6279\u6b21\u7684\u56fe": 769, "\u51fa\u4e8e\u5efa\u6a21\u7684\u76ee\u7684": 748, "\u51fd\u6570": [736, 747, 748, 751, 764, 769], "\u51fd\u6570\u4e2d\u5b9e\u73b0\u6570\u636e\u5904\u7406": 736, "\u51fd\u6570\u6267\u884c\u4e86\u5b9e\u9645\u7684\u6d88\u606f\u4f20\u9012\u548c\u8ba1\u7b97": 764, "\u51fd\u6570\u662f\u57fa\u4e8e\u5747\u5300\u5206\u5e03\u7684\u91c7\u6837\u51fd\u6570": 759, "\u51fd\u6570\u6765\u5728\u8fd0\u884c\u65f6\u62c6\u5206\u8bad\u7ec3": 739, "\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684": 747, "\u51fd\u6570\u6765\u6784\u5efa\u4e00\u4e2a": 747, "\u51fd\u6570\u7684\u5185\u5bb9\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a3\u9879\u64cd\u4f5c": 764, "\u51fd\u6570\u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u5728\u5b8c\u6210\u6d88\u606f\u805a\u5408\u540e\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 764, "\u51fd\u6570\u7684\u8f93\u5165\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 767, "\u51fd\u6570\u7684\u8f93\u51fa\u4e0d\u4f1a\u5168\u4e3a0": 764, "\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u7684\u5bf9\u8c61": 765, "\u51fd\u6570\u805a\u5408\u6765\u81ea\u591a\u4e2a\u5173\u7cfb\u7684\u7ed3\u679c": 765, "\u51fd\u6570\u8fd8\u4f7f\u75282\u4e2a\u989d\u5916\u7684\u5b57\u5178\u53c2\u6570": 765, "\u51fd\u6570\u8fdb\u884c\u89e3\u538b\u7f29": 734, "\u51fd\u6570\u9700\u8981\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u8f93\u5165\u56fe\u7c7b\u578b": 765, "\u51fd\u6570\u9700\u8981\u5904\u7406\u8f93\u5165\u7684\u8bb8\u591a\u6781\u7aef\u60c5\u51b5": 764, "\u5206\u522b\u5728\u7b2c8": 745, "\u5206\u522b\u662f\u53ef\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u51fd\u6570\u4e0e\u805a\u5408\u51fd\u6570": 756, "\u5206\u522b\u662f\u77e9\u9635": 752, "\u5206\u522b\u7528\u4e8e\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5f02\u6784\u56fe\u548c\u52a0\u8f7d\u5b83\u4eec": 748, "\u5206\u522b\u7528\u4e8e\u8bbf\u95ee\u6e90\u8282\u70b9": 751, "\u5206\u533a": [738, 740], "\u5206\u533a0\u7684\u6570\u636e": 740, "\u5206\u533a1\u7684\u6570\u636e": 740, "\u5206\u533a\u6570\u636e\u548c\u8bad\u7ec3\u811a\u672c\u90fd\u5df2\u88ab\u590d\u5236\u5230\u96c6\u7fa4\u6216\u5b58\u5728\u96c6\u7fa4\u4e2d\u6240\u6709\u8ba1\u7b97\u673a\u5747\u53ef\u8bbf\u95ee\u7684\u5168\u5c40\u5b58\u50a8\u7a7a\u95f4": 741, "\u5206\u533a\u914d\u7f6e\u6587\u4ef6\u4ee5\u53ca\u56fe\u5206\u533a": 741, "\u5206\u5e03\u5f0f\u5d4c\u5165\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u5f20\u91cf\u4e4b\u4e0a": 739, "\u5206\u5e03\u5f0f\u5d4c\u5165\u7684\u521b\u5efa\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684\u521b\u5efa\u975e\u5e38\u76f8\u4f3c": 739, "\u5206\u5e03\u5f0f\u5f20\u91cf\u5fc5\u987b\u4e0e\u56fe\u7684\u8282\u70b9\u6216\u8fb9\u76f8\u5173\u8054": 739, "\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668\u5177\u6709\u4e0epytorch": 739, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u548c\u72ec\u7acb\u6a21\u5f0f": 739, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": [738, 749], "\u5206\u5e03\u5f0f\u8bad\u7ec3": 749, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u5c06\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u5206\u533a": 741, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [738, 749], "\u5206\u5e03\u5f0f\u91c7\u6837\u548c\u6570\u636e\u5206\u5272": 739, "\u5206\u5e03\u5f0f\u91c7\u6837\u6a21\u5757\u9075\u5faa\u76f8\u540c\u7684\u8bbe\u8ba1": 739, "\u5206\u914did\u540e": 740, "\u5206\u914d\u7ed9": 739, "\u5207\u7247\u53d6\u8f93\u5165\u7279\u5f81\u7684\u524d\u51e0\u884c": 760, "\u5207\u7247\u884c\u6570\u53ef\u4ee5\u901a\u8fc7": 760, "\u5212\u5206api\u901a\u8fc7\u5728": 740, "\u5212\u5206\u6216\u7279\u5f81\u5f52\u4e00\u5316\u7b49\u64cd\u4f5c\u5efa\u8bae\u5728": 733, "\u5212\u5206\u63a9\u7801": 736, "\u5217\u8868": 735, "\u5219": 739, "\u5219dgl\u4f1a\u81ea\u52a8\u5c06\u8f93\u5165\u8282\u70b9\u7279\u5f81\u524d\u4e00\u90e8\u5206\u8bbe\u4e3a\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 760, "\u5219dgl\u5141\u8bb8\u4f7f\u7528": 748, "\u5219\u4e0d\u9700\u8981\u6307\u5b9a\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b": 748, "\u5219\u53ea\u9700\u8981\u6309\u7167\u5982\u4e0b\u7684\u65b9\u6cd5\u91cd\u5199forward\u51fd\u6570": 760, "\u5219\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6d88\u606f\u6216\u805a\u5408\u51fd\u6570": 751, "\u5219\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u7b80\u5355\u5730\u5b9a\u4e49\u91c7\u6837\u5668": 756, "\u5219\u53ef\u4ee5\u6dfb\u52a0\u53c2\u6570": 736, "\u5219\u53ef\u4ee5\u901a\u8fc7": 761, "\u5219\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u76f4\u63a5\u8bfb\u53d6\u5757\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 756, "\u5219\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u51fd\u6570": 734, "\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee": 761, "\u5219\u56fe\u8bfb\u51fa\u7684\u5f20\u91cf\u5f62\u72b6\u4e3a": 769, "\u5219\u5b83\u4e5f\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55": 734, "\u5219\u6307\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u7ed3\u679c": 765, "\u5219\u6a21\u578b\u5728\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3\u65f6\u53ea\u9700\u505a\u5f88\u5c0f\u7684\u8c03\u6574": 761, "\u5219\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u8fb9\u7c7b\u578b\u53ca\u5176\u53cd\u5411\u8fb9\u7c7b\u578b\u4e4b\u95f4\u7684\u6620\u5c04": 757, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u5411\u4e8c\u5206\u56fe": 760, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u540c\u6784\u56fe": 760, "\u5219\u8fb9\u662f\u65e0\u5411\u7684": 743, "\u5219\u8fb9\u662f\u6709\u5411\u7684": 743, "\u5219\u901a\u5e38\u4e0d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7cbe\u786e\u7684\u79bb\u7ebf\u63a8\u65ad": 758, "\u5219\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u4f18\u5316\u5668": 739, "\u5219\u9ed8\u8ba4\u503c\u4e3a": 741, "\u521b\u5efa": 736, "\u521b\u5efa\u4e00\u4e2a": 747, "\u521b\u5efa\u4e00\u4e2a\u5177\u67093\u79cd\u8282\u70b9\u7c7b\u578b\u548c3\u79cd\u8fb9\u7c7b\u578b\u7684\u5f02\u6784\u56fe": 748, "\u521b\u5efa\u5206\u5e03\u5f0f\u56fe\u5bf9\u8c61": 738, "\u521b\u5efa\u5d4c\u5165\u65f6": 739, "\u521b\u5efa\u800c\u6765": 744, "\u521b\u5efa\u91c7\u6837\u5668": 738, "\u521b\u5efa\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u793a\u4f8b": 736, "\u521d\u59cb\u5316api\u5e94\u6309\u4ee5\u4e0b\u987a\u5e8f\u8c03\u7528": 739, "\u521d\u59cb\u5316dgl\u7684\u5206\u5e03\u5f0f\u6a21\u5757": 738, "\u521d\u59cb\u5316\u53c2\u6570": 763, "\u521d\u59cb\u56fe\u548c\u8981\u8ba1\u7b97\u8868\u793a\u7684\u8282\u70b9": 756, "\u5220\u9664\u5c0f\u6279\u6b21\u4e2d\u7684\u8fb9\u53ca\u5176\u53cd\u5411\u8fb9\u7684\u65b9\u6cd5\u5982\u4e0b": 757, "\u5229\u7528\u8282\u70b9\u81ea\u8eab\u7684\u7279\u5f81\u548c\u5176\u90bb\u8282\u70b9\u53ca\u8fb9\u7684\u7279\u5f81\u6765\u8ba1\u7b97\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 771, "\u5229\u7528\u8fd9\u4e9b\u4f18\u5316\u7684\u4e00\u4e2a\u5e38\u89c1\u5b9e\u8df5\u662f\u901a\u8fc7\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 752, "\u5230": [747, 767], "\u524d\u8005\u5728": 739, "\u524d\u9762\u7ae0\u8282\u91cc\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7528\u5728\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 756, "\u5269\u4f59\u90e8\u5206\u7684\u8bad\u7ec3\u4ee3\u7801\u548c\u540c\u6784\u56fe\u4ee3\u7801\u76f8\u540c": 769, "\u52a0\u6743\u7684": 743, "\u52a0\u6cd5\u53ef\u4ee5\u901a\u8fc7dgl\u7684\u5185\u7f6e\u51fd\u6570": 752, "\u52a0\u8f7d": 735, "\u5305\u542b\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b": 760, "\u5305\u542b\u4e86\u6bcf\u4e2agnn\u5c42\u8981\u8ba1\u7b97\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u51fa": 761, "\u5305\u542b\u4e86\u96c6\u7fa4\u4e2d\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 741, "\u5305\u542b\u591a\u4e2a\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u7c7b": 738, "\u5305\u542b\u90bb\u5c45\u91c7\u6837\u548c\u6d88\u606f\u4f20\u9012": 758, "\u5305\u62ec": [738, 744, 764], "\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e": 770, "\u5305\u62ec\u5206\u533a\u4e2d\u7684\u56fe\u7ed3\u6784": 739, "\u5305\u62ec\u81ea\u5faa\u73af\u7684\u8fb9": 743, "\u5305\u62ec\u8bbf\u95ee\u8282\u70b9": 739, "\u5305\u63d0\u4f9b\u4e86\u7528\u4e8e\u4e0b\u8f7d\u548c\u5904\u7406ogb\u6570\u636e\u96c6\u5230": 735, "\u533a\u522b\u53ea\u5728\u4e8e\u8282\u70b9\u88ab\u5212\u5206\u4e3a\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 760, "\u5355\u5411\u4e8c\u5206\u56fe": 760, "\u5355\u72ec\u8c03\u7528\u9010\u8fb9\u8ba1\u7b97": 751, "\u5373": [752, 756, 768], "\u5373\u4e00\u7ec4\u673a\u5668": 738, "\u5373\u4efb\u610f\u4e24\u4e2a\u56fe\u4e4b\u95f4\u6ca1\u6709\u8fb9\u8fde\u63a5": 769, "\u5373\u4f7f": 739, "\u5373\u6267\u884c": 752, "\u5373\u6839\u636e\u7ed3\u6784\u548c\u6574\u4f53\u4fe1\u606f\u5bf9\u56fe\u8fdb\u884c\u5206\u7c7b": 769, "\u5373\u6b63\u786e\u7684\u6807\u6ce8": 771, "\u5373\u6bcf\u4e2a\u884c\u5207\u7247\u50a8\u5b581\u4e2a\u8282\u70b9\u62161\u6761\u8fb9\u7684\u7279\u5f81": 745, "\u5373\u8282\u70b94": 756, "\u5373\u8fb9": 747, "\u5373\u9884\u6d4b\u4efb\u52a1\u6570": 736, "\u539f\u5219\u662f\u5c06": 760, "\u539f\u56e0\u662f\u6d88\u606f\u4f20\u9012\u540e\u7684\u7279\u5f81\u7ec4\u5408\u9700\u8981\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u8282\u70b9\u8868\u793a": 756, "\u539f\u56e0\u662f\u8fd9\u9700\u8981\u4e3a\u6bcf\u4e00\u5c42\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u8868\u793a": 758, "\u539f\u56fe\u4e0a\u7684\u5176\u4ed6\u8282\u70b9\u662f\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u7684": 756, "\u539f\u59cb\u7279\u5f81\u5728cpu\u4e0a": 746, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8282\u70b9id": 748, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8fb9id": 748, "\u539f\u59cb\u7684\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684id\u88ab\u5b58\u50a8\u5728": 748, "\u539f\u59cb\u8282\u70b9\u7c7b\u578b": 748, "\u539f\u59cb\u8fb9\u7c7b\u578b": 748, "\u53c2\u6570": 765, "\u53c2\u8003\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7b2c16\u548c18\u884c": 745, "\u53c2\u8003\u624b\u518c\u63d0\u4f9b\u4e86\u8be5\u7528\u6cd5\u7684\u66f4\u591a\u7ec6\u8282": 744, "\u53c2\u8003\u7528\u6237\u6307\u5357": 753, "\u53c2\u89c1": [751, 760], "\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u548c\u6574\u578b": 745, "\u53cd\u5411\u8fb9\u901a\u5e38\u5177\u6709\u4e0e\u6b63\u5411\u8fb9\u672c\u8eab\u4e0d\u540c\u7684\u8fb9\u7c7b\u578b": 757, "\u53d6\u5e73\u5747\u503c": 769, "\u53d8\u91cf": 768, "\u53e6\u4e00\u4e2a\u5e94\u7528\u4e8e": 752, "\u53e6\u4e00\u4e2a\u7528\u4e8e\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 739, "\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 746, "\u53e6\u5916": [739, 741, 752], "\u53e6\u89c1": 744, "\u53ea\u4f7f\u7528": 748, "\u53ea\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u5305\u62ec\u8282\u70b9\u8868\u793a\u7684\u5b57\u5178\u6765\u8ba1\u7b97\u9884\u6d4b\u503c": 771, "\u53ea\u8981\u4f7f\u8fd4\u56de\u7684\u56fe\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9": 756, "\u53ea\u9700\u8981\u6309\u4e0b\u4f8b\u7f16\u5199\u4ee3\u7801": 767, "\u53ea\u9700\u8981\u8282\u70b94": 756, "\u53ea\u9700\u8981\u9884\u6d4b\u6bcf\u4e2a\u8fb9\u7684\u6807\u91cf\u5206\u6570\u800c\u4e0d\u662f\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03": 759, "\u53ef\u4ee5\u4ece\u5916\u90e8\u6765\u6e90\u6784\u9020\u4e00\u4e2a": 744, "\u53ef\u4ee5\u4f7f\u7528": [747, 756], "\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u56fe\u8868\u793a": 743, "\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e0a\u8ff0\u8fb9\u754c\u8f6c\u6362\u4e3a\u8f93\u51fa\u8282\u70b9\u4e3a8\u7684\u5757": 756, "\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4ee5\u4e0b\u4ee3\u7801\u7684\u65b9\u6cd5\u83b7\u53d6\u5355\u4e2a\u56fe\u6570\u636e\u96c6\u7684\u56fe\u6570\u636e": 766, "\u53ef\u4ee5\u5148\u62bd\u53d6\u5f02\u6784\u56fe\u7684\u8fb9\u7c7b\u578b\u5b50\u56fe": 748, "\u53ef\u4ee5\u5148\u901a\u8fc7\u60f3\u8981\u56ca\u62ec\u7684\u8282\u70b9\u7f16\u53f7\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe": 754, "\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u7684\u5757": 756, "\u53ef\u4ee5\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c": 739, "\u53ef\u4ee5\u5982\u4e0b\u5b9a\u4e49\u94fe\u63a5\u9884\u6d4b\u6a21\u578b": 759, "\u53ef\u4ee5\u5b8c\u6210\u4e00\u8f6e\u6d88\u606f\u4f20\u9012\u8ba1\u7b97": 771, "\u53ef\u4ee5\u5c06\u5176\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4fee\u6539\u4ee5\u652f\u6301\u8fb9\u6743\u91cd": 768, "\u53ef\u4ee5\u5c06\u8be5\u7c7b\u578b\u6570\u636e\u52a0\u8f7d\u5230python\u5bf9\u8c61": 744, "\u53ef\u4ee5\u5f97\u5230\u591a\u5f20\u7528\u4e8e\u5206\u7c7b\u7684\u56fe": 769, "\u53ef\u4ee5\u627e\u5230": 764, "\u53ef\u4ee5\u63a5\u53d7\u975e\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570": 746, "\u53ef\u4ee5\u63d0\u9ad8\u8282\u70b9": 736, "\u53ef\u4ee5\u662f\u5f02\u6784\u56fe\u6216\u6765\u81ea\u5f02\u6784\u56fe\u7684\u5b50\u56fe\u533a\u5757": 765, "\u53ef\u4ee5\u7528\u4e8e\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u6a21\u5757": 739, "\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u8282\u70b9\u6536\u5230\u7684\u6d88\u606f": 751, "\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f": 734, "\u53ef\u4ee5\u8ba9\u7528\u6237\u4e0d\u7528\u4e00\u6b21\u6027\u628a\u6240\u6709\u8282\u70b9\u7279\u5f81\u62f7\u8d1d\u5230gpu\u4e0a": 755, "\u53ef\u4ee5\u901a\u8fc7": 756, "\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u552f\u4e00\u6807\u8bc6": 739, "\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u56fe\u5377\u79ef\u6a21\u5757\u6765\u5b9e\u73b0\u8fd9\u79cd\u7f51\u7edc\u67b6\u6784": 771, "\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c": 767, "\u53ef\u4ee5\u9075\u5faa\u76f8\u540c\u7684\u539f\u7406\u6765\u6784\u5efa\u56fe": 744, "\u53ef\u4ee5\u91cd\u5199\u4e0a\u9762\u7684": 756, "\u53ef\u547d\u540d\u7684\u7279\u5f81": 745, "\u53ef\u5c06\u6570\u636e\u548c\u8ba1\u7b97\u540c\u65f6\u5206\u5e03\u5728\u4e00\u7ec4\u8ba1\u7b97\u8d44\u6e90\u4e2d": 738, "\u53ef\u5c06\u6570\u636e\u590d\u5236\u5230\u96c6\u7fa4\u7684\u8ba1\u7b97\u673a\u4e0a": 738, "\u53ef\u6309\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u5b83\u7684\u4e24\u7aef\u8282\u70b9\u9690\u85cf\u8868\u793a\u7684\u70b9\u79ef\u6765\u4f5c\u4e3a\u5206\u6570": 767, "\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u5de5\u4f5c\u7684\u60f3\u6cd5\u90fd\u5f88\u7c7b\u4f3c": 770, "\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7ef4\u5ea6\u7684\u8868\u793a\u6765\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u5efa\u6a21": 753, "\u53ef\u9009": [732, 740, 749], "\u53ef\u907f\u514d\u8be5\u884c\u4e3a": 744, "\u5404\u79cd\u6570\u636e\u683c\u5f0f": 744, "\u5408\u5e76\u6210\u4e00\u79cd\u8fb9\u7684\u56fe": 767, "\u540c\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u53ef\u4ee5\u6709\u591a\u6761": 743, "\u540c\u65f6": [747, 756], "\u540c\u65f6dgl\u4e5f\u5efa\u8bae\u5b9e\u73b0\u4fdd\u5b58\u548c\u5bfc\u5165\u51fd\u6570": 733, "\u540c\u65f6\u4e5f\u652f\u6301\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u91c7\u6837\u7b56\u7565": 755, "\u540c\u65f6\u5c06\u8fb9id\u6620\u5c04\u5230\u5176\u53cd\u5411\u8fb9id": 757, "\u540c\u65f6\u5efa\u7acb\u53cd\u5411\u8fb9": 767, "\u540c\u65f6\u7701\u7565\u4e86\u8be6\u7ec6\u7684\u6570\u636e\u5904\u7406\u4ee3\u7801\u4ee5\u7a81\u51fa\u5c55\u793a\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 736, "\u540c\u6784\u56fe": 764, "\u540c\u6784\u56fe\u548c\u4e8c\u5206\u56fe\u53ea\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f02\u6784\u56fe": 748, "\u540c\u6784\u56fe\u548c\u5757": 760, "\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e4b\u95f4\u552f\u4e00\u7684\u5b9e\u73b0\u5dee\u5f02\u662f\u540e\u8005\u9700\u8981\u7528": 759, "\u540c\u6784\u56fe\u7684\u60c5\u51b5": 764, "\u540c\u6784\u7684": 743, "\u540c\u6837": [739, 761], "\u540c\u6837\u5730": 767, "\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 767, "\u540d\u79f0\u5c31\u5f88\u6709\u7528": 739, "\u540e": 769, "\u540e\u4e00\u79cd\u65b9\u6cd5\u6548\u7387\u9ad8\u5f97\u591a": 752, "\u540e\u7eed\u7ae0\u8282\u7684\u5185\u5bb9\u5747\u5047\u8bbe\u7528\u6237\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u56fe\u548c\u8282\u70b9": 766, "\u540e\u8005\u53ef\u4ee5\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u8fdb\u884c\u8fed\u4ee3": 761, "\u540e\u8005\u652f\u6301\u89e3\u538b\u7f29zip\u6587\u4ef6": 734, "\u5411\u524d": 757, "\u5411\u540e": 757, "\u5411\u91cf\u6216\u591a\u7ef4\u5f20\u91cf": 745, "\u5426\u5219": 757, "\u5426\u5219\u7528\u6237\u9700\u8981\u81ea\u5df1\u5b9e\u73b0": 734, "\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u7a7a\u95f4": 741, "\u542f\u52a8\u811a\u672c\u4f1a\u5728\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u6307\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u4efb\u52a1": 741, "\u542f\u52a8\u811a\u672c\u5728\u540e\u53f0\u542f\u52a8\u670d\u52a1\u5668": 739, "\u5434\u7d2b\u8587": 749, "\u548c": [733, 736, 737, 738, 739, 740, 742, 743, 744, 745, 747, 748, 751, 752, 753, 756, 757, 758, 762, 763, 764, 765, 767, 769, 770, 771], "\u548c1\u4e2a\u8fb9\u7279\u5f81": 745, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 758, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 758, "\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9": 748, "\u548c\u4ece\u4e00\u4e2a\u4efb\u610f\u7684\u566a\u58f0\u5206\u5e03": 770, "\u548c\u5305\u542b\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u5757": 760, "\u548c\u5b50\u56fe\u5757": 764, "\u548c\u5b83\u4eec\u7684\u5173\u7cfb": 742, "\u548c\u5c0f\u6279\u91cf\u7684\u8fb9id\u6570\u7ec4": 759, "\u548c\u666e\u901a\u7684nn\u6a21\u5757\u4e00\u6837": 765, "\u548c\u7528\u4e8e\u5206\u5e03\u5f0f\u53ef\u5b66\u4e60\u5d4c\u5165\u7684": 739, "\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81": 764, "\u548c\u8282\u70b9\u5206\u7c7b\u4e00\u6837\u7684\u90bb\u5c45\u91c7\u6837\u5668": 757, "\u552f\u4e00\u7684\u533a\u522b\u662f\u5728\u8c03\u7528": 767, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4e3a\u8bad\u7ec3\u96c6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u7684\u5b57\u5178": 761, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528": [739, 757], "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u63d0\u4f9b\u8d1f\u91c7\u6837\u65b9\u6cd5": 759, "\u5546\u54c1": 743, "\u5546\u5bb6": 743, "\u56de\u5f52": [736, 749, 766, 770], "\u56de\u5f52\u4e2d\u7684\u8282\u70b9\u8868\u793a\u6a21\u578b": 759, "\u56de\u5f52\u4e2d\u7684\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 759, "\u56de\u5f52\u4efb\u52a1": 767, "\u56de\u5f52\u6240\u9700\u7684\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 757, "\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u8fb9\u5f97\u5206\u6a21\u578b\u76f8\u540c": 770, "\u56de\u5f52\u7684\u6a21\u578b": 767, "\u56de\u5f52\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b": 757, "\u56de\u5f52\u7684\u8bad\u7ec3\u7c7b\u4f3c": 757, "\u56de\u5f52\u91cc\u7684\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c": 759, "\u56de\u60f3\u4e00\u4e0b\u5728": 756, "\u56e0\u4e3a": 752, "\u56e0\u4e3a\u4e0a\u8ff0\u7684\u5f97\u5206\u9884\u6d4b\u6a21\u578b\u5728\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 770, "\u56e0\u4e3a\u4e0d\u9700\u8981\u5728\u8fb9\u4e0a\u4fdd\u5b58feat_src\u548cfeat_dst": 752, "\u56e0\u4e3a\u53cb\u8c0a\u662f\u76f8\u4e92\u7684": 743, "\u56e0\u4e3a\u540c\u6b65sgd\u4f1a\u5047\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c0f\u6279\u6b21": 739, "\u56e0\u4e3a\u5b83\u4eec\u7ecf\u8fc7\u4e86\u5927\u91cf\u4f18\u5316": 751, "\u56e0\u4e3a\u5bf9\u4e8e\u5904\u7406\u540e\u7684\u5927\u578b\u6570\u636e\u96c6": 733, "\u56e0\u4e3a\u5d4c\u5165\u662f\u6a21\u578b\u7684\u4e00\u90e8\u5206": 739, "\u56e0\u4e3a\u7528\u6237\u9700\u8981\u6307\u5b9a\u5728\u54ea\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b": 770, "\u56e0\u4e3a\u9700\u8981\u4ece\u7b2c\u4e00\u5c42\u5f00\u59cb\u5bf9\u8282\u70b9\u8868\u793a\u9010\u5c42\u8ba1\u7b97": 758, "\u56e0\u6b64": [736, 739, 741, 744, 746, 748, 756, 757, 759], "\u56e0\u6b64\u5982\u679c\u4e00\u5f20\u56fe\u5f88\u5927": 740, "\u56e0\u6b64\u6570\u636e\u96c6\u7684\u5212\u5206\u662f\u5728\u56fe\u7684\u8282\u70b9\u96c6\u4e0a\u8fdb\u884c": 736, "\u56e0\u6b64\u672c\u793a\u4f8b\u8bf4\u660e\u4e86\u5982\u4f55\u4f7f\u7528\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5411\u91cf\u7684\u70b9\u79ef\u6765\u8ba1\u7b97\u5206\u6570": 759, "\u56e0\u6b64\u7528\u6237\u65e0\u6cd5\u4ecenn\u6a21\u5757\u7684\u53c2\u6570\u8bbf\u95ee\u5b83": 739, "\u56e0\u6b64\u76f4\u63a5\u5728\u8fb9\u754c\u5b50\u56fe\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012\u6709\u5f88\u5927\u5f00\u9500": 756, "\u56e0\u6b64\u901a\u5e38\u53ef\u4ee5\u5728\u968f\u673a\u62bd\u53d6\u7684\u5c0f\u6279\u6b21\u56fe\u4e0a\u8fdb\u884c\u9ad8\u6548\u7684\u8bad\u7ec3": 769, "\u56e0\u6b64\u9700\u8981\u5c06\u6240\u8981\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b": 767, "\u56fe": [736, 749], "\u56fe\u4e0a\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38\u6709\u4e09\u79cd\u7c7b\u578b": 736, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5b50\u56fe\u5bf9\u5e94\u4e00\u5f20\u539f\u59cb\u5c0f\u56fe": 769, "\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u662fdgl\u901a\u8fc7\u7ed9\u5b9a\u7684\u56fe\u7684\u8fb9\u5217\u8868\u4e2d\u6700\u5927\u7684\u70b9id\u63a8\u65ad\u6240\u5f97\u51fa\u7684": 747, "\u56fe\u5212\u5206api\u5f53\u524d\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c": 740, "\u56fe\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u4e8c\u5206\u56fe": 764, "\u56fe\u53ef\u4ee5\u662f": 743, "\u56fe\u540d\u79f0\u6807\u8bc6\u4e86\u96c6\u7fa4\u4e2d\u6240\u9700\u52a0\u8f7d\u7684\u56fe": 739, "\u56fe\u5c06\u4f1a\u88ab\u89c6\u4e3a\u4e8c\u5206\u56fe": 764, "\u56fe\u6216\u5f20\u91cf": 746, "\u56fe\u6570\u636e\u4e2d\u7684\u8bad\u7ec3": 771, "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [749, 766, 769, 771], "\u56fe\u662f\u7528\u4ee5\u8868\u793a\u5b9e\u4f53\u53ca\u5176\u5173\u7cfb\u7684\u7ed3\u6784": 743, "\u56fe\u6ce8\u610f\u529b\u7f51\u7edc": 768, "\u56fe\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210": 743, "\u56fe\u7684": 736, "\u56fe\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4e86": 771, "\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e2a\u5178\u578b\u9009\u9879\u662f\u805a\u5408\u7c7b\u578b": 763, "\u56fe\u8868\u793a\u5b9e\u4f53": 742, "\u5728": [736, 737, 739, 761, 764], "\u5728dgl": 762, "\u5728dgl\u4e2d": [748, 751, 753, 756], "\u5728dgl\u4e2d\u79f0\u4e4b\u4e3a": 761, "\u5728dgl\u7684\u56fe\u91cc": 747, "\u5728dgl\u91cc\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5b9e\u73b0\u8fd9\u4e00\u9700\u6c42": 768, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 742, "\u5728gpu\u4e0a\u8fdb\u884c\u5168\u56fe\u524d\u5411\u4f20\u64ad\u901a\u5e38\u7531\u4e8e\u663e\u5b58\u5927\u5c0f\u7684\u9650\u5236\u800c\u4e0d\u53ef\u884c": 758, "\u5728graph": 751, "\u5728jupyt": 739, "\u5728mxnet\u4e2d\u662ffloat\u5f20\u91cf": 736, "\u5728nn\u6a21\u5757\u4e2d": 764, "\u5728node": 735, "\u5728python\u5b57\u5178\u91cc\u4fdd\u5b58\u5176\u4ed6\u4fe1\u606f": 737, "\u5728sageconv\u4e2d": 763, "\u5728sageconv\u8bba\u6587\u91cc": 763, "\u5728update_all\u5916\u8c03\u7528\u66f4\u65b0\u51fd\u6570": 751, "\u5728user\u7c7b\u578b\u7684\u8282\u70b9\u548cclick\u7c7b\u578b\u7684\u8fb9\u4e0a\u968f\u673a\u751f\u6210\u8bad\u7ec3\u96c6\u7684\u63a9\u7801": 766, "\u5728\u4e00\u4e2a\u52a0\u6743\u56fe\u91cc": 768, "\u5728\u4e00\u4e2a\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 738, "\u5728\u4e00\u5c42\u4e2d": 758, "\u5728\u4e0a\u9762\u7684\u7b49\u5f0f\u4e2d": 750, "\u5728\u4ecb\u7ecddgl\u4e2d\u90bb\u5c45\u91c7\u6837\u7684\u7528\u6cd5\u4e4b\u524d": 756, "\u5728\u4f7f\u7528pytorch\u65f6": 739, "\u5728\u4f7f\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 753, "\u5728\u5185\u7f6e\u6570\u636e\u96c6": 737, "\u5728\u5185\u90e8": 739, "\u5728\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0b": 739, "\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e2d": 739, "\u5728\u521b\u5efa\u56fe\u7684\u65f6\u5019": 747, "\u5728\u521d\u6b65\u4e86\u89e3\u4e86\u5206\u5e03\u5f0f\u7ec4\u4ef6\u540e": 738, "\u5728\u52a0\u6743\u56fe\u4e2d": 743, "\u5728\u533a\u5757\u521b\u5efa\u7684\u9636\u6bb5": 764, "\u5728\u534a\u76d1\u7763\u8282\u70b9\u5206\u7c7b\u7684\u573a\u666f\u91cc": 740, "\u5728\u540c\u6784\u56fe\u4e2d": 743, "\u5728\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e0a\u505a\u8bc4\u5206\u9884\u6d4b\u65f6": 757, "\u5728\u56fe\u5212\u5206\u540e": 740, "\u5728\u56fe\u5212\u5206\u671f\u95f4\u7684\u56fe\u540d\u79f0": 739, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [749, 750], "\u5728\u57fa\u4e8e\u90bb\u5c45\u91c7\u6837\u7684\u8fb9\u5206\u7c7b\u4e2d": 757, "\u5728\u591a\u91cd\u56fe\u4e2d": 743, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": [749, 754, 764, 766], "\u5728\u5b58\u50a8\u56fe\u5206\u533a\u6570\u636e": 738, "\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u91c7\u6837\u5668\u540e": 756, "\u5728\u5bf9\u56fe\u8fdb\u884c\u5212\u5206\u65f6": 740, "\u5728\u5c0f\u6279\u6b21\u8bad\u7ec3\u4e2d": 764, "\u5728\u5f02\u6784\u56fe\u4e0a": 757, "\u5728\u5f02\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u548c\u5728\u540c\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u7565\u6709\u4e0d\u540c": 769, "\u5728\u5f02\u6784\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8282\u70b9\u5206\u7c7b\u7684\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684": 761, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [749, 750], "\u5728\u5f02\u6784\u56fe\u4e2d": 743, "\u5728\u5f02\u6784\u56fe\u7684\u60c5\u51b5\u4e0b": 764, "\u5728\u5f53\u524d\u5b9e\u73b0\u4e2d": 739, "\u5728\u5f97\u5230": 769, "\u5728\u6240\u6709\u8fb9\u7c7b\u578b\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012": 771, "\u5728\u63a8\u8350\u573a\u666f\u4e2d\u5f88\u5e38\u89c1": 767, "\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d": 743, "\u5728\u6574\u4e2a\u56fe\u6279\u6b21\u4e0a\u8fdb\u884c\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3": 769, "\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5": 752, "\u5728\u672c\u4f8b\u4e2d\u7701\u7565": 771, "\u5728\u672c\u8282\u4e2d": 738, "\u5728\u6784\u9020\u51fd\u6570\u4e2d": 763, "\u5728\u67d0\u4e9b\u573a\u666f\u4e2d": 770, "\u5728\u67d0\u79cd\u7c7b\u578b\u7684\u8fb9\u4e0a\u4e3a\u6bcf\u4e00\u6761\u8fb9\u9884\u6d4b\u7684\u7aef\u5230\u7aef\u6a21\u578b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a": 767, "\u5728\u6bcf\u4e2a\u5206\u533a\u7684\u6587\u4ef6\u5939\u5185": 740, "\u5728\u6bcf\u4e2a\u751f\u6210\u5757\u5217\u8868\u7684\u8fed\u4ee3\u4e2d": 761, "\u5728\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u4e2d\u7684\u8282\u70b9\u6570\u4e0a\u5b9e\u73b0\u5206\u533a\u95f4\u7684\u5e73\u8861": 740, "\u5728\u6d88\u606f\u4f20\u9012\u65f6": 751, "\u5728\u6d88\u606f\u51fd\u6570\u91cc": 768, "\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 739, "\u5728\u7528\u591a\u5c42\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 756, "\u5728\u7b2c9\u884c\u547d\u540d\u4e3a": 745, "\u5728\u7c7bdgldataset\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u5904\u7406\u6a21\u7248\u7684\u6d41\u7a0b\u56fe": 733, "\u5728\u7f16\u5199\u5b8c\u8fd9\u4e9b\u4ee3\u7801\u4e4b\u540e": 736, "\u5728\u8bad\u7ec3\u5668\u8fdb\u7a0b\u4e2d": 739, "\u5728\u8bad\u7ec3\u671f\u95f4": 740, "\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u63a9\u7801\u533a\u5206\u8bad\u7ec3": 767, "\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 756, "\u5728\u8fb9\u4e0a\u5c06\u4ee5\u4e0a\u4e24\u90e8\u5206\u7ebf\u6027\u64cd\u4f5c\u7684\u7ed3\u679c\u76f8\u52a0": 752, "\u5728\u8fb9\u96c6": 743, "\u5728\u8fd9\u4e2a\u573a\u666f\u91cc": 769, "\u5728\u8fd9\u4e2a\u6279\u6b21\u7684\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u4ee5\u66f4\u65b0\u8282\u70b9\u6216\u8fb9\u7684\u7279\u5f81": 769, "\u5728\u8fd9\u4e9b\u673a\u5668\u4e0a": 741, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": 764, "\u5728\u8fd9\u91cc\u53ef\u4ee5\u590d\u7528\u4e0a\u8ff0\u63d0\u5230\u7684": 767, "\u5728\u8fdb\u884c\u63a8\u65ad\u65f6": 758, "\u5757": [756, 757, 761], "\u5757\u4e5f\u53ef\u7528\u4e8e\u5f02\u6784\u56fe": 756, "\u5757\u7684\u8f93\u51fa\u8282\u70b9\u4e3a": 756, "\u578b\u8282\u70b9\u5230": 748, "\u578b\u8282\u70b9\u7684\u8fb9": 748, "\u57fa\u4e8egnn\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u9700\u9884\u6d4b\u7684\u8282\u70b9\u5bf9": 770, "\u5904\u7406\u548c\u4fdd\u5b58\u56fe\u6570\u636e\u63d0\u4f9b\u4e86\u7b80\u5355\u800c\u5e72\u51c0\u7684\u89e3\u51b3\u65b9\u6848": 732, "\u5904\u7406\u5b8c\u6210\u7684\u6570\u636e\u96c6\u7684\u4fdd\u5b58\u76ee\u5f55": 733, "\u5904\u7406\u6570\u636e": [732, 749], "\u5904\u7406\u8fc7\u7684\u6570\u636e\u6bd4\u8f83\u5927": 737, "\u590d\u5236\u5230": 741, "\u590d\u5236\u5230gpu": 746, "\u591a\u5c42\u611f\u77e5\u673a": 767, "\u5927\u90e8\u5206\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u9988\u8ba1\u7b97\u4e2d\u4ec5\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5f15\u5165\u56fe\u7ed3\u6784\u4fe1\u606f": 768, "\u5982": [744, 747, 759, 766, 767, 771], "\u5982panda": 744, "\u5982\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684": 745, "\u5982\u4e0b": 745, "\u5982\u4e0b\u4ee3\u7801\u6240\u6f14\u793a\u7684": 756, "\u5982\u4e0b\u4f8b\u6240\u793a": 747, "\u5982\u4e0b\u56fe\u6240\u793a": [755, 756], "\u5982\u4e0b\u6240\u793a": [756, 757], "\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u6240\u793a": 747, "\u5982\u4ee3\u7801\u6240\u793a": 736, "\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a": 739, "\u5982\u524d\u6240\u8ff0": 739, "\u5982\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b": 745, "\u5982\u63cf\u8ff0\u8282\u70b9\u4e4b\u95f4\u7684\u5bf9\u79f0\u5173\u7cfb": 743, "\u5982\u63cf\u8ff0\u975e\u5bf9\u79f0\u5173\u7cfb": 743, "\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684id\u76f8\u540c": 757, "\u5982\u679c\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u9002\u7528": 748, "\u5982\u679c\u4ee5\u6a21\u578b\u9009\u62e9\u4e3a\u76ee\u7684\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u8bc4\u4ef7\u6307\u6807": 758, "\u5982\u679c\u4f7f\u7528": 747, "\u5982\u679c\u5177\u6709\u6700\u5927id\u7684\u8282\u70b9\u6ca1\u6709\u8fb9": 747, "\u5982\u679c\u539f\u56fe\u5305\u542b\u591a\u79cd\u8282\u70b9\u7c7b\u578b": 760, "\u5982\u679c\u539f\u56fe\u53ea\u5305\u542b\u4e00\u79cd\u8282\u70b9\u7c7b\u578b": 760, "\u5982\u679c\u539f\u59cb\u6570\u636e\u5df2\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6": 736, "\u5982\u679c\u53ea\u9884\u6d4b": 771, "\u5982\u679c\u540e\u7aef\u6846\u67b6\u4e5f\u63d0\u4f9b\u4e86\u4ece\u78c1\u76d8\u4e2d\u4fdd\u5b58\u6216\u52a0\u8f7d\u5f20\u91cf\u7684\u5de5\u5177": 744, "\u5982\u679c\u56fe\u662f\u5f02\u6784\u7684": 771, "\u5982\u679c\u56fe\u91cc\u53ea\u6709\u4e00\u79cd\u8282\u70b9\u6216\u8fb9\u7c7b\u578b": 748, "\u5982\u679c\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8005\u8fb9\u7684\u6570\u91cf\u5c0f\u4e8e": 747, "\u5982\u679c\u5bf9\u901f\u5ea6\u4e0d\u592a\u5173\u6ce8\u7684\u8bdd": 744, "\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 761, "\u5982\u679c\u6570\u636e\u96c6\u662f\u4e00\u4e2azip\u6587\u4ef6": 734, "\u5982\u679c\u6587\u4ef6\u662f": 734, "\u5982\u679c\u662f\u4ece\u56fe\u4e2d\u5f97\u5230\u7684\u8fb9\u754c": 756, "\u5982\u679c\u672a\u63d0\u4f9b\u5177\u4f53\u7aef\u53e3": 741, "\u5982\u679c\u6a21\u578b\u540c\u65f6\u5177\u6709\u8282\u70b9\u5d4c\u5165\u548c\u89c4\u5219\u7684\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 739, "\u5982\u679c\u7279\u5f81\u5b58\u50a8\u5728": 761, "\u5982\u679c\u7528\u6237\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u7684\u6a21\u578b\u8ba1\u7b97\u4e86\u8282\u70b9\u7684\u8868\u793a": 767, "\u5982\u679c\u7528\u6237\u53ea\u60f3\u66f4\u65b0\u56fe\u4e2d\u7684\u90e8\u5206\u8282\u70b9": 754, "\u5982\u679c\u7528\u6237\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u4e00\u6b21\u4ec5\u4f7f\u7528\u4e00\u5f20\u56fe": 769, "\u5982\u679c\u7528\u6237\u5df2\u6709\u4e00\u4e2a\u7528\u4e8e\u6574\u4e2a\u56fe\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u4f20\u9012\u6a21\u5757": 760, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u6570\u636e\u96c6\u6216\u5176\u4ed6\u517c\u5bb9": 766, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5220\u9664\u5f02\u6784\u56fe\u4e2d\u7684\u53cd\u5411\u8fb9": 757, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5f00\u53d1\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 757, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 761, "\u5982\u679c\u7528\u6237\u60f3\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u4e00\u4e2a\u5206\u6570": 767, "\u5982\u679c\u7528\u6237\u60f3\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u4ee3\u7801\u800c\u53c8\u4e0d\u60f3\u81ea\u5df1\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u6b63\u786e\u7684\u76ee\u5f55\u4e2d": 734, "\u5982\u679c\u7528\u6237\u60f3\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 759, "\u5982\u679c\u7528\u6237\u60f3\u9884\u6d4b\u8fb9\u7c7b\u578b\u4e3a": 767, "\u5982\u679c\u7528\u6237\u6709\u5305\u542b\u6570\u767e\u4e07\u751a\u81f3\u6570\u5341\u4ebf\u4e2a\u8282\u70b9\u6216\u8fb9\u7684\u5927\u56fe": 755, "\u5982\u679c\u7528\u6237\u6a21\u578b\u5728\u5168\u56fe\u4e0a\u662f\u6309\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u7684": 761, "\u5982\u679c\u7528\u6237\u719f\u6089": 770, "\u5982\u679c\u7528\u6237\u719f\u6089\u5982\u4f55\u5b9a\u5236\u7528\u4e8e\u66f4\u65b0\u6574\u4e2a\u540c\u6784\u56fe\u6216\u5f02\u6784\u56fe\u7684gnn\u6a21\u5757": 760, "\u5982\u679c\u7528\u6237\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 734, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570\u65e0\u6cd5\u7528\u5185\u7f6e\u51fd\u6570\u5b9e\u73b0": 751, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757\u5168\u4f7f\u7528\u7684\u662fdgl\u5185\u7f6e\u6a21\u5757": 761, "\u5982\u679c\u7528\u6237\u8981\u5f15\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 739, "\u5982\u679c\u8981\u4ee5\u67d0\u79cd\u6982\u7387\u5c06\u79cd\u5b50\u8282\u70b9\u7684\u5165\u8fb9\u968f\u673a\u5254\u9664": 756, "\u5982\u679c\u8bad\u7ec3\u811a\u672c\u91cc\u5305\u542b\u9700\u8981\u5728\u670d\u52a1\u5668": 739, "\u5982\u679c\u8be5api\u6ca1\u6709\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0id": 740, "\u5982\u679c\u8be5\u7c7b\u7ee7\u627f\u81ea": 734, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u4e0d\u662f\u5757": 760, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u662f\u4e00\u4e2a\u5757": 760, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5f20\u91cf\u5bf9": 760, "\u5982\u679c\u9700\u8981\u7684\u8bdd": 771, "\u5b50\u56fe\u5728dgl\u4e2d\u79f0\u4e3a\u533a\u5757": 764, "\u5b50\u56fe\u5757\u7684\u60c5\u51b5": 764, "\u5b50\u56fe\u662f\u4ece\u76f8\u540c\u7684\u6570\u636e\u52a0\u8f7d\u5668\u4ea7\u751f\u7684": 757, "\u5b50\u56fe\u91c7\u6837\u548c\u90bb\u5c45\u91c7\u6837\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11\u7528gpu\u8bad\u7ec3gnn\u6a21\u578b\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6d88\u8017": 758, "\u5b50\u6a21\u5757\u6839\u636e\u805a\u5408\u7c7b\u578b\u800c\u6709\u6240\u4e0d\u540c": 763, "\u5b50\u7c7b\u4e4b\u5916\u5b8c\u6210": 733, "\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570": 733, "\u5b58\u50a8\u4e86\u5212\u5206\u63a9\u7801": 736, "\u5b58\u50a8\u4e86\u8f93\u5165\u8282\u70b9\u7279\u5f81": 768, "\u5b58\u50a8\u5206\u533a\u7684\u56fe\u7ed3\u6784\u4ee5\u53ca\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u4e00\u4e9b\u5143\u6570\u636e": 740, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u533aid": 740, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u7684\u5206\u533aid": 740, "\u5b58\u50a8\u5c5e\u4e8e\u8be5\u5206\u533a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u7279\u5f81": 740, "\u5b58\u50a8\u6587\u4ef6\u7684\u8def\u5f84": 734, "\u5b58\u50a8\u9690\u5c42\u8868\u793a\u9700\u8981": 755, "\u5b5f\u51e1\u8363": 749, "\u5b83\u4e3a": 739, "\u5b83\u4ece\u805a\u5408\u4e0e\u66f4\u65b0\u7684\u89d2\u5ea6\u5f52\u7eb3\u603b\u7ed3\u4e86\u591a\u79cdgnn\u6a21\u578b\u7684\u5b9e\u73b0": 750, "\u5b83\u4eec\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684api\u76f8\u4f3c": 738, "\u5b83\u4eec\u4e3b\u8981\u88ab\u7528\u6765\u63d0\u4f9b\u56fe\u4fe1\u606f": 739, "\u5b83\u4eec\u53ea\u5305\u62ec\u4e00\u79cd\u5173\u7cfb": 748, "\u5b83\u4eec\u5b58\u50a8\u8282\u70b9\u548c\u8fb9id\u4e0e\u5206\u533aid\u4e4b\u95f4\u7684\u6620\u5c04": 740, "\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e": 739, "\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f\u5b57\u7b26\u4e32": 751, "\u5b83\u4eec\u786e\u4fdd\u6240\u6709\u90e8\u5206\u90fd\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u548c\u8fb9": 739, "\u5b83\u4eec\u901a\u8fc7": 743, "\u5b83\u4eec\u9075\u5faa\u4e86\u7531": 732, "\u5b83\u4eec\u90fd\u662f\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9": 764, "\u5b83\u5141\u8bb8\u7528\u6237\u4e3a\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u90e8\u5206\u90bb\u5c45\u8282\u70b9\u4ee5\u6c47\u805a\u4fe1\u606f": 756, "\u5b83\u5177\u6709": 767, "\u5b83\u5177\u6709\u4e0e\u5e38\u89c4\u5f20\u91cf\u76f8\u540c\u7684api": 739, "\u5b83\u5206\u6279\u8fed\u4ee3\u8bad\u7ec3\u8282\u70b9id\u6570\u7ec4": 761, "\u5b83\u52a0\u8f7d\u5206\u533a\u6570\u636e": 739, "\u5b83\u5305\u62ec": 765, "\u5b83\u53ef\u4ee5\u7528\u6700\u5c11\u7684\u8fb9\u5206\u5272\u4ee5\u751f\u6210\u5206\u533a": 740, "\u5b83\u53ef\u83b7\u53d6\u8282\u70b9\u7684\u6240\u6709\u90bb\u5c45": 761, "\u5b83\u5728\u5355\u4e2aapi\u8c03\u7528\u91cc\u5408\u5e76\u4e86\u6d88\u606f\u751f\u6210": 751, "\u5b83\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6240\u6709\u8ba1\u7b97": 739, "\u5b83\u5b9e\u73b0\u4e86\u7528\u4e8e\u5904\u7406\u56fe\u6570\u636e\u7684\u57fa\u672c\u6a21\u7248": 733, "\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9": 759, "\u5b83\u5c06\u4ee5\u72ec\u7acb\u6a21\u5f0f\u8fd0\u884c": 739, "\u5b83\u5c06\u751f\u6210\u4e24\u4e2a\u989d\u5916\u7684numpy\u6587\u4ef6": 740, "\u5b83\u5e94\u5f53\u4ee5\u539f\u56fe": 759, "\u5b83\u5e94\u8be5\u7ee7\u627f": 762, "\u5b83\u6307\u5b9a\u8282\u70b9\u96c6\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u7c7b\u578b\u7ea6\u675f": 748, "\u5b83\u63a5\u53d7\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408\u4f5c\u4e3a\u8f93\u5165": 747, "\u5b83\u662fgraphsage\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u56fe\u5377\u79ef\u6a21\u5757": 771, "\u5b83\u662f\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 761, "\u5b83\u7528": 738, "\u5b83\u7ee7\u627f\u81ea": 733, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8282\u70b9": 751, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8fb9": 751, "\u5b83\u8fd4\u56de\u4ee5\u8fb9\u7c7b\u578b\u4e3a\u952e": 759, "\u5b83\u901a\u8fc7\u5c06\u8fb9\u4e0a\u7279\u5f81\u4e0e\u5176\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408\u6765\u751f\u6210\u6d88\u606f": 750, "\u5b8b\u6021\u7136": 749, "\u5b8c\u5168\u76f8\u540c": 757, "\u5b8c\u6574\u7684\u5185\u7f6e\u91c7\u6837\u65b9\u6cd5\u6e05\u5355": 761, "\u5b98\u65b9\u7684": 735, "\u5b9a\u4e49": [739, 748], "\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u9010\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u8ba1\u7b97": 750, "\u5b9a\u4e49\u6a21\u578b\u548c\u4f18\u5316\u5668": 738, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 761, "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [749, 755, 757, 761], "\u5b9e\u4f8b\u5316heterographconv": 771, "\u5b9e\u4f8b\u5316sageconv": 771, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad\u7684\u65b9\u6cd5\u4f9d\u7136\u9700\u8981\u4f7f\u7528": 758, "\u5b9e\u73b0\u903b\u8f91\u4e0e\u6d88\u606f\u4f20\u9012\u7ea7\u522b\u7684api": 765, "\u5b9e\u9645\u5e94\u7528\u4e2d": 770, "\u5bf9dataloader\u8fdb\u884c\u8fed\u4ee3": 761, "\u5bf9\u4e00\u6761\u8fb9\u8ba1\u7b97\u9884\u6d4b\u503c\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5c06\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u51fd\u6570": 767, "\u5bf9\u4e8e": 760, "\u5bf9\u4e8emxnet\u540e\u7aef": 762, "\u5bf9\u4e8epytorch\u540e\u7aef": 762, "\u5bf9\u4e8etensorflow\u540e\u7aef": 762, "\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26\u6743\u91cd\u7684\u56fe": 768, "\u5bf9\u4e8e\u4e00\u4e2a\u52a0\u6743\u56fe": 768, "\u5bf9\u4e8e\u4e00\u4e2a\u6307\u5b9a\u7684\u5c42": 758, "\u5bf9\u4e8e\u4e00\u5143\u51fd\u6570": 751, "\u5bf9\u4e8e\u4e00\u822c\u7684pytorch\u6a21\u5757": 763, "\u5bf9\u4e8e\u4e8c\u5143\u51fd\u6570": 751, "\u5bf9\u4e8e\u4e8c\u5206\u56fe": 765, "\u5bf9\u4e8e\u5168\u90bb\u5c45\u91c7\u6837": 761, "\u5bf9\u4e8e\u5177\u6709\u4e24\u4e2a\u5173\u7cfb": 748, "\u5bf9\u4e8e\u5177\u6709\u5341\u4ebf\u7ea7\u6570\u91cf\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 740, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3": 739, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u8bc4\u4f30": 739, "\u5bf9\u4e8e\u52a0\u6743\u56fe": 745, "\u5bf9\u4e8e\u540c\u6784\u56fe\u4e0a\u7684\u5168\u56fe\u8bad\u7ec3": 764, "\u5bf9\u4e8e\u56fe\u4e0a\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b": 771, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc": 763, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4": 771, "\u5bf9\u4e8e\u591a\u4e2a\u8282\u70b9": 747, "\u5bf9\u4e8e\u5e95\u5c42\u7684\u91c7\u6837api": 739, "\u5bf9\u4e8e\u5f97\u5206\u7684\u9884\u6d4b": 759, "\u5bf9\u4e8e\u65e0\u5411\u7684\u56fe": 747, "\u5bf9\u4e8e\u65e0\u6cd5\u5168\u90e8\u8f7d\u5165\u7684\u60c5\u51b5": 766, "\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5": 752, "\u5bf9\u4e8e\u6d88\u606f\u4f20\u9012": 751, "\u5bf9\u4e8e\u7279\u5b9a\u76ee\u6807\u8282\u70b9": 763, "\u5bf9\u4e8e\u79bb\u7ebf\u63a8\u65ad\u7684\u793a\u4f8b": 758, "\u5bf9\u4e8e\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 739, "\u5bf9\u4e8e\u8981\u62f7\u8d1d\u7684\u7279\u5f81": 748, "\u5bf9\u4e8e\u8bad\u7ec3\u811a\u672c": 738, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u6570\u91cf": 760, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u7279\u5f81": 760, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u6570\u91cf": 760, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 760, "\u5bf9\u4e8e\u8fb9\u56de\u5f52\u4efb\u52a1": 767, "\u5bf9\u4e8e\u8fd9\u4e2a\u5757": 756, "\u5bf9\u4e8e\u90bb\u5c45\u91c7\u6837": 756, "\u5bf9\u5176\u8fdb\u884c\u62c6\u5206": 739, "\u5bf9\u56fe\u8fdb\u884c\u5206\u533a\u7684\u8ba1\u7b97\u673a": 741, "\u5bf9\u5b83\u6240\u6709\u8282\u70b9\u7279\u5f81\u53d6\u5e73\u5747\u503c\u7684\u805a\u5408\u8bfb\u51fa\u516c\u5f0f\u5982\u4e0b": 769, "\u5bf9\u5e94\u4e8e\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b": 748, "\u5bf9\u5e94\u7740\u4e0b\u56fe\u6240\u793a\u7684\u5305\u542b4\u4e2a\u8282\u70b9\u7684\u56fe": 747, "\u5bf9\u5f02\u6784\u56fe\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u7684\u63a5\u53e3\u662f": 753, "\u5bf9\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u5408\u5e76\u7528\u6237\u6307\u5b9a\u7684\u7279\u5f81": 748, "\u5bf9\u6240\u6709\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u6c42\u548c": 769, "\u5bf9\u6bcf\u4e2a\u5173\u7cfb\u8ba1\u7b97\u548c\u805a\u5408\u6d88\u606f": 753, "\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u6d88\u606f": 753, "\u5bf9\u6bcf\u6761\u8fb9\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u8868\u793a": 767, "\u5bf9\u8c61": [739, 740, 744, 747], "\u5bf9\u8c61\u65f6": 744, "\u5bf9\u8c61\u67098\u6761\u8fb9": 744, "\u5bf9\u8c61\u6d88\u5931": 739, "\u5bf9\u8c61\u7684api": 735, "\u5bf9\u8c61\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 747, "\u5bf9\u8c61\u7684\u5217\u8868\u548c\u6807\u7b7e\u5f20\u91cf\u7684\u5217\u8868": 736, "\u5bf9\u8c61\u7684\u8282\u70b9\u548c\u8fb9\u53ef\u5177\u6709\u591a\u4e2a\u7528\u6237\u5b9a\u4e49\u7684": 745, "\u5bf9\u8f93\u5165\u8282\u70b9\u7279\u5f81": 760, "\u5bfc\u5165\u548c\u4fdd\u5b58": 733, "\u5bfc\u5165\u5904\u7406\u540e\u7684\u6570\u636e": 733, "\u5bfc\u5165\u6570\u636e": 736, "\u5c06": 760, "\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 740, "\u5c06\u4e00\u5f20\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u805a\u5408\u6210\u6574\u5f20\u56fe\u7684\u56fe\u8868\u793a": 769, "\u5c06\u4e0a\u8ff0\u56fe\u4f5c\u4e3a\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u8f93\u5165": 767, "\u5c06\u4e0e\u8f93\u5165\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u7279\u5f81\u52a0\u8f7d\u5230gpu\u4e0a": 761, "\u5c06\u4e0e\u8f93\u51fa\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u6807\u7b7e\u52a0\u8f7d\u5230gpu\u4e0a": 761, "\u5c06\u4e3a\u7a7a": 764, "\u5c06\u4ee5\u5206\u5e03\u5f0f\u6a21\u5f0f\u8fd0\u884c": 739, "\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u56fe\u7684\u5217\u8868": 761, "\u5c06\u4f1a\u62a5\u9519": 756, "\u5c06\u5176\u547d\u540d\u4e3a": 745, "\u5c06\u539f\u59cb\u6570\u636e\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8": 733, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe": 733, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 736, "\u5c06\u5757\u5217\u8868\u548c\u8f93\u5165\u8282\u70b9\u7279\u5f81\u4f20\u5165\u591a\u5c42gnn\u5e76\u83b7\u53d6\u8f93\u51fa": 761, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u4fdd\u5b58\u81f3": 733, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u7f13\u5b58\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 737, "\u5c06\u5f97\u5230\u7684\u56fe\u548c\u8f93\u5165\u7279\u5f81\u4f20\u5165\u4e0a\u8ff0\u6a21\u578b": 759, "\u5c06\u5fc5\u8981\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81\u590d\u5236\u5230gpu\u4e0a": 758, "\u5c06\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 736, "\u5c06\u6570\u636e\u96c6\u7684\u6709\u7528\u4fe1\u606f": 737, "\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55self": 734, "\u5c06\u6bcf\u4e2a\u7c7b\u578b\u6d88\u606f\u805a\u5408\u7684\u7ed3\u679c\u76f8\u52a0": 753, "\u5c06\u88ab\u6e05\u9664": 751, "\u5c06\u8ba1\u7b97\u673a": 741, "\u5c06\u8f93\u51fa\u590d\u5236\u56decpu": 758, "\u5c06\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 768, "\u5c0f\u6279\u6b21\u662f\u4e00\u4e2a\u5143\u7ec4": 735, "\u5c24\u5176\u662f\u5728\u5305\u542b\u5927\u91cf\u672a\u6807\u8bb0\u6570\u636e\u7684\u534a\u76d1\u7763\u7cfb\u7edf\u4e2d": 758, "\u5c31\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 756, "\u5c31\u597d\u50cf\u8fd9\u4e9b\u8fb9\u6839\u672c\u4e0d\u5b58\u5728\u4e00\u6837": 757, "\u5c31\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u7684\u5e73\u5747\u503c\u8bfb\u51fa\u8ba1\u7b97": 769, "\u5c31\u662f\u56fe\u7684\u6a21\u5f0f": 748, "\u5c3d\u53ef\u80fd": 751, "\u5c42\u56fe\u5377\u79ef\u7f51\u7edc": 755, "\u5c42\u8fdb\u884c\u8ba1\u7b97": 755, "\u5c42\u9009\u62e9\u8be5\u6279\u6b21\u8282\u70b9\u7684\u5168\u90e8\u6216\u90e8\u5206\u90bb\u5c45\u8282\u70b9": 755, "\u5c5e\u4e8e\u53e6\u4e00\u7c7b\u578b\u7684\u53cd\u5411\u8fb9": 757, "\u5d4c\u5165": 738, "\u5df2\u7ecf\u8d2d\u4e70": 743, "\u5e26\u6807\u7b7e\u548c\u672a\u5e26\u6807\u7b7e": 740, "\u5e38\u7528\u7684\u5f02\u6784\u56fe": 743, "\u5e38\u7528\u7684\u805a\u5408\u7c7b\u578b\u5305\u62ec": 763, "\u5e38\u89c1\u7684\u66f4\u65b0\u64cd\u4f5c\u662f\u6839\u636e\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u6765\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u548c\u8fdb\u884c\u5f52\u4e00\u5316": 764, "\u5e38\u89c1\u7684\u805a\u5408\u65b9\u6cd5\u5305\u62ec": 769, "\u5e76\u4e14\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u901a\u4fe1": 739, "\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u8c03\u7528\u5b83\u65f6": 739, "\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u7ef4\u5ea6\u5e7f\u64ad": 751, "\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7": 756, "\u5e76\u4e14\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 751, "\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8868\u793a\u8bad\u7ec3": 739, "\u5e76\u4e14\u60f3\u5c06\u5176\u7528\u4e8e\u5757": 760, "\u5e76\u4e14\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u7684\u5b57\u5178": [757, 759], "\u5e76\u4e14\u6709\u591a\u4e2a\u5df2\u6709\u7684api\u53ef\u4ee5\u7b80\u5316\u6b64\u64cd\u4f5c": 733, "\u5e76\u4e14\u7528\u6237\u4e0d\u5e0c\u671b\u5728\u5efa\u6a21\u4e2d\u533a\u5206\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b": 748, "\u5e76\u4e14\u7528\u6237\u5e0c\u671b\u5bf9\u5d4c\u5165\u6267\u884c\u7a00\u758f\u66f4\u65b0": 739, "\u5e76\u4e14\u805a\u5408\u51fd\u6570\u7684\u8f93\u51fa\u503c\u5168\u4e3a0": 764, "\u5e76\u4e14\u904d\u5386\u79cd\u5b50\u8282\u70b9\u751f\u6210\u4e00\u7cfb\u5217\u7684\u5757": 756, "\u5e76\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u51fa\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u53ef\u80fd\u5f97\u5206": 767, "\u5e76\u4e3a\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4f7f\u7528\u4e00\u79cd\u56fe\u5377\u79ef\u6a21\u5757": 771, "\u5e76\u4ece\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 767, "\u5e76\u4f5c\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u6700\u7ec8\u7ed3\u679c": 771, "\u5e76\u4f7f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8bad\u7ec3\u5668\u5747\u53ef\u8bbf\u95ee\u5b83\u4eec": 739, "\u5e76\u5411\u672c\u5730\u8bad\u7ec3\u5668\u8fd4\u56de\u4e00\u90e8\u5206": 739, "\u5e76\u5411\u672c\u5730\u8fdb\u7a0b\u8fd4\u56de\u8282\u70b9\u7684\u5b50\u96c6": 739, "\u5e76\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\u4f7f\u7528": 767, "\u5e76\u5728\u540c\u6837\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u5c06\u5206\u533a\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 738, "\u5e76\u5728\u6240\u6709\u673a\u5668\u4e0a\u542f\u52a8\u8bad\u7ec3\u4efb\u52a1": 738, "\u5e76\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u8981\u8fdb\u884c\u591a\u8f6e\u7684\u4fe1\u606f\u4f20\u9012": 771, "\u5e76\u5bf9\u5b83\u4eec\u5e94\u7528\u76f8\u540c\u7684\u64cd\u4f5c": 748, "\u5e76\u5bf9\u8282\u70b9\u548c\u8fb9\u91c7\u6837\u4ee5\u751f\u6210\u7528\u4e8e\u8bad\u7ec3\u7684\u5c0f\u6279\u6b21\u6570\u636e": 738, "\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5757": 756, "\u5e76\u5c06\u5206\u533a\u6570\u636e\u81ea\u52a8\u52a0\u8f7d\u5230\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e2d": 739, "\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u7a00\u758f\u4f18\u5316\u5668": 739, "\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d": 739, "\u5e76\u5c06\u751f\u6210\u7684\u5757\u5217\u8868\u653e\u5230gpu\u4e0a": 757, "\u5e76\u5c06\u751f\u6210\u7684\u5b50\u56fe\u5217\u8868\u653e\u5230gpu\u4e0a": 761, "\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728outputs\u5b57\u5178\u4e2d": 765, "\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237": 765, "\u5e76\u5c06\u8f93\u51fa\u4f5c\u4e3a\u8282\u70b9\u7684\u65b0\u7279\u5f81": 751, "\u5e76\u5c55\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u7ba1\u9053\u7684\u6bcf\u4e2a\u7ec4\u4ef6": 732, "\u5e76\u63d0\u53d6\u8f93\u51fa\u7684user\u8282\u70b9\u5d4c\u5165": 771, "\u5e76\u6709\u53ef\u80fd\u5229\u7528\u8fd9\u70b9": 757, "\u5e76\u7528\u5b83\u6784\u9020\u4e00\u4e2a\u5f02\u6784\u56fe": 748, "\u5e76\u7528\u5bf9\u5e94\u7684\u4e24\u4e2a\u7aef\u70b9id\u8868\u793a\u4e00\u6761\u8fb9": 747, "\u5e76\u8ba1\u7b97\u672c\u5730\u8fdb\u7a0b\u7684\u8282\u70b9": 738, "\u5e76\u8df3\u8fc7\u4ece\u6587\u4ef6\u6784\u5efa\u56fe\u7684\u5b9e\u73b0": 736, "\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u7684\u5b57\u5178": 771, "\u5e76\u8fd4\u56de\u6e90\u8282\u70b9id\u6570\u7ec4\u548c\u76ee\u6807\u8282\u70b9id\u6570\u7ec4": 759, "\u5e76\u901a\u8fc7\u5728\u8bad\u7ec3\u8282\u70b9\u4e0a\u6bd4\u8f83\u9884\u6d4b\u548c\u771f\u5b9e\u6807\u7b7e\u6765\u8ba1\u7b97\u635f\u5931": 771, "\u5e76\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u4e2d\u5177\u6709\u5e42\u5f8b\u5206\u5e03\u7684\u56fe\u8fdb\u884c\u4e86\u4f18\u5316": 740, "\u5e94\u7528\u56fe\u5377\u79ef\u548c\u6fc0\u6d3b\u51fd\u6570": 769, "\u5e95\u5c42api\u8981\u6c42\u7528\u6237\u7f16\u5199\u4ee3\u7801\u4ee5\u660e\u786e\u5b9a\u4e49\u5982\u4f55\u5bf9\u8282\u70b9\u5c42\u8fdb\u884c\u91c7\u6837": 739, "\u5efa\u7acb\u70b9\u548c\u8fb9\u7279\u5f81": 767, "\u5efa\u8bae\u7684\u5b9e\u73b0\u662f\u5c06\u7ebf\u6027\u64cd\u4f5c\u5206\u6210\u4e24\u90e8\u5206": 752, "\u5f02\u6784\u56fe": [742, 743, 749, 753, 764], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u540c\u6784\u56fe\u7684\u6a21\u578b\u8bad\u7ec3\u662f\u4e00\u6837\u7684": 771, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": [749, 762], "\u5f02\u6784\u56fe\u4e0a\u7684\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206": 753, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 761, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 770, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u548c\u540c\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6ca1\u6709\u592a\u5927\u533a\u522b": 770, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u6a21\u578b\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u51e0\u4e4e\u76f8\u540c": 759, "\u5f02\u6784\u56fe\u4e2d\u8282\u70b9\u7c7b\u578b\u7684\u987a\u5e8f": 748, "\u5f02\u6784\u56fe\u4e2d\u8fb9\u7c7b\u578b\u7684\u987a\u5e8f": 748, "\u5f02\u6784\u56fe\u4e3a\u7ba1\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u53ca\u5176\u76f8\u5173\u7279\u5f81\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u63a5\u53e3": 748, "\u5f02\u6784\u56fe\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u8fb9\u7684\u7c7b\u578b": 766, "\u5f02\u6784\u56fe\u7684\u5377\u79ef\u64cd\u4f5c\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u53c2\u6570": 765, "\u5f02\u6784\u56fe\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u51e0\u4e4e\u76f8\u540c": 757, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 771, "\u5f02\u6784\u56fe\u91cc\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 748, "\u5f02\u6784\u7684": 743, "\u5f20\u5efa": 749, "\u5f20\u6000\u6587": 749, "\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570\u5fc5\u987b\u5728gpu\u4e0a": 746, "\u5f52\u4e00\u5316": 764, "\u5f52\u4e00\u5316\u53ef\u4ee5\u662fl2\u5f52\u4e00\u5316": 763, "\u5f53": 755, "\u5f531\u4e2a\u8282\u70b9\u5165\u5ea6\u4e3a0\u65f6": 764, "\u5f53\u4e00\u53f0\u673a\u5668\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u65f6": 739, "\u5f53\u4f7f\u7528": 744, "\u5f53\u524d": 739, "\u5f53\u524d\u4ec5\u652f\u6301\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 739, "\u5f53\u524d\u7248\u672c\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3api\u4ec5\u652f\u6301pytorch\u540e\u7aef": 738, "\u5f53\u524d\u7248\u672c\u7684\u5b9e\u73b0\u4ec5\u652f\u6301\u5177\u6709\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 738, "\u5f53\u5f15\u5165\u591a\u79cd\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u540e": 748, "\u5f53\u7528\u6237\u4f7f\u7528\u542f\u52a8\u811a\u672c\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 739, "\u5f53\u7528\u6237\u5728python\u547d\u4ee4\u884c\u6216jupyt": 739, "\u5f53\u811a\u672c\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 739, "\u5f53\u8bad\u7ec3\u811a\u672c\u5728\u8bad\u7ec3\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 739, "\u5f53\u8f93\u5165\u7279\u5f81": 764, "\u5f53\u8fb9\u7c7b\u578b\u552f\u4e00\u5730\u786e\u5b9a\u4e86\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u7684\u7c7b\u578b\u65f6": 748, "\u5f90\u4e1c\u8f89": 749, "\u5f97\u5206": 770, "\u5f97\u5230": 767, "\u5f97\u5230\u5757\u4e2d\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u521d\u59cb\u8282\u70b9id": 756, "\u5f97\u5230\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 760, "\u5f97\u5230\u8fb9id\u5230\u8f93\u5165\u8fb9\u754c\u4e2d\u8fb9\u7684\u521d\u59cbid\u7684\u6620\u5c04": 756, "\u5fc5\u987b\u5728": 739, "\u5fc5\u987b\u5728dgl\u7684\u4efb\u4f55\u5176\u4ed6\u5206\u5e03\u5f0fapi\u4e4b\u524d": 739, "\u5fc5\u987b\u5728\u521d\u59cb\u5316": 739, "\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u7684\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8c03\u7528\u542f\u52a8\u811a\u672c": 741, "\u60c5\u51b5\u4f1a\u6709\u6240\u4e0d\u540c": 757, "\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f": 743, "\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570": 756, "\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u90bb\u5c45\u91c7\u6837\u7b56\u7565": 756, "\u60f3\u8981\u5b9e\u73b0\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u517c\u5bb9\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 755, "\u60f3\u8981\u7528dgl\u63d0\u4f9b\u7684\u90bb\u5c45\u91c7\u6837\u5668\u505a\u8fb9\u5206\u7c7b": 757, "\u60f3\u8d2d\u4e70": 743, "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528g": 765, "\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528\u4e00\u4e2a\u96c6\u7fa4\u7684\u73af\u5883\u8bbe\u7f6e": 738, "\u6216": [743, 748, 760], "\u6216numpi": 747, "\u6216\u4e3a\u76f8\u5173\u5b9e\u4f53\u63a8\u8350\u8fdb\u884c\u6700\u8fd1\u90bb\u641c\u7d22\u6216\u6700\u5927\u5185\u79ef\u641c\u7d22": 770, "\u6216\u65e0\u5411\u56fe\u4e2d\u7684\u90bb\u5c45": 756, "\u6216\u662f": 743, "\u6216\u8005\u60f3\u8981\u5173\u4e8e\u5757\u7684\u66f4\u6df1\u5165\u7684\u4ecb\u7ecd": 761, "\u6216\u8005\u60f3\u8981\u5bf9\u5757\u7684\u6982\u5ff5\u6709\u66f4\u8be6\u7ec6\u7684\u4e86\u89e3": 757, "\u6240\u4ee5dgl\u4e0d\u63a8\u8350\u5728": 751, "\u6240\u4ee5\u5f53\u5c06\u65e0\u5411\u7684networkx\u56fe\u8f6c\u6362\u4e3a": 744, "\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u5c06\u5176\u9644\u52a0\u5230\u4f18\u5316\u5668\u4e0a\u4ee5\u8fdb\u884c\u5c0f\u6279\u91cf\u8bad\u7ec3": 739, "\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019": 737, "\u6240\u4ee5\u8fd9\u91cc\u96be\u4ee5\u679a\u4e3e\u6240\u6709\u9009\u9879": 744, "\u6240\u6709\u6d88\u606f\u4f20\u9012\u51fd\u6570": 769, "\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6709\u65b9\u5411\u7684": 747, "\u6240\u6709\u8282\u70b9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5b9e\u4f53": 743, "\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u5fc5\u987b\u8c03\u7528\u521b\u5efa": 739, "\u6240\u6709\u8fb9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5173\u7cfb": 743, "\u6240\u8ff0": 766, "\u6267\u884c\u542f\u52a8\u811a\u672c\u7684\u8ba1\u7b97\u673a": 741, "\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u5bf9\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u64cd\u4f5c": 751, "\u6269\u5c55\u4e3a": 764, "\u6279\u6b21": [749, 754, 761, 764, 766], "\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u5f20\u91cf\u5747\u901a\u8fc7\u5c06\u6240\u6709\u56fe\u4e0a\u7684\u76f8\u5e94\u7279\u5f81\u62fc\u63a5\u5f97\u5230": 769, "\u6279\u6b21\u5316\u7684\u56fe": 769, "\u6279\u91cf\u5f52\u4e00\u5316\u7b49": 769, "\u628a\u5b83\u5b58\u5728\u56fe\u4e2d\u7528\u6765\u505a\u6d88\u606f\u4f20\u9012": 753, "\u628a\u5b83\u7684\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\u53d8\u6210\u4e86\u4e00\u4e2a\u5c0f\u7684\u4e8c\u5206\u56fe": 756, "\u628a\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 768, "\u62bd\u53d6\u51fa\u6765": 765, "\u62c6\u5206\u8bad\u7ec3\u96c6": 738, "\u62f7\u8d1d\u8282\u70b9\u7279\u5f81": 748, "\u62f7\u8d1d\u8fb9\u7684\u7279\u5f81": 748, "\u62fc\u63a5": 752, "\u6307\u4ee3\u4e00\u6761": 747, "\u6307\u5411\u8282\u70b9": 747, "\u6307\u5b9a\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55\u6216\u5df2\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55": 733, "\u6307\u5b9a\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 741, "\u6307\u5b9a\u56fe\u7c7b\u578b": 764, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u5206\u533a\u6570\u636e\u7684\u76f8\u5bf9\u8def\u5f84": 741, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u7528\u6237\u7684\u8bad\u7ec3\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84": 741, "\u6307\u5b9a\u6bcf\u4e2a\u5173\u7cfb\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570": 753, "\u6307\u5b9a\u8bad\u7ec3\u673a\u5668\u4e2d\u5b58\u50a8\u4e0e\u5206\u5e03\u5f0f\u8bad\u7ec3\u6709\u5173\u7684\u6240\u6709\u6570\u636e\u7684\u76ee\u5f55": 741, "\u6307\u5b9a\u96c6\u7fa4\u7684ip\u914d\u7f6e\u6587\u4ef6": 741, "\u6307\u793a\u76f8\u5e94\u8282\u70b9\u548c\u8fb9\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7279\u5f81\u5b57\u6bb5\u540d": 751, "\u6362\u53e5\u8bdd\u8bf4": 739, "\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570": 751, "\u63a5\u53d7\u4e00\u4e2a\u5982\u4e0a\u6240\u8ff0\u7684\u53c2\u6570": 751, "\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178": 753, "\u63a5\u53d7\u6765\u81ea\u540e\u7aef\u6846\u67b6\u7684\u4efb\u4f55\u8bbe\u5907\u5bf9\u8c61": 746, "\u63a5\u53e3\u53ef\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5f81": 745, "\u63a5\u53e3\u7684\u91cd\u8981\u8bf4\u660e": 745, "\u63a5\u6536\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u5f20\u91cf\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 771, "\u63a5\u7740\u8c03\u7528\u7528\u6237\u9884\u5148\u6ce8\u518c\u5728\u8be5\u5173\u7cfb\u4e0a\u7684nn\u6a21\u5757": 765, "\u63a8\u65ad": 739, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [738, 749], "\u63a8\u65ad\u7b97\u6cd5\u4e0d\u540c\u4e8e\u8bad\u7ec3\u7b97\u6cd5": 758, "\u63a8\u65ad\u7b97\u6cd5\u5c06\u5305\u542b\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 758, "\u63a8\u7406\u671f\u95f4\u5b9a\u4f4d\u8282\u70b9": 740, "\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5e03\u5c14\u6570\u7ec4\u8868\u793a\u8bad\u7ec3": 739, "\u63a9\u7801": 733, "\u63a9\u7801\u5728pytorch\u548ctensorflow\u4e2d\u662fbool\u5f20\u91cf": 736, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee5\u56fe\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u62bd\u8c61": 742, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u540c\u6784\u56fe\u8282\u70b9\u5206\u7c7b\u7684\u4f8b\u5b50": 771, "\u63d0\u4f9b\u4e86\u4e00\u4e9b\u529f\u80fd": 739, "\u63d0\u4f9b\u4e86\u4e00\u5c0f\u90e8\u5206": 739, "\u63d0\u4f9b\u4e86\u51e0\u4e2aapi\u6765\u8bbf\u95ee\u56fe\u7ed3\u6784": 739, "\u63d0\u4f9b\u4e86\u5bf9": 760, "\u63d0\u4f9b\u4e86\u63a5\u53e3\u4ee5\u5904\u7406\u56fe\u7684\u7ed3\u6784": 742, "\u63d0\u4f9b\u4e86\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 736, "\u63d0\u5230\u7684\u4e24\u5c42gcn\u4e3a\u4f8b": 758, "\u64cd\u4f5c": 751, "\u652f\u6301\u7d22\u5f15\u8bfb\u53d6\u548c\u5199\u5165": 739, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u975e\u5e38\u76f8\u4f3c": 757, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8fb9\u5206\u7c7b": 759, "\u6570\u636e\u5bfc\u5165": 736, "\u6570\u636e\u6587\u4ef6\u5939": 748, "\u6570\u636e\u6837\u672c\u7684\u6570\u91cf": 733, "\u6570\u636e\u96c6\u4e2d\u56fe\u7684\u6570\u91cf": 736, "\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u5f20\u56fe\u90fd\u6709\u5b83\u72ec\u7279\u7684\u7ed3\u6784\u548c\u8282\u70b9\u4e0e\u8fb9\u7684\u7279\u5f81": 769, "\u6570\u636e\u96c6\u4e2d\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u56fe": 736, "\u6570\u636e\u96c6\u4e5f\u53ea\u5305\u62ec\u4e00\u4e2a\u56fe": 735, "\u6570\u636e\u96c6\u7c7b\u4f3c": 735, "\u6574\u56fe\u5206\u7c7b": [736, 749, 766, 771], "\u6574\u56fe\u5206\u7c7b\u4e0e\u8282\u70b9\u5206\u7c7b\u6216\u94fe\u63a5\u9884\u6d4b\u7684\u4e3b\u8981\u533a\u522b\u662f": 769, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u8fd8\u9700\u8981\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u8868\u793a": 769, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u9700\u8981\u5728\u5f88\u591a\u56fe\u4e0a\u8fdb\u884c\u8bad\u7ec3": 769, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u4e0e\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u5178\u578b\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u7684\u5927\u591a\u6570\u6570\u636e\u96c6\u7c7b\u4f3c": 736, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u91cc\u7684\u6bcf\u4e2a\u6570\u636e\u70b9\u662f\u4e00\u4e2a\u56fe\u548c\u5b83\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4": 769, "\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u53ef\u4ee5\u8bc6\u522b\u793e\u533a\u7684\u7c7b\u578b": 769, "\u6574\u56fe\u5206\u7c7b\u6d41\u7a0b": 769, "\u6574\u56fe\u5206\u7c7b\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a": 769, "\u6587\u4ef6\u4e2d\u52a0\u8f7d": 744, "\u6587\u4ef6\u7684\u6240\u6709\u8def\u5f84\u90fd\u5e94\u6307\u5b9a\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u7684\u76f8\u5bf9\u8def\u5f84": 741, "\u65b9\u4fbf\u5e7f\u5927\u4e2d\u6587\u7528\u6237\u7fa4\u5b66\u4e60\u548c\u4f7f\u7528dgl": 749, "\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\u9a8c\u8bc1": 747, "\u65b9\u6cd5": [754, 756], "\u65b9\u6cd5\u4ece\u6700\u540e\u4e00\u5c42\u5f00\u59cb\u751f\u6210\u4e00\u4e2a\u5757\u7684\u5217\u8868": 756, "\u65b9\u6cd5\u8ba1\u7b97\u8fb9\u9884\u6d4b\u7684\u7ec4\u4ef6\u5373\u53ef\u8fdb\u884c\u8fb9\u5206\u7c7b": 767, "\u65b9\u6cd5\u8ba1\u7b97\u9884\u6d4b\u503c\u5373\u53ef": 767, "\u65e0\u5411\u7684": 743, "\u65e0\u76d1\u7763\u5b66\u4e60graphsag": 759, "\u65e0\u9700\u8fdb\u884c\u6b64\u7c7b\u68c0\u9a8c": 764, "\u65f6": 739, "\u65f6\u5206\u5e03\u5f0f\u91c7\u6837\u4ee3\u7801\u4e0e\u5355\u8fdb\u7a0b\u91c7\u6837\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c": 739, "\u65f6\u8bbe\u7f6e": 757, "\u65f6\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u8fed\u4ee3": 757, "\u65f6\u9700\u8981\u6307\u5b9a\u8fb9\u7684\u7c7b\u578b": 767, "\u662f": 740, "\u662f1\u4e2a\u5143\u7ec4\u65f6": 764, "\u662f\u4e00\u4e2apython\u7c7b": 739, "\u662f\u4e00\u4e2a\u56fe\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u51c6\u6570\u636e\u96c6": 735, "\u662f\u4e00\u4e2a\u5728\u4e8c\u5206\u56fe\u4e0a\u505a\u8fb9\u5206\u7c7b\u7684\u4ee3\u7801\u793a\u4f8b": 757, "\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u90bb\u5c45\u91c7\u6837\u5668\u7c7b": 756, "\u662f\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\u7684\u51fd\u6570": 756, "\u662f\u4e00\u4e2a\u9ad8\u7ea7api": 751, "\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 757, "\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 742, "\u662f\u4ece\u5747\u5300\u5206\u5e03\u4e2d\u91c7\u6837\u7684": 770, "\u662f\u4ee5\u8fb9\u7c7b\u578b\u5b57\u5178\u548c\u9884\u6d4b\u7ed3\u679c\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 759, "\u662f\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 753, "\u662f\u5426\u6253\u5370\u8fdb\u5ea6\u4fe1\u606f": 733, "\u662f\u5426\u91cd\u65b0\u5bfc\u5165\u6570\u636e\u96c6": 733, "\u662f\u56fe": 769, "\u662f\u5904\u7406": 733, "\u662f\u5b9a\u4e49\u5728\u6bcf\u6761\u8fb9\u4e0a\u7684\u6d88\u606f\u51fd\u6570": 750, "\u662f\u5bf9\u5e94\u6bcf\u4e2a\u5173\u7cfb": 765, "\u662f\u5e38\u6570\u9879\u8d85\u53c2\u6570": 770, "\u662f\u7528\u4e8e\u7279\u5f81\u5f52\u4e00\u5316\u7684\u53ef\u8c03\u7528\u51fd\u6570": 763, "\u662f\u805a\u5408\u51fd\u6570": 765, "\u662f\u8282\u70b9": 769, "\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55": 741, "\u662f\u987e\u5ba2": 743, "\u6635\u79f0": 749, "\u6682\u4e0d\u652f\u6301\u7a00\u758f\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 739, "\u66f4\u591a\u7ec6\u8282": 736, "\u66f4\u591a\u8be6\u7ec6\u7528\u6cd5\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357": 754, "\u66f4\u65b0\u51fd\u6570": [750, 751], "\u66f4\u65b0\u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u53c2\u6570": 751, "\u66ff\u6362\u4e3a": 760, "\u6700\u540e": [765, 769], "\u6700\u5e38\u89c1\u548c\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4efb\u52a1\u4e4b\u4e00\u5c31\u662f\u8282\u70b9\u5206\u7c7b": 771, "\u6700\u7b80\u5355\u7684\u90bb\u5c45\u91c7\u6837\u5668\u662f": 761, "\u6709": 751, "\u67093\u4e2a\u6587\u4ef6\u4ee5dgl\u683c\u5f0f\u5b58\u50a8\u5206\u533a\u6570\u636e": 740, "\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9002\u5408\u4fdd\u5b58\u5904\u7406\u8fc7\u7684\u6570\u636e": 737, "\u6709\u5173dgl\u7684\u5185\u7f6e\u91c7\u6837\u5668\u7684\u5b8c\u6574\u5217\u8868": 757, "\u6709\u5173dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u5982\u4f55\u5de5\u4f5c": 771, "\u6709\u5173\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 736, "\u6709\u5173\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 736, "\u6709\u5173\u8bad\u7ec3\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 736, "\u6709\u5173\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 736, "\u6709\u5206\u5e03\u5f0f\u7684\u7248\u672c": 739, "\u6709\u5411": 743, "\u6709\u5411\u7684": 743, "\u6709\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u53ef\u50a8\u5b58\u56fe": 744, "\u6709\u65f6\u5e0c\u671b\u4ece\u8ba1\u7b97\u4f9d\u8d56\u4e2d\u5220\u9664\u51fa\u73b0\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u8fb9": 757, "\u6709\u65f6\u7528\u6237\u4f1a\u60f3\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 766, "\u6709\u65f6\u7528\u6237\u5e0c\u671b\u9884\u6d4b\u56fe\u4e2d\u8fb9\u7684\u5c5e\u6027\u503c": 767, "\u6709\u65f6\u8fb9\u4e0a\u7684\u6d88\u606f\u53ef\u80fd\u662f\u9ad8\u7ef4\u7684": 752, "\u6709\u7740\u8bb8\u591a\u4f7f\u7528\u8282\u70b9\u5d4c\u5165\u7684\u65b9\u6cd5": 770, "\u670d\u52a1\u5668": 738, "\u670d\u52a1\u5668\u8fdb\u7a0b": 738, "\u670d\u52a1\u5668\u8fdb\u7a0b\u8d1f\u8d23\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570": 739, "\u672a\u52a0\u6743\u7684": 743, "\u672a\u6765dgl\u5c06\u652f\u6301\u5206\u5e03\u5f0f\u56fe\u5212\u5206": 740, "\u672c\u4f8b\u4e2d\u7701\u7565": 771, "\u672c\u7ae0\u4e2d\u9009\u62e9": 771, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5728\u5927\u56fe\u4e0a\u8fdb\u884c\u968f\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u65b9\u6cd5": 755, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4e3a\u7528\u6237\u81ea\u5df1\u7684\u56fe\u6570\u636e\u521b\u5efa\u4e00\u4e2adgl\u6570\u636e\u96c6": 732, "\u672c\u7ae0\u4ee3\u7801\u4f7f\u7528pytorch\u4f5c\u4e3adgl\u7684\u540e\u7aef\u6846\u67b6": 766, "\u672c\u7ae0\u4f1a\u4ee5\u4e0b\u9762\u4ee3\u7801\u6240\u521b\u5efa\u7684\u4e00\u4e2a\u5f02\u6784\u56fe\u4e3a\u4f8b": 766, "\u672c\u7ae0\u4f59\u4e0b\u7684\u5c0f\u8282\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4e3b\u9898": 755, "\u672c\u7ae0\u5047\u8bbe\u7528\u6237\u7684\u56fe\u4ee5\u53ca\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u90fd\u80fd\u5b58\u8fdbgpu": 766, "\u672c\u7ae0\u5171\u6709\u56db\u8282": 766, "\u672c\u7ae0\u5c06\u4f7f\u7528pytorch\u4f5c\u4e3a\u540e\u7aef": 762, "\u672c\u7ae0\u7684": 771, "\u672c\u7ae0\u7684\u524d\u534a\u90e8\u5206\u4ecb\u7ecd\u4e86\u4e0d\u540c\u573a\u666f\u4e0b\u5982\u4f55\u8fdb\u884c\u968f\u673a\u8bad\u7ec3\u7684\u65b9\u6cd5": 755, "\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u5206\u5e03\u5f0f\u7ec4\u4ef6": 738, "\u672c\u7ae0\u7684\u540e\u7eed\u90e8\u5206\u5c55\u793a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5": 733, "\u672c\u7ae0\u7684\u5f02\u6784\u56fe\u6837\u4f8b\u6570\u636e": 767, "\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u89e3\u91ca\u4e86\u5982\u4f55\u5728\u5f02\u6784\u56fe\u4e0a\u5b9e\u73b0\u6d88\u606f\u4f20\u9012": 750, "\u672c\u7ae0\u901a\u8fc7\u4f7f\u7528": 766, "\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u4e86dgl\u7684\u6d88\u606f\u4f20\u9012api": 750, "\u672c\u7ae0\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e86\u56fe\u7684\u5b9a\u4e49": 742, "\u672c\u8282\u4e0d\u6d89\u53ca\u901a\u8fc7\u8f6c\u6362\u5176\u4ed6\u56fe\u6765\u751f\u6210\u56fe\u7684\u51fd\u6570": 744, "\u672c\u8282\u4ec5\u7ed9\u51fa\u4e00\u4e9b\u5e38\u89c1\u683c\u5f0f\u7684\u4e00\u822c\u60c5\u51b5": 744, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728gpu\u663e\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u5c0f\u6279\u6b21\u5904\u7406\u548c\u90bb\u5c45\u91c7\u6837\u5b9e\u73b0\u5168\u56fe\u524d\u5411\u4f20\u64ad\u7684\u65b9\u6cd5": 758, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97api": 739, "\u672c\u8282\u4ee5\u5185\u7f6e\u6570\u636e\u96c6": 736, "\u672c\u8282\u4ee5\u5185\u7f6e\u7684\u6570\u636e\u96c6": 736, "\u672c\u8282\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u7684\u57fa\u672c\u7528\u6cd5": 735, "\u672c\u8282\u4f1a\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u7528\u6237\u81ea\u5df1\u7684\u91c7\u6837\u5668\u5e76\u5c06\u5176\u52a0\u5165\u5230gnn\u7684\u8bad\u7ec3\u6846\u67b6\u4e2d": 756, "\u672c\u8282\u4f7f\u7528dgl\u5185\u7f6e\u7684\u6570\u636e\u96c6": 771, "\u672c\u8282\u5c06\u5c55\u793a\u5982\u4f55\u5904\u7406\u4e0e\u8fd9\u4e9b\u4efb\u52a1\u76f8\u5173\u7684\u6570\u636e\u96c6": 736, "\u672c\u8282\u628a\u8282\u70b9": 770, "\u672c\u8282\u91cd\u70b9\u4ecb\u7ecd\u4e86\u5904\u7406\u56fe": 736, "\u672c\u8d28\u4e0a": 760, "\u673a\u5668\u96c6\u7fa4\u4e0a": 741, "\u674e\u5e86\u6807": 749, "\u6765\u4fdd\u5b58\u56fe\u7684\u70b9id": 747, "\u6765\u505a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u94fe\u8def\u9884\u6d4b\u7684\u6570\u636e\u96c6": 736, "\u6765\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u5757\u7684\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 761, "\u6765\u5904\u7406zip\u6587\u4ef6": 734, "\u6765\u5c55\u793a\u6a21\u578b\u7684\u8bad\u7ec3": 771, "\u6765\u5e73\u8861\u6bcf\u4e2a\u7c7b\u578b\u8282\u70b9\u5728\u5b50\u56fe\u4e2d\u7684\u5165\u5ea6": 740, "\u6765\u5f00\u53d1\u6d88\u606f\u4f20\u9012\u529f\u80fd": 752, "\u6765\u6307\u4ee3\u8fd9\u4e24\u4e2a\u5173\u7cfb\u662f\u53ef\u4ee5\u7684": 748, "\u6765\u6307\u5b9a\u6574\u5408\u4e0d\u540c\u5173\u7cfb\u805a\u5408\u7ed3\u679c\u7684\u65b9\u5f0f": 753, "\u6765\u6307\u793a\u6b64\u591a\u4efb\u52a1\u6570\u636e\u96c6\u4e2d\u7684\u9884\u6d4b\u4efb\u52a1\u603b\u6570": 736, "\u6765\u66ff\u6362\u56fe": 761, "\u6765\u67e5\u770bdgl\u7684\u5185\u7f6e\u6a21\u578b\u6a21\u5757\u662f\u5426\u652f\u6301\u63a5\u53d7": 761, "\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684\u6570\u636e\u96c6": 736, "\u6765\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 766, "\u6765\u81eanetworkx": 744, "\u6765\u81eascipi": 744, "\u6765\u81ea\u52a8\u5b8c\u6210": 734, "\u6765\u83b7\u53d6\u8282\u70b9": 738, "\u6765\u83b7\u53d6\u88ab\u5212\u5206\u7684\u56fe\u5206\u533a\u6570\u636e": 738, "\u6765\u83b7\u5f97\u5206\u7c7b\u8f93\u51fa": 769, "\u6765\u8ba1\u7b97\u8282\u70b9\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 770, "\u6765\u8ba1\u7b97\u8fb9\u7684\u5206\u6570": 759, "\u6765\u8bbf\u95ee\u8282\u70b9\u548c\u8fb9\u4e2d\u7684\u6570\u636e": 739, "\u6765\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 759, "\u6784\u5efa\u4e00\u4e2a2\u5c42\u7684gnn\u6a21\u578b": 771, "\u6784\u5efa\u4e86\u4e00\u4e2a\u65e0\u5411\u7684networkx\u56fe": 744, "\u6784\u5efa\u56fe": 736, "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": [749, 760, 766, 771], "\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u6ce8\u518c\u548c\u524d\u5411\u4f20\u64ad\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u5f20\u91cf\u64cd\u4f5c\u4e0e\u540e\u7aef\u6846\u67b6\u4e00\u6837": 762, "\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1": 763, "\u6784\u9020\u51fd\u6570\u7684\u6700\u540e\u8c03\u7528\u4e86": 763, "\u6807\u7b7e": [733, 736], "\u6807\u7b7e\u548c\u6570\u636e\u96c6\u5212\u5206\u7684\u63a9\u7801": 733, "\u6807\u7b7e\u6570\u7b49\u57fa\u672c\u4fe1\u606f": 733, "\u6807\u91cf\u6574\u578b\u7279\u5f81": 745, "\u6829\u6829\u7684\u590f\u5929": 749, "\u6839\u636e": 767, "\u6839\u636edgl\u6240\u4f7f\u7528\u7684\u540e\u7aef\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 762, "\u6839\u636e\u4efb\u52a1\u8bbe\u8ba1\u5206\u7c7b\u5c42": 769, "\u6839\u636e\u5176\u590d\u6742\u6027": 753, "\u6839\u636e\u5f53\u524d\u7684\u4efb\u52a1\u60c5\u51b5": 740, "\u6839\u636e\u8fd9\u4e2a\u826f\u597d\u7684\u6027\u8d28": 769, "\u6839\u636e\u9700\u8981\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u6765\u9009\u62e9": 760, "\u68c0\u67e5": 734, "\u68c0\u67e5\u5728": [733, 737], "\u68c0\u6d4b\u8f93\u5165\u56fe\u5bf9\u8c61\u662f\u5426\u7b26\u5408\u89c4\u8303": 764, "\u6a21\u5757": [749, 760, 766, 771], "\u6a21\u5757\u4e2d": 764, "\u6a21\u5757\u4f5c\u4e3a\u56fe\u5377\u79ef\u5c42": 769, "\u6a21\u5757\u63a5\u53d7\u7684\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684": 761, "\u6a21\u5757\u9996\u5148\u5bf9\u6bcf\u79cd\u8fb9\u7c7b\u578b\u8fdb\u884c\u5355\u72ec\u7684\u56fe\u5377\u79ef\u8ba1\u7b97": 771, "\u6a21\u578b": 739, "\u6a21\u578b\u4e2d\u5e94\u7279\u522b\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9": 769, "\u6a21\u578b\u5b9a\u4e49": 738, "\u6a21\u578b\u5b9a\u4e49\u5b8c\u6210\u540e": 769, "\u6a21\u578b\u5b9e\u73b0\u4f4d\u4e8e": 769, "\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6\u4e2d": 767, "\u6a21\u578b\u5c06": 757, "\u6a21\u578b\u63a5\u53d7\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868": 757, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u51e0\u4e4e\u76f8\u540c": 761, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c": 757, "\u6a21\u578b\u7684\u8f93\u5165\u662f\u5e26\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u7684\u6279\u6b21\u5316\u56fe": 769, "\u6a21\u578b\u8bad\u7ec3\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u4f4d\u4e8e": 769, "\u6a21\u578b\u8bad\u7ec3\u7684\u5faa\u73af": 738, "\u6b22\u8fce\u7ed9dgl\u8d21\u732e\u66f4\u591a\u7684\u6a21\u5757": 762, "\u6b63\u5728\u9500\u552e": 743, "\u6b63\u6837\u672c": 759, "\u6b64\u51fd\u6570\u5bf9": 751, "\u6b64\u521b\u5efa\u8fc7\u7a0b\u624d\u80fd\u6210\u529f": 739, "\u6b64\u5904\u53ea\u662f\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49gnn\u6a21\u5757\u7684\u4e00\u4e2a\u793a\u4f8b": 760, "\u6b64\u5916": [736, 746, 748], "\u6b64\u6a21\u5f0f\u4e3b\u8981\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5": 739, "\u6b64\u8c03\u7528\u901a\u8fc7\u5c06\u6e90\u8282\u70b9\u7279\u5f81": 751, "\u6bcf\u4e00\u6761\u8fb9": 770, "\u6bcf\u4e2a": 735, "\u6bcf\u4e2a\u5173\u7cfb\u4e0a\u7684dgl": 765, "\u6bcf\u4e2a\u5173\u7cfb\u7531\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4": 748, "\u6bcf\u4e2a\u56fe\u7684\u6807\u7b7e\u6570": 736, "\u6bcf\u4e2a\u8282\u70b9\u7279\u5f81\u5177\u6709\u552f\u4e00\u540d\u79f0": 745, "\u6bcf\u4e2a\u8fb9\u7279\u5f81\u4e5f\u5177\u6709\u552f\u4e00\u540d\u79f0": 745, "\u6bcf\u53f0\u8ba1\u7b97\u673a\u8d1f\u8d23\u4e00\u4e2a\u4e14\u53ea\u8d1f\u8d23\u4e00\u4e2a\u5206\u533a": 739, "\u6bcf\u5c42\u53ea\u5c55\u793a\u524d3\u4e2a\u5c0f\u6279\u6b21": 758, "\u6bcf\u6761\u8fb9\u7684\u6743\u91cd": 745, "\u6bcf\u6761\u8fb9\u90fd\u4e0e\u4e00\u4e2a\u6807\u91cf\u6743\u91cd\u503c\u76f8\u5173\u8054": 743, "\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u91cf\u6743\u91cd": 768, "\u6bcf\u6b21\u68af\u5ea6\u4e0b\u964d": 755, "\u6bcf\u79cd\u5173\u7cfb\u5bf9\u5e94\u4e00\u4e2a": 764, "\u6bcf\u8282\u5bf9\u5e94\u4e00\u79cd\u56fe\u5b66\u4e60\u4efb\u52a1": 766, "\u6bcf\u884c\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 741, "\u6bd4\u5982": [752, 763], "\u6bd4\u5982gml\u6216json": 748, "\u6bd4\u5982\u5217\u8868": 747, "\u6bd4\u5982\u5728": 764, "\u6c88\u6210": 749, "\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u8fb9": 756, "\u6ca1\u6709\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u5c31\u6ca1\u6709\u660e\u786e\u7684\u8fd4\u56de\u503c": 748, "\u6ce8\u518c\u53c2\u6570\u548c\u5b50\u6a21\u5757": 763, "\u6ce8\u518c\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u6216\u8005\u5b50\u6a21\u5757": 763, "\u6ce8\u610f": [744, 748, 758, 760, 766], "\u6ce8\u610f\u7ed3\u679c\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u7279\u5f81": 753, "\u6ce8\u610f\u8ba1\u7b97\u65b9\u6cd5\u662f\u4e00\u6837\u7684": 758, "\u6d4b\u8bd5\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u5bf9\u5e94\u8282\u70b9": 739, "\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u91cd\u590d\u591a\u8f6e": 771, "\u6d88\u606f\u4f20\u9012\u662f\u5b9e\u73b0gnn\u7684\u4e00\u79cd\u901a\u7528\u6846\u67b6\u548c\u7f16\u7a0b\u8303\u5f0f": 750, "\u6d88\u606f\u4f20\u9012\u7684\u5b9a\u4e49\u662f": 756, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [749, 766, 767, 771], "\u6d88\u606f\u4f20\u9012\u9700\u8981\u805a\u96c6\u5176\u90bb\u5c45": 756, "\u6d88\u606f\u51fd\u6570": 751, "\u6d88\u606f\u7684\u5185\u7f6e\u51fd\u6570\u7684\u547d\u540d\u7ea6\u5b9a\u662f": 751, "\u6d88\u606f\u805a\u5408\u548c\u8282\u70b9\u7279\u5f81\u66f4\u65b0": 751, "\u6e38\u620f": 748, "\u6e90": [751, 752], "\u6e90\u4ee3\u7801": 736, "\u6e90\u6587\u4ef6\u4e2d\u7684": 769, "\u6e90\u8282\u70b9": 759, "\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u76f8\u540c": 764, "\u6e90\u8282\u70b9\u7279\u5f81": 764, "\u6e90\u8282\u70b9\u7c7b\u578b": 748, "\u6fc0\u6d3b\u51fd\u6570": 764, "\u70b9\u4e0a\u8ba1\u7b97": 750, "\u7136\u540e": [761, 771], "\u7136\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e9b": 742, "\u7136\u540e\u540c\u6837\u901a\u8fc7\u8c03\u7528": 767, "\u7136\u540e\u5728\u5b50\u56fe\u4e0a\u8c03\u7528": 754, "\u7136\u540e\u5728\u7f51\u7edc\u7684\u7b2c": 755, "\u7136\u540e\u5bf9\u6240\u6709\u6d88\u606f\u6c42\u548c\u6765\u66f4\u65b0\u8282\u70b9\u7279\u5f81": 751, "\u7136\u540e\u5c06\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4e0a\u7684\u6d88\u606f\u805a\u5408\u7ed3\u679c\u518d\u76f8\u52a0": 771, "\u7136\u540e\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u8fb9\u7684": 751, "\u7136\u540e\u5c06\u8be5\u5b50\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 748, "\u7136\u540e\u5e94\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42": 752, "\u7136\u540e\u6839\u636e\u56fe\u7c7b\u578b\u6269\u5c55\u8f93\u5165\u7279\u5f81": 764, "\u7136\u540e\u8bb2\u89e3\u4e86\u5982\u4f55\u9ad8\u6548\u5730\u5728\u70b9\u548c\u8fb9\u4e0a\u4f7f\u7528\u8fd9\u4e9bapi": 750, "\u7136\u800c": 758, "\u7269\u54c1": [742, 743], "\u7279\u5f81": [733, 748], "\u7279\u5f81\u4e0a": 751, "\u7279\u5f81\u4e5f\u5fc5\u987b\u5728gpu\u4e0a": 746, "\u7279\u5f81\u548c\u5212\u5206\u63a9\u7801\u7684\u6807\u51c6\u65b9\u6cd5": 736, "\u7279\u5f81\u548c\u76ee\u6807\u8282\u70b9\u7684": 751, "\u7279\u5f81\u5c3a\u5bf8\u662f7": 769, "\u7279\u5f81\u5f20\u91cf\u4f7f\u7528": 745, "\u7279\u5f81\u6570\u636e\u4e5f\u62f7\u8d1d\u5230\u4e86gpu\u4e0a": 746, "\u7279\u5f81\u6c42\u548c": 751, "\u7279\u6b64\u81f4\u8c22\u4e0b\u8ff0\u8d21\u732e\u8005": 749, "\u72ec\u7acb\u6a21\u5f0f\u8981\u6c42\u8f93\u5165\u56fe\u4ec5\u5177\u6709\u4e00\u4e2a\u5206\u533a": 739, "\u738b\u5efa\u6c11": 749, "\u73a9": 748, "\u751f\u6210\u8fb9\u754c": 756, "\u7528": [738, 747, 762], "\u7528\u4e8e\u5206\u5e03\u5f0f\u56fe\u7684": 739, "\u7528\u4e8e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684": 739, "\u7528\u4e8e\u521d\u59cb\u5316": 739, "\u7528\u4e8e\u5728dgl\u4e2d\u81ea\u5b9a\u4e49\u56fe\u6570\u636e\u96c6\u7684\u6a21\u677f": 733, "\u7528\u4e8e\u5728\u673a\u5668\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1": 741, "\u7528\u4e8e\u5b9a\u4e49\u5f02\u6784\u56fe\u4e0agnn\u6a21\u5757": 765, "\u7528\u4e8e\u5bf9\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u91c7\u6837\u4ee5\u751f\u6210\u5c0f\u6279\u6b21\u8bad\u7ec3\u6570\u636e": 739, "\u7528\u4e8e\u5c06\u56fe\u5206\u533a\u590d\u5236\u5230\u96c6\u7fa4": 741, "\u7528\u4e8e\u6307\u5b9a\u56fe\u7c7b\u578b\u5e76\u5c06": 764, "\u7528\u4e8e\u8bbf\u95ee\u5176\u5143\u6570\u636e": 739, "\u7528\u4e8e\u8bbf\u95ee\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d\u7684\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 739, "\u7528\u4ece0\u5f00\u59cb\u7684\u8fde\u7eed\u6574\u6570\u91cd\u65b0\u6807\u8bb0\u6240\u6709\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 748, "\u7528\u4fdd\u5b58\u7684\u8fb9\u7279\u5f81\u4e0e\u5bf9\u5e94\u8fb9\u7684\u539f\u59cb\u6d88\u606f\u76f8\u4e58": 768, "\u7528\u6237": [742, 743, 748], "\u7528\u6237\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5b83": 751, "\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528mlp": 767, "\u7528\u6237\u4e5f\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a": 767, "\u7528\u6237\u4ec5\u9700\u5bf9\u5355\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u8bad\u7ec3": 738, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 756, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528": 761, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8282\u70b9": 759, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7": 740, "\u7528\u6237\u53ea\u9700\u4f7f\u7528\u65b0\u7684\u8282\u70b9\u548c\u8fb9\u7684id": 740, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 761, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u51fa\u8282\u70b9\u7684\u6807\u7b7e": 761, "\u7528\u6237\u53ea\u9700\u8981\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a": 767, "\u7528\u6237\u53ef\u4ee5\u4ece\u8fd4\u56de\u7684\u5b57\u5178\u4e2d\u63d0\u53d6": 771, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528": [757, 771], "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u50cfpandas\u8fd9\u6837\u7684\u5305\u5148\u5c06csv\u6587\u4ef6\u89e3\u6790\u4e3anumpy\u6570\u7ec4\u6216\u6846\u67b6\u5f20\u91cf": 748, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 751, "\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u52a0\u8f7d\u5668": 756, "\u7528\u6237\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5c06\u8bad\u7ec3\u96c6": 740, "\u7528\u6237\u53ef\u4ee5\u53c2\u7167": 758, "\u7528\u6237\u53ef\u4ee5\u53c2\u8003": [736, 756, 757, 759, 761], "\u7528\u6237\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u5185\u7f6e\u6570\u636e\u96c6": 736, "\u7528\u6237\u53ef\u4ee5\u53ea\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4\u6765\u6307\u5b9a\u8fb9\u7c7b\u578b": 748, "\u7528\u6237\u53ef\u4ee5\u5728": [736, 771], "\u7528\u6237\u53ef\u4ee5\u5728\u5b9e\u4f8b\u5316": 757, "\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u6709\u5173\u6570\u636e\u96c6\u7684\u56fe": 733, "\u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b": 769, "\u7528\u6237\u53ef\u4ee5\u5bf9\u8981\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b\u6784\u9020\u4e00\u4e2a\u8d1f\u91c7\u6837\u56fe": 770, "\u7528\u6237\u53ef\u4ee5\u5c06": 739, "\u7528\u6237\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u6cbf\u6240\u6709\u5165\u8fb9\u4f20\u9012\u6d88\u606f\u7684\u8fb9\u754c": 756, "\u7528\u6237\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u6807\u7b7e\u4f7f\u7528": 767, "\u7528\u6237\u53ef\u4ee5\u5c06\u6743\u91cd\u50a8\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 745, "\u7528\u6237\u53ef\u4ee5\u5c06\u7528\u4e8e\u5757\u7684\u8bed\u53e5\u548c\u539f\u5148\u7528\u4e8e\u6574\u56fe\u7684\u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83": 760, "\u7528\u6237\u53ef\u4ee5\u5c06\u91c7\u6837\u5668\u5bf9\u8c61\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668\u5bf9\u8c61": 756, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u62d3\u5c55\u4e3a\u5bf9\u591a\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 770, "\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u5173\u7cfb\u5207\u7247\u7684\u65b9\u5f0f\u521b\u5efa\u8fd9\u4e2a\u56fe": 767, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u4f7f\u7528": 736, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6a21\u578b\u7684\u8bad\u7ec3": 771, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199\u9884\u6d4b\u6a21\u5757": 767, "\u7528\u6237\u53ef\u4ee5\u6309\u8282\u70b9\u7c7b\u578b\u6765\u83b7\u53d6\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 756, "\u7528\u6237\u53ef\u4ee5\u67e5\u9605": 761, "\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027": 736, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u590d\u7528\u5b83": 757, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 771, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528": 757, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528graphdataload": 769, "\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u7f16\u5199\u5728\u6240\u6709\u8fb9\u4e0a\u8fdb\u884c\u9884\u6d4b\u7684\u5168\u56fe\u8bad\u7ec3\u4ee3\u7801": 767, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": [756, 769], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539nn\u6a21\u5757\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c\u6765\u7ed9nn\u6a21\u5757\u589e\u52a0\u8fb9\u6743\u91cd\u652f\u6301": 768, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u4f20\u5165\u4e24\u4e2agpu\u5f20\u91cf\u6765\u521b\u5efagpu\u4e0a\u7684": 746, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u8981\u4fdd\u7559\u7684\u5173\u7cfb\u6765\u521b\u5efa\u5f02\u6784\u56fe\u7684\u5b50\u56fe": 748, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u8fb9": 759, "\u7528\u6237\u53ef\u4ee5\u904d\u5386\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u83b7\u5f97\u7531\u5c0f\u6279\u6b21\u8fb9\u7ec4\u6210\u7684\u5b50\u56fe": 757, "\u7528\u6237\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528": 770, "\u7528\u6237\u53ef\u4ee5\u91cd\u7528\u5728\u8fb9\u5206\u7c7b": 759, "\u7528\u6237\u53ef\u5c06\u4e00\u7cfb\u5217\u7684\u56fe\u5efa\u7acb\u6210\u4e00\u4e2a\u56fe\u6279\u6b21": 769, "\u7528\u6237\u53ef\u5c06\u5176\u4f20\u7ed9\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a": 769, "\u7528\u6237\u53ef\u5c06\u591a\u5f20\u56fe\u7ec4\u6210\u4e00\u4e2a\u6279\u6b21": 769, "\u7528\u6237\u53ef\u7528\u5982\u4e0b\u4ee3\u7801\u83b7\u53d6": 771, "\u7528\u6237\u53ef\u80fd\u4f1a\u9700\u8981\u6807\u51c6\u5316\u539f\u59cb\u8fb9\u6743\u91cd": 768, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u6cbf\u7740\u6240\u6709\u8fb9\u7c7b\u578b\u4ece\u90bb\u5c45\u90a3\u91cc\u6536\u96c6\u6d88\u606f": 771, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u9884\u6d4b\u7ed9\u5b9a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9": 770, "\u7528\u6237\u53ef\u80fd\u9700\u8981\u5c06\u4e00\u4e9b\u5173\u7cfb\u5408\u5e76": 748, "\u7528\u6237\u5728\u8bad\u7ec3\u8fb9\u5206\u7c7b\u6a21\u578b\u65f6": 757, "\u7528\u6237\u5728\u8c03\u7528dglgraph": 748, "\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 751, "\u7528\u6237\u5c06\u9700\u8981\u4e00\u53f0\u5927\u5185\u5b58\u7684\u673a\u5668\u6765\u5bf9\u56fe\u8fdb\u884c\u5212\u5206": 740, "\u7528\u6237\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b": 769, "\u7528\u6237\u5e0c\u671b\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e94\u7528\u4e0d\u540c\u7684\u64cd\u4f5c": 748, "\u7528\u6237\u5fc5\u987b\u5b9e\u73b0": 736, "\u7528\u6237\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5757": 761, "\u7528\u6237\u6307\u5357\u5c06\u4ee5\u5185\u7f6e\u6570\u636e\u96c6\u4e3a\u4f8b": 736, "\u7528\u6237\u6700\u597d\u4f7f\u7528": 747, "\u7528\u6237\u6709\u65f6\u4f1a\u5e0c\u671b\u4ece\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u56fe\u4e2d\u5220\u53bb\u90e8\u5206\u8fb9\u53ca\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9": 757, "\u7528\u6237\u7684\u4efb\u52a1\u662f\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 767, "\u7528\u6237\u81ea\u5df1\u7684\u8bad\u7ec3\u4ee3\u7801": 736, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5411\u7c7b\u6dfb\u52a0\u5c5e\u6027\u4ee5\u6307\u793a\u4e00\u4e9b\u6709\u7528\u7684\u6570\u636e\u96c6\u4fe1\u606f": 736, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5c06\u65b0\u7684": 739, "\u7528\u6237\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u552f\u4e00\u7684\u5f20\u91cf\u540d\u79f0": 739, "\u7528\u6237\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 759, "\u7528\u6237\u8fd8\u5fc5\u987b\u5c06gnn\u7684\u5c42\u6570\u4f20\u9012\u7ed9\u7236\u7c7b": 756, "\u7528\u6237\u8fd8\u662f\u5728\u8282\u70b9\u6216\u8fb9\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 769, "\u7528\u6237\u8fd8\u9700\u8981\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5206\u5272\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 739, "\u7528\u6237\u9664\u4e86\u9700\u8981\u4f7f\u7528\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 769, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u6307\u5b9a\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf": 741, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u6761\u8fb9\u90fd\u521b\u5efa\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9": 747, "\u7528\u6237\u9700\u8981\u4ece\u6a21\u578b\u4e2d\u6536\u96c6\u6240\u6709\u5206\u5e03\u5f0f\u5d4c\u5165": 739, "\u7528\u6237\u9700\u8981\u5206\u5272\u8bad\u7ec3\u96c6": 739, "\u7528\u6237\u9700\u8981\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 759, "\u7528\u6237\u9700\u8981\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u53e6\u5916\u4e00\u4e2a\u56fe": 770, "\u7528\u6237\u9700\u8981\u63d0\u4f9b\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 739, "\u7528\u6237\u9700\u8981\u660e\u786e\u5730\u6307\u660e\u8282\u70b9\u7684\u6570\u91cf": 747, "\u7528\u6237\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8fb9\u5206\u7c7b": 767, "\u7528\u6237\u9996\u5148\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u7684\u7ef4\u5ea6": 763, "\u7528\u6765\u6307\u5b9a\u4e0d\u540c\u8bad\u7ec3\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u6240\u4f7f\u7528\u7684\u7aef\u53e3": 741, "\u7528\u8be5\u6a21\u5757\u8fdb\u884c\u79bb\u7ebf\u63a8\u65ad": 758, "\u7528\u8fb9\u4e24\u7aef\u8282\u70b9\u8868\u793a\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u6253\u5206": 757, "\u7531gpu\u5f20\u91cf\u6784\u9020\u7684\u56fe\u4e5f\u5728gpu\u4e0a": 746, "\u7531\u4e8etensor\u7c7b\u5185\u90e8\u4f7f\u7528c\u6765\u5b58\u50a8": 747, "\u7531\u4e8e\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\u5c06\u539f\u6765\u7684\u8fb9\u7c7b\u578b\u5b58\u6210\u8fb9\u7279\u5f81": 767, "\u7531\u4e8e\u6574\u56fe\u5206\u7c7b\u5904\u7406\u7684\u662f\u5f88\u591a\u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe": 769, "\u7531\u4e8e\u66f4\u65b0\u51fd\u6570\u901a\u5e38\u53ef\u4ee5\u7528\u7eaf\u5f20\u91cf\u64cd\u4f5c\u5b9e\u73b0": 751, "\u7531\u4e8e\u8fd9\u91cc\u7684\u5173\u7cfb\u5b9a\u4e49\u6d88\u9664\u4e86\u8fb9\u7c7b\u578b\u7684\u6b67\u4e49": 748, "\u7531\u591a\u5c42gnn\u8ba1\u7b97\u5f97\u51fa": 770, "\u7684": [747, 755], "\u7684api\u4ee5\u65b9\u4fbf\u6570\u636e\u8bbf\u95ee": 739, "\u7684api\u7528\u4e8e\u6b64\u4f18\u5316": 736, "\u7684nn\u6a21\u5757": 765, "\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u6240\u4e0d\u540c": 757, "\u7684\u5177\u4f53\u5b9a\u4e49": 771, "\u7684\u5178\u578b\u793a\u4f8b\u5982\u4e0b": 741, "\u7684\u5185\u5b58\u7a7a\u95f4": 755, "\u7684\u51fd\u6570\u662f": 764, "\u7684\u5212\u5206": 740, "\u7684\u5212\u5206\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba1\u7b97\u8d1f\u8f7d\u4e0d\u5e73\u8861": 740, "\u7684\u521b\u5efa\u662f\u4e00\u4e2a\u540c\u6b65\u64cd\u4f5c": 739, "\u7684\u521b\u5efa\u9700\u8981": 739, "\u7684\u524d\u9a71\u8282\u70b9": 756, "\u7684\u539f\u5219": 745, "\u7684\u53c2\u6570": 753, "\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6d88\u606f\u51fd\u6570": 751, "\u7684\u56fe\u540d\u79f0\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570": 740, "\u7684\u5b50\u7c7b": [732, 736], "\u7684\u5b9e\u4f8b": 751, "\u7684\u5b9e\u73b0\u4e5f\u53d1\u751f\u4e86\u53d8\u5316": 736, "\u7684\u5b9e\u73b0\u4f1a\u5305\u542b\u4e24\u4e2a\u5b57\u5178": 761, "\u7684\u5b9e\u73b0\u5982\u4e0b": 756, "\u7684\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206": 752, "\u7684\u5f02\u6784\u56fe": 748, "\u7684\u5f20\u91cf": 768, "\u7684\u5f97\u5206\u6765\u8bad\u7ec3\u94fe\u8def\u6a21\u578b": 759, "\u7684\u6210\u5458\u5c5e\u6027": 751, "\u7684\u6240\u6709\u5165\u8fb9": 756, "\u7684\u6559\u7a0b": 744, "\u7684\u6570\u636e": 766, "\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c": 738, "\u7684\u6d88\u606f": 756, "\u7684\u7236\u7c7b": 756, "\u7684\u7279\u5f81": [742, 745, 769, 771], "\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u4e14\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5bfc\u5165\u56fe\u6570\u636e": 733, "\u7684\u793a\u4f8b": 765, "\u7684\u7b80\u5316\u7248": 760, "\u7684\u805a\u5408\u7ed3\u679c\u8fdb\u884c\u64cd\u4f5c": 751, "\u7684\u8282\u70b9": 743, "\u7684\u8282\u70b9\u5d4c\u5165": 771, "\u7684\u8282\u70b9\u7279\u5f81": 756, "\u7684\u8282\u70b9\u8868\u793a": 770, "\u7684\u8282\u70b9\u8868\u793a\u6a21\u5757\u79f0\u4f5c": 767, "\u7684\u8868\u5f81": 769, "\u7684\u8868\u793a\u6240\u9700\u7684\u8282\u70b9": 761, "\u7684\u8ba1\u7b97": 769, "\u7684\u8bba\u6587\u4e2d": 756, "\u7684\u8be6\u7ec6\u4fe1\u606f": 736, "\u7684\u8bed\u6cd5\u4e0e\u5e38\u89c4\u56fe\u4e2d\u7684": 756, "\u7684\u8bed\u6cd5\u5c06\u53ea\u5305\u542b\u8be5\u5173\u7cfb\u7684\u5b50\u56fe": 765, "\u7684\u8f93\u51fa": 756, "\u7684\u8f93\u51fa\u5f20\u91cf\u7684\u5217\u8868": 765, "\u7684\u8fb9": [747, 770], "\u7684\u8fb9\u4e92\u76f8\u8fde\u63a5": 743, "\u7684\u8fb9\u603b\u662f\u6709\u5411\u7684": 744, "\u7684\u8fb9\u7684\u6807\u7b7e": 767, "\u7684\u8fb9\u7c7b\u578b": 767, "\u7684\u90e8\u5206": 736, "\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u5411\u540e\u8fed\u4ee3": 756, "\u76ee\u524d": 739, "\u76ee\u5f55\u4e2d": 736, "\u76ee\u6807": [751, 752], "\u76ee\u6807\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 751, "\u76ee\u6807\u8282\u70b9\u6570\u7ec4\u5bf9\u4e3a\u503c\u7684\u5b57\u5178": 759, "\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 748, "\u76f4\u5230\u5230\u8fbe\u8f93\u5165\u5c42": 755, "\u76f4\u5230\u8bad\u7ec3\u4efb\u52a1\u7ed3\u675f": 739, "\u76f8\u4e58\u751f\u6210\u6d88\u606f": 751, "\u76f8\u5173api": [744, 745, 747, 748], "\u76f8\u5173\u6982\u8ff0\u8bf7\u9605\u8bfbapi\u53c2\u8003\u624b\u518c": 744, "\u76f8\u5173\u7684\u6838\u5fc3\u6982\u5ff5": 742, "\u76f8\u5173\u7684\u7279\u5f81\u4e5f\u4f1a\u88ab\u62f7\u8d1d": 748, "\u76f8\u540c": [756, 765], "\u76f8\u540c\u540d\u79f0\u7684\u7279\u5f81\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b": 745, "\u76f8\u5bf9\u5730": 743, "\u76f8\u6bd4\u4e4b\u4e0b": 758, "\u76f8\u6bd4\u540c\u6784\u56fe": 748, "\u77e5\u9053": 757, "\u786e\u5b9a": 764, "\u793a\u4f8b\u5982\u4e0b\u6240\u793a": 759, "\u793e\u4ea4\u7f51\u7edc\u7684\u56fe\u7531\u8868\u793a\u540c\u4e00\u5b9e\u4f53\u7c7b\u578b\u7684\u4eba\u53ca\u5176\u76f8\u4e92\u4e4b\u95f4\u7684\u793e\u4ea4\u5173\u7cfb\u7ec4\u6210": 743, "\u79cd\u5b50\u8282\u70b9": 756, "\u79f0\u4e3a": 733, "\u79f0\u4e3a\u70b9id": 747, "\u79f0\u4e3a\u8fb9id": 747, "\u7ae0\u8282": 749, "\u7ae0\u8282\u4e2d\u4e5f\u4f1a\u63d0\u5230": 756, "\u7b2c1\u7ae0": 749, "\u7b2c2\u4e2a\u5143\u7d20\u4e3a\u76ee\u6807\u8282\u70b9\u7279\u5f81": 764, "\u7b2c2\u7ae0": [749, 766, 767, 771], "\u7b2c3\u7ae0": [749, 760, 766, 771], "\u7b2c4\u7ae0": [749, 766, 769, 771], "\u7b2c5\u7ae0": [749, 755], "\u7b2c6\u7ae0": [749, 754, 764, 766], "\u7b2c7\u7ae0": 749, "\u7b2c\u4e00\u90e8\u5206\u4e0e": 757, "\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8f93\u51fa\u8282\u70b9": 756, "\u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u8fb9\u4e0a\u7684\u9884\u6d4b\u503c": 767, "\u7b2c\u4e8c\u90e8\u5206\u7684\u8f93\u5165\u901a\u5e38\u662f\u524d\u4e00\u90e8\u5206\u7684\u8f93\u51fa": 757, "\u7b49": [751, 763], "\u7b49conv\u6a21\u5757\u4e2d": 764, "\u7b49\u4ef7\u4e8e\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u63a5\u6536\u5230\u6d88\u606f\u6c42\u548c\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 751, "\u7ba1\u7406\u5728\u591a\u4e2a\u8ba1\u7b97\u673a\u4e2d\u88ab\u5212\u5206\u548c\u5b58\u50a8\u7684\u5bc6\u96c6\u5f20\u91cf": 739, "\u7c7b": 734, "\u7c7b\u4e2d\u4e0b\u8f7d\u4e00\u4e2a": 734, "\u7c7b\u4e2d\u770b\u5230\u6a21\u578b\u5b9e\u73b0\u7684\u7ec6\u8282": 771, "\u7c7b\u4f3c": 738, "\u7c7b\u548c": 761, "\u7c7b\u578b\u7684\u8282\u70b9\u4e5f\u4f1a\u88ab\u4fdd\u7559": 748, "\u7c7b\u578b\u7684\u8282\u70b9\u7684": 748, "\u7c7b\u578b\u7684\u8fb9\u7684": 748, "\u7c7b\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u6570\u636e\u5904\u7406\u7ba1\u9053": 732, "\u7c7b\u6709\u62bd\u8c61\u51fd\u6570": 733, "\u7c7b\u8fdb\u884c\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 761, "\u7ea2\u8272\u70b9": 756, "\u7ec6\u8282\u5185\u5bb9\u53ef\u4ee5\u5728\u4e0b\u9762\u7684disttensor\u548cdistembedding\u7ae0\u8282\u91cc\u67e5\u770b": 739, "\u7ed3\u5408\u4e86\u8282\u70b9\u8868\u793a\u6a21\u5757\u548c\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u6a21\u578b\u5982\u4e0b\u6240\u793a": 767, "\u7ed3\u5408\u4f7f\u7528": [757, 761], "\u7ed9\u5b9agnn\u5c42": 756, "\u7ed9\u5b9a\u4e00\u5f20\u56fe": 769, "\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 770, "\u7ed9\u5b9a\u8ba1\u7b97\u8282\u70b9\u548c\u8fb9\u4e0a\u8868\u793a\u7684\u6a21\u578b\u540e": 767, "\u7ed9\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u7f16\u53f7": 747, "\u7ef4\u5ea6\u901a\u5e38\u5305\u62ec\u8f93\u5165\u7684\u7ef4\u5ea6": 763, "\u7eff\u8272\u548c\u7ea2\u8272\u8282\u70b9": 756, "\u7eff\u8272\u70b9": 756, "\u7eff\u8272\u8282\u70b9": 756, "\u7f13\u5b58\u6982\u7387\u5206\u5e03": 759, "\u7f16\u5199dgl": [749, 762], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [749, 750, 764], "\u7f16\u7801\u5e02\u573a\u7684\u56fe\u53ef\u4ee5\u6709\u8868\u793a": 743, "\u8003\u8651\u4ee5\u4e0b\u57fa\u4e8edgl\u7684\u6d88\u606f\u4f20\u9012\u793a\u4f8b": 768, "\u8003\u8651\u4ee5\u4e0b\u8fb9\u754c": 756, "\u8003\u8651\u5230\u67d0\u4e9b\u56fe\u8fb9\u7684\u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u8282\u70b9\u7684\u6570\u91cf": 752, "\u8003\u8651\u5728\u4e00\u4e2a\u6709": 755, "\u800c": 744, "\u800c\u4e0d\u662f": 757, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7279\u5f81\u5f20\u91cf": 760, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5927\u56fe": 769, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u6807\u7b7e": 761, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81": 761, "\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u5927\u56fe\u6570\u636e": 769, "\u800c\u4e0d\u662f\u5e95\u5c42\u6846\u67b6\u91cc\u7684\u5f20\u91cf": 739, "\u800c\u4e0d\u662f\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u5f20\u91cf\u7684\u5b57\u5178": [757, 759], "\u800c\u4e14\u4e24\u79cd\u8282\u70b9\u5177\u6709\u4e0d\u540c\u7684\u7279\u5f81": 748, "\u800c\u4ee5\u4e0b\u7528\u6237\u5b9a\u4e49\u6d88\u606f\u51fd\u6570\u4e0e\u6b64\u5185\u7f6e\u51fd\u6570\u7b49\u4ef7": 751, "\u800c\u540e\u8005\u5219\u6807\u8bc6dgl\u670d\u52a1\u5668\u4e2d\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 739, "\u800c\u5728cpu\u4e0a\u8fdb\u884c\u5219\u8ba1\u7b97\u901f\u5ea6\u5f88\u6162": 758, "\u800c\u65e0\u9700\u8bbe\u8ba1\u590d\u6742\u7684\u56fe\u91c7\u6837\u7b97\u6cd5": 769, "\u800c\u662f\u5728": 751, "\u800c\u7ebf\u6027\u5c42\u8f93\u51fa\u7ef4\u6570\u8f83\u4f4e": 752, "\u800c\u975e4\u6761": 744, "\u805a\u5408\u51fd\u6570": [750, 751], "\u805a\u5408\u51fd\u6570\u6765\u5b9e\u73b0": 764, "\u805a\u5408\u51fd\u6570\u901a\u5e38\u6709\u4e24\u4e2a\u53c2\u6570": 751, "\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u4e0a\u7684\u7ed3\u679c": 765, "\u805a\u5408\u7c7b\u578b": 763, "\u805a\u5408\u7c7b\u578b\u51b3\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u4e0d\u540c\u8fb9\u4e0a\u7684\u4fe1\u606f": 763, "\u80e1\u9a8f": 749, "\u8282\u70b9": [742, 751], "\u8282\u70b92": 756, "\u8282\u70b93": 756, "\u8282\u70b93\u662f\u4e00\u4e2a\u5b64\u7acb\u8282\u70b9": 756, "\u8282\u70b98": 756, "\u8282\u70b9\u5206\u7c7b": [736, 749, 766], "\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b": 736, "\u8282\u70b9\u5206\u7c7b\u7684rgcn\u6a21\u578b": 767, "\u8282\u70b9\u5206\u7c7b\u901a\u5e38\u5728\u5355\u4e2a\u56fe\u4e0a\u8fdb\u884c": 736, "\u8282\u70b9\u548c": [752, 767], "\u8282\u70b9\u548c\u8fb9": [742, 749], "\u8282\u70b9\u548c\u8fb9id\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4": 747, "\u8282\u70b9\u548c\u8fb9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u6784\u5efa\u7684": 747, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [742, 749], "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0": 745, "\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684": 743, "\u8282\u70b9\u56de\u5f52\u4efb\u52a1\u4e5f\u7c7b\u4f3c": 771, "\u8282\u70b9\u5f20\u91cf": 747, "\u8282\u70b9\u6570\u636e\u540d\u79f0\u548c\u5f20\u91cf\u540d\u79f0\u4e0d\u5fc5\u76f8\u540c": 739, "\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 739, "\u8282\u70b9\u6807\u7b7e\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u5668\u4e2d": 761, "\u8282\u70b9\u7279\u5f81": 752, "\u8282\u70b9\u7279\u5f81\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u4e2d": 761, "\u8282\u70b9\u7279\u5f81\u548c\u6807\u7b7e\u5b58\u50a8\u5728\u5176\u56fe\u4e0a": 771, "\u8282\u70b9\u7279\u5f81\u548c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u5b58\u50a8\u5728": 736, "\u8282\u70b9\u7279\u5f81\u7ef4\u6570\u8f83\u9ad8": 752, "\u8282\u70b9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u7684": 748, "\u8282\u70b9\u7684\u6807\u7b7e": 736, "\u8282\u70b9\u7684\u7279\u5f81": 736, "\u8282\u70b9\u7684\u7c7b\u522b": 771, "\u8282\u70b9\u7684\u8fb9": 767, "\u8282\u70b9\u7c7b\u578b": 736, "\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7ed3\u679c": 761, "\u8282\u70b9\u8868\u793a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6": 770, "\u82e5\u7528\u56fe\u5bf9twitter\u7528\u6237\u7684\u5173\u6ce8\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21": 743, "\u82e5\u7528\u56fe\u5bf9\u793e\u4ea4\u7f51\u7edc\u4e2d\u4eba\u4eec\u7684\u53cb\u8c0a\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21": 743, "\u83ab\u4f73\u5e05\u5b50": 749, "\u83b7\u53d6": [748, 756], "\u83b7\u53d6drug\u8282\u70b9\u7684\u6570\u91cf": 748, "\u83b7\u53d6\u5212\u5206\u7684\u63a9\u7801": 736, "\u83b7\u53d6\u5212\u5206\u7684\u6807\u7b7e": 735, "\u83b7\u53d6\u5355\u4e00\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81": 748, "\u83b7\u53d6\u539f\u59cbid": 740, "\u83b7\u53d6\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u91cf": 748, "\u83b7\u53d6\u6807\u7b7e": 736, "\u83b7\u53d6\u7279\u5b9a\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u7684\u7279\u5f81": 748, "\u83b7\u53d6\u79cd": 756, "\u83b7\u53d6\u805a\u5408\u51fd\u6570\u7684\u5185\u90e8\u51fd\u6570": 765, "\u83b7\u53d6\u8282\u70b91\u7684\u7279\u5f81": 745, "\u83b7\u53d6\u8282\u70b9\u7279\u5f81": 736, "\u83b7\u53d6\u8282\u70b9\u7684id": 747, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u8fb9\u7c7b\u578b": 736, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u63a9\u7801": 736, "\u83b7\u53d6\u8fb90\u548c3\u7684\u7279\u5f81": 745, "\u83b7\u53d6\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 757, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9": 747, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9\u548c\u8fb9id": 747, "\u83b7\u5f97": 760, "\u867d\u7136dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u90bb\u5c45\u91c7\u6837\u5668": 756, "\u867d\u7136\u4e0a\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u8fb9\u754c": 756, "\u867d\u7136\u8fd9\u4e24\u4e2a\u6a21\u5757\u90fd\u6bd4\u4e0a\u8ff0\u7684\u793a\u4f8b\u4ee3\u7801\u8981\u590d\u6742": 767, "\u884c\u4f18\u5148": 745, "\u8868\u660e\u4e24\u8282\u70b9\u95f4\u5b58\u5728\u5173\u7cfb": 743, "\u8868\u793a": 751, "\u8868\u793a\u5728\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u5b58\u5728\u4ece": 748, "\u8868\u793a\u5b83\u662f\u4ece\u8282\u70b9": 747, "\u8868\u793a\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u8ba1\u7b97\u7ed3\u679c": 765, "\u88ab\u4e70\u4e0b": 757, "\u88ab\u5173\u6ce8": 757, "\u88ab\u805a\u5408\u7684\u7279\u5f81\u5c06\u4f1a\u4e0e\u8282\u70b9\u7684\u521d\u59cb\u7279\u5f81\u62fc\u63a5\u8d77\u6765": 764, "\u8981\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u91c7\u6837\u5668": 761, "\u8981\u5bf9\u6e90\u8282\u70b9\u7684": 751, "\u8981\u5c06\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u5165": 761, "\u8981\u6267\u884c\u8d1f\u91c7\u6837": 770, "\u8981\u67e5\u627e\u7ed9\u5b9a\u8282\u70b9\u7c7b\u578b\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u6570\u91cf": 756, "\u8981\u805a\u5408\u7684\u7279\u5f81\u5927\u5c0f\u4e3a": 769, "\u8981\u8ba1\u7b97": 756, "\u89c11": 742, "\u8ba1\u7b97": [756, 770], "\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u94fe\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 770, "\u8ba1\u7b97\u5e94\u7528\u4e8e\u7ed9\u5b9a\u7684\u4e00\u5806\u76ee\u6807\u8282\u70b9\u6240\u91c7\u6837\u7684\u5b50\u56fe": 764, "\u8ba1\u7b97\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 759, "\u8ba1\u7b97\u5fc5\u987b\u5728\u8fb9\u4e0a\u4fdd\u5b58\u6d88\u606f": 752, "\u8ba1\u7b97\u635f\u5931\u503c": 771, "\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u63a5\u53d7\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7684\u4e24\u4e2a\u5b57\u5178": 757, "\u8ba1\u7b97\u635f\u5931\u5e76\u53cd\u5411\u4f20\u64ad": 761, "\u8ba1\u7b97\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 757, "\u8ba1\u7b97\u8f93\u51fa": 758, "\u8ba1\u7b97\u8fb9\u5b50\u56fe\u4e2d\u8fb9\u7684\u5f97\u5206": 757, "\u8ba1\u7b97\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u5ea6": 771, "\u8bad\u7ec3": [736, 749, 754, 764, 766, 771], "\u8bad\u7ec3\u4e00\u4e2a\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u6d89\u53ca\u5230\u6bd4\u5bf9\u4e24\u4e2a\u76f8\u8fde\u63a5\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u4e0e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u7684\u5dee\u5f02": 770, "\u8bad\u7ec3\u4e0b\u6e38\u4efb\u52a1\u7684\u5206\u7c7b\u5668": 770, "\u8bad\u7ec3\u540e": 770, "\u8bad\u7ec3\u5668": 738, "\u8bad\u7ec3\u5668\u4f1a\u5bf9\u5c40\u90e8\u5206\u533a\u4e2d\u5e26\u6807\u7b7e\u8282\u70b9\u7684\u5b50\u96c6\u8fdb\u884c\u8ba1\u7b97": 740, "\u8bad\u7ec3\u5668\u8fdb\u7a0b": 738, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [749, 755], "\u8bad\u7ec3\u5faa\u73af\u901a\u8fc7\u6570\u636e\u52a0\u8f7d\u5668\u53bb\u904d\u5386\u6570\u636e": 759, "\u8bad\u7ec3\u6548\u7387\u4f1a\u5f88\u4f4e": 769, "\u8bad\u7ec3\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357\u53ef\u4ee5\u5728": 736, "\u8bad\u7ec3\u6a21\u578b": 761, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u548c\u540c\u6784\u56fe\u65f6\u4e00\u81f4": 770, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u91cc\u4f1a\u91cd\u590d\u6784\u5efa\u8d1f\u91c7\u6837\u56fe\u5e76\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u503c": 770, "\u8bad\u7ec3\u7b97\u6cd5\u6709\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 758, "\u8bad\u7ec3\u811a\u672c": 741, "\u8bad\u7ec3\u8fc7\u7a0b\u5305\u62ec\u904d\u5386dataloader\u548c\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u90e8\u5206": 769, "\u8bad\u7ec3\u90e8\u5206\u548c\u540c\u6784\u56fe\u7684\u8bad\u7ec3\u57fa\u672c\u4e00\u81f4": 767, "\u8bad\u7ec3\u90e8\u5206\u5982\u4e0b\u6240\u793a": 767, "\u8bb0\u4e3a": 743, "\u8bb0\u4f5c": 770, "\u8bb2\u89e3\u4e86\u5982\u4f55\u5bf9\u5c0f\u89c4\u6a21\u7684\u56fe\u6570\u636e\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 766, "\u8bb8\u591a\u573a\u666f\u4e2d\u7684\u56fe\u6570\u636e\u662f\u7531\u591a\u4e2a\u56fe\u7ec4\u6210": 769, "\u8bb8\u591a\u635f\u5931\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807": 770, "\u8bb8\u591a\u77e5\u540dpython\u5e93": 744, "\u8bbe\u7f6e": 748, "\u8bbe\u7f6e\u9009\u9879": 763, "\u8bbf\u95ee\u5176\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 756, "\u8bbf\u95ee\u8be5\u5757\u7684\u8f93\u5165\u8282\u70b9\u7279\u5f81": 756, "\u8be5api\u4f1a\u76f8\u5e94\u5730\u6253\u4e71\u6240\u6709\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 740, "\u8be5api\u652f\u6301\u968f\u673a\u5212\u5206\u548c\u4e00\u4e2a\u57fa\u4e8e": 740, "\u8be5pytorch\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u6279\u7684\u5f62\u5f0f\u8fed\u4ee3\u8bad\u7ec3\u8fb9id\u7684\u6570\u7ec4": 757, "\u8be5\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\u5b9e\u73b0": 760, "\u8be5\u4f8b\u5b50\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u5355\u4e2a\u8282\u70b9": 756, "\u8be5\u4f8b\u5b50\u91cc\u7701\u7565\u4e86\u8bad\u7ec3\u65e9\u505c\u548c\u6a21\u578b\u4fdd\u5b58\u90e8\u5206\u7684\u4ee3\u7801": 767, "\u8be5\u505a\u6cd5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c": 752, "\u8be5\u51fd\u6570\u5047\u5b9a\u539f\u59cb\u6570\u636e\u5df2\u7ecf\u4f4d\u4e8e": 736, "\u8be5\u51fd\u6570\u7684\u7ec6\u8282\u5982\u4e0b\u6240\u793a": 764, "\u8be5\u540d\u79f0\u4ecd\u5b58\u5728\u4e8e\u7fa4\u96c6\u4e2d": 739, "\u8be5\u56fe\u5177\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 748, "\u8be5\u5b50\u56fe\u5305\u62ec\u521d\u59cb\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u548c\u6307\u5b9a\u8282\u70b9\u7684\u5165\u8fb9": 756, "\u8be5\u5f20\u91cf\u7684\u7b2c\u4e00\u7ef4\u5fc5\u987b\u4e0e\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u6570\u91cf\u4e00\u81f4": 745, "\u8be5\u6587\u4ef6\u5305\u542b\u672c\u5730\u8ba1\u7b97\u673a\u4e2d\u5206\u533a\u6570\u636e\u7684\u4fe1\u606f": 741, "\u8be5\u65b9\u6cd5\u80fd\u8282\u7701\u5728\u5927\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u9500\u548c\u8ba1\u7b97\u8d44\u6e90": 755, "\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4e3a\u5b83\u4eec\u751f\u6210\u8fb9\u754c": 756, "\u8be5\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u957f\u5ea6\u6216\u8fde\u63a5\u7684\u5f3a\u5ea6": 743, "\u8be5\u6a21\u578b\u4e0e\u5f02\u6784\u56fe\u4e0a\u8fb9\u5206\u7c7b\u7684\u6a21\u578b\u6709\u4e9b\u4e0d\u540c": 770, "\u8be5\u6a21\u578b\u7684\u8f93\u5165\u5305\u62ec\u4e0a\u8ff0\u4e09\u9879\u4ee5\u53ca\u8f93\u5165\u7684\u7279\u5f81": 759, "\u8be5\u7c7b\u4e3a\u5bfc\u5165": 732, "\u8be5\u811a\u672c\u5305\u542b\u56db\u4e2a\u53c2\u6570": 741, "\u8be5\u811a\u672c\u6709\u4ee5\u4e0b\u5047\u8bbe": 741, "\u8be5\u8fb9\u7c7b\u578b\u662f\u901a\u8fc7\u5408\u5e76\u6240\u6709\u4ece": 767, "\u8be5\u91c7\u6837\u65b9\u6cd5\u6839\u636e\u4e0e\u8282\u70b9\u7684\u5ea6\u7684\u5e42\u6210\u6b63\u6bd4\u7684\u6982\u7387\u5206\u5e03\u5bf9\u8d1f\u6837\u672c\u76ee\u6807\u8282\u70b9\u8fdb\u884c\u91c7\u6837": 759, "\u8be6\u7ec6\u7684\u5b9e\u73b0\u8bf7\u53c2\u8003": 736, "\u8be6\u7ec6\u89e3\u91ca": 740, "\u8bf4\u660e\u805a\u5408\u662f\u9010\u7c7b\u8fdb\u884c\u7684": 753, "\u8bf7\u4f7f\u7528": 734, "\u8bf7\u53c2\u8003": [736, 757, 771], "\u8bf7\u53c2\u8003dgl\u7684\u5185\u7f6e\u6570\u636e\u96c6": 736, "\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357\u7684": 766, "\u8bf7\u53c2\u89c1": [736, 740, 751], "\u8bf7\u53c2\u89c1\u542f\u52a8\u811a\u672c\u90e8\u5206": 739, "\u8bf7\u53c2\u9605": 733, "\u8bf7\u53c2\u9605\u4e0b\u6587\u91cc\u5206\u5e03\u5f0f\u56fe\u91c7\u6837\u90e8\u5206": 739, "\u8bf7\u53c2\u9605\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u7ae0\u8282": 739, "\u8bf7\u6ce8\u610f": [733, 736, 737, 738, 756, 761, 764, 771], "\u8bf7\u786e\u4fdd\u4f7f\u7528\u4e0e\u539f\u59cb\u6587\u4ef6\u540d\u76f8\u540c\u7684\u540e\u7f00": 734, "\u8bf7\u786e\u4fdd\u5b83\u88ab\u5b58\u653e\u5728\u76ee\u5f55": 734, "\u8bf8\u5982\u91c7\u6837": 733, "\u8bfb\u51fa": 769, "\u8bfb\u51fa\u51fd\u6570\u4f1a\u5206\u522b\u4f5c\u7528\u5728\u56fe\u6279\u6b21\u4e2d\u7684\u6bcf\u5f20\u56fe\u4e0a": 769, "\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528networkx\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u89e3\u6790": 744, "\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003": [761, 771], "\u8bfb\u8005\u53ef\u4ee5\u5728api\u6587\u6863\u4e2d\u627e\u5230": 765, "\u8bfb\u8005\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53c2\u8003": 767, "\u8bfb\u8005\u53ef\u53c2\u8003": [743, 747], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": 758, "\u8c03\u7528\u540e": 751, "\u8c03\u7528\u6b64api": 739, "\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u635f\u5931": 770, "\u8d1f\u6837\u672c": 759, "\u8d1f\u8d23\u4f7f\u7528": 756, "\u8d1f\u8d23\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684": 741, "\u8d1f\u91c7\u6837": 770, "\u8d2d\u4e70": 757, "\u8d4b\u503c": 767, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [749, 755], "\u8df3\u8fc7\u4e00\u4e9b\u5904\u7406\u7684\u4ee3\u7801": 736, "\u8df3\u8fc7\u6570\u636e\u5904\u7406": 736, "\u8f6c\u6362\u6210int32": 747, "\u8f6c\u6362\u6210int64": 747, "\u8f7d\u5165ogb\u7684graph": 735, "\u8f7d\u5165ogb\u7684link": 735, "\u8f7d\u5165ogb\u7684nod": 735, "\u8f7d\u5165\u6570\u636e\u96c6": 735, "\u8f83\u5927\u65f6": 755, "\u8f93\u5165": 765, "\u8f93\u5165\u4ecd\u7136\u662fdgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868\u548c\u8f93\u5165\u7279\u5f81": 757, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81": 771, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81\u5b57\u5178": 771, "\u8f93\u5165\u7279\u5f81\u5c06\u88ab\u7ec4\u7ec7\u4e3a\u5143\u7ec4": 765, "\u8f93\u5165\u7684user\u548cgame\u8282\u70b9": 756, "\u8f93\u5165\u7ef4\u5ea6\u53ef\u88ab\u5206\u4e3a\u6e90\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6": 763, "\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u5c06\u540c\u65f6\u5305\u542b\u8fd9\u4e9b\u5b64\u7acb\u8282\u70b9": 756, "\u8f93\u5165\u8fd8\u53ef\u4ee5\u5305\u62ec\u8fb9\u81ea\u8eab\u7684\u7279\u5f81": 767, "\u8f93\u51fa\u7684user\u548cgame\u8282\u70b9": 756, "\u8f93\u51fa\u7684\u7ef4\u5ea6\u548c\u9690\u5c42\u7684\u7ef4\u5ea6": 763, "\u8f93\u51fa\u76ee\u5f55\u91cc\u59cb\u7ec8\u5305\u542b\u4e00\u4e2a\u540d\u4e3axxx": 740, "\u8f93\u51fa\u8282\u70b9": 756, "\u8f93\u51fa\u8282\u70b9\u4e5f\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 756, "\u8f93\u51fa\u8282\u70b9\u53ef\u4ee5\u6bd4\u4ee5\u4e0a\u8282\u70b9\u5305\u542b\u66f4\u591a\u8282\u70b9": 756, "\u8f93\u51fa\u8282\u70b9\u7684id\u4f4d\u4e8e\u5176\u5b83\u8282\u70b9\u4e4b\u524d": 756, "\u8fb9": [736, 740, 742, 743, 745, 747, 750, 751], "\u8fb9\u4e0a\u8ba1\u7b97": 750, "\u8fb9\u5206\u7c7b": [749, 757, 766, 770, 771], "\u8fb9\u5206\u7c7b\u4e2d\u76f8\u540c\u7684\u90bb\u5c45\u91c7\u6837\u5668": 759, "\u8fb9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u7684\u8bad\u7ec3": 766, "\u8fb9\u5206\u7c7b\u6a21\u578b\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210": 757, "\u8fb9\u53ca\u5176\u7279\u5f81": 744, "\u8fb9\u5b50\u56fe\u4ee5\u53ca\u8f93\u5165\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad": 757, "\u8fb9\u6743\u91cd\u53ef\u4ee5\u662f\u8fde\u63a5\u5f3a\u5ea6\u6216\u8005\u4fe1\u5fc3\u6307\u6570": 768, "\u8fb9\u6743\u91cd\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a": 768, "\u8fb9\u7279\u5f81": [738, 739], "\u8fb9\u7279\u5f81\u548c\u56fe\u91c7\u6837": 739, "\u8fb9\u754c\u5b50\u56fe": 756, "\u8fb9\u7684id\u4f4d\u4e8e\u90bb\u8fd1\u533a\u95f4\u5185": 736, "\u8fb9\u7684\u7279\u5f81\u6570\u636e": 766, "\u8fb9\u7684\u90bb\u5c45\u7684\u5c40\u90e8\u6027": 736, "\u8fb9\u7c7b\u578b": [736, 748], "\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u79f0\u4f5c": 767, "\u8fb9\u7c7b\u578b\u9884\u6d4b\u7684\u7b2c\u4e00\u6b65\u4ecd\u7136\u662f\u8ba1\u7b97\u8282\u70b9\u8868\u793a": 767, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": [738, 749], "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u56fe\u4f5c\u4e3a\u8fb9\u754c": 756, "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u8fb9\u754c": 756, "\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178": 756, "\u8fd4\u56de\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\u7684\u5143\u7ec4": 736, "\u8fd4\u56de\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u7279\u5f81\u5b57\u5178": 753, "\u8fd4\u56de\u7684\u662f": 739, "\u8fd8\u5141\u8bb8\u901a\u8fc7\u6307\u5b9a": 740, "\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u4e0b\u6e38\u4efb\u52a1\u83b7\u53d6\u9690\u85cf\u8282\u70b9\u8868\u793a": 771, "\u8fd8\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\u8de8\u7c7b\u578b\u6574\u5408\u51fd\u6570": 753, "\u8fd8\u652f\u6301\u751f\u6210\u7528\u4e8e\u94fe\u63a5\u9884\u6d4b\u7684\u8d1f\u6837\u672c": 759, "\u8fd8\u662f": 767, "\u8fd8\u80fd\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528": 747, "\u8fd8\u9700\u8981\u5728\u8bfb\u51fa\u51fd\u6570\u4e2d\u805a\u5408\u4e0d\u540c\u7c7b\u522b\u7684\u8282\u70b9": 769, "\u8fd8\u9700\u8981\u5c06\u5176\u4e0e": 761, "\u8fd92\u4e2a\u5b57\u5178\u4e0e": 765, "\u8fd9\u4e00\u793a\u4f8b\u6765\u4e86\u89e3\u5982\u4f55\u9884\u6d4b\u5f02\u6784\u56fe\u4e2d\u7684\u8fb9\u7c7b\u578b": 767, "\u8fd9\u4e00\u7ae0\u4e2d\u63d0\u5230\u7684\u56fe\u5377\u79ef\u7f51\u7edc\u83b7\u5f97": 767, "\u8fd9\u4e0e\u5728": 771, "\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u5e03\u5c14\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165": 739, "\u8fd9\u4e2a": 766, "\u8fd9\u4e2aapi\u4f1a\u4e0edgl\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u5e76\u521b\u5efa\u91c7\u6837\u5668\u8fdb\u7a0b": 739, "\u8fd9\u4e2aapi\u5c06\u8fd0\u884c\u670d\u52a1\u5668\u4ee3\u7801": 739, "\u8fd9\u4e2a\u4f8b\u5b50\u662f\u8bc4\u5206\u9884\u6d4b\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 767, "\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u628a\u539f\u56fe\u8f6c\u6362\u6210\u4e00\u4e2a\u5305\u542b\u53cd\u5411\u8fb9\u7684\u56fe": 747, "\u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u53d8\u91cf\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u548c\u5176\u4ed6\u8f93\u5165\u7279\u5f81": 768, "\u8fd9\u4e2a\u5b57\u5178\u7684\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u91cc": 753, "\u8fd9\u4e2a\u5b57\u5178\u7684\u952e\u4e3a\u5173\u7cfb\u540d": 765, "\u8fd9\u4e2a\u63a5\u53e3\u5c06\u66f4\u65b0\u6240\u6709\u7684\u8fb9": 751, "\u8fd9\u4e2a\u6570\u636e\u52a0\u8f7d\u5668\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668": 756, "\u8fd9\u4e2a\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe": 736, "\u8fd9\u4e2a\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 736, "\u8fd9\u4e2a\u6574\u5408\u65b9\u5f0f\u53ef\u4ee5\u662f": 753, "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f02\u6784\u56fe": 767, "\u8fd9\u4e2a\u6a21\u578b\u4e0d\u4ec5\u53ef\u4ee5\u505a\u8282\u70b9\u5206\u7c7b": 771, "\u8fd9\u4e2a\u6a21\u578b\u5177\u6709\u53ef\u8c03\u8282\u7684\u5c42\u6570": 771, "\u8fd9\u4e2a\u8fc7\u7a0b": 736, "\u8fd9\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u4f1a\u6784\u5efa\u8ba1\u7b97\u7684\u4f9d\u8d56\u5173\u7cfb\u56fe": 755, "\u8fd9\u4e3a\u4ece\u6574\u4f53\u4e0a\u8fdb\u884c\u7cfb\u7edf\u4f18\u5316\u63d0\u4f9b\u4e86\u7a7a\u95f4": 751, "\u8fd9\u4e48\u505a\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4": 733, "\u8fd9\u4e9budf\u5fc5\u987b\u5728": 739, "\u8fd9\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u72ec\u7acb\u7684id\u7a7a\u95f4\u548c\u7279\u5f81": 748, "\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32": 751, "\u8fd9\u4e9b\u56fe\u8868\u793a\u6bcf\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56": 761, "\u8fd9\u4e9b\u5c5e\u6027\u65e8\u5728\u523b\u753b\u6bcf\u4e00\u79cd\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 753, "\u8fd9\u4e9b\u5e03\u5c14\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf": 739, "\u8fd9\u4e9b\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u548c\u6d88\u606f\u4f20\u9012\u4e2d\u7684\u503c\u65e0\u6548": 764, "\u8fd9\u4e9b\u670d\u52a1\u5668\u4e00\u8d77\u5de5\u4f5c\u4ee5\u5c06\u56fe\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 738, "\u8fd9\u4e9b\u6784\u5efa\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u91cd\u89c6\u6027\u80fd\u7684\u573a\u666f": 744, "\u8fd9\u4e9b\u6a21\u5757\u662f\u7eafpytorch": 763, "\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u662f\u6807\u91cf": 745, "\u8fd9\u4e9b\u7c7b\u4f1a\u751f\u6210\u9700\u8ba1\u7b97\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u8ba1\u7b97\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u56fe": 761, "\u8fd9\u4e9b\u8282\u70b9\u4e0e\u7528\u6237\u5e0c\u671b\u8ba1\u7b97\u6700\u7ec8\u8868\u793a\u7684\u8282\u70b9\u76f8\u540c": 761, "\u8fd9\u4e9b\u8282\u70b9\u662f\u8ba1\u7b97\u8282\u70b9\u6700\u7ec8\u8868\u793a\u6240\u9700\u7684\u6240\u6709\u5fc5\u9700\u7684\u8282\u70b9": 761, "\u8fd9\u4ec5\u662f\u4e2a\u4f8b\u5b50": 769, "\u8fd9\u4f1a\u5c06\u56fe\u7ed3\u6784\u548c\u7279\u5f81\u6570\u636e\u90fd\u62f7\u8d1d\u5230\u6307\u5b9a\u7684\u8bbe\u5907": 746, "\u8fd9\u4f1a\u975e\u5e38\u6d88\u8017\u5185\u5b58": 752, "\u8fd9\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4": 740, "\u8fd9\u5305\u62ec\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 738, "\u8fd9\u53d6\u51b3\u4e8e\u56fe\u4e2d\u8fb9\u7684\u65b9\u5411\u6027": 743, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u574f": 739, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u6027\u80fd\u4e0d\u4f73": 764, "\u8fd9\u53ef\u80fd\u5e26\u6765\u975e\u6700\u4f18\u7684\u914d\u7f6e": 740, "\u8fd9\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528": 748, "\u8fd9\u5bf9\u4e8e\u540c\u6b65sgd\u975e\u5e38\u91cd\u8981": 739, "\u8fd9\u5c31\u5e26\u6765\u4e86\u5177\u6709\u4e0d\u540c\u7279\u5f81\u7684\u591a\u6761\u8fb9": 743, "\u8fd9\u5e73\u8861\u4e86\u4e0d\u540c\u7c7b\u578b\u8282\u70b9\u7684\u8fde\u8fb9\u6570\u91cf": 740, "\u8fd9\u5f88\u5bb9\u6613\u8d85\u8fc7\u4e00\u5757gpu\u7684\u663e\u5b58\u9650\u5236": 755, "\u8fd9\u662f\u4e00\u4e2a": 751, "\u8fd9\u662f\u56e0\u4e3adgl\u8981\u5b9a\u4f4d\u5e76\u5220\u9664\u5305\u542b\u5728\u5c0f\u6279\u6b21\u4e2d\u7684\u53cd\u5411\u8fb9": 757, "\u8fd9\u662f\u56e0\u4e3a\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u8fb9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee": 740, "\u8fd9\u662f\u56e0\u4e3a\u5b83\u5bf9\u4e00\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u6d88\u606f\u7684\u805a\u5408\u548c\u7ed3\u5408": 758, "\u8fd9\u662f\u56e0\u4e3a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u53ea\u7528\u4e00\u4e2a\u56fe": 736, "\u8fd9\u662f\u5c0f\u6279\u91cf\u8bad\u7ec3\u4e2d\u7684\u5e38\u89c1\u7528\u6cd5": 754, "\u8fd9\u662f\u7531\u4e8e": 744, "\u8fd9\u6837\u4e0d\u4ec5\u80fd\u63d0\u5347\u901f\u5ea6": 747, "\u8fd9\u6837\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5e2e\u7528\u6237\u8282\u7701\u5927\u91cf\u7684\u6570\u636e\u5904\u7406\u65f6\u95f4": 737, "\u8fd9\u6837\u7684\u4efb\u52a1\u79f0\u4f5c": 770, "\u8fd9\u6837\u7684\u65b9\u6cd5\u79f0\u4f5c": 770, "\u8fd9\u70b9\u5728\u4e4b\u540e\u7684": 756, "\u8fd9\u79cd\u60c5\u51b5\u4e0b": 767, "\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97dgl\u7684\u4ee3\u7801\u53ef\u4ee5\u65e0\u7f1d\u5d4c\u5165\u5230\u540e\u7aef\u6846\u67b6\u7684\u4ee3\u7801\u4e2d": 762, "\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f": 748, "\u8fd9\u7b49\u4ef7\u4e8e\u628a\u6bcf\u6761\u6d88\u606f\u548c\u5bf9\u5e94\u7684\u8fb9\u6743\u91cd\u76f8\u4e58": 768, "\u8fd9\u7c7b\u64cd\u4f5c\u53eb\u505a": 769, "\u8fd9\u8981\u6c42\u6240\u6709\u5f20\u91cf\u53c2\u6570\u90fd\u5df2\u7ecf\u653e\u5728gpu\u4e0a": 746, "\u8fd9\u90e8\u5206\u4ee3\u7801\u4f1a\u56e0\u6a21\u5757\u800c\u5f02": 764, "\u8fd9\u91cc": 736, "\u8fd9\u91cc\u4ee56": 758, "\u8fd9\u91cc\u5148\u89e3\u91ca\u4e00\u4e0b\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 756, "\u8fd9\u91cc\u5220\u9664\u4e86\u81ea\u73af": 761, "\u8fd9\u91cc\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u5faa\u73af\u4ec5\u5305\u542b\u4f7f\u7528\u5b9a\u5236\u7684\u6279\u5904\u7406\u8fed\u4ee3\u5668\u904d\u5386\u6570\u636e\u96c6\u7684\u5185\u5bb9": 761, "\u8fd9\u91cc\u7684\u79bb\u7ebf\u63a8\u65ad\u88ab\u5b9e\u73b0\u4e3agnn\u6a21\u5757\u7684\u4e00\u4e2a\u65b9\u6cd5": 758, "\u8fd9\u91cc\u7701\u7565\u4e86": 736, "\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8f93\u5165\u7684\u56fe\u6570\u636e\u4e0d\u80fd\u5305\u542b\u8fb9\u7684\u7c7b\u578b\u4fe1\u606f": 767, "\u8fdb\u800c\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u6765\u6784\u5efadglgraph\u5bf9\u8c61": 744, "\u8fdb\u884c\u4f18\u5316": 752, "\u8fdb\u884c\u521b\u5efa\u65f6": 744, "\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 771, "\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97": 771, "\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316": 763, "\u8fdb\u884c\u8bad\u7ec3": 767, "\u8fde\u63a5\u4e00\u5bf9\u8282\u70b9": 743, "\u9009\u62e9\u4e00\u4e2a\u5c0f\u6279\u6b21\u7684\u56fe\u8282\u70b9": 755, "\u9010\u5143\u7d20\u6c42\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c": 769, "\u9010\u5c42\u8ba1\u7b97\u8868\u793a": 758, "\u901a\u5e38": [739, 760], "\u901a\u5e38\u4f1a\u805a\u5408\u5e76\u6c47\u603b\u5355\u4e2a\u56fe\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f": 769, "\u901a\u5e38\u5728\u6d88\u606f\u4f20\u9012\u7684\u6700\u540e\u4e00\u6b65\u5c06\u5176\u4e0e\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408": 751, "\u901a\u5e38\u65e0\u6cd5\u8fdb\u884c": 755, "\u901a\u5e38\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u90bb\u5c45\u8fdb\u884c\u771f\u6b63\u7684\u805a\u5408": 758, "\u901a\u5e38\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u91c7\u6837\u8fc7\u7a0b\u53d8\u6162\u5f88\u591a": 757, "\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u591a\u5c42\u7684\u56fe\u795e\u7ecf\u7f51\u7edc": 771, "\u901a\u8fc7": [745, 751], "\u901a\u8fc7idx\u5f97\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e00\u4e2a\u6837\u672c": 733, "\u901a\u8fc7idx\u83b7\u53d6\u5bf9\u5e94\u7684\u56fe\u548c\u6807\u7b7e": 736, "\u901a\u8fc7\u5173\u7cfb\u540d": 765, "\u901a\u8fc7\u5e73\u5747\u8bfb\u51fa\u503c\u6765\u8ba1\u7b97\u5355\u56fe\u7684\u8868\u5f81": 769, "\u901a\u8fc7\u5f20\u91cf\u5206\u914d\u521b\u5efa\u7279\u5f81\u65f6": 745, "\u901a\u8fc7\u7528\u56fe\u523b\u753b\u540c\u4e00\u793e\u533a\u91cc\u4eba\u4e0e\u4eba\u95f4\u7684\u53cb\u8c0a": 769, "\u901a\u8fc7\u7d22\u5f15": 764, "\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u5bf9\u8fb9\u5c5e\u6027\u7684\u9884\u6d4b": 767, "\u901a\u8fc7\u8c03\u7528": 765, "\u904d\u5386\u6240\u6709\u8fb9\u7684\u7c7b\u578b": 756, "\u90a3\u4e48\u5728\u5757\u4e0a\u8ba1\u7b97\u7684\u4ee3\u7801\u4e5f\u662f\u7c7b\u4f3c\u7684": 760, "\u90a3\u4e48\u5b83\u4eec\u5df2\u7ecf\u652f\u6301\u4e86\u8fb9\u6743\u91cd": 768, "\u90a3\u4e48\u7528\u6237\u53ea\u9700\u8981\u518d\u7f16\u5199\u4e00\u4e2a\u7528": 767, "\u90a3\u4e48\u7528\u6237\u5c31\u9700\u8981\u8c03\u7528\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 752, "\u90a3\u4e48\u8be5\u51fd\u6570\u5e94\u4ee5\u521d\u59cb\u56fe\u4ee5\u53ca\u7531\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u6784\u6210\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 759, "\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b\u901a\u5e38\u5982\u4e0b": 755, "\u90bb\u5c45\u91c7\u6837\u5728\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u66f4\u597d\u5730\u53d1\u6325\u4f5c\u7528": 758, "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u5757\u7684\u5217\u8868": 759, "\u90bb\u63a5\u77e9\u9635\u91cc\u7684\u5143\u7d20\u4e0d\u662f\u96f6\u5c31\u662f\u4e00": 768, "\u90fd\u662f\u540e\u7eed\u56fe\u795e\u7ecf\u7f51\u7edc\u5c42\u8ba1\u7b97\u4e2d\u67d0\u6761\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 756, "\u90fd\u6709": 770, "\u90fd\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 760, "\u914d\u7f6e\u6587\u4ef6": 741, "\u91c7\u6837": 759, "\u91c7\u6837\u4ee3\u7801\u7c7b\u4f3c\u4e8e\u5355\u8fdb\u7a0b\u91c7\u6837": 739, "\u91c7\u6837\u5668": 738, "\u91c7\u6837\u5668\u65e0\u6cd5\u5728\u5177\u6709\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7684pytorch": 739, "\u91c7\u6837\u5668\u8fdb\u7a0b": 738, "\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf\u5fc5\u987b\u5339\u914d": 741, "\u91cc\u5b9e\u73b0\u4e86\u5f88\u591a\u5e38\u7528\u7684\u56fe\u6570\u636e\u96c6": 732, "\u91cc\u6240\u4ecb\u7ecd\u7684\u6027\u80fd\u4f18\u5316": 764, "\u91cc\u662f\u5426\u6709\u5904\u7406\u8fc7\u7684\u6570\u636e\u6587\u4ef6": 737, "\u91cc\u7684": 770, "\u91cc\u8bfb\u53d6\u5904\u7406\u8fc7\u7684\u6570\u636e": 737, "\u91cc\u9762\u4fdd\u5b58\u4e86\u8bad\u7ec3\u811a\u672c": 741, "\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b": 755, "\u91cd\u6392\u56fe\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u5c40\u90e8\u6027": 736, "\u91cd\u65b0\u521d\u59cb\u5316\u53ef\u5b66\u4e60\u7684\u53c2\u6570": 763, "\u9488\u5bf9mxnet\u548cpytorch\u540e\u7aef\u4e5f\u6709\u5bf9\u5e94\u7684\u6a21\u5757": 771, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [749, 755], "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [749, 755], "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [749, 755], "\u94fe\u63a5\u9884\u6d4b": [736, 749, 759, 766, 771], "\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u4e5f\u5e94\u4f7f\u7528\u7c7b\u4f3c\u7684\u5e03\u5c14\u6570\u7ec4": 739, "\u94fe\u63a5\u9884\u6d4b\u548c\u6574\u56fe\u5206\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 766, "\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5904\u7406\u4e0e\u8282\u70b9\u5206\u7c7b\u76f8\u4f3c": 736, "\u9500\u6bc1distgraph\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0distgraph\u7684\u884c\u4e3a\u6ca1\u6709\u88ab\u5b9a\u4e49": 739, "\u952e\u662f\u4e00\u79cd\u5173\u7cfb": 753, "\u957f\u5ea6\u4e3a3\u7684\u8282\u70b9\u7279\u5f81": 745, "\u95f4\u9694\u635f\u5931": 770, "\u9648\u77e5\u96e8": 749, "\u9664\u4e86": 757, "\u9664\u4e86\u56fe\u7ed3\u6784": 744, "\u9664\u4e86\u5e73\u8861\u8282\u70b9\u7684\u7c7b\u578b\u4e4b\u5916": 740, "\u9664\u4e86\u5f20\u91cf\u7684\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b\u4e4b\u5916": 739, "\u9664\u4e86\u6570\u636e\u7ef4\u5ea6": 763, "\u9664\u4e86\u7528\u6237\u5728\u521b\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u65f6\u65e0\u6cd5\u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 739, "\u9664\u4e86\u8f93\u5165\u56fe\u548c\u8f93\u5165\u5f20\u91cf": 765, "\u9664\u4ee5\u5165\u5ea6": 764, "\u9664\u6b64\u4e4b\u5916": 752, "\u968f\u540e": 759, "\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b": 757, "\u9690\u5c42\u5927\u5c0f\u4e3a": 755, "\u96c6\u7fa4\u4e2d\u7684\u6bcf\u53f0\u673a\u5668\u5404\u81ea\u8d1f\u8d23\u4e00\u5f20\u5b50\u56fe": 738, "\u9700\u8981\u4e0b\u56fe\u4e2d\u7684\u6765\u81ea\u8282\u70b94": 756, "\u9700\u8981\u4ee5\u5c0f\u6279\u6b21\u7684\u65b9\u5f0f\u8ba1\u7b97\u8fd9\u4e2agnn\u5c42\u6240\u6709\u8282\u70b9\u7684\u8f93\u51fa\u8868\u793a": 758, "\u9700\u8981\u5411\u6570\u636e\u8f7d\u5165\u5668\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u5bf9\u5e94\u8fb9id\u7684\u5b57\u5178": 759, "\u9700\u8981\u5bf9\u7528\u4e8e\u6574\u56fe\u7684gnn\u6a21\u5757\u8fdb\u884c\u5982\u4e0b\u8c03\u6574\u4ee5\u5c06\u5176\u7528\u4e8e\u5757\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5": 760, "\u9700\u8981\u5c06\u5176\u4e0e": 757, "\u9700\u8981\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a": 736, "\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u8282\u70b9\u548c\u8fb9\u7c7b\u578b": 748, "\u9700\u8981\u6839\u636e\u56fe\u7c7b\u578b\u88ab\u6307\u5b9a": 764, "\u9700\u8981\u6ce8\u610f": 769, "\u9700\u8981\u6ce8\u610f\u7684\u662f\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u8282\u70b9\u548c\u8fb9\u5c5e\u6027\u6ca1\u6709\u6279\u6b21\u5927\u5c0f\u5bf9\u5e94\u7684\u7ef4\u5ea6": 769, "\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c": 761, "\u975e\u7ebf\u6027\u548c\u57fa\u5206\u89e3": 761, "\u975e\u96f6\u7684\u5143\u7d20\u53ef\u4ee5\u53d6\u4efb\u610f\u6807\u91cf\u503c": 768, "\u975e\u96f6\u9879": 744, "\u9762\u5411\u90a3\u4e9b\u60f3\u8981\u5f00\u53d1\u65b0\u7684\u91c7\u6837\u7b97\u6cd5": 755, "\u987e\u5ba2": 743, "\u9884\u6d4b\u56fe\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u8fb9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u4efb\u52a1\u7c7b\u578b": 767, "\u9884\u6d4b\u5b83\u7684\u7c7b\u578b\u662f": 767, "\u9884\u6d4b\u7ed3\u679c\u523b\u753b\u4e86\u6574\u4e2a\u8f93\u5165\u56fe\u7684\u5c5e\u6027": 769, "\u9884\u6d4b\u8fb9\u5f97\u5206\u7684\u6a21\u578b\u548c\u8fb9\u5206\u7c7b": 770, "\u9996\u5148": 769, "\u9996\u5148\u4f7f\u7528pip\u5b89\u88c5ogb\u5305": 735, "\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0a\u56fe\u6240\u793a\u7684dglgraph": 756, "\u9996\u5148\u6211\u4eec\u904d\u5386\u56fe\u4e2d\u6240\u6709\u7684\u5173\u7cfb": 765, "\u9a8c\u8bc1": 739, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u6570\u636e\u96c6": 767, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u7684\u5206\u5272\u4e5f\u4ee5\u5e03\u5c14\u63a9\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u56fe\u4e0a": 771, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 739, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4ece\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u7c7b\u522b\u4e2d\u5206\u914d\u7684\u4e00\u4e2a\u7c7b\u522b": 771, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u6807\u6ce8\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57": 771, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u5212\u5206": 767, "\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u8282\u70b9\u770b\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 740, "\u9ad8\u5c42\u91c7\u6837api\u4e3a\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u91c7\u6837\u7b97\u6cd5": 739, "\u9ec4\u5d1f": 749, "\u9ed8\u8ba4": 733, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [739, 740], "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u8fdb\u884c\u7279\u5f81\u5408\u5e76": 748, "\uac00": [776, 778, 779, 781, 791, 794, 795, 805, 808, 809, 812], "\uac00\uae4c\uc6b4": 776, "\uac00\ub2a5": 814, "\uac00\ub2a5\ub3c4": 813, "\uac00\ub2a5\ud558\ub2e4": [776, 781, 786, 792, 794, 796, 800, 802, 811, 812, 814], "\uac00\ub2a5\ud55c": [782, 792, 794, 814], "\uac00\uc774\ub4dc\ub294": 776, "\uac00\uc774\ub4dc\uc640": 800, "\uac00\uc7a5": [792, 803, 804, 808, 811, 814], "\uac00\uc815\ud558\uace0": [778, 813], "\uac00\uc815\ud558\ub294": 779, "\uac00\uc815\ud558\uba74": 811, "\uac00\uc815\ud558\uc790": 794, "\uac00\uc815\ud55c\ub2e4": [781, 782, 810, 811], "\uac00\uc838\ub2e4": 800, "\uac00\uc911\uce58": [781, 784, 786, 791], "\uac00\uc911\uce58\uace0": 793, "\uac00\uc911\uce58\ub294": [784, 793], "\uac00\uc911\uce58\ub4e4\uc744": 807, "\uac00\uc911\uce58\ub85c": 781, "\uac00\uc911\uce58\ub97c": [781, 784, 786, 793], "\uac00\uc911\uce58\uc640": 784, "\uac00\uc911\uce58\uc758": 781, "\uac00\uc911\uce58\uc774\ub2e4": 781, "\uac00\uc9c0": [778, 779, 781, 797, 799, 804, 813, 814], "\uac00\uc9c0\uace0": [804, 812, 814], "\uac01": [772, 777, 778, 779, 780, 781, 782, 784, 786, 788, 789, 791, 795, 797, 798, 800, 801, 802, 804, 805, 808, 809, 811, 812, 813, 814], "\uac01\uac01": [792, 794, 803], "\uac04\uacb0\ud558\uac8c": 792, "\uac04\ub2e8\ud558\uac8c": [777, 804, 811], "\uac04\ub2e8\ud558\uace0": 772, "\uac04\ub2e8\ud558\ub2e4": [781, 804, 811], "\uac04\ub2e8\ud55c": 783, "\uac04\ub2e8\ud788": 811, "\uac04\ub7b5\ud558\uac8c": 776, "\uac04\ub7b5\ud55c": 811, "\uac04\uc12d\uc774": 812, "\uac04\uc5d0": [780, 789], "\uac04\uc758": [784, 812, 813], "\uac12": 774, "\uac12\ub3c4": 781, "\uac12\ub4e4\uc744": 814, "\uac12\ub4e4\uc774\ub2e4": 781, "\uac12\ub4e4\uc778\ub370": 781, "\uac12\uc5d0": [799, 802, 805], "\uac12\uc73c\ub85c": [781, 805], "\uac12\uc740": [781, 795, 809, 811], "\uac12\uc744": [780, 781, 793, 808, 811], "\uac12\uc758": 780, "\uac12\uc774": 781, "\uac12\uc774\ub2e4": 781, "\uac12\uc778": 782, "\uac15\ub3c4\ub97c": 784, "\uac15\ub825\ud55c\uac00": 798, "\uac15\uc870\ud558\uae30": 776, "\uac15\ud558\uac8c": 772, "\uac16\uac70\ub098": 784, "\uac16\uac8c": 795, "\uac16\uace0": [775, 779, 780, 781, 786, 788, 789, 792, 800, 803, 811], "\uac16\uae30": [781, 795], "\uac16\ub294": [779, 780, 781, 783, 784, 785, 786, 788, 789, 795, 797, 798, 799, 803, 805, 811, 812], "\uac16\ub294\ub2e4": [778, 780, 781, 784, 786, 789, 792, 793, 800, 801, 810, 813], "\uac16\ub294\ub2e4\uace0": [779, 781], "\uac16\ub294\ub2e4\uba74": [781, 789, 799], "\uac16\ub294\ub370": [779, 781, 792, 805], "\uac16\ub3c4\ub85d": [779, 780, 781, 798], "\uac16\uc544\uc57c": 786, "\uac16\uc73c\uba70": 811, "\uac16\uc744": [783, 784, 786, 795, 809], "\uac16\uc74c": 803, "\uac16\uc9c0": [784, 808], "\uac19\uace0": 779, "\uac19\ub2e4": [773, 778, 779, 781, 782, 789, 792, 794, 795, 797, 798, 799, 800, 802, 804, 808, 811, 812, 813], "\uac19\ub3c4\ub85d": 781, "\uac19\uc544\uc57c": [782, 786, 788], "\uac19\uc544\uc57c\ub9cc": 779, "\uac19\uc740": [773, 778, 779, 780, 781, 782, 784, 786, 788, 789, 792, 793, 794, 798, 799, 800, 803, 804, 807, 808, 809, 810, 811, 812, 813, 814], "\uac19\uc744": 779, "\uac19\uc774": [776, 784, 791, 798, 799, 802, 803, 807, 809, 810, 811, 812, 813, 814], "\uac1c": 788, "\uac1c\uac00": 781, "\uac1c\uae4c\uc9c0": 788, "\uac1c\ub150\uc5d0": [799, 804], "\uac1c\ub150\uc740": [798, 799, 804], "\uac1c\ub150\uc744": 783, "\uac1c\ub97c": 779, "\uac1c\ub9cc": 779, "\uac1c\ubc1c": 779, "\uac1c\ubc1c\uc744": 788, "\uac1c\ubc1c\uc774": 800, "\uac1c\ubc1c\ud558\uace0": 779, "\uac1c\uc218": [773, 779, 782], "\uac1c\uc218\uac00": [781, 798], "\uac1c\uc218\uacfc": [779, 782], "\uac1c\uc218\ub294": [779, 782, 803], "\uac1c\uc218\ub97c": [779, 781], "\uac1c\uc218\uc5d0": [781, 800], "\uac1c\uc218\uc640": [779, 781, 786], "\uac1c\uc218\uc758": [779, 781], "\uac1c\uc22b\ub97c": 776, "\uac1c\uc758": [775, 779, 780, 781, 782, 802, 813], "\uac1c\uc778": 797, "\uac1d\uccb4": [777, 778, 785, 808], "\uac1d\uccb4\uac00": 779, "\uac1d\uccb4\ub294": 792, "\uac1d\uccb4\ub4e4\uc744": 779, "\uac1d\uccb4\ub4e4\uc758": 776, "\uac1d\uccb4\ub85c": [775, 781], "\uac1d\uccb4\ub97c": [779, 792, 799], "\uac1d\uccb4\ub9cc": 775, "\uac1d\uccb4\uc5d0": 779, "\uac1d\uccb4\uc640": 777, "\uac1d\uccb4\uc774\ub2e4": 792, "\uac2f\uc218\ub97c": 805, "\uac70\uafb8\ub85c": 797, "\uac70\ub4ed": 781, "\uac70\ub4ed\uc81c\uacf1\uc5d0": 802, "\uac70\uc758": [776, 799, 802, 804, 811], "\uac78\ub9ac\ub294": 801, "\uac78\uccd0\uc11c": [781, 789, 808], "\uac80\uc0c9\ud560": 780, "\uac80\uc99d": [779, 781, 801, 811, 814], "\uac80\uc99d\uacfc": 797, "\uac80\uc99d\uc744": 774, "\uac83": [799, 803, 804, 805], "\uac83\uacfc": [779, 781, 784, 799, 802, 806, 811], "\uac83\uacfc\ub294": 804, "\uac83\ub3c4": [774, 788, 792, 811], "\uac83\ub3e0": 800, "\uac83\ub4e4\uc5d0": 785, "\uac83\ub4e4\uc774\ub2e4": 781, "\uac83\ub9cc\uc774": 803, "\uac83\uc5d0": [781, 803], "\uac83\uc73c\ub85c": [781, 800, 804, 814], "\uac83\uc740": [776, 779, 786, 793, 798, 799, 801, 803, 804, 811, 812, 813, 814], "\uac83\uc744": [772, 773, 776, 777, 779, 780, 781, 789, 792, 794, 798, 802, 803, 812, 814], "\uac83\uc774": [775, 776, 777, 781, 794, 798, 799, 800, 801, 802, 804, 812, 813], "\uac83\uc774\uace0": [776, 779, 799], "\uac83\uc774\ub2e4": [773, 774, 776, 779, 781, 784, 786, 788, 789, 794, 797, 798, 799, 802, 803, 804, 808, 809, 811, 812, 813, 814], "\uac83\uc774\uc9c0\ub9cc": 805, "\uac83\uc778\ub2e4": 781, "\uac83\uc778\uc9c0": [798, 803], "\uac83\uc778\uc9c0\uc5d0": 803, "\uac83\uc77c": [802, 812], "\uac83\uc785\ub2c8\ub2e4": 790, "\uac83\uc9c0\ub9cc": 781, "\uac83\ucc98\ub7fc": [793, 799, 802], "\uacb0\uacfc": [787, 794, 798, 801, 809], "\uacb0\uacfc\uac00": 812, "\uacb0\uacfc\ub294": [781, 808, 809], "\uacb0\uacfc\ub4e4\uc740": 809, "\uacb0\uacfc\ub4e4\uc774": 781, "\uacb0\uacfc\ub77c\ub294": 804, "\uacb0\uacfc\ub85c": 799, "\uacb0\uacfc\ub85c\uc11c": 814, "\uacb0\uacfc\ub97c": [781, 783, 792, 794, 795, 798, 804, 809, 812], "\uacb0\uacfc\uc5d0": [779, 792], "\uacb0\uacfc\uc640": 792, "\uacb0\uacfc\uc758": 812, "\uacb0\uc815\ud55c\ub2e4": 807, "\uacb0\uc815\ud560": [780, 789], "\uacb0\ud569\ud558\uace0": 792, "\uacbd\ub85c\ub4e4\uc740": 782, "\uacbd\ub85c\ub85c": 782, "\uacbd\ub85c\ub97c": 782, "\uacbd\uc6b0": [774, 777, 779, 781, 782, 786, 789, 792, 796, 797, 798, 803, 805, 807, 808, 809, 812, 813], "\uacbd\uc6b0\uac00": [789, 811, 813], "\uacbd\uc6b0\ub294": 789, "\uacbd\uc6b0\ub3c4": [777, 798, 803, 810, 812], "\uacbd\uc6b0\ub4e4": 803, "\uacbd\uc6b0\ub77c\uba74": 792, "\uacbd\uc6b0\ub97c": 794, "\uacbd\uc6b0\uc5d0": [777, 779, 801, 808], "\uacbd\uc6b0\uc5d0\ub294": [776, 781, 788, 794, 797, 807], "\uacbd\uc6b0\uc5d0\ub9cc": 779, "\uacbd\uc6b0\uc640": [776, 789, 798, 812], "\uacbd\uc6b0\uc640\ub294": 812, "\uacc4\ub2e8\ub41c": 813, "\uacc4\uc0b0": [802, 805, 808, 811], "\uacc4\uc0b0\ub418\uc5b4\uc57c": [797, 804], "\uacc4\uc0b0\ub41c": 781, "\uacc4\uc0b0\uc740": 801, "\uacc4\uc0b0\uc744": [778, 780, 781], "\uacc4\uc0b0\uc774": 779, "\uacc4\uc0b0\uc801\uc778": 781, "\uacc4\uc0b0\ud558\uace0\uc790": 811, "\uacc4\uc0b0\ud558\uae30": [778, 798, 799, 802, 811], "\uacc4\uc0b0\ud558\uae30\ub97c": 804, "\uacc4\uc0b0\ud558\ub294": [798, 799, 801, 802, 811, 813, 814], "\uacc4\uc0b0\ud558\ub294\ub370": 804, "\uacc4\uc0b0\ud558\uba74": 811, "\uacc4\uc0b0\ud55c": 804, "\uacc4\uc0b0\ud55c\ub2e4": [799, 813], "\uacc4\uc0b0\ud55c\ub2e4\uace0": 811, "\uacc4\uc0b0\ud560": [798, 801, 804, 813, 814], "\uacc4\uc0b0\ud574\uc57c\ud558\uae30": 801, "\uacc4\uc0b0\ud574\uc57c\ud55c\ub2e4": 801, "\uacc4\uc18d": 805, "\uacc4\ud68d\uc774\ub77c\uba74": 810, "\uace0\uac1d": 784, "\uace0\uae09": [792, 797], "\uace0\ub824\ud558\uac8c": 781, "\uace0\ub824\ud558\uc790": 798, "\uace0\ub824\ud55c": 781, "\uace0\ub824\ud574\uc11c": 781, "\uace0\ub9bd": 798, "\uace0\ub9bd\ub41c": 798, "\uace0\uc720\uc758": 806, "\uace0\uc720\ud558\uac8c": [779, 789], "\uace0\uc720\ud558\ub2e4": 780, "\uace0\uc720\ud55c": [780, 781, 786, 788], "\uace0\uce58\uae30": 804, "\uacf1\ud558\uace0": [792, 805], "\uacf1\ud558\uae30": 793, "\uacf1\ud574\uc11c": 792, "\uacf3\uc5d0": [781, 785], "\uacf5\uac04\uacfc": 789, "\uacf5\ub3d9": 784, "\uacf5\ubc31": 781, "\uacf5\ubc31\uc73c\ub85c": 781, "\uacf5\uc2dd": 775, "\uacf5\uc2dd\uc5d0": 798, "\uacf5\uc2dd\uc73c\ub85c": [792, 809], "\uacf5\uc2dd\uc740": [798, 808], "\uacf5\ud1b5\uc801\uc778": 785, "\uacfc": [778, 779, 781, 782, 783, 784, 805, 807, 810], "\uacfc\uc815\uc5d0\uc11c": [781, 808], "\uacfc\uc81c": 813, "\uacfc\uc81c\ub4e4\uc758": 810, "\uacfc\uc81c\ub97c": 781, "\uad00\uacc4": [783, 784, 789, 795], "\uad00\uacc4\uac00": [784, 789, 809], "\uad00\uacc4\ub294": [784, 789, 808, 809], "\uad00\uacc4\ub2f9": [789, 808], "\uad00\uacc4\ub4e4\uc744": [789, 799], "\uad00\uacc4\ub4e4\uc758": 809, "\uad00\uacc4\ub85c": 809, "\uad00\uacc4\ub85c\ubd80\ud130": 809, "\uad00\uacc4\ub97c": [784, 789, 809, 812], "\uad00\uacc4\uc5d0": 809, "\uad00\uacc4\uc758": 795, "\uad00\uacc4\uc774\uace0": [795, 799], "\uad00\uacc4\uc778": 799, "\uad00\ub828": [782, 809], "\uad00\ub828\ub41c": [776, 782, 789, 792, 807, 813], "\uad00\ub828\uc5c6\uc774": 780, "\uad00\ub828\uc774": 800, "\uad00\ub9ac\ud558\ub294\ub370": 789, "\uad00\ub9ac\ud55c\ub2e4": 779, "\uad49\uc7a5\ud788": [777, 812], "\uad50\uccb4\ud558\ub294": 804, "\uad50\uccb4\ud55c\ub2e4": 803, "\uad6c\ub3d9\ud558\uace0": 779, "\uad6c\ub9e4\uc790": 784, "\uad6c\ubcc4\uc774": 789, "\uad6c\ubcc4\ud558\uace0": 779, "\uad6c\ubcc4\ud558\ub294": 781, "\uad6c\ubcc4\ud558\ub294\ub370": 779, "\uad6c\ubcc4\ud574\ubcfc": 812, "\uad6c\ubd84\ub418\ub294": 781, "\uad6c\ubd84\ub41c\ub2e4": 781, "\uad6c\ubd84\ub41c\ub2e4\uace0": 811, "\uad6c\ubd84\uc9c1\uae30": 799, "\uad6c\ubd84\ud55c\ub2e4\uba74": 780, "\uad6c\uc131": 781, "\uad6c\uc131\ub418\uc5b4": [806, 810], "\uad6c\uc131\ub418\uc5b4\uc57c": 781, "\uad6c\uc131\ub41c": [781, 784, 812, 813], "\uad6c\uc131\ub41c\ub2e4": [781, 784, 799, 804, 809, 814], "\uad6c\uc131\ud558\ub294": 781, "\uad6c\uc131\ud560": 781, "\uad6c\uc785": 784, "\uad6c\uc785\ud588\uc74c": 784, "\uad6c\uc870": 783, "\uad6c\uc870\ub294": 779, "\uad6c\uc870\ub85c": 783, "\uad6c\uc870\ub97c": [788, 812], "\uad6c\uc870\uc640": [778, 779, 781, 785, 787], "\uad6c\uc870\uc774\ub2e4": 784, "\uad6c\uccb4\uc801\uc778": 776, "\uad6c\ud558\uace0": 811, "\uad6c\ud558\uae30": [792, 814], "\uad6c\ud558\ub294\ub370": [799, 802], "\uad6c\ud574\uc9c4": 812, "\uad6c\ud604": [776, 804, 811, 814], "\uad6c\ud604\uacfc": [799, 802], "\uad6c\ud604\ub355\uc5d0": 806, "\uad6c\ud604\ub3c4": [799, 802], "\uad6c\ud604\ub418\uc5b4": [792, 808, 809, 814], "\uad6c\ud604\ub418\uc5b4\uc57c": 773, "\uad6c\ud604\ub41c\ub2e4": [808, 811], "\uad6c\ud604\ub41c\ub2e4\ub294": 801, "\uad6c\ud604\uc0c1\uc758": [799, 802], "\uad6c\ud604\uc5d0": 776, "\uad6c\ud604\uc5d0\uc11c": 804, "\uad6c\ud604\uc740": [776, 779, 794, 798, 803, 804, 812], "\uad6c\ud604\uc774": [776, 792, 799, 802, 803], "\uad6c\ud604\ud558\uace0": [772, 778, 779, 792, 797, 805, 812], "\uad6c\ud604\ud558\uae30": [777, 797, 804], "\uad6c\ud604\ud558\uae30\ub9cc": 798, "\uad6c\ud604\ud558\ub294": [772, 773, 801, 803, 804], "\uad6c\ud604\ud558\ub294\ub370": 773, "\uad6c\ud604\ud558\ub294\uc9c0": 791, "\uad6c\ud604\ud558\uba74": 794, "\uad6c\ud604\ud55c": [798, 803], "\uad6c\ud604\ud55c\ub2e4": [773, 774], "\uad6c\ud604\ud560": [774, 776, 777, 792, 814], "\uad6c\ud604\ud574\uc11c": 774, "\uad6c\ud604\ud574\uc57c": 776, "\uad8c\uc7a5\ud558\ub294\ub370": [773, 792], "\uad8c\uc7a5\ud55c\ub2e4": [772, 776, 777, 779, 794], "\uaddc\uce59\uc740": 792, "\uaddc\uce59\uc744": 812, "\uade0\ub4f1": 813, "\uade0\ub4f1\ud558\uac8c": 802, "\uade0\uc77c": 800, "\uade0\ud5dd\uc744": 781, "\uade0\ud615\uc744": 781, "\uade0\ud615\uc7a1\ud78c": 781, "\uadf8": [773, 779, 780, 781, 783, 785, 789, 791, 792, 794, 796, 797, 798, 801, 802, 804, 807, 808, 811, 812, 813, 814], "\uadf8\uac83\ub4e4\uc5d0": 789, "\uadf8\uac83\ub4e4\uc740": 779, "\uadf8\uac83\ub4e4\uc744": [779, 798], "\uadf8\uac83\ub4e4\uc758": [778, 781, 784, 785, 797, 799, 811], "\uadf8\uac83\uc740": 813, "\uadf8\uac83\uc758": [781, 804], "\uadf8\ub300\ub85c": [798, 802], "\uadf8\ub4e4\uc758": 784, "\uadf8\ub798\ub4e4": 812, "\uadf8\ub798\uc11c": [781, 785], "\uadf8\ub798\ud504": [773, 775, 778, 781, 782, 787, 790, 791, 795, 797, 798, 799, 801, 802, 804, 807, 809], "\uadf8\ub798\ud504\uac00": [779, 780, 781, 782, 784, 789, 798, 799, 803, 808, 811, 812, 814], "\uadf8\ub798\ud504\uac04\uc758": [799, 802], "\uadf8\ub798\ud504\ub098": 803, "\uadf8\ub798\ud504\ub294": [780, 781, 783, 784, 787, 789, 798, 799, 800, 803, 808, 812], "\uadf8\ub798\ud504\ub3c4": 798, "\uadf8\ub798\ud504\ub4e4": 776, "\uadf8\ub798\ud504\ub4e4\uacfc": 802, "\uadf8\ub798\ud504\ub4e4\ub85c": [778, 781], "\uadf8\ub798\ud504\ub4e4\uc5d0": [797, 802, 809, 810, 811, 812, 813], "\uadf8\ub798\ud504\ub4e4\uc5d0\uc11c": 813, "\uadf8\ub798\ud504\ub4e4\uc744": [780, 788, 812], "\uadf8\ub798\ud504\ub4e4\uc758": [776, 777, 781, 789, 799, 802, 804], "\uadf8\ub798\ud504\ub85c": [781, 782, 788, 798, 808, 812, 813], "\uadf8\ub798\ud504\ub85c\ubd80\ud130": [780, 785], "\uadf8\ub798\ud504\ub97c": [775, 776, 778, 779, 780, 781, 784, 785, 788, 798, 799, 800, 803, 804, 810, 811, 812, 813, 814], "\uadf8\ub798\ud504\ub9cc": 776, "\uadf8\ub798\ud504\ubcc4": 786, "\uadf8\ub798\ud504\uc5d0": [776, 779, 783, 787, 788, 790, 791, 796, 798, 801, 803, 804, 808, 810, 813, 814], "\uadf8\ub798\ud504\uc5d0\ub3c4": 798, "\uadf8\ub798\ud504\uc5d0\uc11c": [776, 781, 784, 795, 798, 809], "\uadf8\ub798\ud504\uc5d0\uc11c\ub294": 781, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": [791, 813], "\uadf8\ub798\ud504\uc640": [789, 798, 799, 800, 802, 803, 809, 810, 811, 812], "\uadf8\ub798\ud504\uc758": [776, 779, 780, 781, 783, 784, 786, 788, 789, 794, 798, 800, 803, 808, 809, 812], "\uadf8\ub798\ud504\uc774\uace0": 784, "\uadf8\ub798\ud504\uc774\uae30": 785, "\uadf8\ub798\ud504\uc774\ub2e4": [784, 795, 812, 813], "\uadf8\ub798\ud504\uc774\uc5b4\uc57c": 803, "\uadf8\ub798\ud504\uc774\uc790": 812, "\uadf8\ub798\ud504\uc778": [786, 797, 799], "\uadf8\ub798\ud504\uc77c": 789, "\uadf8\ub798\ud504\ud2d1": 780, "\uadf8\ub7a8\uc758": 789, "\uadf8\ub7a8\ud504\ub97c": 813, "\uadf8\ub7ec\uba74": 811, "\uadf8\ub7f0": 813, "\uadf8\ub807\uc9c0": [774, 799, 810], "\uadf8\ub8f9": 778, "\uadf8\ub8f9\uc73c\ub85c": 789, "\uadf8\ub9ac\uace0": [773, 776, 778, 779, 781, 782, 783, 784, 785, 789, 791, 792, 798, 799, 805, 806, 807, 810, 812, 814], "\uadf8\ub9bc\uc5d0\uc11c\uc640": 798, "\uadf8\ub9bc\uc740": [778, 780, 798], "\uadf8\ub9bc\uc758": 798, "\uadf8\uc5d0": [781, 795], "\uadf8\uc640": [784, 799], "\uae30\ub2a5": 785, "\uae30\ub2a5\uc740": 800, "\uae30\ub2a5\uc744": [781, 785, 792, 798], "\uae30\ubc18\uc73c\ub85c": [780, 782, 808], "\uae30\ubc18\uc758": [781, 813], "\uae30\ubc18\uc774\ub2e4": 798, "\uae30\ubc95\uc744": 811, "\uae30\ubc95\uc774\ub2e4": 793, "\uae30\ubcf8": [773, 779, 780, 781, 782, 792, 798], "\uae30\ubcf8\uc801\uc73c\ub85c": 803, "\uae30\ubcf8\uc801\uc778": [773, 775, 781, 783, 804], "\uae30\uc220\uc801\uc73c\ub85c\ub294": 798, "\uae30\uc5ec\ub97c": 806, "\uae30\uc900\uc758": 790, "\uae30\ud638\ub9cc\uc73c\ub85c": 781, "\uae38\uc774": 784, "\uae38\uc774\ub294": 779, "\uae40\ubb34\ud604": 790, "\uae54\ub054\ud55c": [772, 789], "\uae68\uc9d0": 779, "\uaf2d": [773, 781], "\ub05d\ub098\uba74": 781, "\ub098\ub204\uace0": [778, 779, 781], "\ub098\ub204\ub294": [779, 781, 794], "\ub098\ub208\ub2e4": 781, "\ub098\ub220\uc57c\ub9cc": 779, "\ub098\ub220\uc57c\ud55c\ub2e4": 779, "\ub098\ub220\uc838": 776, "\ub098\ub220\uc838\uc11c": [779, 780], "\ub098\ub220\uc9c4": 779, "\ub098\ub25c\ub2e4": [795, 807], "\ub098\ub25c\ub2e4\ub294": 803, "\ub098\ub260": 808, "\ub098\uba38\uc9c0": [778, 781, 812], "\ub098\uba38\uc9c0\ub294": 798, "\ub098\uba38\uc9c0\uc5d0\uc11c\ub294": [773, 778], "\ub098\uc544\uac00": [781, 787], "\ub098\uc5f4\ub418\uc5b4": 781, "\ub098\uc5f4\ud558\uace0": 781, "\ub098\uc5f4\ud558\uae30\ub294": 785, "\ub098\ud0c0\ub0b8\ub2e4": [784, 788], "\ub098\ud0c0\ub0b8\ub2e4\ub294": 812, "\ub0a8\uc544\uc788\ub2e4": 792, "\ub0ae\ub2e4\uace0": 794, "\ub0ae\ucd94\ub294": 794, "\ub0b4\ubcf4\ub0b4\ub294": 811, "\ub0b4\ubd80\uc801\uc73c\ub85c": [785, 792], "\ub0b4\ubd80\uc801\uc73c\ub85c\ub294": 779, "\ub0b4\uc5d0\uc11c": 781, "\ub0b4\uc6a9\uc73c\ub85c": 798, "\ub0b4\uc6a9\uc740": [776, 792], "\ub0b4\uc6a9\uc774": 785, "\ub0b8": 799, "\ub108\ubb34": [794, 800, 811], "\ub110\ub9ac": 814, "\ub118\uc744": 797, "\ub123\uae30": 800, "\ub124": [780, 781, 782], "\ub124\uac00\uc9c0": 780, "\ub124\uac00\ud2f0\ube0c": 813, "\ub124\uc784\uc2a4\ud328\uc774\uc2a4\uc5d0": 792, "\ub124\ud2b8\uc6cc\ud06c": [778, 781, 782, 790, 797, 803, 813], "\ub124\ud2b8\uc6cc\ud06c\uac00": [798, 814], "\ub124\ud2b8\uc6cc\ud06c\ub294": [784, 814], "\ub124\ud2b8\uc6cc\ud06c\ub4e4\uc5d0\uc11c": 795, "\ub124\ud2b8\uc6cc\ud06c\ub97c": [779, 804, 810, 811], "\ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c": 784, "\ub124\ud2b8\uc6cc\ud06c\uc758": 807, "\ub178\ub4dc": [778, 780, 783, 784, 785, 786, 789, 791, 792, 797, 798, 799, 802, 803, 808, 809, 810, 812, 813], "\ub178\ub4dc\uac00": [779, 781, 797, 804], "\ub178\ub4dc\uac04\uc758": 789, "\ub178\ub4dc\ub098": 795, "\ub178\ub4dc\ub294": [800, 814], "\ub178\ub4dc\ub4e4": [779, 781, 783, 797, 798, 799, 813], "\ub178\ub4dc\ub4e4\uac04\uc758": [783, 784], "\ub178\ub4dc\ub4e4\uacfc": [784, 786, 789, 798, 799, 800, 804], "\ub178\ub4dc\ub4e4\ub85c": 780, "\ub178\ub4dc\ub4e4\ub9cc\uc774": 798, "\ub178\ub4dc\ub4e4\uc5d0": [781, 798, 801, 804, 812, 813], "\ub178\ub4dc\ub4e4\uc5d0\uac8c": 792, "\ub178\ub4dc\ub4e4\uc5d0\uc11c": 798, "\ub178\ub4dc\ub4e4\uc640": 776, "\ub178\ub4dc\ub4e4\uc740": [780, 781, 784, 798, 804], "\ub178\ub4dc\ub4e4\uc744": [778, 781, 798, 802, 804, 808], "\ub178\ub4dc\ub4e4\uc758": [779, 781, 784, 794, 796, 797, 798, 801, 804, 808, 811, 812, 813, 814], "\ub178\ub4dc\ub4e4\uc774": [780, 784, 798, 799, 803], "\ub178\ub4dc\ub4e4\uc774\ub098": [781, 812], "\ub178\ub4dc\ub4e4\uc774\ub2e4": [783, 798, 808], "\ub178\ub4dc\ub85c": [794, 803, 804], "\ub178\ub4dc\ub97c": [780, 781, 784, 788, 792, 798, 802, 808, 814], "\ub178\ub4dc\ubcc4": 791, "\ub178\ub4dc\uc5d0": [781, 786, 788, 791, 802, 804, 807, 809, 811, 814], "\ub178\ub4dc\uc5d0\ub3c4": 798, "\ub178\ub4dc\uc5d0\uc11c": [776, 794], "\ub178\ub4dc\uc640": [778, 779, 780, 781, 783, 788, 789, 791, 792, 795, 798, 803, 808, 812], "\ub178\ub4dc\uc758": [776, 779, 781, 788, 789, 791, 792, 793, 796, 798, 799, 801, 803, 804, 807, 808, 811, 814], "\ub178\ub4e4\ub4e4": 798, "\ub178\ub4e4\ub4e4\uc744": 798, "\ub178\ub4e4\ub4e4\uc758": 801, "\ub178\ub4e4\uc5d0": 798, "\ub178\ub4e4\uc744": 798, "\ub178\ub4e4\uc758": [779, 781], "\ub178\uc774\uc988": 813, "\ub178\ud2b8": [781, 795, 798, 800, 811, 812], "\ub179\uc0c9": 798, "\ub179\uc0c9\uacfc": 798, "\ub179\uc0c9\uc73c\ub85c": 798, "\ub192\ub3c4\ub85d": 813, "\ub192\uc740": 794, "\ub193\uc774\uac8c": 808, "\ub208\uc5d0": 799, "\ub274\ub7f4": [790, 795, 797, 798, 803, 804, 807, 813], "\ub290\ub9b0": 801, "\ub294": [773, 775, 779, 781, 782, 784, 785, 788, 789, 791, 792, 795, 798, 799, 800, 802, 804, 805, 808, 809, 810, 812, 813, 814], "\ub298": 798, "\ub2a5\ub825\uc774": 792, "\ub2e4\ub8e8\uace0": 803, "\ub2e4\ub8e8\uae30": [774, 812], "\ub2e4\ub8e8\ub294": 800, "\ub2e4\ub8e8\ub294\ub370": 783, "\ub2e4\ub8e8\uc9c0": 785, "\ub2e4\ub8ec": 801, "\ub2e4\ub8ec\ub2e4": [778, 779, 797], "\ub2e4\ub8f0": [785, 788, 808, 809], "\ub2e4\ub974\uac8c": [776, 779, 804, 808], "\ub2e4\ub974\uae30": 798, "\ub2e4\ub974\uc9c0": [811, 812, 813], "\ub2e4\ub978": [779, 781, 782, 783, 784, 785, 787, 788, 789, 792, 794, 795, 799, 800, 804, 809, 810, 811, 812, 814], "\ub2e4\ub978\ub370": [801, 813], "\ub2e4\ub984\uc744": 775, "\ub2e4\uba74": 780, "\ub2e4\uc2dc": [779, 781, 789, 803], "\ub2e4\uc591\ud55c": [779, 785, 809, 813], "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0": 774, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 772, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294": 774, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c": 774, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c\ub2e4": 774, "\ub2e4\uc6b4\ub85c\ub4dc\ud574\uc11c": 775, "\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc": [781, 811, 813, 814], "\ub2e4\uc74c": [772, 774, 775, 776, 777, 779, 780, 781, 788, 789, 792, 798, 799, 800, 802, 803, 804, 805, 807, 811, 812, 813, 814], "\ub2e4\uc74c\uacfc": [773, 776, 778, 781, 782, 789, 791, 792, 793, 794, 795, 797, 798, 799, 802, 803, 804, 808, 809, 810, 811, 812, 813, 814], "\ub2e4\uc74c\uc5d0": 808, "\ub2e4\uc74c\uc5d0\ub294": 798, "\ub2e4\uc74c\uc73c\ub85c": 797, "\ub2e4\uc74c\uc73c\ub85c\ub294": [802, 807], "\ub2e4\uc74c\uc740": [781, 782, 802, 805, 813, 814], "\ub2e4\uc74c\uc744": [782, 809], "\ub2e4\uc911": [780, 784], "\ub2e4\uc911\uc758": 779, "\ub2e4\ucc28\uc6d0": 786, "\ub2e8": [777, 779, 781], "\ub2e8\uacc4\uac00": 779, "\ub2e8\uacc4\ub4e4\uc744": 807, "\ub2e8\uacc4\ub85c": 781, "\ub2e8\uacc4\ub97c": [781, 804], "\ub2e8\uacc4\ub9c8\ub2e4": 797, "\ub2e8\uacc4\uc5d0\uc11c": [791, 794, 808], "\ub2e8\ubc29\ud5a5": 803, "\ub2e8\uc21c\ud558\uac8c": [799, 803, 804, 812, 814], "\ub2e8\uc21c\ud55c": 804, "\ub2e8\uc21c\ud788": 798, "\ub2e8\uc704\ub85c": 812, "\ub2e8\uc77c": [776, 778, 779, 781, 792, 803, 809, 810, 811], "\ub2e8\uc885": 808, "\ub2e8\uc9c0": [789, 798, 803, 814], "\ub2e8\ud56d": 792, "\ub2e8\ud56d\uc758": 792, "\ub2ec\ub77c\uc9c4\ub2e4": [799, 807], "\ub2ec\uc131\ud558\uae30": 813, "\ub2ec\uc131\ud558\ub294": 794, "\ub2f4\uace0": [779, 781, 799, 804, 812], "\ub2f4\ub2f9\ud558\ub294": 795, "\ub2f4\ub2f9\ud55c\ub2e4": [779, 781, 798], "\ub300\ub7b5": 781, "\ub300\ubd80\ubd84": [779, 788, 805], "\ub300\ubd80\ubd84\uc758": [777, 812], "\ub300\uc0c1": 803, "\ub300\uc0c1\uc73c\ub85c": 803, "\ub300\uc2e0": [779, 789, 802], "\ub300\uc2e0\uc5d0": [799, 802], "\ub300\uce6d\uc801\uc778": 784, "\ub300\ud45c\ud558\ub3c4\ub85d": 804, "\ub300\ud55c": [772, 773, 774, 776, 777, 779, 780, 782, 783, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 798, 799, 801, 802, 803, 804, 805, 808, 809, 810, 812, 813, 814], "\ub300\ud574": [778, 804, 809], "\ub300\ud574\uc11c": [779, 781, 798, 801, 802, 804, 805, 807, 809, 810, 811, 812, 813, 814], "\ub300\ud578": 797, "\ub354": [776, 777, 779, 781, 787, 792, 794, 798, 801, 805, 814], "\ub354\ubd88\uc5b4": [781, 785, 809, 812], "\ub354\ubd88\uc5b4\uc11c": 780, "\ub354\ud55c\ub2e4": 794, "\ub354\ud560": 776, "\ub354\ud574\uc11c": [781, 792, 812], "\ub355\uc5d0": 812, "\ub370\uc774": 779, "\ub370\uc774\ud130": [773, 781, 785, 788, 789, 790, 792, 798, 805, 807, 810, 814], "\ub370\uc774\ud130\uac00": [776, 777, 782, 801, 812], "\ub370\uc774\ud130\ub294": [776, 781], "\ub370\uc774\ud130\ub3c4": [781, 785], "\ub370\uc774\ud130\ub85c": 780, "\ub370\uc774\ud130\ub85c\ub354\ub97c": 812, "\ub370\uc774\ud130\ub85c\uc11c": 779, "\ub370\uc774\ud130\ub97c": [772, 774, 777, 778, 779, 780, 781, 785, 787], "\ub370\uc774\ud130\ub9cc": 787, "\ub370\uc774\ud130\uc14b": [773, 775, 777, 805, 810, 814], "\ub370\uc774\ud130\uc14b\uacfc": 776, "\ub370\uc774\ud130\uc14b\ub4e4": 772, "\ub370\uc774\ud130\uc14b\ub4e4\uc740": 776, "\ub370\uc774\ud130\uc14b\ub4e4\uc744": 775, "\ub370\uc774\ud130\uc14b\uc5d0": [773, 775, 776, 777, 801], "\ub370\uc774\ud130\uc14b\uc740": [775, 776, 814], "\ub370\uc774\ud130\uc14b\uc744": [772, 773, 775, 776, 804, 810, 812], "\ub370\uc774\ud130\uc14b\uc758": [775, 776, 812], "\ub370\uc774\ud130\uc14b\uc774": 774, "\ub370\uc774\ud130\uc5d0": [779, 780, 781, 782, 799], "\ub370\uc774\ud130\uc640": [778, 779, 780, 781, 782, 785], "\ub370\uc774\ud130\uc758": [776, 779], "\ub370\uc774\ud14c\uc14b\uc744": 776, "\ub370\uc774\ud2b8\ub97c": 773, "\ub374\uc2a4": 779, "\ub3c4\uad6c\ub4e4\uc744": 778, "\ub3c4\uc6c0\uc774": 794, "\ub3c4\ucc29\uc9c0": 789, "\ub3c4\ucd9c\ud560": 811, "\ub3c5\ub9bd\uc801\uc778": 789, "\ub3d5\uae30": 781, "\ub3d5\ub294": 782, "\ub3d9\uae30\ud654": 779, "\ub3d9\uc2dc": 779, "\ub3d9\uc2dc\uc5d0": [778, 779], "\ub3d9\uc548": [781, 792], "\ub3d9\uc548\uc5d0": 779, "\ub3d9\uc77c\ud558\uac8c": 789, "\ub3d9\uc77c\ud558\uae30\uc5d0": 799, "\ub3d9\uc77c\ud558\ub2e4": [776, 781, 794, 798, 805, 806, 808, 813, 814], "\ub3d9\uc77c\ud558\ub3c4\ub85d": 799, "\ub3d9\uc77c\ud55c": [778, 779, 792], "\ub3d9\uc791\uc740": 808, "\ub3d9\uc791\ud558\uac8c": 803, "\ub3d9\uc791\ud558\ub294": [800, 811], "\ub3d9\uc791\ud558\ub294\uc9c0": [772, 803, 814], "\ub3d9\uc791\ud558\ub294\uc9c0\ub97c": 773, "\ub3d9\uc791\ud55c\ub2e4": [779, 800, 803], "\ub3d9\uc791\ud560": 798, "\ub3d9\uc791\ud568": 800, "\ub3d9\uc885": 784, "\ub418\uac8c": 778, "\ub418\uace0": 808, "\ub418\uae30": 808, "\ub418\uae30\ub3c4": 795, "\ub418\ub294": 798, "\ub418\ub3c4\ub85d": 804, "\ub418\ubc84\ub9bc": 805, "\ub41c\ub2e4": [776, 784, 789, 794, 795, 798, 799, 808, 811, 812, 813, 814], "\ub41c\ub2e4\ub294": 804, "\ub420": [781, 782, 798], "\ub450": [779, 781, 782, 784, 786, 787, 789, 794, 795, 799, 802, 805, 811, 812, 813], "\ub450\uac00\uc9c0": [779, 780, 789, 800, 809], "\ub450\uac1c": 803, "\ub450\uac1c\ub85c": 794, "\ub450\uac1c\uc758": [784, 785, 792, 804], "\ub450\ubc88\uc9f8": [781, 798, 799], "\ub450\ubc88\uc9f8\ub294": [799, 808], "\ub450\ubc88\uc9f8\ub85c": 812, "\ub458\uc740": 811, "\ub4a4\uc5d0": 782, "\ub4e4": [798, 812], "\ub4e4\uaca0\ub2e4": 776, "\ub4e4\ub9cc": 798, "\ub4e4\uba74": [779, 792, 793, 802, 811, 812, 813], "\ub4e4\uc5b4": [777, 779, 780, 781, 783, 784, 786, 792, 798, 800, 803, 804, 811, 812, 813, 814], "\ub4e4\uc5b4\uac08": [800, 810], "\ub4e4\uc5b4\ubcf4\uc790": [794, 798, 803, 804], "\ub4e4\uc744": [792, 799], "\ub4e4\uc758": [791, 799, 802, 804], "\ub4e4\uc790": 803, "\ub4ec\ub140": 789, "\ub4f1": 773, "\ub4f1\uacfc": 807, "\ub4f1\ub85d": 807, "\ub4f1\ub85d\uacfc": 806, "\ub4f1\ub85d\ud55c\ub2e4": 807, "\ub4f1\uc740": 781, "\ub4f1\uc758": 814, "\ub4f1\uc774": [792, 812], "\ub4f1\uc7a5\ud55c\ub2e4\ub294": 798, "\ub514\ub809\ud1a0\ub9ac": [774, 782], "\ub514\ub809\ud1a0\ub9ac\ub85c": [774, 782], "\ub514\ub809\ud1a0\ub9ac\ub97c": [781, 782], "\ub514\ub809\ud1a0\ub9ac\uc5d0": [774, 776, 781], "\ub514\ub809\ud1a0\ub9ac\uc640": 781, "\ub514\ub809\ud1a0\ub9ac\uc758": 781, "\ub514\ubc14\uc774\uc2a4": 788, "\ub514\ubc14\uc774\uc2a4\ub85c": 800, "\ub514\uc2a4\ud06c\ub85c": 777, "\ub514\uc2a4\ud06c\uc5d0": [773, 774, 777, 785], "\ub514\uc790\uc778\uc744": 779, "\ub525\ub7ec\ub2dd": 814, "\ub525\ub7ec\ub2dd\uc5d0\uc11c": 812, "\ub530\ub77c": [781, 788, 806, 807, 808, 813, 814], "\ub530\ub77c\uc11c": [776, 779, 780, 781, 782, 784, 785, 787, 798, 799, 800, 802, 803, 805, 808], "\ub530\ub974\uace0": 779, "\ub530\ub974\uba74": 798, "\ub530\ub978\ub2e4": [772, 786], "\ub54c": [778, 779, 780, 781, 789, 792, 794, 799, 801, 802, 804, 807, 809, 811, 812, 813], "\ub54c\uae4c\uc9c0": 797, "\ub54c\ub294": [780, 789, 805], "\ub54c\ub85c\ub294": [794, 799, 810], "\ub54c\ub860": 811, "\ub54c\ubb38\uc5d0": [776, 777, 779, 784, 789, 794, 798, 801, 802, 805, 808, 811, 812, 813], "\ub54c\ubb38\uc774\ub2e4": [772, 773, 779, 781, 785, 788, 792, 794, 798, 799, 800, 801, 813], "\ub54c\uc758": 805, "\ub5a0\uc62c\ub824": 798, "\ub610\ub294": [773, 774, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 795, 797, 798, 803, 807, 809, 810, 812, 813, 814], "\ub610\ud55c": [773, 776, 779, 781, 782, 788, 797, 804, 811, 814], "\ub611\uac19\uc774": 812, "\ub73b": 813, "\ub744\ub294": 799, "\ub77c\uace0": [788, 792, 798, 804, 811, 813], "\ub77c\ub294": [776, 780, 781, 792], "\ub77c\uc774\ube0c\ub7ec\ub9ac": 785, "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4": 785, "\ub77c\uc778": 786, "\ub77c\uc778\uc774\ub2e4": 778, "\ub798\ud551\ud558\uba74": 805, "\ub79c\ub364": 781, "\ub7ec\ud37c\ub7f0\uc2a4": 785, "\ub7f0\uce58": 782, "\ub7f0\uce6d\ud558\uae30": 778, "\ub808\uc774\ube14": [773, 776, 785, 812], "\ub808\uc774\ube14\uacfc": 814, "\ub808\uc774\ube14\ub4e4\uc758": 776, "\ub808\uc774\ube14\ub85c": 811, "\ub808\uc774\ube14\ub9cc": 804, "\ub808\uc774\ube14\uc740": [804, 814], "\ub808\uc774\ube14\uc744": [777, 789, 804, 811], "\ub808\uc774\ube14\uc774": [781, 801], "\ub808\uc774\uc544\uc6c3\uc744": 786, "\ub808\uc774\uc5b4": [794, 801, 804, 805, 811, 813, 814], "\ub808\uc774\uc5b4\uac00": 779, "\ub808\uc774\uc5b4\ub4e4": 801, "\ub808\uc774\uc5b4\ub4e4\uc744": 801, "\ub808\uc774\uc5b4\ub85c\ubd80\ud130": 798, "\ub808\uc774\uc5b4\ub97c": 798, "\ub808\uc774\uc5b4\ubd80\ud130": 801, "\ub808\uc774\uc5b4\uc5d0": [798, 799, 801, 804, 812], "\ub808\uc774\uc5b4\uc5d0\uc11c": [797, 804], "\ub808\uc774\uc5b4\uc758": [794, 797, 798, 801], "\ub808\uc774\uc774\ubcc4\ub85c": 801, "\ub85c": [780, 782, 783, 785, 788, 791, 803, 804, 805, 808, 809, 814], "\ub85c\ub354": 779, "\ub85c\ub354\uac00": [799, 804], "\ub85c\ub354\ub294": 802, "\ub85c\ub354\ub85c\ubd80\ud130": 799, "\ub85c\ub354\ub97c": [779, 798, 799, 802], "\ub85c\ub354\uc5d0": 802, "\ub85c\ub354\uc5d0\uc11c": 799, "\ub85c\ub4dc\ub420": [779, 780, 804], "\ub85c\ub4dc\uc548\ub2e4": 781, "\ub85c\ub4dc\uc5d0": 773, "\ub85c\ub4dc\ud558\uace0": [779, 781], "\ub85c\ub4dc\ud558\uae30": [772, 776], "\ub85c\ub4dc\ud558\ub294": 804, "\ub85c\ub4dc\ud558\uba74": 804, "\ub85c\ub4dc\ud55c\ub2e4": [779, 804], "\ub85c\ub4dc\ud55c\ub2e4\ub294": 804, "\ub85c\ub529": [772, 773, 775], "\ub85c\ub529\ub420": 781, "\ub85c\ub529\uc744": 773, "\ub85c\ub529\ud558\uace0": [772, 773, 785], "\ub85c\ub529\ud558\uae30": 781, "\ub85c\ub529\ud558\ub294": [775, 785, 800], "\ub85c\ub529\ud55c\ub2e4": 804, "\ub85c\ub529\ud568": 777, "\ub85c\ubd80\ud130": [779, 780, 785, 798], "\ub85c\uc11c": 791, "\ub85c\uc758": 788, "\ub85c\uc9c1\uc73c\ub85c": 809, "\ub85c\uceec": [773, 774, 777, 778, 779, 781, 782], "\ub8e8\ud504": 784, "\ub8f9\uacfc": [778, 799, 801, 813, 814], "\ub8f9\uc740": [799, 802, 804, 811, 812, 813, 814], "\ub8f9\uc744": [781, 801, 811, 814], "\ub8f9\uc774\ub791": 804, "\ub97c": [773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 791, 792, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814], "\ub9ac\uadf8\ub798\uc158": [776, 810], "\ub9ac\uadf8\ub808\uc158": [799, 810, 813, 814], "\ub9ac\uadf8\ub808\uc158\uacfc": 799, "\ub9ac\uadf8\ub808\uc158\uc5d0\uc11c": 802, "\ub9ac\uadf8\ub808\uc158\uc744": [799, 802, 811], "\ub9ac\ub4c0\uc154": 795, "\ub9ac\ub4dc\uc544\uc6c3\uc740": 812, "\ub9ac\uc14b": 807, "\ub9ac\uc18c\uc2a4\ub4e4\uc758": 778, "\ub9ac\uc18c\uc2a4\ub97c": 801, "\ub9ac\uc2a4\ud2b8": [802, 804], "\ub9ac\uc2a4\ud2b8\ub4e4\uc5d0": 809, "\ub9ac\uc2a4\ud2b8\ub85c": 776, "\ub9ac\uc2a4\ud2b8\ub85c\ubd80\ud130": 812, "\ub9ac\uc2a4\ud2b8\ub97c": [798, 799, 804, 812], "\ub9ac\uc2a4\ud2b8\uc5d0": 812, "\ub9ac\uc2a4\ud2b8\uc5d0\uc11c": 799, "\ub9ac\uc2a4\ud2b8\uc640": [776, 777, 799], "\ub9ac\uc2a4\ud2b8\uc758": 808, "\ub9ac\uc2a4\ud2b8\uc774\ub2e4": 809, "\ub9ac\ud134\ub418\uc9c0": 779, "\ub9ac\ud134\ub41c": [798, 814], "\ub9ac\ud134\ub41c\ub2e4": [781, 799], "\ub9ac\ud134\ud558\uae30": 811, "\ub9ac\ud134\ud558\ub3c4\ub85d": 776, "\ub9ac\ud134\ud55c\ub2e4": [779, 781, 799, 811, 814], "\ub9ac\ud134\ud55c\ub2e4\ub294": 779, "\ub9ac\ud134\ud574\uc57c": 802, "\ub9ac\ud134\ud574\uc57c\ud55c\ub2e4": 802, "\ub9b4\ub9ac\uc988\uc5d0\uc11c": 780, "\ub9c1\ud06c": [779, 797, 810, 812, 814], "\ub9c1\ud06c\ub97c": 776, "\ub9c8\ub2e4": [779, 802], "\ub9c8\uc2a4\ud06c": 776, "\ub9c8\uc2a4\ud06c\ub294": 776, "\ub9c8\uc2a4\ud06c\ub4e4\uc744": 776, "\ub9c8\uc2a4\ud06c\ub85c": 811, "\ub9c8\uc2a4\ud06c\ub85c\uc11c": 814, "\ub9c8\uc2a4\ud06c\ub97c": 776, "\ub9c8\uc2a4\ud130": 782, "\ub9c8\uc9c0\ub9c9": [791, 792, 794, 798, 799, 804, 808], "\ub9c8\uc9c0\ub9c9\uc5d0\ub294": 807, "\ub9c8\uc9c0\ub9c9\uc73c\ub85c": [792, 797, 809, 812], "\ub9c8\uce5c": 776, "\ub9cc": 800, "\ub9cc\ub4dc\ub294": [772, 776, 779, 781, 785, 788, 789, 791, 798, 799, 803, 804, 806, 813], "\ub9cc\ub4dc\ub294\ub370": [785, 806], "\ub9cc\ub4e0": [781, 796, 802, 810, 811], "\ub9cc\ub4e0\ub2e4": [781, 785, 799, 804, 811, 812], "\ub9cc\ub4e4": [779, 780, 781, 785, 787, 798, 799, 807, 808, 812], "\ub9cc\ub4e4\uac8c": 798, "\ub9cc\ub4e4\uace0": [779, 788, 789, 803, 813], "\ub9cc\ub4e4\uace0\uc790": [797, 811], "\ub9cc\ub4e4\uae30": [778, 780, 781, 788, 790, 792, 801, 803, 810, 814], "\ub9cc\ub4e4\uba74": 785, "\ub9cc\ub4e4\uc5b4": [779, 799], "\ub9cc\ub4e4\uc5b4\ub0b4\uae30": 812, "\ub9cc\ub4e4\uc5b4\ub0b4\ub294": 798, "\ub9cc\ub4e4\uc5b4\ub0b8\ub2e4": [802, 812], "\ub9cc\ub4e4\uc5b4\ub0bc": 808, "\ub9cc\ub4e4\uc5b4\uc11c": [794, 812], "\ub9cc\ub4e4\uc5b4\uc57c": [779, 781, 788], "\ub9cc\ub4e4\uc5b4\uc57c\ud560": 798, "\ub9cc\ub4e4\uc5b4\uc84c\ub2e4\uba74": 798, "\ub9cc\ub4e4\uc5b4\uc9c0\uba74": [779, 781], "\ub9cc\ub4e4\uc5b4\uc9c4\ub2e4": [779, 784, 786], "\ub9cc\ub4e4\uc5b4\uc9c8": [781, 799], "\ub9cc\ub4e4\uc5c8\ub2e4": 776, "\ub9cc\ub4e4\uc5c8\ub2e4\uba74": 811, "\ub9cc\ub4e4\uc790": 774, "\ub9cc\uc57d": [774, 776, 779, 780, 781, 785, 789, 792, 794, 797, 798, 799, 800, 802, 804, 805, 810, 814], "\ub9cc\uc744": [780, 814], "\ub9cc\uc871\ud558\uc9c0": 789, "\ub9cc\uc871\ud574\uc57c": 803, "\ub9ce\uc740": [776, 779, 781, 794, 798, 800, 801, 812], "\ub9ce\uc774": [772, 773, 794, 806, 812, 813], "\ub9d0\ud558\uc790\uba74": 779, "\ub9de\uac8c": 801, "\ub9de\ub3c4\ub85d": [781, 804], "\ub9de\ucd94\uac83\uc744": 781, "\ub9de\ucd94\ub294": 781, "\ub9de\ucd98\ub2e4": 781, "\ub9de\ucd9c": 781, "\ub9e4": [779, 804], "\ub9e4\ub274\uc5bc\uc758": 785, "\ub9e4\ubc88": 804, "\ub9e4\uc6b0": [794, 804], "\ub9e4\ud551": 799, "\ub9e4\ud551\uc740": 798, "\ub9e4\ud551\uc744": [781, 799], "\ub9e4\ud551\uc774\ub2e4": 781, "\ub9e4\ud551\ud558\ub294": 809, "\ub9f4\ubc84": 792, "\ub9f4\ubc84\ub97c": 792, "\uba04\uc57d": 781, "\uba38\uc2e0": 782, "\uba38\uc2e0\ub4e4\uc5d0": [779, 781], "\uba38\uc2e0\ub4e4\uc758": [779, 782], "\uba38\uc2e0\ub7ec\ub2dd": 776, "\uba38\uc2e0\ub7ec\ub2dd\uc5d0\ub294": 776, "\uba38\uc2e0\uc5d0": [780, 781, 782], "\uba38\uc2e0\uc5d0\uc11c": [779, 781, 782], "\uba38\uc2e0\uc740": 782, "\uba38\uc2e0\uc744": 782, "\uba38\uc2e0\uc758": [779, 782], "\uba38\uc2e0\uc774": [779, 782], "\uba3c\uc800": [779, 798], "\uba40\ud2f0": [776, 800, 804, 811, 813, 814], "\uba4b\uc9c4": 812, "\uba54\ub274\uc5bc\uc5d0": 785, "\uba54\ubaa8\ub9ac": [794, 800, 801, 805], "\uba54\ubaa8\ub9ac\uac00": [797, 805], "\uba54\ubaa8\ub9ac\ub098": 804, "\uba54\ubaa8\ub9ac\ub97c": [794, 800, 805], "\uba54\ubaa8\ub9ac\uc5d0": [800, 810], "\uba54\ubaa8\ub9ac\uc640": 801, "\uba54\uc18c\ub4dc": 798, "\uba54\uc18c\ub4dc\ub294": 798, "\uba54\uc18c\ub4dc\ub85c": [801, 811], "\uba54\uc18c\ub4dc\ub97c": [788, 798, 811], "\uba54\uc18c\ub4dc\uc5d0": 811, "\uba54\uc18c\uc2a4\ub4e4": 798, "\uba54\uc2dc\uc9c0": [791, 801, 803, 804, 806, 809, 810, 812, 814], "\uba54\uc2dc\uc9c0\ub4e4": 792, "\uba54\uc2dc\uc9c0\ub4e4\uc5b4": 801, "\uba54\uc2dc\uc9c0\ub4e4\uc744": [791, 792], "\uba54\uc2dc\uc9c0\ub4e4\uc774": 807, "\uba54\uc2dc\uc9c0\ub97c": [791, 794, 798, 804, 814], "\uba54\uc2dc\uc9c0\uc758": 794, "\uba54\uc9c0\uc2dc": [790, 795, 810, 814], "\uba54\ucf13\ud50c\ub798\uc774\uc2a4\ub97c": 784, "\uba54\ud0c0": 781, "\uba54\ud0c0\uadf8\ub798\ud504": 789, "\uba54\ud0c0\uadf8\ub798\ud504\uc758": 789, "\uba54\ud0c0\ub370\uc774\ud130\ub97c": 779, "\uba54\ud551\uc744": 781, "\uba64\uba38\ub97c": 798, "\uba85\ub839": 781, "\uba85\ub839\uc73c\ub85c": 775, "\uba85\ub839\uc740": 781, "\uba85\ub839\uc744": 781, "\uba85\ub839\uc758": 781, "\uba85\ub839\uc774": 781, "\uba85\ub839\ud589\uc774\ub098": 779, "\uba85\uc2dc\ub41c": [782, 808], "\uba85\uc2dc\ub41c\ub2e4\uba74": 781, "\uba85\uc2dc\uc801\uc73c\ub85c": 779, "\uba85\uc2dc\uc801\uc778": 788, "\uba85\uc2dc\ud558\uace0": 789, "\uba85\uc2dc\ud558\uae30\ub9cc": 811, "\uba85\uc2dc\ud558\ub294": 781, "\uba85\uc2dc\ud558\uc9c0": 781, "\uba85\uc2dc\ud55c\ub2e4": 781, "\uba85\uc2dc\ud560": [789, 799], "\uba85\uc2dc\ud574\uc57c": [780, 808], "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4": 789, "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4\ub294": 804, "\uba85\ud655\ud558\uac8c": 789, "\uba87": [778, 779, 781, 797, 799, 803, 804, 813, 814], "\uba87\uac00\uc9c0": [783, 813], "\uba87\uac1c\uc758": 803, "\ubaa8\ub378": [776, 778, 779, 797, 801, 808, 811], "\ubaa8\ub378\uacfc": 813, "\ubaa8\ub378\uacfc\ub294": 813, "\ubaa8\ub378\ub85c": [779, 811], "\ubaa8\ub378\ub9c1": [789, 795], "\ubaa8\ub378\ub9c1\uc5d0": 784, "\ubaa8\ub378\ub9c1\uc5d0\uc11c": [789, 793], "\ubaa8\ub378\ub9c1\ud558\ub294\ub370": 784, "\ubaa8\ub378\uc5d0": [776, 802, 811, 812, 814], "\ubaa8\ub378\uc5d0\uc11c\ub294": 814, "\ubaa8\ub378\uc740": [799, 802, 811, 813, 814], "\ubaa8\ub378\uc744": [779, 797, 801, 805, 806, 811, 812, 813, 814], "\ubaa8\ub378\uc758": [779, 797, 805, 812], "\ubaa8\ub378\uc774": [779, 800, 812], "\ubaa8\ub450": [781, 784, 789, 792, 798, 800, 801, 808, 812, 813], "\ubaa8\ub450\ub97c": 802, "\ubaa8\ub450\uc5d0": 798, "\ubaa8\ub4c8": [778, 790, 797, 804, 810, 814], "\ubaa8\ub4c8\uacfc": [808, 811], "\ubaa8\ub4c8\ub3c4": 779, "\ubaa8\ub4c8\ub4e4\uc740": [803, 804, 807], "\ubaa8\ub4c8\ub4e4\uc744": 814, "\ubaa8\ub4c8\ub9cc\uc744": 804, "\ubaa8\ub4c8\uc5d0": [808, 809, 812], "\ubaa8\ub4c8\uc5d0\uc11c": [799, 806, 808], "\ubaa8\ub4c8\uc740": [806, 807, 808, 811], "\ubaa8\ub4c8\uc744": [779, 797, 803, 804, 805, 806, 809, 810, 811, 814], "\ubaa8\ub4c8\uc758": [779, 801, 803, 806, 807, 811, 814], "\ubaa8\ub4c8\uc774": [779, 803, 804, 809, 814], "\ubaa8\ub4c8\uc774\uace0": 809, "\ubaa8\ub4c8\uc774\ub2e4": 807, "\ubaa8\ub4c8\uc778": 814, "\ubaa8\ub4c8\ucc98\ub7fc": 809, "\ubaa8\ub4dc\ub294": 779, "\ubaa8\ub4dc\ub85c": 779, "\ubaa8\ub4dc\uc5d0\uc11c\ub294": 779, "\ubaa8\ub4dc\uc640": 779, "\ubaa8\ub4e0": [778, 779, 780, 781, 782, 784, 785, 787, 788, 789, 792, 795, 797, 798, 800, 801, 802, 803, 804, 808, 811, 812, 814], "\ubaa8\uc544\uc11c": 789, "\ubaa8\uc74c\uc774\ub2e4": 775, "\ubaa9\ub85d": 812, "\ubaa9\ub85d\uc5d0": 812, "\ubaa9\ub85d\uc740": [792, 799, 804, 814], "\ubaa9\ub85d\uc744": [799, 804], "\ubaa9\ub85d\uc774": 798, "\ubaa9\uc801": 809, "\ubaa9\uc801\uc73c\ub85c": [789, 801], "\ubaa9\uc801\uc73c\ub85c\ub294": 801, "\ubaa9\uc801\uc740": 773, "\ubaa9\uc801\uc9c0": [781, 792, 798, 802, 804, 807, 808, 809], "\ubaa9\uc801\uc9c0\uac00": 798, "\ubaa9\uc801\uc9c0\uc640": 789, "\ubaa9\uc801\uc9c0\uc778": 798, "\ubb38\ubc95\uc744": 789, "\ubb38\uc790": 789, "\ubb38\uc790\ub4e4\uacfc": 781, "\ubb38\uc790\ub85c": 781, "\ubb38\uc790\ub9cc\ub4e4": 789, "\ubb38\uc790\uc5f4": 789, "\ubb38\uc790\uc5f4\uc774\ub2e4": [792, 795], "\ubb38\uc7a5\uc73c\ub85c": 811, "\ubb38\uc81c\ub294": 812, "\ubb38\uc81c\ub4e4\uacfc": 812, "\ubb38\uc81c\ub97c": [805, 808], "\ubb38\uc81c\uc640": 812, "\ubb38\uc81c\uc778": 811, "\ubbf8\ub2c8": [776, 778, 779, 796, 797, 801, 808, 812], "\ubbf8\ub2c8\ubc30\uce58": [779, 780, 802], "\ubbf8\ub2c8\ubc30\uce58\ub97c": 801, "\ubbf8\ub2c8\ubc30\uce58\ub9cc": 801, "\ubbf8\ub2c8\ubc30\uce58\uc5d0": [802, 804], "\ubbf8\ub2c8\ubc30\uce58\uc5d0\uc11c": 799, "\ubbf8\ub2c8\ubc30\uce58\uc640": 801, "\ubbf8\ub2c8\ubc30\uce58\uc758": [799, 801], "\ubbf8\ub798\uc758": 811, "\ubbf8\ub9ac": 814, "\ubbf8\ub9cc\uc758": 800, "\ubc0f": [776, 777, 779, 780, 783, 785, 786, 788, 789, 790, 791, 797, 798, 801, 805, 808, 810, 812, 814], "\ubc11\uc904": 781, "\ubc14\uafb8\uace0": 780, "\ubc14\uafb8\uae30\ub9cc": 798, "\ubc14\uafb8\ub294": 803, "\ubc14\uafb8\uba74": 805, "\ubc14\ub010": 776, "\ubc14\ub014": 780, "\ubc16\uc5d0\uc11c": [773, 792], "\ubc18\uacfc": 794, "\ubc18\ub300": 799, "\ubc18\ub300\ub85c": 784, "\ubc18\ub300\uc758": 781, "\ubc18\ub4dc\uc2dc": [792, 803], "\ubc18\uba74": 801, "\ubc18\uba74\uc5d0": 794, "\ubc18\ubcf5": 797, "\ubc18\ubcf5\ub41c\ub2e4": 797, "\ubc18\ubcf5\uc801\uc73c\ub85c": 813, "\ubc18\ubcf5\ud574\uc11c": 814, "\ubc18\uc774": 794, "\ubc18\ud658\ud558\ub294": 804, "\ubc1b\uace0": [779, 809, 814], "\ubc1b\ub294": [802, 808], "\ubc1b\ub294\ub2e4": [781, 788, 795, 804, 808, 809], "\ubc1b\ub294\ub2e4\ub294": [799, 802, 804], "\ubc1b\ub294\ub370": 792, "\ubc1b\uc544\ub4e4\uc778\ub2e4": 787, "\ubc1b\uc544\uc11c": 802, "\ubc1b\uc544\uc57c\ud558\uace0": 802, "\ubc1b\uc744": 804, "\ubc1c\ub824\uc640\uc11c": 812, "\ubc1c\uc0dd\uc2dc\ud0a4\ub294\ub370": 798, "\ubc1c\uc0dd\ud560": [779, 801], "\ubc25\ubc99\uc73c\ub85c": 793, "\ubc29\ubc95": [779, 788, 791, 808], "\ubc29\ubc95\uacfc": [798, 799, 804, 810], "\ubc29\ubc95\ub3c4": 797, "\ubc29\ubc95\ub4e4\uc5d0": 785, "\ubc29\ubc95\ub4e4\uc744": [788, 798], "\ubc29\ubc95\uc5d0": [776, 794, 810], "\ubc29\ubc95\uc73c\ub85c": [779, 781, 796, 800], "\ubc29\ubc95\uc73c\ub85c\ub294": 787, "\ubc29\ubc95\uc740": [776, 781, 785, 789, 794, 797, 801, 805, 811, 812, 813, 814], "\ubc29\ubc95\uc744": [772, 773, 775, 776, 781, 791, 792, 798, 801, 802, 805, 806, 811, 814], "\ubc29\ubc95\uc774\ub2e4": [776, 796, 800], "\ubc29\uc2dd\uc73c\ub85c": [791, 798], "\ubc29\uc2dd\uc744": 778, "\ubc29\uc2dd\uc758": 806, "\ubc29\uc9c0\ud558\ub294": 779, "\ubc29\ud5a5\uc131": [784, 798], "\ubc29\ud5a5\uc131\uc5d0": 784, "\ubc29\ud5a5\uc131\uc744": 784, "\ubc29\ud5a5\uc131\uc774": 784, "\ubc29\ud5a5\uc744": 788, "\ubc29\ud5a5\uc774": 785, "\ubc30\uc5f4": [789, 799, 802, 804], "\ubc30\uc5f4\uacfc": 802, "\ubc30\uc5f4\uc758": 802, "\ubc30\uc81c\ud558\uace0\uc790": 799, "\ubc30\uc81c\ud558\ub294": 799, "\ubc30\uce58": [776, 778, 779, 796, 797, 801, 808], "\ubc30\uce58\ub4e4\uc744": 779, "\ubc30\uce58\ub4e4\uc758": 804, "\ubc30\uce58\ub85c\ubd80\ud130": 799, "\ubc30\uce58\ub97c": [778, 779, 792, 797, 812], "\ubc30\uce58\uc548\uc5d0": 799, "\ubc30\uce58\uc5d0": [792, 812], "\ubc30\uce58\uc5d0\uc11c": 797, "\ubc31\uc564\ub4dc\ub9cc": 778, "\ubc31\uc5d4\ub4dc": [785, 806], "\ubc31\uc5d4\ub4dc\ub85c": [806, 810], "\ubc31\uc5d4\ub4dc\ub97c": 806, "\ubc84\ub9b0\ub2e4\ub294": 812, "\ubc84\uc804": 790, "\ubc84\uc804\ub3c4": [803, 812], "\ubc84\uc804\uc758": 781, "\ubc84\uc804\uc774\ub2e4": 811, "\ubc84\ud2f1\uc2a4\ub4e4": 784, "\ubc88": 814, "\ubc88\uc5ed\ud55c": 790, "\ubc88\ud638": 788, "\ubc88\ud638\uac00": [782, 788], "\ubc88\ud638\ub294": 788, "\ubc88\ud638\ub3c4": 782, "\ubc88\ud638\ub97c": 788, "\ubc94\uc704\ub3c4": 781, "\ubc94\uc704\ub97c": 781, "\ubc94\uc704\uc5d0": 776, "\ubc94\uc704\uc758": 814, "\ubc94\uc8fc\ud615": 811, "\ubc95\uc744": 797, "\ubc95\uce59\uc758": 781, "\ubca0\uce58\ub4e4\uc5d0": 799, "\ubca1\ud130": [786, 811], "\ubca1\ud130\ub294": 781, "\ubca1\ud130\ub4e4\uc758": 781, "\ubca1\ud130\ub97c": 781, "\ubca1\ud130\uc778": 781, "\ubca4\uce58\ub9c8\ud0b9": 775, "\ubcc0\uacbd\ub418\uc5c8\ub294\uc9c0": 774, "\ubcc0\uacbd\uc740": 778, "\ubcc0\uacbd\ud558\uae30": 804, "\ubcc0\uacbd\ud574\uc11c": 811, "\ubcc0\uacbd\ud574\uc57c\ud560": 804, "\ubcc0\uc218\ub4e4": 781, "\ubcc0\ud615": 793, "\ubcc0\ud658": [779, 812], "\ubcc0\ud658\ub41c": 812, "\ubcc0\ud658\ub41c\ub2e4": 776, "\ubcc0\ud658\uc740": 789, "\ubcc0\ud658\uc744": 788, "\ubcc0\ud658\ud558\uace0": 781, "\ubcc0\ud658\ud558\uae30": 785, "\ubcc0\ud658\ud558\ub294": [780, 798], "\ubcc0\ud658\ud558\ub294\ub370": 785, "\ubcc0\ud658\ud558\ub3c4\ub85d": 781, "\ubcc0\ud658\ud558\uba74": [776, 785], "\ubcc0\ud658\ud558\uba74\uc11c": 798, "\ubcc0\ud658\ud55c\ub2e4": [780, 785, 789], "\ubcc0\ud658\ud560": [788, 789], "\ubcc0\ud658\ud574\uc11c": 785, "\ubcc4\ub3c4\ub85c": 781, "\ubcc4\ub3c4\ub85d": 812, "\ubcc4\ub3c4\uc758": [789, 813, 814], "\ubcc4\ub85c\ub3c4": 809, "\ubcd1\ub82c\ub85c": 781, "\ubcd1\ub82c\ud654": 778, "\ubcd1\ub82c\ud654\uc2dc\ud0a4\uace0": 778, "\ubcd1\ud569": [792, 811], "\ubcd1\ud569\uc774\uc804\uc5d0": 793, "\ubcd1\ud569\ud558\ub294": 811, "\ubcf4\ub0b4\uc8fc\uc138\uc694": 790, "\ubcf4\ub2e4": [779, 797, 798, 799, 800, 804], "\ubcf4\ub77c": 781, "\ubcf4\uba74": 789, "\ubcf4\uc5ec\uc8fc\uace0": 801, "\ubcf4\uc5ec\uc8fc\uae30": 803, "\ubcf4\uc5ec\uc8fc\ub294": 780, "\ubcf4\uc5ec\uc900\ub2e4": [772, 773, 775, 777, 778, 780, 781, 782, 788, 798, 799, 805], "\ubcf4\uc790": [779, 786, 788, 798, 801, 803], "\ubcf4\uc874\ud558\uace0": 789, "\ubcf4\ud1b5": [792, 814], "\ubcf4\ud1b5\uc740": [779, 792, 793, 799, 801, 807, 812], "\ubcf4\ud1b5\uc758": [809, 812], "\ubcf4\ud1b5\uc774\ub2e4": 799, "\ubcf4\ud638\ub97c": 779, "\ubcf5\uc0ac": 782, "\ubcf5\uc0ac\ub41c\ub2e4": 782, "\ubcf5\uc0ac\ub97c": 794, "\ubcf5\uc0ac\ud558\uace0": 778, "\ubcf5\uc0ac\ud558\uba74\uc11c": 789, "\ubcf5\uc0ac\ud55c\ub2e4": [782, 787], "\ubcf5\uc0ac\ud560": 787, "\ubcf5\uc7a1\ud558\ub2c8": 811, "\ubcf5\uc7a1\ud55c": [795, 798, 807, 812], "\ubcf8\uac83\uacfc": 814, "\ubcfc": 776, "\ubd80\ub3d9\uc18c\uc218\uc810": 792, "\ubd80\ub978\ub2e4": [788, 798, 804, 812], "\ubd80\ubd84": [776, 799], "\ubd80\ubd84\ub4e4\uc774": 779, "\ubd80\ubd84\uc5d0": 799, "\ubd80\ubd84\uc73c\ub85c": 799, "\ubd80\ubd84\uc740": [799, 808], "\ubd80\ubd84\uc744": [776, 779], "\ubd80\ubd84\uc758": [799, 808], "\ubd80\uc0b0": 779, "\ubd80\uc18d": [791, 799, 802, 811], "\ubd80\uc18d\ub418\ub294": 781, "\ubd80\uc218\uc801\uc73c\ub85c": 811, "\ubd80\uc5ec": 781, "\ubd80\uc5ec\ub41c\ub2e4": [781, 788], "\ubd80\uc5ec\ud558\uace0": 788, "\ubd80\uc5ec\ud558\uae30": 781, "\ubd80\uc5ec\ud558\ub294\ub370": 788, "\ubd80\uc5ec\ud55c\ub2e4": [781, 789], "\ubd80\ud130": [776, 779, 809, 811], "\ubd84\ub4e4\uc744": 797, "\ubd84\ub958": [779, 797, 802, 810, 813], "\ubd84\ub958\uac00": 812, "\ubd84\ub958\uae30": 813, "\ubd84\ub958\ub098": 812, "\ubd84\ub958\ub294": [776, 811, 812], "\ubd84\ub958\ub418\uc5b4": 814, "\ubd84\ub958\ub97c": [798, 810, 811], "\ubd84\ub958\uc5d0": 799, "\ubd84\ub958\uc5d0\uc11c": [799, 802], "\ubd84\ub958\uc640\ub294": 776, "\ubd84\ub958\uc744": [799, 802], "\ubd84\ub958\uc758": [776, 781, 799, 811], "\ubd84\ub958\uc774\ub2e4": 814, "\ubd84\ub958\ud558\uae30": 814, "\ubd84\ub958\ud558\ub294": [811, 813], "\ubd84\ub958\ud55c\ub2e4": 812, "\ubd84\ub958\ud560": 812, "\ubd84\ub9ac\ub418\uc5b4": 812, "\ubd84\uc0b0": 790, "\ubd84\uc0b0\ud558\uace0": 781, "\ubd84\uc0b0\ud558\ub294": 778, "\ubd84\uc0b0\ud559\uc2b5\uc774": 779, "\ubd84\uc11d\uc744": 776, "\ubd84\ud3ec": 802, "\ubd84\ud3ec\ub97c": 781, "\ubd84\ud3ec\uc5d0": 802, "\ubd84\ud3ec\uc5d0\uc11c": 813, "\ubd84\ud45c": 813, "\ubd84\ud560": [776, 779, 814], "\ubd84\ud560\uc744": 776, "\ubd84\ud560\ud558\uae30": 776, "\ubd84\ud560\ud558\uc5ec": 794, "\ubd88\uac00\ub2a5\ud558\ub2e4": [785, 786], "\ubd88\uac00\ub2a5\ud558\ub2e4\uba74": 792, "\ubd88\uade0\ud615\ud558\uac8c": 781, "\ubd88\ub9b0\ub2e4": 811, "\ubd88\ud544\uc694\ud55c": 794, "\ubd99\uc5ec\uc918\uc57c": 779, "\ube0c\ub79c\uce58\ub97c": 781, "\ube0c\ub85c\ub4dc\uce90\uc2a4\ud305\uc744": 792, "\ube14\ub85d": 808, "\ube14\ub85d\ub4e4\ub85c": 806, "\ube14\ub85d\uc774": 808, "\ube14\ub85d\uc77c": 809, "\ube44\uad50\ud558\ub294": 802, "\ube44\uad50\ud558\uba74": 808, "\ube44\uad50\ud558\uba74\uc11c": 813, "\ube44\uad50\ud574": 803, "\ube44\uad50\ud574\uc11c": 814, "\ube44\ub300\uce6d\uc801\uc778": 784, "\ube44\ub840\ud558\ub294": 802, "\ube44\ubc29\ud5a5\uc131": [784, 788], "\ube44\uc120\ud615\uc131": 814, "\ube44\uc2b7\ud558\uac8c": [779, 781, 804, 811], "\ube44\uc2b7\ud558\ub2e4": [776, 779, 799, 802, 803, 804, 813, 814], "\ube44\uc2b7\ud558\ub2e4\ub294": 803, "\ube44\uc2b7\ud558\uc9c0\ub9cc": 775, "\ube44\uc2b7\ud55c": [778, 779, 781, 805], "\ube44\ud2b8": 788, "\ube44\ud2b8\ub97c": 788, "\ube44\ud574\uc11c": 800, "\ube44\ud65c\uc131\ud654\ub418\uc5b4": 792, "\ube44\ud65c\uc131\ud654\ub418\uc5c8\uc744": 805, "\ube44\ud6a8\uc728\uc801\uc774\ub2e4": 812, "\ube44\ud6a8\uc728\uc801\uc778": 794, "\ube4c\ub4dc\uc778": [802, 804, 812, 814], "\ube4c\ub529": 806, "\ube4c\ud2b8\uc778": [776, 777, 791, 794, 803, 805, 814], "\ube4c\ud2b8\uc778\uc73c\ub85c": 799, "\ube60\ub974\uac8c": [776, 812], "\ube60\ub974\uace0": [788, 794], "\ube60\ub974\ub2e4": 805, "\ube60\ub974\uc9c0\ub294": 785, "\ube60\ub978": 788, "\ube68\uac04": 798, "\ube68\uac04\uc0c9": 798, "\ubfd0\ub9cc": 814, "\ubfd0\ub9cc\uc544\ub2c8\ub77c": 779, "\ubfd0\uc774\ub2e4": [802, 803, 804, 812], "\ubfd0\uc784\uc744": 789, "\uc0ac\ub77c\uc838\ub3c4": 779, "\uc0ac\ub78c\ub4e4": 784, "\uc0ac\ub78c\ub4e4\uacfc": 784, "\uc0ac\ub78c\ub4e4\uc758": 812, "\uc0ac\uc2e4\ub4e4": 786, "\uc0ac\uc2e4\uc744": 799, "\uc0ac\uc6a9": [779, 805, 811, 814], "\uc0ac\uc6a9\uacfc": 794, "\uc0ac\uc6a9\ub418\uace0": 807, "\uc0ac\uc6a9\ub418\uae30": [776, 785, 798], "\uc0ac\uc6a9\ub418\ub294": [772, 776, 779, 784, 789, 792, 793, 794, 796, 806, 807, 808, 812, 814], "\uc0ac\uc6a9\ub418\ub294\ub370": 805, "\uc0ac\uc6a9\ub418\uc5b4\uc57c": 782, "\uc0ac\uc6a9\ub41c": [779, 781, 792], "\uc0ac\uc6a9\ub41c\ub2e4": [779, 781, 782, 785, 788, 798, 801, 809, 812], "\uc0ac\uc6a9\ub41c\ub2e4\uba74": 784, "\uc0ac\uc6a9\ub41c\uba70": 805, "\uc0ac\uc6a9\ub420": [778, 779, 781, 782, 798, 799, 802, 811, 814], "\uc0ac\uc6a9\ub7c9\uc744": [794, 805], "\uc0ac\uc6a9\ubc95\uc740": [796, 798], "\uc0ac\uc6a9\ubc95\uc744": [775, 792], "\uc0ac\uc6a9\uc790": [786, 792], "\uc0ac\uc6a9\uc790\uac00": [779, 781, 789], "\uc0ac\uc6a9\uc790\ub294": [779, 780, 781, 782, 792], "\uc0ac\uc6a9\uc790\ub4e4\uacfc": 784, "\uc0ac\uc6a9\uc790\ub4e4\uc740": 781, "\uc0ac\uc6a9\uc790\uc758": 782, "\uc0ac\uc6a9\ud558\uaca0\ub2e4": 810, "\uc0ac\uc6a9\ud558\uace0": [781, 793, 799, 804], "\uc0ac\uc6a9\ud558\uae30": [781, 783, 788, 797, 802, 804], "\uc0ac\uc6a9\ud558\uae30\ub97c": 802, "\uc0ac\uc6a9\ud558\ub294": [776, 781, 788, 792, 794, 798, 800, 802, 805, 811, 812, 813, 814], "\uc0ac\uc6a9\ud558\ub294\ub370": [776, 797], "\uc0ac\uc6a9\ud558\ub294\uc9c0\ub294": 784, "\uc0ac\uc6a9\ud558\ub824\uba74": 799, "\uc0ac\uc6a9\ud558\uba70": 802, "\uc0ac\uc6a9\ud558\uba74": [785, 788, 794, 797], "\uc0ac\uc6a9\ud558\uba74\uc11c": 805, "\uc0ac\uc6a9\ud558\uc790": 812, "\uc0ac\uc6a9\ud558\uc9c0": [781, 805, 812], "\uc0ac\uc6a9\ud558\uc9c0\ub9cc": 801, "\uc0ac\uc6a9\ud55c": [776, 779, 781, 783, 788, 797, 800, 801, 806, 814], "\uc0ac\uc6a9\ud55c\ub2e4": [776, 780, 781, 782, 788, 799, 800, 802, 803, 810, 811, 812, 814], "\uc0ac\uc6a9\ud55c\ub2e4\ub294": [779, 799, 802], "\uc0ac\uc6a9\ud55c\ub2e4\uba74": 784, "\uc0ac\uc6a9\ud560": [776, 779, 781, 785, 788, 789, 799, 800, 802, 804, 810, 811], "\uc0ac\uc6a9\ud574": 812, "\uc0ac\uc6a9\ud574\ub3c4": 789, "\uc0ac\uc6a9\ud574\uc11c": [772, 776, 779, 780, 781, 782, 783, 784, 787, 788, 789, 791, 792, 794, 796, 798, 799, 801, 804, 805, 809, 810, 811, 812, 813, 814], "\uc0ac\uc6a9\ud574\uc57c": [779, 780, 781], "\uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4": [788, 799], "\uc0ac\uc6a9\ud588\ub2e4\uba74": 774, "\uc0ac\uc6a9\ud588\ub358": 802, "\uc0ac\uc774\uc5d0": [784, 799, 812, 813], "\uc0ac\uc774\uc758": [781, 798, 813], "\uc0ac\uc804": [795, 799, 802, 809], "\uc0ac\uc804\ub4e4\uc744": [799, 802], "\uc0ac\uc804\uc5d0\uc11c": 814, "\uc0ac\uc804\uc744": [789, 799, 802, 804, 809, 811, 814], "\uc0ac\uc804\uc758": 795, "\uc0ad\uc81c\ud558\uac8c\ud558\uae30": 779, "\uc0ad\uc81c\ud558\uae30\ub3c4": 799, "\uc0ad\uc81c\ud558\uae30\ub97c": 798, "\uc0b4\ud3b4\ubcf4\uaca0\ub2e4": 808, "\uc0b4\ud3b4\ubcf4\uae30": 798, "\uc0b4\ud3b4\ubcf4\uc790": [776, 792, 798, 804, 805], "\uc0c1\uad00\ud558\uc9c0": 781, "\uc0c1\ub2f9\ud55c": 800, "\uc0c1\ub2f9\ud788": 777, "\uc0c1\ub300": 782, "\uc0c1\ub300\uc801\uc73c\ub85c": [781, 812], "\uc0c1\uc138\ud55c": [799, 804], "\uc0c1\uc18d\ud55c": 798, "\uc0c1\uc18d\ud55c\ub2e4": 806, "\uc0c1\uc18d\ud574\uc11c": [773, 774], "\uc0c1\uc218": 813, "\uc0c1\uc704": 798, "\uc0c1\ud0dc\ub97c": 797, "\uc0c1\ud488": 784, "\uc0c1\ud638\uad00\uacc4\ub97c": 784, "\uc0c1\ud638\uc791\uc6a9\uc744": 778, "\uc0c1\ud669\uc5d0\uc11c": 812, "\uc0c8\ub85c\uc6b4": [779, 780, 781, 789, 797, 803], "\uc0d8\ub4e4\ub85c": 813, "\uc0d8\ub4e4\uc740": 813, "\uc0d8\ud50c": 802, "\uc0d8\ud50c\ub41c": [799, 802, 808], "\uc0d8\ud50c\ub7ec": [778, 779, 782, 797], "\uc0d8\ud50c\ub7ec\uac00": [800, 802], "\uc0d8\ud50c\ub7ec\ub294": [779, 804], "\uc0d8\ud50c\ub7ec\ub2e4": 802, "\uc0d8\ud50c\ub7ec\ub4e4\uacfc": 797, "\uc0d8\ud50c\ub7ec\ub4e4\uc5d0": 799, "\uc0d8\ud50c\ub7ec\ub4e4\uc740": [802, 804], "\uc0d8\ud50c\ub7ec\ub4e4\uc758": 804, "\uc0d8\ud50c\ub7ec\ub85c": 798, "\uc0d8\ud50c\ub7ec\ub97c": [798, 799, 802, 804], "\uc0d8\ud50c\ub7ec\uc640": 778, "\uc0d8\ud50c\ub9c1": [773, 802, 812], "\uc0d8\ud50c\ub9c1\uacfc": [779, 801], "\uc0d8\ud50c\ub9c1\ub41c": 813, "\uc0d8\ud50c\ub9c1\ub41c\ub2e4": 813, "\uc0d8\ud50c\ub9c1\ub420\uc9c0\ub97c": 779, "\uc0d8\ud50c\ub9c1\uc5d0": 797, "\uc0d8\ud50c\ub9c1\uc5d0\uc11c": [780, 804], "\uc0d8\ud50c\ub9c1\uc73c\ub85c": 801, "\uc0d8\ud50c\ub9c1\uc740": [779, 799, 800, 801], "\uc0d8\ud50c\ub9c1\uc744": [779, 797, 798, 800, 801, 813], "\uc0d8\ud50c\ub9c1\uc774": 801, "\uc0d8\ud50c\ub9c1\ud558\ub294": 802, "\uc0d8\ud50c\ub9c1\ud55c\ub2e4": [778, 780, 802], "\uc0d8\ud50c\ud558\ub294": 798, "\uc0dd\uac01\ud574": [798, 801], "\uc0dd\uac01\ud574\ubcf4\uc790": [797, 798], "\uc0dd\uae38": 805, "\uc0dd\ub7b5\ud55c\ub2e4": [776, 811], "\uc0dd\ub7b5\ud574\uc11c": 776, "\uc0dd\ub7b5\ud588\ub2e4": 776, "\uc0dd\uc120\ud55c": 781, "\uc0dd\uc131": [778, 785, 792, 806, 808], "\uc0dd\uc131\ub418\ub294": 808, "\uc0dd\uc131\ub41c": [779, 785, 799, 804], "\uc0dd\uc131\ub41c\ub2e4": [781, 809], "\uc0dd\uc131\uc2dc": 787, "\uc0dd\uc131\uc740": 779, "\uc0dd\uc131\uc744": [779, 802], "\uc0dd\uc131\uc774": 779, "\uc0dd\uc131\ud558\uace0": [779, 780, 786, 792, 798], "\uc0dd\uc131\ud558\uae30": [776, 778, 779, 783, 788], "\uc0dd\uc131\ud558\ub294": [779, 785, 788, 798, 804], "\uc0dd\uc131\ud558\ub294\uac83\uc744": 798, "\uc0dd\uc131\ud558\ub294\ub370": [779, 781, 798], "\uc0dd\uc131\ud558\uba70": 797, "\uc0dd\uc131\ud558\uba74": 813, "\uc0dd\uc131\ud558\uc9c0\ub9cc": 798, "\uc0dd\uc131\ud55c": [781, 802, 804, 810], "\uc0dd\uc131\ud55c\ub2e4": [779, 782, 786, 792, 798, 804], "\uc0dd\uc131\ud560": [779, 780, 789, 798, 811, 812], "\uc0e4\ub4dc": 779, "\uc11c\ub85c": [776, 781, 783, 784, 789, 799, 814], "\uc11c\ubc84": [778, 779], "\uc11c\ubc84\ub4e4\uac04\uc758": 779, "\uc11c\ubc84\ub4e4\uacfc": [778, 779], "\uc11c\ubc84\ub4e4\uc5d0\uc11c": 779, "\uc11c\ubc84\ub4e4\uc740": 778, "\uc11c\ubc84\ub4e4\uc744": [778, 779], "\uc11c\ubc84\ub4e4\uc774": 779, "\uc11c\ubc84\uc5d0": 780, "\uc11c\ube0c": [774, 776, 778, 780, 781, 798, 799, 800, 801, 808], "\uc11c\ube0c\uadf8\ub798\ud504": [808, 809], "\uc11c\ube0c\uadf8\ub798\ud504\ub97c": [789, 796], "\uc11c\ube0c\uadf8\ub798\ud504\uc5d0": 796, "\uc11c\ube0c\ubaa8\ub4c8": 807, "\uc11c\ube0c\ubaa8\ub4c8\ub4e4\uc744": 807, "\uc11c\ube0c\ubaa8\ub4c8\uc740": 807, "\uc11c\ube0c\uc14b\uc5d0": 781, "\uc11c\ube0c\uc14b\uc744": 779, "\uc11c\ube0c\ud074\ub798\uc2a4": 773, "\uc11c\ube0c\ud074\ub798\uc2a4\ub85c": 772, "\uc11c\ube0c\ud074\ub798\uc2a4\uc5d0\uc11c": 773, "\uc11c\uce58\ud558\ub294": 773, "\uc11e\uace0": 781, "\uc11e\uae30\uc804\uc758": 781, "\uc11e\ub294\ub2e4": 781, "\uc11e\uc5b4\uc57c\ud55c\ub2e4": 781, "\uc11e\uc5b4\uc900\ub2e4": 781, "\uc11e\uc778": 781, "\uc120\uc5b8\ub418\uc57c": 779, "\uc120\ud0dd": 801, "\uc120\ud0dd\uc744": 801, "\uc120\ud0dd\uc801\uc73c\ub85c": 782, "\uc120\ud0dd\uc801\uc778": 781, "\uc120\ud0dd\ud55c\ub2e4": [780, 797, 802, 805], "\uc120\ud0dd\ud560\uc9c0": 811, "\uc120\ud0dd\ud560\uc9c0\ub97c": 811, "\uc120\ud589": 798, "\uc120\ud615": 794, "\uc124\uba85\ub41c": 808, "\uc124\uba85\uc740": 811, "\uc124\uba85\uc744": [781, 799, 804], "\uc124\uba85\ud558\uace0": 772, "\uc124\uba85\ud558\uae30": 810, "\uc124\uba85\ud558\uae30\uc5d0\ub294": 811, "\uc124\uba85\ud55c": [802, 813], "\uc124\uba85\ud55c\ub2e4": [775, 776, 791, 798, 804, 814], "\uc124\uba85\ud588\ub4ef\uc774": 798, "\uc124\uc815": [778, 779, 782, 807], "\uc124\uc815\ub41c": 808, "\uc124\uc815\ub4e4\uc744": 781, "\uc124\uc815\uc5d0\uc11c\ub294": 792, "\uc124\uc815\uc73c\ub85c": [780, 781], "\uc124\uc815\uc73c\ub85c\ub294": [779, 792], "\uc124\uc815\uc740": 781, "\uc124\uc815\uc744": 781, "\uc124\uc815\ud558\uace0": 789, "\uc124\uc815\ud558\uae30": 800, "\uc124\uc815\ud558\ub294": 781, "\uc124\uc815\ud55c\ub2e4": 809, "\uc124\uc815\ud574\uc57c": 781, "\uc124\uce58\ub294": 781, "\uc124\uce58\ud558\ub294": 781, "\uc124\uce58\ud558\uc790": 781, "\uc124\uce58\ud55c\ub2e4": [775, 781], "\uc131\ub2a5": [797, 808], "\uc131\ub2a5\uc740": 805, "\uc131\ub2a5\uc774": 785, "\uc131\ub9bd\ud558\uae30": 794, "\uc131\uc9c8": 812, "\uc138": 781, "\uc138\uac00\uc9c0": [779, 808], "\uc138\uac1c\uc758": 804, "\uc138\ud305\uc5d0\uc11c": 779, "\uc139\uc158": 779, "\uc140\ud504": 781, "\uc148\ud50c\ub4e4": 813, "\uc14b": 781, "\uc14b\ub3c4": 779, "\uc14b\uc5d0": [779, 781, 804], "\uc14b\uc73c\ub85c": 779, "\uc14b\uc744": [778, 779], "\uc14b\uc758": 814, "\uc14b\uc774": 811, "\uc18c\uac1c\ub294": 785, "\uc18c\uac1c\ub97c": 783, "\uc18c\uac1c\ud55c": [797, 810, 812, 814], "\uc18c\uac1c\ud55c\ub2e4": [772, 773, 781, 783, 785, 791, 801, 806], "\uc18c\uc15c": 784, "\uc18c\uc2a4": [776, 781, 792, 793, 798, 802, 804, 807, 808], "\uc18c\uc2a4\ub4e4\ub85c": 776, "\uc18c\uc2a4\ub4e4\ub85c\ubd80\ud130": 785, "\uc18c\uc2a4\ub85c\ubd80\ud130": 788, "\uc18c\uc2a4\ub97c": [776, 783, 788], "\uc18d\ub3c4": [800, 801], "\uc18d\ub3c4\ub3c4": 788, "\uc18d\ub3c4\ub97c": 781, "\uc18d\ub4dc\ub97c": 794, "\uc18d\uc131": 781, "\uc18d\uc131\ub4e4\uc744": 781, "\uc18d\uc131\ub4e4\uc758": 781, "\uc18d\uc131\uc744": [781, 786, 795, 811], "\uc18d\uc131\uc758": 781, "\uc18d\ud558\ub294": 781, "\uc18d\ud558\ub294\uc9c0\ub97c": 779, "\uc18d\ud55c": [781, 792, 798], "\uc18d\ud55c\ub2e4": 780, "\uc194\ub8e8\uc158\uc740": 781, "\uc194\ub8e8\uc158\uc744": 781, "\uc218": [773, 774, 776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 792, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814], "\uc218\uac00": [794, 814], "\uc218\ub3c4": [780, 802, 808, 811], "\uc218\ub834\ud55c\ub2e4": 805, "\uc218\ub97c": [781, 798], "\uc218\ubc31\ub9cc": 797, "\uc218\ubcf4\ub2e4": 794, "\uc218\uc2dd\uc5d0\uc11c": 791, "\uc218\uc2ed\uc5b5": 781, "\uc218\uc2ed\uc5b5\uac1c\uc758": 797, "\uc218\uc5d0": 781, "\uc218\uc640": 779, "\uc218\uc758": [779, 780, 782, 798, 812], "\uc218\uc815\ud558\uba74": 778, "\uc218\uc815\ud560": 804, "\uc218\uc900\uc758": [779, 785, 809, 812], "\uc218\uc9d1\ud558\uace0": 779, "\uc218\uc9d1\ud558\uae30\ub97c": 814, "\uc218\uc9d1\ud558\ub294": 798, "\uc218\uc9d1\ud558\ub3c4\ub85d": 804, "\uc218\uc9d1\ud560": 798, "\uc218\ud559": [792, 808], "\uc218\ud559\uc801\uc73c\ub85c": 794, "\uc218\ud589": 782, "\uc218\ud589\ub418\uace0": 779, "\uc218\ud589\ub418\ub294": 814, "\uc218\ud589\ub418\ub294\uc9c0": 797, "\uc218\ud589\ub418\uba74": 779, "\uc218\ud589\ub41c": [782, 783, 798], "\uc218\ud589\ub41c\ub2e4": [773, 779, 781, 787, 805, 808, 812], "\uc218\ud589\ub420": [779, 792], "\uc218\ud589\uc774": 781, "\uc218\ud589\uc774\ub2e4": 779, "\uc218\ud589\ud558\uace0": [779, 814], "\uc218\ud589\ud558\uae30": [798, 805, 813], "\uc218\ud589\ud558\ub294": [778, 779, 782, 797, 801, 808, 814], "\uc218\ud589\ud558\uba74\uc11c": [778, 781], "\uc218\ud589\ud558\uc790": 811, "\uc218\ud589\ud558\uc9c0": 774, "\uc218\ud589\ud558\uc9c0\ub9cc": 812, "\uc218\ud589\ud55c\ub2e4": [781, 791, 801, 804, 805, 807, 808, 814], "\uc218\ud589\ud55c\ub2e4\uace0": 813, "\uc218\ud589\ud55c\ub2e4\ub294": 798, "\uc218\ud589\ud560": [778, 779, 781, 798, 801, 809, 812, 813], "\uc218\ud589\ud560\uc9c0\ub97c": 798, "\uc218\ud589\ud574\uc11c": [774, 812, 814], "\uc21c\uc11c\ub300\ub85c": 812, "\uc21c\uc11c\ub3c4": 773, "\uc21c\uc11c\ub3c4\ub294": 773, "\uc21c\uc11c\ub85c": 779, "\uc21c\uc11c\uc5d0": 788, "\uc21c\uc218": 792, "\uc21c\uc218\ud55c": 807, "\uc22b\uc790": 786, "\uc27d\uac8c": [773, 781], "\uc27d\ub2e4": 813, "\uc27d\uc9c0": 801, "\uc2a4\uce7c\ub77c": [784, 786, 793], "\uc2a4\ud06c\ub9bd\ud2b8": [779, 781, 782], "\uc2a4\ud06c\ub9bd\ud2b8\uac00": [779, 782], "\uc2a4\ud06c\ub9bd\ud2b8\ub294": 782, "\uc2a4\ud06c\ub9bd\ud2b8\ub4e4\uc744": 782, "\uc2a4\ud06c\ub9bd\ud2b8\ub97c": [778, 779, 781], "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0": 779, "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c": 782, "\uc2a4\ud06c\ub9bd\ud2b8\uc774\ub2e4": 805, "\uc2a4\ud0a4\ub9c8": 781, "\uc2a4\ud0a4\ub9c8\ub97c": 781, "\uc2a4\ud0a4\ub9c8\uc774\ub2e4": 789, "\uc2a4\ud0ed\uc5d0\uc11c": 792, "\uc2a4\ud1a0\ub9ac\uc9c0": 782, "\uc2ac\ub77c\uc774\uc2a4\ub294": 786, "\uc2dc\uac01\ud654\ud558\uba74": 797, "\uc2dc\uac04": 805, "\uc2dc\uac04\uc744": [773, 777, 801], "\uc2dc\ub098\ub9ac\uc624\ub4e4\ub85c": 797, "\uc2dc\ub4dc": [780, 798], "\uc2dc\ub9ac\uc988\ub85c": 789, "\uc2dc\uc2a4\ud15c\uc5d0\uc11c": 784, "\uc2dc\uc791": 782, "\uc2dc\uc791\uc73c\ub85c": 783, "\uc2dc\uc791\ud558\uace0": 789, "\uc2dc\uc791\ud558\uae30": 782, "\uc2dc\uc791\ud558\ub294": [781, 789, 798], "\uc2dc\uc791\ud55c\ub2e4": [788, 797], "\uc2dc\uc791\ud560": 812, "\uc2dc\uc791\ud574\uc11c": 801, "\uc2dd\ubcc4\ub420": 779, "\uc2e4\uc81c": [781, 808], "\uc2e4\uc81c\ub85c": 808, "\uc2e4\ud589": 780, "\uc2e4\ud589\ub418\ub294": [781, 782, 792], "\uc2e4\ud589\ub418\uba74": 779, "\uc2e4\ud589\ub418\uc57c": 782, "\uc2e4\ud589\ub41c": 781, "\uc2e4\ud589\ub41c\ub2e4": [778, 779, 781, 814], "\uc2e4\ud589\ub420": [779, 781, 782], "\uc2e4\ud589\ud558\uace0": [774, 779, 808], "\uc2e4\ud589\ud558\ub294": [778, 779, 794], "\uc2e4\ud589\ud558\uba74": 779, "\uc2e4\ud589\ud55c\ub2e4": 778, "\uc2e4\ud589\ud560": 779, "\uc2e4\ud589\ud574\uc11c": [778, 781], "\uc2e4\ud589\ud574\uc57c\ud558\uace0": 779, "\uc2e4\ud5d8\uc801\uc73c\ub85c": 780, "\uc2e4\ud5d8\uc801\uc778": 800, "\uc2f1\uae00": 779, "\uc2f6\ub2e4": [781, 789], "\uc2f6\ub2e4\uba74": [774, 781, 803, 804, 814], "\uc2f6\uc73c\uba74": 792, "\uc2f6\uc740": [779, 789, 796, 797, 813], "\uc30d\ub4e4": 784, "\uc30d\ub4e4\ub85c\ub9cc": 813, "\uc30d\uc5d0": 813, "\uc30d\uc73c\ub85c": 788, "\uc30d\uc744": [784, 802], "\uc30d\uc758": 802, "\uc30d\uc774\ub2e4": 812, "\uc30d\uc778": 803, "\uc313\uc544\uc11c": 814, "\uc4f0\uae30\ub97c": 779, "\uc4f0\uc774\ub294": [811, 812], "\uc544\ub2c8\uae30": 808, "\uc544\ub2c8\ub2e4": [779, 805], "\uc544\ub2c8\ub77c": [785, 812, 814], "\uc544\ub2cc": [803, 812], "\uc544\ub2cc\uc9c0\ub97c": 813, "\uc544\ub2d8\uc744": 803, "\uc544\ub798": [773, 778, 779, 780, 781, 782, 785, 786, 788, 789, 792, 798, 799, 801, 802, 803, 811, 813, 814], "\uc544\ub798\uc640": [788, 799, 804, 811, 812], "\uc544\ub798\uc758": [774, 789], "\uc544\ub9c8\ub3c4": 812, "\uc544\ubb34\uac83\ub3c4": 808, "\uc544\uc6c3\ud48b\ub4e4\uc744": 809, "\uc544\uc6c3\ud48b\uc740": 781, "\uc544\uc774\ub514\uc5b4\ub294": 813, "\uc544\uc774\ub514\uc5b4\ub97c": 812, "\uc544\uc774\ud15c\ub4e4\uc744": 802, "\uc544\uc774\ud15c\ub4e4\uc758": 784, "\uc544\uc774\ud15c\uc640": 802, "\uc544\uc774\ud15c\uc740": 812, "\uc544\uc774\ud15c\uc744": 804, "\uc544\uc8fc": [778, 785, 799, 801, 802], "\uc544\uc9c1": 805, "\uc544\ud06c\ub4e4": 784, "\uc544\ud0a4\ud14d\ud0c0": 792, "\uc548\uc5d0\ub294": 781, "\uc548\uc5d0\uc11c": 809, "\uc54a\uaca0\ub2e4": 785, "\uc54a\uace0": [774, 781, 789, 792, 805, 812], "\uc54a\uae30": [798, 800], "\uc54a\ub294": [781, 792, 802, 805], "\uc54a\ub294\ub2e4": [779, 781, 784, 800, 811, 812], "\uc54a\ub294\ub2e4\uba74": [789, 800], "\uc54a\ub294\uc9c0": 808, "\uc54a\ub2e4": [779, 785, 801, 811, 812, 813], "\uc54a\ub2e4\uba74": 810, "\uc54a\uc558\ub358": 799, "\uc54a\uc73c\uba74": 799, "\uc54a\uc740": [774, 776, 777, 781, 782, 798, 808], "\uc54a\uc744": 781, "\uc54a\uc9c0\ub9cc": 785, "\uc54c": 803, "\uc54c\uace0": [792, 813], "\uc54c\uace0\ub9ac\uc998\uacfc\ub294": 801, "\uc54c\uace0\ub9ac\uc998\ub4e4": 797, "\uc54c\uace0\ub9ac\uc998\uc740": 801, "\uc54c\uace0\ub9ac\uc998\uc744": [779, 812], "\uc54c\ub824\uc8fc\uace0": 804, "\uc54c\ub824\uc900\ub2e4": [781, 789], "\uc54c\ub824\uc9c4": 785, "\uc54c\uc218": 798, "\uc54c\uc544\ub0bc": 798, "\uc54c\uc544\ub450\uc790": [776, 789, 804, 814], "\uc54c\uc544\ubcf8\ub2e4": [776, 797, 810], "\uc54c\uc544\ubd24\ub2e4": 811, "\uc54c\ud30c\ubcb3": 781, "\uc55e": 811, "\uc55e\uc5d0": 808, "\uc55e\uc5d0\uc11c": [779, 804, 813], "\uc55e\uc73c\ub85c": 780, "\uc55e\uc73c\ub85c\uc758": 805, "\uc560\ub2c8\ub9e4\uc774\uc158\uc740": 801, "\uc564\ud2f0\ud2f0\ub4e4": 783, "\uc57d": 800, "\uc57d\uac04": [799, 812, 813], "\uc591\ubc29\ud5a5\uc5d0": 788, "\uc591\ubc29\ud5a5\uc758": 788, "\uc591\ubc29\ud5a5\uc774\uae30": 784, "\uc5b4\ub290\uc815\ub3c4": 799, "\uc5b4\ub514\uc11c\ub098": 774, "\uc5b4\ub5a4": [779, 781, 795, 798, 799, 804, 807, 813], "\uc5b4\ub5bb\uac8c": [772, 773, 779, 780, 781, 784, 791, 797, 798, 801, 803, 804, 807, 814], "\uc5b4\ub824\uc6b8": 797, "\uc5b8\uae09\ud55c": 792, "\uc5b8\uae09\ud588\ub4ef\uc774": 779, "\uc5b8\ub354\ud50c\ub85c\uc6b0": 805, "\uc5b8\uc5b4\uc5d0\uc11c": 788, "\uc5bb\uae30": [778, 781, 811], "\uc5bb\ub294": [780, 799], "\uc5bb\ub294\ub2e4": [799, 803, 804, 812], "\uc5bb\uc5b4\uc9c4": 809, "\uc5bb\uc740": [799, 809], "\uc5bb\uc744": [789, 798, 804, 810, 813], "\uc5bc\ub9c8\ub098": 798, "\uc5c5\ub370\uc774\ud2b8": [791, 792], "\uc5c5\ub370\uc774\ud2b8\ub97c": [779, 792, 796, 800, 805], "\uc5c5\ub370\uc774\ud2b8\ud558\uace0": 792, "\uc5c5\ub370\uc774\ud2b8\ud558\ub294": [798, 803, 805, 808, 812], "\uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4": [791, 792, 812], "\uc5c6\uac70\ub098": 784, "\uc5c6\uac8c": 808, "\uc5c6\uace0": 780, "\uc5c6\uae30": 794, "\uc5c6\ub294": [781, 785, 797, 801], "\uc5c6\ub294\uc9c0\ub97c": 804, "\uc5c6\ub2e4": [779, 780, 789, 798, 808, 812], "\uc5c6\ub2e4\ub294": [779, 801], "\uc5c6\uc560\uace0": 779, "\uc5c6\uc5b4\uc57c": 781, "\uc5c6\uc744": 784, "\uc5c6\uc774": 782, "\uc5d0": [776, 778, 779, 780, 781, 782, 789, 792, 795, 798, 799, 804, 805, 808, 809, 811, 812, 813, 814], "\uc5d0\ub294": [799, 804], "\uc5d0\ub7ec\ub97c": 798, "\uc5d0\uc11c": [772, 773, 774, 777, 779, 780, 781, 782, 784, 788, 793, 797, 798, 801, 802, 804, 808, 810, 812, 814], "\uc5d0\uc11c\ub294": [784, 811], "\uc5d0\uc11c\uc758": 803, "\uc5d0\uc9c0": [778, 780, 783, 784, 786, 791, 792, 794, 795, 797, 798, 802, 803, 810, 812, 813, 814], "\uc5d0\uc9c0\uac00": [781, 784, 788, 789, 799, 811, 812, 813], "\uc5d0\uc9c0\ub098": 781, "\uc5d0\uc9c0\ub294": [780, 784, 788, 789], "\uc5d0\uc9c0\ub3c4": 798, "\uc5d0\uc9c0\ub4e4\uacfc": 799, "\uc5d0\uc9c0\ub4e4\ub3c4": [784, 799], "\uc5d0\uc9c0\ub4e4\ub9cc\uc744": 798, "\uc5d0\uc9c0\ub4e4\uc5d0": [781, 799, 812], "\uc5d0\uc9c0\ub4e4\uc740": [786, 788, 799], "\uc5d0\uc9c0\ub4e4\uc744": [779, 783, 784, 788, 797, 799, 800, 802], "\uc5d0\uc9c0\ub4e4\uc758": [781, 784, 786, 789, 794, 798, 799, 802, 811, 813], "\uc5d0\uc9c0\ub4e4\uc774": [776, 781, 784, 795, 799, 813], "\uc5d0\uc9c0\ub85c": [784, 785, 813], "\uc5d0\uc9c0\ub85c\uc758": 794, "\uc5d0\uc9c0\ub97c": [778, 779, 780, 781, 785, 788, 789, 795, 798, 799, 802, 805], "\uc5d0\uc9c0\ubcc4": [791, 792], "\uc5d0\uc9c0\uc5d0": [781, 786, 788, 789, 791, 794, 811], "\uc5d0\uc9c0\uc5d0\ub294": 788, "\uc5d0\uc9c0\uc640": [779, 781, 789], "\uc5d0\uc9c0\uc640\ub294": 799, "\uc5d0\uc9c0\uc744": 798, "\uc5d0\uc9c0\uc758": [778, 779, 781, 783, 784, 789, 791, 792, 793, 795, 798, 799, 800, 802, 807, 811, 812, 813, 814], "\uc5d0\uc9c0\uc774\ub2e4": 788, "\uc5d0\uce58": [779, 785, 812], "\uc5d4\ud130\ub9ac": 813, "\uc5d4\ud2b8\ub9ac\ub97c": 781, "\uc5ec\uae30\uc11c": [780, 781, 798, 804, 807, 809, 811, 812, 813, 814], "\uc5ec\uae30\uc11c\ub294": [781, 810], "\uc5ec\uae30\uc11c\ubd80\ud130\ub294": 781, "\uc5ec\ub7ec": [776, 778, 779, 780, 781, 784, 785, 788, 789, 795, 797, 798, 803, 807, 808, 809, 812, 813, 814], "\uc5ec\ub7ec\uac00\uc9c0\uac00": 813, "\uc5ec\ub7ec\uac1c\uac00": 809, "\uc5ec\ub7ec\ubc88": 779, "\uc5ec\ub7ec\ubd84": 804, "\uc5ec\ub7ec\ubd84\ub9cc\uc758": [799, 804], "\uc5ec\ub7ec\ubd84\uc740": 814, "\uc5ec\ub7ec\ubd84\uc758": [792, 806], "\uc5ec\ubd80\ub97c": 781, "\uc5ec\uc804\ud788": [798, 801, 804], "\uc5ec\uc9c0\uac00": 792, "\uc5ed": 799, "\uc5ed\ubc29\ud5a5": 799, "\uc5ed\ubc29\ud5a5\uc758": 799, "\uc5ed\uc2dc": [775, 787, 804], "\uc5ed\ud560\uc744": [781, 791, 798], "\uc5f0\uacb0": [784, 808, 813], "\uc5f0\uacb0\ub418\ub294": 798, "\uc5f0\uacb0\ub418\uc5b4": [779, 781, 784], "\uc5f0\uacb0\ub418\uc9c0": 798, "\uc5f0\uacb0\ub41c": [788, 809, 813], "\uc5f0\uacb0\ub41c\ub2e4": 784, "\uc5f0\uacb0\ub85c": 784, "\uc5f0\uacb0\uc744": 779, "\uc5f0\uacb0\ud558\uace0": [794, 799, 811], "\uc5f0\uacb0\ud558\ub294": [784, 811, 812], "\uc5f0\uacb0\ud55c\ub2e4": [779, 784], "\uc5f0\uacb0\ud574\uc11c": 812, "\uc5f0\uad00\ub41c": [780, 789, 799, 809], "\uc5f0\uc0b0": [776, 779, 783, 787, 794, 797, 805, 812], "\uc5f0\uc0b0\uacfc": [778, 795], "\uc5f0\uc0b0\ub4e4\uc740": [805, 808, 812], "\uc5f0\uc0b0\ub4e4\uc744": 812, "\uc5f0\uc0b0\ub9cc": 792, "\uc5f0\uc0b0\uc18d\ub3c4\uac00": 794, "\uc5f0\uc0b0\uc5d0": 806, "\uc5f0\uc0b0\uc73c\ub85c": 792, "\uc5f0\uc0b0\uc740": [787, 806, 808], "\uc5f0\uc0b0\uc744": [778, 789, 791, 792, 794, 803, 808, 812], "\uc5f0\uc0b0\uc758": 794, "\uc5f0\uc0b0\uc774": [801, 808], "\uc5f0\uc18d\ub41c": [780, 781], "\uc5fc\ub450\ud574\ub450\uace0": 778, "\uc5fc\ub450\ud574\uc11c": 812, "\uc601\ubb38": 790, "\uc601\uc18d\uc801\uc778": 779, "\uc601\uc5ed\uc5d0\uc11c\ub294": 801, "\uc608": [779, 782, 785, 786, 788, 789, 805, 811], "\uc608\ub294": [776, 777, 782, 813], "\uc608\ub4e4": 784, "\uc608\ub4e4\ub85c": 801, "\uc608\ub4e4\uc744": 776, "\uc608\ub85c": [773, 776, 798, 803, 804], "\uc608\ub97c": [777, 779, 780, 781, 782, 783, 784, 786, 789, 792, 793, 798, 799, 800, 802, 803, 804, 811, 812, 813, 814], "\uc608\ub97c\ub4e4\uba74": 789, "\uc608\uc758": 786, "\uc608\uc774\ub2e4": [774, 781, 802], "\uc608\uc804\uacfc": 798, "\uc608\uc815\uc774\ub2e4": 779, "\uc608\uc81c": [802, 804, 811, 814], "\uc608\uc81c\uac00": 814, "\uc608\uc81c\ub294": [779, 780, 781, 793, 795, 799, 802, 804, 805, 812, 813], "\uc608\uc81c\ub4e4\uc740": 810, "\uc608\uc81c\ub4e4\uc744": [776, 777, 814], "\uc608\uc81c\ub4e4\uc774": 809, "\uc608\uc81c\ub85c": [776, 802, 806, 811], "\uc608\uc81c\ub97c": [788, 794, 810, 814], "\uc608\uc81c\uc5d0": 811, "\uc608\uc81c\uc5d0\uc11c": 811, "\uc608\uc81c\uc5d0\uc11c\uc640": 776, "\uc608\uc81c\uc640": 804, "\uc608\uc81c\uc758": [776, 786, 798], "\uc608\uc81c\uc774\ub2e4": [778, 781, 785, 789, 794, 799, 812, 813], "\uc608\uc81c\uc778": [802, 804], "\uc608\uc81c\ucc98\ub7fc": 774, "\uc608\uce21": [779, 797, 799, 804, 810, 811, 812, 814], "\uc608\uce21\uac12\uc744": 811, "\uc608\uce21\uacfc": 813, "\uc608\uce21\ub97c": 802, "\uc608\uce21\uc740": [802, 811, 813], "\uc608\uce21\uc744": [802, 811, 812, 813, 814], "\uc608\uce21\uc758": [802, 811], "\uc608\uce21\ud558\uace0": [811, 813, 814], "\uc608\uce21\ud558\uae30": [799, 802], "\uc608\uce21\ud558\uae30\ub9cc": 802, "\uc608\uce21\ud558\ub294": [799, 811, 813], "\uc608\uce21\ud558\uba74": 811, "\uc608\uce21\ud560": 811, "\uc624\ub958": 790, "\uc624\ub978\ucabd": 794, "\uc624\ub978\ucabd\uc73c\ub85c": 812, "\uc624\uc9c1": [775, 789], "\uc624\ud37c\ub808\uc774\ud130\ub294": 779, "\uc624\ud504\ub77c\uc778": 797, "\uc62c\ub824\uc11c": 800, "\uc62c\ub824\uc57c\ud560": 797, "\uc62e\uaca8\ub193\ub294\ub2e4": 799, "\uc62e\uae30\ub294": [774, 804], "\uc635\uc158": 807, "\uc635\uc158\ub4e4": 785, "\uc635\uc158\ub4e4\uc744": 785, "\uc635\uc158\uc5d0": 808, "\uc635\uc158\uc73c\ub85c": 807, "\uc640": [773, 776, 777, 778, 779, 780, 781, 783, 784, 786, 789, 792, 794, 798, 799, 800, 802, 804, 805, 806, 808, 809, 811, 812, 813, 814], "\uc644\ub8cc\ub418\uba74": [781, 792], "\uc644\ub8cc\ub41c\ub2e4": 779, "\uc644\ubcbd\ud55c": 776, "\uc644\uc804\ud558\uac8c": 800, "\uc644\uc804\ud55c": 778, "\uc644\uc804\ud788": [799, 812], "\uc678\ubd80": [776, 783, 788, 804], "\uc678\uc5d0": 781, "\uc67c\ucabd": 794, "\uc67c\ucabd\ubd80\ud130": 812, "\uc694\uad6c\ub418\uae30": 792, "\uc694\uad6c\ub7c9\uc740": 800, "\uc694\uc18c\ub294": 808, "\uc694\uc57d\ud55c\ub2e4": 812, "\uc6a9\ub3c4\ub97c": 811, "\uc6a9\ub7c9\uc744": 797, "\uc6b0\ub9ac\ub294": [779, 781, 801, 811, 814], "\uc6b0\uc120": [775, 779, 780, 789, 798, 811], "\uc6cc\ud06c\ub85c\ub4dc": 797, "\uc6cc\ud06c\ub85c\ub4dc\ub97c": 781, "\uc6d0\uaca9": 773, "\uc6d0\ub798": 792, "\uc6d0\ub798\uc758": [789, 808, 811, 812], "\uc6d0\ubcf8": [781, 798, 802, 803], "\uc6d0\ubcf8\uc758": 798, "\uc6d0\uc18c\ub4e4\uc740": 779, "\uc6d0\uc18c\ub97c": 804, "\uc6d0\uce59\uc740": 803, "\uc6d0\ud558\ub294": [796, 804, 811], "\uc6d0\ud55c\ub2e4\uba74": [798, 802], "\uc6d0\ud560": 814, "\uc6d0\ud568": 784, "\uc6d0\ud65c\ud558\uac8c": 806, "\uc704": [774, 776, 781, 786, 789, 791, 792, 794, 798, 800, 804, 811, 812, 814], "\uc704\ub97c": 813, "\uc704\uc5d0\uc11c": [792, 813, 814], "\uc704\uc758": [776, 798, 812], "\uc704\uc8fc": 786, "\uc704\uce58\uc774\ub2e4": 782, "\uc704\uce58\ud55c": 787, "\uc704\uce58\ud55c\ub2e4": 798, "\uc704\ud55c": [773, 775, 777, 778, 779, 780, 784, 785, 788, 789, 792, 797, 799, 801, 802, 804, 809, 810, 811, 813, 814], "\uc704\ud568\uc774\ub2e4": 776, "\uc704\ud568\uc774\uc9c0": 803, "\uc704\ud574": [772, 776, 777, 779, 780, 799], "\uc704\ud574\uc11c": [773, 774, 776, 778, 779, 780, 781, 782, 784, 786, 788, 789, 792, 795, 798, 801, 802, 804, 805, 807, 809, 810, 811, 812, 813, 814], "\uc704\ud574\uc11c\ub294": [781, 788, 792, 798, 802, 803, 804], "\uc704\ud574\uc11c\uc774\ub2e4": [799, 808], "\uc704\ud578": 779, "\uc720\ub3c4\ub41c": 799, "\uc720\ub3c4\ud558\ub294": 798, "\uc720\uba85\ud558\uace0": 814, "\uc720\uba85\ud55c": [779, 789], "\uc720\uc0ac\ud558\ub2e4": [804, 811], "\uc720\uc6a9\ud558\ub2e4": [779, 789], "\uc720\uc6a9\ud55c": [776, 777], "\uc720\uc758\ud558\uc790": [775, 785, 798, 804], "\uc720\uc77c\ud55c": [778, 779, 799, 802, 812], "\uc720\uc9c0\ud558\uae30": 812, "\uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744": 785, "\uc720\ud6a8\ud558\uc9c0": 808, "\uc73c\ub85c": [780, 790, 792, 809], "\uc740": [775, 776, 779, 780, 781, 782, 783, 791, 799, 802, 803, 804, 807, 813], "\uc740\ub2c9": 807, "\uc744": [773, 776, 778, 779, 780, 781, 782, 784, 785, 790, 792, 795, 798, 803, 804, 809, 811, 813, 814], "\uc758": [772, 773, 776, 777, 779, 780, 781, 782, 783, 784, 786, 791, 792, 798, 799, 800, 802, 804, 808, 809, 811, 812, 813, 814], "\uc758\ubbf8\ud558\ub294\ub370": 807, "\uc758\ubbf8\ud55c\ub2e4": [781, 792, 798, 804, 809], "\uc758\ubbf8\ud560": 784, "\uc758\uc874\uc131": 797, "\uc758\uc874\ud558\uae30": 801, "\uc758\ud574": 781, "\uc758\ud574\uc11c": 799, "\uc774": [772, 773, 775, 776, 778, 779, 781, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814], "\uc774\uac83\ub4e4\uc740": [772, 804, 808, 809], "\uc774\uac83\ub4e4\uc744": [779, 789, 804], "\uc774\uac83\uc740": [789, 792, 799, 801], "\uc774\uac83\uc744": 789, "\uc774\uace0": [776, 812], "\uc774\ub098": [780, 805, 811, 813], "\uc774\ub294": [772, 773, 777, 778, 779, 780, 781, 785, 787, 788, 792, 796, 798, 799, 800, 808, 809, 811, 814], "\uc774\ub2e4": [776, 779, 789, 792, 795], "\uc774\ub4e4": [784, 798], "\uc774\ub4e4\uc740": 784, "\uc774\ub4e4\uc744": 781, "\uc774\ub54c": 776, "\uc774\ub77c\uace0": [773, 808, 812], "\uc774\ub77c\ub294": 811, "\uc774\ub77c\uba74": [774, 814], "\uc774\ub7f0": [775, 785, 798, 806, 808, 812], "\uc774\ub904\uc9c4\ub2e4": [776, 789, 813], "\uc774\ub97c": [772, 773, 774, 776, 777, 779, 780, 781, 785, 788, 789, 792, 793, 794, 797, 798, 799, 802, 803, 804, 805, 811, 812, 813], "\uc774\ub984": [786, 792], "\uc774\ub984\uacfc": 779, "\uc774\ub984\ub4e4\uc744": 781, "\uc774\ub984\uc740": [779, 781], "\uc774\ub984\uc744": [779, 781, 786, 792], "\uc774\ub984\uc758": [781, 786, 811], "\uc774\ub984\uc774": 779, "\uc774\ub984\uc774\uace0": 792, "\uc774\ub984\uc774\ub2e4": [781, 792], "\uc774\ubbf8": [774, 787, 810, 814], "\uc774\ubd84": [784, 789, 799, 808, 809], "\uc774\uc0c1": 792, "\uc774\uc288\uac00": 805, "\uc774\uc5b4\uc9c4": 788, "\uc774\uc640": [776, 792], "\uc774\uc678\uc758": [800, 807], "\uc774\uc6a9\ud55c": [811, 814], "\uc774\uc6a9\ud560": [785, 799], "\uc774\uc6a9\ud574\uc11c": [786, 789, 808, 812], "\uc774\uc6c3": [779, 801, 814], "\uc774\uc6c3\ub4e4\ub85c\ubd80\ud130": [804, 814], "\uc774\uc6c3\ub4e4\uc5d0": [801, 814], "\uc774\uc720\ub294": [773, 779, 781, 785, 788, 792, 794, 798, 813], "\uc774\uc804": [798, 799, 811, 812], "\uc774\uc804\uc5d0": 811, "\uc774\uc81c": [793, 802, 804], "\uc774\uc81c\uc758": 786, "\uc774\uc885": [783, 784, 791, 808, 814], "\uc774\uc9c4": [811, 814], "\uc774\ud130\ub808\uc774\uc158\uc5d0": 812, "\uc774\ud558\uc778": 788, "\uc774\ud56d": 792, "\uc774\ud574\ud558\uace0": 797, "\uc775\uc219\ud558\ub2e4\uba74": 803, "\uc778": [781, 797, 809, 812], "\uc778\ub371\uc2a4\ub97c": [779, 808], "\uc778\ubc14\uc6b4\ub4dc": 798, "\uc778\uc2a4\ud134\uc2a4\ub97c": 784, "\uc778\uc2a4\ud134\uc2a4\uc5d0": 814, "\uc778\uc790": 792, "\uc778\uc790\ub294": 798, "\uc778\uc790\ub4e4\uc740": 800, "\uc778\uc790\ub4e4\uc744": 781, "\uc778\uc790\ub4e4\uc774": 787, "\uc778\uc790\ub85c": [781, 788, 792, 795, 799, 802, 804, 809], "\uc778\uc790\ub97c": [782, 800], "\uc778\uc790\uc774\ub2e4": 781, "\uc778\uc9c0": 799, "\uc778\ucea1\uc290\ub808\uc774\uc158\uc774\ub2e4": 809, "\uc778\ucf54\ub529\ud55c": 784, "\uc778\ud130\uc5d1\uc158\uc744": 778, "\uc778\ud130\ud328\uc774\uc2a4\ub97c": 779, "\uc778\ud130\ud398\uc774\uc2a4\ub294": 795, "\uc778\ud130\ud398\uc774\uc2a4\ub97c": [779, 783, 786, 789], "\uc778\ud130\ud398\uc774\uc2a4\uc758": 786, "\uc778\ud2f0\ud2f0\ub4e4\uacfc": 784, "\uc77c": [784, 794], "\uc77c\ub3c4": 811, "\uc77c\ub4e4\uc5d0": 776, "\uc77c\ubc18": [779, 798], "\uc77c\ubc18\uc801": 812, "\uc77c\ubc18\uc801\uc73c\ub85c": [772, 776, 779, 788, 792, 794, 797, 803, 806, 808], "\uc77c\ubc18\uc801\uc778": [785, 789, 807, 808, 811, 812], "\uc77c\ubc88\uc801\uc73c\ub85c": 776, "\uc77c\ubd80": [793, 804], "\uc77c\ubd80\ub294": 776, "\uc77c\ubd80\ub97c": 797, "\uc77c\ubd80\ub9cc": 796, "\uc77c\ubd80\uc5d0": 791, "\uc77c\ubd80\uc5d0\ub9cc": 786, "\uc77c\ubd80\uc774\uae30": 779, "\uc77c\uc5b4\ub098\ub294\uc9c0\ub97c": 801, "\uc77c\uc5b4\ub09c\ub2e4": [776, 779], "\uc77c\uc744": [774, 804, 814], "\uc77c\uc774": 776, "\uc77c\uc774\ud0ac": 808, "\uc77d\uae30": 789, "\uc77d\uae30\uc640": 779, "\uc77d\ub294": 785, "\uc77d\uc744": 798, "\uc784\ubc30\ub529\uc740": 779, "\uc784\ubca0\ub529": 780, "\uc784\ubca0\ub529\uacfc": 779, "\uc784\ubca0\ub529\ub4e4\uc5d0": 779, "\uc784\ubca0\ub529\ub4e4\uc740": 780, "\uc784\ubca0\ub529\ub4e4\uc744": [779, 781], "\uc784\ubca0\ub529\uc744": [778, 779, 780, 781, 813, 814], "\uc784\ubca0\ub529\uc774": 779, "\uc784\uc2dc\ub85c": 777, "\uc784\uc758\ub85c": [798, 810], "\uc784\uc758\uc131\uc744": 801, "\uc784\uc758\uc758": [781, 798, 811, 813], "\uc785\ub825": [773, 779, 799, 802, 803, 804, 807, 808, 809, 812], "\uc785\ub825\uacfc": [792, 798], "\uc785\ub825\uae4c\uc9c0\uc758": 797, "\uc785\ub825\uc5d0": [797, 808], "\uc785\ub825\uc73c\ub85c": [779, 788, 798, 804, 811, 814], "\uc785\ub825\uc740": [799, 812], "\uc785\ub825\ud558\ub294": 802, "\uc785\ub825\ud558\uba74": 811, "\uc785\ub825\ud574\uc11c": [799, 804], "\uc788\uac8c\ud55c\ub2e4": 777, "\uc788\uace0": [773, 779, 781, 792, 798, 803, 805, 806, 809, 812, 813, 814], "\uc788\uae30": [773, 776, 792, 798, 799], "\uc788\ub294": [772, 773, 778, 779, 781, 784, 785, 787, 794, 799, 800, 801, 802, 804, 807, 808, 809, 810, 811, 812, 814], "\uc788\ub294\ub370": [781, 785, 808, 813], "\uc788\ub294\uc9c0": [781, 804], "\uc788\ub2e4": [772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 792, 793, 794, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814], "\uc788\ub2e4\uace0": 810, "\uc788\ub2e4\ub294": [781, 789], "\uc788\ub2e4\uba74": [781, 789, 804, 813], "\uc788\ub3c4\ub85d": [776, 779, 798], "\uc788\ub4ef\uc774": [776, 798], "\uc788\uc5b4\uc11c": 805, "\uc788\uc5b4\uc57c": [774, 776, 781, 808, 809], "\uc788\uc5b4\uc57c\ub9cc": 779, "\uc788\uc73c\ub2c8": 785, "\uc788\uc73c\uba70": [776, 781, 807], "\uc788\uc744": [776, 789, 804], "\uc788\uc74c": 812, "\uc788\uc74c\uc744": [784, 801, 809, 814], "\uc788\uc9c0": 779, "\uc788\uc9c0\ub9cc": [798, 799], "\uc790\ub3d9\uc73c\ub85c": [774, 779, 780, 792, 803, 805], "\uc790\ub3d9\uc744": 774, "\uc790\ub3d9\ud654\ud560": 774, "\uc790\ub8cc": [779, 783, 784], "\uc790\uc138\ud558\uac8c": 808, "\uc790\uc138\ud55c": [776, 785, 792, 796, 811], "\uc790\uc138\ud788": 803, "\uc790\uc2e0\uc758": [804, 814], "\uc790\uc6d0\uc744": 797, "\uc790\uccb4": 784, "\uc791\ub3d9\uc744": 800, "\uc791\ub3d9\ud558\uac8c": 798, "\uc791\ub3d9\ud558\ub3c4\ub85d": 803, "\uc791\ub3d9\ud558\uba74\uc11c": 778, "\uc791\uc131": [791, 808], "\uc791\uc131\ud558\uace0\uc790": 811, "\uc791\uc131\ud558\ub294": [803, 814], "\uc791\uc131\ud558\uba74": 811, "\uc791\uc131\ud55c\ub2e4": 811, "\uc791\uc131\ud560": [811, 814], "\uc791\uc131\ud574\uc57c\ud55c\ub2e4": 779, "\uc791\uc5c5": 782, "\uc791\uc5c5\uc740": 773, "\uc791\uc740": [779, 781, 798, 805, 810, 812], "\uc798": 785, "\uc798\ub77c\uc11c": 803, "\uc7a0\uc7ac\uc801\uc73c\ub85c": 799, "\uc7a0\uc7ac\uc801\uc73c\ub85c\ub294": 781, "\uc7a0\uc7ac\uc801\uc778": 808, "\uc7a1": 782, "\uc7a1\ub294": [781, 798], "\uc7a1\uc744": [778, 782], "\uc7a1\uc774": 782, "\uc7a5\ub294": 791, "\uc7a5\uc5d0\uc11c\ub294": [806, 810], "\uc7a5\uc740": [772, 783, 797, 810], "\uc7a5\uc758": [773, 810], "\uc7a5\uc810\uc740": 781, "\uc7a5\uc810\uc744": 812, "\uc7ac\ubc30\uc5f4\ud558\ub294": 776, "\uc7ac\uc0ac\uc6a9\ub420": 808, "\uc7ac\uc0ac\uc6a9\ud55c\ub2e4": 802, "\uc7ac\uc0ac\uc6a9\ud560": 799, "\uc7ac\uc791\uc131\ud574\uc11c": 798, "\uc7ac\ud560\ub2f9": 781, "\uc7ac\ud560\ub2f9\uc774": 781, "\uc7ac\ud560\ub2f9\ud55c\ub2e4": 781, "\uc7ac\ud65c\uc6a9\ud574\uc11c": 813, "\uc800\uc790\uac00": 784, "\uc800\uc791\uc744": 784, "\uc800\uc7a5": [777, 793], "\uc800\uc7a5\uacf5\uac04\ub3c4": 788, "\uc800\uc7a5\uacfc": [772, 773], "\uc800\uc7a5\ub418\ub294": [782, 788], "\uc800\uc7a5\ub418\uc5b4": [779, 798, 804, 814], "\uc800\uc7a5\ub418\uc5b4\uc57c": 781, "\uc800\uc7a5\ub41c": [781, 804], "\uc800\uc7a5\ub41c\ub2e4": [779, 780, 781, 787, 789, 809], "\uc800\uc7a5\ub420": [781, 782], "\uc800\uc7a5\uc18c\ub97c": 789, "\uc800\uc7a5\uc18c\uc5d0": 804, "\uc800\uc7a5\uc740": 811, "\uc800\uc7a5\uc774": 794, "\uc800\uc7a5\ud558\uace0": [778, 781, 785, 789], "\uc800\uc7a5\ud558\uae30": [773, 777, 785, 786, 809], "\uc800\uc7a5\ud558\ub294": [777, 779, 781, 782, 789, 792], "\uc800\uc7a5\ud558\ub294\ub370": [772, 781, 788, 797], "\uc800\uc7a5\ud55c\ub2e4": [779, 780, 781, 782, 785, 786, 792], "\uc800\uc7a5\ud560": [773, 781, 782, 786, 794], "\uc801\uac8c": 788, "\uc801\ub2e4": 804, "\uc801\uc6a9\ub418\uace0": 814, "\uc801\uc6a9\ub418\uae30": 813, "\uc801\uc6a9\ub418\ub294": 803, "\uc801\uc6a9\ub418\ub294\ub370": 792, "\uc801\uc6a9\ub418\uc5b4": 812, "\uc801\uc6a9\ub41c\ub2e4": [789, 808], "\uc801\uc6a9\ub429\ub2c8\ub2e4": 798, "\uc801\uc6a9\ud558\uace0": [789, 794, 808], "\uc801\uc6a9\ud558\uae30": [791, 797, 809], "\uc801\uc6a9\ud558\uae30\ub3c4": 807, "\uc801\uc6a9\ud558\ub294": [791, 793, 794], "\uc801\uc6a9\ud55c\ub2e4": [794, 811], "\uc801\uc6a9\ud574\ubcf4\uba74": 811, "\uc801\uc740": [779, 798, 800], "\uc801\uc808\ud55c": [780, 805], "\uc801\ud569\ud558\uc9c0": [777, 785], "\uc804\ub2ec": [790, 803, 804, 806, 808, 809, 810, 812, 814], "\uc804\ub2ec\ub418\ub294": 781, "\uc804\ub2ec\ub41c": [791, 792], "\uc804\ub2ec\uc5d0": [791, 794], "\uc804\ub2ec\uc740": [795, 798, 808, 814], "\uc804\ub2ec\uc744": [791, 792, 795, 801, 805, 812, 814], "\uc804\ub2ec\uc774": [792, 814], "\uc804\ub2ec\ud55c\ub2e4": 802, "\uc804\ub2ec\ud560": 798, "\uc804\ub2ec\ud574\uc11c": [787, 812], "\uc804\ub2ec\ud574\uc57c": [779, 798], "\uc804\ub7b5\uc740": 781, "\uc804\ub7b5\uc744": [797, 798], "\uc804\ubc18\uc801\uc73c\ub85c": 792, "\uc804\ubd80\uc774\ub2e4": 804, "\uc804\uc5d0": [779, 781, 805], "\uc804\uc790\ub294": 779, "\uc804\ucc98\ub9ac": 778, "\uc804\ucc98\ub9ac\uac00": 781, "\uc804\ucc98\ub9ac\ub294": 781, "\uc804\uccb4": [776, 781, 797, 798, 799, 800, 801, 803, 804, 808, 811, 812, 814], "\uc804\uccb4\ub97c": [797, 808], "\uc804\uccb4\uc5d0": 804, "\uc804\ud30c\ub418\uc5b4\uc57c": 804, "\uc804\ud615\uc801\uc778": [776, 782, 807, 808], "\uc804\ud658\ud558\ub294": 798, "\uc808\ub300\ub85c": 779, "\uc808\ub4e4\uc5d0\uc11c": 772, "\uc808\ub4e4\uc5d0\uc11c\ub294": 797, "\uc808\ub85c": 810, "\uc808\uc57d\ud560": [777, 797, 805], "\uc808\uc5d0\uc11c": [776, 797, 811], "\uc808\uc5d0\uc11c\ub294": [776, 778, 785, 791, 798, 808], "\uc808\uc740": [775, 779, 801, 814], "\uc808\uc744": 781, "\uc808\uc758": 778, "\uc808\ucc28\ub294": [776, 797], "\uc808\ucc98\ub85c": 789, "\uc810\uac80\uc740": 808, "\uc810\uc218": 802, "\uc810\uc218\uac00": 813, "\uc810\uc218\ub97c": [799, 802, 811, 813], "\uc810\uc218\ubcf4\ub2e4": 813, "\uc810\uc218\uc640": [802, 813], "\uc810\uc740": [779, 804], "\uc810\uc744": [776, 785, 798, 799, 801, 802, 804, 812], "\uc810\uc774\ub2e4": [779, 781, 799, 802], "\uc811\uadfc": [782, 792], "\uc811\uadfc\uc131\uc744": 776, "\uc811\uadfc\uc744": [779, 782], "\uc811\uadfc\ud558\uae30": [778, 779], "\uc811\uadfc\ud558\ub294": 779, "\uc811\uadfc\ud560": [779, 780, 786, 798], "\uc811\uadfc\ud574\uc11c": 804, "\uc815\ub82c\ud55c\ub2e4": 780, "\uc815\ubcf4": [773, 777, 788], "\uc815\ubcf4\ub4e4\uc744": [776, 781, 812], "\uc815\ubcf4\ub97c": [777, 779, 781, 782, 789, 799, 812, 814], "\uc815\ubcf4\uc640": 799, "\uc815\uc0c1\uc801\uc778": 779, "\uc815\uc218": [781, 788], "\uc815\uc218\ub85c": 789, "\uc815\uc218\ub97c": 788, "\uc815\uc758": [778, 783, 786, 792], "\uc815\uc758\ub294": 814, "\uc815\uc758\ub418\uc5b4": 779, "\uc815\uc758\ub418\uc5c8\ub2e4\uba74": 812, "\uc815\uc758\ub41c": [773, 814], "\uc815\uc758\ub41c\ub2e4": [798, 812], "\uc815\uc758\uc5d0": 783, "\uc815\uc758\ud558\uace0": 772, "\uc815\uc758\ud558\ub098": 773, "\uc815\uc758\ud558\ub294": 779, "\uc815\uc758\ud558\ub294\ub370": 814, "\uc815\uc758\ud55c": [802, 811], "\uc815\uc758\ud55c\ub2e4": [791, 798, 803, 812], "\uc815\uc758\ud560": [798, 802], "\uc815\ucc45\uc740": 780, "\uc815\ucc45\uc744": 780, "\uc815\ud574\uc57c": 782, "\uc815\ud574\uc9c4": [808, 814], "\uc815\ud655\ub3c4": 814, "\uc815\ud655\ud558\uac8c": 779, "\uc815\ud655\ud55c": 797, "\uc81c\uac70\ub418\uc5b4": 803, "\uc81c\uac70\ud558\uae30": 801, "\uc81c\uac70\ud558\ub294": 799, "\uc81c\uac70\ud55c\ub2e4": 792, "\uc81c\uac70\ud588\ub2e4": 804, "\uc81c\uacf1": 781, "\uc81c\uacf5\ub418\ub294": [804, 810], "\uc81c\uacf5\ud558\uae30": [772, 778], "\uc81c\uacf5\ud558\ub294": [773, 781, 799, 804], "\uc81c\uacf5\ud558\ub294\ub370": 785, "\uc81c\uacf5\ud558\uc9c0\ub9cc": 798, "\uc81c\uacf5\ud55c\ub2e4": [775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 788, 789, 792, 797, 798, 802, 804, 805, 811, 814], "\uc81c\uacf5\ud55c\ub2e4\uba74": 785, "\uc81c\uacf5\ud560": 776, "\uc81c\uacf5\ud568": [803, 814], "\uc81c\uacf5\ud574\uc57c": 779, "\uc81c\uacf5\ud574\uc57c\ud55c\ub2e4": 802, "\uc81c\uc548\ud558\ub294": 794, "\uc81c\uc57d": 789, "\uc81c\uc57d\uc774\ub098": 801, "\uc81c\uc678\ud558\uace0\ub294": 814, "\uc81c\uc678\ud558\uba74": [799, 802], "\uc81c\ud55c\uc801\uc778": 801, "\uc870\uac74\uc744": [789, 800], "\uc870\uae08\ub9cc": 778, "\uc870\uc815\uac00\ub2a5": 814, "\uc874\uc7ac\ud558\ub294": [779, 813], "\uc874\uc7ac\ud558\ub294\uc9c0": 813, "\uc874\uc7ac\ud558\uc9c0": [799, 802, 812], "\uc874\uc7ac\ud55c\ub2e4": 806, "\uc874\uc7ac\ud55c\ub2e4\ub294": [775, 799], "\uc874\uc7ac\ud55c\ub2e4\uba74": 774, "\uc874\uc7ac\ud574\uc57c\ud558\uba70": 787, "\uc880\ub354": 807, "\uc885\ub8cc\ub418\uba74": 813, "\uc885\ub958": 812, "\uc885\ub958\ub97c": 812, "\uc885\ub958\uc5d0": 814, "\uc885\ub958\uc758": [775, 776, 778, 803, 808, 809, 812], "\uc885\uc885": [811, 812], "\uc88b\ub2e4": 801, "\uc88b\uc740": 781, "\uc8fc\ub85c": [776, 779], "\uc8fc\ubaa9\ud558\uc790": 801, "\uc8fc\uc11d": 803, "\uc8fc\uc18c": 782, "\uc8fc\uc18c\ub4e4\uc744": 782, "\uc8fc\uc18c\uc774\ub2e4": 782, "\uc8fc\uc5b4\uc84c\uc744": 811, "\uc8fc\uc5b4\uc9c0\uba74": 798, "\uc8fc\uc5b4\uc9c4": [781, 798, 811], "\uc8fc\uc694": [776, 779, 806, 812], "\uc8fc\uc758": 810, "\uc8fc\uc758\ud558\uc790": [801, 803, 812], "\uc900\ub2e4": [779, 800], "\uc900\ube44\ud558\uace0": 781, "\uc900\ube44\ud55c\ub2e4": 812, "\uc904\ub9cc": 781, "\uc904\uc5ec\uc900\ub2e4": 781, "\uc904\uc740": 782, "\uc904\uc774\uae30": 801, "\uc904\uc778": 794, "\uc904\uc77c": 773, "\uc911": 777, "\uc911\uac04": [781, 797], "\uc911\uac04\uc5d0": 792, "\uc911\ubcf5\ub41c": 781, "\uc911\uc2ec\uc758": 783, "\uc911\uc5d0": [779, 780, 782, 795, 803, 814], "\uc911\uc694\ud558\ub2e4": [779, 781], "\uc911\uc694\ud55c": [776, 781, 785, 786], "\uc911\uc758": 788, "\uc911\uc774\ub2e4": 800, "\uc989": [776, 779, 781, 786, 792, 794, 798, 799, 802, 804, 808, 811, 812, 813], "\uc9c0\uae08\uc740": 779, "\uc9c0\ub2c8\uace0": 812, "\uc9c0\uc5b4\ubcf8\ub2e4\uba74": 812, "\uc9c0\uc6d0\ub418\ub294": [792, 799, 804], "\uc9c0\uc6d0\uc740": 792, "\uc9c0\uc6d0\uc744": [781, 805], "\uc9c0\uc6d0\ud558\uace0": [788, 793], "\uc9c0\uc6d0\ud558\uae30": [778, 779, 788, 792], "\uc9c0\uc6d0\ud558\ub294": 805, "\uc9c0\uc6d0\ud558\ub294\ub370": 800, "\uc9c0\uc6d0\ud558\uc9c0": [779, 800], "\uc9c0\uc6d0\ud558\uc9c0\ub9cc": 779, "\uc9c0\uc6d0\ud55c\ub2e4": [778, 779, 780, 781, 788, 792, 797, 800, 802, 804, 812], "\uc9c0\uc6d0\ud568": 800, "\uc9c0\uc815\ub418\uace0": 780, "\uc9c0\uc815\ub418\uba74": 802, "\uc9c0\uc815\ub418\uc5b4\uc57c": 782, "\uc9c0\uc815\ub418\uc9c0": 782, "\uc9c0\uc815\ub41c": 782, "\uc9c0\uc815\ub420": 780, "\uc9c0\uc815\ud558\uae30": [776, 789], "\uc9c0\uc815\ud558\ub294": 776, "\uc9c0\uc815\ud558\ub294\ub370": 781, "\uc9c0\uc815\ud558\uc9c0": 792, "\uc9c0\uc815\ud55c": 789, "\uc9c0\uc815\ud55c\ub2e4": [779, 780, 781, 782, 789], "\uc9c0\uc815\ud560": [779, 782, 799], "\uc9c0\uc815\ud574\uc57c": [780, 807], "\uc9c0\uc815\ud574\uc57c\ud558\uae30": 813, "\uc9c0\uce6d\ud558\ub294": 792, "\uc9c0\ucf1c\ubcf4\uc790": [800, 805], "\uc9c1\uad00\uc801\uc73c\ub85c": 794, "\uc9c1\uc811": [774, 779, 780, 781, 785, 792, 794, 802, 803], "\uc9c4\ub2e4": 778, "\uc9c4\uc785": 798, "\uc9c4\ud589": [800, 812], "\uc9c8\ubb38\uc740": 790, "\uc9d1\uacc4": [792, 795], "\uc9d1\uacc4\ub41c\ub2e4": 809, "\uc9d1\uacc4\ud558\ub294": 809, "\uc9d1\uc911\ud574\uc11c": 776, "\uc9d1\ud55c\uc740": 804, "\uc9d1\ud569": [784, 812], "\uc9d1\ud569\ub418\uc5b4\uc57c": 807, "\uc9d1\ud569\ub4e4\uc5d0": 778, "\uc9d1\ud569\uc5d0": 789, "\uc9d1\ud569\uc73c\ub85c": 784, "\uc9d1\ud569\uc744": [788, 798, 799], "\uc9e7\uac8c": 789, "\ucc28\ub840": 814, "\ucc28\uc6d0": [780, 786, 792, 807], "\ucc28\uc6d0\uacfc": 807, "\ucc28\uc6d0\ub4e4": 807, "\ucc28\uc6d0\ub4e4\uc744": 795, "\ucc28\uc6d0\uc73c\ub85c": 807, "\ucc28\uc6d0\uc740": [786, 794, 807], "\ucc28\uc6d0\uc744": [794, 807], "\ucc28\uc6d0\uc758": 800, "\ucc28\uc6d0\uc774": [794, 812], "\ucc28\uc6d0\uc774\ub780": 807, "\ucc28\uc774\uac00": 812, "\ucc28\uc774\ub97c": 805, "\ucc28\uc774\uc810\uc740": [779, 781, 799, 802, 803, 806, 812], "\ucc28\uc774\uc810\uc774": 799, "\ucc28\uc9c0\ud558\uace0": 800, "\ucc28\uc9c0\ud558\uae30\ub3c4": 794, "\ucc28\uc9c0\ud558\uc9c0": 800, "\ucc38\uace0": [773, 792], "\ucc38\uace0\ud558\uace0\uc790": 779, "\ucc38\uace0\ud558\uba74": 776, "\ucc38\uace0\ud558\uc790": [776, 781, 784, 785, 788, 792, 796, 798, 799, 800, 801, 804, 810, 812, 814], "\ucc38\uace0\ud560": [785, 786, 788, 789], "\ucc38\uc870": 779, "\ucc38\uc870\ub9cc": 785, "\ucc38\uc870\ud558\uae30": 785, "\ucc38\uc870\ud558\uc790": 785, "\ucc3e\ub294\ub2e4": 782, "\ucc3e\uc544\ub0b4\uc57c\ud55c\ub2e4": 812, "\ucc3e\uc544\ub0bc": 808, "\ucc3e\uc544\ubcfc": 804, "\ucc44\ud0dd\ud558\uace0": 778, "\ucc45\uc784\uc744": 778, "\ucc98\ub7fc": [774, 779, 799], "\ucc98\ub9ac": [773, 776], "\ucc98\ub9ac\ub418\uc9c0": 776, "\ucc98\ub9ac\ub97c": 803, "\ucc98\ub9ac\ud558\uace0": 772, "\ucc98\ub9ac\ud558\uae30": 773, "\ucc98\ub9ac\ud558\ub294": [776, 777], "\uccab": [780, 801, 803], "\uccab\ubc88\uc9f8": [781, 786, 798, 799, 801, 804, 808], "\uccab\ubc88\uc9f8\ub294": 799, "\uccab\uc9f8\ub85c": 812, "\uccb4\ud06c": 808, "\uccb4\ud06c\uac00": 808, "\uccb4\ud06c\ud3ec\uc778\ud2b8\ub97c": 785, "\ucd08\uae30\ud654\ub41c\ub2e4": 780, "\ucd08\uae30\ud654\ud558\uae30": 778, "\ucd08\uae30\ud654\ud55c\ub2e4": [779, 807], "\ucd1d": [776, 780], "\ucd5c\ub300": 812, "\ucd5c\uc120\uc758": 800, "\ucd5c\uc18c\ub4e4\uc774": 812, "\ucd5c\uc18c\uc758": 781, "\ucd5c\uc18c\ud55c\uc758": 792, "\ucd5c\uc2e0": 781, "\ucd5c\uc801\uc740": 805, "\ucd5c\uc801\uc774\uc9c0": 781, "\ucd5c\uc801\ud654\ub418\uc5b4": 781, "\ucd5c\uc801\ud654\ub41c": 792, "\ucd5c\uc801\ud654\ub420": 794, "\ucd5c\uc801\ud654\ub4e4\uc744": 794, "\ucd5c\uc801\ud654\ub97c": 808, "\ucd5c\uc801\ud654\ud558\uace0": 794, "\ucd5c\uc801\ud654\ud560": 792, "\ucd5c\uc885": [797, 804], "\ucd94\uac00": [800, 808], "\ucd94\uac00\ub41c": 788, "\ucd94\uac00\ub85c": [776, 781, 789, 794], "\ucd94\uac00\uc801\uc73c\ub85c": [774, 781], "\ucd94\uac00\uc801\uc778": 809, "\ucd94\uac00\ud558\ub294": 776, "\ucd94\uac00\ud55c\ub2e4": 776, "\ucd94\uac00\ud560": [776, 779], "\ucd94\ub860": 797, "\ucd94\ub860\uc5d0": 779, "\ucd94\ub860\uc5d0\uc11c": 781, "\ucd94\ub860\uc740": 801, "\ucd94\ub860\uc744": [778, 801], "\ucd94\ub860\uc758": 801, "\ucd94\ub860\uc774": [781, 797], "\ucd94\uc0c1\ud654\ub97c": 783, "\ucd94\ucc9c": 784, "\ucd94\ucc9c\uc5d0\uc11c": 811, "\ucd94\ucc9c\uc744": 813, "\ucd94\ucd9c\ub420": 774, "\ucd94\ucd9c\uc744": 774, "\ucd94\ucd9c\ud558\uace0": 789, "\ucd94\ucd9c\ud558\uba74": 814, "\ucd94\ucd9c\ud558\uc790": 774, "\ucd94\ucd9c\ud55c\ub2e4": 774, "\ucd94\ucd9c\ud560": 809, "\ucd95\uc18c": [791, 792], "\ucd95\uc57d": [792, 795, 809], "\ucd9c\ub825": [781, 792, 798, 799, 801, 803, 804, 807], "\ucd9c\ub825\uacfc": 799, "\ucd9c\ub825\uc2dc\uc791\ud574\uc11c": 797, "\ucd9c\ub825\uc73c\ub85c": 804, "\ucd9c\ub825\uc73c\ub85c\ub294": 798, "\ucd9c\ub825\uc758": 798, "\ucda9\ubd84\ud558\ub2e4": 801, "\ucda9\ubd84\ud558\uc9c0": 781, "\ucda9\uc871\ud558\uba74": 800, "\ucde8\uae09\ud55c\ub2e4": 808, "\ucde8\ud558\uac8c\ud558\uba74": 811, "\uce58\uc6d0\uc744": 807, "\uce5c\uad6c": 784, "\uce5c\ubaa9": 812, "\uce5c\uc219\ud560": 813, "\uce74\ud14c\uace0\ub9ac\ub85c": 814, "\uce74\ud14c\ub85c\uae30\ub4e4\ub85c": 814, "\uce90\ub178\ub2c8\uceec": 789, "\ucee4\ub110\uc758": 805, "\ucee4\ub2e4\ub780": 812, "\ucee4\ubba4\ub2c8\ud2f0\uc5d0": 812, "\ucee4\ubba4\ub2c8\ud2f0\uc758": 812, "\ucee4\uc11c": 794, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ub41c": 809, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c": 804, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\uc774": 814, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [797, 799, 804], "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\ub294": 797, "\ucee4\uc2a4\ud140": [772, 797, 800, 804, 806, 814], "\ucee4\uc9c8": 781, "\ucee8\ud0dd\uc2a4\ud2b8": 788, "\ucef4\ud30c\uc77c\uacfc": 781, "\ucef4\ud30c\uc77c\uc744": 792, "\ucef4\ud30c\uc77c\ud558\uace0": 781, "\ucef4\ud30c\uc77c\ud55c\ub2e4": 781, "\ucef4\ud3ec\ub10c\ub4dc\ub4e4\uc744": 778, "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uacfc": [778, 812], "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uc744": [778, 783], "\ucef4\ud3ec\ub10c\ud2b8\ub97c": [772, 778, 812], "\ucef4\ud3ec\ub10c\ud2b8\ub9cc": 811, "\ucef4\ud4e8\ud130": 778, "\ucef4\ud4e8\ud130\ub294": [778, 779], "\ucef4\ud4e8\ud130\ub4e4\uc5d0": 778, "\ucef4\ud4e8\ud130\ub4e4\uc758": [778, 781], "\ucef4\ud4e8\ud130\ub97c": 781, "\ucef4\ud4e8\ud130\uc5d0": 779, "\ucef4\ud4e8\ud130\uc5d0\uc11c": [778, 781, 805], "\ucef4\ud4e8\ud305": 792, "\ucef7": 781, "\ucf00\uc774\uc2a4\ub294": 779, "\ucf00\uc774\uc2a4\ub4e4\uc744": 808, "\ucf54\ub4dc": [776, 778, 781, 791, 799, 802, 805, 808, 812], "\ucf54\ub4dc\ub294": [774, 775, 776, 778, 779, 780, 781, 785, 786, 788, 789, 798, 799, 802, 803, 804, 806, 808, 811, 812, 813, 814], "\ucf54\ub4dc\ub3c4": 803, "\ucf54\ub4dc\ub4e4\uacfc": 803, "\ucf54\ub4dc\ub97c": [774, 776, 778, 779, 792], "\ucf54\ub4dc\uc5d0\uc11c": [776, 798], "\ucf54\ub4dc\uc640": [779, 806, 811], "\ucf54\ub4dc\uc758": [776, 808], "\ucf54\ub4dc\uc774\ub2e4": 814, "\ucf54\ub4dc\ucc98\ub7fc": 814, "\ucffc\ub9ac\ud558\ub294": 788, "\ud06c\uac8c": 811, "\ud06c\uae30": 777, "\ud06c\uae30\uac00": [797, 812], "\ud06c\uae30\ub77c\uace0": 810, "\ud06c\uae30\ub97c": [780, 789], "\ud06c\uae30\uc758": 779, "\ud06c\uae30\uc774\uace0": 800, "\ud06c\ub85c\uc2a4": 795, "\ud070": [773, 781, 790, 796, 808, 810, 812, 814], "\ud074\ub798\uc2a4": [772, 804], "\ud074\ub798\uc2a4\ub294": [779, 798], "\ud074\ub798\uc2a4\ub4e4\uc744": 804, "\ud074\ub798\uc2a4\ub97c": [773, 774, 778, 804], "\ud074\ub798\uc2a4\uc5d0": [773, 776, 798, 814], "\ud074\ub798\uc2a4\uc5d0\ub294": 773, "\ud074\ub798\uc2a4\uc5d0\uc11c": 772, "\ud074\ub798\uc2a4\uc774\uace0": 800, "\ud074\ub798\uc2a4\uc774\ub2e4": [773, 779], "\ud074\ub798\uc2a4\uc778": [776, 798], "\ud074\ub7ec\uc2a4\ud130": [778, 782], "\ud074\ub7ec\uc2a4\ud130\uc5d0": [779, 782], "\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c": [778, 779, 781, 782], "\ud074\ub7ec\uc2a4\ud130\uc758": [778, 779, 781, 782], "\ud074\ub7ec\uc2a4\ud130\uc774": 778, "\ud074\ub85c\ubc8c": 782, "\ud074\ub860\ud558\uace0": 781, "\ud074\ub860\ud55c\ub2e4": 781, "\ud0a4\uac12\ub294": 795, "\ud0a4\ub85c": [781, 809], "\ud0c0\uc785": [780, 781, 786, 788, 795, 807, 809], "\ud0c0\uc785\uac04\uc758": 799, "\ud0c0\uc785\uacfc": [779, 780, 789, 799, 802, 811, 814], "\ud0c0\uc785\ub4e4\uacfc": [780, 781, 799, 802, 804, 814], "\ud0c0\uc785\ub4e4\uc5d0": [789, 808, 814], "\ud0c0\uc785\ub4e4\uc640": [802, 804], "\ud0c0\uc785\ub4e4\uc740": 795, "\ud0c0\uc785\ub4e4\uc744": [781, 798, 799, 802, 809], "\ud0c0\uc785\ub4e4\uc758": 781, "\ud0c0\uc785\ub4e4\uc774": 781, "\ud0c0\uc785\ub9cc": 811, "\ud0c0\uc785\ub9cc\uc744": 779, "\ud0c0\uc785\ubcc4": [780, 789], "\ud0c0\uc785\ubcc4\ub85c": [781, 798, 814], "\ud0c0\uc785\uc5d0": [780, 781, 789, 792, 795, 807, 808, 809, 811, 812, 813, 814], "\ud0c0\uc785\uc5d0\uc11c": 780, "\ud0c0\uc785\uc5d0\uc11c\uc758": 781, "\ud0c0\uc785\uc73c\ub85c": [784, 809, 811, 813], "\ud0c0\uc785\uc73c\ub85c\ub294": 807, "\ud0c0\uc785\uc740": [780, 788, 807], "\ud0c0\uc785\uc744": [780, 781, 783, 784, 786, 792, 795, 799, 803, 805, 810, 811, 813], "\ud0c0\uc785\uc758": [780, 781, 783, 784, 789, 795, 798, 799, 811], "\ud0c0\uc785\uc774": [780, 781, 788, 789, 808, 809], "\ud0c0\uc785\uc774\ub098": 780, "\ud0c0\uc785\uc774\ub2e4": 781, "\ud0c0\uc785\uc774\ub77c\uace0": 789, "\ud134\uc11c": 786, "\ud14c\uc2a4\ud06c": 776, "\ud14c\uc2a4\ud06c\ub4e4\uc5d0": 811, "\ud14c\uc2a4\ud06c\ub4e4\uc744": 814, "\ud14c\uc2a4\ud06c\ub97c": [775, 810], "\ud14c\uc2a4\ud06c\uc5d0": 781, "\ud14c\uc2a4\ud06c\uc5d0\ub3c4": 779, "\ud14c\uc2a4\ud06c\uc5d0\uc11c": 776, "\ud14c\uc2a4\ud06c\uc758": 779, "\ud14c\uc2a4\ud2b8": [779, 781, 811, 814], "\ud14c\uc2a4\ud2b8\ub97c": 779, "\ud14c\uc2a4\ud2b8\uc758": 776, "\ud14c\uc774\ube14": 785, "\ud14c\uc785\ub4e4\uc758": 781, "\ud150\uc11c": [780, 787, 788, 792, 806], "\ud150\uc11c\uac00": [779, 786], "\ud150\uc11c\ub294": [779, 786, 805], "\ud150\uc11c\ub4e4\uacfc": [780, 809], "\ud150\uc11c\ub4e4\uc5d0": 789, "\ud150\uc11c\ub4e4\uc744": [779, 808], "\ud150\uc11c\ub4e4\uc758": [776, 781, 799, 802, 803, 814], "\ud150\uc11c\ub85c": 785, "\ud150\uc11c\ub97c": [779, 780, 785, 787, 788, 809], "\ud150\uc11c\uc5d0": 805, "\ud150\uc11c\uc5ec\uc57c\ub9cc": 792, "\ud150\uc11c\uc640": 779, "\ud150\uc11c\uc758": [786, 788], "\ud150\uc11c\uc774\uace0": 803, "\ud15c\ud50c\ub9bf\uc740": 773, "\ud1a0\uc774": 781, "\ud1a0\ud53d\ub4e4\uc744": 797, "\ud1b5\uacc4\ub4e4\uc744": 781, "\ud1b5\uc2e0\uc5d0": 782, "\ud1b5\uc2e0\uc744": [778, 781], "\ud1b5\uc2e0\uc774": 779, "\ud1b5\ud569\ub420": 806, "\ud1b5\ud569\ud558\ub294": [791, 809], "\ud1b5\ud574\uc11c": [779, 780, 781, 785, 792, 798, 801, 802, 809, 813], "\ud1b5\ud574\uc11c\ub294": 798, "\ud234\ub4e4": 778, "\ud234\uc740": 779, "\ud29c\ud1a0\ub9ac\uc5bc": 792, "\ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c": 800, "\ud29c\ud50c": 788, "\ud2b8\ub808\uc774\ub108": [778, 779], "\ud2b8\ub808\uc774\ub108\uac00": 779, "\ud2b8\ub808\uc774\ub108\ub294": 781, "\ud2b8\ub808\uc774\ub108\ub4e4\uc740": [778, 779], "\ud2b8\ub808\uc774\ub108\ub4e4\uc758": 782, "\ud2b8\ub808\uc774\ub108\ub4e4\uc774": 779, "\ud2b8\ub808\uc774\ub108\uc5d0": 782, "\ud2b8\ub808\uc774\ub108\uc5d0\uac8c": [778, 779], "\ud2b8\ub9ac\ud50c": 789, "\ud2b8\uc704\ud130\uc758": 784, "\ud2b9\ubcc4\ud558\uac8c": 804, "\ud2b9\ubcc4\ud55c": [784, 789, 808], "\ud2b9\ubcc4\ud788": 785, "\ud2b9\uc131\uc744": 812, "\ud2b9\uc815": [774, 776, 780, 781, 789, 798, 801, 807, 811], "\ud2b9\uc9d5\uacfc": 788, "\ud2b9\uc9d5\uc744": [795, 812], "\ud2b9\ud788": [778, 789, 801], "\ud2f0\uc555\uc5d0": 811, "\ud2f0\uc785\uc5d0": 781, "\ud301\uc744": 797, "\ud30c\ub77c\uba54\ud130": [806, 807], "\ud30c\ub77c\uba54\ud130\ub4e4": 809, "\ud30c\ub77c\uba54\ud130\ub4e4\uacfc": 807, "\ud30c\ub77c\uba54\ud130\ub4e4\ub85c\uc368": 809, "\ud30c\ub77c\uba54\ud130\ub4e4\uc740": 792, "\ud30c\ub77c\uba54\ud130\ub4e4\uc744": [779, 795, 805], "\ud30c\ub77c\uba54\ud130\ub85c": [794, 808], "\ud30c\ub77c\uba54\ud130\ub97c": [776, 792, 798], "\ud30c\ub77c\uba54\ud130\uc774\ub2e4": 813, "\ud30c\ub77c\ubbf8\ud130\ub4e4\uc740": 792, "\ud30c\ub77c\ubbf8\ud130\ub85c": 792, "\ud30c\uc2f1\ud558\uace0": 789, "\ud30c\uc2f1\ud558\ub294": 785, "\ud30c\uc774\uc120": 788, "\ud30c\uc774\ud504\ub77c\uc778": [790, 810, 812, 814], "\ud30c\uc774\ud504\ub77c\uc778\uc5d0": 773, "\ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c": 773, "\ud30c\uc774\ud504\ub77c\uc778\uc740": 812, "\ud30c\uc774\ud504\ub77c\uc778\uc744": [772, 773, 797], "\ud30c\uc774\ud504\ub77c\uc778\uc758": 772, "\ud30c\uc774\ud504\ub77c\uc778\uc774": [772, 773], "\ud30c\uc77c": [774, 781, 782, 811, 814], "\ud30c\uc77c\ub4e4": [781, 782], "\ud30c\uc77c\ub4e4\ub85c": 776, "\ud30c\uc77c\ub4e4\uc5d0": 781, "\ud30c\uc77c\ub4e4\uc740": [774, 781], "\ud30c\uc77c\ub4e4\uc744": [774, 789], "\ud30c\uc77c\ub4e4\uc758": [781, 782], "\ud30c\uc77c\ub4e4\uc774": 781, "\ud30c\uc77c\ub85c": [776, 781], "\ud30c\uc77c\ub85c\uc11c": 781, "\ud30c\uc77c\uc5d0": [774, 781, 789], "\ud30c\uc77c\uc5d0\uc11c": 781, "\ud30c\uc77c\uc740": 781, "\ud30c\uc77c\uc744": [774, 779, 781, 782], "\ud30c\uc77c\uc758": 781, "\ud30c\uc77c\uc774": [774, 781, 782], "\ud30c\uc77c\uc774\ub2e4": 781, "\ud30c\uccd0": 773, "\ud30c\ud0c0\uc154\ub2dd": 781, "\ud30c\ud0c0\uc158\uacfc": 779, "\ud30c\ud0c0\uc158\ub41c": 782, "\ud30c\ud0c0\uc158\uc5d0": 781, "\ud30c\ud130\uc158\ud558\uae30": 779, "\ud30c\ud2b8\ub85c": 795, "\ud30c\ud2f0\uc154\ub2dd": [773, 779], "\ud30c\ud2f0\uc154\ub2dd\uc740": 781, "\ud30c\ud2f0\uc154\ub2dd\uc744": 781, "\ud30c\ud2f0\uc154\ub2dd\uc758": 781, "\ud30c\ud2f0\uc154\ub2dd\ud55c\ub2e4": 781, "\ud30c\ud2f0\uc154\ub2dd\ud560": 781, "\ud30c\ud2f0\uc158": [778, 779, 780, 781, 782], "\ud30c\ud2f0\uc158\uacfc": 781, "\ud30c\ud2f0\uc158\ub418\uc5b4": 779, "\ud30c\ud2f0\uc158\ub41c": [778, 779, 781, 782], "\ud30c\ud2f0\uc158\ub4e4\uc5d0": 781, "\ud30c\ud2f0\uc158\ub4e4\uc744": [781, 782], "\ud30c\ud2f0\uc158\ub4e4\uc758": 781, "\ud30c\ud2f0\uc158\ub4e4\uc774": [781, 782], "\ud30c\ud2f0\uc158\uc5d0": 781, "\ud30c\ud2f0\uc158\uc5d0\uc11c": 779, "\ud30c\ud2f0\uc158\uc73c\ub85c": 781, "\ud30c\ud2f0\uc158\uc740": 781, "\ud30c\ud2f0\uc158\uc744": [779, 780, 781, 782], "\ud30c\ud2f0\uc158\uc758": [779, 781], "\ud30c\ud2f0\uc158\uc774": [781, 782], "\ud30c\ud2f0\uc158\uc774\ub2e4": 779, "\ud30c\ud2f0\uc158\ud558\uae30": 781, "\ud310\ub9e4\uc790": 784, "\ud310\ub9e4\ud568": 784, "\ud314\ub85c\uc6b0": 784, "\ud328\uc2a4": 805, "\ud328\uc2a4\uc6cc\ub4dc": 782, "\ud328\ud0a4\uc9c0": 775, "\ud328\ud0a4\uc9c0\ub4e4\uc744": 789, "\ud328\ud0a4\uc9c0\ub97c": [772, 781], "\ud398\uc774\ud37c\uc5d0\uc11c\ub294": 807, "\ud3b8\ub9ac\ud558\uace0": 773, "\ud3c9\uac00": [801, 811], "\ud3c9\uac00\ud558\ub294": 814, "\ud3c9\uade0": 812, "\ud3c9\uade0\uc744": 812, "\ud3ec\uba67\ub4e4\uc5d0\ub3c4": 789, "\ud3ec\uba67\ub4e4\uc774": 785, "\ud3ec\uba67\uc73c\ub85c": [781, 785, 789], "\ud3ec\uba67\uc744": 788, "\ud3ec\uba67\uc758": 805, "\ud3ec\uba67\uc774": 774, "\ud3ec\uba67\uc778": 774, "\ud3ec\ud2b8": 782, "\ud3ec\ud568": [778, 805], "\ud3ec\ud568\ub418\uc5b4": [781, 814], "\ud3ec\ud568\ub41c": 781, "\ud3ec\ud568\ub41c\ub2e4\ub294": 781, "\ud3ec\ud568\ub420": 798, "\ud3ec\ud568\ud558\uace0": [776, 778, 781, 798, 806], "\ud3ec\ud568\ud558\ub294": 798, "\ud3ec\ud568\ud558\ub294\ub370": 781, "\ud3ec\ud568\ud558\uc9c0": [798, 811], "\ud3ec\ud568\ud558\uc9c0\ub9cc": 798, "\ud3ec\ud568\ud55c": [784, 798, 802], "\ud3ec\ud568\ud55c\ub2e4": [781, 809], "\ud3ec\ud568\ud560": 798, "\ud3ec\ud568\ud574\uc57c": 798, "\ud3f4\ub354\ub294": 781, "\ud45c\uc2dc\ub41c": 798, "\ud45c\uc900": [772, 776], "\ud45c\uc900\uc801\uc778": 773, "\ud45c\ud604\ub418\uace0": 801, "\ud45c\ud604\ub418\uba70": 783, "\ud45c\ud604\ub418\uc5b4\uc57c": 813, "\ud45c\ud604\ub41c\ub2e4": [788, 789, 808, 809], "\ud45c\ud604\uc744": 814, "\ud45c\ud604\ud558\uace0": 784, "\ud45c\ud604\ud558\uae30": [784, 788, 792, 795], "\ud45c\ud604\ud558\ub294": [781, 784, 811], "\ud45c\ud604\ud558\ub294\ub370": 813, "\ud45c\ud604\ud558\uba74": 792, "\ud45c\ud604\ud560": 784, "\ud48d\ubd80\ud55c": 812, "\ud504\ub798\ud504\uc5d0\uc11c": 798, "\ud504\ub808\uc784\uc6cc\ud06c": 806, "\ud504\ub808\uc784\uc6cc\ud06c\uac00": 785, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0": 806, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c": 798, "\ud504\ub808\uc784\uc6cc\ud06c\uc758": [779, 789, 806], "\ud504\ub85c\uadf8\ub798\ubc0d": 783, "\ud504\ub85c\uc138\uc2a4": [779, 812], "\ud504\ub85c\uc138\uc2a4\ub294": [778, 779, 781, 797], "\ud504\ub85c\uc138\uc2a4\ub41c": 777, "\ud504\ub85c\uc138\uc2a4\ub4e4\uacfc\uc758": 779, "\ud504\ub85c\uc138\uc2a4\ub4e4\uc740": [778, 779], "\ud504\ub85c\uc138\uc2a4\ub4e4\uc744": [778, 779], "\ud504\ub85c\uc138\uc2a4\ub97c": [778, 779, 781, 800, 812], "\ud504\ub85c\uc138\uc2a4\ub9cc": 779, "\ud504\ub85c\uc138\uc2a4\uc5d0": 779, "\ud504\ub85c\uc138\uc2a4\uc5d0\uc11c": 779, "\ud504\ub85c\uc138\uc2a4\uc758": [779, 782], "\ud504\ub85c\uc138\uc2f1": [772, 777], "\ud504\ub85c\uc138\uc2f1\ub418\uc5b4": 810, "\ud504\ub85c\uc138\uc2f1\ub41c": 777, "\ud504\ub85c\uc138\uc2f1\uc758": 776, "\ud504\ub85c\uc138\uc2f1\ud558\uace0": 773, "\ud504\ub85c\uc138\uc2f1\ud558\ub294": [772, 775, 776], "\ud504\ub85c\ud1a0\ud0c0\uc785": 788, "\ud504\ub85c\ud2f0\uc5b4\uac00": 798, "\ud504\ub85c\ud37c\ud2f0\ub4e4\uc744": 776, "\ud504\ub85c\ud37c\ud2f0\ub97c": 776, "\ud504\ub860\ud2f0\uc5b4": 798, "\ud504\ub860\ud2f0\uc5b4\uac00": 798, "\ud504\ub860\ud2f0\uc5b4\ub294": 798, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uacfc": 798, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uc744": 798, "\ud504\ub860\ud2f0\uc5b4\ub85c": 798, "\ud504\ub860\ud2f0\uc5b4\ub97c": 798, "\ud504\ub860\ud2f0\uc5b4\uc5d0\uc11c": 798, "\ud504\ub860\ud2f0\uc5b4\uc758": 798, "\ud504\ub860\ud2f0\uc5b4\uc774\uace0": 798, "\ud53c\ucc98": [783, 785, 787, 789, 792, 794, 807, 812, 814], "\ud53c\ucc98\uac00": [786, 789, 804], "\ud53c\ucc98\ub294": 786, "\ud53c\ucc98\ub4e4\uacfc": 783, "\ud53c\ucc98\ub4e4\ub9cc": 786, "\ud53c\ucc98\ub4e4\uc740": 786, "\ud53c\ucc98\ub4e4\uc744": [784, 785, 789, 799, 804], "\ud53c\ucc98\ub77c\uace0": 791, "\ud53c\ucc98\ub85c": [786, 792, 811], "\ud53c\ucc98\ub97c": [778, 786, 791, 792, 798, 803, 804], "\ud53c\ucc98\ub9cc": 804, "\ud53c\ucc98\uc5d0": 794, "\ud53c\ucc98\uc640": [791, 792], "\ud53c\ucc98\uc758": [792, 803], "\ud53c\ucc98\uc774\uace0": [791, 808], "\ud53c\ucc98\uc774\ub2e4": 808, "\ud53c\uccd0": [773, 778, 779, 781, 787, 812, 814], "\ud53c\uccd0\uac00": [789, 803], "\ud53c\uccd0\ub294": [786, 798, 803, 809, 812], "\ud53c\uccd0\ub3c4": [781, 786, 814], "\ud53c\uccd0\ub4e4": [776, 804, 812], "\ud53c\uccd0\ub4e4\uacfc": [781, 812], "\ud53c\uccd0\ub4e4\ub85c\ubd80\ud130": 803, "\ud53c\uccd0\ub4e4\ub9cc": 779, "\ud53c\uccd0\ub4e4\uc5d0": [805, 811, 812], "\ud53c\uccd0\ub4e4\uc740": [792, 804, 810], "\ud53c\uccd0\ub4e4\uc744": [779, 781, 786, 789, 798, 799, 800, 802, 804, 812], "\ud53c\uccd0\ub4e4\uc758": 811, "\ud53c\uccd0\ub4e4\uc774": [799, 800, 804, 810], "\ud53c\uccd0\ub85c": 793, "\ud53c\uccd0\ub97c": [786, 789, 792, 793, 794, 797, 800, 803, 808, 812, 814], "\ud53c\uccd0\uc5d0": [794, 798, 805], "\ud53c\uccd0\uc640": [793, 794, 808], "\ud53c\uccd0\uc758": [794, 803, 814], "\ud53c\uccd0\uc774\ub2e4": 812, "\ud53c\ud558\ub294": 794, "\ud53c\ud560": 785, "\ud544\ub4dc": 792, "\ud544\ub4dc\ub294": 781, "\ud544\ub4dc\ub4e4\ub85c": 781, "\ud544\ub4dc\ub4e4\uc740": 781, "\ud544\ub4dc\ub4e4\uc744": 781, "\ud544\ub4dc\ub4e4\uc774\ub2e4": 781, "\ud544\ub4dc\ub97c": 781, "\ud544\ub4dc\uc5d0": [776, 781, 792], "\ud544\ub4dc\uc778": 781, "\ud544\uc694": 808, "\ud544\uc694\uac00": [781, 789, 794, 797, 798, 801], "\ud544\uc694\ub294": 779, "\ud544\uc694\ub85c": [779, 781], "\ud544\uc694\ub85c\ud558\uae30": 801, "\ud544\uc694\ud558\uace0": [797, 798], "\ud544\uc694\ud558\ub2e4": [779, 781, 798, 799, 803, 804, 811, 814], "\ud544\uc694\ud558\uc9c0": 789, "\ud544\uc694\ud55c": [773, 783, 797, 804, 806], "\ud544\uc694\ud55c\ub370": 801, "\ud544\uc694\ud55c\uc9c0": 804, "\ud558\uac70\ub098": 797, "\ud558\uac8c\ub41c\ub2e4": 811, "\ud558\uace0": [788, 796, 798, 799, 811], "\ud558\uae30": [776, 778, 789, 796, 798, 804, 812], "\ud558\ub098\uac00": [795, 814], "\ud558\ub098\ub294": [779, 788, 792, 794], "\ud558\ub098\ub85c": 779, "\ud558\ub098\ub85c\uc11c": 779, "\ud558\ub098\ub97c": [803, 814], "\ud558\ub098\uc529": 804, "\ud558\ub098\uc5d0\uc11c": 782, "\ud558\ub098\uc758": [776, 779, 781, 782, 789, 797, 801, 803, 808, 811, 812, 813], "\ud558\ub294": [773, 778, 779, 781, 792, 799, 800, 804, 805, 813], "\ud558\ub294\ub370": 798, "\ud558\ub294\uc9c0": 781, "\ud558\ub294\uc9c0\ub97c": [804, 807], "\ud558\uba70": 788, "\ud558\uba74": [798, 811], "\ud558\uba74\ub418\uae30": 802, "\ud558\uba74\ub41c\ub2e4": 798, "\ud558\uba74\uc11c": [778, 804], "\ud558\uc774\ub808\ubca8": 792, "\ud558\uc774\ud37c": 813, "\ud558\uc790": [773, 791], "\ud558\uc9c0\ub9cc": [776, 780, 781, 784, 788, 798, 801, 808], "\ud559\uc2b5": [779, 781, 790, 796, 798, 801, 808, 810], "\ud559\uc2b5\uacfc": [778, 797], "\ud559\uc2b5\ub420": 802, "\ud559\uc2b5\uc2dc": 781, "\ud559\uc2b5\uc2dc\ud0a4\ub294": [808, 813], "\ud559\uc2b5\uc5d0": [776, 778, 782, 801, 805], "\ud559\uc2b5\uc5d0\ub3c4": 804, "\ud559\uc2b5\uc5d0\uc11c": [796, 804], "\ud559\uc2b5\uc5d0\uc11c\ub294": [779, 780], "\ud559\uc2b5\uc740": [778, 805, 814], "\ud559\uc2b5\uc744": [778, 779, 780, 782, 797, 804, 805, 812], "\ud559\uc2b5\uc758": [808, 812], "\ud559\uc2b5\uc774": [776, 781, 782, 804, 813], "\ud559\uc2b5\uc774\ub2e4": 813, "\ud559\uc2b5\ud558\uae30": [778, 779, 790, 797, 812], "\ud559\uc2b5\ud558\ub294": [778, 797, 799, 804, 810], "\ud559\uc2b5\ud558\ub294\ub370": [797, 801], "\ud559\uc2b5\ud560": [799, 805, 807, 812], "\ud55c": [775, 778, 779, 780, 781, 782, 786, 789, 803, 809, 813, 814], "\ud55c\uac00\uc9c0": 792, "\ud55c\uac1c\uac00": 812, "\ud55c\uac1c\ub97c": 805, "\ud55c\uac1c\uc529": 812, "\ud55c\uac1c\uc5d0": 798, "\ud55c\uac1c\uc758": [775, 778, 781, 786, 789, 792, 812], "\ud55c\uae00": 790, "\ud55c\ub2e4": [774, 776, 778, 779, 780, 781, 782, 786, 788, 789, 792, 794, 795, 798, 799, 802, 803, 804, 805, 807, 808, 809, 811, 813], "\ud55c\ub2e4\uba74": [799, 811], "\ud55c\ubc88\uc5d0": 801, "\ud55c\ubc88\uc758": 812, "\ud560": [779, 781, 782, 785, 797, 798, 799, 804, 813], "\ud560\ub2f9\ub418\uc5b4": [781, 814], "\ud560\ub2f9\ub418\uc5c8\ub2e4\uba74": 781, "\ud560\ub2f9\ub41c": 781, "\ud560\ub2f9\ub41c\ub2e4": 781, "\ud560\ub2f9\uc73c\ub85c": 786, "\ud560\ub2f9\uc744": 780, "\ud560\ub2f9\ud558\ub294": 786, "\ud560\ub2f9\ud558\uc9c0": 781, "\ud560\ub2f9\ud55c": 781, "\ud560\ub2f9\ud560": 779, "\ud560\ub2f9\ud574\uc57c": 779, "\ud560\uc9c0\ub97c": 780, "\ud568\uaed8": [778, 779, 781, 785, 787, 794, 799, 814], "\ud568\uc218": [776, 788, 789, 791, 794, 805, 806, 814], "\ud568\uc218\uac00": [779, 792, 813], "\ud568\uc218\ub294": [779, 792, 798, 802, 807, 808, 809, 811, 812], "\ud568\uc218\ub4e4": [773, 800], "\ud568\uc218\ub4e4\uacfc": 792, "\ud568\uc218\ub4e4\ub85c": 808, "\ud568\uc218\ub4e4\uc5d0": 792, "\ud568\uc218\ub4e4\uc740": [785, 792, 800, 812], "\ud568\uc218\ub4e4\uc744": [779, 792], "\ud568\uc218\ub4e4\uc774": 798, "\ud568\uc218\ub85c": [774, 792, 811, 812, 813], "\ud568\uc218\ub85c\ub294": 792, "\ud568\uc218\ub97c": [773, 774, 777, 788, 792, 794, 798, 802, 803, 807, 808, 809, 811], "\ud568\uc218\uc548\uc5d0": 812, "\ud568\uc218\uc5d0": 776, "\ud568\uc218\uc5d0\uc11c": [776, 793, 806, 812], "\ud568\uc218\uc5d0\uc11c\uc758": 806, "\ud568\uc218\uc640": 794, "\ud568\uc218\uc758": [776, 792, 798, 807, 808], "\ud568\uc218\uc774\uace0": 798, "\ud568\uc218\uc774\ub2e4": [792, 798, 802, 807, 808, 809], "\ud569": 812, "\ud569\uc0b0\ud558\ub294": 812, "\ud569\uc740": 794, "\ud569\uccd0\uc11c": [791, 812], "\ud569\uccd0\uc57c\ud55c\ub2e4": [798, 804], "\ud569\uccd0\uc9c0\ub294\uc9c0\uc5d0": 801, "\ud569\ucce4\ub294\ub370": 792, "\ud569\uce58\uace0": 812, "\ud569\uce58\ub294": 795, "\ud569\uce58\ub294\ub370": 798, "\ud569\uce5c": 811, "\ud569\uce5c\ub2e4": 789, "\ud569\ud558\ub294": [792, 814], "\ud569\ud574\uc11c": 800, "\ud56d\uc0c1": [781, 785, 792, 798, 808], "\ud574\uacb0\ud558\uae30": 805, "\ud574\ub2f9": [782, 811, 814], "\ud574\ub2f9\ud558\ub294": [788, 804], "\ud574\ub2f9\ud55c\ub2e4": 789, "\ud574\uc11c": [779, 798], "\ud574\uc57c\ud55c\ub2e4": [803, 812], "\ud574\uc5d0": 784, "\ud574\uc8fc\uae30": 792, "\ud574\uc8fc\ub294": [774, 802], "\ud574\uc900\ub2e4": [778, 779, 804], "\ud575\uc2ec": 783, "\ud588\ub2e4\uba74": 784, "\ud588\uc73c\ub2c8": 803, "\ud589": [779, 781, 786], "\ud589\ub4e4": 803, "\ud589\ub82c\uacfc": 785, "\ud589\ub82c\uc744": 785, "\ud589\ub82c\uc758": 794, "\ud589\uc73c\ub85c": 803, "\ud589\uc740": 781, "\ud589\uc758": [779, 803], "\ud5a5\uc0c1\uc2dc\ucf1c\uc11c": 776, "\ud5a5\uc0c1\uc744": 800, "\ud5a5\uc0c1\ud558\uace0": 805, "\ud5a5\ud6c4": 781, "\ud5c8\uc6a9\ub41c\ub2e4": 786, "\ud5c8\uc6a9\ud55c\ub2e4": 805, "\ud5e4\ud14c\ub85c\uadf8\ub798\ud504\ub294": 795, "\ud604\uc0c1\uc744": 785, "\ud604\uc7ac": [778, 779], "\ud604\uc7ac\ub294": [779, 800], "\ud611\uccd0\uc9c4": 812, "\ud615\uc2dd\uc73c\ub85c": 781, "\ud615\ud0dc\ub85c": [778, 781, 784, 785, 792], "\ud615\ud0dc\uc758": [785, 789], "\ud615\ud0dc\uc774\uace0": 781, "\ud638\ucd9c\ub418\uace0": 809, "\ud638\ucd9c\ub418\uc5b4\uc57c": 779, "\ud638\ucd9c\ub41c\ub2e4": 779, "\ud638\ucd9c\ub420": 807, "\ud638\ucd9c\ub85c": [792, 807], "\ud638\ucd9c\uc2dc": 794, "\ud638\ucd9c\uc774": 792, "\ud638\ucd9c\ud558\uae30": 779, "\ud638\ucd9c\ud558\ub294": [792, 796], "\ud638\ucd9c\ud558\uc9c0": 792, "\ud638\ucd9c\ud55c": 779, "\ud638\ucd9c\ud55c\ub2e4": 812, "\ud638\ucd9c\ud560": [789, 792, 799, 802], "\ud638\ucd9c\ud574\uc57c": 794, "\ud638\ud658\ub418\ub294": [797, 810, 812], "\ud638\ud658\ub41c\ub2e4": 805, "\ud655\ub960": 802, "\ud655\ub960\ub4e4": 814, "\ud655\ub960\uc5d0": 798, "\ud655\uc778\ub418\uba74": 808, "\ud655\uc778\ud558\ub294": [774, 808], "\ud655\uc778\ud558\uc790": [776, 802], "\ud655\uc778\ud55c\ub2e4": 799, "\ud655\uc778\ud560": [776, 814], "\ud655\uc7a5\ud558\ub294": [808, 813], "\ud655\uc7a5\ud574\uc11c": 781, "\ud658\uacbd": 781, "\ud658\uc601\ud55c\ub2e4": 806, "\ud65c\uc131\ud654": [805, 808], "\ud65c\uc131\ud654\uc2dc\ud0ac": 792, "\ud65c\uc131\ud654\ud558\uba74": 805, "\ud65c\uc131\ud654\ud574\uc11c": 781, "\ud65c\uc6a9\ud558\uae30": [805, 808], "\ud65c\uc6a9\ud558\ub294": 794, "\ud65c\uc6a9\ud55c": 814, "\ud65c\uc6a9\ud55c\ub2e4": 814, "\ud65c\uc6a9\ud560": 814, "\ud65c\uc6a9\ud574\uc11c": 781, "\ud68c": 814, "\ud68c\uc18c": 785, "\ud6a8\uacfc\uc801\uc73c\ub85c": 812, "\ud6a8\uc728\uc801\uc73c\ub85c": [788, 791], "\ud6a8\uc728\uc801\uc774\uace0": 805, "\ud6a8\uc728\uc801\uc774\ub2e4": 777, "\ud6a8\uc728\uc801\uc778": [791, 803, 808], "\ud6a8\uc728\uc801\uc778\ub370": 794, "\ud6c4": [781, 794, 796, 797, 804, 812], "\ud6c4\uc5d0": [776, 798], "\ud6c4\uc5d0\ub294": 808, "\ud6c4\uc758": [776, 781], "\ud6c4\uc790\uac00": 794, "\ud6c4\uc790\ub294": 779, "\ud6e8\uc52c": [794, 797], "\ud754\ud558\uac8c": 793, "\ud754\ud55c": 792, "\ud754\ud788": [784, 796, 807, 811, 812], "\ud76c\uc18c\ud589\ub82c\uacfc": 785, "\ud788\ub4e0": 814, "\ud835\udc3e": 822}, "titles": ["dgl", "dgl.DGLGraph", "dgl.data", "dgl.dataloading", "dgl.distributed", "dgl.function", "dgl.geometry", "\ud83c\udd95 dgl.graphbolt", "dgl.multiprocessing", "dgl.ops", "dgl.optim", "dgl.sampling", "dgl.sparse", "API Reference", "Benchmark the performance of KNN algorithms", "dgl.nn (MXNet)", "dgl.nn (PyTorch)", "dgl.nn (TensorFlow)", "dgl.nn.functional", "dgl.transforms", "User-defined Functions", "Contribute to DGL", "DGL Foreign Function Interface (FFI)", "Environment Variables", "Frequently Asked Questions (FAQ)", "&lt;no title&gt;", "dgl.DGLGraph.__getitem__", "dgl.DGLGraph.add_edges", "dgl.DGLGraph.add_nodes", "dgl.DGLGraph.add_self_loop", "dgl.DGLGraph.adj", "dgl.DGLGraph.adj_external", "dgl.DGLGraph.adj_tensors", "dgl.DGLGraph.adjacency_matrix", "dgl.DGLGraph.apply_edges", "dgl.DGLGraph.apply_nodes", "dgl.DGLGraph.batch_num_edges", "dgl.DGLGraph.batch_num_nodes", "dgl.DGLGraph.batch_size", "dgl.DGLGraph.canonical_etypes", "dgl.DGLGraph.cpu", "dgl.DGLGraph.create_formats_", "dgl.DGLGraph.device", "dgl.DGLGraph.dstdata", "dgl.DGLGraph.dstnodes", "dgl.DGLGraph.dsttypes", "dgl.DGLGraph.edata", "dgl.DGLGraph.edge_attr_schemes", "dgl.DGLGraph.edge_ids", "dgl.DGLGraph.edge_subgraph", "dgl.DGLGraph.edge_type_subgraph", "dgl.DGLGraph.edges", "dgl.DGLGraph.etypes", "dgl.DGLGraph.filter_edges", "dgl.DGLGraph.filter_nodes", "dgl.DGLGraph.find_edges", "dgl.DGLGraph.formats", "dgl.DGLGraph.has_edges_between", "dgl.DGLGraph.has_nodes", "dgl.DGLGraph.idtype", "dgl.DGLGraph.in_degrees", "dgl.DGLGraph.in_edges", "dgl.DGLGraph.inc", "dgl.DGLGraph.incidence_matrix", "dgl.DGLGraph.int", "dgl.DGLGraph.is_homogeneous", "dgl.DGLGraph.is_multigraph", "dgl.DGLGraph.is_pinned", "dgl.DGLGraph.is_unibipartite", "dgl.DGLGraph.line_graph", "dgl.DGLGraph.local_scope", "dgl.DGLGraph.long", "dgl.DGLGraph.metagraph", "dgl.DGLGraph.multi_update_all", "dgl.DGLGraph.ndata", "dgl.DGLGraph.node_attr_schemes", "dgl.DGLGraph.node_type_subgraph", "dgl.DGLGraph.nodes", "dgl.DGLGraph.ntypes", "dgl.DGLGraph.num_dst_nodes", "dgl.DGLGraph.num_edges", "dgl.DGLGraph.num_nodes", "dgl.DGLGraph.num_src_nodes", "dgl.DGLGraph.number_of_dst_nodes", "dgl.DGLGraph.number_of_edges", "dgl.DGLGraph.number_of_nodes", "dgl.DGLGraph.number_of_src_nodes", "dgl.DGLGraph.out_degrees", "dgl.DGLGraph.out_edges", "dgl.DGLGraph.pin_memory_", "dgl.DGLGraph.predecessors", "dgl.DGLGraph.prop_edges", "dgl.DGLGraph.prop_nodes", "dgl.DGLGraph.pull", "dgl.DGLGraph.push", "dgl.DGLGraph.remove_edges", "dgl.DGLGraph.remove_nodes", "dgl.DGLGraph.remove_self_loop", "dgl.DGLGraph.reorder_graph", "dgl.DGLGraph.reverse", "dgl.DGLGraph.send_and_recv", "dgl.DGLGraph.set_batch_num_edges", "dgl.DGLGraph.set_batch_num_nodes", "dgl.DGLGraph.srcdata", "dgl.DGLGraph.srcnodes", "dgl.DGLGraph.srctypes", "dgl.DGLGraph.subgraph", "dgl.DGLGraph.successors", "dgl.DGLGraph.to", "dgl.DGLGraph.to_canonical_etype", "dgl.DGLGraph.to_cugraph", "dgl.DGLGraph.to_simple", "dgl.DGLGraph.unpin_memory_", "dgl.DGLGraph.update_all", "dgl.add_edges", "dgl.add_nodes", "dgl.add_reverse_edges", "dgl.add_self_loop", "dgl.adj_product_graph", "dgl.adj_sum_graph", "dgl.adjusted_homophily", "dgl.apply_each", "dgl.batch", "dgl.bfs_edges_generator", "dgl.bfs_nodes_generator", "dgl.bipartite_from_networkx", "dgl.bipartite_from_scipy", "dgl.block_to_graph", "dgl.broadcast_edges", "dgl.broadcast_nodes", "dgl.compact_graphs", "dgl.create_block", "AIFBDataset", "AMDataset", "ActorDataset", "AmazonCoBuyComputerDataset", "AmazonCoBuyPhotoDataset", "AmazonRatingsDataset", "AsGraphPredDataset", "AsLinkPredDataset", "AsNodePredDataset", "BA2MotifDataset", "BACommunityDataset", "BAShapeDataset", "BGSDataset", "BitcoinOTCDataset", "CIFAR10SuperPixelDataset", "CLUSTERDataset", "CSVDataset", "ChameleonDataset", "CiteseerGraphDataset", "CoauthorCSDataset", "CoauthorPhysicsDataset", "CoraFullDataset", "CoraGraphDataset", "CornellDataset", "DGLDataset", "FB15k237Dataset", "FB15kDataset", "FakeNewsDataset", "FlickrDataset", "FraudAmazonDataset", "FraudDataset", "FraudYelpDataset", "GDELTDataset", "GINDataset", "ICEWS18Dataset", "KarateClubDataset", "LegacyTUDataset", "MNISTSuperPixelDataset", "MUTAGDataset", "MinesweeperDataset", "MiniGCDataset", "MovieLensDataset", "PATTERNDataset", "PPIDataset", "PubmedGraphDataset", "QM7bDataset", "QM9Dataset", "QM9EdgeDataset", "QuestionsDataset", "RedditDataset", "RomanEmpireDataset", "SBMMixtureDataset", "SSTDataset", "SquirrelDataset", "TUDataset", "TexasDataset", "TolokersDataset", "TreeCycleDataset", "TreeGridDataset", "WN18Dataset", "WikiCSDataset", "WisconsinDataset", "YelpDataset", "ZINCDataset", "Subset", "add_node_property_split", "add_nodepred_split", "check_sha1", "download", "extract_archive", "get_download_dir", "load_info", "load_labels", "mask_nodes_by_property", "save_info", "split_dataset", "dgl.dataloading.BlockSampler", "ClusterGCNSampler", "DataLoader", "DistEdgeDataLoader", "DistNodeDataLoader", "GraphDataLoader", "LaborSampler", "MultiLayerFullNeighborSampler", "NeighborSampler", "SAINTSampler", "Sampler", "ShaDowKHopSampler", "dgl.dataloading.as_edge_prediction_sampler", "LazyFeature", "set_dst_lazy_features", "set_edge_lazy_features", "set_node_lazy_features", "set_src_lazy_features", "GlobalUniform", "PerSourceUniform", "Uniform", "dgl.dfs_edges_generator", "dgl.dfs_labeled_edges_generator", "dgl.distributed.edge_split", "dgl.distributed.find_edges", "dgl.distributed.in_subgraph", "dgl.distributed.initialize", "dgl.distributed.load_partition", "dgl.distributed.load_partition_book", "dgl.distributed.load_partition_feats", "dgl.distributed.node_split", "dgl.distributed.partition_graph", "dgl.distributed.sample_etype_neighbors", "dgl.distributed.sample_neighbors", "dgl.double_radius_node_labeling", "dgl.edge_homophily", "dgl.edge_label_informativeness", "dgl.edge_subgraph", "dgl.edge_type_subgraph", "dgl.from_cugraph", "dgl.from_networkx", "dgl.from_scipy", "dgl.function.copy_e", "dgl.function.copy_u", "dgl.function.e_add_u", "dgl.function.e_add_v", "dgl.function.e_div_u", "dgl.function.e_div_v", "dgl.function.e_dot_u", "dgl.function.e_dot_v", "dgl.function.e_mul_u", "dgl.function.e_mul_v", "dgl.function.e_sub_u", "dgl.function.e_sub_v", "dgl.function.max", "dgl.function.mean", "dgl.function.min", "dgl.function.sum", "dgl.function.u_add_e", "dgl.function.u_add_v", "dgl.function.u_div_e", "dgl.function.u_div_v", "dgl.function.u_dot_e", "dgl.function.u_dot_v", "dgl.function.u_mul_e", "dgl.function.u_mul_v", "dgl.function.u_sub_e", "dgl.function.u_sub_v", "dgl.function.v_add_e", "dgl.function.v_add_u", "dgl.function.v_div_e", "dgl.function.v_div_u", "dgl.function.v_dot_e", "dgl.function.v_dot_u", "dgl.function.v_mul_e", "dgl.function.v_mul_u", "dgl.function.v_sub_e", "dgl.function.v_sub_u", "dgl.graph", "BasicFeatureStore", "BuiltinDataset", "CopyTo", "DataLoader", "Dataset", "DistributedItemSampler", "Feature", "FeatureFetcher", "FeatureStore", "FusedCSCSamplingGraph", "GPUCachedFeature", "InSubgraphSampler", "ItemSampler", "ItemSet", "ItemSetDict", "LayerNeighborSampler", "LegacyDataset", "MiniBatch", "MiniBatchTransformer", "NegativeSampler", "NeighborSampler", "OnDiskDataset", "SampledSubgraph", "SampledSubgraphImpl", "SamplingGraph", "SubgraphSampler", "Task", "TorchBasedFeature", "TorchBasedFeatureStore", "UniformNegativeSampler", "dgl.graphbolt.add_reverse_edges", "dgl.graphbolt.compact_csc_format", "dgl.graphbolt.etype_str_to_tuple", "dgl.graphbolt.etype_tuple_to_str", "dgl.graphbolt.exclude_seed_edges", "dgl.graphbolt.from_dglgraph", "dgl.graphbolt.fused_csc_sampling_graph", "dgl.graphbolt.isin", "dgl.graphbolt.load_from_shared_memory", "dgl.graphbolt.seed", "dgl.graphbolt.unique_and_compact", "dgl.graphbolt.unique_and_compact_csc_formats", "dgl.heterograph", "dgl.in_subgraph", "dgl.is_libxsmm_enabled", "dgl.khop_adj", "dgl.khop_graph", "dgl.khop_in_subgraph", "dgl.khop_out_subgraph", "dgl.knn_graph", "dgl.lap_pe", "dgl.laplacian_lambda_max", "dgl.line_graph", "dgl.linkx_homophily", "dgl.load_graphs", "dgl.max_edges", "dgl.max_nodes", "dgl.mean_edges", "dgl.mean_nodes", "dgl.merge", "dgl.metapath_reachable_graph", "dgl.metis_partition", "dgl.metis_partition_assignment", "dgl.multiprocessing.pytorch.call_once_and_share", "dgl.multiprocessing.pytorch.shared_tensor", "dgl.nn.functional.edge_softmax", "HeteroGraphConv", "AGNNConv", "APPNPConv", "ChebConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "EdgeConv", "GATConv", "GINConv", "GMMConv", "GatedGraphConv", "GraphConv", "NNConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SortPooling", "SumPooling", "Sequential", "DeepWalk", "HeteroEmbedding", "HeteroGraphConv", "HeteroLinear", "MetaPath2Vec", "TypedLinear", "AGNNConv", "APPNPConv", "AtomicConv", "CFConv", "ChebConv", "CuGraphGATConv", "CuGraphRelGraphConv", "CuGraphSAGEConv", "DGNConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "DotGatConv", "EGATConv", "EGNNConv", "EdgeConv", "EdgeGATConv", "EdgeWeightNorm", "GATConv", "GATv2Conv", "GCN2Conv", "GINConv", "GINEConv", "GMMConv", "GatedGCNConv", "GatedGraphConv", "GraphConv", "GroupRevRes", "HGTConv", "NNConv", "PNAConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "TWIRLSConv", "TWIRLSUnfoldingAndAttention", "GNNExplainer", "HeteroGNNExplainer", "HeteroPGExplainer", "HeteroSubgraphX", "PGExplainer", "SubgraphX", "KNNGraph", "RadiusGraph", "SegmentedKNNGraph", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SetTransformerDecoder", "SetTransformerEncoder", "SortPooling", "SumPooling", "WeightAndSum", "BiasedMultiheadAttention", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "BiasedMHA", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "LapPosEncoder", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "EdgePredictor", "TransE", "TransR", "NodeEmbedding", "JumpingKnowledge", "LabelPropagation", "Sequential", "WeightBasis", "APPNPConv", "ChebConv", "GATConv", "GINConv", "GraphConv", "RelGraphConv", "SAGEConv", "SGConv", "AvgPooling", "GlobalAttentionPooling", "HeteroGraphConv", "MaxPooling", "SortPooling", "SumPooling", "dgl.node_homophily", "dgl.node_label_informativeness", "dgl.node_subgraph", "dgl.node_type_subgraph", "dgl.norm_by_dst", "dgl.ops.copy_e_max", "dgl.ops.copy_e_mean", "dgl.ops.copy_e_min", "dgl.ops.copy_e_sum", "dgl.ops.copy_u", "dgl.ops.copy_u_max", "dgl.ops.copy_u_mean", "dgl.ops.copy_u_min", "dgl.ops.copy_u_sum", "dgl.ops.copy_v", "dgl.ops.e_add_u", "dgl.ops.e_add_v", "dgl.ops.e_div_u", "dgl.ops.e_div_v", "dgl.ops.e_dot_u", "dgl.ops.e_dot_v", "dgl.ops.e_mul_u", "dgl.ops.e_mul_v", "dgl.ops.e_sub_u", "dgl.ops.e_sub_v", "dgl.ops.gather_mm", "dgl.ops.gsddmm", "dgl.ops.gspmm", "dgl.ops.segment_mm", "dgl.ops.segment_reduce", "dgl.ops.u_add_e", "dgl.ops.u_add_e_max", "dgl.ops.u_add_e_mean", "dgl.ops.u_add_e_min", "dgl.ops.u_add_e_sum", "dgl.ops.u_add_v", "dgl.ops.u_div_e", "dgl.ops.u_div_e_max", "dgl.ops.u_div_e_mean", "dgl.ops.u_div_e_min", "dgl.ops.u_div_e_sum", "dgl.ops.u_div_v", "dgl.ops.u_dot_e", "dgl.ops.u_dot_v", "dgl.ops.u_mul_e", "dgl.ops.u_mul_e_max", "dgl.ops.u_mul_e_mean", "dgl.ops.u_mul_e_min", "dgl.ops.u_mul_e_sum", "dgl.ops.u_mul_v", "dgl.ops.u_sub_e", "dgl.ops.u_sub_e_max", "dgl.ops.u_sub_e_mean", "dgl.ops.u_sub_e_min", "dgl.ops.u_sub_e_sum", "dgl.ops.u_sub_v", "dgl.ops.v_add_e", "dgl.ops.v_add_u", "dgl.ops.v_div_e", "dgl.ops.v_div_u", "dgl.ops.v_dot_e", "dgl.ops.v_dot_u", "dgl.ops.v_mul_e", "dgl.ops.v_mul_u", "dgl.ops.v_sub_e", "dgl.ops.v_sub_u", "dgl.out_subgraph", "dgl.partition_graph_with_halo", "dgl.prop_edges", "dgl.prop_edges_dfs", "dgl.prop_nodes", "dgl.prop_nodes_bfs", "dgl.prop_nodes_topo", "dgl.radius_graph", "dgl.rand_bipartite", "dgl.rand_graph", "dgl.random_walk_pe", "dgl.readout_edges", "dgl.readout_nodes", "dgl.remove_edges", "dgl.remove_nodes", "dgl.remove_self_loop", "dgl.reorder_graph", "dgl.reverse", "dgl.sampling.PinSAGESampler", "dgl.sampling.global_uniform_negative_sampling", "dgl.sampling.node2vec_random_walk", "dgl.sampling.pack_traces", "dgl.sampling.random_walk", "dgl.sampling.sample_labors", "dgl.sampling.sample_neighbors", "dgl.sampling.sample_neighbors_biased", "dgl.sampling.select_topk", "dgl.save_graphs", "dgl.seed", "dgl.segmented_knn_graph", "dgl.shortest_dist", "dgl.slice_batch", "dgl.softmax_edges", "dgl.softmax_nodes", "dgl.sort_csc_by_tag", "dgl.sort_csr_by_tag", "dgl.sparse.SparseMatrix.T", "dgl.sparse.SparseMatrix.coalesce", "dgl.sparse.SparseMatrix.col", "dgl.sparse.SparseMatrix.coo", "dgl.sparse.SparseMatrix.cpu", "dgl.sparse.SparseMatrix.csc", "dgl.sparse.SparseMatrix.csr", "dgl.sparse.SparseMatrix.cuda", "dgl.sparse.SparseMatrix.device", "dgl.sparse.SparseMatrix.double", "dgl.sparse.SparseMatrix.dtype", "dgl.sparse.SparseMatrix.float", "dgl.sparse.SparseMatrix.has_duplicate", "dgl.sparse.SparseMatrix.indices", "dgl.sparse.SparseMatrix.int", "dgl.sparse.SparseMatrix.long", "dgl.sparse.SparseMatrix.neg", "dgl.sparse.SparseMatrix.nnz", "dgl.sparse.SparseMatrix.reduce", "dgl.sparse.SparseMatrix.row", "dgl.sparse.SparseMatrix.shape", "dgl.sparse.SparseMatrix.smax", "dgl.sparse.SparseMatrix.smean", "dgl.sparse.SparseMatrix.smin", "dgl.sparse.SparseMatrix.softmax", "dgl.sparse.SparseMatrix.sum", "dgl.sparse.SparseMatrix.t", "dgl.sparse.SparseMatrix.to", "dgl.sparse.SparseMatrix.to_dense", "dgl.sparse.SparseMatrix.transpose", "dgl.sparse.SparseMatrix.val", "dgl.sparse.add", "dgl.sparse.bsddmm", "dgl.sparse.bspmm", "dgl.sparse.diag", "dgl.sparse.div", "dgl.sparse.from_coo", "dgl.sparse.from_csc", "dgl.sparse.from_csr", "dgl.sparse.identity", "dgl.sparse.matmul", "dgl.sparse.mul", "dgl.sparse.power", "dgl.sparse.sddmm", "dgl.sparse.softmax", "dgl.sparse.sp_add_v", "dgl.sparse.sp_broadcast_v", "dgl.sparse.sp_div_v", "dgl.sparse.sp_mul_v", "dgl.sparse.sp_sub_v", "dgl.sparse.spmatrix", "dgl.sparse.spmm", "dgl.sparse.spspmm", "dgl.sparse.sub", "dgl.sparse.val_like", "dgl.sum_edges", "dgl.sum_nodes", "dgl.svd_pe", "dgl.to_bidirected", "dgl.to_block", "dgl.to_cugraph", "dgl.to_double", "dgl.to_float", "dgl.to_half", "dgl.to_heterogeneous", "dgl.to_homogeneous", "dgl.to_networkx", "dgl.to_simple", "dgl.to_simple_graph", "dgl.topk_edges", "dgl.topk_nodes", "dgl.topological_nodes_generator", "AddEdge", "AddMetaPaths", "AddReverse", "AddSelfLoop", "BaseTransform", "Compose", "DropEdge", "DropNode", "FeatMask", "GCNNorm", "GDC", "HeatKernel", "KHopGraph", "LapPE", "LineGraph", "NodeShuffle", "PPR", "RandomWalkPE", "RemoveSelfLoop", "RowFeatNormalizer", "SIGNDiffusion", "SVDPE", "ToLevi", "ToSimple", "dgl.udf.EdgeBatch.batch_size", "dgl.udf.EdgeBatch.data", "dgl.udf.EdgeBatch.dst", "dgl.udf.EdgeBatch.edges", "dgl.udf.EdgeBatch.src", "dgl.udf.NodeBatch.batch_size", "dgl.udf.NodeBatch.data", "dgl.udf.NodeBatch.mailbox", "dgl.udf.NodeBatch.nodes", "dgl.unbatch", "dgl.use_libxsmm", "Chapter 4: Graph Data Pipeline", "4.1 DGLDataset class", "4.2 Download raw data (optional)", "4.6 Loading data from CSV files", "4.5 Loading OGB datasets using <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> package", "4.3 Process data", "4.4 Save and load data", "Chapter 7: Distributed Training", "7.3 Programming APIs", "7.5 Heterogeneous Graph Under The Hood", "7.4 Advanced Graph Partitioning", "7.1 Data Preprocessing", "7.2 Tools for launching distributed training/inference", "Chapter 1: Graph", "1.1 Some Basic Definitions about Graphs (Graphs 101)", "1.4 Creating Graphs from External Sources", "1.3 Node and Edge Features", "1.6 Using DGLGraph on a GPU", "1.2 Graphs, Nodes, and Edges", "1.5 Heterogeneous Graphs", "User Guide", "Chapter 2: Message Passing", "2.1 Built-in Functions and Message Passing APIs", "2.2 Writing Efficient Message Passing Code", "2.5 Message Passing on Heterogeneous Graph", "2.3 Apply Message Passing On Part Of The Graph", "Chapter 6: Stochastic Training on Large Graphs", "6.4 Implementing Custom Graph Samplers", "6.2 Training GNN for Edge Classification with Neighborhood Sampling", "6.8 Using GPU for Neighborhood Sampling", "6.7 Exact Offline Inference on Large Graphs", "6.3 Training GNN for Link Prediction with Neighborhood Sampling", "6.6 Implementing Custom GNN Module for Mini-batch Training", "6.1 Training GNN for Node Classification with Neighborhood Sampling", "6.9 Data Loading Parallelism", "6.5 Training GNN with DGL sparse", "Chapter 8: Mixed Precision Training", "Chapter 3: Building GNN Modules", "3.1 DGL NN Module Construction Function", "3.2 DGL NN Module Forward Function", "3.3 Heterogeneous GraphConv Module", "Chapter 5: Training Graph Neural Networks", "5.2 Edge Classification/Regression", "5.5 Use of Edge Weights", "5.4 Graph Classification", "5.3 Link Prediction", "5.1 Node Classification/Regression", "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053", "4.1 DGLDataset\u7c7b", "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09", "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6", "4.3 \u5904\u7406\u6570\u636e", "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e", "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3", "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API", "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406", "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177", "\u7b2c1\u7ae0\uff1a\u56fe", "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5", "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe", "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81", "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph", "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9", "1.5 \u5f02\u6784\u56fe", "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011", "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f", "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API", "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801", "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3", "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668", "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad", "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757", "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757", "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570", "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570", "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757", "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc", "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52", "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd", "5.4 \u6574\u56fe\u5206\u7c7b", "5.3 \u94fe\u63a5\u9884\u6d4b", "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52", "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778", "4.1 DGLDataset \ud074\ub798\uc2a4", "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)", "4.5 <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30", "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1", "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529", "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5", "7.2 \ubd84\uc0b0 APIs", "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30", "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac", "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4", "1\uc7a5: \uadf8\ub798\ud504", "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)", "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30", "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98", "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30", "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0", "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)", "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]", "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)", "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4", "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30", "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95", "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec", "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30", "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5", "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30", "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30", "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860", "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30", "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "8\uc7a5: Mixed Precision \ud559\uc2b5", "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30", "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218", "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218", "3.3 Heterogeneous GraphConv \ubaa8\ub4c8", "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30", "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)", "5.4 \uadf8\ub798\ud504 \ubd84\ub958", "5.3 \ub9c1\ud06c \uc608\uce21", "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)", "Welcome to Deep Graph Library Tutorials and Documentation", "Install and Setup", "Building a Graph Convolutional Network Using Sparse Matrices", "Graph Diffusion in Graph Neural Networks", "Graph Transformer in a Nutshell", "Hypergraph Neural Networks", "Tutorials: dgl.sparse", "Quickstart", "Performance Benchmarks", "Resources", "Computation times", "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt", "Link Prediction", "Neighbor Sampling Overview", "Node Classification", "Composing OnDiskDataset from raw data", "YAML specification", "OnDiskDataset for Heterogeneous Graph", "OnDiskDataset for Homogeneous Graph", "Node Classification with DGL", "How Does DGL Represent A Graph?", "Write your own GNN module", "Link Prediction using Graph Neural Networks", "Training a GNN for Graph Classification", "Make Your Own Dataset", "A Blitz Introduction to DGL", "Computation times", "CPU Best Practices", "Training on CPUs", "Computation times", "Distributed Node Classification", "Distributed Link Prediction", "Distributed training", "Computation times", "Graph Convolutional Network", "Relational Graph Convolutional Network", "Line Graph Neural Network", "Understand Graph Attention Network", "Graph neural networks and its variants", "Computation times", "Tree-LSTM in DGL", "Batching many small graphs", "Computation times", "Generative Models of Graphs", "Generative models", "Computation times", "Capsule Network", "Transformer as a Graph Neural Network", "Revisit classic models from a graph perspective", "Computation times", "Paper Study with DGL", "Computation times", "Single Machine Multi-GPU Minibatch Graph Classification", "Single Machine Multi-GPU Minibatch Node Classification", "Training on Multiple GPUs", "Computation times"], "titleterms": {"": [834, 835, 836, 838, 852], "1": [686, 696, 698, 699, 700, 701, 702, 703, 704, 707, 718, 723, 731, 733, 740, 743, 744, 745, 746, 747, 748, 751, 761, 763, 771, 773, 780, 781, 784, 785, 786, 787, 788, 789, 792, 804, 807, 814, 822, 852, 855, 858, 861], "101": [699, 784], "1\uc7a5": 783, "2": [687, 696, 697, 703, 706, 707, 708, 709, 710, 713, 724, 727, 734, 739, 747, 751, 752, 753, 754, 757, 764, 767, 774, 779, 780, 788, 792, 793, 794, 795, 796, 799, 808, 811, 822, 852, 855, 858, 861], "2\uc7a5": 791, "3": [690, 693, 701, 710, 716, 722, 723, 724, 725, 730, 736, 741, 745, 754, 759, 763, 764, 765, 770, 776, 780, 786, 796, 802, 807, 808, 809, 813, 823, 852, 855, 858, 861], "3\uc7a5": 806, "4": [685, 686, 687, 688, 689, 690, 691, 695, 700, 712, 729, 733, 734, 735, 736, 737, 744, 756, 769, 773, 774, 775, 776, 777, 782, 785, 793, 798, 812, 823, 852], "4\uc7a5": 772, "5": [689, 694, 704, 709, 720, 726, 727, 728, 729, 730, 731, 735, 748, 753, 760, 767, 768, 769, 770, 771, 775, 789, 795, 803, 811, 812, 813, 814, 823], "5\uc7a5": 810, "6": [688, 702, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 746, 756, 757, 758, 759, 760, 761, 787, 798, 799, 800, 801, 802, 803, 804, 823], "6\uc7a5": 797, "7": [692, 693, 694, 695, 696, 697, 715, 739, 740, 741, 779, 780, 781, 782, 800], "7\uc7a5": 778, "8": [714, 721], "8\uc7a5": 805, "9": 719, "A": [835, 838, 840, 850], "For": [713, 716, 718], "Of": 710, "On": 710, "One": 851, "The": [694, 710, 850, 855, 858], "__getitem__": 26, "about": 699, "abstract": 851, "access": [693, 694, 845], "action": 858, "activ": [12, 822], "actordataset": 134, "adapt": [2, 713, 718, 862], "add": [609, 858], "add_edg": [27, 114], "add_nod": [28, 115], "add_node_property_split": 197, "add_nodepred_split": 198, "add_reverse_edg": [116, 317], "add_self_loop": [29, 117], "addedg": 650, "addmetapath": 651, "addrevers": 652, "addselfloop": 653, "adj": 30, "adj_extern": 31, "adj_product_graph": 118, "adj_sum_graph": 119, "adj_tensor": 32, "adjac": [0, 1], "adjacency_matrix": 33, "adjusted_homophili": 120, "advanc": 695, "after": [694, 712, 724], "aggreg": 862, "agnnconv": [354, 384], "aifbdataset": 132, "algorithm": [14, 695, 851], "all": 862, "alloc": 842, "altern": 842, "amazoncobuycomputerdataset": 135, "amazoncobuyphotodataset": 136, "amazonratingsdataset": 137, "amdataset": 133, "an": [727, 851], "api": [9, 13, 693, 696, 707, 779, 855], "api\ub4e4": 792, "appli": 710, "apply_each": 121, "apply_edg": [34, 837], "apply_nod": 35, "appnpconv": [355, 385, 462], "approach": 711, "as_edge_prediction_sampl": 220, "asgraphpreddataset": 138, "ask": 24, "aslinkpreddataset": 139, "asnodepreddataset": 140, "assign": 835, "atomicconv": 386, "attent": [819, 852, 862], "attribut": [12, 822], "avgpool": [371, 430, 470], "ba2motifdataset": 141, "backend": [23, 816], "bacommunitydataset": 142, "balanc": 696, "base": [2, 714], "basetransform": 654, "bashapedataset": 143, "basic": 699, "basicfeaturestor": 287, "batch": [0, 1, 122, 717, 729, 812, 838, 845, 846, 851, 855, 856, 865, 868], "batch_num_edg": 36, "batch_num_nod": 37, "batch_siz": [38, 674, 679], "benchmark": [14, 823], "best": [836, 842], "bfloat16": 721, "bfs_edges_gener": 123, "bfs_nodes_gener": 124, "bgsdataset": 144, "biasedmha": 446, "biasedmultiheadattent": 439, "binari": [700, 704, 851], "bipartit": [717, 798, 803], "bipartite_from_networkx": 125, "bipartite_from_scipi": 126, "bitcoinotcdataset": 145, "blitz": 840, "block_to_graph": 127, "blocksampl": 208, "book": 4, "brief": 850, "broadcast": [12, 822], "broadcast_edg": 128, "broadcast_nod": 129, "bsddmm": 610, "bspmm": 611, "bucket": 20, "build": [21, 722, 817, 862], "built": [5, 707, 862], "builtindataset": 288, "call_once_and_shar": 350, "canonical_etyp": 39, "capsul": 861, "cell": 855, "cfconv": 387, "chain": 851, "chameleondataset": 149, "chang": 21, "chapter": [685, 692, 698, 706, 711, 721, 722, 726], "chebconv": [356, 388, 463], "check": 724, "check_sha1": 199, "choos": 858, "chunk": 696, "cifar10superpixeldataset": 146, "citeseergraphdataset": 150, "class": [2, 3, 12, 686, 858, 862], "classic": [863, 865], "classif": [690, 713, 718, 727, 729, 731, 829, 832, 833, 834, 838, 839, 845, 867, 868], "client": 845, "clusterdataset": 147, "clustergcnsampl": 209, "coalesc": 579, "coauthorcsdataset": 151, "coauthorphysicsdataset": 152, "code": [21, 708], "col": 580, "comma": [700, 704, 785, 789], "commun": [845, 846, 851], "compact_csc_format": 318, "compact_graph": 130, "complet": [16, 851], "compos": [655, 830], "comput": [1, 729, 825, 829, 841, 844, 848, 854, 857, 860, 862, 864, 866, 870], "conclus": [14, 827, 829], "conda": 816, "configur": 23, "construct": [723, 835], "contain": 22, "contribut": [21, 815], "control": 1, "conv": [15, 16, 17], "convers": 694, "convert": 704, "convolut": [817, 834, 849, 850], "coo": 581, "copy_": 250, "copy_e_max": 481, "copy_e_mean": 482, "copy_e_min": 483, "copy_e_sum": 484, "copy_u": [251, 485], "copy_u_max": 486, "copy_u_mean": 487, "copy_u_min": 488, "copy_u_sum": 489, "copy_v": 490, "copyto": [7, 289], "cora": [834, 851, 852], "corafulldataset": 153, "coragraphdataset": 154, "core": 21, "cornelldataset": 155, "cpu": [40, 582, 721, 842, 843], "creat": [0, 700, 704, 822, 839, 850], "create_block": 131, "create_formats_": 41, "creation": [12, 693], "csc": 583, "csr": 584, "csv": [688, 700, 704, 744, 748, 785, 789, 839], "csvdataset": [148, 839], "cuda": [585, 714], "cugraph": 16, "cugraphgatconv": 389, "cugraphrelgraphconv": 390, "cugraphsageconv": 391, "custom": [688, 712, 717, 836], "data": [2, 9, 21, 23, 675, 680, 685, 687, 688, 690, 691, 693, 694, 696, 713, 714, 716, 718, 719, 729, 820, 827, 829, 830, 832, 833, 838, 867, 868], "dataload": [3, 4, 7, 208, 210, 220, 290], "dataset": [2, 7, 291, 688, 689, 690, 827, 829, 834, 839, 850, 851, 855, 862], "dataset_nam": 831, "deep": 815, "deepwalk": 378, "defin": [20, 22, 713, 716, 718, 827, 829, 834, 836, 837, 838, 845, 846, 850, 855, 861, 868], "definit": [699, 729], "deg": 851, "degre": 20, "degreeencod": [440, 447], "dens": [15, 16], "densechebconv": [357, 393], "densegraphconv": [358, 394], "densesageconv": [359, 395], "depend": 829, "descript": [6, 384, 385, 386, 387, 392, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 413, 414, 416, 417, 418, 419, 420, 454, 455, 456, 458], "destin": 858, "detect": 851, "develop": 21, "devic": [1, 42, 586], "dfs_edges_gener": 229, "dfs_labeled_edges_gener": 230, "dgl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 208, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 693, 700, 704, 714, 720, 723, 724, 744, 763, 779, 785, 789, 800, 807, 808, 821, 822, 827, 829, 832, 833, 834, 835, 838, 840, 849, 850, 851, 852, 855, 862, 865], "dgldataset": [156, 686, 773, 839], "dgldataset\u7c7b": 733, "dglgraph": [1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 702, 787], "dglgraph\ub85c": 781, "dgl\u4e8c\u8fdb\u5236\u683c\u5f0f": 748, "dgl\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": 739, "dgmg": 858, "dgnconv": 392, "diag": 612, "diagon": 822, "differ": [727, 816], "diffus": 818, "disk": [700, 704], "dispatch": 696, "distedgedataload": 211, "distembed": [693, 779], "distgraph": [693, 779], "distnodedataload": 212, "distribut": [4, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 692, 693, 694, 696, 697, 779, 845, 846, 847, 867], "distributeditemsampl": 292, "div": 613, "doc": 21, "document": [21, 815], "doe": 835, "dotgatconv": 396, "doubl": 587, "double_radius_node_label": 242, "download": [200, 687], "dropedg": 656, "dropnod": 657, "dst": 676, "dstdata": 43, "dstnode": 44, "dsttype": 45, "dtype": 588, "dure": 694, "dynam": 858, "e_add_u": [252, 491], "e_add_v": [253, 492], "e_div_u": [254, 493], "e_div_v": [255, 494], "e_dot_u": [256, 495], "e_dot_v": [257, 496], "e_mul_u": [258, 497], "e_mul_v": [259, 498], "e_sub_u": [260, 499], "e_sub_v": [261, 500], "each": 867, "edata": 46, "edg": [1, 2, 20, 51, 677, 693, 700, 701, 703, 704, 712, 713, 727, 728, 744, 785, 835, 858, 862], "edge_attr_schem": 47, "edge_homophili": 243, "edge_id": 48, "edge_label_inform": 244, "edge_softmax": 352, "edge_split": 231, "edge_subgraph": [49, 245], "edge_type_subgraph": [50, 246], "edgebatch": [674, 675, 676, 677, 678], "edgeconv": [360, 399], "edgedata": 688, "edgegatconv": 400, "edgepredictor": 454, "edgeweightnorm": 401, "editori": 21, "effici": 708, "egatconv": 397, "egnnconv": 398, "egtlay": [441, 448], "element": 822, "elementwis": [12, 822], "embed": [4, 10, 16, 858], "encod": [0, 858], "end": [721, 805], "environ": [23, 845, 846], "equat": 852, "etyp": 52, "etype_str_to_tupl": 319, "etype_tuple_to_str": 320, "evalu": [820, 827, 868], "even": 836, "everyth": 852, "exact": 715, "exampl": [21, 352, 696, 721], "exclud": 712, "exclude_seed_edg": 321, "execut": 862, "exercis": 822, "exist": 727, "extern": 700, "extract": 0, "extract_arch": 201, "f": 851, "fakenewsdataset": 159, "faq": 24, "farthest": 6, "fb15k237dataset": 157, "fb15kdataset": 158, "featmask": 658, "featur": [1, 3, 7, 21, 293, 688, 701, 724, 832, 833, 835, 837], "feature_data": 831, "featurefetch": [7, 294], "featurestor": [7, 295], "ffi": 22, "file": [688, 832, 833], "filter_edg": 53, "filter_nod": 54, "find_edg": [55, 232], "flickrdataset": 160, "float": 589, "flow": 858, "folder": 688, "foreign": 22, "format": [1, 56, 695, 696, 700, 704], "formula": 849, "forward": [724, 808], "fraudamazondataset": 161, "frauddataset": 162, "fraudyelpdataset": 163, "frequent": 24, "from": [688, 700, 704, 713, 727, 816, 830, 839, 849, 851, 863, 865], "from_coo": 614, "from_csc": 615, "from_csr": 616, "from_cugraph": 247, "from_dglgraph": 322, "from_networkx": 248, "from_scipi": 249, "full": [688, 850], "function": [3, 5, 9, 12, 18, 20, 22, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 352, 707, 714, 723, 724, 822, 836, 861, 862, 867], "fuse": 851, "fused_csc_sampling_graph": 323, "fusedcscsamplinggraph": 296, "gat": 852, "gatconv": [361, 402, 464], "gatedgcnconv": 408, "gatedgraphconv": [364, 409], "gather_mm": 501, "gathermm": 9, "gatv2conv": 403, "gcn": [817, 834, 849, 850, 852], "gcn2conv": 404, "gcnnorm": 659, "gdc": 660, "gdeltdataset": 164, "gener": [21, 832, 833, 858, 859, 865], "geometri": 6, "get": [815, 845, 846], "get_download_dir": 202, "ginconv": [362, 405, 465], "gindataset": 165, "gineconv": 406, "git": 21, "github": 21, "global": [15, 16, 17, 23], "global_uniform_negative_sampl": 561, "globalattentionpool": [372, 431, 471], "globaluniform": 226, "gml": [700, 744, 785], "gmmconv": [363, 407], "gnn": [713, 716, 717, 718, 720, 722, 762, 799, 802, 803, 804, 806, 818, 826, 834, 836, 837, 838, 845, 846], "gnnexplain": 421, "gpu": [702, 714, 800, 834, 867, 868, 869], "gpucachedfeatur": 297, "gpu\uc5d0\uc11c": 787, "graph": [0, 1, 2, 4, 7, 16, 286, 352, 685, 688, 690, 693, 694, 695, 696, 698, 699, 700, 703, 704, 709, 710, 711, 712, 713, 715, 716, 717, 718, 724, 726, 727, 729, 730, 731, 789, 803, 808, 815, 817, 818, 819, 831, 832, 833, 834, 835, 837, 838, 839, 845, 846, 849, 850, 851, 852, 853, 856, 858, 861, 862, 863, 865, 867], "graphbolt": [7, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 826], "graphconv": [365, 410, 466, 725, 809], "graphdata": 688, "graphdataload": 213, "graphormerlay": [442, 449], "graphsag": [716, 837], "group": 867, "grouprevr": 411, "gsddmm": [9, 502], "gspmm": [9, 503], "guid": 705, "half": [721, 805], "handl": [829, 850], "has_dupl": 590, "has_edges_between": 57, "has_nod": 58, "head": [819, 852, 862], "heatkernel": 661, "heteroembed": 379, "heterogen": [15, 16, 17, 352, 688, 694, 704, 709, 712, 713, 716, 717, 718, 725, 726, 727, 729, 730, 731, 780, 781, 789, 798, 799, 802, 803, 804, 809, 810, 811, 812, 813, 814, 832], "heterognnexplain": 422, "heterograph": [329, 704], "heterographconv": [353, 380, 472, 725, 809], "heterographconv\u7684\u5b9e\u73b0\u903b\u8f91": 765, "heterolinear": 381, "heteropgexplain": 423, "heterosubgraphx": 424, "hgnn": 820, "hgtconv": 412, "homogen": [352, 704, 717, 803, 833], "homophili": 0, "hood": 694, "host": 21, "how": [829, 835, 862], "hyper": 842, "hypergraph": 820, "i": 851, "icews18dataset": 166, "id": [1, 694, 696, 781, 845, 846], "idea": [850, 851, 861], "ident": 617, "idtyp": 59, "implement": [712, 715, 717, 725, 727, 849, 850, 851, 858, 861, 862], "import": 868, "in_degre": 60, "in_edg": 61, "in_subgraph": [233, 330], "inc": 62, "incid": 1, "incidence_matrix": 63, "index": 815, "indic": 591, "infer": [697, 715, 846, 851], "inform": [0, 1], "initi": [4, 234, 693, 822, 845, 846, 861, 867], "input": 695, "instal": [695, 816, 827, 829, 832, 833], "instanti": [832, 833], "insubgraphsampl": 298, "int": [64, 592], "integr": 823, "intel": 842, "interact": 852, "interfac": [21, 22], "introduc": 852, "introduct": [840, 850, 858], "is_homogen": 65, "is_libxsmm_en": 331, "is_multigraph": 66, "is_pin": 67, "is_unibipartit": 68, "isin": 324, "itemsampl": [7, 299], "itemset": [7, 300], "itemsetdict": 301, "its": [853, 865], "job": 845, "json": [700, 744, 785], "jumpingknowledg": 458, "karateclubdataset": 167, "kei": [850, 851, 861], "khop_adj": 332, "khop_graph": 333, "khop_in_subgraph": 334, "khop_out_subgraph": 335, "khopgraph": 662, "knn": 14, "knn_graph": 336, "knngraph": 427, "knowledg": 16, "label": [0, 688], "labelpropag": 459, "laborsampl": 214, "lap_p": 337, "laplacian_lambda_max": 338, "lapp": 663, "lapposencod": 450, "larg": [711, 715], "launch": [697, 845], "layer": [15, 16, 17, 817, 819, 820, 850, 851, 862], "layerneighborsampl": 302, "lazyfeatur": 221, "learn": [15, 16, 17, 852], "legacydataset": 303, "legacytudataset": 168, "less": 688, "level": 688, "lgnn": 851, "librari": [700, 815], "line": 851, "line_graph": [69, 339], "linear": [12, 822], "linegraph": 664, "link": [3, 16, 690, 716, 730, 827, 832, 833, 837, 839, 846, 850], "linkx_homophili": 340, "linux": 816, "load": [4, 688, 689, 691, 694, 696, 700, 704, 719, 729, 820, 827, 829, 834, 835, 837, 838, 868], "load_from_shared_memori": 325, "load_graph": 341, "load_info": 203, "load_label": 204, "load_partit": 235, "load_partition_book": 236, "load_partition_feat": 237, "loader": [713, 714, 716, 718, 827, 829, 838, 867], "local": 21, "local_scop": 70, "logic": 725, "long": [71, 593], "loop": [713, 716, 718, 727, 729, 730, 731, 811, 814, 827, 829, 836, 837, 838, 845, 846, 850, 855, 868], "lsc": 696, "lstm": 855, "machin": [867, 868], "maco": 816, "mag240m": 696, "mailbox": 681, "main": [855, 858, 862, 867], "make": [696, 839], "mani": [856, 865], "manipul": 1, "map": 696, "mask_nodes_by_properti": 205, "match": 6, "matmul": 618, "matric": 817, "matrix": [1, 12, 822, 851], "max": 262, "max_edg": 342, "max_nod": 343, "maxpool": [373, 432, 473], "mean": 263, "mean_edg": 344, "mean_nod": 345, "measur": 0, "memori": 842, "merg": 346, "messag": [0, 5, 9, 20, 706, 707, 708, 709, 710, 721, 724, 728, 791, 828, 836, 849, 851, 855, 861, 862], "metagraph": [1, 72], "metapath2vec": 382, "metapath_reachable_graph": 347, "method": [12, 822], "meti": 695, "metis_partit": 348, "metis_partition_assign": 349, "mfg": 717, "mfg\ub97c": 803, "min": 264, "minesweeperdataset": 171, "mini": [717, 845, 846, 868], "minibatch": [7, 304, 713, 716, 718, 867, 868], "minibatchtransform": 305, "minigcdataset": 172, "misc": 1, "mix": [721, 805], "mnistsuperpixeldataset": 169, "mode": 693, "model": [21, 713, 716, 718, 727, 729, 731, 819, 827, 829, 837, 838, 845, 846, 849, 850, 858, 859, 861, 863, 865, 867, 868], "modul": [9, 15, 16, 17, 693, 717, 722, 723, 724, 725, 728, 836], "more": 836, "movielensdataset": 173, "mul": 619, "multi": [819, 852, 862, 867, 868], "multi_update_al": 73, "multilayerfullneighborsampl": 215, "multipl": [12, 21, 688, 704, 822, 851, 869], "multiprocess": [8, 350, 351], "mutagdataset": 170, "mutat": 1, "mxnet": [15, 816], "ndata": 74, "neg": [3, 11, 594, 716, 802, 837], "negativesampl": [7, 306], "neighbor": [6, 11, 713, 714, 716, 827, 828, 829], "neighborhood": [711, 713, 714, 716, 718, 797], "neighborsampl": [216, 307], "network": [16, 726, 729, 731, 817, 818, 820, 834, 837, 845, 846, 849, 850, 851, 852, 853, 861, 862, 865], "neural": [726, 729, 731, 818, 820, 837, 851, 853, 862, 865], "new": [21, 22], "next": [834, 835, 836, 838, 852], "nf": 845, "nn": [15, 16, 17, 18, 352, 723, 724, 728, 807, 808], "nnconv": [366, 413], "nnz": 595, "nn\u6a21\u5757\u7684forward\u51fd\u6570": 764, "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": 763, "node": [1, 2, 4, 10, 20, 77, 682, 690, 693, 700, 701, 703, 718, 727, 731, 744, 785, 827, 829, 832, 833, 834, 835, 839, 845, 846, 858, 868], "node2vec_random_walk": 562, "node_attr_schem": 75, "node_homophili": 476, "node_label_inform": 477, "node_split": 238, "node_subgraph": 478, "node_type_subgraph": [76, 479], "nodebatch": [679, 680, 681, 682], "nodedata": 688, "nodeembed": 457, "nodeshuffl": 665, "non": [12, 822], "norm_by_dst": 480, "ntype": 78, "num_dst_nod": 79, "num_edg": 80, "num_nod": 81, "num_src_nod": 82, "number_of_dst_nod": 83, "number_of_edg": 84, "number_of_nod": 85, "number_of_src_nod": 86, "nutshel": 819, "object": [839, 858], "offlin": 715, "ogb": [689, 775], "ondiskdataset": [308, 830, 832, 833], "one": 849, "onli": 845, "op": [0, 9, 12, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541], "openmp": 842, "oper": [4, 12, 822, 851], "optim": [4, 10, 858], "option": [23, 687, 774], "organ": [832, 833], "origin": 713, "out": 0, "out_degre": 87, "out_edg": 88, "out_subgraph": 542, "output": [695, 724], "overview": [711, 726, 727, 729, 730, 731, 826, 828, 834, 837, 838, 839, 849], "own": [836, 839], "pack_trac": 563, "packag": [689, 827, 829, 832, 833, 868], "paper": 865, "paradigm": [706, 791], "parallel": [695, 719, 851], "parmeti": [695, 781], "parmetis\ub97c": 781, "parser": 688, "part": 710, "partit": [0, 4, 694, 695, 696, 845, 846], "partition_graph": 239, "partition_graph_with_halo": 543, "pass": [9, 20, 706, 707, 708, 709, 710, 721, 724, 728, 791, 828, 836, 849, 851, 855, 861, 862], "pathencod": [443, 451], "patterndataset": 174, "perform": [14, 823, 827], "persourceuniform": 227, "perspect": [849, 863, 865], "pgexplain": 425, "pin_memory_": 89, "pinsagesampl": [560, 714], "pip": 816, "pipelin": [685, 696], "platform": 21, "pnaconv": 414, "point": 6, "pool": [15, 16, 17], "posit": [0, 837], "postprocess": 862, "power": 620, "ppi": 852, "ppidataset": 175, "ppr": 666, "practic": [836, 842], "precis": [721, 805], "precision\uc744": 805, "predecessor": 90, "predict": [2, 3, 16, 690, 716, 727, 730, 827, 832, 833, 837, 839, 846, 850], "prefetch": 3, "prepar": [832, 833, 837, 867], "preprocess": [694, 696, 862], "prev": 851, "procedur": 868, "process": [21, 690, 867, 868], "program": 693, "progress": 851, "prop_edg": [91, 544], "prop_edges_df": 545, "prop_nod": [92, 546], "prop_nodes_bf": 547, "prop_nodes_topo": 548, "propag": [0, 858], "protein": 852, "pubmedgraphdataset": 176, "pull": 93, "push": 94, "put": [852, 855, 858, 862], "pytorch": [16, 350, 351, 816], "qm7bdataset": 177, "qm9dataset": 178, "qm9edgedataset": 179, "queri": [1, 835], "question": 24, "questionsdataset": 180, "quickstart": 822, "r": 850, "radiu": 851, "radius_graph": 549, "radiusgraph": 428, "rand_bipartit": 550, "rand_graph": 551, "random": 11, "random_walk": 564, "random_walk_p": 552, "randomwalkneighborsampl": 714, "randomwalkp": 667, "raw": [687, 774, 830], "read": 0, "readout": [729, 812], "readout_edg": 553, "readout_nod": 554, "redditdataset": 181, "reduc": [5, 9, 596, 724, 822], "refer": [13, 845, 846], "regress": [727, 731, 811, 814], "relat": [0, 9, 850], "relgraphconv": [367, 415, 467], "remov": 713, "remove_edg": [95, 555], "remove_nod": [96, 556], "remove_self_loop": [97, 557], "removeselfloop": 668, "reorder_graph": [98, 558], "repositori": 23, "repres": 835, "represent": 827, "requir": 816, "resourc": 824, "result": 14, "revers": [99, 559], "review": 828, "revisit": [863, 865], "roadmap": [685, 698, 706, 711, 722, 726], "romanempiredataset": 182, "row": 597, "rowfeatnorm": 669, "run": 695, "sageconv": [368, 416, 468], "saintsampl": 217, "sampl": [4, 11, 560, 561, 562, 563, 564, 565, 566, 567, 568, 693, 711, 712, 713, 714, 716, 718, 797, 828], "sample_etype_neighbor": 240, "sample_labor": 565, "sample_neighbor": [241, 566], "sample_neighbors_bias": 567, "sampledsubgraph": 309, "sampledsubgraphimpl": 310, "sampler": [3, 6, 218, 712, 713, 718, 827, 829, 845, 846], "samplinggraph": 311, "save": [691, 835], "save_graph": 569, "save_info": 206, "sbmmixturedataset": 183, "scenario": 826, "score": 16, "script": [845, 846], "sddmm": 621, "second": 850, "seed": [326, 570], "segment": 9, "segment_mm": 504, "segment_reduc": 505, "segmented_knn_graph": 571, "segmentedknngraph": 429, "segmentmm": 9, "select_topk": 568, "send_and_recv": 100, "separ": [700, 704, 785, 789], "sequenti": [377, 460], "server": 845, "set": [837, 842, 845, 846, 851], "set2set": [374, 433], "set_batch_num_edg": 101, "set_batch_num_nod": 102, "set_dst_lazy_featur": 222, "set_edge_lazy_featur": 223, "set_node_lazy_featur": 224, "set_src_lazy_featur": 225, "settransformerdecod": 434, "settransformerencod": 435, "setup": [21, 816, 845, 861], "sgconv": [369, 417, 469], "shadowkhopsampl": 219, "shape": 598, "shared_tensor": 351, "shortest_dist": 572, "side": 845, "signdiffus": 670, "simpl": 862, "singl": [688, 867, 868], "slice_batch": 573, "small": [856, 865], "smax": 599, "smean": 600, "smin": 601, "softmax": [602, 622, 822], "softmax_edg": 574, "softmax_nod": 575, "some": 699, "sort_csc_by_tag": 576, "sort_csr_by_tag": 577, "sortpool": [375, 436, 474], "sourc": [700, 816], "sp_add_v": 623, "sp_broadcast_v": 624, "sp_div_v": 625, "sp_mul_v": 626, "sp_sub_v": 627, "spars": [1, 12, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 720, 817, 819, 821, 822, 851], "sparsematrix": [578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608], "spatialencod": [444, 452], "spatialencoder3d": [445, 453], "spawn": 868, "specif": [688, 696, 724, 808, 831, 862], "speed": 862, "split": [4, 693, 779], "split_dataset": 207, "spmatrix": 628, "spmm": 629, "spspmm": 630, "squirreldataset": 185, "src": 678, "srcdata": 103, "srcnode": 104, "srctype": 105, "ssh": 845, "sstdataset": 184, "standalon": [693, 779], "start": 815, "step": [696, 855, 861], "stochast": [711, 797, 826], "structur": [1, 688, 693, 798, 832, 833, 835, 851, 862], "studi": 865, "style": 21, "sub": 631, "subgraph": [0, 106, 704, 851], "subgraphsampl": [7, 312], "subgraphx": 426, "subset": 196, "successor": 107, "sum": [265, 603], "sum_edg": 633, "sum_nod": 634, "sumpool": [376, 437, 475], "supervis": 851, "support": [9, 21, 714], "svd_pe": 635, "svdpe": 671, "system": 816, "t": [578, 604], "tagconv": [370, 418], "task": [313, 831, 832, 833, 850, 851, 855, 862], "tensor": [4, 693, 779, 851], "tensorflow": [17, 816], "test": [21, 837, 851, 861], "texasdataset": 187, "text": 851, "thread": 842, "time": [825, 841, 844, 848, 854, 857, 860, 864, 866, 870], "tip": 696, "to_bidirect": 636, "to_block": 637, "to_canonical_etyp": 109, "to_cugraph": [110, 638], "to_dens": 606, "to_doubl": 639, "to_float": 640, "to_half": 641, "to_heterogen": 642, "to_homogen": 643, "to_networkx": 644, "to_simpl": [111, 645], "to_simple_graph": 646, "togeth": [852, 855, 858, 862], "tolevi": 672, "tolokersdataset": 188, "tool": 697, "top": 688, "topk_edg": 647, "topk_nod": 648, "topologi": 1, "topological_nodes_gener": 649, "torchbasedfeatur": 314, "torchbasedfeaturestor": 315, "tosimpl": 673, "tra": 827, "train": [692, 697, 711, 713, 716, 717, 718, 720, 721, 726, 727, 729, 730, 731, 817, 818, 819, 820, 826, 829, 834, 836, 837, 838, 843, 845, 846, 847, 850, 851, 862, 868, 869], "trainer": 868, "trane": 868, "trans": 455, "transform": [0, 1, 3, 16, 19, 819, 822, 835, 862], "transpos": 607, "transr": 456, "travers": [0, 855], "tree": 855, "treecycledataset": 189, "treegriddataset": 190, "tudataset": 186, "tutori": [815, 821], "twirlsconv": 419, "twirlsunfoldingandattent": 420, "type": [1, 9, 22, 704, 724, 727, 808], "typedlinear": 383, "u_add_": [266, 506], "u_add_e_max": 507, "u_add_e_mean": 508, "u_add_e_min": 509, "u_add_e_sum": 510, "u_add_v": [267, 511], "u_div_": [268, 512], "u_div_e_max": 513, "u_div_e_mean": 514, "u_div_e_min": 515, "u_div_e_sum": 516, "u_div_v": [269, 517], "u_dot_": [270, 518], "u_dot_v": [271, 519], "u_mul_": [272, 520], "u_mul_e_max": 521, "u_mul_e_mean": 522, "u_mul_e_min": 523, "u_mul_e_sum": 524, "u_mul_v": [273, 525], "u_sub_": [274, 526], "u_sub_e_max": 527, "u_sub_e_mean": 528, "u_sub_e_min": 529, "u_sub_e_sum": 530, "u_sub_v": [275, 531], "ubuntu": 845, "udf": [674, 675, 676, 677, 678, 679, 680, 681, 682], "unbatch": 683, "under": 694, "understand": 852, "uniform": 228, "uniformnegativesampl": 316, "unique_and_compact": 327, "unique_and_compact_csc_format": 328, "unit": 21, "univers": 862, "unpin_memory_": 112, "up": [845, 846, 851, 862], "updat": [724, 858], "update_al": 113, "us": [1, 689, 702, 714, 728, 817, 837], "use_libxsmm": 684, "user": [20, 705, 836], "util": [0, 2, 3, 7, 15, 16, 694], "uva": 714, "v": [693, 779], "v0": 823, "v_add_": [276, 532], "v_add_u": [277, 533], "v_div_": [278, 534], "v_div_u": [279, 535], "v_dot_": [280, 536], "v_dot_u": [281, 537], "v_mul_": [282, 538], "v_mul_u": [283, 539], "v_sub_": [284, 540], "v_sub_u": [285, 541], "val": 608, "val_lik": 632, "valid": [845, 846], "valu": [700, 704, 785, 789], "variabl": 23, "variant": [853, 865], "via": [21, 839, 858], "visual": [851, 852, 862], "walk": 11, "web": 21, "weight": 728, "weightandsum": 438, "weightbasi": 461, "welcom": 815, "what": [834, 835, 836, 838, 851, 852], "wikicsdataset": 192, "window": 816, "wisconsindataset": 193, "wise": [20, 822], "wn18dataset": 191, "work": [704, 717, 816], "workload": [4, 693, 779], "write": [708, 717, 729, 731, 836], "x": 851, "y": 851, "yaml": [688, 831, 832, 833], "yelpdataset": 194, "your": [713, 718, 836, 839], "zincdataset": 195, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": 734, "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": 767, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": 760, "\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": 760, "\u4e8c\u8fdb\u5236\u683c\u5f0f": 744, "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": 744, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": 744, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": 744, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": 748, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": 735, "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": 748, "\u4f7f\u7528\u8fb9\u6743\u91cd": 768, "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": 768, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": 737, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": 743, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": 751, "\u5206\u5272\u6570\u636e\u96c6": 739, "\u5206\u5e03\u5f0f\u56fe": 739, "\u5206\u5e03\u5f0f\u5d4c\u5165": 739, "\u5206\u5e03\u5f0f\u5f20\u91cf": 739, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": 739, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": 739, "\u5206\u5e03\u5f0f\u8bad\u7ec3": 738, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": 740, "\u5206\u5e03\u5f0f\u91c7\u6837": 739, "\u521b\u5efadistgraph": 739, "\u521b\u5efa\u5f02\u6784\u56fe": 748, "\u5305\u542b\u8fc7\u65f6\u4fe1\u606f": 749, "\u53ef\u9009": 734, "\u56de\u5f52": [767, 771], "\u56fe": [742, 747], "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": 732, "\u56fe\u8bfb\u51fa": 769, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 746, "\u5728nn\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": 768, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 754, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": 755, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 753, "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": 767, "\u5904\u7406\u6570\u636e": 736, "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 736, "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": 736, "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": 736, "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": 756, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [757, 761], "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 756, "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 756, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": 758, "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 760, "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": 748, "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": 757, "\u5f02\u6784\u56fe": 748, "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": 761, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": 765, "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 769, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": 760, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": 757, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 771, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 767, "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": 756, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 770, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 759, "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": 756, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 766, "\u6279\u6b21": 755, "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": 769, "\u6279\u6b21\u7684\u56fe": 769, "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": 756, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": 741, "\u6570\u636e\u52a0\u8f7d": 769, "\u6574\u56fe\u5206\u7c7b": 769, "\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": 764, "\u672c\u7ae0\u8def\u7ebf\u56fe": [732, 742, 750, 755, 762, 766], "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": 762, "\u683c\u5f0f": 744, "\u6982\u8ff0": [766, 767, 769, 770, 771], "\u6a21\u5757": 762, "\u6a21\u578b\u5b9a\u4e49": 769, "\u6a21\u578b\u7684\u8bad\u7ec3": [757, 759, 761, 767, 769, 770, 771], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": 764, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": 750, "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 756, "\u7528\u6237\u6307\u5357": 749, "\u7b2c1\u7ae0": 742, "\u7b2c2\u7ae0": 750, "\u7b2c3\u7ae0": 762, "\u7b2c4\u7ae0": 732, "\u7b2c5\u7ae0": 766, "\u7b2c6\u7ae0": 755, "\u7b2c7\u7ae0": 738, "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": 759, "\u7f16\u5199dgl": 764, "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [769, 771], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": 752, "\u805a\u5408\u540e": 764, "\u8282\u70b9\u5206\u7c7b": 771, "\u8282\u70b9\u548c\u8fb9": 747, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 745, "\u8bad\u7ec3": 755, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": 766, "\u8bbf\u95ee\u56fe\u7ed3\u6784": 739, "\u8bbf\u95ee\u8282\u70b9": 739, "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [759, 761], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": 757, "\u8d1f\u8f7d\u5747\u8861": 740, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": 758, "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": 764, "\u8fb9\u5206\u7c7b": 767, "\u8fb9\u6570\u636e": 739, "\u8fb9\u7c7b\u578b\u5b50\u56fe": 748, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 741, "\u9017\u53f7\u5206\u9694\u503c": [744, 748], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": 755, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 761, "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 757, "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 759, "\u94fe\u63a5\u9884\u6d4b": 770, "\uac00\uc774\ub4dc": 790, "\uac00\uc911\uce58": 793, "\uac1c\uc694": [797, 810, 811, 812, 813, 814], "\uacb0\uacfc": 781, "\uacb0\uacfc\ub4e4\uc744": 781, "\uacbd\uc6b0": [799, 802, 804], "\uad6c\uc870": [779, 798], "\uad6c\ud604": 809, "\uad6c\ud604\uc0c1\uc758": 811, "\uad6c\ud604\ud558\uae30": [798, 801, 803], "\uadf8\ub798\ud504": [772, 776, 779, 780, 783, 784, 785, 788, 789, 796, 803, 808, 810, 811, 812, 814], "\uadf8\ub798\ud504\ub4e4": [798, 803, 813], "\uadf8\ub798\ud504\ub4e4\uc5d0": 801, "\uadf8\ub798\ud504\ub4e4\uc758": 812, "\uadf8\ub798\ud504\ub85c": 789, "\uadf8\ub798\ud504\ub97c": 789, "\uadf8\ub798\ud504\uc5d0": [781, 784, 797, 812], "\uadf8\ub798\ud504\uc5d0\uc11c": 799, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": 795, "\uadf8\ub798\ud504\uc758": [799, 802, 804, 811], "\uadf8\ub9ac\uace0": [788, 803], "\uae30\ubc18\uc758": 800, "\uae30\ubcf8\uc801\uc778": 784, "\ub098\ub204\uae30": 779, "\ub124\ud2b8\uc6cc\ud06c": [810, 812, 814], "\ub178\ub4dc": [776, 779, 781, 788, 804, 811, 814], "\ub178\ub4dc\uc640": 786, "\ub274\ub7f4": [810, 812, 814], "\ub2e4\ub8e8\uae30": 789, "\ub2e4\uc591\ud55c": 789, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 774, "\ub2e8\ub3c5": 779, "\ub300\ud55c": [781, 784, 797, 811], "\ub300\ud578": 801, "\ub370\uc774\ud130": [772, 774, 776, 777, 779, 780, 799, 800, 802, 804, 812], "\ub370\uc774\ud130\uc14b": 776, "\ub370\uc774\ud130\uc14b\ub4e4": 775, "\ub3d9\uc885": 789, "\ub4a4\uccd0\uc9c4": 790, "\ub514\uc2a4\ud06c\uc5d0\uc11c": [785, 789], "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c": 785, "\ub7f0\uce6d\ud558\uae30": 782, "\ub808\uc774\uc5b4": 798, "\ub85c\ub354": [799, 802, 804], "\ub85c\ub354\uc5d0\uc11c": 800, "\ub85c\ub4dc": 781, "\ub85c\ub4dc\ub9f5": [772, 783, 791, 797, 806, 810], "\ub85c\ub4dc\ud558\uae30": 775, "\ub85c\ub529": [777, 812], "\ub85c\ub529\ud558\uae30": [785, 789], "\ub85c\uc9c1": 809, "\ub8f9": [799, 802, 804, 811, 812, 813, 814], "\ub9ac\uadf8\ub798\uc158": 814, "\ub9ac\uadf8\ub808\uc158": 811, "\ub9ac\ub4dc\uc544\uc6c3": 812, "\ub9c1\ud06c": [776, 802, 813], "\ub9cc\ub4e4\uae30": [799, 802, 804, 806], "\ub9de\uac8c": [799, 802, 804], "\ub9e4\ud551": 781, "\uba40\ud2f0": 798, "\uba54\uc2dc\uc9c0": [792, 793, 794, 795, 798, 805, 808], "\uba54\uc9c0\uc2dc": [791, 796], "\uba85\uc138\ud654": 808, "\uba87\uac00\uc9c0": 784, "\ubaa8\ub378": [799, 802, 804, 812, 814], "\ubaa8\ub378\uacfc": 811, "\ubaa8\ub378\uc744": [799, 802, 804], "\ubaa8\ub4c8": [779, 803, 806, 807, 809], "\ubaa8\ub4c8\uc758": 808, "\ubaa8\ub4dc": 779, "\ubbf8\ub2c8": [799, 802, 803, 804], "\ubbf8\ub2c8\ubc30\uce58": 798, "\ubc0f": [781, 792, 799, 802, 804, 811], "\ubc14\uc774\ub108\ub9ac": [785, 789], "\ubc29\ubc95": [794, 797], "\ubc30\uce58": [799, 802, 803, 804, 812], "\ubc30\uce58\uc758": 799, "\ubc38\ub7f0\uc2f1": 781, "\ubcc0\ud658\ud558\uae30": [781, 789], "\ubd84\ub958": [776, 799, 804, 811, 812, 814], "\ubd84\uc0b0": [778, 779, 780, 781, 782], "\ube4c\ud2b8\uc778": 792, "\uc0ac\uc6a9\uc790": 790, "\uc0ac\uc6a9\ud558\uae30": [787, 800], "\uc0ac\uc6a9\ud55c": [785, 799, 802, 804, 805], "\uc0ac\uc6a9\ud574\uc11c": [775, 785], "\uc0d8\ud50c\ub7ec": [798, 799, 802, 804], "\uc0d8\ud50c\ub7ec\ub97c": 800, "\uc0d8\ud50c\ub9c1": [779, 780, 797, 798, 800], "\uc0d8\ud50c\ub9c1\uc5d0": 800, "\uc0d8\ud50c\ub9c1\uc744": [799, 802, 804], "\uc0dd\uc131": [779, 807], "\uc0dd\uc131\ud558\uae30": [781, 785, 789], "\uc11c\ube0c\uadf8\ub798\ud504": 789, "\uc124\uce58": 781, "\uc18c\uc2a4\ub97c": 785, "\uc2dc\ub300\uc5d0": 790, "\uc2e4\ud589\ud558\uae30": 781, "\uc5c5\ub370\uc774\ud2b8": 808, "\uc5d0\uc9c0": [779, 781, 788, 789, 793, 799, 811], "\uc5d0\uc9c0\ub4e4": 799, "\uc5d0\uc9c0\ub4e4\uc5d0": 811, "\uc5d0\uc9c0\uc758": 786, "\uc5f0\uc0b0\ud558\uae30": 812, "\uc608\uce21": [776, 802, 813], "\uc608\uce21\ud558\uae30": 811, "\uc624\ud504\ub77c\uc778": 801, "\uc678\ubd80": 785, "\uc6cc\ud06c\ub85c\ub4dc": 779, "\uc6d0\ubcf8": 799, "\uc704\ud55c": [781, 782, 798, 803, 808], "\uc704\ud574\uc11c": 799, "\uc758\uc874\uc131": 798, "\uc774\ubd84": [798, 803], "\uc774\uc6c3": [797, 798, 799, 800, 802, 804], "\uc774\uc885": [789, 795], "\uc77c\ubd80\uc5d0": 796, "\uc785\ub825": 781, "\uc791\uc131": 794, "\uc791\uc131\ud558\uae30": [803, 812, 814], "\uc800\uc7a5\uacfc": 777, "\uc801\uc6a9\ud558\uae30": [793, 796], "\uc804\ub2ec": [791, 792, 794, 795, 796, 798, 805], "\uc804\ub2ec\uacfc": 808, "\uc804\ub2ec\uc5d0": 793, "\uc804\ub2ec\uc744": 798, "\uc804\ucc98\ub9ac": 781, "\uc811\uadfc": 779, "\uc811\uadfc\ud558\uae30": 780, "\uc815\uc758": 784, "\uc815\uc758\ud558\uae30": [799, 802, 804, 812], "\uc815\ud655\ud55c": 801, "\uc81c\uac70\ud558\uae30": 799, "\uc9c1\uc811": 798, "\ucc28\uc774\uc810": 811, "\ucc3e\uae30": 798, "\uccb4\ud06c\uc640": 808, "\ucd08\uae30\ud654": 779, "\ucd94\ub860": 801, "\ucd94\ub860\uc744": 782, "\ucd95\uc57d": 808, "\ucd9c\ub825\uac12\uc744": 808, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": 798, "\ucee4\uc2a4\ud140": [798, 803], "\ucf54\ub4dc": 794, "\ud070": [797, 801], "\ud074\ub798\uc2a4": 773, "\ud0c0\uc785": [789, 808, 811], "\ud0c0\uc785\uc744": 789, "\ud150\uc11c": 779, "\ud234\ub4e4": 782, "\ud30c\uc774\ud504\ub77c\uc778": 772, "\ud30c\ud2f0\uc154\ub2dd": 781, "\ud328\ub7ec\ub2e4\uc784": 791, "\ud328\ud0a4\uc9c0\ub97c": 775, "\ud3ec\uba67": [781, 785, 789], "\ud3ec\uba67\ub4e4": 781, "\ud504\ub85c\uc138\uc2f1": 776, "\ud53c\ucc98": 786, "\ud53c\ucc98\ub4e4": 781, "\ud53c\uccd0": 808, "\ud559\uc2b5": [778, 782, 797, 799, 802, 804, 805, 811, 812, 813, 814], "\ud559\uc2b5\uc5d0": [799, 802, 804], "\ud559\uc2b5\uc744": [781, 803], "\ud559\uc2b5\ud558\uae30": [780, 799, 802, 804, 810], "\ud568\uaed8": 800, "\ud568\uc218": [792, 807, 808], "\ud568\uc218\uc640": 800, "\ud574\ubcf4\uae30": 798, "\ud6a8\uc728\uc801\uc778": 794, "\ud6c4": 808}})