Search.setIndex({"alltitles": {"1.1 Some Basic Definitions about Graphs (Graphs 101)": [[642, null]], "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [[685, null]], "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)": [[726, null]], "1.2 Graphs, Nodes, and Edges": [[646, null]], "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9": [[689, null]], "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0": [[730, null]], "1.3 Node and Edge Features": [[644, null]], "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [[687, null]], "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98": [[728, null]], "1.4 Creating Graphs from External Sources": [[643, null]], "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [[686, null]], "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[727, null]], "1.5 Heterogeneous Graphs": [[647, null]], "1.5 \u5f02\u6784\u56fe": [[690, null]], "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)": [[731, null]], "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30": [[729, null]], "1.6 Using DGLGraph on a GPU": [[645, null]], "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph": [[688, null]], "1\uc7a5: \uadf8\ub798\ud504": [[725, null]], "2.1 Built-in Functions and Message Passing APIs": [[650, null]], "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API": [[693, null]], "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4": [[734, null]], "2.2 Writing Efficient Message Passing Code": [[651, null]], "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [[694, null]], "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95": [[736, null]], "2.3 Apply Message Passing On Part Of The Graph": [[653, null]], "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[696, null]], "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30": [[738, null]], "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30": [[735, null]], "2.5 Message Passing on Heterogeneous Graph": [[652, null]], "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[695, null]], "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[737, null]], "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)": [[733, null]], "3.1 DGL NN Module Construction Function": [[665, null]], "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218": [[749, null]], "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [[705, null]], "3.2 DGL NN Module Forward Function": [[666, null]], "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218": [[750, null]], "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570": [[706, null]], "3.3 Heterogeneous GraphConv Module": [[667, null]], "3.3 Heterogeneous GraphConv \ubaa8\ub4c8": [[751, null]], "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757": [[707, null]], "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30": [[748, null]], "4.1 DGLDataset class": [[629, null]], "4.1 DGLDataset \ud074\ub798\uc2a4": [[715, null]], "4.1 DGLDataset\u7c7b": [[675, null]], "4.2 Download raw data (optional)": [[630, null]], "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)": [[716, null]], "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09": [[676, null]], "4.3 Process data": [[633, null]], "4.3 \u5904\u7406\u6570\u636e": [[678, null]], "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1": [[718, null]], "4.4 Save and load data": [[634, null]], "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [[679, null]], "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529": [[719, null]], "4.5 Loading OGB datasets using ogb package": [[632, null]], "4.5 ogb \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30": [[717, null]], "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6": [[677, null]], "4.6 Loading data from CSV files": [[631, null]], "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778": [[714, null]], "5.1 Node Classification/Regression": [[673, null]], "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52": [[713, null]], "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)": [[756, null]], "5.2 Edge Classification/Regression": [[669, null]], "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52": [[709, null]], "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)": [[753, null]], "5.3 Link Prediction": [[672, null]], "5.3 \u94fe\u63a5\u9884\u6d4b": [[712, null]], "5.3 \ub9c1\ud06c \uc608\uce21": [[755, null]], "5.4 Graph Classification": [[671, null]], "5.4 \u6574\u56fe\u5206\u7c7b": [[711, null]], "5.4 \uadf8\ub798\ud504 \ubd84\ub958": [[754, null]], "5.5 Use of Edge Weights": [[670, null]], "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd": [[710, null]], "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30": [[752, null]], "6.1 Training GNN for Node Classification with Neighborhood Sampling": [[661, null]], "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[703, null]], "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[746, null]], "6.2 Training GNN for Edge Classification with Neighborhood Sampling": [[656, null]], "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[699, null]], "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[741, null]], "6.3 Training GNN for Link Prediction with Neighborhood Sampling": [[659, null]], "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[701, null]], "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[744, null]], "6.4 Implementing Custom Graph Samplers": [[655, null]], "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [[698, null]], "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [[740, null]], "6.5 Implementing Custom GNN Module for Mini-batch Training": [[660, null]], "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757": [[702, null]], "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30": [[745, null]], "6.6 Exact Offline Inference on Large Graphs": [[658, null]], "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [[700, null]], "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860": [[743, null]], "6.7 Using GPU for Neighborhood Sampling": [[657, null]], "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30": [[742, null]], "6.8 Feature Prefetching": [[662, null]], "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5": [[739, null]], "7.1 Data Preprocessing": [[639, null]], "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [[682, null]], "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac": [[723, null]], "7.1.1 Partitioning API": [[639, "partitioning-api"]], "7.1.1 \ubd84\uc0b0 \ud30c\ud2f0\uc154\ub2dd": [[723, "id3"]], "7.1.2 Distributed Graph Partitioning Pipeline": [[639, "distributed-graph-partitioning-pipeline"]], "7.2 Tools for launching distributed training/inference": [[640, null]], "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API": [[681, null]], "7.2 \ubd84\uc0b0 APIs": [[721, null]], "7.3 Programming APIs": [[636, null]], "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [[683, null]], "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30": [[722, null]], "7.3.1 \ubd84\uc0b0 \uadf8\ub798\ud504 \ub370\uc774\ud130 \uc811\uadfc\ud558\uae30": [[722, "id1"]], "7.3.2 \ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[722, "id2"]], "7.4 Advanced Graph Partitioning": [[638, null]], "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4": [[724, null]], "7.5 Heterogeneous Graph Under The Hood": [[637, null]], "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5": [[720, null]], "8\uc7a5: Mixed Precision \ud559\uc2b5": [[747, null]], "A Batched Graph in DGL": [[772, "a-batched-graph-in-dgl"]], "A Blitz Introduction to DGL": [[774, null]], "A brief introduction to R-GCN": [[790, "a-brief-introduction-to-r-gcn"]], "AGNNConv": [[301, null], [331, null]], "AIFBDataset": [[130, null]], "AMDataset": [[131, null]], "API Reference": [[12, null]], "APPNPConv": [[302, null], [332, null], [406, null]], "Access distributed graph data": [[637, "access-distributed-graph-data"]], "Access node/edge data": [[636, "access-node-edge-data"]], "Accessing graph structure": [[636, "accessing-graph-structure"]], "Action 1: Add nodes": [[798, "action-1-add-nodes"]], "Action 2: Add edges": [[798, "action-2-add-edges"]], "Action 3: Choose a destination": [[798, "action-3-choose-a-destination"]], "Actions": [[798, "actions"]], "ActorDataset": [[132, null]], "Adapt your model for minibatch training": [[656, "adapt-your-model-for-minibatch-training"], [659, "adapt-your-model-for-minibatch-training"], [661, "adapt-your-model-for-minibatch-training"]], "Adaptive Universal Transformer": [[802, "adaptive-universal-transformer"]], "AddEdge": [[593, null]], "AddMetaPaths": [[594, null]], "AddReverse": [[595, null]], "AddSelfLoop": [[596, null]], "Adjacency Related Utilities": [[0, "adjacency-related-utilities"]], "Adjacency and incidence matrix": [[1, "adjacency-and-incidence-matrix"]], "After Partition Loading": [[637, "after-partition-loading"]], "AmazonCoBuyComputerDataset": [[133, null]], "AmazonCoBuyPhotoDataset": [[134, null]], "AsGraphPredDataset": [[135, null]], "AsLinkPredDataset": [[136, null]], "AsNodePredDataset": [[137, null]], "Assigning Node and Edge Features to Graph": [[769, "assigning-node-and-edge-features-to-graph"]], "AtomicConv": [[333, null]], "Attention layer of Transformer": [[802, "attention-layer-of-transformer"]], "Attributes and methods": [[11, "attributes-and-methods"]], "Attributes and methods of a DGL Sparse Matrix": [[764, "Attributes-and-methods-of-a-DGL-Sparse-Matrix"]], "AvgPooling": [[318, null], [374, null], [414, null]], "BA2MotifDataset": [[138, null]], "BACommunityDataset": [[139, null]], "BAShapeDataset": [[140, null]], "BFloat16 CPU example": [[663, "bfloat16-cpu-example"]], "BGSDataset": [[141, null]], "Backend Options": [[22, "backend-options"]], "Base Class": [[2, "base-class"]], "BaseTransform": [[597, null]], "Batch of Graphs": [[671, "batch-of-graphs"]], "Batching and Reading Out Ops": [[0, "batching-and-reading-out-ops"]], "Batching graphs for parallelism": [[791, "batching-graphs-for-parallelism"]], "Batching many small graphs": [[796, null], [805, "batching-many-small-graphs"]], "Benchmark the performance of KNN algorithms": [[13, null]], "Best practice of writing custom GNN modules": [[770, "best-practice-of-writing-custom-gnn-modules"]], "BiasedMHA": [[390, null]], "BiasedMultiheadAttention": [[383, null]], "Binary community subgraph from Cora with a test dataset": [[791, "binary-community-subgraph-from-cora-with-a-test-dataset"]], "BitcoinOTCDataset": [[142, null]], "Broadcast operations": [[764, "Broadcast-operations"]], "Broadcast operators": [[11, "broadcast-operators"]], "Building Docs Locally": [[20, "building-docs-locally"]], "Building a Graph Convolutional Network Using Sparse Matrices": [[759, null]], "Building and Testing": [[20, "building-and-testing"]], "CFConv": [[334, null]], "CLUSTERDataset": [[143, null]], "CPU Best Practices": [[776, null]], "CSVDataset": [[144, null]], "Capsule Network": [[801, null]], "Chain-up LGNN abstractions as an LGNN layer": [[791, "chain-up-lgnn-abstractions-as-an-lgnn-layer"]], "Chain-up LGNN layers": [[791, "chain-up-lgnn-layers"]], "ChameleonDataset": [[145, null]], "Chapter 1: Graph": [[641, null]], "Chapter 2: Message Passing": [[649, null]], "Chapter 3: Building GNN Modules": [[664, null]], "Chapter 4: Graph Data Pipeline": [[628, null]], "Chapter 5: Training Graph Neural Networks": [[668, null]], "Chapter 6: Stochastic Training on Large Graphs": [[654, null]], "Chapter 7: Distributed Training": [[635, null]], "Chapter 8: Mixed Precision Training": [[663, null]], "ChebConv": [[303, null], [335, null], [407, null]], "Chunked Graph Format": [[639, "chunked-graph-format"]], "CiteseerGraphDataset": [[146, null]], "ClusterGCNSampler": [[199, null]], "CoauthorCSDataset": [[147, null]], "CoauthorPhysicsDataset": [[148, null]], "Coding styles": [[20, "coding-styles"]], "Comma Separated Values (CSV)": [[643, "comma-separated-values-csv"], [647, "comma-separated-values-csv"], [727, "comma-separated-values-csv"], [731, "comma-separated-values-csv"]], "Community detection": [[791, "community-detection"]], "Community detection in a supervised setting": [[791, "community-detection-in-a-supervised-setting"]], "Completing f(x, y)": [[791, "completing-f-x-y"]], "Compose": [[598, null]], "Computation on a Batched Graph": [[671, "computation-on-a-batched-graph"]], "Computation times": [[767, null], [775, null], [778, null], [782, null], [788, null], [794, null], [797, null], [800, null], [804, null], [806, null], [810, null]], "Computing with DGLGraph": [[1, "computing-with-dglgraph"]], "Conclusion": [[13, "conclusion"], [784, "conclusion"], [785, "conclusion"]], "Containers": [[21, "containers"]], "Contribute to DGL": [[20, null]], "Contributing Code Changes": [[20, "contributing-code-changes"]], "Contributing Core Features": [[20, "contributing-core-features"]], "Contributing Documentations": [[20, "contributing-documentations"]], "Contributing Editorial Changes via GitHub Web Interface": [[20, "contributing-editorial-changes-via-github-web-interface"]], "Contributing New Models as Examples": [[20, "contributing-new-models-as-examples"]], "Contribution": [[757, "contribution"]], "Conv Layers": [[14, "conv-layers"], [15, "conv-layers"], [16, "conv-layers"]], "Converting Heterogeneous Graphs to Homogeneous Graphs": [[647, "converting-heterogeneous-graphs-to-homogeneous-graphs"]], "Cora": [[792, "cora"]], "Cora dataset": [[791, "cora-dataset"]], "CoraFullDataset": [[149, null]], "CoraGraphDataset": [[150, null]], "CornellDataset": [[151, null]], "Create graph and model": [[790, "create-graph-and-model"]], "Creating Dataset from CSV via CSVDataset": [[773, "creating-dataset-from-csv-via-csvdataset"]], "Creating Graphs from External Libraries": [[643, "creating-graphs-from-external-libraries"]], "Creating a DGL Sparse Matrix": [[764, "Creating-a-DGL-Sparse-Matrix"]], "Creating a Dataset for Graph Classification from CSV": [[773, "creating-a-dataset-for-graph-classification-from-csv"]], "Creating a Dataset for Node Classification or Link Prediction from CSV": [[773, "creating-a-dataset-for-node-classification-or-link-prediction-from-csv"]], "Creating a Heterogeneous Graph": [[647, "creating-a-heterogeneous-graph"]], "Creation Ops": [[11, "creation-ops"]], "CuGraph Conv Layers": [[15, "cugraph-conv-layers"]], "CuGraphGATConv": [[336, null]], "CuGraphRelGraphConv": [[337, null]], "CuGraphSAGEConv": [[338, null]], "Custom Data Parser": [[631, "custom-data-parser"]], "DGL Binary Format": [[643, "dgl-binary-format"], [647, "dgl-binary-format"]], "DGL Bipartite Graph Introduction": [[786, "dgl-bipartite-graph-introduction"]], "DGL Built-in Function": [[5, "dgl-built-in-function"]], "DGL Foreign Function Interface (FFI)": [[21, null]], "DGL Graph Construction": [[769, "dgl-graph-construction"]], "DGL \u4e8c\u8fdb\u5236\u683c\u5f0f": [[686, "dgl"]], "DGL \ub370\uc774\ud130 \ub85c\ub354\uc5d0\uc11c GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc0ac\uc6a9\ud558\uae30": [[742, "dgl-gpu"]], "DGL \ubc14\uc774\ub108\ub9ac \ud3ec\uba67": [[727, "dgl"], [731, "dgl"]], "DGL \ubd84\uc0b0 \ubaa8\ub4c8 \ucd08\uae30\ud654": [[721, "dgl"]], "DGLDataset": [[152, null]], "DGLDataset Object Overview": [[773, "dgldataset-object-overview"]], "DGL\u4e8c\u8fdb\u5236\u683c\u5f0f": [[690, "dgl"]], "DGL\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": [[681, "dgl"]], "DGMG: Optimization objective": [[798, "dgmg-optimization-objective"]], "DGMG: The implementation": [[798, "dgmg-the-implementation"]], "DGMG: The main flow": [[798, "dgmg-the-main-flow"]], "DGNConv": [[339, null]], "Data Loader Preparation": [[807, "data-loader-preparation"]], "Data Loading": [[671, "data-loading"]], "Data Repository": [[22, "data-repository"]], "Data folder structure": [[631, "data-folder-structure"]], "Data hosting": [[20, "data-hosting"]], "DataLoader": [[200, null]], "DataLoaders": [[3, "dataloaders"]], "Dataset adapters": [[2, "dataset-adapters"]], "Dataset of a single feature-less graph": [[631, "dataset-of-a-single-feature-less-graph"]], "Dataset of a single graph with features and labels": [[631, "dataset-of-a-single-graph-with-features-and-labels"]], "Dataset of a single heterogeneous graph": [[631, "dataset-of-a-single-heterogeneous-graph"]], "Dataset of multiple graphs": [[631, "dataset-of-multiple-graphs"]], "DeepWalk": [[325, null]], "Define Model": [[772, "define-model"]], "Define a GNN model": [[779, "define-a-gnn-model"], [780, "define-a-gnn-model"]], "Define a GraphSAGE model": [[771, "define-a-graphsage-model"]], "Define a neighborhood sampler and data loader": [[656, "define-a-neighborhood-sampler-and-data-loader"], [661, "define-a-neighborhood-sampler-and-data-loader"]], "Define a neighborhood sampler and data loader with negative sampling": [[659, "define-a-neighborhood-sampler-and-data-loader-with-negative-sampling"]], "Defining Data Loader": [[772, "defining-data-loader"]], "Defining Model": [[784, "defining-model"], [808, "defining-model"]], "Defining Model for Node Representation": [[785, "defining-model-for-node-representation"]], "Defining Neighbor Sampler and Data Loader in DGL": [[784, "defining-neighbor-sampler-and-data-loader-in-dgl"], [785, "defining-neighbor-sampler-and-data-loader-in-dgl"]], "Defining Training Loop": [[784, "defining-training-loop"], [785, "defining-training-loop"]], "Defining Training Procedure": [[808, "defining-training-procedure"]], "Defining a Graph Convolutional Network (GCN)": [[768, "defining-a-graph-convolutional-network-gcn"]], "Defining new types": [[21, "defining-new-types"]], "Defining the Score Predictor for Edges": [[785, "defining-the-score-predictor-for-edges"]], "Degree Bucketing for Message Passing with User Defined Functions": [[19, "degree-bucketing-for-message-passing-with-user-defined-functions"]], "DegreeEncoder": [[384, null], [391, null]], "Dense Conv Layers": [[14, "dense-conv-layers"], [15, "dense-conv-layers"]], "DenseChebConv": [[304, null], [340, null]], "DenseGraphConv": [[305, null], [341, null]], "DenseSAGEConv": [[306, null], [342, null]], "Description": [[6, "description"], [331, "description"], [332, "description"], [333, "description"], [334, "description"], [339, "description"], [342, "description"], [342, "id1"], [343, "description"], [345, "description"], [346, "description"], [347, "description"], [347, "id1"], [348, "description"], [349, "description"], [349, "id1"], [350, "description"], [350, "id1"], [351, "description"], [351, "id1"], [352, "description"], [354, "description"], [354, "id1"], [355, "description"], [355, "id1"], [356, "description"], [356, "id1"], [359, "description"], [360, "description"], [362, "description"], [362, "id1"], [363, "description"], [363, "id1"], [364, "description"], [364, "id1"], [365, "description"], [366, "description"], [366, "id1"], [398, "description"], [398, "id1"], [399, "description"], [399, "id1"], [400, "description"], [402, "description"], [402, "id1"]], "Device Control": [[1, "device-control"]], "Diagonal Matrix": [[764, "Diagonal-Matrix"]], "DistEdgeDataLoader": [[201, null]], "DistGraph creation": [[636, "distgraph-creation"]], "DistGraph \uc0dd\uc131": [[721, "distgraph"]], "DistNodeDataLoader": [[202, null]], "Distributed DataLoader": [[4, "distributed-dataloader"]], "Distributed DistEmbedding": [[636, "distributed-distembedding"]], "Distributed Graph": [[4, "distributed-graph"]], "Distributed Graph Sampling Operators": [[4, "distributed-graph-sampling-operators"]], "Distributed Link Prediction": [[780, null]], "Distributed Node Classification": [[779, null]], "Distributed Node Embedding": [[4, "distributed-node-embedding"]], "Distributed Process Group Initialization": [[807, "distributed-process-group-initialization"]], "Distributed Sampling": [[4, "distributed-sampling"]], "Distributed Tensor": [[4, "distributed-tensor"], [636, "distributed-tensor"]], "Distributed embedding optimizer": [[4, "distributed-embedding-optimizer"]], "Distributed graph": [[636, "distributed-graph"]], "Distributed mini-batch sampler": [[779, "distributed-mini-batch-sampler"], [780, "distributed-mini-batch-sampler"]], "Distributed mode vs. standalone mode": [[636, "distributed-mode-vs-standalone-mode"]], "Distributed sampling": [[636, "distributed-sampling"]], "Distributed training": [[781, null]], "Distributed training script": [[779, "distributed-training-script"], [780, "distributed-training-script"]], "Distributed workload split": [[4, "distributed-workload-split"]], "Distributed \uadf8\ub798\ud504": [[721, "distributed"]], "DotGatConv": [[343, null]], "DropEdge": [[599, null]], "DropNode": [[600, null]], "During Preprocessing": [[637, "during-preprocessing"]], "EGATConv": [[344, null]], "EGNNConv": [[345, null]], "EGTLayer": [[385, null], [392, null]], "Edge Prediction Datasets": [[2, "edge-prediction-datasets"]], "Edge Type Subgraph": [[647, "edge-type-subgraph"]], "Edge-wise User-defined Function": [[19, "edge-wise-user-defined-function"]], "EdgeConv": [[307, null], [346, null]], "EdgeData": [[631, "edgedata"]], "EdgeGATConv": [[347, null]], "EdgePredictor": [[398, null]], "EdgeWeightNorm": [[348, null]], "Element-wise functions": [[764, "Element-wise-functions"]], "Elementwise Operators": [[11, "elementwise-operators"]], "Elementwise operations": [[764, "Elementwise-operations"]], "Enabling Prefetching in Custom Samplers": [[662, "enabling-prefetching-in-custom-samplers"]], "Enabling Prefetching with DGL\u2019s Builtin Samplers": [[662, "enabling-prefetching-with-dgl-s-builtin-samplers"]], "Encoding a dynamic graph": [[798, "encoding-a-dynamic-graph"]], "End-to-End Mixed Precision Training": [[663, "end-to-end-mixed-precision-training"]], "End-to-End Mixed Precision \ud559\uc2b5": [[747, "end-to-end-mixed-precision"]], "Environment Variables": [[22, null]], "Equation (1)": [[792, "equation-1"]], "Equation (2)": [[792, "equation-2"]], "Equation (3) & (4)": [[792, "equation-3-4"]], "Evaluating Performance with Link Prediction (Optional)": [[785, "evaluating-performance-with-link-prediction-optional"]], "Evaluating Performance with Unsupervised Learning (Optional)": [[785, "evaluating-performance-with-unsupervised-learning-optional"]], "Even more customization by user-defined function": [[770, "even-more-customization-by-user-defined-function"]], "Example: MAG240M-LSC": [[639, "example-mag240m-lsc"]], "Examples on a heterogeneous graph": [[299, "examples-on-a-heterogeneous-graph"]], "Examples on a homogeneous graph": [[299, "examples-on-a-homogeneous-graph"]], "Exclude Edges During Sampling": [[655, "exclude-edges-during-sampling"]], "Execute on specific edges": [[802, "execute-on-specific-edges"]], "Exercise #1": [[764, "Exercise-#1"]], "Exercise #2": [[764, "Exercise-#2"]], "FB15k237Dataset": [[153, null]], "FB15kDataset": [[154, null]], "FakeNewsDataset": [[155, null]], "Farthest Point Sampler": [[6, "farthest-point-sampler"]], "FeatMask": [[601, null]], "FlickrDataset": [[156, null]], "For heterogeneous graphs": [[656, "for-heterogeneous-graphs"], [659, "for-heterogeneous-graphs"], [661, "for-heterogeneous-graphs"]], "FraudAmazonDataset": [[157, null]], "FraudDataset": [[158, null]], "FraudYelpDataset": [[159, null]], "Frequently Asked Questions (FAQ)": [[23, null]], "Full R-GCN model defined": [[790, "full-r-gcn-model-defined"]], "Full YAML Specification": [[631, "full-yaml-specification"]], "Further Readings": [[655, "further-readings"]], "GAT in DGL": [[792, "gat-in-dgl"]], "GATConv": [[308, null], [349, null], [408, null]], "GATv2Conv": [[350, null]], "GCN from the perspective of message passing": [[789, "gcn-from-the-perspective-of-message-passing"]], "GCN implementation with DGL": [[789, "gcn-implementation-with-dgl"]], "GCN in one formula": [[789, "gcn-in-one-formula"]], "GCN2Conv": [[351, null]], "GCNNorm": [[602, null]], "GDC": [[603, null]], "GDELTDataset": [[160, null]], "GINConv": [[309, null], [352, null], [409, null]], "GINDataset": [[161, null]], "GINEConv": [[353, null]], "GMMConv": [[310, null], [354, null]], "GNNExplainer": [[367, null]], "GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub7ec\ub97c DGL \ud568\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30": [[742, "gpu-dgl"]], "GSDDMM functions": [[8, "gsddmm-functions"]], "GSpMM functions": [[8, "gspmm-functions"]], "GatedGraphConv": [[311, null], [355, null]], "GatherMM and SegmentMM Module": [[8, "gathermm-and-segmentmm-module"]], "General development process": [[20, "general-development-process"]], "Generative Models of Graphs": [[798, null]], "Generative models": [[799, null], [805, "generative-models"]], "Get training and validation node IDs": [[779, "get-training-and-validation-node-ids"], [780, "get-training-and-validation-node-ids"]], "Getting Started": [[757, "getting-started"]], "Git setup (for developers)": [[20, "git-setup-for-developers"]], "Global Configurations": [[22, "global-configurations"]], "Global Pooling Layers": [[14, "global-pooling-layers"], [15, "global-pooling-layers"], [16, "global-pooling-layers"]], "GlobalAttentionPooling": [[319, null], [375, null], [415, null]], "GlobalUniform": [[216, null]], "Graph Convolutional Layer": [[759, "Graph-Convolutional-Layer"]], "Graph Convolutional Network": [[789, null]], "Graph Create Ops": [[0, "graph-create-ops"]], "Graph Diffusion": [[760, "Graph-Diffusion"]], "Graph Diffusion in GNNs": [[760, "Graph-Diffusion-in-GNNs"]], "Graph Diffusion in Graph Neural Networks": [[760, null]], "Graph Partition Utilities": [[0, "graph-partition-utilities"]], "Graph Positional Encoding Ops:": [[0, "graph-positional-encoding-ops"]], "Graph Prediction Datasets": [[2, "graph-prediction-datasets"]], "Graph Readout": [[671, "graph-readout"]], "Graph Transform Ops": [[0, "graph-transform-ops"]], "Graph Transformations": [[769, "graph-transformations"]], "Graph Transformer Layer": [[761, "Graph-Transformer-Layer"]], "Graph Transformer Model": [[761, "Graph-Transformer-Model"]], "Graph Transformer in a Nutshell": [[761, null]], "Graph Traversal & Message Propagation": [[0, "graph-traversal-message-propagation"]], "Graph building": [[802, "graph-building"]], "Graph checking and graph type specification": [[666, "graph-checking-and-graph-type-specification"]], "Graph embedding": [[798, "graph-embedding"]], "Graph neural networks and its variants": [[793, null], [805, "graph-neural-networks-and-its-variants"]], "Graph partition book": [[4, "graph-partition-book"]], "Graph structure": [[802, "graph-structure"]], "GraphConv": [[312, null], [356, null], [410, null]], "GraphData": [[631, "graphdata"]], "GraphDataLoader": [[203, null]], "GraphormerLayer": [[386, null], [393, null]], "GroupRevRes": [[357, null]], "HGTConv": [[358, null]], "Half precision\uc744 \uc0ac\uc6a9\ud55c \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[747, "half-precision"]], "Handle dataset": [[790, "handle-dataset"]], "HeatKernel": [[604, null]], "HeteroEmbedding": [[326, null]], "HeteroGNNExplainer": [[368, null]], "HeteroGraphConv": [[300, null], [327, null], [416, null]], "HeteroGraphConv implementation logic:": [[667, "heterographconv-implementation-logic"]], "HeteroGraphConv \uad6c\ud604 \ub85c\uc9c1:": [[751, "heterographconv"]], "HeteroGraphConv\u7684\u5b9e\u73b0\u903b\u8f91": [[707, "heterographconv"]], "HeteroLinear": [[328, null]], "HeteroSubgraphX": [[369, null]], "Heterogeneous Graphs": [[668, "heterogeneous-graphs"]], "Heterogeneous Learning Modules": [[14, "heterogeneous-learning-modules"], [15, "heterogeneous-learning-modules"], [16, "heterogeneous-learning-modules"]], "Heterogeneous graph": [[669, "heterogeneous-graph"], [671, "heterogeneous-graph"], [673, "heterogeneous-graph"]], "Heterogeneous graphs": [[660, "heterogeneous-graphs"], [672, "heterogeneous-graphs"]], "Heterogeneous \uadf8\ub798\ud504": [[752, "heterogeneous"], [753, "heterogeneous"], [754, "heterogeneous"], [756, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\ub4e4": [[740, "heterogeneous"], [740, "id5"], [745, "heterogeneous"], [755, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \ub178\ub4dc/\uc5d0\uc9c0 \ud53c\ucc98\ub4e4 \uc0dd\uc131\ud558\uae30": [[723, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uacbd\uc6b0": [[741, "heterogeneous"], [744, "heterogeneous"], [746, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uc5d0\uc9c0\ub4e4\uc5d0 \ub300\ud55c \uc5d0\uc9c0 \ud0c0\uc785 \uc608\uce21\ud558\uae30": [[753, "id3"]], "Homogeneous \uadf8\ub798\ud504, \uc774\ubd84 \uadf8\ub798\ud504(bipartite graph), \uadf8\ub9ac\uace0 MFG\ub97c \uc704\ud55c \ubaa8\ub4c8 \uc791\uc131\ud558\uae30": [[745, "homogeneous-bipartite-graph-mfg"]], "Homophily Measures": [[0, "homophily-measures"]], "How DGL Handles Computation Dependency": [[784, "how-dgl-handles-computation-dependency"]], "How DGL implements Transformer with a graph neural network": [[802, "how-dgl-implements-transformer-with-a-graph-neural-network"]], "How Does DGL Represent A Graph?": [[769, null]], "Hyper-treading": [[776, "hyper-treading"]], "Hypergraph Neural Network (HGNN) Layer": [[762, "Hypergraph-Neural-Network-(HGNN)-Layer"]], "Hypergraph Neural Networks": [[762, null]], "Hypergraphs": [[762, "Hypergraphs"]], "ICEWS18Dataset": [[162, null]], "ID Conversion Utilities": [[637, "id-conversion-utilities"]], "ID mapping": [[639, "id-mapping"]], "ID \ub9e4\ud551": [[723, "id"]], "Implement LGNN in DGL": [[791, "implement-lgnn-in-dgl"]], "Implement R-GCN in DGL": [[790, "implement-r-gcn-in-dgl"]], "Implementing Offline Inference": [[658, "implementing-offline-inference"]], "Implementing \\text{fuse} as sparse matrix multiplication": [[791, "implementing-text-fuse-as-sparse-matrix-multiplication"]], "Implementing \\text{prev} and \\text{deg} as tensor operation": [[791, "implementing-text-prev-and-text-deg-as-tensor-operation"]], "Implementing \\text{radius} as message passing in DGL": [[791, "implementing-text-radius-as-message-passing-in-dgl"]], "Index": [[757, "index"]], "Inference": [[780, "inference"]], "Initialization": [[4, "initialization"]], "Initialization of the DGL distributed module": [[636, "initialization-of-the-dgl-distributed-module"]], "Initialize network communication": [[779, "initialize-network-communication"], [780, "initialize-network-communication"]], "Initializing a DGL Diagonal Sparse Matrix": [[764, "Initializing-a-DGL-Diagonal-Sparse-Matrix"]], "Input format": [[638, "input-format"]], "Install and Setup": [[758, null]], "Install from Conda or Pip": [[758, "install-from-conda-or-pip"]], "Install from source": [[758, "install-from-source"]], "Integrated Benchmarks": [[765, "integrated-benchmarks"]], "Intel": [[776, "intel"]], "Introducing attention to GCN": [[792, "introducing-attention-to-gcn"]], "Introduction": [[798, "introduction"]], "Introduction of Neighbor Sampling for GNN Training": [[783, null]], "JSON/GML Format": [[643, "json-gml-format"]], "JSON/GML \u683c\u5f0f": [[686, "json-gml"]], "JSON/GML \ud3ec\uba67": [[727, "json-gml"]], "JumpingKnowledge": [[402, null]], "KHopGraph": [[605, null]], "KNNGraph": [[371, null]], "KarateClubDataset": [[163, null]], "Key ideas of Capsule": [[801, "key-ideas-of-capsule"]], "Key ideas of R-GCN": [[790, "key-ideas-of-r-gcn"]], "LabelPropagation": [[403, null]], "LaborSampler": [[204, null]], "LapPE": [[606, null]], "LapPosEncoder": [[394, null]], "Launch the distributed training job": [[779, "launch-the-distributed-training-job"]], "Launching a Persistent Graph Server": [[640, "launching-a-persistent-graph-server"]], "LazyFeature": [[211, null]], "LegacyTUDataset": [[164, null]], "Line Graph Neural Network": [[791, null]], "Line graph neural network key ideas": [[791, "line-graph-neural-network-key-ideas"]], "LineGraph": [[607, null]], "Link Prediction Overview": [[785, "link-prediction-overview"]], "Link Prediction using Graph Neural Networks": [[771, null]], "Linux": [[758, "linux"]], "Load balancing": [[639, "load-balancing"]], "Load partitioned graphs": [[639, "load-partitioned-graphs"]], "Loading Cora Dataset": [[768, "loading-cora-dataset"]], "Loading Data": [[762, "Loading-Data"], [772, "loading-data"]], "Loading Dataset": [[784, "loading-dataset"], [785, "loading-dataset"], [808, "loading-dataset"]], "Loading Graphs from Disk": [[643, "loading-graphs-from-disk"]], "Loading Heterographs from Disk": [[647, "loading-heterographs-from-disk"]], "Loading and Saving Graphs": [[769, "loading-and-saving-graphs"]], "Loading graph and features": [[771, "loading-graph-and-features"]], "METIS partition algorithm": [[638, "metis-partition-algorithm"]], "MUTAGDataset": [[165, null]], "MXNet backend": [[758, "mxnet-backend"]], "Main Function for Each Process": [[807, "main-function-for-each-process"]], "Main Loop": [[795, "main-loop"]], "Main class of Transformer graph": [[802, "main-class-of-transformer-graph"]], "Make Your Own Dataset": [[773, null]], "Matrix Multiplication": [[11, "matrix-multiplication"]], "Matrix multiplication": [[764, "Matrix-multiplication"]], "Matrix transformations": [[764, "Matrix-transformations"]], "MaxPooling": [[320, null], [376, null], [417, null]], "Message Passing Paradigm": [[649, "message-passing-paradigm"]], "Message Passing Review": [[783, "message-passing-review"]], "Message Passing with Edge Weights": [[670, "message-passing-with-edge-weights"]], "Message aggregation": [[802, "message-aggregation"]], "Message computation": [[802, "message-computation"]], "Message functions": [[5, "message-functions"]], "Message passing": [[802, "message-passing"]], "Message passing and GNNs": [[770, "message-passing-and-gnns"]], "Message passing and reducing": [[666, "message-passing-and-reducing"]], "Message-Passing with Half Precision": [[663, "message-passing-with-half-precision"]], "MetaPath2Vec": [[329, null]], "MiniGCDataset": [[166, null]], "Misc": [[1, "misc"]], "Model Definition": [[671, "model-definition"]], "Model Implementation Difference from Node Classification": [[669, "model-implementation-difference-from-node-classification"]], "Model Initialization": [[807, "model-initialization"]], "Model Overview": [[789, "model-overview"]], "Model implementation": [[801, "model-implementation"]], "More customization": [[770, "more-customization"]], "Multi-head attention": [[792, "multi-head-attention"], [802, "multi-head-attention"]], "Multi-head attention layer": [[802, "multi-head-attention-layer"]], "MultiLayerFullNeighborSampler": [[205, null]], "Mutating topology": [[1, "mutating-topology"]], "NFS client side setup (ubuntu only)": [[779, "nfs-client-side-setup-ubuntu-only"]], "NFS server side setup (ubuntu only)": [[779, "nfs-server-side-setup-ubuntu-only"]], "NNConv": [[313, null], [359, null]], "Negative Samplers for Link Prediction": [[3, "negative-samplers-for-link-prediction"]], "Negative sampling": [[10, "negative-sampling"]], "Negative \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[744, "negative"]], "Neighbor Matching": [[6, "neighbor-matching"]], "Neighbor Sampling Overview": [[783, "neighbor-sampling-overview"]], "Neighbor sampling": [[10, "neighbor-sampling"]], "NeighborSampler": [[206, null]], "Network Embedding Modules": [[15, "network-embedding-modules"]], "Node Classification with DGL": [[768, null]], "Node Prediction Datasets": [[2, "node-prediction-datasets"]], "Node embedding optimizer": [[9, "node-embedding-optimizer"]], "Node-wise User-defined Function": [[19, "node-wise-user-defined-function"]], "NodeData": [[631, "nodedata"]], "NodeEmbedding": [[401, null]], "NodeShuffle": [[608, null]], "Non-linear activation functions": [[11, "non-linear-activation-functions"], [764, "Non-linear-activation-functions"]], "One layer in LGNN, algorithm structure": [[791, "one-layer-in-lgnn-algorithm-structure"]], "OpenMP settings": [[776, "openmp-settings"]], "Operations on Sparse Matrix": [[764, "Operations-on-Sparse-Matrix"]], "Operators": [[11, "operators"]], "Output format": [[638, "output-format"]], "Overview": [[668, "overview"], [669, "overview"], [671, "overview"], [672, "overview"], [673, "overview"]], "Overview of Graph Classification with GNN": [[772, "overview-of-graph-classification-with-gnn"]], "Overview of Link Prediction with GNN": [[771, "overview-of-link-prediction-with-gnn"]], "Overview of Neighborhood Sampling Approaches": [[654, "overview-of-neighborhood-sampling-approaches"]], "Overview of Node Classification with GNN": [[768, "overview-of-node-classification-with-gnn"]], "PATTERNDataset": [[167, null]], "PNAConv": [[360, null]], "PPIDataset": [[168, null]], "PPR": [[609, null]], "Paper Study with DGL": [[805, null]], "ParMETIS Installation": [[638, "parmetis-installation"]], "ParMETIS \uacb0\uacfc\ub4e4\uc744 DGLGraph\ub85c \ubcc0\ud658\ud558\uae30": [[723, "parmetis-dglgraph"]], "ParMETIS \uc124\uce58": [[723, "parmetis"]], "ParMETIS \uc2e4\ud589\ud558\uae30 \ubc0f \uacb0\uacfc \ud3ec\uba67\ub4e4": [[723, "id9"]], "ParMETIS\ub97c \uc704\ud55c \uc785\ub825 \ud3ec\uba67": [[723, "id8"]], "Parallel METIS partitioning": [[638, "parallel-metis-partitioning"]], "Partition": [[4, "partition"]], "Partition a graph": [[779, "partition-a-graph"], [780, "partition-a-graph"]], "PathEncoder": [[387, null], [395, null]], "PerSourceUniform": [[217, null]], "Performance Benchmarks": [[765, null]], "Positive graph, negative graph, and apply_edges": [[771, "positive-graph-negative-graph-and-apply-edges"]], "Predicting Edge Type of an Existing Edge on a Heterogeneous Graph": [[669, "predicting-edge-type-of-an-existing-edge-on-a-heterogeneous-graph"]], "Prepare training and testing sets": [[771, "prepare-training-and-testing-sets"]], "Preprocessing and postprocessing": [[802, "preprocessing-and-postprocessing"]], "Processing Graph Classification datasets": [[633, "processing-graph-classification-datasets"]], "Processing Node Classification datasets": [[633, "processing-node-classification-datasets"]], "Processing dataset for Link Prediction datasets": [[633, "processing-dataset-for-link-prediction-datasets"]], "Protein-protein interaction (PPI) networks": [[792, "protein-protein-interaction-ppi-networks"]], "PubmedGraphDataset": [[169, null]], "Put everything together": [[792, "put-everything-together"]], "Put it all together": [[802, "put-it-all-together"]], "Putting it together": [[795, "putting-it-together"], [798, "putting-it-together"]], "PyTorch backend": [[758, "pytorch-backend"]], "QM7bDataset": [[170, null]], "QM9Dataset": [[171, null]], "QM9EdgeDataset": [[172, null]], "Querying Graph Structures": [[769, "querying-graph-structures"]], "Querying and manipulating batch information": [[1, "querying-and-manipulating-batch-information"]], "Querying and manipulating node/edge ID type": [[1, "querying-and-manipulating-node-edge-id-type"]], "Querying and manipulating sparse format": [[1, "querying-and-manipulating-sparse-format"]], "Querying graph structure": [[1, "querying-graph-structure"]], "Querying metagraph structure": [[1, "querying-metagraph-structure"]], "Quickstart": [[764, null]], "R-GCN layers": [[790, "r-gcn-layers"]], "RadiusGraph": [[372, null]], "Random walk": [[10, "random-walk"]], "RandomWalkPE": [[610, null]], "RedditDataset": [[173, null]], "Reduce functions": [[5, "reduce-functions"]], "Reduce operations": [[764, "Reduce-operations"]], "Reference to the distributed graph": [[779, "reference-to-the-distributed-graph"], [780, "reference-to-the-distributed-graph"]], "RelGraphConv": [[314, null], [361, null], [411, null]], "Relation with Message Passing APIs": [[8, "relation-with-message-passing-apis"]], "Relational Graph Convolutional Network": [[790, null]], "RemoveSelfLoop": [[611, null]], "Removing edges in the minibatch from the original graph for neighbor sampling": [[656, "removing-edges-in-the-minibatch-from-the-original-graph-for-neighbor-sampling"]], "Resources": [[766, null]], "Results": [[13, "results"]], "Revisit classic models from a graph perspective": [[803, null], [805, "revisit-classic-models-from-a-graph-perspective"]], "Roadmap": [[628, "roadmap"], [641, "roadmap"], [649, "roadmap"], [654, "roadmap"], [664, "roadmap"], [668, "roadmap"]], "RowFeatNormalizer": [[612, null]], "Run ParMETIS and output format": [[638, "run-parmetis-and-output-format"]], "SAGEConv": [[315, null], [362, null], [412, null]], "SAINTSampler": [[207, null]], "SBMMixtureDataset": [[174, null]], "SGConv": [[316, null], [363, null], [413, null]], "SIGNDiffusion": [[613, null]], "SSH Access": [[779, "ssh-access"]], "SSTDataset": [[175, null]], "SVDPE": [[614, null]], "Sampler": [[208, null]], "Sampler Transformations": [[3, "sampler-transformations"]], "Sampler for Heterogeneous Graphs": [[655, "sampler-for-heterogeneous-graphs"]], "Samplers": [[3, "samplers"]], "Score Modules for Link Prediction and Knowledge Graph Completion": [[15, "score-modules-for-link-prediction-and-knowledge-graph-completion"]], "Segment Reduce Module": [[8, "segment-reduce-module"]], "SegmentedKNNGraph": [[373, null]], "Sequential": [[324, null], [404, null]], "Set up distributed training environment": [[779, "set-up-distributed-training-environment"], [780, "set-up-distributed-training-environment"]], "Set2Set": [[321, null], [377, null]], "SetTransformerDecoder": [[378, null]], "SetTransformerEncoder": [[379, null]], "ShaDowKHopSampler": [[209, null]], "Simple implementation": [[802, "simple-implementation"]], "Single Machine Multi-GPU Minibatch Graph Classification": [[807, null]], "Single Machine Multi-GPU Minibatch Node Classification": [[808, null]], "Softmax": [[764, "Softmax"]], "SortPooling": [[322, null], [380, null], [418, null]], "Sparse Matrix": [[764, "Sparse-Matrix"]], "Sparse Multi-head Attention": [[761, "Sparse-Multi-head-Attention"]], "Sparse matrix class": [[11, "sparse-matrix-class"]], "SpatialEncoder": [[388, null], [396, null]], "SpatialEncoder3d": [[389, null], [397, null]], "Spawning Trainer Processes": [[808, "spawning-trainer-processes"]], "Specification": [[639, "specification"]], "Speeding up with built-in functions": [[802, "speeding-up-with-built-in-functions"]], "Split and Load Partitions": [[4, "split-and-load-partitions"]], "Split workloads": [[636, "split-workloads"]], "SquirrelDataset": [[176, null]], "Step 1: Batching": [[795, "step-1-batching"]], "Step 1: Setup and graph initialization": [[801, "step-1-setup-and-graph-initialization"]], "Step 2: Define message passing functions": [[801, "step-2-define-message-passing-functions"]], "Step 2: Tree-LSTM cell with message-passing APIs": [[795, "step-2-tree-lstm-cell-with-message-passing-apis"]], "Step 3: Define traversal": [[795, "step-3-define-traversal"]], "Step 3: Testing": [[801, "step-3-testing"]], "Step.1 Graph Partitioning": [[639, "step-1-graph-partitioning"]], "Step.2 Data Dispatching": [[639, "step-2-data-dispatching"]], "Stochastic Training of GNN for Link Prediction": [[785, null]], "Stochastic Training of GNNs": [[787, null]], "Subgraph Extraction Ops": [[0, "subgraph-extraction-ops"]], "SubgraphX": [[370, null]], "Subset": [[186, null]], "SumPooling": [[323, null], [381, null], [419, null]], "Supervised community detection task with the Cora dataset": [[791, "supervised-community-detection-task-with-the-cora-dataset"]], "Supported Data types": [[8, "supported-data-types"]], "Supporting Multiple Platforms": [[20, "supporting-multiple-platforms"]], "System requirements": [[758, "system-requirements"]], "TAGConv": [[317, null], [364, null]], "TUDataset": [[177, null]], "TWIRLSConv": [[365, null]], "TWIRLSUnfoldingAndAttention": [[366, null]], "Task and the dataset": [[802, "task-and-the-dataset"]], "Tensorflow backend": [[758, "tensorflow-backend"]], "TexasDataset": [[178, null]], "The DGMG class": [[798, "the-dgmg-class"]], "The second task, link prediction": [[790, "the-second-task-link-prediction"]], "The task and the dataset": [[795, "the-task-and-the-dataset"]], "Tips for making chunked graph data": [[639, "tips-for-making-chunked-graph-data"]], "ToLevi": [[615, null]], "ToSimple": [[616, null]], "Top-level": [[631, "top-level"]], "Training": [[760, "Training"], [761, "Training"], [802, "training"]], "Training GNN with Neighbor Sampling for Node Classification": [[784, null]], "Training Loop": [[656, "training-loop"], [661, "training-loop"], [671, "training-loop"], [772, "training-loop"]], "Training a GNN for Graph Classification": [[772, null]], "Training and Evaluation": [[762, "Training-and-Evaluation"]], "Training and inference": [[791, "training-and-inference"]], "Training loop": [[659, "training-loop"], [669, "training-loop"], [672, "training-loop"], [673, "training-loop"], [770, "training-loop"], [771, "training-loop"], [779, "training-loop"], [780, "training-loop"], [790, "training-loop"]], "Training on CPUs": [[777, null]], "Training on GPU": [[768, "training-on-gpu"]], "Training on Multiple GPUs": [[809, null]], "Training the GCN": [[759, "Training-the-GCN"], [768, "training-the-gcn"]], "TransE": [[399, null]], "TransR": [[400, null]], "Transformer as a Graph Neural Network": [[802, null]], "Transforming graph": [[1, "transforming-graph"]], "Tree-LSTM in DGL": [[795, null]], "TreeCycleDataset": [[179, null]], "TreeGridDataset": [[180, null]], "TypedLinear": [[330, null]], "UVA and GPU support for PinSAGESampler/RandomWalkNeighborSampler": [[657, "uva-and-gpu-support-for-pinsagesampler-randomwalkneighborsampler"]], "Understand Graph Attention Network": [[792, null]], "Uniform": [[218, null]], "Unit tests": [[20, "unit-tests"]], "Update feature after reducing for output": [[666, "update-feature-after-reducing-for-output"]], "Update node embeddings via graph propagation": [[798, "update-node-embeddings-via-graph-propagation"]], "User Guide": [[648, null]], "User-defined Functions": [[19, null]], "Using CUDA UVA-based neighborhood sampling in DGL data loaders": [[657, "using-cuda-uva-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using GPU-based neighbor sampling with DGL functions": [[657, "using-gpu-based-neighbor-sampling-with-dgl-functions"]], "Using GPU-based neighborhood sampling in DGL data loaders": [[657, "using-gpu-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using NN Modules with Edge Weights": [[670, "using-nn-modules-with-edge-weights"]], "Using Node/edge features": [[1, "using-node-edge-features"]], "Utilities": [[0, "utilities"], [2, "utilities"]], "Utility Class and Functions for Feature Prefetching": [[3, "utility-class-and-functions-for-feature-prefetching"]], "Utility Modules": [[14, "utility-modules"], [15, "utility-modules"]], "Utility Modules for Graph Transformer": [[15, "utility-modules-for-graph-transformer"]], "Visualization": [[802, "visualization"]], "Visualize training progress": [[791, "visualize-training-progress"]], "Visualizing and understanding attention learned": [[792, "visualizing-and-understanding-attention-learned"]], "WN18Dataset": [[181, null]], "WeightAndSum": [[382, null]], "WeightBasis": [[405, null]], "Welcome to Deep Graph Library Tutorials and Documentation": [[757, null]], "What is a line-graph?": [[791, "what-is-a-line-graph"]], "What\u2019s next": [[772, "whats-next"]], "What\u2019s next?": [[768, "whats-next"], [769, "whats-next"], [770, "whats-next"], [783, "whats-next"], [784, "whats-next"], [792, "what-s-next"]], "WikiCSDataset": [[182, null]], "Windows": [[758, "windows"]], "WisconsinDataset": [[183, null]], "Working with Multiple Types": [[647, "working-with-multiple-types"]], "Working with different backends": [[758, "working-with-different-backends"]], "Write your own GNN module": [[770, null]], "Writing GNN Modules for Bipartite Graphs for Stochastic Training": [[786, "writing-gnn-modules-for-bipartite-graphs-for-stochastic-training"]], "Writing GNN Modules for Both Full-graph Training and Stochastic Training": [[786, "writing-gnn-modules-for-both-full-graph-training-and-stochastic-training"]], "Writing GNN Modules for Stochastic GNN Training": [[786, null]], "Writing Neural Network Model": [[671, "writing-neural-network-model"]], "Writing modules that work on homogeneous graphs, bipartite graphs, and MFGs": [[660, "writing-modules-that-work-on-homogeneous-graphs-bipartite-graphs-and-mfgs"]], "Writing neural network model": [[673, "writing-neural-network-model"]], "YelpDataset": [[184, null]], "ZINCDataset": [[185, null]], "add_node_property_split": [[187, null]], "add_nodepred_split": [[188, null]], "check_sha1": [[189, null]], "dgl": [[0, null]], "dgl.DGLGraph": [[1, null]], "dgl.DGLGraph.__getitem__": [[25, null]], "dgl.DGLGraph.add_edges": [[26, null]], "dgl.DGLGraph.add_nodes": [[27, null]], "dgl.DGLGraph.add_self_loop": [[28, null]], "dgl.DGLGraph.adj": [[29, null]], "dgl.DGLGraph.adj_external": [[30, null]], "dgl.DGLGraph.adj_tensors": [[31, null]], "dgl.DGLGraph.adjacency_matrix": [[32, null]], "dgl.DGLGraph.apply_edges": [[33, null]], "dgl.DGLGraph.apply_nodes": [[34, null]], "dgl.DGLGraph.batch_num_edges": [[35, null]], "dgl.DGLGraph.batch_num_nodes": [[36, null]], "dgl.DGLGraph.batch_size": [[37, null]], "dgl.DGLGraph.canonical_etypes": [[38, null]], "dgl.DGLGraph.cpu": [[39, null]], "dgl.DGLGraph.create_formats_": [[40, null]], "dgl.DGLGraph.device": [[41, null]], "dgl.DGLGraph.dstdata": [[42, null]], "dgl.DGLGraph.dstnodes": [[43, null]], "dgl.DGLGraph.dsttypes": [[44, null]], "dgl.DGLGraph.edata": [[45, null]], "dgl.DGLGraph.edge_attr_schemes": [[46, null]], "dgl.DGLGraph.edge_ids": [[47, null]], "dgl.DGLGraph.edge_subgraph": [[48, null]], "dgl.DGLGraph.edge_type_subgraph": [[49, null]], "dgl.DGLGraph.edges": [[50, null]], "dgl.DGLGraph.etypes": [[51, null]], "dgl.DGLGraph.filter_edges": [[52, null]], "dgl.DGLGraph.filter_nodes": [[53, null]], "dgl.DGLGraph.find_edges": [[54, null]], "dgl.DGLGraph.formats": [[55, null]], "dgl.DGLGraph.has_edges_between": [[56, null]], "dgl.DGLGraph.has_nodes": [[57, null]], "dgl.DGLGraph.idtype": [[58, null]], "dgl.DGLGraph.in_degrees": [[59, null]], "dgl.DGLGraph.in_edges": [[60, null]], "dgl.DGLGraph.inc": [[61, null]], "dgl.DGLGraph.incidence_matrix": [[62, null]], "dgl.DGLGraph.int": [[63, null]], "dgl.DGLGraph.is_homogeneous": [[64, null]], "dgl.DGLGraph.is_multigraph": [[65, null]], "dgl.DGLGraph.is_pinned": [[66, null]], "dgl.DGLGraph.is_unibipartite": [[67, null]], "dgl.DGLGraph.line_graph": [[68, null]], "dgl.DGLGraph.local_scope": [[69, null]], "dgl.DGLGraph.long": [[70, null]], "dgl.DGLGraph.metagraph": [[71, null]], "dgl.DGLGraph.multi_update_all": [[72, null]], "dgl.DGLGraph.ndata": [[73, null]], "dgl.DGLGraph.node_attr_schemes": [[74, null]], "dgl.DGLGraph.node_type_subgraph": [[75, null]], "dgl.DGLGraph.nodes": [[76, null]], "dgl.DGLGraph.ntypes": [[77, null]], "dgl.DGLGraph.num_dst_nodes": [[78, null]], "dgl.DGLGraph.num_edges": [[79, null]], "dgl.DGLGraph.num_nodes": [[80, null]], "dgl.DGLGraph.num_src_nodes": [[81, null]], "dgl.DGLGraph.number_of_dst_nodes": [[82, null]], "dgl.DGLGraph.number_of_edges": [[83, null]], "dgl.DGLGraph.number_of_nodes": [[84, null]], "dgl.DGLGraph.number_of_src_nodes": [[85, null]], "dgl.DGLGraph.out_degrees": [[86, null]], "dgl.DGLGraph.out_edges": [[87, null]], "dgl.DGLGraph.pin_memory_": [[88, null]], "dgl.DGLGraph.predecessors": [[89, null]], "dgl.DGLGraph.prop_edges": [[90, null]], "dgl.DGLGraph.prop_nodes": [[91, null]], "dgl.DGLGraph.pull": [[92, null]], "dgl.DGLGraph.push": [[93, null]], "dgl.DGLGraph.remove_edges": [[94, null]], "dgl.DGLGraph.remove_nodes": [[95, null]], "dgl.DGLGraph.remove_self_loop": [[96, null]], "dgl.DGLGraph.reorder_graph": [[97, null]], "dgl.DGLGraph.reverse": [[98, null]], "dgl.DGLGraph.send_and_recv": [[99, null]], "dgl.DGLGraph.set_batch_num_edges": [[100, null]], "dgl.DGLGraph.set_batch_num_nodes": [[101, null]], "dgl.DGLGraph.srcdata": [[102, null]], "dgl.DGLGraph.srcnodes": [[103, null]], "dgl.DGLGraph.srctypes": [[104, null]], "dgl.DGLGraph.subgraph": [[105, null]], "dgl.DGLGraph.successors": [[106, null]], "dgl.DGLGraph.to": [[107, null]], "dgl.DGLGraph.to_canonical_etype": [[108, null]], "dgl.DGLGraph.to_cugraph": [[109, null]], "dgl.DGLGraph.to_simple": [[110, null]], "dgl.DGLGraph.unpin_memory_": [[111, null]], "dgl.DGLGraph.update_all": [[112, null]], "dgl.add_edges": [[113, null]], "dgl.add_nodes": [[114, null]], "dgl.add_reverse_edges": [[115, null]], "dgl.add_self_loop": [[116, null]], "dgl.adj_product_graph": [[117, null]], "dgl.adj_sum_graph": [[118, null]], "dgl.apply_each": [[119, null]], "dgl.batch": [[120, null]], "dgl.bfs_edges_generator": [[121, null]], "dgl.bfs_nodes_generator": [[122, null]], "dgl.bipartite_from_networkx": [[123, null]], "dgl.bipartite_from_scipy": [[124, null]], "dgl.block_to_graph": [[125, null]], "dgl.broadcast_edges": [[126, null]], "dgl.broadcast_nodes": [[127, null]], "dgl.compact_graphs": [[128, null]], "dgl.create_block": [[129, null]], "dgl.data": [[2, null]], "dgl.dataloading": [[3, null]], "dgl.dataloading.BlockSampler": [[198, null]], "dgl.dataloading.as_edge_prediction_sampler": [[210, null]], "dgl.dfs_edges_generator": [[219, null]], "dgl.dfs_labeled_edges_generator": [[220, null]], "dgl.distributed": [[4, null]], "dgl.distributed.edge_split": [[221, null]], "dgl.distributed.find_edges": [[222, null]], "dgl.distributed.in_subgraph": [[223, null]], "dgl.distributed.initialize": [[224, null]], "dgl.distributed.load_partition": [[225, null]], "dgl.distributed.load_partition_book": [[226, null]], "dgl.distributed.load_partition_feats": [[227, null]], "dgl.distributed.node_split": [[228, null]], "dgl.distributed.partition_graph": [[229, null]], "dgl.distributed.sample_etype_neighbors": [[230, null]], "dgl.distributed.sample_neighbors": [[231, null]], "dgl.double_radius_node_labeling": [[232, null]], "dgl.edge_homophily": [[233, null]], "dgl.edge_subgraph": [[234, null]], "dgl.edge_type_subgraph": [[235, null]], "dgl.from_cugraph": [[236, null]], "dgl.from_networkx": [[237, null]], "dgl.from_scipy": [[238, null]], "dgl.function": [[5, null]], "dgl.function.copy_e": [[239, null]], "dgl.function.copy_u": [[240, null]], "dgl.function.e_add_u": [[241, null]], "dgl.function.e_add_v": [[242, null]], "dgl.function.e_div_u": [[243, null]], "dgl.function.e_div_v": [[244, null]], "dgl.function.e_dot_u": [[245, null]], "dgl.function.e_dot_v": [[246, null]], "dgl.function.e_mul_u": [[247, null]], "dgl.function.e_mul_v": [[248, null]], "dgl.function.e_sub_u": [[249, null]], "dgl.function.e_sub_v": [[250, null]], "dgl.function.max": [[251, null]], "dgl.function.mean": [[252, null]], "dgl.function.min": [[253, null]], "dgl.function.sum": [[254, null]], "dgl.function.u_add_e": [[255, null]], "dgl.function.u_add_v": [[256, null]], "dgl.function.u_div_e": [[257, null]], "dgl.function.u_div_v": [[258, null]], "dgl.function.u_dot_e": [[259, null]], "dgl.function.u_dot_v": [[260, null]], "dgl.function.u_mul_e": [[261, null]], "dgl.function.u_mul_v": [[262, null]], "dgl.function.u_sub_e": [[263, null]], "dgl.function.u_sub_v": [[264, null]], "dgl.function.v_add_e": [[265, null]], "dgl.function.v_add_u": [[266, null]], "dgl.function.v_div_e": [[267, null]], "dgl.function.v_div_u": [[268, null]], "dgl.function.v_dot_e": [[269, null]], "dgl.function.v_dot_u": [[270, null]], "dgl.function.v_mul_e": [[271, null]], "dgl.function.v_mul_u": [[272, null]], "dgl.function.v_sub_e": [[273, null]], "dgl.function.v_sub_u": [[274, null]], "dgl.geometry": [[6, null]], "dgl.graph": [[275, null]], "dgl.heterograph": [[276, null]], "dgl.in_subgraph": [[277, null]], "dgl.is_libxsmm_enabled": [[278, null]], "dgl.khop_adj": [[279, null]], "dgl.khop_graph": [[280, null]], "dgl.khop_in_subgraph": [[281, null]], "dgl.khop_out_subgraph": [[282, null]], "dgl.knn_graph": [[283, null]], "dgl.lap_pe": [[284, null]], "dgl.laplacian_lambda_max": [[285, null]], "dgl.line_graph": [[286, null]], "dgl.linkx_homophily": [[287, null]], "dgl.load_graphs": [[288, null]], "dgl.max_edges": [[289, null]], "dgl.max_nodes": [[290, null]], "dgl.mean_edges": [[291, null]], "dgl.mean_nodes": [[292, null]], "dgl.merge": [[293, null]], "dgl.metapath_reachable_graph": [[294, null]], "dgl.metis_partition": [[295, null]], "dgl.metis_partition_assignment": [[296, null]], "dgl.multiprocessing": [[7, null]], "dgl.multiprocessing.pytorch.call_once_and_share": [[297, null]], "dgl.multiprocessing.pytorch.shared_tensor": [[298, null]], "dgl.nn (MXNet)": [[14, null]], "dgl.nn (PyTorch)": [[15, null]], "dgl.nn (TensorFlow)": [[16, null]], "dgl.nn.functional": [[17, null]], "dgl.nn.functional.edge_softmax": [[299, null]], "dgl.node_homophily": [[420, null]], "dgl.node_subgraph": [[421, null]], "dgl.node_type_subgraph": [[422, null]], "dgl.norm_by_dst": [[423, null]], "dgl.ops": [[8, null]], "dgl.ops.copy_e_max": [[424, null]], "dgl.ops.copy_e_mean": [[425, null]], "dgl.ops.copy_e_min": [[426, null]], "dgl.ops.copy_e_sum": [[427, null]], "dgl.ops.copy_u": [[428, null]], "dgl.ops.copy_u_max": [[429, null]], "dgl.ops.copy_u_mean": [[430, null]], "dgl.ops.copy_u_min": [[431, null]], "dgl.ops.copy_u_sum": [[432, null]], "dgl.ops.copy_v": [[433, null]], "dgl.ops.e_add_u": [[434, null]], "dgl.ops.e_add_v": [[435, null]], "dgl.ops.e_div_u": [[436, null]], "dgl.ops.e_div_v": [[437, null]], "dgl.ops.e_dot_u": [[438, null]], "dgl.ops.e_dot_v": [[439, null]], "dgl.ops.e_mul_u": [[440, null]], "dgl.ops.e_mul_v": [[441, null]], "dgl.ops.e_sub_u": [[442, null]], "dgl.ops.e_sub_v": [[443, null]], "dgl.ops.gather_mm": [[444, null]], "dgl.ops.gsddmm": [[445, null]], "dgl.ops.gspmm": [[446, null]], "dgl.ops.segment_mm": [[447, null]], "dgl.ops.segment_reduce": [[448, null]], "dgl.ops.u_add_e": [[449, null]], "dgl.ops.u_add_e_max": [[450, null]], "dgl.ops.u_add_e_mean": [[451, null]], "dgl.ops.u_add_e_min": [[452, null]], "dgl.ops.u_add_e_sum": [[453, null]], "dgl.ops.u_add_v": [[454, null]], "dgl.ops.u_div_e": [[455, null]], "dgl.ops.u_div_e_max": [[456, null]], "dgl.ops.u_div_e_mean": [[457, null]], "dgl.ops.u_div_e_min": [[458, null]], "dgl.ops.u_div_e_sum": [[459, null]], "dgl.ops.u_div_v": [[460, null]], "dgl.ops.u_dot_e": [[461, null]], "dgl.ops.u_dot_v": [[462, null]], "dgl.ops.u_mul_e": [[463, null]], "dgl.ops.u_mul_e_max": [[464, null]], "dgl.ops.u_mul_e_mean": [[465, null]], "dgl.ops.u_mul_e_min": [[466, null]], "dgl.ops.u_mul_e_sum": [[467, null]], "dgl.ops.u_mul_v": [[468, null]], "dgl.ops.u_sub_e": [[469, null]], "dgl.ops.u_sub_e_max": [[470, null]], "dgl.ops.u_sub_e_mean": [[471, null]], "dgl.ops.u_sub_e_min": [[472, null]], "dgl.ops.u_sub_e_sum": [[473, null]], "dgl.ops.u_sub_v": [[474, null]], "dgl.ops.v_add_e": [[475, null]], "dgl.ops.v_add_u": [[476, null]], "dgl.ops.v_div_e": [[477, null]], "dgl.ops.v_div_u": [[478, null]], "dgl.ops.v_dot_e": [[479, null]], "dgl.ops.v_dot_u": [[480, null]], "dgl.ops.v_mul_e": [[481, null]], "dgl.ops.v_mul_u": [[482, null]], "dgl.ops.v_sub_e": [[483, null]], "dgl.ops.v_sub_u": [[484, null]], "dgl.optim": [[9, null]], "dgl.out_subgraph": [[485, null]], "dgl.partition_graph_with_halo": [[486, null]], "dgl.prop_edges": [[487, null]], "dgl.prop_edges_dfs": [[488, null]], "dgl.prop_nodes": [[489, null]], "dgl.prop_nodes_bfs": [[490, null]], "dgl.prop_nodes_topo": [[491, null]], "dgl.radius_graph": [[492, null]], "dgl.rand_bipartite": [[493, null]], "dgl.rand_graph": [[494, null]], "dgl.random_walk_pe": [[495, null]], "dgl.readout_edges": [[496, null]], "dgl.readout_nodes": [[497, null]], "dgl.remove_edges": [[498, null]], "dgl.remove_nodes": [[499, null]], "dgl.remove_self_loop": [[500, null]], "dgl.reorder_graph": [[501, null]], "dgl.reverse": [[502, null]], "dgl.sampling": [[10, null]], "dgl.sampling.PinSAGESampler": [[503, null]], "dgl.sampling.global_uniform_negative_sampling": [[504, null]], "dgl.sampling.node2vec_random_walk": [[505, null]], "dgl.sampling.pack_traces": [[506, null]], "dgl.sampling.random_walk": [[507, null]], "dgl.sampling.sample_labors": [[508, null]], "dgl.sampling.sample_neighbors": [[509, null]], "dgl.sampling.sample_neighbors_biased": [[510, null]], "dgl.sampling.select_topk": [[511, null]], "dgl.save_graphs": [[512, null]], "dgl.seed": [[513, null]], "dgl.segmented_knn_graph": [[514, null]], "dgl.shortest_dist": [[515, null]], "dgl.slice_batch": [[516, null]], "dgl.softmax_edges": [[517, null]], "dgl.softmax_nodes": [[518, null]], "dgl.sort_csc_by_tag": [[519, null]], "dgl.sort_csr_by_tag": [[520, null]], "dgl.sparse.SparseMatrix.T": [[521, null]], "dgl.sparse.SparseMatrix.coalesce": [[522, null]], "dgl.sparse.SparseMatrix.col": [[523, null]], "dgl.sparse.SparseMatrix.coo": [[524, null]], "dgl.sparse.SparseMatrix.cpu": [[525, null]], "dgl.sparse.SparseMatrix.csc": [[526, null]], "dgl.sparse.SparseMatrix.csr": [[527, null]], "dgl.sparse.SparseMatrix.cuda": [[528, null]], "dgl.sparse.SparseMatrix.device": [[529, null]], "dgl.sparse.SparseMatrix.double": [[530, null]], "dgl.sparse.SparseMatrix.dtype": [[531, null]], "dgl.sparse.SparseMatrix.float": [[532, null]], "dgl.sparse.SparseMatrix.has_duplicate": [[533, null]], "dgl.sparse.SparseMatrix.indices": [[534, null]], "dgl.sparse.SparseMatrix.int": [[535, null]], "dgl.sparse.SparseMatrix.long": [[536, null]], "dgl.sparse.SparseMatrix.neg": [[537, null]], "dgl.sparse.SparseMatrix.nnz": [[538, null]], "dgl.sparse.SparseMatrix.reduce": [[539, null]], "dgl.sparse.SparseMatrix.row": [[540, null]], "dgl.sparse.SparseMatrix.shape": [[541, null]], "dgl.sparse.SparseMatrix.smax": [[542, null]], "dgl.sparse.SparseMatrix.smean": [[543, null]], "dgl.sparse.SparseMatrix.smin": [[544, null]], "dgl.sparse.SparseMatrix.softmax": [[545, null]], "dgl.sparse.SparseMatrix.sum": [[546, null]], "dgl.sparse.SparseMatrix.t": [[547, null]], "dgl.sparse.SparseMatrix.to": [[548, null]], "dgl.sparse.SparseMatrix.to_dense": [[549, null]], "dgl.sparse.SparseMatrix.transpose": [[550, null]], "dgl.sparse.SparseMatrix.val": [[551, null]], "dgl.sparse.add": [[552, null]], "dgl.sparse.bsddmm": [[553, null]], "dgl.sparse.bspmm": [[554, null]], "dgl.sparse.diag": [[555, null]], "dgl.sparse.div": [[556, null]], "dgl.sparse.from_coo": [[557, null]], "dgl.sparse.from_csc": [[558, null]], "dgl.sparse.from_csr": [[559, null]], "dgl.sparse.identity": [[560, null]], "dgl.sparse.matmul": [[561, null]], "dgl.sparse.mul": [[562, null]], "dgl.sparse.power": [[563, null]], "dgl.sparse.sddmm": [[564, null]], "dgl.sparse.softmax": [[565, null]], "dgl.sparse.sp_add_v": [[566, null]], "dgl.sparse.sp_broadcast_v": [[567, null]], "dgl.sparse.sp_div_v": [[568, null]], "dgl.sparse.sp_mul_v": [[569, null]], "dgl.sparse.sp_sub_v": [[570, null]], "dgl.sparse.spmatrix": [[571, null]], "dgl.sparse.spmm": [[572, null]], "dgl.sparse.spspmm": [[573, null]], "dgl.sparse.sub": [[574, null]], "dgl.sparse.val_like": [[575, null]], "dgl.sum_edges": [[576, null]], "dgl.sum_nodes": [[577, null]], "dgl.svd_pe": [[578, null]], "dgl.to_bidirected": [[579, null]], "dgl.to_block": [[580, null]], "dgl.to_cugraph": [[581, null]], "dgl.to_double": [[582, null]], "dgl.to_float": [[583, null]], "dgl.to_half": [[584, null]], "dgl.to_heterogeneous": [[585, null]], "dgl.to_homogeneous": [[586, null]], "dgl.to_networkx": [[587, null]], "dgl.to_simple": [[588, null]], "dgl.to_simple_graph": [[589, null]], "dgl.topk_edges": [[590, null]], "dgl.topk_nodes": [[591, null]], "dgl.topological_nodes_generator": [[592, null]], "dgl.transforms": [[18, null]], "dgl.udf.EdgeBatch.batch_size": [[617, null]], "dgl.udf.EdgeBatch.data": [[618, null]], "dgl.udf.EdgeBatch.dst": [[619, null]], "dgl.udf.EdgeBatch.edges": [[620, null]], "dgl.udf.EdgeBatch.src": [[621, null]], "dgl.udf.NodeBatch.batch_size": [[622, null]], "dgl.udf.NodeBatch.data": [[623, null]], "dgl.udf.NodeBatch.mailbox": [[624, null]], "dgl.udf.NodeBatch.nodes": [[625, null]], "dgl.unbatch": [[626, null]], "dgl.use_libxsmm": [[627, null]], "download": [[190, null]], "edges.csv": [[643, "id2"], [686, "id6"], [727, "id6"]], "extract_archive": [[191, null]], "get_download_dir": [[192, null]], "load_info": [[193, null]], "load_labels": [[194, null]], "macOS": [[758, "macos"]], "mask_nodes_by_property": [[195, null]], "nodes.csv": [[643, "id1"], [686, "id5"], [727, "id5"]], "save_info": [[196, null]], "set_dst_lazy_features": [[212, null]], "set_edge_lazy_features": [[213, null]], "set_node_lazy_features": [[214, null]], "set_src_lazy_features": [[215, null]], "split_dataset": [[197, null]], "v0.4.3 Benchmarks": [[765, "v0-4-3-benchmarks"]], "v0.5 Benchmarks": [[765, "v0-5-benchmarks"]], "v0.6 Benchmarks": [[765, "v0-6-benchmarks"]], "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": [[709, "id3"]], "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": [[686, "id2"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": [[686, "id3"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": [[690, "id4"]], "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": [[690, "id3"]], "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": [[710, "id2"]], "\u5206\u5272\u6570\u636e\u96c6": [[681, "id8"]], "\u5206\u5e03\u5f0f\u56fe": [[681, "id1"]], "\u5206\u5e03\u5f0f\u5d4c\u5165": [[681, "id6"]], "\u5206\u5e03\u5f0f\u5f20\u91cf": [[681, "id5"]], "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": [[681, "id2"]], "\u5206\u5e03\u5f0f\u91c7\u6837": [[681, "id7"]], "\u521b\u5efaDistGraph": [[681, "distgraph"]], "\u521b\u5efa\u5f02\u6784\u56fe": [[690, "id2"]], "\u56fe\u8bfb\u51fa": [[711, "id4"]], "\u5728NN\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": [[710, "nn"]], "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": [[709, "id6"]], "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": [[678, "id2"]], "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": [[678, "id3"]], "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": [[678, "id4"]], "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": [[698, "id4"]], "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[699, "id2"], [703, "id2"]], "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": [[698, "guide-cn-minibatch-customizing-neighborhood-sampler-impl"]], "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": [[700, "id2"]], "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe\u3001\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": [[702, "id2"]], "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": [[690, "id6"]], "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": [[699, "id3"]], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": [[703, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[711, "id10"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": [[702, "id1"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": [[699, "id6"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[713, "guide-cn-training-rgcn-node-classification"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[709, "guide-cn-training-edge-classification-heterogeneous-graph"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": [[698, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[712, "id4"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": [[701, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": [[698, "id7"]], "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": [[708, "guide-cn-training-heterogeneous-graph-example"]], "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": [[711, "id6"]], "\u6279\u6b21\u7684\u56fe": [[711, "id3"]], "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": [[698, "id3"]], "\u6570\u636e\u52a0\u8f7d": [[711, "id9"]], "\u672c\u7ae0\u8def\u7ebf\u56fe": [[674, "id2"], [684, "id2"], [692, "id3"], [697, "id3"], [704, "id1"], [708, "id4"]], "\u6982\u8ff0": [[708, "id2"], [709, "id2"], [711, "id2"], [712, "id2"], [713, "id2"]], "\u6a21\u578b\u5b9a\u4e49": [[711, "id7"]], "\u6a21\u578b\u7684\u8bad\u7ec3": [[699, "id5"], [701, "id4"], [703, "id4"], [709, "id4"], [711, "id8"], [712, "id3"], [713, "id4"]], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": [[706, "id2"]], "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[692, "id2"]], "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": [[698, "id2"]], "\u7528\u6237\u6307\u5357": [[691, null]], "\u7b2c1\u7ae0\uff1a\u56fe": [[684, null]], "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[692, null]], "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757": [[704, null]], "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [[674, null]], "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [[708, null]], "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3": [[697, null]], "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3": [[680, null]], "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[701, "id2"]], "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [[711, "id5"], [713, "id3"]], "\u805a\u5408\u540e\uff0c\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": [[706, "id3"]], "\u8bbf\u95ee\u56fe\u7ed3\u6784": [[681, "id3"]], "\u8bbf\u95ee\u8282\u70b9/\u8fb9\u6570\u636e": [[681, "id4"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [[701, "id3"], [703, "guide-cn-minibatch-node-classification-model"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": [[699, "id4"]], "\u8d1f\u8f7d\u5747\u8861": [[682, "id2"]], "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": [[706, "id1"]], "\u8fb9\u7c7b\u578b\u5b50\u56fe": [[690, "id5"]], "\u9017\u53f7\u5206\u9694\u503c\uff08CSV\uff09": [[686, "csv"], [690, "csv"]], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": [[697, "id2"]], "\uac1c\uc694": [[752, "id2"], [753, "id1"], [754, "id2"], [755, "id2"], [756, "id1"]], "\uadf8\ub798\ud504 \uad6c\uc870 \uc811\uadfc": [[721, "id1"]], "\uadf8\ub798\ud504 \ub9ac\ub4dc\uc544\uc6c3(readout)": [[754, "readout"]], "\uadf8\ub798\ud504 \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[718, "id2"]], "\uadf8\ub798\ud504 \uccb4\ud06c\uc640 \uadf8\ub798\ud504 \ud0c0\uc785 \uba85\uc138\ud654(graph type specification)": [[750, "graph-type-specification"]], "\uadf8\ub798\ud504\ub4e4\uc758 \ubc30\uce58(batch)": [[754, "batch"]], "\ub178\ub4dc \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[718, "id3"]], "\ub178\ub4dc \ubd84\ub958 \ubaa8\ub378\uacfc \uad6c\ud604\uc0c1\uc758 \ucc28\uc774\uc810": [[753, "id2"]], "\ub178\ub4dc/\uc5d0\uc9c0 \ub370\uc774\ud130 \uc811\uadfc": [[721, "id2"]], "\ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc791\uc131\ud558\uae30": [[754, "id3"], [756, "id2"]], "\ub2e4\uc591\ud55c \ud0c0\uc785\uc744 \ub2e4\ub8e8\uae30": [[731, "id2"]], "\ub370\uc774\ud130 \ub85c\ub529": [[754, "id7"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[727, "id3"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uc774\uc885 \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[731, "id3"]], "\ub85c\ub4dc \ubc38\ub7f0\uc2f1": [[723, "id2"]], "\ub85c\ub4dc\ub9f5": [[714, "id2"], [725, "id2"], [733, "id1"], [739, "id1"], [748, "id1"], [752, "id3"]], "\ub9c1\ud06c \uc608\uce21 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[718, "id4"]], "\uba40\ud2f0-\ub808\uc774\uc5b4 \ubbf8\ub2c8\ubc30\uce58 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc744 \uc704\ud55c \uc774\ubd84 \uad6c\uc870(Bipartite Structure)": [[740, "bipartite-structure"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec \uc758\uc874\uc131 \ucc3e\uae30": [[740, "id3"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec\uacfc \ucd95\uc57d": [[750, "id1"]], "\uba54\uc9c0\uc2dc \uc804\ub2ec \ud328\ub7ec\ub2e4\uc784(Message Passing Paradigm)": [[733, "message-passing-paradigm"]], "\ubaa8\ub378 \uc815\uc758\ud558\uae30": [[754, "id5"]], "\ubaa8\ub378\uc744 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc5d0 \ub9de\uac8c \ub9cc\ub4e4\uae30": [[741, "id3"], [744, "id1"], [746, "guide-ko-minibatch-node-classification-model"]], "\ubc30\uce58 \uadf8\ub798\ud504\uc5d0 \uc5f0\uc0b0\ud558\uae30": [[754, "id4"]], "\ubd84\uc0b0 DistEmbedding": [[721, "distembedding"]], "\ubd84\uc0b0 \ubaa8\ub4dc vs. \ub2e8\ub3c5(standalone) \ubaa8\ub4dc": [[721, "vs-standalone"]], "\ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[721, "id3"]], "\ubd84\uc0b0 \ud150\uc11c(Distributed Tensor)": [[721, "distributed-tensor"]], "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc": [[732, null]], "\uc5d0\uc9c0 \ud0c0\uc785 \uc11c\ube0c\uadf8\ub798\ud504": [[731, "id4"]], "\uc624\ud504\ub77c\uc778 \ucd94\ub860 \uad6c\ud604\ud558\uae30": [[743, "id2"]], "\uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud574\uc11c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[727, "id2"]], "\uc6cc\ud06c\ub85c\ub4dc \ub098\ub204\uae30(Split workloads)": [[721, "split-workloads"]], "\uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[741, "id1"], [746, "id1"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc9c1\uc811 \ud574\ubcf4\uae30": [[740, "id2"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1(Neighborhood Sampling) \ubc29\ubc95 \uac1c\uc694": [[739, "neighborhood-sampling"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc704\ud574\uc11c \uc6d0\ubcf8 \uadf8\ub798\ud504\uc5d0\uc11c \ubbf8\ub2c8 \ubc30\uce58\uc758 \uc5d0\uc9c0\ub4e4 \uc81c\uac70\ud558\uae30": [[741, "id2"]], "\uc774\uc885 \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[731, "id1"]], "\uc774\uc885 \uadf8\ub798\ud504\ub97c \ub3d9\uc885 \uadf8\ub798\ud504\ub85c \ubcc0\ud658\ud558\uae30": [[731, "id5"]], "\ucd9c\ub825\uac12\uc744 \uc704\ud55c \ucd95\uc57d \ud6c4 \ud53c\uccd0 \uc5c5\ub370\uc774\ud2b8": [[750, "id2"]], "\ucee4\uc2a4\ud140 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \uad6c\ud604\ud558\uae30": [[740, "guide-ko-minibatch-customizing-neighborhood-sampler-impl"]], "\ud559\uc2b5 \ub8f9": [[741, "id4"], [744, "id2"], [746, "id3"], [754, "id6"], [755, "id3"]], "\ud559\uc2b5 \ub8f9(loop)": [[753, "loop"], [756, "loop"]], "\ud83c\udd95 Tutorials: dgl.sparse": [[763, null]], "\ud83c\udd95 dgl.sparse": [[11, null]]}, "docnames": ["api/python/dgl", "api/python/dgl.DGLGraph", "api/python/dgl.data", "api/python/dgl.dataloading", "api/python/dgl.distributed", "api/python/dgl.function", "api/python/dgl.geometry", "api/python/dgl.multiprocessing", "api/python/dgl.ops", "api/python/dgl.optim", "api/python/dgl.sampling", "api/python/dgl.sparse_v0", "api/python/index", "api/python/knn_benchmark", "api/python/nn-mxnet", "api/python/nn-pytorch", "api/python/nn-tensorflow", "api/python/nn.functional", "api/python/transforms", "api/python/udf", "contribute", "developer/ffi", "env_var", "faq", "features/dataset", "generated/dgl.DGLGraph.__getitem__", "generated/dgl.DGLGraph.add_edges", "generated/dgl.DGLGraph.add_nodes", "generated/dgl.DGLGraph.add_self_loop", "generated/dgl.DGLGraph.adj", "generated/dgl.DGLGraph.adj_external", "generated/dgl.DGLGraph.adj_tensors", "generated/dgl.DGLGraph.adjacency_matrix", "generated/dgl.DGLGraph.apply_edges", "generated/dgl.DGLGraph.apply_nodes", "generated/dgl.DGLGraph.batch_num_edges", "generated/dgl.DGLGraph.batch_num_nodes", "generated/dgl.DGLGraph.batch_size", "generated/dgl.DGLGraph.canonical_etypes", "generated/dgl.DGLGraph.cpu", "generated/dgl.DGLGraph.create_formats_", "generated/dgl.DGLGraph.device", "generated/dgl.DGLGraph.dstdata", "generated/dgl.DGLGraph.dstnodes", "generated/dgl.DGLGraph.dsttypes", "generated/dgl.DGLGraph.edata", "generated/dgl.DGLGraph.edge_attr_schemes", "generated/dgl.DGLGraph.edge_ids", "generated/dgl.DGLGraph.edge_subgraph", "generated/dgl.DGLGraph.edge_type_subgraph", "generated/dgl.DGLGraph.edges", "generated/dgl.DGLGraph.etypes", "generated/dgl.DGLGraph.filter_edges", "generated/dgl.DGLGraph.filter_nodes", "generated/dgl.DGLGraph.find_edges", "generated/dgl.DGLGraph.formats", "generated/dgl.DGLGraph.has_edges_between", "generated/dgl.DGLGraph.has_nodes", "generated/dgl.DGLGraph.idtype", "generated/dgl.DGLGraph.in_degrees", "generated/dgl.DGLGraph.in_edges", "generated/dgl.DGLGraph.inc", "generated/dgl.DGLGraph.incidence_matrix", "generated/dgl.DGLGraph.int", "generated/dgl.DGLGraph.is_homogeneous", "generated/dgl.DGLGraph.is_multigraph", "generated/dgl.DGLGraph.is_pinned", "generated/dgl.DGLGraph.is_unibipartite", "generated/dgl.DGLGraph.line_graph", "generated/dgl.DGLGraph.local_scope", "generated/dgl.DGLGraph.long", "generated/dgl.DGLGraph.metagraph", "generated/dgl.DGLGraph.multi_update_all", "generated/dgl.DGLGraph.ndata", "generated/dgl.DGLGraph.node_attr_schemes", "generated/dgl.DGLGraph.node_type_subgraph", "generated/dgl.DGLGraph.nodes", "generated/dgl.DGLGraph.ntypes", "generated/dgl.DGLGraph.num_dst_nodes", "generated/dgl.DGLGraph.num_edges", "generated/dgl.DGLGraph.num_nodes", "generated/dgl.DGLGraph.num_src_nodes", "generated/dgl.DGLGraph.number_of_dst_nodes", "generated/dgl.DGLGraph.number_of_edges", "generated/dgl.DGLGraph.number_of_nodes", "generated/dgl.DGLGraph.number_of_src_nodes", "generated/dgl.DGLGraph.out_degrees", "generated/dgl.DGLGraph.out_edges", "generated/dgl.DGLGraph.pin_memory_", "generated/dgl.DGLGraph.predecessors", "generated/dgl.DGLGraph.prop_edges", "generated/dgl.DGLGraph.prop_nodes", "generated/dgl.DGLGraph.pull", "generated/dgl.DGLGraph.push", "generated/dgl.DGLGraph.remove_edges", "generated/dgl.DGLGraph.remove_nodes", "generated/dgl.DGLGraph.remove_self_loop", "generated/dgl.DGLGraph.reorder_graph", "generated/dgl.DGLGraph.reverse", "generated/dgl.DGLGraph.send_and_recv", "generated/dgl.DGLGraph.set_batch_num_edges", "generated/dgl.DGLGraph.set_batch_num_nodes", "generated/dgl.DGLGraph.srcdata", "generated/dgl.DGLGraph.srcnodes", "generated/dgl.DGLGraph.srctypes", "generated/dgl.DGLGraph.subgraph", "generated/dgl.DGLGraph.successors", "generated/dgl.DGLGraph.to", "generated/dgl.DGLGraph.to_canonical_etype", "generated/dgl.DGLGraph.to_cugraph", "generated/dgl.DGLGraph.to_simple", "generated/dgl.DGLGraph.unpin_memory_", "generated/dgl.DGLGraph.update_all", "generated/dgl.add_edges", "generated/dgl.add_nodes", "generated/dgl.add_reverse_edges", "generated/dgl.add_self_loop", "generated/dgl.adj_product_graph", "generated/dgl.adj_sum_graph", "generated/dgl.apply_each", "generated/dgl.batch", "generated/dgl.bfs_edges_generator", "generated/dgl.bfs_nodes_generator", "generated/dgl.bipartite_from_networkx", "generated/dgl.bipartite_from_scipy", "generated/dgl.block_to_graph", "generated/dgl.broadcast_edges", "generated/dgl.broadcast_nodes", "generated/dgl.compact_graphs", "generated/dgl.create_block", "generated/dgl.data.AIFBDataset", "generated/dgl.data.AMDataset", "generated/dgl.data.ActorDataset", "generated/dgl.data.AmazonCoBuyComputerDataset", "generated/dgl.data.AmazonCoBuyPhotoDataset", "generated/dgl.data.AsGraphPredDataset", "generated/dgl.data.AsLinkPredDataset", "generated/dgl.data.AsNodePredDataset", "generated/dgl.data.BA2MotifDataset", "generated/dgl.data.BACommunityDataset", "generated/dgl.data.BAShapeDataset", "generated/dgl.data.BGSDataset", "generated/dgl.data.BitcoinOTCDataset", "generated/dgl.data.CLUSTERDataset", "generated/dgl.data.CSVDataset", "generated/dgl.data.ChameleonDataset", "generated/dgl.data.CiteseerGraphDataset", "generated/dgl.data.CoauthorCSDataset", "generated/dgl.data.CoauthorPhysicsDataset", "generated/dgl.data.CoraFullDataset", "generated/dgl.data.CoraGraphDataset", "generated/dgl.data.CornellDataset", "generated/dgl.data.DGLDataset", "generated/dgl.data.FB15k237Dataset", "generated/dgl.data.FB15kDataset", "generated/dgl.data.FakeNewsDataset", "generated/dgl.data.FlickrDataset", "generated/dgl.data.FraudAmazonDataset", "generated/dgl.data.FraudDataset", "generated/dgl.data.FraudYelpDataset", "generated/dgl.data.GDELTDataset", "generated/dgl.data.GINDataset", "generated/dgl.data.ICEWS18Dataset", "generated/dgl.data.KarateClubDataset", "generated/dgl.data.LegacyTUDataset", "generated/dgl.data.MUTAGDataset", "generated/dgl.data.MiniGCDataset", "generated/dgl.data.PATTERNDataset", "generated/dgl.data.PPIDataset", "generated/dgl.data.PubmedGraphDataset", "generated/dgl.data.QM7bDataset", "generated/dgl.data.QM9Dataset", "generated/dgl.data.QM9EdgeDataset", "generated/dgl.data.RedditDataset", "generated/dgl.data.SBMMixtureDataset", "generated/dgl.data.SSTDataset", "generated/dgl.data.SquirrelDataset", "generated/dgl.data.TUDataset", "generated/dgl.data.TexasDataset", "generated/dgl.data.TreeCycleDataset", "generated/dgl.data.TreeGridDataset", "generated/dgl.data.WN18Dataset", "generated/dgl.data.WikiCSDataset", "generated/dgl.data.WisconsinDataset", "generated/dgl.data.YelpDataset", "generated/dgl.data.ZINCDataset", "generated/dgl.data.utils.Subset", "generated/dgl.data.utils.add_node_property_split", "generated/dgl.data.utils.add_nodepred_split", "generated/dgl.data.utils.check_sha1", "generated/dgl.data.utils.download", "generated/dgl.data.utils.extract_archive", "generated/dgl.data.utils.get_download_dir", "generated/dgl.data.utils.load_info", "generated/dgl.data.utils.load_labels", "generated/dgl.data.utils.mask_nodes_by_property", "generated/dgl.data.utils.save_info", "generated/dgl.data.utils.split_dataset", "generated/dgl.dataloading.BlockSampler", "generated/dgl.dataloading.ClusterGCNSampler", "generated/dgl.dataloading.DataLoader", "generated/dgl.dataloading.DistEdgeDataLoader", "generated/dgl.dataloading.DistNodeDataLoader", "generated/dgl.dataloading.GraphDataLoader", "generated/dgl.dataloading.LaborSampler", "generated/dgl.dataloading.MultiLayerFullNeighborSampler", "generated/dgl.dataloading.NeighborSampler", "generated/dgl.dataloading.SAINTSampler", "generated/dgl.dataloading.Sampler", "generated/dgl.dataloading.ShaDowKHopSampler", "generated/dgl.dataloading.as_edge_prediction_sampler", "generated/dgl.dataloading.base.LazyFeature", "generated/dgl.dataloading.base.set_dst_lazy_features", "generated/dgl.dataloading.base.set_edge_lazy_features", "generated/dgl.dataloading.base.set_node_lazy_features", "generated/dgl.dataloading.base.set_src_lazy_features", "generated/dgl.dataloading.negative_sampler.GlobalUniform", "generated/dgl.dataloading.negative_sampler.PerSourceUniform", "generated/dgl.dataloading.negative_sampler.Uniform", "generated/dgl.dfs_edges_generator", "generated/dgl.dfs_labeled_edges_generator", "generated/dgl.distributed.edge_split", "generated/dgl.distributed.find_edges", "generated/dgl.distributed.in_subgraph", "generated/dgl.distributed.initialize", "generated/dgl.distributed.load_partition", "generated/dgl.distributed.load_partition_book", "generated/dgl.distributed.load_partition_feats", "generated/dgl.distributed.node_split", "generated/dgl.distributed.partition_graph", "generated/dgl.distributed.sample_etype_neighbors", "generated/dgl.distributed.sample_neighbors", "generated/dgl.double_radius_node_labeling", "generated/dgl.edge_homophily", "generated/dgl.edge_subgraph", "generated/dgl.edge_type_subgraph", "generated/dgl.from_cugraph", "generated/dgl.from_networkx", "generated/dgl.from_scipy", "generated/dgl.function.copy_e", "generated/dgl.function.copy_u", "generated/dgl.function.e_add_u", "generated/dgl.function.e_add_v", "generated/dgl.function.e_div_u", "generated/dgl.function.e_div_v", "generated/dgl.function.e_dot_u", "generated/dgl.function.e_dot_v", "generated/dgl.function.e_mul_u", "generated/dgl.function.e_mul_v", "generated/dgl.function.e_sub_u", "generated/dgl.function.e_sub_v", "generated/dgl.function.max", "generated/dgl.function.mean", "generated/dgl.function.min", "generated/dgl.function.sum", "generated/dgl.function.u_add_e", "generated/dgl.function.u_add_v", "generated/dgl.function.u_div_e", "generated/dgl.function.u_div_v", "generated/dgl.function.u_dot_e", "generated/dgl.function.u_dot_v", "generated/dgl.function.u_mul_e", "generated/dgl.function.u_mul_v", "generated/dgl.function.u_sub_e", "generated/dgl.function.u_sub_v", "generated/dgl.function.v_add_e", "generated/dgl.function.v_add_u", "generated/dgl.function.v_div_e", "generated/dgl.function.v_div_u", "generated/dgl.function.v_dot_e", "generated/dgl.function.v_dot_u", "generated/dgl.function.v_mul_e", "generated/dgl.function.v_mul_u", "generated/dgl.function.v_sub_e", "generated/dgl.function.v_sub_u", "generated/dgl.graph", "generated/dgl.heterograph", "generated/dgl.in_subgraph", "generated/dgl.is_libxsmm_enabled", "generated/dgl.khop_adj", "generated/dgl.khop_graph", "generated/dgl.khop_in_subgraph", "generated/dgl.khop_out_subgraph", "generated/dgl.knn_graph", "generated/dgl.lap_pe", "generated/dgl.laplacian_lambda_max", "generated/dgl.line_graph", "generated/dgl.linkx_homophily", "generated/dgl.load_graphs", "generated/dgl.max_edges", "generated/dgl.max_nodes", "generated/dgl.mean_edges", "generated/dgl.mean_nodes", "generated/dgl.merge", "generated/dgl.metapath_reachable_graph", "generated/dgl.metis_partition", "generated/dgl.metis_partition_assignment", "generated/dgl.multiprocessing.pytorch.call_once_and_share", "generated/dgl.multiprocessing.pytorch.shared_tensor", "generated/dgl.nn.functional.edge_softmax", "generated/dgl.nn.mxnet.HeteroGraphConv", "generated/dgl.nn.mxnet.conv.AGNNConv", "generated/dgl.nn.mxnet.conv.APPNPConv", "generated/dgl.nn.mxnet.conv.ChebConv", "generated/dgl.nn.mxnet.conv.DenseChebConv", "generated/dgl.nn.mxnet.conv.DenseGraphConv", "generated/dgl.nn.mxnet.conv.DenseSAGEConv", "generated/dgl.nn.mxnet.conv.EdgeConv", "generated/dgl.nn.mxnet.conv.GATConv", "generated/dgl.nn.mxnet.conv.GINConv", "generated/dgl.nn.mxnet.conv.GMMConv", "generated/dgl.nn.mxnet.conv.GatedGraphConv", "generated/dgl.nn.mxnet.conv.GraphConv", "generated/dgl.nn.mxnet.conv.NNConv", "generated/dgl.nn.mxnet.conv.RelGraphConv", "generated/dgl.nn.mxnet.conv.SAGEConv", "generated/dgl.nn.mxnet.conv.SGConv", "generated/dgl.nn.mxnet.conv.TAGConv", "generated/dgl.nn.mxnet.glob.AvgPooling", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling", "generated/dgl.nn.mxnet.glob.MaxPooling", "generated/dgl.nn.mxnet.glob.Set2Set", "generated/dgl.nn.mxnet.glob.SortPooling", "generated/dgl.nn.mxnet.glob.SumPooling", "generated/dgl.nn.mxnet.utils.Sequential", "generated/dgl.nn.pytorch.DeepWalk", "generated/dgl.nn.pytorch.HeteroEmbedding", "generated/dgl.nn.pytorch.HeteroGraphConv", "generated/dgl.nn.pytorch.HeteroLinear", "generated/dgl.nn.pytorch.MetaPath2Vec", "generated/dgl.nn.pytorch.TypedLinear", "generated/dgl.nn.pytorch.conv.AGNNConv", "generated/dgl.nn.pytorch.conv.APPNPConv", "generated/dgl.nn.pytorch.conv.AtomicConv", "generated/dgl.nn.pytorch.conv.CFConv", "generated/dgl.nn.pytorch.conv.ChebConv", "generated/dgl.nn.pytorch.conv.CuGraphGATConv", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv", "generated/dgl.nn.pytorch.conv.DGNConv", "generated/dgl.nn.pytorch.conv.DenseChebConv", "generated/dgl.nn.pytorch.conv.DenseGraphConv", "generated/dgl.nn.pytorch.conv.DenseSAGEConv", "generated/dgl.nn.pytorch.conv.DotGatConv", "generated/dgl.nn.pytorch.conv.EGATConv", "generated/dgl.nn.pytorch.conv.EGNNConv", "generated/dgl.nn.pytorch.conv.EdgeConv", "generated/dgl.nn.pytorch.conv.EdgeGATConv", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm", "generated/dgl.nn.pytorch.conv.GATConv", "generated/dgl.nn.pytorch.conv.GATv2Conv", "generated/dgl.nn.pytorch.conv.GCN2Conv", "generated/dgl.nn.pytorch.conv.GINConv", "generated/dgl.nn.pytorch.conv.GINEConv", "generated/dgl.nn.pytorch.conv.GMMConv", "generated/dgl.nn.pytorch.conv.GatedGraphConv", "generated/dgl.nn.pytorch.conv.GraphConv", "generated/dgl.nn.pytorch.conv.GroupRevRes", "generated/dgl.nn.pytorch.conv.HGTConv", "generated/dgl.nn.pytorch.conv.NNConv", "generated/dgl.nn.pytorch.conv.PNAConv", "generated/dgl.nn.pytorch.conv.RelGraphConv", "generated/dgl.nn.pytorch.conv.SAGEConv", "generated/dgl.nn.pytorch.conv.SGConv", "generated/dgl.nn.pytorch.conv.TAGConv", "generated/dgl.nn.pytorch.conv.TWIRLSConv", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", "generated/dgl.nn.pytorch.explain.GNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX", "generated/dgl.nn.pytorch.explain.SubgraphX", "generated/dgl.nn.pytorch.factory.KNNGraph", "generated/dgl.nn.pytorch.factory.RadiusGraph", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph", "generated/dgl.nn.pytorch.glob.AvgPooling", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling", "generated/dgl.nn.pytorch.glob.MaxPooling", "generated/dgl.nn.pytorch.glob.Set2Set", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder", "generated/dgl.nn.pytorch.glob.SortPooling", "generated/dgl.nn.pytorch.glob.SumPooling", "generated/dgl.nn.pytorch.glob.WeightAndSum", "generated/dgl.nn.pytorch.graph_transformer.BiasedMultiheadAttention", "generated/dgl.nn.pytorch.graph_transformer.DegreeEncoder", "generated/dgl.nn.pytorch.graph_transformer.EGTLayer", "generated/dgl.nn.pytorch.graph_transformer.GraphormerLayer", "generated/dgl.nn.pytorch.graph_transformer.PathEncoder", "generated/dgl.nn.pytorch.graph_transformer.SpatialEncoder", "generated/dgl.nn.pytorch.graph_transformer.SpatialEncoder3d", "generated/dgl.nn.pytorch.gt.BiasedMHA", "generated/dgl.nn.pytorch.gt.DegreeEncoder", "generated/dgl.nn.pytorch.gt.EGTLayer", "generated/dgl.nn.pytorch.gt.GraphormerLayer", "generated/dgl.nn.pytorch.gt.LapPosEncoder", "generated/dgl.nn.pytorch.gt.PathEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d", "generated/dgl.nn.pytorch.link.EdgePredictor", "generated/dgl.nn.pytorch.link.TransE", "generated/dgl.nn.pytorch.link.TransR", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding", "generated/dgl.nn.pytorch.utils.JumpingKnowledge", "generated/dgl.nn.pytorch.utils.LabelPropagation", "generated/dgl.nn.pytorch.utils.Sequential", "generated/dgl.nn.pytorch.utils.WeightBasis", "generated/dgl.nn.tensorflow.conv.APPNPConv", "generated/dgl.nn.tensorflow.conv.ChebConv", "generated/dgl.nn.tensorflow.conv.GATConv", "generated/dgl.nn.tensorflow.conv.GINConv", "generated/dgl.nn.tensorflow.conv.GraphConv", "generated/dgl.nn.tensorflow.conv.RelGraphConv", "generated/dgl.nn.tensorflow.conv.SAGEConv", "generated/dgl.nn.tensorflow.conv.SGConv", "generated/dgl.nn.tensorflow.glob.AvgPooling", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv", "generated/dgl.nn.tensorflow.glob.MaxPooling", "generated/dgl.nn.tensorflow.glob.SortPooling", "generated/dgl.nn.tensorflow.glob.SumPooling", "generated/dgl.node_homophily", "generated/dgl.node_subgraph", "generated/dgl.node_type_subgraph", "generated/dgl.norm_by_dst", "generated/dgl.ops.copy_e_max", "generated/dgl.ops.copy_e_mean", "generated/dgl.ops.copy_e_min", "generated/dgl.ops.copy_e_sum", "generated/dgl.ops.copy_u", "generated/dgl.ops.copy_u_max", "generated/dgl.ops.copy_u_mean", "generated/dgl.ops.copy_u_min", "generated/dgl.ops.copy_u_sum", "generated/dgl.ops.copy_v", "generated/dgl.ops.e_add_u", "generated/dgl.ops.e_add_v", "generated/dgl.ops.e_div_u", "generated/dgl.ops.e_div_v", "generated/dgl.ops.e_dot_u", "generated/dgl.ops.e_dot_v", "generated/dgl.ops.e_mul_u", "generated/dgl.ops.e_mul_v", "generated/dgl.ops.e_sub_u", "generated/dgl.ops.e_sub_v", "generated/dgl.ops.gather_mm", "generated/dgl.ops.gsddmm", "generated/dgl.ops.gspmm", "generated/dgl.ops.segment_mm", "generated/dgl.ops.segment_reduce", "generated/dgl.ops.u_add_e", "generated/dgl.ops.u_add_e_max", "generated/dgl.ops.u_add_e_mean", "generated/dgl.ops.u_add_e_min", "generated/dgl.ops.u_add_e_sum", "generated/dgl.ops.u_add_v", "generated/dgl.ops.u_div_e", "generated/dgl.ops.u_div_e_max", "generated/dgl.ops.u_div_e_mean", "generated/dgl.ops.u_div_e_min", "generated/dgl.ops.u_div_e_sum", "generated/dgl.ops.u_div_v", "generated/dgl.ops.u_dot_e", "generated/dgl.ops.u_dot_v", "generated/dgl.ops.u_mul_e", "generated/dgl.ops.u_mul_e_max", "generated/dgl.ops.u_mul_e_mean", "generated/dgl.ops.u_mul_e_min", "generated/dgl.ops.u_mul_e_sum", "generated/dgl.ops.u_mul_v", "generated/dgl.ops.u_sub_e", "generated/dgl.ops.u_sub_e_max", "generated/dgl.ops.u_sub_e_mean", "generated/dgl.ops.u_sub_e_min", "generated/dgl.ops.u_sub_e_sum", "generated/dgl.ops.u_sub_v", "generated/dgl.ops.v_add_e", "generated/dgl.ops.v_add_u", "generated/dgl.ops.v_div_e", "generated/dgl.ops.v_div_u", "generated/dgl.ops.v_dot_e", "generated/dgl.ops.v_dot_u", "generated/dgl.ops.v_mul_e", "generated/dgl.ops.v_mul_u", "generated/dgl.ops.v_sub_e", "generated/dgl.ops.v_sub_u", "generated/dgl.out_subgraph", "generated/dgl.partition_graph_with_halo", "generated/dgl.prop_edges", "generated/dgl.prop_edges_dfs", "generated/dgl.prop_nodes", "generated/dgl.prop_nodes_bfs", "generated/dgl.prop_nodes_topo", "generated/dgl.radius_graph", "generated/dgl.rand_bipartite", "generated/dgl.rand_graph", "generated/dgl.random_walk_pe", "generated/dgl.readout_edges", "generated/dgl.readout_nodes", "generated/dgl.remove_edges", "generated/dgl.remove_nodes", "generated/dgl.remove_self_loop", "generated/dgl.reorder_graph", "generated/dgl.reverse", "generated/dgl.sampling.PinSAGESampler", "generated/dgl.sampling.global_uniform_negative_sampling", "generated/dgl.sampling.node2vec_random_walk", "generated/dgl.sampling.pack_traces", "generated/dgl.sampling.random_walk", "generated/dgl.sampling.sample_labors", "generated/dgl.sampling.sample_neighbors", "generated/dgl.sampling.sample_neighbors_biased", "generated/dgl.sampling.select_topk", "generated/dgl.save_graphs", "generated/dgl.seed", "generated/dgl.segmented_knn_graph", "generated/dgl.shortest_dist", "generated/dgl.slice_batch", "generated/dgl.softmax_edges", "generated/dgl.softmax_nodes", "generated/dgl.sort_csc_by_tag", "generated/dgl.sort_csr_by_tag", "generated/dgl.sparse.SparseMatrix.T", "generated/dgl.sparse.SparseMatrix.coalesce", "generated/dgl.sparse.SparseMatrix.col", "generated/dgl.sparse.SparseMatrix.coo", "generated/dgl.sparse.SparseMatrix.cpu", "generated/dgl.sparse.SparseMatrix.csc", "generated/dgl.sparse.SparseMatrix.csr", "generated/dgl.sparse.SparseMatrix.cuda", "generated/dgl.sparse.SparseMatrix.device", "generated/dgl.sparse.SparseMatrix.double", "generated/dgl.sparse.SparseMatrix.dtype", "generated/dgl.sparse.SparseMatrix.float", "generated/dgl.sparse.SparseMatrix.has_duplicate", "generated/dgl.sparse.SparseMatrix.indices", "generated/dgl.sparse.SparseMatrix.int", "generated/dgl.sparse.SparseMatrix.long", "generated/dgl.sparse.SparseMatrix.neg", "generated/dgl.sparse.SparseMatrix.nnz", "generated/dgl.sparse.SparseMatrix.reduce", "generated/dgl.sparse.SparseMatrix.row", "generated/dgl.sparse.SparseMatrix.shape", "generated/dgl.sparse.SparseMatrix.smax", "generated/dgl.sparse.SparseMatrix.smean", "generated/dgl.sparse.SparseMatrix.smin", "generated/dgl.sparse.SparseMatrix.softmax", "generated/dgl.sparse.SparseMatrix.sum", "generated/dgl.sparse.SparseMatrix.t", "generated/dgl.sparse.SparseMatrix.to", "generated/dgl.sparse.SparseMatrix.to_dense", "generated/dgl.sparse.SparseMatrix.transpose", "generated/dgl.sparse.SparseMatrix.val", "generated/dgl.sparse.add", "generated/dgl.sparse.bsddmm", "generated/dgl.sparse.bspmm", "generated/dgl.sparse.diag", "generated/dgl.sparse.div", "generated/dgl.sparse.from_coo", "generated/dgl.sparse.from_csc", "generated/dgl.sparse.from_csr", "generated/dgl.sparse.identity", "generated/dgl.sparse.matmul", "generated/dgl.sparse.mul", "generated/dgl.sparse.power", "generated/dgl.sparse.sddmm", "generated/dgl.sparse.softmax", "generated/dgl.sparse.sp_add_v", "generated/dgl.sparse.sp_broadcast_v", "generated/dgl.sparse.sp_div_v", "generated/dgl.sparse.sp_mul_v", "generated/dgl.sparse.sp_sub_v", "generated/dgl.sparse.spmatrix", "generated/dgl.sparse.spmm", "generated/dgl.sparse.spspmm", "generated/dgl.sparse.sub", "generated/dgl.sparse.val_like", "generated/dgl.sum_edges", "generated/dgl.sum_nodes", "generated/dgl.svd_pe", "generated/dgl.to_bidirected", "generated/dgl.to_block", "generated/dgl.to_cugraph", "generated/dgl.to_double", "generated/dgl.to_float", "generated/dgl.to_half", "generated/dgl.to_heterogeneous", "generated/dgl.to_homogeneous", "generated/dgl.to_networkx", "generated/dgl.to_simple", "generated/dgl.to_simple_graph", "generated/dgl.topk_edges", "generated/dgl.topk_nodes", "generated/dgl.topological_nodes_generator", "generated/dgl.transforms.AddEdge", "generated/dgl.transforms.AddMetaPaths", "generated/dgl.transforms.AddReverse", "generated/dgl.transforms.AddSelfLoop", "generated/dgl.transforms.BaseTransform", "generated/dgl.transforms.Compose", "generated/dgl.transforms.DropEdge", "generated/dgl.transforms.DropNode", "generated/dgl.transforms.FeatMask", "generated/dgl.transforms.GCNNorm", "generated/dgl.transforms.GDC", "generated/dgl.transforms.HeatKernel", "generated/dgl.transforms.KHopGraph", "generated/dgl.transforms.LapPE", "generated/dgl.transforms.LineGraph", "generated/dgl.transforms.NodeShuffle", "generated/dgl.transforms.PPR", "generated/dgl.transforms.RandomWalkPE", "generated/dgl.transforms.RemoveSelfLoop", "generated/dgl.transforms.RowFeatNormalizer", "generated/dgl.transforms.SIGNDiffusion", "generated/dgl.transforms.SVDPE", "generated/dgl.transforms.ToLevi", "generated/dgl.transforms.ToSimple", "generated/dgl.udf.EdgeBatch.batch_size", "generated/dgl.udf.EdgeBatch.data", "generated/dgl.udf.EdgeBatch.dst", "generated/dgl.udf.EdgeBatch.edges", "generated/dgl.udf.EdgeBatch.src", "generated/dgl.udf.NodeBatch.batch_size", "generated/dgl.udf.NodeBatch.data", "generated/dgl.udf.NodeBatch.mailbox", "generated/dgl.udf.NodeBatch.nodes", "generated/dgl.unbatch", "generated/dgl.use_libxsmm", "guide/data", "guide/data-dataset", "guide/data-download", "guide/data-loadcsv", "guide/data-loadogb", "guide/data-process", "guide/data-savenload", "guide/distributed", "guide/distributed-apis", "guide/distributed-hetero", "guide/distributed-partition", "guide/distributed-preprocessing", "guide/distributed-tools", "guide/graph", "guide/graph-basic", "guide/graph-external", "guide/graph-feature", "guide/graph-gpu", "guide/graph-graphs-nodes-edges", "guide/graph-heterogeneous", "guide/index", "guide/message", "guide/message-api", "guide/message-efficient", "guide/message-heterograph", "guide/message-part", "guide/minibatch", "guide/minibatch-custom-sampler", "guide/minibatch-edge", "guide/minibatch-gpu-sampling", "guide/minibatch-inference", "guide/minibatch-link", "guide/minibatch-nn", "guide/minibatch-node", "guide/minibatch-prefetching", "guide/mixed_precision", "guide/nn", "guide/nn-construction", "guide/nn-forward", "guide/nn-heterograph", "guide/training", "guide/training-edge", "guide/training-eweight", "guide/training-graph", "guide/training-link", "guide/training-node", "guide_cn/data", "guide_cn/data-dataset", "guide_cn/data-download", "guide_cn/data-loadogb", "guide_cn/data-process", "guide_cn/data-savenload", "guide_cn/distributed", "guide_cn/distributed-apis", "guide_cn/distributed-preprocessing", "guide_cn/distributed-tools", "guide_cn/graph", "guide_cn/graph-basic", "guide_cn/graph-external", "guide_cn/graph-feature", "guide_cn/graph-gpu", "guide_cn/graph-graphs-nodes-edges", "guide_cn/graph-heterogeneous", "guide_cn/index", "guide_cn/message", "guide_cn/message-api", "guide_cn/message-efficient", "guide_cn/message-heterograph", "guide_cn/message-part", "guide_cn/minibatch", "guide_cn/minibatch-custom-sampler", "guide_cn/minibatch-edge", "guide_cn/minibatch-inference", "guide_cn/minibatch-link", "guide_cn/minibatch-nn", "guide_cn/minibatch-node", "guide_cn/nn", "guide_cn/nn-construction", "guide_cn/nn-forward", "guide_cn/nn-heterograph", "guide_cn/training", "guide_cn/training-edge", "guide_cn/training-eweight", "guide_cn/training-graph", "guide_cn/training-link", "guide_cn/training-node", "guide_ko/data", "guide_ko/data-dataset", "guide_ko/data-download", "guide_ko/data-loadogb", "guide_ko/data-process", "guide_ko/data-savenload", "guide_ko/distributed", "guide_ko/distributed-apis", "guide_ko/distributed-hetero", "guide_ko/distributed-preprocessing", "guide_ko/distributed-tools", "guide_ko/graph", "guide_ko/graph-basic", "guide_ko/graph-external", "guide_ko/graph-feature", "guide_ko/graph-gpu", "guide_ko/graph-graphs-nodes-edges", "guide_ko/graph-heterogeneous", "guide_ko/index", "guide_ko/message", "guide_ko/message-api", "guide_ko/message-edge", "guide_ko/message-efficient", "guide_ko/message-heterograph", "guide_ko/message-part", "guide_ko/minibatch", "guide_ko/minibatch-custom-sampler", "guide_ko/minibatch-edge", "guide_ko/minibatch-gpu-sampling", "guide_ko/minibatch-inference", "guide_ko/minibatch-link", "guide_ko/minibatch-nn", "guide_ko/minibatch-node", "guide_ko/mixed_precision", "guide_ko/nn", "guide_ko/nn-construction", "guide_ko/nn-forward", "guide_ko/nn-heterograph", "guide_ko/training", "guide_ko/training-edge", "guide_ko/training-graph", "guide_ko/training-link", "guide_ko/training-node", "index", "install/index", "notebooks/sparse/gcn", "notebooks/sparse/graph_diffusion", "notebooks/sparse/graph_transformer", "notebooks/sparse/hgnn", "notebooks/sparse/index", "notebooks/sparse/quickstart", "performance", "resources", "sg_execution_times", "tutorials/blitz/1_introduction", "tutorials/blitz/2_dglgraph", "tutorials/blitz/3_message_passing", "tutorials/blitz/4_link_predict", "tutorials/blitz/5_graph_classification", "tutorials/blitz/6_load_data", "tutorials/blitz/index", "tutorials/blitz/sg_execution_times", "tutorials/cpu/cpu_best_practises", "tutorials/cpu/index", "tutorials/cpu/sg_execution_times", "tutorials/dist/1_node_classification", "tutorials/dist/2_link_prediction", "tutorials/dist/index", "tutorials/dist/sg_execution_times", "tutorials/large/L0_neighbor_sampling_overview", "tutorials/large/L1_large_node_classification", "tutorials/large/L2_large_link_prediction", "tutorials/large/L4_message_passing", "tutorials/large/index", "tutorials/large/sg_execution_times", "tutorials/models/1_gnn/1_gcn", "tutorials/models/1_gnn/4_rgcn", "tutorials/models/1_gnn/6_line_graph", "tutorials/models/1_gnn/9_gat", "tutorials/models/1_gnn/index", "tutorials/models/1_gnn/sg_execution_times", "tutorials/models/2_small_graph/3_tree-lstm", "tutorials/models/2_small_graph/index", "tutorials/models/2_small_graph/sg_execution_times", "tutorials/models/3_generative_model/5_dgmg", "tutorials/models/3_generative_model/index", "tutorials/models/3_generative_model/sg_execution_times", "tutorials/models/4_old_wines/2_capsule", "tutorials/models/4_old_wines/7_transformer", "tutorials/models/4_old_wines/index", "tutorials/models/4_old_wines/sg_execution_times", "tutorials/models/index", "tutorials/models/sg_execution_times", "tutorials/multi/1_graph_classification", "tutorials/multi/2_node_classification", "tutorials/multi/index", "tutorials/multi/sg_execution_times"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/python/dgl.rst", "api/python/dgl.DGLGraph.rst", "api/python/dgl.data.rst", "api/python/dgl.dataloading.rst", "api/python/dgl.distributed.rst", "api/python/dgl.function.rst", "api/python/dgl.geometry.rst", "api/python/dgl.multiprocessing.rst", "api/python/dgl.ops.rst", "api/python/dgl.optim.rst", "api/python/dgl.sampling.rst", "api/python/dgl.sparse_v0.rst", "api/python/index.rst", "api/python/knn_benchmark.rst", "api/python/nn-mxnet.rst", "api/python/nn-pytorch.rst", "api/python/nn-tensorflow.rst", "api/python/nn.functional.rst", "api/python/transforms.rst", "api/python/udf.rst", "contribute.rst", "developer/ffi.rst", "env_var.rst", "faq.rst", "features/dataset.rst", "generated/dgl.DGLGraph.__getitem__.rst", "generated/dgl.DGLGraph.add_edges.rst", "generated/dgl.DGLGraph.add_nodes.rst", "generated/dgl.DGLGraph.add_self_loop.rst", "generated/dgl.DGLGraph.adj.rst", "generated/dgl.DGLGraph.adj_external.rst", "generated/dgl.DGLGraph.adj_tensors.rst", "generated/dgl.DGLGraph.adjacency_matrix.rst", "generated/dgl.DGLGraph.apply_edges.rst", "generated/dgl.DGLGraph.apply_nodes.rst", "generated/dgl.DGLGraph.batch_num_edges.rst", "generated/dgl.DGLGraph.batch_num_nodes.rst", "generated/dgl.DGLGraph.batch_size.rst", "generated/dgl.DGLGraph.canonical_etypes.rst", "generated/dgl.DGLGraph.cpu.rst", "generated/dgl.DGLGraph.create_formats_.rst", "generated/dgl.DGLGraph.device.rst", "generated/dgl.DGLGraph.dstdata.rst", "generated/dgl.DGLGraph.dstnodes.rst", "generated/dgl.DGLGraph.dsttypes.rst", "generated/dgl.DGLGraph.edata.rst", "generated/dgl.DGLGraph.edge_attr_schemes.rst", "generated/dgl.DGLGraph.edge_ids.rst", "generated/dgl.DGLGraph.edge_subgraph.rst", "generated/dgl.DGLGraph.edge_type_subgraph.rst", "generated/dgl.DGLGraph.edges.rst", "generated/dgl.DGLGraph.etypes.rst", "generated/dgl.DGLGraph.filter_edges.rst", "generated/dgl.DGLGraph.filter_nodes.rst", "generated/dgl.DGLGraph.find_edges.rst", "generated/dgl.DGLGraph.formats.rst", "generated/dgl.DGLGraph.has_edges_between.rst", "generated/dgl.DGLGraph.has_nodes.rst", "generated/dgl.DGLGraph.idtype.rst", "generated/dgl.DGLGraph.in_degrees.rst", "generated/dgl.DGLGraph.in_edges.rst", "generated/dgl.DGLGraph.inc.rst", "generated/dgl.DGLGraph.incidence_matrix.rst", "generated/dgl.DGLGraph.int.rst", "generated/dgl.DGLGraph.is_homogeneous.rst", "generated/dgl.DGLGraph.is_multigraph.rst", "generated/dgl.DGLGraph.is_pinned.rst", "generated/dgl.DGLGraph.is_unibipartite.rst", "generated/dgl.DGLGraph.line_graph.rst", "generated/dgl.DGLGraph.local_scope.rst", "generated/dgl.DGLGraph.long.rst", "generated/dgl.DGLGraph.metagraph.rst", "generated/dgl.DGLGraph.multi_update_all.rst", "generated/dgl.DGLGraph.ndata.rst", "generated/dgl.DGLGraph.node_attr_schemes.rst", "generated/dgl.DGLGraph.node_type_subgraph.rst", "generated/dgl.DGLGraph.nodes.rst", "generated/dgl.DGLGraph.ntypes.rst", "generated/dgl.DGLGraph.num_dst_nodes.rst", "generated/dgl.DGLGraph.num_edges.rst", "generated/dgl.DGLGraph.num_nodes.rst", "generated/dgl.DGLGraph.num_src_nodes.rst", "generated/dgl.DGLGraph.number_of_dst_nodes.rst", "generated/dgl.DGLGraph.number_of_edges.rst", "generated/dgl.DGLGraph.number_of_nodes.rst", "generated/dgl.DGLGraph.number_of_src_nodes.rst", "generated/dgl.DGLGraph.out_degrees.rst", "generated/dgl.DGLGraph.out_edges.rst", "generated/dgl.DGLGraph.pin_memory_.rst", "generated/dgl.DGLGraph.predecessors.rst", "generated/dgl.DGLGraph.prop_edges.rst", "generated/dgl.DGLGraph.prop_nodes.rst", "generated/dgl.DGLGraph.pull.rst", "generated/dgl.DGLGraph.push.rst", "generated/dgl.DGLGraph.remove_edges.rst", "generated/dgl.DGLGraph.remove_nodes.rst", "generated/dgl.DGLGraph.remove_self_loop.rst", "generated/dgl.DGLGraph.reorder_graph.rst", "generated/dgl.DGLGraph.reverse.rst", "generated/dgl.DGLGraph.send_and_recv.rst", "generated/dgl.DGLGraph.set_batch_num_edges.rst", "generated/dgl.DGLGraph.set_batch_num_nodes.rst", "generated/dgl.DGLGraph.srcdata.rst", "generated/dgl.DGLGraph.srcnodes.rst", "generated/dgl.DGLGraph.srctypes.rst", "generated/dgl.DGLGraph.subgraph.rst", "generated/dgl.DGLGraph.successors.rst", "generated/dgl.DGLGraph.to.rst", "generated/dgl.DGLGraph.to_canonical_etype.rst", "generated/dgl.DGLGraph.to_cugraph.rst", "generated/dgl.DGLGraph.to_simple.rst", "generated/dgl.DGLGraph.unpin_memory_.rst", "generated/dgl.DGLGraph.update_all.rst", "generated/dgl.add_edges.rst", "generated/dgl.add_nodes.rst", "generated/dgl.add_reverse_edges.rst", "generated/dgl.add_self_loop.rst", "generated/dgl.adj_product_graph.rst", "generated/dgl.adj_sum_graph.rst", "generated/dgl.apply_each.rst", "generated/dgl.batch.rst", "generated/dgl.bfs_edges_generator.rst", "generated/dgl.bfs_nodes_generator.rst", "generated/dgl.bipartite_from_networkx.rst", "generated/dgl.bipartite_from_scipy.rst", "generated/dgl.block_to_graph.rst", "generated/dgl.broadcast_edges.rst", "generated/dgl.broadcast_nodes.rst", "generated/dgl.compact_graphs.rst", "generated/dgl.create_block.rst", "generated/dgl.data.AIFBDataset.rst", "generated/dgl.data.AMDataset.rst", "generated/dgl.data.ActorDataset.rst", "generated/dgl.data.AmazonCoBuyComputerDataset.rst", "generated/dgl.data.AmazonCoBuyPhotoDataset.rst", "generated/dgl.data.AsGraphPredDataset.rst", "generated/dgl.data.AsLinkPredDataset.rst", "generated/dgl.data.AsNodePredDataset.rst", "generated/dgl.data.BA2MotifDataset.rst", "generated/dgl.data.BACommunityDataset.rst", "generated/dgl.data.BAShapeDataset.rst", "generated/dgl.data.BGSDataset.rst", "generated/dgl.data.BitcoinOTCDataset.rst", "generated/dgl.data.CLUSTERDataset.rst", "generated/dgl.data.CSVDataset.rst", "generated/dgl.data.ChameleonDataset.rst", "generated/dgl.data.CiteseerGraphDataset.rst", "generated/dgl.data.CoauthorCSDataset.rst", "generated/dgl.data.CoauthorPhysicsDataset.rst", "generated/dgl.data.CoraFullDataset.rst", "generated/dgl.data.CoraGraphDataset.rst", "generated/dgl.data.CornellDataset.rst", "generated/dgl.data.DGLDataset.rst", "generated/dgl.data.FB15k237Dataset.rst", "generated/dgl.data.FB15kDataset.rst", "generated/dgl.data.FakeNewsDataset.rst", "generated/dgl.data.FlickrDataset.rst", "generated/dgl.data.FraudAmazonDataset.rst", "generated/dgl.data.FraudDataset.rst", "generated/dgl.data.FraudYelpDataset.rst", "generated/dgl.data.GDELTDataset.rst", "generated/dgl.data.GINDataset.rst", "generated/dgl.data.ICEWS18Dataset.rst", "generated/dgl.data.KarateClubDataset.rst", "generated/dgl.data.LegacyTUDataset.rst", "generated/dgl.data.MUTAGDataset.rst", "generated/dgl.data.MiniGCDataset.rst", "generated/dgl.data.PATTERNDataset.rst", "generated/dgl.data.PPIDataset.rst", "generated/dgl.data.PubmedGraphDataset.rst", "generated/dgl.data.QM7bDataset.rst", "generated/dgl.data.QM9Dataset.rst", "generated/dgl.data.QM9EdgeDataset.rst", "generated/dgl.data.RedditDataset.rst", "generated/dgl.data.SBMMixtureDataset.rst", "generated/dgl.data.SSTDataset.rst", "generated/dgl.data.SquirrelDataset.rst", "generated/dgl.data.TUDataset.rst", "generated/dgl.data.TexasDataset.rst", "generated/dgl.data.TreeCycleDataset.rst", "generated/dgl.data.TreeGridDataset.rst", "generated/dgl.data.WN18Dataset.rst", "generated/dgl.data.WikiCSDataset.rst", "generated/dgl.data.WisconsinDataset.rst", "generated/dgl.data.YelpDataset.rst", "generated/dgl.data.ZINCDataset.rst", "generated/dgl.data.utils.Subset.rst", "generated/dgl.data.utils.add_node_property_split.rst", "generated/dgl.data.utils.add_nodepred_split.rst", "generated/dgl.data.utils.check_sha1.rst", "generated/dgl.data.utils.download.rst", "generated/dgl.data.utils.extract_archive.rst", "generated/dgl.data.utils.get_download_dir.rst", "generated/dgl.data.utils.load_info.rst", "generated/dgl.data.utils.load_labels.rst", "generated/dgl.data.utils.mask_nodes_by_property.rst", "generated/dgl.data.utils.save_info.rst", "generated/dgl.data.utils.split_dataset.rst", "generated/dgl.dataloading.BlockSampler.rst", "generated/dgl.dataloading.ClusterGCNSampler.rst", "generated/dgl.dataloading.DataLoader.rst", "generated/dgl.dataloading.DistEdgeDataLoader.rst", "generated/dgl.dataloading.DistNodeDataLoader.rst", "generated/dgl.dataloading.GraphDataLoader.rst", "generated/dgl.dataloading.LaborSampler.rst", "generated/dgl.dataloading.MultiLayerFullNeighborSampler.rst", "generated/dgl.dataloading.NeighborSampler.rst", "generated/dgl.dataloading.SAINTSampler.rst", "generated/dgl.dataloading.Sampler.rst", "generated/dgl.dataloading.ShaDowKHopSampler.rst", "generated/dgl.dataloading.as_edge_prediction_sampler.rst", "generated/dgl.dataloading.base.LazyFeature.rst", "generated/dgl.dataloading.base.set_dst_lazy_features.rst", "generated/dgl.dataloading.base.set_edge_lazy_features.rst", "generated/dgl.dataloading.base.set_node_lazy_features.rst", "generated/dgl.dataloading.base.set_src_lazy_features.rst", "generated/dgl.dataloading.negative_sampler.GlobalUniform.rst", "generated/dgl.dataloading.negative_sampler.PerSourceUniform.rst", "generated/dgl.dataloading.negative_sampler.Uniform.rst", "generated/dgl.dfs_edges_generator.rst", "generated/dgl.dfs_labeled_edges_generator.rst", "generated/dgl.distributed.edge_split.rst", "generated/dgl.distributed.find_edges.rst", "generated/dgl.distributed.in_subgraph.rst", "generated/dgl.distributed.initialize.rst", "generated/dgl.distributed.load_partition.rst", "generated/dgl.distributed.load_partition_book.rst", "generated/dgl.distributed.load_partition_feats.rst", "generated/dgl.distributed.node_split.rst", "generated/dgl.distributed.partition_graph.rst", "generated/dgl.distributed.sample_etype_neighbors.rst", "generated/dgl.distributed.sample_neighbors.rst", "generated/dgl.double_radius_node_labeling.rst", "generated/dgl.edge_homophily.rst", "generated/dgl.edge_subgraph.rst", "generated/dgl.edge_type_subgraph.rst", "generated/dgl.from_cugraph.rst", "generated/dgl.from_networkx.rst", "generated/dgl.from_scipy.rst", "generated/dgl.function.copy_e.rst", "generated/dgl.function.copy_u.rst", "generated/dgl.function.e_add_u.rst", "generated/dgl.function.e_add_v.rst", "generated/dgl.function.e_div_u.rst", "generated/dgl.function.e_div_v.rst", "generated/dgl.function.e_dot_u.rst", "generated/dgl.function.e_dot_v.rst", "generated/dgl.function.e_mul_u.rst", "generated/dgl.function.e_mul_v.rst", "generated/dgl.function.e_sub_u.rst", "generated/dgl.function.e_sub_v.rst", "generated/dgl.function.max.rst", "generated/dgl.function.mean.rst", "generated/dgl.function.min.rst", "generated/dgl.function.sum.rst", "generated/dgl.function.u_add_e.rst", "generated/dgl.function.u_add_v.rst", "generated/dgl.function.u_div_e.rst", "generated/dgl.function.u_div_v.rst", "generated/dgl.function.u_dot_e.rst", "generated/dgl.function.u_dot_v.rst", "generated/dgl.function.u_mul_e.rst", "generated/dgl.function.u_mul_v.rst", "generated/dgl.function.u_sub_e.rst", "generated/dgl.function.u_sub_v.rst", "generated/dgl.function.v_add_e.rst", "generated/dgl.function.v_add_u.rst", "generated/dgl.function.v_div_e.rst", "generated/dgl.function.v_div_u.rst", "generated/dgl.function.v_dot_e.rst", "generated/dgl.function.v_dot_u.rst", "generated/dgl.function.v_mul_e.rst", "generated/dgl.function.v_mul_u.rst", "generated/dgl.function.v_sub_e.rst", "generated/dgl.function.v_sub_u.rst", "generated/dgl.graph.rst", "generated/dgl.heterograph.rst", "generated/dgl.in_subgraph.rst", "generated/dgl.is_libxsmm_enabled.rst", "generated/dgl.khop_adj.rst", "generated/dgl.khop_graph.rst", "generated/dgl.khop_in_subgraph.rst", "generated/dgl.khop_out_subgraph.rst", "generated/dgl.knn_graph.rst", "generated/dgl.lap_pe.rst", "generated/dgl.laplacian_lambda_max.rst", "generated/dgl.line_graph.rst", "generated/dgl.linkx_homophily.rst", "generated/dgl.load_graphs.rst", "generated/dgl.max_edges.rst", "generated/dgl.max_nodes.rst", "generated/dgl.mean_edges.rst", "generated/dgl.mean_nodes.rst", "generated/dgl.merge.rst", "generated/dgl.metapath_reachable_graph.rst", "generated/dgl.metis_partition.rst", "generated/dgl.metis_partition_assignment.rst", "generated/dgl.multiprocessing.pytorch.call_once_and_share.rst", "generated/dgl.multiprocessing.pytorch.shared_tensor.rst", "generated/dgl.nn.functional.edge_softmax.rst", "generated/dgl.nn.mxnet.HeteroGraphConv.rst", "generated/dgl.nn.mxnet.conv.AGNNConv.rst", "generated/dgl.nn.mxnet.conv.APPNPConv.rst", "generated/dgl.nn.mxnet.conv.ChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseGraphConv.rst", "generated/dgl.nn.mxnet.conv.DenseSAGEConv.rst", "generated/dgl.nn.mxnet.conv.EdgeConv.rst", "generated/dgl.nn.mxnet.conv.GATConv.rst", "generated/dgl.nn.mxnet.conv.GINConv.rst", "generated/dgl.nn.mxnet.conv.GMMConv.rst", "generated/dgl.nn.mxnet.conv.GatedGraphConv.rst", "generated/dgl.nn.mxnet.conv.GraphConv.rst", "generated/dgl.nn.mxnet.conv.NNConv.rst", "generated/dgl.nn.mxnet.conv.RelGraphConv.rst", "generated/dgl.nn.mxnet.conv.SAGEConv.rst", "generated/dgl.nn.mxnet.conv.SGConv.rst", "generated/dgl.nn.mxnet.conv.TAGConv.rst", "generated/dgl.nn.mxnet.glob.AvgPooling.rst", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.mxnet.glob.MaxPooling.rst", "generated/dgl.nn.mxnet.glob.Set2Set.rst", "generated/dgl.nn.mxnet.glob.SortPooling.rst", "generated/dgl.nn.mxnet.glob.SumPooling.rst", "generated/dgl.nn.mxnet.utils.Sequential.rst", "generated/dgl.nn.pytorch.DeepWalk.rst", "generated/dgl.nn.pytorch.HeteroEmbedding.rst", "generated/dgl.nn.pytorch.HeteroGraphConv.rst", "generated/dgl.nn.pytorch.HeteroLinear.rst", "generated/dgl.nn.pytorch.MetaPath2Vec.rst", "generated/dgl.nn.pytorch.TypedLinear.rst", "generated/dgl.nn.pytorch.conv.AGNNConv.rst", "generated/dgl.nn.pytorch.conv.APPNPConv.rst", "generated/dgl.nn.pytorch.conv.AtomicConv.rst", "generated/dgl.nn.pytorch.conv.CFConv.rst", "generated/dgl.nn.pytorch.conv.ChebConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphGATConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DGNConv.rst", "generated/dgl.nn.pytorch.conv.DenseChebConv.rst", "generated/dgl.nn.pytorch.conv.DenseGraphConv.rst", "generated/dgl.nn.pytorch.conv.DenseSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DotGatConv.rst", "generated/dgl.nn.pytorch.conv.EGATConv.rst", "generated/dgl.nn.pytorch.conv.EGNNConv.rst", "generated/dgl.nn.pytorch.conv.EdgeConv.rst", "generated/dgl.nn.pytorch.conv.EdgeGATConv.rst", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm.rst", "generated/dgl.nn.pytorch.conv.GATConv.rst", "generated/dgl.nn.pytorch.conv.GATv2Conv.rst", "generated/dgl.nn.pytorch.conv.GCN2Conv.rst", "generated/dgl.nn.pytorch.conv.GINConv.rst", "generated/dgl.nn.pytorch.conv.GINEConv.rst", "generated/dgl.nn.pytorch.conv.GMMConv.rst", "generated/dgl.nn.pytorch.conv.GatedGraphConv.rst", "generated/dgl.nn.pytorch.conv.GraphConv.rst", "generated/dgl.nn.pytorch.conv.GroupRevRes.rst", "generated/dgl.nn.pytorch.conv.HGTConv.rst", "generated/dgl.nn.pytorch.conv.NNConv.rst", "generated/dgl.nn.pytorch.conv.PNAConv.rst", "generated/dgl.nn.pytorch.conv.RelGraphConv.rst", "generated/dgl.nn.pytorch.conv.SAGEConv.rst", "generated/dgl.nn.pytorch.conv.SGConv.rst", "generated/dgl.nn.pytorch.conv.TAGConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.rst", "generated/dgl.nn.pytorch.explain.GNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX.rst", "generated/dgl.nn.pytorch.explain.SubgraphX.rst", "generated/dgl.nn.pytorch.factory.KNNGraph.rst", "generated/dgl.nn.pytorch.factory.RadiusGraph.rst", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph.rst", "generated/dgl.nn.pytorch.glob.AvgPooling.rst", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.pytorch.glob.MaxPooling.rst", "generated/dgl.nn.pytorch.glob.Set2Set.rst", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder.rst", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder.rst", "generated/dgl.nn.pytorch.glob.SortPooling.rst", "generated/dgl.nn.pytorch.glob.SumPooling.rst", "generated/dgl.nn.pytorch.glob.WeightAndSum.rst", "generated/dgl.nn.pytorch.graph_transformer.BiasedMultiheadAttention.rst", "generated/dgl.nn.pytorch.graph_transformer.DegreeEncoder.rst", "generated/dgl.nn.pytorch.graph_transformer.EGTLayer.rst", "generated/dgl.nn.pytorch.graph_transformer.GraphormerLayer.rst", "generated/dgl.nn.pytorch.graph_transformer.PathEncoder.rst", "generated/dgl.nn.pytorch.graph_transformer.SpatialEncoder.rst", "generated/dgl.nn.pytorch.graph_transformer.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.gt.BiasedMHA.rst", "generated/dgl.nn.pytorch.gt.DegreeEncoder.rst", "generated/dgl.nn.pytorch.gt.EGTLayer.rst", "generated/dgl.nn.pytorch.gt.GraphormerLayer.rst", "generated/dgl.nn.pytorch.gt.LapPosEncoder.rst", "generated/dgl.nn.pytorch.gt.PathEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.link.EdgePredictor.rst", "generated/dgl.nn.pytorch.link.TransE.rst", "generated/dgl.nn.pytorch.link.TransR.rst", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding.rst", "generated/dgl.nn.pytorch.utils.JumpingKnowledge.rst", "generated/dgl.nn.pytorch.utils.LabelPropagation.rst", "generated/dgl.nn.pytorch.utils.Sequential.rst", "generated/dgl.nn.pytorch.utils.WeightBasis.rst", "generated/dgl.nn.tensorflow.conv.APPNPConv.rst", "generated/dgl.nn.tensorflow.conv.ChebConv.rst", "generated/dgl.nn.tensorflow.conv.GATConv.rst", "generated/dgl.nn.tensorflow.conv.GINConv.rst", "generated/dgl.nn.tensorflow.conv.GraphConv.rst", "generated/dgl.nn.tensorflow.conv.RelGraphConv.rst", "generated/dgl.nn.tensorflow.conv.SAGEConv.rst", "generated/dgl.nn.tensorflow.conv.SGConv.rst", "generated/dgl.nn.tensorflow.glob.AvgPooling.rst", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv.rst", "generated/dgl.nn.tensorflow.glob.MaxPooling.rst", "generated/dgl.nn.tensorflow.glob.SortPooling.rst", "generated/dgl.nn.tensorflow.glob.SumPooling.rst", "generated/dgl.node_homophily.rst", "generated/dgl.node_subgraph.rst", "generated/dgl.node_type_subgraph.rst", "generated/dgl.norm_by_dst.rst", "generated/dgl.ops.copy_e_max.rst", "generated/dgl.ops.copy_e_mean.rst", "generated/dgl.ops.copy_e_min.rst", "generated/dgl.ops.copy_e_sum.rst", "generated/dgl.ops.copy_u.rst", "generated/dgl.ops.copy_u_max.rst", "generated/dgl.ops.copy_u_mean.rst", "generated/dgl.ops.copy_u_min.rst", "generated/dgl.ops.copy_u_sum.rst", "generated/dgl.ops.copy_v.rst", "generated/dgl.ops.e_add_u.rst", "generated/dgl.ops.e_add_v.rst", "generated/dgl.ops.e_div_u.rst", "generated/dgl.ops.e_div_v.rst", "generated/dgl.ops.e_dot_u.rst", "generated/dgl.ops.e_dot_v.rst", "generated/dgl.ops.e_mul_u.rst", "generated/dgl.ops.e_mul_v.rst", "generated/dgl.ops.e_sub_u.rst", "generated/dgl.ops.e_sub_v.rst", "generated/dgl.ops.gather_mm.rst", "generated/dgl.ops.gsddmm.rst", "generated/dgl.ops.gspmm.rst", "generated/dgl.ops.segment_mm.rst", "generated/dgl.ops.segment_reduce.rst", "generated/dgl.ops.u_add_e.rst", "generated/dgl.ops.u_add_e_max.rst", "generated/dgl.ops.u_add_e_mean.rst", "generated/dgl.ops.u_add_e_min.rst", "generated/dgl.ops.u_add_e_sum.rst", "generated/dgl.ops.u_add_v.rst", "generated/dgl.ops.u_div_e.rst", "generated/dgl.ops.u_div_e_max.rst", "generated/dgl.ops.u_div_e_mean.rst", "generated/dgl.ops.u_div_e_min.rst", "generated/dgl.ops.u_div_e_sum.rst", "generated/dgl.ops.u_div_v.rst", "generated/dgl.ops.u_dot_e.rst", "generated/dgl.ops.u_dot_v.rst", "generated/dgl.ops.u_mul_e.rst", "generated/dgl.ops.u_mul_e_max.rst", "generated/dgl.ops.u_mul_e_mean.rst", "generated/dgl.ops.u_mul_e_min.rst", "generated/dgl.ops.u_mul_e_sum.rst", "generated/dgl.ops.u_mul_v.rst", "generated/dgl.ops.u_sub_e.rst", "generated/dgl.ops.u_sub_e_max.rst", "generated/dgl.ops.u_sub_e_mean.rst", "generated/dgl.ops.u_sub_e_min.rst", "generated/dgl.ops.u_sub_e_sum.rst", "generated/dgl.ops.u_sub_v.rst", "generated/dgl.ops.v_add_e.rst", "generated/dgl.ops.v_add_u.rst", "generated/dgl.ops.v_div_e.rst", "generated/dgl.ops.v_div_u.rst", "generated/dgl.ops.v_dot_e.rst", "generated/dgl.ops.v_dot_u.rst", "generated/dgl.ops.v_mul_e.rst", "generated/dgl.ops.v_mul_u.rst", "generated/dgl.ops.v_sub_e.rst", "generated/dgl.ops.v_sub_u.rst", "generated/dgl.out_subgraph.rst", "generated/dgl.partition_graph_with_halo.rst", "generated/dgl.prop_edges.rst", "generated/dgl.prop_edges_dfs.rst", "generated/dgl.prop_nodes.rst", "generated/dgl.prop_nodes_bfs.rst", "generated/dgl.prop_nodes_topo.rst", "generated/dgl.radius_graph.rst", "generated/dgl.rand_bipartite.rst", "generated/dgl.rand_graph.rst", "generated/dgl.random_walk_pe.rst", "generated/dgl.readout_edges.rst", "generated/dgl.readout_nodes.rst", "generated/dgl.remove_edges.rst", "generated/dgl.remove_nodes.rst", "generated/dgl.remove_self_loop.rst", "generated/dgl.reorder_graph.rst", "generated/dgl.reverse.rst", "generated/dgl.sampling.PinSAGESampler.rst", "generated/dgl.sampling.global_uniform_negative_sampling.rst", "generated/dgl.sampling.node2vec_random_walk.rst", "generated/dgl.sampling.pack_traces.rst", "generated/dgl.sampling.random_walk.rst", "generated/dgl.sampling.sample_labors.rst", "generated/dgl.sampling.sample_neighbors.rst", "generated/dgl.sampling.sample_neighbors_biased.rst", "generated/dgl.sampling.select_topk.rst", "generated/dgl.save_graphs.rst", "generated/dgl.seed.rst", "generated/dgl.segmented_knn_graph.rst", "generated/dgl.shortest_dist.rst", "generated/dgl.slice_batch.rst", "generated/dgl.softmax_edges.rst", "generated/dgl.softmax_nodes.rst", "generated/dgl.sort_csc_by_tag.rst", "generated/dgl.sort_csr_by_tag.rst", "generated/dgl.sparse.SparseMatrix.T.rst", "generated/dgl.sparse.SparseMatrix.coalesce.rst", "generated/dgl.sparse.SparseMatrix.col.rst", "generated/dgl.sparse.SparseMatrix.coo.rst", "generated/dgl.sparse.SparseMatrix.cpu.rst", "generated/dgl.sparse.SparseMatrix.csc.rst", "generated/dgl.sparse.SparseMatrix.csr.rst", "generated/dgl.sparse.SparseMatrix.cuda.rst", "generated/dgl.sparse.SparseMatrix.device.rst", "generated/dgl.sparse.SparseMatrix.double.rst", "generated/dgl.sparse.SparseMatrix.dtype.rst", "generated/dgl.sparse.SparseMatrix.float.rst", "generated/dgl.sparse.SparseMatrix.has_duplicate.rst", "generated/dgl.sparse.SparseMatrix.indices.rst", "generated/dgl.sparse.SparseMatrix.int.rst", "generated/dgl.sparse.SparseMatrix.long.rst", "generated/dgl.sparse.SparseMatrix.neg.rst", "generated/dgl.sparse.SparseMatrix.nnz.rst", "generated/dgl.sparse.SparseMatrix.reduce.rst", "generated/dgl.sparse.SparseMatrix.row.rst", "generated/dgl.sparse.SparseMatrix.shape.rst", "generated/dgl.sparse.SparseMatrix.smax.rst", "generated/dgl.sparse.SparseMatrix.smean.rst", "generated/dgl.sparse.SparseMatrix.smin.rst", "generated/dgl.sparse.SparseMatrix.softmax.rst", "generated/dgl.sparse.SparseMatrix.sum.rst", "generated/dgl.sparse.SparseMatrix.t.rst", "generated/dgl.sparse.SparseMatrix.to.rst", "generated/dgl.sparse.SparseMatrix.to_dense.rst", "generated/dgl.sparse.SparseMatrix.transpose.rst", "generated/dgl.sparse.SparseMatrix.val.rst", "generated/dgl.sparse.add.rst", "generated/dgl.sparse.bsddmm.rst", "generated/dgl.sparse.bspmm.rst", "generated/dgl.sparse.diag.rst", "generated/dgl.sparse.div.rst", "generated/dgl.sparse.from_coo.rst", "generated/dgl.sparse.from_csc.rst", "generated/dgl.sparse.from_csr.rst", "generated/dgl.sparse.identity.rst", "generated/dgl.sparse.matmul.rst", "generated/dgl.sparse.mul.rst", "generated/dgl.sparse.power.rst", "generated/dgl.sparse.sddmm.rst", "generated/dgl.sparse.softmax.rst", "generated/dgl.sparse.sp_add_v.rst", "generated/dgl.sparse.sp_broadcast_v.rst", "generated/dgl.sparse.sp_div_v.rst", "generated/dgl.sparse.sp_mul_v.rst", "generated/dgl.sparse.sp_sub_v.rst", "generated/dgl.sparse.spmatrix.rst", "generated/dgl.sparse.spmm.rst", "generated/dgl.sparse.spspmm.rst", "generated/dgl.sparse.sub.rst", "generated/dgl.sparse.val_like.rst", "generated/dgl.sum_edges.rst", "generated/dgl.sum_nodes.rst", "generated/dgl.svd_pe.rst", "generated/dgl.to_bidirected.rst", "generated/dgl.to_block.rst", "generated/dgl.to_cugraph.rst", "generated/dgl.to_double.rst", "generated/dgl.to_float.rst", "generated/dgl.to_half.rst", "generated/dgl.to_heterogeneous.rst", "generated/dgl.to_homogeneous.rst", "generated/dgl.to_networkx.rst", "generated/dgl.to_simple.rst", "generated/dgl.to_simple_graph.rst", "generated/dgl.topk_edges.rst", "generated/dgl.topk_nodes.rst", "generated/dgl.topological_nodes_generator.rst", "generated/dgl.transforms.AddEdge.rst", "generated/dgl.transforms.AddMetaPaths.rst", "generated/dgl.transforms.AddReverse.rst", "generated/dgl.transforms.AddSelfLoop.rst", "generated/dgl.transforms.BaseTransform.rst", "generated/dgl.transforms.Compose.rst", "generated/dgl.transforms.DropEdge.rst", "generated/dgl.transforms.DropNode.rst", "generated/dgl.transforms.FeatMask.rst", "generated/dgl.transforms.GCNNorm.rst", "generated/dgl.transforms.GDC.rst", "generated/dgl.transforms.HeatKernel.rst", "generated/dgl.transforms.KHopGraph.rst", "generated/dgl.transforms.LapPE.rst", "generated/dgl.transforms.LineGraph.rst", "generated/dgl.transforms.NodeShuffle.rst", "generated/dgl.transforms.PPR.rst", "generated/dgl.transforms.RandomWalkPE.rst", "generated/dgl.transforms.RemoveSelfLoop.rst", "generated/dgl.transforms.RowFeatNormalizer.rst", "generated/dgl.transforms.SIGNDiffusion.rst", "generated/dgl.transforms.SVDPE.rst", "generated/dgl.transforms.ToLevi.rst", "generated/dgl.transforms.ToSimple.rst", "generated/dgl.udf.EdgeBatch.batch_size.rst", "generated/dgl.udf.EdgeBatch.data.rst", "generated/dgl.udf.EdgeBatch.dst.rst", "generated/dgl.udf.EdgeBatch.edges.rst", "generated/dgl.udf.EdgeBatch.src.rst", "generated/dgl.udf.NodeBatch.batch_size.rst", "generated/dgl.udf.NodeBatch.data.rst", "generated/dgl.udf.NodeBatch.mailbox.rst", "generated/dgl.udf.NodeBatch.nodes.rst", "generated/dgl.unbatch.rst", "generated/dgl.use_libxsmm.rst", "guide/data.rst", "guide/data-dataset.rst", "guide/data-download.rst", "guide/data-loadcsv.rst", "guide/data-loadogb.rst", "guide/data-process.rst", "guide/data-savenload.rst", "guide/distributed.rst", "guide/distributed-apis.rst", "guide/distributed-hetero.rst", "guide/distributed-partition.rst", "guide/distributed-preprocessing.rst", "guide/distributed-tools.rst", "guide/graph.rst", "guide/graph-basic.rst", "guide/graph-external.rst", "guide/graph-feature.rst", "guide/graph-gpu.rst", "guide/graph-graphs-nodes-edges.rst", "guide/graph-heterogeneous.rst", "guide/index.rst", "guide/message.rst", "guide/message-api.rst", "guide/message-efficient.rst", "guide/message-heterograph.rst", "guide/message-part.rst", "guide/minibatch.rst", "guide/minibatch-custom-sampler.rst", "guide/minibatch-edge.rst", "guide/minibatch-gpu-sampling.rst", "guide/minibatch-inference.rst", "guide/minibatch-link.rst", "guide/minibatch-nn.rst", "guide/minibatch-node.rst", "guide/minibatch-prefetching.rst", "guide/mixed_precision.rst", "guide/nn.rst", "guide/nn-construction.rst", "guide/nn-forward.rst", "guide/nn-heterograph.rst", "guide/training.rst", "guide/training-edge.rst", "guide/training-eweight.rst", "guide/training-graph.rst", "guide/training-link.rst", "guide/training-node.rst", "guide_cn/data.rst", "guide_cn/data-dataset.rst", "guide_cn/data-download.rst", "guide_cn/data-loadogb.rst", "guide_cn/data-process.rst", "guide_cn/data-savenload.rst", "guide_cn/distributed.rst", "guide_cn/distributed-apis.rst", "guide_cn/distributed-preprocessing.rst", "guide_cn/distributed-tools.rst", "guide_cn/graph.rst", "guide_cn/graph-basic.rst", "guide_cn/graph-external.rst", "guide_cn/graph-feature.rst", "guide_cn/graph-gpu.rst", "guide_cn/graph-graphs-nodes-edges.rst", "guide_cn/graph-heterogeneous.rst", "guide_cn/index.rst", "guide_cn/message.rst", "guide_cn/message-api.rst", "guide_cn/message-efficient.rst", "guide_cn/message-heterograph.rst", "guide_cn/message-part.rst", "guide_cn/minibatch.rst", "guide_cn/minibatch-custom-sampler.rst", "guide_cn/minibatch-edge.rst", "guide_cn/minibatch-inference.rst", "guide_cn/minibatch-link.rst", "guide_cn/minibatch-nn.rst", "guide_cn/minibatch-node.rst", "guide_cn/nn.rst", "guide_cn/nn-construction.rst", "guide_cn/nn-forward.rst", "guide_cn/nn-heterograph.rst", "guide_cn/training.rst", "guide_cn/training-edge.rst", "guide_cn/training-eweight.rst", "guide_cn/training-graph.rst", "guide_cn/training-link.rst", "guide_cn/training-node.rst", "guide_ko/data.rst", "guide_ko/data-dataset.rst", "guide_ko/data-download.rst", "guide_ko/data-loadogb.rst", "guide_ko/data-process.rst", "guide_ko/data-savenload.rst", "guide_ko/distributed.rst", "guide_ko/distributed-apis.rst", "guide_ko/distributed-hetero.rst", "guide_ko/distributed-preprocessing.rst", "guide_ko/distributed-tools.rst", "guide_ko/graph.rst", "guide_ko/graph-basic.rst", "guide_ko/graph-external.rst", "guide_ko/graph-feature.rst", "guide_ko/graph-gpu.rst", "guide_ko/graph-graphs-nodes-edges.rst", "guide_ko/graph-heterogeneous.rst", "guide_ko/index.rst", "guide_ko/message.rst", "guide_ko/message-api.rst", "guide_ko/message-edge.rst", "guide_ko/message-efficient.rst", "guide_ko/message-heterograph.rst", "guide_ko/message-part.rst", "guide_ko/minibatch.rst", "guide_ko/minibatch-custom-sampler.rst", "guide_ko/minibatch-edge.rst", "guide_ko/minibatch-gpu-sampling.rst", "guide_ko/minibatch-inference.rst", "guide_ko/minibatch-link.rst", "guide_ko/minibatch-nn.rst", "guide_ko/minibatch-node.rst", "guide_ko/mixed_precision.rst", "guide_ko/nn.rst", "guide_ko/nn-construction.rst", "guide_ko/nn-forward.rst", "guide_ko/nn-heterograph.rst", "guide_ko/training.rst", "guide_ko/training-edge.rst", "guide_ko/training-graph.rst", "guide_ko/training-link.rst", "guide_ko/training-node.rst", "index.rst", "install/index.rst", "notebooks/sparse/gcn.nblink", "notebooks/sparse/graph_diffusion.nblink", "notebooks/sparse/graph_transformer.nblink", "notebooks/sparse/hgnn.nblink", "notebooks/sparse/index.rst", "notebooks/sparse/quickstart.nblink", "performance.rst", "resources.rst", "sg_execution_times.rst", "tutorials/blitz/1_introduction.rst", "tutorials/blitz/2_dglgraph.rst", "tutorials/blitz/3_message_passing.rst", "tutorials/blitz/4_link_predict.rst", "tutorials/blitz/5_graph_classification.rst", "tutorials/blitz/6_load_data.rst", "tutorials/blitz/index.rst", "tutorials/blitz/sg_execution_times.rst", "tutorials/cpu/cpu_best_practises.rst", "tutorials/cpu/index.rst", "tutorials/cpu/sg_execution_times.rst", "tutorials/dist/1_node_classification.rst", "tutorials/dist/2_link_prediction.rst", "tutorials/dist/index.rst", "tutorials/dist/sg_execution_times.rst", "tutorials/large/L0_neighbor_sampling_overview.rst", "tutorials/large/L1_large_node_classification.rst", "tutorials/large/L2_large_link_prediction.rst", "tutorials/large/L4_message_passing.rst", "tutorials/large/index.rst", "tutorials/large/sg_execution_times.rst", "tutorials/models/1_gnn/1_gcn.rst", "tutorials/models/1_gnn/4_rgcn.rst", "tutorials/models/1_gnn/6_line_graph.rst", "tutorials/models/1_gnn/9_gat.rst", "tutorials/models/1_gnn/index.rst", "tutorials/models/1_gnn/sg_execution_times.rst", "tutorials/models/2_small_graph/3_tree-lstm.rst", "tutorials/models/2_small_graph/index.rst", "tutorials/models/2_small_graph/sg_execution_times.rst", "tutorials/models/3_generative_model/5_dgmg.rst", "tutorials/models/3_generative_model/index.rst", "tutorials/models/3_generative_model/sg_execution_times.rst", "tutorials/models/4_old_wines/2_capsule.rst", "tutorials/models/4_old_wines/7_transformer.rst", "tutorials/models/4_old_wines/index.rst", "tutorials/models/4_old_wines/sg_execution_times.rst", "tutorials/models/index.rst", "tutorials/models/sg_execution_times.rst", "tutorials/multi/1_graph_classification.rst", "tutorials/multi/2_node_classification.rst", "tutorials/multi/index.rst", "tutorials/multi/sg_execution_times.rst"], "indexentries": {"__getitem__() (dgl.data.actordataset method)": [[132, "dgl.data.ActorDataset.__getitem__", false]], "__getitem__() (dgl.data.aifbdataset method)": [[130, "dgl.data.AIFBDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuycomputerdataset method)": [[133, "dgl.data.AmazonCoBuyComputerDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuyphotodataset method)": [[134, "dgl.data.AmazonCoBuyPhotoDataset.__getitem__", false]], "__getitem__() (dgl.data.amdataset method)": [[131, "dgl.data.AMDataset.__getitem__", false]], "__getitem__() (dgl.data.asgraphpreddataset method)": [[135, "dgl.data.AsGraphPredDataset.__getitem__", false]], "__getitem__() (dgl.data.aslinkpreddataset method)": [[136, "dgl.data.AsLinkPredDataset.__getitem__", false]], "__getitem__() (dgl.data.asnodepreddataset method)": [[137, "dgl.data.AsNodePredDataset.__getitem__", false]], "__getitem__() (dgl.data.ba2motifdataset method)": [[138, "dgl.data.BA2MotifDataset.__getitem__", false]], "__getitem__() (dgl.data.bacommunitydataset method)": [[139, "dgl.data.BACommunityDataset.__getitem__", false]], "__getitem__() (dgl.data.bashapedataset method)": [[140, "dgl.data.BAShapeDataset.__getitem__", false]], "__getitem__() (dgl.data.bgsdataset method)": [[141, "dgl.data.BGSDataset.__getitem__", false]], "__getitem__() (dgl.data.bitcoinotcdataset method)": [[142, "dgl.data.BitcoinOTCDataset.__getitem__", false]], "__getitem__() (dgl.data.chameleondataset method)": [[145, "dgl.data.ChameleonDataset.__getitem__", false]], "__getitem__() (dgl.data.citeseergraphdataset method)": [[146, "dgl.data.CiteseerGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.clusterdataset method)": [[143, "dgl.data.CLUSTERDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorcsdataset method)": [[147, "dgl.data.CoauthorCSDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorphysicsdataset method)": [[148, "dgl.data.CoauthorPhysicsDataset.__getitem__", false]], "__getitem__() (dgl.data.corafulldataset method)": [[149, "dgl.data.CoraFullDataset.__getitem__", false]], "__getitem__() (dgl.data.coragraphdataset method)": [[150, "dgl.data.CoraGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.cornelldataset method)": [[151, "dgl.data.CornellDataset.__getitem__", false]], "__getitem__() (dgl.data.csvdataset method)": [[144, "dgl.data.CSVDataset.__getitem__", false]], "__getitem__() (dgl.data.dgldataset method)": [[152, "dgl.data.DGLDataset.__getitem__", false]], "__getitem__() (dgl.data.fakenewsdataset method)": [[155, "dgl.data.FakeNewsDataset.__getitem__", false]], "__getitem__() (dgl.data.fb15k237dataset method)": [[153, "dgl.data.FB15k237Dataset.__getitem__", false]], "__getitem__() (dgl.data.fb15kdataset method)": [[154, "dgl.data.FB15kDataset.__getitem__", false]], "__getitem__() (dgl.data.flickrdataset method)": [[156, "dgl.data.FlickrDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudamazondataset method)": [[157, "dgl.data.FraudAmazonDataset.__getitem__", false]], "__getitem__() (dgl.data.frauddataset method)": [[158, "dgl.data.FraudDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudyelpdataset method)": [[159, "dgl.data.FraudYelpDataset.__getitem__", false]], "__getitem__() (dgl.data.gdeltdataset method)": [[160, "dgl.data.GDELTDataset.__getitem__", false]], "__getitem__() (dgl.data.gindataset method)": [[161, "dgl.data.GINDataset.__getitem__", false]], "__getitem__() (dgl.data.icews18dataset method)": [[162, "dgl.data.ICEWS18Dataset.__getitem__", false]], "__getitem__() (dgl.data.karateclubdataset method)": [[163, "dgl.data.KarateClubDataset.__getitem__", false]], "__getitem__() (dgl.data.legacytudataset method)": [[164, "dgl.data.LegacyTUDataset.__getitem__", false]], "__getitem__() (dgl.data.minigcdataset method)": [[166, "dgl.data.MiniGCDataset.__getitem__", false]], "__getitem__() (dgl.data.mutagdataset method)": [[165, "dgl.data.MUTAGDataset.__getitem__", false]], "__getitem__() (dgl.data.patterndataset method)": [[167, "dgl.data.PATTERNDataset.__getitem__", false]], "__getitem__() (dgl.data.ppidataset method)": [[168, "dgl.data.PPIDataset.__getitem__", false]], "__getitem__() (dgl.data.pubmedgraphdataset method)": [[169, "dgl.data.PubmedGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.qm7bdataset method)": [[170, "dgl.data.QM7bDataset.__getitem__", false]], "__getitem__() (dgl.data.qm9dataset method)": [[171, "dgl.data.QM9Dataset.__getitem__", false]], "__getitem__() (dgl.data.qm9edgedataset method)": [[172, "dgl.data.QM9EdgeDataset.__getitem__", false]], "__getitem__() (dgl.data.redditdataset method)": [[173, "dgl.data.RedditDataset.__getitem__", false]], "__getitem__() (dgl.data.sbmmixturedataset method)": [[174, "dgl.data.SBMMixtureDataset.__getitem__", false]], "__getitem__() (dgl.data.squirreldataset method)": [[176, "dgl.data.SquirrelDataset.__getitem__", false]], "__getitem__() (dgl.data.sstdataset method)": [[175, "dgl.data.SSTDataset.__getitem__", false]], "__getitem__() (dgl.data.texasdataset method)": [[178, "dgl.data.TexasDataset.__getitem__", false]], "__getitem__() (dgl.data.treecycledataset method)": [[179, "dgl.data.TreeCycleDataset.__getitem__", false]], "__getitem__() (dgl.data.treegriddataset method)": [[180, "dgl.data.TreeGridDataset.__getitem__", false]], "__getitem__() (dgl.data.tudataset method)": [[177, "dgl.data.TUDataset.__getitem__", false]], "__getitem__() (dgl.data.utils.subset method)": [[186, "dgl.data.utils.Subset.__getitem__", false]], "__getitem__() (dgl.data.wikicsdataset method)": [[182, "dgl.data.WikiCSDataset.__getitem__", false]], "__getitem__() (dgl.data.wisconsindataset method)": [[183, "dgl.data.WisconsinDataset.__getitem__", false]], "__getitem__() (dgl.data.wn18dataset method)": [[181, "dgl.data.WN18Dataset.__getitem__", false]], "__getitem__() (dgl.data.yelpdataset method)": [[184, "dgl.data.YelpDataset.__getitem__", false]], "__getitem__() (dgl.data.zincdataset method)": [[185, "dgl.data.ZINCDataset.__getitem__", false]], "__getitem__() (dgl.dglgraph method)": [[25, "dgl.DGLGraph.__getitem__", false]], "__init__() (dgl.dataloading.blocksampler method)": [[198, "dgl.dataloading.BlockSampler.__init__", false]], "__init__() (dgl.sampling.pinsagesampler method)": [[503, "dgl.sampling.PinSAGESampler.__init__", false]], "__len__() (dgl.data.actordataset method)": [[132, "dgl.data.ActorDataset.__len__", false]], "__len__() (dgl.data.aifbdataset method)": [[130, "dgl.data.AIFBDataset.__len__", false]], "__len__() (dgl.data.amazoncobuycomputerdataset method)": [[133, "dgl.data.AmazonCoBuyComputerDataset.__len__", false]], "__len__() (dgl.data.amazoncobuyphotodataset method)": [[134, "dgl.data.AmazonCoBuyPhotoDataset.__len__", false]], "__len__() (dgl.data.amdataset method)": [[131, "dgl.data.AMDataset.__len__", false]], "__len__() (dgl.data.asgraphpreddataset method)": [[135, "dgl.data.AsGraphPredDataset.__len__", false]], "__len__() (dgl.data.aslinkpreddataset method)": [[136, "dgl.data.AsLinkPredDataset.__len__", false]], "__len__() (dgl.data.asnodepreddataset method)": [[137, "dgl.data.AsNodePredDataset.__len__", false]], "__len__() (dgl.data.ba2motifdataset method)": [[138, "dgl.data.BA2MotifDataset.__len__", false]], "__len__() (dgl.data.bacommunitydataset method)": [[139, "dgl.data.BACommunityDataset.__len__", false]], "__len__() (dgl.data.bashapedataset method)": [[140, "dgl.data.BAShapeDataset.__len__", false]], "__len__() (dgl.data.bgsdataset method)": [[141, "dgl.data.BGSDataset.__len__", false]], "__len__() (dgl.data.bitcoinotcdataset method)": [[142, "dgl.data.BitcoinOTCDataset.__len__", false]], "__len__() (dgl.data.chameleondataset method)": [[145, "dgl.data.ChameleonDataset.__len__", false]], "__len__() (dgl.data.citeseergraphdataset method)": [[146, "dgl.data.CiteseerGraphDataset.__len__", false]], "__len__() (dgl.data.clusterdataset method)": [[143, "dgl.data.CLUSTERDataset.__len__", false]], "__len__() (dgl.data.coauthorcsdataset method)": [[147, "dgl.data.CoauthorCSDataset.__len__", false]], "__len__() (dgl.data.coauthorphysicsdataset method)": [[148, "dgl.data.CoauthorPhysicsDataset.__len__", false]], "__len__() (dgl.data.corafulldataset method)": [[149, "dgl.data.CoraFullDataset.__len__", false]], "__len__() (dgl.data.coragraphdataset method)": [[150, "dgl.data.CoraGraphDataset.__len__", false]], "__len__() (dgl.data.cornelldataset method)": [[151, "dgl.data.CornellDataset.__len__", false]], "__len__() (dgl.data.csvdataset method)": [[144, "dgl.data.CSVDataset.__len__", false]], "__len__() (dgl.data.dgldataset method)": [[152, "dgl.data.DGLDataset.__len__", false]], "__len__() (dgl.data.fakenewsdataset method)": [[155, "dgl.data.FakeNewsDataset.__len__", false]], "__len__() (dgl.data.fb15k237dataset method)": [[153, "dgl.data.FB15k237Dataset.__len__", false]], "__len__() (dgl.data.fb15kdataset method)": [[154, "dgl.data.FB15kDataset.__len__", false]], "__len__() (dgl.data.flickrdataset method)": [[156, "dgl.data.FlickrDataset.__len__", false]], "__len__() (dgl.data.fraudamazondataset method)": [[157, "dgl.data.FraudAmazonDataset.__len__", false]], "__len__() (dgl.data.frauddataset method)": [[158, "dgl.data.FraudDataset.__len__", false]], "__len__() (dgl.data.fraudyelpdataset method)": [[159, "dgl.data.FraudYelpDataset.__len__", false]], "__len__() (dgl.data.gdeltdataset method)": [[160, "dgl.data.GDELTDataset.__len__", false]], "__len__() (dgl.data.gindataset method)": [[161, "dgl.data.GINDataset.__len__", false]], "__len__() (dgl.data.icews18dataset method)": [[162, "dgl.data.ICEWS18Dataset.__len__", false]], "__len__() (dgl.data.karateclubdataset method)": [[163, "dgl.data.KarateClubDataset.__len__", false]], "__len__() (dgl.data.legacytudataset method)": [[164, "dgl.data.LegacyTUDataset.__len__", false]], "__len__() (dgl.data.minigcdataset method)": [[166, "dgl.data.MiniGCDataset.__len__", false]], "__len__() (dgl.data.mutagdataset method)": [[165, "dgl.data.MUTAGDataset.__len__", false]], "__len__() (dgl.data.patterndataset method)": [[167, "dgl.data.PATTERNDataset.__len__", false]], "__len__() (dgl.data.ppidataset method)": [[168, "dgl.data.PPIDataset.__len__", false]], "__len__() (dgl.data.pubmedgraphdataset method)": [[169, "dgl.data.PubmedGraphDataset.__len__", false]], "__len__() (dgl.data.qm7bdataset method)": [[170, "dgl.data.QM7bDataset.__len__", false]], "__len__() (dgl.data.qm9dataset method)": [[171, "dgl.data.QM9Dataset.__len__", false]], "__len__() (dgl.data.qm9edgedataset method)": [[172, "dgl.data.QM9EdgeDataset.__len__", false]], "__len__() (dgl.data.redditdataset method)": [[173, "dgl.data.RedditDataset.__len__", false]], "__len__() (dgl.data.sbmmixturedataset method)": [[174, "dgl.data.SBMMixtureDataset.__len__", false]], "__len__() (dgl.data.squirreldataset method)": [[176, "dgl.data.SquirrelDataset.__len__", false]], "__len__() (dgl.data.sstdataset method)": [[175, "dgl.data.SSTDataset.__len__", false]], "__len__() (dgl.data.texasdataset method)": [[178, "dgl.data.TexasDataset.__len__", false]], "__len__() (dgl.data.treecycledataset method)": [[179, "dgl.data.TreeCycleDataset.__len__", false]], "__len__() (dgl.data.treegriddataset method)": [[180, "dgl.data.TreeGridDataset.__len__", false]], "__len__() (dgl.data.tudataset method)": [[177, "dgl.data.TUDataset.__len__", false]], "__len__() (dgl.data.utils.subset method)": [[186, "dgl.data.utils.Subset.__len__", false]], "__len__() (dgl.data.wikicsdataset method)": [[182, "dgl.data.WikiCSDataset.__len__", false]], "__len__() (dgl.data.wisconsindataset method)": [[183, "dgl.data.WisconsinDataset.__len__", false]], "__len__() (dgl.data.wn18dataset method)": [[181, "dgl.data.WN18Dataset.__len__", false]], "__len__() (dgl.data.yelpdataset method)": [[184, "dgl.data.YelpDataset.__len__", false]], "__len__() (dgl.data.zincdataset method)": [[185, "dgl.data.ZINCDataset.__len__", false]], "actordataset (class in dgl.data)": [[132, "dgl.data.ActorDataset", false]], "add() (in module dgl.sparse)": [[552, "dgl.sparse.add", false]], "add_edges() (dgl.dglgraph method)": [[26, "dgl.DGLGraph.add_edges", false]], "add_edges() (in module dgl)": [[113, "dgl.add_edges", false]], "add_node_property_split (class in dgl.data.utils)": [[187, "dgl.data.utils.add_node_property_split", false]], "add_nodepred_split (class in dgl.data.utils)": [[188, "dgl.data.utils.add_nodepred_split", false]], "add_nodes() (dgl.dglgraph method)": [[27, "dgl.DGLGraph.add_nodes", false]], "add_nodes() (in module dgl)": [[114, "dgl.add_nodes", false]], "add_reverse_edges() (in module dgl)": [[115, "dgl.add_reverse_edges", false]], "add_self_loop() (dgl.dglgraph method)": [[28, "dgl.DGLGraph.add_self_loop", false]], "add_self_loop() (in module dgl)": [[116, "dgl.add_self_loop", false]], "addedge (class in dgl.transforms)": [[593, "dgl.transforms.AddEdge", false]], "addmetapaths (class in dgl.transforms)": [[594, "dgl.transforms.AddMetaPaths", false]], "addreverse (class in dgl.transforms)": [[595, "dgl.transforms.AddReverse", false]], "addselfloop (class in dgl.transforms)": [[596, "dgl.transforms.AddSelfLoop", false]], "adj() (dgl.dglgraph method)": [[29, "dgl.DGLGraph.adj", false]], "adj_external() (dgl.dglgraph method)": [[30, "dgl.DGLGraph.adj_external", false]], "adj_product_graph() (in module dgl)": [[117, "dgl.adj_product_graph", false]], "adj_sum_graph() (in module dgl)": [[118, "dgl.adj_sum_graph", false]], "adj_tensors() (dgl.dglgraph method)": [[31, "dgl.DGLGraph.adj_tensors", false]], "adjacency_matrix() (dgl.dglgraph method)": [[32, "dgl.DGLGraph.adjacency_matrix", false]], "agnnconv (class in dgl.nn.mxnet.conv)": [[301, "dgl.nn.mxnet.conv.AGNNConv", false]], "agnnconv (class in dgl.nn.pytorch.conv)": [[331, "dgl.nn.pytorch.conv.AGNNConv", false]], "aifbdataset (class in dgl.data)": [[130, "dgl.data.AIFBDataset", false]], "amazoncobuycomputerdataset (class in dgl.data)": [[133, "dgl.data.AmazonCoBuyComputerDataset", false]], "amazoncobuyphotodataset (class in dgl.data)": [[134, "dgl.data.AmazonCoBuyPhotoDataset", false]], "amdataset (class in dgl.data)": [[131, "dgl.data.AMDataset", false]], "apply_each() (in module dgl)": [[119, "dgl.apply_each", false]], "apply_edges() (dgl.dglgraph method)": [[33, "dgl.DGLGraph.apply_edges", false]], "apply_nodes() (dgl.dglgraph method)": [[34, "dgl.DGLGraph.apply_nodes", false]], "appnpconv (class in dgl.nn.mxnet.conv)": [[302, "dgl.nn.mxnet.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.pytorch.conv)": [[332, "dgl.nn.pytorch.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.tensorflow.conv)": [[406, "dgl.nn.tensorflow.conv.APPNPConv", false]], "as_edge_prediction_sampler() (in module dgl.dataloading)": [[210, "dgl.dataloading.as_edge_prediction_sampler", false]], "asgraphpreddataset (class in dgl.data)": [[135, "dgl.data.AsGraphPredDataset", false]], "aslinkpreddataset (class in dgl.data)": [[136, "dgl.data.AsLinkPredDataset", false]], "asnodepreddataset (class in dgl.data)": [[137, "dgl.data.AsNodePredDataset", false]], "atomicconv (class in dgl.nn.pytorch.conv)": [[333, "dgl.nn.pytorch.conv.AtomicConv", false]], "avgpooling (class in dgl.nn.mxnet.glob)": [[318, "dgl.nn.mxnet.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.pytorch.glob)": [[374, "dgl.nn.pytorch.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.tensorflow.glob)": [[414, "dgl.nn.tensorflow.glob.AvgPooling", false]], "ba2motifdataset (class in dgl.data)": [[138, "dgl.data.BA2MotifDataset", false]], "bacommunitydataset (class in dgl.data)": [[139, "dgl.data.BACommunityDataset", false]], "barrier() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.barrier", false]], "basetransform (class in dgl.transforms)": [[597, "dgl.transforms.BaseTransform", false]], "bashapedataset (class in dgl.data)": [[140, "dgl.data.BAShapeDataset", false]], "batch() (in module dgl)": [[120, "dgl.batch", false]], "batch_num_edges() (dgl.dglgraph method)": [[35, "dgl.DGLGraph.batch_num_edges", false]], "batch_num_nodes() (dgl.dglgraph method)": [[36, "dgl.DGLGraph.batch_num_nodes", false]], "batch_size (dgl.dglgraph property)": [[37, "dgl.DGLGraph.batch_size", false]], "batch_size() (dgl.udf.edgebatch method)": [[617, "dgl.udf.EdgeBatch.batch_size", false]], "batch_size() (dgl.udf.nodebatch method)": [[622, "dgl.udf.NodeBatch.batch_size", false]], "bfs_edges_generator() (in module dgl)": [[121, "dgl.bfs_edges_generator", false]], "bfs_nodes_generator() (in module dgl)": [[122, "dgl.bfs_nodes_generator", false]], "bgsdataset (class in dgl.data)": [[141, "dgl.data.BGSDataset", false]], "bias (dgl.nn.pytorch.conv.graphconv attribute)": [[356, "dgl.nn.pytorch.conv.GraphConv.bias", false]], "biasedmha (class in dgl.nn.pytorch.gt)": [[390, "dgl.nn.pytorch.gt.BiasedMHA", false]], "biasedmultiheadattention (class in dgl.nn.pytorch.graph_transformer)": [[383, "dgl.nn.pytorch.graph_transformer.BiasedMultiheadAttention", false]], "bipartite_from_networkx() (in module dgl)": [[123, "dgl.bipartite_from_networkx", false]], "bipartite_from_scipy() (in module dgl)": [[124, "dgl.bipartite_from_scipy", false]], "bitcoinotcdataset (class in dgl.data)": [[142, "dgl.data.BitcoinOTCDataset", false]], "block_to_graph() (in module dgl)": [[125, "dgl.block_to_graph", false]], "blocksampler (class in dgl.dataloading)": [[198, "dgl.dataloading.BlockSampler", false]], "broadcast_edges() (in module dgl)": [[126, "dgl.broadcast_edges", false]], "broadcast_nodes() (in module dgl)": [[127, "dgl.broadcast_nodes", false]], "bsddmm() (in module dgl.sparse)": [[553, "dgl.sparse.bsddmm", false]], "bspmm() (in module dgl.sparse)": [[554, "dgl.sparse.bspmm", false]], "call_once_and_share() (in module dgl.multiprocessing.pytorch)": [[297, "dgl.multiprocessing.pytorch.call_once_and_share", false]], "canonical_etypes (dgl.dglgraph property)": [[38, "dgl.DGLGraph.canonical_etypes", false]], "canonical_etypes (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.canonical_etypes", false]], "cfconv (class in dgl.nn.pytorch.conv)": [[334, "dgl.nn.pytorch.conv.CFConv", false]], "chameleondataset (class in dgl.data)": [[145, "dgl.data.ChameleonDataset", false]], "chebconv (class in dgl.nn.mxnet.conv)": [[303, "dgl.nn.mxnet.conv.ChebConv", false]], "chebconv (class in dgl.nn.pytorch.conv)": [[335, "dgl.nn.pytorch.conv.ChebConv", false]], "chebconv (class in dgl.nn.tensorflow.conv)": [[407, "dgl.nn.tensorflow.conv.ChebConv", false]], "check_sha1 (class in dgl.data.utils)": [[189, "dgl.data.utils.check_sha1", false]], "citeseergraphdataset (class in dgl.data)": [[146, "dgl.data.CiteseerGraphDataset", false]], "clusterdataset (class in dgl.data)": [[143, "dgl.data.CLUSTERDataset", false]], "clustergcnsampler (class in dgl.dataloading)": [[199, "dgl.dataloading.ClusterGCNSampler", false]], "coalesce() (dgl.sparse.sparsematrix method)": [[522, "dgl.sparse.SparseMatrix.coalesce", false]], "coauthorcsdataset (class in dgl.data)": [[147, "dgl.data.CoauthorCSDataset", false]], "coauthorphysicsdataset (class in dgl.data)": [[148, "dgl.data.CoauthorPhysicsDataset", false]], "col (dgl.sparse.sparsematrix property)": [[523, "dgl.sparse.SparseMatrix.col", false]], "collate_fn() (dgl.data.sbmmixturedataset method)": [[174, "dgl.data.SBMMixtureDataset.collate_fn", false]], "compact_graphs() (in module dgl)": [[128, "dgl.compact_graphs", false]], "compose (class in dgl.transforms)": [[598, "dgl.transforms.Compose", false]], "coo() (dgl.sparse.sparsematrix method)": [[524, "dgl.sparse.SparseMatrix.coo", false]], "copy_e() (in module dgl.function)": [[239, "dgl.function.copy_e", false]], "copy_e_max() (in module dgl.ops)": [[424, "dgl.ops.copy_e_max", false]], "copy_e_mean() (in module dgl.ops)": [[425, "dgl.ops.copy_e_mean", false]], "copy_e_min() (in module dgl.ops)": [[426, "dgl.ops.copy_e_min", false]], "copy_e_sum() (in module dgl.ops)": [[427, "dgl.ops.copy_e_sum", false]], "copy_u() (in module dgl.function)": [[240, "dgl.function.copy_u", false]], "copy_u() (in module dgl.ops)": [[428, "dgl.ops.copy_u", false]], "copy_u_max() (in module dgl.ops)": [[429, "dgl.ops.copy_u_max", false]], "copy_u_mean() (in module dgl.ops)": [[430, "dgl.ops.copy_u_mean", false]], "copy_u_min() (in module dgl.ops)": [[431, "dgl.ops.copy_u_min", false]], "copy_u_sum() (in module dgl.ops)": [[432, "dgl.ops.copy_u_sum", false]], "copy_v() (in module dgl.ops)": [[433, "dgl.ops.copy_v", false]], "corafulldataset (class in dgl.data)": [[149, "dgl.data.CoraFullDataset", false]], "coragraphdataset (class in dgl.data)": [[150, "dgl.data.CoraGraphDataset", false]], "cornelldataset (class in dgl.data)": [[151, "dgl.data.CornellDataset", false]], "cpu() (dgl.dglgraph method)": [[39, "dgl.DGLGraph.cpu", false]], "cpu() (dgl.sparse.sparsematrix method)": [[525, "dgl.sparse.SparseMatrix.cpu", false]], "create_block() (in module dgl)": [[129, "dgl.create_block", false]], "create_formats_() (dgl.dglgraph method)": [[40, "dgl.DGLGraph.create_formats_", false]], "csc() (dgl.sparse.sparsematrix method)": [[526, "dgl.sparse.SparseMatrix.csc", false]], "csr() (dgl.sparse.sparsematrix method)": [[527, "dgl.sparse.SparseMatrix.csr", false]], "csvdataset (class in dgl.data)": [[144, "dgl.data.CSVDataset", false]], "cuda() (dgl.sparse.sparsematrix method)": [[528, "dgl.sparse.SparseMatrix.cuda", false]], "cugraphgatconv (class in dgl.nn.pytorch.conv)": [[336, "dgl.nn.pytorch.conv.CuGraphGATConv", false]], "cugraphrelgraphconv (class in dgl.nn.pytorch.conv)": [[337, "dgl.nn.pytorch.conv.CuGraphRelGraphConv", false]], "cugraphsageconv (class in dgl.nn.pytorch.conv)": [[338, "dgl.nn.pytorch.conv.CuGraphSAGEConv", false]], "data (dgl.data.csvdataset attribute)": [[144, "dgl.data.CSVDataset.data", false]], "data (dgl.udf.edgebatch property)": [[618, "dgl.udf.EdgeBatch.data", false]], "data (dgl.udf.nodebatch property)": [[623, "dgl.udf.NodeBatch.data", false]], "dataloader (class in dgl.dataloading)": [[200, "dgl.dataloading.DataLoader", false]], "deepwalk (class in dgl.nn.pytorch)": [[325, "dgl.nn.pytorch.DeepWalk", false]], "degreeencoder (class in dgl.nn.pytorch.graph_transformer)": [[384, "dgl.nn.pytorch.graph_transformer.DegreeEncoder", false]], "degreeencoder (class in dgl.nn.pytorch.gt)": [[391, "dgl.nn.pytorch.gt.DegreeEncoder", false]], "densechebconv (class in dgl.nn.mxnet.conv)": [[304, "dgl.nn.mxnet.conv.DenseChebConv", false]], "densechebconv (class in dgl.nn.pytorch.conv)": [[340, "dgl.nn.pytorch.conv.DenseChebConv", false]], "densegraphconv (class in dgl.nn.mxnet.conv)": [[305, "dgl.nn.mxnet.conv.DenseGraphConv", false]], "densegraphconv (class in dgl.nn.pytorch.conv)": [[341, "dgl.nn.pytorch.conv.DenseGraphConv", false]], "densesageconv (class in dgl.nn.mxnet.conv)": [[306, "dgl.nn.mxnet.conv.DenseSAGEConv", false]], "densesageconv (class in dgl.nn.pytorch.conv)": [[342, "dgl.nn.pytorch.conv.DenseSAGEConv", false]], "device (dgl.dglgraph property)": [[41, "dgl.DGLGraph.device", false]], "device (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.device", false]], "device (dgl.sparse.sparsematrix property)": [[529, "dgl.sparse.SparseMatrix.device", false]], "dfs_edges_generator() (in module dgl)": [[219, "dgl.dfs_edges_generator", false]], "dfs_labeled_edges_generator() (in module dgl)": [[220, "dgl.dfs_labeled_edges_generator", false]], "dgl": [[0, "module-dgl", false]], "dgl.data": [[2, "module-dgl.data", false]], "dgl.geometry": [[6, "module-dgl.geometry", false]], "dgl.nn.functional": [[17, "module-dgl.nn.functional", false]], "dgl.optim": [[9, "module-dgl.optim", false]], "dgl.sampling": [[10, "module-dgl.sampling", false]], "dgl.transforms": [[18, "module-dgl.transforms", false]], "dgldataset (class in dgl.data)": [[152, "dgl.data.DGLDataset", false]], "dglgraph (class in dgl)": [[1, "dgl.DGLGraph", false]], "dgnconv (class in dgl.nn.pytorch.conv)": [[339, "dgl.nn.pytorch.conv.DGNConv", false]], "diag() (in module dgl.sparse)": [[555, "dgl.sparse.diag", false]], "distdataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistDataLoader", false]], "distedgedataloader (class in dgl.dataloading)": [[201, "dgl.dataloading.DistEdgeDataLoader", false]], "distembedding (class in dgl.distributed)": [[4, "dgl.distributed.DistEmbedding", false]], "distgraph (class in dgl.distributed)": [[4, "dgl.distributed.DistGraph", false]], "distnodedataloader (class in dgl.dataloading)": [[202, "dgl.dataloading.DistNodeDataLoader", false]], "disttensor (class in dgl.distributed)": [[4, "dgl.distributed.DistTensor", false]], "div() (in module dgl.sparse)": [[556, "dgl.sparse.div", false]], "dotgatconv (class in dgl.nn.pytorch.conv)": [[343, "dgl.nn.pytorch.conv.DotGatConv", false]], "double() (dgl.sparse.sparsematrix method)": [[530, "dgl.sparse.SparseMatrix.double", false]], "double_radius_node_labeling() (in module dgl)": [[232, "dgl.double_radius_node_labeling", false]], "download (class in dgl.data.utils)": [[190, "dgl.data.utils.download", false]], "dropedge (class in dgl.transforms)": [[599, "dgl.transforms.DropEdge", false]], "dropnode (class in dgl.transforms)": [[600, "dgl.transforms.DropNode", false]], "dst (dgl.udf.edgebatch property)": [[619, "dgl.udf.EdgeBatch.dst", false]], "dstdata (dgl.dglgraph property)": [[42, "dgl.DGLGraph.dstdata", false]], "dstnodes (dgl.dglgraph property)": [[43, "dgl.DGLGraph.dstnodes", false]], "dsttypes (dgl.dglgraph property)": [[44, "dgl.DGLGraph.dsttypes", false]], "dtype (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.dtype", false]], "dtype (dgl.sparse.sparsematrix property)": [[531, "dgl.sparse.SparseMatrix.dtype", false]], "e_add_u() (in module dgl.function)": [[241, "dgl.function.e_add_u", false]], "e_add_u() (in module dgl.ops)": [[434, "dgl.ops.e_add_u", false]], "e_add_v() (in module dgl.function)": [[242, "dgl.function.e_add_v", false]], "e_add_v() (in module dgl.ops)": [[435, "dgl.ops.e_add_v", false]], "e_div_u() (in module dgl.function)": [[243, "dgl.function.e_div_u", false]], "e_div_u() (in module dgl.ops)": [[436, "dgl.ops.e_div_u", false]], "e_div_v() (in module dgl.function)": [[244, "dgl.function.e_div_v", false]], "e_div_v() (in module dgl.ops)": [[437, "dgl.ops.e_div_v", false]], "e_dot_u() (in module dgl.function)": [[245, "dgl.function.e_dot_u", false]], "e_dot_u() (in module dgl.ops)": [[438, "dgl.ops.e_dot_u", false]], "e_dot_v() (in module dgl.function)": [[246, "dgl.function.e_dot_v", false]], "e_dot_v() (in module dgl.ops)": [[439, "dgl.ops.e_dot_v", false]], "e_mul_u() (in module dgl.function)": [[247, "dgl.function.e_mul_u", false]], "e_mul_u() (in module dgl.ops)": [[440, "dgl.ops.e_mul_u", false]], "e_mul_v() (in module dgl.function)": [[248, "dgl.function.e_mul_v", false]], "e_mul_v() (in module dgl.ops)": [[441, "dgl.ops.e_mul_v", false]], "e_sub_u() (in module dgl.function)": [[249, "dgl.function.e_sub_u", false]], "e_sub_u() (in module dgl.ops)": [[442, "dgl.ops.e_sub_u", false]], "e_sub_v() (in module dgl.function)": [[250, "dgl.function.e_sub_v", false]], "e_sub_v() (in module dgl.ops)": [[443, "dgl.ops.e_sub_v", false]], "edata (dgl.dglgraph property)": [[45, "dgl.DGLGraph.edata", false]], "edata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edata", false]], "edge_attr_schemes() (dgl.dglgraph method)": [[46, "dgl.DGLGraph.edge_attr_schemes", false]], "edge_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.edge_attr_schemes", false]], "edge_feat_size (dgl.data.asgraphpreddataset attribute)": [[135, "dgl.data.AsGraphPredDataset.edge_feat_size", false]], "edge_homophily() (in module dgl)": [[233, "dgl.edge_homophily", false]], "edge_ids() (dgl.dglgraph method)": [[47, "dgl.DGLGraph.edge_ids", false]], "edge_softmax() (in module dgl.nn.functional)": [[299, "dgl.nn.functional.edge_softmax", false]], "edge_split() (in module dgl.distributed)": [[221, "dgl.distributed.edge_split", false]], "edge_subgraph() (dgl.dglgraph method)": [[48, "dgl.DGLGraph.edge_subgraph", false]], "edge_subgraph() (in module dgl)": [[234, "dgl.edge_subgraph", false]], "edge_type_subgraph() (dgl.dglgraph method)": [[49, "dgl.DGLGraph.edge_type_subgraph", false]], "edge_type_subgraph() (in module dgl)": [[235, "dgl.edge_type_subgraph", false]], "edgeconv (class in dgl.nn.mxnet.conv)": [[307, "dgl.nn.mxnet.conv.EdgeConv", false]], "edgeconv (class in dgl.nn.pytorch.conv)": [[346, "dgl.nn.pytorch.conv.EdgeConv", false]], "edgegatconv (class in dgl.nn.pytorch.conv)": [[347, "dgl.nn.pytorch.conv.EdgeGATConv", false]], "edgepredictor (class in dgl.nn.pytorch.link)": [[398, "dgl.nn.pytorch.link.EdgePredictor", false]], "edges (dgl.dglgraph property)": [[50, "dgl.DGLGraph.edges", false]], "edges (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edges", false]], "edges() (dgl.udf.edgebatch method)": [[620, "dgl.udf.EdgeBatch.edges", false]], "edgeweightnorm (class in dgl.nn.pytorch.conv)": [[348, "dgl.nn.pytorch.conv.EdgeWeightNorm", false]], "egatconv (class in dgl.nn.pytorch.conv)": [[344, "dgl.nn.pytorch.conv.EGATConv", false]], "egnnconv (class in dgl.nn.pytorch.conv)": [[345, "dgl.nn.pytorch.conv.EGNNConv", false]], "egtlayer (class in dgl.nn.pytorch.graph_transformer)": [[385, "dgl.nn.pytorch.graph_transformer.EGTLayer", false]], "egtlayer (class in dgl.nn.pytorch.gt)": [[392, "dgl.nn.pytorch.gt.EGTLayer", false]], "eid2localeid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2localeid", false]], "eid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2partid", false]], "end_time (dgl.data.gdeltdataset attribute)": [[160, "dgl.data.GDELTDataset.end_time", false]], "etypes (dgl.dglgraph property)": [[51, "dgl.DGLGraph.etypes", false]], "etypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.etypes", false]], "explain_graph() (dgl.nn.pytorch.explain.gnnexplainer method)": [[367, "dgl.nn.pytorch.explain.GNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[368, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[369, "dgl.nn.pytorch.explain.HeteroSubgraphX.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.subgraphx method)": [[370, "dgl.nn.pytorch.explain.SubgraphX.explain_graph", false]], "explain_node() (dgl.nn.pytorch.explain.gnnexplainer method)": [[367, "dgl.nn.pytorch.explain.GNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[368, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_node", false]], "extract_archive (class in dgl.data.utils)": [[191, "dgl.data.utils.extract_archive", false]], "fakenewsdataset (class in dgl.data)": [[155, "dgl.data.FakeNewsDataset", false]], "farthest_point_sampler (class in dgl.geometry)": [[6, "dgl.geometry.farthest_point_sampler", false]], "fb15k237dataset (class in dgl.data)": [[153, "dgl.data.FB15k237Dataset", false]], "fb15kdataset (class in dgl.data)": [[154, "dgl.data.FB15kDataset", false]], "feat_size (dgl.data.aslinkpreddataset attribute)": [[136, "dgl.data.AsLinkPredDataset.feat_size", false]], "featmask (class in dgl.transforms)": [[601, "dgl.transforms.FeatMask", false]], "feature (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.feature", false]], "feature_name (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.feature_name", false]], "features (dgl.data.ppidataset attribute)": [[168, "dgl.data.PPIDataset.features", false]], "filter_edges() (dgl.dglgraph method)": [[52, "dgl.DGLGraph.filter_edges", false]], "filter_nodes() (dgl.dglgraph method)": [[53, "dgl.DGLGraph.filter_nodes", false]], "find_edges() (dgl.dglgraph method)": [[54, "dgl.DGLGraph.find_edges", false]], "find_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.find_edges", false]], "find_edges() (in module dgl.distributed)": [[222, "dgl.distributed.find_edges", false]], "flickrdataset (class in dgl.data)": [[156, "dgl.data.FlickrDataset", false]], "float() (dgl.sparse.sparsematrix method)": [[532, "dgl.sparse.SparseMatrix.float", false]], "formats() (dgl.dglgraph method)": [[55, "dgl.DGLGraph.formats", false]], "forward() (dgl.nn.pytorch.conv.agnnconv method)": [[331, "dgl.nn.pytorch.conv.AGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.appnpconv method)": [[332, "dgl.nn.pytorch.conv.APPNPConv.forward", false]], "forward() (dgl.nn.pytorch.conv.atomicconv method)": [[333, "dgl.nn.pytorch.conv.AtomicConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cfconv method)": [[334, "dgl.nn.pytorch.conv.CFConv.forward", false]], "forward() (dgl.nn.pytorch.conv.chebconv method)": [[335, "dgl.nn.pytorch.conv.ChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[336, "dgl.nn.pytorch.conv.CuGraphGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[337, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[338, "dgl.nn.pytorch.conv.CuGraphSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densechebconv method)": [[340, "dgl.nn.pytorch.conv.DenseChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densegraphconv method)": [[341, "dgl.nn.pytorch.conv.DenseGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densesageconv method)": [[342, "dgl.nn.pytorch.conv.DenseSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dgnconv method)": [[339, "dgl.nn.pytorch.conv.DGNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dotgatconv method)": [[343, "dgl.nn.pytorch.conv.DotGatConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeconv method)": [[346, "dgl.nn.pytorch.conv.EdgeConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgegatconv method)": [[347, "dgl.nn.pytorch.conv.EdgeGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeweightnorm method)": [[348, "dgl.nn.pytorch.conv.EdgeWeightNorm.forward", false]], "forward() (dgl.nn.pytorch.conv.egatconv method)": [[344, "dgl.nn.pytorch.conv.EGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.egnnconv method)": [[345, "dgl.nn.pytorch.conv.EGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatconv method)": [[349, "dgl.nn.pytorch.conv.GATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[355, "dgl.nn.pytorch.conv.GatedGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatv2conv method)": [[350, "dgl.nn.pytorch.conv.GATv2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.gcn2conv method)": [[351, "dgl.nn.pytorch.conv.GCN2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.ginconv method)": [[352, "dgl.nn.pytorch.conv.GINConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gineconv method)": [[353, "dgl.nn.pytorch.conv.GINEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gmmconv method)": [[354, "dgl.nn.pytorch.conv.GMMConv.forward", false]], "forward() (dgl.nn.pytorch.conv.graphconv method)": [[356, "dgl.nn.pytorch.conv.GraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.grouprevres method)": [[357, "dgl.nn.pytorch.conv.GroupRevRes.forward", false]], "forward() (dgl.nn.pytorch.conv.hgtconv method)": [[358, "dgl.nn.pytorch.conv.HGTConv.forward", false]], "forward() (dgl.nn.pytorch.conv.nnconv method)": [[359, "dgl.nn.pytorch.conv.NNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.pnaconv method)": [[360, "dgl.nn.pytorch.conv.PNAConv.forward", false]], "forward() (dgl.nn.pytorch.conv.relgraphconv method)": [[361, "dgl.nn.pytorch.conv.RelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sageconv method)": [[362, "dgl.nn.pytorch.conv.SAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sgconv method)": [[363, "dgl.nn.pytorch.conv.SGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.tagconv method)": [[364, "dgl.nn.pytorch.conv.TAGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsconv method)": [[365, "dgl.nn.pytorch.conv.TWIRLSConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsunfoldingandattention method)": [[366, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.forward", false]], "forward() (dgl.nn.pytorch.deepwalk method)": [[325, "dgl.nn.pytorch.DeepWalk.forward", false]], "forward() (dgl.nn.pytorch.explain.gnnexplainer method)": [[367, "dgl.nn.pytorch.explain.GNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[368, "dgl.nn.pytorch.explain.HeteroGNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[369, "dgl.nn.pytorch.explain.HeteroSubgraphX.forward", false]], "forward() (dgl.nn.pytorch.explain.subgraphx method)": [[370, "dgl.nn.pytorch.explain.SubgraphX.forward", false]], "forward() (dgl.nn.pytorch.factory.knngraph method)": [[371, "dgl.nn.pytorch.factory.KNNGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.radiusgraph method)": [[372, "dgl.nn.pytorch.factory.RadiusGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.segmentedknngraph method)": [[373, "dgl.nn.pytorch.factory.SegmentedKNNGraph.forward", false]], "forward() (dgl.nn.pytorch.glob.avgpooling method)": [[374, "dgl.nn.pytorch.glob.AvgPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.globalattentionpooling method)": [[375, "dgl.nn.pytorch.glob.GlobalAttentionPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.maxpooling method)": [[376, "dgl.nn.pytorch.glob.MaxPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.set2set method)": [[377, "dgl.nn.pytorch.glob.Set2Set.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerdecoder method)": [[378, "dgl.nn.pytorch.glob.SetTransformerDecoder.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerencoder method)": [[379, "dgl.nn.pytorch.glob.SetTransformerEncoder.forward", false]], "forward() (dgl.nn.pytorch.glob.sortpooling method)": [[380, "dgl.nn.pytorch.glob.SortPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.sumpooling method)": [[381, "dgl.nn.pytorch.glob.SumPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.weightandsum method)": [[382, "dgl.nn.pytorch.glob.WeightAndSum.forward", false]], "forward() (dgl.nn.pytorch.gt.biasedmha method)": [[390, "dgl.nn.pytorch.gt.BiasedMHA.forward", false]], "forward() (dgl.nn.pytorch.gt.degreeencoder method)": [[391, "dgl.nn.pytorch.gt.DegreeEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.egtlayer method)": [[392, "dgl.nn.pytorch.gt.EGTLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.graphormerlayer method)": [[393, "dgl.nn.pytorch.gt.GraphormerLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.lapposencoder method)": [[394, "dgl.nn.pytorch.gt.LapPosEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.pathencoder method)": [[395, "dgl.nn.pytorch.gt.PathEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder method)": [[396, "dgl.nn.pytorch.gt.SpatialEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder3d method)": [[397, "dgl.nn.pytorch.gt.SpatialEncoder3d.forward", false]], "forward() (dgl.nn.pytorch.heteroembedding method)": [[326, "dgl.nn.pytorch.HeteroEmbedding.forward", false]], "forward() (dgl.nn.pytorch.heterographconv method)": [[327, "dgl.nn.pytorch.HeteroGraphConv.forward", false]], "forward() (dgl.nn.pytorch.heterolinear method)": [[328, "dgl.nn.pytorch.HeteroLinear.forward", false]], "forward() (dgl.nn.pytorch.link.edgepredictor method)": [[398, "dgl.nn.pytorch.link.EdgePredictor.forward", false]], "forward() (dgl.nn.pytorch.link.transe method)": [[399, "dgl.nn.pytorch.link.TransE.forward", false]], "forward() (dgl.nn.pytorch.link.transr method)": [[400, "dgl.nn.pytorch.link.TransR.forward", false]], "forward() (dgl.nn.pytorch.metapath2vec method)": [[329, "dgl.nn.pytorch.MetaPath2Vec.forward", false]], "forward() (dgl.nn.pytorch.typedlinear method)": [[330, "dgl.nn.pytorch.TypedLinear.forward", false]], "forward() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[402, "dgl.nn.pytorch.utils.JumpingKnowledge.forward", false]], "forward() (dgl.nn.pytorch.utils.labelpropagation method)": [[403, "dgl.nn.pytorch.utils.LabelPropagation.forward", false]], "forward() (dgl.nn.pytorch.utils.sequential method)": [[404, "dgl.nn.pytorch.utils.Sequential.forward", false]], "forward() (dgl.nn.pytorch.utils.weightbasis method)": [[405, "dgl.nn.pytorch.utils.WeightBasis.forward", false]], "fraudamazondataset (class in dgl.data)": [[157, "dgl.data.FraudAmazonDataset", false]], "frauddataset (class in dgl.data)": [[158, "dgl.data.FraudDataset", false]], "fraudyelpdataset (class in dgl.data)": [[159, "dgl.data.FraudYelpDataset", false]], "from_coo() (in module dgl.sparse)": [[557, "dgl.sparse.from_coo", false]], "from_csc() (in module dgl.sparse)": [[558, "dgl.sparse.from_csc", false]], "from_csr() (in module dgl.sparse)": [[559, "dgl.sparse.from_csr", false]], "from_cugraph() (in module dgl)": [[236, "dgl.from_cugraph", false]], "from_networkx() (in module dgl)": [[237, "dgl.from_networkx", false]], "from_scipy() (in module dgl)": [[238, "dgl.from_scipy", false]], "gatconv (class in dgl.nn.mxnet.conv)": [[308, "dgl.nn.mxnet.conv.GATConv", false]], "gatconv (class in dgl.nn.pytorch.conv)": [[349, "dgl.nn.pytorch.conv.GATConv", false]], "gatconv (class in dgl.nn.tensorflow.conv)": [[408, "dgl.nn.tensorflow.conv.GATConv", false]], "gatedgraphconv (class in dgl.nn.mxnet.conv)": [[311, "dgl.nn.mxnet.conv.GatedGraphConv", false]], "gatedgraphconv (class in dgl.nn.pytorch.conv)": [[355, "dgl.nn.pytorch.conv.GatedGraphConv", false]], "gather_mm() (in module dgl.ops)": [[444, "dgl.ops.gather_mm", false]], "gatv2conv (class in dgl.nn.pytorch.conv)": [[350, "dgl.nn.pytorch.conv.GATv2Conv", false]], "gcn2conv (class in dgl.nn.pytorch.conv)": [[351, "dgl.nn.pytorch.conv.GCN2Conv", false]], "gcnnorm (class in dgl.transforms)": [[602, "dgl.transforms.GCNNorm", false]], "gdc (class in dgl.transforms)": [[603, "dgl.transforms.GDC", false]], "gdeltdataset (class in dgl.data)": [[160, "dgl.data.GDELTDataset", false]], "get_download_dir (class in dgl.data.utils)": [[192, "dgl.data.utils.get_download_dir", false]], "get_edge_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_edge_partition_policy", false]], "get_etype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_etype_id", false]], "get_node_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_node_partition_policy", false]], "get_ntype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_ntype_id", false]], "get_part_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_part_size", false]], "get_partition_book() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_partition_book", false]], "get_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_size", false]], "ginconv (class in dgl.nn.mxnet.conv)": [[309, "dgl.nn.mxnet.conv.GINConv", false]], "ginconv (class in dgl.nn.pytorch.conv)": [[352, "dgl.nn.pytorch.conv.GINConv", false]], "ginconv (class in dgl.nn.tensorflow.conv)": [[409, "dgl.nn.tensorflow.conv.GINConv", false]], "gindataset (class in dgl.data)": [[161, "dgl.data.GINDataset", false]], "gineconv (class in dgl.nn.pytorch.conv)": [[353, "dgl.nn.pytorch.conv.GINEConv", false]], "global_uniform_negative_sampling() (in module dgl.sampling)": [[504, "dgl.sampling.global_uniform_negative_sampling", false]], "globalattentionpooling (class in dgl.nn.mxnet.glob)": [[319, "dgl.nn.mxnet.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.pytorch.glob)": [[375, "dgl.nn.pytorch.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.tensorflow.glob)": [[415, "dgl.nn.tensorflow.glob.GlobalAttentionPooling", false]], "globaluniform (class in dgl.dataloading.negative_sampler)": [[216, "dgl.dataloading.negative_sampler.GlobalUniform", false]], "gmmconv (class in dgl.nn.mxnet.conv)": [[310, "dgl.nn.mxnet.conv.GMMConv", false]], "gmmconv (class in dgl.nn.pytorch.conv)": [[354, "dgl.nn.pytorch.conv.GMMConv", false]], "gnnexplainer (class in dgl.nn.pytorch.explain)": [[367, "dgl.nn.pytorch.explain.GNNExplainer", false]], "graph (dgl.data.frauddataset attribute)": [[158, "dgl.data.FraudDataset.graph", false]], "graph (dgl.data.mutagdataset attribute)": [[165, "dgl.data.MUTAGDataset.graph", false]], "graph() (in module dgl)": [[275, "dgl.graph", false]], "graphconv (class in dgl.nn.mxnet.conv)": [[312, "dgl.nn.mxnet.conv.GraphConv", false]], "graphconv (class in dgl.nn.pytorch.conv)": [[356, "dgl.nn.pytorch.conv.GraphConv", false]], "graphconv (class in dgl.nn.tensorflow.conv)": [[410, "dgl.nn.tensorflow.conv.GraphConv", false]], "graphdataloader (class in dgl.dataloading)": [[203, "dgl.dataloading.GraphDataLoader", false]], "graphormerlayer (class in dgl.nn.pytorch.graph_transformer)": [[386, "dgl.nn.pytorch.graph_transformer.GraphormerLayer", false]], "graphormerlayer (class in dgl.nn.pytorch.gt)": [[393, "dgl.nn.pytorch.gt.GraphormerLayer", false]], "graphpartitionbook (class in dgl.distributed)": [[4, "dgl.distributed.GraphPartitionBook", false]], "graphs (dgl.data.bitcoinotcdataset attribute)": [[142, "dgl.data.BitcoinOTCDataset.graphs", false]], "graphs (dgl.data.csvdataset attribute)": [[144, "dgl.data.CSVDataset.graphs", false]], "graphs (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.graphs", false]], "grouprevres (class in dgl.nn.pytorch.conv)": [[357, "dgl.nn.pytorch.conv.GroupRevRes", false]], "gsddmm() (in module dgl.ops)": [[445, "dgl.ops.gsddmm", false]], "gspmm() (in module dgl.ops)": [[446, "dgl.ops.gspmm", false]], "has_duplicate() (dgl.sparse.sparsematrix method)": [[533, "dgl.sparse.SparseMatrix.has_duplicate", false]], "has_edges_between() (dgl.dglgraph method)": [[56, "dgl.DGLGraph.has_edges_between", false]], "has_nodes() (dgl.dglgraph method)": [[57, "dgl.DGLGraph.has_nodes", false]], "hash (dgl.data.dgldataset attribute)": [[152, "dgl.data.DGLDataset.hash", false]], "heatkernel (class in dgl.transforms)": [[604, "dgl.transforms.HeatKernel", false]], "heteroembedding (class in dgl.nn.pytorch)": [[326, "dgl.nn.pytorch.HeteroEmbedding", false]], "heterognnexplainer (class in dgl.nn.pytorch.explain)": [[368, "dgl.nn.pytorch.explain.HeteroGNNExplainer", false]], "heterograph() (in module dgl)": [[276, "dgl.heterograph", false]], "heterographconv (class in dgl.nn.mxnet)": [[300, "dgl.nn.mxnet.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.pytorch)": [[327, "dgl.nn.pytorch.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.tensorflow.glob)": [[416, "dgl.nn.tensorflow.glob.HeteroGraphConv", false]], "heterolinear (class in dgl.nn.pytorch)": [[328, "dgl.nn.pytorch.HeteroLinear", false]], "heterosubgraphx (class in dgl.nn.pytorch.explain)": [[369, "dgl.nn.pytorch.explain.HeteroSubgraphX", false]], "hgtconv (class in dgl.nn.pytorch.conv)": [[358, "dgl.nn.pytorch.conv.HGTConv", false]], "icews18dataset (class in dgl.data)": [[162, "dgl.data.ICEWS18Dataset", false]], "identity() (in module dgl.sparse)": [[560, "dgl.sparse.identity", false]], "idtype (dgl.dglgraph property)": [[58, "dgl.DGLGraph.idtype", false]], "idtype (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.idtype", false]], "in_degrees() (dgl.dglgraph method)": [[59, "dgl.DGLGraph.in_degrees", false]], "in_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.in_degrees", false]], "in_edges() (dgl.dglgraph method)": [[60, "dgl.DGLGraph.in_edges", false]], "in_subgraph() (in module dgl)": [[277, "dgl.in_subgraph", false]], "in_subgraph() (in module dgl.distributed)": [[223, "dgl.distributed.in_subgraph", false]], "inc() (dgl.dglgraph method)": [[61, "dgl.DGLGraph.inc", false]], "incidence_matrix() (dgl.dglgraph method)": [[62, "dgl.DGLGraph.incidence_matrix", false]], "indices() (dgl.sparse.sparsematrix method)": [[534, "dgl.sparse.SparseMatrix.indices", false]], "initialize() (in module dgl.distributed)": [[224, "dgl.distributed.initialize", false]], "int() (dgl.dglgraph method)": [[63, "dgl.DGLGraph.int", false]], "int() (dgl.sparse.sparsematrix method)": [[535, "dgl.sparse.SparseMatrix.int", false]], "is_homogeneous (dgl.dglgraph property)": [[64, "dgl.DGLGraph.is_homogeneous", false]], "is_libxsmm_enabled() (in module dgl)": [[278, "dgl.is_libxsmm_enabled", false]], "is_multigraph (dgl.dglgraph property)": [[65, "dgl.DGLGraph.is_multigraph", false]], "is_pinned() (dgl.dglgraph method)": [[66, "dgl.DGLGraph.is_pinned", false]], "is_temporal (dgl.data.bitcoinotcdataset attribute)": [[142, "dgl.data.BitcoinOTCDataset.is_temporal", false]], "is_temporal (dgl.data.gdeltdataset attribute)": [[160, "dgl.data.GDELTDataset.is_temporal", false]], "is_temporal (dgl.data.icews18dataset attribute)": [[162, "dgl.data.ICEWS18Dataset.is_temporal", false]], "is_unibipartite (dgl.dglgraph property)": [[67, "dgl.DGLGraph.is_unibipartite", false]], "jumpingknowledge (class in dgl.nn.pytorch.utils)": [[402, "dgl.nn.pytorch.utils.JumpingKnowledge", false]], "karateclubdataset (class in dgl.data)": [[163, "dgl.data.KarateClubDataset", false]], "khop_adj() (in module dgl)": [[279, "dgl.khop_adj", false]], "khop_graph() (in module dgl)": [[280, "dgl.khop_graph", false]], "khop_in_subgraph() (in module dgl)": [[281, "dgl.khop_in_subgraph", false]], "khop_out_subgraph() (in module dgl)": [[282, "dgl.khop_out_subgraph", false]], "khopgraph (class in dgl.transforms)": [[605, "dgl.transforms.KHopGraph", false]], "knn_graph() (in module dgl)": [[283, "dgl.knn_graph", false]], "knngraph (class in dgl.nn.pytorch.factory)": [[371, "dgl.nn.pytorch.factory.KNNGraph", false]], "labelpropagation (class in dgl.nn.pytorch.utils)": [[403, "dgl.nn.pytorch.utils.LabelPropagation", false]], "labels (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.labels", false]], "labels (dgl.data.ppidataset attribute)": [[168, "dgl.data.PPIDataset.labels", false]], "laborsampler (class in dgl.dataloading)": [[204, "dgl.dataloading.LaborSampler", false]], "lap_pe() (in module dgl)": [[284, "dgl.lap_pe", false]], "laplacian_lambda_max() (in module dgl)": [[285, "dgl.laplacian_lambda_max", false]], "lappe (class in dgl.transforms)": [[606, "dgl.transforms.LapPE", false]], "lapposencoder (class in dgl.nn.pytorch.gt)": [[394, "dgl.nn.pytorch.gt.LapPosEncoder", false]], "lazyfeature (class in dgl.dataloading.base)": [[211, "dgl.dataloading.base.LazyFeature", false]], "legacytudataset (class in dgl.data)": [[164, "dgl.data.LegacyTUDataset", false]], "lin (dgl.nn.pytorch.conv.tagconv attribute)": [[364, "dgl.nn.pytorch.conv.TAGConv.lin", false]], "line_graph() (dgl.dglgraph method)": [[68, "dgl.DGLGraph.line_graph", false]], "line_graph() (in module dgl)": [[286, "dgl.line_graph", false]], "linegraph (class in dgl.transforms)": [[607, "dgl.transforms.LineGraph", false]], "linkx_homophily() (in module dgl)": [[287, "dgl.linkx_homophily", false]], "load() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.load", false]], "load() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.load", false]], "load_graphs() (in module dgl)": [[288, "dgl.load_graphs", false]], "load_info (class in dgl.data.utils)": [[193, "dgl.data.utils.load_info", false]], "load_labels (class in dgl.data.utils)": [[194, "dgl.data.utils.load_labels", false]], "load_partition() (in module dgl.distributed)": [[225, "dgl.distributed.load_partition", false]], "load_partition_book() (in module dgl.distributed)": [[226, "dgl.distributed.load_partition_book", false]], "load_partition_feats() (in module dgl.distributed)": [[227, "dgl.distributed.load_partition_feats", false]], "local_partition (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.local_partition", false]], "local_scope() (dgl.dglgraph method)": [[69, "dgl.DGLGraph.local_scope", false]], "local_to_global_nid (dgl.nn.pytorch.metapath2vec attribute)": [[329, "dgl.nn.pytorch.MetaPath2Vec.local_to_global_nid", false]], "long() (dgl.dglgraph method)": [[70, "dgl.DGLGraph.long", false]], "long() (dgl.sparse.sparsematrix method)": [[536, "dgl.sparse.SparseMatrix.long", false]], "mailbox (dgl.udf.nodebatch property)": [[624, "dgl.udf.NodeBatch.mailbox", false]], "map_to_homo_eid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_eid", false]], "map_to_homo_nid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_nid", false]], "map_to_per_etype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_etype", false]], "map_to_per_ntype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_ntype", false]], "mask_nodes_by_property (class in dgl.data.utils)": [[195, "dgl.data.utils.mask_nodes_by_property", false]], "matmul() (in module dgl.sparse)": [[561, "dgl.sparse.matmul", false]], "max() (in module dgl.function)": [[251, "dgl.function.max", false]], "max_edges() (in module dgl)": [[289, "dgl.max_edges", false]], "max_nodes() (in module dgl)": [[290, "dgl.max_nodes", false]], "max_num_node (dgl.data.legacytudataset attribute)": [[164, "dgl.data.LegacyTUDataset.max_num_node", false]], "max_num_node (dgl.data.tudataset attribute)": [[177, "dgl.data.TUDataset.max_num_node", false]], "max_num_v (dgl.data.minigcdataset attribute)": [[166, "dgl.data.MiniGCDataset.max_num_v", false]], "maxpooling (class in dgl.nn.mxnet.glob)": [[320, "dgl.nn.mxnet.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.pytorch.glob)": [[376, "dgl.nn.pytorch.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.tensorflow.glob)": [[417, "dgl.nn.tensorflow.glob.MaxPooling", false]], "mean() (in module dgl.function)": [[252, "dgl.function.mean", false]], "mean_edges() (in module dgl)": [[291, "dgl.mean_edges", false]], "mean_nodes() (in module dgl)": [[292, "dgl.mean_nodes", false]], "merge() (in module dgl)": [[293, "dgl.merge", false]], "metadata() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.metadata", false]], "metagraph() (dgl.dglgraph method)": [[71, "dgl.DGLGraph.metagraph", false]], "metapath2vec (class in dgl.nn.pytorch)": [[329, "dgl.nn.pytorch.MetaPath2Vec", false]], "metapath_reachable_graph() (in module dgl)": [[294, "dgl.metapath_reachable_graph", false]], "metis_partition() (in module dgl)": [[295, "dgl.metis_partition", false]], "metis_partition_assignment() (in module dgl)": [[296, "dgl.metis_partition_assignment", false]], "min() (in module dgl.function)": [[253, "dgl.function.min", false]], "min_num_v (dgl.data.minigcdataset attribute)": [[166, "dgl.data.MiniGCDataset.min_num_v", false]], "minigcdataset (class in dgl.data)": [[166, "dgl.data.MiniGCDataset", false]], "mods (dgl.nn.pytorch.heterographconv attribute)": [[327, "dgl.nn.pytorch.HeteroGraphConv.mods", false]], "module": [[0, "module-dgl", false], [2, "module-dgl.data", false], [6, "module-dgl.geometry", false], [9, "module-dgl.optim", false], [10, "module-dgl.sampling", false], [17, "module-dgl.nn.functional", false], [18, "module-dgl.transforms", false]], "mul() (in module dgl.sparse)": [[562, "dgl.sparse.mul", false]], "multi_update_all() (dgl.dglgraph method)": [[72, "dgl.DGLGraph.multi_update_all", false]], "multilayerfullneighborsampler (class in dgl.dataloading)": [[205, "dgl.dataloading.MultiLayerFullNeighborSampler", false]], "mutagdataset (class in dgl.data)": [[165, "dgl.data.MUTAGDataset", false]], "name (dgl.data.dgldataset attribute)": [[152, "dgl.data.DGLDataset.name", false]], "name (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.name", false]], "name (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.name", false]], "ndata (dgl.dglgraph property)": [[73, "dgl.DGLGraph.ndata", false]], "ndata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ndata", false]], "neg() (dgl.sparse.sparsematrix method)": [[537, "dgl.sparse.SparseMatrix.neg", false]], "neighbor_matching (class in dgl.geometry)": [[6, "dgl.geometry.neighbor_matching", false]], "neighborsampler (class in dgl.dataloading)": [[206, "dgl.dataloading.NeighborSampler", false]], "nid2localnid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2localnid", false]], "nid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2partid", false]], "nnconv (class in dgl.nn.mxnet.conv)": [[313, "dgl.nn.mxnet.conv.NNConv", false]], "nnconv (class in dgl.nn.pytorch.conv)": [[359, "dgl.nn.pytorch.conv.NNConv", false]], "nnz (dgl.sparse.sparsematrix property)": [[538, "dgl.sparse.SparseMatrix.nnz", false]], "node2vec_random_walk() (in module dgl.sampling)": [[505, "dgl.sampling.node2vec_random_walk", false]], "node_attr_schemes() (dgl.dglgraph method)": [[74, "dgl.DGLGraph.node_attr_schemes", false]], "node_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.node_attr_schemes", false]], "node_embed (dgl.nn.pytorch.deepwalk attribute)": [[325, "dgl.nn.pytorch.DeepWalk.node_embed", false]], "node_embed (dgl.nn.pytorch.metapath2vec attribute)": [[329, "dgl.nn.pytorch.MetaPath2Vec.node_embed", false]], "node_feat_size (dgl.data.asgraphpreddataset attribute)": [[135, "dgl.data.AsGraphPredDataset.node_feat_size", false]], "node_homophily() (in module dgl)": [[420, "dgl.node_homophily", false]], "node_split() (in module dgl.distributed)": [[228, "dgl.distributed.node_split", false]], "node_subgraph() (in module dgl)": [[421, "dgl.node_subgraph", false]], "node_type_subgraph() (dgl.dglgraph method)": [[75, "dgl.DGLGraph.node_type_subgraph", false]], "node_type_subgraph() (in module dgl)": [[422, "dgl.node_type_subgraph", false]], "nodeembedding (class in dgl.nn.pytorch.sparse_emb)": [[401, "dgl.nn.pytorch.sparse_emb.NodeEmbedding", false]], "nodes (dgl.dglgraph property)": [[76, "dgl.DGLGraph.nodes", false]], "nodes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.nodes", false]], "nodes() (dgl.udf.nodebatch method)": [[625, "dgl.udf.NodeBatch.nodes", false]], "nodeshuffle (class in dgl.transforms)": [[608, "dgl.transforms.NodeShuffle", false]], "norm_by_dst() (in module dgl)": [[423, "dgl.norm_by_dst", false]], "ntypes (dgl.dglgraph property)": [[77, "dgl.DGLGraph.ntypes", false]], "ntypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ntypes", false]], "num_atom_types (dgl.data.zincdataset attribute)": [[185, "dgl.data.ZINCDataset.num_atom_types", false]], "num_bond_types (dgl.data.zincdataset attribute)": [[185, "dgl.data.ZINCDataset.num_bond_types", false]], "num_classes (dgl.data.actordataset attribute)": [[132, "dgl.data.ActorDataset.num_classes", false]], "num_classes (dgl.data.aifbdataset attribute)": [[130, "dgl.data.AIFBDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuycomputerdataset attribute)": [[133, "dgl.data.AmazonCoBuyComputerDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuyphotodataset attribute)": [[134, "dgl.data.AmazonCoBuyPhotoDataset.num_classes", false]], "num_classes (dgl.data.amdataset attribute)": [[131, "dgl.data.AMDataset.num_classes", false]], "num_classes (dgl.data.asgraphpreddataset attribute)": [[135, "dgl.data.AsGraphPredDataset.num_classes", false]], "num_classes (dgl.data.asnodepreddataset attribute)": [[137, "dgl.data.AsNodePredDataset.num_classes", false]], "num_classes (dgl.data.ba2motifdataset attribute)": [[138, "dgl.data.BA2MotifDataset.num_classes", false]], "num_classes (dgl.data.bacommunitydataset attribute)": [[139, "dgl.data.BACommunityDataset.num_classes", false]], "num_classes (dgl.data.bashapedataset attribute)": [[140, "dgl.data.BAShapeDataset.num_classes", false]], "num_classes (dgl.data.bgsdataset attribute)": [[141, "dgl.data.BGSDataset.num_classes", false]], "num_classes (dgl.data.chameleondataset attribute)": [[145, "dgl.data.ChameleonDataset.num_classes", false]], "num_classes (dgl.data.citeseergraphdataset attribute)": [[146, "dgl.data.CiteseerGraphDataset.num_classes", false]], "num_classes (dgl.data.clusterdataset attribute)": [[143, "dgl.data.CLUSTERDataset.num_classes", false]], "num_classes (dgl.data.coauthorcsdataset attribute)": [[147, "dgl.data.CoauthorCSDataset.num_classes", false]], "num_classes (dgl.data.coauthorphysicsdataset attribute)": [[148, "dgl.data.CoauthorPhysicsDataset.num_classes", false]], "num_classes (dgl.data.corafulldataset attribute)": [[149, "dgl.data.CoraFullDataset.num_classes", false]], "num_classes (dgl.data.coragraphdataset attribute)": [[150, "dgl.data.CoraGraphDataset.num_classes", false]], "num_classes (dgl.data.cornelldataset attribute)": [[151, "dgl.data.CornellDataset.num_classes", false]], "num_classes (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.num_classes", false]], "num_classes (dgl.data.flickrdataset attribute)": [[156, "dgl.data.FlickrDataset.num_classes", false]], "num_classes (dgl.data.frauddataset attribute)": [[158, "dgl.data.FraudDataset.num_classes", false]], "num_classes (dgl.data.gindataset attribute)": [[161, "dgl.data.GINDataset.num_classes", false]], "num_classes (dgl.data.karateclubdataset attribute)": [[163, "dgl.data.KarateClubDataset.num_classes", false]], "num_classes (dgl.data.legacytudataset attribute)": [[164, "dgl.data.LegacyTUDataset.num_classes", false]], "num_classes (dgl.data.minigcdataset attribute)": [[166, "dgl.data.MiniGCDataset.num_classes", false]], "num_classes (dgl.data.mutagdataset attribute)": [[165, "dgl.data.MUTAGDataset.num_classes", false]], "num_classes (dgl.data.patterndataset attribute)": [[167, "dgl.data.PATTERNDataset.num_classes", false]], "num_classes (dgl.data.pubmedgraphdataset attribute)": [[169, "dgl.data.PubmedGraphDataset.num_classes", false]], "num_classes (dgl.data.redditdataset attribute)": [[173, "dgl.data.RedditDataset.num_classes", false]], "num_classes (dgl.data.squirreldataset attribute)": [[176, "dgl.data.SquirrelDataset.num_classes", false]], "num_classes (dgl.data.sstdataset attribute)": [[175, "dgl.data.SSTDataset.num_classes", false]], "num_classes (dgl.data.texasdataset attribute)": [[178, "dgl.data.TexasDataset.num_classes", false]], "num_classes (dgl.data.treecycledataset attribute)": [[179, "dgl.data.TreeCycleDataset.num_classes", false]], "num_classes (dgl.data.treegriddataset attribute)": [[180, "dgl.data.TreeGridDataset.num_classes", false]], "num_classes (dgl.data.tudataset attribute)": [[177, "dgl.data.TUDataset.num_classes", false]], "num_classes (dgl.data.wikicsdataset attribute)": [[182, "dgl.data.WikiCSDataset.num_classes", false]], "num_classes (dgl.data.wisconsindataset attribute)": [[183, "dgl.data.WisconsinDataset.num_classes", false]], "num_classes (dgl.data.yelpdataset attribute)": [[184, "dgl.data.YelpDataset.num_classes", false]], "num_dst_nodes() (dgl.dglgraph method)": [[78, "dgl.DGLGraph.num_dst_nodes", false]], "num_edges() (dgl.dglgraph method)": [[79, "dgl.DGLGraph.num_edges", false]], "num_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_edges", false]], "num_graphs (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.num_graphs", false]], "num_graphs (dgl.data.minigcdataset attribute)": [[166, "dgl.data.MiniGCDataset.num_graphs", false]], "num_labels (dgl.data.legacytudataset attribute)": [[164, "dgl.data.LegacyTUDataset.num_labels", false]], "num_labels (dgl.data.ppidataset attribute)": [[168, "dgl.data.PPIDataset.num_labels", false]], "num_labels (dgl.data.qm7bdataset attribute)": [[170, "dgl.data.QM7bDataset.num_labels", false]], "num_labels (dgl.data.qm9dataset attribute)": [[171, "dgl.data.QM9Dataset.num_labels", false]], "num_labels (dgl.data.qm9edgedataset attribute)": [[172, "dgl.data.QM9EdgeDataset.num_labels", false]], "num_labels (dgl.data.tudataset attribute)": [[177, "dgl.data.TUDataset.num_labels", false]], "num_nodes (dgl.data.fb15k237dataset attribute)": [[153, "dgl.data.FB15k237Dataset.num_nodes", false]], "num_nodes (dgl.data.fb15kdataset attribute)": [[154, "dgl.data.FB15kDataset.num_nodes", false]], "num_nodes (dgl.data.wn18dataset attribute)": [[181, "dgl.data.WN18Dataset.num_nodes", false]], "num_nodes() (dgl.dglgraph method)": [[80, "dgl.DGLGraph.num_nodes", false]], "num_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_nodes", false]], "num_partitions() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.num_partitions", false]], "num_rels (dgl.data.fb15k237dataset attribute)": [[153, "dgl.data.FB15k237Dataset.num_rels", false]], "num_rels (dgl.data.fb15kdataset attribute)": [[154, "dgl.data.FB15kDataset.num_rels", false]], "num_rels (dgl.data.wn18dataset attribute)": [[181, "dgl.data.WN18Dataset.num_rels", false]], "num_src_nodes() (dgl.dglgraph method)": [[81, "dgl.DGLGraph.num_src_nodes", false]], "num_tasks (dgl.data.asgraphpreddataset attribute)": [[135, "dgl.data.AsGraphPredDataset.num_tasks", false]], "num_tasks (dgl.data.qm7bdataset attribute)": [[170, "dgl.data.QM7bDataset.num_tasks", false]], "num_tasks (dgl.data.qm9dataset attribute)": [[171, "dgl.data.QM9Dataset.num_tasks", false]], "num_tasks (dgl.data.qm9edgedataset attribute)": [[172, "dgl.data.QM9EdgeDataset.num_tasks", false]], "number_of_dst_nodes() (dgl.dglgraph method)": [[82, "dgl.DGLGraph.number_of_dst_nodes", false]], "number_of_edges() (dgl.dglgraph method)": [[83, "dgl.DGLGraph.number_of_edges", false]], "number_of_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_edges", false]], "number_of_nodes() (dgl.dglgraph method)": [[84, "dgl.DGLGraph.number_of_nodes", false]], "number_of_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_nodes", false]], "number_of_src_nodes() (dgl.dglgraph method)": [[85, "dgl.DGLGraph.number_of_src_nodes", false]], "out_degrees() (dgl.dglgraph method)": [[86, "dgl.DGLGraph.out_degrees", false]], "out_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.out_degrees", false]], "out_edges() (dgl.dglgraph method)": [[87, "dgl.DGLGraph.out_edges", false]], "out_subgraph() (in module dgl)": [[485, "dgl.out_subgraph", false]], "pack_traces() (in module dgl.sampling)": [[506, "dgl.sampling.pack_traces", false]], "part_id (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.part_id", false]], "part_policy (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.part_policy", false]], "partid (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.partid", false]], "partid2eids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2eids", false]], "partid2nids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2nids", false]], "partition_book (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.partition_book", false]], "partition_graph() (in module dgl.distributed)": [[229, "dgl.distributed.partition_graph", false]], "partition_graph_with_halo() (in module dgl)": [[486, "dgl.partition_graph_with_halo", false]], "partitionpolicy (class in dgl.distributed)": [[4, "dgl.distributed.PartitionPolicy", false]], "pathencoder (class in dgl.nn.pytorch.graph_transformer)": [[387, "dgl.nn.pytorch.graph_transformer.PathEncoder", false]], "pathencoder (class in dgl.nn.pytorch.gt)": [[395, "dgl.nn.pytorch.gt.PathEncoder", false]], "patterndataset (class in dgl.data)": [[167, "dgl.data.PATTERNDataset", false]], "persourceuniform (class in dgl.dataloading.negative_sampler)": [[217, "dgl.dataloading.negative_sampler.PerSourceUniform", false]], "pin_memory_() (dgl.dglgraph method)": [[88, "dgl.DGLGraph.pin_memory_", false]], "pinsagesampler (class in dgl.sampling)": [[503, "dgl.sampling.PinSAGESampler", false]], "pnaconv (class in dgl.nn.pytorch.conv)": [[360, "dgl.nn.pytorch.conv.PNAConv", false]], "policy_str (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.policy_str", false]], "power() (in module dgl.sparse)": [[563, "dgl.sparse.power", false]], "ppidataset (class in dgl.data)": [[168, "dgl.data.PPIDataset", false]], "ppr (class in dgl.transforms)": [[609, "dgl.transforms.PPR", false]], "predecessors() (dgl.dglgraph method)": [[89, "dgl.DGLGraph.predecessors", false]], "predict_category (dgl.data.aifbdataset attribute)": [[130, "dgl.data.AIFBDataset.predict_category", false]], "predict_category (dgl.data.amdataset attribute)": [[131, "dgl.data.AMDataset.predict_category", false]], "predict_category (dgl.data.bgsdataset attribute)": [[141, "dgl.data.BGSDataset.predict_category", false]], "predict_category (dgl.data.mutagdataset attribute)": [[165, "dgl.data.MUTAGDataset.predict_category", false]], "pretrained_emb (dgl.data.sstdataset attribute)": [[175, "dgl.data.SSTDataset.pretrained_emb", false]], "prop_edges() (dgl.dglgraph method)": [[90, "dgl.DGLGraph.prop_edges", false]], "prop_edges() (in module dgl)": [[487, "dgl.prop_edges", false]], "prop_edges_dfs() (in module dgl)": [[488, "dgl.prop_edges_dfs", false]], "prop_nodes() (dgl.dglgraph method)": [[91, "dgl.DGLGraph.prop_nodes", false]], "prop_nodes() (in module dgl)": [[489, "dgl.prop_nodes", false]], "prop_nodes_bfs() (in module dgl)": [[490, "dgl.prop_nodes_bfs", false]], "prop_nodes_topo() (in module dgl)": [[491, "dgl.prop_nodes_topo", false]], "pubmedgraphdataset (class in dgl.data)": [[169, "dgl.data.PubmedGraphDataset", false]], "pull() (dgl.dglgraph method)": [[92, "dgl.DGLGraph.pull", false]], "push() (dgl.dglgraph method)": [[93, "dgl.DGLGraph.push", false]], "qm7bdataset (class in dgl.data)": [[170, "dgl.data.QM7bDataset", false]], "qm9dataset (class in dgl.data)": [[171, "dgl.data.QM9Dataset", false]], "qm9edgedataset (class in dgl.data)": [[172, "dgl.data.QM9EdgeDataset", false]], "radius_graph() (in module dgl)": [[492, "dgl.radius_graph", false]], "radiusgraph (class in dgl.nn.pytorch.factory)": [[372, "dgl.nn.pytorch.factory.RadiusGraph", false]], "rand_bipartite() (in module dgl)": [[493, "dgl.rand_bipartite", false]], "rand_graph() (in module dgl)": [[494, "dgl.rand_graph", false]], "random_walk() (in module dgl.sampling)": [[507, "dgl.sampling.random_walk", false]], "random_walk_pe() (in module dgl)": [[495, "dgl.random_walk_pe", false]], "randomwalkpe (class in dgl.transforms)": [[610, "dgl.transforms.RandomWalkPE", false]], "rank() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.rank", false]], "raw_dir (dgl.data.dgldataset attribute)": [[152, "dgl.data.DGLDataset.raw_dir", false]], "raw_path (dgl.data.dgldataset attribute)": [[152, "dgl.data.DGLDataset.raw_path", false]], "readout_edges() (in module dgl)": [[496, "dgl.readout_edges", false]], "readout_nodes() (in module dgl)": [[497, "dgl.readout_nodes", false]], "redditdataset (class in dgl.data)": [[173, "dgl.data.RedditDataset", false]], "reduce() (dgl.sparse.sparsematrix method)": [[539, "dgl.sparse.SparseMatrix.reduce", false]], "rel_emb (dgl.nn.pytorch.link.transe attribute)": [[399, "dgl.nn.pytorch.link.TransE.rel_emb", false]], "rel_emb (dgl.nn.pytorch.link.transr attribute)": [[400, "dgl.nn.pytorch.link.TransR.rel_emb", false]], "rel_project (dgl.nn.pytorch.link.transr attribute)": [[400, "dgl.nn.pytorch.link.TransR.rel_project", false]], "relgraphconv (class in dgl.nn.mxnet.conv)": [[314, "dgl.nn.mxnet.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.pytorch.conv)": [[361, "dgl.nn.pytorch.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.tensorflow.conv)": [[411, "dgl.nn.tensorflow.conv.RelGraphConv", false]], "remove_edges() (dgl.dglgraph method)": [[94, "dgl.DGLGraph.remove_edges", false]], "remove_edges() (in module dgl)": [[498, "dgl.remove_edges", false]], "remove_nodes() (dgl.dglgraph method)": [[95, "dgl.DGLGraph.remove_nodes", false]], "remove_nodes() (in module dgl)": [[499, "dgl.remove_nodes", false]], "remove_self_loop() (dgl.dglgraph method)": [[96, "dgl.DGLGraph.remove_self_loop", false]], "remove_self_loop() (in module dgl)": [[500, "dgl.remove_self_loop", false]], "removeselfloop (class in dgl.transforms)": [[611, "dgl.transforms.RemoveSelfLoop", false]], "reorder_graph() (dgl.dglgraph method)": [[97, "dgl.DGLGraph.reorder_graph", false]], "reorder_graph() (in module dgl)": [[501, "dgl.reorder_graph", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[336, "dgl.nn.pytorch.conv.CuGraphGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[337, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[338, "dgl.nn.pytorch.conv.CuGraphSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densechebconv method)": [[340, "dgl.nn.pytorch.conv.DenseChebConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densegraphconv method)": [[341, "dgl.nn.pytorch.conv.DenseGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densesageconv method)": [[342, "dgl.nn.pytorch.conv.DenseSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.edgegatconv method)": [[347, "dgl.nn.pytorch.conv.EdgeGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.egatconv method)": [[344, "dgl.nn.pytorch.conv.EGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatconv method)": [[349, "dgl.nn.pytorch.conv.GATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[355, "dgl.nn.pytorch.conv.GatedGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatv2conv method)": [[350, "dgl.nn.pytorch.conv.GATv2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gcn2conv method)": [[351, "dgl.nn.pytorch.conv.GCN2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gmmconv method)": [[354, "dgl.nn.pytorch.conv.GMMConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.graphconv method)": [[356, "dgl.nn.pytorch.conv.GraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.nnconv method)": [[359, "dgl.nn.pytorch.conv.NNConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sageconv method)": [[362, "dgl.nn.pytorch.conv.SAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sgconv method)": [[363, "dgl.nn.pytorch.conv.SGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.tagconv method)": [[364, "dgl.nn.pytorch.conv.TAGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.deepwalk method)": [[325, "dgl.nn.pytorch.DeepWalk.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.glob.set2set method)": [[377, "dgl.nn.pytorch.glob.Set2Set.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.gt.biasedmha method)": [[390, "dgl.nn.pytorch.gt.BiasedMHA.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.heteroembedding method)": [[326, "dgl.nn.pytorch.HeteroEmbedding.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.edgepredictor method)": [[398, "dgl.nn.pytorch.link.EdgePredictor.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transe method)": [[399, "dgl.nn.pytorch.link.TransE.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transr method)": [[400, "dgl.nn.pytorch.link.TransR.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.metapath2vec method)": [[329, "dgl.nn.pytorch.MetaPath2Vec.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.typedlinear method)": [[330, "dgl.nn.pytorch.TypedLinear.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[402, "dgl.nn.pytorch.utils.JumpingKnowledge.reset_parameters", false]], "reverse() (dgl.dglgraph method)": [[98, "dgl.DGLGraph.reverse", false]], "reverse() (in module dgl)": [[502, "dgl.reverse", false]], "row (dgl.sparse.sparsematrix property)": [[540, "dgl.sparse.SparseMatrix.row", false]], "rowfeatnormalizer (class in dgl.transforms)": [[612, "dgl.transforms.RowFeatNormalizer", false]], "sageconv (class in dgl.nn.mxnet.conv)": [[315, "dgl.nn.mxnet.conv.SAGEConv", false]], "sageconv (class in dgl.nn.pytorch.conv)": [[362, "dgl.nn.pytorch.conv.SAGEConv", false]], "sageconv (class in dgl.nn.tensorflow.conv)": [[412, "dgl.nn.tensorflow.conv.SAGEConv", false]], "saintsampler (class in dgl.dataloading)": [[207, "dgl.dataloading.SAINTSampler", false]], "sample_etype_neighbors() (in module dgl.distributed)": [[230, "dgl.distributed.sample_etype_neighbors", false]], "sample_labors() (in module dgl.sampling)": [[508, "dgl.sampling.sample_labors", false]], "sample_neighbors() (in module dgl.distributed)": [[231, "dgl.distributed.sample_neighbors", false]], "sample_neighbors() (in module dgl.sampling)": [[509, "dgl.sampling.sample_neighbors", false]], "sample_neighbors_biased() (in module dgl.sampling)": [[510, "dgl.sampling.sample_neighbors_biased", false]], "sampler (class in dgl.dataloading)": [[208, "dgl.dataloading.Sampler", false]], "save() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.save", false]], "save() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.save", false]], "save_dir (dgl.data.dgldataset attribute)": [[152, "dgl.data.DGLDataset.save_dir", false]], "save_graphs() (in module dgl)": [[512, "dgl.save_graphs", false]], "save_info (class in dgl.data.utils)": [[196, "dgl.data.utils.save_info", false]], "save_path (dgl.data.dgldataset attribute)": [[152, "dgl.data.DGLDataset.save_path", false]], "sbmmixturedataset (class in dgl.data)": [[174, "dgl.data.SBMMixtureDataset", false]], "sddmm() (in module dgl.sparse)": [[564, "dgl.sparse.sddmm", false]], "seed (dgl.data.frauddataset attribute)": [[158, "dgl.data.FraudDataset.seed", false]], "seed() (in module dgl)": [[513, "dgl.seed", false]], "segment_mm() (in module dgl.ops)": [[447, "dgl.ops.segment_mm", false]], "segment_reduce() (in module dgl.ops)": [[448, "dgl.ops.segment_reduce", false]], "segmented_knn_graph() (in module dgl)": [[514, "dgl.segmented_knn_graph", false]], "segmentedknngraph (class in dgl.nn.pytorch.factory)": [[373, "dgl.nn.pytorch.factory.SegmentedKNNGraph", false]], "select_topk() (in module dgl.sampling)": [[511, "dgl.sampling.select_topk", false]], "send_and_recv() (dgl.dglgraph method)": [[99, "dgl.DGLGraph.send_and_recv", false]], "sequential (class in dgl.nn.mxnet.utils)": [[324, "dgl.nn.mxnet.utils.Sequential", false]], "sequential (class in dgl.nn.pytorch.utils)": [[404, "dgl.nn.pytorch.utils.Sequential", false]], "set2set (class in dgl.nn.mxnet.glob)": [[321, "dgl.nn.mxnet.glob.Set2Set", false]], "set2set (class in dgl.nn.pytorch.glob)": [[377, "dgl.nn.pytorch.glob.Set2Set", false]], "set_batch_num_edges() (dgl.dglgraph method)": [[100, "dgl.DGLGraph.set_batch_num_edges", false]], "set_batch_num_nodes() (dgl.dglgraph method)": [[101, "dgl.DGLGraph.set_batch_num_nodes", false]], "set_dst_lazy_features (class in dgl.dataloading.base)": [[212, "dgl.dataloading.base.set_dst_lazy_features", false]], "set_edge_lazy_features (class in dgl.dataloading.base)": [[213, "dgl.dataloading.base.set_edge_lazy_features", false]], "set_node_lazy_features (class in dgl.dataloading.base)": [[214, "dgl.dataloading.base.set_node_lazy_features", false]], "set_src_lazy_features (class in dgl.dataloading.base)": [[215, "dgl.dataloading.base.set_src_lazy_features", false]], "settransformerdecoder (class in dgl.nn.pytorch.glob)": [[378, "dgl.nn.pytorch.glob.SetTransformerDecoder", false]], "settransformerencoder (class in dgl.nn.pytorch.glob)": [[379, "dgl.nn.pytorch.glob.SetTransformerEncoder", false]], "sgconv (class in dgl.nn.mxnet.conv)": [[316, "dgl.nn.mxnet.conv.SGConv", false]], "sgconv (class in dgl.nn.pytorch.conv)": [[363, "dgl.nn.pytorch.conv.SGConv", false]], "sgconv (class in dgl.nn.tensorflow.conv)": [[413, "dgl.nn.tensorflow.conv.SGConv", false]], "shadowkhopsampler (class in dgl.dataloading)": [[209, "dgl.dataloading.ShaDowKHopSampler", false]], "shape (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.shape", false]], "shape (dgl.sparse.sparsematrix property)": [[541, "dgl.sparse.SparseMatrix.shape", false]], "shared_memory() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.shared_memory", false]], "shared_tensor() (in module dgl.multiprocessing.pytorch)": [[298, "dgl.multiprocessing.pytorch.shared_tensor", false]], "shortest_dist() (in module dgl)": [[515, "dgl.shortest_dist", false]], "signdiffusion (class in dgl.transforms)": [[613, "dgl.transforms.SIGNDiffusion", false]], "slice_batch() (in module dgl)": [[516, "dgl.slice_batch", false]], "smax() (dgl.sparse.sparsematrix method)": [[542, "dgl.sparse.SparseMatrix.smax", false]], "smean() (dgl.sparse.sparsematrix method)": [[543, "dgl.sparse.SparseMatrix.smean", false]], "smin() (dgl.sparse.sparsematrix method)": [[544, "dgl.sparse.SparseMatrix.smin", false]], "softmax() (dgl.sparse.sparsematrix method)": [[545, "dgl.sparse.SparseMatrix.softmax", false]], "softmax() (in module dgl.sparse)": [[565, "dgl.sparse.softmax", false]], "softmax_edges() (in module dgl)": [[517, "dgl.softmax_edges", false]], "softmax_nodes() (in module dgl)": [[518, "dgl.softmax_nodes", false]], "sort_csc_by_tag() (in module dgl)": [[519, "dgl.sort_csc_by_tag", false]], "sort_csr_by_tag() (in module dgl)": [[520, "dgl.sort_csr_by_tag", false]], "sortpooling (class in dgl.nn.mxnet.glob)": [[322, "dgl.nn.mxnet.glob.SortPooling", false]], "sortpooling (class in dgl.nn.pytorch.glob)": [[380, "dgl.nn.pytorch.glob.SortPooling", false]], "sortpooling (class in dgl.nn.tensorflow.glob)": [[418, "dgl.nn.tensorflow.glob.SortPooling", false]], "sp_add_v() (in module dgl.sparse)": [[566, "dgl.sparse.sp_add_v", false]], "sp_broadcast_v() (in module dgl.sparse)": [[567, "dgl.sparse.sp_broadcast_v", false]], "sp_div_v() (in module dgl.sparse)": [[568, "dgl.sparse.sp_div_v", false]], "sp_mul_v() (in module dgl.sparse)": [[569, "dgl.sparse.sp_mul_v", false]], "sp_sub_v() (in module dgl.sparse)": [[570, "dgl.sparse.sp_sub_v", false]], "sparseadagrad (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdagrad", false]], "sparseadagrad (class in dgl.optim.pytorch)": [[9, "dgl.optim.pytorch.SparseAdagrad", false]], "sparseadam (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdam", false]], "sparseadam (class in dgl.optim.pytorch)": [[9, "dgl.optim.pytorch.SparseAdam", false]], "sparsematrix (class in dgl.sparse)": [[11, "dgl.sparse.SparseMatrix", false]], "spatialencoder (class in dgl.nn.pytorch.graph_transformer)": [[388, "dgl.nn.pytorch.graph_transformer.SpatialEncoder", false]], "spatialencoder (class in dgl.nn.pytorch.gt)": [[396, "dgl.nn.pytorch.gt.SpatialEncoder", false]], "spatialencoder3d (class in dgl.nn.pytorch.graph_transformer)": [[389, "dgl.nn.pytorch.graph_transformer.SpatialEncoder3d", false]], "spatialencoder3d (class in dgl.nn.pytorch.gt)": [[397, "dgl.nn.pytorch.gt.SpatialEncoder3d", false]], "split_dataset (class in dgl.data.utils)": [[197, "dgl.data.utils.split_dataset", false]], "spmatrix() (in module dgl.sparse)": [[571, "dgl.sparse.spmatrix", false]], "spmm() (in module dgl.sparse)": [[572, "dgl.sparse.spmm", false]], "spspmm() (in module dgl.sparse)": [[573, "dgl.sparse.spspmm", false]], "squirreldataset (class in dgl.data)": [[176, "dgl.data.SquirrelDataset", false]], "src (dgl.udf.edgebatch property)": [[621, "dgl.udf.EdgeBatch.src", false]], "srcdata (dgl.dglgraph property)": [[102, "dgl.DGLGraph.srcdata", false]], "srcnodes (dgl.dglgraph property)": [[103, "dgl.DGLGraph.srcnodes", false]], "srctypes (dgl.dglgraph property)": [[104, "dgl.DGLGraph.srctypes", false]], "sstdataset (class in dgl.data)": [[175, "dgl.data.SSTDataset", false]], "start_time (dgl.data.gdeltdataset attribute)": [[160, "dgl.data.GDELTDataset.start_time", false]], "step() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.step", false]], "step() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.step", false]], "sub() (in module dgl.sparse)": [[574, "dgl.sparse.sub", false]], "subgraph() (dgl.dglgraph method)": [[105, "dgl.DGLGraph.subgraph", false]], "subgraphx (class in dgl.nn.pytorch.explain)": [[370, "dgl.nn.pytorch.explain.SubgraphX", false]], "subset (class in dgl.data.utils)": [[186, "dgl.data.utils.Subset", false]], "successors() (dgl.dglgraph method)": [[106, "dgl.DGLGraph.successors", false]], "sum() (dgl.sparse.sparsematrix method)": [[546, "dgl.sparse.SparseMatrix.sum", false]], "sum() (in module dgl.function)": [[254, "dgl.function.sum", false]], "sum_edges() (in module dgl)": [[576, "dgl.sum_edges", false]], "sum_nodes() (in module dgl)": [[577, "dgl.sum_nodes", false]], "sumpooling (class in dgl.nn.mxnet.glob)": [[323, "dgl.nn.mxnet.glob.SumPooling", false]], "sumpooling (class in dgl.nn.pytorch.glob)": [[381, "dgl.nn.pytorch.glob.SumPooling", false]], "sumpooling (class in dgl.nn.tensorflow.glob)": [[419, "dgl.nn.tensorflow.glob.SumPooling", false]], "svd_pe() (in module dgl)": [[578, "dgl.svd_pe", false]], "svdpe (class in dgl.transforms)": [[614, "dgl.transforms.SVDPE", false]], "t (dgl.sparse.sparsematrix property)": [[521, "dgl.sparse.SparseMatrix.T", false]], "t() (dgl.sparse.sparsematrix method)": [[547, "dgl.sparse.SparseMatrix.t", false]], "tagconv (class in dgl.nn.mxnet.conv)": [[317, "dgl.nn.mxnet.conv.TAGConv", false]], "tagconv (class in dgl.nn.pytorch.conv)": [[364, "dgl.nn.pytorch.conv.TAGConv", false]], "test_edges (dgl.data.aslinkpreddataset attribute)": [[136, "dgl.data.AsLinkPredDataset.test_edges", false]], "test_idx (dgl.data.asgraphpreddataset attribute)": [[135, "dgl.data.AsGraphPredDataset.test_idx", false]], "test_idx (dgl.data.asnodepreddataset attribute)": [[137, "dgl.data.AsNodePredDataset.test_idx", false]], "test_mask (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.test_mask", false]], "texasdataset (class in dgl.data)": [[178, "dgl.data.TexasDataset", false]], "to() (dgl.dglgraph method)": [[107, "dgl.DGLGraph.to", false]], "to() (dgl.sparse.sparsematrix method)": [[548, "dgl.sparse.SparseMatrix.to", false]], "to_bidirected() (in module dgl)": [[579, "dgl.to_bidirected", false]], "to_block() (in module dgl)": [[580, "dgl.to_block", false]], "to_canonical_etype() (dgl.dglgraph method)": [[108, "dgl.DGLGraph.to_canonical_etype", false]], "to_cugraph() (dgl.dglgraph method)": [[109, "dgl.DGLGraph.to_cugraph", false]], "to_cugraph() (in module dgl)": [[581, "dgl.to_cugraph", false]], "to_dense() (dgl.sparse.sparsematrix method)": [[549, "dgl.sparse.SparseMatrix.to_dense", false]], "to_double() (in module dgl)": [[582, "dgl.to_double", false]], "to_float() (in module dgl)": [[583, "dgl.to_float", false]], "to_half() (in module dgl)": [[584, "dgl.to_half", false]], "to_heterogeneous() (in module dgl)": [[585, "dgl.to_heterogeneous", false]], "to_homogeneous() (in module dgl)": [[586, "dgl.to_homogeneous", false]], "to_local() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_local", false]], "to_networkx() (in module dgl)": [[587, "dgl.to_networkx", false]], "to_partid() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_partid", false]], "to_simple() (dgl.dglgraph method)": [[110, "dgl.DGLGraph.to_simple", false]], "to_simple() (in module dgl)": [[588, "dgl.to_simple", false]], "to_simple_graph() (in module dgl)": [[589, "dgl.to_simple_graph", false]], "tolevi (class in dgl.transforms)": [[615, "dgl.transforms.ToLevi", false]], "topk_edges() (in module dgl)": [[590, "dgl.topk_edges", false]], "topk_nodes() (in module dgl)": [[591, "dgl.topk_nodes", false]], "topological_nodes_generator() (in module dgl)": [[592, "dgl.topological_nodes_generator", false]], "tosimple (class in dgl.transforms)": [[616, "dgl.transforms.ToSimple", false]], "train_graph (dgl.data.aslinkpreddataset attribute)": [[136, "dgl.data.AsLinkPredDataset.train_graph", false]], "train_idx (dgl.data.asgraphpreddataset attribute)": [[135, "dgl.data.AsGraphPredDataset.train_idx", false]], "train_idx (dgl.data.asnodepreddataset attribute)": [[137, "dgl.data.AsNodePredDataset.train_idx", false]], "train_mask (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.train_mask", false]], "train_size (dgl.data.frauddataset attribute)": [[158, "dgl.data.FraudDataset.train_size", false]], "transe (class in dgl.nn.pytorch.link)": [[399, "dgl.nn.pytorch.link.TransE", false]], "transpose() (dgl.sparse.sparsematrix method)": [[550, "dgl.sparse.SparseMatrix.transpose", false]], "transr (class in dgl.nn.pytorch.link)": [[400, "dgl.nn.pytorch.link.TransR", false]], "treecycledataset (class in dgl.data)": [[179, "dgl.data.TreeCycleDataset", false]], "treegriddataset (class in dgl.data)": [[180, "dgl.data.TreeGridDataset", false]], "tudataset (class in dgl.data)": [[177, "dgl.data.TUDataset", false]], "twirlsconv (class in dgl.nn.pytorch.conv)": [[365, "dgl.nn.pytorch.conv.TWIRLSConv", false]], "twirlsunfoldingandattention (class in dgl.nn.pytorch.conv)": [[366, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", false]], "typedlinear (class in dgl.nn.pytorch)": [[330, "dgl.nn.pytorch.TypedLinear", false]], "u_add_e() (in module dgl.function)": [[255, "dgl.function.u_add_e", false]], "u_add_e() (in module dgl.ops)": [[449, "dgl.ops.u_add_e", false]], "u_add_e_max() (in module dgl.ops)": [[450, "dgl.ops.u_add_e_max", false]], "u_add_e_mean() (in module dgl.ops)": [[451, "dgl.ops.u_add_e_mean", false]], "u_add_e_min() (in module dgl.ops)": [[452, "dgl.ops.u_add_e_min", false]], "u_add_e_sum() (in module dgl.ops)": [[453, "dgl.ops.u_add_e_sum", false]], "u_add_v() (in module dgl.function)": [[256, "dgl.function.u_add_v", false]], "u_add_v() (in module dgl.ops)": [[454, "dgl.ops.u_add_v", false]], "u_div_e() (in module dgl.function)": [[257, "dgl.function.u_div_e", false]], "u_div_e() (in module dgl.ops)": [[455, "dgl.ops.u_div_e", false]], "u_div_e_max() (in module dgl.ops)": [[456, "dgl.ops.u_div_e_max", false]], "u_div_e_mean() (in module dgl.ops)": [[457, "dgl.ops.u_div_e_mean", false]], "u_div_e_min() (in module dgl.ops)": [[458, "dgl.ops.u_div_e_min", false]], "u_div_e_sum() (in module dgl.ops)": [[459, "dgl.ops.u_div_e_sum", false]], "u_div_v() (in module dgl.function)": [[258, "dgl.function.u_div_v", false]], "u_div_v() (in module dgl.ops)": [[460, "dgl.ops.u_div_v", false]], "u_dot_e() (in module dgl.function)": [[259, "dgl.function.u_dot_e", false]], "u_dot_e() (in module dgl.ops)": [[461, "dgl.ops.u_dot_e", false]], "u_dot_v() (in module dgl.function)": [[260, "dgl.function.u_dot_v", false]], "u_dot_v() (in module dgl.ops)": [[462, "dgl.ops.u_dot_v", false]], "u_mul_e() (in module dgl.function)": [[261, "dgl.function.u_mul_e", false]], "u_mul_e() (in module dgl.ops)": [[463, "dgl.ops.u_mul_e", false]], "u_mul_e_max() (in module dgl.ops)": [[464, "dgl.ops.u_mul_e_max", false]], "u_mul_e_mean() (in module dgl.ops)": [[465, "dgl.ops.u_mul_e_mean", false]], "u_mul_e_min() (in module dgl.ops)": [[466, "dgl.ops.u_mul_e_min", false]], "u_mul_e_sum() (in module dgl.ops)": [[467, "dgl.ops.u_mul_e_sum", false]], "u_mul_v() (in module dgl.function)": [[262, "dgl.function.u_mul_v", false]], "u_mul_v() (in module dgl.ops)": [[468, "dgl.ops.u_mul_v", false]], "u_sub_e() (in module dgl.function)": [[263, "dgl.function.u_sub_e", false]], "u_sub_e() (in module dgl.ops)": [[469, "dgl.ops.u_sub_e", false]], "u_sub_e_max() (in module dgl.ops)": [[470, "dgl.ops.u_sub_e_max", false]], "u_sub_e_mean() (in module dgl.ops)": [[471, "dgl.ops.u_sub_e_mean", false]], "u_sub_e_min() (in module dgl.ops)": [[472, "dgl.ops.u_sub_e_min", false]], "u_sub_e_sum() (in module dgl.ops)": [[473, "dgl.ops.u_sub_e_sum", false]], "u_sub_v() (in module dgl.function)": [[264, "dgl.function.u_sub_v", false]], "u_sub_v() (in module dgl.ops)": [[474, "dgl.ops.u_sub_v", false]], "unbatch() (in module dgl)": [[626, "dgl.unbatch", false]], "uniform (in module dgl.dataloading.negative_sampler)": [[218, "dgl.dataloading.negative_sampler.Uniform", false]], "unpin_memory_() (dgl.dglgraph method)": [[111, "dgl.DGLGraph.unpin_memory_", false]], "update_all() (dgl.dglgraph method)": [[112, "dgl.DGLGraph.update_all", false]], "url (dgl.data.dgldataset attribute)": [[152, "dgl.data.DGLDataset.url", false]], "use_libxsmm() (in module dgl)": [[627, "dgl.use_libxsmm", false]], "v_add_e() (in module dgl.function)": [[265, "dgl.function.v_add_e", false]], "v_add_e() (in module dgl.ops)": [[475, "dgl.ops.v_add_e", false]], "v_add_u() (in module dgl.function)": [[266, "dgl.function.v_add_u", false]], "v_add_u() (in module dgl.ops)": [[476, "dgl.ops.v_add_u", false]], "v_div_e() (in module dgl.function)": [[267, "dgl.function.v_div_e", false]], "v_div_e() (in module dgl.ops)": [[477, "dgl.ops.v_div_e", false]], "v_div_u() (in module dgl.function)": [[268, "dgl.function.v_div_u", false]], "v_div_u() (in module dgl.ops)": [[478, "dgl.ops.v_div_u", false]], "v_dot_e() (in module dgl.function)": [[269, "dgl.function.v_dot_e", false]], "v_dot_e() (in module dgl.ops)": [[479, "dgl.ops.v_dot_e", false]], "v_dot_u() (in module dgl.function)": [[270, "dgl.function.v_dot_u", false]], "v_dot_u() (in module dgl.ops)": [[480, "dgl.ops.v_dot_u", false]], "v_mul_e() (in module dgl.function)": [[271, "dgl.function.v_mul_e", false]], "v_mul_e() (in module dgl.ops)": [[481, "dgl.ops.v_mul_e", false]], "v_mul_u() (in module dgl.function)": [[272, "dgl.function.v_mul_u", false]], "v_mul_u() (in module dgl.ops)": [[482, "dgl.ops.v_mul_u", false]], "v_sub_e() (in module dgl.function)": [[273, "dgl.function.v_sub_e", false]], "v_sub_e() (in module dgl.ops)": [[483, "dgl.ops.v_sub_e", false]], "v_sub_u() (in module dgl.function)": [[274, "dgl.function.v_sub_u", false]], "v_sub_u() (in module dgl.ops)": [[484, "dgl.ops.v_sub_u", false]], "val (dgl.sparse.sparsematrix property)": [[551, "dgl.sparse.SparseMatrix.val", false]], "val_edges (dgl.data.aslinkpreddataset attribute)": [[136, "dgl.data.AsLinkPredDataset.val_edges", false]], "val_idx (dgl.data.asgraphpreddataset attribute)": [[135, "dgl.data.AsGraphPredDataset.val_idx", false]], "val_idx (dgl.data.asnodepreddataset attribute)": [[137, "dgl.data.AsNodePredDataset.val_idx", false]], "val_like() (in module dgl.sparse)": [[575, "dgl.sparse.val_like", false]], "val_mask (dgl.data.fakenewsdataset attribute)": [[155, "dgl.data.FakeNewsDataset.val_mask", false]], "val_size (dgl.data.frauddataset attribute)": [[158, "dgl.data.FraudDataset.val_size", false]], "verbose (dgl.data.dgldataset attribute)": [[152, "dgl.data.DGLDataset.verbose", false]], "vocab (dgl.data.sstdataset attribute)": [[175, "dgl.data.SSTDataset.vocab", false]], "vocab_size (dgl.data.sstdataset attribute)": [[175, "dgl.data.SSTDataset.vocab_size", false]], "weight (dgl.nn.pytorch.conv.graphconv attribute)": [[356, "dgl.nn.pytorch.conv.GraphConv.weight", false]], "weightandsum (class in dgl.nn.pytorch.glob)": [[382, "dgl.nn.pytorch.glob.WeightAndSum", false]], "weightbasis (class in dgl.nn.pytorch.utils)": [[405, "dgl.nn.pytorch.utils.WeightBasis", false]], "wikicsdataset (class in dgl.data)": [[182, "dgl.data.WikiCSDataset", false]], "wisconsindataset (class in dgl.data)": [[183, "dgl.data.WisconsinDataset", false]], "wn18dataset (class in dgl.data)": [[181, "dgl.data.WN18Dataset", false]], "yelpdataset (class in dgl.data)": [[184, "dgl.data.YelpDataset", false]], "zincdataset (class in dgl.data)": [[185, "dgl.data.ZINCDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "dgl"]], "dgl": [[1, 1, 1, "", "DGLGraph"], [113, 4, 1, "", "add_edges"], [114, 4, 1, "", "add_nodes"], [115, 4, 1, "", "add_reverse_edges"], [116, 4, 1, "", "add_self_loop"], [117, 4, 1, "", "adj_product_graph"], [118, 4, 1, "", "adj_sum_graph"], [119, 4, 1, "", "apply_each"], [120, 4, 1, "", "batch"], [121, 4, 1, "", "bfs_edges_generator"], [122, 4, 1, "", "bfs_nodes_generator"], [123, 4, 1, "", "bipartite_from_networkx"], [124, 4, 1, "", "bipartite_from_scipy"], [125, 4, 1, "", "block_to_graph"], [126, 4, 1, "", "broadcast_edges"], [127, 4, 1, "", "broadcast_nodes"], [128, 4, 1, "", "compact_graphs"], [129, 4, 1, "", "create_block"], [2, 0, 0, "-", "data"], [219, 4, 1, "", "dfs_edges_generator"], [220, 4, 1, "", "dfs_labeled_edges_generator"], [232, 4, 1, "", "double_radius_node_labeling"], [233, 4, 1, "", "edge_homophily"], [234, 4, 1, "", "edge_subgraph"], [235, 4, 1, "", "edge_type_subgraph"], [236, 4, 1, "", "from_cugraph"], [237, 4, 1, "", "from_networkx"], [238, 4, 1, "", "from_scipy"], [6, 0, 0, "-", "geometry"], [275, 4, 1, "", "graph"], [276, 4, 1, "", "heterograph"], [277, 4, 1, "", "in_subgraph"], [278, 4, 1, "", "is_libxsmm_enabled"], [279, 4, 1, "", "khop_adj"], [280, 4, 1, "", "khop_graph"], [281, 4, 1, "", "khop_in_subgraph"], [282, 4, 1, "", "khop_out_subgraph"], [283, 4, 1, "", "knn_graph"], [284, 4, 1, "", "lap_pe"], [285, 4, 1, "", "laplacian_lambda_max"], [286, 4, 1, "", "line_graph"], [287, 4, 1, "", "linkx_homophily"], [288, 4, 1, "", "load_graphs"], [289, 4, 1, "", "max_edges"], [290, 4, 1, "", "max_nodes"], [291, 4, 1, "", "mean_edges"], [292, 4, 1, "", "mean_nodes"], [293, 4, 1, "", "merge"], [294, 4, 1, "", "metapath_reachable_graph"], [295, 4, 1, "", "metis_partition"], [296, 4, 1, "", "metis_partition_assignment"], [420, 4, 1, "", "node_homophily"], [421, 4, 1, "", "node_subgraph"], [422, 4, 1, "", "node_type_subgraph"], [423, 4, 1, "", "norm_by_dst"], [9, 0, 0, "-", "optim"], [485, 4, 1, "", "out_subgraph"], [486, 4, 1, "", "partition_graph_with_halo"], [487, 4, 1, "", "prop_edges"], [488, 4, 1, "", "prop_edges_dfs"], [489, 4, 1, "", "prop_nodes"], [490, 4, 1, "", "prop_nodes_bfs"], [491, 4, 1, "", "prop_nodes_topo"], [492, 4, 1, "", "radius_graph"], [493, 4, 1, "", "rand_bipartite"], [494, 4, 1, "", "rand_graph"], [495, 4, 1, "", "random_walk_pe"], [496, 4, 1, "", "readout_edges"], [497, 4, 1, "", "readout_nodes"], [498, 4, 1, "", "remove_edges"], [499, 4, 1, "", "remove_nodes"], [500, 4, 1, "", "remove_self_loop"], [501, 4, 1, "", "reorder_graph"], [502, 4, 1, "", "reverse"], [10, 0, 0, "-", "sampling"], [512, 4, 1, "", "save_graphs"], [513, 4, 1, "", "seed"], [514, 4, 1, "", "segmented_knn_graph"], [515, 4, 1, "", "shortest_dist"], [516, 4, 1, "", "slice_batch"], [517, 4, 1, "", "softmax_edges"], [518, 4, 1, "", "softmax_nodes"], [519, 4, 1, "", "sort_csc_by_tag"], [520, 4, 1, "", "sort_csr_by_tag"], [576, 4, 1, "", "sum_edges"], [577, 4, 1, "", "sum_nodes"], [578, 4, 1, "", "svd_pe"], [579, 4, 1, "", "to_bidirected"], [580, 4, 1, "", "to_block"], [581, 4, 1, "", "to_cugraph"], [582, 4, 1, "", "to_double"], [583, 4, 1, "", "to_float"], [584, 4, 1, "", "to_half"], [585, 4, 1, "", "to_heterogeneous"], [586, 4, 1, "", "to_homogeneous"], [587, 4, 1, "", "to_networkx"], [588, 4, 1, "", "to_simple"], [589, 4, 1, "", "to_simple_graph"], [590, 4, 1, "", "topk_edges"], [591, 4, 1, "", "topk_nodes"], [592, 4, 1, "", "topological_nodes_generator"], [18, 0, 0, "-", "transforms"], [626, 4, 1, "", "unbatch"], [627, 4, 1, "", "use_libxsmm"]], "dgl.DGLGraph": [[25, 2, 1, "", "__getitem__"], [26, 2, 1, "", "add_edges"], [27, 2, 1, "", "add_nodes"], [28, 2, 1, "", "add_self_loop"], [29, 2, 1, "", "adj"], [30, 2, 1, "", "adj_external"], [31, 2, 1, "", "adj_tensors"], [32, 2, 1, "", "adjacency_matrix"], [33, 2, 1, "", "apply_edges"], [34, 2, 1, "", "apply_nodes"], [35, 2, 1, "", "batch_num_edges"], [36, 2, 1, "", "batch_num_nodes"], [37, 3, 1, "", "batch_size"], [38, 3, 1, "", "canonical_etypes"], [39, 2, 1, "", "cpu"], [40, 2, 1, "", "create_formats_"], [41, 3, 1, "", "device"], [42, 3, 1, "", "dstdata"], [43, 3, 1, "", "dstnodes"], [44, 3, 1, "", "dsttypes"], [45, 3, 1, "", "edata"], [46, 2, 1, "", "edge_attr_schemes"], [47, 2, 1, "", "edge_ids"], [48, 2, 1, "", "edge_subgraph"], [49, 2, 1, "", "edge_type_subgraph"], [50, 3, 1, "", "edges"], [51, 3, 1, "", "etypes"], [52, 2, 1, "", "filter_edges"], [53, 2, 1, "", "filter_nodes"], [54, 2, 1, "", "find_edges"], [55, 2, 1, "", "formats"], [56, 2, 1, "", "has_edges_between"], [57, 2, 1, "", "has_nodes"], [58, 3, 1, "", "idtype"], [59, 2, 1, "", "in_degrees"], [60, 2, 1, "", "in_edges"], [61, 2, 1, "", "inc"], [62, 2, 1, "", "incidence_matrix"], [63, 2, 1, "", "int"], [64, 3, 1, "", "is_homogeneous"], [65, 3, 1, "", "is_multigraph"], [66, 2, 1, "", "is_pinned"], [67, 3, 1, "", "is_unibipartite"], [68, 2, 1, "", "line_graph"], [69, 2, 1, "", "local_scope"], [70, 2, 1, "", "long"], [71, 2, 1, "", "metagraph"], [72, 2, 1, "", "multi_update_all"], [73, 3, 1, "", "ndata"], [74, 2, 1, "", "node_attr_schemes"], [75, 2, 1, "", "node_type_subgraph"], [76, 3, 1, "", "nodes"], [77, 3, 1, "", "ntypes"], [78, 2, 1, "", "num_dst_nodes"], [79, 2, 1, "", "num_edges"], [80, 2, 1, "", "num_nodes"], [81, 2, 1, "", "num_src_nodes"], [82, 2, 1, "", "number_of_dst_nodes"], [83, 2, 1, "", "number_of_edges"], [84, 2, 1, "", "number_of_nodes"], [85, 2, 1, "", "number_of_src_nodes"], [86, 2, 1, "", "out_degrees"], [87, 2, 1, "", "out_edges"], [88, 2, 1, "", "pin_memory_"], [89, 2, 1, "", "predecessors"], [90, 2, 1, "", "prop_edges"], [91, 2, 1, "", "prop_nodes"], [92, 2, 1, "", "pull"], [93, 2, 1, "", "push"], [94, 2, 1, "", "remove_edges"], [95, 2, 1, "", "remove_nodes"], [96, 2, 1, "", "remove_self_loop"], [97, 2, 1, "", "reorder_graph"], [98, 2, 1, "", "reverse"], [99, 2, 1, "", "send_and_recv"], [100, 2, 1, "", "set_batch_num_edges"], [101, 2, 1, "", "set_batch_num_nodes"], [102, 3, 1, "", "srcdata"], [103, 3, 1, "", "srcnodes"], [104, 3, 1, "", "srctypes"], [105, 2, 1, "", "subgraph"], [106, 2, 1, "", "successors"], [107, 2, 1, "", "to"], [108, 2, 1, "", "to_canonical_etype"], [109, 2, 1, "", "to_cugraph"], [110, 2, 1, "", "to_simple"], [111, 2, 1, "", "unpin_memory_"], [112, 2, 1, "", "update_all"]], "dgl.data": [[130, 1, 1, "", "AIFBDataset"], [131, 1, 1, "", "AMDataset"], [132, 1, 1, "", "ActorDataset"], [133, 1, 1, "", "AmazonCoBuyComputerDataset"], [134, 1, 1, "", "AmazonCoBuyPhotoDataset"], [135, 1, 1, "", "AsGraphPredDataset"], [136, 1, 1, "", "AsLinkPredDataset"], [137, 1, 1, "", "AsNodePredDataset"], [138, 1, 1, "", "BA2MotifDataset"], [139, 1, 1, "", "BACommunityDataset"], [140, 1, 1, "", "BAShapeDataset"], [141, 1, 1, "", "BGSDataset"], [142, 1, 1, "", "BitcoinOTCDataset"], [143, 1, 1, "", "CLUSTERDataset"], [144, 1, 1, "", "CSVDataset"], [145, 1, 1, "", "ChameleonDataset"], [146, 1, 1, "", "CiteseerGraphDataset"], [147, 1, 1, "", "CoauthorCSDataset"], [148, 1, 1, "", "CoauthorPhysicsDataset"], [149, 1, 1, "", "CoraFullDataset"], [150, 1, 1, "", "CoraGraphDataset"], [151, 1, 1, "", "CornellDataset"], [152, 1, 1, "", "DGLDataset"], [153, 1, 1, "", "FB15k237Dataset"], [154, 1, 1, "", "FB15kDataset"], [155, 1, 1, "", "FakeNewsDataset"], [156, 1, 1, "", "FlickrDataset"], [157, 1, 1, "", "FraudAmazonDataset"], [158, 1, 1, "", "FraudDataset"], [159, 1, 1, "", "FraudYelpDataset"], [160, 1, 1, "", "GDELTDataset"], [161, 1, 1, "", "GINDataset"], [162, 1, 1, "", "ICEWS18Dataset"], [163, 1, 1, "", "KarateClubDataset"], [164, 1, 1, "", "LegacyTUDataset"], [165, 1, 1, "", "MUTAGDataset"], [166, 1, 1, "", "MiniGCDataset"], [167, 1, 1, "", "PATTERNDataset"], [168, 1, 1, "", "PPIDataset"], [169, 1, 1, "", "PubmedGraphDataset"], [170, 1, 1, "", "QM7bDataset"], [171, 1, 1, "", "QM9Dataset"], [172, 1, 1, "", "QM9EdgeDataset"], [173, 1, 1, "", "RedditDataset"], [174, 1, 1, "", "SBMMixtureDataset"], [175, 1, 1, "", "SSTDataset"], [176, 1, 1, "", "SquirrelDataset"], [177, 1, 1, "", "TUDataset"], [178, 1, 1, "", "TexasDataset"], [179, 1, 1, "", "TreeCycleDataset"], [180, 1, 1, "", "TreeGridDataset"], [181, 1, 1, "", "WN18Dataset"], [182, 1, 1, "", "WikiCSDataset"], [183, 1, 1, "", "WisconsinDataset"], [184, 1, 1, "", "YelpDataset"], [185, 1, 1, "", "ZINCDataset"]], "dgl.data.AIFBDataset": [[130, 2, 1, "", "__getitem__"], [130, 2, 1, "", "__len__"], [130, 5, 1, "", "num_classes"], [130, 5, 1, "", "predict_category"]], "dgl.data.AMDataset": [[131, 2, 1, "", "__getitem__"], [131, 2, 1, "", "__len__"], [131, 5, 1, "", "num_classes"], [131, 5, 1, "", "predict_category"]], "dgl.data.ActorDataset": [[132, 2, 1, "", "__getitem__"], [132, 2, 1, "", "__len__"], [132, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyComputerDataset": [[133, 2, 1, "", "__getitem__"], [133, 2, 1, "", "__len__"], [133, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyPhotoDataset": [[134, 2, 1, "", "__getitem__"], [134, 2, 1, "", "__len__"], [134, 5, 1, "", "num_classes"]], "dgl.data.AsGraphPredDataset": [[135, 2, 1, "", "__getitem__"], [135, 2, 1, "", "__len__"], [135, 5, 1, "", "edge_feat_size"], [135, 5, 1, "", "node_feat_size"], [135, 5, 1, "", "num_classes"], [135, 5, 1, "", "num_tasks"], [135, 5, 1, "", "test_idx"], [135, 5, 1, "", "train_idx"], [135, 5, 1, "", "val_idx"]], "dgl.data.AsLinkPredDataset": [[136, 2, 1, "", "__getitem__"], [136, 2, 1, "", "__len__"], [136, 5, 1, "", "feat_size"], [136, 5, 1, "", "test_edges"], [136, 5, 1, "", "train_graph"], [136, 5, 1, "", "val_edges"]], "dgl.data.AsNodePredDataset": [[137, 2, 1, "", "__getitem__"], [137, 2, 1, "", "__len__"], [137, 5, 1, "", "num_classes"], [137, 5, 1, "", "test_idx"], [137, 5, 1, "", "train_idx"], [137, 5, 1, "", "val_idx"]], "dgl.data.BA2MotifDataset": [[138, 2, 1, "", "__getitem__"], [138, 2, 1, "", "__len__"], [138, 5, 1, "", "num_classes"]], "dgl.data.BACommunityDataset": [[139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__len__"], [139, 5, 1, "", "num_classes"]], "dgl.data.BAShapeDataset": [[140, 2, 1, "", "__getitem__"], [140, 2, 1, "", "__len__"], [140, 5, 1, "", "num_classes"]], "dgl.data.BGSDataset": [[141, 2, 1, "", "__getitem__"], [141, 2, 1, "", "__len__"], [141, 5, 1, "", "num_classes"], [141, 5, 1, "", "predict_category"]], "dgl.data.BitcoinOTCDataset": [[142, 2, 1, "", "__getitem__"], [142, 2, 1, "", "__len__"], [142, 5, 1, "", "graphs"], [142, 5, 1, "", "is_temporal"]], "dgl.data.CLUSTERDataset": [[143, 2, 1, "", "__getitem__"], [143, 2, 1, "", "__len__"], [143, 5, 1, "", "num_classes"]], "dgl.data.CSVDataset": [[144, 2, 1, "", "__getitem__"], [144, 2, 1, "", "__len__"], [144, 5, 1, "", "data"], [144, 5, 1, "", "graphs"]], "dgl.data.ChameleonDataset": [[145, 2, 1, "", "__getitem__"], [145, 2, 1, "", "__len__"], [145, 5, 1, "", "num_classes"]], "dgl.data.CiteseerGraphDataset": [[146, 2, 1, "", "__getitem__"], [146, 2, 1, "", "__len__"], [146, 5, 1, "", "num_classes"]], "dgl.data.CoauthorCSDataset": [[147, 2, 1, "", "__getitem__"], [147, 2, 1, "", "__len__"], [147, 5, 1, "", "num_classes"]], "dgl.data.CoauthorPhysicsDataset": [[148, 2, 1, "", "__getitem__"], [148, 2, 1, "", "__len__"], [148, 5, 1, "", "num_classes"]], "dgl.data.CoraFullDataset": [[149, 2, 1, "", "__getitem__"], [149, 2, 1, "", "__len__"], [149, 5, 1, "", "num_classes"]], "dgl.data.CoraGraphDataset": [[150, 2, 1, "", "__getitem__"], [150, 2, 1, "", "__len__"], [150, 5, 1, "", "num_classes"]], "dgl.data.CornellDataset": [[151, 2, 1, "", "__getitem__"], [151, 2, 1, "", "__len__"], [151, 5, 1, "", "num_classes"]], "dgl.data.DGLDataset": [[152, 2, 1, "", "__getitem__"], [152, 2, 1, "", "__len__"], [152, 5, 1, "", "hash"], [152, 5, 1, "", "name"], [152, 5, 1, "", "raw_dir"], [152, 5, 1, "", "raw_path"], [152, 5, 1, "", "save_dir"], [152, 5, 1, "", "save_path"], [152, 5, 1, "", "url"], [152, 5, 1, "", "verbose"]], "dgl.data.FB15k237Dataset": [[153, 2, 1, "", "__getitem__"], [153, 2, 1, "", "__len__"], [153, 5, 1, "", "num_nodes"], [153, 5, 1, "", "num_rels"]], "dgl.data.FB15kDataset": [[154, 2, 1, "", "__getitem__"], [154, 2, 1, "", "__len__"], [154, 5, 1, "", "num_nodes"], [154, 5, 1, "", "num_rels"]], "dgl.data.FakeNewsDataset": [[155, 2, 1, "", "__getitem__"], [155, 2, 1, "", "__len__"], [155, 5, 1, "", "feature"], [155, 5, 1, "", "feature_name"], [155, 5, 1, "", "graphs"], [155, 5, 1, "", "labels"], [155, 5, 1, "", "name"], [155, 5, 1, "", "num_classes"], [155, 5, 1, "", "num_graphs"], [155, 5, 1, "", "test_mask"], [155, 5, 1, "", "train_mask"], [155, 5, 1, "", "val_mask"]], "dgl.data.FlickrDataset": [[156, 2, 1, "", "__getitem__"], [156, 2, 1, "", "__len__"], [156, 5, 1, "", "num_classes"]], "dgl.data.FraudAmazonDataset": [[157, 2, 1, "", "__getitem__"], [157, 2, 1, "", "__len__"]], "dgl.data.FraudDataset": [[158, 2, 1, "", "__getitem__"], [158, 2, 1, "", "__len__"], [158, 5, 1, "", "graph"], [158, 5, 1, "", "num_classes"], [158, 5, 1, "", "seed"], [158, 5, 1, "", "train_size"], [158, 5, 1, "", "val_size"]], "dgl.data.FraudYelpDataset": [[159, 2, 1, "", "__getitem__"], [159, 2, 1, "", "__len__"]], "dgl.data.GDELTDataset": [[160, 2, 1, "", "__getitem__"], [160, 2, 1, "", "__len__"], [160, 5, 1, "", "end_time"], [160, 5, 1, "", "is_temporal"], [160, 5, 1, "", "start_time"]], "dgl.data.GINDataset": [[161, 2, 1, "", "__getitem__"], [161, 2, 1, "", "__len__"], [161, 5, 1, "", "num_classes"]], "dgl.data.ICEWS18Dataset": [[162, 2, 1, "", "__getitem__"], [162, 2, 1, "", "__len__"], [162, 5, 1, "", "is_temporal"]], "dgl.data.KarateClubDataset": [[163, 2, 1, "", "__getitem__"], [163, 2, 1, "", "__len__"], [163, 5, 1, "", "num_classes"]], "dgl.data.LegacyTUDataset": [[164, 2, 1, "", "__getitem__"], [164, 2, 1, "", "__len__"], [164, 5, 1, "", "max_num_node"], [164, 5, 1, "", "num_classes"], [164, 5, 1, "", "num_labels"]], "dgl.data.MUTAGDataset": [[165, 2, 1, "", "__getitem__"], [165, 2, 1, "", "__len__"], [165, 5, 1, "", "graph"], [165, 5, 1, "", "num_classes"], [165, 5, 1, "", "predict_category"]], "dgl.data.MiniGCDataset": [[166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__len__"], [166, 5, 1, "", "max_num_v"], [166, 5, 1, "", "min_num_v"], [166, 5, 1, "", "num_classes"], [166, 5, 1, "", "num_graphs"]], "dgl.data.PATTERNDataset": [[167, 2, 1, "", "__getitem__"], [167, 2, 1, "", "__len__"], [167, 5, 1, "", "num_classes"]], "dgl.data.PPIDataset": [[168, 2, 1, "", "__getitem__"], [168, 2, 1, "", "__len__"], [168, 5, 1, "", "features"], [168, 5, 1, "", "labels"], [168, 5, 1, "", "num_labels"]], "dgl.data.PubmedGraphDataset": [[169, 2, 1, "", "__getitem__"], [169, 2, 1, "", "__len__"], [169, 5, 1, "", "num_classes"]], "dgl.data.QM7bDataset": [[170, 2, 1, "", "__getitem__"], [170, 2, 1, "", "__len__"], [170, 5, 1, "", "num_labels"], [170, 5, 1, "", "num_tasks"]], "dgl.data.QM9Dataset": [[171, 2, 1, "", "__getitem__"], [171, 2, 1, "", "__len__"], [171, 5, 1, "", "num_labels"], [171, 5, 1, "", "num_tasks"]], "dgl.data.QM9EdgeDataset": [[172, 2, 1, "", "__getitem__"], [172, 2, 1, "", "__len__"], [172, 5, 1, "", "num_labels"], [172, 5, 1, "", "num_tasks"]], "dgl.data.RedditDataset": [[173, 2, 1, "", "__getitem__"], [173, 2, 1, "", "__len__"], [173, 5, 1, "", "num_classes"]], "dgl.data.SBMMixtureDataset": [[174, 2, 1, "", "__getitem__"], [174, 2, 1, "", "__len__"], [174, 2, 1, "", "collate_fn"]], "dgl.data.SSTDataset": [[175, 2, 1, "", "__getitem__"], [175, 2, 1, "", "__len__"], [175, 5, 1, "", "num_classes"], [175, 5, 1, "", "pretrained_emb"], [175, 5, 1, "", "vocab"], [175, 5, 1, "", "vocab_size"]], "dgl.data.SquirrelDataset": [[176, 2, 1, "", "__getitem__"], [176, 2, 1, "", "__len__"], [176, 5, 1, "", "num_classes"]], "dgl.data.TUDataset": [[177, 2, 1, "", "__getitem__"], [177, 2, 1, "", "__len__"], [177, 5, 1, "", "max_num_node"], [177, 5, 1, "", "num_classes"], [177, 5, 1, "", "num_labels"]], "dgl.data.TexasDataset": [[178, 2, 1, "", "__getitem__"], [178, 2, 1, "", "__len__"], [178, 5, 1, "", "num_classes"]], "dgl.data.TreeCycleDataset": [[179, 2, 1, "", "__getitem__"], [179, 2, 1, "", "__len__"], [179, 5, 1, "", "num_classes"]], "dgl.data.TreeGridDataset": [[180, 2, 1, "", "__getitem__"], [180, 2, 1, "", "__len__"], [180, 5, 1, "", "num_classes"]], "dgl.data.WN18Dataset": [[181, 2, 1, "", "__getitem__"], [181, 2, 1, "", "__len__"], [181, 5, 1, "", "num_nodes"], [181, 5, 1, "", "num_rels"]], "dgl.data.WikiCSDataset": [[182, 2, 1, "", "__getitem__"], [182, 2, 1, "", "__len__"], [182, 5, 1, "", "num_classes"]], "dgl.data.WisconsinDataset": [[183, 2, 1, "", "__getitem__"], [183, 2, 1, "", "__len__"], [183, 5, 1, "", "num_classes"]], "dgl.data.YelpDataset": [[184, 2, 1, "", "__getitem__"], [184, 2, 1, "", "__len__"], [184, 5, 1, "", "num_classes"]], "dgl.data.ZINCDataset": [[185, 2, 1, "", "__getitem__"], [185, 2, 1, "", "__len__"], [185, 5, 1, "", "num_atom_types"], [185, 5, 1, "", "num_bond_types"]], "dgl.data.utils": [[186, 1, 1, "", "Subset"], [187, 1, 1, "", "add_node_property_split"], [188, 1, 1, "", "add_nodepred_split"], [189, 1, 1, "", "check_sha1"], [190, 1, 1, "", "download"], [191, 1, 1, "", "extract_archive"], [192, 1, 1, "", "get_download_dir"], [193, 1, 1, "", "load_info"], [194, 1, 1, "", "load_labels"], [195, 1, 1, "", "mask_nodes_by_property"], [196, 1, 1, "", "save_info"], [197, 1, 1, "", "split_dataset"]], "dgl.data.utils.Subset": [[186, 2, 1, "", "__getitem__"], [186, 2, 1, "", "__len__"]], "dgl.dataloading": [[198, 1, 1, "", "BlockSampler"], [199, 1, 1, "", "ClusterGCNSampler"], [200, 1, 1, "", "DataLoader"], [201, 1, 1, "", "DistEdgeDataLoader"], [202, 1, 1, "", "DistNodeDataLoader"], [203, 1, 1, "", "GraphDataLoader"], [204, 1, 1, "", "LaborSampler"], [205, 1, 1, "", "MultiLayerFullNeighborSampler"], [206, 1, 1, "", "NeighborSampler"], [207, 1, 1, "", "SAINTSampler"], [208, 1, 1, "", "Sampler"], [209, 1, 1, "", "ShaDowKHopSampler"], [210, 4, 1, "", "as_edge_prediction_sampler"]], "dgl.dataloading.BlockSampler": [[198, 2, 1, "", "__init__"]], "dgl.dataloading.base": [[211, 1, 1, "", "LazyFeature"], [212, 1, 1, "", "set_dst_lazy_features"], [213, 1, 1, "", "set_edge_lazy_features"], [214, 1, 1, "", "set_node_lazy_features"], [215, 1, 1, "", "set_src_lazy_features"]], "dgl.dataloading.negative_sampler": [[216, 1, 1, "", "GlobalUniform"], [217, 1, 1, "", "PerSourceUniform"], [218, 5, 1, "", "Uniform"]], "dgl.distributed": [[4, 1, 1, "", "DistDataLoader"], [4, 1, 1, "", "DistEmbedding"], [4, 1, 1, "", "DistGraph"], [4, 1, 1, "", "DistTensor"], [4, 1, 1, "", "GraphPartitionBook"], [4, 1, 1, "", "PartitionPolicy"], [221, 4, 1, "", "edge_split"], [222, 4, 1, "", "find_edges"], [223, 4, 1, "", "in_subgraph"], [224, 4, 1, "", "initialize"], [225, 4, 1, "", "load_partition"], [226, 4, 1, "", "load_partition_book"], [227, 4, 1, "", "load_partition_feats"], [228, 4, 1, "", "node_split"], [229, 4, 1, "", "partition_graph"], [230, 4, 1, "", "sample_etype_neighbors"], [231, 4, 1, "", "sample_neighbors"]], "dgl.distributed.DistGraph": [[4, 2, 1, "", "barrier"], [4, 3, 1, "", "device"], [4, 3, 1, "", "edata"], [4, 2, 1, "", "edge_attr_schemes"], [4, 3, 1, "", "edges"], [4, 3, 1, "", "etypes"], [4, 2, 1, "", "find_edges"], [4, 2, 1, "", "get_edge_partition_policy"], [4, 2, 1, "", "get_etype_id"], [4, 2, 1, "", "get_node_partition_policy"], [4, 2, 1, "", "get_ntype_id"], [4, 2, 1, "", "get_partition_book"], [4, 3, 1, "", "idtype"], [4, 2, 1, "", "in_degrees"], [4, 3, 1, "", "local_partition"], [4, 3, 1, "", "ndata"], [4, 2, 1, "", "node_attr_schemes"], [4, 3, 1, "", "nodes"], [4, 3, 1, "", "ntypes"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_nodes"], [4, 2, 1, "", "number_of_edges"], [4, 2, 1, "", "number_of_nodes"], [4, 2, 1, "", "out_degrees"], [4, 2, 1, "", "rank"]], "dgl.distributed.DistTensor": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "name"], [4, 3, 1, "", "part_policy"], [4, 3, 1, "", "shape"]], "dgl.distributed.GraphPartitionBook": [[4, 3, 1, "", "canonical_etypes"], [4, 2, 1, "", "eid2localeid"], [4, 2, 1, "", "eid2partid"], [4, 2, 1, "", "map_to_homo_eid"], [4, 2, 1, "", "map_to_homo_nid"], [4, 2, 1, "", "map_to_per_etype"], [4, 2, 1, "", "map_to_per_ntype"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "nid2localnid"], [4, 2, 1, "", "nid2partid"], [4, 2, 1, "", "num_partitions"], [4, 3, 1, "", "partid"], [4, 2, 1, "", "partid2eids"], [4, 2, 1, "", "partid2nids"], [4, 2, 1, "", "shared_memory"]], "dgl.distributed.PartitionPolicy": [[4, 2, 1, "", "get_part_size"], [4, 2, 1, "", "get_size"], [4, 3, 1, "", "part_id"], [4, 3, 1, "", "partition_book"], [4, 3, 1, "", "policy_str"], [4, 2, 1, "", "to_local"], [4, 2, 1, "", "to_partid"]], "dgl.distributed.optim": [[4, 1, 1, "", "SparseAdagrad"], [4, 1, 1, "", "SparseAdam"]], "dgl.distributed.optim.SparseAdagrad": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.distributed.optim.SparseAdam": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.function": [[239, 4, 1, "", "copy_e"], [240, 4, 1, "", "copy_u"], [241, 4, 1, "", "e_add_u"], [242, 4, 1, "", "e_add_v"], [243, 4, 1, "", "e_div_u"], [244, 4, 1, "", "e_div_v"], [245, 4, 1, "", "e_dot_u"], [246, 4, 1, "", "e_dot_v"], [247, 4, 1, "", "e_mul_u"], [248, 4, 1, "", "e_mul_v"], [249, 4, 1, "", "e_sub_u"], [250, 4, 1, "", "e_sub_v"], [251, 4, 1, "", "max"], [252, 4, 1, "", "mean"], [253, 4, 1, "", "min"], [254, 4, 1, "", "sum"], [255, 4, 1, "", "u_add_e"], [256, 4, 1, "", "u_add_v"], [257, 4, 1, "", "u_div_e"], [258, 4, 1, "", "u_div_v"], [259, 4, 1, "", "u_dot_e"], [260, 4, 1, "", "u_dot_v"], [261, 4, 1, "", "u_mul_e"], [262, 4, 1, "", "u_mul_v"], [263, 4, 1, "", "u_sub_e"], [264, 4, 1, "", "u_sub_v"], [265, 4, 1, "", "v_add_e"], [266, 4, 1, "", "v_add_u"], [267, 4, 1, "", "v_div_e"], [268, 4, 1, "", "v_div_u"], [269, 4, 1, "", "v_dot_e"], [270, 4, 1, "", "v_dot_u"], [271, 4, 1, "", "v_mul_e"], [272, 4, 1, "", "v_mul_u"], [273, 4, 1, "", "v_sub_e"], [274, 4, 1, "", "v_sub_u"]], "dgl.geometry": [[6, 1, 1, "", "farthest_point_sampler"], [6, 1, 1, "", "neighbor_matching"]], "dgl.multiprocessing.pytorch": [[297, 4, 1, "", "call_once_and_share"], [298, 4, 1, "", "shared_tensor"]], "dgl.nn": [[17, 0, 0, "-", "functional"]], "dgl.nn.functional": [[299, 4, 1, "", "edge_softmax"]], "dgl.nn.mxnet": [[300, 1, 1, "", "HeteroGraphConv"]], "dgl.nn.mxnet.conv": [[301, 1, 1, "", "AGNNConv"], [302, 1, 1, "", "APPNPConv"], [303, 1, 1, "", "ChebConv"], [304, 1, 1, "", "DenseChebConv"], [305, 1, 1, "", "DenseGraphConv"], [306, 1, 1, "", "DenseSAGEConv"], [307, 1, 1, "", "EdgeConv"], [308, 1, 1, "", "GATConv"], [309, 1, 1, "", "GINConv"], [310, 1, 1, "", "GMMConv"], [311, 1, 1, "", "GatedGraphConv"], [312, 1, 1, "", "GraphConv"], [313, 1, 1, "", "NNConv"], [314, 1, 1, "", "RelGraphConv"], [315, 1, 1, "", "SAGEConv"], [316, 1, 1, "", "SGConv"], [317, 1, 1, "", "TAGConv"]], "dgl.nn.mxnet.glob": [[318, 1, 1, "", "AvgPooling"], [319, 1, 1, "", "GlobalAttentionPooling"], [320, 1, 1, "", "MaxPooling"], [321, 1, 1, "", "Set2Set"], [322, 1, 1, "", "SortPooling"], [323, 1, 1, "", "SumPooling"]], "dgl.nn.mxnet.utils": [[324, 1, 1, "", "Sequential"]], "dgl.nn.pytorch": [[325, 1, 1, "", "DeepWalk"], [326, 1, 1, "", "HeteroEmbedding"], [327, 1, 1, "", "HeteroGraphConv"], [328, 1, 1, "", "HeteroLinear"], [329, 1, 1, "", "MetaPath2Vec"], [330, 1, 1, "", "TypedLinear"]], "dgl.nn.pytorch.DeepWalk": [[325, 2, 1, "", "forward"], [325, 5, 1, "", "node_embed"], [325, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroEmbedding": [[326, 2, 1, "", "forward"], [326, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroGraphConv": [[327, 2, 1, "", "forward"], [327, 5, 1, "", "mods"]], "dgl.nn.pytorch.HeteroLinear": [[328, 2, 1, "", "forward"]], "dgl.nn.pytorch.MetaPath2Vec": [[329, 2, 1, "", "forward"], [329, 5, 1, "", "local_to_global_nid"], [329, 5, 1, "", "node_embed"], [329, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.TypedLinear": [[330, 2, 1, "", "forward"], [330, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv": [[331, 1, 1, "", "AGNNConv"], [332, 1, 1, "", "APPNPConv"], [333, 1, 1, "", "AtomicConv"], [334, 1, 1, "", "CFConv"], [335, 1, 1, "", "ChebConv"], [336, 1, 1, "", "CuGraphGATConv"], [337, 1, 1, "", "CuGraphRelGraphConv"], [338, 1, 1, "", "CuGraphSAGEConv"], [339, 1, 1, "", "DGNConv"], [340, 1, 1, "", "DenseChebConv"], [341, 1, 1, "", "DenseGraphConv"], [342, 1, 1, "", "DenseSAGEConv"], [343, 1, 1, "", "DotGatConv"], [344, 1, 1, "", "EGATConv"], [345, 1, 1, "", "EGNNConv"], [346, 1, 1, "", "EdgeConv"], [347, 1, 1, "", "EdgeGATConv"], [348, 1, 1, "", "EdgeWeightNorm"], [349, 1, 1, "", "GATConv"], [350, 1, 1, "", "GATv2Conv"], [351, 1, 1, "", "GCN2Conv"], [352, 1, 1, "", "GINConv"], [353, 1, 1, "", "GINEConv"], [354, 1, 1, "", "GMMConv"], [355, 1, 1, "", "GatedGraphConv"], [356, 1, 1, "", "GraphConv"], [357, 1, 1, "", "GroupRevRes"], [358, 1, 1, "", "HGTConv"], [359, 1, 1, "", "NNConv"], [360, 1, 1, "", "PNAConv"], [361, 1, 1, "", "RelGraphConv"], [362, 1, 1, "", "SAGEConv"], [363, 1, 1, "", "SGConv"], [364, 1, 1, "", "TAGConv"], [365, 1, 1, "", "TWIRLSConv"], [366, 1, 1, "", "TWIRLSUnfoldingAndAttention"]], "dgl.nn.pytorch.conv.AGNNConv": [[331, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.APPNPConv": [[332, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.AtomicConv": [[333, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CFConv": [[334, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.ChebConv": [[335, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CuGraphGATConv": [[336, 2, 1, "", "forward"], [336, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphRelGraphConv": [[337, 2, 1, "", "forward"], [337, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphSAGEConv": [[338, 2, 1, "", "forward"], [338, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DGNConv": [[339, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.DenseChebConv": [[340, 2, 1, "", "forward"], [340, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseGraphConv": [[341, 2, 1, "", "forward"], [341, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseSAGEConv": [[342, 2, 1, "", "forward"], [342, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DotGatConv": [[343, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EGATConv": [[344, 2, 1, "", "forward"], [344, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EGNNConv": [[345, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeConv": [[346, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeGATConv": [[347, 2, 1, "", "forward"], [347, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EdgeWeightNorm": [[348, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GATConv": [[349, 2, 1, "", "forward"], [349, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GATv2Conv": [[350, 2, 1, "", "forward"], [350, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GCN2Conv": [[351, 2, 1, "", "forward"], [351, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GINConv": [[352, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GINEConv": [[353, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GMMConv": [[354, 2, 1, "", "forward"], [354, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GatedGraphConv": [[355, 2, 1, "", "forward"], [355, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GraphConv": [[356, 5, 1, "", "bias"], [356, 2, 1, "", "forward"], [356, 2, 1, "", "reset_parameters"], [356, 5, 1, "", "weight"]], "dgl.nn.pytorch.conv.GroupRevRes": [[357, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.HGTConv": [[358, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.NNConv": [[359, 2, 1, "", "forward"], [359, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.PNAConv": [[360, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.RelGraphConv": [[361, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.SAGEConv": [[362, 2, 1, "", "forward"], [362, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.SGConv": [[363, 2, 1, "", "forward"], [363, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TAGConv": [[364, 2, 1, "", "forward"], [364, 5, 1, "", "lin"], [364, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TWIRLSConv": [[365, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention": [[366, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain": [[367, 1, 1, "", "GNNExplainer"], [368, 1, 1, "", "HeteroGNNExplainer"], [369, 1, 1, "", "HeteroSubgraphX"], [370, 1, 1, "", "SubgraphX"]], "dgl.nn.pytorch.explain.GNNExplainer": [[367, 2, 1, "", "explain_graph"], [367, 2, 1, "", "explain_node"], [367, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroGNNExplainer": [[368, 2, 1, "", "explain_graph"], [368, 2, 1, "", "explain_node"], [368, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroSubgraphX": [[369, 2, 1, "", "explain_graph"], [369, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.SubgraphX": [[370, 2, 1, "", "explain_graph"], [370, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory": [[371, 1, 1, "", "KNNGraph"], [372, 1, 1, "", "RadiusGraph"], [373, 1, 1, "", "SegmentedKNNGraph"]], "dgl.nn.pytorch.factory.KNNGraph": [[371, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.RadiusGraph": [[372, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.SegmentedKNNGraph": [[373, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob": [[374, 1, 1, "", "AvgPooling"], [375, 1, 1, "", "GlobalAttentionPooling"], [376, 1, 1, "", "MaxPooling"], [377, 1, 1, "", "Set2Set"], [378, 1, 1, "", "SetTransformerDecoder"], [379, 1, 1, "", "SetTransformerEncoder"], [380, 1, 1, "", "SortPooling"], [381, 1, 1, "", "SumPooling"], [382, 1, 1, "", "WeightAndSum"]], "dgl.nn.pytorch.glob.AvgPooling": [[374, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.GlobalAttentionPooling": [[375, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.MaxPooling": [[376, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.Set2Set": [[377, 2, 1, "", "forward"], [377, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.glob.SetTransformerDecoder": [[378, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SetTransformerEncoder": [[379, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SortPooling": [[380, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SumPooling": [[381, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.WeightAndSum": [[382, 2, 1, "", "forward"]], "dgl.nn.pytorch.graph_transformer": [[383, 1, 1, "", "BiasedMultiheadAttention"], [384, 1, 1, "", "DegreeEncoder"], [385, 1, 1, "", "EGTLayer"], [386, 1, 1, "", "GraphormerLayer"], [387, 1, 1, "", "PathEncoder"], [388, 1, 1, "", "SpatialEncoder"], [389, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt": [[390, 1, 1, "", "BiasedMHA"], [391, 1, 1, "", "DegreeEncoder"], [392, 1, 1, "", "EGTLayer"], [393, 1, 1, "", "GraphormerLayer"], [394, 1, 1, "", "LapPosEncoder"], [395, 1, 1, "", "PathEncoder"], [396, 1, 1, "", "SpatialEncoder"], [397, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt.BiasedMHA": [[390, 2, 1, "", "forward"], [390, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.gt.DegreeEncoder": [[391, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.EGTLayer": [[392, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.GraphormerLayer": [[393, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.LapPosEncoder": [[394, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.PathEncoder": [[395, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder": [[396, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder3d": [[397, 2, 1, "", "forward"]], "dgl.nn.pytorch.link": [[398, 1, 1, "", "EdgePredictor"], [399, 1, 1, "", "TransE"], [400, 1, 1, "", "TransR"]], "dgl.nn.pytorch.link.EdgePredictor": [[398, 2, 1, "", "forward"], [398, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransE": [[399, 2, 1, "", "forward"], [399, 5, 1, "", "rel_emb"], [399, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransR": [[400, 2, 1, "", "forward"], [400, 5, 1, "", "rel_emb"], [400, 5, 1, "", "rel_project"], [400, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.sparse_emb": [[401, 1, 1, "", "NodeEmbedding"]], "dgl.nn.pytorch.utils": [[402, 1, 1, "", "JumpingKnowledge"], [403, 1, 1, "", "LabelPropagation"], [404, 1, 1, "", "Sequential"], [405, 1, 1, "", "WeightBasis"]], "dgl.nn.pytorch.utils.JumpingKnowledge": [[402, 2, 1, "", "forward"], [402, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.utils.LabelPropagation": [[403, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.Sequential": [[404, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.WeightBasis": [[405, 2, 1, "", "forward"]], "dgl.nn.tensorflow.conv": [[406, 1, 1, "", "APPNPConv"], [407, 1, 1, "", "ChebConv"], [408, 1, 1, "", "GATConv"], [409, 1, 1, "", "GINConv"], [410, 1, 1, "", "GraphConv"], [411, 1, 1, "", "RelGraphConv"], [412, 1, 1, "", "SAGEConv"], [413, 1, 1, "", "SGConv"]], "dgl.nn.tensorflow.glob": [[414, 1, 1, "", "AvgPooling"], [415, 1, 1, "", "GlobalAttentionPooling"], [416, 1, 1, "", "HeteroGraphConv"], [417, 1, 1, "", "MaxPooling"], [418, 1, 1, "", "SortPooling"], [419, 1, 1, "", "SumPooling"]], "dgl.ops": [[424, 4, 1, "", "copy_e_max"], [425, 4, 1, "", "copy_e_mean"], [426, 4, 1, "", "copy_e_min"], [427, 4, 1, "", "copy_e_sum"], [428, 4, 1, "", "copy_u"], [429, 4, 1, "", "copy_u_max"], [430, 4, 1, "", "copy_u_mean"], [431, 4, 1, "", "copy_u_min"], [432, 4, 1, "", "copy_u_sum"], [433, 4, 1, "", "copy_v"], [434, 4, 1, "", "e_add_u"], [435, 4, 1, "", "e_add_v"], [436, 4, 1, "", "e_div_u"], [437, 4, 1, "", "e_div_v"], [438, 4, 1, "", "e_dot_u"], [439, 4, 1, "", "e_dot_v"], [440, 4, 1, "", "e_mul_u"], [441, 4, 1, "", "e_mul_v"], [442, 4, 1, "", "e_sub_u"], [443, 4, 1, "", "e_sub_v"], [444, 4, 1, "", "gather_mm"], [445, 4, 1, "", "gsddmm"], [446, 4, 1, "", "gspmm"], [447, 4, 1, "", "segment_mm"], [448, 4, 1, "", "segment_reduce"], [449, 4, 1, "", "u_add_e"], [450, 4, 1, "", "u_add_e_max"], [451, 4, 1, "", "u_add_e_mean"], [452, 4, 1, "", "u_add_e_min"], [453, 4, 1, "", "u_add_e_sum"], [454, 4, 1, "", "u_add_v"], [455, 4, 1, "", "u_div_e"], [456, 4, 1, "", "u_div_e_max"], [457, 4, 1, "", "u_div_e_mean"], [458, 4, 1, "", "u_div_e_min"], [459, 4, 1, "", "u_div_e_sum"], [460, 4, 1, "", "u_div_v"], [461, 4, 1, "", "u_dot_e"], [462, 4, 1, "", "u_dot_v"], [463, 4, 1, "", "u_mul_e"], [464, 4, 1, "", "u_mul_e_max"], [465, 4, 1, "", "u_mul_e_mean"], [466, 4, 1, "", "u_mul_e_min"], [467, 4, 1, "", "u_mul_e_sum"], [468, 4, 1, "", "u_mul_v"], [469, 4, 1, "", "u_sub_e"], [470, 4, 1, "", "u_sub_e_max"], [471, 4, 1, "", "u_sub_e_mean"], [472, 4, 1, "", "u_sub_e_min"], [473, 4, 1, "", "u_sub_e_sum"], [474, 4, 1, "", "u_sub_v"], [475, 4, 1, "", "v_add_e"], [476, 4, 1, "", "v_add_u"], [477, 4, 1, "", "v_div_e"], [478, 4, 1, "", "v_div_u"], [479, 4, 1, "", "v_dot_e"], [480, 4, 1, "", "v_dot_u"], [481, 4, 1, "", "v_mul_e"], [482, 4, 1, "", "v_mul_u"], [483, 4, 1, "", "v_sub_e"], [484, 4, 1, "", "v_sub_u"]], "dgl.optim.pytorch": [[9, 1, 1, "", "SparseAdagrad"], [9, 1, 1, "", "SparseAdam"]], "dgl.sampling": [[503, 1, 1, "", "PinSAGESampler"], [504, 4, 1, "", "global_uniform_negative_sampling"], [505, 4, 1, "", "node2vec_random_walk"], [506, 4, 1, "", "pack_traces"], [507, 4, 1, "", "random_walk"], [508, 4, 1, "", "sample_labors"], [509, 4, 1, "", "sample_neighbors"], [510, 4, 1, "", "sample_neighbors_biased"], [511, 4, 1, "", "select_topk"]], "dgl.sampling.PinSAGESampler": [[503, 2, 1, "", "__init__"]], "dgl.sparse": [[11, 1, 1, "", "SparseMatrix"], [552, 4, 1, "", "add"], [553, 4, 1, "", "bsddmm"], [554, 4, 1, "", "bspmm"], [555, 4, 1, "", "diag"], [556, 4, 1, "", "div"], [557, 4, 1, "", "from_coo"], [558, 4, 1, "", "from_csc"], [559, 4, 1, "", "from_csr"], [560, 4, 1, "", "identity"], [561, 4, 1, "", "matmul"], [562, 4, 1, "", "mul"], [563, 4, 1, "", "power"], [564, 4, 1, "", "sddmm"], [565, 4, 1, "", "softmax"], [566, 4, 1, "", "sp_add_v"], [567, 4, 1, "", "sp_broadcast_v"], [568, 4, 1, "", "sp_div_v"], [569, 4, 1, "", "sp_mul_v"], [570, 4, 1, "", "sp_sub_v"], [571, 4, 1, "", "spmatrix"], [572, 4, 1, "", "spmm"], [573, 4, 1, "", "spspmm"], [574, 4, 1, "", "sub"], [575, 4, 1, "", "val_like"]], "dgl.sparse.SparseMatrix": [[521, 3, 1, "", "T"], [522, 2, 1, "", "coalesce"], [523, 3, 1, "", "col"], [524, 2, 1, "", "coo"], [525, 2, 1, "", "cpu"], [526, 2, 1, "", "csc"], [527, 2, 1, "", "csr"], [528, 2, 1, "", "cuda"], [529, 3, 1, "", "device"], [530, 2, 1, "", "double"], [531, 3, 1, "", "dtype"], [532, 2, 1, "", "float"], [533, 2, 1, "", "has_duplicate"], [534, 2, 1, "", "indices"], [535, 2, 1, "", "int"], [536, 2, 1, "", "long"], [537, 2, 1, "", "neg"], [538, 3, 1, "", "nnz"], [539, 2, 1, "", "reduce"], [540, 3, 1, "", "row"], [541, 3, 1, "", "shape"], [542, 2, 1, "", "smax"], [543, 2, 1, "", "smean"], [544, 2, 1, "", "smin"], [545, 2, 1, "", "softmax"], [546, 2, 1, "", "sum"], [547, 2, 1, "", "t"], [548, 2, 1, "", "to"], [549, 2, 1, "", "to_dense"], [550, 2, 1, "", "transpose"], [551, 3, 1, "", "val"]], "dgl.transforms": [[593, 1, 1, "", "AddEdge"], [594, 1, 1, "", "AddMetaPaths"], [595, 1, 1, "", "AddReverse"], [596, 1, 1, "", "AddSelfLoop"], [597, 1, 1, "", "BaseTransform"], [598, 1, 1, "", "Compose"], [599, 1, 1, "", "DropEdge"], [600, 1, 1, "", "DropNode"], [601, 1, 1, "", "FeatMask"], [602, 1, 1, "", "GCNNorm"], [603, 1, 1, "", "GDC"], [604, 1, 1, "", "HeatKernel"], [605, 1, 1, "", "KHopGraph"], [606, 1, 1, "", "LapPE"], [607, 1, 1, "", "LineGraph"], [608, 1, 1, "", "NodeShuffle"], [609, 1, 1, "", "PPR"], [610, 1, 1, "", "RandomWalkPE"], [611, 1, 1, "", "RemoveSelfLoop"], [612, 1, 1, "", "RowFeatNormalizer"], [613, 1, 1, "", "SIGNDiffusion"], [614, 1, 1, "", "SVDPE"], [615, 1, 1, "", "ToLevi"], [616, 1, 1, "", "ToSimple"]], "dgl.udf.EdgeBatch": [[617, 2, 1, "", "batch_size"], [618, 3, 1, "", "data"], [619, 3, 1, "", "dst"], [620, 2, 1, "", "edges"], [621, 3, 1, "", "src"]], "dgl.udf.NodeBatch": [[622, 2, 1, "", "batch_size"], [623, 3, 1, "", "data"], [624, 3, 1, "", "mailbox"], [625, 2, 1, "", "nodes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [4, 5, 7, 10, 21, 33, 34, 42, 45, 47, 52, 53, 54, 55, 56, 57, 59, 60, 72, 73, 86, 87, 89, 92, 93, 99, 102, 106, 112, 120, 123, 128, 129, 147, 148, 157, 159, 163, 164, 174, 198, 200, 203, 210, 211, 220, 222, 224, 229, 230, 231, 232, 234, 275, 276, 277, 281, 282, 293, 294, 333, 341, 343, 347, 355, 356, 358, 377, 404, 421, 445, 446, 485, 501, 508, 509, 510, 512, 515, 519, 520, 606, 630, 631, 633, 634, 635, 637, 639, 641, 644, 646, 649, 650, 651, 652, 654, 655, 659, 663, 664, 666, 668, 670, 671, 673, 695, 716, 723, 728, 737, 747, 748, 754, 759, 760, 761, 762, 763, 764, 765, 766, 773, 776, 779, 780, 785, 786, 789, 790, 791, 795, 798, 801, 802, 807, 808], "0": [0, 4, 5, 6, 8, 9, 13, 19, 21, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 166, 167, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 195, 197, 200, 203, 204, 206, 207, 209, 210, 216, 217, 219, 220, 229, 232, 233, 234, 235, 236, 237, 238, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 297, 299, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 404, 420, 421, 422, 423, 447, 448, 485, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 525, 526, 527, 528, 530, 532, 533, 535, 536, 539, 542, 543, 544, 545, 546, 548, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 567, 572, 573, 574, 578, 579, 580, 581, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 632, 633, 635, 636, 637, 638, 639, 643, 644, 645, 646, 647, 653, 655, 656, 657, 658, 659, 661, 662, 663, 666, 667, 668, 669, 671, 672, 673, 677, 678, 680, 681, 683, 686, 687, 688, 689, 690, 696, 698, 699, 700, 701, 703, 706, 707, 708, 709, 711, 712, 713, 717, 718, 720, 721, 722, 723, 724, 727, 728, 729, 730, 731, 738, 740, 741, 742, 743, 744, 746, 747, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 765, 767, 768, 769, 770, 771, 772, 773, 775, 776, 778, 779, 780, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 794, 795, 797, 798, 800, 801, 802, 804, 806, 807, 808, 810], "00": [24, 284, 578, 614, 761, 762, 765, 767, 775, 778, 782, 784, 785, 786, 788, 794, 797, 800, 804, 806, 808, 810], "000": [13, 143, 167, 181, 185, 761, 767, 776, 778, 779, 780, 782, 783, 788, 802, 804, 806], "0000": [8, 117, 299, 333, 341, 352, 356, 361, 366, 423, 495, 539, 543, 545, 556, 565, 602, 606, 610, 760, 764], "00000": [789, 790, 792, 795], "000000": 760, "000007645": 776, "00001": [789, 790, 792, 795], "00002": [789, 790, 792, 795], "00003": [789, 790, 792, 795], "00004": [789, 790, 792, 795], "00005": [789, 790, 792, 795], "00006": [789, 790, 792, 795], "00007": [789, 790, 792, 795], "00008": [789, 790, 792, 795], "00009": [789, 790, 792, 795], "0000e": [284, 578, 614], "00010": [789, 790, 792], "00011": [789, 790, 792], "00012": [789, 790, 792], "00013": [789, 790, 792], "00014": [789, 790, 792], "00015": [789, 790, 792], "00016": [789, 790, 792], "00017": [789, 790, 792], "00018": [789, 790, 792], "00019": [789, 790, 792], "00020": [789, 790, 792], "00021": [789, 790, 792], "00022": [789, 790, 792], "00023": [789, 790, 792], "00024": [789, 790, 792], "00025": [789, 792], "00026": [789, 792], "00027": [789, 792], "00028": [789, 792], "00029": [789, 792], "00030": 789, "00031": 789, "00032": 789, "00033": 789, "00034": 789, "00035": 789, "00036": 789, "00037": 789, "00038": 789, "00039": 789, "00040": 789, "00041": 789, "00042": 789, "00043": 789, "00044": 789, "00045": 789, "00046": 789, "00047": 789, "00048": 789, "00049": 789, "001": [4, 9, 401, 510, 761, 762, 779, 780], "0014": 764, "0019": 786, "002": [13, 761, 767, 770, 792, 807, 810], "002158116134429955": 631, "0028": 378, "003": [13, 503, 761, 770], "0033": 764, "0038": 789, "004": [13, 761, 770], "0048": 786, "005": [367, 368, 761, 770], "006": [13, 761, 770, 792], "0064": 790, "007": [13, 761, 770], "00743445923710373": 631, "008": [13, 761, 770], "008790817766266334": 631, "0089": 352, "009": [13, 761, 770], "0093": 761, "0098": 795, "00982": [143, 167, 185], "0099": 379, "01": [139, 140, 179, 284, 325, 367, 368, 578, 614, 767, 768, 770, 771, 772, 775, 784, 785, 790, 797, 802, 807, 808], "010": [13, 761, 770], "0103": 786, "011": [13, 761, 770], "0118": 352, "0119": 764, "012": [761, 770], "0120": 764, "0121": 786, "01217200152200748": 631, "0122": 790, "0126": 786, "0129": 350, "013": [761, 770], "0130": 786, "01315": 765, "0134": 404, "014": [13, 761, 770], "01404": 158, "0142": [374, 375, 376, 377, 378, 379, 380, 381, 382], "0145": 377, "0148": 765, "015": [13, 761, 767, 769, 775], "0152": 765, "0155": 359, "0156": [378, 765], "016": [13, 761, 770], "0163": 609, "0164": 335, "0168": 786, "0169": 404, "017": [13, 761, 770], "0177": 761, "0179": 786, "018": [761, 785], "0180": [545, 565], "0181": 786, "0182": 764, "0184": 337, "0185": 765, "019": [13, 761, 770], "0191": 786, "0192": 765, "0193": 764, "01973": 503, "0199": 764, "02": [767, 784, 785, 794, 808], "0200": 603, "0201": 761, "0207": 352, "0208": 786, "0217": 609, "0219": 340, "022": 770, "0229": 786, "023": 13, "0235": 377, "0239": 350, "024": 770, "0249": 789, "025": [329, 792], "0255": 609, "026": 13, "0267": 789, "0268": [343, 349], "027": 784, "0276": 378, "0278": 606, "0285": 761, "0288": 789, "0297": [590, 591], "02it": 808, "03": [767, 775, 784, 785, 808], "030": 13, "0308": 764, "031": 770, "0310": 789, "0315": [343, 349], "0325": [769, 786], "033": 770, "0331": 761, "03348": 392, "0336": 789, "0340": 761, "0341": 404, "0361": 761, "0363": 789, "0371": 790, "0375": 356, "0376": 377, "0378": 795, "03819": 802, "0383": 609, "0386": 631, "038622249776255946": 631, "0388": 786, "039": 13, "0390": [343, 349], "0395": 789, "03d": 761, "03f": [784, 785, 808], "03it": 785, "04": [13, 336, 337, 338, 758, 784, 785, 808], "0400": 603, "0401": 342, "0403": 786, "0406": [355, 604], "04133991340612775": 631, "0425": 355, "0426": 786, "0427": 764, "0428": 378, "0429": [761, 789], "043": 134, "043591": 773, "044": 770, "0442": 765, "0448": 404, "04486384200747007": 631, "045": 13, "0451": [761, 786], "0453": 786, "0459": 769, "0461": 378, "0467": 789, "0470": 378, "0481": 786, "0483": 377, "0483e": 284, "04878384701995819": 631, "0489": 761, "0493": 764, "0494": 786, "049629338970987646": 631, "04it": [761, 785], "05": [404, 609, 613, 643, 686, 727, 784, 785, 792, 795, 808], "0503": 786, "0505": 790, "0509": 789, "0510": 609, "05152": 370, "0519": 786, "052": 770, "0523": 355, "0527": 340, "05287": 132, "05354099924658973": 631, "0539": [590, 591], "054": [13, 155], "054016385555202384": 631, "0541": [352, 604], "0543": [343, 349], "0544": [126, 127], "0553": 765, "0555": 789, "0556": [404, 760], "0562": 789, "0568": 786, "0572": 786, "058": [13, 765], "0580": [355, 374, 375, 376, 377, 378, 379, 380, 381, 382], "0588": 760, "0591": 117, "059172654879085296": 631, "05929675122934798": 785, "0593": 786, "0596": 350, "05d": [789, 790, 792, 795], "05it": 785, "06": [24, 765, 767, 784, 785, 808, 810], "060": 13, "0600": 603, "0606": 789, "0608": 381, "0630": 368, "0634": 379, "0637": 786, "0638": 609, "0643": 761, "065": 770, "0654": 760, "0662": 789, "0668": 786, "0672": 790, "0699": [374, 375, 376, 377, 378, 379, 380, 381, 382], "06it": 785, "07": [578, 614, 767, 784, 785, 788, 808], "0705": 786, "0711e": 284, "072": 770, "0724": [126, 127], "0725": 789, "0729": [382, 786], "073": 157, "0731": 760, "0735": 786, "074": 13, "07502571020414439": 631, "0752": 764, "0758": 352, "0762": [343, 349], "0764": 786, "0767": 760, "0769": 760, "077": 13, "07762005436424041": 785, "07816474278491703": 631, "0783": [343, 349], "0785": 769, "0793": 789, "0799": 786, "07it": [784, 785], "08": [4, 9, 784, 785, 808], "0800": 603, "0804": [590, 591], "0811": 761, "0812": 604, "0831": 786, "0832": 355, "0833": [8, 786], "0835": 340, "0836": 760, "0837": 769, "0845": [378, 764], "0849": 764, "0853": 786, "08543289788089736": 631, "0857": [355, 590, 591], "086": 13, "0868": 631, "08680051341900807": 631, "0869": 789, "08691420300562658": 631, "08692": 158, "0873": 764, "0876": 337, "0880": [590, 591], "0881": 792, "0882": [786, 792], "0883": [786, 792], "0884": 786, "0885": 786, "0886": 792, "0887": 792, "0888": [362, 792], "0890": 792, "0891": 760, "0896": 792, "0897": 792, "0898": 792, "08983": 802, "0899": 792, "08it": [784, 785, 786], "09": [765, 785], "0900": 792, "0901": [761, 792], "0902": 792, "0903": 792, "0904": 792, "0909": 760, "091": 770, "0911194482288028": 631, "0913": 379, "0915": 367, "0916": 769, "0917": 760, "0920": 379, "0928555079874982": 631, "0931": 769, "0935": 350, "0937": 367, "0949": 761, "0953": [760, 789], "0k": [171, 172], "0x7fec820937b8": [636, 681, 721], "0\ubd80\ud130": [723, 730, 731], "0\uc5d0": 723, "0\uc73c\ub85c": 742, "0\uc740": [722, 723], "0\uc744": 723, "0\uc774": [747, 750], "0\uc774\uace0": 723, "0\uc778": 750, "1": [1, 4, 5, 6, 8, 9, 11, 13, 19, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 135, 136, 137, 139, 140, 143, 144, 154, 157, 158, 159, 160, 161, 162, 164, 166, 167, 170, 174, 175, 177, 179, 180, 182, 185, 187, 188, 195, 197, 200, 204, 206, 207, 209, 216, 217, 219, 220, 221, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 251, 252, 253, 254, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 296, 299, 325, 326, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 420, 421, 422, 423, 444, 447, 448, 485, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 578, 579, 580, 581, 585, 586, 587, 588, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 630, 631, 632, 633, 635, 636, 637, 638, 640, 648, 649, 651, 652, 654, 655, 656, 657, 658, 659, 660, 662, 663, 664, 666, 667, 668, 669, 671, 672, 674, 676, 677, 678, 680, 681, 683, 684, 691, 692, 694, 695, 697, 698, 699, 700, 701, 702, 704, 706, 707, 708, 709, 711, 712, 714, 716, 717, 718, 720, 721, 724, 725, 733, 736, 737, 739, 740, 741, 742, 743, 744, 745, 747, 748, 750, 751, 752, 753, 754, 755, 758, 759, 760, 761, 762, 765, 768, 769, 770, 771, 772, 773, 776, 778, 779, 780, 783, 784, 785, 786, 789, 790, 791, 797, 800, 802, 807, 808], "10": [4, 5, 6, 8, 9, 13, 19, 25, 128, 132, 133, 139, 142, 143, 145, 151, 155, 157, 159, 162, 164, 167, 176, 178, 182, 183, 185, 200, 204, 206, 209, 210, 234, 277, 280, 281, 282, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 399, 400, 401, 403, 421, 447, 448, 485, 493, 494, 501, 503, 552, 555, 556, 562, 563, 567, 574, 599, 601, 604, 608, 613, 631, 635, 636, 637, 647, 655, 662, 668, 669, 671, 672, 673, 680, 681, 690, 698, 708, 709, 711, 712, 713, 720, 721, 731, 740, 752, 753, 754, 755, 756, 758, 759, 760, 762, 764, 768, 770, 771, 772, 779, 780, 784, 785, 786, 789, 791, 792, 795, 798, 801, 802, 807, 808], "100": [8, 21, 166, 167, 184, 275, 329, 330, 367, 368, 369, 370, 371, 373, 390, 392, 393, 397, 493, 494, 563, 633, 643, 663, 669, 672, 673, 678, 686, 709, 712, 713, 718, 727, 742, 747, 753, 755, 756, 759, 761, 762, 768, 770, 771, 784, 786, 792, 795, 798, 801, 802, 808], "1000": [4, 8, 13, 138, 146, 150, 169, 195, 199, 207, 329, 357, 556, 603, 616, 657, 668, 669, 683, 708, 709, 724, 742, 752, 753, 759, 760, 761, 762, 768, 770, 771, 785, 789, 791, 792, 802], "10000": [13, 130, 131, 141, 143, 165, 167, 174, 185, 772], "1000000": 229, "1002": 404, "1008": 342, "101": [175, 371, 373, 641, 725, 795, 802], "1014": [126, 127], "10150": 157, "102": [371, 373, 759, 785, 791, 795, 802], "1022": 503, "1024": [164, 177, 200, 203, 204, 205, 206, 210, 656, 659, 661, 671, 698, 699, 701, 703, 711, 740, 741, 744, 746, 754, 779, 780, 784, 785, 786, 808], "103": [759, 770, 795, 802], "1031": 769, "1037": 764, "1037097085190507": 631, "1038": 769, "1039": 606, "104": [795, 802], "1041": 176, "1043998": 723, "1045": [789, 790], "1046": 361, "1047": 761, "1048": 760, "105": [770, 795, 802], "1052": 631, "10522806046048205": 631, "10556": [24, 150, 759, 760, 762, 768, 770, 771, 789, 791, 792], "1058": [786, 790], "106": [773, 785, 795, 802], "1060": 166, "1066": 117, "107": [772, 795, 802], "1071": 764, "1077": 764, "108": [13, 167, 775, 795, 802], "1083": 604, "1086": 631, "10864079337442234": 631, "1089": [503, 786], "109": [795, 802], "10903": 710, "1092": 145, "1093": 764, "1095": 765, "1099": 362, "10it": 785, "11": [8, 13, 131, 157, 182, 367, 567, 599, 600, 608, 663, 698, 740, 758, 759, 760, 761, 762, 764, 765, 785, 791, 795, 802, 808], "110": [770, 785, 795, 802], "1105": 786, "1107": 354, "111": [795, 802], "1113": 24, "11158102039672668": 631, "1117": 769, "112": [795, 802], "1123": 350, "1126": 378, "1127": 761, "113": [784, 795, 802], "1134649": 723, "1135": 334, "1138": 336, "1139": 404, "114": [173, 663, 759, 785, 795, 802], "1140\uc5b5\uac1c\uc758": 747, "11446843700743892": 631, "1145": [132, 159, 367, 631], "1146": 789, "114615892": 24, "1149": [784, 785, 786], "115": [770, 795, 802], "1154": 764, "1154897249106891": 631, "1155": [350, 631], "1156": 350, "1157": 350, "116": [795, 802], "1166": 362, "117": [141, 143, 795, 802], "11701": 182, "1178": [24, 164], "118": [784, 785, 795, 802], "1182": 786, "1183": 786, "119": [134, 795, 802], "1191": 503, "119187": 786, "1194614": 723, "11d": 172, "11it": 785, "11\ubc88": 740, "11\ubc88\uc5d0\uc11c": 740, "11\uc6d4": 732, "12": [8, 13, 78, 80, 171, 172, 344, 347, 354, 367, 369, 370, 567, 599, 608, 663, 747, 758, 764, 765, 772, 784, 785, 791, 795, 802, 808], "120": [146, 183, 770, 784, 795, 802], "1200": 8, "1203": 639, "1203354": 723, "1209": 334, "121": [168, 764, 784, 792, 795, 802], "1210": 769, "1214": 786, "122": [768, 784, 785, 795, 802], "123": [13, 182, 795, 802], "1230": 503, "12345": [807, 808], "12346": 401, "1237": 761, "123718280": [4, 229], "1238": 764, "124": [24, 795, 802], "1245": 795, "12497": 786, "125": [770, 795, 802], "1250": 8, "1257": 789, "126": [13, 149, 795, 802], "1261": 359, "1261310": 229, "1262": 379, "1267": 786, "127": [401, 785, 795, 802, 807, 808], "1271": 786, "128": [5, 161, 325, 329, 365, 370, 392, 784, 785, 786, 795, 802, 808], "1282": 503, "1283": 334, "12860": 639, "12861": 639, "1289": 503, "129": [789, 792, 795, 802], "12922": 784, "12it": 785, "12k": 185, "13": [8, 133, 161, 184, 556, 599, 758, 761, 764, 767, 768, 772, 784, 785, 791, 795, 798, 800, 802], "130": [171, 172, 770, 795, 802], "1301": 786, "1303": 764, "1306": 786, "130622": 24, "1309": 361, "131": [785, 795, 802], "1311": 367, "132": [157, 795, 802], "1323": [590, 591], "1324": 786, "1328": 117, "133": [13, 795, 802], "1330": 368, "13339": 508, "1334": 764, "134": [772, 795, 802], "1342": 355, "1349": 377, "135": [13, 770, 795, 802], "1353": 604, "1358": 764, "136": [24, 142, 785, 795, 802], "1361": [377, 606], "1364": 631, "1364240150959487": 631, "137": [795, 802], "1371": 352, "1373e": [578, 614], "13752": 24, "1376": 355, "1377": 354, "13774964202156292": 631, "1378": 789, "138": [795, 802], "1388": 355, "139": [795, 802], "1393": 631, "1393107840629273": 631, "1395": 352, "13it": 785, "14": [13, 154, 170, 600, 633, 678, 718, 764, 785, 791, 795, 802, 808], "140": [130, 150, 759, 760, 762, 768, 770, 771, 785, 789, 791, 792, 795, 802], "1401": 764, "1408": 352, "141": [795, 802], "141442": 181, "142": [795, 802], "1428": 761, "1429": 760, "143": [768, 795, 802], "1431": 24, "1433": [150, 759, 760, 762, 768, 770, 771, 789, 791, 792], "144": [770, 795, 802], "1440": 361, "144507": 786, "145": [24, 770, 785, 795, 802], "14541": 153, "1458": [590, 591], "146": [795, 802], "14627522432017592": 631, "147": [159, 759, 795, 802], "1479": [343, 349], "148": [13, 795, 802], "148100": 165, "149": [795, 802], "14912": 784, "1495": 789, "1496": 367, "15": [8, 13, 24, 147, 160, 170, 200, 204, 206, 209, 210, 344, 347, 447, 596, 599, 609, 644, 655, 662, 663, 747, 759, 764, 765, 768, 770, 771, 773, 784, 785, 791, 795, 802, 808], "150": [770, 785, 795, 801, 802], "1500": 609, "1505": 503, "150635": 784, "1508": 764, "151": [795, 802], "1511": 789, "1516": 355, "1518": 790, "152": [786, 795, 802], "1520": [132, 590, 591], "15218126307872892": 631, "152785": 786, "153": [173, 795, 802], "153002": 786, "1533": [503, 786], "1536": 764, "154": [764, 772, 785, 795, 802], "155": [770, 795, 802], "1557019": 132, "1557108": 132, "1559": 354, "156": [24, 163, 770, 773, 795, 802], "1560": 553, "156279": 786, "1563": 786, "15694736": 723, "157": [155, 795, 802], "1571": 790, "158": [13, 759, 795, 802], "159": [785, 795, 802], "1594": [343, 349], "15it": [784, 785], "15k": [171, 172], "15\u884c\u547d\u540d\u4e3a": 687, "15\uc5d0\uc11c": 728, "16": [161, 164, 166, 174, 177, 185, 284, 382, 390, 391, 392, 393, 394, 395, 404, 495, 610, 640, 644, 663, 683, 724, 747, 758, 759, 761, 762, 764, 765, 768, 769, 770, 771, 772, 779, 785, 789, 790, 791, 795, 798, 802], "160": [770, 795, 802], "1603": 802, "1607": 355, "1608": 786, "161": [13, 768, 795, 802], "162": [795, 802], "163": [134, 147, 795, 802], "1639": [503, 764], "164": [760, 785, 795, 802], "1646": 354, "165": [764, 770, 795, 802], "1650": 786, "1657": 789, "1658": 503, "166": [795, 802], "1664": 176, "1667": 8, "167": [13, 795, 802], "16738734": 723, "1678": 379, "168": [770, 779, 785, 795, 802], "1681403185591509": 631, "16846068931179736": 631, "169": [785, 795, 802], "1690": 338, "169343": [784, 785], "1695": 761, "1696": 368, "16974127573016262": 631, "16gb": [13, 663, 747], "16it": 785, "16\uc904": 728, "17": [13, 24, 284, 600, 764, 785, 791, 795, 802], "170": [13, 768, 770, 784, 785, 795, 802], "1706": 786, "1707": 786, "171": [767, 785, 788, 795, 802], "1710": 710, "172": [639, 640, 683, 724, 795, 802], "1721": 764, "1724": 790, "173": [13, 786, 795, 802], "1735": [367, 553], "174": [785, 795, 802], "1743": 786, "1744": 786, "1745": 503, "175": [640, 683, 724, 770, 795, 802], "1752": [590, 591], "17535": 153, "17583413999295983": 631, "176": [795, 802], "1760": 786, "177": [767, 770, 772, 775, 795, 802], "1773": 764, "178": [795, 802], "1780": 381, "1785": 368, "1789": 378, "179": [13, 785, 795, 802], "17it": 785, "18": [8, 13, 147, 181, 447, 567, 599, 644, 764, 772, 785, 786, 791, 795, 802], "180": [770, 786, 795, 802], "1804": [352, 786], "1806": 503, "1807": 802, "1809": 335, "181": [795, 802], "1816": 789, "1818": [503, 556], "182": [13, 786, 795, 802], "1821": 764, "183": [151, 178, 795, 802], "18333": 24, "1835": 355, "18389137408509248": 631, "1839": 631, "184": [404, 785, 786, 795, 802], "1843": 631, "18431292077750894": 631, "1847": 367, "1849": 348, "185": [770, 795, 802], "1850": 350, "186": [795, 802], "18626464175355095": 631, "187": [639, 770, 795, 802], "1877": 404, "188": [24, 161, 167, 177, 795, 802], "189": [784, 785, 795, 802], "18it": [784, 808], "18\uc904\uc744": 728, "19": [135, 149, 172, 599, 639, 640, 683, 724, 764, 784, 785, 791, 795, 802, 808], "190": [143, 770, 784, 795, 802], "1902": 378, "1908": 350, "1909": 765, "191": [795, 802], "19117861103555467": 631, "192": [779, 795, 802], "1925": 346, "192640": 24, "193": [404, 795, 802], "193011360": 639, "1931": [590, 591, 769], "1932390907048961": 631, "1939": 368, "1939743": 723, "194": [770, 785, 795, 802], "1943": 354, "1944": 790, "1947": 764, "195": [770, 795, 802], "1950": 764, "1951": 503, "1952": 338, "19536": [175, 795], "1954": 606, "1958": 786, "196": [404, 795, 802], "1966": 368, "197": [795, 802], "19717": [24, 169], "19793": 24, "198": [131, 764, 795, 802], "1989": 789, "199": [785, 795, 802], "1996": 379, "19999998807907104": 287, "19it": 785, "1_gcn": [767, 789, 794], "1_gnn": [767, 791, 794], "1_graph_classif": [767, 807, 810], "1_introduct": [767, 768, 775], "1_node_classif": [767, 779, 782], "1d": [47, 50, 52, 53, 60, 87, 120, 129, 204, 206, 209, 221, 228, 229, 275, 276, 330, 337, 344, 349, 358, 361, 423, 486, 573], "1e": [4, 9, 367, 370, 663, 747, 759, 785, 789, 791, 792, 795, 802], "1gb": [657, 742], "1\u5b57\u7b26\u4e32": 676, "1\u8282": 684, "1\u8282\u4e2d": 700, "1\u8282\u4e2d\u5bf9\u5f02\u6784\u56fe\u7684\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": [709, 712], "1\u8282\u4e2d\u5bf9\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": 709, "1\u8282\u7684gnn\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a": [709, 712], "1\uc5d0": 723, "1\uc740": 723, "1\uc744": 723, "1\uc7a5": 732, "1\uc808\uc758": 725, "1\ucc28\uc6d0": 730, "2": [4, 5, 6, 8, 9, 11, 13, 19, 21, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 138, 139, 140, 141, 143, 155, 157, 160, 163, 165, 166, 167, 168, 171, 172, 174, 175, 177, 179, 180, 187, 195, 197, 206, 210, 216, 217, 219, 220, 229, 232, 233, 234, 235, 236, 237, 238, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 299, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 394, 395, 396, 397, 398, 399, 400, 403, 404, 420, 421, 422, 423, 444, 447, 485, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 578, 579, 580, 581, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 631, 635, 636, 638, 641, 643, 644, 645, 647, 648, 654, 657, 658, 659, 660, 661, 663, 664, 668, 671, 673, 674, 680, 682, 683, 684, 686, 687, 688, 690, 691, 692, 697, 698, 700, 701, 702, 703, 704, 708, 711, 712, 713, 714, 720, 723, 724, 725, 727, 728, 729, 731, 733, 739, 740, 742, 743, 744, 745, 746, 747, 748, 752, 754, 756, 757, 758, 759, 760, 761, 762, 765, 768, 769, 770, 771, 772, 773, 776, 779, 780, 782, 783, 784, 785, 786, 789, 790, 791, 802, 804, 807, 808, 810], "20": [8, 24, 128, 157, 158, 166, 167, 168, 173, 182, 199, 224, 344, 347, 353, 357, 359, 369, 370, 378, 379, 495, 552, 562, 563, 567, 574, 593, 599, 600, 610, 612, 613, 637, 639, 669, 671, 672, 673, 709, 711, 712, 713, 753, 754, 755, 756, 759, 761, 764, 767, 768, 770, 771, 772, 775, 785, 786, 791, 792, 795, 798, 801, 802], "200": [190, 503, 637, 722, 760, 765, 770, 795, 802], "2000": [4, 8, 124, 238, 616, 761], "2002": [117, 132, 163, 350], "2003": [143, 167, 185, 786], "2005": 157, "2008": 158, "200\uac1c": 722, "201": [795, 802], "2010": 377, "2012": 786, "2014": [173, 786], "2015": [133, 134, 350, 758, 795], "2016": [147, 148, 786], "2017": [759, 761, 770, 786], "2018": [160, 162, 503, 631, 770, 786], "20181320245665535": 631, "2019": 758, "202": [795, 802], "2020": 761, "2020\u5e749\u6708": 691, "2021\ub144": 732, "203": [768, 795, 802], "204": [785, 795, 802], "20466": 153, "2048": 393, "205": [639, 640, 683, 724, 784, 795, 802], "2053": [374, 375, 376, 377, 378, 379, 380, 381, 382], "206": [773, 795, 802], "2062": 404, "2064": 786, "207": [404, 795, 802], "208": [404, 795, 802], "2080": 381, "2085": 346, "2087": 786, "209": [404, 785, 795, 802], "2093": 790, "2095": 350, "20gb": 224, "20it": [784, 785], "20x10": 801, "21": [13, 158, 567, 639, 764, 765, 767, 784, 785, 788, 791, 795, 802], "210": [175, 795, 802], "2101": 346, "2102": [351, 370], "2104": 158, "2106": 355, "2108": 392, "211": [170, 795, 802], "2110": 503, "212": [795, 802], "21209": 24, "2125": 355, "213": [404, 767, 771, 775, 795, 802], "2134": 352, "2136": 378, "21394654203489705": 631, "214": [785, 795, 802], "21474836480": 224, "215": [795, 802], "21531": 784, "2154": [367, 764], "2158": 764, "2159": 341, "216": [157, 182, 759, 795, 802], "2167": 368, "217": [795, 802], "217073": 176, "21729189157485962": 771, "2178": 356, "218": [795, 802], "2180": 789, "2182": 350, "219": [785, 795, 802], "21937428942781778": 631, "2194": 382, "21it": 785, "21st": 795, "22": [13, 24, 764, 784, 785, 795, 802], "220": [404, 795, 802], "2208": 747, "2209": 747, "221": [795, 802], "2210": 508, "22131880861864428": 631, "2215": 786, "22155005": 723, "2216": 368, "222": [795, 802], "2222": 8, "22296293": 639, "223": [795, 802], "2235": 367, "224": [785, 795, 802], "2240": 334, "2245": 24, "225": [404, 795, 802], "226": 795, "22689": 784, "227": 795, "2272": 355, "2277": 145, "2278": 785, "228": [13, 795], "2282": 381, "2284": 404, "2288": 764, "2289": 334, "229": [785, 795], "2291": [377, 378], "22it": [784, 785], "23": [173, 185, 336, 337, 338, 639, 640, 643, 683, 686, 724, 727, 764, 767, 772, 785, 795, 802, 808], "230": [503, 795], "2303": 355, "23033": [24, 162], "2304": 24, "231": 795, "23142237259162102": 631, "232": [159, 173, 795], "2324": 377, "2326": 354, "232965": 24, "233": 795, "2330": 404, "2332486": [784, 785], "23368113896545695": 631, "2337": [631, 786], "2338": 334, "234": [404, 785, 795], "2340": 336, "2342": 346, "2347": 346, "2348": 368, "235": 795, "2351": [374, 375, 376, 377, 378, 379, 380, 381, 382], "236": 795, "2360": 382, "2362": 367, "2363": 379, "23682038840665198": 631, "237": [153, 795], "2370": 335, "23702": 785, "2372": [168, 792], "2373": [503, 786], "238": [134, 795], "2384": 348, "2387": 352, "2389": 789, "239": [404, 785, 795], "23967936635017395": 771, "23981": 785, "24": [162, 168, 373, 567, 593, 764, 767, 784, 786, 791, 792, 794, 795, 802, 808], "240": [24, 162, 404, 795], "2404": 764, "2408": 503, "241": 795, "2417": [375, 764], "242": 795, "2426": [374, 375, 376, 377, 378, 379, 380, 381, 382], "24285506608575758": 631, "243": 795, "2430": 764, "2432": 132, "2437": 790, "2439": 764, "244": [24, 761, 785, 795], "2443": 764, "2449029": [4, 229], "245": [133, 170, 768, 795], "2450": 368, "2451": 351, "2455": 764, "246": 795, "2460": 789, "2466": 764, "2467": 404, "2469": 355, "247": [148, 795], "2472495901894738": 631, "2473": 356, "248": [785, 795], "2481": 341, "2486": 761, "249": 795, "2493": 789, "2496": 176, "2497": 367, "25": [8, 143, 157, 344, 347, 372, 373, 404, 492, 635, 636, 680, 681, 720, 721, 759, 761, 764, 768, 770, 771, 779, 780, 784, 790, 795, 802], "250": [156, 404, 761, 795], "2500": [8, 556, 764], "2502": 362, "250k": 185, "251": [183, 795], "2513": 368, "252": [785, 795], "2524": 355, "253": [784, 795], "2530": 606, "2533": 367, "253458867276219": 631, "254": 795, "2541": 503, "255": [779, 795], "2556": 404, "256": [663, 747, 760, 761, 779, 780, 785, 795], "2562": 764, "257": [13, 795], "2577": 786, "258": 795, "259": 795, "2592": 764, "2593": 764, "2597": 368, "25it": [784, 785], "26": [161, 764, 784, 785, 795, 802, 808], "260": [785, 795], "2600896860986547": 772, "2607": 368, "261": 795, "2611": 368, "262": [155, 795], "2620": 789, "26202526688575745": 771, "2622": 367, "2629": 764, "263": 795, "2638": 367, "264": 795, "2643": 367, "2644": [355, 368], "2649": 367, "26499036865016423": 631, "265": [785, 795], "2650": 631, "2652": 374, "2654": [354, 377, 404], "2658": 368, "2659": 404, "266": 795, "2662": 764, "2663": 368, "2669": 348, "267": [404, 795], "2675": 367, "268": 795, "2684": 368, "2687": 503, "2688": [343, 349], "2689": [545, 565, 764], "269": 795, "2695": [590, 591], "26it": 785, "27": [24, 574, 764, 775, 795, 802], "270": [785, 795], "2700": 790, "2703": 377, "2708": [24, 150, 759, 760, 762, 768, 770, 771, 789, 791, 792], "2709": [374, 375, 376, 377, 378, 379, 380, 381, 382], "271": [404, 795], "2716": 368, "27163": 165, "2719": 359, "272": [165, 795], "2721": [126, 127], "272115": 153, "2730008213674695": 631, "2733": 367, "2736": 764, "2738": [367, 368], "2743": 375, "275": [785, 808], "2757": 355, "2766": [590, 591], "277": 159, "2775": 117, "278": 791, "2780": 368, "2783258": 159, "2783370": 159, "2787": [404, 764], "2789": 404, "2794": 367, "2796588354307046": 631, "2797": 356, "27it": [785, 808], "28": [8, 185, 366, 764, 765, 771, 784, 785, 786, 794, 795, 802, 808], "280": 785, "282119": 773, "2823": [368, 503], "2826": 606, "2828": [372, 492], "283": 759, "28357022069634585": 631, "28367647637469273": 631, "284": [24, 770], "2840575873851776": 771, "285": [768, 785], "2852": 346, "2855": 352, "2863627767733977": 631, "2864": 631, "2868": 786, "287326": 24, "2874": 786, "2876": 368, "2877": 789, "288": [160, 759, 784], "2882": 404, "289": 785, "2894": 786, "28it": 785, "29": [141, 185, 567, 639, 640, 683, 724, 764, 765, 785, 788, 795, 802], "29000": 802, "2902": 764, "2908": 368, "2918": 503, "292": [767, 801, 804], "2927": 404, "293": 785, "29302": 784, "2948": 764, "2956": 764, "296": 761, "2962": 367, "29660083": 723, "297": 785, "29746": 784, "2976": 368, "298": [151, 171, 172, 768, 785], "2994": [356, 378], "2996": 764, "2998": 769, "29it": 808, "2_capsul": [767, 801, 804], "2_dglgraph": [767, 769, 775], "2_link_predict": [767, 780, 782], "2_node_classif": [767, 808, 810], "2_small_graph": [767, 797], "2d": [283, 330, 337, 358, 361, 397, 514], "2gb": [663, 747], "2k": 578, "2motif": 138, "2x3": 30, "2xlarg": 13, "2\uac1c\uc758": 723, "2\ub97c": 734, "2\ubc88\uc9f8": 740, "2\uc7a5": [732, 752, 756], "3": [4, 5, 6, 8, 11, 13, 19, 20, 21, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 42, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 128, 129, 135, 136, 139, 140, 157, 166, 167, 169, 171, 172, 174, 180, 187, 195, 197, 200, 204, 205, 206, 209, 210, 216, 217, 219, 220, 229, 232, 233, 234, 235, 236, 237, 238, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 299, 326, 328, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 420, 421, 422, 444, 447, 448, 485, 492, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 514, 515, 516, 519, 520, 522, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 578, 580, 581, 585, 586, 587, 588, 590, 591, 592, 596, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 612, 614, 615, 616, 622, 623, 624, 625, 626, 628, 631, 635, 638, 641, 643, 645, 646, 647, 648, 649, 654, 657, 660, 663, 668, 671, 673, 674, 680, 681, 684, 686, 688, 689, 690, 691, 692, 697, 698, 704, 708, 711, 713, 714, 720, 721, 723, 725, 727, 729, 730, 731, 733, 739, 740, 747, 748, 752, 754, 756, 758, 760, 762, 764, 768, 769, 770, 771, 772, 773, 776, 784, 785, 789, 790, 791, 802], "30": [24, 162, 173, 344, 347, 366, 399, 400, 404, 552, 562, 563, 567, 574, 663, 747, 759, 764, 768, 770, 771, 772, 784, 792, 795, 802], "300": [139, 140, 155, 182, 184], "3000": [4, 124, 238, 503, 603, 668, 708, 752, 802], "3003": 802, "30050": [640, 683, 724, 779, 780], "301": 785, "3012": 764, "3019": 764, "3020": 374, "3025": [343, 349], "3027939452162367": 631, "3028": 631, "3030": [590, 591], "3039": 367, "304": 160, "305": [157, 785], "3053": 341, "3058719336986542": 771, "3063": 355, "3068": 761, "3074": 786, "3076": 790, "3078": 377, "308": 155, "3080": 356, "3082": 761, "30840": 808, "3087": 786, "3092": 764, "30it": 785, "30k": 802, "31": [117, 118, 160, 162, 639, 640, 646, 683, 689, 724, 730, 765, 785, 795, 802, 808], "310": [155, 785], "3105": 378, "311": [149, 770], "3113": 764, "3117": 786, "3126": 404, "31328748118329997": 631, "3134": [374, 375, 376, 377, 378, 379, 380, 381, 382], "3135": 368, "3138": 764, "314": 155, "3148": 631, "3148264185956532": 631, "315": 785, "316": 772, "3161154827254189": 631, "3163": [362, 789], "3168": [590, 591], "317": 13, "3174": [590, 591], "3175": 764, "3189": 378, "3191": 351, "31it": 785, "32": [24, 159, 166, 197, 279, 330, 357, 392, 404, 632, 646, 655, 662, 677, 689, 717, 730, 758, 765, 776, 785, 795, 802, 807], "320": 785, "3203": 379, "3219496197945605": 631, "3229": 790, "3231": 378, "3235": 382, "3244": 769, "3246e": [578, 614], "325": [178, 785], "326": 784, "327576": 24, "32766613364219666": 771, "3278": 769, "329": 785, "3295": 337, "3297": 769, "32it": 785, "33": [552, 567, 764, 792, 795, 802], "330": 161, "3303": 361, "3304": 364, "3315": 784, "3316": 363, "33234211884156384": 631, "3326": 356, "3327": [24, 146], "3328": 769, "333": [147, 759, 785], "3330": [374, 375, 376, 377, 378, 379, 380, 381, 382], "3333": [8, 299, 517, 518, 543, 602], "33391": 132, "3342": 355, "3346": [590, 591], "3362": 786, "3364": 355, "3365": 769, "337": 785, "3371": 352, "3391": 747, "33929432608774135": 631, "3394": 747, "33it": 785, "34": [24, 148, 162, 163, 773, 785, 795, 802], "3400": 553, "3408": 769, "341": 785, "3419": 761, "342": 770, "34270118": [638, 639], "3433": 769, "3439899477636117": 631, "344": 759, "3447": 355, "34493": 24, "345": [13, 154], "3455": [590, 591], "346": 785, "3462": 354, "34620": 784, "3466": 346, "3468": 404, "3477": 764, "348": [767, 789, 794], "3482": 789, "34846782265758314": 631, "3489": 606, "34920892119407654": 771, "3497": 356, "34it": 785, "35": [142, 143, 167, 759, 768, 770, 771, 795, 802], "350": 139, "3504": [789, 792], "35076354": 723, "351": [157, 785], "3514": 348, "3516": 340, "3523": 764, "3523777809254057": 631, "353": [759, 767, 808, 810], "3541": 356, "355": [770, 810], "3553": 790, "356": [166, 785], "3569": 352, "3571": 764, "359": 13, "35it": 785, "36": [130, 785, 795, 802, 808], "360": 785, "361": 784, "3610": 789, "36101": 145, "3617": 790, "3623": 351, "3637": [374, 375, 376, 377, 378, 379, 380, 381, 382], "3639": 769, "364": 785, "3643": 404, "3648": 132, "365": [768, 785], "3658": 348, "3664": 335, "36649684241348557": 631, "3665": [382, 631], "3672": 117, "36786902637778773": 631, "368": 785, "3685": 341, "369": 784, "3695": 769, "36979565024375916": 771, "3698": 764, "36it": [785, 786], "37": [151, 178, 185, 784, 785, 786, 795, 802], "370": 768, "3700": 350, "370293": 773, "3703": 146, "3717": 356, "372": 785, "373": 13, "3736": 404, "3737": 379, "3758": [337, 764], "376": 785, "3770": 553, "3772": 404, "3781": 355, "379": 13, "3796": 209, "37it": [784, 785], "38": [784, 785, 795, 802, 808], "380": 785, "3803": 351, "3805": [343, 349], "3808": [590, 591], "3809": 355, "3820": 378, "3824": 764, "3825": [343, 349], "3835": 789, "384": [160, 785], "3840": 117, "3846": 795, "3847": 355, "385": 768, "3864": [764, 790], "3865": 790, "3866": 362, "3872": [590, 591], "388": [759, 785], "389": 759, "3891": [374, 375, 376, 377, 378, 379, 380, 381, 382], "38924238085746765": 771, "3893": 355, "3898": 764, "39": [24, 159, 185, 404, 567, 784, 785, 795, 802, 808], "39161865931662243": 631, "393": [765, 785], "3934": [590, 591], "3938": 606, "3943": [343, 349], "39534097273254654": 631, "3967": 791, "3969": 786, "398": [765, 785], "3985": 404, "3987": 764, "399": 765, "3996": 361, "39it": [785, 808], "3_generative_model": [767, 800], "3_message_pass": [767, 770, 775], "3_tree": [767, 795, 797], "3d": [172, 283, 371, 373, 390, 392, 393, 397, 514], "3e": 760, "3f": [759, 760, 762, 768, 770], "3x3": 764, "3\uac00\uc9c0": [718, 720, 744], "3\uac1c\uc758": [734, 743], "3\ub2e8\uacc4\ub85c": 750, "3\uc7a5": [732, 745, 752, 756], "4": [4, 5, 8, 11, 13, 19, 20, 21, 25, 26, 29, 33, 34, 35, 36, 45, 46, 50, 54, 55, 57, 59, 60, 72, 73, 74, 76, 78, 80, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 106, 112, 113, 115, 117, 118, 120, 121, 122, 123, 124, 125, 129, 130, 139, 140, 144, 166, 185, 199, 200, 203, 204, 205, 206, 207, 209, 210, 219, 220, 229, 232, 233, 234, 238, 275, 276, 277, 279, 280, 281, 282, 283, 285, 286, 287, 293, 299, 326, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 392, 394, 395, 396, 397, 398, 399, 400, 402, 404, 420, 421, 448, 485, 492, 500, 501, 502, 505, 507, 508, 509, 512, 514, 519, 520, 522, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 552, 553, 555, 556, 557, 558, 559, 562, 563, 564, 565, 567, 571, 574, 575, 578, 585, 587, 588, 590, 591, 592, 601, 603, 604, 606, 608, 609, 612, 614, 615, 626, 635, 636, 639, 640, 641, 644, 645, 646, 647, 648, 654, 656, 657, 659, 661, 662, 663, 668, 673, 674, 681, 682, 683, 684, 687, 688, 689, 690, 691, 697, 699, 701, 703, 708, 713, 714, 720, 721, 723, 725, 728, 729, 730, 731, 733, 739, 741, 744, 746, 747, 752, 756, 759, 760, 761, 762, 764, 768, 769, 771, 773, 776, 779, 780, 784, 785, 786, 788, 791, 794, 795, 801, 802, 807, 808], "40": [135, 143, 155, 280, 325, 404, 562, 567, 759, 768, 770, 771, 784, 785, 791, 795, 802], "400": [563, 637, 722, 798, 802], "4000": [761, 764], "4000000": 200, "4007": 404, "4009": 786, "400\uac1c\uc758": 722, "402": 785, "4022": 350, "4028": 747, "4042": [378, 764, 791], "40559906615287566": 631, "406": [503, 759, 788], "4061": 786, "4063": 355, "407": 785, "40707309111756307": 631, "4080": 764, "4081642382536248": 631, "40894684195518494": 771, "40943": 181, "4096": 355, "40it": 785, "41": [155, 181, 765, 785, 795, 802, 808], "410": [164, 177, 759], "4102c744bb9d6fd7b40ac67a300e49cd87e28392": [633, 678, 718], "4104": 143, "4107": 764, "4109": 784, "4111": [374, 375, 376, 377, 378, 379, 380, 381, 382], "41127": 135, "4114": 764, "412": [767, 773, 775, 785], "4126": 355, "414": 785, "4149": 764, "415": 148, "41516080644186737": 631, "41521": 784, "41527155506593394": 631, "4167": 8, "417": 785, "419": 13, "4197669213305396": 631, "42": [24, 188, 761, 785, 786, 795, 802], "4204": 791, "4216530595907526": 631, "422": 785, "4220": 404, "4221": 356, "42222014": 723, "4227": 789, "4249": [374, 375, 376, 377, 378, 379, 380, 381, 382], "4256": 791, "4258": 764, "4268": 631, "4268254673041745": 631, "427": 785, "4273": 350, "4275199770927429": 771, "4279": 355, "4282": 769, "4293": 761, "42988138237505735": 631, "4299": 631, "43": [643, 686, 727, 784, 785, 795, 802], "4308": 764, "431": [173, 182], "4311": 791, "4318": [590, 591], "432": [13, 785], "4323": 361, "4325": [126, 127], "433": 784, "4331": 337, "4335": 337, "4338": 381, "4349": [374, 375, 376, 377, 378, 379, 380, 381, 382], "437": 785, "4389": 791, "43it": 808, "44": [167, 764, 765, 785, 795, 802], "441": 768, "442": 785, "4429": 764, "4435": 791, "4436": 764, "444": 770, "44412796119211184": 631, "445": [13, 795], "4451": [590, 591], "4453306794166565": 771, "4457": 761, "4458": 355, "446": 770, "4465": 352, "447": 785, "4470617033458436": 631, "448": 768, "4482": 356, "4497": 379, "44it": 785, "45": [159, 404, 759, 768, 770, 771, 773, 784, 785, 795, 802], "450": 759, "4500966": 802, "4508": 606, "4511": 381, "4514": 791, "452": 785, "4521": 791, "4523": 791, "4523600060547709": 631, "4525": 791, "4528": 791, "4538": 769, "4542": [355, 404], "45441619816038514": 631, "4559": 764, "456": [145, 785], "457": 13, "4570": [343, 349, 747], "4572": 761, "4590": 404, "46": [367, 765, 785, 795, 802, 808], "460": 785, "4609": 747, "4620": 404, "4629": [126, 127], "4630": [404, 791], "4631": 356, "46358492970466614": 771, "464": 155, "4647410679872376": 631, "465": [770, 785], "4652": 355, "4653": 379, "4654086994009452": 631, "4655": 789, "4664": 117, "4673": 356, "4682": 352, "4684": 761, "4692371689047904": 631, "4698": 337, "46it": 808, "47": [367, 503, 567, 767, 784, 785, 795, 802, 808], "470": [768, 785], "471": 784, "472": 759, "4721": 761, "47224962583565544": 631, "4730": 791, "4731": 606, "47382": [164, 177], "474": 157, "475": 785, "4755": [374, 375, 376, 377, 378, 379, 380, 381, 382], "4756": 631, "47562693094002173": 631, "4760": 377, "4762": 375, "4770": [351, 791], "4770019763881086": 631, "4776": 791, "478": [13, 765, 770], "4797": 340, "4799": 795, "47it": 808, "48": [367, 784, 785, 795, 802], "480": 785, "4801": [343, 349], "4805": 350, "481": [759, 770], "4817": 404, "4821": 352, "4824": 764, "4825": 769, "4826": 791, "483": 768, "483142": 154, "4836": 764, "4837": 374, "4847": 355, "485": 785, "4854": 761, "486": 159, "487": 13, "4870690107345581": 771, "4875": 789, "488": 784, "48810": 130, "4884": 167, "4885": 379, "4888": 4, "489": 759, "4899": 795, "49": [24, 367, 785, 795, 802], "490": [765, 785], "4903": 791, "49037522512771525": 631, "4904": 379, "4909": 631, "490938012147181": 631, "491": [133, 765], "4910e": 284, "492": 173, "4921e": 284, "493": 148, "493888090726854": 631, "49397782380750765": 631, "494": 785, "4940": [379, 631], "4948": 355, "495": [13, 148], "4954": [590, 591], "4964": 761, "496437": 785, "497": 770, "4977": 379, "4983": 761, "499": 785, "4993": 764, "4994": 761, "4998": 769, "4_link_predict": [767, 771, 775], "4_old_win": [767, 804], "4_rgcn": [767, 790, 794], "4d": 172, "4f": [761, 789, 790, 791, 792, 795, 807], "4m": [200, 657, 742], "4part_data": [779, 780], "4th": 663, "4\u6761\u8fb9": 687, "4\uac00\uc9c0": 719, "4\uac1c\uac00": 727, "4\uac1c\uc758": [730, 752], "4\uc7a5": [732, 752, 754, 756], "5": [5, 6, 8, 11, 13, 19, 21, 25, 26, 27, 33, 34, 46, 50, 54, 59, 60, 76, 78, 80, 81, 86, 87, 89, 90, 91, 92, 93, 95, 99, 100, 101, 106, 112, 113, 114, 116, 120, 121, 122, 123, 124, 126, 127, 128, 129, 132, 139, 140, 142, 143, 144, 145, 148, 151, 152, 155, 157, 159, 166, 167, 171, 175, 176, 178, 183, 187, 190, 195, 200, 204, 206, 209, 210, 219, 220, 232, 234, 238, 276, 277, 280, 281, 282, 283, 284, 286, 293, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 394, 403, 421, 447, 448, 485, 492, 496, 497, 501, 502, 503, 506, 507, 508, 509, 510, 514, 519, 520, 539, 546, 552, 553, 555, 557, 558, 559, 560, 564, 571, 573, 574, 575, 585, 588, 590, 591, 592, 593, 596, 599, 600, 601, 603, 604, 606, 608, 609, 612, 613, 626, 628, 631, 633, 635, 636, 638, 641, 642, 643, 644, 645, 646, 648, 649, 654, 657, 659, 661, 662, 663, 666, 674, 678, 681, 683, 684, 685, 686, 687, 688, 689, 691, 692, 697, 698, 701, 703, 706, 708, 714, 718, 721, 724, 725, 726, 727, 728, 729, 730, 733, 739, 740, 744, 746, 747, 750, 752, 758, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 783, 784, 785, 786, 791, 792, 795, 801, 802, 807, 808], "50": [167, 168, 173, 367, 371, 373, 404, 493, 503, 567, 759, 768, 770, 771, 784, 785, 789, 791, 792, 795, 802], "500": [146, 150, 156, 169, 643, 668, 669, 686, 708, 709, 727, 752, 753, 759, 760, 762, 768, 770, 771, 772, 785, 789, 791, 792, 801], "5000": [4, 8, 24, 124, 181, 238, 299, 332, 333, 366, 423, 495, 503, 517, 518, 539, 543, 556, 602, 610, 668, 708, 752, 764], "50000": [13, 154], "500000": 200, "500k": 200, "5010": 761, "5011": 352, "5030": 355, "5034": 747, "5035": 791, "5039": 747, "504": 770, "5041": [343, 349], "5042": 359, "505": [767, 770, 775], "5053": 335, "5054": 375, "5065": [590, 591], "5069447755813599": 771, "509": 792, "5090": 764, "50944": 784, "5097": 404, "50it": 785, "51": [183, 367, 784, 785, 795, 802], "5108": 786, "5111": 764, "5116": 789, "5117": 606, "5118": 764, "512": [390, 393, 795], "5120": 785, "5142": 404, "515": 183, "5159": 352, "5169": 355, "5171": [590, 591], "5182": [590, 591], "5191278830882644": 631, "5192": 340, "5196": 769, "5197": [374, 375, 376, 377, 378, 379, 380, 381, 382, 590, 591, 631], "5197462471155317": 631, "52": [367, 761, 765, 785, 795, 802, 808], "52000000": 229, "5201": 176, "5215": 364, "5217": 366, "5221": [379, 404], "5227": 631, "5227112950269823": 631, "5236": 352, "5237": 379, "524": [13, 759, 784], "5243": 359, "5251800239734318": 631, "5259": 340, "5266": 352, "5268": 795, "5278": [374, 375, 376, 377, 378, 379, 380, 381, 382], "5286": 348, "5287": 356, "529": [209, 792], "529195480661293": 631, "5297": [590, 591], "5299": 761, "53": [13, 367, 765, 785, 795, 802], "5303": [590, 591, 764], "5306": 379, "5312": 404, "5322": 382, "5327": 340, "5333": 8, "5333412885665894": 771, "5341": 761, "53461": 786, "5347": [343, 349], "5348": 631, "534822233529295": 631, "5352": 359, "5357": 761, "5365": 631, "5365210052235699": 631, "5371": 764, "5398": 362, "54": [367, 772, 785, 795, 802, 808], "5400687466285844": 631, "5401": 631, "5406": 564, "5409": 761, "5413": 795, "5418": [590, 591], "542": 13, "5420": 381, "5421": 350, "543": 770, "544": 175, "5440": 769, "5445": 374, "545": 767, "5454": [355, 606], "5454703921677284": 631, "5455": 631, "5468": 764, "5477868606453535": 631, "549": 768, "5490": 364, "5495035052928215": 631, "55": [143, 173, 367, 759, 764, 768, 770, 771, 785, 795, 802], "550": 770, "5502": 786, "5507": 764, "5511": 378, "5512": 350, "5513": 364, "5514": 761, "5520": 404, "5527": 761, "5529": 377, "5538": 378, "5540": 356, "5541": [126, 127], "5543": 761, "5551": 355, "5558": 764, "5561": 761, "5563827995742111": 631, "5564": 631, "558": 759, "55it": 785, "56": [367, 784, 785, 786, 795, 802], "561": 791, "5612": 606, "5614": [117, 764], "5614197853127827": 631, "5615": 789, "562": [759, 791], "5628": 761, "5636766334440753": 784, "5643": 355, "5658": [374, 375, 376, 377, 378, 379, 380, 381, 382], "566": [503, 759], "5668682": 131, "5671": 404, "56789": 785, "568": [770, 795], "5684": 791, "5692": [590, 591], "56it": 784, "57": [367, 567, 762, 784, 785, 795, 802, 808], "5711": 355, "5721": 352, "5725": [374, 375, 376, 377, 378, 379, 380, 381, 382], "5725330322207948": 631, "573": [13, 759], "574418": 24, "5746912787380253": 631, "5749": 631, "5749339182767451": 631, "5771": 786, "578": 768, "58": [13, 784, 795, 802], "580": 770, "5806": 786, "5812": 769, "5822": 377, "5840": 382, "5845": 404, "5847": 374, "5849": 346, "585": 768, "5854": 747, "5862": 764, "5873": 362, "5877851843833923": 771, "5878": 355, "588": 13, "5887": 761, "58it": 785, "59": [24, 151, 178, 404, 784, 785, 795, 802], "5901": [590, 591], "59071": 154, "5908": 747, "5913335505943637": 631, "592": 142, "5923": 606, "5937484188166621": 631, "594": [767, 784, 788], "5942": 375, "5945": [343, 349], "595": 760, "5960": 377, "5962": 747, "5967": 747, "5968": 786, "59it": 784, "5_dgmg": [767, 798, 800], "5_graph_classif": [767, 772, 775], "5a0c40b": 798, "5e": [663, 747, 759], "5f": 762, "5x4": 769, "5\uac1c\uc758": 744, "5\uc7a5": [732, 739], "6": [3, 6, 8, 10, 19, 25, 46, 50, 54, 59, 60, 76, 78, 80, 81, 86, 87, 89, 106, 116, 117, 118, 120, 128, 129, 139, 143, 144, 146, 147, 152, 159, 166, 179, 199, 200, 204, 205, 206, 207, 210, 212, 213, 214, 215, 232, 276, 283, 284, 299, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 497, 501, 503, 509, 514, 562, 578, 580, 585, 588, 600, 608, 614, 628, 641, 644, 648, 653, 666, 668, 669, 671, 684, 687, 691, 696, 697, 708, 709, 711, 722, 725, 728, 738, 739, 752, 753, 754, 758, 760, 762, 764, 769, 773, 775, 784, 785, 791, 795, 801, 802, 808], "60": [169, 179, 404, 562, 567, 759, 768, 770, 771, 795, 802], "600": [24, 798], "6000": 207, "6000000238418579": 420, "6005": 24, "6008": 355, "602": 173, "6030": 789, "6032": 375, "6044": 364, "6045": 379, "605": 768, "606": 765, "6060": 795, "6066": [343, 349], "6073": 761, "608": 765, "6095": 606, "61": [795, 802], "610": [760, 770], "6106": 356, "6114": [590, 591], "6118": [374, 375, 376, 377, 378, 379, 380, 381, 382], "6118386331195641": 631, "61191552": 639, "61191553": 639, "61191556": 639, "6120": 769, "6122": 764, "614": 759, "6143": 355, "6146": 375, "615": 173, "6150": 764, "6156748364694707": 631, "6163": 335, "6165": 789, "618": 784, "6199": 379, "61gb": 13, "61it": 785, "61m": [657, 742], "62": [795, 802, 808], "620118223673067": 631, "6211": 379, "6213": 404, "6220": 355, "6221": 404, "6222": 374, "62539528": 229, "6254": 606, "6289": 789, "6295": 606, "62it": [785, 786], "63": [24, 646, 689, 784, 785, 786, 795, 802], "630": 159, "6305": 378, "6317": 378, "6319": 404, "632": 770, "6325": 606, "6329": 786, "6335": 786, "6340": [355, 761], "634899790318452": 631, "6352": 764, "6355": 374, "63563": 24, "636": 759, "6365": [374, 375, 376, 377, 378, 379, 380, 381, 382], "6373": 364, "6375": [346, 761], "6375445528248924": 631, "6379": [590, 591], "639": 13, "6393": 355, "6399": 377, "63it": 785, "64": [13, 166, 185, 330, 365, 367, 370, 511, 646, 689, 730, 784, 795, 802], "640": 760, "6408": 350, "641": [759, 767, 768, 786, 788, 791], "6418": 404, "6453746567017163": 631, "6458": 764, "646": 768, "6462162561249654": 631, "6477": 336, "648874463": 639, "6494437360242048": 631, "64d0f3f": 13, "64it": 785, "65": [149, 759, 765, 768, 770, 771, 772, 795, 802, 808], "650": 134, "6502": 764, "6512e": [578, 614], "6515": [590, 591], "652": 13, "6526403892728874": 631, "654": 785, "6542": 769, "6544": 761, "6549": 356, "655": 785, "6557": [372, 492], "6558": 404, "656": [760, 785], "6560131311416626": 771, "6562": 747, "6568": [343, 349, 359], "657": 785, "658": [13, 785], "6580": 631, "6580438064356824": 631, "6585": 564, "659": 785, "6594951663841697": 631, "6595": 631, "6597": 362, "6598715708878852": 631, "65it": [784, 785], "66": [764, 784, 795, 802], "660": 785, "661": 785, "662": 785, "6622": 764, "6624": 764, "6624186423087752": 631, "6628": 761, "663": [759, 785], "664": 785, "6645": 764, "665": 785, "6655": 747, "666": [765, 770, 785], "6667": [543, 602], "667": 785, "668": 785, "669": [768, 785], "6694943496824788": 631, "66it": 785, "67": [784, 795, 802, 808], "670": [768, 785], "6702": [590, 591], "671": [759, 785], "6717": 761, "6718": 764, "672": [768, 785], "672884": 141, "673": 785, "674": 765, "6746269314422184": 631, "675": 785, "6751": 761, "6754": 378, "676": 772, "6765": 789, "677": 159, "6776417760682221": 631, "678": 785, "6781": 764, "679": 785, "6795": 761, "67985810014162": 631, "6799": 631, "67it": [784, 808], "68": [165, 765, 784, 785, 795, 802], "680": 785, "681": 785, "6810484348765842": 631, "6811": 761, "682": 785, "6825": [374, 375, 376, 377, 378, 379, 380, 381, 382], "683": [759, 785], "684": 759, "6845": 378, "685": 785, "6871": 356, "6876": 377, "6876283288002014": 771, "688": [13, 767, 795, 797], "6882": 404, "6893": [590, 591], "68it": 785, "69": [765, 784, 792, 795, 802, 808], "690": [760, 765], "6901745368284345": 631, "6906": 117, "6907": 379, "6908": 341, "6909": 785, "691": 785, "6910": 606, "692": 768, "6920": 789, "6925": [374, 375, 376, 377, 378, 379, 380, 381, 382], "692873149428549": 631, "6931": 355, "6937": 404, "6943": 747, "6954": 404, "6955": 379, "6958": 769, "696": [768, 770], "6962": 374, "698": [13, 770], "6980": 764, "6985674921582508": 631, "698592283371875": 631, "6986": 631, "6994": 791, "69it": [785, 808], "6_line_graph": [767, 791, 794], "6_load_data": [767, 773, 775], "6gb": 639, "6\u4e2a\u8282\u70b9": 687, "6\uc740": 722, "6\uc744": 740, "6\uc7a5": [732, 738, 750, 752], "7": [6, 8, 13, 19, 25, 78, 79, 80, 81, 120, 134, 139, 150, 156, 157, 158, 159, 161, 166, 170, 172, 232, 283, 284, 348, 373, 496, 497, 501, 503, 506, 509, 545, 565, 578, 585, 599, 600, 608, 614, 644, 647, 648, 653, 654, 671, 680, 687, 690, 691, 696, 698, 711, 720, 728, 731, 738, 739, 740, 754, 758, 759, 760, 762, 764, 765, 768, 770, 771, 784, 785, 789, 791, 792, 795, 801, 802], "70": [24, 149, 175, 200, 759, 765, 768, 770, 771, 795, 802, 808], "700": 768, "7000": [372, 492], "701": 182, "702": 768, "7026": 747, "703": [173, 785], "7031": 747, "7032": 786, "704": 770, "7048": [343, 349], "705": 768, "7051530741717352": 631, "7053": 355, "7062476277351379": 771, "7071": 602, "709": 768, "7091": 378, "7095": 404, "7097": 769, "70it": [762, 808], "71": [175, 795, 802], "710": 149, "712": 760, "713": [639, 759], "7138": 378, "7141": 117, "715": 770, "7153": 117, "716": 184, "7163": 747, "7168": 747, "717": [157, 158, 159], "7174910641836348": 631, "718": 770, "7196969604886617": 631, "7197": 631, "71it": 785, "72": [784, 795, 802], "720": [770, 785], "7210": 789, "7211": 24, "722": [133, 768, 770], "724": [760, 770, 785], "726": [182, 759, 760], "7262": 130, "7269": [126, 127], "7274": 764, "728": 768, "7287": 379, "7287e": [578, 614], "729": 145, "7290": 789, "7291568018841328": 631, "7298": 795, "73": [785, 795, 802], "730": [760, 768, 770], "7300": 789, "730570": 773, "7311": [545, 565, 764], "7319": 761, "732": [155, 760, 770], "7320": 789, "7321742043493028": 631, "7328": 786, "7330": 789, "734": 760, "735": [767, 792, 794], "7350": 789, "7352138669985214": 631, "7356": [375, 761], "736": 770, "7365": 404, "7368": 631, "736833152378035": 631, "737": [759, 770], "7389": 786, "7399": 795, "73it": [785, 786], "74": [24, 795, 802], "740": [155, 759, 768, 770], "7400": 789, "7405": 761, "7409": 789, "741": 768, "7410": 375, "742": [768, 770], "7420": 789, "7426": 631, "7426272601929126": 631, "7427": 374, "743": [760, 770], "7430": 789, "744": 770, "745": [134, 760], "7450": 789, "7457985352827006": 631, "7459": 764, "746": [760, 770], "7461": 791, "7465": [404, 764], "747": 785, "7470": 789, "748": [161, 770], "7480": 789, "7490": 789, "74it": 785, "75": [13, 233, 372, 492, 659, 701, 744, 759, 768, 770, 771, 786, 795, 802], "750": [768, 770], "7500": [495, 610, 789], "7507": [590, 591], "751": 759, "7510": 789, "752": [133, 765, 768, 770], "7520": [789, 791], "7525": 348, "753": [760, 770], "7530": 789, "754": [759, 768, 770], "7540": [381, 789], "755": [13, 768], "7556": 335, "756": [156, 768, 770, 794], "7560": [377, 791], "7565": 764, "7567": [374, 375, 376, 377, 378, 379, 380, 381, 382], "7570": 789, "758": 770, "7580": 789, "7583372765843964": 631, "7587": 355, "7588": 631, "7588441197954202": 631, "759": 770, "7590": 789, "75it": 785, "76": [772, 795, 802], "760": [759, 770, 785], "7600": [132, 789], "7610": 789, "7613943085507672": 631, "7614": 631, "762": [759, 768, 770], "763": [768, 770], "764": [768, 770], "7648": 769, "765": [768, 770], "7650": 24, "765544096939567": 631, "7656": 366, "766": [768, 770], "7665": 352, "767": [133, 770], "768": [155, 759, 768, 770, 795], "7681": 791, "769": [768, 770], "7692": 355, "7697": 631, "7697294432580938": 631, "76it": [784, 785], "77": [765, 784, 785, 795, 802, 808], "770": 770, "7701": 791, "77047": 784, "7709": 363, "771": [759, 768, 770], "7710": [126, 127, 382], "7711": 356, "772": [759, 768, 770], "7720": 747, "7721": [355, 769], "773": [768, 770], "7733": 791, "7743": 764, "775": 768, "7752": 404, "776": [759, 760, 768], "776002616178397": 631, "7762": 404, "7766": 404, "7773": 352, "7774": 337, "778": 133, "77800": 762, "7787": 367, "77it": [761, 784], "78": [795, 802, 808], "780": 759, "7805": 791, "781": [759, 762], "78100": 762, "7819": 631, "7819383771535038": 631, "7827": 747, "7838": 791, "784": [13, 759], "7846": 404, "7849": 381, "7859": 761, "786": 759, "7861": 761, "7863421810531344": 631, "7865": 348, "787": [767, 768, 775], "788": [147, 759], "7884": 761, "7891": 631, "7891429392727503": 631, "7892": 764, "7893727601272978": 631, "7894": 404, "79": [404, 765, 784, 795, 802], "790": 759, "7901": [764, 791], "7901988878812207": 631, "7902": 631, "7905": [356, 791], "791": 759, "7911": 791, "7924": 379, "793": 149, "794": [13, 784], "7946": 355, "7948": 789, "7949": [374, 375, 376, 377, 378, 379, 380, 381, 382, 795], "795": 759, "7950": 764, "7954": 790, "797": [767, 791, 794], "7973": 379, "7974": 764, "7976": 791, "798": 155, "7983": 784, "7985": 795, "799": 785, "7992": 791, "7993": 355, "7997": [590, 591], "79it": [784, 785], "7_transform": [767, 802, 804], "7g": [663, 747], "7\u548c11": 698, "7\u884c": 680, "7\ubd80\ud130": 742, "7\uc7a5": 732, "8": [4, 6, 8, 9, 13, 19, 128, 134, 136, 137, 139, 148, 149, 166, 175, 179, 180, 188, 197, 199, 207, 210, 212, 213, 214, 215, 234, 277, 281, 282, 283, 286, 336, 337, 338, 344, 347, 390, 392, 393, 395, 396, 397, 398, 402, 404, 421, 501, 567, 585, 599, 608, 643, 644, 646, 648, 655, 657, 686, 689, 698, 727, 730, 740, 758, 759, 760, 761, 762, 764, 772, 780, 784, 785, 786, 791, 792, 795, 801, 802, 807, 808], "80": [139, 140, 157, 180, 183, 404, 759, 761, 768, 770, 771, 795, 802, 807], "8005": 791, "8009": 790, "802": [131, 503], "8030": [379, 791], "804": 13, "8043": [378, 791], "805": [147, 159], "8058": 355, "8065": 368, "8068": 362, "807": 760, "8070": 790, "8079": 791, "808": 768, "8080": 20, "8086": 404, "8090": 606, "809016994374948": 285, "81": [147, 758, 765, 784, 785, 792, 795, 802, 808], "8102": 789, "8105": 791, "8111": 375, "8113": 374, "811333": 24, "8117650553546695": 631, "812": 503, "813": [759, 768], "8132": 367, "8135": 350, "8136": 790, "8137": [374, 375, 376, 377, 378, 379, 380, 381, 382], "8146": 367, "8149": 631, "8149104951283953": 631, "81722": 786, "818": 157, "8187": 791, "8189658": 723, "819": 184, "8199": 377, "81it": 785, "82": [166, 792, 795, 802], "8206": 790, "8208": 364, "821": 157, "821187": 773, "822": 759, "823": 13, "8235": 356, "8241": 791, "8245": 355, "825": 795, "8250": 761, "8262": 352, "8279": 790, "8287": 367, "829": [13, 785], "82it": 785, "83": [185, 765, 792, 795, 802], "8307": [590, 591], "831": [171, 172, 173], "8315": 795, "8323": 348, "8325": 367, "8326": 351, "8326121496142408": 631, "834": 760, "8354": 790, "8371": 368, "8377": [374, 375, 376, 377, 378, 379, 380, 381, 382, 764], "8387": 378, "83it": 784, "84": [185, 786, 795, 802], "8400": 553, "842": 149, "8432": [764, 790], "8437": 367, "8440": 764, "8451870383322376": 631, "8453123358491914": 631, "8464": 764, "8468": 786, "847": [184, 770], "8470": 379, "8478810655406659": 631, "8482": 764, "8487": 350, "8489": [590, 591], "8494919263589972": 631, "8495": 631, "8498039127602705": 771, "849983324532477": 631, "84it": 784, "85": [759, 768, 770, 771, 795, 802], "8511": 790, "8515": 367, "8521": [374, 375, 376, 377, 378, 379, 380, 381, 382], "8536": 332, "8540": 764, "8544": 175, "8549": 404, "8582": 348, "8586722047523594": 631, "859": 760, "8593": 790, "8597": 404, "85it": 785, "86": [785, 795, 802, 808], "860": 13, "8613": 631, "8613368738351794": 631, "8618": 764, "86281": 784, "8634": [343, 349], "8643238446466464": 631, "8648": 404, "8654": 361, "86573472329756": 631, "8667": 381, "8674": [348, 786], "8679": 351, "8680": 790, "8689": 790, "86it": [785, 786], "87": [151, 178, 784, 795, 802], "8710": 209, "8715767748481147": 631, "8726": 378, "8742": 790, "8753101998792645": 631, "8757520744192612": 631, "8764": 352, "877": [767, 770, 790, 794], "8771": 764, "8777": 790, "8778998699783784": 631, "878": [13, 759], "88": [164, 177, 764, 765, 795, 802], "880": 760, "8801": 790, "88047": 785, "881": 142, "8813": 631, "8813472954005022": 631, "8815": 792, "881680": 131, "8824": 795, "8825": 367, "8839": 792, "8843": 352, "885": 770, "8851294998284638": 631, "8854": 379, "8857": 789, "8862": 792, "8863": 790, "88651": [24, 169], "8869": 378, "8885": 792, "8892": 790, "88it": 785, "89": [142, 156, 164, 404, 784, 786, 795, 802], "8908": 792, "8916": 795, "892": [173, 768], "8920": 404, "8922": 368, "8929": 790, "8931": 792, "8938": [374, 375, 376, 377, 378, 379, 380, 381, 382, 795], "894": 147, "8945": [374, 375, 376, 377, 378, 379, 380, 381, 382], "8948": [374, 375, 376, 377, 378, 379, 380, 381, 382], "8954": [590, 591, 792], "8956": 764, "8964": 631, "8964389655603473": 631, "8965": 764, "897": 13, "8975": 631, "8975240205792763": 631, "8976": 792, "898": [760, 784], "899": [156, 759, 784], "8998": 790, "8999": 792, "89it": 785, "8g": [663, 747], "8\u548c": 698, "8\u548c11": 698, "8\uac1c\uc758": [723, 727], "8\uacfc": 728, "8\ubc88\uc774": 740, "8\uc5d0": 740, "8\uc758": 740, "8\uc7a5": 732, "9": [4, 8, 9, 19, 25, 135, 144, 159, 185, 234, 277, 281, 282, 284, 348, 367, 404, 421, 501, 562, 563, 585, 608, 643, 644, 653, 663, 686, 687, 696, 698, 727, 728, 738, 740, 758, 760, 762, 764, 765, 785, 791, 795, 802, 808], "90": [404, 759, 768, 770, 771, 785, 795, 802], "900": [13, 563], "9000": 802, "901": 785, "9011": 367, "9016": [343, 349], "902": 13, "9021": 792, "9027": 341, "9028": [374, 375, 376, 377, 378, 379, 380, 381, 382], "9030": [374, 375, 376, 377, 378, 379, 380, 381, 382], "9032": 790, "9043": 792, "9065": 792, "9070": 790, "9081": 379, "9087": 792, "9089": 359, "9091": 352, "9095": 769, "90it": 785, "91": [795, 802], "9105": [553, 590, 591], "9108": 404, "9109": 792, "9131": 792, "9137": [374, 375, 376, 377, 378, 379, 380, 381, 382], "9137336384979067": 631, "914": 760, "9140": [590, 591], "9145": 790, "9153": 792, "9156": 404, "9166": 368, "9167": [8, 790], "9168191778828504": 631, "9175": 792, "9194": 795, "9196": 792, "91it": [785, 808], "92": [795, 798, 801, 802], "9209": 790, "921": 759, "9218": 792, "9223": 790, "9226": 336, "9228": [24, 146], "9230": 379, "9231": 795, "9239": 792, "924": 148, "9241": 355, "926": 760, "9261": 792, "9268": 332, "9273": 363, "928": 13, "9280": [590, 591], "9282": 792, "9288e": 284, "9297": 363, "92it": 785, "93": [24, 765, 795, 802], "9302": 336, "9303": 792, "9304": [790, 795], "9307": 747, "9310": 764, "9315": 355, "9325": 792, "9343": 363, "9346": 792, "9351": 764, "9367": 792, "936706701616337": 631, "9368": [126, 127], "937": 760, "9370522452510665": 631, "9388": 792, "939": [767, 798, 800], "9392": 790, "9397636966928355": 631, "93it": 785, "94": [785, 795, 802], "9404": 747, "9405": 764, "9410": 792, "9418796835016118": 631, "9419": 631, "9422093637539785": 631, "9430": 404, "9431": 792, "9433": 790, "944": 157, "9441": 363, "9444": [789, 790], "9452": 792, "946": [760, 765, 768], "94806": 141, "9488": 764, "9490": [382, 790], "94it": 785, "95": [24, 759, 768, 770, 771, 795, 802], "950": 770, "951": 154, "9511783938523962": 631, "9512": 631, "952": 13, "953": 770, "95301": 784, "9539": [164, 177], "954": [159, 184, 759], "9572": 351, "958": 157, "9599": 350, "95it": 785, "96": [765, 795, 802, 808], "9604": 790, "9609": 382, "961": 768, "962": 148, "963": 13, "9634": 332, "9637": 404, "9641": 764, "965": 173, "966": 13, "966043": [638, 639], "9679": 789, "9698": 335, "96it": 808, "97": [795, 798, 802], "970": 13, "9713": 790, "9714": [564, 790], "972": 503, "9722": 790, "973": [13, 792], "97384": 784, "974": 639, "9742": 790, "975": 792, "9755": 764, "977": 13, "9774471538377553": 631, "9784264442230887": 631, "9786": 790, "97932": 786, "9794634290792008": 631, "97it": [785, 808], "98": [24, 159, 640, 683, 724, 765, 784, 785, 795, 802], "9820": [545, 565], "9830": 24, "9840": [379, 764], "9848072295736628": 631, "985": 13, "9857": 790, "9868": 346, "9890": 764, "98it": [784, 785], "99": [795, 802], "9914": 790, "991848": 24, "9927": 364, "9949": 348, "995": 13, "9952376085297715": 631, "996": 759, "9971749359397111": 631, "9972": 379, "9986": 336, "9987": 764, "999": [4, 9, 13], "9990": [374, 375, 376, 377, 378, 379, 380, 381, 382], "99it": [784, 785], "9_gat": [767, 792, 794], "9\uc5d0\uc11c": 728, "A": [4, 6, 11, 13, 19, 20, 21, 25, 26, 27, 30, 33, 34, 38, 40, 44, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 63, 64, 65, 67, 70, 74, 78, 81, 86, 87, 92, 93, 94, 95, 99, 104, 108, 109, 117, 118, 119, 125, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 193, 195, 196, 197, 210, 220, 221, 225, 228, 230, 231, 279, 280, 285, 286, 294, 295, 296, 326, 327, 328, 329, 330, 331, 332, 334, 335, 337, 340, 341, 343, 344, 346, 347, 348, 349, 350, 351, 354, 356, 358, 360, 361, 363, 364, 367, 368, 369, 370, 371, 373, 374, 375, 376, 378, 379, 380, 390, 392, 393, 403, 404, 421, 422, 444, 486, 503, 505, 506, 507, 508, 509, 510, 511, 519, 520, 522, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 578, 580, 581, 582, 583, 584, 585, 586, 587, 589, 590, 591, 595, 598, 603, 604, 609, 613, 631, 633, 636, 637, 639, 640, 642, 644, 645, 647, 651, 659, 670, 671, 672, 729, 731, 759, 760, 761, 762, 764, 765, 767, 768, 770, 771, 773, 775, 776, 779, 784, 786, 789, 791, 792, 795, 802, 803, 805, 806, 808], "AND": 20, "And": [164, 177, 229, 348, 373, 508, 509, 510, 640, 764], "As": [13, 19, 21, 187, 229, 508, 509, 510, 511, 580, 586, 633, 636, 638, 639, 659, 667, 771, 772, 779, 780, 784, 791, 792, 802], "At": [631, 665, 791, 798], "Be": [761, 792], "Being": [4, 9, 671], "But": [88, 758, 762, 798], "By": [4, 30, 31, 40, 52, 53, 69, 120, 123, 124, 129, 190, 191, 197, 200, 210, 221, 228, 229, 237, 238, 276, 295, 296, 299, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 493, 494, 586, 631, 636, 637, 646, 647, 663, 671, 731, 758, 768, 769, 770, 771, 772, 773, 779, 783, 784, 785, 798, 801, 802], "For": [4, 5, 8, 9, 19, 20, 21, 23, 42, 45, 50, 51, 54, 58, 59, 60, 65, 71, 73, 86, 87, 88, 89, 102, 106, 112, 113, 114, 115, 117, 118, 120, 126, 127, 161, 172, 185, 199, 204, 205, 206, 207, 210, 211, 216, 217, 223, 224, 229, 230, 231, 286, 299, 325, 327, 330, 333, 377, 390, 393, 501, 503, 508, 509, 510, 511, 512, 517, 518, 519, 520, 558, 559, 579, 580, 585, 586, 588, 594, 595, 596, 602, 607, 611, 620, 631, 633, 634, 635, 636, 637, 638, 639, 640, 642, 644, 646, 647, 650, 651, 653, 654, 655, 657, 660, 662, 665, 666, 667, 669, 670, 671, 672, 673, 722, 731, 757, 758, 760, 761, 762, 764, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "If": [4, 6, 20, 25, 26, 27, 29, 30, 31, 34, 35, 36, 37, 42, 43, 44, 45, 47, 50, 53, 55, 56, 57, 59, 63, 64, 69, 70, 72, 73, 78, 79, 80, 81, 86, 88, 89, 92, 94, 95, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 128, 129, 130, 131, 135, 136, 137, 141, 142, 144, 152, 161, 164, 165, 170, 171, 172, 174, 175, 197, 200, 203, 204, 206, 207, 209, 210, 212, 213, 214, 215, 219, 220, 221, 225, 227, 228, 229, 230, 231, 234, 236, 237, 238, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 288, 294, 295, 299, 325, 327, 328, 329, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 380, 381, 390, 391, 393, 394, 397, 401, 405, 421, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 491, 496, 498, 499, 500, 501, 502, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 525, 528, 530, 532, 535, 536, 539, 542, 543, 544, 545, 546, 548, 555, 556, 557, 558, 559, 560, 561, 562, 565, 567, 571, 578, 579, 580, 585, 586, 588, 590, 591, 592, 594, 595, 596, 603, 604, 606, 607, 609, 612, 614, 626, 627, 630, 631, 636, 638, 639, 643, 646, 647, 650, 653, 654, 656, 657, 659, 660, 661, 663, 668, 669, 670, 673, 730, 758, 759, 760, 761, 762, 764, 766, 769, 771, 772, 773, 776, 779, 784, 785, 798], "In": [4, 6, 7, 13, 20, 21, 26, 40, 50, 69, 137, 146, 173, 174, 177, 200, 204, 211, 221, 224, 228, 229, 234, 235, 277, 281, 282, 285, 294, 325, 329, 333, 341, 342, 357, 401, 404, 421, 422, 485, 507, 510, 514, 519, 520, 553, 561, 564, 567, 585, 588, 631, 633, 635, 636, 637, 639, 640, 642, 643, 646, 647, 649, 650, 658, 660, 662, 664, 665, 666, 668, 669, 670, 671, 672, 673, 758, 759, 760, 762, 764, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 790, 791, 792, 793, 795, 798, 801, 802, 805, 807, 808], "It": [4, 6, 7, 8, 19, 20, 21, 33, 34, 47, 59, 72, 86, 90, 91, 92, 93, 99, 112, 123, 124, 126, 127, 128, 129, 130, 135, 136, 138, 139, 140, 154, 158, 171, 172, 179, 180, 181, 187, 188, 195, 198, 200, 201, 202, 207, 209, 210, 224, 229, 230, 231, 235, 237, 238, 275, 276, 281, 282, 283, 294, 326, 328, 329, 334, 336, 337, 338, 339, 346, 351, 353, 357, 361, 367, 368, 369, 370, 371, 372, 373, 380, 392, 398, 399, 400, 401, 402, 405, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 492, 493, 494, 503, 504, 510, 511, 512, 514, 515, 585, 613, 629, 631, 633, 636, 637, 638, 639, 640, 642, 647, 650, 651, 659, 662, 663, 757, 760, 771, 772, 773, 779, 784, 785, 786, 789, 790, 792, 793, 795, 798, 799, 801, 802, 805, 807, 808], "Its": [52, 53, 139, 229, 357, 369, 370, 448, 510, 639, 798], "NOT": [5, 20, 21, 220, 356, 789, 790, 791, 792, 795, 798, 801, 802], "No": [330, 666, 792], "ON": 758, "Of": 649, "On": [21, 115, 369, 370, 649, 656, 663], "One": [19, 20, 42, 43, 45, 50, 72, 73, 76, 102, 103, 120, 128, 211, 219, 220, 223, 335, 397, 508, 586, 626, 629, 631, 633, 635, 636, 643, 645, 646, 647, 650, 656, 657, 658, 666, 669, 670, 671, 673, 762, 768, 772, 792, 795], "Or": [206, 507, 758], "Such": [669, 672, 772, 801], "That": [4, 21, 25, 221, 228, 230, 636, 791, 798, 807], "The": [0, 2, 3, 4, 6, 7, 8, 9, 10, 13, 19, 20, 21, 22, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 325, 326, 327, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 525, 528, 529, 530, 532, 535, 536, 538, 539, 541, 542, 543, 544, 545, 546, 548, 549, 550, 553, 557, 558, 559, 560, 561, 565, 571, 572, 573, 575, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 601, 602, 603, 604, 605, 607, 609, 610, 612, 613, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 641, 642, 643, 644, 646, 647, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 716, 731, 741, 742, 746, 758, 759, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 772, 773, 779, 780, 783, 784, 785, 786, 789, 791, 792, 796, 801, 802, 803, 805, 807, 808], "Then": [6, 112, 128, 167, 229, 283, 329, 333, 371, 373, 424, 425, 426, 427, 429, 430, 431, 432, 503, 514, 638, 640, 659, 661, 669, 779, 780, 785, 791, 802, 808], "There": [1, 21, 61, 62, 115, 124, 143, 207, 220, 221, 228, 333, 403, 567, 631, 633, 637, 639, 640, 643, 655, 672, 764, 770, 784, 785, 792, 795, 798, 802], "These": [146, 158, 644, 667, 758, 770, 785, 803, 805], "To": [1, 4, 5, 13, 20, 21, 50, 67, 76, 88, 115, 120, 200, 203, 204, 205, 206, 209, 210, 229, 295, 296, 329, 356, 367, 368, 493, 494, 507, 508, 509, 510, 588, 629, 631, 636, 637, 639, 640, 646, 647, 655, 656, 657, 659, 661, 662, 667, 669, 672, 673, 731, 758, 760, 764, 765, 768, 779, 784, 785, 790, 791, 792, 795, 798, 802, 807, 808], "Will": [190, 203], "With": [76, 199, 203, 330, 352, 506, 508, 509, 510, 626, 654, 670, 671, 758, 768, 789, 791, 798], "_": [0, 20, 347, 350, 351, 358, 364, 367, 368, 369, 377, 392, 397, 594, 620, 638, 659, 660, 672, 673, 698, 701, 702, 712, 713, 740, 744, 745, 755, 756, 760, 761, 769, 771, 773, 785, 789, 790, 791, 792, 798, 801, 802, 807], "_1": [339, 367, 368, 594], "_2": [398, 594], "_4": [698, 740], "_5": [698, 740, 783], "_7": [698, 740], "_8": [698, 740], "__all__": [4, 33, 34, 52, 53, 59, 86, 120, 299], "__call__": [598, 631, 659, 701, 744], "__forward__": 791, "__getitem__": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 629, 631, 633, 634, 675, 678, 679, 715, 718, 719, 773], "__init__": [20, 198, 208, 357, 367, 368, 369, 370, 404, 503, 629, 633, 637, 655, 656, 658, 659, 660, 661, 662, 663, 665, 667, 669, 671, 672, 673, 675, 678, 698, 699, 700, 701, 702, 703, 705, 707, 709, 711, 712, 713, 715, 718, 740, 741, 743, 744, 745, 746, 747, 749, 751, 753, 754, 755, 756, 759, 760, 761, 762, 764, 768, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "__len__": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 629, 633, 675, 678, 698, 715, 718, 740, 773], "__main__": [798, 807, 808], "__name__": [798, 807, 808], "__path__": 20, "__version__": [759, 760, 761, 762, 764], "__\u4e2d\u7684\u505a\u6cd5": 710, "_aggre_typ": [665, 666, 705, 706, 749, 750], "_basenegativesampl": [216, 217], "_collate_fn": [632, 677, 717], "_continu": 802, "_dgl_graph": [634, 679, 719], "_dist_train": 509, "_dst": 125, "_e": [4, 117, 123, 124, 221, 229, 343, 346, 354, 356, 359, 362, 580], "_extract_gz": [630, 676, 716], "_ffi": 21, "_ft": [650, 693, 734], "_g": [633, 678, 718], "_gener": 0, "_get_dgl_url": [633, 678, 718], "_get_next": 798, "_get_previ": 798, "_i": [331, 347, 594, 613, 650, 693, 734, 764, 795, 802], "_id": [164, 177, 209, 234, 277, 281, 282, 421, 485, 501, 585, 586, 638, 639, 769, 786], "_in_dst_feat": [665, 705, 749], "_in_src_feat": [665, 705, 749], "_info": [634, 679, 719], "_ini_api": 21, "_init_api": 21, "_initialize_edge_repr": 798, "_initialize_node_repr": 798, "_j": [347, 650, 693, 734, 764, 792, 802], "_k": [287, 374, 375, 376, 381], "_l": 795, "_label": [633, 678, 718], "_load_graph": [633, 678, 718], "_mean": [789, 792], "_method": [789, 792], "_n": [4, 228, 229, 343, 346, 354, 359, 362], "_name": [633, 678, 718], "_num_task": [633, 678, 718], "_out_feat": [665, 705, 749], "_p": [399, 400], "_preprocess_featur": [633, 678, 718], "_sha1_str": [630, 633, 676, 678, 716, 718], "_src": 125, "_static": [768, 769, 770, 771, 772, 773, 783, 784, 785, 786, 807, 808], "_t": 377, "_tag": [519, 520], "_tag_offset": [510, 519, 520], "_type": [585, 586], "_type_kei": 21, "_u": [4, 123, 124, 356, 672, 698, 712, 740, 755, 789], "_url": [633, 678, 718], "_v": [123, 124, 356, 672, 698, 712, 740, 755, 764], "a1": [25, 764], "a2": [25, 764], "a_": [299, 330, 345, 355, 361, 364, 405, 650, 693, 734, 790, 791, 792, 798], "a_0": [171, 172], "a_1": [760, 798], "a_1x": 760, "a_2x": 760, "a_dst": 125, "a_hat": [759, 760, 764], "a_i": 760, "a_new": 764, "a_r": 760, "a_rx": 760, "a_src": 125, "a_t": 798, "a_tild": 760, "a_tre": 795, "ab": [117, 118, 125, 129, 132, 294, 370, 503, 508, 765, 785], "ab1": 25, "ab2": 25, "abil": 792, "abl": [639, 768, 769, 770, 771, 772, 773, 783, 784, 785], "about": [1, 19, 20, 21, 154, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 333, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 580, 627, 629, 636, 639, 641, 643, 644, 671, 760, 772, 790, 791, 792, 795, 802], "abov": [5, 21, 128, 139, 171, 172, 200, 210, 234, 239, 240, 251, 252, 253, 254, 277, 281, 282, 299, 332, 333, 339, 348, 350, 351, 355, 356, 363, 364, 398, 402, 421, 485, 519, 520, 580, 630, 633, 644, 647, 649, 650, 651, 655, 659, 661, 666, 669, 671, 672, 673, 762, 764, 779, 780, 783, 784, 785, 786, 789, 790, 792, 798, 801], "absolut": [191, 192, 639, 757], "abstract": [152, 597, 629, 641, 655, 764], "abund": 671, "ac": 141, "academ": [147, 148, 155, 639], "academi": 790, "acc": [673, 713, 756, 759, 760, 762, 768, 770, 784, 789, 791, 795, 807, 808], "acc_perm1": 791, "acc_perm2": 791, "acceler": [336, 337, 338, 401, 639, 760, 776, 795, 802], "accept": [20, 21, 199, 297, 337, 594, 645, 661, 729, 769, 779, 784], "access": [4, 21, 88, 120, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 204, 295, 298, 486, 633, 635, 639, 640, 644, 650, 657, 661, 662, 786], "accompani": [285, 655], "accomplish": 801, "accord": [8, 38, 51, 77, 90, 91, 136, 137, 138, 199, 204, 206, 210, 216, 217, 221, 228, 229, 232, 283, 330, 339, 390, 397, 444, 447, 501, 503, 510, 512, 514, 590, 591, 626, 639, 659, 665, 666, 750, 761, 792, 802], "accordingli": [94, 95, 123, 237, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 501, 631, 638], "account": 779, "accumul": [522, 802], "accur": 768, "accuraci": [20, 673, 756, 759, 760, 762, 765, 768, 770, 772, 779, 784, 785, 790, 791, 792, 801, 802, 808], "accuracy_scor": [779, 784, 785, 808], "achiev": [20, 21, 40, 329, 331, 341, 343, 346, 347, 349, 350, 351, 354, 356, 363, 651, 670, 672, 673, 761, 776, 791, 801], "acl": 795, "acm": 132, "acquaint": 757, "across": [21, 72, 112, 126, 127, 128, 207, 357, 401, 402, 586, 635, 636, 640, 647, 666, 731, 776, 798, 807], "act": [224, 786, 802], "act_loss": 802, "act_loss_weight": 802, "action": [162, 369, 370], "action_step": 798, "activ": [147, 148, 335, 336, 340, 341, 342, 347, 349, 350, 351, 352, 356, 359, 361, 362, 363, 364, 392, 393, 578, 585, 614, 663, 665, 666, 671, 705, 706, 747, 749, 750, 754, 759, 760, 789, 790, 792, 798, 801, 802], "actor": [132, 162], "actual": [4, 5, 21, 200, 211, 297, 504, 508, 509, 510, 666], "ad": [4, 9, 26, 27, 113, 114, 115, 139, 140, 146, 177, 179, 180, 293, 337, 361, 363, 403, 404, 596, 613, 631, 639, 646, 759, 769, 796, 798, 802, 805], "adagrad": [4, 9, 636, 721, 795], "adam": [4, 9, 367, 368, 369, 370, 635, 636, 656, 659, 661, 663, 669, 671, 672, 673, 680, 681, 698, 699, 701, 703, 709, 711, 712, 713, 720, 721, 740, 741, 744, 746, 747, 753, 754, 755, 756, 759, 760, 761, 762, 768, 770, 771, 772, 779, 780, 784, 785, 789, 790, 791, 792, 802, 807, 808], "adapt": [12, 161, 186, 351, 364, 368, 369, 658, 784, 801], "adavantag": 792, "add": [8, 20, 21, 26, 27, 113, 114, 115, 116, 123, 130, 131, 133, 134, 137, 139, 140, 141, 146, 147, 148, 149, 150, 153, 154, 161, 165, 169, 179, 180, 181, 182, 188, 237, 241, 242, 255, 256, 265, 266, 284, 331, 335, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 390, 393, 434, 435, 445, 446, 449, 450, 451, 452, 453, 454, 475, 476, 567, 578, 593, 594, 595, 596, 606, 614, 626, 631, 633, 636, 650, 651, 693, 734, 762, 764, 769, 773, 779, 784, 785, 786, 789, 790, 792, 795, 802, 808], "add_edg": [27, 94, 95, 114, 123, 237, 293, 404, 498, 499, 789, 798], "add_edge_ag": 798, "add_edge_log_p": 798, "add_edge_or_not": 798, "add_edges_from": 798, "add_nod": [26, 94, 95, 113, 293, 404, 498, 499, 798], "add_node_ag": 798, "add_node_and_upd": 798, "add_node_log_p": 798, "add_nodes_from": [123, 237], "add_reverse_edg": [769, 784, 785, 786, 808], "add_self_loop": [331, 336, 338, 343, 346, 347, 348, 349, 350, 351, 354, 356, 359, 362, 363, 365, 366, 500, 747], "addbackward0": [335, 337, 340, 341, 348, 351, 354, 355, 356, 359, 361, 362], "addedg": [12, 798], "addit": [4, 7, 20, 119, 137, 144, 172, 219, 220, 229, 234, 235, 277, 281, 282, 299, 350, 351, 356, 357, 367, 368, 369, 370, 390, 391, 393, 421, 422, 485, 501, 552, 566, 631, 633, 636, 639, 640, 647, 651, 655, 666, 667, 670, 671, 758, 764, 779, 784, 789, 792, 793, 798, 805], "addition": [210, 284, 505, 507, 587, 802], "addmetapath": 12, "addmmbackward": [342, 352, 363, 364], "addmmbackward0": 338, "addnod": 798, "address": [200, 401, 640, 647, 657, 661, 663, 779, 780, 783, 798, 802], "addrevers": [12, 368, 369, 598, 631], "addselfloop": [12, 663], "adj": [32, 117, 340, 341, 342, 771], "adj_extern": [519, 520], "adj_neg": 771, "adjac": [12, 29, 30, 31, 117, 118, 124, 129, 238, 275, 276, 279, 280, 286, 332, 340, 341, 342, 351, 363, 364, 403, 510, 519, 520, 594, 602, 603, 604, 609, 613, 638, 639, 670, 722, 759, 760, 761, 762, 764, 789, 791, 792], "adjust": [673, 801, 802], "adopt": [635, 673, 768, 802], "advanc": [200, 505, 507, 635, 637, 639, 650, 654, 757, 776, 791, 795, 802], "advantag": [639, 656, 657, 671, 760, 792], "affect": 795, "affili": [639, 773], "affiliated_with": [639, 723], "affin": [333, 776, 784, 785, 786, 802], "affinit": 776, "after": [4, 72, 90, 91, 92, 93, 94, 95, 99, 112, 163, 229, 281, 282, 295, 296, 331, 343, 344, 346, 347, 349, 350, 351, 354, 356, 363, 365, 394, 403, 486, 498, 499, 503, 507, 519, 520, 586, 603, 604, 609, 612, 631, 633, 638, 639, 640, 650, 672, 758, 760, 771, 779, 780, 785, 791, 795, 798, 802, 807], "afterward": [4, 367, 368, 369, 370, 393, 770], "ag": [643, 686, 727, 773], "again": [20, 585, 586, 639, 656, 659, 661, 779, 791, 792, 808], "against": [20, 640, 659, 672, 673, 765, 784], "agg": [667, 707, 751], "agg_fn": [667, 707, 751], "aggreg": [5, 8, 72, 90, 91, 92, 93, 99, 110, 112, 116, 251, 252, 253, 254, 327, 331, 333, 336, 337, 338, 339, 341, 342, 343, 346, 347, 349, 350, 351, 352, 354, 356, 358, 359, 360, 362, 363, 367, 368, 402, 424, 425, 426, 427, 429, 430, 431, 432, 446, 448, 450, 451, 452, 453, 456, 457, 458, 459, 464, 465, 466, 467, 470, 471, 472, 473, 496, 497, 588, 596, 616, 649, 650, 652, 658, 660, 665, 666, 667, 671, 673, 705, 706, 707, 711, 713, 737, 740, 749, 750, 751, 754, 756, 759, 761, 768, 770, 772, 779, 783, 784, 786, 789, 790, 791, 792], "aggregate_radiu": 791, "aggregate\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 713, "aggregate\ub418\uace0": 743, "aggregate\ub97c": 754, "aggregation\ub9cc": 745, "aggregation\uc744": [749, 751], "aggregator_typ": [338, 352, 354, 359, 362, 665, 673, 705, 713, 749, 756, 784, 785, 807, 808], "aggregator_type\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 713, "aggress": 765, "aggretate\ud558\ub294": 743, "agnn": 331, "agnost": [8, 20], "agre": 801, "agreement": 801, "ahead": [771, 795], "ai": [22, 759, 760, 761, 762, 764, 765, 773, 784, 785, 786, 798], "aifb": [130, 790], "aifbdataset": 790, "aim": [789, 790, 791, 792, 795, 798, 801, 802], "aka": 650, "al": [71, 133, 134, 503, 759, 761, 768, 770, 783, 789, 795], "albert": [138, 139, 140], "algorithm": [0, 3, 4, 6, 9, 199, 229, 283, 296, 365, 369, 370, 371, 373, 501, 503, 508, 514, 636, 637, 639, 654, 658, 671, 760, 779, 784, 793, 798, 801, 802, 805], "alia": [1, 4, 28, 32, 43, 48, 49, 68, 75, 82, 83, 84, 85, 96, 97, 98, 103, 105, 110, 152, 218, 521, 547, 764], "alias": 786, "align": [5, 8, 792], "alist": [667, 707, 751], "aliv": 640, "all": [4, 5, 6, 8, 13, 19, 20, 21, 25, 29, 33, 34, 38, 40, 43, 44, 47, 50, 51, 52, 53, 55, 59, 60, 67, 69, 72, 76, 77, 78, 80, 81, 86, 87, 88, 94, 100, 101, 103, 104, 112, 116, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 140, 141, 144, 152, 153, 154, 157, 160, 172, 175, 177, 179, 180, 181, 198, 199, 201, 202, 204, 205, 206, 208, 209, 210, 211, 216, 217, 221, 223, 228, 229, 230, 231, 232, 235, 238, 276, 277, 283, 288, 295, 298, 299, 329, 333, 341, 346, 347, 351, 356, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 396, 402, 403, 422, 424, 426, 429, 431, 447, 450, 452, 456, 458, 464, 466, 470, 472, 485, 486, 493, 494, 498, 500, 505, 506, 507, 508, 509, 510, 511, 514, 515, 580, 586, 588, 590, 591, 596, 603, 604, 609, 612, 618, 631, 633, 635, 636, 637, 638, 639, 640, 642, 645, 646, 647, 650, 652, 654, 655, 657, 658, 659, 660, 661, 662, 666, 668, 669, 670, 671, 672, 673, 689, 730, 731, 740, 753, 756, 757, 760, 761, 762, 763, 764, 767, 769, 770, 771, 772, 773, 779, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 807, 808], "all_acc": 791, "all_edg": [503, 508, 509, 698, 740], "all_logit": [770, 771], "all_loss": 791, "alloc": [224, 776], "allow": [4, 19, 21, 29, 30, 31, 33, 34, 40, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 67, 72, 79, 86, 87, 88, 89, 90, 91, 92, 93, 99, 106, 112, 113, 116, 124, 129, 234, 235, 237, 238, 275, 276, 277, 281, 282, 327, 329, 421, 423, 448, 485, 496, 498, 500, 508, 514, 517, 519, 520, 585, 631, 636, 639, 640, 643, 644, 647, 657, 662, 663, 765, 770, 779, 793, 802, 805, 807], "allow_dupl": 596, "allow_zero_in_degre": [331, 343, 346, 347, 349, 350, 351, 354, 356, 363], "almost": [221, 228, 510, 633, 656, 659, 661, 669, 785], "alon": [768, 769], "along": [8, 19, 20, 47, 72, 90, 91, 92, 93, 99, 112, 161, 200, 293, 327, 380, 395, 448, 506, 507, 508, 539, 542, 543, 544, 546, 590, 591, 594, 641, 673, 759, 760, 764, 770, 791, 793, 802, 805, 807], "alongsid": 757, "alp": [365, 366], "alpha": [171, 172, 332, 351, 365, 366, 392, 403, 609, 613, 792], "alpha1": [367, 368], "alpha2": [367, 368], "alpha_": [343, 347, 349, 350, 377, 792], "alpha_1": [367, 368], "alpha_2": [367, 368], "alpha_i": 402, "alreadi": [63, 70, 88, 107, 108, 116, 152, 155, 157, 158, 159, 190, 293, 525, 528, 530, 532, 535, 536, 548, 579, 629, 630, 631, 633, 645, 668, 715, 770, 771, 773, 784, 789, 802, 808], "also": [0, 1, 2, 4, 5, 7, 13, 20, 21, 26, 27, 42, 43, 45, 69, 73, 100, 101, 102, 103, 113, 117, 118, 120, 128, 129, 141, 158, 167, 175, 204, 206, 210, 216, 217, 229, 230, 234, 235, 276, 277, 281, 282, 299, 327, 358, 359, 361, 367, 368, 401, 421, 422, 485, 498, 499, 502, 504, 510, 519, 520, 526, 527, 580, 585, 587, 629, 632, 633, 635, 636, 637, 638, 639, 642, 643, 645, 646, 647, 650, 656, 657, 659, 660, 661, 662, 669, 671, 673, 729, 761, 764, 769, 770, 771, 772, 773, 779, 780, 783, 784, 785, 786, 790, 791, 792, 795, 798, 799, 801, 802, 805, 807, 808], "altern": [20, 21, 765, 795, 801], "although": [4, 367, 368, 369, 370, 505, 507, 760, 769, 770, 771], "alwai": [20, 100, 101, 139, 140, 174, 179, 180, 190, 191, 229, 288, 295, 296, 372, 492, 503, 631, 638, 643, 769, 783, 784, 786], "always_preserv": 128, "am": 131, "amazon": [13, 20, 24, 133, 134, 157, 158, 732, 776], "amazon_co_buy_comput": 137, "amazonaw": [22, 633, 678, 718], "amazoncobui": [24, 133, 134], "amazoncobuycomputerdataset": [137, 187, 188], "amazoncobuydata": [633, 678, 718], "ambigu": [47, 56, 79], "among": [4, 13, 157, 281, 282, 329, 635, 660, 671, 771, 785, 790, 791, 793, 798, 802, 803, 805], "amount": [638, 662, 801], "amp": [663, 747], "amp_dtyp": 663, "amp_en": 663, "amper": [8, 650, 734], "amplif": [339, 360], "amx": 663, "an": [0, 1, 4, 6, 8, 13, 19, 20, 21, 30, 31, 33, 35, 38, 43, 45, 47, 50, 51, 52, 54, 56, 59, 60, 61, 62, 63, 70, 72, 77, 79, 86, 87, 88, 89, 90, 91, 92, 93, 99, 103, 106, 108, 111, 112, 115, 117, 118, 124, 126, 129, 135, 137, 143, 147, 148, 152, 158, 161, 163, 164, 166, 173, 177, 197, 199, 200, 201, 202, 207, 210, 222, 223, 224, 229, 230, 232, 234, 235, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 283, 284, 285, 286, 294, 297, 299, 333, 336, 337, 338, 341, 342, 347, 349, 350, 351, 352, 356, 357, 358, 361, 362, 364, 365, 366, 367, 368, 371, 372, 374, 380, 394, 444, 447, 485, 496, 497, 501, 503, 504, 505, 506, 507, 508, 510, 514, 519, 520, 526, 527, 575, 578, 579, 580, 585, 586, 588, 590, 591, 594, 596, 597, 599, 602, 603, 604, 606, 607, 609, 614, 618, 620, 626, 630, 631, 633, 635, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 676, 716, 740, 744, 751, 754, 758, 759, 761, 762, 768, 769, 771, 772, 773, 776, 779, 780, 784, 785, 789, 790, 792, 793, 795, 798, 802, 805, 807, 808], "analog": 792, "analogu": [174, 197, 510], "analysi": [132, 633, 795, 798], "analyz": 5, "angl": [336, 347, 349, 350], "angstrom": 171, "ani": [4, 5, 19, 20, 21, 25, 69, 115, 119, 128, 129, 144, 197, 200, 204, 206, 209, 210, 224, 229, 275, 276, 277, 280, 281, 282, 286, 294, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 331, 332, 337, 345, 351, 356, 367, 368, 369, 370, 373, 383, 384, 385, 386, 387, 388, 389, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 485, 502, 508, 509, 510, 511, 512, 539, 542, 543, 544, 579, 580, 582, 583, 584, 585, 586, 588, 601, 612, 631, 636, 645, 647, 663, 669, 671, 729, 731, 740, 760, 770, 771, 779, 783, 789, 790, 791, 792, 798, 801, 802, 807], "ani2": 801, "anim": [658, 760, 783, 791, 798, 801], "annot": [175, 795, 802], "anonym": [4, 142], "anoth": [4, 20, 47, 128, 139, 158, 172, 210, 286, 365, 503, 585, 645, 655, 656, 669, 672, 673, 760, 765, 769, 771, 784, 790, 791, 792, 798], "anyth": [20, 655], "anywher": [160, 630], "apach": [22, 757, 758], "apart": 643, "api": [0, 4, 7, 20, 21, 40, 55, 67, 100, 101, 224, 230, 231, 295, 510, 588, 629, 632, 633, 635, 638, 643, 644, 645, 646, 647, 649, 656, 661, 663, 666, 667, 682, 699, 703, 720, 723, 741, 746, 751, 757, 759, 760, 761, 762, 764, 765, 769, 770, 786, 789, 791, 792, 796, 803, 805, 807, 808], "apinn": [664, 673, 702, 704, 713, 748, 756], "api\u4e5f\u652f\u6301python\u7684\u53ef\u8fed\u4ee3\u7c7b\u578b": 689, "api\u4e5f\u80fd\u5904\u7406\u7279\u5f81\u6570\u636e\u548c\u56fe\u7ea7\u522b\u7684\u6807\u7b7e\u6570\u636e": 686, "api\u4ee5\u6613\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u52a0\u8f7d\u7684\u683c\u5f0f\u6784\u9020\u5212\u5206\u7ed3\u679c": 682, "api\u4ee5\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u4fe1\u606f\u65f6": 690, "api\u548c": 706, "api\u5c06": 688, "api\u5c06\u5f02\u6784\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 690, "api\u5c06\u65b0id\u5206\u914d\u7ed9\u8f93\u5165\u56fe\u7684\u8282\u70b9\u548c\u8fb9": 682, "api\u7684\u8f93\u5165": 689, "api\uac00": 723, "api\uacfc": 723, "api\ub294": [720, 721, 723, 730], "api\ub4e4": [721, 727, 728, 730, 731, 733], "api\ub4e4\uacfc": 733, "api\ub4e4\uc740": [721, 727], "api\ub4e4\uc744": [717, 721, 727, 730], "api\ub4e4\uc758": 721, "api\ub4e4\uc774": 715, "api\ub4e4\uc774\ub2e4": 721, "api\ub85c": 734, "api\ub97c": [718, 720, 721, 722, 723, 727, 729, 731, 747], "api\uc5d0": 723, "api\uc5d0\uc11c\ub294": 730, "api\uc640": 750, "api\uc740": 723, "api\uc758": 721, "appear": [35, 50, 51, 129, 209, 276, 580, 656, 786], "append": [327, 663, 667, 707, 747, 751, 760, 761, 770, 773, 779, 780, 784, 785, 789, 790, 791, 792, 798, 801, 802, 808], "appendix": 174, "appendix_c": 174, "appi": [331, 342, 343, 346, 347, 349, 351, 354, 356, 363], "appl": 21, "appli": [0, 1, 8, 19, 26, 27, 72, 90, 91, 92, 93, 99, 112, 115, 116, 119, 144, 210, 230, 293, 299, 327, 328, 330, 333, 336, 337, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 356, 357, 358, 359, 361, 362, 363, 364, 367, 368, 374, 375, 376, 381, 393, 394, 395, 396, 397, 398, 402, 403, 404, 445, 446, 545, 565, 567, 596, 598, 602, 603, 604, 609, 611, 631, 647, 649, 651, 665, 666, 669, 671, 754, 761, 764, 769, 786, 789, 790, 791, 792, 795, 802], "applic": [13, 135, 210, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 377, 761, 771, 772, 783, 795, 798], "apply_edg": [5, 8, 19, 34, 404, 617, 618, 619, 620, 621, 650, 651, 656, 659, 663, 669, 672, 693, 694, 699, 701, 709, 712, 734, 736, 741, 744, 747, 753, 755, 785, 786, 792, 802], "apply_func": [352, 353, 790], "apply_nod": [33, 802], "apply_node_func": [72, 90, 91, 92, 93, 99, 112, 487, 488, 489, 490, 491, 653, 696, 738, 795], "apply_norm": 337, "appnp": [332, 613], "appoint": 6, "appreci": 795, "approach": [129, 275, 276, 283, 371, 372, 373, 492, 514, 635, 639, 645, 647, 650, 651, 662, 791, 799, 801, 805], "appropri": [200, 203, 663, 802], "approv": 20, "approx": 351, "approxim": [13, 283, 332, 371, 373, 514, 613], "apt": [758, 779], "ar": [1, 4, 5, 6, 8, 9, 10, 11, 13, 19, 20, 21, 25, 26, 27, 29, 30, 31, 33, 34, 38, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 67, 72, 77, 78, 79, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 104, 106, 112, 113, 114, 115, 116, 117, 119, 120, 123, 124, 128, 129, 133, 134, 137, 139, 140, 142, 143, 144, 146, 147, 148, 151, 153, 154, 155, 157, 158, 159, 161, 167, 171, 172, 177, 178, 181, 182, 183, 185, 187, 200, 203, 204, 206, 207, 209, 210, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 234, 235, 236, 275, 276, 277, 280, 281, 282, 283, 287, 293, 294, 295, 299, 325, 327, 329, 330, 331, 333, 339, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 369, 371, 372, 373, 390, 392, 393, 397, 401, 403, 404, 421, 422, 423, 445, 448, 485, 486, 488, 492, 496, 498, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 517, 519, 520, 522, 548, 556, 558, 559, 561, 562, 567, 571, 579, 580, 582, 583, 584, 586, 588, 590, 591, 595, 596, 602, 612, 626, 629, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 690, 698, 715, 719, 730, 731, 737, 740, 741, 756, 758, 759, 760, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 773, 779, 783, 784, 785, 786, 789, 790, 791, 792, 793, 795, 796, 798, 801, 802, 803, 805, 808], "arang": [8, 19, 94, 95, 116, 153, 154, 181, 199, 207, 209, 210, 234, 277, 281, 282, 325, 329, 421, 485, 498, 499, 500, 501, 552, 553, 556, 562, 563, 564, 574, 596, 599, 600, 639, 656, 658, 699, 700, 741, 743, 771, 772, 780, 785, 790, 801], "arbitrari": [4, 19, 47, 110, 123, 237, 297, 357, 503, 588, 616, 631, 639, 670, 672, 762, 769, 771, 798], "arbitrarili": 616, "arc": 642, "architectur": [8, 380, 650, 761, 790, 791, 802], "archiv": 191, "archlinux": 779, "archwiki": 779, "area": 771, "arg": [21, 119, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 357, 383, 384, 385, 386, 387, 388, 389, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 635, 659, 680, 698, 701, 720, 740, 744, 780, 807, 808], "argmax": [759, 760, 768, 770, 772, 779, 784, 785, 790, 795, 808], "argument": [4, 19, 21, 33, 35, 36, 50, 53, 72, 92, 93, 99, 107, 112, 116, 119, 120, 129, 137, 200, 201, 202, 203, 206, 210, 229, 234, 275, 276, 277, 281, 282, 288, 296, 297, 327, 355, 357, 367, 368, 369, 370, 402, 421, 448, 485, 501, 507, 508, 509, 511, 512, 519, 520, 580, 585, 588, 626, 639, 640, 645, 646, 650, 655, 657, 661, 662, 670, 729, 741, 742, 759, 769, 771, 776, 779, 784, 785, 792, 808], "argument\ub85c": 746, "ari": [762, 795], "arnold": 795, "around": [784, 785], "arr": [4, 636, 681, 721], "arrai": [4, 20, 100, 101, 123, 124, 144, 187, 188, 195, 197, 207, 210, 222, 229, 237, 238, 501, 505, 506, 507, 510, 519, 520, 526, 527, 631, 636, 639, 647, 656, 659, 661, 723, 773, 779, 791], "arrang": [501, 519, 520, 633], "array_lik": 197, "array\ub294": 723, "array\ub4e4\uc5d0": 721, "array\ub4e4\uc744": 721, "array\ub4e4\uc758": 721, "array\ub97c": 730, "arrow": [783, 784, 786, 791], "arrows": 795, "art": [638, 765, 802], "articl": [145, 176, 182, 769, 776], "arxiv": [132, 143, 157, 158, 167, 185, 370, 392, 503, 508, 710, 765, 784, 785, 786, 802, 808], "as_edge_prediction_sampl": [204, 206, 655, 656, 659, 785], "as_tensor": 761, "as_tupl": [633, 678, 718, 723, 790, 791], "asarrai": [4, 636, 681, 721], "ascend": [187, 195, 275, 380, 511], "asgraphpreddataset": 761, "ask": 662, "aslinkpreddataset": 780, "aspect": [171, 172, 798], "aspirincod": 691, "assembl": [798, 802], "assert": [88, 119, 209, 633, 678, 698, 718, 740], "assess": 785, "assign": [4, 26, 27, 38, 51, 77, 113, 114, 123, 138, 139, 140, 143, 211, 212, 213, 214, 215, 221, 225, 228, 229, 230, 237, 295, 296, 486, 501, 510, 586, 636, 637, 638, 639, 644, 645, 646, 669, 673, 688, 729, 753, 770, 773, 779, 786, 790, 791, 802], "associ": [42, 45, 46, 73, 74, 102, 187, 195, 230, 231, 327, 357, 368, 369, 505, 507, 508, 509, 510, 511, 636, 642, 647, 670, 731, 790, 791, 792, 801, 802], "assum": [47, 128, 197, 200, 204, 205, 206, 207, 209, 211, 230, 286, 367, 505, 507, 508, 509, 510, 585, 631, 633, 635, 636, 639, 668, 669, 671, 672, 723, 768, 770, 773, 779, 780, 784, 785, 786, 798, 802, 807, 808], "assumpt": [19, 640, 776, 791], "assur": 626, "astyp": [343, 344, 347, 349, 350, 359, 773], "asv": 765, "asym_a": 764, "asymmetr": 642, "asynchron": 200, "aten": 761, "atom": [170, 171, 172, 185, 333, 382], "atom_encod": 761, "atomencod": 761, "att": [358, 802], "att_anim": 802, "att_map": 802, "att_weight_map": 802, "attach": [4, 138, 139, 140, 179, 180, 636, 790, 801], "attempt": 190, "attend": [798, 802], "attent": [8, 299, 331, 336, 343, 344, 347, 349, 350, 358, 365, 366, 375, 378, 379, 390, 392, 393, 395, 396, 397, 402, 578, 594, 614, 640, 663, 764, 767, 793, 794, 803, 805], "attention_weight": 347, "attenu": [339, 360], "attn": [390, 761], "attn_aft": 366, "attn_bef": 365, "attn_bia": [390, 393], "attn_bias_typ": [390, 393], "attn_drop": [347, 349, 350, 390], "attn_dropout": [365, 366, 392, 393], "attn_fc": 792, "attn_head": 792, "attn_mask": [390, 393], "attr": [161, 172, 367, 370, 392, 545, 565, 671, 710, 711, 723, 754, 772, 807], "attract": [72, 112], "attribut": [21, 120, 123, 137, 145, 155, 161, 172, 176, 177, 236, 237, 587, 590, 591, 626, 637, 639, 652, 669, 723, 768, 769, 772, 773, 786, 802], "attrvisitor": 21, "auc": [771, 780, 785], "augment": [392, 593, 599, 600, 601, 639, 759, 791], "aut": 802, "authent": 779, "author": [142, 147, 148, 170, 171, 172, 173, 333, 594, 630, 639, 642, 723, 789, 790, 791, 792, 795, 798, 801, 802], "author___affiliated_with___institut": 639, "author___writes___pap": 639, "authorship": [147, 148], "auto": [20, 21, 757, 764], "autocast": [663, 747], "autoencod": 790, "autograd": [8, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 522, 765], "autom": 20, "automat": [4, 20, 21, 152, 211, 358, 361, 365, 504, 585, 630, 636, 637, 639, 640, 650, 655, 660, 663, 747, 764, 779, 780, 789], "auxiliari": [638, 639], "av": 339, "avail": [4, 20, 117, 118, 144, 164, 174, 177, 197, 229, 283, 371, 373, 512, 514, 631, 635, 640, 660, 662, 671, 673, 760, 765, 799, 802, 805], "averag": [4, 9, 145, 168, 170, 173, 174, 176, 185, 339, 341, 356, 374, 588, 603, 604, 609, 671, 754, 764, 770, 771, 772, 786, 792, 802, 807], "avg": 24, "avg_deg": 174, "avg_degre": [603, 604, 609], "avg_loss": [761, 802], "avgpool": [367, 370], "avoid": [20, 33, 69, 72, 88, 92, 93, 99, 112, 115, 128, 210, 280, 286, 331, 341, 343, 346, 347, 349, 350, 351, 354, 356, 363, 390, 392, 393, 502, 508, 509, 510, 511, 579, 586, 588, 636, 639, 640, 643, 651, 667, 808], "aw": 776, "awai": [4, 796, 805], "awar": [655, 671, 792], "awesom": 20, "ax": [760, 798, 801], "axi": [346, 789, 791, 792, 801], "b": [6, 21, 25, 44, 78, 81, 104, 117, 118, 119, 125, 126, 127, 129, 172, 294, 330, 335, 344, 347, 349, 350, 356, 361, 374, 375, 376, 377, 378, 380, 381, 382, 390, 391, 395, 396, 397, 405, 444, 447, 496, 497, 503, 552, 556, 561, 562, 573, 574, 580, 585, 590, 591, 595, 637, 656, 659, 661, 666, 671, 698, 699, 701, 703, 706, 711, 740, 741, 744, 746, 750, 754, 762, 764, 790, 791, 795, 798, 801], "b_": [791, 798, 801], "b_dst": 125, "b_h": 802, "b_iou": 795, "b_o": 802, "b_src": 125, "ba": [117, 125, 129, 138, 139, 140, 294, 503], "bachman": 773, "back": [20, 21, 43, 103, 120, 503, 585, 588, 637, 658, 743, 769], "backend": [3, 4, 6, 7, 8, 20, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 100, 101, 102, 103, 104, 106, 107, 108, 109, 113, 114, 123, 124, 129, 200, 204, 205, 206, 209, 234, 235, 236, 237, 238, 275, 276, 277, 281, 282, 283, 293, 299, 371, 372, 373, 374, 375, 376, 377, 381, 382, 404, 421, 422, 485, 492, 514, 516, 579, 581, 585, 586, 587, 595, 601, 607, 612, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 635, 636, 643, 645, 664, 668, 680, 681, 720, 721, 729, 761, 765, 779, 780, 792, 795, 807, 808], "backend_unittest": 20, "backprop": [663, 747], "backpropag": 661, "backpropagate\ub97c": 746, "backtrack": [68, 286, 607, 791], "backup": 635, "backward": [4, 8, 9, 117, 118, 325, 329, 367, 368, 369, 370, 401, 635, 636, 654, 656, 659, 661, 663, 669, 671, 672, 673, 680, 681, 698, 699, 701, 703, 709, 711, 712, 713, 720, 721, 740, 741, 744, 746, 747, 753, 754, 755, 756, 759, 760, 761, 762, 768, 770, 771, 772, 779, 780, 784, 785, 789, 790, 791, 792, 795, 807, 808], "backwards\ub97c": 740, "bad": [20, 21, 390, 391, 393, 395, 396, 791], "bag": [133, 134, 151, 178, 183], "baidu": 20, "balanc": [179, 180, 229, 295, 296, 403, 638, 779], "balance_edg": [199, 229, 295, 296, 639, 682, 723, 779, 780], "balance_ntyp": [199, 229, 295, 296, 639, 682, 723, 779], "balkance_edg": 199, "bar": [759, 760, 764], "barab\u00e1si": [138, 139, 140], "barrier": 4, "baryshnikov": 790, "base": [4, 6, 12, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 221, 228, 229, 232, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 423, 486, 503, 505, 507, 545, 555, 565, 578, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 629, 636, 637, 646, 655, 666, 671, 672, 760, 765, 771, 772, 773, 790, 791, 792, 801, 802], "baselin": 765, "basetransform": [12, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616], "bash": [20, 758], "basi": [330, 337, 361, 397, 405, 661, 790], "basic": [8, 152, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 629, 632, 638, 641, 757, 763, 768, 770, 771, 773, 779, 780, 785, 791, 798, 802, 808], "batch": [4, 6, 12, 19, 21, 26, 27, 35, 36, 37, 52, 53, 94, 95, 100, 101, 113, 114, 115, 116, 126, 127, 128, 161, 164, 166, 174, 177, 198, 200, 203, 210, 234, 235, 277, 280, 283, 285, 286, 294, 325, 329, 330, 335, 346, 365, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 394, 395, 396, 397, 421, 422, 485, 496, 497, 498, 499, 500, 502, 508, 514, 516, 517, 518, 553, 554, 561, 579, 588, 589, 590, 591, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 632, 633, 635, 636, 650, 653, 654, 655, 656, 657, 658, 661, 662, 666, 677, 680, 681, 683, 711, 717, 720, 721, 724, 743, 757, 761, 764, 784, 785, 792, 798, 802, 808], "batch_depend": 204, "batch_f": [374, 375, 376, 377, 378, 379, 380, 381, 382], "batch_first": [391, 665, 705, 749], "batch_g": [374, 375, 376, 377, 378, 379, 380, 381, 382], "batch_input": [635, 680, 720, 779, 780], "batch_label": [635, 680, 720, 779], "batch_norm": [346, 394], "batch_num_edg": [94, 95, 120, 626, 671, 754, 772], "batch_num_nod": [95, 120, 626, 671, 754, 772], "batch_pr": [635, 680, 720, 779, 780], "batch_siz": [4, 120, 174, 199, 200, 203, 204, 205, 206, 209, 210, 325, 329, 367, 370, 390, 392, 393, 632, 633, 635, 636, 655, 656, 657, 658, 659, 661, 662, 671, 677, 678, 680, 681, 698, 699, 700, 701, 703, 711, 717, 718, 720, 721, 740, 741, 742, 743, 744, 746, 754, 761, 772, 779, 780, 784, 785, 786, 791, 795, 802, 807, 808], "batch_tre": 795, "batch_walk": 325, "batched_g": 761, "batched_graph": [161, 164, 166, 177, 203, 671, 711, 754, 772, 791, 795], "batched_label": [161, 164, 166, 177, 791], "batched_pmpd": 791, "batchedgraph": 802, "batcher": 795, "batcher_dev": 795, "batchnorm": 357, "batchnorm1": 761, "batchnorm1d": [357, 761, 791], "batchnorm2": 761, "bbg": 120, "bc": 117, "bcewithlogitsloss": [761, 792], "bdd": [330, 361], "beam": 802, "beat": 20, "becam": 163, "becaus": [4, 8, 20, 21, 33, 72, 92, 93, 99, 112, 120, 129, 275, 276, 327, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 510, 636, 637, 638, 643, 651, 655, 657, 658, 662, 672, 762, 770, 779, 786, 791, 792, 799, 805], "becom": [120, 124, 129, 237, 238, 275, 276, 362, 498, 564, 656, 802], "been": [4, 21, 129, 158, 220, 275, 276, 330, 358, 361, 510, 633, 640, 657, 661, 662, 761, 785, 786, 791, 795, 802], "befor": [4, 20, 88, 116, 124, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 212, 213, 214, 215, 224, 238, 295, 365, 366, 375, 393, 401, 486, 497, 504, 507, 510, 612, 636, 637, 638, 639, 657, 662, 663, 764, 768, 773, 779, 791, 792, 795, 799, 802, 805, 807, 808], "beforehand": 808, "begin": [294, 392, 698, 740, 762, 763, 779, 791, 792, 798, 807], "beginn": 757, "behavior": [219, 220, 636, 643, 672, 773, 798, 801, 802], "behind": [636, 790, 807], "being": [20, 44, 78, 81, 104, 120, 204, 206, 209, 234, 237, 277, 281, 282, 421, 485, 496, 497, 502, 508, 519, 520, 771, 791, 798, 801], "believ": 776, "belong": [4, 67, 115, 139, 140, 167, 173, 179, 180, 187, 195, 210, 219, 220, 221, 225, 228, 229, 287, 295, 486, 579, 626, 638, 639, 655, 669, 762, 773, 790, 791, 799, 805], "below": [4, 5, 21, 88, 129, 210, 229, 275, 276, 280, 360, 361, 405, 514, 603, 604, 609, 631, 633, 635, 636, 637, 638, 639, 640, 644, 646, 647, 654, 655, 656, 666, 670, 759, 760, 761, 762, 764, 765, 779, 780, 789, 791, 792, 798, 801, 802, 807], "benchmark": [21, 130, 133, 134, 147, 148, 149, 155, 158, 172, 182, 283, 284, 287, 420, 606, 632, 639, 677, 717, 761, 784, 785], "benefici": 651, "benefit": [633, 639, 771, 776], "benign": 157, "bernoulli": [668, 669, 708, 709, 752, 753, 798], "bernoulli_": [698, 740], "bernoulli_action_log_prob": 798, "bert": [155, 802], "besid": [155, 288, 357, 512, 635, 651, 665, 667, 798, 802], "best": [4, 13, 337, 495, 610, 629, 657, 715, 764, 767, 768, 769, 771, 777, 778, 784, 785, 786, 792], "best_accuraci": [784, 785, 808], "best_model_path": [784, 785, 808], "best_test_acc": [768, 770], "best_val_acc": [768, 770], "beta": [4, 9, 331, 334, 351, 802], "beta1": [4, 9, 367, 368], "beta2": [4, 9, 367, 368], "beta_": 397, "beta_1": [367, 368], "beta_2": [367, 368], "beta_l": 351, "better": [20, 578, 614, 633, 646, 658, 718, 762, 765, 769, 773, 776, 791], "between": [4, 5, 25, 47, 55, 65, 71, 100, 101, 115, 117, 118, 139, 143, 145, 151, 162, 167, 171, 172, 176, 178, 183, 185, 197, 216, 229, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 283, 333, 351, 354, 369, 370, 371, 373, 390, 395, 396, 397, 401, 403, 486, 504, 505, 508, 514, 515, 519, 520, 588, 637, 639, 642, 647, 656, 659, 669, 671, 672, 761, 762, 764, 769, 771, 773, 785, 786, 789, 790, 791, 792, 798, 801, 802, 807], "bewteen": [343, 349, 350], "beyond": [233, 639, 770, 771], "bf": 490, "bf16": 663, "bfs_nodes_gener": [0, 490], "bg": [35, 36, 37, 94, 95, 115, 120, 126, 127, 141, 367, 370, 496, 497, 516, 517, 518, 590, 591, 626, 646, 671, 689, 711, 730, 754, 807], "bg1": [115, 579], "bhg": [120, 626], "bi": [6, 285, 579, 802], "bi_part": 343, "bia": [328, 335, 336, 337, 338, 340, 341, 342, 344, 347, 348, 349, 350, 351, 354, 355, 356, 359, 361, 362, 363, 364, 390, 393, 395, 396, 397, 398, 510, 665, 705, 749, 789, 790, 792, 795], "bias": 397, "bidecod": [669, 709], "bidirect": [115, 158, 210, 284, 372, 492, 503, 579, 606, 769], "big": [347, 671], "bigger": [772, 796, 805], "billion": [639, 654], "bilstm": 402, "bin": [194, 288, 512, 634, 638, 679, 719, 723, 773], "binar": 795, "binari": [5, 8, 157, 159, 177, 179, 180, 229, 403, 445, 446, 512, 638, 639, 650, 723, 734, 762, 771, 785, 792, 795], "binary_cross_entropy_with_logit": [771, 780, 785], "binaryreducebackward": [331, 343, 349], "bind": [333, 758], "bio": 776, "bipartit": [8, 25, 43, 44, 67, 78, 81, 103, 104, 115, 117, 118, 123, 124, 128, 294, 334, 336, 337, 338, 341, 342, 343, 344, 346, 347, 349, 350, 354, 356, 359, 362, 493, 503, 510, 580, 642, 647, 656, 666, 667, 726, 731, 741, 750, 751, 783, 791, 801], "bipartite_from_networkx": 124, "bipartite_from_scipi": 123, "bisect": [295, 296, 637], "bisect_left": 637, "bit": [20, 21, 279, 646, 672, 798, 802], "bitcoin": 142, "bitcoinotc": [24, 142], "bitcoinotcdata": [633, 678, 718], "bitcoinotcdataset": [630, 676, 716], "bla": [13, 283, 371, 373, 514], "blitz": [757, 767, 773, 775], "blitz_1_introduct": [768, 784, 808], "blitz_2_dglgraph": 769, "blitz_3_message_pass": [770, 786], "blitz_4_link_predict": [771, 785], "blitz_5_graph_classif": [772, 807], "blitz_6_load_data": 773, "bloat16": 663, "blob": [161, 200], "block": [4, 9, 125, 129, 174, 200, 204, 205, 206, 210, 330, 361, 379, 401, 580, 635, 636, 637, 656, 658, 659, 660, 661, 664, 666, 667, 680, 681, 698, 699, 700, 701, 702, 703, 706, 720, 721, 722, 740, 741, 743, 744, 745, 746, 748, 750, 761, 779, 780, 784, 785, 790, 791, 792, 798], "block3": [698, 740], "block_diag": 791, "block_id": [698, 740], "block_typ": 379, "blocksampl": [204, 206, 657, 698, 740, 742], "blog": [766, 776], "blue": 760, "bmatrix": 762, "bmm": 790, "bn": 791, "board": 776, "bodi": 21, "boil": 789, "boldsymbol": [672, 698, 712, 740, 755, 783], "bond": [170, 172, 185], "book": [221, 226, 228, 638, 639, 766], "bool": [4, 6, 9, 30, 47, 56, 57, 64, 65, 66, 94, 95, 115, 121, 122, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 197, 200, 203, 204, 206, 207, 209, 216, 219, 220, 221, 225, 227, 228, 229, 230, 231, 234, 275, 277, 280, 281, 282, 283, 284, 286, 295, 296, 325, 328, 329, 330, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 390, 392, 393, 394, 398, 403, 421, 485, 486, 488, 490, 491, 492, 498, 499, 501, 502, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 578, 579, 580, 586, 588, 590, 591, 592, 594, 595, 596, 606, 607, 612, 614, 629, 631, 633, 668, 669, 675, 698, 708, 709, 715, 718, 723, 740, 752, 753, 773, 779, 780, 798], "boolean": [52, 53, 200, 203, 206, 221, 228, 234, 278, 421, 509, 627, 636, 669, 673, 721, 768, 779], "booltensor": 792, "bor": [204, 508], "borrow": [21, 189, 190, 671], "both": [0, 8, 20, 21, 43, 55, 61, 62, 72, 88, 103, 115, 117, 118, 128, 132, 145, 151, 173, 176, 178, 183, 200, 206, 220, 280, 286, 293, 294, 327, 341, 342, 343, 344, 347, 348, 349, 350, 356, 358, 359, 362, 391, 397, 421, 422, 502, 512, 539, 542, 543, 544, 546, 556, 561, 562, 579, 580, 585, 586, 588, 631, 635, 636, 639, 641, 646, 647, 649, 650, 658, 663, 669, 764, 765, 768, 769, 771, 773, 779, 785, 790, 791, 792, 793, 798, 802, 805], "bother": [630, 764], "bottleneck": 662, "bottom": [139, 140, 795], "bought": [133, 134, 642, 657, 726], "bound": [224, 391, 396, 510, 663], "boundari": 760, "bpr": [672, 755], "branch": [20, 182, 638, 723], "brand": 21, "breadth": [121, 122, 505], "break": [50, 209, 784, 785, 802, 808], "breviti": 633, "brew": 758, "brief": [641, 791], "briefli": 760, "bring": [19, 609], "broadcast": [5, 8, 126, 127, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 352, 362, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 553, 566, 567, 568, 569, 570, 650], "broadcast_edg": 127, "broadcast_nod": 126, "broken": 792, "brook": 691, "brookhuang16211": 691, "bruteforc": [13, 283, 371, 373, 514], "bsddmm": 761, "bspmm": 761, "bucket": 12, "budget": 207, "buffer": [224, 283, 371, 373, 514], "bugfix": 20, "bui": [493, 642, 726], "build": [13, 21, 153, 154, 181, 204, 205, 206, 224, 374, 375, 376, 377, 378, 379, 380, 381, 382, 508, 633, 636, 643, 647, 648, 654, 657, 660, 668, 671, 673, 718, 757, 758, 761, 762, 763, 768, 771, 772, 792, 795, 798], "build_dgl": 758, "build_ext": [20, 758], "build_hidden_lay": 790, "build_input_lay": 790, "build_model": 790, "build_output_lay": 790, "built": [3, 8, 12, 21, 33, 72, 90, 91, 92, 93, 99, 112, 158, 172, 173, 636, 649, 651, 663, 666, 670, 671, 673, 693, 734, 747, 750, 757, 764, 765, 770, 789, 792, 795, 798], "builtin": [8, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 633, 634, 656, 659, 660, 661, 760, 770, 771, 785, 789, 790, 792], "builtinfunct": [33, 72, 90, 91, 92, 93, 99, 112], "bulit": [33, 72, 92, 93, 99, 112], "bunch": [639, 666], "busi": 184, "button": 20, "buyer": 642, "bwtype": 503, "byte": 224, "c": [6, 20, 21, 24, 117, 118, 119, 147, 148, 172, 174, 182, 287, 336, 337, 338, 345, 357, 403, 444, 646, 730, 758, 760, 795, 801, 802], "c_": [171, 172, 341, 348, 356, 790, 792, 795, 801], "c_etyp": [368, 369, 652, 695, 737], "c_etype_func_dict": [368, 369], "c_i": 790, "c_j": 795, "c_k": [287, 333], "cach": [22, 135, 136, 137, 139, 140, 144, 152, 179, 180, 199, 200, 207, 363, 634, 659, 744, 759, 760, 762, 768, 770, 771, 789, 790, 791, 792], "cache_path": 199, "caculatorgetbrand": 21, "cal": [171, 172], "calc": 21, "calcul": [4, 21, 336, 337, 338, 372, 423, 492, 517, 518, 519, 520, 545, 565, 586, 635, 639, 671, 754, 760, 764, 791, 792, 798, 801, 802], "calculate_gain": [665, 705, 749, 790, 792], "calculatorobject": 21, "call": [0, 4, 6, 8, 20, 21, 25, 44, 51, 65, 78, 81, 104, 116, 117, 118, 129, 142, 152, 207, 229, 275, 276, 299, 327, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 365, 367, 368, 369, 370, 420, 502, 508, 510, 561, 585, 586, 590, 591, 626, 633, 636, 637, 638, 639, 642, 645, 646, 647, 650, 651, 652, 653, 656, 661, 665, 666, 667, 669, 671, 672, 688, 729, 734, 761, 768, 769, 770, 779, 783, 786, 791, 792, 795, 798, 802, 803, 805, 808], "callabl": [4, 33, 34, 52, 53, 72, 90, 91, 92, 93, 99, 112, 119, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 210, 297, 327, 336, 341, 342, 347, 349, 350, 351, 352, 353, 356, 359, 361, 362, 363, 364, 392, 393, 401, 487, 488, 489, 490, 491, 503, 598, 665], "came": 21, "can": [4, 5, 6, 8, 11, 19, 20, 21, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 72, 73, 74, 76, 78, 79, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 108, 112, 113, 114, 116, 117, 118, 120, 123, 126, 127, 128, 129, 143, 152, 157, 159, 164, 177, 187, 197, 200, 203, 204, 206, 207, 210, 211, 219, 220, 221, 223, 229, 230, 231, 234, 235, 237, 275, 276, 277, 281, 282, 283, 285, 295, 296, 299, 326, 327, 328, 329, 331, 333, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 349, 350, 351, 354, 355, 356, 359, 361, 362, 363, 365, 371, 372, 373, 375, 390, 394, 397, 398, 399, 400, 401, 402, 405, 421, 423, 448, 485, 486, 492, 496, 497, 498, 499, 500, 501, 504, 507, 508, 509, 510, 511, 514, 517, 518, 519, 520, 564, 580, 585, 586, 588, 590, 591, 613, 627, 629, 630, 631, 633, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 716, 728, 757, 758, 760, 761, 762, 763, 764, 765, 768, 769, 770, 771, 772, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 793, 795, 798, 799, 801, 802, 803, 805, 807, 808], "candid": [283, 371, 373, 514], "cannot": [4, 19, 20, 200, 277, 281, 282, 421, 485, 636, 637, 639, 644, 645, 647, 650, 668, 688, 690, 729, 731], "canon": [4, 25, 35, 38, 45, 47, 50, 51, 56, 65, 79, 108, 129, 229, 276, 329, 368, 595, 602, 647, 731], "canonical_etyp": [4, 51, 65, 108, 327, 368, 369, 595, 647, 652, 656, 659, 660, 667, 690, 695, 698, 699, 701, 702, 707, 731, 737, 740, 741, 744, 745, 751, 790], "capabl": [200, 663, 802], "capac": [1, 8, 514, 639, 650, 654, 792, 793, 805], "capav": [171, 172], "capsul": [299, 767, 803, 804, 805], "captur": [642, 652], "care": [158, 367, 368, 369, 370], "carefulli": 640, "carlo": [369, 370], "carri": [638, 639, 671], "cartesian": 397, "case": [4, 5, 8, 13, 20, 21, 26, 31, 33, 40, 41, 43, 47, 50, 72, 92, 93, 99, 103, 107, 108, 112, 115, 123, 124, 129, 137, 173, 190, 200, 204, 221, 228, 237, 238, 275, 276, 285, 294, 299, 331, 334, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 354, 356, 359, 362, 363, 374, 375, 376, 377, 378, 379, 380, 381, 382, 403, 404, 507, 515, 519, 520, 561, 567, 585, 626, 630, 631, 634, 636, 639, 646, 647, 651, 657, 660, 661, 666, 669, 750, 762, 764, 771, 773, 776, 779, 786, 790, 791, 792, 795, 802], "case1": [398, 402, 539, 542, 543, 544, 545, 546, 555, 557, 558, 559, 560, 565, 571, 595, 596, 601, 602, 607, 611, 612, 616], "case2": [398, 402, 539, 542, 543, 544, 545, 546, 555, 557, 558, 559, 560, 565, 571, 595, 596, 601, 602, 607, 611, 612, 616], "case3": [398, 402, 545, 555, 557, 560, 565, 571, 595, 596], "case4": 398, "case\ub4e4\uc5d0": 723, "casio": 21, "cast": [63, 70, 129, 275, 276, 337, 582, 583, 584, 761], "cat": [153, 154, 181, 210, 374, 375, 376, 377, 378, 379, 380, 381, 382, 395, 398, 402, 514, 651, 656, 660, 669, 694, 699, 702, 709, 736, 741, 745, 753, 760, 761, 770, 771, 773, 780, 785, 786, 791, 792, 798, 801], "cat_feat": [651, 694, 736], "catbackward": 377, "categor": [156, 184, 669, 769, 790, 798], "categori": [5, 130, 131, 133, 134, 141, 146, 150, 151, 157, 165, 169, 178, 183, 673, 764, 768, 771, 772, 773, 790], "category_id": 790, "caus": [331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 666], "caution": 4, "cc": [21, 163, 638, 723], "cd": [20, 758], "cdgnn": 791, "cdot": [115, 177, 331, 335, 338, 339, 343, 346, 347, 357, 358, 359, 362, 377, 398, 502, 613, 666, 698, 706, 740, 750, 760, 770, 795, 798, 801, 802], "cedric": 801, "center": [329, 367, 368, 397, 769], "cento": 758, "central": 770, "centric": [641, 765], "centuri": 795, "certain": [26, 146, 150, 169, 508, 509, 519, 520, 643, 652, 665, 772, 801], "certif": 190, "cetyp": 790, "chain": [643, 727, 771, 789, 795, 798, 802], "chainer": 20, "challeng": [147, 148, 795, 796, 798, 799, 805], "chameleon": 145, "chang": [1, 6, 25, 63, 69, 70, 129, 142, 170, 171, 172, 275, 276, 363, 519, 520, 630, 631, 633, 661, 663, 784, 785, 786, 798, 807, 808], "channel": [357, 791, 792, 802], "chapter": [1, 3, 5, 10, 19, 580, 629, 637, 638, 639, 648, 653, 660, 666, 671, 673, 776], "char": 21, "charact": 798, "character": [671, 762], "characterist": 652, "charg": 635, "chart": 629, "cheatsheet": 5, "chebconv": 340, "chebnet": 335, "chebyshev": [335, 340], "check": [20, 21, 55, 64, 65, 66, 100, 101, 152, 189, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 510, 629, 630, 633, 634, 638, 639, 653, 663, 715, 716, 719, 757, 758, 759, 760, 761, 762, 765, 771, 786, 790, 792, 798, 807], "check_eq_shap": [666, 706, 750], "check_sha1": [630, 676, 716], "checkout": 20, "checkpoint": 643, "chee": 801, "chemic": 798, "chemistri": [172, 333, 359], "chen": 691, "child": 795, "children": [369, 370], "china": 22, "choic": [22, 403, 445, 493, 494, 638, 771, 772], "choos": [124, 129, 216, 217, 234, 237, 238, 275, 276, 421, 493, 494, 505, 507, 510, 586, 637, 673, 758, 764, 783], "choose_dest": 798, "choose_dest_ag": 798, "choose_dest_and_upd": 798, "choose_dest_log_p": 798, "choosedestandupd": 798, "chosen": [185, 216, 217, 230, 231, 283, 508, 509, 510, 511, 758], "chrsmrr": [164, 177], "chunk": [637, 795], "chunk_graph": 639, "chunkfilespec": 639, "ci": 20, "cikm": 158, "circ": [334, 390, 761], "circl": 798, "circular": 166, "citat": [146, 149, 150, 169, 609, 762, 768, 771, 791], "citation2": 780, "citation_graph": [791, 792], "citationdata": [633, 678, 718], "citationgraphdataset": [24, 146, 150, 169, 633, 678, 718], "citationgraphdataset\u6e90\u4ee3\u7801": 678, "cite": [639, 723, 762, 771, 790, 791], "citegrh": [791, 792], "cites": [24, 146, 633, 678, 718, 765], "citeseergraphdataset": [633, 663, 668, 673, 678, 708, 713, 718, 752, 756], "citizen": 21, "cla": [760, 798, 801], "clamp": [391, 396, 403, 659, 672, 712, 744, 755, 802], "clang": 758, "class": [0, 1, 4, 6, 7, 9, 12, 21, 30, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 233, 238, 287, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 503, 554, 561, 572, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 628, 630, 631, 633, 636, 637, 655, 656, 658, 659, 660, 661, 662, 663, 665, 667, 669, 671, 672, 673, 675, 678, 698, 699, 700, 701, 702, 703, 705, 707, 709, 711, 712, 713, 715, 718, 740, 741, 743, 744, 745, 746, 747, 749, 751, 753, 754, 755, 756, 759, 760, 761, 762, 763, 764, 768, 770, 771, 772, 773, 776, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 801, 807, 808], "classic": [365, 655, 757, 760, 801, 802], "classif": [2, 120, 130, 131, 133, 134, 138, 139, 140, 141, 146, 147, 148, 149, 150, 155, 156, 157, 159, 161, 163, 164, 165, 166, 168, 169, 173, 177, 179, 180, 182, 184, 199, 200, 201, 203, 204, 205, 206, 209, 210, 341, 356, 367, 368, 369, 370, 380, 403, 599, 602, 636, 639, 654, 659, 668, 672, 753, 755, 759, 765, 767, 770, 771, 774, 775, 780, 781, 782, 783, 785, 787, 788, 789, 790, 791, 792, 798, 809, 810], "classifi": [145, 151, 176, 178, 183, 369, 370, 671, 672, 673, 711, 754, 785, 789, 790, 791], "claud": 795, "clean": [20, 628, 647, 650], "clear": [792, 802], "clearli": [20, 792], "clf": [325, 801], "cli": 20, "click": [20, 210, 668, 669, 672, 708, 709, 712, 752, 753, 755, 760], "click_dst": [668, 708, 752], "click_src": [668, 708, 752], "client": [4, 224], "cliqu": 166, "clock": [174, 197], "clone": [20, 55, 63, 70, 88, 107, 357, 582, 583, 584, 638, 723, 758, 791, 798, 802], "cloner": 20, "close": [171, 325, 329, 633, 760, 792, 801, 802], "closur": 785, "cloud": [6, 13, 20, 283, 346, 371, 373, 514], "club": [163, 643, 686, 727, 760, 773], "cluster": [4, 6, 143, 199, 501, 635, 636, 638, 639, 640, 765, 779, 780, 791], "cluster_gcn": 199, "cm": 760, "cmake": 758, "cmap": [760, 791], "cn": 22, "cnn": [346, 354, 769, 802], "cnt": 588, "co": [4, 132, 133, 134, 147, 148, 331, 333, 398, 594, 762, 764], "coalesc": [229, 533, 588, 616, 764], "coarsen": 6, "coauthor": [24, 147, 148, 642], "coauthordata": [633, 678, 718], "code": [4, 21, 128, 142, 160, 162, 168, 170, 171, 172, 174, 175, 186, 189, 190, 199, 210, 224, 327, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 630, 632, 633, 635, 636, 637, 643, 644, 646, 647, 649, 650, 655, 656, 660, 661, 662, 663, 664, 666, 669, 670, 671, 673, 683, 718, 724, 759, 760, 761, 762, 764, 765, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 793, 795, 796, 798, 799, 801, 802, 803, 805, 807, 808], "coef": [369, 370, 603], "coeffici": [4, 9, 330, 361, 366, 403, 405, 423, 603, 790, 801], "col": [557, 571, 764, 791], "col_sort": 275, "colab": 763, "collab": [24, 161, 164, 177], "collaps": 160, "collat": [174, 203], "collate_dgl": 761, "collate_fn": [4, 174, 203, 325, 329, 632, 635, 636, 655, 677, 680, 681, 717, 720, 721, 761, 791, 795], "collect": [5, 21, 120, 131, 160, 230, 231, 333, 401, 632, 635, 636, 784, 790, 791, 795, 798, 807], "colon": 639, "color": [21, 760, 762, 783, 791, 792], "colorbar": 792, "column": [4, 30, 31, 117, 118, 129, 275, 276, 283, 340, 341, 342, 492, 523, 524, 526, 527, 539, 542, 543, 544, 545, 546, 557, 558, 559, 565, 567, 571, 601, 631, 647, 690, 731, 762, 764, 773, 779, 780, 791], "com": [20, 22, 133, 134, 147, 148, 149, 155, 158, 161, 200, 627, 633, 638, 678, 691, 718, 723, 732, 758, 776], "combin": [19, 25, 229, 330, 334, 360, 361, 366, 375, 398, 405, 512, 586, 639, 649, 650, 651, 656, 658, 661, 669, 673, 760, 768, 772, 784, 790, 792, 802], "combine_nam": 25, "come": [132, 145, 151, 176, 178, 183, 337, 361, 402, 586, 771, 798, 802], "comma": 631, "command": [20, 636, 638, 640, 758, 759, 760, 761, 762, 764, 779, 791], "comment": [20, 173, 660], "commerc": 762, "commerci": 155, "commit": 20, "committ": 20, "committor": 20, "common": [13, 20, 25, 128, 156, 200, 203, 331, 341, 343, 346, 347, 349, 350, 351, 354, 356, 363, 643, 647, 650, 651, 653, 655, 663, 666, 667, 669, 671, 751, 757, 769, 773, 779, 784, 785, 790, 792, 807], "commonli": [11, 126, 127, 329, 382, 496, 497, 503, 580, 604, 609, 613, 628, 636, 642, 650, 664, 665, 772, 789], "commun": [20, 139, 143, 163, 167, 173, 174, 224, 229, 296, 635, 636, 638, 639, 671, 793, 805, 807], "compact": [128, 367, 368], "compact_graph": 657, "compani": 329, "companion": [791, 793, 805], "compar": [152, 508, 514, 659, 660, 666, 672, 673, 764, 784, 791, 792, 802], "comparison": [20, 765], "compat": [7, 20, 496, 497, 654, 663, 668, 671, 758, 764], "competit": 801, "compil": [8, 21, 638, 650], "complet": [12, 51, 283, 400, 633, 638, 656, 661, 669, 673, 709, 753, 762, 764, 768, 771, 790, 792, 795, 798, 801, 802, 807], "complex": [8, 283, 371, 373, 514, 631, 652, 761, 770, 771, 792, 798, 802], "complic": [280, 665, 669], "compon": [10, 120, 219, 220, 283, 514, 516, 628, 635, 636, 641, 669, 671, 772, 779, 784, 785, 802], "compos": [3, 12, 21, 155, 167, 234, 277, 281, 282, 283, 329, 360, 405, 421, 485, 514, 761, 790, 792], "composit": 21, "compress": [526, 527, 558, 559, 764], "comput": [0, 4, 5, 6, 8, 9, 12, 13, 19, 20, 24, 59, 69, 86, 120, 124, 129, 133, 134, 147, 182, 200, 201, 202, 204, 205, 206, 210, 212, 213, 214, 215, 229, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 284, 286, 299, 325, 327, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 392, 393, 403, 405, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 495, 503, 508, 514, 515, 517, 518, 539, 542, 543, 544, 546, 561, 578, 588, 606, 610, 614, 622, 623, 624, 625, 633, 635, 636, 639, 641, 649, 650, 651, 652, 654, 656, 658, 659, 660, 661, 662, 663, 666, 669, 670, 672, 673, 723, 741, 743, 746, 753, 755, 756, 759, 760, 761, 762, 764, 765, 768, 769, 770, 771, 772, 776, 779, 780, 783, 785, 786, 789, 790, 791, 792, 795, 798, 803, 805, 807], "computation": 802, "compute_auc": 771, "compute_cor": 776, "compute_loss": [656, 659, 661, 672, 698, 699, 701, 703, 712, 740, 741, 744, 746, 755, 771, 785], "compute_mod": [372, 492], "conan": 795, "concat": [338, 362, 666, 706, 750, 770, 792, 798, 802], "concat_message_funct": [651, 694, 736], "concat_typ": 506, "concat_vid": 506, "concat_vtyp": 506, "concaten": [25, 120, 333, 357, 360, 374, 375, 376, 377, 378, 379, 380, 381, 382, 398, 402, 506, 586, 620, 647, 651, 656, 666, 669, 671, 690, 709, 731, 750, 753, 760, 771, 772, 779, 784, 791, 792, 795, 802, 808], "concentr": [792, 801], "concept": [141, 204, 205, 206, 641, 656, 661, 757, 760, 770, 785, 786, 792], "concis": [8, 650], "conclus": 792, "concret": 88, "concurr": 636, "conda": [336, 337, 338, 789, 792], "condit": [358, 361, 365, 366, 647, 798], "conduct": [13, 157, 159, 444, 633, 638, 654, 671], "confid": 670, "config": [225, 226, 227, 501, 638, 639, 723, 758], "configur": [0, 4, 20, 207, 229, 636, 638, 639, 640, 723, 758, 779, 780, 790, 798], "conflict": 163, "confus": 798, "conjunct": 807, "connect": [1, 4, 95, 128, 131, 141, 147, 148, 157, 158, 159, 167, 171, 173, 210, 219, 220, 224, 280, 283, 286, 294, 295, 333, 336, 339, 347, 349, 350, 354, 357, 359, 360, 486, 499, 503, 514, 519, 520, 580, 594, 605, 626, 636, 640, 642, 669, 670, 671, 672, 761, 762, 768, 769, 772, 779, 780, 789, 790, 791, 792, 798, 801, 802], "consecut": [6, 31, 94, 95, 123, 129, 197, 237, 275, 276, 510, 519, 520, 637, 639, 647, 769], "consequ": [658, 769, 808], "consid": [52, 53, 187, 195, 204, 206, 325, 329, 333, 503, 508, 515, 519, 520, 639, 651, 654, 658, 660, 670, 760, 762, 764, 769, 770, 771, 776, 784, 785, 786, 791, 795, 798, 801], "consider": 798, "consist": [160, 162, 170, 171, 172, 182, 230, 231, 285, 503, 510, 515, 580, 640, 642, 656, 661, 664, 762, 768, 771, 773, 785, 789, 791, 792, 802], "const": 21, "constant": [140, 164, 172, 179, 180, 345, 354, 672, 790, 792, 802], "constexpr": 21, "constitu": [175, 795], "constrain": [185, 802], "constraint": [71, 229, 295, 296, 647, 798], "constrant": [229, 295, 296], "construct": [0, 4, 123, 128, 129, 138, 139, 140, 179, 180, 186, 200, 229, 237, 275, 276, 283, 295, 296, 371, 372, 373, 492, 503, 514, 580, 631, 636, 639, 643, 645, 647, 651, 655, 657, 664, 666, 672, 729, 759, 761, 762, 771, 779, 786, 791, 802, 807], "construct_negative_graph": [672, 712, 755], "constructor": [4, 11, 404, 776], "consum": [651, 656, 663], "consumpt": [651, 657, 658, 663, 765], "contain": [0, 2, 4, 6, 10, 20, 26, 27, 52, 53, 56, 57, 72, 113, 114, 115, 119, 128, 129, 130, 131, 133, 134, 137, 141, 142, 143, 144, 146, 147, 148, 149, 150, 153, 154, 156, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 181, 182, 184, 185, 197, 210, 225, 229, 230, 231, 235, 275, 276, 283, 288, 293, 295, 326, 331, 334, 339, 342, 343, 344, 347, 349, 350, 352, 353, 354, 356, 362, 371, 372, 373, 397, 404, 422, 486, 492, 508, 509, 510, 511, 514, 519, 520, 533, 579, 580, 587, 631, 632, 636, 638, 639, 640, 646, 652, 659, 669, 672, 753, 755, 764, 768, 769, 770, 771, 772, 773, 779, 784, 785, 791, 795, 796, 798, 805], "containertyp": 21, "content": [25, 155, 189, 191, 298, 630, 631, 639, 660, 676, 716, 769, 776], "context": [4, 20, 30, 41, 61, 62, 69, 88, 107, 123, 124, 129, 200, 234, 235, 237, 238, 275, 276, 277, 281, 282, 299, 329, 421, 422, 485, 493, 494, 508, 509, 510, 511, 580, 635, 646, 652, 657, 760, 769, 808], "context\ub97c": 742, "contigu": [4, 295, 486, 514, 638, 779], "continu": [334, 586, 631, 654, 667, 707, 751, 765], "contrari": [115, 762], "contrast": [230, 593, 599, 600, 601, 642, 658, 672, 712, 755, 768, 790, 792, 801], "contrib": 802, "contribut": [508, 664, 802], "control": [0, 4, 12, 92, 112, 332, 369, 370, 493, 494, 505, 590, 591, 603, 604, 609, 631, 640, 757, 776, 784], "contruct": [673, 756], "conv": [12, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 406, 407, 408, 409, 410, 411, 412, 413, 664, 666, 673, 704, 713, 748, 750, 756], "conv1": [351, 370, 656, 658, 659, 661, 671, 673, 699, 700, 701, 703, 711, 713, 741, 743, 744, 746, 754, 756, 759, 768, 770, 771, 772, 784, 785, 786, 807, 808], "conv2": [351, 370, 656, 658, 659, 661, 671, 673, 699, 700, 701, 703, 711, 713, 741, 743, 744, 746, 754, 756, 759, 768, 770, 771, 772, 784, 785, 786, 807, 808], "conveni": [8, 629, 669, 771, 807], "convent": [0, 5, 123, 131, 141, 650], "converg": [204, 508, 663, 760, 785], "convers": [21, 502, 548, 586, 638, 643, 646, 663, 764], "convert": [8, 21, 108, 109, 117, 118, 123, 124, 125, 135, 136, 137, 144, 236, 237, 238, 530, 532, 535, 536, 548, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 615, 616, 631, 637, 638, 639, 643, 646, 655, 662, 663, 730, 764, 769, 773, 779, 780, 784, 790, 791, 808], "convert_partit": 723, "convnet": 792, "convolut": [132, 145, 151, 176, 178, 183, 199, 327, 330, 333, 334, 335, 337, 340, 341, 342, 345, 351, 352, 354, 355, 356, 358, 359, 361, 362, 363, 364, 365, 392, 405, 420, 503, 578, 599, 602, 603, 614, 654, 660, 667, 669, 671, 673, 709, 739, 745, 753, 754, 756, 760, 763, 766, 767, 770, 772, 786, 791, 792, 793, 794, 798, 801, 802, 805], "convolutin": 791, "convolution\uc740": 751, "convolution\uc744": 756, "convolution\uc758": 756, "coo": [30, 31, 40, 55, 124, 129, 229, 238, 275, 276, 512, 534, 557, 764, 791, 808], "coo_matrix": [124, 238, 771, 791], "coolwarm": 791, "cooper": 162, "coord": 397, "coord_feat": 345, "coord_feat_out": 345, "coordin": [11, 30, 124, 171, 172, 238, 283, 345, 354, 372, 397, 492, 514, 524, 534, 557, 571, 764], "coordint": 354, "copi": [5, 8, 33, 39, 55, 63, 70, 72, 88, 92, 93, 99, 107, 112, 115, 124, 128, 129, 224, 234, 235, 237, 238, 275, 276, 277, 280, 281, 282, 286, 294, 357, 421, 422, 428, 429, 430, 431, 432, 433, 485, 501, 502, 508, 509, 510, 511, 519, 520, 549, 579, 582, 583, 584, 585, 587, 588, 595, 618, 619, 621, 638, 639, 645, 647, 650, 651, 657, 658, 662, 688, 693, 729, 731, 734, 743, 761, 769, 770, 771, 773, 784, 785, 786, 791, 795, 798, 802, 808], "copy_": [5, 19, 618, 795, 801, 802], "copy_edata": [98, 110, 115, 128, 502, 508, 509, 510, 511, 588, 595], "copy_fil": [683, 724], "copy_lh": [445, 446], "copy_ndata": [98, 110, 115, 128, 280, 502, 508, 509, 510, 511, 579, 588], "copy_rh": [445, 446], "copy_u": [5, 72, 90, 91, 92, 93, 99, 112, 367, 368, 369, 404, 621, 622, 623, 624, 625, 652, 660, 663, 666, 670, 695, 702, 706, 710, 737, 745, 747, 750, 770, 786, 789, 791, 795], "copy_u_sum": 8, "copy_v": 8, "copyreducebackward": 346, "cora": [24, 149, 150, 633, 678, 718, 759, 760, 762, 765, 771, 789], "cora_v2": [136, 633, 678, 718, 759, 760, 762], "corabinari": 791, "coraful": 24, "corafulldata": [633, 678, 718], "corafulldataset": 209, "coragraphdataset": [136, 325, 367, 759, 760, 762, 768, 770, 771, 789], "core": [7, 636, 641, 759, 764, 765, 776, 789, 792, 795, 807], "cornel": 151, "corner": 666, "corpu": 802, "correct": [20, 21, 673, 713, 756, 789], "correctli": [210, 639, 758, 791], "correspond": [19, 20, 21, 26, 42, 45, 52, 53, 73, 89, 100, 101, 102, 106, 108, 112, 116, 117, 118, 120, 132, 136, 143, 144, 152, 161, 171, 172, 182, 195, 200, 203, 204, 206, 211, 221, 228, 229, 283, 286, 299, 327, 336, 337, 338, 347, 357, 366, 371, 372, 373, 390, 393, 397, 398, 402, 492, 502, 504, 506, 515, 558, 559, 578, 586, 594, 596, 606, 607, 614, 631, 637, 639, 646, 647, 650, 660, 661, 667, 670, 671, 673, 759, 760, 761, 762, 768, 770, 786, 791, 792, 795, 802], "correspondenc": 330, "corrsepond": 4, "corrupt": [508, 509, 510, 511, 636, 721], "cosin": [283, 371, 373, 398, 514], "cost": [8, 13, 200, 586], "costli": [585, 640, 658, 783], "could": [8, 20, 21, 31, 65, 206, 229, 230, 231, 299, 331, 332, 374, 376, 380, 381, 445, 446, 503, 512, 519, 520, 585, 614, 631, 633, 637, 639, 640, 651, 655, 660, 671, 673, 764, 771, 776, 791, 795], "coulomb": 170, "count": [110, 283, 371, 373, 514, 539, 542, 543, 544, 588, 616, 768, 776], "counterpart": [201, 202, 636, 639, 779, 780, 786], "coupl": 801, "cours": [151, 178, 183], "coustom": 726, "cout": 21, "covari": 354, "cover": [13, 20, 199, 635, 636, 637, 638, 639, 643, 654, 757, 763, 783, 802], "cp": 329, "cpp": [761, 773, 791], "cpplint": 20, "cpu": [4, 8, 9, 13, 20, 30, 41, 61, 62, 88, 107, 111, 117, 118, 123, 124, 128, 129, 199, 200, 206, 207, 230, 231, 237, 238, 275, 276, 279, 283, 286, 294, 371, 372, 373, 492, 493, 494, 501, 505, 506, 508, 509, 510, 511, 514, 519, 520, 580, 587, 588, 639, 645, 657, 658, 688, 700, 729, 742, 743, 757, 758, 760, 761, 764, 767, 768, 778, 779, 780, 784, 785, 786, 789, 792, 795, 802, 807, 808], "cpu_best_practis": [767, 776, 778, 784, 785, 786], "cpu\uc5d0\uc11c\ub9cc": 742, "cpu\uc758": 743, "crawlscript": 691, "creat": [1, 3, 4, 5, 8, 11, 12, 20, 21, 26, 27, 40, 41, 43, 47, 50, 54, 55, 56, 57, 59, 60, 63, 64, 69, 70, 76, 78, 79, 80, 81, 86, 87, 88, 89, 100, 101, 103, 106, 108, 115, 117, 118, 123, 124, 126, 127, 129, 135, 136, 144, 152, 153, 154, 181, 187, 195, 210, 224, 234, 236, 237, 238, 275, 276, 277, 281, 282, 293, 298, 299, 326, 327, 358, 361, 374, 375, 376, 377, 379, 380, 381, 382, 401, 485, 496, 497, 502, 503, 507, 512, 516, 517, 518, 555, 557, 558, 559, 560, 571, 575, 588, 590, 591, 598, 617, 620, 628, 630, 631, 633, 635, 636, 637, 639, 640, 641, 644, 645, 646, 653, 655, 656, 661, 662, 663, 667, 669, 676, 716, 718, 720, 730, 731, 747, 758, 759, 760, 761, 768, 771, 772, 779, 780, 785, 789, 791, 792, 795, 798, 801, 802, 808], "create_block": [125, 580], "create_dev_conda_env": 758, "create_featur": 790, "create_formats_": [55, 88, 657, 808], "createcacul": 21, "createcalcul": 21, "creation": [4, 200, 635, 666, 769, 773], "credit": [768, 769, 770, 771, 772, 773, 783, 784, 785, 786, 807, 808], "crisi": 162, "criteria": 779, "criterion": [182, 367, 370, 802, 807], "critic": [8, 20, 21, 367, 368, 369, 370, 643, 792], "cross": [72, 100, 101, 638, 639, 652, 672, 737, 755, 771, 785, 790, 791, 802], "cross_entropi": [368, 369, 663, 669, 671, 673, 709, 711, 713, 747, 753, 754, 756, 760, 762, 768, 770, 772, 784, 785, 790, 791, 808], "cross_reduc": 72, "cross_sum": 72, "crossentropyloss": [367, 370, 635, 663, 680, 720, 759, 779, 780, 807], "crucial": [367, 368], "cs224w": [768, 784, 808], "csc": [31, 40, 55, 88, 129, 229, 275, 276, 510, 512, 519, 558, 764, 808], "csr": [31, 40, 55, 117, 118, 124, 129, 229, 238, 275, 276, 510, 512, 519, 520, 559, 764, 808], "csr_csc_g": 55, "csr_g": 55, "csr_matrix": [124, 238], "csrc": [773, 791], "csrmmbackward": 117, "csv": [144, 628, 630, 639, 676, 716, 723], "csvdataset": 631, "csvdatatset": 631, "csv\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u683c\u5f0f": 686, "csv\uac00": 727, "ctx": [30, 61, 62], "cu": 329, "cu118": [759, 760, 761, 762], "cuda": [4, 13, 88, 107, 109, 123, 124, 200, 236, 237, 238, 275, 276, 283, 336, 337, 338, 371, 373, 514, 525, 548, 581, 645, 656, 659, 661, 663, 688, 698, 699, 701, 703, 729, 740, 741, 742, 744, 746, 747, 758, 759, 760, 761, 762, 768, 784, 785, 786, 802, 807, 808], "cuda_g": [645, 688, 729], "cuda\ub294": 742, "cudf": 236, "cugraph": [12, 109, 236, 336, 337, 338, 581], "cugraph_g": [109, 236, 581], "cugraph_graph": 236, "cugraphbaseconv": [336, 337, 338], "cumsum": 637, "cup": [147, 148], "cur": [637, 722], "current": [1, 4, 13, 19, 20, 26, 27, 55, 128, 135, 136, 141, 190, 210, 221, 225, 228, 229, 233, 295, 296, 348, 351, 401, 501, 507, 548, 636, 655, 662, 757, 758, 780, 785, 786, 795], "current_devic": 200, "curv": [771, 792], "cuspars": [117, 118], "custom": [4, 184, 203, 327, 356, 501, 580, 628, 629, 637, 639, 642, 654, 656, 657, 659, 661, 664, 667, 673, 715, 744, 773, 784], "customgraphconv": [660, 702, 745], "customheterographconv": [660, 702, 745], "customiz": 673, "customized_parser_dataset": 631, "cut": [229, 296, 639, 723], "cuthil": 501, "cutoff": [171, 333], "cv": [171, 172], "cycl": [138, 166, 179, 234, 277, 421, 485, 798], "cycle_s": 179, "cython": [20, 758], "d": [4, 8, 13, 20, 135, 136, 137, 165, 171, 172, 222, 232, 296, 330, 332, 335, 339, 346, 351, 358, 360, 361, 363, 364, 366, 367, 370, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 390, 391, 394, 395, 399, 400, 403, 444, 447, 496, 497, 545, 555, 557, 558, 559, 560, 562, 563, 564, 565, 567, 571, 575, 590, 591, 613, 623, 624, 625, 631, 646, 655, 662, 671, 711, 754, 759, 760, 761, 764, 771, 785, 789, 791, 801, 807], "d1": [330, 444, 447, 764], "d2": [330, 444, 447, 764], "d_": [232, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 362, 363, 364, 398, 791], "d_1": [649, 692, 733], "d_2": [649, 692, 733], "d_e": 762, "d_e_inv": 762, "d_ff": [378, 379], "d_hat": [759, 760, 764], "d_hat_invsqrt": [759, 760], "d_head": [378, 379], "d_i": 8, "d_k": 802, "d_model": [378, 379], "d_t": [232, 368, 369], "d_v": 762, "d_v_invsqrt": 762, "dai": [20, 160, 173, 630], "damm": 795, "data": [0, 1, 3, 4, 5, 6, 12, 13, 21, 25, 26, 27, 33, 34, 40, 42, 43, 45, 46, 47, 50, 52, 53, 54, 56, 57, 58, 59, 60, 67, 69, 72, 73, 74, 76, 86, 87, 88, 90, 91, 92, 93, 99, 102, 103, 107, 111, 112, 113, 114, 115, 119, 120, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 211, 212, 213, 214, 215, 221, 225, 227, 228, 229, 234, 235, 237, 238, 239, 275, 276, 277, 281, 282, 283, 288, 293, 295, 297, 325, 327, 329, 330, 337, 344, 361, 367, 368, 369, 370, 371, 373, 397, 399, 401, 403, 405, 421, 422, 444, 485, 486, 493, 494, 501, 502, 512, 514, 519, 520, 530, 531, 532, 535, 536, 548, 558, 559, 560, 580, 582, 583, 584, 586, 587, 588, 615, 624, 629, 632, 635, 638, 640, 641, 643, 644, 645, 646, 647, 648, 650, 652, 655, 658, 660, 662, 663, 665, 668, 669, 672, 673, 674, 675, 676, 677, 678, 679, 681, 683, 690, 693, 695, 698, 699, 702, 708, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 729, 731, 732, 734, 737, 740, 741, 745, 747, 752, 753, 754, 755, 756, 758, 759, 760, 761, 764, 768, 769, 770, 771, 773, 779, 780, 789, 790, 791, 792, 795, 798, 801, 802, 808], "data0": 631, "data1": 631, "data_dict": [129, 276], "data_it": 802, "data_path": 144, "data_root_dir": [229, 638, 639, 682, 723], "data_type_dict": [633, 678, 718], "databas": [160, 773], "dataflow": 791, "datafram": [144, 236, 631], "datail": 172, "dataload": [9, 10, 12, 174, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 325, 329, 367, 370, 401, 632, 633, 635, 636, 655, 656, 657, 658, 659, 661, 662, 671, 677, 678, 680, 681, 698, 699, 700, 701, 703, 711, 717, 718, 720, 721, 740, 741, 742, 743, 744, 746, 754, 761, 772, 776, 779, 780, 784, 785, 786, 791, 795, 807, 808], "dataloader\u4e2d\u8fd0\u884c": 681, "dataloader\u5728\u6bcf\u4e2a\u8bad\u7ec3\u5468\u671f\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u91c7\u6837\u5de5\u4f5c\u8fdb\u7a0b": 681, "dataloader\u76f8\u540c\u7684\u63a5\u53e3": 681, "dataloader\ub294": 721, "dataloader\ub97c": [741, 746], "dataloader\uc5d0\uc11c": 721, "dataloader\uc640": 721, "datapars": 631, "datapoint": [186, 197], "dataset": [4, 12, 13, 20, 22, 24, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 193, 195, 196, 197, 200, 203, 325, 367, 370, 628, 629, 630, 634, 635, 636, 655, 661, 663, 668, 671, 673, 677, 678, 680, 681, 708, 711, 715, 717, 718, 720, 721, 752, 754, 759, 760, 761, 762, 765, 767, 770, 771, 772, 774, 775, 786, 789, 792, 807], "dataset_nam": [629, 631, 675, 715], "dataset\ub97c": 714, "datatyp": [663, 764], "dateset": 765, "datset": [24, 166], "dcmake_configuration_typ": 758, "dcmake_cxx_flag": 758, "dd": [24, 164, 177, 802], "ddgl_export": 758, "ddmlc_force_shared_crt": 758, "ddp": [807, 808], "ddp_seed": [200, 203], "de": 802, "deal": [120, 660, 671, 799, 805], "debian": 758, "debug": [4, 22], "dec": 802, "dec_graph": [669, 709, 753], "decai": 351, "decid": [8, 21, 129, 276, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 365, 646, 655, 798, 802], "declar": 636, "decod": [378, 802], "decompos": [330, 361, 795, 802], "decomposit": [330, 337, 361, 405, 661, 790], "decomposition\uc740": 746, "decreas": [367, 368], "deep": [4, 22, 199, 209, 351, 354, 380, 599, 666, 671, 673, 764, 765, 766, 769, 795, 798, 799, 805], "deepchem": [633, 678, 718], "deepcopi": 798, "deepset": 394, "deepset_encod": 394, "deepwalk": 768, "def": [4, 5, 9, 19, 21, 52, 53, 69, 72, 99, 208, 239, 240, 251, 252, 253, 254, 327, 357, 359, 367, 368, 369, 370, 401, 404, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 630, 631, 632, 633, 634, 636, 637, 650, 651, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 669, 671, 672, 673, 675, 676, 677, 678, 679, 681, 693, 694, 698, 699, 700, 701, 702, 703, 705, 706, 707, 709, 711, 712, 713, 715, 716, 717, 718, 719, 721, 734, 736, 740, 741, 743, 744, 745, 746, 747, 749, 750, 751, 753, 754, 755, 756, 759, 760, 761, 762, 764, 768, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "defalt": 390, "default": [4, 6, 8, 9, 13, 22, 26, 27, 30, 31, 33, 34, 40, 47, 50, 52, 53, 60, 61, 62, 78, 80, 81, 87, 88, 115, 116, 120, 121, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 190, 191, 195, 197, 198, 199, 200, 203, 204, 206, 209, 216, 221, 224, 225, 228, 229, 234, 235, 237, 238, 275, 276, 277, 280, 281, 282, 283, 284, 286, 288, 295, 296, 299, 325, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 390, 391, 392, 393, 394, 395, 396, 397, 401, 403, 421, 422, 485, 487, 489, 492, 493, 494, 495, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 578, 579, 580, 585, 586, 587, 588, 596, 601, 606, 610, 612, 613, 614, 629, 631, 636, 637, 638, 639, 640, 646, 647, 650, 655, 715, 730, 731, 758, 761, 764, 776, 779, 780, 798, 802], "defin": [4, 5, 8, 12, 26, 27, 33, 34, 52, 53, 72, 90, 91, 92, 93, 99, 112, 152, 200, 210, 232, 233, 239, 240, 251, 252, 253, 254, 286, 287, 329, 333, 339, 351, 352, 356, 367, 368, 369, 370, 378, 399, 400, 420, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 631, 635, 636, 644, 647, 649, 650, 655, 663, 669, 671, 672, 673, 693, 713, 720, 731, 734, 747, 753, 755, 756, 759, 760, 762, 764, 789, 791, 792, 802, 807], "definit": [65, 71, 229, 333, 566, 568, 569, 570, 635, 641, 656, 659, 673, 790, 791, 795], "deform": 801, "defus": [204, 508], "deg": [666, 706, 750], "deg_g": 791, "deg_lg": 791, "deg_proj": 791, "degg_batch": 174, "deglg_batch": 174, "degrad": 204, "degre": [4, 12, 59, 86, 128, 161, 173, 174, 207, 331, 336, 337, 338, 339, 341, 343, 346, 347, 349, 350, 351, 354, 356, 360, 363, 364, 369, 370, 391, 423, 603, 604, 609, 613, 638, 639, 659, 666, 759, 760, 762, 764, 769, 770, 789, 791, 792, 795], "degree_as_nlabel": 161, "degree_embed": 391, "degree_encod": 391, "degree\uac00": 750, "degree\ub4e4": 723, "degree\uc758": 744, "del": 798, "delet": [20, 498, 499], "delimit": 639, "deliv": 798, "delta": [171, 172, 339, 360], "demo": 761, "demonstr": [41, 399, 400, 588, 631, 668, 669, 763, 773, 779, 793, 795, 802, 805], "denomin": [4, 9, 348], "denot": [232, 333, 347, 354, 364, 403, 612, 759, 760, 789, 790, 791, 792, 795], "dens": [8, 12, 216, 279, 340, 341, 342, 390, 393, 444, 445, 447, 504, 549, 553, 554, 561, 564, 572, 636, 656, 664, 704, 721, 741, 748, 760, 761, 764], "densiti": [174, 187, 504, 643, 686, 727, 791, 798], "departur": 795, "depend": [8, 20, 30, 88, 124, 129, 200, 201, 202, 204, 205, 206, 210, 237, 238, 275, 276, 336, 337, 338, 401, 496, 497, 508, 631, 639, 642, 652, 654, 655, 656, 657, 658, 660, 661, 664, 739, 783, 785, 786, 792, 795, 802], "dependency\ub4e4\uc744": 746, "dependency\uc5d0\uc11c": 741, "deploi": [793, 805], "deprec": [115, 141, 164, 170, 171, 172, 177, 579, 589, 791], "depth": [1, 219, 220, 505], "deriv": [339, 669, 760], "desc": 761, "descend": [590, 591], "descent": [13, 283, 371, 373, 514, 654, 739, 807], "describ": [5, 20, 42, 45, 46, 73, 74, 102, 163, 229, 346, 361, 405, 580, 585, 593, 594, 599, 600, 601, 602, 639, 650, 654, 661, 666, 668, 669, 672, 760, 762, 768, 771, 773, 783, 784, 789, 791, 792, 798, 801], "descript": [60, 87, 129, 156, 171, 172, 275, 276, 790, 802], "deserv": 792, "design": [4, 146, 150, 169, 233, 333, 510, 636, 637, 639, 652, 655, 671, 764, 791, 802], "desir": [19, 21, 216, 504, 603, 604, 609, 638], "desktop": 776, "despit": 639, "dest": 798, "dest_list": 798, "destin": [4, 5, 8, 25, 26, 29, 30, 31, 33, 38, 42, 43, 44, 46, 47, 50, 51, 52, 54, 56, 59, 60, 61, 62, 72, 78, 79, 81, 86, 87, 89, 90, 91, 92, 93, 99, 103, 104, 106, 108, 112, 113, 116, 117, 118, 121, 123, 124, 125, 129, 190, 204, 206, 210, 216, 217, 222, 232, 235, 236, 238, 275, 276, 294, 299, 327, 334, 336, 337, 338, 340, 341, 342, 343, 344, 347, 349, 350, 359, 362, 398, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 435, 437, 439, 441, 443, 445, 446, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 493, 496, 498, 500, 501, 504, 510, 517, 519, 520, 580, 595, 596, 602, 611, 619, 631, 638, 639, 647, 650, 652, 659, 661, 665, 666, 667, 731, 737, 740, 769, 770, 771, 773, 783, 784, 785, 786, 791, 795, 802], "destination_typ": [647, 690, 731], "destroi": [4, 636], "destroy_process_group": 807, "dests_prob": 798, "dests_scor": 798, "detach": [325, 761, 770, 779, 784, 791, 808], "detail": [4, 8, 20, 21, 90, 199, 204, 206, 207, 210, 212, 213, 214, 215, 220, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 503, 509, 566, 568, 569, 570, 627, 631, 633, 635, 636, 637, 639, 643, 650, 653, 656, 657, 661, 666, 673, 757, 758, 765, 770, 773, 779, 780, 784, 792, 798, 802, 807], "detect": [142, 157, 159, 173, 174, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 793, 805], "determin": [4, 25, 230, 231, 339, 360, 397, 504, 508, 509, 510, 511, 586, 637, 639, 647, 663, 665, 666, 801], "determinist": [129, 188, 276, 327, 501], "dev": [174, 175, 197, 663, 758, 759, 760, 761, 762, 764, 789, 792, 795], "dev_data": 175, "dev_id": 808, "devel": 758, "develop": [21, 26, 27, 29, 30, 40, 43, 44, 55, 81, 94, 95, 100, 101, 103, 104, 108, 113, 114, 299, 498, 499, 585, 586, 636, 654, 656, 661, 670, 758, 769, 776, 779], "deviat": [339, 360, 397], "devic": [4, 12, 30, 33, 34, 42, 45, 47, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 73, 86, 87, 88, 92, 93, 99, 102, 107, 123, 124, 128, 129, 198, 199, 200, 201, 202, 204, 206, 207, 234, 235, 236, 237, 238, 275, 276, 277, 281, 282, 283, 336, 337, 338, 371, 372, 373, 401, 421, 422, 485, 492, 493, 494, 501, 507, 508, 509, 510, 511, 514, 528, 548, 560, 635, 645, 646, 656, 657, 658, 659, 661, 662, 663, 680, 688, 698, 699, 700, 701, 703, 720, 729, 740, 741, 742, 743, 744, 746, 747, 760, 761, 764, 770, 784, 785, 786, 791, 795, 802, 807, 808], "device_count": 808, "device_id": [807, 808], "device_typ": 663, "df": [219, 220, 236, 488, 631], "dfrac": [390, 761], "dfs_labeled_edg": 220, "dfs_labeled_edges_gener": 488, "dgl": [12, 13, 19, 22, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 641, 642, 644, 645, 646, 649, 650, 651, 652, 654, 655, 656, 658, 659, 660, 661, 663, 664, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 687, 688, 689, 690, 691, 693, 694, 695, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 728, 729, 730, 732, 734, 735, 736, 737, 740, 741, 743, 744, 745, 746, 747, 748, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 765, 767, 770, 771, 773, 775, 776, 779, 780, 783, 793, 796, 797, 798, 801, 803, 807, 808], "dgl_declare_object_type_info": 21, "dgl_download_dir": 22, "dgl_g": 760, "dgl_home": 20, "dgl_library_path": 20, "dgl_log_debug": 22, "dgl_mxnet_set_np_shap": 758, "dgl_register_glob": 21, "dgl_repo": 22, "dgl_warn": [784, 785, 786, 795, 798, 801], "dglarg": 21, "dglbackend": [20, 22, 758, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 807, 808], "dglblock": [125, 129, 336, 337, 338, 580], "dglbuiltindataset": [132, 138, 139, 140, 142, 143, 155, 156, 158, 160, 161, 162, 164, 167, 168, 173, 175, 177, 179, 180, 182, 184, 185, 630, 633, 676, 678, 716, 718], "dgldataset": [135, 136, 137, 144, 163, 166, 170, 171, 172, 174, 187, 188, 628, 631, 633, 668, 674, 675, 678, 708, 714, 718, 752], "dgldataset\u7c7b": [674, 691], "dgldefaultdir": 22, "dglerror": [26, 27, 94, 95, 331, 343, 346, 347, 348, 349, 350, 351, 354, 356, 363, 580, 645, 647, 688, 690, 729, 731], "dglfunccal": 21, "dglgraph": [0, 4, 5, 6, 8, 12, 21, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 194, 199, 200, 212, 213, 214, 215, 219, 220, 223, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 299, 325, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 403, 404, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 626, 631, 632, 633, 634, 636, 637, 639, 641, 643, 644, 646, 647, 656, 659, 666, 671, 677, 678, 681, 684, 686, 687, 688, 689, 690, 698, 699, 701, 706, 711, 717, 718, 719, 721, 722, 723, 725, 727, 728, 730, 731, 740, 741, 744, 750, 754, 769, 771, 772, 789, 790, 791, 792, 795, 798, 801, 808], "dglgraphproppreddataset": [135, 632, 677, 717, 761], "dglgraph\ub85c": 727, "dgllinkproppreddataset": [632, 677, 717, 780], "dglnn": [327, 656, 659, 661, 671, 673, 699, 701, 703, 711, 713, 741, 744, 746, 754, 756, 761, 779, 780], "dglnodeproppreddataset": [632, 677, 717, 779, 784, 785, 786, 808], "dglretvalu": 21, "dglroutinglay": 801, "dglsp": [11, 522, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 759, 760, 761, 762, 764], "dglwarn": [784, 785, 786, 795, 798, 801], "dgl\u4e0d\u63d0\u4f9b\u5bf9\u6765\u81ea\u591a\u4e2a\u8bad\u7ec3\u5668\u7684\u5e76\u53d1\u5199\u5165\u7684\u4fdd\u62a4": 681, "dgl\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 702, "dgl\u4e2d\u7684": 701, "dgl\u4e3a\u5206\u5e03\u5f0f\u5f20\u91cf\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u5355\u673a\u666e\u901a\u5f20\u91cf\u7684\u63a5\u53e3": 681, "dgl\u4e5f\u4f1a\u6839\u636e\u8fb9\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f": 689, "dgl\u4e5f\u652f\u6301\u4ece\u5176\u4ed6\u7684\u6570\u636e\u6e90\u6765\u521b\u5efa\u56fe\u5bf9\u8c61": 689, "dgl\u4e5f\u652f\u6301\u76f4\u63a5\u4eces3": 686, "dgl\u4ec5\u5141\u8bb8\u521b\u5efa\u5355\u4e2adistgraph\u5bf9\u8c61": 681, "dgl\u4ec5\u652f\u6301\u5bc6\u96c6\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 681, "dgl\u4ee5\u540e\u5c06\u4e3a\u7a00\u758f\u5d4c\u5165\u6dfb\u52a0\u66f4\u591a\u7684\u4f18\u5316\u5668": 681, "dgl\u4f18\u5316\u4e86\u6d88\u606f\u4f20\u9012\u7684\u5185\u5b58\u6d88\u8017\u548c\u8ba1\u7b97\u901f\u5ea6": 694, "dgl\u4f1a\u5212\u5206\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 681, "dgl\u4f1a\u5728\u5185\u90e8\u5c061\u6761\u65e0\u5411\u8fb9\u8f6c\u6362\u4e3a2\u6761\u6709\u5411\u8fb9": 686, "dgl\u4f1a\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 680, "dgl\u4f1a\u5c06\u5b83\u4eec\u5206\u7247\u5e76\u5b58\u50a8\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u673a\u4e0a": 681, "dgl\u4f1a\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u6bcf\u6761\u8fb9": 687, "dgl\u4f1a\u68c0\u67e5\u8f93\u5165\u56fe\u4e2d\u662f\u5426\u6709\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9": 706, "dgl\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u7684\u6574\u578b\u5f20\u91cf": 689, "dgl\u4f7f\u7528\u4e00\u4e2a\u5305\u542b2\u4e2a\u8282\u70b9\u5f20\u91cf\u7684\u5143\u7ec4": 689, "dgl\u4f7f\u7528\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u6765\u8868\u793a\u4e00\u4e2a\u8282\u70b9": 689, "dgl\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684meti": 682, "dgl\u4fdd\u8bc1\u8fb9\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u4e0e\u751f\u6210\u7684\u5757\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u76f8\u540c": 699, "dgl\u5047\u5b9a\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7684\u9700\u8981\u5408\u5e76\u7684\u7279\u5f81\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u6570\u636e\u7c7b\u578b": 690, "dgl\u5185\u7f6e\u4e86\u5e38\u89c1\u7684\u56fe\u8bfb\u51fa\u51fd\u6570": 711, "dgl\u5185\u7f6e\u7684nn\u6a21\u5757\u5982\u679c\u5728forward\u51fd\u6570\u4e2d\u652f\u6301\u4e00\u4e2a\u53ef\u9009\u7684": 710, "dgl\u5185\u7f6e\u7684\u6d88\u606f": 706, "dgl\u53ef\u4ee5\u5904\u7406\u6700\u591a": 689, "dgl\u53ef\u4ee5\u95f4\u63a5\u5730\u4ece\u8fd9\u4e9b\u6765\u6e90\u521b\u5efa\u56fe": 686, "dgl\u540c\u6837\u652f\u6301\u5b83\u5728mxnet\u548ctensorflow\u540e\u7aef\u91cc\u7684\u5b9e\u73b0": [702, 711], "dgl\u548c\u8fd9\u4e9b\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u5176\u72ec\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c": 704, "dgl\u5728": 674, "dgl\u5728\u5185\u90e8\u5c06scipy\u77e9\u9635\u548cnetworkx\u56fe\u8f6c\u6362\u4e3a\u5f20\u91cf\u6765\u521b\u5efa\u56fe": 686, "dgl\u5728\u547d\u540d\u7a7a\u95f4": 693, "dgl\u5728\u96c6\u7fa4\u6240\u6709\u673a\u5668\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u8bad\u7ec3\u811a\u672c": 680, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6574\u56fe\u5206\u7c7b\u7684\u6837\u4f8b": 711, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5206\u5e03\u5f0f\u7ec4\u4ef6\u4ee5\u652f\u6301\u5206\u5e03\u5f0f\u8bad\u7ec3": 680, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7ba1\u9053": 697, "dgl\u5b9e\u73b0\u4e86\u591a\u4e2a\u53ef\u7528\u4e8e\u751f\u6210\u8fb9\u754c\u7684\u51fd\u6570": 698, "dgl\u5bf9\u8fb9\u754c\u5b50\u56fe\u505a\u4e86\u4e00\u4e2a\u8f6c\u6362": 698, "dgl\u5c06\u56fe\u5212\u5206\u7ed3\u679c\u5b58\u50a8\u5728\u8f93\u51fa\u76ee\u5f55\u4e2d\u7684\u591a\u4e2a\u6587\u4ef6\u4e2d": 682, "dgl\u5c06\u9700\u8981\u8ba1\u7b97gnn\u8f93\u51fa\u7684\u8282\u70b9\u79f0\u4e3a": 698, "dgl\u5df2\u7ecf\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528\u7684": 704, "dgl\u5efa\u8bae": 693, "dgl\u5efa\u8bae\u4f7f\u7528\u8282\u70b9\u63a9\u7801\u6765\u6307\u5b9a\u6570\u636e\u96c6\u7684\u5212\u5206": 678, "dgl\u5efa\u8bae\u7528\u6237\u5b9e\u73b0\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e\u7684\u51fd\u6570": 679, "dgl\u5efa\u8bae\u7528\u6237\u5c3d\u91cf\u51cf\u5c11\u8fb9\u7684\u7279\u5f81\u7ef4\u6570": 694, "dgl\u5efa\u8bae\u8ba9": 678, "dgl\u5efa\u8bae\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ece\u70b9\u5230\u8fb9\u7684\u5185\u5b58\u62f7\u8d1d": 694, "dgl\u63a8\u8350\u4f7f\u7528tensor\u4f5c\u4e3adgl": 689, "dgl\u63a8\u8350\u7528\u6237\u5c06\u56fe\u6570\u636e\u5904\u7406\u4e3a": 674, "dgl\u63a8\u8350\u91cd\u65b0\u6392\u5217\u56fe\u7684\u8282\u70b9": 678, "dgl\u63d0\u4f9b": 681, "dgl\u63d0\u4f9b\u4e86": [681, 690, 698, 707], "dgl\u63d0\u4f9b\u4e864\u4e2a\u51fd\u6570\u8ba9\u4efb\u52a1\u53d8\u5f97\u7b80\u5355": 679, "dgl\u63d0\u4f9b\u4e86api\u4ee5\u4ece\u78c1\u76d8\u4e2d\u52a0\u8f7d\u6216\u5411\u78c1\u76d8\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u56fe": 686, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2aapi\u4ee5\u6267\u884c\u8fd9\u4e24\u4e2a\u6b65\u9aa4": 682, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u529f\u80fd\u7684\u51fd\u6570": 710, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684rgcn\u7684\u7aef\u5230\u7aef\u7684\u4f8b\u5b50": 713, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a00\u758f\u7684adagrad\u4f18\u5316\u5668": 681, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u793a\u4f8b": 703, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u56fe\u5377\u79ef\u6a21\u5757": 713, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177": 680, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784": 681, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784\u548c\u591a\u79cdapi": 681, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7ea7\u522b\u7684api": 681, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u811a\u672c\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 683, "dgl\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b0\u7c7b\u578b\u7684\u8bed\u6cd5": 690, "dgl\u63d0\u4f9b\u4e86\u51e0\u4e2a\u90bb\u5c45\u91c7\u6837\u7c7b": 703, "dgl\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u7684api": 680, "dgl\u63d0\u4f9b\u4e86\u540d\u4e3a": 678, "dgl\u63d0\u4f9b\u4e86\u5728\u540c\u6784\u56fe\u4e0a\u505a\u94fe\u8def\u9884\u6d4b\u7684\u4e00\u4e2a\u793a\u4f8b": 701, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u91c7\u6837\u7684\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668": 681, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u542f\u52a8\u96c6\u7fa4\u4e2d\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684tool": 683, "dgl\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684": 703, "dgl\u63d0\u4f9b\u4e86\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5": 689, "dgl\u63d0\u4f9b\u7684\u4e00\u4e9b\u91c7\u6837\u65b9\u6cd5\u4e5f\u652f\u6301\u5f02\u6784\u56fe": 703, "dgl\u652f\u6301": 693, "dgl\u652f\u6301\u4f7f\u7528": 689, "dgl\u652f\u6301\u5185\u7f6e\u7684\u805a\u5408\u51fd\u6570": 693, "dgl\u73b0\u5728\u652f\u6301": 693, "dgl\u7684gin\u6837\u4f8b": 711, "dgl\u7684graphsage\u6837\u4f8b": 713, "dgl\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u5177\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u4ea4\u4e92\u8fdb\u7a0b": 680, "dgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u5c0f\u6279\u6b21\u751f\u6210\u4e09\u9879": 701, "dgl\u786e\u4fdd\u5757\u7684\u8f93\u51fa\u8282\u70b9\u5c06\u59cb\u7ec8\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 698, "dgl\u793e\u533a\u7684\u4e00\u7fa4\u70ed\u5fc3\u8d21\u732e\u8005\u628adgl\u7528\u6237\u6307\u5357\u8bd1\u6210\u4e86\u4e2d\u6587": 691, "dgl\u79f0\u4e4b\u4e3a": 689, "dgl\u79f0\u5b83\u4eec\u4e3a\u7ea2\u8272\u8282\u70b98\u5728\u7b2c\u4e8c\u4e2agnn\u5c42\u7684": 698, "dgl\u79f0\u5b83\u4eec\u4e3a\u89c4\u8303\u8fb9\u7c7b\u578b": 690, "dgl\u79f0\u8fd9\u79cd\u4ec5\u5305\u542b\u5fc5\u8981\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u4e8c\u5206\u56fe\u4e3a\u4e00\u4e2a": 698, "dgl\u8981\u6c42\u9884\u5904\u7406\u56fe\u6570\u636e\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 682, "dgl\u901a\u8fc7\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784": 684, "dgl\u91c7\u7528\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5": 680, "dgl\u91cc\u5bf9\u56fe\u8fdb\u884c\u53d8\u6362\u7684\u51fd\u6570\u4f1a\u53bb\u6389\u56fe\u4e0a\u7684\u6279\u6b21\u4fe1\u606f": 711, "dgl\u9ed8\u8ba4\u4f7f\u7528int64": 689, "dgl\ub294": [730, 746, 754], "dgl\uc5d0\uc11c": [722, 723, 726, 730, 731, 734, 741, 746, 750, 752], "dgl\uc5d0\uc11c\ub294": [718, 719, 730, 736, 740, 741, 744, 746], "dgl\uc740": [714, 715, 718, 719, 720, 721, 722, 723, 724, 725, 727, 730, 731, 734, 735, 736, 739, 740, 745, 747, 748, 753, 754, 756], "dgl\uc758": [718, 720, 721, 723, 731, 733, 734, 736, 744, 745, 746, 750], "dgl\uc774": [723, 740, 741, 746], "dgmg": [799, 805], "dgmg_cycl": 798, "dgmg_msg": 798, "dgmg_reduc": 798, "dgmgskeleton": 798, "dgn": 339, "dh": 761, "diag": [552, 556, 561, 562, 563, 574, 759, 760, 762, 764], "diagmatrix": [535, 536], "diagon": [330, 341, 351, 361, 364, 555, 556, 560, 561, 562, 759, 760, 762, 791], "diagram": 639, "dict": [4, 19, 26, 27, 42, 45, 46, 55, 72, 73, 74, 102, 113, 114, 119, 128, 129, 144, 193, 194, 195, 196, 198, 200, 203, 204, 206, 209, 210, 212, 213, 214, 215, 223, 225, 226, 227, 229, 230, 231, 234, 276, 277, 281, 282, 288, 295, 299, 326, 327, 328, 329, 367, 368, 369, 370, 421, 485, 486, 501, 508, 509, 511, 512, 580, 588, 594, 626, 634, 639, 661, 703, 719, 740, 746, 771, 795, 798, 801, 802], "dict_kei": 327, "dictionari": [21, 42, 45, 46, 73, 74, 100, 101, 102, 119, 120, 129, 144, 200, 210, 225, 229, 231, 234, 276, 277, 281, 282, 288, 326, 368, 369, 421, 485, 508, 509, 511, 588, 626, 631, 639, 647, 652, 655, 656, 659, 661, 667, 669, 673, 723, 737, 751, 768, 771, 773], "dictionary\uac00": 723, "dictionary\ub294": 723, "dictionary\ub4e4\uc744": 746, "dictionary\ub97c": [723, 744], "dictionary\uc5d0": 723, "dictionary\uc640": 744, "dict\u5bf9\u8c61": 679, "differ": [4, 5, 10, 50, 60, 72, 87, 90, 91, 112, 115, 124, 129, 133, 134, 135, 136, 137, 147, 148, 149, 154, 155, 166, 171, 172, 177, 182, 204, 206, 207, 209, 210, 219, 220, 224, 229, 232, 237, 238, 275, 276, 281, 282, 295, 296, 326, 327, 329, 344, 360, 364, 369, 370, 373, 394, 404, 508, 510, 514, 579, 585, 631, 633, 636, 639, 640, 641, 642, 644, 647, 652, 654, 656, 658, 659, 661, 663, 664, 665, 666, 667, 671, 672, 673, 728, 731, 761, 762, 764, 769, 772, 779, 784, 785, 786, 790, 791, 792, 793, 795, 796, 798, 801, 802, 805, 807, 808], "differenti": [117, 118, 656, 792], "diffus": [603, 604, 609, 613, 763], "diffuse_op": 613, "digit": [189, 190], "digraph": [123, 237, 587, 643, 686, 727], "dii": 20, "dim": [72, 251, 252, 253, 254, 283, 327, 354, 394, 395, 514, 539, 542, 543, 544, 545, 546, 565, 590, 591, 620, 650, 651, 673, 693, 694, 713, 734, 736, 756, 759, 760, 761, 764, 770, 786, 789, 790, 792, 798, 801], "dim_ff": 802, "dim_model": 802, "dim_nfeat": 772, "dimens": [4, 5, 8, 9, 13, 19, 136, 146, 150, 169, 283, 299, 327, 335, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 354, 355, 356, 357, 359, 361, 362, 363, 364, 365, 366, 367, 371, 373, 380, 391, 395, 401, 448, 492, 514, 539, 542, 543, 544, 545, 546, 553, 561, 565, 567, 590, 591, 637, 644, 650, 651, 652, 665, 671, 759, 761, 764, 768, 770, 772, 785, 789, 790, 792, 802, 807], "dimension": [8, 155, 283, 346, 348, 352, 354, 371, 373, 505, 506, 507, 514, 644, 651, 760, 769, 772], "dipol": [171, 172], "dir": [339, 639, 723], "dir1": 339, "direct": [6, 121, 122, 124, 132, 145, 151, 155, 171, 176, 178, 183, 219, 220, 236, 237, 283, 285, 339, 391, 488, 490, 491, 493, 515, 579, 592, 615, 631, 642, 643, 646, 726, 769, 770, 783, 786, 791, 798, 801], "direction": 642, "directli": [8, 20, 63, 70, 88, 107, 108, 111, 116, 129, 144, 200, 234, 277, 281, 282, 283, 288, 337, 371, 373, 421, 485, 512, 514, 595, 596, 631, 643, 762, 764, 770, 771, 773, 790], "directoractor": 132, "directori": [20, 22, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 190, 191, 192, 199, 629, 630, 634, 638, 640, 715, 716, 719, 758, 779, 802], "dirnam": 192, "disabl": [4, 8, 650, 758, 776, 784], "disable_shared_mem": 4, "disallow": 507, "disambigu": 647, "disappear": [4, 636], "disast": 791, "discard": [26, 27, 113, 114, 115, 116, 128, 234, 235, 277, 280, 286, 294, 421, 422, 485, 499, 502, 579, 588, 589, 671, 761], "discov": [802, 803, 805], "discoveri": 798, "discret": [604, 792], "disct": 580, "discuss": [20, 580, 668, 673, 791], "diseas": [508, 509, 647, 690, 731], "disease\u6cbb\u7597\u8fb9": 690, "disease\u8282\u70b9": 690, "disjoint": 120, "disk": [4, 135, 136, 137, 152, 193, 196, 629, 630, 634, 639, 715, 771, 773], "dislik": [668, 669, 708, 709, 752, 753], "dislike_dst": [668, 708, 752], "dislike_src": [668, 708, 752], "dispatch": [8, 638], "dispatch_data": 639, "displai": [55, 760, 795], "dist": [283, 371, 372, 373, 395, 396, 492, 514, 515, 761, 767, 782, 807], "dist_anim": 801, "dist_graph": [636, 681, 721], "dist_init_method": 808, "dist_list": 801, "dist_matrix": 801, "distanc": [6, 171, 172, 232, 283, 333, 371, 372, 373, 395, 396, 492, 514, 515, 798], "distdataload": [4, 201, 202, 635, 636, 680, 681, 720, 721], "distedgedataload": [636, 681, 780], "distembed": [4, 635, 680, 681, 720], "distgraph": [4, 201, 202, 222, 223, 229, 230, 231, 635, 637, 639, 680, 681, 682, 720, 722, 723, 779, 780], "distgraphserv": 4, "distgraph\u5c06\u56fe\u6570\u636e\u52a0\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u4e2d": 681, "distgraph\uc758": 721, "distinct": [139, 631, 793, 805], "distinguish": [67, 152, 585, 631, 647, 764], "distmult": 790, "distnodedataload": [636, 681, 721, 779, 780], "distplot": 801, "distribut": [12, 139, 167, 187, 195, 200, 201, 202, 203, 216, 217, 297, 298, 326, 354, 401, 510, 638, 648, 659, 669, 672, 680, 681, 682, 720, 722, 723, 744, 767, 782, 792, 798, 801, 802, 808], "distributeddataparallel": [200, 203, 635, 680, 720, 779, 780, 807, 808], "distributedli": 636, "distributedsampl": [200, 203], "disttenor": 4, "disttensor": [4, 221, 228, 635, 636, 637, 680, 681, 720, 721, 722], "disttensor\u4e2d\u7684\u884c\u6570\u5fc5\u987b\u4e0e\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u6216\u8fb9\u6570\u76f8\u540c": 681, "div": [8, 243, 244, 257, 258, 267, 268, 436, 437, 445, 446, 455, 456, 457, 458, 459, 460, 477, 478, 650, 693, 734, 764], "dive": [666, 766], "divers": 802, "divid": [44, 67, 78, 81, 104, 139, 140, 179, 180, 221, 228, 341, 356, 593, 660, 666, 750, 771, 786, 789, 792], "divis": [4, 339, 348, 360, 361, 390, 392, 393, 556, 568], "dl": [132, 757], "dlg": 723, "dlg\uc758": 734, "dm": 801, "dmlc": [20, 758], "dncoder": 802, "dnn": [664, 748], "do": [4, 8, 20, 21, 69, 88, 100, 101, 113, 115, 128, 137, 229, 283, 293, 295, 327, 366, 371, 373, 390, 391, 393, 395, 396, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 500, 504, 509, 514, 580, 630, 636, 646, 647, 654, 656, 659, 660, 661, 669, 672, 673, 740, 768, 771, 784, 785, 786, 791, 792, 795, 798], "do_someth": 0, "doc": [8, 13, 164, 177, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 667, 764, 770, 784, 785, 786], "docstr": 20, "document": [7, 21, 204, 206, 229, 779], "doc\uc5d0\uc11c": 751, "doe": [4, 7, 20, 25, 26, 27, 63, 70, 92, 112, 115, 128, 129, 132, 145, 151, 160, 176, 178, 183, 276, 295, 401, 446, 486, 522, 539, 542, 543, 544, 561, 580, 603, 604, 609, 630, 636, 638, 639, 643, 647, 651, 657, 659, 661, 666, 669, 676, 716, 731, 750, 764, 767, 768, 770, 771, 772, 773, 774, 775, 785, 789, 791, 792, 795, 798, 802, 807, 808], "doesn": [4, 55, 164, 190, 663, 791], "doi": [132, 159], "domain": [771, 776], "don": [20, 88, 230, 231, 505, 507, 508, 580, 658, 764, 802], "done": [6, 20, 152, 629, 636, 640, 759, 760, 762, 768, 770, 771, 776, 779, 789, 790, 791, 792], "donghuixu": 691, "donot_use_mm_for_euclid_dist": [372, 492], "dot": [8, 245, 246, 259, 260, 269, 270, 343, 398, 438, 439, 445, 461, 462, 479, 480, 650, 659, 663, 669, 672, 693, 712, 734, 744, 747, 753, 755, 761, 771, 780, 785, 791, 792, 795, 802], "dotpredictor": [669, 709, 753, 771, 785], "dotproductpredictor": [669, 672, 709, 712, 753, 755], "doubl": [8, 21, 232, 582, 631, 644, 650, 728, 734, 798], "down": [761, 789, 792], "download": [2, 20, 22, 130, 131, 132, 133, 134, 138, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 182, 183, 184, 185, 192, 628, 629, 632, 675, 676, 715, 716, 758, 759, 760, 762, 764, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "downstream": [639, 669, 672, 673, 779, 785, 790], "doxygen": 20, "dozen": 21, "dpi": 801, "dramat": 792, "draw": [329, 785, 795, 798], "draw_circular": 798, "draw_networkx": 791, "draw_networkx_edg": [760, 801], "draw_networkx_nod": [760, 801], "drawn": [658, 762], "drive": 20, "driven": [799, 805], "drop": [4, 200, 203, 236, 594, 599, 600, 603, 604, 609, 784, 785, 801, 808], "drop_last": [4, 199, 200, 203, 204, 205, 206, 209, 210, 635, 656, 657, 658, 659, 661, 671, 680, 698, 699, 700, 701, 703, 711, 720, 740, 741, 742, 743, 744, 746, 754, 772, 779, 780, 784, 785, 786, 791, 808], "dropbox": 20, "dropedg": 12, "dropnod": 12, "dropout": [332, 336, 337, 338, 339, 342, 347, 349, 350, 357, 358, 360, 361, 362, 365, 366, 378, 379, 390, 392, 393, 635, 663, 673, 680, 720, 756, 762, 792, 795, 802], "dropouta": [378, 379], "dropouth": [378, 379], "dropout\u6982\u7387": 713, "drug": [51, 120, 508, 509, 626, 647, 690, 731, 798], "drugai": 691, "drug\u76f8\u4e92\u4f5c\u7528\u8fb9": 690, "drug\u8282\u70b9": 690, "dst": [33, 61, 62, 67, 109, 210, 232, 299, 334, 343, 344, 347, 349, 350, 354, 356, 362, 398, 399, 400, 501, 504, 557, 580, 581, 585, 620, 633, 643, 650, 651, 656, 659, 663, 666, 667, 669, 672, 678, 686, 693, 694, 698, 699, 701, 706, 707, 709, 712, 718, 727, 734, 736, 740, 741, 744, 747, 750, 751, 753, 755, 770, 771, 773, 792, 802], "dst_dtype": [666, 706, 750], "dst_feat": 786, "dst_field": 802, "dst_id": [58, 124, 238, 275, 631, 638, 723], "dst_id_field": 631, "dst_input": [667, 707, 751], "dst_node": [580, 740, 750], "dst_node_id": 638, "dst_type": [129, 276, 368, 369], "dstdata": [4, 8, 43, 67, 198, 211, 212, 327, 519, 580, 635, 637, 651, 660, 661, 662, 666, 667, 680, 694, 698, 702, 703, 706, 707, 720, 722, 736, 740, 745, 746, 750, 751, 784, 786, 808], "dstnode": [42, 67, 198, 212, 580, 660, 698, 702, 740, 745], "dsttype": [25, 67, 104, 216, 217, 327, 652, 667, 695, 707, 737, 751], "dt": 631, "dtype": [4, 9, 20, 46, 63, 74, 94, 95, 116, 124, 135, 143, 161, 164, 167, 175, 177, 185, 209, 234, 235, 238, 277, 281, 282, 297, 298, 327, 396, 421, 422, 485, 498, 499, 500, 505, 507, 519, 520, 530, 535, 548, 560, 585, 599, 600, 607, 613, 626, 631, 633, 636, 638, 639, 644, 647, 657, 663, 667, 668, 669, 678, 681, 687, 690, 707, 708, 709, 718, 721, 723, 728, 731, 747, 751, 752, 753, 761, 764, 769, 772, 773, 779, 780, 784, 785, 789, 791, 792, 802], "due": [21, 117, 118, 182, 501, 586, 646, 656, 658, 789, 802], "dump": [723, 780], "duplic": [115, 133, 134, 147, 148, 149, 177, 182, 277, 281, 282, 421, 485, 533, 588, 596, 616, 638, 764, 795], "dur": [789, 792], "dure": [5, 20, 88, 283, 286, 363, 371, 373, 504, 508, 509, 514, 578, 614, 636, 638, 639, 645, 650, 661, 769, 776, 779, 784, 785, 792, 795, 798, 801, 802], "duse_cuda": 758, "duse_libxsmm": 758, "duse_openmp": 758, "dwivedi": 761, "dx": [159, 339, 791, 802], "dynam": [346, 799, 801, 802, 803, 805], "e": [0, 4, 5, 8, 20, 21, 25, 40, 41, 47, 53, 61, 62, 69, 107, 111, 117, 118, 120, 123, 124, 128, 129, 162, 167, 171, 177, 200, 203, 210, 229, 233, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 275, 276, 283, 285, 299, 327, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 366, 367, 371, 373, 395, 398, 399, 400, 404, 445, 446, 493, 494, 501, 502, 506, 507, 512, 514, 517, 519, 520, 555, 557, 558, 559, 571, 586, 603, 604, 609, 618, 619, 621, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 646, 649, 650, 651, 655, 656, 663, 669, 670, 671, 677, 685, 692, 693, 710, 717, 718, 726, 733, 734, 735, 758, 759, 760, 761, 762, 764, 765, 768, 769, 770, 771, 776, 783, 784, 785, 786, 791, 792, 798, 802, 807], "e2d": 802, "e2n": 615, "e_": [333, 343, 344, 348, 349, 350, 352, 353, 355, 356, 359, 360, 361, 362, 770, 783, 786, 791, 792], "e_add_u": 5, "e_add_v": 5, "e_attr": 123, "e_div_u": 5, "e_div_v": 5, "e_dot_u": 5, "e_dot_v": 5, "e_feat": [160, 162, 404], "e_ij": 334, "e_mul_u": 5, "e_mul_v": 5, "e_sub_u": 5, "e_sub_v": [5, 8], "e_t": 368, "e_typ": [153, 154, 181], "e_weight": 6, "each": [0, 4, 5, 6, 13, 19, 21, 33, 34, 35, 36, 38, 47, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 72, 77, 86, 87, 91, 92, 93, 99, 100, 101, 115, 116, 120, 121, 122, 124, 128, 129, 133, 134, 138, 139, 143, 146, 147, 148, 149, 150, 153, 154, 167, 168, 169, 171, 172, 173, 174, 175, 181, 185, 187, 188, 199, 200, 203, 204, 205, 206, 207, 209, 210, 216, 217, 219, 220, 221, 224, 228, 229, 230, 231, 232, 234, 238, 275, 276, 277, 281, 282, 283, 285, 295, 296, 299, 325, 326, 327, 329, 330, 331, 332, 333, 335, 339, 341, 343, 346, 347, 348, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 362, 363, 365, 366, 371, 372, 373, 375, 377, 378, 379, 380, 391, 395, 396, 397, 401, 403, 405, 421, 447, 448, 485, 486, 492, 495, 496, 497, 500, 501, 503, 505, 506, 507, 508, 509, 510, 511, 514, 515, 517, 518, 519, 520, 580, 585, 586, 588, 592, 595, 596, 603, 611, 612, 617, 620, 622, 623, 624, 625, 626, 628, 631, 633, 634, 635, 636, 637, 638, 639, 640, 642, 644, 646, 647, 649, 652, 654, 656, 659, 661, 663, 666, 667, 668, 669, 670, 671, 672, 673, 718, 723, 728, 746, 753, 755, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 779, 780, 783, 784, 785, 789, 790, 791, 792, 795, 798, 801, 802, 808], "earli": [162, 182, 669, 753], "earlier": [636, 786, 790, 798], "eas": [20, 21], "easi": [20, 21, 280, 506, 629, 639, 672, 757, 764], "easier": [69, 637, 639, 771], "easili": [120, 219, 220, 654, 669, 768, 783, 785, 792], "ec2": [13, 776], "ecosystem": 764, "ed": [795, 802], "edata": [4, 5, 8, 19, 26, 29, 33, 46, 50, 52, 69, 94, 95, 107, 113, 116, 117, 118, 120, 123, 124, 126, 142, 143, 153, 154, 160, 162, 167, 170, 172, 181, 185, 198, 204, 206, 209, 211, 213, 234, 237, 238, 277, 281, 282, 299, 367, 395, 404, 421, 485, 496, 498, 499, 500, 501, 502, 507, 508, 509, 510, 511, 512, 516, 517, 580, 585, 586, 587, 588, 590, 595, 596, 599, 600, 601, 602, 603, 604, 607, 609, 612, 613, 615, 616, 617, 618, 619, 620, 621, 626, 631, 633, 636, 637, 638, 639, 644, 647, 651, 656, 659, 662, 663, 669, 670, 672, 678, 681, 682, 687, 690, 694, 699, 701, 709, 710, 712, 718, 721, 722, 723, 728, 731, 735, 736, 741, 744, 747, 753, 755, 768, 769, 770, 771, 773, 785, 789, 790, 801], "edata_develop": 299, "edata_dict": 299, "edata_follow": 299, "edata_pars": [144, 631], "edata_schem": [94, 95, 100, 101, 116, 120, 135, 143, 161, 164, 166, 167, 175, 177, 185, 209, 234, 235, 277, 280, 281, 282, 286, 421, 422, 485, 494, 498, 499, 500, 516, 585, 599, 600, 607, 613, 626, 631, 638, 639, 643, 644, 646, 671, 686, 687, 689, 727, 728, 730, 754, 769, 772, 773, 784, 785], "edeg": [44, 78, 81, 104], "edg": [0, 4, 5, 6, 8, 12, 20, 24, 25, 26, 29, 30, 31, 33, 35, 38, 40, 45, 46, 47, 48, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 79, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 106, 108, 109, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 198, 199, 200, 201, 204, 205, 206, 207, 209, 210, 211, 213, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 285, 286, 293, 294, 295, 296, 299, 327, 329, 331, 332, 333, 334, 337, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 392, 395, 398, 399, 400, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 519, 520, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 621, 626, 631, 633, 635, 637, 638, 639, 640, 641, 642, 649, 650, 651, 652, 654, 657, 659, 660, 662, 663, 665, 667, 668, 671, 672, 673, 678, 687, 689, 690, 691, 693, 694, 699, 701, 708, 709, 712, 718, 722, 723, 728, 730, 731, 733, 734, 735, 736, 740, 741, 744, 747, 752, 753, 754, 755, 757, 759, 760, 761, 762, 764, 768, 770, 771, 772, 773, 779, 780, 784, 786, 789, 790, 791, 792, 793, 795, 801, 805, 807, 808], "edge_attent": 792, "edge_attr": [172, 237, 587], "edge_attr_dtyp": 723, "edge_attr_schem": [4, 74], "edge_color": 791, "edge_data": [631, 639, 723], "edge_dir": [204, 206, 230, 231, 508, 509, 510, 511], "edge_drop": 332, "edge_feat": [170, 229, 334, 339, 344, 345, 347, 353, 360, 638, 639, 682, 723], "edge_feat_nam": [28, 116, 596, 601, 612], "edge_feat_s": [135, 339, 345, 360, 392], "edge_featur": 773, "edge_func": 359, "edge_gat": 347, "edge_id": [31, 222], "edge_id_attr_nam": [123, 237], "edge_in_feat": 334, "edge_index": 639, "edge_label": [24, 656, 669, 699, 709, 741, 753], "edge_map": [229, 639, 682, 723], "edge_mask": [367, 368, 698, 740], "edge_permute_algo": [97, 501], "edge_pred_graph": [669, 709, 753], "edge_predict": [656, 699, 741], "edge_repr": 798, "edge_split": [626, 636, 681, 721, 780], "edge_subgraph": [153, 154, 181, 421, 656, 657, 659, 698, 699, 701, 740, 741, 744, 769], "edge_trainer_id": 221, "edge_typ": [129, 276, 637, 639, 647, 666, 690, 706, 723, 731, 750], "edge_type_id": 638, "edge_type_subgraph": [25, 422, 647, 690, 731], "edge_udf": [19, 617, 618, 619, 620, 621], "edge_upd": 392, "edge_weight": [6, 142, 204, 332, 344, 348, 349, 351, 352, 356, 362, 363, 364, 670, 710], "edgebatch": [19, 52, 650, 693, 734], "edgedataload": [636, 681, 699, 701, 721, 741, 742, 744, 780], "edgedataview": 4, "edgelist": 801, "edgepredictor": 780, "edges1": 327, "edges2": 327, "edges3": 327, "edges_0": 631, "edges_1": 631, "edges_b": 801, "edges_data": 773, "edges_dst": 773, "edges_field": 802, "edges_gener": [90, 487], "edges_group": 773, "edges_of_id": 773, "edges_perm": 501, "edges_src": 773, "edges_with_feature_on": 52, "edgeweightnorm": [332, 351, 356, 363, 364, 670, 710], "edist": 333, "edu": [142, 168, 173, 175, 784, 808], "educ": 790, "ee": 802, "efeat": [334, 344, 347, 353, 359, 392, 638, 639], "effect": [9, 200, 203, 233, 275, 336, 337, 338, 361, 402, 515, 519, 520, 603, 604, 609, 634, 761, 802, 808], "effici": [4, 5, 8, 21, 33, 72, 92, 93, 99, 112, 120, 124, 129, 199, 229, 237, 238, 275, 276, 283, 329, 369, 370, 371, 373, 510, 514, 586, 639, 646, 649, 660, 663, 666, 671, 770, 789, 790, 791, 792, 795, 798, 801, 802, 808], "effort": [790, 807], "eg": [647, 690, 731], "egat": 344, "egat_model": [344, 347], "egnn": 345, "egt": 392, "eid": [4, 19, 25, 50, 54, 60, 87, 88, 94, 95, 123, 128, 201, 213, 222, 223, 229, 230, 231, 234, 237, 277, 281, 282, 294, 299, 367, 421, 485, 498, 499, 501, 505, 507, 508, 509, 510, 511, 516, 580, 585, 588, 620, 637, 639, 647, 659, 690, 698, 701, 722, 723, 731, 740, 744, 769, 771, 802], "eid2localeid": 4, "eid2partid": 4, "eid_het2hom": 637, "eid_hom2het": 637, "eid_offset": 637, "eid_rang": 723, "eids_dict": [659, 701, 744], "eig": 339, "eig_vec": 339, "eigenvalu": [284, 285, 335, 340, 394, 606], "eigenvector": [284, 339, 394, 606], "eight": 638, "eigval": [394, 606], "eigval_nam": [394, 606], "eigvec": [394, 606], "eisfischerh\u00fctt": 802, "either": [8, 20, 25, 31, 33, 61, 62, 72, 90, 91, 92, 93, 99, 112, 129, 200, 204, 206, 210, 213, 230, 231, 276, 283, 327, 372, 492, 506, 508, 509, 510, 511, 514, 539, 542, 543, 544, 546, 580, 639, 642, 646, 660, 661, 768, 771, 779, 798], "el": [398, 650, 693, 734], "electron": [171, 172], "element": [0, 4, 5, 21, 30, 31, 33, 34, 35, 36, 47, 52, 53, 54, 56, 57, 59, 60, 86, 87, 92, 93, 99, 118, 119, 120, 204, 206, 209, 210, 229, 230, 231, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 281, 282, 284, 285, 295, 296, 330, 334, 373, 421, 447, 485, 486, 496, 497, 507, 508, 509, 511, 522, 523, 526, 527, 538, 539, 540, 545, 551, 558, 559, 565, 571, 575, 586, 590, 591, 636, 661, 666, 761, 762, 771, 772, 785], "elementwis": [398, 552, 553, 556, 562, 563, 564, 574], "elif": [660, 666, 702, 706, 745, 750], "elimin": 128, "ell": 594, "els": [72, 333, 365, 366, 367, 368, 631, 658, 660, 663, 666, 667, 698, 700, 702, 706, 707, 740, 743, 745, 747, 750, 751, 759, 760, 761, 762, 764, 785, 786, 790, 792, 798, 802, 807, 808], "elsewher": 560, "elu": [392, 663, 747, 792], "emap": 779, "emb": [4, 9, 326, 401, 636, 681, 721, 785, 790, 795, 798, 802], "emb_dim": [325, 329], "emb_stat": 4, "embed": [5, 12, 145, 154, 175, 176, 181, 325, 326, 329, 391, 392, 395, 396, 399, 400, 401, 635, 636, 637, 639, 640, 672, 673, 756, 779, 780, 783, 785, 789, 790, 791, 792, 795, 802], "embedding_dim": [4, 326, 391, 401], "emit": [669, 798], "emphas": 771, "empir": 13, "emploi": [19, 369, 370, 761, 792, 802], "employ": 802, "empti": [31, 55, 129, 194, 225, 275, 276, 288, 293, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 666, 789, 792, 802], "en": [776, 802], "enabl": [8, 22, 650, 657, 663, 747, 758, 784, 785, 786, 798, 802, 808], "enable_cpu_affin": [776, 784, 785, 786], "enc": 802, "encapsul": 667, "enclos": [232, 631], "encod": [12, 133, 134, 136, 155, 161, 284, 379, 391, 394, 395, 396, 397, 403, 495, 578, 606, 610, 614, 642, 761, 769, 780, 790, 791, 793, 802, 803, 805], "encount": [789, 792], "encourag": [369, 370, 672], "end": [4, 19, 21, 26, 113, 160, 207, 229, 284, 294, 329, 333, 380, 503, 515, 578, 606, 614, 620, 639, 646, 661, 665, 669, 671, 673, 698, 730, 740, 746, 753, 754, 756, 762, 763, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "end_tim": 160, "endl": 21, "endpoint": [4, 33, 47, 52, 99, 115, 421, 422, 579, 588, 791], "energi": [171, 172], "enforc": 779, "english": [145, 176, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756], "enhanc": [20, 760, 793, 803, 805], "enjoi": [8, 20, 761], "enough": [13, 639, 772], "enrich": 792, "ensur": [351, 636, 638, 656, 662, 779, 807], "entail": 798, "enter": 69, "enthalpi": [171, 172], "entir": [3, 8, 44, 78, 81, 104, 200, 635, 639, 656, 657, 660, 671, 771, 772, 779, 792], "entiti": [130, 131, 141, 154, 157, 165, 399, 400, 641, 642, 672, 725, 790, 793, 805], "entri": [124, 160, 170, 238, 390, 393, 510, 560, 643, 670, 727, 762, 764, 791], "entropi": [367, 368, 672, 755, 771, 785, 790, 792, 801], "entropy_list": 801, "enumer": [635, 637, 643, 655, 658, 663, 680, 700, 720, 743, 747, 779, 780, 784, 785, 786, 795, 802, 808], "env": [789, 792], "environ": [13, 20, 638, 758, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 776, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 807, 808], "enzym": [24, 164, 177], "ep": [4, 9, 348, 603, 604, 609, 802], "epoch": [4, 200, 203, 325, 367, 368, 369, 633, 635, 636, 663, 669, 671, 672, 673, 678, 680, 683, 709, 711, 712, 713, 718, 720, 721, 724, 747, 753, 754, 755, 756, 759, 760, 761, 762, 765, 768, 770, 771, 772, 779, 780, 784, 785, 789, 790, 791, 792, 795, 802, 807, 808], "epsilon": [171, 172, 339, 352, 353], "epsilon_": [171, 172], "eq": [366, 795], "equal": [126, 127, 136, 195, 209, 299, 331, 365, 404, 447, 448, 510, 555, 644, 698, 740, 776, 784, 786, 792, 801], "equat": [332, 333, 350, 351, 363, 364, 398, 402, 649, 762, 789, 790, 791, 795], "equip": 8, "equival": [25, 72, 212, 213, 214, 215, 234, 239, 240, 251, 252, 253, 254, 277, 327, 332, 341, 346, 351, 356, 363, 364, 372, 485, 492, 537, 552, 554, 556, 561, 562, 563, 572, 573, 574, 590, 591, 618, 621, 650, 651, 670, 764, 769, 770, 791, 795], "equivari": [345, 791], "er": [650, 693, 734], "erdos_renyi_graph": 404, "error": [47, 88, 108, 115, 129, 275, 276, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 578, 579, 580, 614, 626, 639, 645, 688, 698, 729, 740, 798], "errorbar": 801, "especi": [20, 123, 237, 657, 658, 662, 783, 790], "essenc": 792, "essenti": [19, 21, 229, 405, 660, 758, 761, 770, 779, 783, 789, 798], "establish": 4, "estim": [369, 370, 657, 672, 712, 755, 768, 769, 770, 771, 772, 773, 807, 808], "et": [71, 133, 134, 503, 759, 761, 768, 770, 783, 789, 795], "etc": [0, 1, 4, 10, 20, 123, 158, 237, 299, 629, 638, 639, 650, 656, 660, 665, 671, 764, 771, 779, 801], "ether": 4, "etyp": [4, 25, 26, 28, 29, 30, 31, 32, 33, 35, 38, 46, 47, 49, 50, 52, 54, 56, 59, 60, 61, 62, 79, 83, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 106, 108, 112, 113, 116, 117, 123, 124, 126, 128, 198, 204, 206, 209, 210, 213, 216, 217, 221, 229, 230, 235, 289, 291, 327, 329, 337, 355, 358, 361, 368, 369, 423, 493, 496, 498, 500, 502, 504, 508, 509, 511, 517, 576, 579, 580, 585, 586, 588, 590, 594, 595, 596, 611, 616, 631, 633, 637, 638, 639, 647, 652, 656, 659, 660, 661, 667, 669, 671, 672, 673, 678, 690, 695, 698, 699, 701, 702, 703, 707, 709, 711, 712, 713, 718, 722, 723, 731, 737, 740, 741, 744, 745, 746, 751, 753, 754, 755, 756, 790], "etype2id": 637, "etype2id_map": 637, "etype_count": 586, "etype_dict": 72, "etype_field": 585, "etype_id": 723, "etype_sort": 230, "etype_weight": [368, 369], "etypes_list": 229, "etypes\u662f\u4e00\u4e2a\u5217\u8868": 711, "eu": 47, "euclidean": [283, 371, 372, 373, 492, 514, 798], "ev": [47, 171, 172], "eval": [673, 713, 756, 760, 761, 762, 784, 785, 789, 798, 802, 807, 808], "evalu": [187, 195, 639, 640, 654, 658, 673, 713, 756, 759, 760, 761, 765, 768, 771, 772, 789, 792, 798, 802, 807, 808], "even": [4, 200, 294, 498, 636, 640, 654, 662, 776, 786, 791, 795], "evenli": [221, 228, 779], "event": [160, 162], "everi": [0, 4, 9, 20, 116, 118, 119, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 198, 204, 205, 206, 209, 230, 231, 276, 285, 299, 327, 350, 367, 368, 369, 370, 502, 507, 508, 509, 511, 636, 639, 643, 658, 669, 671, 765, 769, 772, 779, 784, 785, 798, 799, 802, 805, 807, 808], "everyth": [20, 779], "evid": 792, "evolut": [798, 801], "evolv": 791, "eweight": [124, 238, 367, 368, 670, 708, 710, 735], "eweight_nam": [29, 124, 238, 495, 602, 603, 604, 609, 610, 613], "eweight\ub97c": 735, "exact": [654, 784], "exactli": [7, 116, 580, 636, 656, 663, 762, 771, 779, 780, 792, 798], "exampl": [0, 3, 4, 5, 6, 8, 9, 19, 21, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 194, 195, 199, 200, 203, 204, 205, 206, 207, 209, 210, 216, 217, 219, 220, 224, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 420, 421, 422, 423, 448, 485, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 578, 579, 580, 581, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 631, 633, 634, 635, 636, 637, 638, 640, 642, 643, 644, 646, 647, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 671, 672, 673, 715, 718, 744, 754, 756, 757, 759, 760, 761, 762, 763, 767, 768, 769, 770, 771, 772, 773, 775, 776, 778, 779, 780, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 794, 795, 797, 798, 800, 801, 802, 804, 806, 807, 808, 810], "example_minibatch": 784, "examplelay": 404, "exceed": [395, 654], "except": [4, 201, 202, 284, 346, 580, 585, 606, 636, 638, 656, 659, 660, 661, 673, 759, 760, 761, 762, 764, 792], "exchang": 779, "exclud": [210, 216, 504, 506, 508, 509, 656, 699, 741], "exclude_edg": [508, 509, 655], "exclude_eid": [210, 655], "exclude_self": [115, 283, 371, 373, 514], "exclude_self_loop": [216, 504], "excluded_edg": [508, 509], "exclus": [206, 210, 507, 807], "execut": [88, 152, 297, 636, 767, 775, 778, 782, 788, 794, 797, 800, 801, 804, 806, 810], "exhaust": 672, "exhibit": 792, "exist": [0, 4, 20, 26, 27, 113, 114, 116, 139, 140, 177, 190, 216, 221, 228, 280, 293, 294, 498, 504, 528, 575, 579, 588, 593, 603, 604, 609, 634, 636, 640, 642, 656, 659, 672, 679, 719, 757, 759, 760, 768, 770, 771, 779, 785, 786, 790, 795, 798], "exit": [69, 640, 789], "exmapl": 6, "exp": [299, 333, 334, 354, 397, 517, 518, 764, 792, 798, 802], "expand": [281, 282, 369, 370, 666, 750, 798], "expand_as_pair": [665, 666, 705, 706, 749, 750], "expans": [281, 282], "expect": [108, 189, 190, 348, 363, 647, 731, 759, 789, 790, 802], "expens": 65, "experi": [13, 495, 610, 663, 768, 773, 792], "experiment": [4, 6, 9, 336, 337, 338, 401, 640], "explain": [138, 367, 368, 369, 370, 628, 649, 659, 757, 789, 792], "explain_graph": [367, 368, 369, 370], "explain_nod": [367, 368], "explan": [1, 3, 10, 139, 140, 179, 180, 199, 207, 210, 212, 213, 214, 215, 367, 368, 369, 370, 638, 656, 661, 662, 789, 790, 791, 792, 795, 798, 801, 802], "explic": 4, "explicit": [646, 764, 798], "explicitli": [275, 276, 636, 637, 646, 730, 764, 798], "exploit": [21, 369, 370, 790], "explor": [369, 370, 761, 796, 798, 805, 807], "explos": [204, 508], "expon": 563, "exponenti": [563, 802], "export": [20, 638, 723, 758, 779], "expos": [19, 21], "express": [5, 641, 669, 672, 770, 786, 793, 801, 805], "extend": [5, 149, 200, 333, 369, 370, 672, 790, 793, 795, 805], "extens": [174, 758, 802], "extent": [171, 172], "extern": [2, 30, 356, 633, 641, 646, 661], "extra": [21, 167, 327, 366, 502, 588, 631, 761, 779, 790], "extra_cached_hop": [295, 486], "extract": [1, 12, 94, 95, 155, 158, 191, 210, 223, 234, 235, 277, 281, 282, 421, 422, 485, 498, 499, 516, 630, 639, 657, 667, 673, 698, 716, 740, 756, 759, 760, 762, 769, 784, 790, 791, 808], "extract_arch": [630, 676, 716], "extrem": 791, "ey": 771, "e\u662f\u8fb9\u7684\u6570\u91cf": 710, "f": [4, 8, 9, 339, 344, 354, 367, 368, 369, 370, 401, 633, 635, 637, 656, 658, 659, 660, 661, 663, 666, 669, 671, 673, 678, 680, 699, 700, 701, 702, 703, 706, 709, 711, 713, 718, 720, 741, 743, 744, 745, 746, 747, 750, 753, 754, 756, 759, 760, 761, 762, 764, 768, 770, 771, 772, 779, 780, 784, 785, 786, 789, 790, 792, 795, 798, 801, 802, 807, 808], "f1": [327, 626, 792], "f1_": 792, "f2": [327, 626], "f9065fa7": 152, "f_": [333, 339, 344, 352, 353, 357, 359, 375, 795, 798], "f_r": [667, 707, 751], "f_size": 801, "face": 21, "fact": [644, 656, 789, 798], "factor": [339, 360, 397, 663, 790], "factori": [371, 372, 373], "factor\ub97c": 747, "faculti": [151, 178, 183], "fail": [20, 760, 761, 762], "failur": 190, "faithfulli": 177, "fake": 155, "fakenew": 155, "fall": [4, 43, 103, 295, 486, 637], "fals": [4, 9, 24, 30, 47, 56, 57, 64, 65, 68, 69, 94, 95, 98, 110, 115, 121, 122, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 191, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 216, 219, 220, 225, 227, 229, 230, 231, 234, 275, 277, 280, 283, 284, 286, 295, 296, 330, 331, 336, 337, 339, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 363, 365, 366, 369, 370, 371, 372, 373, 375, 390, 393, 394, 396, 398, 403, 421, 485, 486, 488, 490, 491, 492, 498, 499, 502, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 533, 578, 579, 580, 586, 588, 590, 591, 592, 595, 596, 606, 607, 612, 614, 629, 631, 632, 633, 635, 637, 638, 639, 647, 656, 657, 658, 659, 661, 671, 675, 677, 678, 680, 690, 698, 699, 700, 701, 703, 711, 715, 717, 718, 720, 722, 731, 740, 741, 742, 743, 744, 746, 754, 759, 760, 761, 762, 764, 768, 772, 779, 780, 784, 785, 786, 790, 791, 792, 795, 798, 801, 802, 807, 808], "famili": [757, 798, 799, 805], "familiar": [660, 672, 779], "famou": 760, "fanout": [204, 206, 209, 230, 231, 336, 337, 338, 508, 509, 510, 636, 637, 655, 662, 681, 698, 721, 722, 740], "faq": 758, "far": [663, 790, 792, 798], "farthest_point_sampl": 6, "fashion": [635, 785], "fast": [21, 123, 135, 136, 137, 237, 283, 335, 340, 371, 373, 514, 643], "fast_neg": 325, "faster": [144, 164, 200, 216, 283, 330, 358, 361, 371, 373, 504, 514, 663, 761], "favor": 771, "fb15k": [153, 154], "fb15k237": 153, "fb15k237dataset": [633, 678, 718], "fc": [347, 349, 350, 354, 792], "fc_neigh": [665, 666, 705, 706, 749, 750], "fc_pool": [665, 666, 705, 706, 749, 750], "fc_self": [665, 666, 705, 706, 749, 750], "feat": [4, 9, 24, 42, 45, 50, 63, 70, 73, 102, 126, 127, 133, 134, 135, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 164, 167, 168, 169, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 207, 209, 225, 289, 290, 291, 292, 328, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 399, 400, 401, 404, 496, 497, 517, 518, 576, 577, 586, 590, 591, 596, 613, 631, 633, 636, 637, 639, 651, 662, 663, 666, 671, 672, 673, 678, 681, 694, 706, 711, 712, 713, 718, 721, 722, 736, 747, 750, 754, 755, 756, 759, 760, 761, 762, 768, 770, 771, 773, 779, 780, 784, 785, 786, 789, 792, 807, 808], "feat0": 127, "feat1": [123, 126, 237, 596, 637, 722], "feat2": [123, 237], "feat3": 123, "feat_0": 351, "feat_a": 791, "feat_b": 791, "feat_dict": [652, 695, 737], "feat_dim": 395, "feat_drop": [336, 338, 342, 347, 349, 350, 362], "feat_dst": [651, 666, 706, 750], "feat_dst\uc758": 736, "feat_list": 402, "feat_mask": [367, 368], "feat_nam": [339, 394, 606, 610, 614, 647, 690, 731], "feat_nn": 375, "feat_siz": [136, 367, 370, 390, 392, 393], "feat_src": [651, 666, 706, 750], "feat_src\uc640": 736, "featmask": 12, "featur": [0, 4, 5, 8, 12, 18, 19, 25, 26, 27, 29, 33, 34, 42, 43, 45, 46, 50, 52, 53, 55, 63, 69, 70, 72, 73, 74, 76, 90, 91, 92, 93, 94, 95, 99, 102, 103, 112, 113, 114, 115, 116, 117, 118, 120, 123, 125, 126, 127, 128, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 164, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 198, 199, 200, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 223, 225, 227, 229, 230, 231, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 280, 281, 282, 283, 286, 293, 294, 299, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 392, 393, 395, 398, 399, 400, 404, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 492, 496, 497, 498, 499, 501, 502, 503, 505, 507, 508, 509, 510, 511, 512, 514, 517, 518, 519, 520, 579, 580, 582, 583, 584, 585, 586, 587, 588, 590, 591, 595, 596, 601, 612, 613, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 629, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 647, 649, 650, 651, 652, 654, 655, 656, 657, 658, 659, 660, 661, 663, 665, 667, 668, 669, 670, 671, 672, 673, 678, 688, 699, 701, 703, 708, 709, 712, 713, 718, 723, 728, 729, 731, 737, 741, 743, 744, 745, 746, 747, 750, 752, 753, 754, 755, 756, 759, 760, 761, 764, 768, 770, 772, 773, 776, 779, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 803, 805, 807, 808], "feature_nam": [155, 212, 213, 214, 215, 723], "featureless": 639, "features_to_us": 333, "febd69": 798, "fed": [107, 360], "fedora": 758, "feed": [378, 379, 659, 661, 669, 761, 771, 790, 795, 802], "feed_forward": 802, "feedback": [672, 712, 755], "feedforward": 393, "feel": [20, 764], "fell": 21, "fetch": [20, 198, 212, 213, 214, 215, 662, 792], "few": [1, 4, 13, 21, 580, 635, 636, 654, 660, 673, 779, 780, 784, 786, 798, 802], "fewer": [508, 783, 801], "ffn": [378, 379, 802], "ffn1": 761, "ffn2": 761, "field": [20, 21, 24, 26, 27, 113, 114, 147, 148, 164, 175, 177, 182, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 339, 496, 585, 590, 591, 631, 633, 638, 650, 791, 795, 802], "field_of_studi": 723, "fig": [760, 798, 801], "fig2": 801, "figsiz": [791, 801], "figur": [635, 639, 647, 654, 761, 762, 791, 795, 801, 802], "file": [4, 20, 21, 22, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 160, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 193, 194, 196, 199, 224, 225, 226, 227, 229, 288, 512, 628, 630, 633, 636, 638, 639, 640, 647, 669, 673, 676, 716, 723, 758, 759, 760, 762, 767, 768, 770, 771, 773, 775, 778, 779, 780, 782, 784, 788, 789, 790, 791, 792, 794, 797, 800, 804, 806, 808, 810], "file_nam": 631, "file_path": [630, 676, 716], "filenam": [189, 194, 288, 512], "filesystem": 225, "fill": [26, 27, 92, 112, 113, 114, 116, 395, 515, 557, 558, 559, 571, 596, 798], "fill_data": [28, 116, 596], "film": 132, "filter": [52, 53, 159, 331, 333, 334, 335, 340, 343, 346, 347, 349, 350, 351, 354, 356, 363], "filter_edg": 802, "filter_nod": 802, "final": [6, 21, 130, 131, 141, 165, 229, 333, 360, 394, 398, 633, 650, 651, 654, 661, 667, 671, 673, 693, 734, 758, 790, 791, 792, 795, 802, 807], "final_ft": [650, 693, 734], "find": [13, 20, 25, 54, 128, 129, 276, 369, 370, 504, 640, 666, 672, 759, 760, 761, 762, 769, 770, 771, 773, 790, 791, 792, 798, 802], "find_edg": [4, 88, 659, 701, 744], "fine": [88, 658, 764, 776, 795], "fingerprint": 779, "finish": [20, 640, 759, 760, 762, 779, 807], "first": [4, 8, 20, 21, 26, 50, 55, 72, 117, 118, 119, 121, 122, 123, 124, 128, 129, 136, 137, 138, 158, 173, 175, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 219, 220, 229, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 299, 327, 333, 346, 356, 363, 367, 371, 373, 380, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 501, 505, 506, 507, 510, 514, 561, 571, 580, 585, 586, 596, 632, 636, 637, 639, 640, 647, 655, 657, 658, 660, 661, 662, 665, 666, 671, 673, 758, 759, 760, 764, 769, 771, 772, 773, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 802, 803, 805, 807, 808], "firstli": 761, "fission": 163, "fit": [200, 325, 352, 353, 359, 639, 654, 657, 668, 769, 770, 783], "five": [138, 139, 140, 151, 178, 183, 631, 795], "fix": [187, 188, 195, 204, 206, 207, 295, 486, 508, 655, 662, 784, 802], "flag": [30, 56, 57, 234, 278, 339, 360, 403, 421, 627, 758, 779], "flatten": [506, 663, 747], "flexibl": [19, 580, 631, 802], "flickr": 156, "flickrdataset": 184, "flip": [578, 614], "flist": 72, "float": [4, 8, 9, 21, 94, 95, 116, 135, 136, 137, 139, 140, 157, 158, 159, 171, 174, 179, 180, 188, 195, 230, 231, 233, 279, 285, 287, 299, 325, 331, 332, 333, 336, 337, 338, 339, 340, 342, 347, 348, 349, 350, 351, 352, 353, 358, 360, 361, 362, 365, 366, 367, 368, 369, 370, 372, 378, 379, 390, 392, 393, 403, 420, 492, 498, 499, 500, 504, 505, 507, 508, 509, 510, 553, 564, 582, 583, 584, 593, 596, 599, 600, 601, 603, 604, 609, 613, 620, 625, 631, 633, 644, 650, 659, 668, 701, 708, 718, 728, 734, 744, 752, 759, 760, 761, 768, 770, 772, 785, 791, 795, 802], "float16": [8, 584, 650, 663, 734, 747], "float16\uc744": 734, "float32": [4, 8, 9, 46, 74, 94, 95, 116, 143, 161, 164, 167, 209, 235, 298, 333, 343, 344, 347, 349, 350, 359, 422, 498, 499, 500, 511, 532, 583, 607, 613, 626, 633, 636, 637, 644, 647, 678, 681, 687, 690, 718, 721, 722, 728, 731, 764, 769, 772, 784, 785], "float64": [124, 238, 530, 582, 631, 773], "floattensor": [382, 506, 507, 508, 509, 511, 651, 694, 736, 791], "flow": [125, 129, 163, 198, 200, 201, 202, 629, 655, 656, 659, 661, 662, 740, 741, 744, 746, 783, 784, 786, 802], "flush": 663, "fly": [336, 337, 338, 798], "fmt": 31, "fn": [5, 8, 19, 20, 33, 72, 90, 91, 92, 93, 99, 112, 119, 367, 368, 369, 404, 617, 618, 619, 620, 621, 622, 623, 624, 625, 650, 651, 652, 660, 663, 666, 669, 670, 672, 693, 694, 695, 702, 706, 709, 710, 712, 734, 735, 736, 737, 745, 747, 750, 753, 755, 770, 771, 785, 786, 789, 790, 791, 795, 801, 802], "fn_": 792, "focu": [776, 795, 798], "focus": [633, 790, 791, 793, 802, 805], "folder": [21, 152, 638, 639, 647, 731, 779], "follow": [0, 3, 4, 5, 6, 8, 19, 20, 21, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 128, 129, 137, 138, 139, 140, 144, 152, 171, 172, 179, 180, 194, 199, 204, 206, 209, 210, 219, 220, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 286, 287, 288, 293, 299, 326, 327, 328, 333, 344, 346, 348, 351, 356, 357, 358, 367, 368, 371, 372, 373, 374, 375, 376, 377, 381, 382, 399, 400, 403, 404, 420, 421, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 488, 490, 491, 492, 500, 502, 506, 507, 508, 509, 510, 514, 516, 517, 518, 519, 520, 522, 558, 559, 579, 580, 581, 585, 586, 587, 592, 595, 596, 601, 607, 611, 612, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 628, 629, 630, 631, 632, 633, 634, 635, 636, 638, 639, 640, 642, 643, 644, 646, 647, 649, 651, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 668, 669, 670, 671, 672, 673, 698, 699, 708, 740, 741, 752, 758, 761, 762, 764, 768, 769, 770, 771, 773, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "follow_dst": [668, 708, 752], "follow_src": [668, 708, 752], "follows\uc640": 731, "foo": 69, "footnot": 776, "footprint": [639, 651], "foral": [338, 354, 358, 362, 445, 666, 706, 750, 770], "forc": [221, 228, 798, 802], "force_even": [221, 228, 635, 680, 720, 780], "force_reload": [130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 629, 633, 675, 678, 715, 718], "forcibli": [339, 360], "fork": [7, 20], "form": [19, 20, 21, 25, 50, 60, 87, 128, 129, 198, 200, 234, 275, 276, 277, 281, 282, 294, 325, 329, 348, 369, 370, 405, 421, 485, 493, 494, 503, 508, 509, 578, 588, 594, 614, 637, 639, 646, 659, 671, 689, 701, 730, 744, 770, 771, 772, 784, 790, 791, 792, 801, 803, 805], "formal": [19, 71, 594, 639, 760, 790], "format": [0, 4, 11, 12, 29, 30, 31, 33, 34, 40, 46, 47, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 72, 79, 86, 87, 88, 89, 90, 91, 92, 93, 99, 106, 112, 113, 116, 117, 118, 124, 129, 229, 230, 234, 235, 237, 238, 275, 276, 277, 281, 282, 421, 423, 485, 496, 498, 500, 512, 517, 519, 520, 549, 558, 559, 571, 586, 630, 631, 633, 637, 646, 657, 663, 665, 666, 676, 678, 705, 706, 716, 718, 722, 723, 747, 749, 750, 764, 770, 771, 779, 780, 784, 785, 789, 790, 792, 795, 798, 802, 807, 808], "former": [299, 367, 368, 369, 370, 504, 636, 656], "formul": [346, 356, 553, 564, 667, 669, 768, 771, 783, 785, 790, 791, 803, 805], "formula": [299, 331, 352, 353, 355, 359, 650, 666], "formular": 612, "forth": [21, 586], "forum": 20, "forward": [4, 69, 220, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 651, 656, 658, 659, 660, 661, 663, 664, 667, 669, 670, 671, 672, 673, 699, 700, 701, 702, 703, 706, 707, 709, 711, 712, 713, 741, 743, 744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 759, 760, 761, 762, 764, 768, 770, 771, 772, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "forward_infer": 798, "forward_train": 798, "found": [25, 47, 69, 371, 373, 495, 507, 610, 627, 631, 633, 650, 667, 759, 764, 765, 770, 789, 790, 802], "four": [447, 514, 613, 634, 637, 638, 646, 668, 779, 785, 791, 792, 808], "fourth": 506, "fp16": [663, 747], "fp16\ub97c": 747, "fp16\uc744": 747, "fp_": 792, "frac": [171, 172, 233, 287, 299, 333, 334, 339, 351, 354, 356, 358, 363, 374, 397, 398, 420, 510, 517, 518, 612, 671, 711, 754, 759, 760, 761, 764, 789, 790, 791, 792, 798, 801, 802], "frac_list": [197, 807], "fraction": [197, 351], "frame": [8, 760, 798, 801], "framework": [4, 8, 20, 22, 41, 58, 61, 62, 107, 123, 124, 129, 177, 224, 234, 235, 237, 238, 275, 276, 277, 281, 282, 283, 371, 373, 378, 379, 421, 422, 485, 493, 494, 508, 509, 510, 511, 514, 636, 643, 645, 647, 664, 729, 757, 765, 770, 795, 798, 802], "fraud": [142, 157, 158, 159], "frauddataset": [157, 159], "fraudul": [142, 157, 158], "free": [20, 171, 172, 757, 764, 783, 792], "freebas": 154, "frequenc": 339, "frequent": [21, 133, 134, 639], "friendship": [184, 642, 671], "from": [0, 1, 2, 3, 4, 5, 6, 8, 10, 11, 13, 20, 21, 25, 26, 31, 44, 47, 67, 72, 78, 81, 88, 92, 93, 94, 95, 104, 111, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 128, 129, 132, 135, 136, 137, 138, 139, 140, 143, 144, 145, 147, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 167, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 193, 194, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 219, 220, 222, 223, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 275, 276, 277, 280, 281, 282, 283, 285, 287, 288, 293, 294, 299, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 420, 421, 422, 485, 492, 493, 494, 495, 499, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 519, 520, 555, 557, 558, 559, 571, 575, 579, 580, 585, 587, 588, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 619, 620, 621, 628, 629, 630, 632, 633, 634, 635, 636, 637, 638, 639, 641, 645, 646, 650, 651, 652, 654, 655, 657, 658, 660, 661, 662, 663, 664, 665, 666, 667, 671, 672, 673, 675, 676, 677, 678, 679, 705, 706, 711, 715, 716, 717, 718, 719, 723, 727, 729, 730, 741, 747, 749, 750, 753, 754, 755, 759, 760, 761, 762, 764, 767, 768, 769, 770, 771, 772, 775, 776, 778, 779, 780, 782, 783, 784, 785, 786, 788, 790, 792, 794, 795, 797, 798, 800, 801, 802, 804, 806, 807, 808, 810], "from_coo": [759, 764], "from_csc": 764, "from_csr": 764, "from_cudf_edgelist": 236, "from_networkx": [238, 275, 643, 686, 727], "from_numpi": [773, 791], "from_scipi": [237, 275, 643, 686, 727], "fromnumer": [789, 792], "front": 666, "frontier": [4, 90, 91, 121, 122, 219, 220, 487, 488, 489, 490, 491, 503, 592, 636, 637, 681, 698, 721, 722, 740], "frontier2": [698, 740], "fstab": 779, "ft": [650, 670, 693, 710, 734, 735], "full": [4, 25, 149, 181, 654, 658, 660, 661, 669, 673, 746, 759, 760, 761, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 789, 791, 792, 795, 798, 801, 802, 807, 808], "fulli": [4, 20, 635, 666, 764, 765, 789], "func": [33, 34, 52, 53, 297, 626, 650, 652, 695, 737, 795, 802], "funcanim": [760, 798, 801], "function": [0, 1, 4, 12, 20, 25, 26, 27, 33, 34, 52, 53, 63, 69, 70, 72, 88, 90, 91, 92, 93, 94, 95, 99, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 128, 152, 164, 174, 187, 203, 221, 224, 225, 228, 230, 232, 234, 235, 238, 277, 280, 283, 284, 285, 286, 294, 295, 297, 326, 327, 328, 331, 335, 336, 339, 340, 341, 342, 343, 346, 347, 349, 350, 351, 352, 354, 356, 357, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 392, 393, 397, 398, 401, 404, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 512, 514, 519, 520, 522, 526, 527, 561, 578, 579, 581, 585, 586, 587, 588, 589, 590, 591, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 633, 634, 636, 638, 639, 643, 649, 651, 652, 655, 659, 660, 661, 663, 664, 667, 669, 670, 671, 672, 673, 693, 694, 695, 701, 702, 703, 706, 709, 710, 711, 713, 733, 734, 735, 736, 737, 744, 745, 746, 747, 750, 751, 753, 754, 756, 759, 760, 761, 762, 765, 768, 771, 772, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 793, 795, 798, 805, 808], "functool": [790, 798, 802], "fundament": [790, 798], "further": [44, 65, 67, 72, 78, 81, 90, 91, 92, 93, 99, 104, 112, 200, 639, 651, 667, 669, 758, 764, 765, 792, 802], "furthermor": [123, 128, 638, 645, 790], "fuse": [8, 206, 446, 450, 451, 452, 453, 456, 457, 458, 459, 464, 465, 466, 467, 470, 471, 472, 473], "futur": [6, 20, 174, 631, 663, 798, 802], "fwtype": 503, "g": [0, 4, 5, 6, 8, 9, 19, 20, 21, 25, 26, 27, 29, 30, 31, 33, 34, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 229, 230, 231, 232, 234, 235, 236, 237, 238, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 293, 294, 295, 296, 299, 325, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 382, 394, 395, 398, 399, 400, 401, 403, 404, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 493, 494, 495, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 519, 520, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 632, 633, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 666, 667, 669, 671, 672, 677, 678, 680, 681, 682, 685, 687, 688, 689, 690, 694, 695, 696, 698, 699, 700, 701, 702, 703, 706, 707, 709, 711, 712, 717, 718, 720, 721, 722, 723, 726, 728, 729, 730, 731, 736, 737, 738, 740, 741, 742, 743, 744, 745, 746, 747, 750, 751, 753, 754, 755, 758, 759, 760, 761, 764, 765, 768, 769, 770, 771, 772, 773, 776, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807], "g1": [35, 36, 37, 88, 100, 101, 107, 120, 126, 127, 288, 327, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 396, 404, 496, 497, 505, 507, 512, 516, 517, 518, 590, 591, 606, 626, 671, 711, 754, 791], "g1_node_feat": [374, 375, 376, 377, 378, 379, 380, 381, 382], "g2": [35, 36, 37, 94, 95, 100, 101, 120, 126, 127, 128, 288, 327, 374, 375, 376, 377, 378, 379, 380, 381, 382, 391, 396, 404, 496, 497, 506, 507, 512, 516, 517, 518, 590, 591, 606, 626, 671, 711, 754], "g2_node_feat": [374, 375, 376, 377, 378, 379, 380, 381, 382], "g3": [404, 606, 626], "g32": [646, 689, 730], "g32_2": [646, 689, 730], "g64": [646, 689, 730], "g64_2": [646, 689, 730], "g_": [4, 9, 614], "g_2": 280, "g_atom": 172, "g_batch": 174, "g_edg": [508, 509], "g_int": 63, "g_l": 791, "g_layer": 791, "g_list": 512, "g_long": 70, "g_m": 798, "g_nodes_explain": 370, "g_r": [667, 707, 751], "g_sort": [510, 519, 520], "g_t": 798, "gai": [789, 791], "gain": [665, 705, 749, 765, 789, 790, 791, 792, 795, 798, 801, 802], "galleri": [20, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 779, 780, 781, 783, 784, 785, 786, 787, 789, 790, 791, 792, 795, 798, 801, 802, 805, 807, 808, 809], "game": [4, 26, 27, 29, 30, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 65, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 89, 92, 94, 95, 99, 100, 101, 102, 103, 104, 106, 108, 112, 113, 114, 115, 116, 120, 128, 204, 206, 209, 234, 235, 276, 277, 281, 282, 299, 327, 368, 369, 421, 422, 485, 493, 498, 499, 500, 502, 585, 586, 588, 595, 596, 601, 611, 612, 616, 626, 647, 690, 698, 731, 740], "gamma": [761, 791], "gamma_": [333, 397, 791], "gamma_k": 333, "gan": [789, 802], "gap": [171, 172, 375, 792], "gat": [299, 344, 663, 670, 735, 747, 764, 765, 793, 805], "gatconv": [336, 347, 651, 663, 694, 736, 747, 792], "gate": [355, 375, 798], "gate_nn": 375, "gatedgraphconv": 375, "gather": [8, 204, 205, 206, 444, 508, 661, 673, 698, 740, 770, 784, 791], "gathermm": 12, "gatlay": 792, "gatv2": 350, "gat\ub97c": 747, "gaussian": [13, 354, 397], "gb": [224, 639, 765, 784, 808], "gcc": [638, 723, 758], "gclass": [367, 370, 772], "gcmc": [656, 699, 741], "gcmclayer": [669, 709, 753], "gcn": [132, 145, 151, 176, 178, 183, 199, 342, 343, 348, 356, 362, 382, 420, 613, 656, 658, 659, 661, 663, 665, 666, 699, 701, 705, 706, 735, 741, 744, 749, 750, 758, 765, 772, 791, 793, 795, 805], "gcn_model": 759, "gcn_msg": 789, "gcn_reduc": 789, "gcnii": 351, "gcnlayer": [759, 789], "gcnnorm": 12, "gcn\uc744": [743, 746], "gdata_pars": 144, "gdc": 12, "gdelt": [24, 160], "gdeltdataset": [634, 679, 719], "ge": 373, "gender": 769, "gene": [508, 509, 647, 690, 731, 792], "gener": [0, 1, 3, 4, 5, 8, 9, 19, 33, 72, 90, 91, 92, 93, 99, 112, 116, 121, 122, 126, 127, 135, 136, 137, 138, 139, 140, 166, 167, 174, 179, 180, 197, 200, 201, 202, 203, 207, 210, 216, 217, 219, 283, 327, 333, 336, 337, 338, 344, 347, 367, 368, 371, 373, 394, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 493, 494, 496, 497, 501, 503, 504, 505, 507, 508, 514, 578, 592, 596, 614, 635, 636, 638, 639, 643, 646, 649, 650, 654, 655, 656, 659, 660, 661, 663, 665, 668, 669, 752, 761, 767, 768, 769, 770, 771, 772, 773, 774, 776, 777, 779, 780, 781, 783, 784, 785, 786, 787, 789, 790, 791, 792, 795, 800, 801, 802, 807, 808, 809], "generaliz": 792, "gene\u76f8\u4e92\u4f5c\u7528\u8fb9": 690, "gene\u8282\u70b9": 690, "gentl": 789, "geom": [132, 145, 151, 176, 178, 183, 420], "geometr": [132, 145, 151, 176, 177, 178, 183, 354, 397, 420, 765], "geomgcndataset": [145, 151, 176, 178, 183], "get": [0, 1, 4, 21, 25, 29, 30, 41, 42, 43, 45, 47, 50, 55, 67, 69, 73, 76, 102, 103, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 199, 200, 221, 228, 235, 278, 283, 326, 329, 363, 371, 373, 382, 422, 504, 508, 510, 514, 516, 519, 520, 588, 626, 629, 631, 632, 633, 635, 637, 639, 644, 647, 650, 656, 658, 661, 662, 667, 668, 671, 672, 707, 715, 717, 718, 728, 731, 740, 751, 758, 759, 760, 764, 776, 784, 785, 792, 798, 802, 807], "get_aggregate_fn": [667, 707, 751], "get_attent": [343, 344, 347, 349, 350, 375], "get_cmap": 791, "get_dataload": 807, "get_dataset": 802, "get_dist": [372, 492], "get_edge_partition_polici": 4, "get_edge_split": [632, 677, 717], "get_etype_id": [4, 586, 723], "get_group": 773, "get_idx_split": [632, 677, 717, 779, 784, 785, 786, 808], "get_log_prob": 798, "get_node_partition_polici": [4, 637, 722], "get_ntype_id": [4, 586, 723], "get_o": 802, "get_part_s": 4, "get_partition_book": [4, 635, 637, 680, 720, 722, 780], "get_seq_by_id": 802, "get_siz": 4, "get_split_idx": 784, "ggnn": 375, "ghz": 172, "giant": 128, "gid": 516, "gilmer": [770, 783], "gin": [671, 711, 754, 772, 807], "ginconv": [671, 711, 754, 807], "gindataset": [367, 370, 633, 671, 678, 711, 718, 754, 772, 807], "girvan": 163, "git": [638, 723, 758], "github": [133, 134, 147, 148, 149, 155, 158, 161, 164, 177, 200, 627, 638, 691, 723, 757, 758, 790, 791, 801, 802], "git\uc5d0\uc11c": 723, "give": [4, 10, 26, 113, 197, 280, 501, 515, 580, 625, 643, 644, 659, 728, 759, 772, 784, 785], "given": [4, 5, 6, 8, 13, 21, 29, 30, 31, 34, 47, 52, 53, 54, 56, 57, 59, 60, 61, 62, 78, 80, 81, 86, 87, 92, 108, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 128, 129, 133, 134, 135, 136, 137, 144, 160, 174, 175, 187, 188, 190, 195, 198, 199, 203, 204, 206, 209, 210, 219, 220, 221, 222, 223, 228, 229, 230, 231, 232, 234, 235, 237, 238, 275, 276, 277, 284, 286, 288, 294, 331, 334, 336, 337, 338, 340, 342, 343, 344, 346, 347, 349, 350, 352, 353, 354, 356, 358, 359, 362, 372, 398, 404, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 492, 494, 496, 497, 501, 503, 504, 507, 508, 509, 510, 511, 515, 519, 520, 539, 542, 543, 544, 546, 575, 580, 585, 588, 592, 594, 596, 603, 604, 606, 607, 609, 612, 626, 631, 636, 639, 640, 645, 646, 655, 659, 661, 669, 671, 672, 673, 730, 764, 768, 771, 772, 773, 785, 790, 792, 795, 798, 801, 802], "gklib": [638, 723], "gklib\uc744": 723, "glabel": 512, "glist": 288, "gloabl": 4, "glob": [318, 319, 320, 321, 322, 323, 374, 375, 376, 377, 378, 379, 380, 381, 382, 414, 415, 416, 417, 418, 419], "global": [4, 12, 126, 127, 160, 225, 226, 229, 329, 375, 392, 508, 578, 614, 758, 779], "global_test_eid": 780, "global_valid_eid": 780, "gloo": [635, 636, 680, 681, 720, 721, 779, 780, 807, 808], "glorot": [342, 349, 350, 354, 355, 356, 359, 362, 364], "glove": [175, 795], "glove_emb": 175, "glove_embed_fil": 175, "gluon": [189, 190, 664, 748], "gluoncv": 758, "gluonnlp": 758, "gluon\u7684nn\u5757": 704, "gm_": [4, 9], "gml": [647, 731], "gnn": [4, 11, 20, 133, 134, 147, 148, 149, 155, 158, 161, 200, 203, 204, 205, 206, 209, 210, 299, 357, 367, 368, 369, 370, 402, 404, 508, 648, 654, 658, 662, 668, 669, 670, 672, 673, 691, 702, 708, 713, 732, 735, 739, 740, 743, 747, 752, 753, 755, 756, 757, 765, 767, 773, 774, 775, 776, 788, 789, 791, 792, 807, 808], "gnn_modul": 357, "gnnbenchmarkdataset": [133, 134, 147, 148, 149], "gnnexplain": [139, 140, 179, 180, 368], "gnnlayer": 357, "gnn\uc5d0": 746, "gnn\uc740": 739, "gnn\uc744": [740, 743, 753, 755], "gnu": 758, "go": [13, 20, 21, 507, 757, 758, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "goe": [4, 19, 20, 646, 656, 770, 771], "gone": 772, "good": [133, 134, 158, 771, 776, 779, 792], "googl": [20, 763, 802], "gossipcop": 155, "goto": 152, "gp_": [4, 9], "gpb": [4, 229, 637, 722], "gpt": 802, "gpu": [6, 8, 9, 13, 20, 88, 107, 109, 111, 117, 118, 123, 124, 200, 237, 238, 275, 276, 283, 286, 294, 372, 401, 492, 501, 503, 507, 508, 509, 514, 528, 580, 581, 641, 650, 654, 656, 658, 661, 663, 668, 729, 734, 739, 743, 747, 752, 757, 758, 760, 761, 765, 767, 779, 783, 784, 785, 786, 795, 802, 810], "gpu_0": [9, 401], "gpu_cach": 200, "gpu\u56fe\u53ea\u63a5\u53d7gpu\u4e0a\u7684\u7279\u5f81\u6570\u636e": 688, "gpu\ub85c": [729, 741, 746], "gpu\ub97c": 743, "gpu\uc5d0": [729, 739, 742, 746], "gpu\uc5d0\uc11c": [725, 742], "graclu": 6, "grad": [8, 117, 118], "grad_fn": [8, 117, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 354, 355, 356, 359, 361, 362, 363, 364, 375, 377, 378, 379, 382], "gradient": [4, 8, 9, 325, 329, 339, 357, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 635, 654, 663, 739, 747, 772, 779, 807], "gradscal": [663, 747], "gradual": [798, 801, 802], "graident\ub4e4\uc740": 747, "grain": [764, 776, 795], "granular": [160, 162], "graph": [3, 6, 8, 10, 12, 13, 19, 20, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 195, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 400, 401, 402, 403, 404, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 632, 634, 635, 644, 645, 648, 649, 650, 651, 657, 662, 663, 665, 667, 670, 677, 678, 679, 682, 683, 686, 687, 688, 689, 690, 693, 698, 706, 708, 709, 710, 711, 712, 713, 715, 717, 718, 719, 722, 723, 724, 725, 726, 727, 728, 729, 730, 734, 735, 737, 739, 740, 741, 742, 744, 746, 747, 751, 752, 753, 754, 755, 756, 758, 762, 763, 764, 765, 766, 767, 770, 774, 775, 783, 784, 785, 794, 795, 799, 800, 804, 808, 809, 810], "graph0": 631, "graph1": 631, "graph_data": [631, 647, 690, 731], "graph_degre": 174, "graph_edg": 773, "graph_emb": 798, "graph_embed_func": 798, "graph_feat": [126, 127, 370], "graph_format": 229, "graph_hidden_s": 798, "graph_id": [631, 773], "graph_id_field": 631, "graph_index": 20, "graph_label": 512, "graph_list": 288, "graph_nam": [4, 229, 635, 636, 637, 638, 639, 680, 681, 682, 720, 721, 722, 723, 779, 780], "graph_op": 798, "graph_path": [634, 679, 719], "graph_pool": 802, "graph_prop": 798, "graph_prop_func": 798, "graph_properti": 773, "graph_sampl": [200, 201, 202], "graph_train": 780, "graph_transform": [383, 384, 385, 386, 387, 388, 389], "graphconv": [327, 332, 341, 348, 351, 357, 363, 364, 370, 656, 658, 659, 661, 663, 664, 666, 671, 673, 699, 700, 701, 703, 706, 711, 713, 741, 743, 744, 746, 748, 750, 754, 756, 768, 772, 789], "graphdataload": [367, 370, 632, 633, 671, 677, 678, 711, 717, 718, 754, 761, 772, 807], "graphdataloader\uc758": 754, "graphemb": 798, "graphgp": 394, "graphnet": 765, "graphorm": 393, "graphpartitionbook": [4, 221, 225, 226, 228, 230, 637], "graphpool": 802, "graphpr": 135, "graphprop": 798, "graphproppr": [135, 632, 677, 717, 761], "graphsag": [168, 173, 338, 342, 362, 635, 657, 658, 659, 661, 666, 673, 683, 700, 713, 724, 743, 744, 746, 750, 756, 770, 779, 780, 784, 785, 786, 792], "graphsage\u4e2dgcn\u805a\u5408\u4e0d\u9700\u8981fc_self": 706, "graphsage\u7684\u5b9e\u73b0": 703, "graphsage\ub97c": 720, "graphsage\uc5d0\uc11c": 756, "graphsaint": [156, 184, 207], "graphviz_layout": 795, "graphwis": 379, "graph\uc5d0": 740, "graph\uc758": [741, 746, 756], "great": 791, "greater": [129, 187, 275, 276, 508, 509, 510, 795], "greatli": [793, 805], "greedi": 6, "green": 783, "grid": [166, 180], "grid_siz": 180, "groud": 756, "ground": [146, 150, 163, 169, 673, 756, 768, 780, 785, 791, 798], "group": [4, 19, 162, 163, 297, 298, 357, 401, 635, 640, 647, 764, 770, 773, 791], "groupbi": 773, "growth": 790, "grpah": 615, "gru": [355, 798], "grucel": 798, "gsddmm": 12, "gsddmmbackward": 8, "gspmm": 12, "gspmmbackward": [8, 350], "gt": [390, 391, 392, 393, 394, 395, 396, 397, 761], "gtlayer": 761, "gtmodel": 761, "guarante": [4, 100, 101, 216, 221, 228, 504, 807], "guid": [1, 3, 10, 20, 200, 204, 205, 206, 580, 633, 638, 657, 673, 682, 732, 757, 779, 784, 785, 795], "guide_cn": [691, 708], "guidelin": 757, "guo": [795, 802], "gz": [630, 676, 716], "gz_file_path": [630, 676, 716], "gz\u6216": 676, "gz\u6587\u4ef6": 676, "h": [4, 5, 21, 24, 26, 27, 29, 33, 34, 42, 43, 45, 50, 52, 53, 55, 69, 72, 73, 76, 90, 91, 92, 93, 99, 102, 103, 107, 112, 113, 114, 115, 119, 126, 127, 142, 170, 171, 172, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 293, 331, 332, 335, 336, 344, 345, 347, 349, 350, 351, 358, 363, 364, 367, 368, 369, 370, 395, 396, 397, 398, 399, 400, 404, 422, 496, 497, 501, 502, 517, 518, 586, 587, 588, 590, 591, 599, 600, 601, 607, 612, 613, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 645, 650, 652, 654, 658, 660, 663, 666, 669, 671, 672, 673, 688, 693, 695, 697, 698, 700, 702, 706, 709, 711, 712, 713, 729, 734, 737, 739, 740, 743, 745, 747, 750, 753, 754, 755, 756, 758, 761, 762, 764, 768, 770, 771, 772, 780, 783, 784, 785, 786, 789, 790, 792, 795, 798, 802, 808], "h1": [5, 46, 74, 327, 587, 608, 761], "h2": [5, 46, 69, 74, 327, 587, 608, 761], "h2h": 790, "h2o": 790, "h_": [333, 338, 344, 349, 350, 355, 359, 362, 368, 369, 666, 667, 706, 707, 750, 751, 762, 770, 789, 792, 795], "h_atom": 172, "h_cat": 795, "h_dict": [673, 713, 756], "h_dim": 790, "h_dst": [398, 658, 660, 700, 702, 743, 745, 784, 785, 786, 808], "h_e": [339, 345, 360], "h_feat": [768, 770, 771, 772, 784, 785, 786, 808], "h_g": [671, 711, 754], "h_head": [399, 400], "h_i": [331, 334, 335, 339, 340, 341, 342, 343, 345, 346, 349, 350, 352, 353, 354, 355, 356, 359, 360, 361, 362, 398, 402, 764, 790, 792, 802], "h_item": [673, 713, 756], "h_j": [331, 334, 339, 341, 343, 345, 346, 349, 350, 351, 352, 353, 356, 359, 360, 361, 362, 398, 790, 795], "h_jl": 795, "h_max": 5, "h_n": [339, 345, 360, 770, 786], "h_neg_dst": [780, 785], "h_neg_src": [780, 785], "h_neigh": [660, 666, 702, 706, 745, 750], "h_new": 5, "h_pos_dst": [780, 785], "h_pos_src": [780, 785], "h_self": [666, 706, 750], "h_size": 795, "h_src": [398, 660, 702, 745, 786], "h_sub_g": [647, 690, 731], "h_sum": [5, 126, 127], "h_t": 802, "h_tail": [399, 400], "h_total": [770, 786], "h_u": [669, 709, 753, 770, 771, 783, 785, 786, 798], "h_user": [673, 713, 756], "h_v": [665, 669, 671, 705, 709, 711, 749, 753, 754, 770, 771, 783, 785, 786, 789], "h_x": 345, "ha": [4, 5, 8, 13, 21, 26, 27, 29, 30, 31, 33, 35, 36, 46, 47, 50, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 69, 70, 86, 87, 89, 90, 91, 92, 93, 99, 100, 101, 106, 112, 113, 114, 116, 117, 118, 120, 129, 130, 131, 133, 134, 141, 146, 147, 148, 149, 150, 153, 154, 156, 158, 162, 163, 164, 165, 168, 169, 175, 181, 182, 184, 210, 211, 220, 229, 234, 275, 276, 277, 281, 282, 283, 286, 293, 295, 327, 348, 356, 371, 372, 373, 397, 401, 421, 423, 485, 492, 496, 498, 500, 501, 504, 506, 507, 510, 514, 517, 518, 519, 520, 553, 580, 585, 590, 591, 629, 631, 633, 635, 636, 637, 638, 639, 640, 642, 643, 644, 647, 650, 656, 657, 658, 660, 662, 663, 664, 666, 668, 669, 671, 718, 726, 758, 761, 762, 764, 765, 769, 770, 771, 772, 779, 780, 786, 789, 790, 791, 792, 795, 798, 799, 802, 803, 805], "hadamard": 761, "half": [8, 138, 584, 650, 651, 734, 802], "halo": [225, 229, 295, 486, 638, 639, 723], "halo_hop": 229, "halt": [507, 802], "halt_and_accum": 802, "halt_dec": 802, "halt_enc": 802, "haltingunit": 802, "hamilton": 770, "hand": 639, "handcraft": [157, 159], "handl": [200, 331, 343, 344, 346, 347, 349, 350, 351, 354, 356, 363, 446, 630, 631, 638, 639, 640, 641, 643, 646, 650, 662, 666, 667, 769, 772, 792, 798, 802], "hao": 792, "happen": [200, 216, 504, 662, 786, 791], "happend": 160, "har": [793, 805], "hard": [20, 798], "harm": [331, 343, 346, 347, 349, 350, 351, 354, 356, 363], "harvard": 802, "has_cach": [152, 629, 634, 675, 679, 715, 719], "has_dupl": 764, "has_edges_between": [508, 509, 798], "has_nontree_edg": [220, 488], "has_reverse_edg": [220, 488], "has_top": 723, "hasattr": 136, "hash": [152, 189, 190, 232, 630, 676, 716], "hash_kei": 152, "hat": [351, 367, 368, 771, 785, 789, 791, 801], "have": [4, 6, 8, 9, 13, 20, 21, 25, 33, 34, 47, 52, 54, 55, 56, 57, 59, 60, 67, 86, 87, 92, 93, 99, 114, 115, 116, 117, 118, 120, 123, 124, 128, 129, 157, 161, 167, 177, 187, 195, 200, 201, 202, 204, 206, 209, 210, 216, 217, 220, 223, 224, 230, 231, 234, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 285, 286, 294, 295, 299, 327, 329, 330, 346, 358, 361, 363, 369, 370, 374, 376, 380, 381, 402, 421, 485, 486, 502, 503, 505, 507, 508, 509, 510, 511, 519, 520, 539, 542, 543, 544, 561, 571, 575, 579, 580, 585, 586, 588, 631, 633, 635, 636, 637, 638, 639, 640, 642, 644, 647, 650, 652, 654, 655, 656, 658, 659, 660, 661, 663, 667, 669, 671, 673, 728, 731, 740, 761, 764, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 790, 791, 792, 795, 796, 798, 802, 805, 807, 808], "hdf": [288, 512, 643], "hdfs\u4e2d\u52a0\u8f7d\u6216\u5411s3": 686, "hdfs\u4fdd\u5b58\u56fe": 686, "hdfs\uc5d0": 727, "he": [94, 95, 116, 498, 499, 500, 502, 588, 596, 647, 650, 690, 693, 731, 734, 795, 798], "head": [8, 336, 343, 344, 347, 349, 350, 358, 378, 379, 390, 392, 393, 394, 395, 396, 397, 399, 400, 663, 747, 773, 793, 803, 805], "head_dim": 761, "head_out": 792, "head_siz": 358, "header": 631, "head\uc758": 747, "heat": [171, 172, 604], "heatkernel": 12, "heavi": 185, "heavili": 650, "height": [179, 180], "height_in": 801, "height_in_i": 801, "height_out": 801, "height_out_i": 801, "held": 160, "help": [157, 586, 646, 647, 671, 768, 791], "henc": [115, 124, 128, 133, 134, 147, 148, 149, 182, 238, 280, 286, 502, 579, 588, 643, 647, 731], "here": [5, 8, 20, 30, 142, 147, 148, 160, 162, 168, 170, 171, 172, 174, 175, 229, 327, 627, 631, 632, 633, 637, 638, 651, 652, 655, 656, 659, 661, 662, 663, 665, 668, 669, 672, 718, 723, 759, 760, 761, 762, 765, 769, 770, 771, 772, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 808], "hereaft": 802, "hetergen": [234, 421], "hetero": 638, "hetero_block": [698, 740], "hetero_fronti": [698, 740], "hetero_graph": [668, 669, 672, 673, 708, 709, 712, 713, 752, 753, 755, 756], "heteroclassifi": [671, 711, 754], "heterodotproductpredictor": [669, 672, 709, 712, 753, 755], "heterogen": [1, 4, 12, 25, 26, 27, 30, 33, 34, 35, 36, 37, 41, 46, 50, 52, 53, 64, 65, 71, 74, 76, 78, 81, 92, 93, 94, 95, 99, 100, 101, 107, 112, 113, 114, 115, 116, 137, 204, 206, 209, 210, 211, 212, 213, 214, 215, 229, 231, 234, 276, 277, 281, 282, 326, 327, 328, 329, 331, 343, 346, 347, 349, 350, 351, 354, 356, 358, 363, 368, 369, 421, 485, 498, 499, 500, 508, 519, 520, 579, 580, 585, 586, 588, 594, 595, 596, 601, 602, 611, 612, 615, 616, 635, 638, 639, 641, 642, 649, 664, 666, 720, 725, 726, 737, 742, 748, 750, 795], "heterogenen": [112, 502], "heterograph": [1, 4, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 65, 67, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 108, 112, 113, 114, 115, 116, 117, 118, 120, 123, 124, 128, 210, 234, 235, 277, 281, 282, 294, 299, 327, 329, 343, 344, 346, 347, 349, 350, 354, 356, 359, 362, 368, 369, 421, 422, 485, 498, 499, 500, 502, 503, 506, 507, 508, 509, 579, 580, 585, 586, 588, 594, 595, 596, 601, 611, 612, 616, 626, 631, 652, 655, 657, 667, 668, 672, 673, 690, 698, 708, 712, 713, 731, 740, 751, 752, 755, 756, 798, 801], "heterographconv": [656, 659, 661, 671, 673, 699, 701, 703, 707, 711, 713, 741, 744, 746, 754, 756], "heterogrph": [90, 91], "heteromlppredictor": [669, 709, 753], "hexadecim": [189, 190], "hg": [50, 54, 59, 60, 76, 86, 87, 89, 100, 101, 106, 299, 368, 369, 585, 586, 647, 655, 671, 690, 711, 723, 731, 754], "hg1": [35, 36, 37, 120, 626], "hg2": [35, 36, 37, 120, 626], "hg_2": 585, "hhhiddleston": 691, "hid_feat": [671, 673, 711, 713, 754, 756], "hid_siz": 663, "hidden": [164, 334, 345, 365, 378, 379, 393, 654, 665, 669, 673, 739, 749, 753, 790, 791, 792, 795, 802], "hidden_d": 365, "hidden_dim": [370, 671, 711, 754, 762, 792], "hidden_feat": [334, 656, 659, 661, 699, 701, 703, 741, 744, 746], "hidden_featur": [656, 658, 659, 661, 669, 672, 698, 699, 700, 701, 703, 709, 712, 740, 741, 743, 744, 746, 753, 755], "hidden_s": [164, 345, 393, 759, 760, 761], "hierarch": 174, "high": [229, 369, 370, 399, 400, 512, 636, 650, 651, 721, 758, 765, 776, 792, 801, 802], "high2low": [369, 370], "higher": [8, 204, 367, 368, 369, 370, 672, 776, 791, 792, 801, 803, 805], "highest": [171, 172, 792], "highli": [337, 338, 628, 757, 765, 790], "highlight": [633, 759, 760, 761, 762, 786, 791, 802, 808], "hing": [659, 744], "hint": [652, 737], "histogram": [792, 801], "histor": 155, "hold": [6, 35, 36, 123, 200, 207, 236, 237, 380, 595, 596, 616, 639, 647, 667, 770], "holist": 10, "home": [22, 136, 638, 723, 773, 779, 784, 785, 786, 791, 795, 798, 801], "homebrew": 758, "homegen": [722, 754], "homo": [171, 172, 341, 342], "homogen": [1, 4, 6, 8, 25, 26, 27, 33, 34, 35, 36, 37, 41, 46, 47, 52, 53, 54, 56, 59, 60, 64, 65, 74, 76, 78, 81, 86, 87, 89, 92, 93, 94, 95, 99, 100, 101, 106, 109, 112, 113, 114, 115, 116, 117, 118, 120, 135, 136, 199, 200, 204, 205, 206, 209, 210, 212, 213, 214, 215, 229, 230, 234, 277, 279, 281, 282, 283, 284, 285, 286, 294, 331, 343, 344, 346, 347, 349, 350, 351, 354, 356, 359, 362, 363, 367, 370, 421, 485, 492, 495, 498, 499, 500, 501, 502, 503, 505, 507, 510, 515, 578, 580, 581, 585, 586, 587, 588, 595, 596, 601, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 615, 616, 631, 637, 638, 639, 642, 655, 656, 659, 661, 666, 669, 671, 672, 673, 722, 723, 726, 731, 740, 741, 744, 746, 750, 753, 754, 755, 756, 786], "homogeneous\uc5ec\uc57c": 745, "homograph": [40, 55, 631], "homophil": [158, 287, 420], "homophili": [12, 233, 287, 420], "hood": [635, 638, 789, 807], "hook": [367, 368, 369, 370], "hop": [209, 229, 280, 281, 282, 295, 363, 364, 367, 368, 486, 605, 760, 783, 791, 792], "hop2j_list": 791, "host": [1, 2, 5], "hostil": 162, "hot": [161, 164, 403, 769, 798], "hotel": 159, "hour": 162, "hous": [138, 139, 140], "how": [4, 8, 10, 20, 136, 158, 161, 210, 341, 344, 350, 352, 356, 375, 377, 382, 503, 504, 519, 520, 588, 628, 629, 630, 631, 632, 633, 634, 636, 637, 638, 639, 640, 642, 649, 651, 654, 655, 658, 659, 660, 661, 662, 663, 664, 665, 668, 669, 673, 698, 740, 746, 758, 759, 760, 761, 762, 767, 768, 770, 771, 772, 773, 774, 775, 776, 779, 783, 785, 786, 789, 790, 791, 792, 793, 798, 801, 803, 805, 807, 808], "howev": [4, 8, 20, 21, 225, 637, 639, 640, 642, 646, 658, 666, 758, 771, 772, 779, 783, 791, 792, 795, 798, 802], "html": [8, 20, 142, 175, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 759, 760, 761, 762, 764, 776, 784, 785, 786], "http": [8, 20, 22, 131, 132, 133, 134, 141, 142, 143, 147, 148, 149, 155, 157, 158, 159, 161, 163, 164, 167, 168, 170, 173, 175, 177, 185, 200, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 370, 392, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 503, 508, 627, 633, 638, 678, 691, 710, 718, 723, 758, 759, 760, 761, 762, 764, 765, 773, 776, 779, 784, 785, 786, 798, 802, 808], "hu": [650, 693, 734, 798], "huaiwen": 691, "huang": [691, 789, 791], "huge": 663, "hugectr": 200, "human": 792, "hundr": [639, 757], "hurt": 792, "hv": [95, 115, 116, 499, 502, 588, 647, 650, 690, 693, 731, 734, 798], "hv_init": 798, "hv_old": 798, "hx": [663, 747], "hy": [663, 747], "hyper": [4, 365, 792, 795], "hypercub": 166, "hyperedg": 762, "hyperedge_degre": 762, "hypergraph": 763, "hyperlink": [151, 178, 182, 183], "hyperparamet": [182, 351, 369, 370, 503, 672, 792], "hyperthread": 776, "h\u662f\u4ece5": [709, 712], "h\u73b0\u5728\u662f\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u5f20\u91cf\u5bf9": 702, "i": [0, 1, 4, 5, 6, 7, 8, 9, 11, 13, 19, 20, 21, 25, 26, 27, 30, 31, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 47, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 72, 73, 74, 78, 79, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 135, 138, 139, 140, 141, 142, 143, 144, 146, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 182, 184, 185, 186, 187, 190, 195, 197, 198, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 251, 252, 253, 254, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 298, 299, 325, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 420, 421, 422, 424, 426, 429, 431, 444, 445, 446, 447, 450, 452, 456, 458, 464, 466, 470, 472, 485, 486, 492, 493, 494, 495, 496, 497, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 520, 525, 528, 529, 539, 542, 543, 544, 545, 546, 553, 555, 557, 558, 559, 561, 564, 565, 567, 571, 578, 579, 580, 582, 583, 584, 586, 588, 590, 591, 592, 594, 595, 596, 603, 604, 606, 607, 609, 612, 613, 614, 618, 619, 620, 621, 623, 624, 625, 626, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 677, 689, 690, 693, 698, 706, 707, 712, 716, 717, 718, 722, 723, 726, 729, 730, 731, 734, 735, 740, 743, 745, 750, 751, 754, 755, 757, 758, 759, 760, 761, 762, 764, 765, 766, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 792, 795, 796, 798, 799, 801, 802, 803, 805, 807, 808], "i2h": 790, "i64": [638, 723], "i_": 358, "i_1": [115, 502], "i_2": 502, "i_j": 795, "i_n": 115, "ic": 802, "icew": 162, "icews18": [24, 162], "icon": 760, "id": [0, 4, 6, 12, 19, 25, 26, 31, 33, 34, 38, 43, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 76, 77, 86, 87, 89, 91, 92, 93, 94, 95, 99, 103, 106, 113, 114, 120, 121, 122, 123, 124, 128, 129, 131, 135, 137, 141, 175, 187, 195, 199, 210, 211, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 275, 276, 277, 281, 282, 283, 295, 296, 297, 299, 325, 326, 329, 367, 368, 369, 371, 372, 373, 397, 421, 485, 486, 492, 493, 494, 498, 499, 501, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 519, 520, 580, 585, 586, 587, 588, 592, 620, 625, 631, 633, 635, 638, 646, 647, 653, 655, 656, 659, 661, 662, 722, 730, 731, 740, 741, 744, 746, 762, 769, 773, 784, 785, 786, 790, 795, 802, 807, 808], "id2etyp": 637, "id2ntyp": 637, "id_": 211, "id_tensor": 4, "idconvert": 637, "idea": [20, 21, 671, 672, 764, 771, 795, 802, 803, 805], "ideal": 792, "ident": [115, 210, 339, 351, 360, 508, 580, 595, 602, 635, 661, 672, 759, 760, 762, 764, 785, 786, 808], "identifi": [4, 29, 30, 31, 33, 46, 47, 52, 54, 56, 59, 60, 61, 62, 72, 79, 86, 87, 89, 90, 91, 92, 93, 99, 106, 108, 112, 113, 116, 230, 235, 367, 368, 369, 370, 401, 423, 496, 498, 500, 517, 636, 637, 666, 669, 671], "idf": 157, "idtyp": [4, 53, 63, 70, 123, 124, 129, 237, 238, 275, 276, 493, 494, 646, 657, 689, 730], "idx": [130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 629, 633, 634, 675, 678, 679, 715, 718, 719, 761], "idx_b": 444, "idx_list": 288, "idx_split": [784, 785, 786, 808], "id\uac00": 723, "id\uac12\ub4e4\uc744": 722, "id\uac12\ub4e4\uc774": 718, "id\uac12\uc744": 723, "id\ub294": [722, 723, 731, 740], "id\ub4e4\uacfc": 722, "id\ub4e4\ub85c": 722, "id\ub4e4\uc5d0": 730, "id\ub4e4\uc640": 740, "id\ub4e4\uc740": [723, 731], "id\ub4e4\uc744": [722, 723], "id\ub4e4\uc758": [741, 744, 746], "id\ub77c\uace0": 730, "id\ub85c": [722, 730], "id\ub97c": [722, 723, 730, 731, 738, 741], "id\ub9cc\uc744": 723, "id\uc5d0": 723, "id\uc640": [722, 723, 741], "id\uc758": [722, 723, 730], "id\uc774\ub2e4": 723, "ie": 160, "ignor": [115, 131, 141, 190, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 367, 368, 369, 370, 631], "ignore_bipartit": 115, "ii": [351, 364], "ij": [299, 331, 333, 341, 343, 344, 345, 349, 350, 351, 354, 355, 359, 364, 693, 734, 762, 764, 792, 801, 802], "ik": 792, "illustr": [637, 639, 646, 759, 760, 761, 762, 779, 780, 791, 802], "imag": [156, 765, 769, 772], "imaginari": 761, "imbal": [158, 639], "imdb": 177, "imdbbinari": [161, 807], "imdbmulti": 161, "immedi": [21, 40, 505, 662, 792], "immunolog": 792, "impact": [13, 504], "implement": [0, 4, 6, 8, 9, 13, 20, 21, 22, 187, 333, 356, 371, 372, 390, 401, 424, 426, 429, 431, 450, 452, 456, 458, 464, 466, 470, 472, 501, 598, 628, 629, 630, 631, 633, 634, 635, 636, 637, 639, 649, 650, 651, 654, 656, 659, 661, 662, 666, 671, 673, 746, 757, 759, 760, 764, 768, 770, 773, 784, 786, 792, 793, 795, 803, 805], "impli": 790, "implicit": [88, 672, 712, 755, 764], "implicitli": [26, 113, 798], "import": [4, 5, 6, 8, 19, 20, 21, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 116, 120, 123, 124, 126, 127, 129, 135, 138, 139, 140, 143, 145, 151, 156, 167, 174, 176, 177, 178, 179, 180, 182, 183, 185, 194, 204, 207, 208, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 293, 299, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 420, 421, 422, 423, 448, 485, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 512, 514, 515, 516, 517, 518, 519, 520, 555, 578, 579, 581, 585, 586, 587, 588, 590, 591, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 643, 644, 645, 646, 647, 650, 651, 652, 660, 661, 663, 665, 666, 667, 668, 669, 670, 671, 673, 675, 676, 677, 678, 679, 680, 681, 686, 687, 688, 689, 690, 693, 694, 695, 698, 702, 703, 705, 706, 707, 708, 709, 710, 711, 713, 715, 716, 717, 718, 719, 720, 721, 722, 727, 728, 729, 730, 731, 734, 735, 736, 737, 740, 745, 746, 747, 749, 750, 751, 752, 753, 754, 756, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "importance_sampl": [204, 508], "importerror": [759, 760, 761, 762, 764], "imposs": [510, 785], "impress": 792, "improv": [4, 9, 20, 603, 633, 663, 776, 790, 795, 798, 799, 802, 805], "in_": [334, 343, 344, 347, 349, 350, 354, 356, 362], "in_degre": [4, 86, 88, 391, 645, 659, 666, 688, 701, 706, 729, 744, 750, 769, 791, 808], "in_dim": [368, 369, 370, 669, 671, 709, 711, 753, 754, 792], "in_dir": 639, "in_edg": [87, 645, 688, 729, 791], "in_edge_feat": 344, "in_feat": [328, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 353, 354, 355, 356, 359, 361, 362, 363, 364, 367, 382, 398, 402, 635, 656, 659, 660, 661, 663, 665, 671, 673, 680, 699, 701, 702, 703, 705, 711, 713, 720, 741, 744, 745, 746, 747, 749, 754, 756, 768, 770, 771, 772, 779, 780, 784, 785, 786, 789, 790, 791, 808], "in_feat_nam": 613, "in_feats\u662f\u8f93\u5165\u7279\u5f81\u7684\u7ef4\u5ea6": 713, "in_featur": [656, 658, 659, 661, 669, 672, 698, 699, 700, 701, 703, 709, 712, 740, 741, 743, 744, 746, 753, 755, 789, 795], "in_indx": 801, "in_nod": 801, "in_node_feat": 344, "in_siz": [328, 330, 339, 345, 358, 360, 663, 759, 760, 762, 764], "in_subgraph": [281, 485, 657, 698, 740], "in_test_mask": [187, 195], "in_train_mask": [187, 195], "in_valid_mask": [187, 195], "inbound": [204, 206, 209, 223, 230, 231, 277, 508, 509, 510, 511, 580, 740], "inc": 62, "incept": [613, 760], "incid": [12, 61, 62, 210, 234, 235, 639, 649, 656, 659, 669, 733, 741, 762, 771, 785, 791], "includ": [4, 20, 21, 47, 61, 62, 130, 131, 135, 136, 141, 153, 154, 157, 158, 159, 165, 172, 181, 187, 195, 204, 206, 209, 220, 225, 229, 281, 282, 337, 346, 361, 371, 373, 488, 503, 580, 631, 635, 638, 639, 642, 643, 650, 653, 665, 666, 667, 669, 671, 672, 762, 771, 783, 792, 795, 798, 802], "include_dst_in_src": 580, "inclus": [20, 197], "incom": [19, 60, 99, 116, 204, 206, 277, 295, 299, 347, 424, 425, 426, 427, 429, 430, 431, 432, 450, 451, 452, 453, 456, 457, 458, 459, 464, 465, 466, 467, 470, 471, 472, 473, 596, 649, 740, 770, 790, 792, 795, 802], "incomplet": [4, 200, 203, 630, 676, 716, 784, 785, 808], "inconsist": [158, 333], "incorpor": 673, "increas": [351, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 504, 635, 765], "increment": [507, 622, 798, 802], "incur": [234, 235, 277, 281, 282, 421, 422, 485, 662], "inde": [21, 580, 585], "indent": 723, "independ": [517, 518, 590, 591, 647], "index": [4, 6, 20, 21, 94, 95, 107, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 275, 276, 333, 351, 526, 527, 590, 591, 629, 633, 636, 639, 645, 666, 678, 688, 715, 718, 729, 764, 779, 790, 802], "indic": [4, 6, 8, 11, 29, 30, 31, 52, 53, 61, 62, 100, 101, 129, 133, 134, 136, 137, 139, 140, 142, 145, 147, 148, 174, 176, 179, 180, 186, 199, 200, 203, 208, 210, 221, 228, 229, 230, 234, 275, 276, 285, 288, 295, 296, 340, 390, 392, 393, 403, 421, 444, 486, 503, 504, 506, 507, 522, 523, 524, 525, 526, 527, 528, 530, 532, 533, 535, 536, 537, 539, 540, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 580, 588, 633, 636, 638, 639, 640, 642, 646, 647, 650, 655, 661, 667, 670, 673, 713, 756, 759, 760, 761, 762, 764, 768, 773, 779, 783, 789, 790, 791, 792, 795, 798], "indices1": [561, 573], "indices2": [561, 573], "indirectli": 643, "individu": [119, 120, 162, 335, 377, 508, 639, 798], "indptr": [31, 526, 527, 558, 559, 764], "induc": [25, 132, 187, 199, 207, 209, 223, 234, 235, 277, 281, 282, 367, 368, 379, 421, 422, 485, 509, 510, 511, 580, 656, 769, 795, 802], "induced_dst": 580, "induced_src": 580, "induct": [156, 168, 184, 207, 338, 342, 362, 792], "industri": 158, "ineffici": [13, 671], "inf": [392, 785], "infeas": 658, "infer": [4, 129, 275, 276, 403, 555, 557, 558, 559, 571, 585, 635, 639, 646, 654, 663, 700, 730, 743, 764, 776, 784, 785, 795, 798, 802], "inferenc": 776, "infin": [424, 426, 429, 431, 450, 452, 456, 458, 464, 466, 470, 472], "infinitesim": 339, "influenc": 132, "info": [193, 196], "info_path": [634, 679, 719], "inform": [4, 12, 21, 26, 27, 58, 94, 95, 100, 101, 113, 114, 115, 116, 123, 124, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 193, 196, 210, 225, 226, 229, 234, 235, 237, 238, 275, 276, 277, 280, 286, 294, 333, 367, 368, 401, 421, 422, 485, 493, 494, 498, 499, 500, 502, 579, 586, 588, 589, 626, 627, 629, 631, 633, 634, 636, 637, 638, 639, 646, 647, 655, 670, 671, 673, 715, 719, 758, 768, 770, 771, 772, 779, 785, 790, 791, 792, 795, 798, 802], "informat": 790, "infti": 365, "inher": [796, 805], "inherit": [598, 629, 630, 636, 664, 768, 773, 784, 785, 808], "init": [4, 9, 326, 366, 401, 665, 705, 749, 758, 761, 790, 792, 798, 801, 802], "init_att": 366, "init_beta": 331, "init_ep": [352, 353], "init_func": [4, 9, 401, 636, 681, 721], "init_graph": 801, "init_method": [807, 808], "init_model": 807, "init_node_activ": 798, "init_process_group": [224, 635, 636, 680, 681, 720, 721, 779, 780, 807, 808], "initi": [9, 12, 26, 27, 69, 117, 118, 126, 127, 164, 187, 195, 197, 299, 333, 342, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 363, 364, 365, 370, 390, 399, 400, 401, 403, 496, 497, 512, 517, 518, 590, 591, 603, 604, 609, 635, 637, 640, 665, 680, 681, 683, 720, 721, 724, 760, 784, 785, 789, 790, 791, 795, 798, 808], "initialize_hv": 798, "inner": [658, 672, 743, 755, 791], "inner_edg": [229, 638, 639], "inner_nod": [229, 638, 639, 723], "innov": 791, "inp_dropout": 365, "inplac": [20, 26, 27, 69, 88, 111, 293, 758, 795], "input": [4, 5, 6, 8, 19, 20, 33, 52, 55, 56, 57, 59, 72, 86, 99, 108, 109, 115, 117, 118, 119, 120, 124, 128, 129, 130, 131, 133, 134, 135, 137, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 181, 182, 184, 185, 200, 204, 206, 210, 212, 213, 214, 215, 221, 223, 228, 229, 230, 232, 234, 235, 236, 237, 238, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 293, 294, 295, 296, 299, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 392, 393, 394, 395, 398, 399, 400, 403, 404, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 495, 496, 497, 498, 501, 502, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 539, 542, 543, 544, 545, 546, 553, 565, 579, 581, 585, 586, 587, 588, 589, 590, 591, 594, 595, 602, 603, 604, 607, 609, 613, 626, 629, 636, 637, 639, 646, 650, 654, 656, 658, 659, 660, 661, 665, 666, 667, 669, 670, 671, 673, 707, 711, 713, 715, 722, 723, 743, 745, 750, 751, 754, 756, 760, 761, 764, 770, 772, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 802, 807, 808], "input_": [666, 706, 750], "input_d": 365, "input_dict": 761, "input_dim": [368, 369, 377], "input_dir": 723, "input_dst": [666, 706, 750], "input_featur": [656, 659, 661, 698, 699, 701, 703, 740, 741, 744, 746, 790], "input_id": [175, 326], "input_nod": [200, 204, 205, 206, 209, 210, 655, 656, 658, 659, 661, 662, 698, 699, 700, 701, 703, 740, 741, 743, 744, 746, 779, 780, 784, 785, 786, 808], "input_s": 807, "inputs\u662f\u8282\u70b9\u7684\u7279\u5f81": 711, "ins": 650, "insert": [636, 655, 662, 681, 721], "insert_revers": [130, 131, 141, 165], "insid": [20, 191, 346, 354, 365, 404, 639, 671, 808], "insight": [789, 790, 791, 792, 795, 798, 801, 802], "inspect": [638, 639, 793, 795, 805], "inspir": [365, 760, 770], "instal": [20, 336, 337, 338, 632, 677, 717, 723, 759, 760, 761, 762, 764, 779], "instanc": [13, 19, 131, 141, 152, 158, 161, 164, 166, 177, 199, 327, 367, 368, 369, 370, 639, 642, 650, 659, 660, 661, 669, 673, 762, 769, 771, 772, 776, 783, 791, 802, 807, 808], "instanti": [30, 72, 90, 91, 235, 422, 617, 618, 619, 620, 621, 622, 623, 624, 625], "instead": [4, 8, 20, 47, 56, 79, 115, 117, 164, 170, 171, 172, 177, 204, 206, 209, 211, 285, 367, 368, 369, 370, 379, 508, 509, 510, 511, 590, 591, 595, 636, 643, 647, 656, 658, 659, 660, 671, 745, 762, 772, 783, 784, 786, 791, 792, 798, 801, 803, 805], "institut": [639, 723, 790], "instruct": [20, 638, 758, 779], "instructon": 663, "instrument": 157, "int": [4, 6, 21, 26, 27, 33, 34, 37, 47, 52, 53, 54, 56, 57, 58, 59, 60, 70, 78, 79, 80, 81, 86, 87, 89, 92, 93, 94, 95, 99, 106, 113, 114, 116, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 195, 197, 199, 200, 203, 204, 205, 206, 207, 209, 216, 217, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 275, 276, 277, 279, 280, 281, 282, 283, 284, 288, 295, 296, 297, 298, 325, 326, 328, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 377, 378, 379, 380, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 421, 485, 486, 493, 494, 495, 498, 499, 503, 504, 505, 507, 508, 509, 510, 511, 513, 514, 515, 516, 538, 539, 541, 542, 543, 544, 545, 546, 555, 557, 558, 559, 560, 565, 571, 578, 586, 590, 591, 596, 603, 604, 605, 606, 609, 610, 613, 614, 617, 622, 631, 633, 644, 646, 655, 662, 663, 673, 678, 689, 713, 718, 723, 728, 730, 747, 756, 770, 771, 772, 773, 786, 795, 798], "int16": [143, 167], "int32": [4, 58, 63, 70, 117, 118, 123, 124, 129, 237, 238, 275, 276, 337, 493, 494, 506, 511, 519, 520, 535, 548, 638, 639, 644, 646, 687, 689, 728, 730, 764], "int64": [4, 30, 58, 63, 70, 123, 124, 129, 135, 143, 161, 164, 167, 175, 177, 185, 209, 234, 237, 238, 275, 276, 277, 281, 282, 421, 485, 493, 494, 506, 508, 585, 599, 600, 631, 638, 639, 646, 689, 723, 730, 769, 772, 773, 784, 785], "int8": [638, 639, 773], "integ": [21, 31, 38, 51, 77, 94, 95, 120, 123, 129, 135, 137, 139, 140, 179, 180, 190, 197, 200, 204, 206, 209, 229, 230, 237, 275, 276, 330, 337, 345, 358, 361, 373, 444, 447, 501, 510, 519, 520, 585, 586, 631, 637, 638, 639, 644, 646, 647, 655, 662, 728, 758, 769, 807], "integr": [162, 638, 664, 670, 803, 805], "intel": 663, "inter": [791, 799, 805], "interact": [51, 162, 168, 171, 334, 508, 509, 635, 642, 647, 690, 731, 773], "interaction_cutoff": 333, "interatom": 171, "interest": [631, 635, 784, 798, 802], "interfac": [4, 6, 19, 161, 225, 445, 446, 636, 637, 641, 644, 647, 652, 769, 786, 802], "intermedi": [615, 650, 654, 789], "intermediari": 792, "intern": [1, 4, 19, 21, 38, 51, 77, 124, 129, 171, 172, 237, 238, 275, 276, 326, 509, 510, 519, 520, 636, 637, 643, 646, 650, 662, 667, 751, 761, 773, 791], "interpol": 505, "intersect": [55, 187, 195], "interv": [760, 798, 801], "intimid": 791, "intra": [167, 791, 799, 805], "intra_src": 791, "introduc": [21, 76, 132, 154, 181, 232, 284, 337, 339, 353, 357, 390, 391, 392, 393, 394, 395, 396, 397, 495, 578, 586, 603, 604, 606, 609, 610, 614, 628, 632, 641, 647, 649, 657, 658, 664, 668, 671, 760, 785, 786, 791, 795, 802], "introduct": [641, 757, 767, 770, 771, 772, 784, 785, 787, 788, 789], "introductori": 768, "inttensor": [510, 519, 520], "intuit": [21, 764, 807], "inv": 764, "inv_sigma": 354, "inv_vocab": 795, "invalid": [5, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 390, 392, 393, 637, 666, 789, 792], "invari": [378, 379], "invent": 770, "invers": [153, 762], "inverse_indic": [281, 282], "invert": 795, "investig": 158, "invok": [4, 19, 21, 26, 33, 72, 92, 93, 99, 112, 113, 116, 124, 129, 152, 206, 224, 237, 238, 275, 276, 297, 327, 636, 637, 638, 639, 640, 647, 650, 663, 768, 779, 780, 807], "involv": [4, 20, 645, 655, 656, 658, 659, 669, 671, 672, 673, 773, 785, 789, 792, 807], "io": [158, 164, 177, 633, 678, 691, 718], "iostream": 21, "iou": 795, "ip": [639, 640, 724, 779, 780], "ip_addr1": [779, 780], "ip_addr2": [779, 780], "ip_addr3": 779, "ip_addr4": 779, "ip_config": [224, 635, 636, 639, 640, 680, 681, 683, 720, 721, 724, 779, 780], "ipynb": [768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "ipython": 760, "ip\u5730\u5740\u540e\u9762\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u7aef\u53e3": 683, "ip\u914d\u7f6e\u6587\u4ef6": 683, "irrespect": 802, "is_avail": [760, 802, 807], "is_bf16_support": 663, "is_block": [660, 666, 667, 702, 706, 707, 745, 750, 751], "is_gdata": 4, "is_input_lay": 790, "is_libxsmm_en": 627, "is_pin": 88, "is_tempor": [142, 160, 162], "is_train": 802, "is_unibipartit": [43, 44, 78, 81, 103, 104], "is_valid": 798, "isab": 379, "isinst": [660, 666, 667, 702, 706, 707, 745, 750, 751, 786], "isn": 643, "isol": [128, 146, 234, 277, 281, 282, 485, 498, 646, 730, 740], "isomorph": [352, 353, 807], "isotrop": [171, 172], "issu": [20, 124, 129, 164, 237, 238, 275, 276, 630, 663, 676, 716, 783], "item": [4, 21, 130, 131, 133, 134, 141, 142, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 168, 169, 170, 171, 172, 173, 174, 181, 182, 184, 186, 210, 212, 213, 214, 215, 285, 327, 506, 507, 631, 633, 641, 642, 657, 659, 661, 663, 666, 667, 668, 669, 671, 672, 673, 678, 701, 706, 707, 708, 709, 711, 712, 713, 718, 725, 744, 747, 750, 751, 752, 753, 754, 755, 756, 761, 771, 772, 784, 785, 789, 790, 791, 792, 795, 798, 807, 808], "item_feat": [669, 672, 673, 709, 712, 713, 753, 755, 756], "item\uc744": 753, "iter": [0, 3, 4, 6, 33, 34, 47, 52, 53, 54, 56, 57, 59, 60, 86, 87, 91, 92, 93, 99, 113, 129, 161, 164, 166, 170, 171, 172, 177, 199, 200, 201, 202, 203, 210, 234, 275, 276, 277, 281, 282, 332, 365, 373, 377, 421, 485, 498, 499, 587, 633, 646, 654, 655, 656, 658, 659, 661, 671, 703, 730, 740, 741, 743, 746, 760, 772, 784, 785, 786, 798, 801, 808], "iterate\ud558\uace0": [744, 746], "iterate\ud558\ub294": [743, 744, 746], "iterate\ud558\uba74\uc11c": [740, 754], "iterate\ud55c\ub2e4": [740, 754], "iterate\ud574\uc11c": 741, "iterating\ud558\ub294": 746, "iteration\ub9c8\ub2e4": 746, "iteration\uc744": 718, "iterator\ub294": 746, "iterator\ub97c": 746, "iterrow": 773, "itertool": 771, "ith": [186, 197], "its": [1, 4, 6, 9, 13, 21, 25, 44, 46, 67, 74, 78, 81, 104, 108, 135, 138, 160, 161, 163, 164, 166, 177, 199, 207, 283, 299, 327, 351, 354, 356, 362, 364, 367, 368, 369, 370, 371, 372, 373, 508, 510, 514, 517, 518, 519, 520, 585, 586, 594, 615, 636, 637, 638, 639, 641, 646, 649, 655, 661, 663, 668, 669, 670, 671, 673, 760, 762, 764, 765, 768, 772, 773, 779, 780, 783, 784, 789, 791, 792, 795, 798, 801, 802, 807, 808], "itself": [20, 200, 371, 373, 495, 505, 507, 510, 515, 669, 762, 789, 791, 802], "j": [4, 9, 20, 124, 238, 283, 299, 325, 329, 333, 334, 338, 339, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 364, 371, 373, 397, 507, 515, 519, 520, 579, 595, 650, 693, 734, 762, 764, 790, 791, 792, 795, 801, 802], "j4": 758, "j_1": [115, 502], "j_2": 502, "j_n": 115, "jake": [795, 801], "jean": 795, "ji": [348, 352, 356, 362, 650, 802], "jinj": [801, 802], "jinyang": 801, "jk": [348, 795], "jl": 795, "job": [20, 639, 640, 807], "join": [139, 152, 368, 369, 630, 634, 635, 639, 676, 679, 716, 719, 757, 779], "joint": 798, "json": [4, 229, 635, 636, 637, 638, 639, 640, 647, 680, 681, 682, 683, 720, 721, 722, 723, 724, 758, 779], "json\u4e2d\u7684\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 682, "json\u6587\u4ef6\u5305\u542b\u6240\u6709\u5212\u5206\u7684\u914d\u7f6e": 682, "json\u7684json\u6587\u4ef6": 682, "json\uacfc": 731, "judici": [793, 805], "jump": [402, 792], "jupyt": [636, 721, 763, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "jure": [770, 786], "just": [20, 21, 44, 78, 81, 104, 224, 637, 639, 647, 655, 671, 673, 772, 776, 779, 780, 786, 792], "k": [13, 20, 119, 120, 171, 172, 174, 199, 209, 211, 212, 213, 214, 215, 216, 217, 279, 280, 281, 282, 283, 284, 287, 295, 296, 332, 333, 335, 339, 340, 348, 354, 358, 363, 364, 367, 368, 371, 373, 374, 375, 376, 378, 380, 381, 390, 394, 397, 403, 495, 501, 511, 514, 553, 554, 561, 578, 590, 591, 605, 606, 610, 613, 614, 659, 666, 667, 671, 672, 673, 701, 706, 707, 711, 712, 713, 744, 750, 751, 754, 755, 756, 761, 764, 770, 771, 791, 792, 795, 798, 801, 802], "k_i": 802, "k_j": 802, "k_proj": 761, "kai": 795, "karat": [163, 643, 686, 727, 760, 773], "karate_club": 773, "karateclub": 24, "karateclubdata": [633, 678, 718], "karateclubdataset": [760, 773], "karlsruh": 130, "karypislab": [638, 723], "kd": [13, 283, 371, 373, 514], "kdd": [147, 148], "kde": 801, "keep": [6, 21, 136, 137, 177, 223, 294, 339, 501, 594, 651, 662, 791, 795], "keep_al": 640, "keep_orig_edg": 594, "keepdim": [663, 747, 798, 801, 802], "kei": [21, 25, 26, 27, 72, 107, 113, 114, 119, 120, 129, 144, 171, 172, 195, 200, 203, 211, 213, 229, 230, 231, 234, 276, 277, 281, 282, 295, 326, 327, 328, 368, 369, 421, 485, 486, 501, 512, 631, 632, 633, 639, 652, 667, 677, 717, 761, 773, 779, 792, 795, 796, 798, 802, 803, 805], "kept": [128, 640], "kera": [664, 748], "kernel": [5, 8, 33, 72, 92, 93, 99, 112, 164, 177, 333, 354, 378, 379, 397, 446, 450, 451, 452, 453, 456, 457, 458, 459, 464, 465, 466, 467, 470, 471, 472, 473, 604, 663, 757, 765, 779, 789], "kevin": 691, "keyerror": [665, 666, 705, 706, 749, 750], "keyword": [119, 132, 147, 148], "kg": [371, 373], "kgdata": [633, 678, 718], "khop_in_subgraph": 282, "khop_out_subgraph": 281, "khopgraph": 12, "ki": [348, 802], "kick": [759, 760, 761], "kill": 640, "kind": [124, 200, 238, 632, 786, 792], "kipf": [759, 766, 768, 789], "kit": 776, "kl": 795, "knn": [283, 514], "knn_g": [283, 514], "knn_graph": [13, 514], "know": [20, 656, 672, 770, 773, 786, 790, 808], "knowledg": [12, 20, 160, 162, 400, 402, 771, 790, 807], "knowledgegraphdataset": [153, 154, 181, 633, 678, 718], "known": [185, 403, 643, 795, 802], "known_host": 779, "konect": 163, "kv": 802, "kvstore": 4, "kwarg": [107, 119, 135, 136, 137, 200, 201, 202, 203, 205, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 367, 368, 369, 370, 383, 384, 385, 386, 387, 388, 389, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 698, 740], "l": [232, 286, 330, 331, 332, 334, 335, 338, 339, 340, 341, 342, 343, 345, 346, 349, 350, 351, 352, 353, 354, 356, 358, 359, 360, 361, 362, 367, 368, 370, 395, 403, 515, 553, 554, 561, 564, 572, 573, 607, 613, 654, 658, 663, 666, 667, 672, 697, 698, 700, 706, 707, 712, 739, 740, 743, 747, 750, 751, 755, 759, 762, 764, 770, 771, 779, 780, 783, 785, 786, 789, 790, 791, 792, 795, 802], "l0_neighbor_sampling_overview": [767, 783, 788], "l1": [372, 492], "l1_large_node_classif": [767, 784, 788], "l2": [283, 371, 372, 373, 492, 514, 665, 749, 790], "l2_large_link_predict": [767, 785, 788], "l2norm": 790, "l4_message_pass": [767, 786, 788], "l_": 791, "la": [204, 508], "label": [4, 6, 20, 24, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 194, 198, 203, 204, 206, 207, 209, 210, 220, 232, 233, 277, 287, 288, 325, 367, 370, 403, 420, 485, 488, 499, 501, 512, 629, 632, 633, 634, 639, 643, 656, 661, 662, 663, 668, 669, 671, 673, 677, 678, 679, 699, 703, 708, 709, 711, 713, 715, 717, 718, 719, 741, 746, 747, 752, 753, 754, 756, 759, 760, 761, 762, 768, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 802, 807, 808], "label0_nod": 791, "label1": 791, "label_dict": [194, 288, 634, 679, 719, 773], "label_kei": [171, 172], "label_propag": 403, "labelsmooth": 802, "labor": [204, 508], "lab\uc758": 732, "lacon": 760, "ladder": 166, "lake": 802, "lam": [365, 366], "lambda": [4, 33, 34, 351, 365, 366, 802], "lambda_": [335, 351], "lambda_max": [335, 340], "land": 495, "langl": [171, 172], "languag": [155, 160, 761, 769, 772, 795, 798, 802], "lapacian": 0, "laplacian": [284, 285, 335, 339, 365, 366, 394, 606, 761, 762], "laplacian_lambda_max": 335, "laplacian_p": 761, "laplacianp": [339, 394], "lapp": [12, 394], "larg": [3, 9, 10, 13, 21, 65, 121, 122, 123, 124, 129, 132, 164, 173, 199, 219, 220, 237, 238, 275, 276, 283, 287, 338, 342, 357, 362, 371, 373, 401, 405, 420, 514, 580, 585, 592, 629, 634, 639, 648, 653, 657, 662, 666, 668, 671, 757, 758, 767, 771, 772, 783, 785, 786, 788, 791, 802], "large_l0_neighbor_sampling_overview": 783, "larger": [171, 229, 405, 508, 651, 673, 783], "largest": [129, 275, 276, 285, 335, 340, 380, 511, 578, 590, 591, 614, 646, 730, 791], "last": [4, 5, 8, 198, 200, 203, 204, 206, 351, 356, 553, 586, 591, 640, 649, 650, 656, 661, 662, 666, 761, 784, 785, 789, 792, 808], "latent": 795, "later": [145, 151, 176, 178, 183, 331, 420, 636, 639, 758, 771], "latest": [639, 798], "latter": [299, 367, 368, 369, 370, 504, 636, 651, 656, 803, 805], "launch": [4, 401, 635, 636, 639, 683, 721, 724, 807], "law": 639, "layer": [12, 198, 200, 204, 205, 206, 209, 210, 326, 328, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 392, 393, 394, 398, 402, 503, 636, 651, 654, 656, 658, 661, 663, 664, 671, 672, 673, 700, 743, 746, 747, 748, 756, 764, 768, 770, 771, 772, 779, 780, 783, 784, 785, 786, 789, 792, 801, 803, 805], "layer1": [789, 791, 792], "layer2": [789, 791, 792], "layer3": 791, "layer_depend": 204, "layer_norm": 361, "layernorm": 802, "layer\uc640": 754, "layout": [30, 61, 62, 644], "lazi": [212, 213, 214, 215, 234, 235, 277, 281, 282, 421, 422, 485], "lazyfeatur": [212, 213, 214, 215], "lbfg": 785, "lbrace": [177, 649, 692, 698, 733, 740], "ld_library_path": [638, 723], "ldot": [357, 402, 594], "lead": [331, 341, 343, 346, 347, 349, 350, 351, 354, 356, 363, 636, 644, 646, 656, 666], "leaf": [155, 175, 369, 370, 795], "leak": 4, "leakag": 210, "leakg": 655, "leaky_relu": [764, 792], "leakyrelu": [336, 344, 347, 349, 350, 764, 792], "learn": [4, 9, 12, 13, 22, 156, 172, 184, 207, 287, 325, 328, 329, 331, 336, 338, 342, 346, 347, 349, 350, 354, 362, 363, 366, 367, 368, 380, 394, 400, 402, 403, 420, 505, 593, 599, 600, 601, 603, 633, 659, 668, 669, 671, 673, 732, 744, 757, 758, 760, 761, 764, 766, 768, 769, 770, 771, 773, 783, 784, 786, 789, 790, 791, 795, 796, 798, 801, 802, 805, 807, 808], "learn_beta": 331, "learn_ep": [352, 353], "learnabl": [4, 117, 118, 325, 329, 331, 333, 335, 336, 337, 338, 340, 341, 342, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 363, 364, 365, 377, 391, 395, 396, 397, 398, 399, 400, 402, 495, 610, 636, 665, 721, 749, 760, 792, 798], "least": [20, 118, 157, 365, 390, 393, 580, 791, 792], "leav": [650, 765, 769, 771, 795], "left": [117, 287, 332, 335, 338, 344, 347, 349, 350, 351, 352, 353, 354, 356, 358, 359, 362, 375, 376, 397, 402, 445, 446, 447, 578, 613, 614, 649, 651, 666, 671, 672, 692, 698, 706, 712, 733, 740, 750, 755, 764, 770, 771, 783, 785, 786, 790, 792, 795, 802], "leftarrow": [770, 802], "legitim": 159, "len": [72, 135, 142, 143, 160, 161, 162, 164, 166, 167, 175, 177, 185, 197, 210, 327, 402, 444, 448, 507, 514, 532, 554, 555, 558, 559, 573, 631, 633, 659, 663, 667, 669, 672, 673, 678, 698, 701, 707, 709, 712, 713, 718, 740, 744, 747, 751, 753, 755, 756, 760, 761, 771, 772, 773, 779, 780, 784, 785, 789, 790, 791, 795, 798, 801, 802, 807, 808], "length": [35, 36, 139, 160, 195, 197, 207, 221, 228, 229, 280, 299, 335, 395, 447, 448, 486, 505, 506, 507, 510, 515, 553, 554, 636, 642, 644, 728, 764, 769, 796, 801, 802, 805], "leq": [795, 802], "leskovec": [770, 786], "less": [117, 118, 136, 157, 216, 283, 371, 373, 395, 504, 514, 639, 646, 657, 792], "let": [42, 45, 73, 102, 124, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 444, 639, 649, 723, 760, 764, 779, 780, 784, 789, 791, 798, 807], "level": [0, 5, 22, 126, 127, 144, 496, 497, 512, 590, 591, 636, 637, 639, 643, 650, 667, 671, 721, 761, 770, 772, 773, 776, 789, 792, 795, 798, 801, 803, 805], "level\uc758": 721, "leverag": [329, 337, 338, 651, 663, 760, 765, 791, 795, 799, 805], "levi": 615, "lexicograph": [121, 522], "lexicon": 141, "lg": [286, 615, 791], "lg1": 791, "lg_batch": 174, "lg_layer": 791, "lg_x": 791, "lgnn": [793, 805], "lgnncore": 791, "lgnnlayer": 791, "lh": 445, "lhs_data": [445, 446], "lhs_field": [241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "lhs_target": 445, "li": [344, 604, 609, 613, 664, 691, 790, 792, 798, 801], "lib": [638, 723, 761, 779, 789, 792], "librari": [7, 11, 20, 21, 758, 764, 765, 798], "libxsmm": 627, "licens": 757, "life": 4, "lifesci": [377, 382], "ligand": 333, "light": 21, "like": [8, 20, 21, 25, 115, 129, 158, 204, 206, 209, 216, 357, 503, 504, 630, 631, 636, 639, 647, 651, 655, 656, 658, 660, 662, 665, 666, 668, 669, 671, 690, 709, 721, 731, 758, 768, 770, 772, 773, 784, 785, 786, 789, 802, 807], "like_orig_eids_0": 639, "likelihood": [504, 505, 672, 755, 791], "likewis": 785, "limit": [21, 233, 658, 765, 791], "limits_": [347, 790, 802], "lin": [352, 359, 364], "line": [21, 174, 286, 607, 636, 638, 639, 640, 644, 758, 767, 768, 779, 784, 793, 794, 801, 805, 807, 808], "line_graph": [174, 791], "line_graph_degre": 174, "linear": [328, 330, 342, 346, 352, 353, 356, 358, 359, 360, 362, 364, 367, 368, 369, 375, 390, 398, 405, 651, 656, 660, 661, 665, 669, 671, 694, 699, 702, 705, 709, 711, 736, 741, 745, 749, 753, 754, 759, 760, 761, 762, 770, 771, 785, 786, 789, 790, 791, 792, 795, 798, 802, 807], "linear_deg": 791, "linear_dst": [651, 694, 736], "linear_fus": 791, "linear_model": 325, "linear_prev": 791, "linear_radiu": 791, "linear_src": [651, 694, 736], "linearity\uc640": 746, "linearli": [330, 361, 759], "linegraph": 12, "lingfan": [790, 798], "link": [2, 12, 136, 145, 153, 154, 176, 181, 201, 204, 206, 210, 232, 398, 399, 400, 632, 636, 654, 668, 671, 673, 677, 701, 717, 718, 744, 761, 767, 768, 774, 775, 781, 782, 784, 787, 788, 791], "linkpr": 136, "linkproppr": [632, 677, 717, 780], "linspac": 801, "lint": 20, "linux": 776, "list": [4, 9, 20, 21, 26, 35, 36, 38, 44, 51, 53, 55, 72, 77, 91, 94, 95, 104, 116, 118, 119, 120, 121, 122, 123, 128, 129, 142, 144, 155, 171, 172, 174, 186, 187, 195, 197, 198, 199, 201, 202, 204, 206, 207, 209, 210, 212, 213, 214, 215, 219, 220, 225, 229, 235, 237, 275, 276, 285, 288, 293, 294, 327, 329, 335, 339, 360, 361, 402, 404, 422, 488, 490, 501, 507, 508, 510, 512, 514, 519, 520, 524, 534, 557, 580, 585, 586, 592, 594, 596, 598, 601, 603, 612, 626, 631, 632, 633, 634, 638, 639, 646, 650, 655, 656, 659, 661, 662, 666, 667, 671, 672, 673, 717, 718, 730, 754, 768, 769, 773, 776, 779, 784, 785, 791, 795, 798, 801, 802, 808], "listen": 636, "liter": [131, 141], "literatur": 669, "littl": [20, 21, 69, 656, 671, 802], "live": [4, 790], "ll": 772, "load": [0, 2, 3, 135, 136, 137, 139, 140, 144, 152, 162, 172, 173, 175, 179, 180, 193, 194, 203, 225, 226, 227, 288, 367, 370, 628, 629, 633, 635, 636, 638, 640, 661, 663, 675, 679, 686, 715, 717, 718, 719, 727, 747, 759, 760, 761, 770, 773, 779, 780, 789, 790, 791, 792, 798, 807], "load_cora": [791, 792], "load_cora_data": [789, 792], "load_data": 762, "load_edg": 227, "load_feat": 225, "load_graph": [194, 512, 634, 643, 647, 679, 686, 690, 719, 727, 731, 769], "load_info": [634, 679, 719], "load_nod": 227, "load_partit": [4, 229, 638, 639], "load_partition_book": [4, 638, 639], "load_partition_feat": [638, 639], "load_state_dict": 798, "load_subtensor": [635, 680, 720], "load_tensor": 639, "load_url": 798, "loader": [40, 199, 200, 201, 202, 203, 662, 791], "loader_cor": 776, "local": [4, 22, 69, 187, 204, 221, 225, 228, 229, 288, 335, 340, 401, 508, 512, 629, 630, 633, 634, 635, 636, 638, 639, 715, 718, 723, 761, 768, 779, 789, 792, 802], "local_edg": 723, "local_nod": 723, "local_node_idx": 723, "local_partit": 4, "local_scop": [367, 368, 369, 404, 656, 659, 660, 666, 669, 671, 672, 699, 701, 702, 706, 709, 711, 712, 741, 744, 745, 750, 753, 754, 755, 770, 771, 785, 786, 789], "local_to_global_nid": 329, "local_var": 69, "localhost": 20, "locat": [4, 221, 228, 553, 564, 629, 633, 638, 656, 764], "lock": [9, 66, 88, 111], "log": [22, 130, 131, 141, 165, 190, 334, 339, 351, 360, 367, 368, 369, 370, 672, 712, 755, 771, 785, 791, 792, 798, 801], "log_prob": 798, "log_softmax": [789, 792, 795, 798], "logic": [152, 802], "logical_and": 723, "login": 779, "logisticregress": 325, "logit": [299, 367, 368, 369, 370, 663, 669, 671, 673, 709, 711, 713, 747, 753, 754, 756, 759, 760, 761, 764, 768, 770, 789, 790, 792, 795, 798], "logit\uc73c\ub85c": 753, "logn": 371, "logp": [789, 792, 795], "logsigmoid": 798, "lollipop": 166, "long": [4, 13, 21, 58, 63, 67, 117, 129, 275, 276, 396, 403, 532, 639, 646, 657, 659, 689, 730, 791, 795, 802], "long_liv": 640, "longer": [796, 798, 805], "longest": 515, "longtensor": [4, 216, 326, 329, 355, 399, 400, 403, 503, 580, 636, 681, 698, 721, 740, 761, 762, 769, 773, 791, 798], "look": [8, 20, 211, 658, 660, 661, 669, 769, 784, 795, 798, 802], "lookup": [21, 790], "loop": [20, 61, 62, 115, 116, 173, 216, 283, 331, 337, 341, 343, 346, 347, 349, 350, 351, 354, 356, 361, 363, 371, 372, 373, 492, 500, 504, 514, 596, 611, 635, 636, 638, 639, 642, 658, 720, 726, 746, 760, 762, 776, 791, 792, 798, 802, 808], "loopi": 791, "loss": [4, 9, 325, 329, 367, 368, 369, 370, 401, 635, 636, 656, 659, 661, 663, 669, 671, 672, 673, 680, 681, 698, 699, 701, 703, 709, 711, 712, 713, 720, 721, 740, 741, 744, 746, 747, 753, 754, 755, 756, 759, 760, 761, 762, 768, 770, 771, 772, 779, 780, 783, 784, 785, 789, 790, 791, 792, 795, 798, 802, 807, 808], "loss_comput": 802, "loss_fcn": [635, 663, 680, 720, 759, 761, 779, 780], "loss_perm1": 791, "loss_perm2": 791, "loss\uac00": 747, "loss\ub97c": [746, 755, 756], "loss\uc5d0": 747, "lot": [21, 164, 177, 634, 657, 658, 671, 672], "low": [5, 229, 283, 339, 369, 370, 371, 373, 399, 400, 512, 514, 636, 637, 651, 721, 758, 792], "low2high": [369, 370], "lower": [21, 366, 633, 636, 678, 718, 770, 792, 801, 803, 805], "lowest": [171, 172], "lp": [399, 400], "lpe": 394, "lr": [4, 9, 325, 329, 367, 368, 370, 401, 635, 636, 663, 680, 681, 683, 720, 721, 724, 747, 759, 760, 761, 762, 768, 770, 771, 772, 779, 780, 789, 790, 791, 792, 795, 802, 807], "lr1": [636, 681, 721], "lr2": [636, 681, 721], "lr_schedul": 761, "lsc_2part": 639, "lsc_chunk": 639, "lstm": [362, 377, 402, 665, 705, 749, 767, 796, 797, 799, 802, 805], "lt": [13, 761, 762], "lumo": [171, 172], "lut": 802, "lvert": [397, 665, 705, 749], "m": [5, 8, 20, 61, 62, 72, 90, 91, 92, 93, 99, 112, 124, 126, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 293, 330, 339, 345, 358, 360, 367, 368, 369, 371, 373, 379, 404, 510, 553, 554, 561, 564, 572, 573, 622, 623, 624, 625, 650, 652, 660, 663, 666, 670, 672, 693, 695, 702, 706, 710, 712, 734, 735, 737, 745, 747, 750, 755, 758, 762, 764, 770, 783, 786, 789, 791, 798, 801], "m_": [345, 649, 692, 733, 770, 783], "m_i": 345, "m_r": 400, "m_v": [770, 783, 786], "machin": [4, 170, 171, 172, 201, 202, 221, 228, 229, 401, 633, 635, 636, 637, 638, 639, 640, 663, 732, 757, 765, 767, 768, 773, 779, 780, 791, 795, 798, 799, 802, 805, 809, 810], "machine_id": 4, "made": [173, 367, 368, 790, 802], "mag": [639, 723], "mag_lsc_partit": 639, "maggi": 691, "magnitud": 792, "mag\uc758": 723, "mai": [4, 6, 19, 20, 40, 115, 177, 204, 210, 216, 225, 295, 330, 358, 361, 486, 504, 585, 586, 630, 631, 633, 635, 636, 639, 640, 647, 665, 666, 667, 669, 670, 671, 672, 673, 676, 716, 758, 760, 768, 769, 771, 773, 776, 779, 784, 790], "mailbox": [5, 19, 99, 251, 252, 253, 254, 622, 623, 625, 650, 663, 666, 693, 706, 734, 747, 750, 770, 792, 795, 798, 802], "main": [4, 20, 200, 635, 636, 671, 711, 754, 764, 765, 776, 791, 792], "mainland": 22, "mainli": [4, 636], "maintain": [4, 6, 9, 26, 27, 113, 114, 115, 116, 124, 128, 129, 142, 234, 235, 237, 238, 275, 276, 277, 280, 286, 294, 421, 422, 485, 499, 502, 579, 588, 589, 671, 776, 779, 795, 802, 808], "major": [141, 221, 228, 644, 664, 671, 728, 779], "make": [7, 19, 20, 21, 69, 120, 137, 158, 188, 200, 204, 205, 206, 216, 219, 220, 230, 231, 326, 352, 357, 362, 367, 368, 374, 376, 380, 381, 390, 393, 504, 508, 510, 612, 618, 629, 630, 633, 634, 635, 636, 638, 640, 646, 650, 660, 661, 669, 671, 716, 723, 753, 758, 761, 767, 768, 769, 771, 774, 775, 795, 801, 802, 808], "make_model": 802, "make_shar": 21, "makedir": [634, 679, 719], "manag": [636, 647, 758, 765], "mandatori": 20, "manhattan": [372, 492], "mani": [4, 21, 120, 204, 216, 504, 508, 628, 631, 636, 640, 643, 655, 664, 666, 761, 768, 769, 770, 771, 779, 786, 795, 798, 802], "manifold": 354, "manipul": [0, 12, 21, 784, 786, 792], "manner": 801, "manual": [4, 100, 101, 151, 164, 177, 178, 183, 331, 343, 346, 347, 349, 350, 351, 354, 356, 358, 361, 363, 638, 643, 757, 770, 776, 779], "manual_se": 807, "map": [4, 5, 19, 25, 42, 45, 46, 73, 74, 100, 101, 102, 108, 119, 128, 129, 177, 210, 223, 229, 276, 326, 328, 329, 351, 359, 368, 371, 373, 375, 486, 580, 588, 594, 631, 637, 638, 656, 666, 667, 706, 722, 750, 769, 779, 791, 798, 802], "map_to_homo_eid": [4, 637, 722], "map_to_homo_nid": [4, 637, 722], "map_to_per_etyp": [4, 230, 637, 722], "map_to_per_ntyp": [4, 230, 637, 722], "margin": [672, 755], "mark": [141, 163, 212, 213, 214, 215, 232, 771, 784, 785], "marker": 801, "marketplac": 642, "mask": [21, 130, 131, 137, 141, 146, 150, 153, 154, 155, 156, 157, 158, 159, 165, 169, 173, 175, 181, 182, 184, 187, 188, 195, 206, 221, 228, 234, 367, 368, 390, 392, 393, 403, 421, 601, 629, 633, 663, 668, 669, 673, 698, 713, 715, 718, 740, 752, 756, 773, 779, 789, 792, 795, 802], "massiv": [638, 639, 654], "master": [20, 161], "master_ip": 808, "master_port": 808, "mat": [575, 630, 633, 676, 678, 716, 718, 791], "mat_path": [633, 678, 718], "match": [4, 5, 8, 117, 189, 190, 293, 294, 297, 404, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 507, 630, 676, 716, 764], "materi": [8, 88, 657, 769, 798], "math": [347, 590, 591, 650, 666, 726, 740, 755, 789, 791, 795], "mathbb": [649, 692, 733, 760, 761, 762, 798, 802], "mathbf": [347, 351, 355, 403], "mathcal": [233, 287, 299, 334, 337, 338, 339, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 361, 362, 420, 445, 446, 517, 518, 594, 649, 650, 666, 667, 671, 672, 692, 693, 698, 706, 707, 711, 712, 733, 734, 740, 750, 751, 754, 755, 764, 770, 771, 783, 785, 792, 795], "mathemat": [233, 287, 336, 337, 348, 351, 356, 399, 400, 420, 553, 564, 651, 759, 760, 770, 789, 791], "mathrm": [117, 331, 338, 343, 344, 347, 349, 350, 352, 353, 354, 355, 359, 362, 375, 377, 666, 706, 750, 802], "matmul": [764, 790], "matplotlib": [760, 791, 795, 798, 801], "matric": [40, 61, 62, 117, 118, 174, 330, 347, 361, 390, 553, 556, 561, 562, 564, 573, 594, 643, 760, 763, 764, 789], "matrix": [0, 8, 12, 13, 29, 30, 31, 61, 62, 117, 118, 124, 129, 170, 238, 275, 276, 279, 280, 283, 286, 332, 340, 341, 342, 344, 350, 351, 354, 356, 363, 364, 371, 372, 373, 395, 400, 403, 405, 444, 445, 446, 447, 492, 510, 514, 519, 520, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 594, 603, 604, 609, 613, 643, 651, 669, 670, 709, 753, 757, 759, 760, 761, 762, 763, 769, 789, 790, 792, 793, 805, 808], "matrix\uc774\ub2e4": 722, "matter": [20, 377, 791, 792, 802], "mat\u6587\u4ef6\u4e0b\u8f7d\u5230\u76ee\u5f55": 676, "max": [5, 8, 72, 116, 287, 289, 290, 327, 335, 338, 339, 352, 354, 359, 360, 376, 402, 424, 429, 446, 448, 450, 456, 464, 470, 496, 497, 519, 520, 557, 558, 559, 571, 596, 646, 650, 652, 665, 666, 672, 673, 693, 695, 705, 706, 712, 713, 730, 734, 737, 749, 750, 755, 756, 764, 784, 785, 789, 791, 798, 801, 803, 805, 807, 808], "max_": [346, 376], "max_allow_nod": 164, "max_degre": 391, "max_depth": 802, "max_dist": 396, "max_in_degre": [336, 337, 338], "max_len": 395, "max_node_typ": 397, "max_num_nod": [164, 177], "max_num_v": 166, "max_queue_s": 224, "maxim": [6, 221, 224, 228, 325, 639, 770, 776, 798], "maximum": [6, 117, 118, 164, 166, 177, 336, 337, 338, 339, 346, 360, 390, 391, 392, 393, 395, 396, 397, 503, 539, 542, 613, 671, 672, 755, 792, 796, 802, 805], "mayb": 20, "mb": [639, 767, 775, 778, 782, 788, 794, 797, 800, 804, 806, 810], "mcaulei": [133, 134], "mckee": 501, "mct": [369, 370], "md": [200, 758], "mean": [4, 5, 8, 9, 72, 116, 143, 146, 150, 169, 170, 200, 201, 202, 229, 291, 292, 299, 327, 338, 339, 351, 352, 354, 356, 359, 360, 362, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 380, 381, 425, 430, 446, 448, 451, 457, 465, 471, 493, 494, 496, 497, 539, 543, 579, 580, 588, 596, 616, 636, 646, 650, 652, 659, 660, 663, 665, 666, 669, 672, 673, 693, 695, 702, 705, 706, 709, 712, 713, 721, 730, 734, 737, 744, 745, 747, 749, 750, 753, 755, 756, 759, 760, 761, 764, 768, 770, 771, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 808], "mean_nod": [368, 369, 671, 711, 754, 772], "mean_udf": 770, "meaning": 670, "meaningless": 115, "meant": [21, 643], "measur": [12, 157, 233, 283, 287, 369, 370, 371, 373, 399, 400, 420, 514, 792, 802], "mechan": [5, 19, 21, 395, 396, 397, 670, 761, 791, 792, 798, 802, 803, 805], "medium": 13, "meet": [332, 760], "mem": [9, 767, 775, 778, 782, 788, 794, 797, 800, 804, 806, 810], "member": [20, 650, 770, 771, 773, 791, 807], "memmap": 639, "memo": 5, "memori": [4, 8, 9, 13, 66, 88, 111, 124, 129, 175, 200, 224, 237, 238, 275, 276, 283, 298, 371, 373, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 504, 514, 586, 635, 639, 646, 651, 654, 657, 658, 661, 663, 747, 758, 765, 771, 795, 802], "meng": 691, "mengjia": 783, "mention": [636, 638, 639, 658, 802], "merg": [20, 219, 220, 626, 647, 650, 652, 667, 669, 731, 772, 791, 792], "merit": 21, "merlin": 200, "messag": [1, 12, 52, 72, 90, 91, 92, 93, 99, 112, 125, 128, 129, 171, 172, 198, 200, 201, 202, 204, 205, 206, 209, 210, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 331, 332, 333, 334, 337, 339, 341, 343, 346, 347, 349, 350, 351, 352, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 424, 425, 426, 427, 429, 430, 431, 432, 446, 450, 451, 452, 453, 456, 457, 458, 459, 464, 465, 466, 467, 470, 471, 472, 473, 487, 488, 489, 490, 491, 508, 580, 617, 618, 619, 620, 621, 622, 623, 624, 625, 638, 648, 655, 656, 658, 659, 660, 661, 662, 664, 665, 667, 668, 671, 673, 691, 732, 737, 740, 741, 744, 746, 747, 752, 756, 757, 769, 771, 784, 786, 790, 792, 793, 796, 798, 803, 805], "message_func": [72, 90, 91, 92, 93, 99, 112, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 487, 488, 489, 490, 491, 650, 652, 653, 693, 695, 696, 734, 737, 738, 770, 786, 790, 792, 795, 798, 802], "meta": [4, 144, 329, 401, 631, 637, 639, 795], "meta_g": 71, "metadata": [4, 225, 229, 631, 636, 637, 638, 639, 640, 723], "metagraph": [12, 25, 100, 101, 116, 118, 120, 125, 128, 129, 210, 234, 276, 277, 281, 282, 368, 421, 485, 493, 502, 585, 588, 615, 626, 631, 647, 690, 731], "metapath": [294, 329, 503, 506, 507, 594], "meth": 4, "method": [1, 21, 88, 111, 156, 184, 198, 199, 200, 207, 208, 210, 211, 221, 228, 229, 283, 287, 326, 327, 330, 335, 347, 349, 350, 362, 371, 373, 420, 448, 487, 489, 503, 514, 586, 631, 643, 646, 654, 655, 658, 668, 669, 768, 769, 771, 773, 776, 783, 784, 785, 789, 790, 808], "methodologi": [580, 658, 672], "meti": [4, 6, 199, 221, 228, 229, 295, 296, 501, 639, 682, 723, 779], "metirs\ub97c": 723, "metis_partition_assign": [199, 501], "metis\u4ec5\u5e73\u8861\u6bcf\u4e2a\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u6570": 682, "metis\u5212\u5206\u7684\u597d\u5904\u5728\u4e8e": 682, "metis\uc640": 723, "metis\uc740": 723, "metis\uc758": 723, "metric": [20, 283, 371, 372, 373, 492, 514, 658, 771, 779, 780, 784, 785, 808], "metric\uc744": 743, "mfg": [125, 129, 198, 199, 200, 201, 202, 204, 205, 206, 210, 211, 656, 659, 661, 741, 744, 746, 780, 783, 784, 785, 786, 808], "mfg_0_dst": 784, "mfg_0_src": 784, "mfg\uac00": 740, "mfg\ub4e4\ub85c": 740, "mfg\ub4e4\uc740": 740, "mfg\ub4e4\uc758": [740, 741, 746], "mfg\ub85c": 740, "mfg\ub97c": [740, 746], "mfg\uc5d0": 745, "mfg\uc5d0\uc11c": 745, "mfg\uc5d0\uc11c\uc758": 740, "mfg\uc758": [740, 741, 746], "mfg\uc778": 745, "mgf\uac00": 745, "mha": 761, "michal": 773, "michel": 163, "micro": 792, "microbenchmark": 765, "microsoft": [147, 148, 639], "middl": [139, 140], "might": [294, 333, 642, 652, 671, 776, 784, 791, 808], "migrat": [20, 786], "mikhail": 790, "million": [401, 654, 663, 757, 784, 785], "min": [5, 8, 72, 116, 232, 327, 338, 339, 360, 426, 431, 446, 448, 452, 458, 466, 472, 496, 497, 555, 596, 650, 652, 659, 665, 672, 693, 695, 705, 712, 734, 737, 744, 749, 755, 764, 791], "min_num_v": 166, "mind": [635, 791], "mine": 130, "mini": [4, 161, 164, 166, 177, 198, 200, 210, 633, 635, 636, 653, 654, 655, 657, 661, 662, 666, 671, 720, 757, 772], "mini_batch": [655, 662], "mini_cn": 680, "mini_feature_dataset": 631, "mini_featureless_dataset": 631, "mini_hetero_dataset": 631, "mini_multi_dataset": 631, "minibatch": [198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 654, 658, 662, 741, 767, 772, 783, 784, 785, 809, 810], "minigcdataset": [633, 678, 718], "minim": [7, 20, 21, 229, 296, 325, 631, 638, 639, 661, 672, 785, 786, 791, 792], "minimum": [6, 8, 166, 177, 339, 360, 539, 544, 612, 650, 671, 791], "minji": [789, 791, 792, 795], "minkowski": [372, 492], "minut": [160, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "misc": 12, "miss": [631, 790, 792], "mitig": 662, "mix": [8, 13, 360, 648, 650, 732, 734, 791, 793, 805], "mixtur": [174, 354], "mkdir": [758, 779], "mle": 798, "mlp": [345, 360, 365, 394, 669, 671, 711, 754, 771], "mlppredictor": [669, 709, 753, 771], "mlp\ub97c": 753, "mlsoar": 691, "mm": 791, "mnist": [13, 801], "mod": [327, 667, 707, 751], "mod_arg": [327, 667, 707, 751], "mod_kwarg": [327, 667, 707, 751], "mode": [4, 143, 160, 162, 167, 168, 175, 185, 199, 207, 224, 295, 296, 402, 404, 634, 679, 719, 758, 760, 795, 802], "model": [4, 8, 11, 13, 22, 69, 154, 155, 163, 174, 181, 187, 195, 200, 203, 212, 213, 214, 215, 325, 329, 330, 334, 336, 337, 348, 354, 355, 356, 357, 359, 361, 363, 364, 367, 368, 369, 370, 378, 379, 394, 399, 402, 405, 503, 505, 633, 635, 636, 640, 642, 647, 652, 657, 658, 662, 663, 664, 666, 670, 672, 680, 681, 698, 699, 701, 703, 709, 711, 712, 713, 720, 721, 740, 741, 744, 746, 747, 753, 754, 755, 756, 757, 758, 759, 760, 762, 764, 765, 767, 768, 769, 770, 786, 791, 792, 793, 794, 795, 796, 797, 800, 802, 804, 806], "model_opt": 802, "model_typ": 394, "model_zoo": 798, "modelnet": 13, "modif": [390, 393, 635, 779, 780], "modifi": [7, 144, 145, 151, 176, 178, 183, 188, 390, 393, 582, 583, 584, 655, 661, 670, 757, 758, 779], "modul": [4, 6, 7, 12, 17, 20, 224, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 603, 604, 605, 606, 607, 609, 610, 613, 635, 648, 654, 656, 658, 659, 661, 663, 668, 669, 671, 672, 673, 699, 700, 701, 702, 703, 705, 707, 709, 711, 712, 713, 741, 743, 744, 745, 746, 747, 748, 749, 751, 753, 754, 755, 756, 759, 760, 761, 762, 764, 767, 768, 771, 772, 774, 775, 779, 780, 783, 784, 785, 787, 788, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "modular": 639, "moduledict": [368, 369, 660, 667, 702, 707, 745, 751], "modulelist": [663, 747, 760, 761, 779, 780, 790, 791, 792, 798], "mol": [171, 172], "mol_encod": 761, "molass": 691, "molecul": [170, 171, 172, 382], "molecular": [171, 172, 185, 333, 377, 382, 397, 772], "moleculenet": 172, "molhiv": [135, 632, 677, 717, 761], "moment": [171, 172, 339, 360, 501], "moment3": [339, 360], "moment4": [339, 360], "moment5": [339, 360], "monitor": 801, "mont": [369, 370], "month": [159, 173], "monthli": [145, 176], "more": [3, 4, 8, 19, 20, 21, 26, 27, 65, 90, 94, 95, 120, 152, 157, 164, 204, 206, 216, 220, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 280, 333, 351, 367, 368, 401, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 503, 504, 509, 510, 580, 586, 631, 633, 634, 635, 636, 639, 643, 647, 651, 653, 654, 656, 657, 661, 662, 665, 667, 669, 671, 673, 690, 731, 757, 758, 760, 762, 764, 772, 773, 776, 779, 780, 784, 785, 789, 790, 791, 792, 795, 798, 801, 802, 807], "moreov": [117, 118], "most": [1, 13, 115, 124, 129, 143, 147, 148, 155, 216, 237, 238, 275, 276, 369, 370, 503, 580, 633, 634, 636, 637, 646, 650, 655, 660, 663, 669, 670, 671, 673, 764, 768, 802], "mostli": [21, 784], "motif": [138, 139, 140, 179, 180, 792], "mount": 779, "move": [4, 88, 107, 525, 528, 630, 637, 760, 802], "movement": [234, 235, 277, 281, 282, 421, 422, 485, 662], "movi": [42, 655, 791], "mp": [807, 808], "mpicc": [638, 723], "mpirun": [638, 723], "mpnn": [359, 377], "mq": 510, "msbuild": 758, "msg": [251, 252, 253, 254, 358, 789, 790, 791, 802], "mu": [171, 172, 354, 397], "mu_": 358, "mu_k": 354, "much": [4, 120, 136, 504, 508, 651, 656, 757, 765, 779, 783, 790, 792, 798, 802], "mufei": [790, 792, 798], "muhyun": 732, "mul": [8, 247, 248, 261, 262, 271, 272, 390, 393, 440, 441, 445, 446, 463, 464, 465, 466, 467, 468, 481, 482, 567, 650, 693, 734, 764], "mulbackward0": 8, "multi": [8, 40, 145, 154, 158, 176, 181, 184, 336, 343, 347, 348, 349, 350, 358, 390, 393, 395, 396, 397, 399, 401, 493, 494, 589, 633, 639, 644, 657, 661, 672, 673, 757, 767, 768, 769, 770, 779, 784, 785, 790, 793, 803, 805, 809, 810], "multi30k": 802, "multi_update_al": [368, 369, 652, 667, 695, 707, 737, 751], "multiclass": [161, 369, 370, 403, 762], "multidigraph": [71, 585], "multigraph": [47, 65, 117, 118, 642, 726, 798], "multihead": 378, "multiheadattent": 802, "multiheadgatlay": 792, "multilabel": 403, "multilay": [204, 205, 206, 508, 661, 669], "multilayerdropoutsampl": [698, 740], "multilayerfullneighborsampl": [656, 658, 659, 661, 698, 699, 700, 701, 703, 740, 741, 743, 744, 746], "multilayerneighborsampl": [200, 636, 681, 698, 721, 740, 779, 780, 786], "multilevel": [295, 296], "multinomi": [659, 701, 744], "multipl": [0, 4, 8, 13, 21, 25, 26, 27, 35, 36, 40, 42, 45, 46, 47, 50, 51, 53, 54, 55, 56, 59, 60, 64, 73, 74, 76, 86, 87, 89, 90, 91, 94, 95, 102, 106, 117, 124, 126, 127, 128, 129, 219, 220, 229, 237, 238, 275, 276, 283, 285, 288, 326, 327, 329, 334, 360, 371, 372, 373, 382, 390, 393, 401, 402, 444, 445, 446, 447, 492, 496, 497, 500, 503, 507, 508, 512, 514, 517, 518, 528, 553, 561, 562, 564, 579, 580, 588, 594, 598, 635, 636, 637, 639, 640, 642, 646, 652, 657, 660, 667, 671, 672, 673, 737, 758, 760, 761, 765, 768, 771, 776, 779, 789, 790, 792, 793, 798, 802, 805, 807, 808], "multipli": [5, 174, 206, 339, 360, 367, 368, 496, 497, 553, 554, 561, 564, 569, 572, 573, 650, 663, 670, 759, 764, 790, 802], "multiprocess": [4, 807, 808], "multpli": 670, "music": 157, "must": [4, 6, 8, 26, 27, 33, 34, 35, 36, 42, 45, 47, 50, 52, 53, 54, 56, 57, 59, 60, 72, 73, 86, 87, 88, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 112, 117, 118, 120, 123, 128, 129, 135, 136, 137, 143, 160, 167, 168, 187, 188, 195, 199, 200, 201, 202, 204, 206, 208, 209, 210, 230, 231, 234, 237, 238, 275, 276, 277, 279, 281, 282, 284, 285, 286, 297, 327, 331, 334, 339, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 356, 360, 361, 362, 368, 369, 370, 373, 403, 421, 447, 448, 485, 495, 496, 497, 498, 501, 505, 506, 507, 508, 509, 510, 511, 514, 515, 519, 520, 539, 542, 543, 544, 546, 555, 573, 578, 580, 588, 626, 629, 631, 633, 636, 637, 640, 644, 645, 647, 650, 657, 660, 690, 729, 731, 742, 764, 769, 790, 795], "mutag": [24, 161, 164, 165, 177, 367, 370, 671, 711, 754], "mutat": [12, 69, 795, 798], "mutual": [145, 157, 176, 206, 210, 507, 642, 807], "mxnet": [4, 8, 12, 20, 22, 189, 190, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 633, 646, 660, 664, 671, 673, 704, 748, 754, 757, 765, 793, 805], "mxnet\uacfc": 756, "mxnet\uc5d0\uc11c\ub294": 718, "mxnet\uc758": 730, "mxnet\uc774\ub098": 745, "my": [639, 640], "my_agg_func": 327, "my_train_script": 640, "myadd": 21, "mydata": 639, "mydatapars": 631, "mydataset": [629, 630, 675, 715, 716], "mygraph": [639, 640], "myrepo": 639, "n": [6, 8, 13, 19, 20, 61, 62, 124, 127, 177, 180, 229, 232, 238, 283, 284, 287, 295, 296, 299, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 403, 420, 444, 447, 495, 510, 514, 515, 519, 520, 553, 554, 555, 558, 559, 561, 564, 571, 572, 573, 578, 590, 591, 606, 614, 623, 624, 625, 637, 650, 654, 659, 666, 693, 697, 698, 706, 734, 739, 740, 744, 750, 759, 760, 761, 762, 764, 765, 770, 783, 789, 791, 792, 795, 798, 801, 802, 806], "n1": 396, "n2": 396, "n2e": 615, "n_": [331, 334, 341, 342, 343, 344, 347, 349, 350, 352, 353, 354, 356, 358, 362], "n_0": 120, "n_1": 120, "n_base": 790, "n_class": [370, 635, 663, 669, 671, 680, 709, 711, 720, 747, 753, 754, 779, 780], "n_click": [668, 708, 752], "n_commun": 174, "n_dislik": [668, 708, 752], "n_edg": [656, 672, 699, 712, 741, 747, 755, 762, 802], "n_epoch": [200, 203, 790], "n_etyp": 355, "n_feat": 404, "n_featur": [672, 673, 712, 713, 755, 756], "n_follow": [668, 708, 752], "n_graph": 174, "n_head": [379, 394], "n_hetero_featur": [668, 673, 708, 713, 752, 756], "n_hidden": [663, 747, 779, 780, 790], "n_hidden_lay": 790, "n_i": [120, 374, 375, 376, 381, 790], "n_item": [668, 708, 752], "n_iter": 377, "n_k": 120, "n_kernel": 354, "n_label": [673, 713, 756], "n_layer": [377, 378, 379, 658, 698, 700, 740, 743, 779, 780], "n_max_click": [668, 708, 752], "n_node": [174, 773, 802], "n_step": 355, "n_t": [368, 369], "n_test_po": 785, "n_token": 802, "n_train": 773, "n_user": [668, 708, 752], "n_user_class": [668, 673, 708, 713, 752, 756], "n_val": 773, "naive_propagate_attent": 802, "name": [0, 4, 5, 19, 20, 24, 25, 26, 27, 29, 30, 31, 33, 34, 38, 42, 44, 45, 46, 47, 51, 52, 54, 56, 57, 59, 60, 61, 62, 67, 72, 73, 74, 77, 78, 79, 80, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 102, 104, 106, 108, 112, 113, 114, 116, 117, 118, 120, 123, 124, 131, 135, 152, 155, 158, 161, 164, 171, 172, 177, 187, 190, 195, 198, 204, 206, 209, 210, 211, 212, 213, 214, 215, 225, 226, 229, 230, 231, 234, 235, 237, 238, 277, 281, 282, 288, 327, 339, 360, 401, 421, 422, 423, 446, 485, 493, 495, 496, 497, 498, 499, 500, 501, 503, 505, 507, 508, 509, 510, 511, 512, 516, 517, 518, 519, 520, 585, 588, 594, 596, 601, 602, 603, 604, 606, 609, 610, 612, 613, 614, 616, 618, 629, 630, 631, 632, 633, 636, 637, 638, 639, 640, 644, 647, 650, 655, 662, 669, 671, 675, 676, 677, 678, 681, 683, 690, 715, 716, 717, 718, 721, 723, 724, 728, 731, 758, 764, 770, 771, 773, 779, 780, 785, 798, 802, 807], "namedrockunit": 141, "namedtupl": 795, "namespac": [1, 21, 131, 141, 650, 757, 786], "name\u76ee\u5f55\u4e2d": 676, "nan": [284, 390, 393, 606, 789, 792], "narrow_row": [666, 706, 750], "nation": 162, "nativ": [7, 635, 655, 758, 761, 764], "nativelayernormbackward": 379, "natur": [501, 670, 761, 786, 791, 795, 801, 802], "nccl": [807, 808], "nci1": 161, "ndarrai": [21, 26, 53, 94, 95, 123, 129, 174, 195, 237, 275, 276, 643, 646, 686, 727, 758, 791], "ndarraypartit": 401, "ndarray\u7c7b\u578b\u4f5c\u4e3aapi\u7684\u8f93\u5165": 689, "ndarri": 730, "ndata": [4, 5, 8, 27, 33, 34, 42, 53, 55, 63, 70, 74, 76, 92, 93, 94, 95, 99, 102, 107, 112, 114, 116, 120, 127, 128, 130, 131, 133, 134, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 161, 163, 165, 167, 168, 169, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 207, 209, 211, 214, 229, 234, 237, 277, 281, 282, 293, 325, 339, 367, 368, 369, 370, 390, 394, 404, 421, 485, 497, 498, 499, 501, 502, 510, 516, 518, 519, 520, 585, 586, 587, 588, 591, 600, 601, 606, 607, 608, 610, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 633, 635, 636, 638, 639, 644, 645, 647, 650, 651, 656, 659, 660, 661, 662, 663, 669, 670, 671, 672, 673, 678, 680, 681, 682, 687, 688, 690, 693, 694, 698, 699, 701, 702, 703, 709, 710, 711, 712, 713, 718, 720, 721, 723, 728, 729, 731, 734, 736, 740, 741, 744, 745, 746, 747, 753, 754, 755, 756, 759, 760, 761, 762, 768, 769, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "ndata_pars": [144, 631], "ndata_schem": [94, 95, 100, 101, 116, 120, 135, 143, 161, 164, 166, 167, 175, 177, 185, 209, 234, 235, 277, 280, 281, 282, 286, 421, 422, 485, 494, 498, 499, 516, 585, 599, 600, 607, 613, 626, 631, 638, 639, 643, 644, 646, 671, 686, 687, 689, 727, 728, 730, 754, 769, 772, 773, 784, 785], "nearbi": [325, 329], "nearest": [13, 283, 371, 373, 514, 672, 755], "nearli": 802, "necessari": [4, 20, 40, 200, 204, 206, 210, 510, 580, 651, 656, 657, 658, 661, 673, 743, 756, 772, 779, 783, 784, 785, 802, 808], "necessarili": [129, 276, 585, 660, 770, 783, 798], "need": [4, 5, 6, 20, 47, 56, 64, 76, 88, 117, 135, 136, 137, 142, 204, 219, 220, 229, 234, 235, 277, 281, 282, 283, 295, 296, 330, 357, 367, 368, 369, 370, 371, 373, 402, 421, 422, 485, 486, 514, 519, 520, 586, 630, 631, 636, 637, 638, 639, 640, 646, 647, 651, 652, 655, 656, 658, 659, 660, 661, 662, 665, 666, 667, 669, 670, 671, 672, 673, 722, 730, 731, 758, 764, 768, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 798, 802, 807, 808], "needham": [771, 785], "neg": [6, 12, 136, 157, 159, 175, 204, 206, 209, 210, 216, 217, 230, 231, 325, 329, 336, 347, 349, 350, 424, 429, 450, 456, 464, 470, 504, 505, 507, 508, 509, 510, 612, 631, 672, 701, 764, 780, 785, 790, 791, 795], "neg_dst": [672, 712, 755, 780], "neg_eid": 771, "neg_featur": 780, "neg_g": [672, 712, 755], "neg_graph": [780, 785], "neg_pair_graph": 210, "neg_ratio": 136, "neg_sampl": [210, 216, 217], "neg_scor": [659, 672, 701, 712, 744, 755, 771, 780, 785], "neg_src": [672, 712, 755, 780], "neg_u": 771, "neg_v": [329, 771], "neg_weight": 325, "negat": [537, 764], "negative_edge_dst": [136, 780], "negative_edge_src": [136, 780], "negative_graph": [659, 672, 701, 712, 744, 755], "negative_s": [325, 329], "negative_sampl": [210, 216, 217, 218, 659, 701, 744, 785], "negative_slop": [336, 347, 349, 350], "negativesampl": [659, 701, 744], "neglig": 21, "neigh": [204, 508, 666, 706, 750], "neighbor": [4, 12, 13, 200, 204, 205, 206, 209, 210, 223, 230, 231, 280, 283, 294, 333, 336, 337, 338, 346, 347, 354, 356, 361, 371, 372, 373, 492, 503, 505, 507, 508, 509, 510, 511, 514, 519, 520, 605, 633, 654, 655, 658, 661, 662, 672, 673, 698, 740, 755, 764, 767, 768, 770, 771, 772, 786, 787, 788, 789, 790, 792, 798, 808], "neighbor_match": 6, "neighborhood": [1, 204, 210, 281, 282, 367, 368, 503, 508, 509, 580, 636, 658, 673, 699, 703, 741, 746, 768, 784, 790, 791, 792, 793, 805], "neighborsampl": [205, 210, 635, 655, 662, 680, 720, 784, 785, 808], "neighbor\ub4e4\uc5d0": 718, "neighbour": [339, 360], "neighbourhood": [360, 791], "neither": [164, 519, 520], "nelement": 798, "neo4j": [771, 785], "neq": 791, "net": [360, 390, 392, 393, 404, 789, 792], "net_etyp": 640, "net_typ": 224, "network": [4, 12, 71, 132, 138, 139, 140, 142, 145, 146, 150, 151, 160, 161, 162, 163, 168, 169, 174, 176, 178, 179, 180, 182, 183, 199, 200, 209, 224, 232, 233, 284, 299, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 343, 345, 347, 349, 350, 351, 352, 353, 355, 356, 357, 361, 363, 364, 365, 367, 368, 369, 370, 375, 378, 379, 382, 402, 404, 405, 420, 495, 503, 505, 594, 599, 602, 606, 610, 613, 635, 636, 638, 639, 640, 642, 643, 648, 652, 654, 660, 661, 665, 669, 670, 672, 686, 698, 727, 740, 757, 761, 763, 764, 765, 766, 767, 769, 770, 772, 773, 774, 775, 786, 794, 795, 798, 803, 804, 807, 808], "networkx": [71, 123, 220, 237, 404, 585, 587, 643, 686, 727, 760, 791, 792, 795, 798, 801], "networkx\ub294": 727, "network\ub97c": 739, "neural": [4, 138, 139, 140, 161, 172, 174, 179, 180, 182, 200, 209, 232, 233, 284, 331, 332, 334, 335, 340, 345, 352, 353, 355, 357, 359, 365, 367, 368, 369, 370, 375, 378, 379, 404, 495, 503, 606, 610, 613, 648, 652, 654, 660, 661, 665, 670, 672, 698, 740, 757, 761, 763, 764, 765, 767, 768, 769, 770, 772, 774, 775, 786, 789, 794, 798, 803, 804, 807, 808], "neuron": 791, "neutral": [175, 795], "never": [224, 372, 492, 656], "nevertheless": 637, "new": [0, 1, 3, 4, 25, 26, 27, 33, 39, 69, 88, 113, 114, 115, 116, 117, 118, 120, 135, 137, 139, 140, 155, 200, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 280, 281, 282, 287, 293, 294, 327, 329, 337, 344, 346, 358, 361, 367, 368, 420, 485, 498, 499, 500, 501, 502, 506, 508, 509, 510, 511, 519, 520, 537, 575, 579, 580, 594, 595, 596, 611, 616, 636, 637, 639, 640, 646, 647, 654, 657, 660, 731, 740, 764, 765, 766, 768, 769, 770, 771, 772, 784, 785, 789, 790, 795, 798, 802, 803, 805, 808], "new_cent": [367, 368], "new_d": [136, 137], "new_dataset": 135, "new_edge_feat": 344, "new_edges_mask": [698, 740], "new_etyp": 596, "new_g": [25, 128, 294, 593, 594, 595, 596, 598, 599, 600, 603, 604, 605, 607, 609, 611], "new_g1": 25, "new_g2": [25, 128], "new_label": 403, "new_node_feat": [344, 347], "new_node_id": [367, 368], "new_val": 764, "newg": 769, "newh": 69, "newli": [113, 114], "newman": 163, "next": [505, 507, 586, 631, 637, 639, 661, 703, 746, 771, 785, 786, 791, 795, 802], "next_lg_x": 791, "next_x": 791, "nf": [640, 724], "nfeat": [334, 344, 347, 353, 369, 370, 392, 393, 400, 638, 639], "nh": 761, "nice": [21, 671, 766], "nid": [4, 9, 25, 94, 95, 128, 202, 209, 211, 212, 214, 215, 229, 234, 277, 281, 282, 367, 401, 421, 485, 498, 499, 501, 516, 580, 585, 625, 635, 636, 637, 639, 647, 653, 655, 662, 680, 681, 690, 696, 698, 720, 721, 722, 723, 731, 738, 740, 769, 780, 784, 786, 802], "nid2localnid": 4, "nid2partid": 4, "nid_het2hom": 637, "nid_hom2het": 637, "nid_offset": 637, "nid_rang": 723, "nightli": 765, "nine": 161, "niter": 791, "nk": [283, 371, 373, 514], "nl": 131, "nlh": [654, 697, 739], "nll_loss": [789, 792, 795], "nlp": [175, 802], "nmap": 779, "nn": [9, 12, 13, 20, 119, 200, 203, 283, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 514, 635, 636, 651, 656, 658, 659, 660, 661, 663, 664, 667, 669, 671, 672, 673, 680, 694, 699, 700, 701, 702, 703, 705, 706, 707, 709, 711, 712, 713, 720, 721, 736, 741, 743, 744, 745, 746, 747, 748, 751, 753, 754, 755, 756, 759, 760, 761, 762, 764, 768, 770, 771, 772, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "nnz": [11, 29, 30, 61, 62, 522, 525, 528, 530, 532, 534, 535, 536, 537, 545, 548, 550, 552, 553, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 571, 573, 574, 575, 764], "nn\u6a21\u5757": [704, 705, 707], "nn\u6a21\u5757\u4e2d": 704, "nn\u6a21\u5757\u53ef\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u8f93\u5165\u4e2d\u91cd\u590d\u4f7f\u7528": 706, "nn\u6a21\u5757\u662f\u7528\u6237\u6784\u5efagnn\u6a21\u578b\u7684\u57fa\u672c\u6a21\u5757": 704, "nn\u6a21\u5757\u7684api\u53c2\u8003": 703, "nn\u6a21\u5757\u7684forward\u51fd\u6570": [691, 704], "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [691, 704], "nn\u6a21\u5757\u7684\u7236\u7c7b\u53d6\u51b3\u4e8e\u540e\u7aef\u6240\u4f7f\u7528\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 704, "nn\u6a21\u5757\u76f8\u6bd4": 706, "nn\u6a21\u5757\u989d\u5916\u589e\u52a0\u4e861\u4e2a\u53c2\u6570": 706, "no_grad": [673, 713, 756, 761, 771, 779, 780, 784, 785, 789, 807, 808], "no_subtree_check": 779, "noam": 802, "noamopt": 802, "node": [0, 5, 6, 8, 12, 20, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 38, 42, 43, 44, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 67, 69, 71, 72, 73, 74, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 195, 198, 199, 200, 202, 204, 205, 206, 207, 209, 210, 211, 214, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 251, 252, 253, 254, 275, 276, 277, 280, 281, 282, 283, 284, 286, 287, 293, 294, 295, 296, 299, 325, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 578, 579, 580, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 594, 595, 596, 599, 600, 601, 602, 603, 604, 606, 607, 608, 609, 611, 612, 613, 614, 615, 619, 620, 621, 622, 623, 624, 626, 631, 632, 635, 637, 638, 639, 640, 641, 642, 645, 647, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 662, 663, 665, 666, 667, 668, 670, 671, 672, 677, 688, 689, 690, 693, 695, 698, 702, 706, 708, 709, 712, 713, 717, 718, 722, 723, 728, 729, 730, 731, 733, 734, 737, 740, 741, 743, 745, 747, 752, 753, 754, 755, 756, 757, 759, 760, 761, 762, 764, 767, 770, 771, 772, 774, 775, 776, 781, 782, 783, 786, 787, 788, 789, 790, 791, 792, 793, 795, 801, 802, 805, 807, 809, 810], "node1": 791, "node2": 791, "node2vec": [505, 768], "node_activ": 798, "node_activation_hidden_s": 798, "node_attr": [24, 237, 587], "node_attr_dtyp": 723, "node_attr_schem": [4, 46], "node_color": [760, 791, 795, 798, 801], "node_data": [631, 639, 723], "node_degre": 762, "node_emb": [325, 329, 639, 723, 779], "node_embed": [672, 712, 755], "node_feat": [229, 334, 339, 344, 345, 347, 353, 360, 638, 639, 682, 723], "node_feat_dim": [651, 694, 736], "node_feat_nam": [601, 612], "node_feat_out": 345, "node_feat_s": 135, "node_featur": [669, 672, 673, 709, 712, 713, 753, 755, 756, 773, 780, 784, 785, 786, 808], "node_g": 798, "node_gener": 489, "node_hidden_s": 798, "node_id": [367, 368, 631, 638, 723, 790], "node_id_field": 631, "node_in_feat": 334, "node_input": 780, "node_label": [24, 164, 177, 639, 673, 713, 756, 773, 784, 785, 786, 808], "node_map": [229, 639, 682, 723], "node_min": [369, 370], "node_part": 486, "node_permute_algo": [97, 501], "node_repr": [780, 785], "node_s": [760, 791, 795, 801], "node_split": [626, 635, 636, 680, 681, 720, 721, 779, 780], "node_subgraph": [105, 234, 657], "node_to_graph": 798, "node_trainer_id": 228, "node_typ": [229, 397, 637, 639, 647, 690, 723, 731, 798], "node_type_emb": 798, "node_type_id": [637, 638, 722], "node_type_subgraph": 235, "node_udf": [19, 622, 623, 624, 625], "node_update_func": 798, "node_weight_list": 638, "node_year": 639, "nodebatch": [19, 53, 650, 693, 734], "nodedataload": [636, 658, 681, 698, 699, 700, 703, 721, 740, 741, 742, 743, 746, 779], "nodedataview": [4, 587], "nodeembed": 9, "nodelist": 801, "nodepr": 137, "nodeproppr": [632, 677, 717, 779, 784, 785, 786, 808], "nodes_": 802, "nodes_0": 631, "nodes_1": 631, "nodes_d": 802, "nodes_data": 773, "nodes_gener": [91, 489], "nodes_perm": 501, "nodes_with_feature_on": 53, "nodeshuffl": 12, "nodeview": 71, "nodewis": 379, "nois": [672, 712, 755], "noisi": 158, "non": [6, 8, 20, 26, 29, 113, 115, 158, 175, 187, 190, 195, 200, 204, 206, 209, 230, 231, 284, 287, 299, 339, 348, 394, 420, 501, 505, 507, 508, 509, 510, 522, 523, 526, 527, 538, 539, 540, 542, 543, 544, 545, 546, 551, 553, 558, 559, 561, 565, 567, 571, 573, 575, 606, 612, 631, 639, 645, 659, 661, 670, 672, 729, 742, 746, 759, 771, 773, 785, 789, 791, 795, 803, 805], "none": [4, 6, 9, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 72, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 112, 113, 114, 115, 116, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 211, 221, 227, 228, 229, 230, 231, 234, 235, 237, 238, 275, 276, 277, 281, 282, 288, 289, 290, 291, 292, 295, 296, 327, 330, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 347, 348, 349, 350, 351, 352, 353, 355, 356, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 375, 379, 390, 392, 393, 395, 396, 397, 398, 401, 402, 403, 421, 422, 423, 445, 446, 485, 486, 488, 490, 491, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 511, 512, 515, 517, 518, 526, 527, 539, 542, 543, 544, 546, 548, 555, 557, 558, 559, 560, 571, 576, 577, 579, 580, 585, 586, 587, 590, 591, 596, 601, 603, 604, 606, 609, 610, 612, 613, 626, 629, 633, 655, 662, 665, 666, 667, 675, 678, 698, 705, 706, 707, 715, 718, 740, 749, 750, 751, 790, 795, 798, 802, 808], "nonlinear": [673, 760, 791], "nonneg": 174, "nontre": [220, 488], "nonzero": [124, 204, 238, 503, 519, 520, 537, 553, 564, 633, 643, 678, 718, 723, 727, 764, 790, 791], "norm": [283, 341, 342, 348, 356, 357, 358, 361, 362, 363, 365, 371, 372, 373, 399, 400, 492, 514, 656, 659, 661, 665, 666, 699, 701, 703, 705, 706, 741, 744, 746, 749, 750, 761, 764, 790, 791, 802], "norm_bi": 299, "norm_by_dst": 790, "norm_edge_weight": 348, "norm_first": 393, "norm_typ": 403, "norm_x": 802, "normal": [4, 126, 127, 139, 146, 150, 169, 285, 299, 335, 337, 339, 341, 342, 345, 346, 347, 348, 354, 356, 360, 361, 362, 363, 365, 366, 393, 394, 403, 423, 507, 517, 518, 602, 612, 613, 629, 639, 640, 660, 665, 666, 670, 671, 750, 754, 759, 762, 764, 768, 772, 773, 790, 791, 792, 801, 802, 808], "normalis": 612, "normalization\uacfc": 715, "normalization\uc73c\ub85c": 749, "normalization\uc744": [749, 750], "normalization\uc774": 745, "normliz": 749, "north": 22, "nose": 20, "notabl": [635, 656], "notat": [760, 798], "note": [4, 6, 8, 9, 13, 20, 21, 25, 26, 27, 33, 38, 42, 45, 47, 51, 65, 67, 69, 72, 73, 77, 92, 93, 94, 95, 99, 100, 101, 102, 109, 112, 113, 114, 115, 116, 117, 118, 124, 128, 129, 132, 133, 134, 145, 146, 147, 148, 149, 150, 151, 155, 164, 169, 175, 176, 177, 178, 182, 183, 200, 204, 205, 206, 210, 216, 224, 234, 235, 237, 238, 275, 276, 277, 280, 281, 282, 286, 293, 294, 299, 327, 329, 337, 339, 341, 342, 343, 360, 361, 371, 373, 374, 375, 376, 377, 379, 380, 381, 382, 390, 392, 393, 401, 402, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 498, 499, 500, 501, 502, 505, 506, 508, 509, 510, 511, 519, 520, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591, 629, 632, 633, 634, 635, 637, 643, 647, 652, 655, 658, 660, 661, 663, 666, 667, 668, 671, 673, 680, 681, 682, 683, 720, 721, 722, 723, 724, 737, 743, 759, 760, 761, 762, 768, 769, 770, 779, 783, 784, 785, 789, 791, 792, 795, 802, 808], "notebook": [636, 763, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "notebook\u4e2d\u5f00\u53d1\u548c\u8fd0\u884c\u4ee3\u7801": 681, "notebook\u4e2d\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 681, "notebook\uc5d0\uc11c": 721, "noth": [500, 798], "notic": [580, 586, 771, 772, 783, 784], "notimplementederror": 798, "notion": [21, 791], "noun": [145, 176], "now": [174, 223, 293, 585, 636, 638, 660, 673, 745, 762, 779, 785, 792, 798], "np": [4, 123, 124, 195, 237, 238, 331, 332, 333, 334, 335, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 361, 362, 363, 364, 510, 631, 636, 637, 638, 668, 669, 681, 708, 709, 721, 723, 752, 753, 769, 771, 779, 780, 784, 785, 786, 789, 791, 792, 801, 802, 808], "npoint": 6, "nproc": [807, 808], "npy": [229, 639, 682, 723], "nty": [327, 667, 707, 751], "ntype": [4, 25, 27, 34, 36, 53, 57, 74, 75, 78, 80, 81, 82, 84, 85, 95, 114, 117, 127, 153, 154, 181, 188, 200, 204, 206, 211, 228, 229, 290, 292, 327, 358, 368, 369, 422, 497, 499, 503, 518, 577, 585, 586, 591, 631, 633, 637, 638, 639, 647, 652, 660, 671, 672, 678, 690, 695, 702, 711, 712, 718, 722, 723, 731, 737, 745, 754, 755, 790], "ntype2id": 637, "ntype2id_map": 637, "ntype_count": 586, "ntype_field": 585, "ntype_id": 723, "ntype_output": 327, "ntypes_list": 229, "null": [759, 760, 761, 762, 764], "num": [27, 114, 683, 723, 724], "num_atom_typ": 185, "num_bas": [330, 337, 361, 405, 790], "num_base_edges_per_nod": [139, 140], "num_base_nod": [139, 140], "num_bond_typ": 185, "num_child": [369, 370], "num_class": [130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 169, 173, 175, 176, 177, 178, 179, 180, 182, 183, 184, 367, 368, 369, 634, 639, 656, 659, 663, 679, 699, 701, 719, 741, 744, 747, 759, 760, 762, 768, 770, 772, 784, 785, 786, 790, 795, 807, 808], "num_correct": 772, "num_dst": 504, "num_dst_nod": [81, 82, 129, 493, 740, 784, 785, 786, 808], "num_edg": [4, 5, 25, 26, 69, 83, 94, 95, 100, 101, 113, 116, 120, 125, 129, 135, 143, 153, 154, 161, 164, 166, 167, 175, 177, 181, 185, 204, 206, 209, 229, 234, 235, 276, 277, 280, 281, 282, 286, 344, 347, 353, 357, 367, 368, 398, 399, 400, 421, 422, 485, 493, 494, 498, 499, 500, 501, 502, 516, 585, 588, 593, 599, 600, 601, 607, 612, 613, 615, 626, 631, 637, 638, 639, 643, 644, 646, 647, 656, 667, 671, 686, 687, 689, 690, 698, 699, 707, 723, 727, 728, 730, 731, 740, 741, 747, 751, 754, 769, 770, 771, 772, 773, 780, 784, 785, 798], "num_edges_per_chunk": [637, 639], "num_embed": [4, 326, 401], "num_epoch": [325, 367, 368, 635, 680, 720, 761], "num_etyp": 358, "num_exampl": 772, "num_featur": [784, 785, 808], "num_gpu": [807, 808], "num_graph": [135, 136, 137, 155, 166], "num_head": [336, 343, 344, 347, 349, 350, 358, 378, 390, 392, 393, 395, 396, 397, 761, 792], "num_hidden": [635, 680, 720, 779, 780], "num_hidden_lay": 790, "num_hop": [4, 229, 367, 368, 369, 370], "num_input_nod": 698, "num_inter_edg": 139, "num_it": 207, "num_kernel": 397, "num_label": [164, 168, 170, 171, 172, 177, 779, 780], "num_lay": [205, 394, 402, 635, 680, 698, 720, 740, 761, 779, 780], "num_mlp_aft": 365, "num_mlp_befor": 365, "num_motif": [139, 140, 179, 180], "num_neighbor": 503, "num_nod": [4, 5, 9, 25, 26, 27, 84, 94, 95, 100, 101, 113, 114, 116, 120, 125, 135, 143, 153, 154, 161, 164, 166, 167, 175, 177, 181, 182, 185, 195, 209, 229, 234, 235, 275, 276, 277, 280, 281, 282, 286, 325, 327, 329, 344, 347, 353, 357, 368, 369, 392, 393, 396, 398, 399, 400, 401, 402, 404, 421, 422, 485, 493, 494, 498, 499, 500, 501, 502, 516, 585, 586, 588, 599, 600, 601, 607, 612, 613, 615, 626, 631, 636, 637, 638, 639, 643, 644, 646, 647, 658, 660, 671, 672, 681, 686, 687, 689, 690, 698, 700, 702, 712, 721, 722, 723, 727, 728, 730, 731, 740, 743, 745, 754, 755, 759, 760, 761, 769, 771, 772, 773, 779, 780, 784, 785, 790, 795, 798], "num_node_weight": 723, "num_nodes_dict": [117, 118, 276, 672, 698, 712, 740, 755, 773], "num_nodes_per_chunk": [637, 639], "num_ntyp": 358, "num_of_class": 169, "num_output": 405, "num_output_nod": 698, "num_part": [199, 229, 639, 723, 779, 780], "num_partit": [4, 639], "num_positive_edg": 136, "num_post_lay": 394, "num_prop_round": 798, "num_random_walk": 503, "num_rel": [153, 154, 181, 337, 361, 399, 400, 790], "num_rollout": [369, 370], "num_sampl": [504, 640, 683, 724, 779], "num_se": [505, 507], "num_serv": [640, 683, 724, 779], "num_split": 182, "num_src": 504, "num_src_nod": [78, 85, 129, 493, 740, 784, 785, 786], "num_task": [135, 170, 171, 172, 633, 678, 718, 761], "num_test": 772, "num_thread": 776, "num_tow": [339, 360], "num_train": [640, 683, 724, 772, 779], "num_trainers_per_machin": 229, "num_travers": 503, "num_trial": 798, "num_typ": 330, "num_valid": 798, "num_virtual_nod": 392, "num_vocab": 795, "num_work": [199, 200, 203, 204, 205, 206, 207, 209, 210, 656, 657, 659, 661, 683, 698, 699, 701, 703, 724, 740, 741, 742, 744, 746, 784, 785, 786, 795, 808], "num_worker_thread": 224, "numa": 776, "number": [3, 4, 6, 8, 9, 13, 20, 21, 27, 35, 36, 37, 61, 62, 69, 78, 79, 80, 81, 100, 101, 112, 114, 117, 118, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 190, 195, 197, 199, 200, 203, 204, 205, 206, 207, 209, 216, 217, 221, 224, 225, 228, 229, 230, 231, 232, 238, 275, 276, 281, 282, 283, 284, 287, 295, 296, 299, 325, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 486, 493, 494, 495, 498, 501, 503, 504, 508, 509, 510, 511, 514, 515, 519, 520, 538, 556, 558, 559, 562, 563, 578, 586, 588, 593, 603, 604, 605, 606, 609, 610, 613, 614, 617, 618, 619, 621, 622, 623, 624, 625, 626, 629, 631, 633, 636, 637, 638, 639, 640, 644, 646, 647, 651, 652, 655, 657, 660, 662, 663, 670, 673, 715, 718, 730, 731, 735, 742, 760, 762, 764, 768, 769, 771, 772, 773, 776, 779, 783, 784, 785, 789, 790, 792, 798, 801, 802, 807, 808], "number_of_dst_nod": [580, 658, 660, 666, 667, 698, 700, 702, 706, 707, 740, 743, 745, 750, 751], "number_of_edg": 4, "number_of_nod": 4, "number_of_src_nod": [660, 698, 702, 740, 745], "numclass": [759, 760, 762, 768, 770, 771, 789, 791, 792], "numedg": [759, 760, 762, 768, 770, 771, 789, 791, 792], "numer": [4, 9, 21, 339, 631, 644, 769, 773, 798, 802], "numfeat": [759, 760, 762, 768, 770, 771, 789, 791, 792], "numnod": [759, 760, 762, 768, 770, 771, 789, 791, 792], "numpi": [5, 8, 20, 26, 30, 53, 94, 95, 123, 124, 126, 127, 129, 164, 174, 188, 195, 229, 237, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 325, 331, 332, 333, 334, 335, 340, 341, 342, 343, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 361, 362, 363, 364, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 631, 635, 637, 639, 643, 646, 647, 668, 680, 686, 708, 720, 723, 727, 730, 731, 752, 758, 761, 769, 771, 773, 779, 780, 784, 785, 786, 789, 791, 792, 801, 802, 808], "numtestsampl": [759, 760, 762, 768, 770, 771, 789, 791, 792], "numtrainingsampl": [759, 760, 762, 768, 770, 771, 789, 791, 792], "numvalidationsampl": [759, 760, 762, 768, 770, 771, 789, 791, 792], "nutshel": 763, "nvidia": [200, 336, 337, 338, 663, 747], "nx": [123, 237, 404, 643, 686, 727, 760, 791, 792, 795, 798, 801], "nx_agraph": 795, "nx_g": [123, 237, 587, 643, 686, 727, 760, 798], "nx_g1": 791, "nx_graph": [123, 237], "nxg": [643, 686, 727], "nxn": [371, 372], "o": [4, 8, 21, 152, 283, 371, 373, 514, 630, 634, 654, 676, 679, 697, 716, 719, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "o1": 764, "o2": 764, "o3": 764, "o4": 764, "o5": 764, "o6": 764, "o7": 764, "o8": 764, "o_j": 795, "ob": 405, "obg": 717, "obj_": 21, "object": [4, 21, 25, 41, 52, 53, 58, 107, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 200, 208, 210, 211, 219, 220, 229, 234, 235, 236, 237, 238, 275, 276, 277, 281, 282, 296, 297, 299, 327, 367, 368, 401, 421, 422, 485, 488, 490, 491, 493, 494, 496, 497, 508, 509, 510, 511, 512, 517, 518, 590, 591, 592, 597, 598, 631, 632, 633, 634, 635, 636, 637, 639, 643, 645, 659, 666, 701, 729, 744, 758, 759, 768, 769, 772, 784, 785, 790, 791, 808], "objectbas": 21, "objectref": 21, "objtyp": [229, 296], "observ": [791, 801], "obtain": [13, 281, 282, 344, 347, 390, 393, 394, 402, 506, 580, 594, 633, 656, 660, 669, 671, 672, 673, 718, 760, 768, 769, 784, 785, 786, 792, 795], "occasion": 773, "occup": 769, "occupi": [171, 172], "occur": [25, 229], "occurr": 132, "odot": [398, 795], "ofev": 160, "off": [369, 370, 758, 759, 760, 761, 776, 791, 792, 801, 802], "offer": [757, 768, 795, 801], "offic": 142, "offici": [20, 163, 175, 632, 789, 790, 791, 792, 795, 798, 801, 802], "offlin": [654, 743, 784], "offset": [348, 506, 510, 519, 520], "often": [20, 631, 633, 662, 769, 773, 783], "ogb": [4, 135, 628, 657, 677, 683, 714, 724, 742, 761, 779, 780, 784, 785, 786, 808], "ogbg": [135, 632, 677, 717, 761], "ogbl": [632, 677, 717, 780], "ogbn": [632, 677, 717, 723, 779, 784, 785, 786, 808], "ok": [5, 645, 729], "old": [26, 27, 113, 367, 588, 789], "old_step_count": 798, "omega": 760, "omit": [4, 26, 27, 29, 30, 31, 33, 34, 35, 36, 46, 47, 50, 52, 53, 54, 56, 57, 59, 60, 61, 62, 74, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 106, 112, 113, 114, 116, 126, 127, 423, 496, 497, 498, 499, 500, 504, 505, 507, 517, 518, 586, 590, 591, 673, 756, 769], "omp": 224, "onc": [20, 129, 224, 275, 276, 638, 639, 655, 671, 760, 798, 802, 807, 808], "one": [0, 4, 5, 6, 8, 13, 19, 20, 21, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 43, 46, 47, 50, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 67, 70, 72, 74, 76, 79, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 103, 106, 112, 113, 114, 116, 117, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 141, 143, 146, 150, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 167, 168, 169, 174, 175, 181, 182, 184, 185, 188, 195, 204, 206, 209, 210, 220, 223, 229, 230, 231, 234, 235, 237, 238, 275, 276, 277, 281, 282, 283, 294, 329, 330, 331, 346, 354, 355, 356, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 393, 403, 421, 423, 445, 446, 450, 451, 452, 453, 456, 457, 458, 459, 464, 465, 466, 467, 470, 471, 472, 473, 485, 496, 497, 498, 499, 500, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 517, 518, 519, 520, 534, 539, 578, 580, 585, 588, 590, 591, 616, 617, 629, 630, 631, 632, 633, 635, 636, 637, 638, 639, 640, 642, 643, 644, 646, 647, 650, 651, 652, 653, 654, 655, 656, 658, 659, 660, 661, 665, 666, 667, 668, 669, 670, 671, 672, 673, 677, 690, 715, 717, 718, 730, 731, 753, 758, 760, 762, 764, 765, 768, 769, 770, 772, 776, 779, 780, 783, 784, 785, 786, 790, 791, 792, 795, 798, 801, 802, 803, 805, 807, 808], "onehot_label": [633, 678, 718], "ones": [0, 1, 4, 8, 26, 27, 33, 34, 42, 43, 44, 45, 50, 55, 63, 69, 70, 73, 76, 78, 81, 92, 93, 99, 102, 103, 104, 107, 112, 113, 114, 115, 120, 123, 221, 228, 237, 293, 299, 327, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 348, 349, 350, 351, 352, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 396, 402, 448, 502, 507, 512, 532, 555, 560, 561, 573, 575, 580, 586, 587, 588, 595, 601, 617, 621, 622, 623, 624, 625, 626, 635, 637, 639, 643, 644, 647, 687, 690, 728, 731, 765, 770, 771, 780, 795, 798, 801, 802], "ones_lik": [780, 785], "onli": [3, 4, 9, 13, 20, 21, 25, 26, 27, 29, 30, 31, 33, 34, 40, 46, 47, 52, 54, 55, 56, 57, 59, 60, 61, 62, 64, 74, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 106, 109, 112, 113, 114, 115, 116, 117, 118, 123, 126, 127, 128, 130, 131, 132, 135, 136, 137, 141, 143, 146, 150, 153, 154, 155, 156, 163, 165, 169, 171, 181, 182, 184, 200, 203, 204, 206, 209, 210, 223, 225, 229, 230, 231, 234, 235, 237, 275, 277, 280, 281, 282, 283, 284, 327, 336, 337, 338, 339, 342, 343, 344, 346, 347, 348, 349, 350, 355, 357, 363, 371, 373, 375, 392, 394, 398, 402, 421, 422, 485, 496, 497, 498, 499, 500, 501, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 520, 579, 580, 581, 585, 587, 588, 590, 591, 596, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 615, 626, 631, 632, 633, 635, 636, 637, 638, 639, 640, 643, 644, 645, 647, 650, 653, 656, 658, 659, 660, 661, 663, 669, 670, 671, 673, 677, 717, 718, 743, 754, 758, 761, 764, 768, 769, 770, 772, 773, 776, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "onlin": [156, 325], "onto": [25, 656, 657, 661, 768, 798], "ood": [187, 195], "oom": [663, 747, 765], "op": [1, 12, 289, 290, 291, 292, 336, 337, 338, 398, 496, 497, 567, 576, 577, 657, 663, 698, 740, 747, 764], "open": [20, 632, 639, 677, 717, 723, 780, 784, 785], "openmp": 7, "opennmt": 802, "oper": [0, 5, 6, 8, 10, 20, 21, 69, 115, 126, 127, 128, 200, 204, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 280, 283, 286, 299, 333, 346, 371, 373, 377, 390, 393, 398, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 496, 497, 502, 508, 509, 510, 511, 514, 519, 520, 561, 567, 579, 586, 588, 611, 613, 626, 629, 636, 637, 645, 647, 650, 651, 655, 657, 663, 664, 666, 670, 671, 672, 758, 759, 760, 761, 763, 770, 776, 792, 793, 798, 802, 803, 805], "operand": [8, 117, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484], "oplu": 360, "oplus_": [330, 360, 361], "opportun": 768, "oppos": 661, "opposit": 770, "opt": [656, 659, 661, 669, 671, 672, 673, 698, 699, 701, 703, 709, 711, 712, 713, 740, 741, 744, 746, 753, 754, 755, 756, 784, 785, 786, 789, 792, 808], "optim": [12, 13, 204, 212, 213, 214, 215, 325, 329, 337, 338, 367, 368, 369, 370, 401, 508, 635, 636, 639, 650, 651, 656, 659, 661, 663, 666, 669, 671, 672, 673, 680, 681, 698, 699, 701, 703, 709, 711, 712, 713, 720, 721, 740, 741, 744, 746, 747, 753, 754, 755, 756, 757, 759, 760, 761, 762, 765, 768, 770, 771, 772, 776, 779, 780, 784, 785, 789, 790, 791, 792, 795, 801, 802, 807, 808], "optimizer\ub4e4\uc744": 721, "optimizer\ub97c": 747, "optimizer\uc5d0": 721, "option": [4, 6, 9, 26, 27, 29, 30, 33, 34, 35, 36, 46, 47, 50, 52, 53, 54, 56, 57, 59, 60, 61, 62, 72, 74, 78, 79, 80, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 106, 112, 113, 114, 115, 116, 117, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 195, 197, 198, 199, 200, 203, 204, 206, 207, 209, 210, 211, 216, 219, 220, 221, 224, 225, 227, 228, 229, 230, 231, 234, 235, 237, 238, 275, 276, 277, 280, 281, 282, 283, 284, 286, 288, 297, 298, 299, 325, 327, 328, 329, 330, 331, 332, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 367, 368, 369, 370, 371, 372, 373, 375, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 421, 422, 423, 444, 448, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 539, 542, 543, 544, 546, 548, 555, 557, 558, 559, 560, 571, 578, 579, 580, 585, 586, 587, 588, 590, 591, 592, 593, 594, 595, 596, 599, 600, 601, 602, 603, 604, 606, 607, 609, 610, 612, 613, 614, 616, 626, 628, 631, 639, 640, 643, 665, 666, 669, 670, 714, 723, 758, 779, 780], "optiona": 358, "oracl": 798, "orbit": [171, 172], "order": [0, 4, 8, 19, 50, 55, 90, 91, 94, 95, 121, 123, 128, 129, 138, 139, 140, 179, 180, 187, 195, 219, 220, 230, 237, 275, 276, 283, 294, 327, 329, 357, 372, 377, 380, 398, 402, 404, 421, 491, 492, 501, 508, 509, 510, 511, 514, 522, 526, 527, 580, 585, 598, 609, 636, 638, 639, 646, 647, 656, 671, 731, 764, 769, 790, 791, 795, 798, 807], "ordereddict": 175, "ordinari": 667, "org": [8, 131, 132, 143, 157, 158, 159, 167, 170, 171, 185, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 370, 392, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 503, 508, 710, 758, 764, 765, 779, 802], "organ": [20, 220, 229, 638, 639, 667, 757], "organiz": 130, "orient": [515, 801], "orig": 639, "orig_dst_id": [638, 723], "orig_eid": 639, "orig_eids_0": 639, "orig_id": [295, 486, 638, 639, 682, 723], "orig_nid": 639, "orig_nids_0": 639, "orig_node_emb": [639, 723, 779], "orig_src_id": [638, 723], "orig_type_edge_id": 723, "orig_type_node_id": 723, "origianl": 639, "origin": [3, 20, 25, 55, 63, 69, 70, 99, 107, 115, 120, 123, 128, 133, 134, 139, 140, 147, 148, 149, 174, 177, 179, 180, 182, 198, 199, 210, 211, 223, 229, 230, 231, 234, 237, 277, 280, 281, 282, 286, 294, 295, 333, 346, 356, 367, 368, 369, 370, 390, 421, 485, 486, 501, 502, 506, 507, 508, 509, 510, 511, 517, 518, 525, 528, 530, 532, 535, 536, 537, 548, 579, 580, 582, 583, 584, 585, 588, 594, 595, 605, 615, 616, 623, 624, 625, 630, 638, 639, 645, 647, 650, 655, 659, 660, 662, 666, 669, 670, 671, 716, 729, 731, 740, 741, 760, 762, 764, 769, 771, 772, 773, 779, 790, 791, 793, 802, 805], "origini": 506, "otc": 142, "other": [0, 1, 8, 20, 67, 119, 177, 197, 200, 225, 229, 232, 297, 299, 325, 337, 365, 503, 585, 603, 604, 609, 633, 634, 635, 636, 638, 639, 640, 642, 643, 646, 647, 651, 655, 656, 657, 662, 668, 672, 673, 719, 758, 760, 762, 764, 765, 768, 769, 770, 771, 779, 783, 789, 791, 792, 795, 798, 802, 807], "other_typ": 503, "otherwis": [4, 6, 30, 35, 36, 43, 50, 53, 55, 61, 62, 63, 70, 103, 107, 117, 161, 174, 175, 197, 200, 204, 206, 219, 220, 221, 228, 230, 231, 234, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 281, 282, 284, 294, 356, 369, 370, 391, 393, 397, 421, 485, 486, 496, 497, 505, 507, 508, 509, 510, 515, 539, 542, 543, 544, 546, 548, 555, 557, 558, 559, 560, 571, 580, 586, 594, 606, 626, 627, 630, 636, 656, 676, 716, 760, 762, 791, 807], "ouptut": 802, "our": [3, 8, 20, 375, 503, 657, 663, 672, 673, 757, 762, 765, 779, 789, 790, 791, 792], "ourselv": 798, "out": [1, 4, 12, 13, 21, 61, 62, 69, 86, 128, 130, 131, 133, 134, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 181, 182, 184, 185, 187, 195, 204, 206, 207, 230, 231, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 282, 331, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 361, 362, 363, 364, 379, 382, 390, 391, 392, 393, 395, 396, 397, 485, 508, 509, 510, 511, 520, 553, 564, 629, 638, 639, 640, 651, 663, 667, 694, 715, 736, 747, 757, 758, 759, 760, 761, 764, 765, 769, 789, 790, 791, 792, 801], "out1": 8, "out2": 8, "out3": 8, "out4": 8, "out_1": 8, "out_2": 8, "out_3": 8, "out_class": [669, 709, 753], "out_degre": [4, 59, 391, 769, 808], "out_dim": [651, 694, 736, 790, 792], "out_dir": 639, "out_dst": [651, 694, 736], "out_edg": 60, "out_edge_feat": 344, "out_feat": [328, 334, 335, 336, 337, 338, 340, 341, 342, 343, 346, 347, 349, 350, 351, 353, 354, 355, 356, 359, 361, 362, 363, 364, 367, 398, 613, 656, 659, 660, 661, 665, 671, 673, 699, 701, 702, 703, 705, 711, 713, 741, 744, 745, 746, 749, 754, 756, 770, 786, 789, 790, 791], "out_feat_1": 613, "out_feat_2": 613, "out_feat_nam": 613, "out_feats\u662f\u8f93\u51fa\u7279\u5f81\u7684\u7ef4\u5ea6": 713, "out_featur": [656, 658, 659, 661, 669, 672, 698, 699, 700, 701, 703, 709, 712, 740, 741, 743, 744, 746, 753, 755, 789, 795], "out_field": 802, "out_indx": 801, "out_nod": 801, "out_node_feat": 344, "out_path": [4, 229, 779, 780], "out_proj": 761, "out_siz": [328, 330, 339, 345, 360, 663, 759, 760, 761, 762, 764], "out_src": [651, 694, 736], "out_subgraph": [277, 282, 657], "out_test_mask": [187, 195], "out_valid_mask": [187, 195], "outbound": [230, 231, 485, 505, 507, 508, 509, 510, 511, 580], "outcom": 485, "outdat": [630, 676, 716], "outer": [658, 743], "outfil": 723, "outgo": [87, 299, 790], "outmultiedgedataview": [71, 587, 647, 690, 731], "output": [4, 5, 8, 20, 52, 53, 72, 131, 141, 167, 198, 199, 200, 204, 206, 207, 229, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 281, 282, 283, 297, 327, 328, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 398, 402, 404, 405, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 508, 509, 510, 511, 514, 545, 561, 565, 637, 639, 650, 651, 654, 656, 658, 660, 661, 665, 667, 671, 707, 723, 743, 745, 751, 764, 770, 779, 783, 784, 785, 786, 789, 790, 791, 792, 801, 802], "output_d": 365, "output_devic": [48, 49, 75, 105, 198, 199, 204, 206, 207, 209, 234, 235, 277, 281, 282, 421, 422, 485, 508, 509, 510, 511, 807, 808], "output_featur": 790, "output_label": [661, 698, 703, 740, 746], "output_nod": [200, 204, 205, 206, 209, 655, 658, 661, 662, 698, 700, 703, 743, 746, 780, 784, 785, 786, 808], "output_predict": [661, 698, 703, 740, 746], "outsid": [629, 636, 639, 650, 734, 764], "over": [3, 78, 81, 160, 162, 170, 171, 172, 199, 200, 201, 202, 203, 299, 339, 360, 374, 376, 381, 496, 497, 517, 518, 519, 520, 590, 591, 616, 631, 656, 657, 658, 659, 661, 671, 740, 743, 758, 760, 770, 772, 776, 779, 784, 785, 789, 792, 795, 798, 801, 802, 808], "overal": [371, 639, 671, 771, 792, 798, 802], "overfit": 790, "overhead": [21, 69, 283, 337, 371, 373, 514], "overrid": [200, 203, 208], "overridden": [367, 368, 369, 370], "overview": [643, 784, 791, 808], "overwit": 152, "overwrit": [190, 191], "overwritten": 758, "own": [20, 152, 283, 356, 371, 373, 512, 514, 636, 637, 638, 639, 651, 656, 657, 659, 661, 662, 673, 764, 765, 767, 768, 771, 774, 775, 779, 780, 784, 785, 786, 790, 792, 798, 802, 808], "owner": 639, "ownership": 639, "p": [143, 157, 167, 204, 206, 209, 331, 365, 366, 372, 373, 399, 400, 492, 505, 507, 510, 599, 600, 601, 638, 639, 698, 723, 740, 779, 795, 798, 802], "p3": 13, "p_": [331, 333], "p_n": [672, 712, 755], "p_p": 167, "pack": 506, "packag": [0, 2, 3, 6, 10, 20, 144, 336, 337, 338, 401, 628, 647, 663, 747, 757, 758, 759, 760, 761, 762, 764, 765, 770, 779, 785, 789, 792, 795], "package\ub97c": 747, "packed_func": 21, "packed_func_ext": 21, "packedfunc": 21, "pad": [284, 391, 392, 394, 395, 396, 505, 506, 507, 515, 578, 590, 591, 606, 614, 761, 796, 802, 805], "pad_id": 802, "pad_sequ": 391, "pad_word": [175, 795], "padding_idx": 802, "page": [9, 20, 66, 88, 111, 132, 145, 151, 176, 178, 183, 758, 759, 760, 761, 762], "pagerank": [332, 609, 613, 760], "pai": [640, 663], "pair": [6, 31, 47, 65, 171, 174, 210, 216, 217, 229, 230, 231, 283, 286, 325, 327, 329, 331, 334, 342, 343, 344, 346, 347, 349, 350, 352, 353, 354, 356, 359, 362, 371, 373, 395, 396, 397, 398, 493, 494, 504, 514, 515, 607, 637, 639, 642, 643, 646, 659, 660, 671, 672, 727, 745, 761, 771, 773, 780, 784, 785, 786, 790, 791, 792, 802], "pair_graph": 210, "pairwis": [371, 372], "panda": [144, 164, 631, 643, 647, 727, 773], "pandas\uc640": 731, "papaer": 802, "paper": [147, 148, 149, 150, 158, 161, 163, 283, 333, 341, 356, 365, 366, 371, 373, 390, 420, 495, 505, 514, 594, 610, 637, 639, 642, 665, 722, 723, 757, 760, 762, 765, 768, 771, 772, 785, 789, 790, 791, 792, 793, 795, 796, 798, 799, 801, 802, 803], "paper___cites___pap": 639, "paradigm": [3, 635, 770, 795], "paral": 795, "parallel": [4, 47, 65, 120, 200, 203, 230, 231, 327, 382, 579, 588, 616, 635, 637, 639, 662, 680, 720, 761, 776, 779, 780, 792, 795, 796, 798, 799, 805, 807, 808], "param": [4, 6, 9, 31, 331, 332, 333, 334, 339, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 360, 362, 363, 364, 365, 366, 398, 399, 402], "paramet": [4, 6, 9, 13, 19, 25, 26, 27, 29, 30, 33, 34, 35, 36, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 72, 74, 78, 79, 80, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 539, 542, 543, 544, 545, 546, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 578, 579, 580, 581, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 612, 613, 614, 616, 626, 627, 629, 633, 635, 636, 650, 651, 652, 656, 659, 661, 663, 664, 665, 666, 667, 669, 671, 672, 673, 675, 678, 680, 681, 694, 698, 699, 701, 703, 709, 711, 712, 713, 715, 718, 720, 721, 736, 740, 741, 744, 746, 747, 749, 753, 754, 755, 756, 758, 759, 760, 761, 762, 764, 768, 770, 771, 772, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 802, 807, 808], "parameter": [138, 669, 753, 790, 791, 798], "parametr": [798, 803, 805], "parent": [200, 203, 223, 234, 421, 801], "parit": [295, 296], "paritt": 401, "parmeti": [637, 639], "parmetis\uac00": 723, "parmetis\ub290": 723, "parmetis\ub294": 723, "parmetis\uc5d0": 723, "parmetis\uc758": 723, "parquet": 639, "pars": [144, 631, 639, 643, 647, 773, 795, 796, 805], "parser": 144, "part": [4, 20, 21, 133, 147, 148, 187, 195, 229, 378, 379, 395, 508, 633, 636, 639, 643, 649, 652, 656, 666, 723, 761, 770, 776, 786, 802], "part0": [229, 638, 639, 682, 723], "part1": [229, 638, 639, 682, 723], "part1_end": 229, "part1_start": 229, "part2": 639, "part2_end": 229, "part2_start": 229, "part_config": [4, 225, 226, 227, 635, 636, 637, 640, 680, 681, 683, 720, 721, 722, 724, 779], "part_data": [638, 639], "part_graph": 229, "part_id": [4, 225, 226, 227, 295, 638, 639, 723], "part_method": [4, 229], "part_polici": [4, 637, 722], "part_ratio": [187, 195], "partial": [4, 790, 792, 798, 802], "particip": [200, 203], "particular": [4, 20, 89, 106, 145, 176, 187, 211, 229, 235, 357, 368, 516, 553, 564, 637, 647, 658, 764, 771, 772], "particularli": [643, 647, 762], "partid": 4, "partid2eid": 4, "partid2nid": 4, "partit": [12, 199, 221, 225, 226, 227, 228, 229, 295, 296, 357, 401, 486, 501, 626, 629, 635, 636, 640, 723, 791, 807], "partiti": 802, "partitioend": [295, 486], "partition_algo": 639, "partition_book": [4, 221, 228, 638, 639], "partition_graph": [4, 636, 638, 639, 682, 721, 723, 779, 780], "partitionpolici": [4, 637, 722], "partmetis\ub97c": 723, "partx": [638, 639], "pascal": [8, 650, 734], "pass": [0, 1, 4, 5, 12, 21, 72, 90, 91, 119, 120, 128, 129, 171, 172, 198, 199, 200, 203, 204, 205, 210, 229, 234, 277, 281, 282, 295, 296, 331, 332, 333, 334, 337, 343, 344, 346, 347, 349, 350, 351, 354, 356, 357, 359, 360, 363, 364, 366, 367, 368, 369, 370, 372, 398, 404, 421, 485, 508, 512, 580, 617, 618, 619, 620, 621, 622, 623, 624, 625, 629, 631, 633, 636, 638, 639, 645, 648, 655, 658, 660, 661, 664, 667, 668, 671, 673, 675, 678, 691, 715, 718, 732, 737, 747, 752, 756, 757, 771, 776, 779, 780, 784, 786, 792, 793, 796, 798, 803, 805], "passwordless": [640, 724, 779], "pass\ub97c": 747, "past": 808, "path": [4, 20, 152, 175, 189, 190, 191, 192, 193, 196, 199, 224, 225, 226, 227, 229, 280, 288, 294, 329, 395, 396, 506, 507, 512, 515, 594, 630, 631, 634, 638, 639, 640, 676, 679, 716, 719, 723, 779, 798], "path_data": 395, "path_encod": 395, "path_graph": [643, 686, 727], "pathlik": 4, "patit": 637, "pattern": [21, 167, 769, 792], "pb": [635, 680, 720], "pc": 329, "pcgnn_www2021": 158, "pd": [174, 631, 773, 791], "pdf": [143, 157, 158, 167, 185, 392, 710, 802], "pe": [339, 606, 610, 761], "peek": 785, "peopl": [142, 642, 671], "pep8": 20, "per": [4, 100, 101, 135, 162, 168, 177, 204, 205, 206, 209, 210, 216, 217, 229, 230, 234, 277, 281, 282, 283, 337, 371, 373, 421, 423, 485, 508, 514, 596, 623, 624, 625, 632, 637, 639, 647, 652, 659, 722, 737, 760, 784, 785, 792, 807, 808], "percent": [791, 792], "percentag": [142, 798], "perform": [0, 1, 4, 5, 8, 20, 21, 90, 91, 117, 118, 120, 128, 138, 139, 140, 158, 164, 179, 180, 197, 200, 207, 209, 211, 229, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 295, 296, 299, 327, 331, 333, 334, 337, 343, 346, 347, 349, 350, 351, 354, 356, 363, 367, 368, 369, 370, 382, 390, 391, 393, 395, 396, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 496, 504, 508, 509, 510, 511, 517, 518, 548, 590, 591, 613, 636, 637, 639, 641, 643, 645, 651, 654, 657, 658, 663, 665, 666, 667, 669, 671, 672, 673, 760, 761, 764, 770, 771, 776, 779, 780, 783, 784, 786, 789, 790, 791, 792, 795, 798, 799, 805, 807], "perhap": 792, "perman": 20, "permiss": 20, "permut": [187, 195, 378, 379, 501, 771, 791], "permute_config": [97, 501], "persist": [4, 636], "person": [332, 594, 609, 613, 760, 790], "personen": 130, "persourceuniform": 218, "perspect": [801, 802], "perturb": [139, 140, 179, 180], "perturb_ratio": [139, 140, 179, 180], "phase": [666, 795, 802], "phi": [346, 358, 445, 649, 672, 692, 698, 712, 733, 740, 755], "phi_e": 345, "phi_h": 345, "phi_x": 345, "photo": [24, 133, 134], "php": 779, "physic": [24, 147, 148, 639], "pi": [333, 397, 791], "pick": [6, 13, 204, 206, 209, 371, 372, 505, 507, 508, 510, 659, 771, 784, 792], "pickl": 780, "pictur": 802, "piec": 770, "pin": [9, 66, 88, 111, 200, 507, 657], "pin_memori": [659, 701, 744], "pin_memory_": 657, "pin_prefetch": 200, "pinsag": 503, "pip": [632, 677, 717, 759, 760, 761, 762, 764], "pipelin": [3, 629, 637, 648, 654, 657, 668, 671, 673, 780, 783, 786], "pkl": [199, 634, 679, 719, 780], "place": [1, 20, 69, 115, 128, 200, 280, 286, 502, 508, 509, 510, 511, 579, 588, 645, 784, 785, 807, 808], "placehold": 211, "plai": [4, 26, 27, 33, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 89, 92, 94, 95, 99, 100, 101, 102, 103, 104, 106, 108, 113, 114, 115, 116, 120, 128, 204, 206, 209, 234, 235, 276, 277, 281, 282, 327, 367, 368, 369, 370, 421, 422, 485, 498, 499, 500, 502, 588, 595, 596, 601, 611, 612, 616, 626, 647, 690, 698, 731, 740, 760, 763], "plan": 668, "platform": 142, "player": [45, 73, 102, 601, 612], "pleas": [4, 8, 20, 21, 26, 27, 113, 114, 115, 116, 128, 144, 200, 204, 205, 206, 234, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 280, 286, 294, 352, 362, 421, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 499, 501, 502, 503, 510, 579, 580, 588, 589, 633, 638, 656, 659, 661, 663, 671, 673, 762, 770, 776, 779, 780, 784, 785, 789, 790, 791, 792, 795, 798, 801, 802], "plenti": 769, "plot": [792, 795], "plot_tre": 795, "plt": [760, 791, 795, 798, 801], "plu": [129, 155, 275, 276, 651, 762, 765], "pm": [174, 791, 792], "pm_dglpart": [638, 723], "pm_pd": [174, 791], "pm_pd_batch": 174, "pm_pd_y": 791, "pma": 378, "pmpd": 791, "pmpd1": 791, "pn": 712, "pna": 360, "pnaconv": 339, "png": [768, 769, 770, 771, 772, 773, 783, 784, 785, 786, 807, 808], "po": [6, 172, 760, 791, 795, 801, 802], "point": [8, 13, 171, 172, 283, 346, 371, 372, 373, 492, 514, 582, 583, 584, 650, 740, 762, 776, 791, 802], "point_idx": 6, "pointer": [21, 129, 275, 276, 558, 559, 643], "polariz": [171, 172], "polici": [4, 637], "policy_str": 4, "polit": 162, "politifact": 155, "ponder": 802, "ponderli": 158, "pool": [6, 12, 333, 362, 367, 370, 374, 375, 376, 377, 378, 380, 381, 394, 402, 664, 665, 666, 704, 705, 706, 748, 749, 750, 795, 801, 802, 803, 805, 807], "pooler": 761, "poorli": 776, "pop": [370, 789, 790, 792, 795, 807], "popul": [20, 198], "popular": [163, 187, 636, 647, 673, 758, 765, 768], "port": [640, 779, 780], "port1": [779, 780], "port2": [779, 780], "portion": [4, 9, 636, 768, 783], "pos_dst": 780, "pos_enc": [761, 802], "pos_enc_s": 761, "pos_encod": 394, "pos_featur": 780, "pos_graph": [780, 785], "pos_linear": 761, "pos_pair_graph": 210, "pos_scor": [659, 672, 701, 712, 744, 755, 771, 780, 785], "pos_src": 780, "pos_u": 329, "pos_v": 329, "pose": 801, "posit": [6, 12, 142, 146, 153, 154, 157, 159, 175, 181, 204, 210, 230, 231, 284, 325, 327, 329, 345, 348, 390, 392, 393, 394, 495, 505, 507, 508, 578, 606, 610, 614, 631, 659, 744, 761, 764, 780, 785, 792, 795, 802], "positionwis": [378, 379], "positive_edge_dst": [136, 780], "positive_edge_src": [136, 780], "positive_graph": [659, 701, 744], "possibl": [20, 210, 216, 333, 493, 494, 504, 643, 650, 651, 657, 771, 772, 779, 790, 791, 798, 802], "possible_dest": 798, "possible_dests_emb": 798, "possibli": 671, "post": [20, 23, 159, 173, 802], "post_func": 802, "post_pair": 802, "postiv": 744, "potenti": [656, 772, 790], "power": [9, 21, 161, 352, 372, 394, 492, 603, 639, 659, 698, 740, 760, 764, 768, 772, 796, 805], "ppa": [632, 677, 717], "ppi": [24, 765], "ppidata": [633, 678, 718], "ppidataset": 24, "ppr": [12, 613], "pq": 174, "pr": 20, "practic": [331, 341, 343, 346, 347, 349, 350, 351, 354, 356, 363, 420, 629, 653, 671, 761, 767, 771, 773, 777, 778, 784, 785, 786, 791, 792, 807], "practice\ub4e4\uc744": 715, "practis": [331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 651, 776], "pramet": 365, "pre": [4, 22, 123, 237, 330, 353, 356, 358, 361, 365, 366, 662, 760, 761, 798, 802], "pre_func": 802, "pre_kv": 802, "pre_pair": 802, "pre_q": 802, "precis": [8, 582, 583, 584, 648, 650, 732, 734, 771, 792], "precomput": 339, "precond": [365, 366], "pred": [4, 656, 659, 669, 672, 699, 701, 709, 712, 741, 744, 753, 755, 759, 760, 768, 770, 771, 772, 785, 791, 795, 807], "predction": 188, "predecessor": [92, 106, 281, 283, 287, 371, 373, 420, 514, 740], "predefin": [146, 150, 169, 673], "predic": [52, 53, 791, 802], "predict": [12, 130, 131, 135, 136, 137, 141, 146, 150, 153, 154, 158, 165, 169, 170, 171, 172, 181, 187, 201, 204, 206, 210, 232, 332, 333, 367, 368, 370, 377, 382, 398, 632, 636, 654, 656, 661, 668, 671, 673, 677, 701, 717, 718, 744, 759, 760, 761, 767, 768, 770, 772, 774, 775, 779, 781, 782, 784, 786, 787, 788, 791, 792, 795, 798, 801, 808], "predict_categori": [130, 131, 141, 165, 790], "prediction\u6570\u636e\u96c6": 677, "prediction\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 677, "predictor": [382, 398, 656, 659, 669, 699, 701, 741, 744, 761, 780], "prefer": [164, 177, 646, 770], "prefetch": [12, 198, 199, 204, 206, 207, 210, 211, 212, 213, 214, 215, 655], "prefetch_edata": [199, 207], "prefetch_edge_feat": [198, 204, 206, 209, 662], "prefetch_label": [198, 204, 206, 210, 662], "prefetch_ndata": [199, 207], "prefetch_node_feat": [198, 204, 206, 209, 662], "prefix": [580, 638, 723], "prepar": [639, 668, 671, 773, 779, 784, 802, 808], "prepare_for_train": 798, "prepare_train": 798, "prepend": 67, "preprocess": [130, 131, 141, 165, 172, 175, 635, 638, 759, 760, 762, 771], "prerequisit": 638, "presenc": [145, 176], "present": [368, 369, 761, 790, 792, 801], "preserv": [94, 95, 125, 221, 223, 228, 230, 231, 498, 500, 508, 509, 510, 511, 603, 604, 609, 764, 789, 795], "presort": [358, 361], "pretrain": [155, 175, 758], "pretrained_emb": [175, 795], "prev_loss": 785, "prev_proj": 791, "prevent": [120, 142, 357, 390, 393, 596, 655, 663, 758, 790], "previou": [177, 331, 640, 669, 671, 672, 755, 771, 773, 783, 784, 785, 786, 791, 802, 808], "previous": [661, 669, 808], "price": 21, "prime": [344, 347], "primit": [3, 337, 338, 798], "princip": [360, 732], "principl": [643, 660], "print": [4, 6, 19, 20, 21, 41, 52, 53, 69, 107, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 195, 209, 234, 280, 326, 327, 328, 330, 332, 348, 351, 353, 356, 371, 373, 391, 395, 396, 397, 422, 423, 501, 515, 516, 585, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 616, 629, 631, 632, 636, 638, 639, 646, 661, 663, 669, 672, 673, 677, 681, 689, 698, 703, 709, 712, 713, 715, 717, 721, 730, 740, 746, 747, 753, 755, 756, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 779, 784, 785, 786, 789, 790, 791, 792, 795, 798, 802, 807, 808], "print_everi": [130, 131, 141, 165], "printcalcul": 21, "prior": [796, 805], "prioriti": [229, 512, 758], "prob": [204, 206, 209, 230, 231, 505, 507, 508, 509, 798, 802], "probabl": [143, 167, 204, 206, 207, 209, 230, 231, 332, 390, 392, 393, 495, 503, 505, 507, 508, 509, 510, 599, 600, 601, 609, 613, 659, 673, 740, 744, 771, 785, 791, 792, 798, 799, 801, 802, 805], "problem": [663, 768, 771, 790, 791, 796, 802, 805], "proc": 807, "proc_id": 808, "proce": [647, 671, 789, 791, 802], "procedur": [6, 633, 802], "process": [0, 2, 4, 6, 7, 21, 40, 132, 135, 136, 137, 139, 140, 145, 151, 152, 176, 178, 179, 180, 183, 200, 203, 221, 224, 228, 297, 298, 329, 332, 351, 363, 364, 367, 368, 382, 401, 403, 522, 628, 629, 631, 632, 634, 635, 636, 637, 638, 639, 640, 654, 656, 657, 671, 675, 678, 715, 718, 719, 760, 761, 772, 773, 776, 779, 780, 784, 785, 790, 791, 792, 795, 798, 802], "prod_": 8, "produc": [220, 539, 542, 543, 544, 546, 639, 666, 771, 784, 789, 792], "product": [4, 117, 133, 134, 157, 159, 329, 343, 356, 398, 539, 564, 642, 657, 659, 669, 672, 683, 724, 742, 755, 761, 762, 771, 779, 780, 785, 792, 801, 802], "product\ub85c": 744, "product\ub97c": [753, 755], "profil": 155, "prog": 795, "program": [8, 20, 21, 635, 641, 760, 773], "progress": [130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 190, 369, 370, 629, 715, 799, 805], "prohibit": 155, "proj": 802, "project": [21, 151, 178, 183, 333, 390, 400, 656, 770, 786, 789, 790, 791, 798], "project_initial_featur": 351, "prompt": 758, "prop": [366, 798], "prop_edg": 91, "prop_edges_yyi": 0, "prop_nod": [90, 795], "prop_nodes_topo": 795, "prop_nodes_xxx": 0, "prop_step": [365, 366], "propag": [12, 90, 91, 155, 332, 365, 366, 403, 488, 490, 491, 658, 661, 673, 756, 760, 783, 791, 795], "propagagtion\uc744": 743, "propagate_attent": 802, "propagation\uc744": 756, "propagation\uc758": 743, "proper": [200, 776], "properli": [135, 136, 137, 655], "properti": [4, 37, 38, 41, 42, 43, 44, 45, 50, 51, 58, 64, 65, 67, 73, 76, 77, 102, 103, 104, 135, 156, 158, 170, 171, 172, 185, 187, 195, 377, 382, 521, 522, 523, 529, 531, 538, 540, 541, 551, 618, 619, 621, 623, 624, 632, 633, 644, 671, 677, 678, 717, 718, 761, 769, 772, 773, 786, 790, 798, 801], "property_nam": 187, "property_valu": 195, "proport": [204, 206, 207, 209, 638, 659], "propos": [158, 187, 195, 330, 578, 614, 768, 770, 790, 792, 795, 802], "protect": [636, 773], "protein": [24, 51, 161, 168, 333, 632, 677, 717, 772], "proteom": 798, "protest": 160, "prototyp": [21, 646], "proven": 761, "provid": [0, 3, 4, 5, 7, 8, 20, 33, 34, 72, 79, 88, 92, 112, 129, 135, 136, 137, 161, 164, 171, 172, 195, 198, 199, 203, 204, 206, 209, 210, 275, 276, 283, 288, 327, 352, 356, 362, 371, 373, 401, 501, 512, 514, 519, 520, 548, 585, 613, 626, 628, 629, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 643, 646, 647, 653, 654, 655, 656, 659, 660, 661, 663, 668, 669, 670, 671, 673, 764, 768, 769, 770, 771, 772, 773, 776, 779, 784, 785, 786, 789, 790, 792, 795, 801, 802, 807], "provis": [635, 640], "proxi": 131, "prune": [369, 370], "pseudo": [197, 327, 354], "pseudocod": 801, "psi": [397, 446, 649, 692, 733], "psi_": 446, "pt": [639, 784, 785, 808], "ptc": 161, "pth": 798, "pub": 158, "public": [21, 146, 169, 791], "publish": 765, "pubm": [24, 169, 633, 678, 718, 765], "pull": [0, 20, 91, 791, 795], "purchas": [133, 134, 656, 699, 741, 762], "pure": [171, 172, 650, 665], "purl": 131, "purpos": [4, 229, 510, 629, 631, 633, 647, 658, 669, 792], "push": [4, 20, 765], "put": [21, 229, 295, 296, 366, 392, 501, 656, 657, 661, 768, 784, 785, 786, 801, 807, 808], "py": [4, 20, 21, 189, 190, 639, 640, 671, 683, 711, 723, 724, 754, 758, 761, 767, 768, 769, 770, 771, 772, 773, 775, 776, 778, 779, 780, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 794, 795, 797, 798, 800, 801, 802, 804, 807, 808, 810], "pyarrow": [639, 723], "pydant": 144, "pyg": 765, "pygcn": 789, "pygraphviz": 795, "pylibcugraphop": [336, 337, 338], "pylint": 20, "pylintrc": 20, "pyplot": [760, 791, 795, 798, 801], "python": [0, 7, 20, 21, 33, 52, 91, 99, 193, 195, 196, 200, 336, 337, 338, 634, 635, 636, 639, 643, 646, 679, 719, 721, 727, 757, 758, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "python3": [20, 640, 683, 724, 758, 761, 779, 789, 792], "pythonpath": 20, "python\uc758": 719, "pytorch": [3, 4, 5, 6, 7, 8, 9, 12, 13, 20, 22, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 100, 101, 102, 103, 104, 106, 107, 108, 109, 113, 114, 123, 124, 129, 177, 186, 200, 203, 204, 205, 206, 209, 224, 234, 235, 236, 237, 238, 251, 252, 253, 254, 275, 276, 277, 281, 282, 283, 293, 299, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 421, 422, 485, 492, 503, 514, 516, 579, 581, 585, 586, 587, 595, 601, 607, 612, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 633, 635, 636, 646, 655, 656, 660, 661, 663, 664, 665, 666, 668, 671, 673, 702, 704, 707, 711, 713, 720, 721, 741, 745, 746, 747, 748, 749, 754, 756, 757, 759, 760, 761, 762, 764, 765, 766, 768, 769, 770, 771, 772, 773, 776, 779, 780, 784, 785, 786, 789, 790, 791, 792, 793, 795, 796, 798, 799, 801, 802, 803, 805, 807, 808], "pytorchcaffe2": 776, "pytorch\u7684nn\u6a21\u5757": 704, "pytorch\u7684tensor\u7c7b": 689, "pytorch\ub294": 747, "pytorch\ub85c": 745, "pytorch\ub97c": 752, "pytorch\uc640": [718, 721], "pytorch\uc758": [730, 747, 750], "pyyaml": 144, "py\u548claunch": 683, "py\u5e94\u8be5\u4f7f\u7528\u76f8\u540c\u7684ip\u914d\u7f6e\u6587\u4ef6": 683, "q": [143, 167, 358, 377, 390, 505, 510, 761, 802], "q_": [330, 361], "q_i": 802, "q_j": 802, "q_p": 167, "q_proj": 761, "q_t": 377, "qi": [789, 791], "qingbiao": 691, "qingbiaoli": 691, "qipeng": [795, 802], "qk": [390, 761], "qkv": 802, "qm7b": [24, 170, 633, 678, 718], "qm7bdata": [633, 678, 718], "qm7bdataset": [630, 633, 676, 678, 716, 718], "qm7bdataset\u6e90\u4ee3\u7801": 678, "qm9": 171, "qm9dataset": 172, "qm9edg": 172, "qm9edgedataset": 171, "qquad": 791, "qualiti": [204, 785, 802], "quan": [789, 802], "quantum": [170, 171, 172, 334, 359], "queri": [4, 12, 35, 36, 37, 44, 46, 47, 50, 53, 54, 55, 56, 57, 59, 60, 74, 76, 78, 79, 80, 81, 86, 87, 88, 89, 104, 106, 646, 761, 786, 802], "question": 791, "queue": [4, 224], "queue_siz": 4, "quick": [21, 646, 764], "quickli": 770, "quickstart": 763, "quit": [21, 634, 792], "quot": [631, 769], "r": [13, 59, 86, 117, 118, 159, 171, 172, 330, 344, 347, 349, 350, 361, 372, 374, 375, 376, 381, 399, 400, 444, 447, 492, 595, 639, 649, 652, 667, 692, 707, 733, 751, 760, 761, 762, 764, 798, 801, 802], "r0": [637, 722], "r1": [637, 722], "r2": [171, 172, 637, 722], "r3": [637, 722], "r_": [333, 594, 667, 707, 751, 764], "r_1": 594, "r_2": 594, "r_g": 492, "r_i": [337, 397], "r_j": [397, 594], "r_k": 333, "r_t": [204, 377, 508], "radial": 333, "radiu": [232, 372, 492], "radius_proj": 791, "rais": [20, 47, 88, 108, 115, 129, 142, 170, 171, 172, 174, 275, 276, 284, 331, 343, 346, 347, 348, 349, 350, 351, 354, 356, 363, 578, 579, 580, 606, 614, 630, 637, 665, 666, 676, 705, 706, 716, 749, 750], "ram": [13, 639], "rand": [6, 8, 126, 127, 204, 206, 209, 343, 344, 346, 347, 349, 350, 354, 356, 359, 362, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 392, 393, 395, 397, 404, 590, 591, 643, 663, 686, 727, 747], "rand_bipartit": 494, "rand_graph": [8, 329, 344, 347, 357, 374, 375, 376, 377, 378, 379, 380, 381, 382, 398, 399, 400, 403, 493, 593, 599, 600, 601, 612, 613, 663, 747], "randint": [330, 399, 400, 668, 669, 672, 708, 709, 712, 752, 753, 755, 785], "randn": [5, 46, 74, 117, 118, 119, 327, 328, 330, 353, 357, 368, 369, 398, 399, 400, 554, 555, 561, 564, 572, 596, 612, 613, 615, 644, 645, 668, 669, 687, 688, 698, 708, 709, 728, 729, 740, 752, 753, 764, 769, 786, 801], "random": [0, 6, 12, 139, 140, 157, 158, 159, 166, 167, 174, 179, 180, 187, 188, 195, 197, 204, 207, 229, 325, 329, 343, 344, 347, 349, 350, 356, 359, 374, 375, 376, 377, 378, 379, 380, 381, 382, 493, 494, 495, 503, 505, 506, 507, 508, 513, 610, 613, 639, 658, 668, 669, 708, 709, 752, 753, 761, 771, 792, 807], "random_flip": [578, 614], "random_partit": 639, "random_se": [157, 158, 159, 187, 195, 508], "random_st": [139, 140, 179, 180, 197, 807], "random_walk": [506, 657], "random_walk_with_restart": 507, "randomli": [6, 139, 140, 143, 167, 179, 180, 197, 199, 200, 203, 216, 217, 221, 228, 230, 231, 399, 400, 508, 509, 510, 578, 593, 599, 600, 601, 608, 614, 639, 668, 740, 752, 771, 784, 785], "randomst": [174, 197], "randomwalkp": 12, "rang": [4, 126, 127, 142, 160, 161, 164, 166, 177, 200, 203, 229, 295, 325, 367, 368, 369, 391, 396, 403, 486, 504, 510, 519, 520, 586, 633, 635, 637, 639, 663, 669, 671, 672, 673, 678, 680, 709, 711, 712, 713, 718, 720, 747, 753, 754, 755, 756, 759, 760, 761, 768, 770, 771, 772, 779, 780, 784, 785, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "rangepartitionbook": 4, "rangl": [171, 172], "rank": [4, 221, 228, 297, 380, 609, 770, 807, 808], "rapid": 790, "rare": [216, 504], "rate": [4, 9, 13, 157, 159, 332, 336, 337, 338, 342, 347, 349, 350, 358, 361, 362, 365, 366, 367, 368, 378, 379, 669, 790], "rather": [139, 140, 179, 180, 762, 776, 791, 798], "ratio": [135, 136, 137, 157, 159, 187, 188, 195, 233, 339, 360, 593], "raw": [0, 94, 95, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 234, 277, 281, 282, 394, 421, 485, 498, 499, 516, 613, 628, 629, 631, 633, 639, 670, 714, 715, 765, 773], "raw_dir": [130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 629, 630, 633, 675, 676, 678, 715, 716, 718], "raw_dir\u4e0b\u7684self": 676, "raw_dir\u6307\u5b9a\u7684\u503c": 675, "raw_path": [152, 630, 633, 676, 678, 716, 718], "rb": [361, 780, 790], "rbf": 333, "rbf_kernel_mean": 333, "rbf_kernel_sc": 333, "rbrace": [177, 649, 692, 698, 733, 740], "rcmk": 501, "rcount": [789, 792], "rdf": [130, 131, 141, 165, 790], "rdfdata": [633, 678, 718], "rdfgraphdataset": [130, 131, 141, 165], "re": [6, 94, 95, 132, 135, 136, 137, 144, 145, 151, 176, 178, 183, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 361, 362, 363, 364, 365, 366, 499, 501, 633, 765], "reach": [654, 795, 802], "reachabl": 294, "read": [1, 3, 4, 5, 12, 20, 164, 174, 197, 327, 631, 636, 638, 639, 757, 764, 765, 771, 773, 779, 780, 784, 785, 795, 802, 808], "read_csv": 773, "reader": [789, 792], "readi": [655, 779, 798], "readm": [20, 200], "readonli": [115, 579], "readout": [379, 382, 496, 497, 772], "readout_edg": [289, 291, 497, 576], "readout_nod": [290, 292, 496, 577, 671, 711, 754], "real": [155, 158, 639, 723, 760, 761, 769, 783, 798, 802], "realiz": 19, "realli": [390, 391, 393, 395, 396], "reason": [20, 160, 162, 636, 658], "reassign": 638, "recal": [13, 761, 783, 786, 790, 792, 802], "receiv": [19, 52, 99, 211, 332, 341, 356, 622, 623, 624, 625, 650, 770, 786, 798], "recent": [158, 761, 802], "recip": [367, 368, 369, 370], "recogn": [666, 706, 750], "recognit": 167, "recommand": 26, "recommend": [5, 20, 21, 33, 72, 92, 93, 99, 112, 123, 159, 200, 237, 340, 341, 342, 503, 586, 628, 629, 633, 634, 636, 638, 639, 640, 642, 650, 651, 657, 669, 672, 758, 770, 771, 779, 789, 790, 791, 792, 795, 798, 801, 802, 807], "reconstruct": 790, "record": [4, 55, 130, 142, 588, 760, 795, 798], "recov": [639, 772, 790], "recreat": 764, "recurr": [160, 162, 355, 377, 802, 803, 805], "recurs": [20, 295, 296, 758], "reddit": [24, 173, 663, 747, 765], "redditbinari": 161, "redditdata": [633, 678, 718], "redditdataset": [24, 663, 747], "redditmulti5k": 161, "redistribut": [757, 758], "reduc": [12, 19, 72, 90, 91, 92, 93, 99, 112, 251, 252, 253, 254, 446, 448, 487, 488, 489, 490, 491, 542, 543, 544, 546, 639, 649, 650, 652, 658, 663, 733, 734, 737, 747, 750, 770, 783, 786, 789, 790, 792, 795, 802], "reduce_func": [72, 90, 91, 92, 93, 99, 112, 251, 252, 253, 254, 487, 488, 489, 490, 491, 650, 652, 653, 693, 695, 696, 734, 737, 738, 770, 786, 792, 795, 798, 802], "reduce_op": 446, "reducer\ub294": 737, "reduct": [8, 72, 90, 91, 92, 93, 99, 112, 204, 448, 539, 542, 543, 544, 652, 667, 737, 751, 770, 795], "redund": 504, "ref": [141, 682], "refer": [4, 8, 20, 21, 23, 43, 71, 103, 133, 134, 143, 144, 147, 148, 149, 155, 158, 160, 162, 167, 168, 170, 171, 172, 173, 174, 185, 200, 204, 205, 206, 229, 230, 330, 361, 374, 375, 376, 377, 378, 380, 381, 392, 445, 446, 503, 509, 580, 633, 636, 640, 643, 647, 656, 657, 661, 662, 672, 673, 699, 703, 741, 746, 757, 759, 760, 762, 769, 770, 772, 776, 784, 785, 789, 790, 791, 792, 795, 798, 801, 802, 807], "refere": 802, "reflect": [21, 25, 69, 145, 176, 760], "refresh": [762, 784, 785, 808], "regard": [352, 356, 362, 424, 425, 426, 427, 567, 670, 764], "regardless": [4, 79, 116, 128, 223, 288, 294, 638, 639, 798], "regim": 658, "region": [22, 760], "regist": [21, 367, 368, 369, 370, 665], "register_object": 21, "registr": 664, "registri": 21, "regress": [2, 135, 170, 171, 172, 185, 201, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 633, 656, 659, 666, 668, 672, 718, 752, 772], "regression_test": [773, 784, 785, 786, 791, 795, 798, 801], "regression\ub3c4": 756, "regular": [330, 337, 344, 361, 405, 636, 790], "regularli": 807, "reiniti": [325, 329, 336, 337, 338, 340, 341, 342, 344, 347, 349, 350, 351, 354, 355, 356, 359, 362, 363, 364, 377, 398, 399, 400, 402, 665, 749, 792], "reject": [504, 594], "rel": [94, 95, 369, 370, 399, 400, 633, 639, 640, 656, 659, 661, 671, 673, 678, 699, 701, 703, 711, 713, 718, 741, 744, 746, 754, 756], "rel_data_path": [683, 724], "rel_emb": [399, 400], "rel_graph": [667, 707, 751], "rel_nam": [656, 659, 661, 669, 671, 672, 673, 699, 701, 703, 709, 711, 712, 713, 741, 744, 746, 753, 754, 755, 756], "rel_project": 400, "rel_typ": [24, 160, 162], "relabel": [4, 6, 120, 123, 229, 234, 237, 277, 281, 282, 421, 485, 647], "relabel_idx": 6, "relabel_nod": [48, 105, 153, 154, 181, 234, 277, 281, 282, 421, 485, 698, 740], "relat": [1, 12, 17, 20, 25, 51, 58, 112, 116, 120, 123, 124, 129, 130, 131, 141, 153, 154, 157, 158, 159, 165, 181, 193, 196, 210, 234, 237, 238, 275, 276, 277, 281, 282, 299, 327, 330, 337, 339, 360, 361, 397, 399, 400, 405, 421, 485, 493, 494, 594, 631, 633, 639, 641, 642, 647, 652, 656, 666, 667, 731, 737, 764, 767, 792, 793, 794, 802, 805], "relation_submodul": 327, "relationship": [146, 150, 169, 507, 656, 762, 771, 790, 791, 793, 805], "releas": [6, 758], "relev": 672, "relgraphconv": [337, 586], "relgraphconvlay": [673, 713, 756], "reli": [663, 779], "reliabl": 21, "reload": [130, 131, 133, 134, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 181, 182, 184, 185, 629, 715], "relu": [119, 335, 340, 346, 352, 353, 370, 393, 635, 656, 658, 659, 660, 661, 663, 665, 666, 671, 673, 680, 699, 700, 701, 702, 703, 705, 706, 711, 713, 720, 741, 743, 744, 745, 746, 749, 750, 754, 756, 759, 760, 761, 762, 764, 768, 770, 771, 772, 779, 780, 784, 785, 786, 789, 790, 791, 792, 807, 808], "relubackward0": 352, "remain": [99, 173, 499, 654, 776, 792], "remaind": 802, "remap": 639, "remot": [20, 142, 170, 171, 172, 629, 630], "remov": [94, 95, 117, 118, 128, 133, 134, 147, 148, 149, 153, 164, 177, 182, 234, 277, 281, 282, 485, 498, 499, 500, 506, 588, 596, 611, 660, 661, 771, 802], "remove_edg": [26, 27, 95, 113, 114, 499, 771], "remove_nod": [26, 27, 94, 113, 114, 498], "remove_self_loop": 116, "removeselfloop": 12, "renam": [125, 589], "render": 20, "reorder": [146, 150, 156, 169, 184, 358, 501, 510, 633, 718], "reorder_graph": [146, 150, 156, 169, 184, 358, 361, 633, 678, 718], "reparameter": 366, "repeat": [6, 126, 127, 139, 281, 282, 394, 673, 798, 801, 807], "repeat_interleav": [126, 127, 659, 672, 701, 712, 744, 755], "repeatedli": [329, 672, 802], "repetit": 640, "replac": [20, 99, 129, 206, 209, 211, 216, 230, 231, 275, 276, 392, 424, 426, 429, 431, 450, 452, 456, 458, 464, 466, 470, 472, 493, 494, 504, 508, 509, 510, 578, 588, 614, 636, 637, 639, 659, 660, 661, 681, 701, 721, 722, 744, 761, 764, 770, 771, 785, 786, 789, 801, 802, 803, 805], "replic": [225, 808], "replica": 808, "repo": [20, 22, 630, 639, 676, 716, 759, 760, 761, 762, 764, 802], "report": [13, 792], "repositori": [20, 758, 765, 790], "repres": [3, 5, 20, 21, 25, 30, 31, 50, 60, 87, 117, 118, 124, 129, 132, 133, 134, 145, 147, 148, 149, 151, 155, 158, 175, 176, 178, 182, 183, 210, 238, 275, 276, 327, 333, 334, 340, 341, 342, 354, 356, 360, 362, 369, 370, 504, 510, 539, 586, 594, 631, 638, 642, 646, 650, 652, 655, 661, 666, 667, 672, 762, 764, 767, 768, 770, 771, 772, 774, 775, 783, 790, 792, 795, 801], "represensit": 13, "represent": [0, 31, 61, 62, 129, 151, 178, 183, 204, 205, 206, 210, 275, 276, 325, 327, 329, 333, 334, 338, 342, 357, 362, 379, 382, 390, 391, 393, 395, 396, 398, 402, 495, 496, 497, 508, 524, 526, 527, 534, 590, 591, 610, 652, 654, 656, 658, 659, 661, 666, 669, 671, 672, 673, 743, 744, 753, 754, 755, 761, 764, 768, 770, 771, 772, 780, 783, 784, 786, 789, 790, 791, 793, 795, 796, 798, 801, 802, 803, 805, 808], "representation\ub4e4\uacfc": 753, "representation\ub4e4\ub85c": 753, "representation\ub4e4\ub85c\ubd80\ud130": 741, "representation\ub4e4\uc744": [740, 741, 743, 744, 754], "representation\ub4e4\uc758": [744, 753, 756], "representation\ub4e4\uc774": [740, 746], "representation\uc740": [750, 755], "representation\uc744": [739, 741, 743, 746, 753, 754], "representation\uc774\uace0": 754, "representation\uc774\ub2e4": 755, "repurpos": [135, 136, 137, 669], "reput": 142, "request": [20, 636, 773], "requir": [4, 5, 8, 9, 20, 50, 54, 59, 60, 65, 86, 87, 89, 106, 120, 128, 144, 200, 206, 207, 210, 336, 337, 338, 339, 352, 353, 359, 362, 367, 368, 398, 402, 445, 446, 492, 501, 631, 635, 636, 637, 638, 639, 645, 646, 650, 654, 655, 661, 663, 666, 750, 759, 760, 761, 762, 764, 768, 771, 772, 779, 783, 785, 786, 791, 795, 802], "requires_grad": [8, 795], "requires_grad_": [8, 117, 118, 791], "research": [761, 790, 791, 792, 793, 795, 798, 802, 805], "reserv": 585, "reset": [330, 403, 665], "reset_paramet": [325, 326, 329, 330, 336, 337, 338, 340, 341, 342, 344, 347, 349, 350, 351, 354, 355, 356, 359, 362, 363, 364, 377, 390, 398, 399, 400, 402, 665, 705, 749, 792], "reshap": [94, 95, 116, 498, 499, 500, 596, 761, 764, 801], "reshuffl": [4, 229, 295, 486, 723], "residu": [336, 339, 347, 349, 350, 351, 354, 357, 359, 360, 761, 802], "resolv": 20, "resourc": [2, 635, 654], "respect": [5, 94, 95, 137, 143, 175, 204, 205, 206, 209, 229, 232, 325, 329, 345, 360, 368, 369, 445, 446, 498, 499, 501, 504, 516, 545, 565, 638, 639, 647, 650, 651, 660, 761, 771, 791, 798, 802], "respons": [635, 636, 779], "rest": [6, 94, 95, 138, 229, 277, 281, 282, 485, 580, 629, 635, 666, 671, 763, 771, 773], "restart": [507, 609, 613, 779], "restart_prob": [506, 507], "restaur": 159, "restrict": [43, 103, 117, 118, 124, 129, 237, 238, 275, 276, 640, 776, 798], "resuffl": [295, 486], "result": [6, 8, 19, 20, 50, 55, 60, 69, 72, 87, 94, 95, 115, 117, 118, 120, 123, 124, 128, 187, 188, 199, 204, 216, 217, 229, 230, 231, 234, 235, 237, 238, 277, 280, 281, 282, 283, 286, 294, 297, 327, 333, 344, 363, 364, 398, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 493, 494, 496, 497, 498, 499, 501, 502, 505, 507, 508, 509, 510, 511, 515, 516, 517, 518, 539, 542, 543, 544, 553, 554, 561, 564, 572, 579, 580, 585, 586, 587, 588, 602, 603, 604, 609, 613, 622, 626, 636, 638, 639, 641, 642, 643, 645, 650, 652, 667, 671, 673, 734, 737, 760, 764, 765, 770, 771, 773, 776, 779, 780, 785, 791, 792, 802], "result_dict": [659, 701, 744], "ret": [339, 360, 789, 792, 802], "retain": [55, 647, 731, 764], "retri": 190, "retriev": [21, 123, 124, 182, 223, 237, 238, 326, 495, 516, 585, 602, 603, 604, 609, 610, 613, 618, 619, 620, 621, 671, 769, 771, 773, 785, 786, 791], "return": [0, 4, 5, 6, 9, 19, 21, 25, 29, 30, 31, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 99, 102, 103, 104, 106, 107, 108, 109, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 195, 197, 199, 204, 207, 208, 209, 210, 211, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 251, 252, 253, 254, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 595, 596, 605, 607, 611, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 632, 633, 634, 636, 637, 639, 650, 651, 652, 655, 656, 658, 659, 660, 661, 662, 663, 666, 669, 671, 672, 673, 677, 678, 679, 681, 693, 694, 695, 698, 699, 700, 701, 702, 703, 706, 709, 711, 712, 713, 717, 718, 719, 721, 722, 734, 736, 737, 740, 741, 743, 744, 745, 746, 747, 750, 753, 754, 755, 756, 759, 760, 761, 762, 764, 768, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "return_count": [110, 586, 588, 616], "return_eid": [505, 507], "return_eigv": 284, "return_label": 220, "return_map": [229, 639, 723, 779], "return_path": [395, 396, 515], "return_uv": 47, "retweet": 155, "reuiqr": 398, "reus": [637, 656, 659, 672], "reusabl": 666, "rev": 723, "rev_plai": [368, 595], "rev_r": 595, "rev_rev_plai": 368, "revers": [115, 121, 122, 128, 130, 131, 133, 134, 141, 146, 147, 148, 149, 150, 153, 154, 165, 169, 181, 182, 210, 219, 220, 285, 357, 488, 490, 491, 501, 592, 595, 626, 631, 633, 639, 655, 656, 662, 678, 718, 741, 769, 784, 785, 786, 791, 808], "reverse_edg": [146, 150, 169], "reverse_eid": [210, 656, 699, 741], "reverse_etyp": [210, 656, 699, 741], "reverse_id": [210, 656, 699, 741], "reverse_typ": [210, 656, 699, 741], "revert": 626, "review": [20, 133, 134, 157, 158, 159, 184], "revis": 802, "revisit": 505, "reweight": 365, "rewond": 691, "rewrit": 660, "rfeat": 400, "rg": [372, 501, 502], "rgcn": [656, 658, 659, 661, 669, 671, 672, 673, 699, 700, 701, 709, 711, 712, 713, 741, 743, 744, 746, 753, 754, 755, 756, 790], "rgcnlayer": 790, "rgcn\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u4e0e\u5b83\u975e\u5e38\u76f8\u4f3c": 703, "rgcn\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6": 713, "rgcn\u7684\u5b9e\u73b0": 703, "rh": 445, "rhel": 758, "rho": [366, 446, 649, 692, 698, 733, 740, 791], "rhs_data": [445, 446], "rhs_field": [241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274], "rhs_target": 445, "rich": 158, "richer": 801, "rid": 658, "right": [4, 5, 117, 146, 287, 332, 335, 338, 341, 344, 347, 348, 349, 350, 351, 352, 353, 354, 356, 358, 359, 362, 375, 376, 397, 402, 445, 446, 447, 578, 613, 614, 630, 636, 637, 649, 651, 656, 659, 661, 666, 671, 672, 692, 698, 699, 701, 703, 706, 712, 733, 740, 741, 744, 746, 750, 755, 764, 770, 771, 783, 785, 786, 790, 792, 795, 802], "rightarrow": [299, 791, 798], "riski": 142, "rng": 174, "rnn": [391, 802, 803, 805], "robust": [187, 195], "roc_auc_scor": [771, 780, 785], "rocauc": 761, "rock": 795, "role": [232, 367, 368, 369, 370], "roll": 508, "rollout": [369, 370], "room": 650, "root": [155, 207, 348, 356, 395, 396, 515, 758, 759, 760, 762, 795], "rossmann": 344, "rotat": 172, "roughli": [181, 229, 333, 638, 779, 791], "round": [90, 91, 673, 798], "rout": [801, 803, 805], "routin": [21, 769], "routing_num": 801, "row": [4, 26, 30, 31, 117, 118, 129, 146, 150, 169, 275, 276, 283, 326, 340, 341, 342, 390, 393, 403, 492, 496, 497, 514, 524, 526, 527, 532, 539, 542, 543, 544, 545, 546, 554, 557, 558, 559, 565, 567, 571, 590, 591, 612, 613, 636, 638, 644, 660, 723, 728, 745, 762, 764, 773, 779, 780, 791], "row1": 573, "row2": 573, "row_sort": 275, "rowfeatnorm": 12, "rpc": 4, "rr": 691, "rst": [327, 666, 667, 706, 707, 750, 751], "rtype": [331, 332, 333, 334, 339, 342, 346, 348, 351, 352, 354, 355, 356, 360, 362, 363, 364, 365, 366, 398, 399, 402, 539], "rule": [20, 210, 662, 671, 791, 792, 798, 802], "run": [4, 9, 13, 20, 204, 224, 229, 365, 367, 368, 369, 370, 508, 510, 630, 635, 636, 639, 654, 663, 667, 758, 761, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "run_epoch": 802, "runnabl": 20, "runtim": [0, 4, 13, 21, 152, 627, 636, 637, 639], "runtimeerror": 174, "runtimewarn": [789, 792], "russia": [160, 790], "rv": 21, "rvert": 397, "rvert_2": [665, 705, 749], "rw": [613, 779], "r\uc5d0": 737, "s2": 377, "s3": [20, 22, 288, 512, 633, 643, 678, 718, 727], "s_": 764, "s_c": 791, "s_i": 802, "s_j": [801, 802], "s_norm": 801, "sab": 379, "safe": [155, 647, 786], "sage": [342, 635, 669, 672, 673, 680, 709, 712, 713, 720, 753, 755, 756, 779, 780], "sageconv": [327, 342, 660, 664, 665, 666, 673, 702, 704, 705, 706, 713, 745, 748, 749, 750, 756, 770, 771, 779, 780, 783, 784, 785, 786, 808], "sageconvforboth": 786, "sageconv\u7684\u6570\u5b66\u516c\u5f0f\u5982\u4e0b": 706, "sageconv\uc5d0\uc11c": 750, "sageconv\uc758": [749, 750], "sai": [20, 629, 654, 784, 786, 808], "said": [201, 202, 203, 786], "same": [0, 3, 4, 5, 7, 8, 19, 27, 33, 34, 41, 42, 45, 47, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 67, 69, 73, 86, 87, 90, 91, 92, 93, 99, 102, 107, 112, 115, 117, 118, 119, 120, 128, 129, 132, 152, 157, 159, 173, 187, 190, 195, 198, 199, 200, 201, 202, 204, 206, 209, 220, 221, 223, 228, 229, 230, 234, 235, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 286, 294, 295, 298, 327, 329, 331, 332, 339, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 356, 357, 359, 360, 362, 371, 372, 374, 376, 380, 381, 390, 397, 401, 402, 404, 421, 422, 485, 486, 492, 498, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 517, 518, 519, 520, 522, 526, 527, 545, 565, 575, 579, 580, 585, 586, 588, 596, 611, 630, 631, 633, 635, 636, 637, 638, 639, 640, 642, 643, 644, 645, 646, 647, 652, 656, 657, 658, 659, 661, 663, 664, 666, 667, 669, 671, 672, 673, 688, 716, 729, 731, 737, 740, 743, 758, 761, 764, 769, 770, 771, 773, 776, 779, 780, 783, 784, 789, 790, 791, 792, 795, 798, 802, 807], "sampl": [3, 6, 8, 12, 13, 120, 128, 136, 143, 156, 161, 164, 166, 167, 168, 173, 175, 177, 184, 185, 188, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 216, 217, 223, 224, 230, 231, 325, 329, 330, 369, 370, 377, 445, 519, 520, 553, 564, 580, 629, 631, 635, 637, 658, 662, 666, 671, 672, 681, 698, 721, 740, 741, 742, 761, 764, 767, 771, 772, 779, 785, 786, 787, 788, 790, 791, 795, 798, 799, 802, 805, 808], "sample_block": [635, 636, 680, 681, 698, 720, 721, 740], "sample_fronti": [698, 740], "sample_log_prob": 798, "sample_neighbor": [4, 204, 206, 230, 635, 636, 637, 655, 657, 662, 680, 681, 698, 720, 721, 722, 740, 742], "sample_neighbors_bias": [519, 520], "sample_point": 6, "sampler": [12, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 224, 336, 337, 338, 503, 504, 508, 635, 636, 640, 654, 657, 658, 680, 681, 698, 699, 700, 701, 703, 720, 721, 740, 741, 742, 743, 744, 746, 772, 786, 808], "sampler1": 657, "sampler2": 657, "saniti": 790, "satisfi": [52, 53, 358, 361, 522, 660, 791, 802], "save": [0, 2, 4, 8, 22, 152, 196, 229, 288, 512, 587, 602, 628, 629, 631, 638, 639, 643, 647, 650, 651, 652, 654, 662, 663, 667, 669, 670, 673, 675, 679, 686, 715, 719, 723, 727, 737, 756, 759, 760, 762, 768, 770, 771, 773, 779, 784, 785, 798, 802, 808], "save_dir": [152, 629, 675, 715], "save_graph": [166, 194, 288, 634, 643, 647, 679, 686, 690, 719, 727, 731, 769], "save_info": [634, 679, 719], "save_path": [135, 136, 137, 152, 629, 634, 675, 679, 715, 719], "save_tensor": 723, "saw": 808, "sbm": [143, 167], "sbmdata": [633, 678, 718], "scalabl": [329, 394, 505, 613, 760, 765], "scalar": [6, 117, 118, 123, 204, 206, 209, 237, 331, 343, 344, 347, 348, 349, 350, 356, 359, 362, 375, 539, 542, 543, 544, 546, 553, 556, 557, 558, 559, 562, 563, 571, 572, 642, 644, 659, 670, 728, 744, 764, 771, 785, 789, 791, 792, 801, 803, 805], "scalar_v": 764, "scale": [123, 132, 145, 176, 237, 287, 339, 356, 360, 397, 401, 420, 503, 639, 663, 747, 757, 761, 771, 776, 783, 785, 792, 802], "scale_const": 802, "scaled_exp": 802, "scaler": [339, 360, 555, 560, 663, 747], "scenario": [13, 21, 510, 637, 654, 671, 808], "scene": [347, 636], "schedul": 761, "schema": [71, 223, 639, 647, 723], "scheme": [4, 46, 74, 94, 95, 116, 135, 143, 161, 164, 167, 175, 177, 185, 209, 234, 235, 277, 281, 282, 421, 422, 485, 498, 499, 500, 585, 599, 600, 607, 613, 626, 631, 638, 639, 644, 647, 687, 690, 728, 731, 769, 772, 773, 784, 785], "schnet": 334, "schwarzenegg": 795, "scienc": [147, 182], "scientif": [146, 169, 791], "scientist\uac00": 732, "scipi": [8, 30, 117, 118, 124, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 501, 503, 643, 686, 727, 760, 764, 771, 791], "scipy_fmt": [30, 519, 520], "scope": [69, 771, 789, 791], "score": [12, 325, 343, 344, 349, 350, 358, 375, 398, 399, 400, 402, 656, 659, 669, 670, 672, 699, 701, 709, 712, 741, 744, 753, 755, 761, 764, 771, 780, 784, 786, 790, 792, 802], "score_neg": [780, 785], "score_po": [780, 785], "scorepredictor": [656, 659, 699, 701, 741, 744], "scorer": [399, 400], "scrape": 181, "scratch": [139, 140, 179, 180, 325, 769, 789, 790, 792], "script": [4, 20, 635, 636, 639, 640, 758, 759, 760, 761, 768, 769, 770, 771, 772, 773, 776, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "script_fold": [683, 724], "sddmm": [428, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 454, 455, 460, 461, 462, 463, 468, 469, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 553, 761, 764], "sdg\uc5d0\uc11c": 721, "seaborn": 801, "seal": 771, "seamlessli": 664, "search": [121, 122, 219, 220, 283, 369, 370, 371, 373, 514, 672, 755, 757, 792, 802], "search\uc640": 755, "second": [19, 128, 129, 200, 204, 205, 206, 209, 275, 276, 284, 327, 404, 506, 507, 508, 514, 516, 561, 571, 580, 586, 639, 655, 666, 671, 765, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 791, 792, 795, 798, 801, 802, 803, 805, 807, 808], "section": [13, 20, 200, 204, 205, 206, 626, 628, 632, 633, 635, 636, 638, 639, 643, 649, 654, 658, 660, 666, 668, 669, 672, 673, 753, 755, 768, 771, 779, 780, 784, 786, 791, 792, 808], "sector": 162, "see": [1, 4, 8, 19, 20, 43, 60, 65, 87, 88, 90, 103, 128, 129, 199, 200, 201, 202, 204, 206, 207, 210, 212, 213, 214, 215, 220, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 283, 336, 337, 344, 358, 361, 367, 368, 375, 377, 382, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 519, 520, 524, 526, 527, 534, 557, 558, 559, 566, 568, 569, 570, 580, 586, 629, 631, 633, 636, 642, 643, 644, 646, 647, 650, 655, 656, 658, 659, 660, 661, 662, 668, 671, 673, 758, 760, 761, 769, 770, 771, 772, 773, 779, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "seed": [4, 139, 140, 157, 158, 159, 166, 174, 179, 180, 187, 188, 195, 197, 198, 200, 203, 204, 206, 209, 378, 493, 494, 503, 507, 508, 509, 636, 637, 655, 662, 681, 721, 722, 761, 779, 791, 807], "seed2_contribut": 508, "seed_nod": [206, 655, 662, 698, 740], "seem": [333, 791, 792], "seen": [659, 661, 673, 765, 784, 786, 789, 790, 791, 792, 802], "seg": [373, 448, 514], "segal": 795, "seglen": 448, "seglen_a": 447, "segment": [12, 120, 133, 134, 447, 448, 519, 520, 626], "segmentmm": 12, "segmentreducebackward": [375, 382], "select": [6, 20, 55, 139, 140, 143, 167, 179, 180, 199, 200, 207, 229, 230, 231, 283, 339, 360, 371, 373, 380, 390, 391, 393, 503, 508, 509, 510, 511, 512, 514, 528, 588, 616, 654, 658, 663, 740, 758, 760, 764, 783, 784, 798], "self": [25, 61, 62, 115, 116, 152, 158, 160, 161, 173, 208, 210, 216, 283, 331, 337, 341, 343, 346, 347, 349, 350, 351, 354, 356, 357, 361, 363, 367, 368, 369, 370, 371, 372, 373, 382, 392, 404, 492, 500, 504, 514, 578, 596, 611, 614, 629, 630, 631, 633, 634, 637, 638, 639, 642, 652, 655, 656, 658, 659, 660, 661, 662, 663, 665, 666, 667, 669, 671, 672, 673, 675, 676, 678, 679, 695, 698, 699, 700, 701, 702, 703, 705, 706, 707, 709, 711, 712, 713, 715, 716, 718, 719, 726, 737, 740, 741, 743, 744, 745, 746, 747, 749, 750, 751, 753, 754, 755, 756, 759, 760, 761, 762, 764, 768, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "self_attn": 802, "self_loop": [161, 173, 331, 337, 343, 346, 347, 349, 350, 351, 354, 356, 361, 363, 367, 370, 372, 492, 772, 807], "sell": [327, 642, 726], "seller": 642, "semant": [5, 8, 130, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 670, 795, 802], "semi": [137, 143, 331, 341, 356, 602, 639, 658, 723, 743, 768, 789, 791, 798], "send": [52, 72, 90, 93, 99, 112, 356, 358, 671, 792, 798, 802], "send_and_recv": [0, 90, 802], "send_sourc": 99, "sens": 808, "sent": [356, 769, 770, 801, 802], "sentenc": [175, 795, 796, 798, 802, 803, 805], "sentiment": [175, 795, 798], "separ": [4, 139, 140, 283, 334, 631, 638, 639, 667, 671, 673, 758, 772, 776, 789], "septemb": 173, "sequenc": [53, 119, 129, 197, 275, 276, 293, 325, 329, 355, 375, 377, 598, 796, 798, 802, 805], "sequenti": [90, 91, 594, 761, 798], "seri": [647, 783, 784, 791], "serial": 395, "serv": [635, 660, 790], "server": [4, 20, 142, 170, 171, 172, 224, 629, 630, 635, 636, 637, 780], "server_nam": 640, "servic": [20, 155, 635, 636], "set": [0, 1, 4, 6, 9, 20, 22, 42, 43, 44, 45, 50, 67, 69, 71, 73, 76, 78, 81, 91, 100, 101, 102, 103, 104, 120, 128, 129, 130, 131, 135, 136, 137, 139, 140, 141, 143, 146, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 169, 173, 179, 180, 181, 184, 188, 197, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 216, 221, 228, 229, 232, 233, 234, 235, 276, 277, 281, 282, 283, 287, 294, 296, 299, 331, 335, 336, 337, 338, 339, 341, 343, 346, 347, 348, 349, 350, 351, 354, 356, 360, 361, 363, 365, 366, 371, 372, 373, 377, 378, 379, 390, 393, 397, 403, 420, 421, 422, 485, 492, 493, 494, 504, 507, 510, 513, 514, 580, 586, 588, 590, 591, 618, 619, 621, 623, 624, 625, 627, 633, 635, 636, 638, 639, 642, 646, 647, 655, 656, 657, 658, 660, 661, 663, 665, 666, 667, 669, 671, 672, 673, 718, 730, 731, 758, 759, 760, 763, 764, 768, 770, 772, 773, 784, 785, 790, 792, 795, 798, 801, 802, 807], "set_batch_num_edg": [26, 27, 101, 113, 114, 115, 116, 128, 234, 235, 277, 280, 286, 294, 421, 422, 485, 499, 502, 579, 588, 589, 671, 711, 754], "set_batch_num_nod": [26, 27, 100, 113, 114, 115, 116, 128, 234, 235, 277, 280, 286, 294, 421, 422, 485, 499, 502, 579, 588, 589, 671, 711, 754], "set_bodi": 21, "set_default_backend": 758, "set_devic": [807, 808], "set_dst_lazy_featur": 662, "set_e_initi": 798, "set_edge_lazy_featur": 662, "set_edgecolor": 760, "set_epoch": [203, 807], "set_grad_en": 802, "set_n_initi": [26, 27, 92, 112, 798], "set_postfix": [762, 784, 785, 808], "set_src_lazy_featur": 662, "set_titl": 801, "set_trans_dec": 378, "set_trans_enc": 379, "set_xlabel": 801, "settran": 379, "settransformerdecod": 379, "settransformerencod": 378, "setup": [4, 657, 776], "seven": 791, "sever": [629, 633, 640, 644, 656, 661, 666, 784, 790, 802, 803, 805], "sg": [234, 277, 281, 282, 367, 368, 421, 485, 508, 509, 510, 511, 588, 616, 653, 655, 662, 696, 698, 738, 740], "sg1": 769, "sg2": 769, "sgc": 363, "sgd": 636, "sh": [20, 758], "sha": [630, 676, 716], "sha1": [189, 190], "sha1_hash": [189, 190], "shall": [19, 626], "shallow": [63, 70, 209, 519, 520, 582, 583, 584], "shamelessli": 21, "shape": [4, 5, 6, 8, 11, 29, 46, 74, 94, 95, 116, 124, 126, 127, 135, 140, 143, 161, 164, 167, 175, 177, 182, 185, 209, 232, 233, 234, 235, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 281, 282, 283, 284, 287, 297, 298, 299, 325, 326, 328, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 420, 421, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 495, 496, 497, 498, 499, 500, 505, 507, 514, 515, 517, 518, 519, 520, 522, 525, 528, 530, 532, 534, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 578, 585, 586, 590, 591, 596, 599, 600, 603, 604, 607, 609, 613, 615, 618, 619, 621, 623, 624, 625, 626, 631, 633, 636, 638, 639, 644, 647, 659, 663, 670, 671, 672, 673, 678, 681, 687, 690, 712, 713, 718, 721, 723, 728, 731, 735, 744, 747, 755, 756, 758, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 791, 795, 802, 808], "shape\uc740": 754, "shaplei": [369, 370], "shapley_step": [369, 370], "shard": [4, 636, 721], "share": [4, 21, 25, 68, 115, 120, 128, 129, 235, 275, 276, 280, 283, 286, 297, 298, 327, 351, 371, 373, 401, 502, 510, 514, 519, 520, 579, 585, 588, 635, 638, 639, 640, 723, 758, 779, 790, 791, 792, 802, 808], "share_edata": [98, 502], "share_ndata": [98, 502], "share_weight": 350, "shared_memori": 4, "sharemem": [13, 283, 371, 373, 514], "sharp": 792, "sharper": 792, "shchur": [133, 134, 147, 148, 149], "shelf": 792, "shift": [187, 195, 334], "short": [330, 647, 652, 765, 770, 795], "shortest": [232, 395, 396, 515], "shortest_dist": [395, 396], "shot": [669, 753], "should": [4, 20, 41, 52, 53, 88, 90, 115, 123, 124, 126, 127, 128, 129, 171, 172, 175, 185, 186, 200, 204, 206, 209, 210, 212, 213, 214, 215, 230, 231, 237, 238, 275, 276, 280, 285, 286, 331, 332, 336, 337, 338, 339, 340, 341, 342, 352, 353, 359, 360, 363, 367, 368, 369, 370, 373, 391, 392, 395, 397, 401, 404, 493, 494, 501, 502, 503, 507, 508, 509, 510, 511, 512, 556, 557, 558, 559, 561, 562, 571, 579, 585, 586, 588, 598, 603, 604, 609, 613, 631, 636, 638, 639, 640, 646, 655, 657, 658, 659, 663, 666, 764, 768, 769, 770, 771, 773, 776, 779, 786, 790, 791, 798, 801, 807], "show": [4, 8, 13, 117, 118, 210, 229, 628, 629, 630, 631, 632, 633, 634, 635, 637, 638, 639, 640, 654, 656, 658, 659, 663, 671, 672, 673, 759, 762, 768, 771, 772, 779, 783, 784, 785, 789, 790, 791, 792, 793, 795, 798, 802, 803, 805], "shown": [633, 636, 646, 666, 779, 780, 801, 802], "shuffl": [4, 164, 177, 197, 199, 200, 203, 204, 205, 206, 209, 210, 221, 228, 229, 325, 329, 367, 370, 608, 632, 633, 635, 636, 639, 656, 657, 658, 659, 661, 671, 677, 678, 680, 681, 698, 699, 700, 701, 703, 711, 717, 718, 720, 721, 740, 741, 742, 743, 744, 746, 754, 761, 779, 780, 784, 785, 786, 795, 807, 808], "side": [21, 580, 640, 783], "sigma": [356, 358, 361, 362, 397, 666, 672, 706, 712, 750, 755, 759, 760, 762, 785, 789, 790, 792, 795, 802], "sigma_k": 354, "sigmoid": [764, 795, 798], "sign": [142, 578, 613, 614, 760], "sign_diffus": 760, "signal": [20, 167, 299, 760, 798], "signatur": [20, 52, 53, 792], "signdiffus": 12, "signific": [629, 657, 776, 792, 795], "significantli": [663, 783], "silent": [331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 367, 368, 369, 370, 666], "sim": [672, 712, 755, 771, 785], "similar": [4, 8, 25, 33, 52, 53, 99, 126, 127, 128, 157, 204, 211, 283, 325, 343, 371, 373, 398, 399, 400, 514, 580, 626, 632, 633, 635, 636, 637, 647, 655, 656, 659, 660, 661, 663, 672, 673, 690, 731, 758, 764, 765, 768, 772, 779, 780, 784, 785, 790, 791, 792, 798, 801, 802, 807], "similarli": [128, 211, 225, 229, 636, 638, 661, 669, 762, 798, 803, 805], "simpl": [20, 21, 47, 117, 118, 287, 351, 420, 579, 588, 589, 616, 628, 634, 637, 663, 760, 768, 772, 789, 791, 792, 793, 798, 801, 805], "simple_reduc": 99, "simplelosscomput": 802, "simplest": [661, 764], "simpli": [20, 21, 656, 659, 661, 669, 671, 673, 768, 770, 771, 772, 784, 789, 791, 792, 796, 798, 805], "simplic": [639, 661, 773, 792], "simplifi": [363, 660, 669, 760, 764, 789, 798, 802, 807], "simplifiedgat": 764, "simul": 791, "simultan": [539, 542, 543, 544, 546, 635, 760, 776, 795], "sin": 764, "sinc": [20, 26, 27, 55, 113, 114, 120, 142, 283, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 367, 368, 369, 370, 371, 373, 395, 396, 514, 519, 520, 580, 629, 633, 647, 650, 657, 659, 669, 671, 672, 759, 764, 771, 772, 773, 783, 784, 785, 786, 789, 791, 792, 795, 798, 808], "singl": [0, 4, 6, 21, 26, 27, 33, 34, 40, 42, 43, 45, 47, 50, 52, 54, 55, 56, 57, 59, 60, 72, 73, 76, 86, 87, 92, 93, 94, 95, 99, 100, 101, 102, 103, 126, 127, 129, 144, 160, 200, 201, 202, 204, 205, 206, 209, 210, 281, 282, 283, 285, 293, 297, 331, 354, 374, 375, 376, 377, 378, 379, 380, 381, 382, 401, 402, 423, 503, 507, 508, 509, 511, 583, 590, 591, 633, 635, 636, 639, 647, 650, 658, 660, 667, 668, 669, 671, 731, 743, 745, 765, 767, 768, 772, 773, 779, 780, 783, 784, 785, 786, 791, 792, 795, 802, 809, 810], "singular": [578, 614], "site": [175, 789, 792], "size": [4, 5, 8, 19, 20, 21, 30, 61, 62, 120, 126, 127, 133, 134, 135, 136, 143, 147, 148, 149, 155, 156, 157, 158, 159, 164, 167, 170, 173, 175, 182, 184, 186, 195, 200, 224, 325, 326, 328, 329, 330, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 496, 497, 554, 561, 572, 590, 591, 596, 615, 637, 639, 647, 651, 654, 671, 683, 694, 724, 731, 736, 754, 758, 764, 770, 784, 785, 786, 789, 790, 791, 792, 795, 796, 798, 802, 805, 807, 808], "skeleton": 798, "skip": [355, 633, 667, 718, 791, 792, 795], "sklearn": [325, 771, 779, 780, 784, 785, 808], "skm": 780, "sleeplessai": 691, "slice": [4, 25, 200, 644, 660, 784, 789, 792], "slightli": [204, 808], "sln": 758, "slope": [336, 347, 349, 350], "slow": [21, 658, 771, 791], "slower": [283, 371, 373, 514, 656, 802], "sm_53": [8, 650, 734], "small": [4, 9, 13, 69, 121, 122, 124, 163, 216, 219, 220, 238, 275, 283, 348, 367, 368, 371, 373, 504, 514, 592, 626, 635, 636, 639, 663, 668, 671, 768, 771, 772, 773, 776, 779, 783, 786, 791], "smaller": [4, 128, 330, 333, 557, 558, 559, 571, 603, 604, 609, 758, 790, 791], "smallest": [284, 339, 371, 394, 511, 590, 591, 606], "smax": [539, 764], "smean": [539, 764], "smin": [539, 764], "smooth": [351, 366, 802], "sn": 801, "snap": [142, 168, 173, 784, 808], "snippet": [643, 646, 647, 670, 791], "so": [4, 5, 7, 8, 20, 21, 123, 128, 137, 177, 187, 216, 219, 220, 221, 228, 237, 295, 337, 343, 486, 501, 504, 508, 510, 519, 520, 582, 583, 584, 586, 631, 633, 634, 636, 637, 639, 640, 655, 656, 659, 662, 669, 673, 762, 768, 769, 771, 772, 779, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 807, 808], "soc": 142, "social": [132, 163, 325, 642, 771], "socio": 162, "socket": 224, "soduku": 375, "softmax": [299, 331, 347, 358, 375, 377, 390, 393, 517, 518, 761, 770, 790, 792, 798, 801, 802], "softmax_edg": 518, "softmax_i": [343, 347, 349, 350], "softmax_nod": 517, "softwar": [757, 776], "solubl": 185, "solut": [21, 628, 657, 732, 779, 791], "solv": [375, 757, 790, 791, 796, 805], "some": [0, 4, 5, 8, 13, 20, 26, 27, 40, 42, 45, 47, 73, 92, 102, 112, 113, 114, 126, 127, 129, 132, 146, 164, 177, 225, 229, 235, 276, 295, 296, 327, 331, 337, 343, 346, 347, 349, 350, 351, 354, 356, 363, 498, 501, 586, 630, 631, 633, 637, 638, 639, 641, 643, 646, 647, 650, 651, 654, 661, 665, 672, 718, 758, 765, 769, 771, 779, 783, 792, 798, 801, 807, 808], "some_complex_data": 631, "someth": [668, 786], "sometim": [21, 640, 651, 656, 668, 669, 671, 770, 783], "somewhat": 656, "song": 691, "soon": 639, "sophist": 671, "sort": [38, 50, 51, 77, 121, 164, 177, 187, 195, 230, 330, 358, 361, 380, 501, 510, 519, 520, 522, 590, 591, 795, 802], "sort_csc_by_tag": 510, "sort_csr_by_tag": 510, "sortbi": [590, 591], "sorted_by_typ": 330, "sorted_feat": [590, 591], "sorted_idx": [590, 591], "sortpool": [590, 591], "sourc": [1, 4, 5, 6, 8, 9, 11, 20, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 69, 70, 71, 72, 74, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 420, 421, 422, 423, 428, 429, 430, 431, 432, 433, 434, 436, 438, 440, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 476, 478, 480, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 522, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 547, 548, 549, 550, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 620, 621, 622, 625, 626, 627, 631, 633, 638, 639, 641, 646, 647, 650, 659, 661, 665, 666, 718, 731, 740, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "source_typ": [647, 690, 731], "sourcetensor": 791, "sp": [643, 686, 727, 771, 791], "sp_": 764, "sp_add_v": 764, "sp_broadcast_v": [566, 568, 569, 570], "sp_mat": [124, 238], "space": [8, 397, 647, 790, 798, 802], "spaci": 155, "spam": 159, "span": 4, "spars": [4, 8, 9, 12, 30, 31, 40, 55, 61, 62, 88, 124, 129, 237, 238, 275, 276, 325, 329, 336, 367, 368, 401, 446, 503, 636, 643, 657, 686, 721, 727, 757, 760, 762, 771, 789, 793, 802, 805, 808], "sparse2th": 791, "sparse_coo": [30, 61, 62], "sparse_coo_tensor": 791, "sparse_emb": 401, "sparse_matrix": 561, "sparse_optim": [636, 681, 721], "sparseadagrad": [4, 9, 401, 636, 681, 721], "sparseadam": [4, 9, 325, 329, 401], "sparseattn": 761, "sparsefloat": 791, "sparsematrix": [11, 29, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 759, 764], "sparsemha": 761, "sparser": 802, "sparsetensor": [30, 61, 62, 791], "sparsif": [603, 604, 609], "sparsiti": [603, 604, 609, 761, 764], "spatial": [171, 172, 396, 397], "spatial_encod": [396, 397], "spawn": [200, 657, 807], "speak": 791, "special": [175, 339, 642, 647, 661, 663, 764, 791, 795], "specif": [13, 20, 41, 58, 107, 123, 124, 129, 161, 224, 231, 234, 235, 237, 238, 275, 276, 277, 280, 281, 282, 326, 329, 368, 400, 421, 422, 485, 493, 494, 504, 508, 509, 510, 511, 580, 603, 604, 609, 613, 633, 635, 640, 644, 647, 658, 731, 741, 757, 776, 784, 785, 791, 807, 808], "specifi": [4, 5, 6, 26, 27, 30, 33, 34, 35, 36, 46, 47, 50, 51, 52, 53, 54, 55, 56, 59, 60, 64, 67, 71, 74, 76, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 106, 107, 112, 116, 120, 123, 129, 137, 144, 152, 155, 157, 158, 159, 186, 190, 204, 206, 207, 209, 219, 220, 229, 234, 237, 275, 276, 281, 282, 283, 327, 330, 339, 343, 344, 347, 348, 349, 350, 359, 360, 362, 372, 397, 421, 486, 492, 498, 499, 501, 507, 512, 514, 519, 520, 555, 557, 558, 559, 571, 580, 585, 586, 588, 629, 631, 633, 636, 637, 639, 640, 646, 647, 650, 652, 656, 661, 662, 666, 669, 672, 690, 715, 731, 737, 750, 758, 762, 764, 769, 779, 785, 795], "spectral": [335, 340], "speed": [9, 20, 21, 586, 646, 651, 657, 671, 757, 765, 771, 795, 798, 801], "speedup": [639, 792], "sphinx": [20, 768, 769, 770, 771, 772, 773, 774, 776, 777, 779, 780, 781, 783, 784, 785, 786, 787, 789, 790, 791, 792, 795, 798, 801, 802, 805, 807, 808, 809], "sphinx_gallery_thumbnail_path": [768, 769, 770, 771, 772, 773, 783, 784, 785, 786, 807, 808], "sphinx_rtd_them": 20, "spilt": 182, "splash": 795, "split": [12, 130, 131, 132, 135, 136, 137, 141, 145, 146, 150, 151, 153, 154, 156, 157, 158, 159, 164, 165, 169, 173, 176, 177, 178, 181, 182, 183, 184, 187, 188, 195, 197, 199, 200, 203, 221, 228, 229, 360, 486, 506, 585, 626, 629, 632, 633, 635, 637, 651, 652, 665, 666, 669, 673, 678, 715, 717, 718, 753, 771, 779, 784, 791, 807], "split_dataset": 807, "split_edg": [632, 677, 717], "split_idx": [632, 677, 717], "split_mask": 195, "split_ratio": [135, 136, 137], "splitted_idx": 779, "split\ub97c": 721, "spmat": [643, 686, 727], "spmatrix": [11, 30, 124, 238, 522, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 552, 553, 554, 556, 557, 561, 562, 563, 564, 565, 567, 572, 573, 574, 575, 759, 760, 761, 762, 764], "spmm": [424, 425, 426, 427, 429, 430, 431, 432, 450, 451, 452, 453, 456, 457, 458, 459, 464, 465, 466, 467, 470, 471, 472, 473, 561], "spmv": 792, "spp": 334, "spring_layout": [760, 791], "sprod": 539, "spspmm": 561, "sq": 801, "sqrt": [4, 9, 283, 348, 356, 358, 371, 373, 390, 397, 514, 761, 792, 801, 802], "squar": [4, 9, 238, 348, 356, 762], "squash": 801, "squeez": [52, 53, 631, 633, 678, 718, 771, 785, 790, 791], "squirrel": 176, "squre": 365, "src": [5, 21, 33, 61, 62, 67, 97, 99, 109, 210, 232, 240, 299, 334, 343, 344, 347, 349, 350, 354, 356, 362, 398, 399, 400, 501, 504, 557, 580, 581, 585, 620, 633, 643, 650, 651, 656, 659, 663, 666, 667, 669, 672, 678, 686, 693, 694, 698, 699, 701, 706, 707, 709, 712, 718, 727, 734, 736, 740, 741, 744, 747, 750, 751, 753, 755, 761, 770, 771, 773, 790, 791, 792, 795, 798, 802], "src_dot_dst": 802, "src_emb": [798, 802], "src_embed_expand": 798, "src_field": 802, "src_id": [58, 124, 238, 275, 631, 638, 723], "src_id_field": 631, "src_input": [667, 707, 751], "src_label": 791, "src_list": 798, "src_mul_egd": 802, "src_node": [580, 740], "src_node_id": 638, "src_po": 802, "src_seq": 802, "src_type": [129, 276, 368, 369, 666, 706, 750], "srcdata": [4, 8, 67, 103, 198, 211, 215, 520, 580, 635, 636, 637, 651, 655, 656, 659, 660, 661, 662, 666, 680, 681, 694, 698, 699, 701, 702, 703, 706, 720, 721, 722, 736, 740, 741, 744, 745, 746, 750, 780, 784, 785, 786, 808], "srcdst": 50, "srcnode": [67, 102, 198, 215, 580, 660, 698, 702, 740, 745], "srctype": [25, 44, 67, 216, 217, 652, 695, 737], "srl": 790, "ssh": [640, 724], "ssl": 190, "ssp": 334, "sst": 795, "sstbatch": 795, "sstdata": [633, 678, 718], "sstdataset": 795, "stabil": [4, 9, 792, 798, 802], "stabl": 339, "stack": [19, 72, 283, 327, 351, 391, 404, 534, 620, 632, 652, 673, 677, 695, 717, 737, 759, 760, 761, 762, 768, 770, 790, 791, 792], "staff": [151, 178, 183], "stage": [651, 760, 780, 802], "stai": [526, 527, 640, 663], "stand": [347, 506, 764, 807], "standalon": [4, 765], "standard": [5, 20, 135, 137, 339, 360, 397, 628, 629, 631, 633, 790, 795], "stanford": [142, 168, 173, 175, 768, 784, 795, 808], "star": [157, 159, 166, 769], "start": [6, 31, 113, 114, 123, 129, 160, 219, 220, 229, 237, 275, 276, 281, 282, 329, 495, 503, 505, 507, 519, 520, 631, 636, 637, 638, 641, 646, 647, 654, 658, 663, 671, 758, 759, 760, 761, 762, 766, 769, 776, 779, 780, 786, 790, 791, 795, 798, 801, 807], "start_epoch": [200, 203], "start_idx": 6, "start_tim": 160, "state": [4, 9, 20, 139, 140, 162, 179, 180, 638, 654, 739, 765, 795, 798, 799, 801, 802, 805], "state_dict": [4, 784, 785, 798, 808], "statement": [660, 669, 764, 784, 786], "static": [21, 792, 801], "static_cast": 21, "staticmethod": [21, 801], "statist": [130, 131, 132, 133, 134, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 162, 163, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 181, 182, 183, 184, 185, 638, 790, 791, 792], "statu": 55, "std": [21, 339, 360, 801], "steadili": [799, 805], "step": [4, 8, 9, 20, 91, 138, 139, 140, 152, 179, 180, 204, 229, 325, 329, 355, 365, 366, 367, 368, 369, 370, 371, 372, 401, 403, 446, 450, 451, 452, 453, 456, 457, 458, 459, 464, 465, 466, 467, 470, 471, 472, 473, 495, 501, 507, 508, 610, 635, 636, 637, 638, 649, 650, 654, 656, 659, 661, 663, 665, 669, 671, 672, 673, 680, 681, 698, 699, 701, 703, 709, 711, 712, 713, 720, 721, 740, 741, 744, 746, 747, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 764, 768, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 798, 802, 807, 808], "step_count": 798, "step_forward": 802, "step_siz": 761, "steplr": 761, "steven": 795, "still": [21, 69, 92, 107, 112, 221, 228, 631, 633, 656, 658, 659, 661, 662, 663, 669, 671, 772, 802], "stochast": [3, 10, 174, 580, 648, 653, 656, 661, 666, 668, 671, 732, 738, 740, 741, 746, 750, 752, 754, 757, 767, 780, 783, 784, 788, 798], "stochastical\ud558\uac8c": 739, "stochastictwolayergcn": [656, 658, 659, 661, 699, 700, 701, 703, 741, 743, 744, 746], "stochastictwolayerrgcn": [656, 659, 661, 698, 699, 701, 703, 740, 741, 744, 746], "stop": [182, 505, 507, 669, 798], "stopping_mask": 182, "stopping\uc774\ub098": 753, "storag": [1, 4, 20, 115, 129, 201, 202, 275, 276, 286, 501, 502, 631, 640, 646, 647, 661, 765, 779], "store": [0, 1, 4, 9, 30, 33, 52, 53, 58, 91, 94, 95, 99, 100, 101, 123, 124, 129, 132, 135, 137, 138, 139, 140, 145, 151, 152, 155, 157, 158, 159, 161, 164, 175, 176, 177, 178, 179, 180, 183, 190, 193, 194, 195, 196, 199, 210, 221, 223, 228, 229, 230, 231, 234, 237, 238, 275, 276, 277, 281, 282, 283, 288, 295, 299, 327, 330, 335, 371, 373, 401, 421, 448, 485, 486, 493, 494, 498, 499, 501, 503, 505, 507, 508, 509, 510, 511, 512, 514, 516, 519, 520, 557, 558, 559, 580, 585, 586, 588, 602, 603, 604, 606, 609, 610, 613, 614, 629, 630, 631, 633, 635, 636, 637, 638, 639, 643, 644, 646, 647, 650, 654, 661, 670, 673, 715, 716, 722, 723, 734, 764, 768, 769, 773, 779, 780, 784, 785, 789, 795, 798, 802], "store_id": [48, 94, 95, 97, 105, 234, 277, 281, 282, 421, 485, 498, 499, 501, 516], "store_typ": 586, "stori": 765, "str": [4, 19, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 38, 42, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 72, 73, 74, 77, 78, 79, 80, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 104, 106, 108, 112, 113, 114, 116, 117, 118, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 221, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 281, 282, 283, 288, 294, 295, 296, 299, 327, 329, 330, 337, 338, 339, 341, 348, 352, 354, 356, 359, 360, 361, 362, 365, 368, 369, 371, 372, 373, 379, 390, 391, 393, 394, 398, 401, 402, 403, 421, 422, 423, 445, 446, 448, 485, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 507, 508, 509, 510, 511, 512, 514, 517, 518, 519, 520, 539, 567, 580, 585, 586, 587, 588, 590, 591, 594, 596, 601, 602, 603, 604, 606, 609, 610, 612, 613, 614, 616, 626, 629, 662, 667, 675, 707, 715, 751, 808], "straight": 651, "straightforward": [790, 791], "strategi": [187, 221, 228, 353, 369, 370, 505, 654, 773, 779, 791], "stream": 200, "strength": [351, 642, 670], "strict": 639, "string": [4, 21, 22, 25, 38, 51, 108, 119, 120, 129, 174, 213, 276, 326, 327, 328, 329, 630, 631, 639, 647, 650, 652, 671, 754, 769], "strong": [287, 420], "strongli": 20, "structur": [0, 4, 12, 18, 20, 21, 55, 58, 66, 88, 100, 101, 107, 111, 123, 124, 129, 130, 138, 139, 140, 143, 146, 150, 155, 157, 158, 159, 163, 165, 167, 168, 169, 173, 175, 187, 195, 200, 223, 225, 229, 236, 237, 238, 275, 276, 367, 368, 390, 493, 494, 495, 502, 512, 580, 604, 610, 635, 638, 639, 641, 642, 643, 645, 646, 671, 723, 761, 764, 779, 790, 792, 793, 795, 796, 798, 799, 803, 805], "strutur": [88, 111, 639], "stub": 20, "student": [151, 178, 183], "studi": [147, 148, 158, 757], "studio": 758, "style": [8, 791, 792], "stype": [327, 667, 707, 751], "sub": [8, 141, 249, 250, 263, 264, 273, 274, 327, 404, 442, 443, 445, 446, 469, 470, 471, 472, 473, 474, 483, 484, 567, 650, 661, 693, 734, 764], "sub_g": [234, 235, 277, 421, 422, 485, 647, 690, 731], "subbackward0": 334, "subclass": [3, 208, 367, 368, 369, 370, 628, 629, 633, 655, 657], "subg": [199, 207, 655, 662, 723], "subgraph": [1, 3, 12, 25, 132, 198, 199, 200, 204, 206, 207, 208, 209, 210, 211, 223, 230, 231, 232, 234, 235, 277, 281, 282, 295, 367, 368, 369, 370, 421, 422, 485, 486, 508, 509, 510, 511, 635, 637, 653, 655, 656, 657, 658, 662, 666, 667, 696, 698, 738, 740, 750, 769, 771, 792, 798, 802], "subgraphsampl": 208, "subgraphx": 369, "subject": [6, 790], "sublay": [378, 379, 802], "sublist": 55, "submatrix": 283, "submodul": [4, 327, 665, 758, 770, 786], "subnet": 779, "suboptim": [639, 723], "subpackag": [5, 792], "subplot": [760, 798, 801], "subprocess": 808, "subreddit": 173, "subsect": 661, "subsequ": [638, 639], "subset": [4, 13, 44, 78, 81, 104, 128, 151, 153, 154, 171, 172, 178, 183, 185, 187, 195, 197, 207, 221, 228, 235, 326, 367, 368, 422, 636, 639, 644, 772, 783, 798, 807], "subsetrandomsampl": 772, "subspac": 761, "substanc": 760, "substitut": 792, "substract": [570, 764], "subtract": [574, 612], "subtract_min": 612, "subtre": 795, "succe": [4, 636], "success": 761, "successor": [89, 93, 282, 294, 798], "sudo": [758, 779], "suffici": 779, "suffix": [125, 630, 716], "sugar": [289, 290, 291, 292, 576, 577, 795], "suggest": [20, 22, 650, 651, 655, 769, 776, 792], "suitabl": [283, 371, 373, 514, 634, 638, 639, 654], "sum": [4, 5, 8, 9, 19, 21, 72, 78, 81, 90, 91, 92, 93, 99, 112, 116, 117, 118, 120, 135, 136, 137, 187, 188, 195, 230, 231, 327, 338, 339, 347, 352, 354, 359, 360, 364, 367, 368, 369, 373, 381, 382, 392, 401, 404, 427, 432, 446, 448, 453, 459, 467, 473, 496, 497, 505, 507, 508, 514, 539, 576, 577, 588, 596, 612, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 636, 637, 650, 652, 660, 663, 665, 666, 667, 670, 671, 673, 693, 695, 702, 705, 706, 707, 710, 711, 713, 721, 734, 735, 737, 745, 747, 749, 750, 751, 754, 756, 759, 760, 762, 764, 768, 770, 772, 783, 785, 789, 790, 791, 792, 795, 798, 801, 802, 807], "sum_": [120, 283, 287, 299, 330, 333, 334, 335, 339, 343, 345, 348, 349, 350, 351, 353, 354, 355, 356, 357, 358, 361, 364, 371, 373, 374, 375, 377, 381, 402, 405, 420, 514, 517, 518, 650, 671, 672, 693, 711, 712, 734, 754, 755, 762, 764, 770, 771, 783, 785, 790, 792, 795, 798, 802], "sum_edg": 126, "sum_i": [612, 801], "sum_nod": 127, "sum_p": 802, "summar": [20, 671, 792, 798], "summat": [118, 126, 127, 327, 447, 448, 496, 522, 588, 671, 754, 770, 783, 791], "sumpool": [761, 807], "super": [208, 357, 367, 368, 369, 370, 404, 629, 633, 655, 656, 658, 659, 660, 661, 662, 663, 665, 667, 669, 671, 672, 673, 675, 678, 698, 699, 700, 701, 702, 703, 705, 707, 709, 711, 712, 713, 715, 718, 740, 741, 743, 744, 745, 746, 747, 749, 751, 753, 754, 755, 756, 759, 760, 761, 762, 764, 768, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "superscript": 789, "superset": 580, "supervis": [137, 143, 174, 331, 341, 356, 602, 639, 658, 723, 743, 768, 789, 798], "supplementari": 344, "suppli": [656, 659, 784], "support": [4, 5, 9, 12, 21, 109, 116, 120, 124, 135, 136, 200, 223, 229, 238, 286, 288, 295, 296, 299, 330, 342, 348, 401, 403, 404, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 501, 503, 505, 507, 508, 509, 510, 512, 515, 522, 561, 581, 587, 596, 615, 626, 631, 635, 636, 637, 638, 639, 643, 646, 650, 656, 659, 661, 662, 663, 665, 670, 671, 705, 749, 757, 758, 759, 760, 761, 762, 764, 768, 770, 773, 776, 784, 786, 802], "suppos": [20, 447, 670, 735, 783, 786, 789, 802], "suppress": [331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 773], "sure": [6, 20, 21, 219, 220, 352, 362, 374, 376, 380, 381, 390, 393, 510, 630, 638, 716, 761, 798], "surpass": 20, "svd": [578, 614], "svd_pe": 614, "svdpe": 12, "switch": [758, 760, 784, 785, 786], "sym": 403, "sym_new_etyp": 595, "symbol": [5, 631, 802], "symmetr": [174, 285, 356, 403, 602, 613, 642, 669, 753, 759, 764, 791], "sync": 779, "synchron": [4, 636, 721, 798, 807], "synset": 181, "syntact": [795, 796, 805], "syntax": [289, 290, 291, 292, 576, 577, 647, 669, 731, 784, 795], "synthet": [13, 138, 139, 140, 166, 179, 180, 631, 668, 669, 753, 772, 773], "syntheticdataset": 773, "system": [4, 21, 162, 401, 503, 642, 762, 771, 776, 779], "systemctl": 779, "t": [4, 9, 20, 55, 59, 86, 88, 117, 118, 129, 159, 160, 164, 190, 204, 230, 231, 232, 276, 294, 330, 333, 343, 347, 349, 350, 354, 355, 358, 361, 365, 366, 368, 369, 377, 390, 398, 399, 400, 402, 403, 503, 505, 507, 508, 580, 586, 598, 604, 613, 638, 639, 643, 649, 658, 663, 692, 733, 761, 762, 764, 779, 785, 791, 792, 798, 802], "t0": [637, 722, 789, 792], "t1": [637, 722], "t_i": 802, "t_j": 802, "tabl": [171, 172, 325, 326, 329, 639, 765, 773, 792], "tabular": [639, 643], "tackl": [369, 370, 791], "tag": [20, 510, 519, 520], "tag_offset": [519, 520], "tag_offset_nam": [510, 519, 520], "tag_pos_nam": [519, 520], "tag_typ": [519, 520], "tail": [399, 400], "take": [19, 50, 117, 118, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 199, 200, 204, 205, 206, 209, 210, 230, 231, 275, 285, 343, 344, 347, 349, 350, 357, 359, 360, 362, 367, 368, 369, 370, 504, 508, 509, 510, 511, 539, 545, 565, 567, 616, 631, 633, 636, 639, 646, 647, 650, 652, 654, 655, 656, 657, 659, 661, 664, 666, 667, 668, 669, 670, 671, 673, 758, 760, 762, 770, 771, 773, 783, 784, 785, 790, 791, 792, 795, 798, 802, 807, 808], "taken": [157, 159, 791], "talk": 772, "tanh": [764, 795], "tar": [630, 676, 716], "target": [107, 130, 131, 141, 165, 170, 171, 172, 191, 232, 350, 358, 369, 370, 548, 639, 802], "target_class": [369, 370], "target_dir": 191, "target_idx": 790, "target_ntyp": 137, "task": [2, 20, 120, 130, 131, 133, 134, 135, 136, 137, 141, 143, 146, 147, 148, 149, 150, 155, 156, 157, 159, 165, 167, 169, 170, 171, 172, 184, 185, 187, 188, 632, 633, 636, 639, 668, 669, 671, 672, 673, 718, 757, 761, 762, 765, 768, 772, 779, 780, 785, 792, 798, 807], "task_lint": 20, "task_unit_test": 20, "tau": [358, 365, 366], "tb": 330, "tcp": [807, 808], "tcpstore": 401, "teach": [771, 786], "teacher": 798, "team": [20, 802, 807], "techniqu": [329, 669, 795, 802], "technologi": 776, "teleport": 332, "tell": [5, 20, 128, 200, 203, 229, 631, 661, 662, 769, 770, 772], "templat": [20, 152, 629, 715], "tempor": [24, 142, 160, 162, 204], "temporari": 24, "ten": 155, "tend": 652, "tensor": [0, 1, 5, 6, 8, 11, 12, 19, 20, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 135, 136, 137, 155, 161, 164, 166, 168, 170, 171, 172, 175, 177, 185, 200, 203, 210, 211, 216, 217, 219, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 293, 294, 295, 296, 297, 298, 299, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 488, 490, 492, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 530, 532, 533, 534, 535, 536, 537, 539, 540, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 594, 595, 596, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 633, 637, 639, 643, 644, 645, 646, 647, 650, 655, 656, 657, 659, 660, 662, 663, 664, 666, 667, 670, 671, 673, 678, 681, 687, 688, 689, 690, 711, 718, 728, 729, 730, 731, 735, 745, 747, 754, 758, 760, 761, 762, 764, 765, 768, 769, 770, 772, 773, 779, 784, 785, 786, 790, 792, 793, 795, 798, 802, 805, 807], "tensor_new": 791, "tensor_numpi": 773, "tensorcor": 663, "tensorcore\ub4e4\uc744": 747, "tensorflow": [8, 12, 20, 22, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 633, 646, 660, 664, 671, 673, 745, 748, 754, 757, 765], "tensorflow\u7684keras\u5c42": 704, "tensorflow\u7684tensor\u7c7b\u6216mxnet\u7684ndarray\u7c7b": 689, "tensorflow\uc5d0\uc11c\ub294": 718, "tensorflow\uc5d0\uc11c\ub3c4": 756, "tensorflow\uc758": 730, "tensorpip": [224, 640], "term": [4, 9, 13, 141, 145, 176, 325, 328, 336, 344, 347, 348, 349, 356, 366, 757, 791, 795, 798, 801], "termin": [503, 507], "termination_prob": 503, "tesla": 13, "test": [4, 8, 24, 130, 131, 132, 135, 136, 137, 141, 143, 145, 146, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 173, 175, 176, 178, 181, 182, 183, 184, 185, 187, 188, 195, 197, 229, 632, 636, 639, 669, 673, 677, 681, 682, 717, 721, 723, 753, 758, 759, 760, 761, 762, 764, 768, 770, 772, 773, 779, 780, 784, 785, 789, 792, 802, 807, 808], "test_acc": [759, 760, 762, 768, 770, 785, 807], "test_data": [160, 162, 175], "test_dataload": [761, 772], "test_edg": [136, 780], "test_edge_mask": [153, 154, 181], "test_idx": [135, 137, 761, 790], "test_label": [632, 677, 717, 780, 785], "test_load": [632, 677, 717, 807], "test_mask": [24, 130, 131, 137, 141, 145, 146, 150, 151, 153, 154, 155, 156, 157, 158, 159, 165, 169, 173, 176, 178, 181, 182, 183, 184, 188, 325, 631, 633, 673, 678, 713, 718, 756, 759, 760, 762, 768, 770, 773, 779, 789, 790], "test_metr": 761, "test_neg_dst": [780, 785], "test_neg_g": 771, "test_neg_src": [780, 785], "test_neg_u": 771, "test_neg_v": 771, "test_nid": [779, 784, 785, 808], "test_pos_dst": [780, 785], "test_pos_g": 771, "test_pos_src": [780, 785], "test_pos_u": 771, "test_pos_v": 771, "test_pr": [780, 785], "test_sampl": 772, "test_set": 807, "test_siz": [761, 771], "texa": 178, "text": [157, 334, 351, 356, 358, 365, 390, 639, 649, 668, 692, 733, 761, 770, 790, 792, 798, 801], "textbf": [798, 801], "textrm": [171, 172, 795, 802], "textur": 801, "tf": [4, 157, 765], "tf_force_gpu_allow_growth": 758, "tf_geometr": 765, "tgt": 802, "tgt_emb": 802, "tgt_po": 802, "tgt_seq": 802, "tgt_y": 802, "tgz": [630, 633, 678, 716, 718], "tgz\u6587\u4ef6": 676, "th": [4, 5, 8, 9, 26, 33, 35, 36, 47, 52, 54, 59, 86, 99, 113, 115, 120, 126, 127, 135, 143, 153, 154, 161, 164, 166, 167, 168, 177, 181, 204, 206, 209, 210, 234, 283, 285, 299, 327, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 421, 448, 492, 496, 497, 502, 506, 507, 512, 517, 518, 579, 586, 588, 590, 591, 615, 625, 626, 635, 636, 637, 638, 639, 643, 644, 645, 646, 647, 654, 671, 680, 681, 686, 687, 688, 689, 690, 720, 721, 722, 723, 727, 728, 729, 730, 731, 754, 761, 762, 764, 773, 779, 780, 783, 789, 790, 791, 795, 801, 802], "than": [4, 20, 26, 27, 65, 94, 95, 117, 118, 119, 129, 136, 139, 140, 157, 164, 171, 179, 180, 216, 275, 276, 283, 330, 333, 371, 373, 395, 405, 504, 508, 509, 510, 514, 557, 558, 559, 571, 603, 604, 609, 646, 647, 651, 657, 667, 669, 672, 690, 731, 758, 762, 765, 776, 779, 786, 790, 791, 792, 795, 798], "thei": [1, 4, 8, 10, 19, 20, 25, 55, 116, 118, 120, 128, 129, 135, 137, 147, 148, 223, 230, 231, 276, 293, 294, 333, 404, 502, 505, 507, 508, 628, 629, 635, 636, 637, 639, 644, 645, 647, 650, 656, 660, 661, 663, 666, 667, 668, 670, 761, 765, 768, 770, 772, 779, 784, 785, 791, 792, 795, 798, 801], "them": [1, 4, 5, 8, 40, 47, 55, 67, 72, 92, 99, 112, 128, 131, 139, 141, 144, 145, 151, 171, 176, 178, 183, 195, 211, 234, 237, 277, 281, 282, 283, 333, 367, 368, 369, 370, 375, 391, 398, 421, 485, 500, 510, 512, 556, 562, 580, 588, 594, 631, 635, 636, 637, 639, 642, 643, 647, 649, 656, 657, 662, 669, 671, 757, 764, 768, 769, 771, 779, 783, 785, 786, 791, 795, 796, 798, 802, 805, 807], "themselv": [20, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 656, 771, 783], "theori": 791, "ther": 366, "therefor": [4, 25, 210, 586, 636, 637, 656, 657, 762, 771, 780, 790, 791, 792, 795], "theta": [346, 347, 352, 353, 359, 363, 364, 760, 791], "theta_": [760, 791], "theta_0": 760, "theta_i": 791, "theta_k": 603, "theta_r": 760, "theta_x": 791, "thew": 25, "thi": [4, 5, 6, 7, 9, 13, 20, 21, 23, 25, 26, 27, 33, 39, 40, 43, 44, 47, 50, 51, 58, 69, 72, 78, 81, 88, 92, 93, 94, 95, 99, 100, 101, 103, 104, 108, 111, 112, 113, 114, 115, 116, 117, 118, 120, 128, 129, 137, 138, 139, 140, 142, 144, 152, 153, 154, 155, 156, 158, 160, 161, 162, 166, 168, 170, 171, 172, 173, 174, 179, 180, 181, 184, 187, 199, 200, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 221, 224, 228, 229, 230, 231, 232, 234, 235, 275, 276, 277, 280, 281, 282, 283, 284, 286, 294, 295, 296, 299, 327, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 360, 363, 364, 367, 368, 369, 370, 371, 373, 375, 377, 391, 394, 395, 396, 397, 401, 402, 404, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 495, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 511, 514, 519, 520, 526, 527, 550, 557, 558, 559, 561, 567, 571, 578, 579, 580, 582, 583, 584, 585, 586, 588, 589, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 623, 624, 625, 626, 628, 629, 632, 633, 634, 635, 636, 637, 638, 639, 640, 643, 646, 647, 649, 650, 651, 653, 654, 655, 658, 659, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 671, 672, 673, 718, 723, 743, 756, 758, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 793, 795, 796, 798, 799, 801, 802, 803, 805, 807, 808], "thing": [200, 216, 504, 634, 656, 785, 795], "third": [129, 200, 204, 205, 206, 209, 210, 275, 276, 506, 655, 785, 786], "thoma": 766, "thorough": 580, "thoroughli": [791, 792], "those": [26, 27, 113, 115, 199, 210, 232, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 371, 373, 650, 651, 654, 665, 769, 783, 786, 792, 795, 798, 802], "though": [20, 21, 230, 231, 508, 643, 791, 808], "thought": [798, 802], "thousand": [784, 785], "thre": 802, "thread": [20, 200, 224, 776, 779], "three": [13, 47, 61, 62, 79, 124, 129, 157, 159, 188, 207, 220, 229, 238, 275, 276, 327, 403, 514, 586, 631, 633, 635, 636, 638, 639, 650, 658, 659, 661, 666, 770, 771, 773, 784, 790, 791, 795, 798, 802], "threshold": [366, 369, 370, 603, 604, 609], "through": [21, 225, 636, 671, 757, 772, 779, 780, 790], "throughout": [646, 798], "throughput": 635, "throw": 626, "thrown": [796, 805], "thu": [4, 8, 13, 21, 69, 120, 188, 234, 277, 281, 282, 337, 363, 405, 421, 485, 496, 497, 631, 636, 637, 639, 643, 645, 663, 760, 789, 790, 791, 792, 795, 798, 801, 802, 807], "thumb": 20, "thumbnail": [768, 769, 770, 771, 772, 773, 783, 784, 785, 786, 807, 808], "ti": 50, "tid": 637, "tild": [332, 335, 351, 358, 363, 364, 403, 760, 789, 791], "tile": 801, "time": [6, 112, 117, 160, 162, 190, 204, 281, 282, 330, 356, 357, 371, 394, 504, 507, 508, 604, 613, 629, 634, 636, 639, 640, 651, 658, 661, 663, 671, 694, 736, 760, 761, 762, 764, 765, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "time_enc": 802, "tini": [128, 175, 795], "tiny_data": 175, "tiny_sst": 795, "tip": [200, 654], "tissu": 792, "titl": [643, 686, 727], "tmp": [639, 682, 723], "to_add_edg": 798, "to_bfloat16": 663, "to_bidirect": [6, 115, 646, 689, 730], "to_block": [4, 129, 636, 637, 655, 657, 662, 681, 698, 721, 722, 740, 742], "to_dens": [760, 762, 764], "to_direct": [236, 237], "to_heterogen": 586, "to_homogen": [358, 361, 585, 647, 690, 731, 790], "to_homogenen": 25, "to_jshtml": 760, "to_loc": 4, "to_networkx": [760, 791, 795, 801], "to_numpi": [631, 773], "to_partid": 4, "to_simpl": [117, 118, 177, 589], "to_undirect": 760, "tocoo": [124, 238], "todens": 771, "togeth": [10, 25, 90, 91, 100, 101, 128, 133, 134, 204, 206, 229, 284, 293, 364, 365, 366, 374, 376, 380, 381, 501, 639, 640, 647, 671, 762, 786, 791, 807, 808], "toi": [168, 802], "token": [795, 802, 803, 805], "tolevi": 12, "tolist": [506, 760, 795], "tone": 160, "too": [4, 21, 59, 86, 229, 639, 645, 657, 729, 764, 783, 802], "tool": [635, 636, 639, 683, 723, 724, 758, 764, 765, 768, 779, 784], "toolbox": 344, "top": [139, 140, 157, 358, 380, 590, 591, 636, 639, 757, 761, 762, 764, 771, 779, 785, 790], "topic": [276, 638, 654, 791], "topk": [283, 371, 373, 514, 590, 591], "topolog": [491, 592, 795], "topologi": [12, 333, 364, 670, 795, 796, 798, 805], "topological_nodes_gener": [491, 795], "torch": [4, 5, 6, 7, 8, 9, 11, 19, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 116, 117, 118, 119, 120, 123, 124, 126, 127, 129, 135, 143, 161, 164, 166, 167, 174, 175, 177, 185, 199, 200, 203, 204, 206, 207, 209, 210, 216, 217, 233, 234, 235, 237, 238, 251, 252, 253, 254, 275, 276, 277, 281, 282, 283, 287, 293, 297, 298, 299, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 420, 421, 422, 448, 485, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 579, 580, 581, 585, 586, 587, 588, 590, 591, 595, 596, 599, 600, 601, 602, 603, 604, 607, 608, 609, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 631, 632, 633, 635, 636, 638, 639, 643, 644, 645, 646, 647, 650, 651, 655, 656, 657, 658, 659, 660, 661, 663, 665, 666, 667, 668, 669, 671, 672, 673, 677, 678, 680, 681, 686, 687, 688, 689, 690, 693, 694, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 711, 712, 713, 717, 718, 720, 721, 727, 728, 729, 730, 731, 734, 736, 740, 741, 742, 743, 744, 745, 746, 747, 749, 750, 751, 752, 753, 754, 755, 756, 759, 760, 761, 762, 764, 768, 769, 770, 771, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "torchaudio": 764, "torchmetr": 762, "torchvis": 764, "tosimpl": [12, 598], "total": [4, 9, 79, 80, 173, 325, 330, 357, 373, 382, 633, 637, 638, 767, 768, 769, 770, 771, 772, 773, 775, 776, 778, 779, 780, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 794, 795, 797, 798, 800, 801, 802, 804, 806, 807, 808, 810], "total_correct": 807, "total_loss": [761, 807], "total_node_weight": 638, "touch": 20, "toward": 599, "tower": [339, 360], "tp_": 792, "tq": [762, 784, 785, 786, 808], "tqdm": [761, 762, 784, 785, 786, 802, 808], "tr": 795, "trace": [505, 506, 507], "track": 795, "trade": [142, 369, 370, 802], "traffic": [145, 176], "train": [3, 4, 8, 9, 10, 22, 24, 88, 130, 131, 132, 135, 136, 137, 141, 143, 145, 146, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 187, 188, 195, 197, 199, 200, 203, 204, 205, 206, 209, 210, 221, 228, 229, 329, 339, 353, 357, 360, 363, 367, 368, 369, 370, 401, 578, 580, 614, 632, 633, 636, 637, 638, 639, 648, 650, 653, 655, 657, 658, 662, 666, 677, 680, 708, 711, 713, 717, 718, 720, 723, 734, 740, 741, 746, 747, 752, 753, 754, 756, 757, 758, 765, 767, 773, 774, 775, 776, 788, 789, 792, 795, 796, 798, 799, 801, 805, 807], "train_acc": [768, 770, 790], "train_data": [160, 162, 175], "train_dataload": [761, 772, 779, 780, 784, 785, 786, 808], "train_dist": [683, 724, 779], "train_edg": [153, 154, 181], "train_edge_mask": [153, 154, 181], "train_eid": [204, 206, 210, 656, 699, 741, 780], "train_eid_dict": [656, 659, 699, 701, 741, 744], "train_g": [153, 154, 181, 771], "train_graph": 136, "train_idx": [135, 137, 633, 678, 718, 761, 790], "train_it": 802, "train_label": [632, 677, 717], "train_load": [632, 677, 717, 795, 807], "train_mask": [24, 130, 131, 137, 141, 145, 146, 150, 151, 153, 154, 155, 156, 157, 158, 159, 165, 169, 173, 176, 178, 181, 182, 183, 184, 188, 229, 325, 367, 631, 633, 635, 636, 639, 663, 668, 669, 673, 678, 680, 681, 682, 708, 709, 713, 718, 720, 721, 723, 747, 752, 753, 756, 759, 760, 762, 768, 770, 773, 779, 789, 790, 792], "train_neg_g": 771, "train_neg_u": 771, "train_neg_v": 771, "train_nid": [200, 204, 205, 206, 209, 635, 636, 655, 657, 661, 662, 680, 681, 698, 703, 720, 721, 740, 742, 746, 779, 780, 784, 785, 786, 808], "train_nid_dict": [661, 703, 746], "train_on": [199, 200, 203, 204, 205, 206, 207, 210], "train_pos_g": 771, "train_pos_u": 771, "train_pos_v": 771, "train_sampl": 772, "train_se": [659, 701, 744], "train_set": [153, 154, 181, 791, 807], "train_siz": [157, 158, 159, 160, 162, 761, 771], "trainabl": [4, 759, 764, 790], "trainer": [4, 221, 228, 229, 635, 636, 637, 639, 640, 779, 780], "trainer_id": 229, "trainer\uc5d0\uac8c": 720, "trainig": 776, "training_load": 791, "training_set": 185, "training\uc744": 734, "trainset": [143, 167, 795], "trang": 762, "transact": 142, "transduct": [137, 187, 188, 363, 636, 681, 721], "transfer": 200, "transform": [8, 12, 25, 26, 27, 113, 114, 115, 116, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 234, 235, 277, 280, 283, 286, 294, 299, 328, 330, 333, 339, 343, 347, 358, 368, 369, 371, 372, 373, 378, 379, 390, 391, 392, 393, 394, 395, 396, 397, 405, 421, 422, 485, 492, 499, 502, 510, 579, 588, 589, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 631, 639, 643, 657, 663, 671, 759, 763, 767, 789, 790, 791, 792, 795, 798, 803, 804, 805], "transform1": 606, "transform2": 606, "transform3": 606, "transformer_encod": 394, "transit": 507, "translat": [154, 181, 399, 802], "translationdataset": 802, "transmiss": 200, "transpar": 637, "transpos": [30, 502, 519, 521, 547, 761, 764, 791], "travel": [760, 798], "travers": [12, 90, 91, 121, 122, 219, 220, 488, 490, 491, 503, 505, 507, 592], "traversal_ord": 795, "treat": [329, 508, 509, 588, 613, 647, 666, 690, 731, 769, 771, 772, 773, 791, 795, 796, 802, 805], "tree": [13, 20, 155, 175, 179, 180, 220, 283, 369, 370, 371, 373, 514, 767, 796, 797, 799, 802, 805], "tree_height": [179, 180], "treebank": [175, 795], "treelstm": 795, "treelstmcel": 795, "tri": [4, 144, 229, 295, 296], "trick": [21, 789], "trigger": [0, 90, 91, 348, 652, 663, 737, 761, 765, 770, 773, 791, 792, 795], "tripl": [399, 400, 790], "triplet": [4, 29, 30, 31, 33, 38, 46, 47, 51, 52, 54, 56, 59, 60, 61, 62, 72, 79, 86, 87, 89, 90, 91, 92, 93, 99, 106, 108, 112, 113, 116, 129, 213, 235, 276, 423, 496, 498, 500, 517, 585, 631, 647], "trivial": [8, 284, 339, 394, 606, 795], "troubl": 20, "true": [4, 6, 8, 9, 24, 30, 47, 48, 56, 57, 64, 65, 66, 68, 94, 95, 97, 98, 105, 110, 115, 121, 122, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 183, 187, 188, 190, 191, 195, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 216, 219, 220, 221, 225, 227, 228, 229, 230, 231, 234, 236, 275, 277, 278, 280, 281, 282, 283, 284, 286, 325, 328, 329, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 390, 391, 392, 393, 394, 395, 403, 421, 485, 486, 488, 490, 491, 492, 498, 499, 501, 502, 504, 505, 507, 508, 509, 510, 511, 514, 515, 516, 519, 533, 578, 579, 580, 586, 587, 588, 590, 591, 592, 594, 595, 596, 606, 607, 612, 614, 627, 631, 632, 633, 635, 636, 638, 639, 656, 657, 658, 659, 661, 663, 665, 671, 677, 678, 680, 681, 698, 699, 700, 701, 703, 705, 711, 717, 718, 720, 721, 723, 740, 741, 742, 743, 744, 746, 747, 749, 754, 758, 759, 760, 761, 762, 764, 768, 772, 773, 779, 780, 784, 785, 786, 789, 790, 791, 795, 798, 801, 802, 807, 808], "truediv": 567, "trueli": [638, 639], "truli": [229, 658], "truncat": 395, "trust": 142, "truth": [146, 150, 163, 169, 673, 756, 768, 780, 785, 791, 798], "trv_a_tre": 795, "trv_graph": 795, "try": [115, 128, 197, 216, 229, 280, 286, 502, 503, 504, 579, 588, 638, 640, 759, 760, 761, 762, 764, 772], "tudata": [633, 678, 718], "tudataset": 24, "tune": [182, 351, 663, 757, 792], "tupl": [4, 9, 21, 25, 26, 31, 35, 47, 50, 53, 60, 72, 87, 94, 121, 123, 129, 130, 131, 136, 141, 152, 165, 174, 186, 207, 229, 237, 275, 276, 294, 297, 298, 299, 326, 327, 328, 368, 405, 504, 507, 508, 524, 526, 527, 541, 555, 557, 558, 559, 560, 571, 632, 633, 637, 646, 660, 666, 667, 702, 706, 717, 745, 750, 786], "tuple\uacfc": 722, "tuple\uc744": [718, 722], "tuple\uc758": 750, "ture": [8, 650, 734], "turn": [20, 200, 203, 278, 295, 486, 655, 663, 761, 776, 779, 783, 791, 798], "tutori": [8, 20, 200, 204, 205, 206, 643, 650, 656, 657, 660, 661, 727, 740, 741, 746, 759, 760, 761, 762, 764, 766, 767, 768, 769, 770, 771, 772, 773, 775, 778, 779, 780, 782, 783, 784, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810], "tvm": 21, "tweak": 20, "tweet": 155, "twirl": 365, "twitter": [155, 642], "two": [3, 4, 5, 8, 25, 33, 44, 47, 50, 51, 52, 57, 67, 76, 78, 80, 81, 99, 104, 115, 117, 118, 123, 124, 126, 127, 128, 133, 134, 138, 139, 155, 158, 159, 171, 221, 228, 229, 237, 281, 282, 283, 294, 295, 296, 329, 330, 331, 333, 334, 339, 342, 343, 344, 345, 346, 347, 349, 350, 352, 353, 354, 356, 362, 401, 402, 404, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 495, 496, 497, 501, 503, 504, 510, 517, 518, 519, 520, 553, 561, 564, 567, 573, 579, 580, 585, 586, 588, 590, 591, 594, 610, 626, 631, 636, 637, 638, 639, 641, 642, 643, 644, 645, 647, 650, 651, 652, 655, 656, 658, 659, 660, 661, 663, 667, 669, 671, 672, 673, 741, 756, 762, 764, 768, 771, 772, 773, 779, 783, 786, 789, 790, 791, 792, 793, 795, 798, 801, 802, 803, 805], "twolayergcn": [661, 703, 746], "tx": 613, "txt": [635, 636, 638, 639, 640, 680, 681, 683, 720, 721, 723, 724, 779, 780], "ty_a": 585, "ty_b": 585, "type": [4, 5, 6, 9, 12, 20, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 197, 200, 204, 205, 206, 209, 210, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 295, 296, 297, 298, 299, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 516, 517, 518, 519, 520, 522, 523, 525, 528, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 602, 611, 617, 620, 622, 625, 626, 631, 633, 635, 637, 638, 639, 641, 642, 643, 644, 645, 646, 650, 652, 655, 656, 659, 660, 661, 663, 665, 667, 668, 671, 672, 673, 688, 690, 705, 706, 718, 722, 729, 731, 737, 740, 749, 753, 754, 755, 758, 764, 769, 772, 773, 786, 789, 790, 792, 795, 798, 807], "type_": [212, 213, 214, 215], "type_edge_id": 723, "type_wise_edge_id": 638, "type_wise_id": [637, 722], "type_wise_node_id": 638, "typestr": [61, 62], "typic": [1, 4, 10, 230, 330, 633, 640, 650, 655, 663, 665, 666, 760, 791, 798, 802, 808], "typl": [126, 590], "u": [4, 5, 20, 26, 47, 50, 56, 60, 86, 87, 89, 93, 106, 113, 128, 129, 157, 159, 171, 172, 216, 217, 220, 233, 240, 241, 243, 245, 247, 249, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 272, 274, 275, 276, 280, 286, 287, 294, 343, 344, 346, 347, 349, 350, 354, 356, 357, 359, 360, 362, 420, 445, 446, 502, 518, 579, 580, 588, 607, 620, 630, 633, 642, 645, 646, 647, 649, 650, 651, 672, 678, 685, 688, 689, 690, 692, 693, 694, 698, 712, 718, 726, 729, 730, 731, 733, 734, 736, 740, 755, 757, 760, 769, 770, 771, 776, 783, 784, 785, 786, 789, 791, 795, 798, 801, 802], "u0": [171, 172], "u0_atom": 172, "u_": [354, 795], "u_0": [171, 172], "u_add_": 5, "u_add_e_max": 8, "u_add_v": [5, 33, 404, 650, 651, 693, 694, 734, 736], "u_atom": 172, "u_attr": 123, "u_div_": 5, "u_div_v": [5, 8], "u_dot_": 5, "u_dot_v": [5, 8, 659, 663, 669, 672, 701, 709, 712, 744, 747, 753, 755, 771, 785, 786], "u_f": 795, "u_fea": [346, 354, 356, 362], "u_feat": [343, 344, 347, 349, 350, 359], "u_hat": 801, "u_iou": 795, "u_j": 795, "u_l": 795, "u_mul_": [5, 8, 367, 368, 650, 663, 670, 693, 710, 734, 735, 747, 770, 802], "u_mul_e_sum": 8, "u_mul_e_udf": 770, "u_mul_v": 5, "u_sub_": 5, "u_sub_v": 5, "ubuntu": [13, 136, 758, 773, 784, 785, 786, 791, 795, 798, 801], "uc": 329, "ucidata": 163, "udf": [19, 636, 650, 663, 681, 734, 747, 792, 795], "udf_max": 5, "udf_u_mul_": 5, "udf\ub294": 734, "udf\uc640": 734, "udf\uc758": 734, "uint32": 758, "uint8": [636, 681, 721, 802], "uk": 141, "ultim": 785, "un": [773, 792], "unam": 631, "unari": [5, 650, 734], "unbatch": [100, 101, 120, 772, 795], "unblock": [331, 343, 346, 347, 349, 350, 351, 354, 356, 363], "uncertainti": [187, 195], "unchang": 108, "uncom": [759, 760, 761, 762, 764], "uncompress": 191, "uncov": 790, "undefin": [219, 220, 230, 231, 277, 281, 282, 421, 485, 505, 507, 508, 509, 510, 636, 773], "under": [1, 5, 13, 21, 94, 95, 157, 159, 187, 195, 229, 234, 277, 281, 282, 421, 485, 498, 499, 501, 510, 516, 588, 630, 631, 635, 638, 639, 640, 654, 716, 757, 758, 770, 771, 779, 789, 790, 792, 798, 807], "underflow": [663, 747], "underli": 636, "underset": [667, 707, 751, 791], "understand": [20, 382, 397, 638, 654, 760, 765, 767, 770, 772, 779, 783, 791, 793, 794, 805], "undirect": [6, 210, 236, 237, 642, 643, 646, 656, 726, 741, 769, 798], "unexist": [390, 393], "unfamiliar": 20, "uni": [43, 44, 67, 78, 81, 103, 104, 124, 346, 493], "unidirect": [115, 123, 294, 341, 342, 343, 344, 346, 347, 349, 350, 354, 356, 359, 362, 660, 745, 784, 785, 786, 808], "unifi": [20, 200, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 657], "uniform": [167, 195, 204, 206, 209, 210, 216, 217, 342, 349, 350, 354, 355, 356, 359, 362, 364, 507, 508, 510, 659, 672, 701, 742, 744, 785, 792], "uniform_": [4, 636, 681, 721], "uniformli": [204, 206, 207, 216, 217, 326, 357, 493, 494, 505, 507, 508, 659, 785], "uniform\uc0d8\ud50c\ub9c1\uc740": 742, "uniniti": 298, "union": [4, 199, 210, 371, 373, 795], "uniqu": [4, 29, 30, 31, 33, 46, 47, 52, 54, 56, 59, 60, 61, 62, 72, 79, 86, 87, 89, 90, 91, 92, 93, 99, 106, 108, 112, 113, 116, 158, 206, 216, 230, 235, 401, 423, 496, 498, 500, 504, 508, 517, 522, 636, 637, 639, 644, 646, 647, 664, 671, 779, 780], "unit": [171, 172, 639, 790, 795, 807], "univers": [130, 163, 803, 805], "unknown": 143, "unlabel": [157, 403, 639, 658], "unless": 200, "unlik": [117, 118, 791, 792, 799, 805], "unmark": 6, "unnam": 631, "unnecessari": [651, 667], "unnorm": [230, 231, 344, 348, 505, 507, 508, 509, 510], "unobserv": 792, "unoccupi": [171, 172], "unorm": 365, "unpack": [638, 639, 655, 662], "unpin": 111, "unpin_memory_": 88, "unreach": [232, 395, 396, 515], "unscal": [663, 747], "unsqueez": [126, 127, 395, 625, 666, 706, 712, 750, 790, 791, 795, 798], "unsupervis": [659, 744, 791], "until": [4, 6, 20, 204, 508, 654, 795, 802], "untyp": [790, 798], "unus": 20, "unvisit": [369, 370], "unweight": [515, 602, 613, 642, 670, 726], "up": [4, 8, 21, 211, 230, 231, 373, 505, 507, 508, 514, 586, 633, 639, 646, 650, 651, 671, 768, 771, 776, 789, 790, 792, 795, 801], "updat": [4, 9, 19, 20, 26, 27, 33, 34, 72, 90, 91, 92, 93, 99, 112, 212, 213, 214, 215, 293, 327, 329, 333, 334, 336, 341, 342, 344, 347, 349, 350, 351, 352, 353, 356, 362, 363, 364, 392, 401, 403, 487, 488, 489, 490, 491, 635, 636, 640, 649, 650, 651, 652, 653, 660, 663, 671, 694, 734, 736, 737, 747, 758, 764, 765, 770, 779, 783, 791, 792, 795, 801, 802, 807], "update_al": [5, 8, 19, 367, 404, 617, 618, 619, 620, 621, 622, 623, 624, 625, 650, 651, 652, 653, 660, 663, 666, 670, 693, 694, 695, 696, 702, 706, 710, 734, 735, 736, 737, 738, 745, 747, 750, 770, 771, 786, 789, 790, 791, 792, 798, 801], "update_all_exampl": [650, 693, 734], "update_graph": 802, "upgrad": 760, "upload": [20, 779], "upon": [21, 158, 764], "upper": [224, 366, 391, 396], "upstream": [20, 795], "upward": 795, "urandom": [174, 197], "url": [22, 152, 190, 629, 630, 633, 675, 676, 678, 715, 716, 718, 764], "urllib": 773, "urlretriev": 773, "us": [4, 5, 6, 8, 9, 10, 11, 12, 13, 19, 20, 21, 22, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 112, 113, 114, 115, 116, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 139, 140, 141, 142, 144, 146, 150, 155, 156, 158, 161, 163, 164, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 184, 185, 187, 195, 197, 199, 200, 203, 204, 207, 210, 212, 213, 214, 215, 219, 221, 224, 228, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 251, 252, 253, 254, 275, 276, 277, 280, 281, 282, 283, 284, 286, 293, 294, 295, 296, 299, 325, 326, 329, 330, 331, 332, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 347, 349, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 380, 381, 382, 390, 392, 393, 394, 396, 398, 399, 400, 401, 404, 405, 421, 422, 485, 488, 490, 491, 492, 493, 494, 495, 496, 497, 499, 501, 502, 503, 507, 508, 509, 510, 511, 514, 516, 530, 532, 535, 536, 548, 575, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 595, 601, 606, 607, 610, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 630, 631, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 649, 650, 652, 654, 655, 656, 658, 659, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 716, 723, 730, 731, 747, 756, 758, 760, 762, 763, 764, 767, 768, 770, 772, 773, 774, 775, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 793, 795, 796, 798, 799, 801, 802, 805, 807, 808], "usag": [0, 1, 7, 8, 20, 24, 55, 124, 129, 200, 237, 238, 275, 276, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 632, 633, 643, 650, 653, 757, 763, 765, 776, 784], "use_alternate_stream": 200, "use_cpu_affin": 776, "use_ddp": [200, 203, 807, 808], "use_eta": [365, 366], "use_fp16": 747, "use_int64_tensor_s": 758, "use_libxsmm": 278, "use_libxsmm_flag": 278, "use_mm_for_euclid_dist": [372, 492], "use_mm_for_euclid_dist_if_necessari": [372, 492], "use_norm": 358, "use_panda": 164, "use_prefetch_thread": 200, "use_uva": [9, 200, 657], "user": [1, 3, 4, 5, 8, 10, 12, 26, 27, 29, 30, 33, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 64, 65, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 89, 90, 91, 92, 93, 94, 95, 99, 100, 101, 102, 103, 104, 106, 108, 112, 113, 114, 115, 116, 120, 128, 137, 142, 152, 155, 157, 159, 173, 200, 204, 205, 206, 209, 210, 224, 229, 230, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 281, 282, 286, 295, 296, 299, 326, 327, 328, 329, 331, 341, 343, 346, 347, 349, 350, 351, 354, 356, 363, 368, 369, 421, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 493, 498, 499, 500, 501, 502, 506, 507, 508, 509, 510, 511, 519, 520, 579, 580, 585, 586, 588, 595, 596, 601, 611, 612, 616, 626, 631, 635, 636, 637, 638, 639, 640, 641, 642, 644, 647, 650, 655, 657, 662, 663, 668, 669, 672, 673, 690, 693, 698, 708, 709, 712, 713, 725, 731, 732, 734, 740, 747, 752, 753, 755, 756, 757, 758, 779, 784, 785, 795], "user_emb": 329, "user_feat": [669, 672, 673, 709, 712, 713, 753, 755, 756], "user_nid": 329, "user_orig_nids_0": 639, "usernam": 20, "userwarn": [142, 170, 171, 172, 630, 676, 716, 761, 773, 791], "user\uac00": 753, "user\uc640": [731, 753], "usr": 761, "usual": [4, 9, 20, 405, 503, 636, 640, 650, 654, 655, 656, 658, 665, 666, 671, 673, 762, 772, 784, 785, 789, 792, 808], "util": [1, 4, 10, 12, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 203, 288, 324, 325, 329, 391, 402, 403, 404, 405, 512, 630, 633, 634, 635, 639, 643, 655, 664, 665, 666, 670, 673, 676, 678, 679, 704, 705, 706, 716, 718, 719, 723, 748, 749, 750, 760, 765, 772, 773, 776, 791, 795, 798], "utransform": 802, "utyp": [123, 124, 329, 493, 580, 660, 672, 702, 712, 745, 755], "uv": [50, 60, 87, 503, 620], "uva": [200, 503, 507], "v": [4, 5, 20, 21, 26, 34, 47, 50, 56, 59, 60, 61, 62, 86, 87, 89, 92, 93, 106, 113, 119, 129, 157, 171, 172, 216, 217, 220, 233, 242, 244, 246, 248, 250, 256, 258, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 286, 287, 294, 333, 337, 343, 344, 346, 347, 349, 350, 354, 356, 358, 359, 361, 362, 420, 445, 446, 502, 518, 566, 567, 568, 569, 570, 579, 580, 588, 594, 607, 620, 642, 645, 646, 647, 649, 650, 651, 660, 666, 667, 671, 672, 673, 685, 688, 689, 690, 692, 693, 694, 698, 702, 706, 707, 711, 712, 713, 726, 729, 730, 731, 733, 734, 736, 740, 745, 750, 751, 754, 755, 756, 761, 764, 770, 771, 783, 785, 786, 789, 791, 795, 798, 801, 802], "v0": 722, "v1": 764, "v100": [13, 663, 747], "v2": 764, "v3": 764, "v_": 791, "v_1": 764, "v_2": 764, "v_a": 637, "v_add_": 5, "v_add_u": 5, "v_attr": 123, "v_b": [330, 361, 405, 637, 790], "v_div_": 5, "v_div_u": 5, "v_dot_": 5, "v_dot_u": 5, "v_fea": [346, 354, 356, 362], "v_feat": [343, 344, 347, 349, 350, 359], "v_i": [347, 672, 712, 755, 792, 795, 802], "v_j": [801, 802], "v_k": [795, 802], "v_max": 798, "v_mul_": 5, "v_mul_u": 5, "v_p": 373, "v_proj": 761, "v_sub_": 5, "v_sub_u": 5, "vacabulari": 175, "vaganova": 790, "val": [100, 101, 132, 135, 136, 137, 145, 151, 164, 176, 177, 178, 182, 183, 448, 513, 522, 532, 533, 537, 539, 542, 543, 544, 545, 546, 550, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 567, 571, 572, 574, 575, 759, 760, 761, 762, 764, 768, 770, 780, 807], "val1": [561, 573], "val2": [561, 573], "val_acc": [759, 760, 762, 768, 770, 790, 807], "val_edg": [136, 153, 154, 181, 780], "val_edge_mask": [153, 154, 181], "val_g": [153, 154, 181], "val_idx": [135, 137, 761], "val_lik": 764, "val_load": 807, "val_loss": 790, "val_mask": [24, 137, 145, 146, 150, 151, 153, 154, 155, 156, 157, 158, 159, 169, 173, 176, 178, 181, 182, 183, 184, 188, 631, 633, 673, 678, 713, 718, 756, 759, 760, 762, 768, 770, 773, 779], "val_metr": 761, "val_nid": 779, "val_set": [153, 154, 181, 807], "val_siz": [157, 158, 159, 545, 553, 557, 558, 559, 560, 565, 567, 571, 761, 764], "valid": [5, 24, 90, 123, 135, 136, 137, 143, 146, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 167, 168, 169, 173, 181, 182, 184, 185, 187, 188, 195, 197, 224, 237, 392, 626, 632, 636, 639, 658, 669, 673, 677, 717, 753, 756, 759, 760, 768, 770, 771, 773, 784, 785, 790, 792, 795, 798, 802, 807, 808], "valid_acc": 785, "valid_data": [160, 162], "valid_dataload": [761, 779, 784, 808], "valid_it": 802, "valid_label": [632, 677, 717], "valid_load": [632, 677, 717], "valid_mask": [673, 713, 756], "valid_nid": [779, 784, 785, 808], "valu": [4, 8, 11, 21, 22, 29, 30, 33, 50, 56, 57, 60, 61, 62, 72, 87, 88, 92, 112, 113, 114, 116, 119, 124, 129, 143, 144, 152, 160, 167, 171, 172, 174, 175, 187, 195, 200, 204, 206, 209, 210, 229, 230, 231, 233, 234, 238, 275, 276, 277, 281, 282, 287, 295, 299, 325, 327, 329, 331, 335, 336, 337, 338, 340, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 356, 359, 361, 362, 363, 365, 366, 367, 368, 369, 370, 375, 380, 390, 392, 393, 401, 420, 421, 424, 426, 429, 431, 448, 450, 452, 456, 458, 464, 466, 470, 472, 485, 486, 495, 501, 506, 508, 515, 522, 525, 526, 527, 528, 530, 532, 535, 536, 537, 539, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 571, 572, 573, 574, 575, 578, 596, 610, 612, 614, 629, 631, 638, 639, 655, 663, 666, 667, 670, 715, 760, 761, 764, 773, 789, 791, 792, 795, 801, 802], "valueerror": 637, "valueobject": 21, "van": 795, "vanilla": [761, 802], "vanillar": 761, "vanish": 357, "var": [339, 360], "vare": 177, "varepsilon": 802, "vari": [631, 665, 666, 760], "variabl": [20, 638, 758, 769, 791], "varianc": [339, 360], "variant": [204, 508, 789, 792], "variat": [204, 508, 791], "varieti": [643, 798, 802], "variou": [4, 13, 211, 360, 636, 764, 769, 772, 785, 801], "vast": 769, "vaswani": 761, "vcpu": 13, "ve": 764, "vec": [146, 344, 349, 350, 760, 792], "vector": [126, 127, 155, 204, 206, 209, 221, 228, 229, 295, 296, 325, 326, 329, 339, 344, 347, 354, 359, 366, 378, 379, 391, 515, 539, 542, 543, 544, 546, 553, 554, 555, 557, 558, 559, 560, 564, 566, 567, 568, 569, 570, 571, 578, 614, 631, 639, 644, 669, 759, 760, 762, 764, 768, 769, 771, 772, 779, 785, 789, 792, 795, 798, 801, 802, 803, 805], "vector_v": 764, "venu": 594, "verbos": [130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 629, 633, 675, 678, 715, 718], "veri": [4, 9, 21, 120, 175, 636, 643, 656, 658, 659, 661, 669, 671, 672, 779, 780, 795, 799, 802, 805], "verifi": [20, 128, 190, 580, 666, 784, 791], "verify_ssl": 190, "versa": [791, 792], "versatil": 757, "versin": 750, "version": [4, 9, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 206, 343, 366, 510, 631, 639, 669, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 758, 759, 760, 761, 762, 764, 765, 786, 789, 798, 801], "vert": [357, 377, 398, 402], "vertex": [6, 204, 228, 296, 354, 508], "vertic": [204, 295, 508, 642, 791], "via": [5, 10, 21, 40, 92, 112, 120, 204, 206, 223, 336, 337, 338, 351, 369, 370, 403, 493, 494, 508, 512, 631, 635, 642, 644, 657, 658, 659, 662, 663, 672, 757, 769, 770, 771, 772, 779, 785, 786, 808], "viabl": 639, "vibrat": [171, 172], "vice": [791, 792], "vid": [57, 506], "view": [4, 8, 42, 43, 45, 50, 73, 76, 102, 103, 234, 277, 281, 282, 404, 421, 485, 501, 506, 507, 519, 520, 553, 567, 618, 619, 621, 623, 624, 659, 670, 672, 712, 744, 755, 761, 790, 792, 795, 798, 801, 802], "viewbackward": [333, 378], "viewbackward0": 336, "virtual": [9, 200, 392, 657], "visibl": [115, 128, 280, 286, 502, 579, 588], "vision": [761, 769, 803, 805], "visit": [0, 21, 207, 220, 503], "visitattr": 21, "visitor": 21, "visual": [758, 760, 795, 801], "viz_idx": 802, "vocab": [175, 795], "vocab_fil": 175, "vocab_s": [175, 795, 802], "vocabulari": [167, 175, 795], "void": 21, "vol": [229, 296], "volta": [8, 650, 734], "volum": [229, 296], "vote": 157, "vs2019": 758, "vtype": [123, 124, 329, 493, 506, 580, 660, 672, 702, 712, 745, 755], "w": [5, 20, 26, 27, 59, 86, 113, 114, 117, 118, 120, 124, 163, 238, 277, 281, 282, 286, 325, 329, 334, 335, 338, 342, 349, 350, 351, 356, 358, 361, 362, 367, 368, 485, 496, 497, 501, 595, 601, 602, 603, 604, 607, 609, 612, 613, 615, 616, 626, 644, 651, 656, 660, 663, 666, 669, 670, 687, 694, 699, 702, 706, 709, 710, 723, 728, 736, 741, 745, 747, 750, 753, 759, 760, 762, 764, 770, 789, 790, 792, 795, 798], "w1": [357, 762, 771], "w2": [762, 771], "w_": [350, 355, 649, 692, 733, 789, 802], "w_0": [361, 790], "w_comp": 790, "w_h": 802, "w_i": 343, "w_iou": 795, "w_j": 343, "w_k": [354, 802], "w_l": [651, 694, 736], "w_new": 5, "w_o": [405, 802], "w_q": 802, "w_r": [361, 651, 694, 736, 790], "w_t": 330, "w_v": 802, "wa": [8, 138, 154, 158, 177, 181, 333, 382, 646, 760, 779, 790, 795, 802], "wai": [1, 4, 5, 124, 199, 221, 228, 238, 295, 296, 339, 344, 360, 401, 603, 604, 609, 616, 629, 633, 636, 646, 647, 654, 656, 658, 660, 664, 672, 762, 764, 769, 770, 779, 780, 784, 785, 792, 802], "wait": 20, "walk": [12, 207, 325, 329, 356, 495, 503, 505, 506, 507, 610, 613, 779, 780], "walk_length": [325, 505], "walkthrough": [660, 764], "wang": [789, 791, 792, 795], "want": [4, 20, 21, 40, 200, 204, 206, 207, 209, 508, 630, 631, 636, 639, 642, 647, 653, 656, 659, 661, 669, 670, 672, 673, 726, 769, 771, 773, 779, 792], "warn": [162, 773], "watch": [42, 801], "wayn": 163, "wb": 780, "wc": 357, "we": [4, 6, 8, 13, 20, 21, 26, 27, 30, 40, 44, 67, 78, 81, 104, 131, 141, 172, 173, 197, 200, 210, 223, 229, 230, 281, 282, 283, 295, 296, 299, 329, 330, 333, 340, 341, 342, 351, 356, 361, 371, 373, 420, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 503, 508, 514, 519, 520, 585, 631, 635, 636, 637, 638, 639, 640, 647, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 668, 669, 672, 673, 722, 757, 758, 759, 760, 761, 762, 764, 765, 770, 771, 772, 779, 780, 784, 789, 790, 791, 792, 798, 801, 802, 807], "web": [130, 151, 178, 183, 503, 609], "webkb": [151, 178, 183], "websit": [142, 163, 633, 678, 718, 758], "wedg": 233, "week": 157, "weight": [5, 6, 20, 117, 118, 123, 124, 142, 237, 238, 289, 290, 291, 292, 299, 325, 326, 327, 329, 330, 332, 335, 337, 342, 344, 347, 348, 349, 350, 351, 352, 354, 356, 359, 361, 362, 363, 364, 365, 366, 367, 368, 382, 390, 403, 405, 495, 496, 497, 503, 508, 509, 511, 576, 577, 602, 603, 604, 609, 610, 613, 638, 642, 643, 644, 652, 659, 665, 668, 686, 687, 695, 701, 705, 723, 727, 728, 737, 744, 749, 759, 760, 762, 764, 770, 773, 789, 790, 792, 795, 798, 801, 802], "weight1": 723, "weight2": 723, "weight_and_sum": 382, "weight_anim": 801, "weight_column": 503, "weight_decai": [663, 747, 759, 790, 795], "weight_nam": [117, 118], "weightedsageconv": 770, "weihua916": 161, "welcom": [20, 664, 802], "well": [4, 20, 55, 95, 123, 124, 128, 210, 225, 229, 499, 580, 629, 630, 631, 633, 639, 640, 645, 647, 654, 656, 658, 659, 668, 669, 671, 672, 731, 753, 762, 765, 769, 773, 776, 779, 783, 785, 789, 792, 801, 802], "were": [145, 176, 660, 758, 798, 802], "west": [633, 678, 718], "wh": [368, 369, 652, 695, 737], "wh_": [652, 695, 737], "what": [8, 20, 21, 229, 512, 655, 662, 672, 673, 762, 764, 785, 786, 789, 795, 798, 802, 808], "whatev": 20, "wheel": [166, 759, 760, 761, 762, 764], "when": [1, 4, 9, 13, 19, 20, 21, 30, 35, 40, 47, 50, 55, 56, 67, 69, 79, 88, 123, 128, 153, 154, 164, 181, 190, 200, 203, 204, 211, 212, 213, 214, 215, 221, 224, 228, 229, 230, 231, 234, 235, 237, 275, 277, 281, 282, 283, 284, 295, 296, 330, 331, 336, 337, 338, 339, 340, 341, 342, 343, 344, 346, 347, 349, 350, 351, 354, 355, 356, 361, 363, 366, 369, 370, 371, 372, 373, 375, 421, 422, 485, 492, 502, 504, 507, 508, 509, 510, 511, 514, 515, 578, 580, 586, 588, 606, 614, 631, 636, 637, 638, 639, 640, 643, 647, 656, 658, 659, 662, 663, 666, 667, 671, 762, 764, 771, 772, 779, 784, 789, 791, 798, 802, 808], "whenev": [650, 771], "whenver": 798, "where": [4, 8, 9, 13, 20, 25, 33, 44, 47, 52, 56, 57, 61, 62, 72, 78, 81, 99, 104, 126, 127, 128, 129, 133, 134, 153, 155, 158, 177, 200, 204, 205, 206, 209, 216, 217, 229, 232, 233, 238, 276, 279, 280, 283, 284, 285, 286, 287, 294, 299, 330, 331, 332, 334, 335, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 420, 444, 445, 446, 492, 495, 503, 504, 505, 507, 510, 514, 515, 558, 559, 561, 571, 578, 590, 591, 603, 604, 607, 609, 612, 613, 614, 618, 619, 621, 623, 624, 625, 631, 633, 637, 638, 639, 640, 642, 651, 654, 657, 662, 667, 669, 670, 671, 672, 673, 735, 759, 760, 761, 762, 764, 768, 769, 770, 771, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 802, 807], "wherea": [791, 792], "whether": [4, 8, 9, 20, 47, 52, 53, 56, 57, 61, 62, 64, 65, 67, 116, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 200, 203, 204, 206, 209, 210, 216, 223, 225, 227, 229, 230, 231, 234, 275, 278, 286, 288, 294, 295, 296, 330, 339, 343, 344, 346, 347, 349, 350, 351, 358, 360, 361, 372, 375, 392, 398, 403, 421, 492, 504, 508, 509, 510, 511, 590, 591, 627, 629, 634, 638, 639, 660, 661, 669, 672, 715, 719, 764, 768, 771, 773, 784, 785, 786, 791, 798, 802, 808], "which": [0, 1, 4, 8, 9, 19, 20, 21, 31, 35, 40, 41, 50, 55, 60, 87, 91, 115, 120, 128, 129, 137, 140, 144, 154, 157, 158, 159, 171, 172, 174, 177, 179, 180, 185, 187, 195, 200, 201, 202, 207, 209, 212, 213, 214, 215, 220, 225, 229, 233, 275, 276, 277, 280, 281, 282, 286, 287, 295, 299, 327, 330, 331, 333, 334, 336, 337, 338, 339, 341, 343, 346, 347, 349, 350, 351, 354, 356, 359, 361, 363, 367, 390, 391, 392, 393, 396, 399, 400, 404, 420, 421, 485, 486, 493, 494, 501, 502, 503, 504, 505, 507, 510, 515, 519, 520, 557, 564, 571, 578, 579, 580, 585, 588, 590, 591, 594, 596, 601, 604, 609, 612, 613, 614, 618, 621, 626, 630, 631, 633, 635, 636, 638, 639, 640, 643, 644, 645, 646, 650, 651, 652, 655, 656, 657, 658, 660, 661, 662, 663, 666, 667, 669, 670, 673, 737, 757, 758, 759, 764, 768, 770, 771, 776, 779, 783, 784, 791, 792, 795, 798, 802, 807], "while": [5, 8, 21, 67, 72, 91, 113, 114, 143, 172, 187, 195, 200, 204, 229, 341, 342, 356, 367, 368, 369, 370, 392, 508, 510, 561, 636, 637, 638, 639, 643, 651, 655, 662, 663, 671, 762, 765, 779, 784, 786, 791, 792, 798, 808], "whitespac": 638, "whl": 764, "who": [20, 142, 155, 635, 654, 757, 779], "whole": [200, 229, 612, 639, 650, 657, 666, 758, 784, 785, 791, 802, 808], "whom": 142, "whose": [4, 9, 53, 115, 117, 118, 119, 123, 124, 129, 211, 229, 231, 276, 280, 283, 327, 367, 421, 422, 492, 504, 519, 520, 579, 602, 603, 604, 605, 609, 639, 654, 762, 784, 785, 786, 791], "why": [21, 783, 792], "wi": 357, "wide": [1, 377, 631, 673, 768], "width": [791, 801], "wiki": [182, 779], "wikic": 182, "wikipedia": [132, 145, 176, 182, 524, 526, 527, 534, 557, 558, 559, 769], "wildcard": 25, "win": [115, 579, 588], "window": [174, 197, 776], "window_s": [325, 329], "wisconsin": 183, "wise": [4, 5, 12, 72, 112, 209, 210, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 334, 397, 496, 497, 517, 518, 545, 565, 590, 591, 637, 649, 650, 652, 655, 722, 733, 737, 761, 771, 773, 785, 792, 802], "wish": [20, 116, 128, 640, 654, 656, 661, 669, 757, 784, 808], "with_label": [791, 795, 798], "within": [4, 19, 20, 157, 199, 275, 295, 298, 325, 329, 367, 368, 369, 370, 372, 486, 492, 637, 652, 658, 667, 743, 762, 791, 798, 802], "without": [5, 6, 20, 26, 27, 113, 114, 115, 129, 230, 231, 234, 275, 276, 356, 371, 373, 493, 494, 497, 500, 508, 509, 510, 557, 558, 559, 571, 588, 616, 630, 631, 647, 650, 662, 663, 671, 731, 783, 785, 791, 795], "wm": 588, "wmt14": 802, "wn18": 181, "word": [20, 107, 133, 134, 151, 175, 178, 183, 200, 203, 327, 585, 636, 768, 795, 798, 802], "word2vec": 155, "wordid": 795, "wordnet": 181, "work": [3, 4, 7, 8, 10, 20, 115, 117, 118, 204, 206, 209, 331, 343, 346, 347, 349, 350, 351, 354, 356, 363, 401, 503, 579, 603, 604, 605, 606, 607, 609, 610, 613, 628, 629, 640, 642, 654, 655, 657, 658, 668, 669, 673, 769, 771, 773, 776, 784, 786, 791, 796, 798, 802, 805, 807, 808], "workaround": 792, "worker": [4, 224, 636, 640, 657, 681, 721, 724, 742, 776], "workflow": [768, 771], "workload": [12, 221, 228, 635, 639, 654, 666, 764, 776, 807], "workspac": [640, 683, 723, 724, 779], "workspace\ub294": 724, "workspace\uc758": 724, "world": [158, 160, 639, 723, 769, 783, 798, 802], "world_siz": [807, 808], "would": [8, 20, 25, 88, 128, 129, 200, 204, 206, 209, 294, 335, 343, 344, 347, 349, 350, 359, 362, 363, 379, 503, 508, 580, 590, 591, 651, 654, 656, 658, 660, 661, 668, 669, 770, 771, 773, 783, 785, 795, 798, 802], "wouldn": 798, "wrap": [129, 200, 201, 202, 663, 747, 802, 807, 808], "wrapper": [7, 20, 21], "writabl": 773, "write": [4, 20, 21, 327, 512, 588, 597, 636, 639, 649, 655, 662, 666, 669, 723, 759, 762, 767, 768, 771, 773, 774, 775, 784, 787, 788, 791, 795, 798, 808], "write_t": 639, "writeback": 588, "writeback_map": [110, 588], "writer": 132, "written": [8, 650, 763, 784, 791, 802], "wrong": [20, 363], "wu": 691, "wv": 802, "www": [158, 691, 759, 760, 761, 762, 770, 776, 786], "x": [5, 6, 8, 20, 33, 34, 92, 93, 99, 112, 120, 130, 131, 141, 165, 174, 175, 234, 283, 293, 325, 330, 332, 334, 336, 337, 338, 339, 345, 357, 358, 360, 363, 364, 366, 371, 372, 373, 374, 375, 376, 381, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 492, 514, 554, 561, 572, 612, 613, 626, 639, 644, 645, 656, 658, 659, 661, 663, 669, 672, 687, 688, 698, 699, 700, 701, 703, 709, 712, 728, 729, 740, 741, 743, 744, 746, 747, 753, 755, 758, 759, 760, 761, 762, 764, 769, 779, 780, 784, 785, 786, 789, 795, 798, 801, 802, 808], "x1": [283, 514, 553, 564, 764], "x2": [283, 514, 553, 564, 764], "x64": 758, "x_": [283, 357, 371, 373, 445, 514, 517, 764], "x_0": 357, "x_1": [357, 764], "x_2": [357, 764], "x_c": 357, "x_dst": [327, 658, 700, 743], "x_e": [446, 517], "x_i": [345, 354, 355, 357, 377, 612, 764, 802], "x_j": [345, 354, 764, 795, 802], "x_sign": 760, "x_size": 795, "x_src": 327, "x_type": 330, "x_u": [445, 446, 518, 649, 692, 733], "x_uv": 798, "x_v": [445, 446, 518, 649, 692, 733], "xavier": [326, 347, 349, 350, 362, 363], "xavier_normal_": 792, "xavier_uniform_": [9, 401, 665, 705, 749, 790], "xcode": 758, "xeon": 663, "xi": 760, "xlabel": 801, "xrightarrow": 594, "xtick": 801, "xu": 783, "xuv": 798, "xv1": 764, "xv2": 764, "xw_t": 330, "xxx": [0, 638, 682, 723], "xxx_edg": [638, 723], "xxx_node": [638, 723], "xxx_note": 723, "xxx_stat": [638, 723], "xxx\ub294": 723, "y": [8, 20, 175, 233, 287, 325, 330, 367, 368, 390, 393, 403, 420, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 644, 658, 663, 669, 687, 698, 700, 709, 728, 740, 743, 747, 753, 758, 760, 762, 764, 769, 771, 785, 795, 801], "y1": 8, "y_": [283, 371, 373, 514, 672, 712, 755, 771, 785], "y_dst": 327, "y_hat": [761, 762], "y_pred": 761, "y_true": 761, "y_u": [233, 287, 420], "y_v": [233, 287, 420], "yaml": 144, "ye": [795, 802], "year": [639, 642, 784, 785, 786], "yellow": 783, "yelp": [158, 159, 184], "yer": [204, 508], "yet": 4, "yield": [210, 348, 357, 585, 586, 656, 661, 772, 783, 784, 786, 792], "ying": 503, "yingtongd": 158, "yiran": 691, "yizhou": 71, "ylabel": 801, "you": [6, 8, 13, 20, 21, 25, 88, 113, 117, 118, 128, 129, 177, 200, 203, 204, 206, 207, 209, 275, 276, 357, 363, 507, 508, 509, 510, 580, 630, 631, 644, 650, 656, 657, 659, 660, 661, 668, 669, 672, 673, 676, 716, 757, 758, 760, 763, 764, 766, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 790, 791, 792, 793, 795, 798, 799, 801, 802, 805, 807, 808], "your": [6, 7, 8, 20, 117, 118, 142, 160, 162, 168, 170, 171, 172, 174, 175, 633, 636, 650, 654, 657, 658, 660, 664, 668, 669, 673, 718, 767, 768, 771, 774, 775, 776, 783, 784, 785, 786, 798, 802, 808], "yu": [789, 790, 791, 798], "yum": 758, "yyi": 0, "z": [8, 171, 335, 760, 791, 792, 802], "z2": 792, "z_": 299, "z_e": 517, "z_i": [333, 335, 792], "z_j": [333, 792], "z_list": 791, "z_v": [518, 791], "zachari": [163, 773], "zero": [4, 26, 27, 29, 42, 45, 69, 73, 88, 92, 102, 107, 112, 113, 114, 117, 118, 120, 123, 128, 146, 171, 172, 200, 224, 229, 237, 284, 293, 331, 341, 343, 346, 347, 349, 350, 351, 354, 355, 356, 359, 363, 391, 395, 397, 401, 402, 403, 424, 425, 426, 427, 429, 430, 431, 432, 448, 450, 451, 452, 453, 456, 457, 458, 459, 464, 465, 466, 467, 470, 471, 472, 473, 502, 509, 510, 522, 523, 526, 527, 538, 539, 540, 542, 543, 544, 545, 546, 551, 553, 558, 559, 560, 561, 565, 567, 571, 573, 575, 578, 580, 586, 587, 588, 590, 591, 606, 614, 626, 631, 636, 638, 639, 647, 657, 658, 663, 666, 668, 669, 670, 681, 690, 698, 700, 708, 709, 721, 723, 731, 740, 743, 752, 753, 760, 764, 771, 773, 779, 786, 791, 795, 798, 801, 802], "zero_grad": [325, 329, 367, 368, 369, 370, 635, 656, 659, 661, 663, 669, 671, 672, 673, 680, 698, 699, 701, 703, 709, 711, 712, 713, 720, 740, 741, 744, 746, 747, 753, 754, 755, 756, 759, 760, 761, 762, 768, 770, 771, 772, 779, 780, 784, 785, 789, 790, 791, 792, 795, 807, 808], "zero_initi": 798, "zeros_lik": [698, 740, 780, 785], "zhang": [691, 789, 790, 791, 792, 795, 798, 801, 802], "zhao": [795, 801], "zheng": [789, 790, 791, 792, 795, 798, 801, 802], "zhiyu": 691, "zhiyuchen": 691, "zhjwy9343": 691, "zhou": [801, 802], "zihao": [795, 802], "zinc": 185, "zip": [161, 164, 166, 177, 630, 633, 678, 716, 718, 759, 760, 762, 768, 769, 770, 771, 772, 773, 776, 779, 780, 783, 784, 785, 786, 789, 790, 791, 792, 795, 798, 801, 802, 807, 808], "zpve": [171, 172], "\u4e00\u4e2a\u4e8c\u5206\u56fe": 690, "\u4e00\u4e2a\u4ec5\u5e73\u8861\u56fe\u4e2d\u8282\u70b9": 682, "\u4e00\u4e2a\u53ef\u9009\u9879\u662f\u7528\u6237\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u793a\u4f8b\u68c0\u67e5\u4e0b\u8f7d\u540e\u6587\u4ef6\u7684sha": 676, "\u4e00\u4e2a\u540c\u6784\u56fe": 690, "\u4e00\u4e2a\u56fe\u6279\u6b21\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u5f20\u5927\u56fe": 711, "\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e0c\u671b": 712, "\u4e00\u4e2a\u5b50\u56fe\u5bf9\u5e94\u4e00\u79cd\u5173\u7cfb": 690, "\u4e00\u4e2a\u5e94\u7528\u4e8e": 694, "\u4e00\u4e2a\u5f02\u6784\u56fe\u7531\u4e00\u7cfb\u5217\u5b50\u56fe\u6784\u6210": 690, "\u4e00\u4e2a\u5f02\u6784\u56fe\u793a\u4f8b": 690, "\u4e00\u4e2a\u6279\u6b21\u4e2d\u4e0d\u540c\u7684\u56fe\u662f\u5b8c\u5168\u5206\u5f00\u7684": 711, "\u4e00\u4e2a\u662f\u8fb9\u7684\u96c6\u5408": 685, "\u4e00\u4e2a\u6709\u6548\u7684\u56fe\u540d\u79f0\u5e94\u8be5\u4ec5\u5305\u542b\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf": 682, "\u4e00\u4e2a\u6b63\u6837\u672c\u56fe": 701, "\u4e00\u4e2a\u6d88\u606f\u4f20\u9012\u8fd0\u7b97\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u51fd\u6570": 710, "\u4e00\u4e2a\u7528\u4e8e\u6307\u5b9a": 693, "\u4e00\u4e2a\u7528\u4e8e\u6307\u793a\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7684\u5b57\u6bb5\u540d": 693, "\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5d4c\u5165": 681, "\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b": 694, "\u4e00\u4e2a\u805a\u5408\u51fd\u6570\u548c\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570": 693, "\u4e00\u4e2a\u8d1f\u6837\u672c\u56fe": 701, "\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u805a\u5408\u64cd\u4f5c\u5305\u62ec": 693, "\u4e00\u4e9b\u6a21\u5757\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u805a\u5408\u51fd\u6570": 705, "\u4e00\u53f0\u673a\u5668\u53ef\u80fd\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b": 680, "\u4e00\u662f\u8282\u70b9\u7684\u96c6\u5408": 685, "\u4e00\u6761\u8fb9": 685, "\u4e00\u6761\u94fe\u8def0": 686, "\u4e00\u6837": 681, "\u4e00\u6b21\u6027\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684": 709, "\u4e00\u76f4\u5230\u8f93\u5165": 697, "\u4e00\u79cd\u5b58\u50a8\u5f02\u6784\u56fe\u7684\u5e38\u89c1\u65b9\u6cd5\u662f\u5728\u4e0d\u540c\u7684csv\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 690, "\u4e00\u822c\u6765\u8bf4": 693, "\u4e00\u822c\u6d41\u7a0b\u662f": 711, "\u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u591a\u5c42gnn\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 709, "\u4e0a\u56fe\u4e2d\u9690\u53bb\u4e86\u548c\u8ba1\u7b97\u4e0d\u76f8\u5173\u7684\u8fb9": 698, "\u4e0a\u7684\u5206\u5e03\u5f0f\u90bb\u5c45\u91c7\u6837\u63d0\u4f9b\u4e86": 681, "\u4e0a\u7684\u7279\u5f81\u4e3a": 692, "\u4e0a\u7684\u7684\u7279\u5f81\u4e3a": 692, "\u4e0a\u7684\u8282\u70b9": 698, "\u4e0a\u7684\u8bad\u7ec3\u53ea\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u6a21\u578b\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 713, "\u4e0a\u8c03\u7528\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570": 681, "\u4e0a\u8fd0\u884c": 681, "\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684for\u5faa\u73af\u4e3a\u5904\u7406\u5f02\u6784\u56fe\u8ba1\u7b97\u7684\u4e3b\u8981\u903b\u8f91": 707, "\u4e0a\u8ff0\u51fd\u6570\u7684\u6570\u5b66\u516c\u5f0f\u4e3a": 693, "\u4e0a\u9762\u4ee3\u7801\u91cc\u7684": 705, "\u4e0a\u9762\u7684dataloader\u4e00\u6b21\u8fed\u4ee3\u4f1a\u751f\u6210\u4e09\u4e2a\u8f93\u51fa": 703, "\u4e0a\u9762\u7684dgl": 703, "\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230": 676, "\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4e00\u4e2a": 676, "\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u4e86\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408\u7684\u8ba1\u7b97": 706, "\u4e0b\u4f8b\u7684\u8f93\u51fa\u8282\u70b9\u5305\u542b\u4e86\u6ca1\u6709\u5165\u8fb9\u7684\u5b64\u7acb\u8282\u70b9": 698, "\u4e0b\u56fe\u663e\u793a\u4e86\u4ee5\u8282\u70b98\u4e3a\u79cd\u5b50\u8282\u70b9\u65f6\u7b2c\u4e8c\u4e2agnn\u5c42\u6240\u9700\u7684\u5757": 698, "\u4e0b\u56fe\u663e\u793a\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\u53ca\u5b83\u4eec\u95f4\u7684\u76f8\u4e92\u4f5c\u7528": 680, "\u4e0b\u6587\u5c55\u793a\u4e86sageconv\u793a\u4f8b\u4e2d\u7684": 706, "\u4e0b\u6587\u662f\u5728\u4e00\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 712, "\u4e0b\u6587\u7ee7\u7eed\u4f7f\u7528\u4e0a\u8ff0\u7684\u4f8b\u5b50": 698, "\u4e0b\u7684\u76ee\u5f55": 676, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": [674, 691], "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e\u96c6\u7684url": 675, "\u4e0b\u8f7d\u6587\u4ef6": 676, "\u4e0b\u9762\u4e2d\u4f7f\u7528": 678, "\u4e0b\u9762\u4ee5": 678, "\u4e0b\u9762\u4f7f\u7528": 678, "\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684": 678, "\u4e0b\u9762\u5c55\u793a\u4e86\u5728\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684\u793a\u4f8b": 683, "\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50": 690, "\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u901a\u8fc7\u5bf9\u8282\u70b9\u7279\u5f81\u964d\u7ef4\u6765\u51cf\u5c11\u6d88\u606f\u7ef4\u5ea6\u7684\u793a\u4f8b": 694, "\u4e0b\u9762\u662f\u4f7f\u7528\u70b9\u79ef\u8ba1\u7b97\u8fb9\u5f97\u5206\u7684\u4f8b\u5b50": 712, "\u4e0b\u9762\u662f\u901a\u8fc7\u4f7f\u7528\u51c6\u786e\u6027\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u4e00\u4e2a\u4f8b\u5b50": 713, "\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u4e13\u95e8\u7528\u4e8e\u5728\u90bb\u5c45\u91c7\u6837\u65f6\u5220\u9664\u5c0f\u6279\u6b21\u7684\u4e00\u4e9b\u8fb9\u548c\u5b83\u4eec\u7684\u53cd\u5411\u8fb9": 699, "\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 713, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f": 702, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u5728dgl\u4e2d\u521b\u5efa\u5f02\u6784\u56fe\u7684\u793a\u4f8b": 690, "\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4f7f\u7528\u4e86": 689, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b": 675, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e00\u4e2a\u62e5\u6709": 709, "\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe": 712, "\u4e0b\u9762\u7684\u52a8\u753b\u5c55\u793a\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b": 700, "\u4e0b\u9762\u7684\u6d41\u7a0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6a21\u7248\u7684\u5de5\u4f5c\u65b9\u5f0f": 675, "\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u4fdd\u5b58\u548c\u8bfb\u53d6\u56fe\u548c\u6570\u636e\u96c6\u4fe1\u606f\u7684\u5217\u8868": 679, "\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8bad\u7ec3\u96c6\u62c6\u5206": 681, "\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5\u7684\u793a\u4f8b": 701, "\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e": [701, 703], "\u4e0d\u540c\u540d\u79f0\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u5f62\u72b6": 687, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u5355\u72ec\u7684id": 690, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e38\u5e38\u5177\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u5c5e\u6027": 695, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6216\u5927\u5c0f": 690, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6709\u5355\u72ec\u7684id": 690, "\u4e0d\u5fc5\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5": 690, "\u4e0d\u662fpytorch\u7684nn\u6a21\u5757": 681, "\u4e0d\u80fd\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u5b50\u96c6": 687, "\u4e0d\u8fc7": 689, "\u4e0d\u8fc7\u5927\u90e8\u5206\u7684dgl": 689, "\u4e0e": [680, 681], "\u4e0e\u4e0d\u5b58\u5728\u7684\u8fb9": 701, "\u4e0e\u4e4b\u524d\u7684\u4efb\u52a1\u7c7b\u4f3c": 711, "\u4e0e\u540c\u6784\u56fe\u7684\u60c5\u51b5\u7c7b\u4f3c": 690, "\u4e0e\u5f02\u6784\u56fe\u76f8\u5173\u8054\u7684": 690, "\u4e0e\u6574\u56fe\u5206\u7c7b\u4e0d\u540c": 678, "\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92": 680, "\u4e0e\u6b64\u540c\u65f6": 682, "\u4e0e\u8fb9\u7279\u5f81": 693, "\u4e0e\u901a\u5e38\u4ee5\u5f20\u91cf\u4e3a\u53c2\u6570\u7684pytorch": 706, "\u4e0e\u91c7\u6837\u5668\u8fdb\u884c\u4ea4\u4e92\u4ee5\u83b7\u5f97\u5c0f\u6279\u6b21\u6570\u636e": 680, "\u4e0e\u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5668\u8fde\u63a5\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u5b83\u4eec": 681, "\u4e14\u53ea\u8003\u8651\u5e73\u5747\u805a\u5408\u51fd\u6570\u7684\u60c5\u51b5": 702, "\u4e14\u663e\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u5b58\u50a8\u7684\u8bbe\u5907\u4fe1\u606f": 689, "\u4e24\u4e2a\u51fd\u6570\u5728\u53d8\u6362\u540e\u7684\u56fe\u4e0a\u91cd\u65b0\u52a0\u5165\u6279\u6b21\u4fe1\u606f": 711, "\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684numpy\u6570\u7ec4\u4f1a\u5f88\u5927": 682, "\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u8fb9\u7684\u8054\u7cfb": 699, "\u4e24\u540d\u4f5c\u8005\u53ef\u4ee5\u5728\u4e0d\u540c\u5e74\u4efd\u5171\u540c\u7f72\u540d\u6587\u7ae0": 685, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b": 709, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 709, "\u4e2a\u4eba\u59d3\u540d": 691, "\u4e2a\u4eba\u94fe\u63a5": 691, "\u4e2a\u5bf9\u5e94\u7684\u8d1f\u91c7\u6837\u6837\u672c": 712, "\u4e2a\u8282\u70b9\u6216\u8fb9": 689, "\u4e2a\u8282\u70b9\u7684\u56fe\u4e0a\u8fd0\u884c\u7684": 697, "\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 701, "\u4e2d": [676, 678, 679, 685, 686, 690, 703], "\u4e2d\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u6574\u56fe\u4e0a\u8bad\u7ec3\u4e00\u4e2a2\u5c42\u7684rgcn\u6a21\u578b": 703, "\u4e2d\u4ecb\u7ecd\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 708, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u65b9\u6cd5\u548c": 708, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236": 713, "\u4e2d\u521b\u5efa": 681, "\u4e2d\u53ef\u4ee5\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801": 678, "\u4e2d\u5904\u7406\u6bcf\u4e2a\u6570\u636e\u5b9e\u4f8b\u662f\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5": 679, "\u4e2d\u5b58\u50a8\u7ed3\u679c": 693, "\u4e2d\u5b9a\u4e49\u7684": 709, "\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u96c6\u7684\u57fa\u7c7b": 675, "\u4e2d\u5b9e\u73b0\u4e86\u5e38\u7528\u7684\u6d88\u606f\u51fd\u6570\u548c\u805a\u5408\u51fd\u6570\u4f5c\u4e3a": 693, "\u4e2d\u5df2\u7ecf\u6709\u4e86": 713, "\u4e2d\u6240\u4ecb\u7ecd\u7684": 701, "\u4e2d\u6240\u8ff0\u7684\u5168\u56fe\u8bad\u7ec3": 697, "\u4e2d\u6240\u8ff0\u7684\u8fb9\u56de\u5f52\u6a21\u578b\u76f8\u540c": 712, "\u4e2d\u6240\u91c7\u6837\u7684\u8282\u70b9": 712, "\u4e2d\u627e\u5230": 678, "\u4e2d\u6307\u5b9a": 682, "\u4e2d\u6307\u5b9a\u66f4\u65b0\u51fd\u6570": 693, "\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 683, "\u4e2d\u6587\u7248": [628, 629, 630, 632, 633, 634, 635, 636, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 656, 658, 659, 660, 661, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673], "\u4e2d\u6587\u7248\u94fe\u63a5": 757, "\u4e2d\u662f\u5426\u5b58\u6709\u5904\u7406\u540e\u7684\u6570\u636e": 675, "\u4e2d\u67e5\u770b\u5f02\u6784\u56fe\u5377\u79ef": 713, "\u4e2d\u6807\u8bc6\u8282\u70b9\u6570\u636e": 681, "\u4e2d\u7684": 681, "\u4e2d\u7684\u4e00\u4e2a": 695, "\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20": 703, "\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9": 690, "\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801": 678, "\u4e2d\u7684\u4f8b\u5b50": 713, "\u4e2d\u7684\u505a\u6cd5\u7c7b\u4f3c": 713, "\u4e2d\u7684\u5206\u533a\u6570\u636e\u548c\u76f8\u5173\u6587\u4ef6": 683, "\u4e2d\u7684\u5b57\u6bb5\u540d": 693, "\u4e2d\u7684\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 711, "\u4e2d\u7684\u7279\u5f81\u6765\u52a0\u8f7d\u6807\u7b7e": 703, "\u4e2d\u7684\u8fb9": 690, "\u4e2d\u8282\u70b9\u7684\u96c6\u5408": 711, "\u4e2d\u95f4\u67d0\u4e00\u5c42\u5bf9\u5e94\u7684\u8fb9\u754c\u9700\u8981\u5305\u542b\u8be5\u5c42\u53ca\u6240\u6709\u540e\u7eed\u5c42\u8ba1\u7b97\u6d89\u53ca\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 698, "\u4e2d\u95f4\u6d88\u606f": 693, "\u4e3a\u4e86\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3": 682, "\u4e3a\u4e86\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u83b7\u5f97\u5e73\u8861\u7684\u5de5\u4f5c\u8d1f\u8f7d": 682, "\u4e3a\u4e86\u5904\u7406\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u672c\u5730\u78c1\u76d8\u4e0a\u7684\u56fe\u6570\u636e\u96c6": 675, "\u4e3a\u4e86\u5b8c\u6210\u5355\u4e2a\u56fe\u7684\u9884\u6d4b": 711, "\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684": 690, "\u4e3a\u4e86\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u7c7b": 713, "\u4e3a\u4e86\u5e76\u884c\u5316\u8ba1\u7b97": 680, "\u4e3a\u4e86\u6307\u4ee3\u591a\u6761\u8fb9": 689, "\u4e3a\u4e86\u8bbe\u7f6e": 690, "\u4e3a\u4e86\u968f\u673a": 703, "\u4e3a\u4f8b": 678, "\u4e3a\u540e\u7eed\u5728\u56fe\u4e0a\u8fdb\u884c\u7684\u8ba1\u7b97\u4e0e\u5206\u6790\u7684\u6027\u80fd\u6539\u5584\u63d0\u4f9b\u53ef\u80fd": 678, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": [691, 697, 703], "\u4e3a\u5f02\u6784\u56fe\u4fee\u6539gnn\u6a21\u5757\u7684\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684": 702, "\u4e3a\u5f02\u6784\u56fe\u751f\u6210\u8fb9\u754c\u4e0e\u4e3a\u540c\u6784\u56fe\u751f\u6210\u8fb9\u754c\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c": 698, "\u4e3a\u63d0\u5347\u6570\u636e\u52a0\u8f7d\u901f\u5ea6": 711, "\u4e3a\u6709\u5411\u56fe": 698, "\u4e3a\u67d0\u4e00\u79cd\u8fb9\u7c7b\u578b": 712, "\u4e3a\u6b64": [698, 701], "\u4e3a\u7b80\u4fbf\u8d77\u89c1": 678, "\u4e3a\u7b80\u5355\u8d77\u89c1": 703, "\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0\u7684id": 682, "\u4e3b\u8981\u539f\u56e0\u662fpytorch": 681, "\u4e3b\u8981\u5e94\u7528\u573a\u666f\u662f\u8fd0\u884c\u91c7\u6837api\u4ee5\u652f\u6301\u5c0f\u6279\u91cf\u8bad\u7ec3": 681, "\u4e3b\u8ba1\u7b97\u673a": 683, "\u4e4b\u524d\u58f0\u660e\u5206\u5e03\u5f0f\u5d4c\u5165": 681, "\u4e4b\u524d\u88ab\u58f0\u660e": 681, "\u4e4b\u524d\u8c03\u7528": 681, "\u4e4b\u540e": 706, "\u4e4b\u95f4\u5206\u6570\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e0e": 712, "\u4e4b\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684": 712, "\u4e4b\u95f4\u7684\u5173\u7cfb": 685, "\u4e4b\u95f4\u7684\u5f97\u5206": 712, "\u4e4b\u95f4\u7684\u5f97\u5206\u8981\u9ad8\u4e8e": 712, "\u4e58\u4ee52\u5f97\u5230\u6700\u7ec8\u7ed3\u679c": 693, "\u4e5f\u53ef\u4ee5\u5728\u4e0d\u6d89\u53ca\u6d88\u606f\u4f20\u9012\u7684\u60c5\u51b5\u4e0b": 693, "\u4e5f\u53ef\u4ee5\u662f\u6709\u5411\u7684": 685, "\u4e5f\u5c06\u5728gpu\u4e0a": 688, "\u4e5f\u5c31\u662f\u8bf4": 681, "\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u7ea7\u522b\u7684\u91c7\u6837api": 681, "\u4e5f\u63d0\u4f9b\u4e86": 681, "\u4e5f\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 699, "\u4e5f\u79f0\u4e3a": 693, "\u4e86\u89e3\u4e86\u4e0a\u8ff0\u8ba1\u7b97\u89c4\u5219\u540e": 711, "\u4e8c\u5206\u56fe\u662f\u4e00\u7c7b\u7279\u6b8a\u7684": 685, "\u4e8c\u5206\u56fe\u7684\u60c5\u51b5": 706, "\u4ea4\u53c9\u71b5\u635f\u5931": 712, "\u4eba\u4eec\u81ea\u7136\u4f1a\u60f3\u8981\u5728\u6a21\u578b\u5f00\u53d1\u4e2d\u4f7f\u7528\u5b83\u4eec": 710, "\u4ec5\u4ec5\u4fdd\u7559\u4e86\u8f93\u51fa\u8282\u70b9\u6240\u9700\u8981\u6536\u96c6\u6d88\u606f\u7684\u8fb9": 698, "\u4ec5\u5141\u8bb8\u4f7f\u7528\u6570\u503c\u7c7b\u578b": 687, "\u4ec5\u6709\u7684\u4ee3\u7801\u4fee\u6539\u51fa\u73b0\u5728\u7b2c4": 680, "\u4ecd\u7136\u5177\u6709\u76f8\u540c\u7684\u7ed3\u679c": 711, "\u4ece": [675, 698], "\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230": 698, "\u4ece\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa": 698, "\u4ece\u5185\u5b58\u89d2\u5ea6\u6765\u8bf4\u662f\u9ad8\u6548\u7684": 694, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [678, 684, 689, 691], "\u4ece\u5de6\u81f3\u53f3": 711, "\u4ece\u6210\u5bf9\u7684\u8fb9": 686, "\u4ece\u7528\u4e8e\u56fe\u548c\u7a00\u758f\u77e9\u9635\u7684\u5916\u90e8python\u5e93": 686, "\u4ece\u76ee\u5f55": 679, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe\u6570\u636e": 686, "\u4ece\u800c\u4ea7\u751f\u5305\u542b\u8fb9\u5c0f\u6279\u6b21\u7684\u5b50\u56fe\u4ee5\u53ca\u4f9b\u4e0b\u6587\u4e2d\u6a21\u5757\u4f7f\u7528\u7684": 699, "\u4ece\u800c\u4ee5\u5c0f\u6279\u6b21\u904d\u5386\u6574\u4e2a\u56fe\u6570\u636e\u96c6": 711, "\u4ece\u800c\u51cf\u5c11\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u7f51\u7edc\u901a\u4fe1": 682, "\u4ece\u800c\u5b8c\u6210\u540e\u5411\u4f20\u64ad": 713, "\u4ece\u800c\u5bfc\u81f4\u591a\u6b21\u521b\u5efa\u548c\u5220\u9664": 681, "\u4ece\u800c\u8fdb\u4e00\u6b65\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u5e76\u8282\u7701\u5185\u5b58\u5360\u7528": 694, "\u4ece\u8f93\u51fa\u5f00\u59cb": 697, "\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u6d88\u606f\u4f20\u9012\u5747\u4f7f\u7528": 706, "\u4ee3\u7801\u5b9e\u73b0\u7684\u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u8c03\u7528": 699, "\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u8bfb": 702, "\u4ee3\u7801\u91cc\u79fb\u9664\u4e86\u5f52\u4e00\u5316": 702, "\u4ee3\u8868\u8ba1\u7b97": 703, "\u4ee5\u4e0a3\u79cd\u56fe\u7c7b\u578b\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u76f8\u540c\u7684": 706, "\u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u73b0\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684": 694, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u5f20\u91cf": 681, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e862\u4e2a\u8282\u70b9\u7279\u5f81": 687, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u6570\u636e\u52a0\u8f7d\u5668": 699, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u7684": 703, "\u4ee5\u4e0b\u4ee3\u7801\u5728\u6ce8\u91ca\u91cc\u4fdd\u7559\u4e86\u6574\u56fe\u5b9e\u73b0\u7684\u8bed\u53e5": 702, "\u4ee5\u4e0b\u4ee3\u7801\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f8b\u5b50": 710, "\u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5728": 676, "\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4e3a": 677, "\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5bf9\u6bcf\u79cd\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a\u53d6\u5e73\u5747\u503c\u5e76\u6c42\u548c": 711, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u4e3a\u4ecescipy\u7a00\u758f\u77e9\u9635\u548cnetworkx\u56fe\u521b\u5efadgl\u56fe\u7684\u793a\u4f8b": 686, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u5b9e\u73b0\u4e86\u901a\u8fc7\u5408\u5e76\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u5e76\u5c06\u5176\u6620\u5c04\u5230\u5168\u8fde\u63a5\u5c42\u6765\u9884\u6d4b\u8fb9\u7684\u5f97\u5206": 699, "\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210\u4e86\u4e00\u4e2a\u968f\u673a\u56fe\u7528\u4e8e\u6f14\u793a\u8fb9\u5206\u7c7b": 709, "\u4ee5\u4e0b\u4ee3\u7801\u7528\u4e86": 709, "\u4ee5\u4e0b\u4ee3\u7801\u7531\u4e8e\u8f93\u51fa\u8282\u70b9\u672a\u8986\u76d6\u6240\u6709\u8fd9\u4e9b\u8282\u70b9": 698, "\u4ee5\u4e0b\u4ee3\u7801\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u5206\u5e03\u5f0f\u65b9\u5f0f\u8bad\u7ec3graphsage\u7684\u793a\u4f8b": 680, "\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86": 711, "\u4ee5\u4e0b\u5185\u5bb9\u8bf4\u660e\u4e86\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f": 674, "\u4ee5\u4e0b\u56fe\u4e3a\u4f8b": 698, "\u4ee5\u4e0b\u5c0f\u8282\u5c06\u9010\u4e00\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4": 703, "\u4ee5\u4e0b\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9\u5747\u5300\u91c7\u68375\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 701, "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50": 695, "\u4ee5\u4e0b\u793a\u4f8b\u5c06\u8bad\u7ec3\u96c6\u5185\u548c\u8bad\u7ec3\u96c6\u5916\u7684\u8282\u70b9\u770b\u4f5c\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 682, "\u4ee5\u4e0b\u9762\u7528\u4e8e\u5168\u56fe\u7684gnn\u6a21\u5757\u4e3a\u4f8b": 702, "\u4ee5\u4e0b\u9762\u7684\u81ea\u5b9a\u4e49\u56fe\u5377\u79ef\u6a21\u5757\u4ee3\u7801\u4e3a\u4f8b": 702, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u5b50\u56fe\u7ed3\u6784": 682, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8282\u70b9\u7279\u5f81": 682, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8fb9\u7279\u5f81": 682, "\u4ee5\u4fbf\u533a\u5206": 699, "\u4ee5\u4fbf\u5b83\u4e5f\u53ef\u4ee5\u5728\u5f02\u6784\u56fe\u4e0a\u4f7f\u7528": 698, "\u4ee5\u4fbf\u6bcf\u4e2a\u8bad\u7ec3\u5668\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bad\u7ec3\u96c6\u5b50\u96c6": 681, "\u4ee5\u50a8\u5b58\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u5c5e\u6027": 687, "\u4ee5\u5145\u5206\u5229\u7528": 706, "\u4ee5\u5229\u7528\u66f4\u5927\u8303\u56f4\u7684\u90bb\u5c45\u4fe1\u606f": 713, "\u4ee5\u53ca": 680, "\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6267\u884c\u7684\u8ba1\u7b97": 684, "\u4ee5\u53ca\u53ef\u5b9a\u5236\u7684\u805a\u5408\u51fd\u6570\u548c\u975e\u7ebf\u6027\u51fd\u6570": 713, "\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5e26\u6709\u6d88\u606f\u4f20\u9012\u7684gnn\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282": 713, "\u4ee5\u53ca\u60f3\u8981\u4e86\u89e3\u5982\u4f55\u5728\u5c0f\u6279\u6b21\u6570\u636e\u4e0a\u8fdb\u884c\u8bc4\u4f30\u548c\u63a8\u7406\u6a21\u578b\u7684\u7528\u6237": 697, "\u4ee5\u53ca\u628a\u5b83\u4eec\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\u7684\u7c7b\u578b\u8fdb\u884c\u5408\u5e76\u540e\u7684\u5355\u4e00\u8fb9\u7c7b\u578b": 709, "\u4ee5\u53ca\u6765\u81ea\u8f93\u5165\u8282\u70b9\u7684\u8868\u793a\u5982\u4f55\u4f20\u64ad\u5230\u8f93\u51fa\u8282\u70b9": 703, "\u4ee5\u53ca\u7531\u5c0f\u6279\u6b21\u8fb9\u5bfc\u51fa\u7684\u539f\u59cb\u56fe\u7684\u5b50\u56fe": 699, "\u4ee5\u53ca\u8ba1\u7b97\u5176\u4e24\u7aef\u8282\u70b9\u8868\u793a\u6240\u9700\u7684\u5757\u5217\u8868": 699, "\u4ee5\u53ca\u8bf8\u5982\u7c7b\u522b\u6570": 675, "\u4ee5\u53ca\u8d1f\u91c7\u6837\u5668": 701, "\u4ee5\u53ca\u8fb9\u7684\u6807\u7b7e": 709, "\u4ee5\u591a\u5c42gcn\u4e3a\u4f8b": 703, "\u4ee5\u5bfc\u5165\u6570\u636e\u7684\u7279\u5b9a\u90e8\u5206": 678, "\u4ee5\u5c06\u4efb\u4f55\u8fb9\u754c\u8f6c\u6362\u4e3a\u5757": 698, "\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u7ec4\u8fb9\u8fdb\u884c\u8fed\u4ee3": 699, "\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u548c\u7f51\u7edc\u901a\u4fe1": 680, "\u4ee5\u652f\u6301\u9700\u8981\u8282\u70b9\u5d4c\u5165\u7684\u76f4\u63a8": 681, "\u4ee5\u67e5\u770b\u5982\u4f55\u4ece\u5916\u90e8\u6570\u636e\u6e90\u6784\u5efa\u56fe\u7684\u5b8c\u6574\u6307\u5357": 678, "\u4ee5\u6982\u7387p\u968f\u673a\u9009\u62e9\u8fb9": 698, "\u4ee5\u7a81\u51fa\u5c55\u793a\u7528\u4e8e\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 678, "\u4ee5\u83b7\u5f97": 678, "\u4ee5\u8868\u683c\u683c\u5f0f\u50a8\u5b58\u8282\u70b9": 686, "\u4ee5\u8bbf\u95ee\u7fa4\u96c6\u4e2d\u7684\u5206\u533a\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 681, "\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 681, "\u4ee5\u8fdb\u884c\u8fed\u4ee3": 678, "\u4ee5\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 698, "\u4ee5\u907f\u514d\u91c7\u6837\u6240\u5e26\u6765\u7684\u968f\u673a\u6027": 700, "\u4ee5\u9632\u4f5c\u8005\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u66f4\u6539\u4e86\u6587\u4ef6": 676, "\u4efb\u4f55\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u4ee5\u7528\u4f5c\u8fb9\u754c": 698, "\u4efb\u4f55\u6d89\u53cagpu\u56fe\u7684\u64cd\u4f5c\u90fd\u662f\u5728gpu\u4e0a\u8fd0\u884c\u7684": 688, "\u4efb\u52a1": 712, "\u4efb\u52a1\u52a0\u8f7d\u6570\u636e\u96c6": 677, "\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u4e00\u6b65\u805a\u5408": 707, "\u4f1a\u6839\u636eip\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u5bf9\u5e94\u7684\u8ba1\u7b97\u673a\u6765\u5b58\u50a8\u56fe\u5206\u533a": 683, "\u4f1a\u7ed3\u5408\u805a\u5408\u540e\u7684\u6d88\u606f\u548c\u8282\u70b9\u672c\u8eab\u7684\u7279\u5f81\u6765\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 692, "\u4f1a\u805a\u5408\u8282\u70b9\u63a5\u53d7\u5230\u7684\u6d88\u606f": 692, "\u4f1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684": 707, "\u4f1a\u975e\u5e38\u6d88\u8017\u8d44\u6e90": 700, "\u4f20\u7ed9": 682, "\u4f46\u4e0d\u540c\u7684\u662f": 711, "\u4f46\u4e0d\u652f\u6301\u4e00\u4e9b\u8ba1\u7b97\u8fd0\u7b97\u7b26": 681, "\u4f46\u5176\u57fa\u672c\u601d\u60f3\u548c\u672c\u7ae0\u63cf\u8ff0\u7684\u6d41\u7a0b\u662f\u4e00\u81f4\u7684": 709, "\u4f46\u53ea\u5bf9\u4e00\u5c42\u8fdb\u884c\u8ba1\u7b97": 700, "\u4f46\u5b83\u6bcf\u6b21\u53ea\u4e3a\u4e00\u5c42\u8fdb\u884c\u91c7\u6837": 700, "\u4f46\u662f": [698, 706], "\u4f46\u662f\u4efb\u4f55\u62e5\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u7528\u4f5c\u8fb9\u754c": 698, "\u4f46\u6709\u65f6\u7528\u6237\u8fd8\u662f\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u91c7\u6837\u5668": 698, "\u4f46\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u79cd\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe\u5bf9\u8c61": 677, "\u4f46\u8fd8\u662f\u6709\u4e00\u4e9b\u660e\u663e\u7684\u533a\u522b": 699, "\u4f4d\u4e8e\u8282\u70b9\u5217\u8868\u7684\u6700\u524d\u9762": 706, "\u4f4d\u6216": 689, "\u4f4d\u6574\u6570": 689, "\u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u8282\u70b9id\u548c\u8fb9id": 689, "\u4f5c\u4e3a\u4e00\u4e2a\u672a\u7ecf\u8fc7\u5f52\u4e00\u5316\u7684\u7c7b\u522b\u7684\u5206\u5e03": 709, "\u4f5c\u4e3a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u5982\u4f55\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684dgl": 704, "\u4f5c\u4e3a\u5165\u53c2": 701, "\u4f5c\u4e3a\u53c2\u6570": 703, "\u4f5c\u4e3a\u6f14\u793a\u7684\u6837\u4f8b\u4ee3\u7801": 713, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e": 681, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e\u4e4b\u4e00\u6dfb\u52a0\u5230": 681, "\u4f5c\u4e3a\u8282\u70b9\u8868\u793a\u8ba1\u7b97\u6a21\u578b\u4ee5\u53ca\u524d\u4e00\u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684": 709, "\u4f5c\u4e3a\u8f93\u5165": 698, "\u4f5c\u4e3a\u8fb9\u9884\u6d4b\u6a21\u578b": 709, "\u4f5c\u5f0a": 699, "\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9": 678, "\u4f7f\u7528": 681, "\u4f7f\u7528dgl": 711, "\u4f7f\u7528int32\u6784\u5efa\u56fe": 689, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": [674, 691], "\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 693, "\u4f7f\u7528\u5e73\u5747\u8bfb\u51fa\u8ba1\u7b97\u56fe\u8868\u793a": 711, "\u4f7f\u7528\u5e95\u5c42api\u65f6": 681, "\u4f7f\u7528\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 713, "\u4f7f\u7528\u6240\u6709\u8282\u70b9": 713, "\u4f7f\u7528\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 713, "\u4f7f\u7528\u6709\u5411\u7684networkx\u56fe": 686, "\u4f7f\u7528\u6a21\u578b\u65f6\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u8282\u70b9\u7c7b\u578b\u548c\u6570\u636e\u7279\u5f81\u7684\u5b57\u5178": 709, "\u4f7f\u7528\u8be5\u540d\u79f0\u6765\u8bc6\u522b\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u56fe": 682, "\u4f7f\u7528\u8d1f\u91c7\u6837\u65b9\u6cd5\u540e": 701, "\u4f7f\u7528\u8fd9\u6837\u7684": 681, "\u4f8b\u5982": [679, 681, 682, 683, 684, 685, 687, 690, 693, 696, 698, 699, 701, 702, 703, 705, 709, 710, 711, 712, 713], "\u4f8b\u5982nf": 683, "\u4f8b\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7fa4\u793e\u533a": 711, "\u4f8b\u5982\u4f7f\u7528": 711, "\u4f8b\u5982\u5728\u4e0b\u56fe\u4e2d": 690, "\u4f8b\u5982\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b": 681, "\u4f8b\u5982\u60f3\u5728\u67d0\u4e00\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u5206\u7c7b\u4efb\u52a1": 709, "\u4f8b\u5982\u6c42\u548c\u4ee5\u53ca\u6c42\u5747\u503c": 681, "\u4f8b\u5982\u8282\u70b9\u548c\u8fb9\u7684\u6570\u91cf": 681, "\u4f9d\u6279\u6b21\u5bf9\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3": 700, "\u4fdd\u5b58dglgraph\u5bf9\u8c61\u548c\u6807\u7b7e\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 679, "\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 679, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [674, 675, 691], "\u4fdd\u5b58\u56fe\u548c\u6807\u7b7e": 679, "\u4fdd\u5b58\u8bad\u7ec3\u597d\u7684\u6a21\u578b": 713, "\u4fdd\u7559\u5173\u7cfb": 690, "\u4fee\u6539\u6a21\u578b\u8bad\u7ec3\u5faa\u73af\u90e8\u5206": 703, "\u501f\u7528\u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u5c0f\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5": 711, "\u503c\u4e3a\u4e00\u7684\u5143\u7d20\u8868\u793a\u4e00\u6761\u8fb9": 710, "\u503c\u4e3a\u4f5c\u7528\u5728\u8be5\u5173\u7cfb\u4e0ann\u6a21\u5757\u5bf9\u8c61": 707, "\u503c\u5219\u4e3a\u5bf9\u5e94nn\u6a21\u5757\u7684\u81ea\u5b9a\u4e49\u53c2\u6570": 707, "\u503c\u662f\u8fd9\u79cd\u5173\u7cfb\u5bf9\u5e94": 695, "\u5047\u5b9agraph": 710, "\u5047\u8bbe\u6279\u6b21\u5927\u5c0f\u4e3a": 711, "\u5047\u8bbe\u6709\u5982\u4e0b\u7684\u8fb9\u754c": 698, "\u5047\u8bbe\u7ea2\u8272\u8282\u70b9\u4e3a\u9700\u8981\u66f4\u65b0\u7684\u76ee\u6807\u8282\u70b9": 698, "\u5047\u8bbe\u8282\u70b9": 692, "\u5047\u8bbe\u8981\u4f7f\u75282\u5c42gnn\u8ba1\u7b97\u79cd\u5b50\u8282\u70b98": 698, "\u5143\u7d20\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8fb9\u7c7b\u578b": 711, "\u5143\u7ec4\u4e2d\u7684\u7b2c1\u4e2a\u5143\u7d20\u4e3a\u6e90\u8282\u70b9\u7279\u5f81": 706, "\u5148\u6765\u770b\u4e00\u4e0b": 698, "\u5168\u56fe": 713, "\u51713\u4e2a\u6210\u5458\u5c5e\u6027": 693, "\u5173\u4e8e": 687, "\u5173\u4e8edgl\u5185\u7f6e\u56fe\u5377\u79ef\u6a21\u5757\u7684\u5b8c\u6574\u5217\u8868": 713, "\u5173\u4e8e\u5185\u7f6e\u51fd\u6570\u7684\u5217\u8868": 693, "\u5173\u4e8e\u5185\u7f6e\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5": 701, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [684, 691], "\u5173\u4e8e\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u8fdb\u9636\u7528\u6cd5": 693, "\u5173\u6ce8": [690, 699], "\u5173\u7cfb": 699, "\u5173\u7cfb\u53ef\u4ee5\u662f\u65e0\u5411\u7684": 685, "\u5173\u7cfb\u8868\u793a\u4e3a": 706, "\u5176\u4e2d": [682, 689, 694, 698, 707, 711, 712], "\u5176\u4e2dxxx\u662f\u63d0\u4f9b\u7ed9\u5212\u5206api\u7684\u56fe\u7684\u540d\u79f0": 682, "\u5176\u4e2d\u4e00\u4e9b\u4ee3\u7801\u6f14\u793a\u4e86\u67e5\u8be2\u56fe\u7ed3\u6784\u7684\u90e8\u5206api\u7684\u4f7f\u7528\u65b9\u6cd5": 689, "\u5176\u4e2d\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u6a21\u5757\u7ec4\u4ef6": 711, "\u5176\u4e2d\u5305\u542b\u6240\u6709\u8d1f\u91c7\u6837\u7684\u8282\u70b9\u5bf9\u4f5c\u4e3a\u8fb9": 712, "\u5176\u4e2d\u5305\u542b\u6709\u5173\u8f93\u5165\u56fe\u7684\u6240\u6709\u4fe1\u606f": 681, "\u5176\u4e2d\u5305\u542b\u7531\u8d1f\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u6240\u6709\u4e0d\u5b58\u5728\u7684\u8fb9": 701, "\u5176\u4e2d\u5305\u542b\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u5185\u6240\u6709\u7684\u8fb9": 701, "\u5176\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b": 681, "\u5176\u4e2d\u7684\u8fb9\u8fde\u63a5\u4e24\u7c7b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 685, "\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8fb9\u754c": 698, "\u5176\u4e2d\u7ea2\u8272\u548c\u7eff\u8272\u8282\u70b9": 698, "\u5176\u4e2d\u8282\u70b9\u548c\u8fb9\u53ef\u4ee5\u662f\u6709\u7c7b\u578b\u7684": 684, "\u5176\u4f59\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8": 680, "\u5176\u503c\u4e3a\u6bcf\u4e2a\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 707, "\u5176\u6570\u5b66\u5b9a\u4e49\u4e3a": 707, "\u5176\u6700\u7ec8\u8868\u793a\u5c06\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c": 697, "\u5176\u6b21": 711, "\u5176\u6d88\u606f\u4f20\u9012\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b": 698, "\u5176\u7ed3\u679c": 688, "\u5176\u7ed3\u679c\u662f": 700, "\u5176\u884c\u4e3a\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u975e\u5e38\u76f8\u4f3c": 681, "\u5176\u9002\u7528\u4e8e\u5355\u5411\u4e8c\u5206\u56fe": 702, "\u5176\u952e\u4e3a": 707, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 676, "\u5177\u4f53\u5982\u4e0b\u6240\u793a": 713, "\u5177\u4f53\u6765\u8bf4": [680, 700], "\u5177\u4f53\u884c\u4e3a\u5982\u4e0b": 690, "\u5177\u6709\u5bf9\u96c6\u7fa4\u5185\u6240\u6709\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u65e0\u5bc6\u7801ssh\u8bbf\u95ee\u6743\u9650": 683, "\u5177\u6709\u76f8\u540c\u7684\u952e": 707, "\u5185\u7f6e\u51fd\u6570": 693, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": [691, 692], "\u5185\u7f6e\u6d88\u606f\u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u5143\u51fd\u6570\u6216\u4e8c\u5143\u51fd\u6570": 693, "\u5185\u7f6e\u7684dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u7684\u8f93\u5165\u56fe\u53ca\u7279\u5f81\u5fc5\u987b\u6ee1\u8db3\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00": 702, "\u518d\u5c06": 693, "\u518d\u6784\u5efa\u4e00\u4e2a\u5173\u7cfb\u5b57\u5178": 690, "\u518d\u6b21\u63d0\u9192\u4e0b": 703, "\u518d\u7531\u8fb9\u754c\u8f6c\u6362\u6210\u5757": 698, "\u51c6\u5907\u4e00\u4e2a\u6279\u6b21\u7684\u56fe": 711, "\u51fa\u4e8e\u5efa\u6a21\u7684\u76ee\u7684": 690, "\u51fd\u6570": [678, 689, 690, 693, 706, 711], "\u51fd\u6570\u4e2d\u5b9e\u73b0\u6570\u636e\u5904\u7406": 678, "\u51fd\u6570\u6267\u884c\u4e86\u5b9e\u9645\u7684\u6d88\u606f\u4f20\u9012\u548c\u8ba1\u7b97": 706, "\u51fd\u6570\u662f\u57fa\u4e8e\u5747\u5300\u5206\u5e03\u7684\u91c7\u6837\u51fd\u6570": 701, "\u51fd\u6570\u6765\u5728\u8fd0\u884c\u65f6\u62c6\u5206\u8bad\u7ec3": 681, "\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684": 689, "\u51fd\u6570\u6765\u6784\u5efa\u4e00\u4e2a": 689, "\u51fd\u6570\u7684\u5185\u5bb9\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a3\u9879\u64cd\u4f5c": 706, "\u51fd\u6570\u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u5728\u5b8c\u6210\u6d88\u606f\u805a\u5408\u540e\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 706, "\u51fd\u6570\u7684\u8f93\u5165\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 709, "\u51fd\u6570\u7684\u8f93\u51fa\u4e0d\u4f1a\u5168\u4e3a0": 706, "\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u7684\u5bf9\u8c61": 707, "\u51fd\u6570\u805a\u5408\u6765\u81ea\u591a\u4e2a\u5173\u7cfb\u7684\u7ed3\u679c": 707, "\u51fd\u6570\u8fd8\u4f7f\u75282\u4e2a\u989d\u5916\u7684\u5b57\u5178\u53c2\u6570": 707, "\u51fd\u6570\u8fdb\u884c\u89e3\u538b\u7f29": 676, "\u51fd\u6570\u9700\u8981\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u8f93\u5165\u56fe\u7c7b\u578b": 707, "\u51fd\u6570\u9700\u8981\u5904\u7406\u8f93\u5165\u7684\u8bb8\u591a\u6781\u7aef\u60c5\u51b5": 706, "\u5206\u522b\u5728\u7b2c8": 687, "\u5206\u522b\u662f\u53ef\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u51fd\u6570\u4e0e\u805a\u5408\u51fd\u6570": 698, "\u5206\u522b\u662f\u77e9\u9635": 694, "\u5206\u522b\u7528\u4e8e\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5f02\u6784\u56fe\u548c\u52a0\u8f7d\u5b83\u4eec": 690, "\u5206\u522b\u7528\u4e8e\u8bbf\u95ee\u6e90\u8282\u70b9": 693, "\u5206\u533a": [680, 682], "\u5206\u533a0\u7684\u6570\u636e": 682, "\u5206\u533a1\u7684\u6570\u636e": 682, "\u5206\u533a\u6570\u636e\u548c\u8bad\u7ec3\u811a\u672c\u90fd\u5df2\u88ab\u590d\u5236\u5230\u96c6\u7fa4\u6216\u5b58\u5728\u96c6\u7fa4\u4e2d\u6240\u6709\u8ba1\u7b97\u673a\u5747\u53ef\u8bbf\u95ee\u7684\u5168\u5c40\u5b58\u50a8\u7a7a\u95f4": 683, "\u5206\u533a\u914d\u7f6e\u6587\u4ef6\u4ee5\u53ca\u56fe\u5206\u533a": 683, "\u5206\u5e03\u5f0f\u5d4c\u5165\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u5f20\u91cf\u4e4b\u4e0a": 681, "\u5206\u5e03\u5f0f\u5d4c\u5165\u7684\u521b\u5efa\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684\u521b\u5efa\u975e\u5e38\u76f8\u4f3c": 681, "\u5206\u5e03\u5f0f\u5f20\u91cf\u5fc5\u987b\u4e0e\u56fe\u7684\u8282\u70b9\u6216\u8fb9\u76f8\u5173\u8054": 681, "\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668\u5177\u6709\u4e0epytorch": 681, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u548c\u72ec\u7acb\u6a21\u5f0f": 681, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": [680, 691], "\u5206\u5e03\u5f0f\u8bad\u7ec3": 691, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u5c06\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u5206\u533a": 683, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [680, 691], "\u5206\u5e03\u5f0f\u91c7\u6837\u548c\u6570\u636e\u5206\u5272": 681, "\u5206\u5e03\u5f0f\u91c7\u6837\u6a21\u5757\u9075\u5faa\u76f8\u540c\u7684\u8bbe\u8ba1": 681, "\u5206\u914did\u540e": 682, "\u5206\u914d\u7ed9": 681, "\u5207\u7247\u53d6\u8f93\u5165\u7279\u5f81\u7684\u524d\u51e0\u884c": 702, "\u5207\u7247\u884c\u6570\u53ef\u4ee5\u901a\u8fc7": 702, "\u5212\u5206api\u901a\u8fc7\u5728": 682, "\u5212\u5206\u6216\u7279\u5f81\u5f52\u4e00\u5316\u7b49\u64cd\u4f5c\u5efa\u8bae\u5728": 675, "\u5212\u5206\u63a9\u7801": 678, "\u5217\u8868": 677, "\u5219": 681, "\u5219dgl\u4f1a\u81ea\u52a8\u5c06\u8f93\u5165\u8282\u70b9\u7279\u5f81\u524d\u4e00\u90e8\u5206\u8bbe\u4e3a\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 702, "\u5219dgl\u5141\u8bb8\u4f7f\u7528": 690, "\u5219\u4e0d\u9700\u8981\u6307\u5b9a\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b": 690, "\u5219\u53ea\u9700\u8981\u6309\u7167\u5982\u4e0b\u7684\u65b9\u6cd5\u91cd\u5199forward\u51fd\u6570": 702, "\u5219\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6d88\u606f\u6216\u805a\u5408\u51fd\u6570": 693, "\u5219\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u7b80\u5355\u5730\u5b9a\u4e49\u91c7\u6837\u5668": 698, "\u5219\u53ef\u4ee5\u6dfb\u52a0\u53c2\u6570": 678, "\u5219\u53ef\u4ee5\u901a\u8fc7": 703, "\u5219\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u76f4\u63a5\u8bfb\u53d6\u5757\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 698, "\u5219\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u51fd\u6570": 676, "\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee": 703, "\u5219\u56fe\u8bfb\u51fa\u7684\u5f20\u91cf\u5f62\u72b6\u4e3a": 711, "\u5219\u5b83\u4e5f\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55": 676, "\u5219\u6307\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u7ed3\u679c": 707, "\u5219\u6a21\u578b\u5728\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3\u65f6\u53ea\u9700\u505a\u5f88\u5c0f\u7684\u8c03\u6574": 703, "\u5219\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u8fb9\u7c7b\u578b\u53ca\u5176\u53cd\u5411\u8fb9\u7c7b\u578b\u4e4b\u95f4\u7684\u6620\u5c04": 699, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u5411\u4e8c\u5206\u56fe": 702, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u540c\u6784\u56fe": 702, "\u5219\u8fb9\u662f\u65e0\u5411\u7684": 685, "\u5219\u8fb9\u662f\u6709\u5411\u7684": 685, "\u5219\u901a\u5e38\u4e0d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7cbe\u786e\u7684\u79bb\u7ebf\u63a8\u65ad": 700, "\u5219\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u4f18\u5316\u5668": 681, "\u5219\u9ed8\u8ba4\u503c\u4e3a": 683, "\u521b\u5efa": 678, "\u521b\u5efa\u4e00\u4e2a": 689, "\u521b\u5efa\u4e00\u4e2a\u5177\u67093\u79cd\u8282\u70b9\u7c7b\u578b\u548c3\u79cd\u8fb9\u7c7b\u578b\u7684\u5f02\u6784\u56fe": 690, "\u521b\u5efa\u5206\u5e03\u5f0f\u56fe\u5bf9\u8c61": 680, "\u521b\u5efa\u5d4c\u5165\u65f6": 681, "\u521b\u5efa\u800c\u6765": 686, "\u521b\u5efa\u91c7\u6837\u5668": 680, "\u521b\u5efa\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u793a\u4f8b": 678, "\u521d\u59cb\u5316api\u5e94\u6309\u4ee5\u4e0b\u987a\u5e8f\u8c03\u7528": 681, "\u521d\u59cb\u5316dgl\u7684\u5206\u5e03\u5f0f\u6a21\u5757": 680, "\u521d\u59cb\u5316\u53c2\u6570": 705, "\u521d\u59cb\u56fe\u548c\u8981\u8ba1\u7b97\u8868\u793a\u7684\u8282\u70b9": 698, "\u5220\u9664\u5c0f\u6279\u6b21\u4e2d\u7684\u8fb9\u53ca\u5176\u53cd\u5411\u8fb9\u7684\u65b9\u6cd5\u5982\u4e0b": 699, "\u5229\u7528\u8282\u70b9\u81ea\u8eab\u7684\u7279\u5f81\u548c\u5176\u90bb\u8282\u70b9\u53ca\u8fb9\u7684\u7279\u5f81\u6765\u8ba1\u7b97\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 713, "\u5229\u7528\u8fd9\u4e9b\u4f18\u5316\u7684\u4e00\u4e2a\u5e38\u89c1\u5b9e\u8df5\u662f\u901a\u8fc7\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 694, "\u5230": [689, 709], "\u524d\u8005\u5728": 681, "\u524d\u9762\u7ae0\u8282\u91cc\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7528\u5728\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 698, "\u5269\u4f59\u90e8\u5206\u7684\u8bad\u7ec3\u4ee3\u7801\u548c\u540c\u6784\u56fe\u4ee3\u7801\u76f8\u540c": 711, "\u52a0\u6743\u7684": 685, "\u52a0\u6cd5\u53ef\u4ee5\u901a\u8fc7dgl\u7684\u5185\u7f6e\u51fd\u6570": 694, "\u52a0\u8f7d": 677, "\u5305\u542b\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b": 702, "\u5305\u542b\u4e86\u6bcf\u4e2agnn\u5c42\u8981\u8ba1\u7b97\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u51fa": 703, "\u5305\u542b\u4e86\u96c6\u7fa4\u4e2d\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 683, "\u5305\u542b\u591a\u4e2a\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u7c7b": 680, "\u5305\u542b\u90bb\u5c45\u91c7\u6837\u548c\u6d88\u606f\u4f20\u9012": 700, "\u5305\u62ec": [680, 686, 706], "\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e": 712, "\u5305\u62ec\u5206\u533a\u4e2d\u7684\u56fe\u7ed3\u6784": 681, "\u5305\u62ec\u81ea\u5faa\u73af\u7684\u8fb9": 685, "\u5305\u62ec\u8bbf\u95ee\u8282\u70b9": 681, "\u5305\u63d0\u4f9b\u4e86\u7528\u4e8e\u4e0b\u8f7d\u548c\u5904\u7406ogb\u6570\u636e\u96c6\u5230": 677, "\u533a\u522b\u53ea\u5728\u4e8e\u8282\u70b9\u88ab\u5212\u5206\u4e3a\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 702, "\u5355\u5411\u4e8c\u5206\u56fe": 702, "\u5355\u72ec\u8c03\u7528\u9010\u8fb9\u8ba1\u7b97": 693, "\u5373": [694, 698, 710], "\u5373\u4e00\u7ec4\u673a\u5668": 680, "\u5373\u4efb\u610f\u4e24\u4e2a\u56fe\u4e4b\u95f4\u6ca1\u6709\u8fb9\u8fde\u63a5": 711, "\u5373\u4f7f": 681, "\u5373\u6267\u884c": 694, "\u5373\u6839\u636e\u7ed3\u6784\u548c\u6574\u4f53\u4fe1\u606f\u5bf9\u56fe\u8fdb\u884c\u5206\u7c7b": 711, "\u5373\u6b63\u786e\u7684\u6807\u6ce8": 713, "\u5373\u6bcf\u4e2a\u884c\u5207\u7247\u50a8\u5b581\u4e2a\u8282\u70b9\u62161\u6761\u8fb9\u7684\u7279\u5f81": 687, "\u5373\u8282\u70b94": 698, "\u5373\u8fb9": 689, "\u5373\u9884\u6d4b\u4efb\u52a1\u6570": 678, "\u539f\u5219\u662f\u5c06": 702, "\u539f\u56e0\u662f\u6d88\u606f\u4f20\u9012\u540e\u7684\u7279\u5f81\u7ec4\u5408\u9700\u8981\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u8282\u70b9\u8868\u793a": 698, "\u539f\u56e0\u662f\u8fd9\u9700\u8981\u4e3a\u6bcf\u4e00\u5c42\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u8868\u793a": 700, "\u539f\u56fe\u4e0a\u7684\u5176\u4ed6\u8282\u70b9\u662f\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u7684": 698, "\u539f\u59cb\u7279\u5f81\u5728cpu\u4e0a": 688, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8282\u70b9id": 690, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8fb9id": 690, "\u539f\u59cb\u7684\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684id\u88ab\u5b58\u50a8\u5728": 690, "\u539f\u59cb\u8282\u70b9\u7c7b\u578b": 690, "\u539f\u59cb\u8fb9\u7c7b\u578b": 690, "\u53c2\u6570": 707, "\u53c2\u8003\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7b2c16\u548c18\u884c": 687, "\u53c2\u8003\u624b\u518c\u63d0\u4f9b\u4e86\u8be5\u7528\u6cd5\u7684\u66f4\u591a\u7ec6\u8282": 686, "\u53c2\u8003\u7528\u6237\u6307\u5357": 695, "\u53c2\u89c1": [693, 702], "\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u548c\u6574\u578b": 687, "\u53cd\u5411\u8fb9\u901a\u5e38\u5177\u6709\u4e0e\u6b63\u5411\u8fb9\u672c\u8eab\u4e0d\u540c\u7684\u8fb9\u7c7b\u578b": 699, "\u53d6\u5e73\u5747\u503c": 711, "\u53d8\u91cf": 710, "\u53e6\u4e00\u4e2a\u5e94\u7528\u4e8e": 694, "\u53e6\u4e00\u4e2a\u7528\u4e8e\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 681, "\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 688, "\u53e6\u5916": [681, 683, 694], "\u53e6\u89c1": 686, "\u53ea\u4f7f\u7528": 690, "\u53ea\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u5305\u62ec\u8282\u70b9\u8868\u793a\u7684\u5b57\u5178\u6765\u8ba1\u7b97\u9884\u6d4b\u503c": 713, "\u53ea\u8981\u4f7f\u8fd4\u56de\u7684\u56fe\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9": 698, "\u53ea\u9700\u8981\u6309\u4e0b\u4f8b\u7f16\u5199\u4ee3\u7801": 709, "\u53ea\u9700\u8981\u8282\u70b94": 698, "\u53ea\u9700\u8981\u9884\u6d4b\u6bcf\u4e2a\u8fb9\u7684\u6807\u91cf\u5206\u6570\u800c\u4e0d\u662f\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03": 701, "\u53ef\u4ee5\u4ece\u5916\u90e8\u6765\u6e90\u6784\u9020\u4e00\u4e2a": 686, "\u53ef\u4ee5\u4f7f\u7528": [689, 698], "\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u56fe\u8868\u793a": 685, "\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e0a\u8ff0\u8fb9\u754c\u8f6c\u6362\u4e3a\u8f93\u51fa\u8282\u70b9\u4e3a8\u7684\u5757": 698, "\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4ee5\u4e0b\u4ee3\u7801\u7684\u65b9\u6cd5\u83b7\u53d6\u5355\u4e2a\u56fe\u6570\u636e\u96c6\u7684\u56fe\u6570\u636e": 708, "\u53ef\u4ee5\u5148\u62bd\u53d6\u5f02\u6784\u56fe\u7684\u8fb9\u7c7b\u578b\u5b50\u56fe": 690, "\u53ef\u4ee5\u5148\u901a\u8fc7\u60f3\u8981\u56ca\u62ec\u7684\u8282\u70b9\u7f16\u53f7\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe": 696, "\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u7684\u5757": 698, "\u53ef\u4ee5\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c": 681, "\u53ef\u4ee5\u5982\u4e0b\u5b9a\u4e49\u94fe\u63a5\u9884\u6d4b\u6a21\u578b": 701, "\u53ef\u4ee5\u5b8c\u6210\u4e00\u8f6e\u6d88\u606f\u4f20\u9012\u8ba1\u7b97": 713, "\u53ef\u4ee5\u5c06\u5176\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4fee\u6539\u4ee5\u652f\u6301\u8fb9\u6743\u91cd": 710, "\u53ef\u4ee5\u5c06\u8be5\u7c7b\u578b\u6570\u636e\u52a0\u8f7d\u5230python\u5bf9\u8c61": 686, "\u53ef\u4ee5\u5f97\u5230\u591a\u5f20\u7528\u4e8e\u5206\u7c7b\u7684\u56fe": 711, "\u53ef\u4ee5\u627e\u5230": 706, "\u53ef\u4ee5\u63a5\u53d7\u975e\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570": 688, "\u53ef\u4ee5\u63d0\u9ad8\u8282\u70b9": 678, "\u53ef\u4ee5\u662f\u5f02\u6784\u56fe\u6216\u6765\u81ea\u5f02\u6784\u56fe\u7684\u5b50\u56fe\u533a\u5757": 707, "\u53ef\u4ee5\u7528\u4e8e\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u6a21\u5757": 681, "\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u8282\u70b9\u6536\u5230\u7684\u6d88\u606f": 693, "\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f": 676, "\u53ef\u4ee5\u8ba9\u7528\u6237\u4e0d\u7528\u4e00\u6b21\u6027\u628a\u6240\u6709\u8282\u70b9\u7279\u5f81\u62f7\u8d1d\u5230gpu\u4e0a": 697, "\u53ef\u4ee5\u901a\u8fc7": 698, "\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u552f\u4e00\u6807\u8bc6": 681, "\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u56fe\u5377\u79ef\u6a21\u5757\u6765\u5b9e\u73b0\u8fd9\u79cd\u7f51\u7edc\u67b6\u6784": 713, "\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c": 709, "\u53ef\u4ee5\u9075\u5faa\u76f8\u540c\u7684\u539f\u7406\u6765\u6784\u5efa\u56fe": 686, "\u53ef\u4ee5\u91cd\u5199\u4e0a\u9762\u7684": 698, "\u53ef\u547d\u540d\u7684\u7279\u5f81": 687, "\u53ef\u5c06\u6570\u636e\u548c\u8ba1\u7b97\u540c\u65f6\u5206\u5e03\u5728\u4e00\u7ec4\u8ba1\u7b97\u8d44\u6e90\u4e2d": 680, "\u53ef\u5c06\u6570\u636e\u590d\u5236\u5230\u96c6\u7fa4\u7684\u8ba1\u7b97\u673a\u4e0a": 680, "\u53ef\u6309\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u5b83\u7684\u4e24\u7aef\u8282\u70b9\u9690\u85cf\u8868\u793a\u7684\u70b9\u79ef\u6765\u4f5c\u4e3a\u5206\u6570": 709, "\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u5de5\u4f5c\u7684\u60f3\u6cd5\u90fd\u5f88\u7c7b\u4f3c": 712, "\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7ef4\u5ea6\u7684\u8868\u793a\u6765\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u5efa\u6a21": 695, "\u53ef\u9009": [674, 682, 691], "\u53ef\u907f\u514d\u8be5\u884c\u4e3a": 686, "\u5404\u79cd\u6570\u636e\u683c\u5f0f": 686, "\u5408\u5e76\u6210\u4e00\u79cd\u8fb9\u7684\u56fe": 709, "\u540c\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u53ef\u4ee5\u6709\u591a\u6761": 685, "\u540c\u65f6": [689, 698], "\u540c\u65f6dgl\u4e5f\u5efa\u8bae\u5b9e\u73b0\u4fdd\u5b58\u548c\u5bfc\u5165\u51fd\u6570": 675, "\u540c\u65f6\u4e5f\u652f\u6301\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u91c7\u6837\u7b56\u7565": 697, "\u540c\u65f6\u5c06\u8fb9id\u6620\u5c04\u5230\u5176\u53cd\u5411\u8fb9id": 699, "\u540c\u65f6\u5efa\u7acb\u53cd\u5411\u8fb9": 709, "\u540c\u65f6\u7701\u7565\u4e86\u8be6\u7ec6\u7684\u6570\u636e\u5904\u7406\u4ee3\u7801\u4ee5\u7a81\u51fa\u5c55\u793a\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 678, "\u540c\u6784\u56fe": 706, "\u540c\u6784\u56fe\u548c\u4e8c\u5206\u56fe\u53ea\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f02\u6784\u56fe": 690, "\u540c\u6784\u56fe\u548c\u5757": 702, "\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e4b\u95f4\u552f\u4e00\u7684\u5b9e\u73b0\u5dee\u5f02\u662f\u540e\u8005\u9700\u8981\u7528": 701, "\u540c\u6784\u56fe\u7684\u60c5\u51b5": 706, "\u540c\u6784\u7684": 685, "\u540c\u6837": [681, 703], "\u540c\u6837\u5730": 709, "\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 709, "\u540d\u79f0\u5c31\u5f88\u6709\u7528": 681, "\u540e": 711, "\u540e\u4e00\u79cd\u65b9\u6cd5\u6548\u7387\u9ad8\u5f97\u591a": 694, "\u540e\u7eed\u7ae0\u8282\u7684\u5185\u5bb9\u5747\u5047\u8bbe\u7528\u6237\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u56fe\u548c\u8282\u70b9": 708, "\u540e\u8005\u53ef\u4ee5\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u8fdb\u884c\u8fed\u4ee3": 703, "\u540e\u8005\u652f\u6301\u89e3\u538b\u7f29zip\u6587\u4ef6": 676, "\u5411\u524d": 699, "\u5411\u540e": 699, "\u5411\u91cf\u6216\u591a\u7ef4\u5f20\u91cf": 687, "\u5426\u5219": 699, "\u5426\u5219\u7528\u6237\u9700\u8981\u81ea\u5df1\u5b9e\u73b0": 676, "\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u7a7a\u95f4": 683, "\u542f\u52a8\u811a\u672c\u4f1a\u5728\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u6307\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u4efb\u52a1": 683, "\u542f\u52a8\u811a\u672c\u5728\u540e\u53f0\u542f\u52a8\u670d\u52a1\u5668": 681, "\u5434\u7d2b\u8587": 691, "\u548c": [675, 678, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 693, 694, 695, 698, 699, 700, 704, 705, 706, 707, 709, 711, 712, 713], "\u548c1\u4e2a\u8fb9\u7279\u5f81": 687, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 700, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 700, "\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9": 690, "\u548c\u4ece\u4e00\u4e2a\u4efb\u610f\u7684\u566a\u58f0\u5206\u5e03": 712, "\u548c\u5305\u542b\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u5757": 702, "\u548c\u5b50\u56fe\u5757": 706, "\u548c\u5b83\u4eec\u7684\u5173\u7cfb": 684, "\u548c\u5c0f\u6279\u91cf\u7684\u8fb9id\u6570\u7ec4": 701, "\u548c\u666e\u901a\u7684nn\u6a21\u5757\u4e00\u6837": 707, "\u548c\u7528\u4e8e\u5206\u5e03\u5f0f\u53ef\u5b66\u4e60\u5d4c\u5165\u7684": 681, "\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81": 706, "\u548c\u8282\u70b9\u5206\u7c7b\u4e00\u6837\u7684\u90bb\u5c45\u91c7\u6837\u5668": 699, "\u552f\u4e00\u7684\u533a\u522b\u662f\u5728\u8c03\u7528": 709, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4e3a\u8bad\u7ec3\u96c6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u7684\u5b57\u5178": 703, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528": [681, 699], "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u63d0\u4f9b\u8d1f\u91c7\u6837\u65b9\u6cd5": 701, "\u5546\u54c1": 685, "\u5546\u5bb6": 685, "\u56de\u5f52": [678, 691, 708, 712], "\u56de\u5f52\u4e2d\u7684\u8282\u70b9\u8868\u793a\u6a21\u578b": 701, "\u56de\u5f52\u4e2d\u7684\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 701, "\u56de\u5f52\u4efb\u52a1": 709, "\u56de\u5f52\u6240\u9700\u7684\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 699, "\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u8fb9\u5f97\u5206\u6a21\u578b\u76f8\u540c": 712, "\u56de\u5f52\u7684\u6a21\u578b": 709, "\u56de\u5f52\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b": 699, "\u56de\u5f52\u7684\u8bad\u7ec3\u7c7b\u4f3c": 699, "\u56de\u5f52\u91cc\u7684\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c": 701, "\u56de\u60f3\u4e00\u4e0b\u5728": 698, "\u56e0\u4e3a": 694, "\u56e0\u4e3a\u4e0a\u8ff0\u7684\u5f97\u5206\u9884\u6d4b\u6a21\u578b\u5728\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 712, "\u56e0\u4e3a\u4e0d\u9700\u8981\u5728\u8fb9\u4e0a\u4fdd\u5b58feat_src\u548cfeat_dst": 694, "\u56e0\u4e3a\u53cb\u8c0a\u662f\u76f8\u4e92\u7684": 685, "\u56e0\u4e3a\u540c\u6b65sgd\u4f1a\u5047\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c0f\u6279\u6b21": 681, "\u56e0\u4e3a\u5b83\u4eec\u7ecf\u8fc7\u4e86\u5927\u91cf\u4f18\u5316": 693, "\u56e0\u4e3a\u5bf9\u4e8e\u5904\u7406\u540e\u7684\u5927\u578b\u6570\u636e\u96c6": 675, "\u56e0\u4e3a\u5d4c\u5165\u662f\u6a21\u578b\u7684\u4e00\u90e8\u5206": 681, "\u56e0\u4e3a\u7528\u6237\u9700\u8981\u6307\u5b9a\u5728\u54ea\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b": 712, "\u56e0\u4e3a\u9700\u8981\u4ece\u7b2c\u4e00\u5c42\u5f00\u59cb\u5bf9\u8282\u70b9\u8868\u793a\u9010\u5c42\u8ba1\u7b97": 700, "\u56e0\u6b64": [678, 681, 683, 686, 688, 690, 698, 699, 701], "\u56e0\u6b64\u5982\u679c\u4e00\u5f20\u56fe\u5f88\u5927": 682, "\u56e0\u6b64\u6570\u636e\u96c6\u7684\u5212\u5206\u662f\u5728\u56fe\u7684\u8282\u70b9\u96c6\u4e0a\u8fdb\u884c": 678, "\u56e0\u6b64\u672c\u793a\u4f8b\u8bf4\u660e\u4e86\u5982\u4f55\u4f7f\u7528\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5411\u91cf\u7684\u70b9\u79ef\u6765\u8ba1\u7b97\u5206\u6570": 701, "\u56e0\u6b64\u7528\u6237\u65e0\u6cd5\u4ecenn\u6a21\u5757\u7684\u53c2\u6570\u8bbf\u95ee\u5b83": 681, "\u56e0\u6b64\u76f4\u63a5\u5728\u8fb9\u754c\u5b50\u56fe\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012\u6709\u5f88\u5927\u5f00\u9500": 698, "\u56e0\u6b64\u901a\u5e38\u53ef\u4ee5\u5728\u968f\u673a\u62bd\u53d6\u7684\u5c0f\u6279\u6b21\u56fe\u4e0a\u8fdb\u884c\u9ad8\u6548\u7684\u8bad\u7ec3": 711, "\u56e0\u6b64\u9700\u8981\u5c06\u6240\u8981\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b": 709, "\u56fe": [678, 691], "\u56fe\u4e0a\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38\u6709\u4e09\u79cd\u7c7b\u578b": 678, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5b50\u56fe\u5bf9\u5e94\u4e00\u5f20\u539f\u59cb\u5c0f\u56fe": 711, "\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u662fdgl\u901a\u8fc7\u7ed9\u5b9a\u7684\u56fe\u7684\u8fb9\u5217\u8868\u4e2d\u6700\u5927\u7684\u70b9id\u63a8\u65ad\u6240\u5f97\u51fa\u7684": 689, "\u56fe\u5212\u5206api\u5f53\u524d\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c": 682, "\u56fe\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u4e8c\u5206\u56fe": 706, "\u56fe\u53ef\u4ee5\u662f": 685, "\u56fe\u540d\u79f0\u6807\u8bc6\u4e86\u96c6\u7fa4\u4e2d\u6240\u9700\u52a0\u8f7d\u7684\u56fe": 681, "\u56fe\u5c06\u4f1a\u88ab\u89c6\u4e3a\u4e8c\u5206\u56fe": 706, "\u56fe\u6216\u5f20\u91cf": 688, "\u56fe\u6570\u636e\u4e2d\u7684\u8bad\u7ec3": 713, "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [691, 708, 711, 713], "\u56fe\u662f\u7528\u4ee5\u8868\u793a\u5b9e\u4f53\u53ca\u5176\u5173\u7cfb\u7684\u7ed3\u6784": 685, "\u56fe\u6ce8\u610f\u529b\u7f51\u7edc": 710, "\u56fe\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210": 685, "\u56fe\u7684": 678, "\u56fe\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4e86": 713, "\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e2a\u5178\u578b\u9009\u9879\u662f\u805a\u5408\u7c7b\u578b": 705, "\u56fe\u8868\u793a\u5b9e\u4f53": 684, "\u5728": [678, 679, 681, 703, 706], "\u5728dgl": 704, "\u5728dgl\u4e2d": [690, 693, 695, 698], "\u5728dgl\u4e2d\u79f0\u4e4b\u4e3a": 703, "\u5728dgl\u7684\u56fe\u91cc": 689, "\u5728dgl\u91cc\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5b9e\u73b0\u8fd9\u4e00\u9700\u6c42": 710, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 684, "\u5728gpu\u4e0a\u8fdb\u884c\u5168\u56fe\u524d\u5411\u4f20\u64ad\u901a\u5e38\u7531\u4e8e\u663e\u5b58\u5927\u5c0f\u7684\u9650\u5236\u800c\u4e0d\u53ef\u884c": 700, "\u5728graph": 693, "\u5728jupyt": 681, "\u5728mxnet\u4e2d\u662ffloat\u5f20\u91cf": 678, "\u5728nn\u6a21\u5757\u4e2d": 706, "\u5728node": 677, "\u5728python\u5b57\u5178\u91cc\u4fdd\u5b58\u5176\u4ed6\u4fe1\u606f": 679, "\u5728sageconv\u4e2d": 705, "\u5728sageconv\u8bba\u6587\u91cc": 705, "\u5728update_all\u5916\u8c03\u7528\u66f4\u65b0\u51fd\u6570": 693, "\u5728user\u7c7b\u578b\u7684\u8282\u70b9\u548cclick\u7c7b\u578b\u7684\u8fb9\u4e0a\u968f\u673a\u751f\u6210\u8bad\u7ec3\u96c6\u7684\u63a9\u7801": 708, "\u5728\u4e00\u4e2a\u52a0\u6743\u56fe\u91cc": 710, "\u5728\u4e00\u4e2a\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 680, "\u5728\u4e00\u5c42\u4e2d": 700, "\u5728\u4e0a\u9762\u7684\u7b49\u5f0f\u4e2d": 692, "\u5728\u4ecb\u7ecddgl\u4e2d\u90bb\u5c45\u91c7\u6837\u7684\u7528\u6cd5\u4e4b\u524d": 698, "\u5728\u4f7f\u7528pytorch\u65f6": 681, "\u5728\u4f7f\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 695, "\u5728\u5185\u7f6e\u6570\u636e\u96c6": 679, "\u5728\u5185\u90e8": 681, "\u5728\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0b": 681, "\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e2d": 681, "\u5728\u521b\u5efa\u56fe\u7684\u65f6\u5019": 689, "\u5728\u521d\u6b65\u4e86\u89e3\u4e86\u5206\u5e03\u5f0f\u7ec4\u4ef6\u540e": 680, "\u5728\u52a0\u6743\u56fe\u4e2d": 685, "\u5728\u533a\u5757\u521b\u5efa\u7684\u9636\u6bb5": 706, "\u5728\u534a\u76d1\u7763\u8282\u70b9\u5206\u7c7b\u7684\u573a\u666f\u91cc": 682, "\u5728\u540c\u6784\u56fe\u4e2d": 685, "\u5728\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e0a\u505a\u8bc4\u5206\u9884\u6d4b\u65f6": 699, "\u5728\u56fe\u5212\u5206\u540e": 682, "\u5728\u56fe\u5212\u5206\u671f\u95f4\u7684\u56fe\u540d\u79f0": 681, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [691, 692], "\u5728\u57fa\u4e8e\u90bb\u5c45\u91c7\u6837\u7684\u8fb9\u5206\u7c7b\u4e2d": 699, "\u5728\u591a\u91cd\u56fe\u4e2d": 685, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": [691, 696, 706, 708], "\u5728\u5b58\u50a8\u56fe\u5206\u533a\u6570\u636e": 680, "\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u91c7\u6837\u5668\u540e": 698, "\u5728\u5bf9\u56fe\u8fdb\u884c\u5212\u5206\u65f6": 682, "\u5728\u5c0f\u6279\u6b21\u8bad\u7ec3\u4e2d": 706, "\u5728\u5f02\u6784\u56fe\u4e0a": 699, "\u5728\u5f02\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u548c\u5728\u540c\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u7565\u6709\u4e0d\u540c": 711, "\u5728\u5f02\u6784\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8282\u70b9\u5206\u7c7b\u7684\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684": 703, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [691, 692], "\u5728\u5f02\u6784\u56fe\u4e2d": 685, "\u5728\u5f02\u6784\u56fe\u7684\u60c5\u51b5\u4e0b": 706, "\u5728\u5f53\u524d\u5b9e\u73b0\u4e2d": 681, "\u5728\u5f97\u5230": 711, "\u5728\u6240\u6709\u8fb9\u7c7b\u578b\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012": 713, "\u5728\u63a8\u8350\u573a\u666f\u4e2d\u5f88\u5e38\u89c1": 709, "\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d": 685, "\u5728\u6574\u4e2a\u56fe\u6279\u6b21\u4e0a\u8fdb\u884c\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3": 711, "\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5": 694, "\u5728\u672c\u4f8b\u4e2d\u7701\u7565": 713, "\u5728\u672c\u8282\u4e2d": 680, "\u5728\u6784\u9020\u51fd\u6570\u4e2d": 705, "\u5728\u67d0\u4e9b\u573a\u666f\u4e2d": 712, "\u5728\u67d0\u79cd\u7c7b\u578b\u7684\u8fb9\u4e0a\u4e3a\u6bcf\u4e00\u6761\u8fb9\u9884\u6d4b\u7684\u7aef\u5230\u7aef\u6a21\u578b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a": 709, "\u5728\u6bcf\u4e2a\u5206\u533a\u7684\u6587\u4ef6\u5939\u5185": 682, "\u5728\u6bcf\u4e2a\u751f\u6210\u5757\u5217\u8868\u7684\u8fed\u4ee3\u4e2d": 703, "\u5728\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u4e2d\u7684\u8282\u70b9\u6570\u4e0a\u5b9e\u73b0\u5206\u533a\u95f4\u7684\u5e73\u8861": 682, "\u5728\u6d88\u606f\u4f20\u9012\u65f6": 693, "\u5728\u6d88\u606f\u51fd\u6570\u91cc": 710, "\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 681, "\u5728\u7528\u591a\u5c42\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 698, "\u5728\u7b2c9\u884c\u547d\u540d\u4e3a": 687, "\u5728\u7c7bdgldataset\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u5904\u7406\u6a21\u7248\u7684\u6d41\u7a0b\u56fe": 675, "\u5728\u7f16\u5199\u5b8c\u8fd9\u4e9b\u4ee3\u7801\u4e4b\u540e": 678, "\u5728\u8bad\u7ec3\u5668\u8fdb\u7a0b\u4e2d": 681, "\u5728\u8bad\u7ec3\u671f\u95f4": 682, "\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u63a9\u7801\u533a\u5206\u8bad\u7ec3": 709, "\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 698, "\u5728\u8fb9\u4e0a\u5c06\u4ee5\u4e0a\u4e24\u90e8\u5206\u7ebf\u6027\u64cd\u4f5c\u7684\u7ed3\u679c\u76f8\u52a0": 694, "\u5728\u8fb9\u96c6": 685, "\u5728\u8fd9\u4e2a\u573a\u666f\u91cc": 711, "\u5728\u8fd9\u4e2a\u6279\u6b21\u7684\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u4ee5\u66f4\u65b0\u8282\u70b9\u6216\u8fb9\u7684\u7279\u5f81": 711, "\u5728\u8fd9\u4e9b\u673a\u5668\u4e0a": 683, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": 706, "\u5728\u8fd9\u91cc\u53ef\u4ee5\u590d\u7528\u4e0a\u8ff0\u63d0\u5230\u7684": 709, "\u5728\u8fdb\u884c\u63a8\u65ad\u65f6": 700, "\u5757": [698, 699, 703], "\u5757\u4e5f\u53ef\u7528\u4e8e\u5f02\u6784\u56fe": 698, "\u5757\u7684\u8f93\u51fa\u8282\u70b9\u4e3a": 698, "\u578b\u8282\u70b9\u5230": 690, "\u578b\u8282\u70b9\u7684\u8fb9": 690, "\u57fa\u4e8egnn\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u9700\u9884\u6d4b\u7684\u8282\u70b9\u5bf9": 712, "\u5904\u7406\u548c\u4fdd\u5b58\u56fe\u6570\u636e\u63d0\u4f9b\u4e86\u7b80\u5355\u800c\u5e72\u51c0\u7684\u89e3\u51b3\u65b9\u6848": 674, "\u5904\u7406\u5b8c\u6210\u7684\u6570\u636e\u96c6\u7684\u4fdd\u5b58\u76ee\u5f55": 675, "\u5904\u7406\u6570\u636e": [674, 691], "\u5904\u7406\u8fc7\u7684\u6570\u636e\u6bd4\u8f83\u5927": 679, "\u590d\u5236\u5230": 683, "\u590d\u5236\u5230gpu": 688, "\u591a\u5c42\u611f\u77e5\u673a": 709, "\u5927\u90e8\u5206\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u9988\u8ba1\u7b97\u4e2d\u4ec5\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5f15\u5165\u56fe\u7ed3\u6784\u4fe1\u606f": 710, "\u5982": [686, 689, 701, 708, 709, 713], "\u5982panda": 686, "\u5982\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684": 687, "\u5982\u4e0b": 687, "\u5982\u4e0b\u4ee3\u7801\u6240\u6f14\u793a\u7684": 698, "\u5982\u4e0b\u4f8b\u6240\u793a": 689, "\u5982\u4e0b\u56fe\u6240\u793a": [697, 698], "\u5982\u4e0b\u6240\u793a": [698, 699], "\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u6240\u793a": 689, "\u5982\u4ee3\u7801\u6240\u793a": 678, "\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a": 681, "\u5982\u524d\u6240\u8ff0": 681, "\u5982\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b": 687, "\u5982\u63cf\u8ff0\u8282\u70b9\u4e4b\u95f4\u7684\u5bf9\u79f0\u5173\u7cfb": 685, "\u5982\u63cf\u8ff0\u975e\u5bf9\u79f0\u5173\u7cfb": 685, "\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684id\u76f8\u540c": 699, "\u5982\u679c\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u9002\u7528": 690, "\u5982\u679c\u4ee5\u6a21\u578b\u9009\u62e9\u4e3a\u76ee\u7684\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u8bc4\u4ef7\u6307\u6807": 700, "\u5982\u679c\u4f7f\u7528": 689, "\u5982\u679c\u5177\u6709\u6700\u5927id\u7684\u8282\u70b9\u6ca1\u6709\u8fb9": 689, "\u5982\u679c\u539f\u56fe\u5305\u542b\u591a\u79cd\u8282\u70b9\u7c7b\u578b": 702, "\u5982\u679c\u539f\u56fe\u53ea\u5305\u542b\u4e00\u79cd\u8282\u70b9\u7c7b\u578b": 702, "\u5982\u679c\u539f\u59cb\u6570\u636e\u5df2\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6": 678, "\u5982\u679c\u53ea\u9884\u6d4b": 713, "\u5982\u679c\u540e\u7aef\u6846\u67b6\u4e5f\u63d0\u4f9b\u4e86\u4ece\u78c1\u76d8\u4e2d\u4fdd\u5b58\u6216\u52a0\u8f7d\u5f20\u91cf\u7684\u5de5\u5177": 686, "\u5982\u679c\u56fe\u662f\u5f02\u6784\u7684": 713, "\u5982\u679c\u56fe\u91cc\u53ea\u6709\u4e00\u79cd\u8282\u70b9\u6216\u8fb9\u7c7b\u578b": 690, "\u5982\u679c\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8005\u8fb9\u7684\u6570\u91cf\u5c0f\u4e8e": 689, "\u5982\u679c\u5bf9\u901f\u5ea6\u4e0d\u592a\u5173\u6ce8\u7684\u8bdd": 686, "\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 703, "\u5982\u679c\u6570\u636e\u96c6\u662f\u4e00\u4e2azip\u6587\u4ef6": 676, "\u5982\u679c\u6587\u4ef6\u662f": 676, "\u5982\u679c\u662f\u4ece\u56fe\u4e2d\u5f97\u5230\u7684\u8fb9\u754c": 698, "\u5982\u679c\u672a\u63d0\u4f9b\u5177\u4f53\u7aef\u53e3": 683, "\u5982\u679c\u6a21\u578b\u540c\u65f6\u5177\u6709\u8282\u70b9\u5d4c\u5165\u548c\u89c4\u5219\u7684\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 681, "\u5982\u679c\u7279\u5f81\u5b58\u50a8\u5728": 703, "\u5982\u679c\u7528\u6237\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u7684\u6a21\u578b\u8ba1\u7b97\u4e86\u8282\u70b9\u7684\u8868\u793a": 709, "\u5982\u679c\u7528\u6237\u53ea\u60f3\u66f4\u65b0\u56fe\u4e2d\u7684\u90e8\u5206\u8282\u70b9": 696, "\u5982\u679c\u7528\u6237\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u4e00\u6b21\u4ec5\u4f7f\u7528\u4e00\u5f20\u56fe": 711, "\u5982\u679c\u7528\u6237\u5df2\u6709\u4e00\u4e2a\u7528\u4e8e\u6574\u4e2a\u56fe\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u4f20\u9012\u6a21\u5757": 702, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u6570\u636e\u96c6\u6216\u5176\u4ed6\u517c\u5bb9": 708, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5220\u9664\u5f02\u6784\u56fe\u4e2d\u7684\u53cd\u5411\u8fb9": 699, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5f00\u53d1\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 699, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 703, "\u5982\u679c\u7528\u6237\u60f3\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u4e00\u4e2a\u5206\u6570": 709, "\u5982\u679c\u7528\u6237\u60f3\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u4ee3\u7801\u800c\u53c8\u4e0d\u60f3\u81ea\u5df1\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u6b63\u786e\u7684\u76ee\u5f55\u4e2d": 676, "\u5982\u679c\u7528\u6237\u60f3\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 701, "\u5982\u679c\u7528\u6237\u60f3\u9884\u6d4b\u8fb9\u7c7b\u578b\u4e3a": 709, "\u5982\u679c\u7528\u6237\u6709\u5305\u542b\u6570\u767e\u4e07\u751a\u81f3\u6570\u5341\u4ebf\u4e2a\u8282\u70b9\u6216\u8fb9\u7684\u5927\u56fe": 697, "\u5982\u679c\u7528\u6237\u6a21\u578b\u5728\u5168\u56fe\u4e0a\u662f\u6309\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u7684": 703, "\u5982\u679c\u7528\u6237\u719f\u6089": 712, "\u5982\u679c\u7528\u6237\u719f\u6089\u5982\u4f55\u5b9a\u5236\u7528\u4e8e\u66f4\u65b0\u6574\u4e2a\u540c\u6784\u56fe\u6216\u5f02\u6784\u56fe\u7684gnn\u6a21\u5757": 702, "\u5982\u679c\u7528\u6237\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 676, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570\u65e0\u6cd5\u7528\u5185\u7f6e\u51fd\u6570\u5b9e\u73b0": 693, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757\u5168\u4f7f\u7528\u7684\u662fdgl\u5185\u7f6e\u6a21\u5757": 703, "\u5982\u679c\u7528\u6237\u8981\u5f15\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 681, "\u5982\u679c\u8981\u4ee5\u67d0\u79cd\u6982\u7387\u5c06\u79cd\u5b50\u8282\u70b9\u7684\u5165\u8fb9\u968f\u673a\u5254\u9664": 698, "\u5982\u679c\u8bad\u7ec3\u811a\u672c\u91cc\u5305\u542b\u9700\u8981\u5728\u670d\u52a1\u5668": 681, "\u5982\u679c\u8be5api\u6ca1\u6709\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0id": 682, "\u5982\u679c\u8be5\u7c7b\u7ee7\u627f\u81ea": 676, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u4e0d\u662f\u5757": 702, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u662f\u4e00\u4e2a\u5757": 702, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5f20\u91cf\u5bf9": 702, "\u5982\u679c\u9700\u8981\u7684\u8bdd": 713, "\u5b50\u56fe\u5728dgl\u4e2d\u79f0\u4e3a\u533a\u5757": 706, "\u5b50\u56fe\u5757\u7684\u60c5\u51b5": 706, "\u5b50\u56fe\u662f\u4ece\u76f8\u540c\u7684\u6570\u636e\u52a0\u8f7d\u5668\u4ea7\u751f\u7684": 699, "\u5b50\u56fe\u91c7\u6837\u548c\u90bb\u5c45\u91c7\u6837\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11\u7528gpu\u8bad\u7ec3gnn\u6a21\u578b\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6d88\u8017": 700, "\u5b50\u6a21\u5757\u6839\u636e\u805a\u5408\u7c7b\u578b\u800c\u6709\u6240\u4e0d\u540c": 705, "\u5b50\u7c7b\u4e4b\u5916\u5b8c\u6210": 675, "\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570": 675, "\u5b58\u50a8\u4e86\u5212\u5206\u63a9\u7801": 678, "\u5b58\u50a8\u4e86\u8f93\u5165\u8282\u70b9\u7279\u5f81": 710, "\u5b58\u50a8\u5206\u533a\u7684\u56fe\u7ed3\u6784\u4ee5\u53ca\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u4e00\u4e9b\u5143\u6570\u636e": 682, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u533aid": 682, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u7684\u5206\u533aid": 682, "\u5b58\u50a8\u5c5e\u4e8e\u8be5\u5206\u533a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u7279\u5f81": 682, "\u5b58\u50a8\u6587\u4ef6\u7684\u8def\u5f84": 676, "\u5b58\u50a8\u9690\u5c42\u8868\u793a\u9700\u8981": 697, "\u5b5f\u51e1\u8363": 691, "\u5b83\u4e3a": 681, "\u5b83\u4ece\u805a\u5408\u4e0e\u66f4\u65b0\u7684\u89d2\u5ea6\u5f52\u7eb3\u603b\u7ed3\u4e86\u591a\u79cdgnn\u6a21\u578b\u7684\u5b9e\u73b0": 692, "\u5b83\u4eec\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684api\u76f8\u4f3c": 680, "\u5b83\u4eec\u4e3b\u8981\u88ab\u7528\u6765\u63d0\u4f9b\u56fe\u4fe1\u606f": 681, "\u5b83\u4eec\u53ea\u5305\u62ec\u4e00\u79cd\u5173\u7cfb": 690, "\u5b83\u4eec\u5b58\u50a8\u8282\u70b9\u548c\u8fb9id\u4e0e\u5206\u533aid\u4e4b\u95f4\u7684\u6620\u5c04": 682, "\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e": 681, "\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f\u5b57\u7b26\u4e32": 693, "\u5b83\u4eec\u786e\u4fdd\u6240\u6709\u90e8\u5206\u90fd\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u548c\u8fb9": 681, "\u5b83\u4eec\u901a\u8fc7": 685, "\u5b83\u4eec\u9075\u5faa\u4e86\u7531": 674, "\u5b83\u4eec\u90fd\u662f\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9": 706, "\u5b83\u5141\u8bb8\u7528\u6237\u4e3a\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u90e8\u5206\u90bb\u5c45\u8282\u70b9\u4ee5\u6c47\u805a\u4fe1\u606f": 698, "\u5b83\u5177\u6709": 709, "\u5b83\u5177\u6709\u4e0e\u5e38\u89c4\u5f20\u91cf\u76f8\u540c\u7684api": 681, "\u5b83\u5206\u6279\u8fed\u4ee3\u8bad\u7ec3\u8282\u70b9id\u6570\u7ec4": 703, "\u5b83\u52a0\u8f7d\u5206\u533a\u6570\u636e": 681, "\u5b83\u5305\u62ec": 707, "\u5b83\u53ef\u4ee5\u7528\u6700\u5c11\u7684\u8fb9\u5206\u5272\u4ee5\u751f\u6210\u5206\u533a": 682, "\u5b83\u53ef\u83b7\u53d6\u8282\u70b9\u7684\u6240\u6709\u90bb\u5c45": 703, "\u5b83\u5728\u5355\u4e2aapi\u8c03\u7528\u91cc\u5408\u5e76\u4e86\u6d88\u606f\u751f\u6210": 693, "\u5b83\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6240\u6709\u8ba1\u7b97": 681, "\u5b83\u5b9e\u73b0\u4e86\u7528\u4e8e\u5904\u7406\u56fe\u6570\u636e\u7684\u57fa\u672c\u6a21\u7248": 675, "\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9": 701, "\u5b83\u5c06\u4ee5\u72ec\u7acb\u6a21\u5f0f\u8fd0\u884c": 681, "\u5b83\u5c06\u751f\u6210\u4e24\u4e2a\u989d\u5916\u7684numpy\u6587\u4ef6": 682, "\u5b83\u5e94\u5f53\u4ee5\u539f\u56fe": 701, "\u5b83\u5e94\u8be5\u7ee7\u627f": 704, "\u5b83\u6307\u5b9a\u8282\u70b9\u96c6\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u7c7b\u578b\u7ea6\u675f": 690, "\u5b83\u63a5\u53d7\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408\u4f5c\u4e3a\u8f93\u5165": 689, "\u5b83\u662fgraphsage\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u56fe\u5377\u79ef\u6a21\u5757": 713, "\u5b83\u662f\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 703, "\u5b83\u7528": 680, "\u5b83\u7ee7\u627f\u81ea": 675, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8282\u70b9": 693, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8fb9": 693, "\u5b83\u8fd4\u56de\u4ee5\u8fb9\u7c7b\u578b\u4e3a\u952e": 701, "\u5b83\u901a\u8fc7\u5c06\u8fb9\u4e0a\u7279\u5f81\u4e0e\u5176\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408\u6765\u751f\u6210\u6d88\u606f": 692, "\u5b8b\u6021\u7136": 691, "\u5b8c\u5168\u76f8\u540c": 699, "\u5b8c\u6574\u7684\u5185\u7f6e\u91c7\u6837\u65b9\u6cd5\u6e05\u5355": 703, "\u5b98\u65b9\u7684": 677, "\u5b9a\u4e49": [681, 690], "\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u9010\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u8ba1\u7b97": 692, "\u5b9a\u4e49\u6a21\u578b\u548c\u4f18\u5316\u5668": 680, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 703, "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [691, 697, 699, 703], "\u5b9e\u4f8b\u5316heterographconv": 713, "\u5b9e\u4f8b\u5316sageconv": 713, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad\u7684\u65b9\u6cd5\u4f9d\u7136\u9700\u8981\u4f7f\u7528": 700, "\u5b9e\u73b0\u903b\u8f91\u4e0e\u6d88\u606f\u4f20\u9012\u7ea7\u522b\u7684api": 707, "\u5b9e\u9645\u5e94\u7528\u4e2d": 712, "\u5bf9dataloader\u8fdb\u884c\u8fed\u4ee3": 703, "\u5bf9\u4e00\u6761\u8fb9\u8ba1\u7b97\u9884\u6d4b\u503c\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5c06\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u51fd\u6570": 709, "\u5bf9\u4e8e": 702, "\u5bf9\u4e8emxnet\u540e\u7aef": 704, "\u5bf9\u4e8epytorch\u540e\u7aef": 704, "\u5bf9\u4e8etensorflow\u540e\u7aef": 704, "\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26\u6743\u91cd\u7684\u56fe": 710, "\u5bf9\u4e8e\u4e00\u4e2a\u52a0\u6743\u56fe": 710, "\u5bf9\u4e8e\u4e00\u4e2a\u6307\u5b9a\u7684\u5c42": 700, "\u5bf9\u4e8e\u4e00\u5143\u51fd\u6570": 693, "\u5bf9\u4e8e\u4e00\u822c\u7684pytorch\u6a21\u5757": 705, "\u5bf9\u4e8e\u4e8c\u5143\u51fd\u6570": 693, "\u5bf9\u4e8e\u4e8c\u5206\u56fe": 707, "\u5bf9\u4e8e\u5168\u90bb\u5c45\u91c7\u6837": 703, "\u5bf9\u4e8e\u5177\u6709\u4e24\u4e2a\u5173\u7cfb": 690, "\u5bf9\u4e8e\u5177\u6709\u5341\u4ebf\u7ea7\u6570\u91cf\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 682, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3": 681, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u8bc4\u4f30": 681, "\u5bf9\u4e8e\u52a0\u6743\u56fe": 687, "\u5bf9\u4e8e\u540c\u6784\u56fe\u4e0a\u7684\u5168\u56fe\u8bad\u7ec3": 706, "\u5bf9\u4e8e\u56fe\u4e0a\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b": 713, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc": 705, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4": 713, "\u5bf9\u4e8e\u591a\u4e2a\u8282\u70b9": 689, "\u5bf9\u4e8e\u5e95\u5c42\u7684\u91c7\u6837api": 681, "\u5bf9\u4e8e\u5f97\u5206\u7684\u9884\u6d4b": 701, "\u5bf9\u4e8e\u65e0\u5411\u7684\u56fe": 689, "\u5bf9\u4e8e\u65e0\u6cd5\u5168\u90e8\u8f7d\u5165\u7684\u60c5\u51b5": 708, "\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5": 694, "\u5bf9\u4e8e\u6d88\u606f\u4f20\u9012": 693, "\u5bf9\u4e8e\u7279\u5b9a\u76ee\u6807\u8282\u70b9": 705, "\u5bf9\u4e8e\u79bb\u7ebf\u63a8\u65ad\u7684\u793a\u4f8b": 700, "\u5bf9\u4e8e\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 681, "\u5bf9\u4e8e\u8981\u62f7\u8d1d\u7684\u7279\u5f81": 690, "\u5bf9\u4e8e\u8bad\u7ec3\u811a\u672c": 680, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u6570\u91cf": 702, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u7279\u5f81": 702, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u6570\u91cf": 702, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 702, "\u5bf9\u4e8e\u8fb9\u56de\u5f52\u4efb\u52a1": 709, "\u5bf9\u4e8e\u8fd9\u4e2a\u5757": 698, "\u5bf9\u4e8e\u90bb\u5c45\u91c7\u6837": 698, "\u5bf9\u5176\u8fdb\u884c\u62c6\u5206": 681, "\u5bf9\u56fe\u8fdb\u884c\u5206\u533a\u7684\u8ba1\u7b97\u673a": 683, "\u5bf9\u5b83\u6240\u6709\u8282\u70b9\u7279\u5f81\u53d6\u5e73\u5747\u503c\u7684\u805a\u5408\u8bfb\u51fa\u516c\u5f0f\u5982\u4e0b": 711, "\u5bf9\u5e94\u4e8e\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b": 690, "\u5bf9\u5e94\u7740\u4e0b\u56fe\u6240\u793a\u7684\u5305\u542b4\u4e2a\u8282\u70b9\u7684\u56fe": 689, "\u5bf9\u5f02\u6784\u56fe\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u7684\u63a5\u53e3\u662f": 695, "\u5bf9\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u5408\u5e76\u7528\u6237\u6307\u5b9a\u7684\u7279\u5f81": 690, "\u5bf9\u6240\u6709\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u6c42\u548c": 711, "\u5bf9\u6bcf\u4e2a\u5173\u7cfb\u8ba1\u7b97\u548c\u805a\u5408\u6d88\u606f": 695, "\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u6d88\u606f": 695, "\u5bf9\u6bcf\u6761\u8fb9\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u8868\u793a": 709, "\u5bf9\u8c61": [681, 682, 686, 689], "\u5bf9\u8c61\u65f6": 686, "\u5bf9\u8c61\u67098\u6761\u8fb9": 686, "\u5bf9\u8c61\u6d88\u5931": 681, "\u5bf9\u8c61\u7684api": 677, "\u5bf9\u8c61\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 689, "\u5bf9\u8c61\u7684\u5217\u8868\u548c\u6807\u7b7e\u5f20\u91cf\u7684\u5217\u8868": 678, "\u5bf9\u8c61\u7684\u8282\u70b9\u548c\u8fb9\u53ef\u5177\u6709\u591a\u4e2a\u7528\u6237\u5b9a\u4e49\u7684": 687, "\u5bf9\u8f93\u5165\u8282\u70b9\u7279\u5f81": 702, "\u5bfc\u5165\u548c\u4fdd\u5b58": 675, "\u5bfc\u5165\u5904\u7406\u540e\u7684\u6570\u636e": 675, "\u5bfc\u5165\u6570\u636e": 678, "\u5c06": 702, "\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 682, "\u5c06\u4e00\u5f20\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u805a\u5408\u6210\u6574\u5f20\u56fe\u7684\u56fe\u8868\u793a": 711, "\u5c06\u4e0a\u8ff0\u56fe\u4f5c\u4e3a\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u8f93\u5165": 709, "\u5c06\u4e0e\u8f93\u5165\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u7279\u5f81\u52a0\u8f7d\u5230gpu\u4e0a": 703, "\u5c06\u4e0e\u8f93\u51fa\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u6807\u7b7e\u52a0\u8f7d\u5230gpu\u4e0a": 703, "\u5c06\u4e3a\u7a7a": 706, "\u5c06\u4ee5\u5206\u5e03\u5f0f\u6a21\u5f0f\u8fd0\u884c": 681, "\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u56fe\u7684\u5217\u8868": 703, "\u5c06\u4f1a\u62a5\u9519": 698, "\u5c06\u5176\u547d\u540d\u4e3a": 687, "\u5c06\u539f\u59cb\u6570\u636e\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8": 675, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe": 675, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 678, "\u5c06\u5757\u5217\u8868\u548c\u8f93\u5165\u8282\u70b9\u7279\u5f81\u4f20\u5165\u591a\u5c42gnn\u5e76\u83b7\u53d6\u8f93\u51fa": 703, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u4fdd\u5b58\u81f3": 675, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u7f13\u5b58\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 679, "\u5c06\u5f97\u5230\u7684\u56fe\u548c\u8f93\u5165\u7279\u5f81\u4f20\u5165\u4e0a\u8ff0\u6a21\u578b": 701, "\u5c06\u5fc5\u8981\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81\u590d\u5236\u5230gpu\u4e0a": 700, "\u5c06\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 678, "\u5c06\u6570\u636e\u96c6\u7684\u6709\u7528\u4fe1\u606f": 679, "\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55self": 676, "\u5c06\u6bcf\u4e2a\u7c7b\u578b\u6d88\u606f\u805a\u5408\u7684\u7ed3\u679c\u76f8\u52a0": 695, "\u5c06\u88ab\u6e05\u9664": 693, "\u5c06\u8ba1\u7b97\u673a": 683, "\u5c06\u8f93\u51fa\u590d\u5236\u56decpu": 700, "\u5c06\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 710, "\u5c0f\u6279\u6b21\u662f\u4e00\u4e2a\u5143\u7ec4": 677, "\u5c24\u5176\u662f\u5728\u5305\u542b\u5927\u91cf\u672a\u6807\u8bb0\u6570\u636e\u7684\u534a\u76d1\u7763\u7cfb\u7edf\u4e2d": 700, "\u5c31\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 698, "\u5c31\u597d\u50cf\u8fd9\u4e9b\u8fb9\u6839\u672c\u4e0d\u5b58\u5728\u4e00\u6837": 699, "\u5c31\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u7684\u5e73\u5747\u503c\u8bfb\u51fa\u8ba1\u7b97": 711, "\u5c31\u662f\u56fe\u7684\u6a21\u5f0f": 690, "\u5c3d\u53ef\u80fd": 693, "\u5c42\u56fe\u5377\u79ef\u7f51\u7edc": 697, "\u5c42\u8fdb\u884c\u8ba1\u7b97": 697, "\u5c42\u9009\u62e9\u8be5\u6279\u6b21\u8282\u70b9\u7684\u5168\u90e8\u6216\u90e8\u5206\u90bb\u5c45\u8282\u70b9": 697, "\u5c5e\u4e8e\u53e6\u4e00\u7c7b\u578b\u7684\u53cd\u5411\u8fb9": 699, "\u5d4c\u5165": 680, "\u5df2\u7ecf\u8d2d\u4e70": 685, "\u5e26\u6807\u7b7e\u548c\u672a\u5e26\u6807\u7b7e": 682, "\u5e38\u7528\u7684\u5f02\u6784\u56fe": 685, "\u5e38\u7528\u7684\u805a\u5408\u7c7b\u578b\u5305\u62ec": 705, "\u5e38\u89c1\u7684\u66f4\u65b0\u64cd\u4f5c\u662f\u6839\u636e\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u6765\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u548c\u8fdb\u884c\u5f52\u4e00\u5316": 706, "\u5e38\u89c1\u7684\u805a\u5408\u65b9\u6cd5\u5305\u62ec": 711, "\u5e76\u4e14\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u901a\u4fe1": 681, "\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u8c03\u7528\u5b83\u65f6": 681, "\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u7ef4\u5ea6\u5e7f\u64ad": 693, "\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7": 698, "\u5e76\u4e14\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 693, "\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8868\u793a\u8bad\u7ec3": 681, "\u5e76\u4e14\u60f3\u5c06\u5176\u7528\u4e8e\u5757": 702, "\u5e76\u4e14\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u7684\u5b57\u5178": [699, 701], "\u5e76\u4e14\u6709\u591a\u4e2a\u5df2\u6709\u7684api\u53ef\u4ee5\u7b80\u5316\u6b64\u64cd\u4f5c": 675, "\u5e76\u4e14\u7528\u6237\u4e0d\u5e0c\u671b\u5728\u5efa\u6a21\u4e2d\u533a\u5206\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b": 690, "\u5e76\u4e14\u7528\u6237\u5e0c\u671b\u5bf9\u5d4c\u5165\u6267\u884c\u7a00\u758f\u66f4\u65b0": 681, "\u5e76\u4e14\u805a\u5408\u51fd\u6570\u7684\u8f93\u51fa\u503c\u5168\u4e3a0": 706, "\u5e76\u4e14\u904d\u5386\u79cd\u5b50\u8282\u70b9\u751f\u6210\u4e00\u7cfb\u5217\u7684\u5757": 698, "\u5e76\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u51fa\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u53ef\u80fd\u5f97\u5206": 709, "\u5e76\u4e3a\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4f7f\u7528\u4e00\u79cd\u56fe\u5377\u79ef\u6a21\u5757": 713, "\u5e76\u4ece\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 709, "\u5e76\u4f5c\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u6700\u7ec8\u7ed3\u679c": 713, "\u5e76\u4f7f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8bad\u7ec3\u5668\u5747\u53ef\u8bbf\u95ee\u5b83\u4eec": 681, "\u5e76\u5411\u672c\u5730\u8bad\u7ec3\u5668\u8fd4\u56de\u4e00\u90e8\u5206": 681, "\u5e76\u5411\u672c\u5730\u8fdb\u7a0b\u8fd4\u56de\u8282\u70b9\u7684\u5b50\u96c6": 681, "\u5e76\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\u4f7f\u7528": 709, "\u5e76\u5728\u540c\u6837\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u5c06\u5206\u533a\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 680, "\u5e76\u5728\u6240\u6709\u673a\u5668\u4e0a\u542f\u52a8\u8bad\u7ec3\u4efb\u52a1": 680, "\u5e76\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u8981\u8fdb\u884c\u591a\u8f6e\u7684\u4fe1\u606f\u4f20\u9012": 713, "\u5e76\u5bf9\u5b83\u4eec\u5e94\u7528\u76f8\u540c\u7684\u64cd\u4f5c": 690, "\u5e76\u5bf9\u8282\u70b9\u548c\u8fb9\u91c7\u6837\u4ee5\u751f\u6210\u7528\u4e8e\u8bad\u7ec3\u7684\u5c0f\u6279\u6b21\u6570\u636e": 680, "\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5757": 698, "\u5e76\u5c06\u5206\u533a\u6570\u636e\u81ea\u52a8\u52a0\u8f7d\u5230\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e2d": 681, "\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u7a00\u758f\u4f18\u5316\u5668": 681, "\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d": 681, "\u5e76\u5c06\u751f\u6210\u7684\u5757\u5217\u8868\u653e\u5230gpu\u4e0a": 699, "\u5e76\u5c06\u751f\u6210\u7684\u5b50\u56fe\u5217\u8868\u653e\u5230gpu\u4e0a": 703, "\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728outputs\u5b57\u5178\u4e2d": 707, "\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237": 707, "\u5e76\u5c06\u8f93\u51fa\u4f5c\u4e3a\u8282\u70b9\u7684\u65b0\u7279\u5f81": 693, "\u5e76\u5c55\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u7ba1\u9053\u7684\u6bcf\u4e2a\u7ec4\u4ef6": 674, "\u5e76\u63d0\u53d6\u8f93\u51fa\u7684user\u8282\u70b9\u5d4c\u5165": 713, "\u5e76\u6709\u53ef\u80fd\u5229\u7528\u8fd9\u70b9": 699, "\u5e76\u7528\u5b83\u6784\u9020\u4e00\u4e2a\u5f02\u6784\u56fe": 690, "\u5e76\u7528\u5bf9\u5e94\u7684\u4e24\u4e2a\u7aef\u70b9id\u8868\u793a\u4e00\u6761\u8fb9": 689, "\u5e76\u8ba1\u7b97\u672c\u5730\u8fdb\u7a0b\u7684\u8282\u70b9": 680, "\u5e76\u8df3\u8fc7\u4ece\u6587\u4ef6\u6784\u5efa\u56fe\u7684\u5b9e\u73b0": 678, "\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u7684\u5b57\u5178": 713, "\u5e76\u8fd4\u56de\u6e90\u8282\u70b9id\u6570\u7ec4\u548c\u76ee\u6807\u8282\u70b9id\u6570\u7ec4": 701, "\u5e76\u901a\u8fc7\u5728\u8bad\u7ec3\u8282\u70b9\u4e0a\u6bd4\u8f83\u9884\u6d4b\u548c\u771f\u5b9e\u6807\u7b7e\u6765\u8ba1\u7b97\u635f\u5931": 713, "\u5e76\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u4e2d\u5177\u6709\u5e42\u5f8b\u5206\u5e03\u7684\u56fe\u8fdb\u884c\u4e86\u4f18\u5316": 682, "\u5e94\u7528\u56fe\u5377\u79ef\u548c\u6fc0\u6d3b\u51fd\u6570": 711, "\u5e95\u5c42api\u8981\u6c42\u7528\u6237\u7f16\u5199\u4ee3\u7801\u4ee5\u660e\u786e\u5b9a\u4e49\u5982\u4f55\u5bf9\u8282\u70b9\u5c42\u8fdb\u884c\u91c7\u6837": 681, "\u5efa\u7acb\u70b9\u548c\u8fb9\u7279\u5f81": 709, "\u5efa\u8bae\u7684\u5b9e\u73b0\u662f\u5c06\u7ebf\u6027\u64cd\u4f5c\u5206\u6210\u4e24\u90e8\u5206": 694, "\u5f02\u6784\u56fe": [684, 685, 691, 695, 706], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u540c\u6784\u56fe\u7684\u6a21\u578b\u8bad\u7ec3\u662f\u4e00\u6837\u7684": 713, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": [691, 704], "\u5f02\u6784\u56fe\u4e0a\u7684\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206": 695, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 703, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 712, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u548c\u540c\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6ca1\u6709\u592a\u5927\u533a\u522b": 712, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u6a21\u578b\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u51e0\u4e4e\u76f8\u540c": 701, "\u5f02\u6784\u56fe\u4e2d\u8282\u70b9\u7c7b\u578b\u7684\u987a\u5e8f": 690, "\u5f02\u6784\u56fe\u4e2d\u8fb9\u7c7b\u578b\u7684\u987a\u5e8f": 690, "\u5f02\u6784\u56fe\u4e3a\u7ba1\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u53ca\u5176\u76f8\u5173\u7279\u5f81\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u63a5\u53e3": 690, "\u5f02\u6784\u56fe\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u8fb9\u7684\u7c7b\u578b": 708, "\u5f02\u6784\u56fe\u7684\u5377\u79ef\u64cd\u4f5c\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u53c2\u6570": 707, "\u5f02\u6784\u56fe\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u51e0\u4e4e\u76f8\u540c": 699, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 713, "\u5f02\u6784\u56fe\u91cc\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 690, "\u5f02\u6784\u7684": 685, "\u5f20\u5efa": 691, "\u5f20\u6000\u6587": 691, "\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570\u5fc5\u987b\u5728gpu\u4e0a": 688, "\u5f52\u4e00\u5316": 706, "\u5f52\u4e00\u5316\u53ef\u4ee5\u662fl2\u5f52\u4e00\u5316": 705, "\u5f53": 697, "\u5f531\u4e2a\u8282\u70b9\u5165\u5ea6\u4e3a0\u65f6": 706, "\u5f53\u4e00\u53f0\u673a\u5668\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u65f6": 681, "\u5f53\u4f7f\u7528": 686, "\u5f53\u524d": 681, "\u5f53\u524d\u4ec5\u652f\u6301\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 681, "\u5f53\u524d\u7248\u672c\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3api\u4ec5\u652f\u6301pytorch\u540e\u7aef": 680, "\u5f53\u524d\u7248\u672c\u7684\u5b9e\u73b0\u4ec5\u652f\u6301\u5177\u6709\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 680, "\u5f53\u5f15\u5165\u591a\u79cd\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u540e": 690, "\u5f53\u7528\u6237\u4f7f\u7528\u542f\u52a8\u811a\u672c\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 681, "\u5f53\u7528\u6237\u5728python\u547d\u4ee4\u884c\u6216jupyt": 681, "\u5f53\u811a\u672c\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 681, "\u5f53\u8bad\u7ec3\u811a\u672c\u5728\u8bad\u7ec3\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 681, "\u5f53\u8f93\u5165\u7279\u5f81": 706, "\u5f53\u8fb9\u7c7b\u578b\u552f\u4e00\u5730\u786e\u5b9a\u4e86\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u7684\u7c7b\u578b\u65f6": 690, "\u5f90\u4e1c\u8f89": 691, "\u5f97\u5206": 712, "\u5f97\u5230": 709, "\u5f97\u5230\u5757\u4e2d\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u521d\u59cb\u8282\u70b9id": 698, "\u5f97\u5230\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 702, "\u5f97\u5230\u8fb9id\u5230\u8f93\u5165\u8fb9\u754c\u4e2d\u8fb9\u7684\u521d\u59cbid\u7684\u6620\u5c04": 698, "\u5fc5\u987b\u5728": 681, "\u5fc5\u987b\u5728dgl\u7684\u4efb\u4f55\u5176\u4ed6\u5206\u5e03\u5f0fapi\u4e4b\u524d": 681, "\u5fc5\u987b\u5728\u521d\u59cb\u5316": 681, "\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u7684\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8c03\u7528\u542f\u52a8\u811a\u672c": 683, "\u60c5\u51b5\u4f1a\u6709\u6240\u4e0d\u540c": 699, "\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f": 685, "\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570": 698, "\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u90bb\u5c45\u91c7\u6837\u7b56\u7565": 698, "\u60f3\u8981\u5b9e\u73b0\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u517c\u5bb9\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 697, "\u60f3\u8981\u7528dgl\u63d0\u4f9b\u7684\u90bb\u5c45\u91c7\u6837\u5668\u505a\u8fb9\u5206\u7c7b": 699, "\u60f3\u8d2d\u4e70": 685, "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528g": 707, "\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528\u4e00\u4e2a\u96c6\u7fa4\u7684\u73af\u5883\u8bbe\u7f6e": 680, "\u6216": [685, 690, 702], "\u6216numpi": 689, "\u6216\u4e3a\u76f8\u5173\u5b9e\u4f53\u63a8\u8350\u8fdb\u884c\u6700\u8fd1\u90bb\u641c\u7d22\u6216\u6700\u5927\u5185\u79ef\u641c\u7d22": 712, "\u6216\u65e0\u5411\u56fe\u4e2d\u7684\u90bb\u5c45": 698, "\u6216\u662f": 685, "\u6216\u8005\u60f3\u8981\u5173\u4e8e\u5757\u7684\u66f4\u6df1\u5165\u7684\u4ecb\u7ecd": 703, "\u6216\u8005\u60f3\u8981\u5bf9\u5757\u7684\u6982\u5ff5\u6709\u66f4\u8be6\u7ec6\u7684\u4e86\u89e3": 699, "\u6240\u4ee5dgl\u4e0d\u63a8\u8350\u5728": 693, "\u6240\u4ee5\u5f53\u5c06\u65e0\u5411\u7684networkx\u56fe\u8f6c\u6362\u4e3a": 686, "\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u5c06\u5176\u9644\u52a0\u5230\u4f18\u5316\u5668\u4e0a\u4ee5\u8fdb\u884c\u5c0f\u6279\u91cf\u8bad\u7ec3": 681, "\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019": 679, "\u6240\u4ee5\u8fd9\u91cc\u96be\u4ee5\u679a\u4e3e\u6240\u6709\u9009\u9879": 686, "\u6240\u6709\u6d88\u606f\u4f20\u9012\u51fd\u6570": 711, "\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6709\u65b9\u5411\u7684": 689, "\u6240\u6709\u8282\u70b9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5b9e\u4f53": 685, "\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u5fc5\u987b\u8c03\u7528\u521b\u5efa": 681, "\u6240\u6709\u8fb9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5173\u7cfb": 685, "\u6240\u8ff0": 708, "\u6267\u884c\u542f\u52a8\u811a\u672c\u7684\u8ba1\u7b97\u673a": 683, "\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u5bf9\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u64cd\u4f5c": 693, "\u6269\u5c55\u4e3a": 706, "\u6279\u6b21": [691, 696, 703, 706, 708], "\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u5f20\u91cf\u5747\u901a\u8fc7\u5c06\u6240\u6709\u56fe\u4e0a\u7684\u76f8\u5e94\u7279\u5f81\u62fc\u63a5\u5f97\u5230": 711, "\u6279\u6b21\u5316\u7684\u56fe": 711, "\u6279\u91cf\u5f52\u4e00\u5316\u7b49": 711, "\u628a\u5b83\u5b58\u5728\u56fe\u4e2d\u7528\u6765\u505a\u6d88\u606f\u4f20\u9012": 695, "\u628a\u5b83\u7684\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\u53d8\u6210\u4e86\u4e00\u4e2a\u5c0f\u7684\u4e8c\u5206\u56fe": 698, "\u628a\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 710, "\u62bd\u53d6\u51fa\u6765": 707, "\u62c6\u5206\u8bad\u7ec3\u96c6": 680, "\u62f7\u8d1d\u8282\u70b9\u7279\u5f81": 690, "\u62f7\u8d1d\u8fb9\u7684\u7279\u5f81": 690, "\u62fc\u63a5": 694, "\u6307\u4ee3\u4e00\u6761": 689, "\u6307\u5411\u8282\u70b9": 689, "\u6307\u5b9a\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55\u6216\u5df2\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55": 675, "\u6307\u5b9a\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 683, "\u6307\u5b9a\u56fe\u7c7b\u578b": 706, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u5206\u533a\u6570\u636e\u7684\u76f8\u5bf9\u8def\u5f84": 683, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u7528\u6237\u7684\u8bad\u7ec3\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84": 683, "\u6307\u5b9a\u6bcf\u4e2a\u5173\u7cfb\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570": 695, "\u6307\u5b9a\u8bad\u7ec3\u673a\u5668\u4e2d\u5b58\u50a8\u4e0e\u5206\u5e03\u5f0f\u8bad\u7ec3\u6709\u5173\u7684\u6240\u6709\u6570\u636e\u7684\u76ee\u5f55": 683, "\u6307\u5b9a\u96c6\u7fa4\u7684ip\u914d\u7f6e\u6587\u4ef6": 683, "\u6307\u793a\u76f8\u5e94\u8282\u70b9\u548c\u8fb9\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7279\u5f81\u5b57\u6bb5\u540d": 693, "\u6362\u53e5\u8bdd\u8bf4": 681, "\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570": 693, "\u63a5\u53d7\u4e00\u4e2a\u5982\u4e0a\u6240\u8ff0\u7684\u53c2\u6570": 693, "\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178": 695, "\u63a5\u53d7\u6765\u81ea\u540e\u7aef\u6846\u67b6\u7684\u4efb\u4f55\u8bbe\u5907\u5bf9\u8c61": 688, "\u63a5\u53e3\u53ef\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5f81": 687, "\u63a5\u53e3\u7684\u91cd\u8981\u8bf4\u660e": 687, "\u63a5\u6536\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u5f20\u91cf\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 713, "\u63a5\u7740\u8c03\u7528\u7528\u6237\u9884\u5148\u6ce8\u518c\u5728\u8be5\u5173\u7cfb\u4e0a\u7684nn\u6a21\u5757": 707, "\u63a8\u65ad": 681, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [680, 691], "\u63a8\u65ad\u7b97\u6cd5\u4e0d\u540c\u4e8e\u8bad\u7ec3\u7b97\u6cd5": 700, "\u63a8\u65ad\u7b97\u6cd5\u5c06\u5305\u542b\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 700, "\u63a8\u7406\u671f\u95f4\u5b9a\u4f4d\u8282\u70b9": 682, "\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5e03\u5c14\u6570\u7ec4\u8868\u793a\u8bad\u7ec3": 681, "\u63a9\u7801": 675, "\u63a9\u7801\u5728pytorch\u548ctensorflow\u4e2d\u662fbool\u5f20\u91cf": 678, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee5\u56fe\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u62bd\u8c61": 684, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u540c\u6784\u56fe\u8282\u70b9\u5206\u7c7b\u7684\u4f8b\u5b50": 713, "\u63d0\u4f9b\u4e86\u4e00\u4e9b\u529f\u80fd": 681, "\u63d0\u4f9b\u4e86\u4e00\u5c0f\u90e8\u5206": 681, "\u63d0\u4f9b\u4e86\u51e0\u4e2aapi\u6765\u8bbf\u95ee\u56fe\u7ed3\u6784": 681, "\u63d0\u4f9b\u4e86\u5bf9": 702, "\u63d0\u4f9b\u4e86\u63a5\u53e3\u4ee5\u5904\u7406\u56fe\u7684\u7ed3\u6784": 684, "\u63d0\u4f9b\u4e86\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 678, "\u63d0\u5230\u7684\u4e24\u5c42gcn\u4e3a\u4f8b": 700, "\u64cd\u4f5c": 693, "\u652f\u6301\u7d22\u5f15\u8bfb\u53d6\u548c\u5199\u5165": 681, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u975e\u5e38\u76f8\u4f3c": 699, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8fb9\u5206\u7c7b": 701, "\u6570\u636e\u5bfc\u5165": 678, "\u6570\u636e\u6587\u4ef6\u5939": 690, "\u6570\u636e\u6837\u672c\u7684\u6570\u91cf": 675, "\u6570\u636e\u96c6\u4e2d\u56fe\u7684\u6570\u91cf": 678, "\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u5f20\u56fe\u90fd\u6709\u5b83\u72ec\u7279\u7684\u7ed3\u6784\u548c\u8282\u70b9\u4e0e\u8fb9\u7684\u7279\u5f81": 711, "\u6570\u636e\u96c6\u4e2d\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u56fe": 678, "\u6570\u636e\u96c6\u4e5f\u53ea\u5305\u62ec\u4e00\u4e2a\u56fe": 677, "\u6570\u636e\u96c6\u7c7b\u4f3c": 677, "\u6574\u56fe\u5206\u7c7b": [678, 691, 708, 713], "\u6574\u56fe\u5206\u7c7b\u4e0e\u8282\u70b9\u5206\u7c7b\u6216\u94fe\u63a5\u9884\u6d4b\u7684\u4e3b\u8981\u533a\u522b\u662f": 711, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u8fd8\u9700\u8981\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u8868\u793a": 711, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u9700\u8981\u5728\u5f88\u591a\u56fe\u4e0a\u8fdb\u884c\u8bad\u7ec3": 711, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u4e0e\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u5178\u578b\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u7684\u5927\u591a\u6570\u6570\u636e\u96c6\u7c7b\u4f3c": 678, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u91cc\u7684\u6bcf\u4e2a\u6570\u636e\u70b9\u662f\u4e00\u4e2a\u56fe\u548c\u5b83\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4": 711, "\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u53ef\u4ee5\u8bc6\u522b\u793e\u533a\u7684\u7c7b\u578b": 711, "\u6574\u56fe\u5206\u7c7b\u6d41\u7a0b": 711, "\u6574\u56fe\u5206\u7c7b\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a": 711, "\u6587\u4ef6\u4e2d\u52a0\u8f7d": 686, "\u6587\u4ef6\u7684\u6240\u6709\u8def\u5f84\u90fd\u5e94\u6307\u5b9a\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u7684\u76f8\u5bf9\u8def\u5f84": 683, "\u65b9\u4fbf\u5e7f\u5927\u4e2d\u6587\u7528\u6237\u7fa4\u5b66\u4e60\u548c\u4f7f\u7528dgl": 691, "\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\u9a8c\u8bc1": 689, "\u65b9\u6cd5": [696, 698], "\u65b9\u6cd5\u4ece\u6700\u540e\u4e00\u5c42\u5f00\u59cb\u751f\u6210\u4e00\u4e2a\u5757\u7684\u5217\u8868": 698, "\u65b9\u6cd5\u8ba1\u7b97\u8fb9\u9884\u6d4b\u7684\u7ec4\u4ef6\u5373\u53ef\u8fdb\u884c\u8fb9\u5206\u7c7b": 709, "\u65b9\u6cd5\u8ba1\u7b97\u9884\u6d4b\u503c\u5373\u53ef": 709, "\u65e0\u5411\u7684": 685, "\u65e0\u76d1\u7763\u5b66\u4e60graphsag": 701, "\u65e0\u9700\u8fdb\u884c\u6b64\u7c7b\u68c0\u9a8c": 706, "\u65f6": 681, "\u65f6\u5206\u5e03\u5f0f\u91c7\u6837\u4ee3\u7801\u4e0e\u5355\u8fdb\u7a0b\u91c7\u6837\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c": 681, "\u65f6\u8bbe\u7f6e": 699, "\u65f6\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u8fed\u4ee3": 699, "\u65f6\u9700\u8981\u6307\u5b9a\u8fb9\u7684\u7c7b\u578b": 709, "\u662f": 682, "\u662f1\u4e2a\u5143\u7ec4\u65f6": 706, "\u662f\u4e00\u4e2apython\u7c7b": 681, "\u662f\u4e00\u4e2a\u56fe\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u51c6\u6570\u636e\u96c6": 677, "\u662f\u4e00\u4e2a\u5728\u4e8c\u5206\u56fe\u4e0a\u505a\u8fb9\u5206\u7c7b\u7684\u4ee3\u7801\u793a\u4f8b": 699, "\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u90bb\u5c45\u91c7\u6837\u5668\u7c7b": 698, "\u662f\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\u7684\u51fd\u6570": 698, "\u662f\u4e00\u4e2a\u9ad8\u7ea7api": 693, "\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 699, "\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 684, "\u662f\u4ece\u5747\u5300\u5206\u5e03\u4e2d\u91c7\u6837\u7684": 712, "\u662f\u4ee5\u8fb9\u7c7b\u578b\u5b57\u5178\u548c\u9884\u6d4b\u7ed3\u679c\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 701, "\u662f\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 695, "\u662f\u5426\u6253\u5370\u8fdb\u5ea6\u4fe1\u606f": 675, "\u662f\u5426\u91cd\u65b0\u5bfc\u5165\u6570\u636e\u96c6": 675, "\u662f\u56fe": 711, "\u662f\u5904\u7406": 675, "\u662f\u5b9a\u4e49\u5728\u6bcf\u6761\u8fb9\u4e0a\u7684\u6d88\u606f\u51fd\u6570": 692, "\u662f\u5bf9\u5e94\u6bcf\u4e2a\u5173\u7cfb": 707, "\u662f\u5e38\u6570\u9879\u8d85\u53c2\u6570": 712, "\u662f\u7528\u4e8e\u7279\u5f81\u5f52\u4e00\u5316\u7684\u53ef\u8c03\u7528\u51fd\u6570": 705, "\u662f\u805a\u5408\u51fd\u6570": 707, "\u662f\u8282\u70b9": 711, "\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55": 683, "\u662f\u987e\u5ba2": 685, "\u6635\u79f0": 691, "\u6682\u4e0d\u652f\u6301\u7a00\u758f\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 681, "\u66f4\u591a\u7ec6\u8282": 678, "\u66f4\u591a\u8be6\u7ec6\u7528\u6cd5\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357": 696, "\u66f4\u65b0\u51fd\u6570": [692, 693], "\u66f4\u65b0\u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u53c2\u6570": 693, "\u66ff\u6362\u4e3a": 702, "\u6700\u540e": [707, 711], "\u6700\u5e38\u89c1\u548c\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4efb\u52a1\u4e4b\u4e00\u5c31\u662f\u8282\u70b9\u5206\u7c7b": 713, "\u6700\u7b80\u5355\u7684\u90bb\u5c45\u91c7\u6837\u5668\u662f": 703, "\u6709": 693, "\u67093\u4e2a\u6587\u4ef6\u4ee5dgl\u683c\u5f0f\u5b58\u50a8\u5206\u533a\u6570\u636e": 682, "\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9002\u5408\u4fdd\u5b58\u5904\u7406\u8fc7\u7684\u6570\u636e": 679, "\u6709\u5173dgl\u7684\u5185\u7f6e\u91c7\u6837\u5668\u7684\u5b8c\u6574\u5217\u8868": 699, "\u6709\u5173dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u5982\u4f55\u5de5\u4f5c": 713, "\u6709\u5173\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 678, "\u6709\u5173\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 678, "\u6709\u5173\u8bad\u7ec3\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 678, "\u6709\u5173\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 678, "\u6709\u5206\u5e03\u5f0f\u7684\u7248\u672c": 681, "\u6709\u5411": 685, "\u6709\u5411\u7684": 685, "\u6709\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u53ef\u50a8\u5b58\u56fe": 686, "\u6709\u65f6\u5e0c\u671b\u4ece\u8ba1\u7b97\u4f9d\u8d56\u4e2d\u5220\u9664\u51fa\u73b0\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u8fb9": 699, "\u6709\u65f6\u7528\u6237\u4f1a\u60f3\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 708, "\u6709\u65f6\u7528\u6237\u5e0c\u671b\u9884\u6d4b\u56fe\u4e2d\u8fb9\u7684\u5c5e\u6027\u503c": 709, "\u6709\u65f6\u8fb9\u4e0a\u7684\u6d88\u606f\u53ef\u80fd\u662f\u9ad8\u7ef4\u7684": 694, "\u6709\u7740\u8bb8\u591a\u4f7f\u7528\u8282\u70b9\u5d4c\u5165\u7684\u65b9\u6cd5": 712, "\u670d\u52a1\u5668": 680, "\u670d\u52a1\u5668\u8fdb\u7a0b": 680, "\u670d\u52a1\u5668\u8fdb\u7a0b\u8d1f\u8d23\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570": 681, "\u672a\u52a0\u6743\u7684": 685, "\u672a\u6765dgl\u5c06\u652f\u6301\u5206\u5e03\u5f0f\u56fe\u5212\u5206": 682, "\u672c\u4f8b\u4e2d\u7701\u7565": 713, "\u672c\u7ae0\u4e2d\u9009\u62e9": 713, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5728\u5927\u56fe\u4e0a\u8fdb\u884c\u968f\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u65b9\u6cd5": 697, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4e3a\u7528\u6237\u81ea\u5df1\u7684\u56fe\u6570\u636e\u521b\u5efa\u4e00\u4e2adgl\u6570\u636e\u96c6": 674, "\u672c\u7ae0\u4ee3\u7801\u4f7f\u7528pytorch\u4f5c\u4e3adgl\u7684\u540e\u7aef\u6846\u67b6": 708, "\u672c\u7ae0\u4f1a\u4ee5\u4e0b\u9762\u4ee3\u7801\u6240\u521b\u5efa\u7684\u4e00\u4e2a\u5f02\u6784\u56fe\u4e3a\u4f8b": 708, "\u672c\u7ae0\u4f59\u4e0b\u7684\u5c0f\u8282\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4e3b\u9898": 697, "\u672c\u7ae0\u5047\u8bbe\u7528\u6237\u7684\u56fe\u4ee5\u53ca\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u90fd\u80fd\u5b58\u8fdbgpu": 708, "\u672c\u7ae0\u5171\u6709\u56db\u8282": 708, "\u672c\u7ae0\u5c06\u4f7f\u7528pytorch\u4f5c\u4e3a\u540e\u7aef": 704, "\u672c\u7ae0\u7684": 713, "\u672c\u7ae0\u7684\u524d\u534a\u90e8\u5206\u4ecb\u7ecd\u4e86\u4e0d\u540c\u573a\u666f\u4e0b\u5982\u4f55\u8fdb\u884c\u968f\u673a\u8bad\u7ec3\u7684\u65b9\u6cd5": 697, "\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u5206\u5e03\u5f0f\u7ec4\u4ef6": 680, "\u672c\u7ae0\u7684\u540e\u7eed\u90e8\u5206\u5c55\u793a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5": 675, "\u672c\u7ae0\u7684\u5f02\u6784\u56fe\u6837\u4f8b\u6570\u636e": 709, "\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u89e3\u91ca\u4e86\u5982\u4f55\u5728\u5f02\u6784\u56fe\u4e0a\u5b9e\u73b0\u6d88\u606f\u4f20\u9012": 692, "\u672c\u7ae0\u901a\u8fc7\u4f7f\u7528": 708, "\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u4e86dgl\u7684\u6d88\u606f\u4f20\u9012api": 692, "\u672c\u7ae0\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e86\u56fe\u7684\u5b9a\u4e49": 684, "\u672c\u8282\u4e0d\u6d89\u53ca\u901a\u8fc7\u8f6c\u6362\u5176\u4ed6\u56fe\u6765\u751f\u6210\u56fe\u7684\u51fd\u6570": 686, "\u672c\u8282\u4ec5\u7ed9\u51fa\u4e00\u4e9b\u5e38\u89c1\u683c\u5f0f\u7684\u4e00\u822c\u60c5\u51b5": 686, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728gpu\u663e\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u5c0f\u6279\u6b21\u5904\u7406\u548c\u90bb\u5c45\u91c7\u6837\u5b9e\u73b0\u5168\u56fe\u524d\u5411\u4f20\u64ad\u7684\u65b9\u6cd5": 700, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97api": 681, "\u672c\u8282\u4ee5\u5185\u7f6e\u6570\u636e\u96c6": 678, "\u672c\u8282\u4ee5\u5185\u7f6e\u7684\u6570\u636e\u96c6": 678, "\u672c\u8282\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u7684\u57fa\u672c\u7528\u6cd5": 677, "\u672c\u8282\u4f1a\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u7528\u6237\u81ea\u5df1\u7684\u91c7\u6837\u5668\u5e76\u5c06\u5176\u52a0\u5165\u5230gnn\u7684\u8bad\u7ec3\u6846\u67b6\u4e2d": 698, "\u672c\u8282\u4f7f\u7528dgl\u5185\u7f6e\u7684\u6570\u636e\u96c6": 713, "\u672c\u8282\u5c06\u5c55\u793a\u5982\u4f55\u5904\u7406\u4e0e\u8fd9\u4e9b\u4efb\u52a1\u76f8\u5173\u7684\u6570\u636e\u96c6": 678, "\u672c\u8282\u628a\u8282\u70b9": 712, "\u672c\u8282\u91cd\u70b9\u4ecb\u7ecd\u4e86\u5904\u7406\u56fe": 678, "\u672c\u8d28\u4e0a": 702, "\u673a\u5668\u96c6\u7fa4\u4e0a": 683, "\u674e\u5e86\u6807": 691, "\u6765\u4fdd\u5b58\u56fe\u7684\u70b9id": 689, "\u6765\u505a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u94fe\u8def\u9884\u6d4b\u7684\u6570\u636e\u96c6": 678, "\u6765\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u5757\u7684\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 703, "\u6765\u5904\u7406zip\u6587\u4ef6": 676, "\u6765\u5c55\u793a\u6a21\u578b\u7684\u8bad\u7ec3": 713, "\u6765\u5e73\u8861\u6bcf\u4e2a\u7c7b\u578b\u8282\u70b9\u5728\u5b50\u56fe\u4e2d\u7684\u5165\u5ea6": 682, "\u6765\u5f00\u53d1\u6d88\u606f\u4f20\u9012\u529f\u80fd": 694, "\u6765\u6307\u4ee3\u8fd9\u4e24\u4e2a\u5173\u7cfb\u662f\u53ef\u4ee5\u7684": 690, "\u6765\u6307\u5b9a\u6574\u5408\u4e0d\u540c\u5173\u7cfb\u805a\u5408\u7ed3\u679c\u7684\u65b9\u5f0f": 695, "\u6765\u6307\u793a\u6b64\u591a\u4efb\u52a1\u6570\u636e\u96c6\u4e2d\u7684\u9884\u6d4b\u4efb\u52a1\u603b\u6570": 678, "\u6765\u66ff\u6362\u56fe": 703, "\u6765\u67e5\u770bdgl\u7684\u5185\u7f6e\u6a21\u578b\u6a21\u5757\u662f\u5426\u652f\u6301\u63a5\u53d7": 703, "\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684\u6570\u636e\u96c6": 678, "\u6765\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 708, "\u6765\u81eanetworkx": 686, "\u6765\u81eascipi": 686, "\u6765\u81ea\u52a8\u5b8c\u6210": 676, "\u6765\u83b7\u53d6\u8282\u70b9": 680, "\u6765\u83b7\u53d6\u88ab\u5212\u5206\u7684\u56fe\u5206\u533a\u6570\u636e": 680, "\u6765\u83b7\u5f97\u5206\u7c7b\u8f93\u51fa": 711, "\u6765\u8ba1\u7b97\u8282\u70b9\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 712, "\u6765\u8ba1\u7b97\u8fb9\u7684\u5206\u6570": 701, "\u6765\u8bbf\u95ee\u8282\u70b9\u548c\u8fb9\u4e2d\u7684\u6570\u636e": 681, "\u6765\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 701, "\u6784\u5efa\u4e00\u4e2a2\u5c42\u7684gnn\u6a21\u578b": 713, "\u6784\u5efa\u4e86\u4e00\u4e2a\u65e0\u5411\u7684networkx\u56fe": 686, "\u6784\u5efa\u56fe": 678, "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": [691, 702, 708, 713], "\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u6ce8\u518c\u548c\u524d\u5411\u4f20\u64ad\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u5f20\u91cf\u64cd\u4f5c\u4e0e\u540e\u7aef\u6846\u67b6\u4e00\u6837": 704, "\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1": 705, "\u6784\u9020\u51fd\u6570\u7684\u6700\u540e\u8c03\u7528\u4e86": 705, "\u6807\u7b7e": [675, 678], "\u6807\u7b7e\u548c\u6570\u636e\u96c6\u5212\u5206\u7684\u63a9\u7801": 675, "\u6807\u7b7e\u6570\u7b49\u57fa\u672c\u4fe1\u606f": 675, "\u6807\u91cf\u6574\u578b\u7279\u5f81": 687, "\u6829\u6829\u7684\u590f\u5929": 691, "\u6839\u636e": 709, "\u6839\u636edgl\u6240\u4f7f\u7528\u7684\u540e\u7aef\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 704, "\u6839\u636e\u4efb\u52a1\u8bbe\u8ba1\u5206\u7c7b\u5c42": 711, "\u6839\u636e\u5176\u590d\u6742\u6027": 695, "\u6839\u636e\u5f53\u524d\u7684\u4efb\u52a1\u60c5\u51b5": 682, "\u6839\u636e\u8fd9\u4e2a\u826f\u597d\u7684\u6027\u8d28": 711, "\u6839\u636e\u9700\u8981\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u6765\u9009\u62e9": 702, "\u68c0\u67e5": 676, "\u68c0\u67e5\u5728": [675, 679], "\u68c0\u6d4b\u8f93\u5165\u56fe\u5bf9\u8c61\u662f\u5426\u7b26\u5408\u89c4\u8303": 706, "\u6a21\u5757": [691, 702, 708, 713], "\u6a21\u5757\u4e2d": 706, "\u6a21\u5757\u4f5c\u4e3a\u56fe\u5377\u79ef\u5c42": 711, "\u6a21\u5757\u63a5\u53d7\u7684\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684": 703, "\u6a21\u5757\u9996\u5148\u5bf9\u6bcf\u79cd\u8fb9\u7c7b\u578b\u8fdb\u884c\u5355\u72ec\u7684\u56fe\u5377\u79ef\u8ba1\u7b97": 713, "\u6a21\u578b": 681, "\u6a21\u578b\u4e2d\u5e94\u7279\u522b\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9": 711, "\u6a21\u578b\u5b9a\u4e49": 680, "\u6a21\u578b\u5b9a\u4e49\u5b8c\u6210\u540e": 711, "\u6a21\u578b\u5b9e\u73b0\u4f4d\u4e8e": 711, "\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6\u4e2d": 709, "\u6a21\u578b\u5c06": 699, "\u6a21\u578b\u63a5\u53d7\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868": 699, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u51e0\u4e4e\u76f8\u540c": 703, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c": 699, "\u6a21\u578b\u7684\u8f93\u5165\u662f\u5e26\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u7684\u6279\u6b21\u5316\u56fe": 711, "\u6a21\u578b\u8bad\u7ec3\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u4f4d\u4e8e": 711, "\u6a21\u578b\u8bad\u7ec3\u7684\u5faa\u73af": 680, "\u6b22\u8fce\u7ed9dgl\u8d21\u732e\u66f4\u591a\u7684\u6a21\u5757": 704, "\u6b63\u5728\u9500\u552e": 685, "\u6b63\u6837\u672c": 701, "\u6b64\u51fd\u6570\u5bf9": 693, "\u6b64\u521b\u5efa\u8fc7\u7a0b\u624d\u80fd\u6210\u529f": 681, "\u6b64\u5904\u53ea\u662f\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49gnn\u6a21\u5757\u7684\u4e00\u4e2a\u793a\u4f8b": 702, "\u6b64\u5916": [678, 688, 690], "\u6b64\u6a21\u5f0f\u4e3b\u8981\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5": 681, "\u6b64\u8c03\u7528\u901a\u8fc7\u5c06\u6e90\u8282\u70b9\u7279\u5f81": 693, "\u6bcf\u4e00\u6761\u8fb9": 712, "\u6bcf\u4e2a": 677, "\u6bcf\u4e2a\u5173\u7cfb\u4e0a\u7684dgl": 707, "\u6bcf\u4e2a\u5173\u7cfb\u7531\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4": 690, "\u6bcf\u4e2a\u56fe\u7684\u6807\u7b7e\u6570": 678, "\u6bcf\u4e2a\u8282\u70b9\u7279\u5f81\u5177\u6709\u552f\u4e00\u540d\u79f0": 687, "\u6bcf\u4e2a\u8fb9\u7279\u5f81\u4e5f\u5177\u6709\u552f\u4e00\u540d\u79f0": 687, "\u6bcf\u53f0\u8ba1\u7b97\u673a\u8d1f\u8d23\u4e00\u4e2a\u4e14\u53ea\u8d1f\u8d23\u4e00\u4e2a\u5206\u533a": 681, "\u6bcf\u5c42\u53ea\u5c55\u793a\u524d3\u4e2a\u5c0f\u6279\u6b21": 700, "\u6bcf\u6761\u8fb9\u7684\u6743\u91cd": 687, "\u6bcf\u6761\u8fb9\u90fd\u4e0e\u4e00\u4e2a\u6807\u91cf\u6743\u91cd\u503c\u76f8\u5173\u8054": 685, "\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u91cf\u6743\u91cd": 710, "\u6bcf\u6b21\u68af\u5ea6\u4e0b\u964d": 697, "\u6bcf\u79cd\u5173\u7cfb\u5bf9\u5e94\u4e00\u4e2a": 706, "\u6bcf\u8282\u5bf9\u5e94\u4e00\u79cd\u56fe\u5b66\u4e60\u4efb\u52a1": 708, "\u6bcf\u884c\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 683, "\u6bd4\u5982": [694, 705], "\u6bd4\u5982gml\u6216json": 690, "\u6bd4\u5982\u5217\u8868": 689, "\u6bd4\u5982\u5728": 706, "\u6c88\u6210": 691, "\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u8fb9": 698, "\u6ca1\u6709\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u5c31\u6ca1\u6709\u660e\u786e\u7684\u8fd4\u56de\u503c": 690, "\u6ce8\u518c\u53c2\u6570\u548c\u5b50\u6a21\u5757": 705, "\u6ce8\u518c\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u6216\u8005\u5b50\u6a21\u5757": 705, "\u6ce8\u610f": [686, 690, 700, 702, 708], "\u6ce8\u610f\u7ed3\u679c\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u7279\u5f81": 695, "\u6ce8\u610f\u8ba1\u7b97\u65b9\u6cd5\u662f\u4e00\u6837\u7684": 700, "\u6d4b\u8bd5\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u5bf9\u5e94\u8282\u70b9": 681, "\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u91cd\u590d\u591a\u8f6e": 713, "\u6d88\u606f\u4f20\u9012\u662f\u5b9e\u73b0gnn\u7684\u4e00\u79cd\u901a\u7528\u6846\u67b6\u548c\u7f16\u7a0b\u8303\u5f0f": 692, "\u6d88\u606f\u4f20\u9012\u7684\u5b9a\u4e49\u662f": 698, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [691, 708, 709, 713], "\u6d88\u606f\u4f20\u9012\u9700\u8981\u805a\u96c6\u5176\u90bb\u5c45": 698, "\u6d88\u606f\u51fd\u6570": 693, "\u6d88\u606f\u7684\u5185\u7f6e\u51fd\u6570\u7684\u547d\u540d\u7ea6\u5b9a\u662f": 693, "\u6d88\u606f\u805a\u5408\u548c\u8282\u70b9\u7279\u5f81\u66f4\u65b0": 693, "\u6e38\u620f": 690, "\u6e90": [693, 694], "\u6e90\u4ee3\u7801": 678, "\u6e90\u6587\u4ef6\u4e2d\u7684": 711, "\u6e90\u8282\u70b9": 701, "\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u76f8\u540c": 706, "\u6e90\u8282\u70b9\u7279\u5f81": 706, "\u6e90\u8282\u70b9\u7c7b\u578b": 690, "\u6fc0\u6d3b\u51fd\u6570": 706, "\u70b9\u4e0a\u8ba1\u7b97": 692, "\u7136\u540e": [703, 713], "\u7136\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e9b": 684, "\u7136\u540e\u540c\u6837\u901a\u8fc7\u8c03\u7528": 709, "\u7136\u540e\u5728\u5b50\u56fe\u4e0a\u8c03\u7528": 696, "\u7136\u540e\u5728\u7f51\u7edc\u7684\u7b2c": 697, "\u7136\u540e\u5bf9\u6240\u6709\u6d88\u606f\u6c42\u548c\u6765\u66f4\u65b0\u8282\u70b9\u7279\u5f81": 693, "\u7136\u540e\u5c06\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4e0a\u7684\u6d88\u606f\u805a\u5408\u7ed3\u679c\u518d\u76f8\u52a0": 713, "\u7136\u540e\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u8fb9\u7684": 693, "\u7136\u540e\u5c06\u8be5\u5b50\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 690, "\u7136\u540e\u5e94\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42": 694, "\u7136\u540e\u6839\u636e\u56fe\u7c7b\u578b\u6269\u5c55\u8f93\u5165\u7279\u5f81": 706, "\u7136\u540e\u8bb2\u89e3\u4e86\u5982\u4f55\u9ad8\u6548\u5730\u5728\u70b9\u548c\u8fb9\u4e0a\u4f7f\u7528\u8fd9\u4e9bapi": 692, "\u7136\u800c": 700, "\u7269\u54c1": [684, 685], "\u7279\u5f81": [675, 690], "\u7279\u5f81\u4e0a": 693, "\u7279\u5f81\u4e5f\u5fc5\u987b\u5728gpu\u4e0a": 688, "\u7279\u5f81\u548c\u5212\u5206\u63a9\u7801\u7684\u6807\u51c6\u65b9\u6cd5": 678, "\u7279\u5f81\u548c\u76ee\u6807\u8282\u70b9\u7684": 693, "\u7279\u5f81\u5c3a\u5bf8\u662f7": 711, "\u7279\u5f81\u5f20\u91cf\u4f7f\u7528": 687, "\u7279\u5f81\u6570\u636e\u4e5f\u62f7\u8d1d\u5230\u4e86gpu\u4e0a": 688, "\u7279\u5f81\u6c42\u548c": 693, "\u7279\u6b64\u81f4\u8c22\u4e0b\u8ff0\u8d21\u732e\u8005": 691, "\u72ec\u7acb\u6a21\u5f0f\u8981\u6c42\u8f93\u5165\u56fe\u4ec5\u5177\u6709\u4e00\u4e2a\u5206\u533a": 681, "\u738b\u5efa\u6c11": 691, "\u73a9": 690, "\u751f\u6210\u8fb9\u754c": 698, "\u7528": [680, 689, 704], "\u7528\u4e8e\u5206\u5e03\u5f0f\u56fe\u7684": 681, "\u7528\u4e8e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684": 681, "\u7528\u4e8e\u521d\u59cb\u5316": 681, "\u7528\u4e8e\u5728dgl\u4e2d\u81ea\u5b9a\u4e49\u56fe\u6570\u636e\u96c6\u7684\u6a21\u677f": 675, "\u7528\u4e8e\u5728\u673a\u5668\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1": 683, "\u7528\u4e8e\u5b9a\u4e49\u5f02\u6784\u56fe\u4e0agnn\u6a21\u5757": 707, "\u7528\u4e8e\u5bf9\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u91c7\u6837\u4ee5\u751f\u6210\u5c0f\u6279\u6b21\u8bad\u7ec3\u6570\u636e": 681, "\u7528\u4e8e\u5c06\u56fe\u5206\u533a\u590d\u5236\u5230\u96c6\u7fa4": 683, "\u7528\u4e8e\u6307\u5b9a\u56fe\u7c7b\u578b\u5e76\u5c06": 706, "\u7528\u4e8e\u8bbf\u95ee\u5176\u5143\u6570\u636e": 681, "\u7528\u4e8e\u8bbf\u95ee\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d\u7684\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 681, "\u7528\u4ece0\u5f00\u59cb\u7684\u8fde\u7eed\u6574\u6570\u91cd\u65b0\u6807\u8bb0\u6240\u6709\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 690, "\u7528\u4fdd\u5b58\u7684\u8fb9\u7279\u5f81\u4e0e\u5bf9\u5e94\u8fb9\u7684\u539f\u59cb\u6d88\u606f\u76f8\u4e58": 710, "\u7528\u6237": [684, 685, 690], "\u7528\u6237\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5b83": 693, "\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528mlp": 709, "\u7528\u6237\u4e5f\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a": 709, "\u7528\u6237\u4ec5\u9700\u5bf9\u5355\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u8bad\u7ec3": 680, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 698, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528": 703, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8282\u70b9": 701, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7": 682, "\u7528\u6237\u53ea\u9700\u4f7f\u7528\u65b0\u7684\u8282\u70b9\u548c\u8fb9\u7684id": 682, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 703, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u51fa\u8282\u70b9\u7684\u6807\u7b7e": 703, "\u7528\u6237\u53ea\u9700\u8981\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a": 709, "\u7528\u6237\u53ef\u4ee5\u4ece\u8fd4\u56de\u7684\u5b57\u5178\u4e2d\u63d0\u53d6": 713, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528": [699, 713], "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u50cfpandas\u8fd9\u6837\u7684\u5305\u5148\u5c06csv\u6587\u4ef6\u89e3\u6790\u4e3anumpy\u6570\u7ec4\u6216\u6846\u67b6\u5f20\u91cf": 690, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 693, "\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u52a0\u8f7d\u5668": 698, "\u7528\u6237\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5c06\u8bad\u7ec3\u96c6": 682, "\u7528\u6237\u53ef\u4ee5\u53c2\u7167": 700, "\u7528\u6237\u53ef\u4ee5\u53c2\u8003": [678, 698, 699, 701, 703], "\u7528\u6237\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u5185\u7f6e\u6570\u636e\u96c6": 678, "\u7528\u6237\u53ef\u4ee5\u53ea\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4\u6765\u6307\u5b9a\u8fb9\u7c7b\u578b": 690, "\u7528\u6237\u53ef\u4ee5\u5728": [678, 713], "\u7528\u6237\u53ef\u4ee5\u5728\u5b9e\u4f8b\u5316": 699, "\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u6709\u5173\u6570\u636e\u96c6\u7684\u56fe": 675, "\u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b": 711, "\u7528\u6237\u53ef\u4ee5\u5bf9\u8981\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b\u6784\u9020\u4e00\u4e2a\u8d1f\u91c7\u6837\u56fe": 712, "\u7528\u6237\u53ef\u4ee5\u5c06": 681, "\u7528\u6237\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u6cbf\u6240\u6709\u5165\u8fb9\u4f20\u9012\u6d88\u606f\u7684\u8fb9\u754c": 698, "\u7528\u6237\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u6807\u7b7e\u4f7f\u7528": 709, "\u7528\u6237\u53ef\u4ee5\u5c06\u6743\u91cd\u50a8\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 687, "\u7528\u6237\u53ef\u4ee5\u5c06\u7528\u4e8e\u5757\u7684\u8bed\u53e5\u548c\u539f\u5148\u7528\u4e8e\u6574\u56fe\u7684\u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83": 702, "\u7528\u6237\u53ef\u4ee5\u5c06\u91c7\u6837\u5668\u5bf9\u8c61\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668\u5bf9\u8c61": 698, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u62d3\u5c55\u4e3a\u5bf9\u591a\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 712, "\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u5173\u7cfb\u5207\u7247\u7684\u65b9\u5f0f\u521b\u5efa\u8fd9\u4e2a\u56fe": 709, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u4f7f\u7528": 678, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6a21\u578b\u7684\u8bad\u7ec3": 713, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199\u9884\u6d4b\u6a21\u5757": 709, "\u7528\u6237\u53ef\u4ee5\u6309\u8282\u70b9\u7c7b\u578b\u6765\u83b7\u53d6\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 698, "\u7528\u6237\u53ef\u4ee5\u67e5\u9605": 703, "\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027": 678, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u590d\u7528\u5b83": 699, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 713, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528": 699, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528graphdataload": 711, "\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u7f16\u5199\u5728\u6240\u6709\u8fb9\u4e0a\u8fdb\u884c\u9884\u6d4b\u7684\u5168\u56fe\u8bad\u7ec3\u4ee3\u7801": 709, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": [698, 711], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539nn\u6a21\u5757\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c\u6765\u7ed9nn\u6a21\u5757\u589e\u52a0\u8fb9\u6743\u91cd\u652f\u6301": 710, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u4f20\u5165\u4e24\u4e2agpu\u5f20\u91cf\u6765\u521b\u5efagpu\u4e0a\u7684": 688, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u8981\u4fdd\u7559\u7684\u5173\u7cfb\u6765\u521b\u5efa\u5f02\u6784\u56fe\u7684\u5b50\u56fe": 690, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u8fb9": 701, "\u7528\u6237\u53ef\u4ee5\u904d\u5386\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u83b7\u5f97\u7531\u5c0f\u6279\u6b21\u8fb9\u7ec4\u6210\u7684\u5b50\u56fe": 699, "\u7528\u6237\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528": 712, "\u7528\u6237\u53ef\u4ee5\u91cd\u7528\u5728\u8fb9\u5206\u7c7b": 701, "\u7528\u6237\u53ef\u5c06\u4e00\u7cfb\u5217\u7684\u56fe\u5efa\u7acb\u6210\u4e00\u4e2a\u56fe\u6279\u6b21": 711, "\u7528\u6237\u53ef\u5c06\u5176\u4f20\u7ed9\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a": 711, "\u7528\u6237\u53ef\u5c06\u591a\u5f20\u56fe\u7ec4\u6210\u4e00\u4e2a\u6279\u6b21": 711, "\u7528\u6237\u53ef\u7528\u5982\u4e0b\u4ee3\u7801\u83b7\u53d6": 713, "\u7528\u6237\u53ef\u80fd\u4f1a\u9700\u8981\u6807\u51c6\u5316\u539f\u59cb\u8fb9\u6743\u91cd": 710, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u6cbf\u7740\u6240\u6709\u8fb9\u7c7b\u578b\u4ece\u90bb\u5c45\u90a3\u91cc\u6536\u96c6\u6d88\u606f": 713, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u9884\u6d4b\u7ed9\u5b9a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9": 712, "\u7528\u6237\u53ef\u80fd\u9700\u8981\u5c06\u4e00\u4e9b\u5173\u7cfb\u5408\u5e76": 690, "\u7528\u6237\u5728\u8bad\u7ec3\u8fb9\u5206\u7c7b\u6a21\u578b\u65f6": 699, "\u7528\u6237\u5728\u8c03\u7528dglgraph": 690, "\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 693, "\u7528\u6237\u5c06\u9700\u8981\u4e00\u53f0\u5927\u5185\u5b58\u7684\u673a\u5668\u6765\u5bf9\u56fe\u8fdb\u884c\u5212\u5206": 682, "\u7528\u6237\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b": 711, "\u7528\u6237\u5e0c\u671b\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e94\u7528\u4e0d\u540c\u7684\u64cd\u4f5c": 690, "\u7528\u6237\u5fc5\u987b\u5b9e\u73b0": 678, "\u7528\u6237\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5757": 703, "\u7528\u6237\u6307\u5357\u5c06\u4ee5\u5185\u7f6e\u6570\u636e\u96c6\u4e3a\u4f8b": 678, "\u7528\u6237\u6700\u597d\u4f7f\u7528": 689, "\u7528\u6237\u6709\u65f6\u4f1a\u5e0c\u671b\u4ece\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u56fe\u4e2d\u5220\u53bb\u90e8\u5206\u8fb9\u53ca\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9": 699, "\u7528\u6237\u7684\u4efb\u52a1\u662f\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 709, "\u7528\u6237\u81ea\u5df1\u7684\u8bad\u7ec3\u4ee3\u7801": 678, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5411\u7c7b\u6dfb\u52a0\u5c5e\u6027\u4ee5\u6307\u793a\u4e00\u4e9b\u6709\u7528\u7684\u6570\u636e\u96c6\u4fe1\u606f": 678, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5c06\u65b0\u7684": 681, "\u7528\u6237\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u552f\u4e00\u7684\u5f20\u91cf\u540d\u79f0": 681, "\u7528\u6237\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 701, "\u7528\u6237\u8fd8\u5fc5\u987b\u5c06gnn\u7684\u5c42\u6570\u4f20\u9012\u7ed9\u7236\u7c7b": 698, "\u7528\u6237\u8fd8\u662f\u5728\u8282\u70b9\u6216\u8fb9\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 711, "\u7528\u6237\u8fd8\u9700\u8981\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5206\u5272\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 681, "\u7528\u6237\u9664\u4e86\u9700\u8981\u4f7f\u7528\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 711, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u6307\u5b9a\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf": 683, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u6761\u8fb9\u90fd\u521b\u5efa\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9": 689, "\u7528\u6237\u9700\u8981\u4ece\u6a21\u578b\u4e2d\u6536\u96c6\u6240\u6709\u5206\u5e03\u5f0f\u5d4c\u5165": 681, "\u7528\u6237\u9700\u8981\u5206\u5272\u8bad\u7ec3\u96c6": 681, "\u7528\u6237\u9700\u8981\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 701, "\u7528\u6237\u9700\u8981\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u53e6\u5916\u4e00\u4e2a\u56fe": 712, "\u7528\u6237\u9700\u8981\u63d0\u4f9b\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 681, "\u7528\u6237\u9700\u8981\u660e\u786e\u5730\u6307\u660e\u8282\u70b9\u7684\u6570\u91cf": 689, "\u7528\u6237\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8fb9\u5206\u7c7b": 709, "\u7528\u6237\u9996\u5148\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u7684\u7ef4\u5ea6": 705, "\u7528\u6765\u6307\u5b9a\u4e0d\u540c\u8bad\u7ec3\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u6240\u4f7f\u7528\u7684\u7aef\u53e3": 683, "\u7528\u8be5\u6a21\u5757\u8fdb\u884c\u79bb\u7ebf\u63a8\u65ad": 700, "\u7528\u8fb9\u4e24\u7aef\u8282\u70b9\u8868\u793a\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u6253\u5206": 699, "\u7531gpu\u5f20\u91cf\u6784\u9020\u7684\u56fe\u4e5f\u5728gpu\u4e0a": 688, "\u7531\u4e8etensor\u7c7b\u5185\u90e8\u4f7f\u7528c\u6765\u5b58\u50a8": 689, "\u7531\u4e8e\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\u5c06\u539f\u6765\u7684\u8fb9\u7c7b\u578b\u5b58\u6210\u8fb9\u7279\u5f81": 709, "\u7531\u4e8e\u6574\u56fe\u5206\u7c7b\u5904\u7406\u7684\u662f\u5f88\u591a\u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe": 711, "\u7531\u4e8e\u66f4\u65b0\u51fd\u6570\u901a\u5e38\u53ef\u4ee5\u7528\u7eaf\u5f20\u91cf\u64cd\u4f5c\u5b9e\u73b0": 693, "\u7531\u4e8e\u8fd9\u91cc\u7684\u5173\u7cfb\u5b9a\u4e49\u6d88\u9664\u4e86\u8fb9\u7c7b\u578b\u7684\u6b67\u4e49": 690, "\u7531\u591a\u5c42gnn\u8ba1\u7b97\u5f97\u51fa": 712, "\u7684": [689, 697], "\u7684api\u4ee5\u65b9\u4fbf\u6570\u636e\u8bbf\u95ee": 681, "\u7684api\u7528\u4e8e\u6b64\u4f18\u5316": 678, "\u7684nn\u6a21\u5757": 707, "\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u6240\u4e0d\u540c": 699, "\u7684\u5177\u4f53\u5b9a\u4e49": 713, "\u7684\u5178\u578b\u793a\u4f8b\u5982\u4e0b": 683, "\u7684\u5185\u5b58\u7a7a\u95f4": 697, "\u7684\u51fd\u6570\u662f": 706, "\u7684\u5212\u5206": 682, "\u7684\u5212\u5206\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba1\u7b97\u8d1f\u8f7d\u4e0d\u5e73\u8861": 682, "\u7684\u521b\u5efa\u662f\u4e00\u4e2a\u540c\u6b65\u64cd\u4f5c": 681, "\u7684\u521b\u5efa\u9700\u8981": 681, "\u7684\u524d\u9a71\u8282\u70b9": 698, "\u7684\u539f\u5219": 687, "\u7684\u53c2\u6570": 695, "\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6d88\u606f\u51fd\u6570": 693, "\u7684\u56fe\u540d\u79f0\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570": 682, "\u7684\u5b50\u7c7b": [674, 678], "\u7684\u5b9e\u4f8b": 693, "\u7684\u5b9e\u73b0\u4e5f\u53d1\u751f\u4e86\u53d8\u5316": 678, "\u7684\u5b9e\u73b0\u4f1a\u5305\u542b\u4e24\u4e2a\u5b57\u5178": 703, "\u7684\u5b9e\u73b0\u5982\u4e0b": 698, "\u7684\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206": 694, "\u7684\u5f02\u6784\u56fe": 690, "\u7684\u5f20\u91cf": 710, "\u7684\u5f97\u5206\u6765\u8bad\u7ec3\u94fe\u8def\u6a21\u578b": 701, "\u7684\u6210\u5458\u5c5e\u6027": 693, "\u7684\u6240\u6709\u5165\u8fb9": 698, "\u7684\u6559\u7a0b": 686, "\u7684\u6570\u636e": 708, "\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c": 680, "\u7684\u6d88\u606f": 698, "\u7684\u7236\u7c7b": 698, "\u7684\u7279\u5f81": [684, 687, 711, 713], "\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u4e14\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5bfc\u5165\u56fe\u6570\u636e": 675, "\u7684\u793a\u4f8b": 707, "\u7684\u7b80\u5316\u7248": 702, "\u7684\u805a\u5408\u7ed3\u679c\u8fdb\u884c\u64cd\u4f5c": 693, "\u7684\u8282\u70b9": 685, "\u7684\u8282\u70b9\u5d4c\u5165": 713, "\u7684\u8282\u70b9\u7279\u5f81": 698, "\u7684\u8282\u70b9\u8868\u793a": 712, "\u7684\u8282\u70b9\u8868\u793a\u6a21\u5757\u79f0\u4f5c": 709, "\u7684\u8868\u5f81": 711, "\u7684\u8868\u793a\u6240\u9700\u7684\u8282\u70b9": 703, "\u7684\u8ba1\u7b97": 711, "\u7684\u8bba\u6587\u4e2d": 698, "\u7684\u8be6\u7ec6\u4fe1\u606f": 678, "\u7684\u8bed\u6cd5\u4e0e\u5e38\u89c4\u56fe\u4e2d\u7684": 698, "\u7684\u8bed\u6cd5\u5c06\u53ea\u5305\u542b\u8be5\u5173\u7cfb\u7684\u5b50\u56fe": 707, "\u7684\u8f93\u51fa": 698, "\u7684\u8f93\u51fa\u5f20\u91cf\u7684\u5217\u8868": 707, "\u7684\u8fb9": [689, 712], "\u7684\u8fb9\u4e92\u76f8\u8fde\u63a5": 685, "\u7684\u8fb9\u603b\u662f\u6709\u5411\u7684": 686, "\u7684\u8fb9\u7684\u6807\u7b7e": 709, "\u7684\u8fb9\u7c7b\u578b": 709, "\u7684\u90e8\u5206": 678, "\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u5411\u540e\u8fed\u4ee3": 698, "\u76ee\u524d": 681, "\u76ee\u5f55\u4e2d": 678, "\u76ee\u6807": [693, 694], "\u76ee\u6807\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 693, "\u76ee\u6807\u8282\u70b9\u6570\u7ec4\u5bf9\u4e3a\u503c\u7684\u5b57\u5178": 701, "\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 690, "\u76f4\u5230\u5230\u8fbe\u8f93\u5165\u5c42": 697, "\u76f4\u5230\u8bad\u7ec3\u4efb\u52a1\u7ed3\u675f": 681, "\u76f8\u4e58\u751f\u6210\u6d88\u606f": 693, "\u76f8\u5173api": [686, 687, 689, 690], "\u76f8\u5173\u6982\u8ff0\u8bf7\u9605\u8bfbapi\u53c2\u8003\u624b\u518c": 686, "\u76f8\u5173\u7684\u6838\u5fc3\u6982\u5ff5": 684, "\u76f8\u5173\u7684\u7279\u5f81\u4e5f\u4f1a\u88ab\u62f7\u8d1d": 690, "\u76f8\u540c": [698, 707], "\u76f8\u540c\u540d\u79f0\u7684\u7279\u5f81\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b": 687, "\u76f8\u5bf9\u5730": 685, "\u76f8\u6bd4\u4e4b\u4e0b": 700, "\u76f8\u6bd4\u540c\u6784\u56fe": 690, "\u77e5\u9053": 699, "\u786e\u5b9a": 706, "\u793a\u4f8b\u5982\u4e0b\u6240\u793a": 701, "\u793e\u4ea4\u7f51\u7edc\u7684\u56fe\u7531\u8868\u793a\u540c\u4e00\u5b9e\u4f53\u7c7b\u578b\u7684\u4eba\u53ca\u5176\u76f8\u4e92\u4e4b\u95f4\u7684\u793e\u4ea4\u5173\u7cfb\u7ec4\u6210": 685, "\u79cd\u5b50\u8282\u70b9": 698, "\u79f0\u4e3a": 675, "\u79f0\u4e3a\u70b9id": 689, "\u79f0\u4e3a\u8fb9id": 689, "\u7ae0\u8282": 691, "\u7ae0\u8282\u4e2d\u4e5f\u4f1a\u63d0\u5230": 698, "\u7b2c1\u7ae0": 691, "\u7b2c2\u4e2a\u5143\u7d20\u4e3a\u76ee\u6807\u8282\u70b9\u7279\u5f81": 706, "\u7b2c2\u7ae0": [691, 708, 709, 713], "\u7b2c3\u7ae0": [691, 702, 708, 713], "\u7b2c4\u7ae0": [691, 708, 711, 713], "\u7b2c5\u7ae0": [691, 697], "\u7b2c6\u7ae0": [691, 696, 706, 708], "\u7b2c7\u7ae0": 691, "\u7b2c\u4e00\u90e8\u5206\u4e0e": 699, "\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8f93\u51fa\u8282\u70b9": 698, "\u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u8fb9\u4e0a\u7684\u9884\u6d4b\u503c": 709, "\u7b2c\u4e8c\u90e8\u5206\u7684\u8f93\u5165\u901a\u5e38\u662f\u524d\u4e00\u90e8\u5206\u7684\u8f93\u51fa": 699, "\u7b49": [693, 705], "\u7b49conv\u6a21\u5757\u4e2d": 706, "\u7b49\u4ef7\u4e8e\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u63a5\u6536\u5230\u6d88\u606f\u6c42\u548c\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 693, "\u7ba1\u7406\u5728\u591a\u4e2a\u8ba1\u7b97\u673a\u4e2d\u88ab\u5212\u5206\u548c\u5b58\u50a8\u7684\u5bc6\u96c6\u5f20\u91cf": 681, "\u7c7b": 676, "\u7c7b\u4e2d\u4e0b\u8f7d\u4e00\u4e2a": 676, "\u7c7b\u4e2d\u770b\u5230\u6a21\u578b\u5b9e\u73b0\u7684\u7ec6\u8282": 713, "\u7c7b\u4f3c": 680, "\u7c7b\u548c": 703, "\u7c7b\u578b\u7684\u8282\u70b9\u4e5f\u4f1a\u88ab\u4fdd\u7559": 690, "\u7c7b\u578b\u7684\u8282\u70b9\u7684": 690, "\u7c7b\u578b\u7684\u8fb9\u7684": 690, "\u7c7b\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u6570\u636e\u5904\u7406\u7ba1\u9053": 674, "\u7c7b\u6709\u62bd\u8c61\u51fd\u6570": 675, "\u7c7b\u8fdb\u884c\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 703, "\u7ea2\u8272\u70b9": 698, "\u7ec6\u8282\u5185\u5bb9\u53ef\u4ee5\u5728\u4e0b\u9762\u7684disttensor\u548cdistembedding\u7ae0\u8282\u91cc\u67e5\u770b": 681, "\u7ed3\u5408\u4e86\u8282\u70b9\u8868\u793a\u6a21\u5757\u548c\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u6a21\u578b\u5982\u4e0b\u6240\u793a": 709, "\u7ed3\u5408\u4f7f\u7528": [699, 703], "\u7ed9\u5b9agnn\u5c42": 698, "\u7ed9\u5b9a\u4e00\u5f20\u56fe": 711, "\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 712, "\u7ed9\u5b9a\u8ba1\u7b97\u8282\u70b9\u548c\u8fb9\u4e0a\u8868\u793a\u7684\u6a21\u578b\u540e": 709, "\u7ed9\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u7f16\u53f7": 689, "\u7ef4\u5ea6\u901a\u5e38\u5305\u62ec\u8f93\u5165\u7684\u7ef4\u5ea6": 705, "\u7eff\u8272\u548c\u7ea2\u8272\u8282\u70b9": 698, "\u7eff\u8272\u70b9": 698, "\u7eff\u8272\u8282\u70b9": 698, "\u7f13\u5b58\u6982\u7387\u5206\u5e03": 701, "\u7f16\u5199dgl": [691, 704], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [691, 692, 706], "\u7f16\u7801\u5e02\u573a\u7684\u56fe\u53ef\u4ee5\u6709\u8868\u793a": 685, "\u8003\u8651\u4ee5\u4e0b\u57fa\u4e8edgl\u7684\u6d88\u606f\u4f20\u9012\u793a\u4f8b": 710, "\u8003\u8651\u4ee5\u4e0b\u8fb9\u754c": 698, "\u8003\u8651\u5230\u67d0\u4e9b\u56fe\u8fb9\u7684\u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u8282\u70b9\u7684\u6570\u91cf": 694, "\u8003\u8651\u5728\u4e00\u4e2a\u6709": 697, "\u800c": 686, "\u800c\u4e0d\u662f": 699, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7279\u5f81\u5f20\u91cf": 702, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5927\u56fe": 711, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u6807\u7b7e": 703, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81": 703, "\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u5927\u56fe\u6570\u636e": 711, "\u800c\u4e0d\u662f\u5e95\u5c42\u6846\u67b6\u91cc\u7684\u5f20\u91cf": 681, "\u800c\u4e0d\u662f\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u5f20\u91cf\u7684\u5b57\u5178": [699, 701], "\u800c\u4e14\u4e24\u79cd\u8282\u70b9\u5177\u6709\u4e0d\u540c\u7684\u7279\u5f81": 690, "\u800c\u4ee5\u4e0b\u7528\u6237\u5b9a\u4e49\u6d88\u606f\u51fd\u6570\u4e0e\u6b64\u5185\u7f6e\u51fd\u6570\u7b49\u4ef7": 693, "\u800c\u540e\u8005\u5219\u6807\u8bc6dgl\u670d\u52a1\u5668\u4e2d\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 681, "\u800c\u5728cpu\u4e0a\u8fdb\u884c\u5219\u8ba1\u7b97\u901f\u5ea6\u5f88\u6162": 700, "\u800c\u65e0\u9700\u8bbe\u8ba1\u590d\u6742\u7684\u56fe\u91c7\u6837\u7b97\u6cd5": 711, "\u800c\u662f\u5728": 693, "\u800c\u7ebf\u6027\u5c42\u8f93\u51fa\u7ef4\u6570\u8f83\u4f4e": 694, "\u800c\u975e4\u6761": 686, "\u805a\u5408\u51fd\u6570": [692, 693], "\u805a\u5408\u51fd\u6570\u6765\u5b9e\u73b0": 706, "\u805a\u5408\u51fd\u6570\u901a\u5e38\u6709\u4e24\u4e2a\u53c2\u6570": 693, "\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u4e0a\u7684\u7ed3\u679c": 707, "\u805a\u5408\u7c7b\u578b": 705, "\u805a\u5408\u7c7b\u578b\u51b3\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u4e0d\u540c\u8fb9\u4e0a\u7684\u4fe1\u606f": 705, "\u80e1\u9a8f": 691, "\u8282\u70b9": [684, 693], "\u8282\u70b92": 698, "\u8282\u70b93": 698, "\u8282\u70b93\u662f\u4e00\u4e2a\u5b64\u7acb\u8282\u70b9": 698, "\u8282\u70b98": 698, "\u8282\u70b9\u5206\u7c7b": [678, 691, 708], "\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b": 678, "\u8282\u70b9\u5206\u7c7b\u7684rgcn\u6a21\u578b": 709, "\u8282\u70b9\u5206\u7c7b\u901a\u5e38\u5728\u5355\u4e2a\u56fe\u4e0a\u8fdb\u884c": 678, "\u8282\u70b9\u548c": [694, 709], "\u8282\u70b9\u548c\u8fb9": [684, 691], "\u8282\u70b9\u548c\u8fb9id\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4": 689, "\u8282\u70b9\u548c\u8fb9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u6784\u5efa\u7684": 689, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [684, 691], "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0": 687, "\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684": 685, "\u8282\u70b9\u56de\u5f52\u4efb\u52a1\u4e5f\u7c7b\u4f3c": 713, "\u8282\u70b9\u5f20\u91cf": 689, "\u8282\u70b9\u6570\u636e\u540d\u79f0\u548c\u5f20\u91cf\u540d\u79f0\u4e0d\u5fc5\u76f8\u540c": 681, "\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 681, "\u8282\u70b9\u6807\u7b7e\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u5668\u4e2d": 703, "\u8282\u70b9\u7279\u5f81": 694, "\u8282\u70b9\u7279\u5f81\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u4e2d": 703, "\u8282\u70b9\u7279\u5f81\u548c\u6807\u7b7e\u5b58\u50a8\u5728\u5176\u56fe\u4e0a": 713, "\u8282\u70b9\u7279\u5f81\u548c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u5b58\u50a8\u5728": 678, "\u8282\u70b9\u7279\u5f81\u7ef4\u6570\u8f83\u9ad8": 694, "\u8282\u70b9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u7684": 690, "\u8282\u70b9\u7684\u6807\u7b7e": 678, "\u8282\u70b9\u7684\u7279\u5f81": 678, "\u8282\u70b9\u7684\u7c7b\u522b": 713, "\u8282\u70b9\u7684\u8fb9": 709, "\u8282\u70b9\u7c7b\u578b": 678, "\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7ed3\u679c": 703, "\u8282\u70b9\u8868\u793a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6": 712, "\u82e5\u7528\u56fe\u5bf9twitter\u7528\u6237\u7684\u5173\u6ce8\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21": 685, "\u82e5\u7528\u56fe\u5bf9\u793e\u4ea4\u7f51\u7edc\u4e2d\u4eba\u4eec\u7684\u53cb\u8c0a\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21": 685, "\u83ab\u4f73\u5e05\u5b50": 691, "\u83b7\u53d6": [690, 698], "\u83b7\u53d6drug\u8282\u70b9\u7684\u6570\u91cf": 690, "\u83b7\u53d6\u5212\u5206\u7684\u63a9\u7801": 678, "\u83b7\u53d6\u5212\u5206\u7684\u6807\u7b7e": 677, "\u83b7\u53d6\u5355\u4e00\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81": 690, "\u83b7\u53d6\u539f\u59cbid": 682, "\u83b7\u53d6\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u91cf": 690, "\u83b7\u53d6\u6807\u7b7e": 678, "\u83b7\u53d6\u7279\u5b9a\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u7684\u7279\u5f81": 690, "\u83b7\u53d6\u79cd": 698, "\u83b7\u53d6\u805a\u5408\u51fd\u6570\u7684\u5185\u90e8\u51fd\u6570": 707, "\u83b7\u53d6\u8282\u70b91\u7684\u7279\u5f81": 687, "\u83b7\u53d6\u8282\u70b9\u7279\u5f81": 678, "\u83b7\u53d6\u8282\u70b9\u7684id": 689, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u8fb9\u7c7b\u578b": 678, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u63a9\u7801": 678, "\u83b7\u53d6\u8fb90\u548c3\u7684\u7279\u5f81": 687, "\u83b7\u53d6\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 699, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9": 689, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9\u548c\u8fb9id": 689, "\u83b7\u5f97": 702, "\u867d\u7136dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u90bb\u5c45\u91c7\u6837\u5668": 698, "\u867d\u7136\u4e0a\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u8fb9\u754c": 698, "\u867d\u7136\u8fd9\u4e24\u4e2a\u6a21\u5757\u90fd\u6bd4\u4e0a\u8ff0\u7684\u793a\u4f8b\u4ee3\u7801\u8981\u590d\u6742": 709, "\u884c\u4f18\u5148": 687, "\u8868\u660e\u4e24\u8282\u70b9\u95f4\u5b58\u5728\u5173\u7cfb": 685, "\u8868\u793a": 693, "\u8868\u793a\u5728\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u5b58\u5728\u4ece": 690, "\u8868\u793a\u5b83\u662f\u4ece\u8282\u70b9": 689, "\u8868\u793a\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u8ba1\u7b97\u7ed3\u679c": 707, "\u88ab\u4e70\u4e0b": 699, "\u88ab\u5173\u6ce8": 699, "\u88ab\u805a\u5408\u7684\u7279\u5f81\u5c06\u4f1a\u4e0e\u8282\u70b9\u7684\u521d\u59cb\u7279\u5f81\u62fc\u63a5\u8d77\u6765": 706, "\u8981\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u91c7\u6837\u5668": 703, "\u8981\u5bf9\u6e90\u8282\u70b9\u7684": 693, "\u8981\u5c06\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u5165": 703, "\u8981\u6267\u884c\u8d1f\u91c7\u6837": 712, "\u8981\u67e5\u627e\u7ed9\u5b9a\u8282\u70b9\u7c7b\u578b\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u6570\u91cf": 698, "\u8981\u805a\u5408\u7684\u7279\u5f81\u5927\u5c0f\u4e3a": 711, "\u8981\u8ba1\u7b97": 698, "\u89c11": 684, "\u8ba1\u7b97": [698, 712], "\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u94fe\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 712, "\u8ba1\u7b97\u5e94\u7528\u4e8e\u7ed9\u5b9a\u7684\u4e00\u5806\u76ee\u6807\u8282\u70b9\u6240\u91c7\u6837\u7684\u5b50\u56fe": 706, "\u8ba1\u7b97\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 701, "\u8ba1\u7b97\u5fc5\u987b\u5728\u8fb9\u4e0a\u4fdd\u5b58\u6d88\u606f": 694, "\u8ba1\u7b97\u635f\u5931\u503c": 713, "\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u63a5\u53d7\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7684\u4e24\u4e2a\u5b57\u5178": 699, "\u8ba1\u7b97\u635f\u5931\u5e76\u53cd\u5411\u4f20\u64ad": 703, "\u8ba1\u7b97\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 699, "\u8ba1\u7b97\u8f93\u51fa": 700, "\u8ba1\u7b97\u8fb9\u5b50\u56fe\u4e2d\u8fb9\u7684\u5f97\u5206": 699, "\u8ba1\u7b97\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u5ea6": 713, "\u8bad\u7ec3": [678, 691, 696, 706, 708, 713], "\u8bad\u7ec3\u4e00\u4e2a\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u6d89\u53ca\u5230\u6bd4\u5bf9\u4e24\u4e2a\u76f8\u8fde\u63a5\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u4e0e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u7684\u5dee\u5f02": 712, "\u8bad\u7ec3\u4e0b\u6e38\u4efb\u52a1\u7684\u5206\u7c7b\u5668": 712, "\u8bad\u7ec3\u540e": 712, "\u8bad\u7ec3\u5668": 680, "\u8bad\u7ec3\u5668\u4f1a\u5bf9\u5c40\u90e8\u5206\u533a\u4e2d\u5e26\u6807\u7b7e\u8282\u70b9\u7684\u5b50\u96c6\u8fdb\u884c\u8ba1\u7b97": 682, "\u8bad\u7ec3\u5668\u8fdb\u7a0b": 680, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [691, 697], "\u8bad\u7ec3\u5faa\u73af\u901a\u8fc7\u6570\u636e\u52a0\u8f7d\u5668\u53bb\u904d\u5386\u6570\u636e": 701, "\u8bad\u7ec3\u6548\u7387\u4f1a\u5f88\u4f4e": 711, "\u8bad\u7ec3\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357\u53ef\u4ee5\u5728": 678, "\u8bad\u7ec3\u6a21\u578b": 703, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u548c\u540c\u6784\u56fe\u65f6\u4e00\u81f4": 712, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u91cc\u4f1a\u91cd\u590d\u6784\u5efa\u8d1f\u91c7\u6837\u56fe\u5e76\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u503c": 712, "\u8bad\u7ec3\u7b97\u6cd5\u6709\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 700, "\u8bad\u7ec3\u811a\u672c": 683, "\u8bad\u7ec3\u8fc7\u7a0b\u5305\u62ec\u904d\u5386dataloader\u548c\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u90e8\u5206": 711, "\u8bad\u7ec3\u90e8\u5206\u548c\u540c\u6784\u56fe\u7684\u8bad\u7ec3\u57fa\u672c\u4e00\u81f4": 709, "\u8bad\u7ec3\u90e8\u5206\u5982\u4e0b\u6240\u793a": 709, "\u8bb0\u4e3a": 685, "\u8bb0\u4f5c": 712, "\u8bb2\u89e3\u4e86\u5982\u4f55\u5bf9\u5c0f\u89c4\u6a21\u7684\u56fe\u6570\u636e\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 708, "\u8bb8\u591a\u573a\u666f\u4e2d\u7684\u56fe\u6570\u636e\u662f\u7531\u591a\u4e2a\u56fe\u7ec4\u6210": 711, "\u8bb8\u591a\u635f\u5931\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807": 712, "\u8bb8\u591a\u77e5\u540dpython\u5e93": 686, "\u8bbe\u7f6e": 690, "\u8bbe\u7f6e\u9009\u9879": 705, "\u8bbf\u95ee\u5176\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 698, "\u8bbf\u95ee\u8be5\u5757\u7684\u8f93\u5165\u8282\u70b9\u7279\u5f81": 698, "\u8be5api\u4f1a\u76f8\u5e94\u5730\u6253\u4e71\u6240\u6709\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 682, "\u8be5api\u652f\u6301\u968f\u673a\u5212\u5206\u548c\u4e00\u4e2a\u57fa\u4e8e": 682, "\u8be5pytorch\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u6279\u7684\u5f62\u5f0f\u8fed\u4ee3\u8bad\u7ec3\u8fb9id\u7684\u6570\u7ec4": 699, "\u8be5\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\u5b9e\u73b0": 702, "\u8be5\u4f8b\u5b50\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u5355\u4e2a\u8282\u70b9": 698, "\u8be5\u4f8b\u5b50\u91cc\u7701\u7565\u4e86\u8bad\u7ec3\u65e9\u505c\u548c\u6a21\u578b\u4fdd\u5b58\u90e8\u5206\u7684\u4ee3\u7801": 709, "\u8be5\u505a\u6cd5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c": 694, "\u8be5\u51fd\u6570\u5047\u5b9a\u539f\u59cb\u6570\u636e\u5df2\u7ecf\u4f4d\u4e8e": 678, "\u8be5\u51fd\u6570\u7684\u7ec6\u8282\u5982\u4e0b\u6240\u793a": 706, "\u8be5\u540d\u79f0\u4ecd\u5b58\u5728\u4e8e\u7fa4\u96c6\u4e2d": 681, "\u8be5\u56fe\u5177\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 690, "\u8be5\u5b50\u56fe\u5305\u62ec\u521d\u59cb\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u548c\u6307\u5b9a\u8282\u70b9\u7684\u5165\u8fb9": 698, "\u8be5\u5f20\u91cf\u7684\u7b2c\u4e00\u7ef4\u5fc5\u987b\u4e0e\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u6570\u91cf\u4e00\u81f4": 687, "\u8be5\u6587\u4ef6\u5305\u542b\u672c\u5730\u8ba1\u7b97\u673a\u4e2d\u5206\u533a\u6570\u636e\u7684\u4fe1\u606f": 683, "\u8be5\u65b9\u6cd5\u80fd\u8282\u7701\u5728\u5927\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u9500\u548c\u8ba1\u7b97\u8d44\u6e90": 697, "\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4e3a\u5b83\u4eec\u751f\u6210\u8fb9\u754c": 698, "\u8be5\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u957f\u5ea6\u6216\u8fde\u63a5\u7684\u5f3a\u5ea6": 685, "\u8be5\u6a21\u578b\u4e0e\u5f02\u6784\u56fe\u4e0a\u8fb9\u5206\u7c7b\u7684\u6a21\u578b\u6709\u4e9b\u4e0d\u540c": 712, "\u8be5\u6a21\u578b\u7684\u8f93\u5165\u5305\u62ec\u4e0a\u8ff0\u4e09\u9879\u4ee5\u53ca\u8f93\u5165\u7684\u7279\u5f81": 701, "\u8be5\u7c7b\u4e3a\u5bfc\u5165": 674, "\u8be5\u811a\u672c\u5305\u542b\u56db\u4e2a\u53c2\u6570": 683, "\u8be5\u811a\u672c\u6709\u4ee5\u4e0b\u5047\u8bbe": 683, "\u8be5\u8fb9\u7c7b\u578b\u662f\u901a\u8fc7\u5408\u5e76\u6240\u6709\u4ece": 709, "\u8be5\u91c7\u6837\u65b9\u6cd5\u6839\u636e\u4e0e\u8282\u70b9\u7684\u5ea6\u7684\u5e42\u6210\u6b63\u6bd4\u7684\u6982\u7387\u5206\u5e03\u5bf9\u8d1f\u6837\u672c\u76ee\u6807\u8282\u70b9\u8fdb\u884c\u91c7\u6837": 701, "\u8be6\u7ec6\u7684\u5b9e\u73b0\u8bf7\u53c2\u8003": 678, "\u8be6\u7ec6\u89e3\u91ca": 682, "\u8bf4\u660e\u805a\u5408\u662f\u9010\u7c7b\u8fdb\u884c\u7684": 695, "\u8bf7\u4f7f\u7528": 676, "\u8bf7\u53c2\u8003": [678, 699, 713], "\u8bf7\u53c2\u8003dgl\u7684\u5185\u7f6e\u6570\u636e\u96c6": 678, "\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357\u7684": 708, "\u8bf7\u53c2\u89c1": [678, 682, 693], "\u8bf7\u53c2\u89c1\u542f\u52a8\u811a\u672c\u90e8\u5206": 681, "\u8bf7\u53c2\u9605": 675, "\u8bf7\u53c2\u9605\u4e0b\u6587\u91cc\u5206\u5e03\u5f0f\u56fe\u91c7\u6837\u90e8\u5206": 681, "\u8bf7\u53c2\u9605\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u7ae0\u8282": 681, "\u8bf7\u6ce8\u610f": [675, 678, 679, 680, 698, 703, 706, 713], "\u8bf7\u786e\u4fdd\u4f7f\u7528\u4e0e\u539f\u59cb\u6587\u4ef6\u540d\u76f8\u540c\u7684\u540e\u7f00": 676, "\u8bf7\u786e\u4fdd\u5b83\u88ab\u5b58\u653e\u5728\u76ee\u5f55": 676, "\u8bf8\u5982\u91c7\u6837": 675, "\u8bfb\u51fa": 711, "\u8bfb\u51fa\u51fd\u6570\u4f1a\u5206\u522b\u4f5c\u7528\u5728\u56fe\u6279\u6b21\u4e2d\u7684\u6bcf\u5f20\u56fe\u4e0a": 711, "\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528networkx\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u89e3\u6790": 686, "\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003": [703, 713], "\u8bfb\u8005\u53ef\u4ee5\u5728api\u6587\u6863\u4e2d\u627e\u5230": 707, "\u8bfb\u8005\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53c2\u8003": 709, "\u8bfb\u8005\u53ef\u53c2\u8003": [685, 689], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": 700, "\u8c03\u7528\u540e": 693, "\u8c03\u7528\u6b64api": 681, "\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u635f\u5931": 712, "\u8d1f\u6837\u672c": 701, "\u8d1f\u8d23\u4f7f\u7528": 698, "\u8d1f\u8d23\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684": 683, "\u8d1f\u91c7\u6837": 712, "\u8d2d\u4e70": 699, "\u8d4b\u503c": 709, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [691, 697], "\u8df3\u8fc7\u4e00\u4e9b\u5904\u7406\u7684\u4ee3\u7801": 678, "\u8df3\u8fc7\u6570\u636e\u5904\u7406": 678, "\u8f6c\u6362\u6210int32": 689, "\u8f6c\u6362\u6210int64": 689, "\u8f7d\u5165ogb\u7684graph": 677, "\u8f7d\u5165ogb\u7684link": 677, "\u8f7d\u5165ogb\u7684nod": 677, "\u8f7d\u5165\u6570\u636e\u96c6": 677, "\u8f83\u5927\u65f6": 697, "\u8f93\u5165": 707, "\u8f93\u5165\u4ecd\u7136\u662fdgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868\u548c\u8f93\u5165\u7279\u5f81": 699, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81": 713, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81\u5b57\u5178": 713, "\u8f93\u5165\u7279\u5f81\u5c06\u88ab\u7ec4\u7ec7\u4e3a\u5143\u7ec4": 707, "\u8f93\u5165\u7684user\u548cgame\u8282\u70b9": 698, "\u8f93\u5165\u7ef4\u5ea6\u53ef\u88ab\u5206\u4e3a\u6e90\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6": 705, "\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u5c06\u540c\u65f6\u5305\u542b\u8fd9\u4e9b\u5b64\u7acb\u8282\u70b9": 698, "\u8f93\u5165\u8fd8\u53ef\u4ee5\u5305\u62ec\u8fb9\u81ea\u8eab\u7684\u7279\u5f81": 709, "\u8f93\u51fa\u7684user\u548cgame\u8282\u70b9": 698, "\u8f93\u51fa\u7684\u7ef4\u5ea6\u548c\u9690\u5c42\u7684\u7ef4\u5ea6": 705, "\u8f93\u51fa\u76ee\u5f55\u91cc\u59cb\u7ec8\u5305\u542b\u4e00\u4e2a\u540d\u4e3axxx": 682, "\u8f93\u51fa\u8282\u70b9": 698, "\u8f93\u51fa\u8282\u70b9\u4e5f\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 698, "\u8f93\u51fa\u8282\u70b9\u53ef\u4ee5\u6bd4\u4ee5\u4e0a\u8282\u70b9\u5305\u542b\u66f4\u591a\u8282\u70b9": 698, "\u8f93\u51fa\u8282\u70b9\u7684id\u4f4d\u4e8e\u5176\u5b83\u8282\u70b9\u4e4b\u524d": 698, "\u8fb9": [678, 682, 684, 685, 687, 689, 692, 693], "\u8fb9\u4e0a\u8ba1\u7b97": 692, "\u8fb9\u5206\u7c7b": [691, 699, 708, 712, 713], "\u8fb9\u5206\u7c7b\u4e2d\u76f8\u540c\u7684\u90bb\u5c45\u91c7\u6837\u5668": 701, "\u8fb9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u7684\u8bad\u7ec3": 708, "\u8fb9\u5206\u7c7b\u6a21\u578b\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210": 699, "\u8fb9\u53ca\u5176\u7279\u5f81": 686, "\u8fb9\u5b50\u56fe\u4ee5\u53ca\u8f93\u5165\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad": 699, "\u8fb9\u6743\u91cd\u53ef\u4ee5\u662f\u8fde\u63a5\u5f3a\u5ea6\u6216\u8005\u4fe1\u5fc3\u6307\u6570": 710, "\u8fb9\u6743\u91cd\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a": 710, "\u8fb9\u7279\u5f81": [680, 681], "\u8fb9\u7279\u5f81\u548c\u56fe\u91c7\u6837": 681, "\u8fb9\u754c\u5b50\u56fe": 698, "\u8fb9\u7684id\u4f4d\u4e8e\u90bb\u8fd1\u533a\u95f4\u5185": 678, "\u8fb9\u7684\u7279\u5f81\u6570\u636e": 708, "\u8fb9\u7684\u90bb\u5c45\u7684\u5c40\u90e8\u6027": 678, "\u8fb9\u7c7b\u578b": [678, 690], "\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u79f0\u4f5c": 709, "\u8fb9\u7c7b\u578b\u9884\u6d4b\u7684\u7b2c\u4e00\u6b65\u4ecd\u7136\u662f\u8ba1\u7b97\u8282\u70b9\u8868\u793a": 709, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": [680, 691], "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u56fe\u4f5c\u4e3a\u8fb9\u754c": 698, "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u8fb9\u754c": 698, "\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178": 698, "\u8fd4\u56de\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\u7684\u5143\u7ec4": 678, "\u8fd4\u56de\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u7279\u5f81\u5b57\u5178": 695, "\u8fd4\u56de\u7684\u662f": 681, "\u8fd8\u5141\u8bb8\u901a\u8fc7\u6307\u5b9a": 682, "\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u4e0b\u6e38\u4efb\u52a1\u83b7\u53d6\u9690\u85cf\u8282\u70b9\u8868\u793a": 713, "\u8fd8\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\u8de8\u7c7b\u578b\u6574\u5408\u51fd\u6570": 695, "\u8fd8\u652f\u6301\u751f\u6210\u7528\u4e8e\u94fe\u63a5\u9884\u6d4b\u7684\u8d1f\u6837\u672c": 701, "\u8fd8\u662f": 709, "\u8fd8\u80fd\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528": 689, "\u8fd8\u9700\u8981\u5728\u8bfb\u51fa\u51fd\u6570\u4e2d\u805a\u5408\u4e0d\u540c\u7c7b\u522b\u7684\u8282\u70b9": 711, "\u8fd8\u9700\u8981\u5c06\u5176\u4e0e": 703, "\u8fd92\u4e2a\u5b57\u5178\u4e0e": 707, "\u8fd9\u4e00\u793a\u4f8b\u6765\u4e86\u89e3\u5982\u4f55\u9884\u6d4b\u5f02\u6784\u56fe\u4e2d\u7684\u8fb9\u7c7b\u578b": 709, "\u8fd9\u4e00\u7ae0\u4e2d\u63d0\u5230\u7684\u56fe\u5377\u79ef\u7f51\u7edc\u83b7\u5f97": 709, "\u8fd9\u4e0e\u5728": 713, "\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u5e03\u5c14\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165": 681, "\u8fd9\u4e2a": 708, "\u8fd9\u4e2aapi\u4f1a\u4e0edgl\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u5e76\u521b\u5efa\u91c7\u6837\u5668\u8fdb\u7a0b": 681, "\u8fd9\u4e2aapi\u5c06\u8fd0\u884c\u670d\u52a1\u5668\u4ee3\u7801": 681, "\u8fd9\u4e2a\u4f8b\u5b50\u662f\u8bc4\u5206\u9884\u6d4b\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 709, "\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u628a\u539f\u56fe\u8f6c\u6362\u6210\u4e00\u4e2a\u5305\u542b\u53cd\u5411\u8fb9\u7684\u56fe": 689, "\u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u53d8\u91cf\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u548c\u5176\u4ed6\u8f93\u5165\u7279\u5f81": 710, "\u8fd9\u4e2a\u5b57\u5178\u7684\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u91cc": 695, "\u8fd9\u4e2a\u5b57\u5178\u7684\u952e\u4e3a\u5173\u7cfb\u540d": 707, "\u8fd9\u4e2a\u63a5\u53e3\u5c06\u66f4\u65b0\u6240\u6709\u7684\u8fb9": 693, "\u8fd9\u4e2a\u6570\u636e\u52a0\u8f7d\u5668\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668": 698, "\u8fd9\u4e2a\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe": 678, "\u8fd9\u4e2a\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 678, "\u8fd9\u4e2a\u6574\u5408\u65b9\u5f0f\u53ef\u4ee5\u662f": 695, "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f02\u6784\u56fe": 709, "\u8fd9\u4e2a\u6a21\u578b\u4e0d\u4ec5\u53ef\u4ee5\u505a\u8282\u70b9\u5206\u7c7b": 713, "\u8fd9\u4e2a\u6a21\u578b\u5177\u6709\u53ef\u8c03\u8282\u7684\u5c42\u6570": 713, "\u8fd9\u4e2a\u8fc7\u7a0b": 678, "\u8fd9\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u4f1a\u6784\u5efa\u8ba1\u7b97\u7684\u4f9d\u8d56\u5173\u7cfb\u56fe": 697, "\u8fd9\u4e3a\u4ece\u6574\u4f53\u4e0a\u8fdb\u884c\u7cfb\u7edf\u4f18\u5316\u63d0\u4f9b\u4e86\u7a7a\u95f4": 693, "\u8fd9\u4e48\u505a\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4": 675, "\u8fd9\u4e9budf\u5fc5\u987b\u5728": 681, "\u8fd9\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u72ec\u7acb\u7684id\u7a7a\u95f4\u548c\u7279\u5f81": 690, "\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32": 693, "\u8fd9\u4e9b\u56fe\u8868\u793a\u6bcf\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56": 703, "\u8fd9\u4e9b\u5c5e\u6027\u65e8\u5728\u523b\u753b\u6bcf\u4e00\u79cd\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 695, "\u8fd9\u4e9b\u5e03\u5c14\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf": 681, "\u8fd9\u4e9b\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u548c\u6d88\u606f\u4f20\u9012\u4e2d\u7684\u503c\u65e0\u6548": 706, "\u8fd9\u4e9b\u670d\u52a1\u5668\u4e00\u8d77\u5de5\u4f5c\u4ee5\u5c06\u56fe\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 680, "\u8fd9\u4e9b\u6784\u5efa\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u91cd\u89c6\u6027\u80fd\u7684\u573a\u666f": 686, "\u8fd9\u4e9b\u6a21\u5757\u662f\u7eafpytorch": 705, "\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u662f\u6807\u91cf": 687, "\u8fd9\u4e9b\u7c7b\u4f1a\u751f\u6210\u9700\u8ba1\u7b97\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u8ba1\u7b97\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u56fe": 703, "\u8fd9\u4e9b\u8282\u70b9\u4e0e\u7528\u6237\u5e0c\u671b\u8ba1\u7b97\u6700\u7ec8\u8868\u793a\u7684\u8282\u70b9\u76f8\u540c": 703, "\u8fd9\u4e9b\u8282\u70b9\u662f\u8ba1\u7b97\u8282\u70b9\u6700\u7ec8\u8868\u793a\u6240\u9700\u7684\u6240\u6709\u5fc5\u9700\u7684\u8282\u70b9": 703, "\u8fd9\u4ec5\u662f\u4e2a\u4f8b\u5b50": 711, "\u8fd9\u4f1a\u5c06\u56fe\u7ed3\u6784\u548c\u7279\u5f81\u6570\u636e\u90fd\u62f7\u8d1d\u5230\u6307\u5b9a\u7684\u8bbe\u5907": 688, "\u8fd9\u4f1a\u975e\u5e38\u6d88\u8017\u5185\u5b58": 694, "\u8fd9\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4": 682, "\u8fd9\u5305\u62ec\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 680, "\u8fd9\u53d6\u51b3\u4e8e\u56fe\u4e2d\u8fb9\u7684\u65b9\u5411\u6027": 685, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u574f": 681, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u6027\u80fd\u4e0d\u4f73": 706, "\u8fd9\u53ef\u80fd\u5e26\u6765\u975e\u6700\u4f18\u7684\u914d\u7f6e": 682, "\u8fd9\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528": 690, "\u8fd9\u5bf9\u4e8e\u540c\u6b65sgd\u975e\u5e38\u91cd\u8981": 681, "\u8fd9\u5c31\u5e26\u6765\u4e86\u5177\u6709\u4e0d\u540c\u7279\u5f81\u7684\u591a\u6761\u8fb9": 685, "\u8fd9\u5e73\u8861\u4e86\u4e0d\u540c\u7c7b\u578b\u8282\u70b9\u7684\u8fde\u8fb9\u6570\u91cf": 682, "\u8fd9\u5f88\u5bb9\u6613\u8d85\u8fc7\u4e00\u5757gpu\u7684\u663e\u5b58\u9650\u5236": 697, "\u8fd9\u662f\u4e00\u4e2a": 693, "\u8fd9\u662f\u56e0\u4e3adgl\u8981\u5b9a\u4f4d\u5e76\u5220\u9664\u5305\u542b\u5728\u5c0f\u6279\u6b21\u4e2d\u7684\u53cd\u5411\u8fb9": 699, "\u8fd9\u662f\u56e0\u4e3a\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u8fb9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee": 682, "\u8fd9\u662f\u56e0\u4e3a\u5b83\u5bf9\u4e00\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u6d88\u606f\u7684\u805a\u5408\u548c\u7ed3\u5408": 700, "\u8fd9\u662f\u56e0\u4e3a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u53ea\u7528\u4e00\u4e2a\u56fe": 678, "\u8fd9\u662f\u5c0f\u6279\u91cf\u8bad\u7ec3\u4e2d\u7684\u5e38\u89c1\u7528\u6cd5": 696, "\u8fd9\u662f\u7531\u4e8e": 686, "\u8fd9\u6837\u4e0d\u4ec5\u80fd\u63d0\u5347\u901f\u5ea6": 689, "\u8fd9\u6837\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5e2e\u7528\u6237\u8282\u7701\u5927\u91cf\u7684\u6570\u636e\u5904\u7406\u65f6\u95f4": 679, "\u8fd9\u6837\u7684\u4efb\u52a1\u79f0\u4f5c": 712, "\u8fd9\u6837\u7684\u65b9\u6cd5\u79f0\u4f5c": 712, "\u8fd9\u70b9\u5728\u4e4b\u540e\u7684": 698, "\u8fd9\u79cd\u60c5\u51b5\u4e0b": 709, "\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97dgl\u7684\u4ee3\u7801\u53ef\u4ee5\u65e0\u7f1d\u5d4c\u5165\u5230\u540e\u7aef\u6846\u67b6\u7684\u4ee3\u7801\u4e2d": 704, "\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f": 690, "\u8fd9\u7b49\u4ef7\u4e8e\u628a\u6bcf\u6761\u6d88\u606f\u548c\u5bf9\u5e94\u7684\u8fb9\u6743\u91cd\u76f8\u4e58": 710, "\u8fd9\u7c7b\u64cd\u4f5c\u53eb\u505a": 711, "\u8fd9\u8981\u6c42\u6240\u6709\u5f20\u91cf\u53c2\u6570\u90fd\u5df2\u7ecf\u653e\u5728gpu\u4e0a": 688, "\u8fd9\u90e8\u5206\u4ee3\u7801\u4f1a\u56e0\u6a21\u5757\u800c\u5f02": 706, "\u8fd9\u91cc": 678, "\u8fd9\u91cc\u4ee56": 700, "\u8fd9\u91cc\u5148\u89e3\u91ca\u4e00\u4e0b\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 698, "\u8fd9\u91cc\u5220\u9664\u4e86\u81ea\u73af": 703, "\u8fd9\u91cc\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u5faa\u73af\u4ec5\u5305\u542b\u4f7f\u7528\u5b9a\u5236\u7684\u6279\u5904\u7406\u8fed\u4ee3\u5668\u904d\u5386\u6570\u636e\u96c6\u7684\u5185\u5bb9": 703, "\u8fd9\u91cc\u7684\u79bb\u7ebf\u63a8\u65ad\u88ab\u5b9e\u73b0\u4e3agnn\u6a21\u5757\u7684\u4e00\u4e2a\u65b9\u6cd5": 700, "\u8fd9\u91cc\u7701\u7565\u4e86": 678, "\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8f93\u5165\u7684\u56fe\u6570\u636e\u4e0d\u80fd\u5305\u542b\u8fb9\u7684\u7c7b\u578b\u4fe1\u606f": 709, "\u8fdb\u800c\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u6765\u6784\u5efadglgraph\u5bf9\u8c61": 686, "\u8fdb\u884c\u4f18\u5316": 694, "\u8fdb\u884c\u521b\u5efa\u65f6": 686, "\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 713, "\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97": 713, "\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316": 705, "\u8fdb\u884c\u8bad\u7ec3": 709, "\u8fde\u63a5\u4e00\u5bf9\u8282\u70b9": 685, "\u9009\u62e9\u4e00\u4e2a\u5c0f\u6279\u6b21\u7684\u56fe\u8282\u70b9": 697, "\u9010\u5143\u7d20\u6c42\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c": 711, "\u9010\u5c42\u8ba1\u7b97\u8868\u793a": 700, "\u901a\u5e38": [681, 702], "\u901a\u5e38\u4f1a\u805a\u5408\u5e76\u6c47\u603b\u5355\u4e2a\u56fe\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f": 711, "\u901a\u5e38\u5728\u6d88\u606f\u4f20\u9012\u7684\u6700\u540e\u4e00\u6b65\u5c06\u5176\u4e0e\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408": 693, "\u901a\u5e38\u65e0\u6cd5\u8fdb\u884c": 697, "\u901a\u5e38\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u90bb\u5c45\u8fdb\u884c\u771f\u6b63\u7684\u805a\u5408": 700, "\u901a\u5e38\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u91c7\u6837\u8fc7\u7a0b\u53d8\u6162\u5f88\u591a": 699, "\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u591a\u5c42\u7684\u56fe\u795e\u7ecf\u7f51\u7edc": 713, "\u901a\u8fc7": [687, 693], "\u901a\u8fc7idx\u5f97\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e00\u4e2a\u6837\u672c": 675, "\u901a\u8fc7idx\u83b7\u53d6\u5bf9\u5e94\u7684\u56fe\u548c\u6807\u7b7e": 678, "\u901a\u8fc7\u5173\u7cfb\u540d": 707, "\u901a\u8fc7\u5e73\u5747\u8bfb\u51fa\u503c\u6765\u8ba1\u7b97\u5355\u56fe\u7684\u8868\u5f81": 711, "\u901a\u8fc7\u5f20\u91cf\u5206\u914d\u521b\u5efa\u7279\u5f81\u65f6": 687, "\u901a\u8fc7\u7528\u56fe\u523b\u753b\u540c\u4e00\u793e\u533a\u91cc\u4eba\u4e0e\u4eba\u95f4\u7684\u53cb\u8c0a": 711, "\u901a\u8fc7\u7d22\u5f15": 706, "\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u5bf9\u8fb9\u5c5e\u6027\u7684\u9884\u6d4b": 709, "\u901a\u8fc7\u8c03\u7528": 707, "\u904d\u5386\u6240\u6709\u8fb9\u7684\u7c7b\u578b": 698, "\u90a3\u4e48\u5728\u5757\u4e0a\u8ba1\u7b97\u7684\u4ee3\u7801\u4e5f\u662f\u7c7b\u4f3c\u7684": 702, "\u90a3\u4e48\u5b83\u4eec\u5df2\u7ecf\u652f\u6301\u4e86\u8fb9\u6743\u91cd": 710, "\u90a3\u4e48\u7528\u6237\u53ea\u9700\u8981\u518d\u7f16\u5199\u4e00\u4e2a\u7528": 709, "\u90a3\u4e48\u7528\u6237\u5c31\u9700\u8981\u8c03\u7528\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 694, "\u90a3\u4e48\u8be5\u51fd\u6570\u5e94\u4ee5\u521d\u59cb\u56fe\u4ee5\u53ca\u7531\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u6784\u6210\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 701, "\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b\u901a\u5e38\u5982\u4e0b": 697, "\u90bb\u5c45\u91c7\u6837\u5728\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u66f4\u597d\u5730\u53d1\u6325\u4f5c\u7528": 700, "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u5757\u7684\u5217\u8868": 701, "\u90bb\u63a5\u77e9\u9635\u91cc\u7684\u5143\u7d20\u4e0d\u662f\u96f6\u5c31\u662f\u4e00": 710, "\u90fd\u662f\u540e\u7eed\u56fe\u795e\u7ecf\u7f51\u7edc\u5c42\u8ba1\u7b97\u4e2d\u67d0\u6761\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 698, "\u90fd\u6709": 712, "\u90fd\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 702, "\u914d\u7f6e\u6587\u4ef6": 683, "\u91c7\u6837": 701, "\u91c7\u6837\u4ee3\u7801\u7c7b\u4f3c\u4e8e\u5355\u8fdb\u7a0b\u91c7\u6837": 681, "\u91c7\u6837\u5668": 680, "\u91c7\u6837\u5668\u65e0\u6cd5\u5728\u5177\u6709\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7684pytorch": 681, "\u91c7\u6837\u5668\u8fdb\u7a0b": 680, "\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf\u5fc5\u987b\u5339\u914d": 683, "\u91cc\u5b9e\u73b0\u4e86\u5f88\u591a\u5e38\u7528\u7684\u56fe\u6570\u636e\u96c6": 674, "\u91cc\u6240\u4ecb\u7ecd\u7684\u6027\u80fd\u4f18\u5316": 706, "\u91cc\u662f\u5426\u6709\u5904\u7406\u8fc7\u7684\u6570\u636e\u6587\u4ef6": 679, "\u91cc\u7684": 712, "\u91cc\u8bfb\u53d6\u5904\u7406\u8fc7\u7684\u6570\u636e": 679, "\u91cc\u9762\u4fdd\u5b58\u4e86\u8bad\u7ec3\u811a\u672c": 683, "\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b": 697, "\u91cd\u6392\u56fe\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u5c40\u90e8\u6027": 678, "\u91cd\u65b0\u521d\u59cb\u5316\u53ef\u5b66\u4e60\u7684\u53c2\u6570": 705, "\u9488\u5bf9mxnet\u548cpytorch\u540e\u7aef\u4e5f\u6709\u5bf9\u5e94\u7684\u6a21\u5757": 713, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [691, 697], "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [691, 697], "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [691, 697], "\u94fe\u63a5\u9884\u6d4b": [678, 691, 701, 708, 713], "\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u4e5f\u5e94\u4f7f\u7528\u7c7b\u4f3c\u7684\u5e03\u5c14\u6570\u7ec4": 681, "\u94fe\u63a5\u9884\u6d4b\u548c\u6574\u56fe\u5206\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 708, "\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5904\u7406\u4e0e\u8282\u70b9\u5206\u7c7b\u76f8\u4f3c": 678, "\u9500\u6bc1distgraph\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0distgraph\u7684\u884c\u4e3a\u6ca1\u6709\u88ab\u5b9a\u4e49": 681, "\u952e\u662f\u4e00\u79cd\u5173\u7cfb": 695, "\u957f\u5ea6\u4e3a3\u7684\u8282\u70b9\u7279\u5f81": 687, "\u95f4\u9694\u635f\u5931": 712, "\u9648\u77e5\u96e8": 691, "\u9664\u4e86": 699, "\u9664\u4e86\u56fe\u7ed3\u6784": 686, "\u9664\u4e86\u5e73\u8861\u8282\u70b9\u7684\u7c7b\u578b\u4e4b\u5916": 682, "\u9664\u4e86\u5f20\u91cf\u7684\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b\u4e4b\u5916": 681, "\u9664\u4e86\u6570\u636e\u7ef4\u5ea6": 705, "\u9664\u4e86\u7528\u6237\u5728\u521b\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u65f6\u65e0\u6cd5\u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 681, "\u9664\u4e86\u8f93\u5165\u56fe\u548c\u8f93\u5165\u5f20\u91cf": 707, "\u9664\u4ee5\u5165\u5ea6": 706, "\u9664\u6b64\u4e4b\u5916": 694, "\u968f\u540e": 701, "\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b": 699, "\u9690\u5c42\u5927\u5c0f\u4e3a": 697, "\u96c6\u7fa4\u4e2d\u7684\u6bcf\u53f0\u673a\u5668\u5404\u81ea\u8d1f\u8d23\u4e00\u5f20\u5b50\u56fe": 680, "\u9700\u8981\u4e0b\u56fe\u4e2d\u7684\u6765\u81ea\u8282\u70b94": 698, "\u9700\u8981\u4ee5\u5c0f\u6279\u6b21\u7684\u65b9\u5f0f\u8ba1\u7b97\u8fd9\u4e2agnn\u5c42\u6240\u6709\u8282\u70b9\u7684\u8f93\u51fa\u8868\u793a": 700, "\u9700\u8981\u5411\u6570\u636e\u8f7d\u5165\u5668\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u5bf9\u5e94\u8fb9id\u7684\u5b57\u5178": 701, "\u9700\u8981\u5bf9\u7528\u4e8e\u6574\u56fe\u7684gnn\u6a21\u5757\u8fdb\u884c\u5982\u4e0b\u8c03\u6574\u4ee5\u5c06\u5176\u7528\u4e8e\u5757\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5": 702, "\u9700\u8981\u5c06\u5176\u4e0e": 699, "\u9700\u8981\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a": 678, "\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u8282\u70b9\u548c\u8fb9\u7c7b\u578b": 690, "\u9700\u8981\u6839\u636e\u56fe\u7c7b\u578b\u88ab\u6307\u5b9a": 706, "\u9700\u8981\u6ce8\u610f": 711, "\u9700\u8981\u6ce8\u610f\u7684\u662f\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u8282\u70b9\u548c\u8fb9\u5c5e\u6027\u6ca1\u6709\u6279\u6b21\u5927\u5c0f\u5bf9\u5e94\u7684\u7ef4\u5ea6": 711, "\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c": 703, "\u975e\u7ebf\u6027\u548c\u57fa\u5206\u89e3": 703, "\u975e\u96f6\u7684\u5143\u7d20\u53ef\u4ee5\u53d6\u4efb\u610f\u6807\u91cf\u503c": 710, "\u975e\u96f6\u9879": 686, "\u9762\u5411\u90a3\u4e9b\u60f3\u8981\u5f00\u53d1\u65b0\u7684\u91c7\u6837\u7b97\u6cd5": 697, "\u987e\u5ba2": 685, "\u9884\u6d4b\u56fe\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u8fb9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u4efb\u52a1\u7c7b\u578b": 709, "\u9884\u6d4b\u5b83\u7684\u7c7b\u578b\u662f": 709, "\u9884\u6d4b\u7ed3\u679c\u523b\u753b\u4e86\u6574\u4e2a\u8f93\u5165\u56fe\u7684\u5c5e\u6027": 711, "\u9884\u6d4b\u8fb9\u5f97\u5206\u7684\u6a21\u578b\u548c\u8fb9\u5206\u7c7b": 712, "\u9996\u5148": 711, "\u9996\u5148\u4f7f\u7528pip\u5b89\u88c5ogb\u5305": 677, "\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0a\u56fe\u6240\u793a\u7684dglgraph": 698, "\u9996\u5148\u6211\u4eec\u904d\u5386\u56fe\u4e2d\u6240\u6709\u7684\u5173\u7cfb": 707, "\u9a8c\u8bc1": 681, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u6570\u636e\u96c6": 709, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u7684\u5206\u5272\u4e5f\u4ee5\u5e03\u5c14\u63a9\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u56fe\u4e0a": 713, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 681, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4ece\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u7c7b\u522b\u4e2d\u5206\u914d\u7684\u4e00\u4e2a\u7c7b\u522b": 713, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u6807\u6ce8\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57": 713, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u5212\u5206": 709, "\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u8282\u70b9\u770b\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 682, "\u9ad8\u5c42\u91c7\u6837api\u4e3a\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u91c7\u6837\u7b97\u6cd5": 681, "\u9ec4\u5d1f": 691, "\u9ed8\u8ba4": 675, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [681, 682], "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u8fdb\u884c\u7279\u5f81\u5408\u5e76": 690, "\uac00": [718, 720, 721, 723, 733, 736, 737, 747, 750, 751, 754], "\uac00\uae4c\uc6b4": 718, "\uac00\ub2a5": 756, "\uac00\ub2a5\ub3c4": 755, "\uac00\ub2a5\ud558\ub2e4": [718, 723, 728, 734, 736, 738, 742, 744, 753, 754, 756], "\uac00\ub2a5\ud55c": [724, 734, 736, 756], "\uac00\uc774\ub4dc\ub294": 718, "\uac00\uc774\ub4dc\uc640": 742, "\uac00\uc7a5": [734, 745, 746, 750, 753, 756], "\uac00\uc815\ud558\uace0": [720, 755], "\uac00\uc815\ud558\ub294": 721, "\uac00\uc815\ud558\uba74": 753, "\uac00\uc815\ud558\uc790": 736, "\uac00\uc815\ud55c\ub2e4": [723, 724, 752, 753], "\uac00\uc838\ub2e4": 742, "\uac00\uc911\uce58": [723, 726, 728, 733], "\uac00\uc911\uce58\uace0": 735, "\uac00\uc911\uce58\ub294": [726, 735], "\uac00\uc911\uce58\ub4e4\uc744": 749, "\uac00\uc911\uce58\ub85c": 723, "\uac00\uc911\uce58\ub97c": [723, 726, 728, 735], "\uac00\uc911\uce58\uc640": 726, "\uac00\uc911\uce58\uc758": 723, "\uac00\uc911\uce58\uc774\ub2e4": 723, "\uac00\uc9c0": [720, 721, 723, 739, 741, 746, 755, 756], "\uac00\uc9c0\uace0": [746, 754, 756], "\uac01": [714, 719, 720, 721, 722, 723, 724, 726, 728, 730, 731, 733, 737, 739, 740, 742, 743, 744, 746, 747, 750, 751, 753, 754, 755, 756], "\uac01\uac01": [734, 736, 745], "\uac04\uacb0\ud558\uac8c": 734, "\uac04\ub2e8\ud558\uac8c": [719, 746, 753], "\uac04\ub2e8\ud558\uace0": 714, "\uac04\ub2e8\ud558\ub2e4": [723, 746, 753], "\uac04\ub2e8\ud55c": 725, "\uac04\ub2e8\ud788": 753, "\uac04\ub7b5\ud558\uac8c": 718, "\uac04\ub7b5\ud55c": 753, "\uac04\uc12d\uc774": 754, "\uac04\uc5d0": [722, 731], "\uac04\uc758": [726, 754, 755], "\uac12": 716, "\uac12\ub3c4": 723, "\uac12\ub4e4\uc744": 756, "\uac12\ub4e4\uc774\ub2e4": 723, "\uac12\ub4e4\uc778\ub370": 723, "\uac12\uc5d0": [741, 744, 747], "\uac12\uc73c\ub85c": [723, 747], "\uac12\uc740": [723, 737, 751, 753], "\uac12\uc744": [722, 723, 735, 750, 753], "\uac12\uc758": 722, "\uac12\uc774": 723, "\uac12\uc774\ub2e4": 723, "\uac12\uc778": 724, "\uac15\ub3c4\ub97c": 726, "\uac15\ub825\ud55c\uac00": 740, "\uac15\uc870\ud558\uae30": 718, "\uac15\ud558\uac8c": 714, "\uac16\uac70\ub098": 726, "\uac16\uac8c": 737, "\uac16\uace0": [717, 721, 722, 723, 728, 730, 731, 734, 742, 745, 753], "\uac16\uae30": [723, 737], "\uac16\ub294": [721, 722, 723, 725, 726, 727, 728, 730, 731, 737, 739, 740, 741, 745, 747, 753, 754], "\uac16\ub294\ub2e4": [720, 722, 723, 726, 728, 731, 734, 735, 742, 743, 752, 755], "\uac16\ub294\ub2e4\uace0": [721, 723], "\uac16\ub294\ub2e4\uba74": [723, 731, 741], "\uac16\ub294\ub370": [721, 723, 734, 747], "\uac16\ub3c4\ub85d": [721, 722, 723, 740], "\uac16\uc544\uc57c": 728, "\uac16\uc73c\uba70": 753, "\uac16\uc744": [725, 726, 728, 737, 751], "\uac16\uc74c": 745, "\uac16\uc9c0": [726, 750], "\uac19\uace0": 721, "\uac19\ub2e4": [715, 720, 721, 723, 724, 731, 734, 736, 737, 739, 740, 741, 742, 744, 746, 750, 753, 754, 755], "\uac19\ub3c4\ub85d": 723, "\uac19\uc544\uc57c": [724, 728, 730], "\uac19\uc544\uc57c\ub9cc": 721, "\uac19\uc740": [715, 720, 721, 722, 723, 724, 726, 728, 730, 731, 734, 735, 736, 740, 741, 742, 745, 746, 749, 750, 751, 752, 753, 754, 755, 756], "\uac19\uc744": 721, "\uac19\uc774": [718, 726, 733, 740, 741, 744, 745, 749, 751, 752, 753, 754, 755, 756], "\uac1c": 730, "\uac1c\uac00": 723, "\uac1c\uae4c\uc9c0": 730, "\uac1c\ub150\uc5d0": [741, 746], "\uac1c\ub150\uc740": [740, 741, 746], "\uac1c\ub150\uc744": 725, "\uac1c\ub97c": 721, "\uac1c\ub9cc": 721, "\uac1c\ubc1c": 721, "\uac1c\ubc1c\uc744": 730, "\uac1c\ubc1c\uc774": 742, "\uac1c\ubc1c\ud558\uace0": 721, "\uac1c\uc218": [715, 721, 724], "\uac1c\uc218\uac00": [723, 740], "\uac1c\uc218\uacfc": [721, 724], "\uac1c\uc218\ub294": [721, 724, 745], "\uac1c\uc218\ub97c": [721, 723], "\uac1c\uc218\uc5d0": [723, 742], "\uac1c\uc218\uc640": [721, 723, 728], "\uac1c\uc218\uc758": [721, 723], "\uac1c\uc22b\ub97c": 718, "\uac1c\uc758": [717, 721, 722, 723, 724, 744, 755], "\uac1c\uc778": 739, "\uac1d\uccb4": [719, 720, 727, 750], "\uac1d\uccb4\uac00": 721, "\uac1d\uccb4\ub294": 734, "\uac1d\uccb4\ub4e4\uc744": 721, "\uac1d\uccb4\ub4e4\uc758": 718, "\uac1d\uccb4\ub85c": [717, 723], "\uac1d\uccb4\ub97c": [721, 734, 741], "\uac1d\uccb4\ub9cc": 717, "\uac1d\uccb4\uc5d0": 721, "\uac1d\uccb4\uc640": 719, "\uac1d\uccb4\uc774\ub2e4": 734, "\uac2f\uc218\ub97c": 747, "\uac70\uafb8\ub85c": 739, "\uac70\ub4ed": 723, "\uac70\ub4ed\uc81c\uacf1\uc5d0": 744, "\uac70\uc758": [718, 741, 744, 746, 753], "\uac78\ub9ac\ub294": 743, "\uac78\uccd0\uc11c": [723, 731, 750], "\uac80\uc0c9\ud560": 722, "\uac80\uc99d": [721, 723, 743, 753, 756], "\uac80\uc99d\uacfc": 739, "\uac80\uc99d\uc744": 716, "\uac83": [741, 745, 746, 747], "\uac83\uacfc": [721, 723, 726, 741, 744, 748, 753], "\uac83\uacfc\ub294": 746, "\uac83\ub3c4": [716, 730, 734, 753], "\uac83\ub3e0": 742, "\uac83\ub4e4\uc5d0": 727, "\uac83\ub4e4\uc774\ub2e4": 723, "\uac83\ub9cc\uc774": 745, "\uac83\uc5d0": [723, 745], "\uac83\uc73c\ub85c": [723, 742, 746, 756], "\uac83\uc740": [718, 721, 728, 735, 740, 741, 743, 745, 746, 753, 754, 755, 756], "\uac83\uc744": [714, 715, 718, 719, 721, 722, 723, 731, 734, 736, 740, 744, 745, 754, 756], "\uac83\uc774": [717, 718, 719, 723, 736, 740, 741, 742, 743, 744, 746, 754, 755], "\uac83\uc774\uace0": [718, 721, 741], "\uac83\uc774\ub2e4": [715, 716, 718, 721, 723, 726, 728, 730, 731, 736, 739, 740, 741, 744, 745, 746, 750, 751, 753, 754, 755, 756], "\uac83\uc774\uc9c0\ub9cc": 747, "\uac83\uc778\ub2e4": 723, "\uac83\uc778\uc9c0": [740, 745], "\uac83\uc778\uc9c0\uc5d0": 745, "\uac83\uc77c": [744, 754], "\uac83\uc785\ub2c8\ub2e4": 732, "\uac83\uc9c0\ub9cc": 723, "\uac83\ucc98\ub7fc": [735, 741, 744], "\uacb0\uacfc": [729, 736, 740, 743, 751], "\uacb0\uacfc\uac00": 754, "\uacb0\uacfc\ub294": [723, 750, 751], "\uacb0\uacfc\ub4e4\uc740": 751, "\uacb0\uacfc\ub4e4\uc774": 723, "\uacb0\uacfc\ub77c\ub294": 746, "\uacb0\uacfc\ub85c": 741, "\uacb0\uacfc\ub85c\uc11c": 756, "\uacb0\uacfc\ub97c": [723, 725, 734, 736, 737, 740, 746, 751, 754], "\uacb0\uacfc\uc5d0": [721, 734], "\uacb0\uacfc\uc640": 734, "\uacb0\uacfc\uc758": 754, "\uacb0\uc815\ud55c\ub2e4": 749, "\uacb0\uc815\ud560": [722, 731], "\uacb0\ud569\ud558\uace0": 734, "\uacbd\ub85c\ub4e4\uc740": 724, "\uacbd\ub85c\ub85c": 724, "\uacbd\ub85c\ub97c": 724, "\uacbd\uc6b0": [716, 719, 721, 723, 724, 728, 731, 734, 738, 739, 740, 745, 747, 749, 750, 751, 754, 755], "\uacbd\uc6b0\uac00": [731, 753, 755], "\uacbd\uc6b0\ub294": 731, "\uacbd\uc6b0\ub3c4": [719, 740, 745, 752, 754], "\uacbd\uc6b0\ub4e4": 745, "\uacbd\uc6b0\ub77c\uba74": 734, "\uacbd\uc6b0\ub97c": 736, "\uacbd\uc6b0\uc5d0": [719, 721, 743, 750], "\uacbd\uc6b0\uc5d0\ub294": [718, 723, 730, 736, 739, 749], "\uacbd\uc6b0\uc5d0\ub9cc": 721, "\uacbd\uc6b0\uc640": [718, 731, 740, 754], "\uacbd\uc6b0\uc640\ub294": 754, "\uacc4\ub2e8\ub41c": 755, "\uacc4\uc0b0": [744, 747, 750, 753], "\uacc4\uc0b0\ub418\uc5b4\uc57c": [739, 746], "\uacc4\uc0b0\ub41c": 723, "\uacc4\uc0b0\uc740": 743, "\uacc4\uc0b0\uc744": [720, 722, 723], "\uacc4\uc0b0\uc774": 721, "\uacc4\uc0b0\uc801\uc778": 723, "\uacc4\uc0b0\ud558\uace0\uc790": 753, "\uacc4\uc0b0\ud558\uae30": [720, 740, 741, 744, 753], "\uacc4\uc0b0\ud558\uae30\ub97c": 746, "\uacc4\uc0b0\ud558\ub294": [740, 741, 743, 744, 753, 755, 756], "\uacc4\uc0b0\ud558\ub294\ub370": 746, "\uacc4\uc0b0\ud558\uba74": 753, "\uacc4\uc0b0\ud55c": 746, "\uacc4\uc0b0\ud55c\ub2e4": [741, 755], "\uacc4\uc0b0\ud55c\ub2e4\uace0": 753, "\uacc4\uc0b0\ud560": [740, 743, 746, 755, 756], "\uacc4\uc0b0\ud574\uc57c\ud558\uae30": 743, "\uacc4\uc0b0\ud574\uc57c\ud55c\ub2e4": 743, "\uacc4\uc18d": 747, "\uacc4\ud68d\uc774\ub77c\uba74": 752, "\uace0\uac1d": 726, "\uace0\uae09": [734, 739], "\uace0\ub824\ud558\uac8c": 723, "\uace0\ub824\ud558\uc790": 740, "\uace0\ub824\ud55c": 723, "\uace0\ub824\ud574\uc11c": 723, "\uace0\ub9bd": 740, "\uace0\ub9bd\ub41c": 740, "\uace0\uc720\uc758": 748, "\uace0\uc720\ud558\uac8c": [721, 731], "\uace0\uc720\ud558\ub2e4": 722, "\uace0\uc720\ud55c": [722, 723, 728, 730], "\uace0\uce58\uae30": 746, "\uacf1\ud558\uace0": [734, 747], "\uacf1\ud558\uae30": 735, "\uacf1\ud574\uc11c": 734, "\uacf3\uc5d0": [723, 727], "\uacf5\uac04\uacfc": 731, "\uacf5\ub3d9": 726, "\uacf5\ubc31": 723, "\uacf5\ubc31\uc73c\ub85c": 723, "\uacf5\uc2dd": 717, "\uacf5\uc2dd\uc5d0": 740, "\uacf5\uc2dd\uc73c\ub85c": [734, 751], "\uacf5\uc2dd\uc740": [740, 750], "\uacf5\ud1b5\uc801\uc778": 727, "\uacfc": [720, 721, 723, 724, 725, 726, 747, 749, 752], "\uacfc\uc815\uc5d0\uc11c": [723, 750], "\uacfc\uc81c": 755, "\uacfc\uc81c\ub4e4\uc758": 752, "\uacfc\uc81c\ub97c": 723, "\uad00\uacc4": [725, 726, 731, 737], "\uad00\uacc4\uac00": [726, 731, 751], "\uad00\uacc4\ub294": [726, 731, 750, 751], "\uad00\uacc4\ub2f9": [731, 750], "\uad00\uacc4\ub4e4\uc744": [731, 741], "\uad00\uacc4\ub4e4\uc758": 751, "\uad00\uacc4\ub85c": 751, "\uad00\uacc4\ub85c\ubd80\ud130": 751, "\uad00\uacc4\ub97c": [726, 731, 751, 754], "\uad00\uacc4\uc5d0": 751, "\uad00\uacc4\uc758": 737, "\uad00\uacc4\uc774\uace0": [737, 741], "\uad00\uacc4\uc778": 741, "\uad00\ub828": [724, 751], "\uad00\ub828\ub41c": [718, 724, 731, 734, 749, 755], "\uad00\ub828\uc5c6\uc774": 722, "\uad00\ub828\uc774": 742, "\uad00\ub9ac\ud558\ub294\ub370": 731, "\uad00\ub9ac\ud55c\ub2e4": 721, "\uad49\uc7a5\ud788": [719, 754], "\uad50\uccb4\ud558\ub294": 746, "\uad50\uccb4\ud55c\ub2e4": 745, "\uad6c\ub3d9\ud558\uace0": 721, "\uad6c\ub9e4\uc790": 726, "\uad6c\ubcc4\uc774": 731, "\uad6c\ubcc4\ud558\uace0": 721, "\uad6c\ubcc4\ud558\ub294": 723, "\uad6c\ubcc4\ud558\ub294\ub370": 721, "\uad6c\ubcc4\ud574\ubcfc": 754, "\uad6c\ubd84\ub418\ub294": 723, "\uad6c\ubd84\ub41c\ub2e4": 723, "\uad6c\ubd84\ub41c\ub2e4\uace0": 753, "\uad6c\ubd84\uc9c1\uae30": 741, "\uad6c\ubd84\ud55c\ub2e4\uba74": 722, "\uad6c\uc131": 723, "\uad6c\uc131\ub418\uc5b4": [748, 752], "\uad6c\uc131\ub418\uc5b4\uc57c": 723, "\uad6c\uc131\ub41c": [723, 726, 754, 755], "\uad6c\uc131\ub41c\ub2e4": [723, 726, 741, 746, 751, 756], "\uad6c\uc131\ud558\ub294": 723, "\uad6c\uc131\ud560": 723, "\uad6c\uc785": 726, "\uad6c\uc785\ud588\uc74c": 726, "\uad6c\uc870": 725, "\uad6c\uc870\ub294": 721, "\uad6c\uc870\ub85c": 725, "\uad6c\uc870\ub97c": [730, 754], "\uad6c\uc870\uc640": [720, 721, 723, 727, 729], "\uad6c\uc870\uc774\ub2e4": 726, "\uad6c\uccb4\uc801\uc778": 718, "\uad6c\ud558\uace0": 753, "\uad6c\ud558\uae30": [734, 756], "\uad6c\ud558\ub294\ub370": [741, 744], "\uad6c\ud574\uc9c4": 754, "\uad6c\ud604": [718, 746, 753, 756], "\uad6c\ud604\uacfc": [741, 744], "\uad6c\ud604\ub355\uc5d0": 748, "\uad6c\ud604\ub3c4": [741, 744], "\uad6c\ud604\ub418\uc5b4": [734, 750, 751, 756], "\uad6c\ud604\ub418\uc5b4\uc57c": 715, "\uad6c\ud604\ub41c\ub2e4": [750, 753], "\uad6c\ud604\ub41c\ub2e4\ub294": 743, "\uad6c\ud604\uc0c1\uc758": [741, 744], "\uad6c\ud604\uc5d0": 718, "\uad6c\ud604\uc5d0\uc11c": 746, "\uad6c\ud604\uc740": [718, 721, 736, 740, 745, 746, 754], "\uad6c\ud604\uc774": [718, 734, 741, 744, 745], "\uad6c\ud604\ud558\uace0": [714, 720, 721, 734, 739, 747, 754], "\uad6c\ud604\ud558\uae30": [719, 739, 746], "\uad6c\ud604\ud558\uae30\ub9cc": 740, "\uad6c\ud604\ud558\ub294": [714, 715, 743, 745, 746], "\uad6c\ud604\ud558\ub294\ub370": 715, "\uad6c\ud604\ud558\ub294\uc9c0": 733, "\uad6c\ud604\ud558\uba74": 736, "\uad6c\ud604\ud55c": [740, 745], "\uad6c\ud604\ud55c\ub2e4": [715, 716], "\uad6c\ud604\ud560": [716, 718, 719, 734, 756], "\uad6c\ud604\ud574\uc11c": 716, "\uad6c\ud604\ud574\uc57c": 718, "\uad8c\uc7a5\ud558\ub294\ub370": [715, 734], "\uad8c\uc7a5\ud55c\ub2e4": [714, 718, 719, 721, 736], "\uaddc\uce59\uc740": 734, "\uaddc\uce59\uc744": 754, "\uade0\ub4f1": 755, "\uade0\ub4f1\ud558\uac8c": 744, "\uade0\uc77c": 742, "\uade0\ud5dd\uc744": 723, "\uade0\ud615\uc744": 723, "\uade0\ud615\uc7a1\ud78c": 723, "\uadf8": [715, 721, 722, 723, 725, 727, 731, 733, 734, 736, 738, 739, 740, 743, 744, 746, 749, 750, 753, 754, 755, 756], "\uadf8\uac83\ub4e4\uc5d0": 731, "\uadf8\uac83\ub4e4\uc740": 721, "\uadf8\uac83\ub4e4\uc744": [721, 740], "\uadf8\uac83\ub4e4\uc758": [720, 723, 726, 727, 739, 741, 753], "\uadf8\uac83\uc740": 755, "\uadf8\uac83\uc758": [723, 746], "\uadf8\ub300\ub85c": [740, 744], "\uadf8\ub4e4\uc758": 726, "\uadf8\ub798\ub4e4": 754, "\uadf8\ub798\uc11c": [723, 727], "\uadf8\ub798\ud504": [715, 717, 720, 723, 724, 729, 732, 733, 737, 739, 740, 741, 743, 744, 746, 749, 751], "\uadf8\ub798\ud504\uac00": [721, 722, 723, 724, 726, 731, 740, 741, 745, 750, 753, 754, 756], "\uadf8\ub798\ud504\uac04\uc758": [741, 744], "\uadf8\ub798\ud504\ub098": 745, "\uadf8\ub798\ud504\ub294": [722, 723, 725, 726, 729, 731, 740, 741, 742, 745, 750, 754], "\uadf8\ub798\ud504\ub3c4": 740, "\uadf8\ub798\ud504\ub4e4": 718, "\uadf8\ub798\ud504\ub4e4\uacfc": 744, "\uadf8\ub798\ud504\ub4e4\ub85c": [720, 723], "\uadf8\ub798\ud504\ub4e4\uc5d0": [739, 744, 751, 752, 753, 754, 755], "\uadf8\ub798\ud504\ub4e4\uc5d0\uc11c": 755, "\uadf8\ub798\ud504\ub4e4\uc744": [722, 730, 754], "\uadf8\ub798\ud504\ub4e4\uc758": [718, 719, 723, 731, 741, 744, 746], "\uadf8\ub798\ud504\ub85c": [723, 724, 730, 740, 750, 754, 755], "\uadf8\ub798\ud504\ub85c\ubd80\ud130": [722, 727], "\uadf8\ub798\ud504\ub97c": [717, 718, 720, 721, 722, 723, 726, 727, 730, 740, 741, 742, 745, 746, 752, 753, 754, 755, 756], "\uadf8\ub798\ud504\ub9cc": 718, "\uadf8\ub798\ud504\ubcc4": 728, "\uadf8\ub798\ud504\uc5d0": [718, 721, 725, 729, 730, 732, 733, 738, 740, 743, 745, 746, 750, 752, 755, 756], "\uadf8\ub798\ud504\uc5d0\ub3c4": 740, "\uadf8\ub798\ud504\uc5d0\uc11c": [718, 723, 726, 737, 740, 751], "\uadf8\ub798\ud504\uc5d0\uc11c\ub294": 723, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": [733, 755], "\uadf8\ub798\ud504\uc640": [731, 740, 741, 742, 744, 745, 751, 752, 753, 754], "\uadf8\ub798\ud504\uc758": [718, 721, 722, 723, 725, 726, 728, 730, 731, 736, 740, 742, 745, 750, 751, 754], "\uadf8\ub798\ud504\uc774\uace0": 726, "\uadf8\ub798\ud504\uc774\uae30": 727, "\uadf8\ub798\ud504\uc774\ub2e4": [726, 737, 754, 755], "\uadf8\ub798\ud504\uc774\uc5b4\uc57c": 745, "\uadf8\ub798\ud504\uc774\uc790": 754, "\uadf8\ub798\ud504\uc778": [728, 739, 741], "\uadf8\ub798\ud504\uc77c": 731, "\uadf8\ub798\ud504\ud2d1": 722, "\uadf8\ub7a8\uc758": 731, "\uadf8\ub7a8\ud504\ub97c": 755, "\uadf8\ub7ec\uba74": 753, "\uadf8\ub7f0": 755, "\uadf8\ub807\uc9c0": [716, 741, 752], "\uadf8\ub8f9": 720, "\uadf8\ub8f9\uc73c\ub85c": 731, "\uadf8\ub9ac\uace0": [715, 718, 720, 721, 723, 724, 725, 726, 727, 731, 733, 734, 740, 741, 747, 748, 749, 752, 754, 756], "\uadf8\ub9bc\uc5d0\uc11c\uc640": 740, "\uadf8\ub9bc\uc740": [720, 722, 740], "\uadf8\ub9bc\uc758": 740, "\uadf8\uc5d0": [723, 737], "\uadf8\uc640": [726, 741], "\uae30\ub2a5": 727, "\uae30\ub2a5\uc740": 742, "\uae30\ub2a5\uc744": [723, 727, 734, 740], "\uae30\ubc18\uc73c\ub85c": [722, 724, 750], "\uae30\ubc18\uc758": [723, 755], "\uae30\ubc18\uc774\ub2e4": 740, "\uae30\ubc95\uc744": 753, "\uae30\ubc95\uc774\ub2e4": 735, "\uae30\ubcf8": [715, 721, 722, 723, 724, 734, 740], "\uae30\ubcf8\uc801\uc73c\ub85c": 745, "\uae30\ubcf8\uc801\uc778": [715, 717, 723, 725, 746], "\uae30\uc220\uc801\uc73c\ub85c\ub294": 740, "\uae30\uc5ec\ub97c": 748, "\uae30\uc900\uc758": 732, "\uae30\ud638\ub9cc\uc73c\ub85c": 723, "\uae38\uc774": 726, "\uae38\uc774\ub294": 721, "\uae40\ubb34\ud604": 732, "\uae54\ub054\ud55c": [714, 731], "\uae68\uc9d0": 721, "\uaf2d": [715, 723], "\ub05d\ub098\uba74": 723, "\ub098\ub204\uace0": [720, 721, 723], "\ub098\ub204\ub294": [721, 723, 736], "\ub098\ub208\ub2e4": 723, "\ub098\ub220\uc57c\ub9cc": 721, "\ub098\ub220\uc57c\ud55c\ub2e4": 721, "\ub098\ub220\uc838": 718, "\ub098\ub220\uc838\uc11c": [721, 722], "\ub098\ub220\uc9c4": 721, "\ub098\ub25c\ub2e4": [737, 749], "\ub098\ub25c\ub2e4\ub294": 745, "\ub098\ub260": 750, "\ub098\uba38\uc9c0": [720, 723, 754], "\ub098\uba38\uc9c0\ub294": 740, "\ub098\uba38\uc9c0\uc5d0\uc11c\ub294": [715, 720], "\ub098\uc544\uac00": [723, 729], "\ub098\uc5f4\ub418\uc5b4": 723, "\ub098\uc5f4\ud558\uace0": 723, "\ub098\uc5f4\ud558\uae30\ub294": 727, "\ub098\ud0c0\ub0b8\ub2e4": [726, 730], "\ub098\ud0c0\ub0b8\ub2e4\ub294": 754, "\ub0a8\uc544\uc788\ub2e4": 734, "\ub0ae\ub2e4\uace0": 736, "\ub0ae\ucd94\ub294": 736, "\ub0b4\ubcf4\ub0b4\ub294": 753, "\ub0b4\ubd80\uc801\uc73c\ub85c": [727, 734], "\ub0b4\ubd80\uc801\uc73c\ub85c\ub294": 721, "\ub0b4\uc5d0\uc11c": 723, "\ub0b4\uc6a9\uc73c\ub85c": 740, "\ub0b4\uc6a9\uc740": [718, 734], "\ub0b4\uc6a9\uc774": 727, "\ub0b8": 741, "\ub108\ubb34": [736, 742, 753], "\ub110\ub9ac": 756, "\ub118\uc744": 739, "\ub123\uae30": 742, "\ub124": [722, 723, 724], "\ub124\uac00\uc9c0": 722, "\ub124\uac00\ud2f0\ube0c": 755, "\ub124\uc784\uc2a4\ud328\uc774\uc2a4\uc5d0": 734, "\ub124\ud2b8\uc6cc\ud06c": [720, 723, 724, 732, 739, 745, 755], "\ub124\ud2b8\uc6cc\ud06c\uac00": [740, 756], "\ub124\ud2b8\uc6cc\ud06c\ub294": [726, 756], "\ub124\ud2b8\uc6cc\ud06c\ub4e4\uc5d0\uc11c": 737, "\ub124\ud2b8\uc6cc\ud06c\ub97c": [721, 746, 752, 753], "\ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c": 726, "\ub124\ud2b8\uc6cc\ud06c\uc758": 749, "\ub178\ub4dc": [720, 722, 725, 726, 727, 728, 731, 733, 734, 739, 740, 741, 744, 745, 750, 751, 752, 754, 755], "\ub178\ub4dc\uac00": [721, 723, 739, 746], "\ub178\ub4dc\uac04\uc758": 731, "\ub178\ub4dc\ub098": 737, "\ub178\ub4dc\ub294": [742, 756], "\ub178\ub4dc\ub4e4": [721, 723, 725, 739, 740, 741, 755], "\ub178\ub4dc\ub4e4\uac04\uc758": [725, 726], "\ub178\ub4dc\ub4e4\uacfc": [726, 728, 731, 740, 741, 742, 746], "\ub178\ub4dc\ub4e4\ub85c": 722, "\ub178\ub4dc\ub4e4\ub9cc\uc774": 740, "\ub178\ub4dc\ub4e4\uc5d0": [723, 740, 743, 746, 754, 755], "\ub178\ub4dc\ub4e4\uc5d0\uac8c": 734, "\ub178\ub4dc\ub4e4\uc5d0\uc11c": 740, "\ub178\ub4dc\ub4e4\uc640": 718, "\ub178\ub4dc\ub4e4\uc740": [722, 723, 726, 740, 746], "\ub178\ub4dc\ub4e4\uc744": [720, 723, 740, 744, 746, 750], "\ub178\ub4dc\ub4e4\uc758": [721, 723, 726, 736, 738, 739, 740, 743, 746, 750, 753, 754, 755, 756], "\ub178\ub4dc\ub4e4\uc774": [722, 726, 740, 741, 745], "\ub178\ub4dc\ub4e4\uc774\ub098": [723, 754], "\ub178\ub4dc\ub4e4\uc774\ub2e4": [725, 740, 750], "\ub178\ub4dc\ub85c": [736, 745, 746], "\ub178\ub4dc\ub97c": [722, 723, 726, 730, 734, 740, 744, 750, 756], "\ub178\ub4dc\ubcc4": 733, "\ub178\ub4dc\uc5d0": [723, 728, 730, 733, 744, 746, 749, 751, 753, 756], "\ub178\ub4dc\uc5d0\ub3c4": 740, "\ub178\ub4dc\uc5d0\uc11c": [718, 736], "\ub178\ub4dc\uc640": [720, 721, 722, 723, 725, 730, 731, 733, 734, 737, 740, 745, 750, 754], "\ub178\ub4dc\uc758": [718, 721, 723, 730, 731, 733, 734, 735, 738, 740, 741, 743, 745, 746, 749, 750, 753, 756], "\ub178\ub4e4\ub4e4": 740, "\ub178\ub4e4\ub4e4\uc744": 740, "\ub178\ub4e4\ub4e4\uc758": 743, "\ub178\ub4e4\uc5d0": 740, "\ub178\ub4e4\uc744": 740, "\ub178\ub4e4\uc758": [721, 723], "\ub178\uc774\uc988": 755, "\ub178\ud2b8": [723, 737, 740, 742, 753, 754], "\ub179\uc0c9": 740, "\ub179\uc0c9\uacfc": 740, "\ub179\uc0c9\uc73c\ub85c": 740, "\ub192\ub3c4\ub85d": 755, "\ub192\uc740": 736, "\ub193\uc774\uac8c": 750, "\ub208\uc5d0": 741, "\ub274\ub7f4": [732, 737, 739, 740, 745, 746, 749, 755], "\ub290\ub9b0": 743, "\ub294": [715, 717, 721, 723, 724, 726, 727, 730, 731, 733, 734, 737, 740, 741, 742, 744, 746, 747, 750, 751, 752, 754, 755, 756], "\ub298": 740, "\ub2a5\ub825\uc774": 734, "\ub2e4\ub8e8\uace0": 745, "\ub2e4\ub8e8\uae30": [716, 754], "\ub2e4\ub8e8\ub294": 742, "\ub2e4\ub8e8\ub294\ub370": 725, "\ub2e4\ub8e8\uc9c0": 727, "\ub2e4\ub8ec": 743, "\ub2e4\ub8ec\ub2e4": [720, 721, 739], "\ub2e4\ub8f0": [727, 730, 750, 751], "\ub2e4\ub974\uac8c": [718, 721, 746, 750], "\ub2e4\ub974\uae30": 740, "\ub2e4\ub974\uc9c0": [753, 754, 755], "\ub2e4\ub978": [721, 723, 724, 725, 726, 727, 729, 730, 731, 734, 736, 737, 741, 742, 746, 751, 752, 753, 754, 756], "\ub2e4\ub978\ub370": [743, 755], "\ub2e4\ub984\uc744": 717, "\ub2e4\uba74": 722, "\ub2e4\uc2dc": [721, 723, 731, 745], "\ub2e4\uc591\ud55c": [721, 727, 751, 755], "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0": 716, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 714, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294": 716, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c": 716, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c\ub2e4": 716, "\ub2e4\uc6b4\ub85c\ub4dc\ud574\uc11c": 717, "\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc": [723, 753, 755, 756], "\ub2e4\uc74c": [714, 716, 717, 718, 719, 721, 722, 723, 730, 731, 734, 740, 741, 742, 744, 745, 746, 747, 749, 753, 754, 755, 756], "\ub2e4\uc74c\uacfc": [715, 718, 720, 723, 724, 731, 733, 734, 735, 736, 737, 739, 740, 741, 744, 745, 746, 750, 751, 752, 753, 754, 755, 756], "\ub2e4\uc74c\uc5d0": 750, "\ub2e4\uc74c\uc5d0\ub294": 740, "\ub2e4\uc74c\uc73c\ub85c": 739, "\ub2e4\uc74c\uc73c\ub85c\ub294": [744, 749], "\ub2e4\uc74c\uc740": [723, 724, 744, 747, 755, 756], "\ub2e4\uc74c\uc744": [724, 751], "\ub2e4\uc911": [722, 726], "\ub2e4\uc911\uc758": 721, "\ub2e4\ucc28\uc6d0": 728, "\ub2e8": [719, 721, 723], "\ub2e8\uacc4\uac00": 721, "\ub2e8\uacc4\ub4e4\uc744": 749, "\ub2e8\uacc4\ub85c": 723, "\ub2e8\uacc4\ub97c": [723, 746], "\ub2e8\uacc4\ub9c8\ub2e4": 739, "\ub2e8\uacc4\uc5d0\uc11c": [733, 736, 750], "\ub2e8\ubc29\ud5a5": 745, "\ub2e8\uc21c\ud558\uac8c": [741, 745, 746, 754, 756], "\ub2e8\uc21c\ud55c": 746, "\ub2e8\uc21c\ud788": 740, "\ub2e8\uc704\ub85c": 754, "\ub2e8\uc77c": [718, 720, 721, 723, 734, 745, 751, 752, 753], "\ub2e8\uc885": 750, "\ub2e8\uc9c0": [731, 740, 745, 756], "\ub2e8\ud56d": 734, "\ub2e8\ud56d\uc758": 734, "\ub2ec\ub77c\uc9c4\ub2e4": [741, 749], "\ub2ec\uc131\ud558\uae30": 755, "\ub2ec\uc131\ud558\ub294": 736, "\ub2f4\uace0": [721, 723, 741, 746, 754], "\ub2f4\ub2f9\ud558\ub294": 737, "\ub2f4\ub2f9\ud55c\ub2e4": [721, 723, 740], "\ub300\ub7b5": 723, "\ub300\ubd80\ubd84": [721, 730, 747], "\ub300\ubd80\ubd84\uc758": [719, 754], "\ub300\uc0c1": 745, "\ub300\uc0c1\uc73c\ub85c": 745, "\ub300\uc2e0": [721, 731, 744], "\ub300\uc2e0\uc5d0": [741, 744], "\ub300\uce6d\uc801\uc778": 726, "\ub300\ud45c\ud558\ub3c4\ub85d": 746, "\ub300\ud55c": [714, 715, 716, 718, 719, 721, 722, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 740, 741, 743, 744, 745, 746, 747, 750, 751, 752, 754, 755, 756], "\ub300\ud574": [720, 746, 751], "\ub300\ud574\uc11c": [721, 723, 740, 743, 744, 746, 747, 749, 751, 752, 753, 754, 755, 756], "\ub300\ud578": 739, "\ub354": [718, 719, 721, 723, 729, 734, 736, 740, 743, 747, 756], "\ub354\ubd88\uc5b4": [723, 727, 751, 754], "\ub354\ubd88\uc5b4\uc11c": 722, "\ub354\ud55c\ub2e4": 736, "\ub354\ud560": 718, "\ub354\ud574\uc11c": [723, 734, 754], "\ub355\uc5d0": 754, "\ub370\uc774": 721, "\ub370\uc774\ud130": [715, 723, 727, 730, 731, 732, 734, 740, 747, 749, 752, 756], "\ub370\uc774\ud130\uac00": [718, 719, 724, 743, 754], "\ub370\uc774\ud130\ub294": [718, 723], "\ub370\uc774\ud130\ub3c4": [723, 727], "\ub370\uc774\ud130\ub85c": 722, "\ub370\uc774\ud130\ub85c\ub354\ub97c": 754, "\ub370\uc774\ud130\ub85c\uc11c": 721, "\ub370\uc774\ud130\ub97c": [714, 716, 719, 720, 721, 722, 723, 727, 729], "\ub370\uc774\ud130\ub9cc": 729, "\ub370\uc774\ud130\uc14b": [715, 717, 719, 747, 752, 756], "\ub370\uc774\ud130\uc14b\uacfc": 718, "\ub370\uc774\ud130\uc14b\ub4e4": 714, "\ub370\uc774\ud130\uc14b\ub4e4\uc740": 718, "\ub370\uc774\ud130\uc14b\ub4e4\uc744": 717, "\ub370\uc774\ud130\uc14b\uc5d0": [715, 717, 718, 719, 743], "\ub370\uc774\ud130\uc14b\uc740": [717, 718, 756], "\ub370\uc774\ud130\uc14b\uc744": [714, 715, 717, 718, 746, 752, 754], "\ub370\uc774\ud130\uc14b\uc758": [717, 718, 754], "\ub370\uc774\ud130\uc14b\uc774": 716, "\ub370\uc774\ud130\uc5d0": [721, 722, 723, 724, 741], "\ub370\uc774\ud130\uc640": [720, 721, 722, 723, 724, 727], "\ub370\uc774\ud130\uc758": [718, 721], "\ub370\uc774\ud14c\uc14b\uc744": 718, "\ub370\uc774\ud2b8\ub97c": 715, "\ub374\uc2a4": 721, "\ub3c4\uad6c\ub4e4\uc744": 720, "\ub3c4\uc6c0\uc774": 736, "\ub3c4\ucc29\uc9c0": 731, "\ub3c4\ucd9c\ud560": 753, "\ub3c5\ub9bd\uc801\uc778": 731, "\ub3d5\uae30": 723, "\ub3d5\ub294": 724, "\ub3d9\uae30\ud654": 721, "\ub3d9\uc2dc": 721, "\ub3d9\uc2dc\uc5d0": [720, 721], "\ub3d9\uc548": [723, 734], "\ub3d9\uc548\uc5d0": 721, "\ub3d9\uc77c\ud558\uac8c": 731, "\ub3d9\uc77c\ud558\uae30\uc5d0": 741, "\ub3d9\uc77c\ud558\ub2e4": [718, 723, 736, 740, 747, 748, 750, 755, 756], "\ub3d9\uc77c\ud558\ub3c4\ub85d": 741, "\ub3d9\uc77c\ud55c": [720, 721, 734], "\ub3d9\uc791\uc740": 750, "\ub3d9\uc791\ud558\uac8c": 745, "\ub3d9\uc791\ud558\ub294": [742, 753], "\ub3d9\uc791\ud558\ub294\uc9c0": [714, 745, 756], "\ub3d9\uc791\ud558\ub294\uc9c0\ub97c": 715, "\ub3d9\uc791\ud55c\ub2e4": [721, 742, 745], "\ub3d9\uc791\ud560": 740, "\ub3d9\uc791\ud568": 742, "\ub3d9\uc885": 726, "\ub418\uac8c": 720, "\ub418\uace0": 750, "\ub418\uae30": 750, "\ub418\uae30\ub3c4": 737, "\ub418\ub294": 740, "\ub418\ub3c4\ub85d": 746, "\ub418\ubc84\ub9bc": 747, "\ub41c\ub2e4": [718, 726, 731, 736, 737, 740, 741, 750, 753, 754, 755, 756], "\ub41c\ub2e4\ub294": 746, "\ub420": [723, 724, 740], "\ub450": [721, 723, 724, 726, 728, 729, 731, 736, 737, 741, 744, 747, 753, 754, 755], "\ub450\uac00\uc9c0": [721, 722, 731, 742, 751], "\ub450\uac1c": 745, "\ub450\uac1c\ub85c": 736, "\ub450\uac1c\uc758": [726, 727, 734, 746], "\ub450\ubc88\uc9f8": [723, 740, 741], "\ub450\ubc88\uc9f8\ub294": [741, 750], "\ub450\ubc88\uc9f8\ub85c": 754, "\ub458\uc740": 753, "\ub4a4\uc5d0": 724, "\ub4e4": [740, 754], "\ub4e4\uaca0\ub2e4": 718, "\ub4e4\ub9cc": 740, "\ub4e4\uba74": [721, 734, 735, 744, 753, 754, 755], "\ub4e4\uc5b4": [719, 721, 722, 723, 725, 726, 728, 734, 740, 742, 745, 746, 753, 754, 755, 756], "\ub4e4\uc5b4\uac08": [742, 752], "\ub4e4\uc5b4\ubcf4\uc790": [736, 740, 745, 746], "\ub4e4\uc744": [734, 741], "\ub4e4\uc758": [733, 741, 744, 746], "\ub4e4\uc790": 745, "\ub4ec\ub140": 731, "\ub4f1": 715, "\ub4f1\uacfc": 749, "\ub4f1\ub85d": 749, "\ub4f1\ub85d\uacfc": 748, "\ub4f1\ub85d\ud55c\ub2e4": 749, "\ub4f1\uc740": 723, "\ub4f1\uc758": 756, "\ub4f1\uc774": [734, 754], "\ub4f1\uc7a5\ud55c\ub2e4\ub294": 740, "\ub514\ub809\ud1a0\ub9ac": [716, 724], "\ub514\ub809\ud1a0\ub9ac\ub85c": [716, 724], "\ub514\ub809\ud1a0\ub9ac\ub97c": [723, 724], "\ub514\ub809\ud1a0\ub9ac\uc5d0": [716, 718, 723], "\ub514\ub809\ud1a0\ub9ac\uc640": 723, "\ub514\ub809\ud1a0\ub9ac\uc758": 723, "\ub514\ubc14\uc774\uc2a4": 730, "\ub514\ubc14\uc774\uc2a4\ub85c": 742, "\ub514\uc2a4\ud06c\ub85c": 719, "\ub514\uc2a4\ud06c\uc5d0": [715, 716, 719, 727], "\ub514\uc790\uc778\uc744": 721, "\ub525\ub7ec\ub2dd": 756, "\ub525\ub7ec\ub2dd\uc5d0\uc11c": 754, "\ub530\ub77c": [723, 730, 748, 749, 750, 755, 756], "\ub530\ub77c\uc11c": [718, 721, 722, 723, 724, 726, 727, 729, 740, 741, 742, 744, 745, 747, 750], "\ub530\ub974\uace0": 721, "\ub530\ub974\uba74": 740, "\ub530\ub978\ub2e4": [714, 728], "\ub54c": [720, 721, 722, 723, 731, 734, 736, 741, 743, 744, 746, 749, 751, 753, 754, 755], "\ub54c\uae4c\uc9c0": 739, "\ub54c\ub294": [722, 731, 747], "\ub54c\ub85c\ub294": [736, 741, 752], "\ub54c\ub860": 753, "\ub54c\ubb38\uc5d0": [718, 719, 721, 726, 731, 736, 740, 743, 744, 747, 750, 753, 754, 755], "\ub54c\ubb38\uc774\ub2e4": [714, 715, 721, 723, 727, 730, 734, 736, 740, 741, 742, 743, 755], "\ub54c\uc758": 747, "\ub5a0\uc62c\ub824": 740, "\ub610\ub294": [715, 716, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 737, 739, 740, 745, 749, 751, 752, 754, 755, 756], "\ub610\ud55c": [715, 718, 721, 723, 724, 730, 739, 746, 753, 756], "\ub611\uac19\uc774": 754, "\ub73b": 755, "\ub744\ub294": 741, "\ub77c\uace0": [730, 734, 740, 746, 753, 755], "\ub77c\ub294": [718, 722, 723, 734], "\ub77c\uc774\ube0c\ub7ec\ub9ac": 727, "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4": 727, "\ub77c\uc778": 728, "\ub77c\uc778\uc774\ub2e4": 720, "\ub798\ud551\ud558\uba74": 747, "\ub79c\ub364": 723, "\ub7ec\ud37c\ub7f0\uc2a4": 727, "\ub7f0\uce58": 724, "\ub7f0\uce6d\ud558\uae30": 720, "\ub808\uc774\ube14": [715, 718, 727, 754], "\ub808\uc774\ube14\uacfc": 756, "\ub808\uc774\ube14\ub4e4\uc758": 718, "\ub808\uc774\ube14\ub85c": 753, "\ub808\uc774\ube14\ub9cc": 746, "\ub808\uc774\ube14\uc740": [746, 756], "\ub808\uc774\ube14\uc744": [719, 731, 746, 753], "\ub808\uc774\ube14\uc774": [723, 743], "\ub808\uc774\uc544\uc6c3\uc744": 728, "\ub808\uc774\uc5b4": [736, 743, 746, 747, 753, 755, 756], "\ub808\uc774\uc5b4\uac00": 721, "\ub808\uc774\uc5b4\ub4e4": 743, "\ub808\uc774\uc5b4\ub4e4\uc744": 743, "\ub808\uc774\uc5b4\ub85c\ubd80\ud130": 740, "\ub808\uc774\uc5b4\ub97c": 740, "\ub808\uc774\uc5b4\ubd80\ud130": 743, "\ub808\uc774\uc5b4\uc5d0": [740, 741, 743, 746, 754], "\ub808\uc774\uc5b4\uc5d0\uc11c": [739, 746], "\ub808\uc774\uc5b4\uc758": [736, 739, 740, 743], "\ub808\uc774\uc774\ubcc4\ub85c": 743, "\ub85c": [722, 724, 725, 727, 730, 733, 745, 746, 747, 750, 751, 756], "\ub85c\ub354": 721, "\ub85c\ub354\uac00": [741, 746], "\ub85c\ub354\ub294": 744, "\ub85c\ub354\ub85c\ubd80\ud130": 741, "\ub85c\ub354\ub97c": [721, 740, 741, 744], "\ub85c\ub354\uc5d0": 744, "\ub85c\ub354\uc5d0\uc11c": 741, "\ub85c\ub4dc\ub420": [721, 722, 746], "\ub85c\ub4dc\uc548\ub2e4": 723, "\ub85c\ub4dc\uc5d0": 715, "\ub85c\ub4dc\ud558\uace0": [721, 723], "\ub85c\ub4dc\ud558\uae30": [714, 718], "\ub85c\ub4dc\ud558\ub294": 746, "\ub85c\ub4dc\ud558\uba74": 746, "\ub85c\ub4dc\ud55c\ub2e4": [721, 746], "\ub85c\ub4dc\ud55c\ub2e4\ub294": 746, "\ub85c\ub529": [714, 715, 717], "\ub85c\ub529\ub420": 723, "\ub85c\ub529\uc744": 715, "\ub85c\ub529\ud558\uace0": [714, 715, 727], "\ub85c\ub529\ud558\uae30": 723, "\ub85c\ub529\ud558\ub294": [717, 727, 742], "\ub85c\ub529\ud55c\ub2e4": 746, "\ub85c\ub529\ud568": 719, "\ub85c\ubd80\ud130": [721, 722, 727, 740], "\ub85c\uc11c": 733, "\ub85c\uc758": 730, "\ub85c\uc9c1\uc73c\ub85c": 751, "\ub85c\uceec": [715, 716, 719, 720, 721, 723, 724], "\ub8e8\ud504": 726, "\ub8f9\uacfc": [720, 741, 743, 755, 756], "\ub8f9\uc740": [741, 744, 746, 753, 754, 755, 756], "\ub8f9\uc744": [723, 743, 753, 756], "\ub8f9\uc774\ub791": 746, "\ub97c": [715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 733, 734, 736, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 750, 751, 752, 753, 754, 755, 756], "\ub9ac\uadf8\ub798\uc158": [718, 752], "\ub9ac\uadf8\ub808\uc158": [741, 752, 755, 756], "\ub9ac\uadf8\ub808\uc158\uacfc": 741, "\ub9ac\uadf8\ub808\uc158\uc5d0\uc11c": 744, "\ub9ac\uadf8\ub808\uc158\uc744": [741, 744, 753], "\ub9ac\ub4c0\uc154": 737, "\ub9ac\ub4dc\uc544\uc6c3\uc740": 754, "\ub9ac\uc14b": 749, "\ub9ac\uc18c\uc2a4\ub4e4\uc758": 720, "\ub9ac\uc18c\uc2a4\ub97c": 743, "\ub9ac\uc2a4\ud2b8": [744, 746], "\ub9ac\uc2a4\ud2b8\ub4e4\uc5d0": 751, "\ub9ac\uc2a4\ud2b8\ub85c": 718, "\ub9ac\uc2a4\ud2b8\ub85c\ubd80\ud130": 754, "\ub9ac\uc2a4\ud2b8\ub97c": [740, 741, 746, 754], "\ub9ac\uc2a4\ud2b8\uc5d0": 754, "\ub9ac\uc2a4\ud2b8\uc5d0\uc11c": 741, "\ub9ac\uc2a4\ud2b8\uc640": [718, 719, 741], "\ub9ac\uc2a4\ud2b8\uc758": 750, "\ub9ac\uc2a4\ud2b8\uc774\ub2e4": 751, "\ub9ac\ud134\ub418\uc9c0": 721, "\ub9ac\ud134\ub41c": [740, 756], "\ub9ac\ud134\ub41c\ub2e4": [723, 741], "\ub9ac\ud134\ud558\uae30": 753, "\ub9ac\ud134\ud558\ub3c4\ub85d": 718, "\ub9ac\ud134\ud55c\ub2e4": [721, 723, 741, 753, 756], "\ub9ac\ud134\ud55c\ub2e4\ub294": 721, "\ub9ac\ud134\ud574\uc57c": 744, "\ub9ac\ud134\ud574\uc57c\ud55c\ub2e4": 744, "\ub9b4\ub9ac\uc988\uc5d0\uc11c": 722, "\ub9c1\ud06c": [721, 739, 752, 754, 756], "\ub9c1\ud06c\ub97c": 718, "\ub9c8\ub2e4": [721, 744], "\ub9c8\uc2a4\ud06c": 718, "\ub9c8\uc2a4\ud06c\ub294": 718, "\ub9c8\uc2a4\ud06c\ub4e4\uc744": 718, "\ub9c8\uc2a4\ud06c\ub85c": 753, "\ub9c8\uc2a4\ud06c\ub85c\uc11c": 756, "\ub9c8\uc2a4\ud06c\ub97c": 718, "\ub9c8\uc2a4\ud130": 724, "\ub9c8\uc9c0\ub9c9": [733, 734, 736, 740, 741, 746, 750], "\ub9c8\uc9c0\ub9c9\uc5d0\ub294": 749, "\ub9c8\uc9c0\ub9c9\uc73c\ub85c": [734, 739, 751, 754], "\ub9c8\uce5c": 718, "\ub9cc": 742, "\ub9cc\ub4dc\ub294": [714, 718, 721, 723, 727, 730, 731, 733, 740, 741, 745, 746, 748, 755], "\ub9cc\ub4dc\ub294\ub370": [727, 748], "\ub9cc\ub4e0": [723, 738, 744, 752, 753], "\ub9cc\ub4e0\ub2e4": [723, 727, 741, 746, 753, 754], "\ub9cc\ub4e4": [721, 722, 723, 727, 729, 740, 741, 749, 750, 754], "\ub9cc\ub4e4\uac8c": 740, "\ub9cc\ub4e4\uace0": [721, 730, 731, 745, 755], "\ub9cc\ub4e4\uace0\uc790": [739, 753], "\ub9cc\ub4e4\uae30": [720, 722, 723, 730, 732, 734, 743, 745, 752, 756], "\ub9cc\ub4e4\uba74": 727, "\ub9cc\ub4e4\uc5b4": [721, 741], "\ub9cc\ub4e4\uc5b4\ub0b4\uae30": 754, "\ub9cc\ub4e4\uc5b4\ub0b4\ub294": 740, "\ub9cc\ub4e4\uc5b4\ub0b8\ub2e4": [744, 754], "\ub9cc\ub4e4\uc5b4\ub0bc": 750, "\ub9cc\ub4e4\uc5b4\uc11c": [736, 754], "\ub9cc\ub4e4\uc5b4\uc57c": [721, 723, 730], "\ub9cc\ub4e4\uc5b4\uc57c\ud560": 740, "\ub9cc\ub4e4\uc5b4\uc84c\ub2e4\uba74": 740, "\ub9cc\ub4e4\uc5b4\uc9c0\uba74": [721, 723], "\ub9cc\ub4e4\uc5b4\uc9c4\ub2e4": [721, 726, 728], "\ub9cc\ub4e4\uc5b4\uc9c8": [723, 741], "\ub9cc\ub4e4\uc5c8\ub2e4": 718, "\ub9cc\ub4e4\uc5c8\ub2e4\uba74": 753, "\ub9cc\ub4e4\uc790": 716, "\ub9cc\uc57d": [716, 718, 721, 722, 723, 727, 731, 734, 736, 739, 740, 741, 742, 744, 746, 747, 752, 756], "\ub9cc\uc744": [722, 756], "\ub9cc\uc871\ud558\uc9c0": 731, "\ub9cc\uc871\ud574\uc57c": 745, "\ub9ce\uc740": [718, 721, 723, 736, 740, 742, 743, 754], "\ub9ce\uc774": [714, 715, 736, 748, 754, 755], "\ub9d0\ud558\uc790\uba74": 721, "\ub9de\uac8c": 743, "\ub9de\ub3c4\ub85d": [723, 746], "\ub9de\ucd94\uac83\uc744": 723, "\ub9de\ucd94\ub294": 723, "\ub9de\ucd98\ub2e4": 723, "\ub9de\ucd9c": 723, "\ub9e4": [721, 746], "\ub9e4\ub274\uc5bc\uc758": 727, "\ub9e4\ubc88": 746, "\ub9e4\uc6b0": [736, 746], "\ub9e4\ud551": 741, "\ub9e4\ud551\uc740": 740, "\ub9e4\ud551\uc744": [723, 741], "\ub9e4\ud551\uc774\ub2e4": 723, "\ub9e4\ud551\ud558\ub294": 751, "\ub9f4\ubc84": 734, "\ub9f4\ubc84\ub97c": 734, "\uba04\uc57d": 723, "\uba38\uc2e0": 724, "\uba38\uc2e0\ub4e4\uc5d0": [721, 723], "\uba38\uc2e0\ub4e4\uc758": [721, 724], "\uba38\uc2e0\ub7ec\ub2dd": 718, "\uba38\uc2e0\ub7ec\ub2dd\uc5d0\ub294": 718, "\uba38\uc2e0\uc5d0": [722, 723, 724], "\uba38\uc2e0\uc5d0\uc11c": [721, 723, 724], "\uba38\uc2e0\uc740": 724, "\uba38\uc2e0\uc744": 724, "\uba38\uc2e0\uc758": [721, 724], "\uba38\uc2e0\uc774": [721, 724], "\uba3c\uc800": [721, 740], "\uba40\ud2f0": [718, 742, 746, 753, 755, 756], "\uba4b\uc9c4": 754, "\uba54\ub274\uc5bc\uc5d0": 727, "\uba54\ubaa8\ub9ac": [736, 742, 743, 747], "\uba54\ubaa8\ub9ac\uac00": [739, 747], "\uba54\ubaa8\ub9ac\ub098": 746, "\uba54\ubaa8\ub9ac\ub97c": [736, 742, 747], "\uba54\ubaa8\ub9ac\uc5d0": [742, 752], "\uba54\ubaa8\ub9ac\uc640": 743, "\uba54\uc18c\ub4dc": 740, "\uba54\uc18c\ub4dc\ub294": 740, "\uba54\uc18c\ub4dc\ub85c": [743, 753], "\uba54\uc18c\ub4dc\ub97c": [730, 740, 753], "\uba54\uc18c\ub4dc\uc5d0": 753, "\uba54\uc18c\uc2a4\ub4e4": 740, "\uba54\uc2dc\uc9c0": [733, 743, 745, 746, 748, 751, 752, 754, 756], "\uba54\uc2dc\uc9c0\ub4e4": 734, "\uba54\uc2dc\uc9c0\ub4e4\uc5b4": 743, "\uba54\uc2dc\uc9c0\ub4e4\uc744": [733, 734], "\uba54\uc2dc\uc9c0\ub4e4\uc774": 749, "\uba54\uc2dc\uc9c0\ub97c": [733, 736, 740, 746, 756], "\uba54\uc2dc\uc9c0\uc758": 736, "\uba54\uc9c0\uc2dc": [732, 737, 752, 756], "\uba54\ucf13\ud50c\ub798\uc774\uc2a4\ub97c": 726, "\uba54\ud0c0": 723, "\uba54\ud0c0\uadf8\ub798\ud504": 731, "\uba54\ud0c0\uadf8\ub798\ud504\uc758": 731, "\uba54\ud0c0\ub370\uc774\ud130\ub97c": 721, "\uba54\ud551\uc744": 723, "\uba64\uba38\ub97c": 740, "\uba85\ub839": 723, "\uba85\ub839\uc73c\ub85c": 717, "\uba85\ub839\uc740": 723, "\uba85\ub839\uc744": 723, "\uba85\ub839\uc758": 723, "\uba85\ub839\uc774": 723, "\uba85\ub839\ud589\uc774\ub098": 721, "\uba85\uc2dc\ub41c": [724, 750], "\uba85\uc2dc\ub41c\ub2e4\uba74": 723, "\uba85\uc2dc\uc801\uc73c\ub85c": 721, "\uba85\uc2dc\uc801\uc778": 730, "\uba85\uc2dc\ud558\uace0": 731, "\uba85\uc2dc\ud558\uae30\ub9cc": 753, "\uba85\uc2dc\ud558\ub294": 723, "\uba85\uc2dc\ud558\uc9c0": 723, "\uba85\uc2dc\ud55c\ub2e4": 723, "\uba85\uc2dc\ud560": [731, 741], "\uba85\uc2dc\ud574\uc57c": [722, 750], "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4": 731, "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4\ub294": 746, "\uba85\ud655\ud558\uac8c": 731, "\uba87": [720, 721, 723, 739, 741, 745, 746, 755, 756], "\uba87\uac00\uc9c0": [725, 755], "\uba87\uac1c\uc758": 745, "\ubaa8\ub378": [718, 720, 721, 739, 743, 750, 753], "\ubaa8\ub378\uacfc": 755, "\ubaa8\ub378\uacfc\ub294": 755, "\ubaa8\ub378\ub85c": [721, 753], "\ubaa8\ub378\ub9c1": [731, 737], "\ubaa8\ub378\ub9c1\uc5d0": 726, "\ubaa8\ub378\ub9c1\uc5d0\uc11c": [731, 735], "\ubaa8\ub378\ub9c1\ud558\ub294\ub370": 726, "\ubaa8\ub378\uc5d0": [718, 744, 753, 754, 756], "\ubaa8\ub378\uc5d0\uc11c\ub294": 756, "\ubaa8\ub378\uc740": [741, 744, 753, 755, 756], "\ubaa8\ub378\uc744": [721, 739, 743, 747, 748, 753, 754, 755, 756], "\ubaa8\ub378\uc758": [721, 739, 747, 754], "\ubaa8\ub378\uc774": [721, 742, 754], "\ubaa8\ub450": [723, 726, 731, 734, 740, 742, 743, 750, 754, 755], "\ubaa8\ub450\ub97c": 744, "\ubaa8\ub450\uc5d0": 740, "\ubaa8\ub4c8": [720, 732, 739, 746, 752, 756], "\ubaa8\ub4c8\uacfc": [750, 753], "\ubaa8\ub4c8\ub3c4": 721, "\ubaa8\ub4c8\ub4e4\uc740": [745, 746, 749], "\ubaa8\ub4c8\ub4e4\uc744": 756, "\ubaa8\ub4c8\ub9cc\uc744": 746, "\ubaa8\ub4c8\uc5d0": [750, 751, 754], "\ubaa8\ub4c8\uc5d0\uc11c": [741, 748, 750], "\ubaa8\ub4c8\uc740": [748, 749, 750, 753], "\ubaa8\ub4c8\uc744": [721, 739, 745, 746, 747, 748, 751, 752, 753, 756], "\ubaa8\ub4c8\uc758": [721, 743, 745, 748, 749, 753, 756], "\ubaa8\ub4c8\uc774": [721, 745, 746, 751, 756], "\ubaa8\ub4c8\uc774\uace0": 751, "\ubaa8\ub4c8\uc774\ub2e4": 749, "\ubaa8\ub4c8\uc778": 756, "\ubaa8\ub4c8\ucc98\ub7fc": 751, "\ubaa8\ub4dc\ub294": 721, "\ubaa8\ub4dc\ub85c": 721, "\ubaa8\ub4dc\uc5d0\uc11c\ub294": 721, "\ubaa8\ub4dc\uc640": 721, "\ubaa8\ub4e0": [720, 721, 722, 723, 724, 726, 727, 729, 730, 731, 734, 737, 739, 740, 742, 743, 744, 745, 746, 750, 753, 754, 756], "\ubaa8\uc544\uc11c": 731, "\ubaa8\uc74c\uc774\ub2e4": 717, "\ubaa9\ub85d": 754, "\ubaa9\ub85d\uc5d0": 754, "\ubaa9\ub85d\uc740": [734, 741, 746, 756], "\ubaa9\ub85d\uc744": [741, 746], "\ubaa9\ub85d\uc774": 740, "\ubaa9\uc801": 751, "\ubaa9\uc801\uc73c\ub85c": [731, 743], "\ubaa9\uc801\uc73c\ub85c\ub294": 743, "\ubaa9\uc801\uc740": 715, "\ubaa9\uc801\uc9c0": [723, 734, 740, 744, 746, 749, 750, 751], "\ubaa9\uc801\uc9c0\uac00": 740, "\ubaa9\uc801\uc9c0\uc640": 731, "\ubaa9\uc801\uc9c0\uc778": 740, "\ubb38\ubc95\uc744": 731, "\ubb38\uc790": 731, "\ubb38\uc790\ub4e4\uacfc": 723, "\ubb38\uc790\ub85c": 723, "\ubb38\uc790\ub9cc\ub4e4": 731, "\ubb38\uc790\uc5f4": 731, "\ubb38\uc790\uc5f4\uc774\ub2e4": [734, 737], "\ubb38\uc7a5\uc73c\ub85c": 753, "\ubb38\uc81c\ub294": 754, "\ubb38\uc81c\ub4e4\uacfc": 754, "\ubb38\uc81c\ub97c": [747, 750], "\ubb38\uc81c\uc640": 754, "\ubb38\uc81c\uc778": 753, "\ubbf8\ub2c8": [718, 720, 721, 738, 739, 743, 750, 754], "\ubbf8\ub2c8\ubc30\uce58": [721, 722, 744], "\ubbf8\ub2c8\ubc30\uce58\ub97c": 743, "\ubbf8\ub2c8\ubc30\uce58\ub9cc": 743, "\ubbf8\ub2c8\ubc30\uce58\uc5d0": [744, 746], "\ubbf8\ub2c8\ubc30\uce58\uc5d0\uc11c": 741, "\ubbf8\ub2c8\ubc30\uce58\uc640": 743, "\ubbf8\ub2c8\ubc30\uce58\uc758": [741, 743], "\ubbf8\ub798\uc758": 753, "\ubbf8\ub9ac": 756, "\ubbf8\ub9cc\uc758": 742, "\ubc0f": [718, 719, 721, 722, 725, 727, 728, 730, 731, 732, 733, 739, 740, 743, 747, 750, 752, 754, 756], "\ubc11\uc904": 723, "\ubc14\uafb8\uace0": 722, "\ubc14\uafb8\uae30\ub9cc": 740, "\ubc14\uafb8\ub294": 745, "\ubc14\uafb8\uba74": 747, "\ubc14\ub010": 718, "\ubc14\ub014": 722, "\ubc16\uc5d0\uc11c": [715, 734], "\ubc18\uacfc": 736, "\ubc18\ub300": 741, "\ubc18\ub300\ub85c": 726, "\ubc18\ub300\uc758": 723, "\ubc18\ub4dc\uc2dc": [734, 745], "\ubc18\uba74": 743, "\ubc18\uba74\uc5d0": 736, "\ubc18\ubcf5": 739, "\ubc18\ubcf5\ub41c\ub2e4": 739, "\ubc18\ubcf5\uc801\uc73c\ub85c": 755, "\ubc18\ubcf5\ud574\uc11c": 756, "\ubc18\uc774": 736, "\ubc18\ud658\ud558\ub294": 746, "\ubc1b\uace0": [721, 751, 756], "\ubc1b\ub294": [744, 750], "\ubc1b\ub294\ub2e4": [723, 730, 737, 746, 750, 751], "\ubc1b\ub294\ub2e4\ub294": [741, 744, 746], "\ubc1b\ub294\ub370": 734, "\ubc1b\uc544\ub4e4\uc778\ub2e4": 729, "\ubc1b\uc544\uc11c": 744, "\ubc1b\uc544\uc57c\ud558\uace0": 744, "\ubc1b\uc744": 746, "\ubc1c\ub824\uc640\uc11c": 754, "\ubc1c\uc0dd\uc2dc\ud0a4\ub294\ub370": 740, "\ubc1c\uc0dd\ud560": [721, 743], "\ubc25\ubc99\uc73c\ub85c": 735, "\ubc29\ubc95": [721, 730, 733, 750], "\ubc29\ubc95\uacfc": [740, 741, 746, 752], "\ubc29\ubc95\ub3c4": 739, "\ubc29\ubc95\ub4e4\uc5d0": 727, "\ubc29\ubc95\ub4e4\uc744": [730, 740], "\ubc29\ubc95\uc5d0": [718, 736, 752], "\ubc29\ubc95\uc73c\ub85c": [721, 723, 738, 742], "\ubc29\ubc95\uc73c\ub85c\ub294": 729, "\ubc29\ubc95\uc740": [718, 723, 727, 731, 736, 739, 743, 747, 753, 754, 755, 756], "\ubc29\ubc95\uc744": [714, 715, 717, 718, 723, 733, 734, 740, 743, 744, 747, 748, 753, 756], "\ubc29\ubc95\uc774\ub2e4": [718, 738, 742], "\ubc29\uc2dd\uc73c\ub85c": [733, 740], "\ubc29\uc2dd\uc744": 720, "\ubc29\uc2dd\uc758": 748, "\ubc29\uc9c0\ud558\ub294": 721, "\ubc29\ud5a5\uc131": [726, 740], "\ubc29\ud5a5\uc131\uc5d0": 726, "\ubc29\ud5a5\uc131\uc744": 726, "\ubc29\ud5a5\uc131\uc774": 726, "\ubc29\ud5a5\uc744": 730, "\ubc29\ud5a5\uc774": 727, "\ubc30\uc5f4": [731, 741, 744, 746], "\ubc30\uc5f4\uacfc": 744, "\ubc30\uc5f4\uc758": 744, "\ubc30\uc81c\ud558\uace0\uc790": 741, "\ubc30\uc81c\ud558\ub294": 741, "\ubc30\uce58": [718, 720, 721, 738, 739, 743, 750], "\ubc30\uce58\ub4e4\uc744": 721, "\ubc30\uce58\ub4e4\uc758": 746, "\ubc30\uce58\ub85c\ubd80\ud130": 741, "\ubc30\uce58\ub97c": [720, 721, 734, 739, 754], "\ubc30\uce58\uc548\uc5d0": 741, "\ubc30\uce58\uc5d0": [734, 754], "\ubc30\uce58\uc5d0\uc11c": 739, "\ubc31\uc564\ub4dc\ub9cc": 720, "\ubc31\uc5d4\ub4dc": [727, 748], "\ubc31\uc5d4\ub4dc\ub85c": [748, 752], "\ubc31\uc5d4\ub4dc\ub97c": 748, "\ubc84\ub9b0\ub2e4\ub294": 754, "\ubc84\uc804": 732, "\ubc84\uc804\ub3c4": [745, 754], "\ubc84\uc804\uc758": 723, "\ubc84\uc804\uc774\ub2e4": 753, "\ubc84\ud2f1\uc2a4\ub4e4": 726, "\ubc88": 756, "\ubc88\uc5ed\ud55c": 732, "\ubc88\ud638": 730, "\ubc88\ud638\uac00": [724, 730], "\ubc88\ud638\ub294": 730, "\ubc88\ud638\ub3c4": 724, "\ubc88\ud638\ub97c": 730, "\ubc94\uc704\ub3c4": 723, "\ubc94\uc704\ub97c": 723, "\ubc94\uc704\uc5d0": 718, "\ubc94\uc704\uc758": 756, "\ubc94\uc8fc\ud615": 753, "\ubc95\uc744": 739, "\ubc95\uce59\uc758": 723, "\ubca0\uce58\ub4e4\uc5d0": 741, "\ubca1\ud130": [728, 753], "\ubca1\ud130\ub294": 723, "\ubca1\ud130\ub4e4\uc758": 723, "\ubca1\ud130\ub97c": 723, "\ubca1\ud130\uc778": 723, "\ubca4\uce58\ub9c8\ud0b9": 717, "\ubcc0\uacbd\ub418\uc5c8\ub294\uc9c0": 716, "\ubcc0\uacbd\uc740": 720, "\ubcc0\uacbd\ud558\uae30": 746, "\ubcc0\uacbd\ud574\uc11c": 753, "\ubcc0\uacbd\ud574\uc57c\ud560": 746, "\ubcc0\uc218\ub4e4": 723, "\ubcc0\ud615": 735, "\ubcc0\ud658": [721, 754], "\ubcc0\ud658\ub41c": 754, "\ubcc0\ud658\ub41c\ub2e4": 718, "\ubcc0\ud658\uc740": 731, "\ubcc0\ud658\uc744": 730, "\ubcc0\ud658\ud558\uace0": 723, "\ubcc0\ud658\ud558\uae30": 727, "\ubcc0\ud658\ud558\ub294": [722, 740], "\ubcc0\ud658\ud558\ub294\ub370": 727, "\ubcc0\ud658\ud558\ub3c4\ub85d": 723, "\ubcc0\ud658\ud558\uba74": [718, 727], "\ubcc0\ud658\ud558\uba74\uc11c": 740, "\ubcc0\ud658\ud55c\ub2e4": [722, 727, 731], "\ubcc0\ud658\ud560": [730, 731], "\ubcc0\ud658\ud574\uc11c": 727, "\ubcc4\ub3c4\ub85c": 723, "\ubcc4\ub3c4\ub85d": 754, "\ubcc4\ub3c4\uc758": [731, 755, 756], "\ubcc4\ub85c\ub3c4": 751, "\ubcd1\ub82c\ub85c": 723, "\ubcd1\ub82c\ud654": 720, "\ubcd1\ub82c\ud654\uc2dc\ud0a4\uace0": 720, "\ubcd1\ud569": [734, 753], "\ubcd1\ud569\uc774\uc804\uc5d0": 735, "\ubcd1\ud569\ud558\ub294": 753, "\ubcf4\ub0b4\uc8fc\uc138\uc694": 732, "\ubcf4\ub2e4": [721, 739, 740, 741, 742, 746], "\ubcf4\ub77c": 723, "\ubcf4\uba74": 731, "\ubcf4\uc5ec\uc8fc\uace0": 743, "\ubcf4\uc5ec\uc8fc\uae30": 745, "\ubcf4\uc5ec\uc8fc\ub294": 722, "\ubcf4\uc5ec\uc900\ub2e4": [714, 715, 717, 719, 720, 722, 723, 724, 730, 740, 741, 747], "\ubcf4\uc790": [721, 728, 730, 740, 743, 745], "\ubcf4\uc874\ud558\uace0": 731, "\ubcf4\ud1b5": [734, 756], "\ubcf4\ud1b5\uc740": [721, 734, 735, 741, 743, 749, 754], "\ubcf4\ud1b5\uc758": [751, 754], "\ubcf4\ud1b5\uc774\ub2e4": 741, "\ubcf4\ud638\ub97c": 721, "\ubcf5\uc0ac": 724, "\ubcf5\uc0ac\ub41c\ub2e4": 724, "\ubcf5\uc0ac\ub97c": 736, "\ubcf5\uc0ac\ud558\uace0": 720, "\ubcf5\uc0ac\ud558\uba74\uc11c": 731, "\ubcf5\uc0ac\ud55c\ub2e4": [724, 729], "\ubcf5\uc0ac\ud560": 729, "\ubcf5\uc7a1\ud558\ub2c8": 753, "\ubcf5\uc7a1\ud55c": [737, 740, 749, 754], "\ubcf8\uac83\uacfc": 756, "\ubcfc": 718, "\ubd80\ub3d9\uc18c\uc218\uc810": 734, "\ubd80\ub978\ub2e4": [730, 740, 746, 754], "\ubd80\ubd84": [718, 741], "\ubd80\ubd84\ub4e4\uc774": 721, "\ubd80\ubd84\uc5d0": 741, "\ubd80\ubd84\uc73c\ub85c": 741, "\ubd80\ubd84\uc740": [741, 750], "\ubd80\ubd84\uc744": [718, 721], "\ubd80\ubd84\uc758": [741, 750], "\ubd80\uc0b0": 721, "\ubd80\uc18d": [733, 741, 744, 753], "\ubd80\uc18d\ub418\ub294": 723, "\ubd80\uc218\uc801\uc73c\ub85c": 753, "\ubd80\uc5ec": 723, "\ubd80\uc5ec\ub41c\ub2e4": [723, 730], "\ubd80\uc5ec\ud558\uace0": 730, "\ubd80\uc5ec\ud558\uae30": 723, "\ubd80\uc5ec\ud558\ub294\ub370": 730, "\ubd80\uc5ec\ud55c\ub2e4": [723, 731], "\ubd80\ud130": [718, 721, 751, 753], "\ubd84\ub4e4\uc744": 739, "\ubd84\ub958": [721, 739, 744, 752, 755], "\ubd84\ub958\uac00": 754, "\ubd84\ub958\uae30": 755, "\ubd84\ub958\ub098": 754, "\ubd84\ub958\ub294": [718, 753, 754], "\ubd84\ub958\ub418\uc5b4": 756, "\ubd84\ub958\ub97c": [740, 752, 753], "\ubd84\ub958\uc5d0": 741, "\ubd84\ub958\uc5d0\uc11c": [741, 744], "\ubd84\ub958\uc640\ub294": 718, "\ubd84\ub958\uc744": [741, 744], "\ubd84\ub958\uc758": [718, 723, 741, 753], "\ubd84\ub958\uc774\ub2e4": 756, "\ubd84\ub958\ud558\uae30": 756, "\ubd84\ub958\ud558\ub294": [753, 755], "\ubd84\ub958\ud55c\ub2e4": 754, "\ubd84\ub958\ud560": 754, "\ubd84\ub9ac\ub418\uc5b4": 754, "\ubd84\uc0b0": 732, "\ubd84\uc0b0\ud558\uace0": 723, "\ubd84\uc0b0\ud558\ub294": 720, "\ubd84\uc0b0\ud559\uc2b5\uc774": 721, "\ubd84\uc11d\uc744": 718, "\ubd84\ud3ec": 744, "\ubd84\ud3ec\ub97c": 723, "\ubd84\ud3ec\uc5d0": 744, "\ubd84\ud3ec\uc5d0\uc11c": 755, "\ubd84\ud45c": 755, "\ubd84\ud560": [718, 721, 756], "\ubd84\ud560\uc744": 718, "\ubd84\ud560\ud558\uae30": 718, "\ubd84\ud560\ud558\uc5ec": 736, "\ubd88\uac00\ub2a5\ud558\ub2e4": [727, 728], "\ubd88\uac00\ub2a5\ud558\ub2e4\uba74": 734, "\ubd88\uade0\ud615\ud558\uac8c": 723, "\ubd88\ub9b0\ub2e4": 753, "\ubd88\ud544\uc694\ud55c": 736, "\ubd99\uc5ec\uc918\uc57c": 721, "\ube0c\ub79c\uce58\ub97c": 723, "\ube0c\ub85c\ub4dc\uce90\uc2a4\ud305\uc744": 734, "\ube14\ub85d": 750, "\ube14\ub85d\ub4e4\ub85c": 748, "\ube14\ub85d\uc774": 750, "\ube14\ub85d\uc77c": 751, "\ube44\uad50\ud558\ub294": 744, "\ube44\uad50\ud558\uba74": 750, "\ube44\uad50\ud558\uba74\uc11c": 755, "\ube44\uad50\ud574": 745, "\ube44\uad50\ud574\uc11c": 756, "\ube44\ub300\uce6d\uc801\uc778": 726, "\ube44\ub840\ud558\ub294": 744, "\ube44\ubc29\ud5a5\uc131": [726, 730], "\ube44\uc120\ud615\uc131": 756, "\ube44\uc2b7\ud558\uac8c": [721, 723, 746, 753], "\ube44\uc2b7\ud558\ub2e4": [718, 721, 741, 744, 745, 746, 755, 756], "\ube44\uc2b7\ud558\ub2e4\ub294": 745, "\ube44\uc2b7\ud558\uc9c0\ub9cc": 717, "\ube44\uc2b7\ud55c": [720, 721, 723, 747], "\ube44\ud2b8": 730, "\ube44\ud2b8\ub97c": 730, "\ube44\ud574\uc11c": 742, "\ube44\ud65c\uc131\ud654\ub418\uc5b4": 734, "\ube44\ud65c\uc131\ud654\ub418\uc5c8\uc744": 747, "\ube44\ud6a8\uc728\uc801\uc774\ub2e4": 754, "\ube44\ud6a8\uc728\uc801\uc778": 736, "\ube4c\ub4dc\uc778": [744, 746, 754, 756], "\ube4c\ub529": 748, "\ube4c\ud2b8\uc778": [718, 719, 733, 736, 745, 747, 756], "\ube4c\ud2b8\uc778\uc73c\ub85c": 741, "\ube60\ub974\uac8c": [718, 754], "\ube60\ub974\uace0": [730, 736], "\ube60\ub974\ub2e4": 747, "\ube60\ub974\uc9c0\ub294": 727, "\ube60\ub978": 730, "\ube68\uac04": 740, "\ube68\uac04\uc0c9": 740, "\ubfd0\ub9cc": 756, "\ubfd0\ub9cc\uc544\ub2c8\ub77c": 721, "\ubfd0\uc774\ub2e4": [744, 745, 746, 754], "\ubfd0\uc784\uc744": 731, "\uc0ac\ub77c\uc838\ub3c4": 721, "\uc0ac\ub78c\ub4e4": 726, "\uc0ac\ub78c\ub4e4\uacfc": 726, "\uc0ac\ub78c\ub4e4\uc758": 754, "\uc0ac\uc2e4\ub4e4": 728, "\uc0ac\uc2e4\uc744": 741, "\uc0ac\uc6a9": [721, 747, 753, 756], "\uc0ac\uc6a9\uacfc": 736, "\uc0ac\uc6a9\ub418\uace0": 749, "\uc0ac\uc6a9\ub418\uae30": [718, 727, 740], "\uc0ac\uc6a9\ub418\ub294": [714, 718, 721, 726, 731, 734, 735, 736, 738, 748, 749, 750, 754, 756], "\uc0ac\uc6a9\ub418\ub294\ub370": 747, "\uc0ac\uc6a9\ub418\uc5b4\uc57c": 724, "\uc0ac\uc6a9\ub41c": [721, 723, 734], "\uc0ac\uc6a9\ub41c\ub2e4": [721, 723, 724, 727, 730, 740, 743, 751, 754], "\uc0ac\uc6a9\ub41c\ub2e4\uba74": 726, "\uc0ac\uc6a9\ub41c\uba70": 747, "\uc0ac\uc6a9\ub420": [720, 721, 723, 724, 740, 741, 744, 753, 756], "\uc0ac\uc6a9\ub7c9\uc744": [736, 747], "\uc0ac\uc6a9\ubc95\uc740": [738, 740], "\uc0ac\uc6a9\ubc95\uc744": [717, 734], "\uc0ac\uc6a9\uc790": [728, 734], "\uc0ac\uc6a9\uc790\uac00": [721, 723, 731], "\uc0ac\uc6a9\uc790\ub294": [721, 722, 723, 724, 734], "\uc0ac\uc6a9\uc790\ub4e4\uacfc": 726, "\uc0ac\uc6a9\uc790\ub4e4\uc740": 723, "\uc0ac\uc6a9\uc790\uc758": 724, "\uc0ac\uc6a9\ud558\uaca0\ub2e4": 752, "\uc0ac\uc6a9\ud558\uace0": [723, 735, 741, 746], "\uc0ac\uc6a9\ud558\uae30": [723, 725, 730, 739, 744, 746], "\uc0ac\uc6a9\ud558\uae30\ub97c": 744, "\uc0ac\uc6a9\ud558\ub294": [718, 723, 730, 734, 736, 740, 742, 744, 747, 753, 754, 755, 756], "\uc0ac\uc6a9\ud558\ub294\ub370": [718, 739], "\uc0ac\uc6a9\ud558\ub294\uc9c0\ub294": 726, "\uc0ac\uc6a9\ud558\ub824\uba74": 741, "\uc0ac\uc6a9\ud558\uba70": 744, "\uc0ac\uc6a9\ud558\uba74": [727, 730, 736, 739], "\uc0ac\uc6a9\ud558\uba74\uc11c": 747, "\uc0ac\uc6a9\ud558\uc790": 754, "\uc0ac\uc6a9\ud558\uc9c0": [723, 747, 754], "\uc0ac\uc6a9\ud558\uc9c0\ub9cc": 743, "\uc0ac\uc6a9\ud55c": [718, 721, 723, 725, 730, 739, 742, 743, 748, 756], "\uc0ac\uc6a9\ud55c\ub2e4": [718, 722, 723, 724, 730, 741, 742, 744, 745, 752, 753, 754, 756], "\uc0ac\uc6a9\ud55c\ub2e4\ub294": [721, 741, 744], "\uc0ac\uc6a9\ud55c\ub2e4\uba74": 726, "\uc0ac\uc6a9\ud560": [718, 721, 723, 727, 730, 731, 741, 742, 744, 746, 752, 753], "\uc0ac\uc6a9\ud574": 754, "\uc0ac\uc6a9\ud574\ub3c4": 731, "\uc0ac\uc6a9\ud574\uc11c": [714, 718, 721, 722, 723, 724, 725, 726, 729, 730, 731, 733, 734, 736, 738, 740, 741, 743, 746, 747, 751, 752, 753, 754, 755, 756], "\uc0ac\uc6a9\ud574\uc57c": [721, 722, 723], "\uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4": [730, 741], "\uc0ac\uc6a9\ud588\ub2e4\uba74": 716, "\uc0ac\uc6a9\ud588\ub358": 744, "\uc0ac\uc774\uc5d0": [726, 741, 754, 755], "\uc0ac\uc774\uc758": [723, 740, 755], "\uc0ac\uc804": [737, 741, 744, 751], "\uc0ac\uc804\ub4e4\uc744": [741, 744], "\uc0ac\uc804\uc5d0\uc11c": 756, "\uc0ac\uc804\uc744": [731, 741, 744, 746, 751, 753, 756], "\uc0ac\uc804\uc758": 737, "\uc0ad\uc81c\ud558\uac8c\ud558\uae30": 721, "\uc0ad\uc81c\ud558\uae30\ub3c4": 741, "\uc0ad\uc81c\ud558\uae30\ub97c": 740, "\uc0b4\ud3b4\ubcf4\uaca0\ub2e4": 750, "\uc0b4\ud3b4\ubcf4\uae30": 740, "\uc0b4\ud3b4\ubcf4\uc790": [718, 734, 740, 746, 747], "\uc0c1\uad00\ud558\uc9c0": 723, "\uc0c1\ub2f9\ud55c": 742, "\uc0c1\ub2f9\ud788": 719, "\uc0c1\ub300": 724, "\uc0c1\ub300\uc801\uc73c\ub85c": [723, 754], "\uc0c1\uc138\ud55c": [741, 746], "\uc0c1\uc18d\ud55c": 740, "\uc0c1\uc18d\ud55c\ub2e4": 748, "\uc0c1\uc18d\ud574\uc11c": [715, 716], "\uc0c1\uc218": 755, "\uc0c1\uc704": 740, "\uc0c1\ud0dc\ub97c": 739, "\uc0c1\ud488": 726, "\uc0c1\ud638\uad00\uacc4\ub97c": 726, "\uc0c1\ud638\uc791\uc6a9\uc744": 720, "\uc0c1\ud669\uc5d0\uc11c": 754, "\uc0c8\ub85c\uc6b4": [721, 722, 723, 731, 739, 745], "\uc0d8\ub4e4\ub85c": 755, "\uc0d8\ub4e4\uc740": 755, "\uc0d8\ud50c": 744, "\uc0d8\ud50c\ub41c": [741, 744, 750], "\uc0d8\ud50c\ub7ec": [720, 721, 724, 739], "\uc0d8\ud50c\ub7ec\uac00": [742, 744], "\uc0d8\ud50c\ub7ec\ub294": [721, 746], "\uc0d8\ud50c\ub7ec\ub2e4": 744, "\uc0d8\ud50c\ub7ec\ub4e4\uacfc": 739, "\uc0d8\ud50c\ub7ec\ub4e4\uc5d0": 741, "\uc0d8\ud50c\ub7ec\ub4e4\uc740": [744, 746], "\uc0d8\ud50c\ub7ec\ub4e4\uc758": 746, "\uc0d8\ud50c\ub7ec\ub85c": 740, "\uc0d8\ud50c\ub7ec\ub97c": [740, 741, 744, 746], "\uc0d8\ud50c\ub7ec\uc640": 720, "\uc0d8\ud50c\ub9c1": [715, 744, 754], "\uc0d8\ud50c\ub9c1\uacfc": [721, 743], "\uc0d8\ud50c\ub9c1\ub41c": 755, "\uc0d8\ud50c\ub9c1\ub41c\ub2e4": 755, "\uc0d8\ud50c\ub9c1\ub420\uc9c0\ub97c": 721, "\uc0d8\ud50c\ub9c1\uc5d0": 739, "\uc0d8\ud50c\ub9c1\uc5d0\uc11c": [722, 746], "\uc0d8\ud50c\ub9c1\uc73c\ub85c": 743, "\uc0d8\ud50c\ub9c1\uc740": [721, 741, 742, 743], "\uc0d8\ud50c\ub9c1\uc744": [721, 739, 740, 742, 743, 755], "\uc0d8\ud50c\ub9c1\uc774": 743, "\uc0d8\ud50c\ub9c1\ud558\ub294": 744, "\uc0d8\ud50c\ub9c1\ud55c\ub2e4": [720, 722, 744], "\uc0d8\ud50c\ud558\ub294": 740, "\uc0dd\uac01\ud574": [740, 743], "\uc0dd\uac01\ud574\ubcf4\uc790": [739, 740], "\uc0dd\uae38": 747, "\uc0dd\ub7b5\ud55c\ub2e4": [718, 753], "\uc0dd\ub7b5\ud574\uc11c": 718, "\uc0dd\ub7b5\ud588\ub2e4": 718, "\uc0dd\uc120\ud55c": 723, "\uc0dd\uc131": [720, 727, 734, 748, 750], "\uc0dd\uc131\ub418\ub294": 750, "\uc0dd\uc131\ub41c": [721, 727, 741, 746], "\uc0dd\uc131\ub41c\ub2e4": [723, 751], "\uc0dd\uc131\uc2dc": 729, "\uc0dd\uc131\uc740": 721, "\uc0dd\uc131\uc744": [721, 744], "\uc0dd\uc131\uc774": 721, "\uc0dd\uc131\ud558\uace0": [721, 722, 728, 734, 740], "\uc0dd\uc131\ud558\uae30": [718, 720, 721, 725, 730], "\uc0dd\uc131\ud558\ub294": [721, 727, 730, 740, 746], "\uc0dd\uc131\ud558\ub294\uac83\uc744": 740, "\uc0dd\uc131\ud558\ub294\ub370": [721, 723, 740], "\uc0dd\uc131\ud558\uba70": 739, "\uc0dd\uc131\ud558\uba74": 755, "\uc0dd\uc131\ud558\uc9c0\ub9cc": 740, "\uc0dd\uc131\ud55c": [723, 744, 746, 752], "\uc0dd\uc131\ud55c\ub2e4": [721, 724, 728, 734, 740, 746], "\uc0dd\uc131\ud560": [721, 722, 731, 740, 753, 754], "\uc0e4\ub4dc": 721, "\uc11c\ub85c": [718, 723, 725, 726, 731, 741, 756], "\uc11c\ubc84": [720, 721], "\uc11c\ubc84\ub4e4\uac04\uc758": 721, "\uc11c\ubc84\ub4e4\uacfc": [720, 721], "\uc11c\ubc84\ub4e4\uc5d0\uc11c": 721, "\uc11c\ubc84\ub4e4\uc740": 720, "\uc11c\ubc84\ub4e4\uc744": [720, 721], "\uc11c\ubc84\ub4e4\uc774": 721, "\uc11c\ubc84\uc5d0": 722, "\uc11c\ube0c": [716, 718, 720, 722, 723, 740, 741, 742, 743, 750], "\uc11c\ube0c\uadf8\ub798\ud504": [750, 751], "\uc11c\ube0c\uadf8\ub798\ud504\ub97c": [731, 738], "\uc11c\ube0c\uadf8\ub798\ud504\uc5d0": 738, "\uc11c\ube0c\ubaa8\ub4c8": 749, "\uc11c\ube0c\ubaa8\ub4c8\ub4e4\uc744": 749, "\uc11c\ube0c\ubaa8\ub4c8\uc740": 749, "\uc11c\ube0c\uc14b\uc5d0": 723, "\uc11c\ube0c\uc14b\uc744": 721, "\uc11c\ube0c\ud074\ub798\uc2a4": 715, "\uc11c\ube0c\ud074\ub798\uc2a4\ub85c": 714, "\uc11c\ube0c\ud074\ub798\uc2a4\uc5d0\uc11c": 715, "\uc11c\uce58\ud558\ub294": 715, "\uc11e\uace0": 723, "\uc11e\uae30\uc804\uc758": 723, "\uc11e\ub294\ub2e4": 723, "\uc11e\uc5b4\uc57c\ud55c\ub2e4": 723, "\uc11e\uc5b4\uc900\ub2e4": 723, "\uc11e\uc778": 723, "\uc120\uc5b8\ub418\uc57c": 721, "\uc120\ud0dd": 743, "\uc120\ud0dd\uc744": 743, "\uc120\ud0dd\uc801\uc73c\ub85c": 724, "\uc120\ud0dd\uc801\uc778": 723, "\uc120\ud0dd\ud55c\ub2e4": [722, 739, 744, 747], "\uc120\ud0dd\ud560\uc9c0": 753, "\uc120\ud0dd\ud560\uc9c0\ub97c": 753, "\uc120\ud589": 740, "\uc120\ud615": 736, "\uc124\uba85\ub41c": 750, "\uc124\uba85\uc740": 753, "\uc124\uba85\uc744": [723, 741, 746], "\uc124\uba85\ud558\uace0": 714, "\uc124\uba85\ud558\uae30": 752, "\uc124\uba85\ud558\uae30\uc5d0\ub294": 753, "\uc124\uba85\ud55c": [744, 755], "\uc124\uba85\ud55c\ub2e4": [717, 718, 733, 740, 746, 756], "\uc124\uba85\ud588\ub4ef\uc774": 740, "\uc124\uc815": [720, 721, 724, 749], "\uc124\uc815\ub41c": 750, "\uc124\uc815\ub4e4\uc744": 723, "\uc124\uc815\uc5d0\uc11c\ub294": 734, "\uc124\uc815\uc73c\ub85c": [722, 723], "\uc124\uc815\uc73c\ub85c\ub294": [721, 734], "\uc124\uc815\uc740": 723, "\uc124\uc815\uc744": 723, "\uc124\uc815\ud558\uace0": 731, "\uc124\uc815\ud558\uae30": 742, "\uc124\uc815\ud558\ub294": 723, "\uc124\uc815\ud55c\ub2e4": 751, "\uc124\uc815\ud574\uc57c": 723, "\uc124\uce58\ub294": 723, "\uc124\uce58\ud558\ub294": 723, "\uc124\uce58\ud558\uc790": 723, "\uc124\uce58\ud55c\ub2e4": [717, 723], "\uc131\ub2a5": [739, 750], "\uc131\ub2a5\uc740": 747, "\uc131\ub2a5\uc774": 727, "\uc131\ub9bd\ud558\uae30": 736, "\uc131\uc9c8": 754, "\uc138": 723, "\uc138\uac00\uc9c0": [721, 750], "\uc138\uac1c\uc758": 746, "\uc138\ud305\uc5d0\uc11c": 721, "\uc139\uc158": 721, "\uc140\ud504": 723, "\uc148\ud50c\ub4e4": 755, "\uc14b": 723, "\uc14b\ub3c4": 721, "\uc14b\uc5d0": [721, 723, 746], "\uc14b\uc73c\ub85c": 721, "\uc14b\uc744": [720, 721], "\uc14b\uc758": 756, "\uc14b\uc774": 753, "\uc18c\uac1c\ub294": 727, "\uc18c\uac1c\ub97c": 725, "\uc18c\uac1c\ud55c": [739, 752, 754, 756], "\uc18c\uac1c\ud55c\ub2e4": [714, 715, 723, 725, 727, 733, 743, 748], "\uc18c\uc15c": 726, "\uc18c\uc2a4": [718, 723, 734, 735, 740, 744, 746, 749, 750], "\uc18c\uc2a4\ub4e4\ub85c": 718, "\uc18c\uc2a4\ub4e4\ub85c\ubd80\ud130": 727, "\uc18c\uc2a4\ub85c\ubd80\ud130": 730, "\uc18c\uc2a4\ub97c": [718, 725, 730], "\uc18d\ub3c4": [742, 743], "\uc18d\ub3c4\ub3c4": 730, "\uc18d\ub3c4\ub97c": 723, "\uc18d\ub4dc\ub97c": 736, "\uc18d\uc131": 723, "\uc18d\uc131\ub4e4\uc744": 723, "\uc18d\uc131\ub4e4\uc758": 723, "\uc18d\uc131\uc744": [723, 728, 737, 753], "\uc18d\uc131\uc758": 723, "\uc18d\ud558\ub294": 723, "\uc18d\ud558\ub294\uc9c0\ub97c": 721, "\uc18d\ud55c": [723, 734, 740], "\uc18d\ud55c\ub2e4": 722, "\uc194\ub8e8\uc158\uc740": 723, "\uc194\ub8e8\uc158\uc744": 723, "\uc218": [715, 716, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756], "\uc218\uac00": [736, 756], "\uc218\ub3c4": [722, 744, 750, 753], "\uc218\ub834\ud55c\ub2e4": 747, "\uc218\ub97c": [723, 740], "\uc218\ubc31\ub9cc": 739, "\uc218\ubcf4\ub2e4": 736, "\uc218\uc2dd\uc5d0\uc11c": 733, "\uc218\uc2ed\uc5b5": 723, "\uc218\uc2ed\uc5b5\uac1c\uc758": 739, "\uc218\uc5d0": 723, "\uc218\uc640": 721, "\uc218\uc758": [721, 722, 724, 740, 754], "\uc218\uc815\ud558\uba74": 720, "\uc218\uc815\ud560": 746, "\uc218\uc900\uc758": [721, 727, 751, 754], "\uc218\uc9d1\ud558\uace0": 721, "\uc218\uc9d1\ud558\uae30\ub97c": 756, "\uc218\uc9d1\ud558\ub294": 740, "\uc218\uc9d1\ud558\ub3c4\ub85d": 746, "\uc218\uc9d1\ud560": 740, "\uc218\ud559": [734, 750], "\uc218\ud559\uc801\uc73c\ub85c": 736, "\uc218\ud589": 724, "\uc218\ud589\ub418\uace0": 721, "\uc218\ud589\ub418\ub294": 756, "\uc218\ud589\ub418\ub294\uc9c0": 739, "\uc218\ud589\ub418\uba74": 721, "\uc218\ud589\ub41c": [724, 725, 740], "\uc218\ud589\ub41c\ub2e4": [715, 721, 723, 729, 747, 750, 754], "\uc218\ud589\ub420": [721, 734], "\uc218\ud589\uc774": 723, "\uc218\ud589\uc774\ub2e4": 721, "\uc218\ud589\ud558\uace0": [721, 756], "\uc218\ud589\ud558\uae30": [740, 747, 755], "\uc218\ud589\ud558\ub294": [720, 721, 724, 739, 743, 750, 756], "\uc218\ud589\ud558\uba74\uc11c": [720, 723], "\uc218\ud589\ud558\uc790": 753, "\uc218\ud589\ud558\uc9c0": 716, "\uc218\ud589\ud558\uc9c0\ub9cc": 754, "\uc218\ud589\ud55c\ub2e4": [723, 733, 743, 746, 747, 749, 750, 756], "\uc218\ud589\ud55c\ub2e4\uace0": 755, "\uc218\ud589\ud55c\ub2e4\ub294": 740, "\uc218\ud589\ud560": [720, 721, 723, 740, 743, 751, 754, 755], "\uc218\ud589\ud560\uc9c0\ub97c": 740, "\uc218\ud589\ud574\uc11c": [716, 754, 756], "\uc21c\uc11c\ub300\ub85c": 754, "\uc21c\uc11c\ub3c4": 715, "\uc21c\uc11c\ub3c4\ub294": 715, "\uc21c\uc11c\ub85c": 721, "\uc21c\uc11c\uc5d0": 730, "\uc21c\uc218": 734, "\uc21c\uc218\ud55c": 749, "\uc22b\uc790": 728, "\uc27d\uac8c": [715, 723], "\uc27d\ub2e4": 755, "\uc27d\uc9c0": 743, "\uc2a4\uce7c\ub77c": [726, 728, 735], "\uc2a4\ud06c\ub9bd\ud2b8": [721, 723, 724], "\uc2a4\ud06c\ub9bd\ud2b8\uac00": [721, 724], "\uc2a4\ud06c\ub9bd\ud2b8\ub294": 724, "\uc2a4\ud06c\ub9bd\ud2b8\ub4e4\uc744": 724, "\uc2a4\ud06c\ub9bd\ud2b8\ub97c": [720, 721, 723], "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0": 721, "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c": 724, "\uc2a4\ud06c\ub9bd\ud2b8\uc774\ub2e4": 747, "\uc2a4\ud0a4\ub9c8": 723, "\uc2a4\ud0a4\ub9c8\ub97c": 723, "\uc2a4\ud0a4\ub9c8\uc774\ub2e4": 731, "\uc2a4\ud0ed\uc5d0\uc11c": 734, "\uc2a4\ud1a0\ub9ac\uc9c0": 724, "\uc2ac\ub77c\uc774\uc2a4\ub294": 728, "\uc2dc\uac01\ud654\ud558\uba74": 739, "\uc2dc\uac04": 747, "\uc2dc\uac04\uc744": [715, 719, 743], "\uc2dc\ub098\ub9ac\uc624\ub4e4\ub85c": 739, "\uc2dc\ub4dc": [722, 740], "\uc2dc\ub9ac\uc988\ub85c": 731, "\uc2dc\uc2a4\ud15c\uc5d0\uc11c": 726, "\uc2dc\uc791": 724, "\uc2dc\uc791\uc73c\ub85c": 725, "\uc2dc\uc791\ud558\uace0": 731, "\uc2dc\uc791\ud558\uae30": 724, "\uc2dc\uc791\ud558\ub294": [723, 731, 740], "\uc2dc\uc791\ud55c\ub2e4": [730, 739], "\uc2dc\uc791\ud560": 754, "\uc2dc\uc791\ud574\uc11c": 743, "\uc2dd\ubcc4\ub420": 721, "\uc2e4\uc81c": [723, 750], "\uc2e4\uc81c\ub85c": 750, "\uc2e4\ud589": 722, "\uc2e4\ud589\ub418\ub294": [723, 724, 734], "\uc2e4\ud589\ub418\uba74": 721, "\uc2e4\ud589\ub418\uc57c": 724, "\uc2e4\ud589\ub41c": 723, "\uc2e4\ud589\ub41c\ub2e4": [720, 721, 723, 756], "\uc2e4\ud589\ub420": [721, 723, 724], "\uc2e4\ud589\ud558\uace0": [716, 721, 750], "\uc2e4\ud589\ud558\ub294": [720, 721, 736], "\uc2e4\ud589\ud558\uba74": 721, "\uc2e4\ud589\ud55c\ub2e4": 720, "\uc2e4\ud589\ud560": 721, "\uc2e4\ud589\ud574\uc11c": [720, 723], "\uc2e4\ud589\ud574\uc57c\ud558\uace0": 721, "\uc2e4\ud5d8\uc801\uc73c\ub85c": 722, "\uc2e4\ud5d8\uc801\uc778": 742, "\uc2f1\uae00": 721, "\uc2f6\ub2e4": [723, 731], "\uc2f6\ub2e4\uba74": [716, 723, 745, 746, 756], "\uc2f6\uc73c\uba74": 734, "\uc2f6\uc740": [721, 731, 738, 739, 755], "\uc30d\ub4e4": 726, "\uc30d\ub4e4\ub85c\ub9cc": 755, "\uc30d\uc5d0": 755, "\uc30d\uc73c\ub85c": 730, "\uc30d\uc744": [726, 744], "\uc30d\uc758": 744, "\uc30d\uc774\ub2e4": 754, "\uc30d\uc778": 745, "\uc313\uc544\uc11c": 756, "\uc4f0\uae30\ub97c": 721, "\uc4f0\uc774\ub294": [753, 754], "\uc544\ub2c8\uae30": 750, "\uc544\ub2c8\ub2e4": [721, 747], "\uc544\ub2c8\ub77c": [727, 754, 756], "\uc544\ub2cc": [745, 754], "\uc544\ub2cc\uc9c0\ub97c": 755, "\uc544\ub2d8\uc744": 745, "\uc544\ub798": [715, 720, 721, 722, 723, 724, 727, 728, 730, 731, 734, 740, 741, 743, 744, 745, 753, 755, 756], "\uc544\ub798\uc640": [730, 741, 746, 753, 754], "\uc544\ub798\uc758": [716, 731], "\uc544\ub9c8\ub3c4": 754, "\uc544\ubb34\uac83\ub3c4": 750, "\uc544\uc6c3\ud48b\ub4e4\uc744": 751, "\uc544\uc6c3\ud48b\uc740": 723, "\uc544\uc774\ub514\uc5b4\ub294": 755, "\uc544\uc774\ub514\uc5b4\ub97c": 754, "\uc544\uc774\ud15c\ub4e4\uc744": 744, "\uc544\uc774\ud15c\ub4e4\uc758": 726, "\uc544\uc774\ud15c\uc640": 744, "\uc544\uc774\ud15c\uc740": 754, "\uc544\uc774\ud15c\uc744": 746, "\uc544\uc8fc": [720, 727, 741, 743, 744], "\uc544\uc9c1": 747, "\uc544\ud06c\ub4e4": 726, "\uc544\ud0a4\ud14d\ud0c0": 734, "\uc548\uc5d0\ub294": 723, "\uc548\uc5d0\uc11c": 751, "\uc54a\uaca0\ub2e4": 727, "\uc54a\uace0": [716, 723, 731, 734, 747, 754], "\uc54a\uae30": [740, 742], "\uc54a\ub294": [723, 734, 744, 747], "\uc54a\ub294\ub2e4": [721, 723, 726, 742, 753, 754], "\uc54a\ub294\ub2e4\uba74": [731, 742], "\uc54a\ub294\uc9c0": 750, "\uc54a\ub2e4": [721, 727, 743, 753, 754, 755], "\uc54a\ub2e4\uba74": 752, "\uc54a\uc558\ub358": 741, "\uc54a\uc73c\uba74": 741, "\uc54a\uc740": [716, 718, 719, 723, 724, 740, 750], "\uc54a\uc744": 723, "\uc54a\uc9c0\ub9cc": 727, "\uc54c": 745, "\uc54c\uace0": [734, 755], "\uc54c\uace0\ub9ac\uc998\uacfc\ub294": 743, "\uc54c\uace0\ub9ac\uc998\ub4e4": 739, "\uc54c\uace0\ub9ac\uc998\uc740": 743, "\uc54c\uace0\ub9ac\uc998\uc744": [721, 754], "\uc54c\ub824\uc8fc\uace0": 746, "\uc54c\ub824\uc900\ub2e4": [723, 731], "\uc54c\ub824\uc9c4": 727, "\uc54c\uc218": 740, "\uc54c\uc544\ub0bc": 740, "\uc54c\uc544\ub450\uc790": [718, 731, 746, 756], "\uc54c\uc544\ubcf8\ub2e4": [718, 739, 752], "\uc54c\uc544\ubd24\ub2e4": 753, "\uc54c\ud30c\ubcb3": 723, "\uc55e": 753, "\uc55e\uc5d0": 750, "\uc55e\uc5d0\uc11c": [721, 746, 755], "\uc55e\uc73c\ub85c": 722, "\uc55e\uc73c\ub85c\uc758": 747, "\uc560\ub2c8\ub9e4\uc774\uc158\uc740": 743, "\uc564\ud2f0\ud2f0\ub4e4": 725, "\uc57d": 742, "\uc57d\uac04": [741, 754, 755], "\uc591\ubc29\ud5a5\uc5d0": 730, "\uc591\ubc29\ud5a5\uc758": 730, "\uc591\ubc29\ud5a5\uc774\uae30": 726, "\uc5b4\ub290\uc815\ub3c4": 741, "\uc5b4\ub514\uc11c\ub098": 716, "\uc5b4\ub5a4": [721, 723, 737, 740, 741, 746, 749, 755], "\uc5b4\ub5bb\uac8c": [714, 715, 721, 722, 723, 726, 733, 739, 740, 743, 745, 746, 749, 756], "\uc5b4\ub824\uc6b8": 739, "\uc5b8\uae09\ud55c": 734, "\uc5b8\uae09\ud588\ub4ef\uc774": 721, "\uc5b8\ub354\ud50c\ub85c\uc6b0": 747, "\uc5b8\uc5b4\uc5d0\uc11c": 730, "\uc5bb\uae30": [720, 723, 753], "\uc5bb\ub294": [722, 741], "\uc5bb\ub294\ub2e4": [741, 745, 746, 754], "\uc5bb\uc5b4\uc9c4": 751, "\uc5bb\uc740": [741, 751], "\uc5bb\uc744": [731, 740, 746, 752, 755], "\uc5bc\ub9c8\ub098": 740, "\uc5c5\ub370\uc774\ud2b8": [733, 734], "\uc5c5\ub370\uc774\ud2b8\ub97c": [721, 734, 738, 742, 747], "\uc5c5\ub370\uc774\ud2b8\ud558\uace0": 734, "\uc5c5\ub370\uc774\ud2b8\ud558\ub294": [740, 745, 747, 750, 754], "\uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4": [733, 734, 754], "\uc5c6\uac70\ub098": 726, "\uc5c6\uac8c": 750, "\uc5c6\uace0": 722, "\uc5c6\uae30": 736, "\uc5c6\ub294": [723, 727, 739, 743], "\uc5c6\ub294\uc9c0\ub97c": 746, "\uc5c6\ub2e4": [721, 722, 731, 740, 750, 754], "\uc5c6\ub2e4\ub294": [721, 743], "\uc5c6\uc560\uace0": 721, "\uc5c6\uc5b4\uc57c": 723, "\uc5c6\uc744": 726, "\uc5c6\uc774": 724, "\uc5d0": [718, 720, 721, 722, 723, 724, 731, 734, 737, 740, 741, 746, 747, 750, 751, 753, 754, 755, 756], "\uc5d0\ub294": [741, 746], "\uc5d0\ub7ec\ub97c": 740, "\uc5d0\uc11c": [714, 715, 716, 719, 721, 722, 723, 724, 726, 730, 735, 739, 740, 743, 744, 746, 750, 752, 754, 756], "\uc5d0\uc11c\ub294": [726, 753], "\uc5d0\uc11c\uc758": 745, "\uc5d0\uc9c0": [720, 722, 725, 726, 728, 733, 734, 736, 737, 739, 740, 744, 745, 752, 754, 755, 756], "\uc5d0\uc9c0\uac00": [723, 726, 730, 731, 741, 753, 754, 755], "\uc5d0\uc9c0\ub098": 723, "\uc5d0\uc9c0\ub294": [722, 726, 730, 731], "\uc5d0\uc9c0\ub3c4": 740, "\uc5d0\uc9c0\ub4e4\uacfc": 741, "\uc5d0\uc9c0\ub4e4\ub3c4": [726, 741], "\uc5d0\uc9c0\ub4e4\ub9cc\uc744": 740, "\uc5d0\uc9c0\ub4e4\uc5d0": [723, 741, 754], "\uc5d0\uc9c0\ub4e4\uc740": [728, 730, 741], "\uc5d0\uc9c0\ub4e4\uc744": [721, 725, 726, 730, 739, 741, 742, 744], "\uc5d0\uc9c0\ub4e4\uc758": [723, 726, 728, 731, 736, 740, 741, 744, 753, 755], "\uc5d0\uc9c0\ub4e4\uc774": [718, 723, 726, 737, 741, 755], "\uc5d0\uc9c0\ub85c": [726, 727, 755], "\uc5d0\uc9c0\ub85c\uc758": 736, "\uc5d0\uc9c0\ub97c": [720, 721, 722, 723, 727, 730, 731, 737, 740, 741, 744, 747], "\uc5d0\uc9c0\ubcc4": [733, 734], "\uc5d0\uc9c0\uc5d0": [723, 728, 730, 731, 733, 736, 753], "\uc5d0\uc9c0\uc5d0\ub294": 730, "\uc5d0\uc9c0\uc640": [721, 723, 731], "\uc5d0\uc9c0\uc640\ub294": 741, "\uc5d0\uc9c0\uc744": 740, "\uc5d0\uc9c0\uc758": [720, 721, 723, 725, 726, 731, 733, 734, 735, 737, 740, 741, 742, 744, 749, 753, 754, 755, 756], "\uc5d0\uc9c0\uc774\ub2e4": 730, "\uc5d0\uce58": [721, 727, 754], "\uc5d4\ud130\ub9ac": 755, "\uc5d4\ud2b8\ub9ac\ub97c": 723, "\uc5ec\uae30\uc11c": [722, 723, 740, 746, 749, 751, 753, 754, 755, 756], "\uc5ec\uae30\uc11c\ub294": [723, 752], "\uc5ec\uae30\uc11c\ubd80\ud130\ub294": 723, "\uc5ec\ub7ec": [718, 720, 721, 722, 723, 726, 727, 730, 731, 737, 739, 740, 745, 749, 750, 751, 754, 755, 756], "\uc5ec\ub7ec\uac00\uc9c0\uac00": 755, "\uc5ec\ub7ec\uac1c\uac00": 751, "\uc5ec\ub7ec\ubc88": 721, "\uc5ec\ub7ec\ubd84": 746, "\uc5ec\ub7ec\ubd84\ub9cc\uc758": [741, 746], "\uc5ec\ub7ec\ubd84\uc740": 756, "\uc5ec\ub7ec\ubd84\uc758": [734, 748], "\uc5ec\ubd80\ub97c": 723, "\uc5ec\uc804\ud788": [740, 743, 746], "\uc5ec\uc9c0\uac00": 734, "\uc5ed": 741, "\uc5ed\ubc29\ud5a5": 741, "\uc5ed\ubc29\ud5a5\uc758": 741, "\uc5ed\uc2dc": [717, 729, 746], "\uc5ed\ud560\uc744": [723, 733, 740], "\uc5f0\uacb0": [726, 750, 755], "\uc5f0\uacb0\ub418\ub294": 740, "\uc5f0\uacb0\ub418\uc5b4": [721, 723, 726], "\uc5f0\uacb0\ub418\uc9c0": 740, "\uc5f0\uacb0\ub41c": [730, 751, 755], "\uc5f0\uacb0\ub41c\ub2e4": 726, "\uc5f0\uacb0\ub85c": 726, "\uc5f0\uacb0\uc744": 721, "\uc5f0\uacb0\ud558\uace0": [736, 741, 753], "\uc5f0\uacb0\ud558\ub294": [726, 753, 754], "\uc5f0\uacb0\ud55c\ub2e4": [721, 726], "\uc5f0\uacb0\ud574\uc11c": 754, "\uc5f0\uad00\ub41c": [722, 731, 741, 751], "\uc5f0\uc0b0": [718, 721, 725, 729, 736, 739, 747, 754], "\uc5f0\uc0b0\uacfc": [720, 737], "\uc5f0\uc0b0\ub4e4\uc740": [747, 750, 754], "\uc5f0\uc0b0\ub4e4\uc744": 754, "\uc5f0\uc0b0\ub9cc": 734, "\uc5f0\uc0b0\uc18d\ub3c4\uac00": 736, "\uc5f0\uc0b0\uc5d0": 748, "\uc5f0\uc0b0\uc73c\ub85c": 734, "\uc5f0\uc0b0\uc740": [729, 748, 750], "\uc5f0\uc0b0\uc744": [720, 731, 733, 734, 736, 745, 750, 754], "\uc5f0\uc0b0\uc758": 736, "\uc5f0\uc0b0\uc774": [743, 750], "\uc5f0\uc18d\ub41c": [722, 723], "\uc5fc\ub450\ud574\ub450\uace0": 720, "\uc5fc\ub450\ud574\uc11c": 754, "\uc601\ubb38": 732, "\uc601\uc18d\uc801\uc778": 721, "\uc601\uc5ed\uc5d0\uc11c\ub294": 743, "\uc608": [721, 724, 727, 728, 730, 731, 747, 753], "\uc608\ub294": [718, 719, 724, 755], "\uc608\ub4e4": 726, "\uc608\ub4e4\ub85c": 743, "\uc608\ub4e4\uc744": 718, "\uc608\ub85c": [715, 718, 740, 745, 746], "\uc608\ub97c": [719, 721, 722, 723, 724, 725, 726, 728, 731, 734, 735, 740, 741, 742, 744, 745, 746, 753, 754, 755, 756], "\uc608\ub97c\ub4e4\uba74": 731, "\uc608\uc758": 728, "\uc608\uc774\ub2e4": [716, 723, 744], "\uc608\uc804\uacfc": 740, "\uc608\uc815\uc774\ub2e4": 721, "\uc608\uc81c": [744, 746, 753, 756], "\uc608\uc81c\uac00": 756, "\uc608\uc81c\ub294": [721, 722, 723, 735, 737, 741, 744, 746, 747, 754, 755], "\uc608\uc81c\ub4e4\uc740": 752, "\uc608\uc81c\ub4e4\uc744": [718, 719, 756], "\uc608\uc81c\ub4e4\uc774": 751, "\uc608\uc81c\ub85c": [718, 744, 748, 753], "\uc608\uc81c\ub97c": [730, 736, 752, 756], "\uc608\uc81c\uc5d0": 753, "\uc608\uc81c\uc5d0\uc11c": 753, "\uc608\uc81c\uc5d0\uc11c\uc640": 718, "\uc608\uc81c\uc640": 746, "\uc608\uc81c\uc758": [718, 728, 740], "\uc608\uc81c\uc774\ub2e4": [720, 723, 727, 731, 736, 741, 754, 755], "\uc608\uc81c\uc778": [744, 746], "\uc608\uc81c\ucc98\ub7fc": 716, "\uc608\uce21": [721, 739, 741, 746, 752, 753, 754, 756], "\uc608\uce21\uac12\uc744": 753, "\uc608\uce21\uacfc": 755, "\uc608\uce21\ub97c": 744, "\uc608\uce21\uc740": [744, 753, 755], "\uc608\uce21\uc744": [744, 753, 754, 755, 756], "\uc608\uce21\uc758": [744, 753], "\uc608\uce21\ud558\uace0": [753, 755, 756], "\uc608\uce21\ud558\uae30": [741, 744], "\uc608\uce21\ud558\uae30\ub9cc": 744, "\uc608\uce21\ud558\ub294": [741, 753, 755], "\uc608\uce21\ud558\uba74": 753, "\uc608\uce21\ud560": 753, "\uc624\ub958": 732, "\uc624\ub978\ucabd": 736, "\uc624\ub978\ucabd\uc73c\ub85c": 754, "\uc624\uc9c1": [717, 731], "\uc624\ud37c\ub808\uc774\ud130\ub294": 721, "\uc624\ud504\ub77c\uc778": 739, "\uc62c\ub824\uc11c": 742, "\uc62c\ub824\uc57c\ud560": 739, "\uc62e\uaca8\ub193\ub294\ub2e4": 741, "\uc62e\uae30\ub294": [716, 746], "\uc635\uc158": 749, "\uc635\uc158\ub4e4": 727, "\uc635\uc158\ub4e4\uc744": 727, "\uc635\uc158\uc5d0": 750, "\uc635\uc158\uc73c\ub85c": 749, "\uc640": [715, 718, 719, 720, 721, 722, 723, 725, 726, 728, 731, 734, 736, 740, 741, 742, 744, 746, 747, 748, 750, 751, 753, 754, 755, 756], "\uc644\ub8cc\ub418\uba74": [723, 734], "\uc644\ub8cc\ub41c\ub2e4": 721, "\uc644\ubcbd\ud55c": 718, "\uc644\uc804\ud558\uac8c": 742, "\uc644\uc804\ud55c": 720, "\uc644\uc804\ud788": [741, 754], "\uc678\ubd80": [718, 725, 730, 746], "\uc678\uc5d0": 723, "\uc67c\ucabd": 736, "\uc67c\ucabd\ubd80\ud130": 754, "\uc694\uad6c\ub418\uae30": 734, "\uc694\uad6c\ub7c9\uc740": 742, "\uc694\uc18c\ub294": 750, "\uc694\uc57d\ud55c\ub2e4": 754, "\uc6a9\ub3c4\ub97c": 753, "\uc6a9\ub7c9\uc744": 739, "\uc6b0\ub9ac\ub294": [721, 723, 743, 753, 756], "\uc6b0\uc120": [717, 721, 722, 731, 740, 753], "\uc6cc\ud06c\ub85c\ub4dc": 739, "\uc6cc\ud06c\ub85c\ub4dc\ub97c": 723, "\uc6d0\uaca9": 715, "\uc6d0\ub798": 734, "\uc6d0\ub798\uc758": [731, 750, 753, 754], "\uc6d0\ubcf8": [723, 740, 744, 745], "\uc6d0\ubcf8\uc758": 740, "\uc6d0\uc18c\ub4e4\uc740": 721, "\uc6d0\uc18c\ub97c": 746, "\uc6d0\uce59\uc740": 745, "\uc6d0\ud558\ub294": [738, 746, 753], "\uc6d0\ud55c\ub2e4\uba74": [740, 744], "\uc6d0\ud560": 756, "\uc6d0\ud568": 726, "\uc6d0\ud65c\ud558\uac8c": 748, "\uc704": [716, 718, 723, 728, 731, 733, 734, 736, 740, 742, 746, 753, 754, 756], "\uc704\ub97c": 755, "\uc704\uc5d0\uc11c": [734, 755, 756], "\uc704\uc758": [718, 740, 754], "\uc704\uc8fc": 728, "\uc704\uce58\uc774\ub2e4": 724, "\uc704\uce58\ud55c": 729, "\uc704\uce58\ud55c\ub2e4": 740, "\uc704\ud55c": [715, 717, 719, 720, 721, 722, 726, 727, 730, 731, 734, 739, 741, 743, 744, 746, 751, 752, 753, 755, 756], "\uc704\ud568\uc774\ub2e4": 718, "\uc704\ud568\uc774\uc9c0": 745, "\uc704\ud574": [714, 718, 719, 721, 722, 741], "\uc704\ud574\uc11c": [715, 716, 718, 720, 721, 722, 723, 724, 726, 728, 730, 731, 734, 737, 740, 743, 744, 746, 747, 749, 751, 752, 753, 754, 755, 756], "\uc704\ud574\uc11c\ub294": [723, 730, 734, 740, 744, 745, 746], "\uc704\ud574\uc11c\uc774\ub2e4": [741, 750], "\uc704\ud578": 721, "\uc720\ub3c4\ub41c": 741, "\uc720\ub3c4\ud558\ub294": 740, "\uc720\uba85\ud558\uace0": 756, "\uc720\uba85\ud55c": [721, 731], "\uc720\uc0ac\ud558\ub2e4": [746, 753], "\uc720\uc6a9\ud558\ub2e4": [721, 731], "\uc720\uc6a9\ud55c": [718, 719], "\uc720\uc758\ud558\uc790": [717, 727, 740, 746], "\uc720\uc77c\ud55c": [720, 721, 741, 744, 754], "\uc720\uc9c0\ud558\uae30": 754, "\uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744": 727, "\uc720\ud6a8\ud558\uc9c0": 750, "\uc73c\ub85c": [722, 732, 734, 751], "\uc740": [717, 718, 721, 722, 723, 724, 725, 733, 741, 744, 745, 746, 749, 755], "\uc740\ub2c9": 749, "\uc744": [715, 718, 720, 721, 722, 723, 724, 726, 727, 732, 734, 737, 740, 745, 746, 751, 753, 755, 756], "\uc758": [714, 715, 718, 719, 721, 722, 723, 724, 725, 726, 728, 733, 734, 740, 741, 742, 744, 746, 750, 751, 753, 754, 755, 756], "\uc758\ubbf8\ud558\ub294\ub370": 749, "\uc758\ubbf8\ud55c\ub2e4": [723, 734, 740, 746, 751], "\uc758\ubbf8\ud560": 726, "\uc758\uc874\uc131": 739, "\uc758\uc874\ud558\uae30": 743, "\uc758\ud574": 723, "\uc758\ud574\uc11c": 741, "\uc774": [714, 715, 717, 718, 720, 721, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756], "\uc774\uac83\ub4e4\uc740": [714, 746, 750, 751], "\uc774\uac83\ub4e4\uc744": [721, 731, 746], "\uc774\uac83\uc740": [731, 734, 741, 743], "\uc774\uac83\uc744": 731, "\uc774\uace0": [718, 754], "\uc774\ub098": [722, 747, 753, 755], "\uc774\ub294": [714, 715, 719, 720, 721, 722, 723, 727, 729, 730, 734, 738, 740, 741, 742, 750, 751, 753, 756], "\uc774\ub2e4": [718, 721, 731, 734, 737], "\uc774\ub4e4": [726, 740], "\uc774\ub4e4\uc740": 726, "\uc774\ub4e4\uc744": 723, "\uc774\ub54c": 718, "\uc774\ub77c\uace0": [715, 750, 754], "\uc774\ub77c\ub294": 753, "\uc774\ub77c\uba74": [716, 756], "\uc774\ub7f0": [717, 727, 740, 748, 750, 754], "\uc774\ub904\uc9c4\ub2e4": [718, 731, 755], "\uc774\ub97c": [714, 715, 716, 718, 719, 721, 722, 723, 727, 730, 731, 734, 735, 736, 739, 740, 741, 744, 745, 746, 747, 753, 754, 755], "\uc774\ub984": [728, 734], "\uc774\ub984\uacfc": 721, "\uc774\ub984\ub4e4\uc744": 723, "\uc774\ub984\uc740": [721, 723], "\uc774\ub984\uc744": [721, 723, 728, 734], "\uc774\ub984\uc758": [723, 728, 753], "\uc774\ub984\uc774": 721, "\uc774\ub984\uc774\uace0": 734, "\uc774\ub984\uc774\ub2e4": [723, 734], "\uc774\ubbf8": [716, 729, 752, 756], "\uc774\ubd84": [726, 731, 741, 750, 751], "\uc774\uc0c1": 734, "\uc774\uc288\uac00": 747, "\uc774\uc5b4\uc9c4": 730, "\uc774\uc640": [718, 734], "\uc774\uc678\uc758": [742, 749], "\uc774\uc6a9\ud55c": [753, 756], "\uc774\uc6a9\ud560": [727, 741], "\uc774\uc6a9\ud574\uc11c": [728, 731, 750, 754], "\uc774\uc6c3": [721, 743, 756], "\uc774\uc6c3\ub4e4\ub85c\ubd80\ud130": [746, 756], "\uc774\uc6c3\ub4e4\uc5d0": [743, 756], "\uc774\uc720\ub294": [715, 721, 723, 727, 730, 734, 736, 740, 755], "\uc774\uc804": [740, 741, 753, 754], "\uc774\uc804\uc5d0": 753, "\uc774\uc81c": [735, 744, 746], "\uc774\uc81c\uc758": 728, "\uc774\uc885": [725, 726, 733, 750, 756], "\uc774\uc9c4": [753, 756], "\uc774\ud130\ub808\uc774\uc158\uc5d0": 754, "\uc774\ud558\uc778": 730, "\uc774\ud56d": 734, "\uc774\ud574\ud558\uace0": 739, "\uc775\uc219\ud558\ub2e4\uba74": 745, "\uc778": [723, 739, 751, 754], "\uc778\ub371\uc2a4\ub97c": [721, 750], "\uc778\ubc14\uc6b4\ub4dc": 740, "\uc778\uc2a4\ud134\uc2a4\ub97c": 726, "\uc778\uc2a4\ud134\uc2a4\uc5d0": 756, "\uc778\uc790": 734, "\uc778\uc790\ub294": 740, "\uc778\uc790\ub4e4\uc740": 742, "\uc778\uc790\ub4e4\uc744": 723, "\uc778\uc790\ub4e4\uc774": 729, "\uc778\uc790\ub85c": [723, 730, 734, 737, 741, 744, 746, 751], "\uc778\uc790\ub97c": [724, 742], "\uc778\uc790\uc774\ub2e4": 723, "\uc778\uc9c0": 741, "\uc778\ucea1\uc290\ub808\uc774\uc158\uc774\ub2e4": 751, "\uc778\ucf54\ub529\ud55c": 726, "\uc778\ud130\uc5d1\uc158\uc744": 720, "\uc778\ud130\ud328\uc774\uc2a4\ub97c": 721, "\uc778\ud130\ud398\uc774\uc2a4\ub294": 737, "\uc778\ud130\ud398\uc774\uc2a4\ub97c": [721, 725, 728, 731], "\uc778\ud130\ud398\uc774\uc2a4\uc758": 728, "\uc778\ud2f0\ud2f0\ub4e4\uacfc": 726, "\uc77c": [726, 736], "\uc77c\ub3c4": 753, "\uc77c\ub4e4\uc5d0": 718, "\uc77c\ubc18": [721, 740], "\uc77c\ubc18\uc801": 754, "\uc77c\ubc18\uc801\uc73c\ub85c": [714, 718, 721, 730, 734, 736, 739, 745, 748, 750], "\uc77c\ubc18\uc801\uc778": [727, 731, 749, 750, 753, 754], "\uc77c\ubc88\uc801\uc73c\ub85c": 718, "\uc77c\ubd80": [735, 746], "\uc77c\ubd80\ub294": 718, "\uc77c\ubd80\ub97c": 739, "\uc77c\ubd80\ub9cc": 738, "\uc77c\ubd80\uc5d0": 733, "\uc77c\ubd80\uc5d0\ub9cc": 728, "\uc77c\ubd80\uc774\uae30": 721, "\uc77c\uc5b4\ub098\ub294\uc9c0\ub97c": 743, "\uc77c\uc5b4\ub09c\ub2e4": [718, 721], "\uc77c\uc744": [716, 746, 756], "\uc77c\uc774": 718, "\uc77c\uc774\ud0ac": 750, "\uc77d\uae30": 731, "\uc77d\uae30\uc640": 721, "\uc77d\ub294": 727, "\uc77d\uc744": 740, "\uc784\ubc30\ub529\uc740": 721, "\uc784\ubca0\ub529": 722, "\uc784\ubca0\ub529\uacfc": 721, "\uc784\ubca0\ub529\ub4e4\uc5d0": 721, "\uc784\ubca0\ub529\ub4e4\uc740": 722, "\uc784\ubca0\ub529\ub4e4\uc744": [721, 723], "\uc784\ubca0\ub529\uc744": [720, 721, 722, 723, 755, 756], "\uc784\ubca0\ub529\uc774": 721, "\uc784\uc2dc\ub85c": 719, "\uc784\uc758\ub85c": [740, 752], "\uc784\uc758\uc131\uc744": 743, "\uc784\uc758\uc758": [723, 740, 753, 755], "\uc785\ub825": [715, 721, 741, 744, 745, 746, 749, 750, 751, 754], "\uc785\ub825\uacfc": [734, 740], "\uc785\ub825\uae4c\uc9c0\uc758": 739, "\uc785\ub825\uc5d0": [739, 750], "\uc785\ub825\uc73c\ub85c": [721, 730, 740, 746, 753, 756], "\uc785\ub825\uc740": [741, 754], "\uc785\ub825\ud558\ub294": 744, "\uc785\ub825\ud558\uba74": 753, "\uc785\ub825\ud574\uc11c": [741, 746], "\uc788\uac8c\ud55c\ub2e4": 719, "\uc788\uace0": [715, 721, 723, 734, 740, 745, 747, 748, 751, 754, 755, 756], "\uc788\uae30": [715, 718, 734, 740, 741], "\uc788\ub294": [714, 715, 720, 721, 723, 726, 727, 729, 736, 741, 742, 743, 744, 746, 749, 750, 751, 752, 753, 754, 756], "\uc788\ub294\ub370": [723, 727, 750, 755], "\uc788\ub294\uc9c0": [723, 746], "\uc788\ub2e4": [714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 734, 735, 736, 737, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756], "\uc788\ub2e4\uace0": 752, "\uc788\ub2e4\ub294": [723, 731], "\uc788\ub2e4\uba74": [723, 731, 746, 755], "\uc788\ub3c4\ub85d": [718, 721, 740], "\uc788\ub4ef\uc774": [718, 740], "\uc788\uc5b4\uc11c": 747, "\uc788\uc5b4\uc57c": [716, 718, 723, 750, 751], "\uc788\uc5b4\uc57c\ub9cc": 721, "\uc788\uc73c\ub2c8": 727, "\uc788\uc73c\uba70": [718, 723, 749], "\uc788\uc744": [718, 731, 746], "\uc788\uc74c": 754, "\uc788\uc74c\uc744": [726, 743, 751, 756], "\uc788\uc9c0": 721, "\uc788\uc9c0\ub9cc": [740, 741], "\uc790\ub3d9\uc73c\ub85c": [716, 721, 722, 734, 745, 747], "\uc790\ub3d9\uc744": 716, "\uc790\ub3d9\ud654\ud560": 716, "\uc790\ub8cc": [721, 725, 726], "\uc790\uc138\ud558\uac8c": 750, "\uc790\uc138\ud55c": [718, 727, 734, 738, 753], "\uc790\uc138\ud788": 745, "\uc790\uc2e0\uc758": [746, 756], "\uc790\uc6d0\uc744": 739, "\uc790\uccb4": 726, "\uc791\ub3d9\uc744": 742, "\uc791\ub3d9\ud558\uac8c": 740, "\uc791\ub3d9\ud558\ub3c4\ub85d": 745, "\uc791\ub3d9\ud558\uba74\uc11c": 720, "\uc791\uc131": [733, 750], "\uc791\uc131\ud558\uace0\uc790": 753, "\uc791\uc131\ud558\ub294": [745, 756], "\uc791\uc131\ud558\uba74": 753, "\uc791\uc131\ud55c\ub2e4": 753, "\uc791\uc131\ud560": [753, 756], "\uc791\uc131\ud574\uc57c\ud55c\ub2e4": 721, "\uc791\uc5c5": 724, "\uc791\uc5c5\uc740": 715, "\uc791\uc740": [721, 723, 740, 747, 752, 754], "\uc798": 727, "\uc798\ub77c\uc11c": 745, "\uc7a0\uc7ac\uc801\uc73c\ub85c": 741, "\uc7a0\uc7ac\uc801\uc73c\ub85c\ub294": 723, "\uc7a0\uc7ac\uc801\uc778": 750, "\uc7a1": 724, "\uc7a1\ub294": [723, 740], "\uc7a1\uc744": [720, 724], "\uc7a1\uc774": 724, "\uc7a5\ub294": 733, "\uc7a5\uc5d0\uc11c\ub294": [748, 752], "\uc7a5\uc740": [714, 725, 739, 752], "\uc7a5\uc758": [715, 752], "\uc7a5\uc810\uc740": 723, "\uc7a5\uc810\uc744": 754, "\uc7ac\ubc30\uc5f4\ud558\ub294": 718, "\uc7ac\uc0ac\uc6a9\ub420": 750, "\uc7ac\uc0ac\uc6a9\ud55c\ub2e4": 744, "\uc7ac\uc0ac\uc6a9\ud560": 741, "\uc7ac\uc791\uc131\ud574\uc11c": 740, "\uc7ac\ud560\ub2f9": 723, "\uc7ac\ud560\ub2f9\uc774": 723, "\uc7ac\ud560\ub2f9\ud55c\ub2e4": 723, "\uc7ac\ud65c\uc6a9\ud574\uc11c": 755, "\uc800\uc790\uac00": 726, "\uc800\uc791\uc744": 726, "\uc800\uc7a5": [719, 735], "\uc800\uc7a5\uacf5\uac04\ub3c4": 730, "\uc800\uc7a5\uacfc": [714, 715], "\uc800\uc7a5\ub418\ub294": [724, 730], "\uc800\uc7a5\ub418\uc5b4": [721, 740, 746, 756], "\uc800\uc7a5\ub418\uc5b4\uc57c": 723, "\uc800\uc7a5\ub41c": [723, 746], "\uc800\uc7a5\ub41c\ub2e4": [721, 722, 723, 729, 731, 751], "\uc800\uc7a5\ub420": [723, 724], "\uc800\uc7a5\uc18c\ub97c": 731, "\uc800\uc7a5\uc18c\uc5d0": 746, "\uc800\uc7a5\uc740": 753, "\uc800\uc7a5\uc774": 736, "\uc800\uc7a5\ud558\uace0": [720, 723, 727, 731], "\uc800\uc7a5\ud558\uae30": [715, 719, 727, 728, 751], "\uc800\uc7a5\ud558\ub294": [719, 721, 723, 724, 731, 734], "\uc800\uc7a5\ud558\ub294\ub370": [714, 723, 730, 739], "\uc800\uc7a5\ud55c\ub2e4": [721, 722, 723, 724, 727, 728, 734], "\uc800\uc7a5\ud560": [715, 723, 724, 728, 736], "\uc801\uac8c": 730, "\uc801\ub2e4": 746, "\uc801\uc6a9\ub418\uace0": 756, "\uc801\uc6a9\ub418\uae30": 755, "\uc801\uc6a9\ub418\ub294": 745, "\uc801\uc6a9\ub418\ub294\ub370": 734, "\uc801\uc6a9\ub418\uc5b4": 754, "\uc801\uc6a9\ub41c\ub2e4": [731, 750], "\uc801\uc6a9\ub429\ub2c8\ub2e4": 740, "\uc801\uc6a9\ud558\uace0": [731, 736, 750], "\uc801\uc6a9\ud558\uae30": [733, 739, 751], "\uc801\uc6a9\ud558\uae30\ub3c4": 749, "\uc801\uc6a9\ud558\ub294": [733, 735, 736], "\uc801\uc6a9\ud55c\ub2e4": [736, 753], "\uc801\uc6a9\ud574\ubcf4\uba74": 753, "\uc801\uc740": [721, 740, 742], "\uc801\uc808\ud55c": [722, 747], "\uc801\ud569\ud558\uc9c0": [719, 727], "\uc804\ub2ec": [732, 745, 746, 748, 750, 751, 752, 754, 756], "\uc804\ub2ec\ub418\ub294": 723, "\uc804\ub2ec\ub41c": [733, 734], "\uc804\ub2ec\uc5d0": [733, 736], "\uc804\ub2ec\uc740": [737, 740, 750, 756], "\uc804\ub2ec\uc744": [733, 734, 737, 743, 747, 754, 756], "\uc804\ub2ec\uc774": [734, 756], "\uc804\ub2ec\ud55c\ub2e4": 744, "\uc804\ub2ec\ud560": 740, "\uc804\ub2ec\ud574\uc11c": [729, 754], "\uc804\ub2ec\ud574\uc57c": [721, 740], "\uc804\ub7b5\uc740": 723, "\uc804\ub7b5\uc744": [739, 740], "\uc804\ubc18\uc801\uc73c\ub85c": 734, "\uc804\ubd80\uc774\ub2e4": 746, "\uc804\uc5d0": [721, 723, 747], "\uc804\uc790\ub294": 721, "\uc804\ucc98\ub9ac": 720, "\uc804\ucc98\ub9ac\uac00": 723, "\uc804\ucc98\ub9ac\ub294": 723, "\uc804\uccb4": [718, 723, 739, 740, 741, 742, 743, 745, 746, 750, 753, 754, 756], "\uc804\uccb4\ub97c": [739, 750], "\uc804\uccb4\uc5d0": 746, "\uc804\ud30c\ub418\uc5b4\uc57c": 746, "\uc804\ud615\uc801\uc778": [718, 724, 749, 750], "\uc804\ud658\ud558\ub294": 740, "\uc808\ub300\ub85c": 721, "\uc808\ub4e4\uc5d0\uc11c": 714, "\uc808\ub4e4\uc5d0\uc11c\ub294": 739, "\uc808\ub85c": 752, "\uc808\uc57d\ud560": [719, 739, 747], "\uc808\uc5d0\uc11c": [718, 739, 753], "\uc808\uc5d0\uc11c\ub294": [718, 720, 727, 733, 740, 750], "\uc808\uc740": [717, 721, 743, 756], "\uc808\uc744": 723, "\uc808\uc758": 720, "\uc808\ucc28\ub294": [718, 739], "\uc808\ucc98\ub85c": 731, "\uc810\uac80\uc740": 750, "\uc810\uc218": 744, "\uc810\uc218\uac00": 755, "\uc810\uc218\ub97c": [741, 744, 753, 755], "\uc810\uc218\ubcf4\ub2e4": 755, "\uc810\uc218\uc640": [744, 755], "\uc810\uc740": [721, 746], "\uc810\uc744": [718, 727, 740, 741, 743, 744, 746, 754], "\uc810\uc774\ub2e4": [721, 723, 741, 744], "\uc811\uadfc": [724, 734], "\uc811\uadfc\uc131\uc744": 718, "\uc811\uadfc\uc744": [721, 724], "\uc811\uadfc\ud558\uae30": [720, 721], "\uc811\uadfc\ud558\ub294": 721, "\uc811\uadfc\ud560": [721, 722, 728, 740], "\uc811\uadfc\ud574\uc11c": 746, "\uc815\ub82c\ud55c\ub2e4": 722, "\uc815\ubcf4": [715, 719, 730], "\uc815\ubcf4\ub4e4\uc744": [718, 723, 754], "\uc815\ubcf4\ub97c": [719, 721, 723, 724, 731, 741, 754, 756], "\uc815\ubcf4\uc640": 741, "\uc815\uc0c1\uc801\uc778": 721, "\uc815\uc218": [723, 730], "\uc815\uc218\ub85c": 731, "\uc815\uc218\ub97c": 730, "\uc815\uc758": [720, 725, 728, 734], "\uc815\uc758\ub294": 756, "\uc815\uc758\ub418\uc5b4": 721, "\uc815\uc758\ub418\uc5c8\ub2e4\uba74": 754, "\uc815\uc758\ub41c": [715, 756], "\uc815\uc758\ub41c\ub2e4": [740, 754], "\uc815\uc758\uc5d0": 725, "\uc815\uc758\ud558\uace0": 714, "\uc815\uc758\ud558\ub098": 715, "\uc815\uc758\ud558\ub294": 721, "\uc815\uc758\ud558\ub294\ub370": 756, "\uc815\uc758\ud55c": [744, 753], "\uc815\uc758\ud55c\ub2e4": [733, 740, 745, 754], "\uc815\uc758\ud560": [740, 744], "\uc815\ucc45\uc740": 722, "\uc815\ucc45\uc744": 722, "\uc815\ud574\uc57c": 724, "\uc815\ud574\uc9c4": [750, 756], "\uc815\ud655\ub3c4": 756, "\uc815\ud655\ud558\uac8c": 721, "\uc815\ud655\ud55c": 739, "\uc81c\uac70\ub418\uc5b4": 745, "\uc81c\uac70\ud558\uae30": 743, "\uc81c\uac70\ud558\ub294": 741, "\uc81c\uac70\ud55c\ub2e4": 734, "\uc81c\uac70\ud588\ub2e4": 746, "\uc81c\uacf1": 723, "\uc81c\uacf5\ub418\ub294": [746, 752], "\uc81c\uacf5\ud558\uae30": [714, 720], "\uc81c\uacf5\ud558\ub294": [715, 723, 741, 746], "\uc81c\uacf5\ud558\ub294\ub370": 727, "\uc81c\uacf5\ud558\uc9c0\ub9cc": 740, "\uc81c\uacf5\ud55c\ub2e4": [717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 730, 731, 734, 739, 740, 744, 746, 747, 753, 756], "\uc81c\uacf5\ud55c\ub2e4\uba74": 727, "\uc81c\uacf5\ud560": 718, "\uc81c\uacf5\ud568": [745, 756], "\uc81c\uacf5\ud574\uc57c": 721, "\uc81c\uacf5\ud574\uc57c\ud55c\ub2e4": 744, "\uc81c\uc548\ud558\ub294": 736, "\uc81c\uc57d": 731, "\uc81c\uc57d\uc774\ub098": 743, "\uc81c\uc678\ud558\uace0\ub294": 756, "\uc81c\uc678\ud558\uba74": [741, 744], "\uc81c\ud55c\uc801\uc778": 743, "\uc870\uac74\uc744": [731, 742], "\uc870\uae08\ub9cc": 720, "\uc870\uc815\uac00\ub2a5": 756, "\uc874\uc7ac\ud558\ub294": [721, 755], "\uc874\uc7ac\ud558\ub294\uc9c0": 755, "\uc874\uc7ac\ud558\uc9c0": [741, 744, 754], "\uc874\uc7ac\ud55c\ub2e4": 748, "\uc874\uc7ac\ud55c\ub2e4\ub294": [717, 741], "\uc874\uc7ac\ud55c\ub2e4\uba74": 716, "\uc874\uc7ac\ud574\uc57c\ud558\uba70": 729, "\uc880\ub354": 749, "\uc885\ub8cc\ub418\uba74": 755, "\uc885\ub958": 754, "\uc885\ub958\ub97c": 754, "\uc885\ub958\uc5d0": 756, "\uc885\ub958\uc758": [717, 718, 720, 745, 750, 751, 754], "\uc885\uc885": [753, 754], "\uc88b\ub2e4": 743, "\uc88b\uc740": 723, "\uc8fc\ub85c": [718, 721], "\uc8fc\ubaa9\ud558\uc790": 743, "\uc8fc\uc11d": 745, "\uc8fc\uc18c": 724, "\uc8fc\uc18c\ub4e4\uc744": 724, "\uc8fc\uc18c\uc774\ub2e4": 724, "\uc8fc\uc5b4\uc84c\uc744": 753, "\uc8fc\uc5b4\uc9c0\uba74": 740, "\uc8fc\uc5b4\uc9c4": [723, 740, 753], "\uc8fc\uc694": [718, 721, 748, 754], "\uc8fc\uc758": 752, "\uc8fc\uc758\ud558\uc790": [743, 745, 754], "\uc900\ub2e4": [721, 742], "\uc900\ube44\ud558\uace0": 723, "\uc900\ube44\ud55c\ub2e4": 754, "\uc904\ub9cc": 723, "\uc904\uc5ec\uc900\ub2e4": 723, "\uc904\uc740": 724, "\uc904\uc774\uae30": 743, "\uc904\uc778": 736, "\uc904\uc77c": 715, "\uc911": 719, "\uc911\uac04": [723, 739], "\uc911\uac04\uc5d0": 734, "\uc911\ubcf5\ub41c": 723, "\uc911\uc2ec\uc758": 725, "\uc911\uc5d0": [721, 722, 724, 737, 745, 756], "\uc911\uc694\ud558\ub2e4": [721, 723], "\uc911\uc694\ud55c": [718, 723, 727, 728], "\uc911\uc758": 730, "\uc911\uc774\ub2e4": 742, "\uc989": [718, 721, 723, 728, 734, 736, 740, 741, 744, 746, 750, 753, 754, 755], "\uc9c0\uae08\uc740": 721, "\uc9c0\ub2c8\uace0": 754, "\uc9c0\uc5b4\ubcf8\ub2e4\uba74": 754, "\uc9c0\uc6d0\ub418\ub294": [734, 741, 746], "\uc9c0\uc6d0\uc740": 734, "\uc9c0\uc6d0\uc744": [723, 747], "\uc9c0\uc6d0\ud558\uace0": [730, 735], "\uc9c0\uc6d0\ud558\uae30": [720, 721, 730, 734], "\uc9c0\uc6d0\ud558\ub294": 747, "\uc9c0\uc6d0\ud558\ub294\ub370": 742, "\uc9c0\uc6d0\ud558\uc9c0": [721, 742], "\uc9c0\uc6d0\ud558\uc9c0\ub9cc": 721, "\uc9c0\uc6d0\ud55c\ub2e4": [720, 721, 722, 723, 730, 734, 739, 742, 744, 746, 754], "\uc9c0\uc6d0\ud568": 742, "\uc9c0\uc815\ub418\uace0": 722, "\uc9c0\uc815\ub418\uba74": 744, "\uc9c0\uc815\ub418\uc5b4\uc57c": 724, "\uc9c0\uc815\ub418\uc9c0": 724, "\uc9c0\uc815\ub41c": 724, "\uc9c0\uc815\ub420": 722, "\uc9c0\uc815\ud558\uae30": [718, 731], "\uc9c0\uc815\ud558\ub294": 718, "\uc9c0\uc815\ud558\ub294\ub370": 723, "\uc9c0\uc815\ud558\uc9c0": 734, "\uc9c0\uc815\ud55c": 731, "\uc9c0\uc815\ud55c\ub2e4": [721, 722, 723, 724, 731], "\uc9c0\uc815\ud560": [721, 724, 741], "\uc9c0\uc815\ud574\uc57c": [722, 749], "\uc9c0\uc815\ud574\uc57c\ud558\uae30": 755, "\uc9c0\uce6d\ud558\ub294": 734, "\uc9c0\ucf1c\ubcf4\uc790": [742, 747], "\uc9c1\uad00\uc801\uc73c\ub85c": 736, "\uc9c1\uc811": [716, 721, 722, 723, 727, 734, 736, 744, 745], "\uc9c4\ub2e4": 720, "\uc9c4\uc785": 740, "\uc9c4\ud589": [742, 754], "\uc9c8\ubb38\uc740": 732, "\uc9d1\uacc4": [734, 737], "\uc9d1\uacc4\ub41c\ub2e4": 751, "\uc9d1\uacc4\ud558\ub294": 751, "\uc9d1\uc911\ud574\uc11c": 718, "\uc9d1\ud55c\uc740": 746, "\uc9d1\ud569": [726, 754], "\uc9d1\ud569\ub418\uc5b4\uc57c": 749, "\uc9d1\ud569\ub4e4\uc5d0": 720, "\uc9d1\ud569\uc5d0": 731, "\uc9d1\ud569\uc73c\ub85c": 726, "\uc9d1\ud569\uc744": [730, 740, 741], "\uc9e7\uac8c": 731, "\ucc28\ub840": 756, "\ucc28\uc6d0": [722, 728, 734, 749], "\ucc28\uc6d0\uacfc": 749, "\ucc28\uc6d0\ub4e4": 749, "\ucc28\uc6d0\ub4e4\uc744": 737, "\ucc28\uc6d0\uc73c\ub85c": 749, "\ucc28\uc6d0\uc740": [728, 736, 749], "\ucc28\uc6d0\uc744": [736, 749], "\ucc28\uc6d0\uc758": 742, "\ucc28\uc6d0\uc774": [736, 754], "\ucc28\uc6d0\uc774\ub780": 749, "\ucc28\uc774\uac00": 754, "\ucc28\uc774\ub97c": 747, "\ucc28\uc774\uc810\uc740": [721, 723, 741, 744, 745, 748, 754], "\ucc28\uc774\uc810\uc774": 741, "\ucc28\uc9c0\ud558\uace0": 742, "\ucc28\uc9c0\ud558\uae30\ub3c4": 736, "\ucc28\uc9c0\ud558\uc9c0": 742, "\ucc38\uace0": [715, 734], "\ucc38\uace0\ud558\uace0\uc790": 721, "\ucc38\uace0\ud558\uba74": 718, "\ucc38\uace0\ud558\uc790": [718, 723, 726, 727, 730, 734, 738, 740, 741, 742, 743, 746, 752, 754, 756], "\ucc38\uace0\ud560": [727, 728, 730, 731], "\ucc38\uc870": 721, "\ucc38\uc870\ub9cc": 727, "\ucc38\uc870\ud558\uae30": 727, "\ucc38\uc870\ud558\uc790": 727, "\ucc3e\ub294\ub2e4": 724, "\ucc3e\uc544\ub0b4\uc57c\ud55c\ub2e4": 754, "\ucc3e\uc544\ub0bc": 750, "\ucc3e\uc544\ubcfc": 746, "\ucc44\ud0dd\ud558\uace0": 720, "\ucc45\uc784\uc744": 720, "\ucc98\ub7fc": [716, 721, 741], "\ucc98\ub9ac": [715, 718], "\ucc98\ub9ac\ub418\uc9c0": 718, "\ucc98\ub9ac\ub97c": 745, "\ucc98\ub9ac\ud558\uace0": 714, "\ucc98\ub9ac\ud558\uae30": 715, "\ucc98\ub9ac\ud558\ub294": [718, 719], "\uccab": [722, 743, 745], "\uccab\ubc88\uc9f8": [723, 728, 740, 741, 743, 746, 750], "\uccab\ubc88\uc9f8\ub294": 741, "\uccab\uc9f8\ub85c": 754, "\uccb4\ud06c": 750, "\uccb4\ud06c\uac00": 750, "\uccb4\ud06c\ud3ec\uc778\ud2b8\ub97c": 727, "\ucd08\uae30\ud654\ub41c\ub2e4": 722, "\ucd08\uae30\ud654\ud558\uae30": 720, "\ucd08\uae30\ud654\ud55c\ub2e4": [721, 749], "\ucd1d": [718, 722], "\ucd5c\ub300": 754, "\ucd5c\uc120\uc758": 742, "\ucd5c\uc18c\ub4e4\uc774": 754, "\ucd5c\uc18c\uc758": 723, "\ucd5c\uc18c\ud55c\uc758": 734, "\ucd5c\uc2e0": 723, "\ucd5c\uc801\uc740": 747, "\ucd5c\uc801\uc774\uc9c0": 723, "\ucd5c\uc801\ud654\ub418\uc5b4": 723, "\ucd5c\uc801\ud654\ub41c": 734, "\ucd5c\uc801\ud654\ub420": 736, "\ucd5c\uc801\ud654\ub4e4\uc744": 736, "\ucd5c\uc801\ud654\ub97c": 750, "\ucd5c\uc801\ud654\ud558\uace0": 736, "\ucd5c\uc801\ud654\ud560": 734, "\ucd5c\uc885": [739, 746], "\ucd94\uac00": [742, 750], "\ucd94\uac00\ub41c": 730, "\ucd94\uac00\ub85c": [718, 723, 731, 736], "\ucd94\uac00\uc801\uc73c\ub85c": [716, 723], "\ucd94\uac00\uc801\uc778": 751, "\ucd94\uac00\ud558\ub294": 718, "\ucd94\uac00\ud55c\ub2e4": 718, "\ucd94\uac00\ud560": [718, 721], "\ucd94\ub860": 739, "\ucd94\ub860\uc5d0": 721, "\ucd94\ub860\uc5d0\uc11c": 723, "\ucd94\ub860\uc740": 743, "\ucd94\ub860\uc744": [720, 743], "\ucd94\ub860\uc758": 743, "\ucd94\ub860\uc774": [723, 739], "\ucd94\uc0c1\ud654\ub97c": 725, "\ucd94\ucc9c": 726, "\ucd94\ucc9c\uc5d0\uc11c": 753, "\ucd94\ucc9c\uc744": 755, "\ucd94\ucd9c\ub420": 716, "\ucd94\ucd9c\uc744": 716, "\ucd94\ucd9c\ud558\uace0": 731, "\ucd94\ucd9c\ud558\uba74": 756, "\ucd94\ucd9c\ud558\uc790": 716, "\ucd94\ucd9c\ud55c\ub2e4": 716, "\ucd94\ucd9c\ud560": 751, "\ucd95\uc18c": [733, 734], "\ucd95\uc57d": [734, 737, 751], "\ucd9c\ub825": [723, 734, 740, 741, 743, 745, 746, 749], "\ucd9c\ub825\uacfc": 741, "\ucd9c\ub825\uc2dc\uc791\ud574\uc11c": 739, "\ucd9c\ub825\uc73c\ub85c": 746, "\ucd9c\ub825\uc73c\ub85c\ub294": 740, "\ucd9c\ub825\uc758": 740, "\ucda9\ubd84\ud558\ub2e4": 743, "\ucda9\ubd84\ud558\uc9c0": 723, "\ucda9\uc871\ud558\uba74": 742, "\ucde8\uae09\ud55c\ub2e4": 750, "\ucde8\ud558\uac8c\ud558\uba74": 753, "\uce58\uc6d0\uc744": 749, "\uce5c\uad6c": 726, "\uce5c\ubaa9": 754, "\uce5c\uc219\ud560": 755, "\uce74\ud14c\uace0\ub9ac\ub85c": 756, "\uce74\ud14c\ub85c\uae30\ub4e4\ub85c": 756, "\uce90\ub178\ub2c8\uceec": 731, "\ucee4\ub110\uc758": 747, "\ucee4\ub2e4\ub780": 754, "\ucee4\ubba4\ub2c8\ud2f0\uc5d0": 754, "\ucee4\ubba4\ub2c8\ud2f0\uc758": 754, "\ucee4\uc11c": 736, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ub41c": 751, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c": 746, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\uc774": 756, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [739, 741, 746], "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\ub294": 739, "\ucee4\uc2a4\ud140": [714, 739, 742, 746, 748, 756], "\ucee4\uc9c8": 723, "\ucee8\ud0dd\uc2a4\ud2b8": 730, "\ucef4\ud30c\uc77c\uacfc": 723, "\ucef4\ud30c\uc77c\uc744": 734, "\ucef4\ud30c\uc77c\ud558\uace0": 723, "\ucef4\ud30c\uc77c\ud55c\ub2e4": 723, "\ucef4\ud3ec\ub10c\ub4dc\ub4e4\uc744": 720, "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uacfc": [720, 754], "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uc744": [720, 725], "\ucef4\ud3ec\ub10c\ud2b8\ub97c": [714, 720, 754], "\ucef4\ud3ec\ub10c\ud2b8\ub9cc": 753, "\ucef4\ud4e8\ud130": 720, "\ucef4\ud4e8\ud130\ub294": [720, 721], "\ucef4\ud4e8\ud130\ub4e4\uc5d0": 720, "\ucef4\ud4e8\ud130\ub4e4\uc758": [720, 723], "\ucef4\ud4e8\ud130\ub97c": 723, "\ucef4\ud4e8\ud130\uc5d0": 721, "\ucef4\ud4e8\ud130\uc5d0\uc11c": [720, 723, 747], "\ucef4\ud4e8\ud305": 734, "\ucef7": 723, "\ucf00\uc774\uc2a4\ub294": 721, "\ucf00\uc774\uc2a4\ub4e4\uc744": 750, "\ucf54\ub4dc": [718, 720, 723, 733, 741, 744, 747, 750, 754], "\ucf54\ub4dc\ub294": [716, 717, 718, 720, 721, 722, 723, 727, 728, 730, 731, 740, 741, 744, 745, 746, 748, 750, 753, 754, 755, 756], "\ucf54\ub4dc\ub3c4": 745, "\ucf54\ub4dc\ub4e4\uacfc": 745, "\ucf54\ub4dc\ub97c": [716, 718, 720, 721, 734], "\ucf54\ub4dc\uc5d0\uc11c": [718, 740], "\ucf54\ub4dc\uc640": [721, 748, 753], "\ucf54\ub4dc\uc758": [718, 750], "\ucf54\ub4dc\uc774\ub2e4": 756, "\ucf54\ub4dc\ucc98\ub7fc": 756, "\ucffc\ub9ac\ud558\ub294": 730, "\ud06c\uac8c": 753, "\ud06c\uae30": 719, "\ud06c\uae30\uac00": [739, 754], "\ud06c\uae30\ub77c\uace0": 752, "\ud06c\uae30\ub97c": [722, 731], "\ud06c\uae30\uc758": 721, "\ud06c\uae30\uc774\uace0": 742, "\ud06c\ub85c\uc2a4": 737, "\ud070": [715, 723, 732, 738, 750, 752, 754, 756], "\ud074\ub798\uc2a4": [714, 746], "\ud074\ub798\uc2a4\ub294": [721, 740], "\ud074\ub798\uc2a4\ub4e4\uc744": 746, "\ud074\ub798\uc2a4\ub97c": [715, 716, 720, 746], "\ud074\ub798\uc2a4\uc5d0": [715, 718, 740, 756], "\ud074\ub798\uc2a4\uc5d0\ub294": 715, "\ud074\ub798\uc2a4\uc5d0\uc11c": 714, "\ud074\ub798\uc2a4\uc774\uace0": 742, "\ud074\ub798\uc2a4\uc774\ub2e4": [715, 721], "\ud074\ub798\uc2a4\uc778": [718, 740], "\ud074\ub7ec\uc2a4\ud130": [720, 724], "\ud074\ub7ec\uc2a4\ud130\uc5d0": [721, 724], "\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c": [720, 721, 723, 724], "\ud074\ub7ec\uc2a4\ud130\uc758": [720, 721, 723, 724], "\ud074\ub7ec\uc2a4\ud130\uc774": 720, "\ud074\ub85c\ubc8c": 724, "\ud074\ub860\ud558\uace0": 723, "\ud074\ub860\ud55c\ub2e4": 723, "\ud0a4\uac12\ub294": 737, "\ud0a4\ub85c": [723, 751], "\ud0c0\uc785": [722, 723, 728, 730, 737, 749, 751], "\ud0c0\uc785\uac04\uc758": 741, "\ud0c0\uc785\uacfc": [721, 722, 731, 741, 744, 753, 756], "\ud0c0\uc785\ub4e4\uacfc": [722, 723, 741, 744, 746, 756], "\ud0c0\uc785\ub4e4\uc5d0": [731, 750, 756], "\ud0c0\uc785\ub4e4\uc640": [744, 746], "\ud0c0\uc785\ub4e4\uc740": 737, "\ud0c0\uc785\ub4e4\uc744": [723, 740, 741, 744, 751], "\ud0c0\uc785\ub4e4\uc758": 723, "\ud0c0\uc785\ub4e4\uc774": 723, "\ud0c0\uc785\ub9cc": 753, "\ud0c0\uc785\ub9cc\uc744": 721, "\ud0c0\uc785\ubcc4": [722, 731], "\ud0c0\uc785\ubcc4\ub85c": [723, 740, 756], "\ud0c0\uc785\uc5d0": [722, 723, 731, 734, 737, 749, 750, 751, 753, 754, 755, 756], "\ud0c0\uc785\uc5d0\uc11c": 722, "\ud0c0\uc785\uc5d0\uc11c\uc758": 723, "\ud0c0\uc785\uc73c\ub85c": [726, 751, 753, 755], "\ud0c0\uc785\uc73c\ub85c\ub294": 749, "\ud0c0\uc785\uc740": [722, 730, 749], "\ud0c0\uc785\uc744": [722, 723, 725, 726, 728, 734, 737, 741, 745, 747, 752, 753, 755], "\ud0c0\uc785\uc758": [722, 723, 725, 726, 731, 737, 740, 741, 753], "\ud0c0\uc785\uc774": [722, 723, 730, 731, 750, 751], "\ud0c0\uc785\uc774\ub098": 722, "\ud0c0\uc785\uc774\ub2e4": 723, "\ud0c0\uc785\uc774\ub77c\uace0": 731, "\ud134\uc11c": 728, "\ud14c\uc2a4\ud06c": 718, "\ud14c\uc2a4\ud06c\ub4e4\uc5d0": 753, "\ud14c\uc2a4\ud06c\ub4e4\uc744": 756, "\ud14c\uc2a4\ud06c\ub97c": [717, 752], "\ud14c\uc2a4\ud06c\uc5d0": 723, "\ud14c\uc2a4\ud06c\uc5d0\ub3c4": 721, "\ud14c\uc2a4\ud06c\uc5d0\uc11c": 718, "\ud14c\uc2a4\ud06c\uc758": 721, "\ud14c\uc2a4\ud2b8": [721, 723, 753, 756], "\ud14c\uc2a4\ud2b8\ub97c": 721, "\ud14c\uc2a4\ud2b8\uc758": 718, "\ud14c\uc774\ube14": 727, "\ud14c\uc785\ub4e4\uc758": 723, "\ud150\uc11c": [722, 729, 730, 734, 748], "\ud150\uc11c\uac00": [721, 728], "\ud150\uc11c\ub294": [721, 728, 747], "\ud150\uc11c\ub4e4\uacfc": [722, 751], "\ud150\uc11c\ub4e4\uc5d0": 731, "\ud150\uc11c\ub4e4\uc744": [721, 750], "\ud150\uc11c\ub4e4\uc758": [718, 723, 741, 744, 745, 756], "\ud150\uc11c\ub85c": 727, "\ud150\uc11c\ub97c": [721, 722, 727, 729, 730, 751], "\ud150\uc11c\uc5d0": 747, "\ud150\uc11c\uc5ec\uc57c\ub9cc": 734, "\ud150\uc11c\uc640": 721, "\ud150\uc11c\uc758": [728, 730], "\ud150\uc11c\uc774\uace0": 745, "\ud15c\ud50c\ub9bf\uc740": 715, "\ud1a0\uc774": 723, "\ud1a0\ud53d\ub4e4\uc744": 739, "\ud1b5\uacc4\ub4e4\uc744": 723, "\ud1b5\uc2e0\uc5d0": 724, "\ud1b5\uc2e0\uc744": [720, 723], "\ud1b5\uc2e0\uc774": 721, "\ud1b5\ud569\ub420": 748, "\ud1b5\ud569\ud558\ub294": [733, 751], "\ud1b5\ud574\uc11c": [721, 722, 723, 727, 734, 740, 743, 744, 751, 755], "\ud1b5\ud574\uc11c\ub294": 740, "\ud234\ub4e4": 720, "\ud234\uc740": 721, "\ud29c\ud1a0\ub9ac\uc5bc": 734, "\ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c": 742, "\ud29c\ud50c": 730, "\ud2b8\ub808\uc774\ub108": [720, 721], "\ud2b8\ub808\uc774\ub108\uac00": 721, "\ud2b8\ub808\uc774\ub108\ub294": 723, "\ud2b8\ub808\uc774\ub108\ub4e4\uc740": [720, 721], "\ud2b8\ub808\uc774\ub108\ub4e4\uc758": 724, "\ud2b8\ub808\uc774\ub108\ub4e4\uc774": 721, "\ud2b8\ub808\uc774\ub108\uc5d0": 724, "\ud2b8\ub808\uc774\ub108\uc5d0\uac8c": [720, 721], "\ud2b8\ub9ac\ud50c": 731, "\ud2b8\uc704\ud130\uc758": 726, "\ud2b9\ubcc4\ud558\uac8c": 746, "\ud2b9\ubcc4\ud55c": [726, 731, 750], "\ud2b9\ubcc4\ud788": 727, "\ud2b9\uc131\uc744": 754, "\ud2b9\uc815": [716, 718, 722, 723, 731, 740, 743, 749, 753], "\ud2b9\uc9d5\uacfc": 730, "\ud2b9\uc9d5\uc744": [737, 754], "\ud2b9\ud788": [720, 731, 743], "\ud2f0\uc555\uc5d0": 753, "\ud2f0\uc785\uc5d0": 723, "\ud301\uc744": 739, "\ud30c\ub77c\uba54\ud130": [748, 749], "\ud30c\ub77c\uba54\ud130\ub4e4": 751, "\ud30c\ub77c\uba54\ud130\ub4e4\uacfc": 749, "\ud30c\ub77c\uba54\ud130\ub4e4\ub85c\uc368": 751, "\ud30c\ub77c\uba54\ud130\ub4e4\uc740": 734, "\ud30c\ub77c\uba54\ud130\ub4e4\uc744": [721, 737, 747], "\ud30c\ub77c\uba54\ud130\ub85c": [736, 750], "\ud30c\ub77c\uba54\ud130\ub97c": [718, 734, 740], "\ud30c\ub77c\uba54\ud130\uc774\ub2e4": 755, "\ud30c\ub77c\ubbf8\ud130\ub4e4\uc740": 734, "\ud30c\ub77c\ubbf8\ud130\ub85c": 734, "\ud30c\uc2f1\ud558\uace0": 731, "\ud30c\uc2f1\ud558\ub294": 727, "\ud30c\uc774\uc120": 730, "\ud30c\uc774\ud504\ub77c\uc778": [732, 752, 754, 756], "\ud30c\uc774\ud504\ub77c\uc778\uc5d0": 715, "\ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c": 715, "\ud30c\uc774\ud504\ub77c\uc778\uc740": 754, "\ud30c\uc774\ud504\ub77c\uc778\uc744": [714, 715, 739], "\ud30c\uc774\ud504\ub77c\uc778\uc758": 714, "\ud30c\uc774\ud504\ub77c\uc778\uc774": [714, 715], "\ud30c\uc77c": [716, 723, 724, 753, 756], "\ud30c\uc77c\ub4e4": [723, 724], "\ud30c\uc77c\ub4e4\ub85c": 718, "\ud30c\uc77c\ub4e4\uc5d0": 723, "\ud30c\uc77c\ub4e4\uc740": [716, 723], "\ud30c\uc77c\ub4e4\uc744": [716, 731], "\ud30c\uc77c\ub4e4\uc758": [723, 724], "\ud30c\uc77c\ub4e4\uc774": 723, "\ud30c\uc77c\ub85c": [718, 723], "\ud30c\uc77c\ub85c\uc11c": 723, "\ud30c\uc77c\uc5d0": [716, 723, 731], "\ud30c\uc77c\uc5d0\uc11c": 723, "\ud30c\uc77c\uc740": 723, "\ud30c\uc77c\uc744": [716, 721, 723, 724], "\ud30c\uc77c\uc758": 723, "\ud30c\uc77c\uc774": [716, 723, 724], "\ud30c\uc77c\uc774\ub2e4": 723, "\ud30c\uccd0": 715, "\ud30c\ud0c0\uc154\ub2dd": 723, "\ud30c\ud0c0\uc158\uacfc": 721, "\ud30c\ud0c0\uc158\ub41c": 724, "\ud30c\ud0c0\uc158\uc5d0": 723, "\ud30c\ud130\uc158\ud558\uae30": 721, "\ud30c\ud2b8\ub85c": 737, "\ud30c\ud2f0\uc154\ub2dd": [715, 721], "\ud30c\ud2f0\uc154\ub2dd\uc740": 723, "\ud30c\ud2f0\uc154\ub2dd\uc744": 723, "\ud30c\ud2f0\uc154\ub2dd\uc758": 723, "\ud30c\ud2f0\uc154\ub2dd\ud55c\ub2e4": 723, "\ud30c\ud2f0\uc154\ub2dd\ud560": 723, "\ud30c\ud2f0\uc158": [720, 721, 722, 723, 724], "\ud30c\ud2f0\uc158\uacfc": 723, "\ud30c\ud2f0\uc158\ub418\uc5b4": 721, "\ud30c\ud2f0\uc158\ub41c": [720, 721, 723, 724], "\ud30c\ud2f0\uc158\ub4e4\uc5d0": 723, "\ud30c\ud2f0\uc158\ub4e4\uc744": [723, 724], "\ud30c\ud2f0\uc158\ub4e4\uc758": 723, "\ud30c\ud2f0\uc158\ub4e4\uc774": [723, 724], "\ud30c\ud2f0\uc158\uc5d0": 723, "\ud30c\ud2f0\uc158\uc5d0\uc11c": 721, "\ud30c\ud2f0\uc158\uc73c\ub85c": 723, "\ud30c\ud2f0\uc158\uc740": 723, "\ud30c\ud2f0\uc158\uc744": [721, 722, 723, 724], "\ud30c\ud2f0\uc158\uc758": [721, 723], "\ud30c\ud2f0\uc158\uc774": [723, 724], "\ud30c\ud2f0\uc158\uc774\ub2e4": 721, "\ud30c\ud2f0\uc158\ud558\uae30": 723, "\ud310\ub9e4\uc790": 726, "\ud310\ub9e4\ud568": 726, "\ud314\ub85c\uc6b0": 726, "\ud328\uc2a4": 747, "\ud328\uc2a4\uc6cc\ub4dc": 724, "\ud328\ud0a4\uc9c0": 717, "\ud328\ud0a4\uc9c0\ub4e4\uc744": 731, "\ud328\ud0a4\uc9c0\ub97c": [714, 723], "\ud398\uc774\ud37c\uc5d0\uc11c\ub294": 749, "\ud3b8\ub9ac\ud558\uace0": 715, "\ud3c9\uac00": [743, 753], "\ud3c9\uac00\ud558\ub294": 756, "\ud3c9\uade0": 754, "\ud3c9\uade0\uc744": 754, "\ud3ec\uba67\ub4e4\uc5d0\ub3c4": 731, "\ud3ec\uba67\ub4e4\uc774": 727, "\ud3ec\uba67\uc73c\ub85c": [723, 727, 731], "\ud3ec\uba67\uc744": 730, "\ud3ec\uba67\uc758": 747, "\ud3ec\uba67\uc774": 716, "\ud3ec\uba67\uc778": 716, "\ud3ec\ud2b8": 724, "\ud3ec\ud568": [720, 747], "\ud3ec\ud568\ub418\uc5b4": [723, 756], "\ud3ec\ud568\ub41c": 723, "\ud3ec\ud568\ub41c\ub2e4\ub294": 723, "\ud3ec\ud568\ub420": 740, "\ud3ec\ud568\ud558\uace0": [718, 720, 723, 740, 748], "\ud3ec\ud568\ud558\ub294": 740, "\ud3ec\ud568\ud558\ub294\ub370": 723, "\ud3ec\ud568\ud558\uc9c0": [740, 753], "\ud3ec\ud568\ud558\uc9c0\ub9cc": 740, "\ud3ec\ud568\ud55c": [726, 740, 744], "\ud3ec\ud568\ud55c\ub2e4": [723, 751], "\ud3ec\ud568\ud560": 740, "\ud3ec\ud568\ud574\uc57c": 740, "\ud3f4\ub354\ub294": 723, "\ud45c\uc2dc\ub41c": 740, "\ud45c\uc900": [714, 718], "\ud45c\uc900\uc801\uc778": 715, "\ud45c\ud604\ub418\uace0": 743, "\ud45c\ud604\ub418\uba70": 725, "\ud45c\ud604\ub418\uc5b4\uc57c": 755, "\ud45c\ud604\ub41c\ub2e4": [730, 731, 750, 751], "\ud45c\ud604\uc744": 756, "\ud45c\ud604\ud558\uace0": 726, "\ud45c\ud604\ud558\uae30": [726, 730, 734, 737], "\ud45c\ud604\ud558\ub294": [723, 726, 753], "\ud45c\ud604\ud558\ub294\ub370": 755, "\ud45c\ud604\ud558\uba74": 734, "\ud45c\ud604\ud560": 726, "\ud48d\ubd80\ud55c": 754, "\ud504\ub798\ud504\uc5d0\uc11c": 740, "\ud504\ub808\uc784\uc6cc\ud06c": 748, "\ud504\ub808\uc784\uc6cc\ud06c\uac00": 727, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0": 748, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c": 740, "\ud504\ub808\uc784\uc6cc\ud06c\uc758": [721, 731, 748], "\ud504\ub85c\uadf8\ub798\ubc0d": 725, "\ud504\ub85c\uc138\uc2a4": [721, 754], "\ud504\ub85c\uc138\uc2a4\ub294": [720, 721, 723, 739], "\ud504\ub85c\uc138\uc2a4\ub41c": 719, "\ud504\ub85c\uc138\uc2a4\ub4e4\uacfc\uc758": 721, "\ud504\ub85c\uc138\uc2a4\ub4e4\uc740": [720, 721], "\ud504\ub85c\uc138\uc2a4\ub4e4\uc744": [720, 721], "\ud504\ub85c\uc138\uc2a4\ub97c": [720, 721, 723, 742, 754], "\ud504\ub85c\uc138\uc2a4\ub9cc": 721, "\ud504\ub85c\uc138\uc2a4\uc5d0": 721, "\ud504\ub85c\uc138\uc2a4\uc5d0\uc11c": 721, "\ud504\ub85c\uc138\uc2a4\uc758": [721, 724], "\ud504\ub85c\uc138\uc2f1": [714, 719], "\ud504\ub85c\uc138\uc2f1\ub418\uc5b4": 752, "\ud504\ub85c\uc138\uc2f1\ub41c": 719, "\ud504\ub85c\uc138\uc2f1\uc758": 718, "\ud504\ub85c\uc138\uc2f1\ud558\uace0": 715, "\ud504\ub85c\uc138\uc2f1\ud558\ub294": [714, 717, 718], "\ud504\ub85c\ud1a0\ud0c0\uc785": 730, "\ud504\ub85c\ud2f0\uc5b4\uac00": 740, "\ud504\ub85c\ud37c\ud2f0\ub4e4\uc744": 718, "\ud504\ub85c\ud37c\ud2f0\ub97c": 718, "\ud504\ub860\ud2f0\uc5b4": 740, "\ud504\ub860\ud2f0\uc5b4\uac00": 740, "\ud504\ub860\ud2f0\uc5b4\ub294": 740, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uacfc": 740, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uc744": 740, "\ud504\ub860\ud2f0\uc5b4\ub85c": 740, "\ud504\ub860\ud2f0\uc5b4\ub97c": 740, "\ud504\ub860\ud2f0\uc5b4\uc5d0\uc11c": 740, "\ud504\ub860\ud2f0\uc5b4\uc758": 740, "\ud504\ub860\ud2f0\uc5b4\uc774\uace0": 740, "\ud53c\ucc98": [725, 727, 729, 731, 734, 736, 749, 754, 756], "\ud53c\ucc98\uac00": [728, 731, 746], "\ud53c\ucc98\ub294": 728, "\ud53c\ucc98\ub4e4\uacfc": 725, "\ud53c\ucc98\ub4e4\ub9cc": 728, "\ud53c\ucc98\ub4e4\uc740": 728, "\ud53c\ucc98\ub4e4\uc744": [726, 727, 731, 741, 746], "\ud53c\ucc98\ub77c\uace0": 733, "\ud53c\ucc98\ub85c": [728, 734, 753], "\ud53c\ucc98\ub97c": [720, 728, 733, 734, 740, 745, 746], "\ud53c\ucc98\ub9cc": 746, "\ud53c\ucc98\uc5d0": 736, "\ud53c\ucc98\uc640": [733, 734], "\ud53c\ucc98\uc758": [734, 745], "\ud53c\ucc98\uc774\uace0": [733, 750], "\ud53c\ucc98\uc774\ub2e4": 750, "\ud53c\uccd0": [715, 720, 721, 723, 729, 754, 756], "\ud53c\uccd0\uac00": [731, 745], "\ud53c\uccd0\ub294": [728, 740, 745, 751, 754], "\ud53c\uccd0\ub3c4": [723, 728, 756], "\ud53c\uccd0\ub4e4": [718, 746, 754], "\ud53c\uccd0\ub4e4\uacfc": [723, 754], "\ud53c\uccd0\ub4e4\ub85c\ubd80\ud130": 745, "\ud53c\uccd0\ub4e4\ub9cc": 721, "\ud53c\uccd0\ub4e4\uc5d0": [747, 753, 754], "\ud53c\uccd0\ub4e4\uc740": [734, 746, 752], "\ud53c\uccd0\ub4e4\uc744": [721, 723, 728, 731, 740, 741, 742, 744, 746, 754], "\ud53c\uccd0\ub4e4\uc758": 753, "\ud53c\uccd0\ub4e4\uc774": [741, 742, 746, 752], "\ud53c\uccd0\ub85c": 735, "\ud53c\uccd0\ub97c": [728, 731, 734, 735, 736, 739, 742, 745, 750, 754, 756], "\ud53c\uccd0\uc5d0": [736, 740, 747], "\ud53c\uccd0\uc640": [735, 736, 750], "\ud53c\uccd0\uc758": [736, 745, 756], "\ud53c\uccd0\uc774\ub2e4": 754, "\ud53c\ud558\ub294": 736, "\ud53c\ud560": 727, "\ud544\ub4dc": 734, "\ud544\ub4dc\ub294": 723, "\ud544\ub4dc\ub4e4\ub85c": 723, "\ud544\ub4dc\ub4e4\uc740": 723, "\ud544\ub4dc\ub4e4\uc744": 723, "\ud544\ub4dc\ub4e4\uc774\ub2e4": 723, "\ud544\ub4dc\ub97c": 723, "\ud544\ub4dc\uc5d0": [718, 723, 734], "\ud544\ub4dc\uc778": 723, "\ud544\uc694": 750, "\ud544\uc694\uac00": [723, 731, 736, 739, 740, 743], "\ud544\uc694\ub294": 721, "\ud544\uc694\ub85c": [721, 723], "\ud544\uc694\ub85c\ud558\uae30": 743, "\ud544\uc694\ud558\uace0": [739, 740], "\ud544\uc694\ud558\ub2e4": [721, 723, 740, 741, 745, 746, 753, 756], "\ud544\uc694\ud558\uc9c0": 731, "\ud544\uc694\ud55c": [715, 725, 739, 746, 748], "\ud544\uc694\ud55c\ub370": 743, "\ud544\uc694\ud55c\uc9c0": 746, "\ud558\uac70\ub098": 739, "\ud558\uac8c\ub41c\ub2e4": 753, "\ud558\uace0": [730, 738, 740, 741, 753], "\ud558\uae30": [718, 720, 731, 738, 740, 746, 754], "\ud558\ub098\uac00": [737, 756], "\ud558\ub098\ub294": [721, 730, 734, 736], "\ud558\ub098\ub85c": 721, "\ud558\ub098\ub85c\uc11c": 721, "\ud558\ub098\ub97c": [745, 756], "\ud558\ub098\uc529": 746, "\ud558\ub098\uc5d0\uc11c": 724, "\ud558\ub098\uc758": [718, 721, 723, 724, 731, 739, 743, 745, 750, 753, 754, 755], "\ud558\ub294": [715, 720, 721, 723, 734, 741, 742, 746, 747, 755], "\ud558\ub294\ub370": 740, "\ud558\ub294\uc9c0": 723, "\ud558\ub294\uc9c0\ub97c": [746, 749], "\ud558\uba70": 730, "\ud558\uba74": [740, 753], "\ud558\uba74\ub418\uae30": 744, "\ud558\uba74\ub41c\ub2e4": 740, "\ud558\uba74\uc11c": [720, 746], "\ud558\uc774\ub808\ubca8": 734, "\ud558\uc774\ud37c": 755, "\ud558\uc790": [715, 733], "\ud558\uc9c0\ub9cc": [718, 722, 723, 726, 730, 740, 743, 750], "\ud559\uc2b5": [721, 723, 732, 738, 740, 743, 750, 752], "\ud559\uc2b5\uacfc": [720, 739], "\ud559\uc2b5\ub420": 744, "\ud559\uc2b5\uc2dc": 723, "\ud559\uc2b5\uc2dc\ud0a4\ub294": [750, 755], "\ud559\uc2b5\uc5d0": [718, 720, 724, 743, 747], "\ud559\uc2b5\uc5d0\ub3c4": 746, "\ud559\uc2b5\uc5d0\uc11c": [738, 746], "\ud559\uc2b5\uc5d0\uc11c\ub294": [721, 722], "\ud559\uc2b5\uc740": [720, 747, 756], "\ud559\uc2b5\uc744": [720, 721, 722, 724, 739, 746, 747, 754], "\ud559\uc2b5\uc758": [750, 754], "\ud559\uc2b5\uc774": [718, 723, 724, 746, 755], "\ud559\uc2b5\uc774\ub2e4": 755, "\ud559\uc2b5\ud558\uae30": [720, 721, 732, 739, 754], "\ud559\uc2b5\ud558\ub294": [720, 739, 741, 746, 752], "\ud559\uc2b5\ud558\ub294\ub370": [739, 743], "\ud559\uc2b5\ud560": [741, 747, 749, 754], "\ud55c": [717, 720, 721, 722, 723, 724, 728, 731, 745, 751, 755, 756], "\ud55c\uac00\uc9c0": 734, "\ud55c\uac1c\uac00": 754, "\ud55c\uac1c\ub97c": 747, "\ud55c\uac1c\uc529": 754, "\ud55c\uac1c\uc5d0": 740, "\ud55c\uac1c\uc758": [717, 720, 723, 728, 731, 734, 754], "\ud55c\uae00": 732, "\ud55c\ub2e4": [716, 718, 720, 721, 722, 723, 724, 728, 730, 731, 734, 736, 737, 740, 741, 744, 745, 746, 747, 749, 750, 751, 753, 755], "\ud55c\ub2e4\uba74": [741, 753], "\ud55c\ubc88\uc5d0": 743, "\ud55c\ubc88\uc758": 754, "\ud560": [721, 723, 724, 727, 739, 740, 741, 746, 755], "\ud560\ub2f9\ub418\uc5b4": [723, 756], "\ud560\ub2f9\ub418\uc5c8\ub2e4\uba74": 723, "\ud560\ub2f9\ub41c": 723, "\ud560\ub2f9\ub41c\ub2e4": 723, "\ud560\ub2f9\uc73c\ub85c": 728, "\ud560\ub2f9\uc744": 722, "\ud560\ub2f9\ud558\ub294": 728, "\ud560\ub2f9\ud558\uc9c0": 723, "\ud560\ub2f9\ud55c": 723, "\ud560\ub2f9\ud560": 721, "\ud560\ub2f9\ud574\uc57c": 721, "\ud560\uc9c0\ub97c": 722, "\ud568\uaed8": [720, 721, 723, 727, 729, 736, 741, 756], "\ud568\uc218": [718, 730, 731, 733, 736, 747, 748, 756], "\ud568\uc218\uac00": [721, 734, 755], "\ud568\uc218\ub294": [721, 734, 740, 744, 749, 750, 751, 753, 754], "\ud568\uc218\ub4e4": [715, 742], "\ud568\uc218\ub4e4\uacfc": 734, "\ud568\uc218\ub4e4\ub85c": 750, "\ud568\uc218\ub4e4\uc5d0": 734, "\ud568\uc218\ub4e4\uc740": [727, 734, 742, 754], "\ud568\uc218\ub4e4\uc744": [721, 734], "\ud568\uc218\ub4e4\uc774": 740, "\ud568\uc218\ub85c": [716, 734, 753, 754, 755], "\ud568\uc218\ub85c\ub294": 734, "\ud568\uc218\ub97c": [715, 716, 719, 730, 734, 736, 740, 744, 745, 749, 750, 751, 753], "\ud568\uc218\uc548\uc5d0": 754, "\ud568\uc218\uc5d0": 718, "\ud568\uc218\uc5d0\uc11c": [718, 735, 748, 754], "\ud568\uc218\uc5d0\uc11c\uc758": 748, "\ud568\uc218\uc640": 736, "\ud568\uc218\uc758": [718, 734, 740, 749, 750], "\ud568\uc218\uc774\uace0": 740, "\ud568\uc218\uc774\ub2e4": [734, 740, 744, 749, 750, 751], "\ud569": 754, "\ud569\uc0b0\ud558\ub294": 754, "\ud569\uc740": 736, "\ud569\uccd0\uc11c": [733, 754], "\ud569\uccd0\uc57c\ud55c\ub2e4": [740, 746], "\ud569\uccd0\uc9c0\ub294\uc9c0\uc5d0": 743, "\ud569\ucce4\ub294\ub370": 734, "\ud569\uce58\uace0": 754, "\ud569\uce58\ub294": 737, "\ud569\uce58\ub294\ub370": 740, "\ud569\uce5c": 753, "\ud569\uce5c\ub2e4": 731, "\ud569\ud558\ub294": [734, 756], "\ud569\ud574\uc11c": 742, "\ud56d\uc0c1": [723, 727, 734, 740, 750], "\ud574\uacb0\ud558\uae30": 747, "\ud574\ub2f9": [724, 753, 756], "\ud574\ub2f9\ud558\ub294": [730, 746], "\ud574\ub2f9\ud55c\ub2e4": 731, "\ud574\uc11c": [721, 740], "\ud574\uc57c\ud55c\ub2e4": [745, 754], "\ud574\uc5d0": 726, "\ud574\uc8fc\uae30": 734, "\ud574\uc8fc\ub294": [716, 744], "\ud574\uc900\ub2e4": [720, 721, 746], "\ud575\uc2ec": 725, "\ud588\ub2e4\uba74": 726, "\ud588\uc73c\ub2c8": 745, "\ud589": [721, 723, 728], "\ud589\ub4e4": 745, "\ud589\ub82c\uacfc": 727, "\ud589\ub82c\uc744": 727, "\ud589\ub82c\uc758": 736, "\ud589\uc73c\ub85c": 745, "\ud589\uc740": 723, "\ud589\uc758": [721, 745], "\ud5a5\uc0c1\uc2dc\ucf1c\uc11c": 718, "\ud5a5\uc0c1\uc744": 742, "\ud5a5\uc0c1\ud558\uace0": 747, "\ud5a5\ud6c4": 723, "\ud5c8\uc6a9\ub41c\ub2e4": 728, "\ud5c8\uc6a9\ud55c\ub2e4": 747, "\ud5e4\ud14c\ub85c\uadf8\ub798\ud504\ub294": 737, "\ud604\uc0c1\uc744": 727, "\ud604\uc7ac": [720, 721], "\ud604\uc7ac\ub294": [721, 742], "\ud611\uccd0\uc9c4": 754, "\ud615\uc2dd\uc73c\ub85c": 723, "\ud615\ud0dc\ub85c": [720, 723, 726, 727, 734], "\ud615\ud0dc\uc758": [727, 731], "\ud615\ud0dc\uc774\uace0": 723, "\ud638\ucd9c\ub418\uace0": 751, "\ud638\ucd9c\ub418\uc5b4\uc57c": 721, "\ud638\ucd9c\ub41c\ub2e4": 721, "\ud638\ucd9c\ub420": 749, "\ud638\ucd9c\ub85c": [734, 749], "\ud638\ucd9c\uc2dc": 736, "\ud638\ucd9c\uc774": 734, "\ud638\ucd9c\ud558\uae30": 721, "\ud638\ucd9c\ud558\ub294": [734, 738], "\ud638\ucd9c\ud558\uc9c0": 734, "\ud638\ucd9c\ud55c": 721, "\ud638\ucd9c\ud55c\ub2e4": 754, "\ud638\ucd9c\ud560": [731, 734, 741, 744], "\ud638\ucd9c\ud574\uc57c": 736, "\ud638\ud658\ub418\ub294": [739, 752, 754], "\ud638\ud658\ub41c\ub2e4": 747, "\ud655\ub960": 744, "\ud655\ub960\ub4e4": 756, "\ud655\ub960\uc5d0": 740, "\ud655\uc778\ub418\uba74": 750, "\ud655\uc778\ud558\ub294": [716, 750], "\ud655\uc778\ud558\uc790": [718, 744], "\ud655\uc778\ud55c\ub2e4": 741, "\ud655\uc778\ud560": [718, 756], "\ud655\uc7a5\ud558\ub294": [750, 755], "\ud655\uc7a5\ud574\uc11c": 723, "\ud658\uacbd": 723, "\ud658\uc601\ud55c\ub2e4": 748, "\ud65c\uc131\ud654": [747, 750], "\ud65c\uc131\ud654\uc2dc\ud0ac": 734, "\ud65c\uc131\ud654\ud558\uba74": 747, "\ud65c\uc131\ud654\ud574\uc11c": 723, "\ud65c\uc6a9\ud558\uae30": [747, 750], "\ud65c\uc6a9\ud558\ub294": 736, "\ud65c\uc6a9\ud55c": 756, "\ud65c\uc6a9\ud55c\ub2e4": 756, "\ud65c\uc6a9\ud560": 756, "\ud65c\uc6a9\ud574\uc11c": 723, "\ud68c": 756, "\ud68c\uc18c": 727, "\ud6a8\uacfc\uc801\uc73c\ub85c": 754, "\ud6a8\uc728\uc801\uc73c\ub85c": [730, 733], "\ud6a8\uc728\uc801\uc774\uace0": 747, "\ud6a8\uc728\uc801\uc774\ub2e4": 719, "\ud6a8\uc728\uc801\uc778": [733, 745, 750], "\ud6a8\uc728\uc801\uc778\ub370": 736, "\ud6c4": [723, 736, 738, 739, 746, 754], "\ud6c4\uc5d0": [718, 740], "\ud6c4\uc5d0\ub294": 750, "\ud6c4\uc758": [718, 723], "\ud6c4\uc790\uac00": 736, "\ud6c4\uc790\ub294": 721, "\ud6e8\uc52c": [736, 739], "\ud754\ud558\uac8c": 735, "\ud754\ud55c": 734, "\ud754\ud788": [726, 738, 749, 753, 754], "\ud76c\uc18c\ud589\ub82c\uacfc": 727, "\ud788\ub4e0": 756, "\ud835\udc3e": 764}, "titles": ["dgl", "dgl.DGLGraph", "dgl.data", "dgl.dataloading", "dgl.distributed", "dgl.function", "dgl.geometry", "dgl.multiprocessing", "dgl.ops", "dgl.optim", "dgl.sampling", "\ud83c\udd95 dgl.sparse", "API Reference", "Benchmark the performance of KNN algorithms", "dgl.nn (MXNet)", "dgl.nn (PyTorch)", "dgl.nn (TensorFlow)", "dgl.nn.functional", "dgl.transforms", "User-defined Functions", "Contribute to DGL", "DGL Foreign Function Interface (FFI)", "Environment Variables", "Frequently Asked Questions (FAQ)", "&lt;no title&gt;", "dgl.DGLGraph.__getitem__", "dgl.DGLGraph.add_edges", "dgl.DGLGraph.add_nodes", "dgl.DGLGraph.add_self_loop", "dgl.DGLGraph.adj", "dgl.DGLGraph.adj_external", "dgl.DGLGraph.adj_tensors", "dgl.DGLGraph.adjacency_matrix", "dgl.DGLGraph.apply_edges", "dgl.DGLGraph.apply_nodes", "dgl.DGLGraph.batch_num_edges", "dgl.DGLGraph.batch_num_nodes", "dgl.DGLGraph.batch_size", "dgl.DGLGraph.canonical_etypes", "dgl.DGLGraph.cpu", "dgl.DGLGraph.create_formats_", "dgl.DGLGraph.device", "dgl.DGLGraph.dstdata", "dgl.DGLGraph.dstnodes", "dgl.DGLGraph.dsttypes", "dgl.DGLGraph.edata", "dgl.DGLGraph.edge_attr_schemes", "dgl.DGLGraph.edge_ids", "dgl.DGLGraph.edge_subgraph", "dgl.DGLGraph.edge_type_subgraph", "dgl.DGLGraph.edges", "dgl.DGLGraph.etypes", "dgl.DGLGraph.filter_edges", "dgl.DGLGraph.filter_nodes", "dgl.DGLGraph.find_edges", "dgl.DGLGraph.formats", "dgl.DGLGraph.has_edges_between", "dgl.DGLGraph.has_nodes", "dgl.DGLGraph.idtype", "dgl.DGLGraph.in_degrees", "dgl.DGLGraph.in_edges", "dgl.DGLGraph.inc", "dgl.DGLGraph.incidence_matrix", "dgl.DGLGraph.int", "dgl.DGLGraph.is_homogeneous", "dgl.DGLGraph.is_multigraph", "dgl.DGLGraph.is_pinned", "dgl.DGLGraph.is_unibipartite", "dgl.DGLGraph.line_graph", "dgl.DGLGraph.local_scope", "dgl.DGLGraph.long", "dgl.DGLGraph.metagraph", "dgl.DGLGraph.multi_update_all", "dgl.DGLGraph.ndata", "dgl.DGLGraph.node_attr_schemes", "dgl.DGLGraph.node_type_subgraph", "dgl.DGLGraph.nodes", "dgl.DGLGraph.ntypes", "dgl.DGLGraph.num_dst_nodes", "dgl.DGLGraph.num_edges", "dgl.DGLGraph.num_nodes", "dgl.DGLGraph.num_src_nodes", "dgl.DGLGraph.number_of_dst_nodes", "dgl.DGLGraph.number_of_edges", "dgl.DGLGraph.number_of_nodes", "dgl.DGLGraph.number_of_src_nodes", "dgl.DGLGraph.out_degrees", "dgl.DGLGraph.out_edges", "dgl.DGLGraph.pin_memory_", "dgl.DGLGraph.predecessors", "dgl.DGLGraph.prop_edges", "dgl.DGLGraph.prop_nodes", "dgl.DGLGraph.pull", "dgl.DGLGraph.push", "dgl.DGLGraph.remove_edges", "dgl.DGLGraph.remove_nodes", "dgl.DGLGraph.remove_self_loop", "dgl.DGLGraph.reorder_graph", "dgl.DGLGraph.reverse", "dgl.DGLGraph.send_and_recv", "dgl.DGLGraph.set_batch_num_edges", "dgl.DGLGraph.set_batch_num_nodes", "dgl.DGLGraph.srcdata", "dgl.DGLGraph.srcnodes", "dgl.DGLGraph.srctypes", "dgl.DGLGraph.subgraph", "dgl.DGLGraph.successors", "dgl.DGLGraph.to", "dgl.DGLGraph.to_canonical_etype", "dgl.DGLGraph.to_cugraph", "dgl.DGLGraph.to_simple", "dgl.DGLGraph.unpin_memory_", "dgl.DGLGraph.update_all", "dgl.add_edges", "dgl.add_nodes", "dgl.add_reverse_edges", "dgl.add_self_loop", "dgl.adj_product_graph", "dgl.adj_sum_graph", "dgl.apply_each", "dgl.batch", "dgl.bfs_edges_generator", "dgl.bfs_nodes_generator", "dgl.bipartite_from_networkx", "dgl.bipartite_from_scipy", "dgl.block_to_graph", "dgl.broadcast_edges", "dgl.broadcast_nodes", "dgl.compact_graphs", "dgl.create_block", "AIFBDataset", "AMDataset", "ActorDataset", "AmazonCoBuyComputerDataset", "AmazonCoBuyPhotoDataset", "AsGraphPredDataset", "AsLinkPredDataset", "AsNodePredDataset", "BA2MotifDataset", "BACommunityDataset", "BAShapeDataset", "BGSDataset", "BitcoinOTCDataset", "CLUSTERDataset", "CSVDataset", "ChameleonDataset", "CiteseerGraphDataset", "CoauthorCSDataset", "CoauthorPhysicsDataset", "CoraFullDataset", "CoraGraphDataset", "CornellDataset", "DGLDataset", "FB15k237Dataset", "FB15kDataset", "FakeNewsDataset", "FlickrDataset", "FraudAmazonDataset", "FraudDataset", "FraudYelpDataset", "GDELTDataset", "GINDataset", "ICEWS18Dataset", "KarateClubDataset", "LegacyTUDataset", "MUTAGDataset", "MiniGCDataset", "PATTERNDataset", "PPIDataset", "PubmedGraphDataset", "QM7bDataset", "QM9Dataset", "QM9EdgeDataset", "RedditDataset", "SBMMixtureDataset", "SSTDataset", "SquirrelDataset", "TUDataset", "TexasDataset", "TreeCycleDataset", "TreeGridDataset", "WN18Dataset", "WikiCSDataset", "WisconsinDataset", "YelpDataset", "ZINCDataset", "Subset", "add_node_property_split", "add_nodepred_split", "check_sha1", "download", "extract_archive", "get_download_dir", "load_info", "load_labels", "mask_nodes_by_property", "save_info", "split_dataset", "dgl.dataloading.BlockSampler", "ClusterGCNSampler", "DataLoader", "DistEdgeDataLoader", "DistNodeDataLoader", "GraphDataLoader", "LaborSampler", "MultiLayerFullNeighborSampler", "NeighborSampler", "SAINTSampler", "Sampler", "ShaDowKHopSampler", "dgl.dataloading.as_edge_prediction_sampler", "LazyFeature", "set_dst_lazy_features", "set_edge_lazy_features", "set_node_lazy_features", "set_src_lazy_features", "GlobalUniform", "PerSourceUniform", "Uniform", "dgl.dfs_edges_generator", "dgl.dfs_labeled_edges_generator", "dgl.distributed.edge_split", "dgl.distributed.find_edges", "dgl.distributed.in_subgraph", "dgl.distributed.initialize", "dgl.distributed.load_partition", "dgl.distributed.load_partition_book", "dgl.distributed.load_partition_feats", "dgl.distributed.node_split", "dgl.distributed.partition_graph", "dgl.distributed.sample_etype_neighbors", "dgl.distributed.sample_neighbors", "dgl.double_radius_node_labeling", "dgl.edge_homophily", "dgl.edge_subgraph", "dgl.edge_type_subgraph", "dgl.from_cugraph", "dgl.from_networkx", "dgl.from_scipy", "dgl.function.copy_e", "dgl.function.copy_u", "dgl.function.e_add_u", "dgl.function.e_add_v", "dgl.function.e_div_u", "dgl.function.e_div_v", "dgl.function.e_dot_u", "dgl.function.e_dot_v", "dgl.function.e_mul_u", "dgl.function.e_mul_v", "dgl.function.e_sub_u", "dgl.function.e_sub_v", "dgl.function.max", "dgl.function.mean", "dgl.function.min", "dgl.function.sum", "dgl.function.u_add_e", "dgl.function.u_add_v", "dgl.function.u_div_e", "dgl.function.u_div_v", "dgl.function.u_dot_e", "dgl.function.u_dot_v", "dgl.function.u_mul_e", "dgl.function.u_mul_v", "dgl.function.u_sub_e", "dgl.function.u_sub_v", "dgl.function.v_add_e", "dgl.function.v_add_u", "dgl.function.v_div_e", "dgl.function.v_div_u", "dgl.function.v_dot_e", "dgl.function.v_dot_u", "dgl.function.v_mul_e", "dgl.function.v_mul_u", "dgl.function.v_sub_e", "dgl.function.v_sub_u", "dgl.graph", "dgl.heterograph", "dgl.in_subgraph", "dgl.is_libxsmm_enabled", "dgl.khop_adj", "dgl.khop_graph", "dgl.khop_in_subgraph", "dgl.khop_out_subgraph", "dgl.knn_graph", "dgl.lap_pe", "dgl.laplacian_lambda_max", "dgl.line_graph", "dgl.linkx_homophily", "dgl.load_graphs", "dgl.max_edges", "dgl.max_nodes", "dgl.mean_edges", "dgl.mean_nodes", "dgl.merge", "dgl.metapath_reachable_graph", "dgl.metis_partition", "dgl.metis_partition_assignment", "dgl.multiprocessing.pytorch.call_once_and_share", "dgl.multiprocessing.pytorch.shared_tensor", "dgl.nn.functional.edge_softmax", "HeteroGraphConv", "AGNNConv", "APPNPConv", "ChebConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "EdgeConv", "GATConv", "GINConv", "GMMConv", "GatedGraphConv", "GraphConv", "NNConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SortPooling", "SumPooling", "Sequential", "DeepWalk", "HeteroEmbedding", "HeteroGraphConv", "HeteroLinear", "MetaPath2Vec", "TypedLinear", "AGNNConv", "APPNPConv", "AtomicConv", "CFConv", "ChebConv", "CuGraphGATConv", "CuGraphRelGraphConv", "CuGraphSAGEConv", "DGNConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "DotGatConv", "EGATConv", "EGNNConv", "EdgeConv", "EdgeGATConv", "EdgeWeightNorm", "GATConv", "GATv2Conv", "GCN2Conv", "GINConv", "GINEConv", "GMMConv", "GatedGraphConv", "GraphConv", "GroupRevRes", "HGTConv", "NNConv", "PNAConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "TWIRLSConv", "TWIRLSUnfoldingAndAttention", "GNNExplainer", "HeteroGNNExplainer", "HeteroSubgraphX", "SubgraphX", "KNNGraph", "RadiusGraph", "SegmentedKNNGraph", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SetTransformerDecoder", "SetTransformerEncoder", "SortPooling", "SumPooling", "WeightAndSum", "BiasedMultiheadAttention", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "BiasedMHA", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "LapPosEncoder", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "EdgePredictor", "TransE", "TransR", "NodeEmbedding", "JumpingKnowledge", "LabelPropagation", "Sequential", "WeightBasis", "APPNPConv", "ChebConv", "GATConv", "GINConv", "GraphConv", "RelGraphConv", "SAGEConv", "SGConv", "AvgPooling", "GlobalAttentionPooling", "HeteroGraphConv", "MaxPooling", "SortPooling", "SumPooling", "dgl.node_homophily", "dgl.node_subgraph", "dgl.node_type_subgraph", "dgl.norm_by_dst", "dgl.ops.copy_e_max", "dgl.ops.copy_e_mean", "dgl.ops.copy_e_min", "dgl.ops.copy_e_sum", "dgl.ops.copy_u", "dgl.ops.copy_u_max", "dgl.ops.copy_u_mean", "dgl.ops.copy_u_min", "dgl.ops.copy_u_sum", "dgl.ops.copy_v", "dgl.ops.e_add_u", "dgl.ops.e_add_v", "dgl.ops.e_div_u", "dgl.ops.e_div_v", "dgl.ops.e_dot_u", "dgl.ops.e_dot_v", "dgl.ops.e_mul_u", "dgl.ops.e_mul_v", "dgl.ops.e_sub_u", "dgl.ops.e_sub_v", "dgl.ops.gather_mm", "dgl.ops.gsddmm", "dgl.ops.gspmm", "dgl.ops.segment_mm", "dgl.ops.segment_reduce", "dgl.ops.u_add_e", "dgl.ops.u_add_e_max", "dgl.ops.u_add_e_mean", "dgl.ops.u_add_e_min", "dgl.ops.u_add_e_sum", "dgl.ops.u_add_v", "dgl.ops.u_div_e", "dgl.ops.u_div_e_max", "dgl.ops.u_div_e_mean", "dgl.ops.u_div_e_min", "dgl.ops.u_div_e_sum", "dgl.ops.u_div_v", "dgl.ops.u_dot_e", "dgl.ops.u_dot_v", "dgl.ops.u_mul_e", "dgl.ops.u_mul_e_max", "dgl.ops.u_mul_e_mean", "dgl.ops.u_mul_e_min", "dgl.ops.u_mul_e_sum", "dgl.ops.u_mul_v", "dgl.ops.u_sub_e", "dgl.ops.u_sub_e_max", "dgl.ops.u_sub_e_mean", "dgl.ops.u_sub_e_min", "dgl.ops.u_sub_e_sum", "dgl.ops.u_sub_v", "dgl.ops.v_add_e", "dgl.ops.v_add_u", "dgl.ops.v_div_e", "dgl.ops.v_div_u", "dgl.ops.v_dot_e", "dgl.ops.v_dot_u", "dgl.ops.v_mul_e", "dgl.ops.v_mul_u", "dgl.ops.v_sub_e", "dgl.ops.v_sub_u", "dgl.out_subgraph", "dgl.partition_graph_with_halo", "dgl.prop_edges", "dgl.prop_edges_dfs", "dgl.prop_nodes", "dgl.prop_nodes_bfs", "dgl.prop_nodes_topo", "dgl.radius_graph", "dgl.rand_bipartite", "dgl.rand_graph", "dgl.random_walk_pe", "dgl.readout_edges", "dgl.readout_nodes", "dgl.remove_edges", "dgl.remove_nodes", "dgl.remove_self_loop", "dgl.reorder_graph", "dgl.reverse", "dgl.sampling.PinSAGESampler", "dgl.sampling.global_uniform_negative_sampling", "dgl.sampling.node2vec_random_walk", "dgl.sampling.pack_traces", "dgl.sampling.random_walk", "dgl.sampling.sample_labors", "dgl.sampling.sample_neighbors", "dgl.sampling.sample_neighbors_biased", "dgl.sampling.select_topk", "dgl.save_graphs", "dgl.seed", "dgl.segmented_knn_graph", "dgl.shortest_dist", "dgl.slice_batch", "dgl.softmax_edges", "dgl.softmax_nodes", "dgl.sort_csc_by_tag", "dgl.sort_csr_by_tag", "dgl.sparse.SparseMatrix.T", "dgl.sparse.SparseMatrix.coalesce", "dgl.sparse.SparseMatrix.col", "dgl.sparse.SparseMatrix.coo", "dgl.sparse.SparseMatrix.cpu", "dgl.sparse.SparseMatrix.csc", "dgl.sparse.SparseMatrix.csr", "dgl.sparse.SparseMatrix.cuda", "dgl.sparse.SparseMatrix.device", "dgl.sparse.SparseMatrix.double", "dgl.sparse.SparseMatrix.dtype", "dgl.sparse.SparseMatrix.float", "dgl.sparse.SparseMatrix.has_duplicate", "dgl.sparse.SparseMatrix.indices", "dgl.sparse.SparseMatrix.int", "dgl.sparse.SparseMatrix.long", "dgl.sparse.SparseMatrix.neg", "dgl.sparse.SparseMatrix.nnz", "dgl.sparse.SparseMatrix.reduce", "dgl.sparse.SparseMatrix.row", "dgl.sparse.SparseMatrix.shape", "dgl.sparse.SparseMatrix.smax", "dgl.sparse.SparseMatrix.smean", "dgl.sparse.SparseMatrix.smin", "dgl.sparse.SparseMatrix.softmax", "dgl.sparse.SparseMatrix.sum", "dgl.sparse.SparseMatrix.t", "dgl.sparse.SparseMatrix.to", "dgl.sparse.SparseMatrix.to_dense", "dgl.sparse.SparseMatrix.transpose", "dgl.sparse.SparseMatrix.val", "dgl.sparse.add", "dgl.sparse.bsddmm", "dgl.sparse.bspmm", "dgl.sparse.diag", "dgl.sparse.div", "dgl.sparse.from_coo", "dgl.sparse.from_csc", "dgl.sparse.from_csr", "dgl.sparse.identity", "dgl.sparse.matmul", "dgl.sparse.mul", "dgl.sparse.power", "dgl.sparse.sddmm", "dgl.sparse.softmax", "dgl.sparse.sp_add_v", "dgl.sparse.sp_broadcast_v", "dgl.sparse.sp_div_v", "dgl.sparse.sp_mul_v", "dgl.sparse.sp_sub_v", "dgl.sparse.spmatrix", "dgl.sparse.spmm", "dgl.sparse.spspmm", "dgl.sparse.sub", "dgl.sparse.val_like", "dgl.sum_edges", "dgl.sum_nodes", "dgl.svd_pe", "dgl.to_bidirected", "dgl.to_block", "dgl.to_cugraph", "dgl.to_double", "dgl.to_float", "dgl.to_half", "dgl.to_heterogeneous", "dgl.to_homogeneous", "dgl.to_networkx", "dgl.to_simple", "dgl.to_simple_graph", "dgl.topk_edges", "dgl.topk_nodes", "dgl.topological_nodes_generator", "AddEdge", "AddMetaPaths", "AddReverse", "AddSelfLoop", "BaseTransform", "Compose", "DropEdge", "DropNode", "FeatMask", "GCNNorm", "GDC", "HeatKernel", "KHopGraph", "LapPE", "LineGraph", "NodeShuffle", "PPR", "RandomWalkPE", "RemoveSelfLoop", "RowFeatNormalizer", "SIGNDiffusion", "SVDPE", "ToLevi", "ToSimple", "dgl.udf.EdgeBatch.batch_size", "dgl.udf.EdgeBatch.data", "dgl.udf.EdgeBatch.dst", "dgl.udf.EdgeBatch.edges", "dgl.udf.EdgeBatch.src", "dgl.udf.NodeBatch.batch_size", "dgl.udf.NodeBatch.data", "dgl.udf.NodeBatch.mailbox", "dgl.udf.NodeBatch.nodes", "dgl.unbatch", "dgl.use_libxsmm", "Chapter 4: Graph Data Pipeline", "4.1 DGLDataset class", "4.2 Download raw data (optional)", "4.6 Loading data from CSV files", "4.5 Loading OGB datasets using <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> package", "4.3 Process data", "4.4 Save and load data", "Chapter 7: Distributed Training", "7.3 Programming APIs", "7.5 Heterogeneous Graph Under The Hood", "7.4 Advanced Graph Partitioning", "7.1 Data Preprocessing", "7.2 Tools for launching distributed training/inference", "Chapter 1: Graph", "1.1 Some Basic Definitions about Graphs (Graphs 101)", "1.4 Creating Graphs from External Sources", "1.3 Node and Edge Features", "1.6 Using DGLGraph on a GPU", "1.2 Graphs, Nodes, and Edges", "1.5 Heterogeneous Graphs", "User Guide", "Chapter 2: Message Passing", "2.1 Built-in Functions and Message Passing APIs", "2.2 Writing Efficient Message Passing Code", "2.5 Message Passing on Heterogeneous Graph", "2.3 Apply Message Passing On Part Of The Graph", "Chapter 6: Stochastic Training on Large Graphs", "6.4 Implementing Custom Graph Samplers", "6.2 Training GNN for Edge Classification with Neighborhood Sampling", "6.7 Using GPU for Neighborhood Sampling", "6.6 Exact Offline Inference on Large Graphs", "6.3 Training GNN for Link Prediction with Neighborhood Sampling", "6.5 Implementing Custom GNN Module for Mini-batch Training", "6.1 Training GNN for Node Classification with Neighborhood Sampling", "6.8 Feature Prefetching", "Chapter 8: Mixed Precision Training", "Chapter 3: Building GNN Modules", "3.1 DGL NN Module Construction Function", "3.2 DGL NN Module Forward Function", "3.3 Heterogeneous GraphConv Module", "Chapter 5: Training Graph Neural Networks", "5.2 Edge Classification/Regression", "5.5 Use of Edge Weights", "5.4 Graph Classification", "5.3 Link Prediction", "5.1 Node Classification/Regression", "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053", "4.1 DGLDataset\u7c7b", "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09", "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6", "4.3 \u5904\u7406\u6570\u636e", "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e", "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3", "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API", "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406", "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177", "\u7b2c1\u7ae0\uff1a\u56fe", "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5", "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe", "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81", "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph", "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9", "1.5 \u5f02\u6784\u56fe", "\u7528\u6237\u6307\u5357", "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f", "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API", "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801", "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3", "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668", "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad", "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757", "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757", "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570", "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570", "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757", "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc", "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52", "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd", "5.4 \u6574\u56fe\u5206\u7c7b", "5.3 \u94fe\u63a5\u9884\u6d4b", "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52", "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778", "4.1 DGLDataset \ud074\ub798\uc2a4", "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)", "4.5 <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30", "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1", "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529", "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5", "7.2 \ubd84\uc0b0 APIs", "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30", "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac", "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4", "1\uc7a5: \uadf8\ub798\ud504", "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)", "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30", "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98", "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30", "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0", "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)", "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc", "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)", "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4", "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30", "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95", "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec", "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30", "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5", "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30", "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30", "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860", "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30", "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "8\uc7a5: Mixed Precision \ud559\uc2b5", "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30", "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218", "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218", "3.3 Heterogeneous GraphConv \ubaa8\ub4c8", "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30", "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)", "5.4 \uadf8\ub798\ud504 \ubd84\ub958", "5.3 \ub9c1\ud06c \uc608\uce21", "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)", "Welcome to Deep Graph Library Tutorials and Documentation", "Install and Setup", "Building a Graph Convolutional Network Using Sparse Matrices", "Graph Diffusion in Graph Neural Networks", "Graph Transformer in a Nutshell", "Hypergraph Neural Networks", "\ud83c\udd95 Tutorials: dgl.sparse", "Quickstart", "Performance Benchmarks", "Resources", "Computation times", "Node Classification with DGL", "How Does DGL Represent A Graph?", "Write your own GNN module", "Link Prediction using Graph Neural Networks", "Training a GNN for Graph Classification", "Make Your Own Dataset", "A Blitz Introduction to DGL", "Computation times", "CPU Best Practices", "Training on CPUs", "Computation times", "Distributed Node Classification", "Distributed Link Prediction", "Distributed training", "Computation times", "Introduction of Neighbor Sampling for GNN Training", "Training GNN with Neighbor Sampling for Node Classification", "Stochastic Training of GNN for Link Prediction", "Writing GNN Modules for Stochastic GNN Training", "Stochastic Training of GNNs", "Computation times", "Graph Convolutional Network", "Relational Graph Convolutional Network", "Line Graph Neural Network", "Understand Graph Attention Network", "Graph neural networks and its variants", "Computation times", "Tree-LSTM in DGL", "Batching many small graphs", "Computation times", "Generative Models of Graphs", "Generative models", "Computation times", "Capsule Network", "Transformer as a Graph Neural Network", "Revisit classic models from a graph perspective", "Computation times", "Paper Study with DGL", "Computation times", "Single Machine Multi-GPU Minibatch Graph Classification", "Single Machine Multi-GPU Minibatch Node Classification", "Training on Multiple GPUs", "Computation times"], "titleterms": {"": [662, 768, 769, 770, 772, 783, 784, 792], "1": [629, 639, 641, 642, 643, 644, 645, 646, 647, 650, 661, 665, 673, 675, 682, 685, 686, 687, 688, 689, 690, 693, 703, 705, 713, 715, 722, 723, 726, 727, 728, 729, 730, 731, 734, 746, 749, 756, 764, 792, 795, 798, 801], "101": [642, 726], "1\uc7a5": 725, "2": [630, 639, 640, 646, 649, 650, 651, 652, 653, 656, 666, 669, 676, 681, 689, 693, 694, 695, 696, 699, 706, 709, 716, 721, 722, 730, 734, 735, 736, 737, 738, 741, 750, 753, 764, 792, 795, 798, 801], "2\uc7a5": 733, "3": [633, 636, 644, 653, 659, 664, 665, 666, 667, 672, 678, 683, 687, 696, 701, 705, 706, 707, 712, 718, 722, 728, 738, 744, 749, 750, 751, 755, 765, 792, 795, 798, 801], "3\uc7a5": 748, "4": [628, 629, 630, 631, 632, 633, 634, 638, 643, 655, 671, 675, 676, 677, 678, 679, 686, 698, 711, 715, 716, 717, 718, 719, 724, 727, 735, 740, 754, 765, 792], "4\uc7a5": 714, "5": [632, 637, 647, 652, 660, 668, 669, 670, 671, 672, 673, 677, 690, 695, 702, 709, 710, 711, 712, 713, 717, 731, 737, 745, 753, 754, 755, 756, 765], "5\uc7a5": 752, "6": [631, 645, 654, 655, 656, 657, 658, 659, 660, 661, 662, 688, 698, 699, 700, 701, 702, 703, 729, 740, 741, 742, 743, 744, 745, 746, 765], "6\uc7a5": 739, "7": [635, 636, 637, 638, 639, 640, 657, 681, 682, 683, 721, 722, 723, 724, 742], "7\uc7a5": 720, "8": [662, 663], "8\uc7a5": 747, "A": [769, 772, 774, 790], "For": [656, 659, 661], "Of": 653, "On": 653, "One": 791, "The": [637, 653, 790, 795, 798], "__getitem__": 25, "about": 642, "abstract": 791, "access": [636, 637, 779], "action": 798, "activ": [11, 764], "actordataset": 132, "adapt": [2, 656, 659, 661, 802], "add": [552, 798], "add_edg": [26, 113], "add_nod": [27, 114], "add_node_property_split": 187, "add_nodepred_split": 188, "add_reverse_edg": 115, "add_self_loop": [28, 116], "addedg": 593, "addmetapath": 594, "addrevers": 595, "addselfloop": 596, "adj": 29, "adj_extern": 30, "adj_product_graph": 117, "adj_sum_graph": 118, "adj_tensor": 31, "adjac": [0, 1], "adjacency_matrix": 32, "advanc": 638, "after": [637, 666], "aggreg": 802, "agnnconv": [301, 331], "aifbdataset": 130, "algorithm": [13, 638, 791], "all": 802, "amazoncobuycomputerdataset": 133, "amazoncobuyphotodataset": 134, "amdataset": 131, "an": [669, 791], "api": [8, 12, 636, 639, 650, 721, 795], "api\ub4e4": 734, "appli": 653, "apply_each": 119, "apply_edg": [33, 771], "apply_nod": 34, "appnpconv": [302, 332, 406], "approach": 654, "as_edge_prediction_sampl": 210, "asgraphpreddataset": 135, "ask": 23, "aslinkpreddataset": 136, "asnodepreddataset": 137, "assign": 769, "atomicconv": 333, "attent": [761, 792, 802], "attribut": [11, 764], "avgpool": [318, 374, 414], "ba2motifdataset": 138, "backend": [22, 758], "bacommunitydataset": 139, "balanc": 639, "base": [2, 657], "basetransform": 597, "bashapedataset": 140, "basic": 642, "batch": [0, 1, 120, 660, 671, 754, 772, 779, 780, 791, 795, 796, 805], "batch_num_edg": 35, "batch_num_nod": 36, "batch_siz": [37, 617, 622], "benchmark": [13, 765], "best": [770, 776], "bfloat16": 663, "bfs_edges_gener": 121, "bfs_nodes_gener": 122, "bgsdataset": 141, "biasedmha": 390, "biasedmultiheadattent": 383, "binari": [643, 647, 791], "bipartit": [660, 740, 745, 786], "bipartite_from_networkx": 123, "bipartite_from_scipi": 124, "bitcoinotcdataset": 142, "blitz": 774, "block_to_graph": 125, "blocksampl": 198, "book": 4, "both": 786, "brief": 790, "broadcast": [11, 764], "broadcast_edg": 126, "broadcast_nod": 127, "bsddmm": 553, "bspmm": 554, "bucket": 19, "build": [20, 664, 759, 802], "built": [5, 650, 802], "builtin": 662, "call_once_and_shar": 297, "canonical_etyp": 38, "capsul": 801, "cell": 795, "cfconv": 334, "chain": 791, "chameleondataset": 145, "chang": 20, "chapter": [628, 635, 641, 649, 654, 663, 664, 668], "chebconv": [303, 335, 407], "check": 666, "check_sha1": 189, "choos": 798, "chunk": 639, "citeseergraphdataset": 146, "class": [2, 3, 11, 629, 798, 802], "classic": [803, 805], "classif": [633, 656, 661, 669, 671, 673, 768, 772, 773, 779, 784, 807, 808], "client": 779, "clusterdataset": 143, "clustergcnsampl": 199, "coalesc": 522, "coauthorcsdataset": 147, "coauthorphysicsdataset": 148, "code": [20, 651], "col": 523, "comma": [643, 647, 727, 731], "commun": [779, 780, 791], "compact_graph": 128, "complet": [15, 791], "compos": 598, "comput": [1, 671, 767, 775, 778, 782, 784, 788, 794, 797, 800, 802, 804, 806, 810], "conclus": [13, 784, 785], "conda": 758, "configur": 22, "construct": [665, 769], "contain": 21, "contribut": [20, 757], "control": 1, "conv": [14, 15, 16], "convers": 637, "convert": 647, "convolut": [759, 768, 789, 790], "coo": 524, "copy_": 239, "copy_e_max": 424, "copy_e_mean": 425, "copy_e_min": 426, "copy_e_sum": 427, "copy_u": [240, 428], "copy_u_max": 429, "copy_u_mean": 430, "copy_u_min": 431, "copy_u_sum": 432, "copy_v": 433, "cora": [768, 791, 792], "corafulldataset": 149, "coragraphdataset": 150, "core": 20, "cornelldataset": 151, "cpu": [39, 525, 663, 776, 777], "creat": [0, 643, 647, 764, 773, 790], "create_block": 129, "create_formats_": 40, "creation": [11, 636], "csc": 526, "csr": 527, "csv": [631, 643, 647, 686, 690, 727, 731, 773], "csvdataset": [144, 773], "cuda": [528, 657], "cugraph": 15, "cugraphgatconv": 336, "cugraphrelgraphconv": 337, "cugraphsageconv": 338, "custom": [631, 655, 660, 662, 770], "data": [2, 8, 20, 22, 618, 623, 628, 630, 631, 633, 634, 636, 637, 639, 656, 657, 659, 661, 671, 762, 772, 784, 785, 807], "dataload": [3, 4, 198, 200, 210], "dataset": [2, 631, 632, 633, 768, 773, 784, 785, 790, 791, 795, 802, 808], "deep": 757, "deepwalk": 325, "defin": [19, 21, 656, 659, 661, 768, 770, 771, 772, 779, 780, 784, 785, 790, 795, 801, 808], "definit": [642, 671], "deg": 791, "degre": 19, "degreeencod": [384, 391], "dens": [14, 15], "densechebconv": [304, 340], "densegraphconv": [305, 341], "densesageconv": [306, 342], "depend": 784, "descript": [6, 331, 332, 333, 334, 339, 342, 343, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 359, 360, 362, 363, 364, 365, 366, 398, 399, 400, 402], "destin": 798, "detect": 791, "develop": 20, "devic": [1, 41, 529], "dfs_edges_gener": 219, "dfs_labeled_edges_gener": 220, "dgl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 21, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 198, 210, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 636, 643, 647, 657, 662, 665, 666, 686, 705, 721, 727, 731, 742, 749, 750, 763, 764, 768, 769, 772, 774, 784, 785, 786, 789, 790, 791, 792, 795, 802, 805], "dgldataset": [152, 629, 715, 773], "dgldataset\u7c7b": 675, "dglgraph": [1, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 645, 729], "dglgraph\ub85c": 723, "dgl\u4e8c\u8fdb\u5236\u683c\u5f0f": 690, "dgl\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": 681, "dgmg": 798, "dgnconv": 339, "diag": 555, "diagon": 764, "differ": [669, 758], "diffus": 760, "disk": [643, 647], "dispatch": 639, "distedgedataload": 201, "distembed": [636, 721], "distgraph": [636, 721], "distnodedataload": 202, "distribut": [4, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 635, 636, 637, 639, 640, 721, 779, 780, 781, 807], "div": 556, "doc": 20, "document": [20, 757], "doe": 769, "dotgatconv": 343, "doubl": 530, "double_radius_node_label": 232, "download": [190, 630], "dropedg": 599, "dropnod": 600, "dst": 619, "dstdata": 42, "dstnode": 43, "dsttype": 44, "dtype": 531, "dure": [637, 655], "dynam": 798, "e_add_u": [241, 434], "e_add_v": [242, 435], "e_div_u": [243, 436], "e_div_v": [244, 437], "e_dot_u": [245, 438], "e_dot_v": [246, 439], "e_mul_u": [247, 440], "e_mul_v": [248, 441], "e_sub_u": [249, 442], "e_sub_v": [250, 443], "each": 807, "edata": 45, "edg": [1, 2, 19, 50, 620, 636, 643, 644, 646, 647, 655, 656, 669, 670, 686, 727, 769, 785, 798, 802], "edge_attr_schem": 46, "edge_homophili": 233, "edge_id": 47, "edge_softmax": 299, "edge_split": 221, "edge_subgraph": [48, 234], "edge_type_subgraph": [49, 235], "edgebatch": [617, 618, 619, 620, 621], "edgeconv": [307, 346], "edgedata": 631, "edgegatconv": 347, "edgepredictor": 398, "edgeweightnorm": 348, "editori": 20, "effici": 651, "egatconv": 344, "egnnconv": 345, "egtlay": [385, 392], "element": 764, "elementwis": [11, 764], "embed": [4, 9, 15, 798], "enabl": 662, "encod": [0, 798], "end": [663, 747], "environ": [22, 779, 780], "equat": 792, "etyp": 51, "evalu": [762, 785], "even": 770, "everyth": 792, "exact": 658, "exampl": [20, 299, 639, 663], "exclud": 655, "execut": 802, "exercis": 764, "exist": 669, "extern": 643, "extract": 0, "extract_arch": 191, "f": 791, "fakenewsdataset": 155, "faq": 23, "farthest": 6, "fb15k237dataset": 153, "fb15kdataset": 154, "featmask": 601, "featur": [1, 3, 20, 631, 644, 662, 666, 769, 771], "ffi": 21, "file": 631, "filter_edg": 52, "filter_nod": 53, "find_edg": [54, 222], "flickrdataset": 156, "float": 532, "flow": 798, "folder": 631, "foreign": 21, "format": [1, 55, 638, 639, 643, 647], "formula": 789, "forward": [666, 750], "fraudamazondataset": 157, "frauddataset": 158, "fraudyelpdataset": 159, "frequent": 23, "from": [631, 643, 647, 656, 669, 758, 773, 789, 791, 803, 805], "from_coo": 557, "from_csc": 558, "from_csr": 559, "from_cugraph": 236, "from_networkx": 237, "from_scipi": 238, "full": [631, 786, 790], "function": [3, 5, 8, 11, 17, 19, 21, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 299, 650, 657, 665, 666, 764, 770, 801, 802, 807], "further": 655, "fuse": 791, "gat": 792, "gatconv": [308, 349, 408], "gatedgraphconv": [311, 355], "gather_mm": 444, "gathermm": 8, "gatv2conv": 350, "gcn": [759, 768, 789, 790, 792], "gcn2conv": 351, "gcnnorm": 602, "gdc": 603, "gdeltdataset": 160, "gener": [20, 798, 799, 805], "geometri": 6, "get": [757, 779, 780], "get_download_dir": 192, "ginconv": [309, 352, 409], "gindataset": 161, "gineconv": 353, "git": 20, "github": 20, "global": [14, 15, 16, 22], "global_uniform_negative_sampl": 504, "globalattentionpool": [319, 375, 415], "globaluniform": 216, "gml": [643, 686, 727], "gmmconv": [310, 354], "gnn": [656, 659, 660, 661, 664, 704, 741, 744, 745, 746, 748, 760, 768, 770, 771, 772, 779, 780, 783, 784, 785, 786, 787], "gnnexplain": 367, "gpu": [645, 657, 742, 768, 807, 808, 809], "gpu\uc5d0\uc11c": 729, "graph": [0, 1, 2, 4, 15, 275, 299, 628, 631, 633, 636, 637, 638, 639, 640, 641, 642, 643, 646, 647, 652, 653, 654, 655, 656, 658, 659, 660, 661, 666, 668, 669, 671, 672, 673, 731, 745, 750, 757, 759, 760, 761, 768, 769, 771, 772, 773, 779, 780, 786, 789, 790, 791, 792, 793, 796, 798, 801, 802, 803, 805, 807], "graphconv": [312, 356, 410, 667, 751], "graphdata": 631, "graphdataload": 203, "graphormerlay": [386, 393], "graphsag": 771, "group": 807, "grouprevr": 357, "gsddmm": [8, 445], "gspmm": [8, 446], "guid": 648, "half": [663, 747], "handl": [784, 790], "has_dupl": 533, "has_edges_between": 56, "has_nod": 57, "head": [761, 792, 802], "heatkernel": 604, "heteroembed": 326, "heterogen": [14, 15, 16, 299, 631, 637, 647, 652, 655, 656, 659, 660, 661, 667, 668, 669, 671, 672, 673, 722, 723, 731, 740, 741, 744, 745, 746, 751, 752, 753, 754, 755, 756], "heterognnexplain": 368, "heterograph": [276, 647], "heterographconv": [300, 327, 416, 667, 751], "heterographconv\u7684\u5b9e\u73b0\u903b\u8f91": 707, "heterolinear": 328, "heterosubgraphx": 369, "hgnn": 762, "hgtconv": 358, "homogen": [299, 647, 660, 745], "homophili": 0, "hood": 637, "host": 20, "how": [769, 784, 802], "hyper": 776, "hypergraph": 762, "i": 791, "icews18dataset": 162, "id": [1, 637, 639, 723, 779, 780], "idea": [790, 791, 801], "ident": 560, "idtyp": 58, "implement": [655, 658, 660, 667, 669, 789, 790, 791, 798, 801, 802], "in_degre": 59, "in_edg": 60, "in_subgraph": [223, 277], "inc": 61, "incid": 1, "incidence_matrix": 62, "index": 757, "indic": 534, "infer": [640, 658, 780, 791], "inform": 1, "initi": [4, 224, 636, 764, 779, 780, 801, 807], "input": 638, "instal": [638, 758], "int": [63, 535], "integr": 765, "intel": 776, "interact": 792, "interfac": [20, 21], "introduc": 792, "introduct": [774, 783, 786, 790, 798], "is_homogen": 64, "is_libxsmm_en": 278, "is_multigraph": 65, "is_pin": 66, "is_unibipartit": 67, "its": [793, 805], "job": 779, "json": [643, 686, 727], "jumpingknowledg": 402, "karateclubdataset": 163, "kei": [790, 791, 801], "khop_adj": 279, "khop_graph": 280, "khop_in_subgraph": 281, "khop_out_subgraph": 282, "khopgraph": 605, "knn": 13, "knn_graph": 283, "knngraph": 371, "knowledg": 15, "label": 631, "labelpropag": 403, "laborsampl": 204, "lap_p": 284, "laplacian_lambda_max": 285, "lapp": 606, "lapposencod": 394, "larg": [654, 658], "launch": [640, 779], "layer": [14, 15, 16, 759, 761, 762, 790, 791, 802], "lazyfeatur": 211, "learn": [14, 15, 16, 785, 792], "legacytudataset": 164, "less": 631, "level": 631, "lgnn": 791, "librari": [643, 757], "line": 791, "line_graph": [68, 286], "linear": [11, 764], "linegraph": 607, "link": [3, 15, 633, 659, 672, 771, 773, 780, 785, 790], "linkx_homophili": 287, "linux": 758, "load": [4, 631, 632, 634, 637, 639, 643, 647, 671, 762, 768, 769, 771, 772, 784, 785, 808], "load_graph": 288, "load_info": 193, "load_label": 194, "load_partit": 225, "load_partition_book": 226, "load_partition_feat": 227, "loader": [656, 657, 659, 661, 772, 784, 785, 807], "local": 20, "local_scop": 69, "logic": 667, "long": [70, 536], "loop": [656, 659, 661, 669, 671, 672, 673, 753, 756, 770, 771, 772, 779, 780, 784, 785, 790, 795], "lsc": 639, "lstm": 795, "machin": [807, 808], "maco": 758, "mag240m": 639, "mailbox": 624, "main": [795, 798, 802, 807], "make": [639, 773], "mani": [796, 805], "manipul": 1, "map": 639, "mask_nodes_by_properti": 195, "match": 6, "matmul": 561, "matric": 759, "matrix": [1, 11, 764, 791], "max": 251, "max_edg": 289, "max_nod": 290, "maxpool": [320, 376, 417], "mean": 252, "mean_edg": 291, "mean_nod": 292, "measur": 0, "merg": 293, "messag": [0, 5, 8, 19, 649, 650, 651, 652, 653, 663, 666, 670, 733, 770, 783, 789, 791, 795, 801, 802], "metagraph": [1, 71], "metapath2vec": 329, "metapath_reachable_graph": 294, "method": [11, 764], "meti": 638, "metis_partit": 295, "metis_partition_assign": 296, "mfg": 660, "mfg\ub97c": 745, "min": 253, "mini": [660, 779, 780], "minibatch": [656, 659, 661, 807, 808], "minigcdataset": 166, "misc": 1, "mix": [663, 747], "mode": 636, "model": [20, 656, 659, 661, 669, 671, 673, 761, 771, 772, 779, 780, 784, 785, 789, 790, 798, 799, 801, 803, 805, 807, 808], "modul": [8, 14, 15, 16, 636, 660, 664, 665, 666, 667, 670, 770, 786], "more": 770, "mul": 562, "multi": [761, 792, 802, 807, 808], "multi_update_al": 72, "multilayerfullneighborsampl": 205, "multipl": [11, 20, 631, 647, 764, 791, 809], "multiprocess": [7, 297, 298], "mutagdataset": 165, "mutat": 1, "mxnet": [14, 758], "ndata": 73, "neg": [3, 10, 537, 659, 744, 771], "neighbor": [6, 10, 656, 657, 783, 784, 785], "neighborhood": [654, 656, 657, 659, 661, 739], "neighborsampl": 206, "network": [15, 668, 671, 673, 759, 760, 762, 768, 771, 779, 780, 789, 790, 791, 792, 793, 801, 802, 805], "neural": [668, 671, 673, 760, 762, 771, 791, 793, 802, 805], "new": [20, 21], "next": [768, 769, 770, 772, 783, 784, 792], "nf": 779, "nn": [14, 15, 16, 17, 299, 665, 666, 670, 749, 750], "nnconv": [313, 359], "nnz": 538, "nn\u6a21\u5757\u7684forward\u51fd\u6570": 706, "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": 705, "node": [1, 2, 4, 9, 19, 76, 625, 633, 636, 643, 644, 646, 661, 669, 673, 686, 727, 768, 769, 773, 779, 780, 784, 785, 798, 808], "node2vec_random_walk": 505, "node_attr_schem": 74, "node_homophili": 420, "node_split": 228, "node_subgraph": 421, "node_type_subgraph": [75, 422], "nodebatch": [622, 623, 624, 625], "nodedata": 631, "nodeembed": 401, "nodeshuffl": 608, "non": [11, 764], "norm_by_dst": 423, "ntype": 77, "num_dst_nod": 78, "num_edg": 79, "num_nod": 80, "num_src_nod": 81, "number_of_dst_nod": 82, "number_of_edg": 83, "number_of_nod": 84, "number_of_src_nod": 85, "nutshel": 761, "object": [773, 798], "offlin": 658, "ogb": [632, 717], "one": 789, "onli": 779, "op": [0, 8, 11, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484], "openmp": 776, "oper": [4, 11, 764, 791], "optim": [4, 9, 798], "option": [22, 630, 716, 785], "origin": 656, "out": 0, "out_degre": 86, "out_edg": 87, "out_subgraph": 485, "output": [638, 666], "overview": [654, 668, 669, 671, 672, 673, 768, 771, 772, 773, 783, 785, 789], "own": [770, 773], "pack_trac": 506, "packag": 632, "paper": 805, "paradigm": [649, 733], "parallel": [638, 791], "parmeti": [638, 723], "parmetis\ub97c": 723, "parser": 631, "part": 653, "partit": [0, 4, 637, 638, 639, 779, 780], "partition_graph": 229, "partition_graph_with_halo": 486, "pass": [8, 19, 649, 650, 651, 652, 653, 663, 666, 670, 733, 770, 783, 789, 791, 795, 801, 802], "pathencod": [387, 395], "patterndataset": 167, "perform": [13, 765, 785], "persist": 640, "persourceuniform": 217, "perspect": [789, 803, 805], "pin_memory_": 88, "pinsagesampl": [503, 657], "pip": 758, "pipelin": [628, 639], "platform": 20, "pnaconv": 360, "point": 6, "pool": [14, 15, 16], "posit": [0, 771], "postprocess": 802, "power": 563, "ppi": 792, "ppidataset": 168, "ppr": 609, "practic": [770, 776], "precis": [663, 747], "precision\uc744": 747, "predecessor": 89, "predict": [2, 3, 15, 633, 659, 669, 672, 771, 773, 780, 785, 790], "predictor": 785, "prefetch": [3, 662], "prepar": [771, 807], "preprocess": [637, 639, 802], "prev": 791, "procedur": 808, "process": [20, 633, 807, 808], "program": 636, "progress": 791, "prop_edg": [90, 487], "prop_edges_df": 488, "prop_nod": [91, 489], "prop_nodes_bf": 490, "prop_nodes_topo": 491, "propag": [0, 798], "protein": 792, "pubmedgraphdataset": 169, "pull": 92, "push": 93, "put": [792, 795, 798, 802], "pytorch": [15, 297, 298, 758], "qm7bdataset": 170, "qm9dataset": 171, "qm9edgedataset": 172, "queri": [1, 769], "question": 23, "quickstart": 764, "r": 790, "radiu": 791, "radius_graph": 492, "radiusgraph": 372, "rand_bipartit": 493, "rand_graph": 494, "random": 10, "random_walk": 507, "random_walk_p": 495, "randomwalkneighborsampl": 657, "randomwalkp": 610, "raw": [630, 716], "read": [0, 655], "readout": [671, 754], "readout_edg": 496, "readout_nod": 497, "redditdataset": 173, "reduc": [5, 8, 539, 666, 764], "refer": [12, 779, 780], "regress": [669, 673, 753, 756], "relat": [0, 8, 790], "relgraphconv": [314, 361, 411], "remov": 656, "remove_edg": [94, 498], "remove_nod": [95, 499], "remove_self_loop": [96, 500], "removeselfloop": 611, "reorder_graph": [97, 501], "repositori": 22, "repres": 769, "represent": 785, "requir": 758, "resourc": 766, "result": 13, "revers": [98, 502], "review": 783, "revisit": [803, 805], "roadmap": [628, 641, 649, 654, 664, 668], "row": 540, "rowfeatnorm": 612, "run": 638, "sageconv": [315, 362, 412], "saintsampl": 207, "sampl": [4, 10, 503, 504, 505, 506, 507, 508, 509, 510, 511, 636, 654, 655, 656, 657, 659, 661, 739, 783, 784], "sample_etype_neighbor": 230, "sample_labor": 508, "sample_neighbor": [231, 509], "sample_neighbors_bias": 510, "sampler": [3, 6, 208, 655, 656, 659, 661, 662, 779, 780, 784, 785], "save": [634, 769], "save_graph": 512, "save_info": 196, "sbmmixturedataset": 174, "score": [15, 785], "script": [779, 780], "sddmm": 564, "second": 790, "seed": 513, "segment": 8, "segment_mm": 447, "segment_reduc": 448, "segmented_knn_graph": 514, "segmentedknngraph": 373, "segmentmm": 8, "select_topk": 511, "send_and_recv": 99, "separ": [643, 647, 727, 731], "sequenti": [324, 404], "server": [640, 779], "set": [771, 776, 779, 780, 791], "set2set": [321, 377], "set_batch_num_edg": 100, "set_batch_num_nod": 101, "set_dst_lazy_featur": 212, "set_edge_lazy_featur": 213, "set_node_lazy_featur": 214, "set_src_lazy_featur": 215, "settransformerdecod": 378, "settransformerencod": 379, "setup": [20, 758, 779, 801], "sgconv": [316, 363, 413], "shadowkhopsampl": 209, "shape": 541, "shared_tensor": 298, "shortest_dist": 515, "side": 779, "signdiffus": 613, "simpl": 802, "singl": [631, 807, 808], "slice_batch": 516, "small": [796, 805], "smax": 542, "smean": 543, "smin": 544, "softmax": [545, 565, 764], "softmax_edg": 517, "softmax_nod": 518, "some": 642, "sort_csc_by_tag": 519, "sort_csr_by_tag": 520, "sortpool": [322, 380, 418], "sourc": [643, 758], "sp_add_v": 566, "sp_broadcast_v": 567, "sp_div_v": 568, "sp_mul_v": 569, "sp_sub_v": 570, "spars": [1, 11, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 759, 761, 763, 764, 791], "sparsematrix": [521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551], "spatialencod": [388, 396], "spatialencoder3d": [389, 397], "spawn": 808, "specif": [631, 639, 666, 750, 802], "speed": 802, "split": [4, 636, 721], "split_dataset": 197, "spmatrix": 571, "spmm": 572, "spspmm": 573, "squirreldataset": 176, "src": 621, "srcdata": 102, "srcnode": 103, "srctype": 104, "ssh": 779, "sstdataset": 175, "standalon": [636, 721], "start": 757, "step": [639, 795, 801], "stochast": [654, 739, 785, 786, 787], "structur": [1, 631, 636, 740, 769, 791, 802], "studi": 805, "style": 20, "sub": 574, "subgraph": [0, 105, 647, 791], "subgraphx": 370, "subset": 186, "successor": 106, "sum": [254, 546], "sum_edg": 576, "sum_nod": 577, "sumpool": [323, 381, 419], "supervis": 791, "support": [8, 20, 657], "svd_pe": 578, "svdpe": 614, "system": 758, "t": [521, 547], "tagconv": [317, 364], "task": [790, 791, 795, 802], "tensor": [4, 636, 721, 791], "tensorflow": [16, 758], "test": [20, 771, 791, 801], "texasdataset": 178, "text": 791, "time": [767, 775, 778, 782, 788, 794, 797, 800, 804, 806, 810], "tip": 639, "to_bidirect": 579, "to_block": 580, "to_canonical_etyp": 108, "to_cugraph": [109, 581], "to_dens": 549, "to_doubl": 582, "to_float": 583, "to_half": 584, "to_heterogen": 585, "to_homogen": 586, "to_networkx": 587, "to_simpl": [110, 588], "to_simple_graph": 589, "togeth": [792, 795, 798, 802], "tolevi": 615, "tool": 640, "top": 631, "topk_edg": 590, "topk_nod": 591, "topologi": 1, "topological_nodes_gener": 592, "tosimpl": 616, "train": [635, 640, 654, 656, 659, 660, 661, 663, 668, 669, 671, 672, 673, 759, 760, 761, 762, 768, 770, 771, 772, 777, 779, 780, 781, 783, 784, 785, 786, 787, 790, 791, 802, 808, 809], "trainer": 808, "trans": 399, "transform": [0, 1, 3, 15, 18, 761, 764, 769, 802], "transpos": 550, "transr": 400, "travers": [0, 795], "tread": 776, "tree": 795, "treecycledataset": 179, "treegriddataset": 180, "tudataset": 177, "tutori": [757, 763], "twirlsconv": 365, "twirlsunfoldingandattent": 366, "type": [1, 8, 21, 647, 666, 669, 750], "typedlinear": 330, "u_add_": [255, 449], "u_add_e_max": 450, "u_add_e_mean": 451, "u_add_e_min": 452, "u_add_e_sum": 453, "u_add_v": [256, 454], "u_div_": [257, 455], "u_div_e_max": 456, "u_div_e_mean": 457, "u_div_e_min": 458, "u_div_e_sum": 459, "u_div_v": [258, 460], "u_dot_": [259, 461], "u_dot_v": [260, 462], "u_mul_": [261, 463], "u_mul_e_max": 464, "u_mul_e_mean": 465, "u_mul_e_min": 466, "u_mul_e_sum": 467, "u_mul_v": [262, 468], "u_sub_": [263, 469], "u_sub_e_max": 470, "u_sub_e_mean": 471, "u_sub_e_min": 472, "u_sub_e_sum": 473, "u_sub_v": [264, 474], "ubuntu": 779, "udf": [617, 618, 619, 620, 621, 622, 623, 624, 625], "unbatch": 626, "under": 637, "understand": 792, "uniform": 218, "unit": 20, "univers": 802, "unpin_memory_": 111, "unsupervis": 785, "up": [779, 780, 791, 802], "updat": [666, 798], "update_al": 112, "us": [1, 632, 645, 657, 670, 759, 771], "use_libxsmm": 627, "user": [19, 648, 770], "util": [0, 2, 3, 14, 15, 637], "uva": 657, "v": [636, 721], "v0": 765, "v_add_": [265, 475], "v_add_u": [266, 476], "v_div_": [267, 477], "v_div_u": [268, 478], "v_dot_": [269, 479], "v_dot_u": [270, 480], "v_mul_": [271, 481], "v_mul_u": [272, 482], "v_sub_": [273, 483], "v_sub_u": [274, 484], "val": 551, "val_lik": 575, "valid": [779, 780], "valu": [643, 647, 727, 731], "variabl": 22, "variant": [793, 805], "via": [20, 773, 798], "visual": [791, 792, 802], "walk": 10, "web": 20, "weight": 670, "weightandsum": 382, "weightbasi": 405, "welcom": 757, "what": [768, 769, 770, 772, 783, 784, 791, 792], "wikicsdataset": 182, "window": 758, "wisconsindataset": 183, "wise": [19, 764], "wn18dataset": 181, "work": [647, 660, 758], "workload": [4, 636, 721], "write": [651, 660, 671, 673, 770, 786], "x": 791, "y": 791, "yaml": 631, "yelpdataset": 184, "your": [656, 659, 661, 770, 773], "zincdataset": 185, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": 676, "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": 709, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": 702, "\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": 702, "\u4e8c\u8fdb\u5236\u683c\u5f0f": 686, "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": 686, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": 686, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": 686, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": 690, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": 677, "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": 690, "\u4f7f\u7528\u8fb9\u6743\u91cd": 710, "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": 710, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": 679, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": 685, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": 693, "\u5206\u5272\u6570\u636e\u96c6": 681, "\u5206\u5e03\u5f0f\u56fe": 681, "\u5206\u5e03\u5f0f\u5d4c\u5165": 681, "\u5206\u5e03\u5f0f\u5f20\u91cf": 681, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": 681, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": 681, "\u5206\u5e03\u5f0f\u8bad\u7ec3": 680, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": 682, "\u5206\u5e03\u5f0f\u91c7\u6837": 681, "\u521b\u5efadistgraph": 681, "\u521b\u5efa\u5f02\u6784\u56fe": 690, "\u53ef\u9009": 676, "\u56de\u5f52": [709, 713], "\u56fe": [684, 689], "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": 674, "\u56fe\u8bfb\u51fa": 711, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 688, "\u5728nn\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": 710, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 696, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": 697, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 695, "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": 709, "\u5904\u7406\u6570\u636e": 678, "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 678, "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": 678, "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": 678, "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": 698, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [699, 703], "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 698, "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 698, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": 700, "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 702, "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": 690, "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": 699, "\u5f02\u6784\u56fe": 690, "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": 703, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": 707, "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 711, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": 702, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": 699, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 713, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 709, "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": 698, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 712, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 701, "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": 698, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 708, "\u6279\u6b21": 697, "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": 711, "\u6279\u6b21\u7684\u56fe": 711, "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": 698, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": 683, "\u6570\u636e\u52a0\u8f7d": 711, "\u6574\u56fe\u5206\u7c7b": 711, "\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": 706, "\u672c\u7ae0\u8def\u7ebf\u56fe": [674, 684, 692, 697, 704, 708], "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": 704, "\u683c\u5f0f": 686, "\u6982\u8ff0": [708, 709, 711, 712, 713], "\u6a21\u5757": 704, "\u6a21\u578b\u5b9a\u4e49": 711, "\u6a21\u578b\u7684\u8bad\u7ec3": [699, 701, 703, 709, 711, 712, 713], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": 706, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": 692, "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 698, "\u7528\u6237\u6307\u5357": 691, "\u7b2c1\u7ae0": 684, "\u7b2c2\u7ae0": 692, "\u7b2c3\u7ae0": 704, "\u7b2c4\u7ae0": 674, "\u7b2c5\u7ae0": 708, "\u7b2c6\u7ae0": 697, "\u7b2c7\u7ae0": 680, "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": 701, "\u7f16\u5199dgl": 706, "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [711, 713], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": 694, "\u805a\u5408\u540e": 706, "\u8282\u70b9\u5206\u7c7b": 713, "\u8282\u70b9\u548c\u8fb9": 689, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 687, "\u8bad\u7ec3": 697, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": 708, "\u8bbf\u95ee\u56fe\u7ed3\u6784": 681, "\u8bbf\u95ee\u8282\u70b9": 681, "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [701, 703], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": 699, "\u8d1f\u8f7d\u5747\u8861": 682, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": 700, "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": 706, "\u8fb9\u5206\u7c7b": 709, "\u8fb9\u6570\u636e": 681, "\u8fb9\u7c7b\u578b\u5b50\u56fe": 690, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 683, "\u9017\u53f7\u5206\u9694\u503c": [686, 690], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": 697, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 703, "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 699, "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 701, "\u94fe\u63a5\u9884\u6d4b": 712, "\uac00\uc774\ub4dc": 732, "\uac00\uc911\uce58": 735, "\uac1c\uc694": [739, 752, 753, 754, 755, 756], "\uacb0\uacfc": 723, "\uacb0\uacfc\ub4e4\uc744": 723, "\uacbd\uc6b0": [741, 744, 746], "\uad6c\uc870": [721, 740], "\uad6c\ud604": 751, "\uad6c\ud604\uc0c1\uc758": 753, "\uad6c\ud604\ud558\uae30": [740, 743, 745], "\uadf8\ub798\ud504": [714, 718, 721, 722, 725, 726, 727, 730, 731, 738, 745, 750, 752, 753, 754, 756], "\uadf8\ub798\ud504\ub4e4": [740, 745, 755], "\uadf8\ub798\ud504\ub4e4\uc5d0": 743, "\uadf8\ub798\ud504\ub4e4\uc758": 754, "\uadf8\ub798\ud504\ub85c": 731, "\uadf8\ub798\ud504\ub97c": 731, "\uadf8\ub798\ud504\uc5d0": [723, 726, 739, 754], "\uadf8\ub798\ud504\uc5d0\uc11c": 741, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": 737, "\uadf8\ub798\ud504\uc758": [741, 744, 746, 753], "\uadf8\ub9ac\uace0": [730, 745], "\uae30\ubc18\uc758": 742, "\uae30\ubcf8\uc801\uc778": 726, "\ub098\ub204\uae30": 721, "\ub124\ud2b8\uc6cc\ud06c": [752, 754, 756], "\ub178\ub4dc": [718, 721, 723, 730, 746, 753, 756], "\ub178\ub4dc\uc640": 728, "\ub274\ub7f4": [752, 754, 756], "\ub2e4\ub8e8\uae30": 731, "\ub2e4\uc591\ud55c": 731, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 716, "\ub2e8\ub3c5": 721, "\ub300\ud55c": [723, 726, 739, 753], "\ub300\ud578": 743, "\ub370\uc774\ud130": [714, 716, 718, 719, 721, 722, 741, 742, 744, 746, 754], "\ub370\uc774\ud130\uc14b": 718, "\ub370\uc774\ud130\uc14b\ub4e4": 717, "\ub3d9\uc885": 731, "\ub514\uc2a4\ud06c\uc5d0\uc11c": [727, 731], "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c": 727, "\ub7f0\uce6d\ud558\uae30": 724, "\ub808\uc774\uc5b4": 740, "\ub85c\ub354": [741, 744, 746], "\ub85c\ub354\uc5d0\uc11c": 742, "\ub85c\ub4dc": 723, "\ub85c\ub4dc\ub9f5": [714, 725, 733, 739, 748, 752], "\ub85c\ub4dc\ud558\uae30": 717, "\ub85c\ub529": [719, 754], "\ub85c\ub529\ud558\uae30": [727, 731], "\ub85c\uc9c1": 751, "\ub8f9": [741, 744, 746, 753, 754, 755, 756], "\ub9ac\uadf8\ub798\uc158": 756, "\ub9ac\uadf8\ub808\uc158": 753, "\ub9ac\ub4dc\uc544\uc6c3": 754, "\ub9c1\ud06c": [718, 744, 755], "\ub9cc\ub4e4\uae30": [741, 744, 746, 748], "\ub9de\uac8c": [741, 744, 746], "\ub9e4\ud551": 723, "\uba40\ud2f0": 740, "\uba54\uc2dc\uc9c0": [734, 735, 736, 737, 740, 747, 750], "\uba54\uc9c0\uc2dc": [733, 738], "\uba85\uc138\ud654": 750, "\uba87\uac00\uc9c0": 726, "\ubaa8\ub378": [741, 744, 746, 754, 756], "\ubaa8\ub378\uacfc": 753, "\ubaa8\ub378\uc744": [741, 744, 746], "\ubaa8\ub4c8": [721, 745, 748, 749, 751], "\ubaa8\ub4c8\uc758": 750, "\ubaa8\ub4dc": 721, "\ubbf8\ub2c8": [741, 744, 745, 746], "\ubbf8\ub2c8\ubc30\uce58": 740, "\ubc0f": [723, 734, 741, 744, 746, 753], "\ubc14\uc774\ub108\ub9ac": [727, 731], "\ubc29\ubc95": [736, 739], "\ubc30\uce58": [741, 744, 745, 746, 754], "\ubc30\uce58\uc758": 741, "\ubc38\ub7f0\uc2f1": 723, "\ubcc0\ud658\ud558\uae30": [723, 731], "\ubd84\ub958": [718, 741, 746, 753, 754, 756], "\ubd84\uc0b0": [720, 721, 722, 723, 724], "\ube4c\ud2b8\uc778": 734, "\uc0ac\uc6a9\uc790": 732, "\uc0ac\uc6a9\ud558\uae30": [729, 742], "\uc0ac\uc6a9\ud55c": [727, 741, 744, 746, 747], "\uc0ac\uc6a9\ud574\uc11c": [717, 727], "\uc0d8\ud50c\ub7ec": [740, 741, 744, 746], "\uc0d8\ud50c\ub7ec\ub97c": 742, "\uc0d8\ud50c\ub9c1": [721, 722, 739, 740, 742], "\uc0d8\ud50c\ub9c1\uc5d0": 742, "\uc0d8\ud50c\ub9c1\uc744": [741, 744, 746], "\uc0dd\uc131": [721, 749], "\uc0dd\uc131\ud558\uae30": [723, 727, 731], "\uc11c\ube0c\uadf8\ub798\ud504": 731, "\uc124\uce58": 723, "\uc18c\uc2a4\ub97c": 727, "\uc2e4\ud589\ud558\uae30": 723, "\uc5c5\ub370\uc774\ud2b8": 750, "\uc5d0\uc9c0": [721, 723, 730, 731, 735, 741, 753], "\uc5d0\uc9c0\ub4e4": 741, "\uc5d0\uc9c0\ub4e4\uc5d0": 753, "\uc5d0\uc9c0\uc758": 728, "\uc5f0\uc0b0\ud558\uae30": 754, "\uc608\uce21": [718, 744, 755], "\uc608\uce21\ud558\uae30": 753, "\uc624\ud504\ub77c\uc778": 743, "\uc678\ubd80": 727, "\uc6cc\ud06c\ub85c\ub4dc": 721, "\uc6d0\ubcf8": 741, "\uc704\ud55c": [723, 724, 740, 745, 750], "\uc704\ud574\uc11c": 741, "\uc758\uc874\uc131": 740, "\uc774\ubd84": [740, 745], "\uc774\uc6c3": [739, 740, 741, 742, 744, 746], "\uc774\uc885": [731, 737], "\uc77c\ubd80\uc5d0": 738, "\uc785\ub825": 723, "\uc791\uc131": 736, "\uc791\uc131\ud558\uae30": [745, 754, 756], "\uc800\uc7a5\uacfc": 719, "\uc801\uc6a9\ud558\uae30": [735, 738], "\uc804\ub2ec": [733, 734, 736, 737, 738, 740, 747], "\uc804\ub2ec\uacfc": 750, "\uc804\ub2ec\uc5d0": 735, "\uc804\ub2ec\uc744": 740, "\uc804\ucc98\ub9ac": 723, "\uc811\uadfc": 721, "\uc811\uadfc\ud558\uae30": 722, "\uc815\uc758": 726, "\uc815\uc758\ud558\uae30": [741, 744, 746, 754], "\uc815\ud655\ud55c": 743, "\uc81c\uac70\ud558\uae30": 741, "\uc9c1\uc811": 740, "\ucc28\uc774\uc810": 753, "\ucc3e\uae30": 740, "\uccb4\ud06c\uc640": 750, "\ucd08\uae30\ud654": 721, "\ucd94\ub860": 743, "\ucd94\ub860\uc744": 724, "\ucd95\uc57d": 750, "\ucd9c\ub825\uac12\uc744": 750, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": 740, "\ucee4\uc2a4\ud140": [740, 745], "\ucf54\ub4dc": 736, "\ud070": [739, 743], "\ud074\ub798\uc2a4": 715, "\ud0c0\uc785": [731, 750, 753], "\ud0c0\uc785\uc744": 731, "\ud150\uc11c": 721, "\ud234\ub4e4": 724, "\ud30c\uc774\ud504\ub77c\uc778": 714, "\ud30c\ud2f0\uc154\ub2dd": 723, "\ud328\ub7ec\ub2e4\uc784": 733, "\ud328\ud0a4\uc9c0\ub97c": 717, "\ud3ec\uba67": [723, 727, 731], "\ud3ec\uba67\ub4e4": 723, "\ud504\ub85c\uc138\uc2f1": 718, "\ud53c\ucc98": 728, "\ud53c\ucc98\ub4e4": 723, "\ud53c\uccd0": 750, "\ud559\uc2b5": [720, 724, 739, 741, 744, 746, 747, 753, 754, 755, 756], "\ud559\uc2b5\uc5d0": [741, 744, 746], "\ud559\uc2b5\uc744": [723, 745], "\ud559\uc2b5\ud558\uae30": [722, 741, 744, 746, 752], "\ud568\uaed8": 742, "\ud568\uc218": [734, 749, 750], "\ud568\uc218\uc640": 742, "\ud574\ubcf4\uae30": 740, "\ud6a8\uc728\uc801\uc778": 736, "\ud6c4": 750}})