Search.setIndex({"alltitles": {"1.1 Some Basic Definitions about Graphs (Graphs 101)": [[704, null]], "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [[748, null]], "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)": [[789, null]], "1.2 Graphs, Nodes, and Edges": [[708, null]], "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9": [[752, null]], "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0": [[793, null]], "1.3 Node and Edge Features": [[706, null]], "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [[750, null]], "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98": [[791, null]], "1.4 Creating Graphs from External Sources": [[705, null]], "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [[749, null]], "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[790, null]], "1.5 Heterogeneous Graphs": [[709, null]], "1.5 \u5f02\u6784\u56fe": [[753, null]], "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)": [[794, null]], "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30": [[792, null]], "1.6 Using DGLGraph on a GPU": [[707, null]], "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph": [[751, null]], "1\uc7a5: \uadf8\ub798\ud504": [[788, null]], "2.1 Built-in Functions and Message Passing APIs": [[712, null]], "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API": [[756, null]], "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4": [[797, null]], "2.2 Writing Efficient Message Passing Code": [[713, null]], "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [[757, null]], "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95": [[799, null]], "2.3 Apply Message Passing On Part Of The Graph": [[715, null]], "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[759, null]], "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30": [[801, null]], "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30": [[798, null]], "2.5 Message Passing on Heterogeneous Graph": [[714, null]], "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[758, null]], "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[800, null]], "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)": [[796, null]], "3.1 DGL NN Module Construction Function": [[728, null]], "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218": [[812, null]], "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [[768, null]], "3.2 DGL NN Module Forward Function": [[729, null]], "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218": [[813, null]], "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570": [[769, null]], "3.3 Heterogeneous GraphConv Module": [[730, null]], "3.3 Heterogeneous GraphConv \ubaa8\ub4c8": [[814, null]], "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757": [[770, null]], "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30": [[811, null]], "4.1 DGLDataset class": [[691, null]], "4.1 DGLDataset \ud074\ub798\uc2a4": [[778, null]], "4.1 DGLDataset\u7c7b": [[738, null]], "4.2 Download raw data (optional)": [[692, null]], "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)": [[779, null]], "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09": [[739, null]], "4.3 Process data": [[695, null]], "4.3 \u5904\u7406\u6570\u636e": [[741, null]], "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1": [[781, null]], "4.4 Save and load data": [[696, null]], "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [[742, null]], "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529": [[782, null]], "4.5 Loading OGB datasets using ogb package": [[694, null]], "4.5 ogb \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30": [[780, null]], "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6": [[740, null]], "4.6 Loading data from CSV files": [[693, null]], "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778": [[777, null]], "5.1 Node Classification/Regression": [[736, null]], "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52": [[776, null]], "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)": [[819, null]], "5.2 Edge Classification/Regression": [[732, null]], "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52": [[772, null]], "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)": [[816, null]], "5.3 Link Prediction": [[735, null]], "5.3 \u94fe\u63a5\u9884\u6d4b": [[775, null]], "5.3 \ub9c1\ud06c \uc608\uce21": [[818, null]], "5.4 Graph Classification": [[734, null]], "5.4 \u6574\u56fe\u5206\u7c7b": [[774, null]], "5.4 \uadf8\ub798\ud504 \ubd84\ub958": [[817, null]], "5.5 Use of Edge Weights": [[733, null]], "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd": [[773, null]], "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30": [[815, null]], "6.1 Training GNN for Node Classification with Neighborhood Sampling": [[723, null]], "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[766, null]], "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[809, null]], "6.2 Training GNN for Edge Classification with Neighborhood Sampling": [[718, null]], "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[762, null]], "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[804, null]], "6.3 Training GNN for Link Prediction with Neighborhood Sampling": [[721, null]], "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[764, null]], "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[807, null]], "6.4 Implementing Custom Graph Samplers": [[717, null]], "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [[761, null]], "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [[803, null]], "6.5 Training GNN with DGL sparse": [[725, null]], "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757": [[765, null]], "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30": [[808, null]], "6.6 Implementing Custom GNN Module for Mini-batch Training": [[722, null]], "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [[763, null]], "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860": [[806, null]], "6.7 Exact Offline Inference on Large Graphs": [[720, null]], "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30": [[805, null]], "6.8 Using GPU for Neighborhood Sampling": [[719, null]], "6.9 Data Loading Parallelism": [[724, null]], "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5": [[802, null]], "7.1 Data Preprocessing": [[701, null]], "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [[745, null]], "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac": [[786, null]], "7.1.1 Partitioning API": [[701, "partitioning-api"]], "7.1.1 \ubd84\uc0b0 \ud30c\ud2f0\uc154\ub2dd": [[786, "id3"]], "7.1.2 Distributed Graph Partitioning Pipeline": [[701, "distributed-graph-partitioning-pipeline"]], "7.2 Tools for launching distributed training/inference": [[702, null]], "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API": [[744, null]], "7.2 \ubd84\uc0b0 APIs": [[784, null]], "7.3 Programming APIs": [[698, null]], "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [[746, null]], "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30": [[785, null]], "7.3.1 \ubd84\uc0b0 \uadf8\ub798\ud504 \ub370\uc774\ud130 \uc811\uadfc\ud558\uae30": [[785, "id1"]], "7.3.2 \ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[785, "id2"]], "7.4 Advanced Graph Partitioning": [[700, null]], "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4": [[787, null]], "7.5 Heterogeneous Graph Under The Hood": [[699, null]], "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5": [[783, null]], "8\uc7a5: Mixed Precision \ud559\uc2b5": [[810, null]], "A Batched Graph in DGL": [[844, "a-batched-graph-in-dgl"]], "A Blitz Introduction to DGL": [[846, null]], "A brief introduction to R-GCN": [[857, "a-brief-introduction-to-r-gcn"]], "AGNNConv": [[363, null], [393, null]], "AIFBDataset": [[132, null]], "AMDataset": [[133, null]], "API Reference": [[13, null]], "APPNPConv": [[364, null], [394, null], [464, null]], "Access distributed graph data": [[699, "access-distributed-graph-data"]], "Access node/edge data": [[698, "access-node-edge-data"]], "Accessing graph structure": [[698, "accessing-graph-structure"]], "Action 1: Add nodes": [[865, "action-1-add-nodes"]], "Action 2: Add edges": [[865, "action-2-add-edges"]], "Action 3: Choose a destination": [[865, "action-3-choose-a-destination"]], "Actions": [[865, "actions"]], "ActorDataset": [[134, null]], "Adapt your model for minibatch training": [[718, "adapt-your-model-for-minibatch-training"], [723, "adapt-your-model-for-minibatch-training"]], "Adaptive Universal Transformer": [[869, "adaptive-universal-transformer"]], "AddEdge": [[652, null]], "AddMetaPaths": [[653, null]], "AddReverse": [[654, null]], "AddSelfLoop": [[655, null]], "Adjacency Related Utilities": [[0, "adjacency-related-utilities"]], "Adjacency and incidence matrix": [[1, "adjacency-and-incidence-matrix"]], "After Partition Loading": [[699, "after-partition-loading"]], "Alternative memory allocators": [[849, "alternative-memory-allocators"]], "AmazonCoBuyComputerDataset": [[135, null]], "AmazonCoBuyPhotoDataset": [[136, null]], "AmazonRatingsDataset": [[137, null]], "AsGraphPredDataset": [[138, null]], "AsLinkPredDataset": [[139, null]], "AsNodePredDataset": [[140, null]], "Assigning Node and Edge Features to Graph": [[841, "assigning-node-and-edge-features-to-graph"]], "AtomicConv": [[395, null]], "Attention layer of Transformer": [[869, "attention-layer-of-transformer"]], "Attributes and methods": [[12, "attributes-and-methods"]], "Attributes and methods of a DGL Sparse Matrix": [[827, "Attributes-and-methods-of-a-DGL-Sparse-Matrix"]], "AvgPooling": [[380, null], [439, null], [472, null]], "BA2MotifDataset": [[141, null]], "BACommunityDataset": [[142, null]], "BAShapeDataset": [[143, null]], "BFloat16 CPU example": [[726, "bfloat16-cpu-example"]], "BGSDataset": [[144, null]], "Backend Options": [[23, "backend-options"]], "Base Class": [[2, "base-class"]], "BaseTransform": [[656, null]], "BasicFeatureStore": [[286, null]], "Batch of Graphs": [[734, "batch-of-graphs"]], "Batching and Reading Out Ops": [[0, "batching-and-reading-out-ops"]], "Batching graphs for parallelism": [[858, "batching-graphs-for-parallelism"]], "Batching many small graphs": [[863, null], [872, "batching-many-small-graphs"]], "Benchmark the performance of KNN algorithms": [[14, null]], "Best practice of writing custom GNN modules": [[842, "best-practice-of-writing-custom-gnn-modules"]], "BiasedMHA": [[448, null]], "Binary community subgraph from Cora with a test dataset": [[858, "binary-community-subgraph-from-cora-with-a-test-dataset"]], "BitcoinOTCDataset": [[145, null]], "Broadcast operations": [[827, "Broadcast-operations"]], "Broadcast operators": [[12, "broadcast-operators"]], "Build Model": [[689, null]], "Building Docs Locally": [[21, "building-docs-locally"]], "Building a Graph Convolutional Network Using Sparse Matrices": [[822, null]], "Building and Testing": [[21, "building-and-testing"]], "BuiltinDataset": [[287, null]], "CFConv": [[396, null]], "CIFAR10SuperPixelDataset": [[146, null]], "CLUSTERDataset": [[147, null]], "CPU Best Practices": [[849, null]], "CPUCachedFeature": [[288, null]], "CSVDataset": [[148, null]], "Capsule Network": [[868, null]], "Chain-up LGNN abstractions as an LGNN layer": [[858, "chain-up-lgnn-abstractions-as-an-lgnn-layer"]], "Chain-up LGNN layers": [[858, "chain-up-lgnn-layers"]], "ChameleonDataset": [[149, null]], "Chapter 1: Graph": [[703, null]], "Chapter 2: Message Passing": [[711, null]], "Chapter 3: Building GNN Modules": [[727, null]], "Chapter 4: Graph Data Pipeline": [[690, null]], "Chapter 5: Training Graph Neural Networks": [[731, null]], "Chapter 6: Stochastic Training on Large Graphs": [[716, null]], "Chapter 7: Distributed Training": [[697, null]], "Chapter 8: Mixed Precision Training": [[726, null]], "ChebConv": [[365, null], [397, null], [465, null]], "Chunked Graph Format": [[701, "chunked-graph-format"]], "CiteseerGraphDataset": [[150, null]], "ClusterGCNSampler": [[209, null]], "CoauthorCSDataset": [[151, null]], "CoauthorPhysicsDataset": [[152, null]], "Coding styles": [[21, "coding-styles"]], "Comma Separated Values (CSV)": [[705, "comma-separated-values-csv"], [709, "comma-separated-values-csv"], [790, "comma-separated-values-csv"], [794, "comma-separated-values-csv"]], "Community detection": [[858, "community-detection"]], "Community detection in a supervised setting": [[858, "community-detection-in-a-supervised-setting"]], "Completing f(x, y)": [[858, "completing-f-x-y"]], "Compose": [[657, null]], "Composing OnDiskDataset from raw data": [[836, null]], "Computation on a Batched Graph": [[734, "computation-on-a-batched-graph"]], "Computation times": [[830, null], [847, null], [851, null], [855, null], [861, null], [864, null], [867, null], [871, null], [873, null], [877, null]], "Computing with DGLGraph": [[1, "computing-with-dglgraph"]], "Conclusion": [[14, "conclusion"], [832, "Conclusion"], [835, "Conclusion"]], "Containers": [[22, "containers"]], "Contribute to DGL": [[21, null]], "Contributing Code Changes": [[21, "contributing-code-changes"]], "Contributing Core Features": [[21, "contributing-core-features"]], "Contributing Documentations": [[21, "contributing-documentations"]], "Contributing Editorial Changes via GitHub Web Interface": [[21, "contributing-editorial-changes-via-github-web-interface"]], "Contributing New Models as Examples": [[21, "contributing-new-models-as-examples"]], "Contribution": [[820, "contribution"]], "Conv Layers": [[15, "conv-layers"], [16, "conv-layers"], [17, "conv-layers"]], "Converting Heterogeneous Graphs to Homogeneous Graphs": [[709, "converting-heterogeneous-graphs-to-homogeneous-graphs"]], "CopyTo": [[7, "copyto"], [289, null]], "Cora": [[859, "cora"]], "Cora dataset": [[858, "cora-dataset"]], "CoraFullDataset": [[153, null]], "CoraGraphDataset": [[154, null]], "CornellDataset": [[155, null]], "Create graph and model": [[857, "create-graph-and-model"]], "Creating Dataset from CSV via CSVDataset": [[845, "creating-dataset-from-csv-via-csvdataset"]], "Creating Graphs from External Libraries": [[705, "creating-graphs-from-external-libraries"]], "Creating a DGL Sparse Matrix": [[827, "Creating-a-DGL-Sparse-Matrix"]], "Creating a Dataset for Graph Classification from CSV": [[845, "creating-a-dataset-for-graph-classification-from-csv"]], "Creating a Dataset for Node Classification or Link Prediction from CSV": [[845, "creating-a-dataset-for-node-classification-or-link-prediction-from-csv"]], "Creating a Heterogeneous Graph": [[709, "creating-a-heterogeneous-graph"]], "Creation Ops": [[12, "creation-ops"]], "CuGraph Conv Layers": [[16, "cugraph-conv-layers"]], "CuGraphGATConv": [[398, null]], "CuGraphRelGraphConv": [[399, null]], "CuGraphSAGEConv": [[400, null]], "Custom Data Parser": [[693, "custom-data-parser"]], "DGL Binary Format": [[705, "dgl-binary-format"], [709, "dgl-binary-format"]], "DGL Built-in Function": [[5, "dgl-built-in-function"]], "DGL Foreign Function Interface (FFI)": [[22, null]], "DGL Graph Construction": [[841, "dgl-graph-construction"]], "DGL \u4e8c\u8fdb\u5236\u683c\u5f0f": [[749, "dgl"]], "DGL \ub370\uc774\ud130 \ub85c\ub354\uc5d0\uc11c GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc0ac\uc6a9\ud558\uae30": [[805, "dgl-gpu"]], "DGL \ubc14\uc774\ub108\ub9ac \ud3ec\uba67": [[790, "dgl"], [794, "dgl"]], "DGL \ubd84\uc0b0 \ubaa8\ub4c8 \ucd08\uae30\ud654": [[784, "dgl"]], "DGLDataset": [[156, null]], "DGLDataset Object Overview": [[845, "dgldataset-object-overview"]], "DGL\u4e8c\u8fdb\u5236\u683c\u5f0f": [[753, "dgl"]], "DGL\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": [[744, "dgl"]], "DGMG: Optimization objective": [[865, "dgmg-optimization-objective"]], "DGMG: The implementation": [[865, "dgmg-the-implementation"]], "DGMG: The main flow": [[865, "dgmg-the-main-flow"]], "DGNConv": [[401, null]], "Data Loader Preparation": [[874, "data-loader-preparation"]], "Data Loading": [[734, "data-loading"]], "Data Repository": [[23, "data-repository"]], "Data folder structure": [[693, "data-folder-structure"]], "Data hosting": [[21, "data-hosting"]], "Data preparation": [[838, "Data-preparation"], [839, "Data-preparation"]], "DataLoader": [[7, "dataloader"], [210, null], [290, null]], "DataLoaders": [[3, "dataloaders"]], "Dataset": [[7, "dataset"], [291, null]], "Dataset adapters": [[2, "dataset-adapters"]], "Dataset of a single feature-less graph": [[693, "dataset-of-a-single-feature-less-graph"]], "Dataset of a single graph with features and labels": [[693, "dataset-of-a-single-graph-with-features-and-labels"]], "Dataset of a single heterogeneous graph": [[693, "dataset-of-a-single-heterogeneous-graph"]], "Dataset of multiple graphs": [[693, "dataset-of-multiple-graphs"]], "DeepWalk": [[387, null]], "Define Model": [[844, "define-model"]], "Define a GNN model": [[852, "define-a-gnn-model"], [853, "define-a-gnn-model"]], "Define a GraphSAGE model": [[843, "define-a-graphsage-model"]], "Define a GraphSAGE model for minibatch training": [[721, "define-a-graphsage-model-for-minibatch-training"]], "Define a data loader with neighbor and negative sampling": [[721, "define-a-data-loader-with-neighbor-and-negative-sampling"]], "Define a neighborhood sampler and data loader": [[718, "define-a-neighborhood-sampler-and-data-loader"], [723, "define-a-neighborhood-sampler-and-data-loader"]], "Defining Data Loader": [[844, "defining-data-loader"]], "Defining Model": [[833, "Defining-Model"], [835, "Defining-Model"], [875, "defining-model"]], "Defining Model for Node Representation": [[832, "Defining-Model-for-Node-Representation"]], "Defining Neighbor Sampler and Data Loader in DGL": [[832, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [833, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [835, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"]], "Defining Traing Loop": [[832, "Defining-Traing-Loop"]], "Defining Training Loop": [[835, "Defining-Training-Loop"]], "Defining Training and Evaluation Procedures": [[833, "Defining-Training-and-Evaluation-Procedures"]], "Defining Traning and Evaluation Procedures": [[875, "defining-traning-and-evaluation-procedures"]], "Defining a Graph Convolutional Network (GCN)": [[840, "defining-a-graph-convolutional-network-gcn"]], "Defining new types": [[22, "defining-new-types"]], "Degree Bucketing for Message Passing with User Defined Functions": [[20, "degree-bucketing-for-message-passing-with-user-defined-functions"]], "Degree Encoding": [[689, "degree-encoding"]], "DegreeEncoder": [[449, null]], "Dense Conv Layers": [[15, "dense-conv-layers"], [16, "dense-conv-layers"]], "DenseChebConv": [[366, null], [402, null]], "DenseGraphConv": [[367, null], [403, null]], "DenseSAGEConv": [[368, null], [404, null]], "Description": [[6, "description"], [393, "description"], [394, "description"], [395, "description"], [396, "description"], [401, "description"], [404, "description"], [404, "id1"], [405, "description"], [407, "description"], [408, "description"], [409, "description"], [409, "id1"], [410, "description"], [411, "description"], [411, "id1"], [412, "description"], [412, "id1"], [413, "description"], [413, "id1"], [414, "description"], [416, "description"], [416, "id1"], [417, "description"], [418, "description"], [418, "id1"], [419, "description"], [419, "id1"], [422, "description"], [423, "description"], [425, "description"], [425, "id1"], [426, "description"], [426, "id1"], [427, "description"], [427, "id1"], [428, "description"], [429, "description"], [429, "id1"], [456, "description"], [456, "id1"], [457, "description"], [457, "id1"], [458, "description"], [460, "description"], [460, "id1"]], "Device Control": [[1, "device-control"]], "Diagonal Matrix": [[827, "Diagonal-Matrix"]], "DiskBasedFeature": [[292, null]], "DistGraph creation": [[698, "distgraph-creation"]], "DistGraph \uc0dd\uc131": [[784, "distgraph"]], "Distributed DataLoader": [[4, "distributed-dataloader"]], "Distributed DistEmbedding": [[698, "distributed-distembedding"]], "Distributed Graph": [[4, "distributed-graph"]], "Distributed Graph Sampling Operators": [[4, "distributed-graph-sampling-operators"]], "Distributed Link Prediction": [[853, null]], "Distributed Node Classification": [[852, null]], "Distributed Node Embedding": [[4, "distributed-node-embedding"]], "Distributed Process Group Initialization": [[874, "distributed-process-group-initialization"]], "Distributed Sampling": [[4, "distributed-sampling"]], "Distributed Tensor": [[4, "distributed-tensor"], [698, "distributed-tensor"]], "Distributed embedding optimizer": [[4, "distributed-embedding-optimizer"]], "Distributed graph": [[698, "distributed-graph"]], "Distributed mini-batch sampler": [[852, "distributed-mini-batch-sampler"], [853, "distributed-mini-batch-sampler"]], "Distributed mode vs. standalone mode": [[698, "distributed-mode-vs-standalone-mode"]], "Distributed sampling": [[698, "distributed-sampling"]], "Distributed training": [[854, null]], "Distributed training script": [[852, "distributed-training-script"], [853, "distributed-training-script"]], "Distributed workload split": [[4, "distributed-workload-split"]], "Distributed \uadf8\ub798\ud504": [[784, "distributed"]], "DistributedItemSampler": [[293, null]], "DotGatConv": [[405, null]], "DropEdge": [[658, null]], "DropNode": [[659, null]], "During Preprocessing": [[699, "during-preprocessing"]], "EGATConv": [[406, null]], "EGNNConv": [[407, null]], "EGTLayer": [[450, null]], "Edge Prediction Datasets": [[2, "edge-prediction-datasets"]], "Edge Type Subgraph": [[709, "edge-type-subgraph"]], "Edge-wise User-defined Function": [[20, "edge-wise-user-defined-function"]], "EdgeConv": [[369, null], [408, null]], "EdgeData": [[693, "edgedata"]], "EdgeGATConv": [[409, null]], "EdgePredictor": [[456, null]], "EdgeWeightNorm": [[410, null]], "Element-wise functions": [[827, "Element-wise-functions"]], "Elementwise Operators": [[12, "elementwise-operators"]], "Elementwise operations": [[827, "Elementwise-operations"]], "Enable GraphBolt sampling in the training script": [[852, "enable-graphbolt-sampling-in-the-training-script"]], "Enabling ARGO on your own GNN program": [[848, "enabling-argo-on-your-own-gnn-program"]], "Encoding a dynamic graph": [[865, "encoding-a-dynamic-graph"]], "End-to-End Mixed Precision Training": [[726, "end-to-end-mixed-precision-training"]], "End-to-End Mixed Precision \ud559\uc2b5": [[810, "end-to-end-mixed-precision"]], "Environment Variables": [[23, null]], "Equation (1)": [[859, "equation-1"]], "Equation (2)": [[859, "equation-2"]], "Equation (3) & (4)": [[859, "equation-3-4"]], "Evaluating Performance with Link Prediction": [[832, "Evaluating-Performance-with-Link-Prediction"]], "Evaluation Loop": [[875, "evaluation-loop"]], "Evaluation function": [[833, "Evaluation-function"]], "Even more customization by user-defined function": [[842, "even-more-customization-by-user-defined-function"]], "Example: MAG240M-LSC": [[701, "example-mag240m-lsc"]], "Examples on a heterogeneous graph": [[361, "examples-on-a-heterogeneous-graph"]], "Examples on a homogeneous graph": [[361, "examples-on-a-homogeneous-graph"]], "Exclude Edges After Sampling": [[717, "exclude-edges-after-sampling"]], "Execute on specific edges": [[869, "execute-on-specific-edges"]], "Exercise #1": [[827, "Exercise-#1"]], "Exercise #2": [[827, "Exercise-#2"]], "FB15k237Dataset": [[157, null]], "FB15kDataset": [[158, null]], "FakeNewsDataset": [[159, null]], "Farthest Point Sampler": [[6, "farthest-point-sampler"]], "FeatMask": [[660, null]], "Feature": [[294, null]], "Feature and FeatureStore": [[7, "feature-and-featurestore"]], "FeatureFetcher": [[7, "featurefetcher"], [295, null]], "FeatureStore": [[296, null]], "FlickrDataset": [[160, null]], "For heterogeneous graphs": [[718, "for-heterogeneous-graphs"], [721, "for-heterogeneous-graphs"], [723, "for-heterogeneous-graphs"]], "FraudAmazonDataset": [[161, null]], "FraudDataset": [[162, null]], "FraudYelpDataset": [[163, null]], "Frequently Asked Questions (FAQ)": [[24, null]], "Full R-GCN model defined": [[857, "full-r-gcn-model-defined"]], "Full YAML Specification": [[693, "full-yaml-specification"]], "FusedCSCSamplingGraph": [[297, null]], "GAT in DGL": [[859, "gat-in-dgl"]], "GATConv": [[370, null], [411, null], [466, null]], "GATv2Conv": [[412, null]], "GCN from the perspective of message passing": [[856, "gcn-from-the-perspective-of-message-passing"]], "GCN implementation with DGL": [[856, "gcn-implementation-with-dgl"]], "GCN in one formula": [[856, "gcn-in-one-formula"]], "GCN2Conv": [[413, null]], "GCNNorm": [[661, null]], "GDC": [[662, null]], "GDELTDataset": [[164, null]], "GINConv": [[371, null], [414, null], [467, null]], "GINDataset": [[165, null]], "GINEConv": [[415, null]], "GMMConv": [[372, null], [416, null]], "GNNExplainer": [[430, null]], "GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub7ec\ub97c DGL \ud568\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30": [[805, "gpu-dgl"]], "GPUCachedFeature": [[298, null]], "GSDDMM functions": [[9, "gsddmm-functions"]], "GSpMM functions": [[9, "gspmm-functions"]], "GatedGCNConv": [[417, null]], "GatedGraphConv": [[373, null], [418, null]], "GatherMM and SegmentMM Module": [[9, "gathermm-and-segmentmm-module"]], "General development process": [[21, "general-development-process"]], "Generate feature data for graph": [[838, "Generate-feature-data-for-graph"], [839, "Generate-feature-data-for-graph"]], "Generate graph structure data": [[838, "Generate-graph-structure-data"], [839, "Generate-graph-structure-data"]], "Generate tasks": [[838, "Generate-tasks"], [839, "Generate-tasks"]], "Generative Models of Graphs": [[865, null]], "Generative models": [[866, null], [872, "generative-models"]], "Get training and validation node IDs": [[852, "get-training-and-validation-node-ids"], [853, "get-training-and-validation-node-ids"]], "Getting Started": [[820, "getting-started"]], "Git setup (for developers)": [[21, "git-setup-for-developers"]], "Global Configurations": [[23, "global-configurations"]], "Global Pooling Layers": [[15, "global-pooling-layers"], [16, "global-pooling-layers"], [17, "global-pooling-layers"]], "GlobalAttentionPooling": [[381, null], [440, null], [473, null]], "GlobalUniform": [[224, null]], "Graph": [[7, "graph"]], "Graph Convolutional Layer": [[822, "Graph-Convolutional-Layer"]], "Graph Convolutional Network": [[856, null]], "Graph Create Ops": [[0, "graph-create-ops"]], "Graph Diffusion": [[823, "Graph-Diffusion"]], "Graph Diffusion in GNNs": [[823, "Graph-Diffusion-in-GNNs"]], "Graph Diffusion in Graph Neural Networks": [[823, null]], "Graph Partition Utilities": [[0, "graph-partition-utilities"]], "Graph Positional Encoding Ops:": [[0, "graph-positional-encoding-ops"]], "Graph Prediction Datasets": [[2, "graph-prediction-datasets"]], "Graph Readout": [[734, "graph-readout"]], "Graph Transform Ops": [[0, "graph-transform-ops"]], "Graph Transformations": [[841, "graph-transformations"]], "Graph Transformer Layer": [[824, "Graph-Transformer-Layer"]], "Graph Transformer Model": [[824, "Graph-Transformer-Model"]], "Graph Transformer in a Nutshell": [[824, null]], "Graph Traversal & Message Propagation": [[0, "graph-traversal-message-propagation"]], "Graph building": [[869, "graph-building"]], "Graph checking and graph type specification": [[729, "graph-checking-and-graph-type-specification"]], "Graph embedding": [[865, "graph-embedding"]], "Graph neural networks and its variants": [[860, null], [872, "graph-neural-networks-and-its-variants"]], "Graph partition book": [[4, "graph-partition-book"]], "Graph partitioning": [[852, "graph-partitioning"]], "Graph structure": [[869, "graph-structure"]], "GraphConv": [[374, null], [419, null], [468, null]], "GraphData": [[693, "graphdata"]], "GraphDataLoader": [[211, null]], "Graphormer Layer": [[689, "graphormer-layer"]], "GraphormerLayer": [[451, null]], "GroupRevRes": [[420, null]], "HGTConv": [[421, null]], "Half precision\uc744 \uc0ac\uc6a9\ud55c \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[810, "half-precision"]], "Handle dataset": [[857, "handle-dataset"]], "HeatKernel": [[663, null]], "HeteroEmbedding": [[388, null]], "HeteroGNNExplainer": [[431, null]], "HeteroGraphConv": [[362, null], [389, null], [474, null]], "HeteroGraphConv implementation logic:": [[730, "heterographconv-implementation-logic"]], "HeteroGraphConv \uad6c\ud604 \ub85c\uc9c1:": [[814, "heterographconv"]], "HeteroGraphConv\u7684\u5b9e\u73b0\u903b\u8f91": [[770, "heterographconv"]], "HeteroItemSet": [[299, null]], "HeteroLinear": [[390, null]], "HeteroPGExplainer": [[432, null]], "HeteroSubgraphX": [[433, null]], "Heterogeneous Graphs": [[731, "heterogeneous-graphs"]], "Heterogeneous Learning Modules": [[15, "heterogeneous-learning-modules"], [16, "heterogeneous-learning-modules"], [17, "heterogeneous-learning-modules"]], "Heterogeneous graph": [[732, "heterogeneous-graph"], [734, "heterogeneous-graph"], [736, "heterogeneous-graph"]], "Heterogeneous graphs": [[722, "heterogeneous-graphs"], [735, "heterogeneous-graphs"]], "Heterogeneous \uadf8\ub798\ud504": [[815, "heterogeneous"], [816, "heterogeneous"], [817, "heterogeneous"], [819, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\ub4e4": [[803, "heterogeneous"], [803, "id5"], [808, "heterogeneous"], [818, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \ub178\ub4dc/\uc5d0\uc9c0 \ud53c\ucc98\ub4e4 \uc0dd\uc131\ud558\uae30": [[786, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uacbd\uc6b0": [[804, "heterogeneous"], [807, "heterogeneous"], [809, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uc5d0\uc9c0\ub4e4\uc5d0 \ub300\ud55c \uc5d0\uc9c0 \ud0c0\uc785 \uc608\uce21\ud558\uae30": [[816, "id3"]], "Homogeneous \uadf8\ub798\ud504, \uc774\ubd84 \uadf8\ub798\ud504(bipartite graph), \uadf8\ub9ac\uace0 MFG\ub97c \uc704\ud55c \ubaa8\ub4c8 \uc791\uc131\ud558\uae30": [[808, "homogeneous-bipartite-graph-mfg"]], "Homophily Measures": [[0, "homophily-measures"]], "How DGL Handles Computation Dependency\u00b6": [[835, "How-DGL-Handles-Computation-Dependency\u00b6"]], "How DGL implements Transformer with a graph neural network": [[869, "how-dgl-implements-transformer-with-a-graph-neural-network"]], "How Does DGL Represent A Graph?": [[841, null]], "Hyper-threading": [[849, "hyper-threading"]], "Hypergraph Neural Network (HGNN) Layer": [[825, "Hypergraph-Neural-Network-(HGNN)-Layer"]], "Hypergraph Neural Networks": [[825, null]], "Hypergraphs": [[825, "Hypergraphs"]], "ICEWS18Dataset": [[166, null]], "ID Conversion Utilities": [[699, "id-conversion-utilities"]], "ID mapping": [[701, "id-mapping"]], "ID \ub9e4\ud551": [[786, "id"]], "Implement LGNN in DGL": [[858, "implement-lgnn-in-dgl"]], "Implement R-GCN in DGL": [[857, "implement-r-gcn-in-dgl"]], "Implementing Offline Inference": [[720, "implementing-offline-inference"]], "Implementing \\text{fuse} as sparse matrix multiplication": [[858, "implementing-text-fuse-as-sparse-matrix-multiplication"]], "Implementing \\text{prev} and \\text{deg} as tensor operation": [[858, "implementing-text-prev-and-text-deg-as-tensor-operation"]], "Implementing \\text{radius} as message passing in DGL": [[858, "implementing-text-radius-as-message-passing-in-dgl"]], "Importing Packages": [[875, "importing-packages"]], "Improve Scalability on Multi-Core CPUs": [[848, null]], "InSubgraphSampler": [[300, null]], "Index": [[820, "index"]], "Inference": [[853, "inference"]], "Initialization": [[4, "initialization"]], "Initialization of the DGL distributed module": [[698, "initialization-of-the-dgl-distributed-module"]], "Initialize network communication": [[852, "initialize-network-communication"], [853, "initialize-network-communication"]], "Initializing a DGL Diagonal Sparse Matrix": [[827, "Initializing-a-DGL-Diagonal-Sparse-Matrix"]], "Input format": [[700, "input-format"]], "Install DGL package": [[832, "Install-DGL-package"], [835, "Install-DGL-package"], [838, "Install-DGL-package"], [839, "Install-DGL-package"]], "Install DGL package and other dependencies": [[833, "Install-DGL-package-and-other-dependencies"]], "Install and Setup": [[821, null]], "Install from Conda or Pip": [[821, "install-from-conda-or-pip"]], "Install from source": [[821, "install-from-source"]], "Installation": [[848, "installation"]], "Instantiate OnDiskDataset": [[838, "Instantiate-OnDiskDataset"], [839, "Instantiate-OnDiskDataset"]], "Integrated Benchmarks": [[828, "integrated-benchmarks"]], "Intel": [[849, "intel"]], "Introducing attention to GCN": [[859, "introducing-attention-to-gcn"]], "Introduction": [[865, "introduction"]], "ItemSampler": [[7, "itemsampler"], [301, null]], "ItemSet": [[7, "itemset"], [302, null]], "JSON/GML Format": [[705, "json-gml-format"]], "JSON/GML \u683c\u5f0f": [[749, "json-gml"]], "JSON/GML \ud3ec\uba67": [[790, "json-gml"]], "JumpingKnowledge": [[460, null]], "KHopGraph": [[664, null]], "KNNGraph": [[436, null]], "KarateClubDataset": [[167, null]], "Key ideas of Capsule": [[868, "key-ideas-of-capsule"]], "Key ideas of R-GCN": [[857, "key-ideas-of-r-gcn"]], "Label Informativeness Measures": [[0, "label-informativeness-measures"]], "LabelPropagation": [[461, null]], "LaborSampler": [[212, null]], "LapPE": [[665, null]], "LapPosEncoder": [[452, null]], "Launch the distributed training job": [[852, "launch-the-distributed-training-job"]], "LayerNeighborSampler": [[303, null]], "LazyFeature": [[219, null]], "LegacyDataset": [[304, null]], "LegacyTUDataset": [[168, null]], "Line Graph Neural Network": [[858, null]], "Line graph neural network key ideas": [[858, "line-graph-neural-network-key-ideas"]], "LineGraph": [[666, null]], "Link Prediction": [[832, null]], "Link Prediction Task": [[838, "Link-Prediction-Task"], [839, "Link-Prediction-Task"]], "Link Prediction using Graph Neural Networks": [[843, null]], "Linux": [[821, "linux"]], "Load balancing": [[701, "load-balancing"]], "Load partitioned graphs": [[701, "load-partitioned-graphs"]], "Loading Cora Dataset": [[840, "loading-cora-dataset"]], "Loading Data": [[825, "Loading-Data"], [844, "loading-data"]], "Loading Dataset": [[832, "Loading-Dataset"], [835, "Loading-Dataset"]], "Loading Graphs from Disk": [[705, "loading-graphs-from-disk"]], "Loading Heterographs from Disk": [[709, "loading-heterographs-from-disk"]], "Loading and Saving Graphs": [[841, "loading-and-saving-graphs"]], "Loading graph and features": [[843, "loading-graph-and-features"]], "METIS partition algorithm": [[700, "metis-partition-algorithm"]], "MNISTSuperPixelDataset": [[169, null]], "MUTAGDataset": [[170, null]], "MXNet backend": [[821, "mxnet-backend"]], "Main Function for Each Process": [[874, "main-function-for-each-process"]], "Main Loop": [[862, "main-loop"]], "Main class of Transformer graph": [[869, "main-class-of-transformer-graph"]], "Make Your Own Dataset": [[845, null]], "Matrix Multiplication": [[12, "matrix-multiplication"]], "Matrix multiplication": [[827, "Matrix-multiplication"]], "Matrix transformations": [[827, "Matrix-transformations"]], "MaxPooling": [[382, null], [441, null], [475, null]], "Message Passing Paradigm": [[711, "message-passing-paradigm"]], "Message Passing Review": [[834, "Message-Passing-Review"]], "Message Passing with Edge Weights": [[733, "message-passing-with-edge-weights"]], "Message aggregation": [[869, "message-aggregation"]], "Message computation": [[869, "message-computation"]], "Message functions": [[5, "message-functions"]], "Message passing": [[869, "message-passing"]], "Message passing and GNNs": [[842, "message-passing-and-gnns"]], "Message passing and reducing": [[729, "message-passing-and-reducing"]], "Message-Passing with Half Precision": [[726, "message-passing-with-half-precision"]], "MetaPath2Vec": [[391, null]], "MinesweeperDataset": [[171, null]], "Mini-batch Data Loading": [[875, "mini-batch-data-loading"]], "MiniBatch": [[7, "minibatch"], [305, null]], "MiniBatchTransformer": [[306, null]], "MiniGCDataset": [[172, null]], "Misc": [[1, "misc"]], "Model Definition": [[734, "model-definition"]], "Model Forward": [[689, "model-forward"]], "Model Implementation Difference from Node Classification": [[732, "model-implementation-difference-from-node-classification"]], "Model Initialization": [[874, "model-initialization"]], "Model Overview": [[856, "model-overview"]], "Model implementation": [[868, "model-implementation"]], "More customization": [[842, "more-customization"]], "MovieLensDataset": [[173, null]], "Multi-GPU Node Classification": [[833, null]], "Multi-head attention": [[859, "multi-head-attention"], [869, "multi-head-attention"]], "Multi-head attention layer": [[869, "multi-head-attention-layer"]], "MultiLayerFullNeighborSampler": [[213, null]], "Mutating topology": [[1, "mutating-topology"]], "NFS client side setup (ubuntu only)": [[852, "nfs-client-side-setup-ubuntu-only"]], "NFS server side setup (ubuntu only)": [[852, "nfs-server-side-setup-ubuntu-only"]], "NNConv": [[375, null], [422, null]], "Negative Samplers for Link Prediction": [[3, "negative-samplers-for-link-prediction"]], "Negative sampling": [[11, "negative-sampling"]], "Negative \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[807, "negative"]], "NegativeSampler": [[7, "negativesampler"], [307, null]], "Neighbor Matching": [[6, "neighbor-matching"]], "Neighbor Sampling Overview": [[834, null], [834, "id1"]], "Neighbor sampling": [[11, "neighbor-sampling"]], "NeighborSampler": [[214, null], [308, null]], "Network Embedding Modules": [[16, "network-embedding-modules"]], "Node Classification": [[835, null]], "Node Classification Task": [[838, "Node-Classification-Task"], [839, "Node-Classification-Task"]], "Node Classification with DGL": [[840, null]], "Node Prediction Datasets": [[2, "node-prediction-datasets"]], "Node embedding optimizer": [[10, "node-embedding-optimizer"]], "Node-wise User-defined Function": [[20, "node-wise-user-defined-function"]], "NodeData": [[693, "nodedata"]], "NodeEmbedding": [[459, null]], "NodeShuffle": [[667, null]], "Non-linear activation functions": [[12, "non-linear-activation-functions"], [827, "Non-linear-activation-functions"]], "OnDiskDataset": [[309, null]], "OnDiskDataset for Heterogeneous Graph": [[838, null]], "OnDiskDataset for Homogeneous Graph": [[839, null]], "One layer in LGNN, algorithm structure": [[858, "one-layer-in-lgnn-algorithm-structure"]], "OpenMP settings": [[849, "openmp-settings"]], "Operations on Sparse Matrix": [[827, "Operations-on-Sparse-Matrix"]], "Operators": [[12, "operators"]], "Organize Data into YAML File": [[838, "Organize-Data-into-YAML-File"], [839, "Organize-Data-into-YAML-File"]], "Output format": [[700, "output-format"]], "Overview": [[731, "overview"], [732, "overview"], [734, "overview"], [735, "overview"], [736, "overview"], [831, "overview"]], "Overview of Graph Classification with GNN": [[844, "overview-of-graph-classification-with-gnn"]], "Overview of Link Prediction with GNN": [[843, "overview-of-link-prediction-with-gnn"]], "Overview of Neighborhood Sampling Approaches": [[716, "overview-of-neighborhood-sampling-approaches"]], "Overview of Node Classification with GNN": [[840, "overview-of-node-classification-with-gnn"]], "PATTERNDataset": [[174, null]], "PGExplainer": [[434, null]], "PNAConv": [[423, null]], "PPIDataset": [[175, null]], "PPR": [[668, null]], "Paper Study with DGL": [[872, null]], "ParMETIS Installation": [[700, "parmetis-installation"]], "ParMETIS \uacb0\uacfc\ub4e4\uc744 DGLGraph\ub85c \ubcc0\ud658\ud558\uae30": [[786, "parmetis-dglgraph"]], "ParMETIS \uc124\uce58": [[786, "parmetis"]], "ParMETIS \uc2e4\ud589\ud558\uae30 \ubc0f \uacb0\uacfc \ud3ec\uba67\ub4e4": [[786, "id9"]], "ParMETIS\ub97c \uc704\ud55c \uc785\ub825 \ud3ec\uba67": [[786, "id8"]], "Parallel METIS partitioning": [[700, "parallel-metis-partitioning"]], "Partition": [[4, "partition"]], "Partition a graph": [[852, "partition-a-graph"], [853, "partition-a-graph"]], "Path Encoding": [[689, "path-encoding"]], "PathEncoder": [[453, null]], "PerSourceUniform": [[225, null]], "Performance Benchmarks": [[828, null]], "Positive graph, negative graph, and apply_edges": [[843, "positive-graph-negative-graph-and-apply-edges"]], "Predicting Edge Type of an Existing Edge on a Heterogeneous Graph": [[732, "predicting-edge-type-of-an-existing-edge-on-a-heterogeneous-graph"]], "Prepare Data": [[687, null]], "Prepare training and testing sets": [[843, "prepare-training-and-testing-sets"]], "Preprocessing and postprocessing": [[869, "preprocessing-and-postprocessing"]], "Processing Graph Classification datasets": [[695, "processing-graph-classification-datasets"]], "Processing Node Classification datasets": [[695, "processing-node-classification-datasets"]], "Processing dataset for Link Prediction datasets": [[695, "processing-dataset-for-link-prediction-datasets"]], "Protein-protein interaction (PPI) networks": [[859, "protein-protein-interaction-ppi-networks"]], "PubmedGraphDataset": [[176, null]], "Put everything together": [[859, "put-everything-together"]], "Put it all together": [[869, "put-it-all-together"]], "Putting it together": [[862, "putting-it-together"], [865, "putting-it-together"]], "PyTorch backend": [[821, "pytorch-backend"]], "QM7bDataset": [[177, null]], "QM9Dataset": [[178, null]], "QM9EdgeDataset": [[179, null]], "Querying Graph Structures": [[841, "querying-graph-structures"]], "Querying and manipulating batch information": [[1, "querying-and-manipulating-batch-information"]], "Querying and manipulating node/edge ID type": [[1, "querying-and-manipulating-node-edge-id-type"]], "Querying and manipulating sparse format": [[1, "querying-and-manipulating-sparse-format"]], "Querying graph structure": [[1, "querying-graph-structure"]], "Querying metagraph structure": [[1, "querying-metagraph-structure"]], "QuestionsDataset": [[180, null]], "Quickstart": [[827, null]], "R-GCN layers": [[857, "r-gcn-layers"]], "RadiusGraph": [[437, null]], "Random walk": [[11, "random-walk"]], "RandomWalkPE": [[669, null]], "RedditDataset": [[181, null]], "Reduce functions": [[5, "reduce-functions"]], "Reduce operations": [[827, "Reduce-operations"]], "Reference to the distributed graph": [[852, "reference-to-the-distributed-graph"], [853, "reference-to-the-distributed-graph"]], "RelGraphConv": [[376, null], [424, null], [469, null]], "Relation with Message Passing APIs": [[9, "relation-with-message-passing-apis"]], "Relational Graph Convolutional Network": [[857, null]], "RemoveSelfLoop": [[670, null]], "Removing edges in the minibatch from the original graph for neighbor sampling": [[718, "removing-edges-in-the-minibatch-from-the-original-graph-for-neighbor-sampling"]], "Resources": [[829, null]], "Results": [[14, "results"]], "Revisit classic models from a graph perspective": [[870, null], [872, "revisit-classic-models-from-a-graph-perspective"]], "Roadmap": [[690, "roadmap"], [703, "roadmap"], [711, "roadmap"], [716, "roadmap"], [727, "roadmap"], [731, "roadmap"]], "RomanEmpireDataset": [[182, null]], "RowFeatNormalizer": [[671, null]], "Run ParMETIS and output format": [[700, "run-parmetis-and-output-format"]], "SAGEConv": [[377, null], [425, null], [470, null]], "SAINTSampler": [[215, null]], "SBMMixtureDataset": [[183, null]], "SGConv": [[378, null], [426, null], [471, null]], "SIGNDiffusion": [[672, null]], "SSH Access": [[852, "ssh-access"]], "SSTDataset": [[184, null]], "SVDPE": [[673, null]], "Sample neighbors with GraphBolt": [[852, "sample-neighbors-with-graphbolt"]], "SampledSubgraph": [[310, null]], "SampledSubgraphImpl": [[311, null]], "Sampler": [[216, null]], "Sampler Transformations": [[3, "sampler-transformations"]], "Sampler for Heterogeneous Graphs": [[717, "sampler-for-heterogeneous-graphs"]], "Samplers": [[3, "samplers"]], "SamplingGraph": [[312, null]], "Scenarios": [[831, "scenarios"]], "Score Modules for Link Prediction and Knowledge Graph Completion": [[16, "score-modules-for-link-prediction-and-knowledge-graph-completion"]], "Segment Reduce Module": [[9, "segment-reduce-module"]], "SegmentedKNNGraph": [[438, null]], "Sequential": [[386, null], [462, null]], "Set up distributed training environment": [[852, "set-up-distributed-training-environment"], [853, "set-up-distributed-training-environment"]], "Set2Set": [[383, null], [442, null]], "SetTransformerDecoder": [[443, null]], "SetTransformerEncoder": [[444, null]], "ShaDowKHopSampler": [[217, null]], "Simple implementation": [[869, "simple-implementation"]], "Single Machine Multi-GPU Minibatch Graph Classification": [[874, null]], "Single Machine Multi-GPU Minibatch Node Classification": [[875, null]], "Softmax": [[827, "Softmax"]], "SortPooling": [[384, null], [445, null], [476, null]], "Sparse Matrix": [[827, "Sparse-Matrix"]], "Sparse Multi-head Attention": [[824, "Sparse-Multi-head-Attention"]], "Sparse matrix class": [[12, "sparse-matrix-class"]], "Spatial Encoding": [[689, "spatial-encoding"]], "SpatialEncoder": [[454, null]], "SpatialEncoder3d": [[455, null]], "Spawning Trainer Processes": [[833, "Spawning-Trainer-Processes"], [875, "spawning-trainer-processes"]], "Specification": [[701, "specification"]], "Speeding up with built-in functions": [[869, "speeding-up-with-built-in-functions"]], "Split and Load Partitions": [[4, "split-and-load-partitions"]], "Split workloads": [[698, "split-workloads"]], "SquirrelDataset": [[185, null]], "Step 1": [[848, "step-1"]], "Step 1: Batching": [[862, "step-1-batching"]], "Step 1: Setup and graph initialization": [[868, "step-1-setup-and-graph-initialization"]], "Step 2": [[848, "step-2"]], "Step 2: Define message passing functions": [[868, "step-2-define-message-passing-functions"]], "Step 2: Tree-LSTM cell with message-passing APIs": [[862, "step-2-tree-lstm-cell-with-message-passing-apis"]], "Step 3": [[848, "step-3"]], "Step 3: Define traversal": [[862, "step-3-define-traversal"]], "Step 3: Testing": [[868, "step-3-testing"]], "Step 4": [[848, "step-4"]], "Step 5": [[848, "step-5"]], "Step 6": [[848, "step-6"]], "Step 7": [[848, "step-7"]], "Step 8": [[848, "step-8"]], "Step.1 Graph Partitioning": [[701, "step-1-graph-partitioning"]], "Step.2 Data Dispatching": [[701, "step-2-data-dispatching"]], "Subgraph Extraction Ops": [[0, "subgraph-extraction-ops"]], "SubgraphSampler": [[7, "subgraphsampler"], [313, null]], "SubgraphX": [[435, null]], "Subset": [[196, null]], "SumPooling": [[385, null], [446, null], [477, null]], "Supervised community detection task with the Cora dataset": [[858, "supervised-community-detection-task-with-the-cora-dataset"]], "Supported Data types": [[9, "supported-data-types"]], "Supporting Multiple Platforms": [[21, "supporting-multiple-platforms"]], "System requirements": [[821, "system-requirements"]], "TAGConv": [[379, null], [427, null]], "TUDataset": [[186, null]], "TWIRLSConv": [[428, null]], "TWIRLSUnfoldingAndAttention": [[429, null]], "Task": [[314, null]], "Task and the dataset": [[869, "task-and-the-dataset"]], "TemporalLayerNeighborSampler": [[315, null]], "TemporalNeighborSampler": [[316, null]], "Tensorflow backend": [[821, "tensorflow-backend"]], "TexasDataset": [[187, null]], "The DGMG class": [[865, "the-dgmg-class"]], "The second task, link prediction": [[857, "the-second-task-link-prediction"]], "The task and the dataset": [[862, "the-task-and-the-dataset"]], "Tips for making chunked graph data": [[701, "tips-for-making-chunked-graph-data"]], "ToLevi": [[674, null]], "ToSimple": [[675, null]], "TolokersDataset": [[188, null]], "Top-level": [[693, "top-level"]], "TorchBasedFeature": [[317, null]], "TorchBasedFeatureStore": [[318, null]], "Training": [[823, "Training"], [824, "Training"], [869, "training"]], "Training Loop": [[718, "training-loop"], [723, "training-loop"], [734, "training-loop"], [833, "Training-Loop"], [844, "training-loop"], [875, "training-loop"]], "Training a GNN for Graph Classification": [[844, null]], "Training and Evaluation": [[825, "Training-and-Evaluation"]], "Training and inference": [[858, "training-and-inference"]], "Training loop": [[721, "training-loop"], [732, "training-loop"], [735, "training-loop"], [736, "training-loop"], [842, "training-loop"], [843, "training-loop"], [852, "training-loop"], [853, "training-loop"], [857, "training-loop"]], "Training on CPUs": [[850, null]], "Training on GPU": [[840, "training-on-gpu"]], "Training on Multiple GPUs": [[876, null]], "Training the GCN": [[822, "Training-the-GCN"], [840, "training-the-gcn"]], "TransE": [[457, null]], "TransR": [[458, null]], "Transformer as a Graph Neural Network": [[869, null]], "Transforming graph": [[1, "transforming-graph"]], "Tree-LSTM in DGL": [[862, null]], "TreeCycleDataset": [[189, null]], "TreeGridDataset": [[190, null]], "Tutorials: dgl.sparse": [[826, null]], "TypedLinear": [[392, null]], "UVA and GPU support for PinSAGESampler/RandomWalkNeighborSampler": [[719, "uva-and-gpu-support-for-pinsagesampler-randomwalkneighborsampler"]], "Understand Graph Attention Network": [[859, null]], "Uniform": [[226, null]], "UniformNegativeSampler": [[319, null]], "Unit tests": [[21, "unit-tests"]], "Update feature after reducing for output": [[729, "update-feature-after-reducing-for-output"]], "Update node embeddings via graph propagation": [[865, "update-node-embeddings-via-graph-propagation"]], "User Guide": [[710, null]], "User-defined Functions": [[20, null]], "Using CUDA UVA-based neighborhood sampling in DGL data loaders": [[719, "using-cuda-uva-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using GPU-based neighbor sampling with DGL functions": [[719, "using-gpu-based-neighbor-sampling-with-dgl-functions"]], "Using GPU-based neighborhood sampling in DGL data loaders": [[719, "using-gpu-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using NN Modules with Edge Weights": [[733, "using-nn-modules-with-edge-weights"]], "Using Node/edge features": [[1, "using-node-edge-features"]], "Utilities": [[0, "utilities"], [2, "utilities"], [7, "utilities"]], "Utility Class and Functions for Feature Prefetching": [[3, "utility-class-and-functions-for-feature-prefetching"]], "Utility Modules": [[15, "utility-modules"], [16, "utility-modules"]], "Utility Modules for Graph Transformer": [[16, "utility-modules-for-graph-transformer"]], "Visualization": [[869, "visualization"]], "Visualize training progress": [[858, "visualize-training-progress"]], "Visualizing and understanding attention learned": [[859, "visualizing-and-understanding-attention-learned"]], "WN18Dataset": [[191, null]], "WeightAndSum": [[447, null]], "WeightBasis": [[463, null]], "Weighted reduction across GPUs": [[833, "Weighted-reduction-across-GPUs"]], "Welcome to Deep Graph Library Tutorials and Documentation": [[820, null]], "What is a line-graph?": [[858, "what-is-a-line-graph"]], "What\u2019s next": [[844, "whats-next"]], "What\u2019s next?": [[840, "whats-next"], [841, "whats-next"], [842, "whats-next"], [859, "what-s-next"]], "WikiCSDataset": [[192, null]], "Windows": [[821, "windows"]], "WisconsinDataset": [[193, null]], "Working with Multiple Types": [[709, "working-with-multiple-types"]], "Working with different backends": [[821, "working-with-different-backends"]], "Write your own GNN module": [[842, null]], "Writing Neural Network Model": [[734, "writing-neural-network-model"]], "Writing modules that work on homogeneous graphs, bipartite graphs, and MFGs": [[722, "writing-modules-that-work-on-homogeneous-graphs-bipartite-graphs-and-mfgs"]], "Writing neural network model": [[736, "writing-neural-network-model"]], "YAML specification": [[837, null]], "YelpDataset": [[194, null]], "ZINCDataset": [[195, null]], "add_node_property_split": [[197, null]], "add_nodepred_split": [[198, null]], "check_sha1": [[199, null]], "dataset_name": [[837, "dataset-name"]], "dgl": [[0, null]], "dgl.DGLGraph": [[1, null]], "dgl.DGLGraph.__getitem__": [[26, null]], "dgl.DGLGraph.add_edges": [[27, null]], "dgl.DGLGraph.add_nodes": [[28, null]], "dgl.DGLGraph.add_self_loop": [[29, null]], "dgl.DGLGraph.adj": [[30, null]], "dgl.DGLGraph.adj_external": [[31, null]], "dgl.DGLGraph.adj_tensors": [[32, null]], "dgl.DGLGraph.adjacency_matrix": [[33, null]], "dgl.DGLGraph.apply_edges": [[34, null]], "dgl.DGLGraph.apply_nodes": [[35, null]], "dgl.DGLGraph.batch_num_edges": [[36, null]], "dgl.DGLGraph.batch_num_nodes": [[37, null]], "dgl.DGLGraph.batch_size": [[38, null]], "dgl.DGLGraph.canonical_etypes": [[39, null]], "dgl.DGLGraph.cpu": [[40, null]], "dgl.DGLGraph.create_formats_": [[41, null]], "dgl.DGLGraph.device": [[42, null]], "dgl.DGLGraph.dstdata": [[43, null]], "dgl.DGLGraph.dstnodes": [[44, null]], "dgl.DGLGraph.dsttypes": [[45, null]], "dgl.DGLGraph.edata": [[46, null]], "dgl.DGLGraph.edge_attr_schemes": [[47, null]], "dgl.DGLGraph.edge_ids": [[48, null]], "dgl.DGLGraph.edge_subgraph": [[49, null]], "dgl.DGLGraph.edge_type_subgraph": [[50, null]], "dgl.DGLGraph.edges": [[51, null]], "dgl.DGLGraph.etypes": [[52, null]], "dgl.DGLGraph.filter_edges": [[53, null]], "dgl.DGLGraph.filter_nodes": [[54, null]], "dgl.DGLGraph.find_edges": [[55, null]], "dgl.DGLGraph.formats": [[56, null]], "dgl.DGLGraph.has_edges_between": [[57, null]], "dgl.DGLGraph.has_nodes": [[58, null]], "dgl.DGLGraph.idtype": [[59, null]], "dgl.DGLGraph.in_degrees": [[60, null]], "dgl.DGLGraph.in_edges": [[61, null]], "dgl.DGLGraph.inc": [[62, null]], "dgl.DGLGraph.incidence_matrix": [[63, null]], "dgl.DGLGraph.int": [[64, null]], "dgl.DGLGraph.is_homogeneous": [[65, null]], "dgl.DGLGraph.is_multigraph": [[66, null]], "dgl.DGLGraph.is_pinned": [[67, null]], "dgl.DGLGraph.is_unibipartite": [[68, null]], "dgl.DGLGraph.line_graph": [[69, null]], "dgl.DGLGraph.local_scope": [[70, null]], "dgl.DGLGraph.long": [[71, null]], "dgl.DGLGraph.metagraph": [[72, null]], "dgl.DGLGraph.multi_update_all": [[73, null]], "dgl.DGLGraph.ndata": [[74, null]], "dgl.DGLGraph.node_attr_schemes": [[75, null]], "dgl.DGLGraph.node_type_subgraph": [[76, null]], "dgl.DGLGraph.nodes": [[77, null]], "dgl.DGLGraph.ntypes": [[78, null]], "dgl.DGLGraph.num_dst_nodes": [[79, null]], "dgl.DGLGraph.num_edges": [[80, null]], "dgl.DGLGraph.num_nodes": [[81, null]], "dgl.DGLGraph.num_src_nodes": [[82, null]], "dgl.DGLGraph.number_of_dst_nodes": [[83, null]], "dgl.DGLGraph.number_of_edges": [[84, null]], "dgl.DGLGraph.number_of_nodes": [[85, null]], "dgl.DGLGraph.number_of_src_nodes": [[86, null]], "dgl.DGLGraph.out_degrees": [[87, null]], "dgl.DGLGraph.out_edges": [[88, null]], "dgl.DGLGraph.pin_memory_": [[89, null]], "dgl.DGLGraph.predecessors": [[90, null]], "dgl.DGLGraph.prop_edges": [[91, null]], "dgl.DGLGraph.prop_nodes": [[92, null]], "dgl.DGLGraph.pull": [[93, null]], "dgl.DGLGraph.push": [[94, null]], "dgl.DGLGraph.remove_edges": [[95, null]], "dgl.DGLGraph.remove_nodes": [[96, null]], "dgl.DGLGraph.remove_self_loop": [[97, null]], "dgl.DGLGraph.reorder_graph": [[98, null]], "dgl.DGLGraph.reverse": [[99, null]], "dgl.DGLGraph.send_and_recv": [[100, null]], "dgl.DGLGraph.set_batch_num_edges": [[101, null]], "dgl.DGLGraph.set_batch_num_nodes": [[102, null]], "dgl.DGLGraph.srcdata": [[103, null]], "dgl.DGLGraph.srcnodes": [[104, null]], "dgl.DGLGraph.srctypes": [[105, null]], "dgl.DGLGraph.subgraph": [[106, null]], "dgl.DGLGraph.successors": [[107, null]], "dgl.DGLGraph.to": [[108, null]], "dgl.DGLGraph.to_canonical_etype": [[109, null]], "dgl.DGLGraph.to_cugraph": [[110, null]], "dgl.DGLGraph.to_simple": [[111, null]], "dgl.DGLGraph.unpin_memory_": [[112, null]], "dgl.DGLGraph.update_all": [[113, null]], "dgl.add_edges": [[114, null]], "dgl.add_nodes": [[115, null]], "dgl.add_reverse_edges": [[116, null]], "dgl.add_self_loop": [[117, null]], "dgl.adj_product_graph": [[118, null]], "dgl.adj_sum_graph": [[119, null]], "dgl.adjusted_homophily": [[120, null]], "dgl.apply_each": [[121, null]], "dgl.batch": [[122, null]], "dgl.bfs_edges_generator": [[123, null]], "dgl.bfs_nodes_generator": [[124, null]], "dgl.bipartite_from_networkx": [[125, null]], "dgl.bipartite_from_scipy": [[126, null]], "dgl.block_to_graph": [[127, null]], "dgl.broadcast_edges": [[128, null]], "dgl.broadcast_nodes": [[129, null]], "dgl.compact_graphs": [[130, null]], "dgl.create_block": [[131, null]], "dgl.data": [[2, null]], "dgl.dataloading": [[3, null]], "dgl.dataloading.BlockSampler": [[208, null]], "dgl.dataloading.as_edge_prediction_sampler": [[218, null]], "dgl.dfs_edges_generator": [[227, null]], "dgl.dfs_labeled_edges_generator": [[228, null]], "dgl.distributed": [[4, null]], "dgl.distributed.dgl_partition_to_graphbolt": [[229, null]], "dgl.distributed.edge_split": [[230, null]], "dgl.distributed.find_edges": [[231, null]], "dgl.distributed.in_subgraph": [[232, null]], "dgl.distributed.initialize": [[233, null]], "dgl.distributed.load_partition": [[234, null]], "dgl.distributed.load_partition_book": [[235, null]], "dgl.distributed.load_partition_feats": [[236, null]], "dgl.distributed.node_split": [[237, null]], "dgl.distributed.partition_graph": [[238, null]], "dgl.distributed.sample_etype_neighbors": [[239, null]], "dgl.distributed.sample_neighbors": [[240, null]], "dgl.double_radius_node_labeling": [[241, null]], "dgl.edge_homophily": [[242, null]], "dgl.edge_label_informativeness": [[243, null]], "dgl.edge_subgraph": [[244, null]], "dgl.edge_type_subgraph": [[245, null]], "dgl.from_cugraph": [[246, null]], "dgl.from_networkx": [[247, null]], "dgl.from_scipy": [[248, null]], "dgl.function": [[5, null]], "dgl.function.copy_e": [[249, null]], "dgl.function.copy_u": [[250, null]], "dgl.function.e_add_u": [[251, null]], "dgl.function.e_add_v": [[252, null]], "dgl.function.e_div_u": [[253, null]], "dgl.function.e_div_v": [[254, null]], "dgl.function.e_dot_u": [[255, null]], "dgl.function.e_dot_v": [[256, null]], "dgl.function.e_mul_u": [[257, null]], "dgl.function.e_mul_v": [[258, null]], "dgl.function.e_sub_u": [[259, null]], "dgl.function.e_sub_v": [[260, null]], "dgl.function.max": [[261, null]], "dgl.function.mean": [[262, null]], "dgl.function.min": [[263, null]], "dgl.function.sum": [[264, null]], "dgl.function.u_add_e": [[265, null]], "dgl.function.u_add_v": [[266, null]], "dgl.function.u_div_e": [[267, null]], "dgl.function.u_div_v": [[268, null]], "dgl.function.u_dot_e": [[269, null]], "dgl.function.u_dot_v": [[270, null]], "dgl.function.u_mul_e": [[271, null]], "dgl.function.u_mul_v": [[272, null]], "dgl.function.u_sub_e": [[273, null]], "dgl.function.u_sub_v": [[274, null]], "dgl.function.v_add_e": [[275, null]], "dgl.function.v_add_u": [[276, null]], "dgl.function.v_div_e": [[277, null]], "dgl.function.v_div_u": [[278, null]], "dgl.function.v_dot_e": [[279, null]], "dgl.function.v_dot_u": [[280, null]], "dgl.function.v_mul_e": [[281, null]], "dgl.function.v_mul_u": [[282, null]], "dgl.function.v_sub_e": [[283, null]], "dgl.function.v_sub_u": [[284, null]], "dgl.geometry": [[6, null]], "dgl.graph": [[285, null]], "dgl.graphbolt.add_reverse_edges": [[320, null]], "dgl.graphbolt.compact_csc_format": [[321, null]], "dgl.graphbolt.cpu_cached_feature": [[322, null]], "dgl.graphbolt.etype_str_to_tuple": [[323, null]], "dgl.graphbolt.etype_tuple_to_str": [[324, null]], "dgl.graphbolt.exclude_seed_edges": [[325, null]], "dgl.graphbolt.expand_indptr": [[326, null]], "dgl.graphbolt.from_dglgraph": [[327, null]], "dgl.graphbolt.fused_csc_sampling_graph": [[328, null]], "dgl.graphbolt.gpu_cached_feature": [[329, null]], "dgl.graphbolt.index_select": [[330, null]], "dgl.graphbolt.indptr_edge_ids": [[331, null]], "dgl.graphbolt.isin": [[332, null]], "dgl.graphbolt.load_from_shared_memory": [[333, null]], "dgl.graphbolt.numpy_save_aligned": [[334, null]], "dgl.graphbolt.seed": [[335, null]], "dgl.graphbolt.unique_and_compact": [[336, null]], "dgl.graphbolt.unique_and_compact_csc_formats": [[337, null]], "dgl.heterograph": [[338, null]], "dgl.in_subgraph": [[339, null]], "dgl.is_libxsmm_enabled": [[340, null]], "dgl.khop_adj": [[341, null]], "dgl.khop_graph": [[342, null]], "dgl.khop_in_subgraph": [[343, null]], "dgl.khop_out_subgraph": [[344, null]], "dgl.knn_graph": [[345, null]], "dgl.lap_pe": [[346, null]], "dgl.laplacian_lambda_max": [[347, null]], "dgl.line_graph": [[348, null]], "dgl.linkx_homophily": [[349, null]], "dgl.load_graphs": [[350, null]], "dgl.max_edges": [[351, null]], "dgl.max_nodes": [[352, null]], "dgl.mean_edges": [[353, null]], "dgl.mean_nodes": [[354, null]], "dgl.merge": [[355, null]], "dgl.metapath_reachable_graph": [[356, null]], "dgl.metis_partition": [[357, null]], "dgl.metis_partition_assignment": [[358, null]], "dgl.multiprocessing": [[8, null]], "dgl.multiprocessing.pytorch.call_once_and_share": [[359, null]], "dgl.multiprocessing.pytorch.shared_tensor": [[360, null]], "dgl.nn (MXNet)": [[15, null]], "dgl.nn (PyTorch)": [[16, null]], "dgl.nn (TensorFlow)": [[17, null]], "dgl.nn.functional": [[18, null]], "dgl.nn.functional.edge_softmax": [[361, null]], "dgl.node_homophily": [[478, null]], "dgl.node_label_informativeness": [[479, null]], "dgl.node_subgraph": [[480, null]], "dgl.node_type_subgraph": [[481, null]], "dgl.norm_by_dst": [[482, null]], "dgl.ops": [[9, null]], "dgl.ops.copy_e_max": [[483, null]], "dgl.ops.copy_e_mean": [[484, null]], "dgl.ops.copy_e_min": [[485, null]], "dgl.ops.copy_e_sum": [[486, null]], "dgl.ops.copy_u": [[487, null]], "dgl.ops.copy_u_max": [[488, null]], "dgl.ops.copy_u_mean": [[489, null]], "dgl.ops.copy_u_min": [[490, null]], "dgl.ops.copy_u_sum": [[491, null]], "dgl.ops.copy_v": [[492, null]], "dgl.ops.e_add_u": [[493, null]], "dgl.ops.e_add_v": [[494, null]], "dgl.ops.e_div_u": [[495, null]], "dgl.ops.e_div_v": [[496, null]], "dgl.ops.e_dot_u": [[497, null]], "dgl.ops.e_dot_v": [[498, null]], "dgl.ops.e_mul_u": [[499, null]], "dgl.ops.e_mul_v": [[500, null]], "dgl.ops.e_sub_u": [[501, null]], "dgl.ops.e_sub_v": [[502, null]], "dgl.ops.gather_mm": [[503, null]], "dgl.ops.gsddmm": [[504, null]], "dgl.ops.gspmm": [[505, null]], "dgl.ops.segment_mm": [[506, null]], "dgl.ops.segment_reduce": [[507, null]], "dgl.ops.u_add_e": [[508, null]], "dgl.ops.u_add_e_max": [[509, null]], "dgl.ops.u_add_e_mean": [[510, null]], "dgl.ops.u_add_e_min": [[511, null]], "dgl.ops.u_add_e_sum": [[512, null]], "dgl.ops.u_add_v": [[513, null]], "dgl.ops.u_div_e": [[514, null]], "dgl.ops.u_div_e_max": [[515, null]], "dgl.ops.u_div_e_mean": [[516, null]], "dgl.ops.u_div_e_min": [[517, null]], "dgl.ops.u_div_e_sum": [[518, null]], "dgl.ops.u_div_v": [[519, null]], "dgl.ops.u_dot_e": [[520, null]], "dgl.ops.u_dot_v": [[521, null]], "dgl.ops.u_mul_e": [[522, null]], "dgl.ops.u_mul_e_max": [[523, null]], "dgl.ops.u_mul_e_mean": [[524, null]], "dgl.ops.u_mul_e_min": [[525, null]], "dgl.ops.u_mul_e_sum": [[526, null]], "dgl.ops.u_mul_v": [[527, null]], "dgl.ops.u_sub_e": [[528, null]], "dgl.ops.u_sub_e_max": [[529, null]], "dgl.ops.u_sub_e_mean": [[530, null]], "dgl.ops.u_sub_e_min": [[531, null]], "dgl.ops.u_sub_e_sum": [[532, null]], "dgl.ops.u_sub_v": [[533, null]], "dgl.ops.v_add_e": [[534, null]], "dgl.ops.v_add_u": [[535, null]], "dgl.ops.v_div_e": [[536, null]], "dgl.ops.v_div_u": [[537, null]], "dgl.ops.v_dot_e": [[538, null]], "dgl.ops.v_dot_u": [[539, null]], "dgl.ops.v_mul_e": [[540, null]], "dgl.ops.v_mul_u": [[541, null]], "dgl.ops.v_sub_e": [[542, null]], "dgl.ops.v_sub_u": [[543, null]], "dgl.optim": [[10, null]], "dgl.out_subgraph": [[544, null]], "dgl.partition_graph_with_halo": [[545, null]], "dgl.prop_edges": [[546, null]], "dgl.prop_edges_dfs": [[547, null]], "dgl.prop_nodes": [[548, null]], "dgl.prop_nodes_bfs": [[549, null]], "dgl.prop_nodes_topo": [[550, null]], "dgl.radius_graph": [[551, null]], "dgl.rand_bipartite": [[552, null]], "dgl.rand_graph": [[553, null]], "dgl.random_walk_pe": [[554, null]], "dgl.readout_edges": [[555, null]], "dgl.readout_nodes": [[556, null]], "dgl.remove_edges": [[557, null]], "dgl.remove_nodes": [[558, null]], "dgl.remove_self_loop": [[559, null]], "dgl.reorder_graph": [[560, null]], "dgl.reverse": [[561, null]], "dgl.sampling": [[11, null]], "dgl.sampling.PinSAGESampler": [[562, null]], "dgl.sampling.global_uniform_negative_sampling": [[563, null]], "dgl.sampling.node2vec_random_walk": [[564, null]], "dgl.sampling.pack_traces": [[565, null]], "dgl.sampling.random_walk": [[566, null]], "dgl.sampling.sample_labors": [[567, null]], "dgl.sampling.sample_neighbors": [[568, null]], "dgl.sampling.sample_neighbors_biased": [[569, null]], "dgl.sampling.select_topk": [[570, null]], "dgl.save_graphs": [[571, null]], "dgl.seed": [[572, null]], "dgl.segmented_knn_graph": [[573, null]], "dgl.shortest_dist": [[574, null]], "dgl.slice_batch": [[575, null]], "dgl.softmax_edges": [[576, null]], "dgl.softmax_nodes": [[577, null]], "dgl.sort_csc_by_tag": [[578, null]], "dgl.sort_csr_by_tag": [[579, null]], "dgl.sparse": [[12, null]], "dgl.sparse.SparseMatrix.T": [[580, null]], "dgl.sparse.SparseMatrix.coalesce": [[581, null]], "dgl.sparse.SparseMatrix.col": [[582, null]], "dgl.sparse.SparseMatrix.coo": [[583, null]], "dgl.sparse.SparseMatrix.cpu": [[584, null]], "dgl.sparse.SparseMatrix.csc": [[585, null]], "dgl.sparse.SparseMatrix.csr": [[586, null]], "dgl.sparse.SparseMatrix.cuda": [[587, null]], "dgl.sparse.SparseMatrix.device": [[588, null]], "dgl.sparse.SparseMatrix.double": [[589, null]], "dgl.sparse.SparseMatrix.dtype": [[590, null]], "dgl.sparse.SparseMatrix.float": [[591, null]], "dgl.sparse.SparseMatrix.has_duplicate": [[592, null]], "dgl.sparse.SparseMatrix.indices": [[593, null]], "dgl.sparse.SparseMatrix.int": [[594, null]], "dgl.sparse.SparseMatrix.long": [[595, null]], "dgl.sparse.SparseMatrix.neg": [[596, null]], "dgl.sparse.SparseMatrix.nnz": [[597, null]], "dgl.sparse.SparseMatrix.reduce": [[598, null]], "dgl.sparse.SparseMatrix.row": [[599, null]], "dgl.sparse.SparseMatrix.shape": [[600, null]], "dgl.sparse.SparseMatrix.smax": [[601, null]], "dgl.sparse.SparseMatrix.smean": [[602, null]], "dgl.sparse.SparseMatrix.smin": [[603, null]], "dgl.sparse.SparseMatrix.softmax": [[604, null]], "dgl.sparse.SparseMatrix.sum": [[605, null]], "dgl.sparse.SparseMatrix.t": [[606, null]], "dgl.sparse.SparseMatrix.to": [[607, null]], "dgl.sparse.SparseMatrix.to_dense": [[608, null]], "dgl.sparse.SparseMatrix.transpose": [[609, null]], "dgl.sparse.SparseMatrix.val": [[610, null]], "dgl.sparse.add": [[611, null]], "dgl.sparse.bsddmm": [[612, null]], "dgl.sparse.bspmm": [[613, null]], "dgl.sparse.diag": [[614, null]], "dgl.sparse.div": [[615, null]], "dgl.sparse.from_coo": [[616, null]], "dgl.sparse.from_csc": [[617, null]], "dgl.sparse.from_csr": [[618, null]], "dgl.sparse.identity": [[619, null]], "dgl.sparse.matmul": [[620, null]], "dgl.sparse.mul": [[621, null]], "dgl.sparse.power": [[622, null]], "dgl.sparse.sddmm": [[623, null]], "dgl.sparse.softmax": [[624, null]], "dgl.sparse.sp_add_v": [[625, null]], "dgl.sparse.sp_broadcast_v": [[626, null]], "dgl.sparse.sp_div_v": [[627, null]], "dgl.sparse.sp_mul_v": [[628, null]], "dgl.sparse.sp_sub_v": [[629, null]], "dgl.sparse.spmatrix": [[630, null]], "dgl.sparse.spmm": [[631, null]], "dgl.sparse.spspmm": [[632, null]], "dgl.sparse.sub": [[633, null]], "dgl.sparse.val_like": [[634, null]], "dgl.sum_edges": [[635, null]], "dgl.sum_nodes": [[636, null]], "dgl.svd_pe": [[637, null]], "dgl.to_bidirected": [[638, null]], "dgl.to_block": [[639, null]], "dgl.to_cugraph": [[640, null]], "dgl.to_double": [[641, null]], "dgl.to_float": [[642, null]], "dgl.to_half": [[643, null]], "dgl.to_heterogeneous": [[644, null]], "dgl.to_homogeneous": [[645, null]], "dgl.to_networkx": [[646, null]], "dgl.to_simple": [[647, null]], "dgl.to_simple_graph": [[648, null]], "dgl.topk_edges": [[649, null]], "dgl.topk_nodes": [[650, null]], "dgl.topological_nodes_generator": [[651, null]], "dgl.transforms": [[19, null]], "dgl.udf.EdgeBatch.batch_size": [[676, null]], "dgl.udf.EdgeBatch.data": [[677, null]], "dgl.udf.EdgeBatch.dst": [[678, null]], "dgl.udf.EdgeBatch.edges": [[679, null]], "dgl.udf.EdgeBatch.src": [[680, null]], "dgl.udf.NodeBatch.batch_size": [[681, null]], "dgl.udf.NodeBatch.data": [[682, null]], "dgl.udf.NodeBatch.mailbox": [[683, null]], "dgl.udf.NodeBatch.nodes": [[684, null]], "dgl.unbatch": [[685, null]], "dgl.use_libxsmm": [[686, null]], "download": [[200, null]], "edges.csv": [[705, "id2"], [749, "id6"], [790, "id6"]], "extract_archive": [[201, null]], "feature_data": [[837, "feature-data"]], "get_download_dir": [[202, null]], "graph": [[837, "graph"]], "load_info": [[203, null]], "load_labels": [[204, null]], "macOS": [[821, "macos"]], "mask_nodes_by_property": [[205, null]], "nodes.csv": [[705, "id1"], [749, "id5"], [790, "id5"]], "save_info": [[206, null]], "set_dst_lazy_features": [[220, null]], "set_edge_lazy_features": [[221, null]], "set_node_lazy_features": [[222, null]], "set_src_lazy_features": [[223, null]], "split_dataset": [[207, null]], "tasks": [[837, "tasks"]], "v0.4.3 Benchmarks": [[828, "v0-4-3-benchmarks"]], "v0.5 Benchmarks": [[828, "v0-5-benchmarks"]], "v0.6 Benchmarks": [[828, "v0-6-benchmarks"]], "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": [[772, "id3"]], "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": [[749, "id2"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": [[749, "id3"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": [[753, "id4"]], "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": [[753, "id3"]], "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": [[773, "id2"]], "\u5206\u5272\u6570\u636e\u96c6": [[744, "id8"]], "\u5206\u5e03\u5f0f\u56fe": [[744, "id1"]], "\u5206\u5e03\u5f0f\u5d4c\u5165": [[744, "id6"]], "\u5206\u5e03\u5f0f\u5f20\u91cf": [[744, "id5"]], "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": [[744, "id2"]], "\u5206\u5e03\u5f0f\u91c7\u6837": [[744, "id7"]], "\u521b\u5efaDistGraph": [[744, "distgraph"]], "\u521b\u5efa\u5f02\u6784\u56fe": [[753, "id2"]], "\u56fe\u8bfb\u51fa": [[774, "id4"]], "\u5728NN\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": [[773, "nn"]], "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": [[772, "id6"]], "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": [[741, "id2"]], "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": [[741, "id3"]], "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": [[741, "id4"]], "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": [[761, "id4"]], "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[762, "id2"], [766, "id2"]], "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": [[761, "guide-cn-minibatch-customizing-neighborhood-sampler-impl"]], "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": [[763, "id2"]], "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe\u3001\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": [[765, "id2"]], "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": [[753, "id6"]], "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": [[762, "id3"]], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": [[766, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[774, "id10"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": [[765, "id1"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": [[762, "id6"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[776, "guide-cn-training-rgcn-node-classification"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[772, "guide-cn-training-edge-classification-heterogeneous-graph"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": [[761, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[775, "id4"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": [[764, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": [[761, "id7"]], "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": [[771, "guide-cn-training-heterogeneous-graph-example"]], "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": [[774, "id6"]], "\u6279\u6b21\u7684\u56fe": [[774, "id3"]], "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": [[761, "id3"]], "\u6570\u636e\u52a0\u8f7d": [[774, "id9"]], "\u672c\u7ae0\u8def\u7ebf\u56fe": [[737, "id2"], [747, "id2"], [755, "id3"], [760, "id3"], [767, "id1"], [771, "id4"]], "\u6982\u8ff0": [[771, "id2"], [772, "id2"], [774, "id2"], [775, "id2"], [776, "id2"]], "\u6a21\u578b\u5b9a\u4e49": [[774, "id7"]], "\u6a21\u578b\u7684\u8bad\u7ec3": [[762, "id5"], [764, "id4"], [766, "id4"], [772, "id4"], [774, "id8"], [775, "id3"], [776, "id4"]], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": [[769, "id2"]], "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[755, "id2"]], "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": [[761, "id2"]], "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011": [[754, null]], "\u7b2c1\u7ae0\uff1a\u56fe": [[747, null]], "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[755, null]], "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757": [[767, null]], "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [[737, null]], "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [[771, null]], "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3": [[760, null]], "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3": [[743, null]], "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[764, "id2"]], "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [[774, "id5"], [776, "id3"]], "\u805a\u5408\u540e\uff0c\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": [[769, "id3"]], "\u8bbf\u95ee\u56fe\u7ed3\u6784": [[744, "id3"]], "\u8bbf\u95ee\u8282\u70b9/\u8fb9\u6570\u636e": [[744, "id4"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [[764, "id3"], [766, "guide-cn-minibatch-node-classification-model"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": [[762, "id4"]], "\u8d1f\u8f7d\u5747\u8861": [[745, "id2"]], "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": [[769, "id1"]], "\u8fb9\u7c7b\u578b\u5b50\u56fe": [[753, "id5"]], "\u9017\u53f7\u5206\u9694\u503c\uff08CSV\uff09": [[749, "csv"], [753, "csv"]], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": [[760, "id2"]], "\uac1c\uc694": [[815, "id2"], [816, "id1"], [817, "id2"], [818, "id2"], [819, "id1"]], "\uadf8\ub798\ud504 \uad6c\uc870 \uc811\uadfc": [[784, "id1"]], "\uadf8\ub798\ud504 \ub9ac\ub4dc\uc544\uc6c3(readout)": [[817, "readout"]], "\uadf8\ub798\ud504 \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[781, "id2"]], "\uadf8\ub798\ud504 \uccb4\ud06c\uc640 \uadf8\ub798\ud504 \ud0c0\uc785 \uba85\uc138\ud654(graph type specification)": [[813, "graph-type-specification"]], "\uadf8\ub798\ud504\ub4e4\uc758 \ubc30\uce58(batch)": [[817, "batch"]], "\ub178\ub4dc \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[781, "id3"]], "\ub178\ub4dc \ubd84\ub958 \ubaa8\ub378\uacfc \uad6c\ud604\uc0c1\uc758 \ucc28\uc774\uc810": [[816, "id2"]], "\ub178\ub4dc/\uc5d0\uc9c0 \ub370\uc774\ud130 \uc811\uadfc": [[784, "id2"]], "\ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc791\uc131\ud558\uae30": [[817, "id3"], [819, "id2"]], "\ub2e4\uc591\ud55c \ud0c0\uc785\uc744 \ub2e4\ub8e8\uae30": [[794, "id2"]], "\ub370\uc774\ud130 \ub85c\ub529": [[817, "id7"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[790, "id3"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uc774\uc885 \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[794, "id3"]], "\ub85c\ub4dc \ubc38\ub7f0\uc2f1": [[786, "id2"]], "\ub85c\ub4dc\ub9f5": [[777, "id2"], [788, "id2"], [796, "id1"], [802, "id1"], [811, "id1"], [815, "id3"]], "\ub9c1\ud06c \uc608\uce21 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[781, "id4"]], "\uba40\ud2f0-\ub808\uc774\uc5b4 \ubbf8\ub2c8\ubc30\uce58 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc744 \uc704\ud55c \uc774\ubd84 \uad6c\uc870(Bipartite Structure)": [[803, "bipartite-structure"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec \uc758\uc874\uc131 \ucc3e\uae30": [[803, "id3"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec\uacfc \ucd95\uc57d": [[813, "id1"]], "\uba54\uc9c0\uc2dc \uc804\ub2ec \ud328\ub7ec\ub2e4\uc784(Message Passing Paradigm)": [[796, "message-passing-paradigm"]], "\ubaa8\ub378 \uc815\uc758\ud558\uae30": [[817, "id5"]], "\ubaa8\ub378\uc744 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc5d0 \ub9de\uac8c \ub9cc\ub4e4\uae30": [[804, "id3"], [807, "id1"], [809, "guide-ko-minibatch-node-classification-model"]], "\ubc30\uce58 \uadf8\ub798\ud504\uc5d0 \uc5f0\uc0b0\ud558\uae30": [[817, "id4"]], "\ubd84\uc0b0 DistEmbedding": [[784, "distembedding"]], "\ubd84\uc0b0 \ubaa8\ub4dc vs. \ub2e8\ub3c5(standalone) \ubaa8\ub4dc": [[784, "vs-standalone"]], "\ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[784, "id3"]], "\ubd84\uc0b0 \ud150\uc11c(Distributed Tensor)": [[784, "distributed-tensor"]], "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]": [[795, null]], "\uc5d0\uc9c0 \ud0c0\uc785 \uc11c\ube0c\uadf8\ub798\ud504": [[794, "id4"]], "\uc624\ud504\ub77c\uc778 \ucd94\ub860 \uad6c\ud604\ud558\uae30": [[806, "id2"]], "\uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud574\uc11c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[790, "id2"]], "\uc6cc\ud06c\ub85c\ub4dc \ub098\ub204\uae30(Split workloads)": [[784, "split-workloads"]], "\uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[804, "id1"], [809, "id1"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc9c1\uc811 \ud574\ubcf4\uae30": [[803, "id2"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1(Neighborhood Sampling) \ubc29\ubc95 \uac1c\uc694": [[802, "neighborhood-sampling"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc704\ud574\uc11c \uc6d0\ubcf8 \uadf8\ub798\ud504\uc5d0\uc11c \ubbf8\ub2c8 \ubc30\uce58\uc758 \uc5d0\uc9c0\ub4e4 \uc81c\uac70\ud558\uae30": [[804, "id2"]], "\uc774\uc885 \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[794, "id1"]], "\uc774\uc885 \uadf8\ub798\ud504\ub97c \ub3d9\uc885 \uadf8\ub798\ud504\ub85c \ubcc0\ud658\ud558\uae30": [[794, "id5"]], "\ucd9c\ub825\uac12\uc744 \uc704\ud55c \ucd95\uc57d \ud6c4 \ud53c\uccd0 \uc5c5\ub370\uc774\ud2b8": [[813, "id2"]], "\ucee4\uc2a4\ud140 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \uad6c\ud604\ud558\uae30": [[803, "guide-ko-minibatch-customizing-neighborhood-sampler-impl"]], "\ud559\uc2b5 \ub8f9": [[804, "id4"], [807, "id2"], [809, "id3"], [817, "id6"], [818, "id3"]], "\ud559\uc2b5 \ub8f9(loop)": [[816, "loop"], [819, "loop"]], "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt": [[831, null]], "\ud83c\udd95 Tutorial: Graph Transformer": [[688, null]], "\ud83c\udd95 dgl.graphbolt": [[7, null]]}, "docnames": ["api/python/dgl", "api/python/dgl.DGLGraph", "api/python/dgl.data", "api/python/dgl.dataloading", "api/python/dgl.distributed", "api/python/dgl.function", "api/python/dgl.geometry", "api/python/dgl.graphbolt", "api/python/dgl.multiprocessing", "api/python/dgl.ops", "api/python/dgl.optim", "api/python/dgl.sampling", "api/python/dgl.sparse_v0", "api/python/index", "api/python/knn_benchmark", "api/python/nn-mxnet", "api/python/nn-pytorch", "api/python/nn-tensorflow", "api/python/nn.functional", "api/python/transforms", "api/python/udf", "contribute", "developer/ffi", "env_var", "faq", "features/dataset", "generated/dgl.DGLGraph.__getitem__", "generated/dgl.DGLGraph.add_edges", "generated/dgl.DGLGraph.add_nodes", "generated/dgl.DGLGraph.add_self_loop", "generated/dgl.DGLGraph.adj", "generated/dgl.DGLGraph.adj_external", "generated/dgl.DGLGraph.adj_tensors", "generated/dgl.DGLGraph.adjacency_matrix", "generated/dgl.DGLGraph.apply_edges", "generated/dgl.DGLGraph.apply_nodes", "generated/dgl.DGLGraph.batch_num_edges", "generated/dgl.DGLGraph.batch_num_nodes", "generated/dgl.DGLGraph.batch_size", "generated/dgl.DGLGraph.canonical_etypes", "generated/dgl.DGLGraph.cpu", "generated/dgl.DGLGraph.create_formats_", "generated/dgl.DGLGraph.device", "generated/dgl.DGLGraph.dstdata", "generated/dgl.DGLGraph.dstnodes", "generated/dgl.DGLGraph.dsttypes", "generated/dgl.DGLGraph.edata", "generated/dgl.DGLGraph.edge_attr_schemes", "generated/dgl.DGLGraph.edge_ids", "generated/dgl.DGLGraph.edge_subgraph", "generated/dgl.DGLGraph.edge_type_subgraph", "generated/dgl.DGLGraph.edges", "generated/dgl.DGLGraph.etypes", "generated/dgl.DGLGraph.filter_edges", "generated/dgl.DGLGraph.filter_nodes", "generated/dgl.DGLGraph.find_edges", "generated/dgl.DGLGraph.formats", "generated/dgl.DGLGraph.has_edges_between", "generated/dgl.DGLGraph.has_nodes", "generated/dgl.DGLGraph.idtype", "generated/dgl.DGLGraph.in_degrees", "generated/dgl.DGLGraph.in_edges", "generated/dgl.DGLGraph.inc", "generated/dgl.DGLGraph.incidence_matrix", "generated/dgl.DGLGraph.int", "generated/dgl.DGLGraph.is_homogeneous", "generated/dgl.DGLGraph.is_multigraph", "generated/dgl.DGLGraph.is_pinned", "generated/dgl.DGLGraph.is_unibipartite", "generated/dgl.DGLGraph.line_graph", "generated/dgl.DGLGraph.local_scope", "generated/dgl.DGLGraph.long", "generated/dgl.DGLGraph.metagraph", "generated/dgl.DGLGraph.multi_update_all", "generated/dgl.DGLGraph.ndata", "generated/dgl.DGLGraph.node_attr_schemes", "generated/dgl.DGLGraph.node_type_subgraph", "generated/dgl.DGLGraph.nodes", "generated/dgl.DGLGraph.ntypes", "generated/dgl.DGLGraph.num_dst_nodes", "generated/dgl.DGLGraph.num_edges", "generated/dgl.DGLGraph.num_nodes", "generated/dgl.DGLGraph.num_src_nodes", "generated/dgl.DGLGraph.number_of_dst_nodes", "generated/dgl.DGLGraph.number_of_edges", "generated/dgl.DGLGraph.number_of_nodes", "generated/dgl.DGLGraph.number_of_src_nodes", "generated/dgl.DGLGraph.out_degrees", "generated/dgl.DGLGraph.out_edges", "generated/dgl.DGLGraph.pin_memory_", "generated/dgl.DGLGraph.predecessors", "generated/dgl.DGLGraph.prop_edges", "generated/dgl.DGLGraph.prop_nodes", "generated/dgl.DGLGraph.pull", "generated/dgl.DGLGraph.push", "generated/dgl.DGLGraph.remove_edges", "generated/dgl.DGLGraph.remove_nodes", "generated/dgl.DGLGraph.remove_self_loop", "generated/dgl.DGLGraph.reorder_graph", "generated/dgl.DGLGraph.reverse", "generated/dgl.DGLGraph.send_and_recv", "generated/dgl.DGLGraph.set_batch_num_edges", "generated/dgl.DGLGraph.set_batch_num_nodes", "generated/dgl.DGLGraph.srcdata", "generated/dgl.DGLGraph.srcnodes", "generated/dgl.DGLGraph.srctypes", "generated/dgl.DGLGraph.subgraph", "generated/dgl.DGLGraph.successors", "generated/dgl.DGLGraph.to", "generated/dgl.DGLGraph.to_canonical_etype", "generated/dgl.DGLGraph.to_cugraph", "generated/dgl.DGLGraph.to_simple", "generated/dgl.DGLGraph.unpin_memory_", "generated/dgl.DGLGraph.update_all", "generated/dgl.add_edges", "generated/dgl.add_nodes", "generated/dgl.add_reverse_edges", "generated/dgl.add_self_loop", "generated/dgl.adj_product_graph", "generated/dgl.adj_sum_graph", "generated/dgl.adjusted_homophily", "generated/dgl.apply_each", "generated/dgl.batch", "generated/dgl.bfs_edges_generator", "generated/dgl.bfs_nodes_generator", "generated/dgl.bipartite_from_networkx", "generated/dgl.bipartite_from_scipy", "generated/dgl.block_to_graph", "generated/dgl.broadcast_edges", "generated/dgl.broadcast_nodes", "generated/dgl.compact_graphs", "generated/dgl.create_block", "generated/dgl.data.AIFBDataset", "generated/dgl.data.AMDataset", "generated/dgl.data.ActorDataset", "generated/dgl.data.AmazonCoBuyComputerDataset", "generated/dgl.data.AmazonCoBuyPhotoDataset", "generated/dgl.data.AmazonRatingsDataset", "generated/dgl.data.AsGraphPredDataset", "generated/dgl.data.AsLinkPredDataset", "generated/dgl.data.AsNodePredDataset", "generated/dgl.data.BA2MotifDataset", "generated/dgl.data.BACommunityDataset", "generated/dgl.data.BAShapeDataset", "generated/dgl.data.BGSDataset", "generated/dgl.data.BitcoinOTCDataset", "generated/dgl.data.CIFAR10SuperPixelDataset", "generated/dgl.data.CLUSTERDataset", "generated/dgl.data.CSVDataset", "generated/dgl.data.ChameleonDataset", "generated/dgl.data.CiteseerGraphDataset", "generated/dgl.data.CoauthorCSDataset", "generated/dgl.data.CoauthorPhysicsDataset", "generated/dgl.data.CoraFullDataset", "generated/dgl.data.CoraGraphDataset", "generated/dgl.data.CornellDataset", "generated/dgl.data.DGLDataset", "generated/dgl.data.FB15k237Dataset", "generated/dgl.data.FB15kDataset", "generated/dgl.data.FakeNewsDataset", "generated/dgl.data.FlickrDataset", "generated/dgl.data.FraudAmazonDataset", "generated/dgl.data.FraudDataset", "generated/dgl.data.FraudYelpDataset", "generated/dgl.data.GDELTDataset", "generated/dgl.data.GINDataset", "generated/dgl.data.ICEWS18Dataset", "generated/dgl.data.KarateClubDataset", "generated/dgl.data.LegacyTUDataset", "generated/dgl.data.MNISTSuperPixelDataset", "generated/dgl.data.MUTAGDataset", "generated/dgl.data.MinesweeperDataset", "generated/dgl.data.MiniGCDataset", "generated/dgl.data.MovieLensDataset", "generated/dgl.data.PATTERNDataset", "generated/dgl.data.PPIDataset", "generated/dgl.data.PubmedGraphDataset", "generated/dgl.data.QM7bDataset", "generated/dgl.data.QM9Dataset", "generated/dgl.data.QM9EdgeDataset", "generated/dgl.data.QuestionsDataset", "generated/dgl.data.RedditDataset", "generated/dgl.data.RomanEmpireDataset", "generated/dgl.data.SBMMixtureDataset", "generated/dgl.data.SSTDataset", "generated/dgl.data.SquirrelDataset", "generated/dgl.data.TUDataset", "generated/dgl.data.TexasDataset", "generated/dgl.data.TolokersDataset", "generated/dgl.data.TreeCycleDataset", "generated/dgl.data.TreeGridDataset", "generated/dgl.data.WN18Dataset", "generated/dgl.data.WikiCSDataset", "generated/dgl.data.WisconsinDataset", "generated/dgl.data.YelpDataset", "generated/dgl.data.ZINCDataset", "generated/dgl.data.utils.Subset", "generated/dgl.data.utils.add_node_property_split", "generated/dgl.data.utils.add_nodepred_split", "generated/dgl.data.utils.check_sha1", "generated/dgl.data.utils.download", "generated/dgl.data.utils.extract_archive", "generated/dgl.data.utils.get_download_dir", "generated/dgl.data.utils.load_info", "generated/dgl.data.utils.load_labels", "generated/dgl.data.utils.mask_nodes_by_property", "generated/dgl.data.utils.save_info", "generated/dgl.data.utils.split_dataset", "generated/dgl.dataloading.BlockSampler", "generated/dgl.dataloading.ClusterGCNSampler", "generated/dgl.dataloading.DataLoader", "generated/dgl.dataloading.GraphDataLoader", "generated/dgl.dataloading.LaborSampler", "generated/dgl.dataloading.MultiLayerFullNeighborSampler", "generated/dgl.dataloading.NeighborSampler", "generated/dgl.dataloading.SAINTSampler", "generated/dgl.dataloading.Sampler", "generated/dgl.dataloading.ShaDowKHopSampler", "generated/dgl.dataloading.as_edge_prediction_sampler", "generated/dgl.dataloading.base.LazyFeature", "generated/dgl.dataloading.base.set_dst_lazy_features", "generated/dgl.dataloading.base.set_edge_lazy_features", "generated/dgl.dataloading.base.set_node_lazy_features", "generated/dgl.dataloading.base.set_src_lazy_features", "generated/dgl.dataloading.negative_sampler.GlobalUniform", "generated/dgl.dataloading.negative_sampler.PerSourceUniform", "generated/dgl.dataloading.negative_sampler.Uniform", "generated/dgl.dfs_edges_generator", "generated/dgl.dfs_labeled_edges_generator", "generated/dgl.distributed.dgl_partition_to_graphbolt", "generated/dgl.distributed.edge_split", "generated/dgl.distributed.find_edges", "generated/dgl.distributed.in_subgraph", "generated/dgl.distributed.initialize", "generated/dgl.distributed.load_partition", "generated/dgl.distributed.load_partition_book", "generated/dgl.distributed.load_partition_feats", "generated/dgl.distributed.node_split", "generated/dgl.distributed.partition_graph", "generated/dgl.distributed.sample_etype_neighbors", "generated/dgl.distributed.sample_neighbors", "generated/dgl.double_radius_node_labeling", "generated/dgl.edge_homophily", "generated/dgl.edge_label_informativeness", "generated/dgl.edge_subgraph", "generated/dgl.edge_type_subgraph", "generated/dgl.from_cugraph", "generated/dgl.from_networkx", "generated/dgl.from_scipy", "generated/dgl.function.copy_e", "generated/dgl.function.copy_u", "generated/dgl.function.e_add_u", "generated/dgl.function.e_add_v", "generated/dgl.function.e_div_u", "generated/dgl.function.e_div_v", "generated/dgl.function.e_dot_u", "generated/dgl.function.e_dot_v", "generated/dgl.function.e_mul_u", "generated/dgl.function.e_mul_v", "generated/dgl.function.e_sub_u", "generated/dgl.function.e_sub_v", "generated/dgl.function.max", "generated/dgl.function.mean", "generated/dgl.function.min", "generated/dgl.function.sum", "generated/dgl.function.u_add_e", "generated/dgl.function.u_add_v", "generated/dgl.function.u_div_e", "generated/dgl.function.u_div_v", "generated/dgl.function.u_dot_e", "generated/dgl.function.u_dot_v", "generated/dgl.function.u_mul_e", "generated/dgl.function.u_mul_v", "generated/dgl.function.u_sub_e", "generated/dgl.function.u_sub_v", "generated/dgl.function.v_add_e", "generated/dgl.function.v_add_u", "generated/dgl.function.v_div_e", "generated/dgl.function.v_div_u", "generated/dgl.function.v_dot_e", "generated/dgl.function.v_dot_u", "generated/dgl.function.v_mul_e", "generated/dgl.function.v_mul_u", "generated/dgl.function.v_sub_e", "generated/dgl.function.v_sub_u", "generated/dgl.graph", "generated/dgl.graphbolt.BasicFeatureStore", "generated/dgl.graphbolt.BuiltinDataset", "generated/dgl.graphbolt.CPUCachedFeature", "generated/dgl.graphbolt.CopyTo", "generated/dgl.graphbolt.DataLoader", "generated/dgl.graphbolt.Dataset", "generated/dgl.graphbolt.DiskBasedFeature", "generated/dgl.graphbolt.DistributedItemSampler", "generated/dgl.graphbolt.Feature", "generated/dgl.graphbolt.FeatureFetcher", "generated/dgl.graphbolt.FeatureStore", "generated/dgl.graphbolt.FusedCSCSamplingGraph", "generated/dgl.graphbolt.GPUCachedFeature", "generated/dgl.graphbolt.HeteroItemSet", "generated/dgl.graphbolt.InSubgraphSampler", "generated/dgl.graphbolt.ItemSampler", "generated/dgl.graphbolt.ItemSet", "generated/dgl.graphbolt.LayerNeighborSampler", "generated/dgl.graphbolt.LegacyDataset", "generated/dgl.graphbolt.MiniBatch", "generated/dgl.graphbolt.MiniBatchTransformer", "generated/dgl.graphbolt.NegativeSampler", "generated/dgl.graphbolt.NeighborSampler", "generated/dgl.graphbolt.OnDiskDataset", "generated/dgl.graphbolt.SampledSubgraph", "generated/dgl.graphbolt.SampledSubgraphImpl", "generated/dgl.graphbolt.SamplingGraph", "generated/dgl.graphbolt.SubgraphSampler", "generated/dgl.graphbolt.Task", "generated/dgl.graphbolt.TemporalLayerNeighborSampler", "generated/dgl.graphbolt.TemporalNeighborSampler", "generated/dgl.graphbolt.TorchBasedFeature", "generated/dgl.graphbolt.TorchBasedFeatureStore", "generated/dgl.graphbolt.UniformNegativeSampler", "generated/dgl.graphbolt.add_reverse_edges", "generated/dgl.graphbolt.compact_csc_format", "generated/dgl.graphbolt.cpu_cached_feature", "generated/dgl.graphbolt.etype_str_to_tuple", "generated/dgl.graphbolt.etype_tuple_to_str", "generated/dgl.graphbolt.exclude_seed_edges", "generated/dgl.graphbolt.expand_indptr", "generated/dgl.graphbolt.from_dglgraph", "generated/dgl.graphbolt.fused_csc_sampling_graph", "generated/dgl.graphbolt.gpu_cached_feature", "generated/dgl.graphbolt.index_select", "generated/dgl.graphbolt.indptr_edge_ids", "generated/dgl.graphbolt.isin", "generated/dgl.graphbolt.load_from_shared_memory", "generated/dgl.graphbolt.numpy_save_aligned", "generated/dgl.graphbolt.seed", "generated/dgl.graphbolt.unique_and_compact", "generated/dgl.graphbolt.unique_and_compact_csc_formats", "generated/dgl.heterograph", "generated/dgl.in_subgraph", "generated/dgl.is_libxsmm_enabled", "generated/dgl.khop_adj", "generated/dgl.khop_graph", "generated/dgl.khop_in_subgraph", "generated/dgl.khop_out_subgraph", "generated/dgl.knn_graph", "generated/dgl.lap_pe", "generated/dgl.laplacian_lambda_max", "generated/dgl.line_graph", "generated/dgl.linkx_homophily", "generated/dgl.load_graphs", "generated/dgl.max_edges", "generated/dgl.max_nodes", "generated/dgl.mean_edges", "generated/dgl.mean_nodes", "generated/dgl.merge", "generated/dgl.metapath_reachable_graph", "generated/dgl.metis_partition", "generated/dgl.metis_partition_assignment", "generated/dgl.multiprocessing.pytorch.call_once_and_share", "generated/dgl.multiprocessing.pytorch.shared_tensor", "generated/dgl.nn.functional.edge_softmax", "generated/dgl.nn.mxnet.HeteroGraphConv", "generated/dgl.nn.mxnet.conv.AGNNConv", "generated/dgl.nn.mxnet.conv.APPNPConv", "generated/dgl.nn.mxnet.conv.ChebConv", "generated/dgl.nn.mxnet.conv.DenseChebConv", "generated/dgl.nn.mxnet.conv.DenseGraphConv", "generated/dgl.nn.mxnet.conv.DenseSAGEConv", "generated/dgl.nn.mxnet.conv.EdgeConv", "generated/dgl.nn.mxnet.conv.GATConv", "generated/dgl.nn.mxnet.conv.GINConv", "generated/dgl.nn.mxnet.conv.GMMConv", "generated/dgl.nn.mxnet.conv.GatedGraphConv", "generated/dgl.nn.mxnet.conv.GraphConv", "generated/dgl.nn.mxnet.conv.NNConv", "generated/dgl.nn.mxnet.conv.RelGraphConv", "generated/dgl.nn.mxnet.conv.SAGEConv", "generated/dgl.nn.mxnet.conv.SGConv", "generated/dgl.nn.mxnet.conv.TAGConv", "generated/dgl.nn.mxnet.glob.AvgPooling", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling", "generated/dgl.nn.mxnet.glob.MaxPooling", "generated/dgl.nn.mxnet.glob.Set2Set", "generated/dgl.nn.mxnet.glob.SortPooling", "generated/dgl.nn.mxnet.glob.SumPooling", "generated/dgl.nn.mxnet.utils.Sequential", "generated/dgl.nn.pytorch.DeepWalk", "generated/dgl.nn.pytorch.HeteroEmbedding", "generated/dgl.nn.pytorch.HeteroGraphConv", "generated/dgl.nn.pytorch.HeteroLinear", "generated/dgl.nn.pytorch.MetaPath2Vec", "generated/dgl.nn.pytorch.TypedLinear", "generated/dgl.nn.pytorch.conv.AGNNConv", "generated/dgl.nn.pytorch.conv.APPNPConv", "generated/dgl.nn.pytorch.conv.AtomicConv", "generated/dgl.nn.pytorch.conv.CFConv", "generated/dgl.nn.pytorch.conv.ChebConv", "generated/dgl.nn.pytorch.conv.CuGraphGATConv", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv", "generated/dgl.nn.pytorch.conv.DGNConv", "generated/dgl.nn.pytorch.conv.DenseChebConv", "generated/dgl.nn.pytorch.conv.DenseGraphConv", "generated/dgl.nn.pytorch.conv.DenseSAGEConv", "generated/dgl.nn.pytorch.conv.DotGatConv", "generated/dgl.nn.pytorch.conv.EGATConv", "generated/dgl.nn.pytorch.conv.EGNNConv", "generated/dgl.nn.pytorch.conv.EdgeConv", "generated/dgl.nn.pytorch.conv.EdgeGATConv", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm", "generated/dgl.nn.pytorch.conv.GATConv", "generated/dgl.nn.pytorch.conv.GATv2Conv", "generated/dgl.nn.pytorch.conv.GCN2Conv", "generated/dgl.nn.pytorch.conv.GINConv", "generated/dgl.nn.pytorch.conv.GINEConv", "generated/dgl.nn.pytorch.conv.GMMConv", "generated/dgl.nn.pytorch.conv.GatedGCNConv", "generated/dgl.nn.pytorch.conv.GatedGraphConv", "generated/dgl.nn.pytorch.conv.GraphConv", "generated/dgl.nn.pytorch.conv.GroupRevRes", "generated/dgl.nn.pytorch.conv.HGTConv", "generated/dgl.nn.pytorch.conv.NNConv", "generated/dgl.nn.pytorch.conv.PNAConv", "generated/dgl.nn.pytorch.conv.RelGraphConv", "generated/dgl.nn.pytorch.conv.SAGEConv", "generated/dgl.nn.pytorch.conv.SGConv", "generated/dgl.nn.pytorch.conv.TAGConv", "generated/dgl.nn.pytorch.conv.TWIRLSConv", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", "generated/dgl.nn.pytorch.explain.GNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX", "generated/dgl.nn.pytorch.explain.PGExplainer", "generated/dgl.nn.pytorch.explain.SubgraphX", "generated/dgl.nn.pytorch.factory.KNNGraph", "generated/dgl.nn.pytorch.factory.RadiusGraph", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph", "generated/dgl.nn.pytorch.glob.AvgPooling", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling", "generated/dgl.nn.pytorch.glob.MaxPooling", "generated/dgl.nn.pytorch.glob.Set2Set", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder", "generated/dgl.nn.pytorch.glob.SortPooling", "generated/dgl.nn.pytorch.glob.SumPooling", "generated/dgl.nn.pytorch.glob.WeightAndSum", "generated/dgl.nn.pytorch.gt.BiasedMHA", "generated/dgl.nn.pytorch.gt.DegreeEncoder", "generated/dgl.nn.pytorch.gt.EGTLayer", "generated/dgl.nn.pytorch.gt.GraphormerLayer", "generated/dgl.nn.pytorch.gt.LapPosEncoder", "generated/dgl.nn.pytorch.gt.PathEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d", "generated/dgl.nn.pytorch.link.EdgePredictor", "generated/dgl.nn.pytorch.link.TransE", "generated/dgl.nn.pytorch.link.TransR", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding", "generated/dgl.nn.pytorch.utils.JumpingKnowledge", "generated/dgl.nn.pytorch.utils.LabelPropagation", "generated/dgl.nn.pytorch.utils.Sequential", "generated/dgl.nn.pytorch.utils.WeightBasis", "generated/dgl.nn.tensorflow.conv.APPNPConv", "generated/dgl.nn.tensorflow.conv.ChebConv", "generated/dgl.nn.tensorflow.conv.GATConv", "generated/dgl.nn.tensorflow.conv.GINConv", "generated/dgl.nn.tensorflow.conv.GraphConv", "generated/dgl.nn.tensorflow.conv.RelGraphConv", "generated/dgl.nn.tensorflow.conv.SAGEConv", "generated/dgl.nn.tensorflow.conv.SGConv", "generated/dgl.nn.tensorflow.glob.AvgPooling", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv", "generated/dgl.nn.tensorflow.glob.MaxPooling", "generated/dgl.nn.tensorflow.glob.SortPooling", "generated/dgl.nn.tensorflow.glob.SumPooling", "generated/dgl.node_homophily", "generated/dgl.node_label_informativeness", "generated/dgl.node_subgraph", "generated/dgl.node_type_subgraph", "generated/dgl.norm_by_dst", "generated/dgl.ops.copy_e_max", "generated/dgl.ops.copy_e_mean", "generated/dgl.ops.copy_e_min", "generated/dgl.ops.copy_e_sum", "generated/dgl.ops.copy_u", "generated/dgl.ops.copy_u_max", "generated/dgl.ops.copy_u_mean", "generated/dgl.ops.copy_u_min", "generated/dgl.ops.copy_u_sum", "generated/dgl.ops.copy_v", "generated/dgl.ops.e_add_u", "generated/dgl.ops.e_add_v", "generated/dgl.ops.e_div_u", "generated/dgl.ops.e_div_v", "generated/dgl.ops.e_dot_u", "generated/dgl.ops.e_dot_v", "generated/dgl.ops.e_mul_u", "generated/dgl.ops.e_mul_v", "generated/dgl.ops.e_sub_u", "generated/dgl.ops.e_sub_v", "generated/dgl.ops.gather_mm", "generated/dgl.ops.gsddmm", "generated/dgl.ops.gspmm", "generated/dgl.ops.segment_mm", "generated/dgl.ops.segment_reduce", "generated/dgl.ops.u_add_e", "generated/dgl.ops.u_add_e_max", "generated/dgl.ops.u_add_e_mean", "generated/dgl.ops.u_add_e_min", "generated/dgl.ops.u_add_e_sum", "generated/dgl.ops.u_add_v", "generated/dgl.ops.u_div_e", "generated/dgl.ops.u_div_e_max", "generated/dgl.ops.u_div_e_mean", "generated/dgl.ops.u_div_e_min", "generated/dgl.ops.u_div_e_sum", "generated/dgl.ops.u_div_v", "generated/dgl.ops.u_dot_e", "generated/dgl.ops.u_dot_v", "generated/dgl.ops.u_mul_e", "generated/dgl.ops.u_mul_e_max", "generated/dgl.ops.u_mul_e_mean", "generated/dgl.ops.u_mul_e_min", "generated/dgl.ops.u_mul_e_sum", "generated/dgl.ops.u_mul_v", "generated/dgl.ops.u_sub_e", "generated/dgl.ops.u_sub_e_max", "generated/dgl.ops.u_sub_e_mean", "generated/dgl.ops.u_sub_e_min", "generated/dgl.ops.u_sub_e_sum", "generated/dgl.ops.u_sub_v", "generated/dgl.ops.v_add_e", "generated/dgl.ops.v_add_u", "generated/dgl.ops.v_div_e", "generated/dgl.ops.v_div_u", "generated/dgl.ops.v_dot_e", "generated/dgl.ops.v_dot_u", "generated/dgl.ops.v_mul_e", "generated/dgl.ops.v_mul_u", "generated/dgl.ops.v_sub_e", "generated/dgl.ops.v_sub_u", "generated/dgl.out_subgraph", "generated/dgl.partition_graph_with_halo", "generated/dgl.prop_edges", "generated/dgl.prop_edges_dfs", "generated/dgl.prop_nodes", "generated/dgl.prop_nodes_bfs", "generated/dgl.prop_nodes_topo", "generated/dgl.radius_graph", "generated/dgl.rand_bipartite", "generated/dgl.rand_graph", "generated/dgl.random_walk_pe", "generated/dgl.readout_edges", "generated/dgl.readout_nodes", "generated/dgl.remove_edges", "generated/dgl.remove_nodes", "generated/dgl.remove_self_loop", "generated/dgl.reorder_graph", "generated/dgl.reverse", "generated/dgl.sampling.PinSAGESampler", "generated/dgl.sampling.global_uniform_negative_sampling", "generated/dgl.sampling.node2vec_random_walk", "generated/dgl.sampling.pack_traces", "generated/dgl.sampling.random_walk", "generated/dgl.sampling.sample_labors", "generated/dgl.sampling.sample_neighbors", "generated/dgl.sampling.sample_neighbors_biased", "generated/dgl.sampling.select_topk", "generated/dgl.save_graphs", "generated/dgl.seed", "generated/dgl.segmented_knn_graph", "generated/dgl.shortest_dist", "generated/dgl.slice_batch", "generated/dgl.softmax_edges", "generated/dgl.softmax_nodes", "generated/dgl.sort_csc_by_tag", "generated/dgl.sort_csr_by_tag", "generated/dgl.sparse.SparseMatrix.T", "generated/dgl.sparse.SparseMatrix.coalesce", "generated/dgl.sparse.SparseMatrix.col", "generated/dgl.sparse.SparseMatrix.coo", "generated/dgl.sparse.SparseMatrix.cpu", "generated/dgl.sparse.SparseMatrix.csc", "generated/dgl.sparse.SparseMatrix.csr", "generated/dgl.sparse.SparseMatrix.cuda", "generated/dgl.sparse.SparseMatrix.device", "generated/dgl.sparse.SparseMatrix.double", "generated/dgl.sparse.SparseMatrix.dtype", "generated/dgl.sparse.SparseMatrix.float", "generated/dgl.sparse.SparseMatrix.has_duplicate", "generated/dgl.sparse.SparseMatrix.indices", "generated/dgl.sparse.SparseMatrix.int", "generated/dgl.sparse.SparseMatrix.long", "generated/dgl.sparse.SparseMatrix.neg", "generated/dgl.sparse.SparseMatrix.nnz", "generated/dgl.sparse.SparseMatrix.reduce", "generated/dgl.sparse.SparseMatrix.row", "generated/dgl.sparse.SparseMatrix.shape", "generated/dgl.sparse.SparseMatrix.smax", "generated/dgl.sparse.SparseMatrix.smean", "generated/dgl.sparse.SparseMatrix.smin", "generated/dgl.sparse.SparseMatrix.softmax", "generated/dgl.sparse.SparseMatrix.sum", "generated/dgl.sparse.SparseMatrix.t", "generated/dgl.sparse.SparseMatrix.to", "generated/dgl.sparse.SparseMatrix.to_dense", "generated/dgl.sparse.SparseMatrix.transpose", "generated/dgl.sparse.SparseMatrix.val", "generated/dgl.sparse.add", "generated/dgl.sparse.bsddmm", "generated/dgl.sparse.bspmm", "generated/dgl.sparse.diag", "generated/dgl.sparse.div", "generated/dgl.sparse.from_coo", "generated/dgl.sparse.from_csc", "generated/dgl.sparse.from_csr", "generated/dgl.sparse.identity", "generated/dgl.sparse.matmul", "generated/dgl.sparse.mul", "generated/dgl.sparse.power", "generated/dgl.sparse.sddmm", "generated/dgl.sparse.softmax", "generated/dgl.sparse.sp_add_v", "generated/dgl.sparse.sp_broadcast_v", "generated/dgl.sparse.sp_div_v", "generated/dgl.sparse.sp_mul_v", "generated/dgl.sparse.sp_sub_v", "generated/dgl.sparse.spmatrix", "generated/dgl.sparse.spmm", "generated/dgl.sparse.spspmm", "generated/dgl.sparse.sub", "generated/dgl.sparse.val_like", "generated/dgl.sum_edges", "generated/dgl.sum_nodes", "generated/dgl.svd_pe", "generated/dgl.to_bidirected", "generated/dgl.to_block", "generated/dgl.to_cugraph", "generated/dgl.to_double", "generated/dgl.to_float", "generated/dgl.to_half", "generated/dgl.to_heterogeneous", "generated/dgl.to_homogeneous", "generated/dgl.to_networkx", "generated/dgl.to_simple", "generated/dgl.to_simple_graph", "generated/dgl.topk_edges", "generated/dgl.topk_nodes", "generated/dgl.topological_nodes_generator", "generated/dgl.transforms.AddEdge", "generated/dgl.transforms.AddMetaPaths", "generated/dgl.transforms.AddReverse", "generated/dgl.transforms.AddSelfLoop", "generated/dgl.transforms.BaseTransform", "generated/dgl.transforms.Compose", "generated/dgl.transforms.DropEdge", "generated/dgl.transforms.DropNode", "generated/dgl.transforms.FeatMask", "generated/dgl.transforms.GCNNorm", "generated/dgl.transforms.GDC", "generated/dgl.transforms.HeatKernel", "generated/dgl.transforms.KHopGraph", "generated/dgl.transforms.LapPE", "generated/dgl.transforms.LineGraph", "generated/dgl.transforms.NodeShuffle", "generated/dgl.transforms.PPR", "generated/dgl.transforms.RandomWalkPE", "generated/dgl.transforms.RemoveSelfLoop", "generated/dgl.transforms.RowFeatNormalizer", "generated/dgl.transforms.SIGNDiffusion", "generated/dgl.transforms.SVDPE", "generated/dgl.transforms.ToLevi", "generated/dgl.transforms.ToSimple", "generated/dgl.udf.EdgeBatch.batch_size", "generated/dgl.udf.EdgeBatch.data", "generated/dgl.udf.EdgeBatch.dst", "generated/dgl.udf.EdgeBatch.edges", "generated/dgl.udf.EdgeBatch.src", "generated/dgl.udf.NodeBatch.batch_size", "generated/dgl.udf.NodeBatch.data", "generated/dgl.udf.NodeBatch.mailbox", "generated/dgl.udf.NodeBatch.nodes", "generated/dgl.unbatch", "generated/dgl.use_libxsmm", "graphtransformer/data", "graphtransformer/index", "graphtransformer/model", "guide/data", "guide/data-dataset", "guide/data-download", "guide/data-loadcsv", "guide/data-loadogb", "guide/data-process", "guide/data-savenload", "guide/distributed", "guide/distributed-apis", "guide/distributed-hetero", "guide/distributed-partition", "guide/distributed-preprocessing", "guide/distributed-tools", "guide/graph", "guide/graph-basic", "guide/graph-external", "guide/graph-feature", "guide/graph-gpu", "guide/graph-graphs-nodes-edges", "guide/graph-heterogeneous", "guide/index", "guide/message", "guide/message-api", "guide/message-efficient", "guide/message-heterograph", "guide/message-part", "guide/minibatch", "guide/minibatch-custom-sampler", "guide/minibatch-edge", "guide/minibatch-gpu-sampling", "guide/minibatch-inference", "guide/minibatch-link", "guide/minibatch-nn", "guide/minibatch-node", "guide/minibatch-parallelism", "guide/minibatch-sparse", "guide/mixed_precision", "guide/nn", "guide/nn-construction", "guide/nn-forward", "guide/nn-heterograph", "guide/training", "guide/training-edge", "guide/training-eweight", "guide/training-graph", "guide/training-link", "guide/training-node", "guide_cn/data", "guide_cn/data-dataset", "guide_cn/data-download", "guide_cn/data-loadogb", "guide_cn/data-process", "guide_cn/data-savenload", "guide_cn/distributed", "guide_cn/distributed-apis", "guide_cn/distributed-preprocessing", "guide_cn/distributed-tools", "guide_cn/graph", "guide_cn/graph-basic", "guide_cn/graph-external", "guide_cn/graph-feature", "guide_cn/graph-gpu", "guide_cn/graph-graphs-nodes-edges", "guide_cn/graph-heterogeneous", "guide_cn/index", "guide_cn/message", "guide_cn/message-api", "guide_cn/message-efficient", "guide_cn/message-heterograph", "guide_cn/message-part", "guide_cn/minibatch", "guide_cn/minibatch-custom-sampler", "guide_cn/minibatch-edge", "guide_cn/minibatch-inference", "guide_cn/minibatch-link", "guide_cn/minibatch-nn", "guide_cn/minibatch-node", "guide_cn/nn", "guide_cn/nn-construction", "guide_cn/nn-forward", "guide_cn/nn-heterograph", "guide_cn/training", "guide_cn/training-edge", "guide_cn/training-eweight", "guide_cn/training-graph", "guide_cn/training-link", "guide_cn/training-node", "guide_ko/data", "guide_ko/data-dataset", "guide_ko/data-download", "guide_ko/data-loadogb", "guide_ko/data-process", "guide_ko/data-savenload", "guide_ko/distributed", "guide_ko/distributed-apis", "guide_ko/distributed-hetero", "guide_ko/distributed-preprocessing", "guide_ko/distributed-tools", "guide_ko/graph", "guide_ko/graph-basic", "guide_ko/graph-external", "guide_ko/graph-feature", "guide_ko/graph-gpu", "guide_ko/graph-graphs-nodes-edges", "guide_ko/graph-heterogeneous", "guide_ko/index", "guide_ko/message", "guide_ko/message-api", "guide_ko/message-edge", "guide_ko/message-efficient", "guide_ko/message-heterograph", "guide_ko/message-part", "guide_ko/minibatch", "guide_ko/minibatch-custom-sampler", "guide_ko/minibatch-edge", "guide_ko/minibatch-gpu-sampling", "guide_ko/minibatch-inference", "guide_ko/minibatch-link", "guide_ko/minibatch-nn", "guide_ko/minibatch-node", "guide_ko/mixed_precision", "guide_ko/nn", "guide_ko/nn-construction", "guide_ko/nn-forward", "guide_ko/nn-heterograph", "guide_ko/training", "guide_ko/training-edge", "guide_ko/training-graph", "guide_ko/training-link", "guide_ko/training-node", "index", "install/index", "notebooks/sparse/gcn", "notebooks/sparse/graph_diffusion", "notebooks/sparse/graph_transformer", "notebooks/sparse/hgnn", "notebooks/sparse/index", "notebooks/sparse/quickstart", "performance", "resources", "sg_execution_times", "stochastic_training/index", "stochastic_training/link_prediction", "stochastic_training/multigpu_node_classification", "stochastic_training/neighbor_sampling_overview", "stochastic_training/node_classification", "stochastic_training/ondisk-dataset", "stochastic_training/ondisk-dataset-specification", "stochastic_training/ondisk_dataset_heterograph", "stochastic_training/ondisk_dataset_homograph", "tutorials/blitz/1_introduction", "tutorials/blitz/2_dglgraph", "tutorials/blitz/3_message_passing", "tutorials/blitz/4_link_predict", "tutorials/blitz/5_graph_classification", "tutorials/blitz/6_load_data", "tutorials/blitz/index", "tutorials/blitz/sg_execution_times", "tutorials/cpu/argo_tutorial", "tutorials/cpu/cpu_best_practises", "tutorials/cpu/index", "tutorials/cpu/sg_execution_times", "tutorials/dist/1_node_classification", "tutorials/dist/2_link_prediction", "tutorials/dist/index", "tutorials/dist/sg_execution_times", "tutorials/models/1_gnn/1_gcn", "tutorials/models/1_gnn/4_rgcn", "tutorials/models/1_gnn/6_line_graph", "tutorials/models/1_gnn/9_gat", "tutorials/models/1_gnn/index", "tutorials/models/1_gnn/sg_execution_times", "tutorials/models/2_small_graph/3_tree-lstm", "tutorials/models/2_small_graph/index", "tutorials/models/2_small_graph/sg_execution_times", "tutorials/models/3_generative_model/5_dgmg", "tutorials/models/3_generative_model/index", "tutorials/models/3_generative_model/sg_execution_times", "tutorials/models/4_old_wines/2_capsule", "tutorials/models/4_old_wines/7_transformer", "tutorials/models/4_old_wines/index", "tutorials/models/4_old_wines/sg_execution_times", "tutorials/models/index", "tutorials/models/sg_execution_times", "tutorials/multi/1_graph_classification", "tutorials/multi/2_node_classification", "tutorials/multi/index", "tutorials/multi/sg_execution_times"], "envversion": {"nbsphinx": 4, "sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/python/dgl.rst", "api/python/dgl.DGLGraph.rst", "api/python/dgl.data.rst", "api/python/dgl.dataloading.rst", "api/python/dgl.distributed.rst", "api/python/dgl.function.rst", "api/python/dgl.geometry.rst", "api/python/dgl.graphbolt.rst", "api/python/dgl.multiprocessing.rst", "api/python/dgl.ops.rst", "api/python/dgl.optim.rst", "api/python/dgl.sampling.rst", "api/python/dgl.sparse_v0.rst", "api/python/index.rst", "api/python/knn_benchmark.rst", "api/python/nn-mxnet.rst", "api/python/nn-pytorch.rst", "api/python/nn-tensorflow.rst", "api/python/nn.functional.rst", "api/python/transforms.rst", "api/python/udf.rst", "contribute.rst", "developer/ffi.rst", "env_var.rst", "faq.rst", "features/dataset.rst", "generated/dgl.DGLGraph.__getitem__.rst", "generated/dgl.DGLGraph.add_edges.rst", "generated/dgl.DGLGraph.add_nodes.rst", "generated/dgl.DGLGraph.add_self_loop.rst", "generated/dgl.DGLGraph.adj.rst", "generated/dgl.DGLGraph.adj_external.rst", "generated/dgl.DGLGraph.adj_tensors.rst", "generated/dgl.DGLGraph.adjacency_matrix.rst", "generated/dgl.DGLGraph.apply_edges.rst", "generated/dgl.DGLGraph.apply_nodes.rst", "generated/dgl.DGLGraph.batch_num_edges.rst", "generated/dgl.DGLGraph.batch_num_nodes.rst", "generated/dgl.DGLGraph.batch_size.rst", "generated/dgl.DGLGraph.canonical_etypes.rst", "generated/dgl.DGLGraph.cpu.rst", "generated/dgl.DGLGraph.create_formats_.rst", "generated/dgl.DGLGraph.device.rst", "generated/dgl.DGLGraph.dstdata.rst", "generated/dgl.DGLGraph.dstnodes.rst", "generated/dgl.DGLGraph.dsttypes.rst", "generated/dgl.DGLGraph.edata.rst", "generated/dgl.DGLGraph.edge_attr_schemes.rst", "generated/dgl.DGLGraph.edge_ids.rst", "generated/dgl.DGLGraph.edge_subgraph.rst", "generated/dgl.DGLGraph.edge_type_subgraph.rst", "generated/dgl.DGLGraph.edges.rst", "generated/dgl.DGLGraph.etypes.rst", "generated/dgl.DGLGraph.filter_edges.rst", "generated/dgl.DGLGraph.filter_nodes.rst", "generated/dgl.DGLGraph.find_edges.rst", "generated/dgl.DGLGraph.formats.rst", "generated/dgl.DGLGraph.has_edges_between.rst", "generated/dgl.DGLGraph.has_nodes.rst", "generated/dgl.DGLGraph.idtype.rst", "generated/dgl.DGLGraph.in_degrees.rst", "generated/dgl.DGLGraph.in_edges.rst", "generated/dgl.DGLGraph.inc.rst", "generated/dgl.DGLGraph.incidence_matrix.rst", "generated/dgl.DGLGraph.int.rst", "generated/dgl.DGLGraph.is_homogeneous.rst", "generated/dgl.DGLGraph.is_multigraph.rst", "generated/dgl.DGLGraph.is_pinned.rst", "generated/dgl.DGLGraph.is_unibipartite.rst", "generated/dgl.DGLGraph.line_graph.rst", "generated/dgl.DGLGraph.local_scope.rst", "generated/dgl.DGLGraph.long.rst", "generated/dgl.DGLGraph.metagraph.rst", "generated/dgl.DGLGraph.multi_update_all.rst", "generated/dgl.DGLGraph.ndata.rst", "generated/dgl.DGLGraph.node_attr_schemes.rst", "generated/dgl.DGLGraph.node_type_subgraph.rst", "generated/dgl.DGLGraph.nodes.rst", "generated/dgl.DGLGraph.ntypes.rst", "generated/dgl.DGLGraph.num_dst_nodes.rst", "generated/dgl.DGLGraph.num_edges.rst", "generated/dgl.DGLGraph.num_nodes.rst", "generated/dgl.DGLGraph.num_src_nodes.rst", "generated/dgl.DGLGraph.number_of_dst_nodes.rst", "generated/dgl.DGLGraph.number_of_edges.rst", "generated/dgl.DGLGraph.number_of_nodes.rst", "generated/dgl.DGLGraph.number_of_src_nodes.rst", "generated/dgl.DGLGraph.out_degrees.rst", "generated/dgl.DGLGraph.out_edges.rst", "generated/dgl.DGLGraph.pin_memory_.rst", "generated/dgl.DGLGraph.predecessors.rst", "generated/dgl.DGLGraph.prop_edges.rst", "generated/dgl.DGLGraph.prop_nodes.rst", "generated/dgl.DGLGraph.pull.rst", "generated/dgl.DGLGraph.push.rst", "generated/dgl.DGLGraph.remove_edges.rst", "generated/dgl.DGLGraph.remove_nodes.rst", "generated/dgl.DGLGraph.remove_self_loop.rst", "generated/dgl.DGLGraph.reorder_graph.rst", "generated/dgl.DGLGraph.reverse.rst", "generated/dgl.DGLGraph.send_and_recv.rst", "generated/dgl.DGLGraph.set_batch_num_edges.rst", "generated/dgl.DGLGraph.set_batch_num_nodes.rst", "generated/dgl.DGLGraph.srcdata.rst", "generated/dgl.DGLGraph.srcnodes.rst", "generated/dgl.DGLGraph.srctypes.rst", "generated/dgl.DGLGraph.subgraph.rst", "generated/dgl.DGLGraph.successors.rst", "generated/dgl.DGLGraph.to.rst", "generated/dgl.DGLGraph.to_canonical_etype.rst", "generated/dgl.DGLGraph.to_cugraph.rst", "generated/dgl.DGLGraph.to_simple.rst", "generated/dgl.DGLGraph.unpin_memory_.rst", "generated/dgl.DGLGraph.update_all.rst", "generated/dgl.add_edges.rst", "generated/dgl.add_nodes.rst", "generated/dgl.add_reverse_edges.rst", "generated/dgl.add_self_loop.rst", "generated/dgl.adj_product_graph.rst", "generated/dgl.adj_sum_graph.rst", "generated/dgl.adjusted_homophily.rst", "generated/dgl.apply_each.rst", "generated/dgl.batch.rst", "generated/dgl.bfs_edges_generator.rst", "generated/dgl.bfs_nodes_generator.rst", "generated/dgl.bipartite_from_networkx.rst", "generated/dgl.bipartite_from_scipy.rst", "generated/dgl.block_to_graph.rst", "generated/dgl.broadcast_edges.rst", "generated/dgl.broadcast_nodes.rst", "generated/dgl.compact_graphs.rst", "generated/dgl.create_block.rst", "generated/dgl.data.AIFBDataset.rst", "generated/dgl.data.AMDataset.rst", "generated/dgl.data.ActorDataset.rst", "generated/dgl.data.AmazonCoBuyComputerDataset.rst", "generated/dgl.data.AmazonCoBuyPhotoDataset.rst", "generated/dgl.data.AmazonRatingsDataset.rst", "generated/dgl.data.AsGraphPredDataset.rst", "generated/dgl.data.AsLinkPredDataset.rst", "generated/dgl.data.AsNodePredDataset.rst", "generated/dgl.data.BA2MotifDataset.rst", "generated/dgl.data.BACommunityDataset.rst", "generated/dgl.data.BAShapeDataset.rst", "generated/dgl.data.BGSDataset.rst", "generated/dgl.data.BitcoinOTCDataset.rst", "generated/dgl.data.CIFAR10SuperPixelDataset.rst", "generated/dgl.data.CLUSTERDataset.rst", "generated/dgl.data.CSVDataset.rst", "generated/dgl.data.ChameleonDataset.rst", "generated/dgl.data.CiteseerGraphDataset.rst", "generated/dgl.data.CoauthorCSDataset.rst", "generated/dgl.data.CoauthorPhysicsDataset.rst", "generated/dgl.data.CoraFullDataset.rst", "generated/dgl.data.CoraGraphDataset.rst", "generated/dgl.data.CornellDataset.rst", "generated/dgl.data.DGLDataset.rst", "generated/dgl.data.FB15k237Dataset.rst", "generated/dgl.data.FB15kDataset.rst", "generated/dgl.data.FakeNewsDataset.rst", "generated/dgl.data.FlickrDataset.rst", "generated/dgl.data.FraudAmazonDataset.rst", "generated/dgl.data.FraudDataset.rst", "generated/dgl.data.FraudYelpDataset.rst", "generated/dgl.data.GDELTDataset.rst", "generated/dgl.data.GINDataset.rst", "generated/dgl.data.ICEWS18Dataset.rst", "generated/dgl.data.KarateClubDataset.rst", "generated/dgl.data.LegacyTUDataset.rst", "generated/dgl.data.MNISTSuperPixelDataset.rst", "generated/dgl.data.MUTAGDataset.rst", "generated/dgl.data.MinesweeperDataset.rst", "generated/dgl.data.MiniGCDataset.rst", "generated/dgl.data.MovieLensDataset.rst", "generated/dgl.data.PATTERNDataset.rst", "generated/dgl.data.PPIDataset.rst", "generated/dgl.data.PubmedGraphDataset.rst", "generated/dgl.data.QM7bDataset.rst", "generated/dgl.data.QM9Dataset.rst", "generated/dgl.data.QM9EdgeDataset.rst", "generated/dgl.data.QuestionsDataset.rst", "generated/dgl.data.RedditDataset.rst", "generated/dgl.data.RomanEmpireDataset.rst", "generated/dgl.data.SBMMixtureDataset.rst", "generated/dgl.data.SSTDataset.rst", "generated/dgl.data.SquirrelDataset.rst", "generated/dgl.data.TUDataset.rst", "generated/dgl.data.TexasDataset.rst", "generated/dgl.data.TolokersDataset.rst", "generated/dgl.data.TreeCycleDataset.rst", "generated/dgl.data.TreeGridDataset.rst", "generated/dgl.data.WN18Dataset.rst", "generated/dgl.data.WikiCSDataset.rst", "generated/dgl.data.WisconsinDataset.rst", "generated/dgl.data.YelpDataset.rst", "generated/dgl.data.ZINCDataset.rst", "generated/dgl.data.utils.Subset.rst", "generated/dgl.data.utils.add_node_property_split.rst", "generated/dgl.data.utils.add_nodepred_split.rst", "generated/dgl.data.utils.check_sha1.rst", "generated/dgl.data.utils.download.rst", "generated/dgl.data.utils.extract_archive.rst", "generated/dgl.data.utils.get_download_dir.rst", "generated/dgl.data.utils.load_info.rst", "generated/dgl.data.utils.load_labels.rst", "generated/dgl.data.utils.mask_nodes_by_property.rst", "generated/dgl.data.utils.save_info.rst", "generated/dgl.data.utils.split_dataset.rst", "generated/dgl.dataloading.BlockSampler.rst", "generated/dgl.dataloading.ClusterGCNSampler.rst", "generated/dgl.dataloading.DataLoader.rst", "generated/dgl.dataloading.GraphDataLoader.rst", "generated/dgl.dataloading.LaborSampler.rst", "generated/dgl.dataloading.MultiLayerFullNeighborSampler.rst", "generated/dgl.dataloading.NeighborSampler.rst", "generated/dgl.dataloading.SAINTSampler.rst", "generated/dgl.dataloading.Sampler.rst", "generated/dgl.dataloading.ShaDowKHopSampler.rst", "generated/dgl.dataloading.as_edge_prediction_sampler.rst", "generated/dgl.dataloading.base.LazyFeature.rst", "generated/dgl.dataloading.base.set_dst_lazy_features.rst", "generated/dgl.dataloading.base.set_edge_lazy_features.rst", "generated/dgl.dataloading.base.set_node_lazy_features.rst", "generated/dgl.dataloading.base.set_src_lazy_features.rst", "generated/dgl.dataloading.negative_sampler.GlobalUniform.rst", "generated/dgl.dataloading.negative_sampler.PerSourceUniform.rst", "generated/dgl.dataloading.negative_sampler.Uniform.rst", "generated/dgl.dfs_edges_generator.rst", "generated/dgl.dfs_labeled_edges_generator.rst", "generated/dgl.distributed.dgl_partition_to_graphbolt.rst", "generated/dgl.distributed.edge_split.rst", "generated/dgl.distributed.find_edges.rst", "generated/dgl.distributed.in_subgraph.rst", "generated/dgl.distributed.initialize.rst", "generated/dgl.distributed.load_partition.rst", "generated/dgl.distributed.load_partition_book.rst", "generated/dgl.distributed.load_partition_feats.rst", "generated/dgl.distributed.node_split.rst", "generated/dgl.distributed.partition_graph.rst", "generated/dgl.distributed.sample_etype_neighbors.rst", "generated/dgl.distributed.sample_neighbors.rst", "generated/dgl.double_radius_node_labeling.rst", "generated/dgl.edge_homophily.rst", "generated/dgl.edge_label_informativeness.rst", "generated/dgl.edge_subgraph.rst", "generated/dgl.edge_type_subgraph.rst", "generated/dgl.from_cugraph.rst", "generated/dgl.from_networkx.rst", "generated/dgl.from_scipy.rst", "generated/dgl.function.copy_e.rst", "generated/dgl.function.copy_u.rst", "generated/dgl.function.e_add_u.rst", "generated/dgl.function.e_add_v.rst", "generated/dgl.function.e_div_u.rst", "generated/dgl.function.e_div_v.rst", "generated/dgl.function.e_dot_u.rst", "generated/dgl.function.e_dot_v.rst", "generated/dgl.function.e_mul_u.rst", "generated/dgl.function.e_mul_v.rst", "generated/dgl.function.e_sub_u.rst", "generated/dgl.function.e_sub_v.rst", "generated/dgl.function.max.rst", "generated/dgl.function.mean.rst", "generated/dgl.function.min.rst", "generated/dgl.function.sum.rst", "generated/dgl.function.u_add_e.rst", "generated/dgl.function.u_add_v.rst", "generated/dgl.function.u_div_e.rst", "generated/dgl.function.u_div_v.rst", "generated/dgl.function.u_dot_e.rst", "generated/dgl.function.u_dot_v.rst", "generated/dgl.function.u_mul_e.rst", "generated/dgl.function.u_mul_v.rst", "generated/dgl.function.u_sub_e.rst", "generated/dgl.function.u_sub_v.rst", "generated/dgl.function.v_add_e.rst", "generated/dgl.function.v_add_u.rst", "generated/dgl.function.v_div_e.rst", "generated/dgl.function.v_div_u.rst", "generated/dgl.function.v_dot_e.rst", "generated/dgl.function.v_dot_u.rst", "generated/dgl.function.v_mul_e.rst", "generated/dgl.function.v_mul_u.rst", "generated/dgl.function.v_sub_e.rst", "generated/dgl.function.v_sub_u.rst", "generated/dgl.graph.rst", "generated/dgl.graphbolt.BasicFeatureStore.rst", "generated/dgl.graphbolt.BuiltinDataset.rst", "generated/dgl.graphbolt.CPUCachedFeature.rst", "generated/dgl.graphbolt.CopyTo.rst", "generated/dgl.graphbolt.DataLoader.rst", "generated/dgl.graphbolt.Dataset.rst", "generated/dgl.graphbolt.DiskBasedFeature.rst", "generated/dgl.graphbolt.DistributedItemSampler.rst", "generated/dgl.graphbolt.Feature.rst", "generated/dgl.graphbolt.FeatureFetcher.rst", "generated/dgl.graphbolt.FeatureStore.rst", "generated/dgl.graphbolt.FusedCSCSamplingGraph.rst", "generated/dgl.graphbolt.GPUCachedFeature.rst", "generated/dgl.graphbolt.HeteroItemSet.rst", "generated/dgl.graphbolt.InSubgraphSampler.rst", "generated/dgl.graphbolt.ItemSampler.rst", "generated/dgl.graphbolt.ItemSet.rst", "generated/dgl.graphbolt.LayerNeighborSampler.rst", "generated/dgl.graphbolt.LegacyDataset.rst", "generated/dgl.graphbolt.MiniBatch.rst", "generated/dgl.graphbolt.MiniBatchTransformer.rst", "generated/dgl.graphbolt.NegativeSampler.rst", "generated/dgl.graphbolt.NeighborSampler.rst", "generated/dgl.graphbolt.OnDiskDataset.rst", "generated/dgl.graphbolt.SampledSubgraph.rst", "generated/dgl.graphbolt.SampledSubgraphImpl.rst", "generated/dgl.graphbolt.SamplingGraph.rst", "generated/dgl.graphbolt.SubgraphSampler.rst", "generated/dgl.graphbolt.Task.rst", "generated/dgl.graphbolt.TemporalLayerNeighborSampler.rst", "generated/dgl.graphbolt.TemporalNeighborSampler.rst", "generated/dgl.graphbolt.TorchBasedFeature.rst", "generated/dgl.graphbolt.TorchBasedFeatureStore.rst", "generated/dgl.graphbolt.UniformNegativeSampler.rst", "generated/dgl.graphbolt.add_reverse_edges.rst", "generated/dgl.graphbolt.compact_csc_format.rst", "generated/dgl.graphbolt.cpu_cached_feature.rst", "generated/dgl.graphbolt.etype_str_to_tuple.rst", "generated/dgl.graphbolt.etype_tuple_to_str.rst", "generated/dgl.graphbolt.exclude_seed_edges.rst", "generated/dgl.graphbolt.expand_indptr.rst", "generated/dgl.graphbolt.from_dglgraph.rst", "generated/dgl.graphbolt.fused_csc_sampling_graph.rst", "generated/dgl.graphbolt.gpu_cached_feature.rst", "generated/dgl.graphbolt.index_select.rst", "generated/dgl.graphbolt.indptr_edge_ids.rst", "generated/dgl.graphbolt.isin.rst", "generated/dgl.graphbolt.load_from_shared_memory.rst", "generated/dgl.graphbolt.numpy_save_aligned.rst", "generated/dgl.graphbolt.seed.rst", "generated/dgl.graphbolt.unique_and_compact.rst", "generated/dgl.graphbolt.unique_and_compact_csc_formats.rst", "generated/dgl.heterograph.rst", "generated/dgl.in_subgraph.rst", "generated/dgl.is_libxsmm_enabled.rst", "generated/dgl.khop_adj.rst", "generated/dgl.khop_graph.rst", "generated/dgl.khop_in_subgraph.rst", "generated/dgl.khop_out_subgraph.rst", "generated/dgl.knn_graph.rst", "generated/dgl.lap_pe.rst", "generated/dgl.laplacian_lambda_max.rst", "generated/dgl.line_graph.rst", "generated/dgl.linkx_homophily.rst", "generated/dgl.load_graphs.rst", "generated/dgl.max_edges.rst", "generated/dgl.max_nodes.rst", "generated/dgl.mean_edges.rst", "generated/dgl.mean_nodes.rst", "generated/dgl.merge.rst", "generated/dgl.metapath_reachable_graph.rst", "generated/dgl.metis_partition.rst", "generated/dgl.metis_partition_assignment.rst", "generated/dgl.multiprocessing.pytorch.call_once_and_share.rst", "generated/dgl.multiprocessing.pytorch.shared_tensor.rst", "generated/dgl.nn.functional.edge_softmax.rst", "generated/dgl.nn.mxnet.HeteroGraphConv.rst", "generated/dgl.nn.mxnet.conv.AGNNConv.rst", "generated/dgl.nn.mxnet.conv.APPNPConv.rst", "generated/dgl.nn.mxnet.conv.ChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseGraphConv.rst", "generated/dgl.nn.mxnet.conv.DenseSAGEConv.rst", "generated/dgl.nn.mxnet.conv.EdgeConv.rst", "generated/dgl.nn.mxnet.conv.GATConv.rst", "generated/dgl.nn.mxnet.conv.GINConv.rst", "generated/dgl.nn.mxnet.conv.GMMConv.rst", "generated/dgl.nn.mxnet.conv.GatedGraphConv.rst", "generated/dgl.nn.mxnet.conv.GraphConv.rst", "generated/dgl.nn.mxnet.conv.NNConv.rst", "generated/dgl.nn.mxnet.conv.RelGraphConv.rst", "generated/dgl.nn.mxnet.conv.SAGEConv.rst", "generated/dgl.nn.mxnet.conv.SGConv.rst", "generated/dgl.nn.mxnet.conv.TAGConv.rst", "generated/dgl.nn.mxnet.glob.AvgPooling.rst", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.mxnet.glob.MaxPooling.rst", "generated/dgl.nn.mxnet.glob.Set2Set.rst", "generated/dgl.nn.mxnet.glob.SortPooling.rst", "generated/dgl.nn.mxnet.glob.SumPooling.rst", "generated/dgl.nn.mxnet.utils.Sequential.rst", "generated/dgl.nn.pytorch.DeepWalk.rst", "generated/dgl.nn.pytorch.HeteroEmbedding.rst", "generated/dgl.nn.pytorch.HeteroGraphConv.rst", "generated/dgl.nn.pytorch.HeteroLinear.rst", "generated/dgl.nn.pytorch.MetaPath2Vec.rst", "generated/dgl.nn.pytorch.TypedLinear.rst", "generated/dgl.nn.pytorch.conv.AGNNConv.rst", "generated/dgl.nn.pytorch.conv.APPNPConv.rst", "generated/dgl.nn.pytorch.conv.AtomicConv.rst", "generated/dgl.nn.pytorch.conv.CFConv.rst", "generated/dgl.nn.pytorch.conv.ChebConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphGATConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DGNConv.rst", "generated/dgl.nn.pytorch.conv.DenseChebConv.rst", "generated/dgl.nn.pytorch.conv.DenseGraphConv.rst", "generated/dgl.nn.pytorch.conv.DenseSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DotGatConv.rst", "generated/dgl.nn.pytorch.conv.EGATConv.rst", "generated/dgl.nn.pytorch.conv.EGNNConv.rst", "generated/dgl.nn.pytorch.conv.EdgeConv.rst", "generated/dgl.nn.pytorch.conv.EdgeGATConv.rst", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm.rst", "generated/dgl.nn.pytorch.conv.GATConv.rst", "generated/dgl.nn.pytorch.conv.GATv2Conv.rst", "generated/dgl.nn.pytorch.conv.GCN2Conv.rst", "generated/dgl.nn.pytorch.conv.GINConv.rst", "generated/dgl.nn.pytorch.conv.GINEConv.rst", "generated/dgl.nn.pytorch.conv.GMMConv.rst", "generated/dgl.nn.pytorch.conv.GatedGCNConv.rst", "generated/dgl.nn.pytorch.conv.GatedGraphConv.rst", "generated/dgl.nn.pytorch.conv.GraphConv.rst", "generated/dgl.nn.pytorch.conv.GroupRevRes.rst", "generated/dgl.nn.pytorch.conv.HGTConv.rst", "generated/dgl.nn.pytorch.conv.NNConv.rst", "generated/dgl.nn.pytorch.conv.PNAConv.rst", "generated/dgl.nn.pytorch.conv.RelGraphConv.rst", "generated/dgl.nn.pytorch.conv.SAGEConv.rst", "generated/dgl.nn.pytorch.conv.SGConv.rst", "generated/dgl.nn.pytorch.conv.TAGConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.rst", "generated/dgl.nn.pytorch.explain.GNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX.rst", "generated/dgl.nn.pytorch.explain.PGExplainer.rst", "generated/dgl.nn.pytorch.explain.SubgraphX.rst", "generated/dgl.nn.pytorch.factory.KNNGraph.rst", "generated/dgl.nn.pytorch.factory.RadiusGraph.rst", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph.rst", "generated/dgl.nn.pytorch.glob.AvgPooling.rst", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.pytorch.glob.MaxPooling.rst", "generated/dgl.nn.pytorch.glob.Set2Set.rst", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder.rst", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder.rst", "generated/dgl.nn.pytorch.glob.SortPooling.rst", "generated/dgl.nn.pytorch.glob.SumPooling.rst", "generated/dgl.nn.pytorch.glob.WeightAndSum.rst", "generated/dgl.nn.pytorch.gt.BiasedMHA.rst", "generated/dgl.nn.pytorch.gt.DegreeEncoder.rst", "generated/dgl.nn.pytorch.gt.EGTLayer.rst", "generated/dgl.nn.pytorch.gt.GraphormerLayer.rst", "generated/dgl.nn.pytorch.gt.LapPosEncoder.rst", "generated/dgl.nn.pytorch.gt.PathEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.link.EdgePredictor.rst", "generated/dgl.nn.pytorch.link.TransE.rst", "generated/dgl.nn.pytorch.link.TransR.rst", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding.rst", "generated/dgl.nn.pytorch.utils.JumpingKnowledge.rst", "generated/dgl.nn.pytorch.utils.LabelPropagation.rst", "generated/dgl.nn.pytorch.utils.Sequential.rst", "generated/dgl.nn.pytorch.utils.WeightBasis.rst", "generated/dgl.nn.tensorflow.conv.APPNPConv.rst", "generated/dgl.nn.tensorflow.conv.ChebConv.rst", "generated/dgl.nn.tensorflow.conv.GATConv.rst", "generated/dgl.nn.tensorflow.conv.GINConv.rst", "generated/dgl.nn.tensorflow.conv.GraphConv.rst", "generated/dgl.nn.tensorflow.conv.RelGraphConv.rst", "generated/dgl.nn.tensorflow.conv.SAGEConv.rst", "generated/dgl.nn.tensorflow.conv.SGConv.rst", "generated/dgl.nn.tensorflow.glob.AvgPooling.rst", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv.rst", "generated/dgl.nn.tensorflow.glob.MaxPooling.rst", "generated/dgl.nn.tensorflow.glob.SortPooling.rst", "generated/dgl.nn.tensorflow.glob.SumPooling.rst", "generated/dgl.node_homophily.rst", "generated/dgl.node_label_informativeness.rst", "generated/dgl.node_subgraph.rst", "generated/dgl.node_type_subgraph.rst", "generated/dgl.norm_by_dst.rst", "generated/dgl.ops.copy_e_max.rst", "generated/dgl.ops.copy_e_mean.rst", "generated/dgl.ops.copy_e_min.rst", "generated/dgl.ops.copy_e_sum.rst", "generated/dgl.ops.copy_u.rst", "generated/dgl.ops.copy_u_max.rst", "generated/dgl.ops.copy_u_mean.rst", "generated/dgl.ops.copy_u_min.rst", "generated/dgl.ops.copy_u_sum.rst", "generated/dgl.ops.copy_v.rst", "generated/dgl.ops.e_add_u.rst", "generated/dgl.ops.e_add_v.rst", "generated/dgl.ops.e_div_u.rst", "generated/dgl.ops.e_div_v.rst", "generated/dgl.ops.e_dot_u.rst", "generated/dgl.ops.e_dot_v.rst", "generated/dgl.ops.e_mul_u.rst", "generated/dgl.ops.e_mul_v.rst", "generated/dgl.ops.e_sub_u.rst", "generated/dgl.ops.e_sub_v.rst", "generated/dgl.ops.gather_mm.rst", "generated/dgl.ops.gsddmm.rst", "generated/dgl.ops.gspmm.rst", "generated/dgl.ops.segment_mm.rst", "generated/dgl.ops.segment_reduce.rst", "generated/dgl.ops.u_add_e.rst", "generated/dgl.ops.u_add_e_max.rst", "generated/dgl.ops.u_add_e_mean.rst", "generated/dgl.ops.u_add_e_min.rst", "generated/dgl.ops.u_add_e_sum.rst", "generated/dgl.ops.u_add_v.rst", "generated/dgl.ops.u_div_e.rst", "generated/dgl.ops.u_div_e_max.rst", "generated/dgl.ops.u_div_e_mean.rst", "generated/dgl.ops.u_div_e_min.rst", "generated/dgl.ops.u_div_e_sum.rst", "generated/dgl.ops.u_div_v.rst", "generated/dgl.ops.u_dot_e.rst", "generated/dgl.ops.u_dot_v.rst", "generated/dgl.ops.u_mul_e.rst", "generated/dgl.ops.u_mul_e_max.rst", "generated/dgl.ops.u_mul_e_mean.rst", "generated/dgl.ops.u_mul_e_min.rst", "generated/dgl.ops.u_mul_e_sum.rst", "generated/dgl.ops.u_mul_v.rst", "generated/dgl.ops.u_sub_e.rst", "generated/dgl.ops.u_sub_e_max.rst", "generated/dgl.ops.u_sub_e_mean.rst", "generated/dgl.ops.u_sub_e_min.rst", "generated/dgl.ops.u_sub_e_sum.rst", "generated/dgl.ops.u_sub_v.rst", "generated/dgl.ops.v_add_e.rst", "generated/dgl.ops.v_add_u.rst", "generated/dgl.ops.v_div_e.rst", "generated/dgl.ops.v_div_u.rst", "generated/dgl.ops.v_dot_e.rst", "generated/dgl.ops.v_dot_u.rst", "generated/dgl.ops.v_mul_e.rst", "generated/dgl.ops.v_mul_u.rst", "generated/dgl.ops.v_sub_e.rst", "generated/dgl.ops.v_sub_u.rst", "generated/dgl.out_subgraph.rst", "generated/dgl.partition_graph_with_halo.rst", "generated/dgl.prop_edges.rst", "generated/dgl.prop_edges_dfs.rst", "generated/dgl.prop_nodes.rst", "generated/dgl.prop_nodes_bfs.rst", "generated/dgl.prop_nodes_topo.rst", "generated/dgl.radius_graph.rst", "generated/dgl.rand_bipartite.rst", "generated/dgl.rand_graph.rst", "generated/dgl.random_walk_pe.rst", "generated/dgl.readout_edges.rst", "generated/dgl.readout_nodes.rst", "generated/dgl.remove_edges.rst", "generated/dgl.remove_nodes.rst", "generated/dgl.remove_self_loop.rst", "generated/dgl.reorder_graph.rst", "generated/dgl.reverse.rst", "generated/dgl.sampling.PinSAGESampler.rst", "generated/dgl.sampling.global_uniform_negative_sampling.rst", "generated/dgl.sampling.node2vec_random_walk.rst", "generated/dgl.sampling.pack_traces.rst", "generated/dgl.sampling.random_walk.rst", "generated/dgl.sampling.sample_labors.rst", "generated/dgl.sampling.sample_neighbors.rst", "generated/dgl.sampling.sample_neighbors_biased.rst", "generated/dgl.sampling.select_topk.rst", "generated/dgl.save_graphs.rst", "generated/dgl.seed.rst", "generated/dgl.segmented_knn_graph.rst", "generated/dgl.shortest_dist.rst", "generated/dgl.slice_batch.rst", "generated/dgl.softmax_edges.rst", "generated/dgl.softmax_nodes.rst", "generated/dgl.sort_csc_by_tag.rst", "generated/dgl.sort_csr_by_tag.rst", "generated/dgl.sparse.SparseMatrix.T.rst", "generated/dgl.sparse.SparseMatrix.coalesce.rst", "generated/dgl.sparse.SparseMatrix.col.rst", "generated/dgl.sparse.SparseMatrix.coo.rst", "generated/dgl.sparse.SparseMatrix.cpu.rst", "generated/dgl.sparse.SparseMatrix.csc.rst", "generated/dgl.sparse.SparseMatrix.csr.rst", "generated/dgl.sparse.SparseMatrix.cuda.rst", "generated/dgl.sparse.SparseMatrix.device.rst", "generated/dgl.sparse.SparseMatrix.double.rst", "generated/dgl.sparse.SparseMatrix.dtype.rst", "generated/dgl.sparse.SparseMatrix.float.rst", "generated/dgl.sparse.SparseMatrix.has_duplicate.rst", "generated/dgl.sparse.SparseMatrix.indices.rst", "generated/dgl.sparse.SparseMatrix.int.rst", "generated/dgl.sparse.SparseMatrix.long.rst", "generated/dgl.sparse.SparseMatrix.neg.rst", "generated/dgl.sparse.SparseMatrix.nnz.rst", "generated/dgl.sparse.SparseMatrix.reduce.rst", "generated/dgl.sparse.SparseMatrix.row.rst", "generated/dgl.sparse.SparseMatrix.shape.rst", "generated/dgl.sparse.SparseMatrix.smax.rst", "generated/dgl.sparse.SparseMatrix.smean.rst", "generated/dgl.sparse.SparseMatrix.smin.rst", "generated/dgl.sparse.SparseMatrix.softmax.rst", "generated/dgl.sparse.SparseMatrix.sum.rst", "generated/dgl.sparse.SparseMatrix.t.rst", "generated/dgl.sparse.SparseMatrix.to.rst", "generated/dgl.sparse.SparseMatrix.to_dense.rst", "generated/dgl.sparse.SparseMatrix.transpose.rst", "generated/dgl.sparse.SparseMatrix.val.rst", "generated/dgl.sparse.add.rst", "generated/dgl.sparse.bsddmm.rst", "generated/dgl.sparse.bspmm.rst", "generated/dgl.sparse.diag.rst", "generated/dgl.sparse.div.rst", "generated/dgl.sparse.from_coo.rst", "generated/dgl.sparse.from_csc.rst", "generated/dgl.sparse.from_csr.rst", "generated/dgl.sparse.identity.rst", "generated/dgl.sparse.matmul.rst", "generated/dgl.sparse.mul.rst", "generated/dgl.sparse.power.rst", "generated/dgl.sparse.sddmm.rst", "generated/dgl.sparse.softmax.rst", "generated/dgl.sparse.sp_add_v.rst", "generated/dgl.sparse.sp_broadcast_v.rst", "generated/dgl.sparse.sp_div_v.rst", "generated/dgl.sparse.sp_mul_v.rst", "generated/dgl.sparse.sp_sub_v.rst", "generated/dgl.sparse.spmatrix.rst", "generated/dgl.sparse.spmm.rst", "generated/dgl.sparse.spspmm.rst", "generated/dgl.sparse.sub.rst", "generated/dgl.sparse.val_like.rst", "generated/dgl.sum_edges.rst", "generated/dgl.sum_nodes.rst", "generated/dgl.svd_pe.rst", "generated/dgl.to_bidirected.rst", "generated/dgl.to_block.rst", "generated/dgl.to_cugraph.rst", "generated/dgl.to_double.rst", "generated/dgl.to_float.rst", "generated/dgl.to_half.rst", "generated/dgl.to_heterogeneous.rst", "generated/dgl.to_homogeneous.rst", "generated/dgl.to_networkx.rst", "generated/dgl.to_simple.rst", "generated/dgl.to_simple_graph.rst", "generated/dgl.topk_edges.rst", "generated/dgl.topk_nodes.rst", "generated/dgl.topological_nodes_generator.rst", "generated/dgl.transforms.AddEdge.rst", "generated/dgl.transforms.AddMetaPaths.rst", "generated/dgl.transforms.AddReverse.rst", "generated/dgl.transforms.AddSelfLoop.rst", "generated/dgl.transforms.BaseTransform.rst", "generated/dgl.transforms.Compose.rst", "generated/dgl.transforms.DropEdge.rst", "generated/dgl.transforms.DropNode.rst", "generated/dgl.transforms.FeatMask.rst", "generated/dgl.transforms.GCNNorm.rst", "generated/dgl.transforms.GDC.rst", "generated/dgl.transforms.HeatKernel.rst", "generated/dgl.transforms.KHopGraph.rst", "generated/dgl.transforms.LapPE.rst", "generated/dgl.transforms.LineGraph.rst", "generated/dgl.transforms.NodeShuffle.rst", "generated/dgl.transforms.PPR.rst", "generated/dgl.transforms.RandomWalkPE.rst", "generated/dgl.transforms.RemoveSelfLoop.rst", "generated/dgl.transforms.RowFeatNormalizer.rst", "generated/dgl.transforms.SIGNDiffusion.rst", "generated/dgl.transforms.SVDPE.rst", "generated/dgl.transforms.ToLevi.rst", "generated/dgl.transforms.ToSimple.rst", "generated/dgl.udf.EdgeBatch.batch_size.rst", "generated/dgl.udf.EdgeBatch.data.rst", "generated/dgl.udf.EdgeBatch.dst.rst", "generated/dgl.udf.EdgeBatch.edges.rst", "generated/dgl.udf.EdgeBatch.src.rst", "generated/dgl.udf.NodeBatch.batch_size.rst", "generated/dgl.udf.NodeBatch.data.rst", "generated/dgl.udf.NodeBatch.mailbox.rst", "generated/dgl.udf.NodeBatch.nodes.rst", "generated/dgl.unbatch.rst", "generated/dgl.use_libxsmm.rst", "graphtransformer/data.rst", "graphtransformer/index.rst", "graphtransformer/model.rst", "guide/data.rst", "guide/data-dataset.rst", "guide/data-download.rst", "guide/data-loadcsv.rst", "guide/data-loadogb.rst", "guide/data-process.rst", "guide/data-savenload.rst", "guide/distributed.rst", "guide/distributed-apis.rst", "guide/distributed-hetero.rst", "guide/distributed-partition.rst", "guide/distributed-preprocessing.rst", "guide/distributed-tools.rst", "guide/graph.rst", "guide/graph-basic.rst", "guide/graph-external.rst", "guide/graph-feature.rst", "guide/graph-gpu.rst", "guide/graph-graphs-nodes-edges.rst", "guide/graph-heterogeneous.rst", "guide/index.rst", "guide/message.rst", "guide/message-api.rst", "guide/message-efficient.rst", "guide/message-heterograph.rst", "guide/message-part.rst", "guide/minibatch.rst", "guide/minibatch-custom-sampler.rst", "guide/minibatch-edge.rst", "guide/minibatch-gpu-sampling.rst", "guide/minibatch-inference.rst", "guide/minibatch-link.rst", "guide/minibatch-nn.rst", "guide/minibatch-node.rst", "guide/minibatch-parallelism.rst", "guide/minibatch-sparse.rst", "guide/mixed_precision.rst", "guide/nn.rst", "guide/nn-construction.rst", "guide/nn-forward.rst", "guide/nn-heterograph.rst", "guide/training.rst", "guide/training-edge.rst", "guide/training-eweight.rst", "guide/training-graph.rst", "guide/training-link.rst", "guide/training-node.rst", "guide_cn/data.rst", "guide_cn/data-dataset.rst", "guide_cn/data-download.rst", "guide_cn/data-loadogb.rst", "guide_cn/data-process.rst", "guide_cn/data-savenload.rst", "guide_cn/distributed.rst", "guide_cn/distributed-apis.rst", "guide_cn/distributed-preprocessing.rst", "guide_cn/distributed-tools.rst", "guide_cn/graph.rst", "guide_cn/graph-basic.rst", "guide_cn/graph-external.rst", "guide_cn/graph-feature.rst", "guide_cn/graph-gpu.rst", "guide_cn/graph-graphs-nodes-edges.rst", "guide_cn/graph-heterogeneous.rst", "guide_cn/index.rst", "guide_cn/message.rst", "guide_cn/message-api.rst", "guide_cn/message-efficient.rst", "guide_cn/message-heterograph.rst", "guide_cn/message-part.rst", "guide_cn/minibatch.rst", "guide_cn/minibatch-custom-sampler.rst", "guide_cn/minibatch-edge.rst", "guide_cn/minibatch-inference.rst", "guide_cn/minibatch-link.rst", "guide_cn/minibatch-nn.rst", "guide_cn/minibatch-node.rst", "guide_cn/nn.rst", "guide_cn/nn-construction.rst", "guide_cn/nn-forward.rst", "guide_cn/nn-heterograph.rst", "guide_cn/training.rst", "guide_cn/training-edge.rst", "guide_cn/training-eweight.rst", "guide_cn/training-graph.rst", "guide_cn/training-link.rst", "guide_cn/training-node.rst", "guide_ko/data.rst", "guide_ko/data-dataset.rst", "guide_ko/data-download.rst", "guide_ko/data-loadogb.rst", "guide_ko/data-process.rst", "guide_ko/data-savenload.rst", "guide_ko/distributed.rst", "guide_ko/distributed-apis.rst", "guide_ko/distributed-hetero.rst", "guide_ko/distributed-preprocessing.rst", "guide_ko/distributed-tools.rst", "guide_ko/graph.rst", "guide_ko/graph-basic.rst", "guide_ko/graph-external.rst", "guide_ko/graph-feature.rst", "guide_ko/graph-gpu.rst", "guide_ko/graph-graphs-nodes-edges.rst", "guide_ko/graph-heterogeneous.rst", "guide_ko/index.rst", "guide_ko/message.rst", "guide_ko/message-api.rst", "guide_ko/message-edge.rst", "guide_ko/message-efficient.rst", "guide_ko/message-heterograph.rst", "guide_ko/message-part.rst", "guide_ko/minibatch.rst", "guide_ko/minibatch-custom-sampler.rst", "guide_ko/minibatch-edge.rst", "guide_ko/minibatch-gpu-sampling.rst", "guide_ko/minibatch-inference.rst", "guide_ko/minibatch-link.rst", "guide_ko/minibatch-nn.rst", "guide_ko/minibatch-node.rst", "guide_ko/mixed_precision.rst", "guide_ko/nn.rst", "guide_ko/nn-construction.rst", "guide_ko/nn-forward.rst", "guide_ko/nn-heterograph.rst", "guide_ko/training.rst", "guide_ko/training-edge.rst", "guide_ko/training-graph.rst", "guide_ko/training-link.rst", "guide_ko/training-node.rst", "index.rst", "install/index.rst", "notebooks/sparse/gcn.nblink", "notebooks/sparse/graph_diffusion.nblink", "notebooks/sparse/graph_transformer.nblink", "notebooks/sparse/hgnn.nblink", "notebooks/sparse/index.rst", "notebooks/sparse/quickstart.nblink", "performance.rst", "resources.rst", "sg_execution_times.rst", "stochastic_training/index.rst", "stochastic_training/link_prediction.nblink", "stochastic_training/multigpu_node_classification.nblink", "stochastic_training/neighbor_sampling_overview.nblink", "stochastic_training/node_classification.nblink", "stochastic_training/ondisk-dataset.rst", "stochastic_training/ondisk-dataset-specification.rst", "stochastic_training/ondisk_dataset_heterograph.nblink", "stochastic_training/ondisk_dataset_homograph.nblink", "tutorials/blitz/1_introduction.rst", "tutorials/blitz/2_dglgraph.rst", "tutorials/blitz/3_message_passing.rst", "tutorials/blitz/4_link_predict.rst", "tutorials/blitz/5_graph_classification.rst", "tutorials/blitz/6_load_data.rst", "tutorials/blitz/index.rst", "tutorials/blitz/sg_execution_times.rst", "tutorials/cpu/argo_tutorial.rst", "tutorials/cpu/cpu_best_practises.rst", "tutorials/cpu/index.rst", "tutorials/cpu/sg_execution_times.rst", "tutorials/dist/1_node_classification.rst", "tutorials/dist/2_link_prediction.rst", "tutorials/dist/index.rst", "tutorials/dist/sg_execution_times.rst", "tutorials/models/1_gnn/1_gcn.rst", "tutorials/models/1_gnn/4_rgcn.rst", "tutorials/models/1_gnn/6_line_graph.rst", "tutorials/models/1_gnn/9_gat.rst", "tutorials/models/1_gnn/index.rst", "tutorials/models/1_gnn/sg_execution_times.rst", "tutorials/models/2_small_graph/3_tree-lstm.rst", "tutorials/models/2_small_graph/index.rst", "tutorials/models/2_small_graph/sg_execution_times.rst", "tutorials/models/3_generative_model/5_dgmg.rst", "tutorials/models/3_generative_model/index.rst", "tutorials/models/3_generative_model/sg_execution_times.rst", "tutorials/models/4_old_wines/2_capsule.rst", "tutorials/models/4_old_wines/7_transformer.rst", "tutorials/models/4_old_wines/index.rst", "tutorials/models/4_old_wines/sg_execution_times.rst", "tutorials/models/index.rst", "tutorials/models/sg_execution_times.rst", "tutorials/multi/1_graph_classification.rst", "tutorials/multi/2_node_classification.rst", "tutorials/multi/index.rst", "tutorials/multi/sg_execution_times.rst"], "indexentries": {"__getitem__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__getitem__", false]], "__getitem__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__getitem__", false]], "__getitem__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__getitem__", false]], "__getitem__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__getitem__", false]], "__getitem__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__getitem__", false]], "__getitem__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__getitem__", false]], "__getitem__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__getitem__", false]], "__getitem__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__getitem__", false]], "__getitem__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__getitem__", false]], "__getitem__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__getitem__", false]], "__getitem__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__getitem__", false]], "__getitem__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__getitem__", false]], "__getitem__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__getitem__", false]], "__getitem__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__getitem__", false]], "__getitem__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__getitem__", false]], "__getitem__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__getitem__", false]], "__getitem__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__getitem__", false]], "__getitem__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__getitem__", false]], "__getitem__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__getitem__", false]], "__getitem__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__getitem__", false]], "__getitem__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__getitem__", false]], "__getitem__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__getitem__", false]], "__getitem__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__getitem__", false]], "__getitem__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__getitem__", false]], "__getitem__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__getitem__", false]], "__getitem__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__getitem__", false]], "__getitem__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__getitem__", false]], "__getitem__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__getitem__", false]], "__getitem__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__getitem__", false]], "__getitem__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__getitem__", false]], "__getitem__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__getitem__", false]], "__getitem__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__getitem__", false]], "__getitem__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__getitem__", false]], "__getitem__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__getitem__", false]], "__getitem__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__getitem__", false]], "__getitem__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__getitem__", false]], "__getitem__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__getitem__", false]], "__getitem__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__getitem__", false]], "__getitem__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__getitem__", false]], "__getitem__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__getitem__", false]], "__getitem__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__getitem__", false]], "__getitem__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__getitem__", false]], "__getitem__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__getitem__", false]], "__getitem__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__getitem__", false]], "__getitem__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__getitem__", false]], "__getitem__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__getitem__", false]], "__getitem__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__getitem__", false]], "__getitem__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__getitem__", false]], "__getitem__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__getitem__", false]], "__getitem__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__getitem__", false]], "__getitem__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__getitem__", false]], "__getitem__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__getitem__", false]], "__getitem__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__getitem__", false]], "__getitem__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__getitem__", false]], "__getitem__() (dgl.dglgraph method)": [[26, "dgl.DGLGraph.__getitem__", false]], "__init__() (dgl.dataloading.blocksampler method)": [[208, "dgl.dataloading.BlockSampler.__init__", false]], "__init__() (dgl.sampling.pinsagesampler method)": [[562, "dgl.sampling.PinSAGESampler.__init__", false]], "__len__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__len__", false]], "__len__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__len__", false]], "__len__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__len__", false]], "__len__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__len__", false]], "__len__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__len__", false]], "__len__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__len__", false]], "__len__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__len__", false]], "__len__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__len__", false]], "__len__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__len__", false]], "__len__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__len__", false]], "__len__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__len__", false]], "__len__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__len__", false]], "__len__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__len__", false]], "__len__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__len__", false]], "__len__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__len__", false]], "__len__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__len__", false]], "__len__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__len__", false]], "__len__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__len__", false]], "__len__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__len__", false]], "__len__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__len__", false]], "__len__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__len__", false]], "__len__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__len__", false]], "__len__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__len__", false]], "__len__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__len__", false]], "__len__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__len__", false]], "__len__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__len__", false]], "__len__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__len__", false]], "__len__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__len__", false]], "__len__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__len__", false]], "__len__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__len__", false]], "__len__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__len__", false]], "__len__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__len__", false]], "__len__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__len__", false]], "__len__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__len__", false]], "__len__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__len__", false]], "__len__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__len__", false]], "__len__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__len__", false]], "__len__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__len__", false]], "__len__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__len__", false]], "__len__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__len__", false]], "__len__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__len__", false]], "__len__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__len__", false]], "__len__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__len__", false]], "__len__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__len__", false]], "__len__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__len__", false]], "__len__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__len__", false]], "__len__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__len__", false]], "__len__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__len__", false]], "__len__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__len__", false]], "__len__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__len__", false]], "__len__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__len__", false]], "__len__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__len__", false]], "__len__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__len__", false]], "__len__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__len__", false]], "__len__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__len__", false]], "__len__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__len__", false]], "__len__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__len__", false]], "__len__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__len__", false]], "__len__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__len__", false]], "__len__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__len__", false]], "__len__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__len__", false]], "__len__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__len__", false]], "__len__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__len__", false]], "__len__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__len__", false]], "__len__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__len__", false]], "actordataset (class in dgl.data)": [[134, "dgl.data.ActorDataset", false]], "add() (in module dgl.sparse)": [[611, "dgl.sparse.add", false]], "add_edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.add_edge_attribute", false]], "add_edges() (dgl.dglgraph method)": [[27, "dgl.DGLGraph.add_edges", false]], "add_edges() (in module dgl)": [[114, "dgl.add_edges", false]], "add_node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.add_node_attribute", false]], "add_node_property_split (class in dgl.data.utils)": [[197, "dgl.data.utils.add_node_property_split", false]], "add_nodepred_split (class in dgl.data.utils)": [[198, "dgl.data.utils.add_nodepred_split", false]], "add_nodes() (dgl.dglgraph method)": [[28, "dgl.DGLGraph.add_nodes", false]], "add_nodes() (in module dgl)": [[115, "dgl.add_nodes", false]], "add_reverse_edges() (in module dgl)": [[116, "dgl.add_reverse_edges", false]], "add_reverse_edges() (in module dgl.graphbolt)": [[320, "dgl.graphbolt.add_reverse_edges", false]], "add_self_loop() (dgl.dglgraph method)": [[29, "dgl.DGLGraph.add_self_loop", false]], "add_self_loop() (in module dgl)": [[117, "dgl.add_self_loop", false]], "addedge (class in dgl.transforms)": [[652, "dgl.transforms.AddEdge", false]], "addmetapaths (class in dgl.transforms)": [[653, "dgl.transforms.AddMetaPaths", false]], "addreverse (class in dgl.transforms)": [[654, "dgl.transforms.AddReverse", false]], "addselfloop (class in dgl.transforms)": [[655, "dgl.transforms.AddSelfLoop", false]], "adj() (dgl.dglgraph method)": [[30, "dgl.DGLGraph.adj", false]], "adj_external() (dgl.dglgraph method)": [[31, "dgl.DGLGraph.adj_external", false]], "adj_product_graph() (in module dgl)": [[118, "dgl.adj_product_graph", false]], "adj_sum_graph() (in module dgl)": [[119, "dgl.adj_sum_graph", false]], "adj_tensors() (dgl.dglgraph method)": [[32, "dgl.DGLGraph.adj_tensors", false]], "adjacency_matrix() (dgl.dglgraph method)": [[33, "dgl.DGLGraph.adjacency_matrix", false]], "adjusted_homophily() (in module dgl)": [[120, "dgl.adjusted_homophily", false]], "agnnconv (class in dgl.nn.mxnet.conv)": [[363, "dgl.nn.mxnet.conv.AGNNConv", false]], "agnnconv (class in dgl.nn.pytorch.conv)": [[393, "dgl.nn.pytorch.conv.AGNNConv", false]], "aifbdataset (class in dgl.data)": [[132, "dgl.data.AIFBDataset", false]], "all_nodes_set (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.all_nodes_set", false]], "amazoncobuycomputerdataset (class in dgl.data)": [[135, "dgl.data.AmazonCoBuyComputerDataset", false]], "amazoncobuyphotodataset (class in dgl.data)": [[136, "dgl.data.AmazonCoBuyPhotoDataset", false]], "amazonratingsdataset (class in dgl.data)": [[137, "dgl.data.AmazonRatingsDataset", false]], "amdataset (class in dgl.data)": [[133, "dgl.data.AMDataset", false]], "apply_each() (in module dgl)": [[121, "dgl.apply_each", false]], "apply_edges() (dgl.dglgraph method)": [[34, "dgl.DGLGraph.apply_edges", false]], "apply_nodes() (dgl.dglgraph method)": [[35, "dgl.DGLGraph.apply_nodes", false]], "appnpconv (class in dgl.nn.mxnet.conv)": [[364, "dgl.nn.mxnet.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.pytorch.conv)": [[394, "dgl.nn.pytorch.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.tensorflow.conv)": [[464, "dgl.nn.tensorflow.conv.APPNPConv", false]], "as_edge_prediction_sampler() (in module dgl.dataloading)": [[218, "dgl.dataloading.as_edge_prediction_sampler", false]], "asgraphpreddataset (class in dgl.data)": [[138, "dgl.data.AsGraphPredDataset", false]], "aslinkpreddataset (class in dgl.data)": [[139, "dgl.data.AsLinkPredDataset", false]], "asnodepreddataset (class in dgl.data)": [[140, "dgl.data.AsNodePredDataset", false]], "atomicconv (class in dgl.nn.pytorch.conv)": [[395, "dgl.nn.pytorch.conv.AtomicConv", false]], "avgpooling (class in dgl.nn.mxnet.glob)": [[380, "dgl.nn.mxnet.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.pytorch.glob)": [[439, "dgl.nn.pytorch.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.tensorflow.glob)": [[472, "dgl.nn.tensorflow.glob.AvgPooling", false]], "ba2motifdataset (class in dgl.data)": [[141, "dgl.data.BA2MotifDataset", false]], "bacommunitydataset (class in dgl.data)": [[142, "dgl.data.BACommunityDataset", false]], "barrier() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.barrier", false]], "basetransform (class in dgl.transforms)": [[656, "dgl.transforms.BaseTransform", false]], "bashapedataset (class in dgl.data)": [[143, "dgl.data.BAShapeDataset", false]], "basicfeaturestore (class in dgl.graphbolt)": [[286, "dgl.graphbolt.BasicFeatureStore", false]], "batch() (in module dgl)": [[122, "dgl.batch", false]], "batch_num_edges() (dgl.dglgraph method)": [[36, "dgl.DGLGraph.batch_num_edges", false]], "batch_num_nodes() (dgl.dglgraph method)": [[37, "dgl.DGLGraph.batch_num_nodes", false]], "batch_size (dgl.dglgraph property)": [[38, "dgl.DGLGraph.batch_size", false]], "batch_size() (dgl.udf.edgebatch method)": [[676, "dgl.udf.EdgeBatch.batch_size", false]], "batch_size() (dgl.udf.nodebatch method)": [[681, "dgl.udf.NodeBatch.batch_size", false]], "bfs_edges_generator() (in module dgl)": [[123, "dgl.bfs_edges_generator", false]], "bfs_nodes_generator() (in module dgl)": [[124, "dgl.bfs_nodes_generator", false]], "bgsdataset (class in dgl.data)": [[144, "dgl.data.BGSDataset", false]], "bias (dgl.nn.pytorch.conv.graphconv attribute)": [[419, "dgl.nn.pytorch.conv.GraphConv.bias", false]], "biasedmha (class in dgl.nn.pytorch.gt)": [[448, "dgl.nn.pytorch.gt.BiasedMHA", false]], "bipartite_from_networkx() (in module dgl)": [[125, "dgl.bipartite_from_networkx", false]], "bipartite_from_scipy() (in module dgl)": [[126, "dgl.bipartite_from_scipy", false]], "bitcoinotcdataset (class in dgl.data)": [[145, "dgl.data.BitcoinOTCDataset", false]], "block_to_graph() (in module dgl)": [[127, "dgl.block_to_graph", false]], "blocks (dgl.graphbolt.minibatch property)": [[305, "dgl.graphbolt.MiniBatch.blocks", false]], "blocksampler (class in dgl.dataloading)": [[208, "dgl.dataloading.BlockSampler", false]], "broadcast_edges() (in module dgl)": [[128, "dgl.broadcast_edges", false]], "broadcast_nodes() (in module dgl)": [[129, "dgl.broadcast_nodes", false]], "bsddmm() (in module dgl.sparse)": [[612, "dgl.sparse.bsddmm", false]], "bspmm() (in module dgl.sparse)": [[613, "dgl.sparse.bspmm", false]], "builtindataset (class in dgl.graphbolt)": [[287, "dgl.graphbolt.BuiltinDataset", false]], "cache_size_in_bytes (dgl.graphbolt.cpucachedfeature property)": [[288, "dgl.graphbolt.CPUCachedFeature.cache_size_in_bytes", false]], "cache_size_in_bytes (dgl.graphbolt.gpucachedfeature property)": [[298, "dgl.graphbolt.GPUCachedFeature.cache_size_in_bytes", false]], "call_once_and_share() (in module dgl.multiprocessing.pytorch)": [[359, "dgl.multiprocessing.pytorch.call_once_and_share", false]], "canonical_etypes (dgl.dglgraph property)": [[39, "dgl.DGLGraph.canonical_etypes", false]], "canonical_etypes (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.canonical_etypes", false]], "cfconv (class in dgl.nn.pytorch.conv)": [[396, "dgl.nn.pytorch.conv.CFConv", false]], "chameleondataset (class in dgl.data)": [[149, "dgl.data.ChameleonDataset", false]], "chebconv (class in dgl.nn.mxnet.conv)": [[365, "dgl.nn.mxnet.conv.ChebConv", false]], "chebconv (class in dgl.nn.pytorch.conv)": [[397, "dgl.nn.pytorch.conv.ChebConv", false]], "chebconv (class in dgl.nn.tensorflow.conv)": [[465, "dgl.nn.tensorflow.conv.ChebConv", false]], "check_sha1 (class in dgl.data.utils)": [[199, "dgl.data.utils.check_sha1", false]], "cifar10superpixeldataset (class in dgl.data)": [[146, "dgl.data.CIFAR10SuperPixelDataset", false]], "citeseergraphdataset (class in dgl.data)": [[150, "dgl.data.CiteseerGraphDataset", false]], "clusterdataset (class in dgl.data)": [[147, "dgl.data.CLUSTERDataset", false]], "clustergcnsampler (class in dgl.dataloading)": [[209, "dgl.dataloading.ClusterGCNSampler", false]], "coalesce() (dgl.sparse.sparsematrix method)": [[581, "dgl.sparse.SparseMatrix.coalesce", false]], "coauthorcsdataset (class in dgl.data)": [[151, "dgl.data.CoauthorCSDataset", false]], "coauthorphysicsdataset (class in dgl.data)": [[152, "dgl.data.CoauthorPhysicsDataset", false]], "col (dgl.sparse.sparsematrix property)": [[582, "dgl.sparse.SparseMatrix.col", false]], "collate_fn() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.collate_fn", false]], "compact_csc_format() (in module dgl.graphbolt)": [[321, "dgl.graphbolt.compact_csc_format", false]], "compact_graphs() (in module dgl)": [[130, "dgl.compact_graphs", false]], "compacted_seeds (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.compacted_seeds", false]], "compose (class in dgl.transforms)": [[657, "dgl.transforms.Compose", false]], "compute_blocks() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.compute_blocks", false]], "coo() (dgl.sparse.sparsematrix method)": [[583, "dgl.sparse.SparseMatrix.coo", false]], "copy_e() (in module dgl.function)": [[249, "dgl.function.copy_e", false]], "copy_e_max() (in module dgl.ops)": [[483, "dgl.ops.copy_e_max", false]], "copy_e_mean() (in module dgl.ops)": [[484, "dgl.ops.copy_e_mean", false]], "copy_e_min() (in module dgl.ops)": [[485, "dgl.ops.copy_e_min", false]], "copy_e_sum() (in module dgl.ops)": [[486, "dgl.ops.copy_e_sum", false]], "copy_to_shared_memory() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.copy_to_shared_memory", false]], "copy_to_shared_memory() (dgl.graphbolt.samplinggraph method)": [[312, "dgl.graphbolt.SamplingGraph.copy_to_shared_memory", false]], "copy_u() (in module dgl.function)": [[250, "dgl.function.copy_u", false]], "copy_u() (in module dgl.ops)": [[487, "dgl.ops.copy_u", false]], "copy_u_max() (in module dgl.ops)": [[488, "dgl.ops.copy_u_max", false]], "copy_u_mean() (in module dgl.ops)": [[489, "dgl.ops.copy_u_mean", false]], "copy_u_min() (in module dgl.ops)": [[490, "dgl.ops.copy_u_min", false]], "copy_u_sum() (in module dgl.ops)": [[491, "dgl.ops.copy_u_sum", false]], "copy_v() (in module dgl.ops)": [[492, "dgl.ops.copy_v", false]], "copyto (class in dgl.graphbolt)": [[289, "dgl.graphbolt.CopyTo", false]], "corafulldataset (class in dgl.data)": [[153, "dgl.data.CoraFullDataset", false]], "coragraphdataset (class in dgl.data)": [[154, "dgl.data.CoraGraphDataset", false]], "cornelldataset (class in dgl.data)": [[155, "dgl.data.CornellDataset", false]], "count() (dgl.graphbolt.cpucachedfeature method)": [[288, "dgl.graphbolt.CPUCachedFeature.count", false]], "count() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.count", false]], "count() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.count", false]], "count() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.count", false]], "count() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.count", false]], "count() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.count", false]], "cpu() (dgl.dglgraph method)": [[40, "dgl.DGLGraph.cpu", false]], "cpu() (dgl.sparse.sparsematrix method)": [[584, "dgl.sparse.SparseMatrix.cpu", false]], "cpu_cached_feature() (in module dgl.graphbolt)": [[322, "dgl.graphbolt.cpu_cached_feature", false]], "cpucachedfeature (class in dgl.graphbolt)": [[288, "dgl.graphbolt.CPUCachedFeature", false]], "create_block() (in module dgl)": [[131, "dgl.create_block", false]], "create_formats_() (dgl.dglgraph method)": [[41, "dgl.DGLGraph.create_formats_", false]], "csc() (dgl.sparse.sparsematrix method)": [[585, "dgl.sparse.SparseMatrix.csc", false]], "csc_indptr (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.csc_indptr", false]], "csr() (dgl.sparse.sparsematrix method)": [[586, "dgl.sparse.SparseMatrix.csr", false]], "csvdataset (class in dgl.data)": [[148, "dgl.data.CSVDataset", false]], "cuda() (dgl.sparse.sparsematrix method)": [[587, "dgl.sparse.SparseMatrix.cuda", false]], "cugraphgatconv (class in dgl.nn.pytorch.conv)": [[398, "dgl.nn.pytorch.conv.CuGraphGATConv", false]], "cugraphrelgraphconv (class in dgl.nn.pytorch.conv)": [[399, "dgl.nn.pytorch.conv.CuGraphRelGraphConv", false]], "cugraphsageconv (class in dgl.nn.pytorch.conv)": [[400, "dgl.nn.pytorch.conv.CuGraphSAGEConv", false]], "data (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.data", false]], "data (dgl.udf.edgebatch property)": [[677, "dgl.udf.EdgeBatch.data", false]], "data (dgl.udf.nodebatch property)": [[682, "dgl.udf.NodeBatch.data", false]], "dataloader (class in dgl.dataloading)": [[210, "dgl.dataloading.DataLoader", false]], "dataloader (class in dgl.graphbolt)": [[290, "dgl.graphbolt.DataLoader", false]], "dataset (class in dgl.graphbolt)": [[291, "dgl.graphbolt.Dataset", false]], "dataset_name (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.dataset_name", false]], "dataset_name (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.dataset_name", false]], "dataset_name (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.dataset_name", false]], "deepwalk (class in dgl.nn.pytorch)": [[387, "dgl.nn.pytorch.DeepWalk", false]], "degreeencoder (class in dgl.nn.pytorch.gt)": [[449, "dgl.nn.pytorch.gt.DegreeEncoder", false]], "densechebconv (class in dgl.nn.mxnet.conv)": [[366, "dgl.nn.mxnet.conv.DenseChebConv", false]], "densechebconv (class in dgl.nn.pytorch.conv)": [[402, "dgl.nn.pytorch.conv.DenseChebConv", false]], "densegraphconv (class in dgl.nn.mxnet.conv)": [[367, "dgl.nn.mxnet.conv.DenseGraphConv", false]], "densegraphconv (class in dgl.nn.pytorch.conv)": [[403, "dgl.nn.pytorch.conv.DenseGraphConv", false]], "densesageconv (class in dgl.nn.mxnet.conv)": [[368, "dgl.nn.mxnet.conv.DenseSAGEConv", false]], "densesageconv (class in dgl.nn.pytorch.conv)": [[404, "dgl.nn.pytorch.conv.DenseSAGEConv", false]], "device (dgl.dglgraph property)": [[42, "dgl.DGLGraph.device", false]], "device (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.device", false]], "device (dgl.sparse.sparsematrix property)": [[588, "dgl.sparse.SparseMatrix.device", false]], "dfs_edges_generator() (in module dgl)": [[227, "dgl.dfs_edges_generator", false]], "dfs_labeled_edges_generator() (in module dgl)": [[228, "dgl.dfs_labeled_edges_generator", false]], "dgl": [[0, "module-dgl", false]], "dgl.data": [[2, "module-dgl.data", false]], "dgl.geometry": [[6, "module-dgl.geometry", false]], "dgl.nn.functional": [[18, "module-dgl.nn.functional", false]], "dgl.optim": [[10, "module-dgl.optim", false]], "dgl.sampling": [[11, "module-dgl.sampling", false]], "dgl.transforms": [[19, "module-dgl.transforms", false]], "dgl_partition_to_graphbolt() (in module dgl.distributed)": [[229, "dgl.distributed.dgl_partition_to_graphbolt", false]], "dgldataset (class in dgl.data)": [[156, "dgl.data.DGLDataset", false]], "dglgraph (class in dgl)": [[1, "dgl.DGLGraph", false]], "dgnconv (class in dgl.nn.pytorch.conv)": [[401, "dgl.nn.pytorch.conv.DGNConv", false]], "diag() (in module dgl.sparse)": [[614, "dgl.sparse.diag", false]], "diskbasedfeature (class in dgl.graphbolt)": [[292, "dgl.graphbolt.DiskBasedFeature", false]], "distdataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistDataLoader", false]], "distedgedataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistEdgeDataLoader", false]], "distembedding (class in dgl.distributed)": [[4, "dgl.distributed.DistEmbedding", false]], "distgraph (class in dgl.distributed)": [[4, "dgl.distributed.DistGraph", false]], "distnodedataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistNodeDataLoader", false]], "distributeditemsampler (class in dgl.graphbolt)": [[293, "dgl.graphbolt.DistributedItemSampler", false]], "disttensor (class in dgl.distributed)": [[4, "dgl.distributed.DistTensor", false]], "div() (in module dgl.sparse)": [[615, "dgl.sparse.div", false]], "dotgatconv (class in dgl.nn.pytorch.conv)": [[405, "dgl.nn.pytorch.conv.DotGatConv", false]], "double() (dgl.sparse.sparsematrix method)": [[589, "dgl.sparse.SparseMatrix.double", false]], "double_radius_node_labeling() (in module dgl)": [[241, "dgl.double_radius_node_labeling", false]], "download (class in dgl.data.utils)": [[200, "dgl.data.utils.download", false]], "dropedge (class in dgl.transforms)": [[658, "dgl.transforms.DropEdge", false]], "dropnode (class in dgl.transforms)": [[659, "dgl.transforms.DropNode", false]], "dst (dgl.udf.edgebatch property)": [[678, "dgl.udf.EdgeBatch.dst", false]], "dstdata (dgl.dglgraph property)": [[43, "dgl.DGLGraph.dstdata", false]], "dstnodes (dgl.dglgraph property)": [[44, "dgl.DGLGraph.dstnodes", false]], "dsttypes (dgl.dglgraph property)": [[45, "dgl.DGLGraph.dsttypes", false]], "dtype (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.dtype", false]], "dtype (dgl.sparse.sparsematrix property)": [[590, "dgl.sparse.SparseMatrix.dtype", false]], "e_add_u() (in module dgl.function)": [[251, "dgl.function.e_add_u", false]], "e_add_u() (in module dgl.ops)": [[493, "dgl.ops.e_add_u", false]], "e_add_v() (in module dgl.function)": [[252, "dgl.function.e_add_v", false]], "e_add_v() (in module dgl.ops)": [[494, "dgl.ops.e_add_v", false]], "e_div_u() (in module dgl.function)": [[253, "dgl.function.e_div_u", false]], "e_div_u() (in module dgl.ops)": [[495, "dgl.ops.e_div_u", false]], "e_div_v() (in module dgl.function)": [[254, "dgl.function.e_div_v", false]], "e_div_v() (in module dgl.ops)": [[496, "dgl.ops.e_div_v", false]], "e_dot_u() (in module dgl.function)": [[255, "dgl.function.e_dot_u", false]], "e_dot_u() (in module dgl.ops)": [[497, "dgl.ops.e_dot_u", false]], "e_dot_v() (in module dgl.function)": [[256, "dgl.function.e_dot_v", false]], "e_dot_v() (in module dgl.ops)": [[498, "dgl.ops.e_dot_v", false]], "e_mul_u() (in module dgl.function)": [[257, "dgl.function.e_mul_u", false]], "e_mul_u() (in module dgl.ops)": [[499, "dgl.ops.e_mul_u", false]], "e_mul_v() (in module dgl.function)": [[258, "dgl.function.e_mul_v", false]], "e_mul_v() (in module dgl.ops)": [[500, "dgl.ops.e_mul_v", false]], "e_sub_u() (in module dgl.function)": [[259, "dgl.function.e_sub_u", false]], "e_sub_u() (in module dgl.ops)": [[501, "dgl.ops.e_sub_u", false]], "e_sub_v() (in module dgl.function)": [[260, "dgl.function.e_sub_v", false]], "e_sub_v() (in module dgl.ops)": [[502, "dgl.ops.e_sub_v", false]], "edata (dgl.dglgraph property)": [[46, "dgl.DGLGraph.edata", false]], "edata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edata", false]], "edge_attr_schemes() (dgl.dglgraph method)": [[47, "dgl.DGLGraph.edge_attr_schemes", false]], "edge_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.edge_attr_schemes", false]], "edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attribute", false]], "edge_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attributes", false]], "edge_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.edge_feat_size", false]], "edge_features (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.edge_features", false]], "edge_homophily() (in module dgl)": [[242, "dgl.edge_homophily", false]], "edge_ids() (dgl.dglgraph method)": [[48, "dgl.DGLGraph.edge_ids", false]], "edge_ids() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.edge_ids", false]], "edge_label_informativeness() (in module dgl)": [[243, "dgl.edge_label_informativeness", false]], "edge_softmax() (in module dgl.nn.functional)": [[361, "dgl.nn.functional.edge_softmax", false]], "edge_split() (in module dgl.distributed)": [[230, "dgl.distributed.edge_split", false]], "edge_subgraph() (dgl.dglgraph method)": [[49, "dgl.DGLGraph.edge_subgraph", false]], "edge_subgraph() (in module dgl)": [[244, "dgl.edge_subgraph", false]], "edge_type_subgraph() (dgl.dglgraph method)": [[50, "dgl.DGLGraph.edge_type_subgraph", false]], "edge_type_subgraph() (in module dgl)": [[245, "dgl.edge_type_subgraph", false]], "edge_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.edge_type_to_id", false]], "edgecollator (class in dgl.distributed)": [[4, "dgl.distributed.EdgeCollator", false]], "edgeconv (class in dgl.nn.mxnet.conv)": [[369, "dgl.nn.mxnet.conv.EdgeConv", false]], "edgeconv (class in dgl.nn.pytorch.conv)": [[408, "dgl.nn.pytorch.conv.EdgeConv", false]], "edgegatconv (class in dgl.nn.pytorch.conv)": [[409, "dgl.nn.pytorch.conv.EdgeGATConv", false]], "edgepredictor (class in dgl.nn.pytorch.link)": [[456, "dgl.nn.pytorch.link.EdgePredictor", false]], "edges (dgl.dglgraph property)": [[51, "dgl.DGLGraph.edges", false]], "edges (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edges", false]], "edges() (dgl.udf.edgebatch method)": [[679, "dgl.udf.EdgeBatch.edges", false]], "edgeweightnorm (class in dgl.nn.pytorch.conv)": [[410, "dgl.nn.pytorch.conv.EdgeWeightNorm", false]], "egatconv (class in dgl.nn.pytorch.conv)": [[406, "dgl.nn.pytorch.conv.EGATConv", false]], "egnnconv (class in dgl.nn.pytorch.conv)": [[407, "dgl.nn.pytorch.conv.EGNNConv", false]], "egtlayer (class in dgl.nn.pytorch.gt)": [[450, "dgl.nn.pytorch.gt.EGTLayer", false]], "eid2localeid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2localeid", false]], "eid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2partid", false]], "end_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.end_time", false]], "etype_str_to_tuple() (in module dgl.graphbolt)": [[323, "dgl.graphbolt.etype_str_to_tuple", false]], "etype_tuple_to_str() (in module dgl.graphbolt)": [[324, "dgl.graphbolt.etype_tuple_to_str", false]], "etypes (dgl.dglgraph property)": [[52, "dgl.DGLGraph.etypes", false]], "etypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.etypes", false]], "exclude_edges() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.exclude_edges", false]], "exclude_seed_edges() (in module dgl.graphbolt)": [[325, "dgl.graphbolt.exclude_seed_edges", false]], "expand_indptr() (in module dgl.graphbolt)": [[326, "dgl.graphbolt.expand_indptr", false]], "explain_graph() (dgl.nn.pytorch.explain.gnnexplainer method)": [[430, "dgl.nn.pytorch.explain.GNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[431, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[432, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[433, "dgl.nn.pytorch.explain.HeteroSubgraphX.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.pgexplainer method)": [[434, "dgl.nn.pytorch.explain.PGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.subgraphx method)": [[435, "dgl.nn.pytorch.explain.SubgraphX.explain_graph", false]], "explain_node() (dgl.nn.pytorch.explain.gnnexplainer method)": [[430, "dgl.nn.pytorch.explain.GNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[431, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[432, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[434, "dgl.nn.pytorch.explain.PGExplainer.explain_node", false]], "extract_archive (class in dgl.data.utils)": [[201, "dgl.data.utils.extract_archive", false]], "fakenewsdataset (class in dgl.data)": [[159, "dgl.data.FakeNewsDataset", false]], "farthest_point_sampler (class in dgl.geometry)": [[6, "dgl.geometry.farthest_point_sampler", false]], "fb15k237dataset (class in dgl.data)": [[157, "dgl.data.FB15k237Dataset", false]], "fb15kdataset (class in dgl.data)": [[158, "dgl.data.FB15kDataset", false]], "feat_size (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.feat_size", false]], "featmask (class in dgl.transforms)": [[660, "dgl.transforms.FeatMask", false]], "feature (class in dgl.graphbolt)": [[294, "dgl.graphbolt.Feature", false]], "feature (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature", false]], "feature (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.feature", false]], "feature (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.feature", false]], "feature (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.feature", false]], "feature_name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature_name", false]], "featurefetcher (class in dgl.graphbolt)": [[295, "dgl.graphbolt.FeatureFetcher", false]], "features (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.features", false]], "featurestore (class in dgl.graphbolt)": [[296, "dgl.graphbolt.FeatureStore", false]], "filter_edges() (dgl.dglgraph method)": [[53, "dgl.DGLGraph.filter_edges", false]], "filter_nodes() (dgl.dglgraph method)": [[54, "dgl.DGLGraph.filter_nodes", false]], "find_edges() (dgl.dglgraph method)": [[55, "dgl.DGLGraph.find_edges", false]], "find_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.find_edges", false]], "find_edges() (in module dgl.distributed)": [[231, "dgl.distributed.find_edges", false]], "flickrdataset (class in dgl.data)": [[160, "dgl.data.FlickrDataset", false]], "float() (dgl.sparse.sparsematrix method)": [[591, "dgl.sparse.SparseMatrix.float", false]], "formats() (dgl.dglgraph method)": [[56, "dgl.DGLGraph.formats", false]], "forward() (dgl.nn.pytorch.conv.agnnconv method)": [[393, "dgl.nn.pytorch.conv.AGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.appnpconv method)": [[394, "dgl.nn.pytorch.conv.APPNPConv.forward", false]], "forward() (dgl.nn.pytorch.conv.atomicconv method)": [[395, "dgl.nn.pytorch.conv.AtomicConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cfconv method)": [[396, "dgl.nn.pytorch.conv.CFConv.forward", false]], "forward() (dgl.nn.pytorch.conv.chebconv method)": [[397, "dgl.nn.pytorch.conv.ChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[398, "dgl.nn.pytorch.conv.CuGraphGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[399, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[400, "dgl.nn.pytorch.conv.CuGraphSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densechebconv method)": [[402, "dgl.nn.pytorch.conv.DenseChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densegraphconv method)": [[403, "dgl.nn.pytorch.conv.DenseGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densesageconv method)": [[404, "dgl.nn.pytorch.conv.DenseSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dgnconv method)": [[401, "dgl.nn.pytorch.conv.DGNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dotgatconv method)": [[405, "dgl.nn.pytorch.conv.DotGatConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeconv method)": [[408, "dgl.nn.pytorch.conv.EdgeConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgegatconv method)": [[409, "dgl.nn.pytorch.conv.EdgeGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeweightnorm method)": [[410, "dgl.nn.pytorch.conv.EdgeWeightNorm.forward", false]], "forward() (dgl.nn.pytorch.conv.egatconv method)": [[406, "dgl.nn.pytorch.conv.EGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.egnnconv method)": [[407, "dgl.nn.pytorch.conv.EGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatconv method)": [[411, "dgl.nn.pytorch.conv.GATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgcnconv method)": [[417, "dgl.nn.pytorch.conv.GatedGCNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[418, "dgl.nn.pytorch.conv.GatedGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatv2conv method)": [[412, "dgl.nn.pytorch.conv.GATv2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.gcn2conv method)": [[413, "dgl.nn.pytorch.conv.GCN2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.ginconv method)": [[414, "dgl.nn.pytorch.conv.GINConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gineconv method)": [[415, "dgl.nn.pytorch.conv.GINEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gmmconv method)": [[416, "dgl.nn.pytorch.conv.GMMConv.forward", false]], "forward() (dgl.nn.pytorch.conv.graphconv method)": [[419, "dgl.nn.pytorch.conv.GraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.grouprevres method)": [[420, "dgl.nn.pytorch.conv.GroupRevRes.forward", false]], "forward() (dgl.nn.pytorch.conv.hgtconv method)": [[421, "dgl.nn.pytorch.conv.HGTConv.forward", false]], "forward() (dgl.nn.pytorch.conv.nnconv method)": [[422, "dgl.nn.pytorch.conv.NNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.pnaconv method)": [[423, "dgl.nn.pytorch.conv.PNAConv.forward", false]], "forward() (dgl.nn.pytorch.conv.relgraphconv method)": [[424, "dgl.nn.pytorch.conv.RelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sageconv method)": [[425, "dgl.nn.pytorch.conv.SAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sgconv method)": [[426, "dgl.nn.pytorch.conv.SGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.tagconv method)": [[427, "dgl.nn.pytorch.conv.TAGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsconv method)": [[428, "dgl.nn.pytorch.conv.TWIRLSConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsunfoldingandattention method)": [[429, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.forward", false]], "forward() (dgl.nn.pytorch.deepwalk method)": [[387, "dgl.nn.pytorch.DeepWalk.forward", false]], "forward() (dgl.nn.pytorch.explain.gnnexplainer method)": [[430, "dgl.nn.pytorch.explain.GNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[431, "dgl.nn.pytorch.explain.HeteroGNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[432, "dgl.nn.pytorch.explain.HeteroPGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[433, "dgl.nn.pytorch.explain.HeteroSubgraphX.forward", false]], "forward() (dgl.nn.pytorch.explain.pgexplainer method)": [[434, "dgl.nn.pytorch.explain.PGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.subgraphx method)": [[435, "dgl.nn.pytorch.explain.SubgraphX.forward", false]], "forward() (dgl.nn.pytorch.factory.knngraph method)": [[436, "dgl.nn.pytorch.factory.KNNGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.radiusgraph method)": [[437, "dgl.nn.pytorch.factory.RadiusGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.segmentedknngraph method)": [[438, "dgl.nn.pytorch.factory.SegmentedKNNGraph.forward", false]], "forward() (dgl.nn.pytorch.glob.avgpooling method)": [[439, "dgl.nn.pytorch.glob.AvgPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.globalattentionpooling method)": [[440, "dgl.nn.pytorch.glob.GlobalAttentionPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.maxpooling method)": [[441, "dgl.nn.pytorch.glob.MaxPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.set2set method)": [[442, "dgl.nn.pytorch.glob.Set2Set.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerdecoder method)": [[443, "dgl.nn.pytorch.glob.SetTransformerDecoder.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerencoder method)": [[444, "dgl.nn.pytorch.glob.SetTransformerEncoder.forward", false]], "forward() (dgl.nn.pytorch.glob.sortpooling method)": [[445, "dgl.nn.pytorch.glob.SortPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.sumpooling method)": [[446, "dgl.nn.pytorch.glob.SumPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.weightandsum method)": [[447, "dgl.nn.pytorch.glob.WeightAndSum.forward", false]], "forward() (dgl.nn.pytorch.gt.biasedmha method)": [[448, "dgl.nn.pytorch.gt.BiasedMHA.forward", false]], "forward() (dgl.nn.pytorch.gt.degreeencoder method)": [[449, "dgl.nn.pytorch.gt.DegreeEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.egtlayer method)": [[450, "dgl.nn.pytorch.gt.EGTLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.graphormerlayer method)": [[451, "dgl.nn.pytorch.gt.GraphormerLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.lapposencoder method)": [[452, "dgl.nn.pytorch.gt.LapPosEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.pathencoder method)": [[453, "dgl.nn.pytorch.gt.PathEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder method)": [[454, "dgl.nn.pytorch.gt.SpatialEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder3d method)": [[455, "dgl.nn.pytorch.gt.SpatialEncoder3d.forward", false]], "forward() (dgl.nn.pytorch.heteroembedding method)": [[388, "dgl.nn.pytorch.HeteroEmbedding.forward", false]], "forward() (dgl.nn.pytorch.heterographconv method)": [[389, "dgl.nn.pytorch.HeteroGraphConv.forward", false]], "forward() (dgl.nn.pytorch.heterolinear method)": [[390, "dgl.nn.pytorch.HeteroLinear.forward", false]], "forward() (dgl.nn.pytorch.link.edgepredictor method)": [[456, "dgl.nn.pytorch.link.EdgePredictor.forward", false]], "forward() (dgl.nn.pytorch.link.transe method)": [[457, "dgl.nn.pytorch.link.TransE.forward", false]], "forward() (dgl.nn.pytorch.link.transr method)": [[458, "dgl.nn.pytorch.link.TransR.forward", false]], "forward() (dgl.nn.pytorch.metapath2vec method)": [[391, "dgl.nn.pytorch.MetaPath2Vec.forward", false]], "forward() (dgl.nn.pytorch.typedlinear method)": [[392, "dgl.nn.pytorch.TypedLinear.forward", false]], "forward() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[460, "dgl.nn.pytorch.utils.JumpingKnowledge.forward", false]], "forward() (dgl.nn.pytorch.utils.labelpropagation method)": [[461, "dgl.nn.pytorch.utils.LabelPropagation.forward", false]], "forward() (dgl.nn.pytorch.utils.sequential method)": [[462, "dgl.nn.pytorch.utils.Sequential.forward", false]], "forward() (dgl.nn.pytorch.utils.weightbasis method)": [[463, "dgl.nn.pytorch.utils.WeightBasis.forward", false]], "fraudamazondataset (class in dgl.data)": [[161, "dgl.data.FraudAmazonDataset", false]], "frauddataset (class in dgl.data)": [[162, "dgl.data.FraudDataset", false]], "fraudyelpdataset (class in dgl.data)": [[163, "dgl.data.FraudYelpDataset", false]], "from_coo() (in module dgl.sparse)": [[616, "dgl.sparse.from_coo", false]], "from_csc() (in module dgl.sparse)": [[617, "dgl.sparse.from_csc", false]], "from_csr() (in module dgl.sparse)": [[618, "dgl.sparse.from_csr", false]], "from_cugraph() (in module dgl)": [[246, "dgl.from_cugraph", false]], "from_dglgraph() (in module dgl.graphbolt)": [[327, "dgl.graphbolt.from_dglgraph", false]], "from_networkx() (in module dgl)": [[247, "dgl.from_networkx", false]], "from_scipy() (in module dgl)": [[248, "dgl.from_scipy", false]], "fused_csc_sampling_graph() (in module dgl.graphbolt)": [[328, "dgl.graphbolt.fused_csc_sampling_graph", false]], "fusedcscsamplinggraph (class in dgl.graphbolt)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph", false]], "gatconv (class in dgl.nn.mxnet.conv)": [[370, "dgl.nn.mxnet.conv.GATConv", false]], "gatconv (class in dgl.nn.pytorch.conv)": [[411, "dgl.nn.pytorch.conv.GATConv", false]], "gatconv (class in dgl.nn.tensorflow.conv)": [[466, "dgl.nn.tensorflow.conv.GATConv", false]], "gatedgcnconv (class in dgl.nn.pytorch.conv)": [[417, "dgl.nn.pytorch.conv.GatedGCNConv", false]], "gatedgraphconv (class in dgl.nn.mxnet.conv)": [[373, "dgl.nn.mxnet.conv.GatedGraphConv", false]], "gatedgraphconv (class in dgl.nn.pytorch.conv)": [[418, "dgl.nn.pytorch.conv.GatedGraphConv", false]], "gather_mm() (in module dgl.ops)": [[503, "dgl.ops.gather_mm", false]], "gatv2conv (class in dgl.nn.pytorch.conv)": [[412, "dgl.nn.pytorch.conv.GATv2Conv", false]], "gcn2conv (class in dgl.nn.pytorch.conv)": [[413, "dgl.nn.pytorch.conv.GCN2Conv", false]], "gcnnorm (class in dgl.transforms)": [[661, "dgl.transforms.GCNNorm", false]], "gdc (class in dgl.transforms)": [[662, "dgl.transforms.GDC", false]], "gdeltdataset (class in dgl.data)": [[164, "dgl.data.GDELTDataset", false]], "get_download_dir (class in dgl.data.utils)": [[202, "dgl.data.utils.get_download_dir", false]], "get_edge_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_edge_partition_policy", false]], "get_etype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_etype_id", false]], "get_node_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_node_partition_policy", false]], "get_ntype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_ntype_id", false]], "get_part_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_part_size", false]], "get_partition_book() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_partition_book", false]], "get_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_size", false]], "ginconv (class in dgl.nn.mxnet.conv)": [[371, "dgl.nn.mxnet.conv.GINConv", false]], "ginconv (class in dgl.nn.pytorch.conv)": [[414, "dgl.nn.pytorch.conv.GINConv", false]], "ginconv (class in dgl.nn.tensorflow.conv)": [[467, "dgl.nn.tensorflow.conv.GINConv", false]], "gindataset (class in dgl.data)": [[165, "dgl.data.GINDataset", false]], "gineconv (class in dgl.nn.pytorch.conv)": [[415, "dgl.nn.pytorch.conv.GINEConv", false]], "global_uniform_negative_sampling() (in module dgl.sampling)": [[563, "dgl.sampling.global_uniform_negative_sampling", false]], "globalattentionpooling (class in dgl.nn.mxnet.glob)": [[381, "dgl.nn.mxnet.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.pytorch.glob)": [[440, "dgl.nn.pytorch.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.tensorflow.glob)": [[473, "dgl.nn.tensorflow.glob.GlobalAttentionPooling", false]], "globaluniform (class in dgl.dataloading.negative_sampler)": [[224, "dgl.dataloading.negative_sampler.GlobalUniform", false]], "gmmconv (class in dgl.nn.mxnet.conv)": [[372, "dgl.nn.mxnet.conv.GMMConv", false]], "gmmconv (class in dgl.nn.pytorch.conv)": [[416, "dgl.nn.pytorch.conv.GMMConv", false]], "gnnexplainer (class in dgl.nn.pytorch.explain)": [[430, "dgl.nn.pytorch.explain.GNNExplainer", false]], "gpu_cached_feature() (in module dgl.graphbolt)": [[329, "dgl.graphbolt.gpu_cached_feature", false]], "gpucachedfeature (class in dgl.graphbolt)": [[298, "dgl.graphbolt.GPUCachedFeature", false]], "graph (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.graph", false]], "graph (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.graph", false]], "graph (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.graph", false]], "graph (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.graph", false]], "graph (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.graph", false]], "graph() (in module dgl)": [[285, "dgl.graph", false]], "graphconv (class in dgl.nn.mxnet.conv)": [[374, "dgl.nn.mxnet.conv.GraphConv", false]], "graphconv (class in dgl.nn.pytorch.conv)": [[419, "dgl.nn.pytorch.conv.GraphConv", false]], "graphconv (class in dgl.nn.tensorflow.conv)": [[468, "dgl.nn.tensorflow.conv.GraphConv", false]], "graphdataloader (class in dgl.dataloading)": [[211, "dgl.dataloading.GraphDataLoader", false]], "graphormerlayer (class in dgl.nn.pytorch.gt)": [[451, "dgl.nn.pytorch.gt.GraphormerLayer", false]], "graphpartitionbook (class in dgl.distributed)": [[4, "dgl.distributed.GraphPartitionBook", false]], "graphs (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.graphs", false]], "graphs (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.graphs", false]], "graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.graphs", false]], "grouprevres (class in dgl.nn.pytorch.conv)": [[420, "dgl.nn.pytorch.conv.GroupRevRes", false]], "gsddmm() (in module dgl.ops)": [[504, "dgl.ops.gsddmm", false]], "gspmm() (in module dgl.ops)": [[505, "dgl.ops.gspmm", false]], "has_duplicate() (dgl.sparse.sparsematrix method)": [[592, "dgl.sparse.SparseMatrix.has_duplicate", false]], "has_edges_between() (dgl.dglgraph method)": [[57, "dgl.DGLGraph.has_edges_between", false]], "has_nodes() (dgl.dglgraph method)": [[58, "dgl.DGLGraph.has_nodes", false]], "hash (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.hash", false]], "heatkernel (class in dgl.transforms)": [[663, "dgl.transforms.HeatKernel", false]], "heteroembedding (class in dgl.nn.pytorch)": [[388, "dgl.nn.pytorch.HeteroEmbedding", false]], "heterognnexplainer (class in dgl.nn.pytorch.explain)": [[431, "dgl.nn.pytorch.explain.HeteroGNNExplainer", false]], "heterograph() (in module dgl)": [[338, "dgl.heterograph", false]], "heterographconv (class in dgl.nn.mxnet)": [[362, "dgl.nn.mxnet.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.pytorch)": [[389, "dgl.nn.pytorch.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.tensorflow.glob)": [[474, "dgl.nn.tensorflow.glob.HeteroGraphConv", false]], "heteroitemset (class in dgl.graphbolt)": [[299, "dgl.graphbolt.HeteroItemSet", false]], "heterolinear (class in dgl.nn.pytorch)": [[390, "dgl.nn.pytorch.HeteroLinear", false]], "heteropgexplainer (class in dgl.nn.pytorch.explain)": [[432, "dgl.nn.pytorch.explain.HeteroPGExplainer", false]], "heterosubgraphx (class in dgl.nn.pytorch.explain)": [[433, "dgl.nn.pytorch.explain.HeteroSubgraphX", false]], "hgtconv (class in dgl.nn.pytorch.conv)": [[421, "dgl.nn.pytorch.conv.HGTConv", false]], "icews18dataset (class in dgl.data)": [[166, "dgl.data.ICEWS18Dataset", false]], "identity() (in module dgl.sparse)": [[619, "dgl.sparse.identity", false]], "idtype (dgl.dglgraph property)": [[59, "dgl.DGLGraph.idtype", false]], "idtype (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.idtype", false]], "in_degrees() (dgl.dglgraph method)": [[60, "dgl.DGLGraph.in_degrees", false]], "in_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.in_degrees", false]], "in_edges() (dgl.dglgraph method)": [[61, "dgl.DGLGraph.in_edges", false]], "in_subgraph() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.in_subgraph", false]], "in_subgraph() (in module dgl)": [[339, "dgl.in_subgraph", false]], "in_subgraph() (in module dgl.distributed)": [[232, "dgl.distributed.in_subgraph", false]], "inc() (dgl.dglgraph method)": [[62, "dgl.DGLGraph.inc", false]], "incidence_matrix() (dgl.dglgraph method)": [[63, "dgl.DGLGraph.incidence_matrix", false]], "index_select() (in module dgl.graphbolt)": [[330, "dgl.graphbolt.index_select", false]], "indexes (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.indexes", false]], "indices (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.indices", false]], "indices() (dgl.sparse.sparsematrix method)": [[593, "dgl.sparse.SparseMatrix.indices", false]], "indptr_edge_ids() (in module dgl.graphbolt)": [[331, "dgl.graphbolt.indptr_edge_ids", false]], "initialize() (in module dgl.distributed)": [[233, "dgl.distributed.initialize", false]], "input_nodes (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.input_nodes", false]], "insubgraphsampler (class in dgl.graphbolt)": [[300, "dgl.graphbolt.InSubgraphSampler", false]], "int() (dgl.dglgraph method)": [[64, "dgl.DGLGraph.int", false]], "int() (dgl.sparse.sparsematrix method)": [[594, "dgl.sparse.SparseMatrix.int", false]], "is_homogeneous (dgl.dglgraph property)": [[65, "dgl.DGLGraph.is_homogeneous", false]], "is_libxsmm_enabled() (in module dgl)": [[340, "dgl.is_libxsmm_enabled", false]], "is_multigraph (dgl.dglgraph property)": [[66, "dgl.DGLGraph.is_multigraph", false]], "is_pinned() (dgl.dglgraph method)": [[67, "dgl.DGLGraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.cpucachedfeature method)": [[288, "dgl.graphbolt.CPUCachedFeature.is_pinned", false]], "is_pinned() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.is_pinned", false]], "is_pinned() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeaturestore method)": [[318, "dgl.graphbolt.TorchBasedFeatureStore.is_pinned", false]], "is_temporal (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.is_temporal", false]], "is_temporal (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.is_temporal", false]], "is_temporal (dgl.data.icews18dataset attribute)": [[166, "dgl.data.ICEWS18Dataset.is_temporal", false]], "is_unibipartite (dgl.dglgraph property)": [[68, "dgl.DGLGraph.is_unibipartite", false]], "isin() (in module dgl.graphbolt)": [[332, "dgl.graphbolt.isin", false]], "itemsampler (class in dgl.graphbolt)": [[301, "dgl.graphbolt.ItemSampler", false]], "itemset (class in dgl.graphbolt)": [[302, "dgl.graphbolt.ItemSet", false]], "jumpingknowledge (class in dgl.nn.pytorch.utils)": [[460, "dgl.nn.pytorch.utils.JumpingKnowledge", false]], "karateclubdataset (class in dgl.data)": [[167, "dgl.data.KarateClubDataset", false]], "keys() (dgl.graphbolt.basicfeaturestore method)": [[286, "dgl.graphbolt.BasicFeatureStore.keys", false]], "keys() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.keys", false]], "khop_adj() (in module dgl)": [[341, "dgl.khop_adj", false]], "khop_graph() (in module dgl)": [[342, "dgl.khop_graph", false]], "khop_in_subgraph() (in module dgl)": [[343, "dgl.khop_in_subgraph", false]], "khop_out_subgraph() (in module dgl)": [[344, "dgl.khop_out_subgraph", false]], "khopgraph (class in dgl.transforms)": [[664, "dgl.transforms.KHopGraph", false]], "knn_graph() (in module dgl)": [[345, "dgl.knn_graph", false]], "knngraph (class in dgl.nn.pytorch.factory)": [[436, "dgl.nn.pytorch.factory.KNNGraph", false]], "labelpropagation (class in dgl.nn.pytorch.utils)": [[461, "dgl.nn.pytorch.utils.LabelPropagation", false]], "labels (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.labels", false]], "labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.labels", false]], "labels (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.labels", false]], "laborsampler (class in dgl.dataloading)": [[212, "dgl.dataloading.LaborSampler", false]], "lap_pe() (in module dgl)": [[346, "dgl.lap_pe", false]], "laplacian_lambda_max() (in module dgl)": [[347, "dgl.laplacian_lambda_max", false]], "lappe (class in dgl.transforms)": [[665, "dgl.transforms.LapPE", false]], "lapposencoder (class in dgl.nn.pytorch.gt)": [[452, "dgl.nn.pytorch.gt.LapPosEncoder", false]], "layerneighborsampler (class in dgl.graphbolt)": [[303, "dgl.graphbolt.LayerNeighborSampler", false]], "lazyfeature (class in dgl.dataloading.base)": [[219, "dgl.dataloading.base.LazyFeature", false]], "legacydataset (class in dgl.graphbolt)": [[304, "dgl.graphbolt.LegacyDataset", false]], "legacytudataset (class in dgl.data)": [[168, "dgl.data.LegacyTUDataset", false]], "lin (dgl.nn.pytorch.conv.tagconv attribute)": [[427, "dgl.nn.pytorch.conv.TAGConv.lin", false]], "line_graph() (dgl.dglgraph method)": [[69, "dgl.DGLGraph.line_graph", false]], "line_graph() (in module dgl)": [[348, "dgl.line_graph", false]], "linegraph (class in dgl.transforms)": [[666, "dgl.transforms.LineGraph", false]], "linkx_homophily() (in module dgl)": [[349, "dgl.linkx_homophily", false]], "load() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.load", false]], "load() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.load", false]], "load() (dgl.graphbolt.ondiskdataset method)": [[309, "dgl.graphbolt.OnDiskDataset.load", false]], "load_from_shared_memory() (in module dgl.graphbolt)": [[333, "dgl.graphbolt.load_from_shared_memory", false]], "load_graphs() (in module dgl)": [[350, "dgl.load_graphs", false]], "load_info (class in dgl.data.utils)": [[203, "dgl.data.utils.load_info", false]], "load_labels (class in dgl.data.utils)": [[204, "dgl.data.utils.load_labels", false]], "load_partition() (in module dgl.distributed)": [[234, "dgl.distributed.load_partition", false]], "load_partition_book() (in module dgl.distributed)": [[235, "dgl.distributed.load_partition_book", false]], "load_partition_feats() (in module dgl.distributed)": [[236, "dgl.distributed.load_partition_feats", false]], "local_partition (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.local_partition", false]], "local_scope() (dgl.dglgraph method)": [[70, "dgl.DGLGraph.local_scope", false]], "local_to_global_nid (dgl.nn.pytorch.metapath2vec attribute)": [[391, "dgl.nn.pytorch.MetaPath2Vec.local_to_global_nid", false]], "long() (dgl.dglgraph method)": [[71, "dgl.DGLGraph.long", false]], "long() (dgl.sparse.sparsematrix method)": [[595, "dgl.sparse.SparseMatrix.long", false]], "mailbox (dgl.udf.nodebatch property)": [[683, "dgl.udf.NodeBatch.mailbox", false]], "map_to_homo_eid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_eid", false]], "map_to_homo_nid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_nid", false]], "map_to_per_etype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_etype", false]], "map_to_per_ntype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_ntype", false]], "mask_nodes_by_property (class in dgl.data.utils)": [[205, "dgl.data.utils.mask_nodes_by_property", false]], "matmul() (in module dgl.sparse)": [[620, "dgl.sparse.matmul", false]], "max() (in module dgl.function)": [[261, "dgl.function.max", false]], "max_edges() (in module dgl)": [[351, "dgl.max_edges", false]], "max_nodes() (in module dgl)": [[352, "dgl.max_nodes", false]], "max_num_node (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.max_num_node", false]], "max_num_node (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.max_num_node", false]], "max_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.max_num_v", false]], "maxpooling (class in dgl.nn.mxnet.glob)": [[382, "dgl.nn.mxnet.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.pytorch.glob)": [[441, "dgl.nn.pytorch.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.tensorflow.glob)": [[475, "dgl.nn.tensorflow.glob.MaxPooling", false]], "mean() (in module dgl.function)": [[262, "dgl.function.mean", false]], "mean_edges() (in module dgl)": [[353, "dgl.mean_edges", false]], "mean_nodes() (in module dgl)": [[354, "dgl.mean_nodes", false]], "merge() (in module dgl)": [[355, "dgl.merge", false]], "metadata (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.metadata", false]], "metadata() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.metadata", false]], "metadata() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.metadata", false]], "metadata() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.metadata", false]], "metadata() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.metadata", false]], "metadata() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.metadata", false]], "metagraph() (dgl.dglgraph method)": [[72, "dgl.DGLGraph.metagraph", false]], "metapath2vec (class in dgl.nn.pytorch)": [[391, "dgl.nn.pytorch.MetaPath2Vec", false]], "metapath_reachable_graph() (in module dgl)": [[356, "dgl.metapath_reachable_graph", false]], "metis_partition() (in module dgl)": [[357, "dgl.metis_partition", false]], "metis_partition_assignment() (in module dgl)": [[358, "dgl.metis_partition_assignment", false]], "min() (in module dgl.function)": [[263, "dgl.function.min", false]], "min_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.min_num_v", false]], "minesweeperdataset (class in dgl.data)": [[171, "dgl.data.MinesweeperDataset", false]], "minibatch (class in dgl.graphbolt)": [[305, "dgl.graphbolt.MiniBatch", false]], "minibatchtransformer (class in dgl.graphbolt)": [[306, "dgl.graphbolt.MiniBatchTransformer", false]], "minigcdataset (class in dgl.data)": [[172, "dgl.data.MiniGCDataset", false]], "miss_rate (dgl.graphbolt.cpucachedfeature property)": [[288, "dgl.graphbolt.CPUCachedFeature.miss_rate", false]], "miss_rate (dgl.graphbolt.gpucachedfeature property)": [[298, "dgl.graphbolt.GPUCachedFeature.miss_rate", false]], "mnistsuperpixeldataset (class in dgl.data)": [[169, "dgl.data.MNISTSuperPixelDataset", false]], "mods (dgl.nn.pytorch.heterographconv attribute)": [[389, "dgl.nn.pytorch.HeteroGraphConv.mods", false]], "module": [[0, "module-dgl", false], [2, "module-dgl.data", false], [6, "module-dgl.geometry", false], [10, "module-dgl.optim", false], [11, "module-dgl.sampling", false], [18, "module-dgl.nn.functional", false], [19, "module-dgl.transforms", false]], "movielensdataset (class in dgl.data)": [[173, "dgl.data.MovieLensDataset", false]], "mul() (in module dgl.sparse)": [[621, "dgl.sparse.mul", false]], "multi_update_all() (dgl.dglgraph method)": [[73, "dgl.DGLGraph.multi_update_all", false]], "multilayerfullneighborsampler (class in dgl.dataloading)": [[213, "dgl.dataloading.MultiLayerFullNeighborSampler", false]], "mutagdataset (class in dgl.data)": [[170, "dgl.data.MUTAGDataset", false]], "name (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.name", false]], "name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.name", false]], "name (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.name", false]], "names (dgl.graphbolt.heteroitemset property)": [[299, "dgl.graphbolt.HeteroItemSet.names", false]], "names (dgl.graphbolt.itemset property)": [[302, "dgl.graphbolt.ItemSet.names", false]], "ndata (dgl.dglgraph property)": [[74, "dgl.DGLGraph.ndata", false]], "ndata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ndata", false]], "neg() (dgl.sparse.sparsematrix method)": [[596, "dgl.sparse.SparseMatrix.neg", false]], "negativesampler (class in dgl.graphbolt)": [[307, "dgl.graphbolt.NegativeSampler", false]], "neighbor_matching (class in dgl.geometry)": [[6, "dgl.geometry.neighbor_matching", false]], "neighborsampler (class in dgl.dataloading)": [[214, "dgl.dataloading.NeighborSampler", false]], "neighborsampler (class in dgl.graphbolt)": [[308, "dgl.graphbolt.NeighborSampler", false]], "nid2localnid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2localnid", false]], "nid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2partid", false]], "nnconv (class in dgl.nn.mxnet.conv)": [[375, "dgl.nn.mxnet.conv.NNConv", false]], "nnconv (class in dgl.nn.pytorch.conv)": [[422, "dgl.nn.pytorch.conv.NNConv", false]], "nnz (dgl.sparse.sparsematrix property)": [[597, "dgl.sparse.SparseMatrix.nnz", false]], "node2vec_random_walk() (in module dgl.sampling)": [[564, "dgl.sampling.node2vec_random_walk", false]], "node_attr_schemes() (dgl.dglgraph method)": [[75, "dgl.DGLGraph.node_attr_schemes", false]], "node_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.node_attr_schemes", false]], "node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_attribute", false]], "node_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_attributes", false]], "node_embed (dgl.nn.pytorch.deepwalk attribute)": [[387, "dgl.nn.pytorch.DeepWalk.node_embed", false]], "node_embed (dgl.nn.pytorch.metapath2vec attribute)": [[391, "dgl.nn.pytorch.MetaPath2Vec.node_embed", false]], "node_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.node_feat_size", false]], "node_features (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.node_features", false]], "node_homophily() (in module dgl)": [[478, "dgl.node_homophily", false]], "node_ids() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.node_ids", false]], "node_label_informativeness() (in module dgl)": [[479, "dgl.node_label_informativeness", false]], "node_split() (in module dgl.distributed)": [[237, "dgl.distributed.node_split", false]], "node_subgraph() (in module dgl)": [[480, "dgl.node_subgraph", false]], "node_type_offset (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_offset", false]], "node_type_subgraph() (dgl.dglgraph method)": [[76, "dgl.DGLGraph.node_type_subgraph", false]], "node_type_subgraph() (in module dgl)": [[481, "dgl.node_type_subgraph", false]], "node_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_to_id", false]], "nodecollator (class in dgl.distributed)": [[4, "dgl.distributed.NodeCollator", false]], "nodeembedding (class in dgl.nn.pytorch.sparse_emb)": [[459, "dgl.nn.pytorch.sparse_emb.NodeEmbedding", false]], "nodes (dgl.dglgraph property)": [[77, "dgl.DGLGraph.nodes", false]], "nodes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.nodes", false]], "nodes() (dgl.udf.nodebatch method)": [[684, "dgl.udf.NodeBatch.nodes", false]], "nodeshuffle (class in dgl.transforms)": [[667, "dgl.transforms.NodeShuffle", false]], "norm_by_dst() (in module dgl)": [[482, "dgl.norm_by_dst", false]], "ntypes (dgl.dglgraph property)": [[78, "dgl.DGLGraph.ntypes", false]], "ntypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ntypes", false]], "num_atom_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_atom_types", false]], "num_bond_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_bond_types", false]], "num_classes (dgl.data.actordataset attribute)": [[134, "dgl.data.ActorDataset.num_classes", false]], "num_classes (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuycomputerdataset attribute)": [[135, "dgl.data.AmazonCoBuyComputerDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuyphotodataset attribute)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.num_classes", false]], "num_classes (dgl.data.amazonratingsdataset attribute)": [[137, "dgl.data.AmazonRatingsDataset.num_classes", false]], "num_classes (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.num_classes", false]], "num_classes (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_classes", false]], "num_classes (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.num_classes", false]], "num_classes (dgl.data.ba2motifdataset attribute)": [[141, "dgl.data.BA2MotifDataset.num_classes", false]], "num_classes (dgl.data.bacommunitydataset attribute)": [[142, "dgl.data.BACommunityDataset.num_classes", false]], "num_classes (dgl.data.bashapedataset attribute)": [[143, "dgl.data.BAShapeDataset.num_classes", false]], "num_classes (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.num_classes", false]], "num_classes (dgl.data.chameleondataset attribute)": [[149, "dgl.data.ChameleonDataset.num_classes", false]], "num_classes (dgl.data.citeseergraphdataset attribute)": [[150, "dgl.data.CiteseerGraphDataset.num_classes", false]], "num_classes (dgl.data.clusterdataset attribute)": [[147, "dgl.data.CLUSTERDataset.num_classes", false]], "num_classes (dgl.data.coauthorcsdataset attribute)": [[151, "dgl.data.CoauthorCSDataset.num_classes", false]], "num_classes (dgl.data.coauthorphysicsdataset attribute)": [[152, "dgl.data.CoauthorPhysicsDataset.num_classes", false]], "num_classes (dgl.data.corafulldataset attribute)": [[153, "dgl.data.CoraFullDataset.num_classes", false]], "num_classes (dgl.data.coragraphdataset attribute)": [[154, "dgl.data.CoraGraphDataset.num_classes", false]], "num_classes (dgl.data.cornelldataset attribute)": [[155, "dgl.data.CornellDataset.num_classes", false]], "num_classes (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_classes", false]], "num_classes (dgl.data.flickrdataset attribute)": [[160, "dgl.data.FlickrDataset.num_classes", false]], "num_classes (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.num_classes", false]], "num_classes (dgl.data.gindataset attribute)": [[165, "dgl.data.GINDataset.num_classes", false]], "num_classes (dgl.data.karateclubdataset attribute)": [[167, "dgl.data.KarateClubDataset.num_classes", false]], "num_classes (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_classes", false]], "num_classes (dgl.data.minesweeperdataset attribute)": [[171, "dgl.data.MinesweeperDataset.num_classes", false]], "num_classes (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_classes", false]], "num_classes (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.num_classes", false]], "num_classes (dgl.data.patterndataset attribute)": [[174, "dgl.data.PATTERNDataset.num_classes", false]], "num_classes (dgl.data.pubmedgraphdataset attribute)": [[176, "dgl.data.PubmedGraphDataset.num_classes", false]], "num_classes (dgl.data.questionsdataset attribute)": [[180, "dgl.data.QuestionsDataset.num_classes", false]], "num_classes (dgl.data.redditdataset attribute)": [[181, "dgl.data.RedditDataset.num_classes", false]], "num_classes (dgl.data.romanempiredataset attribute)": [[182, "dgl.data.RomanEmpireDataset.num_classes", false]], "num_classes (dgl.data.squirreldataset attribute)": [[185, "dgl.data.SquirrelDataset.num_classes", false]], "num_classes (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.num_classes", false]], "num_classes (dgl.data.texasdataset attribute)": [[187, "dgl.data.TexasDataset.num_classes", false]], "num_classes (dgl.data.tolokersdataset attribute)": [[188, "dgl.data.TolokersDataset.num_classes", false]], "num_classes (dgl.data.treecycledataset attribute)": [[189, "dgl.data.TreeCycleDataset.num_classes", false]], "num_classes (dgl.data.treegriddataset attribute)": [[190, "dgl.data.TreeGridDataset.num_classes", false]], "num_classes (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_classes", false]], "num_classes (dgl.data.wikicsdataset attribute)": [[192, "dgl.data.WikiCSDataset.num_classes", false]], "num_classes (dgl.data.wisconsindataset attribute)": [[193, "dgl.data.WisconsinDataset.num_classes", false]], "num_classes (dgl.data.yelpdataset attribute)": [[194, "dgl.data.YelpDataset.num_classes", false]], "num_dst_nodes() (dgl.dglgraph method)": [[79, "dgl.DGLGraph.num_dst_nodes", false]], "num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.num_edges", false]], "num_edges (dgl.graphbolt.samplinggraph property)": [[312, "dgl.graphbolt.SamplingGraph.num_edges", false]], "num_edges() (dgl.dglgraph method)": [[80, "dgl.DGLGraph.num_edges", false]], "num_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_edges", false]], "num_graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_graphs", false]], "num_graphs (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_graphs", false]], "num_items (dgl.graphbolt.itemset property)": [[302, "dgl.graphbolt.ItemSet.num_items", false]], "num_labels (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_labels", false]], "num_labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.num_labels", false]], "num_labels (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_labels", false]], "num_labels (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_labels", false]], "num_labels (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_labels", false]], "num_labels (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_labels", false]], "num_layers() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.num_layers", false]], "num_nodes (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_nodes", false]], "num_nodes (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_nodes", false]], "num_nodes (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_nodes", false]], "num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.num_nodes", false]], "num_nodes (dgl.graphbolt.samplinggraph property)": [[312, "dgl.graphbolt.SamplingGraph.num_nodes", false]], "num_nodes() (dgl.dglgraph method)": [[81, "dgl.DGLGraph.num_nodes", false]], "num_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_nodes", false]], "num_partitions() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.num_partitions", false]], "num_rels (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_rels", false]], "num_rels (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_rels", false]], "num_rels (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_rels", false]], "num_src_nodes() (dgl.dglgraph method)": [[82, "dgl.DGLGraph.num_src_nodes", false]], "num_tasks (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_tasks", false]], "num_tasks (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_tasks", false]], "num_tasks (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_tasks", false]], "num_tasks (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_tasks", false]], "number_of_dst_nodes() (dgl.dglgraph method)": [[83, "dgl.DGLGraph.number_of_dst_nodes", false]], "number_of_edges() (dgl.dglgraph method)": [[84, "dgl.DGLGraph.number_of_edges", false]], "number_of_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_edges", false]], "number_of_nodes() (dgl.dglgraph method)": [[85, "dgl.DGLGraph.number_of_nodes", false]], "number_of_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_nodes", false]], "number_of_src_nodes() (dgl.dglgraph method)": [[86, "dgl.DGLGraph.number_of_src_nodes", false]], "numpy_save_aligned() (in module dgl.graphbolt)": [[334, "dgl.graphbolt.numpy_save_aligned", false]], "ondiskdataset (class in dgl.graphbolt)": [[309, "dgl.graphbolt.OnDiskDataset", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.original_column_node_ids", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.original_column_node_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.original_edge_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.original_edge_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.original_row_node_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.original_row_node_ids", false]], "out_degrees() (dgl.dglgraph method)": [[87, "dgl.DGLGraph.out_degrees", false]], "out_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.out_degrees", false]], "out_edges() (dgl.dglgraph method)": [[88, "dgl.DGLGraph.out_edges", false]], "out_subgraph() (in module dgl)": [[544, "dgl.out_subgraph", false]], "pack_traces() (in module dgl.sampling)": [[565, "dgl.sampling.pack_traces", false]], "part_id (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.part_id", false]], "part_policy (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.part_policy", false]], "partid (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.partid", false]], "partid2eids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2eids", false]], "partid2nids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2nids", false]], "partition_book (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.partition_book", false]], "partition_graph() (in module dgl.distributed)": [[238, "dgl.distributed.partition_graph", false]], "partition_graph_with_halo() (in module dgl)": [[545, "dgl.partition_graph_with_halo", false]], "partitionpolicy (class in dgl.distributed)": [[4, "dgl.distributed.PartitionPolicy", false]], "pathencoder (class in dgl.nn.pytorch.gt)": [[453, "dgl.nn.pytorch.gt.PathEncoder", false]], "patterndataset (class in dgl.data)": [[174, "dgl.data.PATTERNDataset", false]], "persourceuniform (class in dgl.dataloading.negative_sampler)": [[225, "dgl.dataloading.negative_sampler.PerSourceUniform", false]], "pgexplainer (class in dgl.nn.pytorch.explain)": [[434, "dgl.nn.pytorch.explain.PGExplainer", false]], "pin_memory() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.pin_memory", false]], "pin_memory() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.pin_memory", false]], "pin_memory_() (dgl.dglgraph method)": [[89, "dgl.DGLGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeaturestore method)": [[318, "dgl.graphbolt.TorchBasedFeatureStore.pin_memory_", false]], "pinsagesampler (class in dgl.sampling)": [[562, "dgl.sampling.PinSAGESampler", false]], "pnaconv (class in dgl.nn.pytorch.conv)": [[423, "dgl.nn.pytorch.conv.PNAConv", false]], "policy_str (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.policy_str", false]], "power() (in module dgl.sparse)": [[622, "dgl.sparse.power", false]], "ppidataset (class in dgl.data)": [[175, "dgl.data.PPIDataset", false]], "ppr (class in dgl.transforms)": [[668, "dgl.transforms.PPR", false]], "predecessors() (dgl.dglgraph method)": [[90, "dgl.DGLGraph.predecessors", false]], "predict_category (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.predict_category", false]], "predict_category (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.predict_category", false]], "predict_category (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.predict_category", false]], "predict_category (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.predict_category", false]], "pretrained_emb (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.pretrained_emb", false]], "prop_edges() (dgl.dglgraph method)": [[91, "dgl.DGLGraph.prop_edges", false]], "prop_edges() (in module dgl)": [[546, "dgl.prop_edges", false]], "prop_edges_dfs() (in module dgl)": [[547, "dgl.prop_edges_dfs", false]], "prop_nodes() (dgl.dglgraph method)": [[92, "dgl.DGLGraph.prop_nodes", false]], "prop_nodes() (in module dgl)": [[548, "dgl.prop_nodes", false]], "prop_nodes_bfs() (in module dgl)": [[549, "dgl.prop_nodes_bfs", false]], "prop_nodes_topo() (in module dgl)": [[550, "dgl.prop_nodes_topo", false]], "pubmedgraphdataset (class in dgl.data)": [[176, "dgl.data.PubmedGraphDataset", false]], "pull() (dgl.dglgraph method)": [[93, "dgl.DGLGraph.pull", false]], "push() (dgl.dglgraph method)": [[94, "dgl.DGLGraph.push", false]], "qm7bdataset (class in dgl.data)": [[177, "dgl.data.QM7bDataset", false]], "qm9dataset (class in dgl.data)": [[178, "dgl.data.QM9Dataset", false]], "qm9edgedataset (class in dgl.data)": [[179, "dgl.data.QM9EdgeDataset", false]], "questionsdataset (class in dgl.data)": [[180, "dgl.data.QuestionsDataset", false]], "radius_graph() (in module dgl)": [[551, "dgl.radius_graph", false]], "radiusgraph (class in dgl.nn.pytorch.factory)": [[437, "dgl.nn.pytorch.factory.RadiusGraph", false]], "rand_bipartite() (in module dgl)": [[552, "dgl.rand_bipartite", false]], "rand_graph() (in module dgl)": [[553, "dgl.rand_graph", false]], "random_walk() (in module dgl.sampling)": [[566, "dgl.sampling.random_walk", false]], "random_walk_pe() (in module dgl)": [[554, "dgl.random_walk_pe", false]], "randomwalkpe (class in dgl.transforms)": [[669, "dgl.transforms.RandomWalkPE", false]], "rank() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.rank", false]], "raw_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_dir", false]], "raw_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_path", false]], "read() (dgl.graphbolt.cpucachedfeature method)": [[288, "dgl.graphbolt.CPUCachedFeature.read", false]], "read() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.read", false]], "read() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.read", false]], "read() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.read", false]], "read() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.read", false]], "read() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.read", false]], "read_async() (dgl.graphbolt.cpucachedfeature method)": [[288, "dgl.graphbolt.CPUCachedFeature.read_async", false]], "read_async() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.read_async", false]], "read_async() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.read_async", false]], "read_async() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.read_async", false]], "read_async() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.read_async", false]], "read_async_num_stages() (dgl.graphbolt.cpucachedfeature method)": [[288, "dgl.graphbolt.CPUCachedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.read_async_num_stages", false]], "read_into_memory() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.read_into_memory", false]], "readout_edges() (in module dgl)": [[555, "dgl.readout_edges", false]], "readout_nodes() (in module dgl)": [[556, "dgl.readout_nodes", false]], "redditdataset (class in dgl.data)": [[181, "dgl.data.RedditDataset", false]], "reduce() (dgl.sparse.sparsematrix method)": [[598, "dgl.sparse.SparseMatrix.reduce", false]], "rel_emb (dgl.nn.pytorch.link.transe attribute)": [[457, "dgl.nn.pytorch.link.TransE.rel_emb", false]], "rel_emb (dgl.nn.pytorch.link.transr attribute)": [[458, "dgl.nn.pytorch.link.TransR.rel_emb", false]], "rel_project (dgl.nn.pytorch.link.transr attribute)": [[458, "dgl.nn.pytorch.link.TransR.rel_project", false]], "relgraphconv (class in dgl.nn.mxnet.conv)": [[376, "dgl.nn.mxnet.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.pytorch.conv)": [[424, "dgl.nn.pytorch.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.tensorflow.conv)": [[469, "dgl.nn.tensorflow.conv.RelGraphConv", false]], "remove_edges() (dgl.dglgraph method)": [[95, "dgl.DGLGraph.remove_edges", false]], "remove_edges() (in module dgl)": [[557, "dgl.remove_edges", false]], "remove_nodes() (dgl.dglgraph method)": [[96, "dgl.DGLGraph.remove_nodes", false]], "remove_nodes() (in module dgl)": [[558, "dgl.remove_nodes", false]], "remove_self_loop() (dgl.dglgraph method)": [[97, "dgl.DGLGraph.remove_self_loop", false]], "remove_self_loop() (in module dgl)": [[559, "dgl.remove_self_loop", false]], "removeselfloop (class in dgl.transforms)": [[670, "dgl.transforms.RemoveSelfLoop", false]], "reorder_graph() (dgl.dglgraph method)": [[98, "dgl.DGLGraph.reorder_graph", false]], "reorder_graph() (in module dgl)": [[560, "dgl.reorder_graph", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[398, "dgl.nn.pytorch.conv.CuGraphGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[399, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[400, "dgl.nn.pytorch.conv.CuGraphSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densechebconv method)": [[402, "dgl.nn.pytorch.conv.DenseChebConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densegraphconv method)": [[403, "dgl.nn.pytorch.conv.DenseGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densesageconv method)": [[404, "dgl.nn.pytorch.conv.DenseSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.edgegatconv method)": [[409, "dgl.nn.pytorch.conv.EdgeGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.egatconv method)": [[406, "dgl.nn.pytorch.conv.EGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatconv method)": [[411, "dgl.nn.pytorch.conv.GATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[418, "dgl.nn.pytorch.conv.GatedGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatv2conv method)": [[412, "dgl.nn.pytorch.conv.GATv2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gcn2conv method)": [[413, "dgl.nn.pytorch.conv.GCN2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gmmconv method)": [[416, "dgl.nn.pytorch.conv.GMMConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.graphconv method)": [[419, "dgl.nn.pytorch.conv.GraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.nnconv method)": [[422, "dgl.nn.pytorch.conv.NNConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sageconv method)": [[425, "dgl.nn.pytorch.conv.SAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sgconv method)": [[426, "dgl.nn.pytorch.conv.SGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.tagconv method)": [[427, "dgl.nn.pytorch.conv.TAGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.deepwalk method)": [[387, "dgl.nn.pytorch.DeepWalk.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.glob.set2set method)": [[442, "dgl.nn.pytorch.glob.Set2Set.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.gt.biasedmha method)": [[448, "dgl.nn.pytorch.gt.BiasedMHA.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.heteroembedding method)": [[388, "dgl.nn.pytorch.HeteroEmbedding.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.edgepredictor method)": [[456, "dgl.nn.pytorch.link.EdgePredictor.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transe method)": [[457, "dgl.nn.pytorch.link.TransE.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transr method)": [[458, "dgl.nn.pytorch.link.TransR.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.metapath2vec method)": [[391, "dgl.nn.pytorch.MetaPath2Vec.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.typedlinear method)": [[392, "dgl.nn.pytorch.TypedLinear.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[460, "dgl.nn.pytorch.utils.JumpingKnowledge.reset_parameters", false]], "reverse() (dgl.dglgraph method)": [[99, "dgl.DGLGraph.reverse", false]], "reverse() (in module dgl)": [[561, "dgl.reverse", false]], "romanempiredataset (class in dgl.data)": [[182, "dgl.data.RomanEmpireDataset", false]], "row (dgl.sparse.sparsematrix property)": [[599, "dgl.sparse.SparseMatrix.row", false]], "rowfeatnormalizer (class in dgl.transforms)": [[671, "dgl.transforms.RowFeatNormalizer", false]], "sageconv (class in dgl.nn.mxnet.conv)": [[377, "dgl.nn.mxnet.conv.SAGEConv", false]], "sageconv (class in dgl.nn.pytorch.conv)": [[425, "dgl.nn.pytorch.conv.SAGEConv", false]], "sageconv (class in dgl.nn.tensorflow.conv)": [[470, "dgl.nn.tensorflow.conv.SAGEConv", false]], "saintsampler (class in dgl.dataloading)": [[215, "dgl.dataloading.SAINTSampler", false]], "sample_etype_neighbors() (in module dgl.distributed)": [[239, "dgl.distributed.sample_etype_neighbors", false]], "sample_labors() (in module dgl.sampling)": [[567, "dgl.sampling.sample_labors", false]], "sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.sample_layer_neighbors", false]], "sample_negative_edges_uniform() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.sample_negative_edges_uniform", false]], "sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.sample_neighbors", false]], "sample_neighbors() (in module dgl.distributed)": [[240, "dgl.distributed.sample_neighbors", false]], "sample_neighbors() (in module dgl.sampling)": [[568, "dgl.sampling.sample_neighbors", false]], "sample_neighbors_biased() (in module dgl.sampling)": [[569, "dgl.sampling.sample_neighbors_biased", false]], "sample_subgraphs() (dgl.graphbolt.insubgraphsampler method)": [[300, "dgl.graphbolt.InSubgraphSampler.sample_subgraphs", false]], "sample_subgraphs() (dgl.graphbolt.subgraphsampler method)": [[313, "dgl.graphbolt.SubgraphSampler.sample_subgraphs", false]], "sampled_csc (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.sampled_csc", false]], "sampled_csc (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.sampled_csc", false]], "sampled_subgraphs (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.sampled_subgraphs", false]], "sampledsubgraph (class in dgl.graphbolt)": [[310, "dgl.graphbolt.SampledSubgraph", false]], "sampledsubgraphimpl (class in dgl.graphbolt)": [[311, "dgl.graphbolt.SampledSubgraphImpl", false]], "sampler (class in dgl.dataloading)": [[216, "dgl.dataloading.Sampler", false]], "sampling_stages() (dgl.graphbolt.subgraphsampler method)": [[313, "dgl.graphbolt.SubgraphSampler.sampling_stages", false]], "samplinggraph (class in dgl.graphbolt)": [[312, "dgl.graphbolt.SamplingGraph", false]], "save() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.save", false]], "save() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.save", false]], "save_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_dir", false]], "save_graphs() (in module dgl)": [[571, "dgl.save_graphs", false]], "save_info (class in dgl.data.utils)": [[206, "dgl.data.utils.save_info", false]], "save_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_path", false]], "sbmmixturedataset (class in dgl.data)": [[183, "dgl.data.SBMMixtureDataset", false]], "sddmm() (in module dgl.sparse)": [[623, "dgl.sparse.sddmm", false]], "seed (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.seed", false]], "seed() (in module dgl)": [[572, "dgl.seed", false]], "seed() (in module dgl.graphbolt)": [[335, "dgl.graphbolt.seed", false]], "seeds (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.seeds", false]], "segment_mm() (in module dgl.ops)": [[506, "dgl.ops.segment_mm", false]], "segment_reduce() (in module dgl.ops)": [[507, "dgl.ops.segment_reduce", false]], "segmented_knn_graph() (in module dgl)": [[573, "dgl.segmented_knn_graph", false]], "segmentedknngraph (class in dgl.nn.pytorch.factory)": [[438, "dgl.nn.pytorch.factory.SegmentedKNNGraph", false]], "select_topk() (in module dgl.sampling)": [[570, "dgl.sampling.select_topk", false]], "send_and_recv() (dgl.dglgraph method)": [[100, "dgl.DGLGraph.send_and_recv", false]], "sequential (class in dgl.nn.mxnet.utils)": [[386, "dgl.nn.mxnet.utils.Sequential", false]], "sequential (class in dgl.nn.pytorch.utils)": [[462, "dgl.nn.pytorch.utils.Sequential", false]], "set2set (class in dgl.nn.mxnet.glob)": [[383, "dgl.nn.mxnet.glob.Set2Set", false]], "set2set (class in dgl.nn.pytorch.glob)": [[442, "dgl.nn.pytorch.glob.Set2Set", false]], "set_batch_num_edges() (dgl.dglgraph method)": [[101, "dgl.DGLGraph.set_batch_num_edges", false]], "set_batch_num_nodes() (dgl.dglgraph method)": [[102, "dgl.DGLGraph.set_batch_num_nodes", false]], "set_dst_lazy_features (class in dgl.dataloading.base)": [[220, "dgl.dataloading.base.set_dst_lazy_features", false]], "set_edge_features() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.set_edge_features", false]], "set_edge_lazy_features (class in dgl.dataloading.base)": [[221, "dgl.dataloading.base.set_edge_lazy_features", false]], "set_node_features() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.set_node_features", false]], "set_node_lazy_features (class in dgl.dataloading.base)": [[222, "dgl.dataloading.base.set_node_lazy_features", false]], "set_src_lazy_features (class in dgl.dataloading.base)": [[223, "dgl.dataloading.base.set_src_lazy_features", false]], "settransformerdecoder (class in dgl.nn.pytorch.glob)": [[443, "dgl.nn.pytorch.glob.SetTransformerDecoder", false]], "settransformerencoder (class in dgl.nn.pytorch.glob)": [[444, "dgl.nn.pytorch.glob.SetTransformerEncoder", false]], "sgconv (class in dgl.nn.mxnet.conv)": [[378, "dgl.nn.mxnet.conv.SGConv", false]], "sgconv (class in dgl.nn.pytorch.conv)": [[426, "dgl.nn.pytorch.conv.SGConv", false]], "sgconv (class in dgl.nn.tensorflow.conv)": [[471, "dgl.nn.tensorflow.conv.SGConv", false]], "shadowkhopsampler (class in dgl.dataloading)": [[217, "dgl.dataloading.ShaDowKHopSampler", false]], "shape (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.shape", false]], "shape (dgl.sparse.sparsematrix property)": [[600, "dgl.sparse.SparseMatrix.shape", false]], "shared_memory() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.shared_memory", false]], "shared_tensor() (in module dgl.multiprocessing.pytorch)": [[360, "dgl.multiprocessing.pytorch.shared_tensor", false]], "shortest_dist() (in module dgl)": [[574, "dgl.shortest_dist", false]], "signdiffusion (class in dgl.transforms)": [[672, "dgl.transforms.SIGNDiffusion", false]], "size() (dgl.graphbolt.cpucachedfeature method)": [[288, "dgl.graphbolt.CPUCachedFeature.size", false]], "size() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.size", false]], "size() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.size", false]], "size() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.size", false]], "size() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.size", false]], "size() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.size", false]], "slice_batch() (in module dgl)": [[575, "dgl.slice_batch", false]], "smax() (dgl.sparse.sparsematrix method)": [[601, "dgl.sparse.SparseMatrix.smax", false]], "smean() (dgl.sparse.sparsematrix method)": [[602, "dgl.sparse.SparseMatrix.smean", false]], "smin() (dgl.sparse.sparsematrix method)": [[603, "dgl.sparse.SparseMatrix.smin", false]], "softmax() (dgl.sparse.sparsematrix method)": [[604, "dgl.sparse.SparseMatrix.softmax", false]], "softmax() (in module dgl.sparse)": [[624, "dgl.sparse.softmax", false]], "softmax_edges() (in module dgl)": [[576, "dgl.softmax_edges", false]], "softmax_nodes() (in module dgl)": [[577, "dgl.softmax_nodes", false]], "sort_csc_by_tag() (in module dgl)": [[578, "dgl.sort_csc_by_tag", false]], "sort_csr_by_tag() (in module dgl)": [[579, "dgl.sort_csr_by_tag", false]], "sortpooling (class in dgl.nn.mxnet.glob)": [[384, "dgl.nn.mxnet.glob.SortPooling", false]], "sortpooling (class in dgl.nn.pytorch.glob)": [[445, "dgl.nn.pytorch.glob.SortPooling", false]], "sortpooling (class in dgl.nn.tensorflow.glob)": [[476, "dgl.nn.tensorflow.glob.SortPooling", false]], "sp_add_v() (in module dgl.sparse)": [[625, "dgl.sparse.sp_add_v", false]], "sp_broadcast_v() (in module dgl.sparse)": [[626, "dgl.sparse.sp_broadcast_v", false]], "sp_div_v() (in module dgl.sparse)": [[627, "dgl.sparse.sp_div_v", false]], "sp_mul_v() (in module dgl.sparse)": [[628, "dgl.sparse.sp_mul_v", false]], "sp_sub_v() (in module dgl.sparse)": [[629, "dgl.sparse.sp_sub_v", false]], "sparseadagrad (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdagrad", false]], "sparseadagrad (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdagrad", false]], "sparseadam (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdam", false]], "sparseadam (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdam", false]], "sparsematrix (class in dgl.sparse)": [[12, "dgl.sparse.SparseMatrix", false]], "spatialencoder (class in dgl.nn.pytorch.gt)": [[454, "dgl.nn.pytorch.gt.SpatialEncoder", false]], "spatialencoder3d (class in dgl.nn.pytorch.gt)": [[455, "dgl.nn.pytorch.gt.SpatialEncoder3d", false]], "split_dataset (class in dgl.data.utils)": [[207, "dgl.data.utils.split_dataset", false]], "spmatrix() (in module dgl.sparse)": [[630, "dgl.sparse.spmatrix", false]], "spmm() (in module dgl.sparse)": [[631, "dgl.sparse.spmm", false]], "spspmm() (in module dgl.sparse)": [[632, "dgl.sparse.spspmm", false]], "squirreldataset (class in dgl.data)": [[185, "dgl.data.SquirrelDataset", false]], "src (dgl.udf.edgebatch property)": [[680, "dgl.udf.EdgeBatch.src", false]], "srcdata (dgl.dglgraph property)": [[103, "dgl.DGLGraph.srcdata", false]], "srcnodes (dgl.dglgraph property)": [[104, "dgl.DGLGraph.srcnodes", false]], "srctypes (dgl.dglgraph property)": [[105, "dgl.DGLGraph.srctypes", false]], "sstdataset (class in dgl.data)": [[184, "dgl.data.SSTDataset", false]], "start_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.start_time", false]], "step() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.step", false]], "step() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.step", false]], "sub() (in module dgl.sparse)": [[633, "dgl.sparse.sub", false]], "subgraph() (dgl.dglgraph method)": [[106, "dgl.DGLGraph.subgraph", false]], "subgraphsampler (class in dgl.graphbolt)": [[313, "dgl.graphbolt.SubgraphSampler", false]], "subgraphx (class in dgl.nn.pytorch.explain)": [[435, "dgl.nn.pytorch.explain.SubgraphX", false]], "subset (class in dgl.data.utils)": [[196, "dgl.data.utils.Subset", false]], "successors() (dgl.dglgraph method)": [[107, "dgl.DGLGraph.successors", false]], "sum() (dgl.sparse.sparsematrix method)": [[605, "dgl.sparse.SparseMatrix.sum", false]], "sum() (in module dgl.function)": [[264, "dgl.function.sum", false]], "sum_edges() (in module dgl)": [[635, "dgl.sum_edges", false]], "sum_nodes() (in module dgl)": [[636, "dgl.sum_nodes", false]], "sumpooling (class in dgl.nn.mxnet.glob)": [[385, "dgl.nn.mxnet.glob.SumPooling", false]], "sumpooling (class in dgl.nn.pytorch.glob)": [[446, "dgl.nn.pytorch.glob.SumPooling", false]], "sumpooling (class in dgl.nn.tensorflow.glob)": [[477, "dgl.nn.tensorflow.glob.SumPooling", false]], "svd_pe() (in module dgl)": [[637, "dgl.svd_pe", false]], "svdpe (class in dgl.transforms)": [[673, "dgl.transforms.SVDPE", false]], "t (dgl.sparse.sparsematrix property)": [[580, "dgl.sparse.SparseMatrix.T", false]], "t() (dgl.sparse.sparsematrix method)": [[606, "dgl.sparse.SparseMatrix.t", false]], "tagconv (class in dgl.nn.mxnet.conv)": [[379, "dgl.nn.mxnet.conv.TAGConv", false]], "tagconv (class in dgl.nn.pytorch.conv)": [[427, "dgl.nn.pytorch.conv.TAGConv", false]], "task (class in dgl.graphbolt)": [[314, "dgl.graphbolt.Task", false]], "tasks (dgl.graphbolt.dataset property)": [[291, "dgl.graphbolt.Dataset.tasks", false]], "tasks (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.tasks", false]], "tasks (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.tasks", false]], "temporal_sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_layer_neighbors", false]], "temporal_sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_neighbors", false]], "temporallayerneighborsampler (class in dgl.graphbolt)": [[315, "dgl.graphbolt.TemporalLayerNeighborSampler", false]], "temporalneighborsampler (class in dgl.graphbolt)": [[316, "dgl.graphbolt.TemporalNeighborSampler", false]], "test_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.test_edges", false]], "test_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.test_idx", false]], "test_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.test_idx", false]], "test_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.test_mask", false]], "test_set (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.test_set", false]], "texasdataset (class in dgl.data)": [[187, "dgl.data.TexasDataset", false]], "to() (dgl.dglgraph method)": [[108, "dgl.DGLGraph.to", false]], "to() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.to", false]], "to() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.to", false]], "to() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.to", false]], "to() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.to", false]], "to() (dgl.graphbolt.samplinggraph method)": [[312, "dgl.graphbolt.SamplingGraph.to", false]], "to() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.to", false]], "to() (dgl.graphbolt.torchbasedfeaturestore method)": [[318, "dgl.graphbolt.TorchBasedFeatureStore.to", false]], "to() (dgl.sparse.sparsematrix method)": [[607, "dgl.sparse.SparseMatrix.to", false]], "to_bidirected() (in module dgl)": [[638, "dgl.to_bidirected", false]], "to_block() (in module dgl)": [[639, "dgl.to_block", false]], "to_canonical_etype() (dgl.dglgraph method)": [[109, "dgl.DGLGraph.to_canonical_etype", false]], "to_cugraph() (dgl.dglgraph method)": [[110, "dgl.DGLGraph.to_cugraph", false]], "to_cugraph() (in module dgl)": [[640, "dgl.to_cugraph", false]], "to_dense() (dgl.sparse.sparsematrix method)": [[608, "dgl.sparse.SparseMatrix.to_dense", false]], "to_double() (in module dgl)": [[641, "dgl.to_double", false]], "to_float() (in module dgl)": [[642, "dgl.to_float", false]], "to_half() (in module dgl)": [[643, "dgl.to_half", false]], "to_heterogeneous() (in module dgl)": [[644, "dgl.to_heterogeneous", false]], "to_homogeneous() (in module dgl)": [[645, "dgl.to_homogeneous", false]], "to_local() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_local", false]], "to_networkx() (in module dgl)": [[646, "dgl.to_networkx", false]], "to_partid() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_partid", false]], "to_pyg() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.to_pyg", false]], "to_pyg_data() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.to_pyg_data", false]], "to_simple() (dgl.dglgraph method)": [[111, "dgl.DGLGraph.to_simple", false]], "to_simple() (in module dgl)": [[647, "dgl.to_simple", false]], "to_simple_graph() (in module dgl)": [[648, "dgl.to_simple_graph", false]], "tolevi (class in dgl.transforms)": [[674, "dgl.transforms.ToLevi", false]], "tolokersdataset (class in dgl.data)": [[188, "dgl.data.TolokersDataset", false]], "topk_edges() (in module dgl)": [[649, "dgl.topk_edges", false]], "topk_nodes() (in module dgl)": [[650, "dgl.topk_nodes", false]], "topological_nodes_generator() (in module dgl)": [[651, "dgl.topological_nodes_generator", false]], "torchbasedfeature (class in dgl.graphbolt)": [[317, "dgl.graphbolt.TorchBasedFeature", false]], "torchbasedfeaturestore (class in dgl.graphbolt)": [[318, "dgl.graphbolt.TorchBasedFeatureStore", false]], "tosimple (class in dgl.transforms)": [[675, "dgl.transforms.ToSimple", false]], "total_num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_edges", false]], "total_num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_nodes", false]], "train_graph (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.train_graph", false]], "train_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.train_idx", false]], "train_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.train_idx", false]], "train_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.train_mask", false]], "train_set (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.train_set", false]], "train_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.train_size", false]], "train_step() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[432, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step", false]], "train_step() (dgl.nn.pytorch.explain.pgexplainer method)": [[434, "dgl.nn.pytorch.explain.PGExplainer.train_step", false]], "train_step_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[432, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step_node", false]], "train_step_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[434, "dgl.nn.pytorch.explain.PGExplainer.train_step_node", false]], "transe (class in dgl.nn.pytorch.link)": [[457, "dgl.nn.pytorch.link.TransE", false]], "transpose() (dgl.sparse.sparsematrix method)": [[609, "dgl.sparse.SparseMatrix.transpose", false]], "transr (class in dgl.nn.pytorch.link)": [[458, "dgl.nn.pytorch.link.TransR", false]], "treecycledataset (class in dgl.data)": [[189, "dgl.data.TreeCycleDataset", false]], "treegriddataset (class in dgl.data)": [[190, "dgl.data.TreeGridDataset", false]], "tudataset (class in dgl.data)": [[186, "dgl.data.TUDataset", false]], "twirlsconv (class in dgl.nn.pytorch.conv)": [[428, "dgl.nn.pytorch.conv.TWIRLSConv", false]], "twirlsunfoldingandattention (class in dgl.nn.pytorch.conv)": [[429, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", false]], "type_per_edge (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.type_per_edge", false]], "typedlinear (class in dgl.nn.pytorch)": [[392, "dgl.nn.pytorch.TypedLinear", false]], "u_add_e() (in module dgl.function)": [[265, "dgl.function.u_add_e", false]], "u_add_e() (in module dgl.ops)": [[508, "dgl.ops.u_add_e", false]], "u_add_e_max() (in module dgl.ops)": [[509, "dgl.ops.u_add_e_max", false]], "u_add_e_mean() (in module dgl.ops)": [[510, "dgl.ops.u_add_e_mean", false]], "u_add_e_min() (in module dgl.ops)": [[511, "dgl.ops.u_add_e_min", false]], "u_add_e_sum() (in module dgl.ops)": [[512, "dgl.ops.u_add_e_sum", false]], "u_add_v() (in module dgl.function)": [[266, "dgl.function.u_add_v", false]], "u_add_v() (in module dgl.ops)": [[513, "dgl.ops.u_add_v", false]], "u_div_e() (in module dgl.function)": [[267, "dgl.function.u_div_e", false]], "u_div_e() (in module dgl.ops)": [[514, "dgl.ops.u_div_e", false]], "u_div_e_max() (in module dgl.ops)": [[515, "dgl.ops.u_div_e_max", false]], "u_div_e_mean() (in module dgl.ops)": [[516, "dgl.ops.u_div_e_mean", false]], "u_div_e_min() (in module dgl.ops)": [[517, "dgl.ops.u_div_e_min", false]], "u_div_e_sum() (in module dgl.ops)": [[518, "dgl.ops.u_div_e_sum", false]], "u_div_v() (in module dgl.function)": [[268, "dgl.function.u_div_v", false]], "u_div_v() (in module dgl.ops)": [[519, "dgl.ops.u_div_v", false]], "u_dot_e() (in module dgl.function)": [[269, "dgl.function.u_dot_e", false]], "u_dot_e() (in module dgl.ops)": [[520, "dgl.ops.u_dot_e", false]], "u_dot_v() (in module dgl.function)": [[270, "dgl.function.u_dot_v", false]], "u_dot_v() (in module dgl.ops)": [[521, "dgl.ops.u_dot_v", false]], "u_mul_e() (in module dgl.function)": [[271, "dgl.function.u_mul_e", false]], "u_mul_e() (in module dgl.ops)": [[522, "dgl.ops.u_mul_e", false]], "u_mul_e_max() (in module dgl.ops)": [[523, "dgl.ops.u_mul_e_max", false]], "u_mul_e_mean() (in module dgl.ops)": [[524, "dgl.ops.u_mul_e_mean", false]], "u_mul_e_min() (in module dgl.ops)": [[525, "dgl.ops.u_mul_e_min", false]], "u_mul_e_sum() (in module dgl.ops)": [[526, "dgl.ops.u_mul_e_sum", false]], "u_mul_v() (in module dgl.function)": [[272, "dgl.function.u_mul_v", false]], "u_mul_v() (in module dgl.ops)": [[527, "dgl.ops.u_mul_v", false]], "u_sub_e() (in module dgl.function)": [[273, "dgl.function.u_sub_e", false]], "u_sub_e() (in module dgl.ops)": [[528, "dgl.ops.u_sub_e", false]], "u_sub_e_max() (in module dgl.ops)": [[529, "dgl.ops.u_sub_e_max", false]], "u_sub_e_mean() (in module dgl.ops)": [[530, "dgl.ops.u_sub_e_mean", false]], "u_sub_e_min() (in module dgl.ops)": [[531, "dgl.ops.u_sub_e_min", false]], "u_sub_e_sum() (in module dgl.ops)": [[532, "dgl.ops.u_sub_e_sum", false]], "u_sub_v() (in module dgl.function)": [[274, "dgl.function.u_sub_v", false]], "u_sub_v() (in module dgl.ops)": [[533, "dgl.ops.u_sub_v", false]], "unbatch() (in module dgl)": [[685, "dgl.unbatch", false]], "uniform (in module dgl.dataloading.negative_sampler)": [[226, "dgl.dataloading.negative_sampler.Uniform", false]], "uniformnegativesampler (class in dgl.graphbolt)": [[319, "dgl.graphbolt.UniformNegativeSampler", false]], "unique_and_compact() (in module dgl.graphbolt)": [[336, "dgl.graphbolt.unique_and_compact", false]], "unique_and_compact_csc_formats() (in module dgl.graphbolt)": [[337, "dgl.graphbolt.unique_and_compact_csc_formats", false]], "unpin_memory_() (dgl.dglgraph method)": [[112, "dgl.DGLGraph.unpin_memory_", false]], "update() (dgl.graphbolt.cpucachedfeature method)": [[288, "dgl.graphbolt.CPUCachedFeature.update", false]], "update() (dgl.graphbolt.diskbasedfeature method)": [[292, "dgl.graphbolt.DiskBasedFeature.update", false]], "update() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.update", false]], "update() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.update", false]], "update() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.update", false]], "update() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.update", false]], "update_all() (dgl.dglgraph method)": [[113, "dgl.DGLGraph.update_all", false]], "url (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.url", false]], "use_libxsmm() (in module dgl)": [[686, "dgl.use_libxsmm", false]], "v_add_e() (in module dgl.function)": [[275, "dgl.function.v_add_e", false]], "v_add_e() (in module dgl.ops)": [[534, "dgl.ops.v_add_e", false]], "v_add_u() (in module dgl.function)": [[276, "dgl.function.v_add_u", false]], "v_add_u() (in module dgl.ops)": [[535, "dgl.ops.v_add_u", false]], "v_div_e() (in module dgl.function)": [[277, "dgl.function.v_div_e", false]], "v_div_e() (in module dgl.ops)": [[536, "dgl.ops.v_div_e", false]], "v_div_u() (in module dgl.function)": [[278, "dgl.function.v_div_u", false]], "v_div_u() (in module dgl.ops)": [[537, "dgl.ops.v_div_u", false]], "v_dot_e() (in module dgl.function)": [[279, "dgl.function.v_dot_e", false]], "v_dot_e() (in module dgl.ops)": [[538, "dgl.ops.v_dot_e", false]], "v_dot_u() (in module dgl.function)": [[280, "dgl.function.v_dot_u", false]], "v_dot_u() (in module dgl.ops)": [[539, "dgl.ops.v_dot_u", false]], "v_mul_e() (in module dgl.function)": [[281, "dgl.function.v_mul_e", false]], "v_mul_e() (in module dgl.ops)": [[540, "dgl.ops.v_mul_e", false]], "v_mul_u() (in module dgl.function)": [[282, "dgl.function.v_mul_u", false]], "v_mul_u() (in module dgl.ops)": [[541, "dgl.ops.v_mul_u", false]], "v_sub_e() (in module dgl.function)": [[283, "dgl.function.v_sub_e", false]], "v_sub_e() (in module dgl.ops)": [[542, "dgl.ops.v_sub_e", false]], "v_sub_u() (in module dgl.function)": [[284, "dgl.function.v_sub_u", false]], "v_sub_u() (in module dgl.ops)": [[543, "dgl.ops.v_sub_u", false]], "val (dgl.sparse.sparsematrix property)": [[610, "dgl.sparse.SparseMatrix.val", false]], "val_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.val_edges", false]], "val_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.val_idx", false]], "val_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.val_idx", false]], "val_like() (in module dgl.sparse)": [[634, "dgl.sparse.val_like", false]], "val_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.val_mask", false]], "val_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.val_size", false]], "validation_set (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.validation_set", false]], "verbose (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.verbose", false]], "vocab (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab", false]], "vocab_size (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab_size", false]], "weight (dgl.nn.pytorch.conv.graphconv attribute)": [[419, "dgl.nn.pytorch.conv.GraphConv.weight", false]], "weightandsum (class in dgl.nn.pytorch.glob)": [[447, "dgl.nn.pytorch.glob.WeightAndSum", false]], "weightbasis (class in dgl.nn.pytorch.utils)": [[463, "dgl.nn.pytorch.utils.WeightBasis", false]], "wikicsdataset (class in dgl.data)": [[192, "dgl.data.WikiCSDataset", false]], "wisconsindataset (class in dgl.data)": [[193, "dgl.data.WisconsinDataset", false]], "wn18dataset (class in dgl.data)": [[191, "dgl.data.WN18Dataset", false]], "yaml_data (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.yaml_data", false]], "yelpdataset (class in dgl.data)": [[194, "dgl.data.YelpDataset", false]], "zincdataset (class in dgl.data)": [[195, "dgl.data.ZINCDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "dgl"]], "dgl": [[1, 1, 1, "", "DGLGraph"], [114, 4, 1, "", "add_edges"], [115, 4, 1, "", "add_nodes"], [116, 4, 1, "", "add_reverse_edges"], [117, 4, 1, "", "add_self_loop"], [118, 4, 1, "", "adj_product_graph"], [119, 4, 1, "", "adj_sum_graph"], [120, 4, 1, "", "adjusted_homophily"], [121, 4, 1, "", "apply_each"], [122, 4, 1, "", "batch"], [123, 4, 1, "", "bfs_edges_generator"], [124, 4, 1, "", "bfs_nodes_generator"], [125, 4, 1, "", "bipartite_from_networkx"], [126, 4, 1, "", "bipartite_from_scipy"], [127, 4, 1, "", "block_to_graph"], [128, 4, 1, "", "broadcast_edges"], [129, 4, 1, "", "broadcast_nodes"], [130, 4, 1, "", "compact_graphs"], [131, 4, 1, "", "create_block"], [2, 0, 0, "-", "data"], [227, 4, 1, "", "dfs_edges_generator"], [228, 4, 1, "", "dfs_labeled_edges_generator"], [241, 4, 1, "", "double_radius_node_labeling"], [242, 4, 1, "", "edge_homophily"], [243, 4, 1, "", "edge_label_informativeness"], [244, 4, 1, "", "edge_subgraph"], [245, 4, 1, "", "edge_type_subgraph"], [246, 4, 1, "", "from_cugraph"], [247, 4, 1, "", "from_networkx"], [248, 4, 1, "", "from_scipy"], [6, 0, 0, "-", "geometry"], [285, 4, 1, "", "graph"], [338, 4, 1, "", "heterograph"], [339, 4, 1, "", "in_subgraph"], [340, 4, 1, "", "is_libxsmm_enabled"], [341, 4, 1, "", "khop_adj"], [342, 4, 1, "", "khop_graph"], [343, 4, 1, "", "khop_in_subgraph"], [344, 4, 1, "", "khop_out_subgraph"], [345, 4, 1, "", "knn_graph"], [346, 4, 1, "", "lap_pe"], [347, 4, 1, "", "laplacian_lambda_max"], [348, 4, 1, "", "line_graph"], [349, 4, 1, "", "linkx_homophily"], [350, 4, 1, "", "load_graphs"], [351, 4, 1, "", "max_edges"], [352, 4, 1, "", "max_nodes"], [353, 4, 1, "", "mean_edges"], [354, 4, 1, "", "mean_nodes"], [355, 4, 1, "", "merge"], [356, 4, 1, "", "metapath_reachable_graph"], [357, 4, 1, "", "metis_partition"], [358, 4, 1, "", "metis_partition_assignment"], [478, 4, 1, "", "node_homophily"], [479, 4, 1, "", "node_label_informativeness"], [480, 4, 1, "", "node_subgraph"], [481, 4, 1, "", "node_type_subgraph"], [482, 4, 1, "", "norm_by_dst"], [10, 0, 0, "-", "optim"], [544, 4, 1, "", "out_subgraph"], [545, 4, 1, "", "partition_graph_with_halo"], [546, 4, 1, "", "prop_edges"], [547, 4, 1, "", "prop_edges_dfs"], [548, 4, 1, "", "prop_nodes"], [549, 4, 1, "", "prop_nodes_bfs"], [550, 4, 1, "", "prop_nodes_topo"], [551, 4, 1, "", "radius_graph"], [552, 4, 1, "", "rand_bipartite"], [553, 4, 1, "", "rand_graph"], [554, 4, 1, "", "random_walk_pe"], [555, 4, 1, "", "readout_edges"], [556, 4, 1, "", "readout_nodes"], [557, 4, 1, "", "remove_edges"], [558, 4, 1, "", "remove_nodes"], [559, 4, 1, "", "remove_self_loop"], [560, 4, 1, "", "reorder_graph"], [561, 4, 1, "", "reverse"], [11, 0, 0, "-", "sampling"], [571, 4, 1, "", "save_graphs"], [572, 4, 1, "", "seed"], [573, 4, 1, "", "segmented_knn_graph"], [574, 4, 1, "", "shortest_dist"], [575, 4, 1, "", "slice_batch"], [576, 4, 1, "", "softmax_edges"], [577, 4, 1, "", "softmax_nodes"], [578, 4, 1, "", "sort_csc_by_tag"], [579, 4, 1, "", "sort_csr_by_tag"], [635, 4, 1, "", "sum_edges"], [636, 4, 1, "", "sum_nodes"], [637, 4, 1, "", "svd_pe"], [638, 4, 1, "", "to_bidirected"], [639, 4, 1, "", "to_block"], [640, 4, 1, "", "to_cugraph"], [641, 4, 1, "", "to_double"], [642, 4, 1, "", "to_float"], [643, 4, 1, "", "to_half"], [644, 4, 1, "", "to_heterogeneous"], [645, 4, 1, "", "to_homogeneous"], [646, 4, 1, "", "to_networkx"], [647, 4, 1, "", "to_simple"], [648, 4, 1, "", "to_simple_graph"], [649, 4, 1, "", "topk_edges"], [650, 4, 1, "", "topk_nodes"], [651, 4, 1, "", "topological_nodes_generator"], [19, 0, 0, "-", "transforms"], [685, 4, 1, "", "unbatch"], [686, 4, 1, "", "use_libxsmm"]], "dgl.DGLGraph": [[26, 2, 1, "", "__getitem__"], [27, 2, 1, "", "add_edges"], [28, 2, 1, "", "add_nodes"], [29, 2, 1, "", "add_self_loop"], [30, 2, 1, "", "adj"], [31, 2, 1, "", "adj_external"], [32, 2, 1, "", "adj_tensors"], [33, 2, 1, "", "adjacency_matrix"], [34, 2, 1, "", "apply_edges"], [35, 2, 1, "", "apply_nodes"], [36, 2, 1, "", "batch_num_edges"], [37, 2, 1, "", "batch_num_nodes"], [38, 3, 1, "", "batch_size"], [39, 3, 1, "", "canonical_etypes"], [40, 2, 1, "", "cpu"], [41, 2, 1, "", "create_formats_"], [42, 3, 1, "", "device"], [43, 3, 1, "", "dstdata"], [44, 3, 1, "", "dstnodes"], [45, 3, 1, "", "dsttypes"], [46, 3, 1, "", "edata"], [47, 2, 1, "", "edge_attr_schemes"], [48, 2, 1, "", "edge_ids"], [49, 2, 1, "", "edge_subgraph"], [50, 2, 1, "", "edge_type_subgraph"], [51, 3, 1, "", "edges"], [52, 3, 1, "", "etypes"], [53, 2, 1, "", "filter_edges"], [54, 2, 1, "", "filter_nodes"], [55, 2, 1, "", "find_edges"], [56, 2, 1, "", "formats"], [57, 2, 1, "", "has_edges_between"], [58, 2, 1, "", "has_nodes"], [59, 3, 1, "", "idtype"], [60, 2, 1, "", "in_degrees"], [61, 2, 1, "", "in_edges"], [62, 2, 1, "", "inc"], [63, 2, 1, "", "incidence_matrix"], [64, 2, 1, "", "int"], [65, 3, 1, "", "is_homogeneous"], [66, 3, 1, "", "is_multigraph"], [67, 2, 1, "", "is_pinned"], [68, 3, 1, "", "is_unibipartite"], [69, 2, 1, "", "line_graph"], [70, 2, 1, "", "local_scope"], [71, 2, 1, "", "long"], [72, 2, 1, "", "metagraph"], [73, 2, 1, "", "multi_update_all"], [74, 3, 1, "", "ndata"], [75, 2, 1, "", "node_attr_schemes"], [76, 2, 1, "", "node_type_subgraph"], [77, 3, 1, "", "nodes"], [78, 3, 1, "", "ntypes"], [79, 2, 1, "", "num_dst_nodes"], [80, 2, 1, "", "num_edges"], [81, 2, 1, "", "num_nodes"], [82, 2, 1, "", "num_src_nodes"], [83, 2, 1, "", "number_of_dst_nodes"], [84, 2, 1, "", "number_of_edges"], [85, 2, 1, "", "number_of_nodes"], [86, 2, 1, "", "number_of_src_nodes"], [87, 2, 1, "", "out_degrees"], [88, 2, 1, "", "out_edges"], [89, 2, 1, "", "pin_memory_"], [90, 2, 1, "", "predecessors"], [91, 2, 1, "", "prop_edges"], [92, 2, 1, "", "prop_nodes"], [93, 2, 1, "", "pull"], [94, 2, 1, "", "push"], [95, 2, 1, "", "remove_edges"], [96, 2, 1, "", "remove_nodes"], [97, 2, 1, "", "remove_self_loop"], [98, 2, 1, "", "reorder_graph"], [99, 2, 1, "", "reverse"], [100, 2, 1, "", "send_and_recv"], [101, 2, 1, "", "set_batch_num_edges"], [102, 2, 1, "", "set_batch_num_nodes"], [103, 3, 1, "", "srcdata"], [104, 3, 1, "", "srcnodes"], [105, 3, 1, "", "srctypes"], [106, 2, 1, "", "subgraph"], [107, 2, 1, "", "successors"], [108, 2, 1, "", "to"], [109, 2, 1, "", "to_canonical_etype"], [110, 2, 1, "", "to_cugraph"], [111, 2, 1, "", "to_simple"], [112, 2, 1, "", "unpin_memory_"], [113, 2, 1, "", "update_all"]], "dgl.data": [[132, 1, 1, "", "AIFBDataset"], [133, 1, 1, "", "AMDataset"], [134, 1, 1, "", "ActorDataset"], [135, 1, 1, "", "AmazonCoBuyComputerDataset"], [136, 1, 1, "", "AmazonCoBuyPhotoDataset"], [137, 1, 1, "", "AmazonRatingsDataset"], [138, 1, 1, "", "AsGraphPredDataset"], [139, 1, 1, "", "AsLinkPredDataset"], [140, 1, 1, "", "AsNodePredDataset"], [141, 1, 1, "", "BA2MotifDataset"], [142, 1, 1, "", "BACommunityDataset"], [143, 1, 1, "", "BAShapeDataset"], [144, 1, 1, "", "BGSDataset"], [145, 1, 1, "", "BitcoinOTCDataset"], [146, 1, 1, "", "CIFAR10SuperPixelDataset"], [147, 1, 1, "", "CLUSTERDataset"], [148, 1, 1, "", "CSVDataset"], [149, 1, 1, "", "ChameleonDataset"], [150, 1, 1, "", "CiteseerGraphDataset"], [151, 1, 1, "", "CoauthorCSDataset"], [152, 1, 1, "", "CoauthorPhysicsDataset"], [153, 1, 1, "", "CoraFullDataset"], [154, 1, 1, "", "CoraGraphDataset"], [155, 1, 1, "", "CornellDataset"], [156, 1, 1, "", "DGLDataset"], [157, 1, 1, "", "FB15k237Dataset"], [158, 1, 1, "", "FB15kDataset"], [159, 1, 1, "", "FakeNewsDataset"], [160, 1, 1, "", "FlickrDataset"], [161, 1, 1, "", "FraudAmazonDataset"], [162, 1, 1, "", "FraudDataset"], [163, 1, 1, "", "FraudYelpDataset"], [164, 1, 1, "", "GDELTDataset"], [165, 1, 1, "", "GINDataset"], [166, 1, 1, "", "ICEWS18Dataset"], [167, 1, 1, "", "KarateClubDataset"], [168, 1, 1, "", "LegacyTUDataset"], [169, 1, 1, "", "MNISTSuperPixelDataset"], [170, 1, 1, "", "MUTAGDataset"], [171, 1, 1, "", "MinesweeperDataset"], [172, 1, 1, "", "MiniGCDataset"], [173, 1, 1, "", "MovieLensDataset"], [174, 1, 1, "", "PATTERNDataset"], [175, 1, 1, "", "PPIDataset"], [176, 1, 1, "", "PubmedGraphDataset"], [177, 1, 1, "", "QM7bDataset"], [178, 1, 1, "", "QM9Dataset"], [179, 1, 1, "", "QM9EdgeDataset"], [180, 1, 1, "", "QuestionsDataset"], [181, 1, 1, "", "RedditDataset"], [182, 1, 1, "", "RomanEmpireDataset"], [183, 1, 1, "", "SBMMixtureDataset"], [184, 1, 1, "", "SSTDataset"], [185, 1, 1, "", "SquirrelDataset"], [186, 1, 1, "", "TUDataset"], [187, 1, 1, "", "TexasDataset"], [188, 1, 1, "", "TolokersDataset"], [189, 1, 1, "", "TreeCycleDataset"], [190, 1, 1, "", "TreeGridDataset"], [191, 1, 1, "", "WN18Dataset"], [192, 1, 1, "", "WikiCSDataset"], [193, 1, 1, "", "WisconsinDataset"], [194, 1, 1, "", "YelpDataset"], [195, 1, 1, "", "ZINCDataset"]], "dgl.data.AIFBDataset": [[132, 2, 1, "", "__getitem__"], [132, 2, 1, "", "__len__"], [132, 5, 1, "", "num_classes"], [132, 5, 1, "", "predict_category"]], "dgl.data.AMDataset": [[133, 2, 1, "", "__getitem__"], [133, 2, 1, "", "__len__"], [133, 5, 1, "", "num_classes"], [133, 5, 1, "", "predict_category"]], "dgl.data.ActorDataset": [[134, 2, 1, "", "__getitem__"], [134, 2, 1, "", "__len__"], [134, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyComputerDataset": [[135, 2, 1, "", "__getitem__"], [135, 2, 1, "", "__len__"], [135, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyPhotoDataset": [[136, 2, 1, "", "__getitem__"], [136, 2, 1, "", "__len__"], [136, 5, 1, "", "num_classes"]], "dgl.data.AmazonRatingsDataset": [[137, 2, 1, "", "__getitem__"], [137, 2, 1, "", "__len__"], [137, 5, 1, "", "num_classes"]], "dgl.data.AsGraphPredDataset": [[138, 2, 1, "", "__getitem__"], [138, 2, 1, "", "__len__"], [138, 5, 1, "", "edge_feat_size"], [138, 5, 1, "", "node_feat_size"], [138, 5, 1, "", "num_classes"], [138, 5, 1, "", "num_tasks"], [138, 5, 1, "", "test_idx"], [138, 5, 1, "", "train_idx"], [138, 5, 1, "", "val_idx"]], "dgl.data.AsLinkPredDataset": [[139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__len__"], [139, 5, 1, "", "feat_size"], [139, 5, 1, "", "test_edges"], [139, 5, 1, "", "train_graph"], [139, 5, 1, "", "val_edges"]], "dgl.data.AsNodePredDataset": [[140, 2, 1, "", "__getitem__"], [140, 2, 1, "", "__len__"], [140, 5, 1, "", "num_classes"], [140, 5, 1, "", "test_idx"], [140, 5, 1, "", "train_idx"], [140, 5, 1, "", "val_idx"]], "dgl.data.BA2MotifDataset": [[141, 2, 1, "", "__getitem__"], [141, 2, 1, "", "__len__"], [141, 5, 1, "", "num_classes"]], "dgl.data.BACommunityDataset": [[142, 2, 1, "", "__getitem__"], [142, 2, 1, "", "__len__"], [142, 5, 1, "", "num_classes"]], "dgl.data.BAShapeDataset": [[143, 2, 1, "", "__getitem__"], [143, 2, 1, "", "__len__"], [143, 5, 1, "", "num_classes"]], "dgl.data.BGSDataset": [[144, 2, 1, "", "__getitem__"], [144, 2, 1, "", "__len__"], [144, 5, 1, "", "num_classes"], [144, 5, 1, "", "predict_category"]], "dgl.data.BitcoinOTCDataset": [[145, 2, 1, "", "__getitem__"], [145, 2, 1, "", "__len__"], [145, 5, 1, "", "graphs"], [145, 5, 1, "", "is_temporal"]], "dgl.data.CIFAR10SuperPixelDataset": [[146, 2, 1, "", "__getitem__"], [146, 2, 1, "", "__len__"]], "dgl.data.CLUSTERDataset": [[147, 2, 1, "", "__getitem__"], [147, 2, 1, "", "__len__"], [147, 5, 1, "", "num_classes"]], "dgl.data.CSVDataset": [[148, 2, 1, "", "__getitem__"], [148, 2, 1, "", "__len__"], [148, 5, 1, "", "data"], [148, 5, 1, "", "graphs"]], "dgl.data.ChameleonDataset": [[149, 2, 1, "", "__getitem__"], [149, 2, 1, "", "__len__"], [149, 5, 1, "", "num_classes"]], "dgl.data.CiteseerGraphDataset": [[150, 2, 1, "", "__getitem__"], [150, 2, 1, "", "__len__"], [150, 5, 1, "", "num_classes"]], "dgl.data.CoauthorCSDataset": [[151, 2, 1, "", "__getitem__"], [151, 2, 1, "", "__len__"], [151, 5, 1, "", "num_classes"]], "dgl.data.CoauthorPhysicsDataset": [[152, 2, 1, "", "__getitem__"], [152, 2, 1, "", "__len__"], [152, 5, 1, "", "num_classes"]], "dgl.data.CoraFullDataset": [[153, 2, 1, "", "__getitem__"], [153, 2, 1, "", "__len__"], [153, 5, 1, "", "num_classes"]], "dgl.data.CoraGraphDataset": [[154, 2, 1, "", "__getitem__"], [154, 2, 1, "", "__len__"], [154, 5, 1, "", "num_classes"]], "dgl.data.CornellDataset": [[155, 2, 1, "", "__getitem__"], [155, 2, 1, "", "__len__"], [155, 5, 1, "", "num_classes"]], "dgl.data.DGLDataset": [[156, 2, 1, "", "__getitem__"], [156, 2, 1, "", "__len__"], [156, 5, 1, "", "hash"], [156, 5, 1, "", "name"], [156, 5, 1, "", "raw_dir"], [156, 5, 1, "", "raw_path"], [156, 5, 1, "", "save_dir"], [156, 5, 1, "", "save_path"], [156, 5, 1, "", "url"], [156, 5, 1, "", "verbose"]], "dgl.data.FB15k237Dataset": [[157, 2, 1, "", "__getitem__"], [157, 2, 1, "", "__len__"], [157, 5, 1, "", "num_nodes"], [157, 5, 1, "", "num_rels"]], "dgl.data.FB15kDataset": [[158, 2, 1, "", "__getitem__"], [158, 2, 1, "", "__len__"], [158, 5, 1, "", "num_nodes"], [158, 5, 1, "", "num_rels"]], "dgl.data.FakeNewsDataset": [[159, 2, 1, "", "__getitem__"], [159, 2, 1, "", "__len__"], [159, 5, 1, "", "feature"], [159, 5, 1, "", "feature_name"], [159, 5, 1, "", "graphs"], [159, 5, 1, "", "labels"], [159, 5, 1, "", "name"], [159, 5, 1, "", "num_classes"], [159, 5, 1, "", "num_graphs"], [159, 5, 1, "", "test_mask"], [159, 5, 1, "", "train_mask"], [159, 5, 1, "", "val_mask"]], "dgl.data.FlickrDataset": [[160, 2, 1, "", "__getitem__"], [160, 2, 1, "", "__len__"], [160, 5, 1, "", "num_classes"]], "dgl.data.FraudAmazonDataset": [[161, 2, 1, "", "__getitem__"], [161, 2, 1, "", "__len__"]], "dgl.data.FraudDataset": [[162, 2, 1, "", "__getitem__"], [162, 2, 1, "", "__len__"], [162, 5, 1, "", "graph"], [162, 5, 1, "", "num_classes"], [162, 5, 1, "", "seed"], [162, 5, 1, "", "train_size"], [162, 5, 1, "", "val_size"]], "dgl.data.FraudYelpDataset": [[163, 2, 1, "", "__getitem__"], [163, 2, 1, "", "__len__"]], "dgl.data.GDELTDataset": [[164, 2, 1, "", "__getitem__"], [164, 2, 1, "", "__len__"], [164, 5, 1, "", "end_time"], [164, 5, 1, "", "is_temporal"], [164, 5, 1, "", "start_time"]], "dgl.data.GINDataset": [[165, 2, 1, "", "__getitem__"], [165, 2, 1, "", "__len__"], [165, 5, 1, "", "num_classes"]], "dgl.data.ICEWS18Dataset": [[166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__len__"], [166, 5, 1, "", "is_temporal"]], "dgl.data.KarateClubDataset": [[167, 2, 1, "", "__getitem__"], [167, 2, 1, "", "__len__"], [167, 5, 1, "", "num_classes"]], "dgl.data.LegacyTUDataset": [[168, 2, 1, "", "__getitem__"], [168, 2, 1, "", "__len__"], [168, 5, 1, "", "max_num_node"], [168, 5, 1, "", "num_classes"], [168, 5, 1, "", "num_labels"]], "dgl.data.MNISTSuperPixelDataset": [[169, 2, 1, "", "__getitem__"], [169, 2, 1, "", "__len__"]], "dgl.data.MUTAGDataset": [[170, 2, 1, "", "__getitem__"], [170, 2, 1, "", "__len__"], [170, 5, 1, "", "graph"], [170, 5, 1, "", "num_classes"], [170, 5, 1, "", "predict_category"]], "dgl.data.MinesweeperDataset": [[171, 2, 1, "", "__getitem__"], [171, 2, 1, "", "__len__"], [171, 5, 1, "", "num_classes"]], "dgl.data.MiniGCDataset": [[172, 2, 1, "", "__getitem__"], [172, 2, 1, "", "__len__"], [172, 5, 1, "", "max_num_v"], [172, 5, 1, "", "min_num_v"], [172, 5, 1, "", "num_classes"], [172, 5, 1, "", "num_graphs"]], "dgl.data.MovieLensDataset": [[173, 2, 1, "", "__getitem__"], [173, 2, 1, "", "__len__"]], "dgl.data.PATTERNDataset": [[174, 2, 1, "", "__getitem__"], [174, 2, 1, "", "__len__"], [174, 5, 1, "", "num_classes"]], "dgl.data.PPIDataset": [[175, 2, 1, "", "__getitem__"], [175, 2, 1, "", "__len__"], [175, 5, 1, "", "features"], [175, 5, 1, "", "labels"], [175, 5, 1, "", "num_labels"]], "dgl.data.PubmedGraphDataset": [[176, 2, 1, "", "__getitem__"], [176, 2, 1, "", "__len__"], [176, 5, 1, "", "num_classes"]], "dgl.data.QM7bDataset": [[177, 2, 1, "", "__getitem__"], [177, 2, 1, "", "__len__"], [177, 5, 1, "", "num_labels"], [177, 5, 1, "", "num_tasks"]], "dgl.data.QM9Dataset": [[178, 2, 1, "", "__getitem__"], [178, 2, 1, "", "__len__"], [178, 5, 1, "", "num_labels"], [178, 5, 1, "", "num_tasks"]], "dgl.data.QM9EdgeDataset": [[179, 2, 1, "", "__getitem__"], [179, 2, 1, "", "__len__"], [179, 5, 1, "", "num_labels"], [179, 5, 1, "", "num_tasks"]], "dgl.data.QuestionsDataset": [[180, 2, 1, "", "__getitem__"], [180, 2, 1, "", "__len__"], [180, 5, 1, "", "num_classes"]], "dgl.data.RedditDataset": [[181, 2, 1, "", "__getitem__"], [181, 2, 1, "", "__len__"], [181, 5, 1, "", "num_classes"]], "dgl.data.RomanEmpireDataset": [[182, 2, 1, "", "__getitem__"], [182, 2, 1, "", "__len__"], [182, 5, 1, "", "num_classes"]], "dgl.data.SBMMixtureDataset": [[183, 2, 1, "", "__getitem__"], [183, 2, 1, "", "__len__"], [183, 2, 1, "", "collate_fn"]], "dgl.data.SSTDataset": [[184, 2, 1, "", "__getitem__"], [184, 2, 1, "", "__len__"], [184, 5, 1, "", "num_classes"], [184, 5, 1, "", "pretrained_emb"], [184, 5, 1, "", "vocab"], [184, 5, 1, "", "vocab_size"]], "dgl.data.SquirrelDataset": [[185, 2, 1, "", "__getitem__"], [185, 2, 1, "", "__len__"], [185, 5, 1, "", "num_classes"]], "dgl.data.TUDataset": [[186, 2, 1, "", "__getitem__"], [186, 2, 1, "", "__len__"], [186, 5, 1, "", "max_num_node"], [186, 5, 1, "", "num_classes"], [186, 5, 1, "", "num_labels"]], "dgl.data.TexasDataset": [[187, 2, 1, "", "__getitem__"], [187, 2, 1, "", "__len__"], [187, 5, 1, "", "num_classes"]], "dgl.data.TolokersDataset": [[188, 2, 1, "", "__getitem__"], [188, 2, 1, "", "__len__"], [188, 5, 1, "", "num_classes"]], "dgl.data.TreeCycleDataset": [[189, 2, 1, "", "__getitem__"], [189, 2, 1, "", "__len__"], [189, 5, 1, "", "num_classes"]], "dgl.data.TreeGridDataset": [[190, 2, 1, "", "__getitem__"], [190, 2, 1, "", "__len__"], [190, 5, 1, "", "num_classes"]], "dgl.data.WN18Dataset": [[191, 2, 1, "", "__getitem__"], [191, 2, 1, "", "__len__"], [191, 5, 1, "", "num_nodes"], [191, 5, 1, "", "num_rels"]], "dgl.data.WikiCSDataset": [[192, 2, 1, "", "__getitem__"], [192, 2, 1, "", "__len__"], [192, 5, 1, "", "num_classes"]], "dgl.data.WisconsinDataset": [[193, 2, 1, "", "__getitem__"], [193, 2, 1, "", "__len__"], [193, 5, 1, "", "num_classes"]], "dgl.data.YelpDataset": [[194, 2, 1, "", "__getitem__"], [194, 2, 1, "", "__len__"], [194, 5, 1, "", "num_classes"]], "dgl.data.ZINCDataset": [[195, 2, 1, "", "__getitem__"], [195, 2, 1, "", "__len__"], [195, 5, 1, "", "num_atom_types"], [195, 5, 1, "", "num_bond_types"]], "dgl.data.utils": [[196, 1, 1, "", "Subset"], [197, 1, 1, "", "add_node_property_split"], [198, 1, 1, "", "add_nodepred_split"], [199, 1, 1, "", "check_sha1"], [200, 1, 1, "", "download"], [201, 1, 1, "", "extract_archive"], [202, 1, 1, "", "get_download_dir"], [203, 1, 1, "", "load_info"], [204, 1, 1, "", "load_labels"], [205, 1, 1, "", "mask_nodes_by_property"], [206, 1, 1, "", "save_info"], [207, 1, 1, "", "split_dataset"]], "dgl.data.utils.Subset": [[196, 2, 1, "", "__getitem__"], [196, 2, 1, "", "__len__"]], "dgl.dataloading": [[208, 1, 1, "", "BlockSampler"], [209, 1, 1, "", "ClusterGCNSampler"], [210, 1, 1, "", "DataLoader"], [211, 1, 1, "", "GraphDataLoader"], [212, 1, 1, "", "LaborSampler"], [213, 1, 1, "", "MultiLayerFullNeighborSampler"], [214, 1, 1, "", "NeighborSampler"], [215, 1, 1, "", "SAINTSampler"], [216, 1, 1, "", "Sampler"], [217, 1, 1, "", "ShaDowKHopSampler"], [218, 4, 1, "", "as_edge_prediction_sampler"]], "dgl.dataloading.BlockSampler": [[208, 2, 1, "", "__init__"]], "dgl.dataloading.base": [[219, 1, 1, "", "LazyFeature"], [220, 1, 1, "", "set_dst_lazy_features"], [221, 1, 1, "", "set_edge_lazy_features"], [222, 1, 1, "", "set_node_lazy_features"], [223, 1, 1, "", "set_src_lazy_features"]], "dgl.dataloading.negative_sampler": [[224, 1, 1, "", "GlobalUniform"], [225, 1, 1, "", "PerSourceUniform"], [226, 5, 1, "", "Uniform"]], "dgl.distributed": [[4, 1, 1, "", "DistDataLoader"], [4, 1, 1, "", "DistEdgeDataLoader"], [4, 1, 1, "", "DistEmbedding"], [4, 1, 1, "", "DistGraph"], [4, 1, 1, "", "DistNodeDataLoader"], [4, 1, 1, "", "DistTensor"], [4, 1, 1, "", "EdgeCollator"], [4, 1, 1, "", "GraphPartitionBook"], [4, 1, 1, "", "NodeCollator"], [4, 1, 1, "", "PartitionPolicy"], [229, 4, 1, "", "dgl_partition_to_graphbolt"], [230, 4, 1, "", "edge_split"], [231, 4, 1, "", "find_edges"], [232, 4, 1, "", "in_subgraph"], [233, 4, 1, "", "initialize"], [234, 4, 1, "", "load_partition"], [235, 4, 1, "", "load_partition_book"], [236, 4, 1, "", "load_partition_feats"], [237, 4, 1, "", "node_split"], [238, 4, 1, "", "partition_graph"], [239, 4, 1, "", "sample_etype_neighbors"], [240, 4, 1, "", "sample_neighbors"]], "dgl.distributed.DistGraph": [[4, 2, 1, "", "barrier"], [4, 3, 1, "", "device"], [4, 3, 1, "", "edata"], [4, 2, 1, "", "edge_attr_schemes"], [4, 3, 1, "", "edges"], [4, 3, 1, "", "etypes"], [4, 2, 1, "", "find_edges"], [4, 2, 1, "", "get_edge_partition_policy"], [4, 2, 1, "", "get_etype_id"], [4, 2, 1, "", "get_node_partition_policy"], [4, 2, 1, "", "get_ntype_id"], [4, 2, 1, "", "get_partition_book"], [4, 3, 1, "", "idtype"], [4, 2, 1, "", "in_degrees"], [4, 3, 1, "", "local_partition"], [4, 3, 1, "", "ndata"], [4, 2, 1, "", "node_attr_schemes"], [4, 3, 1, "", "nodes"], [4, 3, 1, "", "ntypes"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_nodes"], [4, 2, 1, "", "number_of_edges"], [4, 2, 1, "", "number_of_nodes"], [4, 2, 1, "", "out_degrees"], [4, 2, 1, "", "rank"]], "dgl.distributed.DistTensor": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "name"], [4, 3, 1, "", "part_policy"], [4, 3, 1, "", "shape"]], "dgl.distributed.GraphPartitionBook": [[4, 3, 1, "", "canonical_etypes"], [4, 2, 1, "", "eid2localeid"], [4, 2, 1, "", "eid2partid"], [4, 2, 1, "", "map_to_homo_eid"], [4, 2, 1, "", "map_to_homo_nid"], [4, 2, 1, "", "map_to_per_etype"], [4, 2, 1, "", "map_to_per_ntype"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "nid2localnid"], [4, 2, 1, "", "nid2partid"], [4, 2, 1, "", "num_partitions"], [4, 3, 1, "", "partid"], [4, 2, 1, "", "partid2eids"], [4, 2, 1, "", "partid2nids"], [4, 2, 1, "", "shared_memory"]], "dgl.distributed.PartitionPolicy": [[4, 2, 1, "", "get_part_size"], [4, 2, 1, "", "get_size"], [4, 3, 1, "", "part_id"], [4, 3, 1, "", "partition_book"], [4, 3, 1, "", "policy_str"], [4, 2, 1, "", "to_local"], [4, 2, 1, "", "to_partid"]], "dgl.distributed.optim": [[4, 1, 1, "", "SparseAdagrad"], [4, 1, 1, "", "SparseAdam"]], "dgl.distributed.optim.SparseAdagrad": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.distributed.optim.SparseAdam": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.function": [[249, 4, 1, "", "copy_e"], [250, 4, 1, "", "copy_u"], [251, 4, 1, "", "e_add_u"], [252, 4, 1, "", "e_add_v"], [253, 4, 1, "", "e_div_u"], [254, 4, 1, "", "e_div_v"], [255, 4, 1, "", "e_dot_u"], [256, 4, 1, "", "e_dot_v"], [257, 4, 1, "", "e_mul_u"], [258, 4, 1, "", "e_mul_v"], [259, 4, 1, "", "e_sub_u"], [260, 4, 1, "", "e_sub_v"], [261, 4, 1, "", "max"], [262, 4, 1, "", "mean"], [263, 4, 1, "", "min"], [264, 4, 1, "", "sum"], [265, 4, 1, "", "u_add_e"], [266, 4, 1, "", "u_add_v"], [267, 4, 1, "", "u_div_e"], [268, 4, 1, "", "u_div_v"], [269, 4, 1, "", "u_dot_e"], [270, 4, 1, "", "u_dot_v"], [271, 4, 1, "", "u_mul_e"], [272, 4, 1, "", "u_mul_v"], [273, 4, 1, "", "u_sub_e"], [274, 4, 1, "", "u_sub_v"], [275, 4, 1, "", "v_add_e"], [276, 4, 1, "", "v_add_u"], [277, 4, 1, "", "v_div_e"], [278, 4, 1, "", "v_div_u"], [279, 4, 1, "", "v_dot_e"], [280, 4, 1, "", "v_dot_u"], [281, 4, 1, "", "v_mul_e"], [282, 4, 1, "", "v_mul_u"], [283, 4, 1, "", "v_sub_e"], [284, 4, 1, "", "v_sub_u"]], "dgl.geometry": [[6, 1, 1, "", "farthest_point_sampler"], [6, 1, 1, "", "neighbor_matching"]], "dgl.graphbolt": [[286, 1, 1, "", "BasicFeatureStore"], [287, 1, 1, "", "BuiltinDataset"], [288, 1, 1, "", "CPUCachedFeature"], [289, 1, 1, "", "CopyTo"], [290, 1, 1, "", "DataLoader"], [291, 1, 1, "", "Dataset"], [292, 1, 1, "", "DiskBasedFeature"], [293, 1, 1, "", "DistributedItemSampler"], [294, 1, 1, "", "Feature"], [295, 1, 1, "", "FeatureFetcher"], [296, 1, 1, "", "FeatureStore"], [297, 1, 1, "", "FusedCSCSamplingGraph"], [298, 1, 1, "", "GPUCachedFeature"], [299, 1, 1, "", "HeteroItemSet"], [300, 1, 1, "", "InSubgraphSampler"], [301, 1, 1, "", "ItemSampler"], [302, 1, 1, "", "ItemSet"], [303, 1, 1, "", "LayerNeighborSampler"], [304, 1, 1, "", "LegacyDataset"], [305, 1, 1, "", "MiniBatch"], [306, 1, 1, "", "MiniBatchTransformer"], [307, 1, 1, "", "NegativeSampler"], [308, 1, 1, "", "NeighborSampler"], [309, 1, 1, "", "OnDiskDataset"], [310, 1, 1, "", "SampledSubgraph"], [311, 1, 1, "", "SampledSubgraphImpl"], [312, 1, 1, "", "SamplingGraph"], [313, 1, 1, "", "SubgraphSampler"], [314, 1, 1, "", "Task"], [315, 1, 1, "", "TemporalLayerNeighborSampler"], [316, 1, 1, "", "TemporalNeighborSampler"], [317, 1, 1, "", "TorchBasedFeature"], [318, 1, 1, "", "TorchBasedFeatureStore"], [319, 1, 1, "", "UniformNegativeSampler"], [320, 4, 1, "", "add_reverse_edges"], [321, 4, 1, "", "compact_csc_format"], [322, 4, 1, "", "cpu_cached_feature"], [323, 4, 1, "", "etype_str_to_tuple"], [324, 4, 1, "", "etype_tuple_to_str"], [325, 4, 1, "", "exclude_seed_edges"], [326, 4, 1, "", "expand_indptr"], [327, 4, 1, "", "from_dglgraph"], [328, 4, 1, "", "fused_csc_sampling_graph"], [329, 4, 1, "", "gpu_cached_feature"], [330, 4, 1, "", "index_select"], [331, 4, 1, "", "indptr_edge_ids"], [332, 4, 1, "", "isin"], [333, 4, 1, "", "load_from_shared_memory"], [334, 4, 1, "", "numpy_save_aligned"], [335, 4, 1, "", "seed"], [336, 4, 1, "", "unique_and_compact"], [337, 4, 1, "", "unique_and_compact_csc_formats"]], "dgl.graphbolt.BasicFeatureStore": [[286, 2, 1, "", "keys"]], "dgl.graphbolt.CPUCachedFeature": [[288, 3, 1, "", "cache_size_in_bytes"], [288, 2, 1, "", "count"], [288, 2, 1, "", "is_pinned"], [288, 3, 1, "", "miss_rate"], [288, 2, 1, "", "read"], [288, 2, 1, "", "read_async"], [288, 2, 1, "", "read_async_num_stages"], [288, 2, 1, "", "size"], [288, 2, 1, "", "update"]], "dgl.graphbolt.Dataset": [[291, 3, 1, "", "all_nodes_set"], [291, 3, 1, "", "dataset_name"], [291, 3, 1, "", "feature"], [291, 3, 1, "", "graph"], [291, 3, 1, "", "tasks"]], "dgl.graphbolt.DiskBasedFeature": [[292, 2, 1, "", "count"], [292, 2, 1, "", "metadata"], [292, 2, 1, "", "pin_memory_"], [292, 2, 1, "", "read"], [292, 2, 1, "", "read_async"], [292, 2, 1, "", "read_async_num_stages"], [292, 2, 1, "", "read_into_memory"], [292, 2, 1, "", "size"], [292, 2, 1, "", "to"], [292, 2, 1, "", "update"]], "dgl.graphbolt.Feature": [[294, 2, 1, "", "count"], [294, 2, 1, "", "metadata"], [294, 2, 1, "", "read"], [294, 2, 1, "", "read_async"], [294, 2, 1, "", "read_async_num_stages"], [294, 2, 1, "", "size"], [294, 2, 1, "", "update"]], "dgl.graphbolt.FeatureStore": [[296, 2, 1, "", "count"], [296, 2, 1, "", "keys"], [296, 2, 1, "", "metadata"], [296, 2, 1, "", "read"], [296, 2, 1, "", "size"], [296, 2, 1, "", "update"]], "dgl.graphbolt.FusedCSCSamplingGraph": [[297, 2, 1, "", "add_edge_attribute"], [297, 2, 1, "", "add_node_attribute"], [297, 2, 1, "", "copy_to_shared_memory"], [297, 3, 1, "", "csc_indptr"], [297, 2, 1, "", "edge_attribute"], [297, 3, 1, "", "edge_attributes"], [297, 3, 1, "", "edge_type_to_id"], [297, 2, 1, "", "in_subgraph"], [297, 3, 1, "", "indices"], [297, 2, 1, "", "node_attribute"], [297, 3, 1, "", "node_attributes"], [297, 3, 1, "", "node_type_offset"], [297, 3, 1, "", "node_type_to_id"], [297, 3, 1, "", "num_edges"], [297, 3, 1, "", "num_nodes"], [297, 2, 1, "", "pin_memory_"], [297, 2, 1, "", "sample_layer_neighbors"], [297, 2, 1, "", "sample_negative_edges_uniform"], [297, 2, 1, "", "sample_neighbors"], [297, 2, 1, "", "temporal_sample_layer_neighbors"], [297, 2, 1, "", "temporal_sample_neighbors"], [297, 2, 1, "", "to"], [297, 3, 1, "", "total_num_edges"], [297, 3, 1, "", "total_num_nodes"], [297, 3, 1, "", "type_per_edge"]], "dgl.graphbolt.GPUCachedFeature": [[298, 3, 1, "", "cache_size_in_bytes"], [298, 2, 1, "", "count"], [298, 3, 1, "", "miss_rate"], [298, 2, 1, "", "read"], [298, 2, 1, "", "read_async"], [298, 2, 1, "", "read_async_num_stages"], [298, 2, 1, "", "size"], [298, 2, 1, "", "update"]], "dgl.graphbolt.HeteroItemSet": [[299, 3, 1, "", "names"]], "dgl.graphbolt.InSubgraphSampler": [[300, 2, 1, "", "sample_subgraphs"]], "dgl.graphbolt.ItemSet": [[302, 3, 1, "", "names"], [302, 3, 1, "", "num_items"]], "dgl.graphbolt.LegacyDataset": [[304, 3, 1, "", "all_nodes_set"], [304, 3, 1, "", "dataset_name"], [304, 3, 1, "", "feature"], [304, 3, 1, "", "graph"], [304, 3, 1, "", "tasks"]], "dgl.graphbolt.MiniBatch": [[305, 3, 1, "", "blocks"], [305, 5, 1, "", "compacted_seeds"], [305, 2, 1, "", "compute_blocks"], [305, 5, 1, "", "edge_features"], [305, 2, 1, "", "edge_ids"], [305, 5, 1, "", "indexes"], [305, 5, 1, "", "input_nodes"], [305, 2, 1, "", "is_pinned"], [305, 5, 1, "", "labels"], [305, 5, 1, "", "node_features"], [305, 2, 1, "", "node_ids"], [305, 2, 1, "", "num_layers"], [305, 2, 1, "", "pin_memory"], [305, 5, 1, "", "sampled_subgraphs"], [305, 5, 1, "", "seeds"], [305, 2, 1, "", "set_edge_features"], [305, 2, 1, "", "set_node_features"], [305, 2, 1, "", "to"], [305, 2, 1, "", "to_pyg_data"]], "dgl.graphbolt.OnDiskDataset": [[309, 3, 1, "", "all_nodes_set"], [309, 3, 1, "", "dataset_name"], [309, 3, 1, "", "feature"], [309, 3, 1, "", "graph"], [309, 2, 1, "", "load"], [309, 3, 1, "", "tasks"], [309, 3, 1, "", "yaml_data"]], "dgl.graphbolt.SampledSubgraph": [[310, 2, 1, "", "exclude_edges"], [310, 2, 1, "", "is_pinned"], [310, 3, 1, "", "original_column_node_ids"], [310, 3, 1, "", "original_edge_ids"], [310, 3, 1, "", "original_row_node_ids"], [310, 2, 1, "", "pin_memory"], [310, 3, 1, "", "sampled_csc"], [310, 2, 1, "", "to"], [310, 2, 1, "", "to_pyg"]], "dgl.graphbolt.SampledSubgraphImpl": [[311, 5, 1, "", "original_column_node_ids"], [311, 5, 1, "", "original_edge_ids"], [311, 5, 1, "", "original_row_node_ids"], [311, 5, 1, "", "sampled_csc"]], "dgl.graphbolt.SamplingGraph": [[312, 2, 1, "", "copy_to_shared_memory"], [312, 3, 1, "", "num_edges"], [312, 3, 1, "", "num_nodes"], [312, 2, 1, "", "to"]], "dgl.graphbolt.SubgraphSampler": [[313, 2, 1, "", "sample_subgraphs"], [313, 2, 1, "", "sampling_stages"]], "dgl.graphbolt.Task": [[314, 3, 1, "", "metadata"], [314, 3, 1, "", "test_set"], [314, 3, 1, "", "train_set"], [314, 3, 1, "", "validation_set"]], "dgl.graphbolt.TorchBasedFeature": [[317, 2, 1, "", "count"], [317, 2, 1, "", "is_pinned"], [317, 2, 1, "", "metadata"], [317, 2, 1, "", "pin_memory_"], [317, 2, 1, "", "read"], [317, 2, 1, "", "read_async"], [317, 2, 1, "", "read_async_num_stages"], [317, 2, 1, "", "size"], [317, 2, 1, "", "to"], [317, 2, 1, "", "update"]], "dgl.graphbolt.TorchBasedFeatureStore": [[318, 2, 1, "", "is_pinned"], [318, 2, 1, "", "pin_memory_"], [318, 2, 1, "", "to"]], "dgl.multiprocessing.pytorch": [[359, 4, 1, "", "call_once_and_share"], [360, 4, 1, "", "shared_tensor"]], "dgl.nn": [[18, 0, 0, "-", "functional"]], "dgl.nn.functional": [[361, 4, 1, "", "edge_softmax"]], "dgl.nn.mxnet": [[362, 1, 1, "", "HeteroGraphConv"]], "dgl.nn.mxnet.conv": [[363, 1, 1, "", "AGNNConv"], [364, 1, 1, "", "APPNPConv"], [365, 1, 1, "", "ChebConv"], [366, 1, 1, "", "DenseChebConv"], [367, 1, 1, "", "DenseGraphConv"], [368, 1, 1, "", "DenseSAGEConv"], [369, 1, 1, "", "EdgeConv"], [370, 1, 1, "", "GATConv"], [371, 1, 1, "", "GINConv"], [372, 1, 1, "", "GMMConv"], [373, 1, 1, "", "GatedGraphConv"], [374, 1, 1, "", "GraphConv"], [375, 1, 1, "", "NNConv"], [376, 1, 1, "", "RelGraphConv"], [377, 1, 1, "", "SAGEConv"], [378, 1, 1, "", "SGConv"], [379, 1, 1, "", "TAGConv"]], "dgl.nn.mxnet.glob": [[380, 1, 1, "", "AvgPooling"], [381, 1, 1, "", "GlobalAttentionPooling"], [382, 1, 1, "", "MaxPooling"], [383, 1, 1, "", "Set2Set"], [384, 1, 1, "", "SortPooling"], [385, 1, 1, "", "SumPooling"]], "dgl.nn.mxnet.utils": [[386, 1, 1, "", "Sequential"]], "dgl.nn.pytorch": [[387, 1, 1, "", "DeepWalk"], [388, 1, 1, "", "HeteroEmbedding"], [389, 1, 1, "", "HeteroGraphConv"], [390, 1, 1, "", "HeteroLinear"], [391, 1, 1, "", "MetaPath2Vec"], [392, 1, 1, "", "TypedLinear"]], "dgl.nn.pytorch.DeepWalk": [[387, 2, 1, "", "forward"], [387, 5, 1, "", "node_embed"], [387, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroEmbedding": [[388, 2, 1, "", "forward"], [388, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroGraphConv": [[389, 2, 1, "", "forward"], [389, 5, 1, "", "mods"]], "dgl.nn.pytorch.HeteroLinear": [[390, 2, 1, "", "forward"]], "dgl.nn.pytorch.MetaPath2Vec": [[391, 2, 1, "", "forward"], [391, 5, 1, "", "local_to_global_nid"], [391, 5, 1, "", "node_embed"], [391, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.TypedLinear": [[392, 2, 1, "", "forward"], [392, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv": [[393, 1, 1, "", "AGNNConv"], [394, 1, 1, "", "APPNPConv"], [395, 1, 1, "", "AtomicConv"], [396, 1, 1, "", "CFConv"], [397, 1, 1, "", "ChebConv"], [398, 1, 1, "", "CuGraphGATConv"], [399, 1, 1, "", "CuGraphRelGraphConv"], [400, 1, 1, "", "CuGraphSAGEConv"], [401, 1, 1, "", "DGNConv"], [402, 1, 1, "", "DenseChebConv"], [403, 1, 1, "", "DenseGraphConv"], [404, 1, 1, "", "DenseSAGEConv"], [405, 1, 1, "", "DotGatConv"], [406, 1, 1, "", "EGATConv"], [407, 1, 1, "", "EGNNConv"], [408, 1, 1, "", "EdgeConv"], [409, 1, 1, "", "EdgeGATConv"], [410, 1, 1, "", "EdgeWeightNorm"], [411, 1, 1, "", "GATConv"], [412, 1, 1, "", "GATv2Conv"], [413, 1, 1, "", "GCN2Conv"], [414, 1, 1, "", "GINConv"], [415, 1, 1, "", "GINEConv"], [416, 1, 1, "", "GMMConv"], [417, 1, 1, "", "GatedGCNConv"], [418, 1, 1, "", "GatedGraphConv"], [419, 1, 1, "", "GraphConv"], [420, 1, 1, "", "GroupRevRes"], [421, 1, 1, "", "HGTConv"], [422, 1, 1, "", "NNConv"], [423, 1, 1, "", "PNAConv"], [424, 1, 1, "", "RelGraphConv"], [425, 1, 1, "", "SAGEConv"], [426, 1, 1, "", "SGConv"], [427, 1, 1, "", "TAGConv"], [428, 1, 1, "", "TWIRLSConv"], [429, 1, 1, "", "TWIRLSUnfoldingAndAttention"]], "dgl.nn.pytorch.conv.AGNNConv": [[393, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.APPNPConv": [[394, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.AtomicConv": [[395, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CFConv": [[396, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.ChebConv": [[397, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CuGraphGATConv": [[398, 2, 1, "", "forward"], [398, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphRelGraphConv": [[399, 2, 1, "", "forward"], [399, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphSAGEConv": [[400, 2, 1, "", "forward"], [400, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DGNConv": [[401, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.DenseChebConv": [[402, 2, 1, "", "forward"], [402, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseGraphConv": [[403, 2, 1, "", "forward"], [403, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseSAGEConv": [[404, 2, 1, "", "forward"], [404, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DotGatConv": [[405, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EGATConv": [[406, 2, 1, "", "forward"], [406, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EGNNConv": [[407, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeConv": [[408, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeGATConv": [[409, 2, 1, "", "forward"], [409, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EdgeWeightNorm": [[410, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GATConv": [[411, 2, 1, "", "forward"], [411, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GATv2Conv": [[412, 2, 1, "", "forward"], [412, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GCN2Conv": [[413, 2, 1, "", "forward"], [413, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GINConv": [[414, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GINEConv": [[415, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GMMConv": [[416, 2, 1, "", "forward"], [416, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GatedGCNConv": [[417, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GatedGraphConv": [[418, 2, 1, "", "forward"], [418, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GraphConv": [[419, 5, 1, "", "bias"], [419, 2, 1, "", "forward"], [419, 2, 1, "", "reset_parameters"], [419, 5, 1, "", "weight"]], "dgl.nn.pytorch.conv.GroupRevRes": [[420, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.HGTConv": [[421, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.NNConv": [[422, 2, 1, "", "forward"], [422, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.PNAConv": [[423, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.RelGraphConv": [[424, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.SAGEConv": [[425, 2, 1, "", "forward"], [425, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.SGConv": [[426, 2, 1, "", "forward"], [426, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TAGConv": [[427, 2, 1, "", "forward"], [427, 5, 1, "", "lin"], [427, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TWIRLSConv": [[428, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention": [[429, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain": [[430, 1, 1, "", "GNNExplainer"], [431, 1, 1, "", "HeteroGNNExplainer"], [432, 1, 1, "", "HeteroPGExplainer"], [433, 1, 1, "", "HeteroSubgraphX"], [434, 1, 1, "", "PGExplainer"], [435, 1, 1, "", "SubgraphX"]], "dgl.nn.pytorch.explain.GNNExplainer": [[430, 2, 1, "", "explain_graph"], [430, 2, 1, "", "explain_node"], [430, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroGNNExplainer": [[431, 2, 1, "", "explain_graph"], [431, 2, 1, "", "explain_node"], [431, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroPGExplainer": [[432, 2, 1, "", "explain_graph"], [432, 2, 1, "", "explain_node"], [432, 2, 1, "", "forward"], [432, 2, 1, "", "train_step"], [432, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.HeteroSubgraphX": [[433, 2, 1, "", "explain_graph"], [433, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.PGExplainer": [[434, 2, 1, "", "explain_graph"], [434, 2, 1, "", "explain_node"], [434, 2, 1, "", "forward"], [434, 2, 1, "", "train_step"], [434, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.SubgraphX": [[435, 2, 1, "", "explain_graph"], [435, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory": [[436, 1, 1, "", "KNNGraph"], [437, 1, 1, "", "RadiusGraph"], [438, 1, 1, "", "SegmentedKNNGraph"]], "dgl.nn.pytorch.factory.KNNGraph": [[436, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.RadiusGraph": [[437, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.SegmentedKNNGraph": [[438, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob": [[439, 1, 1, "", "AvgPooling"], [440, 1, 1, "", "GlobalAttentionPooling"], [441, 1, 1, "", "MaxPooling"], [442, 1, 1, "", "Set2Set"], [443, 1, 1, "", "SetTransformerDecoder"], [444, 1, 1, "", "SetTransformerEncoder"], [445, 1, 1, "", "SortPooling"], [446, 1, 1, "", "SumPooling"], [447, 1, 1, "", "WeightAndSum"]], "dgl.nn.pytorch.glob.AvgPooling": [[439, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.GlobalAttentionPooling": [[440, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.MaxPooling": [[441, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.Set2Set": [[442, 2, 1, "", "forward"], [442, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.glob.SetTransformerDecoder": [[443, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SetTransformerEncoder": [[444, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SortPooling": [[445, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SumPooling": [[446, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.WeightAndSum": [[447, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt": [[448, 1, 1, "", "BiasedMHA"], [449, 1, 1, "", "DegreeEncoder"], [450, 1, 1, "", "EGTLayer"], [451, 1, 1, "", "GraphormerLayer"], [452, 1, 1, "", "LapPosEncoder"], [453, 1, 1, "", "PathEncoder"], [454, 1, 1, "", "SpatialEncoder"], [455, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt.BiasedMHA": [[448, 2, 1, "", "forward"], [448, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.gt.DegreeEncoder": [[449, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.EGTLayer": [[450, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.GraphormerLayer": [[451, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.LapPosEncoder": [[452, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.PathEncoder": [[453, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder": [[454, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder3d": [[455, 2, 1, "", "forward"]], "dgl.nn.pytorch.link": [[456, 1, 1, "", "EdgePredictor"], [457, 1, 1, "", "TransE"], [458, 1, 1, "", "TransR"]], "dgl.nn.pytorch.link.EdgePredictor": [[456, 2, 1, "", "forward"], [456, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransE": [[457, 2, 1, "", "forward"], [457, 5, 1, "", "rel_emb"], [457, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransR": [[458, 2, 1, "", "forward"], [458, 5, 1, "", "rel_emb"], [458, 5, 1, "", "rel_project"], [458, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.sparse_emb": [[459, 1, 1, "", "NodeEmbedding"]], "dgl.nn.pytorch.utils": [[460, 1, 1, "", "JumpingKnowledge"], [461, 1, 1, "", "LabelPropagation"], [462, 1, 1, "", "Sequential"], [463, 1, 1, "", "WeightBasis"]], "dgl.nn.pytorch.utils.JumpingKnowledge": [[460, 2, 1, "", "forward"], [460, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.utils.LabelPropagation": [[461, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.Sequential": [[462, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.WeightBasis": [[463, 2, 1, "", "forward"]], "dgl.nn.tensorflow.conv": [[464, 1, 1, "", "APPNPConv"], [465, 1, 1, "", "ChebConv"], [466, 1, 1, "", "GATConv"], [467, 1, 1, "", "GINConv"], [468, 1, 1, "", "GraphConv"], [469, 1, 1, "", "RelGraphConv"], [470, 1, 1, "", "SAGEConv"], [471, 1, 1, "", "SGConv"]], "dgl.nn.tensorflow.glob": [[472, 1, 1, "", "AvgPooling"], [473, 1, 1, "", "GlobalAttentionPooling"], [474, 1, 1, "", "HeteroGraphConv"], [475, 1, 1, "", "MaxPooling"], [476, 1, 1, "", "SortPooling"], [477, 1, 1, "", "SumPooling"]], "dgl.ops": [[483, 4, 1, "", "copy_e_max"], [484, 4, 1, "", "copy_e_mean"], [485, 4, 1, "", "copy_e_min"], [486, 4, 1, "", "copy_e_sum"], [487, 4, 1, "", "copy_u"], [488, 4, 1, "", "copy_u_max"], [489, 4, 1, "", "copy_u_mean"], [490, 4, 1, "", "copy_u_min"], [491, 4, 1, "", "copy_u_sum"], [492, 4, 1, "", "copy_v"], [493, 4, 1, "", "e_add_u"], [494, 4, 1, "", "e_add_v"], [495, 4, 1, "", "e_div_u"], [496, 4, 1, "", "e_div_v"], [497, 4, 1, "", "e_dot_u"], [498, 4, 1, "", "e_dot_v"], [499, 4, 1, "", "e_mul_u"], [500, 4, 1, "", "e_mul_v"], [501, 4, 1, "", "e_sub_u"], [502, 4, 1, "", "e_sub_v"], [503, 4, 1, "", "gather_mm"], [504, 4, 1, "", "gsddmm"], [505, 4, 1, "", "gspmm"], [506, 4, 1, "", "segment_mm"], [507, 4, 1, "", "segment_reduce"], [508, 4, 1, "", "u_add_e"], [509, 4, 1, "", "u_add_e_max"], [510, 4, 1, "", "u_add_e_mean"], [511, 4, 1, "", "u_add_e_min"], [512, 4, 1, "", "u_add_e_sum"], [513, 4, 1, "", "u_add_v"], [514, 4, 1, "", "u_div_e"], [515, 4, 1, "", "u_div_e_max"], [516, 4, 1, "", "u_div_e_mean"], [517, 4, 1, "", "u_div_e_min"], [518, 4, 1, "", "u_div_e_sum"], [519, 4, 1, "", "u_div_v"], [520, 4, 1, "", "u_dot_e"], [521, 4, 1, "", "u_dot_v"], [522, 4, 1, "", "u_mul_e"], [523, 4, 1, "", "u_mul_e_max"], [524, 4, 1, "", "u_mul_e_mean"], [525, 4, 1, "", "u_mul_e_min"], [526, 4, 1, "", "u_mul_e_sum"], [527, 4, 1, "", "u_mul_v"], [528, 4, 1, "", "u_sub_e"], [529, 4, 1, "", "u_sub_e_max"], [530, 4, 1, "", "u_sub_e_mean"], [531, 4, 1, "", "u_sub_e_min"], [532, 4, 1, "", "u_sub_e_sum"], [533, 4, 1, "", "u_sub_v"], [534, 4, 1, "", "v_add_e"], [535, 4, 1, "", "v_add_u"], [536, 4, 1, "", "v_div_e"], [537, 4, 1, "", "v_div_u"], [538, 4, 1, "", "v_dot_e"], [539, 4, 1, "", "v_dot_u"], [540, 4, 1, "", "v_mul_e"], [541, 4, 1, "", "v_mul_u"], [542, 4, 1, "", "v_sub_e"], [543, 4, 1, "", "v_sub_u"]], "dgl.optim.pytorch": [[10, 1, 1, "", "SparseAdagrad"], [10, 1, 1, "", "SparseAdam"]], "dgl.sampling": [[562, 1, 1, "", "PinSAGESampler"], [563, 4, 1, "", "global_uniform_negative_sampling"], [564, 4, 1, "", "node2vec_random_walk"], [565, 4, 1, "", "pack_traces"], [566, 4, 1, "", "random_walk"], [567, 4, 1, "", "sample_labors"], [568, 4, 1, "", "sample_neighbors"], [569, 4, 1, "", "sample_neighbors_biased"], [570, 4, 1, "", "select_topk"]], "dgl.sampling.PinSAGESampler": [[562, 2, 1, "", "__init__"]], "dgl.sparse": [[12, 1, 1, "", "SparseMatrix"], [611, 4, 1, "", "add"], [612, 4, 1, "", "bsddmm"], [613, 4, 1, "", "bspmm"], [614, 4, 1, "", "diag"], [615, 4, 1, "", "div"], [616, 4, 1, "", "from_coo"], [617, 4, 1, "", "from_csc"], [618, 4, 1, "", "from_csr"], [619, 4, 1, "", "identity"], [620, 4, 1, "", "matmul"], [621, 4, 1, "", "mul"], [622, 4, 1, "", "power"], [623, 4, 1, "", "sddmm"], [624, 4, 1, "", "softmax"], [625, 4, 1, "", "sp_add_v"], [626, 4, 1, "", "sp_broadcast_v"], [627, 4, 1, "", "sp_div_v"], [628, 4, 1, "", "sp_mul_v"], [629, 4, 1, "", "sp_sub_v"], [630, 4, 1, "", "spmatrix"], [631, 4, 1, "", "spmm"], [632, 4, 1, "", "spspmm"], [633, 4, 1, "", "sub"], [634, 4, 1, "", "val_like"]], "dgl.sparse.SparseMatrix": [[580, 3, 1, "", "T"], [581, 2, 1, "", "coalesce"], [582, 3, 1, "", "col"], [583, 2, 1, "", "coo"], [584, 2, 1, "", "cpu"], [585, 2, 1, "", "csc"], [586, 2, 1, "", "csr"], [587, 2, 1, "", "cuda"], [588, 3, 1, "", "device"], [589, 2, 1, "", "double"], [590, 3, 1, "", "dtype"], [591, 2, 1, "", "float"], [592, 2, 1, "", "has_duplicate"], [593, 2, 1, "", "indices"], [594, 2, 1, "", "int"], [595, 2, 1, "", "long"], [596, 2, 1, "", "neg"], [597, 3, 1, "", "nnz"], [598, 2, 1, "", "reduce"], [599, 3, 1, "", "row"], [600, 3, 1, "", "shape"], [601, 2, 1, "", "smax"], [602, 2, 1, "", "smean"], [603, 2, 1, "", "smin"], [604, 2, 1, "", "softmax"], [605, 2, 1, "", "sum"], [606, 2, 1, "", "t"], [607, 2, 1, "", "to"], [608, 2, 1, "", "to_dense"], [609, 2, 1, "", "transpose"], [610, 3, 1, "", "val"]], "dgl.transforms": [[652, 1, 1, "", "AddEdge"], [653, 1, 1, "", "AddMetaPaths"], [654, 1, 1, "", "AddReverse"], [655, 1, 1, "", "AddSelfLoop"], [656, 1, 1, "", "BaseTransform"], [657, 1, 1, "", "Compose"], [658, 1, 1, "", "DropEdge"], [659, 1, 1, "", "DropNode"], [660, 1, 1, "", "FeatMask"], [661, 1, 1, "", "GCNNorm"], [662, 1, 1, "", "GDC"], [663, 1, 1, "", "HeatKernel"], [664, 1, 1, "", "KHopGraph"], [665, 1, 1, "", "LapPE"], [666, 1, 1, "", "LineGraph"], [667, 1, 1, "", "NodeShuffle"], [668, 1, 1, "", "PPR"], [669, 1, 1, "", "RandomWalkPE"], [670, 1, 1, "", "RemoveSelfLoop"], [671, 1, 1, "", "RowFeatNormalizer"], [672, 1, 1, "", "SIGNDiffusion"], [673, 1, 1, "", "SVDPE"], [674, 1, 1, "", "ToLevi"], [675, 1, 1, "", "ToSimple"]], "dgl.udf.EdgeBatch": [[676, 2, 1, "", "batch_size"], [677, 3, 1, "", "data"], [678, 3, 1, "", "dst"], [679, 2, 1, "", "edges"], [680, 3, 1, "", "src"]], "dgl.udf.NodeBatch": [[681, 2, 1, "", "batch_size"], [682, 3, 1, "", "data"], [683, 3, 1, "", "mailbox"], [684, 2, 1, "", "nodes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [4, 5, 8, 11, 22, 34, 35, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 73, 74, 87, 88, 90, 93, 94, 100, 103, 107, 113, 122, 125, 130, 131, 151, 152, 161, 163, 167, 168, 180, 182, 183, 188, 208, 210, 211, 218, 219, 228, 229, 231, 233, 238, 239, 240, 241, 243, 244, 285, 288, 293, 297, 298, 301, 305, 310, 319, 322, 329, 338, 339, 343, 344, 355, 356, 395, 403, 405, 409, 418, 419, 421, 442, 462, 479, 480, 504, 505, 544, 560, 567, 568, 569, 571, 574, 578, 579, 665, 692, 693, 695, 696, 697, 699, 701, 703, 706, 708, 711, 712, 713, 714, 716, 717, 724, 726, 727, 729, 731, 733, 734, 736, 758, 779, 786, 791, 800, 810, 811, 817, 822, 823, 824, 825, 826, 827, 828, 829, 832, 833, 834, 835, 838, 839, 845, 849, 852, 853, 856, 857, 858, 862, 865, 868, 869, 874, 875], "0": [0, 4, 5, 6, 9, 10, 14, 20, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 207, 210, 211, 212, 214, 215, 217, 218, 224, 225, 227, 228, 238, 241, 242, 243, 244, 245, 246, 247, 248, 285, 288, 290, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 317, 319, 320, 321, 326, 328, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 359, 361, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 461, 462, 478, 479, 480, 481, 482, 506, 507, 544, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 581, 584, 585, 586, 587, 589, 591, 592, 594, 595, 598, 601, 602, 603, 604, 605, 607, 611, 612, 613, 614, 615, 617, 618, 619, 620, 621, 622, 623, 624, 626, 631, 632, 633, 637, 638, 639, 640, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 693, 694, 695, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 715, 717, 718, 719, 720, 721, 723, 725, 726, 729, 730, 731, 732, 734, 735, 736, 740, 741, 743, 744, 746, 749, 750, 751, 752, 753, 759, 761, 762, 763, 764, 766, 769, 770, 771, 772, 774, 775, 776, 780, 781, 783, 784, 785, 786, 787, 790, 791, 792, 793, 794, 801, 803, 804, 805, 806, 807, 809, 810, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 828, 830, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 855, 856, 857, 858, 859, 861, 862, 864, 865, 867, 868, 869, 871, 873, 874, 875, 877], "00": [25, 346, 637, 673, 824, 825, 828, 830, 832, 833, 840, 844, 847, 851, 855, 857, 858, 861, 862, 864, 865, 867, 871, 873, 877], "000": [14, 146, 147, 169, 173, 174, 191, 195, 824, 830, 832, 848, 849, 851, 852, 853, 855, 869, 871, 873], "0000": [9, 118, 173, 361, 395, 403, 414, 419, 424, 429, 482, 554, 598, 602, 604, 615, 624, 661, 665, 669, 823, 827, 832], "00000": [833, 856, 857, 859, 862], "000000": 823, "000007645": 849, "00001": [833, 856, 857, 859, 862], "00002": [833, 856, 857, 859, 862], "00003": [833, 856, 857, 859, 862], "00004": [833, 856, 857, 859, 862], "00005": [856, 857, 859, 862], "00006": [856, 857, 859, 862], "00007": [856, 857, 859, 862], "00008": [856, 857, 859, 862], "00009": [856, 857, 859, 862], "0000e": [346, 637, 673], "00010": [856, 857, 859], "00011": [856, 857, 859], "00012": [856, 857, 859], "00013": [856, 857, 859], "00014": [856, 857, 859], "00015": [856, 857, 859], "00016": [856, 857, 859], "00017": [856, 857, 859], "00018": [856, 857, 859], "00019": [856, 857, 859], "00020": [856, 857, 859], "00021": [856, 857, 859], "00022": [856, 857, 859], "00023": [856, 857, 859], "00024": [856, 857, 859], "00025": [856, 859], "00026": [856, 859], "00027": [856, 859], "00028": [856, 859], "00029": [856, 859], "00030": 856, "00031": 856, "00032": 856, "00033": 856, "00034": 856, "00035": 856, "00036": 856, "00037": 856, "00038": 856, "00039": 856, "00040": 856, "00041": 856, "00042": 856, "00043": 856, "00044": 856, "00045": 856, "00046": 856, "00047": 856, "00048": 856, "00049": 856, "0005": [432, 434], "0009": 835, "001": [4, 10, 459, 569, 824, 825, 832, 833, 852, 853], "0016": 835, "002": [14, 824, 832, 859], "002158116134429955": 693, "0028": [443, 841], "003": [14, 562, 824, 830, 842, 874, 877], "0031": 827, "004": [14, 824, 842], "0047": 839, "005": [430, 431, 824, 842], "0057": 827, "006": [14, 824, 842, 859], "0062": 841, "0065": 827, "007": [14, 824, 842], "0070": 835, "00743445923710373": 693, "0078": 856, "0079": [827, 856], "008": [14, 824, 842], "0080": 856, "0081": 856, "0082": 856, "0083": 856, "008790817766266334": 693, "0089": 414, "009": [14, 824, 842], "0093": 824, "0096": 827, "00982": [146, 147, 169, 174, 195], "0099": 444, "01": [142, 143, 189, 346, 387, 430, 431, 432, 434, 637, 673, 721, 830, 840, 842, 843, 844, 847, 857, 864, 869, 874, 875], "010": [14, 824, 842], "0104909": 839, "0105": 839, "011": [14, 824, 842], "0110": 827, "0112": 827, "0118": 414, "012": [824, 842], "01217200152200748": 693, "0122": 838, "0129": 412, "013": [824, 830, 841, 847], "01315": 828, "0134": 462, "0137": 835, "0138": [835, 839], "014": [14, 824, 842], "01404": 162, "0142": [439, 440, 441, 442, 443, 444, 445, 446, 447], "0145": 442, "0148": 828, "015": [14, 824], "0152": 828, "0155": 422, "0156": [443, 828], "0159": 839, "016": [14, 824, 842], "0163": 668, "0164": 397, "0169": 462, "017": [14, 824], "0177": 824, "018": [824, 842], "0180": [604, 624], "0184": 399, "0185": 828, "0187": 835, "019": [14, 824, 842], "0192": 828, "0197": 857, "01973": 562, "02": [830, 847, 861], "0200": 662, "0201": 824, "0206": 835, "0207": 414, "0217": 668, "0219": 402, "022": 842, "0221": 838, "02216": 725, "0222": 839, "02223635": 839, "023": 14, "0232": 839, "0235": [442, 827], "0239": 412, "025": [391, 859], "0251": 839, "0255": 668, "0256": 839, "026": 14, "0268": [405, 411], "027": 842, "0276": 443, "0278": 665, "028": 842, "0281": 827, "0285": 824, "0287": 856, "0293": 838, "02932914": 838, "02969763": 838, "0297": [649, 650, 838], "03": [830, 833, 861], "030": 14, "0309": [827, 856], "0315": [405, 411], "0318": 827, "0322": 856, "0324": 838, "0331": 824, "0332": [827, 856], "03348": 450, "034": 842, "0340": [824, 862], "0341": 462, "0346": 838, "0353": 827, "0359": 856, "036": 842, "0361": 824, "0365": 835, "03671": 848, "0375": 419, "0376": 442, "03819": 869, "0383": 668, "0386": 693, "038622249776255946": 693, "0387": 835, "0388": 856, "039": 14, "0390": [405, 411], "03d": [824, 832], "03f": 835, "04": [14, 398, 399, 400, 821], "040": 173, "0400": 662, "0401": 404, "0402": 838, "0406": [418, 663], "04133991340612775": 693, "0417": 832, "0420": 856, "0425": 418, "0428": 443, "0429": 824, "043": 136, "043591": 845, "0438": 839, "0442": 828, "0444": 841, "0448": 462, "04486384200747007": 693, "045": 14, "0451": 824, "0454": 838, "0456": 856, "04573": 434, "0460": 857, "0461": 443, "04615204": 839, "0462": 839, "0469": 839, "047": 842, "0470": 443, "0483": 442, "0483e": 346, "04878384701995819": 693, "0489": [824, 839], "0496": 856, "049629338970987646": 693, "04it": 824, "05": [462, 668, 672, 705, 749, 790, 859, 862], "050": 842, "0503": 839, "05059084": 839, "0506": 839, "0510": 668, "05152": 435, "0523": 418, "0527": 402, "05287": 134, "05354099924658973": 693, "0539": [649, 650], "054": [14, 159, 173], "0540": 856, "054016385555202384": 693, "0541": [414, 663, 838], "05412602": 838, "0542": 827, "0543": [405, 411], "0544": [128, 129], "0546": 835, "0551": 857, "0553": 828, "0556": [462, 823], "0558": 839, "0569": 835, "0576": 841, "058": [14, 828, 842], "0580": [418, 439, 440, 441, 442, 443, 444, 445, 446, 447], "0588": 823, "0590": 856, "0591": 118, "059172654879085296": 693, "0592": 835, "0595": 827, "0596": 412, "0597": 835, "05d": [833, 856, 857, 859, 862, 875], "06": [25, 828, 847], "060": 14, "0600": [173, 662], "0602": 838, "0608": 446, "0613": [827, 835], "062": 840, "0629": 835, "0630": 431, "0634": 444, "0635": 841, "0638": 668, "0639": [827, 838], "06394479": 838, "064": 842, "0643": 824, "0645": 856, "0652": 841, "0654": 823, "066": 842, "0668": 841, "0698": 827, "0699": [439, 440, 441, 442, 443, 444, 445, 446, 447], "07": [637, 673, 830, 847], "0702": 838, "0706": 856, "0709": 839, "0711e": 346, "0716": 835, "0724": [128, 129], "07268463": 838, "0727": 838, "0729": 447, "073": [161, 842], "0731": 823, "0734": 838, "074": 14, "0741": 838, "075": [830, 875, 877], "07502571020414439": 693, "0758": 414, "0762": [405, 411], "07623318385650224": 844, "0767": 823, "0769": 823, "077": 14, "0774": 856, "0779": 841, "078": 877, "07816474278491703": 693, "0782": 841, "0783": [405, 411], "0791": 835, "0799": 827, "08": [4, 10, 243, 479], "0800": [662, 838], "0804": [649, 650], "0811": 824, "0812": 663, "082": 842, "0832": 418, "0833": 9, "0835": 402, "0836": 823, "0838": 839, "084": [830, 840, 847], "0845": 443, "0848": [838, 839], "0850": 856, "0852": 833, "08543289788089736": 693, "0857": [418, 649, 650], "086": 14, "0861": 835, "0868": 693, "08680051341900807": 693, "08691420300562658": 693, "08692": 162, "0876": 399, "0877": 838, "08770527": 838, "0878": 841, "0880": [649, 650], "0884": 835, "0888": 425, "0891": 823, "0892": 835, "08983": 869, "08it": 833, "09": [828, 833], "0901": 824, "0902": 859, "0905": 827, "0906": 859, "0908": 859, "0909": 823, "091": 842, "0911194482288028": 693, "0913": [444, 859], "0915": 430, "0916": 859, "0917": [823, 859], "0918": 859, "0919": 859, "0920": [444, 859], "0921": [827, 859], "0922": 859, "0923": 859, "0924": [827, 859], "0926": [827, 835, 859], "0928555079874982": 693, "0929": 859, "0930": 838, "0934": 856, "0935": 412, "0937": 430, "0938": 838, "0945": 827, "0949": 824, "0953": 823, "0961": 835, "0978": 835, "0a0": 833, "0k": [178, 179], "0m": 844, "0mb": 858, "0x7fec820937b8": [698, 744, 784], "0\ubd80\ud130": [786, 793, 794], "0\uc5d0": 786, "0\uc73c\ub85c": 805, "0\uc740": [785, 786], "0\uc744": 786, "0\uc774": [810, 813], "0\uc774\uace0": 786, "0\uc778": 813, "1": [1, 4, 5, 6, 9, 10, 12, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 139, 140, 142, 143, 146, 147, 148, 158, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 177, 183, 184, 186, 189, 190, 192, 195, 197, 198, 205, 207, 210, 212, 214, 215, 217, 224, 225, 227, 228, 229, 230, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 261, 262, 263, 264, 285, 288, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 355, 356, 358, 361, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 478, 479, 480, 481, 482, 503, 506, 507, 544, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 638, 639, 640, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 690, 692, 693, 694, 695, 697, 698, 699, 700, 702, 710, 711, 713, 714, 716, 718, 719, 720, 721, 722, 725, 726, 727, 729, 730, 731, 732, 734, 735, 737, 739, 740, 741, 743, 744, 746, 747, 754, 755, 757, 758, 760, 761, 762, 763, 764, 765, 767, 769, 770, 771, 772, 774, 775, 777, 779, 780, 781, 783, 784, 787, 788, 796, 799, 800, 802, 803, 804, 805, 806, 807, 808, 810, 811, 813, 814, 815, 816, 817, 818, 821, 822, 823, 824, 825, 828, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 844, 845, 849, 852, 853, 856, 857, 858, 864, 867, 869, 874, 875], "10": [4, 5, 6, 9, 10, 14, 20, 26, 130, 134, 135, 137, 142, 145, 146, 147, 149, 155, 159, 161, 163, 166, 168, 169, 171, 173, 174, 180, 182, 185, 187, 188, 192, 193, 195, 210, 212, 214, 217, 218, 244, 292, 293, 298, 299, 301, 302, 303, 308, 309, 310, 311, 315, 316, 317, 321, 339, 342, 343, 344, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 457, 458, 459, 461, 480, 506, 507, 544, 552, 553, 560, 562, 611, 614, 615, 621, 622, 626, 633, 646, 658, 660, 663, 667, 672, 693, 697, 698, 699, 709, 717, 718, 721, 723, 724, 725, 731, 732, 734, 735, 736, 743, 744, 753, 761, 771, 772, 774, 775, 776, 783, 784, 794, 803, 815, 816, 817, 818, 819, 821, 822, 823, 825, 827, 832, 833, 835, 838, 839, 840, 842, 843, 844, 852, 853, 856, 858, 859, 862, 865, 868, 869, 874, 875], "100": [9, 22, 172, 173, 174, 194, 285, 331, 391, 392, 430, 431, 433, 435, 436, 438, 448, 450, 451, 455, 552, 553, 622, 695, 705, 726, 732, 735, 736, 741, 749, 772, 775, 776, 781, 790, 805, 810, 816, 818, 819, 822, 824, 825, 838, 839, 840, 842, 843, 844, 857, 858, 859, 862, 865, 868, 869], "1000": [4, 9, 14, 141, 150, 154, 176, 205, 209, 215, 309, 391, 420, 615, 662, 675, 718, 719, 731, 732, 746, 771, 772, 787, 805, 815, 816, 822, 823, 824, 825, 838, 839, 840, 842, 843, 856, 857, 858, 859, 869], "10000": [14, 132, 133, 144, 147, 170, 171, 174, 183, 195, 838, 839, 844, 857], "100000": 173, "1000000": 238, "1002": 462, "1008": 404, "100950": 835, "100k": 173, "100x100": 171, "101": [184, 331, 436, 438, 703, 788, 838, 839, 862, 869], "1011": 862, "1012": 838, "1014": [128, 129, 838], "10140719": 838, "10150": 161, "102": [331, 436, 438, 822, 838, 839, 858, 862, 869], "1020": 838, "1021": 832, "1022": 562, "1023": [835, 838], "1024": [4, 168, 186, 210, 211, 212, 213, 214, 218, 689, 717, 720, 721, 723, 724, 725, 734, 761, 762, 764, 766, 774, 803, 804, 807, 809, 817, 833, 835, 852, 853, 875], "10240": 290, "1025": 835, "1026": 835, "1028": 856, "103": [822, 838, 839, 840, 862, 869], "1034": 862, "1037097085190507": 693, "1038000": 188, "1039": 665, "104": [838, 839, 857, 862, 869], "1041": 185, "1043998": 786, "1046": 424, "1047": [824, 838], "1048": 823, "105": [838, 839, 842, 862, 869], "1052": 693, "10522806046048205": 693, "10556": [25, 154, 822, 823, 825, 832, 840, 842, 843, 856, 858, 859], "1057": 838, "10574035": 838, "1059": 835, "106": [838, 839, 845, 862, 869], "1060": 172, "1064": 857, "1066": 118, "1069": 838, "107": [838, 839, 862, 869], "1071": 856, "1077": 838, "108": [14, 174, 838, 839, 862, 869], "1083": 663, "1086": 693, "10864079337442234": 693, "1089": 562, "109": [838, 839, 862, 869], "10903": 773, "1092": [149, 832], "1095": 828, "1099": 425, "10it": 833, "10m": 173, "11": [9, 14, 133, 161, 192, 293, 301, 310, 311, 430, 626, 646, 658, 659, 667, 726, 761, 803, 821, 822, 823, 824, 825, 827, 828, 833, 838, 839, 858, 862, 869], "110": [838, 839, 842, 862, 869], "1107": 416, "111": [838, 839, 862, 869], "1112": 832, "1113": 25, "11158102039672668": 693, "1119": [835, 838], "112": [838, 839, 862, 869], "1123": 412, "1124": 839, "1126": 443, "1127": 824, "113": [838, 839, 842, 862, 869], "1131": 856, "1134": 835, "1134649": 786, "1135": 396, "1138": 398, "1139": 462, "114": [181, 726, 822, 830, 838, 839, 842, 847, 862, 869], "1140\uc5b5\uac1c\uc758": 810, "1143": 839, "1144": 841, "11446843700743892": 693, "1145": [134, 163, 173, 430, 693], "114615892": 25, "1149": 838, "115": [838, 839, 842, 862, 869], "1154897249106891": 693, "1155": [412, 693], "1156": 412, "1157": 412, "116": [838, 839, 862, 869], "116213": 835, "11640": [137, 171, 180, 182, 188], "1166": 425, "117": [144, 147, 838, 839, 862, 869], "11701": 192, "11725": 835, "11726": 835, "11758": 188, "1178": [25, 168, 186], "118": [832, 838, 839, 862, 869], "119": [136, 838, 839, 862, 869], "1191": 562, "1192": 832, "1194614": 786, "119834": 835, "11d": 179, "11\ubc88": 803, "11\ubc88\uc5d0\uc11c": 803, "11\uc6d4": 795, "12": [9, 14, 79, 81, 178, 179, 293, 297, 300, 301, 310, 311, 406, 409, 416, 417, 430, 433, 435, 626, 658, 667, 726, 810, 821, 827, 828, 832, 833, 835, 838, 839, 858, 862, 869], "120": [150, 193, 838, 839, 842, 862, 869], "1200": 9, "1203": 701, "1203354": 786, "1205": 827, "120505": 835, "1207": 839, "1209": 396, "121": [175, 827, 838, 839, 840, 859, 862, 869], "122": [838, 839, 862, 869], "1228": 839, "123": [14, 146, 192, 838, 839, 862, 869], "1230": 562, "123151": 835, "12345": [833, 874, 875], "12346": 459, "1237": 824, "123718280": [4, 238], "124": [25, 838, 839, 862, 869], "12403": 303, "1246": 856, "125": [838, 839, 842, 862, 869], "1250": 9, "1257": 838, "126": [14, 153, 838, 839, 862, 869], "1261": 422, "1261310": 238, "1262": 444, "1265": 838, "1265033": 838, "127": [459, 833, 838, 839, 848, 862, 869, 874, 875], "128": [5, 165, 387, 391, 428, 435, 450, 718, 832, 838, 839, 862, 869], "1282": 562, "1283": 396, "12860": 701, "12861": 701, "1289": 562, "129": [838, 839, 856, 859, 862, 869], "1293": 835, "1299": 832, "12k": 195, "13": [9, 135, 165, 194, 293, 301, 310, 311, 615, 658, 821, 824, 827, 830, 832, 833, 835, 838, 839, 840, 858, 862, 865, 867, 869], "130": [178, 179, 838, 839, 842, 862, 869], "1300": 832, "1301": 832, "1302": [832, 838], "1303": 832, "1304": 832, "1306": 838, "13060916": 838, "130622": 25, "1309": 424, "131": [838, 839, 862, 869], "1311": 430, "132": [161, 838, 839, 862, 869], "1323": [649, 650], "1328": 118, "132k": 840, "133": [14, 838, 839, 862, 869], "1330": [431, 839], "134": [838, 839, 862, 869], "1342": 418, "1349": 442, "135": [14, 838, 839, 842, 862, 869], "1353": 663, "136": [25, 145, 838, 839, 862, 869], "1361": [442, 665], "1364": 693, "1364240150959487": 693, "137": [838, 839, 862, 869], "1371": [414, 838], "1372": 856, "1373e": [637, 673], "13752": 25, "1376": 418, "1377": 416, "13774964202156292": 693, "1379": 827, "138": [838, 839, 862, 869], "1384": 835, "1388": 418, "139": [838, 839, 862, 869], "1393": 693, "1393107840629273": 693, "1395": 414, "14": [14, 158, 177, 293, 300, 310, 311, 659, 695, 741, 781, 827, 832, 833, 835, 838, 839, 857, 858, 862, 869], "140": [132, 154, 822, 823, 825, 838, 839, 840, 842, 843, 856, 858, 859, 862, 869], "1403": 839, "1408": 414, "141": [838, 839, 862, 869], "1412": 835, "141442": 191, "1416": [832, 838], "1418": 832, "142": [838, 839, 862, 869], "1425": 838, "1428": 824, "1428571492433548": 120, "1429": 823, "143": [838, 839, 840, 862, 869], "1431": 25, "1433": [154, 822, 823, 825, 840, 842, 843, 856, 858, 859], "1434": 838, "1436": 838, "144": [838, 839, 862, 869], "1440": 424, "145": [25, 838, 839, 842, 862, 869], "1451": 838, "14541": 157, "1458": [649, 650], "145849": 835, "146": [838, 839, 862, 869], "14627522432017592": 693, "147": [163, 822, 838, 839, 862, 869], "14727": 835, "14731": 835, "14735": 835, "1479": [405, 411], "148": [14, 838, 839, 862, 869], "148100": 170, "1489": 838, "149": [838, 839, 862, 869], "1491": 838, "1492": 827, "1495": [838, 862], "14954894": 838, "1496": 430, "15": [4, 9, 14, 25, 151, 164, 177, 210, 212, 214, 217, 218, 293, 303, 308, 310, 311, 315, 316, 406, 409, 506, 655, 658, 668, 706, 717, 726, 810, 822, 827, 828, 838, 839, 840, 842, 843, 844, 845, 848, 858, 862, 869], "150": [838, 839, 842, 862, 868, 869], "1500": 668, "1503": 838, "15032593": 838, "1505": 562, "151": [838, 839, 862, 869], "1512": 856, "1516": 418, "152": [838, 839, 862, 869], "1520": [134, 649, 650, 827], "15218126307872892": 693, "1527": 839, "153": [181, 838, 839, 862, 869], "1533": 562, "154": [827, 838, 839, 862, 869], "1549": 857, "155": [838, 839, 842, 862, 869], "1557019": 134, "1557108": 134, "1559": 416, "156": [25, 167, 838, 839, 845, 862, 869], "1560": 612, "15694736": 786, "157": [159, 838, 839, 862, 869], "158": [14, 822, 838, 839, 842, 862, 869], "159": [838, 839, 862, 869], "1594": [405, 411], "1595": 838, "1596": 839, "1597": 839, "15974175": 839, "15k": [178, 179], "15\u884c\u547d\u540d\u4e3a": 750, "15\uc5d0\uc11c": 791, "16": [165, 168, 172, 183, 186, 195, 346, 447, 448, 449, 450, 451, 452, 453, 462, 554, 669, 702, 706, 726, 746, 787, 810, 821, 822, 824, 825, 827, 828, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 848, 852, 856, 857, 858, 862, 865, 869], "160": [838, 839, 842, 862, 869], "1602": 832, "1603": 869, "1607": 418, "1608499": 835, "161": [14, 838, 839, 847, 862, 869], "1617": 839, "162": [838, 839, 840, 862, 869], "1621": 832, "163": [136, 151, 838, 839, 862, 869], "1632": 835, "1639": 562, "164": [823, 838, 839, 862, 869], "1646": 416, "165": [827, 838, 839, 842, 862, 869], "1650": 827, "165514": 835, "1655987": 835, "1658": 562, "166": [838, 839, 844, 862, 869], "16622": 857, "1664": 185, "1666": [832, 856], "1666944": 835, "1667": 9, "167": [14, 838, 839, 842, 862, 869], "16738734": 786, "1678": 444, "168": [838, 839, 852, 862, 869], "1681403185591509": 693, "1682": 173, "16846068931179736": 693, "1686": 827, "1689": 827, "169": [838, 839, 862, 869], "1690": 400, "1695": 824, "1696": 431, "16974127573016262": 693, "16gb": [14, 726, 810], "16\uc904": 791, "17": [14, 25, 182, 346, 659, 827, 832, 833, 835, 838, 839, 858, 862, 869], "170": [14, 835, 838, 839, 842, 862, 869], "1706": 725, "171": [838, 839, 862, 869], "1710": 773, "172": [701, 702, 746, 787, 838, 839, 840, 862, 869], "1724": 838, "173": [14, 838, 839, 862, 869], "1735": [430, 612], "1739": 832, "174": [838, 839, 862, 869], "1740": 838, "1745": 562, "1749": 838, "175": [702, 746, 787, 838, 839, 842, 862, 869], "1752": [649, 650], "17535": 157, "1758": 862, "17583413999295983": 693, "176": [838, 839, 862, 869], "1761": 857, "177": [838, 839, 862, 869], "178": [838, 839, 862, 869], "1780": 446, "1785": 431, "1789": 443, "179": [14, 838, 839, 862, 869], "1793": 839, "18": [9, 14, 151, 182, 191, 506, 626, 658, 706, 827, 833, 838, 839, 844, 858, 862, 869], "180": [838, 839, 842, 862, 869], "1804": 414, "1806": 562, "1807": 869, "1809": 397, "18098454": 838, "181": [838, 839, 862, 869], "1810": 838, "1818": [562, 615], "182": [14, 838, 839, 842, 862, 869], "1825": 856, "183": [155, 187, 838, 839, 862, 869], "18333": 25, "1835": 418, "1836": 856, "18389137408509248": 693, "1839": 693, "184": [462, 838, 839, 862, 869], "1843": 693, "18431292077750894": 693, "1844": 827, "1847": 430, "1849": 410, "185": [838, 839, 842, 862, 869], "1850": 412, "186": [838, 839, 862, 869], "186100": 137, "18626464175355095": 693, "1865": 838, "187": [701, 838, 839, 862, 869], "1873": 827, "1877": 462, "188": [25, 165, 174, 838, 839, 862, 869], "1888": 838, "18880986": 838, "189": [838, 839, 862, 869], "18th": 182, "18\uc904\uc744": 791, "19": [138, 153, 179, 310, 311, 658, 701, 702, 746, 787, 827, 832, 833, 835, 838, 839, 844, 858, 862, 869], "190": [147, 838, 839, 842, 862, 869], "1901": 838, "1902": 443, "1908": 412, "1909": 828, "191": [838, 839, 862, 869], "19109216": 838, "1911": 838, "19117861103555467": 693, "1919": 835, "192": [838, 839, 852, 862, 869], "1921": 832, "1922": 832, "1925": 408, "192640": 25, "192it": 833, "193": [462, 838, 839, 862, 869], "193011360": 701, "1931": [649, 650], "1932390907048961": 693, "1939": 431, "1939743": 786, "194": [838, 839, 862, 869], "1943": 416, "195": [838, 839, 842, 862, 869], "1951": 562, "1952": 400, "19536": [184, 862], "1954": 665, "196": [462, 838, 839, 862, 869], "19649": 838, "1965": 838, "1966": 431, "197": [838, 839, 862, 869], "19717": [25, 176], "19793": 25, "198": [133, 827, 838, 839, 862, 869], "1983": 838, "1983122": 835, "199": [838, 839, 844, 862, 869], "1996": 444, "19975": 838, "1999": [838, 839], "19990": 838, "19999998807907104": 349, "1_gcn": [830, 856, 861], "1_gnn": [830, 858, 861], "1_graph_classif": [830, 874, 877], "1_introduct": [830, 840, 847], "1_node_classif": [830, 852, 855], "1d": [48, 51, 53, 54, 61, 88, 122, 131, 212, 214, 217, 230, 237, 238, 285, 297, 303, 308, 315, 316, 326, 331, 332, 338, 392, 399, 406, 411, 421, 424, 482, 545, 632], "1e": [4, 10, 243, 430, 434, 435, 479, 725, 726, 810, 822, 856, 858, 859, 862, 869], "1gb": [719, 805], "1k": 865, "1m": 173, "1\u5b57\u7b26\u4e32": 739, "1\u8282": 747, "1\u8282\u4e2d": 763, "1\u8282\u4e2d\u5bf9\u5f02\u6784\u56fe\u7684\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": [772, 775], "1\u8282\u4e2d\u5bf9\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": 772, "1\u8282\u7684gnn\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a": [772, 775], "1\uc5d0": 786, "1\uc740": 786, "1\uc744": 786, "1\uc7a5": 795, "1\uc808\uc758": 788, "1\ucc28\uc6d0": 793, "2": [4, 5, 6, 9, 10, 12, 14, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 146, 147, 159, 161, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 183, 184, 186, 188, 189, 190, 197, 205, 207, 214, 218, 224, 225, 227, 228, 238, 241, 242, 243, 244, 245, 246, 247, 248, 285, 288, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 317, 318, 319, 320, 321, 328, 331, 332, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 355, 356, 361, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 461, 462, 478, 479, 480, 481, 482, 503, 506, 544, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 638, 639, 640, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 690, 693, 697, 698, 700, 703, 705, 706, 707, 709, 710, 716, 717, 719, 721, 722, 723, 724, 726, 727, 731, 734, 736, 737, 743, 745, 746, 747, 749, 750, 751, 753, 754, 755, 760, 761, 763, 764, 765, 766, 767, 771, 774, 775, 776, 777, 783, 786, 787, 788, 790, 791, 792, 794, 796, 802, 803, 805, 806, 807, 808, 809, 810, 811, 815, 817, 819, 820, 821, 822, 823, 824, 825, 828, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 849, 851, 852, 853, 855, 856, 857, 858, 869, 871, 874, 875, 877], "20": [9, 25, 130, 161, 162, 171, 172, 174, 175, 181, 192, 209, 233, 301, 310, 311, 321, 406, 409, 415, 417, 420, 422, 432, 433, 434, 435, 443, 444, 554, 611, 621, 622, 626, 633, 652, 658, 659, 669, 671, 672, 699, 701, 732, 734, 735, 736, 772, 774, 775, 776, 816, 817, 818, 819, 821, 822, 824, 827, 830, 833, 838, 839, 840, 842, 843, 844, 858, 859, 862, 865, 868, 869], "200": [200, 331, 562, 699, 785, 823, 828, 838, 839, 842, 862, 869], "2000": [4, 9, 126, 248, 675, 824, 838], "20000": [838, 857], "2002": [118, 134, 167, 412], "2003": [146, 147, 169, 174, 195], "2005": 161, "2008": 162, "200\uac1c": 785, "201": [331, 838, 839, 862, 869], "2010": 442, "2011": 434, "2013": 838, "2014": 181, "2015": [135, 136, 412, 821, 862], "2016": [151, 152], "2017": [822, 824, 832, 833, 835, 838, 839, 842], "2018": [164, 166, 562, 693, 835, 842], "20181320245665535": 693, "2019": 821, "202": [331, 838, 839, 862, 869], "2020": [824, 832, 835, 838, 839], "2020\u5e749\u6708": 754, "2021": 832, "2021\ub144": 795, "2022": [832, 835, 838, 839, 856], "2023": [212, 297, 303, 315, 567, 833], "2024": [832, 835, 838, 839], "203": [838, 839, 862, 869], "2030": 832, "2036": 838, "204": [838, 839, 862, 869], "20466": 157, "2048": 451, "205": [701, 702, 746, 787, 838, 839, 862, 869], "2053": [439, 440, 441, 442, 443, 444, 445, 446, 447], "2054": 835, "206": [838, 839, 845, 862, 869], "2062": 462, "207": [462, 832, 838, 839, 862, 869], "208": [462, 838, 839, 840, 862, 869], "2080": 446, "2085": 408, "209": [173, 462, 838, 839, 862, 869], "2095": 412, "20gb": 233, "20x10": 868, "21": [14, 162, 310, 311, 626, 701, 827, 828, 832, 833, 835, 838, 839, 858, 862, 869], "210": [184, 838, 839, 862, 869], "2101": 408, "2102": [413, 435], "2104": 162, "2106": 418, "2108": 450, "211": [177, 838, 839, 862, 869], "2110": 562, "212": [838, 839, 862, 869], "21209": 25, "2125": [418, 827], "213": [462, 838, 839, 862, 869], "2134": 414, "2136": 443, "21394654203489705": 693, "214": [838, 839, 862, 869], "21474836480": 233, "215": [838, 839, 862, 869], "2154": 430, "2155": 839, "2159": [403, 857], "216": [161, 192, 822, 838, 839, 862, 869], "2162it": 833, "2167": 431, "217": [838, 839, 862, 869], "217073": 185, "2178": 419, "218": [838, 839, 862, 869], "2182": 412, "219": [838, 839, 862, 869], "21937428942781778": 693, "2194": 447, "21st": 862, "22": [14, 25, 827, 830, 838, 839, 858, 861, 862, 869], "220": [462, 838, 839, 862, 869], "2208": 810, "2209": 810, "221": [832, 838, 839, 862, 869], "22131880861864428": 693, "22155005": 786, "2216": 431, "222": [838, 839, 862, 869], "2222": 9, "2228": 856, "2229": 838, "22296293": 701, "223": [838, 839, 862, 869], "2235": 430, "2239689": 835, "224": [838, 839, 862, 869], "2240": 396, "2245": 25, "225": [462, 838, 839, 862, 869], "226": [838, 839, 862], "2260098": 835, "2262": 832, "2265": 839, "22662": 182, "227": [838, 839, 862], "2272": 418, "2275": 839, "2276": 832, "2277": [149, 832], "228": [14, 838, 839, 862], "2282": 446, "2284": 462, "2289": 396, "229": [838, 839, 862], "2291": [442, 443], "23": [181, 195, 398, 399, 400, 701, 702, 705, 746, 749, 787, 790, 827, 833, 838, 839, 862, 869], "230": [562, 838, 839, 862], "2302": [137, 171, 180, 182, 188], "2303": 418, "23033": [25, 166], "2304": 25, "231": [838, 839, 862], "2310": 303, "23142237259162102": 693, "232": [163, 181, 838, 839, 862], "2324": 442, "2326": 416, "232965": 25, "233": [838, 839, 840, 862], "2330": 462, "23368113896545695": 693, "2337": 693, "2338": 396, "234": [462, 838, 839, 862], "2340": [398, 827], "2342": 408, "2347": 408, "2348": 431, "235": [838, 839, 862], "2351": [439, 440, 441, 442, 443, 444, 445, 446, 447], "236": [838, 839, 862], "2360": 447, "2362": 430, "2363": 444, "23682038840665198": 693, "237": [157, 838, 839, 862], "2370": 397, "2372": [175, 859], "2373": 562, "2375": 827, "238": [136, 838, 839, 862], "2384": 410, "2387": 414, "239": [462, 838, 839, 862], "24": [166, 175, 438, 626, 652, 827, 833, 835, 838, 839, 859, 862, 869], "240": [25, 166, 462, 838, 839, 862], "2402": 848, "2408": 562, "2409": 835, "241": [838, 839, 862], "2415": 827, "2417": 440, "242": [838, 839, 862], "2426": [439, 440, 441, 442, 443, 444, 445, 446, 447], "2428": 839, "24285506608575758": 693, "243": [838, 839, 862], "2432": 134, "2433": 838, "244": [25, 824, 838, 839, 862], "2441": 832, "2449029": [4, 238], "24492": 137, "245": [135, 177, 838, 839, 862], "2450": 431, "2451": 413, "2455": 856, "246": [838, 839, 862], "2467": [462, 832, 857], "2469": 418, "247": [152, 838, 839, 862], "2472495901894738": 693, "2473": 419, "248": [838, 839, 862], "2481": 403, "2485": 839, "2486": 824, "2487": 827, "2489": 838, "249": [838, 839, 862], "2496": 185, "2497": 430, "25": [9, 147, 161, 406, 409, 437, 438, 462, 551, 697, 698, 743, 744, 783, 784, 822, 824, 827, 838, 839, 840, 842, 843, 844, 852, 853, 857, 862, 869], "250": [160, 462, 824, 838, 839, 862], "2500": [9, 615, 827, 838], "250014": 838, "2502": 425, "250k": 195, "251": [193, 838, 839, 862], "2513": 431, "2515": 838, "25177597999572754": 243, "252": [838, 839, 862], "2524": 418, "253": [838, 839, 862], "2530": [665, 838], "25301316": 838, "2533": 430, "253458867276219": 693, "254": [838, 839, 862], "2541": 562, "2545": 832, "255": [832, 838, 839, 840, 852, 862], "2556": 462, "256": [725, 726, 810, 823, 824, 832, 833, 838, 839, 842, 852, 853, 862, 875], "257": [14, 838, 839, 862], "258": [838, 839, 862], "2584": 827, "259": [838, 839, 862], "2594": 856, "2597": 431, "26": [165, 827, 832, 833, 835, 838, 839, 862, 869], "260": [838, 839, 862], "2607": 431, "261": [838, 839, 858, 862], "2610": 832, "2611": 431, "262": [159, 838, 839, 862], "2622": 430, "263": [838, 839, 862], "2638": 430, "264": [838, 839, 862], "2643": 430, "2644": [418, 431], "2649": 430, "26499036865016423": 693, "265": [838, 839, 862], "2650": 693, "2652": 439, "2654": [416, 442, 462], "2656726": 838, "2657": 838, "2658": 431, "2659": 462, "266": [830, 838, 839, 862, 868, 871], "2663": 431, "2669": 410, "267": [462, 838, 839, 862], "2675": 430, "268": [838, 839, 862], "2681": 838, "2684": 431, "2687": 562, "2688": [405, 411], "2689": [604, 624, 827], "269": [838, 839, 862], "2695": [649, 650], "27": [25, 633, 827, 838, 839, 862, 869], "270": [838, 839, 862], "2700": [827, 856], "2703": 442, "2704": 856, "27065837": 838, "2707": 838, "2708": [25, 154, 822, 823, 825, 832, 840, 842, 843, 856, 858, 859], "2709": [439, 440, 441, 442, 443, 444, 445, 446, 447], "271": [462, 838, 839, 862], "2716": 431, "27163": 170, "2719": 422, "272": [170, 838, 839, 862], "2721": [128, 129], "272115": 157, "273": [838, 839], "2730008213674695": 693, "2733": 430, "2736": 827, "2738": [430, 431], "274": [838, 839], "27427226": 838, "2743": [440, 838], "2746": 839, "275": [838, 839], "2751": 857, "2757": 418, "276": [838, 839], "2766": [649, 650], "277": [163, 838, 839], "2775": 118, "278": [838, 839], "2780": 431, "2783258": 163, "2783370": 163, "2786": 857, "2787": 462, "2789": 462, "279": [838, 839], "2790563": 839, "2791": 839, "2794": 430, "2796588354307046": 693, "2797": 419, "28": [9, 169, 195, 429, 827, 828, 835, 838, 839, 843, 862, 869], "280": [838, 839], "2800": 838, "2802": 827, "2807": 827, "281": [838, 839], "2819": 827, "282": [838, 839], "282119": 845, "2823": [431, 562], "2826": 665, "2828": [437, 551], "283": [822, 838, 839, 844], "28357022069634585": 693, "28367647637469273": 693, "284": [25, 838, 839], "2841": 827, "2845084071159363": 843, "285": [838, 839], "2852": 408, "2855": 414, "286": [838, 839], "2863627767733977": 693, "2864": 693, "2867": 841, "287": [838, 839], "287326": 25, "2874": 841, "2875": 838, "2876": 431, "288": [164, 822, 838, 839], "2882": 462, "2887": 838, "28872835": 838, "289": [838, 839], "2898": 838, "29": [144, 195, 626, 701, 702, 746, 787, 827, 828, 838, 839, 861, 862, 869], "290": [838, 839], "29000": 869, "2907": 838, "2908": 431, "291": [838, 839], "2918": 562, "292": [838, 839], "2927": 462, "293": [838, 839], "294": [838, 839], "295": [838, 839], "29501": 848, "2953": 833, "2956": 839, "29564598": 839, "296": [824, 838, 839], "2962": 430, "29660083": 786, "297": [830, 838, 839, 858, 861], "2976": 431, "2978": 856, "298": [155, 178, 179, 838, 839, 842], "2982": 838, "299": [838, 839, 842], "2994": [419, 443], "2_capsul": [830, 868, 871], "2_dglgraph": [830, 841, 847], "2_link_predict": [830, 853, 855], "2_node_classif": [830, 875, 877], "2_small_graph": [830, 864], "2a240410": [832, 835, 838, 839], "2d": [297, 345, 392, 399, 421, 424, 455, 573], "2gb": [726, 810], "2k": 637, "2motif": 141, "2x3": 31, "2xlarg": 14, "2\uac1c\uc758": 786, "2\ub97c": 797, "2\ubc88\uc9f8": 803, "2\uc7a5": [795, 815, 819], "3": [4, 5, 6, 9, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 142, 143, 161, 169, 172, 173, 174, 176, 178, 179, 183, 190, 197, 205, 207, 210, 212, 213, 214, 217, 218, 224, 225, 227, 228, 238, 241, 242, 243, 244, 245, 246, 247, 248, 285, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 315, 317, 318, 319, 321, 328, 332, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 355, 356, 361, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 478, 479, 480, 481, 503, 506, 507, 544, 551, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 578, 579, 581, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 639, 640, 644, 645, 646, 647, 649, 650, 651, 655, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 671, 673, 674, 675, 681, 682, 683, 684, 685, 690, 693, 697, 700, 703, 705, 707, 708, 709, 710, 711, 716, 718, 719, 722, 725, 726, 731, 734, 736, 737, 743, 744, 747, 749, 751, 752, 753, 754, 755, 760, 761, 767, 771, 774, 776, 777, 783, 784, 786, 788, 790, 792, 793, 794, 796, 802, 803, 810, 811, 815, 817, 819, 821, 823, 825, 827, 832, 833, 835, 838, 839, 840, 841, 843, 844, 845, 849, 856, 857, 858, 869], "30": [25, 166, 181, 301, 406, 409, 417, 429, 457, 458, 462, 611, 621, 622, 626, 633, 726, 810, 822, 827, 832, 835, 838, 839, 840, 842, 843, 859, 862, 869], "300": [137, 142, 143, 159, 182, 192, 194, 838, 839], "3000": [4, 126, 248, 562, 662, 731, 771, 815, 869], "3001": 838, "3003": [827, 869], "30050": [702, 746, 787, 852, 853], "301": [180, 838, 839], "30113813281059265": 843, "302": [838, 839], "3020": 439, "3025": [405, 411], "3027939452162367": 693, "3028": 693, "303": [838, 839], "3030": [649, 650, 839], "3039": [430, 827], "304": [164, 838, 839], "305": [161, 838, 839], "3053": 403, "3056": 857, "3058": 835, "306": [832, 838, 839], "3063": 418, "3068": 824, "307": [832, 838, 839], "307080": 180, "3078": 442, "308": [159, 832, 838, 839], "3080": 419, "3081": 838, "3082": 824, "3085": 857, "3086": 838, "30864018": 838, "30887613": 839, "3089": 839, "309": [838, 839], "30k": 869, "30x": 848, "31": [118, 119, 164, 166, 701, 702, 708, 746, 752, 787, 793, 828, 833, 838, 839, 862, 869], "310": [159, 838, 839], "3105": 443, "311": [153, 838, 839], "312": [838, 839], "3126": 462, "3129": 827, "313": [838, 839], "31328748118329997": 693, "3134": [439, 440, 441, 442, 443, 444, 445, 446, 447], "3135": 431, "314": [159, 838, 839], "3143": 835, "3148": [693, 862], "3148264185956532": 693, "315": [838, 839, 840], "316": [838, 839, 842], "3161154827254189": 693, "3163": 425, "3167": 841, "3168": [649, 650], "3169": 827, "317": [14, 838, 839], "3174": [649, 650], "318": [838, 839], "31811028718948364": 843, "3183": 838, "3189": 443, "319": [838, 839, 842], "3191": 413, "3199": 827, "32": [25, 146, 163, 172, 207, 341, 392, 420, 450, 462, 694, 708, 740, 752, 780, 793, 821, 828, 832, 835, 838, 839, 862, 869, 874], "320": [838, 839], "3201": 838, "3203": 444, "321": [838, 839], "3212": 827, "3216": 838, "3219496197945605": 693, "322": [838, 839], "323": [838, 839], "3231": 443, "3235": 447, "324": [838, 839], "3246e": [637, 673], "325": [187, 838, 839], "3250": 857, "326": [838, 839], "3260": 839, "327": [838, 839], "327576": 25, "328": [838, 839], "3280": 856, "32875548": 838, "3288": 838, "329": [838, 839], "3292": 838, "3295": 399, "32it": 833, "32x": 848, "33": [611, 626, 827, 838, 839, 844, 859, 862, 869], "330": [165, 838, 839], "3303": 424, "3304": 427, "331": [838, 839], "3311": 838, "3316": 426, "332": [838, 839], "33234211884156384": 693, "3324": 838, "33242067": 838, "3326": 419, "3327": [25, 150], "3328": 838, "33284655": 838, "333": [151, 822, 838, 839], "3330": [439, 440, 441, 442, 443, 444, 445, 446, 447], "3333": [9, 361, 576, 577, 602, 661], "33391": 134, "334": [838, 839], "3342": 418, "3344": 838, "3346": [649, 650], "335": [838, 839], "3351322412490845": 843, "3352": 838, "336": [838, 839], "3364": 418, "337": [838, 839], "3371": 414, "338": [838, 839], "3381872773170471": 479, "339": [838, 839], "33907264": 838, "3391": [810, 838], "33929432608774135": 693, "3394": [810, 856], "34": [25, 152, 166, 167, 838, 839, 845, 862, 869], "340": [838, 839], "3400": 612, "341": [838, 839], "3419": 824, "342": [838, 839], "34270118": [700, 701], "343": [838, 839], "3439899477636117": 693, "344": [822, 838, 839], "3447": 418, "34493": 25, "344k": 857, "345": [14, 158, 838, 839], "3455": [649, 650], "346": [838, 839], "3462": 416, "3466": 408, "3468": [462, 827], "347": [838, 839], "3475": 827, "348": [838, 839], "34846782265758314": 693, "3485": 839, "3489": 665, "349": [838, 839], "3497": 419, "34it": 833, "35": [145, 147, 174, 822, 832, 838, 839, 840, 842, 843, 862, 869], "350": [142, 838, 839], "3504": [856, 859], "35076354": 786, "351": [161, 838, 839], "3514": 410, "3516": 402, "3518787622451782": 843, "352": [838, 839], "3523777809254057": 693, "353": [822, 838, 839], "354": [838, 839], "3541": 419, "355": [838, 839], "3551": 857, "356": [172, 838, 839], "3569": 414, "357": [838, 839], "358": [838, 839], "359": [14, 838, 839], "36": [132, 838, 839, 862, 869], "360": [838, 839], "361": [838, 839], "36101": 149, "3612": 856, "3616": 857, "362": [838, 839], "3623": 413, "363": [838, 839], "3630": 838, "3637": [439, 440, 441, 442, 443, 444, 445, 446, 447], "364": [838, 839], "3643": [462, 838], "3644": 839, "3648": 134, "365": [838, 839], "3658": 410, "366": [838, 839], "3661": 827, "3664": 397, "36649684241348557": 693, "3665": [447, 693], "3667": 835, "3669": 841, "367": [838, 839], "3671": 835, "3672": [118, 839], "3675": 835, "36786902637778773": 693, "368": [838, 839], "3683": 827, "36847004294395447": 843, "3685": 403, "369": [838, 839], "36mb": 865, "37": [155, 187, 195, 838, 839, 862, 865, 869], "370": [838, 839], "3700": 412, "370293": 845, "3703": 150, "371": [838, 839], "3717": 419, "372": [838, 839], "3726": 838, "37262542": 838, "373": [14, 838, 839], "3733": 862, "3736": 462, "3737": 444, "373k": 858, "374": [838, 839, 844], "37407622": 838, "3741": 838, "375": [838, 839], "3756": 827, "3758": 399, "376": [838, 839], "377": [838, 839], "3770": 612, "3772": 462, "378": [838, 839], "3781": 418, "3785": 832, "379": [14, 838, 839], "3790": 832, "3793": 832, "3796": 217, "38": [838, 839, 844, 862, 869], "380": [838, 839], "3801": 841, "3803": 413, "3805": [405, 411], "3808": [649, 650], "3809": 418, "381": [838, 839], "382": [838, 839], "3820": 443, "3821": 838, "3822": 839, "38220632": 839, "3825": [405, 411], "383": [838, 839], "384": [164, 838, 839], "3840": 118, "3847": 418, "38485267758369446": 843, "385": [838, 839], "3854": 838, "386": [838, 839], "3860": 857, "3863": 857, "3866": 425, "387": [838, 839], "3870": 835, "3871": [835, 838], "38712457": 838, "3872": [649, 650, 835, 838], "3873": 835, "3874": 835, "388": [822, 830, 838, 839, 865, 867], "3883": 858, "389": [822, 838, 839], "3891": [439, 440, 441, 442, 443, 444, 445, 446, 447], "3892": 838, "3893": [418, 827], "3894": 838, "39": [25, 163, 195, 462, 626, 832, 833, 835, 838, 839, 862, 869], "390": [838, 839], "3901": 839, "39014279": 839, "391": [838, 839, 840], "39161865931662243": 693, "392": [838, 839], "3924": 835, "393": [828, 838, 839], "3934": [649, 650], "3938": 665, "394": [838, 839], "3943": [405, 411], "395": [838, 839], "39534097273254654": 693, "3958": 838, "396": [838, 839], "397": [838, 839, 862], "3972": 827, "3976": 838, "3977": 856, "398": [828, 838, 839, 840], "3981": 838, "3985": 462, "3986": 838, "399": [828, 838, 839], "3996": 424, "39979757": 838, "3998": 838, "39it": 833, "3_generative_model": [830, 867], "3_message_pass": [830, 842, 847], "3_tree": [830, 862, 864], "3d": [179, 345, 436, 438, 448, 450, 451, 455, 573], "3e": 823, "3f": [822, 823, 825, 832, 840, 842], "3mb": [844, 862], "3x3": 827, "3\uac00\uc9c0": [781, 783, 807], "3\uac1c\uc758": [797, 806], "3\ub2e8\uacc4\ub85c": 813, "3\uc7a5": [795, 808, 815, 819], "4": [4, 5, 9, 12, 14, 20, 21, 22, 26, 27, 30, 34, 35, 36, 37, 46, 47, 51, 55, 56, 58, 60, 61, 73, 74, 75, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 107, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 132, 142, 143, 148, 172, 173, 195, 209, 210, 211, 212, 213, 214, 215, 217, 218, 227, 228, 238, 241, 242, 243, 244, 248, 285, 292, 293, 297, 298, 299, 300, 301, 302, 303, 308, 317, 318, 319, 321, 328, 332, 338, 339, 341, 342, 343, 344, 345, 347, 348, 349, 355, 361, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 452, 453, 454, 455, 456, 457, 458, 460, 462, 478, 479, 480, 507, 544, 551, 559, 560, 561, 564, 566, 567, 568, 571, 573, 578, 579, 581, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 614, 615, 616, 617, 618, 621, 622, 623, 624, 626, 630, 633, 634, 637, 644, 646, 647, 649, 650, 651, 660, 662, 663, 665, 667, 668, 671, 673, 674, 685, 697, 698, 701, 702, 703, 706, 707, 708, 709, 710, 716, 718, 719, 723, 725, 726, 731, 736, 737, 744, 745, 746, 747, 750, 751, 752, 753, 754, 760, 762, 764, 766, 771, 776, 777, 783, 784, 786, 788, 791, 792, 793, 794, 796, 802, 804, 807, 809, 810, 815, 819, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 840, 841, 843, 845, 849, 852, 853, 858, 861, 862, 868, 869], "40": [138, 147, 159, 342, 387, 462, 621, 626, 822, 835, 838, 839, 840, 842, 843, 858, 862, 869], "400": [622, 699, 785, 830, 838, 839, 865, 869], "4000": [173, 824, 827], "4000000": 210, "40053439140319824": 843, "4007": 462, "4008": 838, "400\uac1c\uc758": 785, "401": [838, 839], "40125702": 838, "4013": 838, "402": [838, 839], "4022": 412, "4028": 810, "403": [838, 839], "4033": 838, "404": [838, 839], "4042": [443, 838], "405": [838, 839], "4053": 839, "40559906615287566": 693, "406": [562, 822, 838, 839], "4063": 418, "4069": 827, "407": [838, 839], "40707309111756307": 693, "408": [838, 839], "40809795": 839, "4081": 839, "4081642382536248": 693, "4088": 858, "409": [838, 839, 842], "40943": 191, "4096": 418, "40mb": 840, "41": [159, 191, 828, 838, 839, 862, 869], "410": [168, 186, 822, 838, 839], "4102": 839, "4102c744bb9d6fd7b40ac67a300e49cd87e28392": [695, 741, 781], "4104": 147, "411": [838, 839], "4111": [439, 440, 441, 442, 443, 444, 445, 446, 447], "41127": 138, "4119": 841, "412": [838, 839, 842], "4120": 856, "4122": 833, "4126": 418, "413": [838, 839], "4130": 839, "4131": 841, "414": [838, 839, 842], "415": [152, 838, 839], "41516080644186737": 693, "41527155506593394": 693, "415742963552475": 843, "416": [838, 839], "4166": 858, "4167": 9, "417": [838, 839], "418": [838, 839], "419": [14, 838, 839], "4192": 839, "41922974": 839, "4194": 862, "4197669213305396": 693, "41it": 833, "42": [25, 198, 824, 838, 839, 862, 869], "420": [838, 839], "421": [838, 839], "4216530595907526": 693, "4217": 858, "422": [838, 839], "4220": 462, "4221": 419, "42222014": 786, "4228": 858, "423": [838, 839], "424": [830, 838, 839, 843, 847], "4246": 827, "4249": [439, 440, 441, 442, 443, 444, 445, 446, 447], "425": [838, 839], "4259": 838, "426": [838, 839, 842], "4268": 693, "4268254673041745": 693, "427": [838, 839], "4273": 412, "42746301": 838, "4275": 838, "4279": 418, "428": [838, 839], "4281": 856, "429": [838, 839], "4293": 824, "42988138237505735": 693, "4299": 693, "43": [705, 749, 790, 838, 839, 862, 869], "430": [838, 839], "4300": 827, "4303": 858, "431": [181, 192, 838, 839], "4316782057285309": 843, "4318": [649, 650], "432": [14, 838, 839], "4323": 424, "4325": [128, 129], "4327": 858, "4328": 838, "433": [838, 839], "4331": 399, "4334": 839, "4335": 399, "4337": [295, 303, 308, 336, 337], "4338": 446, "434": [838, 839], "4346": 827, "4349": [439, 440, 441, 442, 443, 444, 445, 446, 447], "435": [838, 839], "436": [838, 839], "437": [838, 839], "4370": 839, "4376": 856, "438": [838, 839], "439": [838, 839], "44": [174, 827, 828, 833, 838, 839, 862, 869], "440": [838, 839], "4400": 173, "4406": 839, "4407": 833, "441": [832, 838, 839], "442": [838, 839], "443": [838, 839], "4433": 838, "4435": 838, "44353463": 838, "4439": 839, "444": [832, 838, 839, 862], "44412796119211184": 693, "445": [14, 838, 839], "4451": [649, 650], "4457": 824, "4458": 418, "446": [838, 839], "4465": 414, "4466927945613861": 843, "447": [838, 839], "4470617033458436": 693, "4474": 838, "44744186": 838, "448": [838, 839], "4482": 419, "449": [832, 838, 839], "4497": 444, "45": [163, 462, 822, 838, 839, 840, 842, 843, 845, 848, 862, 869], "450": [822, 838, 839], "4500966": 869, "4504": 838, "4506": 838, "4508": 665, "451": [838, 839], "4511": 446, "4516": 838, "452": [838, 839], "4523600060547709": 693, "453": [838, 839], "4534": [839, 858], "454": [838, 839], "4540420819490587": 835, "4542": [418, 462], "45441619816038514": 693, "4546": 838, "455": [838, 839], "456": [149, 838, 839], "457": [14, 838, 839], "4570": [405, 411, 810], "4572": 824, "4574": 838, "458": [838, 839], "459": [838, 839], "4590": 462, "4598": 827, "45999781": 838, "46": [430, 828, 838, 839, 862, 869], "460": [838, 839], "4600": [173, 838], "4604": 839, "4609": 810, "461": [838, 839], "4613": 827, "462": [838, 839], "4620": 462, "4623": 858, "4629": [128, 129], "463": [838, 839], "4630": 462, "4631": 419, "464": [159, 838, 839], "4640355408191681": 843, "4642": 858, "4646": 839, "46464033": 839, "4647410679872376": 693, "465": [838, 839], "4652": 418, "4653": [444, 841], "4654086994009452": 693, "4656": 827, "466": [832, 838, 839], "4664": 118, "467": [838, 839], "4673": 419, "4677": 838, "4679": 858, "468": [838, 839], "4682": 414, "4684": [824, 862], "469": [838, 839], "4692371689047904": 693, "4693": 839, "4693008": 839, "4698": 399, "47": [430, 562, 626, 838, 839, 844, 862, 869], "470": [838, 839], "4707": 838, "471": [838, 839], "472": [822, 838, 839, 840], "4721": 824, "47224962583565544": 693, "473": [838, 839], "4731": 665, "47382": [168, 186], "474": [161, 838, 839], "4748": 827, "475": [838, 839], "4755": [439, 440, 441, 442, 443, 444, 445, 446, 447], "4756": 693, "47562693094002173": 693, "476": [838, 839], "4760": 442, "4762": 440, "477": [838, 839], "4770": 413, "4770019763881086": 693, "478": [14, 828, 838, 839, 842], "4780": 839, "4782": 827, "479": [838, 839], "47941": 835, "4797": 402, "48": [430, 838, 839, 862, 869], "480": [838, 839], "4800": 173, "4801": [405, 411], "4805": 412, "481": [822, 838, 839], "4814": 856, "48150": 835, "4817": 462, "482": [838, 839], "4821": 414, "483": [838, 839], "483142": 158, "4837": 439, "484": [838, 839], "4842": 841, "4847": 418, "485": [838, 839], "4854": 824, "4858": 833, "486": [163, 838, 839, 840], "4861": 839, "4862": 827, "4865": 858, "4869": 839, "487": [14, 838, 839, 840, 842], "4870": 858, "4877684414386749": 843, "4879": 841, "488": [838, 839], "48810": [132, 857], "4884": 174, "4885": 444, "4888": 4, "489": [822, 838, 839], "48921": 180, "4893": 858, "4895": 839, "48m": 844, "49": [25, 430, 838, 839, 862, 869], "490": [828, 838, 839], "49037522512771525": 693, "4904": 444, "4909": 693, "490938012147181": 693, "491": [135, 828, 838, 839], "4910e": 346, "4919": 838, "492": [181, 838, 839], "4921e": 346, "4923": 839, "493": [152, 838, 839], "493888090726854": 693, "49397782380750765": 693, "494": [838, 839], "4940": [444, 693], "4948": 418, "495": [14, 152, 838, 839], "4950": 856, "4954": [649, 650], "496": [838, 839], "4962": 839, "4964": 824, "497": [838, 839], "4977": [444, 827], "498": [838, 839], "4982": 862, "4983": 824, "499": [838, 839], "4994": 824, "4_link_predict": [830, 843, 847], "4_old_win": [830, 871], "4_rgcn": [830, 857, 861], "4d": 179, "4f": [824, 833, 856, 857, 858, 859, 862, 874, 875], "4kib": 334, "4m": [210, 719, 805, 844], "4part_data": [852, 853], "4th": 726, "4\u6761\u8fb9": 750, "4\uac00\uc9c0": 782, "4\uac1c\uac00": 790, "4\uac1c\uc758": [793, 815], "4\uc7a5": [795, 815, 817, 819], "5": [4, 5, 6, 9, 12, 14, 20, 22, 26, 27, 28, 34, 35, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 107, 113, 114, 115, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 137, 142, 143, 145, 146, 147, 148, 149, 152, 155, 156, 159, 161, 163, 172, 173, 174, 178, 184, 185, 187, 193, 197, 200, 205, 210, 212, 214, 217, 218, 227, 228, 241, 243, 244, 248, 290, 292, 293, 297, 298, 299, 300, 301, 302, 303, 308, 315, 316, 317, 318, 321, 328, 331, 337, 338, 339, 342, 343, 344, 345, 346, 348, 355, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 461, 479, 480, 506, 507, 544, 551, 555, 556, 560, 561, 562, 565, 566, 567, 568, 569, 573, 578, 579, 598, 605, 611, 612, 614, 616, 617, 618, 619, 623, 630, 632, 633, 634, 644, 646, 647, 649, 650, 651, 652, 655, 658, 659, 660, 662, 663, 665, 667, 668, 671, 672, 685, 687, 689, 690, 693, 695, 697, 698, 700, 703, 704, 705, 706, 707, 708, 710, 711, 716, 717, 718, 719, 720, 721, 724, 726, 729, 737, 741, 744, 746, 747, 748, 749, 750, 751, 752, 754, 755, 760, 761, 764, 766, 769, 771, 777, 781, 784, 787, 788, 789, 790, 791, 792, 793, 796, 802, 803, 807, 809, 810, 813, 815, 821, 822, 823, 824, 825, 827, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 844, 845, 858, 859, 862, 865, 868, 869, 874, 875], "50": [146, 171, 174, 175, 181, 430, 436, 438, 462, 552, 562, 626, 822, 838, 839, 840, 842, 843, 856, 858, 859, 862, 869], "500": [150, 154, 160, 176, 705, 731, 732, 749, 771, 772, 790, 815, 816, 822, 823, 825, 838, 839, 840, 842, 843, 844, 856, 858, 859, 868], "5000": [4, 9, 25, 126, 191, 248, 361, 394, 395, 429, 482, 554, 562, 576, 577, 598, 602, 615, 661, 669, 731, 771, 815, 827], "50000": [14, 146, 158], "500000": 210, "5008": 858, "500k": 210, "501": [838, 839, 842], "5010": 824, "5011": 414, "502": [838, 839], "5022": 838, "5023": 841, "503": [838, 839], "5030": 418, "5033": 838, "5034": 810, "5039": 810, "504": [838, 839], "5041": [405, 411], "5042": 422, "505": [838, 839], "5053": 397, "5054": 440, "5058194994926453": 843, "506": [838, 839], "5065": [649, 650], "507": [838, 839], "508": [838, 839], "5088": 858, "509": [838, 839, 859], "5096": 839, "5097": 462, "51": [193, 430, 830, 838, 839, 862, 869], "510": [838, 839], "510989": 838, "511": [838, 839, 842], "5110": 838, "5113": 838, "5117": 665, "512": [448, 451, 687, 689, 838, 839, 862], "5121": 858, "513": [838, 839], "514": [838, 839], "5142": 462, "515": [193, 838, 839], "5159": 414, "516": [838, 839], "5160": 838, "51668546": 838, "5167": 838, "5169": 418, "517": [838, 839], "5171": [649, 650], "5178": 838, "518": [838, 839], "5182": [649, 650], "519": [838, 839], "5191278830882644": 693, "51915": 835, "5192": 402, "5194": 827, "5197": [439, 440, 441, 442, 443, 444, 445, 446, 447, 649, 650, 693], "5197462471155317": 693, "5199": 838, "52": [430, 824, 828, 838, 839, 862, 869], "520": [838, 839], "52000000": 238, "5201": 185, "521": [838, 839], "5215": 427, "5217": 429, "522": [838, 839, 842], "5221": [444, 462], "5227": 693, "5227112950269823": 693, "523": [838, 839], "5230": 827, "5236": 414, "5237": 444, "524": [14, 822, 838, 839], "5243": 422, "5245": 838, "525": [838, 839], "5251800239734318": 693, "5259": [402, 839], "52590955": 839, "526": [838, 839, 840], "5266": 414, "527": [838, 839], "5273": 858, "5278": [439, 440, 441, 442, 443, 444, 445, 446, 447], "528": [838, 839], "5282": 839, "5285": 856, "5286": 410, "5287": 419, "529": [217, 838, 839, 859], "529195480661293": 693, "5297": [649, 650], "5299": 824, "52it": 833, "53": [14, 430, 828, 838, 839, 862, 869], "530": [838, 839, 842], "5301": 839, "5303": [649, 650], "5306": 444, "531": [838, 839], "5312": 462, "5314": 838, "5315": 839, "5315022": 839, "5318": 827, "532": [838, 839], "5322": 447, "5327": 402, "5328": 827, "533": [838, 839, 842], "5333": 9, "534": [838, 839], "5340": 856, "5341": 824, "534389317035675": 843, "5345": 827, "5347": [405, 411], "5348": 693, "534822233529295": 693, "535": [838, 839, 842], "5352": 422, "5357": 824, "536": [838, 839, 842], "5365": 693, "5365210052235699": 693, "537": [838, 839], "5376": 841, "538": [838, 839], "539": [838, 839], "5395": 838, "5396": 856, "5398": 425, "54": [430, 830, 838, 839, 844, 847, 862, 869], "540": [838, 839], "5400687466285844": 693, "5401": 693, "5406": 623, "5409": 824, "541": [838, 839], "5412": 838, "5418": [649, 650], "542": [14, 838, 839], "5420": 446, "5421": 412, "54298179": 839, "543": [838, 839, 842], "5430": [827, 839], "544": [184, 838, 839], "5442": 838, "5445": 439, "545": [838, 839], "5451": 838, "5454": [418, 665], "5454703921677284": 693, "5455": 693, "5456": 838, "5457": 839, "5457447": 839, "546": [838, 839, 842], "5465": 827, "5467": 838, "547": [838, 839], "5477868606453535": 693, "548": [838, 839], "549": [838, 839], "5490": 427, "5495035052928215": 693, "55": [147, 181, 430, 822, 827, 838, 839, 840, 842, 843, 862, 869], "550": [838, 839], "551": [838, 839], "5511": 443, "5512": 412, "5513": 427, "5514": 824, "552": [838, 839, 840, 842], "5520": [462, 833], "5525": 838, "5527": 824, "5529": 442, "553": [838, 839], "5534": 838, "5538": 443, "554": [838, 839], "5540": 419, "5541": [128, 129], "5543": 824, "555": [838, 839], "5551": 418, "556": [838, 839], "5561": 824, "5563827995742111": 693, "5564": 693, "557": [838, 839], "558": [822, 832, 838, 839], "559": [838, 839], "55it": 833, "56": [430, 838, 839, 862, 869], "560": [838, 839, 840, 842], "561": [838, 839, 858], "5612": 665, "5614": 118, "5614197853127827": 693, "562": [822, 838, 839, 858], "5620": 838, "5628": 824, "563": [838, 839], "5630": 832, "5632": 832, "5635": 832, "5639": 858, "5639983415603638": 843, "564": [838, 839], "5642": 832, "5643": [418, 841], "5644": 832, "5646": 833, "565": [838, 839], "56518157": 838, "5652": 838, "5655": 832, "5656": 827, "5658": [439, 440, 441, 442, 443, 444, 445, 446, 447], "566": [562, 822, 838, 839, 840], "5668682": 133, "567": [838, 839], "5671": 462, "5678": [838, 839], "568": [169, 838, 839, 842], "5680": 839, "5686": 827, "569": [838, 839], "5692": [649, 650], "57": [430, 626, 825, 832, 838, 839, 862, 869], "570": [838, 839], "571": [838, 839], "5711": 418, "5719": 839, "57194309": 839, "572": [838, 839], "5721": 414, "5725": [439, 440, 441, 442, 443, 444, 445, 446, 447], "5725330322207948": 693, "57296671": 838, "573": [14, 822, 838, 839], "5730": 838, "574": [838, 839], "574418": 25, "5746912787380253": 693, "5749": 693, "5749339182767451": 693, "575": [838, 839], "5751199704688077": 835, "576": [838, 839], "577": [838, 839], "578": [838, 839], "5788": 856, "579": [838, 839], "5794": 838, "58": [14, 833, 838, 839, 862, 869], "580": [838, 839], "58029657": 838, "5803": 838, "58078167": 838, "5808": 838, "581": [838, 839], "5810": [838, 858], "5812": 839, "582": [838, 839], "5820": 841, "5822": 442, "583": [838, 839], "5832": 838, "584": [838, 839], "5840": 447, "5845": 462, "5847": 439, "5849": 408, "585": [838, 839], "5850": 838, "5854": 810, "5859": 833, "586": [838, 839], "5863": 827, "587": [838, 839], "5873": 425, "5878": 418, "588": [14, 838, 839], "5887": 824, "589": [838, 839], "59": [25, 155, 187, 462, 838, 839, 844, 862, 869], "590": [830, 838, 839, 845, 847], "5901": [649, 650], "59071": 158, "5908": 810, "591": [838, 839, 842], "5913335505943637": 693, "592": [145, 838, 839], "5920": 856, "5923": 665, "593": [838, 839], "5937484188166621": 693, "594": [838, 839], "5942": 440, "5945": [405, 411], "595": [823, 838, 839, 842], "596": [838, 839], "5960": 442, "5962": 810, "5967": 810, "597": [838, 839], "598": [838, 839, 840], "599": [838, 839], "5_dgmg": [830, 865, 867], "5_graph_classif": [830, 844, 847], "5a0c40b": 865, "5e": [432, 434, 725, 726, 810, 822], "5f": 825, "5mb": 844, "5x4": 841, "5\uac1c\uc758": 807, "5\uc7a5": [795, 802], "6": [3, 4, 6, 9, 11, 20, 26, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 107, 117, 118, 119, 122, 130, 131, 142, 147, 148, 150, 151, 156, 163, 172, 173, 189, 210, 212, 213, 214, 241, 293, 297, 298, 299, 301, 302, 303, 308, 317, 318, 321, 337, 338, 345, 346, 361, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 416, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 556, 560, 562, 568, 573, 621, 637, 639, 644, 646, 647, 659, 667, 673, 689, 690, 703, 706, 710, 715, 729, 731, 732, 734, 747, 750, 754, 759, 760, 771, 772, 774, 785, 788, 791, 801, 802, 815, 816, 817, 821, 823, 825, 827, 832, 833, 835, 838, 839, 841, 844, 845, 847, 858, 862, 868, 869], "60": [169, 176, 189, 462, 621, 626, 822, 833, 838, 839, 840, 842, 843, 862, 869], "600": [25, 838, 839, 865], "6000": 215, "60000": 169, "6000000238418579": 478, "6005": 25, "6008": 418, "601": [838, 839], "6014": 838, "602": [181, 838, 839, 840], "6029": 841, "603": [838, 839], "6032": 440, "604": [838, 839], "604045": 173, "604094": 173, "6044": 427, "6045": [444, 838], "605": [838, 839, 858], "6059": 838, "606": [828, 838, 839, 842], "6061": 827, "6066": [405, 411], "607": [838, 839], "6073": 824, "608": [828, 838, 839], "6081": 838, "608980167119702": 835, "609": [838, 839], "6095": 665, "61": [833, 838, 839, 862, 869], "610": [823, 838, 839], "6106": 419, "611": [838, 839], "6114": [649, 650], "6118": [439, 440, 441, 442, 443, 444, 445, 446, 447], "6118386331195641": 693, "61191552": 701, "61191553": 701, "61191556": 701, "612": [838, 839], "613": [838, 839], "6133": 838, "614": [822, 838, 839], "6143": 418, "6146": 440, "615": [181, 838, 839], "6156748364694707": 693, "616": [832, 838, 839, 840, 861], "6163": 397, "617": [838, 839], "6179": 838, "618": [838, 839], "619": [838, 839], "6199": 444, "61gb": 14, "61m": [719, 805], "62": [833, 838, 839, 862, 869], "620": [838, 839], "620118223673067": 693, "621": [838, 839], "6211": 444, "6213": 462, "6219": 838, "62192846": 838, "622": [838, 839], "6220": 418, "6221": 462, "6222": 439, "6224": 838, "6224328279495239": 843, "623": [838, 839], "6230": 827, "6236450887613678": 835, "624": [838, 839, 842], "6242": 838, "62423793": 838, "6246": 827, "625": [838, 839], "62539528": 238, "6254": 665, "6254656": 838, "6255": 838, "626": [838, 839, 842], "6264": 838, "627": [838, 839], "628": [838, 839], "6285": 827, "629": [838, 839], "6295": 665, "6296": 838, "62962191": 838, "63": [25, 708, 752, 838, 839, 862, 869], "630": [163, 838, 839], "6305": 443, "6306": 838, "631": [838, 839], "6315": 838, "6317": 443, "6319": 462, "632": [838, 839], "6325": 665, "6326": 856, "633": [838, 839, 840], "6332091680928891": 835, "634": [838, 839], "6340": [418, 824, 856], "634899790318452": 693, "635": [838, 839], "6355": 439, "63563": 25, "636": [822, 838, 839], "6365": [439, 440, 441, 442, 443, 444, 445, 446, 447], "637": [838, 839], "6373": 427, "6375": [408, 824], "6375445528248924": 693, "6379": [649, 650], "638": [838, 839], "638319": 835, "638325": 835, "6389": 838, "639": [14, 838, 839], "6391154065572671": 835, "6393": 418, "6399": 442, "64": [14, 172, 195, 392, 428, 430, 434, 435, 570, 708, 752, 793, 835, 838, 839, 844, 848, 862, 869], "640": [823, 838, 839], "6400": 838, "64002163": 838, "6407": 839, "6408": 412, "641": [822, 838, 839, 842], "6411288969428505": 835, "6412": 827, "6418": 462, "642": [838, 839, 840], "6422": 838, "643": [838, 839], "6430l": 848, "644": [838, 839], "6447": 838, "645": [838, 839], "6453746567017163": 693, "6455": 827, "646": [838, 839], "6462162561249654": 693, "647": [838, 839], "6477": 398, "647974764253834": 835, "648": [838, 839, 842], "6486": 839, "648874463": 701, "649": [838, 839], "6494437360242048": 693, "64d0f3f": 14, "65": [153, 822, 828, 838, 839, 840, 842, 843, 862, 869], "650": [136, 838, 839, 842], "6501": 839, "65011284": 839, "651": [838, 839], "6512e": [637, 673], "6515": [649, 650, 827], "652": [14, 838, 839, 842], "6521": 839, "6526403892728874": 693, "653": [838, 839], "654": [838, 839], "6544": 824, "6549": 419, "655": [838, 839], "6554582368535857": 835, "6557": [437, 551], "6558": 462, "656": [823, 838, 839], "6560958421423537": 835, "6562": 810, "6568": [405, 411, 422], "657": [838, 839], "65729476": 838, "6573": 838, "658": [14, 838, 839], "6580": 693, "6580438064356824": 693, "6585": 623, "65854": 182, "659": [838, 839], "6590": 856, "6594951663841697": 693, "6595": 693, "6597": 425, "6598715708878852": 693, "66": [827, 832, 833, 835, 838, 839, 844, 862, 869], "660": [838, 839], "6600": 827, "6602": 839, "6602303": 839, "6609": 833, "661": [838, 839], "662": [838, 839], "6624186423087752": 693, "6627": 839, "6628": 824, "663": [822, 838, 839], "664": [838, 839], "6646": 838, "665": [838, 839], "6654": 838, "6655": 810, "666": [828, 838, 839], "6667": [602, 661], "667": [838, 839], "668": [838, 839], "669": [838, 839], "6694943496824788": 693, "6699354648590088": 843, "67": [838, 839, 862, 869], "670": [838, 839], "6702": [649, 650], "671": [822, 838, 839], "6717": [824, 838], "672": [838, 839], "6724": 827, "6725": 856, "672884": 144, "673": [838, 839], "674": [828, 838, 839], "6746269314422184": 693, "675": [838, 839], "6751": 824, "6752": 835, "6754": 443, "6757": 841, "676": [838, 839], "677": [163, 173, 838, 839], "6772": 827, "6776417760682221": 693, "678": [838, 839, 842], "679": [838, 839], "6795": 824, "6797": 827, "67985810014162": 693, "6799": 693, "68": [170, 828, 833, 838, 839, 862, 869], "680": [838, 839], "6802886": 839, "6803": 839, "681": [838, 839], "6810484348765842": 693, "6811": 824, "682": [173, 838, 839, 840, 842], "6825": [439, 440, 441, 442, 443, 444, 445, 446, 447], "683": [822, 838, 839], "6830": 856, "684": [822, 838, 839], "6841": 838, "6845": 443, "685": [838, 839], "6856": 827, "686": [838, 839], "6862": 838, "6864": 827, "686607": 835, "6867": 827, "6867976909772915": 832, "687": [838, 839, 840, 842], "6871": 419, "6876": 442, "688": [14, 838, 839], "6882": 462, "6883": 839, "6887": 827, "689": [838, 839], "6892842650413513": 843, "6893": [649, 650, 856], "69": [173, 828, 838, 839, 859, 862, 869], "690": [823, 828, 838, 839, 842], "6901745368284345": 693, "6906": 118, "6907": 444, "6908": 403, "691": [838, 839, 842], "6910": 665, "692": [838, 839, 842], "6925": [439, 440, 441, 442, 443, 444, 445, 446, 447], "692873149428549": 693, "693": [838, 839, 840, 842], "6931": 418, "6937": 462, "694": [838, 839], "6943": 810, "695": [838, 839, 842], "6954": 462, "6955": [444, 839], "6955176": 839, "696": [838, 839, 840], "6962": 439, "697": [838, 839], "698": [14, 838, 839], "6982": 841, "6985674921582508": 693, "698592283371875": 693, "6986": 693, "699": [838, 839], "6994": 858, "6_line_graph": [830, 858, 861], "6_load_data": [830, 845, 847], "6gb": 701, "6mb": 844, "6\u4e2a\u8282\u70b9": 750, "6\uc740": 785, "6\uc744": 803, "6\uc7a5": [795, 801, 813, 815], "7": [6, 9, 14, 20, 26, 79, 80, 81, 82, 122, 136, 142, 154, 160, 161, 162, 163, 165, 171, 172, 177, 179, 241, 290, 293, 297, 298, 299, 300, 301, 302, 303, 308, 317, 328, 331, 345, 346, 410, 438, 555, 556, 560, 565, 604, 624, 637, 644, 646, 658, 659, 667, 673, 706, 709, 710, 715, 716, 719, 734, 743, 750, 753, 754, 759, 761, 774, 783, 791, 794, 801, 802, 803, 817, 821, 822, 823, 825, 827, 828, 832, 833, 835, 838, 839, 840, 842, 843, 856, 857, 858, 859, 862, 868, 869], "70": [25, 153, 184, 210, 822, 828, 833, 838, 839, 840, 842, 843, 844, 862, 869], "700": [838, 839], "7000": [437, 551], "701": [192, 838, 839], "702": [838, 839], "7026": 810, "703": [181, 838, 839, 842], "7031": 810, "704": [838, 839], "7043": 832, "7048": [405, 411, 832], "7049": 832, "705": [838, 839], "7051530741717352": 693, "7053": 418, "7055": 838, "7055365": 838, "706": [173, 838, 839], "7067": 827, "707": [838, 839], "7071": [661, 827], "708": [838, 839], "709": [838, 839], "7091": 443, "7095": 462, "70it": 825, "71": [169, 184, 838, 839, 862, 869], "710": [153, 838, 839], "7102969884872437": 843, "711": [838, 839], "7119": 838, "712": [823, 838, 839, 842], "7120": 838, "713": [701, 822, 838, 839], "7134": 838, "7137": 858, "7138": [443, 827], "7139": 827, "714": [838, 839, 842], "7141": 118, "7143": [838, 862], "715": [838, 839], "7153": 118, "716": [194, 838, 839, 842], "7163": 810, "7168": 810, "717": [161, 162, 163, 838, 839], "7174910641836348": 693, "718": [838, 839, 840, 842], "7183": 838, "719": [838, 839], "7196969604886617": 693, "7197": 693, "72": [838, 839, 862, 869], "720": [838, 839, 842], "721": [838, 839], "7211": 25, "722": [135, 838, 839], "7222": 838, "723": [838, 839], "7230": 856, "7232": 827, "724": [823, 838, 839, 842], "725": [838, 839, 842], "726": [192, 822, 823, 838, 839], "7262": [132, 857], "7263": 838, "7264": 838, "7269": [128, 129], "727": [838, 839], "728": [838, 839, 842], "7287": 444, "7287e": [637, 673], "7288": 838, "729": [149, 838, 839], "7291568018841328": 693, "73": [838, 839, 862, 869], "730": [823, 838, 839, 840], "7300": 838, "730570": 845, "7306": 827, "731": [838, 839], "7311": [604, 624, 827], "7318": 839, "7319": 824, "732": [159, 823, 838, 839, 842], "7320": 827, "7321742043493028": 693, "7325": 839, "733": [838, 839], "7336": 838, "734": [823, 838, 839], "735": [838, 839], "7352": 841, "7352138669985214": 693, "7356": [440, 824], "73595083": 839, "736": [838, 839, 840], "7360": 839, "7365": 462, "7367": 838, "73673003": 838, "7368": 693, "736833152378035": 693, "737": [822, 838, 839], "738": [838, 839], "7380": 856, "739": [830, 838, 839, 842, 856, 861], "74": [25, 838, 839, 862, 869], "740": [159, 822, 838, 839, 840], "7400": 856, "7405": 824, "741": [838, 839], "7410": [440, 856], "742": [838, 839, 840], "7420": [827, 856], "7426": 693, "7426272601929126": 693, "7427": 439, "743": [823, 838, 839], "7430": 856, "744": [838, 839], "7448": 827, "745": [136, 823, 838, 839], "7450": 856, "7457985352827006": 693, "746": [823, 838, 839], "7460": 856, "7464": 858, "7465": 462, "747": [838, 839, 842], "7470": 856, "7471": 858, "748": [165, 838, 839, 840, 842], "7480": 856, "749": [838, 839, 842], "7490": 856, "7494": 838, "7499": 856, "75": [14, 242, 437, 551, 721, 764, 807, 822, 838, 839, 840, 842, 843, 844, 862, 869], "750": [838, 839, 842], "7500": [554, 669, 856], "7507": [649, 650], "751": [822, 838, 839, 842], "7510": 856, "7514": 833, "752": [135, 828, 838, 839, 842], "7520": 856, "7525": 410, "753": [823, 838, 839, 842], "7530": 856, "7532": 858, "754": [822, 838, 839, 842], "7540": [446, 856], "7545": 838, "755": [14, 838, 839, 842], "7550": 856, "7556": 397, "756": [160, 838, 839, 840, 842], "7560": 442, "7567": [439, 440, 441, 442, 443, 444, 445, 446, 447], "757": [830, 838, 839, 842, 857, 861], "7579": 827, "758": [838, 839, 842], "7581": 827, "7583372765843964": 693, "7587": 418, "7588": 693, "7588441197954202": 693, "759": [838, 839, 840], "75it": 833, "76": [838, 839, 862, 869], "760": [822, 838, 839], "7600": [134, 856], "761": [838, 839], "7613943085507672": 693, "7614": 693, "762": [822, 838, 839, 840, 842], "7626": 841, "763": [838, 839], "7634": 838, "764": [838, 839], "7640": 856, "7644": 858, "7646": 858, "765": [838, 839], "7650": 25, "765544096939567": 693, "7656": 429, "766": [838, 839], "7665": 414, "767": [135, 838, 839], "7670": 856, "7674": 827, "768": [159, 822, 838, 839, 840, 862], "7680": 838, "76802991": 838, "769": [838, 839], "7692": 418, "7697": 693, "7697294432580938": 693, "77": [828, 838, 839, 862, 869], "770": [838, 839], "7709": 426, "771": [822, 838, 839, 840], "7710": [128, 129, 447], "7711": 419, "772": [822, 838, 839], "7720": 810, "7721": 418, "7724": [838, 858], "773": [838, 839, 840], "7734": 839, "774": [838, 839], "7749": 838, "77493263": 838, "775": [838, 839], "7752": [462, 827, 858], "7754": 838, "776": [822, 823, 838, 839, 840], "776002616178397": 693, "7762": 462, "7763": 858, "7766": 462, "777": [838, 839], "7773": 414, "7774": 399, "778": [135, 838, 839, 840], "77800": 825, "7787": 430, "77895032": 839, "779": [838, 839, 840], "7790": 839, "7796": 827, "7799": 839, "77it": 824, "78": [832, 833, 838, 839, 857, 862, 869], "780": [822, 838, 839, 840], "7800": 838, "7802": 862, "781": [822, 825, 838, 839, 840], "78100": 825, "7819": 693, "7819383771535038": 693, "782": [838, 839, 840], "7827": 810, "783": [838, 839], "7830": 827, "78308304": 839, "7831": 839, "7833": 827, "7839": [827, 841], "784": [14, 822, 838, 839, 840], "7846": 462, "7849": 446, "785": [838, 839], "7852": 857, "7859": 824, "786": [822, 838, 839], "7861": 824, "7863421810531344": 693, "7865": [410, 839], "787": [838, 839], "7874": 858, "7877": 857, "788": [151, 822, 838, 839], "78804": 171, "7883": 858, "7884": 824, "789": [838, 839], "7891": 693, "7891429392727503": 693, "7893727601272978": 693, "7894": [462, 858], "79": [462, 828, 833, 838, 839, 862, 869], "790": [822, 838, 839], "7901988878812207": 693, "7902": 693, "7905": 419, "7906": 857, "791": [822, 838, 839], "7910": 838, "792": [838, 839], "7924": 444, "7925": 838, "79252691": 838, "793": [153, 838, 839], "7938": 833, "7939": 857, "794": [14, 838, 839], "7946": 418, "7949": [439, 440, 441, 442, 443, 444, 445, 446, 447], "795": [822, 838, 839], "7954": 827, "7956": 838, "796": [838, 839], "7961": 838, "7968": 838, "797": [838, 839], "7973": [444, 858], "7974": 839, "7979": 857, "798": [159, 838, 839, 842], "7983": 838, "7986": 839, "799": [838, 839], "7993": 418, "7997": [649, 650], "7_transform": [830, 869, 871], "7g": [726, 810], "7\u548c11": 761, "7\u884c": 743, "7\ubd80\ud130": 805, "7\uc7a5": 795, "8": [4, 6, 9, 10, 14, 20, 130, 136, 139, 140, 142, 152, 153, 172, 184, 189, 190, 198, 207, 243, 244, 293, 298, 299, 301, 302, 303, 308, 317, 328, 339, 343, 344, 345, 348, 398, 399, 400, 406, 409, 417, 448, 450, 451, 453, 454, 455, 456, 460, 462, 479, 480, 560, 562, 568, 626, 644, 646, 658, 667, 689, 705, 706, 708, 710, 716, 749, 752, 761, 790, 793, 803, 821, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 840, 844, 853, 858, 859, 862, 868, 869, 874], "80": [142, 143, 161, 190, 193, 462, 822, 824, 833, 838, 839, 840, 842, 843, 862, 869, 874], "800": [838, 839, 840], "801": [838, 839], "802": [133, 562, 838, 839], "8022": 862, "8027": 857, "803": [838, 839], "8030": 444, "804": [14, 838, 839], "8043": 443, "805": [151, 163, 838, 839], "8051": 839, "8058": 418, "806": [838, 839], "8065": 431, "8068": 425, "807": [823, 838, 839], "808": [838, 839], "8080": 21, "8083": 858, "8085": 857, "8086": 462, "8088": 858, "809": [838, 839], "8090": 665, "809016994374948": 347, "81": [151, 821, 828, 838, 839, 844, 859, 862, 869], "810": [838, 839], "8108": 856, "8109": 858, "811": [838, 839], "8111": 440, "8113": 439, "811333": 25, "8117650553546695": 693, "812": [562, 838, 839], "81288133": 838, "8129": 838, "813": [822, 838, 839], "8130": 858, "8131": 858, "8132": 430, "8135": 412, "8137": [439, 440, 441, 442, 443, 444, 445, 446, 447], "814": [838, 839], "8144": 839, "8145": 838, "8146": 430, "8149": [693, 838], "8149104951283953": 693, "815": [838, 839], "8152": 856, "8154": 857, "816": [838, 839], "817": [838, 839], "8171": 838, "8173": 827, "8176": 838, "81763789": 838, "818": [161, 838, 839], "8189658": 786, "819": [194, 838, 839], "8192": 862, "8199": 442, "81ea7a4": 833, "82": [172, 838, 839, 859, 862, 869], "820": [838, 839], "8208": 427, "821": [161, 838, 839], "821187": 845, "8212": 838, "8216": 839, "8217": 827, "822": [822, 838, 839], "8224": 838, "823": [14, 830, 838, 839, 859, 861], "8235": 419, "8238": 857, "824": [838, 839], "8245": 418, "8246": 838, "825": [838, 839], "8250": 824, "8256": 858, "826": [838, 839], "8262": 414, "827": [838, 839], "828": [838, 839], "8287": 430, "8289": 839, "829": [14, 838, 839], "82it": 833, "83": [195, 828, 838, 839, 859, 862, 869], "830": [838, 839], "8304": 839, "8307": [649, 650], "831": [178, 179, 181, 838, 839], "8318851": 838, "8319": 838, "832": [838, 839], "8323": 410, "8325": 430, "8326": 413, "8326121496142408": 693, "833": [838, 839], "8333": 838, "8336": 857, "8338": 838, "834": [823, 838, 839], "835": [838, 839], "836": [838, 839], "8361": 841, "837": [838, 839], "8371": 431, "8376": 838, "8377": [439, 440, 441, 442, 443, 444, 445, 446, 447], "838": [838, 839], "8380h": 848, "8387": 443, "839": [838, 839], "84": [195, 838, 839, 862, 869], "840": [838, 839], "8400": 612, "8406": 857, "841": [838, 839], "8412": 827, "842": [153, 838, 839], "8425": 862, "843": [838, 839], "8437": 430, "844": [838, 839], "845": [838, 839], "8450": 857, "8451870383322376": 693, "8453123358491914": 693, "8458": 839, "846": [838, 839], "8463": 838, "84631895": 838, "847": [194, 838, 839], "8470": 444, "8474": 857, "8478810655406659": 693, "848": [838, 839], "8487": 412, "8489": [649, 650], "849": [838, 839], "8493": 838, "8494919263589972": 693, "8495": [693, 857], "849983324532477": 693, "85": [822, 838, 839, 840, 842, 843, 844, 862, 869], "850": [838, 839], "851": [838, 839], "8515": [430, 827], "8516": 838, "8519": 857, "852": [838, 839], "8521": [439, 440, 441, 442, 443, 444, 445, 446, 447], "8527": 838, "8528550571640349": 843, "853": [838, 839], "8535": 839, "8536": 394, "854": [838, 839], "8544": 184, "8549": [462, 857], "855": [838, 839], "8556": 833, "856": [838, 839], "8560": 841, "857": [838, 839], "8571": 838, "858": [838, 839], "8580": 857, "8582": 410, "8585": 857, "8586722047523594": 693, "859": [823, 838, 839], "8591": 838, "8597": 462, "86": [838, 839, 844, 862, 869], "860": [14, 838, 839], "861": [838, 839], "8613": 693, "8613368738351794": 693, "8617": 838, "86171255": 838, "862": [838, 839], "863": [838, 839], "8631": [838, 857], "8634": [405, 411], "8638": 827, "864": [838, 839], "8643238446466464": 693, "8648": 462, "865": [838, 839], "8654": 424, "86573472329756": 693, "866": [838, 839], "8660": 838, "8663": 839, "8667": 446, "867": [838, 839], "8674": 410, "8679": 413, "868": [838, 839], "8687": 857, "869": [838, 839], "87": [155, 187, 838, 839, 862, 869], "870": [838, 839], "8701": 838, "871": [838, 839], "8710": 217, "8715767748481147": 693, "871674": 835, "872": [838, 839], "8726": 443, "8729": [838, 857], "873": [838, 839], "874": [838, 839], "875": [838, 839], "8753101998792645": 693, "8756": 857, "8757520744192612": 693, "876": [838, 839], "8764": 414, "877": [838, 839], "8778998699783784": 693, "878": [14, 173, 822, 838, 839], "8784": 839, "8788": 833, "879": [838, 839, 842], "8791": 862, "87it": 833, "88": [168, 186, 827, 828, 838, 839, 844, 862, 869], "880": [823, 838, 839], "881": [145, 838, 839], "8813": [693, 838], "8813472954005022": 693, "881680": 133, "882": [838, 839], "8823": 859, "8825": 430, "883": [838, 839], "8839": 857, "884": [838, 839], "8843": 414, "8846": 859, "885": [838, 839], "8850": 856, "8851294998284638": 693, "8852": 833, "8854": 444, "886": [838, 839], "88651": [25, 176], "8869": [443, 859], "887": [838, 839], "8875": 827, "888": [838, 839, 842], "889": [838, 839], "8892": 859, "8899": 857, "89": [145, 160, 168, 462, 833, 838, 839, 862, 869], "890": [838, 839, 840], "891": [830, 838, 839, 862, 864], "8915": 859, "892": [181, 838, 839], "8920": [462, 833], "8922": 431, "893": [838, 839], "8938": [439, 440, 441, 442, 443, 444, 445, 446, 447, 857, 859], "8939": 862, "894": [151, 838, 839], "8943": 833, "8945": [439, 440, 441, 442, 443, 444, 445, 446, 447, 838, 839], "8948": [439, 440, 441, 442, 443, 444, 445, 446, 447], "895": [838, 839, 840], "8953": 827, "8954": [649, 650, 839], "896": [838, 839], "8960": 859, "8964": 693, "8964389655603473": 693, "8967": 838, "897": [14, 838, 839], "8975": 693, "8975240205792763": 693, "898": [823, 838, 839], "8983": 859, "8986": 839, "899": [160, 822, 838, 839, 842], "8g": [726, 810], "8m": 844, "8mb": [844, 857], "8\u548c": 761, "8\u548c11": 761, "8\uac1c\uc758": [786, 790], "8\uacfc": 791, "8\ubc88\uc774": 803, "8\uc5d0": 803, "8\uc758": 803, "8\uc7a5": 795, "9": [4, 9, 10, 20, 26, 138, 148, 163, 195, 244, 293, 297, 298, 299, 300, 301, 302, 317, 339, 343, 344, 346, 410, 430, 462, 480, 560, 621, 622, 644, 646, 667, 705, 706, 715, 716, 726, 749, 750, 759, 761, 790, 791, 801, 803, 821, 823, 825, 827, 828, 832, 833, 835, 838, 839, 848, 858, 862, 869], "90": [462, 822, 838, 839, 840, 842, 843, 862, 869], "900": [14, 622, 838, 839], "9000": 869, "9005": [841, 859], "9009": 838, "901": [838, 839], "9011": 430, "9016": [405, 411], "902": [14, 838, 839], "9027": [403, 859], "9028": [439, 440, 441, 442, 443, 444, 445, 446, 447], "903": [838, 839], "9030": [439, 440, 441, 442, 443, 444, 445, 446, 447], "904": [838, 839], "9049": 859, "905": [838, 839], "9054": 857, "906": [838, 839], "907": [838, 839], "9071": 859, "908": [838, 839], "9081": 444, "9086": 838, "9089": 422, "909": [838, 839], "9091": 414, "9093": [857, 859], "91": [838, 839, 862, 869], "910": [838, 839], "9105": [612, 649, 650], "9108": 462, "911": [838, 839], "9115": 859, "912": [838, 839], "913": [838, 839], "9137": [439, 440, 441, 442, 443, 444, 445, 446, 447, 859], "9137336384979067": 693, "914": [823, 838, 839], "9140": [649, 650], "9143": 857, "915": [838, 839], "9156": 462, "9158": [859, 862], "916": [838, 839], "9166": 431, "9167": [9, 827, 857], "9168191778828504": 693, "9169": 827, "917": [838, 839], "918": [838, 839], "9180": 859, "9186": 857, "919": [838, 839], "92": [838, 839, 862, 865, 868, 869], "920": [838, 839], "9201": 859, "92076584": 839, "9208": 839, "921": [822, 838, 839], "9214": [838, 857], "922": [838, 839], "9223": 859, "9226": 398, "9228": [25, 150], "923": [838, 839], "9230": 444, "9232": 838, "924": [152, 838, 839], "9241": 418, "9244": 859, "925": [838, 839], "92576486": 838, "9258": [827, 838], "926": [823, 838, 839], "9265": 859, "9268": 394, "927": [838, 839], "9270": 839, "92700509": 839, "927244": 835, "9273": 426, "928": [14, 838, 839], "9280": [649, 650], "9286": 857, "9287": 859, "9288e": 346, "929": [838, 839], "9290": 838, "9292": 838, "9297": 426, "93": [25, 828, 838, 839, 862, 869], "930": [838, 839], "9301": 827, "9302": 398, "9304": 862, "9307": 810, "9308": 859, "930k": 862, "931": [838, 839], "9315": 418, "9318": 838, "932": [838, 839], "9322": 839, "9323": 857, "9329": 859, "933": [838, 839], "9336": 857, "934": [838, 839], "9343": 426, "935": [830, 838, 839, 844, 847], "9350": 859, "9357": 857, "936": [838, 839], "936706701616337": 693, "9368": [128, 129, 838], "937": [823, 838, 839], "9370522452510665": 693, "9371": 859, "938": [838, 839], "939": [838, 839], "9392": 859, "9397636966928355": 693, "9399": 838, "94": [838, 839, 862, 869], "940": [838, 839], "9404": 810, "941": [838, 839], "9413": 859, "9418796835016118": 693, "9419": 693, "942": [838, 839], "9422093637539785": 693, "94289": 835, "943": [173, 838, 839], "9430": 462, "9434": 859, "944": [161, 838, 839], "9441": 426, "9444": 857, "945": [838, 839], "9455": 859, "946": [823, 828, 838, 839, 840], "9468": 827, "947": [838, 839], "948": [838, 839], "94806": 144, "949": [838, 839], "9490": 447, "9493": 838, "9494": 839, "95": [25, 822, 838, 839, 840, 842, 843, 862, 865, 869], "950": [838, 839], "9501": 839, "95014036": 839, "9504": 857, "951": [158, 838, 839, 842], "9511783938523962": 693, "9512": 693, "952": [14, 838, 839, 842], "953": [838, 839], "9532": 856, "9539": [168, 186], "954": [163, 194, 822, 838, 839], "9548": 838, "95495356": 838, "955": [838, 839], "9550": 838, "956": [838, 839], "957": [838, 839], "9571": 857, "9572": 413, "9579": 856, "958": [161, 838, 839], "959": [838, 839], "9599": 412, "96": [828, 838, 839, 862, 869], "960": [838, 839], "9600": 173, "9605": 839, "9608": 857, "9609": 447, "961": [838, 839], "962": [152, 838, 839], "9620": 839, "963": [14, 838, 839], "9634": 394, "9637": 462, "964": [838, 839], "9643": 857, "9644": [827, 838], "965": [181, 838, 839], "966": [14, 838, 839], "966043": [700, 701], "967": [838, 839], "968": [838, 839], "969": [838, 839], "9692": 839, "96924173": 839, "9695": 857, "9698": 397, "97": [838, 839, 862, 869], "970": [14, 832, 838, 839], "9705": 839, "971": [838, 839], "9714": [623, 857], "972": [562, 838, 839], "972699": 835, "973": [14, 838, 839, 859], "9731": 838, "974": [701, 838, 839], "975": [838, 839, 859], "9752": 827, "9754": 838, "9756": 838, "976": [838, 839], "977": [14, 838, 839, 844], "9774471538377553": 693, "978": [838, 839], "9781": 838, "9784264442230887": 693, "979": [838, 839], "9794634290792008": 693, "98": [25, 163, 702, 746, 787, 828, 838, 839, 862, 869], "980": [838, 839], "9807": 838, "981": [838, 839], "9811": 839, "982": [838, 839], "9820": [604, 624], "983": [838, 839], "9830": 25, "984": [146, 838, 839], "9840": 444, "9844": 862, "9848072295736628": 693, "985": [14, 838, 839], "986": [838, 839], "9868": 408, "987": [838, 839], "988": [838, 839], "9881": 839, "9883": 839, "989": [838, 839], "9894": 827, "99": [838, 839, 862, 869], "990": [838, 839], "991": [838, 839], "991848": 25, "992": [838, 839], "9920": 857, "9927": 427, "993": [838, 839], "9937": 839, "994": [838, 839], "9949": 410, "995": [14, 838, 839], "9952376085297715": 693, "996": [822, 838, 839], "997": [838, 839], "9971749359397111": 693, "9972": 444, "9975": 839, "9977": 857, "998": [838, 839], "9986": [398, 839], "999": [4, 10, 14, 838, 839], "9990": [439, 440, 441, 442, 443, 444, 445, 446, 447], "9_gat": [830, 859, 861], "9\uc5d0\uc11c": 791, "A": [4, 6, 7, 12, 14, 20, 21, 22, 26, 27, 28, 31, 34, 35, 39, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 71, 75, 79, 82, 87, 88, 93, 94, 95, 96, 100, 105, 109, 110, 118, 119, 121, 127, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 203, 205, 206, 207, 218, 228, 230, 234, 237, 239, 240, 243, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 315, 317, 318, 320, 321, 326, 331, 332, 334, 341, 342, 347, 348, 356, 357, 358, 388, 389, 390, 391, 392, 393, 394, 396, 397, 399, 402, 403, 405, 406, 408, 409, 410, 411, 412, 413, 416, 417, 419, 421, 423, 424, 426, 427, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 443, 444, 445, 448, 450, 451, 461, 462, 479, 480, 481, 503, 545, 562, 564, 565, 566, 567, 568, 569, 570, 578, 579, 581, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 615, 616, 617, 618, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 639, 640, 641, 642, 643, 644, 645, 646, 648, 649, 650, 654, 657, 662, 663, 668, 672, 687, 693, 695, 698, 699, 701, 702, 704, 706, 707, 709, 713, 725, 733, 734, 735, 792, 794, 822, 823, 824, 825, 827, 828, 830, 831, 833, 836, 840, 842, 843, 845, 847, 852, 856, 858, 859, 862, 869, 870, 872, 873], "AND": 21, "And": [168, 173, 186, 238, 297, 320, 321, 336, 337, 410, 438, 567, 568, 569, 827, 837, 838], "As": [14, 20, 22, 197, 229, 238, 567, 568, 569, 570, 639, 645, 695, 698, 700, 701, 724, 730, 833, 843, 844, 849, 852, 853, 858, 859, 869], "At": [229, 693, 728, 858, 865], "Be": [824, 859], "Being": [4, 10, 734], "But": [89, 293, 301, 724, 821, 825, 865], "By": [4, 31, 32, 41, 53, 54, 70, 122, 125, 126, 131, 200, 201, 207, 210, 218, 230, 237, 238, 247, 248, 293, 338, 357, 358, 361, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 552, 553, 645, 693, 698, 699, 708, 709, 720, 726, 734, 794, 821, 831, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 844, 845, 852, 865, 868, 869], "For": [4, 5, 9, 10, 20, 21, 22, 24, 43, 46, 51, 52, 55, 59, 60, 61, 66, 72, 74, 87, 88, 89, 90, 103, 107, 113, 114, 115, 116, 118, 119, 122, 128, 129, 165, 179, 195, 209, 212, 213, 214, 215, 218, 219, 224, 225, 232, 233, 238, 239, 240, 288, 289, 294, 296, 297, 298, 305, 308, 309, 315, 316, 317, 318, 319, 328, 331, 348, 361, 387, 389, 392, 395, 442, 448, 451, 560, 562, 567, 568, 569, 570, 571, 576, 577, 578, 579, 617, 618, 638, 639, 644, 645, 647, 653, 654, 655, 661, 666, 670, 679, 687, 689, 693, 695, 696, 697, 698, 699, 700, 701, 704, 706, 708, 709, 712, 713, 715, 716, 717, 719, 722, 724, 725, 728, 729, 730, 732, 733, 734, 735, 736, 785, 794, 820, 821, 823, 824, 825, 827, 832, 834, 835, 837, 838, 839, 841, 842, 843, 844, 845, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874], "If": [4, 6, 21, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 43, 44, 45, 46, 48, 51, 54, 56, 57, 58, 60, 64, 65, 70, 71, 73, 74, 79, 80, 81, 82, 87, 89, 90, 93, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 144, 145, 148, 156, 165, 168, 170, 177, 178, 179, 183, 184, 207, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 223, 227, 228, 229, 230, 234, 236, 237, 238, 239, 240, 244, 246, 247, 248, 285, 288, 290, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 315, 316, 317, 318, 320, 321, 325, 326, 328, 330, 331, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 350, 356, 357, 361, 387, 389, 390, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 435, 436, 438, 439, 441, 445, 446, 448, 449, 451, 452, 455, 459, 463, 480, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 549, 550, 555, 557, 558, 559, 560, 561, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 584, 587, 589, 591, 594, 595, 598, 601, 602, 603, 604, 605, 607, 614, 615, 616, 617, 618, 619, 620, 621, 624, 626, 630, 637, 638, 639, 644, 645, 647, 649, 650, 651, 653, 654, 655, 662, 663, 665, 666, 668, 671, 673, 685, 686, 692, 693, 698, 700, 701, 705, 708, 709, 712, 715, 716, 717, 718, 719, 721, 722, 723, 726, 731, 732, 733, 736, 793, 821, 822, 823, 824, 825, 827, 829, 832, 833, 835, 837, 841, 843, 844, 845, 849, 852, 865], "In": [4, 6, 8, 14, 21, 22, 27, 41, 51, 70, 140, 150, 181, 183, 186, 210, 212, 219, 229, 230, 233, 237, 238, 243, 244, 245, 297, 300, 303, 308, 310, 315, 316, 317, 318, 320, 339, 343, 344, 347, 356, 387, 391, 395, 403, 404, 420, 459, 462, 479, 480, 481, 544, 566, 569, 573, 578, 579, 612, 620, 623, 626, 644, 647, 687, 689, 693, 695, 697, 698, 699, 701, 702, 704, 705, 708, 709, 711, 712, 717, 720, 722, 723, 724, 725, 727, 728, 729, 731, 732, 733, 734, 735, 736, 821, 822, 823, 825, 827, 831, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 857, 858, 859, 860, 862, 865, 868, 869, 872, 874, 875], "It": [4, 6, 7, 8, 9, 20, 21, 22, 34, 35, 48, 60, 73, 87, 91, 92, 93, 94, 100, 113, 120, 125, 126, 128, 129, 130, 131, 132, 138, 139, 141, 142, 143, 158, 162, 178, 179, 189, 190, 191, 197, 198, 205, 208, 210, 215, 217, 218, 229, 233, 238, 239, 240, 245, 247, 248, 285, 288, 292, 293, 294, 295, 297, 298, 303, 305, 308, 310, 315, 316, 317, 319, 321, 329, 337, 338, 343, 344, 345, 356, 388, 390, 391, 396, 398, 399, 400, 401, 408, 413, 415, 420, 424, 430, 431, 432, 433, 434, 435, 436, 437, 438, 445, 450, 456, 457, 458, 459, 460, 463, 482, 483, 484, 485, 486, 488, 489, 490, 491, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 551, 552, 553, 562, 563, 569, 570, 571, 573, 574, 644, 672, 689, 691, 693, 695, 698, 699, 700, 701, 704, 709, 712, 713, 724, 725, 726, 820, 823, 831, 832, 833, 835, 837, 838, 839, 843, 844, 845, 852, 856, 857, 859, 860, 862, 865, 866, 868, 869, 872, 874, 875], "Its": [53, 54, 142, 238, 420, 432, 433, 434, 435, 507, 569, 701, 865], "NOT": [5, 21, 22, 228, 419, 856, 857, 858, 859, 862, 865, 868, 869], "No": [392, 729, 833, 859, 874, 875], "Not": 849, "ON": 821, "Of": 711, "On": [22, 116, 433, 435, 711, 718, 726], "One": [4, 20, 21, 43, 44, 46, 51, 73, 74, 77, 103, 104, 122, 130, 219, 227, 228, 232, 293, 297, 397, 455, 567, 645, 685, 691, 693, 695, 697, 698, 705, 707, 708, 709, 712, 718, 719, 720, 729, 732, 733, 734, 736, 825, 840, 844, 859, 862], "Or": [214, 566, 718, 723, 821], "Such": [724, 732, 735, 838, 839, 844, 868], "That": [4, 22, 26, 230, 237, 239, 303, 308, 315, 316, 698, 858, 865, 874], "The": [0, 2, 3, 4, 6, 8, 9, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 387, 388, 389, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 455, 456, 457, 458, 459, 460, 461, 462, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 584, 587, 588, 589, 591, 594, 595, 597, 598, 600, 601, 602, 603, 604, 605, 607, 608, 609, 612, 616, 617, 618, 619, 620, 624, 630, 631, 632, 634, 638, 639, 640, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 660, 661, 662, 663, 664, 666, 668, 669, 671, 672, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 706, 708, 709, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 779, 794, 804, 805, 809, 821, 822, 823, 824, 825, 826, 827, 828, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 852, 853, 856, 858, 859, 863, 868, 869, 870, 872, 874, 875], "Then": [6, 113, 130, 174, 238, 345, 391, 395, 436, 438, 483, 484, 485, 486, 488, 489, 490, 491, 562, 573, 700, 723, 732, 852, 853, 858, 869], "There": [1, 22, 62, 63, 116, 126, 147, 215, 228, 230, 237, 291, 395, 461, 626, 693, 695, 699, 701, 705, 735, 827, 842, 859, 862, 865, 869], "These": [150, 162, 243, 479, 706, 723, 730, 821, 842, 870, 872], "To": [1, 4, 5, 14, 21, 22, 51, 68, 77, 89, 116, 122, 210, 211, 212, 213, 214, 217, 218, 238, 243, 313, 328, 336, 337, 357, 358, 391, 419, 430, 431, 479, 552, 553, 566, 567, 568, 569, 647, 691, 693, 698, 699, 701, 708, 709, 717, 719, 723, 725, 730, 732, 735, 736, 794, 821, 823, 827, 828, 832, 833, 838, 839, 840, 849, 852, 857, 858, 859, 862, 865, 869, 874, 875], "Will": [200, 211], "With": [77, 209, 211, 392, 414, 565, 567, 568, 569, 646, 685, 716, 733, 734, 821, 840, 848, 856, 858, 865], "_": [0, 21, 243, 292, 298, 300, 317, 337, 409, 412, 413, 417, 421, 427, 430, 431, 433, 442, 450, 455, 479, 653, 679, 689, 700, 721, 722, 735, 736, 761, 764, 765, 775, 776, 803, 807, 808, 818, 819, 823, 824, 841, 843, 845, 848, 856, 857, 858, 859, 865, 868, 869, 874], "_1": [401, 430, 431, 653], "_2": [456, 653], "_4": [761, 803], "_5": [761, 803, 834], "_7": [761, 803], "_8": [761, 803], "__": [137, 171, 180, 182, 188, 295, 303, 308, 336, 337, 718, 725], "__all__": [4, 34, 35, 53, 54, 60, 87, 122, 361], "__call__": [657, 693, 764, 807], "__forward__": 858, "__getitem__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 691, 693, 695, 696, 738, 741, 742, 778, 781, 782, 845], "__init__": [21, 208, 216, 300, 313, 420, 430, 431, 432, 433, 434, 435, 462, 562, 691, 695, 699, 717, 718, 720, 721, 722, 723, 725, 726, 728, 730, 732, 734, 735, 736, 738, 741, 761, 762, 763, 764, 765, 766, 768, 770, 772, 774, 775, 776, 778, 781, 803, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 819, 822, 823, 824, 825, 827, 832, 833, 835, 840, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "__len__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 691, 695, 738, 741, 761, 778, 781, 803, 845], "__main__": [833, 865, 874, 875], "__name__": [833, 865, 874, 875], "__path__": 21, "__version__": [822, 823, 824, 825, 827, 832, 833, 835, 838, 839], "__\u4e2d\u7684\u505a\u6cd5": 773, "_aggre_typ": [728, 729, 768, 769, 812, 813], "_basenegativesampl": [224, 225], "_block": 305, "_collate_fn": [694, 740, 780], "_continu": 869, "_dgl_graph": [696, 742, 782], "_dist_train": 568, "_dst": 127, "_e": [4, 118, 125, 126, 230, 238, 405, 408, 416, 419, 422, 425, 639], "_edge_ids_in_fused_csc_sampling_graph": [297, 311], "_etype_str_to_tupl": 323, "_etype_tuple_to_str": 324, "_extract_gz": [692, 739, 779], "_ffi": 22, "_ft": [712, 756, 797], "_g": [695, 741, 781], "_gener": 0, "_get_dgl_url": [695, 741, 781], "_get_next": 865, "_get_previ": 865, "_i": [393, 409, 653, 672, 712, 756, 797, 827, 862, 869], "_id": [168, 186, 217, 244, 339, 343, 344, 480, 544, 560, 644, 645, 700, 701, 841], "_in_dst_feat": [725, 728, 768, 812], "_in_src_feat": [725, 728, 768, 812], "_info": [696, 742, 782], "_ini_api": 22, "_init_api": 22, "_initialize_edge_repr": 865, "_initialize_node_repr": 865, "_j": [409, 712, 756, 797, 827, 859, 869], "_k": [349, 439, 440, 441, 446], "_l": 862, "_label": [695, 741, 781], "_load_graph": [695, 741, 781], "_mean": [856, 859], "_method": [856, 859], "_n": [4, 237, 238, 405, 408, 416, 422, 425], "_name": [695, 741, 781], "_num_task": [695, 741, 781], "_out_feat": [725, 728, 768, 812], "_p": [457, 458], "_preprocess_featur": [695, 741, 781], "_sample_with_etyp": 721, "_sha1_str": [692, 695, 739, 741, 779, 781], "_src": 127, "_static": [840, 841, 842, 843, 844, 845], "_t": 442, "_tag": [578, 579], "_tag_offset": [569, 578, 579], "_type": [644, 645], "_type_kei": 22, "_u": [4, 125, 126, 419, 735, 761, 775, 803, 818, 856], "_url": [695, 741, 781], "_v": [125, 126, 419, 735, 761, 775, 803, 818, 827], "a1": [26, 827], "a2": [26, 827], "a_": [361, 392, 407, 418, 424, 427, 463, 712, 756, 797, 857, 858, 859, 865], "a_0": [178, 179], "a_1": [823, 865], "a_1x": 823, "a_2x": 823, "a_div": 725, "a_dst": 127, "a_hat": [822, 823, 827], "a_i": 823, "a_new": 827, "a_r": 823, "a_rx": 823, "a_src": 127, "a_t": 865, "a_tild": 823, "a_tre": 862, "ab": [118, 119, 127, 131, 134, 137, 146, 169, 171, 180, 182, 188, 356, 435, 562, 828, 848], "ab1": 26, "ab2": 26, "abil": 859, "abl": [701, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 844, 845, 848], "about": [1, 20, 21, 22, 158, 243, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 395, 479, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 639, 686, 691, 698, 701, 703, 705, 706, 721, 734, 823, 844, 857, 858, 859, 862, 869], "abov": [5, 22, 130, 142, 178, 179, 210, 218, 244, 249, 250, 261, 262, 263, 264, 339, 343, 344, 361, 394, 395, 401, 410, 412, 413, 418, 419, 426, 427, 456, 460, 480, 544, 578, 579, 639, 689, 692, 695, 706, 709, 711, 712, 713, 717, 721, 723, 729, 732, 734, 735, 736, 825, 827, 833, 834, 835, 852, 853, 856, 857, 859, 865, 868, 875], "absent": 319, "absolut": [201, 202, 701, 820], "abstract": [156, 291, 310, 314, 656, 691, 703, 717, 827], "abund": 734, "ac": 144, "academ": [151, 152, 159, 287, 701], "academi": 857, "acc": [736, 776, 819, 822, 823, 825, 833, 835, 840, 842, 856, 858, 862, 874, 875], "acc_perm1": 858, "acc_perm2": 858, "acceler": [398, 399, 400, 459, 701, 823, 849, 862, 869], "accept": [21, 22, 209, 309, 310, 359, 399, 653, 707, 723, 792, 835, 841, 852], "access": [4, 22, 89, 108, 122, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 212, 286, 288, 291, 292, 294, 296, 298, 303, 308, 317, 318, 357, 360, 545, 695, 697, 701, 702, 706, 712, 718, 719, 723, 833, 875], "accompani": 347, "accomplish": 868, "accord": [9, 39, 52, 78, 91, 92, 139, 140, 141, 209, 212, 214, 218, 224, 225, 230, 237, 238, 241, 297, 345, 392, 401, 448, 455, 503, 506, 560, 562, 569, 571, 573, 649, 650, 685, 701, 721, 728, 729, 813, 824, 859, 869], "accordingli": [95, 96, 125, 247, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 560, 693, 700, 832, 835], "account": [120, 852], "accumul": [581, 869], "accur": 840, "accuraci": [21, 736, 819, 822, 823, 825, 828, 833, 835, 840, 842, 844, 852, 857, 858, 859, 868, 869, 875], "accuracy_scor": [835, 852], "achiev": [21, 22, 41, 391, 393, 403, 405, 408, 409, 411, 412, 413, 416, 419, 426, 713, 718, 724, 733, 735, 736, 824, 858, 868], "acl": 862, "acm": [134, 173], "acquaint": 820, "across": [22, 73, 113, 120, 128, 129, 130, 215, 243, 295, 303, 305, 308, 336, 337, 420, 459, 460, 479, 645, 697, 698, 709, 729, 794, 849, 865, 874], "act": [233, 689, 869], "act_loss": 869, "act_loss_weight": 869, "action": [166, 433, 435, 832, 835, 838, 839], "action_step": 865, "activ": [151, 152, 180, 397, 398, 402, 403, 404, 409, 411, 412, 413, 414, 417, 419, 422, 424, 425, 426, 427, 450, 451, 637, 644, 673, 689, 726, 728, 729, 734, 768, 769, 810, 812, 813, 817, 822, 823, 856, 857, 859, 865, 868, 869], "actor": [134, 166], "actual": [4, 5, 22, 210, 219, 359, 563, 567, 568, 569, 729], "ad": [4, 10, 27, 28, 114, 115, 116, 142, 143, 150, 186, 189, 190, 287, 320, 355, 399, 424, 426, 461, 462, 655, 672, 693, 701, 708, 822, 837, 841, 848, 857, 863, 865, 869, 872], "adagrad": [4, 10, 698, 784, 862], "adam": [4, 10, 430, 431, 432, 433, 434, 435, 697, 698, 718, 721, 723, 725, 726, 732, 734, 735, 736, 743, 744, 761, 762, 764, 766, 772, 774, 775, 776, 783, 784, 803, 804, 807, 809, 810, 816, 817, 818, 819, 822, 823, 824, 825, 832, 833, 835, 840, 842, 843, 844, 852, 853, 856, 857, 858, 859, 869, 874, 875], "adapt": [13, 165, 196, 413, 427, 431, 432, 433, 720, 868], "adavantag": 859, "add": [9, 21, 22, 27, 28, 114, 115, 116, 117, 125, 132, 133, 135, 136, 140, 142, 143, 144, 150, 151, 152, 153, 154, 157, 158, 165, 170, 176, 189, 190, 191, 192, 198, 247, 251, 252, 265, 266, 275, 276, 288, 297, 298, 315, 316, 346, 393, 397, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 416, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 448, 451, 493, 494, 504, 505, 508, 509, 510, 511, 512, 513, 534, 535, 626, 637, 652, 653, 654, 655, 665, 673, 685, 693, 695, 698, 712, 713, 717, 721, 756, 797, 825, 827, 837, 841, 845, 848, 849, 852, 856, 857, 859, 862, 869], "add_edg": [28, 95, 96, 115, 125, 247, 355, 462, 557, 558, 856, 865], "add_edge_ag": 865, "add_edge_attribut": 297, "add_edge_log_p": 865, "add_edge_or_not": 865, "add_edges_from": 865, "add_nod": [27, 95, 96, 114, 355, 462, 557, 558, 865], "add_node_ag": 865, "add_node_and_upd": 865, "add_node_attribut": 297, "add_node_log_p": 865, "add_nodes_from": [125, 247], "add_on": 301, "add_reverse_edg": 841, "add_self_loop": [393, 398, 400, 405, 408, 409, 410, 411, 412, 413, 416, 419, 422, 425, 426, 428, 429, 559, 810], "addbackward0": [397, 399, 402, 403, 410, 413, 416, 418, 419, 422, 424, 425], "addedg": [13, 865], "addit": [4, 8, 21, 121, 140, 148, 173, 179, 182, 227, 228, 238, 244, 245, 339, 343, 344, 361, 412, 413, 419, 420, 430, 431, 432, 433, 434, 435, 448, 449, 451, 480, 481, 544, 560, 611, 625, 687, 693, 695, 698, 701, 702, 709, 713, 717, 721, 729, 730, 733, 734, 821, 827, 852, 856, 859, 860, 865, 872], "addition": [218, 346, 564, 566, 646, 831, 869], "addmetapath": 13, "addmmbackward": [404, 414, 426, 427], "addmmbackward0": 400, "addnod": 865, "address": [210, 459, 702, 709, 719, 723, 726, 834, 852, 853, 865, 869], "addrevers": [13, 431, 432, 433, 657, 693], "addselfloop": [13, 726], "adj": [33, 118, 146, 169, 402, 403, 404, 843], "adj_extern": [578, 579], "adj_neg": 843, "adjac": [13, 30, 31, 32, 118, 119, 126, 131, 248, 285, 338, 341, 342, 348, 394, 402, 403, 404, 413, 426, 427, 461, 569, 578, 579, 653, 661, 662, 663, 668, 672, 700, 701, 733, 785, 822, 823, 824, 825, 827, 856, 858, 859], "adjust": [120, 736, 868, 869], "adopt": [432, 434, 697, 736, 840, 869], "advanc": [210, 293, 564, 566, 687, 697, 699, 701, 712, 716, 820, 849, 858, 862, 869], "advantag": [313, 701, 718, 719, 734, 823, 849, 859], "affect": 862, "affili": [701, 845], "affiliated_with": [701, 786], "affin": [395, 849, 869], "affinit": 849, "after": [4, 73, 91, 92, 93, 94, 95, 96, 100, 113, 167, 238, 290, 303, 308, 315, 316, 343, 344, 357, 358, 393, 405, 406, 408, 409, 411, 412, 413, 416, 419, 426, 428, 452, 461, 545, 557, 558, 562, 566, 578, 579, 645, 662, 663, 668, 671, 693, 695, 700, 701, 712, 724, 735, 821, 823, 833, 838, 839, 843, 848, 852, 853, 858, 862, 865, 869, 874], "afterward": [4, 430, 431, 432, 433, 434, 435, 451, 842, 848], "ag": [705, 749, 790, 845], "again": [21, 644, 645, 701, 718, 721, 852, 858, 859, 875], "against": [21, 332, 735, 736, 828], "agg": [730, 770, 814], "agg_fn": [730, 770, 814], "aggreg": [5, 9, 73, 91, 92, 93, 94, 100, 111, 113, 117, 261, 262, 263, 264, 389, 393, 395, 398, 399, 400, 401, 403, 404, 405, 408, 409, 411, 412, 413, 414, 416, 419, 421, 422, 423, 425, 426, 430, 431, 432, 434, 460, 483, 484, 485, 486, 488, 489, 490, 491, 505, 507, 509, 510, 511, 512, 515, 516, 517, 518, 523, 524, 525, 526, 529, 530, 531, 532, 555, 556, 647, 655, 675, 711, 712, 714, 720, 722, 725, 728, 729, 730, 734, 736, 768, 769, 770, 774, 776, 800, 803, 812, 813, 814, 817, 819, 822, 824, 834, 840, 842, 844, 852, 856, 857, 858, 859], "aggregate_radiu": 858, "aggregate\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 776, "aggregate\ub418\uace0": 806, "aggregate\ub97c": 817, "aggregation\ub9cc": 808, "aggregation\uc744": [812, 814], "aggregator_typ": [400, 414, 416, 422, 425, 728, 736, 768, 776, 812, 819, 835, 874], "aggregator_type\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 776, "aggress": 828, "aggretate\ud558\ub294": 806, "agnn": 393, "agnost": [9, 21], "agre": 868, "agreement": 868, "ahead": [843, 862], "ai": [23, 822, 823, 824, 825, 827, 828, 832, 833, 835, 838, 839, 840, 845, 857, 858, 862, 865], "aifb": [132, 857], "aifbdataset": 857, "aifbfixed_complet": 857, "aim": [299, 856, 857, 858, 859, 862, 865, 868, 869], "aka": 712, "al": [72, 135, 136, 562, 822, 824, 834, 840, 842, 856, 862], "albert": [141, 142, 143], "algorithm": [0, 3, 4, 6, 10, 209, 238, 291, 298, 322, 329, 345, 358, 428, 433, 435, 436, 438, 560, 562, 567, 573, 698, 699, 701, 716, 720, 734, 823, 852, 860, 865, 868, 869, 872, 875], "alia": [1, 4, 29, 33, 44, 49, 50, 69, 76, 83, 84, 85, 86, 97, 98, 99, 104, 106, 111, 156, 226, 580, 606, 827], "align": [5, 9, 302, 334, 859], "alist": [730, 770, 814], "aliv": 290, "all": [4, 5, 6, 9, 14, 20, 21, 22, 26, 30, 34, 35, 39, 41, 44, 45, 48, 51, 52, 53, 54, 56, 60, 61, 68, 70, 73, 77, 78, 79, 81, 82, 87, 88, 89, 95, 101, 102, 104, 105, 113, 117, 119, 121, 122, 126, 127, 128, 129, 130, 131, 133, 137, 143, 144, 146, 148, 156, 157, 158, 161, 164, 169, 179, 182, 184, 186, 189, 190, 191, 208, 209, 212, 213, 214, 216, 217, 218, 219, 224, 225, 230, 232, 237, 238, 239, 240, 241, 243, 245, 248, 287, 289, 291, 297, 304, 305, 309, 313, 318, 319, 321, 322, 336, 337, 338, 339, 345, 350, 357, 360, 361, 391, 395, 403, 408, 409, 413, 419, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 454, 460, 461, 479, 481, 483, 485, 488, 490, 506, 509, 511, 515, 517, 523, 525, 529, 531, 544, 545, 552, 553, 557, 559, 564, 565, 566, 567, 568, 569, 570, 573, 574, 639, 645, 647, 649, 650, 655, 662, 663, 668, 671, 677, 687, 693, 695, 697, 698, 699, 700, 701, 702, 704, 707, 708, 709, 712, 714, 716, 719, 720, 722, 723, 724, 729, 731, 732, 733, 734, 735, 736, 752, 793, 794, 803, 816, 819, 820, 823, 824, 825, 826, 827, 830, 832, 833, 834, 835, 837, 838, 839, 841, 842, 843, 844, 845, 848, 852, 856, 857, 858, 859, 862, 865, 868, 874, 875], "all_acc": 858, "all_edg": [562, 567, 568, 761, 803], "all_logit": [842, 843], "all_loss": 858, "all_nodes_set": [291, 304, 309, 720], "alloc": [233, 322], "allow": [4, 20, 22, 30, 31, 32, 34, 35, 41, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 126, 131, 146, 169, 244, 245, 247, 248, 285, 290, 338, 339, 343, 344, 389, 391, 480, 482, 507, 544, 555, 557, 559, 567, 573, 576, 578, 579, 644, 693, 698, 701, 705, 706, 709, 719, 724, 726, 828, 842, 848, 852, 860, 869, 872, 874], "allow_dupl": 655, "allow_zero_in_degre": [393, 405, 408, 409, 411, 412, 413, 416, 419, 426], "almost": [230, 237, 569, 695, 718, 721, 723, 725, 732, 833, 875], "alon": [840, 841], "along": [9, 20, 21, 48, 73, 91, 92, 93, 94, 100, 113, 165, 210, 300, 302, 303, 308, 315, 316, 330, 355, 389, 445, 453, 507, 565, 566, 567, 598, 601, 602, 603, 605, 649, 650, 653, 703, 736, 822, 823, 827, 842, 858, 860, 869, 872, 874], "alongsid": [229, 718, 820], "alp": [428, 429], "alpha": [178, 179, 394, 413, 428, 429, 450, 461, 668, 672, 859], "alpha1": [430, 431], "alpha2": [430, 431], "alpha_": [405, 409, 411, 412, 442, 859], "alpha_1": [430, 431], "alpha_2": [430, 431], "alpha_i": 460, "alreadi": [64, 71, 89, 108, 109, 117, 156, 159, 161, 162, 163, 200, 289, 297, 320, 355, 584, 587, 589, 591, 594, 595, 607, 638, 691, 692, 693, 695, 707, 723, 731, 778, 832, 833, 835, 838, 839, 842, 843, 845, 856, 869], "also": [0, 1, 2, 4, 5, 8, 14, 21, 22, 27, 28, 43, 44, 46, 70, 74, 101, 102, 103, 104, 114, 118, 119, 122, 130, 131, 144, 162, 174, 184, 212, 214, 218, 224, 225, 238, 239, 244, 245, 293, 297, 310, 320, 321, 330, 337, 338, 339, 343, 344, 361, 389, 421, 422, 424, 430, 431, 432, 434, 459, 480, 481, 544, 557, 558, 561, 563, 569, 578, 579, 585, 586, 639, 644, 646, 687, 689, 691, 694, 695, 697, 698, 699, 700, 701, 704, 705, 707, 708, 709, 712, 717, 718, 719, 721, 722, 723, 732, 734, 736, 792, 824, 827, 833, 834, 835, 836, 841, 842, 843, 844, 845, 848, 849, 852, 853, 857, 858, 859, 862, 865, 866, 868, 869, 872, 874, 875], "altern": [21, 22, 295, 303, 308, 828, 852, 862, 868], "although": [4, 430, 431, 432, 433, 434, 435, 564, 566, 821, 823, 841, 842, 843], "alwai": [4, 21, 101, 102, 142, 143, 183, 189, 190, 200, 201, 238, 293, 298, 350, 357, 358, 437, 551, 562, 693, 700, 705, 834, 841], "always_preserv": 130, "am": 133, "amazon": [14, 21, 25, 135, 136, 137, 161, 162, 287, 795, 849], "amazon_co_buy_comput": 140, "amazonaw": [23, 695, 741, 781], "amazoncobui": [25, 135, 136], "amazoncobuycomputerdataset": [140, 197, 198], "amazoncobuydata": [695, 741, 781], "ambigu": [48, 57, 80], "among": [4, 14, 120, 161, 305, 343, 344, 391, 697, 722, 734, 838, 839, 843, 857, 858, 860, 865, 869, 870, 872], "amount": [243, 290, 479, 700, 868], "amp": [726, 810], "amp_dtyp": 726, "amp_en": 726, "amper": [9, 712, 797], "amplif": [401, 423], "amx": 726, "an": [0, 1, 4, 6, 7, 9, 14, 20, 21, 22, 31, 32, 34, 36, 39, 44, 46, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 64, 71, 73, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 104, 107, 109, 112, 113, 116, 118, 119, 126, 128, 131, 138, 140, 147, 151, 152, 156, 162, 165, 167, 168, 172, 173, 180, 181, 182, 186, 188, 207, 209, 210, 215, 218, 231, 232, 233, 238, 239, 241, 243, 244, 245, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 291, 293, 295, 297, 298, 300, 302, 303, 308, 309, 310, 312, 314, 315, 316, 328, 338, 339, 342, 345, 346, 347, 348, 356, 359, 361, 395, 398, 399, 400, 403, 404, 409, 411, 412, 413, 414, 417, 419, 420, 421, 424, 425, 427, 428, 429, 430, 431, 432, 434, 436, 437, 439, 445, 452, 479, 503, 506, 544, 555, 556, 560, 562, 563, 564, 565, 566, 567, 569, 573, 578, 579, 585, 586, 634, 637, 638, 639, 644, 645, 647, 649, 650, 653, 655, 656, 658, 661, 662, 663, 665, 666, 668, 673, 677, 679, 685, 687, 689, 692, 693, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 708, 709, 711, 712, 713, 714, 716, 717, 718, 720, 721, 722, 723, 726, 727, 728, 729, 730, 731, 733, 734, 735, 736, 739, 779, 803, 807, 814, 817, 821, 822, 824, 825, 831, 838, 839, 840, 841, 843, 844, 845, 848, 849, 852, 853, 856, 857, 859, 860, 862, 865, 869, 872, 874, 875], "analog": 859, "analogu": [183, 207, 569], "analysi": [134, 695, 862, 865], "analyz": 5, "andd": 120, "angl": [398, 409, 411, 412], "angstrom": 178, "ani": [4, 5, 20, 21, 22, 26, 70, 116, 121, 130, 131, 148, 207, 210, 212, 214, 217, 218, 229, 233, 238, 285, 293, 297, 300, 301, 313, 314, 338, 339, 342, 343, 344, 348, 356, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 389, 393, 394, 399, 407, 413, 419, 430, 431, 432, 433, 434, 435, 438, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 480, 481, 544, 561, 567, 568, 569, 570, 571, 598, 601, 602, 603, 638, 639, 641, 642, 643, 644, 645, 647, 660, 671, 687, 693, 698, 707, 709, 717, 726, 732, 734, 792, 794, 803, 823, 831, 834, 837, 838, 839, 842, 843, 852, 856, 857, 858, 859, 865, 868, 869, 874], "ani2": 868, "anim": [720, 823, 834, 858, 865, 868], "annot": [184, 862, 869], "anonym": [4, 145], "anoth": [4, 21, 48, 130, 142, 162, 179, 218, 303, 308, 315, 316, 348, 428, 562, 644, 707, 718, 725, 732, 735, 736, 823, 828, 838, 839, 841, 843, 857, 858, 859, 865], "answer": 180, "anyth": 21, "anywher": [164, 692], "apach": [23, 820, 821], "apart": 705, "api": [0, 4, 7, 8, 21, 22, 41, 56, 68, 101, 102, 229, 233, 239, 240, 291, 315, 316, 357, 569, 647, 691, 694, 695, 697, 700, 705, 706, 707, 708, 709, 711, 717, 723, 726, 729, 730, 745, 762, 766, 783, 786, 804, 809, 814, 820, 822, 823, 824, 825, 827, 828, 841, 842, 856, 858, 859, 863, 870, 872, 874], "apinn": [727, 736, 765, 767, 776, 811, 819], "api\u4e5f\u652f\u6301python\u7684\u53ef\u8fed\u4ee3\u7c7b\u578b": 752, "api\u4e5f\u80fd\u5904\u7406\u7279\u5f81\u6570\u636e\u548c\u56fe\u7ea7\u522b\u7684\u6807\u7b7e\u6570\u636e": 749, "api\u4ee5\u6613\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u52a0\u8f7d\u7684\u683c\u5f0f\u6784\u9020\u5212\u5206\u7ed3\u679c": 745, "api\u4ee5\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u4fe1\u606f\u65f6": 753, "api\u548c": 769, "api\u5c06": 751, "api\u5c06\u5f02\u6784\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 753, "api\u5c06\u65b0id\u5206\u914d\u7ed9\u8f93\u5165\u56fe\u7684\u8282\u70b9\u548c\u8fb9": 745, "api\u7684\u8f93\u5165": 752, "api\uac00": 786, "api\uacfc": 786, "api\ub294": [783, 784, 786, 793], "api\ub4e4": [784, 790, 791, 793, 794, 796], "api\ub4e4\uacfc": 796, "api\ub4e4\uc740": [784, 790], "api\ub4e4\uc744": [780, 784, 790, 793], "api\ub4e4\uc758": 784, "api\ub4e4\uc774": 778, "api\ub4e4\uc774\ub2e4": 784, "api\ub85c": 797, "api\ub97c": [781, 783, 784, 785, 786, 790, 792, 794, 810], "api\uc5d0": 786, "api\uc5d0\uc11c\ub294": 793, "api\uc640": 813, "api\uc740": 786, "api\uc758": 784, "appear": [36, 51, 52, 131, 217, 338, 639, 718], "append": [293, 300, 301, 313, 389, 687, 720, 721, 725, 726, 730, 770, 810, 814, 823, 824, 832, 833, 835, 842, 845, 852, 853, 856, 857, 858, 859, 865, 868, 869, 875], "appendix": [183, 303, 315], "appendix_c": 183, "appi": [393, 404, 405, 408, 409, 411, 413, 416, 419, 426], "appl": 22, "appli": [0, 1, 9, 20, 27, 28, 73, 91, 92, 93, 94, 100, 113, 116, 117, 121, 148, 218, 239, 297, 306, 355, 361, 389, 390, 392, 395, 398, 399, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 424, 425, 426, 427, 430, 431, 439, 440, 441, 446, 451, 452, 453, 454, 455, 456, 460, 461, 462, 504, 505, 604, 624, 626, 655, 657, 661, 662, 663, 668, 670, 693, 709, 711, 713, 728, 729, 732, 734, 817, 824, 827, 841, 848, 856, 857, 858, 859, 862, 869], "applic": [14, 138, 218, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 442, 824, 843, 844, 862, 865], "apply_edg": [5, 9, 20, 35, 462, 676, 677, 678, 679, 680, 712, 713, 726, 732, 735, 756, 757, 762, 764, 772, 775, 797, 799, 804, 807, 810, 816, 818, 859, 869], "apply_func": [414, 415, 857], "apply_nod": [34, 869], "apply_node_func": [73, 91, 92, 93, 94, 100, 113, 546, 547, 548, 549, 550, 715, 759, 801, 862], "apply_norm": 399, "appnp": [394, 672], "appoint": 6, "appreci": 862, "approach": [131, 285, 303, 315, 338, 345, 436, 437, 438, 551, 573, 697, 701, 707, 709, 712, 713, 858, 866, 868, 872], "appropri": [120, 210, 211, 726, 869], "approv": 21, "approx": 413, "approxim": [14, 345, 394, 436, 438, 573, 672], "apt": [821, 852], "ar": [1, 4, 5, 6, 9, 10, 11, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 78, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 135, 136, 137, 140, 142, 143, 145, 147, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 163, 165, 171, 173, 174, 178, 179, 180, 182, 186, 187, 188, 191, 192, 193, 195, 197, 210, 211, 212, 214, 215, 217, 218, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 309, 310, 313, 314, 317, 318, 319, 321, 322, 328, 336, 337, 338, 339, 342, 343, 344, 345, 349, 355, 356, 357, 361, 387, 389, 391, 392, 393, 395, 401, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 436, 437, 438, 448, 450, 451, 455, 459, 461, 462, 479, 480, 481, 482, 504, 507, 544, 545, 547, 551, 555, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 576, 578, 579, 581, 607, 615, 617, 618, 620, 621, 626, 630, 638, 639, 641, 642, 643, 645, 647, 649, 650, 654, 655, 661, 671, 685, 687, 691, 693, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 716, 717, 718, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 753, 761, 778, 782, 793, 794, 800, 803, 804, 819, 821, 822, 823, 824, 825, 826, 827, 828, 829, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 848, 852, 856, 857, 858, 859, 860, 862, 863, 865, 868, 869, 870, 872, 875], "arang": [4, 9, 20, 95, 96, 117, 157, 158, 191, 209, 215, 217, 218, 244, 292, 293, 298, 299, 301, 302, 317, 326, 339, 343, 344, 387, 391, 480, 544, 557, 558, 559, 560, 611, 612, 615, 621, 622, 623, 633, 655, 658, 659, 701, 717, 718, 762, 763, 804, 806, 838, 839, 843, 844, 853, 857, 868], "arbitrari": [4, 20, 48, 111, 125, 247, 302, 359, 420, 562, 647, 675, 689, 693, 701, 733, 735, 825, 841, 843, 865], "arbitrarili": 675, "arc": 704, "architectur": [9, 445, 689, 712, 824, 857, 858, 869], "archiv": 201, "archlinux": 852, "archwiki": 852, "area": 843, "arena": 849, "arg": [22, 121, 313, 334, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 420, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 697, 721, 743, 761, 764, 783, 803, 807, 833, 848, 853, 874, 875], "argmax": [822, 823, 835, 840, 842, 844, 852, 857, 862], "argo_scal": 848, "argo_tutori": [830, 848, 851], "argument": [4, 20, 22, 34, 36, 37, 51, 54, 73, 93, 94, 100, 108, 113, 117, 121, 122, 131, 140, 210, 211, 214, 218, 229, 238, 240, 244, 285, 290, 297, 310, 313, 326, 331, 338, 339, 343, 344, 350, 358, 359, 389, 418, 420, 430, 431, 432, 433, 434, 435, 460, 480, 507, 544, 560, 566, 567, 568, 570, 571, 578, 579, 639, 644, 647, 685, 701, 702, 707, 708, 712, 717, 719, 723, 733, 792, 804, 805, 822, 841, 843, 849, 852, 859], "argument\ub85c": 809, "ari": [825, 862], "arnold": 862, "around": [290, 833, 835, 875], "arr": [4, 317, 698, 744, 784], "arrai": [4, 7, 21, 101, 102, 125, 126, 148, 197, 198, 205, 207, 215, 218, 231, 238, 247, 248, 310, 317, 334, 560, 564, 565, 566, 569, 578, 579, 585, 586, 693, 698, 701, 709, 786, 837, 838, 839, 845, 852, 858], "arrang": [560, 578, 579, 695], "array_lik": 207, "array\ub294": 786, "array\ub4e4\uc5d0": 784, "array\ub4e4\uc744": 784, "array\ub4e4\uc758": 784, "array\ub97c": 793, "arrow": [834, 858], "arrows": 862, "art": [700, 828, 869], "articl": [149, 182, 185, 192, 841, 849], "arxiv": [134, 137, 146, 147, 161, 162, 169, 171, 174, 180, 182, 188, 195, 287, 303, 434, 435, 450, 562, 723, 725, 773, 828, 835, 848, 869, 875], "as_edge_prediction_sampl": [212, 214], "as_tensor": 824, "as_tupl": [695, 741, 781, 786, 857, 858], "asarrai": [4, 698, 744, 784], "ascend": [197, 205, 285, 297, 445, 570], "asgraphpreddataset": 824, "aslinkpreddataset": 853, "aspect": [178, 179, 865], "aspirincod": 754, "assembl": [299, 865, 869], "assert": [89, 121, 217, 288, 292, 294, 298, 317, 695, 741, 761, 781, 803], "assign": [4, 27, 28, 39, 52, 78, 114, 115, 125, 141, 142, 143, 147, 173, 219, 220, 221, 222, 223, 230, 234, 237, 238, 239, 247, 357, 358, 545, 560, 569, 645, 698, 699, 700, 701, 706, 707, 708, 732, 736, 751, 792, 816, 842, 845, 852, 857, 858, 869], "associ": [43, 46, 47, 74, 75, 103, 197, 205, 239, 240, 299, 305, 389, 420, 431, 433, 564, 566, 567, 568, 569, 570, 698, 704, 709, 733, 794, 857, 858, 859, 868, 869], "assum": [4, 48, 130, 207, 210, 212, 213, 214, 215, 217, 219, 239, 243, 297, 310, 326, 348, 430, 479, 564, 566, 567, 568, 569, 644, 693, 695, 697, 698, 701, 731, 732, 734, 735, 786, 840, 842, 845, 852, 853, 865, 869, 874, 875], "assume_num_node_within_int32": 310, "assumpt": [20, 702, 849, 858], "assur": 685, "astyp": [405, 406, 409, 411, 412, 422, 845], "asv": 828, "asym_a": 827, "asymmetr": 704, "async_op": [297, 310, 325, 336, 337], "asynchron": [210, 288, 292, 294, 295, 297, 298, 303, 308, 310, 313, 317, 325, 336, 337], "aten": 824, "atom": [177, 178, 179, 195, 395, 447], "atom_encod": 824, "atomencod": 824, "att": [421, 869], "att_anim": 869, "att_map": 869, "att_weight_map": 869, "attach": [4, 141, 142, 143, 189, 190, 698, 857, 868], "attempt": 200, "attend": [865, 869], "attent": [9, 361, 393, 398, 405, 406, 409, 411, 412, 421, 428, 429, 440, 443, 444, 448, 450, 451, 453, 454, 455, 460, 637, 653, 673, 689, 726, 827, 830, 860, 861, 870, 872], "attention_weight": 409, "attenu": [401, 423], "attn": [448, 824], "attn_aft": 429, "attn_bef": 428, "attn_bia": [448, 451, 689], "attn_bias_typ": [448, 451], "attn_drop": [409, 411, 412, 448], "attn_dropout": [428, 429, 450, 451], "attn_fc": 859, "attn_head": 859, "attn_mask": [448, 451, 687, 689], "attr": [165, 179, 430, 434, 435, 450, 604, 624, 734, 773, 774, 786, 817, 844, 874], "attract": [73, 113], "attribut": [22, 122, 125, 140, 149, 159, 165, 179, 185, 186, 246, 247, 289, 297, 302, 303, 308, 315, 316, 328, 646, 649, 650, 685, 699, 701, 714, 732, 786, 840, 841, 844, 845, 869], "attrvisitor": 22, "auc": [832, 843, 853], "augment": [450, 652, 658, 659, 660, 701, 822, 858], "auroc": 832, "aut": 869, "authent": 852, "author": [145, 151, 152, 177, 178, 179, 181, 309, 318, 395, 653, 692, 701, 704, 723, 786, 856, 857, 858, 859, 862, 865, 868, 869], "author___affiliated_with___institut": 701, "author___writes___pap": 701, "authorship": [151, 152], "auto": [21, 22, 820, 827, 832, 835, 848, 869, 875], "auto_cast_to_optimal_dtyp": 309, "autocast": [726, 810], "autoencod": 857, "autograd": [9, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 581, 828], "autom": 21, "automat": [4, 21, 22, 156, 219, 289, 421, 424, 428, 563, 644, 692, 698, 699, 701, 712, 717, 722, 726, 810, 827, 852, 853, 856], "auxiliari": [700, 701], "av": 401, "avail": [4, 21, 118, 119, 148, 168, 183, 186, 207, 229, 238, 287, 322, 336, 337, 345, 436, 438, 571, 573, 693, 697, 722, 734, 736, 823, 828, 833, 849, 866, 869, 872], "averag": [4, 10, 137, 149, 175, 177, 181, 183, 185, 195, 243, 401, 403, 419, 439, 479, 647, 662, 663, 668, 734, 817, 827, 833, 842, 843, 844, 859, 869, 874, 875], "avg": 25, "avg_deg": 183, "avg_degre": [662, 663, 668], "avg_loss": [824, 869], "avgpool": [430, 435], "avoid": [4, 21, 34, 70, 73, 89, 93, 94, 100, 113, 116, 130, 218, 326, 331, 342, 348, 393, 403, 405, 408, 409, 411, 412, 413, 416, 419, 426, 448, 450, 451, 561, 567, 568, 569, 570, 638, 645, 647, 687, 698, 701, 705, 713, 724, 730, 833, 875], "aw": [287, 849], "awai": [4, 863, 872], "awar": [717, 734, 859], "awesom": 21, "ax": [823, 865, 868], "axi": [408, 856, 858, 859, 868], "b": [6, 22, 26, 45, 79, 82, 105, 118, 119, 121, 127, 128, 129, 131, 179, 310, 311, 320, 356, 392, 397, 406, 409, 411, 412, 417, 419, 424, 432, 434, 439, 440, 441, 442, 443, 445, 446, 447, 448, 449, 453, 454, 455, 463, 503, 506, 555, 556, 562, 611, 615, 620, 621, 632, 633, 639, 644, 649, 650, 654, 699, 729, 734, 761, 762, 764, 766, 769, 774, 803, 804, 807, 809, 813, 817, 825, 827, 840, 844, 857, 858, 862, 865, 868], "b_": [858, 865, 868], "b_dst": 127, "b_h": 869, "b_iou": 862, "b_o": 869, "b_size": 848, "b_src": 127, "ba": [118, 127, 131, 141, 142, 143, 356, 562], "bachman": 845, "back": [21, 22, 44, 104, 122, 562, 644, 647, 699, 721, 806, 841], "backend": [3, 4, 6, 8, 9, 21, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 210, 212, 213, 214, 217, 244, 245, 246, 247, 248, 285, 288, 298, 338, 339, 343, 344, 345, 355, 361, 436, 437, 438, 439, 440, 441, 442, 446, 447, 462, 480, 481, 544, 551, 573, 575, 638, 640, 644, 645, 646, 654, 660, 666, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 697, 698, 705, 707, 727, 731, 743, 744, 783, 784, 792, 824, 828, 833, 849, 852, 853, 859, 862, 874, 875], "backend_unittest": 21, "background": [303, 308], "backprop": [726, 810], "backpropag": 723, "backpropagate\ub97c": 809, "backtrack": [69, 348, 666, 858], "backup": 697, "backward": [4, 9, 10, 118, 119, 336, 337, 387, 391, 430, 431, 432, 433, 434, 435, 459, 697, 698, 716, 717, 718, 721, 723, 725, 726, 732, 734, 735, 736, 743, 744, 761, 762, 764, 766, 772, 774, 775, 776, 783, 784, 803, 804, 807, 809, 810, 816, 817, 818, 819, 822, 823, 824, 825, 832, 833, 835, 840, 842, 843, 844, 852, 853, 856, 857, 858, 859, 862, 874, 875], "backwards\ub97c": 803, "bad": [21, 22, 448, 449, 451, 453, 454, 858], "bag": [135, 136, 155, 187, 193], "baidu": 21, "balanc": [189, 190, 238, 357, 358, 461, 700, 852], "balance_edg": [209, 238, 357, 358, 701, 745, 786, 852, 853], "balance_ntyp": [209, 238, 357, 358, 701, 745, 786, 852], "balkance_edg": 209, "ban": 188, "bandwidth": [290, 303, 308], "bar": [120, 822, 823, 827], "barab\u00e1si": [141, 142, 143], "barrier": [4, 848], "baryshnikov": 857, "base": [4, 6, 13, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 230, 237, 238, 241, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 545, 562, 564, 566, 604, 614, 624, 637, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 689, 691, 698, 699, 708, 717, 729, 734, 735, 823, 828, 831, 838, 839, 843, 844, 845, 857, 858, 859, 868, 869], "base_dir": [309, 838, 839], "baselin": 828, "basenam": [838, 839], "basetransform": [13, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675], "bash": [21, 821], "basi": [392, 399, 424, 455, 463, 723, 857], "basic": [7, 9, 156, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 691, 694, 700, 703, 820, 826, 840, 842, 843, 845, 852, 853, 858, 865, 869, 875], "basicfeaturestor": [304, 318], "batch": [4, 6, 7, 13, 20, 22, 27, 28, 36, 37, 38, 53, 54, 95, 96, 101, 102, 114, 115, 116, 117, 128, 129, 130, 165, 168, 172, 183, 186, 208, 210, 211, 218, 244, 245, 293, 297, 301, 306, 339, 342, 345, 347, 348, 356, 387, 391, 392, 397, 408, 417, 428, 432, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 452, 453, 454, 455, 480, 481, 544, 555, 556, 557, 558, 559, 561, 567, 573, 575, 576, 577, 612, 613, 620, 638, 647, 648, 649, 650, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 694, 695, 697, 698, 712, 715, 716, 719, 723, 724, 729, 740, 743, 744, 746, 774, 780, 783, 784, 787, 806, 820, 824, 827, 831, 833, 848, 859, 865, 869], "batch_depend": [212, 303], "batch_f": [439, 440, 441, 442, 443, 444, 445, 446, 447], "batch_first": [449, 687, 728, 768, 812], "batch_g": [439, 440, 441, 442, 443, 444, 445, 446, 447], "batch_input": [697, 743, 783, 852, 853], "batch_label": [697, 743, 783, 852], "batch_norm": [408, 417, 452], "batch_num_edg": [95, 96, 122, 685, 734, 817, 844], "batch_num_nod": [96, 122, 685, 734, 817, 844], "batch_pr": [697, 743, 783, 852, 853], "batch_siz": [4, 122, 183, 209, 210, 211, 212, 213, 214, 217, 218, 293, 300, 301, 303, 308, 319, 387, 391, 430, 434, 435, 448, 450, 451, 694, 695, 697, 698, 717, 718, 719, 720, 721, 723, 724, 725, 734, 740, 741, 743, 744, 761, 762, 763, 764, 766, 774, 780, 781, 783, 784, 803, 804, 805, 806, 807, 809, 817, 824, 832, 833, 835, 844, 848, 852, 853, 858, 862, 869, 874, 875], "batch_tre": 862, "batch_walk": 387, "batched_g": 824, "batched_graph": [165, 168, 172, 186, 211, 734, 774, 817, 844, 858, 862], "batched_label": [165, 168, 172, 186, 858], "batched_pmpd": 858, "batchedgraph": 869, "batcher": 862, "batcher_dev": 862, "batchnorm": 420, "batchnorm1": 824, "batchnorm1d": [420, 824, 858], "batchnorm2": 824, "bbg": 122, "bc": 118, "bcewithlogitsloss": [824, 859], "bdd": [392, 424], "beam": 869, "beat": 21, "becam": 167, "becasu": 320, "becaus": [4, 9, 21, 22, 34, 73, 93, 94, 100, 113, 122, 131, 285, 338, 389, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 569, 698, 699, 700, 705, 713, 719, 720, 735, 825, 833, 842, 852, 858, 859, 866, 872, 875], "becom": [122, 126, 131, 247, 248, 285, 338, 425, 557, 623, 718, 869], "been": [4, 22, 120, 131, 162, 173, 188, 228, 285, 290, 338, 392, 421, 424, 569, 695, 702, 719, 723, 824, 858, 862, 869], "befor": [4, 21, 89, 108, 117, 126, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 220, 221, 222, 223, 233, 248, 288, 290, 293, 297, 298, 300, 301, 303, 308, 313, 320, 336, 337, 357, 428, 429, 440, 451, 459, 545, 556, 563, 566, 569, 671, 687, 689, 698, 699, 700, 701, 719, 721, 724, 726, 827, 833, 840, 845, 848, 852, 858, 859, 862, 866, 869, 872, 874, 875], "begin": [356, 450, 761, 803, 825, 826, 852, 858, 859, 865, 874], "beginn": 820, "behavior": [227, 228, 288, 292, 294, 298, 309, 317, 698, 705, 735, 845, 849, 865, 868, 869], "behaviour": [832, 833, 835, 838, 839], "behind": [698, 857, 874], "being": [21, 45, 79, 82, 105, 108, 122, 212, 214, 217, 244, 247, 297, 303, 308, 315, 316, 322, 339, 343, 344, 480, 544, 555, 556, 561, 567, 578, 579, 843, 858, 865, 868], "believ": 849, "belong": [4, 68, 116, 142, 143, 174, 181, 189, 190, 197, 205, 218, 227, 228, 230, 234, 237, 238, 305, 336, 337, 349, 357, 545, 638, 685, 700, 701, 732, 825, 845, 857, 858, 866, 872], "below": [4, 5, 22, 89, 131, 218, 238, 285, 293, 338, 342, 423, 424, 463, 573, 662, 663, 668, 693, 695, 697, 698, 699, 700, 701, 702, 706, 708, 709, 716, 717, 725, 729, 733, 822, 823, 824, 825, 827, 828, 838, 839, 848, 852, 853, 856, 858, 859, 865, 868, 869, 874], "benchmark": [22, 132, 135, 136, 146, 151, 152, 153, 159, 162, 169, 179, 192, 345, 346, 349, 417, 478, 665, 694, 701, 740, 780, 824, 833, 835], "benefici": [713, 852], "benefit": [695, 701, 831, 843, 852], "benign": 161, "bernoulli": [731, 732, 771, 772, 815, 816, 865], "bernoulli_": [761, 803], "bernoulli_action_log_prob": 865, "bert": [159, 869], "besid": [159, 350, 420, 571, 697, 713, 721, 728, 730, 865, 869], "best": [4, 14, 399, 554, 669, 691, 719, 724, 778, 827, 830, 835, 840, 841, 843, 850, 851, 859], "best_test_acc": [840, 842], "best_val_acc": [840, 842], "beta": [4, 10, 393, 396, 413, 869], "beta1": [4, 10, 430, 431], "beta2": [4, 10, 430, 431], "beta_": 455, "beta_1": [430, 431], "beta_2": [430, 431], "beta_l": 413, "better": [21, 637, 673, 695, 708, 720, 781, 825, 828, 841, 845, 848, 849, 858], "between": [4, 5, 26, 48, 56, 66, 72, 101, 102, 116, 118, 119, 142, 147, 149, 155, 166, 174, 178, 179, 182, 185, 187, 193, 195, 207, 224, 238, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 295, 297, 303, 308, 336, 337, 345, 395, 413, 416, 433, 435, 436, 438, 448, 453, 454, 455, 459, 461, 545, 563, 564, 567, 573, 574, 578, 579, 647, 689, 699, 701, 704, 709, 718, 724, 732, 734, 735, 824, 825, 827, 841, 843, 845, 856, 857, 858, 859, 865, 868, 869, 874], "bewteen": [405, 411, 412], "beyond": [120, 242, 243, 479, 701, 842, 843], "bf": 549, "bf16": 726, "bfs_nodes_gener": [0, 549], "bg": [36, 37, 38, 95, 96, 116, 122, 128, 129, 144, 430, 432, 434, 435, 555, 556, 575, 576, 577, 649, 650, 685, 708, 734, 752, 774, 793, 817, 874], "bg1": [116, 638], "bhg": [122, 685], "bi": [6, 347, 638, 869], "bi_part": 405, "bia": [390, 397, 398, 399, 400, 402, 403, 404, 406, 409, 410, 411, 412, 413, 416, 418, 419, 422, 424, 425, 426, 427, 448, 451, 453, 454, 455, 456, 569, 689, 725, 728, 768, 812, 856, 857, 859, 862], "bias": 455, "biasedmha": 689, "bidecod": [732, 772], "bidirect": [4, 116, 162, 173, 218, 346, 437, 551, 562, 638, 665, 841], "big": [409, 734], "bigger": [844, 863, 872], "billion": [701, 716], "bilstm": 460, "bin": [204, 350, 571, 696, 700, 742, 782, 786, 845], "binar": 862, "binari": [5, 9, 161, 163, 171, 180, 186, 189, 190, 238, 461, 504, 505, 571, 687, 700, 701, 712, 786, 797, 825, 843, 859, 862], "binary_cross_entropy_with_logit": [721, 832, 843, 853], "binaryreducebackward": [393, 405, 411], "bind": [395, 821, 848], "bio": 849, "bipartit": [9, 26, 44, 45, 68, 79, 82, 104, 105, 116, 118, 119, 125, 126, 130, 356, 396, 398, 399, 400, 403, 404, 405, 406, 408, 409, 411, 412, 416, 419, 422, 425, 552, 562, 569, 639, 704, 709, 729, 730, 789, 794, 804, 813, 814, 834, 858, 868], "bipartite_from_networkx": 126, "bipartite_from_scipi": 125, "bisect": [357, 358, 699], "bisect_left": 699, "bit": [21, 22, 341, 708, 735, 865, 869], "bitcoin": 145, "bitcoinotc": [25, 145], "bitcoinotcdata": [695, 741, 781], "bitcoinotcdataset": [692, 739, 779], "bla": [14, 345, 436, 438, 573], "blitz": [820, 830, 845, 847], "blitz_1_introduct": 840, "blitz_2_dglgraph": 841, "blitz_3_message_pass": 842, "blitz_4_link_predict": 843, "blitz_5_graph_classif": 844, "blitz_6_load_data": 845, "bloat16": 726, "blob": [165, 210, 848], "block": [4, 10, 127, 131, 180, 183, 210, 212, 213, 214, 218, 289, 291, 301, 305, 392, 424, 444, 459, 639, 697, 698, 699, 717, 718, 720, 721, 722, 723, 725, 727, 729, 730, 743, 744, 761, 762, 763, 764, 765, 766, 769, 783, 784, 785, 803, 804, 806, 807, 808, 809, 811, 813, 824, 832, 833, 835, 848, 852, 853, 857, 858, 859, 865, 875], "block3": [761, 803], "block_diag": 858, "block_id": [761, 803], "block_typ": 444, "blocksampl": [4, 212, 214, 719, 761, 803, 805], "blog": [829, 849], "blue": 823, "bmatrix": 825, "bmm": 857, "bn": 858, "board": 849, "bodi": 22, "boil": 856, "boldsymbol": [735, 761, 775, 803, 818], "bond": [177, 179, 195], "book": [137, 230, 235, 237, 700, 701, 829], "bool": [4, 6, 10, 31, 48, 57, 58, 65, 66, 67, 95, 96, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 207, 210, 211, 212, 214, 215, 217, 224, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 244, 285, 289, 290, 293, 295, 297, 301, 303, 305, 308, 309, 310, 315, 316, 322, 325, 327, 336, 337, 339, 342, 343, 344, 345, 346, 348, 357, 358, 387, 390, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 448, 450, 451, 452, 456, 461, 480, 544, 545, 547, 549, 550, 551, 557, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 573, 574, 575, 637, 638, 639, 645, 647, 649, 650, 651, 653, 654, 655, 665, 666, 671, 673, 691, 693, 695, 731, 732, 738, 761, 771, 772, 778, 781, 786, 803, 815, 816, 837, 845, 852, 853, 865], "boolean": [53, 54, 210, 211, 214, 230, 237, 244, 295, 297, 303, 308, 310, 315, 316, 325, 332, 336, 337, 340, 480, 568, 686, 698, 732, 736, 784, 840, 852], "booltensor": 859, "boost": 724, "borrow": [22, 199, 200, 734], "both": [0, 9, 21, 22, 44, 56, 62, 63, 73, 89, 104, 116, 118, 119, 130, 134, 149, 155, 181, 185, 187, 193, 210, 214, 228, 297, 303, 308, 309, 315, 316, 320, 342, 348, 355, 356, 389, 403, 404, 405, 406, 409, 410, 411, 412, 419, 421, 422, 425, 449, 455, 480, 481, 561, 571, 598, 601, 602, 603, 605, 615, 620, 621, 638, 639, 644, 645, 647, 693, 697, 698, 701, 703, 708, 709, 711, 712, 720, 726, 732, 827, 828, 837, 840, 841, 843, 845, 852, 857, 858, 859, 860, 865, 869, 872], "bother": [692, 827], "bottom": [142, 143, 862], "bought": [135, 136, 137, 704, 719, 789], "bound": [233, 449, 454, 569, 726], "boundari": 823, "bpr": [735, 818], "branch": [21, 192, 700, 786], "brand": 22, "breadth": [123, 124, 564], "break": [51, 217, 869], "breviti": 695, "brew": 821, "brief": [703, 858], "briefli": 823, "bring": [20, 668, 724], "broadcast": [5, 9, 128, 129, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 321, 414, 425, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 612, 625, 626, 627, 628, 629, 712], "broadcast_edg": 129, "broadcast_nod": 128, "broken": [832, 833, 835, 838, 839, 859], "brook": 754, "brookhuang16211": 754, "bruteforc": [14, 345, 436, 438, 573], "bsddmm": 824, "bspmm": 824, "bucket": 13, "budget": 215, "buffer": [233, 345, 436, 438, 573, 724], "buffer_devic": 720, "bugfix": 21, "bui": [552, 704, 789], "build": [4, 14, 22, 157, 158, 191, 212, 213, 214, 233, 303, 315, 439, 440, 441, 442, 443, 444, 445, 446, 447, 567, 688, 695, 698, 705, 709, 710, 716, 719, 722, 731, 734, 736, 781, 820, 821, 824, 825, 826, 840, 843, 844, 859, 862, 865], "build_dgl": 821, "build_ext": [21, 821], "build_hidden_lay": 857, "build_input_lay": 857, "build_model": 857, "build_output_lay": 857, "built": [3, 9, 13, 22, 34, 73, 91, 92, 93, 94, 100, 113, 162, 179, 181, 287, 698, 711, 713, 726, 729, 733, 734, 736, 756, 797, 810, 813, 820, 827, 828, 831, 842, 856, 859, 862, 865], "builtin": [4, 9, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 695, 696, 721, 722, 823, 832, 842, 843, 856, 857, 859], "builtindataset": [723, 725, 832, 833, 835, 875], "builtinfunct": [34, 73, 91, 92, 93, 94, 100, 113], "bulit": [34, 73, 93, 94, 100, 113], "bunch": [701, 729], "busi": 194, "button": 21, "buyer": 704, "bwtype": 562, "byte": [233, 288, 298, 322, 329], "c": [6, 21, 22, 25, 118, 119, 120, 121, 151, 152, 179, 183, 192, 287, 291, 349, 398, 399, 400, 407, 417, 420, 461, 503, 708, 793, 821, 823, 848, 862, 868, 869], "c_": [178, 179, 403, 410, 419, 857, 859, 862, 868], "c_csc_graph": 297, "c_etyp": [323, 324, 431, 433, 714, 758, 800], "c_etype_func_dict": [431, 433], "c_etype_str": [323, 324], "c_i": 857, "c_j": 862, "c_k": [349, 395], "cach": [23, 138, 139, 140, 142, 143, 148, 156, 189, 190, 209, 210, 215, 288, 298, 303, 308, 322, 329, 426, 696, 721, 807, 822, 823, 825, 840, 842, 843, 849, 856, 857, 858, 859, 865], "cache_path": 209, "cache_s": 298, "cache_size_in_byt": [288, 298], "caculatorgetbrand": 22, "cal": [178, 179], "calc": 22, "calcul": [4, 22, 314, 326, 331, 398, 399, 400, 437, 482, 551, 576, 577, 578, 579, 604, 624, 645, 697, 701, 734, 817, 823, 827, 832, 833, 858, 859, 865, 868, 869, 875], "calculate_gain": [725, 728, 768, 812, 857, 859], "calculatorobject": 22, "call": [0, 4, 6, 9, 21, 22, 26, 45, 52, 66, 79, 82, 105, 108, 117, 118, 119, 131, 145, 156, 215, 238, 285, 288, 292, 293, 294, 297, 298, 301, 310, 317, 325, 336, 337, 338, 361, 389, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 428, 430, 431, 432, 433, 434, 435, 478, 561, 567, 569, 620, 644, 645, 649, 650, 685, 695, 698, 699, 700, 701, 704, 707, 708, 709, 712, 713, 714, 715, 723, 728, 729, 730, 732, 734, 735, 751, 792, 797, 824, 833, 834, 838, 839, 840, 841, 842, 852, 858, 859, 862, 865, 869, 870, 872, 875], "callabl": [4, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 121, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 218, 293, 301, 359, 389, 398, 403, 404, 409, 411, 412, 413, 414, 415, 417, 419, 422, 424, 425, 426, 427, 450, 451, 459, 546, 547, 548, 549, 550, 562, 657, 728], "came": 22, "can": [4, 5, 6, 7, 9, 12, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 73, 74, 75, 77, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 117, 118, 119, 120, 122, 125, 128, 129, 130, 131, 147, 156, 161, 163, 168, 186, 197, 207, 210, 211, 212, 214, 215, 218, 219, 227, 228, 230, 232, 233, 238, 239, 240, 243, 244, 245, 247, 285, 288, 290, 292, 293, 294, 297, 298, 301, 303, 305, 308, 309, 310, 315, 316, 317, 318, 325, 336, 337, 338, 339, 343, 344, 345, 347, 357, 358, 361, 388, 389, 390, 391, 393, 395, 397, 398, 399, 400, 401, 403, 405, 406, 407, 408, 409, 411, 412, 413, 416, 418, 419, 422, 424, 425, 426, 428, 436, 437, 438, 440, 448, 452, 455, 456, 457, 458, 459, 460, 463, 479, 480, 482, 507, 544, 545, 551, 555, 556, 557, 558, 559, 560, 563, 566, 567, 568, 569, 570, 573, 576, 577, 578, 579, 623, 639, 644, 645, 647, 649, 650, 672, 686, 687, 689, 691, 692, 693, 695, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 779, 791, 820, 821, 823, 824, 825, 826, 827, 828, 831, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 848, 849, 852, 853, 856, 857, 858, 859, 860, 862, 865, 866, 868, 869, 870, 872, 874], "candid": [345, 436, 438, 573], "cannot": [4, 20, 21, 210, 305, 339, 343, 344, 434, 480, 544, 698, 699, 701, 706, 707, 709, 712, 731, 751, 753, 792, 794], "canon": [4, 26, 36, 39, 46, 48, 51, 52, 57, 66, 80, 109, 131, 238, 323, 324, 338, 391, 431, 646, 654, 661, 709, 794, 831, 837, 838, 857], "canonical_etyp": [4, 52, 66, 109, 389, 431, 432, 433, 654, 709, 714, 722, 730, 753, 758, 761, 762, 764, 765, 770, 794, 800, 803, 804, 807, 808, 814, 857], "cap": 848, "capabl": [210, 726, 869], "capac": [1, 9, 322, 329, 573, 701, 712, 716, 859, 860, 872], "capav": [178, 179], "capsul": [361, 830, 870, 871, 872], "captur": [704, 714], "care": [162, 430, 431, 432, 433, 434, 435], "carlo": [433, 435], "carri": [700, 701, 734], "cartesian": 455, "case": [4, 5, 9, 14, 21, 22, 27, 32, 34, 41, 42, 44, 48, 51, 73, 93, 94, 100, 104, 108, 109, 113, 116, 125, 126, 131, 140, 181, 200, 210, 212, 230, 237, 247, 248, 285, 297, 338, 347, 356, 361, 393, 396, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 416, 419, 422, 425, 426, 439, 440, 441, 442, 443, 444, 445, 446, 447, 461, 462, 566, 574, 578, 579, 620, 626, 644, 685, 687, 692, 693, 696, 698, 701, 708, 709, 713, 717, 719, 722, 723, 729, 732, 813, 825, 827, 843, 845, 849, 852, 857, 858, 859, 862, 869], "case1": [456, 460, 598, 601, 602, 603, 604, 605, 614, 616, 617, 618, 619, 624, 630, 654, 655, 660, 661, 666, 670, 671, 675], "case2": [456, 460, 598, 601, 602, 603, 604, 605, 614, 616, 617, 618, 619, 624, 630, 654, 655, 660, 661, 666, 670, 671, 675], "case3": [456, 460, 604, 614, 616, 619, 624, 630, 654, 655], "case4": 456, "case\ub4e4\uc5d0": 786, "casio": 22, "cast": [64, 71, 131, 285, 309, 338, 399, 641, 642, 643, 824], "cat": [4, 157, 158, 191, 218, 300, 313, 439, 440, 441, 442, 443, 444, 445, 446, 447, 453, 456, 460, 573, 687, 713, 718, 722, 732, 757, 762, 765, 772, 799, 804, 808, 816, 823, 824, 832, 833, 842, 843, 845, 853, 858, 859, 865, 868, 875], "cat_feat": [713, 757, 799], "catbackward": 442, "categor": [160, 194, 732, 841, 849, 857, 865], "categori": [5, 132, 133, 135, 136, 144, 150, 154, 155, 161, 170, 176, 187, 193, 721, 736, 827, 840, 843, 844, 845, 857], "category_id": 857, "caus": [290, 293, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 729, 848], "caution": 4, "cc": [22, 167, 700, 786], "cd": [21, 137, 821], "cdgnn": 858, "cdot": [116, 120, 186, 393, 397, 400, 401, 405, 408, 409, 420, 421, 422, 425, 442, 456, 561, 672, 729, 761, 769, 803, 813, 823, 842, 862, 865, 868, 869], "cedric": 868, "cell": 171, "center": [391, 430, 431, 432, 434, 455, 841], "cento": 821, "central": 842, "centric": [703, 828], "centuri": 862, "certain": [27, 150, 154, 176, 567, 568, 578, 579, 705, 714, 728, 844, 868], "certif": 200, "certifi": [832, 833, 835, 838, 839], "cetyp": 857, "chain": [182, 313, 705, 724, 790, 843, 856, 862, 865, 869], "chainer": 21, "challeng": [151, 152, 862, 863, 865, 866, 872], "chameleon": 149, "chang": [1, 6, 26, 64, 70, 71, 131, 145, 177, 178, 179, 285, 292, 303, 338, 426, 578, 579, 692, 693, 695, 723, 726, 832, 835, 848, 852, 865, 874], "channel": [420, 858, 859, 869], "chapter": [1, 3, 5, 11, 20, 639, 691, 699, 700, 701, 710, 715, 722, 729, 734, 736, 848, 849], "char": 22, "charact": 865, "character": [120, 243, 479, 734, 825], "characterist": [243, 479, 714], "charg": 697, "charset": [832, 833, 835, 838, 839], "chart": 691, "cheatsheet": 5, "chebconv": 402, "chebnet": 397, "chebyshev": [397, 402], "check": [21, 22, 56, 65, 66, 67, 101, 102, 131, 156, 199, 305, 310, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 569, 691, 692, 695, 696, 700, 701, 715, 717, 726, 778, 779, 782, 820, 821, 822, 823, 824, 825, 828, 843, 857, 859, 865, 874], "check_eq_shap": [729, 769, 813], "check_sha1": [692, 739, 779], "checkout": 21, "checkpoint": [705, 848, 865], "chee": 868, "chemic": 865, "chemistri": [179, 395, 422], "chen": 754, "child": 862, "children": [433, 435], "china": 23, "choic": [23, 461, 504, 552, 553, 700, 843, 844], "choos": [126, 131, 224, 225, 244, 247, 248, 285, 297, 338, 480, 552, 553, 564, 566, 569, 645, 699, 736, 821, 827, 834, 849], "choose_dest": 865, "choose_dest_ag": 865, "choose_dest_and_upd": 865, "choose_dest_log_p": 865, "choosedestandupd": 865, "chosen": [4, 146, 169, 195, 224, 225, 239, 240, 297, 302, 319, 345, 432, 434, 567, 568, 569, 570, 821], "chrsmrr": [168, 186], "chunk": [699, 862], "chunk_graph": 701, "chunkfilespec": 701, "ci": 21, "cifar10": [146, 169], "cikm": 162, "circ": [396, 448, 824], "circl": 865, "circular": 172, "citat": [150, 153, 154, 176, 287, 668, 825, 840, 843, 858], "citation2": [287, 853], "citation_graph": [858, 859], "citationdata": [695, 741, 781], "citationgraphdataset": [25, 150, 154, 176, 695, 741, 781], "citationgraphdataset\u6e90\u4ee3\u7801": 741, "cite": [309, 701, 786, 825, 843, 857, 858], "citegrh": [858, 859], "cites": [25, 150, 695, 741, 781, 828], "citeseergraphdataset": [695, 726, 731, 736, 741, 771, 776, 781, 815, 819], "citizen": 22, "cla": [823, 865, 868], "clamp": [449, 454, 461, 687, 735, 775, 807, 818, 869], "clang": 821, "class": [0, 1, 4, 6, 8, 10, 13, 22, 31, 120, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 242, 243, 248, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 349, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 562, 613, 620, 631, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 690, 692, 693, 695, 698, 699, 717, 718, 720, 721, 722, 723, 725, 726, 728, 730, 732, 734, 735, 736, 738, 741, 761, 762, 763, 764, 765, 766, 768, 770, 772, 774, 775, 776, 778, 781, 803, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 819, 822, 823, 824, 825, 826, 827, 832, 833, 835, 836, 837, 840, 842, 843, 844, 845, 849, 852, 853, 856, 857, 858, 859, 862, 868, 874, 875], "classic": [428, 717, 820, 823, 868, 869], "classif": [2, 4, 120, 122, 132, 133, 135, 136, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 159, 160, 161, 163, 165, 167, 168, 169, 170, 172, 175, 176, 181, 186, 189, 190, 192, 194, 209, 210, 211, 212, 213, 214, 217, 218, 243, 287, 303, 305, 308, 315, 316, 403, 419, 430, 431, 432, 433, 434, 435, 445, 461, 479, 658, 661, 698, 701, 716, 721, 725, 731, 735, 816, 818, 822, 828, 830, 831, 832, 842, 843, 846, 847, 853, 854, 855, 856, 857, 858, 859, 865, 876, 877], "classifi": [149, 155, 185, 187, 193, 433, 435, 734, 735, 736, 774, 817, 856, 857, 858], "claud": 862, "clean": [21, 690, 709, 712], "clear": [859, 869], "clearli": [21, 859], "clf": [387, 868], "cli": 21, "click": [4, 21, 218, 731, 732, 735, 771, 772, 775, 815, 816, 818, 823], "click_dst": [731, 771, 815], "click_src": [731, 771, 815], "client": [4, 233], "cliqu": 172, "clock": [183, 207, 322], "clone": [21, 56, 64, 71, 89, 108, 420, 641, 642, 643, 700, 786, 821, 858, 865, 869], "cloner": 21, "close": [178, 387, 391, 695, 823, 859, 868, 869], "cloud": [6, 14, 21, 345, 408, 436, 438, 573], "club": [167, 705, 749, 790, 823, 845], "cluster": [4, 6, 147, 209, 560, 697, 698, 700, 701, 702, 828, 852, 853, 858], "cluster_gcn": 209, "cm": 823, "cmake": 821, "cmap": [823, 858], "cn": 23, "cnn": [408, 416, 841, 869], "cnt": 647, "co": [4, 134, 135, 136, 137, 151, 152, 287, 393, 395, 456, 653, 825, 827], "coalesc": [238, 592, 647, 675, 725, 827], "coarsen": 6, "coauthor": [25, 151, 152, 704], "coauthordata": [695, 741, 781], "code": [4, 22, 130, 145, 164, 166, 175, 177, 178, 179, 183, 184, 196, 199, 200, 209, 218, 233, 389, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 692, 694, 695, 697, 698, 699, 705, 706, 708, 709, 711, 712, 717, 718, 722, 723, 724, 725, 726, 727, 729, 732, 733, 734, 736, 746, 781, 787, 822, 823, 824, 825, 827, 828, 832, 833, 835, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 860, 862, 863, 865, 866, 868, 869, 870, 872, 874, 875], "coef": [433, 435, 662], "coeffici": [4, 10, 392, 424, 429, 461, 463, 482, 662, 857, 868], "coff_budget": [432, 434], "coff_connect": [432, 434], "col": [616, 630, 827, 858], "col_sort": 285, "colab": 826, "collab": [25, 165, 168, 186], "collaps": 164, "collat": [4, 183, 211, 687], "collate_dgl": 824, "collate_fn": [4, 183, 211, 387, 391, 694, 697, 698, 740, 743, 744, 780, 783, 784, 824, 858, 862], "collect": [5, 7, 22, 122, 133, 164, 239, 240, 297, 299, 395, 432, 434, 459, 694, 697, 698, 831, 832, 833, 857, 858, 862, 865, 874, 875], "colon": 701, "color": [22, 823, 825, 834, 858, 859], "colorbar": 859, "column": [4, 31, 32, 118, 119, 131, 285, 310, 321, 326, 328, 338, 345, 402, 403, 404, 551, 582, 583, 585, 586, 598, 601, 602, 603, 604, 605, 616, 617, 618, 624, 626, 630, 660, 693, 709, 753, 794, 825, 827, 845, 852, 853, 858], "com": [21, 23, 135, 136, 151, 152, 153, 159, 162, 165, 210, 295, 303, 308, 336, 337, 686, 695, 700, 741, 754, 781, 786, 795, 821, 833, 844, 848, 849], "combin": [4, 20, 26, 229, 238, 392, 396, 423, 424, 429, 440, 456, 463, 571, 645, 701, 711, 712, 713, 720, 723, 732, 736, 823, 840, 844, 857, 859, 869], "combine_nam": 26, "come": [134, 149, 155, 185, 187, 193, 336, 337, 399, 424, 460, 645, 833, 843, 865, 869], "comma": 693, "command": [21, 698, 700, 702, 821, 822, 823, 824, 825, 827, 852, 858], "comment": [21, 181, 722], "commerc": 825, "commerci": 159, "commit": 21, "committ": 21, "committor": 21, "common": [4, 14, 21, 26, 130, 160, 210, 211, 393, 403, 405, 408, 409, 411, 412, 413, 416, 419, 426, 705, 709, 712, 713, 715, 726, 729, 730, 732, 734, 814, 820, 831, 832, 841, 845, 852, 857, 859, 874], "commonli": [12, 128, 129, 391, 447, 555, 556, 562, 639, 663, 668, 672, 690, 698, 704, 712, 727, 728, 844, 856], "commun": [21, 142, 147, 167, 174, 181, 183, 233, 238, 358, 697, 698, 700, 701, 734, 860, 872, 874], "comp_cor": 848, "compact": [130, 297, 300, 303, 305, 308, 310, 315, 316, 321, 336, 337, 430, 431, 721, 725], "compact_graph": 719, "compacted_csc_format": [321, 337], "compacted_mat": 725, "compacted_node_list": 336, "compacted_pair": 721, "compacted_se": [301, 303, 305, 718, 721, 832, 835], "compani": 391, "companion": [858, 860, 872], "compar": [120, 156, 243, 297, 302, 479, 567, 573, 722, 729, 735, 736, 827, 852, 858, 859, 869], "comparison": [21, 828], "compat": [8, 21, 555, 556, 716, 726, 731, 734, 821, 827], "competit": [833, 868, 875], "compil": [9, 22, 700, 712], "complet": [13, 52, 345, 458, 689, 695, 700, 732, 736, 772, 816, 825, 827, 840, 843, 848, 857, 859, 862, 865, 868, 869, 874], "complex": [9, 345, 436, 438, 573, 693, 714, 824, 842, 843, 859, 865, 869], "complic": [342, 728, 732], "compon": [11, 122, 227, 228, 291, 305, 345, 573, 575, 689, 690, 697, 698, 703, 732, 734, 832, 833, 835, 844, 852, 869], "compos": [3, 13, 22, 159, 174, 244, 287, 339, 343, 344, 345, 391, 423, 463, 480, 544, 573, 824, 831, 857, 859], "composit": [22, 305, 320], "compress": [585, 586, 617, 618, 827], "comput": [0, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 60, 70, 87, 122, 126, 131, 135, 136, 151, 192, 210, 212, 213, 214, 218, 220, 221, 222, 223, 238, 241, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 303, 310, 315, 338, 345, 346, 348, 361, 387, 389, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 461, 463, 479, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 554, 562, 567, 573, 574, 576, 577, 598, 601, 602, 603, 605, 620, 637, 647, 665, 669, 673, 681, 682, 683, 684, 687, 689, 695, 697, 698, 701, 703, 711, 712, 713, 714, 716, 718, 720, 721, 722, 723, 724, 726, 729, 732, 733, 735, 736, 786, 804, 806, 809, 816, 818, 819, 822, 823, 824, 825, 827, 828, 831, 832, 833, 834, 840, 841, 842, 843, 844, 849, 852, 853, 856, 857, 858, 859, 862, 865, 870, 872, 874, 875], "computation": 869, "compute_auc": 843, "compute_block": 305, "compute_cor": [848, 849], "compute_loss": [717, 718, 723, 735, 761, 762, 764, 766, 775, 803, 804, 807, 809, 818, 843], "compute_mod": [437, 551], "conan": 862, "conatin": 305, "concat": [400, 425, 729, 769, 813, 842, 859, 865, 869], "concat_message_funct": [713, 757, 799], "concat_typ": 565, "concat_vid": 565, "concat_vtyp": 565, "concaten": [26, 122, 297, 395, 420, 423, 439, 440, 441, 442, 443, 444, 445, 446, 447, 456, 460, 565, 645, 679, 709, 713, 718, 729, 732, 734, 753, 772, 794, 813, 816, 823, 835, 838, 839, 843, 844, 852, 858, 859, 862, 869], "concentr": [859, 868], "concept": [4, 144, 212, 213, 214, 703, 718, 723, 820, 823, 842, 859], "concis": [9, 712], "conclus": 859, "concret": 89, "concurr": 698, "conda": [398, 399, 400, 832, 835, 838, 839, 848, 856, 859], "condit": [182, 243, 421, 424, 428, 429, 479, 709, 865], "conduct": [14, 161, 163, 303, 308, 315, 316, 503, 695, 700, 716, 734], "confid": 733, "config": [234, 235, 236, 560, 700, 701, 786, 821], "configur": [0, 4, 21, 215, 229, 238, 698, 700, 701, 702, 786, 821, 848, 849, 852, 853, 857, 865], "conflict": [167, 832, 833, 835, 838, 839], "confus": 865, "conjunct": 874, "connect": [1, 4, 96, 120, 130, 133, 137, 144, 151, 152, 161, 162, 163, 171, 173, 174, 178, 180, 181, 182, 188, 218, 227, 228, 233, 342, 345, 348, 356, 357, 395, 398, 401, 409, 411, 412, 416, 417, 420, 422, 423, 432, 434, 545, 558, 562, 573, 578, 579, 639, 653, 664, 685, 698, 704, 732, 733, 734, 735, 824, 825, 831, 840, 841, 844, 852, 853, 856, 857, 858, 859, 865, 868, 869], "consecut": [6, 32, 95, 96, 125, 131, 207, 247, 285, 303, 305, 338, 569, 578, 579, 699, 701, 709, 841], "consequ": [720, 841], "consid": [4, 53, 54, 197, 205, 212, 214, 297, 302, 303, 308, 315, 316, 387, 391, 395, 562, 567, 574, 578, 579, 701, 713, 716, 720, 722, 733, 823, 825, 827, 832, 833, 835, 841, 842, 843, 849, 858, 862, 865, 868], "consider": 865, "consist": [164, 166, 173, 177, 178, 179, 192, 239, 240, 291, 305, 314, 347, 562, 569, 574, 639, 704, 718, 723, 727, 825, 832, 835, 840, 843, 845, 856, 858, 859, 869], "const": 22, "constant": [143, 168, 179, 189, 190, 243, 407, 416, 417, 479, 687, 735, 857, 859, 869], "constexpr": 22, "constitu": [184, 862], "constrain": [195, 432, 434, 869], "constraint": [72, 238, 300, 313, 357, 358, 709, 865], "constrant": [238, 357, 358], "construct": [0, 4, 125, 130, 131, 141, 142, 143, 189, 190, 196, 210, 238, 247, 285, 288, 297, 298, 305, 338, 345, 357, 358, 436, 437, 438, 551, 562, 573, 639, 693, 698, 701, 705, 707, 709, 713, 719, 727, 729, 735, 792, 822, 824, 825, 838, 839, 843, 852, 858, 869, 874], "construct_negative_graph": [735, 775, 818], "constructor": [4, 12, 462, 717], "consum": [290, 310, 713, 726], "consumpt": [713, 719, 720, 726, 828], "contain": [0, 2, 4, 6, 11, 21, 27, 28, 53, 54, 57, 58, 73, 114, 115, 116, 121, 130, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 160, 164, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 186, 191, 192, 194, 195, 207, 218, 234, 238, 239, 240, 245, 285, 288, 291, 292, 294, 297, 298, 300, 303, 304, 305, 308, 309, 313, 315, 316, 317, 320, 330, 338, 345, 350, 355, 357, 388, 393, 396, 401, 404, 405, 406, 409, 411, 412, 414, 415, 416, 419, 425, 436, 437, 438, 455, 462, 481, 545, 551, 567, 568, 569, 570, 573, 578, 579, 592, 638, 639, 646, 687, 693, 694, 698, 700, 701, 702, 708, 714, 718, 723, 732, 735, 816, 818, 827, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 852, 858, 862, 863, 865, 872], "containertyp": 22, "content": [26, 159, 199, 201, 360, 692, 693, 701, 722, 739, 779, 841, 849], "context": [4, 21, 31, 42, 62, 63, 70, 89, 108, 125, 126, 131, 210, 244, 245, 247, 248, 285, 293, 297, 303, 305, 308, 310, 315, 316, 338, 339, 343, 344, 361, 391, 480, 481, 544, 552, 553, 567, 568, 569, 570, 639, 697, 708, 714, 719, 823, 833, 841, 875], "context\ub97c": 805, "contigu": [4, 321, 336, 337, 357, 545, 573, 700, 720, 852], "continu": [297, 396, 645, 693, 716, 730, 770, 814, 828], "contrari": [116, 825], "contrast": [239, 652, 658, 659, 660, 704, 720, 735, 775, 818, 840, 857, 859, 868], "contrib": 869, "contribut": [297, 432, 434, 567, 727, 869], "control": [0, 4, 13, 93, 113, 309, 394, 433, 435, 552, 553, 564, 649, 650, 662, 663, 668, 693, 820, 849], "contruct": [736, 819], "conv": [13, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 434, 464, 465, 466, 467, 468, 469, 470, 471, 725, 727, 729, 736, 767, 776, 811, 813, 819], "conv1": [413, 434, 435, 718, 723, 734, 736, 762, 763, 764, 766, 774, 776, 804, 806, 807, 809, 817, 819, 822, 835, 840, 842, 843, 844, 874], "conv2": [413, 434, 435, 718, 723, 734, 736, 762, 763, 764, 766, 774, 776, 804, 806, 807, 809, 817, 819, 822, 835, 840, 842, 843, 844, 874], "conveni": [9, 691, 732, 843, 874], "convent": [0, 5, 125, 133, 144, 712], "converg": [212, 303, 315, 567, 726, 823], "convers": [22, 229, 561, 607, 645, 700, 705, 708, 726, 827], "convert": [9, 22, 109, 110, 118, 119, 125, 126, 127, 138, 139, 140, 146, 148, 169, 229, 238, 246, 247, 248, 323, 324, 326, 327, 331, 589, 591, 594, 595, 607, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 674, 675, 693, 699, 700, 701, 705, 708, 721, 725, 726, 793, 827, 832, 841, 845, 852, 853, 857, 858], "convert_partit": 786, "convnet": 859, "convolut": [134, 149, 155, 185, 187, 193, 209, 389, 392, 395, 396, 397, 399, 402, 403, 404, 407, 413, 414, 416, 417, 418, 419, 421, 422, 424, 425, 426, 427, 428, 450, 463, 478, 562, 637, 658, 661, 662, 673, 716, 722, 730, 732, 734, 736, 772, 802, 808, 816, 817, 819, 823, 826, 829, 830, 842, 844, 858, 859, 860, 861, 865, 868, 869, 872], "convolutin": 858, "convolution\uc740": 814, "convolution\uc744": 819, "convolution\uc758": 819, "coo": [31, 32, 41, 56, 126, 131, 229, 238, 248, 285, 326, 331, 338, 571, 593, 616, 827, 858], "coo_matrix": [126, 248, 843, 858], "coolwarm": 858, "cooper": [166, 295, 303, 308, 313, 336, 337], "coord": 455, "coord_feat": 407, "coord_feat_out": 407, "coordin": [12, 31, 126, 178, 179, 248, 310, 345, 407, 416, 437, 455, 551, 573, 583, 593, 616, 630, 827], "coordint": 416, "copi": [5, 7, 9, 34, 40, 56, 64, 71, 73, 89, 93, 94, 100, 108, 113, 116, 126, 130, 131, 233, 244, 245, 247, 248, 285, 289, 290, 297, 305, 310, 312, 317, 318, 338, 339, 342, 343, 344, 348, 356, 420, 480, 481, 487, 488, 489, 490, 491, 492, 544, 560, 561, 567, 568, 569, 570, 578, 579, 608, 638, 641, 642, 643, 644, 646, 647, 654, 677, 678, 680, 700, 701, 707, 709, 712, 713, 719, 724, 751, 756, 792, 794, 797, 806, 824, 833, 835, 841, 842, 843, 845, 858, 862, 865, 869, 875], "copy_": [5, 20, 677, 862, 868, 869], "copy_edata": [99, 111, 116, 130, 561, 567, 568, 569, 570, 647, 654], "copy_fil": [746, 787], "copy_lh": [504, 505], "copy_ndata": [99, 111, 116, 130, 342, 561, 567, 568, 569, 570, 638, 647], "copy_rh": [504, 505], "copy_to": [289, 290, 717, 718, 720, 721, 723, 724, 725, 832, 833, 835, 875], "copy_to_shared_memori": [297, 312], "copy_u": [5, 73, 91, 92, 93, 94, 100, 113, 430, 431, 433, 462, 680, 681, 682, 683, 684, 714, 722, 726, 729, 733, 758, 765, 769, 773, 800, 808, 810, 813, 842, 856, 858, 862], "copy_u_sum": 9, "copy_v": 9, "copyreducebackward": 408, "cora": [25, 153, 154, 287, 695, 741, 781, 822, 823, 825, 828, 832, 843, 856], "cora_binari": 858, "cora_binary_2ffdf50c": 858, "cora_v2": [139, 695, 741, 781, 822, 823, 825, 840], "cora_v2_d697a464": 840, "corabinari": 858, "coraful": 25, "corafulldata": [695, 741, 781], "corafulldataset": 217, "coragraphdataset": [139, 387, 430, 434, 822, 823, 825, 832, 840, 842, 843, 856], "core": [8, 698, 703, 822, 827, 828, 830, 849, 850, 851, 856, 859, 862, 874], "cornel": 155, "corner": 729, "corpu": 869, "correct": [21, 22, 736, 776, 819, 856], "correctli": [218, 701, 821, 858], "correspond": [7, 20, 21, 22, 27, 43, 46, 53, 54, 74, 90, 101, 102, 103, 107, 109, 113, 117, 118, 119, 122, 134, 139, 147, 148, 156, 165, 178, 179, 182, 192, 205, 210, 211, 212, 214, 219, 230, 237, 238, 297, 302, 303, 305, 308, 310, 315, 316, 320, 321, 336, 337, 345, 348, 361, 389, 398, 399, 400, 409, 420, 429, 432, 436, 437, 438, 448, 451, 455, 456, 460, 551, 561, 563, 565, 574, 617, 618, 637, 645, 653, 655, 665, 666, 673, 693, 699, 701, 708, 709, 712, 721, 722, 723, 730, 733, 734, 736, 822, 823, 824, 825, 832, 835, 838, 839, 840, 842, 858, 859, 862, 869], "correspondenc": 392, "corrsepond": 4, "corrupt": [567, 568, 569, 570, 698, 784], "cosin": [345, 436, 438, 456, 573], "cost": [9, 14, 210, 645], "costli": [644, 720, 834], "could": [9, 21, 22, 32, 66, 214, 229, 238, 239, 240, 291, 293, 297, 301, 309, 320, 361, 393, 394, 439, 441, 445, 446, 504, 505, 562, 571, 578, 579, 644, 673, 693, 695, 699, 701, 713, 717, 721, 722, 734, 736, 827, 833, 838, 839, 843, 849, 852, 858, 862], "coulomb": 177, "count": [111, 229, 288, 292, 294, 296, 298, 303, 315, 317, 345, 436, 438, 573, 598, 601, 602, 603, 647, 675, 840, 849], "counter": 848, "counterpart": [4, 293, 320, 698, 701, 852, 853], "coupl": 868, "cours": [155, 187, 193], "coustom": 789, "cout": 22, "covari": 416, "cover": [14, 21, 209, 697, 698, 699, 700, 701, 705, 716, 724, 820, 826, 834, 869], "cp": 391, "cp310": 832, "cpp": [824, 845, 858], "cpplint": 21, "cpu": [4, 9, 10, 14, 21, 31, 42, 62, 63, 89, 108, 112, 118, 119, 125, 126, 130, 131, 209, 210, 214, 215, 239, 240, 247, 248, 285, 288, 291, 292, 303, 308, 317, 322, 338, 341, 345, 348, 356, 436, 437, 438, 551, 552, 553, 560, 564, 565, 567, 568, 569, 570, 573, 578, 579, 639, 646, 647, 701, 707, 718, 719, 720, 723, 724, 751, 763, 792, 805, 806, 820, 821, 823, 824, 827, 830, 832, 833, 835, 838, 839, 840, 851, 852, 853, 856, 859, 862, 869, 874], "cpu_best_practis": [830, 849, 851], "cpu_cached_featur": 288, "cpu_count": [833, 875], "cpucachedfeatur": 322, "cpufeaturecach": 288, "cpu\uc5d0\uc11c\ub9cc": 805, "cpu\uc758": 806, "crawlscript": 754, "creat": [1, 3, 4, 5, 9, 12, 13, 21, 22, 27, 28, 41, 42, 44, 48, 51, 55, 56, 57, 58, 60, 61, 64, 65, 70, 71, 77, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 104, 107, 109, 116, 118, 119, 125, 126, 128, 129, 131, 138, 139, 148, 156, 157, 158, 191, 197, 205, 218, 233, 244, 246, 247, 248, 285, 293, 297, 301, 302, 328, 338, 339, 343, 344, 355, 360, 361, 388, 389, 421, 424, 439, 440, 441, 442, 444, 445, 446, 447, 459, 544, 555, 556, 561, 562, 566, 571, 575, 576, 577, 614, 616, 617, 618, 619, 630, 634, 647, 649, 650, 657, 676, 679, 690, 692, 693, 695, 697, 698, 699, 701, 702, 703, 706, 707, 708, 715, 718, 723, 725, 726, 730, 732, 739, 779, 781, 783, 793, 794, 810, 821, 822, 823, 824, 833, 835, 838, 839, 840, 843, 844, 852, 853, 856, 858, 859, 862, 865, 868, 869, 875], "create_block": [127, 639], "create_dataload": [833, 835, 875], "create_dev_conda_env": 821, "create_featur": 857, "create_formats_": [56, 89, 719], "createcacul": 22, "createcalcul": 22, "creation": [4, 210, 288, 298, 697, 729, 835, 841, 845], "credit": [840, 841, 842, 843, 844, 845], "crisi": 166, "criteria": [717, 852], "criterion": [192, 430, 434, 435, 869, 874], "critic": [9, 21, 22, 137, 171, 180, 182, 188, 430, 431, 433, 435, 705, 859], "cross": [73, 101, 102, 700, 701, 714, 735, 800, 818, 843, 857, 858, 869], "cross_entropi": [431, 432, 433, 718, 725, 726, 732, 734, 736, 772, 774, 776, 810, 816, 817, 819, 823, 825, 833, 835, 840, 842, 844, 857, 858, 875], "cross_reduc": 73, "cross_sum": 73, "crossentropyloss": [430, 434, 435, 697, 726, 743, 783, 822, 852, 853, 874], "crowdsourc": 188, "crucial": [430, 431, 432, 434], "cs224w": 840, "csc": [32, 41, 56, 89, 131, 229, 238, 285, 297, 310, 321, 328, 337, 338, 569, 571, 578, 617, 827], "csc_format": [321, 337], "csc_indptr": [297, 326, 328, 331, 725, 838, 839], "cscforamtbas": 311, "cscformatbas": [297, 300, 303, 308, 310, 311, 321, 337, 832, 835], "cscsamplinggraph": 311, "csr": [32, 41, 56, 118, 119, 126, 131, 238, 248, 285, 338, 569, 571, 578, 579, 618, 827], "csr_csc_g": 56, "csr_g": 56, "csr_matrix": [126, 248], "csrc": [845, 858], "csrmmbackward": 118, "csv": [148, 309, 690, 692, 701, 739, 779, 786, 837, 838, 839], "csvdataset": 693, "csvdatatset": 693, "csv\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u683c\u5f0f": 749, "csv\uac00": 790, "ctx": [31, 62, 63], "cu": 391, "cu118": [822, 823, 824, 825], "cu121": 833, "cuda": [4, 14, 89, 108, 110, 125, 126, 210, 246, 247, 248, 285, 289, 290, 295, 298, 303, 308, 317, 329, 330, 338, 345, 398, 399, 400, 436, 438, 573, 584, 607, 640, 707, 718, 723, 726, 751, 761, 762, 764, 766, 792, 803, 804, 805, 807, 809, 810, 821, 822, 823, 824, 825, 832, 833, 835, 840, 869, 874, 875], "cuda_g": [707, 751, 792], "cuda\ub294": 805, "cudf": 246, "cugraph": [13, 110, 246, 398, 399, 400, 640], "cugraph_g": [110, 246, 640], "cugraph_graph": 246, "cugraphbaseconv": [398, 399, 400], "cumsum": 699, "cup": [151, 152], "cur": [699, 785], "current": [1, 4, 14, 20, 21, 27, 28, 56, 130, 138, 139, 144, 200, 218, 230, 234, 237, 238, 242, 293, 336, 337, 357, 358, 410, 413, 459, 560, 566, 607, 698, 717, 820, 821, 853, 862], "current_devic": [210, 298, 329], "curv": [843, 859], "cuspars": [118, 119], "custom": [4, 194, 211, 389, 419, 560, 639, 689, 690, 691, 699, 701, 704, 716, 718, 719, 721, 723, 724, 725, 727, 730, 736, 778, 807, 831, 835, 845], "customgraphconv": [722, 765, 808], "customheterographconv": [722, 765, 808], "customiz": [302, 736], "customized_parser_dataset": 693, "customized_sample_neg": 721, "customized_sample_neighbor": 717, "customizednegativesampl": 721, "customizedneighborsampl": 717, "cut": [238, 358, 689, 701, 786], "cuthil": 560, "cutoff": [178, 395], "cutom": 725, "cv": [178, 179], "cycl": [141, 172, 189, 244, 339, 480, 544, 865], "cycle_s": 189, "cython": [21, 821], "d": [4, 9, 14, 21, 120, 138, 139, 140, 146, 169, 170, 178, 179, 231, 241, 330, 358, 392, 394, 397, 401, 408, 413, 417, 421, 423, 424, 426, 427, 429, 430, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 448, 449, 452, 453, 457, 458, 461, 503, 506, 555, 556, 604, 614, 616, 617, 618, 619, 621, 622, 623, 624, 626, 630, 634, 649, 650, 672, 682, 683, 684, 693, 708, 734, 774, 817, 822, 823, 824, 827, 843, 856, 858, 868, 874], "d1": [392, 503, 506, 827], "d2": [392, 503, 506, 827], "d_": [241, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 456, 858], "d_1": [711, 755, 796], "d_2": [711, 755, 796], "d_e": 825, "d_e_inv": 825, "d_ff": [443, 444], "d_hat": [725, 822, 823, 827], "d_hat_invsqrt": [822, 823], "d_head": [443, 444], "d_i": 9, "d_k": 869, "d_model": [443, 444], "d_t": [241, 431, 432, 433], "d_v": 825, "d_v_invsqrt": 825, "dada": [838, 839], "dadta": [838, 839], "dai": [21, 164, 181, 692], "damm": 862, "data": [0, 1, 3, 4, 5, 6, 7, 13, 14, 22, 26, 27, 28, 34, 35, 41, 43, 44, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 68, 70, 73, 74, 75, 77, 87, 88, 89, 91, 92, 93, 94, 100, 103, 104, 108, 112, 113, 114, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 215, 217, 219, 220, 221, 222, 223, 230, 234, 235, 236, 237, 238, 244, 245, 247, 248, 249, 285, 289, 290, 291, 293, 294, 300, 301, 303, 305, 308, 309, 310, 314, 315, 316, 338, 339, 343, 344, 345, 350, 355, 357, 359, 387, 389, 391, 392, 399, 406, 424, 430, 431, 432, 433, 434, 435, 436, 438, 455, 457, 459, 461, 463, 480, 481, 503, 544, 545, 552, 553, 560, 561, 571, 573, 578, 579, 589, 590, 591, 594, 595, 607, 617, 618, 619, 639, 641, 642, 643, 645, 646, 647, 674, 683, 688, 689, 691, 694, 697, 700, 702, 703, 705, 706, 707, 708, 709, 710, 712, 714, 716, 717, 720, 722, 725, 726, 728, 731, 732, 735, 736, 737, 738, 739, 740, 741, 742, 744, 746, 753, 756, 758, 761, 762, 765, 771, 772, 774, 775, 776, 777, 778, 779, 780, 781, 782, 784, 785, 786, 787, 792, 794, 795, 797, 800, 803, 804, 808, 810, 815, 816, 817, 818, 819, 821, 822, 823, 824, 827, 831, 837, 840, 841, 842, 843, 845, 848, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869], "data0": 693, "data1": 693, "data_dict": [131, 338], "data_it": 869, "data_load": 293, "data_path": 148, "data_pip": 301, "data_root_dir": [238, 700, 701, 745, 786], "data_type_dict": [695, 741, 781], "databas": [164, 845], "dataflow": 858, "datafram": [148, 246, 693, 838, 839], "datail": 179, "dataload": [10, 11, 13, 183, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 293, 303, 313, 315, 387, 391, 430, 434, 435, 459, 687, 689, 694, 695, 697, 698, 717, 718, 719, 720, 721, 723, 724, 725, 734, 740, 741, 743, 744, 761, 762, 763, 764, 766, 774, 780, 781, 783, 784, 803, 804, 805, 806, 807, 809, 817, 824, 832, 833, 835, 844, 848, 849, 852, 853, 858, 862, 874, 875], "dataloader\u4e2d\u8fd0\u884c": 744, "dataloader\u5728\u6bcf\u4e2a\u8bad\u7ec3\u5468\u671f\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u91c7\u6837\u5de5\u4f5c\u8fdb\u7a0b": 744, "dataloader\u76f8\u540c\u7684\u63a5\u53e3": 744, "dataloader\ub294": 784, "dataloader\ub97c": [804, 809], "dataloader\uc5d0\uc11c": 784, "dataloader\uc640": 784, "datapars": 693, "datapip": [7, 289, 290, 293, 295, 300, 301, 303, 306, 307, 308, 313, 315, 316, 319, 717, 718, 720, 721, 723, 724, 725, 831, 832, 833, 835, 875], "datapoint": [196, 207], "dataset": [4, 13, 14, 21, 23, 25, 120, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 210, 211, 243, 287, 290, 304, 309, 387, 430, 432, 434, 435, 479, 687, 690, 691, 692, 696, 697, 698, 723, 725, 726, 731, 734, 736, 740, 741, 743, 744, 771, 774, 778, 780, 781, 783, 784, 815, 817, 822, 823, 824, 825, 828, 830, 831, 833, 837, 838, 839, 842, 843, 844, 846, 847, 856, 859, 874, 875], "dataset_nam": [291, 304, 309, 691, 693, 738, 778, 838, 839], "dataset\ub97c": 777, "datatyp": [726, 827], "dateset": 828, "dateutil": [832, 835, 838, 839], "datset": [25, 172], "dcmake_configuration_typ": 821, "dcmake_cxx_flag": 821, "dd": [25, 168, 186, 869], "ddgl_export": 821, "ddmlc_force_shared_crt": 821, "ddp": [293, 848, 874, 875], "ddp_seed": [210, 211], "de": 869, "deadlock": 322, "deal": [122, 722, 734, 866, 872], "dealloc": 849, "debian": 821, "debug": [4, 23], "dec": 869, "dec_graph": [732, 772, 816], "decai": 413, "decid": [9, 22, 131, 338, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 428, 708, 865, 869], "declar": 698, "decod": [443, 869], "decompos": [392, 424, 862, 869], "decomposit": [392, 399, 424, 463, 723, 857], "decomposition\uc740": 809, "decor": [293, 301], "decreas": [430, 431], "dedic": 229, "dedupl": [303, 308], "deep": [4, 23, 209, 217, 295, 303, 308, 336, 337, 413, 416, 432, 434, 445, 658, 729, 734, 736, 827, 828, 829, 841, 862, 865, 866, 872], "deepchem": [695, 741, 781], "deepcopi": 865, "deepset": 452, "deepset_encod": 452, "deepwalk": 840, "def": [4, 5, 10, 20, 22, 53, 54, 70, 73, 100, 216, 249, 250, 261, 262, 263, 264, 300, 301, 313, 389, 420, 422, 430, 431, 432, 433, 434, 435, 459, 462, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 691, 692, 693, 694, 695, 696, 698, 699, 712, 713, 717, 718, 720, 721, 722, 723, 725, 726, 728, 729, 730, 732, 734, 735, 736, 738, 739, 740, 741, 742, 744, 756, 757, 761, 762, 763, 764, 765, 766, 768, 769, 770, 772, 774, 775, 776, 778, 779, 780, 781, 782, 784, 797, 799, 803, 804, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 818, 819, 822, 823, 824, 825, 827, 832, 833, 835, 840, 842, 843, 844, 845, 848, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "defalt": 448, "default": [4, 6, 9, 10, 14, 23, 27, 28, 31, 32, 34, 35, 41, 48, 51, 53, 54, 61, 62, 63, 79, 81, 82, 88, 89, 116, 117, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 205, 207, 208, 209, 210, 211, 212, 214, 217, 224, 229, 230, 233, 234, 237, 238, 243, 244, 245, 247, 248, 285, 287, 289, 290, 293, 295, 300, 303, 308, 309, 310, 313, 322, 325, 328, 338, 339, 342, 343, 344, 345, 346, 348, 350, 357, 358, 361, 387, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 448, 449, 450, 451, 452, 453, 454, 455, 459, 461, 479, 480, 481, 544, 546, 548, 551, 552, 553, 554, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 573, 574, 637, 638, 639, 644, 645, 646, 647, 655, 660, 665, 669, 671, 672, 673, 691, 693, 698, 699, 700, 701, 702, 708, 709, 712, 778, 793, 794, 821, 824, 827, 831, 832, 833, 835, 837, 838, 839, 849, 852, 853, 865, 869, 875], "defin": [4, 5, 7, 9, 13, 27, 28, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 120, 146, 156, 169, 210, 218, 241, 242, 243, 249, 250, 261, 262, 263, 264, 313, 314, 348, 349, 391, 395, 401, 413, 414, 419, 430, 431, 432, 433, 434, 435, 443, 457, 458, 478, 479, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 689, 690, 691, 693, 697, 698, 706, 709, 711, 712, 726, 732, 734, 735, 736, 756, 776, 783, 794, 797, 810, 816, 818, 819, 822, 823, 825, 827, 837, 856, 858, 859, 869, 874], "definit": [66, 72, 238, 395, 625, 627, 628, 629, 697, 703, 718, 721, 725, 736, 857, 858, 862], "deform": 868, "defus": [212, 297, 303, 315, 567], "deg": [729, 769, 813], "deg_emb": 689, "deg_g": 858, "deg_lg": 858, "deg_proj": 858, "degg_batch": 183, "deglg_batch": 183, "degrad": 212, "degre": [4, 13, 60, 87, 120, 130, 165, 181, 183, 215, 243, 393, 398, 399, 400, 401, 403, 405, 408, 409, 411, 412, 413, 416, 419, 423, 426, 427, 433, 435, 449, 479, 482, 662, 663, 668, 672, 687, 700, 701, 721, 725, 729, 822, 823, 825, 827, 841, 842, 856, 858, 859, 862], "degree_as_nlabel": 165, "degree_embed": 449, "degree_encod": [449, 689], "degreeencod": 689, "degree\uac00": 813, "degree\ub4e4": 786, "degree\uc758": 807, "del": 865, "delet": [21, 180, 303, 308, 557, 558], "delimit": 701, "deliv": 865, "delta": [178, 179, 401, 423], "demand": [303, 308], "demo": 824, "demonstr": [42, 457, 458, 647, 693, 725, 731, 732, 826, 838, 839, 845, 852, 860, 862, 869, 872], "denomin": [4, 10, 410], "denot": [120, 241, 395, 409, 416, 427, 461, 671, 822, 823, 856, 857, 858, 859, 862], "dens": [9, 13, 224, 297, 341, 402, 403, 404, 448, 451, 503, 504, 506, 563, 608, 612, 613, 620, 623, 631, 689, 698, 718, 727, 767, 784, 804, 811, 823, 824, 827], "densiti": [183, 197, 563, 705, 749, 790, 858, 865], "departur": 862, "depend": [4, 9, 21, 31, 89, 126, 131, 182, 210, 212, 213, 214, 218, 243, 247, 248, 285, 303, 305, 315, 338, 398, 399, 400, 459, 479, 555, 556, 567, 693, 701, 704, 714, 716, 718, 719, 720, 722, 723, 727, 802, 834, 849, 859, 862, 869], "dependency\ub4e4\uc744": 809, "dependency\uc5d0\uc11c": 804, "deploi": [860, 872], "deprec": [116, 144, 168, 177, 178, 179, 186, 229, 233, 638, 648, 858], "depth": [1, 227, 228, 564], "deriv": [401, 732, 823], "desc": 824, "descend": [649, 650], "descent": [14, 345, 436, 438, 573, 716, 802, 874], "describ": [5, 21, 43, 46, 47, 74, 75, 103, 167, 238, 295, 303, 308, 315, 318, 336, 337, 408, 424, 463, 639, 644, 652, 653, 658, 659, 660, 661, 701, 712, 716, 729, 731, 732, 735, 823, 825, 834, 835, 837, 838, 839, 840, 843, 845, 856, 858, 859, 865, 868], "descript": [61, 88, 131, 137, 160, 178, 179, 180, 285, 318, 338, 857, 869], "deserv": 859, "design": [4, 150, 154, 176, 242, 287, 305, 395, 569, 689, 698, 699, 701, 714, 720, 724, 734, 827, 831, 836, 858, 869], "desir": [20, 22, 120, 224, 563, 662, 663, 668, 700], "desktop": 849, "despit": 701, "dest": 865, "dest_list": 865, "destin": [4, 5, 9, 26, 27, 30, 31, 32, 34, 39, 43, 44, 45, 47, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 73, 79, 80, 82, 87, 88, 90, 91, 92, 93, 94, 100, 104, 105, 107, 109, 113, 114, 117, 118, 119, 123, 125, 126, 127, 131, 200, 212, 214, 218, 224, 225, 229, 231, 241, 245, 246, 248, 285, 293, 297, 301, 312, 319, 320, 321, 337, 338, 356, 361, 389, 396, 398, 399, 400, 402, 403, 404, 405, 406, 409, 411, 412, 422, 425, 456, 482, 483, 484, 485, 486, 488, 489, 490, 491, 492, 494, 496, 498, 500, 502, 504, 505, 509, 510, 511, 512, 513, 515, 516, 517, 518, 519, 521, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 552, 555, 557, 559, 560, 563, 569, 576, 578, 579, 639, 654, 655, 661, 670, 678, 693, 700, 701, 709, 712, 714, 721, 728, 729, 730, 794, 800, 803, 833, 834, 838, 841, 842, 843, 845, 858, 862, 869, 875], "destination_typ": [709, 753, 794], "destroi": [4, 698], "destroy_process_group": 874, "dests_prob": 865, "dests_scor": 865, "detach": [387, 824, 832, 833, 835, 842, 852, 858, 875], "detail": [4, 9, 21, 22, 91, 146, 169, 209, 212, 214, 215, 218, 220, 221, 222, 223, 228, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 562, 568, 625, 627, 628, 629, 686, 687, 689, 693, 695, 697, 698, 699, 701, 705, 712, 715, 717, 718, 719, 721, 723, 724, 725, 729, 736, 820, 821, 828, 838, 839, 842, 845, 852, 853, 859, 865, 869, 874, 875], "detect": [145, 161, 163, 181, 183, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 860, 872], "determin": [4, 26, 229, 239, 240, 297, 303, 308, 401, 423, 455, 563, 567, 568, 569, 570, 645, 699, 701, 709, 726, 728, 729, 868], "determinist": [131, 198, 303, 315, 338, 389, 560], "dev": [183, 184, 207, 726, 821, 822, 823, 824, 825, 827, 832, 835, 838, 839, 856, 859, 862], "dev_data": 184, "devel": 821, "develop": [22, 27, 28, 30, 31, 41, 44, 45, 56, 82, 95, 96, 101, 102, 104, 105, 109, 114, 115, 287, 361, 557, 558, 644, 645, 698, 716, 718, 723, 733, 821, 841, 849, 852], "deviat": [401, 423, 455], "devic": [4, 7, 13, 31, 34, 35, 43, 46, 48, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 74, 87, 88, 89, 93, 94, 100, 103, 108, 125, 126, 130, 131, 208, 209, 210, 212, 214, 215, 244, 245, 246, 247, 248, 285, 288, 289, 292, 294, 297, 298, 305, 310, 312, 317, 318, 326, 330, 338, 339, 343, 344, 345, 398, 399, 400, 436, 437, 438, 459, 480, 481, 544, 551, 552, 553, 560, 566, 567, 568, 569, 570, 573, 587, 607, 619, 687, 697, 707, 708, 717, 718, 719, 720, 721, 723, 724, 725, 726, 743, 751, 761, 762, 763, 764, 766, 783, 792, 803, 804, 805, 806, 807, 809, 810, 823, 824, 827, 832, 833, 835, 838, 839, 842, 848, 858, 862, 869, 874, 875], "device_count": [833, 874, 875], "device_id": 874, "device_typ": 726, "df": [227, 228, 246, 547, 693, 838, 839], "dfrac": [448, 824], "dfs_labeled_edg": 228, "dfs_labeled_edges_gener": 547, "dgl": [13, 14, 20, 23, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 711, 712, 713, 714, 716, 717, 718, 721, 722, 723, 726, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 750, 751, 752, 753, 754, 756, 757, 758, 761, 762, 763, 764, 765, 766, 767, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 785, 786, 791, 792, 793, 795, 797, 798, 799, 800, 803, 804, 806, 807, 808, 809, 810, 811, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 830, 831, 834, 842, 843, 845, 847, 848, 849, 852, 853, 860, 863, 864, 865, 868, 870, 874, 875], "dgl_declare_object_type_info": 22, "dgl_download_dir": 23, "dgl_g": 823, "dgl_home": 21, "dgl_library_path": 21, "dgl_log_debug": 23, "dgl_mxnet_set_np_shap": 821, "dgl_partition_to_graphbolt": 852, "dgl_register_glob": 22, "dgl_repo": 23, "dgl_warn": [862, 865, 868], "dglarg": 22, "dglbackend": [21, 23, 821, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 862, 865, 868, 874, 875], "dglblock": [127, 131, 398, 399, 400, 639], "dglbuiltindataset": [134, 141, 142, 143, 145, 147, 159, 160, 162, 164, 165, 166, 168, 174, 175, 181, 184, 186, 189, 190, 192, 194, 195, 692, 695, 739, 741, 779, 781], "dgldataset": [138, 139, 140, 148, 167, 172, 173, 177, 178, 179, 183, 197, 198, 304, 690, 693, 695, 731, 737, 738, 741, 771, 777, 781, 815], "dgldataset\u7c7b": [737, 754], "dgldefaultdir": 23, "dglerror": [27, 28, 95, 96, 393, 405, 408, 409, 410, 411, 412, 413, 416, 419, 426, 639, 707, 709, 751, 753, 792, 794], "dglfunccal": 22, "dglgraph": [0, 4, 5, 6, 9, 13, 22, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 209, 210, 220, 221, 222, 223, 227, 228, 229, 232, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 285, 293, 327, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 361, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 461, 462, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 685, 687, 693, 694, 695, 696, 698, 699, 701, 703, 705, 706, 708, 709, 729, 734, 740, 741, 744, 747, 749, 750, 751, 752, 753, 761, 762, 764, 769, 774, 780, 781, 782, 784, 785, 786, 788, 790, 791, 793, 794, 803, 804, 807, 813, 817, 841, 843, 844, 856, 857, 858, 859, 862, 865, 868], "dglgraphinst": 327, "dglgraphproppreddataset": [138, 694, 740, 780, 824], "dglgraph\ub85c": 790, "dgllinkproppreddataset": [694, 740, 780, 853], "dglnn": [389, 718, 720, 721, 723, 734, 736, 762, 764, 766, 774, 776, 804, 807, 809, 817, 819, 824, 832, 852, 853, 875], "dglnodeproppreddataset": [694, 740, 780, 852], "dglretvalu": 22, "dglroutinglay": 868, "dglsp": [12, 581, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 725, 822, 823, 824, 825, 827], "dglwarn": [862, 865, 868], "dgl\u4e0d\u63d0\u4f9b\u5bf9\u6765\u81ea\u591a\u4e2a\u8bad\u7ec3\u5668\u7684\u5e76\u53d1\u5199\u5165\u7684\u4fdd\u62a4": 744, "dgl\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 765, "dgl\u4e2d\u7684": 764, "dgl\u4e3a\u5206\u5e03\u5f0f\u5f20\u91cf\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u5355\u673a\u666e\u901a\u5f20\u91cf\u7684\u63a5\u53e3": 744, "dgl\u4e5f\u4f1a\u6839\u636e\u8fb9\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f": 752, "dgl\u4e5f\u652f\u6301\u4ece\u5176\u4ed6\u7684\u6570\u636e\u6e90\u6765\u521b\u5efa\u56fe\u5bf9\u8c61": 752, "dgl\u4e5f\u652f\u6301\u76f4\u63a5\u4eces3": 749, "dgl\u4ec5\u5141\u8bb8\u521b\u5efa\u5355\u4e2adistgraph\u5bf9\u8c61": 744, "dgl\u4ec5\u652f\u6301\u5bc6\u96c6\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 744, "dgl\u4ee5\u540e\u5c06\u4e3a\u7a00\u758f\u5d4c\u5165\u6dfb\u52a0\u66f4\u591a\u7684\u4f18\u5316\u5668": 744, "dgl\u4f18\u5316\u4e86\u6d88\u606f\u4f20\u9012\u7684\u5185\u5b58\u6d88\u8017\u548c\u8ba1\u7b97\u901f\u5ea6": 757, "dgl\u4f1a\u5212\u5206\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 744, "dgl\u4f1a\u5728\u5185\u90e8\u5c061\u6761\u65e0\u5411\u8fb9\u8f6c\u6362\u4e3a2\u6761\u6709\u5411\u8fb9": 749, "dgl\u4f1a\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 743, "dgl\u4f1a\u5c06\u5b83\u4eec\u5206\u7247\u5e76\u5b58\u50a8\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u673a\u4e0a": 744, "dgl\u4f1a\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u6bcf\u6761\u8fb9": 750, "dgl\u4f1a\u68c0\u67e5\u8f93\u5165\u56fe\u4e2d\u662f\u5426\u6709\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9": 769, "dgl\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u7684\u6574\u578b\u5f20\u91cf": 752, "dgl\u4f7f\u7528\u4e00\u4e2a\u5305\u542b2\u4e2a\u8282\u70b9\u5f20\u91cf\u7684\u5143\u7ec4": 752, "dgl\u4f7f\u7528\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u6765\u8868\u793a\u4e00\u4e2a\u8282\u70b9": 752, "dgl\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684meti": 745, "dgl\u4fdd\u8bc1\u8fb9\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u4e0e\u751f\u6210\u7684\u5757\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u76f8\u540c": 762, "dgl\u5047\u5b9a\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7684\u9700\u8981\u5408\u5e76\u7684\u7279\u5f81\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u6570\u636e\u7c7b\u578b": 753, "dgl\u5185\u7f6e\u4e86\u5e38\u89c1\u7684\u56fe\u8bfb\u51fa\u51fd\u6570": 774, "dgl\u5185\u7f6e\u7684nn\u6a21\u5757\u5982\u679c\u5728forward\u51fd\u6570\u4e2d\u652f\u6301\u4e00\u4e2a\u53ef\u9009\u7684": 773, "dgl\u5185\u7f6e\u7684\u6d88\u606f": 769, "dgl\u53ef\u4ee5\u5904\u7406\u6700\u591a": 752, "dgl\u53ef\u4ee5\u95f4\u63a5\u5730\u4ece\u8fd9\u4e9b\u6765\u6e90\u521b\u5efa\u56fe": 749, "dgl\u540c\u6837\u652f\u6301\u5b83\u5728mxnet\u548ctensorflow\u540e\u7aef\u91cc\u7684\u5b9e\u73b0": [765, 774], "dgl\u548c\u8fd9\u4e9b\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u5176\u72ec\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c": 767, "dgl\u5728": 737, "dgl\u5728\u5185\u90e8\u5c06scipy\u77e9\u9635\u548cnetworkx\u56fe\u8f6c\u6362\u4e3a\u5f20\u91cf\u6765\u521b\u5efa\u56fe": 749, "dgl\u5728\u547d\u540d\u7a7a\u95f4": 756, "dgl\u5728\u96c6\u7fa4\u6240\u6709\u673a\u5668\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u8bad\u7ec3\u811a\u672c": 743, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6574\u56fe\u5206\u7c7b\u7684\u6837\u4f8b": 774, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5206\u5e03\u5f0f\u7ec4\u4ef6\u4ee5\u652f\u6301\u5206\u5e03\u5f0f\u8bad\u7ec3": 743, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7ba1\u9053": 760, "dgl\u5b9e\u73b0\u4e86\u591a\u4e2a\u53ef\u7528\u4e8e\u751f\u6210\u8fb9\u754c\u7684\u51fd\u6570": 761, "dgl\u5bf9\u8fb9\u754c\u5b50\u56fe\u505a\u4e86\u4e00\u4e2a\u8f6c\u6362": 761, "dgl\u5c06\u56fe\u5212\u5206\u7ed3\u679c\u5b58\u50a8\u5728\u8f93\u51fa\u76ee\u5f55\u4e2d\u7684\u591a\u4e2a\u6587\u4ef6\u4e2d": 745, "dgl\u5c06\u9700\u8981\u8ba1\u7b97gnn\u8f93\u51fa\u7684\u8282\u70b9\u79f0\u4e3a": 761, "dgl\u5df2\u7ecf\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528\u7684": 767, "dgl\u5efa\u8bae": 756, "dgl\u5efa\u8bae\u4f7f\u7528\u8282\u70b9\u63a9\u7801\u6765\u6307\u5b9a\u6570\u636e\u96c6\u7684\u5212\u5206": 741, "dgl\u5efa\u8bae\u7528\u6237\u5b9e\u73b0\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e\u7684\u51fd\u6570": 742, "dgl\u5efa\u8bae\u7528\u6237\u5c3d\u91cf\u51cf\u5c11\u8fb9\u7684\u7279\u5f81\u7ef4\u6570": 757, "dgl\u5efa\u8bae\u8ba9": 741, "dgl\u5efa\u8bae\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ece\u70b9\u5230\u8fb9\u7684\u5185\u5b58\u62f7\u8d1d": 757, "dgl\u63a8\u8350\u4f7f\u7528tensor\u4f5c\u4e3adgl": 752, "dgl\u63a8\u8350\u7528\u6237\u5c06\u56fe\u6570\u636e\u5904\u7406\u4e3a": 737, "dgl\u63a8\u8350\u91cd\u65b0\u6392\u5217\u56fe\u7684\u8282\u70b9": 741, "dgl\u63d0\u4f9b": 744, "dgl\u63d0\u4f9b\u4e86": [744, 753, 761, 770], "dgl\u63d0\u4f9b\u4e864\u4e2a\u51fd\u6570\u8ba9\u4efb\u52a1\u53d8\u5f97\u7b80\u5355": 742, "dgl\u63d0\u4f9b\u4e86api\u4ee5\u4ece\u78c1\u76d8\u4e2d\u52a0\u8f7d\u6216\u5411\u78c1\u76d8\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u56fe": 749, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2aapi\u4ee5\u6267\u884c\u8fd9\u4e24\u4e2a\u6b65\u9aa4": 745, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u529f\u80fd\u7684\u51fd\u6570": 773, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684rgcn\u7684\u7aef\u5230\u7aef\u7684\u4f8b\u5b50": 776, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a00\u758f\u7684adagrad\u4f18\u5316\u5668": 744, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u793a\u4f8b": 766, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u56fe\u5377\u79ef\u6a21\u5757": 776, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177": 743, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784": 744, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784\u548c\u591a\u79cdapi": 744, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7ea7\u522b\u7684api": 744, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u811a\u672c\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 746, "dgl\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b0\u7c7b\u578b\u7684\u8bed\u6cd5": 753, "dgl\u63d0\u4f9b\u4e86\u51e0\u4e2a\u90bb\u5c45\u91c7\u6837\u7c7b": 766, "dgl\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u7684api": 743, "dgl\u63d0\u4f9b\u4e86\u540d\u4e3a": 741, "dgl\u63d0\u4f9b\u4e86\u5728\u540c\u6784\u56fe\u4e0a\u505a\u94fe\u8def\u9884\u6d4b\u7684\u4e00\u4e2a\u793a\u4f8b": 764, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u91c7\u6837\u7684\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668": 744, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u542f\u52a8\u96c6\u7fa4\u4e2d\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684tool": 746, "dgl\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684": 766, "dgl\u63d0\u4f9b\u4e86\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5": 752, "dgl\u63d0\u4f9b\u7684\u4e00\u4e9b\u91c7\u6837\u65b9\u6cd5\u4e5f\u652f\u6301\u5f02\u6784\u56fe": 766, "dgl\u652f\u6301": 756, "dgl\u652f\u6301\u4f7f\u7528": 752, "dgl\u652f\u6301\u5185\u7f6e\u7684\u805a\u5408\u51fd\u6570": 756, "dgl\u73b0\u5728\u652f\u6301": 756, "dgl\u7684gin\u6837\u4f8b": 774, "dgl\u7684graphsage\u6837\u4f8b": 776, "dgl\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u5177\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u4ea4\u4e92\u8fdb\u7a0b": 743, "dgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u5c0f\u6279\u6b21\u751f\u6210\u4e09\u9879": 764, "dgl\u786e\u4fdd\u5757\u7684\u8f93\u51fa\u8282\u70b9\u5c06\u59cb\u7ec8\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 761, "dgl\u793e\u533a\u7684\u4e00\u7fa4\u70ed\u5fc3\u8d21\u732e\u8005\u628adgl\u7528\u6237\u6307\u5357\u8bd1\u6210\u4e86\u4e2d\u6587": 754, "dgl\u79f0\u4e4b\u4e3a": 752, "dgl\u79f0\u5b83\u4eec\u4e3a\u7ea2\u8272\u8282\u70b98\u5728\u7b2c\u4e8c\u4e2agnn\u5c42\u7684": 761, "dgl\u79f0\u5b83\u4eec\u4e3a\u89c4\u8303\u8fb9\u7c7b\u578b": 753, "dgl\u79f0\u8fd9\u79cd\u4ec5\u5305\u542b\u5fc5\u8981\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u4e8c\u5206\u56fe\u4e3a\u4e00\u4e2a": 761, "dgl\u8981\u6c42\u9884\u5904\u7406\u56fe\u6570\u636e\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 745, "dgl\u901a\u8fc7\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784": 747, "dgl\u91c7\u7528\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5": 743, "dgl\u91cc\u5bf9\u56fe\u8fdb\u884c\u53d8\u6362\u7684\u51fd\u6570\u4f1a\u53bb\u6389\u56fe\u4e0a\u7684\u6279\u6b21\u4fe1\u606f": 774, "dgl\u9ed8\u8ba4\u4f7f\u7528int64": 752, "dgl\ub294": [793, 809, 817], "dgl\uc5d0\uc11c": [785, 786, 789, 793, 794, 797, 804, 809, 813, 815], "dgl\uc5d0\uc11c\ub294": [781, 782, 793, 799, 803, 804, 807, 809], "dgl\uc740": [777, 778, 781, 782, 783, 784, 785, 786, 787, 788, 790, 793, 794, 797, 798, 799, 802, 803, 808, 810, 811, 816, 817, 819], "dgl\uc758": [781, 783, 784, 786, 794, 796, 797, 799, 807, 808, 809, 813], "dgl\uc774": [786, 803, 804, 809], "dgmg": [866, 872], "dgmg_cycl": 865, "dgmg_msg": 865, "dgmg_reduc": 865, "dgmgskeleton": 865, "dgn": 401, "dh": 824, "diag": [611, 615, 620, 621, 622, 633, 725, 822, 823, 825, 827], "diagmatrix": [594, 595], "diagon": [392, 403, 413, 424, 427, 614, 615, 619, 620, 621, 822, 823, 825, 858], "diagram": 701, "dichotomi": [120, 243, 479], "dict": [4, 20, 27, 28, 43, 46, 47, 56, 73, 74, 75, 103, 114, 115, 121, 130, 131, 148, 203, 204, 205, 206, 208, 210, 211, 212, 214, 217, 218, 220, 221, 222, 223, 232, 234, 235, 236, 238, 239, 240, 244, 286, 292, 294, 295, 296, 297, 299, 300, 305, 309, 310, 311, 312, 313, 314, 317, 320, 321, 322, 325, 328, 329, 336, 337, 338, 339, 343, 344, 350, 357, 361, 388, 389, 390, 391, 430, 431, 432, 433, 434, 435, 480, 544, 545, 560, 567, 568, 570, 571, 639, 647, 653, 685, 696, 701, 766, 782, 803, 809, 843, 862, 865, 868, 869], "dict_kei": 389, "dictionari": [4, 22, 43, 46, 47, 74, 75, 101, 102, 103, 121, 122, 131, 148, 210, 218, 234, 238, 240, 244, 295, 297, 299, 305, 310, 312, 320, 321, 336, 337, 338, 339, 343, 344, 350, 388, 431, 433, 480, 544, 567, 568, 570, 647, 685, 693, 701, 709, 714, 717, 718, 723, 730, 732, 736, 786, 800, 814, 840, 843, 845], "dictionary\uac00": 786, "dictionary\ub294": 786, "dictionary\ub4e4\uc744": 809, "dictionary\ub97c": [786, 807], "dictionary\uc5d0": 786, "dictionary\uc640": 807, "dict\u5bf9\u8c61": 742, "diff": 326, "differ": [4, 5, 11, 51, 61, 73, 88, 91, 92, 113, 116, 120, 126, 131, 135, 136, 138, 139, 140, 151, 152, 153, 158, 159, 172, 178, 179, 186, 192, 212, 214, 215, 217, 218, 227, 228, 233, 238, 241, 243, 247, 248, 285, 297, 299, 302, 303, 305, 321, 338, 343, 344, 357, 358, 388, 389, 391, 406, 423, 427, 432, 433, 434, 435, 438, 452, 462, 479, 567, 569, 573, 638, 644, 693, 695, 698, 701, 703, 704, 706, 709, 714, 716, 718, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 791, 794, 824, 825, 827, 832, 833, 838, 839, 841, 844, 849, 852, 857, 858, 859, 860, 862, 863, 865, 868, 869, 872, 874, 875], "differenti": [118, 119, 718, 859], "diffus": [662, 663, 668, 672, 826], "diffuse_op": 672, "digit": [199, 200], "digraph": [125, 247, 646, 705, 749, 790], "dii": 21, "dill": 833, "dim": [73, 261, 262, 263, 264, 330, 345, 389, 416, 452, 453, 573, 598, 601, 602, 603, 604, 605, 624, 649, 650, 679, 687, 712, 713, 736, 756, 757, 776, 797, 799, 819, 822, 823, 824, 827, 832, 842, 856, 857, 859, 865, 868], "dim_ff": 869, "dim_model": 869, "dim_nfeat": 844, "dimens": [4, 5, 9, 10, 14, 20, 139, 150, 154, 176, 292, 302, 317, 330, 345, 361, 389, 397, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 429, 430, 436, 438, 445, 449, 453, 459, 507, 551, 573, 598, 601, 602, 603, 604, 605, 612, 620, 624, 626, 649, 650, 689, 699, 706, 712, 713, 714, 728, 734, 822, 824, 827, 840, 842, 844, 856, 857, 859, 869, 874], "dimension": [9, 159, 302, 305, 345, 408, 410, 414, 416, 436, 438, 564, 565, 566, 573, 706, 713, 823, 841, 844], "dipol": [178, 179], "dir": [401, 701, 786], "dir1": 401, "direct": [6, 123, 124, 126, 134, 149, 155, 159, 178, 185, 187, 193, 227, 228, 246, 247, 287, 288, 292, 294, 298, 317, 345, 347, 401, 449, 547, 549, 550, 552, 574, 638, 651, 674, 693, 704, 705, 708, 789, 834, 841, 842, 858, 865, 868], "direction": 704, "directli": [9, 21, 64, 71, 89, 108, 109, 112, 117, 131, 148, 210, 229, 244, 303, 305, 308, 315, 316, 339, 343, 344, 345, 350, 399, 436, 438, 480, 544, 571, 573, 654, 655, 693, 705, 825, 827, 842, 843, 845, 848, 852, 857], "directoractor": 134, "directori": [21, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 209, 287, 309, 691, 692, 696, 700, 702, 778, 779, 782, 821, 837, 838, 839, 848, 852, 869], "dirnam": 202, "disabl": [4, 9, 712, 821, 833, 849], "disable_shared_mem": 4, "disallow": 566, "disambigu": 709, "disappear": [4, 698], "disast": 858, "discard": [27, 28, 114, 115, 116, 117, 130, 244, 245, 339, 342, 348, 356, 480, 481, 544, 558, 561, 638, 647, 648, 734, 824], "discov": [869, 870, 872], "discoveri": 865, "discret": [663, 859], "disct": 639, "discuss": [21, 639, 731, 736, 858], "diseas": [567, 568, 709, 753, 794], "disease\u6cbb\u7597\u8fb9": 753, "disease\u8282\u70b9": 753, "disjoint": 122, "disk": [4, 138, 139, 140, 156, 203, 206, 291, 292, 298, 309, 317, 318, 691, 692, 696, 701, 778, 832, 836, 838, 839, 843, 845], "dislik": [731, 732, 771, 772, 815, 816], "dislike_dst": [731, 771, 815], "dislike_src": [731, 771, 815], "dispatch": [9, 700], "dispatch_data": 701, "displai": [56, 823, 862], "dist": [345, 436, 437, 438, 453, 454, 551, 573, 574, 687, 689, 824, 830, 833, 848, 855, 874, 875], "dist_anim": 868, "dist_graph": [698, 744, 784], "dist_list": 868, "dist_matrix": 868, "distanc": [6, 178, 179, 241, 345, 395, 436, 437, 438, 453, 454, 551, 573, 574, 687, 689, 865], "distdataload": [4, 697, 698, 743, 744, 783, 784], "distedgedataload": [4, 698, 744, 853], "distembed": [4, 697, 743, 744, 783], "distgraph": [4, 231, 232, 238, 239, 240, 697, 699, 701, 743, 744, 745, 783, 785, 786, 852, 853], "distgraphserv": 4, "distgraph\u5c06\u56fe\u6570\u636e\u52a0\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u4e2d": 744, "distgraph\uc758": 784, "distinct": [142, 693, 860, 872], "distinguish": [68, 156, 644, 687, 693, 709, 827], "distmult": 857, "distnodedataload": [4, 698, 744, 784, 852, 853], "distplot": 868, "distribut": [13, 120, 142, 174, 197, 205, 210, 211, 224, 225, 243, 293, 297, 319, 359, 360, 388, 416, 432, 434, 459, 479, 569, 700, 710, 721, 732, 735, 743, 744, 745, 783, 785, 786, 807, 830, 833, 848, 855, 859, 865, 868, 869, 875], "distributeddataparallel": [210, 211, 697, 743, 783, 833, 848, 852, 853, 874, 875], "distributeditemsampl": [833, 875], "distributedli": [293, 698], "distributedsampl": [210, 211], "disttenor": 4, "disttensor": [4, 230, 237, 697, 698, 699, 743, 744, 783, 784, 785], "disttensor\u4e2d\u7684\u884c\u6570\u5fc5\u987b\u4e0e\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u6216\u8fb9\u6570\u76f8\u540c": 744, "div": [9, 253, 254, 267, 268, 277, 278, 495, 496, 504, 505, 514, 515, 516, 517, 518, 519, 536, 537, 712, 756, 797, 827], "dive": [729, 829], "divers": 869, "divid": [45, 68, 79, 82, 105, 142, 143, 189, 190, 230, 237, 403, 419, 652, 722, 725, 729, 813, 843, 856, 859], "divis": [4, 401, 410, 423, 424, 448, 450, 451, 615, 627], "dl": [134, 173, 820], "dlg": 786, "dlg\uc758": 797, "dm": 868, "dmlc": [21, 295, 303, 308, 336, 337, 821, 848], "dncoder": 869, "dnn": [727, 811], "do": [4, 9, 21, 22, 70, 89, 101, 102, 114, 116, 130, 140, 180, 238, 297, 336, 337, 345, 355, 357, 389, 429, 436, 438, 448, 449, 451, 453, 454, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 559, 563, 568, 573, 639, 692, 698, 708, 709, 716, 717, 722, 723, 732, 735, 736, 803, 832, 835, 836, 838, 839, 840, 843, 858, 859, 862, 865], "do_someth": 0, "doc": [9, 14, 168, 186, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 718, 730, 827, 842], "docstr": 21, "document": [8, 22, 212, 214, 238, 837, 852], "doc\uc5d0\uc11c": 814, "doe": [4, 8, 21, 26, 27, 28, 64, 71, 93, 113, 116, 130, 131, 134, 149, 155, 164, 185, 187, 193, 292, 293, 301, 338, 357, 459, 505, 545, 581, 598, 601, 602, 603, 620, 639, 662, 663, 668, 692, 698, 700, 701, 705, 709, 713, 719, 723, 729, 732, 739, 779, 794, 813, 827, 830, 840, 842, 843, 844, 845, 846, 847, 856, 858, 859, 862, 865, 869, 874], "doesn": [4, 56, 168, 200, 726, 858], "doi": [134, 163, 173], "domain": [286, 296, 309, 318, 837, 838, 839, 843, 849], "don": [21, 89, 239, 240, 564, 566, 567, 639, 720, 827, 869], "done": [6, 21, 156, 336, 687, 691, 698, 822, 823, 825, 840, 842, 843, 848, 849, 852, 856, 857, 858, 859], "donghuixu": 754, "donot_use_mm_for_euclid_dist": [437, 551], "dot": [9, 255, 256, 269, 270, 279, 280, 405, 456, 497, 498, 504, 520, 521, 538, 539, 712, 726, 732, 735, 756, 775, 797, 807, 810, 816, 818, 824, 843, 853, 858, 859, 862, 869], "dotpredictor": [732, 772, 816, 843], "dotproductpredictor": [732, 735, 772, 775, 816, 818], "doubl": [9, 22, 173, 241, 641, 693, 706, 712, 791, 797, 865], "down": [290, 303, 824, 856, 859], "download": [2, 21, 23, 132, 133, 134, 135, 136, 137, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 202, 287, 690, 691, 694, 738, 739, 778, 779, 821, 822, 823, 825, 827, 832, 835, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "downstream": [701, 732, 735, 736, 831, 852, 857], "doxygen": 21, "dozen": 22, "dpi": 868, "dramat": 859, "draw": [391, 832, 862, 865], "draw_circular": 865, "draw_networkx": 858, "draw_networkx_edg": [823, 868], "draw_networkx_nod": [823, 868], "drawn": [720, 825], "drive": [21, 292], "driven": [866, 872], "drop": [4, 210, 211, 246, 293, 301, 303, 315, 653, 658, 659, 662, 663, 668, 833, 868, 875], "drop_last": [4, 209, 210, 211, 212, 213, 214, 217, 218, 293, 301, 697, 719, 734, 743, 761, 762, 763, 764, 766, 774, 783, 803, 804, 805, 806, 807, 809, 817, 833, 844, 848, 852, 853, 858, 875], "drop_uneven_input": [293, 833, 875], "dropbox": 21, "dropedg": 13, "dropnod": 13, "dropout": [394, 398, 399, 400, 401, 404, 409, 411, 412, 417, 420, 421, 423, 424, 425, 428, 429, 443, 444, 448, 450, 451, 689, 697, 720, 725, 726, 736, 743, 783, 819, 825, 833, 859, 862, 869, 875], "dropouta": [443, 444], "dropouth": [443, 444], "dropout\u6982\u7387": 776, "drug": [52, 122, 567, 568, 685, 709, 753, 794, 865], "drugai": 754, "drug\u76f8\u4e92\u4f5c\u7528\u8fb9": 753, "drug\u8282\u70b9": 753, "dst": [4, 34, 62, 63, 68, 110, 218, 241, 361, 396, 405, 406, 409, 411, 412, 416, 419, 425, 456, 457, 458, 560, 563, 616, 639, 640, 644, 679, 695, 705, 712, 713, 718, 721, 726, 729, 730, 732, 735, 741, 749, 756, 757, 761, 762, 764, 769, 770, 772, 775, 781, 790, 797, 799, 803, 804, 807, 810, 813, 814, 816, 818, 833, 842, 843, 845, 859, 869, 875], "dst_dtype": [729, 769, 813], "dst_field": 869, "dst_id": [59, 126, 248, 285, 693, 700, 786], "dst_id_field": 693, "dst_input": [730, 770, 814], "dst_node": [321, 639, 803, 813], "dst_node_id": 700, "dst_timestamp": 321, "dst_type": [131, 338, 431, 433], "dst_x": 718, "dstdata": [4, 9, 44, 68, 208, 219, 220, 389, 578, 639, 697, 699, 713, 722, 725, 729, 730, 743, 757, 761, 765, 766, 769, 770, 783, 785, 799, 803, 808, 809, 813, 814], "dstnode": [43, 68, 208, 220, 639, 722, 761, 765, 803, 808], "dsttype": [26, 68, 105, 224, 225, 389, 714, 730, 758, 770, 800, 814], "dt": 693, "dtype": [4, 10, 21, 47, 64, 75, 95, 96, 117, 126, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 217, 244, 245, 248, 297, 302, 309, 326, 331, 339, 343, 344, 359, 360, 389, 454, 480, 481, 544, 557, 558, 559, 564, 566, 578, 579, 589, 594, 607, 619, 644, 658, 659, 666, 672, 685, 687, 693, 695, 698, 700, 701, 706, 709, 719, 720, 726, 730, 731, 732, 741, 744, 750, 753, 770, 771, 772, 781, 784, 786, 791, 794, 810, 814, 815, 816, 824, 827, 832, 833, 835, 838, 839, 841, 844, 845, 852, 853, 856, 858, 859, 869, 875], "due": [22, 118, 119, 192, 293, 295, 303, 308, 309, 322, 336, 337, 560, 645, 708, 720, 856, 869], "dump": [786, 853], "duplic": [116, 135, 136, 151, 152, 153, 186, 192, 287, 295, 303, 308, 336, 337, 339, 343, 344, 434, 480, 544, 592, 647, 655, 675, 700, 827, 862], "dur": [856, 859], "dure": [5, 21, 89, 229, 240, 293, 345, 348, 426, 436, 438, 563, 567, 568, 573, 637, 673, 698, 700, 701, 707, 712, 717, 723, 833, 838, 839, 841, 849, 852, 859, 862, 865, 868, 869], "duse_cuda": 821, "duse_libxsmm": 821, "duse_openmp": 821, "dvd": 137, "dwivedi": 824, "dx": [163, 401, 858, 869], "dynam": [408, 866, 868, 869, 870, 872], "e": [0, 4, 5, 9, 21, 22, 26, 41, 42, 48, 54, 62, 63, 70, 108, 112, 118, 119, 120, 122, 125, 126, 130, 131, 166, 174, 178, 186, 210, 211, 218, 238, 242, 243, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 290, 291, 303, 308, 338, 345, 347, 361, 389, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 434, 436, 438, 453, 456, 457, 458, 462, 479, 504, 505, 552, 553, 560, 561, 565, 566, 571, 573, 576, 578, 579, 614, 616, 617, 618, 630, 645, 646, 662, 663, 668, 677, 678, 680, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 712, 713, 717, 718, 726, 732, 733, 734, 740, 748, 755, 756, 773, 780, 781, 789, 796, 797, 798, 821, 822, 823, 824, 825, 827, 828, 834, 840, 841, 842, 843, 849, 858, 859, 865, 869, 874], "e1": [297, 321, 328, 337], "e2": [297, 321, 328, 337], "e2d": 869, "e2n": 674, "e_": [395, 405, 406, 410, 411, 412, 414, 415, 417, 418, 419, 422, 423, 424, 425, 834, 842, 858, 859], "e_add_u": 5, "e_add_v": 5, "e_attr": 125, "e_div_u": 5, "e_div_v": 5, "e_dot_u": 5, "e_dot_v": 5, "e_feat": [164, 166, 462], "e_ij": 396, "e_mul_u": 5, "e_mul_v": 5, "e_sub_u": 5, "e_sub_v": [5, 9], "e_t": [431, 432], "e_typ": [157, 158, 191], "e_weight": 6, "each": [0, 4, 5, 6, 7, 14, 20, 22, 34, 35, 36, 37, 39, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 78, 87, 88, 92, 93, 94, 100, 101, 102, 116, 117, 122, 123, 124, 126, 130, 131, 135, 136, 141, 142, 147, 150, 151, 152, 153, 154, 157, 158, 171, 174, 175, 176, 178, 179, 181, 182, 183, 184, 191, 195, 197, 198, 209, 210, 211, 212, 213, 214, 215, 217, 218, 224, 225, 227, 228, 230, 233, 237, 238, 239, 240, 241, 244, 248, 285, 289, 293, 297, 299, 301, 302, 303, 305, 306, 308, 310, 315, 316, 319, 321, 322, 328, 332, 336, 337, 338, 339, 343, 344, 345, 347, 357, 358, 361, 387, 388, 389, 391, 392, 393, 394, 395, 397, 401, 403, 405, 408, 409, 410, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 425, 426, 428, 429, 436, 437, 438, 440, 442, 443, 444, 445, 449, 453, 454, 455, 459, 461, 463, 480, 506, 507, 544, 545, 551, 554, 555, 556, 559, 560, 562, 564, 565, 566, 567, 568, 569, 570, 573, 574, 576, 577, 578, 579, 639, 644, 645, 647, 651, 654, 655, 662, 670, 671, 676, 679, 681, 682, 683, 684, 685, 689, 690, 693, 695, 696, 697, 698, 699, 700, 701, 702, 704, 706, 708, 709, 711, 714, 716, 717, 718, 721, 723, 724, 726, 729, 730, 731, 732, 733, 734, 735, 736, 781, 786, 791, 809, 816, 818, 823, 824, 825, 827, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 875], "earli": [166, 192, 732, 816], "earlier": [290, 698, 857, 865], "eas": [21, 22, 305], "easi": [21, 22, 342, 565, 691, 701, 735, 820, 827], "easier": [70, 699, 701, 843], "easili": [122, 227, 228, 716, 721, 724, 732, 831, 834, 840, 859], "ec2": [14, 849], "ecosystem": 827, "ed": [862, 869], "edata": [4, 5, 9, 20, 27, 30, 34, 47, 51, 53, 70, 95, 96, 108, 114, 117, 118, 119, 122, 125, 126, 128, 145, 147, 157, 158, 164, 166, 174, 177, 179, 191, 195, 208, 212, 214, 217, 219, 221, 244, 247, 248, 339, 343, 344, 361, 430, 453, 462, 480, 544, 555, 557, 558, 559, 560, 561, 566, 567, 568, 569, 570, 571, 575, 576, 639, 644, 645, 646, 647, 649, 654, 655, 658, 659, 660, 661, 662, 663, 666, 668, 671, 672, 674, 675, 676, 677, 678, 679, 680, 685, 687, 693, 695, 698, 699, 700, 701, 706, 709, 713, 726, 732, 733, 735, 741, 744, 745, 750, 753, 757, 762, 764, 772, 773, 775, 781, 784, 785, 786, 791, 794, 798, 799, 804, 807, 810, 816, 818, 840, 841, 842, 843, 845, 856, 857, 868], "edata_develop": 361, "edata_dict": 361, "edata_follow": 361, "edata_pars": [148, 693], "edata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 217, 244, 245, 339, 342, 343, 344, 348, 480, 481, 544, 553, 557, 558, 559, 575, 644, 658, 659, 666, 672, 685, 693, 700, 701, 705, 706, 708, 734, 749, 750, 752, 790, 791, 793, 817, 841, 844, 845], "edeg": [45, 79, 82, 105], "edg": [0, 4, 5, 6, 7, 9, 13, 21, 25, 26, 27, 30, 31, 32, 34, 36, 39, 41, 46, 47, 48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 221, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 291, 295, 296, 297, 300, 303, 305, 308, 309, 310, 312, 313, 315, 316, 318, 319, 320, 321, 325, 328, 331, 337, 338, 339, 342, 343, 344, 345, 347, 348, 355, 356, 357, 358, 361, 389, 391, 393, 394, 395, 396, 399, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 453, 456, 457, 458, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 578, 579, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 654, 655, 657, 658, 660, 661, 662, 663, 664, 666, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 680, 685, 687, 689, 693, 695, 697, 699, 700, 701, 703, 704, 711, 712, 713, 714, 716, 719, 721, 722, 724, 726, 728, 730, 731, 734, 735, 736, 741, 750, 752, 753, 754, 756, 757, 762, 764, 771, 772, 775, 781, 785, 786, 791, 793, 794, 796, 797, 798, 799, 803, 804, 807, 810, 815, 816, 817, 818, 820, 822, 823, 824, 825, 827, 831, 832, 833, 835, 837, 838, 839, 840, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 860, 862, 868, 872, 874], "edge_attent": 859, "edge_attr": [179, 247, 646], "edge_attr_dtyp": 786, "edge_attr_schem": [4, 75], "edge_attribut": [297, 328], "edge_classif": 309, "edge_color": 858, "edge_data": [309, 693, 701, 786], "edge_dir": [212, 214, 239, 240, 567, 568, 569, 570], "edge_drop": 394, "edge_feat": [177, 238, 396, 401, 406, 407, 409, 415, 417, 423, 700, 701, 745, 786], "edge_feat_0": 839, "edge_feat_0_path": 839, "edge_feat_1": 839, "edge_feat_1_path": 839, "edge_feat_nam": [29, 117, 655, 660, 671], "edge_feat_s": [138, 401, 407, 423, 450], "edge_featur": [295, 301, 305, 718, 832, 835, 845], "edge_feature_kei": 295, "edge_follow_feat_0": 838, "edge_follow_feat_0_path": 838, "edge_follow_feat_1": 838, "edge_follow_feat_1_path": 838, "edge_func": 422, "edge_gat": 409, "edge_id": [32, 231, 305], "edge_id_attr_nam": [125, 247], "edge_in_feat": 396, "edge_index": [310, 701], "edge_label": [25, 318, 732, 762, 772, 804, 816], "edge_like_feat_0": 838, "edge_like_feat_0_path": 838, "edge_like_feat_1": 838, "edge_like_feat_1_path": 838, "edge_map": [238, 701, 745, 786], "edge_mask": [430, 431, 432, 761, 803], "edge_permute_algo": [98, 560], "edge_pred_graph": [732, 772, 816], "edge_predict": [762, 804], "edge_repr": 865, "edge_split": [685, 698, 744, 784, 853], "edge_subgraph": [157, 158, 191, 480, 719, 761, 762, 764, 803, 804, 807, 841], "edge_timestamp_attr_nam": [297, 315, 316], "edge_trainer_id": 230, "edge_typ": [131, 297, 305, 338, 699, 701, 709, 729, 753, 769, 786, 794, 813], "edge_type_id": 700, "edge_type_subgraph": [26, 481, 709, 753, 794], "edge_type_to_id": [297, 328, 838], "edge_udf": [20, 676, 677, 678, 679, 680], "edge_upd": 450, "edge_weight": [6, 145, 212, 394, 406, 410, 411, 413, 414, 419, 425, 426, 427, 432, 434, 733, 773], "edgebatch": [20, 53, 712, 756, 797], "edgecol": 4, "edgedataload": [698, 744, 762, 764, 784, 804, 805, 807, 853], "edgedataview": 4, "edgelist": 868, "edgepredictor": 853, "edges1": 389, "edges2": 389, "edges3": 389, "edges_0": 693, "edges_1": 693, "edges_b": 868, "edges_data": 845, "edges_dst": 845, "edges_field": 869, "edges_gener": [91, 546], "edges_group": 845, "edges_of_id": 845, "edges_path": 839, "edges_perm": 560, "edges_src": 845, "edges_to_exclud": 310, "edges_with_feature_on": 53, "edgeweightnorm": [394, 413, 419, 426, 427, 733, 773], "edist": 395, "edu": [145, 175, 181, 184], "educ": 857, "ee": 869, "efeat": [396, 406, 409, 415, 422, 450, 700, 701], "effect": [10, 210, 211, 242, 285, 398, 399, 400, 424, 460, 574, 578, 579, 662, 663, 668, 696, 824, 869], "effici": [4, 5, 9, 22, 34, 73, 93, 94, 100, 113, 122, 126, 131, 209, 238, 247, 248, 285, 338, 345, 391, 433, 435, 436, 438, 569, 573, 645, 701, 708, 711, 722, 726, 729, 734, 831, 836, 842, 849, 856, 857, 858, 859, 862, 865, 868, 869], "effort": [857, 874], "eg": [709, 753, 794], "egat": 406, "egat_model": [406, 409], "egnn": 407, "egt": 450, "eid": [4, 20, 26, 51, 55, 61, 88, 89, 95, 96, 125, 130, 221, 231, 232, 238, 239, 240, 244, 247, 339, 343, 344, 356, 361, 430, 480, 544, 557, 558, 560, 564, 566, 567, 568, 569, 570, 575, 639, 644, 647, 679, 699, 701, 709, 753, 761, 764, 785, 786, 794, 803, 807, 841, 843, 869], "eid2localeid": 4, "eid2partid": 4, "eid_attr": 646, "eid_het2hom": 699, "eid_hom2het": 699, "eid_offset": 699, "eid_rang": 786, "eids_dict": [764, 807], "eig": 401, "eig_vec": 401, "eigenvalu": [346, 347, 397, 402, 452, 665], "eigenvector": [346, 401, 452, 665], "eight": [171, 700], "eigval": [452, 665], "eigval_nam": [452, 665], "eigvec": [452, 665], "eisfischerh\u00fctt": 869, "either": [9, 21, 26, 32, 34, 62, 63, 73, 91, 92, 93, 94, 100, 113, 131, 182, 210, 212, 214, 218, 221, 239, 240, 297, 305, 313, 317, 318, 338, 345, 389, 437, 551, 565, 567, 568, 569, 570, 573, 598, 601, 602, 603, 605, 639, 701, 704, 708, 722, 837, 840, 843, 852, 865], "el": [456, 712, 756, 797], "electron": [178, 179], "element": [0, 4, 5, 22, 31, 32, 34, 35, 36, 37, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 93, 94, 100, 119, 121, 122, 212, 214, 217, 218, 238, 239, 240, 244, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 297, 303, 305, 308, 310, 315, 316, 328, 332, 338, 339, 343, 344, 346, 347, 357, 358, 392, 396, 438, 480, 506, 544, 545, 555, 556, 566, 567, 568, 570, 581, 582, 585, 586, 597, 598, 599, 604, 610, 617, 618, 624, 630, 634, 645, 649, 650, 698, 723, 724, 729, 824, 825, 843, 844], "elementwis": [456, 611, 612, 615, 621, 622, 623, 633], "elif": [722, 729, 765, 769, 808, 813], "elimin": [130, 295, 303, 308, 336, 337], "ell": 653, "els": [4, 73, 395, 428, 429, 430, 431, 432, 434, 687, 693, 718, 720, 722, 723, 726, 729, 730, 761, 763, 765, 769, 770, 803, 806, 808, 810, 813, 814, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 857, 859, 865, 869, 874, 875], "elsewher": 619, "elu": [450, 726, 810, 859], "emap": 852, "emb": [4, 10, 388, 432, 434, 459, 698, 744, 784, 857, 862, 865, 869], "emb_dim": [387, 391], "emb_stat": 4, "embed": [5, 13, 137, 149, 158, 180, 182, 184, 185, 191, 314, 387, 388, 391, 432, 434, 449, 450, 453, 454, 457, 458, 459, 689, 697, 698, 699, 701, 721, 735, 736, 819, 832, 852, 853, 856, 857, 858, 859, 862, 869], "embedding_dim": [4, 388, 449, 459, 689], "emit": [732, 865], "emphas": 843, "empir": [14, 120, 182], "emploi": [20, 303, 308, 315, 316, 433, 434, 435, 725, 824, 859, 869], "employ": 869, "empti": [32, 56, 131, 204, 234, 285, 303, 308, 315, 338, 350, 355, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 720, 729, 838, 839, 856, 859, 869], "en": [849, 869], "enabl": [9, 23, 289, 303, 308, 432, 434, 712, 719, 724, 726, 810, 821, 831, 833, 865, 869, 875], "enable_cpu_affin": [848, 849], "enc": 869, "encapsul": 730, "enclos": [241, 693], "encod": [13, 135, 136, 139, 159, 165, 171, 346, 444, 449, 452, 453, 454, 455, 461, 554, 637, 665, 669, 673, 704, 824, 841, 853, 857, 858, 860, 869, 870, 872], "encompass": [303, 305, 308, 315, 316], "encount": [856, 859], "encourag": [433, 435, 735], "end": [4, 20, 22, 27, 114, 164, 215, 238, 303, 308, 346, 356, 391, 395, 445, 562, 574, 637, 665, 673, 679, 687, 701, 708, 723, 728, 732, 734, 736, 761, 793, 803, 809, 816, 817, 819, 825, 826, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "end_epoch_tim": 721, "end_tim": 164, "endl": 22, "endpoint": [4, 34, 48, 53, 100, 116, 480, 481, 638, 647, 858], "energi": [178, 179], "enforc": 852, "english": [149, 182, 185, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "enhanc": [21, 310, 823, 860, 870, 872], "enjoi": [9, 21, 824], "enough": [14, 701, 844], "enrich": 859, "ensur": [131, 305, 319, 334, 413, 698, 700, 718, 852, 874], "entail": 865, "enter": 70, "enthalpi": [178, 179], "entir": [3, 9, 45, 79, 82, 105, 210, 288, 294, 296, 298, 317, 697, 701, 718, 719, 722, 734, 831, 843, 844, 852, 859], "entiti": [132, 133, 144, 158, 161, 170, 305, 457, 458, 703, 704, 735, 788, 857, 860, 872], "entri": [126, 164, 177, 248, 322, 330, 448, 451, 569, 619, 705, 733, 790, 825, 827, 858], "entropi": [243, 430, 431, 432, 434, 479, 735, 818, 843, 857, 859, 868], "entropy_list": 868, "enumer": [288, 292, 294, 298, 300, 317, 697, 699, 705, 720, 721, 725, 726, 743, 763, 783, 806, 810, 832, 833, 835, 852, 853, 862, 869, 875], "env": [832, 835, 838, 839, 856, 859], "environ": [14, 21, 293, 700, 821, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 856, 857, 858, 859, 862, 865, 868, 874, 875], "enzym": [25, 168, 186], "ep": [4, 10, 243, 410, 479, 662, 663, 668, 848, 869], "epoch": [4, 210, 211, 387, 430, 431, 432, 433, 434, 695, 697, 698, 721, 725, 726, 732, 734, 735, 736, 741, 743, 746, 772, 774, 775, 776, 781, 783, 784, 787, 810, 816, 817, 818, 819, 822, 823, 824, 825, 828, 832, 833, 835, 840, 842, 843, 844, 848, 852, 853, 856, 857, 858, 859, 862, 869, 874, 875], "epoch_end": [833, 875], "epoch_start": [833, 875], "epsilon": [178, 179, 401, 414, 415], "epsilon_": [178, 179], "eq": [429, 862], "equal": [128, 129, 139, 173, 182, 205, 217, 243, 297, 303, 308, 315, 316, 326, 331, 361, 393, 428, 462, 479, 506, 507, 569, 614, 706, 761, 803, 849, 859, 868], "equat": [394, 395, 412, 413, 426, 427, 456, 460, 711, 825, 856, 857, 858, 862], "equip": 9, "equival": [26, 73, 220, 221, 222, 223, 244, 249, 250, 261, 262, 263, 264, 289, 297, 326, 330, 339, 389, 394, 403, 408, 413, 419, 426, 427, 437, 544, 551, 596, 611, 613, 615, 620, 621, 622, 631, 632, 633, 649, 650, 677, 680, 712, 713, 718, 723, 733, 827, 841, 842, 858, 862], "equivari": [407, 858], "er": [712, 756, 797], "erdos_renyi_graph": 462, "error": [48, 89, 109, 116, 131, 285, 293, 338, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 637, 638, 639, 673, 685, 701, 707, 751, 761, 792, 803, 832, 833, 835, 838, 839, 865, 875], "errorbar": 868, "especi": [21, 125, 247, 719, 720, 834, 857], "essenc": 859, "essenti": [20, 22, 238, 463, 722, 821, 824, 834, 842, 852, 856, 865], "establish": 4, "estim": [433, 435, 719, 735, 775, 818, 840, 841, 842, 843, 844, 845, 874], "et": [72, 135, 136, 562, 822, 824, 834, 840, 842, 856, 862], "eta": [243, 479, 832], "etc": [0, 1, 4, 11, 21, 125, 162, 247, 361, 691, 700, 701, 712, 717, 718, 722, 724, 728, 734, 827, 843, 852, 868], "ether": 4, "etyp": [4, 26, 27, 29, 30, 31, 32, 33, 34, 36, 39, 47, 48, 50, 51, 53, 55, 57, 60, 61, 62, 63, 80, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 100, 107, 109, 113, 114, 117, 118, 125, 126, 128, 130, 208, 212, 214, 217, 218, 221, 224, 225, 230, 238, 239, 245, 297, 323, 324, 328, 351, 353, 389, 391, 399, 418, 421, 424, 431, 432, 433, 482, 552, 555, 557, 559, 561, 563, 567, 568, 570, 576, 635, 638, 639, 644, 645, 646, 647, 649, 653, 654, 655, 670, 675, 693, 695, 699, 700, 701, 709, 714, 718, 721, 722, 723, 730, 732, 734, 735, 736, 741, 753, 758, 761, 762, 764, 765, 766, 770, 772, 774, 775, 776, 781, 785, 786, 794, 800, 803, 804, 807, 808, 809, 814, 816, 817, 818, 819, 838, 857], "etype2id": 699, "etype2id_map": 699, "etype_attr": 646, "etype_count": 645, "etype_dict": 73, "etype_field": 644, "etype_id": 786, "etype_sort": 239, "etype_weight": [431, 433], "etypes_list": 238, "etypes\u662f\u4e00\u4e2a\u5217\u8868": 774, "eu": 48, "euclidean": [345, 436, 437, 438, 551, 573, 865], "ev": [48, 178, 179], "eval": [736, 776, 819, 823, 824, 825, 832, 833, 835, 856, 865, 869, 874, 875], "eval_dataload": 832, "evalu": [137, 171, 180, 182, 188, 197, 205, 287, 701, 702, 716, 720, 736, 776, 819, 822, 823, 824, 828, 840, 843, 844, 856, 859, 865, 869, 874], "even": [4, 210, 303, 308, 315, 356, 557, 698, 716, 831, 858, 862], "evenli": [230, 237, 852], "event": [164, 166], "everi": [0, 4, 10, 21, 117, 119, 121, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 212, 213, 214, 217, 239, 240, 303, 308, 315, 338, 347, 361, 389, 412, 430, 431, 432, 433, 434, 435, 561, 566, 567, 568, 570, 698, 701, 705, 720, 732, 734, 828, 835, 841, 844, 852, 865, 866, 869, 872, 874], "everyth": [21, 290, 852], "evict": [298, 322, 329], "evid": 859, "evolut": [865, 868], "evolv": 858, "eweight": [126, 248, 430, 431, 733, 771, 773, 798], "eweight_nam": [30, 126, 248, 554, 661, 662, 663, 668, 669, 672], "eweight\ub97c": 798, "exact": [716, 833, 875], "exactli": [8, 117, 297, 639, 698, 718, 726, 825, 843, 852, 853, 859, 865], "exampl": [0, 3, 4, 5, 6, 9, 10, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 205, 209, 210, 211, 212, 213, 214, 215, 217, 218, 224, 225, 227, 228, 233, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 328, 332, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 478, 479, 480, 481, 482, 507, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 638, 639, 640, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 691, 692, 693, 695, 696, 697, 698, 699, 700, 702, 704, 705, 706, 708, 709, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 727, 729, 730, 731, 732, 733, 734, 735, 736, 778, 781, 807, 817, 819, 820, 822, 823, 824, 825, 826, 830, 831, 832, 834, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 855, 856, 857, 858, 859, 861, 862, 864, 865, 867, 868, 869, 871, 873, 874, 875, 877], "examplelay": 462, "exceed": [453, 716], "except": [4, 171, 346, 408, 639, 644, 665, 698, 700, 718, 721, 722, 723, 736, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 859, 875], "exception": 831, "exchang": [305, 852], "exclud": [4, 218, 224, 239, 240, 310, 320, 325, 563, 565, 567, 568, 718, 724, 762, 804], "exclude_edg": [239, 240, 310, 320, 567, 568, 717], "exclude_eid": 218, "exclude_seed_edg": [717, 718, 721, 724, 832], "exclude_self": [116, 345, 436, 438, 573], "exclude_self_loop": [224, 563], "excluded_edg": [567, 568], "exclus": [214, 218, 293, 566, 874], "execut": [89, 156, 293, 359, 698, 830, 833, 847, 851, 855, 861, 864, 867, 868, 871, 873, 875, 877], "exhaust": 735, "exhibit": 859, "exist": [0, 4, 21, 27, 28, 114, 115, 117, 142, 143, 186, 200, 224, 230, 237, 299, 320, 342, 355, 356, 557, 563, 587, 634, 638, 647, 652, 662, 663, 668, 687, 696, 698, 704, 718, 735, 742, 782, 820, 822, 823, 831, 840, 842, 843, 852, 857, 862, 865], "exist_ok": [838, 839], "exit": [70, 856], "exmapl": 6, "exp": [361, 395, 396, 416, 455, 576, 577, 827, 859, 865, 869], "expand": [343, 344, 433, 435, 729, 813, 865], "expand_as_pair": [728, 729, 768, 769, 812, 813], "expans": [343, 344], "expect": [109, 120, 199, 200, 313, 328, 410, 426, 709, 794, 822, 856, 857, 869], "expens": 66, "experi": [14, 173, 554, 669, 726, 840, 845, 859], "experiment": [4, 6, 10, 398, 399, 400, 459], "explain": [141, 430, 431, 432, 433, 434, 435, 690, 711, 820, 856, 859], "explain_graph": [430, 431, 432, 433, 434, 435], "explain_nod": [430, 431, 432, 434], "explan": [1, 3, 11, 142, 143, 189, 190, 209, 215, 218, 220, 221, 222, 223, 430, 431, 432, 433, 434, 435, 700, 718, 723, 856, 857, 858, 859, 862, 865, 868, 869], "explanatori": [432, 434], "explic": 4, "explicit": [708, 827, 865], "explicitli": [285, 338, 698, 699, 708, 793, 827, 833, 838, 839, 865], "exploit": [22, 433, 435, 857], "explor": [433, 435, 689, 824, 863, 865, 872, 874], "explos": [212, 297, 303, 315, 567], "expon": 622, "exponenti": [622, 869], "export": [21, 700, 786, 821, 849, 852], "expos": [20, 22, 831], "express": [5, 703, 732, 735, 842, 860, 868, 872], "extend": [5, 153, 210, 395, 433, 435, 721, 735, 833, 857, 860, 862, 872], "extens": [183, 821, 832, 833, 835, 838, 839, 869], "extent": [178, 179], "extern": [2, 31, 419, 695, 703, 708], "extra": [22, 174, 389, 429, 561, 647, 693, 724, 824, 848, 852, 857], "extra_cached_hop": [357, 545], "extract": [1, 13, 95, 96, 159, 162, 173, 201, 218, 232, 244, 245, 287, 305, 339, 343, 344, 480, 481, 544, 557, 558, 575, 692, 701, 719, 730, 736, 761, 779, 803, 819, 822, 823, 825, 832, 835, 840, 841, 844, 857, 858, 862], "extract_arch": [692, 739, 779], "extrem": 858, "ey": 843, "e\u662f\u8fb9\u7684\u6570\u91cf": 773, "f": [4, 9, 10, 293, 401, 406, 416, 417, 430, 431, 433, 435, 459, 695, 697, 699, 718, 720, 721, 722, 723, 725, 726, 729, 732, 734, 736, 741, 743, 762, 763, 764, 765, 766, 769, 772, 774, 776, 781, 783, 804, 806, 807, 808, 809, 810, 813, 816, 817, 819, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 840, 842, 843, 844, 852, 853, 856, 857, 859, 862, 865, 868, 869, 874, 875], "f1": [389, 685, 859], "f1_": 859, "f2": [389, 685], "f4": 848, "f9065fa7": 156, "f_": [395, 401, 406, 414, 415, 420, 422, 440, 862, 865], "f_r": [730, 770, 814], "f_size": 868, "face": 22, "facilit": 305, "fact": [706, 718, 856, 865], "factor": [322, 401, 423, 455, 726, 857], "factori": [436, 437, 438], "factor\ub97c": 810, "faculti": [155, 187, 193], "fail": [21, 823, 824, 825], "failur": 200, "faithfulli": 186, "fake": 159, "fakenew": 159, "fall": [4, 44, 104, 297, 300, 310, 313, 357, 545, 699], "fallback": [288, 298, 322, 329], "fallback_featur": [288, 298, 322, 329], "fals": [4, 10, 25, 31, 48, 57, 58, 65, 66, 69, 70, 95, 96, 99, 111, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 224, 227, 228, 229, 233, 234, 236, 238, 239, 240, 244, 285, 289, 293, 295, 297, 301, 303, 305, 308, 309, 310, 315, 316, 318, 319, 322, 325, 327, 332, 336, 337, 339, 342, 345, 346, 348, 357, 358, 392, 393, 398, 399, 401, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 419, 421, 422, 423, 424, 426, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 448, 451, 452, 454, 456, 461, 480, 544, 545, 547, 549, 550, 551, 557, 558, 561, 563, 564, 566, 567, 568, 569, 570, 573, 574, 575, 592, 637, 638, 639, 645, 647, 649, 650, 651, 654, 655, 665, 666, 671, 673, 689, 691, 693, 694, 695, 697, 699, 700, 701, 709, 719, 725, 734, 738, 740, 741, 743, 753, 761, 762, 763, 764, 766, 774, 778, 780, 781, 783, 785, 794, 803, 804, 805, 806, 807, 809, 817, 822, 823, 824, 825, 827, 832, 833, 835, 837, 838, 839, 840, 844, 848, 852, 853, 857, 858, 859, 862, 865, 868, 869, 874, 875], "famili": [820, 865, 866, 872], "familiar": [722, 735, 852], "famou": 823, "fanout": [212, 214, 217, 239, 240, 297, 300, 303, 308, 313, 315, 316, 398, 399, 400, 567, 568, 569, 698, 699, 717, 725, 744, 761, 784, 785, 803, 832], "faq": 821, "far": [726, 857, 859, 865], "farthest_point_sampl": 6, "fashion": [697, 832], "fast": [22, 125, 138, 139, 140, 247, 345, 397, 402, 436, 438, 573, 705], "fast_neg": 387, "faster": [148, 168, 210, 224, 345, 392, 421, 424, 436, 438, 563, 573, 726, 824, 838, 839], "favor": 843, "fb15k": [157, 158], "fb15k237": 157, "fb15k237dataset": [695, 741, 781], "fc": [409, 411, 412, 416, 432, 434, 859], "fc_neigh": [725, 728, 729, 768, 769, 812, 813], "fc_pool": [728, 729, 768, 769, 812, 813], "fc_self": [725, 728, 729, 768, 769, 812, 813], "feat": [4, 10, 25, 43, 46, 51, 64, 71, 74, 103, 128, 129, 135, 136, 137, 138, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 168, 169, 171, 173, 174, 175, 176, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 215, 217, 234, 292, 309, 318, 351, 352, 353, 354, 390, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 443, 444, 445, 446, 447, 457, 458, 459, 462, 555, 556, 576, 577, 635, 636, 645, 649, 650, 655, 672, 687, 693, 695, 698, 699, 701, 713, 717, 718, 720, 721, 723, 724, 725, 726, 729, 734, 735, 736, 741, 744, 757, 769, 774, 775, 776, 781, 784, 785, 799, 810, 813, 817, 818, 819, 822, 823, 824, 825, 832, 833, 835, 838, 839, 840, 842, 843, 845, 852, 853, 856, 859, 874, 875], "feat0": 129, "feat1": [125, 128, 247, 655, 699, 785], "feat2": [125, 247], "feat3": 125, "feat_0": [413, 838, 839], "feat_1": [838, 839], "feat_a": 858, "feat_b": 858, "feat_data": 318, "feat_dict": [714, 758, 800], "feat_dim": [453, 689], "feat_drop": [398, 400, 404, 409, 411, 412, 425], "feat_dst": [713, 725, 729, 769, 813], "feat_dst\uc758": 799, "feat_list": 460, "feat_mask": [430, 431], "feat_nam": [286, 296, 401, 452, 665, 669, 673, 709, 753, 794], "feat_nn": 440, "feat_siz": [139, 430, 434, 435, 448, 450, 451, 689], "feat_src": [713, 725, 729, 769, 813], "feat_src\uc640": 799, "featmask": 13, "featur": [0, 4, 5, 9, 13, 19, 20, 26, 27, 28, 30, 34, 35, 43, 44, 46, 47, 51, 53, 54, 56, 64, 70, 71, 73, 74, 75, 77, 91, 92, 93, 94, 95, 96, 100, 103, 104, 108, 113, 114, 115, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 208, 210, 212, 214, 215, 217, 219, 220, 221, 222, 223, 232, 234, 236, 238, 239, 240, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 295, 296, 298, 304, 305, 309, 310, 314, 317, 318, 322, 329, 339, 342, 343, 344, 345, 348, 355, 356, 361, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 456, 457, 458, 462, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 551, 555, 556, 557, 558, 560, 561, 562, 564, 566, 567, 568, 569, 570, 571, 573, 576, 577, 578, 579, 638, 639, 641, 642, 643, 644, 645, 646, 647, 649, 650, 654, 655, 660, 671, 672, 675, 676, 677, 678, 679, 680, 682, 683, 684, 685, 687, 689, 691, 695, 697, 698, 699, 700, 701, 703, 704, 705, 707, 709, 711, 712, 713, 714, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 730, 731, 732, 733, 734, 735, 736, 741, 751, 762, 764, 766, 771, 772, 775, 776, 781, 786, 791, 792, 794, 800, 804, 806, 807, 808, 809, 810, 813, 815, 816, 817, 818, 819, 822, 823, 824, 827, 831, 832, 833, 834, 835, 836, 837, 840, 842, 844, 845, 849, 852, 856, 857, 858, 859, 862, 865, 868, 870, 872, 874, 875], "feature_data": [309, 838, 839], "feature_nam": [159, 220, 221, 222, 223, 296, 305, 786], "feature_stor": [295, 318], "featurefetch": 290, "featurekei": [322, 329], "featureless": 701, "features_to_us": 395, "featurestor": [286, 291, 295], "febd69": 865, "fed": [108, 423, 432, 434], "fedora": 821, "feed": [443, 444, 687, 721, 723, 732, 824, 843, 857, 862, 869], "feed_forward": 869, "feedback": [735, 775, 818], "feedforward": [451, 689], "feel": [21, 827], "fell": 22, "fetch": [7, 21, 208, 220, 221, 222, 223, 290, 295, 303, 308, 721, 724, 725, 831, 835, 859], "fetch_featur": [295, 717, 718, 720, 721, 723, 724, 725, 832, 833, 835, 875], "fetcher": [7, 292, 295, 831], "few": [1, 4, 14, 22, 322, 639, 697, 698, 716, 722, 736, 852, 853, 865, 869], "fewer": [171, 293, 297, 303, 315, 567, 834, 868], "ffn": [443, 444, 869], "ffn1": 824, "ffn2": 824, "fidel": 287, "field": [21, 22, 25, 27, 28, 114, 115, 146, 151, 152, 168, 169, 184, 186, 192, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 309, 310, 401, 555, 644, 649, 650, 693, 695, 700, 712, 837, 838, 839, 858, 862, 869], "field_of_studi": 786, "fifo": 322, "fig": [823, 865, 868], "fig2": 868, "figsiz": [858, 868], "figur": [697, 701, 709, 716, 824, 825, 858, 862, 868, 869], "file": [4, 21, 22, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 206, 209, 229, 233, 234, 235, 236, 238, 291, 292, 309, 350, 571, 690, 692, 695, 698, 700, 701, 702, 709, 732, 736, 739, 779, 786, 821, 822, 823, 825, 830, 832, 835, 837, 840, 842, 843, 844, 845, 847, 848, 851, 852, 853, 855, 856, 857, 858, 859, 861, 862, 864, 867, 871, 873, 877], "file_nam": 693, "file_path": [692, 739, 779], "file_system": [833, 875], "filelock": [832, 833, 835, 838, 839], "filenam": [199, 204, 350, 571], "filesystem": 234, "fill": [27, 28, 93, 113, 114, 115, 117, 453, 574, 616, 617, 618, 630, 655, 865], "fill_data": [29, 117, 655], "film": 134, "filter": [53, 54, 163, 297, 300, 313, 393, 395, 396, 397, 402, 405, 408, 409, 411, 412, 413, 416, 419, 426], "filter_edg": 869, "filter_nod": 869, "final": [6, 22, 132, 133, 144, 170, 238, 315, 316, 395, 423, 452, 456, 695, 712, 713, 716, 730, 734, 736, 756, 797, 821, 838, 839, 857, 858, 859, 862, 869, 874], "final_ft": [712, 756, 797], "final_tmp": [432, 434], "find": [14, 21, 26, 55, 130, 131, 320, 338, 433, 435, 563, 702, 729, 735, 822, 823, 824, 825, 841, 842, 843, 845, 857, 858, 859, 865, 869], "find_edg": [4, 89, 764, 807], "fine": [89, 313, 720, 827, 849, 862], "fingerprint": 852, "finish": [21, 822, 823, 825, 832, 838, 839, 840, 852, 874], "first": [4, 9, 21, 22, 27, 51, 56, 73, 118, 119, 121, 123, 124, 125, 126, 130, 131, 137, 139, 140, 141, 162, 171, 180, 181, 182, 184, 188, 207, 208, 209, 210, 212, 213, 214, 215, 217, 227, 228, 238, 243, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 293, 295, 297, 302, 303, 308, 330, 336, 337, 338, 343, 344, 345, 361, 389, 395, 408, 419, 426, 430, 436, 438, 445, 479, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 560, 564, 565, 566, 569, 573, 620, 630, 639, 644, 645, 655, 689, 694, 698, 699, 701, 709, 719, 720, 722, 728, 729, 734, 736, 821, 822, 823, 827, 833, 834, 838, 839, 841, 843, 844, 845, 848, 852, 853, 856, 857, 858, 859, 862, 865, 869, 870, 872, 874, 875], "first_label": 299, "first_se": 299, "firstli": 824, "fission": 167, "fit": [210, 309, 387, 414, 415, 422, 701, 716, 719, 731, 834, 836, 841, 842], "five": [137, 141, 142, 143, 155, 187, 193, 693, 837, 862], "fix": [197, 198, 205, 212, 214, 215, 357, 417, 545, 567, 717, 869], "flag": [31, 57, 58, 244, 340, 401, 423, 461, 480, 686, 821, 852], "flatten": [565, 726, 810], "flexibl": [20, 639, 693, 831, 869], "flickr": 160, "flickrdataset": 194, "flip": [637, 673], "flist": 73, "float": [4, 9, 10, 22, 95, 96, 117, 120, 138, 139, 140, 142, 143, 161, 162, 163, 178, 183, 189, 190, 198, 205, 239, 240, 242, 243, 297, 303, 308, 315, 316, 341, 347, 349, 361, 387, 393, 394, 395, 398, 399, 400, 401, 402, 404, 409, 410, 411, 412, 413, 414, 415, 417, 421, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 437, 443, 444, 448, 450, 451, 461, 478, 479, 551, 557, 558, 559, 563, 564, 566, 567, 568, 569, 612, 623, 641, 642, 643, 652, 655, 658, 659, 660, 662, 663, 668, 672, 679, 684, 693, 695, 706, 712, 725, 731, 764, 771, 781, 791, 797, 807, 815, 822, 823, 824, 833, 840, 842, 844, 858, 862, 869, 875], "float16": [9, 643, 712, 726, 797, 810], "float16\uc744": 797, "float32": [4, 9, 10, 47, 75, 95, 96, 117, 146, 147, 165, 168, 169, 174, 217, 245, 287, 360, 395, 405, 406, 409, 411, 412, 422, 481, 557, 558, 559, 570, 591, 642, 666, 672, 685, 695, 698, 699, 706, 709, 720, 741, 744, 750, 753, 781, 784, 785, 791, 794, 827, 841, 844], "float64": [126, 248, 589, 641, 693, 838, 839, 845], "floattensor": [447, 565, 566, 567, 568, 570, 713, 757, 799, 858], "flow": [4, 127, 131, 167, 208, 210, 691, 718, 721, 723, 803, 804, 807, 809, 834, 835, 869], "flush": 726, "fly": [398, 399, 400, 865], "fmt": 32, "fn": [5, 9, 20, 21, 34, 73, 91, 92, 93, 94, 100, 113, 121, 430, 431, 433, 462, 676, 677, 678, 679, 680, 681, 682, 683, 684, 712, 713, 714, 722, 726, 729, 732, 733, 735, 756, 757, 758, 765, 769, 772, 773, 775, 797, 798, 799, 800, 808, 810, 813, 816, 818, 842, 843, 856, 857, 858, 862, 868, 869], "fn_": 859, "focu": [848, 849, 862, 865], "focus": [695, 857, 858, 860, 869, 872], "folder": [22, 156, 700, 701, 709, 794, 852], "follow": [0, 3, 4, 5, 6, 9, 20, 21, 22, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 140, 141, 142, 143, 148, 156, 178, 179, 182, 189, 190, 204, 209, 212, 214, 217, 218, 227, 228, 238, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 293, 295, 299, 301, 309, 338, 339, 343, 344, 345, 348, 349, 350, 355, 361, 388, 389, 390, 395, 406, 408, 410, 413, 419, 420, 421, 430, 431, 436, 437, 438, 439, 440, 441, 442, 446, 447, 457, 458, 461, 462, 478, 480, 481, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 549, 550, 551, 559, 561, 565, 566, 567, 568, 569, 573, 575, 576, 577, 578, 579, 581, 617, 618, 638, 639, 640, 644, 645, 646, 651, 654, 655, 660, 666, 670, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 706, 708, 709, 711, 713, 716, 717, 718, 719, 720, 721, 722, 723, 726, 728, 731, 732, 733, 734, 735, 736, 761, 762, 771, 803, 804, 815, 821, 824, 825, 827, 831, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 845, 848, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "follow_dst": [731, 771, 815], "follow_edg": 838, "follow_edges_path": 838, "follow_src": [731, 771, 815], "followed_bi": 718, "follows\uc640": 794, "foo": 70, "footnot": [848, 849], "footprint": [701, 713], "foral": [400, 416, 421, 425, 504, 729, 769, 813, 842], "forc": [230, 237, 309, 848, 865, 869], "force_even": [230, 237, 697, 743, 783, 853], "force_preprocess": 309, "force_reload": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 691, 695, 738, 741, 778, 781], "forcibli": [401, 423], "forg": 848, "fork": [8, 21, 848], "form": [20, 21, 22, 26, 51, 61, 88, 130, 131, 173, 208, 210, 244, 285, 297, 338, 339, 343, 344, 356, 387, 391, 410, 432, 433, 434, 435, 463, 480, 544, 552, 553, 562, 567, 568, 637, 647, 653, 673, 699, 701, 708, 734, 752, 764, 793, 807, 835, 842, 843, 844, 857, 858, 859, 868, 870, 872], "formal": [20, 72, 243, 479, 653, 701, 823, 857], "format": [0, 4, 12, 13, 30, 31, 32, 34, 35, 41, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 118, 119, 126, 131, 229, 238, 239, 244, 245, 247, 248, 285, 286, 295, 296, 297, 305, 309, 310, 318, 321, 326, 331, 337, 338, 339, 343, 344, 480, 482, 544, 555, 557, 559, 571, 576, 578, 579, 608, 617, 618, 630, 645, 692, 693, 695, 699, 708, 719, 726, 728, 729, 739, 741, 768, 769, 779, 781, 785, 786, 810, 812, 813, 827, 835, 837, 838, 839, 842, 843, 852, 853, 856, 857, 859, 862, 865, 869, 874], "former": [361, 430, 431, 432, 433, 434, 435, 563, 698, 718], "formul": [408, 419, 612, 623, 730, 732, 834, 840, 843, 857, 858, 870, 872], "formula": [361, 393, 414, 415, 418, 422, 712, 729], "formular": 671, "forth": [22, 645], "forum": 21, "forward": [4, 70, 228, 310, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 713, 718, 720, 721, 722, 723, 725, 726, 727, 730, 732, 733, 734, 735, 736, 762, 763, 764, 765, 766, 769, 770, 772, 774, 775, 776, 804, 806, 807, 808, 809, 810, 811, 814, 816, 817, 818, 819, 822, 823, 824, 825, 827, 832, 833, 835, 840, 842, 843, 844, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "forward_infer": 865, "forward_train": 865, "found": [26, 48, 70, 320, 436, 438, 554, 566, 669, 686, 693, 695, 712, 730, 822, 827, 828, 832, 833, 835, 838, 839, 842, 856, 857, 869, 874, 875], "four": [287, 506, 573, 672, 696, 699, 700, 708, 731, 837, 852, 858, 859], "fourth": 565, "fp16": [726, 810], "fp16\ub97c": 810, "fp16\uc744": 810, "fp_": 859, "frac": [120, 178, 179, 242, 243, 303, 349, 361, 395, 396, 401, 413, 416, 419, 421, 426, 439, 455, 456, 478, 479, 569, 576, 577, 671, 734, 774, 817, 822, 823, 824, 827, 856, 857, 858, 859, 865, 868, 869], "frac_list": [207, 874], "fraction": [207, 413], "fragment": 849, "frame": [9, 823, 865, 868], "framework": [4, 7, 9, 21, 23, 42, 59, 62, 63, 108, 125, 126, 131, 186, 233, 244, 245, 247, 248, 285, 338, 339, 343, 344, 345, 436, 438, 443, 444, 480, 481, 544, 552, 553, 567, 568, 569, 570, 573, 698, 705, 707, 709, 727, 792, 820, 828, 831, 838, 839, 842, 852, 862, 865, 869], "fraud": [145, 161, 162, 163], "frauddataset": [161, 163], "fraudul": [145, 161, 162], "free": [21, 178, 179, 820, 827, 834, 837, 859], "freebas": 158, "frequenc": 401, "frequent": [22, 135, 136, 137, 182, 303, 308, 701], "friendship": [194, 704, 734], "from": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 22, 26, 27, 32, 45, 48, 68, 73, 79, 82, 89, 93, 94, 95, 96, 105, 112, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 227, 228, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 285, 287, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 328, 333, 336, 337, 338, 339, 342, 343, 344, 345, 347, 349, 350, 355, 356, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 478, 479, 480, 481, 544, 551, 552, 553, 554, 558, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 578, 579, 614, 616, 617, 618, 630, 634, 638, 639, 644, 646, 647, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 678, 679, 680, 687, 690, 691, 692, 694, 695, 696, 697, 698, 699, 700, 701, 703, 707, 708, 712, 713, 714, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 734, 735, 736, 738, 739, 740, 741, 742, 768, 769, 774, 778, 779, 780, 781, 782, 786, 790, 792, 793, 804, 810, 812, 813, 816, 817, 818, 822, 823, 824, 825, 827, 830, 831, 832, 833, 834, 835, 838, 839, 840, 841, 842, 843, 844, 847, 848, 851, 852, 853, 855, 857, 859, 861, 862, 864, 865, 867, 868, 869, 871, 873, 874, 875, 877], "from_coo": [822, 827], "from_csc": [725, 827], "from_csr": 827, "from_cudf_edgelist": 246, "from_networkx": [248, 285, 705, 749, 790], "from_numpi": [317, 845, 858], "from_scipi": [247, 285, 705, 749, 790], "fromnumer": [856, 859], "fromt": [146, 169], "front": 729, "frontier": [4, 91, 92, 123, 124, 227, 228, 546, 547, 548, 549, 550, 562, 651, 698, 699, 744, 761, 784, 785, 803], "frontier2": [761, 803], "fsspec": [832, 833, 835, 838, 839], "fstab": 852, "ft": [712, 733, 756, 773, 797, 798], "full": [4, 26, 153, 191, 293, 301, 309, 716, 720, 722, 723, 725, 732, 736, 809, 822, 823, 824, 832, 833, 836, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 858, 859, 862, 865, 868, 869, 874, 875], "fulli": [4, 21, 290, 295, 303, 308, 336, 337, 697, 729, 827, 828, 856], "func": [34, 35, 53, 54, 359, 685, 712, 714, 758, 800, 862, 869], "funcanim": [823, 865, 868], "function": [0, 1, 4, 13, 21, 26, 27, 28, 34, 35, 53, 54, 64, 70, 71, 73, 89, 91, 92, 93, 94, 95, 96, 100, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 130, 146, 156, 168, 169, 183, 197, 211, 230, 233, 234, 237, 239, 241, 243, 244, 245, 248, 288, 289, 292, 293, 294, 295, 297, 298, 300, 301, 303, 305, 306, 307, 308, 310, 313, 315, 316, 317, 319, 320, 339, 342, 345, 346, 347, 348, 356, 357, 359, 388, 389, 390, 393, 397, 398, 401, 402, 403, 404, 405, 408, 409, 411, 412, 413, 414, 416, 417, 419, 420, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 450, 451, 455, 456, 459, 462, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 555, 556, 557, 558, 559, 560, 561, 563, 566, 567, 568, 569, 571, 573, 578, 579, 581, 585, 586, 620, 637, 638, 640, 644, 645, 646, 647, 648, 649, 650, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 691, 692, 695, 696, 698, 700, 701, 705, 711, 713, 714, 717, 718, 721, 722, 723, 726, 727, 730, 732, 733, 734, 735, 736, 756, 757, 758, 764, 765, 766, 769, 772, 773, 774, 776, 796, 797, 798, 799, 800, 807, 808, 809, 810, 813, 814, 816, 817, 819, 822, 823, 824, 825, 828, 832, 834, 835, 840, 843, 844, 848, 852, 853, 856, 857, 858, 859, 860, 862, 865, 872, 875], "functional_datapip": [293, 300, 301, 313, 717, 721, 725], "functool": [718, 832, 857, 865, 869], "fundament": [857, 865], "further": [45, 66, 68, 73, 79, 82, 91, 92, 93, 94, 100, 105, 113, 210, 293, 301, 701, 713, 730, 732, 821, 827, 828, 859, 869], "furthermor": [125, 130, 700, 707, 857], "fuse": [9, 214, 505, 509, 510, 511, 512, 515, 516, 517, 518, 523, 524, 525, 526, 529, 530, 531, 532], "fused_csc_sampling_graph": [229, 297, 300, 303, 308, 319], "fusedcscsamplinggraph": [229, 300, 303, 308, 309, 315, 316, 319, 327, 328, 333, 717, 725, 838, 839], "futur": [6, 21, 183, 229, 288, 292, 294, 297, 298, 310, 317, 336, 337, 693, 726, 865, 869], "fwtype": 562, "g": [0, 4, 5, 6, 9, 10, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 231, 232, 238, 239, 240, 241, 244, 245, 246, 247, 248, 285, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 355, 356, 357, 358, 361, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 447, 452, 453, 456, 457, 458, 459, 461, 462, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 552, 553, 554, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 573, 574, 575, 578, 579, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 693, 694, 695, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 729, 730, 732, 734, 735, 740, 741, 743, 744, 745, 748, 750, 751, 752, 753, 757, 758, 759, 761, 762, 763, 764, 765, 766, 769, 770, 772, 774, 775, 780, 781, 783, 784, 785, 786, 789, 791, 792, 793, 794, 799, 800, 801, 803, 804, 805, 806, 807, 808, 809, 810, 813, 814, 816, 817, 818, 821, 822, 823, 824, 827, 828, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874], "g1": [36, 37, 38, 89, 101, 102, 108, 122, 128, 129, 350, 389, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 454, 462, 555, 556, 564, 566, 571, 575, 576, 577, 649, 650, 665, 685, 734, 774, 817, 858], "g1_node_feat": [439, 440, 441, 442, 443, 444, 445, 446, 447], "g2": [36, 37, 38, 95, 96, 101, 102, 122, 128, 129, 130, 350, 389, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 454, 462, 555, 556, 565, 566, 571, 575, 576, 577, 649, 650, 665, 685, 734, 774, 817], "g2_node_feat": [439, 440, 441, 442, 443, 444, 445, 446, 447], "g3": [462, 665, 685], "g32": [708, 752, 793], "g32_2": [708, 752, 793], "g64": [708, 752, 793], "g64_2": [708, 752, 793], "g_": [4, 10, 673], "g_2": 342, "g_atom": 179, "g_batch": 183, "g_edg": [567, 568], "g_int": 64, "g_l": 858, "g_layer": 858, "g_list": 571, "g_long": 71, "g_m": 865, "g_nodes_explain": 435, "g_r": [730, 770, 814], "g_sampl": 4, "g_sort": [569, 578, 579], "g_t": 865, "gai": [856, 858], "gain": [725, 728, 768, 812, 828, 856, 857, 858, 859, 862, 865, 868, 869], "galleri": [21, 830, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 859, 862, 865, 868, 869, 872, 874, 875, 876], "game": [4, 27, 28, 30, 31, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 171, 212, 214, 217, 244, 245, 338, 339, 343, 344, 361, 389, 431, 432, 433, 480, 481, 544, 552, 557, 558, 559, 561, 644, 645, 646, 647, 654, 655, 660, 670, 671, 675, 685, 709, 753, 761, 794, 803], "gamma": [824, 858], "gamma_": [395, 455, 858], "gamma_k": 395, "gan": [856, 869], "gap": [178, 179, 440, 859], "gat": [361, 406, 726, 733, 798, 810, 827, 828, 860, 872], "gatconv": [398, 409, 713, 726, 757, 799, 810, 859], "gate": [417, 418, 440, 865], "gate_nn": 440, "gatedgcn": 417, "gatedgraphconv": 440, "gather": [9, 212, 213, 214, 297, 303, 308, 315, 316, 503, 567, 723, 736, 761, 803, 835, 842, 858], "gathermm": 13, "gatlay": 859, "gatv2": 412, "gat\ub97c": 810, "gaussian": [14, 416, 455], "gb": [233, 288, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 317, 318, 319, 320, 321, 337, 701, 717, 718, 720, 721, 723, 724, 725, 828, 832, 833, 835, 838, 839, 875], "gb_warn": [838, 839], "gbwarn": [838, 839], "gcc": [700, 786, 821], "gclass": [430, 434, 435, 844], "gcmc": [762, 804], "gcmclayer": [732, 772, 816], "gcn": [134, 149, 155, 185, 187, 193, 209, 404, 405, 410, 419, 425, 447, 478, 672, 718, 720, 723, 725, 726, 728, 729, 762, 764, 768, 769, 798, 804, 807, 812, 813, 821, 828, 844, 858, 860, 862, 872], "gcn_model": 822, "gcn_msg": 856, "gcn_reduc": 856, "gcnii": 413, "gcnlayer": [822, 856], "gcnnorm": 13, "gcn\uc744": [806, 809], "gdata_pars": 148, "gdc": 13, "gdelt": [25, 164], "gdeltdataset": [696, 742, 782], "ge": 438, "gender": 841, "gene": [567, 568, 709, 753, 794, 859], "gener": [0, 1, 3, 4, 5, 7, 9, 10, 20, 34, 73, 91, 92, 93, 94, 100, 113, 117, 123, 124, 128, 129, 138, 139, 140, 141, 142, 143, 172, 174, 183, 189, 190, 207, 210, 211, 215, 218, 224, 225, 227, 288, 291, 292, 293, 294, 297, 298, 301, 302, 307, 317, 319, 336, 337, 345, 389, 395, 398, 399, 400, 406, 409, 430, 431, 432, 434, 436, 438, 452, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 547, 548, 549, 550, 552, 553, 555, 556, 560, 562, 563, 564, 566, 567, 573, 637, 651, 655, 673, 689, 697, 698, 700, 701, 705, 708, 711, 712, 716, 718, 721, 722, 723, 724, 726, 728, 731, 732, 815, 824, 830, 831, 834, 835, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 859, 862, 867, 868, 869, 874, 875, 876], "generaliz": 859, "generic_join": 293, "gene\u76f8\u4e92\u4f5c\u7528\u8fb9": 753, "gene\u8282\u70b9": 753, "gentl": 856, "geom": [134, 149, 155, 185, 187, 193, 478], "geometr": [134, 149, 155, 185, 186, 187, 193, 416, 455, 478, 828], "geomgcndataset": [149, 155, 185, 187, 193], "get": [0, 1, 4, 22, 26, 30, 31, 42, 43, 44, 46, 48, 51, 56, 68, 70, 74, 77, 103, 104, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 209, 210, 230, 237, 243, 245, 286, 288, 290, 292, 293, 294, 296, 297, 298, 305, 317, 318, 340, 345, 388, 391, 426, 436, 438, 447, 479, 481, 563, 567, 569, 573, 575, 578, 579, 647, 685, 689, 691, 693, 694, 695, 697, 699, 701, 706, 709, 712, 718, 720, 721, 723, 730, 731, 734, 735, 770, 778, 780, 781, 791, 794, 803, 814, 821, 822, 823, 827, 832, 835, 849, 859, 865, 869, 874], "get_aggregate_fn": [730, 770, 814], "get_attent": [405, 406, 409, 411, 412, 440], "get_cmap": 858, "get_dataload": 874, "get_dataset": 869, "get_dist": [437, 551], "get_edge_partition_polici": 4, "get_edge_split": [694, 740, 780], "get_etype_id": [4, 645, 786], "get_group": 845, "get_idx_split": [694, 740, 780, 852], "get_log_prob": 865, "get_node_partition_polici": [4, 699, 785], "get_ntype_id": [4, 645, 786], "get_o": 869, "get_part_s": 4, "get_partition_book": [4, 697, 699, 743, 783, 785, 853], "get_seq_by_id": 869, "get_siz": 4, "ggnn": 440, "ghz": 179, "giant": 130, "gid": 575, "gilmer": [834, 842], "gin": [734, 774, 817, 844, 874], "ginconv": [734, 774, 817, 874], "gindataset": [430, 434, 435, 695, 734, 741, 774, 781, 817, 844, 874], "girvan": 167, "git": [700, 786, 821], "github": [135, 136, 151, 152, 153, 159, 162, 165, 168, 186, 210, 295, 303, 308, 336, 337, 686, 700, 754, 786, 820, 821, 848, 857, 858, 868, 869], "githubusercont": 844, "git\uc5d0\uc11c": 786, "give": [4, 11, 27, 114, 207, 243, 342, 479, 560, 574, 639, 684, 705, 706, 721, 791, 822, 832, 844], "given": [4, 5, 6, 9, 14, 22, 30, 31, 32, 35, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 79, 81, 82, 87, 88, 93, 109, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 148, 164, 183, 184, 197, 198, 200, 205, 208, 209, 211, 212, 214, 217, 218, 227, 228, 230, 231, 232, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 285, 288, 289, 293, 297, 298, 300, 303, 305, 308, 313, 315, 316, 320, 321, 326, 331, 336, 337, 338, 339, 346, 348, 350, 356, 393, 396, 398, 399, 400, 402, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 419, 421, 422, 425, 432, 434, 437, 456, 462, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 553, 555, 556, 560, 562, 563, 566, 567, 568, 569, 570, 574, 578, 579, 598, 601, 602, 603, 605, 634, 639, 644, 647, 651, 653, 655, 662, 663, 665, 666, 668, 671, 685, 693, 698, 701, 707, 708, 723, 732, 734, 735, 736, 793, 827, 831, 840, 843, 844, 845, 857, 859, 862, 865, 868, 869], "gklib": [700, 786], "gklib\uc744": 786, "glabel": 571, "glist": 350, "gloabl": 4, "glob": [380, 381, 382, 383, 384, 385, 439, 440, 441, 442, 443, 444, 445, 446, 447, 472, 473, 474, 475, 476, 477], "global": [4, 13, 128, 129, 164, 234, 235, 238, 297, 391, 440, 450, 567, 637, 673, 821, 852], "global_test_eid": 853, "global_valid_eid": 853, "gloo": [697, 698, 743, 744, 783, 784, 848, 852, 853, 874], "glorot": [404, 411, 412, 416, 418, 419, 422, 425, 427], "glove": [184, 862], "glove_emb": 184, "glove_embed_fil": 184, "gluon": [199, 200, 727, 811], "gluoncv": 821, "gluonnlp": 821, "gluon\u7684nn\u5757": 767, "gm_": [4, 10], "gml": [709, 794], "gnn": [4, 7, 12, 21, 135, 136, 137, 146, 151, 152, 153, 159, 162, 165, 169, 171, 180, 182, 188, 210, 211, 212, 213, 214, 217, 218, 287, 295, 297, 303, 308, 310, 315, 336, 337, 361, 420, 430, 431, 432, 433, 434, 435, 460, 462, 567, 710, 716, 720, 724, 731, 732, 733, 735, 736, 754, 765, 771, 776, 795, 798, 802, 803, 806, 810, 815, 816, 818, 819, 820, 828, 830, 832, 833, 834, 835, 845, 846, 847, 849, 856, 858, 859, 874, 875], "gnn_modul": 420, "gnnbenchmarkdataset": [135, 136, 151, 152, 153], "gnnexplain": [142, 143, 189, 190, 431], "gnnlayer": 420, "gnn\uc5d0": 809, "gnn\uc740": 802, "gnn\uc744": [803, 806, 816, 818], "gnu": [821, 849], "go": [14, 21, 22, 566, 820, 821, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "goal": 188, "goe": [4, 20, 21, 708, 718, 842, 843], "gone": 844, "good": [135, 136, 162, 843, 852, 859], "googl": [21, 826, 869], "gossipcop": 159, "goto": 156, "gp_": [4, 10], "gpb": [4, 238, 699, 785], "gpt": 869, "gpu": [6, 9, 10, 14, 21, 89, 108, 110, 112, 118, 119, 125, 126, 210, 247, 248, 285, 295, 298, 303, 308, 317, 329, 336, 337, 338, 345, 348, 356, 437, 459, 551, 560, 562, 566, 567, 568, 573, 587, 639, 640, 703, 712, 716, 720, 723, 724, 726, 731, 792, 797, 802, 806, 810, 815, 820, 821, 823, 824, 828, 830, 831, 834, 835, 852, 862, 869, 877], "gpu_0": [10, 459], "gpu_cach": 210, "gpu_cache_threshold": [303, 308], "gpu_cached_featur": 298, "gpucachedfeatur": 329, "gpufeaturecach": 298, "gpu\u56fe\u53ea\u63a5\u53d7gpu\u4e0a\u7684\u7279\u5f81\u6570\u636e": 751, "gpu\ub85c": [792, 804, 809], "gpu\ub97c": 806, "gpu\uc5d0": [792, 802, 805, 809], "gpu\uc5d0\uc11c": [788, 805], "graclu": 6, "grad": [9, 118, 119], "grad_fn": [9, 118, 393, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 408, 410, 411, 412, 413, 414, 416, 418, 419, 422, 424, 425, 426, 427, 440, 442, 443, 444, 447], "gradient": [4, 9, 10, 387, 391, 401, 420, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 697, 716, 726, 802, 810, 844, 852, 874], "gradscal": [726, 810], "gradual": [865, 868, 869], "graident\ub4e4\uc740": 810, "grain": [313, 827, 849, 862], "granular": [164, 166], "grapbolt": 725, "graph": [3, 6, 9, 11, 13, 14, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 287, 291, 295, 296, 297, 299, 300, 303, 304, 305, 308, 309, 310, 312, 313, 314, 315, 316, 319, 320, 321, 328, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 459, 460, 461, 462, 463, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 689, 691, 694, 696, 697, 702, 706, 707, 710, 711, 712, 713, 719, 724, 725, 726, 728, 730, 733, 740, 741, 742, 745, 746, 749, 750, 751, 752, 753, 756, 761, 769, 771, 772, 773, 774, 775, 776, 778, 780, 781, 782, 785, 786, 787, 788, 789, 790, 791, 792, 793, 797, 798, 800, 802, 803, 804, 805, 807, 809, 810, 814, 815, 816, 817, 818, 819, 821, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 842, 846, 847, 848, 861, 862, 866, 867, 871, 875, 876, 877], "graph0": 693, "graph1": 693, "graph_data": [693, 709, 753, 794], "graph_degre": 183, "graph_edg": 845, "graph_emb": 865, "graph_embed_func": 865, "graph_feat": [128, 129, 434, 435], "graph_format": [229, 238], "graph_hidden_s": 865, "graph_id": [693, 845], "graph_id_field": 693, "graph_index": 21, "graph_label": 571, "graph_list": 350, "graph_nam": [4, 238, 697, 698, 699, 700, 701, 743, 744, 745, 783, 784, 785, 786, 852, 853], "graph_op": 865, "graph_path": [696, 742, 782], "graph_pool": 869, "graph_prop": 865, "graph_prop_func": 865, "graph_properti": 845, "graph_sampl": [4, 210], "graph_train": 853, "graphbolt": [229, 233, 234, 238, 239, 240, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 717, 718, 719, 721, 723, 724, 725, 832, 833, 835, 836, 838, 839, 849, 875], "graphbolt_test": 309, "graphconv": [389, 394, 403, 410, 413, 420, 426, 427, 432, 434, 435, 718, 723, 726, 727, 729, 734, 736, 762, 763, 764, 766, 769, 774, 776, 804, 806, 807, 809, 811, 813, 817, 819, 840, 844, 856], "graphdataload": [430, 434, 435, 694, 695, 734, 740, 741, 774, 780, 781, 817, 824, 844, 874], "graphdataloader\uc758": 817, "graphemb": 865, "graphgp": 452, "graphic": 305, "graphmetadata": 297, "graphnet": 828, "graphorm": [451, 687], "graphormerlay": 689, "graphpartitionbook": [4, 230, 234, 235, 237, 239, 699], "graphpool": 869, "graphpr": 138, "graphprop": 865, "graphproppr": [138, 694, 740, 780, 824], "graphsag": [175, 181, 400, 404, 425, 697, 719, 720, 723, 725, 729, 736, 746, 763, 776, 787, 806, 807, 809, 813, 819, 832, 833, 835, 842, 852, 853, 859, 875], "graphsage\u4e2dgcn\u805a\u5408\u4e0d\u9700\u8981fc_self": 769, "graphsage\u7684\u5b9e\u73b0": 766, "graphsage\ub97c": 783, "graphsage\uc5d0\uc11c": 819, "graphsaint": [160, 194, 215], "graphtransform": 689, "graphviz_layout": 862, "graphwis": 444, "graph\uc5d0": 803, "graph\uc758": [804, 809, 819], "great": 858, "greater": [131, 197, 285, 292, 317, 336, 337, 338, 567, 568, 569, 849, 862], "greatli": [860, 872], "greedi": 6, "green": 834, "grid": [171, 172, 190], "grid_siz": 190, "groud": 819, "ground": [150, 154, 167, 176, 736, 819, 833, 840, 853, 858, 865, 875], "group": [4, 20, 137, 166, 167, 182, 293, 359, 360, 420, 459, 687, 689, 697, 709, 721, 827, 838, 839, 842, 845, 858], "groupbi": 845, "grouplen": 173, "growth": 857, "grpah": 674, "gru": [418, 865], "grucel": 865, "gsddmm": 13, "gsddmmbackward": 9, "gspmm": 13, "gspmmbackward": [9, 412], "gt": [448, 449, 450, 451, 452, 453, 454, 455, 688, 824, 832, 833, 835, 838, 839], "gtlayer": 824, "gtmodel": 824, "guarante": [4, 101, 102, 224, 230, 237, 303, 336, 337, 563, 874], "guid": [1, 3, 4, 11, 21, 209, 210, 212, 213, 214, 215, 218, 220, 221, 222, 223, 639, 695, 700, 719, 736, 745, 795, 820, 852, 862], "guide_cn": [754, 771], "guidelin": 820, "guo": [862, 869], "gz": [692, 739, 779], "gz_file_path": [692, 739, 779], "gz\u6216": 739, "gz\u6587\u4ef6": 739, "h": [4, 5, 22, 25, 27, 28, 30, 34, 35, 43, 44, 46, 51, 53, 54, 56, 70, 73, 74, 77, 91, 92, 93, 94, 100, 103, 104, 108, 113, 114, 115, 116, 121, 128, 129, 145, 177, 178, 179, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 355, 393, 394, 397, 398, 406, 407, 409, 411, 412, 413, 421, 426, 427, 430, 431, 432, 433, 434, 435, 453, 454, 455, 456, 457, 458, 462, 479, 481, 555, 556, 560, 561, 576, 577, 645, 646, 647, 649, 650, 658, 659, 660, 666, 671, 672, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 707, 712, 714, 716, 722, 726, 729, 732, 734, 735, 736, 751, 756, 758, 760, 761, 763, 765, 769, 772, 774, 775, 776, 792, 797, 800, 802, 803, 806, 808, 810, 813, 816, 817, 818, 819, 821, 824, 825, 827, 834, 835, 840, 842, 843, 844, 853, 856, 857, 859, 862, 865, 869], "h1": [5, 47, 75, 389, 646, 667, 824], "h2": [5, 47, 70, 75, 389, 646, 667, 824], "h2h": 857, "h2o": 857, "h_": [120, 395, 400, 406, 411, 412, 417, 418, 422, 425, 431, 433, 729, 730, 769, 770, 813, 814, 825, 842, 856, 859, 862], "h_atom": 179, "h_cat": 862, "h_dict": [736, 776, 819], "h_dim": 857, "h_dst": [456, 722, 763, 765, 806, 808], "h_e": [401, 407, 423], "h_feat": [835, 840, 842, 843, 844], "h_g": [734, 774, 817], "h_head": [457, 458], "h_i": [393, 396, 397, 401, 402, 403, 404, 405, 407, 408, 411, 412, 414, 415, 416, 418, 419, 422, 423, 424, 425, 456, 460, 827, 857, 859, 869], "h_item": [736, 776, 819], "h_j": [393, 396, 401, 403, 405, 407, 408, 411, 412, 413, 414, 415, 419, 422, 423, 424, 425, 456, 857, 862], "h_jl": 862, "h_max": 5, "h_n": [401, 407, 423, 842], "h_neg_dst": 853, "h_neg_src": 853, "h_neigh": [722, 729, 765, 769, 808, 813], "h_new": 5, "h_pos_dst": 853, "h_pos_src": 853, "h_self": [729, 769, 813], "h_size": 862, "h_src": [456, 722, 765, 808], "h_sub_g": [709, 753, 794], "h_sum": [5, 128, 129], "h_t": 869, "h_tail": [457, 458], "h_total": 842, "h_u": [732, 772, 816, 834, 842, 843, 865], "h_user": [736, 776, 819], "h_v": [728, 732, 734, 768, 772, 774, 812, 816, 817, 834, 842, 843, 856], "h_x": 407, "ha": [4, 5, 9, 14, 22, 27, 28, 30, 31, 32, 34, 36, 37, 47, 48, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 107, 113, 114, 115, 117, 118, 119, 120, 122, 131, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 160, 162, 166, 167, 168, 170, 173, 175, 176, 184, 191, 192, 194, 218, 219, 228, 238, 244, 285, 289, 290, 293, 310, 330, 336, 337, 338, 339, 343, 344, 345, 348, 355, 357, 389, 410, 419, 436, 437, 438, 455, 459, 480, 482, 544, 551, 555, 557, 559, 560, 563, 565, 566, 569, 573, 576, 577, 578, 579, 612, 639, 644, 649, 650, 691, 693, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 709, 712, 718, 719, 720, 722, 726, 727, 729, 731, 732, 734, 781, 789, 821, 824, 825, 827, 828, 837, 838, 841, 842, 843, 844, 852, 853, 856, 857, 858, 859, 862, 865, 866, 869, 870, 872], "hadamard": 824, "half": [9, 141, 643, 712, 713, 797, 869], "halo": [234, 238, 357, 545, 700, 701, 786], "halo_hop": 238, "halt": [566, 869], "halt_and_accum": 869, "halt_dec": 869, "halt_enc": 869, "haltingunit": 869, "hamilton": 842, "hand": 701, "handcraft": [161, 163], "handl": [210, 291, 393, 405, 406, 408, 409, 411, 412, 413, 416, 419, 426, 505, 692, 693, 700, 701, 703, 705, 708, 712, 729, 730, 836, 841, 844, 859, 865, 869], "hang": [293, 322, 875], "hao": 859, "happen": [210, 224, 563, 858], "happend": 164, "har": [860, 872], "hard": [21, 243, 479, 865], "hardwar": [724, 849], "harm": [303, 315, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426], "harvard": 869, "has_cach": [156, 691, 696, 738, 742, 778, 782], "has_dupl": 827, "has_edges_between": [567, 568, 865], "has_nontree_edg": [228, 547], "has_reverse_edg": [228, 547], "has_top": 786, "hasattr": 139, "hash": [156, 199, 200, 241, 692, 739, 779], "hash_kei": 156, "hat": [413, 417, 430, 431, 843, 856, 858, 868], "have": [4, 6, 9, 10, 14, 21, 22, 26, 34, 35, 48, 53, 55, 56, 57, 58, 60, 61, 68, 87, 88, 93, 94, 100, 115, 116, 117, 118, 119, 122, 125, 126, 130, 131, 161, 165, 171, 174, 180, 186, 188, 197, 205, 210, 212, 214, 217, 218, 224, 225, 228, 232, 233, 239, 240, 244, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 289, 291, 293, 294, 296, 297, 298, 303, 308, 310, 317, 320, 330, 338, 339, 342, 343, 344, 347, 348, 356, 357, 361, 389, 391, 392, 408, 421, 424, 426, 432, 433, 434, 435, 439, 441, 445, 446, 460, 480, 544, 545, 561, 562, 564, 566, 567, 568, 569, 570, 578, 579, 598, 601, 602, 603, 620, 630, 634, 638, 639, 644, 645, 647, 693, 695, 697, 698, 699, 700, 701, 702, 704, 706, 709, 712, 714, 716, 718, 720, 722, 723, 725, 726, 730, 732, 734, 736, 791, 794, 803, 824, 827, 832, 833, 834, 835, 840, 841, 842, 843, 844, 845, 849, 852, 853, 857, 858, 859, 862, 863, 865, 869, 872, 874, 875], "hdf": [350, 571, 705], "hdfs\u4e2d\u52a0\u8f7d\u6216\u5411s3": 749, "hdfs\u4fdd\u5b58\u56fe": 749, "hdfs\uc5d0": 790, "he": [95, 96, 117, 557, 558, 559, 561, 647, 655, 709, 712, 753, 756, 794, 797, 862, 865], "head": [9, 398, 405, 406, 409, 411, 412, 421, 443, 444, 448, 450, 451, 452, 453, 454, 455, 457, 458, 689, 726, 810, 845, 860, 870, 872], "head_dim": 824, "head_out": 859, "head_siz": 421, "header": [693, 837, 838, 839], "head\uc758": 810, "heat": [178, 179, 663], "heatkernel": 13, "heavi": 195, "heavili": 712, "height": [189, 190], "height_in": 868, "height_in_i": 868, "height_out": 868, "height_out_i": 868, "held": 164, "help": [161, 293, 320, 645, 708, 709, 734, 836, 840, 858], "henc": [116, 126, 130, 135, 136, 151, 152, 153, 192, 248, 342, 348, 561, 638, 647, 705, 709, 794], "here": [5, 9, 21, 31, 145, 151, 152, 164, 166, 175, 177, 178, 179, 183, 184, 238, 313, 389, 686, 693, 694, 695, 699, 700, 713, 714, 718, 723, 726, 728, 731, 732, 735, 781, 786, 822, 823, 824, 825, 828, 832, 834, 841, 842, 843, 844, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869], "hereaft": 869, "het": 287, "hetergen": [244, 480], "hetero": [303, 308, 315, 700, 857], "hetero_82d021d8": 857, "hetero_block": [761, 803], "hetero_fronti": [761, 803], "hetero_graph": [731, 732, 735, 736, 771, 772, 775, 776, 815, 816, 818, 819], "heteroclassifi": [734, 774, 817], "heterodotproductpredictor": [732, 735, 772, 775, 816, 818], "heterogen": [1, 4, 7, 13, 26, 27, 28, 31, 34, 35, 36, 37, 38, 42, 47, 51, 53, 54, 65, 66, 72, 75, 77, 79, 82, 93, 94, 95, 96, 100, 101, 102, 108, 113, 114, 115, 116, 117, 140, 212, 214, 217, 218, 219, 220, 221, 222, 223, 238, 240, 244, 287, 293, 297, 301, 305, 310, 312, 320, 321, 336, 337, 338, 339, 343, 344, 388, 389, 390, 391, 393, 405, 408, 409, 411, 412, 413, 416, 419, 421, 426, 431, 432, 433, 480, 544, 557, 558, 559, 567, 578, 579, 638, 639, 644, 645, 646, 647, 653, 654, 655, 660, 661, 670, 671, 674, 675, 697, 700, 701, 703, 704, 711, 727, 729, 783, 788, 789, 800, 805, 811, 813, 836, 837, 862], "heterogenen": [4, 113, 561], "heterogeneous_graph_nc_lp": 838, "heterograph": [1, 4, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 122, 125, 126, 130, 218, 244, 245, 339, 343, 344, 356, 361, 389, 391, 405, 406, 408, 409, 411, 412, 416, 419, 422, 425, 431, 432, 433, 480, 481, 544, 557, 558, 559, 561, 562, 565, 566, 567, 568, 638, 639, 644, 645, 646, 647, 653, 654, 655, 660, 670, 671, 675, 685, 693, 714, 719, 730, 731, 735, 736, 753, 761, 771, 775, 776, 794, 803, 814, 815, 818, 819, 857, 865, 868], "heterographconv": [432, 718, 721, 723, 734, 736, 762, 764, 766, 770, 774, 776, 804, 807, 809, 817, 819], "heterogrph": [91, 92], "heteroitemset": [291, 293, 301, 304, 309, 314, 717, 718, 723, 838], "heteromlppredictor": [732, 772, 816], "heterophili": [120, 137, 171, 180, 182, 188, 243, 479], "heterophilousgraphdataset": [137, 171, 180, 182, 188], "hexadecim": [199, 200], "hg": [51, 55, 60, 61, 77, 87, 88, 90, 101, 102, 107, 361, 431, 432, 433, 434, 644, 645, 709, 717, 734, 753, 774, 786, 794, 817], "hg1": [36, 37, 38, 122, 685], "hg2": [36, 37, 38, 122, 685], "hg_2": 644, "hhhiddleston": 754, "hid_feat": [432, 734, 736, 774, 776, 817, 819], "hid_siz": [725, 726], "hidden": [168, 396, 407, 428, 443, 444, 451, 689, 716, 728, 732, 736, 802, 812, 816, 857, 858, 859, 862, 869], "hidden_d": 428, "hidden_dim": [432, 435, 734, 774, 817, 825, 859], "hidden_feat": [396, 718, 723, 762, 764, 766, 804, 807, 809], "hidden_featur": [718, 723, 732, 735, 761, 762, 763, 764, 766, 772, 775, 803, 804, 806, 807, 809, 816, 818], "hidden_s": [168, 407, 451, 689, 720, 721, 822, 823, 824, 832, 833, 875], "hidden_x": [720, 721, 725, 832, 833, 875], "hide": [303, 308], "hierarch": 183, "high": [238, 243, 287, 290, 433, 435, 457, 458, 479, 571, 698, 712, 713, 784, 821, 828, 831, 859, 868, 869], "high2low": [433, 435], "higher": [9, 212, 303, 430, 431, 432, 433, 434, 435, 735, 858, 859, 868, 870, 872], "highest": [178, 179, 859], "highli": [399, 400, 690, 820, 828, 831, 849, 852, 857], "highlight": [695, 725, 822, 823, 824, 825, 833, 858, 869, 875], "hing": 807, "hint": [714, 800], "histogram": [859, 868], "histor": 159, "hold": [6, 36, 37, 125, 182, 210, 215, 246, 247, 297, 302, 445, 654, 655, 675, 701, 709, 730, 842], "holist": 11, "hom": 287, "home": [23, 139, 700, 786, 852], "homebrew": 821, "homegen": [785, 817], "homo": [178, 179, 403, 404], "homogen": [1, 4, 6, 7, 9, 26, 27, 28, 34, 35, 36, 37, 38, 42, 47, 48, 53, 54, 55, 57, 60, 61, 65, 66, 75, 77, 79, 82, 87, 88, 90, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 122, 138, 139, 209, 210, 212, 213, 214, 217, 218, 220, 221, 222, 223, 238, 239, 244, 287, 295, 297, 305, 309, 310, 312, 320, 321, 336, 337, 339, 341, 343, 344, 345, 346, 347, 348, 356, 393, 405, 406, 408, 409, 411, 412, 413, 416, 419, 422, 425, 426, 430, 434, 435, 480, 544, 551, 554, 557, 558, 559, 560, 561, 562, 564, 566, 569, 574, 637, 639, 640, 644, 645, 646, 647, 654, 655, 660, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 674, 675, 693, 699, 700, 701, 704, 718, 721, 723, 729, 732, 734, 735, 736, 785, 786, 789, 794, 803, 804, 807, 809, 813, 816, 817, 818, 819, 836, 837, 838], "homogeneous_graph_nc_lp": 839, "homogeneous\uc5ec\uc57c": 808, "homograph": [41, 56, 693], "homophil": [162, 349, 478], "homophili": [13, 120, 242, 243, 349, 478, 479], "hood": [697, 700, 856, 874], "hook": [430, 431, 432, 433, 434, 435], "hop": [217, 238, 295, 303, 308, 336, 337, 342, 343, 344, 357, 426, 427, 430, 431, 432, 434, 545, 664, 823, 834, 858, 859], "hop2j_list": 858, "host": [1, 2, 5], "hostil": 166, "hot": [165, 168, 171, 461, 841, 865], "hotel": 163, "hour": 166, "hous": [141, 142, 143], "how": [4, 9, 11, 21, 139, 162, 165, 218, 243, 303, 308, 403, 406, 412, 414, 419, 440, 442, 447, 479, 562, 563, 578, 579, 647, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 704, 711, 713, 716, 720, 722, 723, 725, 726, 727, 728, 731, 732, 736, 761, 803, 809, 821, 822, 823, 824, 825, 830, 831, 832, 833, 834, 836, 838, 839, 840, 842, 843, 844, 845, 846, 847, 848, 849, 852, 856, 857, 858, 859, 860, 865, 868, 870, 872, 874, 875], "howev": [4, 9, 21, 22, 171, 234, 293, 303, 308, 315, 316, 699, 701, 704, 708, 720, 729, 821, 833, 834, 843, 844, 848, 852, 858, 859, 862, 865, 869], "html": [9, 21, 145, 184, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 293, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 849], "http": [9, 21, 23, 133, 134, 135, 136, 137, 144, 145, 146, 147, 151, 152, 153, 159, 161, 162, 163, 165, 167, 168, 169, 171, 173, 174, 175, 177, 180, 181, 182, 184, 186, 188, 195, 210, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 293, 295, 303, 308, 336, 337, 434, 435, 450, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 562, 686, 695, 700, 725, 741, 754, 773, 781, 786, 821, 822, 823, 824, 825, 827, 828, 832, 833, 835, 838, 839, 840, 844, 845, 848, 849, 852, 857, 858, 862, 865, 869], "hu": [712, 756, 797, 865], "huaiwen": 754, "huang": [754, 856, 858], "hub": 865, "huge": 726, "hugectr": 210, "human": 859, "hundr": [701, 820], "hurt": 859, "hv": [96, 116, 117, 558, 561, 647, 709, 712, 753, 756, 794, 797, 865], "hv_init": 865, "hv_old": 865, "hx": [726, 810], "hy": [726, 810], "hyper": [4, 428, 859, 862], "hypercub": 172, "hyperedg": 825, "hyperedge_degre": 825, "hypergraph": 826, "hyperlink": [155, 187, 192, 193, 299, 302, 305], "hyperparamet": [192, 413, 433, 435, 562, 735, 859], "hyperthread": 849, "h\u662f\u4ece5": [772, 775], "h\u73b0\u5728\u662f\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u5f20\u91cf\u5bf9": 765, "i": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 262, 263, 264, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 328, 330, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 360, 361, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 478, 479, 480, 481, 483, 485, 488, 490, 503, 504, 505, 506, 509, 511, 515, 517, 523, 525, 529, 531, 544, 545, 551, 552, 553, 554, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 576, 577, 578, 579, 584, 587, 588, 598, 601, 602, 603, 604, 605, 612, 614, 616, 617, 618, 620, 623, 624, 626, 630, 637, 638, 639, 641, 642, 643, 645, 647, 649, 650, 651, 653, 654, 655, 662, 663, 665, 666, 668, 671, 672, 673, 677, 678, 679, 680, 682, 683, 684, 685, 687, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 739, 740, 752, 753, 756, 761, 769, 770, 775, 779, 780, 781, 785, 786, 789, 792, 793, 794, 797, 798, 803, 806, 808, 813, 814, 817, 818, 820, 821, 822, 823, 824, 825, 827, 828, 829, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 859, 862, 863, 865, 866, 868, 869, 870, 872, 874, 875], "i2h": 857, "i64": [700, 786], "i_": 421, "i_1": [116, 561], "i_2": 561, "i_j": 862, "i_n": 116, "ic": 869, "icew": 166, "icews18": [25, 166], "icon": 823, "id": [0, 4, 6, 13, 20, 26, 27, 32, 34, 35, 39, 44, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 77, 78, 87, 88, 90, 92, 93, 94, 95, 96, 100, 104, 107, 114, 115, 122, 123, 124, 125, 126, 130, 131, 133, 138, 140, 144, 184, 197, 205, 209, 218, 219, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 247, 248, 285, 288, 292, 293, 294, 296, 297, 298, 301, 305, 309, 310, 317, 320, 321, 326, 328, 331, 336, 337, 338, 339, 343, 344, 345, 357, 358, 359, 361, 387, 388, 391, 430, 431, 432, 433, 434, 436, 437, 438, 455, 480, 544, 545, 551, 552, 553, 557, 558, 560, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 578, 579, 639, 644, 645, 646, 647, 651, 679, 684, 687, 693, 695, 697, 700, 708, 709, 715, 717, 718, 723, 725, 785, 793, 794, 803, 804, 807, 809, 825, 835, 838, 839, 841, 845, 857, 862, 869, 874], "id2etyp": 699, "id2ntyp": 699, "id_": 219, "id_tensor": 4, "idconvert": 699, "idea": [21, 22, 734, 735, 827, 843, 862, 869, 870, 872], "ideal": 859, "ident": [4, 116, 218, 297, 401, 413, 423, 567, 639, 654, 661, 697, 718, 735, 822, 823, 825, 827, 832, 833, 875], "identifi": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 239, 245, 430, 431, 433, 435, 459, 482, 555, 557, 559, 576, 698, 699, 729, 732, 734], "idf": 161, "idna": [832, 833, 835, 838, 839], "ids_devic": [288, 292, 294, 298, 317], "idtyp": [4, 54, 64, 71, 125, 126, 131, 247, 248, 285, 338, 552, 553, 708, 719, 752, 793], "idx": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 691, 695, 696, 738, 741, 742, 778, 781, 782, 824], "idx_b": 503, "idx_list": 350, "id\uac00": 786, "id\uac12\ub4e4\uc744": 785, "id\uac12\ub4e4\uc774": 781, "id\uac12\uc744": 786, "id\ub294": [785, 786, 794, 803], "id\ub4e4\uacfc": 785, "id\ub4e4\ub85c": 785, "id\ub4e4\uc5d0": 793, "id\ub4e4\uc640": 803, "id\ub4e4\uc740": [786, 794], "id\ub4e4\uc744": [785, 786], "id\ub4e4\uc758": [804, 807, 809], "id\ub77c\uace0": 793, "id\ub85c": [785, 793], "id\ub97c": [785, 786, 793, 794, 801, 804], "id\ub9cc\uc744": 786, "id\uc5d0": 786, "id\uc640": [785, 786, 804], "id\uc758": [785, 786, 793], "id\uc774\ub2e4": 786, "ie": 164, "igb": 287, "ignor": [4, 116, 133, 144, 200, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 430, 431, 432, 433, 434, 435, 693], "ignore_bipartit": 116, "ii": [413, 427], "ij": [361, 393, 395, 403, 405, 406, 407, 411, 412, 413, 416, 417, 418, 422, 427, 756, 797, 825, 827, 859, 868, 869], "ik": 859, "illustr": [699, 701, 708, 719, 822, 823, 824, 825, 838, 852, 853, 858, 869], "imag": [146, 160, 169, 828, 841, 844], "imaginari": 824, "imbal": [162, 701], "imdb": 186, "imdbbinari": [165, 874], "imdbmulti": 165, "immedi": [22, 41, 564, 859], "immunolog": 859, "impact": [14, 563], "impl": [838, 839], "implement": [0, 4, 6, 7, 9, 10, 14, 21, 22, 23, 197, 289, 292, 300, 303, 313, 315, 395, 419, 436, 437, 448, 459, 483, 485, 488, 490, 509, 511, 515, 517, 523, 525, 529, 531, 560, 657, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 701, 711, 712, 713, 716, 718, 723, 724, 725, 729, 734, 736, 809, 820, 822, 823, 827, 831, 833, 840, 842, 845, 852, 859, 860, 862, 870, 872, 875], "impli": 857, "implicit": [89, 735, 775, 818, 827], "implicitli": [27, 114, 303, 308, 315, 316, 865], "import": [4, 5, 6, 9, 20, 21, 22, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 120, 122, 125, 126, 128, 129, 131, 137, 138, 141, 142, 143, 146, 147, 149, 155, 160, 169, 171, 173, 174, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 204, 212, 215, 216, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 310, 317, 318, 319, 321, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 350, 355, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 478, 479, 480, 481, 482, 507, 544, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 567, 571, 573, 574, 575, 576, 577, 578, 579, 614, 637, 638, 640, 644, 645, 646, 647, 649, 650, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 712, 713, 714, 717, 718, 722, 723, 726, 728, 729, 730, 731, 732, 733, 734, 736, 738, 739, 740, 741, 742, 743, 744, 749, 750, 751, 752, 753, 756, 757, 758, 761, 765, 766, 768, 769, 770, 771, 772, 773, 774, 776, 778, 779, 780, 781, 782, 783, 784, 785, 790, 791, 792, 793, 794, 797, 798, 799, 800, 803, 808, 809, 810, 812, 813, 814, 815, 816, 817, 819, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874], "importance_sampl": [212, 567], "importerror": [822, 823, 824, 825, 827, 832, 833, 835, 838, 839], "imposs": [569, 832], "impress": 859, "improv": [4, 10, 21, 662, 695, 726, 830, 849, 850, 851, 852, 857, 862, 865, 866, 869, 872], "in_": [396, 405, 406, 409, 411, 412, 416, 419, 425], "in_degre": [4, 87, 89, 449, 687, 689, 707, 729, 751, 764, 769, 792, 807, 813, 841, 858], "in_dim": [431, 433, 435, 732, 734, 772, 774, 816, 817, 859], "in_dir": 701, "in_edg": [88, 707, 751, 792, 858], "in_edge_feat": 406, "in_feat": [390, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 415, 416, 418, 419, 422, 424, 425, 426, 427, 430, 432, 434, 447, 456, 460, 697, 718, 722, 723, 725, 726, 728, 734, 736, 743, 762, 764, 765, 766, 768, 774, 776, 783, 804, 807, 808, 809, 810, 812, 817, 819, 835, 840, 842, 843, 844, 852, 853, 856, 857, 858], "in_feat_nam": 672, "in_feats\u662f\u8f93\u5165\u7279\u5f81\u7684\u7ef4\u5ea6": 776, "in_featur": [718, 723, 732, 735, 761, 762, 763, 764, 766, 772, 775, 803, 804, 806, 807, 809, 816, 818, 856, 862], "in_indx": 868, "in_memori": [309, 318, 837, 838, 839], "in_nod": 868, "in_node_feat": 406, "in_siz": [390, 392, 401, 407, 421, 423, 720, 721, 725, 726, 822, 823, 825, 827, 832, 833, 835, 875], "in_subgraph": [297, 300, 343, 544, 719, 761, 803], "in_test_mask": [197, 205], "in_train_mask": [197, 205], "in_valid_mask": [197, 205], "inbound": [212, 214, 217, 232, 239, 240, 297, 300, 339, 567, 568, 569, 570, 639, 803], "inc": 63, "incept": [672, 823], "incid": [4, 13, 62, 63, 218, 243, 244, 245, 479, 701, 711, 718, 732, 796, 804, 825, 832, 843, 858], "includ": [4, 21, 22, 48, 62, 63, 132, 133, 138, 139, 144, 157, 158, 161, 162, 163, 170, 179, 191, 197, 205, 212, 214, 217, 228, 234, 238, 287, 309, 314, 321, 343, 344, 399, 408, 417, 424, 436, 438, 547, 562, 639, 693, 697, 700, 701, 704, 705, 712, 715, 724, 728, 729, 730, 732, 734, 735, 825, 834, 837, 838, 839, 843, 848, 849, 859, 862, 865, 869], "include_dst_in_src": 639, "include_original_edge_id": [309, 327], "include_reverse_edg": [325, 718, 832], "inclus": [21, 207], "incom": [20, 61, 100, 117, 212, 214, 297, 339, 357, 361, 409, 483, 484, 485, 486, 488, 489, 490, 491, 509, 510, 511, 512, 515, 516, 517, 518, 523, 524, 525, 526, 529, 530, 531, 532, 655, 711, 803, 842, 857, 859, 862, 869], "incomplet": [4, 210, 211, 692, 739, 779, 833], "inconsist": [162, 395], "incorpor": [173, 736], "increas": [292, 309, 317, 318, 413, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 563, 697, 828, 848], "increment": [566, 681, 865, 869], "incur": [244, 245, 339, 343, 344, 480, 481, 544, 724], "inde": [22, 639, 644], "indent": 786, "independ": [120, 576, 577, 649, 650, 709], "index": [4, 6, 21, 22, 95, 96, 108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 285, 287, 288, 292, 294, 296, 298, 301, 302, 303, 305, 310, 317, 319, 330, 338, 395, 413, 585, 586, 649, 650, 691, 695, 698, 701, 707, 725, 729, 741, 751, 778, 781, 792, 827, 832, 833, 835, 837, 838, 839, 852, 857, 869], "indexes_follow": 301, "indexes_lik": 301, "indic": [4, 6, 9, 12, 30, 31, 32, 53, 54, 62, 63, 101, 102, 131, 135, 136, 139, 140, 142, 143, 145, 146, 149, 151, 152, 169, 171, 180, 183, 185, 189, 190, 196, 209, 210, 211, 216, 218, 230, 237, 238, 239, 244, 285, 288, 292, 293, 294, 295, 296, 297, 298, 300, 301, 303, 305, 308, 310, 311, 312, 315, 316, 317, 319, 321, 325, 328, 330, 336, 337, 338, 347, 350, 357, 358, 402, 448, 450, 451, 461, 480, 503, 545, 562, 563, 565, 566, 581, 582, 583, 584, 585, 586, 587, 589, 591, 592, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 639, 647, 687, 695, 698, 700, 701, 704, 708, 709, 712, 723, 725, 730, 733, 736, 776, 819, 822, 823, 824, 825, 827, 832, 834, 835, 838, 839, 840, 845, 852, 856, 857, 858, 859, 862, 865], "indices1": [620, 632], "indices2": [620, 632], "indirectli": 705, "individu": [121, 122, 166, 297, 397, 442, 567, 701, 865], "indptr": [32, 297, 300, 303, 308, 310, 311, 319, 321, 326, 328, 331, 337, 585, 586, 617, 618, 827, 832, 835], "induc": [26, 134, 197, 209, 215, 217, 232, 244, 245, 297, 300, 303, 308, 315, 316, 339, 343, 344, 430, 431, 432, 434, 444, 480, 481, 544, 568, 569, 570, 639, 718, 841, 862, 869], "induced_dst": 639, "induced_src": 639, "induct": [160, 175, 194, 215, 400, 404, 425, 725, 859], "industri": 162, "ineffici": [14, 734], "inf": 450, "infeas": 720, "infer": [4, 131, 285, 289, 338, 461, 614, 616, 617, 618, 630, 644, 697, 701, 708, 716, 726, 763, 793, 806, 827, 849, 862, 865, 869], "inferenc": 849, "infin": [483, 485, 488, 490, 509, 511, 515, 517, 523, 525, 529, 531], "infinitesim": 401, "influenc": 134, "info": [203, 206], "info_path": [696, 742, 782], "inform": [4, 13, 22, 27, 28, 59, 95, 96, 101, 102, 114, 115, 116, 117, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 206, 218, 234, 235, 238, 243, 244, 245, 247, 248, 285, 291, 300, 303, 308, 314, 315, 316, 338, 339, 342, 348, 356, 395, 430, 431, 434, 459, 479, 480, 481, 544, 552, 553, 557, 558, 559, 561, 638, 645, 647, 648, 685, 686, 689, 691, 693, 695, 696, 698, 699, 700, 701, 708, 709, 717, 733, 734, 736, 778, 782, 821, 833, 837, 840, 842, 843, 844, 852, 857, 858, 859, 862, 865, 869, 875], "informat": 857, "infti": 428, "inher": [863, 872], "inherit": [310, 657, 691, 692, 698, 721, 727, 840, 845], "init": [4, 10, 388, 429, 432, 434, 459, 725, 728, 768, 812, 821, 824, 857, 859, 865, 868, 869], "init_att": 429, "init_beta": 393, "init_ep": [414, 415], "init_func": [4, 10, 459, 698, 744, 784], "init_graph": 868, "init_method": [833, 874, 875], "init_model": 874, "init_node_activ": 865, "init_process_group": [233, 697, 698, 743, 744, 783, 784, 833, 848, 852, 853, 874, 875], "init_tmp": [432, 434], "initi": [10, 13, 27, 28, 70, 118, 119, 128, 129, 168, 197, 205, 207, 292, 293, 295, 303, 308, 309, 317, 336, 337, 361, 395, 404, 409, 411, 412, 413, 414, 415, 416, 418, 419, 422, 425, 426, 427, 428, 432, 434, 435, 448, 457, 458, 459, 461, 555, 556, 571, 576, 577, 649, 650, 662, 663, 668, 697, 699, 728, 743, 744, 746, 783, 784, 787, 823, 831, 832, 833, 835, 848, 856, 857, 858, 862, 865, 875], "initialize_hv": 865, "inner": [229, 720, 735, 806, 818, 858], "inner_edg": [238, 700, 701], "inner_nod": [238, 700, 701, 786], "innermost": [308, 315, 316], "innov": 858, "inp_dropout": 428, "inplac": [21, 27, 28, 70, 89, 112, 355, 821, 862], "input": [4, 5, 6, 9, 20, 21, 34, 53, 56, 57, 58, 60, 73, 87, 100, 109, 110, 116, 118, 119, 121, 122, 126, 130, 131, 132, 133, 135, 136, 138, 140, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 210, 212, 214, 218, 220, 221, 222, 223, 230, 232, 237, 238, 239, 241, 244, 245, 246, 247, 248, 285, 293, 297, 300, 301, 305, 310, 313, 321, 330, 332, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 355, 356, 357, 358, 361, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 456, 457, 458, 461, 462, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 554, 555, 556, 557, 560, 561, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579, 598, 601, 602, 603, 604, 605, 612, 624, 638, 640, 644, 645, 646, 647, 648, 649, 650, 653, 654, 661, 662, 663, 666, 668, 672, 685, 689, 691, 698, 699, 701, 708, 712, 716, 717, 718, 721, 722, 723, 728, 729, 730, 732, 733, 734, 736, 770, 774, 776, 778, 785, 786, 806, 808, 813, 814, 817, 819, 823, 824, 827, 831, 832, 833, 834, 835, 842, 844, 848, 852, 853, 856, 857, 858, 859, 862, 865, 869, 874, 875], "input_": [729, 769, 813], "input_d": 428, "input_dict": 824, "input_dim": [431, 432, 433, 442], "input_dir": 786, "input_dst": [729, 769, 813], "input_feat": 417, "input_featur": [717, 723, 761, 762, 764, 766, 803, 804, 807, 809, 857], "input_id": [184, 388], "input_nod": [4, 210, 212, 213, 214, 217, 218, 301, 305, 717, 720, 761, 762, 763, 764, 766, 803, 804, 806, 807, 809, 832, 835, 852, 853], "input_nods": 4, "input_s": 874, "inputs\u662f\u8282\u70b9\u7684\u7279\u5f81": 774, "ins": 712, "insert": [300, 313, 698, 717, 725, 744, 784, 835], "insert_revers": [132, 133, 144, 170], "insid": [21, 201, 295, 297, 305, 310, 321, 336, 337, 408, 416, 428, 462, 701, 734], "insight": [856, 857, 858, 859, 862, 865, 868, 869], "inspect": [700, 701, 860, 862, 872], "inspir": [171, 428, 823, 842], "instal": [21, 398, 399, 400, 694, 740, 780, 786, 822, 823, 824, 825, 827, 849, 852], "instanc": [4, 14, 20, 133, 144, 156, 162, 165, 168, 172, 186, 209, 288, 290, 298, 299, 310, 389, 430, 431, 432, 433, 434, 435, 701, 704, 712, 718, 722, 723, 732, 736, 825, 834, 841, 843, 844, 849, 858, 869, 874], "instanti": [31, 73, 91, 92, 245, 314, 481, 676, 677, 678, 679, 680, 681, 682, 683, 684], "instead": [4, 9, 21, 48, 57, 80, 116, 118, 168, 177, 178, 179, 186, 212, 214, 217, 219, 303, 315, 347, 430, 431, 432, 433, 434, 435, 444, 567, 568, 569, 570, 649, 650, 654, 698, 705, 709, 718, 720, 722, 734, 808, 825, 832, 833, 834, 835, 838, 839, 844, 858, 859, 865, 868, 870, 872, 875], "institut": [701, 786, 857], "instruct": [21, 700, 821, 852], "instructon": 726, "instrument": 161, "insubgraph_sampl": 300, "int": [4, 6, 22, 27, 28, 34, 35, 38, 48, 53, 54, 55, 57, 58, 59, 60, 61, 71, 79, 80, 81, 82, 87, 88, 90, 93, 94, 95, 96, 100, 107, 114, 115, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 285, 288, 290, 292, 293, 294, 296, 297, 298, 301, 302, 303, 305, 307, 308, 312, 315, 316, 317, 319, 322, 326, 328, 329, 331, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 350, 357, 358, 359, 360, 387, 388, 390, 391, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 480, 544, 545, 552, 553, 554, 557, 558, 562, 563, 564, 566, 567, 568, 569, 570, 572, 573, 574, 575, 597, 598, 600, 601, 602, 603, 604, 605, 614, 616, 617, 618, 619, 624, 630, 637, 645, 649, 650, 655, 662, 663, 664, 665, 668, 669, 672, 673, 676, 681, 693, 695, 706, 708, 725, 726, 736, 741, 752, 776, 781, 786, 791, 793, 810, 819, 837, 838, 839, 842, 843, 844, 845, 862, 865], "int16": [147, 174], "int32": [4, 59, 64, 71, 118, 119, 125, 126, 131, 247, 248, 285, 302, 310, 338, 399, 552, 553, 565, 570, 578, 579, 594, 607, 700, 701, 706, 708, 750, 752, 791, 793, 827, 832, 835, 838, 839], "int64": [4, 31, 59, 64, 71, 125, 126, 131, 138, 147, 165, 168, 174, 184, 186, 195, 217, 244, 247, 248, 285, 297, 338, 339, 343, 344, 480, 544, 552, 553, 565, 567, 644, 658, 659, 693, 700, 701, 708, 752, 786, 793, 841, 844, 845], "int8": [700, 701, 845], "integ": [22, 32, 39, 52, 78, 95, 96, 122, 125, 131, 138, 140, 142, 143, 189, 190, 200, 207, 210, 212, 214, 217, 238, 239, 247, 285, 297, 302, 305, 312, 315, 316, 328, 338, 392, 399, 407, 421, 424, 438, 503, 506, 560, 569, 578, 579, 644, 645, 693, 699, 700, 701, 706, 708, 709, 791, 821, 841, 874], "integr": [166, 700, 727, 733, 831, 870, 872], "intel": 726, "inter": [858, 866, 872], "interact": [52, 166, 175, 178, 396, 567, 568, 697, 704, 709, 753, 794, 845], "interaction_cutoff": 395, "interatom": 178, "interest": [693, 697, 865, 869], "interfac": [4, 6, 20, 165, 234, 504, 505, 698, 699, 703, 706, 709, 714, 723, 841, 869], "intermedi": [308, 315, 316, 432, 434, 674, 712, 716, 856], "intermediari": 859, "intern": [1, 4, 20, 22, 39, 52, 78, 126, 131, 178, 179, 247, 248, 285, 338, 388, 568, 569, 578, 579, 698, 699, 705, 708, 712, 730, 814, 824, 845, 858], "interpol": [297, 564], "intersect": [56, 197, 205], "interv": [823, 865, 868], "intimid": 858, "intra": [174, 858, 866, 872], "intra_src": 858, "introduc": [22, 77, 134, 158, 173, 191, 241, 346, 399, 401, 415, 420, 448, 449, 450, 451, 452, 453, 454, 455, 554, 637, 645, 662, 663, 665, 668, 669, 673, 687, 688, 690, 694, 703, 709, 711, 719, 720, 727, 731, 734, 823, 831, 832, 852, 858, 862, 869], "introduct": [703, 820, 842, 843, 844, 856], "introductori": 840, "inttensor": [569, 578, 579], "intuit": [22, 243, 479, 827, 874], "inv": 827, "inv_sigma": 416, "inv_vocab": 862, "invalid": [5, 173, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 448, 450, 451, 687, 699, 729, 856, 859], "invari": [443, 444], "invent": 842, "invers": [157, 825], "inverse_indic": [343, 344, 432, 434], "invert": [320, 862], "investig": 162, "invoc": [288, 292, 294, 298, 317], "invok": [4, 20, 22, 27, 34, 73, 93, 94, 100, 113, 114, 117, 126, 131, 156, 214, 233, 247, 248, 285, 338, 359, 389, 698, 699, 700, 701, 702, 709, 712, 726, 840, 852, 853, 874], "involv": [4, 21, 303, 305, 308, 315, 316, 320, 707, 717, 720, 721, 732, 734, 735, 736, 845, 856, 859, 874], "io": [162, 168, 186, 695, 741, 754, 781, 832, 833, 835, 838, 839], "io_ur": 292, "iostream": 22, "iou": 862, "ip": [701, 702, 787, 852, 853], "ip_addr1": [852, 853], "ip_addr2": [852, 853], "ip_addr3": 852, "ip_addr4": 852, "ip_config": [233, 697, 698, 701, 702, 743, 744, 746, 783, 784, 787, 852, 853], "ipynb": [840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "ipython": 823, "ip\u5730\u5740\u540e\u9762\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u7aef\u53e3": 746, "ip\u914d\u7f6e\u6587\u4ef6": 746, "irrespect": 869, "is_avail": [718, 723, 823, 833, 869, 874, 875], "is_bf16_support": 726, "is_block": [722, 729, 730, 765, 769, 770, 808, 813, 814], "is_cuda": 330, "is_gdata": 4, "is_homogen": 327, "is_input_lay": 857, "is_last_lay": [720, 721, 832, 833, 875], "is_libxsmm_en": 686, "is_pin": [89, 288, 305, 310, 317, 318], "is_tempor": [145, 164, 166], "is_train": [833, 869, 875], "is_unibipartit": [44, 45, 79, 82, 104, 105], "is_valid": 865, "isab": 444, "isinst": [722, 725, 729, 730, 765, 769, 770, 808, 813, 814], "isn": 705, "isol": [130, 150, 244, 339, 343, 344, 544, 557, 708, 793, 803], "isomorph": [414, 415, 874], "isotrop": [178, 179], "issu": [21, 126, 131, 168, 247, 248, 285, 338, 692, 726, 739, 779, 834], "item": [4, 7, 22, 132, 133, 135, 136, 144, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 175, 176, 177, 178, 179, 181, 183, 191, 192, 194, 196, 218, 220, 221, 222, 223, 293, 299, 301, 302, 305, 323, 324, 347, 389, 432, 565, 566, 693, 695, 703, 704, 717, 718, 719, 721, 724, 725, 726, 729, 730, 731, 732, 734, 735, 736, 741, 764, 769, 770, 771, 772, 774, 775, 776, 781, 788, 807, 810, 813, 814, 815, 816, 817, 818, 819, 824, 831, 832, 833, 835, 838, 839, 843, 844, 856, 857, 858, 859, 862, 865, 874, 875], "item_feat": [732, 735, 736, 772, 775, 776, 816, 818, 819], "item_id": 838, "item_sampl": [293, 300, 301, 303, 319], "item_set": [293, 299, 300, 301, 302, 303, 308, 319, 717, 833, 875], "itemsampl": [293, 300, 303, 308, 319, 717, 718, 720, 721, 723, 724, 725, 832, 833, 835, 875], "itemset": [291, 293, 299, 300, 301, 303, 304, 308, 309, 314, 319, 717, 718, 721, 723, 724, 833, 835, 838, 839, 875], "item\uc744": 816, "iter": [0, 3, 4, 6, 7, 34, 35, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 92, 93, 94, 100, 114, 131, 165, 168, 172, 177, 178, 179, 186, 209, 210, 211, 218, 244, 285, 290, 293, 301, 303, 308, 315, 338, 339, 343, 344, 394, 428, 432, 434, 438, 442, 480, 544, 557, 558, 646, 689, 695, 708, 716, 718, 720, 721, 723, 724, 734, 766, 793, 803, 804, 806, 809, 823, 832, 835, 844, 865, 868], "iterabledatapip": 724, "iterate\ud558\uace0": [807, 809], "iterate\ud558\ub294": [806, 807, 809], "iterate\ud558\uba74\uc11c": [803, 817], "iterate\ud55c\ub2e4": [803, 817], "iterate\ud574\uc11c": 804, "iterating\ud558\ub294": 809, "iteration\ub9c8\ub2e4": 809, "iteration\uc744": 781, "iterator\ub294": 809, "iterator\ub97c": 809, "iterdatapip": [289, 301], "iterrow": 845, "itertool": 843, "ith": [196, 207], "its": [1, 4, 6, 10, 14, 22, 26, 45, 47, 68, 75, 79, 82, 105, 109, 138, 141, 146, 164, 165, 167, 168, 169, 172, 173, 182, 186, 209, 215, 243, 288, 292, 294, 297, 298, 303, 308, 310, 317, 318, 321, 345, 361, 389, 413, 416, 419, 425, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 479, 567, 569, 573, 576, 577, 578, 579, 644, 645, 653, 674, 698, 699, 700, 701, 703, 708, 711, 717, 723, 726, 731, 732, 733, 734, 736, 823, 825, 827, 828, 834, 840, 844, 845, 852, 853, 856, 858, 859, 862, 865, 868, 869, 874], "itself": [21, 210, 436, 438, 554, 564, 566, 569, 574, 732, 825, 848, 856, 858, 869], "j": [4, 10, 21, 126, 248, 345, 361, 387, 391, 395, 396, 400, 401, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 422, 423, 424, 425, 427, 436, 438, 455, 566, 574, 578, 579, 638, 654, 712, 756, 797, 825, 827, 857, 858, 859, 862, 868, 869], "j4": 821, "j_1": [116, 561], "j_2": 561, "j_n": 116, "jake": [862, 868], "jean": 862, "ji": [410, 414, 419, 425, 712, 869], "jinj": [868, 869], "jinja2": [832, 833, 835, 838, 839], "jinyang": 868, "jk": [410, 862], "jl": 862, "job": [21, 229, 701, 702, 874], "join": [142, 156, 293, 431, 433, 692, 696, 697, 701, 739, 742, 779, 782, 820, 833, 838, 839, 852, 875], "joint": 865, "json": [4, 229, 238, 697, 698, 699, 700, 701, 702, 709, 743, 744, 745, 746, 783, 784, 785, 786, 787, 821, 852], "json\u4e2d\u7684\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 745, "json\u6587\u4ef6\u5305\u542b\u6240\u6709\u5212\u5206\u7684\u914d\u7f6e": 745, "json\u7684json\u6587\u4ef6": 745, "json\uacfc": 794, "judici": [860, 872], "jump": [460, 859], "jupyt": [698, 784, 826, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "jure": 842, "just": [21, 22, 45, 79, 82, 105, 233, 689, 699, 701, 709, 721, 734, 736, 835, 838, 839, 844, 852, 853, 859], "k": [14, 21, 120, 121, 122, 178, 179, 183, 209, 217, 219, 220, 221, 222, 223, 224, 225, 295, 303, 308, 336, 337, 341, 342, 343, 344, 345, 346, 349, 357, 358, 394, 395, 397, 401, 402, 410, 416, 421, 426, 427, 430, 431, 432, 434, 436, 438, 439, 440, 441, 443, 445, 446, 448, 452, 455, 461, 554, 560, 570, 573, 612, 613, 620, 637, 649, 650, 664, 665, 669, 672, 673, 721, 729, 730, 734, 735, 736, 764, 769, 770, 774, 775, 776, 807, 813, 814, 817, 818, 819, 824, 827, 842, 843, 858, 859, 862, 865, 868, 869], "k_i": 869, "k_j": 869, "k_proj": 824, "kai": 862, "kappa": 303, "karat": [167, 705, 749, 790, 823, 845], "karate_club": 845, "karateclub": 25, "karateclubdata": [695, 741, 781], "karateclubdataset": [823, 845], "karlsruh": 132, "karypislab": [700, 786], "kb": 832, "kd": [14, 345, 436, 438, 573], "kdd": [151, 152], "kde": 868, "keep": [6, 22, 139, 140, 186, 232, 303, 315, 356, 401, 560, 653, 713, 724, 858, 862], "keep_orig_edg": 653, "keepdim": [726, 810, 865, 868, 869], "kei": [22, 26, 27, 28, 73, 108, 114, 115, 121, 122, 131, 148, 178, 179, 205, 210, 211, 219, 221, 238, 239, 240, 244, 286, 291, 295, 296, 297, 299, 305, 310, 321, 336, 337, 338, 339, 343, 344, 357, 388, 389, 390, 431, 432, 433, 480, 544, 545, 560, 571, 687, 693, 694, 695, 701, 714, 718, 723, 730, 740, 780, 824, 845, 852, 859, 862, 863, 865, 869, 870, 872], "kept": 130, "kera": [727, 811], "kernel": [5, 9, 34, 73, 93, 94, 100, 113, 168, 186, 395, 416, 443, 444, 455, 505, 509, 510, 511, 512, 515, 516, 517, 518, 523, 524, 525, 526, 529, 530, 531, 532, 663, 726, 820, 828, 852, 856], "kevin": 754, "keyerror": [728, 729, 768, 769, 812, 813], "keyword": [121, 134, 151, 152, 238, 313], "kg": [436, 438], "kgdata": [695, 741, 781], "khop_in_subgraph": 344, "khop_out_subgraph": 343, "khopgraph": 13, "ki": [410, 869], "kick": [822, 823, 824], "kind": [126, 210, 248, 314, 694, 859], "kipf": [822, 829, 840, 856], "kit": 849, "kl": 862, "knn": [345, 573], "knn_g": [345, 573], "knn_graph": [14, 573], "know": [4, 21, 243, 479, 718, 735, 832, 835, 838, 839, 842, 845, 857, 875], "knowledg": [13, 21, 164, 166, 243, 458, 460, 479, 843, 857, 874], "knowledgegraphdataset": [157, 158, 191, 695, 741, 781], "known": [195, 461, 705, 862, 869], "known_host": 852, "konect": 167, "kv": 869, "kvstore": 4, "kwarg": [4, 108, 121, 138, 139, 140, 210, 211, 213, 238, 313, 334, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 430, 431, 432, 433, 434, 435, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 761, 803], "l": [241, 348, 392, 393, 394, 396, 397, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 430, 431, 432, 434, 435, 453, 461, 574, 612, 613, 620, 623, 631, 632, 666, 672, 716, 726, 729, 730, 735, 760, 761, 763, 769, 770, 775, 802, 803, 806, 810, 813, 814, 818, 822, 825, 827, 834, 842, 843, 852, 853, 856, 857, 858, 859, 862, 869], "l1": [437, 551], "l2": [345, 436, 437, 438, 551, 573, 728, 812, 857], "l2norm": 857, "l_": 858, "label": [4, 6, 13, 21, 25, 120, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 208, 211, 212, 214, 215, 217, 218, 228, 241, 242, 243, 293, 299, 301, 302, 303, 305, 309, 318, 319, 339, 349, 350, 387, 430, 432, 434, 435, 461, 478, 479, 544, 547, 558, 560, 571, 691, 694, 695, 696, 701, 705, 717, 718, 721, 723, 725, 726, 731, 732, 734, 736, 740, 741, 742, 762, 766, 771, 772, 774, 776, 778, 780, 781, 782, 804, 809, 810, 815, 816, 817, 819, 822, 823, 824, 825, 832, 833, 835, 837, 838, 839, 840, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 862, 869, 874, 875], "label0_nod": 858, "label1": 858, "label_dict": [204, 350, 696, 742, 782, 845], "label_kei": [178, 179], "label_propag": 461, "labels_follow": [299, 301], "labels_item": 299, "labels_lik": [299, 301], "labels_us": 299, "labelsmooth": 869, "labl": 302, "labor": [212, 297, 303, 315, 567], "laborsampl": [303, 315], "lab\uc758": 795, "lacon": 823, "ladder": 172, "lake": 869, "lam": [428, 429], "lambda": [4, 34, 35, 413, 428, 429, 869], "lambda_": [397, 413], "lambda_max": [397, 402], "land": 554, "langl": [178, 179], "languag": [159, 164, 824, 841, 844, 862, 865, 869], "lapacian": 0, "laplacian": [346, 347, 397, 401, 428, 429, 452, 665, 824, 825], "laplacian_lambda_max": 397, "laplacian_p": 824, "laplacianp": [401, 452], "lapp": [13, 452], "larg": [3, 10, 11, 14, 22, 66, 123, 124, 125, 126, 131, 134, 168, 181, 209, 227, 228, 247, 248, 285, 287, 309, 338, 345, 349, 400, 404, 420, 425, 436, 438, 459, 463, 478, 573, 639, 644, 651, 691, 696, 701, 710, 715, 719, 725, 729, 731, 734, 820, 821, 832, 834, 836, 837, 843, 844, 858, 869], "larger": [178, 238, 297, 305, 313, 322, 432, 434, 463, 567, 713, 736, 834], "largest": [131, 285, 338, 347, 397, 402, 445, 570, 637, 649, 650, 673, 708, 793, 858], "last": [4, 5, 9, 208, 210, 211, 212, 214, 293, 297, 301, 413, 419, 612, 645, 650, 702, 711, 712, 718, 729, 824, 833, 848, 856, 859, 875], "latenc": [303, 308], "latent": 862, "later": [149, 155, 185, 187, 193, 295, 303, 308, 336, 337, 393, 478, 698, 701, 821, 843], "latest": [701, 865], "latter": [361, 430, 431, 432, 433, 434, 435, 563, 698, 713, 718, 870, 872], "launch": [4, 459, 697, 698, 701, 725, 746, 784, 787, 833, 848, 874], "law": 701, "layer": [4, 13, 208, 210, 212, 213, 214, 217, 218, 297, 303, 305, 308, 310, 315, 316, 388, 390, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 451, 452, 456, 460, 562, 567, 698, 713, 716, 717, 718, 720, 721, 723, 724, 725, 726, 727, 734, 735, 736, 763, 806, 809, 810, 811, 819, 827, 832, 833, 834, 835, 840, 842, 843, 844, 852, 853, 856, 859, 868, 870, 872, 875], "layer1": [856, 858, 859], "layer2": [856, 858, 859], "layer3": 858, "layer_depend": [212, 303], "layer_id": 305, "layer_idx": [720, 721, 725, 832, 833, 875], "layer_norm": 424, "layernorm": 869, "layer\uc640": 817, "layout": [31, 62, 63, 706], "lazi": [220, 221, 222, 223, 244, 245, 339, 343, 344, 480, 481, 544], "lazyfeatur": [220, 221, 222, 223], "lbrace": [186, 711, 755, 761, 796, 803], "ld_library_path": [700, 786], "ld_preload": 849, "ldot": [420, 460, 653], "lead": [393, 403, 405, 408, 409, 411, 412, 413, 416, 419, 426, 698, 706, 708, 729, 848], "leaf": [159, 184, 433, 435, 862], "leak": 4, "leakag": [4, 218, 717], "leaky_relu": [827, 859], "leakyrelu": [398, 406, 409, 411, 412, 827, 859], "learn": [4, 10, 13, 14, 23, 160, 179, 194, 215, 349, 387, 390, 391, 393, 398, 400, 404, 408, 409, 411, 412, 416, 425, 426, 429, 430, 431, 432, 434, 445, 452, 458, 460, 461, 478, 564, 652, 658, 659, 660, 662, 695, 721, 725, 731, 732, 734, 736, 795, 807, 820, 821, 823, 824, 827, 829, 832, 833, 834, 835, 840, 841, 842, 843, 845, 856, 857, 858, 862, 863, 865, 868, 869, 872, 874, 875], "learn_beta": 393, "learn_ep": [414, 415], "learnabl": [4, 118, 119, 387, 391, 393, 395, 397, 398, 399, 400, 402, 403, 404, 406, 409, 411, 412, 413, 414, 415, 416, 418, 419, 422, 425, 426, 427, 428, 442, 449, 453, 454, 455, 456, 457, 458, 460, 554, 669, 689, 698, 728, 784, 812, 823, 859, 865], "least": [21, 119, 161, 182, 298, 329, 428, 448, 451, 639, 837, 858, 859], "leav": [297, 712, 828, 841, 843, 862], "left": [118, 349, 394, 397, 400, 406, 409, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 425, 440, 441, 455, 460, 504, 505, 506, 637, 672, 673, 711, 713, 729, 734, 735, 755, 761, 769, 775, 796, 803, 813, 818, 827, 834, 842, 843, 857, 859, 862, 869], "leftarrow": [842, 869], "legaci": 304, "legitim": 163, "len": [4, 73, 138, 145, 146, 147, 164, 165, 166, 168, 169, 172, 174, 184, 186, 195, 207, 218, 300, 309, 326, 389, 460, 503, 507, 566, 573, 591, 613, 614, 617, 618, 632, 687, 693, 695, 720, 721, 725, 726, 730, 732, 735, 736, 741, 761, 764, 770, 772, 775, 776, 781, 803, 807, 810, 814, 816, 818, 819, 823, 824, 832, 833, 843, 844, 845, 848, 852, 853, 856, 857, 858, 862, 865, 868, 869, 874, 875], "length": [4, 36, 37, 142, 164, 182, 205, 207, 215, 230, 237, 238, 288, 294, 296, 297, 298, 303, 308, 315, 316, 317, 330, 342, 361, 397, 453, 506, 507, 545, 564, 565, 566, 569, 574, 612, 613, 687, 689, 698, 704, 706, 791, 827, 841, 863, 868, 869, 872], "leq": [862, 869], "leskovec": 842, "less": [118, 119, 139, 161, 224, 345, 436, 438, 453, 563, 573, 701, 708, 719, 848, 859], "let": [43, 46, 74, 103, 126, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 503, 701, 711, 786, 823, 827, 832, 833, 835, 838, 839, 852, 853, 856, 858, 865, 874], "level": [0, 5, 23, 120, 128, 129, 148, 434, 555, 556, 571, 649, 650, 698, 699, 701, 705, 712, 730, 734, 784, 824, 842, 844, 845, 849, 856, 859, 862, 865, 868, 870, 872], "level\uc758": 784, "leverag": [391, 399, 400, 713, 726, 823, 828, 858, 862, 866, 872], "levi": 674, "lexicograph": [123, 581], "lexicon": 144, "lg": [348, 674, 858], "lg1": 858, "lg_batch": 183, "lg_layer": 858, "lg_x": 858, "lgnn": [860, 872], "lgnncore": 858, "lgnnlayer": 858, "lh": 504, "lhs_data": [504, 505], "lhs_field": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "lhs_target": 504, "li": [243, 406, 479, 663, 668, 672, 727, 754, 838, 839, 857, 859, 865, 868], "lib": [700, 786, 824, 832, 833, 835, 838, 839, 849, 852, 856, 859], "libgoogl": 849, "librari": [8, 12, 21, 22, 295, 303, 308, 336, 337, 725, 821, 827, 828, 848, 849, 865], "libtcmalloc": 849, "libxsmm": 686, "licens": 820, "life": 4, "lifesci": [442, 447], "ligand": 395, "light": 22, "lightn": 833, "like": [9, 21, 22, 26, 116, 131, 162, 212, 214, 217, 224, 293, 299, 301, 303, 315, 323, 324, 420, 432, 434, 562, 563, 687, 689, 692, 693, 698, 701, 709, 713, 718, 720, 722, 723, 728, 729, 731, 732, 734, 753, 772, 784, 794, 821, 835, 838, 839, 840, 842, 844, 845, 856, 869, 874], "like_edg": 838, "like_edges_path": 838, "like_orig_eids_0": 701, "liked_bi": 718, "likelihood": [563, 564, 735, 818, 858], "limit": [22, 242, 290, 309, 720, 828, 833, 858, 875], "limits_": [409, 857, 869], "lin": [414, 422, 427], "line": [22, 183, 348, 666, 698, 700, 701, 702, 706, 821, 830, 840, 852, 860, 861, 868, 872, 874], "line_graph": [183, 858], "line_graph_degre": 183, "linear": [390, 392, 404, 408, 414, 415, 417, 419, 421, 422, 423, 425, 427, 430, 431, 432, 433, 434, 440, 448, 456, 463, 713, 718, 721, 722, 723, 725, 728, 732, 734, 757, 762, 765, 768, 772, 774, 799, 804, 808, 812, 816, 817, 822, 823, 824, 825, 832, 842, 843, 856, 857, 858, 859, 862, 865, 869, 874], "linear_deg": 858, "linear_dst": [713, 757, 799], "linear_fus": 858, "linear_model": 387, "linear_prev": 858, "linear_radiu": 858, "linear_src": [713, 757, 799], "linearity\uc640": 809, "linearli": [392, 424, 822], "linegraph": 13, "lingfan": [857, 865], "link": [2, 4, 13, 139, 149, 157, 158, 185, 191, 212, 214, 218, 241, 303, 305, 308, 315, 316, 456, 457, 458, 694, 698, 716, 717, 731, 734, 736, 740, 764, 780, 781, 807, 824, 830, 831, 833, 835, 840, 846, 847, 854, 855, 858], "link_predict": [309, 832, 838, 839], "linkpr": 139, "linkproppr": [694, 740, 780, 853], "linspac": 868, "lint": 21, "linux": 849, "list": [4, 10, 21, 22, 27, 36, 37, 39, 45, 52, 54, 56, 73, 78, 92, 95, 96, 105, 117, 119, 121, 122, 123, 124, 125, 130, 131, 145, 148, 159, 178, 179, 183, 196, 197, 205, 207, 208, 209, 212, 214, 215, 217, 218, 220, 221, 222, 223, 227, 228, 229, 234, 238, 245, 247, 285, 286, 291, 293, 295, 296, 299, 300, 301, 302, 303, 304, 305, 308, 309, 313, 315, 316, 318, 336, 338, 347, 350, 355, 356, 389, 391, 397, 401, 423, 424, 460, 462, 481, 547, 549, 560, 566, 567, 569, 571, 573, 578, 579, 583, 593, 616, 639, 644, 645, 651, 653, 655, 657, 660, 662, 671, 685, 689, 693, 694, 695, 696, 700, 701, 708, 712, 717, 718, 723, 725, 729, 730, 734, 735, 736, 780, 781, 793, 817, 837, 840, 841, 845, 849, 852, 858, 862, 865, 868, 869], "listen": 698, "liter": [133, 144], "literatur": 732, "littl": [21, 22, 70, 718, 734, 869], "live": [4, 857], "ll": 844, "load": [0, 2, 3, 138, 139, 140, 142, 143, 148, 156, 166, 179, 181, 184, 189, 190, 203, 204, 211, 234, 235, 236, 287, 305, 309, 317, 318, 333, 350, 430, 432, 434, 435, 690, 691, 695, 697, 698, 700, 716, 723, 725, 726, 738, 742, 749, 778, 780, 781, 782, 790, 810, 822, 823, 824, 831, 833, 837, 838, 839, 842, 845, 848, 852, 853, 856, 857, 858, 859, 865, 874], "load_cor": 848, "load_cora": [858, 859], "load_cora_data": [856, 859], "load_data": 825, "load_edg": 236, "load_feat": 234, "load_graph": [204, 571, 696, 705, 709, 742, 749, 753, 782, 790, 794, 841], "load_info": [696, 742, 782], "load_nod": 236, "load_partit": [4, 238, 700, 701], "load_partition_book": [4, 700, 701], "load_partition_feat": [700, 701], "load_state_dict": [848, 865], "load_subtensor": [697, 743, 783], "load_tensor": 701, "load_url": 865, "loader": [4, 41, 209, 210, 211, 290, 303, 308, 858, 875], "loader_cor": [848, 849], "local": [4, 23, 70, 197, 212, 230, 234, 237, 238, 297, 303, 350, 397, 402, 459, 567, 571, 691, 692, 695, 696, 697, 698, 700, 701, 778, 781, 786, 824, 833, 840, 849, 852, 856, 859, 869], "local_edg": 786, "local_nod": 786, "local_node_idx": 786, "local_partit": 4, "local_scop": [430, 431, 432, 433, 434, 462, 722, 729, 732, 734, 735, 762, 764, 765, 769, 772, 774, 775, 804, 807, 808, 813, 816, 817, 818, 842, 843, 856], "local_to_global_nid": 391, "local_var": 70, "localhost": 21, "localscratch": 833, "locat": [4, 146, 169, 230, 237, 612, 623, 691, 695, 700, 827], "lock": [10, 67, 89, 112, 322, 849], "log": [23, 132, 133, 144, 170, 200, 396, 401, 413, 423, 430, 431, 433, 435, 735, 775, 818, 843, 858, 859, 865, 868], "log_prob": 865, "log_softmax": [856, 859, 862, 865], "logic": [156, 869], "logical_and": 786, "login": 852, "logisticregress": 387, "logit": [361, 430, 431, 432, 433, 434, 435, 721, 726, 732, 734, 736, 772, 774, 776, 810, 816, 817, 819, 822, 823, 824, 827, 832, 840, 842, 856, 857, 859, 862, 865], "logit\uc73c\ub85c": 816, "logn": 436, "logp": [856, 859, 862], "logsigmoid": 865, "lollipop": 172, "long": [4, 14, 22, 59, 64, 68, 118, 131, 285, 338, 454, 461, 591, 687, 701, 708, 719, 721, 752, 793, 858, 862, 869], "longer": [863, 865, 872], "longest": [182, 574], "longtensor": [4, 224, 297, 300, 303, 308, 319, 321, 337, 388, 391, 418, 457, 458, 461, 562, 639, 698, 725, 744, 761, 784, 803, 824, 825, 841, 845, 858, 865], "look": [9, 21, 137, 171, 180, 182, 188, 219, 720, 722, 723, 732, 832, 833, 835, 838, 839, 841, 862, 865, 869], "lookup": [22, 857], "loop": [21, 62, 63, 116, 117, 181, 224, 345, 393, 399, 403, 405, 408, 409, 411, 412, 413, 416, 419, 424, 426, 436, 437, 438, 551, 559, 563, 573, 655, 670, 697, 698, 700, 701, 704, 720, 783, 789, 809, 823, 825, 848, 849, 858, 859, 865, 869], "loopi": 858, "loss": [4, 10, 387, 391, 430, 431, 432, 433, 434, 435, 459, 697, 698, 717, 718, 721, 723, 725, 726, 732, 734, 735, 736, 743, 744, 761, 762, 764, 766, 772, 774, 775, 776, 783, 784, 803, 804, 807, 809, 810, 816, 817, 818, 819, 822, 823, 824, 825, 832, 833, 834, 835, 840, 842, 843, 844, 848, 852, 853, 856, 857, 858, 859, 862, 865, 869, 874, 875], "loss_comput": 869, "loss_fcn": [697, 726, 743, 783, 822, 824, 852, 853], "loss_perm1": 858, "loss_perm2": 858, "loss\uac00": 810, "loss\ub97c": [809, 818, 819], "loss\uc5d0": 810, "lot": [22, 168, 186, 696, 719, 720, 734, 735], "low": [5, 238, 243, 290, 345, 401, 433, 435, 436, 438, 457, 458, 479, 571, 573, 698, 699, 713, 784, 821, 848, 859], "low2high": [433, 435], "lower": [22, 429, 695, 698, 741, 781, 842, 859, 868, 870, 872], "lowest": [178, 179], "lp": [457, 458, 838, 839], "lp_task": [838, 839], "lp_test_follow_index": 838, "lp_test_follow_indexes_path": 838, "lp_test_follow_label": 838, "lp_test_follow_labels_path": 838, "lp_test_follow_neg_dst": 838, "lp_test_follow_neg_index": 838, "lp_test_follow_neg_se": 838, "lp_test_follow_neg_src": 838, "lp_test_follow_se": 838, "lp_test_follow_seeds_path": 838, "lp_test_index": 839, "lp_test_indexes_path": 839, "lp_test_label": 839, "lp_test_labels_path": 839, "lp_test_like_index": 838, "lp_test_like_indexes_path": 838, "lp_test_like_label": 838, "lp_test_like_labels_path": 838, "lp_test_like_neg_dst": 838, "lp_test_like_neg_index": 838, "lp_test_like_neg_se": 838, "lp_test_like_neg_src": 838, "lp_test_like_se": 838, "lp_test_like_seeds_path": 838, "lp_test_neg_dst": 839, "lp_test_neg_index": 839, "lp_test_neg_se": 839, "lp_test_neg_src": 839, "lp_test_se": 839, "lp_test_seeds_path": 839, "lp_train_follow_se": 838, "lp_train_follow_seeds_path": 838, "lp_train_like_se": 838, "lp_train_like_seeds_path": 838, "lp_train_se": 839, "lp_train_seeds_path": 839, "lp_val_follow_index": 838, "lp_val_follow_indexes_path": 838, "lp_val_follow_label": 838, "lp_val_follow_labels_path": 838, "lp_val_follow_neg_dst": 838, "lp_val_follow_neg_index": 838, "lp_val_follow_neg_se": 838, "lp_val_follow_neg_src": 838, "lp_val_follow_se": 838, "lp_val_follow_seeds_path": 838, "lp_val_index": 839, "lp_val_indexes_path": 839, "lp_val_label": 839, "lp_val_labels_path": 839, "lp_val_like_index": 838, "lp_val_like_indexes_path": 838, "lp_val_like_label": 838, "lp_val_like_labels_path": 838, "lp_val_like_neg_dst": 838, "lp_val_like_neg_index": 838, "lp_val_like_neg_se": 838, "lp_val_like_neg_src": 838, "lp_val_like_se": 838, "lp_val_like_seeds_path": 838, "lp_val_neg_dst": 839, "lp_val_neg_index": 839, "lp_val_neg_se": 839, "lp_val_neg_src": 839, "lp_val_se": 839, "lp_val_seeds_path": 839, "lpe": 452, "lr": [4, 10, 387, 391, 430, 431, 432, 434, 435, 459, 697, 698, 721, 725, 726, 743, 744, 746, 783, 784, 787, 810, 822, 823, 824, 825, 832, 833, 840, 842, 843, 844, 852, 853, 856, 857, 858, 859, 862, 869, 874, 875], "lr1": [698, 744, 784], "lr2": [698, 744, 784], "lr_schedul": 824, "lru": [298, 322, 329], "lsc": 287, "lsc_2part": 701, "lsc_chunk": 701, "lstm": [425, 442, 460, 728, 768, 812, 830, 863, 864, 866, 869, 872], "lt": [14, 824, 825, 832, 833, 835, 838, 839], "lumo": [178, 179], "lut": 869, "lvert": [455, 728, 768, 812], "m": [5, 9, 21, 62, 63, 73, 91, 92, 93, 94, 100, 113, 126, 128, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 355, 392, 401, 407, 421, 423, 430, 431, 433, 436, 438, 444, 462, 569, 612, 613, 620, 623, 631, 632, 681, 682, 683, 684, 712, 714, 722, 726, 729, 733, 735, 756, 758, 765, 769, 773, 775, 797, 798, 800, 808, 810, 813, 818, 821, 825, 827, 833, 834, 842, 856, 858, 865, 868], "m_": [407, 711, 755, 796, 834, 842], "m_i": 407, "m_r": 458, "m_v": [834, 842], "machin": [4, 177, 178, 179, 230, 237, 238, 459, 695, 697, 698, 699, 700, 701, 702, 726, 795, 820, 828, 830, 840, 845, 852, 853, 858, 862, 865, 866, 869, 872, 876, 877], "machine_id": 4, "made": [181, 430, 431, 432, 434, 857, 869], "mag": [287, 701, 723, 786], "mag240m": 287, "mag_lsc_partit": 701, "maggi": 754, "magnitud": 859, "mag\uc758": 786, "mai": [4, 6, 20, 21, 41, 116, 186, 212, 218, 224, 234, 290, 293, 320, 357, 392, 421, 424, 545, 563, 644, 645, 692, 693, 695, 697, 698, 701, 709, 717, 728, 729, 730, 732, 733, 734, 735, 736, 739, 779, 821, 823, 833, 840, 841, 843, 845, 852, 857, 875], "mailbox": [5, 20, 100, 261, 262, 263, 264, 681, 682, 684, 712, 726, 729, 756, 769, 797, 810, 813, 842, 859, 862, 865, 869], "main": [4, 21, 210, 290, 697, 698, 724, 734, 774, 817, 827, 828, 833, 848, 849, 858, 859, 875], "mainland": 23, "mainli": [4, 229, 698], "maintain": [4, 6, 10, 27, 28, 114, 115, 116, 117, 126, 130, 131, 145, 244, 245, 247, 248, 285, 290, 338, 339, 342, 348, 356, 480, 481, 544, 558, 561, 638, 647, 648, 734, 852, 862, 869], "major": [144, 230, 237, 706, 725, 727, 734, 791, 833, 838, 852, 875], "make": [4, 8, 20, 21, 22, 70, 120, 122, 137, 140, 162, 171, 180, 182, 188, 198, 210, 212, 213, 214, 224, 227, 228, 239, 240, 243, 293, 297, 313, 388, 414, 420, 425, 430, 431, 439, 441, 445, 446, 448, 451, 479, 563, 567, 569, 671, 677, 687, 691, 692, 695, 696, 697, 698, 700, 702, 708, 712, 722, 723, 732, 734, 779, 786, 816, 821, 824, 830, 840, 841, 843, 846, 847, 862, 868, 869], "make_model": 869, "make_shar": 22, "makedir": [696, 742, 782, 838, 839], "manag": [286, 293, 296, 318, 698, 709, 821, 828, 832, 833, 835, 838, 839, 875], "mandatori": [21, 229, 837], "manhattan": [437, 551], "mani": [4, 22, 122, 212, 224, 303, 308, 563, 567, 690, 693, 698, 702, 705, 717, 727, 729, 824, 840, 841, 842, 843, 852, 862, 865, 869], "manifold": 416, "manipul": [0, 13, 22, 306, 859], "manner": [833, 868], "manual": [4, 101, 102, 155, 168, 186, 187, 193, 290, 393, 405, 408, 409, 411, 412, 413, 416, 419, 421, 424, 426, 700, 705, 820, 833, 842, 849, 852, 875], "manual_se": 874, "manylinux1_x86_64": 832, "map": [4, 5, 20, 26, 43, 46, 47, 74, 75, 101, 102, 103, 109, 121, 130, 131, 186, 218, 229, 232, 238, 297, 301, 305, 310, 320, 321, 325, 328, 336, 337, 338, 388, 390, 391, 413, 422, 431, 432, 436, 438, 440, 545, 639, 647, 653, 693, 699, 700, 718, 729, 730, 769, 785, 813, 841, 852, 858, 865, 869], "map_to_homo_eid": [4, 699, 785], "map_to_homo_nid": [4, 699, 785], "map_to_per_etyp": [4, 239, 699, 785], "map_to_per_ntyp": [4, 239, 699, 785], "mapper": 301, "mapperiterdatapip": 306, "margin": [735, 818], "mark": [144, 167, 220, 221, 222, 223, 241, 843], "marker": 868, "marketplac": 704, "markupsaf": [832, 833, 835, 838, 839], "mask": [22, 132, 133, 140, 144, 150, 154, 157, 158, 159, 160, 161, 162, 163, 170, 173, 176, 181, 184, 191, 192, 194, 197, 198, 205, 214, 229, 230, 237, 244, 430, 431, 432, 434, 448, 450, 451, 461, 480, 660, 687, 691, 695, 726, 731, 732, 736, 761, 776, 778, 781, 803, 815, 819, 845, 852, 856, 859, 862, 869], "massiv": [700, 701, 716], "master": [21, 165, 844, 848], "master_addr": 848, "master_port": 848, "mat": [634, 692, 695, 739, 741, 779, 781, 858], "mat_path": [695, 741, 781], "match": [4, 5, 9, 118, 199, 200, 297, 310, 355, 356, 359, 434, 462, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 566, 692, 739, 779, 827], "materi": [9, 89, 719, 841, 865], "materialize_data": 108, "math": [243, 409, 479, 649, 650, 712, 729, 789, 803, 818, 856, 858, 862], "mathbb": [711, 755, 796, 823, 824, 825, 865, 869], "mathbf": [409, 413, 418, 461], "mathcal": [242, 349, 361, 396, 399, 400, 401, 405, 407, 408, 409, 410, 411, 412, 414, 415, 416, 418, 419, 421, 422, 424, 425, 478, 504, 505, 576, 577, 653, 711, 712, 729, 730, 734, 735, 755, 756, 761, 769, 770, 774, 775, 796, 797, 803, 813, 814, 817, 818, 827, 834, 842, 843, 859, 862], "mathemat": [120, 242, 349, 398, 399, 410, 413, 419, 457, 458, 478, 612, 623, 713, 822, 823, 842, 856, 858], "mathrm": [118, 243, 393, 400, 405, 406, 409, 411, 412, 414, 415, 416, 418, 422, 425, 440, 442, 479, 729, 769, 813, 869], "matmul": [827, 857], "matplotlib": [823, 858, 862, 865, 868], "matric": [41, 62, 63, 118, 119, 183, 392, 409, 424, 448, 612, 615, 620, 621, 623, 632, 653, 705, 823, 826, 827, 856], "matrix": [0, 9, 13, 14, 30, 31, 32, 62, 63, 118, 119, 126, 131, 146, 169, 177, 248, 285, 338, 341, 342, 345, 348, 394, 402, 403, 404, 406, 412, 413, 416, 419, 426, 427, 436, 437, 438, 453, 458, 461, 463, 503, 504, 505, 506, 551, 569, 573, 578, 579, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 596, 597, 598, 600, 601, 602, 603, 604, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 653, 662, 663, 668, 672, 705, 713, 725, 732, 733, 772, 816, 820, 822, 823, 824, 825, 826, 841, 856, 857, 859, 860, 872], "matrix\uc774\ub2e4": 785, "matter": [21, 298, 442, 858, 859, 869], "mat\u6587\u4ef6\u4e0b\u8f7d\u5230\u76ee\u5f55": 739, "max": [5, 9, 73, 117, 229, 349, 351, 352, 389, 397, 400, 401, 414, 416, 422, 423, 441, 460, 483, 488, 505, 507, 509, 515, 523, 529, 555, 556, 578, 579, 616, 617, 618, 630, 655, 687, 708, 712, 714, 728, 729, 735, 736, 756, 758, 768, 769, 775, 776, 793, 797, 800, 812, 813, 818, 819, 827, 856, 858, 865, 868, 870, 872, 874], "max_": [408, 441], "max_allow_nod": 168, "max_cache_size_in_byt": [322, 329], "max_degre": [449, 689], "max_depth": 869, "max_dist": [454, 689], "max_in_degre": [398, 399, 400], "max_len": [453, 687, 689], "max_node_typ": 455, "max_num_nod": [168, 186, 687, 689], "max_num_v": 172, "max_queue_s": 233, "max_uva_thread": 290, "maxim": [6, 230, 233, 237, 387, 701, 842, 849, 865], "maximum": [6, 118, 119, 168, 172, 186, 398, 399, 400, 401, 408, 423, 448, 449, 450, 451, 453, 454, 455, 562, 598, 601, 672, 689, 734, 735, 818, 859, 863, 869, 872], "mayb": 21, "mb": [701, 830, 832, 847, 851, 855, 861, 864, 867, 871, 873, 877], "mcaulei": [135, 136], "mckee": 560, "mct": [433, 435], "md": [210, 821], "mean": [4, 5, 9, 10, 73, 117, 137, 147, 150, 154, 176, 177, 180, 210, 238, 290, 295, 297, 305, 308, 310, 315, 316, 321, 337, 353, 354, 361, 389, 400, 401, 413, 414, 416, 419, 422, 423, 425, 430, 431, 433, 436, 437, 438, 439, 440, 442, 443, 445, 446, 484, 489, 505, 507, 510, 516, 524, 530, 552, 553, 555, 556, 598, 602, 638, 639, 647, 655, 675, 698, 708, 712, 714, 720, 721, 722, 725, 726, 728, 729, 732, 735, 736, 756, 758, 765, 768, 769, 772, 775, 776, 784, 793, 797, 800, 807, 808, 810, 812, 813, 816, 818, 819, 822, 823, 824, 827, 832, 833, 835, 840, 842, 843, 845, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 875], "mean_nod": [431, 432, 433, 434, 734, 774, 817, 844], "mean_udf": 842, "meaning": 733, "meaningless": 116, "meant": [22, 705], "measur": [13, 120, 161, 242, 243, 345, 349, 433, 435, 436, 438, 457, 458, 478, 479, 573, 689, 833, 859, 869, 875], "mechan": [5, 20, 22, 453, 454, 455, 724, 733, 824, 858, 859, 865, 869, 870, 872, 875], "medium": [14, 287], "meet": [394, 823], "mem": [10, 830, 847, 851, 855, 861, 864, 867, 871, 873, 877], "member": [21, 432, 434, 712, 842, 843, 845, 858, 874], "memmap": 701, "memo": 5, "memori": [4, 9, 10, 14, 67, 89, 112, 126, 131, 184, 210, 233, 247, 248, 285, 289, 291, 297, 298, 303, 305, 308, 310, 312, 317, 318, 322, 330, 333, 338, 345, 360, 436, 438, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 563, 573, 645, 697, 701, 708, 713, 716, 719, 720, 726, 810, 821, 828, 836, 837, 838, 839, 843, 852, 862, 869], "meng": 754, "mention": [698, 700, 701, 720, 869], "merg": [21, 227, 228, 685, 709, 712, 714, 730, 732, 794, 844, 858, 859], "merit": 22, "merlin": 210, "messag": [1, 4, 13, 53, 73, 91, 92, 93, 94, 100, 113, 127, 130, 131, 178, 179, 208, 210, 212, 213, 214, 217, 218, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 393, 394, 395, 396, 399, 401, 403, 405, 408, 409, 411, 412, 413, 414, 416, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 433, 434, 435, 483, 484, 485, 486, 488, 489, 490, 491, 505, 509, 510, 511, 512, 515, 516, 517, 518, 523, 524, 525, 526, 529, 530, 531, 532, 546, 547, 548, 549, 550, 567, 639, 676, 677, 678, 679, 680, 681, 682, 683, 684, 700, 710, 718, 720, 721, 722, 723, 727, 728, 730, 731, 734, 736, 754, 795, 800, 803, 804, 807, 809, 810, 815, 819, 820, 835, 841, 843, 857, 859, 860, 863, 865, 870, 872], "message_func": [73, 91, 92, 93, 94, 100, 113, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 546, 547, 548, 549, 550, 712, 714, 715, 756, 758, 759, 797, 800, 801, 842, 857, 859, 862, 865, 869], "meta": [4, 148, 235, 291, 314, 391, 459, 693, 699, 701, 862], "meta_g": 72, "metadata": [4, 234, 238, 292, 294, 296, 297, 309, 314, 317, 693, 698, 699, 700, 701, 702, 725, 786, 832, 833, 835, 836, 837, 838, 839, 875], "metadata_path": [838, 839], "metagraph": [4, 13, 26, 101, 102, 117, 119, 122, 127, 130, 131, 173, 218, 244, 338, 339, 343, 344, 431, 480, 544, 552, 561, 644, 647, 674, 685, 693, 709, 753, 794], "metapath": [356, 391, 562, 565, 566, 653], "method": [1, 22, 89, 112, 160, 194, 208, 209, 210, 215, 216, 218, 219, 230, 237, 238, 289, 300, 303, 310, 313, 345, 349, 388, 389, 392, 397, 409, 411, 412, 425, 436, 438, 478, 507, 546, 548, 562, 573, 645, 693, 705, 708, 716, 717, 720, 721, 731, 732, 833, 834, 840, 841, 843, 845, 849, 856, 857], "methodologi": [639, 720, 735], "meti": [4, 6, 209, 230, 237, 238, 357, 358, 560, 701, 745, 786, 852], "metirs\ub97c": 786, "metis_partition_assign": [209, 560], "metis\u4ec5\u5e73\u8861\u6bcf\u4e2a\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u6570": 745, "metis\u5212\u5206\u7684\u597d\u5904\u5728\u4e8e": 745, "metis\uc640": 786, "metis\uc740": 786, "metis\uc758": 786, "metric": [21, 345, 436, 437, 438, 551, 573, 720, 832, 835, 843, 852, 853], "metric\uc744": 806, "mf": [833, 875], "mfg": [4, 127, 131, 208, 209, 210, 212, 213, 214, 218, 219, 718, 721, 723, 804, 807, 809, 834, 835, 853], "mfg\uac00": 803, "mfg\ub4e4\ub85c": 803, "mfg\ub4e4\uc740": 803, "mfg\ub4e4\uc758": [803, 804, 809], "mfg\ub85c": 803, "mfg\ub97c": [803, 809], "mfg\uc5d0": 808, "mfg\uc5d0\uc11c": 808, "mfg\uc5d0\uc11c\uc758": 803, "mfg\uc758": [803, 804, 809], "mfg\uc778": 808, "mgf\uac00": 808, "mha": 824, "michal": 845, "michel": 167, "micro": 859, "microbenchmark": 828, "microsoft": [151, 152, 287, 701], "middl": [142, 143], "might": [356, 395, 704, 714, 734, 833, 849, 858], "migrat": 21, "mikhail": 857, "million": [459, 716, 726, 820, 833, 835], "min": [5, 9, 73, 117, 241, 389, 400, 401, 423, 485, 490, 505, 507, 511, 517, 525, 531, 555, 556, 614, 655, 687, 712, 714, 728, 735, 756, 758, 768, 775, 797, 800, 807, 812, 818, 827, 858], "min_num_v": 172, "mind": [697, 858], "mine": [132, 171], "minesweep": 171, "mini": [4, 7, 165, 168, 172, 186, 208, 210, 218, 306, 695, 697, 698, 715, 716, 719, 723, 729, 734, 783, 820, 831, 833, 844, 848], "mini_batch": [718, 723], "mini_cn": 743, "mini_feature_dataset": 693, "mini_featureless_dataset": 693, "mini_hetero_dataset": 693, "mini_multi_dataset": 693, "minibatch": [4, 208, 209, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 223, 289, 293, 295, 301, 302, 303, 306, 308, 315, 319, 325, 336, 337, 716, 720, 724, 804, 830, 831, 832, 833, 834, 835, 837, 844, 876, 877], "minibatcher_default": [293, 301], "minibatchtransform": [290, 295, 307, 313, 718], "minigcdataset": [695, 741, 781], "minim": [8, 21, 22, 238, 358, 387, 693, 700, 701, 723, 724, 735, 858, 859], "minimum": [6, 9, 172, 186, 297, 401, 423, 598, 603, 671, 712, 734, 858], "minji": [856, 858, 859, 862], "minkowski": [437, 551], "minst": 169, "minut": [164, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "misc": 13, "miss": [288, 297, 298, 693, 857, 859], "miss_rat": [288, 298], "mix": [9, 14, 307, 423, 710, 712, 795, 797, 858, 860, 872], "mixtur": [183, 416], "mkdir": [821, 852], "ml": 173, "mle": 865, "mlp": [407, 423, 428, 452, 732, 734, 774, 817, 843], "mlppredictor": [732, 772, 816, 843], "mlp\ub97c": 816, "mlsoar": 754, "mm": 858, "mmap": [838, 839], "mmap_mod": 317, "mnist": [14, 169, 868], "mod": [389, 730, 770, 814], "mod_arg": [389, 730, 770, 814], "mod_kwarg": [389, 432, 730, 770, 814], "mode": [4, 147, 164, 166, 174, 175, 184, 195, 209, 215, 233, 357, 358, 460, 462, 696, 742, 782, 821, 823, 862, 869], "modelmodel_opt": 869, "model_state_dict": 848, "model_typ": 452, "model_zoo": 865, "modelnet": 14, "modif": [448, 451, 697, 852, 853], "modifi": [8, 148, 149, 155, 185, 187, 193, 198, 290, 297, 317, 318, 325, 448, 451, 641, 642, 643, 723, 733, 820, 821, 848, 852], "modul": [4, 6, 8, 13, 18, 21, 233, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 662, 663, 664, 665, 666, 668, 669, 672, 688, 689, 697, 710, 716, 718, 720, 721, 723, 725, 726, 731, 732, 734, 735, 736, 762, 763, 764, 765, 766, 768, 770, 772, 774, 775, 776, 804, 806, 807, 808, 809, 810, 811, 812, 814, 816, 817, 818, 819, 822, 823, 824, 825, 827, 830, 832, 833, 834, 835, 840, 843, 844, 846, 847, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "modular": 701, "moduledict": [431, 433, 722, 730, 765, 770, 808, 814], "modulelist": [689, 720, 721, 725, 726, 810, 823, 824, 832, 833, 852, 853, 857, 858, 859, 865, 875], "mol": [178, 179], "mol_encod": 824, "molass": 754, "molecul": [177, 178, 179, 447], "molecular": [178, 179, 195, 395, 442, 447, 455, 844], "moleculenet": 179, "molhiv": [138, 694, 740, 780, 824], "moment": [178, 179, 401, 423, 560], "moment3": [401, 423], "moment4": [401, 423], "moment5": [401, 423], "monitor": 868, "monoton": 328, "mont": [433, 435], "month": [163, 181], "monthli": [149, 185], "more": [3, 4, 9, 20, 21, 22, 27, 28, 66, 91, 95, 96, 120, 122, 156, 161, 168, 212, 214, 224, 228, 243, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 292, 293, 294, 298, 305, 317, 328, 342, 395, 413, 430, 431, 432, 434, 459, 479, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 562, 563, 568, 569, 639, 645, 687, 693, 695, 696, 697, 698, 701, 705, 709, 713, 715, 716, 717, 718, 719, 723, 724, 725, 728, 730, 732, 734, 736, 753, 794, 820, 821, 823, 825, 827, 833, 838, 839, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874], "moreov": [118, 119], "most": [1, 14, 116, 126, 131, 147, 151, 152, 159, 182, 224, 247, 248, 285, 338, 433, 435, 562, 639, 695, 696, 698, 699, 708, 712, 717, 722, 726, 732, 733, 734, 736, 827, 840, 849, 869], "mostli": 22, "motif": [141, 142, 143, 189, 190, 859], "mount": 852, "move": [4, 89, 108, 303, 308, 584, 587, 692, 699, 723, 823, 833, 869, 875], "movement": [244, 245, 339, 343, 344, 480, 481, 544, 724], "movi": [43, 173, 858], "movielen": 173, "mp": [293, 833, 848, 874, 875], "mpicc": [700, 786], "mpirun": [700, 786], "mpmath": [832, 833, 835, 838, 839], "mpnn": [422, 442], "mq": 569, "msbuild": 821, "msg": [261, 262, 263, 264, 421, 856, 857, 858, 869], "mu": [178, 179, 416, 455], "mu_": 421, "mu_k": 416, "much": [4, 122, 139, 243, 297, 479, 563, 567, 713, 820, 828, 834, 838, 839, 852, 857, 859, 865, 869], "mufei": [857, 859, 865], "muhyun": 795, "mul": [9, 257, 258, 271, 272, 281, 282, 448, 451, 499, 500, 504, 505, 522, 523, 524, 525, 526, 527, 540, 541, 626, 712, 756, 797, 827], "mulbackward0": 9, "multi": [9, 41, 149, 158, 162, 185, 191, 194, 293, 302, 398, 405, 409, 410, 411, 412, 421, 448, 451, 453, 454, 455, 457, 459, 552, 553, 648, 689, 695, 701, 706, 719, 723, 735, 736, 820, 830, 831, 832, 835, 840, 841, 842, 850, 851, 852, 857, 860, 870, 872, 876, 877], "multi30k": 869, "multi_update_al": [431, 433, 714, 730, 758, 770, 800, 814], "multiclass": [165, 432, 433, 434, 435, 461, 825, 833, 875], "multidigraph": [72, 644], "multigraph": [48, 66, 118, 119, 704, 789, 865], "multihead": 443, "multiheadattent": 869, "multiheadgatlay": 859, "multilabel": 461, "multilay": [212, 213, 214, 303, 315, 567, 723, 732], "multilayerdropoutsampl": [761, 803], "multilayerfullneighborsampl": [761, 762, 763, 764, 766, 803, 804, 806, 807, 809], "multilayerneighborsampl": [4, 210, 698, 744, 761, 784, 803, 852, 853], "multilevel": [357, 358], "multinomi": [721, 764, 807], "multipl": [0, 4, 7, 9, 14, 22, 26, 27, 28, 36, 37, 41, 43, 46, 47, 48, 51, 52, 54, 55, 56, 57, 60, 61, 65, 74, 75, 77, 87, 88, 90, 91, 92, 95, 96, 103, 107, 118, 126, 128, 129, 130, 131, 227, 228, 238, 247, 248, 285, 286, 288, 290, 291, 296, 297, 298, 303, 308, 309, 315, 316, 318, 338, 345, 347, 350, 388, 389, 391, 396, 423, 432, 434, 436, 437, 438, 447, 448, 451, 459, 460, 503, 504, 505, 506, 551, 555, 556, 559, 562, 566, 567, 571, 573, 576, 577, 587, 612, 620, 621, 623, 638, 639, 647, 653, 657, 687, 689, 697, 698, 699, 701, 704, 708, 714, 719, 722, 724, 730, 734, 735, 736, 800, 821, 823, 824, 828, 833, 838, 839, 840, 843, 849, 852, 856, 857, 859, 860, 865, 869, 872, 874, 875], "multipli": [5, 183, 214, 401, 423, 430, 431, 555, 556, 612, 613, 620, 623, 628, 631, 632, 712, 726, 733, 822, 827, 857, 869], "multiprocess": [4, 290, 724, 833, 874, 875], "multiprocessor": 290, "multpli": 733, "music": [137, 161], "must": [4, 6, 9, 27, 28, 34, 35, 36, 37, 43, 46, 48, 51, 53, 54, 55, 57, 58, 60, 61, 73, 74, 87, 88, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 113, 118, 119, 122, 125, 130, 131, 138, 139, 140, 147, 164, 174, 175, 197, 198, 205, 209, 210, 212, 214, 216, 217, 218, 239, 240, 244, 247, 248, 285, 288, 294, 296, 297, 298, 302, 303, 308, 315, 316, 317, 318, 338, 339, 341, 343, 344, 346, 347, 348, 359, 389, 393, 396, 401, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 419, 423, 424, 425, 431, 432, 433, 434, 435, 438, 461, 480, 506, 507, 544, 554, 555, 556, 557, 560, 564, 565, 566, 567, 568, 569, 570, 573, 574, 578, 579, 598, 601, 602, 603, 605, 614, 632, 637, 639, 647, 685, 691, 693, 695, 698, 699, 702, 706, 707, 709, 712, 719, 722, 753, 792, 794, 805, 827, 841, 857, 862], "mutag": [25, 165, 168, 170, 186, 430, 434, 435, 734, 774, 817], "mutat": [13, 70, 862, 865], "mutual": [149, 161, 185, 214, 218, 243, 479, 566, 704, 874], "mxnet": [4, 9, 13, 21, 23, 199, 200, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 695, 708, 722, 727, 734, 736, 767, 811, 817, 820, 828, 860, 872], "mxnet\uacfc": 819, "mxnet\uc5d0\uc11c\ub294": 781, "mxnet\uc758": 793, "mxnet\uc774\ub098": 808, "my": [701, 702], "my_agg_func": 389, "my_sample_subgraph": [300, 313], "my_train_script": 702, "myadd": 22, "mydata": 701, "mydatapars": 693, "mydataset": [691, 692, 738, 778, 779], "mygraph": [701, 702], "myrepo": 701, "mysubgraphsampl": [300, 313], "n": [6, 9, 14, 20, 21, 62, 63, 126, 129, 186, 190, 238, 241, 248, 297, 310, 320, 321, 336, 337, 345, 346, 349, 357, 358, 361, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 461, 478, 503, 506, 554, 569, 573, 574, 578, 579, 612, 613, 614, 617, 618, 620, 623, 630, 631, 632, 637, 646, 649, 650, 665, 673, 682, 683, 684, 687, 699, 712, 716, 725, 729, 756, 760, 761, 769, 797, 802, 803, 807, 813, 822, 823, 824, 825, 827, 828, 834, 838, 839, 842, 856, 858, 859, 862, 865, 868, 869, 873], "n0": 297, "n1": [297, 321, 328, 337, 454], "n2": [297, 321, 328, 337, 454], "n2e": 674, "n3": [328, 857], "n_": [393, 396, 403, 404, 405, 406, 409, 411, 412, 414, 415, 416, 417, 419, 421, 425], "n_0": 122, "n_1": 122, "n_base": 857, "n_class": [435, 697, 726, 732, 734, 743, 772, 774, 783, 810, 816, 817, 852, 853], "n_click": [731, 771, 815], "n_commun": 183, "n_dislik": [731, 771, 815], "n_edg": [735, 762, 775, 804, 810, 818, 825, 869], "n_epoch": [210, 211, 857], "n_etyp": 418, "n_feat": 462, "n_featur": [735, 736, 775, 776, 818, 819], "n_follow": [731, 771, 815], "n_graph": 183, "n_head": [444, 452], "n_hetero_featur": [731, 736, 771, 776, 815, 819], "n_hidden": [726, 810, 852, 853, 857], "n_hidden_lay": 857, "n_i": [122, 439, 440, 441, 446, 857], "n_item": [731, 771, 815], "n_iter": 442, "n_job": 229, "n_k": 122, "n_kernel": 416, "n_label": [736, 776, 819], "n_layer": [442, 443, 444, 761, 763, 803, 806, 852, 853], "n_max_click": [731, 771, 815], "n_node": [183, 845, 869], "n_search": 848, "n_step": 418, "n_t": [431, 432, 433], "n_token": 869, "n_train": 845, "n_user": [731, 771, 815], "n_user_class": [731, 736, 771, 776, 815, 819], "n_val": 845, "naive_propagate_attent": 869, "name": [0, 4, 5, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 45, 46, 47, 48, 52, 53, 55, 57, 58, 60, 61, 62, 63, 68, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 133, 138, 156, 159, 162, 165, 168, 173, 178, 179, 186, 197, 200, 205, 208, 212, 214, 217, 218, 219, 220, 221, 222, 223, 234, 235, 238, 239, 240, 244, 245, 247, 248, 287, 289, 291, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 318, 319, 322, 333, 339, 343, 344, 350, 389, 401, 423, 459, 480, 481, 482, 505, 544, 552, 554, 555, 556, 557, 558, 559, 560, 562, 564, 566, 567, 568, 569, 570, 571, 575, 576, 577, 578, 579, 644, 646, 647, 653, 655, 660, 661, 662, 663, 665, 668, 669, 671, 672, 673, 675, 677, 691, 692, 693, 694, 695, 698, 699, 700, 701, 706, 709, 712, 717, 718, 723, 732, 734, 738, 739, 740, 741, 744, 746, 753, 778, 779, 780, 781, 784, 786, 787, 791, 794, 821, 827, 832, 835, 837, 838, 839, 842, 843, 845, 852, 853, 857, 865, 869, 874], "namedrockunit": 144, "namedtupl": 862, "namespac": [1, 22, 133, 144, 712, 820], "name\u76ee\u5f55\u4e2d": 739, "nan": [346, 448, 451, 665, 856, 859], "narrow_row": [729, 769, 813], "nation": 166, "nativ": [8, 291, 697, 717, 821, 824, 827], "nativelayernormbackward": 444, "natur": [560, 733, 824, 858, 862, 868, 869], "nblink": 718, "nc": [838, 839], "nc_task": [838, 839], "nc_test_id": 839, "nc_test_ids_path": 839, "nc_test_item_id": 838, "nc_test_item_ids_path": 838, "nc_test_item_label": 838, "nc_test_item_labels_path": 838, "nc_test_label": 839, "nc_test_labels_path": 839, "nc_test_user_id": 838, "nc_test_user_ids_path": 838, "nc_test_user_label": 838, "nc_test_user_labels_path": 838, "nc_train_id": 839, "nc_train_ids_path": 839, "nc_train_item_id": 838, "nc_train_item_ids_path": 838, "nc_train_item_label": 838, "nc_train_item_labels_path": 838, "nc_train_label": 839, "nc_train_labels_path": 839, "nc_train_user_id": 838, "nc_train_user_ids_path": 838, "nc_train_user_label": 838, "nc_train_user_labels_path": 838, "nc_val_id": 839, "nc_val_ids_path": 839, "nc_val_item_id": 838, "nc_val_item_ids_path": 838, "nc_val_item_label": 838, "nc_val_item_labels_path": 838, "nc_val_label": 839, "nc_val_labels_path": 839, "nc_val_user_id": 838, "nc_val_user_ids_path": 838, "nc_val_user_label": 838, "nc_val_user_labels_path": 838, "nccl": [833, 874, 875], "nci1": 165, "ndarrai": [22, 27, 54, 95, 96, 125, 131, 183, 205, 247, 285, 338, 705, 708, 749, 790, 821, 858], "ndarraypartit": 459, "ndarray\u7c7b\u578b\u4f5c\u4e3aapi\u7684\u8f93\u5165": 752, "ndarri": 793, "ndata": [4, 5, 9, 28, 34, 35, 43, 54, 56, 64, 71, 75, 77, 93, 94, 95, 96, 100, 103, 108, 113, 115, 117, 122, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 167, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 215, 217, 219, 222, 238, 244, 247, 339, 343, 344, 355, 387, 401, 430, 431, 432, 433, 434, 435, 448, 452, 462, 480, 544, 556, 557, 558, 560, 561, 569, 575, 577, 578, 579, 644, 645, 646, 647, 650, 659, 660, 665, 666, 667, 669, 671, 672, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 693, 695, 697, 698, 700, 701, 706, 707, 709, 712, 713, 722, 726, 732, 733, 734, 735, 736, 741, 743, 744, 745, 750, 751, 753, 756, 757, 761, 762, 764, 765, 766, 772, 773, 774, 775, 776, 781, 783, 784, 786, 791, 792, 794, 797, 799, 803, 804, 807, 808, 809, 810, 816, 817, 818, 819, 822, 823, 824, 825, 840, 841, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874], "ndata_pars": [148, 693], "ndata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 217, 244, 245, 339, 342, 343, 344, 348, 480, 481, 544, 553, 557, 558, 575, 644, 658, 659, 666, 672, 685, 693, 700, 701, 705, 706, 708, 734, 749, 750, 752, 790, 791, 793, 817, 841, 844, 845], "nearbi": [387, 391], "nearest": [14, 345, 436, 438, 573, 735, 818], "nearli": 869, "necessari": [4, 21, 41, 210, 212, 214, 218, 229, 569, 639, 713, 718, 719, 736, 806, 819, 834, 844, 848, 852, 869], "necessarili": [4, 131, 338, 644, 722, 834, 842, 865], "need": [4, 5, 6, 21, 48, 57, 65, 77, 89, 118, 138, 139, 140, 145, 212, 227, 228, 238, 244, 245, 293, 295, 303, 308, 310, 315, 316, 339, 343, 344, 345, 357, 358, 392, 420, 430, 431, 432, 433, 434, 435, 436, 438, 460, 480, 481, 544, 545, 573, 578, 579, 645, 692, 693, 698, 699, 700, 701, 702, 708, 709, 713, 714, 717, 720, 721, 722, 723, 724, 728, 729, 730, 732, 733, 734, 735, 736, 785, 793, 794, 821, 827, 832, 833, 834, 837, 838, 839, 840, 843, 844, 845, 852, 853, 865, 869, 874, 875], "needham": 843, "neg": [4, 6, 7, 13, 120, 139, 161, 163, 184, 212, 214, 217, 218, 224, 225, 239, 240, 293, 297, 301, 303, 307, 308, 315, 316, 319, 387, 391, 398, 409, 411, 412, 483, 488, 509, 515, 523, 529, 563, 564, 566, 567, 568, 569, 671, 693, 724, 735, 764, 827, 831, 832, 838, 839, 853, 857, 858, 862], "neg_dst": [735, 775, 818, 853], "neg_eid": 843, "neg_featur": 853, "neg_g": [735, 775, 818], "neg_graph": 853, "neg_pair_graph": [4, 218], "neg_ratio": 139, "neg_sampl": [4, 218, 224, 225, 303, 319], "neg_scor": [735, 764, 775, 807, 818, 843, 853], "neg_src": [735, 775, 818, 853], "neg_u": 843, "neg_v": [391, 843], "neg_weight": 387, "negat": [596, 827], "negative_edge_dst": [139, 853], "negative_edge_src": [139, 853], "negative_graph": [735, 764, 775, 807, 818], "negative_ratio": [297, 307, 319], "negative_s": [387, 391], "negative_sampl": [4, 218, 224, 225, 226, 764, 807], "negative_slop": [398, 409, 411, 412], "negativesampl": [319, 721, 724, 764, 807], "neghborhood": 832, "neglig": 22, "neigh": [729, 769, 813], "neighbor": [4, 13, 14, 171, 210, 212, 213, 214, 217, 218, 232, 239, 240, 243, 297, 300, 303, 308, 313, 315, 316, 342, 345, 356, 395, 398, 399, 400, 408, 409, 416, 419, 424, 436, 437, 438, 479, 551, 562, 564, 566, 567, 568, 569, 570, 573, 578, 579, 664, 695, 716, 717, 720, 723, 724, 725, 735, 736, 761, 803, 818, 827, 831, 840, 842, 843, 844, 856, 857, 859, 865], "neighbor_match": 6, "neighbor_sampling_overview": 718, "neighborhood": [1, 4, 212, 218, 295, 297, 303, 308, 315, 328, 336, 337, 343, 344, 430, 431, 432, 434, 562, 567, 568, 639, 698, 720, 725, 736, 762, 766, 804, 809, 840, 857, 858, 859, 860, 872], "neighborsampl": [213, 218, 303, 315, 697, 718, 720, 723, 743, 783], "neighborsamplerimpl": [303, 308], "neighbor\ub4e4\uc5d0": 781, "neighbour": [401, 423], "neighbourhood": [423, 858], "neither": [168, 578, 579], "nelement": 865, "neo4j": 843, "neq": 858, "net": [423, 448, 450, 451, 462, 856, 859], "net_typ": 233, "network": [4, 13, 72, 134, 141, 142, 143, 145, 149, 150, 154, 155, 164, 165, 166, 167, 175, 176, 183, 185, 187, 189, 190, 192, 193, 209, 210, 217, 233, 241, 242, 287, 295, 303, 308, 314, 336, 337, 346, 361, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 405, 407, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 424, 426, 427, 428, 430, 431, 432, 433, 434, 435, 440, 443, 444, 447, 460, 462, 463, 478, 554, 562, 564, 653, 658, 661, 665, 669, 672, 689, 697, 698, 700, 701, 702, 704, 705, 710, 714, 716, 722, 723, 728, 732, 733, 735, 749, 761, 790, 803, 820, 824, 826, 827, 828, 829, 830, 841, 842, 844, 845, 846, 847, 848, 861, 862, 865, 870, 871, 874, 875], "networkx": [72, 125, 228, 247, 462, 644, 646, 705, 749, 790, 823, 832, 833, 835, 838, 839, 858, 859, 862, 865, 868], "networkx\ub294": 790, "network\ub97c": 802, "neural": [4, 141, 142, 143, 165, 179, 183, 189, 190, 192, 210, 217, 241, 242, 295, 303, 308, 314, 336, 337, 346, 393, 394, 396, 397, 402, 407, 414, 415, 417, 418, 420, 422, 428, 430, 431, 432, 433, 434, 435, 440, 443, 444, 462, 554, 562, 665, 669, 672, 689, 710, 714, 716, 722, 723, 728, 733, 735, 761, 803, 820, 824, 826, 827, 828, 830, 840, 841, 842, 844, 846, 847, 848, 856, 861, 865, 870, 871, 874, 875], "neurip": [212, 297, 303, 315, 567], "neuron": 858, "neutral": [184, 862], "never": [233, 437, 551, 718], "nevertheless": 699, "new": [0, 1, 3, 4, 26, 27, 28, 34, 40, 70, 89, 114, 115, 116, 117, 118, 119, 122, 138, 140, 142, 143, 159, 210, 229, 244, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 297, 322, 330, 339, 342, 343, 344, 349, 355, 356, 389, 391, 399, 406, 408, 421, 424, 430, 431, 434, 478, 544, 557, 558, 559, 560, 561, 565, 567, 568, 569, 570, 578, 579, 596, 634, 638, 639, 653, 654, 655, 670, 675, 698, 699, 701, 708, 709, 716, 719, 722, 794, 803, 827, 828, 829, 833, 840, 841, 842, 843, 844, 852, 856, 857, 862, 865, 869, 870, 872], "new_cent": [430, 431], "new_d": [139, 140], "new_dataset": 138, "new_edge_feat": [406, 417], "new_edges_mask": [761, 803], "new_etyp": 655, "new_g": [26, 130, 356, 652, 653, 654, 655, 657, 658, 659, 662, 663, 664, 666, 668, 670], "new_g1": 26, "new_g2": [26, 130], "new_label": 461, "new_node_feat": [406, 409, 417], "new_node_id": [430, 431], "new_val": 827, "newer": [300, 313], "newg": 841, "newh": 70, "newli": [114, 115, 848], "newman": 167, "next": [301, 303, 308, 564, 566, 645, 689, 693, 699, 701, 723, 766, 809, 832, 835, 843, 858, 862, 869], "next_lg_x": 858, "next_x": 858, "nf": [702, 787], "nfeat": [396, 406, 409, 415, 432, 433, 434, 435, 450, 451, 458, 700, 701], "ngc": 833, "nh": 824, "nice": [22, 734, 829], "nid": [4, 10, 26, 95, 96, 130, 217, 219, 220, 222, 223, 238, 244, 339, 343, 344, 430, 459, 480, 544, 557, 558, 560, 575, 639, 644, 684, 697, 698, 699, 701, 709, 715, 743, 744, 753, 759, 761, 783, 784, 785, 786, 794, 801, 803, 835, 841, 853, 869], "nid2localnid": 4, "nid2partid": 4, "nid_het2hom": 699, "nid_hom2het": 699, "nid_offset": 699, "nid_rang": 786, "nightli": 828, "nine": 165, "niter": 858, "nk": [345, 436, 438, 573], "nl": 133, "nlh": [716, 760, 802], "nll_loss": [856, 859, 862], "nlp": [184, 869], "nmap": 852, "nn": [10, 13, 14, 21, 121, 210, 211, 345, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 573, 687, 689, 697, 698, 713, 718, 720, 721, 722, 723, 725, 726, 727, 730, 732, 734, 735, 736, 743, 757, 762, 763, 764, 765, 766, 768, 769, 770, 772, 774, 775, 776, 783, 784, 799, 804, 806, 807, 808, 809, 810, 811, 814, 816, 817, 818, 819, 822, 823, 824, 825, 827, 832, 833, 835, 840, 842, 843, 844, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "nnz": [12, 30, 31, 62, 63, 581, 584, 587, 589, 591, 593, 594, 595, 596, 604, 607, 609, 611, 612, 614, 615, 616, 617, 618, 619, 621, 622, 623, 624, 626, 630, 632, 633, 634, 827], "nn\u6a21\u5757": [767, 768, 770], "nn\u6a21\u5757\u4e2d": 767, "nn\u6a21\u5757\u53ef\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u8f93\u5165\u4e2d\u91cd\u590d\u4f7f\u7528": 769, "nn\u6a21\u5757\u662f\u7528\u6237\u6784\u5efagnn\u6a21\u578b\u7684\u57fa\u672c\u6a21\u5757": 767, "nn\u6a21\u5757\u7684api\u53c2\u8003": 766, "nn\u6a21\u5757\u7684forward\u51fd\u6570": [754, 767], "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [754, 767], "nn\u6a21\u5757\u7684\u7236\u7c7b\u53d6\u51b3\u4e8e\u540e\u7aef\u6240\u4f7f\u7528\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 767, "nn\u6a21\u5757\u76f8\u6bd4": 769, "nn\u6a21\u5757\u989d\u5916\u589e\u52a0\u4e861\u4e2a\u53c2\u6570": 769, "no_grad": [736, 776, 819, 824, 833, 835, 843, 852, 853, 856, 874, 875], "no_subtree_check": 852, "noam": 869, "noamopt": 869, "node": [0, 5, 6, 7, 9, 13, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 39, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 222, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 261, 262, 263, 264, 285, 287, 291, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 312, 313, 315, 316, 318, 319, 320, 321, 326, 328, 336, 337, 338, 339, 342, 343, 344, 345, 346, 348, 349, 355, 356, 357, 358, 361, 387, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 461, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 637, 638, 639, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 658, 659, 660, 661, 662, 663, 665, 666, 667, 668, 670, 671, 672, 673, 674, 678, 679, 680, 681, 682, 683, 685, 687, 689, 693, 694, 697, 699, 700, 701, 703, 704, 707, 709, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 728, 729, 730, 731, 733, 734, 735, 740, 751, 752, 753, 756, 758, 761, 765, 769, 771, 772, 775, 776, 780, 781, 785, 786, 791, 792, 793, 794, 796, 797, 800, 803, 804, 806, 808, 810, 815, 816, 817, 818, 819, 820, 822, 823, 824, 825, 827, 830, 831, 834, 837, 842, 843, 844, 846, 847, 849, 854, 855, 856, 857, 858, 859, 860, 862, 868, 869, 872, 874, 876, 877], "node1": 858, "node2": 858, "node2vec": [564, 840], "node_activ": 865, "node_activation_hidden_s": 865, "node_attr": [25, 247, 646], "node_attr_dtyp": 786, "node_attr_schem": [4, 47], "node_attribut": [297, 328], "node_classif": [309, 835, 838, 839], "node_color": [823, 858, 862, 865, 868], "node_count_check": 131, "node_data": [309, 693, 701, 786], "node_degre": [721, 825], "node_emb": [387, 391, 701, 786, 852], "node_embed": [735, 775, 818], "node_feat": [238, 318, 396, 401, 406, 407, 409, 415, 417, 423, 687, 689, 700, 701, 745, 786], "node_feat_0": 839, "node_feat_0_path": 839, "node_feat_1": 839, "node_feat_1_path": 839, "node_feat_dim": [713, 757, 799], "node_feat_nam": [660, 671], "node_feat_out": 407, "node_feat_s": 138, "node_featur": [295, 301, 305, 717, 721, 723, 725, 732, 735, 736, 772, 775, 776, 816, 818, 819, 832, 833, 835, 845, 853, 875], "node_feature_kei": [295, 717, 718, 720, 721, 723, 724, 725, 832, 833, 835, 875], "node_g": 865, "node_gener": 548, "node_hidden_s": 865, "node_id": [302, 305, 326, 430, 431, 693, 700, 786, 857], "node_id_field": 693, "node_ids_item": 299, "node_ids_us": 299, "node_in_feat": 396, "node_input": 853, "node_item_feat_0": 838, "node_item_feat_0_path": 838, "node_item_feat_1": 838, "node_item_feat_1_path": 838, "node_label": [25, 168, 186, 701, 736, 776, 819, 845], "node_map": [238, 701, 745, 786], "node_min": [433, 435], "node_pair": 297, "node_part": 545, "node_permute_algo": [98, 560], "node_repr": 853, "node_s": [823, 858, 862, 868], "node_split": [685, 697, 698, 743, 744, 783, 784, 852, 853], "node_subgraph": [106, 244, 719], "node_timestamp_attr_nam": [297, 315, 316], "node_to_graph": 865, "node_trainer_id": 237, "node_typ": [238, 305, 455, 699, 701, 709, 753, 786, 794, 865], "node_type_emb": 865, "node_type_id": [699, 700, 785], "node_type_offset": [297, 328, 838], "node_type_offset_": 297, "node_type_subgraph": 245, "node_type_to_id": [297, 328, 838], "node_udf": [20, 681, 682, 683, 684], "node_update_func": 865, "node_user_feat_0": 838, "node_user_feat_0_path": 838, "node_user_feat_1": 838, "node_user_feat_1_path": 838, "node_weight_list": 700, "node_year": 701, "nodebatch": [20, 54, 712, 756, 797], "nodecol": 4, "nodedataload": [698, 744, 761, 762, 763, 766, 784, 803, 804, 805, 806, 809, 852], "nodedataview": [4, 646], "nodeembed": 10, "nodelist": 868, "nodepr": 140, "nodeproppr": [694, 740, 780, 852], "nodes_": 869, "nodes_0": 693, "nodes_1": 693, "nodes_d": 869, "nodes_data": 845, "nodes_gener": [92, 548], "nodes_perm": 560, "nodes_with_feature_on": 54, "nodeshuffl": 13, "nodeview": 72, "nodewis": 444, "nois": [735, 775, 818], "noisi": 162, "non": [6, 9, 21, 27, 30, 114, 116, 162, 182, 184, 197, 200, 205, 210, 212, 214, 217, 239, 240, 297, 310, 313, 328, 346, 349, 361, 401, 410, 452, 478, 560, 564, 566, 567, 568, 569, 581, 582, 585, 586, 597, 598, 599, 601, 602, 603, 604, 605, 610, 612, 617, 618, 620, 624, 626, 630, 632, 634, 665, 671, 687, 693, 701, 707, 723, 733, 735, 792, 805, 809, 822, 831, 833, 843, 845, 856, 858, 862, 870, 872, 875], "non_block": [289, 305, 310], "nondecreas": 328, "none": [4, 6, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 113, 114, 115, 116, 117, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 229, 230, 233, 235, 236, 237, 238, 239, 240, 244, 245, 247, 248, 285, 288, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 315, 316, 317, 320, 321, 322, 325, 326, 328, 331, 338, 339, 343, 344, 350, 351, 352, 353, 354, 357, 358, 389, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 440, 444, 448, 450, 451, 453, 454, 455, 456, 459, 460, 461, 480, 481, 482, 504, 505, 544, 545, 547, 549, 550, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 574, 576, 577, 585, 586, 598, 601, 602, 603, 605, 607, 614, 616, 617, 618, 619, 630, 635, 636, 638, 639, 644, 645, 646, 649, 650, 655, 660, 662, 663, 665, 668, 669, 671, 672, 685, 687, 691, 695, 720, 721, 725, 728, 729, 730, 738, 741, 761, 768, 769, 770, 778, 781, 803, 812, 813, 814, 832, 833, 835, 839, 857, 862, 865, 869, 875], "nonlinear": [736, 823, 858], "nonneg": 183, "nontre": [228, 547], "nonzero": [126, 212, 248, 562, 578, 579, 596, 612, 623, 695, 705, 741, 781, 786, 790, 827, 857, 858], "norm": [345, 403, 404, 410, 419, 420, 421, 424, 425, 426, 428, 436, 437, 438, 457, 458, 551, 573, 718, 723, 728, 729, 762, 764, 766, 768, 769, 804, 807, 809, 812, 813, 824, 827, 857, 858, 869], "norm_": 417, "norm_bi": 361, "norm_by_dst": 857, "norm_edge_weight": 410, "norm_first": [451, 689], "norm_typ": 461, "norm_x": 869, "normal": [4, 128, 129, 142, 150, 154, 176, 243, 347, 361, 397, 399, 401, 403, 404, 407, 408, 409, 410, 416, 417, 419, 423, 424, 425, 426, 428, 429, 451, 452, 461, 479, 482, 566, 576, 577, 661, 671, 672, 689, 691, 701, 722, 728, 729, 733, 734, 813, 817, 822, 825, 827, 832, 833, 835, 838, 839, 840, 844, 845, 857, 858, 859, 868, 869], "normalis": 671, "normalization\uacfc": 778, "normalization\uc73c\ub85c": 812, "normalization\uc744": [812, 813], "normalization\uc774": 808, "normliz": 812, "north": 23, "nose": 21, "notabl": [697, 718], "notat": [823, 865], "note": [4, 6, 9, 10, 14, 21, 22, 26, 27, 28, 34, 39, 43, 46, 48, 52, 66, 68, 70, 73, 74, 78, 93, 94, 95, 96, 100, 101, 102, 103, 108, 110, 113, 114, 115, 116, 117, 118, 119, 126, 130, 131, 134, 135, 136, 149, 150, 151, 152, 153, 154, 155, 159, 168, 173, 176, 184, 185, 186, 187, 192, 193, 210, 212, 213, 214, 218, 224, 233, 244, 245, 247, 248, 285, 292, 293, 297, 301, 305, 308, 315, 316, 317, 318, 319, 320, 321, 338, 339, 342, 343, 344, 348, 355, 356, 361, 389, 391, 399, 401, 403, 404, 405, 423, 424, 436, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 451, 459, 460, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 557, 558, 559, 560, 561, 564, 565, 567, 568, 569, 570, 578, 579, 638, 639, 640, 644, 645, 646, 647, 648, 649, 650, 691, 694, 695, 696, 697, 699, 705, 709, 714, 720, 722, 726, 729, 730, 731, 734, 736, 743, 744, 745, 746, 783, 784, 785, 786, 787, 800, 806, 822, 823, 824, 825, 834, 838, 839, 840, 841, 842, 848, 852, 856, 858, 859, 862, 869], "notebook": [698, 718, 826, 833, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "notebook\u4e2d\u5f00\u53d1\u548c\u8fd0\u884c\u4ee3\u7801": 744, "notebook\u4e2d\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 744, "notebook\uc5d0\uc11c": 784, "noth": [4, 559, 865], "notic": [639, 645, 833, 834, 843, 844], "notimplementederror": 865, "notion": [22, 858], "noun": [149, 185], "now": [183, 232, 292, 355, 644, 698, 700, 718, 722, 723, 736, 808, 825, 833, 838, 839, 848, 852, 859, 865, 875], "np": [4, 125, 126, 205, 247, 248, 292, 317, 318, 393, 394, 395, 396, 397, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 422, 424, 425, 426, 427, 432, 434, 569, 693, 698, 699, 700, 731, 732, 744, 771, 772, 784, 786, 815, 816, 835, 838, 839, 841, 843, 852, 853, 856, 858, 859, 868, 869], "npoint": 6, "nproc": [833, 874, 875], "npy": [238, 292, 309, 317, 318, 701, 745, 786, 838, 839], "nty": [389, 730, 770, 814], "ntype": [4, 26, 28, 35, 37, 54, 58, 75, 76, 79, 81, 82, 83, 85, 86, 96, 115, 118, 129, 157, 158, 191, 198, 210, 212, 214, 219, 237, 238, 297, 328, 352, 354, 389, 421, 431, 432, 433, 481, 556, 558, 562, 577, 636, 644, 645, 646, 650, 693, 695, 699, 700, 701, 709, 714, 717, 721, 722, 734, 735, 741, 753, 758, 765, 774, 775, 781, 785, 786, 794, 800, 808, 817, 818, 857], "ntype2id": 699, "ntype2id_map": 699, "ntype_attr": 646, "ntype_count": 645, "ntype_field": 644, "ntype_id": 786, "ntype_output": 389, "ntypes_list": 238, "null": [120, 822, 823, 824, 825, 827, 837], "num": [28, 115, 302, 309, 746, 786, 787, 837, 838, 839], "num_atom_typ": 195, "num_bas": [392, 399, 424, 463, 857], "num_base_edges_per_nod": [142, 143], "num_base_nod": [142, 143], "num_bond_typ": 195, "num_child": [433, 435], "num_class": [132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 309, 430, 431, 432, 433, 434, 696, 701, 718, 725, 726, 742, 762, 764, 782, 804, 807, 810, 822, 823, 825, 833, 835, 837, 838, 839, 840, 842, 844, 857, 862, 874, 875], "num_correct": 844, "num_dst": 563, "num_dst_nod": [82, 83, 131, 552, 803, 832, 835], "num_edgnum_edges_per_chunk": [699, 701], "num_embed": [4, 388, 459], "num_epoch": [387, 430, 431, 697, 743, 783, 824, 848], "num_etyp": 421, "num_exampl": 844, "num_featur": [432, 434], "num_gpu": 874, "num_gpu_cached_edg": [303, 308], "num_graph": [138, 139, 140, 159, 172, 687, 689], "num_head": [398, 405, 406, 409, 411, 412, 421, 443, 448, 450, 451, 453, 454, 455, 689, 824, 859], "num_hidden": [697, 743, 783, 852, 853], "num_hidden_lay": 857, "num_hop": [4, 238, 430, 431, 432, 433, 434, 435], "num_input_nod": 761, "num_inter_edg": 142, "num_it": 215, "num_item": 302, "num_kernel": 455, "num_label": [168, 175, 177, 178, 179, 186, 852, 853], "num_lay": [213, 305, 452, 460, 697, 743, 761, 783, 803, 824, 852, 853], "num_mlp_aft": 428, "num_mlp_befor": 428, "num_motif": [142, 143, 189, 190], "num_neighbor": 562, "num_nod": [4, 5, 10, 26, 27, 28, 85, 95, 96, 101, 102, 114, 115, 117, 122, 127, 138, 146, 147, 157, 158, 165, 168, 169, 172, 173, 174, 184, 186, 191, 192, 195, 205, 217, 238, 244, 245, 285, 297, 312, 338, 339, 342, 343, 344, 348, 387, 389, 391, 406, 409, 415, 417, 420, 431, 432, 433, 450, 451, 454, 456, 457, 458, 459, 460, 462, 480, 481, 544, 552, 553, 557, 558, 559, 560, 561, 575, 644, 645, 647, 658, 659, 660, 666, 671, 672, 674, 685, 687, 693, 698, 699, 700, 701, 705, 706, 708, 709, 722, 725, 734, 735, 744, 749, 750, 752, 753, 761, 763, 765, 775, 784, 785, 786, 790, 791, 793, 794, 803, 806, 808, 817, 818, 822, 823, 824, 838, 839, 841, 843, 844, 845, 852, 853, 857, 862, 865], "num_node_typ": 297, "num_node_weight": 786, "num_nodes_dict": [118, 119, 338, 735, 761, 775, 803, 818, 845], "num_nodes_per_chunk": [699, 701], "num_ntyp": 421, "num_of_class": 176, "num_output": 463, "num_output_nod": 761, "num_part": [209, 238, 701, 786, 852, 853], "num_partit": [4, 701], "num_positive_edg": 139, "num_post_lay": 452, "num_prop_round": 865, "num_random_walk": 562, "num_rel": [157, 158, 191, 399, 424, 457, 458, 857], "num_replica": 293, "num_rollout": [433, 435], "num_sampl": [563, 702, 746, 787, 852], "num_se": [564, 566], "num_serv": [702, 746, 787, 852], "num_split": 192, "num_src": 563, "num_src_nod": [79, 86, 131, 552, 803, 832, 835], "num_task": [138, 177, 178, 179, 695, 741, 781, 824], "num_test": [838, 839, 844], "num_test_item": [833, 875], "num_thread": 292, "num_tow": [401, 423], "num_train": [702, 746, 787, 838, 839, 844, 852], "num_train_item": [833, 875], "num_trainers_per_machin": 238, "num_travers": 562, "num_trial": 865, "num_typ": 392, "num_val": [838, 839], "num_val_item": [833, 875], "num_valid": 865, "num_virtual_nod": 450, "num_vocab": 862, "num_work": [4, 209, 210, 211, 212, 213, 214, 215, 217, 218, 290, 719, 746, 761, 762, 764, 766, 787, 803, 804, 805, 807, 809, 832, 848, 849, 862], "num_worker_thread": 233, "numa": 849, "number": [3, 4, 6, 9, 10, 14, 21, 22, 28, 36, 37, 38, 62, 63, 70, 79, 80, 81, 82, 101, 102, 113, 115, 118, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 224, 225, 229, 230, 233, 234, 237, 238, 239, 240, 241, 248, 285, 288, 290, 292, 293, 294, 297, 298, 302, 303, 305, 308, 312, 315, 316, 317, 330, 336, 337, 338, 343, 344, 345, 346, 349, 357, 358, 361, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 545, 552, 553, 554, 557, 560, 562, 563, 567, 568, 569, 570, 573, 574, 578, 579, 597, 615, 617, 618, 621, 622, 637, 645, 647, 652, 662, 663, 664, 665, 668, 669, 672, 673, 676, 677, 678, 680, 681, 682, 683, 684, 685, 689, 691, 693, 695, 698, 699, 700, 701, 702, 706, 708, 709, 713, 714, 717, 719, 722, 726, 733, 736, 778, 781, 793, 794, 798, 805, 823, 825, 827, 833, 834, 835, 837, 838, 840, 841, 843, 844, 845, 848, 849, 852, 856, 857, 859, 865, 868, 869, 874, 875], "number_of_dst_nod": [639, 722, 729, 730, 761, 763, 765, 769, 770, 803, 806, 808, 813, 814], "number_of_edg": 4, "number_of_nod": 4, "number_of_src_nod": [722, 761, 765, 803, 808], "numclass": [822, 823, 825, 840, 842, 843, 856, 858, 859], "numedg": [822, 823, 825, 840, 842, 843, 856, 858, 859], "numer": [4, 10, 22, 243, 401, 417, 479, 693, 706, 841, 845, 865, 869], "numfeat": [822, 823, 825, 840, 842, 843, 856, 858, 859], "numnod": [822, 823, 825, 840, 842, 843, 856, 858, 859], "numpi": [5, 9, 21, 27, 31, 54, 95, 96, 125, 126, 128, 129, 131, 168, 183, 198, 205, 238, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 292, 309, 317, 318, 334, 338, 387, 393, 394, 395, 396, 397, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 422, 424, 425, 426, 427, 432, 434, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 693, 697, 699, 701, 705, 708, 709, 731, 743, 749, 771, 783, 786, 790, 793, 794, 815, 821, 824, 832, 833, 835, 837, 838, 839, 841, 843, 845, 852, 853, 856, 858, 859, 868, 869], "numpy_save_align": [292, 317, 318], "numtestsampl": [822, 823, 825, 840, 842, 843, 856, 858, 859], "numtrainingsampl": [822, 823, 825, 840, 842, 843, 856, 858, 859], "numvalidationsampl": [822, 823, 825, 840, 842, 843, 856, 858, 859], "nutshel": 826, "nvidia": [210, 336, 337, 398, 399, 400, 726, 810, 833], "nx": [125, 247, 462, 705, 749, 790, 823, 858, 859, 862, 865, 868], "nx_agraph": 862, "nx_g": [125, 247, 646, 705, 749, 790, 823, 865], "nx_g1": 858, "nx_graph": [125, 247], "nxg": [705, 749, 790], "nxn": [436, 437], "o": [4, 9, 22, 156, 345, 436, 438, 573, 692, 696, 716, 739, 742, 760, 779, 782, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 848, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "o1": 827, "o2": 827, "o3": 827, "o4": 827, "o5": 827, "o6": 827, "o7": 827, "o8": 827, "o_j": 862, "ob": 463, "obg": 780, "obj_": 22, "object": [4, 22, 26, 42, 53, 54, 59, 108, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 210, 216, 218, 219, 227, 228, 238, 244, 245, 246, 247, 248, 285, 288, 291, 292, 294, 296, 297, 298, 299, 302, 305, 310, 312, 314, 317, 318, 328, 333, 338, 339, 343, 344, 358, 359, 361, 389, 430, 431, 459, 480, 481, 544, 547, 549, 550, 552, 553, 555, 556, 567, 568, 569, 570, 571, 576, 577, 646, 649, 650, 651, 656, 657, 687, 693, 694, 695, 696, 697, 698, 699, 701, 705, 707, 717, 729, 764, 792, 807, 821, 822, 835, 837, 838, 839, 840, 841, 844, 857, 858], "objectbas": 22, "objectref": 22, "objtyp": [238, 358], "observ": [848, 858, 868], "obtain": [4, 14, 243, 297, 310, 325, 336, 337, 343, 344, 406, 409, 448, 451, 452, 460, 479, 565, 639, 653, 695, 718, 722, 732, 734, 735, 736, 781, 823, 833, 840, 841, 859, 862, 875], "occasion": [173, 845], "occup": 841, "occupi": [178, 179], "occur": [26, 238], "occurr": 134, "odot": [417, 456, 862], "ofev": 164, "off": [433, 435, 689, 821, 822, 823, 824, 849, 858, 859, 868, 869], "offer": [820, 831, 840, 848, 862, 868], "offic": 145, "offici": [21, 167, 184, 694, 856, 857, 858, 859, 862, 865, 868, 869], "offlin": [716, 806], "offset": [288, 297, 298, 326, 328, 331, 336, 337, 410, 565, 569, 578, 579], "often": [21, 120, 693, 695, 834, 841, 845, 848], "ogb": [4, 138, 287, 690, 719, 740, 746, 777, 787, 805, 824, 833, 835, 852, 853], "ogb_exampl": 848, "ogb_example_argo": 848, "ogbg": [138, 694, 740, 780, 824], "ogbl": [287, 694, 740, 780, 853], "ogbn": [287, 694, 723, 725, 740, 780, 786, 833, 835, 852, 875], "ok": [5, 707, 792], "okai": 297, "old": [27, 28, 114, 430, 647, 856], "old_step_count": 865, "omega": 823, "omit": [4, 27, 28, 30, 31, 32, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 117, 128, 129, 309, 482, 555, 556, 557, 558, 559, 563, 564, 566, 576, 577, 645, 649, 650, 687, 689, 736, 819, 841], "omp": 233, "omp_num_thread": [833, 875], "onc": [21, 131, 233, 285, 288, 290, 292, 294, 297, 298, 303, 308, 309, 315, 316, 317, 338, 700, 701, 734, 823, 865, 869, 874], "ondisk": 309, "ondisk_dataset": [838, 839], "ondisk_dataset_heterograph": 838, "ondisk_dataset_homograph": 839, "ondiskdataset": [287, 831, 837], "ondiskfeaturedata": 318, "ondiskfeaturedatadomain": [838, 839], "ondisktask": [838, 839], "one": [0, 4, 5, 6, 9, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 44, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 77, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 107, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 144, 147, 150, 154, 157, 158, 160, 161, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 180, 182, 183, 184, 188, 191, 192, 194, 195, 198, 205, 212, 214, 217, 218, 228, 232, 238, 239, 240, 244, 245, 247, 248, 285, 297, 303, 305, 308, 338, 339, 343, 344, 345, 356, 391, 392, 393, 408, 416, 418, 419, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 461, 480, 482, 504, 505, 509, 510, 511, 512, 515, 516, 517, 518, 523, 524, 525, 526, 529, 530, 531, 532, 544, 555, 556, 557, 558, 559, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 576, 577, 578, 579, 593, 598, 637, 639, 644, 647, 649, 650, 675, 676, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 708, 709, 712, 713, 714, 715, 716, 717, 720, 721, 722, 723, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 740, 753, 778, 780, 781, 793, 794, 816, 821, 823, 825, 827, 828, 832, 834, 835, 840, 841, 842, 844, 849, 852, 853, 857, 858, 859, 862, 865, 868, 869, 870, 872, 874], "onehot_label": [695, 741, 781], "ones": [0, 1, 4, 9, 27, 28, 34, 35, 43, 44, 45, 46, 51, 56, 64, 70, 71, 74, 77, 79, 82, 93, 94, 100, 103, 104, 105, 108, 113, 114, 115, 116, 122, 125, 230, 237, 247, 310, 355, 361, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 413, 414, 416, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 454, 460, 507, 561, 566, 571, 591, 614, 619, 620, 632, 634, 639, 645, 646, 647, 654, 660, 676, 680, 681, 682, 683, 684, 685, 687, 697, 699, 701, 705, 706, 709, 750, 753, 791, 794, 828, 842, 843, 853, 862, 865, 868, 869], "ones_lik": 853, "onli": [3, 4, 10, 14, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 41, 47, 48, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 125, 128, 129, 130, 132, 133, 134, 138, 139, 140, 144, 146, 147, 150, 154, 157, 158, 159, 160, 167, 169, 170, 176, 178, 191, 192, 194, 210, 211, 212, 214, 217, 218, 232, 233, 234, 238, 239, 240, 244, 245, 247, 285, 288, 289, 292, 294, 296, 297, 298, 300, 303, 305, 308, 309, 313, 315, 316, 317, 336, 337, 339, 342, 343, 344, 345, 346, 389, 398, 399, 400, 401, 404, 405, 406, 408, 409, 410, 411, 412, 418, 420, 426, 436, 438, 440, 450, 452, 456, 460, 480, 481, 544, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 576, 577, 578, 579, 638, 639, 640, 644, 646, 647, 649, 650, 655, 661, 662, 663, 664, 665, 666, 668, 669, 670, 672, 674, 685, 689, 693, 694, 695, 697, 698, 699, 700, 701, 705, 706, 707, 709, 712, 715, 718, 720, 721, 722, 723, 726, 732, 733, 734, 736, 740, 780, 781, 806, 817, 821, 824, 827, 835, 840, 841, 842, 844, 845, 849, 856, 857, 858, 859, 862, 865, 868, 869, 874], "onlin": [160, 387], "onto": [26, 293, 719, 723, 833, 840, 865, 875], "ood": [197, 205], "oom": [726, 810, 828], "op": [1, 13, 292, 351, 352, 353, 354, 398, 399, 400, 456, 555, 556, 626, 635, 636, 719, 726, 761, 803, 810, 827], "open": [21, 291, 694, 701, 740, 780, 786, 833, 835, 838, 839, 853], "openmp": 8, "opennmt": 869, "oper": [0, 5, 6, 9, 11, 21, 22, 70, 116, 128, 129, 130, 210, 212, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 288, 290, 292, 294, 295, 298, 303, 308, 315, 316, 317, 318, 330, 342, 345, 348, 361, 395, 408, 436, 438, 442, 448, 451, 456, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 555, 556, 561, 567, 568, 569, 570, 573, 578, 579, 620, 626, 638, 645, 647, 670, 672, 685, 691, 698, 699, 707, 709, 712, 713, 717, 719, 725, 726, 727, 729, 733, 734, 735, 821, 822, 823, 824, 826, 835, 842, 848, 849, 859, 860, 865, 869, 870, 872], "operand": [9, 118, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "oplu": 423, "oplus_": [392, 423, 424], "opportun": [831, 840], "opposit": 842, "opt": [717, 718, 723, 732, 734, 735, 736, 761, 762, 764, 766, 772, 774, 775, 776, 803, 804, 807, 809, 816, 817, 818, 819, 832, 835, 838, 839, 856, 859], "optim": [13, 14, 212, 220, 221, 222, 223, 303, 308, 313, 314, 387, 391, 399, 400, 430, 431, 432, 433, 434, 435, 459, 567, 697, 698, 701, 712, 713, 718, 721, 723, 724, 725, 726, 729, 732, 734, 735, 736, 743, 744, 761, 762, 764, 766, 772, 774, 775, 776, 783, 784, 803, 804, 807, 809, 810, 816, 817, 818, 819, 820, 822, 823, 824, 825, 828, 831, 832, 833, 835, 840, 842, 843, 844, 848, 849, 852, 853, 856, 857, 858, 859, 862, 868, 869, 874, 875], "optimizer_exp": [432, 434], "optimizer_state_dict": 848, "optimizer\ub4e4\uc744": 784, "optimizer\ub97c": 810, "optimizer\uc5d0": 784, "option": [4, 6, 10, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 116, 117, 118, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 211, 212, 214, 215, 217, 218, 219, 224, 227, 228, 229, 230, 233, 234, 236, 237, 238, 239, 240, 243, 244, 245, 247, 248, 285, 287, 288, 290, 293, 294, 295, 296, 297, 298, 301, 302, 303, 308, 309, 315, 316, 317, 320, 321, 322, 326, 328, 331, 338, 339, 342, 343, 344, 345, 346, 348, 350, 359, 360, 361, 387, 389, 390, 391, 392, 393, 394, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 479, 480, 481, 482, 503, 507, 544, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 563, 564, 566, 567, 568, 569, 570, 571, 573, 574, 576, 577, 598, 601, 602, 603, 605, 607, 614, 616, 617, 618, 619, 630, 637, 638, 639, 644, 645, 646, 647, 649, 650, 651, 652, 653, 654, 655, 658, 659, 660, 661, 662, 663, 665, 666, 668, 669, 671, 672, 673, 675, 685, 690, 693, 701, 702, 705, 728, 729, 732, 733, 777, 786, 821, 832, 835, 837, 838, 839, 852, 853], "optiona": 421, "oracl": 865, "orbit": [178, 179], "order": [0, 4, 9, 20, 51, 56, 91, 92, 95, 96, 123, 125, 130, 131, 141, 142, 143, 189, 190, 197, 205, 227, 228, 239, 247, 285, 297, 308, 315, 316, 328, 336, 337, 338, 345, 356, 389, 391, 420, 437, 442, 445, 456, 460, 462, 480, 550, 551, 560, 567, 568, 569, 570, 573, 581, 585, 586, 639, 644, 657, 668, 698, 700, 701, 708, 709, 718, 723, 724, 734, 794, 827, 838, 839, 841, 852, 857, 858, 862, 865, 874], "ordereddict": 184, "ordinari": 730, "org": [9, 133, 134, 137, 146, 147, 161, 162, 163, 169, 171, 173, 174, 177, 178, 180, 182, 188, 195, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 293, 434, 435, 450, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 562, 725, 773, 821, 827, 828, 833, 848, 852, 869], "organ": [21, 228, 238, 700, 701, 730, 820, 836], "organiz": 132, "orient": [574, 868], "orig": 701, "orig_dst_id": [700, 786], "orig_eid": 701, "orig_eids_0": 701, "orig_id": [357, 545, 700, 701, 745, 786], "orig_nid": 701, "orig_nids_0": 701, "orig_node_emb": [701, 786, 852], "orig_src_id": [700, 786], "orig_type_edge_id": 786, "orig_type_node_id": 786, "origianl": 701, "origin": [3, 4, 21, 26, 56, 64, 70, 71, 100, 108, 116, 122, 125, 130, 135, 136, 142, 143, 146, 151, 152, 153, 169, 183, 186, 189, 190, 192, 208, 209, 218, 219, 229, 232, 238, 239, 240, 244, 247, 287, 293, 297, 305, 309, 310, 320, 321, 325, 330, 339, 342, 343, 344, 348, 356, 357, 395, 408, 419, 430, 431, 433, 435, 448, 480, 544, 545, 560, 561, 565, 566, 567, 568, 569, 570, 576, 577, 584, 587, 589, 591, 594, 595, 596, 607, 638, 639, 641, 642, 643, 644, 646, 647, 653, 654, 664, 674, 675, 682, 683, 684, 692, 700, 701, 707, 709, 712, 722, 729, 732, 733, 734, 779, 792, 794, 803, 804, 823, 825, 827, 841, 843, 844, 845, 848, 852, 857, 858, 860, 869, 872], "original_column_node_id": [300, 303, 308, 310, 311, 832, 835], "original_edge_id": [303, 308, 310, 311, 832, 835], "original_row_node_id": [300, 303, 308, 310, 311, 321, 832, 835], "origini": 565, "ot": 287, "otc": 145, "other": [0, 1, 9, 21, 68, 120, 121, 180, 182, 186, 207, 210, 234, 238, 241, 243, 293, 301, 305, 309, 330, 336, 337, 359, 361, 387, 399, 428, 432, 434, 479, 562, 644, 662, 663, 668, 687, 689, 695, 696, 697, 698, 700, 701, 702, 704, 705, 708, 709, 713, 717, 718, 719, 731, 735, 736, 782, 821, 823, 825, 827, 828, 832, 834, 835, 837, 840, 841, 842, 843, 852, 856, 858, 859, 862, 865, 869, 874], "other_typ": 562, "otherwis": [4, 6, 31, 36, 37, 44, 51, 54, 56, 62, 63, 64, 71, 104, 108, 118, 165, 183, 184, 207, 210, 212, 214, 227, 228, 230, 237, 239, 240, 244, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 293, 297, 303, 308, 310, 315, 316, 317, 322, 332, 339, 343, 344, 346, 356, 419, 433, 435, 449, 451, 455, 480, 544, 545, 555, 556, 564, 566, 567, 568, 569, 574, 598, 601, 602, 603, 605, 607, 614, 616, 617, 618, 619, 630, 639, 645, 653, 665, 685, 686, 692, 698, 718, 739, 779, 823, 825, 858, 874, 875], "ouptut": 869, "our": [3, 9, 21, 440, 562, 719, 720, 726, 735, 736, 820, 825, 828, 835, 852, 856, 857, 858, 859], "ourselv": 865, "out": [1, 4, 13, 14, 22, 62, 63, 70, 87, 130, 132, 133, 135, 136, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 197, 205, 212, 214, 215, 239, 240, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 344, 393, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 424, 425, 426, 427, 444, 447, 448, 449, 450, 451, 453, 454, 455, 544, 567, 568, 569, 570, 579, 612, 623, 691, 700, 701, 713, 726, 730, 757, 778, 799, 810, 820, 821, 822, 823, 824, 827, 828, 841, 856, 857, 858, 859, 868], "out1": 9, "out2": 9, "out3": 9, "out4": 9, "out_1": 9, "out_2": 9, "out_3": 9, "out_class": [732, 772, 816], "out_degre": [4, 60, 449, 687, 689, 841], "out_dim": [713, 757, 799, 857, 859], "out_dir": 701, "out_dst": [713, 757, 799], "out_edg": 61, "out_edge_feat": 406, "out_feat": [390, 396, 397, 398, 399, 400, 402, 403, 404, 405, 408, 409, 411, 412, 413, 415, 416, 418, 419, 422, 424, 425, 426, 427, 430, 432, 434, 456, 672, 718, 722, 723, 725, 728, 734, 736, 762, 764, 765, 766, 768, 774, 776, 804, 807, 808, 809, 812, 817, 819, 842, 856, 857, 858], "out_feat_1": 672, "out_feat_2": 672, "out_feat_nam": 672, "out_feats\u662f\u8f93\u51fa\u7279\u5f81\u7684\u7ef4\u5ea6": 776, "out_featur": [718, 723, 732, 735, 761, 762, 763, 764, 766, 772, 775, 803, 804, 806, 807, 809, 816, 818, 856, 862], "out_field": 869, "out_indx": 868, "out_nod": 868, "out_node_feat": 406, "out_path": [4, 238, 852, 853], "out_proj": 824, "out_siz": [390, 392, 401, 407, 423, 720, 725, 726, 822, 823, 824, 825, 827, 833, 875], "out_src": [713, 757, 799], "out_subgraph": [339, 344, 719], "out_test_mask": [197, 205], "out_valid_mask": [197, 205], "outbound": [239, 240, 544, 564, 566, 567, 568, 569, 570, 639], "outcom": 544, "outdat": [692, 739, 779], "outer": [720, 806], "outermost": [305, 308, 315, 316], "outfil": 786, "outgo": [88, 361, 857], "outmultiedgedataview": [72, 646, 709, 753, 794], "output": [4, 5, 9, 21, 53, 54, 73, 133, 144, 174, 208, 209, 210, 212, 214, 215, 238, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 293, 305, 326, 331, 339, 343, 344, 345, 359, 389, 390, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 460, 462, 463, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 567, 568, 569, 570, 573, 604, 620, 624, 689, 699, 701, 712, 713, 716, 718, 720, 722, 723, 728, 730, 734, 770, 786, 806, 808, 814, 827, 832, 834, 835, 842, 852, 856, 857, 858, 859, 868, 869], "output_d": 428, "output_devic": [49, 50, 76, 106, 208, 209, 212, 214, 215, 217, 244, 245, 339, 343, 344, 480, 481, 544, 567, 568, 569, 570, 874], "output_feat": 417, "output_featur": 857, "output_label": [717, 723, 761, 766, 803, 809], "output_nod": [4, 210, 212, 213, 214, 217, 761, 763, 766, 806, 809, 853], "output_predict": [717, 723, 761, 766, 803, 809], "output_s": [326, 331], "outsid": [691, 698, 701, 712, 797, 827], "over": [3, 4, 7, 79, 82, 164, 166, 177, 178, 179, 209, 210, 211, 243, 290, 293, 301, 361, 401, 423, 439, 441, 446, 479, 555, 556, 576, 577, 578, 579, 649, 650, 675, 693, 718, 719, 720, 721, 723, 724, 734, 803, 806, 821, 823, 832, 835, 842, 844, 848, 849, 852, 856, 859, 862, 865, 868, 869], "overal": [436, 701, 734, 833, 843, 848, 859, 865, 869, 875], "overfit": 857, "overhead": [22, 70, 345, 399, 436, 438, 573, 724, 848, 849], "overlap": [290, 295, 303, 308, 336, 337, 724], "overlap_fetch": [295, 303, 308], "overlap_graph_fetch": [303, 308], "overrid": [210, 211, 216, 721], "overridden": [313, 430, 431, 432, 433, 434, 435], "overview": [705, 858, 875], "overwit": 156, "overwrit": [200, 201], "overwritten": 821, "own": [21, 156, 345, 419, 436, 438, 571, 573, 689, 698, 699, 700, 701, 713, 717, 718, 719, 721, 723, 736, 827, 828, 830, 831, 835, 840, 843, 846, 847, 849, 852, 853, 857, 859, 865, 869], "owner": 701, "ownership": 701, "p": [120, 147, 161, 174, 212, 214, 217, 393, 428, 429, 437, 438, 457, 458, 551, 564, 566, 569, 658, 659, 660, 700, 701, 761, 786, 803, 852, 862, 865, 869], "p1d": 687, "p3": 14, "p3d": 687, "p_": [393, 395], "p_n": [735, 775, 818], "p_p": 174, "pack": 565, "packag": [0, 2, 3, 6, 11, 21, 148, 398, 399, 400, 459, 690, 709, 726, 810, 820, 821, 822, 823, 824, 825, 827, 828, 842, 848, 849, 852, 856, 859, 862], "package\ub97c": 810, "packed_func": 22, "packed_func_ext": 22, "packedfunc": 22, "pad": [346, 449, 450, 452, 453, 454, 564, 565, 566, 574, 637, 649, 650, 665, 673, 687, 824, 833, 863, 869, 872, 875], "pad_id": 869, "pad_num_nod": 687, "pad_sequ": [449, 687], "pad_word": [184, 862], "padding_idx": 869, "page": [10, 21, 67, 89, 112, 134, 149, 155, 185, 187, 193, 717, 821, 822, 823, 824, 825, 832, 833, 835], "pagerank": [394, 668, 672, 823], "pai": 726, "pair": [4, 6, 32, 48, 66, 178, 183, 218, 224, 225, 238, 239, 240, 293, 297, 301, 303, 308, 310, 315, 316, 319, 320, 321, 337, 345, 348, 387, 389, 391, 393, 396, 404, 405, 406, 408, 409, 411, 412, 414, 415, 416, 419, 422, 425, 436, 438, 453, 454, 455, 456, 552, 553, 563, 573, 574, 666, 687, 689, 699, 701, 704, 705, 708, 718, 721, 722, 734, 735, 790, 808, 824, 832, 843, 845, 853, 857, 858, 859, 869], "pair_graph": [4, 218], "pairwis": [436, 437], "panda": [148, 168, 693, 705, 709, 790, 832, 835, 838, 839, 845], "pandas\uc640": 794, "papaer": 869, "paper": [137, 151, 152, 153, 154, 162, 165, 167, 171, 180, 182, 188, 212, 287, 297, 303, 309, 315, 318, 345, 395, 403, 419, 428, 429, 436, 438, 448, 478, 554, 564, 567, 573, 653, 669, 699, 701, 704, 723, 728, 785, 786, 820, 823, 825, 828, 840, 843, 844, 856, 857, 858, 859, 860, 862, 863, 865, 866, 868, 869, 870], "paper___cites___pap": 701, "papers100m": 287, "paradigm": [3, 697, 842, 862], "paral": 862, "parallel": [4, 48, 66, 122, 210, 211, 229, 239, 240, 293, 389, 447, 638, 647, 675, 697, 699, 701, 716, 743, 783, 824, 833, 848, 849, 852, 853, 859, 862, 863, 865, 866, 872, 874, 875], "param": [4, 6, 10, 32, 292, 393, 394, 395, 396, 401, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 423, 425, 426, 427, 428, 429, 456, 457, 460], "paramet": [4, 6, 10, 14, 20, 26, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 598, 601, 602, 603, 604, 605, 607, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 638, 639, 640, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 671, 672, 673, 675, 685, 686, 691, 695, 697, 698, 712, 713, 714, 718, 721, 723, 725, 726, 727, 728, 729, 730, 732, 734, 735, 736, 738, 741, 743, 744, 757, 761, 762, 764, 766, 772, 774, 775, 776, 778, 781, 783, 784, 799, 803, 804, 807, 809, 810, 812, 816, 817, 818, 819, 821, 822, 823, 824, 825, 827, 832, 833, 835, 840, 842, 843, 844, 848, 852, 853, 856, 857, 858, 859, 862, 865, 869, 874, 875], "parameter": [141, 432, 434, 732, 816, 857, 858, 865], "parametr": [865, 870, 872], "parent": [210, 211, 232, 244, 480, 868], "parit": [357, 358], "paritt": 459, "parmeti": [699, 701], "parmetis\uac00": 786, "parmetis\ub290": 786, "parmetis\ub294": 786, "parmetis\uc5d0": 786, "parmetis\uc758": 786, "parquet": 701, "pars": [148, 693, 701, 705, 709, 845, 857, 862, 863, 872], "parser": 148, "part": [4, 21, 22, 135, 151, 152, 197, 205, 238, 297, 443, 444, 453, 567, 689, 695, 698, 701, 705, 711, 714, 718, 729, 786, 824, 838, 839, 842, 869], "part0": [238, 700, 701, 745, 786], "part1": [238, 700, 701, 745, 786], "part1_end": 238, "part1_start": 238, "part2": 701, "part2_end": 238, "part2_start": 238, "part_config": [4, 229, 234, 235, 236, 697, 698, 699, 702, 743, 744, 746, 783, 784, 785, 787, 852], "part_data": [700, 701], "part_graph": 238, "part_id": [4, 234, 235, 236, 357, 700, 701, 786], "part_metadata": 235, "part_method": [4, 238], "part_polici": [4, 699, 785], "part_ratio": [197, 205], "partial": [4, 718, 832, 857, 859, 865, 869], "particip": [210, 211], "particular": [4, 21, 90, 107, 149, 185, 197, 219, 238, 245, 420, 431, 575, 612, 623, 699, 709, 720, 827, 843, 844], "particularli": [243, 479, 705, 709, 825], "partid": 4, "partid2eid": 4, "partid2nid": 4, "partit": [13, 209, 229, 230, 234, 235, 236, 237, 238, 336, 337, 357, 358, 420, 459, 545, 560, 685, 691, 697, 698, 702, 786, 858, 874], "partiti": 869, "partitioend": [357, 545], "partition_algo": 701, "partition_book": [4, 230, 237, 700, 701], "partition_graph": [4, 698, 700, 701, 745, 784, 786, 852, 853], "partitionpolici": [4, 699, 785], "partmetis\ub97c": 786, "partx": [700, 701], "pascal": [9, 712, 797], "pass": [0, 1, 4, 5, 13, 22, 73, 91, 92, 121, 122, 130, 131, 178, 179, 208, 209, 210, 211, 212, 213, 218, 238, 244, 288, 292, 294, 297, 298, 313, 315, 316, 317, 339, 343, 344, 357, 358, 393, 394, 395, 396, 399, 405, 406, 408, 409, 411, 412, 413, 416, 419, 420, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 435, 437, 456, 462, 480, 544, 567, 571, 639, 676, 677, 678, 679, 680, 681, 682, 683, 684, 691, 693, 695, 698, 700, 701, 707, 710, 717, 720, 722, 723, 727, 730, 731, 734, 736, 738, 741, 754, 778, 781, 795, 800, 810, 815, 819, 820, 835, 837, 838, 839, 843, 849, 852, 853, 859, 860, 863, 865, 870, 872], "passwordless": [702, 787, 852], "pass\ub97c": 810, "path": [4, 21, 156, 184, 199, 200, 201, 202, 203, 206, 209, 233, 234, 235, 236, 238, 292, 309, 318, 342, 350, 356, 391, 453, 454, 565, 566, 571, 574, 653, 687, 692, 693, 696, 700, 701, 702, 739, 742, 779, 782, 786, 837, 838, 839, 848, 852, 865], "path_data": [453, 687, 689], "path_encod": [453, 689], "path_graph": [705, 749, 790], "path_len": 687, "pathencod": 689, "pathlik": 4, "patit": 699, "pattern": [22, 120, 174, 841, 859], "pb": [697, 743, 783], "pc": 391, "pcgnn_www2021": 162, "pci": [290, 303, 308], "pcie": 724, "pd": [183, 693, 838, 839, 845, 858], "pdf": [147, 161, 162, 174, 195, 434, 450, 725, 773, 869], "pe": [401, 665, 669, 824], "peek": 832, "peocess": [308, 316], "peopl": [145, 704, 734], "pep8": 21, "per": [4, 101, 102, 138, 166, 175, 186, 212, 213, 214, 217, 218, 224, 225, 238, 239, 244, 297, 303, 312, 315, 321, 336, 337, 339, 343, 344, 345, 399, 436, 438, 480, 482, 544, 567, 573, 655, 682, 683, 684, 694, 699, 701, 709, 714, 785, 800, 823, 832, 849, 859, 874], "percent": [858, 859], "percentag": [145, 865], "perfetch": 724, "perform": [0, 1, 4, 5, 9, 21, 22, 91, 92, 118, 119, 122, 130, 131, 141, 142, 143, 162, 168, 188, 189, 190, 207, 210, 215, 217, 219, 238, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 292, 295, 300, 302, 303, 308, 309, 315, 316, 317, 318, 319, 336, 337, 357, 358, 361, 389, 393, 395, 396, 399, 405, 408, 409, 411, 412, 413, 416, 419, 426, 430, 431, 432, 433, 434, 435, 447, 448, 449, 451, 453, 454, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 555, 563, 567, 568, 569, 570, 576, 577, 607, 649, 650, 672, 698, 699, 701, 703, 705, 707, 713, 716, 719, 720, 724, 726, 728, 729, 730, 732, 734, 735, 736, 823, 824, 827, 833, 834, 835, 842, 843, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 866, 872, 874, 875], "perftools4": 849, "perhap": 859, "period": [297, 300, 313], "perman": 21, "permiss": [21, 832, 833, 835, 838, 839], "permut": [197, 205, 443, 444, 560, 843, 858], "permute_config": [98, 560], "persist": [4, 698], "persistent_work": 290, "person": [394, 653, 668, 672, 823, 857], "personen": 132, "persourceuniform": 226, "perspect": [868, 869], "perturb": [142, 143, 189, 190], "perturb_ratio": [142, 143, 189, 190], "pgexplain": 432, "phase": [729, 862, 869], "phi": [408, 421, 504, 711, 735, 755, 761, 775, 796, 803, 818], "phi_e": 407, "phi_h": 407, "phi_x": 407, "photo": [25, 135, 136], "php": 852, "physic": [25, 151, 152, 701], "pi": [395, 455, 858], "pick": [6, 14, 212, 214, 217, 436, 437, 564, 566, 567, 569, 721, 843, 859], "pickl": 853, "pictur": 869, "piec": 842, "pin": [10, 67, 89, 112, 210, 288, 289, 297, 303, 305, 308, 310, 317, 318, 322, 330, 566, 719, 833, 875], "pin_memori": [305, 310, 317, 322, 720, 764, 807], "pin_memory_": [292, 297, 317, 318, 719, 833, 875], "pin_prefetch": 210, "pinsag": 562, "pip": [694, 740, 780, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 848], "pipe": [724, 835], "pipelin": [3, 7, 290, 691, 699, 710, 716, 719, 721, 731, 734, 736, 831, 834, 835, 853], "pixel": [146, 169], "pkl": [209, 696, 742, 782, 853], "place": [1, 21, 70, 116, 130, 210, 290, 297, 298, 317, 318, 329, 330, 342, 348, 561, 567, 568, 569, 570, 638, 647, 707, 833, 848, 874, 875], "placehold": [219, 292], "plai": [4, 27, 28, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 114, 115, 116, 117, 122, 130, 212, 214, 217, 244, 245, 338, 339, 343, 344, 389, 430, 431, 432, 433, 434, 435, 480, 481, 544, 557, 558, 559, 561, 646, 647, 654, 655, 660, 670, 671, 675, 685, 709, 753, 761, 794, 803, 823, 826], "plain": 836, "plan": 731, "platform": [145, 188], "player": [46, 74, 103, 660, 671], "pleas": [4, 9, 21, 22, 27, 28, 114, 115, 116, 117, 130, 148, 210, 212, 213, 214, 244, 245, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 293, 339, 342, 348, 356, 414, 425, 480, 481, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 558, 560, 561, 562, 569, 638, 639, 647, 648, 687, 689, 695, 700, 717, 718, 721, 723, 724, 725, 726, 734, 736, 825, 832, 833, 835, 838, 839, 842, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 875], "plenti": 841, "plot": [859, 862], "plot_tre": 862, "plt": [823, 858, 862, 865, 868], "plu": [131, 159, 285, 338, 713, 825, 828], "pm": [183, 858, 859], "pm_dglpart": [700, 786], "pm_pd": [183, 858], "pm_pd_batch": 183, "pm_pd_y": 858, "pma": 443, "pmpd": 858, "pmpd1": 858, "pn": 775, "pna": 423, "pnaconv": 401, "png": [840, 841, 842, 843, 844, 845, 848], "po": [6, 179, 823, 838, 839, 858, 862, 868, 869], "point": [9, 14, 178, 179, 297, 303, 308, 315, 316, 345, 408, 436, 437, 438, 551, 573, 641, 642, 643, 712, 803, 825, 833, 858, 869], "point_idx": 6, "pointer": [22, 131, 285, 297, 328, 338, 617, 618, 705], "poisson": [303, 315], "polariz": [178, 179], "polici": [4, 298, 322, 329, 699], "policy_str": 4, "polit": 166, "politifact": 159, "ponder": 869, "ponderli": 162, "pool": [6, 13, 395, 425, 430, 435, 439, 440, 441, 442, 443, 445, 446, 452, 460, 727, 728, 729, 767, 768, 769, 811, 812, 813, 862, 868, 869, 870, 872, 874], "pooler": 824, "poorli": 849, "pop": [432, 434, 435, 856, 857, 859, 862, 874], "popul": [21, 208, 326, 331, 432, 434], "popular": [167, 197, 698, 709, 736, 821, 828, 840], "port": [702, 852, 853], "port1": [852, 853], "port2": [852, 853], "portion": [4, 10, 698, 834, 840], "pos_dst": 853, "pos_enc": [824, 869], "pos_enc_s": 824, "pos_encod": 452, "pos_featur": 853, "pos_graph": 853, "pos_linear": 824, "pos_pair_graph": [4, 218], "pos_scor": [735, 764, 775, 807, 818, 843, 853], "pos_src": 853, "pos_u": 391, "pos_v": 391, "pose": 868, "posit": [6, 13, 120, 145, 150, 157, 158, 161, 163, 184, 191, 212, 218, 239, 240, 297, 303, 307, 308, 315, 316, 319, 346, 387, 389, 391, 407, 410, 448, 450, 451, 452, 554, 564, 566, 567, 637, 665, 669, 673, 687, 693, 721, 807, 824, 827, 832, 853, 859, 862, 869], "positionwis": [443, 444], "positive_edge_dst": [139, 853], "positive_edge_src": [139, 853], "positive_graph": [764, 807], "possibl": [4, 21, 137, 218, 224, 293, 309, 395, 552, 553, 563, 705, 712, 713, 719, 843, 844, 852, 857, 858, 865, 869], "possible_dest": 865, "possible_dests_emb": 865, "possibli": [300, 313, 734, 832, 833, 835, 838, 839], "post": [21, 24, 163, 181, 869], "post0": [832, 833, 835, 838, 839], "post_func": 869, "post_pair": 869, "postiv": 807, "potenti": [292, 309, 317, 318, 718, 844, 848, 857], "power": [10, 22, 165, 414, 432, 434, 437, 452, 551, 662, 701, 721, 761, 803, 823, 827, 840, 844, 863, 872], "ppa": [694, 740, 780], "ppi": [25, 828], "ppidata": [695, 741, 781], "ppidataset": 25, "ppr": [13, 672], "pq": 183, "pr": [21, 295, 303, 308, 336, 337], "practic": [302, 393, 403, 405, 408, 409, 411, 412, 413, 416, 419, 426, 478, 691, 715, 734, 824, 830, 832, 843, 845, 850, 851, 858, 859, 874], "practice\ub4e4\uc744": 778, "practis": [393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 713, 849], "pramet": 428, "pre": [4, 23, 125, 173, 247, 303, 308, 315, 316, 392, 415, 419, 421, 424, 428, 429, 823, 824, 832, 833, 835, 838, 839, 865, 869], "pre_func": 869, "pre_kv": 869, "pre_pair": 869, "pre_q": 869, "precis": [9, 328, 641, 642, 643, 710, 712, 795, 797, 843, 859], "precomput": 401, "precond": [428, 429], "pred": [4, 434, 718, 732, 735, 762, 764, 772, 775, 804, 807, 816, 818, 822, 823, 840, 842, 843, 844, 858, 862, 874], "predction": 198, "predecessor": [93, 107, 343, 345, 349, 436, 438, 478, 573, 803], "predefin": [150, 154, 176, 736], "predic": [53, 54, 858, 869], "predict": [4, 13, 132, 133, 137, 138, 139, 140, 144, 150, 154, 157, 158, 162, 170, 171, 173, 176, 177, 178, 179, 180, 188, 191, 197, 212, 214, 218, 241, 243, 303, 305, 308, 315, 316, 394, 395, 430, 431, 432, 434, 435, 442, 447, 456, 479, 694, 698, 716, 717, 718, 723, 731, 734, 736, 740, 764, 780, 781, 807, 822, 823, 824, 830, 831, 833, 835, 840, 842, 844, 846, 847, 852, 854, 855, 858, 859, 862, 865, 868], "predict_categori": [132, 133, 144, 170, 857], "prediction\u6570\u636e\u96c6": 740, "prediction\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 740, "predictor": [447, 456, 718, 721, 732, 762, 764, 804, 807, 824, 832, 853], "prefer": [168, 186, 708, 842], "prefetch": [13, 208, 209, 212, 214, 215, 218, 219, 220, 221, 222, 223, 724], "prefetch_edata": [209, 215], "prefetch_edge_feat": [208, 212, 214, 217], "prefetch_label": [208, 212, 214, 218], "prefetch_ndata": [209, 215], "prefetch_node_feat": [208, 212, 214, 217], "prefix": [639, 700, 786], "preform": [297, 303, 308, 315, 316, 725], "prepar": [293, 688, 689, 701, 731, 734, 832, 835, 845, 852, 869], "prepare_for_train": 865, "prepare_train": 865, "prepend": 68, "preprocess": [132, 133, 144, 170, 179, 184, 313, 697, 700, 822, 823, 825, 831, 832, 833, 835, 838, 839, 840, 843, 875], "prerequisit": 700, "presenc": [149, 185], "present": [297, 310, 431, 433, 824, 857, 859, 868], "preserv": [95, 96, 127, 230, 232, 237, 239, 240, 557, 559, 567, 568, 569, 570, 662, 663, 668, 827, 856, 862], "presort": [421, 424], "pretrain": [159, 184, 821], "pretrained_emb": [184, 862], "prev_proj": 858, "prevent": [122, 145, 420, 448, 451, 655, 717, 726, 821, 857], "previou": [186, 289, 303, 393, 721, 724, 732, 734, 735, 818, 833, 834, 843, 845, 852, 858, 869, 875], "previous": [723, 725, 732], "price": 22, "primari": [291, 689], "prime": [406, 409], "primit": [3, 399, 400, 865], "princip": [423, 795], "principl": [705, 722], "print": [4, 6, 20, 21, 22, 42, 53, 54, 70, 108, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 217, 244, 293, 297, 300, 310, 311, 319, 320, 323, 324, 328, 337, 342, 388, 389, 390, 392, 394, 410, 413, 415, 419, 436, 438, 449, 453, 454, 455, 481, 482, 560, 574, 575, 644, 652, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 675, 691, 693, 694, 698, 700, 701, 708, 723, 726, 732, 735, 736, 740, 744, 752, 761, 766, 772, 775, 776, 778, 780, 784, 793, 803, 809, 810, 816, 818, 819, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 852, 856, 857, 858, 859, 862, 865, 869, 874, 875], "print_everi": [132, 133, 144, 170], "printcalcul": 22, "prior": [863, 872], "prioriti": [238, 571, 821], "prob": [212, 214, 217, 239, 240, 432, 434, 564, 566, 567, 568, 865, 869], "prob_nam": [303, 308, 315, 316], "probabl": [147, 174, 212, 214, 215, 217, 239, 240, 297, 303, 308, 315, 316, 394, 432, 434, 448, 450, 451, 554, 562, 564, 566, 567, 568, 569, 658, 659, 660, 668, 672, 721, 736, 803, 807, 832, 843, 858, 859, 865, 866, 868, 869, 872], "problem": [293, 726, 840, 843, 857, 858, 863, 869, 872, 875], "probs_nam": 297, "proc_id": 293, "proce": [709, 734, 856, 858, 869], "procedur": [6, 432, 434, 695, 869], "process": [0, 2, 4, 6, 8, 22, 41, 134, 137, 138, 139, 140, 142, 143, 149, 155, 156, 171, 173, 180, 182, 185, 187, 188, 189, 190, 193, 210, 211, 230, 233, 237, 290, 293, 301, 303, 305, 308, 310, 315, 316, 336, 337, 359, 360, 391, 394, 413, 426, 427, 430, 431, 432, 434, 447, 459, 461, 581, 689, 690, 691, 693, 694, 696, 697, 698, 699, 700, 701, 702, 716, 719, 724, 734, 738, 741, 778, 781, 782, 823, 824, 831, 844, 845, 849, 852, 853, 857, 858, 859, 862, 865, 869], "prod_": 9, "produc": [228, 598, 601, 602, 603, 605, 701, 729, 843, 856, 859], "product": [4, 118, 135, 136, 137, 161, 163, 287, 391, 405, 419, 456, 598, 623, 704, 719, 725, 732, 735, 746, 787, 805, 818, 824, 825, 833, 843, 852, 853, 859, 868, 869], "product\ub85c": 807, "product\ub97c": [816, 818], "profil": [159, 188], "prog": 862, "program": [9, 21, 22, 293, 697, 703, 823, 845, 875], "progress": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 433, 435, 691, 778, 866, 872], "prohibit": 159, "proj": 869, "project": [22, 155, 187, 188, 193, 395, 448, 458, 718, 842, 856, 857, 858, 865], "project_initial_featur": 413, "prompt": 821, "prop": [429, 865], "prop_edg": 92, "prop_edges_yyi": 0, "prop_nod": [91, 862], "prop_nodes_topo": 862, "prop_nodes_xxx": 0, "prop_step": [428, 429], "propag": [13, 91, 92, 159, 394, 428, 429, 461, 547, 549, 550, 720, 736, 819, 823, 834, 858, 862], "propagagtion\uc744": 806, "propagate_attent": 869, "propagation\uc744": 819, "propagation\uc758": 806, "proper": [210, 849], "properli": [138, 139, 140], "properti": [4, 38, 39, 42, 43, 44, 45, 46, 51, 52, 59, 65, 66, 68, 74, 77, 78, 103, 104, 105, 120, 138, 160, 162, 177, 178, 179, 195, 197, 205, 288, 291, 297, 298, 299, 302, 304, 305, 309, 310, 312, 314, 442, 447, 580, 581, 582, 588, 590, 597, 599, 600, 610, 677, 678, 680, 682, 683, 694, 695, 706, 734, 740, 741, 780, 781, 824, 838, 839, 841, 844, 845, 857, 865, 868], "property_nam": 197, "property_valu": 205, "proport": [212, 214, 215, 217, 303, 307, 319, 700, 721], "propos": [162, 197, 205, 243, 295, 303, 308, 336, 337, 392, 479, 637, 673, 840, 842, 857, 859, 862, 869], "protect": [698, 845], "protein": [25, 52, 165, 175, 395, 694, 740, 780, 844], "proteom": 865, "protest": 164, "prototyp": [22, 708], "proven": 824, "provid": [0, 3, 4, 5, 7, 8, 9, 21, 34, 35, 73, 80, 89, 93, 113, 131, 138, 139, 140, 165, 168, 178, 179, 205, 208, 209, 211, 212, 214, 217, 218, 285, 291, 293, 297, 300, 303, 308, 310, 313, 315, 316, 328, 331, 338, 345, 350, 389, 414, 419, 425, 432, 434, 436, 438, 459, 560, 571, 573, 578, 579, 607, 644, 672, 685, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 705, 708, 709, 715, 716, 718, 721, 722, 723, 726, 731, 732, 733, 734, 736, 827, 831, 832, 833, 835, 836, 840, 841, 842, 843, 844, 845, 848, 849, 852, 856, 857, 859, 862, 868, 869, 874, 875], "provis": [697, 702], "proxi": 133, "prune": [433, 435], "pseudo": [207, 389, 416], "pseudocod": 868, "psi": [455, 505, 711, 755, 796], "psi_": 505, "psutil": [832, 833, 835, 838, 839], "pt": [229, 318, 701, 838, 839, 848], "ptc": 165, "pth": [292, 865], "pub": 162, "public": [22, 150, 176, 858], "publish": 828, "pubm": [25, 176, 695, 741, 781, 828], "pull": [0, 21, 92, 295, 303, 308, 336, 337, 858, 862], "purchas": [135, 136, 137, 287, 762, 804, 825], "pure": [178, 179, 712, 728], "purl": 133, "purpos": [4, 238, 293, 301, 305, 569, 691, 693, 695, 709, 720, 732, 859], "push": [4, 21, 828], "put": [22, 238, 357, 358, 429, 450, 560, 689, 719, 723, 724, 838, 839, 840, 868, 874], "py": [21, 22, 199, 200, 701, 702, 734, 746, 774, 786, 787, 817, 821, 824, 830, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 855, 856, 857, 858, 859, 861, 862, 864, 865, 867, 868, 869, 871, 874, 875, 877], "pyarrow": [701, 786], "pydant": 148, "pyg": [305, 310, 828], "pygcn": 856, "pyglayerdata": 310, "pyglayerheterodata": 310, "pygraphviz": 862, "pylibcugraphop": [398, 399, 400], "pylint": 21, "pylintrc": 21, "pypa": [832, 833, 835, 838, 839], "pypi": 833, "pyplot": [823, 858, 862, 865, 868], "python": [0, 8, 21, 22, 34, 53, 92, 100, 203, 205, 206, 210, 398, 399, 400, 696, 697, 698, 701, 705, 708, 742, 782, 784, 790, 820, 821, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "python3": [21, 702, 746, 787, 821, 824, 832, 833, 835, 838, 839, 852, 856, 859], "pythonpath": 21, "python\uc758": 782, "pytorch": [3, 4, 5, 6, 8, 9, 10, 13, 14, 21, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 186, 196, 210, 211, 212, 213, 214, 217, 233, 244, 245, 246, 247, 248, 261, 262, 263, 264, 285, 289, 293, 317, 318, 338, 339, 343, 344, 345, 355, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 480, 481, 544, 551, 562, 573, 575, 638, 640, 644, 645, 646, 654, 660, 666, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 687, 689, 695, 697, 698, 708, 722, 724, 726, 727, 728, 729, 731, 734, 736, 765, 767, 770, 774, 776, 783, 784, 804, 808, 809, 810, 811, 812, 817, 819, 820, 822, 823, 824, 825, 827, 828, 829, 831, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 860, 862, 863, 865, 866, 868, 869, 870, 872, 874, 875], "pytorchcaffe2": 849, "pytorch\u7684nn\u6a21\u5757": 767, "pytorch\u7684tensor\u7c7b": 752, "pytorch\ub294": 810, "pytorch\ub85c": 808, "pytorch\ub97c": 815, "pytorch\uc640": [781, 784], "pytorch\uc758": [793, 810, 813], "pytz": [832, 835, 838, 839], "pyyaml": 148, "py\u548claunch": 746, "py\u5e94\u8be5\u4f7f\u7528\u76f8\u540c\u7684ip\u914d\u7f6e\u6587\u4ef6": 746, "q": [147, 174, 180, 421, 442, 448, 564, 569, 824, 869], "q_": [392, 424], "q_i": 869, "q_j": 869, "q_p": 174, "q_proj": 824, "q_t": 442, "qi": [856, 858], "qingbiao": 754, "qingbiaoli": 754, "qipeng": [862, 869], "qk": [448, 824], "qkv": 869, "qm7b": [25, 177, 695, 741, 781], "qm7bdata": [695, 741, 781], "qm7bdataset": [692, 695, 739, 741, 779, 781], "qm7bdataset\u6e90\u4ee3\u7801": 741, "qm9": 178, "qm9dataset": 179, "qm9edg": 179, "qm9edgedataset": 178, "qquad": 858, "qualiti": [212, 869], "quan": [856, 869], "quantiti": [243, 479], "quantum": [177, 178, 179, 396, 422], "queri": [4, 13, 36, 37, 38, 45, 47, 48, 51, 54, 55, 56, 57, 58, 60, 61, 75, 77, 79, 80, 81, 82, 87, 88, 89, 90, 105, 107, 299, 305, 708, 824, 869], "question": [180, 858], "queue": [4, 233, 292], "queue_siz": 4, "quick": [22, 708, 827], "quickli": 842, "quickstart": 826, "quit": [22, 696, 725, 859], "quot": [693, 841], "r": [14, 60, 87, 118, 119, 163, 178, 179, 317, 320, 392, 406, 409, 411, 412, 424, 437, 439, 440, 441, 446, 457, 458, 503, 506, 551, 654, 701, 711, 714, 725, 730, 755, 770, 796, 814, 823, 824, 825, 827, 865, 868, 869], "r0": [297, 699, 785], "r1": [297, 699, 785], "r2": [178, 179, 297, 699, 785], "r3": [297, 699, 785], "r_": [395, 653, 730, 770, 814, 827], "r_1": 653, "r_2": 653, "r_g": 551, "r_i": [399, 455], "r_j": [455, 653], "r_k": 395, "r_t": [212, 297, 442, 567], "radial": 395, "radiu": [241, 437, 551], "radius_proj": 858, "rais": [21, 48, 89, 109, 116, 131, 145, 177, 178, 179, 183, 285, 338, 346, 393, 405, 408, 409, 410, 411, 412, 413, 416, 419, 426, 637, 638, 639, 665, 673, 692, 699, 728, 729, 739, 768, 769, 779, 812, 813], "ram": [14, 309, 701], "rand": [6, 9, 128, 129, 212, 214, 217, 405, 406, 408, 409, 411, 412, 416, 417, 419, 422, 425, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 455, 462, 649, 650, 705, 726, 749, 790, 810, 838, 839], "rand_bipartit": 553, "rand_graph": [9, 391, 406, 409, 417, 420, 439, 440, 441, 442, 443, 444, 445, 446, 447, 456, 457, 458, 461, 552, 652, 658, 659, 660, 671, 672, 726, 810], "randint": [392, 457, 458, 718, 731, 732, 735, 771, 772, 775, 815, 816, 818, 838, 839], "randn": [5, 47, 75, 118, 119, 121, 389, 390, 392, 415, 420, 431, 432, 433, 456, 457, 458, 613, 614, 620, 623, 631, 655, 671, 672, 674, 706, 707, 731, 732, 750, 751, 761, 771, 772, 791, 792, 803, 815, 816, 827, 841, 868], "random": [0, 6, 13, 142, 143, 161, 162, 163, 172, 173, 174, 183, 189, 190, 197, 198, 205, 207, 212, 215, 238, 243, 293, 297, 301, 303, 335, 387, 391, 405, 406, 409, 411, 412, 419, 422, 439, 440, 441, 442, 443, 444, 445, 446, 447, 479, 552, 553, 554, 562, 564, 565, 566, 567, 572, 669, 672, 701, 720, 725, 731, 732, 771, 772, 815, 816, 824, 838, 839, 843, 859, 874], "random_flip": [637, 673], "random_partit": 701, "random_se": [161, 162, 163, 197, 205, 297, 567], "random_st": [142, 143, 173, 189, 190, 207, 874], "random_walk": [565, 719], "random_walk_with_restart": 566, "randomli": [6, 142, 143, 147, 171, 174, 189, 190, 207, 209, 210, 211, 224, 225, 230, 237, 239, 240, 297, 457, 458, 567, 568, 569, 637, 652, 658, 659, 660, 667, 673, 701, 731, 803, 815, 831, 843], "randomst": [183, 207], "randomwalkp": 13, "rang": [4, 128, 129, 145, 164, 165, 168, 172, 186, 210, 211, 238, 298, 310, 317, 321, 336, 337, 357, 387, 430, 431, 432, 433, 434, 449, 454, 461, 545, 563, 569, 578, 579, 645, 687, 689, 695, 697, 699, 701, 725, 726, 732, 734, 735, 736, 741, 743, 772, 774, 775, 776, 781, 783, 810, 816, 817, 818, 819, 822, 823, 824, 832, 833, 835, 840, 842, 843, 844, 848, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "range_tensor": 302, "rangepartitionbook": 4, "rangl": [178, 179], "rank": [4, 230, 237, 336, 337, 359, 445, 668, 833, 842, 848, 874, 875], "rapid": 857, "rare": [224, 563], "rate": [4, 10, 14, 137, 161, 163, 173, 288, 298, 394, 398, 399, 400, 404, 409, 411, 412, 417, 421, 424, 425, 428, 429, 430, 431, 443, 444, 689, 732, 857], "rather": [142, 143, 189, 190, 825, 858, 865], "ratio": [138, 139, 140, 161, 163, 173, 197, 198, 205, 242, 297, 401, 423, 652], "raw": [0, 95, 96, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 244, 339, 343, 344, 452, 480, 544, 557, 558, 575, 672, 690, 691, 693, 695, 701, 733, 777, 778, 828, 831, 838, 839, 844, 845], "raw_dir": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 691, 692, 695, 738, 739, 741, 778, 779, 781], "raw_dir\u4e0b\u7684self": 739, "raw_dir\u6307\u5b9a\u7684\u503c": 738, "raw_path": [156, 692, 695, 739, 741, 779, 781], "rb": [424, 853, 857], "rbf": 395, "rbf_kernel_mean": 395, "rbf_kernel_sc": 395, "rbrace": [186, 711, 755, 761, 796, 803], "rcmk": 560, "rcount": [856, 859], "rdf": [132, 133, 144, 170, 857], "rdfdata": [695, 741, 781], "rdfgraphdataset": [132, 133, 144, 170], "re": [6, 95, 96, 134, 137, 138, 139, 140, 148, 149, 155, 171, 173, 180, 182, 185, 187, 188, 193, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 408, 410, 411, 412, 413, 414, 415, 416, 418, 419, 422, 424, 425, 426, 427, 428, 429, 558, 560, 695, 828, 833, 838, 839, 875], "reach": [716, 862, 869], "reachabl": 356, "read": [1, 3, 4, 5, 13, 21, 168, 183, 207, 288, 292, 294, 295, 296, 298, 309, 317, 322, 389, 693, 698, 700, 701, 720, 820, 827, 828, 843, 845, 852, 853, 862, 869, 875], "read_async": [288, 292, 294, 298, 317], "read_async_num_stag": [288, 292, 294, 298, 317], "read_csv": 845, "read_into_memori": 292, "reader": [856, 859], "readi": [717, 838, 839, 852, 865], "readm": [21, 210], "readonli": [116, 638], "readout": [444, 447, 555, 556, 844], "readout_edg": [351, 353, 556, 635], "readout_nod": [352, 354, 555, 636, 734, 774, 817], "real": [159, 162, 293, 687, 701, 786, 823, 824, 834, 841, 865, 869], "realiz": 20, "realli": [137, 171, 180, 182, 188, 320, 448, 449, 451, 453, 454], "reason": [21, 164, 166, 293, 698, 720], "reassign": 700, "recal": [14, 824, 834, 857, 859, 869], "receiv": [20, 53, 100, 219, 293, 394, 403, 419, 681, 682, 683, 684, 712, 842, 865], "recent": [162, 298, 329, 824, 869], "recip": [430, 431, 432, 433, 434, 435], "recogn": [729, 769, 813], "recognit": 174, "recommand": 27, "recommend": [5, 21, 22, 34, 73, 93, 94, 100, 113, 120, 125, 163, 173, 210, 247, 293, 402, 403, 404, 562, 645, 690, 691, 695, 696, 698, 700, 701, 704, 712, 713, 719, 732, 735, 821, 832, 833, 835, 837, 838, 839, 842, 843, 848, 849, 852, 856, 857, 858, 859, 862, 865, 868, 869, 874], "reconstruct": 857, "record": [56, 132, 145, 647, 823, 862, 865], "recov": [701, 844, 857], "recreat": 827, "recurr": [164, 166, 418, 442, 869, 870, 872], "recurs": [21, 357, 358, 821], "reddit": [25, 181, 726, 810, 828], "redditbinari": 165, "redditdata": [695, 741, 781], "redditdataset": [25, 726, 810], "redditmulti5k": 165, "redistribut": [820, 821], "reduc": [13, 20, 73, 91, 92, 93, 94, 100, 113, 243, 261, 262, 263, 264, 303, 308, 309, 479, 505, 507, 546, 547, 548, 549, 550, 601, 602, 603, 605, 701, 711, 712, 714, 720, 726, 796, 797, 800, 810, 813, 833, 834, 842, 849, 856, 857, 859, 862, 869, 875], "reduce_func": [73, 91, 92, 93, 94, 100, 113, 261, 262, 263, 264, 546, 547, 548, 549, 550, 712, 714, 715, 756, 758, 759, 797, 800, 801, 842, 859, 862, 865, 869], "reduce_op": 505, "reduceop": [833, 875], "reducer\ub294": 800, "reduct": [9, 73, 91, 92, 93, 94, 100, 113, 212, 303, 507, 598, 601, 602, 603, 714, 730, 800, 814, 842, 862], "redund": [293, 563], "ref": [144, 745], "refer": [4, 9, 21, 22, 24, 44, 72, 104, 135, 136, 146, 147, 148, 151, 152, 153, 159, 162, 164, 166, 169, 174, 175, 177, 178, 179, 181, 183, 195, 210, 212, 213, 214, 238, 239, 293, 297, 319, 392, 424, 439, 440, 441, 442, 443, 445, 446, 450, 504, 505, 562, 568, 639, 687, 689, 695, 698, 705, 709, 717, 718, 719, 723, 724, 725, 735, 736, 762, 766, 804, 809, 820, 822, 823, 825, 832, 833, 835, 838, 839, 841, 842, 844, 849, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "refere": 869, "reflect": [22, 26, 70, 149, 185, 305, 310, 823], "refresh": [825, 835], "regard": [414, 419, 425, 483, 484, 485, 486, 626, 733, 827], "regardless": [4, 80, 117, 130, 232, 297, 310, 350, 356, 700, 701, 865], "regim": 720, "region": [23, 823], "regist": [22, 430, 431, 432, 433, 434, 435, 728], "register_object": 22, "registr": 727, "registri": 22, "regress": [2, 4, 138, 177, 178, 179, 195, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 695, 718, 729, 731, 735, 781, 815, 844], "regression\ub3c4": 819, "regular": [171, 392, 399, 406, 424, 432, 434, 463, 698, 857], "regularli": 874, "reiniti": [387, 391, 398, 399, 400, 402, 403, 404, 406, 409, 411, 412, 413, 416, 418, 419, 422, 425, 426, 427, 442, 456, 457, 458, 460, 728, 812, 859], "reject": [563, 653], "rel": [95, 96, 309, 432, 433, 435, 457, 458, 695, 701, 702, 718, 721, 723, 734, 736, 741, 762, 764, 766, 774, 776, 781, 804, 807, 809, 817, 819, 837, 838, 839], "rel_data_path": [746, 787], "rel_emb": [457, 458], "rel_graph": [730, 770, 814], "rel_nam": [432, 718, 721, 723, 732, 734, 735, 736, 762, 764, 766, 772, 774, 775, 776, 804, 807, 809, 816, 817, 818, 819], "rel_project": 458, "rel_typ": [25, 164, 166], "relabel": [4, 6, 122, 125, 238, 244, 247, 321, 339, 343, 344, 480, 544, 709, 725], "relabel_idx": 6, "relabel_nod": [49, 106, 157, 158, 191, 244, 339, 343, 344, 480, 544, 761, 803], "relat": [1, 4, 13, 18, 21, 26, 52, 59, 113, 117, 122, 125, 126, 131, 132, 133, 144, 157, 158, 161, 162, 163, 170, 191, 203, 206, 218, 244, 247, 248, 285, 289, 297, 300, 310, 311, 313, 338, 339, 343, 344, 361, 389, 392, 399, 401, 423, 424, 455, 457, 458, 463, 480, 544, 552, 553, 653, 689, 693, 695, 701, 703, 704, 709, 714, 718, 729, 730, 794, 800, 827, 830, 831, 859, 860, 861, 869, 872], "relation_submodul": 389, "relationship": [150, 154, 176, 566, 718, 825, 843, 857, 858, 860, 872], "releas": [6, 821, 833], "relev": [336, 337, 687, 735], "relgraphconv": [399, 645], "relgraphconvlay": [736, 776, 819], "reli": [726, 831, 852], "reliabl": 22, "reload": [132, 133, 135, 136, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 309, 691, 778], "relu": [121, 397, 402, 408, 414, 415, 417, 435, 451, 689, 697, 718, 720, 721, 722, 723, 725, 726, 728, 729, 734, 736, 743, 762, 763, 764, 765, 766, 768, 769, 774, 776, 783, 804, 806, 807, 808, 809, 812, 813, 817, 819, 822, 823, 824, 825, 827, 832, 833, 835, 840, 842, 843, 844, 852, 853, 856, 857, 858, 859, 874, 875], "relubackward0": 414, "remain": [100, 180, 181, 303, 308, 309, 558, 716, 725, 849, 859], "remaind": 869, "remap": 701, "remot": [21, 145, 177, 178, 179, 691, 692], "remov": [4, 95, 96, 118, 119, 130, 135, 136, 151, 152, 153, 157, 168, 186, 192, 244, 287, 339, 343, 344, 544, 557, 558, 559, 565, 647, 655, 670, 722, 723, 843, 869], "remove_edg": [27, 28, 96, 114, 115, 558, 843], "remove_nod": [27, 28, 95, 114, 115, 557], "remove_self_loop": 117, "removeselfloop": 13, "renam": [127, 648], "render": [21, 832, 835, 838, 839], "reorder": [150, 154, 160, 176, 194, 421, 560, 569, 695, 781], "reorder_graph": [150, 154, 160, 176, 194, 421, 424, 695, 741, 781], "reparameter": 429, "repeat": [6, 128, 129, 142, 320, 321, 343, 344, 452, 736, 838, 839, 865, 868, 874], "repeat_interleav": [128, 129, 326, 721, 735, 764, 775, 807, 818], "repeatedli": [391, 735, 869], "replac": [21, 100, 131, 214, 217, 219, 224, 239, 240, 285, 292, 297, 303, 308, 315, 316, 317, 318, 321, 336, 337, 338, 450, 483, 485, 488, 490, 509, 511, 515, 517, 523, 525, 529, 531, 552, 553, 563, 567, 568, 569, 637, 647, 673, 689, 698, 699, 701, 721, 722, 723, 744, 764, 784, 785, 807, 824, 827, 842, 843, 856, 868, 869, 870, 872], "replic": 234, "replica": [293, 833, 875], "repo": [21, 23, 692, 701, 739, 779, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 869], "report": [14, 859], "repositori": [21, 821, 828, 857], "repres": [3, 5, 21, 22, 26, 31, 32, 51, 61, 88, 118, 119, 126, 131, 134, 135, 136, 149, 151, 152, 153, 155, 159, 162, 173, 184, 185, 187, 188, 192, 193, 218, 248, 285, 287, 297, 300, 305, 310, 313, 321, 326, 331, 332, 337, 338, 389, 395, 396, 402, 403, 404, 416, 419, 423, 425, 432, 433, 434, 435, 563, 569, 598, 645, 653, 693, 700, 704, 708, 712, 714, 718, 723, 725, 729, 730, 735, 825, 827, 830, 834, 838, 839, 840, 842, 843, 844, 846, 847, 857, 859, 862, 868], "represensit": 14, "represent": [0, 4, 32, 62, 63, 131, 155, 187, 193, 212, 213, 214, 218, 285, 303, 305, 315, 328, 338, 387, 389, 391, 395, 396, 400, 404, 420, 425, 444, 447, 448, 449, 451, 453, 454, 456, 460, 554, 555, 556, 567, 583, 585, 586, 593, 649, 650, 669, 714, 716, 718, 720, 725, 729, 732, 734, 735, 736, 806, 807, 816, 817, 818, 824, 827, 834, 840, 842, 843, 844, 853, 856, 857, 858, 860, 862, 863, 865, 868, 869, 870, 872], "representation\ub4e4\uacfc": 816, "representation\ub4e4\ub85c": 816, "representation\ub4e4\ub85c\ubd80\ud130": 804, "representation\ub4e4\uc744": [803, 804, 806, 807, 817], "representation\ub4e4\uc758": [807, 816, 819], "representation\ub4e4\uc774": [803, 809], "representation\uc740": [813, 818], "representation\uc744": [802, 804, 806, 809, 816, 817], "representation\uc774\uace0": 817, "representation\uc774\ub2e4": 818, "reproduc": [293, 301], "repurpos": [138, 139, 140, 732], "reput": 145, "request": [21, 322, 698, 832, 833, 835, 838, 839, 845], "requir": [4, 5, 9, 10, 21, 51, 55, 60, 61, 66, 87, 88, 90, 107, 122, 130, 148, 210, 214, 215, 218, 288, 290, 291, 292, 294, 298, 309, 317, 328, 398, 399, 400, 401, 414, 415, 422, 425, 430, 431, 456, 460, 504, 505, 551, 560, 693, 697, 698, 699, 700, 701, 707, 708, 712, 716, 717, 723, 724, 726, 729, 813, 822, 823, 824, 825, 827, 832, 833, 834, 835, 837, 838, 839, 840, 843, 844, 852, 858, 862, 869, 875], "requires_grad": [9, 862], "requires_grad_": [9, 118, 119, 858], "research": [824, 857, 858, 859, 860, 862, 865, 869, 872], "reserv": 644, "reset": [392, 461, 728], "reset_paramet": [387, 388, 391, 392, 398, 399, 400, 402, 403, 404, 406, 409, 411, 412, 413, 416, 418, 419, 422, 425, 426, 427, 442, 448, 456, 457, 458, 460, 725, 728, 768, 812, 859], "reshap": [95, 96, 117, 292, 298, 299, 301, 302, 317, 557, 558, 559, 655, 718, 824, 827, 838, 839, 868], "reshuffl": [4, 238, 357, 545, 786], "resid": [288, 292, 294, 298, 309, 317], "residu": [398, 401, 409, 411, 412, 413, 416, 417, 420, 422, 423, 824, 869], "resolv": 21, "resourc": [2, 309, 697, 716, 724, 833, 875], "respect": [5, 95, 96, 140, 147, 184, 212, 213, 214, 217, 238, 241, 303, 310, 314, 315, 387, 391, 407, 423, 431, 433, 504, 505, 557, 558, 560, 563, 575, 604, 624, 700, 701, 709, 712, 713, 722, 824, 837, 838, 839, 843, 848, 849, 858, 865, 869], "respons": [297, 300, 303, 306, 308, 315, 316, 697, 698, 852], "rest": [6, 95, 96, 141, 238, 290, 295, 303, 308, 339, 343, 344, 544, 639, 691, 697, 729, 734, 826, 832, 843, 845], "restart": [566, 668, 672, 852], "restart_prob": [565, 566], "restaur": 163, "restrict": [44, 104, 118, 119, 126, 131, 247, 248, 285, 338, 849, 865], "resuffl": [357, 545], "result": [6, 9, 20, 21, 51, 56, 61, 70, 73, 88, 95, 96, 116, 118, 119, 122, 125, 126, 130, 197, 198, 209, 212, 224, 225, 238, 239, 240, 244, 245, 247, 248, 288, 290, 292, 294, 297, 298, 303, 310, 317, 322, 325, 330, 336, 337, 339, 342, 343, 344, 345, 348, 356, 359, 389, 395, 406, 426, 427, 456, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 552, 553, 555, 556, 557, 558, 560, 561, 564, 566, 567, 568, 569, 570, 574, 575, 576, 577, 598, 601, 602, 603, 612, 613, 620, 623, 631, 638, 639, 644, 645, 646, 647, 661, 662, 663, 668, 672, 681, 685, 698, 700, 701, 703, 704, 705, 707, 712, 714, 724, 725, 730, 734, 736, 797, 800, 823, 827, 828, 832, 833, 835, 838, 839, 842, 843, 845, 849, 852, 853, 858, 859, 869], "result_dict": [764, 807], "ret": [401, 423, 856, 859, 869], "retain": [56, 709, 794, 827], "retri": 200, "retriev": [22, 125, 126, 192, 232, 247, 248, 293, 388, 554, 575, 644, 661, 662, 663, 668, 669, 672, 677, 678, 679, 680, 734, 841, 843, 845, 858], "return": [0, 4, 5, 6, 10, 20, 22, 26, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 100, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 207, 209, 212, 215, 216, 217, 218, 219, 224, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 261, 262, 263, 264, 285, 286, 288, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 326, 328, 329, 330, 331, 332, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 655, 664, 666, 670, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 687, 693, 694, 695, 696, 698, 699, 701, 712, 713, 714, 717, 718, 720, 721, 722, 723, 725, 726, 729, 732, 734, 735, 736, 740, 741, 742, 744, 756, 757, 758, 761, 762, 763, 764, 765, 766, 769, 772, 774, 775, 776, 780, 781, 782, 784, 785, 797, 799, 800, 803, 804, 806, 807, 808, 809, 810, 813, 816, 817, 818, 819, 822, 823, 824, 825, 827, 832, 833, 835, 840, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "return_count": [111, 645, 647, 675], "return_eid": [564, 566], "return_eigv": 346, "return_label": 228, "return_map": [238, 701, 786, 852], "return_path": [453, 454, 574, 687], "return_uv": 48, "returning_indices_and_original_edge_ids_are_opt": 297, "retweet": 159, "reuiqr": 456, "reus": [699, 718, 735, 835], "reusabl": 729, "rev": 786, "rev_plai": [431, 654], "rev_r": 654, "rev_rev_plai": 431, "reveal": [243, 479], "revers": [4, 116, 123, 124, 130, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 170, 176, 191, 192, 218, 227, 228, 287, 300, 310, 313, 320, 325, 347, 420, 547, 549, 550, 560, 651, 654, 685, 693, 695, 701, 717, 718, 741, 781, 804, 841, 857, 858], "reverse_edg": [150, 154, 176], "reverse_eid": [4, 218, 762, 804], "reverse_etyp": [4, 218, 762, 804], "reverse_etypes_map": [320, 325, 718], "reverse_id": [4, 218, 762, 804], "reverse_typ": [4, 218, 762, 804], "revert": 685, "review": [21, 135, 136, 137, 161, 162, 163, 194], "revis": 869, "revisit": 564, "reweight": 428, "rewond": 754, "rewrit": 722, "rfeat": 458, "rg": [437, 560, 561], "rgcn": [718, 720, 723, 732, 734, 735, 736, 762, 763, 764, 772, 774, 775, 776, 804, 806, 807, 809, 816, 817, 818, 819, 857], "rgcnlayer": 857, "rgcn\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u4e0e\u5b83\u975e\u5e38\u76f8\u4f3c": 766, "rgcn\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6": 776, "rgcn\u7684\u5b9e\u73b0": 766, "rh": 504, "rhel": 821, "rho": [429, 505, 711, 755, 761, 796, 803, 858], "rhs_data": [504, 505], "rhs_field": [251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "rhs_target": 504, "rich": 162, "richer": 868, "rid": 720, "right": [4, 5, 118, 150, 349, 394, 397, 400, 403, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 425, 440, 441, 455, 460, 504, 505, 506, 637, 672, 673, 692, 698, 699, 711, 713, 717, 718, 723, 729, 734, 735, 755, 761, 762, 764, 766, 769, 775, 796, 803, 804, 807, 809, 813, 818, 827, 834, 842, 843, 857, 859, 862, 869], "rightarrow": [361, 858, 865], "riski": 145, "rng": 183, "rnn": [449, 687, 869, 870, 872], "robust": [197, 205], "roc_auc_scor": [832, 843, 853], "rocauc": 824, "rock": 862, "role": [182, 241, 430, 431, 432, 433, 434, 435], "roll": [297, 567], "rollout": [433, 435], "roman": 182, "room": 712, "root": [159, 215, 287, 410, 419, 453, 454, 574, 687, 821, 822, 823, 825, 832, 833, 835, 838, 839, 840, 844, 857, 858, 862, 865], "rossmann": 406, "rotat": [179, 336, 337], "roughli": [191, 238, 395, 700, 852, 858], "round": [91, 92, 736, 865], "rout": [868, 870, 872], "routin": [22, 841], "routing_num": 868, "row": [4, 27, 31, 32, 118, 119, 131, 150, 154, 176, 285, 288, 294, 296, 297, 298, 305, 310, 317, 321, 328, 338, 345, 388, 402, 403, 404, 448, 451, 461, 551, 555, 556, 573, 583, 585, 586, 591, 598, 601, 602, 603, 604, 605, 613, 616, 617, 618, 624, 626, 630, 649, 650, 671, 672, 698, 700, 706, 722, 786, 791, 808, 825, 827, 845, 852, 853, 858], "row1": 632, "row2": 632, "row_id": 725, "row_sort": 285, "rowfeatnorm": 13, "rpc": 4, "rr": [320, 754], "rst": [389, 725, 729, 730, 769, 770, 813, 814], "rtype": [292, 393, 394, 395, 396, 401, 404, 408, 410, 413, 414, 416, 418, 419, 423, 425, 426, 427, 428, 429, 456, 457, 460, 598], "rule": [21, 218, 734, 858, 859, 865, 869], "run": [4, 10, 14, 21, 212, 229, 233, 238, 290, 297, 303, 308, 330, 428, 430, 431, 432, 433, 434, 435, 567, 569, 692, 697, 698, 701, 716, 724, 726, 730, 821, 824, 832, 833, 835, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "run_epoch": 869, "runnabl": 21, "runtim": [0, 4, 14, 22, 156, 686, 698, 699, 701, 832, 835, 848, 849], "runtimeerror": 183, "runtimewarn": [856, 859], "russia": [164, 857], "rv": 22, "rvert": 455, "rvert_2": [728, 768, 812], "rw": [672, 852], "r\uc5d0": 800, "s2": 442, "s3": [21, 23, 287, 322, 350, 571, 695, 705, 741, 781, 790], "s_": 827, "s_c": 858, "s_i": 869, "s_j": [868, 869], "s_norm": 868, "sab": 444, "safe": [159, 709], "sage": [404, 697, 720, 721, 725, 732, 735, 736, 743, 772, 775, 776, 783, 816, 818, 819, 832, 833, 848, 852, 853, 875], "sageconv": [389, 404, 720, 721, 722, 725, 727, 728, 729, 736, 765, 767, 768, 769, 776, 808, 811, 812, 813, 819, 832, 833, 834, 835, 842, 843, 852, 853, 875], "sageconv\u7684\u6570\u5b66\u516c\u5f0f\u5982\u4e0b": 769, "sageconv\uc5d0\uc11c": 813, "sageconv\uc758": [812, 813], "sai": [4, 21, 691, 716, 835], "said": [4, 211], "same": [0, 3, 4, 5, 8, 9, 20, 28, 34, 35, 42, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 68, 70, 74, 87, 88, 91, 92, 93, 94, 100, 103, 108, 113, 116, 118, 119, 120, 121, 122, 130, 131, 134, 156, 161, 163, 181, 188, 197, 200, 205, 208, 209, 210, 212, 214, 217, 228, 230, 232, 237, 238, 239, 244, 245, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 288, 293, 294, 296, 297, 298, 299, 302, 303, 308, 317, 318, 330, 332, 338, 339, 343, 344, 345, 348, 356, 357, 360, 389, 391, 393, 394, 401, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 419, 420, 422, 423, 425, 436, 437, 439, 441, 445, 446, 448, 455, 459, 460, 462, 480, 481, 544, 545, 551, 557, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 576, 577, 578, 579, 581, 585, 586, 604, 624, 634, 638, 639, 644, 645, 647, 655, 670, 687, 692, 693, 695, 697, 698, 699, 700, 701, 704, 705, 706, 707, 708, 709, 714, 718, 719, 721, 723, 725, 726, 727, 729, 730, 732, 734, 735, 736, 751, 779, 792, 794, 800, 803, 806, 821, 824, 827, 833, 834, 838, 841, 842, 843, 845, 848, 852, 853, 856, 857, 858, 859, 862, 865, 869, 874, 875], "sampl": [3, 6, 7, 9, 13, 14, 122, 130, 139, 146, 147, 160, 165, 168, 169, 172, 173, 174, 175, 181, 184, 186, 194, 195, 198, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 229, 232, 233, 239, 240, 243, 291, 293, 295, 297, 300, 301, 303, 307, 308, 310, 311, 312, 313, 315, 316, 319, 320, 325, 336, 337, 387, 391, 392, 432, 433, 434, 435, 442, 479, 504, 578, 579, 612, 623, 639, 691, 693, 697, 699, 720, 724, 725, 729, 734, 735, 744, 761, 784, 803, 804, 805, 824, 827, 831, 832, 833, 835, 837, 843, 844, 849, 857, 858, 862, 865, 866, 869, 872, 875], "sample_bia": [432, 434], "sample_block": [697, 698, 743, 744, 761, 783, 784, 803], "sample_fronti": [761, 803], "sample_in_subgraph": 300, "sample_layer_neighbor": [297, 303], "sample_log_prob": 865, "sample_neg": 307, "sample_negative_edges_uniform": 297, "sample_neighbor": [4, 212, 214, 239, 297, 300, 308, 313, 697, 698, 699, 717, 718, 719, 720, 721, 723, 724, 743, 744, 761, 783, 784, 785, 803, 805, 832, 833, 835, 875], "sample_neighbors_bias": [578, 579], "sample_point": 6, "sample_sparse_neighbor": 725, "sample_subgraph": [300, 313, 717, 725], "sample_uniform_neg": [308, 319, 721, 724, 832], "sampled_csc": [297, 300, 303, 308, 310, 311, 832, 835], "sampled_matric": 725, "sampled_matrix": 725, "sampled_subgraph": [300, 301, 303, 305, 308, 325, 717, 725, 832, 835], "sampledsubgraph": [300, 305, 311, 313, 717], "sampledsubgraphimpl": [297, 303, 308, 310, 832, 835], "sampler": [4, 7, 13, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 233, 293, 300, 301, 303, 307, 308, 313, 315, 316, 398, 399, 400, 562, 563, 567, 697, 698, 702, 716, 719, 721, 725, 743, 744, 761, 762, 763, 764, 766, 783, 784, 803, 804, 805, 806, 807, 809, 831, 844, 848], "sampler1": 719, "sampler2": 719, "sampling_stag": 313, "samplinggraph": [291, 297, 304, 309, 718], "saniti": [131, 857], "satisfi": [53, 54, 421, 424, 581, 722, 832, 833, 835, 838, 839, 858, 869], "satisif": 120, "save": [0, 2, 4, 9, 23, 156, 206, 229, 238, 292, 317, 318, 334, 350, 571, 646, 661, 690, 691, 693, 700, 701, 705, 709, 712, 713, 714, 716, 726, 730, 732, 733, 736, 738, 742, 749, 778, 782, 786, 790, 800, 819, 822, 823, 825, 835, 838, 839, 840, 842, 843, 845, 848, 852, 857, 858, 865, 869], "save_dir": [156, 691, 738, 778], "save_graph": [172, 204, 350, 696, 705, 709, 742, 749, 753, 782, 790, 794, 841], "save_info": [696, 742, 782], "save_path": [138, 139, 140, 156, 691, 696, 738, 742, 778, 782], "save_tensor": 786, "sbm": [147, 174], "sbmdata": [695, 741, 781], "scalabl": [391, 452, 564, 672, 823, 828, 830, 831, 850, 851], "scalar": [6, 118, 119, 125, 212, 214, 217, 247, 302, 393, 405, 406, 409, 410, 411, 412, 419, 422, 425, 432, 434, 440, 598, 601, 602, 603, 605, 612, 615, 616, 617, 618, 621, 622, 630, 631, 704, 706, 733, 791, 807, 827, 843, 856, 858, 859, 868, 870, 872], "scalar_v": 827, "scale": [125, 134, 149, 185, 247, 349, 401, 419, 423, 455, 459, 478, 562, 701, 726, 810, 820, 824, 834, 843, 848, 849, 859, 869], "scale_const": 869, "scaled_exp": 869, "scaler": [401, 423, 614, 619, 726, 810], "scenario": [14, 22, 303, 308, 315, 316, 569, 699, 716, 734, 833], "scene": [409, 698], "schedul": [824, 831], "schema": [72, 232, 701, 709, 786], "scheme": [4, 47, 75, 95, 96, 117, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 217, 244, 245, 339, 343, 344, 480, 481, 544, 557, 558, 559, 644, 658, 659, 666, 672, 685, 693, 700, 701, 706, 709, 750, 753, 791, 794, 841, 844, 845], "schnet": 396, "schwarzenegg": 862, "scienc": [151, 192, 287], "scientif": [150, 176, 858], "scientist\uac00": 795, "scikit": 848, "scipi": [9, 31, 118, 119, 126, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 560, 562, 705, 749, 790, 823, 827, 832, 833, 835, 838, 839, 843, 858], "scipy_fmt": [31, 578, 579], "scope": [70, 843, 856, 858], "score": [13, 387, 405, 406, 411, 412, 421, 440, 456, 457, 458, 460, 718, 732, 733, 735, 762, 764, 772, 775, 804, 807, 816, 818, 824, 827, 832, 835, 843, 853, 857, 859, 869], "score_neg": 853, "score_po": 853, "scorepredictor": [718, 762, 764, 804, 807], "scorer": [457, 458], "scrape": 191, "scratch": [142, 143, 189, 190, 387, 841, 856, 857, 859], "script": [4, 21, 697, 698, 701, 702, 821, 822, 823, 824, 840, 841, 842, 843, 844, 845, 848, 849, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "script_fold": [746, 787], "scriptobject": 297, "sddmm": [487, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 513, 514, 519, 520, 521, 522, 527, 528, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 612, 824, 827], "sdg\uc5d0\uc11c": 784, "seaborn": 868, "seal": 843, "seamlessli": [727, 831], "search": [123, 124, 227, 228, 345, 433, 435, 436, 438, 573, 735, 818, 820, 848, 859, 869], "search\uc640": 818, "second": [20, 130, 131, 210, 212, 213, 214, 217, 285, 297, 338, 346, 389, 462, 565, 566, 567, 573, 575, 620, 630, 639, 645, 701, 729, 734, 828, 834, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 858, 859, 862, 865, 868, 869, 870, 872, 874, 875], "second_label": 299, "second_se": 299, "section": [4, 14, 21, 210, 212, 213, 214, 685, 687, 689, 690, 694, 695, 697, 698, 700, 701, 705, 711, 716, 720, 722, 729, 731, 732, 735, 736, 816, 818, 840, 843, 848, 852, 853, 858, 859, 875], "sector": 166, "see": [1, 4, 9, 20, 21, 44, 61, 66, 88, 89, 91, 104, 130, 131, 146, 169, 209, 210, 212, 214, 215, 218, 220, 221, 222, 223, 228, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 292, 294, 298, 317, 338, 345, 398, 399, 406, 421, 424, 430, 431, 440, 442, 447, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 578, 579, 583, 585, 586, 593, 616, 617, 618, 625, 627, 628, 629, 639, 645, 691, 693, 695, 698, 704, 705, 706, 708, 709, 712, 718, 720, 721, 722, 723, 731, 734, 736, 821, 823, 824, 832, 834, 841, 842, 843, 844, 845, 852, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "seed": [4, 142, 143, 161, 162, 163, 172, 173, 183, 189, 190, 197, 198, 205, 207, 208, 210, 211, 212, 214, 217, 240, 293, 295, 297, 299, 300, 301, 302, 303, 305, 308, 309, 313, 315, 316, 319, 325, 336, 337, 443, 552, 553, 562, 566, 567, 568, 698, 699, 717, 718, 720, 721, 724, 725, 744, 784, 785, 824, 832, 835, 837, 838, 839, 852, 858, 874], "seed2_contribut": [297, 567], "seed_nod": [214, 299, 717, 761, 803], "seeds_follow": [299, 301], "seeds_label": 718, "seeds_lik": [299, 301], "seeds_pre_time_window": [297, 300, 313], "seeds_timestamp": [297, 300, 313], "seem": [395, 858, 859], "seen": [723, 736, 828, 856, 857, 858, 859, 869], "seg": [438, 507, 573], "segal": 862, "seglen": 507, "seglen_a": 506, "segment": [13, 122, 135, 136, 506, 507, 578, 579, 685], "segmentmm": 13, "segmentreducebackward": [440, 447], "select": [6, 21, 56, 142, 143, 147, 171, 174, 182, 189, 190, 209, 210, 215, 238, 239, 240, 297, 303, 308, 315, 316, 345, 401, 423, 432, 434, 436, 438, 445, 448, 449, 451, 562, 567, 568, 569, 570, 571, 573, 587, 647, 675, 716, 720, 726, 803, 821, 823, 827, 831, 834, 835, 865], "self": [4, 26, 62, 63, 116, 117, 156, 162, 164, 165, 181, 216, 218, 224, 287, 300, 310, 313, 345, 393, 399, 403, 405, 408, 409, 411, 412, 413, 416, 419, 420, 424, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 447, 450, 462, 551, 559, 563, 573, 637, 655, 670, 673, 689, 691, 692, 693, 695, 696, 699, 700, 701, 704, 714, 717, 718, 720, 721, 722, 723, 725, 726, 728, 729, 730, 732, 734, 735, 736, 738, 739, 741, 742, 758, 761, 762, 763, 764, 765, 766, 768, 769, 770, 772, 774, 775, 776, 778, 779, 781, 782, 789, 800, 803, 804, 806, 807, 808, 809, 810, 812, 813, 814, 816, 817, 818, 819, 822, 823, 824, 825, 827, 832, 833, 835, 840, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "self_attn": 869, "self_loop": [165, 181, 393, 399, 405, 408, 409, 411, 412, 413, 416, 419, 424, 426, 430, 434, 435, 437, 551, 844, 874], "sell": [389, 704, 789], "seller": 704, "semant": [5, 9, 132, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 733, 862, 869], "semi": [140, 147, 393, 403, 419, 661, 701, 720, 786, 806, 840, 856, 858, 865], "send": [53, 73, 91, 94, 100, 113, 419, 421, 734, 859, 865, 869], "send_and_recv": [0, 91, 869], "send_sourc": 100, "sent": [419, 841, 842, 868, 869], "sentenc": [182, 184, 862, 863, 865, 869, 870, 872], "sentiment": [184, 862, 865], "separ": [4, 142, 143, 171, 180, 345, 396, 693, 700, 701, 724, 730, 734, 736, 821, 835, 838, 844, 849, 856], "septemb": 181, "sequenc": [54, 121, 131, 207, 285, 338, 355, 387, 391, 418, 440, 442, 657, 863, 865, 869, 872], "sequenti": [91, 92, 303, 315, 653, 721, 824, 832, 865], "seri": [709, 834, 835, 858], "serial": 453, "serv": [288, 297, 298, 689, 697, 722, 857], "server": [4, 21, 145, 177, 178, 179, 233, 691, 692, 697, 698, 699, 702, 853], "servic": [21, 159, 291, 697, 698], "set": [0, 1, 4, 6, 7, 10, 21, 23, 43, 44, 45, 46, 51, 68, 70, 72, 74, 77, 79, 82, 92, 101, 102, 103, 104, 105, 122, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 147, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 176, 181, 189, 190, 191, 194, 198, 207, 210, 211, 212, 213, 214, 215, 217, 218, 224, 230, 237, 238, 241, 242, 244, 245, 290, 291, 293, 297, 303, 305, 309, 313, 314, 335, 338, 339, 343, 344, 345, 349, 356, 358, 361, 393, 397, 398, 399, 400, 401, 403, 405, 408, 409, 410, 411, 412, 413, 416, 419, 423, 424, 426, 428, 429, 432, 434, 436, 437, 438, 442, 443, 444, 448, 451, 455, 461, 478, 480, 481, 544, 551, 552, 553, 563, 566, 569, 572, 573, 639, 645, 647, 649, 650, 677, 678, 680, 682, 683, 684, 686, 688, 695, 697, 698, 700, 701, 704, 708, 709, 717, 718, 719, 720, 722, 723, 724, 726, 728, 729, 730, 732, 734, 735, 736, 781, 793, 794, 821, 822, 823, 826, 827, 831, 832, 833, 835, 837, 838, 839, 840, 842, 844, 845, 848, 857, 859, 862, 865, 868, 869, 874, 875], "set_batch_num_edg": [27, 28, 102, 114, 115, 116, 117, 130, 244, 245, 339, 342, 348, 356, 480, 481, 544, 558, 561, 638, 647, 648, 734, 774, 817], "set_batch_num_nod": [27, 28, 101, 114, 115, 116, 117, 130, 244, 245, 339, 342, 348, 356, 480, 481, 544, 558, 561, 638, 647, 648, 734, 774, 817], "set_bodi": 22, "set_default_backend": 821, "set_devic": [833, 874, 875], "set_e_initi": 865, "set_edge_featur": 305, "set_edgecolor": 823, "set_epoch": [211, 874], "set_grad_en": 869, "set_n_initi": [27, 28, 93, 113, 865], "set_node_featur": 305, "set_num_thread": 849, "set_postfix": [825, 835], "set_sharing_strategi": [833, 875], "set_start_method": 848, "set_titl": 868, "set_trans_dec": 443, "set_trans_enc": 444, "set_xlabel": 868, "settran": 444, "settransformerdecod": 444, "settransformerencod": 443, "setup": [4, 719, 848, 849], "setuptool": 833, "seven": 858, "sever": [243, 291, 479, 691, 695, 706, 718, 723, 724, 729, 857, 869, 870, 872], "sg": [244, 339, 343, 344, 430, 431, 480, 544, 567, 568, 569, 570, 647, 675, 715, 717, 759, 761, 801, 803], "sg1": 841, "sg2": 841, "sgc": 426, "sgd": 698, "sh": [21, 821], "sha": [692, 739, 779], "sha1": [199, 200], "sha1_hash": [199, 200], "shall": [20, 685], "shallow": [64, 71, 217, 578, 579, 641, 642, 643], "shamelessli": 22, "shape": [4, 5, 6, 9, 12, 30, 47, 75, 95, 96, 117, 120, 126, 128, 129, 138, 143, 146, 147, 165, 168, 169, 174, 184, 186, 192, 195, 217, 241, 242, 243, 244, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 297, 299, 302, 326, 328, 331, 332, 339, 343, 344, 345, 346, 349, 359, 360, 361, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 478, 479, 480, 481, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 554, 555, 556, 557, 558, 559, 564, 566, 573, 574, 576, 577, 578, 579, 581, 584, 587, 589, 591, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 644, 645, 649, 650, 655, 658, 659, 662, 663, 666, 668, 672, 674, 677, 678, 680, 682, 683, 684, 685, 687, 689, 693, 695, 698, 700, 701, 706, 709, 725, 726, 733, 734, 735, 736, 741, 744, 750, 753, 775, 776, 781, 784, 786, 791, 794, 798, 807, 810, 818, 819, 821, 822, 823, 824, 825, 827, 837, 838, 839, 840, 841, 842, 843, 844, 845, 852, 853, 856, 858, 862, 869], "shape\uc740": 817, "shaplei": [433, 435], "shapley_step": [433, 435], "shard": [4, 698, 784], "share": [4, 22, 26, 69, 116, 122, 130, 131, 245, 285, 288, 291, 297, 298, 312, 333, 338, 342, 345, 348, 359, 360, 389, 413, 436, 438, 459, 561, 569, 573, 578, 579, 638, 644, 647, 697, 700, 701, 702, 786, 821, 849, 852, 857, 858, 859, 869], "share_edata": [99, 561], "share_ndata": [99, 561], "share_weight": 412, "shared_memori": 4, "shared_memory_nam": [297, 312, 333], "sharemem": [14, 345, 436, 438, 573], "sharp": 859, "sharper": 859, "shchur": [135, 136, 151, 152, 153], "shelf": 859, "shell": 848, "shift": [197, 205, 396], "short": [392, 709, 714, 828, 842, 862], "shortcut": 182, "shortest": [241, 453, 454, 574, 687, 689], "shortest_dist": [453, 454, 687], "shortest_path": 687, "shot": [732, 816], "should": [4, 21, 42, 53, 54, 89, 91, 116, 125, 126, 128, 129, 130, 131, 146, 169, 173, 178, 179, 184, 195, 196, 210, 212, 214, 217, 218, 220, 221, 222, 223, 229, 239, 240, 247, 248, 285, 289, 292, 293, 295, 297, 300, 302, 303, 305, 308, 310, 313, 315, 316, 317, 320, 321, 322, 325, 326, 331, 336, 337, 338, 342, 347, 348, 393, 394, 398, 399, 400, 401, 402, 403, 404, 414, 415, 422, 423, 426, 430, 431, 432, 433, 434, 435, 438, 449, 450, 453, 455, 459, 462, 552, 553, 560, 561, 562, 566, 567, 568, 569, 570, 571, 615, 616, 617, 618, 620, 621, 630, 638, 644, 645, 647, 657, 662, 663, 668, 672, 693, 698, 700, 701, 702, 708, 717, 719, 720, 726, 729, 827, 833, 838, 839, 840, 841, 842, 843, 845, 849, 852, 857, 858, 865, 868, 874, 875], "show": [4, 9, 14, 118, 119, 218, 238, 243, 479, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 716, 718, 720, 721, 726, 734, 735, 736, 822, 825, 832, 833, 834, 835, 836, 838, 839, 840, 843, 844, 852, 856, 857, 858, 859, 860, 862, 865, 869, 870, 872], "shown": [120, 695, 698, 708, 725, 729, 852, 853, 868, 869], "shuffl": [4, 168, 186, 207, 209, 210, 211, 212, 213, 214, 217, 218, 230, 237, 238, 293, 301, 387, 391, 430, 434, 435, 667, 694, 695, 697, 698, 701, 717, 718, 719, 720, 721, 723, 724, 734, 740, 741, 743, 744, 761, 762, 763, 764, 766, 774, 780, 781, 783, 784, 803, 804, 805, 806, 807, 809, 817, 824, 832, 833, 835, 838, 839, 848, 852, 853, 862, 874, 875], "shut": 290, "side": [22, 639, 834], "siev": 322, "sigma": [417, 419, 421, 424, 425, 455, 729, 735, 769, 775, 813, 818, 822, 823, 825, 856, 857, 859, 862, 869], "sigma_": 417, "sigma_k": 416, "sigmoid": [417, 827, 862, 865], "sign": [145, 637, 672, 673, 823], "sign_diffus": 823, "signal": [21, 174, 361, 823, 865], "signatur": [21, 53, 54, 859], "signdiffus": 13, "signifi": [297, 303, 308, 315, 316], "signific": [691, 719, 724, 831, 849, 859, 862], "significantli": [310, 726, 834], "silent": [393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 430, 431, 432, 433, 434, 435, 729], "sim": [735, 775, 818, 843], "similar": [4, 9, 26, 34, 53, 54, 100, 128, 129, 130, 161, 212, 219, 303, 315, 345, 387, 405, 436, 438, 456, 457, 458, 573, 639, 685, 694, 695, 697, 698, 699, 709, 718, 721, 722, 723, 725, 726, 735, 736, 753, 794, 821, 827, 828, 832, 833, 837, 840, 844, 852, 853, 857, 858, 859, 865, 868, 869, 874, 875], "similarli": [130, 219, 234, 238, 698, 700, 732, 825, 865, 870, 872], "simpl": [21, 22, 48, 118, 119, 349, 413, 478, 638, 647, 648, 675, 690, 696, 699, 726, 823, 833, 840, 844, 856, 858, 859, 860, 865, 868, 872], "simple_reduc": 100, "simplelosscomput": 869, "simplest": [723, 827], "simpli": [21, 22, 718, 721, 723, 724, 732, 734, 736, 840, 842, 843, 844, 856, 858, 859, 863, 865, 872], "simplic": [689, 701, 723, 838, 845, 859], "simplifi": [426, 722, 732, 823, 827, 856, 865, 869, 874], "simplifiedgat": 827, "simul": 858, "simultan": [290, 598, 601, 602, 603, 605, 697, 823, 862], "sin": 827, "sinc": [21, 27, 28, 56, 114, 115, 122, 145, 173, 182, 288, 298, 345, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 430, 431, 432, 433, 434, 435, 436, 438, 453, 454, 573, 578, 579, 639, 687, 691, 695, 709, 712, 719, 732, 734, 735, 822, 827, 832, 834, 843, 844, 845, 852, 856, 858, 859, 862, 865], "singl": [0, 4, 6, 22, 27, 28, 34, 35, 41, 43, 44, 46, 48, 51, 53, 55, 56, 57, 58, 60, 61, 73, 74, 77, 87, 88, 93, 94, 95, 96, 100, 101, 102, 103, 104, 128, 129, 131, 148, 164, 210, 212, 213, 214, 217, 218, 240, 288, 297, 298, 299, 302, 305, 309, 343, 344, 345, 347, 355, 359, 393, 416, 439, 440, 441, 442, 443, 444, 445, 446, 447, 459, 460, 482, 562, 566, 567, 568, 570, 642, 649, 650, 695, 697, 698, 701, 709, 712, 720, 722, 730, 731, 732, 734, 794, 806, 808, 828, 830, 834, 835, 840, 844, 845, 852, 853, 858, 859, 862, 869, 876, 877], "singular": [637, 673], "site": [184, 832, 835, 838, 839, 856, 859], "six": [832, 835, 838, 839], "size": [4, 5, 9, 20, 21, 22, 31, 62, 63, 120, 122, 128, 129, 135, 136, 138, 139, 146, 147, 151, 152, 153, 159, 160, 161, 162, 163, 168, 169, 174, 177, 181, 184, 192, 194, 196, 205, 210, 233, 288, 292, 293, 294, 296, 298, 301, 310, 317, 322, 326, 328, 330, 331, 336, 337, 387, 388, 390, 391, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 555, 556, 613, 620, 631, 649, 650, 655, 674, 687, 699, 701, 709, 713, 716, 717, 724, 725, 734, 746, 757, 787, 794, 799, 817, 821, 827, 832, 833, 835, 838, 839, 842, 848, 849, 856, 857, 858, 859, 862, 863, 865, 869, 872, 874, 875], "skeleton": 865, "skip": [418, 695, 730, 781, 838, 839, 858, 859, 862], "sklearn": [387, 832, 835, 843, 852, 853], "skm": 853, "sleeplessai": 754, "slice": [4, 26, 210, 706, 722, 856, 859], "slightli": 212, "sln": 821, "slope": [398, 409, 411, 412], "slow": [22, 303, 720, 843, 858], "slower": [345, 436, 438, 573, 869], "sm_53": [9, 712, 797], "small": [4, 10, 14, 70, 123, 124, 126, 167, 224, 227, 228, 243, 248, 285, 287, 345, 410, 417, 430, 431, 436, 438, 479, 563, 573, 651, 685, 697, 698, 701, 726, 731, 734, 834, 840, 843, 844, 845, 852, 858], "smaller": [4, 130, 297, 392, 395, 616, 617, 618, 630, 662, 663, 668, 821, 852, 857, 858], "smallest": [309, 346, 401, 436, 452, 570, 649, 650, 665], "smax": [598, 827], "smean": [598, 827], "smin": [598, 827], "smooth": [413, 429, 869], "sn": 868, "snap": [145, 175, 181], "snippet": [705, 708, 709, 733, 858], "so": [4, 5, 8, 9, 21, 22, 125, 130, 140, 186, 197, 224, 227, 228, 230, 237, 243, 247, 288, 290, 294, 296, 297, 298, 310, 317, 325, 336, 337, 357, 399, 405, 479, 545, 560, 563, 567, 569, 578, 579, 641, 642, 643, 645, 693, 695, 696, 698, 699, 701, 717, 719, 723, 732, 736, 825, 835, 840, 841, 843, 844, 849, 852, 856, 857, 858, 859, 862, 865, 868, 874], "soc": 145, "social": [134, 167, 387, 704, 843], "socio": 166, "socket": 233, "soduku": 440, "softmax": [361, 393, 409, 421, 440, 442, 448, 451, 576, 577, 824, 842, 857, 859, 865, 868, 869], "softmax_edg": 577, "softmax_i": [405, 409, 411, 412], "softmax_nod": 576, "softwar": [820, 849], "solubl": 195, "solut": [22, 690, 719, 795, 852, 858], "solv": [293, 440, 820, 857, 858, 863, 872, 875], "some": [0, 4, 5, 9, 14, 21, 27, 28, 41, 43, 46, 48, 74, 93, 103, 113, 114, 115, 128, 129, 131, 134, 150, 168, 186, 234, 238, 245, 293, 338, 357, 358, 389, 393, 399, 405, 408, 409, 411, 412, 413, 416, 419, 426, 432, 434, 557, 560, 645, 689, 692, 693, 695, 699, 700, 701, 703, 705, 708, 709, 712, 713, 716, 717, 728, 735, 781, 821, 828, 834, 841, 843, 852, 859, 865, 868, 874], "some_complex_data": 693, "someth": 731, "sometim": [22, 713, 718, 731, 732, 734, 834, 842], "somewhat": 718, "song": 754, "soon": 701, "sophist": 734, "sort": [39, 51, 52, 78, 123, 168, 186, 197, 205, 239, 297, 328, 392, 421, 424, 445, 560, 569, 578, 579, 581, 649, 650, 862, 869], "sort_csc_by_tag": 569, "sort_csr_by_tag": 569, "sortbi": [649, 650], "sorted_by_typ": 392, "sorted_feat": [649, 650], "sorted_idx": [649, 650], "sortpool": [649, 650], "sourc": [1, 4, 5, 6, 9, 10, 12, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 478, 479, 480, 481, 482, 487, 488, 489, 490, 491, 492, 493, 495, 497, 499, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535, 537, 539, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 606, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 679, 680, 681, 684, 685, 686, 693, 695, 700, 701, 703, 708, 709, 712, 721, 724, 728, 729, 781, 794, 803, 833, 834, 838, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "source_typ": [709, 753, 794], "sourcetensor": 858, "sp": [705, 749, 790, 843, 858], "sp_": 827, "sp_add_v": 827, "sp_broadcast_v": [625, 627, 628, 629], "sp_mat": [126, 248], "space": [9, 336, 337, 455, 709, 857, 865, 869], "spaci": 159, "spam": 163, "span": 4, "spars": [4, 9, 10, 13, 31, 32, 41, 56, 62, 63, 89, 126, 131, 247, 248, 285, 338, 387, 391, 398, 430, 431, 459, 505, 562, 689, 698, 705, 716, 719, 749, 784, 790, 820, 823, 825, 843, 856, 860, 869, 872], "sparse2th": 858, "sparse_coo": [31, 62, 63], "sparse_coo_tensor": 858, "sparse_emb": 459, "sparse_matrix": 620, "sparse_optim": [698, 744, 784], "sparseadagrad": [4, 10, 459, 698, 744, 784], "sparseadam": [4, 10, 387, 391, 459], "sparseattn": 824, "sparsefloat": 858, "sparsematrix": [12, 30, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 725, 822, 827], "sparsemha": 824, "sparseneighborsampl": 725, "sparser": 869, "sparsetensor": [31, 62, 63, 858], "sparsif": [662, 663, 668], "sparsiti": [662, 663, 668, 824, 827], "spatial": [178, 179, 454, 455], "spatial_encod": [454, 455, 689], "spatialencod": 689, "spawn": [210, 293, 719, 874], "spd": 687, "speak": 858, "special": [184, 401, 704, 709, 718, 723, 726, 827, 831, 858, 862], "specif": [14, 21, 42, 59, 108, 125, 126, 131, 165, 233, 240, 244, 245, 247, 248, 285, 297, 305, 338, 339, 342, 343, 344, 388, 391, 431, 458, 480, 481, 544, 552, 553, 563, 567, 568, 569, 570, 639, 662, 663, 668, 672, 689, 695, 697, 706, 709, 720, 721, 724, 794, 804, 820, 836, 838, 839, 849, 858, 874], "specifi": [4, 5, 6, 27, 28, 31, 34, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 68, 72, 75, 77, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 113, 117, 122, 125, 131, 140, 146, 148, 156, 159, 161, 162, 163, 169, 173, 196, 200, 212, 214, 215, 217, 227, 228, 229, 238, 244, 247, 285, 288, 292, 294, 296, 297, 298, 303, 305, 309, 310, 312, 317, 318, 338, 343, 344, 345, 389, 392, 401, 405, 406, 409, 410, 411, 412, 422, 423, 425, 437, 455, 480, 545, 551, 557, 558, 560, 566, 571, 573, 578, 579, 614, 616, 617, 618, 630, 639, 644, 645, 647, 691, 693, 695, 698, 699, 701, 702, 708, 709, 712, 714, 718, 723, 729, 732, 735, 753, 778, 794, 800, 813, 821, 825, 827, 832, 833, 837, 838, 839, 841, 852, 862, 875], "specifici": 848, "spectral": [397, 402], "speed": [10, 21, 22, 303, 310, 315, 645, 708, 713, 719, 734, 820, 828, 843, 852, 862, 865, 868], "speedup": [701, 848, 859], "sphinx": [21, 840, 841, 842, 843, 844, 845, 846, 848, 849, 850, 852, 853, 854, 856, 857, 858, 859, 862, 865, 868, 869, 872, 874, 875, 876], "sphinx_gallery_thumbnail_path": [840, 841, 842, 843, 844, 845], "sphinx_rtd_them": 21, "spilt": 192, "spinlock": 849, "splash": 862, "split": [13, 132, 133, 134, 137, 138, 139, 140, 144, 146, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 168, 169, 170, 171, 173, 176, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 205, 207, 209, 210, 211, 230, 237, 238, 293, 423, 545, 565, 644, 685, 691, 694, 695, 697, 699, 713, 714, 728, 729, 732, 736, 741, 778, 780, 781, 816, 835, 843, 852, 857, 858, 874], "split_dataset": 874, "split_edg": [694, 740, 780], "split_idx": [694, 740, 780], "split_mask": 205, "split_ratio": [138, 139, 140], "splitted_idx": 852, "split\ub97c": 784, "spmat": [705, 749, 790], "spmatrix": [12, 31, 126, 248, 581, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 611, 612, 613, 615, 616, 620, 621, 622, 623, 624, 626, 631, 632, 633, 634, 822, 823, 824, 825, 827], "spmm": [483, 484, 485, 486, 488, 489, 490, 491, 509, 510, 511, 512, 515, 516, 517, 518, 523, 524, 525, 526, 529, 530, 531, 532, 620], "spmv": 859, "spp": 396, "spring_layout": [823, 858], "sprod": 598, "spspmm": 620, "sq": 868, "sqrt": [4, 10, 345, 410, 419, 421, 436, 438, 448, 455, 573, 824, 859, 868, 869], "squar": [4, 10, 248, 410, 419, 825], "squash": 868, "squeez": [53, 54, 693, 695, 721, 741, 781, 832, 843, 857, 858], "squirrel": 185, "squre": 428, "src": [4, 5, 22, 34, 62, 63, 68, 98, 100, 110, 218, 241, 250, 361, 396, 405, 406, 409, 411, 412, 416, 419, 425, 456, 457, 458, 560, 563, 616, 639, 640, 644, 679, 695, 705, 712, 713, 718, 721, 725, 726, 729, 730, 732, 735, 741, 749, 756, 757, 761, 762, 764, 769, 770, 772, 775, 781, 790, 797, 799, 803, 804, 807, 810, 813, 814, 816, 818, 824, 842, 843, 845, 857, 858, 859, 862, 865, 869], "src_dot_dst": 869, "src_emb": [865, 869], "src_embed_expand": 865, "src_field": 869, "src_id": [59, 126, 248, 285, 693, 700, 786], "src_id_field": 693, "src_input": [730, 770, 814], "src_label": 858, "src_list": 865, "src_mul_egd": 869, "src_node": [639, 803], "src_node_id": 700, "src_po": 869, "src_seq": 869, "src_timestamp": 321, "src_type": [131, 338, 431, 433, 729, 769, 813], "src_x": 718, "srcdata": [4, 9, 68, 104, 208, 219, 223, 579, 639, 697, 698, 699, 713, 722, 725, 729, 743, 744, 757, 761, 762, 764, 765, 766, 769, 783, 784, 785, 799, 803, 804, 807, 808, 809, 813, 835, 853], "srcdst": 51, "srcnode": [68, 103, 208, 223, 639, 722, 761, 765, 803, 808], "srctype": [26, 45, 68, 224, 225, 714, 717, 721, 758, 800], "srl": 857, "ssh": [702, 787], "ssl": 200, "ssp": 396, "sst": 862, "sst_c63ddc86": 862, "sstbatch": 862, "sstdata": [695, 741, 781], "sstdataset": 862, "stabil": [4, 10, 243, 417, 479, 859, 865, 869], "stabl": 401, "stack": [20, 73, 345, 389, 413, 449, 462, 593, 679, 687, 689, 694, 714, 724, 736, 740, 758, 780, 800, 822, 823, 824, 825, 840, 842, 857, 858, 859], "staff": [155, 187, 193], "stage": [7, 288, 292, 294, 298, 303, 305, 308, 313, 317, 713, 721, 724, 823, 831, 835, 838, 839, 853, 869], "stai": [585, 586, 726], "stand": [409, 565, 687, 827, 874], "standalon": [4, 828], "standard": [5, 7, 21, 138, 140, 401, 423, 455, 687, 689, 690, 691, 693, 695, 857, 862], "stanford": [145, 175, 181, 184, 840, 862], "star": [161, 163, 172, 841], "start": [6, 32, 114, 115, 125, 131, 164, 227, 228, 238, 247, 285, 305, 310, 328, 338, 343, 344, 391, 554, 562, 564, 566, 578, 579, 693, 698, 699, 700, 703, 708, 709, 716, 720, 726, 734, 821, 822, 823, 824, 825, 829, 832, 833, 835, 838, 839, 841, 852, 853, 857, 858, 862, 865, 868, 874], "start_epoch": [210, 211], "start_epoch_tim": 721, "start_idx": 6, "start_tim": 164, "state": [4, 10, 21, 142, 143, 166, 189, 190, 700, 716, 802, 828, 862, 865, 866, 868, 869, 872], "state_dict": [4, 848, 865], "statement": [722, 732, 827], "static": [22, 859, 868], "static_cast": 22, "staticmethod": [22, 868], "statist": [132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 700, 857, 858, 859], "statu": 56, "std": [22, 401, 423, 868], "steadili": [866, 872], "step": [4, 9, 10, 21, 92, 141, 142, 143, 156, 189, 190, 212, 238, 303, 308, 315, 316, 387, 391, 418, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 459, 461, 505, 509, 510, 511, 512, 515, 516, 517, 518, 523, 524, 525, 526, 529, 530, 531, 532, 554, 560, 566, 567, 669, 697, 698, 699, 700, 711, 712, 716, 717, 718, 720, 721, 723, 725, 726, 728, 732, 734, 735, 736, 743, 744, 761, 762, 764, 766, 772, 774, 775, 776, 783, 784, 803, 804, 807, 809, 810, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 840, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 865, 869, 874, 875], "step_count": 865, "step_forward": 869, "step_siz": 824, "steplr": 824, "steven": 862, "still": [22, 70, 93, 108, 113, 230, 237, 693, 695, 718, 720, 721, 723, 726, 732, 734, 844, 869], "stochast": [3, 11, 183, 293, 301, 639, 710, 715, 718, 723, 729, 731, 734, 795, 801, 803, 804, 809, 813, 815, 817, 820, 834, 853, 865, 875], "stochastic_train": 718, "stochastical\ud558\uac8c": 802, "stochastictwolayergcn": [718, 723, 762, 763, 764, 766, 804, 806, 807, 809], "stochastictwolayerrgcn": [718, 723, 761, 762, 764, 766, 803, 804, 807, 809], "stop": [192, 564, 566, 732, 865], "stopping_mask": 192, "stopping\uc774\ub098": 816, "storag": [1, 4, 21, 116, 131, 285, 288, 291, 295, 309, 322, 338, 348, 560, 561, 693, 702, 708, 709, 828, 852], "store": [0, 1, 4, 7, 10, 31, 34, 53, 54, 59, 92, 95, 96, 100, 101, 102, 125, 126, 131, 134, 137, 138, 140, 141, 142, 143, 146, 149, 155, 156, 159, 161, 162, 163, 165, 168, 169, 171, 173, 180, 182, 184, 185, 186, 187, 188, 189, 190, 193, 200, 203, 204, 205, 206, 209, 218, 229, 230, 232, 237, 238, 239, 240, 244, 247, 248, 285, 286, 287, 291, 296, 310, 317, 318, 334, 338, 339, 343, 344, 345, 350, 357, 361, 389, 392, 397, 436, 438, 459, 480, 507, 544, 545, 552, 553, 557, 558, 560, 562, 564, 566, 567, 568, 569, 570, 571, 573, 575, 578, 579, 616, 617, 618, 639, 644, 645, 646, 647, 661, 662, 663, 665, 668, 669, 672, 673, 691, 692, 693, 695, 697, 698, 699, 700, 701, 705, 706, 708, 709, 712, 716, 733, 736, 778, 779, 785, 786, 797, 827, 832, 835, 836, 838, 839, 840, 841, 845, 852, 853, 856, 862, 865, 869], "store_eid": 229, "store_id": [49, 95, 96, 98, 106, 244, 339, 343, 344, 480, 544, 557, 558, 560, 575], "store_inner_edg": 229, "store_inner_nod": 229, "store_typ": 645, "stori": 828, "str": [4, 20, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 291, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316, 320, 321, 322, 325, 328, 333, 336, 337, 338, 339, 343, 344, 345, 350, 356, 357, 358, 361, 389, 391, 392, 399, 400, 401, 403, 410, 414, 416, 419, 422, 423, 424, 425, 428, 431, 432, 433, 436, 437, 438, 444, 448, 449, 451, 452, 456, 459, 460, 461, 480, 481, 482, 504, 505, 507, 544, 551, 552, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 566, 567, 568, 569, 570, 571, 573, 576, 577, 578, 579, 598, 626, 639, 644, 645, 646, 647, 649, 650, 653, 655, 660, 661, 662, 663, 665, 668, 669, 671, 672, 673, 675, 685, 691, 730, 738, 770, 778, 814, 833, 875], "straight": 713, "straightforward": [857, 858], "strategi": [197, 230, 237, 415, 433, 435, 564, 716, 831, 845, 852, 858], "stream": [210, 290, 295, 303, 308, 326, 331], "streamlin": 831, "strength": [413, 704, 733], "strict": 701, "string": [4, 22, 23, 26, 39, 52, 109, 121, 122, 131, 183, 221, 292, 297, 305, 309, 323, 324, 338, 388, 389, 390, 391, 692, 693, 701, 709, 712, 714, 734, 817, 837, 838, 841], "strong": [349, 478], "strongli": 21, "structur": [0, 4, 7, 13, 19, 21, 22, 56, 59, 67, 89, 101, 102, 108, 112, 125, 126, 131, 132, 141, 142, 143, 147, 150, 154, 159, 161, 162, 163, 167, 170, 173, 174, 175, 176, 181, 184, 197, 205, 210, 232, 234, 238, 246, 247, 248, 285, 305, 310, 314, 338, 430, 431, 432, 434, 448, 552, 553, 554, 561, 571, 639, 663, 669, 689, 697, 700, 701, 703, 704, 705, 707, 708, 717, 734, 786, 824, 827, 831, 837, 852, 857, 859, 860, 862, 863, 865, 866, 870, 872], "strucutr": 836, "strutur": [89, 112, 701], "stub": 21, "student": [155, 187, 193], "studi": [151, 152, 162, 820], "studio": 821, "style": [9, 858, 859], "stype": [389, 730, 770, 814], "sub": [9, 144, 259, 260, 273, 274, 283, 284, 389, 462, 501, 502, 504, 505, 528, 529, 530, 531, 532, 533, 542, 543, 626, 712, 723, 756, 797, 827, 833, 875], "sub_g": [244, 245, 339, 480, 481, 544, 709, 753, 794], "subbackward0": 396, "subclass": [3, 216, 300, 313, 430, 431, 432, 433, 434, 435, 690, 691, 695, 717, 719], "subg": [209, 215, 717, 786], "subgraph": [1, 3, 4, 7, 13, 26, 134, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 232, 239, 240, 241, 244, 245, 291, 297, 300, 303, 308, 310, 311, 313, 315, 316, 320, 325, 339, 343, 344, 357, 430, 431, 432, 433, 434, 435, 480, 481, 544, 545, 567, 568, 569, 570, 697, 699, 715, 717, 718, 719, 720, 721, 724, 729, 730, 759, 761, 801, 803, 813, 831, 832, 841, 843, 859, 865, 869], "subgraph_sampl": 303, "subgraphs_nod": [300, 313], "subgraphsampl": [216, 300, 717, 725], "subgraphx": 433, "subject": [6, 857], "sublay": [443, 444, 869], "sublist": 56, "submatrix": [345, 725], "submodul": [4, 389, 728, 821, 842], "subnet": 852, "suboptim": [701, 786], "subpackag": [5, 859], "subplot": [823, 865, 868], "subprocess": [290, 293], "subreddit": 181, "subsect": 723, "subsequ": [303, 308, 315, 316, 700, 701], "subset": [4, 14, 45, 79, 82, 105, 130, 146, 155, 157, 158, 169, 178, 179, 187, 193, 195, 197, 205, 207, 215, 230, 237, 245, 287, 293, 305, 388, 430, 431, 481, 698, 701, 706, 831, 834, 844, 865, 874], "subsetrandomsampl": 844, "subspac": 824, "substanc": 823, "substitut": [831, 859], "substract": [629, 827], "subtract": [633, 671], "subtract_min": 671, "subtre": 862, "succe": [4, 698], "success": 824, "successfulli": 832, "successor": [90, 94, 344, 356, 865], "sudo": [821, 852], "suffer": 848, "suffici": 852, "suffix": [127, 692, 779], "sugar": [351, 352, 353, 354, 635, 636, 862], "suggest": [21, 23, 432, 434, 712, 713, 841, 849, 859], "suitabl": [345, 436, 438, 573, 696, 700, 701, 716], "sum": [4, 5, 9, 10, 20, 22, 73, 79, 82, 91, 92, 93, 94, 100, 113, 117, 118, 119, 122, 138, 139, 140, 173, 197, 198, 205, 239, 240, 389, 400, 401, 409, 414, 416, 422, 423, 427, 430, 431, 432, 433, 438, 446, 447, 450, 459, 462, 486, 491, 505, 507, 512, 518, 526, 532, 555, 556, 564, 566, 567, 573, 598, 635, 636, 647, 655, 671, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 698, 699, 712, 714, 722, 725, 726, 728, 729, 730, 733, 734, 736, 756, 758, 765, 768, 769, 770, 773, 774, 776, 784, 797, 798, 800, 808, 810, 812, 813, 814, 817, 819, 822, 823, 825, 827, 833, 834, 840, 842, 844, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "sum_": [120, 122, 345, 349, 361, 392, 395, 396, 397, 401, 405, 407, 410, 411, 412, 413, 415, 416, 418, 419, 420, 421, 424, 427, 436, 438, 439, 440, 442, 446, 460, 463, 478, 573, 576, 577, 712, 734, 735, 756, 774, 775, 797, 817, 818, 825, 827, 834, 842, 843, 857, 859, 862, 865, 869], "sum_edg": 128, "sum_i": [671, 868], "sum_nod": 129, "sum_p": 869, "summar": [21, 734, 831, 859, 865], "summari": 831, "summat": [119, 128, 129, 389, 506, 507, 555, 581, 647, 734, 817, 834, 842, 858], "sumpool": [824, 874], "super": [146, 169, 216, 300, 313, 420, 430, 431, 432, 433, 434, 435, 462, 691, 695, 717, 718, 720, 721, 722, 723, 725, 726, 728, 730, 732, 734, 735, 736, 738, 741, 761, 762, 763, 764, 765, 766, 768, 770, 772, 774, 775, 776, 778, 781, 803, 804, 806, 807, 808, 809, 810, 812, 814, 816, 817, 818, 819, 822, 823, 824, 825, 827, 832, 833, 835, 840, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "superpixel": [146, 169], "superpixeldataset": [146, 169], "superscript": 856, "superset": 639, "supervis": [140, 147, 183, 393, 403, 419, 661, 701, 720, 786, 806, 840, 856, 865], "supplementari": 406, "support": [4, 5, 10, 13, 22, 110, 117, 122, 126, 138, 139, 146, 169, 210, 232, 238, 248, 290, 292, 293, 295, 301, 305, 336, 337, 348, 350, 357, 358, 361, 392, 404, 410, 459, 461, 462, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 560, 562, 564, 566, 567, 568, 569, 571, 574, 581, 620, 640, 646, 655, 674, 685, 693, 697, 698, 699, 700, 701, 705, 708, 712, 723, 726, 728, 733, 734, 768, 812, 820, 821, 822, 823, 824, 825, 827, 833, 835, 838, 839, 840, 842, 845, 849, 869, 875], "suppos": [21, 229, 297, 319, 506, 733, 798, 834, 856, 869], "suppress": [393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 832, 835, 838, 839, 845], "sure": [6, 21, 22, 227, 228, 293, 414, 425, 439, 441, 445, 446, 448, 451, 569, 692, 700, 779, 824, 865], "surpass": 21, "svd": [637, 673], "svd_pe": 673, "svdpe": 13, "swap": 320, "switch": [821, 823], "sym": 461, "sym_new_etyp": 654, "symbol": [5, 693, 869], "symmetr": [183, 347, 419, 461, 661, 672, 704, 732, 816, 822, 827, 858], "sympi": [832, 833, 835, 838, 839], "sync": 852, "synchron": [4, 303, 308, 326, 331, 698, 784, 833, 849, 865, 874, 875], "synset": 191, "syntact": [182, 862, 863, 872], "syntax": [351, 352, 353, 354, 635, 636, 709, 732, 794, 862], "synthet": [14, 141, 142, 143, 172, 189, 190, 693, 731, 732, 816, 844, 845], "syntheticdataset": 845, "system": [4, 22, 166, 173, 289, 322, 459, 562, 704, 825, 832, 833, 835, 838, 839, 843, 848, 849, 852], "systemat": [432, 434], "systemctl": 852, "t": [4, 10, 21, 56, 60, 87, 89, 118, 119, 131, 163, 164, 168, 200, 212, 239, 240, 241, 291, 297, 338, 356, 392, 395, 405, 409, 411, 412, 416, 418, 421, 424, 428, 429, 431, 432, 433, 442, 448, 456, 457, 458, 460, 461, 562, 564, 566, 567, 639, 645, 657, 663, 672, 700, 701, 705, 711, 718, 720, 721, 725, 726, 755, 796, 824, 825, 827, 832, 838, 839, 852, 858, 859, 865, 869], "t0": [699, 785, 856, 859], "t1": [699, 785], "t_i": 869, "t_j": 869, "tabl": [178, 179, 387, 388, 391, 701, 828, 845, 859], "tabular": [701, 705], "tackl": [432, 433, 434, 435, 858], "tag": [21, 569, 578, 579], "tag_offset": [578, 579], "tag_offset_nam": [569, 578, 579], "tag_pos_nam": [578, 579], "tag_typ": [578, 579], "tail": [457, 458], "take": [4, 20, 51, 118, 119, 120, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 210, 212, 213, 214, 217, 218, 239, 240, 285, 293, 301, 313, 347, 405, 406, 409, 411, 412, 420, 422, 423, 425, 430, 431, 432, 433, 434, 435, 563, 567, 568, 569, 570, 598, 604, 624, 626, 675, 689, 693, 695, 698, 701, 708, 709, 712, 714, 716, 717, 718, 719, 721, 723, 727, 729, 730, 731, 732, 733, 734, 736, 821, 823, 825, 833, 834, 842, 843, 845, 848, 849, 857, 858, 859, 862, 865, 869, 874], "taken": [161, 163, 288, 298, 858], "talk": 844, "tanh": [827, 862], "tape": 137, "tar": [692, 739, 779], "target": [108, 132, 133, 144, 170, 177, 178, 179, 201, 241, 320, 412, 421, 433, 435, 607, 701, 723, 724, 832, 835, 869], "target_class": [433, 435], "target_dir": 201, "target_idx": 857, "target_ntyp": 140, "task": [2, 7, 21, 122, 132, 133, 135, 136, 137, 138, 139, 140, 144, 146, 147, 150, 151, 152, 153, 154, 159, 160, 161, 163, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 188, 194, 195, 197, 198, 287, 291, 303, 304, 305, 308, 309, 315, 316, 694, 695, 698, 701, 717, 723, 725, 731, 732, 734, 735, 736, 781, 820, 824, 825, 828, 831, 832, 833, 835, 836, 840, 844, 852, 853, 859, 865, 874, 875], "task_lint": 21, "task_nam": [832, 835], "task_unit_test": 21, "tau": [421, 428, 429], "tb": 392, "tcmalloc": 849, "tcp": [833, 874, 875], "tcpstore": 459, "teach": 843, "teacher": 865, "team": [21, 869, 874], "techniqu": [391, 732, 862, 869], "technologi": 849, "teleport": 394, "tell": [5, 21, 130, 210, 211, 238, 693, 723, 841, 842, 844], "temperatur": [432, 434], "templat": [21, 156, 691, 778], "tempor": [25, 145, 164, 166, 212, 297, 300, 303, 313, 315, 316], "temporal_sample_layer_neighbor": [297, 315], "temporal_sample_neighbor": [297, 316], "temporalneighborsamplerimpl": [315, 316], "temporari": 25, "ten": 159, "tend": [120, 714], "tensor": [0, 1, 5, 6, 7, 9, 12, 13, 20, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 138, 139, 140, 146, 159, 165, 168, 169, 172, 173, 175, 177, 178, 179, 184, 186, 195, 210, 211, 218, 219, 224, 225, 227, 228, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 285, 288, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 326, 328, 330, 331, 332, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 348, 349, 350, 355, 356, 357, 358, 359, 360, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 549, 551, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 589, 591, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 653, 654, 655, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 693, 695, 699, 701, 705, 706, 707, 708, 709, 712, 717, 719, 722, 725, 726, 727, 729, 730, 733, 734, 736, 741, 744, 750, 751, 752, 753, 774, 781, 791, 792, 793, 794, 798, 808, 810, 817, 821, 823, 824, 825, 827, 828, 832, 833, 835, 838, 839, 840, 841, 842, 844, 845, 852, 857, 859, 860, 862, 865, 869, 872, 874, 875], "tensor_new": 858, "tensor_numpi": 845, "tensorcor": 726, "tensorcore\ub4e4\uc744": 810, "tensorflow": [9, 13, 21, 23, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 695, 708, 722, 727, 734, 736, 808, 811, 817, 820, 828], "tensorflow\u7684keras\u5c42": 767, "tensorflow\u7684tensor\u7c7b\u6216mxnet\u7684ndarray\u7c7b": 752, "tensorflow\uc5d0\uc11c\ub294": 781, "tensorflow\uc5d0\uc11c\ub3c4": 819, "tensorflow\uc758": 793, "term": [4, 10, 14, 144, 149, 185, 319, 387, 390, 398, 406, 409, 410, 411, 419, 429, 689, 820, 848, 858, 862, 865, 868], "termin": [562, 566], "termination_prob": 562, "tesla": 14, "test": [4, 9, 25, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 238, 291, 309, 314, 332, 694, 698, 701, 725, 732, 736, 740, 744, 745, 780, 784, 786, 816, 821, 822, 823, 824, 825, 827, 831, 832, 833, 835, 837, 838, 839, 840, 842, 844, 845, 852, 853, 856, 857, 859, 869, 874, 875], "test_acc": [822, 823, 825, 833, 840, 842, 874, 875], "test_data": [164, 166, 184], "test_dataload": [824, 844], "test_edg": [139, 853], "test_edge_mask": [157, 158, 191], "test_el": 332, "test_idx": [138, 140, 824, 857], "test_label": [694, 740, 780, 853], "test_load": [694, 740, 780, 874], "test_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 387, 693, 695, 736, 741, 776, 781, 819, 822, 823, 825, 840, 842, 845, 852, 856, 857], "test_metr": 824, "test_neg_dst": 853, "test_neg_g": 843, "test_neg_src": 853, "test_neg_u": 843, "test_neg_v": 843, "test_nid": 852, "test_pos_dst": 853, "test_pos_g": 843, "test_pos_src": 853, "test_pos_u": 843, "test_pos_v": 843, "test_pr": 853, "test_rat": 173, "test_ratio": 173, "test_sampl": 844, "test_set": [309, 314, 832, 833, 835, 837, 838, 839, 874, 875], "test_siz": [824, 843], "texa": 187, "text": [161, 182, 396, 413, 419, 421, 428, 448, 701, 711, 731, 755, 796, 824, 842, 857, 859, 865, 868], "textbf": [865, 868], "textrm": [178, 179, 862, 869], "textur": 868, "tf": [4, 161, 828], "tf_force_gpu_allow_growth": 821, "tf_geometr": 828, "tgt": 869, "tgt_emb": 869, "tgt_po": 869, "tgt_seq": 869, "tgt_y": 869, "tgz": [692, 695, 741, 779, 781], "tgz\u6587\u4ef6": 739, "th": [4, 5, 9, 10, 27, 34, 36, 37, 48, 53, 55, 60, 87, 100, 114, 116, 122, 128, 129, 138, 146, 147, 157, 158, 165, 168, 169, 172, 174, 175, 186, 191, 212, 214, 217, 218, 244, 288, 292, 294, 298, 317, 345, 347, 361, 389, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 462, 480, 507, 551, 555, 556, 561, 565, 566, 571, 576, 577, 638, 645, 647, 649, 650, 674, 684, 685, 687, 689, 697, 698, 699, 700, 701, 705, 706, 707, 708, 709, 716, 734, 743, 744, 749, 750, 751, 752, 753, 783, 784, 785, 786, 790, 791, 792, 793, 794, 817, 824, 825, 827, 834, 845, 848, 852, 853, 856, 857, 858, 862, 868, 869], "than": [4, 21, 27, 28, 66, 95, 96, 118, 119, 120, 121, 131, 139, 142, 143, 161, 168, 178, 189, 190, 224, 285, 288, 292, 293, 294, 297, 298, 300, 305, 313, 317, 322, 336, 337, 338, 345, 392, 395, 432, 434, 436, 438, 453, 463, 563, 567, 568, 569, 573, 616, 617, 618, 630, 662, 663, 668, 708, 709, 713, 719, 730, 732, 735, 753, 794, 821, 825, 828, 838, 839, 848, 849, 852, 857, 858, 859, 862, 865], "thei": [1, 4, 9, 11, 20, 21, 26, 56, 117, 119, 122, 130, 131, 138, 140, 151, 152, 188, 232, 239, 240, 243, 310, 313, 321, 338, 355, 356, 395, 462, 479, 561, 564, 566, 567, 690, 691, 697, 698, 699, 701, 706, 707, 709, 712, 718, 722, 726, 729, 730, 731, 733, 824, 828, 837, 840, 842, 844, 852, 858, 859, 862, 865, 868], "them": [1, 4, 5, 9, 41, 48, 56, 68, 73, 93, 100, 113, 120, 130, 133, 142, 144, 148, 149, 155, 178, 185, 187, 193, 205, 219, 243, 244, 247, 297, 320, 339, 343, 344, 345, 395, 430, 431, 432, 433, 434, 435, 440, 449, 456, 479, 480, 544, 559, 569, 571, 615, 621, 639, 647, 653, 693, 697, 698, 699, 701, 704, 705, 709, 711, 719, 724, 732, 734, 820, 827, 834, 836, 838, 839, 840, 841, 843, 852, 858, 862, 863, 865, 869, 872, 874], "themselv": [4, 21, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 718, 834, 843], "theori": 858, "ther": 429, "therefor": [4, 26, 218, 293, 645, 698, 699, 718, 719, 825, 843, 853, 857, 858, 859, 862], "theta": [408, 409, 414, 415, 422, 426, 427, 823, 858], "theta_": [823, 858], "theta_0": 823, "theta_i": 858, "theta_k": 662, "theta_r": 823, "theta_x": 858, "thew": 26, "thi": [4, 5, 6, 7, 8, 10, 14, 21, 22, 24, 26, 27, 28, 34, 40, 41, 44, 45, 48, 51, 52, 59, 70, 73, 79, 82, 89, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 137, 140, 141, 142, 143, 145, 148, 156, 157, 158, 159, 160, 162, 164, 165, 166, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 197, 209, 210, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 229, 230, 233, 237, 238, 239, 240, 241, 243, 244, 245, 285, 288, 290, 292, 293, 294, 297, 298, 299, 300, 301, 303, 305, 308, 309, 310, 313, 315, 316, 317, 320, 326, 331, 336, 337, 338, 339, 342, 343, 344, 345, 346, 348, 356, 357, 358, 361, 389, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 418, 419, 423, 426, 427, 430, 431, 432, 433, 434, 435, 436, 438, 440, 442, 449, 452, 453, 454, 455, 459, 460, 462, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 554, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 569, 570, 573, 578, 579, 585, 586, 609, 616, 617, 618, 620, 626, 630, 637, 638, 639, 641, 642, 643, 644, 645, 647, 648, 661, 662, 663, 664, 665, 666, 668, 669, 670, 672, 673, 674, 682, 683, 684, 685, 687, 688, 689, 690, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 705, 708, 709, 711, 712, 713, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 733, 734, 735, 736, 781, 786, 806, 819, 821, 822, 823, 824, 825, 827, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 860, 862, 863, 865, 866, 868, 869, 870, 872, 874, 875], "thing": [210, 224, 563, 696, 718, 862], "third": [131, 210, 212, 213, 214, 217, 218, 285, 338, 565], "thoma": 829, "thorough": 639, "thoroughli": [858, 859], "those": [27, 28, 114, 116, 209, 218, 241, 293, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 436, 438, 712, 713, 716, 728, 834, 841, 859, 862, 865, 869], "though": [21, 22, 239, 240, 303, 308, 315, 567, 705, 858], "thought": [865, 869], "thousand": 835, "thre": 869, "thread": [21, 210, 233, 290, 292, 303, 308, 833, 852, 875], "three": [14, 48, 62, 63, 80, 126, 131, 161, 163, 198, 215, 228, 238, 248, 285, 338, 389, 461, 573, 645, 693, 695, 697, 698, 700, 701, 712, 720, 725, 729, 833, 837, 842, 843, 845, 848, 857, 858, 862, 865, 869, 875], "threshold": [297, 429, 433, 435, 662, 663, 668], "through": [22, 234, 698, 734, 820, 844, 852, 853, 857], "throughout": [305, 708, 865], "throughput": 697, "throw": 685, "thrown": [863, 872], "thu": [4, 9, 14, 22, 70, 122, 182, 198, 243, 244, 303, 315, 339, 343, 344, 399, 426, 463, 479, 480, 544, 555, 556, 693, 698, 699, 701, 705, 707, 726, 823, 856, 857, 858, 859, 862, 865, 868, 869, 874], "thumb": 21, "thumbnail": [840, 841, 842, 843, 844, 845], "ti": 51, "tid": 699, "tild": [394, 397, 413, 421, 426, 427, 461, 823, 856, 858], "tile": 868, "time": [6, 113, 118, 164, 166, 200, 212, 229, 297, 300, 303, 308, 313, 315, 316, 343, 344, 392, 419, 420, 436, 452, 563, 566, 567, 663, 672, 691, 696, 698, 701, 713, 720, 721, 726, 734, 757, 799, 823, 824, 825, 827, 828, 833, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "time_enc": 869, "timestamp": [297, 300, 313, 315, 316, 321], "tini": [130, 184, 287, 862], "tiny_data": 184, "tiny_sst": 862, "tip": [210, 716], "tissu": 859, "titl": [705, 749, 790], "tmp": [317, 318, 432, 434, 701, 745, 786], "to_add_edg": 865, "to_bfloat16": 726, "to_bidirect": [6, 116, 708, 752, 793], "to_block": [4, 131, 698, 699, 717, 719, 744, 761, 784, 785, 803, 805], "to_csv": [838, 839], "to_dens": [823, 825, 827], "to_direct": [246, 247], "to_heterogen": 645, "to_homogen": [421, 424, 644, 709, 753, 794, 857], "to_homogenen": 26, "to_jshtml": 823, "to_loc": 4, "to_networkx": [823, 858, 862, 868], "to_numpi": [693, 845], "to_partid": 4, "to_pyg": 310, "to_pyg_data": 305, "to_simpl": [118, 119, 186, 648], "to_undirect": 823, "tocoo": [126, 248], "todens": 843, "todo": [315, 316], "togeth": [11, 26, 91, 92, 101, 102, 130, 135, 136, 137, 212, 214, 238, 336, 346, 355, 427, 428, 429, 439, 441, 445, 446, 560, 701, 709, 724, 734, 825, 838, 839, 858, 874], "toi": [175, 869], "token": [862, 869, 870, 872], "tolevi": 13, "tolist": [565, 823, 862], "tolok": 188, "toloka": 188, "tone": 164, "too": [4, 22, 60, 87, 238, 290, 309, 701, 707, 719, 792, 827, 834, 869], "tool": [697, 698, 701, 746, 786, 787, 821, 827, 828, 835, 840, 852], "toolbox": 406, "top": [142, 143, 161, 421, 445, 649, 650, 698, 701, 820, 824, 825, 827, 831, 843, 848, 852, 857], "topic": [338, 646, 700, 716, 858], "topk": [345, 436, 438, 573, 649, 650], "topolog": [550, 651, 862], "topologi": [13, 291, 309, 395, 427, 733, 862, 863, 865, 872], "topological_nodes_gener": [550, 862], "torch": [4, 5, 6, 8, 9, 10, 12, 20, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 131, 138, 146, 147, 165, 168, 169, 172, 174, 183, 184, 186, 195, 209, 210, 211, 212, 214, 215, 217, 218, 224, 225, 242, 243, 244, 245, 247, 248, 261, 262, 263, 264, 285, 288, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 326, 328, 329, 330, 331, 332, 336, 337, 338, 339, 343, 344, 345, 349, 355, 359, 360, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 478, 479, 480, 481, 507, 544, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 598, 599, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 638, 639, 640, 644, 645, 646, 647, 649, 650, 654, 655, 658, 659, 660, 661, 662, 663, 666, 667, 668, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 693, 694, 695, 697, 698, 700, 701, 705, 706, 707, 708, 709, 712, 713, 717, 718, 719, 720, 721, 722, 723, 725, 726, 728, 729, 730, 731, 732, 734, 735, 736, 740, 741, 743, 744, 749, 750, 751, 752, 753, 756, 757, 761, 762, 763, 764, 765, 766, 768, 769, 770, 771, 772, 774, 775, 776, 780, 781, 783, 784, 790, 791, 792, 793, 794, 797, 799, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 818, 819, 822, 823, 824, 825, 827, 832, 833, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "torch_feat": [292, 298, 317], "torch_featur": 317, "torchaudio": 827, "torchbasedfeatur": [292, 298, 838, 839], "torchbasedfeaturestor": [309, 838, 839], "torchdata": [724, 832, 833, 835, 838, 839], "torchmetr": [825, 833, 875], "torchvis": 827, "tosimpl": [13, 657], "total": [4, 10, 80, 81, 181, 297, 303, 308, 312, 315, 316, 387, 392, 420, 438, 447, 695, 699, 700, 724, 830, 840, 841, 842, 843, 844, 845, 847, 848, 849, 851, 852, 853, 855, 856, 857, 858, 859, 861, 862, 864, 865, 867, 868, 869, 871, 873, 874, 875, 877], "total_correct": 874, "total_loss": [721, 725, 824, 832, 833, 874, 875], "total_node_weight": 700, "total_num_edg": [297, 328], "total_num_nod": [297, 328, 720, 838, 839], "touch": 21, "toward": 658, "tower": [401, 423], "tp_": 859, "tq": [825, 835], "tqdm": [720, 721, 824, 825, 832, 833, 835, 838, 839, 869, 875], "tr": 862, "trace": [564, 565, 566], "track": 862, "trade": [145, 433, 435, 869], "traffic": [149, 185], "train": [3, 4, 7, 9, 10, 11, 23, 25, 89, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 209, 210, 211, 212, 213, 214, 217, 218, 230, 233, 237, 238, 287, 291, 293, 303, 309, 314, 315, 391, 401, 415, 420, 423, 426, 430, 431, 432, 433, 434, 435, 459, 637, 639, 673, 688, 689, 694, 695, 698, 699, 700, 701, 710, 712, 715, 717, 719, 720, 724, 729, 740, 743, 771, 774, 776, 780, 781, 783, 786, 797, 803, 804, 809, 810, 815, 816, 817, 819, 820, 821, 828, 830, 832, 834, 837, 838, 839, 845, 846, 847, 848, 849, 856, 859, 862, 863, 865, 866, 868, 872, 874], "train_acc": [840, 842, 857], "train_data": [164, 166, 184], "train_dataload": [824, 832, 835, 844, 852, 853], "train_dataset": [146, 169], "train_dataset_subset": [146, 169], "train_dist": [746, 787, 852], "train_edg": [157, 158, 191], "train_edge_mask": [157, 158, 191], "train_eid": [4, 212, 214, 218, 762, 804, 853], "train_eid_dict": [762, 764, 804, 807], "train_g": [157, 158, 191, 843], "train_graph": 139, "train_idx": [138, 140, 695, 741, 781, 824, 857], "train_it": 869, "train_label": [694, 740, 780], "train_load": [694, 740, 780, 862, 874], "train_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 238, 387, 430, 693, 695, 697, 698, 701, 726, 731, 732, 736, 741, 743, 744, 745, 771, 772, 776, 781, 783, 784, 786, 810, 815, 816, 819, 822, 823, 825, 840, 842, 845, 852, 856, 857, 859], "train_neg_g": 843, "train_neg_u": 843, "train_neg_v": 843, "train_nid": [4, 210, 212, 213, 214, 217, 697, 698, 719, 743, 744, 761, 766, 783, 784, 803, 805, 809, 848, 852, 853], "train_nid_dict": [766, 809], "train_on": [4, 209, 210, 211, 212, 213, 214, 215, 218], "train_pos_g": 843, "train_pos_u": 843, "train_pos_v": 843, "train_rat": 173, "train_sampl": 844, "train_se": [764, 807], "train_set": [157, 158, 191, 309, 314, 717, 718, 723, 832, 833, 835, 837, 838, 839, 858, 874, 875], "train_siz": [161, 162, 163, 164, 166, 824, 843], "train_step": [432, 434], "train_step_nod": [432, 434], "trainabl": [4, 822, 827, 857], "trainer": [4, 230, 237, 238, 697, 698, 699, 701, 702, 852, 853], "trainer_id": 238, "trainer\uc5d0\uac8c": 783, "training_load": 858, "training_set": 195, "training\uc744": 797, "trainset": [147, 174, 862], "trang": [721, 825], "transact": 145, "transduct": [140, 197, 198, 426, 698, 744, 784], "transfer": [210, 289], "transform": [9, 13, 26, 27, 28, 114, 115, 116, 117, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 244, 245, 306, 339, 342, 345, 348, 356, 361, 390, 392, 395, 401, 405, 409, 421, 431, 432, 433, 436, 437, 438, 443, 444, 448, 449, 450, 451, 452, 453, 454, 455, 463, 480, 481, 544, 551, 558, 561, 569, 638, 647, 648, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 689, 693, 701, 705, 717, 718, 719, 721, 724, 726, 734, 822, 826, 830, 832, 856, 857, 858, 859, 862, 865, 870, 871, 872], "transform1": 665, "transform2": 665, "transform3": 665, "transformer_encod": 452, "transit": 566, "translat": [158, 191, 457, 869], "translationdataset": 869, "transmiss": 210, "transpar": [699, 724], "transpos": [31, 561, 578, 580, 606, 824, 827, 858], "travel": [823, 865], "travers": [13, 91, 92, 123, 124, 227, 228, 547, 549, 550, 562, 564, 566, 651], "traversal_ord": 862, "treat": [310, 321, 391, 567, 568, 647, 672, 709, 729, 753, 794, 841, 843, 844, 845, 858, 862, 863, 869, 872], "tree": [14, 21, 159, 182, 184, 189, 190, 228, 345, 433, 435, 436, 438, 573, 830, 863, 864, 866, 869, 872], "tree_height": [189, 190], "treebank": [184, 862], "treelstm": 862, "treelstmcel": 862, "tri": [4, 148, 238, 357, 358], "trick": [4, 22, 856], "trigger": [0, 91, 92, 410, 714, 726, 800, 824, 828, 842, 845, 858, 859, 862], "tripl": [457, 458, 857], "triplet": [4, 30, 31, 32, 34, 39, 47, 48, 52, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 131, 221, 245, 338, 482, 555, 557, 559, 576, 644, 693, 709], "trivial": [9, 346, 401, 452, 665, 862], "troubl": 21, "true": [4, 6, 9, 10, 25, 31, 48, 49, 57, 58, 65, 66, 67, 69, 95, 96, 98, 99, 106, 111, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 197, 198, 200, 201, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 224, 227, 228, 229, 230, 234, 236, 237, 238, 239, 240, 244, 246, 285, 288, 290, 293, 295, 297, 303, 308, 309, 310, 315, 316, 317, 318, 330, 332, 339, 340, 342, 343, 344, 345, 346, 348, 387, 390, 391, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 448, 449, 450, 451, 452, 453, 461, 480, 544, 545, 547, 549, 550, 551, 557, 558, 560, 561, 563, 564, 566, 567, 568, 569, 570, 573, 574, 575, 578, 592, 637, 638, 639, 645, 646, 647, 649, 650, 651, 653, 654, 655, 665, 666, 671, 673, 686, 687, 693, 694, 695, 697, 698, 700, 701, 717, 718, 719, 720, 721, 723, 724, 725, 726, 728, 734, 740, 741, 743, 744, 761, 762, 763, 764, 766, 768, 774, 780, 781, 783, 784, 786, 803, 804, 805, 806, 807, 809, 810, 812, 817, 821, 822, 823, 824, 825, 827, 832, 833, 835, 837, 838, 839, 840, 844, 845, 848, 852, 853, 856, 857, 858, 862, 865, 868, 869, 874, 875], "truediv": 626, "trueli": [700, 701], "truli": [238, 720], "truncat": 453, "trust": 145, "truth": [150, 154, 167, 176, 736, 819, 833, 840, 853, 858, 865, 875], "trv_a_tre": 862, "trv_graph": 862, "try": [116, 130, 207, 224, 238, 342, 348, 561, 562, 563, 638, 647, 700, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839, 844, 849], "tudata": [695, 741, 781], "tudataset": 25, "tune": [192, 290, 413, 726, 820, 848, 849, 859], "tupl": [4, 10, 22, 26, 27, 32, 36, 48, 51, 54, 61, 73, 88, 95, 123, 125, 131, 132, 133, 139, 144, 156, 170, 183, 196, 215, 238, 247, 285, 286, 296, 299, 302, 305, 310, 321, 323, 324, 336, 337, 338, 356, 359, 360, 361, 388, 389, 390, 431, 463, 563, 566, 567, 583, 585, 586, 600, 614, 616, 617, 618, 619, 630, 694, 695, 699, 708, 722, 729, 730, 765, 769, 780, 808, 813, 857], "tuple\uacfc": 785, "tuple\uc744": [781, 785], "tuple\uc758": 813, "ture": [9, 712, 797], "turn": [21, 210, 211, 303, 340, 357, 545, 726, 824, 834, 849, 852, 858, 865], "tutori": [4, 9, 21, 210, 212, 213, 214, 293, 689, 705, 712, 718, 719, 722, 723, 725, 790, 803, 804, 809, 822, 823, 824, 825, 827, 829, 830, 831, 832, 833, 834, 835, 836, 838, 839, 840, 841, 842, 843, 844, 845, 847, 848, 851, 852, 853, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 877], "tvm": 22, "tvt": 314, "tweak": 21, "tweet": 159, "twirl": 428, "twitter": [159, 704], "two": [3, 4, 5, 9, 26, 34, 45, 48, 51, 52, 53, 58, 68, 77, 79, 81, 82, 100, 105, 116, 118, 119, 125, 126, 128, 129, 130, 135, 136, 141, 142, 159, 162, 163, 178, 180, 182, 188, 230, 237, 238, 243, 247, 297, 343, 344, 345, 356, 357, 358, 391, 392, 393, 395, 396, 401, 404, 405, 406, 407, 408, 409, 411, 412, 414, 415, 416, 419, 425, 459, 460, 462, 479, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 554, 555, 556, 560, 562, 563, 569, 576, 577, 578, 579, 612, 620, 623, 626, 632, 638, 639, 644, 645, 647, 649, 650, 653, 669, 685, 689, 693, 698, 699, 700, 701, 703, 704, 705, 706, 707, 709, 712, 713, 714, 718, 720, 722, 723, 726, 730, 732, 734, 735, 736, 804, 819, 825, 827, 834, 835, 837, 840, 843, 844, 845, 852, 856, 857, 858, 859, 860, 862, 865, 868, 869, 870, 872], "twolayergcn": [723, 766, 809], "tx": 672, "txt": [697, 698, 700, 701, 702, 743, 744, 746, 783, 784, 786, 787, 852, 853], "ty_a": 644, "ty_b": 644, "type": [4, 5, 6, 10, 13, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 212, 213, 214, 217, 218, 224, 225, 227, 228, 230, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 285, 286, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 309, 310, 312, 315, 316, 317, 318, 320, 321, 322, 325, 326, 328, 329, 330, 331, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 360, 361, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 463, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 575, 576, 577, 578, 579, 581, 582, 584, 587, 588, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 661, 670, 676, 679, 681, 684, 685, 693, 695, 697, 699, 700, 701, 703, 704, 705, 706, 707, 708, 712, 714, 718, 721, 722, 723, 725, 726, 728, 730, 731, 734, 735, 736, 751, 753, 768, 769, 781, 785, 792, 794, 800, 803, 812, 816, 817, 818, 821, 827, 832, 833, 835, 837, 838, 839, 841, 844, 845, 856, 857, 859, 862, 865, 874], "type_": [220, 221, 222, 223], "type_edge_id": 786, "type_nam": [286, 296], "type_per_edg": [297, 328, 838], "type_wise_edge_id": 700, "type_wise_id": [699, 785], "type_wise_node_id": 700, "typestr": [62, 63], "typic": [1, 4, 11, 239, 310, 392, 695, 702, 712, 726, 728, 729, 823, 849, 858, 865, 869], "typl": [128, 649], "tzdata": [832, 835, 838, 839], "u": [4, 5, 21, 27, 48, 51, 57, 61, 87, 88, 90, 94, 107, 114, 130, 131, 161, 163, 178, 179, 224, 225, 228, 242, 250, 251, 253, 255, 257, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280, 282, 284, 285, 297, 319, 338, 342, 348, 349, 356, 405, 406, 408, 409, 411, 412, 416, 419, 420, 422, 423, 425, 478, 504, 505, 561, 577, 638, 639, 647, 666, 679, 692, 695, 704, 707, 708, 709, 711, 712, 713, 724, 735, 741, 748, 751, 752, 753, 755, 756, 757, 761, 775, 781, 789, 792, 793, 794, 796, 797, 799, 803, 818, 820, 823, 834, 841, 842, 843, 849, 856, 858, 862, 865, 868, 869], "u0": [178, 179], "u0_atom": 179, "u_": [416, 862], "u_0": [178, 179], "u_add_": 5, "u_add_e_max": 9, "u_add_v": [5, 34, 462, 712, 713, 756, 757, 797, 799], "u_atom": 179, "u_attr": 125, "u_div_": 5, "u_div_v": [5, 9], "u_dot_": 5, "u_dot_v": [5, 9, 726, 732, 735, 764, 772, 775, 807, 810, 816, 818, 843], "u_f": 862, "u_fea": [408, 416, 419, 425], "u_feat": [405, 406, 409, 411, 412, 422], "u_hat": 868, "u_iou": 862, "u_j": 862, "u_l": 862, "u_mul_": [5, 9, 430, 431, 712, 726, 733, 756, 773, 797, 798, 810, 842, 869], "u_mul_e_sum": 9, "u_mul_e_udf": 842, "u_mul_v": 5, "u_sub_": 5, "u_sub_v": 5, "ubuntu": [14, 139, 821, 849], "uc": 391, "ucidata": 167, "udf": [20, 698, 712, 726, 744, 797, 810, 859, 862], "udf_max": 5, "udf_u_mul_": 5, "udf\ub294": 797, "udf\uc640": 797, "udf\uc758": 797, "uint32": 821, "uint8": [698, 744, 784, 838, 869], "uk": 144, "un": [845, 859], "unari": [5, 712, 797], "unbatch": [101, 102, 122, 844, 862], "unblock": [393, 405, 408, 409, 411, 412, 413, 416, 419, 426], "uncertainti": [197, 205], "unchang": 109, "uncom": [822, 823, 824, 825, 827], "uncompress": 201, "uncov": 857, "undefin": [227, 228, 239, 240, 288, 292, 294, 298, 317, 339, 343, 344, 480, 544, 564, 566, 567, 568, 569, 698, 845], "under": [1, 5, 14, 22, 95, 96, 137, 161, 163, 171, 180, 182, 188, 197, 205, 238, 244, 339, 343, 344, 480, 544, 557, 558, 560, 569, 575, 647, 692, 693, 697, 700, 701, 702, 716, 779, 820, 821, 842, 843, 852, 856, 857, 859, 865, 874], "underflow": [726, 810], "underli": [432, 434, 698], "underset": [730, 770, 814, 858], "understand": [21, 447, 455, 700, 716, 823, 828, 830, 834, 842, 844, 852, 858, 860, 861, 872], "undirect": [4, 6, 173, 218, 246, 247, 287, 704, 705, 708, 789, 804, 841, 865], "uneven": [833, 875], "unexist": [448, 451], "unfamiliar": 21, "uni": [44, 45, 68, 79, 82, 104, 105, 126, 408, 552], "unidirect": [116, 125, 356, 403, 404, 405, 406, 408, 409, 411, 412, 416, 419, 422, 425, 722, 808], "unifi": [21, 210, 305, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 719, 831], "uniform": [4, 174, 205, 212, 214, 217, 218, 224, 225, 297, 319, 404, 411, 412, 416, 418, 419, 422, 425, 427, 566, 567, 569, 721, 735, 764, 805, 807, 859], "uniform_": [4, 698, 744, 784], "uniformli": [4, 212, 214, 215, 224, 225, 243, 297, 319, 388, 420, 479, 552, 553, 564, 566, 567, 721, 832], "uniformnegativesampl": [303, 721, 832], "uniform\uc0d8\ud50c\ub9c1\uc740": 805, "uniniti": [297, 360], "union": [4, 209, 218, 293, 297, 300, 301, 302, 310, 312, 313, 320, 321, 322, 329, 337, 436, 438, 862], "uniqu": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 162, 182, 214, 224, 239, 245, 297, 299, 300, 303, 308, 313, 315, 316, 321, 336, 337, 459, 482, 555, 557, 559, 563, 567, 576, 581, 698, 699, 701, 706, 708, 709, 727, 734, 852, 853, 857], "unique_dst": 337, "unique_dst_nod": 337, "unique_nod": [336, 337], "unique_nodes_offset": [336, 337], "unit": [7, 178, 179, 701, 857, 862, 874], "univers": [132, 167, 870, 872], "unknown": [147, 171], "unlabel": [161, 461, 701, 720], "unleash": 848, "unless": 210, "unlik": [118, 119, 303, 315, 858, 859, 866, 872], "unmark": 6, "unnam": 693, "unnecessari": [713, 730, 849], "unnorm": [239, 240, 297, 303, 308, 315, 316, 406, 410, 564, 566, 567, 568, 569], "unobserv": 859, "unoccupi": [178, 179], "unorm": 428, "unpack": [700, 701, 721], "unpin": 112, "unpin_memory_": 89, "unplug": 173, "unreach": [241, 453, 454, 574, 687], "unscal": [726, 810], "unsqueez": [128, 129, 453, 684, 729, 769, 775, 813, 857, 858, 862, 865], "unsupervis": [721, 807, 858], "until": [4, 6, 21, 212, 567, 716, 862, 869], "untyp": [857, 865], "unus": [21, 832, 835, 838, 839], "unvisit": [433, 435], "unweight": [287, 574, 661, 672, 704, 733, 789], "up": [4, 9, 22, 219, 239, 240, 303, 308, 438, 564, 566, 567, 573, 645, 695, 701, 708, 712, 713, 734, 833, 840, 843, 848, 856, 857, 859, 862, 868, 875], "updat": [4, 10, 20, 21, 27, 28, 34, 35, 73, 91, 92, 93, 94, 100, 113, 220, 221, 222, 223, 288, 292, 294, 295, 296, 298, 317, 355, 389, 391, 395, 396, 398, 403, 404, 406, 409, 411, 412, 413, 414, 415, 417, 419, 425, 426, 427, 450, 459, 461, 546, 547, 548, 549, 550, 689, 697, 698, 711, 712, 713, 714, 715, 722, 726, 734, 757, 797, 799, 800, 810, 821, 827, 828, 833, 834, 842, 852, 858, 859, 862, 868, 869, 874], "update_al": [5, 9, 20, 430, 462, 676, 677, 678, 679, 680, 681, 682, 683, 684, 712, 713, 714, 715, 722, 726, 729, 733, 756, 757, 758, 759, 765, 769, 773, 797, 798, 799, 800, 801, 808, 810, 813, 842, 843, 856, 857, 858, 859, 865, 868], "update_all_exampl": [712, 756, 797], "update_graph": 869, "upgrad": [823, 833], "upload": [21, 852], "upon": [22, 162, 827], "upper": [233, 429, 449, 454], "upstream": [21, 862], "upward": 862, "urandom": [183, 207], "url": [23, 156, 200, 691, 692, 695, 738, 739, 741, 778, 779, 781, 827], "urllib": 845, "urllib3": [832, 833, 835, 838, 839], "urlretriev": 845, "us": [4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 142, 143, 144, 145, 148, 150, 154, 159, 160, 162, 165, 167, 168, 173, 176, 177, 178, 179, 181, 183, 184, 186, 189, 190, 194, 195, 197, 205, 207, 209, 210, 211, 212, 215, 218, 220, 221, 222, 223, 227, 230, 233, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 261, 262, 263, 264, 285, 288, 290, 291, 292, 293, 294, 295, 297, 298, 303, 305, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 320, 326, 329, 330, 331, 336, 337, 338, 339, 342, 343, 344, 345, 346, 348, 355, 356, 357, 358, 361, 387, 388, 391, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 411, 412, 413, 414, 416, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 445, 446, 447, 448, 450, 451, 452, 454, 456, 457, 458, 459, 462, 463, 479, 480, 481, 544, 547, 549, 550, 551, 552, 553, 554, 555, 556, 558, 560, 561, 562, 566, 567, 568, 569, 570, 573, 575, 589, 591, 594, 595, 607, 634, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 654, 660, 665, 666, 669, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 687, 689, 690, 692, 693, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 708, 709, 711, 712, 714, 716, 717, 718, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 734, 735, 736, 779, 786, 793, 794, 810, 819, 821, 823, 825, 826, 827, 830, 832, 833, 834, 835, 837, 838, 839, 840, 842, 844, 845, 846, 847, 848, 849, 852, 853, 856, 857, 858, 859, 860, 862, 863, 865, 866, 868, 869, 872, 874, 875], "usag": [0, 1, 8, 9, 21, 25, 56, 126, 131, 210, 247, 248, 285, 294, 338, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 694, 695, 705, 712, 715, 820, 826, 828, 849, 852], "use_alternate_stream": 210, "use_cpu_affin": 849, "use_ddp": [210, 211, 848, 874], "use_eta": [428, 429], "use_featur": [146, 169], "use_fp16": 810, "use_graphbolt": [233, 234, 238, 239, 240, 852], "use_int64_tensor_s": 821, "use_libxsmm": 340, "use_libxsmm_flag": 340, "use_mm_for_euclid_dist": [437, 551], "use_mm_for_euclid_dist_if_necessari": [437, 551], "use_norm": 421, "use_panda": 168, "use_prefetch_thread": 210, "use_uva": [10, 210, 719], "user": [1, 3, 4, 5, 9, 11, 13, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 140, 145, 156, 159, 161, 163, 173, 180, 181, 210, 212, 213, 214, 217, 218, 233, 238, 239, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 297, 299, 301, 309, 314, 323, 324, 338, 339, 342, 343, 344, 348, 357, 358, 361, 388, 389, 390, 391, 393, 403, 405, 408, 409, 411, 412, 413, 416, 419, 426, 431, 432, 433, 480, 481, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 552, 557, 558, 559, 560, 561, 565, 566, 567, 568, 569, 570, 578, 579, 638, 639, 644, 645, 646, 647, 654, 655, 660, 670, 671, 675, 685, 693, 697, 698, 699, 700, 701, 702, 703, 704, 706, 709, 712, 717, 718, 719, 721, 724, 726, 731, 732, 735, 736, 753, 756, 761, 771, 772, 775, 776, 788, 794, 795, 797, 803, 810, 815, 816, 818, 819, 820, 821, 831, 832, 833, 835, 836, 837, 838, 839, 849, 852, 862], "user_emb": 391, "user_feat": [732, 735, 736, 772, 775, 776, 816, 818, 819], "user_id": 838, "user_nid": 391, "user_orig_nids_0": 701, "usernam": 21, "userwarn": [145, 177, 178, 179, 692, 739, 779, 824, 845, 858], "user\uac00": 816, "user\uc640": [794, 816], "usr": [824, 833], "usual": [4, 10, 21, 336, 463, 562, 698, 702, 712, 716, 718, 720, 724, 728, 729, 734, 736, 825, 832, 835, 838, 839, 844, 856, 859], "util": [1, 4, 11, 13, 146, 169, 183, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 211, 287, 290, 293, 295, 301, 303, 305, 308, 314, 315, 316, 350, 386, 387, 391, 449, 460, 461, 462, 463, 571, 687, 688, 689, 692, 695, 696, 697, 701, 705, 719, 724, 727, 728, 729, 733, 736, 739, 741, 742, 767, 768, 769, 779, 781, 782, 786, 811, 812, 813, 823, 828, 833, 844, 845, 848, 849, 858, 862, 865], "utransform": 869, "utyp": [125, 126, 391, 552, 639, 722, 735, 765, 775, 808, 818], "uv": [51, 61, 88, 562, 679], "uva": [210, 290, 295, 303, 308, 562, 566], "v": [4, 5, 21, 22, 27, 35, 48, 51, 57, 60, 61, 62, 63, 87, 88, 90, 93, 94, 107, 114, 120, 121, 131, 161, 178, 179, 224, 225, 228, 242, 243, 252, 254, 256, 258, 260, 266, 268, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 297, 319, 338, 342, 348, 349, 356, 395, 399, 405, 406, 408, 409, 411, 412, 416, 419, 421, 422, 424, 425, 478, 479, 504, 505, 561, 577, 625, 626, 627, 628, 629, 638, 639, 647, 653, 666, 679, 704, 707, 708, 709, 711, 712, 713, 722, 729, 730, 734, 735, 736, 748, 751, 752, 753, 755, 756, 757, 761, 765, 769, 770, 774, 775, 776, 789, 792, 793, 794, 796, 797, 799, 803, 808, 813, 814, 817, 818, 819, 824, 827, 834, 842, 843, 856, 858, 862, 865, 868, 869], "v0": 785, "v1": 827, "v100": [14, 726, 810], "v2": 827, "v3": 827, "v_": 858, "v_1": 827, "v_2": 827, "v_a": 699, "v_add_": 5, "v_add_u": 5, "v_attr": 125, "v_b": [392, 424, 463, 699, 857], "v_div_": 5, "v_div_u": 5, "v_dot_": 5, "v_dot_u": 5, "v_fea": [408, 416, 419, 425], "v_feat": [405, 406, 409, 411, 412, 422], "v_i": [409, 735, 775, 818, 859, 862, 869], "v_j": [868, 869], "v_k": [862, 869], "v_max": 865, "v_mul_": 5, "v_mul_u": 5, "v_p": 438, "v_proj": 824, "v_sub_": 5, "v_sub_u": 5, "vacabulari": 184, "vaganova": 857, "val": [101, 102, 134, 137, 138, 139, 140, 149, 155, 168, 171, 180, 182, 185, 186, 187, 188, 192, 193, 335, 507, 572, 581, 591, 592, 596, 598, 601, 602, 603, 604, 605, 609, 611, 612, 613, 614, 615, 616, 617, 618, 620, 621, 622, 623, 624, 626, 630, 631, 633, 634, 822, 823, 824, 825, 827, 838, 839, 840, 842, 853, 874], "val1": [620, 632], "val2": [620, 632], "val_acc": [822, 823, 825, 840, 842, 857, 874], "val_edg": [139, 157, 158, 191, 853], "val_edge_mask": [157, 158, 191], "val_g": [157, 158, 191], "val_idx": [138, 140, 824], "val_lik": 827, "val_load": 874, "val_loss": 857, "val_mask": [25, 137, 140, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 171, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 693, 695, 736, 741, 776, 781, 819, 822, 823, 825, 840, 842, 845, 852], "val_metr": 824, "val_nid": 852, "val_set": [157, 158, 191, 874], "val_siz": [161, 162, 163, 604, 612, 616, 617, 618, 619, 624, 626, 630, 824, 827], "valid": [5, 25, 91, 125, 131, 138, 139, 140, 147, 150, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173, 174, 175, 176, 181, 191, 192, 194, 195, 197, 198, 205, 207, 247, 291, 309, 314, 450, 685, 694, 698, 701, 720, 732, 736, 740, 780, 816, 819, 822, 823, 831, 832, 833, 835, 837, 838, 839, 840, 842, 843, 845, 857, 859, 862, 865, 869, 874, 875], "valid_data": [164, 166], "valid_dataload": [824, 835, 852], "valid_it": 869, "valid_label": [694, 740, 780], "valid_load": [694, 740, 780], "valid_mask": [173, 736, 776, 819], "valid_nid": 852, "valid_r": 173, "valid_ratio": 173, "valid_set": [833, 835, 875], "validation_set": [309, 314, 833, 835, 837, 838, 839, 875], "valu": [4, 9, 12, 22, 23, 30, 31, 34, 51, 57, 58, 61, 62, 63, 73, 88, 89, 93, 113, 114, 115, 117, 120, 121, 126, 131, 137, 147, 148, 156, 164, 174, 178, 179, 183, 184, 197, 205, 210, 212, 214, 217, 218, 238, 239, 240, 242, 243, 244, 248, 285, 288, 290, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303, 305, 308, 310, 315, 316, 317, 321, 326, 332, 336, 337, 338, 339, 343, 344, 349, 357, 361, 387, 389, 391, 393, 397, 398, 399, 400, 402, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 419, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 440, 445, 448, 450, 451, 459, 478, 479, 480, 483, 485, 488, 490, 507, 509, 511, 515, 517, 523, 525, 529, 531, 544, 545, 554, 560, 565, 567, 574, 581, 584, 585, 586, 587, 589, 591, 594, 595, 596, 598, 601, 602, 603, 604, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 626, 630, 631, 632, 633, 634, 637, 655, 669, 671, 673, 691, 693, 700, 701, 726, 729, 730, 733, 778, 823, 824, 827, 833, 845, 856, 858, 859, 862, 868, 869, 875], "valueerror": 699, "valueobject": 22, "van": 862, "vanilla": [824, 869], "vanillar": 824, "vanish": 420, "var": [401, 423], "vare": 186, "varepsilon": [417, 869], "vari": [693, 728, 729, 823, 838, 839], "variabl": [21, 243, 479, 700, 821, 841, 848, 849, 858], "varianc": [401, 423], "variant": [212, 243, 479, 567, 856, 859], "variat": [212, 297, 303, 567, 858], "varieti": [705, 865, 869], "variou": [4, 14, 219, 305, 423, 698, 724, 827, 838, 839, 841, 844, 868], "vast": 841, "vaswani": 824, "vcpu": 14, "ve": [827, 852], "vec": [150, 406, 411, 412, 823, 859], "vector": [128, 129, 159, 212, 214, 217, 230, 237, 238, 357, 358, 387, 388, 391, 401, 406, 409, 416, 422, 429, 443, 444, 449, 574, 598, 601, 602, 603, 605, 612, 613, 614, 616, 617, 618, 619, 623, 625, 626, 627, 628, 629, 630, 637, 673, 689, 693, 701, 706, 732, 822, 823, 825, 827, 840, 841, 843, 844, 852, 856, 859, 862, 865, 868, 869, 870, 872], "vector_v": 827, "venu": 653, "venv": [832, 833, 835, 838, 839], "verbos": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 434, 691, 695, 738, 741, 778, 781], "veri": [4, 10, 22, 122, 184, 698, 705, 718, 720, 721, 723, 732, 734, 735, 852, 853, 862, 866, 869, 872], "verifi": [21, 130, 200, 639, 729, 858], "verify_ssl": 200, "versa": [858, 859], "versatil": 820, "versin": 813, "version": [4, 10, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 214, 243, 405, 429, 479, 569, 693, 701, 732, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 821, 822, 823, 824, 825, 827, 828, 832, 833, 835, 838, 839, 856, 865, 868, 875], "vert": [420, 442, 456, 460], "vertex": [6, 212, 237, 303, 308, 315, 328, 358, 416, 567], "vertic": [212, 303, 315, 357, 567, 704, 858], "vh": 137, "via": [5, 11, 22, 41, 93, 113, 122, 212, 214, 232, 297, 303, 309, 315, 398, 399, 400, 413, 433, 435, 461, 552, 553, 567, 571, 693, 697, 704, 706, 717, 718, 719, 720, 723, 726, 735, 820, 838, 839, 841, 842, 843, 844, 849, 852], "viabl": 701, "vibrat": [178, 179], "vice": [858, 859], "vid": [58, 565], "video": 137, "view": [4, 9, 43, 44, 46, 51, 74, 77, 103, 104, 244, 339, 343, 344, 462, 480, 544, 560, 565, 566, 578, 579, 612, 626, 677, 678, 680, 682, 683, 733, 735, 775, 807, 818, 824, 857, 859, 862, 865, 868, 869], "viewbackward": [395, 443], "viewbackward0": 398, "virtual": [10, 210, 450, 687, 719, 832, 833, 835, 838, 839], "visibl": [116, 130, 342, 348, 561, 638, 647], "vision": [824, 841, 870, 872], "visit": [0, 22, 215, 228, 562], "visitattr": 22, "visitor": 22, "visual": [821, 823, 862, 868], "viz_idx": 869, "vocab": [184, 862], "vocab_fil": 184, "vocab_s": [184, 862, 869], "vocabulari": [174, 184, 862], "void": 22, "vol": [238, 358], "volta": [9, 336, 337, 712, 797], "volum": [238, 358], "vote": 161, "vs2019": 821, "vtype": [125, 126, 391, 552, 565, 639, 722, 735, 765, 775, 808, 818], "w": [5, 21, 27, 28, 60, 87, 114, 115, 118, 119, 122, 126, 167, 248, 339, 343, 344, 348, 387, 391, 396, 397, 400, 404, 411, 412, 413, 419, 421, 424, 425, 430, 431, 544, 555, 556, 560, 654, 660, 661, 662, 663, 666, 668, 671, 672, 674, 675, 685, 706, 713, 718, 722, 726, 729, 732, 733, 750, 757, 762, 765, 769, 772, 773, 786, 791, 799, 804, 808, 810, 813, 816, 822, 823, 825, 827, 838, 839, 842, 856, 857, 859, 862, 865], "w1": [420, 825, 843], "w2": [825, 843], "w_": [412, 418, 711, 755, 796, 856, 869], "w_0": [424, 857], "w_comp": 857, "w_h": 869, "w_i": 405, "w_iou": 862, "w_j": 405, "w_k": [416, 869], "w_l": [713, 757, 799], "w_new": 5, "w_o": [463, 869], "w_q": 869, "w_r": [424, 713, 757, 799, 857], "w_t": 392, "w_v": 869, "wa": [9, 141, 158, 162, 182, 186, 191, 295, 303, 308, 331, 336, 337, 395, 447, 708, 823, 852, 857, 862, 869], "wai": [1, 4, 5, 126, 209, 230, 237, 248, 357, 358, 401, 406, 423, 459, 662, 663, 668, 675, 691, 695, 698, 708, 709, 716, 718, 720, 722, 727, 735, 825, 827, 841, 842, 852, 853, 859, 869], "wait": [21, 288, 292, 294, 297, 298, 310, 317, 325, 336, 337], "walk": [13, 215, 387, 391, 419, 554, 562, 564, 565, 566, 669, 672, 852, 853], "walk_length": [387, 564], "walkthrough": [722, 827], "wang": [856, 858, 859, 862], "want": [4, 21, 22, 41, 210, 212, 214, 215, 217, 243, 297, 479, 567, 692, 693, 698, 701, 704, 709, 715, 717, 718, 721, 723, 724, 732, 733, 735, 736, 789, 832, 833, 835, 838, 839, 841, 843, 845, 852, 859], "warn": [166, 832, 833, 835, 838, 839, 845], "watch": [43, 868], "wayn": 167, "wb": 853, "wc": 420, "we": [4, 6, 9, 14, 21, 22, 27, 28, 31, 41, 45, 68, 79, 82, 105, 131, 133, 137, 144, 171, 179, 180, 181, 182, 188, 207, 210, 218, 232, 238, 239, 243, 297, 314, 343, 344, 345, 357, 358, 361, 391, 392, 395, 402, 403, 404, 413, 419, 424, 436, 438, 478, 479, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 562, 567, 573, 578, 579, 644, 687, 689, 693, 697, 698, 699, 700, 701, 709, 716, 717, 718, 719, 720, 723, 724, 725, 726, 727, 731, 732, 735, 736, 785, 820, 821, 822, 823, 824, 825, 827, 828, 832, 833, 835, 838, 839, 842, 843, 844, 848, 849, 852, 853, 856, 857, 858, 859, 865, 868, 869, 874, 875], "web": [132, 155, 187, 193, 562, 668], "webkb": [155, 187, 193], "websit": [145, 167, 180, 695, 741, 781, 821], "wedg": 242, "week": 161, "weight": [5, 6, 21, 118, 119, 120, 125, 126, 145, 243, 247, 248, 297, 303, 308, 315, 316, 351, 352, 353, 354, 361, 387, 388, 389, 391, 392, 394, 397, 399, 404, 406, 409, 410, 411, 412, 413, 414, 416, 419, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 447, 448, 461, 463, 479, 554, 555, 556, 562, 567, 568, 570, 635, 636, 661, 662, 663, 668, 669, 672, 700, 704, 705, 706, 714, 721, 725, 728, 731, 749, 750, 758, 764, 768, 786, 790, 791, 800, 807, 812, 822, 823, 825, 827, 842, 845, 856, 857, 859, 862, 865, 868, 869, 875], "weight1": 786, "weight2": 786, "weight_and_sum": 447, "weight_anim": 868, "weight_column": 562, "weight_decai": [725, 726, 810, 822, 857, 862], "weight_nam": [118, 119], "weighted_reduc": [833, 875], "weightedsageconv": 842, "weihua916": [165, 844], "welcom": [21, 727, 869], "well": [4, 7, 21, 56, 96, 125, 126, 130, 173, 218, 234, 238, 325, 330, 558, 639, 687, 691, 692, 693, 695, 701, 702, 707, 709, 716, 718, 720, 721, 731, 732, 734, 735, 794, 816, 825, 828, 834, 841, 845, 849, 852, 856, 859, 868, 869], "were": [137, 149, 180, 182, 185, 722, 821, 865, 869], "west": [695, 741, 781], "wh": [431, 433, 714, 758, 800], "wh_": [714, 758, 800], "what": [9, 21, 22, 238, 571, 724, 735, 736, 825, 827, 832, 834, 835, 838, 839, 852, 856, 862, 865, 869], "whatev": 21, "wheel": [172, 822, 823, 824, 825, 827, 832, 833, 835, 838, 839], "when": [1, 4, 10, 14, 20, 21, 22, 31, 36, 41, 48, 51, 56, 57, 68, 70, 80, 89, 125, 130, 131, 146, 157, 158, 168, 169, 173, 191, 200, 210, 211, 212, 219, 220, 221, 222, 223, 230, 233, 237, 238, 239, 240, 244, 245, 247, 285, 288, 289, 290, 292, 293, 294, 295, 297, 298, 303, 308, 310, 314, 315, 317, 330, 336, 337, 339, 343, 344, 345, 346, 357, 358, 392, 393, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 416, 418, 419, 424, 426, 429, 433, 435, 436, 437, 438, 440, 480, 481, 544, 551, 561, 563, 566, 567, 568, 569, 570, 573, 574, 637, 639, 645, 647, 665, 673, 693, 698, 699, 700, 701, 705, 709, 718, 720, 721, 723, 726, 729, 730, 734, 825, 827, 835, 838, 839, 843, 844, 848, 852, 856, 858, 865, 869], "whenev": [712, 843], "whenver": 865, "where": [4, 9, 10, 14, 21, 26, 34, 45, 48, 53, 57, 58, 62, 63, 73, 79, 82, 100, 105, 120, 128, 129, 130, 131, 135, 136, 157, 159, 162, 171, 186, 210, 212, 213, 214, 217, 224, 225, 238, 241, 242, 248, 297, 305, 310, 319, 321, 336, 337, 338, 341, 342, 345, 346, 347, 348, 349, 356, 361, 392, 393, 394, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 478, 503, 504, 505, 551, 554, 562, 563, 564, 566, 569, 573, 574, 617, 618, 620, 630, 637, 649, 650, 662, 663, 666, 668, 671, 672, 673, 677, 678, 680, 682, 683, 684, 687, 693, 695, 699, 700, 701, 702, 704, 713, 716, 719, 730, 732, 733, 734, 735, 736, 798, 822, 823, 824, 825, 827, 834, 838, 839, 840, 841, 842, 843, 856, 857, 858, 859, 862, 865, 869, 874], "wherea": [858, 859], "whether": [4, 9, 10, 21, 48, 53, 54, 57, 58, 62, 63, 65, 66, 68, 117, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 210, 211, 212, 214, 217, 218, 224, 229, 232, 233, 234, 236, 238, 239, 240, 244, 285, 289, 295, 297, 298, 303, 305, 308, 309, 310, 315, 316, 322, 325, 336, 337, 340, 348, 350, 356, 357, 358, 392, 401, 405, 406, 408, 409, 411, 412, 413, 417, 421, 423, 424, 434, 437, 440, 450, 456, 461, 480, 551, 563, 567, 568, 569, 570, 649, 650, 686, 689, 691, 696, 700, 701, 722, 723, 732, 735, 778, 782, 827, 837, 838, 839, 840, 843, 845, 858, 865, 869], "which": [0, 1, 4, 9, 10, 20, 21, 22, 32, 36, 41, 42, 51, 56, 61, 88, 92, 116, 120, 122, 130, 131, 140, 143, 146, 148, 158, 161, 162, 163, 169, 171, 178, 179, 180, 182, 183, 186, 188, 189, 190, 195, 197, 205, 210, 215, 217, 220, 221, 222, 223, 228, 229, 234, 238, 242, 243, 285, 287, 291, 293, 295, 297, 300, 303, 305, 306, 308, 309, 310, 314, 315, 316, 319, 330, 336, 337, 338, 339, 342, 343, 344, 348, 349, 357, 361, 389, 392, 393, 395, 396, 398, 399, 400, 401, 403, 405, 408, 409, 411, 412, 413, 416, 419, 422, 424, 426, 430, 432, 434, 448, 449, 450, 451, 454, 457, 458, 462, 478, 479, 480, 544, 545, 552, 553, 560, 561, 562, 563, 564, 566, 569, 574, 578, 579, 616, 623, 630, 637, 638, 639, 644, 647, 649, 650, 653, 655, 660, 663, 668, 671, 672, 673, 677, 680, 685, 688, 689, 692, 693, 695, 697, 698, 700, 701, 702, 705, 706, 707, 708, 712, 713, 714, 717, 718, 719, 720, 721, 722, 723, 724, 726, 729, 730, 732, 733, 736, 800, 820, 821, 822, 827, 831, 834, 838, 839, 840, 842, 843, 848, 849, 852, 858, 859, 862, 865, 869, 874], "while": [5, 9, 22, 68, 73, 92, 114, 115, 147, 179, 197, 205, 210, 212, 238, 290, 297, 309, 320, 403, 404, 419, 430, 431, 432, 433, 434, 435, 450, 567, 569, 620, 689, 698, 699, 700, 701, 705, 713, 717, 726, 734, 825, 828, 835, 852, 858, 859, 865], "whitespac": 700, "whl": [827, 832], "who": [21, 145, 159, 697, 716, 820, 852], "whole": [173, 210, 238, 671, 701, 712, 719, 721, 725, 729, 821, 857, 858, 869], "whom": 145, "whose": [4, 10, 54, 116, 118, 119, 121, 125, 126, 131, 219, 238, 240, 297, 299, 300, 313, 338, 342, 345, 389, 430, 480, 481, 551, 563, 578, 579, 638, 661, 662, 663, 664, 668, 701, 716, 825, 858], "why": [22, 834, 859], "wi": 420, "wide": [1, 442, 693, 736, 840], "width": [858, 868], "wiki": [192, 852], "wikic": 192, "wikipedia": [134, 149, 182, 185, 192, 583, 585, 586, 593, 616, 617, 618, 841], "wildcard": 26, "win": [116, 638, 647], "window": [183, 207, 297, 300, 313, 849], "window_s": [387, 391], "wisconsin": 193, "wise": [4, 5, 13, 73, 113, 217, 218, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 396, 455, 555, 556, 576, 577, 604, 624, 649, 650, 699, 711, 712, 714, 785, 796, 800, 824, 843, 845, 859, 869], "wish": [21, 117, 130, 716, 718, 723, 732, 820], "with_label": [858, 862, 865], "within": [4, 20, 21, 161, 209, 285, 297, 300, 305, 310, 313, 357, 360, 387, 391, 430, 431, 432, 433, 434, 435, 437, 545, 551, 699, 714, 730, 806, 825, 858, 865, 869], "without": [5, 6, 21, 27, 28, 114, 115, 116, 131, 239, 240, 243, 244, 285, 289, 293, 297, 301, 303, 308, 315, 316, 325, 338, 419, 436, 438, 479, 552, 553, 556, 559, 567, 568, 569, 616, 617, 618, 630, 647, 675, 692, 693, 709, 712, 726, 734, 794, 834, 858, 862], "wm": 647, "wmt14": 869, "wn18": 191, "word": [21, 108, 135, 136, 137, 155, 180, 182, 184, 187, 193, 210, 211, 243, 389, 479, 644, 698, 840, 862, 865, 869], "word2vec": 159, "wordid": 862, "wordnet": 191, "work": [3, 4, 8, 9, 11, 21, 116, 118, 119, 188, 212, 214, 217, 293, 295, 303, 308, 336, 337, 393, 405, 408, 409, 411, 412, 413, 416, 419, 426, 459, 562, 638, 662, 663, 664, 665, 666, 668, 669, 672, 690, 691, 702, 704, 716, 717, 719, 720, 731, 732, 736, 833, 841, 843, 845, 849, 858, 863, 865, 869, 872, 874, 875], "workaround": 859, "worker": [4, 188, 233, 290, 698, 702, 719, 744, 784, 787, 805, 849], "workflow": [840, 843], "workload": [13, 230, 237, 697, 701, 716, 729, 827, 849, 874], "workspac": [702, 746, 786, 787, 852], "workspace\ub294": 787, "workspace\uc758": 787, "world": [162, 164, 293, 701, 786, 834, 841, 865, 869], "world_siz": [336, 337, 833, 848, 874, 875], "would": [9, 21, 26, 89, 130, 131, 210, 212, 214, 217, 297, 302, 321, 331, 356, 397, 405, 406, 409, 411, 412, 422, 425, 426, 444, 562, 567, 639, 649, 650, 713, 716, 718, 720, 722, 731, 732, 834, 842, 843, 845, 862, 865, 869], "wouldn": 865, "wrap": [4, 131, 210, 288, 298, 302, 322, 329, 721, 724, 726, 810, 833, 848, 869, 874, 875], "wrapper": [8, 21, 22, 292, 294, 302, 317, 334, 833, 848, 875], "writabl": 845, "write": [4, 21, 22, 309, 318, 322, 389, 571, 647, 656, 698, 701, 711, 717, 729, 732, 786, 822, 825, 830, 838, 839, 840, 843, 845, 846, 847, 858, 862, 865], "write_t": 701, "writeback": 647, "writeback_map": [111, 647], "writer": 134, "written": [9, 712, 826, 832, 833, 835, 858, 869], "wrong": [21, 426], "wu": 754, "wv": 869, "www": [162, 754, 822, 823, 824, 825, 832, 833, 835, 842, 849], "x": [5, 6, 9, 21, 34, 35, 93, 94, 100, 113, 122, 132, 133, 144, 170, 183, 184, 244, 310, 345, 355, 387, 392, 394, 396, 398, 399, 400, 401, 407, 420, 421, 423, 426, 427, 429, 436, 437, 438, 439, 440, 441, 446, 480, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 551, 573, 613, 620, 631, 671, 672, 685, 689, 701, 706, 707, 718, 720, 721, 723, 725, 726, 732, 735, 750, 751, 761, 762, 763, 764, 766, 772, 775, 791, 792, 803, 804, 806, 807, 809, 810, 816, 818, 821, 822, 823, 824, 825, 827, 832, 833, 835, 841, 852, 853, 856, 862, 865, 868, 869, 875], "x1": [345, 573, 612, 623, 827], "x2": [345, 573, 612, 623, 827], "x64": 821, "x86_64": 849, "x_": [345, 420, 436, 438, 504, 573, 576, 827], "x_0": 420, "x_1": [420, 827], "x_2": [420, 827], "x_c": 420, "x_dst": [389, 763, 806], "x_e": [505, 576], "x_i": [407, 416, 418, 420, 442, 671, 827, 869], "x_j": [407, 416, 827, 862, 869], "x_sign": 823, "x_size": 862, "x_src": 389, "x_type": 392, "x_u": [504, 505, 577, 711, 755, 796], "x_uv": 865, "x_v": [504, 505, 577, 711, 755, 796], "xavier": [388, 409, 411, 412, 425, 426], "xavier_normal_": 859, "xavier_uniform_": [10, 432, 434, 459, 725, 728, 768, 812, 857], "xcode": 821, "xeon": [726, 848], "xi": [243, 479, 823], "xlabel": 868, "xrightarrow": 653, "xtick": 868, "xuv": 865, "xv1": 827, "xv2": 827, "xw_t": 392, "xxx": [0, 700, 745, 786], "xxx_edg": [700, 786], "xxx_node": [700, 786], "xxx_note": 786, "xxx_stat": [700, 786], "xxx\ub294": 786, "y": [9, 21, 120, 184, 242, 243, 349, 387, 392, 430, 431, 448, 451, 461, 478, 479, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 706, 720, 721, 725, 726, 732, 750, 761, 763, 772, 791, 803, 806, 810, 816, 821, 823, 825, 827, 832, 833, 841, 843, 862, 868, 875], "y1": 9, "y_": [243, 345, 436, 438, 479, 573, 735, 775, 818, 843], "y_dst": 389, "y_hat": [718, 725, 824, 825, 833, 875], "y_i": [833, 875], "y_pred": 824, "y_true": 824, "y_u": [242, 349, 478], "y_v": [120, 242, 349, 478], "yaml": [148, 309, 314, 836], "yaml_cont": [838, 839], "yaml_data": 309, "yandex": 180, "ye": [862, 869], "year": [701, 704], "yellow": 834, "yelp": [162, 163, 194], "yet": [4, 719, 849], "yield": [4, 218, 288, 289, 292, 294, 298, 317, 410, 420, 644, 645, 718, 723, 834, 835, 844, 859], "ying": 562, "yingtongd": 162, "yiran": 754, "yizhou": 72, "ylabel": 868, "you": [4, 6, 9, 14, 21, 22, 26, 89, 114, 118, 119, 130, 131, 186, 210, 211, 212, 214, 215, 217, 285, 292, 293, 303, 308, 317, 318, 338, 420, 426, 566, 567, 568, 569, 639, 689, 692, 693, 706, 712, 717, 718, 719, 721, 722, 723, 731, 732, 735, 736, 739, 779, 820, 821, 823, 826, 827, 829, 832, 833, 834, 835, 837, 838, 839, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 857, 858, 859, 860, 862, 865, 866, 868, 869, 872, 874, 875], "your": [4, 6, 8, 9, 21, 118, 119, 145, 164, 166, 175, 177, 178, 179, 183, 184, 303, 308, 689, 695, 698, 712, 716, 717, 719, 720, 721, 722, 727, 731, 732, 736, 781, 830, 832, 834, 835, 838, 839, 840, 843, 846, 847, 849, 865, 869], "your_cod": 848, "yu": [856, 857, 858, 865], "yum": 821, "yyi": 0, "z": [9, 178, 397, 823, 858, 859, 869], "z2": 859, "z_": 361, "z_e": 576, "z_i": [395, 397, 859], "z_j": [395, 859], "z_list": 858, "z_v": [577, 858], "zachari": [167, 845], "zero": [4, 27, 28, 30, 43, 46, 70, 74, 89, 93, 103, 108, 113, 114, 115, 118, 119, 120, 122, 125, 130, 150, 178, 179, 210, 233, 238, 247, 297, 305, 310, 328, 346, 355, 393, 403, 405, 408, 409, 411, 412, 413, 416, 418, 419, 422, 426, 449, 453, 455, 459, 460, 461, 483, 484, 485, 486, 488, 489, 490, 491, 507, 509, 510, 511, 512, 515, 516, 517, 518, 523, 524, 525, 526, 529, 530, 531, 532, 561, 568, 569, 581, 582, 585, 586, 597, 598, 599, 601, 602, 603, 604, 605, 610, 612, 617, 618, 619, 620, 624, 626, 630, 632, 634, 637, 639, 645, 646, 647, 649, 650, 665, 673, 685, 687, 693, 698, 700, 701, 709, 719, 726, 729, 731, 732, 733, 744, 753, 761, 763, 771, 772, 784, 786, 794, 803, 806, 815, 816, 823, 827, 843, 845, 852, 858, 862, 865, 868, 869], "zero_grad": [387, 391, 430, 431, 432, 433, 434, 435, 697, 717, 718, 721, 723, 725, 726, 732, 734, 735, 736, 743, 761, 762, 764, 766, 772, 774, 775, 776, 783, 803, 804, 807, 809, 810, 816, 817, 818, 819, 822, 823, 824, 825, 832, 833, 835, 840, 842, 843, 844, 852, 853, 856, 857, 858, 859, 862, 874, 875], "zero_initi": 865, "zeros_lik": [761, 803, 853], "zhang": [754, 856, 857, 858, 859, 862, 865, 868, 869], "zhao": [862, 868], "zheng": [856, 857, 858, 859, 862, 865, 868, 869], "zhenkun": [315, 316], "zhiyu": 754, "zhiyuchen": 754, "zhjwy9343": 754, "zhou": [868, 869], "zihao": [862, 869], "zinc": 195, "zip": [165, 168, 172, 186, 692, 695, 720, 721, 725, 741, 779, 781, 822, 823, 825, 832, 833, 835, 840, 841, 842, 843, 844, 845, 848, 849, 852, 853, 856, 857, 858, 859, 862, 865, 868, 869, 874, 875], "zpve": [178, 179], "\u4e00\u4e2a\u4e8c\u5206\u56fe": 753, "\u4e00\u4e2a\u4ec5\u5e73\u8861\u56fe\u4e2d\u8282\u70b9": 745, "\u4e00\u4e2a\u53ef\u9009\u9879\u662f\u7528\u6237\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u793a\u4f8b\u68c0\u67e5\u4e0b\u8f7d\u540e\u6587\u4ef6\u7684sha": 739, "\u4e00\u4e2a\u540c\u6784\u56fe": 753, "\u4e00\u4e2a\u56fe\u6279\u6b21\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u5f20\u5927\u56fe": 774, "\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e0c\u671b": 775, "\u4e00\u4e2a\u5b50\u56fe\u5bf9\u5e94\u4e00\u79cd\u5173\u7cfb": 753, "\u4e00\u4e2a\u5e94\u7528\u4e8e": 757, "\u4e00\u4e2a\u5f02\u6784\u56fe\u7531\u4e00\u7cfb\u5217\u5b50\u56fe\u6784\u6210": 753, "\u4e00\u4e2a\u5f02\u6784\u56fe\u793a\u4f8b": 753, "\u4e00\u4e2a\u6279\u6b21\u4e2d\u4e0d\u540c\u7684\u56fe\u662f\u5b8c\u5168\u5206\u5f00\u7684": 774, "\u4e00\u4e2a\u662f\u8fb9\u7684\u96c6\u5408": 748, "\u4e00\u4e2a\u6709\u6548\u7684\u56fe\u540d\u79f0\u5e94\u8be5\u4ec5\u5305\u542b\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf": 745, "\u4e00\u4e2a\u6b63\u6837\u672c\u56fe": 764, "\u4e00\u4e2a\u6d88\u606f\u4f20\u9012\u8fd0\u7b97\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u51fd\u6570": 773, "\u4e00\u4e2a\u7528\u4e8e\u6307\u5b9a": 756, "\u4e00\u4e2a\u7528\u4e8e\u6307\u793a\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7684\u5b57\u6bb5\u540d": 756, "\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5d4c\u5165": 744, "\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b": 757, "\u4e00\u4e2a\u805a\u5408\u51fd\u6570\u548c\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570": 756, "\u4e00\u4e2a\u8d1f\u6837\u672c\u56fe": 764, "\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u805a\u5408\u64cd\u4f5c\u5305\u62ec": 756, "\u4e00\u4e9b\u6a21\u5757\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u805a\u5408\u51fd\u6570": 768, "\u4e00\u53f0\u673a\u5668\u53ef\u80fd\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b": 743, "\u4e00\u662f\u8282\u70b9\u7684\u96c6\u5408": 748, "\u4e00\u6761\u8fb9": 748, "\u4e00\u6761\u94fe\u8def0": 749, "\u4e00\u6837": 744, "\u4e00\u6b21\u6027\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684": 772, "\u4e00\u76f4\u5230\u8f93\u5165": 760, "\u4e00\u79cd\u5b58\u50a8\u5f02\u6784\u56fe\u7684\u5e38\u89c1\u65b9\u6cd5\u662f\u5728\u4e0d\u540c\u7684csv\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 753, "\u4e00\u822c\u6765\u8bf4": 756, "\u4e00\u822c\u6d41\u7a0b\u662f": 774, "\u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u591a\u5c42gnn\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 772, "\u4e0a\u56fe\u4e2d\u9690\u53bb\u4e86\u548c\u8ba1\u7b97\u4e0d\u76f8\u5173\u7684\u8fb9": 761, "\u4e0a\u7684\u5206\u5e03\u5f0f\u90bb\u5c45\u91c7\u6837\u63d0\u4f9b\u4e86": 744, "\u4e0a\u7684\u7279\u5f81\u4e3a": 755, "\u4e0a\u7684\u7684\u7279\u5f81\u4e3a": 755, "\u4e0a\u7684\u8282\u70b9": 761, "\u4e0a\u7684\u8bad\u7ec3\u53ea\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u6a21\u578b\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 776, "\u4e0a\u8c03\u7528\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570": 744, "\u4e0a\u8fd0\u884c": 744, "\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684for\u5faa\u73af\u4e3a\u5904\u7406\u5f02\u6784\u56fe\u8ba1\u7b97\u7684\u4e3b\u8981\u903b\u8f91": 770, "\u4e0a\u8ff0\u51fd\u6570\u7684\u6570\u5b66\u516c\u5f0f\u4e3a": 756, "\u4e0a\u9762\u4ee3\u7801\u91cc\u7684": 768, "\u4e0a\u9762\u7684dataloader\u4e00\u6b21\u8fed\u4ee3\u4f1a\u751f\u6210\u4e09\u4e2a\u8f93\u51fa": 766, "\u4e0a\u9762\u7684dgl": 766, "\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230": 739, "\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4e00\u4e2a": 739, "\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u4e86\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408\u7684\u8ba1\u7b97": 769, "\u4e0b\u4f8b\u7684\u8f93\u51fa\u8282\u70b9\u5305\u542b\u4e86\u6ca1\u6709\u5165\u8fb9\u7684\u5b64\u7acb\u8282\u70b9": 761, "\u4e0b\u56fe\u663e\u793a\u4e86\u4ee5\u8282\u70b98\u4e3a\u79cd\u5b50\u8282\u70b9\u65f6\u7b2c\u4e8c\u4e2agnn\u5c42\u6240\u9700\u7684\u5757": 761, "\u4e0b\u56fe\u663e\u793a\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\u53ca\u5b83\u4eec\u95f4\u7684\u76f8\u4e92\u4f5c\u7528": 743, "\u4e0b\u6587\u5c55\u793a\u4e86sageconv\u793a\u4f8b\u4e2d\u7684": 769, "\u4e0b\u6587\u662f\u5728\u4e00\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 775, "\u4e0b\u6587\u7ee7\u7eed\u4f7f\u7528\u4e0a\u8ff0\u7684\u4f8b\u5b50": 761, "\u4e0b\u7684\u76ee\u5f55": 739, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": [737, 754], "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e\u96c6\u7684url": 738, "\u4e0b\u8f7d\u6587\u4ef6": 739, "\u4e0b\u9762\u4e2d\u4f7f\u7528": 741, "\u4e0b\u9762\u4ee5": 741, "\u4e0b\u9762\u4f7f\u7528": 741, "\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684": 741, "\u4e0b\u9762\u5c55\u793a\u4e86\u5728\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684\u793a\u4f8b": 746, "\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50": 753, "\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u901a\u8fc7\u5bf9\u8282\u70b9\u7279\u5f81\u964d\u7ef4\u6765\u51cf\u5c11\u6d88\u606f\u7ef4\u5ea6\u7684\u793a\u4f8b": 757, "\u4e0b\u9762\u662f\u4f7f\u7528\u70b9\u79ef\u8ba1\u7b97\u8fb9\u5f97\u5206\u7684\u4f8b\u5b50": 775, "\u4e0b\u9762\u662f\u901a\u8fc7\u4f7f\u7528\u51c6\u786e\u6027\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u4e00\u4e2a\u4f8b\u5b50": 776, "\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u4e13\u95e8\u7528\u4e8e\u5728\u90bb\u5c45\u91c7\u6837\u65f6\u5220\u9664\u5c0f\u6279\u6b21\u7684\u4e00\u4e9b\u8fb9\u548c\u5b83\u4eec\u7684\u53cd\u5411\u8fb9": 762, "\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 776, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f": 765, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u5728dgl\u4e2d\u521b\u5efa\u5f02\u6784\u56fe\u7684\u793a\u4f8b": 753, "\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4f7f\u7528\u4e86": 752, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b": 738, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e00\u4e2a\u62e5\u6709": 772, "\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe": 775, "\u4e0b\u9762\u7684\u52a8\u753b\u5c55\u793a\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b": 763, "\u4e0b\u9762\u7684\u6d41\u7a0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6a21\u7248\u7684\u5de5\u4f5c\u65b9\u5f0f": 738, "\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u4fdd\u5b58\u548c\u8bfb\u53d6\u56fe\u548c\u6570\u636e\u96c6\u4fe1\u606f\u7684\u5217\u8868": 742, "\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8bad\u7ec3\u96c6\u62c6\u5206": 744, "\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5\u7684\u793a\u4f8b": 764, "\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e": [764, 766], "\u4e0d\u540c\u540d\u79f0\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u5f62\u72b6": 750, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u5355\u72ec\u7684id": 753, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e38\u5e38\u5177\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u5c5e\u6027": 758, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6216\u5927\u5c0f": 753, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6709\u5355\u72ec\u7684id": 753, "\u4e0d\u5fc5\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5": 753, "\u4e0d\u662fpytorch\u7684nn\u6a21\u5757": 744, "\u4e0d\u80fd\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u5b50\u96c6": 750, "\u4e0d\u8fc7": 752, "\u4e0d\u8fc7\u5927\u90e8\u5206\u7684dgl": 752, "\u4e0e": [743, 744], "\u4e0e\u4e0d\u5b58\u5728\u7684\u8fb9": 764, "\u4e0e\u4e4b\u524d\u7684\u4efb\u52a1\u7c7b\u4f3c": 774, "\u4e0e\u540c\u6784\u56fe\u7684\u60c5\u51b5\u7c7b\u4f3c": 753, "\u4e0e\u5f02\u6784\u56fe\u76f8\u5173\u8054\u7684": 753, "\u4e0e\u6574\u56fe\u5206\u7c7b\u4e0d\u540c": 741, "\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92": 743, "\u4e0e\u6b64\u540c\u65f6": 745, "\u4e0e\u8fb9\u7279\u5f81": 756, "\u4e0e\u901a\u5e38\u4ee5\u5f20\u91cf\u4e3a\u53c2\u6570\u7684pytorch": 769, "\u4e0e\u91c7\u6837\u5668\u8fdb\u884c\u4ea4\u4e92\u4ee5\u83b7\u5f97\u5c0f\u6279\u6b21\u6570\u636e": 743, "\u4e0e\u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5668\u8fde\u63a5\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u5b83\u4eec": 744, "\u4e14\u53ea\u8003\u8651\u5e73\u5747\u805a\u5408\u51fd\u6570\u7684\u60c5\u51b5": 765, "\u4e14\u663e\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u5b58\u50a8\u7684\u8bbe\u5907\u4fe1\u606f": 752, "\u4e24\u4e2a\u51fd\u6570\u5728\u53d8\u6362\u540e\u7684\u56fe\u4e0a\u91cd\u65b0\u52a0\u5165\u6279\u6b21\u4fe1\u606f": 774, "\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684numpy\u6570\u7ec4\u4f1a\u5f88\u5927": 745, "\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u8fb9\u7684\u8054\u7cfb": 762, "\u4e24\u540d\u4f5c\u8005\u53ef\u4ee5\u5728\u4e0d\u540c\u5e74\u4efd\u5171\u540c\u7f72\u540d\u6587\u7ae0": 748, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b": 772, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 772, "\u4e2a\u4eba\u59d3\u540d": 754, "\u4e2a\u4eba\u94fe\u63a5": 754, "\u4e2a\u5bf9\u5e94\u7684\u8d1f\u91c7\u6837\u6837\u672c": 775, "\u4e2a\u8282\u70b9\u6216\u8fb9": 752, "\u4e2a\u8282\u70b9\u7684\u56fe\u4e0a\u8fd0\u884c\u7684": 760, "\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 764, "\u4e2d": [739, 741, 742, 748, 749, 753, 766], "\u4e2d\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u6574\u56fe\u4e0a\u8bad\u7ec3\u4e00\u4e2a2\u5c42\u7684rgcn\u6a21\u578b": 766, "\u4e2d\u4ecb\u7ecd\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 771, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u65b9\u6cd5\u548c": 771, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236": 776, "\u4e2d\u521b\u5efa": 744, "\u4e2d\u53ef\u4ee5\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801": 741, "\u4e2d\u5904\u7406\u6bcf\u4e2a\u6570\u636e\u5b9e\u4f8b\u662f\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5": 742, "\u4e2d\u5b58\u50a8\u7ed3\u679c": 756, "\u4e2d\u5b9a\u4e49\u7684": 772, "\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u96c6\u7684\u57fa\u7c7b": 738, "\u4e2d\u5b9e\u73b0\u4e86\u5e38\u7528\u7684\u6d88\u606f\u51fd\u6570\u548c\u805a\u5408\u51fd\u6570\u4f5c\u4e3a": 756, "\u4e2d\u5df2\u7ecf\u6709\u4e86": 776, "\u4e2d\u6240\u4ecb\u7ecd\u7684": 764, "\u4e2d\u6240\u8ff0\u7684\u5168\u56fe\u8bad\u7ec3": 760, "\u4e2d\u6240\u8ff0\u7684\u8fb9\u56de\u5f52\u6a21\u578b\u76f8\u540c": 775, "\u4e2d\u6240\u91c7\u6837\u7684\u8282\u70b9": 775, "\u4e2d\u627e\u5230": 741, "\u4e2d\u6307\u5b9a": 745, "\u4e2d\u6307\u5b9a\u66f4\u65b0\u51fd\u6570": 756, "\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 746, "\u4e2d\u6587\u7248": [690, 691, 692, 694, 695, 696, 697, 698, 703, 704, 705, 706, 707, 708, 709, 711, 712, 713, 714, 715, 716, 718, 720, 721, 722, 723, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736], "\u4e2d\u6587\u7248\u94fe\u63a5": 820, "\u4e2d\u662f\u5426\u5b58\u6709\u5904\u7406\u540e\u7684\u6570\u636e": 738, "\u4e2d\u67e5\u770b\u5f02\u6784\u56fe\u5377\u79ef": 776, "\u4e2d\u6807\u8bc6\u8282\u70b9\u6570\u636e": 744, "\u4e2d\u7684": 744, "\u4e2d\u7684\u4e00\u4e2a": 758, "\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20": 766, "\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9": 753, "\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801": 741, "\u4e2d\u7684\u4f8b\u5b50": 776, "\u4e2d\u7684\u505a\u6cd5\u7c7b\u4f3c": 776, "\u4e2d\u7684\u5206\u533a\u6570\u636e\u548c\u76f8\u5173\u6587\u4ef6": 746, "\u4e2d\u7684\u5b57\u6bb5\u540d": 756, "\u4e2d\u7684\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 774, "\u4e2d\u7684\u7279\u5f81\u6765\u52a0\u8f7d\u6807\u7b7e": 766, "\u4e2d\u7684\u8fb9": 753, "\u4e2d\u8282\u70b9\u7684\u96c6\u5408": 774, "\u4e2d\u95f4\u67d0\u4e00\u5c42\u5bf9\u5e94\u7684\u8fb9\u754c\u9700\u8981\u5305\u542b\u8be5\u5c42\u53ca\u6240\u6709\u540e\u7eed\u5c42\u8ba1\u7b97\u6d89\u53ca\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 761, "\u4e2d\u95f4\u6d88\u606f": 756, "\u4e3a\u4e86\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3": 745, "\u4e3a\u4e86\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u83b7\u5f97\u5e73\u8861\u7684\u5de5\u4f5c\u8d1f\u8f7d": 745, "\u4e3a\u4e86\u5904\u7406\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u672c\u5730\u78c1\u76d8\u4e0a\u7684\u56fe\u6570\u636e\u96c6": 738, "\u4e3a\u4e86\u5b8c\u6210\u5355\u4e2a\u56fe\u7684\u9884\u6d4b": 774, "\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684": 753, "\u4e3a\u4e86\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u7c7b": 776, "\u4e3a\u4e86\u5e76\u884c\u5316\u8ba1\u7b97": 743, "\u4e3a\u4e86\u6307\u4ee3\u591a\u6761\u8fb9": 752, "\u4e3a\u4e86\u8bbe\u7f6e": 753, "\u4e3a\u4e86\u968f\u673a": 766, "\u4e3a\u4f8b": 741, "\u4e3a\u540e\u7eed\u5728\u56fe\u4e0a\u8fdb\u884c\u7684\u8ba1\u7b97\u4e0e\u5206\u6790\u7684\u6027\u80fd\u6539\u5584\u63d0\u4f9b\u53ef\u80fd": 741, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": [754, 760, 766], "\u4e3a\u5f02\u6784\u56fe\u4fee\u6539gnn\u6a21\u5757\u7684\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684": 765, "\u4e3a\u5f02\u6784\u56fe\u751f\u6210\u8fb9\u754c\u4e0e\u4e3a\u540c\u6784\u56fe\u751f\u6210\u8fb9\u754c\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c": 761, "\u4e3a\u63d0\u5347\u6570\u636e\u52a0\u8f7d\u901f\u5ea6": 774, "\u4e3a\u6709\u5411\u56fe": 761, "\u4e3a\u67d0\u4e00\u79cd\u8fb9\u7c7b\u578b": 775, "\u4e3a\u6b64": [761, 764], "\u4e3a\u7b80\u4fbf\u8d77\u89c1": 741, "\u4e3a\u7b80\u5355\u8d77\u89c1": 766, "\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0\u7684id": 745, "\u4e3b\u8981\u539f\u56e0\u662fpytorch": 744, "\u4e3b\u8981\u5e94\u7528\u573a\u666f\u662f\u8fd0\u884c\u91c7\u6837api\u4ee5\u652f\u6301\u5c0f\u6279\u91cf\u8bad\u7ec3": 744, "\u4e3b\u8ba1\u7b97\u673a": 746, "\u4e4b\u524d\u58f0\u660e\u5206\u5e03\u5f0f\u5d4c\u5165": 744, "\u4e4b\u524d\u88ab\u58f0\u660e": 744, "\u4e4b\u524d\u8c03\u7528": 744, "\u4e4b\u540e": 769, "\u4e4b\u95f4\u5206\u6570\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e0e": 775, "\u4e4b\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684": 775, "\u4e4b\u95f4\u7684\u5173\u7cfb": 748, "\u4e4b\u95f4\u7684\u5f97\u5206": 775, "\u4e4b\u95f4\u7684\u5f97\u5206\u8981\u9ad8\u4e8e": 775, "\u4e58\u4ee52\u5f97\u5230\u6700\u7ec8\u7ed3\u679c": 756, "\u4e5f\u53ef\u4ee5\u5728\u4e0d\u6d89\u53ca\u6d88\u606f\u4f20\u9012\u7684\u60c5\u51b5\u4e0b": 756, "\u4e5f\u53ef\u4ee5\u662f\u6709\u5411\u7684": 748, "\u4e5f\u5c06\u5728gpu\u4e0a": 751, "\u4e5f\u5c31\u662f\u8bf4": 744, "\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u7ea7\u522b\u7684\u91c7\u6837api": 744, "\u4e5f\u63d0\u4f9b\u4e86": 744, "\u4e5f\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 762, "\u4e5f\u79f0\u4e3a": 756, "\u4e86\u89e3\u4e86\u4e0a\u8ff0\u8ba1\u7b97\u89c4\u5219\u540e": 774, "\u4e8c\u5206\u56fe\u662f\u4e00\u7c7b\u7279\u6b8a\u7684": 748, "\u4e8c\u5206\u56fe\u7684\u60c5\u51b5": 769, "\u4ea4\u53c9\u71b5\u635f\u5931": 775, "\u4eba\u4eec\u81ea\u7136\u4f1a\u60f3\u8981\u5728\u6a21\u578b\u5f00\u53d1\u4e2d\u4f7f\u7528\u5b83\u4eec": 773, "\u4ec5\u4ec5\u4fdd\u7559\u4e86\u8f93\u51fa\u8282\u70b9\u6240\u9700\u8981\u6536\u96c6\u6d88\u606f\u7684\u8fb9": 761, "\u4ec5\u5141\u8bb8\u4f7f\u7528\u6570\u503c\u7c7b\u578b": 750, "\u4ec5\u6709\u7684\u4ee3\u7801\u4fee\u6539\u51fa\u73b0\u5728\u7b2c4": 743, "\u4ecd\u7136\u5177\u6709\u76f8\u540c\u7684\u7ed3\u679c": 774, "\u4ece": [738, 761], "\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230": 761, "\u4ece\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa": 761, "\u4ece\u5185\u5b58\u89d2\u5ea6\u6765\u8bf4\u662f\u9ad8\u6548\u7684": 757, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [741, 747, 752, 754], "\u4ece\u5de6\u81f3\u53f3": 774, "\u4ece\u6210\u5bf9\u7684\u8fb9": 749, "\u4ece\u7528\u4e8e\u56fe\u548c\u7a00\u758f\u77e9\u9635\u7684\u5916\u90e8python\u5e93": 749, "\u4ece\u76ee\u5f55": 742, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe\u6570\u636e": 749, "\u4ece\u800c\u4ea7\u751f\u5305\u542b\u8fb9\u5c0f\u6279\u6b21\u7684\u5b50\u56fe\u4ee5\u53ca\u4f9b\u4e0b\u6587\u4e2d\u6a21\u5757\u4f7f\u7528\u7684": 762, "\u4ece\u800c\u4ee5\u5c0f\u6279\u6b21\u904d\u5386\u6574\u4e2a\u56fe\u6570\u636e\u96c6": 774, "\u4ece\u800c\u51cf\u5c11\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u7f51\u7edc\u901a\u4fe1": 745, "\u4ece\u800c\u5b8c\u6210\u540e\u5411\u4f20\u64ad": 776, "\u4ece\u800c\u5bfc\u81f4\u591a\u6b21\u521b\u5efa\u548c\u5220\u9664": 744, "\u4ece\u800c\u8fdb\u4e00\u6b65\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u5e76\u8282\u7701\u5185\u5b58\u5360\u7528": 757, "\u4ece\u8f93\u51fa\u5f00\u59cb": 760, "\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u6d88\u606f\u4f20\u9012\u5747\u4f7f\u7528": 769, "\u4ee3\u7801\u5b9e\u73b0\u7684\u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u8c03\u7528": 762, "\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u8bfb": 765, "\u4ee3\u7801\u91cc\u79fb\u9664\u4e86\u5f52\u4e00\u5316": 765, "\u4ee3\u8868\u8ba1\u7b97": 766, "\u4ee5\u4e0a3\u79cd\u56fe\u7c7b\u578b\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u76f8\u540c\u7684": 769, "\u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u73b0\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684": 757, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u5f20\u91cf": 744, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e862\u4e2a\u8282\u70b9\u7279\u5f81": 750, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u6570\u636e\u52a0\u8f7d\u5668": 762, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u7684": 766, "\u4ee5\u4e0b\u4ee3\u7801\u5728\u6ce8\u91ca\u91cc\u4fdd\u7559\u4e86\u6574\u56fe\u5b9e\u73b0\u7684\u8bed\u53e5": 765, "\u4ee5\u4e0b\u4ee3\u7801\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f8b\u5b50": 773, "\u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5728": 739, "\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4e3a": 740, "\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5bf9\u6bcf\u79cd\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a\u53d6\u5e73\u5747\u503c\u5e76\u6c42\u548c": 774, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u4e3a\u4ecescipy\u7a00\u758f\u77e9\u9635\u548cnetworkx\u56fe\u521b\u5efadgl\u56fe\u7684\u793a\u4f8b": 749, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u5b9e\u73b0\u4e86\u901a\u8fc7\u5408\u5e76\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u5e76\u5c06\u5176\u6620\u5c04\u5230\u5168\u8fde\u63a5\u5c42\u6765\u9884\u6d4b\u8fb9\u7684\u5f97\u5206": 762, "\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210\u4e86\u4e00\u4e2a\u968f\u673a\u56fe\u7528\u4e8e\u6f14\u793a\u8fb9\u5206\u7c7b": 772, "\u4ee5\u4e0b\u4ee3\u7801\u7528\u4e86": 772, "\u4ee5\u4e0b\u4ee3\u7801\u7531\u4e8e\u8f93\u51fa\u8282\u70b9\u672a\u8986\u76d6\u6240\u6709\u8fd9\u4e9b\u8282\u70b9": 761, "\u4ee5\u4e0b\u4ee3\u7801\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u5206\u5e03\u5f0f\u65b9\u5f0f\u8bad\u7ec3graphsage\u7684\u793a\u4f8b": 743, "\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86": 774, "\u4ee5\u4e0b\u5185\u5bb9\u8bf4\u660e\u4e86\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f": 737, "\u4ee5\u4e0b\u56fe\u4e3a\u4f8b": 761, "\u4ee5\u4e0b\u5c0f\u8282\u5c06\u9010\u4e00\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4": 766, "\u4ee5\u4e0b\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9\u5747\u5300\u91c7\u68375\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 764, "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50": 758, "\u4ee5\u4e0b\u793a\u4f8b\u5c06\u8bad\u7ec3\u96c6\u5185\u548c\u8bad\u7ec3\u96c6\u5916\u7684\u8282\u70b9\u770b\u4f5c\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 745, "\u4ee5\u4e0b\u9762\u7528\u4e8e\u5168\u56fe\u7684gnn\u6a21\u5757\u4e3a\u4f8b": 765, "\u4ee5\u4e0b\u9762\u7684\u81ea\u5b9a\u4e49\u56fe\u5377\u79ef\u6a21\u5757\u4ee3\u7801\u4e3a\u4f8b": 765, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u5b50\u56fe\u7ed3\u6784": 745, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8282\u70b9\u7279\u5f81": 745, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8fb9\u7279\u5f81": 745, "\u4ee5\u4fbf\u533a\u5206": 762, "\u4ee5\u4fbf\u5b83\u4e5f\u53ef\u4ee5\u5728\u5f02\u6784\u56fe\u4e0a\u4f7f\u7528": 761, "\u4ee5\u4fbf\u6bcf\u4e2a\u8bad\u7ec3\u5668\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bad\u7ec3\u96c6\u5b50\u96c6": 744, "\u4ee5\u50a8\u5b58\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u5c5e\u6027": 750, "\u4ee5\u5145\u5206\u5229\u7528": 769, "\u4ee5\u5229\u7528\u66f4\u5927\u8303\u56f4\u7684\u90bb\u5c45\u4fe1\u606f": 776, "\u4ee5\u53ca": 743, "\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6267\u884c\u7684\u8ba1\u7b97": 747, "\u4ee5\u53ca\u53ef\u5b9a\u5236\u7684\u805a\u5408\u51fd\u6570\u548c\u975e\u7ebf\u6027\u51fd\u6570": 776, "\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5e26\u6709\u6d88\u606f\u4f20\u9012\u7684gnn\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282": 776, "\u4ee5\u53ca\u60f3\u8981\u4e86\u89e3\u5982\u4f55\u5728\u5c0f\u6279\u6b21\u6570\u636e\u4e0a\u8fdb\u884c\u8bc4\u4f30\u548c\u63a8\u7406\u6a21\u578b\u7684\u7528\u6237": 760, "\u4ee5\u53ca\u628a\u5b83\u4eec\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\u7684\u7c7b\u578b\u8fdb\u884c\u5408\u5e76\u540e\u7684\u5355\u4e00\u8fb9\u7c7b\u578b": 772, "\u4ee5\u53ca\u6765\u81ea\u8f93\u5165\u8282\u70b9\u7684\u8868\u793a\u5982\u4f55\u4f20\u64ad\u5230\u8f93\u51fa\u8282\u70b9": 766, "\u4ee5\u53ca\u7531\u5c0f\u6279\u6b21\u8fb9\u5bfc\u51fa\u7684\u539f\u59cb\u56fe\u7684\u5b50\u56fe": 762, "\u4ee5\u53ca\u8ba1\u7b97\u5176\u4e24\u7aef\u8282\u70b9\u8868\u793a\u6240\u9700\u7684\u5757\u5217\u8868": 762, "\u4ee5\u53ca\u8bf8\u5982\u7c7b\u522b\u6570": 738, "\u4ee5\u53ca\u8d1f\u91c7\u6837\u5668": 764, "\u4ee5\u53ca\u8fb9\u7684\u6807\u7b7e": 772, "\u4ee5\u591a\u5c42gcn\u4e3a\u4f8b": 766, "\u4ee5\u5bfc\u5165\u6570\u636e\u7684\u7279\u5b9a\u90e8\u5206": 741, "\u4ee5\u5c06\u4efb\u4f55\u8fb9\u754c\u8f6c\u6362\u4e3a\u5757": 761, "\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u7ec4\u8fb9\u8fdb\u884c\u8fed\u4ee3": 762, "\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u548c\u7f51\u7edc\u901a\u4fe1": 743, "\u4ee5\u652f\u6301\u9700\u8981\u8282\u70b9\u5d4c\u5165\u7684\u76f4\u63a8": 744, "\u4ee5\u67e5\u770b\u5982\u4f55\u4ece\u5916\u90e8\u6570\u636e\u6e90\u6784\u5efa\u56fe\u7684\u5b8c\u6574\u6307\u5357": 741, "\u4ee5\u6982\u7387p\u968f\u673a\u9009\u62e9\u8fb9": 761, "\u4ee5\u7a81\u51fa\u5c55\u793a\u7528\u4e8e\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 741, "\u4ee5\u83b7\u5f97": 741, "\u4ee5\u8868\u683c\u683c\u5f0f\u50a8\u5b58\u8282\u70b9": 749, "\u4ee5\u8bbf\u95ee\u7fa4\u96c6\u4e2d\u7684\u5206\u533a\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 744, "\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 744, "\u4ee5\u8fdb\u884c\u8fed\u4ee3": 741, "\u4ee5\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 761, "\u4ee5\u907f\u514d\u91c7\u6837\u6240\u5e26\u6765\u7684\u968f\u673a\u6027": 763, "\u4ee5\u9632\u4f5c\u8005\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u66f4\u6539\u4e86\u6587\u4ef6": 739, "\u4efb\u4f55\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u4ee5\u7528\u4f5c\u8fb9\u754c": 761, "\u4efb\u4f55\u6d89\u53cagpu\u56fe\u7684\u64cd\u4f5c\u90fd\u662f\u5728gpu\u4e0a\u8fd0\u884c\u7684": 751, "\u4efb\u52a1": 775, "\u4efb\u52a1\u52a0\u8f7d\u6570\u636e\u96c6": 740, "\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u4e00\u6b65\u805a\u5408": 770, "\u4f1a\u6839\u636eip\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u5bf9\u5e94\u7684\u8ba1\u7b97\u673a\u6765\u5b58\u50a8\u56fe\u5206\u533a": 746, "\u4f1a\u7ed3\u5408\u805a\u5408\u540e\u7684\u6d88\u606f\u548c\u8282\u70b9\u672c\u8eab\u7684\u7279\u5f81\u6765\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 755, "\u4f1a\u805a\u5408\u8282\u70b9\u63a5\u53d7\u5230\u7684\u6d88\u606f": 755, "\u4f1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684": 770, "\u4f1a\u975e\u5e38\u6d88\u8017\u8d44\u6e90": 763, "\u4f20\u7ed9": 745, "\u4f46\u4e0d\u540c\u7684\u662f": 774, "\u4f46\u4e0d\u652f\u6301\u4e00\u4e9b\u8ba1\u7b97\u8fd0\u7b97\u7b26": 744, "\u4f46\u5176\u57fa\u672c\u601d\u60f3\u548c\u672c\u7ae0\u63cf\u8ff0\u7684\u6d41\u7a0b\u662f\u4e00\u81f4\u7684": 772, "\u4f46\u53ea\u5bf9\u4e00\u5c42\u8fdb\u884c\u8ba1\u7b97": 763, "\u4f46\u5b83\u6bcf\u6b21\u53ea\u4e3a\u4e00\u5c42\u8fdb\u884c\u91c7\u6837": 763, "\u4f46\u662f": [761, 769], "\u4f46\u662f\u4efb\u4f55\u62e5\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u7528\u4f5c\u8fb9\u754c": 761, "\u4f46\u6709\u65f6\u7528\u6237\u8fd8\u662f\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u91c7\u6837\u5668": 761, "\u4f46\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u79cd\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe\u5bf9\u8c61": 740, "\u4f46\u8fd8\u662f\u6709\u4e00\u4e9b\u660e\u663e\u7684\u533a\u522b": 762, "\u4f4d\u4e8e\u8282\u70b9\u5217\u8868\u7684\u6700\u524d\u9762": 769, "\u4f4d\u6216": 752, "\u4f4d\u6574\u6570": 752, "\u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u8282\u70b9id\u548c\u8fb9id": 752, "\u4f5c\u4e3a\u4e00\u4e2a\u672a\u7ecf\u8fc7\u5f52\u4e00\u5316\u7684\u7c7b\u522b\u7684\u5206\u5e03": 772, "\u4f5c\u4e3a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u5982\u4f55\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684dgl": 767, "\u4f5c\u4e3a\u5165\u53c2": 764, "\u4f5c\u4e3a\u53c2\u6570": 766, "\u4f5c\u4e3a\u6f14\u793a\u7684\u6837\u4f8b\u4ee3\u7801": 776, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e": 744, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e\u4e4b\u4e00\u6dfb\u52a0\u5230": 744, "\u4f5c\u4e3a\u8282\u70b9\u8868\u793a\u8ba1\u7b97\u6a21\u578b\u4ee5\u53ca\u524d\u4e00\u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684": 772, "\u4f5c\u4e3a\u8f93\u5165": 761, "\u4f5c\u4e3a\u8fb9\u9884\u6d4b\u6a21\u578b": 772, "\u4f5c\u5f0a": 762, "\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9": 741, "\u4f7f\u7528": 744, "\u4f7f\u7528dgl": 774, "\u4f7f\u7528int32\u6784\u5efa\u56fe": 752, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": [737, 754], "\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 756, "\u4f7f\u7528\u5e73\u5747\u8bfb\u51fa\u8ba1\u7b97\u56fe\u8868\u793a": 774, "\u4f7f\u7528\u5e95\u5c42api\u65f6": 744, "\u4f7f\u7528\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 776, "\u4f7f\u7528\u6240\u6709\u8282\u70b9": 776, "\u4f7f\u7528\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 776, "\u4f7f\u7528\u6709\u5411\u7684networkx\u56fe": 749, "\u4f7f\u7528\u6a21\u578b\u65f6\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u8282\u70b9\u7c7b\u578b\u548c\u6570\u636e\u7279\u5f81\u7684\u5b57\u5178": 772, "\u4f7f\u7528\u8be5\u540d\u79f0\u6765\u8bc6\u522b\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u56fe": 745, "\u4f7f\u7528\u8d1f\u91c7\u6837\u65b9\u6cd5\u540e": 764, "\u4f7f\u7528\u8fd9\u6837\u7684": 744, "\u4f8b\u5982": [742, 744, 745, 746, 747, 748, 750, 753, 756, 759, 761, 762, 764, 765, 766, 768, 772, 773, 774, 775, 776], "\u4f8b\u5982nf": 746, "\u4f8b\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7fa4\u793e\u533a": 774, "\u4f8b\u5982\u4f7f\u7528": 774, "\u4f8b\u5982\u5728\u4e0b\u56fe\u4e2d": 753, "\u4f8b\u5982\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b": 744, "\u4f8b\u5982\u60f3\u5728\u67d0\u4e00\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u5206\u7c7b\u4efb\u52a1": 772, "\u4f8b\u5982\u6c42\u548c\u4ee5\u53ca\u6c42\u5747\u503c": 744, "\u4f8b\u5982\u8282\u70b9\u548c\u8fb9\u7684\u6570\u91cf": 744, "\u4f9d\u6279\u6b21\u5bf9\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3": 763, "\u4fdd\u5b58dglgraph\u5bf9\u8c61\u548c\u6807\u7b7e\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 742, "\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 742, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [737, 738, 754], "\u4fdd\u5b58\u56fe\u548c\u6807\u7b7e": 742, "\u4fdd\u5b58\u8bad\u7ec3\u597d\u7684\u6a21\u578b": 776, "\u4fdd\u7559\u5173\u7cfb": 753, "\u4fee\u6539\u6a21\u578b\u8bad\u7ec3\u5faa\u73af\u90e8\u5206": 766, "\u501f\u7528\u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u5c0f\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5": 774, "\u503c\u4e3a\u4e00\u7684\u5143\u7d20\u8868\u793a\u4e00\u6761\u8fb9": 773, "\u503c\u4e3a\u4f5c\u7528\u5728\u8be5\u5173\u7cfb\u4e0ann\u6a21\u5757\u5bf9\u8c61": 770, "\u503c\u5219\u4e3a\u5bf9\u5e94nn\u6a21\u5757\u7684\u81ea\u5b9a\u4e49\u53c2\u6570": 770, "\u503c\u662f\u8fd9\u79cd\u5173\u7cfb\u5bf9\u5e94": 758, "\u5047\u5b9agraph": 773, "\u5047\u8bbe\u6279\u6b21\u5927\u5c0f\u4e3a": 774, "\u5047\u8bbe\u6709\u5982\u4e0b\u7684\u8fb9\u754c": 761, "\u5047\u8bbe\u7ea2\u8272\u8282\u70b9\u4e3a\u9700\u8981\u66f4\u65b0\u7684\u76ee\u6807\u8282\u70b9": 761, "\u5047\u8bbe\u8282\u70b9": 755, "\u5047\u8bbe\u8981\u4f7f\u75282\u5c42gnn\u8ba1\u7b97\u79cd\u5b50\u8282\u70b98": 761, "\u5143\u7d20\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8fb9\u7c7b\u578b": 774, "\u5143\u7ec4\u4e2d\u7684\u7b2c1\u4e2a\u5143\u7d20\u4e3a\u6e90\u8282\u70b9\u7279\u5f81": 769, "\u5148\u6765\u770b\u4e00\u4e0b": 761, "\u5168\u56fe": 776, "\u51713\u4e2a\u6210\u5458\u5c5e\u6027": 756, "\u5173\u4e8e": 750, "\u5173\u4e8edgl\u5185\u7f6e\u56fe\u5377\u79ef\u6a21\u5757\u7684\u5b8c\u6574\u5217\u8868": 776, "\u5173\u4e8e\u5185\u7f6e\u51fd\u6570\u7684\u5217\u8868": 756, "\u5173\u4e8e\u5185\u7f6e\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5": 764, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [747, 754], "\u5173\u4e8e\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u8fdb\u9636\u7528\u6cd5": 756, "\u5173\u6ce8": [753, 762], "\u5173\u7cfb": 762, "\u5173\u7cfb\u53ef\u4ee5\u662f\u65e0\u5411\u7684": 748, "\u5173\u7cfb\u8868\u793a\u4e3a": 769, "\u5176\u4e2d": [745, 752, 757, 761, 770, 774, 775], "\u5176\u4e2dxxx\u662f\u63d0\u4f9b\u7ed9\u5212\u5206api\u7684\u56fe\u7684\u540d\u79f0": 745, "\u5176\u4e2d\u4e00\u4e9b\u4ee3\u7801\u6f14\u793a\u4e86\u67e5\u8be2\u56fe\u7ed3\u6784\u7684\u90e8\u5206api\u7684\u4f7f\u7528\u65b9\u6cd5": 752, "\u5176\u4e2d\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u6a21\u5757\u7ec4\u4ef6": 774, "\u5176\u4e2d\u5305\u542b\u6240\u6709\u8d1f\u91c7\u6837\u7684\u8282\u70b9\u5bf9\u4f5c\u4e3a\u8fb9": 775, "\u5176\u4e2d\u5305\u542b\u6709\u5173\u8f93\u5165\u56fe\u7684\u6240\u6709\u4fe1\u606f": 744, "\u5176\u4e2d\u5305\u542b\u7531\u8d1f\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u6240\u6709\u4e0d\u5b58\u5728\u7684\u8fb9": 764, "\u5176\u4e2d\u5305\u542b\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u5185\u6240\u6709\u7684\u8fb9": 764, "\u5176\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b": 744, "\u5176\u4e2d\u7684\u8fb9\u8fde\u63a5\u4e24\u7c7b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 748, "\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8fb9\u754c": 761, "\u5176\u4e2d\u7ea2\u8272\u548c\u7eff\u8272\u8282\u70b9": 761, "\u5176\u4e2d\u8282\u70b9\u548c\u8fb9\u53ef\u4ee5\u662f\u6709\u7c7b\u578b\u7684": 747, "\u5176\u4f59\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8": 743, "\u5176\u503c\u4e3a\u6bcf\u4e2a\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 770, "\u5176\u6570\u5b66\u5b9a\u4e49\u4e3a": 770, "\u5176\u6700\u7ec8\u8868\u793a\u5c06\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c": 760, "\u5176\u6b21": 774, "\u5176\u6d88\u606f\u4f20\u9012\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b": 761, "\u5176\u7ed3\u679c": 751, "\u5176\u7ed3\u679c\u662f": 763, "\u5176\u884c\u4e3a\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u975e\u5e38\u76f8\u4f3c": 744, "\u5176\u9002\u7528\u4e8e\u5355\u5411\u4e8c\u5206\u56fe": 765, "\u5176\u952e\u4e3a": 770, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 739, "\u5177\u4f53\u5982\u4e0b\u6240\u793a": 776, "\u5177\u4f53\u6765\u8bf4": [743, 763], "\u5177\u4f53\u884c\u4e3a\u5982\u4e0b": 753, "\u5177\u6709\u5bf9\u96c6\u7fa4\u5185\u6240\u6709\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u65e0\u5bc6\u7801ssh\u8bbf\u95ee\u6743\u9650": 746, "\u5177\u6709\u76f8\u540c\u7684\u952e": 770, "\u5185\u7f6e\u51fd\u6570": 756, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": [754, 755], "\u5185\u7f6e\u6d88\u606f\u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u5143\u51fd\u6570\u6216\u4e8c\u5143\u51fd\u6570": 756, "\u5185\u7f6e\u7684dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u7684\u8f93\u5165\u56fe\u53ca\u7279\u5f81\u5fc5\u987b\u6ee1\u8db3\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00": 765, "\u518d\u5c06": 756, "\u518d\u6784\u5efa\u4e00\u4e2a\u5173\u7cfb\u5b57\u5178": 753, "\u518d\u6b21\u63d0\u9192\u4e0b": 766, "\u518d\u7531\u8fb9\u754c\u8f6c\u6362\u6210\u5757": 761, "\u51c6\u5907\u4e00\u4e2a\u6279\u6b21\u7684\u56fe": 774, "\u51fa\u4e8e\u5efa\u6a21\u7684\u76ee\u7684": 753, "\u51fd\u6570": [741, 752, 753, 756, 769, 774], "\u51fd\u6570\u4e2d\u5b9e\u73b0\u6570\u636e\u5904\u7406": 741, "\u51fd\u6570\u6267\u884c\u4e86\u5b9e\u9645\u7684\u6d88\u606f\u4f20\u9012\u548c\u8ba1\u7b97": 769, "\u51fd\u6570\u662f\u57fa\u4e8e\u5747\u5300\u5206\u5e03\u7684\u91c7\u6837\u51fd\u6570": 764, "\u51fd\u6570\u6765\u5728\u8fd0\u884c\u65f6\u62c6\u5206\u8bad\u7ec3": 744, "\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684": 752, "\u51fd\u6570\u6765\u6784\u5efa\u4e00\u4e2a": 752, "\u51fd\u6570\u7684\u5185\u5bb9\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a3\u9879\u64cd\u4f5c": 769, "\u51fd\u6570\u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u5728\u5b8c\u6210\u6d88\u606f\u805a\u5408\u540e\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 769, "\u51fd\u6570\u7684\u8f93\u5165\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 772, "\u51fd\u6570\u7684\u8f93\u51fa\u4e0d\u4f1a\u5168\u4e3a0": 769, "\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u7684\u5bf9\u8c61": 770, "\u51fd\u6570\u805a\u5408\u6765\u81ea\u591a\u4e2a\u5173\u7cfb\u7684\u7ed3\u679c": 770, "\u51fd\u6570\u8fd8\u4f7f\u75282\u4e2a\u989d\u5916\u7684\u5b57\u5178\u53c2\u6570": 770, "\u51fd\u6570\u8fdb\u884c\u89e3\u538b\u7f29": 739, "\u51fd\u6570\u9700\u8981\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u8f93\u5165\u56fe\u7c7b\u578b": 770, "\u51fd\u6570\u9700\u8981\u5904\u7406\u8f93\u5165\u7684\u8bb8\u591a\u6781\u7aef\u60c5\u51b5": 769, "\u5206\u522b\u5728\u7b2c8": 750, "\u5206\u522b\u662f\u53ef\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u51fd\u6570\u4e0e\u805a\u5408\u51fd\u6570": 761, "\u5206\u522b\u662f\u77e9\u9635": 757, "\u5206\u522b\u7528\u4e8e\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5f02\u6784\u56fe\u548c\u52a0\u8f7d\u5b83\u4eec": 753, "\u5206\u522b\u7528\u4e8e\u8bbf\u95ee\u6e90\u8282\u70b9": 756, "\u5206\u533a": [743, 745], "\u5206\u533a0\u7684\u6570\u636e": 745, "\u5206\u533a1\u7684\u6570\u636e": 745, "\u5206\u533a\u6570\u636e\u548c\u8bad\u7ec3\u811a\u672c\u90fd\u5df2\u88ab\u590d\u5236\u5230\u96c6\u7fa4\u6216\u5b58\u5728\u96c6\u7fa4\u4e2d\u6240\u6709\u8ba1\u7b97\u673a\u5747\u53ef\u8bbf\u95ee\u7684\u5168\u5c40\u5b58\u50a8\u7a7a\u95f4": 746, "\u5206\u533a\u914d\u7f6e\u6587\u4ef6\u4ee5\u53ca\u56fe\u5206\u533a": 746, "\u5206\u5e03\u5f0f\u5d4c\u5165\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u5f20\u91cf\u4e4b\u4e0a": 744, "\u5206\u5e03\u5f0f\u5d4c\u5165\u7684\u521b\u5efa\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684\u521b\u5efa\u975e\u5e38\u76f8\u4f3c": 744, "\u5206\u5e03\u5f0f\u5f20\u91cf\u5fc5\u987b\u4e0e\u56fe\u7684\u8282\u70b9\u6216\u8fb9\u76f8\u5173\u8054": 744, "\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668\u5177\u6709\u4e0epytorch": 744, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u548c\u72ec\u7acb\u6a21\u5f0f": 744, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": [743, 754], "\u5206\u5e03\u5f0f\u8bad\u7ec3": 754, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u5c06\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u5206\u533a": 746, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [743, 754], "\u5206\u5e03\u5f0f\u91c7\u6837\u548c\u6570\u636e\u5206\u5272": 744, "\u5206\u5e03\u5f0f\u91c7\u6837\u6a21\u5757\u9075\u5faa\u76f8\u540c\u7684\u8bbe\u8ba1": 744, "\u5206\u914did\u540e": 745, "\u5206\u914d\u7ed9": 744, "\u5207\u7247\u53d6\u8f93\u5165\u7279\u5f81\u7684\u524d\u51e0\u884c": 765, "\u5207\u7247\u884c\u6570\u53ef\u4ee5\u901a\u8fc7": 765, "\u5212\u5206api\u901a\u8fc7\u5728": 745, "\u5212\u5206\u6216\u7279\u5f81\u5f52\u4e00\u5316\u7b49\u64cd\u4f5c\u5efa\u8bae\u5728": 738, "\u5212\u5206\u63a9\u7801": 741, "\u5217\u8868": 740, "\u5219": 744, "\u5219dgl\u4f1a\u81ea\u52a8\u5c06\u8f93\u5165\u8282\u70b9\u7279\u5f81\u524d\u4e00\u90e8\u5206\u8bbe\u4e3a\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 765, "\u5219dgl\u5141\u8bb8\u4f7f\u7528": 753, "\u5219\u4e0d\u9700\u8981\u6307\u5b9a\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b": 753, "\u5219\u53ea\u9700\u8981\u6309\u7167\u5982\u4e0b\u7684\u65b9\u6cd5\u91cd\u5199forward\u51fd\u6570": 765, "\u5219\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6d88\u606f\u6216\u805a\u5408\u51fd\u6570": 756, "\u5219\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u7b80\u5355\u5730\u5b9a\u4e49\u91c7\u6837\u5668": 761, "\u5219\u53ef\u4ee5\u6dfb\u52a0\u53c2\u6570": 741, "\u5219\u53ef\u4ee5\u901a\u8fc7": 766, "\u5219\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u76f4\u63a5\u8bfb\u53d6\u5757\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 761, "\u5219\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u51fd\u6570": 739, "\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee": 766, "\u5219\u56fe\u8bfb\u51fa\u7684\u5f20\u91cf\u5f62\u72b6\u4e3a": 774, "\u5219\u5b83\u4e5f\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55": 739, "\u5219\u6307\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u7ed3\u679c": 770, "\u5219\u6a21\u578b\u5728\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3\u65f6\u53ea\u9700\u505a\u5f88\u5c0f\u7684\u8c03\u6574": 766, "\u5219\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u8fb9\u7c7b\u578b\u53ca\u5176\u53cd\u5411\u8fb9\u7c7b\u578b\u4e4b\u95f4\u7684\u6620\u5c04": 762, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u5411\u4e8c\u5206\u56fe": 765, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u540c\u6784\u56fe": 765, "\u5219\u8fb9\u662f\u65e0\u5411\u7684": 748, "\u5219\u8fb9\u662f\u6709\u5411\u7684": 748, "\u5219\u901a\u5e38\u4e0d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7cbe\u786e\u7684\u79bb\u7ebf\u63a8\u65ad": 763, "\u5219\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u4f18\u5316\u5668": 744, "\u5219\u9ed8\u8ba4\u503c\u4e3a": 746, "\u521b\u5efa": 741, "\u521b\u5efa\u4e00\u4e2a": 752, "\u521b\u5efa\u4e00\u4e2a\u5177\u67093\u79cd\u8282\u70b9\u7c7b\u578b\u548c3\u79cd\u8fb9\u7c7b\u578b\u7684\u5f02\u6784\u56fe": 753, "\u521b\u5efa\u5206\u5e03\u5f0f\u56fe\u5bf9\u8c61": 743, "\u521b\u5efa\u5d4c\u5165\u65f6": 744, "\u521b\u5efa\u800c\u6765": 749, "\u521b\u5efa\u91c7\u6837\u5668": 743, "\u521b\u5efa\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u793a\u4f8b": 741, "\u521d\u59cb\u5316api\u5e94\u6309\u4ee5\u4e0b\u987a\u5e8f\u8c03\u7528": 744, "\u521d\u59cb\u5316dgl\u7684\u5206\u5e03\u5f0f\u6a21\u5757": 743, "\u521d\u59cb\u5316\u53c2\u6570": 768, "\u521d\u59cb\u56fe\u548c\u8981\u8ba1\u7b97\u8868\u793a\u7684\u8282\u70b9": 761, "\u5220\u9664\u5c0f\u6279\u6b21\u4e2d\u7684\u8fb9\u53ca\u5176\u53cd\u5411\u8fb9\u7684\u65b9\u6cd5\u5982\u4e0b": 762, "\u5229\u7528\u8282\u70b9\u81ea\u8eab\u7684\u7279\u5f81\u548c\u5176\u90bb\u8282\u70b9\u53ca\u8fb9\u7684\u7279\u5f81\u6765\u8ba1\u7b97\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 776, "\u5229\u7528\u8fd9\u4e9b\u4f18\u5316\u7684\u4e00\u4e2a\u5e38\u89c1\u5b9e\u8df5\u662f\u901a\u8fc7\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 757, "\u5230": [752, 772], "\u524d\u8005\u5728": 744, "\u524d\u9762\u7ae0\u8282\u91cc\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7528\u5728\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 761, "\u5269\u4f59\u90e8\u5206\u7684\u8bad\u7ec3\u4ee3\u7801\u548c\u540c\u6784\u56fe\u4ee3\u7801\u76f8\u540c": 774, "\u52a0\u6743\u7684": 748, "\u52a0\u6cd5\u53ef\u4ee5\u901a\u8fc7dgl\u7684\u5185\u7f6e\u51fd\u6570": 757, "\u52a0\u8f7d": 740, "\u5305\u542b\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b": 765, "\u5305\u542b\u4e86\u6bcf\u4e2agnn\u5c42\u8981\u8ba1\u7b97\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u51fa": 766, "\u5305\u542b\u4e86\u96c6\u7fa4\u4e2d\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 746, "\u5305\u542b\u591a\u4e2a\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u7c7b": 743, "\u5305\u542b\u90bb\u5c45\u91c7\u6837\u548c\u6d88\u606f\u4f20\u9012": 763, "\u5305\u62ec": [743, 749, 769], "\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e": 775, "\u5305\u62ec\u5206\u533a\u4e2d\u7684\u56fe\u7ed3\u6784": 744, "\u5305\u62ec\u81ea\u5faa\u73af\u7684\u8fb9": 748, "\u5305\u62ec\u8bbf\u95ee\u8282\u70b9": 744, "\u5305\u63d0\u4f9b\u4e86\u7528\u4e8e\u4e0b\u8f7d\u548c\u5904\u7406ogb\u6570\u636e\u96c6\u5230": 740, "\u533a\u522b\u53ea\u5728\u4e8e\u8282\u70b9\u88ab\u5212\u5206\u4e3a\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 765, "\u5355\u5411\u4e8c\u5206\u56fe": 765, "\u5355\u72ec\u8c03\u7528\u9010\u8fb9\u8ba1\u7b97": 756, "\u5373": [757, 761, 773], "\u5373\u4e00\u7ec4\u673a\u5668": 743, "\u5373\u4efb\u610f\u4e24\u4e2a\u56fe\u4e4b\u95f4\u6ca1\u6709\u8fb9\u8fde\u63a5": 774, "\u5373\u4f7f": 744, "\u5373\u6267\u884c": 757, "\u5373\u6839\u636e\u7ed3\u6784\u548c\u6574\u4f53\u4fe1\u606f\u5bf9\u56fe\u8fdb\u884c\u5206\u7c7b": 774, "\u5373\u6b63\u786e\u7684\u6807\u6ce8": 776, "\u5373\u6bcf\u4e2a\u884c\u5207\u7247\u50a8\u5b581\u4e2a\u8282\u70b9\u62161\u6761\u8fb9\u7684\u7279\u5f81": 750, "\u5373\u8282\u70b94": 761, "\u5373\u8fb9": 752, "\u5373\u9884\u6d4b\u4efb\u52a1\u6570": 741, "\u539f\u5219\u662f\u5c06": 765, "\u539f\u56e0\u662f\u6d88\u606f\u4f20\u9012\u540e\u7684\u7279\u5f81\u7ec4\u5408\u9700\u8981\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u8282\u70b9\u8868\u793a": 761, "\u539f\u56e0\u662f\u8fd9\u9700\u8981\u4e3a\u6bcf\u4e00\u5c42\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u8868\u793a": 763, "\u539f\u56fe\u4e0a\u7684\u5176\u4ed6\u8282\u70b9\u662f\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u7684": 761, "\u539f\u59cb\u7279\u5f81\u5728cpu\u4e0a": 751, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8282\u70b9id": 753, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8fb9id": 753, "\u539f\u59cb\u7684\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684id\u88ab\u5b58\u50a8\u5728": 753, "\u539f\u59cb\u8282\u70b9\u7c7b\u578b": 753, "\u539f\u59cb\u8fb9\u7c7b\u578b": 753, "\u53c2\u6570": 770, "\u53c2\u8003\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7b2c16\u548c18\u884c": 750, "\u53c2\u8003\u624b\u518c\u63d0\u4f9b\u4e86\u8be5\u7528\u6cd5\u7684\u66f4\u591a\u7ec6\u8282": 749, "\u53c2\u8003\u7528\u6237\u6307\u5357": 758, "\u53c2\u89c1": [756, 765], "\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u548c\u6574\u578b": 750, "\u53cd\u5411\u8fb9\u901a\u5e38\u5177\u6709\u4e0e\u6b63\u5411\u8fb9\u672c\u8eab\u4e0d\u540c\u7684\u8fb9\u7c7b\u578b": 762, "\u53d6\u5e73\u5747\u503c": 774, "\u53d8\u91cf": 773, "\u53e6\u4e00\u4e2a\u5e94\u7528\u4e8e": 757, "\u53e6\u4e00\u4e2a\u7528\u4e8e\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 744, "\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 751, "\u53e6\u5916": [744, 746, 757], "\u53e6\u89c1": 749, "\u53ea\u4f7f\u7528": 753, "\u53ea\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u5305\u62ec\u8282\u70b9\u8868\u793a\u7684\u5b57\u5178\u6765\u8ba1\u7b97\u9884\u6d4b\u503c": 776, "\u53ea\u8981\u4f7f\u8fd4\u56de\u7684\u56fe\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9": 761, "\u53ea\u9700\u8981\u6309\u4e0b\u4f8b\u7f16\u5199\u4ee3\u7801": 772, "\u53ea\u9700\u8981\u8282\u70b94": 761, "\u53ea\u9700\u8981\u9884\u6d4b\u6bcf\u4e2a\u8fb9\u7684\u6807\u91cf\u5206\u6570\u800c\u4e0d\u662f\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03": 764, "\u53ef\u4ee5\u4ece\u5916\u90e8\u6765\u6e90\u6784\u9020\u4e00\u4e2a": 749, "\u53ef\u4ee5\u4f7f\u7528": [752, 761], "\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u56fe\u8868\u793a": 748, "\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e0a\u8ff0\u8fb9\u754c\u8f6c\u6362\u4e3a\u8f93\u51fa\u8282\u70b9\u4e3a8\u7684\u5757": 761, "\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4ee5\u4e0b\u4ee3\u7801\u7684\u65b9\u6cd5\u83b7\u53d6\u5355\u4e2a\u56fe\u6570\u636e\u96c6\u7684\u56fe\u6570\u636e": 771, "\u53ef\u4ee5\u5148\u62bd\u53d6\u5f02\u6784\u56fe\u7684\u8fb9\u7c7b\u578b\u5b50\u56fe": 753, "\u53ef\u4ee5\u5148\u901a\u8fc7\u60f3\u8981\u56ca\u62ec\u7684\u8282\u70b9\u7f16\u53f7\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe": 759, "\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u7684\u5757": 761, "\u53ef\u4ee5\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c": 744, "\u53ef\u4ee5\u5982\u4e0b\u5b9a\u4e49\u94fe\u63a5\u9884\u6d4b\u6a21\u578b": 764, "\u53ef\u4ee5\u5b8c\u6210\u4e00\u8f6e\u6d88\u606f\u4f20\u9012\u8ba1\u7b97": 776, "\u53ef\u4ee5\u5c06\u5176\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4fee\u6539\u4ee5\u652f\u6301\u8fb9\u6743\u91cd": 773, "\u53ef\u4ee5\u5c06\u8be5\u7c7b\u578b\u6570\u636e\u52a0\u8f7d\u5230python\u5bf9\u8c61": 749, "\u53ef\u4ee5\u5f97\u5230\u591a\u5f20\u7528\u4e8e\u5206\u7c7b\u7684\u56fe": 774, "\u53ef\u4ee5\u627e\u5230": 769, "\u53ef\u4ee5\u63a5\u53d7\u975e\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570": 751, "\u53ef\u4ee5\u63d0\u9ad8\u8282\u70b9": 741, "\u53ef\u4ee5\u662f\u5f02\u6784\u56fe\u6216\u6765\u81ea\u5f02\u6784\u56fe\u7684\u5b50\u56fe\u533a\u5757": 770, "\u53ef\u4ee5\u7528\u4e8e\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u6a21\u5757": 744, "\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u8282\u70b9\u6536\u5230\u7684\u6d88\u606f": 756, "\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f": 739, "\u53ef\u4ee5\u8ba9\u7528\u6237\u4e0d\u7528\u4e00\u6b21\u6027\u628a\u6240\u6709\u8282\u70b9\u7279\u5f81\u62f7\u8d1d\u5230gpu\u4e0a": 760, "\u53ef\u4ee5\u901a\u8fc7": 761, "\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u552f\u4e00\u6807\u8bc6": 744, "\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u56fe\u5377\u79ef\u6a21\u5757\u6765\u5b9e\u73b0\u8fd9\u79cd\u7f51\u7edc\u67b6\u6784": 776, "\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c": 772, "\u53ef\u4ee5\u9075\u5faa\u76f8\u540c\u7684\u539f\u7406\u6765\u6784\u5efa\u56fe": 749, "\u53ef\u4ee5\u91cd\u5199\u4e0a\u9762\u7684": 761, "\u53ef\u547d\u540d\u7684\u7279\u5f81": 750, "\u53ef\u5c06\u6570\u636e\u548c\u8ba1\u7b97\u540c\u65f6\u5206\u5e03\u5728\u4e00\u7ec4\u8ba1\u7b97\u8d44\u6e90\u4e2d": 743, "\u53ef\u5c06\u6570\u636e\u590d\u5236\u5230\u96c6\u7fa4\u7684\u8ba1\u7b97\u673a\u4e0a": 743, "\u53ef\u6309\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u5b83\u7684\u4e24\u7aef\u8282\u70b9\u9690\u85cf\u8868\u793a\u7684\u70b9\u79ef\u6765\u4f5c\u4e3a\u5206\u6570": 772, "\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u5de5\u4f5c\u7684\u60f3\u6cd5\u90fd\u5f88\u7c7b\u4f3c": 775, "\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7ef4\u5ea6\u7684\u8868\u793a\u6765\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u5efa\u6a21": 758, "\u53ef\u9009": [737, 745, 754], "\u53ef\u907f\u514d\u8be5\u884c\u4e3a": 749, "\u5404\u79cd\u6570\u636e\u683c\u5f0f": 749, "\u5408\u5e76\u6210\u4e00\u79cd\u8fb9\u7684\u56fe": 772, "\u540c\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u53ef\u4ee5\u6709\u591a\u6761": 748, "\u540c\u65f6": [752, 761], "\u540c\u65f6dgl\u4e5f\u5efa\u8bae\u5b9e\u73b0\u4fdd\u5b58\u548c\u5bfc\u5165\u51fd\u6570": 738, "\u540c\u65f6\u4e5f\u652f\u6301\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u91c7\u6837\u7b56\u7565": 760, "\u540c\u65f6\u5c06\u8fb9id\u6620\u5c04\u5230\u5176\u53cd\u5411\u8fb9id": 762, "\u540c\u65f6\u5efa\u7acb\u53cd\u5411\u8fb9": 772, "\u540c\u65f6\u7701\u7565\u4e86\u8be6\u7ec6\u7684\u6570\u636e\u5904\u7406\u4ee3\u7801\u4ee5\u7a81\u51fa\u5c55\u793a\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 741, "\u540c\u6784\u56fe": 769, "\u540c\u6784\u56fe\u548c\u4e8c\u5206\u56fe\u53ea\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f02\u6784\u56fe": 753, "\u540c\u6784\u56fe\u548c\u5757": 765, "\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e4b\u95f4\u552f\u4e00\u7684\u5b9e\u73b0\u5dee\u5f02\u662f\u540e\u8005\u9700\u8981\u7528": 764, "\u540c\u6784\u56fe\u7684\u60c5\u51b5": 769, "\u540c\u6784\u7684": 748, "\u540c\u6837": [744, 766], "\u540c\u6837\u5730": 772, "\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 772, "\u540d\u79f0\u5c31\u5f88\u6709\u7528": 744, "\u540e": 774, "\u540e\u4e00\u79cd\u65b9\u6cd5\u6548\u7387\u9ad8\u5f97\u591a": 757, "\u540e\u7eed\u7ae0\u8282\u7684\u5185\u5bb9\u5747\u5047\u8bbe\u7528\u6237\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u56fe\u548c\u8282\u70b9": 771, "\u540e\u8005\u53ef\u4ee5\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u8fdb\u884c\u8fed\u4ee3": 766, "\u540e\u8005\u652f\u6301\u89e3\u538b\u7f29zip\u6587\u4ef6": 739, "\u5411\u524d": 762, "\u5411\u540e": 762, "\u5411\u91cf\u6216\u591a\u7ef4\u5f20\u91cf": 750, "\u5426\u5219": 762, "\u5426\u5219\u7528\u6237\u9700\u8981\u81ea\u5df1\u5b9e\u73b0": 739, "\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u7a7a\u95f4": 746, "\u542f\u52a8\u811a\u672c\u4f1a\u5728\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u6307\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u4efb\u52a1": 746, "\u542f\u52a8\u811a\u672c\u5728\u540e\u53f0\u542f\u52a8\u670d\u52a1\u5668": 744, "\u5434\u7d2b\u8587": 754, "\u548c": [738, 741, 742, 743, 744, 745, 747, 748, 749, 750, 752, 753, 756, 757, 758, 761, 762, 763, 767, 768, 769, 770, 772, 774, 775, 776], "\u548c1\u4e2a\u8fb9\u7279\u5f81": 750, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 763, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 763, "\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9": 753, "\u548c\u4ece\u4e00\u4e2a\u4efb\u610f\u7684\u566a\u58f0\u5206\u5e03": 775, "\u548c\u5305\u542b\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u5757": 765, "\u548c\u5b50\u56fe\u5757": 769, "\u548c\u5b83\u4eec\u7684\u5173\u7cfb": 747, "\u548c\u5c0f\u6279\u91cf\u7684\u8fb9id\u6570\u7ec4": 764, "\u548c\u666e\u901a\u7684nn\u6a21\u5757\u4e00\u6837": 770, "\u548c\u7528\u4e8e\u5206\u5e03\u5f0f\u53ef\u5b66\u4e60\u5d4c\u5165\u7684": 744, "\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81": 769, "\u548c\u8282\u70b9\u5206\u7c7b\u4e00\u6837\u7684\u90bb\u5c45\u91c7\u6837\u5668": 762, "\u552f\u4e00\u7684\u533a\u522b\u662f\u5728\u8c03\u7528": 772, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4e3a\u8bad\u7ec3\u96c6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u7684\u5b57\u5178": 766, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528": [744, 762], "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u63d0\u4f9b\u8d1f\u91c7\u6837\u65b9\u6cd5": 764, "\u5546\u54c1": 748, "\u5546\u5bb6": 748, "\u56de\u5f52": [741, 754, 771, 775], "\u56de\u5f52\u4e2d\u7684\u8282\u70b9\u8868\u793a\u6a21\u578b": 764, "\u56de\u5f52\u4e2d\u7684\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 764, "\u56de\u5f52\u4efb\u52a1": 772, "\u56de\u5f52\u6240\u9700\u7684\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 762, "\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u8fb9\u5f97\u5206\u6a21\u578b\u76f8\u540c": 775, "\u56de\u5f52\u7684\u6a21\u578b": 772, "\u56de\u5f52\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b": 762, "\u56de\u5f52\u7684\u8bad\u7ec3\u7c7b\u4f3c": 762, "\u56de\u5f52\u91cc\u7684\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c": 764, "\u56de\u60f3\u4e00\u4e0b\u5728": 761, "\u56e0\u4e3a": 757, "\u56e0\u4e3a\u4e0a\u8ff0\u7684\u5f97\u5206\u9884\u6d4b\u6a21\u578b\u5728\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 775, "\u56e0\u4e3a\u4e0d\u9700\u8981\u5728\u8fb9\u4e0a\u4fdd\u5b58feat_src\u548cfeat_dst": 757, "\u56e0\u4e3a\u53cb\u8c0a\u662f\u76f8\u4e92\u7684": 748, "\u56e0\u4e3a\u540c\u6b65sgd\u4f1a\u5047\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c0f\u6279\u6b21": 744, "\u56e0\u4e3a\u5b83\u4eec\u7ecf\u8fc7\u4e86\u5927\u91cf\u4f18\u5316": 756, "\u56e0\u4e3a\u5bf9\u4e8e\u5904\u7406\u540e\u7684\u5927\u578b\u6570\u636e\u96c6": 738, "\u56e0\u4e3a\u5d4c\u5165\u662f\u6a21\u578b\u7684\u4e00\u90e8\u5206": 744, "\u56e0\u4e3a\u7528\u6237\u9700\u8981\u6307\u5b9a\u5728\u54ea\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b": 775, "\u56e0\u4e3a\u9700\u8981\u4ece\u7b2c\u4e00\u5c42\u5f00\u59cb\u5bf9\u8282\u70b9\u8868\u793a\u9010\u5c42\u8ba1\u7b97": 763, "\u56e0\u6b64": [741, 744, 746, 749, 751, 753, 761, 762, 764], "\u56e0\u6b64\u5982\u679c\u4e00\u5f20\u56fe\u5f88\u5927": 745, "\u56e0\u6b64\u6570\u636e\u96c6\u7684\u5212\u5206\u662f\u5728\u56fe\u7684\u8282\u70b9\u96c6\u4e0a\u8fdb\u884c": 741, "\u56e0\u6b64\u672c\u793a\u4f8b\u8bf4\u660e\u4e86\u5982\u4f55\u4f7f\u7528\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5411\u91cf\u7684\u70b9\u79ef\u6765\u8ba1\u7b97\u5206\u6570": 764, "\u56e0\u6b64\u7528\u6237\u65e0\u6cd5\u4ecenn\u6a21\u5757\u7684\u53c2\u6570\u8bbf\u95ee\u5b83": 744, "\u56e0\u6b64\u76f4\u63a5\u5728\u8fb9\u754c\u5b50\u56fe\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012\u6709\u5f88\u5927\u5f00\u9500": 761, "\u56e0\u6b64\u901a\u5e38\u53ef\u4ee5\u5728\u968f\u673a\u62bd\u53d6\u7684\u5c0f\u6279\u6b21\u56fe\u4e0a\u8fdb\u884c\u9ad8\u6548\u7684\u8bad\u7ec3": 774, "\u56e0\u6b64\u9700\u8981\u5c06\u6240\u8981\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b": 772, "\u56fe": [741, 754], "\u56fe\u4e0a\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38\u6709\u4e09\u79cd\u7c7b\u578b": 741, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5b50\u56fe\u5bf9\u5e94\u4e00\u5f20\u539f\u59cb\u5c0f\u56fe": 774, "\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u662fdgl\u901a\u8fc7\u7ed9\u5b9a\u7684\u56fe\u7684\u8fb9\u5217\u8868\u4e2d\u6700\u5927\u7684\u70b9id\u63a8\u65ad\u6240\u5f97\u51fa\u7684": 752, "\u56fe\u5212\u5206api\u5f53\u524d\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c": 745, "\u56fe\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u4e8c\u5206\u56fe": 769, "\u56fe\u53ef\u4ee5\u662f": 748, "\u56fe\u540d\u79f0\u6807\u8bc6\u4e86\u96c6\u7fa4\u4e2d\u6240\u9700\u52a0\u8f7d\u7684\u56fe": 744, "\u56fe\u5c06\u4f1a\u88ab\u89c6\u4e3a\u4e8c\u5206\u56fe": 769, "\u56fe\u6216\u5f20\u91cf": 751, "\u56fe\u6570\u636e\u4e2d\u7684\u8bad\u7ec3": 776, "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [754, 771, 774, 776], "\u56fe\u662f\u7528\u4ee5\u8868\u793a\u5b9e\u4f53\u53ca\u5176\u5173\u7cfb\u7684\u7ed3\u6784": 748, "\u56fe\u6ce8\u610f\u529b\u7f51\u7edc": 773, "\u56fe\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210": 748, "\u56fe\u7684": 741, "\u56fe\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4e86": 776, "\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e2a\u5178\u578b\u9009\u9879\u662f\u805a\u5408\u7c7b\u578b": 768, "\u56fe\u8868\u793a\u5b9e\u4f53": 747, "\u5728": [741, 742, 744, 766, 769], "\u5728dgl": 767, "\u5728dgl\u4e2d": [753, 756, 758, 761], "\u5728dgl\u4e2d\u79f0\u4e4b\u4e3a": 766, "\u5728dgl\u7684\u56fe\u91cc": 752, "\u5728dgl\u91cc\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5b9e\u73b0\u8fd9\u4e00\u9700\u6c42": 773, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 747, "\u5728gpu\u4e0a\u8fdb\u884c\u5168\u56fe\u524d\u5411\u4f20\u64ad\u901a\u5e38\u7531\u4e8e\u663e\u5b58\u5927\u5c0f\u7684\u9650\u5236\u800c\u4e0d\u53ef\u884c": 763, "\u5728graph": 756, "\u5728jupyt": 744, "\u5728mxnet\u4e2d\u662ffloat\u5f20\u91cf": 741, "\u5728nn\u6a21\u5757\u4e2d": 769, "\u5728node": 740, "\u5728python\u5b57\u5178\u91cc\u4fdd\u5b58\u5176\u4ed6\u4fe1\u606f": 742, "\u5728sageconv\u4e2d": 768, "\u5728sageconv\u8bba\u6587\u91cc": 768, "\u5728update_all\u5916\u8c03\u7528\u66f4\u65b0\u51fd\u6570": 756, "\u5728user\u7c7b\u578b\u7684\u8282\u70b9\u548cclick\u7c7b\u578b\u7684\u8fb9\u4e0a\u968f\u673a\u751f\u6210\u8bad\u7ec3\u96c6\u7684\u63a9\u7801": 771, "\u5728\u4e00\u4e2a\u52a0\u6743\u56fe\u91cc": 773, "\u5728\u4e00\u4e2a\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 743, "\u5728\u4e00\u5c42\u4e2d": 763, "\u5728\u4e0a\u9762\u7684\u7b49\u5f0f\u4e2d": 755, "\u5728\u4ecb\u7ecddgl\u4e2d\u90bb\u5c45\u91c7\u6837\u7684\u7528\u6cd5\u4e4b\u524d": 761, "\u5728\u4f7f\u7528pytorch\u65f6": 744, "\u5728\u4f7f\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 758, "\u5728\u5185\u7f6e\u6570\u636e\u96c6": 742, "\u5728\u5185\u90e8": 744, "\u5728\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0b": 744, "\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e2d": 744, "\u5728\u521b\u5efa\u56fe\u7684\u65f6\u5019": 752, "\u5728\u521d\u6b65\u4e86\u89e3\u4e86\u5206\u5e03\u5f0f\u7ec4\u4ef6\u540e": 743, "\u5728\u52a0\u6743\u56fe\u4e2d": 748, "\u5728\u533a\u5757\u521b\u5efa\u7684\u9636\u6bb5": 769, "\u5728\u534a\u76d1\u7763\u8282\u70b9\u5206\u7c7b\u7684\u573a\u666f\u91cc": 745, "\u5728\u540c\u6784\u56fe\u4e2d": 748, "\u5728\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e0a\u505a\u8bc4\u5206\u9884\u6d4b\u65f6": 762, "\u5728\u56fe\u5212\u5206\u540e": 745, "\u5728\u56fe\u5212\u5206\u671f\u95f4\u7684\u56fe\u540d\u79f0": 744, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [754, 755], "\u5728\u57fa\u4e8e\u90bb\u5c45\u91c7\u6837\u7684\u8fb9\u5206\u7c7b\u4e2d": 762, "\u5728\u591a\u91cd\u56fe\u4e2d": 748, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": [754, 759, 769, 771], "\u5728\u5b58\u50a8\u56fe\u5206\u533a\u6570\u636e": 743, "\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u91c7\u6837\u5668\u540e": 761, "\u5728\u5bf9\u56fe\u8fdb\u884c\u5212\u5206\u65f6": 745, "\u5728\u5c0f\u6279\u6b21\u8bad\u7ec3\u4e2d": 769, "\u5728\u5f02\u6784\u56fe\u4e0a": 762, "\u5728\u5f02\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u548c\u5728\u540c\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u7565\u6709\u4e0d\u540c": 774, "\u5728\u5f02\u6784\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8282\u70b9\u5206\u7c7b\u7684\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684": 766, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [754, 755], "\u5728\u5f02\u6784\u56fe\u4e2d": 748, "\u5728\u5f02\u6784\u56fe\u7684\u60c5\u51b5\u4e0b": 769, "\u5728\u5f53\u524d\u5b9e\u73b0\u4e2d": 744, "\u5728\u5f97\u5230": 774, "\u5728\u6240\u6709\u8fb9\u7c7b\u578b\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012": 776, "\u5728\u63a8\u8350\u573a\u666f\u4e2d\u5f88\u5e38\u89c1": 772, "\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d": 748, "\u5728\u6574\u4e2a\u56fe\u6279\u6b21\u4e0a\u8fdb\u884c\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3": 774, "\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5": 757, "\u5728\u672c\u4f8b\u4e2d\u7701\u7565": 776, "\u5728\u672c\u8282\u4e2d": 743, "\u5728\u6784\u9020\u51fd\u6570\u4e2d": 768, "\u5728\u67d0\u4e9b\u573a\u666f\u4e2d": 775, "\u5728\u67d0\u79cd\u7c7b\u578b\u7684\u8fb9\u4e0a\u4e3a\u6bcf\u4e00\u6761\u8fb9\u9884\u6d4b\u7684\u7aef\u5230\u7aef\u6a21\u578b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a": 772, "\u5728\u6bcf\u4e2a\u5206\u533a\u7684\u6587\u4ef6\u5939\u5185": 745, "\u5728\u6bcf\u4e2a\u751f\u6210\u5757\u5217\u8868\u7684\u8fed\u4ee3\u4e2d": 766, "\u5728\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u4e2d\u7684\u8282\u70b9\u6570\u4e0a\u5b9e\u73b0\u5206\u533a\u95f4\u7684\u5e73\u8861": 745, "\u5728\u6d88\u606f\u4f20\u9012\u65f6": 756, "\u5728\u6d88\u606f\u51fd\u6570\u91cc": 773, "\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 744, "\u5728\u7528\u591a\u5c42\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 761, "\u5728\u7b2c9\u884c\u547d\u540d\u4e3a": 750, "\u5728\u7c7bdgldataset\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u5904\u7406\u6a21\u7248\u7684\u6d41\u7a0b\u56fe": 738, "\u5728\u7f16\u5199\u5b8c\u8fd9\u4e9b\u4ee3\u7801\u4e4b\u540e": 741, "\u5728\u8bad\u7ec3\u5668\u8fdb\u7a0b\u4e2d": 744, "\u5728\u8bad\u7ec3\u671f\u95f4": 745, "\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u63a9\u7801\u533a\u5206\u8bad\u7ec3": 772, "\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 761, "\u5728\u8fb9\u4e0a\u5c06\u4ee5\u4e0a\u4e24\u90e8\u5206\u7ebf\u6027\u64cd\u4f5c\u7684\u7ed3\u679c\u76f8\u52a0": 757, "\u5728\u8fb9\u96c6": 748, "\u5728\u8fd9\u4e2a\u573a\u666f\u91cc": 774, "\u5728\u8fd9\u4e2a\u6279\u6b21\u7684\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u4ee5\u66f4\u65b0\u8282\u70b9\u6216\u8fb9\u7684\u7279\u5f81": 774, "\u5728\u8fd9\u4e9b\u673a\u5668\u4e0a": 746, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": 769, "\u5728\u8fd9\u91cc\u53ef\u4ee5\u590d\u7528\u4e0a\u8ff0\u63d0\u5230\u7684": 772, "\u5728\u8fdb\u884c\u63a8\u65ad\u65f6": 763, "\u5757": [761, 762, 766], "\u5757\u4e5f\u53ef\u7528\u4e8e\u5f02\u6784\u56fe": 761, "\u5757\u7684\u8f93\u51fa\u8282\u70b9\u4e3a": 761, "\u578b\u8282\u70b9\u5230": 753, "\u578b\u8282\u70b9\u7684\u8fb9": 753, "\u57fa\u4e8egnn\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u9700\u9884\u6d4b\u7684\u8282\u70b9\u5bf9": 775, "\u5904\u7406\u548c\u4fdd\u5b58\u56fe\u6570\u636e\u63d0\u4f9b\u4e86\u7b80\u5355\u800c\u5e72\u51c0\u7684\u89e3\u51b3\u65b9\u6848": 737, "\u5904\u7406\u5b8c\u6210\u7684\u6570\u636e\u96c6\u7684\u4fdd\u5b58\u76ee\u5f55": 738, "\u5904\u7406\u6570\u636e": [737, 754], "\u5904\u7406\u8fc7\u7684\u6570\u636e\u6bd4\u8f83\u5927": 742, "\u590d\u5236\u5230": 746, "\u590d\u5236\u5230gpu": 751, "\u591a\u5c42\u611f\u77e5\u673a": 772, "\u5927\u90e8\u5206\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u9988\u8ba1\u7b97\u4e2d\u4ec5\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5f15\u5165\u56fe\u7ed3\u6784\u4fe1\u606f": 773, "\u5982": [749, 752, 764, 771, 772, 776], "\u5982panda": 749, "\u5982\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684": 750, "\u5982\u4e0b": 750, "\u5982\u4e0b\u4ee3\u7801\u6240\u6f14\u793a\u7684": 761, "\u5982\u4e0b\u4f8b\u6240\u793a": 752, "\u5982\u4e0b\u56fe\u6240\u793a": [760, 761], "\u5982\u4e0b\u6240\u793a": [761, 762], "\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u6240\u793a": 752, "\u5982\u4ee3\u7801\u6240\u793a": 741, "\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a": 744, "\u5982\u524d\u6240\u8ff0": 744, "\u5982\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b": 750, "\u5982\u63cf\u8ff0\u8282\u70b9\u4e4b\u95f4\u7684\u5bf9\u79f0\u5173\u7cfb": 748, "\u5982\u63cf\u8ff0\u975e\u5bf9\u79f0\u5173\u7cfb": 748, "\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684id\u76f8\u540c": 762, "\u5982\u679c\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u9002\u7528": 753, "\u5982\u679c\u4ee5\u6a21\u578b\u9009\u62e9\u4e3a\u76ee\u7684\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u8bc4\u4ef7\u6307\u6807": 763, "\u5982\u679c\u4f7f\u7528": 752, "\u5982\u679c\u5177\u6709\u6700\u5927id\u7684\u8282\u70b9\u6ca1\u6709\u8fb9": 752, "\u5982\u679c\u539f\u56fe\u5305\u542b\u591a\u79cd\u8282\u70b9\u7c7b\u578b": 765, "\u5982\u679c\u539f\u56fe\u53ea\u5305\u542b\u4e00\u79cd\u8282\u70b9\u7c7b\u578b": 765, "\u5982\u679c\u539f\u59cb\u6570\u636e\u5df2\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6": 741, "\u5982\u679c\u53ea\u9884\u6d4b": 776, "\u5982\u679c\u540e\u7aef\u6846\u67b6\u4e5f\u63d0\u4f9b\u4e86\u4ece\u78c1\u76d8\u4e2d\u4fdd\u5b58\u6216\u52a0\u8f7d\u5f20\u91cf\u7684\u5de5\u5177": 749, "\u5982\u679c\u56fe\u662f\u5f02\u6784\u7684": 776, "\u5982\u679c\u56fe\u91cc\u53ea\u6709\u4e00\u79cd\u8282\u70b9\u6216\u8fb9\u7c7b\u578b": 753, "\u5982\u679c\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8005\u8fb9\u7684\u6570\u91cf\u5c0f\u4e8e": 752, "\u5982\u679c\u5bf9\u901f\u5ea6\u4e0d\u592a\u5173\u6ce8\u7684\u8bdd": 749, "\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 766, "\u5982\u679c\u6570\u636e\u96c6\u662f\u4e00\u4e2azip\u6587\u4ef6": 739, "\u5982\u679c\u6587\u4ef6\u662f": 739, "\u5982\u679c\u662f\u4ece\u56fe\u4e2d\u5f97\u5230\u7684\u8fb9\u754c": 761, "\u5982\u679c\u672a\u63d0\u4f9b\u5177\u4f53\u7aef\u53e3": 746, "\u5982\u679c\u6a21\u578b\u540c\u65f6\u5177\u6709\u8282\u70b9\u5d4c\u5165\u548c\u89c4\u5219\u7684\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 744, "\u5982\u679c\u7279\u5f81\u5b58\u50a8\u5728": 766, "\u5982\u679c\u7528\u6237\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u7684\u6a21\u578b\u8ba1\u7b97\u4e86\u8282\u70b9\u7684\u8868\u793a": 772, "\u5982\u679c\u7528\u6237\u53ea\u60f3\u66f4\u65b0\u56fe\u4e2d\u7684\u90e8\u5206\u8282\u70b9": 759, "\u5982\u679c\u7528\u6237\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u4e00\u6b21\u4ec5\u4f7f\u7528\u4e00\u5f20\u56fe": 774, "\u5982\u679c\u7528\u6237\u5df2\u6709\u4e00\u4e2a\u7528\u4e8e\u6574\u4e2a\u56fe\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u4f20\u9012\u6a21\u5757": 765, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u6570\u636e\u96c6\u6216\u5176\u4ed6\u517c\u5bb9": 771, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5220\u9664\u5f02\u6784\u56fe\u4e2d\u7684\u53cd\u5411\u8fb9": 762, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5f00\u53d1\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 762, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 766, "\u5982\u679c\u7528\u6237\u60f3\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u4e00\u4e2a\u5206\u6570": 772, "\u5982\u679c\u7528\u6237\u60f3\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u4ee3\u7801\u800c\u53c8\u4e0d\u60f3\u81ea\u5df1\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u6b63\u786e\u7684\u76ee\u5f55\u4e2d": 739, "\u5982\u679c\u7528\u6237\u60f3\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 764, "\u5982\u679c\u7528\u6237\u60f3\u9884\u6d4b\u8fb9\u7c7b\u578b\u4e3a": 772, "\u5982\u679c\u7528\u6237\u6709\u5305\u542b\u6570\u767e\u4e07\u751a\u81f3\u6570\u5341\u4ebf\u4e2a\u8282\u70b9\u6216\u8fb9\u7684\u5927\u56fe": 760, "\u5982\u679c\u7528\u6237\u6a21\u578b\u5728\u5168\u56fe\u4e0a\u662f\u6309\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u7684": 766, "\u5982\u679c\u7528\u6237\u719f\u6089": 775, "\u5982\u679c\u7528\u6237\u719f\u6089\u5982\u4f55\u5b9a\u5236\u7528\u4e8e\u66f4\u65b0\u6574\u4e2a\u540c\u6784\u56fe\u6216\u5f02\u6784\u56fe\u7684gnn\u6a21\u5757": 765, "\u5982\u679c\u7528\u6237\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 739, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570\u65e0\u6cd5\u7528\u5185\u7f6e\u51fd\u6570\u5b9e\u73b0": 756, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757\u5168\u4f7f\u7528\u7684\u662fdgl\u5185\u7f6e\u6a21\u5757": 766, "\u5982\u679c\u7528\u6237\u8981\u5f15\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 744, "\u5982\u679c\u8981\u4ee5\u67d0\u79cd\u6982\u7387\u5c06\u79cd\u5b50\u8282\u70b9\u7684\u5165\u8fb9\u968f\u673a\u5254\u9664": 761, "\u5982\u679c\u8bad\u7ec3\u811a\u672c\u91cc\u5305\u542b\u9700\u8981\u5728\u670d\u52a1\u5668": 744, "\u5982\u679c\u8be5api\u6ca1\u6709\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0id": 745, "\u5982\u679c\u8be5\u7c7b\u7ee7\u627f\u81ea": 739, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u4e0d\u662f\u5757": 765, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u662f\u4e00\u4e2a\u5757": 765, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5f20\u91cf\u5bf9": 765, "\u5982\u679c\u9700\u8981\u7684\u8bdd": 776, "\u5b50\u56fe\u5728dgl\u4e2d\u79f0\u4e3a\u533a\u5757": 769, "\u5b50\u56fe\u5757\u7684\u60c5\u51b5": 769, "\u5b50\u56fe\u662f\u4ece\u76f8\u540c\u7684\u6570\u636e\u52a0\u8f7d\u5668\u4ea7\u751f\u7684": 762, "\u5b50\u56fe\u91c7\u6837\u548c\u90bb\u5c45\u91c7\u6837\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11\u7528gpu\u8bad\u7ec3gnn\u6a21\u578b\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6d88\u8017": 763, "\u5b50\u6a21\u5757\u6839\u636e\u805a\u5408\u7c7b\u578b\u800c\u6709\u6240\u4e0d\u540c": 768, "\u5b50\u7c7b\u4e4b\u5916\u5b8c\u6210": 738, "\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570": 738, "\u5b58\u50a8\u4e86\u5212\u5206\u63a9\u7801": 741, "\u5b58\u50a8\u4e86\u8f93\u5165\u8282\u70b9\u7279\u5f81": 773, "\u5b58\u50a8\u5206\u533a\u7684\u56fe\u7ed3\u6784\u4ee5\u53ca\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u4e00\u4e9b\u5143\u6570\u636e": 745, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u533aid": 745, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u7684\u5206\u533aid": 745, "\u5b58\u50a8\u5c5e\u4e8e\u8be5\u5206\u533a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u7279\u5f81": 745, "\u5b58\u50a8\u6587\u4ef6\u7684\u8def\u5f84": 739, "\u5b58\u50a8\u9690\u5c42\u8868\u793a\u9700\u8981": 760, "\u5b5f\u51e1\u8363": 754, "\u5b83\u4e3a": 744, "\u5b83\u4ece\u805a\u5408\u4e0e\u66f4\u65b0\u7684\u89d2\u5ea6\u5f52\u7eb3\u603b\u7ed3\u4e86\u591a\u79cdgnn\u6a21\u578b\u7684\u5b9e\u73b0": 755, "\u5b83\u4eec\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684api\u76f8\u4f3c": 743, "\u5b83\u4eec\u4e3b\u8981\u88ab\u7528\u6765\u63d0\u4f9b\u56fe\u4fe1\u606f": 744, "\u5b83\u4eec\u53ea\u5305\u62ec\u4e00\u79cd\u5173\u7cfb": 753, "\u5b83\u4eec\u5b58\u50a8\u8282\u70b9\u548c\u8fb9id\u4e0e\u5206\u533aid\u4e4b\u95f4\u7684\u6620\u5c04": 745, "\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e": 744, "\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f\u5b57\u7b26\u4e32": 756, "\u5b83\u4eec\u786e\u4fdd\u6240\u6709\u90e8\u5206\u90fd\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u548c\u8fb9": 744, "\u5b83\u4eec\u901a\u8fc7": 748, "\u5b83\u4eec\u9075\u5faa\u4e86\u7531": 737, "\u5b83\u4eec\u90fd\u662f\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9": 769, "\u5b83\u5141\u8bb8\u7528\u6237\u4e3a\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u90e8\u5206\u90bb\u5c45\u8282\u70b9\u4ee5\u6c47\u805a\u4fe1\u606f": 761, "\u5b83\u5177\u6709": 772, "\u5b83\u5177\u6709\u4e0e\u5e38\u89c4\u5f20\u91cf\u76f8\u540c\u7684api": 744, "\u5b83\u5206\u6279\u8fed\u4ee3\u8bad\u7ec3\u8282\u70b9id\u6570\u7ec4": 766, "\u5b83\u52a0\u8f7d\u5206\u533a\u6570\u636e": 744, "\u5b83\u5305\u62ec": 770, "\u5b83\u53ef\u4ee5\u7528\u6700\u5c11\u7684\u8fb9\u5206\u5272\u4ee5\u751f\u6210\u5206\u533a": 745, "\u5b83\u53ef\u83b7\u53d6\u8282\u70b9\u7684\u6240\u6709\u90bb\u5c45": 766, "\u5b83\u5728\u5355\u4e2aapi\u8c03\u7528\u91cc\u5408\u5e76\u4e86\u6d88\u606f\u751f\u6210": 756, "\u5b83\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6240\u6709\u8ba1\u7b97": 744, "\u5b83\u5b9e\u73b0\u4e86\u7528\u4e8e\u5904\u7406\u56fe\u6570\u636e\u7684\u57fa\u672c\u6a21\u7248": 738, "\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9": 764, "\u5b83\u5c06\u4ee5\u72ec\u7acb\u6a21\u5f0f\u8fd0\u884c": 744, "\u5b83\u5c06\u751f\u6210\u4e24\u4e2a\u989d\u5916\u7684numpy\u6587\u4ef6": 745, "\u5b83\u5e94\u5f53\u4ee5\u539f\u56fe": 764, "\u5b83\u5e94\u8be5\u7ee7\u627f": 767, "\u5b83\u6307\u5b9a\u8282\u70b9\u96c6\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u7c7b\u578b\u7ea6\u675f": 753, "\u5b83\u63a5\u53d7\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408\u4f5c\u4e3a\u8f93\u5165": 752, "\u5b83\u662fgraphsage\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u56fe\u5377\u79ef\u6a21\u5757": 776, "\u5b83\u662f\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 766, "\u5b83\u7528": 743, "\u5b83\u7ee7\u627f\u81ea": 738, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8282\u70b9": 756, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8fb9": 756, "\u5b83\u8fd4\u56de\u4ee5\u8fb9\u7c7b\u578b\u4e3a\u952e": 764, "\u5b83\u901a\u8fc7\u5c06\u8fb9\u4e0a\u7279\u5f81\u4e0e\u5176\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408\u6765\u751f\u6210\u6d88\u606f": 755, "\u5b8b\u6021\u7136": 754, "\u5b8c\u5168\u76f8\u540c": 762, "\u5b8c\u6574\u7684\u5185\u7f6e\u91c7\u6837\u65b9\u6cd5\u6e05\u5355": 766, "\u5b98\u65b9\u7684": 740, "\u5b9a\u4e49": [744, 753], "\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u9010\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u8ba1\u7b97": 755, "\u5b9a\u4e49\u6a21\u578b\u548c\u4f18\u5316\u5668": 743, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 766, "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [754, 760, 762, 766], "\u5b9e\u4f8b\u5316heterographconv": 776, "\u5b9e\u4f8b\u5316sageconv": 776, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad\u7684\u65b9\u6cd5\u4f9d\u7136\u9700\u8981\u4f7f\u7528": 763, "\u5b9e\u73b0\u903b\u8f91\u4e0e\u6d88\u606f\u4f20\u9012\u7ea7\u522b\u7684api": 770, "\u5b9e\u9645\u5e94\u7528\u4e2d": 775, "\u5bf9dataloader\u8fdb\u884c\u8fed\u4ee3": 766, "\u5bf9\u4e00\u6761\u8fb9\u8ba1\u7b97\u9884\u6d4b\u503c\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5c06\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u51fd\u6570": 772, "\u5bf9\u4e8e": 765, "\u5bf9\u4e8emxnet\u540e\u7aef": 767, "\u5bf9\u4e8epytorch\u540e\u7aef": 767, "\u5bf9\u4e8etensorflow\u540e\u7aef": 767, "\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26\u6743\u91cd\u7684\u56fe": 773, "\u5bf9\u4e8e\u4e00\u4e2a\u52a0\u6743\u56fe": 773, "\u5bf9\u4e8e\u4e00\u4e2a\u6307\u5b9a\u7684\u5c42": 763, "\u5bf9\u4e8e\u4e00\u5143\u51fd\u6570": 756, "\u5bf9\u4e8e\u4e00\u822c\u7684pytorch\u6a21\u5757": 768, "\u5bf9\u4e8e\u4e8c\u5143\u51fd\u6570": 756, "\u5bf9\u4e8e\u4e8c\u5206\u56fe": 770, "\u5bf9\u4e8e\u5168\u90bb\u5c45\u91c7\u6837": 766, "\u5bf9\u4e8e\u5177\u6709\u4e24\u4e2a\u5173\u7cfb": 753, "\u5bf9\u4e8e\u5177\u6709\u5341\u4ebf\u7ea7\u6570\u91cf\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 745, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3": 744, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u8bc4\u4f30": 744, "\u5bf9\u4e8e\u52a0\u6743\u56fe": 750, "\u5bf9\u4e8e\u540c\u6784\u56fe\u4e0a\u7684\u5168\u56fe\u8bad\u7ec3": 769, "\u5bf9\u4e8e\u56fe\u4e0a\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b": 776, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc": 768, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4": 776, "\u5bf9\u4e8e\u591a\u4e2a\u8282\u70b9": 752, "\u5bf9\u4e8e\u5e95\u5c42\u7684\u91c7\u6837api": 744, "\u5bf9\u4e8e\u5f97\u5206\u7684\u9884\u6d4b": 764, "\u5bf9\u4e8e\u65e0\u5411\u7684\u56fe": 752, "\u5bf9\u4e8e\u65e0\u6cd5\u5168\u90e8\u8f7d\u5165\u7684\u60c5\u51b5": 771, "\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5": 757, "\u5bf9\u4e8e\u6d88\u606f\u4f20\u9012": 756, "\u5bf9\u4e8e\u7279\u5b9a\u76ee\u6807\u8282\u70b9": 768, "\u5bf9\u4e8e\u79bb\u7ebf\u63a8\u65ad\u7684\u793a\u4f8b": 763, "\u5bf9\u4e8e\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 744, "\u5bf9\u4e8e\u8981\u62f7\u8d1d\u7684\u7279\u5f81": 753, "\u5bf9\u4e8e\u8bad\u7ec3\u811a\u672c": 743, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u6570\u91cf": 765, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u7279\u5f81": 765, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u6570\u91cf": 765, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 765, "\u5bf9\u4e8e\u8fb9\u56de\u5f52\u4efb\u52a1": 772, "\u5bf9\u4e8e\u8fd9\u4e2a\u5757": 761, "\u5bf9\u4e8e\u90bb\u5c45\u91c7\u6837": 761, "\u5bf9\u5176\u8fdb\u884c\u62c6\u5206": 744, "\u5bf9\u56fe\u8fdb\u884c\u5206\u533a\u7684\u8ba1\u7b97\u673a": 746, "\u5bf9\u5b83\u6240\u6709\u8282\u70b9\u7279\u5f81\u53d6\u5e73\u5747\u503c\u7684\u805a\u5408\u8bfb\u51fa\u516c\u5f0f\u5982\u4e0b": 774, "\u5bf9\u5e94\u4e8e\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b": 753, "\u5bf9\u5e94\u7740\u4e0b\u56fe\u6240\u793a\u7684\u5305\u542b4\u4e2a\u8282\u70b9\u7684\u56fe": 752, "\u5bf9\u5f02\u6784\u56fe\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u7684\u63a5\u53e3\u662f": 758, "\u5bf9\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u5408\u5e76\u7528\u6237\u6307\u5b9a\u7684\u7279\u5f81": 753, "\u5bf9\u6240\u6709\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u6c42\u548c": 774, "\u5bf9\u6bcf\u4e2a\u5173\u7cfb\u8ba1\u7b97\u548c\u805a\u5408\u6d88\u606f": 758, "\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u6d88\u606f": 758, "\u5bf9\u6bcf\u6761\u8fb9\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u8868\u793a": 772, "\u5bf9\u8c61": [744, 745, 749, 752], "\u5bf9\u8c61\u65f6": 749, "\u5bf9\u8c61\u67098\u6761\u8fb9": 749, "\u5bf9\u8c61\u6d88\u5931": 744, "\u5bf9\u8c61\u7684api": 740, "\u5bf9\u8c61\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 752, "\u5bf9\u8c61\u7684\u5217\u8868\u548c\u6807\u7b7e\u5f20\u91cf\u7684\u5217\u8868": 741, "\u5bf9\u8c61\u7684\u8282\u70b9\u548c\u8fb9\u53ef\u5177\u6709\u591a\u4e2a\u7528\u6237\u5b9a\u4e49\u7684": 750, "\u5bf9\u8f93\u5165\u8282\u70b9\u7279\u5f81": 765, "\u5bfc\u5165\u548c\u4fdd\u5b58": 738, "\u5bfc\u5165\u5904\u7406\u540e\u7684\u6570\u636e": 738, "\u5bfc\u5165\u6570\u636e": 741, "\u5c06": 765, "\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 745, "\u5c06\u4e00\u5f20\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u805a\u5408\u6210\u6574\u5f20\u56fe\u7684\u56fe\u8868\u793a": 774, "\u5c06\u4e0a\u8ff0\u56fe\u4f5c\u4e3a\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u8f93\u5165": 772, "\u5c06\u4e0e\u8f93\u5165\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u7279\u5f81\u52a0\u8f7d\u5230gpu\u4e0a": 766, "\u5c06\u4e0e\u8f93\u51fa\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u6807\u7b7e\u52a0\u8f7d\u5230gpu\u4e0a": 766, "\u5c06\u4e3a\u7a7a": 769, "\u5c06\u4ee5\u5206\u5e03\u5f0f\u6a21\u5f0f\u8fd0\u884c": 744, "\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u56fe\u7684\u5217\u8868": 766, "\u5c06\u4f1a\u62a5\u9519": 761, "\u5c06\u5176\u547d\u540d\u4e3a": 750, "\u5c06\u539f\u59cb\u6570\u636e\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8": 738, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe": 738, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 741, "\u5c06\u5757\u5217\u8868\u548c\u8f93\u5165\u8282\u70b9\u7279\u5f81\u4f20\u5165\u591a\u5c42gnn\u5e76\u83b7\u53d6\u8f93\u51fa": 766, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u4fdd\u5b58\u81f3": 738, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u7f13\u5b58\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 742, "\u5c06\u5f97\u5230\u7684\u56fe\u548c\u8f93\u5165\u7279\u5f81\u4f20\u5165\u4e0a\u8ff0\u6a21\u578b": 764, "\u5c06\u5fc5\u8981\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81\u590d\u5236\u5230gpu\u4e0a": 763, "\u5c06\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 741, "\u5c06\u6570\u636e\u96c6\u7684\u6709\u7528\u4fe1\u606f": 742, "\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55self": 739, "\u5c06\u6bcf\u4e2a\u7c7b\u578b\u6d88\u606f\u805a\u5408\u7684\u7ed3\u679c\u76f8\u52a0": 758, "\u5c06\u88ab\u6e05\u9664": 756, "\u5c06\u8ba1\u7b97\u673a": 746, "\u5c06\u8f93\u51fa\u590d\u5236\u56decpu": 763, "\u5c06\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 773, "\u5c0f\u6279\u6b21\u662f\u4e00\u4e2a\u5143\u7ec4": 740, "\u5c24\u5176\u662f\u5728\u5305\u542b\u5927\u91cf\u672a\u6807\u8bb0\u6570\u636e\u7684\u534a\u76d1\u7763\u7cfb\u7edf\u4e2d": 763, "\u5c31\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 761, "\u5c31\u597d\u50cf\u8fd9\u4e9b\u8fb9\u6839\u672c\u4e0d\u5b58\u5728\u4e00\u6837": 762, "\u5c31\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u7684\u5e73\u5747\u503c\u8bfb\u51fa\u8ba1\u7b97": 774, "\u5c31\u662f\u56fe\u7684\u6a21\u5f0f": 753, "\u5c3d\u53ef\u80fd": 756, "\u5c42\u56fe\u5377\u79ef\u7f51\u7edc": 760, "\u5c42\u8fdb\u884c\u8ba1\u7b97": 760, "\u5c42\u9009\u62e9\u8be5\u6279\u6b21\u8282\u70b9\u7684\u5168\u90e8\u6216\u90e8\u5206\u90bb\u5c45\u8282\u70b9": 760, "\u5c5e\u4e8e\u53e6\u4e00\u7c7b\u578b\u7684\u53cd\u5411\u8fb9": 762, "\u5d4c\u5165": 743, "\u5df2\u7ecf\u8d2d\u4e70": 748, "\u5e26\u6807\u7b7e\u548c\u672a\u5e26\u6807\u7b7e": 745, "\u5e38\u7528\u7684\u5f02\u6784\u56fe": 748, "\u5e38\u7528\u7684\u805a\u5408\u7c7b\u578b\u5305\u62ec": 768, "\u5e38\u89c1\u7684\u66f4\u65b0\u64cd\u4f5c\u662f\u6839\u636e\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u6765\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u548c\u8fdb\u884c\u5f52\u4e00\u5316": 769, "\u5e38\u89c1\u7684\u805a\u5408\u65b9\u6cd5\u5305\u62ec": 774, "\u5e76\u4e14\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u901a\u4fe1": 744, "\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u8c03\u7528\u5b83\u65f6": 744, "\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u7ef4\u5ea6\u5e7f\u64ad": 756, "\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7": 761, "\u5e76\u4e14\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 756, "\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8868\u793a\u8bad\u7ec3": 744, "\u5e76\u4e14\u60f3\u5c06\u5176\u7528\u4e8e\u5757": 765, "\u5e76\u4e14\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u7684\u5b57\u5178": [762, 764], "\u5e76\u4e14\u6709\u591a\u4e2a\u5df2\u6709\u7684api\u53ef\u4ee5\u7b80\u5316\u6b64\u64cd\u4f5c": 738, "\u5e76\u4e14\u7528\u6237\u4e0d\u5e0c\u671b\u5728\u5efa\u6a21\u4e2d\u533a\u5206\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b": 753, "\u5e76\u4e14\u7528\u6237\u5e0c\u671b\u5bf9\u5d4c\u5165\u6267\u884c\u7a00\u758f\u66f4\u65b0": 744, "\u5e76\u4e14\u805a\u5408\u51fd\u6570\u7684\u8f93\u51fa\u503c\u5168\u4e3a0": 769, "\u5e76\u4e14\u904d\u5386\u79cd\u5b50\u8282\u70b9\u751f\u6210\u4e00\u7cfb\u5217\u7684\u5757": 761, "\u5e76\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u51fa\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u53ef\u80fd\u5f97\u5206": 772, "\u5e76\u4e3a\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4f7f\u7528\u4e00\u79cd\u56fe\u5377\u79ef\u6a21\u5757": 776, "\u5e76\u4ece\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 772, "\u5e76\u4f5c\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u6700\u7ec8\u7ed3\u679c": 776, "\u5e76\u4f7f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8bad\u7ec3\u5668\u5747\u53ef\u8bbf\u95ee\u5b83\u4eec": 744, "\u5e76\u5411\u672c\u5730\u8bad\u7ec3\u5668\u8fd4\u56de\u4e00\u90e8\u5206": 744, "\u5e76\u5411\u672c\u5730\u8fdb\u7a0b\u8fd4\u56de\u8282\u70b9\u7684\u5b50\u96c6": 744, "\u5e76\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\u4f7f\u7528": 772, "\u5e76\u5728\u540c\u6837\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u5c06\u5206\u533a\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 743, "\u5e76\u5728\u6240\u6709\u673a\u5668\u4e0a\u542f\u52a8\u8bad\u7ec3\u4efb\u52a1": 743, "\u5e76\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u8981\u8fdb\u884c\u591a\u8f6e\u7684\u4fe1\u606f\u4f20\u9012": 776, "\u5e76\u5bf9\u5b83\u4eec\u5e94\u7528\u76f8\u540c\u7684\u64cd\u4f5c": 753, "\u5e76\u5bf9\u8282\u70b9\u548c\u8fb9\u91c7\u6837\u4ee5\u751f\u6210\u7528\u4e8e\u8bad\u7ec3\u7684\u5c0f\u6279\u6b21\u6570\u636e": 743, "\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5757": 761, "\u5e76\u5c06\u5206\u533a\u6570\u636e\u81ea\u52a8\u52a0\u8f7d\u5230\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e2d": 744, "\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u7a00\u758f\u4f18\u5316\u5668": 744, "\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d": 744, "\u5e76\u5c06\u751f\u6210\u7684\u5757\u5217\u8868\u653e\u5230gpu\u4e0a": 762, "\u5e76\u5c06\u751f\u6210\u7684\u5b50\u56fe\u5217\u8868\u653e\u5230gpu\u4e0a": 766, "\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728outputs\u5b57\u5178\u4e2d": 770, "\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237": 770, "\u5e76\u5c06\u8f93\u51fa\u4f5c\u4e3a\u8282\u70b9\u7684\u65b0\u7279\u5f81": 756, "\u5e76\u5c55\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u7ba1\u9053\u7684\u6bcf\u4e2a\u7ec4\u4ef6": 737, "\u5e76\u63d0\u53d6\u8f93\u51fa\u7684user\u8282\u70b9\u5d4c\u5165": 776, "\u5e76\u6709\u53ef\u80fd\u5229\u7528\u8fd9\u70b9": 762, "\u5e76\u7528\u5b83\u6784\u9020\u4e00\u4e2a\u5f02\u6784\u56fe": 753, "\u5e76\u7528\u5bf9\u5e94\u7684\u4e24\u4e2a\u7aef\u70b9id\u8868\u793a\u4e00\u6761\u8fb9": 752, "\u5e76\u8ba1\u7b97\u672c\u5730\u8fdb\u7a0b\u7684\u8282\u70b9": 743, "\u5e76\u8df3\u8fc7\u4ece\u6587\u4ef6\u6784\u5efa\u56fe\u7684\u5b9e\u73b0": 741, "\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u7684\u5b57\u5178": 776, "\u5e76\u8fd4\u56de\u6e90\u8282\u70b9id\u6570\u7ec4\u548c\u76ee\u6807\u8282\u70b9id\u6570\u7ec4": 764, "\u5e76\u901a\u8fc7\u5728\u8bad\u7ec3\u8282\u70b9\u4e0a\u6bd4\u8f83\u9884\u6d4b\u548c\u771f\u5b9e\u6807\u7b7e\u6765\u8ba1\u7b97\u635f\u5931": 776, "\u5e76\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u4e2d\u5177\u6709\u5e42\u5f8b\u5206\u5e03\u7684\u56fe\u8fdb\u884c\u4e86\u4f18\u5316": 745, "\u5e94\u7528\u56fe\u5377\u79ef\u548c\u6fc0\u6d3b\u51fd\u6570": 774, "\u5e95\u5c42api\u8981\u6c42\u7528\u6237\u7f16\u5199\u4ee3\u7801\u4ee5\u660e\u786e\u5b9a\u4e49\u5982\u4f55\u5bf9\u8282\u70b9\u5c42\u8fdb\u884c\u91c7\u6837": 744, "\u5efa\u7acb\u70b9\u548c\u8fb9\u7279\u5f81": 772, "\u5efa\u8bae\u7684\u5b9e\u73b0\u662f\u5c06\u7ebf\u6027\u64cd\u4f5c\u5206\u6210\u4e24\u90e8\u5206": 757, "\u5f02\u6784\u56fe": [747, 748, 754, 758, 769], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u540c\u6784\u56fe\u7684\u6a21\u578b\u8bad\u7ec3\u662f\u4e00\u6837\u7684": 776, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": [754, 767], "\u5f02\u6784\u56fe\u4e0a\u7684\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206": 758, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 766, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 775, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u548c\u540c\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6ca1\u6709\u592a\u5927\u533a\u522b": 775, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u6a21\u578b\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u51e0\u4e4e\u76f8\u540c": 764, "\u5f02\u6784\u56fe\u4e2d\u8282\u70b9\u7c7b\u578b\u7684\u987a\u5e8f": 753, "\u5f02\u6784\u56fe\u4e2d\u8fb9\u7c7b\u578b\u7684\u987a\u5e8f": 753, "\u5f02\u6784\u56fe\u4e3a\u7ba1\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u53ca\u5176\u76f8\u5173\u7279\u5f81\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u63a5\u53e3": 753, "\u5f02\u6784\u56fe\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u8fb9\u7684\u7c7b\u578b": 771, "\u5f02\u6784\u56fe\u7684\u5377\u79ef\u64cd\u4f5c\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u53c2\u6570": 770, "\u5f02\u6784\u56fe\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u51e0\u4e4e\u76f8\u540c": 762, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 776, "\u5f02\u6784\u56fe\u91cc\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 753, "\u5f02\u6784\u7684": 748, "\u5f20\u5efa": 754, "\u5f20\u6000\u6587": 754, "\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570\u5fc5\u987b\u5728gpu\u4e0a": 751, "\u5f52\u4e00\u5316": 769, "\u5f52\u4e00\u5316\u53ef\u4ee5\u662fl2\u5f52\u4e00\u5316": 768, "\u5f53": 760, "\u5f531\u4e2a\u8282\u70b9\u5165\u5ea6\u4e3a0\u65f6": 769, "\u5f53\u4e00\u53f0\u673a\u5668\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u65f6": 744, "\u5f53\u4f7f\u7528": 749, "\u5f53\u524d": 744, "\u5f53\u524d\u4ec5\u652f\u6301\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 744, "\u5f53\u524d\u7248\u672c\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3api\u4ec5\u652f\u6301pytorch\u540e\u7aef": 743, "\u5f53\u524d\u7248\u672c\u7684\u5b9e\u73b0\u4ec5\u652f\u6301\u5177\u6709\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 743, "\u5f53\u5f15\u5165\u591a\u79cd\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u540e": 753, "\u5f53\u7528\u6237\u4f7f\u7528\u542f\u52a8\u811a\u672c\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 744, "\u5f53\u7528\u6237\u5728python\u547d\u4ee4\u884c\u6216jupyt": 744, "\u5f53\u811a\u672c\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 744, "\u5f53\u8bad\u7ec3\u811a\u672c\u5728\u8bad\u7ec3\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 744, "\u5f53\u8f93\u5165\u7279\u5f81": 769, "\u5f53\u8fb9\u7c7b\u578b\u552f\u4e00\u5730\u786e\u5b9a\u4e86\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u7684\u7c7b\u578b\u65f6": 753, "\u5f90\u4e1c\u8f89": 754, "\u5f97\u5206": 775, "\u5f97\u5230": 772, "\u5f97\u5230\u5757\u4e2d\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u521d\u59cb\u8282\u70b9id": 761, "\u5f97\u5230\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 765, "\u5f97\u5230\u8fb9id\u5230\u8f93\u5165\u8fb9\u754c\u4e2d\u8fb9\u7684\u521d\u59cbid\u7684\u6620\u5c04": 761, "\u5fc5\u987b\u5728": 744, "\u5fc5\u987b\u5728dgl\u7684\u4efb\u4f55\u5176\u4ed6\u5206\u5e03\u5f0fapi\u4e4b\u524d": 744, "\u5fc5\u987b\u5728\u521d\u59cb\u5316": 744, "\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u7684\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8c03\u7528\u542f\u52a8\u811a\u672c": 746, "\u60c5\u51b5\u4f1a\u6709\u6240\u4e0d\u540c": 762, "\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f": 748, "\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570": 761, "\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u90bb\u5c45\u91c7\u6837\u7b56\u7565": 761, "\u60f3\u8981\u5b9e\u73b0\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u517c\u5bb9\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 760, "\u60f3\u8981\u7528dgl\u63d0\u4f9b\u7684\u90bb\u5c45\u91c7\u6837\u5668\u505a\u8fb9\u5206\u7c7b": 762, "\u60f3\u8d2d\u4e70": 748, "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528g": 770, "\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528\u4e00\u4e2a\u96c6\u7fa4\u7684\u73af\u5883\u8bbe\u7f6e": 743, "\u6216": [748, 753, 765], "\u6216numpi": 752, "\u6216\u4e3a\u76f8\u5173\u5b9e\u4f53\u63a8\u8350\u8fdb\u884c\u6700\u8fd1\u90bb\u641c\u7d22\u6216\u6700\u5927\u5185\u79ef\u641c\u7d22": 775, "\u6216\u65e0\u5411\u56fe\u4e2d\u7684\u90bb\u5c45": 761, "\u6216\u662f": 748, "\u6216\u8005\u60f3\u8981\u5173\u4e8e\u5757\u7684\u66f4\u6df1\u5165\u7684\u4ecb\u7ecd": 766, "\u6216\u8005\u60f3\u8981\u5bf9\u5757\u7684\u6982\u5ff5\u6709\u66f4\u8be6\u7ec6\u7684\u4e86\u89e3": 762, "\u6240\u4ee5dgl\u4e0d\u63a8\u8350\u5728": 756, "\u6240\u4ee5\u5f53\u5c06\u65e0\u5411\u7684networkx\u56fe\u8f6c\u6362\u4e3a": 749, "\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u5c06\u5176\u9644\u52a0\u5230\u4f18\u5316\u5668\u4e0a\u4ee5\u8fdb\u884c\u5c0f\u6279\u91cf\u8bad\u7ec3": 744, "\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019": 742, "\u6240\u4ee5\u8fd9\u91cc\u96be\u4ee5\u679a\u4e3e\u6240\u6709\u9009\u9879": 749, "\u6240\u6709\u6d88\u606f\u4f20\u9012\u51fd\u6570": 774, "\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6709\u65b9\u5411\u7684": 752, "\u6240\u6709\u8282\u70b9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5b9e\u4f53": 748, "\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u5fc5\u987b\u8c03\u7528\u521b\u5efa": 744, "\u6240\u6709\u8fb9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5173\u7cfb": 748, "\u6240\u8ff0": 771, "\u6267\u884c\u542f\u52a8\u811a\u672c\u7684\u8ba1\u7b97\u673a": 746, "\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u5bf9\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u64cd\u4f5c": 756, "\u6269\u5c55\u4e3a": 769, "\u6279\u6b21": [754, 759, 766, 769, 771], "\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u5f20\u91cf\u5747\u901a\u8fc7\u5c06\u6240\u6709\u56fe\u4e0a\u7684\u76f8\u5e94\u7279\u5f81\u62fc\u63a5\u5f97\u5230": 774, "\u6279\u6b21\u5316\u7684\u56fe": 774, "\u6279\u91cf\u5f52\u4e00\u5316\u7b49": 774, "\u628a\u5b83\u5b58\u5728\u56fe\u4e2d\u7528\u6765\u505a\u6d88\u606f\u4f20\u9012": 758, "\u628a\u5b83\u7684\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\u53d8\u6210\u4e86\u4e00\u4e2a\u5c0f\u7684\u4e8c\u5206\u56fe": 761, "\u628a\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 773, "\u62bd\u53d6\u51fa\u6765": 770, "\u62c6\u5206\u8bad\u7ec3\u96c6": 743, "\u62f7\u8d1d\u8282\u70b9\u7279\u5f81": 753, "\u62f7\u8d1d\u8fb9\u7684\u7279\u5f81": 753, "\u62fc\u63a5": 757, "\u6307\u4ee3\u4e00\u6761": 752, "\u6307\u5411\u8282\u70b9": 752, "\u6307\u5b9a\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55\u6216\u5df2\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55": 738, "\u6307\u5b9a\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 746, "\u6307\u5b9a\u56fe\u7c7b\u578b": 769, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u5206\u533a\u6570\u636e\u7684\u76f8\u5bf9\u8def\u5f84": 746, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u7528\u6237\u7684\u8bad\u7ec3\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84": 746, "\u6307\u5b9a\u6bcf\u4e2a\u5173\u7cfb\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570": 758, "\u6307\u5b9a\u8bad\u7ec3\u673a\u5668\u4e2d\u5b58\u50a8\u4e0e\u5206\u5e03\u5f0f\u8bad\u7ec3\u6709\u5173\u7684\u6240\u6709\u6570\u636e\u7684\u76ee\u5f55": 746, "\u6307\u5b9a\u96c6\u7fa4\u7684ip\u914d\u7f6e\u6587\u4ef6": 746, "\u6307\u793a\u76f8\u5e94\u8282\u70b9\u548c\u8fb9\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7279\u5f81\u5b57\u6bb5\u540d": 756, "\u6362\u53e5\u8bdd\u8bf4": 744, "\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570": 756, "\u63a5\u53d7\u4e00\u4e2a\u5982\u4e0a\u6240\u8ff0\u7684\u53c2\u6570": 756, "\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178": 758, "\u63a5\u53d7\u6765\u81ea\u540e\u7aef\u6846\u67b6\u7684\u4efb\u4f55\u8bbe\u5907\u5bf9\u8c61": 751, "\u63a5\u53e3\u53ef\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5f81": 750, "\u63a5\u53e3\u7684\u91cd\u8981\u8bf4\u660e": 750, "\u63a5\u6536\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u5f20\u91cf\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 776, "\u63a5\u7740\u8c03\u7528\u7528\u6237\u9884\u5148\u6ce8\u518c\u5728\u8be5\u5173\u7cfb\u4e0a\u7684nn\u6a21\u5757": 770, "\u63a8\u65ad": 744, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [743, 754], "\u63a8\u65ad\u7b97\u6cd5\u4e0d\u540c\u4e8e\u8bad\u7ec3\u7b97\u6cd5": 763, "\u63a8\u65ad\u7b97\u6cd5\u5c06\u5305\u542b\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 763, "\u63a8\u7406\u671f\u95f4\u5b9a\u4f4d\u8282\u70b9": 745, "\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5e03\u5c14\u6570\u7ec4\u8868\u793a\u8bad\u7ec3": 744, "\u63a9\u7801": 738, "\u63a9\u7801\u5728pytorch\u548ctensorflow\u4e2d\u662fbool\u5f20\u91cf": 741, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee5\u56fe\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u62bd\u8c61": 747, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u540c\u6784\u56fe\u8282\u70b9\u5206\u7c7b\u7684\u4f8b\u5b50": 776, "\u63d0\u4f9b\u4e86\u4e00\u4e9b\u529f\u80fd": 744, "\u63d0\u4f9b\u4e86\u4e00\u5c0f\u90e8\u5206": 744, "\u63d0\u4f9b\u4e86\u51e0\u4e2aapi\u6765\u8bbf\u95ee\u56fe\u7ed3\u6784": 744, "\u63d0\u4f9b\u4e86\u5bf9": 765, "\u63d0\u4f9b\u4e86\u63a5\u53e3\u4ee5\u5904\u7406\u56fe\u7684\u7ed3\u6784": 747, "\u63d0\u4f9b\u4e86\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 741, "\u63d0\u5230\u7684\u4e24\u5c42gcn\u4e3a\u4f8b": 763, "\u64cd\u4f5c": 756, "\u652f\u6301\u7d22\u5f15\u8bfb\u53d6\u548c\u5199\u5165": 744, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u975e\u5e38\u76f8\u4f3c": 762, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8fb9\u5206\u7c7b": 764, "\u6570\u636e\u5bfc\u5165": 741, "\u6570\u636e\u6587\u4ef6\u5939": 753, "\u6570\u636e\u6837\u672c\u7684\u6570\u91cf": 738, "\u6570\u636e\u96c6\u4e2d\u56fe\u7684\u6570\u91cf": 741, "\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u5f20\u56fe\u90fd\u6709\u5b83\u72ec\u7279\u7684\u7ed3\u6784\u548c\u8282\u70b9\u4e0e\u8fb9\u7684\u7279\u5f81": 774, "\u6570\u636e\u96c6\u4e2d\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u56fe": 741, "\u6570\u636e\u96c6\u4e5f\u53ea\u5305\u62ec\u4e00\u4e2a\u56fe": 740, "\u6570\u636e\u96c6\u7c7b\u4f3c": 740, "\u6574\u56fe\u5206\u7c7b": [741, 754, 771, 776], "\u6574\u56fe\u5206\u7c7b\u4e0e\u8282\u70b9\u5206\u7c7b\u6216\u94fe\u63a5\u9884\u6d4b\u7684\u4e3b\u8981\u533a\u522b\u662f": 774, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u8fd8\u9700\u8981\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u8868\u793a": 774, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u9700\u8981\u5728\u5f88\u591a\u56fe\u4e0a\u8fdb\u884c\u8bad\u7ec3": 774, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u4e0e\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u5178\u578b\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u7684\u5927\u591a\u6570\u6570\u636e\u96c6\u7c7b\u4f3c": 741, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u91cc\u7684\u6bcf\u4e2a\u6570\u636e\u70b9\u662f\u4e00\u4e2a\u56fe\u548c\u5b83\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4": 774, "\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u53ef\u4ee5\u8bc6\u522b\u793e\u533a\u7684\u7c7b\u578b": 774, "\u6574\u56fe\u5206\u7c7b\u6d41\u7a0b": 774, "\u6574\u56fe\u5206\u7c7b\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a": 774, "\u6587\u4ef6\u4e2d\u52a0\u8f7d": 749, "\u6587\u4ef6\u7684\u6240\u6709\u8def\u5f84\u90fd\u5e94\u6307\u5b9a\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u7684\u76f8\u5bf9\u8def\u5f84": 746, "\u65b9\u4fbf\u5e7f\u5927\u4e2d\u6587\u7528\u6237\u7fa4\u5b66\u4e60\u548c\u4f7f\u7528dgl": 754, "\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\u9a8c\u8bc1": 752, "\u65b9\u6cd5": [759, 761], "\u65b9\u6cd5\u4ece\u6700\u540e\u4e00\u5c42\u5f00\u59cb\u751f\u6210\u4e00\u4e2a\u5757\u7684\u5217\u8868": 761, "\u65b9\u6cd5\u8ba1\u7b97\u8fb9\u9884\u6d4b\u7684\u7ec4\u4ef6\u5373\u53ef\u8fdb\u884c\u8fb9\u5206\u7c7b": 772, "\u65b9\u6cd5\u8ba1\u7b97\u9884\u6d4b\u503c\u5373\u53ef": 772, "\u65e0\u5411\u7684": 748, "\u65e0\u76d1\u7763\u5b66\u4e60graphsag": 764, "\u65e0\u9700\u8fdb\u884c\u6b64\u7c7b\u68c0\u9a8c": 769, "\u65f6": 744, "\u65f6\u5206\u5e03\u5f0f\u91c7\u6837\u4ee3\u7801\u4e0e\u5355\u8fdb\u7a0b\u91c7\u6837\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c": 744, "\u65f6\u8bbe\u7f6e": 762, "\u65f6\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u8fed\u4ee3": 762, "\u65f6\u9700\u8981\u6307\u5b9a\u8fb9\u7684\u7c7b\u578b": 772, "\u662f": 745, "\u662f1\u4e2a\u5143\u7ec4\u65f6": 769, "\u662f\u4e00\u4e2apython\u7c7b": 744, "\u662f\u4e00\u4e2a\u56fe\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u51c6\u6570\u636e\u96c6": 740, "\u662f\u4e00\u4e2a\u5728\u4e8c\u5206\u56fe\u4e0a\u505a\u8fb9\u5206\u7c7b\u7684\u4ee3\u7801\u793a\u4f8b": 762, "\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u90bb\u5c45\u91c7\u6837\u5668\u7c7b": 761, "\u662f\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\u7684\u51fd\u6570": 761, "\u662f\u4e00\u4e2a\u9ad8\u7ea7api": 756, "\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 762, "\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 747, "\u662f\u4ece\u5747\u5300\u5206\u5e03\u4e2d\u91c7\u6837\u7684": 775, "\u662f\u4ee5\u8fb9\u7c7b\u578b\u5b57\u5178\u548c\u9884\u6d4b\u7ed3\u679c\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 764, "\u662f\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 758, "\u662f\u5426\u6253\u5370\u8fdb\u5ea6\u4fe1\u606f": 738, "\u662f\u5426\u91cd\u65b0\u5bfc\u5165\u6570\u636e\u96c6": 738, "\u662f\u56fe": 774, "\u662f\u5904\u7406": 738, "\u662f\u5b9a\u4e49\u5728\u6bcf\u6761\u8fb9\u4e0a\u7684\u6d88\u606f\u51fd\u6570": 755, "\u662f\u5bf9\u5e94\u6bcf\u4e2a\u5173\u7cfb": 770, "\u662f\u5e38\u6570\u9879\u8d85\u53c2\u6570": 775, "\u662f\u7528\u4e8e\u7279\u5f81\u5f52\u4e00\u5316\u7684\u53ef\u8c03\u7528\u51fd\u6570": 768, "\u662f\u805a\u5408\u51fd\u6570": 770, "\u662f\u8282\u70b9": 774, "\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55": 746, "\u662f\u987e\u5ba2": 748, "\u6635\u79f0": 754, "\u6682\u4e0d\u652f\u6301\u7a00\u758f\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 744, "\u66f4\u591a\u7ec6\u8282": 741, "\u66f4\u591a\u8be6\u7ec6\u7528\u6cd5\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357": 759, "\u66f4\u65b0\u51fd\u6570": [755, 756], "\u66f4\u65b0\u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u53c2\u6570": 756, "\u66ff\u6362\u4e3a": 765, "\u6700\u540e": [770, 774], "\u6700\u5e38\u89c1\u548c\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4efb\u52a1\u4e4b\u4e00\u5c31\u662f\u8282\u70b9\u5206\u7c7b": 776, "\u6700\u7b80\u5355\u7684\u90bb\u5c45\u91c7\u6837\u5668\u662f": 766, "\u6709": 756, "\u67093\u4e2a\u6587\u4ef6\u4ee5dgl\u683c\u5f0f\u5b58\u50a8\u5206\u533a\u6570\u636e": 745, "\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9002\u5408\u4fdd\u5b58\u5904\u7406\u8fc7\u7684\u6570\u636e": 742, "\u6709\u5173dgl\u7684\u5185\u7f6e\u91c7\u6837\u5668\u7684\u5b8c\u6574\u5217\u8868": 762, "\u6709\u5173dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u5982\u4f55\u5de5\u4f5c": 776, "\u6709\u5173\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 741, "\u6709\u5173\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 741, "\u6709\u5173\u8bad\u7ec3\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 741, "\u6709\u5173\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 741, "\u6709\u5206\u5e03\u5f0f\u7684\u7248\u672c": 744, "\u6709\u5411": 748, "\u6709\u5411\u7684": 748, "\u6709\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u53ef\u50a8\u5b58\u56fe": 749, "\u6709\u65f6\u5e0c\u671b\u4ece\u8ba1\u7b97\u4f9d\u8d56\u4e2d\u5220\u9664\u51fa\u73b0\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u8fb9": 762, "\u6709\u65f6\u7528\u6237\u4f1a\u60f3\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 771, "\u6709\u65f6\u7528\u6237\u5e0c\u671b\u9884\u6d4b\u56fe\u4e2d\u8fb9\u7684\u5c5e\u6027\u503c": 772, "\u6709\u65f6\u8fb9\u4e0a\u7684\u6d88\u606f\u53ef\u80fd\u662f\u9ad8\u7ef4\u7684": 757, "\u6709\u7740\u8bb8\u591a\u4f7f\u7528\u8282\u70b9\u5d4c\u5165\u7684\u65b9\u6cd5": 775, "\u670d\u52a1\u5668": 743, "\u670d\u52a1\u5668\u8fdb\u7a0b": 743, "\u670d\u52a1\u5668\u8fdb\u7a0b\u8d1f\u8d23\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570": 744, "\u672a\u52a0\u6743\u7684": 748, "\u672a\u6765dgl\u5c06\u652f\u6301\u5206\u5e03\u5f0f\u56fe\u5212\u5206": 745, "\u672c\u4f8b\u4e2d\u7701\u7565": 776, "\u672c\u7ae0\u4e2d\u9009\u62e9": 776, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5728\u5927\u56fe\u4e0a\u8fdb\u884c\u968f\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u65b9\u6cd5": 760, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4e3a\u7528\u6237\u81ea\u5df1\u7684\u56fe\u6570\u636e\u521b\u5efa\u4e00\u4e2adgl\u6570\u636e\u96c6": 737, "\u672c\u7ae0\u4ee3\u7801\u4f7f\u7528pytorch\u4f5c\u4e3adgl\u7684\u540e\u7aef\u6846\u67b6": 771, "\u672c\u7ae0\u4f1a\u4ee5\u4e0b\u9762\u4ee3\u7801\u6240\u521b\u5efa\u7684\u4e00\u4e2a\u5f02\u6784\u56fe\u4e3a\u4f8b": 771, "\u672c\u7ae0\u4f59\u4e0b\u7684\u5c0f\u8282\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4e3b\u9898": 760, "\u672c\u7ae0\u5047\u8bbe\u7528\u6237\u7684\u56fe\u4ee5\u53ca\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u90fd\u80fd\u5b58\u8fdbgpu": 771, "\u672c\u7ae0\u5171\u6709\u56db\u8282": 771, "\u672c\u7ae0\u5c06\u4f7f\u7528pytorch\u4f5c\u4e3a\u540e\u7aef": 767, "\u672c\u7ae0\u7684": 776, "\u672c\u7ae0\u7684\u524d\u534a\u90e8\u5206\u4ecb\u7ecd\u4e86\u4e0d\u540c\u573a\u666f\u4e0b\u5982\u4f55\u8fdb\u884c\u968f\u673a\u8bad\u7ec3\u7684\u65b9\u6cd5": 760, "\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u5206\u5e03\u5f0f\u7ec4\u4ef6": 743, "\u672c\u7ae0\u7684\u540e\u7eed\u90e8\u5206\u5c55\u793a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5": 738, "\u672c\u7ae0\u7684\u5f02\u6784\u56fe\u6837\u4f8b\u6570\u636e": 772, "\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u89e3\u91ca\u4e86\u5982\u4f55\u5728\u5f02\u6784\u56fe\u4e0a\u5b9e\u73b0\u6d88\u606f\u4f20\u9012": 755, "\u672c\u7ae0\u901a\u8fc7\u4f7f\u7528": 771, "\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u4e86dgl\u7684\u6d88\u606f\u4f20\u9012api": 755, "\u672c\u7ae0\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e86\u56fe\u7684\u5b9a\u4e49": 747, "\u672c\u8282\u4e0d\u6d89\u53ca\u901a\u8fc7\u8f6c\u6362\u5176\u4ed6\u56fe\u6765\u751f\u6210\u56fe\u7684\u51fd\u6570": 749, "\u672c\u8282\u4ec5\u7ed9\u51fa\u4e00\u4e9b\u5e38\u89c1\u683c\u5f0f\u7684\u4e00\u822c\u60c5\u51b5": 749, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728gpu\u663e\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u5c0f\u6279\u6b21\u5904\u7406\u548c\u90bb\u5c45\u91c7\u6837\u5b9e\u73b0\u5168\u56fe\u524d\u5411\u4f20\u64ad\u7684\u65b9\u6cd5": 763, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97api": 744, "\u672c\u8282\u4ee5\u5185\u7f6e\u6570\u636e\u96c6": 741, "\u672c\u8282\u4ee5\u5185\u7f6e\u7684\u6570\u636e\u96c6": 741, "\u672c\u8282\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u7684\u57fa\u672c\u7528\u6cd5": 740, "\u672c\u8282\u4f1a\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u7528\u6237\u81ea\u5df1\u7684\u91c7\u6837\u5668\u5e76\u5c06\u5176\u52a0\u5165\u5230gnn\u7684\u8bad\u7ec3\u6846\u67b6\u4e2d": 761, "\u672c\u8282\u4f7f\u7528dgl\u5185\u7f6e\u7684\u6570\u636e\u96c6": 776, "\u672c\u8282\u5c06\u5c55\u793a\u5982\u4f55\u5904\u7406\u4e0e\u8fd9\u4e9b\u4efb\u52a1\u76f8\u5173\u7684\u6570\u636e\u96c6": 741, "\u672c\u8282\u628a\u8282\u70b9": 775, "\u672c\u8282\u91cd\u70b9\u4ecb\u7ecd\u4e86\u5904\u7406\u56fe": 741, "\u672c\u8d28\u4e0a": 765, "\u673a\u5668\u96c6\u7fa4\u4e0a": 746, "\u674e\u5e86\u6807": 754, "\u6765\u4fdd\u5b58\u56fe\u7684\u70b9id": 752, "\u6765\u505a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u94fe\u8def\u9884\u6d4b\u7684\u6570\u636e\u96c6": 741, "\u6765\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u5757\u7684\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 766, "\u6765\u5904\u7406zip\u6587\u4ef6": 739, "\u6765\u5c55\u793a\u6a21\u578b\u7684\u8bad\u7ec3": 776, "\u6765\u5e73\u8861\u6bcf\u4e2a\u7c7b\u578b\u8282\u70b9\u5728\u5b50\u56fe\u4e2d\u7684\u5165\u5ea6": 745, "\u6765\u5f00\u53d1\u6d88\u606f\u4f20\u9012\u529f\u80fd": 757, "\u6765\u6307\u4ee3\u8fd9\u4e24\u4e2a\u5173\u7cfb\u662f\u53ef\u4ee5\u7684": 753, "\u6765\u6307\u5b9a\u6574\u5408\u4e0d\u540c\u5173\u7cfb\u805a\u5408\u7ed3\u679c\u7684\u65b9\u5f0f": 758, "\u6765\u6307\u793a\u6b64\u591a\u4efb\u52a1\u6570\u636e\u96c6\u4e2d\u7684\u9884\u6d4b\u4efb\u52a1\u603b\u6570": 741, "\u6765\u66ff\u6362\u56fe": 766, "\u6765\u67e5\u770bdgl\u7684\u5185\u7f6e\u6a21\u578b\u6a21\u5757\u662f\u5426\u652f\u6301\u63a5\u53d7": 766, "\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684\u6570\u636e\u96c6": 741, "\u6765\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 771, "\u6765\u81eanetworkx": 749, "\u6765\u81eascipi": 749, "\u6765\u81ea\u52a8\u5b8c\u6210": 739, "\u6765\u83b7\u53d6\u8282\u70b9": 743, "\u6765\u83b7\u53d6\u88ab\u5212\u5206\u7684\u56fe\u5206\u533a\u6570\u636e": 743, "\u6765\u83b7\u5f97\u5206\u7c7b\u8f93\u51fa": 774, "\u6765\u8ba1\u7b97\u8282\u70b9\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 775, "\u6765\u8ba1\u7b97\u8fb9\u7684\u5206\u6570": 764, "\u6765\u8bbf\u95ee\u8282\u70b9\u548c\u8fb9\u4e2d\u7684\u6570\u636e": 744, "\u6765\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 764, "\u6784\u5efa\u4e00\u4e2a2\u5c42\u7684gnn\u6a21\u578b": 776, "\u6784\u5efa\u4e86\u4e00\u4e2a\u65e0\u5411\u7684networkx\u56fe": 749, "\u6784\u5efa\u56fe": 741, "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": [754, 765, 771, 776], "\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u6ce8\u518c\u548c\u524d\u5411\u4f20\u64ad\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u5f20\u91cf\u64cd\u4f5c\u4e0e\u540e\u7aef\u6846\u67b6\u4e00\u6837": 767, "\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1": 768, "\u6784\u9020\u51fd\u6570\u7684\u6700\u540e\u8c03\u7528\u4e86": 768, "\u6807\u7b7e": [738, 741], "\u6807\u7b7e\u548c\u6570\u636e\u96c6\u5212\u5206\u7684\u63a9\u7801": 738, "\u6807\u7b7e\u6570\u7b49\u57fa\u672c\u4fe1\u606f": 738, "\u6807\u91cf\u6574\u578b\u7279\u5f81": 750, "\u6829\u6829\u7684\u590f\u5929": 754, "\u6839\u636e": 772, "\u6839\u636edgl\u6240\u4f7f\u7528\u7684\u540e\u7aef\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 767, "\u6839\u636e\u4efb\u52a1\u8bbe\u8ba1\u5206\u7c7b\u5c42": 774, "\u6839\u636e\u5176\u590d\u6742\u6027": 758, "\u6839\u636e\u5f53\u524d\u7684\u4efb\u52a1\u60c5\u51b5": 745, "\u6839\u636e\u8fd9\u4e2a\u826f\u597d\u7684\u6027\u8d28": 774, "\u6839\u636e\u9700\u8981\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u6765\u9009\u62e9": 765, "\u68c0\u67e5": 739, "\u68c0\u67e5\u5728": [738, 742], "\u68c0\u6d4b\u8f93\u5165\u56fe\u5bf9\u8c61\u662f\u5426\u7b26\u5408\u89c4\u8303": 769, "\u6a21\u5757": [754, 765, 771, 776], "\u6a21\u5757\u4e2d": 769, "\u6a21\u5757\u4f5c\u4e3a\u56fe\u5377\u79ef\u5c42": 774, "\u6a21\u5757\u63a5\u53d7\u7684\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684": 766, "\u6a21\u5757\u9996\u5148\u5bf9\u6bcf\u79cd\u8fb9\u7c7b\u578b\u8fdb\u884c\u5355\u72ec\u7684\u56fe\u5377\u79ef\u8ba1\u7b97": 776, "\u6a21\u578b": 744, "\u6a21\u578b\u4e2d\u5e94\u7279\u522b\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9": 774, "\u6a21\u578b\u5b9a\u4e49": 743, "\u6a21\u578b\u5b9a\u4e49\u5b8c\u6210\u540e": 774, "\u6a21\u578b\u5b9e\u73b0\u4f4d\u4e8e": 774, "\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6\u4e2d": 772, "\u6a21\u578b\u5c06": 762, "\u6a21\u578b\u63a5\u53d7\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868": 762, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u51e0\u4e4e\u76f8\u540c": 766, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c": 762, "\u6a21\u578b\u7684\u8f93\u5165\u662f\u5e26\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u7684\u6279\u6b21\u5316\u56fe": 774, "\u6a21\u578b\u8bad\u7ec3\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u4f4d\u4e8e": 774, "\u6a21\u578b\u8bad\u7ec3\u7684\u5faa\u73af": 743, "\u6b22\u8fce\u7ed9dgl\u8d21\u732e\u66f4\u591a\u7684\u6a21\u5757": 767, "\u6b63\u5728\u9500\u552e": 748, "\u6b63\u6837\u672c": 764, "\u6b64\u51fd\u6570\u5bf9": 756, "\u6b64\u521b\u5efa\u8fc7\u7a0b\u624d\u80fd\u6210\u529f": 744, "\u6b64\u5904\u53ea\u662f\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49gnn\u6a21\u5757\u7684\u4e00\u4e2a\u793a\u4f8b": 765, "\u6b64\u5916": [741, 751, 753], "\u6b64\u6a21\u5f0f\u4e3b\u8981\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5": 744, "\u6b64\u8c03\u7528\u901a\u8fc7\u5c06\u6e90\u8282\u70b9\u7279\u5f81": 756, "\u6bcf\u4e00\u6761\u8fb9": 775, "\u6bcf\u4e2a": 740, "\u6bcf\u4e2a\u5173\u7cfb\u4e0a\u7684dgl": 770, "\u6bcf\u4e2a\u5173\u7cfb\u7531\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4": 753, "\u6bcf\u4e2a\u56fe\u7684\u6807\u7b7e\u6570": 741, "\u6bcf\u4e2a\u8282\u70b9\u7279\u5f81\u5177\u6709\u552f\u4e00\u540d\u79f0": 750, "\u6bcf\u4e2a\u8fb9\u7279\u5f81\u4e5f\u5177\u6709\u552f\u4e00\u540d\u79f0": 750, "\u6bcf\u53f0\u8ba1\u7b97\u673a\u8d1f\u8d23\u4e00\u4e2a\u4e14\u53ea\u8d1f\u8d23\u4e00\u4e2a\u5206\u533a": 744, "\u6bcf\u5c42\u53ea\u5c55\u793a\u524d3\u4e2a\u5c0f\u6279\u6b21": 763, "\u6bcf\u6761\u8fb9\u7684\u6743\u91cd": 750, "\u6bcf\u6761\u8fb9\u90fd\u4e0e\u4e00\u4e2a\u6807\u91cf\u6743\u91cd\u503c\u76f8\u5173\u8054": 748, "\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u91cf\u6743\u91cd": 773, "\u6bcf\u6b21\u68af\u5ea6\u4e0b\u964d": 760, "\u6bcf\u79cd\u5173\u7cfb\u5bf9\u5e94\u4e00\u4e2a": 769, "\u6bcf\u8282\u5bf9\u5e94\u4e00\u79cd\u56fe\u5b66\u4e60\u4efb\u52a1": 771, "\u6bcf\u884c\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 746, "\u6bd4\u5982": [757, 768], "\u6bd4\u5982gml\u6216json": 753, "\u6bd4\u5982\u5217\u8868": 752, "\u6bd4\u5982\u5728": 769, "\u6c88\u6210": 754, "\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u8fb9": 761, "\u6ca1\u6709\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u5c31\u6ca1\u6709\u660e\u786e\u7684\u8fd4\u56de\u503c": 753, "\u6ce8\u518c\u53c2\u6570\u548c\u5b50\u6a21\u5757": 768, "\u6ce8\u518c\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u6216\u8005\u5b50\u6a21\u5757": 768, "\u6ce8\u610f": [749, 753, 763, 765, 771], "\u6ce8\u610f\u7ed3\u679c\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u7279\u5f81": 758, "\u6ce8\u610f\u8ba1\u7b97\u65b9\u6cd5\u662f\u4e00\u6837\u7684": 763, "\u6d4b\u8bd5\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u5bf9\u5e94\u8282\u70b9": 744, "\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u91cd\u590d\u591a\u8f6e": 776, "\u6d88\u606f\u4f20\u9012\u662f\u5b9e\u73b0gnn\u7684\u4e00\u79cd\u901a\u7528\u6846\u67b6\u548c\u7f16\u7a0b\u8303\u5f0f": 755, "\u6d88\u606f\u4f20\u9012\u7684\u5b9a\u4e49\u662f": 761, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [754, 771, 772, 776], "\u6d88\u606f\u4f20\u9012\u9700\u8981\u805a\u96c6\u5176\u90bb\u5c45": 761, "\u6d88\u606f\u51fd\u6570": 756, "\u6d88\u606f\u7684\u5185\u7f6e\u51fd\u6570\u7684\u547d\u540d\u7ea6\u5b9a\u662f": 756, "\u6d88\u606f\u805a\u5408\u548c\u8282\u70b9\u7279\u5f81\u66f4\u65b0": 756, "\u6e38\u620f": 753, "\u6e90": [756, 757], "\u6e90\u4ee3\u7801": 741, "\u6e90\u6587\u4ef6\u4e2d\u7684": 774, "\u6e90\u8282\u70b9": 764, "\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u76f8\u540c": 769, "\u6e90\u8282\u70b9\u7279\u5f81": 769, "\u6e90\u8282\u70b9\u7c7b\u578b": 753, "\u6fc0\u6d3b\u51fd\u6570": 769, "\u70b9\u4e0a\u8ba1\u7b97": 755, "\u7136\u540e": [766, 776], "\u7136\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e9b": 747, "\u7136\u540e\u540c\u6837\u901a\u8fc7\u8c03\u7528": 772, "\u7136\u540e\u5728\u5b50\u56fe\u4e0a\u8c03\u7528": 759, "\u7136\u540e\u5728\u7f51\u7edc\u7684\u7b2c": 760, "\u7136\u540e\u5bf9\u6240\u6709\u6d88\u606f\u6c42\u548c\u6765\u66f4\u65b0\u8282\u70b9\u7279\u5f81": 756, "\u7136\u540e\u5c06\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4e0a\u7684\u6d88\u606f\u805a\u5408\u7ed3\u679c\u518d\u76f8\u52a0": 776, "\u7136\u540e\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u8fb9\u7684": 756, "\u7136\u540e\u5c06\u8be5\u5b50\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 753, "\u7136\u540e\u5e94\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42": 757, "\u7136\u540e\u6839\u636e\u56fe\u7c7b\u578b\u6269\u5c55\u8f93\u5165\u7279\u5f81": 769, "\u7136\u540e\u8bb2\u89e3\u4e86\u5982\u4f55\u9ad8\u6548\u5730\u5728\u70b9\u548c\u8fb9\u4e0a\u4f7f\u7528\u8fd9\u4e9bapi": 755, "\u7136\u800c": 763, "\u7269\u54c1": [747, 748], "\u7279\u5f81": [738, 753], "\u7279\u5f81\u4e0a": 756, "\u7279\u5f81\u4e5f\u5fc5\u987b\u5728gpu\u4e0a": 751, "\u7279\u5f81\u548c\u5212\u5206\u63a9\u7801\u7684\u6807\u51c6\u65b9\u6cd5": 741, "\u7279\u5f81\u548c\u76ee\u6807\u8282\u70b9\u7684": 756, "\u7279\u5f81\u5c3a\u5bf8\u662f7": 774, "\u7279\u5f81\u5f20\u91cf\u4f7f\u7528": 750, "\u7279\u5f81\u6570\u636e\u4e5f\u62f7\u8d1d\u5230\u4e86gpu\u4e0a": 751, "\u7279\u5f81\u6c42\u548c": 756, "\u7279\u6b64\u81f4\u8c22\u4e0b\u8ff0\u8d21\u732e\u8005": 754, "\u72ec\u7acb\u6a21\u5f0f\u8981\u6c42\u8f93\u5165\u56fe\u4ec5\u5177\u6709\u4e00\u4e2a\u5206\u533a": 744, "\u738b\u5efa\u6c11": 754, "\u73a9": 753, "\u751f\u6210\u8fb9\u754c": 761, "\u7528": [743, 752, 767], "\u7528\u4e8e\u5206\u5e03\u5f0f\u56fe\u7684": 744, "\u7528\u4e8e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684": 744, "\u7528\u4e8e\u521d\u59cb\u5316": 744, "\u7528\u4e8e\u5728dgl\u4e2d\u81ea\u5b9a\u4e49\u56fe\u6570\u636e\u96c6\u7684\u6a21\u677f": 738, "\u7528\u4e8e\u5728\u673a\u5668\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1": 746, "\u7528\u4e8e\u5b9a\u4e49\u5f02\u6784\u56fe\u4e0agnn\u6a21\u5757": 770, "\u7528\u4e8e\u5bf9\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u91c7\u6837\u4ee5\u751f\u6210\u5c0f\u6279\u6b21\u8bad\u7ec3\u6570\u636e": 744, "\u7528\u4e8e\u5c06\u56fe\u5206\u533a\u590d\u5236\u5230\u96c6\u7fa4": 746, "\u7528\u4e8e\u6307\u5b9a\u56fe\u7c7b\u578b\u5e76\u5c06": 769, "\u7528\u4e8e\u8bbf\u95ee\u5176\u5143\u6570\u636e": 744, "\u7528\u4e8e\u8bbf\u95ee\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d\u7684\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 744, "\u7528\u4ece0\u5f00\u59cb\u7684\u8fde\u7eed\u6574\u6570\u91cd\u65b0\u6807\u8bb0\u6240\u6709\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 753, "\u7528\u4fdd\u5b58\u7684\u8fb9\u7279\u5f81\u4e0e\u5bf9\u5e94\u8fb9\u7684\u539f\u59cb\u6d88\u606f\u76f8\u4e58": 773, "\u7528\u6237": [747, 748, 753], "\u7528\u6237\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5b83": 756, "\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528mlp": 772, "\u7528\u6237\u4e5f\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a": 772, "\u7528\u6237\u4ec5\u9700\u5bf9\u5355\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u8bad\u7ec3": 743, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 761, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528": 766, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8282\u70b9": 764, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7": 745, "\u7528\u6237\u53ea\u9700\u4f7f\u7528\u65b0\u7684\u8282\u70b9\u548c\u8fb9\u7684id": 745, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 766, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u51fa\u8282\u70b9\u7684\u6807\u7b7e": 766, "\u7528\u6237\u53ea\u9700\u8981\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a": 772, "\u7528\u6237\u53ef\u4ee5\u4ece\u8fd4\u56de\u7684\u5b57\u5178\u4e2d\u63d0\u53d6": 776, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528": [762, 776], "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u50cfpandas\u8fd9\u6837\u7684\u5305\u5148\u5c06csv\u6587\u4ef6\u89e3\u6790\u4e3anumpy\u6570\u7ec4\u6216\u6846\u67b6\u5f20\u91cf": 753, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 756, "\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u52a0\u8f7d\u5668": 761, "\u7528\u6237\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5c06\u8bad\u7ec3\u96c6": 745, "\u7528\u6237\u53ef\u4ee5\u53c2\u7167": 763, "\u7528\u6237\u53ef\u4ee5\u53c2\u8003": [741, 761, 762, 764, 766], "\u7528\u6237\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u5185\u7f6e\u6570\u636e\u96c6": 741, "\u7528\u6237\u53ef\u4ee5\u53ea\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4\u6765\u6307\u5b9a\u8fb9\u7c7b\u578b": 753, "\u7528\u6237\u53ef\u4ee5\u5728": [741, 776], "\u7528\u6237\u53ef\u4ee5\u5728\u5b9e\u4f8b\u5316": 762, "\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u6709\u5173\u6570\u636e\u96c6\u7684\u56fe": 738, "\u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b": 774, "\u7528\u6237\u53ef\u4ee5\u5bf9\u8981\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b\u6784\u9020\u4e00\u4e2a\u8d1f\u91c7\u6837\u56fe": 775, "\u7528\u6237\u53ef\u4ee5\u5c06": 744, "\u7528\u6237\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u6cbf\u6240\u6709\u5165\u8fb9\u4f20\u9012\u6d88\u606f\u7684\u8fb9\u754c": 761, "\u7528\u6237\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u6807\u7b7e\u4f7f\u7528": 772, "\u7528\u6237\u53ef\u4ee5\u5c06\u6743\u91cd\u50a8\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 750, "\u7528\u6237\u53ef\u4ee5\u5c06\u7528\u4e8e\u5757\u7684\u8bed\u53e5\u548c\u539f\u5148\u7528\u4e8e\u6574\u56fe\u7684\u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83": 765, "\u7528\u6237\u53ef\u4ee5\u5c06\u91c7\u6837\u5668\u5bf9\u8c61\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668\u5bf9\u8c61": 761, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u62d3\u5c55\u4e3a\u5bf9\u591a\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 775, "\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u5173\u7cfb\u5207\u7247\u7684\u65b9\u5f0f\u521b\u5efa\u8fd9\u4e2a\u56fe": 772, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u4f7f\u7528": 741, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6a21\u578b\u7684\u8bad\u7ec3": 776, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199\u9884\u6d4b\u6a21\u5757": 772, "\u7528\u6237\u53ef\u4ee5\u6309\u8282\u70b9\u7c7b\u578b\u6765\u83b7\u53d6\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 761, "\u7528\u6237\u53ef\u4ee5\u67e5\u9605": 766, "\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027": 741, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u590d\u7528\u5b83": 762, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 776, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528": 762, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528graphdataload": 774, "\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u7f16\u5199\u5728\u6240\u6709\u8fb9\u4e0a\u8fdb\u884c\u9884\u6d4b\u7684\u5168\u56fe\u8bad\u7ec3\u4ee3\u7801": 772, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": [761, 774], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539nn\u6a21\u5757\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c\u6765\u7ed9nn\u6a21\u5757\u589e\u52a0\u8fb9\u6743\u91cd\u652f\u6301": 773, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u4f20\u5165\u4e24\u4e2agpu\u5f20\u91cf\u6765\u521b\u5efagpu\u4e0a\u7684": 751, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u8981\u4fdd\u7559\u7684\u5173\u7cfb\u6765\u521b\u5efa\u5f02\u6784\u56fe\u7684\u5b50\u56fe": 753, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u8fb9": 764, "\u7528\u6237\u53ef\u4ee5\u904d\u5386\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u83b7\u5f97\u7531\u5c0f\u6279\u6b21\u8fb9\u7ec4\u6210\u7684\u5b50\u56fe": 762, "\u7528\u6237\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528": 775, "\u7528\u6237\u53ef\u4ee5\u91cd\u7528\u5728\u8fb9\u5206\u7c7b": 764, "\u7528\u6237\u53ef\u5c06\u4e00\u7cfb\u5217\u7684\u56fe\u5efa\u7acb\u6210\u4e00\u4e2a\u56fe\u6279\u6b21": 774, "\u7528\u6237\u53ef\u5c06\u5176\u4f20\u7ed9\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a": 774, "\u7528\u6237\u53ef\u5c06\u591a\u5f20\u56fe\u7ec4\u6210\u4e00\u4e2a\u6279\u6b21": 774, "\u7528\u6237\u53ef\u7528\u5982\u4e0b\u4ee3\u7801\u83b7\u53d6": 776, "\u7528\u6237\u53ef\u80fd\u4f1a\u9700\u8981\u6807\u51c6\u5316\u539f\u59cb\u8fb9\u6743\u91cd": 773, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u6cbf\u7740\u6240\u6709\u8fb9\u7c7b\u578b\u4ece\u90bb\u5c45\u90a3\u91cc\u6536\u96c6\u6d88\u606f": 776, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u9884\u6d4b\u7ed9\u5b9a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9": 775, "\u7528\u6237\u53ef\u80fd\u9700\u8981\u5c06\u4e00\u4e9b\u5173\u7cfb\u5408\u5e76": 753, "\u7528\u6237\u5728\u8bad\u7ec3\u8fb9\u5206\u7c7b\u6a21\u578b\u65f6": 762, "\u7528\u6237\u5728\u8c03\u7528dglgraph": 753, "\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 756, "\u7528\u6237\u5c06\u9700\u8981\u4e00\u53f0\u5927\u5185\u5b58\u7684\u673a\u5668\u6765\u5bf9\u56fe\u8fdb\u884c\u5212\u5206": 745, "\u7528\u6237\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b": 774, "\u7528\u6237\u5e0c\u671b\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e94\u7528\u4e0d\u540c\u7684\u64cd\u4f5c": 753, "\u7528\u6237\u5fc5\u987b\u5b9e\u73b0": 741, "\u7528\u6237\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5757": 766, "\u7528\u6237\u6307\u5357\u5c06\u4ee5\u5185\u7f6e\u6570\u636e\u96c6\u4e3a\u4f8b": 741, "\u7528\u6237\u6700\u597d\u4f7f\u7528": 752, "\u7528\u6237\u6709\u65f6\u4f1a\u5e0c\u671b\u4ece\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u56fe\u4e2d\u5220\u53bb\u90e8\u5206\u8fb9\u53ca\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9": 762, "\u7528\u6237\u7684\u4efb\u52a1\u662f\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 772, "\u7528\u6237\u81ea\u5df1\u7684\u8bad\u7ec3\u4ee3\u7801": 741, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5411\u7c7b\u6dfb\u52a0\u5c5e\u6027\u4ee5\u6307\u793a\u4e00\u4e9b\u6709\u7528\u7684\u6570\u636e\u96c6\u4fe1\u606f": 741, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5c06\u65b0\u7684": 744, "\u7528\u6237\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u552f\u4e00\u7684\u5f20\u91cf\u540d\u79f0": 744, "\u7528\u6237\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 764, "\u7528\u6237\u8fd8\u5fc5\u987b\u5c06gnn\u7684\u5c42\u6570\u4f20\u9012\u7ed9\u7236\u7c7b": 761, "\u7528\u6237\u8fd8\u662f\u5728\u8282\u70b9\u6216\u8fb9\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 774, "\u7528\u6237\u8fd8\u9700\u8981\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5206\u5272\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 744, "\u7528\u6237\u9664\u4e86\u9700\u8981\u4f7f\u7528\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 774, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u6307\u5b9a\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf": 746, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u6761\u8fb9\u90fd\u521b\u5efa\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9": 752, "\u7528\u6237\u9700\u8981\u4ece\u6a21\u578b\u4e2d\u6536\u96c6\u6240\u6709\u5206\u5e03\u5f0f\u5d4c\u5165": 744, "\u7528\u6237\u9700\u8981\u5206\u5272\u8bad\u7ec3\u96c6": 744, "\u7528\u6237\u9700\u8981\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 764, "\u7528\u6237\u9700\u8981\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u53e6\u5916\u4e00\u4e2a\u56fe": 775, "\u7528\u6237\u9700\u8981\u63d0\u4f9b\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 744, "\u7528\u6237\u9700\u8981\u660e\u786e\u5730\u6307\u660e\u8282\u70b9\u7684\u6570\u91cf": 752, "\u7528\u6237\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8fb9\u5206\u7c7b": 772, "\u7528\u6237\u9996\u5148\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u7684\u7ef4\u5ea6": 768, "\u7528\u6765\u6307\u5b9a\u4e0d\u540c\u8bad\u7ec3\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u6240\u4f7f\u7528\u7684\u7aef\u53e3": 746, "\u7528\u8be5\u6a21\u5757\u8fdb\u884c\u79bb\u7ebf\u63a8\u65ad": 763, "\u7528\u8fb9\u4e24\u7aef\u8282\u70b9\u8868\u793a\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u6253\u5206": 762, "\u7531gpu\u5f20\u91cf\u6784\u9020\u7684\u56fe\u4e5f\u5728gpu\u4e0a": 751, "\u7531\u4e8etensor\u7c7b\u5185\u90e8\u4f7f\u7528c\u6765\u5b58\u50a8": 752, "\u7531\u4e8e\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\u5c06\u539f\u6765\u7684\u8fb9\u7c7b\u578b\u5b58\u6210\u8fb9\u7279\u5f81": 772, "\u7531\u4e8e\u6574\u56fe\u5206\u7c7b\u5904\u7406\u7684\u662f\u5f88\u591a\u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe": 774, "\u7531\u4e8e\u66f4\u65b0\u51fd\u6570\u901a\u5e38\u53ef\u4ee5\u7528\u7eaf\u5f20\u91cf\u64cd\u4f5c\u5b9e\u73b0": 756, "\u7531\u4e8e\u8fd9\u91cc\u7684\u5173\u7cfb\u5b9a\u4e49\u6d88\u9664\u4e86\u8fb9\u7c7b\u578b\u7684\u6b67\u4e49": 753, "\u7531\u591a\u5c42gnn\u8ba1\u7b97\u5f97\u51fa": 775, "\u7684": [752, 760], "\u7684api\u4ee5\u65b9\u4fbf\u6570\u636e\u8bbf\u95ee": 744, "\u7684api\u7528\u4e8e\u6b64\u4f18\u5316": 741, "\u7684nn\u6a21\u5757": 770, "\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u6240\u4e0d\u540c": 762, "\u7684\u5177\u4f53\u5b9a\u4e49": 776, "\u7684\u5178\u578b\u793a\u4f8b\u5982\u4e0b": 746, "\u7684\u5185\u5b58\u7a7a\u95f4": 760, "\u7684\u51fd\u6570\u662f": 769, "\u7684\u5212\u5206": 745, "\u7684\u5212\u5206\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba1\u7b97\u8d1f\u8f7d\u4e0d\u5e73\u8861": 745, "\u7684\u521b\u5efa\u662f\u4e00\u4e2a\u540c\u6b65\u64cd\u4f5c": 744, "\u7684\u521b\u5efa\u9700\u8981": 744, "\u7684\u524d\u9a71\u8282\u70b9": 761, "\u7684\u539f\u5219": 750, "\u7684\u53c2\u6570": 758, "\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6d88\u606f\u51fd\u6570": 756, "\u7684\u56fe\u540d\u79f0\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570": 745, "\u7684\u5b50\u7c7b": [737, 741], "\u7684\u5b9e\u4f8b": 756, "\u7684\u5b9e\u73b0\u4e5f\u53d1\u751f\u4e86\u53d8\u5316": 741, "\u7684\u5b9e\u73b0\u4f1a\u5305\u542b\u4e24\u4e2a\u5b57\u5178": 766, "\u7684\u5b9e\u73b0\u5982\u4e0b": 761, "\u7684\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206": 757, "\u7684\u5f02\u6784\u56fe": 753, "\u7684\u5f20\u91cf": 773, "\u7684\u5f97\u5206\u6765\u8bad\u7ec3\u94fe\u8def\u6a21\u578b": 764, "\u7684\u6210\u5458\u5c5e\u6027": 756, "\u7684\u6240\u6709\u5165\u8fb9": 761, "\u7684\u6559\u7a0b": 749, "\u7684\u6570\u636e": 771, "\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c": 743, "\u7684\u6d88\u606f": 761, "\u7684\u7236\u7c7b": 761, "\u7684\u7279\u5f81": [747, 750, 774, 776], "\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u4e14\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5bfc\u5165\u56fe\u6570\u636e": 738, "\u7684\u793a\u4f8b": 770, "\u7684\u7b80\u5316\u7248": 765, "\u7684\u805a\u5408\u7ed3\u679c\u8fdb\u884c\u64cd\u4f5c": 756, "\u7684\u8282\u70b9": 748, "\u7684\u8282\u70b9\u5d4c\u5165": 776, "\u7684\u8282\u70b9\u7279\u5f81": 761, "\u7684\u8282\u70b9\u8868\u793a": 775, "\u7684\u8282\u70b9\u8868\u793a\u6a21\u5757\u79f0\u4f5c": 772, "\u7684\u8868\u5f81": 774, "\u7684\u8868\u793a\u6240\u9700\u7684\u8282\u70b9": 766, "\u7684\u8ba1\u7b97": 774, "\u7684\u8bba\u6587\u4e2d": 761, "\u7684\u8be6\u7ec6\u4fe1\u606f": 741, "\u7684\u8bed\u6cd5\u4e0e\u5e38\u89c4\u56fe\u4e2d\u7684": 761, "\u7684\u8bed\u6cd5\u5c06\u53ea\u5305\u542b\u8be5\u5173\u7cfb\u7684\u5b50\u56fe": 770, "\u7684\u8f93\u51fa": 761, "\u7684\u8f93\u51fa\u5f20\u91cf\u7684\u5217\u8868": 770, "\u7684\u8fb9": [752, 775], "\u7684\u8fb9\u4e92\u76f8\u8fde\u63a5": 748, "\u7684\u8fb9\u603b\u662f\u6709\u5411\u7684": 749, "\u7684\u8fb9\u7684\u6807\u7b7e": 772, "\u7684\u8fb9\u7c7b\u578b": 772, "\u7684\u90e8\u5206": 741, "\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u5411\u540e\u8fed\u4ee3": 761, "\u76ee\u524d": 744, "\u76ee\u5f55\u4e2d": 741, "\u76ee\u6807": [756, 757], "\u76ee\u6807\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 756, "\u76ee\u6807\u8282\u70b9\u6570\u7ec4\u5bf9\u4e3a\u503c\u7684\u5b57\u5178": 764, "\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 753, "\u76f4\u5230\u5230\u8fbe\u8f93\u5165\u5c42": 760, "\u76f4\u5230\u8bad\u7ec3\u4efb\u52a1\u7ed3\u675f": 744, "\u76f8\u4e58\u751f\u6210\u6d88\u606f": 756, "\u76f8\u5173api": [749, 750, 752, 753], "\u76f8\u5173\u6982\u8ff0\u8bf7\u9605\u8bfbapi\u53c2\u8003\u624b\u518c": 749, "\u76f8\u5173\u7684\u6838\u5fc3\u6982\u5ff5": 747, "\u76f8\u5173\u7684\u7279\u5f81\u4e5f\u4f1a\u88ab\u62f7\u8d1d": 753, "\u76f8\u540c": [761, 770], "\u76f8\u540c\u540d\u79f0\u7684\u7279\u5f81\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b": 750, "\u76f8\u5bf9\u5730": 748, "\u76f8\u6bd4\u4e4b\u4e0b": 763, "\u76f8\u6bd4\u540c\u6784\u56fe": 753, "\u77e5\u9053": 762, "\u786e\u5b9a": 769, "\u793a\u4f8b\u5982\u4e0b\u6240\u793a": 764, "\u793e\u4ea4\u7f51\u7edc\u7684\u56fe\u7531\u8868\u793a\u540c\u4e00\u5b9e\u4f53\u7c7b\u578b\u7684\u4eba\u53ca\u5176\u76f8\u4e92\u4e4b\u95f4\u7684\u793e\u4ea4\u5173\u7cfb\u7ec4\u6210": 748, "\u79cd\u5b50\u8282\u70b9": 761, "\u79f0\u4e3a": 738, "\u79f0\u4e3a\u70b9id": 752, "\u79f0\u4e3a\u8fb9id": 752, "\u7ae0\u8282": 754, "\u7ae0\u8282\u4e2d\u4e5f\u4f1a\u63d0\u5230": 761, "\u7b2c1\u7ae0": 754, "\u7b2c2\u4e2a\u5143\u7d20\u4e3a\u76ee\u6807\u8282\u70b9\u7279\u5f81": 769, "\u7b2c2\u7ae0": [754, 771, 772, 776], "\u7b2c3\u7ae0": [754, 765, 771, 776], "\u7b2c4\u7ae0": [754, 771, 774, 776], "\u7b2c5\u7ae0": [754, 760], "\u7b2c6\u7ae0": [754, 759, 769, 771], "\u7b2c7\u7ae0": 754, "\u7b2c\u4e00\u90e8\u5206\u4e0e": 762, "\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8f93\u51fa\u8282\u70b9": 761, "\u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u8fb9\u4e0a\u7684\u9884\u6d4b\u503c": 772, "\u7b2c\u4e8c\u90e8\u5206\u7684\u8f93\u5165\u901a\u5e38\u662f\u524d\u4e00\u90e8\u5206\u7684\u8f93\u51fa": 762, "\u7b49": [756, 768], "\u7b49conv\u6a21\u5757\u4e2d": 769, "\u7b49\u4ef7\u4e8e\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u63a5\u6536\u5230\u6d88\u606f\u6c42\u548c\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 756, "\u7ba1\u7406\u5728\u591a\u4e2a\u8ba1\u7b97\u673a\u4e2d\u88ab\u5212\u5206\u548c\u5b58\u50a8\u7684\u5bc6\u96c6\u5f20\u91cf": 744, "\u7c7b": 739, "\u7c7b\u4e2d\u4e0b\u8f7d\u4e00\u4e2a": 739, "\u7c7b\u4e2d\u770b\u5230\u6a21\u578b\u5b9e\u73b0\u7684\u7ec6\u8282": 776, "\u7c7b\u4f3c": 743, "\u7c7b\u548c": 766, "\u7c7b\u578b\u7684\u8282\u70b9\u4e5f\u4f1a\u88ab\u4fdd\u7559": 753, "\u7c7b\u578b\u7684\u8282\u70b9\u7684": 753, "\u7c7b\u578b\u7684\u8fb9\u7684": 753, "\u7c7b\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u6570\u636e\u5904\u7406\u7ba1\u9053": 737, "\u7c7b\u6709\u62bd\u8c61\u51fd\u6570": 738, "\u7c7b\u8fdb\u884c\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 766, "\u7ea2\u8272\u70b9": 761, "\u7ec6\u8282\u5185\u5bb9\u53ef\u4ee5\u5728\u4e0b\u9762\u7684disttensor\u548cdistembedding\u7ae0\u8282\u91cc\u67e5\u770b": 744, "\u7ed3\u5408\u4e86\u8282\u70b9\u8868\u793a\u6a21\u5757\u548c\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u6a21\u578b\u5982\u4e0b\u6240\u793a": 772, "\u7ed3\u5408\u4f7f\u7528": [762, 766], "\u7ed9\u5b9agnn\u5c42": 761, "\u7ed9\u5b9a\u4e00\u5f20\u56fe": 774, "\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 775, "\u7ed9\u5b9a\u8ba1\u7b97\u8282\u70b9\u548c\u8fb9\u4e0a\u8868\u793a\u7684\u6a21\u578b\u540e": 772, "\u7ed9\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u7f16\u53f7": 752, "\u7ef4\u5ea6\u901a\u5e38\u5305\u62ec\u8f93\u5165\u7684\u7ef4\u5ea6": 768, "\u7eff\u8272\u548c\u7ea2\u8272\u8282\u70b9": 761, "\u7eff\u8272\u70b9": 761, "\u7eff\u8272\u8282\u70b9": 761, "\u7f13\u5b58\u6982\u7387\u5206\u5e03": 764, "\u7f16\u5199dgl": [754, 767], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [754, 755, 769], "\u7f16\u7801\u5e02\u573a\u7684\u56fe\u53ef\u4ee5\u6709\u8868\u793a": 748, "\u8003\u8651\u4ee5\u4e0b\u57fa\u4e8edgl\u7684\u6d88\u606f\u4f20\u9012\u793a\u4f8b": 773, "\u8003\u8651\u4ee5\u4e0b\u8fb9\u754c": 761, "\u8003\u8651\u5230\u67d0\u4e9b\u56fe\u8fb9\u7684\u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u8282\u70b9\u7684\u6570\u91cf": 757, "\u8003\u8651\u5728\u4e00\u4e2a\u6709": 760, "\u800c": 749, "\u800c\u4e0d\u662f": 762, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7279\u5f81\u5f20\u91cf": 765, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5927\u56fe": 774, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u6807\u7b7e": 766, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81": 766, "\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u5927\u56fe\u6570\u636e": 774, "\u800c\u4e0d\u662f\u5e95\u5c42\u6846\u67b6\u91cc\u7684\u5f20\u91cf": 744, "\u800c\u4e0d\u662f\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u5f20\u91cf\u7684\u5b57\u5178": [762, 764], "\u800c\u4e14\u4e24\u79cd\u8282\u70b9\u5177\u6709\u4e0d\u540c\u7684\u7279\u5f81": 753, "\u800c\u4ee5\u4e0b\u7528\u6237\u5b9a\u4e49\u6d88\u606f\u51fd\u6570\u4e0e\u6b64\u5185\u7f6e\u51fd\u6570\u7b49\u4ef7": 756, "\u800c\u540e\u8005\u5219\u6807\u8bc6dgl\u670d\u52a1\u5668\u4e2d\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 744, "\u800c\u5728cpu\u4e0a\u8fdb\u884c\u5219\u8ba1\u7b97\u901f\u5ea6\u5f88\u6162": 763, "\u800c\u65e0\u9700\u8bbe\u8ba1\u590d\u6742\u7684\u56fe\u91c7\u6837\u7b97\u6cd5": 774, "\u800c\u662f\u5728": 756, "\u800c\u7ebf\u6027\u5c42\u8f93\u51fa\u7ef4\u6570\u8f83\u4f4e": 757, "\u800c\u975e4\u6761": 749, "\u805a\u5408\u51fd\u6570": [755, 756], "\u805a\u5408\u51fd\u6570\u6765\u5b9e\u73b0": 769, "\u805a\u5408\u51fd\u6570\u901a\u5e38\u6709\u4e24\u4e2a\u53c2\u6570": 756, "\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u4e0a\u7684\u7ed3\u679c": 770, "\u805a\u5408\u7c7b\u578b": 768, "\u805a\u5408\u7c7b\u578b\u51b3\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u4e0d\u540c\u8fb9\u4e0a\u7684\u4fe1\u606f": 768, "\u80e1\u9a8f": 754, "\u8282\u70b9": [747, 756], "\u8282\u70b92": 761, "\u8282\u70b93": 761, "\u8282\u70b93\u662f\u4e00\u4e2a\u5b64\u7acb\u8282\u70b9": 761, "\u8282\u70b98": 761, "\u8282\u70b9\u5206\u7c7b": [741, 754, 771], "\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b": 741, "\u8282\u70b9\u5206\u7c7b\u7684rgcn\u6a21\u578b": 772, "\u8282\u70b9\u5206\u7c7b\u901a\u5e38\u5728\u5355\u4e2a\u56fe\u4e0a\u8fdb\u884c": 741, "\u8282\u70b9\u548c": [757, 772], "\u8282\u70b9\u548c\u8fb9": [747, 754], "\u8282\u70b9\u548c\u8fb9id\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4": 752, "\u8282\u70b9\u548c\u8fb9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u6784\u5efa\u7684": 752, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [747, 754], "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0": 750, "\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684": 748, "\u8282\u70b9\u56de\u5f52\u4efb\u52a1\u4e5f\u7c7b\u4f3c": 776, "\u8282\u70b9\u5f20\u91cf": 752, "\u8282\u70b9\u6570\u636e\u540d\u79f0\u548c\u5f20\u91cf\u540d\u79f0\u4e0d\u5fc5\u76f8\u540c": 744, "\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 744, "\u8282\u70b9\u6807\u7b7e\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u5668\u4e2d": 766, "\u8282\u70b9\u7279\u5f81": 757, "\u8282\u70b9\u7279\u5f81\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u4e2d": 766, "\u8282\u70b9\u7279\u5f81\u548c\u6807\u7b7e\u5b58\u50a8\u5728\u5176\u56fe\u4e0a": 776, "\u8282\u70b9\u7279\u5f81\u548c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u5b58\u50a8\u5728": 741, "\u8282\u70b9\u7279\u5f81\u7ef4\u6570\u8f83\u9ad8": 757, "\u8282\u70b9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u7684": 753, "\u8282\u70b9\u7684\u6807\u7b7e": 741, "\u8282\u70b9\u7684\u7279\u5f81": 741, "\u8282\u70b9\u7684\u7c7b\u522b": 776, "\u8282\u70b9\u7684\u8fb9": 772, "\u8282\u70b9\u7c7b\u578b": 741, "\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7ed3\u679c": 766, "\u8282\u70b9\u8868\u793a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6": 775, "\u82e5\u7528\u56fe\u5bf9twitter\u7528\u6237\u7684\u5173\u6ce8\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21": 748, "\u82e5\u7528\u56fe\u5bf9\u793e\u4ea4\u7f51\u7edc\u4e2d\u4eba\u4eec\u7684\u53cb\u8c0a\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21": 748, "\u83ab\u4f73\u5e05\u5b50": 754, "\u83b7\u53d6": [753, 761], "\u83b7\u53d6drug\u8282\u70b9\u7684\u6570\u91cf": 753, "\u83b7\u53d6\u5212\u5206\u7684\u63a9\u7801": 741, "\u83b7\u53d6\u5212\u5206\u7684\u6807\u7b7e": 740, "\u83b7\u53d6\u5355\u4e00\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81": 753, "\u83b7\u53d6\u539f\u59cbid": 745, "\u83b7\u53d6\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u91cf": 753, "\u83b7\u53d6\u6807\u7b7e": 741, "\u83b7\u53d6\u7279\u5b9a\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u7684\u7279\u5f81": 753, "\u83b7\u53d6\u79cd": 761, "\u83b7\u53d6\u805a\u5408\u51fd\u6570\u7684\u5185\u90e8\u51fd\u6570": 770, "\u83b7\u53d6\u8282\u70b91\u7684\u7279\u5f81": 750, "\u83b7\u53d6\u8282\u70b9\u7279\u5f81": 741, "\u83b7\u53d6\u8282\u70b9\u7684id": 752, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u8fb9\u7c7b\u578b": 741, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u63a9\u7801": 741, "\u83b7\u53d6\u8fb90\u548c3\u7684\u7279\u5f81": 750, "\u83b7\u53d6\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 762, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9": 752, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9\u548c\u8fb9id": 752, "\u83b7\u5f97": 765, "\u867d\u7136dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u90bb\u5c45\u91c7\u6837\u5668": 761, "\u867d\u7136\u4e0a\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u8fb9\u754c": 761, "\u867d\u7136\u8fd9\u4e24\u4e2a\u6a21\u5757\u90fd\u6bd4\u4e0a\u8ff0\u7684\u793a\u4f8b\u4ee3\u7801\u8981\u590d\u6742": 772, "\u884c\u4f18\u5148": 750, "\u8868\u660e\u4e24\u8282\u70b9\u95f4\u5b58\u5728\u5173\u7cfb": 748, "\u8868\u793a": 756, "\u8868\u793a\u5728\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u5b58\u5728\u4ece": 753, "\u8868\u793a\u5b83\u662f\u4ece\u8282\u70b9": 752, "\u8868\u793a\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u8ba1\u7b97\u7ed3\u679c": 770, "\u88ab\u4e70\u4e0b": 762, "\u88ab\u5173\u6ce8": 762, "\u88ab\u805a\u5408\u7684\u7279\u5f81\u5c06\u4f1a\u4e0e\u8282\u70b9\u7684\u521d\u59cb\u7279\u5f81\u62fc\u63a5\u8d77\u6765": 769, "\u8981\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u91c7\u6837\u5668": 766, "\u8981\u5bf9\u6e90\u8282\u70b9\u7684": 756, "\u8981\u5c06\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u5165": 766, "\u8981\u6267\u884c\u8d1f\u91c7\u6837": 775, "\u8981\u67e5\u627e\u7ed9\u5b9a\u8282\u70b9\u7c7b\u578b\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u6570\u91cf": 761, "\u8981\u805a\u5408\u7684\u7279\u5f81\u5927\u5c0f\u4e3a": 774, "\u8981\u8ba1\u7b97": 761, "\u89c11": 747, "\u8ba1\u7b97": [761, 775], "\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u94fe\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 775, "\u8ba1\u7b97\u5e94\u7528\u4e8e\u7ed9\u5b9a\u7684\u4e00\u5806\u76ee\u6807\u8282\u70b9\u6240\u91c7\u6837\u7684\u5b50\u56fe": 769, "\u8ba1\u7b97\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 764, "\u8ba1\u7b97\u5fc5\u987b\u5728\u8fb9\u4e0a\u4fdd\u5b58\u6d88\u606f": 757, "\u8ba1\u7b97\u635f\u5931\u503c": 776, "\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u63a5\u53d7\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7684\u4e24\u4e2a\u5b57\u5178": 762, "\u8ba1\u7b97\u635f\u5931\u5e76\u53cd\u5411\u4f20\u64ad": 766, "\u8ba1\u7b97\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 762, "\u8ba1\u7b97\u8f93\u51fa": 763, "\u8ba1\u7b97\u8fb9\u5b50\u56fe\u4e2d\u8fb9\u7684\u5f97\u5206": 762, "\u8ba1\u7b97\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u5ea6": 776, "\u8bad\u7ec3": [741, 754, 759, 769, 771, 776], "\u8bad\u7ec3\u4e00\u4e2a\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u6d89\u53ca\u5230\u6bd4\u5bf9\u4e24\u4e2a\u76f8\u8fde\u63a5\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u4e0e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u7684\u5dee\u5f02": 775, "\u8bad\u7ec3\u4e0b\u6e38\u4efb\u52a1\u7684\u5206\u7c7b\u5668": 775, "\u8bad\u7ec3\u540e": 775, "\u8bad\u7ec3\u5668": 743, "\u8bad\u7ec3\u5668\u4f1a\u5bf9\u5c40\u90e8\u5206\u533a\u4e2d\u5e26\u6807\u7b7e\u8282\u70b9\u7684\u5b50\u96c6\u8fdb\u884c\u8ba1\u7b97": 745, "\u8bad\u7ec3\u5668\u8fdb\u7a0b": 743, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [754, 760], "\u8bad\u7ec3\u5faa\u73af\u901a\u8fc7\u6570\u636e\u52a0\u8f7d\u5668\u53bb\u904d\u5386\u6570\u636e": 764, "\u8bad\u7ec3\u6548\u7387\u4f1a\u5f88\u4f4e": 774, "\u8bad\u7ec3\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357\u53ef\u4ee5\u5728": 741, "\u8bad\u7ec3\u6a21\u578b": 766, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u548c\u540c\u6784\u56fe\u65f6\u4e00\u81f4": 775, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u91cc\u4f1a\u91cd\u590d\u6784\u5efa\u8d1f\u91c7\u6837\u56fe\u5e76\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u503c": 775, "\u8bad\u7ec3\u7b97\u6cd5\u6709\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 763, "\u8bad\u7ec3\u811a\u672c": 746, "\u8bad\u7ec3\u8fc7\u7a0b\u5305\u62ec\u904d\u5386dataloader\u548c\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u90e8\u5206": 774, "\u8bad\u7ec3\u90e8\u5206\u548c\u540c\u6784\u56fe\u7684\u8bad\u7ec3\u57fa\u672c\u4e00\u81f4": 772, "\u8bad\u7ec3\u90e8\u5206\u5982\u4e0b\u6240\u793a": 772, "\u8bb0\u4e3a": 748, "\u8bb0\u4f5c": 775, "\u8bb2\u89e3\u4e86\u5982\u4f55\u5bf9\u5c0f\u89c4\u6a21\u7684\u56fe\u6570\u636e\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 771, "\u8bb8\u591a\u573a\u666f\u4e2d\u7684\u56fe\u6570\u636e\u662f\u7531\u591a\u4e2a\u56fe\u7ec4\u6210": 774, "\u8bb8\u591a\u635f\u5931\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807": 775, "\u8bb8\u591a\u77e5\u540dpython\u5e93": 749, "\u8bbe\u7f6e": 753, "\u8bbe\u7f6e\u9009\u9879": 768, "\u8bbf\u95ee\u5176\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 761, "\u8bbf\u95ee\u8be5\u5757\u7684\u8f93\u5165\u8282\u70b9\u7279\u5f81": 761, "\u8be5api\u4f1a\u76f8\u5e94\u5730\u6253\u4e71\u6240\u6709\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 745, "\u8be5api\u652f\u6301\u968f\u673a\u5212\u5206\u548c\u4e00\u4e2a\u57fa\u4e8e": 745, "\u8be5pytorch\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u6279\u7684\u5f62\u5f0f\u8fed\u4ee3\u8bad\u7ec3\u8fb9id\u7684\u6570\u7ec4": 762, "\u8be5\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\u5b9e\u73b0": 765, "\u8be5\u4f8b\u5b50\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u5355\u4e2a\u8282\u70b9": 761, "\u8be5\u4f8b\u5b50\u91cc\u7701\u7565\u4e86\u8bad\u7ec3\u65e9\u505c\u548c\u6a21\u578b\u4fdd\u5b58\u90e8\u5206\u7684\u4ee3\u7801": 772, "\u8be5\u505a\u6cd5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c": 757, "\u8be5\u51fd\u6570\u5047\u5b9a\u539f\u59cb\u6570\u636e\u5df2\u7ecf\u4f4d\u4e8e": 741, "\u8be5\u51fd\u6570\u7684\u7ec6\u8282\u5982\u4e0b\u6240\u793a": 769, "\u8be5\u540d\u79f0\u4ecd\u5b58\u5728\u4e8e\u7fa4\u96c6\u4e2d": 744, "\u8be5\u56fe\u5177\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 753, "\u8be5\u5b50\u56fe\u5305\u62ec\u521d\u59cb\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u548c\u6307\u5b9a\u8282\u70b9\u7684\u5165\u8fb9": 761, "\u8be5\u5f20\u91cf\u7684\u7b2c\u4e00\u7ef4\u5fc5\u987b\u4e0e\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u6570\u91cf\u4e00\u81f4": 750, "\u8be5\u6587\u4ef6\u5305\u542b\u672c\u5730\u8ba1\u7b97\u673a\u4e2d\u5206\u533a\u6570\u636e\u7684\u4fe1\u606f": 746, "\u8be5\u65b9\u6cd5\u80fd\u8282\u7701\u5728\u5927\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u9500\u548c\u8ba1\u7b97\u8d44\u6e90": 760, "\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4e3a\u5b83\u4eec\u751f\u6210\u8fb9\u754c": 761, "\u8be5\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u957f\u5ea6\u6216\u8fde\u63a5\u7684\u5f3a\u5ea6": 748, "\u8be5\u6a21\u578b\u4e0e\u5f02\u6784\u56fe\u4e0a\u8fb9\u5206\u7c7b\u7684\u6a21\u578b\u6709\u4e9b\u4e0d\u540c": 775, "\u8be5\u6a21\u578b\u7684\u8f93\u5165\u5305\u62ec\u4e0a\u8ff0\u4e09\u9879\u4ee5\u53ca\u8f93\u5165\u7684\u7279\u5f81": 764, "\u8be5\u7c7b\u4e3a\u5bfc\u5165": 737, "\u8be5\u811a\u672c\u5305\u542b\u56db\u4e2a\u53c2\u6570": 746, "\u8be5\u811a\u672c\u6709\u4ee5\u4e0b\u5047\u8bbe": 746, "\u8be5\u8fb9\u7c7b\u578b\u662f\u901a\u8fc7\u5408\u5e76\u6240\u6709\u4ece": 772, "\u8be5\u91c7\u6837\u65b9\u6cd5\u6839\u636e\u4e0e\u8282\u70b9\u7684\u5ea6\u7684\u5e42\u6210\u6b63\u6bd4\u7684\u6982\u7387\u5206\u5e03\u5bf9\u8d1f\u6837\u672c\u76ee\u6807\u8282\u70b9\u8fdb\u884c\u91c7\u6837": 764, "\u8be6\u7ec6\u7684\u5b9e\u73b0\u8bf7\u53c2\u8003": 741, "\u8be6\u7ec6\u89e3\u91ca": 745, "\u8bf4\u660e\u805a\u5408\u662f\u9010\u7c7b\u8fdb\u884c\u7684": 758, "\u8bf7\u4f7f\u7528": 739, "\u8bf7\u53c2\u8003": [741, 762, 776], "\u8bf7\u53c2\u8003dgl\u7684\u5185\u7f6e\u6570\u636e\u96c6": 741, "\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357\u7684": 771, "\u8bf7\u53c2\u89c1": [741, 745, 756], "\u8bf7\u53c2\u89c1\u542f\u52a8\u811a\u672c\u90e8\u5206": 744, "\u8bf7\u53c2\u9605": 738, "\u8bf7\u53c2\u9605\u4e0b\u6587\u91cc\u5206\u5e03\u5f0f\u56fe\u91c7\u6837\u90e8\u5206": 744, "\u8bf7\u53c2\u9605\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u7ae0\u8282": 744, "\u8bf7\u6ce8\u610f": [738, 741, 742, 743, 761, 766, 769, 776], "\u8bf7\u786e\u4fdd\u4f7f\u7528\u4e0e\u539f\u59cb\u6587\u4ef6\u540d\u76f8\u540c\u7684\u540e\u7f00": 739, "\u8bf7\u786e\u4fdd\u5b83\u88ab\u5b58\u653e\u5728\u76ee\u5f55": 739, "\u8bf8\u5982\u91c7\u6837": 738, "\u8bfb\u51fa": 774, "\u8bfb\u51fa\u51fd\u6570\u4f1a\u5206\u522b\u4f5c\u7528\u5728\u56fe\u6279\u6b21\u4e2d\u7684\u6bcf\u5f20\u56fe\u4e0a": 774, "\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528networkx\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u89e3\u6790": 749, "\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003": [766, 776], "\u8bfb\u8005\u53ef\u4ee5\u5728api\u6587\u6863\u4e2d\u627e\u5230": 770, "\u8bfb\u8005\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53c2\u8003": 772, "\u8bfb\u8005\u53ef\u53c2\u8003": [748, 752], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": 763, "\u8c03\u7528\u540e": 756, "\u8c03\u7528\u6b64api": 744, "\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u635f\u5931": 775, "\u8d1f\u6837\u672c": 764, "\u8d1f\u8d23\u4f7f\u7528": 761, "\u8d1f\u8d23\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684": 746, "\u8d1f\u91c7\u6837": 775, "\u8d2d\u4e70": 762, "\u8d4b\u503c": 772, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [754, 760], "\u8df3\u8fc7\u4e00\u4e9b\u5904\u7406\u7684\u4ee3\u7801": 741, "\u8df3\u8fc7\u6570\u636e\u5904\u7406": 741, "\u8f6c\u6362\u6210int32": 752, "\u8f6c\u6362\u6210int64": 752, "\u8f7d\u5165ogb\u7684graph": 740, "\u8f7d\u5165ogb\u7684link": 740, "\u8f7d\u5165ogb\u7684nod": 740, "\u8f7d\u5165\u6570\u636e\u96c6": 740, "\u8f83\u5927\u65f6": 760, "\u8f93\u5165": 770, "\u8f93\u5165\u4ecd\u7136\u662fdgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868\u548c\u8f93\u5165\u7279\u5f81": 762, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81": 776, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81\u5b57\u5178": 776, "\u8f93\u5165\u7279\u5f81\u5c06\u88ab\u7ec4\u7ec7\u4e3a\u5143\u7ec4": 770, "\u8f93\u5165\u7684user\u548cgame\u8282\u70b9": 761, "\u8f93\u5165\u7ef4\u5ea6\u53ef\u88ab\u5206\u4e3a\u6e90\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6": 768, "\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u5c06\u540c\u65f6\u5305\u542b\u8fd9\u4e9b\u5b64\u7acb\u8282\u70b9": 761, "\u8f93\u5165\u8fd8\u53ef\u4ee5\u5305\u62ec\u8fb9\u81ea\u8eab\u7684\u7279\u5f81": 772, "\u8f93\u51fa\u7684user\u548cgame\u8282\u70b9": 761, "\u8f93\u51fa\u7684\u7ef4\u5ea6\u548c\u9690\u5c42\u7684\u7ef4\u5ea6": 768, "\u8f93\u51fa\u76ee\u5f55\u91cc\u59cb\u7ec8\u5305\u542b\u4e00\u4e2a\u540d\u4e3axxx": 745, "\u8f93\u51fa\u8282\u70b9": 761, "\u8f93\u51fa\u8282\u70b9\u4e5f\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 761, "\u8f93\u51fa\u8282\u70b9\u53ef\u4ee5\u6bd4\u4ee5\u4e0a\u8282\u70b9\u5305\u542b\u66f4\u591a\u8282\u70b9": 761, "\u8f93\u51fa\u8282\u70b9\u7684id\u4f4d\u4e8e\u5176\u5b83\u8282\u70b9\u4e4b\u524d": 761, "\u8fb9": [741, 745, 747, 748, 750, 752, 755, 756], "\u8fb9\u4e0a\u8ba1\u7b97": 755, "\u8fb9\u5206\u7c7b": [754, 762, 771, 775, 776], "\u8fb9\u5206\u7c7b\u4e2d\u76f8\u540c\u7684\u90bb\u5c45\u91c7\u6837\u5668": 764, "\u8fb9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u7684\u8bad\u7ec3": 771, "\u8fb9\u5206\u7c7b\u6a21\u578b\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210": 762, "\u8fb9\u53ca\u5176\u7279\u5f81": 749, "\u8fb9\u5b50\u56fe\u4ee5\u53ca\u8f93\u5165\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad": 762, "\u8fb9\u6743\u91cd\u53ef\u4ee5\u662f\u8fde\u63a5\u5f3a\u5ea6\u6216\u8005\u4fe1\u5fc3\u6307\u6570": 773, "\u8fb9\u6743\u91cd\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a": 773, "\u8fb9\u7279\u5f81": [743, 744], "\u8fb9\u7279\u5f81\u548c\u56fe\u91c7\u6837": 744, "\u8fb9\u754c\u5b50\u56fe": 761, "\u8fb9\u7684id\u4f4d\u4e8e\u90bb\u8fd1\u533a\u95f4\u5185": 741, "\u8fb9\u7684\u7279\u5f81\u6570\u636e": 771, "\u8fb9\u7684\u90bb\u5c45\u7684\u5c40\u90e8\u6027": 741, "\u8fb9\u7c7b\u578b": [741, 753], "\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u79f0\u4f5c": 772, "\u8fb9\u7c7b\u578b\u9884\u6d4b\u7684\u7b2c\u4e00\u6b65\u4ecd\u7136\u662f\u8ba1\u7b97\u8282\u70b9\u8868\u793a": 772, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": [743, 754], "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u56fe\u4f5c\u4e3a\u8fb9\u754c": 761, "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u8fb9\u754c": 761, "\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178": 761, "\u8fd4\u56de\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\u7684\u5143\u7ec4": 741, "\u8fd4\u56de\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u7279\u5f81\u5b57\u5178": 758, "\u8fd4\u56de\u7684\u662f": 744, "\u8fd8\u5141\u8bb8\u901a\u8fc7\u6307\u5b9a": 745, "\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u4e0b\u6e38\u4efb\u52a1\u83b7\u53d6\u9690\u85cf\u8282\u70b9\u8868\u793a": 776, "\u8fd8\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\u8de8\u7c7b\u578b\u6574\u5408\u51fd\u6570": 758, "\u8fd8\u652f\u6301\u751f\u6210\u7528\u4e8e\u94fe\u63a5\u9884\u6d4b\u7684\u8d1f\u6837\u672c": 764, "\u8fd8\u662f": 772, "\u8fd8\u80fd\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528": 752, "\u8fd8\u9700\u8981\u5728\u8bfb\u51fa\u51fd\u6570\u4e2d\u805a\u5408\u4e0d\u540c\u7c7b\u522b\u7684\u8282\u70b9": 774, "\u8fd8\u9700\u8981\u5c06\u5176\u4e0e": 766, "\u8fd92\u4e2a\u5b57\u5178\u4e0e": 770, "\u8fd9\u4e00\u793a\u4f8b\u6765\u4e86\u89e3\u5982\u4f55\u9884\u6d4b\u5f02\u6784\u56fe\u4e2d\u7684\u8fb9\u7c7b\u578b": 772, "\u8fd9\u4e00\u7ae0\u4e2d\u63d0\u5230\u7684\u56fe\u5377\u79ef\u7f51\u7edc\u83b7\u5f97": 772, "\u8fd9\u4e0e\u5728": 776, "\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u5e03\u5c14\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165": 744, "\u8fd9\u4e2a": 771, "\u8fd9\u4e2aapi\u4f1a\u4e0edgl\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u5e76\u521b\u5efa\u91c7\u6837\u5668\u8fdb\u7a0b": 744, "\u8fd9\u4e2aapi\u5c06\u8fd0\u884c\u670d\u52a1\u5668\u4ee3\u7801": 744, "\u8fd9\u4e2a\u4f8b\u5b50\u662f\u8bc4\u5206\u9884\u6d4b\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 772, "\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u628a\u539f\u56fe\u8f6c\u6362\u6210\u4e00\u4e2a\u5305\u542b\u53cd\u5411\u8fb9\u7684\u56fe": 752, "\u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u53d8\u91cf\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u548c\u5176\u4ed6\u8f93\u5165\u7279\u5f81": 773, "\u8fd9\u4e2a\u5b57\u5178\u7684\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u91cc": 758, "\u8fd9\u4e2a\u5b57\u5178\u7684\u952e\u4e3a\u5173\u7cfb\u540d": 770, "\u8fd9\u4e2a\u63a5\u53e3\u5c06\u66f4\u65b0\u6240\u6709\u7684\u8fb9": 756, "\u8fd9\u4e2a\u6570\u636e\u52a0\u8f7d\u5668\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668": 761, "\u8fd9\u4e2a\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe": 741, "\u8fd9\u4e2a\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 741, "\u8fd9\u4e2a\u6574\u5408\u65b9\u5f0f\u53ef\u4ee5\u662f": 758, "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f02\u6784\u56fe": 772, "\u8fd9\u4e2a\u6a21\u578b\u4e0d\u4ec5\u53ef\u4ee5\u505a\u8282\u70b9\u5206\u7c7b": 776, "\u8fd9\u4e2a\u6a21\u578b\u5177\u6709\u53ef\u8c03\u8282\u7684\u5c42\u6570": 776, "\u8fd9\u4e2a\u8fc7\u7a0b": 741, "\u8fd9\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u4f1a\u6784\u5efa\u8ba1\u7b97\u7684\u4f9d\u8d56\u5173\u7cfb\u56fe": 760, "\u8fd9\u4e3a\u4ece\u6574\u4f53\u4e0a\u8fdb\u884c\u7cfb\u7edf\u4f18\u5316\u63d0\u4f9b\u4e86\u7a7a\u95f4": 756, "\u8fd9\u4e48\u505a\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4": 738, "\u8fd9\u4e9budf\u5fc5\u987b\u5728": 744, "\u8fd9\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u72ec\u7acb\u7684id\u7a7a\u95f4\u548c\u7279\u5f81": 753, "\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32": 756, "\u8fd9\u4e9b\u56fe\u8868\u793a\u6bcf\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56": 766, "\u8fd9\u4e9b\u5c5e\u6027\u65e8\u5728\u523b\u753b\u6bcf\u4e00\u79cd\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 758, "\u8fd9\u4e9b\u5e03\u5c14\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf": 744, "\u8fd9\u4e9b\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u548c\u6d88\u606f\u4f20\u9012\u4e2d\u7684\u503c\u65e0\u6548": 769, "\u8fd9\u4e9b\u670d\u52a1\u5668\u4e00\u8d77\u5de5\u4f5c\u4ee5\u5c06\u56fe\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 743, "\u8fd9\u4e9b\u6784\u5efa\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u91cd\u89c6\u6027\u80fd\u7684\u573a\u666f": 749, "\u8fd9\u4e9b\u6a21\u5757\u662f\u7eafpytorch": 768, "\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u662f\u6807\u91cf": 750, "\u8fd9\u4e9b\u7c7b\u4f1a\u751f\u6210\u9700\u8ba1\u7b97\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u8ba1\u7b97\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u56fe": 766, "\u8fd9\u4e9b\u8282\u70b9\u4e0e\u7528\u6237\u5e0c\u671b\u8ba1\u7b97\u6700\u7ec8\u8868\u793a\u7684\u8282\u70b9\u76f8\u540c": 766, "\u8fd9\u4e9b\u8282\u70b9\u662f\u8ba1\u7b97\u8282\u70b9\u6700\u7ec8\u8868\u793a\u6240\u9700\u7684\u6240\u6709\u5fc5\u9700\u7684\u8282\u70b9": 766, "\u8fd9\u4ec5\u662f\u4e2a\u4f8b\u5b50": 774, "\u8fd9\u4f1a\u5c06\u56fe\u7ed3\u6784\u548c\u7279\u5f81\u6570\u636e\u90fd\u62f7\u8d1d\u5230\u6307\u5b9a\u7684\u8bbe\u5907": 751, "\u8fd9\u4f1a\u975e\u5e38\u6d88\u8017\u5185\u5b58": 757, "\u8fd9\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4": 745, "\u8fd9\u5305\u62ec\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 743, "\u8fd9\u53d6\u51b3\u4e8e\u56fe\u4e2d\u8fb9\u7684\u65b9\u5411\u6027": 748, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u574f": 744, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u6027\u80fd\u4e0d\u4f73": 769, "\u8fd9\u53ef\u80fd\u5e26\u6765\u975e\u6700\u4f18\u7684\u914d\u7f6e": 745, "\u8fd9\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528": 753, "\u8fd9\u5bf9\u4e8e\u540c\u6b65sgd\u975e\u5e38\u91cd\u8981": 744, "\u8fd9\u5c31\u5e26\u6765\u4e86\u5177\u6709\u4e0d\u540c\u7279\u5f81\u7684\u591a\u6761\u8fb9": 748, "\u8fd9\u5e73\u8861\u4e86\u4e0d\u540c\u7c7b\u578b\u8282\u70b9\u7684\u8fde\u8fb9\u6570\u91cf": 745, "\u8fd9\u5f88\u5bb9\u6613\u8d85\u8fc7\u4e00\u5757gpu\u7684\u663e\u5b58\u9650\u5236": 760, "\u8fd9\u662f\u4e00\u4e2a": 756, "\u8fd9\u662f\u56e0\u4e3adgl\u8981\u5b9a\u4f4d\u5e76\u5220\u9664\u5305\u542b\u5728\u5c0f\u6279\u6b21\u4e2d\u7684\u53cd\u5411\u8fb9": 762, "\u8fd9\u662f\u56e0\u4e3a\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u8fb9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee": 745, "\u8fd9\u662f\u56e0\u4e3a\u5b83\u5bf9\u4e00\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u6d88\u606f\u7684\u805a\u5408\u548c\u7ed3\u5408": 763, "\u8fd9\u662f\u56e0\u4e3a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u53ea\u7528\u4e00\u4e2a\u56fe": 741, "\u8fd9\u662f\u5c0f\u6279\u91cf\u8bad\u7ec3\u4e2d\u7684\u5e38\u89c1\u7528\u6cd5": 759, "\u8fd9\u662f\u7531\u4e8e": 749, "\u8fd9\u6837\u4e0d\u4ec5\u80fd\u63d0\u5347\u901f\u5ea6": 752, "\u8fd9\u6837\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5e2e\u7528\u6237\u8282\u7701\u5927\u91cf\u7684\u6570\u636e\u5904\u7406\u65f6\u95f4": 742, "\u8fd9\u6837\u7684\u4efb\u52a1\u79f0\u4f5c": 775, "\u8fd9\u6837\u7684\u65b9\u6cd5\u79f0\u4f5c": 775, "\u8fd9\u70b9\u5728\u4e4b\u540e\u7684": 761, "\u8fd9\u79cd\u60c5\u51b5\u4e0b": 772, "\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97dgl\u7684\u4ee3\u7801\u53ef\u4ee5\u65e0\u7f1d\u5d4c\u5165\u5230\u540e\u7aef\u6846\u67b6\u7684\u4ee3\u7801\u4e2d": 767, "\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f": 753, "\u8fd9\u7b49\u4ef7\u4e8e\u628a\u6bcf\u6761\u6d88\u606f\u548c\u5bf9\u5e94\u7684\u8fb9\u6743\u91cd\u76f8\u4e58": 773, "\u8fd9\u7c7b\u64cd\u4f5c\u53eb\u505a": 774, "\u8fd9\u8981\u6c42\u6240\u6709\u5f20\u91cf\u53c2\u6570\u90fd\u5df2\u7ecf\u653e\u5728gpu\u4e0a": 751, "\u8fd9\u90e8\u5206\u4ee3\u7801\u4f1a\u56e0\u6a21\u5757\u800c\u5f02": 769, "\u8fd9\u91cc": 741, "\u8fd9\u91cc\u4ee56": 763, "\u8fd9\u91cc\u5148\u89e3\u91ca\u4e00\u4e0b\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 761, "\u8fd9\u91cc\u5220\u9664\u4e86\u81ea\u73af": 766, "\u8fd9\u91cc\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u5faa\u73af\u4ec5\u5305\u542b\u4f7f\u7528\u5b9a\u5236\u7684\u6279\u5904\u7406\u8fed\u4ee3\u5668\u904d\u5386\u6570\u636e\u96c6\u7684\u5185\u5bb9": 766, "\u8fd9\u91cc\u7684\u79bb\u7ebf\u63a8\u65ad\u88ab\u5b9e\u73b0\u4e3agnn\u6a21\u5757\u7684\u4e00\u4e2a\u65b9\u6cd5": 763, "\u8fd9\u91cc\u7701\u7565\u4e86": 741, "\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8f93\u5165\u7684\u56fe\u6570\u636e\u4e0d\u80fd\u5305\u542b\u8fb9\u7684\u7c7b\u578b\u4fe1\u606f": 772, "\u8fdb\u800c\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u6765\u6784\u5efadglgraph\u5bf9\u8c61": 749, "\u8fdb\u884c\u4f18\u5316": 757, "\u8fdb\u884c\u521b\u5efa\u65f6": 749, "\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 776, "\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97": 776, "\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316": 768, "\u8fdb\u884c\u8bad\u7ec3": 772, "\u8fde\u63a5\u4e00\u5bf9\u8282\u70b9": 748, "\u9009\u62e9\u4e00\u4e2a\u5c0f\u6279\u6b21\u7684\u56fe\u8282\u70b9": 760, "\u9010\u5143\u7d20\u6c42\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c": 774, "\u9010\u5c42\u8ba1\u7b97\u8868\u793a": 763, "\u901a\u5e38": [744, 765], "\u901a\u5e38\u4f1a\u805a\u5408\u5e76\u6c47\u603b\u5355\u4e2a\u56fe\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f": 774, "\u901a\u5e38\u5728\u6d88\u606f\u4f20\u9012\u7684\u6700\u540e\u4e00\u6b65\u5c06\u5176\u4e0e\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408": 756, "\u901a\u5e38\u65e0\u6cd5\u8fdb\u884c": 760, "\u901a\u5e38\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u90bb\u5c45\u8fdb\u884c\u771f\u6b63\u7684\u805a\u5408": 763, "\u901a\u5e38\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u91c7\u6837\u8fc7\u7a0b\u53d8\u6162\u5f88\u591a": 762, "\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u591a\u5c42\u7684\u56fe\u795e\u7ecf\u7f51\u7edc": 776, "\u901a\u8fc7": [750, 756], "\u901a\u8fc7idx\u5f97\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e00\u4e2a\u6837\u672c": 738, "\u901a\u8fc7idx\u83b7\u53d6\u5bf9\u5e94\u7684\u56fe\u548c\u6807\u7b7e": 741, "\u901a\u8fc7\u5173\u7cfb\u540d": 770, "\u901a\u8fc7\u5e73\u5747\u8bfb\u51fa\u503c\u6765\u8ba1\u7b97\u5355\u56fe\u7684\u8868\u5f81": 774, "\u901a\u8fc7\u5f20\u91cf\u5206\u914d\u521b\u5efa\u7279\u5f81\u65f6": 750, "\u901a\u8fc7\u7528\u56fe\u523b\u753b\u540c\u4e00\u793e\u533a\u91cc\u4eba\u4e0e\u4eba\u95f4\u7684\u53cb\u8c0a": 774, "\u901a\u8fc7\u7d22\u5f15": 769, "\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u5bf9\u8fb9\u5c5e\u6027\u7684\u9884\u6d4b": 772, "\u901a\u8fc7\u8c03\u7528": 770, "\u904d\u5386\u6240\u6709\u8fb9\u7684\u7c7b\u578b": 761, "\u90a3\u4e48\u5728\u5757\u4e0a\u8ba1\u7b97\u7684\u4ee3\u7801\u4e5f\u662f\u7c7b\u4f3c\u7684": 765, "\u90a3\u4e48\u5b83\u4eec\u5df2\u7ecf\u652f\u6301\u4e86\u8fb9\u6743\u91cd": 773, "\u90a3\u4e48\u7528\u6237\u53ea\u9700\u8981\u518d\u7f16\u5199\u4e00\u4e2a\u7528": 772, "\u90a3\u4e48\u7528\u6237\u5c31\u9700\u8981\u8c03\u7528\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 757, "\u90a3\u4e48\u8be5\u51fd\u6570\u5e94\u4ee5\u521d\u59cb\u56fe\u4ee5\u53ca\u7531\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u6784\u6210\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 764, "\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b\u901a\u5e38\u5982\u4e0b": 760, "\u90bb\u5c45\u91c7\u6837\u5728\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u66f4\u597d\u5730\u53d1\u6325\u4f5c\u7528": 763, "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u5757\u7684\u5217\u8868": 764, "\u90bb\u63a5\u77e9\u9635\u91cc\u7684\u5143\u7d20\u4e0d\u662f\u96f6\u5c31\u662f\u4e00": 773, "\u90fd\u662f\u540e\u7eed\u56fe\u795e\u7ecf\u7f51\u7edc\u5c42\u8ba1\u7b97\u4e2d\u67d0\u6761\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 761, "\u90fd\u6709": 775, "\u90fd\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 765, "\u914d\u7f6e\u6587\u4ef6": 746, "\u91c7\u6837": 764, "\u91c7\u6837\u4ee3\u7801\u7c7b\u4f3c\u4e8e\u5355\u8fdb\u7a0b\u91c7\u6837": 744, "\u91c7\u6837\u5668": 743, "\u91c7\u6837\u5668\u65e0\u6cd5\u5728\u5177\u6709\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7684pytorch": 744, "\u91c7\u6837\u5668\u8fdb\u7a0b": 743, "\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf\u5fc5\u987b\u5339\u914d": 746, "\u91cc\u5b9e\u73b0\u4e86\u5f88\u591a\u5e38\u7528\u7684\u56fe\u6570\u636e\u96c6": 737, "\u91cc\u6240\u4ecb\u7ecd\u7684\u6027\u80fd\u4f18\u5316": 769, "\u91cc\u662f\u5426\u6709\u5904\u7406\u8fc7\u7684\u6570\u636e\u6587\u4ef6": 742, "\u91cc\u7684": 775, "\u91cc\u8bfb\u53d6\u5904\u7406\u8fc7\u7684\u6570\u636e": 742, "\u91cc\u9762\u4fdd\u5b58\u4e86\u8bad\u7ec3\u811a\u672c": 746, "\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b": 760, "\u91cd\u6392\u56fe\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u5c40\u90e8\u6027": 741, "\u91cd\u65b0\u521d\u59cb\u5316\u53ef\u5b66\u4e60\u7684\u53c2\u6570": 768, "\u9488\u5bf9mxnet\u548cpytorch\u540e\u7aef\u4e5f\u6709\u5bf9\u5e94\u7684\u6a21\u5757": 776, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [754, 760], "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [754, 760], "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [754, 760], "\u94fe\u63a5\u9884\u6d4b": [741, 754, 764, 771, 776], "\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u4e5f\u5e94\u4f7f\u7528\u7c7b\u4f3c\u7684\u5e03\u5c14\u6570\u7ec4": 744, "\u94fe\u63a5\u9884\u6d4b\u548c\u6574\u56fe\u5206\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 771, "\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5904\u7406\u4e0e\u8282\u70b9\u5206\u7c7b\u76f8\u4f3c": 741, "\u9500\u6bc1distgraph\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0distgraph\u7684\u884c\u4e3a\u6ca1\u6709\u88ab\u5b9a\u4e49": 744, "\u952e\u662f\u4e00\u79cd\u5173\u7cfb": 758, "\u957f\u5ea6\u4e3a3\u7684\u8282\u70b9\u7279\u5f81": 750, "\u95f4\u9694\u635f\u5931": 775, "\u9648\u77e5\u96e8": 754, "\u9664\u4e86": 762, "\u9664\u4e86\u56fe\u7ed3\u6784": 749, "\u9664\u4e86\u5e73\u8861\u8282\u70b9\u7684\u7c7b\u578b\u4e4b\u5916": 745, "\u9664\u4e86\u5f20\u91cf\u7684\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b\u4e4b\u5916": 744, "\u9664\u4e86\u6570\u636e\u7ef4\u5ea6": 768, "\u9664\u4e86\u7528\u6237\u5728\u521b\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u65f6\u65e0\u6cd5\u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 744, "\u9664\u4e86\u8f93\u5165\u56fe\u548c\u8f93\u5165\u5f20\u91cf": 770, "\u9664\u4ee5\u5165\u5ea6": 769, "\u9664\u6b64\u4e4b\u5916": 757, "\u968f\u540e": 764, "\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b": 762, "\u9690\u5c42\u5927\u5c0f\u4e3a": 760, "\u96c6\u7fa4\u4e2d\u7684\u6bcf\u53f0\u673a\u5668\u5404\u81ea\u8d1f\u8d23\u4e00\u5f20\u5b50\u56fe": 743, "\u9700\u8981\u4e0b\u56fe\u4e2d\u7684\u6765\u81ea\u8282\u70b94": 761, "\u9700\u8981\u4ee5\u5c0f\u6279\u6b21\u7684\u65b9\u5f0f\u8ba1\u7b97\u8fd9\u4e2agnn\u5c42\u6240\u6709\u8282\u70b9\u7684\u8f93\u51fa\u8868\u793a": 763, "\u9700\u8981\u5411\u6570\u636e\u8f7d\u5165\u5668\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u5bf9\u5e94\u8fb9id\u7684\u5b57\u5178": 764, "\u9700\u8981\u5bf9\u7528\u4e8e\u6574\u56fe\u7684gnn\u6a21\u5757\u8fdb\u884c\u5982\u4e0b\u8c03\u6574\u4ee5\u5c06\u5176\u7528\u4e8e\u5757\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5": 765, "\u9700\u8981\u5c06\u5176\u4e0e": 762, "\u9700\u8981\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a": 741, "\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u8282\u70b9\u548c\u8fb9\u7c7b\u578b": 753, "\u9700\u8981\u6839\u636e\u56fe\u7c7b\u578b\u88ab\u6307\u5b9a": 769, "\u9700\u8981\u6ce8\u610f": 774, "\u9700\u8981\u6ce8\u610f\u7684\u662f\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u8282\u70b9\u548c\u8fb9\u5c5e\u6027\u6ca1\u6709\u6279\u6b21\u5927\u5c0f\u5bf9\u5e94\u7684\u7ef4\u5ea6": 774, "\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c": 766, "\u975e\u7ebf\u6027\u548c\u57fa\u5206\u89e3": 766, "\u975e\u96f6\u7684\u5143\u7d20\u53ef\u4ee5\u53d6\u4efb\u610f\u6807\u91cf\u503c": 773, "\u975e\u96f6\u9879": 749, "\u9762\u5411\u90a3\u4e9b\u60f3\u8981\u5f00\u53d1\u65b0\u7684\u91c7\u6837\u7b97\u6cd5": 760, "\u987e\u5ba2": 748, "\u9884\u6d4b\u56fe\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u8fb9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u4efb\u52a1\u7c7b\u578b": 772, "\u9884\u6d4b\u5b83\u7684\u7c7b\u578b\u662f": 772, "\u9884\u6d4b\u7ed3\u679c\u523b\u753b\u4e86\u6574\u4e2a\u8f93\u5165\u56fe\u7684\u5c5e\u6027": 774, "\u9884\u6d4b\u8fb9\u5f97\u5206\u7684\u6a21\u578b\u548c\u8fb9\u5206\u7c7b": 775, "\u9996\u5148": 774, "\u9996\u5148\u4f7f\u7528pip\u5b89\u88c5ogb\u5305": 740, "\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0a\u56fe\u6240\u793a\u7684dglgraph": 761, "\u9996\u5148\u6211\u4eec\u904d\u5386\u56fe\u4e2d\u6240\u6709\u7684\u5173\u7cfb": 770, "\u9a8c\u8bc1": 744, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u6570\u636e\u96c6": 772, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u7684\u5206\u5272\u4e5f\u4ee5\u5e03\u5c14\u63a9\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u56fe\u4e0a": 776, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 744, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4ece\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u7c7b\u522b\u4e2d\u5206\u914d\u7684\u4e00\u4e2a\u7c7b\u522b": 776, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u6807\u6ce8\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57": 776, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u5212\u5206": 772, "\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u8282\u70b9\u770b\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 745, "\u9ad8\u5c42\u91c7\u6837api\u4e3a\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u91c7\u6837\u7b97\u6cd5": 744, "\u9ec4\u5d1f": 754, "\u9ed8\u8ba4": 738, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [744, 745], "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u8fdb\u884c\u7279\u5f81\u5408\u5e76": 753, "\uac00": [781, 783, 784, 786, 796, 799, 800, 810, 813, 814, 817], "\uac00\uae4c\uc6b4": 781, "\uac00\ub2a5": 819, "\uac00\ub2a5\ub3c4": 818, "\uac00\ub2a5\ud558\ub2e4": [781, 786, 791, 797, 799, 801, 805, 807, 816, 817, 819], "\uac00\ub2a5\ud55c": [787, 797, 799, 819], "\uac00\uc774\ub4dc\ub294": 781, "\uac00\uc774\ub4dc\uc640": 805, "\uac00\uc7a5": [797, 808, 809, 813, 816, 819], "\uac00\uc815\ud558\uace0": [783, 818], "\uac00\uc815\ud558\ub294": 784, "\uac00\uc815\ud558\uba74": 816, "\uac00\uc815\ud558\uc790": 799, "\uac00\uc815\ud55c\ub2e4": [786, 787, 815, 816], "\uac00\uc838\ub2e4": 805, "\uac00\uc911\uce58": [786, 789, 791, 796], "\uac00\uc911\uce58\uace0": 798, "\uac00\uc911\uce58\ub294": [789, 798], "\uac00\uc911\uce58\ub4e4\uc744": 812, "\uac00\uc911\uce58\ub85c": 786, "\uac00\uc911\uce58\ub97c": [786, 789, 791, 798], "\uac00\uc911\uce58\uc640": 789, "\uac00\uc911\uce58\uc758": 786, "\uac00\uc911\uce58\uc774\ub2e4": 786, "\uac00\uc9c0": [783, 784, 786, 802, 804, 809, 818, 819], "\uac00\uc9c0\uace0": [809, 817, 819], "\uac01": [777, 782, 783, 784, 785, 786, 787, 789, 791, 793, 794, 796, 800, 802, 803, 805, 806, 807, 809, 810, 813, 814, 816, 817, 818, 819], "\uac01\uac01": [797, 799, 808], "\uac04\uacb0\ud558\uac8c": 797, "\uac04\ub2e8\ud558\uac8c": [782, 809, 816], "\uac04\ub2e8\ud558\uace0": 777, "\uac04\ub2e8\ud558\ub2e4": [786, 809, 816], "\uac04\ub2e8\ud55c": 788, "\uac04\ub2e8\ud788": 816, "\uac04\ub7b5\ud558\uac8c": 781, "\uac04\ub7b5\ud55c": 816, "\uac04\uc12d\uc774": 817, "\uac04\uc5d0": [785, 794], "\uac04\uc758": [789, 817, 818], "\uac12": 779, "\uac12\ub3c4": 786, "\uac12\ub4e4\uc744": 819, "\uac12\ub4e4\uc774\ub2e4": 786, "\uac12\ub4e4\uc778\ub370": 786, "\uac12\uc5d0": [804, 807, 810], "\uac12\uc73c\ub85c": [786, 810], "\uac12\uc740": [786, 800, 814, 816], "\uac12\uc744": [785, 786, 798, 813, 816], "\uac12\uc758": 785, "\uac12\uc774": 786, "\uac12\uc774\ub2e4": 786, "\uac12\uc778": 787, "\uac15\ub3c4\ub97c": 789, "\uac15\ub825\ud55c\uac00": 803, "\uac15\uc870\ud558\uae30": 781, "\uac15\ud558\uac8c": 777, "\uac16\uac70\ub098": 789, "\uac16\uac8c": 800, "\uac16\uace0": [780, 784, 785, 786, 791, 793, 794, 797, 805, 808, 816], "\uac16\uae30": [786, 800], "\uac16\ub294": [784, 785, 786, 788, 789, 790, 791, 793, 794, 800, 802, 803, 804, 808, 810, 816, 817], "\uac16\ub294\ub2e4": [783, 785, 786, 789, 791, 794, 797, 798, 805, 806, 815, 818], "\uac16\ub294\ub2e4\uace0": [784, 786], "\uac16\ub294\ub2e4\uba74": [786, 794, 804], "\uac16\ub294\ub370": [784, 786, 797, 810], "\uac16\ub3c4\ub85d": [784, 785, 786, 803], "\uac16\uc544\uc57c": 791, "\uac16\uc73c\uba70": 816, "\uac16\uc744": [788, 789, 791, 800, 814], "\uac16\uc74c": 808, "\uac16\uc9c0": [789, 813], "\uac19\uace0": 784, "\uac19\ub2e4": [778, 783, 784, 786, 787, 794, 797, 799, 800, 802, 803, 804, 805, 807, 809, 813, 816, 817, 818], "\uac19\ub3c4\ub85d": 786, "\uac19\uc544\uc57c": [787, 791, 793], "\uac19\uc544\uc57c\ub9cc": 784, "\uac19\uc740": [778, 783, 784, 785, 786, 787, 789, 791, 793, 794, 797, 798, 799, 803, 804, 805, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819], "\uac19\uc744": 784, "\uac19\uc774": [781, 789, 796, 803, 804, 807, 808, 812, 814, 815, 816, 817, 818, 819], "\uac1c": 793, "\uac1c\uac00": 786, "\uac1c\uae4c\uc9c0": 793, "\uac1c\ub150\uc5d0": [804, 809], "\uac1c\ub150\uc740": [803, 804, 809], "\uac1c\ub150\uc744": 788, "\uac1c\ub97c": 784, "\uac1c\ub9cc": 784, "\uac1c\ubc1c": 784, "\uac1c\ubc1c\uc744": 793, "\uac1c\ubc1c\uc774": 805, "\uac1c\ubc1c\ud558\uace0": 784, "\uac1c\uc218": [778, 784, 787], "\uac1c\uc218\uac00": [786, 803], "\uac1c\uc218\uacfc": [784, 787], "\uac1c\uc218\ub294": [784, 787, 808], "\uac1c\uc218\ub97c": [784, 786], "\uac1c\uc218\uc5d0": [786, 805], "\uac1c\uc218\uc640": [784, 786, 791], "\uac1c\uc218\uc758": [784, 786], "\uac1c\uc22b\ub97c": 781, "\uac1c\uc758": [780, 784, 785, 786, 787, 807, 818], "\uac1c\uc778": 802, "\uac1d\uccb4": [782, 783, 790, 813], "\uac1d\uccb4\uac00": 784, "\uac1d\uccb4\ub294": 797, "\uac1d\uccb4\ub4e4\uc744": 784, "\uac1d\uccb4\ub4e4\uc758": 781, "\uac1d\uccb4\ub85c": [780, 786], "\uac1d\uccb4\ub97c": [784, 797, 804], "\uac1d\uccb4\ub9cc": 780, "\uac1d\uccb4\uc5d0": 784, "\uac1d\uccb4\uc640": 782, "\uac1d\uccb4\uc774\ub2e4": 797, "\uac2f\uc218\ub97c": 810, "\uac70\uafb8\ub85c": 802, "\uac70\ub4ed": 786, "\uac70\ub4ed\uc81c\uacf1\uc5d0": 807, "\uac70\uc758": [781, 804, 807, 809, 816], "\uac78\ub9ac\ub294": 806, "\uac78\uccd0\uc11c": [786, 794, 813], "\uac80\uc0c9\ud560": 785, "\uac80\uc99d": [784, 786, 806, 816, 819], "\uac80\uc99d\uacfc": 802, "\uac80\uc99d\uc744": 779, "\uac83": [804, 808, 809, 810], "\uac83\uacfc": [784, 786, 789, 804, 807, 811, 816], "\uac83\uacfc\ub294": 809, "\uac83\ub3c4": [779, 793, 797, 816], "\uac83\ub3e0": 805, "\uac83\ub4e4\uc5d0": 790, "\uac83\ub4e4\uc774\ub2e4": 786, "\uac83\ub9cc\uc774": 808, "\uac83\uc5d0": [786, 808], "\uac83\uc73c\ub85c": [786, 805, 809, 819], "\uac83\uc740": [781, 784, 791, 798, 803, 804, 806, 808, 809, 816, 817, 818, 819], "\uac83\uc744": [777, 778, 781, 782, 784, 785, 786, 794, 797, 799, 803, 807, 808, 817, 819], "\uac83\uc774": [780, 781, 782, 786, 799, 803, 804, 805, 806, 807, 809, 817, 818], "\uac83\uc774\uace0": [781, 784, 804], "\uac83\uc774\ub2e4": [778, 779, 781, 784, 786, 789, 791, 793, 794, 799, 802, 803, 804, 807, 808, 809, 813, 814, 816, 817, 818, 819], "\uac83\uc774\uc9c0\ub9cc": 810, "\uac83\uc778\ub2e4": 786, "\uac83\uc778\uc9c0": [803, 808], "\uac83\uc778\uc9c0\uc5d0": 808, "\uac83\uc77c": [807, 817], "\uac83\uc785\ub2c8\ub2e4": 795, "\uac83\uc9c0\ub9cc": 786, "\uac83\ucc98\ub7fc": [798, 804, 807], "\uacb0\uacfc": [792, 799, 803, 806, 814], "\uacb0\uacfc\uac00": 817, "\uacb0\uacfc\ub294": [786, 813, 814], "\uacb0\uacfc\ub4e4\uc740": 814, "\uacb0\uacfc\ub4e4\uc774": 786, "\uacb0\uacfc\ub77c\ub294": 809, "\uacb0\uacfc\ub85c": 804, "\uacb0\uacfc\ub85c\uc11c": 819, "\uacb0\uacfc\ub97c": [786, 788, 797, 799, 800, 803, 809, 814, 817], "\uacb0\uacfc\uc5d0": [784, 797], "\uacb0\uacfc\uc640": 797, "\uacb0\uacfc\uc758": 817, "\uacb0\uc815\ud55c\ub2e4": 812, "\uacb0\uc815\ud560": [785, 794], "\uacb0\ud569\ud558\uace0": 797, "\uacbd\ub85c\ub4e4\uc740": 787, "\uacbd\ub85c\ub85c": 787, "\uacbd\ub85c\ub97c": 787, "\uacbd\uc6b0": [779, 782, 784, 786, 787, 791, 794, 797, 801, 802, 803, 808, 810, 812, 813, 814, 817, 818], "\uacbd\uc6b0\uac00": [794, 816, 818], "\uacbd\uc6b0\ub294": 794, "\uacbd\uc6b0\ub3c4": [782, 803, 808, 815, 817], "\uacbd\uc6b0\ub4e4": 808, "\uacbd\uc6b0\ub77c\uba74": 797, "\uacbd\uc6b0\ub97c": 799, "\uacbd\uc6b0\uc5d0": [782, 784, 806, 813], "\uacbd\uc6b0\uc5d0\ub294": [781, 786, 793, 799, 802, 812], "\uacbd\uc6b0\uc5d0\ub9cc": 784, "\uacbd\uc6b0\uc640": [781, 794, 803, 817], "\uacbd\uc6b0\uc640\ub294": 817, "\uacc4\ub2e8\ub41c": 818, "\uacc4\uc0b0": [807, 810, 813, 816], "\uacc4\uc0b0\ub418\uc5b4\uc57c": [802, 809], "\uacc4\uc0b0\ub41c": 786, "\uacc4\uc0b0\uc740": 806, "\uacc4\uc0b0\uc744": [783, 785, 786], "\uacc4\uc0b0\uc774": 784, "\uacc4\uc0b0\uc801\uc778": 786, "\uacc4\uc0b0\ud558\uace0\uc790": 816, "\uacc4\uc0b0\ud558\uae30": [783, 803, 804, 807, 816], "\uacc4\uc0b0\ud558\uae30\ub97c": 809, "\uacc4\uc0b0\ud558\ub294": [803, 804, 806, 807, 816, 818, 819], "\uacc4\uc0b0\ud558\ub294\ub370": 809, "\uacc4\uc0b0\ud558\uba74": 816, "\uacc4\uc0b0\ud55c": 809, "\uacc4\uc0b0\ud55c\ub2e4": [804, 818], "\uacc4\uc0b0\ud55c\ub2e4\uace0": 816, "\uacc4\uc0b0\ud560": [803, 806, 809, 818, 819], "\uacc4\uc0b0\ud574\uc57c\ud558\uae30": 806, "\uacc4\uc0b0\ud574\uc57c\ud55c\ub2e4": 806, "\uacc4\uc18d": 810, "\uacc4\ud68d\uc774\ub77c\uba74": 815, "\uace0\uac1d": 789, "\uace0\uae09": [797, 802], "\uace0\ub824\ud558\uac8c": 786, "\uace0\ub824\ud558\uc790": 803, "\uace0\ub824\ud55c": 786, "\uace0\ub824\ud574\uc11c": 786, "\uace0\ub9bd": 803, "\uace0\ub9bd\ub41c": 803, "\uace0\uc720\uc758": 811, "\uace0\uc720\ud558\uac8c": [784, 794], "\uace0\uc720\ud558\ub2e4": 785, "\uace0\uc720\ud55c": [785, 786, 791, 793], "\uace0\uce58\uae30": 809, "\uacf1\ud558\uace0": [797, 810], "\uacf1\ud558\uae30": 798, "\uacf1\ud574\uc11c": 797, "\uacf3\uc5d0": [786, 790], "\uacf5\uac04\uacfc": 794, "\uacf5\ub3d9": 789, "\uacf5\ubc31": 786, "\uacf5\ubc31\uc73c\ub85c": 786, "\uacf5\uc2dd": 780, "\uacf5\uc2dd\uc5d0": 803, "\uacf5\uc2dd\uc73c\ub85c": [797, 814], "\uacf5\uc2dd\uc740": [803, 813], "\uacf5\ud1b5\uc801\uc778": 790, "\uacfc": [783, 784, 786, 787, 788, 789, 810, 812, 815], "\uacfc\uc815\uc5d0\uc11c": [786, 813], "\uacfc\uc81c": 818, "\uacfc\uc81c\ub4e4\uc758": 815, "\uacfc\uc81c\ub97c": 786, "\uad00\uacc4": [788, 789, 794, 800], "\uad00\uacc4\uac00": [789, 794, 814], "\uad00\uacc4\ub294": [789, 794, 813, 814], "\uad00\uacc4\ub2f9": [794, 813], "\uad00\uacc4\ub4e4\uc744": [794, 804], "\uad00\uacc4\ub4e4\uc758": 814, "\uad00\uacc4\ub85c": 814, "\uad00\uacc4\ub85c\ubd80\ud130": 814, "\uad00\uacc4\ub97c": [789, 794, 814, 817], "\uad00\uacc4\uc5d0": 814, "\uad00\uacc4\uc758": 800, "\uad00\uacc4\uc774\uace0": [800, 804], "\uad00\uacc4\uc778": 804, "\uad00\ub828": [787, 814], "\uad00\ub828\ub41c": [781, 787, 794, 797, 812, 818], "\uad00\ub828\uc5c6\uc774": 785, "\uad00\ub828\uc774": 805, "\uad00\ub9ac\ud558\ub294\ub370": 794, "\uad00\ub9ac\ud55c\ub2e4": 784, "\uad49\uc7a5\ud788": [782, 817], "\uad50\uccb4\ud558\ub294": 809, "\uad50\uccb4\ud55c\ub2e4": 808, "\uad6c\ub3d9\ud558\uace0": 784, "\uad6c\ub9e4\uc790": 789, "\uad6c\ubcc4\uc774": 794, "\uad6c\ubcc4\ud558\uace0": 784, "\uad6c\ubcc4\ud558\ub294": 786, "\uad6c\ubcc4\ud558\ub294\ub370": 784, "\uad6c\ubcc4\ud574\ubcfc": 817, "\uad6c\ubd84\ub418\ub294": 786, "\uad6c\ubd84\ub41c\ub2e4": 786, "\uad6c\ubd84\ub41c\ub2e4\uace0": 816, "\uad6c\ubd84\uc9c1\uae30": 804, "\uad6c\ubd84\ud55c\ub2e4\uba74": 785, "\uad6c\uc131": 786, "\uad6c\uc131\ub418\uc5b4": [811, 815], "\uad6c\uc131\ub418\uc5b4\uc57c": 786, "\uad6c\uc131\ub41c": [786, 789, 817, 818], "\uad6c\uc131\ub41c\ub2e4": [786, 789, 804, 809, 814, 819], "\uad6c\uc131\ud558\ub294": 786, "\uad6c\uc131\ud560": 786, "\uad6c\uc785": 789, "\uad6c\uc785\ud588\uc74c": 789, "\uad6c\uc870": 788, "\uad6c\uc870\ub294": 784, "\uad6c\uc870\ub85c": 788, "\uad6c\uc870\ub97c": [793, 817], "\uad6c\uc870\uc640": [783, 784, 786, 790, 792], "\uad6c\uc870\uc774\ub2e4": 789, "\uad6c\uccb4\uc801\uc778": 781, "\uad6c\ud558\uace0": 816, "\uad6c\ud558\uae30": [797, 819], "\uad6c\ud558\ub294\ub370": [804, 807], "\uad6c\ud574\uc9c4": 817, "\uad6c\ud604": [781, 809, 816, 819], "\uad6c\ud604\uacfc": [804, 807], "\uad6c\ud604\ub355\uc5d0": 811, "\uad6c\ud604\ub3c4": [804, 807], "\uad6c\ud604\ub418\uc5b4": [797, 813, 814, 819], "\uad6c\ud604\ub418\uc5b4\uc57c": 778, "\uad6c\ud604\ub41c\ub2e4": [813, 816], "\uad6c\ud604\ub41c\ub2e4\ub294": 806, "\uad6c\ud604\uc0c1\uc758": [804, 807], "\uad6c\ud604\uc5d0": 781, "\uad6c\ud604\uc5d0\uc11c": 809, "\uad6c\ud604\uc740": [781, 784, 799, 803, 808, 809, 817], "\uad6c\ud604\uc774": [781, 797, 804, 807, 808], "\uad6c\ud604\ud558\uace0": [777, 783, 784, 797, 802, 810, 817], "\uad6c\ud604\ud558\uae30": [782, 802, 809], "\uad6c\ud604\ud558\uae30\ub9cc": 803, "\uad6c\ud604\ud558\ub294": [777, 778, 806, 808, 809], "\uad6c\ud604\ud558\ub294\ub370": 778, "\uad6c\ud604\ud558\ub294\uc9c0": 796, "\uad6c\ud604\ud558\uba74": 799, "\uad6c\ud604\ud55c": [803, 808], "\uad6c\ud604\ud55c\ub2e4": [778, 779], "\uad6c\ud604\ud560": [779, 781, 782, 797, 819], "\uad6c\ud604\ud574\uc11c": 779, "\uad6c\ud604\ud574\uc57c": 781, "\uad8c\uc7a5\ud558\ub294\ub370": [778, 797], "\uad8c\uc7a5\ud55c\ub2e4": [777, 781, 782, 784, 799], "\uaddc\uce59\uc740": 797, "\uaddc\uce59\uc744": 817, "\uade0\ub4f1": 818, "\uade0\ub4f1\ud558\uac8c": 807, "\uade0\uc77c": 805, "\uade0\ud5dd\uc744": 786, "\uade0\ud615\uc744": 786, "\uade0\ud615\uc7a1\ud78c": 786, "\uadf8": [778, 784, 785, 786, 788, 790, 794, 796, 797, 799, 801, 802, 803, 806, 807, 809, 812, 813, 816, 817, 818, 819], "\uadf8\uac83\ub4e4\uc5d0": 794, "\uadf8\uac83\ub4e4\uc740": 784, "\uadf8\uac83\ub4e4\uc744": [784, 803], "\uadf8\uac83\ub4e4\uc758": [783, 786, 789, 790, 802, 804, 816], "\uadf8\uac83\uc740": 818, "\uadf8\uac83\uc758": [786, 809], "\uadf8\ub300\ub85c": [803, 807], "\uadf8\ub4e4\uc758": 789, "\uadf8\ub798\ub4e4": 817, "\uadf8\ub798\uc11c": [786, 790], "\uadf8\ub798\ud504": [778, 780, 783, 786, 787, 792, 795, 796, 800, 802, 803, 804, 806, 807, 809, 812, 814], "\uadf8\ub798\ud504\uac00": [784, 785, 786, 787, 789, 794, 803, 804, 808, 813, 816, 817, 819], "\uadf8\ub798\ud504\uac04\uc758": [804, 807], "\uadf8\ub798\ud504\ub098": 808, "\uadf8\ub798\ud504\ub294": [785, 786, 788, 789, 792, 794, 803, 804, 805, 808, 813, 817], "\uadf8\ub798\ud504\ub3c4": 803, "\uadf8\ub798\ud504\ub4e4": 781, "\uadf8\ub798\ud504\ub4e4\uacfc": 807, "\uadf8\ub798\ud504\ub4e4\ub85c": [783, 786], "\uadf8\ub798\ud504\ub4e4\uc5d0": [802, 807, 814, 815, 816, 817, 818], "\uadf8\ub798\ud504\ub4e4\uc5d0\uc11c": 818, "\uadf8\ub798\ud504\ub4e4\uc744": [785, 793, 817], "\uadf8\ub798\ud504\ub4e4\uc758": [781, 782, 786, 794, 804, 807, 809], "\uadf8\ub798\ud504\ub85c": [786, 787, 793, 803, 813, 817, 818], "\uadf8\ub798\ud504\ub85c\ubd80\ud130": [785, 790], "\uadf8\ub798\ud504\ub97c": [780, 781, 783, 784, 785, 786, 789, 790, 793, 803, 804, 805, 808, 809, 815, 816, 817, 818, 819], "\uadf8\ub798\ud504\ub9cc": 781, "\uadf8\ub798\ud504\ubcc4": 791, "\uadf8\ub798\ud504\uc5d0": [781, 784, 788, 792, 793, 795, 796, 801, 803, 806, 808, 809, 813, 815, 818, 819], "\uadf8\ub798\ud504\uc5d0\ub3c4": 803, "\uadf8\ub798\ud504\uc5d0\uc11c": [781, 786, 789, 800, 803, 814], "\uadf8\ub798\ud504\uc5d0\uc11c\ub294": 786, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": [796, 818], "\uadf8\ub798\ud504\uc640": [794, 803, 804, 805, 807, 808, 814, 815, 816, 817], "\uadf8\ub798\ud504\uc758": [781, 784, 785, 786, 788, 789, 791, 793, 794, 799, 803, 805, 808, 813, 814, 817], "\uadf8\ub798\ud504\uc774\uace0": 789, "\uadf8\ub798\ud504\uc774\uae30": 790, "\uadf8\ub798\ud504\uc774\ub2e4": [789, 800, 817, 818], "\uadf8\ub798\ud504\uc774\uc5b4\uc57c": 808, "\uadf8\ub798\ud504\uc774\uc790": 817, "\uadf8\ub798\ud504\uc778": [791, 802, 804], "\uadf8\ub798\ud504\uc77c": 794, "\uadf8\ub798\ud504\ud2d1": 785, "\uadf8\ub7a8\uc758": 794, "\uadf8\ub7a8\ud504\ub97c": 818, "\uadf8\ub7ec\uba74": 816, "\uadf8\ub7f0": 818, "\uadf8\ub807\uc9c0": [779, 804, 815], "\uadf8\ub8f9": 783, "\uadf8\ub8f9\uc73c\ub85c": 794, "\uadf8\ub9ac\uace0": [778, 781, 783, 784, 786, 787, 788, 789, 790, 794, 796, 797, 803, 804, 810, 811, 812, 815, 817, 819], "\uadf8\ub9bc\uc5d0\uc11c\uc640": 803, "\uadf8\ub9bc\uc740": [783, 785, 803], "\uadf8\ub9bc\uc758": 803, "\uadf8\uc5d0": [786, 800], "\uadf8\uc640": [789, 804], "\uae30\ub2a5": 790, "\uae30\ub2a5\uc740": 805, "\uae30\ub2a5\uc744": [786, 790, 797, 803], "\uae30\ubc18\uc73c\ub85c": [785, 787, 813], "\uae30\ubc18\uc758": [786, 818], "\uae30\ubc18\uc774\ub2e4": 803, "\uae30\ubc95\uc744": 816, "\uae30\ubc95\uc774\ub2e4": 798, "\uae30\ubcf8": [778, 784, 785, 786, 787, 797, 803], "\uae30\ubcf8\uc801\uc73c\ub85c": 808, "\uae30\ubcf8\uc801\uc778": [778, 780, 786, 788, 809], "\uae30\uc220\uc801\uc73c\ub85c\ub294": 803, "\uae30\uc5ec\ub97c": 811, "\uae30\uc900\uc758": 795, "\uae30\ud638\ub9cc\uc73c\ub85c": 786, "\uae38\uc774": 789, "\uae38\uc774\ub294": 784, "\uae40\ubb34\ud604": 795, "\uae54\ub054\ud55c": [777, 794], "\uae68\uc9d0": 784, "\uaf2d": [778, 786], "\ub05d\ub098\uba74": 786, "\ub098\ub204\uace0": [783, 784, 786], "\ub098\ub204\ub294": [784, 786, 799], "\ub098\ub208\ub2e4": 786, "\ub098\ub220\uc57c\ub9cc": 784, "\ub098\ub220\uc57c\ud55c\ub2e4": 784, "\ub098\ub220\uc838": 781, "\ub098\ub220\uc838\uc11c": [784, 785], "\ub098\ub220\uc9c4": 784, "\ub098\ub25c\ub2e4": [800, 812], "\ub098\ub25c\ub2e4\ub294": 808, "\ub098\ub260": 813, "\ub098\uba38\uc9c0": [783, 786, 817], "\ub098\uba38\uc9c0\ub294": 803, "\ub098\uba38\uc9c0\uc5d0\uc11c\ub294": [778, 783], "\ub098\uc544\uac00": [786, 792], "\ub098\uc5f4\ub418\uc5b4": 786, "\ub098\uc5f4\ud558\uace0": 786, "\ub098\uc5f4\ud558\uae30\ub294": 790, "\ub098\ud0c0\ub0b8\ub2e4": [789, 793], "\ub098\ud0c0\ub0b8\ub2e4\ub294": 817, "\ub0a8\uc544\uc788\ub2e4": 797, "\ub0ae\ub2e4\uace0": 799, "\ub0ae\ucd94\ub294": 799, "\ub0b4\ubcf4\ub0b4\ub294": 816, "\ub0b4\ubd80\uc801\uc73c\ub85c": [790, 797], "\ub0b4\ubd80\uc801\uc73c\ub85c\ub294": 784, "\ub0b4\uc5d0\uc11c": 786, "\ub0b4\uc6a9\uc73c\ub85c": 803, "\ub0b4\uc6a9\uc740": [781, 797], "\ub0b4\uc6a9\uc774": 790, "\ub0b8": 804, "\ub108\ubb34": [799, 805, 816], "\ub110\ub9ac": 819, "\ub118\uc744": 802, "\ub123\uae30": 805, "\ub124": [785, 786, 787], "\ub124\uac00\uc9c0": 785, "\ub124\uac00\ud2f0\ube0c": 818, "\ub124\uc784\uc2a4\ud328\uc774\uc2a4\uc5d0": 797, "\ub124\ud2b8\uc6cc\ud06c": [783, 786, 787, 795, 802, 808, 818], "\ub124\ud2b8\uc6cc\ud06c\uac00": [803, 819], "\ub124\ud2b8\uc6cc\ud06c\ub294": [789, 819], "\ub124\ud2b8\uc6cc\ud06c\ub4e4\uc5d0\uc11c": 800, "\ub124\ud2b8\uc6cc\ud06c\ub97c": [784, 809, 815, 816], "\ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c": 789, "\ub124\ud2b8\uc6cc\ud06c\uc758": 812, "\ub178\ub4dc": [783, 785, 788, 789, 790, 791, 794, 796, 797, 802, 803, 804, 807, 808, 813, 814, 815, 817, 818], "\ub178\ub4dc\uac00": [784, 786, 802, 809], "\ub178\ub4dc\uac04\uc758": 794, "\ub178\ub4dc\ub098": 800, "\ub178\ub4dc\ub294": [805, 819], "\ub178\ub4dc\ub4e4": [784, 786, 788, 802, 803, 804, 818], "\ub178\ub4dc\ub4e4\uac04\uc758": [788, 789], "\ub178\ub4dc\ub4e4\uacfc": [789, 791, 794, 803, 804, 805, 809], "\ub178\ub4dc\ub4e4\ub85c": 785, "\ub178\ub4dc\ub4e4\ub9cc\uc774": 803, "\ub178\ub4dc\ub4e4\uc5d0": [786, 803, 806, 809, 817, 818], "\ub178\ub4dc\ub4e4\uc5d0\uac8c": 797, "\ub178\ub4dc\ub4e4\uc5d0\uc11c": 803, "\ub178\ub4dc\ub4e4\uc640": 781, "\ub178\ub4dc\ub4e4\uc740": [785, 786, 789, 803, 809], "\ub178\ub4dc\ub4e4\uc744": [783, 786, 803, 807, 809, 813], "\ub178\ub4dc\ub4e4\uc758": [784, 786, 789, 799, 801, 802, 803, 806, 809, 813, 816, 817, 818, 819], "\ub178\ub4dc\ub4e4\uc774": [785, 789, 803, 804, 808], "\ub178\ub4dc\ub4e4\uc774\ub098": [786, 817], "\ub178\ub4dc\ub4e4\uc774\ub2e4": [788, 803, 813], "\ub178\ub4dc\ub85c": [799, 808, 809], "\ub178\ub4dc\ub97c": [785, 786, 789, 793, 797, 803, 807, 813, 819], "\ub178\ub4dc\ubcc4": 796, "\ub178\ub4dc\uc5d0": [786, 791, 793, 796, 807, 809, 812, 814, 816, 819], "\ub178\ub4dc\uc5d0\ub3c4": 803, "\ub178\ub4dc\uc5d0\uc11c": [781, 799], "\ub178\ub4dc\uc640": [783, 784, 785, 786, 788, 793, 794, 796, 797, 800, 803, 808, 813, 817], "\ub178\ub4dc\uc758": [781, 784, 786, 793, 794, 796, 797, 798, 801, 803, 804, 806, 808, 809, 812, 813, 816, 819], "\ub178\ub4e4\ub4e4": 803, "\ub178\ub4e4\ub4e4\uc744": 803, "\ub178\ub4e4\ub4e4\uc758": 806, "\ub178\ub4e4\uc5d0": 803, "\ub178\ub4e4\uc744": 803, "\ub178\ub4e4\uc758": [784, 786], "\ub178\uc774\uc988": 818, "\ub178\ud2b8": [786, 800, 803, 805, 816, 817], "\ub179\uc0c9": 803, "\ub179\uc0c9\uacfc": 803, "\ub179\uc0c9\uc73c\ub85c": 803, "\ub192\ub3c4\ub85d": 818, "\ub192\uc740": 799, "\ub193\uc774\uac8c": 813, "\ub208\uc5d0": 804, "\ub274\ub7f4": [795, 800, 802, 803, 808, 809, 812, 818], "\ub290\ub9b0": 806, "\ub294": [778, 780, 784, 786, 787, 789, 790, 793, 794, 796, 797, 800, 803, 804, 805, 807, 809, 810, 813, 814, 815, 817, 818, 819], "\ub298": 803, "\ub2a5\ub825\uc774": 797, "\ub2e4\ub8e8\uace0": 808, "\ub2e4\ub8e8\uae30": [779, 817], "\ub2e4\ub8e8\ub294": 805, "\ub2e4\ub8e8\ub294\ub370": 788, "\ub2e4\ub8e8\uc9c0": 790, "\ub2e4\ub8ec": 806, "\ub2e4\ub8ec\ub2e4": [783, 784, 802], "\ub2e4\ub8f0": [790, 793, 813, 814], "\ub2e4\ub974\uac8c": [781, 784, 809, 813], "\ub2e4\ub974\uae30": 803, "\ub2e4\ub974\uc9c0": [816, 817, 818], "\ub2e4\ub978": [784, 786, 787, 788, 789, 790, 792, 793, 794, 797, 799, 800, 804, 805, 809, 814, 815, 816, 817, 819], "\ub2e4\ub978\ub370": [806, 818], "\ub2e4\ub984\uc744": 780, "\ub2e4\uba74": 785, "\ub2e4\uc2dc": [784, 786, 794, 808], "\ub2e4\uc591\ud55c": [784, 790, 814, 818], "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0": 779, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 777, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294": 779, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c": 779, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c\ub2e4": 779, "\ub2e4\uc6b4\ub85c\ub4dc\ud574\uc11c": 780, "\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc": [786, 816, 818, 819], "\ub2e4\uc74c": [777, 779, 780, 781, 782, 784, 785, 786, 793, 794, 797, 803, 804, 805, 807, 808, 809, 810, 812, 816, 817, 818, 819], "\ub2e4\uc74c\uacfc": [778, 781, 783, 786, 787, 794, 796, 797, 798, 799, 800, 802, 803, 804, 807, 808, 809, 813, 814, 815, 816, 817, 818, 819], "\ub2e4\uc74c\uc5d0": 813, "\ub2e4\uc74c\uc5d0\ub294": 803, "\ub2e4\uc74c\uc73c\ub85c": 802, "\ub2e4\uc74c\uc73c\ub85c\ub294": [807, 812], "\ub2e4\uc74c\uc740": [786, 787, 807, 810, 818, 819], "\ub2e4\uc74c\uc744": [787, 814], "\ub2e4\uc911": [785, 789], "\ub2e4\uc911\uc758": 784, "\ub2e4\ucc28\uc6d0": 791, "\ub2e8": [782, 784, 786], "\ub2e8\uacc4\uac00": 784, "\ub2e8\uacc4\ub4e4\uc744": 812, "\ub2e8\uacc4\ub85c": 786, "\ub2e8\uacc4\ub97c": [786, 809], "\ub2e8\uacc4\ub9c8\ub2e4": 802, "\ub2e8\uacc4\uc5d0\uc11c": [796, 799, 813], "\ub2e8\ubc29\ud5a5": 808, "\ub2e8\uc21c\ud558\uac8c": [804, 808, 809, 817, 819], "\ub2e8\uc21c\ud55c": 809, "\ub2e8\uc21c\ud788": 803, "\ub2e8\uc704\ub85c": 817, "\ub2e8\uc77c": [781, 783, 784, 786, 797, 808, 814, 815, 816], "\ub2e8\uc885": 813, "\ub2e8\uc9c0": [794, 803, 808, 819], "\ub2e8\ud56d": 797, "\ub2e8\ud56d\uc758": 797, "\ub2ec\ub77c\uc9c4\ub2e4": [804, 812], "\ub2ec\uc131\ud558\uae30": 818, "\ub2ec\uc131\ud558\ub294": 799, "\ub2f4\uace0": [784, 786, 804, 809, 817], "\ub2f4\ub2f9\ud558\ub294": 800, "\ub2f4\ub2f9\ud55c\ub2e4": [784, 786, 803], "\ub300\ub7b5": 786, "\ub300\ubd80\ubd84": [784, 793, 810], "\ub300\ubd80\ubd84\uc758": [782, 817], "\ub300\uc0c1": 808, "\ub300\uc0c1\uc73c\ub85c": 808, "\ub300\uc2e0": [784, 794, 807], "\ub300\uc2e0\uc5d0": [804, 807], "\ub300\uce6d\uc801\uc778": 789, "\ub300\ud45c\ud558\ub3c4\ub85d": 809, "\ub300\ud55c": [777, 778, 779, 781, 782, 784, 785, 787, 788, 790, 791, 792, 793, 794, 795, 796, 797, 799, 800, 801, 803, 804, 806, 807, 808, 809, 810, 813, 814, 815, 817, 818, 819], "\ub300\ud574": [783, 809, 814], "\ub300\ud574\uc11c": [784, 786, 803, 806, 807, 809, 810, 812, 814, 815, 816, 817, 818, 819], "\ub300\ud578": 802, "\ub354": [781, 782, 784, 786, 792, 797, 799, 803, 806, 810, 819], "\ub354\ubd88\uc5b4": [786, 790, 814, 817], "\ub354\ubd88\uc5b4\uc11c": 785, "\ub354\ud55c\ub2e4": 799, "\ub354\ud560": 781, "\ub354\ud574\uc11c": [786, 797, 817], "\ub355\uc5d0": 817, "\ub370\uc774": 784, "\ub370\uc774\ud130": [778, 786, 790, 793, 794, 795, 797, 803, 810, 812, 815, 819], "\ub370\uc774\ud130\uac00": [781, 782, 787, 806, 817], "\ub370\uc774\ud130\ub294": [781, 786], "\ub370\uc774\ud130\ub3c4": [786, 790], "\ub370\uc774\ud130\ub85c": 785, "\ub370\uc774\ud130\ub85c\ub354\ub97c": 817, "\ub370\uc774\ud130\ub85c\uc11c": 784, "\ub370\uc774\ud130\ub97c": [777, 779, 782, 783, 784, 785, 786, 790, 792], "\ub370\uc774\ud130\ub9cc": 792, "\ub370\uc774\ud130\uc14b": [778, 780, 782, 810, 815, 819], "\ub370\uc774\ud130\uc14b\uacfc": 781, "\ub370\uc774\ud130\uc14b\ub4e4": 777, "\ub370\uc774\ud130\uc14b\ub4e4\uc740": 781, "\ub370\uc774\ud130\uc14b\ub4e4\uc744": 780, "\ub370\uc774\ud130\uc14b\uc5d0": [778, 780, 781, 782, 806], "\ub370\uc774\ud130\uc14b\uc740": [780, 781, 819], "\ub370\uc774\ud130\uc14b\uc744": [777, 778, 780, 781, 809, 815, 817], "\ub370\uc774\ud130\uc14b\uc758": [780, 781, 817], "\ub370\uc774\ud130\uc14b\uc774": 779, "\ub370\uc774\ud130\uc5d0": [784, 785, 786, 787, 804], "\ub370\uc774\ud130\uc640": [783, 784, 785, 786, 787, 790], "\ub370\uc774\ud130\uc758": [781, 784], "\ub370\uc774\ud14c\uc14b\uc744": 781, "\ub370\uc774\ud2b8\ub97c": 778, "\ub374\uc2a4": 784, "\ub3c4\uad6c\ub4e4\uc744": 783, "\ub3c4\uc6c0\uc774": 799, "\ub3c4\ucc29\uc9c0": 794, "\ub3c4\ucd9c\ud560": 816, "\ub3c5\ub9bd\uc801\uc778": 794, "\ub3d5\uae30": 786, "\ub3d5\ub294": 787, "\ub3d9\uae30\ud654": 784, "\ub3d9\uc2dc": 784, "\ub3d9\uc2dc\uc5d0": [783, 784], "\ub3d9\uc548": [786, 797], "\ub3d9\uc548\uc5d0": 784, "\ub3d9\uc77c\ud558\uac8c": 794, "\ub3d9\uc77c\ud558\uae30\uc5d0": 804, "\ub3d9\uc77c\ud558\ub2e4": [781, 786, 799, 803, 810, 811, 813, 818, 819], "\ub3d9\uc77c\ud558\ub3c4\ub85d": 804, "\ub3d9\uc77c\ud55c": [783, 784, 797], "\ub3d9\uc791\uc740": 813, "\ub3d9\uc791\ud558\uac8c": 808, "\ub3d9\uc791\ud558\ub294": [805, 816], "\ub3d9\uc791\ud558\ub294\uc9c0": [777, 808, 819], "\ub3d9\uc791\ud558\ub294\uc9c0\ub97c": 778, "\ub3d9\uc791\ud55c\ub2e4": [784, 805, 808], "\ub3d9\uc791\ud560": 803, "\ub3d9\uc791\ud568": 805, "\ub3d9\uc885": 789, "\ub418\uac8c": 783, "\ub418\uace0": 813, "\ub418\uae30": 813, "\ub418\uae30\ub3c4": 800, "\ub418\ub294": 803, "\ub418\ub3c4\ub85d": 809, "\ub418\ubc84\ub9bc": 810, "\ub41c\ub2e4": [781, 789, 794, 799, 800, 803, 804, 813, 816, 817, 818, 819], "\ub41c\ub2e4\ub294": 809, "\ub420": [786, 787, 803], "\ub450": [784, 786, 787, 789, 791, 792, 794, 799, 800, 804, 807, 810, 816, 817, 818], "\ub450\uac00\uc9c0": [784, 785, 794, 805, 814], "\ub450\uac1c": 808, "\ub450\uac1c\ub85c": 799, "\ub450\uac1c\uc758": [789, 790, 797, 809], "\ub450\ubc88\uc9f8": [786, 803, 804], "\ub450\ubc88\uc9f8\ub294": [804, 813], "\ub450\ubc88\uc9f8\ub85c": 817, "\ub458\uc740": 816, "\ub4a4\uc5d0": 787, "\ub4e4": [803, 817], "\ub4e4\uaca0\ub2e4": 781, "\ub4e4\ub9cc": 803, "\ub4e4\uba74": [784, 797, 798, 807, 816, 817, 818], "\ub4e4\uc5b4": [782, 784, 785, 786, 788, 789, 791, 797, 803, 805, 808, 809, 816, 817, 818, 819], "\ub4e4\uc5b4\uac08": [805, 815], "\ub4e4\uc5b4\ubcf4\uc790": [799, 803, 808, 809], "\ub4e4\uc744": [797, 804], "\ub4e4\uc758": [796, 804, 807, 809], "\ub4e4\uc790": 808, "\ub4ec\ub140": 794, "\ub4f1": 778, "\ub4f1\uacfc": 812, "\ub4f1\ub85d": 812, "\ub4f1\ub85d\uacfc": 811, "\ub4f1\ub85d\ud55c\ub2e4": 812, "\ub4f1\uc740": 786, "\ub4f1\uc758": 819, "\ub4f1\uc774": [797, 817], "\ub4f1\uc7a5\ud55c\ub2e4\ub294": 803, "\ub514\ub809\ud1a0\ub9ac": [779, 787], "\ub514\ub809\ud1a0\ub9ac\ub85c": [779, 787], "\ub514\ub809\ud1a0\ub9ac\ub97c": [786, 787], "\ub514\ub809\ud1a0\ub9ac\uc5d0": [779, 781, 786], "\ub514\ub809\ud1a0\ub9ac\uc640": 786, "\ub514\ub809\ud1a0\ub9ac\uc758": 786, "\ub514\ubc14\uc774\uc2a4": 793, "\ub514\ubc14\uc774\uc2a4\ub85c": 805, "\ub514\uc2a4\ud06c\ub85c": 782, "\ub514\uc2a4\ud06c\uc5d0": [778, 779, 782, 790], "\ub514\uc790\uc778\uc744": 784, "\ub525\ub7ec\ub2dd": 819, "\ub525\ub7ec\ub2dd\uc5d0\uc11c": 817, "\ub530\ub77c": [786, 793, 811, 812, 813, 818, 819], "\ub530\ub77c\uc11c": [781, 784, 785, 786, 787, 789, 790, 792, 803, 804, 805, 807, 808, 810, 813], "\ub530\ub974\uace0": 784, "\ub530\ub974\uba74": 803, "\ub530\ub978\ub2e4": [777, 791], "\ub54c": [783, 784, 785, 786, 794, 797, 799, 804, 806, 807, 809, 812, 814, 816, 817, 818], "\ub54c\uae4c\uc9c0": 802, "\ub54c\ub294": [785, 794, 810], "\ub54c\ub85c\ub294": [799, 804, 815], "\ub54c\ub860": 816, "\ub54c\ubb38\uc5d0": [781, 782, 784, 789, 794, 799, 803, 806, 807, 810, 813, 816, 817, 818], "\ub54c\ubb38\uc774\ub2e4": [777, 778, 784, 786, 790, 793, 797, 799, 803, 804, 805, 806, 818], "\ub54c\uc758": 810, "\ub5a0\uc62c\ub824": 803, "\ub610\ub294": [778, 779, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 800, 802, 803, 808, 812, 814, 815, 817, 818, 819], "\ub610\ud55c": [778, 781, 784, 786, 787, 793, 802, 809, 816, 819], "\ub611\uac19\uc774": 817, "\ub73b": 818, "\ub744\ub294": 804, "\ub77c\uace0": [793, 797, 803, 809, 816, 818], "\ub77c\ub294": [781, 785, 786, 797], "\ub77c\uc774\ube0c\ub7ec\ub9ac": 790, "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4": 790, "\ub77c\uc778": 791, "\ub77c\uc778\uc774\ub2e4": 783, "\ub798\ud551\ud558\uba74": 810, "\ub79c\ub364": 786, "\ub7ec\ud37c\ub7f0\uc2a4": 790, "\ub7f0\uce58": 787, "\ub7f0\uce6d\ud558\uae30": 783, "\ub808\uc774\ube14": [778, 781, 790, 817], "\ub808\uc774\ube14\uacfc": 819, "\ub808\uc774\ube14\ub4e4\uc758": 781, "\ub808\uc774\ube14\ub85c": 816, "\ub808\uc774\ube14\ub9cc": 809, "\ub808\uc774\ube14\uc740": [809, 819], "\ub808\uc774\ube14\uc744": [782, 794, 809, 816], "\ub808\uc774\ube14\uc774": [786, 806], "\ub808\uc774\uc544\uc6c3\uc744": 791, "\ub808\uc774\uc5b4": [799, 806, 809, 810, 816, 818, 819], "\ub808\uc774\uc5b4\uac00": 784, "\ub808\uc774\uc5b4\ub4e4": 806, "\ub808\uc774\uc5b4\ub4e4\uc744": 806, "\ub808\uc774\uc5b4\ub85c\ubd80\ud130": 803, "\ub808\uc774\uc5b4\ub97c": 803, "\ub808\uc774\uc5b4\ubd80\ud130": 806, "\ub808\uc774\uc5b4\uc5d0": [803, 804, 806, 809, 817], "\ub808\uc774\uc5b4\uc5d0\uc11c": [802, 809], "\ub808\uc774\uc5b4\uc758": [799, 802, 803, 806], "\ub808\uc774\uc774\ubcc4\ub85c": 806, "\ub85c": [785, 787, 788, 790, 793, 796, 808, 809, 810, 813, 814, 819], "\ub85c\ub354": 784, "\ub85c\ub354\uac00": [804, 809], "\ub85c\ub354\ub294": 807, "\ub85c\ub354\ub85c\ubd80\ud130": 804, "\ub85c\ub354\ub97c": [784, 803, 804, 807], "\ub85c\ub354\uc5d0": 807, "\ub85c\ub354\uc5d0\uc11c": 804, "\ub85c\ub4dc\ub420": [784, 785, 809], "\ub85c\ub4dc\uc548\ub2e4": 786, "\ub85c\ub4dc\uc5d0": 778, "\ub85c\ub4dc\ud558\uace0": [784, 786], "\ub85c\ub4dc\ud558\uae30": [777, 781], "\ub85c\ub4dc\ud558\ub294": 809, "\ub85c\ub4dc\ud558\uba74": 809, "\ub85c\ub4dc\ud55c\ub2e4": [784, 809], "\ub85c\ub4dc\ud55c\ub2e4\ub294": 809, "\ub85c\ub529": [777, 778, 780], "\ub85c\ub529\ub420": 786, "\ub85c\ub529\uc744": 778, "\ub85c\ub529\ud558\uace0": [777, 778, 790], "\ub85c\ub529\ud558\uae30": 786, "\ub85c\ub529\ud558\ub294": [780, 790, 805], "\ub85c\ub529\ud55c\ub2e4": 809, "\ub85c\ub529\ud568": 782, "\ub85c\ubd80\ud130": [784, 785, 790, 803], "\ub85c\uc11c": 796, "\ub85c\uc758": 793, "\ub85c\uc9c1\uc73c\ub85c": 814, "\ub85c\uceec": [778, 779, 782, 783, 784, 786, 787], "\ub8e8\ud504": 789, "\ub8f9\uacfc": [783, 804, 806, 818, 819], "\ub8f9\uc740": [804, 807, 809, 816, 817, 818, 819], "\ub8f9\uc744": [786, 806, 816, 819], "\ub8f9\uc774\ub791": 809, "\ub97c": [778, 779, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 799, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 813, 814, 815, 816, 817, 818, 819], "\ub9ac\uadf8\ub798\uc158": [781, 815], "\ub9ac\uadf8\ub808\uc158": [804, 815, 818, 819], "\ub9ac\uadf8\ub808\uc158\uacfc": 804, "\ub9ac\uadf8\ub808\uc158\uc5d0\uc11c": 807, "\ub9ac\uadf8\ub808\uc158\uc744": [804, 807, 816], "\ub9ac\ub4c0\uc154": 800, "\ub9ac\ub4dc\uc544\uc6c3\uc740": 817, "\ub9ac\uc14b": 812, "\ub9ac\uc18c\uc2a4\ub4e4\uc758": 783, "\ub9ac\uc18c\uc2a4\ub97c": 806, "\ub9ac\uc2a4\ud2b8": [807, 809], "\ub9ac\uc2a4\ud2b8\ub4e4\uc5d0": 814, "\ub9ac\uc2a4\ud2b8\ub85c": 781, "\ub9ac\uc2a4\ud2b8\ub85c\ubd80\ud130": 817, "\ub9ac\uc2a4\ud2b8\ub97c": [803, 804, 809, 817], "\ub9ac\uc2a4\ud2b8\uc5d0": 817, "\ub9ac\uc2a4\ud2b8\uc5d0\uc11c": 804, "\ub9ac\uc2a4\ud2b8\uc640": [781, 782, 804], "\ub9ac\uc2a4\ud2b8\uc758": 813, "\ub9ac\uc2a4\ud2b8\uc774\ub2e4": 814, "\ub9ac\ud134\ub418\uc9c0": 784, "\ub9ac\ud134\ub41c": [803, 819], "\ub9ac\ud134\ub41c\ub2e4": [786, 804], "\ub9ac\ud134\ud558\uae30": 816, "\ub9ac\ud134\ud558\ub3c4\ub85d": 781, "\ub9ac\ud134\ud55c\ub2e4": [784, 786, 804, 816, 819], "\ub9ac\ud134\ud55c\ub2e4\ub294": 784, "\ub9ac\ud134\ud574\uc57c": 807, "\ub9ac\ud134\ud574\uc57c\ud55c\ub2e4": 807, "\ub9b4\ub9ac\uc988\uc5d0\uc11c": 785, "\ub9c1\ud06c": [784, 802, 815, 817, 819], "\ub9c1\ud06c\ub97c": 781, "\ub9c8\ub2e4": [784, 807], "\ub9c8\uc2a4\ud06c": 781, "\ub9c8\uc2a4\ud06c\ub294": 781, "\ub9c8\uc2a4\ud06c\ub4e4\uc744": 781, "\ub9c8\uc2a4\ud06c\ub85c": 816, "\ub9c8\uc2a4\ud06c\ub85c\uc11c": 819, "\ub9c8\uc2a4\ud06c\ub97c": 781, "\ub9c8\uc2a4\ud130": 787, "\ub9c8\uc9c0\ub9c9": [796, 797, 799, 803, 804, 809, 813], "\ub9c8\uc9c0\ub9c9\uc5d0\ub294": 812, "\ub9c8\uc9c0\ub9c9\uc73c\ub85c": [797, 802, 814, 817], "\ub9c8\uce5c": 781, "\ub9cc": 805, "\ub9cc\ub4dc\ub294": [777, 781, 784, 786, 790, 793, 794, 796, 803, 804, 808, 809, 811, 818], "\ub9cc\ub4dc\ub294\ub370": [790, 811], "\ub9cc\ub4e0": [786, 801, 807, 815, 816], "\ub9cc\ub4e0\ub2e4": [786, 790, 804, 809, 816, 817], "\ub9cc\ub4e4": [784, 785, 786, 790, 792, 803, 804, 812, 813, 817], "\ub9cc\ub4e4\uac8c": 803, "\ub9cc\ub4e4\uace0": [784, 793, 794, 808, 818], "\ub9cc\ub4e4\uace0\uc790": [802, 816], "\ub9cc\ub4e4\uae30": [783, 785, 786, 793, 795, 797, 806, 808, 815, 819], "\ub9cc\ub4e4\uba74": 790, "\ub9cc\ub4e4\uc5b4": [784, 804], "\ub9cc\ub4e4\uc5b4\ub0b4\uae30": 817, "\ub9cc\ub4e4\uc5b4\ub0b4\ub294": 803, "\ub9cc\ub4e4\uc5b4\ub0b8\ub2e4": [807, 817], "\ub9cc\ub4e4\uc5b4\ub0bc": 813, "\ub9cc\ub4e4\uc5b4\uc11c": [799, 817], "\ub9cc\ub4e4\uc5b4\uc57c": [784, 786, 793], "\ub9cc\ub4e4\uc5b4\uc57c\ud560": 803, "\ub9cc\ub4e4\uc5b4\uc84c\ub2e4\uba74": 803, "\ub9cc\ub4e4\uc5b4\uc9c0\uba74": [784, 786], "\ub9cc\ub4e4\uc5b4\uc9c4\ub2e4": [784, 789, 791], "\ub9cc\ub4e4\uc5b4\uc9c8": [786, 804], "\ub9cc\ub4e4\uc5c8\ub2e4": 781, "\ub9cc\ub4e4\uc5c8\ub2e4\uba74": 816, "\ub9cc\ub4e4\uc790": 779, "\ub9cc\uc57d": [779, 781, 784, 785, 786, 790, 794, 797, 799, 802, 803, 804, 805, 807, 809, 810, 815, 819], "\ub9cc\uc744": [785, 819], "\ub9cc\uc871\ud558\uc9c0": 794, "\ub9cc\uc871\ud574\uc57c": 808, "\ub9ce\uc740": [781, 784, 786, 799, 803, 805, 806, 817], "\ub9ce\uc774": [777, 778, 799, 811, 817, 818], "\ub9d0\ud558\uc790\uba74": 784, "\ub9de\uac8c": 806, "\ub9de\ub3c4\ub85d": [786, 809], "\ub9de\ucd94\uac83\uc744": 786, "\ub9de\ucd94\ub294": 786, "\ub9de\ucd98\ub2e4": 786, "\ub9de\ucd9c": 786, "\ub9e4": [784, 809], "\ub9e4\ub274\uc5bc\uc758": 790, "\ub9e4\ubc88": 809, "\ub9e4\uc6b0": [799, 809], "\ub9e4\ud551": 804, "\ub9e4\ud551\uc740": 803, "\ub9e4\ud551\uc744": [786, 804], "\ub9e4\ud551\uc774\ub2e4": 786, "\ub9e4\ud551\ud558\ub294": 814, "\ub9f4\ubc84": 797, "\ub9f4\ubc84\ub97c": 797, "\uba04\uc57d": 786, "\uba38\uc2e0": 787, "\uba38\uc2e0\ub4e4\uc5d0": [784, 786], "\uba38\uc2e0\ub4e4\uc758": [784, 787], "\uba38\uc2e0\ub7ec\ub2dd": 781, "\uba38\uc2e0\ub7ec\ub2dd\uc5d0\ub294": 781, "\uba38\uc2e0\uc5d0": [785, 786, 787], "\uba38\uc2e0\uc5d0\uc11c": [784, 786, 787], "\uba38\uc2e0\uc740": 787, "\uba38\uc2e0\uc744": 787, "\uba38\uc2e0\uc758": [784, 787], "\uba38\uc2e0\uc774": [784, 787], "\uba3c\uc800": [784, 803], "\uba40\ud2f0": [781, 805, 809, 816, 818, 819], "\uba4b\uc9c4": 817, "\uba54\ub274\uc5bc\uc5d0": 790, "\uba54\ubaa8\ub9ac": [799, 805, 806, 810], "\uba54\ubaa8\ub9ac\uac00": [802, 810], "\uba54\ubaa8\ub9ac\ub098": 809, "\uba54\ubaa8\ub9ac\ub97c": [799, 805, 810], "\uba54\ubaa8\ub9ac\uc5d0": [805, 815], "\uba54\ubaa8\ub9ac\uc640": 806, "\uba54\uc18c\ub4dc": 803, "\uba54\uc18c\ub4dc\ub294": 803, "\uba54\uc18c\ub4dc\ub85c": [806, 816], "\uba54\uc18c\ub4dc\ub97c": [793, 803, 816], "\uba54\uc18c\ub4dc\uc5d0": 816, "\uba54\uc18c\uc2a4\ub4e4": 803, "\uba54\uc2dc\uc9c0": [796, 806, 808, 809, 811, 814, 815, 817, 819], "\uba54\uc2dc\uc9c0\ub4e4": 797, "\uba54\uc2dc\uc9c0\ub4e4\uc5b4": 806, "\uba54\uc2dc\uc9c0\ub4e4\uc744": [796, 797], "\uba54\uc2dc\uc9c0\ub4e4\uc774": 812, "\uba54\uc2dc\uc9c0\ub97c": [796, 799, 803, 809, 819], "\uba54\uc2dc\uc9c0\uc758": 799, "\uba54\uc9c0\uc2dc": [795, 800, 815, 819], "\uba54\ucf13\ud50c\ub798\uc774\uc2a4\ub97c": 789, "\uba54\ud0c0": 786, "\uba54\ud0c0\uadf8\ub798\ud504": 794, "\uba54\ud0c0\uadf8\ub798\ud504\uc758": 794, "\uba54\ud0c0\ub370\uc774\ud130\ub97c": 784, "\uba54\ud551\uc744": 786, "\uba64\uba38\ub97c": 803, "\uba85\ub839": 786, "\uba85\ub839\uc73c\ub85c": 780, "\uba85\ub839\uc740": 786, "\uba85\ub839\uc744": 786, "\uba85\ub839\uc758": 786, "\uba85\ub839\uc774": 786, "\uba85\ub839\ud589\uc774\ub098": 784, "\uba85\uc2dc\ub41c": [787, 813], "\uba85\uc2dc\ub41c\ub2e4\uba74": 786, "\uba85\uc2dc\uc801\uc73c\ub85c": 784, "\uba85\uc2dc\uc801\uc778": 793, "\uba85\uc2dc\ud558\uace0": 794, "\uba85\uc2dc\ud558\uae30\ub9cc": 816, "\uba85\uc2dc\ud558\ub294": 786, "\uba85\uc2dc\ud558\uc9c0": 786, "\uba85\uc2dc\ud55c\ub2e4": 786, "\uba85\uc2dc\ud560": [794, 804], "\uba85\uc2dc\ud574\uc57c": [785, 813], "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4": 794, "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4\ub294": 809, "\uba85\ud655\ud558\uac8c": 794, "\uba87": [783, 784, 786, 802, 804, 808, 809, 818, 819], "\uba87\uac00\uc9c0": [788, 818], "\uba87\uac1c\uc758": 808, "\ubaa8\ub378": [781, 783, 784, 802, 806, 813, 816], "\ubaa8\ub378\uacfc": 818, "\ubaa8\ub378\uacfc\ub294": 818, "\ubaa8\ub378\ub85c": [784, 816], "\ubaa8\ub378\ub9c1": [794, 800], "\ubaa8\ub378\ub9c1\uc5d0": 789, "\ubaa8\ub378\ub9c1\uc5d0\uc11c": [794, 798], "\ubaa8\ub378\ub9c1\ud558\ub294\ub370": 789, "\ubaa8\ub378\uc5d0": [781, 807, 816, 817, 819], "\ubaa8\ub378\uc5d0\uc11c\ub294": 819, "\ubaa8\ub378\uc740": [804, 807, 816, 818, 819], "\ubaa8\ub378\uc744": [784, 802, 806, 810, 811, 816, 817, 818, 819], "\ubaa8\ub378\uc758": [784, 802, 810, 817], "\ubaa8\ub378\uc774": [784, 805, 817], "\ubaa8\ub450": [786, 789, 794, 797, 803, 805, 806, 813, 817, 818], "\ubaa8\ub450\ub97c": 807, "\ubaa8\ub450\uc5d0": 803, "\ubaa8\ub4c8": [783, 795, 802, 809, 815, 819], "\ubaa8\ub4c8\uacfc": [813, 816], "\ubaa8\ub4c8\ub3c4": 784, "\ubaa8\ub4c8\ub4e4\uc740": [808, 809, 812], "\ubaa8\ub4c8\ub4e4\uc744": 819, "\ubaa8\ub4c8\ub9cc\uc744": 809, "\ubaa8\ub4c8\uc5d0": [813, 814, 817], "\ubaa8\ub4c8\uc5d0\uc11c": [804, 811, 813], "\ubaa8\ub4c8\uc740": [811, 812, 813, 816], "\ubaa8\ub4c8\uc744": [784, 802, 808, 809, 810, 811, 814, 815, 816, 819], "\ubaa8\ub4c8\uc758": [784, 806, 808, 811, 812, 816, 819], "\ubaa8\ub4c8\uc774": [784, 808, 809, 814, 819], "\ubaa8\ub4c8\uc774\uace0": 814, "\ubaa8\ub4c8\uc774\ub2e4": 812, "\ubaa8\ub4c8\uc778": 819, "\ubaa8\ub4c8\ucc98\ub7fc": 814, "\ubaa8\ub4dc\ub294": 784, "\ubaa8\ub4dc\ub85c": 784, "\ubaa8\ub4dc\uc5d0\uc11c\ub294": 784, "\ubaa8\ub4dc\uc640": 784, "\ubaa8\ub4e0": [783, 784, 785, 786, 787, 789, 790, 792, 793, 794, 797, 800, 802, 803, 805, 806, 807, 808, 809, 813, 816, 817, 819], "\ubaa8\uc544\uc11c": 794, "\ubaa8\uc74c\uc774\ub2e4": 780, "\ubaa9\ub85d": 817, "\ubaa9\ub85d\uc5d0": 817, "\ubaa9\ub85d\uc740": [797, 804, 809, 819], "\ubaa9\ub85d\uc744": [804, 809], "\ubaa9\ub85d\uc774": 803, "\ubaa9\uc801": 814, "\ubaa9\uc801\uc73c\ub85c": [794, 806], "\ubaa9\uc801\uc73c\ub85c\ub294": 806, "\ubaa9\uc801\uc740": 778, "\ubaa9\uc801\uc9c0": [786, 797, 803, 807, 809, 812, 813, 814], "\ubaa9\uc801\uc9c0\uac00": 803, "\ubaa9\uc801\uc9c0\uc640": 794, "\ubaa9\uc801\uc9c0\uc778": 803, "\ubb38\ubc95\uc744": 794, "\ubb38\uc790": 794, "\ubb38\uc790\ub4e4\uacfc": 786, "\ubb38\uc790\ub85c": 786, "\ubb38\uc790\ub9cc\ub4e4": 794, "\ubb38\uc790\uc5f4": 794, "\ubb38\uc790\uc5f4\uc774\ub2e4": [797, 800], "\ubb38\uc7a5\uc73c\ub85c": 816, "\ubb38\uc81c\ub294": 817, "\ubb38\uc81c\ub4e4\uacfc": 817, "\ubb38\uc81c\ub97c": [810, 813], "\ubb38\uc81c\uc640": 817, "\ubb38\uc81c\uc778": 816, "\ubbf8\ub2c8": [781, 783, 784, 801, 802, 806, 813, 817], "\ubbf8\ub2c8\ubc30\uce58": [784, 785, 807], "\ubbf8\ub2c8\ubc30\uce58\ub97c": 806, "\ubbf8\ub2c8\ubc30\uce58\ub9cc": 806, "\ubbf8\ub2c8\ubc30\uce58\uc5d0": [807, 809], "\ubbf8\ub2c8\ubc30\uce58\uc5d0\uc11c": 804, "\ubbf8\ub2c8\ubc30\uce58\uc640": 806, "\ubbf8\ub2c8\ubc30\uce58\uc758": [804, 806], "\ubbf8\ub798\uc758": 816, "\ubbf8\ub9ac": 819, "\ubbf8\ub9cc\uc758": 805, "\ubc0f": [781, 782, 784, 785, 788, 790, 791, 793, 794, 795, 796, 802, 803, 806, 810, 813, 815, 817, 819], "\ubc11\uc904": 786, "\ubc14\uafb8\uace0": 785, "\ubc14\uafb8\uae30\ub9cc": 803, "\ubc14\uafb8\ub294": 808, "\ubc14\uafb8\uba74": 810, "\ubc14\ub010": 781, "\ubc14\ub014": 785, "\ubc16\uc5d0\uc11c": [778, 797], "\ubc18\uacfc": 799, "\ubc18\ub300": 804, "\ubc18\ub300\ub85c": 789, "\ubc18\ub300\uc758": 786, "\ubc18\ub4dc\uc2dc": [797, 808], "\ubc18\uba74": 806, "\ubc18\uba74\uc5d0": 799, "\ubc18\ubcf5": 802, "\ubc18\ubcf5\ub41c\ub2e4": 802, "\ubc18\ubcf5\uc801\uc73c\ub85c": 818, "\ubc18\ubcf5\ud574\uc11c": 819, "\ubc18\uc774": 799, "\ubc18\ud658\ud558\ub294": 809, "\ubc1b\uace0": [784, 814, 819], "\ubc1b\ub294": [807, 813], "\ubc1b\ub294\ub2e4": [786, 793, 800, 809, 813, 814], "\ubc1b\ub294\ub2e4\ub294": [804, 807, 809], "\ubc1b\ub294\ub370": 797, "\ubc1b\uc544\ub4e4\uc778\ub2e4": 792, "\ubc1b\uc544\uc11c": 807, "\ubc1b\uc544\uc57c\ud558\uace0": 807, "\ubc1b\uc744": 809, "\ubc1c\ub824\uc640\uc11c": 817, "\ubc1c\uc0dd\uc2dc\ud0a4\ub294\ub370": 803, "\ubc1c\uc0dd\ud560": [784, 806], "\ubc25\ubc99\uc73c\ub85c": 798, "\ubc29\ubc95": [784, 793, 796, 813], "\ubc29\ubc95\uacfc": [803, 804, 809, 815], "\ubc29\ubc95\ub3c4": 802, "\ubc29\ubc95\ub4e4\uc5d0": 790, "\ubc29\ubc95\ub4e4\uc744": [793, 803], "\ubc29\ubc95\uc5d0": [781, 799, 815], "\ubc29\ubc95\uc73c\ub85c": [784, 786, 801, 805], "\ubc29\ubc95\uc73c\ub85c\ub294": 792, "\ubc29\ubc95\uc740": [781, 786, 790, 794, 799, 802, 806, 810, 816, 817, 818, 819], "\ubc29\ubc95\uc744": [777, 778, 780, 781, 786, 796, 797, 803, 806, 807, 810, 811, 816, 819], "\ubc29\ubc95\uc774\ub2e4": [781, 801, 805], "\ubc29\uc2dd\uc73c\ub85c": [796, 803], "\ubc29\uc2dd\uc744": 783, "\ubc29\uc2dd\uc758": 811, "\ubc29\uc9c0\ud558\ub294": 784, "\ubc29\ud5a5\uc131": [789, 803], "\ubc29\ud5a5\uc131\uc5d0": 789, "\ubc29\ud5a5\uc131\uc744": 789, "\ubc29\ud5a5\uc131\uc774": 789, "\ubc29\ud5a5\uc744": 793, "\ubc29\ud5a5\uc774": 790, "\ubc30\uc5f4": [794, 804, 807, 809], "\ubc30\uc5f4\uacfc": 807, "\ubc30\uc5f4\uc758": 807, "\ubc30\uc81c\ud558\uace0\uc790": 804, "\ubc30\uc81c\ud558\ub294": 804, "\ubc30\uce58": [781, 783, 784, 801, 802, 806, 813], "\ubc30\uce58\ub4e4\uc744": 784, "\ubc30\uce58\ub4e4\uc758": 809, "\ubc30\uce58\ub85c\ubd80\ud130": 804, "\ubc30\uce58\ub97c": [783, 784, 797, 802, 817], "\ubc30\uce58\uc548\uc5d0": 804, "\ubc30\uce58\uc5d0": [797, 817], "\ubc30\uce58\uc5d0\uc11c": 802, "\ubc31\uc564\ub4dc\ub9cc": 783, "\ubc31\uc5d4\ub4dc": [790, 811], "\ubc31\uc5d4\ub4dc\ub85c": [811, 815], "\ubc31\uc5d4\ub4dc\ub97c": 811, "\ubc84\ub9b0\ub2e4\ub294": 817, "\ubc84\uc804": 795, "\ubc84\uc804\ub3c4": [808, 817], "\ubc84\uc804\uc758": 786, "\ubc84\uc804\uc774\ub2e4": 816, "\ubc84\ud2f1\uc2a4\ub4e4": 789, "\ubc88": 819, "\ubc88\uc5ed\ud55c": 795, "\ubc88\ud638": 793, "\ubc88\ud638\uac00": [787, 793], "\ubc88\ud638\ub294": 793, "\ubc88\ud638\ub3c4": 787, "\ubc88\ud638\ub97c": 793, "\ubc94\uc704\ub3c4": 786, "\ubc94\uc704\ub97c": 786, "\ubc94\uc704\uc5d0": 781, "\ubc94\uc704\uc758": 819, "\ubc94\uc8fc\ud615": 816, "\ubc95\uc744": 802, "\ubc95\uce59\uc758": 786, "\ubca0\uce58\ub4e4\uc5d0": 804, "\ubca1\ud130": [791, 816], "\ubca1\ud130\ub294": 786, "\ubca1\ud130\ub4e4\uc758": 786, "\ubca1\ud130\ub97c": 786, "\ubca1\ud130\uc778": 786, "\ubca4\uce58\ub9c8\ud0b9": 780, "\ubcc0\uacbd\ub418\uc5c8\ub294\uc9c0": 779, "\ubcc0\uacbd\uc740": 783, "\ubcc0\uacbd\ud558\uae30": 809, "\ubcc0\uacbd\ud574\uc11c": 816, "\ubcc0\uacbd\ud574\uc57c\ud560": 809, "\ubcc0\uc218\ub4e4": 786, "\ubcc0\ud615": 798, "\ubcc0\ud658": [784, 817], "\ubcc0\ud658\ub41c": 817, "\ubcc0\ud658\ub41c\ub2e4": 781, "\ubcc0\ud658\uc740": 794, "\ubcc0\ud658\uc744": 793, "\ubcc0\ud658\ud558\uace0": 786, "\ubcc0\ud658\ud558\uae30": 790, "\ubcc0\ud658\ud558\ub294": [785, 803], "\ubcc0\ud658\ud558\ub294\ub370": 790, "\ubcc0\ud658\ud558\ub3c4\ub85d": 786, "\ubcc0\ud658\ud558\uba74": [781, 790], "\ubcc0\ud658\ud558\uba74\uc11c": 803, "\ubcc0\ud658\ud55c\ub2e4": [785, 790, 794], "\ubcc0\ud658\ud560": [793, 794], "\ubcc0\ud658\ud574\uc11c": 790, "\ubcc4\ub3c4\ub85c": 786, "\ubcc4\ub3c4\ub85d": 817, "\ubcc4\ub3c4\uc758": [794, 818, 819], "\ubcc4\ub85c\ub3c4": 814, "\ubcd1\ub82c\ub85c": 786, "\ubcd1\ub82c\ud654": 783, "\ubcd1\ub82c\ud654\uc2dc\ud0a4\uace0": 783, "\ubcd1\ud569": [797, 816], "\ubcd1\ud569\uc774\uc804\uc5d0": 798, "\ubcd1\ud569\ud558\ub294": 816, "\ubcf4\ub0b4\uc8fc\uc138\uc694": 795, "\ubcf4\ub2e4": [784, 802, 803, 804, 805, 809], "\ubcf4\ub77c": 786, "\ubcf4\uba74": 794, "\ubcf4\uc5ec\uc8fc\uace0": 806, "\ubcf4\uc5ec\uc8fc\uae30": 808, "\ubcf4\uc5ec\uc8fc\ub294": 785, "\ubcf4\uc5ec\uc900\ub2e4": [777, 778, 780, 782, 783, 785, 786, 787, 793, 803, 804, 810], "\ubcf4\uc790": [784, 791, 793, 803, 806, 808], "\ubcf4\uc874\ud558\uace0": 794, "\ubcf4\ud1b5": [797, 819], "\ubcf4\ud1b5\uc740": [784, 797, 798, 804, 806, 812, 817], "\ubcf4\ud1b5\uc758": [814, 817], "\ubcf4\ud1b5\uc774\ub2e4": 804, "\ubcf4\ud638\ub97c": 784, "\ubcf5\uc0ac": 787, "\ubcf5\uc0ac\ub41c\ub2e4": 787, "\ubcf5\uc0ac\ub97c": 799, "\ubcf5\uc0ac\ud558\uace0": 783, "\ubcf5\uc0ac\ud558\uba74\uc11c": 794, "\ubcf5\uc0ac\ud55c\ub2e4": [787, 792], "\ubcf5\uc0ac\ud560": 792, "\ubcf5\uc7a1\ud558\ub2c8": 816, "\ubcf5\uc7a1\ud55c": [800, 803, 812, 817], "\ubcf8\uac83\uacfc": 819, "\ubcfc": 781, "\ubd80\ub3d9\uc18c\uc218\uc810": 797, "\ubd80\ub978\ub2e4": [793, 803, 809, 817], "\ubd80\ubd84": [781, 804], "\ubd80\ubd84\ub4e4\uc774": 784, "\ubd80\ubd84\uc5d0": 804, "\ubd80\ubd84\uc73c\ub85c": 804, "\ubd80\ubd84\uc740": [804, 813], "\ubd80\ubd84\uc744": [781, 784], "\ubd80\ubd84\uc758": [804, 813], "\ubd80\uc0b0": 784, "\ubd80\uc18d": [796, 804, 807, 816], "\ubd80\uc18d\ub418\ub294": 786, "\ubd80\uc218\uc801\uc73c\ub85c": 816, "\ubd80\uc5ec": 786, "\ubd80\uc5ec\ub41c\ub2e4": [786, 793], "\ubd80\uc5ec\ud558\uace0": 793, "\ubd80\uc5ec\ud558\uae30": 786, "\ubd80\uc5ec\ud558\ub294\ub370": 793, "\ubd80\uc5ec\ud55c\ub2e4": [786, 794], "\ubd80\ud130": [781, 784, 814, 816], "\ubd84\ub4e4\uc744": 802, "\ubd84\ub958": [784, 802, 807, 815, 818], "\ubd84\ub958\uac00": 817, "\ubd84\ub958\uae30": 818, "\ubd84\ub958\ub098": 817, "\ubd84\ub958\ub294": [781, 816, 817], "\ubd84\ub958\ub418\uc5b4": 819, "\ubd84\ub958\ub97c": [803, 815, 816], "\ubd84\ub958\uc5d0": 804, "\ubd84\ub958\uc5d0\uc11c": [804, 807], "\ubd84\ub958\uc640\ub294": 781, "\ubd84\ub958\uc744": [804, 807], "\ubd84\ub958\uc758": [781, 786, 804, 816], "\ubd84\ub958\uc774\ub2e4": 819, "\ubd84\ub958\ud558\uae30": 819, "\ubd84\ub958\ud558\ub294": [816, 818], "\ubd84\ub958\ud55c\ub2e4": 817, "\ubd84\ub958\ud560": 817, "\ubd84\ub9ac\ub418\uc5b4": 817, "\ubd84\uc0b0": 795, "\ubd84\uc0b0\ud558\uace0": 786, "\ubd84\uc0b0\ud558\ub294": 783, "\ubd84\uc0b0\ud559\uc2b5\uc774": 784, "\ubd84\uc11d\uc744": 781, "\ubd84\ud3ec": 807, "\ubd84\ud3ec\ub97c": 786, "\ubd84\ud3ec\uc5d0": 807, "\ubd84\ud3ec\uc5d0\uc11c": 818, "\ubd84\ud45c": 818, "\ubd84\ud560": [781, 784, 819], "\ubd84\ud560\uc744": 781, "\ubd84\ud560\ud558\uae30": 781, "\ubd84\ud560\ud558\uc5ec": 799, "\ubd88\uac00\ub2a5\ud558\ub2e4": [790, 791], "\ubd88\uac00\ub2a5\ud558\ub2e4\uba74": 797, "\ubd88\uade0\ud615\ud558\uac8c": 786, "\ubd88\ub9b0\ub2e4": 816, "\ubd88\ud544\uc694\ud55c": 799, "\ubd99\uc5ec\uc918\uc57c": 784, "\ube0c\ub79c\uce58\ub97c": 786, "\ube0c\ub85c\ub4dc\uce90\uc2a4\ud305\uc744": 797, "\ube14\ub85d": 813, "\ube14\ub85d\ub4e4\ub85c": 811, "\ube14\ub85d\uc774": 813, "\ube14\ub85d\uc77c": 814, "\ube44\uad50\ud558\ub294": 807, "\ube44\uad50\ud558\uba74": 813, "\ube44\uad50\ud558\uba74\uc11c": 818, "\ube44\uad50\ud574": 808, "\ube44\uad50\ud574\uc11c": 819, "\ube44\ub300\uce6d\uc801\uc778": 789, "\ube44\ub840\ud558\ub294": 807, "\ube44\ubc29\ud5a5\uc131": [789, 793], "\ube44\uc120\ud615\uc131": 819, "\ube44\uc2b7\ud558\uac8c": [784, 786, 809, 816], "\ube44\uc2b7\ud558\ub2e4": [781, 784, 804, 807, 808, 809, 818, 819], "\ube44\uc2b7\ud558\ub2e4\ub294": 808, "\ube44\uc2b7\ud558\uc9c0\ub9cc": 780, "\ube44\uc2b7\ud55c": [783, 784, 786, 810], "\ube44\ud2b8": 793, "\ube44\ud2b8\ub97c": 793, "\ube44\ud574\uc11c": 805, "\ube44\ud65c\uc131\ud654\ub418\uc5b4": 797, "\ube44\ud65c\uc131\ud654\ub418\uc5c8\uc744": 810, "\ube44\ud6a8\uc728\uc801\uc774\ub2e4": 817, "\ube44\ud6a8\uc728\uc801\uc778": 799, "\ube4c\ub4dc\uc778": [807, 809, 817, 819], "\ube4c\ub529": 811, "\ube4c\ud2b8\uc778": [781, 782, 796, 799, 808, 810, 819], "\ube4c\ud2b8\uc778\uc73c\ub85c": 804, "\ube60\ub974\uac8c": [781, 817], "\ube60\ub974\uace0": [793, 799], "\ube60\ub974\ub2e4": 810, "\ube60\ub974\uc9c0\ub294": 790, "\ube60\ub978": 793, "\ube68\uac04": 803, "\ube68\uac04\uc0c9": 803, "\ubfd0\ub9cc": 819, "\ubfd0\ub9cc\uc544\ub2c8\ub77c": 784, "\ubfd0\uc774\ub2e4": [807, 808, 809, 817], "\ubfd0\uc784\uc744": 794, "\uc0ac\ub77c\uc838\ub3c4": 784, "\uc0ac\ub78c\ub4e4": 789, "\uc0ac\ub78c\ub4e4\uacfc": 789, "\uc0ac\ub78c\ub4e4\uc758": 817, "\uc0ac\uc2e4\ub4e4": 791, "\uc0ac\uc2e4\uc744": 804, "\uc0ac\uc6a9": [784, 810, 816, 819], "\uc0ac\uc6a9\uacfc": 799, "\uc0ac\uc6a9\ub418\uace0": 812, "\uc0ac\uc6a9\ub418\uae30": [781, 790, 803], "\uc0ac\uc6a9\ub418\ub294": [777, 781, 784, 789, 794, 797, 798, 799, 801, 811, 812, 813, 817, 819], "\uc0ac\uc6a9\ub418\ub294\ub370": 810, "\uc0ac\uc6a9\ub418\uc5b4\uc57c": 787, "\uc0ac\uc6a9\ub41c": [784, 786, 797], "\uc0ac\uc6a9\ub41c\ub2e4": [784, 786, 787, 790, 793, 803, 806, 814, 817], "\uc0ac\uc6a9\ub41c\ub2e4\uba74": 789, "\uc0ac\uc6a9\ub41c\uba70": 810, "\uc0ac\uc6a9\ub420": [783, 784, 786, 787, 803, 804, 807, 816, 819], "\uc0ac\uc6a9\ub7c9\uc744": [799, 810], "\uc0ac\uc6a9\ubc95\uc740": [801, 803], "\uc0ac\uc6a9\ubc95\uc744": [780, 797], "\uc0ac\uc6a9\uc790": [791, 797], "\uc0ac\uc6a9\uc790\uac00": [784, 786, 794], "\uc0ac\uc6a9\uc790\ub294": [784, 785, 786, 787, 797], "\uc0ac\uc6a9\uc790\ub4e4\uacfc": 789, "\uc0ac\uc6a9\uc790\ub4e4\uc740": 786, "\uc0ac\uc6a9\uc790\uc758": 787, "\uc0ac\uc6a9\ud558\uaca0\ub2e4": 815, "\uc0ac\uc6a9\ud558\uace0": [786, 798, 804, 809], "\uc0ac\uc6a9\ud558\uae30": [786, 788, 793, 802, 807, 809], "\uc0ac\uc6a9\ud558\uae30\ub97c": 807, "\uc0ac\uc6a9\ud558\ub294": [781, 786, 793, 797, 799, 803, 805, 807, 810, 816, 817, 818, 819], "\uc0ac\uc6a9\ud558\ub294\ub370": [781, 802], "\uc0ac\uc6a9\ud558\ub294\uc9c0\ub294": 789, "\uc0ac\uc6a9\ud558\ub824\uba74": 804, "\uc0ac\uc6a9\ud558\uba70": 807, "\uc0ac\uc6a9\ud558\uba74": [790, 793, 799, 802], "\uc0ac\uc6a9\ud558\uba74\uc11c": 810, "\uc0ac\uc6a9\ud558\uc790": 817, "\uc0ac\uc6a9\ud558\uc9c0": [786, 810, 817], "\uc0ac\uc6a9\ud558\uc9c0\ub9cc": 806, "\uc0ac\uc6a9\ud55c": [781, 784, 786, 788, 793, 802, 805, 806, 811, 819], "\uc0ac\uc6a9\ud55c\ub2e4": [781, 785, 786, 787, 793, 804, 805, 807, 808, 815, 816, 817, 819], "\uc0ac\uc6a9\ud55c\ub2e4\ub294": [784, 804, 807], "\uc0ac\uc6a9\ud55c\ub2e4\uba74": 789, "\uc0ac\uc6a9\ud560": [781, 784, 786, 790, 793, 794, 804, 805, 807, 809, 815, 816], "\uc0ac\uc6a9\ud574": 817, "\uc0ac\uc6a9\ud574\ub3c4": 794, "\uc0ac\uc6a9\ud574\uc11c": [777, 781, 784, 785, 786, 787, 788, 789, 792, 793, 794, 796, 797, 799, 801, 803, 804, 806, 809, 810, 814, 815, 816, 817, 818, 819], "\uc0ac\uc6a9\ud574\uc57c": [784, 785, 786], "\uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4": [793, 804], "\uc0ac\uc6a9\ud588\ub2e4\uba74": 779, "\uc0ac\uc6a9\ud588\ub358": 807, "\uc0ac\uc774\uc5d0": [789, 804, 817, 818], "\uc0ac\uc774\uc758": [786, 803, 818], "\uc0ac\uc804": [800, 804, 807, 814], "\uc0ac\uc804\ub4e4\uc744": [804, 807], "\uc0ac\uc804\uc5d0\uc11c": 819, "\uc0ac\uc804\uc744": [794, 804, 807, 809, 814, 816, 819], "\uc0ac\uc804\uc758": 800, "\uc0ad\uc81c\ud558\uac8c\ud558\uae30": 784, "\uc0ad\uc81c\ud558\uae30\ub3c4": 804, "\uc0ad\uc81c\ud558\uae30\ub97c": 803, "\uc0b4\ud3b4\ubcf4\uaca0\ub2e4": 813, "\uc0b4\ud3b4\ubcf4\uae30": 803, "\uc0b4\ud3b4\ubcf4\uc790": [781, 797, 803, 809, 810], "\uc0c1\uad00\ud558\uc9c0": 786, "\uc0c1\ub2f9\ud55c": 805, "\uc0c1\ub2f9\ud788": 782, "\uc0c1\ub300": 787, "\uc0c1\ub300\uc801\uc73c\ub85c": [786, 817], "\uc0c1\uc138\ud55c": [804, 809], "\uc0c1\uc18d\ud55c": 803, "\uc0c1\uc18d\ud55c\ub2e4": 811, "\uc0c1\uc18d\ud574\uc11c": [778, 779], "\uc0c1\uc218": 818, "\uc0c1\uc704": 803, "\uc0c1\ud0dc\ub97c": 802, "\uc0c1\ud488": 789, "\uc0c1\ud638\uad00\uacc4\ub97c": 789, "\uc0c1\ud638\uc791\uc6a9\uc744": 783, "\uc0c1\ud669\uc5d0\uc11c": 817, "\uc0c8\ub85c\uc6b4": [784, 785, 786, 794, 802, 808], "\uc0d8\ub4e4\ub85c": 818, "\uc0d8\ub4e4\uc740": 818, "\uc0d8\ud50c": 807, "\uc0d8\ud50c\ub41c": [804, 807, 813], "\uc0d8\ud50c\ub7ec": [783, 784, 787, 802], "\uc0d8\ud50c\ub7ec\uac00": [805, 807], "\uc0d8\ud50c\ub7ec\ub294": [784, 809], "\uc0d8\ud50c\ub7ec\ub2e4": 807, "\uc0d8\ud50c\ub7ec\ub4e4\uacfc": 802, "\uc0d8\ud50c\ub7ec\ub4e4\uc5d0": 804, "\uc0d8\ud50c\ub7ec\ub4e4\uc740": [807, 809], "\uc0d8\ud50c\ub7ec\ub4e4\uc758": 809, "\uc0d8\ud50c\ub7ec\ub85c": 803, "\uc0d8\ud50c\ub7ec\ub97c": [803, 804, 807, 809], "\uc0d8\ud50c\ub7ec\uc640": 783, "\uc0d8\ud50c\ub9c1": [778, 807, 817], "\uc0d8\ud50c\ub9c1\uacfc": [784, 806], "\uc0d8\ud50c\ub9c1\ub41c": 818, "\uc0d8\ud50c\ub9c1\ub41c\ub2e4": 818, "\uc0d8\ud50c\ub9c1\ub420\uc9c0\ub97c": 784, "\uc0d8\ud50c\ub9c1\uc5d0": 802, "\uc0d8\ud50c\ub9c1\uc5d0\uc11c": [785, 809], "\uc0d8\ud50c\ub9c1\uc73c\ub85c": 806, "\uc0d8\ud50c\ub9c1\uc740": [784, 804, 805, 806], "\uc0d8\ud50c\ub9c1\uc744": [784, 802, 803, 805, 806, 818], "\uc0d8\ud50c\ub9c1\uc774": 806, "\uc0d8\ud50c\ub9c1\ud558\ub294": 807, "\uc0d8\ud50c\ub9c1\ud55c\ub2e4": [783, 785, 807], "\uc0d8\ud50c\ud558\ub294": 803, "\uc0dd\uac01\ud574": [803, 806], "\uc0dd\uac01\ud574\ubcf4\uc790": [802, 803], "\uc0dd\uae38": 810, "\uc0dd\ub7b5\ud55c\ub2e4": [781, 816], "\uc0dd\ub7b5\ud574\uc11c": 781, "\uc0dd\ub7b5\ud588\ub2e4": 781, "\uc0dd\uc120\ud55c": 786, "\uc0dd\uc131": [783, 790, 797, 811, 813], "\uc0dd\uc131\ub418\ub294": 813, "\uc0dd\uc131\ub41c": [784, 790, 804, 809], "\uc0dd\uc131\ub41c\ub2e4": [786, 814], "\uc0dd\uc131\uc2dc": 792, "\uc0dd\uc131\uc740": 784, "\uc0dd\uc131\uc744": [784, 807], "\uc0dd\uc131\uc774": 784, "\uc0dd\uc131\ud558\uace0": [784, 785, 791, 797, 803], "\uc0dd\uc131\ud558\uae30": [781, 783, 784, 788, 793], "\uc0dd\uc131\ud558\ub294": [784, 790, 793, 803, 809], "\uc0dd\uc131\ud558\ub294\uac83\uc744": 803, "\uc0dd\uc131\ud558\ub294\ub370": [784, 786, 803], "\uc0dd\uc131\ud558\uba70": 802, "\uc0dd\uc131\ud558\uba74": 818, "\uc0dd\uc131\ud558\uc9c0\ub9cc": 803, "\uc0dd\uc131\ud55c": [786, 807, 809, 815], "\uc0dd\uc131\ud55c\ub2e4": [784, 787, 791, 797, 803, 809], "\uc0dd\uc131\ud560": [784, 785, 794, 803, 816, 817], "\uc0e4\ub4dc": 784, "\uc11c\ub85c": [781, 786, 788, 789, 794, 804, 819], "\uc11c\ubc84": [783, 784], "\uc11c\ubc84\ub4e4\uac04\uc758": 784, "\uc11c\ubc84\ub4e4\uacfc": [783, 784], "\uc11c\ubc84\ub4e4\uc5d0\uc11c": 784, "\uc11c\ubc84\ub4e4\uc740": 783, "\uc11c\ubc84\ub4e4\uc744": [783, 784], "\uc11c\ubc84\ub4e4\uc774": 784, "\uc11c\ubc84\uc5d0": 785, "\uc11c\ube0c": [779, 781, 783, 785, 786, 803, 804, 805, 806, 813], "\uc11c\ube0c\uadf8\ub798\ud504": [813, 814], "\uc11c\ube0c\uadf8\ub798\ud504\ub97c": [794, 801], "\uc11c\ube0c\uadf8\ub798\ud504\uc5d0": 801, "\uc11c\ube0c\ubaa8\ub4c8": 812, "\uc11c\ube0c\ubaa8\ub4c8\ub4e4\uc744": 812, "\uc11c\ube0c\ubaa8\ub4c8\uc740": 812, "\uc11c\ube0c\uc14b\uc5d0": 786, "\uc11c\ube0c\uc14b\uc744": 784, "\uc11c\ube0c\ud074\ub798\uc2a4": 778, "\uc11c\ube0c\ud074\ub798\uc2a4\ub85c": 777, "\uc11c\ube0c\ud074\ub798\uc2a4\uc5d0\uc11c": 778, "\uc11c\uce58\ud558\ub294": 778, "\uc11e\uace0": 786, "\uc11e\uae30\uc804\uc758": 786, "\uc11e\ub294\ub2e4": 786, "\uc11e\uc5b4\uc57c\ud55c\ub2e4": 786, "\uc11e\uc5b4\uc900\ub2e4": 786, "\uc11e\uc778": 786, "\uc120\uc5b8\ub418\uc57c": 784, "\uc120\ud0dd": 806, "\uc120\ud0dd\uc744": 806, "\uc120\ud0dd\uc801\uc73c\ub85c": 787, "\uc120\ud0dd\uc801\uc778": 786, "\uc120\ud0dd\ud55c\ub2e4": [785, 802, 807, 810], "\uc120\ud0dd\ud560\uc9c0": 816, "\uc120\ud0dd\ud560\uc9c0\ub97c": 816, "\uc120\ud589": 803, "\uc120\ud615": 799, "\uc124\uba85\ub41c": 813, "\uc124\uba85\uc740": 816, "\uc124\uba85\uc744": [786, 804, 809], "\uc124\uba85\ud558\uace0": 777, "\uc124\uba85\ud558\uae30": 815, "\uc124\uba85\ud558\uae30\uc5d0\ub294": 816, "\uc124\uba85\ud55c": [807, 818], "\uc124\uba85\ud55c\ub2e4": [780, 781, 796, 803, 809, 819], "\uc124\uba85\ud588\ub4ef\uc774": 803, "\uc124\uc815": [783, 784, 787, 812], "\uc124\uc815\ub41c": 813, "\uc124\uc815\ub4e4\uc744": 786, "\uc124\uc815\uc5d0\uc11c\ub294": 797, "\uc124\uc815\uc73c\ub85c": [785, 786], "\uc124\uc815\uc73c\ub85c\ub294": [784, 797], "\uc124\uc815\uc740": 786, "\uc124\uc815\uc744": 786, "\uc124\uc815\ud558\uace0": 794, "\uc124\uc815\ud558\uae30": 805, "\uc124\uc815\ud558\ub294": 786, "\uc124\uc815\ud55c\ub2e4": 814, "\uc124\uc815\ud574\uc57c": 786, "\uc124\uce58\ub294": 786, "\uc124\uce58\ud558\ub294": 786, "\uc124\uce58\ud558\uc790": 786, "\uc124\uce58\ud55c\ub2e4": [780, 786], "\uc131\ub2a5": [802, 813], "\uc131\ub2a5\uc740": 810, "\uc131\ub2a5\uc774": 790, "\uc131\ub9bd\ud558\uae30": 799, "\uc131\uc9c8": 817, "\uc138": 786, "\uc138\uac00\uc9c0": [784, 813], "\uc138\uac1c\uc758": 809, "\uc138\ud305\uc5d0\uc11c": 784, "\uc139\uc158": 784, "\uc140\ud504": 786, "\uc148\ud50c\ub4e4": 818, "\uc14b": 786, "\uc14b\ub3c4": 784, "\uc14b\uc5d0": [784, 786, 809], "\uc14b\uc73c\ub85c": 784, "\uc14b\uc744": [783, 784], "\uc14b\uc758": 819, "\uc14b\uc774": 816, "\uc18c\uac1c\ub294": 790, "\uc18c\uac1c\ub97c": 788, "\uc18c\uac1c\ud55c": [802, 815, 817, 819], "\uc18c\uac1c\ud55c\ub2e4": [777, 778, 786, 788, 790, 796, 806, 811], "\uc18c\uc15c": 789, "\uc18c\uc2a4": [781, 786, 797, 798, 803, 807, 809, 812, 813], "\uc18c\uc2a4\ub4e4\ub85c": 781, "\uc18c\uc2a4\ub4e4\ub85c\ubd80\ud130": 790, "\uc18c\uc2a4\ub85c\ubd80\ud130": 793, "\uc18c\uc2a4\ub97c": [781, 788, 793], "\uc18d\ub3c4": [805, 806], "\uc18d\ub3c4\ub3c4": 793, "\uc18d\ub3c4\ub97c": 786, "\uc18d\ub4dc\ub97c": 799, "\uc18d\uc131": 786, "\uc18d\uc131\ub4e4\uc744": 786, "\uc18d\uc131\ub4e4\uc758": 786, "\uc18d\uc131\uc744": [786, 791, 800, 816], "\uc18d\uc131\uc758": 786, "\uc18d\ud558\ub294": 786, "\uc18d\ud558\ub294\uc9c0\ub97c": 784, "\uc18d\ud55c": [786, 797, 803], "\uc18d\ud55c\ub2e4": 785, "\uc194\ub8e8\uc158\uc740": 786, "\uc194\ub8e8\uc158\uc744": 786, "\uc218": [778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "\uc218\uac00": [799, 819], "\uc218\ub3c4": [785, 807, 813, 816], "\uc218\ub834\ud55c\ub2e4": 810, "\uc218\ub97c": [786, 803], "\uc218\ubc31\ub9cc": 802, "\uc218\ubcf4\ub2e4": 799, "\uc218\uc2dd\uc5d0\uc11c": 796, "\uc218\uc2ed\uc5b5": 786, "\uc218\uc2ed\uc5b5\uac1c\uc758": 802, "\uc218\uc5d0": 786, "\uc218\uc640": 784, "\uc218\uc758": [784, 785, 787, 803, 817], "\uc218\uc815\ud558\uba74": 783, "\uc218\uc815\ud560": 809, "\uc218\uc900\uc758": [784, 790, 814, 817], "\uc218\uc9d1\ud558\uace0": 784, "\uc218\uc9d1\ud558\uae30\ub97c": 819, "\uc218\uc9d1\ud558\ub294": 803, "\uc218\uc9d1\ud558\ub3c4\ub85d": 809, "\uc218\uc9d1\ud560": 803, "\uc218\ud559": [797, 813], "\uc218\ud559\uc801\uc73c\ub85c": 799, "\uc218\ud589": 787, "\uc218\ud589\ub418\uace0": 784, "\uc218\ud589\ub418\ub294": 819, "\uc218\ud589\ub418\ub294\uc9c0": 802, "\uc218\ud589\ub418\uba74": 784, "\uc218\ud589\ub41c": [787, 788, 803], "\uc218\ud589\ub41c\ub2e4": [778, 784, 786, 792, 810, 813, 817], "\uc218\ud589\ub420": [784, 797], "\uc218\ud589\uc774": 786, "\uc218\ud589\uc774\ub2e4": 784, "\uc218\ud589\ud558\uace0": [784, 819], "\uc218\ud589\ud558\uae30": [803, 810, 818], "\uc218\ud589\ud558\ub294": [783, 784, 787, 802, 806, 813, 819], "\uc218\ud589\ud558\uba74\uc11c": [783, 786], "\uc218\ud589\ud558\uc790": 816, "\uc218\ud589\ud558\uc9c0": 779, "\uc218\ud589\ud558\uc9c0\ub9cc": 817, "\uc218\ud589\ud55c\ub2e4": [786, 796, 806, 809, 810, 812, 813, 819], "\uc218\ud589\ud55c\ub2e4\uace0": 818, "\uc218\ud589\ud55c\ub2e4\ub294": 803, "\uc218\ud589\ud560": [783, 784, 786, 803, 806, 814, 817, 818], "\uc218\ud589\ud560\uc9c0\ub97c": 803, "\uc218\ud589\ud574\uc11c": [779, 817, 819], "\uc21c\uc11c\ub300\ub85c": 817, "\uc21c\uc11c\ub3c4": 778, "\uc21c\uc11c\ub3c4\ub294": 778, "\uc21c\uc11c\ub85c": 784, "\uc21c\uc11c\uc5d0": 793, "\uc21c\uc218": 797, "\uc21c\uc218\ud55c": 812, "\uc22b\uc790": 791, "\uc27d\uac8c": [778, 786], "\uc27d\ub2e4": 818, "\uc27d\uc9c0": 806, "\uc2a4\uce7c\ub77c": [789, 791, 798], "\uc2a4\ud06c\ub9bd\ud2b8": [784, 786, 787], "\uc2a4\ud06c\ub9bd\ud2b8\uac00": [784, 787], "\uc2a4\ud06c\ub9bd\ud2b8\ub294": 787, "\uc2a4\ud06c\ub9bd\ud2b8\ub4e4\uc744": 787, "\uc2a4\ud06c\ub9bd\ud2b8\ub97c": [783, 784, 786], "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0": 784, "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c": 787, "\uc2a4\ud06c\ub9bd\ud2b8\uc774\ub2e4": 810, "\uc2a4\ud0a4\ub9c8": 786, "\uc2a4\ud0a4\ub9c8\ub97c": 786, "\uc2a4\ud0a4\ub9c8\uc774\ub2e4": 794, "\uc2a4\ud0ed\uc5d0\uc11c": 797, "\uc2a4\ud1a0\ub9ac\uc9c0": 787, "\uc2ac\ub77c\uc774\uc2a4\ub294": 791, "\uc2dc\uac01\ud654\ud558\uba74": 802, "\uc2dc\uac04": 810, "\uc2dc\uac04\uc744": [778, 782, 806], "\uc2dc\ub098\ub9ac\uc624\ub4e4\ub85c": 802, "\uc2dc\ub4dc": [785, 803], "\uc2dc\ub9ac\uc988\ub85c": 794, "\uc2dc\uc2a4\ud15c\uc5d0\uc11c": 789, "\uc2dc\uc791": 787, "\uc2dc\uc791\uc73c\ub85c": 788, "\uc2dc\uc791\ud558\uace0": 794, "\uc2dc\uc791\ud558\uae30": 787, "\uc2dc\uc791\ud558\ub294": [786, 794, 803], "\uc2dc\uc791\ud55c\ub2e4": [793, 802], "\uc2dc\uc791\ud560": 817, "\uc2dc\uc791\ud574\uc11c": 806, "\uc2dd\ubcc4\ub420": 784, "\uc2e4\uc81c": [786, 813], "\uc2e4\uc81c\ub85c": 813, "\uc2e4\ud589": 785, "\uc2e4\ud589\ub418\ub294": [786, 787, 797], "\uc2e4\ud589\ub418\uba74": 784, "\uc2e4\ud589\ub418\uc57c": 787, "\uc2e4\ud589\ub41c": 786, "\uc2e4\ud589\ub41c\ub2e4": [783, 784, 786, 819], "\uc2e4\ud589\ub420": [784, 786, 787], "\uc2e4\ud589\ud558\uace0": [779, 784, 813], "\uc2e4\ud589\ud558\ub294": [783, 784, 799], "\uc2e4\ud589\ud558\uba74": 784, "\uc2e4\ud589\ud55c\ub2e4": 783, "\uc2e4\ud589\ud560": 784, "\uc2e4\ud589\ud574\uc11c": [783, 786], "\uc2e4\ud589\ud574\uc57c\ud558\uace0": 784, "\uc2e4\ud5d8\uc801\uc73c\ub85c": 785, "\uc2e4\ud5d8\uc801\uc778": 805, "\uc2f1\uae00": 784, "\uc2f6\ub2e4": [786, 794], "\uc2f6\ub2e4\uba74": [779, 786, 808, 809, 819], "\uc2f6\uc73c\uba74": 797, "\uc2f6\uc740": [784, 794, 801, 802, 818], "\uc30d\ub4e4": 789, "\uc30d\ub4e4\ub85c\ub9cc": 818, "\uc30d\uc5d0": 818, "\uc30d\uc73c\ub85c": 793, "\uc30d\uc744": [789, 807], "\uc30d\uc758": 807, "\uc30d\uc774\ub2e4": 817, "\uc30d\uc778": 808, "\uc313\uc544\uc11c": 819, "\uc4f0\uae30\ub97c": 784, "\uc4f0\uc774\ub294": [816, 817], "\uc544\ub2c8\uae30": 813, "\uc544\ub2c8\ub2e4": [784, 810], "\uc544\ub2c8\ub77c": [790, 817, 819], "\uc544\ub2cc": [808, 817], "\uc544\ub2cc\uc9c0\ub97c": 818, "\uc544\ub2d8\uc744": 808, "\uc544\ub798": [778, 783, 784, 785, 786, 787, 790, 791, 793, 794, 797, 803, 804, 806, 807, 808, 816, 818, 819], "\uc544\ub798\uc640": [793, 804, 809, 816, 817], "\uc544\ub798\uc758": [779, 794], "\uc544\ub9c8\ub3c4": 817, "\uc544\ubb34\uac83\ub3c4": 813, "\uc544\uc6c3\ud48b\ub4e4\uc744": 814, "\uc544\uc6c3\ud48b\uc740": 786, "\uc544\uc774\ub514\uc5b4\ub294": 818, "\uc544\uc774\ub514\uc5b4\ub97c": 817, "\uc544\uc774\ud15c\ub4e4\uc744": 807, "\uc544\uc774\ud15c\ub4e4\uc758": 789, "\uc544\uc774\ud15c\uc640": 807, "\uc544\uc774\ud15c\uc740": 817, "\uc544\uc774\ud15c\uc744": 809, "\uc544\uc8fc": [783, 790, 804, 806, 807], "\uc544\uc9c1": 810, "\uc544\ud06c\ub4e4": 789, "\uc544\ud0a4\ud14d\ud0c0": 797, "\uc548\uc5d0\ub294": 786, "\uc548\uc5d0\uc11c": 814, "\uc54a\uaca0\ub2e4": 790, "\uc54a\uace0": [779, 786, 794, 797, 810, 817], "\uc54a\uae30": [803, 805], "\uc54a\ub294": [786, 797, 807, 810], "\uc54a\ub294\ub2e4": [784, 786, 789, 805, 816, 817], "\uc54a\ub294\ub2e4\uba74": [794, 805], "\uc54a\ub294\uc9c0": 813, "\uc54a\ub2e4": [784, 790, 806, 816, 817, 818], "\uc54a\ub2e4\uba74": 815, "\uc54a\uc558\ub358": 804, "\uc54a\uc73c\uba74": 804, "\uc54a\uc740": [779, 781, 782, 786, 787, 803, 813], "\uc54a\uc744": 786, "\uc54a\uc9c0\ub9cc": 790, "\uc54c": 808, "\uc54c\uace0": [797, 818], "\uc54c\uace0\ub9ac\uc998\uacfc\ub294": 806, "\uc54c\uace0\ub9ac\uc998\ub4e4": 802, "\uc54c\uace0\ub9ac\uc998\uc740": 806, "\uc54c\uace0\ub9ac\uc998\uc744": [784, 817], "\uc54c\ub824\uc8fc\uace0": 809, "\uc54c\ub824\uc900\ub2e4": [786, 794], "\uc54c\ub824\uc9c4": 790, "\uc54c\uc218": 803, "\uc54c\uc544\ub0bc": 803, "\uc54c\uc544\ub450\uc790": [781, 794, 809, 819], "\uc54c\uc544\ubcf8\ub2e4": [781, 802, 815], "\uc54c\uc544\ubd24\ub2e4": 816, "\uc54c\ud30c\ubcb3": 786, "\uc55e": 816, "\uc55e\uc5d0": 813, "\uc55e\uc5d0\uc11c": [784, 809, 818], "\uc55e\uc73c\ub85c": 785, "\uc55e\uc73c\ub85c\uc758": 810, "\uc560\ub2c8\ub9e4\uc774\uc158\uc740": 806, "\uc564\ud2f0\ud2f0\ub4e4": 788, "\uc57d": 805, "\uc57d\uac04": [804, 817, 818], "\uc591\ubc29\ud5a5\uc5d0": 793, "\uc591\ubc29\ud5a5\uc758": 793, "\uc591\ubc29\ud5a5\uc774\uae30": 789, "\uc5b4\ub290\uc815\ub3c4": 804, "\uc5b4\ub514\uc11c\ub098": 779, "\uc5b4\ub5a4": [784, 786, 800, 803, 804, 809, 812, 818], "\uc5b4\ub5bb\uac8c": [777, 778, 784, 785, 786, 789, 796, 802, 803, 806, 808, 809, 812, 819], "\uc5b4\ub824\uc6b8": 802, "\uc5b8\uae09\ud55c": 797, "\uc5b8\uae09\ud588\ub4ef\uc774": 784, "\uc5b8\ub354\ud50c\ub85c\uc6b0": 810, "\uc5b8\uc5b4\uc5d0\uc11c": 793, "\uc5bb\uae30": [783, 786, 816], "\uc5bb\ub294": [785, 804], "\uc5bb\ub294\ub2e4": [804, 808, 809, 817], "\uc5bb\uc5b4\uc9c4": 814, "\uc5bb\uc740": [804, 814], "\uc5bb\uc744": [794, 803, 809, 815, 818], "\uc5bc\ub9c8\ub098": 803, "\uc5c5\ub370\uc774\ud2b8": [796, 797], "\uc5c5\ub370\uc774\ud2b8\ub97c": [784, 797, 801, 805, 810], "\uc5c5\ub370\uc774\ud2b8\ud558\uace0": 797, "\uc5c5\ub370\uc774\ud2b8\ud558\ub294": [803, 808, 810, 813, 817], "\uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4": [796, 797, 817], "\uc5c6\uac70\ub098": 789, "\uc5c6\uac8c": 813, "\uc5c6\uace0": 785, "\uc5c6\uae30": 799, "\uc5c6\ub294": [786, 790, 802, 806], "\uc5c6\ub294\uc9c0\ub97c": 809, "\uc5c6\ub2e4": [784, 785, 794, 803, 813, 817], "\uc5c6\ub2e4\ub294": [784, 806], "\uc5c6\uc560\uace0": 784, "\uc5c6\uc5b4\uc57c": 786, "\uc5c6\uc744": 789, "\uc5c6\uc774": 787, "\uc5d0": [781, 783, 784, 785, 786, 787, 794, 797, 800, 803, 804, 809, 810, 813, 814, 816, 817, 818, 819], "\uc5d0\ub294": [804, 809], "\uc5d0\ub7ec\ub97c": 803, "\uc5d0\uc11c": [777, 778, 779, 782, 784, 785, 786, 787, 789, 793, 798, 802, 803, 806, 807, 809, 813, 815, 817, 819], "\uc5d0\uc11c\ub294": [789, 816], "\uc5d0\uc11c\uc758": 808, "\uc5d0\uc9c0": [783, 785, 788, 789, 791, 796, 797, 799, 800, 802, 803, 807, 808, 815, 817, 818, 819], "\uc5d0\uc9c0\uac00": [786, 789, 793, 794, 804, 816, 817, 818], "\uc5d0\uc9c0\ub098": 786, "\uc5d0\uc9c0\ub294": [785, 789, 793, 794], "\uc5d0\uc9c0\ub3c4": 803, "\uc5d0\uc9c0\ub4e4\uacfc": 804, "\uc5d0\uc9c0\ub4e4\ub3c4": [789, 804], "\uc5d0\uc9c0\ub4e4\ub9cc\uc744": 803, "\uc5d0\uc9c0\ub4e4\uc5d0": [786, 804, 817], "\uc5d0\uc9c0\ub4e4\uc740": [791, 793, 804], "\uc5d0\uc9c0\ub4e4\uc744": [784, 788, 789, 793, 802, 804, 805, 807], "\uc5d0\uc9c0\ub4e4\uc758": [786, 789, 791, 794, 799, 803, 804, 807, 816, 818], "\uc5d0\uc9c0\ub4e4\uc774": [781, 786, 789, 800, 804, 818], "\uc5d0\uc9c0\ub85c": [789, 790, 818], "\uc5d0\uc9c0\ub85c\uc758": 799, "\uc5d0\uc9c0\ub97c": [783, 784, 785, 786, 790, 793, 794, 800, 803, 804, 807, 810], "\uc5d0\uc9c0\ubcc4": [796, 797], "\uc5d0\uc9c0\uc5d0": [786, 791, 793, 794, 796, 799, 816], "\uc5d0\uc9c0\uc5d0\ub294": 793, "\uc5d0\uc9c0\uc640": [784, 786, 794], "\uc5d0\uc9c0\uc640\ub294": 804, "\uc5d0\uc9c0\uc744": 803, "\uc5d0\uc9c0\uc758": [783, 784, 786, 788, 789, 794, 796, 797, 798, 800, 803, 804, 805, 807, 812, 816, 817, 818, 819], "\uc5d0\uc9c0\uc774\ub2e4": 793, "\uc5d0\uce58": [784, 790, 817], "\uc5d4\ud130\ub9ac": 818, "\uc5d4\ud2b8\ub9ac\ub97c": 786, "\uc5ec\uae30\uc11c": [785, 786, 803, 809, 812, 814, 816, 817, 818, 819], "\uc5ec\uae30\uc11c\ub294": [786, 815], "\uc5ec\uae30\uc11c\ubd80\ud130\ub294": 786, "\uc5ec\ub7ec": [781, 783, 784, 785, 786, 789, 790, 793, 794, 800, 802, 803, 808, 812, 813, 814, 817, 818, 819], "\uc5ec\ub7ec\uac00\uc9c0\uac00": 818, "\uc5ec\ub7ec\uac1c\uac00": 814, "\uc5ec\ub7ec\ubc88": 784, "\uc5ec\ub7ec\ubd84": 809, "\uc5ec\ub7ec\ubd84\ub9cc\uc758": [804, 809], "\uc5ec\ub7ec\ubd84\uc740": 819, "\uc5ec\ub7ec\ubd84\uc758": [797, 811], "\uc5ec\ubd80\ub97c": 786, "\uc5ec\uc804\ud788": [803, 806, 809], "\uc5ec\uc9c0\uac00": 797, "\uc5ed": 804, "\uc5ed\ubc29\ud5a5": 804, "\uc5ed\ubc29\ud5a5\uc758": 804, "\uc5ed\uc2dc": [780, 792, 809], "\uc5ed\ud560\uc744": [786, 796, 803], "\uc5f0\uacb0": [789, 813, 818], "\uc5f0\uacb0\ub418\ub294": 803, "\uc5f0\uacb0\ub418\uc5b4": [784, 786, 789], "\uc5f0\uacb0\ub418\uc9c0": 803, "\uc5f0\uacb0\ub41c": [793, 814, 818], "\uc5f0\uacb0\ub41c\ub2e4": 789, "\uc5f0\uacb0\ub85c": 789, "\uc5f0\uacb0\uc744": 784, "\uc5f0\uacb0\ud558\uace0": [799, 804, 816], "\uc5f0\uacb0\ud558\ub294": [789, 816, 817], "\uc5f0\uacb0\ud55c\ub2e4": [784, 789], "\uc5f0\uacb0\ud574\uc11c": 817, "\uc5f0\uad00\ub41c": [785, 794, 804, 814], "\uc5f0\uc0b0": [781, 784, 788, 792, 799, 802, 810, 817], "\uc5f0\uc0b0\uacfc": [783, 800], "\uc5f0\uc0b0\ub4e4\uc740": [810, 813, 817], "\uc5f0\uc0b0\ub4e4\uc744": 817, "\uc5f0\uc0b0\ub9cc": 797, "\uc5f0\uc0b0\uc18d\ub3c4\uac00": 799, "\uc5f0\uc0b0\uc5d0": 811, "\uc5f0\uc0b0\uc73c\ub85c": 797, "\uc5f0\uc0b0\uc740": [792, 811, 813], "\uc5f0\uc0b0\uc744": [783, 794, 796, 797, 799, 808, 813, 817], "\uc5f0\uc0b0\uc758": 799, "\uc5f0\uc0b0\uc774": [806, 813], "\uc5f0\uc18d\ub41c": [785, 786], "\uc5fc\ub450\ud574\ub450\uace0": 783, "\uc5fc\ub450\ud574\uc11c": 817, "\uc601\ubb38": 795, "\uc601\uc18d\uc801\uc778": 784, "\uc601\uc5ed\uc5d0\uc11c\ub294": 806, "\uc608": [784, 787, 790, 791, 793, 794, 810, 816], "\uc608\ub294": [781, 782, 787, 818], "\uc608\ub4e4": 789, "\uc608\ub4e4\ub85c": 806, "\uc608\ub4e4\uc744": 781, "\uc608\ub85c": [778, 781, 803, 808, 809], "\uc608\ub97c": [782, 784, 785, 786, 787, 788, 789, 791, 794, 797, 798, 803, 804, 805, 807, 808, 809, 816, 817, 818, 819], "\uc608\ub97c\ub4e4\uba74": 794, "\uc608\uc758": 791, "\uc608\uc774\ub2e4": [779, 786, 807], "\uc608\uc804\uacfc": 803, "\uc608\uc815\uc774\ub2e4": 784, "\uc608\uc81c": [807, 809, 816, 819], "\uc608\uc81c\uac00": 819, "\uc608\uc81c\ub294": [784, 785, 786, 798, 800, 804, 807, 809, 810, 817, 818], "\uc608\uc81c\ub4e4\uc740": 815, "\uc608\uc81c\ub4e4\uc744": [781, 782, 819], "\uc608\uc81c\ub4e4\uc774": 814, "\uc608\uc81c\ub85c": [781, 807, 811, 816], "\uc608\uc81c\ub97c": [793, 799, 815, 819], "\uc608\uc81c\uc5d0": 816, "\uc608\uc81c\uc5d0\uc11c": 816, "\uc608\uc81c\uc5d0\uc11c\uc640": 781, "\uc608\uc81c\uc640": 809, "\uc608\uc81c\uc758": [781, 791, 803], "\uc608\uc81c\uc774\ub2e4": [783, 786, 790, 794, 799, 804, 817, 818], "\uc608\uc81c\uc778": [807, 809], "\uc608\uc81c\ucc98\ub7fc": 779, "\uc608\uce21": [784, 802, 804, 809, 815, 816, 817, 819], "\uc608\uce21\uac12\uc744": 816, "\uc608\uce21\uacfc": 818, "\uc608\uce21\ub97c": 807, "\uc608\uce21\uc740": [807, 816, 818], "\uc608\uce21\uc744": [807, 816, 817, 818, 819], "\uc608\uce21\uc758": [807, 816], "\uc608\uce21\ud558\uace0": [816, 818, 819], "\uc608\uce21\ud558\uae30": [804, 807], "\uc608\uce21\ud558\uae30\ub9cc": 807, "\uc608\uce21\ud558\ub294": [804, 816, 818], "\uc608\uce21\ud558\uba74": 816, "\uc608\uce21\ud560": 816, "\uc624\ub958": 795, "\uc624\ub978\ucabd": 799, "\uc624\ub978\ucabd\uc73c\ub85c": 817, "\uc624\uc9c1": [780, 794], "\uc624\ud37c\ub808\uc774\ud130\ub294": 784, "\uc624\ud504\ub77c\uc778": 802, "\uc62c\ub824\uc11c": 805, "\uc62c\ub824\uc57c\ud560": 802, "\uc62e\uaca8\ub193\ub294\ub2e4": 804, "\uc62e\uae30\ub294": [779, 809], "\uc635\uc158": 812, "\uc635\uc158\ub4e4": 790, "\uc635\uc158\ub4e4\uc744": 790, "\uc635\uc158\uc5d0": 813, "\uc635\uc158\uc73c\ub85c": 812, "\uc640": [778, 781, 782, 783, 784, 785, 786, 788, 789, 791, 794, 797, 799, 803, 804, 805, 807, 809, 810, 811, 813, 814, 816, 817, 818, 819], "\uc644\ub8cc\ub418\uba74": [786, 797], "\uc644\ub8cc\ub41c\ub2e4": 784, "\uc644\ubcbd\ud55c": 781, "\uc644\uc804\ud558\uac8c": 805, "\uc644\uc804\ud55c": 783, "\uc644\uc804\ud788": [804, 817], "\uc678\ubd80": [781, 788, 793, 809], "\uc678\uc5d0": 786, "\uc67c\ucabd": 799, "\uc67c\ucabd\ubd80\ud130": 817, "\uc694\uad6c\ub418\uae30": 797, "\uc694\uad6c\ub7c9\uc740": 805, "\uc694\uc18c\ub294": 813, "\uc694\uc57d\ud55c\ub2e4": 817, "\uc6a9\ub3c4\ub97c": 816, "\uc6a9\ub7c9\uc744": 802, "\uc6b0\ub9ac\ub294": [784, 786, 806, 816, 819], "\uc6b0\uc120": [780, 784, 785, 794, 803, 816], "\uc6cc\ud06c\ub85c\ub4dc": 802, "\uc6cc\ud06c\ub85c\ub4dc\ub97c": 786, "\uc6d0\uaca9": 778, "\uc6d0\ub798": 797, "\uc6d0\ub798\uc758": [794, 813, 816, 817], "\uc6d0\ubcf8": [786, 803, 807, 808], "\uc6d0\ubcf8\uc758": 803, "\uc6d0\uc18c\ub4e4\uc740": 784, "\uc6d0\uc18c\ub97c": 809, "\uc6d0\uce59\uc740": 808, "\uc6d0\ud558\ub294": [801, 809, 816], "\uc6d0\ud55c\ub2e4\uba74": [803, 807], "\uc6d0\ud560": 819, "\uc6d0\ud568": 789, "\uc6d0\ud65c\ud558\uac8c": 811, "\uc704": [779, 781, 786, 791, 794, 796, 797, 799, 803, 805, 809, 816, 817, 819], "\uc704\ub97c": 818, "\uc704\uc5d0\uc11c": [797, 818, 819], "\uc704\uc758": [781, 803, 817], "\uc704\uc8fc": 791, "\uc704\uce58\uc774\ub2e4": 787, "\uc704\uce58\ud55c": 792, "\uc704\uce58\ud55c\ub2e4": 803, "\uc704\ud55c": [778, 780, 782, 783, 784, 785, 789, 790, 793, 794, 797, 802, 804, 806, 807, 809, 814, 815, 816, 818, 819], "\uc704\ud568\uc774\ub2e4": 781, "\uc704\ud568\uc774\uc9c0": 808, "\uc704\ud574": [777, 781, 782, 784, 785, 804], "\uc704\ud574\uc11c": [778, 779, 781, 783, 784, 785, 786, 787, 789, 791, 793, 794, 797, 800, 803, 806, 807, 809, 810, 812, 814, 815, 816, 817, 818, 819], "\uc704\ud574\uc11c\ub294": [786, 793, 797, 803, 807, 808, 809], "\uc704\ud574\uc11c\uc774\ub2e4": [804, 813], "\uc704\ud578": 784, "\uc720\ub3c4\ub41c": 804, "\uc720\ub3c4\ud558\ub294": 803, "\uc720\uba85\ud558\uace0": 819, "\uc720\uba85\ud55c": [784, 794], "\uc720\uc0ac\ud558\ub2e4": [809, 816], "\uc720\uc6a9\ud558\ub2e4": [784, 794], "\uc720\uc6a9\ud55c": [781, 782], "\uc720\uc758\ud558\uc790": [780, 790, 803, 809], "\uc720\uc77c\ud55c": [783, 784, 804, 807, 817], "\uc720\uc9c0\ud558\uae30": 817, "\uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744": 790, "\uc720\ud6a8\ud558\uc9c0": 813, "\uc73c\ub85c": [785, 795, 797, 814], "\uc740": [780, 781, 784, 785, 786, 787, 788, 796, 804, 807, 808, 809, 812, 818], "\uc740\ub2c9": 812, "\uc744": [778, 781, 783, 784, 785, 786, 787, 789, 790, 795, 797, 800, 803, 808, 809, 814, 816, 818, 819], "\uc758": [777, 778, 781, 782, 784, 785, 786, 787, 788, 789, 791, 796, 797, 803, 804, 805, 807, 809, 813, 814, 816, 817, 818, 819], "\uc758\ubbf8\ud558\ub294\ub370": 812, "\uc758\ubbf8\ud55c\ub2e4": [786, 797, 803, 809, 814], "\uc758\ubbf8\ud560": 789, "\uc758\uc874\uc131": 802, "\uc758\uc874\ud558\uae30": 806, "\uc758\ud574": 786, "\uc758\ud574\uc11c": 804, "\uc774": [777, 778, 780, 781, 783, 784, 786, 787, 788, 789, 790, 791, 793, 794, 795, 796, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "\uc774\uac83\ub4e4\uc740": [777, 809, 813, 814], "\uc774\uac83\ub4e4\uc744": [784, 794, 809], "\uc774\uac83\uc740": [794, 797, 804, 806], "\uc774\uac83\uc744": 794, "\uc774\uace0": [781, 817], "\uc774\ub098": [785, 810, 816, 818], "\uc774\ub294": [777, 778, 782, 783, 784, 785, 786, 790, 792, 793, 797, 801, 803, 804, 805, 813, 814, 816, 819], "\uc774\ub2e4": [781, 784, 794, 797, 800], "\uc774\ub4e4": [789, 803], "\uc774\ub4e4\uc740": 789, "\uc774\ub4e4\uc744": 786, "\uc774\ub54c": 781, "\uc774\ub77c\uace0": [778, 813, 817], "\uc774\ub77c\ub294": 816, "\uc774\ub77c\uba74": [779, 819], "\uc774\ub7f0": [780, 790, 803, 811, 813, 817], "\uc774\ub904\uc9c4\ub2e4": [781, 794, 818], "\uc774\ub97c": [777, 778, 779, 781, 782, 784, 785, 786, 790, 793, 794, 797, 798, 799, 802, 803, 804, 807, 808, 809, 810, 816, 817, 818], "\uc774\ub984": [791, 797], "\uc774\ub984\uacfc": 784, "\uc774\ub984\ub4e4\uc744": 786, "\uc774\ub984\uc740": [784, 786], "\uc774\ub984\uc744": [784, 786, 791, 797], "\uc774\ub984\uc758": [786, 791, 816], "\uc774\ub984\uc774": 784, "\uc774\ub984\uc774\uace0": 797, "\uc774\ub984\uc774\ub2e4": [786, 797], "\uc774\ubbf8": [779, 792, 815, 819], "\uc774\ubd84": [789, 794, 804, 813, 814], "\uc774\uc0c1": 797, "\uc774\uc288\uac00": 810, "\uc774\uc5b4\uc9c4": 793, "\uc774\uc640": [781, 797], "\uc774\uc678\uc758": [805, 812], "\uc774\uc6a9\ud55c": [816, 819], "\uc774\uc6a9\ud560": [790, 804], "\uc774\uc6a9\ud574\uc11c": [791, 794, 813, 817], "\uc774\uc6c3": [784, 806, 819], "\uc774\uc6c3\ub4e4\ub85c\ubd80\ud130": [809, 819], "\uc774\uc6c3\ub4e4\uc5d0": [806, 819], "\uc774\uc720\ub294": [778, 784, 786, 790, 793, 797, 799, 803, 818], "\uc774\uc804": [803, 804, 816, 817], "\uc774\uc804\uc5d0": 816, "\uc774\uc81c": [798, 807, 809], "\uc774\uc81c\uc758": 791, "\uc774\uc885": [788, 789, 796, 813, 819], "\uc774\uc9c4": [816, 819], "\uc774\ud130\ub808\uc774\uc158\uc5d0": 817, "\uc774\ud558\uc778": 793, "\uc774\ud56d": 797, "\uc774\ud574\ud558\uace0": 802, "\uc775\uc219\ud558\ub2e4\uba74": 808, "\uc778": [786, 802, 814, 817], "\uc778\ub371\uc2a4\ub97c": [784, 813], "\uc778\ubc14\uc6b4\ub4dc": 803, "\uc778\uc2a4\ud134\uc2a4\ub97c": 789, "\uc778\uc2a4\ud134\uc2a4\uc5d0": 819, "\uc778\uc790": 797, "\uc778\uc790\ub294": 803, "\uc778\uc790\ub4e4\uc740": 805, "\uc778\uc790\ub4e4\uc744": 786, "\uc778\uc790\ub4e4\uc774": 792, "\uc778\uc790\ub85c": [786, 793, 797, 800, 804, 807, 809, 814], "\uc778\uc790\ub97c": [787, 805], "\uc778\uc790\uc774\ub2e4": 786, "\uc778\uc9c0": 804, "\uc778\ucea1\uc290\ub808\uc774\uc158\uc774\ub2e4": 814, "\uc778\ucf54\ub529\ud55c": 789, "\uc778\ud130\uc5d1\uc158\uc744": 783, "\uc778\ud130\ud328\uc774\uc2a4\ub97c": 784, "\uc778\ud130\ud398\uc774\uc2a4\ub294": 800, "\uc778\ud130\ud398\uc774\uc2a4\ub97c": [784, 788, 791, 794], "\uc778\ud130\ud398\uc774\uc2a4\uc758": 791, "\uc778\ud2f0\ud2f0\ub4e4\uacfc": 789, "\uc77c": [789, 799], "\uc77c\ub3c4": 816, "\uc77c\ub4e4\uc5d0": 781, "\uc77c\ubc18": [784, 803], "\uc77c\ubc18\uc801": 817, "\uc77c\ubc18\uc801\uc73c\ub85c": [777, 781, 784, 793, 797, 799, 802, 808, 811, 813], "\uc77c\ubc18\uc801\uc778": [790, 794, 812, 813, 816, 817], "\uc77c\ubc88\uc801\uc73c\ub85c": 781, "\uc77c\ubd80": [798, 809], "\uc77c\ubd80\ub294": 781, "\uc77c\ubd80\ub97c": 802, "\uc77c\ubd80\ub9cc": 801, "\uc77c\ubd80\uc5d0": 796, "\uc77c\ubd80\uc5d0\ub9cc": 791, "\uc77c\ubd80\uc774\uae30": 784, "\uc77c\uc5b4\ub098\ub294\uc9c0\ub97c": 806, "\uc77c\uc5b4\ub09c\ub2e4": [781, 784], "\uc77c\uc744": [779, 809, 819], "\uc77c\uc774": 781, "\uc77c\uc774\ud0ac": 813, "\uc77d\uae30": 794, "\uc77d\uae30\uc640": 784, "\uc77d\ub294": 790, "\uc77d\uc744": 803, "\uc784\ubc30\ub529\uc740": 784, "\uc784\ubca0\ub529": 785, "\uc784\ubca0\ub529\uacfc": 784, "\uc784\ubca0\ub529\ub4e4\uc5d0": 784, "\uc784\ubca0\ub529\ub4e4\uc740": 785, "\uc784\ubca0\ub529\ub4e4\uc744": [784, 786], "\uc784\ubca0\ub529\uc744": [783, 784, 785, 786, 818, 819], "\uc784\ubca0\ub529\uc774": 784, "\uc784\uc2dc\ub85c": 782, "\uc784\uc758\ub85c": [803, 815], "\uc784\uc758\uc131\uc744": 806, "\uc784\uc758\uc758": [786, 803, 816, 818], "\uc785\ub825": [778, 784, 804, 807, 808, 809, 812, 813, 814, 817], "\uc785\ub825\uacfc": [797, 803], "\uc785\ub825\uae4c\uc9c0\uc758": 802, "\uc785\ub825\uc5d0": [802, 813], "\uc785\ub825\uc73c\ub85c": [784, 793, 803, 809, 816, 819], "\uc785\ub825\uc740": [804, 817], "\uc785\ub825\ud558\ub294": 807, "\uc785\ub825\ud558\uba74": 816, "\uc785\ub825\ud574\uc11c": [804, 809], "\uc788\uac8c\ud55c\ub2e4": 782, "\uc788\uace0": [778, 784, 786, 797, 803, 808, 810, 811, 814, 817, 818, 819], "\uc788\uae30": [778, 781, 797, 803, 804], "\uc788\ub294": [777, 778, 783, 784, 786, 789, 790, 792, 799, 804, 805, 806, 807, 809, 812, 813, 814, 815, 816, 817, 819], "\uc788\ub294\ub370": [786, 790, 813, 818], "\uc788\ub294\uc9c0": [786, 809], "\uc788\ub2e4": [777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 797, 798, 799, 800, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819], "\uc788\ub2e4\uace0": 815, "\uc788\ub2e4\ub294": [786, 794], "\uc788\ub2e4\uba74": [786, 794, 809, 818], "\uc788\ub3c4\ub85d": [781, 784, 803], "\uc788\ub4ef\uc774": [781, 803], "\uc788\uc5b4\uc11c": 810, "\uc788\uc5b4\uc57c": [779, 781, 786, 813, 814], "\uc788\uc5b4\uc57c\ub9cc": 784, "\uc788\uc73c\ub2c8": 790, "\uc788\uc73c\uba70": [781, 786, 812], "\uc788\uc744": [781, 794, 809], "\uc788\uc74c": 817, "\uc788\uc74c\uc744": [789, 806, 814, 819], "\uc788\uc9c0": 784, "\uc788\uc9c0\ub9cc": [803, 804], "\uc790\ub3d9\uc73c\ub85c": [779, 784, 785, 797, 808, 810], "\uc790\ub3d9\uc744": 779, "\uc790\ub3d9\ud654\ud560": 779, "\uc790\ub8cc": [784, 788, 789], "\uc790\uc138\ud558\uac8c": 813, "\uc790\uc138\ud55c": [781, 790, 797, 801, 816], "\uc790\uc138\ud788": 808, "\uc790\uc2e0\uc758": [809, 819], "\uc790\uc6d0\uc744": 802, "\uc790\uccb4": 789, "\uc791\ub3d9\uc744": 805, "\uc791\ub3d9\ud558\uac8c": 803, "\uc791\ub3d9\ud558\ub3c4\ub85d": 808, "\uc791\ub3d9\ud558\uba74\uc11c": 783, "\uc791\uc131": [796, 813], "\uc791\uc131\ud558\uace0\uc790": 816, "\uc791\uc131\ud558\ub294": [808, 819], "\uc791\uc131\ud558\uba74": 816, "\uc791\uc131\ud55c\ub2e4": 816, "\uc791\uc131\ud560": [816, 819], "\uc791\uc131\ud574\uc57c\ud55c\ub2e4": 784, "\uc791\uc5c5": 787, "\uc791\uc5c5\uc740": 778, "\uc791\uc740": [784, 786, 803, 810, 815, 817], "\uc798": 790, "\uc798\ub77c\uc11c": 808, "\uc7a0\uc7ac\uc801\uc73c\ub85c": 804, "\uc7a0\uc7ac\uc801\uc73c\ub85c\ub294": 786, "\uc7a0\uc7ac\uc801\uc778": 813, "\uc7a1": 787, "\uc7a1\ub294": [786, 803], "\uc7a1\uc744": [783, 787], "\uc7a1\uc774": 787, "\uc7a5\ub294": 796, "\uc7a5\uc5d0\uc11c\ub294": [811, 815], "\uc7a5\uc740": [777, 788, 802, 815], "\uc7a5\uc758": [778, 815], "\uc7a5\uc810\uc740": 786, "\uc7a5\uc810\uc744": 817, "\uc7ac\ubc30\uc5f4\ud558\ub294": 781, "\uc7ac\uc0ac\uc6a9\ub420": 813, "\uc7ac\uc0ac\uc6a9\ud55c\ub2e4": 807, "\uc7ac\uc0ac\uc6a9\ud560": 804, "\uc7ac\uc791\uc131\ud574\uc11c": 803, "\uc7ac\ud560\ub2f9": 786, "\uc7ac\ud560\ub2f9\uc774": 786, "\uc7ac\ud560\ub2f9\ud55c\ub2e4": 786, "\uc7ac\ud65c\uc6a9\ud574\uc11c": 818, "\uc800\uc790\uac00": 789, "\uc800\uc791\uc744": 789, "\uc800\uc7a5": [782, 798], "\uc800\uc7a5\uacf5\uac04\ub3c4": 793, "\uc800\uc7a5\uacfc": [777, 778], "\uc800\uc7a5\ub418\ub294": [787, 793], "\uc800\uc7a5\ub418\uc5b4": [784, 803, 809, 819], "\uc800\uc7a5\ub418\uc5b4\uc57c": 786, "\uc800\uc7a5\ub41c": [786, 809], "\uc800\uc7a5\ub41c\ub2e4": [784, 785, 786, 792, 794, 814], "\uc800\uc7a5\ub420": [786, 787], "\uc800\uc7a5\uc18c\ub97c": 794, "\uc800\uc7a5\uc18c\uc5d0": 809, "\uc800\uc7a5\uc740": 816, "\uc800\uc7a5\uc774": 799, "\uc800\uc7a5\ud558\uace0": [783, 786, 790, 794], "\uc800\uc7a5\ud558\uae30": [778, 782, 790, 791, 814], "\uc800\uc7a5\ud558\ub294": [782, 784, 786, 787, 794, 797], "\uc800\uc7a5\ud558\ub294\ub370": [777, 786, 793, 802], "\uc800\uc7a5\ud55c\ub2e4": [784, 785, 786, 787, 790, 791, 797], "\uc800\uc7a5\ud560": [778, 786, 787, 791, 799], "\uc801\uac8c": 793, "\uc801\ub2e4": 809, "\uc801\uc6a9\ub418\uace0": 819, "\uc801\uc6a9\ub418\uae30": 818, "\uc801\uc6a9\ub418\ub294": 808, "\uc801\uc6a9\ub418\ub294\ub370": 797, "\uc801\uc6a9\ub418\uc5b4": 817, "\uc801\uc6a9\ub41c\ub2e4": [794, 813], "\uc801\uc6a9\ub429\ub2c8\ub2e4": 803, "\uc801\uc6a9\ud558\uace0": [794, 799, 813], "\uc801\uc6a9\ud558\uae30": [796, 802, 814], "\uc801\uc6a9\ud558\uae30\ub3c4": 812, "\uc801\uc6a9\ud558\ub294": [796, 798, 799], "\uc801\uc6a9\ud55c\ub2e4": [799, 816], "\uc801\uc6a9\ud574\ubcf4\uba74": 816, "\uc801\uc740": [784, 803, 805], "\uc801\uc808\ud55c": [785, 810], "\uc801\ud569\ud558\uc9c0": [782, 790], "\uc804\ub2ec": [795, 808, 809, 811, 813, 814, 815, 817, 819], "\uc804\ub2ec\ub418\ub294": 786, "\uc804\ub2ec\ub41c": [796, 797], "\uc804\ub2ec\uc5d0": [796, 799], "\uc804\ub2ec\uc740": [800, 803, 813, 819], "\uc804\ub2ec\uc744": [796, 797, 800, 806, 810, 817, 819], "\uc804\ub2ec\uc774": [797, 819], "\uc804\ub2ec\ud55c\ub2e4": 807, "\uc804\ub2ec\ud560": 803, "\uc804\ub2ec\ud574\uc11c": [792, 817], "\uc804\ub2ec\ud574\uc57c": [784, 803], "\uc804\ub7b5\uc740": 786, "\uc804\ub7b5\uc744": [802, 803], "\uc804\ubc18\uc801\uc73c\ub85c": 797, "\uc804\ubd80\uc774\ub2e4": 809, "\uc804\uc5d0": [784, 786, 810], "\uc804\uc790\ub294": 784, "\uc804\ucc98\ub9ac": 783, "\uc804\ucc98\ub9ac\uac00": 786, "\uc804\ucc98\ub9ac\ub294": 786, "\uc804\uccb4": [781, 786, 802, 803, 804, 805, 806, 808, 809, 813, 816, 817, 819], "\uc804\uccb4\ub97c": [802, 813], "\uc804\uccb4\uc5d0": 809, "\uc804\ud30c\ub418\uc5b4\uc57c": 809, "\uc804\ud615\uc801\uc778": [781, 787, 812, 813], "\uc804\ud658\ud558\ub294": 803, "\uc808\ub300\ub85c": 784, "\uc808\ub4e4\uc5d0\uc11c": 777, "\uc808\ub4e4\uc5d0\uc11c\ub294": 802, "\uc808\ub85c": 815, "\uc808\uc57d\ud560": [782, 802, 810], "\uc808\uc5d0\uc11c": [781, 802, 816], "\uc808\uc5d0\uc11c\ub294": [781, 783, 790, 796, 803, 813], "\uc808\uc740": [780, 784, 806, 819], "\uc808\uc744": 786, "\uc808\uc758": 783, "\uc808\ucc28\ub294": [781, 802], "\uc808\ucc98\ub85c": 794, "\uc810\uac80\uc740": 813, "\uc810\uc218": 807, "\uc810\uc218\uac00": 818, "\uc810\uc218\ub97c": [804, 807, 816, 818], "\uc810\uc218\ubcf4\ub2e4": 818, "\uc810\uc218\uc640": [807, 818], "\uc810\uc740": [784, 809], "\uc810\uc744": [781, 790, 803, 804, 806, 807, 809, 817], "\uc810\uc774\ub2e4": [784, 786, 804, 807], "\uc811\uadfc": [787, 797], "\uc811\uadfc\uc131\uc744": 781, "\uc811\uadfc\uc744": [784, 787], "\uc811\uadfc\ud558\uae30": [783, 784], "\uc811\uadfc\ud558\ub294": 784, "\uc811\uadfc\ud560": [784, 785, 791, 803], "\uc811\uadfc\ud574\uc11c": 809, "\uc815\ub82c\ud55c\ub2e4": 785, "\uc815\ubcf4": [778, 782, 793], "\uc815\ubcf4\ub4e4\uc744": [781, 786, 817], "\uc815\ubcf4\ub97c": [782, 784, 786, 787, 794, 804, 817, 819], "\uc815\ubcf4\uc640": 804, "\uc815\uc0c1\uc801\uc778": 784, "\uc815\uc218": [786, 793], "\uc815\uc218\ub85c": 794, "\uc815\uc218\ub97c": 793, "\uc815\uc758": [783, 788, 791, 797], "\uc815\uc758\ub294": 819, "\uc815\uc758\ub418\uc5b4": 784, "\uc815\uc758\ub418\uc5c8\ub2e4\uba74": 817, "\uc815\uc758\ub41c": [778, 819], "\uc815\uc758\ub41c\ub2e4": [803, 817], "\uc815\uc758\uc5d0": 788, "\uc815\uc758\ud558\uace0": 777, "\uc815\uc758\ud558\ub098": 778, "\uc815\uc758\ud558\ub294": 784, "\uc815\uc758\ud558\ub294\ub370": 819, "\uc815\uc758\ud55c": [807, 816], "\uc815\uc758\ud55c\ub2e4": [796, 803, 808, 817], "\uc815\uc758\ud560": [803, 807], "\uc815\ucc45\uc740": 785, "\uc815\ucc45\uc744": 785, "\uc815\ud574\uc57c": 787, "\uc815\ud574\uc9c4": [813, 819], "\uc815\ud655\ub3c4": 819, "\uc815\ud655\ud558\uac8c": 784, "\uc815\ud655\ud55c": 802, "\uc81c\uac70\ub418\uc5b4": 808, "\uc81c\uac70\ud558\uae30": 806, "\uc81c\uac70\ud558\ub294": 804, "\uc81c\uac70\ud55c\ub2e4": 797, "\uc81c\uac70\ud588\ub2e4": 809, "\uc81c\uacf1": 786, "\uc81c\uacf5\ub418\ub294": [809, 815], "\uc81c\uacf5\ud558\uae30": [777, 783], "\uc81c\uacf5\ud558\ub294": [778, 786, 804, 809], "\uc81c\uacf5\ud558\ub294\ub370": 790, "\uc81c\uacf5\ud558\uc9c0\ub9cc": 803, "\uc81c\uacf5\ud55c\ub2e4": [780, 781, 782, 783, 784, 785, 786, 787, 788, 790, 793, 794, 797, 802, 803, 807, 809, 810, 816, 819], "\uc81c\uacf5\ud55c\ub2e4\uba74": 790, "\uc81c\uacf5\ud560": 781, "\uc81c\uacf5\ud568": [808, 819], "\uc81c\uacf5\ud574\uc57c": 784, "\uc81c\uacf5\ud574\uc57c\ud55c\ub2e4": 807, "\uc81c\uc548\ud558\ub294": 799, "\uc81c\uc57d": 794, "\uc81c\uc57d\uc774\ub098": 806, "\uc81c\uc678\ud558\uace0\ub294": 819, "\uc81c\uc678\ud558\uba74": [804, 807], "\uc81c\ud55c\uc801\uc778": 806, "\uc870\uac74\uc744": [794, 805], "\uc870\uae08\ub9cc": 783, "\uc870\uc815\uac00\ub2a5": 819, "\uc874\uc7ac\ud558\ub294": [784, 818], "\uc874\uc7ac\ud558\ub294\uc9c0": 818, "\uc874\uc7ac\ud558\uc9c0": [804, 807, 817], "\uc874\uc7ac\ud55c\ub2e4": 811, "\uc874\uc7ac\ud55c\ub2e4\ub294": [780, 804], "\uc874\uc7ac\ud55c\ub2e4\uba74": 779, "\uc874\uc7ac\ud574\uc57c\ud558\uba70": 792, "\uc880\ub354": 812, "\uc885\ub8cc\ub418\uba74": 818, "\uc885\ub958": 817, "\uc885\ub958\ub97c": 817, "\uc885\ub958\uc5d0": 819, "\uc885\ub958\uc758": [780, 781, 783, 808, 813, 814, 817], "\uc885\uc885": [816, 817], "\uc88b\ub2e4": 806, "\uc88b\uc740": 786, "\uc8fc\ub85c": [781, 784], "\uc8fc\ubaa9\ud558\uc790": 806, "\uc8fc\uc11d": 808, "\uc8fc\uc18c": 787, "\uc8fc\uc18c\ub4e4\uc744": 787, "\uc8fc\uc18c\uc774\ub2e4": 787, "\uc8fc\uc5b4\uc84c\uc744": 816, "\uc8fc\uc5b4\uc9c0\uba74": 803, "\uc8fc\uc5b4\uc9c4": [786, 803, 816], "\uc8fc\uc694": [781, 784, 811, 817], "\uc8fc\uc758": 815, "\uc8fc\uc758\ud558\uc790": [806, 808, 817], "\uc900\ub2e4": [784, 805], "\uc900\ube44\ud558\uace0": 786, "\uc900\ube44\ud55c\ub2e4": 817, "\uc904\ub9cc": 786, "\uc904\uc5ec\uc900\ub2e4": 786, "\uc904\uc740": 787, "\uc904\uc774\uae30": 806, "\uc904\uc778": 799, "\uc904\uc77c": 778, "\uc911": 782, "\uc911\uac04": [786, 802], "\uc911\uac04\uc5d0": 797, "\uc911\ubcf5\ub41c": 786, "\uc911\uc2ec\uc758": 788, "\uc911\uc5d0": [784, 785, 787, 800, 808, 819], "\uc911\uc694\ud558\ub2e4": [784, 786], "\uc911\uc694\ud55c": [781, 786, 790, 791], "\uc911\uc758": 793, "\uc911\uc774\ub2e4": 805, "\uc989": [781, 784, 786, 791, 797, 799, 803, 804, 807, 809, 813, 816, 817, 818], "\uc9c0\uae08\uc740": 784, "\uc9c0\ub2c8\uace0": 817, "\uc9c0\uc5b4\ubcf8\ub2e4\uba74": 817, "\uc9c0\uc6d0\ub418\ub294": [797, 804, 809], "\uc9c0\uc6d0\uc740": 797, "\uc9c0\uc6d0\uc744": [786, 810], "\uc9c0\uc6d0\ud558\uace0": [793, 798], "\uc9c0\uc6d0\ud558\uae30": [783, 784, 793, 797], "\uc9c0\uc6d0\ud558\ub294": 810, "\uc9c0\uc6d0\ud558\ub294\ub370": 805, "\uc9c0\uc6d0\ud558\uc9c0": [784, 805], "\uc9c0\uc6d0\ud558\uc9c0\ub9cc": 784, "\uc9c0\uc6d0\ud55c\ub2e4": [783, 784, 785, 786, 793, 797, 802, 805, 807, 809, 817], "\uc9c0\uc6d0\ud568": 805, "\uc9c0\uc815\ub418\uace0": 785, "\uc9c0\uc815\ub418\uba74": 807, "\uc9c0\uc815\ub418\uc5b4\uc57c": 787, "\uc9c0\uc815\ub418\uc9c0": 787, "\uc9c0\uc815\ub41c": 787, "\uc9c0\uc815\ub420": 785, "\uc9c0\uc815\ud558\uae30": [781, 794], "\uc9c0\uc815\ud558\ub294": 781, "\uc9c0\uc815\ud558\ub294\ub370": 786, "\uc9c0\uc815\ud558\uc9c0": 797, "\uc9c0\uc815\ud55c": 794, "\uc9c0\uc815\ud55c\ub2e4": [784, 785, 786, 787, 794], "\uc9c0\uc815\ud560": [784, 787, 804], "\uc9c0\uc815\ud574\uc57c": [785, 812], "\uc9c0\uc815\ud574\uc57c\ud558\uae30": 818, "\uc9c0\uce6d\ud558\ub294": 797, "\uc9c0\ucf1c\ubcf4\uc790": [805, 810], "\uc9c1\uad00\uc801\uc73c\ub85c": 799, "\uc9c1\uc811": [779, 784, 785, 786, 790, 797, 799, 807, 808], "\uc9c4\ub2e4": 783, "\uc9c4\uc785": 803, "\uc9c4\ud589": [805, 817], "\uc9c8\ubb38\uc740": 795, "\uc9d1\uacc4": [797, 800], "\uc9d1\uacc4\ub41c\ub2e4": 814, "\uc9d1\uacc4\ud558\ub294": 814, "\uc9d1\uc911\ud574\uc11c": 781, "\uc9d1\ud55c\uc740": 809, "\uc9d1\ud569": [789, 817], "\uc9d1\ud569\ub418\uc5b4\uc57c": 812, "\uc9d1\ud569\ub4e4\uc5d0": 783, "\uc9d1\ud569\uc5d0": 794, "\uc9d1\ud569\uc73c\ub85c": 789, "\uc9d1\ud569\uc744": [793, 803, 804], "\uc9e7\uac8c": 794, "\ucc28\ub840": 819, "\ucc28\uc6d0": [785, 791, 797, 812], "\ucc28\uc6d0\uacfc": 812, "\ucc28\uc6d0\ub4e4": 812, "\ucc28\uc6d0\ub4e4\uc744": 800, "\ucc28\uc6d0\uc73c\ub85c": 812, "\ucc28\uc6d0\uc740": [791, 799, 812], "\ucc28\uc6d0\uc744": [799, 812], "\ucc28\uc6d0\uc758": 805, "\ucc28\uc6d0\uc774": [799, 817], "\ucc28\uc6d0\uc774\ub780": 812, "\ucc28\uc774\uac00": 817, "\ucc28\uc774\ub97c": 810, "\ucc28\uc774\uc810\uc740": [784, 786, 804, 807, 808, 811, 817], "\ucc28\uc774\uc810\uc774": 804, "\ucc28\uc9c0\ud558\uace0": 805, "\ucc28\uc9c0\ud558\uae30\ub3c4": 799, "\ucc28\uc9c0\ud558\uc9c0": 805, "\ucc38\uace0": [778, 797], "\ucc38\uace0\ud558\uace0\uc790": 784, "\ucc38\uace0\ud558\uba74": 781, "\ucc38\uace0\ud558\uc790": [781, 786, 789, 790, 793, 797, 801, 803, 804, 805, 806, 809, 815, 817, 819], "\ucc38\uace0\ud560": [790, 791, 793, 794], "\ucc38\uc870": 784, "\ucc38\uc870\ub9cc": 790, "\ucc38\uc870\ud558\uae30": 790, "\ucc38\uc870\ud558\uc790": 790, "\ucc3e\ub294\ub2e4": 787, "\ucc3e\uc544\ub0b4\uc57c\ud55c\ub2e4": 817, "\ucc3e\uc544\ub0bc": 813, "\ucc3e\uc544\ubcfc": 809, "\ucc44\ud0dd\ud558\uace0": 783, "\ucc45\uc784\uc744": 783, "\ucc98\ub7fc": [779, 784, 804], "\ucc98\ub9ac": [778, 781], "\ucc98\ub9ac\ub418\uc9c0": 781, "\ucc98\ub9ac\ub97c": 808, "\ucc98\ub9ac\ud558\uace0": 777, "\ucc98\ub9ac\ud558\uae30": 778, "\ucc98\ub9ac\ud558\ub294": [781, 782], "\uccab": [785, 806, 808], "\uccab\ubc88\uc9f8": [786, 791, 803, 804, 806, 809, 813], "\uccab\ubc88\uc9f8\ub294": 804, "\uccab\uc9f8\ub85c": 817, "\uccb4\ud06c": 813, "\uccb4\ud06c\uac00": 813, "\uccb4\ud06c\ud3ec\uc778\ud2b8\ub97c": 790, "\ucd08\uae30\ud654\ub41c\ub2e4": 785, "\ucd08\uae30\ud654\ud558\uae30": 783, "\ucd08\uae30\ud654\ud55c\ub2e4": [784, 812], "\ucd1d": [781, 785], "\ucd5c\ub300": 817, "\ucd5c\uc120\uc758": 805, "\ucd5c\uc18c\ub4e4\uc774": 817, "\ucd5c\uc18c\uc758": 786, "\ucd5c\uc18c\ud55c\uc758": 797, "\ucd5c\uc2e0": 786, "\ucd5c\uc801\uc740": 810, "\ucd5c\uc801\uc774\uc9c0": 786, "\ucd5c\uc801\ud654\ub418\uc5b4": 786, "\ucd5c\uc801\ud654\ub41c": 797, "\ucd5c\uc801\ud654\ub420": 799, "\ucd5c\uc801\ud654\ub4e4\uc744": 799, "\ucd5c\uc801\ud654\ub97c": 813, "\ucd5c\uc801\ud654\ud558\uace0": 799, "\ucd5c\uc801\ud654\ud560": 797, "\ucd5c\uc885": [802, 809], "\ucd94\uac00": [805, 813], "\ucd94\uac00\ub41c": 793, "\ucd94\uac00\ub85c": [781, 786, 794, 799], "\ucd94\uac00\uc801\uc73c\ub85c": [779, 786], "\ucd94\uac00\uc801\uc778": 814, "\ucd94\uac00\ud558\ub294": 781, "\ucd94\uac00\ud55c\ub2e4": 781, "\ucd94\uac00\ud560": [781, 784], "\ucd94\ub860": 802, "\ucd94\ub860\uc5d0": 784, "\ucd94\ub860\uc5d0\uc11c": 786, "\ucd94\ub860\uc740": 806, "\ucd94\ub860\uc744": [783, 806], "\ucd94\ub860\uc758": 806, "\ucd94\ub860\uc774": [786, 802], "\ucd94\uc0c1\ud654\ub97c": 788, "\ucd94\ucc9c": 789, "\ucd94\ucc9c\uc5d0\uc11c": 816, "\ucd94\ucc9c\uc744": 818, "\ucd94\ucd9c\ub420": 779, "\ucd94\ucd9c\uc744": 779, "\ucd94\ucd9c\ud558\uace0": 794, "\ucd94\ucd9c\ud558\uba74": 819, "\ucd94\ucd9c\ud558\uc790": 779, "\ucd94\ucd9c\ud55c\ub2e4": 779, "\ucd94\ucd9c\ud560": 814, "\ucd95\uc18c": [796, 797], "\ucd95\uc57d": [797, 800, 814], "\ucd9c\ub825": [786, 797, 803, 804, 806, 808, 809, 812], "\ucd9c\ub825\uacfc": 804, "\ucd9c\ub825\uc2dc\uc791\ud574\uc11c": 802, "\ucd9c\ub825\uc73c\ub85c": 809, "\ucd9c\ub825\uc73c\ub85c\ub294": 803, "\ucd9c\ub825\uc758": 803, "\ucda9\ubd84\ud558\ub2e4": 806, "\ucda9\ubd84\ud558\uc9c0": 786, "\ucda9\uc871\ud558\uba74": 805, "\ucde8\uae09\ud55c\ub2e4": 813, "\ucde8\ud558\uac8c\ud558\uba74": 816, "\uce58\uc6d0\uc744": 812, "\uce5c\uad6c": 789, "\uce5c\ubaa9": 817, "\uce5c\uc219\ud560": 818, "\uce74\ud14c\uace0\ub9ac\ub85c": 819, "\uce74\ud14c\ub85c\uae30\ub4e4\ub85c": 819, "\uce90\ub178\ub2c8\uceec": 794, "\ucee4\ub110\uc758": 810, "\ucee4\ub2e4\ub780": 817, "\ucee4\ubba4\ub2c8\ud2f0\uc5d0": 817, "\ucee4\ubba4\ub2c8\ud2f0\uc758": 817, "\ucee4\uc11c": 799, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ub41c": 814, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c": 809, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\uc774": 819, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [802, 804, 809], "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\ub294": 802, "\ucee4\uc2a4\ud140": [777, 802, 805, 809, 811, 819], "\ucee4\uc9c8": 786, "\ucee8\ud0dd\uc2a4\ud2b8": 793, "\ucef4\ud30c\uc77c\uacfc": 786, "\ucef4\ud30c\uc77c\uc744": 797, "\ucef4\ud30c\uc77c\ud558\uace0": 786, "\ucef4\ud30c\uc77c\ud55c\ub2e4": 786, "\ucef4\ud3ec\ub10c\ub4dc\ub4e4\uc744": 783, "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uacfc": [783, 817], "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uc744": [783, 788], "\ucef4\ud3ec\ub10c\ud2b8\ub97c": [777, 783, 817], "\ucef4\ud3ec\ub10c\ud2b8\ub9cc": 816, "\ucef4\ud4e8\ud130": 783, "\ucef4\ud4e8\ud130\ub294": [783, 784], "\ucef4\ud4e8\ud130\ub4e4\uc5d0": 783, "\ucef4\ud4e8\ud130\ub4e4\uc758": [783, 786], "\ucef4\ud4e8\ud130\ub97c": 786, "\ucef4\ud4e8\ud130\uc5d0": 784, "\ucef4\ud4e8\ud130\uc5d0\uc11c": [783, 786, 810], "\ucef4\ud4e8\ud305": 797, "\ucef7": 786, "\ucf00\uc774\uc2a4\ub294": 784, "\ucf00\uc774\uc2a4\ub4e4\uc744": 813, "\ucf54\ub4dc": [781, 783, 786, 796, 804, 807, 810, 813, 817], "\ucf54\ub4dc\ub294": [779, 780, 781, 783, 784, 785, 786, 790, 791, 793, 794, 803, 804, 807, 808, 809, 811, 813, 816, 817, 818, 819], "\ucf54\ub4dc\ub3c4": 808, "\ucf54\ub4dc\ub4e4\uacfc": 808, "\ucf54\ub4dc\ub97c": [779, 781, 783, 784, 797], "\ucf54\ub4dc\uc5d0\uc11c": [781, 803], "\ucf54\ub4dc\uc640": [784, 811, 816], "\ucf54\ub4dc\uc758": [781, 813], "\ucf54\ub4dc\uc774\ub2e4": 819, "\ucf54\ub4dc\ucc98\ub7fc": 819, "\ucffc\ub9ac\ud558\ub294": 793, "\ud06c\uac8c": 816, "\ud06c\uae30": 782, "\ud06c\uae30\uac00": [802, 817], "\ud06c\uae30\ub77c\uace0": 815, "\ud06c\uae30\ub97c": [785, 794], "\ud06c\uae30\uc758": 784, "\ud06c\uae30\uc774\uace0": 805, "\ud06c\ub85c\uc2a4": 800, "\ud070": [778, 786, 795, 801, 813, 815, 817, 819], "\ud074\ub798\uc2a4": [777, 809], "\ud074\ub798\uc2a4\ub294": [784, 803], "\ud074\ub798\uc2a4\ub4e4\uc744": 809, "\ud074\ub798\uc2a4\ub97c": [778, 779, 783, 809], "\ud074\ub798\uc2a4\uc5d0": [778, 781, 803, 819], "\ud074\ub798\uc2a4\uc5d0\ub294": 778, "\ud074\ub798\uc2a4\uc5d0\uc11c": 777, "\ud074\ub798\uc2a4\uc774\uace0": 805, "\ud074\ub798\uc2a4\uc774\ub2e4": [778, 784], "\ud074\ub798\uc2a4\uc778": [781, 803], "\ud074\ub7ec\uc2a4\ud130": [783, 787], "\ud074\ub7ec\uc2a4\ud130\uc5d0": [784, 787], "\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c": [783, 784, 786, 787], "\ud074\ub7ec\uc2a4\ud130\uc758": [783, 784, 786, 787], "\ud074\ub7ec\uc2a4\ud130\uc774": 783, "\ud074\ub85c\ubc8c": 787, "\ud074\ub860\ud558\uace0": 786, "\ud074\ub860\ud55c\ub2e4": 786, "\ud0a4\uac12\ub294": 800, "\ud0a4\ub85c": [786, 814], "\ud0c0\uc785": [785, 786, 791, 793, 800, 812, 814], "\ud0c0\uc785\uac04\uc758": 804, "\ud0c0\uc785\uacfc": [784, 785, 794, 804, 807, 816, 819], "\ud0c0\uc785\ub4e4\uacfc": [785, 786, 804, 807, 809, 819], "\ud0c0\uc785\ub4e4\uc5d0": [794, 813, 819], "\ud0c0\uc785\ub4e4\uc640": [807, 809], "\ud0c0\uc785\ub4e4\uc740": 800, "\ud0c0\uc785\ub4e4\uc744": [786, 803, 804, 807, 814], "\ud0c0\uc785\ub4e4\uc758": 786, "\ud0c0\uc785\ub4e4\uc774": 786, "\ud0c0\uc785\ub9cc": 816, "\ud0c0\uc785\ub9cc\uc744": 784, "\ud0c0\uc785\ubcc4": [785, 794], "\ud0c0\uc785\ubcc4\ub85c": [786, 803, 819], "\ud0c0\uc785\uc5d0": [785, 786, 794, 797, 800, 812, 813, 814, 816, 817, 818, 819], "\ud0c0\uc785\uc5d0\uc11c": 785, "\ud0c0\uc785\uc5d0\uc11c\uc758": 786, "\ud0c0\uc785\uc73c\ub85c": [789, 814, 816, 818], "\ud0c0\uc785\uc73c\ub85c\ub294": 812, "\ud0c0\uc785\uc740": [785, 793, 812], "\ud0c0\uc785\uc744": [785, 786, 788, 789, 791, 797, 800, 804, 808, 810, 815, 816, 818], "\ud0c0\uc785\uc758": [785, 786, 788, 789, 794, 800, 803, 804, 816], "\ud0c0\uc785\uc774": [785, 786, 793, 794, 813, 814], "\ud0c0\uc785\uc774\ub098": 785, "\ud0c0\uc785\uc774\ub2e4": 786, "\ud0c0\uc785\uc774\ub77c\uace0": 794, "\ud134\uc11c": 791, "\ud14c\uc2a4\ud06c": 781, "\ud14c\uc2a4\ud06c\ub4e4\uc5d0": 816, "\ud14c\uc2a4\ud06c\ub4e4\uc744": 819, "\ud14c\uc2a4\ud06c\ub97c": [780, 815], "\ud14c\uc2a4\ud06c\uc5d0": 786, "\ud14c\uc2a4\ud06c\uc5d0\ub3c4": 784, "\ud14c\uc2a4\ud06c\uc5d0\uc11c": 781, "\ud14c\uc2a4\ud06c\uc758": 784, "\ud14c\uc2a4\ud2b8": [784, 786, 816, 819], "\ud14c\uc2a4\ud2b8\ub97c": 784, "\ud14c\uc2a4\ud2b8\uc758": 781, "\ud14c\uc774\ube14": 790, "\ud14c\uc785\ub4e4\uc758": 786, "\ud150\uc11c": [785, 792, 793, 797, 811], "\ud150\uc11c\uac00": [784, 791], "\ud150\uc11c\ub294": [784, 791, 810], "\ud150\uc11c\ub4e4\uacfc": [785, 814], "\ud150\uc11c\ub4e4\uc5d0": 794, "\ud150\uc11c\ub4e4\uc744": [784, 813], "\ud150\uc11c\ub4e4\uc758": [781, 786, 804, 807, 808, 819], "\ud150\uc11c\ub85c": 790, "\ud150\uc11c\ub97c": [784, 785, 790, 792, 793, 814], "\ud150\uc11c\uc5d0": 810, "\ud150\uc11c\uc5ec\uc57c\ub9cc": 797, "\ud150\uc11c\uc640": 784, "\ud150\uc11c\uc758": [791, 793], "\ud150\uc11c\uc774\uace0": 808, "\ud15c\ud50c\ub9bf\uc740": 778, "\ud1a0\uc774": 786, "\ud1a0\ud53d\ub4e4\uc744": 802, "\ud1b5\uacc4\ub4e4\uc744": 786, "\ud1b5\uc2e0\uc5d0": 787, "\ud1b5\uc2e0\uc744": [783, 786], "\ud1b5\uc2e0\uc774": 784, "\ud1b5\ud569\ub420": 811, "\ud1b5\ud569\ud558\ub294": [796, 814], "\ud1b5\ud574\uc11c": [784, 785, 786, 790, 797, 803, 806, 807, 814, 818], "\ud1b5\ud574\uc11c\ub294": 803, "\ud234\ub4e4": 783, "\ud234\uc740": 784, "\ud29c\ud1a0\ub9ac\uc5bc": 797, "\ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c": 805, "\ud29c\ud50c": 793, "\ud2b8\ub808\uc774\ub108": [783, 784], "\ud2b8\ub808\uc774\ub108\uac00": 784, "\ud2b8\ub808\uc774\ub108\ub294": 786, "\ud2b8\ub808\uc774\ub108\ub4e4\uc740": [783, 784], "\ud2b8\ub808\uc774\ub108\ub4e4\uc758": 787, "\ud2b8\ub808\uc774\ub108\ub4e4\uc774": 784, "\ud2b8\ub808\uc774\ub108\uc5d0": 787, "\ud2b8\ub808\uc774\ub108\uc5d0\uac8c": [783, 784], "\ud2b8\ub9ac\ud50c": 794, "\ud2b8\uc704\ud130\uc758": 789, "\ud2b9\ubcc4\ud558\uac8c": 809, "\ud2b9\ubcc4\ud55c": [789, 794, 813], "\ud2b9\ubcc4\ud788": 790, "\ud2b9\uc131\uc744": 817, "\ud2b9\uc815": [779, 781, 785, 786, 794, 803, 806, 812, 816], "\ud2b9\uc9d5\uacfc": 793, "\ud2b9\uc9d5\uc744": [800, 817], "\ud2b9\ud788": [783, 794, 806], "\ud2f0\uc555\uc5d0": 816, "\ud2f0\uc785\uc5d0": 786, "\ud301\uc744": 802, "\ud30c\ub77c\uba54\ud130": [811, 812], "\ud30c\ub77c\uba54\ud130\ub4e4": 814, "\ud30c\ub77c\uba54\ud130\ub4e4\uacfc": 812, "\ud30c\ub77c\uba54\ud130\ub4e4\ub85c\uc368": 814, "\ud30c\ub77c\uba54\ud130\ub4e4\uc740": 797, "\ud30c\ub77c\uba54\ud130\ub4e4\uc744": [784, 800, 810], "\ud30c\ub77c\uba54\ud130\ub85c": [799, 813], "\ud30c\ub77c\uba54\ud130\ub97c": [781, 797, 803], "\ud30c\ub77c\uba54\ud130\uc774\ub2e4": 818, "\ud30c\ub77c\ubbf8\ud130\ub4e4\uc740": 797, "\ud30c\ub77c\ubbf8\ud130\ub85c": 797, "\ud30c\uc2f1\ud558\uace0": 794, "\ud30c\uc2f1\ud558\ub294": 790, "\ud30c\uc774\uc120": 793, "\ud30c\uc774\ud504\ub77c\uc778": [795, 815, 817, 819], "\ud30c\uc774\ud504\ub77c\uc778\uc5d0": 778, "\ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c": 778, "\ud30c\uc774\ud504\ub77c\uc778\uc740": 817, "\ud30c\uc774\ud504\ub77c\uc778\uc744": [777, 778, 802], "\ud30c\uc774\ud504\ub77c\uc778\uc758": 777, "\ud30c\uc774\ud504\ub77c\uc778\uc774": [777, 778], "\ud30c\uc77c": [779, 786, 787, 816, 819], "\ud30c\uc77c\ub4e4": [786, 787], "\ud30c\uc77c\ub4e4\ub85c": 781, "\ud30c\uc77c\ub4e4\uc5d0": 786, "\ud30c\uc77c\ub4e4\uc740": [779, 786], "\ud30c\uc77c\ub4e4\uc744": [779, 794], "\ud30c\uc77c\ub4e4\uc758": [786, 787], "\ud30c\uc77c\ub4e4\uc774": 786, "\ud30c\uc77c\ub85c": [781, 786], "\ud30c\uc77c\ub85c\uc11c": 786, "\ud30c\uc77c\uc5d0": [779, 786, 794], "\ud30c\uc77c\uc5d0\uc11c": 786, "\ud30c\uc77c\uc740": 786, "\ud30c\uc77c\uc744": [779, 784, 786, 787], "\ud30c\uc77c\uc758": 786, "\ud30c\uc77c\uc774": [779, 786, 787], "\ud30c\uc77c\uc774\ub2e4": 786, "\ud30c\uccd0": 778, "\ud30c\ud0c0\uc154\ub2dd": 786, "\ud30c\ud0c0\uc158\uacfc": 784, "\ud30c\ud0c0\uc158\ub41c": 787, "\ud30c\ud0c0\uc158\uc5d0": 786, "\ud30c\ud130\uc158\ud558\uae30": 784, "\ud30c\ud2b8\ub85c": 800, "\ud30c\ud2f0\uc154\ub2dd": [778, 784], "\ud30c\ud2f0\uc154\ub2dd\uc740": 786, "\ud30c\ud2f0\uc154\ub2dd\uc744": 786, "\ud30c\ud2f0\uc154\ub2dd\uc758": 786, "\ud30c\ud2f0\uc154\ub2dd\ud55c\ub2e4": 786, "\ud30c\ud2f0\uc154\ub2dd\ud560": 786, "\ud30c\ud2f0\uc158": [783, 784, 785, 786, 787], "\ud30c\ud2f0\uc158\uacfc": 786, "\ud30c\ud2f0\uc158\ub418\uc5b4": 784, "\ud30c\ud2f0\uc158\ub41c": [783, 784, 786, 787], "\ud30c\ud2f0\uc158\ub4e4\uc5d0": 786, "\ud30c\ud2f0\uc158\ub4e4\uc744": [786, 787], "\ud30c\ud2f0\uc158\ub4e4\uc758": 786, "\ud30c\ud2f0\uc158\ub4e4\uc774": [786, 787], "\ud30c\ud2f0\uc158\uc5d0": 786, "\ud30c\ud2f0\uc158\uc5d0\uc11c": 784, "\ud30c\ud2f0\uc158\uc73c\ub85c": 786, "\ud30c\ud2f0\uc158\uc740": 786, "\ud30c\ud2f0\uc158\uc744": [784, 785, 786, 787], "\ud30c\ud2f0\uc158\uc758": [784, 786], "\ud30c\ud2f0\uc158\uc774": [786, 787], "\ud30c\ud2f0\uc158\uc774\ub2e4": 784, "\ud30c\ud2f0\uc158\ud558\uae30": 786, "\ud310\ub9e4\uc790": 789, "\ud310\ub9e4\ud568": 789, "\ud314\ub85c\uc6b0": 789, "\ud328\uc2a4": 810, "\ud328\uc2a4\uc6cc\ub4dc": 787, "\ud328\ud0a4\uc9c0": 780, "\ud328\ud0a4\uc9c0\ub4e4\uc744": 794, "\ud328\ud0a4\uc9c0\ub97c": [777, 786], "\ud398\uc774\ud37c\uc5d0\uc11c\ub294": 812, "\ud3b8\ub9ac\ud558\uace0": 778, "\ud3c9\uac00": [806, 816], "\ud3c9\uac00\ud558\ub294": 819, "\ud3c9\uade0": 817, "\ud3c9\uade0\uc744": 817, "\ud3ec\uba67\ub4e4\uc5d0\ub3c4": 794, "\ud3ec\uba67\ub4e4\uc774": 790, "\ud3ec\uba67\uc73c\ub85c": [786, 790, 794], "\ud3ec\uba67\uc744": 793, "\ud3ec\uba67\uc758": 810, "\ud3ec\uba67\uc774": 779, "\ud3ec\uba67\uc778": 779, "\ud3ec\ud2b8": 787, "\ud3ec\ud568": [783, 810], "\ud3ec\ud568\ub418\uc5b4": [786, 819], "\ud3ec\ud568\ub41c": 786, "\ud3ec\ud568\ub41c\ub2e4\ub294": 786, "\ud3ec\ud568\ub420": 803, "\ud3ec\ud568\ud558\uace0": [781, 783, 786, 803, 811], "\ud3ec\ud568\ud558\ub294": 803, "\ud3ec\ud568\ud558\ub294\ub370": 786, "\ud3ec\ud568\ud558\uc9c0": [803, 816], "\ud3ec\ud568\ud558\uc9c0\ub9cc": 803, "\ud3ec\ud568\ud55c": [789, 803, 807], "\ud3ec\ud568\ud55c\ub2e4": [786, 814], "\ud3ec\ud568\ud560": 803, "\ud3ec\ud568\ud574\uc57c": 803, "\ud3f4\ub354\ub294": 786, "\ud45c\uc2dc\ub41c": 803, "\ud45c\uc900": [777, 781], "\ud45c\uc900\uc801\uc778": 778, "\ud45c\ud604\ub418\uace0": 806, "\ud45c\ud604\ub418\uba70": 788, "\ud45c\ud604\ub418\uc5b4\uc57c": 818, "\ud45c\ud604\ub41c\ub2e4": [793, 794, 813, 814], "\ud45c\ud604\uc744": 819, "\ud45c\ud604\ud558\uace0": 789, "\ud45c\ud604\ud558\uae30": [789, 793, 797, 800], "\ud45c\ud604\ud558\ub294": [786, 789, 816], "\ud45c\ud604\ud558\ub294\ub370": 818, "\ud45c\ud604\ud558\uba74": 797, "\ud45c\ud604\ud560": 789, "\ud48d\ubd80\ud55c": 817, "\ud504\ub798\ud504\uc5d0\uc11c": 803, "\ud504\ub808\uc784\uc6cc\ud06c": 811, "\ud504\ub808\uc784\uc6cc\ud06c\uac00": 790, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0": 811, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c": 803, "\ud504\ub808\uc784\uc6cc\ud06c\uc758": [784, 794, 811], "\ud504\ub85c\uadf8\ub798\ubc0d": 788, "\ud504\ub85c\uc138\uc2a4": [784, 817], "\ud504\ub85c\uc138\uc2a4\ub294": [783, 784, 786, 802], "\ud504\ub85c\uc138\uc2a4\ub41c": 782, "\ud504\ub85c\uc138\uc2a4\ub4e4\uacfc\uc758": 784, "\ud504\ub85c\uc138\uc2a4\ub4e4\uc740": [783, 784], "\ud504\ub85c\uc138\uc2a4\ub4e4\uc744": [783, 784], "\ud504\ub85c\uc138\uc2a4\ub97c": [783, 784, 786, 805, 817], "\ud504\ub85c\uc138\uc2a4\ub9cc": 784, "\ud504\ub85c\uc138\uc2a4\uc5d0": 784, "\ud504\ub85c\uc138\uc2a4\uc5d0\uc11c": 784, "\ud504\ub85c\uc138\uc2a4\uc758": [784, 787], "\ud504\ub85c\uc138\uc2f1": [777, 782], "\ud504\ub85c\uc138\uc2f1\ub418\uc5b4": 815, "\ud504\ub85c\uc138\uc2f1\ub41c": 782, "\ud504\ub85c\uc138\uc2f1\uc758": 781, "\ud504\ub85c\uc138\uc2f1\ud558\uace0": 778, "\ud504\ub85c\uc138\uc2f1\ud558\ub294": [777, 780, 781], "\ud504\ub85c\ud1a0\ud0c0\uc785": 793, "\ud504\ub85c\ud2f0\uc5b4\uac00": 803, "\ud504\ub85c\ud37c\ud2f0\ub4e4\uc744": 781, "\ud504\ub85c\ud37c\ud2f0\ub97c": 781, "\ud504\ub860\ud2f0\uc5b4": 803, "\ud504\ub860\ud2f0\uc5b4\uac00": 803, "\ud504\ub860\ud2f0\uc5b4\ub294": 803, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uacfc": 803, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uc744": 803, "\ud504\ub860\ud2f0\uc5b4\ub85c": 803, "\ud504\ub860\ud2f0\uc5b4\ub97c": 803, "\ud504\ub860\ud2f0\uc5b4\uc5d0\uc11c": 803, "\ud504\ub860\ud2f0\uc5b4\uc758": 803, "\ud504\ub860\ud2f0\uc5b4\uc774\uace0": 803, "\ud53c\ucc98": [788, 790, 792, 794, 797, 799, 812, 817, 819], "\ud53c\ucc98\uac00": [791, 794, 809], "\ud53c\ucc98\ub294": 791, "\ud53c\ucc98\ub4e4\uacfc": 788, "\ud53c\ucc98\ub4e4\ub9cc": 791, "\ud53c\ucc98\ub4e4\uc740": 791, "\ud53c\ucc98\ub4e4\uc744": [789, 790, 794, 804, 809], "\ud53c\ucc98\ub77c\uace0": 796, "\ud53c\ucc98\ub85c": [791, 797, 816], "\ud53c\ucc98\ub97c": [783, 791, 796, 797, 803, 808, 809], "\ud53c\ucc98\ub9cc": 809, "\ud53c\ucc98\uc5d0": 799, "\ud53c\ucc98\uc640": [796, 797], "\ud53c\ucc98\uc758": [797, 808], "\ud53c\ucc98\uc774\uace0": [796, 813], "\ud53c\ucc98\uc774\ub2e4": 813, "\ud53c\uccd0": [778, 783, 784, 786, 792, 817, 819], "\ud53c\uccd0\uac00": [794, 808], "\ud53c\uccd0\ub294": [791, 803, 808, 814, 817], "\ud53c\uccd0\ub3c4": [786, 791, 819], "\ud53c\uccd0\ub4e4": [781, 809, 817], "\ud53c\uccd0\ub4e4\uacfc": [786, 817], "\ud53c\uccd0\ub4e4\ub85c\ubd80\ud130": 808, "\ud53c\uccd0\ub4e4\ub9cc": 784, "\ud53c\uccd0\ub4e4\uc5d0": [810, 816, 817], "\ud53c\uccd0\ub4e4\uc740": [797, 809, 815], "\ud53c\uccd0\ub4e4\uc744": [784, 786, 791, 794, 803, 804, 805, 807, 809, 817], "\ud53c\uccd0\ub4e4\uc758": 816, "\ud53c\uccd0\ub4e4\uc774": [804, 805, 809, 815], "\ud53c\uccd0\ub85c": 798, "\ud53c\uccd0\ub97c": [791, 794, 797, 798, 799, 802, 805, 808, 813, 817, 819], "\ud53c\uccd0\uc5d0": [799, 803, 810], "\ud53c\uccd0\uc640": [798, 799, 813], "\ud53c\uccd0\uc758": [799, 808, 819], "\ud53c\uccd0\uc774\ub2e4": 817, "\ud53c\ud558\ub294": 799, "\ud53c\ud560": 790, "\ud544\ub4dc": 797, "\ud544\ub4dc\ub294": 786, "\ud544\ub4dc\ub4e4\ub85c": 786, "\ud544\ub4dc\ub4e4\uc740": 786, "\ud544\ub4dc\ub4e4\uc744": 786, "\ud544\ub4dc\ub4e4\uc774\ub2e4": 786, "\ud544\ub4dc\ub97c": 786, "\ud544\ub4dc\uc5d0": [781, 786, 797], "\ud544\ub4dc\uc778": 786, "\ud544\uc694": 813, "\ud544\uc694\uac00": [786, 794, 799, 802, 803, 806], "\ud544\uc694\ub294": 784, "\ud544\uc694\ub85c": [784, 786], "\ud544\uc694\ub85c\ud558\uae30": 806, "\ud544\uc694\ud558\uace0": [802, 803], "\ud544\uc694\ud558\ub2e4": [784, 786, 803, 804, 808, 809, 816, 819], "\ud544\uc694\ud558\uc9c0": 794, "\ud544\uc694\ud55c": [778, 788, 802, 809, 811], "\ud544\uc694\ud55c\ub370": 806, "\ud544\uc694\ud55c\uc9c0": 809, "\ud558\uac70\ub098": 802, "\ud558\uac8c\ub41c\ub2e4": 816, "\ud558\uace0": [793, 801, 803, 804, 816], "\ud558\uae30": [781, 783, 794, 801, 803, 809, 817], "\ud558\ub098\uac00": [800, 819], "\ud558\ub098\ub294": [784, 793, 797, 799], "\ud558\ub098\ub85c": 784, "\ud558\ub098\ub85c\uc11c": 784, "\ud558\ub098\ub97c": [808, 819], "\ud558\ub098\uc529": 809, "\ud558\ub098\uc5d0\uc11c": 787, "\ud558\ub098\uc758": [781, 784, 786, 787, 794, 802, 806, 808, 813, 816, 817, 818], "\ud558\ub294": [778, 783, 784, 786, 797, 804, 805, 809, 810, 818], "\ud558\ub294\ub370": 803, "\ud558\ub294\uc9c0": 786, "\ud558\ub294\uc9c0\ub97c": [809, 812], "\ud558\uba70": 793, "\ud558\uba74": [803, 816], "\ud558\uba74\ub418\uae30": 807, "\ud558\uba74\ub41c\ub2e4": 803, "\ud558\uba74\uc11c": [783, 809], "\ud558\uc774\ub808\ubca8": 797, "\ud558\uc774\ud37c": 818, "\ud558\uc790": [778, 796], "\ud558\uc9c0\ub9cc": [781, 785, 786, 789, 793, 803, 806, 813], "\ud559\uc2b5": [784, 786, 795, 801, 803, 806, 813, 815], "\ud559\uc2b5\uacfc": [783, 802], "\ud559\uc2b5\ub420": 807, "\ud559\uc2b5\uc2dc": 786, "\ud559\uc2b5\uc2dc\ud0a4\ub294": [813, 818], "\ud559\uc2b5\uc5d0": [781, 783, 787, 806, 810], "\ud559\uc2b5\uc5d0\ub3c4": 809, "\ud559\uc2b5\uc5d0\uc11c": [801, 809], "\ud559\uc2b5\uc5d0\uc11c\ub294": [784, 785], "\ud559\uc2b5\uc740": [783, 810, 819], "\ud559\uc2b5\uc744": [783, 784, 785, 787, 802, 809, 810, 817], "\ud559\uc2b5\uc758": [813, 817], "\ud559\uc2b5\uc774": [781, 786, 787, 809, 818], "\ud559\uc2b5\uc774\ub2e4": 818, "\ud559\uc2b5\ud558\uae30": [783, 784, 795, 802, 817], "\ud559\uc2b5\ud558\ub294": [783, 802, 804, 809, 815], "\ud559\uc2b5\ud558\ub294\ub370": [802, 806], "\ud559\uc2b5\ud560": [804, 810, 812, 817], "\ud55c": [780, 783, 784, 785, 786, 787, 791, 794, 808, 814, 818, 819], "\ud55c\uac00\uc9c0": 797, "\ud55c\uac1c\uac00": 817, "\ud55c\uac1c\ub97c": 810, "\ud55c\uac1c\uc529": 817, "\ud55c\uac1c\uc5d0": 803, "\ud55c\uac1c\uc758": [780, 783, 786, 791, 794, 797, 817], "\ud55c\uae00": 795, "\ud55c\ub2e4": [779, 781, 783, 784, 785, 786, 787, 791, 793, 794, 797, 799, 800, 803, 804, 807, 808, 809, 810, 812, 813, 814, 816, 818], "\ud55c\ub2e4\uba74": [804, 816], "\ud55c\ubc88\uc5d0": 806, "\ud55c\ubc88\uc758": 817, "\ud560": [784, 786, 787, 790, 802, 803, 804, 809, 818], "\ud560\ub2f9\ub418\uc5b4": [786, 819], "\ud560\ub2f9\ub418\uc5c8\ub2e4\uba74": 786, "\ud560\ub2f9\ub41c": 786, "\ud560\ub2f9\ub41c\ub2e4": 786, "\ud560\ub2f9\uc73c\ub85c": 791, "\ud560\ub2f9\uc744": 785, "\ud560\ub2f9\ud558\ub294": 791, "\ud560\ub2f9\ud558\uc9c0": 786, "\ud560\ub2f9\ud55c": 786, "\ud560\ub2f9\ud560": 784, "\ud560\ub2f9\ud574\uc57c": 784, "\ud560\uc9c0\ub97c": 785, "\ud568\uaed8": [783, 784, 786, 790, 792, 799, 804, 819], "\ud568\uc218": [781, 793, 794, 796, 799, 810, 811, 819], "\ud568\uc218\uac00": [784, 797, 818], "\ud568\uc218\ub294": [784, 797, 803, 807, 812, 813, 814, 816, 817], "\ud568\uc218\ub4e4": [778, 805], "\ud568\uc218\ub4e4\uacfc": 797, "\ud568\uc218\ub4e4\ub85c": 813, "\ud568\uc218\ub4e4\uc5d0": 797, "\ud568\uc218\ub4e4\uc740": [790, 797, 805, 817], "\ud568\uc218\ub4e4\uc744": [784, 797], "\ud568\uc218\ub4e4\uc774": 803, "\ud568\uc218\ub85c": [779, 797, 816, 817, 818], "\ud568\uc218\ub85c\ub294": 797, "\ud568\uc218\ub97c": [778, 779, 782, 793, 797, 799, 803, 807, 808, 812, 813, 814, 816], "\ud568\uc218\uc548\uc5d0": 817, "\ud568\uc218\uc5d0": 781, "\ud568\uc218\uc5d0\uc11c": [781, 798, 811, 817], "\ud568\uc218\uc5d0\uc11c\uc758": 811, "\ud568\uc218\uc640": 799, "\ud568\uc218\uc758": [781, 797, 803, 812, 813], "\ud568\uc218\uc774\uace0": 803, "\ud568\uc218\uc774\ub2e4": [797, 803, 807, 812, 813, 814], "\ud569": 817, "\ud569\uc0b0\ud558\ub294": 817, "\ud569\uc740": 799, "\ud569\uccd0\uc11c": [796, 817], "\ud569\uccd0\uc57c\ud55c\ub2e4": [803, 809], "\ud569\uccd0\uc9c0\ub294\uc9c0\uc5d0": 806, "\ud569\ucce4\ub294\ub370": 797, "\ud569\uce58\uace0": 817, "\ud569\uce58\ub294": 800, "\ud569\uce58\ub294\ub370": 803, "\ud569\uce5c": 816, "\ud569\uce5c\ub2e4": 794, "\ud569\ud558\ub294": [797, 819], "\ud569\ud574\uc11c": 805, "\ud56d\uc0c1": [786, 790, 797, 803, 813], "\ud574\uacb0\ud558\uae30": 810, "\ud574\ub2f9": [787, 816, 819], "\ud574\ub2f9\ud558\ub294": [793, 809], "\ud574\ub2f9\ud55c\ub2e4": 794, "\ud574\uc11c": [784, 803], "\ud574\uc57c\ud55c\ub2e4": [808, 817], "\ud574\uc5d0": 789, "\ud574\uc8fc\uae30": 797, "\ud574\uc8fc\ub294": [779, 807], "\ud574\uc900\ub2e4": [783, 784, 809], "\ud575\uc2ec": 788, "\ud588\ub2e4\uba74": 789, "\ud588\uc73c\ub2c8": 808, "\ud589": [784, 786, 791], "\ud589\ub4e4": 808, "\ud589\ub82c\uacfc": 790, "\ud589\ub82c\uc744": 790, "\ud589\ub82c\uc758": 799, "\ud589\uc73c\ub85c": 808, "\ud589\uc740": 786, "\ud589\uc758": [784, 808], "\ud5a5\uc0c1\uc2dc\ucf1c\uc11c": 781, "\ud5a5\uc0c1\uc744": 805, "\ud5a5\uc0c1\ud558\uace0": 810, "\ud5a5\ud6c4": 786, "\ud5c8\uc6a9\ub41c\ub2e4": 791, "\ud5c8\uc6a9\ud55c\ub2e4": 810, "\ud5e4\ud14c\ub85c\uadf8\ub798\ud504\ub294": 800, "\ud604\uc0c1\uc744": 790, "\ud604\uc7ac": [783, 784], "\ud604\uc7ac\ub294": [784, 805], "\ud611\uccd0\uc9c4": 817, "\ud615\uc2dd\uc73c\ub85c": 786, "\ud615\ud0dc\ub85c": [783, 786, 789, 790, 797], "\ud615\ud0dc\uc758": [790, 794], "\ud615\ud0dc\uc774\uace0": 786, "\ud638\ucd9c\ub418\uace0": 814, "\ud638\ucd9c\ub418\uc5b4\uc57c": 784, "\ud638\ucd9c\ub41c\ub2e4": 784, "\ud638\ucd9c\ub420": 812, "\ud638\ucd9c\ub85c": [797, 812], "\ud638\ucd9c\uc2dc": 799, "\ud638\ucd9c\uc774": 797, "\ud638\ucd9c\ud558\uae30": 784, "\ud638\ucd9c\ud558\ub294": [797, 801], "\ud638\ucd9c\ud558\uc9c0": 797, "\ud638\ucd9c\ud55c": 784, "\ud638\ucd9c\ud55c\ub2e4": 817, "\ud638\ucd9c\ud560": [794, 797, 804, 807], "\ud638\ucd9c\ud574\uc57c": 799, "\ud638\ud658\ub418\ub294": [802, 815, 817], "\ud638\ud658\ub41c\ub2e4": 810, "\ud655\ub960": 807, "\ud655\ub960\ub4e4": 819, "\ud655\ub960\uc5d0": 803, "\ud655\uc778\ub418\uba74": 813, "\ud655\uc778\ud558\ub294": [779, 813], "\ud655\uc778\ud558\uc790": [781, 807], "\ud655\uc778\ud55c\ub2e4": 804, "\ud655\uc778\ud560": [781, 819], "\ud655\uc7a5\ud558\ub294": [813, 818], "\ud655\uc7a5\ud574\uc11c": 786, "\ud658\uacbd": 786, "\ud658\uc601\ud55c\ub2e4": 811, "\ud65c\uc131\ud654": [810, 813], "\ud65c\uc131\ud654\uc2dc\ud0ac": 797, "\ud65c\uc131\ud654\ud558\uba74": 810, "\ud65c\uc131\ud654\ud574\uc11c": 786, "\ud65c\uc6a9\ud558\uae30": [810, 813], "\ud65c\uc6a9\ud558\ub294": 799, "\ud65c\uc6a9\ud55c": 819, "\ud65c\uc6a9\ud55c\ub2e4": 819, "\ud65c\uc6a9\ud560": 819, "\ud65c\uc6a9\ud574\uc11c": 786, "\ud68c": 819, "\ud68c\uc18c": 790, "\ud6a8\uacfc\uc801\uc73c\ub85c": 817, "\ud6a8\uc728\uc801\uc73c\ub85c": [793, 796], "\ud6a8\uc728\uc801\uc774\uace0": 810, "\ud6a8\uc728\uc801\uc774\ub2e4": 782, "\ud6a8\uc728\uc801\uc778": [796, 808, 813], "\ud6a8\uc728\uc801\uc778\ub370": 799, "\ud6c4": [786, 799, 801, 802, 809, 817], "\ud6c4\uc5d0": [781, 803], "\ud6c4\uc5d0\ub294": 813, "\ud6c4\uc758": [781, 786], "\ud6c4\uc790\uac00": 799, "\ud6c4\uc790\ub294": 784, "\ud6e8\uc52c": [799, 802], "\ud754\ud558\uac8c": 798, "\ud754\ud55c": 797, "\ud754\ud788": [789, 801, 812, 816, 817], "\ud76c\uc18c\ud589\ub82c\uacfc": 790, "\ud788\ub4e0": 819, "\ud835\udc3e": 827}, "titles": ["dgl", "dgl.DGLGraph", "dgl.data", "dgl.dataloading", "dgl.distributed", "dgl.function", "dgl.geometry", "\ud83c\udd95 dgl.graphbolt", "dgl.multiprocessing", "dgl.ops", "dgl.optim", "dgl.sampling", "dgl.sparse", "API Reference", "Benchmark the performance of KNN algorithms", "dgl.nn (MXNet)", "dgl.nn (PyTorch)", "dgl.nn (TensorFlow)", "dgl.nn.functional", "dgl.transforms", "User-defined Functions", "Contribute to DGL", "DGL Foreign Function Interface (FFI)", "Environment Variables", "Frequently Asked Questions (FAQ)", "&lt;no title&gt;", "dgl.DGLGraph.__getitem__", "dgl.DGLGraph.add_edges", "dgl.DGLGraph.add_nodes", "dgl.DGLGraph.add_self_loop", "dgl.DGLGraph.adj", "dgl.DGLGraph.adj_external", "dgl.DGLGraph.adj_tensors", "dgl.DGLGraph.adjacency_matrix", "dgl.DGLGraph.apply_edges", "dgl.DGLGraph.apply_nodes", "dgl.DGLGraph.batch_num_edges", "dgl.DGLGraph.batch_num_nodes", "dgl.DGLGraph.batch_size", "dgl.DGLGraph.canonical_etypes", "dgl.DGLGraph.cpu", "dgl.DGLGraph.create_formats_", "dgl.DGLGraph.device", "dgl.DGLGraph.dstdata", "dgl.DGLGraph.dstnodes", "dgl.DGLGraph.dsttypes", "dgl.DGLGraph.edata", "dgl.DGLGraph.edge_attr_schemes", "dgl.DGLGraph.edge_ids", "dgl.DGLGraph.edge_subgraph", "dgl.DGLGraph.edge_type_subgraph", "dgl.DGLGraph.edges", "dgl.DGLGraph.etypes", "dgl.DGLGraph.filter_edges", "dgl.DGLGraph.filter_nodes", "dgl.DGLGraph.find_edges", "dgl.DGLGraph.formats", "dgl.DGLGraph.has_edges_between", "dgl.DGLGraph.has_nodes", "dgl.DGLGraph.idtype", "dgl.DGLGraph.in_degrees", "dgl.DGLGraph.in_edges", "dgl.DGLGraph.inc", "dgl.DGLGraph.incidence_matrix", "dgl.DGLGraph.int", "dgl.DGLGraph.is_homogeneous", "dgl.DGLGraph.is_multigraph", "dgl.DGLGraph.is_pinned", "dgl.DGLGraph.is_unibipartite", "dgl.DGLGraph.line_graph", "dgl.DGLGraph.local_scope", "dgl.DGLGraph.long", "dgl.DGLGraph.metagraph", "dgl.DGLGraph.multi_update_all", "dgl.DGLGraph.ndata", "dgl.DGLGraph.node_attr_schemes", "dgl.DGLGraph.node_type_subgraph", "dgl.DGLGraph.nodes", "dgl.DGLGraph.ntypes", "dgl.DGLGraph.num_dst_nodes", "dgl.DGLGraph.num_edges", "dgl.DGLGraph.num_nodes", "dgl.DGLGraph.num_src_nodes", "dgl.DGLGraph.number_of_dst_nodes", "dgl.DGLGraph.number_of_edges", "dgl.DGLGraph.number_of_nodes", "dgl.DGLGraph.number_of_src_nodes", "dgl.DGLGraph.out_degrees", "dgl.DGLGraph.out_edges", "dgl.DGLGraph.pin_memory_", "dgl.DGLGraph.predecessors", "dgl.DGLGraph.prop_edges", "dgl.DGLGraph.prop_nodes", "dgl.DGLGraph.pull", "dgl.DGLGraph.push", "dgl.DGLGraph.remove_edges", "dgl.DGLGraph.remove_nodes", "dgl.DGLGraph.remove_self_loop", "dgl.DGLGraph.reorder_graph", "dgl.DGLGraph.reverse", "dgl.DGLGraph.send_and_recv", "dgl.DGLGraph.set_batch_num_edges", "dgl.DGLGraph.set_batch_num_nodes", "dgl.DGLGraph.srcdata", "dgl.DGLGraph.srcnodes", "dgl.DGLGraph.srctypes", "dgl.DGLGraph.subgraph", "dgl.DGLGraph.successors", "dgl.DGLGraph.to", "dgl.DGLGraph.to_canonical_etype", "dgl.DGLGraph.to_cugraph", "dgl.DGLGraph.to_simple", "dgl.DGLGraph.unpin_memory_", "dgl.DGLGraph.update_all", "dgl.add_edges", "dgl.add_nodes", "dgl.add_reverse_edges", "dgl.add_self_loop", "dgl.adj_product_graph", "dgl.adj_sum_graph", "dgl.adjusted_homophily", "dgl.apply_each", "dgl.batch", "dgl.bfs_edges_generator", "dgl.bfs_nodes_generator", "dgl.bipartite_from_networkx", "dgl.bipartite_from_scipy", "dgl.block_to_graph", "dgl.broadcast_edges", "dgl.broadcast_nodes", "dgl.compact_graphs", "dgl.create_block", "AIFBDataset", "AMDataset", "ActorDataset", "AmazonCoBuyComputerDataset", "AmazonCoBuyPhotoDataset", "AmazonRatingsDataset", "AsGraphPredDataset", "AsLinkPredDataset", "AsNodePredDataset", "BA2MotifDataset", "BACommunityDataset", "BAShapeDataset", "BGSDataset", "BitcoinOTCDataset", "CIFAR10SuperPixelDataset", "CLUSTERDataset", "CSVDataset", "ChameleonDataset", "CiteseerGraphDataset", "CoauthorCSDataset", "CoauthorPhysicsDataset", "CoraFullDataset", "CoraGraphDataset", "CornellDataset", "DGLDataset", "FB15k237Dataset", "FB15kDataset", "FakeNewsDataset", "FlickrDataset", "FraudAmazonDataset", "FraudDataset", "FraudYelpDataset", "GDELTDataset", "GINDataset", "ICEWS18Dataset", "KarateClubDataset", "LegacyTUDataset", "MNISTSuperPixelDataset", "MUTAGDataset", "MinesweeperDataset", "MiniGCDataset", "MovieLensDataset", "PATTERNDataset", "PPIDataset", "PubmedGraphDataset", "QM7bDataset", "QM9Dataset", "QM9EdgeDataset", "QuestionsDataset", "RedditDataset", "RomanEmpireDataset", "SBMMixtureDataset", "SSTDataset", "SquirrelDataset", "TUDataset", "TexasDataset", "TolokersDataset", "TreeCycleDataset", "TreeGridDataset", "WN18Dataset", "WikiCSDataset", "WisconsinDataset", "YelpDataset", "ZINCDataset", "Subset", "add_node_property_split", "add_nodepred_split", "check_sha1", "download", "extract_archive", "get_download_dir", "load_info", "load_labels", "mask_nodes_by_property", "save_info", "split_dataset", "dgl.dataloading.BlockSampler", "ClusterGCNSampler", "DataLoader", "GraphDataLoader", "LaborSampler", "MultiLayerFullNeighborSampler", "NeighborSampler", "SAINTSampler", "Sampler", "ShaDowKHopSampler", "dgl.dataloading.as_edge_prediction_sampler", "LazyFeature", "set_dst_lazy_features", "set_edge_lazy_features", "set_node_lazy_features", "set_src_lazy_features", "GlobalUniform", "PerSourceUniform", "Uniform", "dgl.dfs_edges_generator", "dgl.dfs_labeled_edges_generator", "dgl.distributed.dgl_partition_to_graphbolt", "dgl.distributed.edge_split", "dgl.distributed.find_edges", "dgl.distributed.in_subgraph", "dgl.distributed.initialize", "dgl.distributed.load_partition", "dgl.distributed.load_partition_book", "dgl.distributed.load_partition_feats", "dgl.distributed.node_split", "dgl.distributed.partition_graph", "dgl.distributed.sample_etype_neighbors", "dgl.distributed.sample_neighbors", "dgl.double_radius_node_labeling", "dgl.edge_homophily", "dgl.edge_label_informativeness", "dgl.edge_subgraph", "dgl.edge_type_subgraph", "dgl.from_cugraph", "dgl.from_networkx", "dgl.from_scipy", "dgl.function.copy_e", "dgl.function.copy_u", "dgl.function.e_add_u", "dgl.function.e_add_v", "dgl.function.e_div_u", "dgl.function.e_div_v", "dgl.function.e_dot_u", "dgl.function.e_dot_v", "dgl.function.e_mul_u", "dgl.function.e_mul_v", "dgl.function.e_sub_u", "dgl.function.e_sub_v", "dgl.function.max", "dgl.function.mean", "dgl.function.min", "dgl.function.sum", "dgl.function.u_add_e", "dgl.function.u_add_v", "dgl.function.u_div_e", "dgl.function.u_div_v", "dgl.function.u_dot_e", "dgl.function.u_dot_v", "dgl.function.u_mul_e", "dgl.function.u_mul_v", "dgl.function.u_sub_e", "dgl.function.u_sub_v", "dgl.function.v_add_e", "dgl.function.v_add_u", "dgl.function.v_div_e", "dgl.function.v_div_u", "dgl.function.v_dot_e", "dgl.function.v_dot_u", "dgl.function.v_mul_e", "dgl.function.v_mul_u", "dgl.function.v_sub_e", "dgl.function.v_sub_u", "dgl.graph", "BasicFeatureStore", "BuiltinDataset", "CPUCachedFeature", "CopyTo", "DataLoader", "Dataset", "DiskBasedFeature", "DistributedItemSampler", "Feature", "FeatureFetcher", "FeatureStore", "FusedCSCSamplingGraph", "GPUCachedFeature", "HeteroItemSet", "InSubgraphSampler", "ItemSampler", "ItemSet", "LayerNeighborSampler", "LegacyDataset", "MiniBatch", "MiniBatchTransformer", "NegativeSampler", "NeighborSampler", "OnDiskDataset", "SampledSubgraph", "SampledSubgraphImpl", "SamplingGraph", "SubgraphSampler", "Task", "TemporalLayerNeighborSampler", "TemporalNeighborSampler", "TorchBasedFeature", "TorchBasedFeatureStore", "UniformNegativeSampler", "dgl.graphbolt.add_reverse_edges", "dgl.graphbolt.compact_csc_format", "dgl.graphbolt.cpu_cached_feature", "dgl.graphbolt.etype_str_to_tuple", "dgl.graphbolt.etype_tuple_to_str", "dgl.graphbolt.exclude_seed_edges", "dgl.graphbolt.expand_indptr", "dgl.graphbolt.from_dglgraph", "dgl.graphbolt.fused_csc_sampling_graph", "dgl.graphbolt.gpu_cached_feature", "dgl.graphbolt.index_select", "dgl.graphbolt.indptr_edge_ids", "dgl.graphbolt.isin", "dgl.graphbolt.load_from_shared_memory", "dgl.graphbolt.numpy_save_aligned", "dgl.graphbolt.seed", "dgl.graphbolt.unique_and_compact", "dgl.graphbolt.unique_and_compact_csc_formats", "dgl.heterograph", "dgl.in_subgraph", "dgl.is_libxsmm_enabled", "dgl.khop_adj", "dgl.khop_graph", "dgl.khop_in_subgraph", "dgl.khop_out_subgraph", "dgl.knn_graph", "dgl.lap_pe", "dgl.laplacian_lambda_max", "dgl.line_graph", "dgl.linkx_homophily", "dgl.load_graphs", "dgl.max_edges", "dgl.max_nodes", "dgl.mean_edges", "dgl.mean_nodes", "dgl.merge", "dgl.metapath_reachable_graph", "dgl.metis_partition", "dgl.metis_partition_assignment", "dgl.multiprocessing.pytorch.call_once_and_share", "dgl.multiprocessing.pytorch.shared_tensor", "dgl.nn.functional.edge_softmax", "HeteroGraphConv", "AGNNConv", "APPNPConv", "ChebConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "EdgeConv", "GATConv", "GINConv", "GMMConv", "GatedGraphConv", "GraphConv", "NNConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SortPooling", "SumPooling", "Sequential", "DeepWalk", "HeteroEmbedding", "HeteroGraphConv", "HeteroLinear", "MetaPath2Vec", "TypedLinear", "AGNNConv", "APPNPConv", "AtomicConv", "CFConv", "ChebConv", "CuGraphGATConv", "CuGraphRelGraphConv", "CuGraphSAGEConv", "DGNConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "DotGatConv", "EGATConv", "EGNNConv", "EdgeConv", "EdgeGATConv", "EdgeWeightNorm", "GATConv", "GATv2Conv", "GCN2Conv", "GINConv", "GINEConv", "GMMConv", "GatedGCNConv", "GatedGraphConv", "GraphConv", "GroupRevRes", "HGTConv", "NNConv", "PNAConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "TWIRLSConv", "TWIRLSUnfoldingAndAttention", "GNNExplainer", "HeteroGNNExplainer", "HeteroPGExplainer", "HeteroSubgraphX", "PGExplainer", "SubgraphX", "KNNGraph", "RadiusGraph", "SegmentedKNNGraph", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SetTransformerDecoder", "SetTransformerEncoder", "SortPooling", "SumPooling", "WeightAndSum", "BiasedMHA", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "LapPosEncoder", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "EdgePredictor", "TransE", "TransR", "NodeEmbedding", "JumpingKnowledge", "LabelPropagation", "Sequential", "WeightBasis", "APPNPConv", "ChebConv", "GATConv", "GINConv", "GraphConv", "RelGraphConv", "SAGEConv", "SGConv", "AvgPooling", "GlobalAttentionPooling", "HeteroGraphConv", "MaxPooling", "SortPooling", "SumPooling", "dgl.node_homophily", "dgl.node_label_informativeness", "dgl.node_subgraph", "dgl.node_type_subgraph", "dgl.norm_by_dst", "dgl.ops.copy_e_max", "dgl.ops.copy_e_mean", "dgl.ops.copy_e_min", "dgl.ops.copy_e_sum", "dgl.ops.copy_u", "dgl.ops.copy_u_max", "dgl.ops.copy_u_mean", "dgl.ops.copy_u_min", "dgl.ops.copy_u_sum", "dgl.ops.copy_v", "dgl.ops.e_add_u", "dgl.ops.e_add_v", "dgl.ops.e_div_u", "dgl.ops.e_div_v", "dgl.ops.e_dot_u", "dgl.ops.e_dot_v", "dgl.ops.e_mul_u", "dgl.ops.e_mul_v", "dgl.ops.e_sub_u", "dgl.ops.e_sub_v", "dgl.ops.gather_mm", "dgl.ops.gsddmm", "dgl.ops.gspmm", "dgl.ops.segment_mm", "dgl.ops.segment_reduce", "dgl.ops.u_add_e", "dgl.ops.u_add_e_max", "dgl.ops.u_add_e_mean", "dgl.ops.u_add_e_min", "dgl.ops.u_add_e_sum", "dgl.ops.u_add_v", "dgl.ops.u_div_e", "dgl.ops.u_div_e_max", "dgl.ops.u_div_e_mean", "dgl.ops.u_div_e_min", "dgl.ops.u_div_e_sum", "dgl.ops.u_div_v", "dgl.ops.u_dot_e", "dgl.ops.u_dot_v", "dgl.ops.u_mul_e", "dgl.ops.u_mul_e_max", "dgl.ops.u_mul_e_mean", "dgl.ops.u_mul_e_min", "dgl.ops.u_mul_e_sum", "dgl.ops.u_mul_v", "dgl.ops.u_sub_e", "dgl.ops.u_sub_e_max", "dgl.ops.u_sub_e_mean", "dgl.ops.u_sub_e_min", "dgl.ops.u_sub_e_sum", "dgl.ops.u_sub_v", "dgl.ops.v_add_e", "dgl.ops.v_add_u", "dgl.ops.v_div_e", "dgl.ops.v_div_u", "dgl.ops.v_dot_e", "dgl.ops.v_dot_u", "dgl.ops.v_mul_e", "dgl.ops.v_mul_u", "dgl.ops.v_sub_e", "dgl.ops.v_sub_u", "dgl.out_subgraph", "dgl.partition_graph_with_halo", "dgl.prop_edges", "dgl.prop_edges_dfs", "dgl.prop_nodes", "dgl.prop_nodes_bfs", "dgl.prop_nodes_topo", "dgl.radius_graph", "dgl.rand_bipartite", "dgl.rand_graph", "dgl.random_walk_pe", "dgl.readout_edges", "dgl.readout_nodes", "dgl.remove_edges", "dgl.remove_nodes", "dgl.remove_self_loop", "dgl.reorder_graph", "dgl.reverse", "dgl.sampling.PinSAGESampler", "dgl.sampling.global_uniform_negative_sampling", "dgl.sampling.node2vec_random_walk", "dgl.sampling.pack_traces", "dgl.sampling.random_walk", "dgl.sampling.sample_labors", "dgl.sampling.sample_neighbors", "dgl.sampling.sample_neighbors_biased", "dgl.sampling.select_topk", "dgl.save_graphs", "dgl.seed", "dgl.segmented_knn_graph", "dgl.shortest_dist", "dgl.slice_batch", "dgl.softmax_edges", "dgl.softmax_nodes", "dgl.sort_csc_by_tag", "dgl.sort_csr_by_tag", "dgl.sparse.SparseMatrix.T", "dgl.sparse.SparseMatrix.coalesce", "dgl.sparse.SparseMatrix.col", "dgl.sparse.SparseMatrix.coo", "dgl.sparse.SparseMatrix.cpu", "dgl.sparse.SparseMatrix.csc", "dgl.sparse.SparseMatrix.csr", "dgl.sparse.SparseMatrix.cuda", "dgl.sparse.SparseMatrix.device", "dgl.sparse.SparseMatrix.double", "dgl.sparse.SparseMatrix.dtype", "dgl.sparse.SparseMatrix.float", "dgl.sparse.SparseMatrix.has_duplicate", "dgl.sparse.SparseMatrix.indices", "dgl.sparse.SparseMatrix.int", "dgl.sparse.SparseMatrix.long", "dgl.sparse.SparseMatrix.neg", "dgl.sparse.SparseMatrix.nnz", "dgl.sparse.SparseMatrix.reduce", "dgl.sparse.SparseMatrix.row", "dgl.sparse.SparseMatrix.shape", "dgl.sparse.SparseMatrix.smax", "dgl.sparse.SparseMatrix.smean", "dgl.sparse.SparseMatrix.smin", "dgl.sparse.SparseMatrix.softmax", "dgl.sparse.SparseMatrix.sum", "dgl.sparse.SparseMatrix.t", "dgl.sparse.SparseMatrix.to", "dgl.sparse.SparseMatrix.to_dense", "dgl.sparse.SparseMatrix.transpose", "dgl.sparse.SparseMatrix.val", "dgl.sparse.add", "dgl.sparse.bsddmm", "dgl.sparse.bspmm", "dgl.sparse.diag", "dgl.sparse.div", "dgl.sparse.from_coo", "dgl.sparse.from_csc", "dgl.sparse.from_csr", "dgl.sparse.identity", "dgl.sparse.matmul", "dgl.sparse.mul", "dgl.sparse.power", "dgl.sparse.sddmm", "dgl.sparse.softmax", "dgl.sparse.sp_add_v", "dgl.sparse.sp_broadcast_v", "dgl.sparse.sp_div_v", "dgl.sparse.sp_mul_v", "dgl.sparse.sp_sub_v", "dgl.sparse.spmatrix", "dgl.sparse.spmm", "dgl.sparse.spspmm", "dgl.sparse.sub", "dgl.sparse.val_like", "dgl.sum_edges", "dgl.sum_nodes", "dgl.svd_pe", "dgl.to_bidirected", "dgl.to_block", "dgl.to_cugraph", "dgl.to_double", "dgl.to_float", "dgl.to_half", "dgl.to_heterogeneous", "dgl.to_homogeneous", "dgl.to_networkx", "dgl.to_simple", "dgl.to_simple_graph", "dgl.topk_edges", "dgl.topk_nodes", "dgl.topological_nodes_generator", "AddEdge", "AddMetaPaths", "AddReverse", "AddSelfLoop", "BaseTransform", "Compose", "DropEdge", "DropNode", "FeatMask", "GCNNorm", "GDC", "HeatKernel", "KHopGraph", "LapPE", "LineGraph", "NodeShuffle", "PPR", "RandomWalkPE", "RemoveSelfLoop", "RowFeatNormalizer", "SIGNDiffusion", "SVDPE", "ToLevi", "ToSimple", "dgl.udf.EdgeBatch.batch_size", "dgl.udf.EdgeBatch.data", "dgl.udf.EdgeBatch.dst", "dgl.udf.EdgeBatch.edges", "dgl.udf.EdgeBatch.src", "dgl.udf.NodeBatch.batch_size", "dgl.udf.NodeBatch.data", "dgl.udf.NodeBatch.mailbox", "dgl.udf.NodeBatch.nodes", "dgl.unbatch", "dgl.use_libxsmm", "Prepare Data", "\ud83c\udd95 Tutorial: Graph Transformer", "Build Model", "Chapter 4: Graph Data Pipeline", "4.1 DGLDataset class", "4.2 Download raw data (optional)", "4.6 Loading data from CSV files", "4.5 Loading OGB datasets using <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> package", "4.3 Process data", "4.4 Save and load data", "Chapter 7: Distributed Training", "7.3 Programming APIs", "7.5 Heterogeneous Graph Under The Hood", "7.4 Advanced Graph Partitioning", "7.1 Data Preprocessing", "7.2 Tools for launching distributed training/inference", "Chapter 1: Graph", "1.1 Some Basic Definitions about Graphs (Graphs 101)", "1.4 Creating Graphs from External Sources", "1.3 Node and Edge Features", "1.6 Using DGLGraph on a GPU", "1.2 Graphs, Nodes, and Edges", "1.5 Heterogeneous Graphs", "User Guide", "Chapter 2: Message Passing", "2.1 Built-in Functions and Message Passing APIs", "2.2 Writing Efficient Message Passing Code", "2.5 Message Passing on Heterogeneous Graph", "2.3 Apply Message Passing On Part Of The Graph", "Chapter 6: Stochastic Training on Large Graphs", "6.4 Implementing Custom Graph Samplers", "6.2 Training GNN for Edge Classification with Neighborhood Sampling", "6.8 Using GPU for Neighborhood Sampling", "6.7 Exact Offline Inference on Large Graphs", "6.3 Training GNN for Link Prediction with Neighborhood Sampling", "6.6 Implementing Custom GNN Module for Mini-batch Training", "6.1 Training GNN for Node Classification with Neighborhood Sampling", "6.9 Data Loading Parallelism", "6.5 Training GNN with DGL sparse", "Chapter 8: Mixed Precision Training", "Chapter 3: Building GNN Modules", "3.1 DGL NN Module Construction Function", "3.2 DGL NN Module Forward Function", "3.3 Heterogeneous GraphConv Module", "Chapter 5: Training Graph Neural Networks", "5.2 Edge Classification/Regression", "5.5 Use of Edge Weights", "5.4 Graph Classification", "5.3 Link Prediction", "5.1 Node Classification/Regression", "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053", "4.1 DGLDataset\u7c7b", "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09", "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6", "4.3 \u5904\u7406\u6570\u636e", "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e", "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3", "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API", "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406", "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177", "\u7b2c1\u7ae0\uff1a\u56fe", "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5", "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe", "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81", "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph", "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9", "1.5 \u5f02\u6784\u56fe", "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011", "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f", "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API", "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801", "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3", "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668", "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad", "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757", "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757", "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570", "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570", "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757", "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc", "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52", "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd", "5.4 \u6574\u56fe\u5206\u7c7b", "5.3 \u94fe\u63a5\u9884\u6d4b", "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52", "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778", "4.1 DGLDataset \ud074\ub798\uc2a4", "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)", "4.5 <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30", "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1", "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529", "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5", "7.2 \ubd84\uc0b0 APIs", "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30", "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac", "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4", "1\uc7a5: \uadf8\ub798\ud504", "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)", "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30", "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98", "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30", "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0", "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)", "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]", "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)", "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4", "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30", "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95", "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec", "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30", "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5", "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30", "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30", "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860", "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30", "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "8\uc7a5: Mixed Precision \ud559\uc2b5", "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30", "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218", "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218", "3.3 Heterogeneous GraphConv \ubaa8\ub4c8", "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30", "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)", "5.4 \uadf8\ub798\ud504 \ubd84\ub958", "5.3 \ub9c1\ud06c \uc608\uce21", "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)", "Welcome to Deep Graph Library Tutorials and Documentation", "Install and Setup", "Building a Graph Convolutional Network Using Sparse Matrices", "Graph Diffusion in Graph Neural Networks", "Graph Transformer in a Nutshell", "Hypergraph Neural Networks", "Tutorials: dgl.sparse", "Quickstart", "Performance Benchmarks", "Resources", "Computation times", "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt", "Link Prediction", "Multi-GPU Node Classification", "Neighbor Sampling Overview", "Node Classification", "Composing OnDiskDataset from raw data", "YAML specification", "OnDiskDataset for Heterogeneous Graph", "OnDiskDataset for Homogeneous Graph", "Node Classification with DGL", "How Does DGL Represent A Graph?", "Write your own GNN module", "Link Prediction using Graph Neural Networks", "Training a GNN for Graph Classification", "Make Your Own Dataset", "A Blitz Introduction to DGL", "Computation times", "Improve Scalability on Multi-Core CPUs", "CPU Best Practices", "Training on CPUs", "Computation times", "Distributed Node Classification", "Distributed Link Prediction", "Distributed training", "Computation times", "Graph Convolutional Network", "Relational Graph Convolutional Network", "Line Graph Neural Network", "Understand Graph Attention Network", "Graph neural networks and its variants", "Computation times", "Tree-LSTM in DGL", "Batching many small graphs", "Computation times", "Generative Models of Graphs", "Generative models", "Computation times", "Capsule Network", "Transformer as a Graph Neural Network", "Revisit classic models from a graph perspective", "Computation times", "Paper Study with DGL", "Computation times", "Single Machine Multi-GPU Minibatch Graph Classification", "Single Machine Multi-GPU Minibatch Node Classification", "Training on Multiple GPUs", "Computation times"], "titleterms": {"": [840, 841, 842, 844, 859], "1": [691, 701, 703, 704, 705, 706, 707, 708, 709, 712, 723, 728, 736, 738, 745, 748, 749, 750, 751, 752, 753, 756, 766, 768, 776, 778, 785, 786, 789, 790, 791, 792, 793, 794, 797, 809, 812, 819, 827, 848, 859, 862, 865, 868], "101": [704, 789], "1\uc7a5": 788, "2": [692, 701, 702, 708, 711, 712, 713, 714, 715, 718, 729, 732, 739, 744, 752, 756, 757, 758, 759, 762, 769, 772, 779, 784, 785, 793, 797, 798, 799, 800, 801, 804, 813, 816, 827, 848, 859, 862, 865, 868], "2\uc7a5": 796, "3": [695, 698, 706, 715, 721, 727, 728, 729, 730, 735, 741, 746, 750, 759, 764, 768, 769, 770, 775, 781, 785, 791, 801, 807, 812, 813, 814, 818, 828, 848, 859, 862, 865, 868], "3\uc7a5": 811, "4": [690, 691, 692, 693, 694, 695, 696, 700, 705, 717, 734, 738, 739, 740, 741, 742, 749, 761, 774, 778, 779, 780, 781, 782, 787, 790, 798, 803, 817, 828, 848, 859], "4\uc7a5": 777, "5": [694, 699, 709, 714, 725, 731, 732, 733, 734, 735, 736, 740, 753, 758, 765, 772, 773, 774, 775, 776, 780, 794, 800, 808, 816, 817, 818, 819, 828, 848], "5\uc7a5": 815, "6": [693, 707, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 751, 761, 762, 763, 764, 765, 766, 792, 803, 804, 805, 806, 807, 808, 809, 828, 848], "6\uc7a5": 802, "7": [697, 698, 699, 700, 701, 702, 720, 744, 745, 746, 784, 785, 786, 787, 805, 848], "7\uc7a5": 783, "8": [719, 726, 848], "8\uc7a5": 810, "9": 724, "A": [841, 844, 846, 857], "For": [718, 721, 723], "Of": 715, "On": 715, "One": 858, "The": [699, 715, 857, 862, 865], "__getitem__": 26, "about": 704, "abstract": 858, "access": [698, 699, 852], "across": 833, "action": 865, "activ": [12, 827], "actordataset": 134, "adapt": [2, 718, 723, 869], "add": [611, 865], "add_edg": [27, 114], "add_nod": [28, 115], "add_node_property_split": 197, "add_nodepred_split": 198, "add_reverse_edg": [116, 320], "add_self_loop": [29, 117], "addedg": 652, "addmetapath": 653, "addrevers": 654, "addselfloop": 655, "adj": 30, "adj_extern": 31, "adj_product_graph": 118, "adj_sum_graph": 119, "adj_tensor": 32, "adjac": [0, 1], "adjacency_matrix": 33, "adjusted_homophili": 120, "advanc": 700, "after": [699, 717, 729], "aggreg": 869, "agnnconv": [363, 393], "aifbdataset": 132, "algorithm": [14, 700, 858], "all": 869, "alloc": 849, "altern": 849, "amazoncobuycomputerdataset": 135, "amazoncobuyphotodataset": 136, "amazonratingsdataset": 137, "amdataset": 133, "an": [732, 858], "api": [9, 13, 698, 701, 712, 784, 862], "api\ub4e4": 797, "appli": 715, "apply_each": 121, "apply_edg": [34, 843], "apply_nod": 35, "appnpconv": [364, 394, 464], "approach": 716, "argo": 848, "as_edge_prediction_sampl": 218, "asgraphpreddataset": 138, "ask": 24, "aslinkpreddataset": 139, "asnodepreddataset": 140, "assign": 841, "atomicconv": 395, "attent": [824, 859, 869], "attribut": [12, 827], "avgpool": [380, 439, 472], "ba2motifdataset": 141, "backend": [23, 821], "bacommunitydataset": 142, "balanc": 701, "base": [2, 719], "basetransform": 656, "bashapedataset": 143, "basic": 704, "basicfeaturestor": 286, "batch": [0, 1, 122, 722, 734, 817, 844, 852, 853, 858, 862, 863, 872, 875], "batch_num_edg": 36, "batch_num_nod": 37, "batch_siz": [38, 676, 681], "benchmark": [14, 828], "best": [842, 849], "bfloat16": 726, "bfs_edges_gener": 123, "bfs_nodes_gener": 124, "bgsdataset": 144, "biasedmha": 448, "binari": [705, 709, 858], "bipartit": [722, 803, 808], "bipartite_from_networkx": 125, "bipartite_from_scipi": 126, "bitcoinotcdataset": 145, "blitz": 846, "block_to_graph": 127, "blocksampl": 208, "book": 4, "brief": 857, "broadcast": [12, 827], "broadcast_edg": 128, "broadcast_nod": 129, "bsddmm": 612, "bspmm": 613, "bucket": 20, "build": [21, 689, 727, 822, 869], "built": [5, 712, 869], "builtindataset": 287, "call_once_and_shar": 359, "canonical_etyp": 39, "capsul": 868, "cell": 862, "cfconv": 396, "chain": 858, "chameleondataset": 149, "chang": 21, "chapter": [690, 697, 703, 711, 716, 726, 727, 731], "chebconv": [365, 397, 465], "check": 729, "check_sha1": 199, "choos": 865, "chunk": 701, "cifar10superpixeldataset": 146, "citeseergraphdataset": 150, "class": [2, 3, 12, 691, 865, 869], "classic": [870, 872], "classif": [695, 718, 723, 732, 734, 736, 833, 835, 838, 839, 840, 844, 845, 852, 874, 875], "client": 852, "clusterdataset": 147, "clustergcnsampl": 209, "coalesc": 581, "coauthorcsdataset": 151, "coauthorphysicsdataset": 152, "code": [21, 713], "col": 582, "comma": [705, 709, 790, 794], "commun": [852, 853, 858], "compact_csc_format": 321, "compact_graph": 130, "complet": [16, 858], "compos": [657, 836], "comput": [1, 734, 830, 835, 847, 851, 855, 861, 864, 867, 869, 871, 873, 877], "conclus": [14, 832, 835], "conda": 821, "configur": 23, "construct": [728, 841], "contain": 22, "contribut": [21, 820], "control": 1, "conv": [15, 16, 17], "convers": 699, "convert": 709, "convolut": [822, 840, 856, 857], "coo": 583, "copy_": 249, "copy_e_max": 483, "copy_e_mean": 484, "copy_e_min": 485, "copy_e_sum": 486, "copy_u": [250, 487], "copy_u_max": 488, "copy_u_mean": 489, "copy_u_min": 490, "copy_u_sum": 491, "copy_v": 492, "copyto": [7, 289], "cora": [840, 858, 859], "corafulldataset": 153, "coragraphdataset": 154, "core": [21, 848], "cornelldataset": 155, "cpu": [40, 584, 726, 848, 849, 850], "cpu_cached_featur": 322, "cpucachedfeatur": 288, "creat": [0, 705, 709, 827, 845, 857], "create_block": 131, "create_formats_": 41, "creation": [12, 698], "csc": 585, "csr": 586, "csv": [693, 705, 709, 749, 753, 790, 794, 845], "csvdataset": [148, 845], "cuda": [587, 719], "cugraph": 16, "cugraphgatconv": 398, "cugraphrelgraphconv": 399, "cugraphsageconv": 400, "custom": [693, 717, 722, 842], "data": [2, 9, 21, 23, 677, 682, 687, 690, 692, 693, 695, 696, 698, 699, 701, 718, 719, 721, 723, 724, 734, 825, 832, 833, 835, 836, 838, 839, 844, 874, 875], "dataload": [3, 4, 7, 208, 210, 218, 290], "dataset": [2, 7, 291, 693, 694, 695, 832, 835, 840, 845, 857, 858, 862, 869], "dataset_nam": 837, "deep": 820, "deepwalk": 387, "defin": [20, 22, 718, 721, 723, 832, 833, 835, 840, 842, 843, 844, 852, 853, 857, 862, 868, 875], "definit": [704, 734], "deg": 858, "degre": [20, 689], "degreeencod": 449, "dens": [15, 16], "densechebconv": [366, 402], "densegraphconv": [367, 403], "densesageconv": [368, 404], "depend": [833, 835], "descript": [6, 393, 394, 395, 396, 401, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 422, 423, 425, 426, 427, 428, 429, 456, 457, 458, 460], "destin": 865, "detect": 858, "develop": 21, "devic": [1, 42, 588], "dfs_edges_gener": 227, "dfs_labeled_edges_gener": 228, "dgl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 208, 218, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 698, 705, 709, 719, 725, 728, 729, 749, 768, 784, 790, 794, 805, 812, 813, 826, 827, 832, 833, 835, 838, 839, 840, 841, 844, 846, 856, 857, 858, 859, 862, 869, 872], "dgl_partition_to_graphbolt": 229, "dgldataset": [156, 691, 778, 845], "dgldataset\u7c7b": 738, "dglgraph": [1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 707, 792], "dglgraph\ub85c": 786, "dgl\u4e8c\u8fdb\u5236\u683c\u5f0f": 753, "dgl\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": 744, "dgmg": 865, "dgnconv": 401, "diag": 614, "diagon": 827, "differ": [732, 821], "diffus": 823, "disk": [705, 709], "diskbasedfeatur": 292, "dispatch": 701, "distembed": [698, 784], "distgraph": [698, 784], "distribut": [4, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 697, 698, 699, 701, 702, 784, 852, 853, 854, 874], "distributeditemsampl": 293, "div": 615, "doc": 21, "document": [21, 820], "doe": 841, "dotgatconv": 405, "doubl": 589, "double_radius_node_label": 241, "download": [200, 692], "dropedg": 658, "dropnod": 659, "dst": 678, "dstdata": 43, "dstnode": 44, "dsttype": 45, "dtype": 590, "dure": 699, "dynam": 865, "e_add_u": [251, 493], "e_add_v": [252, 494], "e_div_u": [253, 495], "e_div_v": [254, 496], "e_dot_u": [255, 497], "e_dot_v": [256, 498], "e_mul_u": [257, 499], "e_mul_v": [258, 500], "e_sub_u": [259, 501], "e_sub_v": [260, 502], "each": 874, "edata": 46, "edg": [1, 2, 20, 51, 679, 698, 705, 706, 708, 709, 717, 718, 732, 733, 749, 790, 841, 865, 869], "edge_attr_schem": 47, "edge_homophili": 242, "edge_id": 48, "edge_label_inform": 243, "edge_softmax": 361, "edge_split": 230, "edge_subgraph": [49, 244], "edge_type_subgraph": [50, 245], "edgebatch": [676, 677, 678, 679, 680], "edgeconv": [369, 408], "edgedata": 693, "edgegatconv": 409, "edgepredictor": 456, "edgeweightnorm": 410, "editori": 21, "effici": 713, "egatconv": 406, "egnnconv": 407, "egtlay": 450, "element": 827, "elementwis": [12, 827], "embed": [4, 10, 16, 865], "enabl": [848, 852], "encod": [0, 689, 865], "end": [726, 810], "environ": [23, 852, 853], "equat": 859, "etyp": 52, "etype_str_to_tupl": 323, "etype_tuple_to_str": 324, "evalu": [825, 832, 833, 875], "even": 842, "everyth": 859, "exact": 720, "exampl": [21, 361, 701, 726], "exclud": 717, "exclude_seed_edg": 325, "execut": 869, "exercis": 827, "exist": 732, "expand_indptr": 326, "extern": 705, "extract": 0, "extract_arch": 201, "f": 858, "fakenewsdataset": 159, "faq": 24, "farthest": 6, "fb15k237dataset": 157, "fb15kdataset": 158, "featmask": 660, "featur": [1, 3, 7, 21, 294, 693, 706, 729, 838, 839, 841, 843], "feature_data": 837, "featurefetch": [7, 295], "featurestor": [7, 296], "ffi": 22, "file": [693, 838, 839], "filter_edg": 53, "filter_nod": 54, "find_edg": [55, 231], "flickrdataset": 160, "float": 591, "flow": 865, "folder": 693, "foreign": 22, "format": [1, 56, 700, 701, 705, 709], "formula": 856, "forward": [689, 729, 813], "fraudamazondataset": 161, "frauddataset": 162, "fraudyelpdataset": 163, "frequent": 24, "from": [693, 705, 709, 718, 732, 821, 836, 845, 856, 858, 870, 872], "from_coo": 616, "from_csc": 617, "from_csr": 618, "from_cugraph": 246, "from_dglgraph": 327, "from_networkx": 247, "from_scipi": 248, "full": [693, 857], "function": [3, 5, 9, 12, 18, 20, 22, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 361, 712, 719, 728, 729, 827, 833, 842, 868, 869, 874], "fuse": 858, "fused_csc_sampling_graph": 328, "fusedcscsamplinggraph": 297, "gat": 859, "gatconv": [370, 411, 466], "gatedgcnconv": 417, "gatedgraphconv": [373, 418], "gather_mm": 503, "gathermm": 9, "gatv2conv": 412, "gcn": [822, 840, 856, 857, 859], "gcn2conv": 413, "gcnnorm": 661, "gdc": 662, "gdeltdataset": 164, "gener": [21, 838, 839, 865, 866, 872], "geometri": 6, "get": [820, 852, 853], "get_download_dir": 202, "ginconv": [371, 414, 467], "gindataset": 165, "gineconv": 415, "git": 21, "github": 21, "global": [15, 16, 17, 23], "global_uniform_negative_sampl": 563, "globalattentionpool": [381, 440, 473], "globaluniform": 224, "gml": [705, 749, 790], "gmmconv": [372, 416], "gnn": [718, 721, 722, 723, 725, 727, 767, 804, 807, 808, 809, 811, 823, 831, 840, 842, 843, 844, 848, 852, 853], "gnnexplain": 430, "gpu": [707, 719, 805, 833, 840, 874, 875, 876], "gpu_cached_featur": 329, "gpucachedfeatur": 298, "gpu\uc5d0\uc11c": 792, "graph": [0, 1, 2, 4, 7, 16, 285, 361, 688, 690, 693, 695, 698, 699, 700, 701, 703, 704, 705, 708, 709, 714, 715, 716, 717, 718, 720, 721, 722, 723, 729, 731, 732, 734, 735, 736, 794, 808, 813, 820, 822, 823, 824, 837, 838, 839, 840, 841, 843, 844, 845, 852, 853, 856, 857, 858, 859, 860, 863, 865, 868, 869, 870, 872, 874], "graphbolt": [7, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 831, 852], "graphconv": [374, 419, 468, 730, 814], "graphdata": 693, "graphdataload": 211, "graphorm": 689, "graphormerlay": 451, "graphsag": [721, 843], "group": 874, "grouprevr": 420, "gsddmm": [9, 504], "gspmm": [9, 505], "guid": 710, "half": [726, 810], "handl": [835, 857], "has_dupl": 592, "has_edges_between": 57, "has_nod": 58, "head": [824, 859, 869], "heatkernel": 663, "heteroembed": 388, "heterogen": [15, 16, 17, 361, 693, 699, 709, 714, 717, 718, 721, 722, 723, 730, 731, 732, 734, 735, 736, 785, 786, 794, 803, 804, 807, 808, 809, 814, 815, 816, 817, 818, 819, 838], "heterognnexplain": 431, "heterograph": [338, 709], "heterographconv": [362, 389, 474, 730, 814], "heterographconv\u7684\u5b9e\u73b0\u903b\u8f91": 770, "heteroitemset": 299, "heterolinear": 390, "heteropgexplain": 432, "heterosubgraphx": 433, "hgnn": 825, "hgtconv": 421, "homogen": [361, 709, 722, 808, 839], "homophili": 0, "hood": 699, "host": 21, "how": [835, 841, 869], "hyper": 849, "hypergraph": 825, "i": 858, "icews18dataset": 166, "id": [1, 699, 701, 786, 852, 853], "idea": [857, 858, 868], "ident": 619, "idtyp": 59, "implement": [717, 720, 722, 730, 732, 856, 857, 858, 865, 868, 869], "import": 875, "improv": 848, "in_degre": 60, "in_edg": 61, "in_subgraph": [232, 339], "inc": 62, "incid": 1, "incidence_matrix": 63, "index": 820, "index_select": 330, "indic": 593, "indptr_edge_id": 331, "infer": [702, 720, 853, 858], "inform": [0, 1], "initi": [4, 233, 698, 827, 852, 853, 868, 874], "input": 700, "instal": [700, 821, 832, 833, 835, 838, 839, 848], "instanti": [838, 839], "insubgraphsampl": 300, "int": [64, 594], "integr": 828, "intel": 849, "interact": 859, "interfac": [21, 22], "introduc": 859, "introduct": [846, 857, 865], "is_homogen": 65, "is_libxsmm_en": 340, "is_multigraph": 66, "is_pin": 67, "is_unibipartit": 68, "isin": 332, "itemsampl": [7, 301], "itemset": [7, 302], "its": [860, 872], "job": 852, "json": [705, 749, 790], "jumpingknowledg": 460, "karateclubdataset": 167, "kei": [857, 858, 868], "khop_adj": 341, "khop_graph": 342, "khop_in_subgraph": 343, "khop_out_subgraph": 344, "khopgraph": 664, "knn": 14, "knn_graph": 345, "knngraph": 436, "knowledg": 16, "label": [0, 693], "labelpropag": 461, "laborsampl": 212, "lap_p": 346, "laplacian_lambda_max": 347, "lapp": 665, "lapposencod": 452, "larg": [716, 720], "launch": [702, 852], "layer": [15, 16, 17, 689, 822, 824, 825, 857, 858, 869], "layerneighborsampl": 303, "lazyfeatur": 219, "learn": [15, 16, 17, 859], "legacydataset": 304, "legacytudataset": 168, "less": 693, "level": 693, "lgnn": 858, "librari": [705, 820], "line": 858, "line_graph": [69, 348], "linear": [12, 827], "linegraph": 666, "link": [3, 16, 695, 721, 735, 832, 838, 839, 843, 845, 853, 857], "linkx_homophili": 349, "linux": 821, "load": [4, 693, 694, 696, 699, 701, 705, 709, 724, 734, 825, 832, 835, 840, 841, 843, 844, 875], "load_from_shared_memori": 333, "load_graph": 350, "load_info": 203, "load_label": 204, "load_partit": 234, "load_partition_book": 235, "load_partition_feat": 236, "loader": [718, 719, 721, 723, 832, 833, 835, 844, 874], "local": 21, "local_scop": 70, "logic": 730, "long": [71, 595], "loop": [718, 721, 723, 732, 734, 735, 736, 816, 819, 832, 833, 835, 842, 843, 844, 852, 853, 857, 862, 875], "lsc": 701, "lstm": 862, "machin": [874, 875], "maco": 821, "mag240m": 701, "mailbox": 683, "main": [862, 865, 869, 874], "make": [701, 845], "mani": [863, 872], "manipul": 1, "map": 701, "mask_nodes_by_properti": 205, "match": 6, "matmul": 620, "matric": 822, "matrix": [1, 12, 827, 858], "max": 261, "max_edg": 351, "max_nod": 352, "maxpool": [382, 441, 475], "mean": 262, "mean_edg": 353, "mean_nod": 354, "measur": 0, "memori": 849, "merg": 355, "messag": [0, 5, 9, 20, 711, 712, 713, 714, 715, 726, 729, 733, 796, 834, 842, 856, 858, 862, 868, 869], "metagraph": [1, 72], "metapath2vec": 391, "metapath_reachable_graph": 356, "method": [12, 827], "meti": 700, "metis_partit": 357, "metis_partition_assign": 358, "mfg": 722, "mfg\ub97c": 808, "min": 263, "minesweeperdataset": 171, "mini": [722, 852, 853, 875], "minibatch": [7, 305, 718, 721, 723, 874, 875], "minibatchtransform": 306, "minigcdataset": 172, "misc": 1, "mix": [726, 810], "mnistsuperpixeldataset": 169, "mode": 698, "model": [21, 689, 718, 721, 723, 732, 734, 736, 824, 832, 833, 835, 843, 844, 852, 853, 856, 857, 865, 866, 868, 870, 872, 874, 875], "modul": [9, 15, 16, 17, 698, 722, 727, 728, 729, 730, 733, 842], "more": 842, "movielensdataset": 173, "mul": 621, "multi": [824, 833, 848, 859, 869, 874, 875], "multi_update_al": 73, "multilayerfullneighborsampl": 213, "multipl": [12, 21, 693, 709, 827, 858, 876], "multiprocess": [8, 359, 360], "mutagdataset": 170, "mutat": 1, "mxnet": [15, 821], "ndata": 74, "neg": [3, 11, 596, 721, 807, 843], "negativesampl": [7, 307], "neighbor": [6, 11, 718, 719, 721, 832, 833, 834, 835, 852], "neighborhood": [716, 718, 719, 721, 723, 802], "neighborsampl": [214, 308], "network": [16, 731, 734, 736, 822, 823, 825, 840, 843, 852, 853, 856, 857, 858, 859, 860, 868, 869, 872], "neural": [731, 734, 736, 823, 825, 843, 858, 860, 869, 872], "new": [21, 22], "next": [840, 841, 842, 844, 859], "nf": 852, "nn": [15, 16, 17, 18, 361, 728, 729, 733, 812, 813], "nnconv": [375, 422], "nnz": 597, "nn\u6a21\u5757\u7684forward\u51fd\u6570": 769, "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": 768, "node": [1, 2, 4, 10, 20, 77, 684, 695, 698, 705, 706, 708, 723, 732, 736, 749, 790, 832, 833, 835, 838, 839, 840, 841, 845, 852, 853, 865, 875], "node2vec_random_walk": 564, "node_attr_schem": 75, "node_homophili": 478, "node_label_inform": 479, "node_split": 237, "node_subgraph": 480, "node_type_subgraph": [76, 481], "nodebatch": [681, 682, 683, 684], "nodedata": 693, "nodeembed": 459, "nodeshuffl": 667, "non": [12, 827], "norm_by_dst": 482, "ntype": 78, "num_dst_nod": 79, "num_edg": 80, "num_nod": 81, "num_src_nod": 82, "number_of_dst_nod": 83, "number_of_edg": 84, "number_of_nod": 85, "number_of_src_nod": 86, "numpy_save_align": 334, "nutshel": 824, "object": [845, 865], "offlin": 720, "ogb": [694, 780], "ondiskdataset": [309, 836, 838, 839], "one": 856, "onli": 852, "op": [0, 9, 12, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543], "openmp": 849, "oper": [4, 12, 827, 858], "optim": [4, 10, 865], "option": [23, 692, 779], "organ": [838, 839], "origin": 718, "other": 833, "out": 0, "out_degre": 87, "out_edg": 88, "out_subgraph": 544, "output": [700, 729], "overview": [716, 731, 732, 734, 735, 736, 831, 834, 840, 843, 844, 845, 856], "own": [842, 845, 848], "pack_trac": 565, "packag": [694, 832, 833, 835, 838, 839, 875], "paper": 872, "paradigm": [711, 796], "parallel": [700, 724, 858], "parmeti": [700, 786], "parmetis\ub97c": 786, "parser": 693, "part": 715, "partit": [0, 4, 699, 700, 701, 852, 853], "partition_graph": 238, "partition_graph_with_halo": 545, "pass": [9, 20, 711, 712, 713, 714, 715, 726, 729, 733, 796, 834, 842, 856, 858, 862, 868, 869], "path": 689, "pathencod": 453, "patterndataset": 174, "perform": [14, 828, 832], "persourceuniform": 225, "perspect": [856, 870, 872], "pgexplain": 434, "pin_memory_": 89, "pinsagesampl": [562, 719], "pip": 821, "pipelin": [690, 701], "platform": 21, "pnaconv": 423, "point": 6, "pool": [15, 16, 17], "posit": [0, 843], "postprocess": 869, "power": 622, "ppi": 859, "ppidataset": 175, "ppr": 668, "practic": [842, 849], "precis": [726, 810], "precision\uc744": 810, "predecessor": 90, "predict": [2, 3, 16, 695, 721, 732, 735, 832, 838, 839, 843, 845, 853, 857], "prefetch": 3, "prepar": [687, 838, 839, 843, 874], "preprocess": [699, 701, 869], "prev": 858, "procedur": [833, 875], "process": [21, 695, 833, 874, 875], "program": [698, 848], "progress": 858, "prop_edg": [91, 546], "prop_edges_df": 547, "prop_nod": [92, 548], "prop_nodes_bf": 549, "prop_nodes_topo": 550, "propag": [0, 865], "protein": 859, "pubmedgraphdataset": 176, "pull": 93, "push": 94, "put": [859, 862, 865, 869], "pytorch": [16, 359, 360, 821], "qm7bdataset": 177, "qm9dataset": 178, "qm9edgedataset": 179, "queri": [1, 841], "question": 24, "questionsdataset": 180, "quickstart": 827, "r": 857, "radiu": 858, "radius_graph": 551, "radiusgraph": 437, "rand_bipartit": 552, "rand_graph": 553, "random": 11, "random_walk": 566, "random_walk_p": 554, "randomwalkneighborsampl": 719, "randomwalkp": 669, "raw": [692, 779, 836], "read": 0, "readout": [734, 817], "readout_edg": 555, "readout_nod": 556, "redditdataset": 181, "reduc": [5, 9, 598, 729, 827], "reduct": 833, "refer": [13, 852, 853], "regress": [732, 736, 816, 819], "relat": [0, 9, 857], "relgraphconv": [376, 424, 469], "remov": 718, "remove_edg": [95, 557], "remove_nod": [96, 558], "remove_self_loop": [97, 559], "removeselfloop": 670, "reorder_graph": [98, 560], "repositori": 23, "repres": 841, "represent": 832, "requir": 821, "resourc": 829, "result": 14, "revers": [99, 561], "review": 834, "revisit": [870, 872], "roadmap": [690, 703, 711, 716, 727, 731], "romanempiredataset": 182, "row": 599, "rowfeatnorm": 671, "run": 700, "sageconv": [377, 425, 470], "saintsampl": 215, "sampl": [4, 11, 562, 563, 564, 565, 566, 567, 568, 569, 570, 698, 716, 717, 718, 719, 721, 723, 802, 834, 852], "sample_etype_neighbor": 239, "sample_labor": 567, "sample_neighbor": [240, 568], "sample_neighbors_bias": 569, "sampledsubgraph": 310, "sampledsubgraphimpl": 311, "sampler": [3, 6, 216, 717, 718, 723, 832, 833, 835, 852, 853], "samplinggraph": 312, "save": [696, 841], "save_graph": 571, "save_info": 206, "sbmmixturedataset": 183, "scalabl": 848, "scenario": 831, "score": 16, "script": [852, 853], "sddmm": 623, "second": 857, "seed": [335, 572], "segment": 9, "segment_mm": 506, "segment_reduc": 507, "segmented_knn_graph": 573, "segmentedknngraph": 438, "segmentmm": 9, "select_topk": 570, "send_and_recv": 100, "separ": [705, 709, 790, 794], "sequenti": [386, 462], "server": 852, "set": [843, 849, 852, 853, 858], "set2set": [383, 442], "set_batch_num_edg": 101, "set_batch_num_nod": 102, "set_dst_lazy_featur": 220, "set_edge_lazy_featur": 221, "set_node_lazy_featur": 222, "set_src_lazy_featur": 223, "settransformerdecod": 443, "settransformerencod": 444, "setup": [21, 821, 852, 868], "sgconv": [378, 426, 471], "shadowkhopsampl": 217, "shape": 600, "shared_tensor": 360, "shortest_dist": 574, "side": 852, "signdiffus": 672, "simpl": 869, "singl": [693, 874, 875], "slice_batch": 575, "small": [863, 872], "smax": 601, "smean": 602, "smin": 603, "softmax": [604, 624, 827], "softmax_edg": 576, "softmax_nod": 577, "some": 704, "sort_csc_by_tag": 578, "sort_csr_by_tag": 579, "sortpool": [384, 445, 476], "sourc": [705, 821], "sp_add_v": 625, "sp_broadcast_v": 626, "sp_div_v": 627, "sp_mul_v": 628, "sp_sub_v": 629, "spars": [1, 12, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 725, 822, 824, 826, 827, 858], "sparsematrix": [580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610], "spatial": 689, "spatialencod": 454, "spatialencoder3d": 455, "spawn": [833, 875], "specif": [693, 701, 729, 813, 837, 869], "speed": 869, "split": [4, 698, 784], "split_dataset": 207, "spmatrix": 630, "spmm": 631, "spspmm": 632, "squirreldataset": 185, "src": 680, "srcdata": 103, "srcnode": 104, "srctype": 105, "ssh": 852, "sstdataset": 184, "standalon": [698, 784], "start": 820, "step": [701, 848, 862, 868], "stochast": [716, 802, 831], "structur": [1, 693, 698, 803, 838, 839, 841, 858, 869], "studi": 872, "style": 21, "sub": 633, "subgraph": [0, 106, 709, 858], "subgraphsampl": [7, 313], "subgraphx": 435, "subset": 196, "successor": 107, "sum": [264, 605], "sum_edg": 635, "sum_nod": 636, "sumpool": [385, 446, 477], "supervis": 858, "support": [9, 21, 719], "svd_pe": 637, "svdpe": 673, "system": 821, "t": [580, 606], "tagconv": [379, 427], "task": [314, 837, 838, 839, 857, 858, 862, 869], "temporallayerneighborsampl": 315, "temporalneighborsampl": 316, "tensor": [4, 698, 784, 858], "tensorflow": [17, 821], "test": [21, 843, 858, 868], "texasdataset": 187, "text": 858, "thread": 849, "time": [830, 847, 851, 855, 861, 864, 867, 871, 873, 877], "tip": 701, "to_bidirect": 638, "to_block": 639, "to_canonical_etyp": 109, "to_cugraph": [110, 640], "to_dens": 608, "to_doubl": 641, "to_float": 642, "to_half": 643, "to_heterogen": 644, "to_homogen": 645, "to_networkx": 646, "to_simpl": [111, 647], "to_simple_graph": 648, "togeth": [859, 862, 865, 869], "tolevi": 674, "tolokersdataset": 188, "tool": 702, "top": 693, "topk_edg": 649, "topk_nod": 650, "topologi": 1, "topological_nodes_gener": 651, "torchbasedfeatur": 317, "torchbasedfeaturestor": 318, "tosimpl": 675, "tra": 832, "train": [697, 702, 716, 718, 721, 722, 723, 725, 726, 731, 732, 734, 735, 736, 822, 823, 824, 825, 831, 833, 835, 840, 842, 843, 844, 850, 852, 853, 854, 857, 858, 869, 875, 876], "trainer": [833, 875], "trane": 875, "trans": 457, "transform": [0, 1, 3, 16, 19, 688, 824, 827, 841, 869], "transpos": 609, "transr": 458, "travers": [0, 862], "tree": 862, "treecycledataset": 189, "treegriddataset": 190, "tudataset": 186, "tutori": [688, 820, 826], "twirlsconv": 428, "twirlsunfoldingandattent": 429, "type": [1, 9, 22, 709, 729, 732, 813], "typedlinear": 392, "u_add_": [265, 508], "u_add_e_max": 509, "u_add_e_mean": 510, "u_add_e_min": 511, "u_add_e_sum": 512, "u_add_v": [266, 513], "u_div_": [267, 514], "u_div_e_max": 515, "u_div_e_mean": 516, "u_div_e_min": 517, "u_div_e_sum": 518, "u_div_v": [268, 519], "u_dot_": [269, 520], "u_dot_v": [270, 521], "u_mul_": [271, 522], "u_mul_e_max": 523, "u_mul_e_mean": 524, "u_mul_e_min": 525, "u_mul_e_sum": 526, "u_mul_v": [272, 527], "u_sub_": [273, 528], "u_sub_e_max": 529, "u_sub_e_mean": 530, "u_sub_e_min": 531, "u_sub_e_sum": 532, "u_sub_v": [274, 533], "ubuntu": 852, "udf": [676, 677, 678, 679, 680, 681, 682, 683, 684], "unbatch": 685, "under": 699, "understand": 859, "uniform": 226, "uniformnegativesampl": 319, "unique_and_compact": 336, "unique_and_compact_csc_format": 337, "unit": 21, "univers": 869, "unpin_memory_": 112, "up": [852, 853, 858, 869], "updat": [729, 865], "update_al": 113, "us": [1, 694, 707, 719, 733, 822, 843], "use_libxsmm": 686, "user": [20, 710, 842], "util": [0, 2, 3, 7, 15, 16, 699], "uva": 719, "v": [698, 784], "v0": 828, "v_add_": [275, 534], "v_add_u": [276, 535], "v_div_": [277, 536], "v_div_u": [278, 537], "v_dot_": [279, 538], "v_dot_u": [280, 539], "v_mul_": [281, 540], "v_mul_u": [282, 541], "v_sub_": [283, 542], "v_sub_u": [284, 543], "val": 610, "val_lik": 634, "valid": [852, 853], "valu": [705, 709, 790, 794], "variabl": 23, "variant": [860, 872], "via": [21, 845, 865], "visual": [858, 859, 869], "walk": 11, "web": 21, "weight": [733, 833], "weightandsum": 447, "weightbasi": 463, "welcom": 820, "what": [840, 841, 842, 844, 858, 859], "wikicsdataset": 192, "window": 821, "wisconsindataset": 193, "wise": [20, 827], "wn18dataset": 191, "work": [709, 722, 821], "workload": [4, 698, 784], "write": [713, 722, 734, 736, 842], "x": 858, "y": 858, "yaml": [693, 837, 838, 839], "yelpdataset": 194, "your": [718, 723, 842, 845, 848], "zincdataset": 195, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": 739, "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": 772, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": 765, "\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": 765, "\u4e8c\u8fdb\u5236\u683c\u5f0f": 749, "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": 749, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": 749, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": 749, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": 753, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": 740, "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": 753, "\u4f7f\u7528\u8fb9\u6743\u91cd": 773, "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": 773, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": 742, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": 748, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": 756, "\u5206\u5272\u6570\u636e\u96c6": 744, "\u5206\u5e03\u5f0f\u56fe": 744, "\u5206\u5e03\u5f0f\u5d4c\u5165": 744, "\u5206\u5e03\u5f0f\u5f20\u91cf": 744, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": 744, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": 744, "\u5206\u5e03\u5f0f\u8bad\u7ec3": 743, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": 745, "\u5206\u5e03\u5f0f\u91c7\u6837": 744, "\u521b\u5efadistgraph": 744, "\u521b\u5efa\u5f02\u6784\u56fe": 753, "\u5305\u542b\u8fc7\u65f6\u4fe1\u606f": 754, "\u53ef\u9009": 739, "\u56de\u5f52": [772, 776], "\u56fe": [747, 752], "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": 737, "\u56fe\u8bfb\u51fa": 774, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 751, "\u5728nn\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": 773, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 759, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": 760, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 758, "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": 772, "\u5904\u7406\u6570\u636e": 741, "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 741, "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": 741, "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": 741, "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": 761, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [762, 766], "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 761, "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 761, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": 763, "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 765, "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": 753, "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": 762, "\u5f02\u6784\u56fe": 753, "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": 766, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": 770, "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 774, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": 765, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": 762, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 776, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 772, "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": 761, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 775, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 764, "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": 761, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 771, "\u6279\u6b21": 760, "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": 774, "\u6279\u6b21\u7684\u56fe": 774, "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": 761, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": 746, "\u6570\u636e\u52a0\u8f7d": 774, "\u6574\u56fe\u5206\u7c7b": 774, "\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": 769, "\u672c\u7ae0\u8def\u7ebf\u56fe": [737, 747, 755, 760, 767, 771], "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": 767, "\u683c\u5f0f": 749, "\u6982\u8ff0": [771, 772, 774, 775, 776], "\u6a21\u5757": 767, "\u6a21\u578b\u5b9a\u4e49": 774, "\u6a21\u578b\u7684\u8bad\u7ec3": [762, 764, 766, 772, 774, 775, 776], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": 769, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": 755, "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 761, "\u7528\u6237\u6307\u5357": 754, "\u7b2c1\u7ae0": 747, "\u7b2c2\u7ae0": 755, "\u7b2c3\u7ae0": 767, "\u7b2c4\u7ae0": 737, "\u7b2c5\u7ae0": 771, "\u7b2c6\u7ae0": 760, "\u7b2c7\u7ae0": 743, "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": 764, "\u7f16\u5199dgl": 769, "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [774, 776], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": 757, "\u805a\u5408\u540e": 769, "\u8282\u70b9\u5206\u7c7b": 776, "\u8282\u70b9\u548c\u8fb9": 752, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 750, "\u8bad\u7ec3": 760, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": 771, "\u8bbf\u95ee\u56fe\u7ed3\u6784": 744, "\u8bbf\u95ee\u8282\u70b9": 744, "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [764, 766], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": 762, "\u8d1f\u8f7d\u5747\u8861": 745, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": 763, "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": 769, "\u8fb9\u5206\u7c7b": 772, "\u8fb9\u6570\u636e": 744, "\u8fb9\u7c7b\u578b\u5b50\u56fe": 753, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 746, "\u9017\u53f7\u5206\u9694\u503c": [749, 753], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": 760, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 766, "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 762, "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 764, "\u94fe\u63a5\u9884\u6d4b": 775, "\uac00\uc774\ub4dc": 795, "\uac00\uc911\uce58": 798, "\uac1c\uc694": [802, 815, 816, 817, 818, 819], "\uacb0\uacfc": 786, "\uacb0\uacfc\ub4e4\uc744": 786, "\uacbd\uc6b0": [804, 807, 809], "\uad6c\uc870": [784, 803], "\uad6c\ud604": 814, "\uad6c\ud604\uc0c1\uc758": 816, "\uad6c\ud604\ud558\uae30": [803, 806, 808], "\uadf8\ub798\ud504": [777, 781, 784, 785, 788, 789, 790, 793, 794, 801, 808, 813, 815, 816, 817, 819], "\uadf8\ub798\ud504\ub4e4": [803, 808, 818], "\uadf8\ub798\ud504\ub4e4\uc5d0": 806, "\uadf8\ub798\ud504\ub4e4\uc758": 817, "\uadf8\ub798\ud504\ub85c": 794, "\uadf8\ub798\ud504\ub97c": 794, "\uadf8\ub798\ud504\uc5d0": [786, 789, 802, 817], "\uadf8\ub798\ud504\uc5d0\uc11c": 804, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": 800, "\uadf8\ub798\ud504\uc758": [804, 807, 809, 816], "\uadf8\ub9ac\uace0": [793, 808], "\uae30\ubc18\uc758": 805, "\uae30\ubcf8\uc801\uc778": 789, "\ub098\ub204\uae30": 784, "\ub124\ud2b8\uc6cc\ud06c": [815, 817, 819], "\ub178\ub4dc": [781, 784, 786, 793, 809, 816, 819], "\ub178\ub4dc\uc640": 791, "\ub274\ub7f4": [815, 817, 819], "\ub2e4\ub8e8\uae30": 794, "\ub2e4\uc591\ud55c": 794, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 779, "\ub2e8\ub3c5": 784, "\ub300\ud55c": [786, 789, 802, 816], "\ub300\ud578": 806, "\ub370\uc774\ud130": [777, 779, 781, 782, 784, 785, 804, 805, 807, 809, 817], "\ub370\uc774\ud130\uc14b": 781, "\ub370\uc774\ud130\uc14b\ub4e4": 780, "\ub3d9\uc885": 794, "\ub4a4\uccd0\uc9c4": 795, "\ub514\uc2a4\ud06c\uc5d0\uc11c": [790, 794], "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c": 790, "\ub7f0\uce6d\ud558\uae30": 787, "\ub808\uc774\uc5b4": 803, "\ub85c\ub354": [804, 807, 809], "\ub85c\ub354\uc5d0\uc11c": 805, "\ub85c\ub4dc": 786, "\ub85c\ub4dc\ub9f5": [777, 788, 796, 802, 811, 815], "\ub85c\ub4dc\ud558\uae30": 780, "\ub85c\ub529": [782, 817], "\ub85c\ub529\ud558\uae30": [790, 794], "\ub85c\uc9c1": 814, "\ub8f9": [804, 807, 809, 816, 817, 818, 819], "\ub9ac\uadf8\ub798\uc158": 819, "\ub9ac\uadf8\ub808\uc158": 816, "\ub9ac\ub4dc\uc544\uc6c3": 817, "\ub9c1\ud06c": [781, 807, 818], "\ub9cc\ub4e4\uae30": [804, 807, 809, 811], "\ub9de\uac8c": [804, 807, 809], "\ub9e4\ud551": 786, "\uba40\ud2f0": 803, "\uba54\uc2dc\uc9c0": [797, 798, 799, 800, 803, 810, 813], "\uba54\uc9c0\uc2dc": [796, 801], "\uba85\uc138\ud654": 813, "\uba87\uac00\uc9c0": 789, "\ubaa8\ub378": [804, 807, 809, 817, 819], "\ubaa8\ub378\uacfc": 816, "\ubaa8\ub378\uc744": [804, 807, 809], "\ubaa8\ub4c8": [784, 808, 811, 812, 814], "\ubaa8\ub4c8\uc758": 813, "\ubaa8\ub4dc": 784, "\ubbf8\ub2c8": [804, 807, 808, 809], "\ubbf8\ub2c8\ubc30\uce58": 803, "\ubc0f": [786, 797, 804, 807, 809, 816], "\ubc14\uc774\ub108\ub9ac": [790, 794], "\ubc29\ubc95": [799, 802], "\ubc30\uce58": [804, 807, 808, 809, 817], "\ubc30\uce58\uc758": 804, "\ubc38\ub7f0\uc2f1": 786, "\ubcc0\ud658\ud558\uae30": [786, 794], "\ubd84\ub958": [781, 804, 809, 816, 817, 819], "\ubd84\uc0b0": [783, 784, 785, 786, 787], "\ube4c\ud2b8\uc778": 797, "\uc0ac\uc6a9\uc790": 795, "\uc0ac\uc6a9\ud558\uae30": [792, 805], "\uc0ac\uc6a9\ud55c": [790, 804, 807, 809, 810], "\uc0ac\uc6a9\ud574\uc11c": [780, 790], "\uc0d8\ud50c\ub7ec": [803, 804, 807, 809], "\uc0d8\ud50c\ub7ec\ub97c": 805, "\uc0d8\ud50c\ub9c1": [784, 785, 802, 803, 805], "\uc0d8\ud50c\ub9c1\uc5d0": 805, "\uc0d8\ud50c\ub9c1\uc744": [804, 807, 809], "\uc0dd\uc131": [784, 812], "\uc0dd\uc131\ud558\uae30": [786, 790, 794], "\uc11c\ube0c\uadf8\ub798\ud504": 794, "\uc124\uce58": 786, "\uc18c\uc2a4\ub97c": 790, "\uc2dc\ub300\uc5d0": 795, "\uc2e4\ud589\ud558\uae30": 786, "\uc5c5\ub370\uc774\ud2b8": 813, "\uc5d0\uc9c0": [784, 786, 793, 794, 798, 804, 816], "\uc5d0\uc9c0\ub4e4": 804, "\uc5d0\uc9c0\ub4e4\uc5d0": 816, "\uc5d0\uc9c0\uc758": 791, "\uc5f0\uc0b0\ud558\uae30": 817, "\uc608\uce21": [781, 807, 818], "\uc608\uce21\ud558\uae30": 816, "\uc624\ud504\ub77c\uc778": 806, "\uc678\ubd80": 790, "\uc6cc\ud06c\ub85c\ub4dc": 784, "\uc6d0\ubcf8": 804, "\uc704\ud55c": [786, 787, 803, 808, 813], "\uc704\ud574\uc11c": 804, "\uc758\uc874\uc131": 803, "\uc774\ubd84": [803, 808], "\uc774\uc6c3": [802, 803, 804, 805, 807, 809], "\uc774\uc885": [794, 800], "\uc77c\ubd80\uc5d0": 801, "\uc785\ub825": 786, "\uc791\uc131": 799, "\uc791\uc131\ud558\uae30": [808, 817, 819], "\uc800\uc7a5\uacfc": 782, "\uc801\uc6a9\ud558\uae30": [798, 801], "\uc804\ub2ec": [796, 797, 799, 800, 801, 803, 810], "\uc804\ub2ec\uacfc": 813, "\uc804\ub2ec\uc5d0": 798, "\uc804\ub2ec\uc744": 803, "\uc804\ucc98\ub9ac": 786, "\uc811\uadfc": 784, "\uc811\uadfc\ud558\uae30": 785, "\uc815\uc758": 789, "\uc815\uc758\ud558\uae30": [804, 807, 809, 817], "\uc815\ud655\ud55c": 806, "\uc81c\uac70\ud558\uae30": 804, "\uc9c1\uc811": 803, "\ucc28\uc774\uc810": 816, "\ucc3e\uae30": 803, "\uccb4\ud06c\uc640": 813, "\ucd08\uae30\ud654": 784, "\ucd94\ub860": 806, "\ucd94\ub860\uc744": 787, "\ucd95\uc57d": 813, "\ucd9c\ub825\uac12\uc744": 813, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": 803, "\ucee4\uc2a4\ud140": [803, 808], "\ucf54\ub4dc": 799, "\ud070": [802, 806], "\ud074\ub798\uc2a4": 778, "\ud0c0\uc785": [794, 813, 816], "\ud0c0\uc785\uc744": 794, "\ud150\uc11c": 784, "\ud234\ub4e4": 787, "\ud30c\uc774\ud504\ub77c\uc778": 777, "\ud30c\ud2f0\uc154\ub2dd": 786, "\ud328\ub7ec\ub2e4\uc784": 796, "\ud328\ud0a4\uc9c0\ub97c": 780, "\ud3ec\uba67": [786, 790, 794], "\ud3ec\uba67\ub4e4": 786, "\ud504\ub85c\uc138\uc2f1": 781, "\ud53c\ucc98": 791, "\ud53c\ucc98\ub4e4": 786, "\ud53c\uccd0": 813, "\ud559\uc2b5": [783, 787, 802, 804, 807, 809, 810, 816, 817, 818, 819], "\ud559\uc2b5\uc5d0": [804, 807, 809], "\ud559\uc2b5\uc744": [786, 808], "\ud559\uc2b5\ud558\uae30": [785, 804, 807, 809, 815], "\ud568\uaed8": 805, "\ud568\uc218": [797, 812, 813], "\ud568\uc218\uc640": 805, "\ud574\ubcf4\uae30": 803, "\ud6a8\uc728\uc801\uc778": 799, "\ud6c4": 813}})