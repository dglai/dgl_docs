Search.setIndex({"alltitles": {"1.1 Some Basic Definitions about Graphs (Graphs 101)": [[706, null]], "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [[750, null]], "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)": [[791, null]], "1.2 Graphs, Nodes, and Edges": [[710, null]], "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9": [[754, null]], "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0": [[795, null]], "1.3 Node and Edge Features": [[708, null]], "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [[752, null]], "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98": [[793, null]], "1.4 Creating Graphs from External Sources": [[707, null]], "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [[751, null]], "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[792, null]], "1.5 Heterogeneous Graphs": [[711, null]], "1.5 \u5f02\u6784\u56fe": [[755, null]], "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)": [[796, null]], "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30": [[794, null]], "1.6 Using DGLGraph on a GPU": [[709, null]], "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph": [[753, null]], "1\uc7a5: \uadf8\ub798\ud504": [[790, null]], "2.1 Built-in Functions and Message Passing APIs": [[714, null]], "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API": [[758, null]], "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4": [[799, null]], "2.2 Writing Efficient Message Passing Code": [[715, null]], "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [[759, null]], "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95": [[801, null]], "2.3 Apply Message Passing On Part Of The Graph": [[717, null]], "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[761, null]], "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30": [[803, null]], "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30": [[800, null]], "2.5 Message Passing on Heterogeneous Graph": [[716, null]], "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[760, null]], "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[802, null]], "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)": [[798, null]], "3.1 DGL NN Module Construction Function": [[730, null]], "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218": [[814, null]], "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [[770, null]], "3.2 DGL NN Module Forward Function": [[731, null]], "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218": [[815, null]], "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570": [[771, null]], "3.3 Heterogeneous GraphConv Module": [[732, null]], "3.3 Heterogeneous GraphConv \ubaa8\ub4c8": [[816, null]], "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757": [[772, null]], "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30": [[813, null]], "4.1 DGLDataset class": [[693, null]], "4.1 DGLDataset \ud074\ub798\uc2a4": [[780, null]], "4.1 DGLDataset\u7c7b": [[740, null]], "4.2 Download raw data (optional)": [[694, null]], "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)": [[781, null]], "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09": [[741, null]], "4.3 Process data": [[697, null]], "4.3 \u5904\u7406\u6570\u636e": [[743, null]], "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1": [[783, null]], "4.4 Save and load data": [[698, null]], "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [[744, null]], "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529": [[784, null]], "4.5 Loading OGB datasets using ogb package": [[696, null]], "4.5 ogb \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30": [[782, null]], "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6": [[742, null]], "4.6 Loading data from CSV files": [[695, null]], "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778": [[779, null]], "5.1 Node Classification/Regression": [[738, null]], "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52": [[778, null]], "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)": [[821, null]], "5.2 Edge Classification/Regression": [[734, null]], "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52": [[774, null]], "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)": [[818, null]], "5.3 Link Prediction": [[737, null]], "5.3 \u94fe\u63a5\u9884\u6d4b": [[777, null]], "5.3 \ub9c1\ud06c \uc608\uce21": [[820, null]], "5.4 Graph Classification": [[736, null]], "5.4 \u6574\u56fe\u5206\u7c7b": [[776, null]], "5.4 \uadf8\ub798\ud504 \ubd84\ub958": [[819, null]], "5.5 Use of Edge Weights": [[735, null]], "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd": [[775, null]], "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30": [[817, null]], "6.1 Training GNN for Node Classification with Neighborhood Sampling": [[725, null]], "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[768, null]], "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[811, null]], "6.2 Training GNN for Edge Classification with Neighborhood Sampling": [[720, null]], "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[764, null]], "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[806, null]], "6.3 Training GNN for Link Prediction with Neighborhood Sampling": [[723, null]], "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[766, null]], "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[809, null]], "6.4 Implementing Custom Graph Samplers": [[719, null]], "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [[763, null]], "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [[805, null]], "6.5 Training GNN with DGL sparse": [[727, null]], "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757": [[767, null]], "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30": [[810, null]], "6.6 Implementing Custom GNN Module for Mini-batch Training": [[724, null]], "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [[765, null]], "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860": [[808, null]], "6.7 Exact Offline Inference on Large Graphs": [[722, null]], "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30": [[807, null]], "6.8 Using GPU for Neighborhood Sampling": [[721, null]], "6.9 Data Loading Parallelism": [[726, null]], "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5": [[804, null]], "7.1 Data Preprocessing": [[703, null]], "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [[747, null]], "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac": [[788, null]], "7.1.1 Partitioning API": [[703, "partitioning-api"]], "7.1.1 \ubd84\uc0b0 \ud30c\ud2f0\uc154\ub2dd": [[788, "id3"]], "7.1.2 Distributed Graph Partitioning Pipeline": [[703, "distributed-graph-partitioning-pipeline"]], "7.2 Tools for launching distributed training/inference": [[704, null]], "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API": [[746, null]], "7.2 \ubd84\uc0b0 APIs": [[786, null]], "7.3 Programming APIs": [[700, null]], "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [[748, null]], "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30": [[787, null]], "7.3.1 \ubd84\uc0b0 \uadf8\ub798\ud504 \ub370\uc774\ud130 \uc811\uadfc\ud558\uae30": [[787, "id1"]], "7.3.2 \ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[787, "id2"]], "7.4 Advanced Graph Partitioning": [[702, null]], "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4": [[789, null]], "7.5 Heterogeneous Graph Under The Hood": [[701, null]], "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5": [[785, null]], "8\uc7a5: Mixed Precision \ud559\uc2b5": [[812, null]], "A Batched Graph in DGL": [[846, "a-batched-graph-in-dgl"]], "A Blitz Introduction to DGL": [[848, null]], "A brief introduction to R-GCN": [[859, "a-brief-introduction-to-r-gcn"]], "AGNNConv": [[365, null], [395, null]], "AIFBDataset": [[132, null]], "AMDataset": [[133, null]], "API Reference": [[13, null]], "APPNPConv": [[366, null], [396, null], [466, null]], "Access distributed graph data": [[701, "access-distributed-graph-data"]], "Access node/edge data": [[700, "access-node-edge-data"]], "Accessing graph structure": [[700, "accessing-graph-structure"]], "Action 1: Add nodes": [[867, "action-1-add-nodes"]], "Action 2: Add edges": [[867, "action-2-add-edges"]], "Action 3: Choose a destination": [[867, "action-3-choose-a-destination"]], "Actions": [[867, "actions"]], "ActorDataset": [[134, null]], "Adapt your model for minibatch training": [[720, "adapt-your-model-for-minibatch-training"], [725, "adapt-your-model-for-minibatch-training"]], "Adaptive Universal Transformer": [[871, "adaptive-universal-transformer"]], "AddEdge": [[654, null]], "AddMetaPaths": [[655, null]], "AddReverse": [[656, null]], "AddSelfLoop": [[657, null]], "Adjacency Related Utilities": [[0, "adjacency-related-utilities"]], "Adjacency and incidence matrix": [[1, "adjacency-and-incidence-matrix"]], "After Partition Loading": [[701, "after-partition-loading"]], "Alternative memory allocators": [[851, "alternative-memory-allocators"]], "AmazonCoBuyComputerDataset": [[135, null]], "AmazonCoBuyPhotoDataset": [[136, null]], "AmazonRatingsDataset": [[137, null]], "AsGraphPredDataset": [[138, null]], "AsLinkPredDataset": [[139, null]], "AsNodePredDataset": [[140, null]], "Assigning Node and Edge Features to Graph": [[843, "assigning-node-and-edge-features-to-graph"]], "AtomicConv": [[397, null]], "Attention layer of Transformer": [[871, "attention-layer-of-transformer"]], "Attributes and methods": [[12, "attributes-and-methods"]], "Attributes and methods of a DGL Sparse Matrix": [[829, "Attributes-and-methods-of-a-DGL-Sparse-Matrix"]], "AvgPooling": [[382, null], [441, null], [474, null]], "BA2MotifDataset": [[141, null]], "BACommunityDataset": [[142, null]], "BAShapeDataset": [[143, null]], "BFloat16 CPU example": [[728, "bfloat16-cpu-example"]], "BGSDataset": [[144, null]], "Backend Options": [[23, "backend-options"]], "Base Class": [[2, "base-class"]], "BaseTransform": [[658, null]], "BasicFeatureStore": [[288, null]], "Batch of Graphs": [[736, "batch-of-graphs"]], "Batching and Reading Out Ops": [[0, "batching-and-reading-out-ops"]], "Batching graphs for parallelism": [[860, "batching-graphs-for-parallelism"]], "Batching many small graphs": [[865, null], [874, "batching-many-small-graphs"]], "Benchmark the performance of KNN algorithms": [[14, null]], "Best practice of writing custom GNN modules": [[844, "best-practice-of-writing-custom-gnn-modules"]], "BiasedMHA": [[450, null]], "Binary community subgraph from Cora with a test dataset": [[860, "binary-community-subgraph-from-cora-with-a-test-dataset"]], "BitcoinOTCDataset": [[145, null]], "Broadcast operations": [[829, "Broadcast-operations"]], "Broadcast operators": [[12, "broadcast-operators"]], "Build Model": [[691, null]], "Building Docs Locally": [[21, "building-docs-locally"]], "Building a Graph Convolutional Network Using Sparse Matrices": [[824, null]], "Building and Testing": [[21, "building-and-testing"]], "BuiltinDataset": [[289, null]], "CFConv": [[398, null]], "CIFAR10SuperPixelDataset": [[146, null]], "CLUSTERDataset": [[147, null]], "CPU Best Practices": [[851, null]], "CPUCachedFeature": [[290, null]], "CSVDataset": [[148, null]], "Capsule Network": [[870, null]], "Chain-up LGNN abstractions as an LGNN layer": [[860, "chain-up-lgnn-abstractions-as-an-lgnn-layer"]], "Chain-up LGNN layers": [[860, "chain-up-lgnn-layers"]], "ChameleonDataset": [[149, null]], "Chapter 1: Graph": [[705, null]], "Chapter 2: Message Passing": [[713, null]], "Chapter 3: Building GNN Modules": [[729, null]], "Chapter 4: Graph Data Pipeline": [[692, null]], "Chapter 5: Training Graph Neural Networks": [[733, null]], "Chapter 6: Stochastic Training on Large Graphs": [[718, null]], "Chapter 7: Distributed Training": [[699, null]], "Chapter 8: Mixed Precision Training": [[728, null]], "ChebConv": [[367, null], [399, null], [467, null]], "Chunked Graph Format": [[703, "chunked-graph-format"]], "CiteseerGraphDataset": [[150, null]], "ClusterGCNSampler": [[209, null]], "CoauthorCSDataset": [[151, null]], "CoauthorPhysicsDataset": [[152, null]], "Coding styles": [[21, "coding-styles"]], "Comma Separated Values (CSV)": [[707, "comma-separated-values-csv"], [711, "comma-separated-values-csv"], [792, "comma-separated-values-csv"], [796, "comma-separated-values-csv"]], "Community detection": [[860, "community-detection"]], "Community detection in a supervised setting": [[860, "community-detection-in-a-supervised-setting"]], "Completing f(x, y)": [[860, "completing-f-x-y"]], "Compose": [[659, null]], "Composing OnDiskDataset from raw data": [[838, null]], "Computation on a Batched Graph": [[736, "computation-on-a-batched-graph"]], "Computation times": [[832, null], [849, null], [853, null], [857, null], [863, null], [866, null], [869, null], [873, null], [875, null], [879, null]], "Computing with DGLGraph": [[1, "computing-with-dglgraph"]], "Conclusion": [[14, "conclusion"], [834, "Conclusion"], [837, "Conclusion"]], "Containers": [[22, "containers"]], "Contribute to DGL": [[21, null]], "Contributing Code Changes": [[21, "contributing-code-changes"]], "Contributing Core Features": [[21, "contributing-core-features"]], "Contributing Documentations": [[21, "contributing-documentations"]], "Contributing Editorial Changes via GitHub Web Interface": [[21, "contributing-editorial-changes-via-github-web-interface"]], "Contributing New Models as Examples": [[21, "contributing-new-models-as-examples"]], "Contribution": [[822, "contribution"]], "Conv Layers": [[15, "conv-layers"], [16, "conv-layers"], [17, "conv-layers"]], "Converting Heterogeneous Graphs to Homogeneous Graphs": [[711, "converting-heterogeneous-graphs-to-homogeneous-graphs"]], "CopyTo": [[7, "copyto"], [291, null]], "Cora": [[861, "cora"]], "Cora dataset": [[860, "cora-dataset"]], "CoraFullDataset": [[153, null]], "CoraGraphDataset": [[154, null]], "CornellDataset": [[155, null]], "Create graph and model": [[859, "create-graph-and-model"]], "Creating Dataset from CSV via CSVDataset": [[847, "creating-dataset-from-csv-via-csvdataset"]], "Creating Graphs from External Libraries": [[707, "creating-graphs-from-external-libraries"]], "Creating a DGL Sparse Matrix": [[829, "Creating-a-DGL-Sparse-Matrix"]], "Creating a Dataset for Graph Classification from CSV": [[847, "creating-a-dataset-for-graph-classification-from-csv"]], "Creating a Dataset for Node Classification or Link Prediction from CSV": [[847, "creating-a-dataset-for-node-classification-or-link-prediction-from-csv"]], "Creating a Heterogeneous Graph": [[711, "creating-a-heterogeneous-graph"]], "Creation Ops": [[12, "creation-ops"]], "CuGraph Conv Layers": [[16, "cugraph-conv-layers"]], "CuGraphGATConv": [[400, null]], "CuGraphRelGraphConv": [[401, null]], "CuGraphSAGEConv": [[402, null]], "Custom Data Parser": [[695, "custom-data-parser"]], "DGL Binary Format": [[707, "dgl-binary-format"], [711, "dgl-binary-format"]], "DGL Built-in Function": [[5, "dgl-built-in-function"]], "DGL Foreign Function Interface (FFI)": [[22, null]], "DGL Graph Construction": [[843, "dgl-graph-construction"]], "DGL \u4e8c\u8fdb\u5236\u683c\u5f0f": [[751, "dgl"]], "DGL \ub370\uc774\ud130 \ub85c\ub354\uc5d0\uc11c GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc0ac\uc6a9\ud558\uae30": [[807, "dgl-gpu"]], "DGL \ubc14\uc774\ub108\ub9ac \ud3ec\uba67": [[792, "dgl"], [796, "dgl"]], "DGL \ubd84\uc0b0 \ubaa8\ub4c8 \ucd08\uae30\ud654": [[786, "dgl"]], "DGLDataset": [[156, null]], "DGLDataset Object Overview": [[847, "dgldataset-object-overview"]], "DGL\u4e8c\u8fdb\u5236\u683c\u5f0f": [[755, "dgl"]], "DGL\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": [[746, "dgl"]], "DGMG: Optimization objective": [[867, "dgmg-optimization-objective"]], "DGMG: The implementation": [[867, "dgmg-the-implementation"]], "DGMG: The main flow": [[867, "dgmg-the-main-flow"]], "DGNConv": [[403, null]], "Data Loader Preparation": [[876, "data-loader-preparation"]], "Data Loading": [[736, "data-loading"]], "Data Repository": [[23, "data-repository"]], "Data folder structure": [[695, "data-folder-structure"]], "Data hosting": [[21, "data-hosting"]], "Data preparation": [[840, "Data-preparation"], [841, "Data-preparation"]], "DataLoader": [[7, "dataloader"], [210, null], [292, null]], "DataLoaders": [[3, "dataloaders"]], "Dataset": [[7, "dataset"], [293, null]], "Dataset adapters": [[2, "dataset-adapters"]], "Dataset of a single feature-less graph": [[695, "dataset-of-a-single-feature-less-graph"]], "Dataset of a single graph with features and labels": [[695, "dataset-of-a-single-graph-with-features-and-labels"]], "Dataset of a single heterogeneous graph": [[695, "dataset-of-a-single-heterogeneous-graph"]], "Dataset of multiple graphs": [[695, "dataset-of-multiple-graphs"]], "DeepWalk": [[389, null]], "Define Model": [[846, "define-model"]], "Define a GNN model": [[854, "define-a-gnn-model"], [855, "define-a-gnn-model"]], "Define a GraphSAGE model": [[845, "define-a-graphsage-model"]], "Define a GraphSAGE model for minibatch training": [[723, "define-a-graphsage-model-for-minibatch-training"]], "Define a data loader with neighbor and negative sampling": [[723, "define-a-data-loader-with-neighbor-and-negative-sampling"]], "Define a neighborhood sampler and data loader": [[720, "define-a-neighborhood-sampler-and-data-loader"], [725, "define-a-neighborhood-sampler-and-data-loader"]], "Defining Data Loader": [[846, "defining-data-loader"]], "Defining Model": [[835, "Defining-Model"], [837, "Defining-Model"], [877, "defining-model"]], "Defining Model for Node Representation": [[834, "Defining-Model-for-Node-Representation"]], "Defining Neighbor Sampler and Data Loader in DGL": [[834, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [835, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [837, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"]], "Defining Traing Loop": [[834, "Defining-Traing-Loop"]], "Defining Training Loop": [[837, "Defining-Training-Loop"]], "Defining Training and Evaluation Procedures": [[835, "Defining-Training-and-Evaluation-Procedures"]], "Defining Traning and Evaluation Procedures": [[877, "defining-traning-and-evaluation-procedures"]], "Defining a Graph Convolutional Network (GCN)": [[842, "defining-a-graph-convolutional-network-gcn"]], "Defining new types": [[22, "defining-new-types"]], "Degree Bucketing for Message Passing with User Defined Functions": [[20, "degree-bucketing-for-message-passing-with-user-defined-functions"]], "Degree Encoding": [[691, "degree-encoding"]], "DegreeEncoder": [[451, null]], "Dense Conv Layers": [[15, "dense-conv-layers"], [16, "dense-conv-layers"]], "DenseChebConv": [[368, null], [404, null]], "DenseGraphConv": [[369, null], [405, null]], "DenseSAGEConv": [[370, null], [406, null]], "Description": [[6, "description"], [395, "description"], [396, "description"], [397, "description"], [398, "description"], [403, "description"], [406, "description"], [406, "id1"], [407, "description"], [409, "description"], [410, "description"], [411, "description"], [411, "id1"], [412, "description"], [413, "description"], [413, "id1"], [414, "description"], [414, "id1"], [415, "description"], [415, "id1"], [416, "description"], [418, "description"], [418, "id1"], [419, "description"], [420, "description"], [420, "id1"], [421, "description"], [421, "id1"], [424, "description"], [425, "description"], [427, "description"], [427, "id1"], [428, "description"], [428, "id1"], [429, "description"], [429, "id1"], [430, "description"], [431, "description"], [431, "id1"], [458, "description"], [458, "id1"], [459, "description"], [459, "id1"], [460, "description"], [462, "description"], [462, "id1"]], "Device Control": [[1, "device-control"]], "Diagonal Matrix": [[829, "Diagonal-Matrix"]], "DiskBasedFeature": [[294, null]], "DistEdgeDataLoader": [[211, null]], "DistGraph creation": [[700, "distgraph-creation"]], "DistGraph \uc0dd\uc131": [[786, "distgraph"]], "DistNodeDataLoader": [[212, null]], "Distributed DataLoader": [[4, "distributed-dataloader"]], "Distributed DistEmbedding": [[700, "distributed-distembedding"]], "Distributed Graph": [[4, "distributed-graph"]], "Distributed Graph Sampling Operators": [[4, "distributed-graph-sampling-operators"]], "Distributed Link Prediction": [[855, null]], "Distributed Node Classification": [[854, null]], "Distributed Node Embedding": [[4, "distributed-node-embedding"]], "Distributed Process Group Initialization": [[876, "distributed-process-group-initialization"]], "Distributed Sampling": [[4, "distributed-sampling"]], "Distributed Tensor": [[4, "distributed-tensor"], [700, "distributed-tensor"]], "Distributed embedding optimizer": [[4, "distributed-embedding-optimizer"]], "Distributed graph": [[700, "distributed-graph"]], "Distributed mini-batch sampler": [[854, "distributed-mini-batch-sampler"], [855, "distributed-mini-batch-sampler"]], "Distributed mode vs. standalone mode": [[700, "distributed-mode-vs-standalone-mode"]], "Distributed sampling": [[700, "distributed-sampling"]], "Distributed training": [[856, null]], "Distributed training script": [[854, "distributed-training-script"], [855, "distributed-training-script"]], "Distributed workload split": [[4, "distributed-workload-split"]], "Distributed \uadf8\ub798\ud504": [[786, "distributed"]], "DistributedItemSampler": [[295, null]], "DotGatConv": [[407, null]], "DropEdge": [[660, null]], "DropNode": [[661, null]], "During Preprocessing": [[701, "during-preprocessing"]], "EGATConv": [[408, null]], "EGNNConv": [[409, null]], "EGTLayer": [[452, null]], "Edge Prediction Datasets": [[2, "edge-prediction-datasets"]], "Edge Type Subgraph": [[711, "edge-type-subgraph"]], "Edge-wise User-defined Function": [[20, "edge-wise-user-defined-function"]], "EdgeConv": [[371, null], [410, null]], "EdgeData": [[695, "edgedata"]], "EdgeGATConv": [[411, null]], "EdgePredictor": [[458, null]], "EdgeWeightNorm": [[412, null]], "Element-wise functions": [[829, "Element-wise-functions"]], "Elementwise Operators": [[12, "elementwise-operators"]], "Elementwise operations": [[829, "Elementwise-operations"]], "Enable GraphBolt sampling in the training script": [[854, "enable-graphbolt-sampling-in-the-training-script"]], "Enabling ARGO on your own GNN program": [[850, "enabling-argo-on-your-own-gnn-program"]], "Encoding a dynamic graph": [[867, "encoding-a-dynamic-graph"]], "End-to-End Mixed Precision Training": [[728, "end-to-end-mixed-precision-training"]], "End-to-End Mixed Precision \ud559\uc2b5": [[812, "end-to-end-mixed-precision"]], "Environment Variables": [[23, null]], "Equation (1)": [[861, "equation-1"]], "Equation (2)": [[861, "equation-2"]], "Equation (3) & (4)": [[861, "equation-3-4"]], "Evaluating Performance with Link Prediction": [[834, "Evaluating-Performance-with-Link-Prediction"]], "Evaluation Loop": [[877, "evaluation-loop"]], "Evaluation function": [[835, "Evaluation-function"]], "Even more customization by user-defined function": [[844, "even-more-customization-by-user-defined-function"]], "Example: MAG240M-LSC": [[703, "example-mag240m-lsc"]], "Examples on a heterogeneous graph": [[363, "examples-on-a-heterogeneous-graph"]], "Examples on a homogeneous graph": [[363, "examples-on-a-homogeneous-graph"]], "Exclude Edges After Sampling": [[719, "exclude-edges-after-sampling"]], "Execute on specific edges": [[871, "execute-on-specific-edges"]], "Exercise #1": [[829, "Exercise-#1"]], "Exercise #2": [[829, "Exercise-#2"]], "FB15k237Dataset": [[157, null]], "FB15kDataset": [[158, null]], "FakeNewsDataset": [[159, null]], "Farthest Point Sampler": [[6, "farthest-point-sampler"]], "FeatMask": [[662, null]], "Feature": [[296, null]], "Feature and FeatureStore": [[7, "feature-and-featurestore"]], "FeatureFetcher": [[7, "featurefetcher"], [297, null]], "FeatureStore": [[298, null]], "FlickrDataset": [[160, null]], "For heterogeneous graphs": [[720, "for-heterogeneous-graphs"], [723, "for-heterogeneous-graphs"], [725, "for-heterogeneous-graphs"]], "FraudAmazonDataset": [[161, null]], "FraudDataset": [[162, null]], "FraudYelpDataset": [[163, null]], "Frequently Asked Questions (FAQ)": [[24, null]], "Full R-GCN model defined": [[859, "full-r-gcn-model-defined"]], "Full YAML Specification": [[695, "full-yaml-specification"]], "FusedCSCSamplingGraph": [[299, null]], "GAT in DGL": [[861, "gat-in-dgl"]], "GATConv": [[372, null], [413, null], [468, null]], "GATv2Conv": [[414, null]], "GCN from the perspective of message passing": [[858, "gcn-from-the-perspective-of-message-passing"]], "GCN implementation with DGL": [[858, "gcn-implementation-with-dgl"]], "GCN in one formula": [[858, "gcn-in-one-formula"]], "GCN2Conv": [[415, null]], "GCNNorm": [[663, null]], "GDC": [[664, null]], "GDELTDataset": [[164, null]], "GINConv": [[373, null], [416, null], [469, null]], "GINDataset": [[165, null]], "GINEConv": [[417, null]], "GMMConv": [[374, null], [418, null]], "GNNExplainer": [[432, null]], "GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub7ec\ub97c DGL \ud568\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30": [[807, "gpu-dgl"]], "GPUCachedFeature": [[300, null]], "GSDDMM functions": [[9, "gsddmm-functions"]], "GSpMM functions": [[9, "gspmm-functions"]], "GatedGCNConv": [[419, null]], "GatedGraphConv": [[375, null], [420, null]], "GatherMM and SegmentMM Module": [[9, "gathermm-and-segmentmm-module"]], "General development process": [[21, "general-development-process"]], "Generate feature data for graph": [[840, "Generate-feature-data-for-graph"], [841, "Generate-feature-data-for-graph"]], "Generate graph structure data": [[840, "Generate-graph-structure-data"], [841, "Generate-graph-structure-data"]], "Generate tasks": [[840, "Generate-tasks"], [841, "Generate-tasks"]], "Generative Models of Graphs": [[867, null]], "Generative models": [[868, null], [874, "generative-models"]], "Get training and validation node IDs": [[854, "get-training-and-validation-node-ids"], [855, "get-training-and-validation-node-ids"]], "Getting Started": [[822, "getting-started"]], "Git setup (for developers)": [[21, "git-setup-for-developers"]], "Global Configurations": [[23, "global-configurations"]], "Global Pooling Layers": [[15, "global-pooling-layers"], [16, "global-pooling-layers"], [17, "global-pooling-layers"]], "GlobalAttentionPooling": [[383, null], [442, null], [475, null]], "GlobalUniform": [[226, null]], "Graph": [[7, "graph"]], "Graph Convolutional Layer": [[824, "Graph-Convolutional-Layer"]], "Graph Convolutional Network": [[858, null]], "Graph Create Ops": [[0, "graph-create-ops"]], "Graph Diffusion": [[825, "Graph-Diffusion"]], "Graph Diffusion in GNNs": [[825, "Graph-Diffusion-in-GNNs"]], "Graph Diffusion in Graph Neural Networks": [[825, null]], "Graph Partition Utilities": [[0, "graph-partition-utilities"]], "Graph Positional Encoding Ops:": [[0, "graph-positional-encoding-ops"]], "Graph Prediction Datasets": [[2, "graph-prediction-datasets"]], "Graph Readout": [[736, "graph-readout"]], "Graph Transform Ops": [[0, "graph-transform-ops"]], "Graph Transformations": [[843, "graph-transformations"]], "Graph Transformer Layer": [[826, "Graph-Transformer-Layer"]], "Graph Transformer Model": [[826, "Graph-Transformer-Model"]], "Graph Transformer in a Nutshell": [[826, null]], "Graph Traversal & Message Propagation": [[0, "graph-traversal-message-propagation"]], "Graph building": [[871, "graph-building"]], "Graph checking and graph type specification": [[731, "graph-checking-and-graph-type-specification"]], "Graph embedding": [[867, "graph-embedding"]], "Graph neural networks and its variants": [[862, null], [874, "graph-neural-networks-and-its-variants"]], "Graph partition book": [[4, "graph-partition-book"]], "Graph partitioning": [[854, "graph-partitioning"]], "Graph structure": [[871, "graph-structure"]], "GraphConv": [[376, null], [421, null], [470, null]], "GraphData": [[695, "graphdata"]], "GraphDataLoader": [[213, null]], "Graphormer Layer": [[691, "graphormer-layer"]], "GraphormerLayer": [[453, null]], "GroupRevRes": [[422, null]], "HGTConv": [[423, null]], "Half precision\uc744 \uc0ac\uc6a9\ud55c \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[812, "half-precision"]], "Handle dataset": [[859, "handle-dataset"]], "HeatKernel": [[665, null]], "HeteroEmbedding": [[390, null]], "HeteroGNNExplainer": [[433, null]], "HeteroGraphConv": [[364, null], [391, null], [476, null]], "HeteroGraphConv implementation logic:": [[732, "heterographconv-implementation-logic"]], "HeteroGraphConv \uad6c\ud604 \ub85c\uc9c1:": [[816, "heterographconv"]], "HeteroGraphConv\u7684\u5b9e\u73b0\u903b\u8f91": [[772, "heterographconv"]], "HeteroItemSet": [[301, null]], "HeteroLinear": [[392, null]], "HeteroPGExplainer": [[434, null]], "HeteroSubgraphX": [[435, null]], "Heterogeneous Graphs": [[733, "heterogeneous-graphs"]], "Heterogeneous Learning Modules": [[15, "heterogeneous-learning-modules"], [16, "heterogeneous-learning-modules"], [17, "heterogeneous-learning-modules"]], "Heterogeneous graph": [[734, "heterogeneous-graph"], [736, "heterogeneous-graph"], [738, "heterogeneous-graph"]], "Heterogeneous graphs": [[724, "heterogeneous-graphs"], [737, "heterogeneous-graphs"]], "Heterogeneous \uadf8\ub798\ud504": [[817, "heterogeneous"], [818, "heterogeneous"], [819, "heterogeneous"], [821, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\ub4e4": [[805, "heterogeneous"], [805, "id5"], [810, "heterogeneous"], [820, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \ub178\ub4dc/\uc5d0\uc9c0 \ud53c\ucc98\ub4e4 \uc0dd\uc131\ud558\uae30": [[788, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uacbd\uc6b0": [[806, "heterogeneous"], [809, "heterogeneous"], [811, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uc5d0\uc9c0\ub4e4\uc5d0 \ub300\ud55c \uc5d0\uc9c0 \ud0c0\uc785 \uc608\uce21\ud558\uae30": [[818, "id3"]], "Homogeneous \uadf8\ub798\ud504, \uc774\ubd84 \uadf8\ub798\ud504(bipartite graph), \uadf8\ub9ac\uace0 MFG\ub97c \uc704\ud55c \ubaa8\ub4c8 \uc791\uc131\ud558\uae30": [[810, "homogeneous-bipartite-graph-mfg"]], "Homophily Measures": [[0, "homophily-measures"]], "How DGL Handles Computation Dependency\u00b6": [[837, "How-DGL-Handles-Computation-Dependency\u00b6"]], "How DGL implements Transformer with a graph neural network": [[871, "how-dgl-implements-transformer-with-a-graph-neural-network"]], "How Does DGL Represent A Graph?": [[843, null]], "Hyper-threading": [[851, "hyper-threading"]], "Hypergraph Neural Network (HGNN) Layer": [[827, "Hypergraph-Neural-Network-(HGNN)-Layer"]], "Hypergraph Neural Networks": [[827, null]], "Hypergraphs": [[827, "Hypergraphs"]], "ICEWS18Dataset": [[166, null]], "ID Conversion Utilities": [[701, "id-conversion-utilities"]], "ID mapping": [[703, "id-mapping"]], "ID \ub9e4\ud551": [[788, "id"]], "Implement LGNN in DGL": [[860, "implement-lgnn-in-dgl"]], "Implement R-GCN in DGL": [[859, "implement-r-gcn-in-dgl"]], "Implementing Offline Inference": [[722, "implementing-offline-inference"]], "Implementing \\text{fuse} as sparse matrix multiplication": [[860, "implementing-text-fuse-as-sparse-matrix-multiplication"]], "Implementing \\text{prev} and \\text{deg} as tensor operation": [[860, "implementing-text-prev-and-text-deg-as-tensor-operation"]], "Implementing \\text{radius} as message passing in DGL": [[860, "implementing-text-radius-as-message-passing-in-dgl"]], "Importing Packages": [[877, "importing-packages"]], "Improve Scalability on Multi-Core CPUs": [[850, null]], "InSubgraphSampler": [[302, null]], "Index": [[822, "index"]], "Inference": [[855, "inference"]], "Initialization": [[4, "initialization"]], "Initialization of the DGL distributed module": [[700, "initialization-of-the-dgl-distributed-module"]], "Initialize network communication": [[854, "initialize-network-communication"], [855, "initialize-network-communication"]], "Initializing a DGL Diagonal Sparse Matrix": [[829, "Initializing-a-DGL-Diagonal-Sparse-Matrix"]], "Input format": [[702, "input-format"]], "Install DGL package": [[834, "Install-DGL-package"], [837, "Install-DGL-package"], [840, "Install-DGL-package"], [841, "Install-DGL-package"]], "Install DGL package and other dependencies": [[835, "Install-DGL-package-and-other-dependencies"]], "Install and Setup": [[823, null]], "Install from Conda or Pip": [[823, "install-from-conda-or-pip"]], "Install from source": [[823, "install-from-source"]], "Installation": [[850, "installation"]], "Instantiate OnDiskDataset": [[840, "Instantiate-OnDiskDataset"], [841, "Instantiate-OnDiskDataset"]], "Integrated Benchmarks": [[830, "integrated-benchmarks"]], "Intel": [[851, "intel"]], "Introducing attention to GCN": [[861, "introducing-attention-to-gcn"]], "Introduction": [[867, "introduction"]], "ItemSampler": [[7, "itemsampler"], [303, null]], "ItemSet": [[7, "itemset"], [304, null]], "JSON/GML Format": [[707, "json-gml-format"]], "JSON/GML \u683c\u5f0f": [[751, "json-gml"]], "JSON/GML \ud3ec\uba67": [[792, "json-gml"]], "JumpingKnowledge": [[462, null]], "KHopGraph": [[666, null]], "KNNGraph": [[438, null]], "KarateClubDataset": [[167, null]], "Key ideas of Capsule": [[870, "key-ideas-of-capsule"]], "Key ideas of R-GCN": [[859, "key-ideas-of-r-gcn"]], "Label Informativeness Measures": [[0, "label-informativeness-measures"]], "LabelPropagation": [[463, null]], "LaborSampler": [[214, null]], "LapPE": [[667, null]], "LapPosEncoder": [[454, null]], "Launch the distributed training job": [[854, "launch-the-distributed-training-job"]], "LayerNeighborSampler": [[305, null]], "LazyFeature": [[221, null]], "LegacyDataset": [[306, null]], "LegacyTUDataset": [[168, null]], "Line Graph Neural Network": [[860, null]], "Line graph neural network key ideas": [[860, "line-graph-neural-network-key-ideas"]], "LineGraph": [[668, null]], "Link Prediction": [[834, null]], "Link Prediction Task": [[840, "Link-Prediction-Task"], [841, "Link-Prediction-Task"]], "Link Prediction using Graph Neural Networks": [[845, null]], "Linux": [[823, "linux"]], "Load balancing": [[703, "load-balancing"]], "Load partitioned graphs": [[703, "load-partitioned-graphs"]], "Loading Cora Dataset": [[842, "loading-cora-dataset"]], "Loading Data": [[827, "Loading-Data"], [846, "loading-data"]], "Loading Dataset": [[834, "Loading-Dataset"], [837, "Loading-Dataset"]], "Loading Graphs from Disk": [[707, "loading-graphs-from-disk"]], "Loading Heterographs from Disk": [[711, "loading-heterographs-from-disk"]], "Loading and Saving Graphs": [[843, "loading-and-saving-graphs"]], "Loading graph and features": [[845, "loading-graph-and-features"]], "METIS partition algorithm": [[702, "metis-partition-algorithm"]], "MNISTSuperPixelDataset": [[169, null]], "MUTAGDataset": [[170, null]], "MXNet backend": [[823, "mxnet-backend"]], "Main Function for Each Process": [[876, "main-function-for-each-process"]], "Main Loop": [[864, "main-loop"]], "Main class of Transformer graph": [[871, "main-class-of-transformer-graph"]], "Make Your Own Dataset": [[847, null]], "Matrix Multiplication": [[12, "matrix-multiplication"]], "Matrix multiplication": [[829, "Matrix-multiplication"]], "Matrix transformations": [[829, "Matrix-transformations"]], "MaxPooling": [[384, null], [443, null], [477, null]], "Message Passing Paradigm": [[713, "message-passing-paradigm"]], "Message Passing Review": [[836, "Message-Passing-Review"]], "Message Passing with Edge Weights": [[735, "message-passing-with-edge-weights"]], "Message aggregation": [[871, "message-aggregation"]], "Message computation": [[871, "message-computation"]], "Message functions": [[5, "message-functions"]], "Message passing": [[871, "message-passing"]], "Message passing and GNNs": [[844, "message-passing-and-gnns"]], "Message passing and reducing": [[731, "message-passing-and-reducing"]], "Message-Passing with Half Precision": [[728, "message-passing-with-half-precision"]], "MetaPath2Vec": [[393, null]], "MinesweeperDataset": [[171, null]], "Mini-batch Data Loading": [[877, "mini-batch-data-loading"]], "MiniBatch": [[7, "minibatch"], [307, null]], "MiniBatchTransformer": [[308, null]], "MiniGCDataset": [[172, null]], "Misc": [[1, "misc"]], "Model Definition": [[736, "model-definition"]], "Model Forward": [[691, "model-forward"]], "Model Implementation Difference from Node Classification": [[734, "model-implementation-difference-from-node-classification"]], "Model Initialization": [[876, "model-initialization"]], "Model Overview": [[858, "model-overview"]], "Model implementation": [[870, "model-implementation"]], "More customization": [[844, "more-customization"]], "MovieLensDataset": [[173, null]], "Multi-GPU Node Classification": [[835, null]], "Multi-head attention": [[861, "multi-head-attention"], [871, "multi-head-attention"]], "Multi-head attention layer": [[871, "multi-head-attention-layer"]], "MultiLayerFullNeighborSampler": [[215, null]], "Mutating topology": [[1, "mutating-topology"]], "NFS client side setup (ubuntu only)": [[854, "nfs-client-side-setup-ubuntu-only"]], "NFS server side setup (ubuntu only)": [[854, "nfs-server-side-setup-ubuntu-only"]], "NNConv": [[377, null], [424, null]], "Negative Samplers for Link Prediction": [[3, "negative-samplers-for-link-prediction"]], "Negative sampling": [[11, "negative-sampling"]], "Negative \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[809, "negative"]], "NegativeSampler": [[7, "negativesampler"], [309, null]], "Neighbor Matching": [[6, "neighbor-matching"]], "Neighbor Sampling Overview": [[836, null], [836, "id1"]], "Neighbor sampling": [[11, "neighbor-sampling"]], "NeighborSampler": [[216, null], [310, null]], "Network Embedding Modules": [[16, "network-embedding-modules"]], "Node Classification": [[837, null]], "Node Classification Task": [[840, "Node-Classification-Task"], [841, "Node-Classification-Task"]], "Node Classification with DGL": [[842, null]], "Node Prediction Datasets": [[2, "node-prediction-datasets"]], "Node embedding optimizer": [[10, "node-embedding-optimizer"]], "Node-wise User-defined Function": [[20, "node-wise-user-defined-function"]], "NodeData": [[695, "nodedata"]], "NodeEmbedding": [[461, null]], "NodeShuffle": [[669, null]], "Non-linear activation functions": [[12, "non-linear-activation-functions"], [829, "Non-linear-activation-functions"]], "OnDiskDataset": [[311, null]], "OnDiskDataset for Heterogeneous Graph": [[840, null]], "OnDiskDataset for Homogeneous Graph": [[841, null]], "One layer in LGNN, algorithm structure": [[860, "one-layer-in-lgnn-algorithm-structure"]], "OpenMP settings": [[851, "openmp-settings"]], "Operations on Sparse Matrix": [[829, "Operations-on-Sparse-Matrix"]], "Operators": [[12, "operators"]], "Organize Data into YAML File": [[840, "Organize-Data-into-YAML-File"], [841, "Organize-Data-into-YAML-File"]], "Output format": [[702, "output-format"]], "Overview": [[733, "overview"], [734, "overview"], [736, "overview"], [737, "overview"], [738, "overview"], [833, "overview"]], "Overview of Graph Classification with GNN": [[846, "overview-of-graph-classification-with-gnn"]], "Overview of Link Prediction with GNN": [[845, "overview-of-link-prediction-with-gnn"]], "Overview of Neighborhood Sampling Approaches": [[718, "overview-of-neighborhood-sampling-approaches"]], "Overview of Node Classification with GNN": [[842, "overview-of-node-classification-with-gnn"]], "PATTERNDataset": [[174, null]], "PGExplainer": [[436, null]], "PNAConv": [[425, null]], "PPIDataset": [[175, null]], "PPR": [[670, null]], "Paper Study with DGL": [[874, null]], "ParMETIS Installation": [[702, "parmetis-installation"]], "ParMETIS \uacb0\uacfc\ub4e4\uc744 DGLGraph\ub85c \ubcc0\ud658\ud558\uae30": [[788, "parmetis-dglgraph"]], "ParMETIS \uc124\uce58": [[788, "parmetis"]], "ParMETIS \uc2e4\ud589\ud558\uae30 \ubc0f \uacb0\uacfc \ud3ec\uba67\ub4e4": [[788, "id9"]], "ParMETIS\ub97c \uc704\ud55c \uc785\ub825 \ud3ec\uba67": [[788, "id8"]], "Parallel METIS partitioning": [[702, "parallel-metis-partitioning"]], "Partition": [[4, "partition"]], "Partition a graph": [[854, "partition-a-graph"], [855, "partition-a-graph"]], "Path Encoding": [[691, "path-encoding"]], "PathEncoder": [[455, null]], "PerSourceUniform": [[227, null]], "Performance Benchmarks": [[830, null]], "Positive graph, negative graph, and apply_edges": [[845, "positive-graph-negative-graph-and-apply-edges"]], "Predicting Edge Type of an Existing Edge on a Heterogeneous Graph": [[734, "predicting-edge-type-of-an-existing-edge-on-a-heterogeneous-graph"]], "Prepare Data": [[689, null]], "Prepare training and testing sets": [[845, "prepare-training-and-testing-sets"]], "Preprocessing and postprocessing": [[871, "preprocessing-and-postprocessing"]], "Processing Graph Classification datasets": [[697, "processing-graph-classification-datasets"]], "Processing Node Classification datasets": [[697, "processing-node-classification-datasets"]], "Processing dataset for Link Prediction datasets": [[697, "processing-dataset-for-link-prediction-datasets"]], "Protein-protein interaction (PPI) networks": [[861, "protein-protein-interaction-ppi-networks"]], "PubmedGraphDataset": [[176, null]], "Put everything together": [[861, "put-everything-together"]], "Put it all together": [[871, "put-it-all-together"]], "Putting it together": [[864, "putting-it-together"], [867, "putting-it-together"]], "PyTorch backend": [[823, "pytorch-backend"]], "QM7bDataset": [[177, null]], "QM9Dataset": [[178, null]], "QM9EdgeDataset": [[179, null]], "Querying Graph Structures": [[843, "querying-graph-structures"]], "Querying and manipulating batch information": [[1, "querying-and-manipulating-batch-information"]], "Querying and manipulating node/edge ID type": [[1, "querying-and-manipulating-node-edge-id-type"]], "Querying and manipulating sparse format": [[1, "querying-and-manipulating-sparse-format"]], "Querying graph structure": [[1, "querying-graph-structure"]], "Querying metagraph structure": [[1, "querying-metagraph-structure"]], "QuestionsDataset": [[180, null]], "Quickstart": [[829, null]], "R-GCN layers": [[859, "r-gcn-layers"]], "RadiusGraph": [[439, null]], "Random walk": [[11, "random-walk"]], "RandomWalkPE": [[671, null]], "RedditDataset": [[181, null]], "Reduce functions": [[5, "reduce-functions"]], "Reduce operations": [[829, "Reduce-operations"]], "Reference to the distributed graph": [[854, "reference-to-the-distributed-graph"], [855, "reference-to-the-distributed-graph"]], "RelGraphConv": [[378, null], [426, null], [471, null]], "Relation with Message Passing APIs": [[9, "relation-with-message-passing-apis"]], "Relational Graph Convolutional Network": [[859, null]], "RemoveSelfLoop": [[672, null]], "Removing edges in the minibatch from the original graph for neighbor sampling": [[720, "removing-edges-in-the-minibatch-from-the-original-graph-for-neighbor-sampling"]], "Resources": [[831, null]], "Results": [[14, "results"]], "Revisit classic models from a graph perspective": [[872, null], [874, "revisit-classic-models-from-a-graph-perspective"]], "Roadmap": [[692, "roadmap"], [705, "roadmap"], [713, "roadmap"], [718, "roadmap"], [729, "roadmap"], [733, "roadmap"]], "RomanEmpireDataset": [[182, null]], "RowFeatNormalizer": [[673, null]], "Run ParMETIS and output format": [[702, "run-parmetis-and-output-format"]], "SAGEConv": [[379, null], [427, null], [472, null]], "SAINTSampler": [[217, null]], "SBMMixtureDataset": [[183, null]], "SGConv": [[380, null], [428, null], [473, null]], "SIGNDiffusion": [[674, null]], "SSH Access": [[854, "ssh-access"]], "SSTDataset": [[184, null]], "SVDPE": [[675, null]], "Sample neighbors with GraphBolt": [[854, "sample-neighbors-with-graphbolt"]], "SampledSubgraph": [[312, null]], "SampledSubgraphImpl": [[313, null]], "Sampler": [[218, null]], "Sampler Transformations": [[3, "sampler-transformations"]], "Sampler for Heterogeneous Graphs": [[719, "sampler-for-heterogeneous-graphs"]], "Samplers": [[3, "samplers"]], "SamplingGraph": [[314, null]], "Scenarios": [[833, "scenarios"]], "Score Modules for Link Prediction and Knowledge Graph Completion": [[16, "score-modules-for-link-prediction-and-knowledge-graph-completion"]], "Segment Reduce Module": [[9, "segment-reduce-module"]], "SegmentedKNNGraph": [[440, null]], "Sequential": [[388, null], [464, null]], "Set up distributed training environment": [[854, "set-up-distributed-training-environment"], [855, "set-up-distributed-training-environment"]], "Set2Set": [[385, null], [444, null]], "SetTransformerDecoder": [[445, null]], "SetTransformerEncoder": [[446, null]], "ShaDowKHopSampler": [[219, null]], "Simple implementation": [[871, "simple-implementation"]], "Single Machine Multi-GPU Minibatch Graph Classification": [[876, null]], "Single Machine Multi-GPU Minibatch Node Classification": [[877, null]], "Softmax": [[829, "Softmax"]], "SortPooling": [[386, null], [447, null], [478, null]], "Sparse Matrix": [[829, "Sparse-Matrix"]], "Sparse Multi-head Attention": [[826, "Sparse-Multi-head-Attention"]], "Sparse matrix class": [[12, "sparse-matrix-class"]], "Spatial Encoding": [[691, "spatial-encoding"]], "SpatialEncoder": [[456, null]], "SpatialEncoder3d": [[457, null]], "Spawning Trainer Processes": [[835, "Spawning-Trainer-Processes"], [877, "spawning-trainer-processes"]], "Specification": [[703, "specification"]], "Speeding up with built-in functions": [[871, "speeding-up-with-built-in-functions"]], "Split and Load Partitions": [[4, "split-and-load-partitions"]], "Split workloads": [[700, "split-workloads"]], "SquirrelDataset": [[185, null]], "Step 1": [[850, "step-1"]], "Step 1: Batching": [[864, "step-1-batching"]], "Step 1: Setup and graph initialization": [[870, "step-1-setup-and-graph-initialization"]], "Step 2": [[850, "step-2"]], "Step 2: Define message passing functions": [[870, "step-2-define-message-passing-functions"]], "Step 2: Tree-LSTM cell with message-passing APIs": [[864, "step-2-tree-lstm-cell-with-message-passing-apis"]], "Step 3": [[850, "step-3"]], "Step 3: Define traversal": [[864, "step-3-define-traversal"]], "Step 3: Testing": [[870, "step-3-testing"]], "Step 4": [[850, "step-4"]], "Step 5": [[850, "step-5"]], "Step 6": [[850, "step-6"]], "Step 7": [[850, "step-7"]], "Step 8": [[850, "step-8"]], "Step.1 Graph Partitioning": [[703, "step-1-graph-partitioning"]], "Step.2 Data Dispatching": [[703, "step-2-data-dispatching"]], "Subgraph Extraction Ops": [[0, "subgraph-extraction-ops"]], "SubgraphSampler": [[7, "subgraphsampler"], [315, null]], "SubgraphX": [[437, null]], "Subset": [[196, null]], "SumPooling": [[387, null], [448, null], [479, null]], "Supervised community detection task with the Cora dataset": [[860, "supervised-community-detection-task-with-the-cora-dataset"]], "Supported Data types": [[9, "supported-data-types"]], "Supporting Multiple Platforms": [[21, "supporting-multiple-platforms"]], "System requirements": [[823, "system-requirements"]], "TAGConv": [[381, null], [429, null]], "TUDataset": [[186, null]], "TWIRLSConv": [[430, null]], "TWIRLSUnfoldingAndAttention": [[431, null]], "Task": [[316, null]], "Task and the dataset": [[871, "task-and-the-dataset"]], "TemporalLayerNeighborSampler": [[317, null]], "TemporalNeighborSampler": [[318, null]], "Tensorflow backend": [[823, "tensorflow-backend"]], "TexasDataset": [[187, null]], "The DGMG class": [[867, "the-dgmg-class"]], "The second task, link prediction": [[859, "the-second-task-link-prediction"]], "The task and the dataset": [[864, "the-task-and-the-dataset"]], "Tips for making chunked graph data": [[703, "tips-for-making-chunked-graph-data"]], "ToLevi": [[676, null]], "ToSimple": [[677, null]], "TolokersDataset": [[188, null]], "Top-level": [[695, "top-level"]], "TorchBasedFeature": [[319, null]], "TorchBasedFeatureStore": [[320, null]], "Training": [[825, "Training"], [826, "Training"], [871, "training"]], "Training Loop": [[720, "training-loop"], [725, "training-loop"], [736, "training-loop"], [835, "Training-Loop"], [846, "training-loop"], [877, "training-loop"]], "Training a GNN for Graph Classification": [[846, null]], "Training and Evaluation": [[827, "Training-and-Evaluation"]], "Training and inference": [[860, "training-and-inference"]], "Training loop": [[723, "training-loop"], [734, "training-loop"], [737, "training-loop"], [738, "training-loop"], [844, "training-loop"], [845, "training-loop"], [854, "training-loop"], [855, "training-loop"], [859, "training-loop"]], "Training on CPUs": [[852, null]], "Training on GPU": [[842, "training-on-gpu"]], "Training on Multiple GPUs": [[878, null]], "Training the GCN": [[824, "Training-the-GCN"], [842, "training-the-gcn"]], "TransE": [[459, null]], "TransR": [[460, null]], "Transformer as a Graph Neural Network": [[871, null]], "Transforming graph": [[1, "transforming-graph"]], "Tree-LSTM in DGL": [[864, null]], "TreeCycleDataset": [[189, null]], "TreeGridDataset": [[190, null]], "Tutorials: dgl.sparse": [[828, null]], "TypedLinear": [[394, null]], "UVA and GPU support for PinSAGESampler/RandomWalkNeighborSampler": [[721, "uva-and-gpu-support-for-pinsagesampler-randomwalkneighborsampler"]], "Understand Graph Attention Network": [[861, null]], "Uniform": [[228, null]], "UniformNegativeSampler": [[321, null]], "Unit tests": [[21, "unit-tests"]], "Update feature after reducing for output": [[731, "update-feature-after-reducing-for-output"]], "Update node embeddings via graph propagation": [[867, "update-node-embeddings-via-graph-propagation"]], "User Guide": [[712, null]], "User-defined Functions": [[20, null]], "Using CUDA UVA-based neighborhood sampling in DGL data loaders": [[721, "using-cuda-uva-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using GPU-based neighbor sampling with DGL functions": [[721, "using-gpu-based-neighbor-sampling-with-dgl-functions"]], "Using GPU-based neighborhood sampling in DGL data loaders": [[721, "using-gpu-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using NN Modules with Edge Weights": [[735, "using-nn-modules-with-edge-weights"]], "Using Node/edge features": [[1, "using-node-edge-features"]], "Utilities": [[0, "utilities"], [2, "utilities"], [7, "utilities"]], "Utility Class and Functions for Feature Prefetching": [[3, "utility-class-and-functions-for-feature-prefetching"]], "Utility Modules": [[15, "utility-modules"], [16, "utility-modules"]], "Utility Modules for Graph Transformer": [[16, "utility-modules-for-graph-transformer"]], "Visualization": [[871, "visualization"]], "Visualize training progress": [[860, "visualize-training-progress"]], "Visualizing and understanding attention learned": [[861, "visualizing-and-understanding-attention-learned"]], "WN18Dataset": [[191, null]], "WeightAndSum": [[449, null]], "WeightBasis": [[465, null]], "Weighted reduction across GPUs": [[835, "Weighted-reduction-across-GPUs"]], "Welcome to Deep Graph Library Tutorials and Documentation": [[822, null]], "What is a line-graph?": [[860, "what-is-a-line-graph"]], "What\u2019s next": [[846, "whats-next"]], "What\u2019s next?": [[842, "whats-next"], [843, "whats-next"], [844, "whats-next"], [861, "what-s-next"]], "WikiCSDataset": [[192, null]], "Windows": [[823, "windows"]], "WisconsinDataset": [[193, null]], "Working with Multiple Types": [[711, "working-with-multiple-types"]], "Working with different backends": [[823, "working-with-different-backends"]], "Write your own GNN module": [[844, null]], "Writing Neural Network Model": [[736, "writing-neural-network-model"]], "Writing modules that work on homogeneous graphs, bipartite graphs, and MFGs": [[724, "writing-modules-that-work-on-homogeneous-graphs-bipartite-graphs-and-mfgs"]], "Writing neural network model": [[738, "writing-neural-network-model"]], "YAML specification": [[839, null]], "YelpDataset": [[194, null]], "ZINCDataset": [[195, null]], "add_node_property_split": [[197, null]], "add_nodepred_split": [[198, null]], "check_sha1": [[199, null]], "dataset_name": [[839, "dataset-name"]], "dgl": [[0, null]], "dgl.DGLGraph": [[1, null]], "dgl.DGLGraph.__getitem__": [[26, null]], "dgl.DGLGraph.add_edges": [[27, null]], "dgl.DGLGraph.add_nodes": [[28, null]], "dgl.DGLGraph.add_self_loop": [[29, null]], "dgl.DGLGraph.adj": [[30, null]], "dgl.DGLGraph.adj_external": [[31, null]], "dgl.DGLGraph.adj_tensors": [[32, null]], "dgl.DGLGraph.adjacency_matrix": [[33, null]], "dgl.DGLGraph.apply_edges": [[34, null]], "dgl.DGLGraph.apply_nodes": [[35, null]], "dgl.DGLGraph.batch_num_edges": [[36, null]], "dgl.DGLGraph.batch_num_nodes": [[37, null]], "dgl.DGLGraph.batch_size": [[38, null]], "dgl.DGLGraph.canonical_etypes": [[39, null]], "dgl.DGLGraph.cpu": [[40, null]], "dgl.DGLGraph.create_formats_": [[41, null]], "dgl.DGLGraph.device": [[42, null]], "dgl.DGLGraph.dstdata": [[43, null]], "dgl.DGLGraph.dstnodes": [[44, null]], "dgl.DGLGraph.dsttypes": [[45, null]], "dgl.DGLGraph.edata": [[46, null]], "dgl.DGLGraph.edge_attr_schemes": [[47, null]], "dgl.DGLGraph.edge_ids": [[48, null]], "dgl.DGLGraph.edge_subgraph": [[49, null]], "dgl.DGLGraph.edge_type_subgraph": [[50, null]], "dgl.DGLGraph.edges": [[51, null]], "dgl.DGLGraph.etypes": [[52, null]], "dgl.DGLGraph.filter_edges": [[53, null]], "dgl.DGLGraph.filter_nodes": [[54, null]], "dgl.DGLGraph.find_edges": [[55, null]], "dgl.DGLGraph.formats": [[56, null]], "dgl.DGLGraph.has_edges_between": [[57, null]], "dgl.DGLGraph.has_nodes": [[58, null]], "dgl.DGLGraph.idtype": [[59, null]], "dgl.DGLGraph.in_degrees": [[60, null]], "dgl.DGLGraph.in_edges": [[61, null]], "dgl.DGLGraph.inc": [[62, null]], "dgl.DGLGraph.incidence_matrix": [[63, null]], "dgl.DGLGraph.int": [[64, null]], "dgl.DGLGraph.is_homogeneous": [[65, null]], "dgl.DGLGraph.is_multigraph": [[66, null]], "dgl.DGLGraph.is_pinned": [[67, null]], "dgl.DGLGraph.is_unibipartite": [[68, null]], "dgl.DGLGraph.line_graph": [[69, null]], "dgl.DGLGraph.local_scope": [[70, null]], "dgl.DGLGraph.long": [[71, null]], "dgl.DGLGraph.metagraph": [[72, null]], "dgl.DGLGraph.multi_update_all": [[73, null]], "dgl.DGLGraph.ndata": [[74, null]], "dgl.DGLGraph.node_attr_schemes": [[75, null]], "dgl.DGLGraph.node_type_subgraph": [[76, null]], "dgl.DGLGraph.nodes": [[77, null]], "dgl.DGLGraph.ntypes": [[78, null]], "dgl.DGLGraph.num_dst_nodes": [[79, null]], "dgl.DGLGraph.num_edges": [[80, null]], "dgl.DGLGraph.num_nodes": [[81, null]], "dgl.DGLGraph.num_src_nodes": [[82, null]], "dgl.DGLGraph.number_of_dst_nodes": [[83, null]], "dgl.DGLGraph.number_of_edges": [[84, null]], "dgl.DGLGraph.number_of_nodes": [[85, null]], "dgl.DGLGraph.number_of_src_nodes": [[86, null]], "dgl.DGLGraph.out_degrees": [[87, null]], "dgl.DGLGraph.out_edges": [[88, null]], "dgl.DGLGraph.pin_memory_": [[89, null]], "dgl.DGLGraph.predecessors": [[90, null]], "dgl.DGLGraph.prop_edges": [[91, null]], "dgl.DGLGraph.prop_nodes": [[92, null]], "dgl.DGLGraph.pull": [[93, null]], "dgl.DGLGraph.push": [[94, null]], "dgl.DGLGraph.remove_edges": [[95, null]], "dgl.DGLGraph.remove_nodes": [[96, null]], "dgl.DGLGraph.remove_self_loop": [[97, null]], "dgl.DGLGraph.reorder_graph": [[98, null]], "dgl.DGLGraph.reverse": [[99, null]], "dgl.DGLGraph.send_and_recv": [[100, null]], "dgl.DGLGraph.set_batch_num_edges": [[101, null]], "dgl.DGLGraph.set_batch_num_nodes": [[102, null]], "dgl.DGLGraph.srcdata": [[103, null]], "dgl.DGLGraph.srcnodes": [[104, null]], "dgl.DGLGraph.srctypes": [[105, null]], "dgl.DGLGraph.subgraph": [[106, null]], "dgl.DGLGraph.successors": [[107, null]], "dgl.DGLGraph.to": [[108, null]], "dgl.DGLGraph.to_canonical_etype": [[109, null]], "dgl.DGLGraph.to_cugraph": [[110, null]], "dgl.DGLGraph.to_simple": [[111, null]], "dgl.DGLGraph.unpin_memory_": [[112, null]], "dgl.DGLGraph.update_all": [[113, null]], "dgl.add_edges": [[114, null]], "dgl.add_nodes": [[115, null]], "dgl.add_reverse_edges": [[116, null]], "dgl.add_self_loop": [[117, null]], "dgl.adj_product_graph": [[118, null]], "dgl.adj_sum_graph": [[119, null]], "dgl.adjusted_homophily": [[120, null]], "dgl.apply_each": [[121, null]], "dgl.batch": [[122, null]], "dgl.bfs_edges_generator": [[123, null]], "dgl.bfs_nodes_generator": [[124, null]], "dgl.bipartite_from_networkx": [[125, null]], "dgl.bipartite_from_scipy": [[126, null]], "dgl.block_to_graph": [[127, null]], "dgl.broadcast_edges": [[128, null]], "dgl.broadcast_nodes": [[129, null]], "dgl.compact_graphs": [[130, null]], "dgl.create_block": [[131, null]], "dgl.data": [[2, null]], "dgl.dataloading": [[3, null]], "dgl.dataloading.BlockSampler": [[208, null]], "dgl.dataloading.as_edge_prediction_sampler": [[220, null]], "dgl.dfs_edges_generator": [[229, null]], "dgl.dfs_labeled_edges_generator": [[230, null]], "dgl.distributed": [[4, null]], "dgl.distributed.dgl_partition_to_graphbolt": [[231, null]], "dgl.distributed.edge_split": [[232, null]], "dgl.distributed.find_edges": [[233, null]], "dgl.distributed.in_subgraph": [[234, null]], "dgl.distributed.initialize": [[235, null]], "dgl.distributed.load_partition": [[236, null]], "dgl.distributed.load_partition_book": [[237, null]], "dgl.distributed.load_partition_feats": [[238, null]], "dgl.distributed.node_split": [[239, null]], "dgl.distributed.partition_graph": [[240, null]], "dgl.distributed.sample_etype_neighbors": [[241, null]], "dgl.distributed.sample_neighbors": [[242, null]], "dgl.double_radius_node_labeling": [[243, null]], "dgl.edge_homophily": [[244, null]], "dgl.edge_label_informativeness": [[245, null]], "dgl.edge_subgraph": [[246, null]], "dgl.edge_type_subgraph": [[247, null]], "dgl.from_cugraph": [[248, null]], "dgl.from_networkx": [[249, null]], "dgl.from_scipy": [[250, null]], "dgl.function": [[5, null]], "dgl.function.copy_e": [[251, null]], "dgl.function.copy_u": [[252, null]], "dgl.function.e_add_u": [[253, null]], "dgl.function.e_add_v": [[254, null]], "dgl.function.e_div_u": [[255, null]], "dgl.function.e_div_v": [[256, null]], "dgl.function.e_dot_u": [[257, null]], "dgl.function.e_dot_v": [[258, null]], "dgl.function.e_mul_u": [[259, null]], "dgl.function.e_mul_v": [[260, null]], "dgl.function.e_sub_u": [[261, null]], "dgl.function.e_sub_v": [[262, null]], "dgl.function.max": [[263, null]], "dgl.function.mean": [[264, null]], "dgl.function.min": [[265, null]], "dgl.function.sum": [[266, null]], "dgl.function.u_add_e": [[267, null]], "dgl.function.u_add_v": [[268, null]], "dgl.function.u_div_e": [[269, null]], "dgl.function.u_div_v": [[270, null]], "dgl.function.u_dot_e": [[271, null]], "dgl.function.u_dot_v": [[272, null]], "dgl.function.u_mul_e": [[273, null]], "dgl.function.u_mul_v": [[274, null]], "dgl.function.u_sub_e": [[275, null]], "dgl.function.u_sub_v": [[276, null]], "dgl.function.v_add_e": [[277, null]], "dgl.function.v_add_u": [[278, null]], "dgl.function.v_div_e": [[279, null]], "dgl.function.v_div_u": [[280, null]], "dgl.function.v_dot_e": [[281, null]], "dgl.function.v_dot_u": [[282, null]], "dgl.function.v_mul_e": [[283, null]], "dgl.function.v_mul_u": [[284, null]], "dgl.function.v_sub_e": [[285, null]], "dgl.function.v_sub_u": [[286, null]], "dgl.geometry": [[6, null]], "dgl.graph": [[287, null]], "dgl.graphbolt.add_reverse_edges": [[322, null]], "dgl.graphbolt.compact_csc_format": [[323, null]], "dgl.graphbolt.cpu_cached_feature": [[324, null]], "dgl.graphbolt.etype_str_to_tuple": [[325, null]], "dgl.graphbolt.etype_tuple_to_str": [[326, null]], "dgl.graphbolt.exclude_seed_edges": [[327, null]], "dgl.graphbolt.expand_indptr": [[328, null]], "dgl.graphbolt.from_dglgraph": [[329, null]], "dgl.graphbolt.fused_csc_sampling_graph": [[330, null]], "dgl.graphbolt.gpu_cached_feature": [[331, null]], "dgl.graphbolt.index_select": [[332, null]], "dgl.graphbolt.indptr_edge_ids": [[333, null]], "dgl.graphbolt.isin": [[334, null]], "dgl.graphbolt.load_from_shared_memory": [[335, null]], "dgl.graphbolt.numpy_save_aligned": [[336, null]], "dgl.graphbolt.seed": [[337, null]], "dgl.graphbolt.unique_and_compact": [[338, null]], "dgl.graphbolt.unique_and_compact_csc_formats": [[339, null]], "dgl.heterograph": [[340, null]], "dgl.in_subgraph": [[341, null]], "dgl.is_libxsmm_enabled": [[342, null]], "dgl.khop_adj": [[343, null]], "dgl.khop_graph": [[344, null]], "dgl.khop_in_subgraph": [[345, null]], "dgl.khop_out_subgraph": [[346, null]], "dgl.knn_graph": [[347, null]], "dgl.lap_pe": [[348, null]], "dgl.laplacian_lambda_max": [[349, null]], "dgl.line_graph": [[350, null]], "dgl.linkx_homophily": [[351, null]], "dgl.load_graphs": [[352, null]], "dgl.max_edges": [[353, null]], "dgl.max_nodes": [[354, null]], "dgl.mean_edges": [[355, null]], "dgl.mean_nodes": [[356, null]], "dgl.merge": [[357, null]], "dgl.metapath_reachable_graph": [[358, null]], "dgl.metis_partition": [[359, null]], "dgl.metis_partition_assignment": [[360, null]], "dgl.multiprocessing": [[8, null]], "dgl.multiprocessing.pytorch.call_once_and_share": [[361, null]], "dgl.multiprocessing.pytorch.shared_tensor": [[362, null]], "dgl.nn (MXNet)": [[15, null]], "dgl.nn (PyTorch)": [[16, null]], "dgl.nn (TensorFlow)": [[17, null]], "dgl.nn.functional": [[18, null]], "dgl.nn.functional.edge_softmax": [[363, null]], "dgl.node_homophily": [[480, null]], "dgl.node_label_informativeness": [[481, null]], "dgl.node_subgraph": [[482, null]], "dgl.node_type_subgraph": [[483, null]], "dgl.norm_by_dst": [[484, null]], "dgl.ops": [[9, null]], "dgl.ops.copy_e_max": [[485, null]], "dgl.ops.copy_e_mean": [[486, null]], "dgl.ops.copy_e_min": [[487, null]], "dgl.ops.copy_e_sum": [[488, null]], "dgl.ops.copy_u": [[489, null]], "dgl.ops.copy_u_max": [[490, null]], "dgl.ops.copy_u_mean": [[491, null]], "dgl.ops.copy_u_min": [[492, null]], "dgl.ops.copy_u_sum": [[493, null]], "dgl.ops.copy_v": [[494, null]], "dgl.ops.e_add_u": [[495, null]], "dgl.ops.e_add_v": [[496, null]], "dgl.ops.e_div_u": [[497, null]], "dgl.ops.e_div_v": [[498, null]], "dgl.ops.e_dot_u": [[499, null]], "dgl.ops.e_dot_v": [[500, null]], "dgl.ops.e_mul_u": [[501, null]], "dgl.ops.e_mul_v": [[502, null]], "dgl.ops.e_sub_u": [[503, null]], "dgl.ops.e_sub_v": [[504, null]], "dgl.ops.gather_mm": [[505, null]], "dgl.ops.gsddmm": [[506, null]], "dgl.ops.gspmm": [[507, null]], "dgl.ops.segment_mm": [[508, null]], "dgl.ops.segment_reduce": [[509, null]], "dgl.ops.u_add_e": [[510, null]], "dgl.ops.u_add_e_max": [[511, null]], "dgl.ops.u_add_e_mean": [[512, null]], "dgl.ops.u_add_e_min": [[513, null]], "dgl.ops.u_add_e_sum": [[514, null]], "dgl.ops.u_add_v": [[515, null]], "dgl.ops.u_div_e": [[516, null]], "dgl.ops.u_div_e_max": [[517, null]], "dgl.ops.u_div_e_mean": [[518, null]], "dgl.ops.u_div_e_min": [[519, null]], "dgl.ops.u_div_e_sum": [[520, null]], "dgl.ops.u_div_v": [[521, null]], "dgl.ops.u_dot_e": [[522, null]], "dgl.ops.u_dot_v": [[523, null]], "dgl.ops.u_mul_e": [[524, null]], "dgl.ops.u_mul_e_max": [[525, null]], "dgl.ops.u_mul_e_mean": [[526, null]], "dgl.ops.u_mul_e_min": [[527, null]], "dgl.ops.u_mul_e_sum": [[528, null]], "dgl.ops.u_mul_v": [[529, null]], "dgl.ops.u_sub_e": [[530, null]], "dgl.ops.u_sub_e_max": [[531, null]], "dgl.ops.u_sub_e_mean": [[532, null]], "dgl.ops.u_sub_e_min": [[533, null]], "dgl.ops.u_sub_e_sum": [[534, null]], "dgl.ops.u_sub_v": [[535, null]], "dgl.ops.v_add_e": [[536, null]], "dgl.ops.v_add_u": [[537, null]], "dgl.ops.v_div_e": [[538, null]], "dgl.ops.v_div_u": [[539, null]], "dgl.ops.v_dot_e": [[540, null]], "dgl.ops.v_dot_u": [[541, null]], "dgl.ops.v_mul_e": [[542, null]], "dgl.ops.v_mul_u": [[543, null]], "dgl.ops.v_sub_e": [[544, null]], "dgl.ops.v_sub_u": [[545, null]], "dgl.optim": [[10, null]], "dgl.out_subgraph": [[546, null]], "dgl.partition_graph_with_halo": [[547, null]], "dgl.prop_edges": [[548, null]], "dgl.prop_edges_dfs": [[549, null]], "dgl.prop_nodes": [[550, null]], "dgl.prop_nodes_bfs": [[551, null]], "dgl.prop_nodes_topo": [[552, null]], "dgl.radius_graph": [[553, null]], "dgl.rand_bipartite": [[554, null]], "dgl.rand_graph": [[555, null]], "dgl.random_walk_pe": [[556, null]], "dgl.readout_edges": [[557, null]], "dgl.readout_nodes": [[558, null]], "dgl.remove_edges": [[559, null]], "dgl.remove_nodes": [[560, null]], "dgl.remove_self_loop": [[561, null]], "dgl.reorder_graph": [[562, null]], "dgl.reverse": [[563, null]], "dgl.sampling": [[11, null]], "dgl.sampling.PinSAGESampler": [[564, null]], "dgl.sampling.global_uniform_negative_sampling": [[565, null]], "dgl.sampling.node2vec_random_walk": [[566, null]], "dgl.sampling.pack_traces": [[567, null]], "dgl.sampling.random_walk": [[568, null]], "dgl.sampling.sample_labors": [[569, null]], "dgl.sampling.sample_neighbors": [[570, null]], "dgl.sampling.sample_neighbors_biased": [[571, null]], "dgl.sampling.select_topk": [[572, null]], "dgl.save_graphs": [[573, null]], "dgl.seed": [[574, null]], "dgl.segmented_knn_graph": [[575, null]], "dgl.shortest_dist": [[576, null]], "dgl.slice_batch": [[577, null]], "dgl.softmax_edges": [[578, null]], "dgl.softmax_nodes": [[579, null]], "dgl.sort_csc_by_tag": [[580, null]], "dgl.sort_csr_by_tag": [[581, null]], "dgl.sparse": [[12, null]], "dgl.sparse.SparseMatrix.T": [[582, null]], "dgl.sparse.SparseMatrix.coalesce": [[583, null]], "dgl.sparse.SparseMatrix.col": [[584, null]], "dgl.sparse.SparseMatrix.coo": [[585, null]], "dgl.sparse.SparseMatrix.cpu": [[586, null]], "dgl.sparse.SparseMatrix.csc": [[587, null]], "dgl.sparse.SparseMatrix.csr": [[588, null]], "dgl.sparse.SparseMatrix.cuda": [[589, null]], "dgl.sparse.SparseMatrix.device": [[590, null]], "dgl.sparse.SparseMatrix.double": [[591, null]], "dgl.sparse.SparseMatrix.dtype": [[592, null]], "dgl.sparse.SparseMatrix.float": [[593, null]], "dgl.sparse.SparseMatrix.has_duplicate": [[594, null]], "dgl.sparse.SparseMatrix.indices": [[595, null]], "dgl.sparse.SparseMatrix.int": [[596, null]], "dgl.sparse.SparseMatrix.long": [[597, null]], "dgl.sparse.SparseMatrix.neg": [[598, null]], "dgl.sparse.SparseMatrix.nnz": [[599, null]], "dgl.sparse.SparseMatrix.reduce": [[600, null]], "dgl.sparse.SparseMatrix.row": [[601, null]], "dgl.sparse.SparseMatrix.shape": [[602, null]], "dgl.sparse.SparseMatrix.smax": [[603, null]], "dgl.sparse.SparseMatrix.smean": [[604, null]], "dgl.sparse.SparseMatrix.smin": [[605, null]], "dgl.sparse.SparseMatrix.softmax": [[606, null]], "dgl.sparse.SparseMatrix.sum": [[607, null]], "dgl.sparse.SparseMatrix.t": [[608, null]], "dgl.sparse.SparseMatrix.to": [[609, null]], "dgl.sparse.SparseMatrix.to_dense": [[610, null]], "dgl.sparse.SparseMatrix.transpose": [[611, null]], "dgl.sparse.SparseMatrix.val": [[612, null]], "dgl.sparse.add": [[613, null]], "dgl.sparse.bsddmm": [[614, null]], "dgl.sparse.bspmm": [[615, null]], "dgl.sparse.diag": [[616, null]], "dgl.sparse.div": [[617, null]], "dgl.sparse.from_coo": [[618, null]], "dgl.sparse.from_csc": [[619, null]], "dgl.sparse.from_csr": [[620, null]], "dgl.sparse.identity": [[621, null]], "dgl.sparse.matmul": [[622, null]], "dgl.sparse.mul": [[623, null]], "dgl.sparse.power": [[624, null]], "dgl.sparse.sddmm": [[625, null]], "dgl.sparse.softmax": [[626, null]], "dgl.sparse.sp_add_v": [[627, null]], "dgl.sparse.sp_broadcast_v": [[628, null]], "dgl.sparse.sp_div_v": [[629, null]], "dgl.sparse.sp_mul_v": [[630, null]], "dgl.sparse.sp_sub_v": [[631, null]], "dgl.sparse.spmatrix": [[632, null]], "dgl.sparse.spmm": [[633, null]], "dgl.sparse.spspmm": [[634, null]], "dgl.sparse.sub": [[635, null]], "dgl.sparse.val_like": [[636, null]], "dgl.sum_edges": [[637, null]], "dgl.sum_nodes": [[638, null]], "dgl.svd_pe": [[639, null]], "dgl.to_bidirected": [[640, null]], "dgl.to_block": [[641, null]], "dgl.to_cugraph": [[642, null]], "dgl.to_double": [[643, null]], "dgl.to_float": [[644, null]], "dgl.to_half": [[645, null]], "dgl.to_heterogeneous": [[646, null]], "dgl.to_homogeneous": [[647, null]], "dgl.to_networkx": [[648, null]], "dgl.to_simple": [[649, null]], "dgl.to_simple_graph": [[650, null]], "dgl.topk_edges": [[651, null]], "dgl.topk_nodes": [[652, null]], "dgl.topological_nodes_generator": [[653, null]], "dgl.transforms": [[19, null]], "dgl.udf.EdgeBatch.batch_size": [[678, null]], "dgl.udf.EdgeBatch.data": [[679, null]], "dgl.udf.EdgeBatch.dst": [[680, null]], "dgl.udf.EdgeBatch.edges": [[681, null]], "dgl.udf.EdgeBatch.src": [[682, null]], "dgl.udf.NodeBatch.batch_size": [[683, null]], "dgl.udf.NodeBatch.data": [[684, null]], "dgl.udf.NodeBatch.mailbox": [[685, null]], "dgl.udf.NodeBatch.nodes": [[686, null]], "dgl.unbatch": [[687, null]], "dgl.use_libxsmm": [[688, null]], "download": [[200, null]], "edges.csv": [[707, "id2"], [751, "id6"], [792, "id6"]], "extract_archive": [[201, null]], "feature_data": [[839, "feature-data"]], "get_download_dir": [[202, null]], "graph": [[839, "graph"]], "load_info": [[203, null]], "load_labels": [[204, null]], "macOS": [[823, "macos"]], "mask_nodes_by_property": [[205, null]], "nodes.csv": [[707, "id1"], [751, "id5"], [792, "id5"]], "save_info": [[206, null]], "set_dst_lazy_features": [[222, null]], "set_edge_lazy_features": [[223, null]], "set_node_lazy_features": [[224, null]], "set_src_lazy_features": [[225, null]], "split_dataset": [[207, null]], "tasks": [[839, "tasks"]], "v0.4.3 Benchmarks": [[830, "v0-4-3-benchmarks"]], "v0.5 Benchmarks": [[830, "v0-5-benchmarks"]], "v0.6 Benchmarks": [[830, "v0-6-benchmarks"]], "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": [[774, "id3"]], "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": [[751, "id2"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": [[751, "id3"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": [[755, "id4"]], "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": [[755, "id3"]], "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": [[775, "id2"]], "\u5206\u5272\u6570\u636e\u96c6": [[746, "id8"]], "\u5206\u5e03\u5f0f\u56fe": [[746, "id1"]], "\u5206\u5e03\u5f0f\u5d4c\u5165": [[746, "id6"]], "\u5206\u5e03\u5f0f\u5f20\u91cf": [[746, "id5"]], "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": [[746, "id2"]], "\u5206\u5e03\u5f0f\u91c7\u6837": [[746, "id7"]], "\u521b\u5efaDistGraph": [[746, "distgraph"]], "\u521b\u5efa\u5f02\u6784\u56fe": [[755, "id2"]], "\u56fe\u8bfb\u51fa": [[776, "id4"]], "\u5728NN\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": [[775, "nn"]], "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": [[774, "id6"]], "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": [[743, "id2"]], "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": [[743, "id3"]], "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": [[743, "id4"]], "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": [[763, "id4"]], "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[764, "id2"], [768, "id2"]], "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": [[763, "guide-cn-minibatch-customizing-neighborhood-sampler-impl"]], "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": [[765, "id2"]], "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe\u3001\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": [[767, "id2"]], "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": [[755, "id6"]], "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": [[764, "id3"]], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": [[768, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[776, "id10"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": [[767, "id1"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": [[764, "id6"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[778, "guide-cn-training-rgcn-node-classification"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[774, "guide-cn-training-edge-classification-heterogeneous-graph"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": [[763, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[777, "id4"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": [[766, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": [[763, "id7"]], "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": [[773, "guide-cn-training-heterogeneous-graph-example"]], "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": [[776, "id6"]], "\u6279\u6b21\u7684\u56fe": [[776, "id3"]], "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": [[763, "id3"]], "\u6570\u636e\u52a0\u8f7d": [[776, "id9"]], "\u672c\u7ae0\u8def\u7ebf\u56fe": [[739, "id2"], [749, "id2"], [757, "id3"], [762, "id3"], [769, "id1"], [773, "id4"]], "\u6982\u8ff0": [[773, "id2"], [774, "id2"], [776, "id2"], [777, "id2"], [778, "id2"]], "\u6a21\u578b\u5b9a\u4e49": [[776, "id7"]], "\u6a21\u578b\u7684\u8bad\u7ec3": [[764, "id5"], [766, "id4"], [768, "id4"], [774, "id4"], [776, "id8"], [777, "id3"], [778, "id4"]], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": [[771, "id2"]], "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[757, "id2"]], "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": [[763, "id2"]], "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011": [[756, null]], "\u7b2c1\u7ae0\uff1a\u56fe": [[749, null]], "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[757, null]], "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757": [[769, null]], "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [[739, null]], "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [[773, null]], "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3": [[762, null]], "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3": [[745, null]], "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[766, "id2"]], "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [[776, "id5"], [778, "id3"]], "\u805a\u5408\u540e\uff0c\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": [[771, "id3"]], "\u8bbf\u95ee\u56fe\u7ed3\u6784": [[746, "id3"]], "\u8bbf\u95ee\u8282\u70b9/\u8fb9\u6570\u636e": [[746, "id4"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [[766, "id3"], [768, "guide-cn-minibatch-node-classification-model"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": [[764, "id4"]], "\u8d1f\u8f7d\u5747\u8861": [[747, "id2"]], "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": [[771, "id1"]], "\u8fb9\u7c7b\u578b\u5b50\u56fe": [[755, "id5"]], "\u9017\u53f7\u5206\u9694\u503c\uff08CSV\uff09": [[751, "csv"], [755, "csv"]], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": [[762, "id2"]], "\uac1c\uc694": [[817, "id2"], [818, "id1"], [819, "id2"], [820, "id2"], [821, "id1"]], "\uadf8\ub798\ud504 \uad6c\uc870 \uc811\uadfc": [[786, "id1"]], "\uadf8\ub798\ud504 \ub9ac\ub4dc\uc544\uc6c3(readout)": [[819, "readout"]], "\uadf8\ub798\ud504 \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[783, "id2"]], "\uadf8\ub798\ud504 \uccb4\ud06c\uc640 \uadf8\ub798\ud504 \ud0c0\uc785 \uba85\uc138\ud654(graph type specification)": [[815, "graph-type-specification"]], "\uadf8\ub798\ud504\ub4e4\uc758 \ubc30\uce58(batch)": [[819, "batch"]], "\ub178\ub4dc \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[783, "id3"]], "\ub178\ub4dc \ubd84\ub958 \ubaa8\ub378\uacfc \uad6c\ud604\uc0c1\uc758 \ucc28\uc774\uc810": [[818, "id2"]], "\ub178\ub4dc/\uc5d0\uc9c0 \ub370\uc774\ud130 \uc811\uadfc": [[786, "id2"]], "\ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc791\uc131\ud558\uae30": [[819, "id3"], [821, "id2"]], "\ub2e4\uc591\ud55c \ud0c0\uc785\uc744 \ub2e4\ub8e8\uae30": [[796, "id2"]], "\ub370\uc774\ud130 \ub85c\ub529": [[819, "id7"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[792, "id3"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uc774\uc885 \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[796, "id3"]], "\ub85c\ub4dc \ubc38\ub7f0\uc2f1": [[788, "id2"]], "\ub85c\ub4dc\ub9f5": [[779, "id2"], [790, "id2"], [798, "id1"], [804, "id1"], [813, "id1"], [817, "id3"]], "\ub9c1\ud06c \uc608\uce21 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[783, "id4"]], "\uba40\ud2f0-\ub808\uc774\uc5b4 \ubbf8\ub2c8\ubc30\uce58 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc744 \uc704\ud55c \uc774\ubd84 \uad6c\uc870(Bipartite Structure)": [[805, "bipartite-structure"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec \uc758\uc874\uc131 \ucc3e\uae30": [[805, "id3"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec\uacfc \ucd95\uc57d": [[815, "id1"]], "\uba54\uc9c0\uc2dc \uc804\ub2ec \ud328\ub7ec\ub2e4\uc784(Message Passing Paradigm)": [[798, "message-passing-paradigm"]], "\ubaa8\ub378 \uc815\uc758\ud558\uae30": [[819, "id5"]], "\ubaa8\ub378\uc744 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc5d0 \ub9de\uac8c \ub9cc\ub4e4\uae30": [[806, "id3"], [809, "id1"], [811, "guide-ko-minibatch-node-classification-model"]], "\ubc30\uce58 \uadf8\ub798\ud504\uc5d0 \uc5f0\uc0b0\ud558\uae30": [[819, "id4"]], "\ubd84\uc0b0 DistEmbedding": [[786, "distembedding"]], "\ubd84\uc0b0 \ubaa8\ub4dc vs. \ub2e8\ub3c5(standalone) \ubaa8\ub4dc": [[786, "vs-standalone"]], "\ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[786, "id3"]], "\ubd84\uc0b0 \ud150\uc11c(Distributed Tensor)": [[786, "distributed-tensor"]], "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]": [[797, null]], "\uc5d0\uc9c0 \ud0c0\uc785 \uc11c\ube0c\uadf8\ub798\ud504": [[796, "id4"]], "\uc624\ud504\ub77c\uc778 \ucd94\ub860 \uad6c\ud604\ud558\uae30": [[808, "id2"]], "\uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud574\uc11c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[792, "id2"]], "\uc6cc\ud06c\ub85c\ub4dc \ub098\ub204\uae30(Split workloads)": [[786, "split-workloads"]], "\uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[806, "id1"], [811, "id1"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc9c1\uc811 \ud574\ubcf4\uae30": [[805, "id2"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1(Neighborhood Sampling) \ubc29\ubc95 \uac1c\uc694": [[804, "neighborhood-sampling"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc704\ud574\uc11c \uc6d0\ubcf8 \uadf8\ub798\ud504\uc5d0\uc11c \ubbf8\ub2c8 \ubc30\uce58\uc758 \uc5d0\uc9c0\ub4e4 \uc81c\uac70\ud558\uae30": [[806, "id2"]], "\uc774\uc885 \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[796, "id1"]], "\uc774\uc885 \uadf8\ub798\ud504\ub97c \ub3d9\uc885 \uadf8\ub798\ud504\ub85c \ubcc0\ud658\ud558\uae30": [[796, "id5"]], "\ucd9c\ub825\uac12\uc744 \uc704\ud55c \ucd95\uc57d \ud6c4 \ud53c\uccd0 \uc5c5\ub370\uc774\ud2b8": [[815, "id2"]], "\ucee4\uc2a4\ud140 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \uad6c\ud604\ud558\uae30": [[805, "guide-ko-minibatch-customizing-neighborhood-sampler-impl"]], "\ud559\uc2b5 \ub8f9": [[806, "id4"], [809, "id2"], [811, "id3"], [819, "id6"], [820, "id3"]], "\ud559\uc2b5 \ub8f9(loop)": [[818, "loop"], [821, "loop"]], "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt": [[833, null]], "\ud83c\udd95 Tutorial: Graph Transformer": [[690, null]], "\ud83c\udd95 dgl.graphbolt": [[7, null]]}, "docnames": ["api/python/dgl", "api/python/dgl.DGLGraph", "api/python/dgl.data", "api/python/dgl.dataloading", "api/python/dgl.distributed", "api/python/dgl.function", "api/python/dgl.geometry", "api/python/dgl.graphbolt", "api/python/dgl.multiprocessing", "api/python/dgl.ops", "api/python/dgl.optim", "api/python/dgl.sampling", "api/python/dgl.sparse_v0", "api/python/index", "api/python/knn_benchmark", "api/python/nn-mxnet", "api/python/nn-pytorch", "api/python/nn-tensorflow", "api/python/nn.functional", "api/python/transforms", "api/python/udf", "contribute", "developer/ffi", "env_var", "faq", "features/dataset", "generated/dgl.DGLGraph.__getitem__", "generated/dgl.DGLGraph.add_edges", "generated/dgl.DGLGraph.add_nodes", "generated/dgl.DGLGraph.add_self_loop", "generated/dgl.DGLGraph.adj", "generated/dgl.DGLGraph.adj_external", "generated/dgl.DGLGraph.adj_tensors", "generated/dgl.DGLGraph.adjacency_matrix", "generated/dgl.DGLGraph.apply_edges", "generated/dgl.DGLGraph.apply_nodes", "generated/dgl.DGLGraph.batch_num_edges", "generated/dgl.DGLGraph.batch_num_nodes", "generated/dgl.DGLGraph.batch_size", "generated/dgl.DGLGraph.canonical_etypes", "generated/dgl.DGLGraph.cpu", "generated/dgl.DGLGraph.create_formats_", "generated/dgl.DGLGraph.device", "generated/dgl.DGLGraph.dstdata", "generated/dgl.DGLGraph.dstnodes", "generated/dgl.DGLGraph.dsttypes", "generated/dgl.DGLGraph.edata", "generated/dgl.DGLGraph.edge_attr_schemes", "generated/dgl.DGLGraph.edge_ids", "generated/dgl.DGLGraph.edge_subgraph", "generated/dgl.DGLGraph.edge_type_subgraph", "generated/dgl.DGLGraph.edges", "generated/dgl.DGLGraph.etypes", "generated/dgl.DGLGraph.filter_edges", "generated/dgl.DGLGraph.filter_nodes", "generated/dgl.DGLGraph.find_edges", "generated/dgl.DGLGraph.formats", "generated/dgl.DGLGraph.has_edges_between", "generated/dgl.DGLGraph.has_nodes", "generated/dgl.DGLGraph.idtype", "generated/dgl.DGLGraph.in_degrees", "generated/dgl.DGLGraph.in_edges", "generated/dgl.DGLGraph.inc", "generated/dgl.DGLGraph.incidence_matrix", "generated/dgl.DGLGraph.int", "generated/dgl.DGLGraph.is_homogeneous", "generated/dgl.DGLGraph.is_multigraph", "generated/dgl.DGLGraph.is_pinned", "generated/dgl.DGLGraph.is_unibipartite", "generated/dgl.DGLGraph.line_graph", "generated/dgl.DGLGraph.local_scope", "generated/dgl.DGLGraph.long", "generated/dgl.DGLGraph.metagraph", "generated/dgl.DGLGraph.multi_update_all", "generated/dgl.DGLGraph.ndata", "generated/dgl.DGLGraph.node_attr_schemes", "generated/dgl.DGLGraph.node_type_subgraph", "generated/dgl.DGLGraph.nodes", "generated/dgl.DGLGraph.ntypes", "generated/dgl.DGLGraph.num_dst_nodes", "generated/dgl.DGLGraph.num_edges", "generated/dgl.DGLGraph.num_nodes", "generated/dgl.DGLGraph.num_src_nodes", "generated/dgl.DGLGraph.number_of_dst_nodes", "generated/dgl.DGLGraph.number_of_edges", "generated/dgl.DGLGraph.number_of_nodes", "generated/dgl.DGLGraph.number_of_src_nodes", "generated/dgl.DGLGraph.out_degrees", "generated/dgl.DGLGraph.out_edges", "generated/dgl.DGLGraph.pin_memory_", "generated/dgl.DGLGraph.predecessors", "generated/dgl.DGLGraph.prop_edges", "generated/dgl.DGLGraph.prop_nodes", "generated/dgl.DGLGraph.pull", "generated/dgl.DGLGraph.push", "generated/dgl.DGLGraph.remove_edges", "generated/dgl.DGLGraph.remove_nodes", "generated/dgl.DGLGraph.remove_self_loop", "generated/dgl.DGLGraph.reorder_graph", "generated/dgl.DGLGraph.reverse", "generated/dgl.DGLGraph.send_and_recv", "generated/dgl.DGLGraph.set_batch_num_edges", "generated/dgl.DGLGraph.set_batch_num_nodes", "generated/dgl.DGLGraph.srcdata", "generated/dgl.DGLGraph.srcnodes", "generated/dgl.DGLGraph.srctypes", "generated/dgl.DGLGraph.subgraph", "generated/dgl.DGLGraph.successors", "generated/dgl.DGLGraph.to", "generated/dgl.DGLGraph.to_canonical_etype", "generated/dgl.DGLGraph.to_cugraph", "generated/dgl.DGLGraph.to_simple", "generated/dgl.DGLGraph.unpin_memory_", "generated/dgl.DGLGraph.update_all", "generated/dgl.add_edges", "generated/dgl.add_nodes", "generated/dgl.add_reverse_edges", "generated/dgl.add_self_loop", "generated/dgl.adj_product_graph", "generated/dgl.adj_sum_graph", "generated/dgl.adjusted_homophily", "generated/dgl.apply_each", "generated/dgl.batch", "generated/dgl.bfs_edges_generator", "generated/dgl.bfs_nodes_generator", "generated/dgl.bipartite_from_networkx", "generated/dgl.bipartite_from_scipy", "generated/dgl.block_to_graph", "generated/dgl.broadcast_edges", "generated/dgl.broadcast_nodes", "generated/dgl.compact_graphs", "generated/dgl.create_block", "generated/dgl.data.AIFBDataset", "generated/dgl.data.AMDataset", "generated/dgl.data.ActorDataset", "generated/dgl.data.AmazonCoBuyComputerDataset", "generated/dgl.data.AmazonCoBuyPhotoDataset", "generated/dgl.data.AmazonRatingsDataset", "generated/dgl.data.AsGraphPredDataset", "generated/dgl.data.AsLinkPredDataset", "generated/dgl.data.AsNodePredDataset", "generated/dgl.data.BA2MotifDataset", "generated/dgl.data.BACommunityDataset", "generated/dgl.data.BAShapeDataset", "generated/dgl.data.BGSDataset", "generated/dgl.data.BitcoinOTCDataset", "generated/dgl.data.CIFAR10SuperPixelDataset", "generated/dgl.data.CLUSTERDataset", "generated/dgl.data.CSVDataset", "generated/dgl.data.ChameleonDataset", "generated/dgl.data.CiteseerGraphDataset", "generated/dgl.data.CoauthorCSDataset", "generated/dgl.data.CoauthorPhysicsDataset", "generated/dgl.data.CoraFullDataset", "generated/dgl.data.CoraGraphDataset", "generated/dgl.data.CornellDataset", "generated/dgl.data.DGLDataset", "generated/dgl.data.FB15k237Dataset", "generated/dgl.data.FB15kDataset", "generated/dgl.data.FakeNewsDataset", "generated/dgl.data.FlickrDataset", "generated/dgl.data.FraudAmazonDataset", "generated/dgl.data.FraudDataset", "generated/dgl.data.FraudYelpDataset", "generated/dgl.data.GDELTDataset", "generated/dgl.data.GINDataset", "generated/dgl.data.ICEWS18Dataset", "generated/dgl.data.KarateClubDataset", "generated/dgl.data.LegacyTUDataset", "generated/dgl.data.MNISTSuperPixelDataset", "generated/dgl.data.MUTAGDataset", "generated/dgl.data.MinesweeperDataset", "generated/dgl.data.MiniGCDataset", "generated/dgl.data.MovieLensDataset", "generated/dgl.data.PATTERNDataset", "generated/dgl.data.PPIDataset", "generated/dgl.data.PubmedGraphDataset", "generated/dgl.data.QM7bDataset", "generated/dgl.data.QM9Dataset", "generated/dgl.data.QM9EdgeDataset", "generated/dgl.data.QuestionsDataset", "generated/dgl.data.RedditDataset", "generated/dgl.data.RomanEmpireDataset", "generated/dgl.data.SBMMixtureDataset", "generated/dgl.data.SSTDataset", "generated/dgl.data.SquirrelDataset", "generated/dgl.data.TUDataset", "generated/dgl.data.TexasDataset", "generated/dgl.data.TolokersDataset", "generated/dgl.data.TreeCycleDataset", "generated/dgl.data.TreeGridDataset", "generated/dgl.data.WN18Dataset", "generated/dgl.data.WikiCSDataset", "generated/dgl.data.WisconsinDataset", "generated/dgl.data.YelpDataset", "generated/dgl.data.ZINCDataset", "generated/dgl.data.utils.Subset", "generated/dgl.data.utils.add_node_property_split", "generated/dgl.data.utils.add_nodepred_split", "generated/dgl.data.utils.check_sha1", "generated/dgl.data.utils.download", "generated/dgl.data.utils.extract_archive", "generated/dgl.data.utils.get_download_dir", "generated/dgl.data.utils.load_info", "generated/dgl.data.utils.load_labels", "generated/dgl.data.utils.mask_nodes_by_property", "generated/dgl.data.utils.save_info", "generated/dgl.data.utils.split_dataset", "generated/dgl.dataloading.BlockSampler", "generated/dgl.dataloading.ClusterGCNSampler", "generated/dgl.dataloading.DataLoader", "generated/dgl.dataloading.DistEdgeDataLoader", "generated/dgl.dataloading.DistNodeDataLoader", "generated/dgl.dataloading.GraphDataLoader", "generated/dgl.dataloading.LaborSampler", "generated/dgl.dataloading.MultiLayerFullNeighborSampler", "generated/dgl.dataloading.NeighborSampler", "generated/dgl.dataloading.SAINTSampler", "generated/dgl.dataloading.Sampler", "generated/dgl.dataloading.ShaDowKHopSampler", "generated/dgl.dataloading.as_edge_prediction_sampler", "generated/dgl.dataloading.base.LazyFeature", "generated/dgl.dataloading.base.set_dst_lazy_features", "generated/dgl.dataloading.base.set_edge_lazy_features", "generated/dgl.dataloading.base.set_node_lazy_features", "generated/dgl.dataloading.base.set_src_lazy_features", "generated/dgl.dataloading.negative_sampler.GlobalUniform", "generated/dgl.dataloading.negative_sampler.PerSourceUniform", "generated/dgl.dataloading.negative_sampler.Uniform", "generated/dgl.dfs_edges_generator", "generated/dgl.dfs_labeled_edges_generator", "generated/dgl.distributed.dgl_partition_to_graphbolt", "generated/dgl.distributed.edge_split", "generated/dgl.distributed.find_edges", "generated/dgl.distributed.in_subgraph", "generated/dgl.distributed.initialize", "generated/dgl.distributed.load_partition", "generated/dgl.distributed.load_partition_book", "generated/dgl.distributed.load_partition_feats", "generated/dgl.distributed.node_split", "generated/dgl.distributed.partition_graph", "generated/dgl.distributed.sample_etype_neighbors", "generated/dgl.distributed.sample_neighbors", "generated/dgl.double_radius_node_labeling", "generated/dgl.edge_homophily", "generated/dgl.edge_label_informativeness", "generated/dgl.edge_subgraph", "generated/dgl.edge_type_subgraph", "generated/dgl.from_cugraph", "generated/dgl.from_networkx", "generated/dgl.from_scipy", "generated/dgl.function.copy_e", "generated/dgl.function.copy_u", "generated/dgl.function.e_add_u", "generated/dgl.function.e_add_v", "generated/dgl.function.e_div_u", "generated/dgl.function.e_div_v", "generated/dgl.function.e_dot_u", "generated/dgl.function.e_dot_v", "generated/dgl.function.e_mul_u", "generated/dgl.function.e_mul_v", "generated/dgl.function.e_sub_u", "generated/dgl.function.e_sub_v", "generated/dgl.function.max", "generated/dgl.function.mean", "generated/dgl.function.min", "generated/dgl.function.sum", "generated/dgl.function.u_add_e", "generated/dgl.function.u_add_v", "generated/dgl.function.u_div_e", "generated/dgl.function.u_div_v", "generated/dgl.function.u_dot_e", "generated/dgl.function.u_dot_v", "generated/dgl.function.u_mul_e", "generated/dgl.function.u_mul_v", "generated/dgl.function.u_sub_e", "generated/dgl.function.u_sub_v", "generated/dgl.function.v_add_e", "generated/dgl.function.v_add_u", "generated/dgl.function.v_div_e", "generated/dgl.function.v_div_u", "generated/dgl.function.v_dot_e", "generated/dgl.function.v_dot_u", "generated/dgl.function.v_mul_e", "generated/dgl.function.v_mul_u", "generated/dgl.function.v_sub_e", "generated/dgl.function.v_sub_u", "generated/dgl.graph", "generated/dgl.graphbolt.BasicFeatureStore", "generated/dgl.graphbolt.BuiltinDataset", "generated/dgl.graphbolt.CPUCachedFeature", "generated/dgl.graphbolt.CopyTo", "generated/dgl.graphbolt.DataLoader", "generated/dgl.graphbolt.Dataset", "generated/dgl.graphbolt.DiskBasedFeature", "generated/dgl.graphbolt.DistributedItemSampler", "generated/dgl.graphbolt.Feature", "generated/dgl.graphbolt.FeatureFetcher", "generated/dgl.graphbolt.FeatureStore", "generated/dgl.graphbolt.FusedCSCSamplingGraph", "generated/dgl.graphbolt.GPUCachedFeature", "generated/dgl.graphbolt.HeteroItemSet", "generated/dgl.graphbolt.InSubgraphSampler", "generated/dgl.graphbolt.ItemSampler", "generated/dgl.graphbolt.ItemSet", "generated/dgl.graphbolt.LayerNeighborSampler", "generated/dgl.graphbolt.LegacyDataset", "generated/dgl.graphbolt.MiniBatch", "generated/dgl.graphbolt.MiniBatchTransformer", "generated/dgl.graphbolt.NegativeSampler", "generated/dgl.graphbolt.NeighborSampler", "generated/dgl.graphbolt.OnDiskDataset", "generated/dgl.graphbolt.SampledSubgraph", "generated/dgl.graphbolt.SampledSubgraphImpl", "generated/dgl.graphbolt.SamplingGraph", "generated/dgl.graphbolt.SubgraphSampler", "generated/dgl.graphbolt.Task", "generated/dgl.graphbolt.TemporalLayerNeighborSampler", "generated/dgl.graphbolt.TemporalNeighborSampler", "generated/dgl.graphbolt.TorchBasedFeature", "generated/dgl.graphbolt.TorchBasedFeatureStore", "generated/dgl.graphbolt.UniformNegativeSampler", "generated/dgl.graphbolt.add_reverse_edges", "generated/dgl.graphbolt.compact_csc_format", "generated/dgl.graphbolt.cpu_cached_feature", "generated/dgl.graphbolt.etype_str_to_tuple", "generated/dgl.graphbolt.etype_tuple_to_str", "generated/dgl.graphbolt.exclude_seed_edges", "generated/dgl.graphbolt.expand_indptr", "generated/dgl.graphbolt.from_dglgraph", "generated/dgl.graphbolt.fused_csc_sampling_graph", "generated/dgl.graphbolt.gpu_cached_feature", "generated/dgl.graphbolt.index_select", "generated/dgl.graphbolt.indptr_edge_ids", "generated/dgl.graphbolt.isin", "generated/dgl.graphbolt.load_from_shared_memory", "generated/dgl.graphbolt.numpy_save_aligned", "generated/dgl.graphbolt.seed", "generated/dgl.graphbolt.unique_and_compact", "generated/dgl.graphbolt.unique_and_compact_csc_formats", "generated/dgl.heterograph", "generated/dgl.in_subgraph", "generated/dgl.is_libxsmm_enabled", "generated/dgl.khop_adj", "generated/dgl.khop_graph", "generated/dgl.khop_in_subgraph", "generated/dgl.khop_out_subgraph", "generated/dgl.knn_graph", "generated/dgl.lap_pe", "generated/dgl.laplacian_lambda_max", "generated/dgl.line_graph", "generated/dgl.linkx_homophily", "generated/dgl.load_graphs", "generated/dgl.max_edges", "generated/dgl.max_nodes", "generated/dgl.mean_edges", "generated/dgl.mean_nodes", "generated/dgl.merge", "generated/dgl.metapath_reachable_graph", "generated/dgl.metis_partition", "generated/dgl.metis_partition_assignment", "generated/dgl.multiprocessing.pytorch.call_once_and_share", "generated/dgl.multiprocessing.pytorch.shared_tensor", "generated/dgl.nn.functional.edge_softmax", "generated/dgl.nn.mxnet.HeteroGraphConv", "generated/dgl.nn.mxnet.conv.AGNNConv", "generated/dgl.nn.mxnet.conv.APPNPConv", "generated/dgl.nn.mxnet.conv.ChebConv", "generated/dgl.nn.mxnet.conv.DenseChebConv", "generated/dgl.nn.mxnet.conv.DenseGraphConv", "generated/dgl.nn.mxnet.conv.DenseSAGEConv", "generated/dgl.nn.mxnet.conv.EdgeConv", "generated/dgl.nn.mxnet.conv.GATConv", "generated/dgl.nn.mxnet.conv.GINConv", "generated/dgl.nn.mxnet.conv.GMMConv", "generated/dgl.nn.mxnet.conv.GatedGraphConv", "generated/dgl.nn.mxnet.conv.GraphConv", "generated/dgl.nn.mxnet.conv.NNConv", "generated/dgl.nn.mxnet.conv.RelGraphConv", "generated/dgl.nn.mxnet.conv.SAGEConv", "generated/dgl.nn.mxnet.conv.SGConv", "generated/dgl.nn.mxnet.conv.TAGConv", "generated/dgl.nn.mxnet.glob.AvgPooling", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling", "generated/dgl.nn.mxnet.glob.MaxPooling", "generated/dgl.nn.mxnet.glob.Set2Set", "generated/dgl.nn.mxnet.glob.SortPooling", "generated/dgl.nn.mxnet.glob.SumPooling", "generated/dgl.nn.mxnet.utils.Sequential", "generated/dgl.nn.pytorch.DeepWalk", "generated/dgl.nn.pytorch.HeteroEmbedding", "generated/dgl.nn.pytorch.HeteroGraphConv", "generated/dgl.nn.pytorch.HeteroLinear", "generated/dgl.nn.pytorch.MetaPath2Vec", "generated/dgl.nn.pytorch.TypedLinear", "generated/dgl.nn.pytorch.conv.AGNNConv", "generated/dgl.nn.pytorch.conv.APPNPConv", "generated/dgl.nn.pytorch.conv.AtomicConv", "generated/dgl.nn.pytorch.conv.CFConv", "generated/dgl.nn.pytorch.conv.ChebConv", "generated/dgl.nn.pytorch.conv.CuGraphGATConv", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv", "generated/dgl.nn.pytorch.conv.DGNConv", "generated/dgl.nn.pytorch.conv.DenseChebConv", "generated/dgl.nn.pytorch.conv.DenseGraphConv", "generated/dgl.nn.pytorch.conv.DenseSAGEConv", "generated/dgl.nn.pytorch.conv.DotGatConv", "generated/dgl.nn.pytorch.conv.EGATConv", "generated/dgl.nn.pytorch.conv.EGNNConv", "generated/dgl.nn.pytorch.conv.EdgeConv", "generated/dgl.nn.pytorch.conv.EdgeGATConv", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm", "generated/dgl.nn.pytorch.conv.GATConv", "generated/dgl.nn.pytorch.conv.GATv2Conv", "generated/dgl.nn.pytorch.conv.GCN2Conv", "generated/dgl.nn.pytorch.conv.GINConv", "generated/dgl.nn.pytorch.conv.GINEConv", "generated/dgl.nn.pytorch.conv.GMMConv", "generated/dgl.nn.pytorch.conv.GatedGCNConv", "generated/dgl.nn.pytorch.conv.GatedGraphConv", "generated/dgl.nn.pytorch.conv.GraphConv", "generated/dgl.nn.pytorch.conv.GroupRevRes", "generated/dgl.nn.pytorch.conv.HGTConv", "generated/dgl.nn.pytorch.conv.NNConv", "generated/dgl.nn.pytorch.conv.PNAConv", "generated/dgl.nn.pytorch.conv.RelGraphConv", "generated/dgl.nn.pytorch.conv.SAGEConv", "generated/dgl.nn.pytorch.conv.SGConv", "generated/dgl.nn.pytorch.conv.TAGConv", "generated/dgl.nn.pytorch.conv.TWIRLSConv", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", "generated/dgl.nn.pytorch.explain.GNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX", "generated/dgl.nn.pytorch.explain.PGExplainer", "generated/dgl.nn.pytorch.explain.SubgraphX", "generated/dgl.nn.pytorch.factory.KNNGraph", "generated/dgl.nn.pytorch.factory.RadiusGraph", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph", "generated/dgl.nn.pytorch.glob.AvgPooling", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling", "generated/dgl.nn.pytorch.glob.MaxPooling", "generated/dgl.nn.pytorch.glob.Set2Set", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder", "generated/dgl.nn.pytorch.glob.SortPooling", "generated/dgl.nn.pytorch.glob.SumPooling", "generated/dgl.nn.pytorch.glob.WeightAndSum", "generated/dgl.nn.pytorch.gt.BiasedMHA", "generated/dgl.nn.pytorch.gt.DegreeEncoder", "generated/dgl.nn.pytorch.gt.EGTLayer", "generated/dgl.nn.pytorch.gt.GraphormerLayer", "generated/dgl.nn.pytorch.gt.LapPosEncoder", "generated/dgl.nn.pytorch.gt.PathEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d", "generated/dgl.nn.pytorch.link.EdgePredictor", "generated/dgl.nn.pytorch.link.TransE", "generated/dgl.nn.pytorch.link.TransR", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding", "generated/dgl.nn.pytorch.utils.JumpingKnowledge", "generated/dgl.nn.pytorch.utils.LabelPropagation", "generated/dgl.nn.pytorch.utils.Sequential", "generated/dgl.nn.pytorch.utils.WeightBasis", "generated/dgl.nn.tensorflow.conv.APPNPConv", "generated/dgl.nn.tensorflow.conv.ChebConv", "generated/dgl.nn.tensorflow.conv.GATConv", "generated/dgl.nn.tensorflow.conv.GINConv", "generated/dgl.nn.tensorflow.conv.GraphConv", "generated/dgl.nn.tensorflow.conv.RelGraphConv", "generated/dgl.nn.tensorflow.conv.SAGEConv", "generated/dgl.nn.tensorflow.conv.SGConv", "generated/dgl.nn.tensorflow.glob.AvgPooling", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv", "generated/dgl.nn.tensorflow.glob.MaxPooling", "generated/dgl.nn.tensorflow.glob.SortPooling", "generated/dgl.nn.tensorflow.glob.SumPooling", "generated/dgl.node_homophily", "generated/dgl.node_label_informativeness", "generated/dgl.node_subgraph", "generated/dgl.node_type_subgraph", "generated/dgl.norm_by_dst", "generated/dgl.ops.copy_e_max", "generated/dgl.ops.copy_e_mean", "generated/dgl.ops.copy_e_min", "generated/dgl.ops.copy_e_sum", "generated/dgl.ops.copy_u", "generated/dgl.ops.copy_u_max", "generated/dgl.ops.copy_u_mean", "generated/dgl.ops.copy_u_min", "generated/dgl.ops.copy_u_sum", "generated/dgl.ops.copy_v", "generated/dgl.ops.e_add_u", "generated/dgl.ops.e_add_v", "generated/dgl.ops.e_div_u", "generated/dgl.ops.e_div_v", "generated/dgl.ops.e_dot_u", "generated/dgl.ops.e_dot_v", "generated/dgl.ops.e_mul_u", "generated/dgl.ops.e_mul_v", "generated/dgl.ops.e_sub_u", "generated/dgl.ops.e_sub_v", "generated/dgl.ops.gather_mm", "generated/dgl.ops.gsddmm", "generated/dgl.ops.gspmm", "generated/dgl.ops.segment_mm", "generated/dgl.ops.segment_reduce", "generated/dgl.ops.u_add_e", "generated/dgl.ops.u_add_e_max", "generated/dgl.ops.u_add_e_mean", "generated/dgl.ops.u_add_e_min", "generated/dgl.ops.u_add_e_sum", "generated/dgl.ops.u_add_v", "generated/dgl.ops.u_div_e", "generated/dgl.ops.u_div_e_max", "generated/dgl.ops.u_div_e_mean", "generated/dgl.ops.u_div_e_min", "generated/dgl.ops.u_div_e_sum", "generated/dgl.ops.u_div_v", "generated/dgl.ops.u_dot_e", "generated/dgl.ops.u_dot_v", "generated/dgl.ops.u_mul_e", "generated/dgl.ops.u_mul_e_max", "generated/dgl.ops.u_mul_e_mean", "generated/dgl.ops.u_mul_e_min", "generated/dgl.ops.u_mul_e_sum", "generated/dgl.ops.u_mul_v", "generated/dgl.ops.u_sub_e", "generated/dgl.ops.u_sub_e_max", "generated/dgl.ops.u_sub_e_mean", "generated/dgl.ops.u_sub_e_min", "generated/dgl.ops.u_sub_e_sum", "generated/dgl.ops.u_sub_v", "generated/dgl.ops.v_add_e", "generated/dgl.ops.v_add_u", "generated/dgl.ops.v_div_e", "generated/dgl.ops.v_div_u", "generated/dgl.ops.v_dot_e", "generated/dgl.ops.v_dot_u", "generated/dgl.ops.v_mul_e", "generated/dgl.ops.v_mul_u", "generated/dgl.ops.v_sub_e", "generated/dgl.ops.v_sub_u", "generated/dgl.out_subgraph", "generated/dgl.partition_graph_with_halo", "generated/dgl.prop_edges", "generated/dgl.prop_edges_dfs", "generated/dgl.prop_nodes", "generated/dgl.prop_nodes_bfs", "generated/dgl.prop_nodes_topo", "generated/dgl.radius_graph", "generated/dgl.rand_bipartite", "generated/dgl.rand_graph", "generated/dgl.random_walk_pe", "generated/dgl.readout_edges", "generated/dgl.readout_nodes", "generated/dgl.remove_edges", "generated/dgl.remove_nodes", "generated/dgl.remove_self_loop", "generated/dgl.reorder_graph", "generated/dgl.reverse", "generated/dgl.sampling.PinSAGESampler", "generated/dgl.sampling.global_uniform_negative_sampling", "generated/dgl.sampling.node2vec_random_walk", "generated/dgl.sampling.pack_traces", "generated/dgl.sampling.random_walk", "generated/dgl.sampling.sample_labors", "generated/dgl.sampling.sample_neighbors", "generated/dgl.sampling.sample_neighbors_biased", "generated/dgl.sampling.select_topk", "generated/dgl.save_graphs", "generated/dgl.seed", "generated/dgl.segmented_knn_graph", "generated/dgl.shortest_dist", "generated/dgl.slice_batch", "generated/dgl.softmax_edges", "generated/dgl.softmax_nodes", "generated/dgl.sort_csc_by_tag", "generated/dgl.sort_csr_by_tag", "generated/dgl.sparse.SparseMatrix.T", "generated/dgl.sparse.SparseMatrix.coalesce", "generated/dgl.sparse.SparseMatrix.col", "generated/dgl.sparse.SparseMatrix.coo", "generated/dgl.sparse.SparseMatrix.cpu", "generated/dgl.sparse.SparseMatrix.csc", "generated/dgl.sparse.SparseMatrix.csr", "generated/dgl.sparse.SparseMatrix.cuda", "generated/dgl.sparse.SparseMatrix.device", "generated/dgl.sparse.SparseMatrix.double", "generated/dgl.sparse.SparseMatrix.dtype", "generated/dgl.sparse.SparseMatrix.float", "generated/dgl.sparse.SparseMatrix.has_duplicate", "generated/dgl.sparse.SparseMatrix.indices", "generated/dgl.sparse.SparseMatrix.int", "generated/dgl.sparse.SparseMatrix.long", "generated/dgl.sparse.SparseMatrix.neg", "generated/dgl.sparse.SparseMatrix.nnz", "generated/dgl.sparse.SparseMatrix.reduce", "generated/dgl.sparse.SparseMatrix.row", "generated/dgl.sparse.SparseMatrix.shape", "generated/dgl.sparse.SparseMatrix.smax", "generated/dgl.sparse.SparseMatrix.smean", "generated/dgl.sparse.SparseMatrix.smin", "generated/dgl.sparse.SparseMatrix.softmax", "generated/dgl.sparse.SparseMatrix.sum", "generated/dgl.sparse.SparseMatrix.t", "generated/dgl.sparse.SparseMatrix.to", "generated/dgl.sparse.SparseMatrix.to_dense", "generated/dgl.sparse.SparseMatrix.transpose", "generated/dgl.sparse.SparseMatrix.val", "generated/dgl.sparse.add", "generated/dgl.sparse.bsddmm", "generated/dgl.sparse.bspmm", "generated/dgl.sparse.diag", "generated/dgl.sparse.div", "generated/dgl.sparse.from_coo", "generated/dgl.sparse.from_csc", "generated/dgl.sparse.from_csr", "generated/dgl.sparse.identity", "generated/dgl.sparse.matmul", "generated/dgl.sparse.mul", "generated/dgl.sparse.power", "generated/dgl.sparse.sddmm", "generated/dgl.sparse.softmax", "generated/dgl.sparse.sp_add_v", "generated/dgl.sparse.sp_broadcast_v", "generated/dgl.sparse.sp_div_v", "generated/dgl.sparse.sp_mul_v", "generated/dgl.sparse.sp_sub_v", "generated/dgl.sparse.spmatrix", "generated/dgl.sparse.spmm", "generated/dgl.sparse.spspmm", "generated/dgl.sparse.sub", "generated/dgl.sparse.val_like", "generated/dgl.sum_edges", "generated/dgl.sum_nodes", "generated/dgl.svd_pe", "generated/dgl.to_bidirected", "generated/dgl.to_block", "generated/dgl.to_cugraph", "generated/dgl.to_double", "generated/dgl.to_float", "generated/dgl.to_half", "generated/dgl.to_heterogeneous", "generated/dgl.to_homogeneous", "generated/dgl.to_networkx", "generated/dgl.to_simple", "generated/dgl.to_simple_graph", "generated/dgl.topk_edges", "generated/dgl.topk_nodes", "generated/dgl.topological_nodes_generator", "generated/dgl.transforms.AddEdge", "generated/dgl.transforms.AddMetaPaths", "generated/dgl.transforms.AddReverse", "generated/dgl.transforms.AddSelfLoop", "generated/dgl.transforms.BaseTransform", "generated/dgl.transforms.Compose", "generated/dgl.transforms.DropEdge", "generated/dgl.transforms.DropNode", "generated/dgl.transforms.FeatMask", "generated/dgl.transforms.GCNNorm", "generated/dgl.transforms.GDC", "generated/dgl.transforms.HeatKernel", "generated/dgl.transforms.KHopGraph", "generated/dgl.transforms.LapPE", "generated/dgl.transforms.LineGraph", "generated/dgl.transforms.NodeShuffle", "generated/dgl.transforms.PPR", "generated/dgl.transforms.RandomWalkPE", "generated/dgl.transforms.RemoveSelfLoop", "generated/dgl.transforms.RowFeatNormalizer", "generated/dgl.transforms.SIGNDiffusion", "generated/dgl.transforms.SVDPE", "generated/dgl.transforms.ToLevi", "generated/dgl.transforms.ToSimple", "generated/dgl.udf.EdgeBatch.batch_size", "generated/dgl.udf.EdgeBatch.data", "generated/dgl.udf.EdgeBatch.dst", "generated/dgl.udf.EdgeBatch.edges", "generated/dgl.udf.EdgeBatch.src", "generated/dgl.udf.NodeBatch.batch_size", "generated/dgl.udf.NodeBatch.data", "generated/dgl.udf.NodeBatch.mailbox", "generated/dgl.udf.NodeBatch.nodes", "generated/dgl.unbatch", "generated/dgl.use_libxsmm", "graphtransformer/data", "graphtransformer/index", "graphtransformer/model", "guide/data", "guide/data-dataset", "guide/data-download", "guide/data-loadcsv", "guide/data-loadogb", "guide/data-process", "guide/data-savenload", "guide/distributed", "guide/distributed-apis", "guide/distributed-hetero", "guide/distributed-partition", "guide/distributed-preprocessing", "guide/distributed-tools", "guide/graph", "guide/graph-basic", "guide/graph-external", "guide/graph-feature", "guide/graph-gpu", "guide/graph-graphs-nodes-edges", "guide/graph-heterogeneous", "guide/index", "guide/message", "guide/message-api", "guide/message-efficient", "guide/message-heterograph", "guide/message-part", "guide/minibatch", "guide/minibatch-custom-sampler", "guide/minibatch-edge", "guide/minibatch-gpu-sampling", "guide/minibatch-inference", "guide/minibatch-link", "guide/minibatch-nn", "guide/minibatch-node", "guide/minibatch-parallelism", "guide/minibatch-sparse", "guide/mixed_precision", "guide/nn", "guide/nn-construction", "guide/nn-forward", "guide/nn-heterograph", "guide/training", "guide/training-edge", "guide/training-eweight", "guide/training-graph", "guide/training-link", "guide/training-node", "guide_cn/data", "guide_cn/data-dataset", "guide_cn/data-download", "guide_cn/data-loadogb", "guide_cn/data-process", "guide_cn/data-savenload", "guide_cn/distributed", "guide_cn/distributed-apis", "guide_cn/distributed-preprocessing", "guide_cn/distributed-tools", "guide_cn/graph", "guide_cn/graph-basic", "guide_cn/graph-external", "guide_cn/graph-feature", "guide_cn/graph-gpu", "guide_cn/graph-graphs-nodes-edges", "guide_cn/graph-heterogeneous", "guide_cn/index", "guide_cn/message", "guide_cn/message-api", "guide_cn/message-efficient", "guide_cn/message-heterograph", "guide_cn/message-part", "guide_cn/minibatch", "guide_cn/minibatch-custom-sampler", "guide_cn/minibatch-edge", "guide_cn/minibatch-inference", "guide_cn/minibatch-link", "guide_cn/minibatch-nn", "guide_cn/minibatch-node", "guide_cn/nn", "guide_cn/nn-construction", "guide_cn/nn-forward", "guide_cn/nn-heterograph", "guide_cn/training", "guide_cn/training-edge", "guide_cn/training-eweight", "guide_cn/training-graph", "guide_cn/training-link", "guide_cn/training-node", "guide_ko/data", "guide_ko/data-dataset", "guide_ko/data-download", "guide_ko/data-loadogb", "guide_ko/data-process", "guide_ko/data-savenload", "guide_ko/distributed", "guide_ko/distributed-apis", "guide_ko/distributed-hetero", "guide_ko/distributed-preprocessing", "guide_ko/distributed-tools", "guide_ko/graph", "guide_ko/graph-basic", "guide_ko/graph-external", "guide_ko/graph-feature", "guide_ko/graph-gpu", "guide_ko/graph-graphs-nodes-edges", "guide_ko/graph-heterogeneous", "guide_ko/index", "guide_ko/message", "guide_ko/message-api", "guide_ko/message-edge", "guide_ko/message-efficient", "guide_ko/message-heterograph", "guide_ko/message-part", "guide_ko/minibatch", "guide_ko/minibatch-custom-sampler", "guide_ko/minibatch-edge", "guide_ko/minibatch-gpu-sampling", "guide_ko/minibatch-inference", "guide_ko/minibatch-link", "guide_ko/minibatch-nn", "guide_ko/minibatch-node", "guide_ko/mixed_precision", "guide_ko/nn", "guide_ko/nn-construction", "guide_ko/nn-forward", "guide_ko/nn-heterograph", "guide_ko/training", "guide_ko/training-edge", "guide_ko/training-graph", "guide_ko/training-link", "guide_ko/training-node", "index", "install/index", "notebooks/sparse/gcn", "notebooks/sparse/graph_diffusion", "notebooks/sparse/graph_transformer", "notebooks/sparse/hgnn", "notebooks/sparse/index", "notebooks/sparse/quickstart", "performance", "resources", "sg_execution_times", "stochastic_training/index", "stochastic_training/link_prediction", "stochastic_training/multigpu_node_classification", "stochastic_training/neighbor_sampling_overview", "stochastic_training/node_classification", "stochastic_training/ondisk-dataset", "stochastic_training/ondisk-dataset-specification", "stochastic_training/ondisk_dataset_heterograph", "stochastic_training/ondisk_dataset_homograph", "tutorials/blitz/1_introduction", "tutorials/blitz/2_dglgraph", "tutorials/blitz/3_message_passing", "tutorials/blitz/4_link_predict", "tutorials/blitz/5_graph_classification", "tutorials/blitz/6_load_data", "tutorials/blitz/index", "tutorials/blitz/sg_execution_times", "tutorials/cpu/argo_tutorial", "tutorials/cpu/cpu_best_practises", "tutorials/cpu/index", "tutorials/cpu/sg_execution_times", "tutorials/dist/1_node_classification", "tutorials/dist/2_link_prediction", "tutorials/dist/index", "tutorials/dist/sg_execution_times", "tutorials/models/1_gnn/1_gcn", "tutorials/models/1_gnn/4_rgcn", "tutorials/models/1_gnn/6_line_graph", "tutorials/models/1_gnn/9_gat", "tutorials/models/1_gnn/index", "tutorials/models/1_gnn/sg_execution_times", "tutorials/models/2_small_graph/3_tree-lstm", "tutorials/models/2_small_graph/index", "tutorials/models/2_small_graph/sg_execution_times", "tutorials/models/3_generative_model/5_dgmg", "tutorials/models/3_generative_model/index", "tutorials/models/3_generative_model/sg_execution_times", "tutorials/models/4_old_wines/2_capsule", "tutorials/models/4_old_wines/7_transformer", "tutorials/models/4_old_wines/index", "tutorials/models/4_old_wines/sg_execution_times", "tutorials/models/index", "tutorials/models/sg_execution_times", "tutorials/multi/1_graph_classification", "tutorials/multi/2_node_classification", "tutorials/multi/index", "tutorials/multi/sg_execution_times"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/python/dgl.rst", "api/python/dgl.DGLGraph.rst", "api/python/dgl.data.rst", "api/python/dgl.dataloading.rst", "api/python/dgl.distributed.rst", "api/python/dgl.function.rst", "api/python/dgl.geometry.rst", "api/python/dgl.graphbolt.rst", "api/python/dgl.multiprocessing.rst", "api/python/dgl.ops.rst", "api/python/dgl.optim.rst", "api/python/dgl.sampling.rst", "api/python/dgl.sparse_v0.rst", "api/python/index.rst", "api/python/knn_benchmark.rst", "api/python/nn-mxnet.rst", "api/python/nn-pytorch.rst", "api/python/nn-tensorflow.rst", "api/python/nn.functional.rst", "api/python/transforms.rst", "api/python/udf.rst", "contribute.rst", "developer/ffi.rst", "env_var.rst", "faq.rst", "features/dataset.rst", "generated/dgl.DGLGraph.__getitem__.rst", "generated/dgl.DGLGraph.add_edges.rst", "generated/dgl.DGLGraph.add_nodes.rst", "generated/dgl.DGLGraph.add_self_loop.rst", "generated/dgl.DGLGraph.adj.rst", "generated/dgl.DGLGraph.adj_external.rst", "generated/dgl.DGLGraph.adj_tensors.rst", "generated/dgl.DGLGraph.adjacency_matrix.rst", "generated/dgl.DGLGraph.apply_edges.rst", "generated/dgl.DGLGraph.apply_nodes.rst", "generated/dgl.DGLGraph.batch_num_edges.rst", "generated/dgl.DGLGraph.batch_num_nodes.rst", "generated/dgl.DGLGraph.batch_size.rst", "generated/dgl.DGLGraph.canonical_etypes.rst", "generated/dgl.DGLGraph.cpu.rst", "generated/dgl.DGLGraph.create_formats_.rst", "generated/dgl.DGLGraph.device.rst", "generated/dgl.DGLGraph.dstdata.rst", "generated/dgl.DGLGraph.dstnodes.rst", "generated/dgl.DGLGraph.dsttypes.rst", "generated/dgl.DGLGraph.edata.rst", "generated/dgl.DGLGraph.edge_attr_schemes.rst", "generated/dgl.DGLGraph.edge_ids.rst", "generated/dgl.DGLGraph.edge_subgraph.rst", "generated/dgl.DGLGraph.edge_type_subgraph.rst", "generated/dgl.DGLGraph.edges.rst", "generated/dgl.DGLGraph.etypes.rst", "generated/dgl.DGLGraph.filter_edges.rst", "generated/dgl.DGLGraph.filter_nodes.rst", "generated/dgl.DGLGraph.find_edges.rst", "generated/dgl.DGLGraph.formats.rst", "generated/dgl.DGLGraph.has_edges_between.rst", "generated/dgl.DGLGraph.has_nodes.rst", "generated/dgl.DGLGraph.idtype.rst", "generated/dgl.DGLGraph.in_degrees.rst", "generated/dgl.DGLGraph.in_edges.rst", "generated/dgl.DGLGraph.inc.rst", "generated/dgl.DGLGraph.incidence_matrix.rst", "generated/dgl.DGLGraph.int.rst", "generated/dgl.DGLGraph.is_homogeneous.rst", "generated/dgl.DGLGraph.is_multigraph.rst", "generated/dgl.DGLGraph.is_pinned.rst", "generated/dgl.DGLGraph.is_unibipartite.rst", "generated/dgl.DGLGraph.line_graph.rst", "generated/dgl.DGLGraph.local_scope.rst", "generated/dgl.DGLGraph.long.rst", "generated/dgl.DGLGraph.metagraph.rst", "generated/dgl.DGLGraph.multi_update_all.rst", "generated/dgl.DGLGraph.ndata.rst", "generated/dgl.DGLGraph.node_attr_schemes.rst", "generated/dgl.DGLGraph.node_type_subgraph.rst", "generated/dgl.DGLGraph.nodes.rst", "generated/dgl.DGLGraph.ntypes.rst", "generated/dgl.DGLGraph.num_dst_nodes.rst", "generated/dgl.DGLGraph.num_edges.rst", "generated/dgl.DGLGraph.num_nodes.rst", "generated/dgl.DGLGraph.num_src_nodes.rst", "generated/dgl.DGLGraph.number_of_dst_nodes.rst", "generated/dgl.DGLGraph.number_of_edges.rst", "generated/dgl.DGLGraph.number_of_nodes.rst", "generated/dgl.DGLGraph.number_of_src_nodes.rst", "generated/dgl.DGLGraph.out_degrees.rst", "generated/dgl.DGLGraph.out_edges.rst", "generated/dgl.DGLGraph.pin_memory_.rst", "generated/dgl.DGLGraph.predecessors.rst", "generated/dgl.DGLGraph.prop_edges.rst", "generated/dgl.DGLGraph.prop_nodes.rst", "generated/dgl.DGLGraph.pull.rst", "generated/dgl.DGLGraph.push.rst", "generated/dgl.DGLGraph.remove_edges.rst", "generated/dgl.DGLGraph.remove_nodes.rst", "generated/dgl.DGLGraph.remove_self_loop.rst", "generated/dgl.DGLGraph.reorder_graph.rst", "generated/dgl.DGLGraph.reverse.rst", "generated/dgl.DGLGraph.send_and_recv.rst", "generated/dgl.DGLGraph.set_batch_num_edges.rst", "generated/dgl.DGLGraph.set_batch_num_nodes.rst", "generated/dgl.DGLGraph.srcdata.rst", "generated/dgl.DGLGraph.srcnodes.rst", "generated/dgl.DGLGraph.srctypes.rst", "generated/dgl.DGLGraph.subgraph.rst", "generated/dgl.DGLGraph.successors.rst", "generated/dgl.DGLGraph.to.rst", "generated/dgl.DGLGraph.to_canonical_etype.rst", "generated/dgl.DGLGraph.to_cugraph.rst", "generated/dgl.DGLGraph.to_simple.rst", "generated/dgl.DGLGraph.unpin_memory_.rst", "generated/dgl.DGLGraph.update_all.rst", "generated/dgl.add_edges.rst", "generated/dgl.add_nodes.rst", "generated/dgl.add_reverse_edges.rst", "generated/dgl.add_self_loop.rst", "generated/dgl.adj_product_graph.rst", "generated/dgl.adj_sum_graph.rst", "generated/dgl.adjusted_homophily.rst", "generated/dgl.apply_each.rst", "generated/dgl.batch.rst", "generated/dgl.bfs_edges_generator.rst", "generated/dgl.bfs_nodes_generator.rst", "generated/dgl.bipartite_from_networkx.rst", "generated/dgl.bipartite_from_scipy.rst", "generated/dgl.block_to_graph.rst", "generated/dgl.broadcast_edges.rst", "generated/dgl.broadcast_nodes.rst", "generated/dgl.compact_graphs.rst", "generated/dgl.create_block.rst", "generated/dgl.data.AIFBDataset.rst", "generated/dgl.data.AMDataset.rst", "generated/dgl.data.ActorDataset.rst", "generated/dgl.data.AmazonCoBuyComputerDataset.rst", "generated/dgl.data.AmazonCoBuyPhotoDataset.rst", "generated/dgl.data.AmazonRatingsDataset.rst", "generated/dgl.data.AsGraphPredDataset.rst", "generated/dgl.data.AsLinkPredDataset.rst", "generated/dgl.data.AsNodePredDataset.rst", "generated/dgl.data.BA2MotifDataset.rst", "generated/dgl.data.BACommunityDataset.rst", "generated/dgl.data.BAShapeDataset.rst", "generated/dgl.data.BGSDataset.rst", "generated/dgl.data.BitcoinOTCDataset.rst", "generated/dgl.data.CIFAR10SuperPixelDataset.rst", "generated/dgl.data.CLUSTERDataset.rst", "generated/dgl.data.CSVDataset.rst", "generated/dgl.data.ChameleonDataset.rst", "generated/dgl.data.CiteseerGraphDataset.rst", "generated/dgl.data.CoauthorCSDataset.rst", "generated/dgl.data.CoauthorPhysicsDataset.rst", "generated/dgl.data.CoraFullDataset.rst", "generated/dgl.data.CoraGraphDataset.rst", "generated/dgl.data.CornellDataset.rst", "generated/dgl.data.DGLDataset.rst", "generated/dgl.data.FB15k237Dataset.rst", "generated/dgl.data.FB15kDataset.rst", "generated/dgl.data.FakeNewsDataset.rst", "generated/dgl.data.FlickrDataset.rst", "generated/dgl.data.FraudAmazonDataset.rst", "generated/dgl.data.FraudDataset.rst", "generated/dgl.data.FraudYelpDataset.rst", "generated/dgl.data.GDELTDataset.rst", "generated/dgl.data.GINDataset.rst", "generated/dgl.data.ICEWS18Dataset.rst", "generated/dgl.data.KarateClubDataset.rst", "generated/dgl.data.LegacyTUDataset.rst", "generated/dgl.data.MNISTSuperPixelDataset.rst", "generated/dgl.data.MUTAGDataset.rst", "generated/dgl.data.MinesweeperDataset.rst", "generated/dgl.data.MiniGCDataset.rst", "generated/dgl.data.MovieLensDataset.rst", "generated/dgl.data.PATTERNDataset.rst", "generated/dgl.data.PPIDataset.rst", "generated/dgl.data.PubmedGraphDataset.rst", "generated/dgl.data.QM7bDataset.rst", "generated/dgl.data.QM9Dataset.rst", "generated/dgl.data.QM9EdgeDataset.rst", "generated/dgl.data.QuestionsDataset.rst", "generated/dgl.data.RedditDataset.rst", "generated/dgl.data.RomanEmpireDataset.rst", "generated/dgl.data.SBMMixtureDataset.rst", "generated/dgl.data.SSTDataset.rst", "generated/dgl.data.SquirrelDataset.rst", "generated/dgl.data.TUDataset.rst", "generated/dgl.data.TexasDataset.rst", "generated/dgl.data.TolokersDataset.rst", "generated/dgl.data.TreeCycleDataset.rst", "generated/dgl.data.TreeGridDataset.rst", "generated/dgl.data.WN18Dataset.rst", "generated/dgl.data.WikiCSDataset.rst", "generated/dgl.data.WisconsinDataset.rst", "generated/dgl.data.YelpDataset.rst", "generated/dgl.data.ZINCDataset.rst", "generated/dgl.data.utils.Subset.rst", "generated/dgl.data.utils.add_node_property_split.rst", "generated/dgl.data.utils.add_nodepred_split.rst", "generated/dgl.data.utils.check_sha1.rst", "generated/dgl.data.utils.download.rst", "generated/dgl.data.utils.extract_archive.rst", "generated/dgl.data.utils.get_download_dir.rst", "generated/dgl.data.utils.load_info.rst", "generated/dgl.data.utils.load_labels.rst", "generated/dgl.data.utils.mask_nodes_by_property.rst", "generated/dgl.data.utils.save_info.rst", "generated/dgl.data.utils.split_dataset.rst", "generated/dgl.dataloading.BlockSampler.rst", "generated/dgl.dataloading.ClusterGCNSampler.rst", "generated/dgl.dataloading.DataLoader.rst", "generated/dgl.dataloading.DistEdgeDataLoader.rst", "generated/dgl.dataloading.DistNodeDataLoader.rst", "generated/dgl.dataloading.GraphDataLoader.rst", "generated/dgl.dataloading.LaborSampler.rst", "generated/dgl.dataloading.MultiLayerFullNeighborSampler.rst", "generated/dgl.dataloading.NeighborSampler.rst", "generated/dgl.dataloading.SAINTSampler.rst", "generated/dgl.dataloading.Sampler.rst", "generated/dgl.dataloading.ShaDowKHopSampler.rst", "generated/dgl.dataloading.as_edge_prediction_sampler.rst", "generated/dgl.dataloading.base.LazyFeature.rst", "generated/dgl.dataloading.base.set_dst_lazy_features.rst", "generated/dgl.dataloading.base.set_edge_lazy_features.rst", "generated/dgl.dataloading.base.set_node_lazy_features.rst", "generated/dgl.dataloading.base.set_src_lazy_features.rst", "generated/dgl.dataloading.negative_sampler.GlobalUniform.rst", "generated/dgl.dataloading.negative_sampler.PerSourceUniform.rst", "generated/dgl.dataloading.negative_sampler.Uniform.rst", "generated/dgl.dfs_edges_generator.rst", "generated/dgl.dfs_labeled_edges_generator.rst", "generated/dgl.distributed.dgl_partition_to_graphbolt.rst", "generated/dgl.distributed.edge_split.rst", "generated/dgl.distributed.find_edges.rst", "generated/dgl.distributed.in_subgraph.rst", "generated/dgl.distributed.initialize.rst", "generated/dgl.distributed.load_partition.rst", "generated/dgl.distributed.load_partition_book.rst", "generated/dgl.distributed.load_partition_feats.rst", "generated/dgl.distributed.node_split.rst", "generated/dgl.distributed.partition_graph.rst", "generated/dgl.distributed.sample_etype_neighbors.rst", "generated/dgl.distributed.sample_neighbors.rst", "generated/dgl.double_radius_node_labeling.rst", "generated/dgl.edge_homophily.rst", "generated/dgl.edge_label_informativeness.rst", "generated/dgl.edge_subgraph.rst", "generated/dgl.edge_type_subgraph.rst", "generated/dgl.from_cugraph.rst", "generated/dgl.from_networkx.rst", "generated/dgl.from_scipy.rst", "generated/dgl.function.copy_e.rst", "generated/dgl.function.copy_u.rst", "generated/dgl.function.e_add_u.rst", "generated/dgl.function.e_add_v.rst", "generated/dgl.function.e_div_u.rst", "generated/dgl.function.e_div_v.rst", "generated/dgl.function.e_dot_u.rst", "generated/dgl.function.e_dot_v.rst", "generated/dgl.function.e_mul_u.rst", "generated/dgl.function.e_mul_v.rst", "generated/dgl.function.e_sub_u.rst", "generated/dgl.function.e_sub_v.rst", "generated/dgl.function.max.rst", "generated/dgl.function.mean.rst", "generated/dgl.function.min.rst", "generated/dgl.function.sum.rst", "generated/dgl.function.u_add_e.rst", "generated/dgl.function.u_add_v.rst", "generated/dgl.function.u_div_e.rst", "generated/dgl.function.u_div_v.rst", "generated/dgl.function.u_dot_e.rst", "generated/dgl.function.u_dot_v.rst", "generated/dgl.function.u_mul_e.rst", "generated/dgl.function.u_mul_v.rst", "generated/dgl.function.u_sub_e.rst", "generated/dgl.function.u_sub_v.rst", "generated/dgl.function.v_add_e.rst", "generated/dgl.function.v_add_u.rst", "generated/dgl.function.v_div_e.rst", "generated/dgl.function.v_div_u.rst", "generated/dgl.function.v_dot_e.rst", "generated/dgl.function.v_dot_u.rst", "generated/dgl.function.v_mul_e.rst", "generated/dgl.function.v_mul_u.rst", "generated/dgl.function.v_sub_e.rst", "generated/dgl.function.v_sub_u.rst", "generated/dgl.graph.rst", "generated/dgl.graphbolt.BasicFeatureStore.rst", "generated/dgl.graphbolt.BuiltinDataset.rst", "generated/dgl.graphbolt.CPUCachedFeature.rst", "generated/dgl.graphbolt.CopyTo.rst", "generated/dgl.graphbolt.DataLoader.rst", "generated/dgl.graphbolt.Dataset.rst", "generated/dgl.graphbolt.DiskBasedFeature.rst", "generated/dgl.graphbolt.DistributedItemSampler.rst", "generated/dgl.graphbolt.Feature.rst", "generated/dgl.graphbolt.FeatureFetcher.rst", "generated/dgl.graphbolt.FeatureStore.rst", "generated/dgl.graphbolt.FusedCSCSamplingGraph.rst", "generated/dgl.graphbolt.GPUCachedFeature.rst", "generated/dgl.graphbolt.HeteroItemSet.rst", "generated/dgl.graphbolt.InSubgraphSampler.rst", "generated/dgl.graphbolt.ItemSampler.rst", "generated/dgl.graphbolt.ItemSet.rst", "generated/dgl.graphbolt.LayerNeighborSampler.rst", "generated/dgl.graphbolt.LegacyDataset.rst", "generated/dgl.graphbolt.MiniBatch.rst", "generated/dgl.graphbolt.MiniBatchTransformer.rst", "generated/dgl.graphbolt.NegativeSampler.rst", "generated/dgl.graphbolt.NeighborSampler.rst", "generated/dgl.graphbolt.OnDiskDataset.rst", "generated/dgl.graphbolt.SampledSubgraph.rst", "generated/dgl.graphbolt.SampledSubgraphImpl.rst", "generated/dgl.graphbolt.SamplingGraph.rst", "generated/dgl.graphbolt.SubgraphSampler.rst", "generated/dgl.graphbolt.Task.rst", "generated/dgl.graphbolt.TemporalLayerNeighborSampler.rst", "generated/dgl.graphbolt.TemporalNeighborSampler.rst", "generated/dgl.graphbolt.TorchBasedFeature.rst", "generated/dgl.graphbolt.TorchBasedFeatureStore.rst", "generated/dgl.graphbolt.UniformNegativeSampler.rst", "generated/dgl.graphbolt.add_reverse_edges.rst", "generated/dgl.graphbolt.compact_csc_format.rst", "generated/dgl.graphbolt.cpu_cached_feature.rst", "generated/dgl.graphbolt.etype_str_to_tuple.rst", "generated/dgl.graphbolt.etype_tuple_to_str.rst", "generated/dgl.graphbolt.exclude_seed_edges.rst", "generated/dgl.graphbolt.expand_indptr.rst", "generated/dgl.graphbolt.from_dglgraph.rst", "generated/dgl.graphbolt.fused_csc_sampling_graph.rst", "generated/dgl.graphbolt.gpu_cached_feature.rst", "generated/dgl.graphbolt.index_select.rst", "generated/dgl.graphbolt.indptr_edge_ids.rst", "generated/dgl.graphbolt.isin.rst", "generated/dgl.graphbolt.load_from_shared_memory.rst", "generated/dgl.graphbolt.numpy_save_aligned.rst", "generated/dgl.graphbolt.seed.rst", "generated/dgl.graphbolt.unique_and_compact.rst", "generated/dgl.graphbolt.unique_and_compact_csc_formats.rst", "generated/dgl.heterograph.rst", "generated/dgl.in_subgraph.rst", "generated/dgl.is_libxsmm_enabled.rst", "generated/dgl.khop_adj.rst", "generated/dgl.khop_graph.rst", "generated/dgl.khop_in_subgraph.rst", "generated/dgl.khop_out_subgraph.rst", "generated/dgl.knn_graph.rst", "generated/dgl.lap_pe.rst", "generated/dgl.laplacian_lambda_max.rst", "generated/dgl.line_graph.rst", "generated/dgl.linkx_homophily.rst", "generated/dgl.load_graphs.rst", "generated/dgl.max_edges.rst", "generated/dgl.max_nodes.rst", "generated/dgl.mean_edges.rst", "generated/dgl.mean_nodes.rst", "generated/dgl.merge.rst", "generated/dgl.metapath_reachable_graph.rst", "generated/dgl.metis_partition.rst", "generated/dgl.metis_partition_assignment.rst", "generated/dgl.multiprocessing.pytorch.call_once_and_share.rst", "generated/dgl.multiprocessing.pytorch.shared_tensor.rst", "generated/dgl.nn.functional.edge_softmax.rst", "generated/dgl.nn.mxnet.HeteroGraphConv.rst", "generated/dgl.nn.mxnet.conv.AGNNConv.rst", "generated/dgl.nn.mxnet.conv.APPNPConv.rst", "generated/dgl.nn.mxnet.conv.ChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseGraphConv.rst", "generated/dgl.nn.mxnet.conv.DenseSAGEConv.rst", "generated/dgl.nn.mxnet.conv.EdgeConv.rst", "generated/dgl.nn.mxnet.conv.GATConv.rst", "generated/dgl.nn.mxnet.conv.GINConv.rst", "generated/dgl.nn.mxnet.conv.GMMConv.rst", "generated/dgl.nn.mxnet.conv.GatedGraphConv.rst", "generated/dgl.nn.mxnet.conv.GraphConv.rst", "generated/dgl.nn.mxnet.conv.NNConv.rst", "generated/dgl.nn.mxnet.conv.RelGraphConv.rst", "generated/dgl.nn.mxnet.conv.SAGEConv.rst", "generated/dgl.nn.mxnet.conv.SGConv.rst", "generated/dgl.nn.mxnet.conv.TAGConv.rst", "generated/dgl.nn.mxnet.glob.AvgPooling.rst", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.mxnet.glob.MaxPooling.rst", "generated/dgl.nn.mxnet.glob.Set2Set.rst", "generated/dgl.nn.mxnet.glob.SortPooling.rst", "generated/dgl.nn.mxnet.glob.SumPooling.rst", "generated/dgl.nn.mxnet.utils.Sequential.rst", "generated/dgl.nn.pytorch.DeepWalk.rst", "generated/dgl.nn.pytorch.HeteroEmbedding.rst", "generated/dgl.nn.pytorch.HeteroGraphConv.rst", "generated/dgl.nn.pytorch.HeteroLinear.rst", "generated/dgl.nn.pytorch.MetaPath2Vec.rst", "generated/dgl.nn.pytorch.TypedLinear.rst", "generated/dgl.nn.pytorch.conv.AGNNConv.rst", "generated/dgl.nn.pytorch.conv.APPNPConv.rst", "generated/dgl.nn.pytorch.conv.AtomicConv.rst", "generated/dgl.nn.pytorch.conv.CFConv.rst", "generated/dgl.nn.pytorch.conv.ChebConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphGATConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DGNConv.rst", "generated/dgl.nn.pytorch.conv.DenseChebConv.rst", "generated/dgl.nn.pytorch.conv.DenseGraphConv.rst", "generated/dgl.nn.pytorch.conv.DenseSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DotGatConv.rst", "generated/dgl.nn.pytorch.conv.EGATConv.rst", "generated/dgl.nn.pytorch.conv.EGNNConv.rst", "generated/dgl.nn.pytorch.conv.EdgeConv.rst", "generated/dgl.nn.pytorch.conv.EdgeGATConv.rst", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm.rst", "generated/dgl.nn.pytorch.conv.GATConv.rst", "generated/dgl.nn.pytorch.conv.GATv2Conv.rst", "generated/dgl.nn.pytorch.conv.GCN2Conv.rst", "generated/dgl.nn.pytorch.conv.GINConv.rst", "generated/dgl.nn.pytorch.conv.GINEConv.rst", "generated/dgl.nn.pytorch.conv.GMMConv.rst", "generated/dgl.nn.pytorch.conv.GatedGCNConv.rst", "generated/dgl.nn.pytorch.conv.GatedGraphConv.rst", "generated/dgl.nn.pytorch.conv.GraphConv.rst", "generated/dgl.nn.pytorch.conv.GroupRevRes.rst", "generated/dgl.nn.pytorch.conv.HGTConv.rst", "generated/dgl.nn.pytorch.conv.NNConv.rst", "generated/dgl.nn.pytorch.conv.PNAConv.rst", "generated/dgl.nn.pytorch.conv.RelGraphConv.rst", "generated/dgl.nn.pytorch.conv.SAGEConv.rst", "generated/dgl.nn.pytorch.conv.SGConv.rst", "generated/dgl.nn.pytorch.conv.TAGConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.rst", "generated/dgl.nn.pytorch.explain.GNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX.rst", "generated/dgl.nn.pytorch.explain.PGExplainer.rst", "generated/dgl.nn.pytorch.explain.SubgraphX.rst", "generated/dgl.nn.pytorch.factory.KNNGraph.rst", "generated/dgl.nn.pytorch.factory.RadiusGraph.rst", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph.rst", "generated/dgl.nn.pytorch.glob.AvgPooling.rst", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.pytorch.glob.MaxPooling.rst", "generated/dgl.nn.pytorch.glob.Set2Set.rst", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder.rst", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder.rst", "generated/dgl.nn.pytorch.glob.SortPooling.rst", "generated/dgl.nn.pytorch.glob.SumPooling.rst", "generated/dgl.nn.pytorch.glob.WeightAndSum.rst", "generated/dgl.nn.pytorch.gt.BiasedMHA.rst", "generated/dgl.nn.pytorch.gt.DegreeEncoder.rst", "generated/dgl.nn.pytorch.gt.EGTLayer.rst", "generated/dgl.nn.pytorch.gt.GraphormerLayer.rst", "generated/dgl.nn.pytorch.gt.LapPosEncoder.rst", "generated/dgl.nn.pytorch.gt.PathEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.link.EdgePredictor.rst", "generated/dgl.nn.pytorch.link.TransE.rst", "generated/dgl.nn.pytorch.link.TransR.rst", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding.rst", "generated/dgl.nn.pytorch.utils.JumpingKnowledge.rst", "generated/dgl.nn.pytorch.utils.LabelPropagation.rst", "generated/dgl.nn.pytorch.utils.Sequential.rst", "generated/dgl.nn.pytorch.utils.WeightBasis.rst", "generated/dgl.nn.tensorflow.conv.APPNPConv.rst", "generated/dgl.nn.tensorflow.conv.ChebConv.rst", "generated/dgl.nn.tensorflow.conv.GATConv.rst", "generated/dgl.nn.tensorflow.conv.GINConv.rst", "generated/dgl.nn.tensorflow.conv.GraphConv.rst", "generated/dgl.nn.tensorflow.conv.RelGraphConv.rst", "generated/dgl.nn.tensorflow.conv.SAGEConv.rst", "generated/dgl.nn.tensorflow.conv.SGConv.rst", "generated/dgl.nn.tensorflow.glob.AvgPooling.rst", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv.rst", "generated/dgl.nn.tensorflow.glob.MaxPooling.rst", "generated/dgl.nn.tensorflow.glob.SortPooling.rst", "generated/dgl.nn.tensorflow.glob.SumPooling.rst", "generated/dgl.node_homophily.rst", "generated/dgl.node_label_informativeness.rst", "generated/dgl.node_subgraph.rst", "generated/dgl.node_type_subgraph.rst", "generated/dgl.norm_by_dst.rst", "generated/dgl.ops.copy_e_max.rst", "generated/dgl.ops.copy_e_mean.rst", "generated/dgl.ops.copy_e_min.rst", "generated/dgl.ops.copy_e_sum.rst", "generated/dgl.ops.copy_u.rst", "generated/dgl.ops.copy_u_max.rst", "generated/dgl.ops.copy_u_mean.rst", "generated/dgl.ops.copy_u_min.rst", "generated/dgl.ops.copy_u_sum.rst", "generated/dgl.ops.copy_v.rst", "generated/dgl.ops.e_add_u.rst", "generated/dgl.ops.e_add_v.rst", "generated/dgl.ops.e_div_u.rst", "generated/dgl.ops.e_div_v.rst", "generated/dgl.ops.e_dot_u.rst", "generated/dgl.ops.e_dot_v.rst", "generated/dgl.ops.e_mul_u.rst", "generated/dgl.ops.e_mul_v.rst", "generated/dgl.ops.e_sub_u.rst", "generated/dgl.ops.e_sub_v.rst", "generated/dgl.ops.gather_mm.rst", "generated/dgl.ops.gsddmm.rst", "generated/dgl.ops.gspmm.rst", "generated/dgl.ops.segment_mm.rst", "generated/dgl.ops.segment_reduce.rst", "generated/dgl.ops.u_add_e.rst", "generated/dgl.ops.u_add_e_max.rst", "generated/dgl.ops.u_add_e_mean.rst", "generated/dgl.ops.u_add_e_min.rst", "generated/dgl.ops.u_add_e_sum.rst", "generated/dgl.ops.u_add_v.rst", "generated/dgl.ops.u_div_e.rst", "generated/dgl.ops.u_div_e_max.rst", "generated/dgl.ops.u_div_e_mean.rst", "generated/dgl.ops.u_div_e_min.rst", "generated/dgl.ops.u_div_e_sum.rst", "generated/dgl.ops.u_div_v.rst", "generated/dgl.ops.u_dot_e.rst", "generated/dgl.ops.u_dot_v.rst", "generated/dgl.ops.u_mul_e.rst", "generated/dgl.ops.u_mul_e_max.rst", "generated/dgl.ops.u_mul_e_mean.rst", "generated/dgl.ops.u_mul_e_min.rst", "generated/dgl.ops.u_mul_e_sum.rst", "generated/dgl.ops.u_mul_v.rst", "generated/dgl.ops.u_sub_e.rst", "generated/dgl.ops.u_sub_e_max.rst", "generated/dgl.ops.u_sub_e_mean.rst", "generated/dgl.ops.u_sub_e_min.rst", "generated/dgl.ops.u_sub_e_sum.rst", "generated/dgl.ops.u_sub_v.rst", "generated/dgl.ops.v_add_e.rst", "generated/dgl.ops.v_add_u.rst", "generated/dgl.ops.v_div_e.rst", "generated/dgl.ops.v_div_u.rst", "generated/dgl.ops.v_dot_e.rst", "generated/dgl.ops.v_dot_u.rst", "generated/dgl.ops.v_mul_e.rst", "generated/dgl.ops.v_mul_u.rst", "generated/dgl.ops.v_sub_e.rst", "generated/dgl.ops.v_sub_u.rst", "generated/dgl.out_subgraph.rst", "generated/dgl.partition_graph_with_halo.rst", "generated/dgl.prop_edges.rst", "generated/dgl.prop_edges_dfs.rst", "generated/dgl.prop_nodes.rst", "generated/dgl.prop_nodes_bfs.rst", "generated/dgl.prop_nodes_topo.rst", "generated/dgl.radius_graph.rst", "generated/dgl.rand_bipartite.rst", "generated/dgl.rand_graph.rst", "generated/dgl.random_walk_pe.rst", "generated/dgl.readout_edges.rst", "generated/dgl.readout_nodes.rst", "generated/dgl.remove_edges.rst", "generated/dgl.remove_nodes.rst", "generated/dgl.remove_self_loop.rst", "generated/dgl.reorder_graph.rst", "generated/dgl.reverse.rst", "generated/dgl.sampling.PinSAGESampler.rst", "generated/dgl.sampling.global_uniform_negative_sampling.rst", "generated/dgl.sampling.node2vec_random_walk.rst", "generated/dgl.sampling.pack_traces.rst", "generated/dgl.sampling.random_walk.rst", "generated/dgl.sampling.sample_labors.rst", "generated/dgl.sampling.sample_neighbors.rst", "generated/dgl.sampling.sample_neighbors_biased.rst", "generated/dgl.sampling.select_topk.rst", "generated/dgl.save_graphs.rst", "generated/dgl.seed.rst", "generated/dgl.segmented_knn_graph.rst", "generated/dgl.shortest_dist.rst", "generated/dgl.slice_batch.rst", "generated/dgl.softmax_edges.rst", "generated/dgl.softmax_nodes.rst", "generated/dgl.sort_csc_by_tag.rst", "generated/dgl.sort_csr_by_tag.rst", "generated/dgl.sparse.SparseMatrix.T.rst", "generated/dgl.sparse.SparseMatrix.coalesce.rst", "generated/dgl.sparse.SparseMatrix.col.rst", "generated/dgl.sparse.SparseMatrix.coo.rst", "generated/dgl.sparse.SparseMatrix.cpu.rst", "generated/dgl.sparse.SparseMatrix.csc.rst", "generated/dgl.sparse.SparseMatrix.csr.rst", "generated/dgl.sparse.SparseMatrix.cuda.rst", "generated/dgl.sparse.SparseMatrix.device.rst", "generated/dgl.sparse.SparseMatrix.double.rst", "generated/dgl.sparse.SparseMatrix.dtype.rst", "generated/dgl.sparse.SparseMatrix.float.rst", "generated/dgl.sparse.SparseMatrix.has_duplicate.rst", "generated/dgl.sparse.SparseMatrix.indices.rst", "generated/dgl.sparse.SparseMatrix.int.rst", "generated/dgl.sparse.SparseMatrix.long.rst", "generated/dgl.sparse.SparseMatrix.neg.rst", "generated/dgl.sparse.SparseMatrix.nnz.rst", "generated/dgl.sparse.SparseMatrix.reduce.rst", "generated/dgl.sparse.SparseMatrix.row.rst", "generated/dgl.sparse.SparseMatrix.shape.rst", "generated/dgl.sparse.SparseMatrix.smax.rst", "generated/dgl.sparse.SparseMatrix.smean.rst", "generated/dgl.sparse.SparseMatrix.smin.rst", "generated/dgl.sparse.SparseMatrix.softmax.rst", "generated/dgl.sparse.SparseMatrix.sum.rst", "generated/dgl.sparse.SparseMatrix.t.rst", "generated/dgl.sparse.SparseMatrix.to.rst", "generated/dgl.sparse.SparseMatrix.to_dense.rst", "generated/dgl.sparse.SparseMatrix.transpose.rst", "generated/dgl.sparse.SparseMatrix.val.rst", "generated/dgl.sparse.add.rst", "generated/dgl.sparse.bsddmm.rst", "generated/dgl.sparse.bspmm.rst", "generated/dgl.sparse.diag.rst", "generated/dgl.sparse.div.rst", "generated/dgl.sparse.from_coo.rst", "generated/dgl.sparse.from_csc.rst", "generated/dgl.sparse.from_csr.rst", "generated/dgl.sparse.identity.rst", "generated/dgl.sparse.matmul.rst", "generated/dgl.sparse.mul.rst", "generated/dgl.sparse.power.rst", "generated/dgl.sparse.sddmm.rst", "generated/dgl.sparse.softmax.rst", "generated/dgl.sparse.sp_add_v.rst", "generated/dgl.sparse.sp_broadcast_v.rst", "generated/dgl.sparse.sp_div_v.rst", "generated/dgl.sparse.sp_mul_v.rst", "generated/dgl.sparse.sp_sub_v.rst", "generated/dgl.sparse.spmatrix.rst", "generated/dgl.sparse.spmm.rst", "generated/dgl.sparse.spspmm.rst", "generated/dgl.sparse.sub.rst", "generated/dgl.sparse.val_like.rst", "generated/dgl.sum_edges.rst", "generated/dgl.sum_nodes.rst", "generated/dgl.svd_pe.rst", "generated/dgl.to_bidirected.rst", "generated/dgl.to_block.rst", "generated/dgl.to_cugraph.rst", "generated/dgl.to_double.rst", "generated/dgl.to_float.rst", "generated/dgl.to_half.rst", "generated/dgl.to_heterogeneous.rst", "generated/dgl.to_homogeneous.rst", "generated/dgl.to_networkx.rst", "generated/dgl.to_simple.rst", "generated/dgl.to_simple_graph.rst", "generated/dgl.topk_edges.rst", "generated/dgl.topk_nodes.rst", "generated/dgl.topological_nodes_generator.rst", "generated/dgl.transforms.AddEdge.rst", "generated/dgl.transforms.AddMetaPaths.rst", "generated/dgl.transforms.AddReverse.rst", "generated/dgl.transforms.AddSelfLoop.rst", "generated/dgl.transforms.BaseTransform.rst", "generated/dgl.transforms.Compose.rst", "generated/dgl.transforms.DropEdge.rst", "generated/dgl.transforms.DropNode.rst", "generated/dgl.transforms.FeatMask.rst", "generated/dgl.transforms.GCNNorm.rst", "generated/dgl.transforms.GDC.rst", "generated/dgl.transforms.HeatKernel.rst", "generated/dgl.transforms.KHopGraph.rst", "generated/dgl.transforms.LapPE.rst", "generated/dgl.transforms.LineGraph.rst", "generated/dgl.transforms.NodeShuffle.rst", "generated/dgl.transforms.PPR.rst", "generated/dgl.transforms.RandomWalkPE.rst", "generated/dgl.transforms.RemoveSelfLoop.rst", "generated/dgl.transforms.RowFeatNormalizer.rst", "generated/dgl.transforms.SIGNDiffusion.rst", "generated/dgl.transforms.SVDPE.rst", "generated/dgl.transforms.ToLevi.rst", "generated/dgl.transforms.ToSimple.rst", "generated/dgl.udf.EdgeBatch.batch_size.rst", "generated/dgl.udf.EdgeBatch.data.rst", "generated/dgl.udf.EdgeBatch.dst.rst", "generated/dgl.udf.EdgeBatch.edges.rst", "generated/dgl.udf.EdgeBatch.src.rst", "generated/dgl.udf.NodeBatch.batch_size.rst", "generated/dgl.udf.NodeBatch.data.rst", "generated/dgl.udf.NodeBatch.mailbox.rst", "generated/dgl.udf.NodeBatch.nodes.rst", "generated/dgl.unbatch.rst", "generated/dgl.use_libxsmm.rst", "graphtransformer/data.rst", "graphtransformer/index.rst", "graphtransformer/model.rst", "guide/data.rst", "guide/data-dataset.rst", "guide/data-download.rst", "guide/data-loadcsv.rst", "guide/data-loadogb.rst", "guide/data-process.rst", "guide/data-savenload.rst", "guide/distributed.rst", "guide/distributed-apis.rst", "guide/distributed-hetero.rst", "guide/distributed-partition.rst", "guide/distributed-preprocessing.rst", "guide/distributed-tools.rst", "guide/graph.rst", "guide/graph-basic.rst", "guide/graph-external.rst", "guide/graph-feature.rst", "guide/graph-gpu.rst", "guide/graph-graphs-nodes-edges.rst", "guide/graph-heterogeneous.rst", "guide/index.rst", "guide/message.rst", "guide/message-api.rst", "guide/message-efficient.rst", "guide/message-heterograph.rst", "guide/message-part.rst", "guide/minibatch.rst", "guide/minibatch-custom-sampler.rst", "guide/minibatch-edge.rst", "guide/minibatch-gpu-sampling.rst", "guide/minibatch-inference.rst", "guide/minibatch-link.rst", "guide/minibatch-nn.rst", "guide/minibatch-node.rst", "guide/minibatch-parallelism.rst", "guide/minibatch-sparse.rst", "guide/mixed_precision.rst", "guide/nn.rst", "guide/nn-construction.rst", "guide/nn-forward.rst", "guide/nn-heterograph.rst", "guide/training.rst", "guide/training-edge.rst", "guide/training-eweight.rst", "guide/training-graph.rst", "guide/training-link.rst", "guide/training-node.rst", "guide_cn/data.rst", "guide_cn/data-dataset.rst", "guide_cn/data-download.rst", "guide_cn/data-loadogb.rst", "guide_cn/data-process.rst", "guide_cn/data-savenload.rst", "guide_cn/distributed.rst", "guide_cn/distributed-apis.rst", "guide_cn/distributed-preprocessing.rst", "guide_cn/distributed-tools.rst", "guide_cn/graph.rst", "guide_cn/graph-basic.rst", "guide_cn/graph-external.rst", "guide_cn/graph-feature.rst", "guide_cn/graph-gpu.rst", "guide_cn/graph-graphs-nodes-edges.rst", "guide_cn/graph-heterogeneous.rst", "guide_cn/index.rst", "guide_cn/message.rst", "guide_cn/message-api.rst", "guide_cn/message-efficient.rst", "guide_cn/message-heterograph.rst", "guide_cn/message-part.rst", "guide_cn/minibatch.rst", "guide_cn/minibatch-custom-sampler.rst", "guide_cn/minibatch-edge.rst", "guide_cn/minibatch-inference.rst", "guide_cn/minibatch-link.rst", "guide_cn/minibatch-nn.rst", "guide_cn/minibatch-node.rst", "guide_cn/nn.rst", "guide_cn/nn-construction.rst", "guide_cn/nn-forward.rst", "guide_cn/nn-heterograph.rst", "guide_cn/training.rst", "guide_cn/training-edge.rst", "guide_cn/training-eweight.rst", "guide_cn/training-graph.rst", "guide_cn/training-link.rst", "guide_cn/training-node.rst", "guide_ko/data.rst", "guide_ko/data-dataset.rst", "guide_ko/data-download.rst", "guide_ko/data-loadogb.rst", "guide_ko/data-process.rst", "guide_ko/data-savenload.rst", "guide_ko/distributed.rst", "guide_ko/distributed-apis.rst", "guide_ko/distributed-hetero.rst", "guide_ko/distributed-preprocessing.rst", "guide_ko/distributed-tools.rst", "guide_ko/graph.rst", "guide_ko/graph-basic.rst", "guide_ko/graph-external.rst", "guide_ko/graph-feature.rst", "guide_ko/graph-gpu.rst", "guide_ko/graph-graphs-nodes-edges.rst", "guide_ko/graph-heterogeneous.rst", "guide_ko/index.rst", "guide_ko/message.rst", "guide_ko/message-api.rst", "guide_ko/message-edge.rst", "guide_ko/message-efficient.rst", "guide_ko/message-heterograph.rst", "guide_ko/message-part.rst", "guide_ko/minibatch.rst", "guide_ko/minibatch-custom-sampler.rst", "guide_ko/minibatch-edge.rst", "guide_ko/minibatch-gpu-sampling.rst", "guide_ko/minibatch-inference.rst", "guide_ko/minibatch-link.rst", "guide_ko/minibatch-nn.rst", "guide_ko/minibatch-node.rst", "guide_ko/mixed_precision.rst", "guide_ko/nn.rst", "guide_ko/nn-construction.rst", "guide_ko/nn-forward.rst", "guide_ko/nn-heterograph.rst", "guide_ko/training.rst", "guide_ko/training-edge.rst", "guide_ko/training-graph.rst", "guide_ko/training-link.rst", "guide_ko/training-node.rst", "index.rst", "install/index.rst", "notebooks/sparse/gcn.nblink", "notebooks/sparse/graph_diffusion.nblink", "notebooks/sparse/graph_transformer.nblink", "notebooks/sparse/hgnn.nblink", "notebooks/sparse/index.rst", "notebooks/sparse/quickstart.nblink", "performance.rst", "resources.rst", "sg_execution_times.rst", "stochastic_training/index.rst", "stochastic_training/link_prediction.nblink", "stochastic_training/multigpu_node_classification.nblink", "stochastic_training/neighbor_sampling_overview.nblink", "stochastic_training/node_classification.nblink", "stochastic_training/ondisk-dataset.rst", "stochastic_training/ondisk-dataset-specification.rst", "stochastic_training/ondisk_dataset_heterograph.nblink", "stochastic_training/ondisk_dataset_homograph.nblink", "tutorials/blitz/1_introduction.rst", "tutorials/blitz/2_dglgraph.rst", "tutorials/blitz/3_message_passing.rst", "tutorials/blitz/4_link_predict.rst", "tutorials/blitz/5_graph_classification.rst", "tutorials/blitz/6_load_data.rst", "tutorials/blitz/index.rst", "tutorials/blitz/sg_execution_times.rst", "tutorials/cpu/argo_tutorial.rst", "tutorials/cpu/cpu_best_practises.rst", "tutorials/cpu/index.rst", "tutorials/cpu/sg_execution_times.rst", "tutorials/dist/1_node_classification.rst", "tutorials/dist/2_link_prediction.rst", "tutorials/dist/index.rst", "tutorials/dist/sg_execution_times.rst", "tutorials/models/1_gnn/1_gcn.rst", "tutorials/models/1_gnn/4_rgcn.rst", "tutorials/models/1_gnn/6_line_graph.rst", "tutorials/models/1_gnn/9_gat.rst", "tutorials/models/1_gnn/index.rst", "tutorials/models/1_gnn/sg_execution_times.rst", "tutorials/models/2_small_graph/3_tree-lstm.rst", "tutorials/models/2_small_graph/index.rst", "tutorials/models/2_small_graph/sg_execution_times.rst", "tutorials/models/3_generative_model/5_dgmg.rst", "tutorials/models/3_generative_model/index.rst", "tutorials/models/3_generative_model/sg_execution_times.rst", "tutorials/models/4_old_wines/2_capsule.rst", "tutorials/models/4_old_wines/7_transformer.rst", "tutorials/models/4_old_wines/index.rst", "tutorials/models/4_old_wines/sg_execution_times.rst", "tutorials/models/index.rst", "tutorials/models/sg_execution_times.rst", "tutorials/multi/1_graph_classification.rst", "tutorials/multi/2_node_classification.rst", "tutorials/multi/index.rst", "tutorials/multi/sg_execution_times.rst"], "indexentries": {"__getitem__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__getitem__", false]], "__getitem__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__getitem__", false]], "__getitem__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__getitem__", false]], "__getitem__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__getitem__", false]], "__getitem__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__getitem__", false]], "__getitem__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__getitem__", false]], "__getitem__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__getitem__", false]], "__getitem__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__getitem__", false]], "__getitem__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__getitem__", false]], "__getitem__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__getitem__", false]], "__getitem__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__getitem__", false]], "__getitem__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__getitem__", false]], "__getitem__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__getitem__", false]], "__getitem__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__getitem__", false]], "__getitem__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__getitem__", false]], "__getitem__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__getitem__", false]], "__getitem__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__getitem__", false]], "__getitem__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__getitem__", false]], "__getitem__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__getitem__", false]], "__getitem__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__getitem__", false]], "__getitem__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__getitem__", false]], "__getitem__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__getitem__", false]], "__getitem__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__getitem__", false]], "__getitem__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__getitem__", false]], "__getitem__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__getitem__", false]], "__getitem__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__getitem__", false]], "__getitem__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__getitem__", false]], "__getitem__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__getitem__", false]], "__getitem__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__getitem__", false]], "__getitem__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__getitem__", false]], "__getitem__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__getitem__", false]], "__getitem__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__getitem__", false]], "__getitem__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__getitem__", false]], "__getitem__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__getitem__", false]], "__getitem__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__getitem__", false]], "__getitem__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__getitem__", false]], "__getitem__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__getitem__", false]], "__getitem__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__getitem__", false]], "__getitem__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__getitem__", false]], "__getitem__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__getitem__", false]], "__getitem__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__getitem__", false]], "__getitem__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__getitem__", false]], "__getitem__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__getitem__", false]], "__getitem__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__getitem__", false]], "__getitem__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__getitem__", false]], "__getitem__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__getitem__", false]], "__getitem__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__getitem__", false]], "__getitem__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__getitem__", false]], "__getitem__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__getitem__", false]], "__getitem__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__getitem__", false]], "__getitem__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__getitem__", false]], "__getitem__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__getitem__", false]], "__getitem__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__getitem__", false]], "__getitem__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__getitem__", false]], "__getitem__() (dgl.dglgraph method)": [[26, "dgl.DGLGraph.__getitem__", false]], "__init__() (dgl.dataloading.blocksampler method)": [[208, "dgl.dataloading.BlockSampler.__init__", false]], "__init__() (dgl.sampling.pinsagesampler method)": [[564, "dgl.sampling.PinSAGESampler.__init__", false]], "__len__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__len__", false]], "__len__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__len__", false]], "__len__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__len__", false]], "__len__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__len__", false]], "__len__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__len__", false]], "__len__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__len__", false]], "__len__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__len__", false]], "__len__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__len__", false]], "__len__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__len__", false]], "__len__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__len__", false]], "__len__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__len__", false]], "__len__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__len__", false]], "__len__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__len__", false]], "__len__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__len__", false]], "__len__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__len__", false]], "__len__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__len__", false]], "__len__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__len__", false]], "__len__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__len__", false]], "__len__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__len__", false]], "__len__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__len__", false]], "__len__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__len__", false]], "__len__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__len__", false]], "__len__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__len__", false]], "__len__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__len__", false]], "__len__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__len__", false]], "__len__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__len__", false]], "__len__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__len__", false]], "__len__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__len__", false]], "__len__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__len__", false]], "__len__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__len__", false]], "__len__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__len__", false]], "__len__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__len__", false]], "__len__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__len__", false]], "__len__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__len__", false]], "__len__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__len__", false]], "__len__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__len__", false]], "__len__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__len__", false]], "__len__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__len__", false]], "__len__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__len__", false]], "__len__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__len__", false]], "__len__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__len__", false]], "__len__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__len__", false]], "__len__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__len__", false]], "__len__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__len__", false]], "__len__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__len__", false]], "__len__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__len__", false]], "__len__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__len__", false]], "__len__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__len__", false]], "__len__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__len__", false]], "__len__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__len__", false]], "__len__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__len__", false]], "__len__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__len__", false]], "__len__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__len__", false]], "__len__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__len__", false]], "__len__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__len__", false]], "__len__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__len__", false]], "__len__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__len__", false]], "__len__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__len__", false]], "__len__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__len__", false]], "__len__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__len__", false]], "__len__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__len__", false]], "__len__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__len__", false]], "__len__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__len__", false]], "__len__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__len__", false]], "__len__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__len__", false]], "actordataset (class in dgl.data)": [[134, "dgl.data.ActorDataset", false]], "add() (in module dgl.sparse)": [[613, "dgl.sparse.add", false]], "add_edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.add_edge_attribute", false]], "add_edges() (dgl.dglgraph method)": [[27, "dgl.DGLGraph.add_edges", false]], "add_edges() (in module dgl)": [[114, "dgl.add_edges", false]], "add_node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.add_node_attribute", false]], "add_node_property_split (class in dgl.data.utils)": [[197, "dgl.data.utils.add_node_property_split", false]], "add_nodepred_split (class in dgl.data.utils)": [[198, "dgl.data.utils.add_nodepred_split", false]], "add_nodes() (dgl.dglgraph method)": [[28, "dgl.DGLGraph.add_nodes", false]], "add_nodes() (in module dgl)": [[115, "dgl.add_nodes", false]], "add_reverse_edges() (in module dgl)": [[116, "dgl.add_reverse_edges", false]], "add_reverse_edges() (in module dgl.graphbolt)": [[322, "dgl.graphbolt.add_reverse_edges", false]], "add_self_loop() (dgl.dglgraph method)": [[29, "dgl.DGLGraph.add_self_loop", false]], "add_self_loop() (in module dgl)": [[117, "dgl.add_self_loop", false]], "addedge (class in dgl.transforms)": [[654, "dgl.transforms.AddEdge", false]], "addmetapaths (class in dgl.transforms)": [[655, "dgl.transforms.AddMetaPaths", false]], "addreverse (class in dgl.transforms)": [[656, "dgl.transforms.AddReverse", false]], "addselfloop (class in dgl.transforms)": [[657, "dgl.transforms.AddSelfLoop", false]], "adj() (dgl.dglgraph method)": [[30, "dgl.DGLGraph.adj", false]], "adj_external() (dgl.dglgraph method)": [[31, "dgl.DGLGraph.adj_external", false]], "adj_product_graph() (in module dgl)": [[118, "dgl.adj_product_graph", false]], "adj_sum_graph() (in module dgl)": [[119, "dgl.adj_sum_graph", false]], "adj_tensors() (dgl.dglgraph method)": [[32, "dgl.DGLGraph.adj_tensors", false]], "adjacency_matrix() (dgl.dglgraph method)": [[33, "dgl.DGLGraph.adjacency_matrix", false]], "adjusted_homophily() (in module dgl)": [[120, "dgl.adjusted_homophily", false]], "agnnconv (class in dgl.nn.mxnet.conv)": [[365, "dgl.nn.mxnet.conv.AGNNConv", false]], "agnnconv (class in dgl.nn.pytorch.conv)": [[395, "dgl.nn.pytorch.conv.AGNNConv", false]], "aifbdataset (class in dgl.data)": [[132, "dgl.data.AIFBDataset", false]], "all_nodes_set (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.all_nodes_set", false]], "amazoncobuycomputerdataset (class in dgl.data)": [[135, "dgl.data.AmazonCoBuyComputerDataset", false]], "amazoncobuyphotodataset (class in dgl.data)": [[136, "dgl.data.AmazonCoBuyPhotoDataset", false]], "amazonratingsdataset (class in dgl.data)": [[137, "dgl.data.AmazonRatingsDataset", false]], "amdataset (class in dgl.data)": [[133, "dgl.data.AMDataset", false]], "apply_each() (in module dgl)": [[121, "dgl.apply_each", false]], "apply_edges() (dgl.dglgraph method)": [[34, "dgl.DGLGraph.apply_edges", false]], "apply_nodes() (dgl.dglgraph method)": [[35, "dgl.DGLGraph.apply_nodes", false]], "appnpconv (class in dgl.nn.mxnet.conv)": [[366, "dgl.nn.mxnet.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.pytorch.conv)": [[396, "dgl.nn.pytorch.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.tensorflow.conv)": [[466, "dgl.nn.tensorflow.conv.APPNPConv", false]], "as_edge_prediction_sampler() (in module dgl.dataloading)": [[220, "dgl.dataloading.as_edge_prediction_sampler", false]], "asgraphpreddataset (class in dgl.data)": [[138, "dgl.data.AsGraphPredDataset", false]], "aslinkpreddataset (class in dgl.data)": [[139, "dgl.data.AsLinkPredDataset", false]], "asnodepreddataset (class in dgl.data)": [[140, "dgl.data.AsNodePredDataset", false]], "atomicconv (class in dgl.nn.pytorch.conv)": [[397, "dgl.nn.pytorch.conv.AtomicConv", false]], "avgpooling (class in dgl.nn.mxnet.glob)": [[382, "dgl.nn.mxnet.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.pytorch.glob)": [[441, "dgl.nn.pytorch.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.tensorflow.glob)": [[474, "dgl.nn.tensorflow.glob.AvgPooling", false]], "ba2motifdataset (class in dgl.data)": [[141, "dgl.data.BA2MotifDataset", false]], "bacommunitydataset (class in dgl.data)": [[142, "dgl.data.BACommunityDataset", false]], "barrier() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.barrier", false]], "basetransform (class in dgl.transforms)": [[658, "dgl.transforms.BaseTransform", false]], "bashapedataset (class in dgl.data)": [[143, "dgl.data.BAShapeDataset", false]], "basicfeaturestore (class in dgl.graphbolt)": [[288, "dgl.graphbolt.BasicFeatureStore", false]], "batch() (in module dgl)": [[122, "dgl.batch", false]], "batch_num_edges() (dgl.dglgraph method)": [[36, "dgl.DGLGraph.batch_num_edges", false]], "batch_num_nodes() (dgl.dglgraph method)": [[37, "dgl.DGLGraph.batch_num_nodes", false]], "batch_size (dgl.dglgraph property)": [[38, "dgl.DGLGraph.batch_size", false]], "batch_size() (dgl.udf.edgebatch method)": [[678, "dgl.udf.EdgeBatch.batch_size", false]], "batch_size() (dgl.udf.nodebatch method)": [[683, "dgl.udf.NodeBatch.batch_size", false]], "bfs_edges_generator() (in module dgl)": [[123, "dgl.bfs_edges_generator", false]], "bfs_nodes_generator() (in module dgl)": [[124, "dgl.bfs_nodes_generator", false]], "bgsdataset (class in dgl.data)": [[144, "dgl.data.BGSDataset", false]], "bias (dgl.nn.pytorch.conv.graphconv attribute)": [[421, "dgl.nn.pytorch.conv.GraphConv.bias", false]], "biasedmha (class in dgl.nn.pytorch.gt)": [[450, "dgl.nn.pytorch.gt.BiasedMHA", false]], "bipartite_from_networkx() (in module dgl)": [[125, "dgl.bipartite_from_networkx", false]], "bipartite_from_scipy() (in module dgl)": [[126, "dgl.bipartite_from_scipy", false]], "bitcoinotcdataset (class in dgl.data)": [[145, "dgl.data.BitcoinOTCDataset", false]], "block_to_graph() (in module dgl)": [[127, "dgl.block_to_graph", false]], "blocks (dgl.graphbolt.minibatch property)": [[307, "dgl.graphbolt.MiniBatch.blocks", false]], "blocksampler (class in dgl.dataloading)": [[208, "dgl.dataloading.BlockSampler", false]], "broadcast_edges() (in module dgl)": [[128, "dgl.broadcast_edges", false]], "broadcast_nodes() (in module dgl)": [[129, "dgl.broadcast_nodes", false]], "bsddmm() (in module dgl.sparse)": [[614, "dgl.sparse.bsddmm", false]], "bspmm() (in module dgl.sparse)": [[615, "dgl.sparse.bspmm", false]], "builtindataset (class in dgl.graphbolt)": [[289, "dgl.graphbolt.BuiltinDataset", false]], "cache_size_in_bytes (dgl.graphbolt.cpucachedfeature property)": [[290, "dgl.graphbolt.CPUCachedFeature.cache_size_in_bytes", false]], "cache_size_in_bytes (dgl.graphbolt.gpucachedfeature property)": [[300, "dgl.graphbolt.GPUCachedFeature.cache_size_in_bytes", false]], "call_once_and_share() (in module dgl.multiprocessing.pytorch)": [[361, "dgl.multiprocessing.pytorch.call_once_and_share", false]], "canonical_etypes (dgl.dglgraph property)": [[39, "dgl.DGLGraph.canonical_etypes", false]], "canonical_etypes (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.canonical_etypes", false]], "cfconv (class in dgl.nn.pytorch.conv)": [[398, "dgl.nn.pytorch.conv.CFConv", false]], "chameleondataset (class in dgl.data)": [[149, "dgl.data.ChameleonDataset", false]], "chebconv (class in dgl.nn.mxnet.conv)": [[367, "dgl.nn.mxnet.conv.ChebConv", false]], "chebconv (class in dgl.nn.pytorch.conv)": [[399, "dgl.nn.pytorch.conv.ChebConv", false]], "chebconv (class in dgl.nn.tensorflow.conv)": [[467, "dgl.nn.tensorflow.conv.ChebConv", false]], "check_sha1 (class in dgl.data.utils)": [[199, "dgl.data.utils.check_sha1", false]], "cifar10superpixeldataset (class in dgl.data)": [[146, "dgl.data.CIFAR10SuperPixelDataset", false]], "citeseergraphdataset (class in dgl.data)": [[150, "dgl.data.CiteseerGraphDataset", false]], "clusterdataset (class in dgl.data)": [[147, "dgl.data.CLUSTERDataset", false]], "clustergcnsampler (class in dgl.dataloading)": [[209, "dgl.dataloading.ClusterGCNSampler", false]], "coalesce() (dgl.sparse.sparsematrix method)": [[583, "dgl.sparse.SparseMatrix.coalesce", false]], "coauthorcsdataset (class in dgl.data)": [[151, "dgl.data.CoauthorCSDataset", false]], "coauthorphysicsdataset (class in dgl.data)": [[152, "dgl.data.CoauthorPhysicsDataset", false]], "col (dgl.sparse.sparsematrix property)": [[584, "dgl.sparse.SparseMatrix.col", false]], "collate_fn() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.collate_fn", false]], "compact_csc_format() (in module dgl.graphbolt)": [[323, "dgl.graphbolt.compact_csc_format", false]], "compact_graphs() (in module dgl)": [[130, "dgl.compact_graphs", false]], "compacted_seeds (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.compacted_seeds", false]], "compose (class in dgl.transforms)": [[659, "dgl.transforms.Compose", false]], "compute_blocks() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.compute_blocks", false]], "coo() (dgl.sparse.sparsematrix method)": [[585, "dgl.sparse.SparseMatrix.coo", false]], "copy_e() (in module dgl.function)": [[251, "dgl.function.copy_e", false]], "copy_e_max() (in module dgl.ops)": [[485, "dgl.ops.copy_e_max", false]], "copy_e_mean() (in module dgl.ops)": [[486, "dgl.ops.copy_e_mean", false]], "copy_e_min() (in module dgl.ops)": [[487, "dgl.ops.copy_e_min", false]], "copy_e_sum() (in module dgl.ops)": [[488, "dgl.ops.copy_e_sum", false]], "copy_to_shared_memory() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.copy_to_shared_memory", false]], "copy_to_shared_memory() (dgl.graphbolt.samplinggraph method)": [[314, "dgl.graphbolt.SamplingGraph.copy_to_shared_memory", false]], "copy_u() (in module dgl.function)": [[252, "dgl.function.copy_u", false]], "copy_u() (in module dgl.ops)": [[489, "dgl.ops.copy_u", false]], "copy_u_max() (in module dgl.ops)": [[490, "dgl.ops.copy_u_max", false]], "copy_u_mean() (in module dgl.ops)": [[491, "dgl.ops.copy_u_mean", false]], "copy_u_min() (in module dgl.ops)": [[492, "dgl.ops.copy_u_min", false]], "copy_u_sum() (in module dgl.ops)": [[493, "dgl.ops.copy_u_sum", false]], "copy_v() (in module dgl.ops)": [[494, "dgl.ops.copy_v", false]], "copyto (class in dgl.graphbolt)": [[291, "dgl.graphbolt.CopyTo", false]], "corafulldataset (class in dgl.data)": [[153, "dgl.data.CoraFullDataset", false]], "coragraphdataset (class in dgl.data)": [[154, "dgl.data.CoraGraphDataset", false]], "cornelldataset (class in dgl.data)": [[155, "dgl.data.CornellDataset", false]], "count() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.count", false]], "count() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.count", false]], "count() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.count", false]], "count() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.count", false]], "count() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.count", false]], "count() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.count", false]], "cpu() (dgl.dglgraph method)": [[40, "dgl.DGLGraph.cpu", false]], "cpu() (dgl.sparse.sparsematrix method)": [[586, "dgl.sparse.SparseMatrix.cpu", false]], "cpu_cached_feature() (in module dgl.graphbolt)": [[324, "dgl.graphbolt.cpu_cached_feature", false]], "cpucachedfeature (class in dgl.graphbolt)": [[290, "dgl.graphbolt.CPUCachedFeature", false]], "create_block() (in module dgl)": [[131, "dgl.create_block", false]], "create_formats_() (dgl.dglgraph method)": [[41, "dgl.DGLGraph.create_formats_", false]], "csc() (dgl.sparse.sparsematrix method)": [[587, "dgl.sparse.SparseMatrix.csc", false]], "csc_indptr (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.csc_indptr", false]], "csr() (dgl.sparse.sparsematrix method)": [[588, "dgl.sparse.SparseMatrix.csr", false]], "csvdataset (class in dgl.data)": [[148, "dgl.data.CSVDataset", false]], "cuda() (dgl.sparse.sparsematrix method)": [[589, "dgl.sparse.SparseMatrix.cuda", false]], "cugraphgatconv (class in dgl.nn.pytorch.conv)": [[400, "dgl.nn.pytorch.conv.CuGraphGATConv", false]], "cugraphrelgraphconv (class in dgl.nn.pytorch.conv)": [[401, "dgl.nn.pytorch.conv.CuGraphRelGraphConv", false]], "cugraphsageconv (class in dgl.nn.pytorch.conv)": [[402, "dgl.nn.pytorch.conv.CuGraphSAGEConv", false]], "data (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.data", false]], "data (dgl.udf.edgebatch property)": [[679, "dgl.udf.EdgeBatch.data", false]], "data (dgl.udf.nodebatch property)": [[684, "dgl.udf.NodeBatch.data", false]], "dataloader (class in dgl.dataloading)": [[210, "dgl.dataloading.DataLoader", false]], "dataloader (class in dgl.graphbolt)": [[292, "dgl.graphbolt.DataLoader", false]], "dataset (class in dgl.graphbolt)": [[293, "dgl.graphbolt.Dataset", false]], "dataset_name (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.dataset_name", false]], "dataset_name (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.dataset_name", false]], "dataset_name (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.dataset_name", false]], "deepwalk (class in dgl.nn.pytorch)": [[389, "dgl.nn.pytorch.DeepWalk", false]], "degreeencoder (class in dgl.nn.pytorch.gt)": [[451, "dgl.nn.pytorch.gt.DegreeEncoder", false]], "densechebconv (class in dgl.nn.mxnet.conv)": [[368, "dgl.nn.mxnet.conv.DenseChebConv", false]], "densechebconv (class in dgl.nn.pytorch.conv)": [[404, "dgl.nn.pytorch.conv.DenseChebConv", false]], "densegraphconv (class in dgl.nn.mxnet.conv)": [[369, "dgl.nn.mxnet.conv.DenseGraphConv", false]], "densegraphconv (class in dgl.nn.pytorch.conv)": [[405, "dgl.nn.pytorch.conv.DenseGraphConv", false]], "densesageconv (class in dgl.nn.mxnet.conv)": [[370, "dgl.nn.mxnet.conv.DenseSAGEConv", false]], "densesageconv (class in dgl.nn.pytorch.conv)": [[406, "dgl.nn.pytorch.conv.DenseSAGEConv", false]], "device (dgl.dglgraph property)": [[42, "dgl.DGLGraph.device", false]], "device (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.device", false]], "device (dgl.sparse.sparsematrix property)": [[590, "dgl.sparse.SparseMatrix.device", false]], "dfs_edges_generator() (in module dgl)": [[229, "dgl.dfs_edges_generator", false]], "dfs_labeled_edges_generator() (in module dgl)": [[230, "dgl.dfs_labeled_edges_generator", false]], "dgl": [[0, "module-dgl", false]], "dgl.data": [[2, "module-dgl.data", false]], "dgl.geometry": [[6, "module-dgl.geometry", false]], "dgl.nn.functional": [[18, "module-dgl.nn.functional", false]], "dgl.optim": [[10, "module-dgl.optim", false]], "dgl.sampling": [[11, "module-dgl.sampling", false]], "dgl.transforms": [[19, "module-dgl.transforms", false]], "dgl_partition_to_graphbolt() (in module dgl.distributed)": [[231, "dgl.distributed.dgl_partition_to_graphbolt", false]], "dgldataset (class in dgl.data)": [[156, "dgl.data.DGLDataset", false]], "dglgraph (class in dgl)": [[1, "dgl.DGLGraph", false]], "dgnconv (class in dgl.nn.pytorch.conv)": [[403, "dgl.nn.pytorch.conv.DGNConv", false]], "diag() (in module dgl.sparse)": [[616, "dgl.sparse.diag", false]], "diskbasedfeature (class in dgl.graphbolt)": [[294, "dgl.graphbolt.DiskBasedFeature", false]], "distdataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistDataLoader", false]], "distedgedataloader (class in dgl.dataloading)": [[211, "dgl.dataloading.DistEdgeDataLoader", false]], "distembedding (class in dgl.distributed)": [[4, "dgl.distributed.DistEmbedding", false]], "distgraph (class in dgl.distributed)": [[4, "dgl.distributed.DistGraph", false]], "distnodedataloader (class in dgl.dataloading)": [[212, "dgl.dataloading.DistNodeDataLoader", false]], "distributeditemsampler (class in dgl.graphbolt)": [[295, "dgl.graphbolt.DistributedItemSampler", false]], "disttensor (class in dgl.distributed)": [[4, "dgl.distributed.DistTensor", false]], "div() (in module dgl.sparse)": [[617, "dgl.sparse.div", false]], "dotgatconv (class in dgl.nn.pytorch.conv)": [[407, "dgl.nn.pytorch.conv.DotGatConv", false]], "double() (dgl.sparse.sparsematrix method)": [[591, "dgl.sparse.SparseMatrix.double", false]], "double_radius_node_labeling() (in module dgl)": [[243, "dgl.double_radius_node_labeling", false]], "download (class in dgl.data.utils)": [[200, "dgl.data.utils.download", false]], "dropedge (class in dgl.transforms)": [[660, "dgl.transforms.DropEdge", false]], "dropnode (class in dgl.transforms)": [[661, "dgl.transforms.DropNode", false]], "dst (dgl.udf.edgebatch property)": [[680, "dgl.udf.EdgeBatch.dst", false]], "dstdata (dgl.dglgraph property)": [[43, "dgl.DGLGraph.dstdata", false]], "dstnodes (dgl.dglgraph property)": [[44, "dgl.DGLGraph.dstnodes", false]], "dsttypes (dgl.dglgraph property)": [[45, "dgl.DGLGraph.dsttypes", false]], "dtype (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.dtype", false]], "dtype (dgl.sparse.sparsematrix property)": [[592, "dgl.sparse.SparseMatrix.dtype", false]], "e_add_u() (in module dgl.function)": [[253, "dgl.function.e_add_u", false]], "e_add_u() (in module dgl.ops)": [[495, "dgl.ops.e_add_u", false]], "e_add_v() (in module dgl.function)": [[254, "dgl.function.e_add_v", false]], "e_add_v() (in module dgl.ops)": [[496, "dgl.ops.e_add_v", false]], "e_div_u() (in module dgl.function)": [[255, "dgl.function.e_div_u", false]], "e_div_u() (in module dgl.ops)": [[497, "dgl.ops.e_div_u", false]], "e_div_v() (in module dgl.function)": [[256, "dgl.function.e_div_v", false]], "e_div_v() (in module dgl.ops)": [[498, "dgl.ops.e_div_v", false]], "e_dot_u() (in module dgl.function)": [[257, "dgl.function.e_dot_u", false]], "e_dot_u() (in module dgl.ops)": [[499, "dgl.ops.e_dot_u", false]], "e_dot_v() (in module dgl.function)": [[258, "dgl.function.e_dot_v", false]], "e_dot_v() (in module dgl.ops)": [[500, "dgl.ops.e_dot_v", false]], "e_mul_u() (in module dgl.function)": [[259, "dgl.function.e_mul_u", false]], "e_mul_u() (in module dgl.ops)": [[501, "dgl.ops.e_mul_u", false]], "e_mul_v() (in module dgl.function)": [[260, "dgl.function.e_mul_v", false]], "e_mul_v() (in module dgl.ops)": [[502, "dgl.ops.e_mul_v", false]], "e_sub_u() (in module dgl.function)": [[261, "dgl.function.e_sub_u", false]], "e_sub_u() (in module dgl.ops)": [[503, "dgl.ops.e_sub_u", false]], "e_sub_v() (in module dgl.function)": [[262, "dgl.function.e_sub_v", false]], "e_sub_v() (in module dgl.ops)": [[504, "dgl.ops.e_sub_v", false]], "edata (dgl.dglgraph property)": [[46, "dgl.DGLGraph.edata", false]], "edata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edata", false]], "edge_attr_schemes() (dgl.dglgraph method)": [[47, "dgl.DGLGraph.edge_attr_schemes", false]], "edge_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.edge_attr_schemes", false]], "edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attribute", false]], "edge_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attributes", false]], "edge_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.edge_feat_size", false]], "edge_features (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.edge_features", false]], "edge_homophily() (in module dgl)": [[244, "dgl.edge_homophily", false]], "edge_ids() (dgl.dglgraph method)": [[48, "dgl.DGLGraph.edge_ids", false]], "edge_ids() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.edge_ids", false]], "edge_label_informativeness() (in module dgl)": [[245, "dgl.edge_label_informativeness", false]], "edge_softmax() (in module dgl.nn.functional)": [[363, "dgl.nn.functional.edge_softmax", false]], "edge_split() (in module dgl.distributed)": [[232, "dgl.distributed.edge_split", false]], "edge_subgraph() (dgl.dglgraph method)": [[49, "dgl.DGLGraph.edge_subgraph", false]], "edge_subgraph() (in module dgl)": [[246, "dgl.edge_subgraph", false]], "edge_type_subgraph() (dgl.dglgraph method)": [[50, "dgl.DGLGraph.edge_type_subgraph", false]], "edge_type_subgraph() (in module dgl)": [[247, "dgl.edge_type_subgraph", false]], "edge_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.edge_type_to_id", false]], "edgeconv (class in dgl.nn.mxnet.conv)": [[371, "dgl.nn.mxnet.conv.EdgeConv", false]], "edgeconv (class in dgl.nn.pytorch.conv)": [[410, "dgl.nn.pytorch.conv.EdgeConv", false]], "edgegatconv (class in dgl.nn.pytorch.conv)": [[411, "dgl.nn.pytorch.conv.EdgeGATConv", false]], "edgepredictor (class in dgl.nn.pytorch.link)": [[458, "dgl.nn.pytorch.link.EdgePredictor", false]], "edges (dgl.dglgraph property)": [[51, "dgl.DGLGraph.edges", false]], "edges (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edges", false]], "edges() (dgl.udf.edgebatch method)": [[681, "dgl.udf.EdgeBatch.edges", false]], "edgeweightnorm (class in dgl.nn.pytorch.conv)": [[412, "dgl.nn.pytorch.conv.EdgeWeightNorm", false]], "egatconv (class in dgl.nn.pytorch.conv)": [[408, "dgl.nn.pytorch.conv.EGATConv", false]], "egnnconv (class in dgl.nn.pytorch.conv)": [[409, "dgl.nn.pytorch.conv.EGNNConv", false]], "egtlayer (class in dgl.nn.pytorch.gt)": [[452, "dgl.nn.pytorch.gt.EGTLayer", false]], "eid2localeid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2localeid", false]], "eid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2partid", false]], "end_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.end_time", false]], "etype_str_to_tuple() (in module dgl.graphbolt)": [[325, "dgl.graphbolt.etype_str_to_tuple", false]], "etype_tuple_to_str() (in module dgl.graphbolt)": [[326, "dgl.graphbolt.etype_tuple_to_str", false]], "etypes (dgl.dglgraph property)": [[52, "dgl.DGLGraph.etypes", false]], "etypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.etypes", false]], "exclude_edges() (dgl.graphbolt.sampledsubgraph method)": [[312, "dgl.graphbolt.SampledSubgraph.exclude_edges", false]], "exclude_seed_edges() (in module dgl.graphbolt)": [[327, "dgl.graphbolt.exclude_seed_edges", false]], "expand_indptr() (in module dgl.graphbolt)": [[328, "dgl.graphbolt.expand_indptr", false]], "explain_graph() (dgl.nn.pytorch.explain.gnnexplainer method)": [[432, "dgl.nn.pytorch.explain.GNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[433, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[434, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[435, "dgl.nn.pytorch.explain.HeteroSubgraphX.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.pgexplainer method)": [[436, "dgl.nn.pytorch.explain.PGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.subgraphx method)": [[437, "dgl.nn.pytorch.explain.SubgraphX.explain_graph", false]], "explain_node() (dgl.nn.pytorch.explain.gnnexplainer method)": [[432, "dgl.nn.pytorch.explain.GNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[433, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[434, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[436, "dgl.nn.pytorch.explain.PGExplainer.explain_node", false]], "extract_archive (class in dgl.data.utils)": [[201, "dgl.data.utils.extract_archive", false]], "fakenewsdataset (class in dgl.data)": [[159, "dgl.data.FakeNewsDataset", false]], "farthest_point_sampler (class in dgl.geometry)": [[6, "dgl.geometry.farthest_point_sampler", false]], "fb15k237dataset (class in dgl.data)": [[157, "dgl.data.FB15k237Dataset", false]], "fb15kdataset (class in dgl.data)": [[158, "dgl.data.FB15kDataset", false]], "feat_size (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.feat_size", false]], "featmask (class in dgl.transforms)": [[662, "dgl.transforms.FeatMask", false]], "feature (class in dgl.graphbolt)": [[296, "dgl.graphbolt.Feature", false]], "feature (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature", false]], "feature (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.feature", false]], "feature (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.feature", false]], "feature (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.feature", false]], "feature_name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature_name", false]], "featurefetcher (class in dgl.graphbolt)": [[297, "dgl.graphbolt.FeatureFetcher", false]], "features (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.features", false]], "featurestore (class in dgl.graphbolt)": [[298, "dgl.graphbolt.FeatureStore", false]], "filter_edges() (dgl.dglgraph method)": [[53, "dgl.DGLGraph.filter_edges", false]], "filter_nodes() (dgl.dglgraph method)": [[54, "dgl.DGLGraph.filter_nodes", false]], "find_edges() (dgl.dglgraph method)": [[55, "dgl.DGLGraph.find_edges", false]], "find_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.find_edges", false]], "find_edges() (in module dgl.distributed)": [[233, "dgl.distributed.find_edges", false]], "flickrdataset (class in dgl.data)": [[160, "dgl.data.FlickrDataset", false]], "float() (dgl.sparse.sparsematrix method)": [[593, "dgl.sparse.SparseMatrix.float", false]], "formats() (dgl.dglgraph method)": [[56, "dgl.DGLGraph.formats", false]], "forward() (dgl.nn.pytorch.conv.agnnconv method)": [[395, "dgl.nn.pytorch.conv.AGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.appnpconv method)": [[396, "dgl.nn.pytorch.conv.APPNPConv.forward", false]], "forward() (dgl.nn.pytorch.conv.atomicconv method)": [[397, "dgl.nn.pytorch.conv.AtomicConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cfconv method)": [[398, "dgl.nn.pytorch.conv.CFConv.forward", false]], "forward() (dgl.nn.pytorch.conv.chebconv method)": [[399, "dgl.nn.pytorch.conv.ChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[400, "dgl.nn.pytorch.conv.CuGraphGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[401, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[402, "dgl.nn.pytorch.conv.CuGraphSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densechebconv method)": [[404, "dgl.nn.pytorch.conv.DenseChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densegraphconv method)": [[405, "dgl.nn.pytorch.conv.DenseGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densesageconv method)": [[406, "dgl.nn.pytorch.conv.DenseSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dgnconv method)": [[403, "dgl.nn.pytorch.conv.DGNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dotgatconv method)": [[407, "dgl.nn.pytorch.conv.DotGatConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeconv method)": [[410, "dgl.nn.pytorch.conv.EdgeConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgegatconv method)": [[411, "dgl.nn.pytorch.conv.EdgeGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeweightnorm method)": [[412, "dgl.nn.pytorch.conv.EdgeWeightNorm.forward", false]], "forward() (dgl.nn.pytorch.conv.egatconv method)": [[408, "dgl.nn.pytorch.conv.EGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.egnnconv method)": [[409, "dgl.nn.pytorch.conv.EGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatconv method)": [[413, "dgl.nn.pytorch.conv.GATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgcnconv method)": [[419, "dgl.nn.pytorch.conv.GatedGCNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[420, "dgl.nn.pytorch.conv.GatedGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatv2conv method)": [[414, "dgl.nn.pytorch.conv.GATv2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.gcn2conv method)": [[415, "dgl.nn.pytorch.conv.GCN2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.ginconv method)": [[416, "dgl.nn.pytorch.conv.GINConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gineconv method)": [[417, "dgl.nn.pytorch.conv.GINEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gmmconv method)": [[418, "dgl.nn.pytorch.conv.GMMConv.forward", false]], "forward() (dgl.nn.pytorch.conv.graphconv method)": [[421, "dgl.nn.pytorch.conv.GraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.grouprevres method)": [[422, "dgl.nn.pytorch.conv.GroupRevRes.forward", false]], "forward() (dgl.nn.pytorch.conv.hgtconv method)": [[423, "dgl.nn.pytorch.conv.HGTConv.forward", false]], "forward() (dgl.nn.pytorch.conv.nnconv method)": [[424, "dgl.nn.pytorch.conv.NNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.pnaconv method)": [[425, "dgl.nn.pytorch.conv.PNAConv.forward", false]], "forward() (dgl.nn.pytorch.conv.relgraphconv method)": [[426, "dgl.nn.pytorch.conv.RelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sageconv method)": [[427, "dgl.nn.pytorch.conv.SAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sgconv method)": [[428, "dgl.nn.pytorch.conv.SGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.tagconv method)": [[429, "dgl.nn.pytorch.conv.TAGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsconv method)": [[430, "dgl.nn.pytorch.conv.TWIRLSConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsunfoldingandattention method)": [[431, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.forward", false]], "forward() (dgl.nn.pytorch.deepwalk method)": [[389, "dgl.nn.pytorch.DeepWalk.forward", false]], "forward() (dgl.nn.pytorch.explain.gnnexplainer method)": [[432, "dgl.nn.pytorch.explain.GNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[433, "dgl.nn.pytorch.explain.HeteroGNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[434, "dgl.nn.pytorch.explain.HeteroPGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[435, "dgl.nn.pytorch.explain.HeteroSubgraphX.forward", false]], "forward() (dgl.nn.pytorch.explain.pgexplainer method)": [[436, "dgl.nn.pytorch.explain.PGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.subgraphx method)": [[437, "dgl.nn.pytorch.explain.SubgraphX.forward", false]], "forward() (dgl.nn.pytorch.factory.knngraph method)": [[438, "dgl.nn.pytorch.factory.KNNGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.radiusgraph method)": [[439, "dgl.nn.pytorch.factory.RadiusGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.segmentedknngraph method)": [[440, "dgl.nn.pytorch.factory.SegmentedKNNGraph.forward", false]], "forward() (dgl.nn.pytorch.glob.avgpooling method)": [[441, "dgl.nn.pytorch.glob.AvgPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.globalattentionpooling method)": [[442, "dgl.nn.pytorch.glob.GlobalAttentionPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.maxpooling method)": [[443, "dgl.nn.pytorch.glob.MaxPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.set2set method)": [[444, "dgl.nn.pytorch.glob.Set2Set.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerdecoder method)": [[445, "dgl.nn.pytorch.glob.SetTransformerDecoder.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerencoder method)": [[446, "dgl.nn.pytorch.glob.SetTransformerEncoder.forward", false]], "forward() (dgl.nn.pytorch.glob.sortpooling method)": [[447, "dgl.nn.pytorch.glob.SortPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.sumpooling method)": [[448, "dgl.nn.pytorch.glob.SumPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.weightandsum method)": [[449, "dgl.nn.pytorch.glob.WeightAndSum.forward", false]], "forward() (dgl.nn.pytorch.gt.biasedmha method)": [[450, "dgl.nn.pytorch.gt.BiasedMHA.forward", false]], "forward() (dgl.nn.pytorch.gt.degreeencoder method)": [[451, "dgl.nn.pytorch.gt.DegreeEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.egtlayer method)": [[452, "dgl.nn.pytorch.gt.EGTLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.graphormerlayer method)": [[453, "dgl.nn.pytorch.gt.GraphormerLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.lapposencoder method)": [[454, "dgl.nn.pytorch.gt.LapPosEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.pathencoder method)": [[455, "dgl.nn.pytorch.gt.PathEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder method)": [[456, "dgl.nn.pytorch.gt.SpatialEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder3d method)": [[457, "dgl.nn.pytorch.gt.SpatialEncoder3d.forward", false]], "forward() (dgl.nn.pytorch.heteroembedding method)": [[390, "dgl.nn.pytorch.HeteroEmbedding.forward", false]], "forward() (dgl.nn.pytorch.heterographconv method)": [[391, "dgl.nn.pytorch.HeteroGraphConv.forward", false]], "forward() (dgl.nn.pytorch.heterolinear method)": [[392, "dgl.nn.pytorch.HeteroLinear.forward", false]], "forward() (dgl.nn.pytorch.link.edgepredictor method)": [[458, "dgl.nn.pytorch.link.EdgePredictor.forward", false]], "forward() (dgl.nn.pytorch.link.transe method)": [[459, "dgl.nn.pytorch.link.TransE.forward", false]], "forward() (dgl.nn.pytorch.link.transr method)": [[460, "dgl.nn.pytorch.link.TransR.forward", false]], "forward() (dgl.nn.pytorch.metapath2vec method)": [[393, "dgl.nn.pytorch.MetaPath2Vec.forward", false]], "forward() (dgl.nn.pytorch.typedlinear method)": [[394, "dgl.nn.pytorch.TypedLinear.forward", false]], "forward() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[462, "dgl.nn.pytorch.utils.JumpingKnowledge.forward", false]], "forward() (dgl.nn.pytorch.utils.labelpropagation method)": [[463, "dgl.nn.pytorch.utils.LabelPropagation.forward", false]], "forward() (dgl.nn.pytorch.utils.sequential method)": [[464, "dgl.nn.pytorch.utils.Sequential.forward", false]], "forward() (dgl.nn.pytorch.utils.weightbasis method)": [[465, "dgl.nn.pytorch.utils.WeightBasis.forward", false]], "fraudamazondataset (class in dgl.data)": [[161, "dgl.data.FraudAmazonDataset", false]], "frauddataset (class in dgl.data)": [[162, "dgl.data.FraudDataset", false]], "fraudyelpdataset (class in dgl.data)": [[163, "dgl.data.FraudYelpDataset", false]], "from_coo() (in module dgl.sparse)": [[618, "dgl.sparse.from_coo", false]], "from_csc() (in module dgl.sparse)": [[619, "dgl.sparse.from_csc", false]], "from_csr() (in module dgl.sparse)": [[620, "dgl.sparse.from_csr", false]], "from_cugraph() (in module dgl)": [[248, "dgl.from_cugraph", false]], "from_dglgraph() (in module dgl.graphbolt)": [[329, "dgl.graphbolt.from_dglgraph", false]], "from_networkx() (in module dgl)": [[249, "dgl.from_networkx", false]], "from_scipy() (in module dgl)": [[250, "dgl.from_scipy", false]], "fused_csc_sampling_graph() (in module dgl.graphbolt)": [[330, "dgl.graphbolt.fused_csc_sampling_graph", false]], "fusedcscsamplinggraph (class in dgl.graphbolt)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph", false]], "gatconv (class in dgl.nn.mxnet.conv)": [[372, "dgl.nn.mxnet.conv.GATConv", false]], "gatconv (class in dgl.nn.pytorch.conv)": [[413, "dgl.nn.pytorch.conv.GATConv", false]], "gatconv (class in dgl.nn.tensorflow.conv)": [[468, "dgl.nn.tensorflow.conv.GATConv", false]], "gatedgcnconv (class in dgl.nn.pytorch.conv)": [[419, "dgl.nn.pytorch.conv.GatedGCNConv", false]], "gatedgraphconv (class in dgl.nn.mxnet.conv)": [[375, "dgl.nn.mxnet.conv.GatedGraphConv", false]], "gatedgraphconv (class in dgl.nn.pytorch.conv)": [[420, "dgl.nn.pytorch.conv.GatedGraphConv", false]], "gather_mm() (in module dgl.ops)": [[505, "dgl.ops.gather_mm", false]], "gatv2conv (class in dgl.nn.pytorch.conv)": [[414, "dgl.nn.pytorch.conv.GATv2Conv", false]], "gcn2conv (class in dgl.nn.pytorch.conv)": [[415, "dgl.nn.pytorch.conv.GCN2Conv", false]], "gcnnorm (class in dgl.transforms)": [[663, "dgl.transforms.GCNNorm", false]], "gdc (class in dgl.transforms)": [[664, "dgl.transforms.GDC", false]], "gdeltdataset (class in dgl.data)": [[164, "dgl.data.GDELTDataset", false]], "get_download_dir (class in dgl.data.utils)": [[202, "dgl.data.utils.get_download_dir", false]], "get_edge_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_edge_partition_policy", false]], "get_etype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_etype_id", false]], "get_node_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_node_partition_policy", false]], "get_ntype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_ntype_id", false]], "get_part_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_part_size", false]], "get_partition_book() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_partition_book", false]], "get_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_size", false]], "ginconv (class in dgl.nn.mxnet.conv)": [[373, "dgl.nn.mxnet.conv.GINConv", false]], "ginconv (class in dgl.nn.pytorch.conv)": [[416, "dgl.nn.pytorch.conv.GINConv", false]], "ginconv (class in dgl.nn.tensorflow.conv)": [[469, "dgl.nn.tensorflow.conv.GINConv", false]], "gindataset (class in dgl.data)": [[165, "dgl.data.GINDataset", false]], "gineconv (class in dgl.nn.pytorch.conv)": [[417, "dgl.nn.pytorch.conv.GINEConv", false]], "global_uniform_negative_sampling() (in module dgl.sampling)": [[565, "dgl.sampling.global_uniform_negative_sampling", false]], "globalattentionpooling (class in dgl.nn.mxnet.glob)": [[383, "dgl.nn.mxnet.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.pytorch.glob)": [[442, "dgl.nn.pytorch.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.tensorflow.glob)": [[475, "dgl.nn.tensorflow.glob.GlobalAttentionPooling", false]], "globaluniform (class in dgl.dataloading.negative_sampler)": [[226, "dgl.dataloading.negative_sampler.GlobalUniform", false]], "gmmconv (class in dgl.nn.mxnet.conv)": [[374, "dgl.nn.mxnet.conv.GMMConv", false]], "gmmconv (class in dgl.nn.pytorch.conv)": [[418, "dgl.nn.pytorch.conv.GMMConv", false]], "gnnexplainer (class in dgl.nn.pytorch.explain)": [[432, "dgl.nn.pytorch.explain.GNNExplainer", false]], "gpu_cached_feature() (in module dgl.graphbolt)": [[331, "dgl.graphbolt.gpu_cached_feature", false]], "gpucachedfeature (class in dgl.graphbolt)": [[300, "dgl.graphbolt.GPUCachedFeature", false]], "graph (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.graph", false]], "graph (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.graph", false]], "graph (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.graph", false]], "graph (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.graph", false]], "graph (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.graph", false]], "graph() (in module dgl)": [[287, "dgl.graph", false]], "graphconv (class in dgl.nn.mxnet.conv)": [[376, "dgl.nn.mxnet.conv.GraphConv", false]], "graphconv (class in dgl.nn.pytorch.conv)": [[421, "dgl.nn.pytorch.conv.GraphConv", false]], "graphconv (class in dgl.nn.tensorflow.conv)": [[470, "dgl.nn.tensorflow.conv.GraphConv", false]], "graphdataloader (class in dgl.dataloading)": [[213, "dgl.dataloading.GraphDataLoader", false]], "graphormerlayer (class in dgl.nn.pytorch.gt)": [[453, "dgl.nn.pytorch.gt.GraphormerLayer", false]], "graphpartitionbook (class in dgl.distributed)": [[4, "dgl.distributed.GraphPartitionBook", false]], "graphs (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.graphs", false]], "graphs (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.graphs", false]], "graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.graphs", false]], "grouprevres (class in dgl.nn.pytorch.conv)": [[422, "dgl.nn.pytorch.conv.GroupRevRes", false]], "gsddmm() (in module dgl.ops)": [[506, "dgl.ops.gsddmm", false]], "gspmm() (in module dgl.ops)": [[507, "dgl.ops.gspmm", false]], "has_duplicate() (dgl.sparse.sparsematrix method)": [[594, "dgl.sparse.SparseMatrix.has_duplicate", false]], "has_edges_between() (dgl.dglgraph method)": [[57, "dgl.DGLGraph.has_edges_between", false]], "has_nodes() (dgl.dglgraph method)": [[58, "dgl.DGLGraph.has_nodes", false]], "hash (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.hash", false]], "heatkernel (class in dgl.transforms)": [[665, "dgl.transforms.HeatKernel", false]], "heteroembedding (class in dgl.nn.pytorch)": [[390, "dgl.nn.pytorch.HeteroEmbedding", false]], "heterognnexplainer (class in dgl.nn.pytorch.explain)": [[433, "dgl.nn.pytorch.explain.HeteroGNNExplainer", false]], "heterograph() (in module dgl)": [[340, "dgl.heterograph", false]], "heterographconv (class in dgl.nn.mxnet)": [[364, "dgl.nn.mxnet.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.pytorch)": [[391, "dgl.nn.pytorch.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.tensorflow.glob)": [[476, "dgl.nn.tensorflow.glob.HeteroGraphConv", false]], "heteroitemset (class in dgl.graphbolt)": [[301, "dgl.graphbolt.HeteroItemSet", false]], "heterolinear (class in dgl.nn.pytorch)": [[392, "dgl.nn.pytorch.HeteroLinear", false]], "heteropgexplainer (class in dgl.nn.pytorch.explain)": [[434, "dgl.nn.pytorch.explain.HeteroPGExplainer", false]], "heterosubgraphx (class in dgl.nn.pytorch.explain)": [[435, "dgl.nn.pytorch.explain.HeteroSubgraphX", false]], "hgtconv (class in dgl.nn.pytorch.conv)": [[423, "dgl.nn.pytorch.conv.HGTConv", false]], "icews18dataset (class in dgl.data)": [[166, "dgl.data.ICEWS18Dataset", false]], "identity() (in module dgl.sparse)": [[621, "dgl.sparse.identity", false]], "idtype (dgl.dglgraph property)": [[59, "dgl.DGLGraph.idtype", false]], "idtype (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.idtype", false]], "in_degrees() (dgl.dglgraph method)": [[60, "dgl.DGLGraph.in_degrees", false]], "in_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.in_degrees", false]], "in_edges() (dgl.dglgraph method)": [[61, "dgl.DGLGraph.in_edges", false]], "in_subgraph() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.in_subgraph", false]], "in_subgraph() (in module dgl)": [[341, "dgl.in_subgraph", false]], "in_subgraph() (in module dgl.distributed)": [[234, "dgl.distributed.in_subgraph", false]], "inc() (dgl.dglgraph method)": [[62, "dgl.DGLGraph.inc", false]], "incidence_matrix() (dgl.dglgraph method)": [[63, "dgl.DGLGraph.incidence_matrix", false]], "index_select() (in module dgl.graphbolt)": [[332, "dgl.graphbolt.index_select", false]], "indexes (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.indexes", false]], "indices (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.indices", false]], "indices() (dgl.sparse.sparsematrix method)": [[595, "dgl.sparse.SparseMatrix.indices", false]], "indptr_edge_ids() (in module dgl.graphbolt)": [[333, "dgl.graphbolt.indptr_edge_ids", false]], "initialize() (in module dgl.distributed)": [[235, "dgl.distributed.initialize", false]], "input_nodes (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.input_nodes", false]], "insubgraphsampler (class in dgl.graphbolt)": [[302, "dgl.graphbolt.InSubgraphSampler", false]], "int() (dgl.dglgraph method)": [[64, "dgl.DGLGraph.int", false]], "int() (dgl.sparse.sparsematrix method)": [[596, "dgl.sparse.SparseMatrix.int", false]], "is_homogeneous (dgl.dglgraph property)": [[65, "dgl.DGLGraph.is_homogeneous", false]], "is_libxsmm_enabled() (in module dgl)": [[342, "dgl.is_libxsmm_enabled", false]], "is_multigraph (dgl.dglgraph property)": [[66, "dgl.DGLGraph.is_multigraph", false]], "is_pinned() (dgl.dglgraph method)": [[67, "dgl.DGLGraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.is_pinned", false]], "is_pinned() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.is_pinned", false]], "is_pinned() (dgl.graphbolt.sampledsubgraph method)": [[312, "dgl.graphbolt.SampledSubgraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeaturestore method)": [[320, "dgl.graphbolt.TorchBasedFeatureStore.is_pinned", false]], "is_temporal (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.is_temporal", false]], "is_temporal (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.is_temporal", false]], "is_temporal (dgl.data.icews18dataset attribute)": [[166, "dgl.data.ICEWS18Dataset.is_temporal", false]], "is_unibipartite (dgl.dglgraph property)": [[68, "dgl.DGLGraph.is_unibipartite", false]], "isin() (in module dgl.graphbolt)": [[334, "dgl.graphbolt.isin", false]], "itemsampler (class in dgl.graphbolt)": [[303, "dgl.graphbolt.ItemSampler", false]], "itemset (class in dgl.graphbolt)": [[304, "dgl.graphbolt.ItemSet", false]], "jumpingknowledge (class in dgl.nn.pytorch.utils)": [[462, "dgl.nn.pytorch.utils.JumpingKnowledge", false]], "karateclubdataset (class in dgl.data)": [[167, "dgl.data.KarateClubDataset", false]], "keys() (dgl.graphbolt.basicfeaturestore method)": [[288, "dgl.graphbolt.BasicFeatureStore.keys", false]], "keys() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.keys", false]], "khop_adj() (in module dgl)": [[343, "dgl.khop_adj", false]], "khop_graph() (in module dgl)": [[344, "dgl.khop_graph", false]], "khop_in_subgraph() (in module dgl)": [[345, "dgl.khop_in_subgraph", false]], "khop_out_subgraph() (in module dgl)": [[346, "dgl.khop_out_subgraph", false]], "khopgraph (class in dgl.transforms)": [[666, "dgl.transforms.KHopGraph", false]], "knn_graph() (in module dgl)": [[347, "dgl.knn_graph", false]], "knngraph (class in dgl.nn.pytorch.factory)": [[438, "dgl.nn.pytorch.factory.KNNGraph", false]], "labelpropagation (class in dgl.nn.pytorch.utils)": [[463, "dgl.nn.pytorch.utils.LabelPropagation", false]], "labels (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.labels", false]], "labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.labels", false]], "labels (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.labels", false]], "laborsampler (class in dgl.dataloading)": [[214, "dgl.dataloading.LaborSampler", false]], "lap_pe() (in module dgl)": [[348, "dgl.lap_pe", false]], "laplacian_lambda_max() (in module dgl)": [[349, "dgl.laplacian_lambda_max", false]], "lappe (class in dgl.transforms)": [[667, "dgl.transforms.LapPE", false]], "lapposencoder (class in dgl.nn.pytorch.gt)": [[454, "dgl.nn.pytorch.gt.LapPosEncoder", false]], "layerneighborsampler (class in dgl.graphbolt)": [[305, "dgl.graphbolt.LayerNeighborSampler", false]], "lazyfeature (class in dgl.dataloading.base)": [[221, "dgl.dataloading.base.LazyFeature", false]], "legacydataset (class in dgl.graphbolt)": [[306, "dgl.graphbolt.LegacyDataset", false]], "legacytudataset (class in dgl.data)": [[168, "dgl.data.LegacyTUDataset", false]], "lin (dgl.nn.pytorch.conv.tagconv attribute)": [[429, "dgl.nn.pytorch.conv.TAGConv.lin", false]], "line_graph() (dgl.dglgraph method)": [[69, "dgl.DGLGraph.line_graph", false]], "line_graph() (in module dgl)": [[350, "dgl.line_graph", false]], "linegraph (class in dgl.transforms)": [[668, "dgl.transforms.LineGraph", false]], "linkx_homophily() (in module dgl)": [[351, "dgl.linkx_homophily", false]], "load() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.load", false]], "load() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.load", false]], "load() (dgl.graphbolt.ondiskdataset method)": [[311, "dgl.graphbolt.OnDiskDataset.load", false]], "load_from_shared_memory() (in module dgl.graphbolt)": [[335, "dgl.graphbolt.load_from_shared_memory", false]], "load_graphs() (in module dgl)": [[352, "dgl.load_graphs", false]], "load_info (class in dgl.data.utils)": [[203, "dgl.data.utils.load_info", false]], "load_labels (class in dgl.data.utils)": [[204, "dgl.data.utils.load_labels", false]], "load_partition() (in module dgl.distributed)": [[236, "dgl.distributed.load_partition", false]], "load_partition_book() (in module dgl.distributed)": [[237, "dgl.distributed.load_partition_book", false]], "load_partition_feats() (in module dgl.distributed)": [[238, "dgl.distributed.load_partition_feats", false]], "local_partition (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.local_partition", false]], "local_scope() (dgl.dglgraph method)": [[70, "dgl.DGLGraph.local_scope", false]], "local_to_global_nid (dgl.nn.pytorch.metapath2vec attribute)": [[393, "dgl.nn.pytorch.MetaPath2Vec.local_to_global_nid", false]], "long() (dgl.dglgraph method)": [[71, "dgl.DGLGraph.long", false]], "long() (dgl.sparse.sparsematrix method)": [[597, "dgl.sparse.SparseMatrix.long", false]], "mailbox (dgl.udf.nodebatch property)": [[685, "dgl.udf.NodeBatch.mailbox", false]], "map_to_homo_eid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_eid", false]], "map_to_homo_nid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_nid", false]], "map_to_per_etype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_etype", false]], "map_to_per_ntype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_ntype", false]], "mask_nodes_by_property (class in dgl.data.utils)": [[205, "dgl.data.utils.mask_nodes_by_property", false]], "matmul() (in module dgl.sparse)": [[622, "dgl.sparse.matmul", false]], "max() (in module dgl.function)": [[263, "dgl.function.max", false]], "max_edges() (in module dgl)": [[353, "dgl.max_edges", false]], "max_nodes() (in module dgl)": [[354, "dgl.max_nodes", false]], "max_num_node (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.max_num_node", false]], "max_num_node (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.max_num_node", false]], "max_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.max_num_v", false]], "maxpooling (class in dgl.nn.mxnet.glob)": [[384, "dgl.nn.mxnet.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.pytorch.glob)": [[443, "dgl.nn.pytorch.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.tensorflow.glob)": [[477, "dgl.nn.tensorflow.glob.MaxPooling", false]], "mean() (in module dgl.function)": [[264, "dgl.function.mean", false]], "mean_edges() (in module dgl)": [[355, "dgl.mean_edges", false]], "mean_nodes() (in module dgl)": [[356, "dgl.mean_nodes", false]], "merge() (in module dgl)": [[357, "dgl.merge", false]], "metadata (dgl.graphbolt.task property)": [[316, "dgl.graphbolt.Task.metadata", false]], "metadata() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.metadata", false]], "metadata() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.metadata", false]], "metadata() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.metadata", false]], "metadata() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.metadata", false]], "metadata() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.metadata", false]], "metagraph() (dgl.dglgraph method)": [[72, "dgl.DGLGraph.metagraph", false]], "metapath2vec (class in dgl.nn.pytorch)": [[393, "dgl.nn.pytorch.MetaPath2Vec", false]], "metapath_reachable_graph() (in module dgl)": [[358, "dgl.metapath_reachable_graph", false]], "metis_partition() (in module dgl)": [[359, "dgl.metis_partition", false]], "metis_partition_assignment() (in module dgl)": [[360, "dgl.metis_partition_assignment", false]], "min() (in module dgl.function)": [[265, "dgl.function.min", false]], "min_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.min_num_v", false]], "minesweeperdataset (class in dgl.data)": [[171, "dgl.data.MinesweeperDataset", false]], "minibatch (class in dgl.graphbolt)": [[307, "dgl.graphbolt.MiniBatch", false]], "minibatchtransformer (class in dgl.graphbolt)": [[308, "dgl.graphbolt.MiniBatchTransformer", false]], "minigcdataset (class in dgl.data)": [[172, "dgl.data.MiniGCDataset", false]], "miss_rate (dgl.graphbolt.cpucachedfeature property)": [[290, "dgl.graphbolt.CPUCachedFeature.miss_rate", false]], "miss_rate (dgl.graphbolt.gpucachedfeature property)": [[300, "dgl.graphbolt.GPUCachedFeature.miss_rate", false]], "mnistsuperpixeldataset (class in dgl.data)": [[169, "dgl.data.MNISTSuperPixelDataset", false]], "mods (dgl.nn.pytorch.heterographconv attribute)": [[391, "dgl.nn.pytorch.HeteroGraphConv.mods", false]], "module": [[0, "module-dgl", false], [2, "module-dgl.data", false], [6, "module-dgl.geometry", false], [10, "module-dgl.optim", false], [11, "module-dgl.sampling", false], [18, "module-dgl.nn.functional", false], [19, "module-dgl.transforms", false]], "movielensdataset (class in dgl.data)": [[173, "dgl.data.MovieLensDataset", false]], "mul() (in module dgl.sparse)": [[623, "dgl.sparse.mul", false]], "multi_update_all() (dgl.dglgraph method)": [[73, "dgl.DGLGraph.multi_update_all", false]], "multilayerfullneighborsampler (class in dgl.dataloading)": [[215, "dgl.dataloading.MultiLayerFullNeighborSampler", false]], "mutagdataset (class in dgl.data)": [[170, "dgl.data.MUTAGDataset", false]], "name (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.name", false]], "name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.name", false]], "name (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.name", false]], "names (dgl.graphbolt.heteroitemset property)": [[301, "dgl.graphbolt.HeteroItemSet.names", false]], "names (dgl.graphbolt.itemset property)": [[304, "dgl.graphbolt.ItemSet.names", false]], "ndata (dgl.dglgraph property)": [[74, "dgl.DGLGraph.ndata", false]], "ndata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ndata", false]], "neg() (dgl.sparse.sparsematrix method)": [[598, "dgl.sparse.SparseMatrix.neg", false]], "negativesampler (class in dgl.graphbolt)": [[309, "dgl.graphbolt.NegativeSampler", false]], "neighbor_matching (class in dgl.geometry)": [[6, "dgl.geometry.neighbor_matching", false]], "neighborsampler (class in dgl.dataloading)": [[216, "dgl.dataloading.NeighborSampler", false]], "neighborsampler (class in dgl.graphbolt)": [[310, "dgl.graphbolt.NeighborSampler", false]], "nid2localnid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2localnid", false]], "nid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2partid", false]], "nnconv (class in dgl.nn.mxnet.conv)": [[377, "dgl.nn.mxnet.conv.NNConv", false]], "nnconv (class in dgl.nn.pytorch.conv)": [[424, "dgl.nn.pytorch.conv.NNConv", false]], "nnz (dgl.sparse.sparsematrix property)": [[599, "dgl.sparse.SparseMatrix.nnz", false]], "node2vec_random_walk() (in module dgl.sampling)": [[566, "dgl.sampling.node2vec_random_walk", false]], "node_attr_schemes() (dgl.dglgraph method)": [[75, "dgl.DGLGraph.node_attr_schemes", false]], "node_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.node_attr_schemes", false]], "node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.node_attribute", false]], "node_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.node_attributes", false]], "node_embed (dgl.nn.pytorch.deepwalk attribute)": [[389, "dgl.nn.pytorch.DeepWalk.node_embed", false]], "node_embed (dgl.nn.pytorch.metapath2vec attribute)": [[393, "dgl.nn.pytorch.MetaPath2Vec.node_embed", false]], "node_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.node_feat_size", false]], "node_features (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.node_features", false]], "node_homophily() (in module dgl)": [[480, "dgl.node_homophily", false]], "node_ids() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.node_ids", false]], "node_label_informativeness() (in module dgl)": [[481, "dgl.node_label_informativeness", false]], "node_split() (in module dgl.distributed)": [[239, "dgl.distributed.node_split", false]], "node_subgraph() (in module dgl)": [[482, "dgl.node_subgraph", false]], "node_type_offset (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_offset", false]], "node_type_subgraph() (dgl.dglgraph method)": [[76, "dgl.DGLGraph.node_type_subgraph", false]], "node_type_subgraph() (in module dgl)": [[483, "dgl.node_type_subgraph", false]], "node_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_to_id", false]], "nodeembedding (class in dgl.nn.pytorch.sparse_emb)": [[461, "dgl.nn.pytorch.sparse_emb.NodeEmbedding", false]], "nodes (dgl.dglgraph property)": [[77, "dgl.DGLGraph.nodes", false]], "nodes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.nodes", false]], "nodes() (dgl.udf.nodebatch method)": [[686, "dgl.udf.NodeBatch.nodes", false]], "nodeshuffle (class in dgl.transforms)": [[669, "dgl.transforms.NodeShuffle", false]], "norm_by_dst() (in module dgl)": [[484, "dgl.norm_by_dst", false]], "ntypes (dgl.dglgraph property)": [[78, "dgl.DGLGraph.ntypes", false]], "ntypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ntypes", false]], "num_atom_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_atom_types", false]], "num_bond_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_bond_types", false]], "num_classes (dgl.data.actordataset attribute)": [[134, "dgl.data.ActorDataset.num_classes", false]], "num_classes (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuycomputerdataset attribute)": [[135, "dgl.data.AmazonCoBuyComputerDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuyphotodataset attribute)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.num_classes", false]], "num_classes (dgl.data.amazonratingsdataset attribute)": [[137, "dgl.data.AmazonRatingsDataset.num_classes", false]], "num_classes (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.num_classes", false]], "num_classes (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_classes", false]], "num_classes (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.num_classes", false]], "num_classes (dgl.data.ba2motifdataset attribute)": [[141, "dgl.data.BA2MotifDataset.num_classes", false]], "num_classes (dgl.data.bacommunitydataset attribute)": [[142, "dgl.data.BACommunityDataset.num_classes", false]], "num_classes (dgl.data.bashapedataset attribute)": [[143, "dgl.data.BAShapeDataset.num_classes", false]], "num_classes (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.num_classes", false]], "num_classes (dgl.data.chameleondataset attribute)": [[149, "dgl.data.ChameleonDataset.num_classes", false]], "num_classes (dgl.data.citeseergraphdataset attribute)": [[150, "dgl.data.CiteseerGraphDataset.num_classes", false]], "num_classes (dgl.data.clusterdataset attribute)": [[147, "dgl.data.CLUSTERDataset.num_classes", false]], "num_classes (dgl.data.coauthorcsdataset attribute)": [[151, "dgl.data.CoauthorCSDataset.num_classes", false]], "num_classes (dgl.data.coauthorphysicsdataset attribute)": [[152, "dgl.data.CoauthorPhysicsDataset.num_classes", false]], "num_classes (dgl.data.corafulldataset attribute)": [[153, "dgl.data.CoraFullDataset.num_classes", false]], "num_classes (dgl.data.coragraphdataset attribute)": [[154, "dgl.data.CoraGraphDataset.num_classes", false]], "num_classes (dgl.data.cornelldataset attribute)": [[155, "dgl.data.CornellDataset.num_classes", false]], "num_classes (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_classes", false]], "num_classes (dgl.data.flickrdataset attribute)": [[160, "dgl.data.FlickrDataset.num_classes", false]], "num_classes (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.num_classes", false]], "num_classes (dgl.data.gindataset attribute)": [[165, "dgl.data.GINDataset.num_classes", false]], "num_classes (dgl.data.karateclubdataset attribute)": [[167, "dgl.data.KarateClubDataset.num_classes", false]], "num_classes (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_classes", false]], "num_classes (dgl.data.minesweeperdataset attribute)": [[171, "dgl.data.MinesweeperDataset.num_classes", false]], "num_classes (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_classes", false]], "num_classes (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.num_classes", false]], "num_classes (dgl.data.patterndataset attribute)": [[174, "dgl.data.PATTERNDataset.num_classes", false]], "num_classes (dgl.data.pubmedgraphdataset attribute)": [[176, "dgl.data.PubmedGraphDataset.num_classes", false]], "num_classes (dgl.data.questionsdataset attribute)": [[180, "dgl.data.QuestionsDataset.num_classes", false]], "num_classes (dgl.data.redditdataset attribute)": [[181, "dgl.data.RedditDataset.num_classes", false]], "num_classes (dgl.data.romanempiredataset attribute)": [[182, "dgl.data.RomanEmpireDataset.num_classes", false]], "num_classes (dgl.data.squirreldataset attribute)": [[185, "dgl.data.SquirrelDataset.num_classes", false]], "num_classes (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.num_classes", false]], "num_classes (dgl.data.texasdataset attribute)": [[187, "dgl.data.TexasDataset.num_classes", false]], "num_classes (dgl.data.tolokersdataset attribute)": [[188, "dgl.data.TolokersDataset.num_classes", false]], "num_classes (dgl.data.treecycledataset attribute)": [[189, "dgl.data.TreeCycleDataset.num_classes", false]], "num_classes (dgl.data.treegriddataset attribute)": [[190, "dgl.data.TreeGridDataset.num_classes", false]], "num_classes (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_classes", false]], "num_classes (dgl.data.wikicsdataset attribute)": [[192, "dgl.data.WikiCSDataset.num_classes", false]], "num_classes (dgl.data.wisconsindataset attribute)": [[193, "dgl.data.WisconsinDataset.num_classes", false]], "num_classes (dgl.data.yelpdataset attribute)": [[194, "dgl.data.YelpDataset.num_classes", false]], "num_dst_nodes() (dgl.dglgraph method)": [[79, "dgl.DGLGraph.num_dst_nodes", false]], "num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.num_edges", false]], "num_edges (dgl.graphbolt.samplinggraph property)": [[314, "dgl.graphbolt.SamplingGraph.num_edges", false]], "num_edges() (dgl.dglgraph method)": [[80, "dgl.DGLGraph.num_edges", false]], "num_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_edges", false]], "num_graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_graphs", false]], "num_graphs (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_graphs", false]], "num_items (dgl.graphbolt.itemset property)": [[304, "dgl.graphbolt.ItemSet.num_items", false]], "num_labels (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_labels", false]], "num_labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.num_labels", false]], "num_labels (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_labels", false]], "num_labels (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_labels", false]], "num_labels (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_labels", false]], "num_labels (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_labels", false]], "num_layers() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.num_layers", false]], "num_nodes (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_nodes", false]], "num_nodes (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_nodes", false]], "num_nodes (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_nodes", false]], "num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.num_nodes", false]], "num_nodes (dgl.graphbolt.samplinggraph property)": [[314, "dgl.graphbolt.SamplingGraph.num_nodes", false]], "num_nodes() (dgl.dglgraph method)": [[81, "dgl.DGLGraph.num_nodes", false]], "num_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_nodes", false]], "num_partitions() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.num_partitions", false]], "num_rels (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_rels", false]], "num_rels (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_rels", false]], "num_rels (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_rels", false]], "num_src_nodes() (dgl.dglgraph method)": [[82, "dgl.DGLGraph.num_src_nodes", false]], "num_tasks (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_tasks", false]], "num_tasks (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_tasks", false]], "num_tasks (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_tasks", false]], "num_tasks (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_tasks", false]], "number_of_dst_nodes() (dgl.dglgraph method)": [[83, "dgl.DGLGraph.number_of_dst_nodes", false]], "number_of_edges() (dgl.dglgraph method)": [[84, "dgl.DGLGraph.number_of_edges", false]], "number_of_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_edges", false]], "number_of_nodes() (dgl.dglgraph method)": [[85, "dgl.DGLGraph.number_of_nodes", false]], "number_of_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_nodes", false]], "number_of_src_nodes() (dgl.dglgraph method)": [[86, "dgl.DGLGraph.number_of_src_nodes", false]], "numpy_save_aligned() (in module dgl.graphbolt)": [[336, "dgl.graphbolt.numpy_save_aligned", false]], "ondiskdataset (class in dgl.graphbolt)": [[311, "dgl.graphbolt.OnDiskDataset", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraph property)": [[312, "dgl.graphbolt.SampledSubgraph.original_column_node_ids", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[313, "dgl.graphbolt.SampledSubgraphImpl.original_column_node_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraph property)": [[312, "dgl.graphbolt.SampledSubgraph.original_edge_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[313, "dgl.graphbolt.SampledSubgraphImpl.original_edge_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraph property)": [[312, "dgl.graphbolt.SampledSubgraph.original_row_node_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[313, "dgl.graphbolt.SampledSubgraphImpl.original_row_node_ids", false]], "out_degrees() (dgl.dglgraph method)": [[87, "dgl.DGLGraph.out_degrees", false]], "out_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.out_degrees", false]], "out_edges() (dgl.dglgraph method)": [[88, "dgl.DGLGraph.out_edges", false]], "out_subgraph() (in module dgl)": [[546, "dgl.out_subgraph", false]], "pack_traces() (in module dgl.sampling)": [[567, "dgl.sampling.pack_traces", false]], "part_id (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.part_id", false]], "part_policy (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.part_policy", false]], "partid (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.partid", false]], "partid2eids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2eids", false]], "partid2nids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2nids", false]], "partition_book (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.partition_book", false]], "partition_graph() (in module dgl.distributed)": [[240, "dgl.distributed.partition_graph", false]], "partition_graph_with_halo() (in module dgl)": [[547, "dgl.partition_graph_with_halo", false]], "partitionpolicy (class in dgl.distributed)": [[4, "dgl.distributed.PartitionPolicy", false]], "pathencoder (class in dgl.nn.pytorch.gt)": [[455, "dgl.nn.pytorch.gt.PathEncoder", false]], "patterndataset (class in dgl.data)": [[174, "dgl.data.PATTERNDataset", false]], "persourceuniform (class in dgl.dataloading.negative_sampler)": [[227, "dgl.dataloading.negative_sampler.PerSourceUniform", false]], "pgexplainer (class in dgl.nn.pytorch.explain)": [[436, "dgl.nn.pytorch.explain.PGExplainer", false]], "pin_memory() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.pin_memory", false]], "pin_memory() (dgl.graphbolt.sampledsubgraph method)": [[312, "dgl.graphbolt.SampledSubgraph.pin_memory", false]], "pin_memory_() (dgl.dglgraph method)": [[89, "dgl.DGLGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeaturestore method)": [[320, "dgl.graphbolt.TorchBasedFeatureStore.pin_memory_", false]], "pinsagesampler (class in dgl.sampling)": [[564, "dgl.sampling.PinSAGESampler", false]], "pnaconv (class in dgl.nn.pytorch.conv)": [[425, "dgl.nn.pytorch.conv.PNAConv", false]], "policy_str (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.policy_str", false]], "power() (in module dgl.sparse)": [[624, "dgl.sparse.power", false]], "ppidataset (class in dgl.data)": [[175, "dgl.data.PPIDataset", false]], "ppr (class in dgl.transforms)": [[670, "dgl.transforms.PPR", false]], "predecessors() (dgl.dglgraph method)": [[90, "dgl.DGLGraph.predecessors", false]], "predict_category (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.predict_category", false]], "predict_category (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.predict_category", false]], "predict_category (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.predict_category", false]], "predict_category (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.predict_category", false]], "pretrained_emb (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.pretrained_emb", false]], "prop_edges() (dgl.dglgraph method)": [[91, "dgl.DGLGraph.prop_edges", false]], "prop_edges() (in module dgl)": [[548, "dgl.prop_edges", false]], "prop_edges_dfs() (in module dgl)": [[549, "dgl.prop_edges_dfs", false]], "prop_nodes() (dgl.dglgraph method)": [[92, "dgl.DGLGraph.prop_nodes", false]], "prop_nodes() (in module dgl)": [[550, "dgl.prop_nodes", false]], "prop_nodes_bfs() (in module dgl)": [[551, "dgl.prop_nodes_bfs", false]], "prop_nodes_topo() (in module dgl)": [[552, "dgl.prop_nodes_topo", false]], "pubmedgraphdataset (class in dgl.data)": [[176, "dgl.data.PubmedGraphDataset", false]], "pull() (dgl.dglgraph method)": [[93, "dgl.DGLGraph.pull", false]], "push() (dgl.dglgraph method)": [[94, "dgl.DGLGraph.push", false]], "qm7bdataset (class in dgl.data)": [[177, "dgl.data.QM7bDataset", false]], "qm9dataset (class in dgl.data)": [[178, "dgl.data.QM9Dataset", false]], "qm9edgedataset (class in dgl.data)": [[179, "dgl.data.QM9EdgeDataset", false]], "questionsdataset (class in dgl.data)": [[180, "dgl.data.QuestionsDataset", false]], "radius_graph() (in module dgl)": [[553, "dgl.radius_graph", false]], "radiusgraph (class in dgl.nn.pytorch.factory)": [[439, "dgl.nn.pytorch.factory.RadiusGraph", false]], "rand_bipartite() (in module dgl)": [[554, "dgl.rand_bipartite", false]], "rand_graph() (in module dgl)": [[555, "dgl.rand_graph", false]], "random_walk() (in module dgl.sampling)": [[568, "dgl.sampling.random_walk", false]], "random_walk_pe() (in module dgl)": [[556, "dgl.random_walk_pe", false]], "randomwalkpe (class in dgl.transforms)": [[671, "dgl.transforms.RandomWalkPE", false]], "rank() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.rank", false]], "raw_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_dir", false]], "raw_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_path", false]], "read() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.read", false]], "read() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.read", false]], "read() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.read", false]], "read() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.read", false]], "read() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.read", false]], "read() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.read", false]], "read_async() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.read_async", false]], "read_async() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.read_async", false]], "read_async() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.read_async", false]], "read_async() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.read_async", false]], "read_async() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.read_async", false]], "read_async_num_stages() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.read_async_num_stages", false]], "read_into_memory() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.read_into_memory", false]], "readout_edges() (in module dgl)": [[557, "dgl.readout_edges", false]], "readout_nodes() (in module dgl)": [[558, "dgl.readout_nodes", false]], "redditdataset (class in dgl.data)": [[181, "dgl.data.RedditDataset", false]], "reduce() (dgl.sparse.sparsematrix method)": [[600, "dgl.sparse.SparseMatrix.reduce", false]], "rel_emb (dgl.nn.pytorch.link.transe attribute)": [[459, "dgl.nn.pytorch.link.TransE.rel_emb", false]], "rel_emb (dgl.nn.pytorch.link.transr attribute)": [[460, "dgl.nn.pytorch.link.TransR.rel_emb", false]], "rel_project (dgl.nn.pytorch.link.transr attribute)": [[460, "dgl.nn.pytorch.link.TransR.rel_project", false]], "relgraphconv (class in dgl.nn.mxnet.conv)": [[378, "dgl.nn.mxnet.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.pytorch.conv)": [[426, "dgl.nn.pytorch.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.tensorflow.conv)": [[471, "dgl.nn.tensorflow.conv.RelGraphConv", false]], "remove_edges() (dgl.dglgraph method)": [[95, "dgl.DGLGraph.remove_edges", false]], "remove_edges() (in module dgl)": [[559, "dgl.remove_edges", false]], "remove_nodes() (dgl.dglgraph method)": [[96, "dgl.DGLGraph.remove_nodes", false]], "remove_nodes() (in module dgl)": [[560, "dgl.remove_nodes", false]], "remove_self_loop() (dgl.dglgraph method)": [[97, "dgl.DGLGraph.remove_self_loop", false]], "remove_self_loop() (in module dgl)": [[561, "dgl.remove_self_loop", false]], "removeselfloop (class in dgl.transforms)": [[672, "dgl.transforms.RemoveSelfLoop", false]], "reorder_graph() (dgl.dglgraph method)": [[98, "dgl.DGLGraph.reorder_graph", false]], "reorder_graph() (in module dgl)": [[562, "dgl.reorder_graph", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[400, "dgl.nn.pytorch.conv.CuGraphGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[401, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[402, "dgl.nn.pytorch.conv.CuGraphSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densechebconv method)": [[404, "dgl.nn.pytorch.conv.DenseChebConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densegraphconv method)": [[405, "dgl.nn.pytorch.conv.DenseGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densesageconv method)": [[406, "dgl.nn.pytorch.conv.DenseSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.edgegatconv method)": [[411, "dgl.nn.pytorch.conv.EdgeGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.egatconv method)": [[408, "dgl.nn.pytorch.conv.EGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatconv method)": [[413, "dgl.nn.pytorch.conv.GATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[420, "dgl.nn.pytorch.conv.GatedGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatv2conv method)": [[414, "dgl.nn.pytorch.conv.GATv2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gcn2conv method)": [[415, "dgl.nn.pytorch.conv.GCN2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gmmconv method)": [[418, "dgl.nn.pytorch.conv.GMMConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.graphconv method)": [[421, "dgl.nn.pytorch.conv.GraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.nnconv method)": [[424, "dgl.nn.pytorch.conv.NNConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sageconv method)": [[427, "dgl.nn.pytorch.conv.SAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sgconv method)": [[428, "dgl.nn.pytorch.conv.SGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.tagconv method)": [[429, "dgl.nn.pytorch.conv.TAGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.deepwalk method)": [[389, "dgl.nn.pytorch.DeepWalk.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.glob.set2set method)": [[444, "dgl.nn.pytorch.glob.Set2Set.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.gt.biasedmha method)": [[450, "dgl.nn.pytorch.gt.BiasedMHA.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.heteroembedding method)": [[390, "dgl.nn.pytorch.HeteroEmbedding.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.edgepredictor method)": [[458, "dgl.nn.pytorch.link.EdgePredictor.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transe method)": [[459, "dgl.nn.pytorch.link.TransE.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transr method)": [[460, "dgl.nn.pytorch.link.TransR.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.metapath2vec method)": [[393, "dgl.nn.pytorch.MetaPath2Vec.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.typedlinear method)": [[394, "dgl.nn.pytorch.TypedLinear.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[462, "dgl.nn.pytorch.utils.JumpingKnowledge.reset_parameters", false]], "reverse() (dgl.dglgraph method)": [[99, "dgl.DGLGraph.reverse", false]], "reverse() (in module dgl)": [[563, "dgl.reverse", false]], "romanempiredataset (class in dgl.data)": [[182, "dgl.data.RomanEmpireDataset", false]], "row (dgl.sparse.sparsematrix property)": [[601, "dgl.sparse.SparseMatrix.row", false]], "rowfeatnormalizer (class in dgl.transforms)": [[673, "dgl.transforms.RowFeatNormalizer", false]], "sageconv (class in dgl.nn.mxnet.conv)": [[379, "dgl.nn.mxnet.conv.SAGEConv", false]], "sageconv (class in dgl.nn.pytorch.conv)": [[427, "dgl.nn.pytorch.conv.SAGEConv", false]], "sageconv (class in dgl.nn.tensorflow.conv)": [[472, "dgl.nn.tensorflow.conv.SAGEConv", false]], "saintsampler (class in dgl.dataloading)": [[217, "dgl.dataloading.SAINTSampler", false]], "sample_etype_neighbors() (in module dgl.distributed)": [[241, "dgl.distributed.sample_etype_neighbors", false]], "sample_labors() (in module dgl.sampling)": [[569, "dgl.sampling.sample_labors", false]], "sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.sample_layer_neighbors", false]], "sample_negative_edges_uniform() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.sample_negative_edges_uniform", false]], "sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.sample_neighbors", false]], "sample_neighbors() (in module dgl.distributed)": [[242, "dgl.distributed.sample_neighbors", false]], "sample_neighbors() (in module dgl.sampling)": [[570, "dgl.sampling.sample_neighbors", false]], "sample_neighbors_biased() (in module dgl.sampling)": [[571, "dgl.sampling.sample_neighbors_biased", false]], "sample_subgraphs() (dgl.graphbolt.insubgraphsampler method)": [[302, "dgl.graphbolt.InSubgraphSampler.sample_subgraphs", false]], "sample_subgraphs() (dgl.graphbolt.subgraphsampler method)": [[315, "dgl.graphbolt.SubgraphSampler.sample_subgraphs", false]], "sampled_csc (dgl.graphbolt.sampledsubgraph property)": [[312, "dgl.graphbolt.SampledSubgraph.sampled_csc", false]], "sampled_csc (dgl.graphbolt.sampledsubgraphimpl attribute)": [[313, "dgl.graphbolt.SampledSubgraphImpl.sampled_csc", false]], "sampled_subgraphs (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.sampled_subgraphs", false]], "sampledsubgraph (class in dgl.graphbolt)": [[312, "dgl.graphbolt.SampledSubgraph", false]], "sampledsubgraphimpl (class in dgl.graphbolt)": [[313, "dgl.graphbolt.SampledSubgraphImpl", false]], "sampler (class in dgl.dataloading)": [[218, "dgl.dataloading.Sampler", false]], "sampling_stages() (dgl.graphbolt.subgraphsampler method)": [[315, "dgl.graphbolt.SubgraphSampler.sampling_stages", false]], "samplinggraph (class in dgl.graphbolt)": [[314, "dgl.graphbolt.SamplingGraph", false]], "save() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.save", false]], "save() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.save", false]], "save_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_dir", false]], "save_graphs() (in module dgl)": [[573, "dgl.save_graphs", false]], "save_info (class in dgl.data.utils)": [[206, "dgl.data.utils.save_info", false]], "save_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_path", false]], "sbmmixturedataset (class in dgl.data)": [[183, "dgl.data.SBMMixtureDataset", false]], "sddmm() (in module dgl.sparse)": [[625, "dgl.sparse.sddmm", false]], "seed (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.seed", false]], "seed() (in module dgl)": [[574, "dgl.seed", false]], "seed() (in module dgl.graphbolt)": [[337, "dgl.graphbolt.seed", false]], "seeds (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.seeds", false]], "segment_mm() (in module dgl.ops)": [[508, "dgl.ops.segment_mm", false]], "segment_reduce() (in module dgl.ops)": [[509, "dgl.ops.segment_reduce", false]], "segmented_knn_graph() (in module dgl)": [[575, "dgl.segmented_knn_graph", false]], "segmentedknngraph (class in dgl.nn.pytorch.factory)": [[440, "dgl.nn.pytorch.factory.SegmentedKNNGraph", false]], "select_topk() (in module dgl.sampling)": [[572, "dgl.sampling.select_topk", false]], "send_and_recv() (dgl.dglgraph method)": [[100, "dgl.DGLGraph.send_and_recv", false]], "sequential (class in dgl.nn.mxnet.utils)": [[388, "dgl.nn.mxnet.utils.Sequential", false]], "sequential (class in dgl.nn.pytorch.utils)": [[464, "dgl.nn.pytorch.utils.Sequential", false]], "set2set (class in dgl.nn.mxnet.glob)": [[385, "dgl.nn.mxnet.glob.Set2Set", false]], "set2set (class in dgl.nn.pytorch.glob)": [[444, "dgl.nn.pytorch.glob.Set2Set", false]], "set_batch_num_edges() (dgl.dglgraph method)": [[101, "dgl.DGLGraph.set_batch_num_edges", false]], "set_batch_num_nodes() (dgl.dglgraph method)": [[102, "dgl.DGLGraph.set_batch_num_nodes", false]], "set_dst_lazy_features (class in dgl.dataloading.base)": [[222, "dgl.dataloading.base.set_dst_lazy_features", false]], "set_edge_features() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.set_edge_features", false]], "set_edge_lazy_features (class in dgl.dataloading.base)": [[223, "dgl.dataloading.base.set_edge_lazy_features", false]], "set_node_features() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.set_node_features", false]], "set_node_lazy_features (class in dgl.dataloading.base)": [[224, "dgl.dataloading.base.set_node_lazy_features", false]], "set_src_lazy_features (class in dgl.dataloading.base)": [[225, "dgl.dataloading.base.set_src_lazy_features", false]], "settransformerdecoder (class in dgl.nn.pytorch.glob)": [[445, "dgl.nn.pytorch.glob.SetTransformerDecoder", false]], "settransformerencoder (class in dgl.nn.pytorch.glob)": [[446, "dgl.nn.pytorch.glob.SetTransformerEncoder", false]], "sgconv (class in dgl.nn.mxnet.conv)": [[380, "dgl.nn.mxnet.conv.SGConv", false]], "sgconv (class in dgl.nn.pytorch.conv)": [[428, "dgl.nn.pytorch.conv.SGConv", false]], "sgconv (class in dgl.nn.tensorflow.conv)": [[473, "dgl.nn.tensorflow.conv.SGConv", false]], "shadowkhopsampler (class in dgl.dataloading)": [[219, "dgl.dataloading.ShaDowKHopSampler", false]], "shape (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.shape", false]], "shape (dgl.sparse.sparsematrix property)": [[602, "dgl.sparse.SparseMatrix.shape", false]], "shared_memory() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.shared_memory", false]], "shared_tensor() (in module dgl.multiprocessing.pytorch)": [[362, "dgl.multiprocessing.pytorch.shared_tensor", false]], "shortest_dist() (in module dgl)": [[576, "dgl.shortest_dist", false]], "signdiffusion (class in dgl.transforms)": [[674, "dgl.transforms.SIGNDiffusion", false]], "size() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.size", false]], "size() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.size", false]], "size() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.size", false]], "size() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.size", false]], "size() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.size", false]], "size() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.size", false]], "slice_batch() (in module dgl)": [[577, "dgl.slice_batch", false]], "smax() (dgl.sparse.sparsematrix method)": [[603, "dgl.sparse.SparseMatrix.smax", false]], "smean() (dgl.sparse.sparsematrix method)": [[604, "dgl.sparse.SparseMatrix.smean", false]], "smin() (dgl.sparse.sparsematrix method)": [[605, "dgl.sparse.SparseMatrix.smin", false]], "softmax() (dgl.sparse.sparsematrix method)": [[606, "dgl.sparse.SparseMatrix.softmax", false]], "softmax() (in module dgl.sparse)": [[626, "dgl.sparse.softmax", false]], "softmax_edges() (in module dgl)": [[578, "dgl.softmax_edges", false]], "softmax_nodes() (in module dgl)": [[579, "dgl.softmax_nodes", false]], "sort_csc_by_tag() (in module dgl)": [[580, "dgl.sort_csc_by_tag", false]], "sort_csr_by_tag() (in module dgl)": [[581, "dgl.sort_csr_by_tag", false]], "sortpooling (class in dgl.nn.mxnet.glob)": [[386, "dgl.nn.mxnet.glob.SortPooling", false]], "sortpooling (class in dgl.nn.pytorch.glob)": [[447, "dgl.nn.pytorch.glob.SortPooling", false]], "sortpooling (class in dgl.nn.tensorflow.glob)": [[478, "dgl.nn.tensorflow.glob.SortPooling", false]], "sp_add_v() (in module dgl.sparse)": [[627, "dgl.sparse.sp_add_v", false]], "sp_broadcast_v() (in module dgl.sparse)": [[628, "dgl.sparse.sp_broadcast_v", false]], "sp_div_v() (in module dgl.sparse)": [[629, "dgl.sparse.sp_div_v", false]], "sp_mul_v() (in module dgl.sparse)": [[630, "dgl.sparse.sp_mul_v", false]], "sp_sub_v() (in module dgl.sparse)": [[631, "dgl.sparse.sp_sub_v", false]], "sparseadagrad (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdagrad", false]], "sparseadagrad (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdagrad", false]], "sparseadam (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdam", false]], "sparseadam (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdam", false]], "sparsematrix (class in dgl.sparse)": [[12, "dgl.sparse.SparseMatrix", false]], "spatialencoder (class in dgl.nn.pytorch.gt)": [[456, "dgl.nn.pytorch.gt.SpatialEncoder", false]], "spatialencoder3d (class in dgl.nn.pytorch.gt)": [[457, "dgl.nn.pytorch.gt.SpatialEncoder3d", false]], "split_dataset (class in dgl.data.utils)": [[207, "dgl.data.utils.split_dataset", false]], "spmatrix() (in module dgl.sparse)": [[632, "dgl.sparse.spmatrix", false]], "spmm() (in module dgl.sparse)": [[633, "dgl.sparse.spmm", false]], "spspmm() (in module dgl.sparse)": [[634, "dgl.sparse.spspmm", false]], "squirreldataset (class in dgl.data)": [[185, "dgl.data.SquirrelDataset", false]], "src (dgl.udf.edgebatch property)": [[682, "dgl.udf.EdgeBatch.src", false]], "srcdata (dgl.dglgraph property)": [[103, "dgl.DGLGraph.srcdata", false]], "srcnodes (dgl.dglgraph property)": [[104, "dgl.DGLGraph.srcnodes", false]], "srctypes (dgl.dglgraph property)": [[105, "dgl.DGLGraph.srctypes", false]], "sstdataset (class in dgl.data)": [[184, "dgl.data.SSTDataset", false]], "start_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.start_time", false]], "step() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.step", false]], "step() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.step", false]], "sub() (in module dgl.sparse)": [[635, "dgl.sparse.sub", false]], "subgraph() (dgl.dglgraph method)": [[106, "dgl.DGLGraph.subgraph", false]], "subgraphsampler (class in dgl.graphbolt)": [[315, "dgl.graphbolt.SubgraphSampler", false]], "subgraphx (class in dgl.nn.pytorch.explain)": [[437, "dgl.nn.pytorch.explain.SubgraphX", false]], "subset (class in dgl.data.utils)": [[196, "dgl.data.utils.Subset", false]], "successors() (dgl.dglgraph method)": [[107, "dgl.DGLGraph.successors", false]], "sum() (dgl.sparse.sparsematrix method)": [[607, "dgl.sparse.SparseMatrix.sum", false]], "sum() (in module dgl.function)": [[266, "dgl.function.sum", false]], "sum_edges() (in module dgl)": [[637, "dgl.sum_edges", false]], "sum_nodes() (in module dgl)": [[638, "dgl.sum_nodes", false]], "sumpooling (class in dgl.nn.mxnet.glob)": [[387, "dgl.nn.mxnet.glob.SumPooling", false]], "sumpooling (class in dgl.nn.pytorch.glob)": [[448, "dgl.nn.pytorch.glob.SumPooling", false]], "sumpooling (class in dgl.nn.tensorflow.glob)": [[479, "dgl.nn.tensorflow.glob.SumPooling", false]], "svd_pe() (in module dgl)": [[639, "dgl.svd_pe", false]], "svdpe (class in dgl.transforms)": [[675, "dgl.transforms.SVDPE", false]], "t (dgl.sparse.sparsematrix property)": [[582, "dgl.sparse.SparseMatrix.T", false]], "t() (dgl.sparse.sparsematrix method)": [[608, "dgl.sparse.SparseMatrix.t", false]], "tagconv (class in dgl.nn.mxnet.conv)": [[381, "dgl.nn.mxnet.conv.TAGConv", false]], "tagconv (class in dgl.nn.pytorch.conv)": [[429, "dgl.nn.pytorch.conv.TAGConv", false]], "task (class in dgl.graphbolt)": [[316, "dgl.graphbolt.Task", false]], "tasks (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.tasks", false]], "tasks (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.tasks", false]], "tasks (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.tasks", false]], "temporal_sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_layer_neighbors", false]], "temporal_sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_neighbors", false]], "temporallayerneighborsampler (class in dgl.graphbolt)": [[317, "dgl.graphbolt.TemporalLayerNeighborSampler", false]], "temporalneighborsampler (class in dgl.graphbolt)": [[318, "dgl.graphbolt.TemporalNeighborSampler", false]], "test_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.test_edges", false]], "test_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.test_idx", false]], "test_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.test_idx", false]], "test_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.test_mask", false]], "test_set (dgl.graphbolt.task property)": [[316, "dgl.graphbolt.Task.test_set", false]], "texasdataset (class in dgl.data)": [[187, "dgl.data.TexasDataset", false]], "to() (dgl.dglgraph method)": [[108, "dgl.DGLGraph.to", false]], "to() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.to", false]], "to() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.to", false]], "to() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.to", false]], "to() (dgl.graphbolt.sampledsubgraph method)": [[312, "dgl.graphbolt.SampledSubgraph.to", false]], "to() (dgl.graphbolt.samplinggraph method)": [[314, "dgl.graphbolt.SamplingGraph.to", false]], "to() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.to", false]], "to() (dgl.graphbolt.torchbasedfeaturestore method)": [[320, "dgl.graphbolt.TorchBasedFeatureStore.to", false]], "to() (dgl.sparse.sparsematrix method)": [[609, "dgl.sparse.SparseMatrix.to", false]], "to_bidirected() (in module dgl)": [[640, "dgl.to_bidirected", false]], "to_block() (in module dgl)": [[641, "dgl.to_block", false]], "to_canonical_etype() (dgl.dglgraph method)": [[109, "dgl.DGLGraph.to_canonical_etype", false]], "to_cugraph() (dgl.dglgraph method)": [[110, "dgl.DGLGraph.to_cugraph", false]], "to_cugraph() (in module dgl)": [[642, "dgl.to_cugraph", false]], "to_dense() (dgl.sparse.sparsematrix method)": [[610, "dgl.sparse.SparseMatrix.to_dense", false]], "to_double() (in module dgl)": [[643, "dgl.to_double", false]], "to_float() (in module dgl)": [[644, "dgl.to_float", false]], "to_half() (in module dgl)": [[645, "dgl.to_half", false]], "to_heterogeneous() (in module dgl)": [[646, "dgl.to_heterogeneous", false]], "to_homogeneous() (in module dgl)": [[647, "dgl.to_homogeneous", false]], "to_local() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_local", false]], "to_networkx() (in module dgl)": [[648, "dgl.to_networkx", false]], "to_partid() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_partid", false]], "to_pyg() (dgl.graphbolt.sampledsubgraph method)": [[312, "dgl.graphbolt.SampledSubgraph.to_pyg", false]], "to_pyg_data() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.to_pyg_data", false]], "to_simple() (dgl.dglgraph method)": [[111, "dgl.DGLGraph.to_simple", false]], "to_simple() (in module dgl)": [[649, "dgl.to_simple", false]], "to_simple_graph() (in module dgl)": [[650, "dgl.to_simple_graph", false]], "tolevi (class in dgl.transforms)": [[676, "dgl.transforms.ToLevi", false]], "tolokersdataset (class in dgl.data)": [[188, "dgl.data.TolokersDataset", false]], "topk_edges() (in module dgl)": [[651, "dgl.topk_edges", false]], "topk_nodes() (in module dgl)": [[652, "dgl.topk_nodes", false]], "topological_nodes_generator() (in module dgl)": [[653, "dgl.topological_nodes_generator", false]], "torchbasedfeature (class in dgl.graphbolt)": [[319, "dgl.graphbolt.TorchBasedFeature", false]], "torchbasedfeaturestore (class in dgl.graphbolt)": [[320, "dgl.graphbolt.TorchBasedFeatureStore", false]], "tosimple (class in dgl.transforms)": [[677, "dgl.transforms.ToSimple", false]], "total_num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_edges", false]], "total_num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_nodes", false]], "train_graph (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.train_graph", false]], "train_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.train_idx", false]], "train_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.train_idx", false]], "train_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.train_mask", false]], "train_set (dgl.graphbolt.task property)": [[316, "dgl.graphbolt.Task.train_set", false]], "train_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.train_size", false]], "train_step() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[434, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step", false]], "train_step() (dgl.nn.pytorch.explain.pgexplainer method)": [[436, "dgl.nn.pytorch.explain.PGExplainer.train_step", false]], "train_step_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[434, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step_node", false]], "train_step_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[436, "dgl.nn.pytorch.explain.PGExplainer.train_step_node", false]], "transe (class in dgl.nn.pytorch.link)": [[459, "dgl.nn.pytorch.link.TransE", false]], "transpose() (dgl.sparse.sparsematrix method)": [[611, "dgl.sparse.SparseMatrix.transpose", false]], "transr (class in dgl.nn.pytorch.link)": [[460, "dgl.nn.pytorch.link.TransR", false]], "treecycledataset (class in dgl.data)": [[189, "dgl.data.TreeCycleDataset", false]], "treegriddataset (class in dgl.data)": [[190, "dgl.data.TreeGridDataset", false]], "tudataset (class in dgl.data)": [[186, "dgl.data.TUDataset", false]], "twirlsconv (class in dgl.nn.pytorch.conv)": [[430, "dgl.nn.pytorch.conv.TWIRLSConv", false]], "twirlsunfoldingandattention (class in dgl.nn.pytorch.conv)": [[431, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", false]], "type_per_edge (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.type_per_edge", false]], "typedlinear (class in dgl.nn.pytorch)": [[394, "dgl.nn.pytorch.TypedLinear", false]], "u_add_e() (in module dgl.function)": [[267, "dgl.function.u_add_e", false]], "u_add_e() (in module dgl.ops)": [[510, "dgl.ops.u_add_e", false]], "u_add_e_max() (in module dgl.ops)": [[511, "dgl.ops.u_add_e_max", false]], "u_add_e_mean() (in module dgl.ops)": [[512, "dgl.ops.u_add_e_mean", false]], "u_add_e_min() (in module dgl.ops)": [[513, "dgl.ops.u_add_e_min", false]], "u_add_e_sum() (in module dgl.ops)": [[514, "dgl.ops.u_add_e_sum", false]], "u_add_v() (in module dgl.function)": [[268, "dgl.function.u_add_v", false]], "u_add_v() (in module dgl.ops)": [[515, "dgl.ops.u_add_v", false]], "u_div_e() (in module dgl.function)": [[269, "dgl.function.u_div_e", false]], "u_div_e() (in module dgl.ops)": [[516, "dgl.ops.u_div_e", false]], "u_div_e_max() (in module dgl.ops)": [[517, "dgl.ops.u_div_e_max", false]], "u_div_e_mean() (in module dgl.ops)": [[518, "dgl.ops.u_div_e_mean", false]], "u_div_e_min() (in module dgl.ops)": [[519, "dgl.ops.u_div_e_min", false]], "u_div_e_sum() (in module dgl.ops)": [[520, "dgl.ops.u_div_e_sum", false]], "u_div_v() (in module dgl.function)": [[270, "dgl.function.u_div_v", false]], "u_div_v() (in module dgl.ops)": [[521, "dgl.ops.u_div_v", false]], "u_dot_e() (in module dgl.function)": [[271, "dgl.function.u_dot_e", false]], "u_dot_e() (in module dgl.ops)": [[522, "dgl.ops.u_dot_e", false]], "u_dot_v() (in module dgl.function)": [[272, "dgl.function.u_dot_v", false]], "u_dot_v() (in module dgl.ops)": [[523, "dgl.ops.u_dot_v", false]], "u_mul_e() (in module dgl.function)": [[273, "dgl.function.u_mul_e", false]], "u_mul_e() (in module dgl.ops)": [[524, "dgl.ops.u_mul_e", false]], "u_mul_e_max() (in module dgl.ops)": [[525, "dgl.ops.u_mul_e_max", false]], "u_mul_e_mean() (in module dgl.ops)": [[526, "dgl.ops.u_mul_e_mean", false]], "u_mul_e_min() (in module dgl.ops)": [[527, "dgl.ops.u_mul_e_min", false]], "u_mul_e_sum() (in module dgl.ops)": [[528, "dgl.ops.u_mul_e_sum", false]], "u_mul_v() (in module dgl.function)": [[274, "dgl.function.u_mul_v", false]], "u_mul_v() (in module dgl.ops)": [[529, "dgl.ops.u_mul_v", false]], "u_sub_e() (in module dgl.function)": [[275, "dgl.function.u_sub_e", false]], "u_sub_e() (in module dgl.ops)": [[530, "dgl.ops.u_sub_e", false]], "u_sub_e_max() (in module dgl.ops)": [[531, "dgl.ops.u_sub_e_max", false]], "u_sub_e_mean() (in module dgl.ops)": [[532, "dgl.ops.u_sub_e_mean", false]], "u_sub_e_min() (in module dgl.ops)": [[533, "dgl.ops.u_sub_e_min", false]], "u_sub_e_sum() (in module dgl.ops)": [[534, "dgl.ops.u_sub_e_sum", false]], "u_sub_v() (in module dgl.function)": [[276, "dgl.function.u_sub_v", false]], "u_sub_v() (in module dgl.ops)": [[535, "dgl.ops.u_sub_v", false]], "unbatch() (in module dgl)": [[687, "dgl.unbatch", false]], "uniform (in module dgl.dataloading.negative_sampler)": [[228, "dgl.dataloading.negative_sampler.Uniform", false]], "uniformnegativesampler (class in dgl.graphbolt)": [[321, "dgl.graphbolt.UniformNegativeSampler", false]], "unique_and_compact() (in module dgl.graphbolt)": [[338, "dgl.graphbolt.unique_and_compact", false]], "unique_and_compact_csc_formats() (in module dgl.graphbolt)": [[339, "dgl.graphbolt.unique_and_compact_csc_formats", false]], "unpin_memory_() (dgl.dglgraph method)": [[112, "dgl.DGLGraph.unpin_memory_", false]], "update() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.update", false]], "update() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.update", false]], "update() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.update", false]], "update() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.update", false]], "update() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.update", false]], "update() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.update", false]], "update_all() (dgl.dglgraph method)": [[113, "dgl.DGLGraph.update_all", false]], "url (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.url", false]], "use_libxsmm() (in module dgl)": [[688, "dgl.use_libxsmm", false]], "v_add_e() (in module dgl.function)": [[277, "dgl.function.v_add_e", false]], "v_add_e() (in module dgl.ops)": [[536, "dgl.ops.v_add_e", false]], "v_add_u() (in module dgl.function)": [[278, "dgl.function.v_add_u", false]], "v_add_u() (in module dgl.ops)": [[537, "dgl.ops.v_add_u", false]], "v_div_e() (in module dgl.function)": [[279, "dgl.function.v_div_e", false]], "v_div_e() (in module dgl.ops)": [[538, "dgl.ops.v_div_e", false]], "v_div_u() (in module dgl.function)": [[280, "dgl.function.v_div_u", false]], "v_div_u() (in module dgl.ops)": [[539, "dgl.ops.v_div_u", false]], "v_dot_e() (in module dgl.function)": [[281, "dgl.function.v_dot_e", false]], "v_dot_e() (in module dgl.ops)": [[540, "dgl.ops.v_dot_e", false]], "v_dot_u() (in module dgl.function)": [[282, "dgl.function.v_dot_u", false]], "v_dot_u() (in module dgl.ops)": [[541, "dgl.ops.v_dot_u", false]], "v_mul_e() (in module dgl.function)": [[283, "dgl.function.v_mul_e", false]], "v_mul_e() (in module dgl.ops)": [[542, "dgl.ops.v_mul_e", false]], "v_mul_u() (in module dgl.function)": [[284, "dgl.function.v_mul_u", false]], "v_mul_u() (in module dgl.ops)": [[543, "dgl.ops.v_mul_u", false]], "v_sub_e() (in module dgl.function)": [[285, "dgl.function.v_sub_e", false]], "v_sub_e() (in module dgl.ops)": [[544, "dgl.ops.v_sub_e", false]], "v_sub_u() (in module dgl.function)": [[286, "dgl.function.v_sub_u", false]], "v_sub_u() (in module dgl.ops)": [[545, "dgl.ops.v_sub_u", false]], "val (dgl.sparse.sparsematrix property)": [[612, "dgl.sparse.SparseMatrix.val", false]], "val_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.val_edges", false]], "val_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.val_idx", false]], "val_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.val_idx", false]], "val_like() (in module dgl.sparse)": [[636, "dgl.sparse.val_like", false]], "val_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.val_mask", false]], "val_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.val_size", false]], "validation_set (dgl.graphbolt.task property)": [[316, "dgl.graphbolt.Task.validation_set", false]], "verbose (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.verbose", false]], "vocab (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab", false]], "vocab_size (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab_size", false]], "weight (dgl.nn.pytorch.conv.graphconv attribute)": [[421, "dgl.nn.pytorch.conv.GraphConv.weight", false]], "weightandsum (class in dgl.nn.pytorch.glob)": [[449, "dgl.nn.pytorch.glob.WeightAndSum", false]], "weightbasis (class in dgl.nn.pytorch.utils)": [[465, "dgl.nn.pytorch.utils.WeightBasis", false]], "wikicsdataset (class in dgl.data)": [[192, "dgl.data.WikiCSDataset", false]], "wisconsindataset (class in dgl.data)": [[193, "dgl.data.WisconsinDataset", false]], "wn18dataset (class in dgl.data)": [[191, "dgl.data.WN18Dataset", false]], "yaml_data (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.yaml_data", false]], "yelpdataset (class in dgl.data)": [[194, "dgl.data.YelpDataset", false]], "zincdataset (class in dgl.data)": [[195, "dgl.data.ZINCDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "dgl"]], "dgl": [[1, 1, 1, "", "DGLGraph"], [114, 4, 1, "", "add_edges"], [115, 4, 1, "", "add_nodes"], [116, 4, 1, "", "add_reverse_edges"], [117, 4, 1, "", "add_self_loop"], [118, 4, 1, "", "adj_product_graph"], [119, 4, 1, "", "adj_sum_graph"], [120, 4, 1, "", "adjusted_homophily"], [121, 4, 1, "", "apply_each"], [122, 4, 1, "", "batch"], [123, 4, 1, "", "bfs_edges_generator"], [124, 4, 1, "", "bfs_nodes_generator"], [125, 4, 1, "", "bipartite_from_networkx"], [126, 4, 1, "", "bipartite_from_scipy"], [127, 4, 1, "", "block_to_graph"], [128, 4, 1, "", "broadcast_edges"], [129, 4, 1, "", "broadcast_nodes"], [130, 4, 1, "", "compact_graphs"], [131, 4, 1, "", "create_block"], [2, 0, 0, "-", "data"], [229, 4, 1, "", "dfs_edges_generator"], [230, 4, 1, "", "dfs_labeled_edges_generator"], [243, 4, 1, "", "double_radius_node_labeling"], [244, 4, 1, "", "edge_homophily"], [245, 4, 1, "", "edge_label_informativeness"], [246, 4, 1, "", "edge_subgraph"], [247, 4, 1, "", "edge_type_subgraph"], [248, 4, 1, "", "from_cugraph"], [249, 4, 1, "", "from_networkx"], [250, 4, 1, "", "from_scipy"], [6, 0, 0, "-", "geometry"], [287, 4, 1, "", "graph"], [340, 4, 1, "", "heterograph"], [341, 4, 1, "", "in_subgraph"], [342, 4, 1, "", "is_libxsmm_enabled"], [343, 4, 1, "", "khop_adj"], [344, 4, 1, "", "khop_graph"], [345, 4, 1, "", "khop_in_subgraph"], [346, 4, 1, "", "khop_out_subgraph"], [347, 4, 1, "", "knn_graph"], [348, 4, 1, "", "lap_pe"], [349, 4, 1, "", "laplacian_lambda_max"], [350, 4, 1, "", "line_graph"], [351, 4, 1, "", "linkx_homophily"], [352, 4, 1, "", "load_graphs"], [353, 4, 1, "", "max_edges"], [354, 4, 1, "", "max_nodes"], [355, 4, 1, "", "mean_edges"], [356, 4, 1, "", "mean_nodes"], [357, 4, 1, "", "merge"], [358, 4, 1, "", "metapath_reachable_graph"], [359, 4, 1, "", "metis_partition"], [360, 4, 1, "", "metis_partition_assignment"], [480, 4, 1, "", "node_homophily"], [481, 4, 1, "", "node_label_informativeness"], [482, 4, 1, "", "node_subgraph"], [483, 4, 1, "", "node_type_subgraph"], [484, 4, 1, "", "norm_by_dst"], [10, 0, 0, "-", "optim"], [546, 4, 1, "", "out_subgraph"], [547, 4, 1, "", "partition_graph_with_halo"], [548, 4, 1, "", "prop_edges"], [549, 4, 1, "", "prop_edges_dfs"], [550, 4, 1, "", "prop_nodes"], [551, 4, 1, "", "prop_nodes_bfs"], [552, 4, 1, "", "prop_nodes_topo"], [553, 4, 1, "", "radius_graph"], [554, 4, 1, "", "rand_bipartite"], [555, 4, 1, "", "rand_graph"], [556, 4, 1, "", "random_walk_pe"], [557, 4, 1, "", "readout_edges"], [558, 4, 1, "", "readout_nodes"], [559, 4, 1, "", "remove_edges"], [560, 4, 1, "", "remove_nodes"], [561, 4, 1, "", "remove_self_loop"], [562, 4, 1, "", "reorder_graph"], [563, 4, 1, "", "reverse"], [11, 0, 0, "-", "sampling"], [573, 4, 1, "", "save_graphs"], [574, 4, 1, "", "seed"], [575, 4, 1, "", "segmented_knn_graph"], [576, 4, 1, "", "shortest_dist"], [577, 4, 1, "", "slice_batch"], [578, 4, 1, "", "softmax_edges"], [579, 4, 1, "", "softmax_nodes"], [580, 4, 1, "", "sort_csc_by_tag"], [581, 4, 1, "", "sort_csr_by_tag"], [637, 4, 1, "", "sum_edges"], [638, 4, 1, "", "sum_nodes"], [639, 4, 1, "", "svd_pe"], [640, 4, 1, "", "to_bidirected"], [641, 4, 1, "", "to_block"], [642, 4, 1, "", "to_cugraph"], [643, 4, 1, "", "to_double"], [644, 4, 1, "", "to_float"], [645, 4, 1, "", "to_half"], [646, 4, 1, "", "to_heterogeneous"], [647, 4, 1, "", "to_homogeneous"], [648, 4, 1, "", "to_networkx"], [649, 4, 1, "", "to_simple"], [650, 4, 1, "", "to_simple_graph"], [651, 4, 1, "", "topk_edges"], [652, 4, 1, "", "topk_nodes"], [653, 4, 1, "", "topological_nodes_generator"], [19, 0, 0, "-", "transforms"], [687, 4, 1, "", "unbatch"], [688, 4, 1, "", "use_libxsmm"]], "dgl.DGLGraph": [[26, 2, 1, "", "__getitem__"], [27, 2, 1, "", "add_edges"], [28, 2, 1, "", "add_nodes"], [29, 2, 1, "", "add_self_loop"], [30, 2, 1, "", "adj"], [31, 2, 1, "", "adj_external"], [32, 2, 1, "", "adj_tensors"], [33, 2, 1, "", "adjacency_matrix"], [34, 2, 1, "", "apply_edges"], [35, 2, 1, "", "apply_nodes"], [36, 2, 1, "", "batch_num_edges"], [37, 2, 1, "", "batch_num_nodes"], [38, 3, 1, "", "batch_size"], [39, 3, 1, "", "canonical_etypes"], [40, 2, 1, "", "cpu"], [41, 2, 1, "", "create_formats_"], [42, 3, 1, "", "device"], [43, 3, 1, "", "dstdata"], [44, 3, 1, "", "dstnodes"], [45, 3, 1, "", "dsttypes"], [46, 3, 1, "", "edata"], [47, 2, 1, "", "edge_attr_schemes"], [48, 2, 1, "", "edge_ids"], [49, 2, 1, "", "edge_subgraph"], [50, 2, 1, "", "edge_type_subgraph"], [51, 3, 1, "", "edges"], [52, 3, 1, "", "etypes"], [53, 2, 1, "", "filter_edges"], [54, 2, 1, "", "filter_nodes"], [55, 2, 1, "", "find_edges"], [56, 2, 1, "", "formats"], [57, 2, 1, "", "has_edges_between"], [58, 2, 1, "", "has_nodes"], [59, 3, 1, "", "idtype"], [60, 2, 1, "", "in_degrees"], [61, 2, 1, "", "in_edges"], [62, 2, 1, "", "inc"], [63, 2, 1, "", "incidence_matrix"], [64, 2, 1, "", "int"], [65, 3, 1, "", "is_homogeneous"], [66, 3, 1, "", "is_multigraph"], [67, 2, 1, "", "is_pinned"], [68, 3, 1, "", "is_unibipartite"], [69, 2, 1, "", "line_graph"], [70, 2, 1, "", "local_scope"], [71, 2, 1, "", "long"], [72, 2, 1, "", "metagraph"], [73, 2, 1, "", "multi_update_all"], [74, 3, 1, "", "ndata"], [75, 2, 1, "", "node_attr_schemes"], [76, 2, 1, "", "node_type_subgraph"], [77, 3, 1, "", "nodes"], [78, 3, 1, "", "ntypes"], [79, 2, 1, "", "num_dst_nodes"], [80, 2, 1, "", "num_edges"], [81, 2, 1, "", "num_nodes"], [82, 2, 1, "", "num_src_nodes"], [83, 2, 1, "", "number_of_dst_nodes"], [84, 2, 1, "", "number_of_edges"], [85, 2, 1, "", "number_of_nodes"], [86, 2, 1, "", "number_of_src_nodes"], [87, 2, 1, "", "out_degrees"], [88, 2, 1, "", "out_edges"], [89, 2, 1, "", "pin_memory_"], [90, 2, 1, "", "predecessors"], [91, 2, 1, "", "prop_edges"], [92, 2, 1, "", "prop_nodes"], [93, 2, 1, "", "pull"], [94, 2, 1, "", "push"], [95, 2, 1, "", "remove_edges"], [96, 2, 1, "", "remove_nodes"], [97, 2, 1, "", "remove_self_loop"], [98, 2, 1, "", "reorder_graph"], [99, 2, 1, "", "reverse"], [100, 2, 1, "", "send_and_recv"], [101, 2, 1, "", "set_batch_num_edges"], [102, 2, 1, "", "set_batch_num_nodes"], [103, 3, 1, "", "srcdata"], [104, 3, 1, "", "srcnodes"], [105, 3, 1, "", "srctypes"], [106, 2, 1, "", "subgraph"], [107, 2, 1, "", "successors"], [108, 2, 1, "", "to"], [109, 2, 1, "", "to_canonical_etype"], [110, 2, 1, "", "to_cugraph"], [111, 2, 1, "", "to_simple"], [112, 2, 1, "", "unpin_memory_"], [113, 2, 1, "", "update_all"]], "dgl.data": [[132, 1, 1, "", "AIFBDataset"], [133, 1, 1, "", "AMDataset"], [134, 1, 1, "", "ActorDataset"], [135, 1, 1, "", "AmazonCoBuyComputerDataset"], [136, 1, 1, "", "AmazonCoBuyPhotoDataset"], [137, 1, 1, "", "AmazonRatingsDataset"], [138, 1, 1, "", "AsGraphPredDataset"], [139, 1, 1, "", "AsLinkPredDataset"], [140, 1, 1, "", "AsNodePredDataset"], [141, 1, 1, "", "BA2MotifDataset"], [142, 1, 1, "", "BACommunityDataset"], [143, 1, 1, "", "BAShapeDataset"], [144, 1, 1, "", "BGSDataset"], [145, 1, 1, "", "BitcoinOTCDataset"], [146, 1, 1, "", "CIFAR10SuperPixelDataset"], [147, 1, 1, "", "CLUSTERDataset"], [148, 1, 1, "", "CSVDataset"], [149, 1, 1, "", "ChameleonDataset"], [150, 1, 1, "", "CiteseerGraphDataset"], [151, 1, 1, "", "CoauthorCSDataset"], [152, 1, 1, "", "CoauthorPhysicsDataset"], [153, 1, 1, "", "CoraFullDataset"], [154, 1, 1, "", "CoraGraphDataset"], [155, 1, 1, "", "CornellDataset"], [156, 1, 1, "", "DGLDataset"], [157, 1, 1, "", "FB15k237Dataset"], [158, 1, 1, "", "FB15kDataset"], [159, 1, 1, "", "FakeNewsDataset"], [160, 1, 1, "", "FlickrDataset"], [161, 1, 1, "", "FraudAmazonDataset"], [162, 1, 1, "", "FraudDataset"], [163, 1, 1, "", "FraudYelpDataset"], [164, 1, 1, "", "GDELTDataset"], [165, 1, 1, "", "GINDataset"], [166, 1, 1, "", "ICEWS18Dataset"], [167, 1, 1, "", "KarateClubDataset"], [168, 1, 1, "", "LegacyTUDataset"], [169, 1, 1, "", "MNISTSuperPixelDataset"], [170, 1, 1, "", "MUTAGDataset"], [171, 1, 1, "", "MinesweeperDataset"], [172, 1, 1, "", "MiniGCDataset"], [173, 1, 1, "", "MovieLensDataset"], [174, 1, 1, "", "PATTERNDataset"], [175, 1, 1, "", "PPIDataset"], [176, 1, 1, "", "PubmedGraphDataset"], [177, 1, 1, "", "QM7bDataset"], [178, 1, 1, "", "QM9Dataset"], [179, 1, 1, "", "QM9EdgeDataset"], [180, 1, 1, "", "QuestionsDataset"], [181, 1, 1, "", "RedditDataset"], [182, 1, 1, "", "RomanEmpireDataset"], [183, 1, 1, "", "SBMMixtureDataset"], [184, 1, 1, "", "SSTDataset"], [185, 1, 1, "", "SquirrelDataset"], [186, 1, 1, "", "TUDataset"], [187, 1, 1, "", "TexasDataset"], [188, 1, 1, "", "TolokersDataset"], [189, 1, 1, "", "TreeCycleDataset"], [190, 1, 1, "", "TreeGridDataset"], [191, 1, 1, "", "WN18Dataset"], [192, 1, 1, "", "WikiCSDataset"], [193, 1, 1, "", "WisconsinDataset"], [194, 1, 1, "", "YelpDataset"], [195, 1, 1, "", "ZINCDataset"]], "dgl.data.AIFBDataset": [[132, 2, 1, "", "__getitem__"], [132, 2, 1, "", "__len__"], [132, 5, 1, "", "num_classes"], [132, 5, 1, "", "predict_category"]], "dgl.data.AMDataset": [[133, 2, 1, "", "__getitem__"], [133, 2, 1, "", "__len__"], [133, 5, 1, "", "num_classes"], [133, 5, 1, "", "predict_category"]], "dgl.data.ActorDataset": [[134, 2, 1, "", "__getitem__"], [134, 2, 1, "", "__len__"], [134, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyComputerDataset": [[135, 2, 1, "", "__getitem__"], [135, 2, 1, "", "__len__"], [135, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyPhotoDataset": [[136, 2, 1, "", "__getitem__"], [136, 2, 1, "", "__len__"], [136, 5, 1, "", "num_classes"]], "dgl.data.AmazonRatingsDataset": [[137, 2, 1, "", "__getitem__"], [137, 2, 1, "", "__len__"], [137, 5, 1, "", "num_classes"]], "dgl.data.AsGraphPredDataset": [[138, 2, 1, "", "__getitem__"], [138, 2, 1, "", "__len__"], [138, 5, 1, "", "edge_feat_size"], [138, 5, 1, "", "node_feat_size"], [138, 5, 1, "", "num_classes"], [138, 5, 1, "", "num_tasks"], [138, 5, 1, "", "test_idx"], [138, 5, 1, "", "train_idx"], [138, 5, 1, "", "val_idx"]], "dgl.data.AsLinkPredDataset": [[139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__len__"], [139, 5, 1, "", "feat_size"], [139, 5, 1, "", "test_edges"], [139, 5, 1, "", "train_graph"], [139, 5, 1, "", "val_edges"]], "dgl.data.AsNodePredDataset": [[140, 2, 1, "", "__getitem__"], [140, 2, 1, "", "__len__"], [140, 5, 1, "", "num_classes"], [140, 5, 1, "", "test_idx"], [140, 5, 1, "", "train_idx"], [140, 5, 1, "", "val_idx"]], "dgl.data.BA2MotifDataset": [[141, 2, 1, "", "__getitem__"], [141, 2, 1, "", "__len__"], [141, 5, 1, "", "num_classes"]], "dgl.data.BACommunityDataset": [[142, 2, 1, "", "__getitem__"], [142, 2, 1, "", "__len__"], [142, 5, 1, "", "num_classes"]], "dgl.data.BAShapeDataset": [[143, 2, 1, "", "__getitem__"], [143, 2, 1, "", "__len__"], [143, 5, 1, "", "num_classes"]], "dgl.data.BGSDataset": [[144, 2, 1, "", "__getitem__"], [144, 2, 1, "", "__len__"], [144, 5, 1, "", "num_classes"], [144, 5, 1, "", "predict_category"]], "dgl.data.BitcoinOTCDataset": [[145, 2, 1, "", "__getitem__"], [145, 2, 1, "", "__len__"], [145, 5, 1, "", "graphs"], [145, 5, 1, "", "is_temporal"]], "dgl.data.CIFAR10SuperPixelDataset": [[146, 2, 1, "", "__getitem__"], [146, 2, 1, "", "__len__"]], "dgl.data.CLUSTERDataset": [[147, 2, 1, "", "__getitem__"], [147, 2, 1, "", "__len__"], [147, 5, 1, "", "num_classes"]], "dgl.data.CSVDataset": [[148, 2, 1, "", "__getitem__"], [148, 2, 1, "", "__len__"], [148, 5, 1, "", "data"], [148, 5, 1, "", "graphs"]], "dgl.data.ChameleonDataset": [[149, 2, 1, "", "__getitem__"], [149, 2, 1, "", "__len__"], [149, 5, 1, "", "num_classes"]], "dgl.data.CiteseerGraphDataset": [[150, 2, 1, "", "__getitem__"], [150, 2, 1, "", "__len__"], [150, 5, 1, "", "num_classes"]], "dgl.data.CoauthorCSDataset": [[151, 2, 1, "", "__getitem__"], [151, 2, 1, "", "__len__"], [151, 5, 1, "", "num_classes"]], "dgl.data.CoauthorPhysicsDataset": [[152, 2, 1, "", "__getitem__"], [152, 2, 1, "", "__len__"], [152, 5, 1, "", "num_classes"]], "dgl.data.CoraFullDataset": [[153, 2, 1, "", "__getitem__"], [153, 2, 1, "", "__len__"], [153, 5, 1, "", "num_classes"]], "dgl.data.CoraGraphDataset": [[154, 2, 1, "", "__getitem__"], [154, 2, 1, "", "__len__"], [154, 5, 1, "", "num_classes"]], "dgl.data.CornellDataset": [[155, 2, 1, "", "__getitem__"], [155, 2, 1, "", "__len__"], [155, 5, 1, "", "num_classes"]], "dgl.data.DGLDataset": [[156, 2, 1, "", "__getitem__"], [156, 2, 1, "", "__len__"], [156, 5, 1, "", "hash"], [156, 5, 1, "", "name"], [156, 5, 1, "", "raw_dir"], [156, 5, 1, "", "raw_path"], [156, 5, 1, "", "save_dir"], [156, 5, 1, "", "save_path"], [156, 5, 1, "", "url"], [156, 5, 1, "", "verbose"]], "dgl.data.FB15k237Dataset": [[157, 2, 1, "", "__getitem__"], [157, 2, 1, "", "__len__"], [157, 5, 1, "", "num_nodes"], [157, 5, 1, "", "num_rels"]], "dgl.data.FB15kDataset": [[158, 2, 1, "", "__getitem__"], [158, 2, 1, "", "__len__"], [158, 5, 1, "", "num_nodes"], [158, 5, 1, "", "num_rels"]], "dgl.data.FakeNewsDataset": [[159, 2, 1, "", "__getitem__"], [159, 2, 1, "", "__len__"], [159, 5, 1, "", "feature"], [159, 5, 1, "", "feature_name"], [159, 5, 1, "", "graphs"], [159, 5, 1, "", "labels"], [159, 5, 1, "", "name"], [159, 5, 1, "", "num_classes"], [159, 5, 1, "", "num_graphs"], [159, 5, 1, "", "test_mask"], [159, 5, 1, "", "train_mask"], [159, 5, 1, "", "val_mask"]], "dgl.data.FlickrDataset": [[160, 2, 1, "", "__getitem__"], [160, 2, 1, "", "__len__"], [160, 5, 1, "", "num_classes"]], "dgl.data.FraudAmazonDataset": [[161, 2, 1, "", "__getitem__"], [161, 2, 1, "", "__len__"]], "dgl.data.FraudDataset": [[162, 2, 1, "", "__getitem__"], [162, 2, 1, "", "__len__"], [162, 5, 1, "", "graph"], [162, 5, 1, "", "num_classes"], [162, 5, 1, "", "seed"], [162, 5, 1, "", "train_size"], [162, 5, 1, "", "val_size"]], "dgl.data.FraudYelpDataset": [[163, 2, 1, "", "__getitem__"], [163, 2, 1, "", "__len__"]], "dgl.data.GDELTDataset": [[164, 2, 1, "", "__getitem__"], [164, 2, 1, "", "__len__"], [164, 5, 1, "", "end_time"], [164, 5, 1, "", "is_temporal"], [164, 5, 1, "", "start_time"]], "dgl.data.GINDataset": [[165, 2, 1, "", "__getitem__"], [165, 2, 1, "", "__len__"], [165, 5, 1, "", "num_classes"]], "dgl.data.ICEWS18Dataset": [[166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__len__"], [166, 5, 1, "", "is_temporal"]], "dgl.data.KarateClubDataset": [[167, 2, 1, "", "__getitem__"], [167, 2, 1, "", "__len__"], [167, 5, 1, "", "num_classes"]], "dgl.data.LegacyTUDataset": [[168, 2, 1, "", "__getitem__"], [168, 2, 1, "", "__len__"], [168, 5, 1, "", "max_num_node"], [168, 5, 1, "", "num_classes"], [168, 5, 1, "", "num_labels"]], "dgl.data.MNISTSuperPixelDataset": [[169, 2, 1, "", "__getitem__"], [169, 2, 1, "", "__len__"]], "dgl.data.MUTAGDataset": [[170, 2, 1, "", "__getitem__"], [170, 2, 1, "", "__len__"], [170, 5, 1, "", "graph"], [170, 5, 1, "", "num_classes"], [170, 5, 1, "", "predict_category"]], "dgl.data.MinesweeperDataset": [[171, 2, 1, "", "__getitem__"], [171, 2, 1, "", "__len__"], [171, 5, 1, "", "num_classes"]], "dgl.data.MiniGCDataset": [[172, 2, 1, "", "__getitem__"], [172, 2, 1, "", "__len__"], [172, 5, 1, "", "max_num_v"], [172, 5, 1, "", "min_num_v"], [172, 5, 1, "", "num_classes"], [172, 5, 1, "", "num_graphs"]], "dgl.data.MovieLensDataset": [[173, 2, 1, "", "__getitem__"], [173, 2, 1, "", "__len__"]], "dgl.data.PATTERNDataset": [[174, 2, 1, "", "__getitem__"], [174, 2, 1, "", "__len__"], [174, 5, 1, "", "num_classes"]], "dgl.data.PPIDataset": [[175, 2, 1, "", "__getitem__"], [175, 2, 1, "", "__len__"], [175, 5, 1, "", "features"], [175, 5, 1, "", "labels"], [175, 5, 1, "", "num_labels"]], "dgl.data.PubmedGraphDataset": [[176, 2, 1, "", "__getitem__"], [176, 2, 1, "", "__len__"], [176, 5, 1, "", "num_classes"]], "dgl.data.QM7bDataset": [[177, 2, 1, "", "__getitem__"], [177, 2, 1, "", "__len__"], [177, 5, 1, "", "num_labels"], [177, 5, 1, "", "num_tasks"]], "dgl.data.QM9Dataset": [[178, 2, 1, "", "__getitem__"], [178, 2, 1, "", "__len__"], [178, 5, 1, "", "num_labels"], [178, 5, 1, "", "num_tasks"]], "dgl.data.QM9EdgeDataset": [[179, 2, 1, "", "__getitem__"], [179, 2, 1, "", "__len__"], [179, 5, 1, "", "num_labels"], [179, 5, 1, "", "num_tasks"]], "dgl.data.QuestionsDataset": [[180, 2, 1, "", "__getitem__"], [180, 2, 1, "", "__len__"], [180, 5, 1, "", "num_classes"]], "dgl.data.RedditDataset": [[181, 2, 1, "", "__getitem__"], [181, 2, 1, "", "__len__"], [181, 5, 1, "", "num_classes"]], "dgl.data.RomanEmpireDataset": [[182, 2, 1, "", "__getitem__"], [182, 2, 1, "", "__len__"], [182, 5, 1, "", "num_classes"]], "dgl.data.SBMMixtureDataset": [[183, 2, 1, "", "__getitem__"], [183, 2, 1, "", "__len__"], [183, 2, 1, "", "collate_fn"]], "dgl.data.SSTDataset": [[184, 2, 1, "", "__getitem__"], [184, 2, 1, "", "__len__"], [184, 5, 1, "", "num_classes"], [184, 5, 1, "", "pretrained_emb"], [184, 5, 1, "", "vocab"], [184, 5, 1, "", "vocab_size"]], "dgl.data.SquirrelDataset": [[185, 2, 1, "", "__getitem__"], [185, 2, 1, "", "__len__"], [185, 5, 1, "", "num_classes"]], "dgl.data.TUDataset": [[186, 2, 1, "", "__getitem__"], [186, 2, 1, "", "__len__"], [186, 5, 1, "", "max_num_node"], [186, 5, 1, "", "num_classes"], [186, 5, 1, "", "num_labels"]], "dgl.data.TexasDataset": [[187, 2, 1, "", "__getitem__"], [187, 2, 1, "", "__len__"], [187, 5, 1, "", "num_classes"]], "dgl.data.TolokersDataset": [[188, 2, 1, "", "__getitem__"], [188, 2, 1, "", "__len__"], [188, 5, 1, "", "num_classes"]], "dgl.data.TreeCycleDataset": [[189, 2, 1, "", "__getitem__"], [189, 2, 1, "", "__len__"], [189, 5, 1, "", "num_classes"]], "dgl.data.TreeGridDataset": [[190, 2, 1, "", "__getitem__"], [190, 2, 1, "", "__len__"], [190, 5, 1, "", "num_classes"]], "dgl.data.WN18Dataset": [[191, 2, 1, "", "__getitem__"], [191, 2, 1, "", "__len__"], [191, 5, 1, "", "num_nodes"], [191, 5, 1, "", "num_rels"]], "dgl.data.WikiCSDataset": [[192, 2, 1, "", "__getitem__"], [192, 2, 1, "", "__len__"], [192, 5, 1, "", "num_classes"]], "dgl.data.WisconsinDataset": [[193, 2, 1, "", "__getitem__"], [193, 2, 1, "", "__len__"], [193, 5, 1, "", "num_classes"]], "dgl.data.YelpDataset": [[194, 2, 1, "", "__getitem__"], [194, 2, 1, "", "__len__"], [194, 5, 1, "", "num_classes"]], "dgl.data.ZINCDataset": [[195, 2, 1, "", "__getitem__"], [195, 2, 1, "", "__len__"], [195, 5, 1, "", "num_atom_types"], [195, 5, 1, "", "num_bond_types"]], "dgl.data.utils": [[196, 1, 1, "", "Subset"], [197, 1, 1, "", "add_node_property_split"], [198, 1, 1, "", "add_nodepred_split"], [199, 1, 1, "", "check_sha1"], [200, 1, 1, "", "download"], [201, 1, 1, "", "extract_archive"], [202, 1, 1, "", "get_download_dir"], [203, 1, 1, "", "load_info"], [204, 1, 1, "", "load_labels"], [205, 1, 1, "", "mask_nodes_by_property"], [206, 1, 1, "", "save_info"], [207, 1, 1, "", "split_dataset"]], "dgl.data.utils.Subset": [[196, 2, 1, "", "__getitem__"], [196, 2, 1, "", "__len__"]], "dgl.dataloading": [[208, 1, 1, "", "BlockSampler"], [209, 1, 1, "", "ClusterGCNSampler"], [210, 1, 1, "", "DataLoader"], [211, 1, 1, "", "DistEdgeDataLoader"], [212, 1, 1, "", "DistNodeDataLoader"], [213, 1, 1, "", "GraphDataLoader"], [214, 1, 1, "", "LaborSampler"], [215, 1, 1, "", "MultiLayerFullNeighborSampler"], [216, 1, 1, "", "NeighborSampler"], [217, 1, 1, "", "SAINTSampler"], [218, 1, 1, "", "Sampler"], [219, 1, 1, "", "ShaDowKHopSampler"], [220, 4, 1, "", "as_edge_prediction_sampler"]], "dgl.dataloading.BlockSampler": [[208, 2, 1, "", "__init__"]], "dgl.dataloading.base": [[221, 1, 1, "", "LazyFeature"], [222, 1, 1, "", "set_dst_lazy_features"], [223, 1, 1, "", "set_edge_lazy_features"], [224, 1, 1, "", "set_node_lazy_features"], [225, 1, 1, "", "set_src_lazy_features"]], "dgl.dataloading.negative_sampler": [[226, 1, 1, "", "GlobalUniform"], [227, 1, 1, "", "PerSourceUniform"], [228, 5, 1, "", "Uniform"]], "dgl.distributed": [[4, 1, 1, "", "DistDataLoader"], [4, 1, 1, "", "DistEmbedding"], [4, 1, 1, "", "DistGraph"], [4, 1, 1, "", "DistTensor"], [4, 1, 1, "", "GraphPartitionBook"], [4, 1, 1, "", "PartitionPolicy"], [231, 4, 1, "", "dgl_partition_to_graphbolt"], [232, 4, 1, "", "edge_split"], [233, 4, 1, "", "find_edges"], [234, 4, 1, "", "in_subgraph"], [235, 4, 1, "", "initialize"], [236, 4, 1, "", "load_partition"], [237, 4, 1, "", "load_partition_book"], [238, 4, 1, "", "load_partition_feats"], [239, 4, 1, "", "node_split"], [240, 4, 1, "", "partition_graph"], [241, 4, 1, "", "sample_etype_neighbors"], [242, 4, 1, "", "sample_neighbors"]], "dgl.distributed.DistGraph": [[4, 2, 1, "", "barrier"], [4, 3, 1, "", "device"], [4, 3, 1, "", "edata"], [4, 2, 1, "", "edge_attr_schemes"], [4, 3, 1, "", "edges"], [4, 3, 1, "", "etypes"], [4, 2, 1, "", "find_edges"], [4, 2, 1, "", "get_edge_partition_policy"], [4, 2, 1, "", "get_etype_id"], [4, 2, 1, "", "get_node_partition_policy"], [4, 2, 1, "", "get_ntype_id"], [4, 2, 1, "", "get_partition_book"], [4, 3, 1, "", "idtype"], [4, 2, 1, "", "in_degrees"], [4, 3, 1, "", "local_partition"], [4, 3, 1, "", "ndata"], [4, 2, 1, "", "node_attr_schemes"], [4, 3, 1, "", "nodes"], [4, 3, 1, "", "ntypes"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_nodes"], [4, 2, 1, "", "number_of_edges"], [4, 2, 1, "", "number_of_nodes"], [4, 2, 1, "", "out_degrees"], [4, 2, 1, "", "rank"]], "dgl.distributed.DistTensor": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "name"], [4, 3, 1, "", "part_policy"], [4, 3, 1, "", "shape"]], "dgl.distributed.GraphPartitionBook": [[4, 3, 1, "", "canonical_etypes"], [4, 2, 1, "", "eid2localeid"], [4, 2, 1, "", "eid2partid"], [4, 2, 1, "", "map_to_homo_eid"], [4, 2, 1, "", "map_to_homo_nid"], [4, 2, 1, "", "map_to_per_etype"], [4, 2, 1, "", "map_to_per_ntype"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "nid2localnid"], [4, 2, 1, "", "nid2partid"], [4, 2, 1, "", "num_partitions"], [4, 3, 1, "", "partid"], [4, 2, 1, "", "partid2eids"], [4, 2, 1, "", "partid2nids"], [4, 2, 1, "", "shared_memory"]], "dgl.distributed.PartitionPolicy": [[4, 2, 1, "", "get_part_size"], [4, 2, 1, "", "get_size"], [4, 3, 1, "", "part_id"], [4, 3, 1, "", "partition_book"], [4, 3, 1, "", "policy_str"], [4, 2, 1, "", "to_local"], [4, 2, 1, "", "to_partid"]], "dgl.distributed.optim": [[4, 1, 1, "", "SparseAdagrad"], [4, 1, 1, "", "SparseAdam"]], "dgl.distributed.optim.SparseAdagrad": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.distributed.optim.SparseAdam": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.function": [[251, 4, 1, "", "copy_e"], [252, 4, 1, "", "copy_u"], [253, 4, 1, "", "e_add_u"], [254, 4, 1, "", "e_add_v"], [255, 4, 1, "", "e_div_u"], [256, 4, 1, "", "e_div_v"], [257, 4, 1, "", "e_dot_u"], [258, 4, 1, "", "e_dot_v"], [259, 4, 1, "", "e_mul_u"], [260, 4, 1, "", "e_mul_v"], [261, 4, 1, "", "e_sub_u"], [262, 4, 1, "", "e_sub_v"], [263, 4, 1, "", "max"], [264, 4, 1, "", "mean"], [265, 4, 1, "", "min"], [266, 4, 1, "", "sum"], [267, 4, 1, "", "u_add_e"], [268, 4, 1, "", "u_add_v"], [269, 4, 1, "", "u_div_e"], [270, 4, 1, "", "u_div_v"], [271, 4, 1, "", "u_dot_e"], [272, 4, 1, "", "u_dot_v"], [273, 4, 1, "", "u_mul_e"], [274, 4, 1, "", "u_mul_v"], [275, 4, 1, "", "u_sub_e"], [276, 4, 1, "", "u_sub_v"], [277, 4, 1, "", "v_add_e"], [278, 4, 1, "", "v_add_u"], [279, 4, 1, "", "v_div_e"], [280, 4, 1, "", "v_div_u"], [281, 4, 1, "", "v_dot_e"], [282, 4, 1, "", "v_dot_u"], [283, 4, 1, "", "v_mul_e"], [284, 4, 1, "", "v_mul_u"], [285, 4, 1, "", "v_sub_e"], [286, 4, 1, "", "v_sub_u"]], "dgl.geometry": [[6, 1, 1, "", "farthest_point_sampler"], [6, 1, 1, "", "neighbor_matching"]], "dgl.graphbolt": [[288, 1, 1, "", "BasicFeatureStore"], [289, 1, 1, "", "BuiltinDataset"], [290, 1, 1, "", "CPUCachedFeature"], [291, 1, 1, "", "CopyTo"], [292, 1, 1, "", "DataLoader"], [293, 1, 1, "", "Dataset"], [294, 1, 1, "", "DiskBasedFeature"], [295, 1, 1, "", "DistributedItemSampler"], [296, 1, 1, "", "Feature"], [297, 1, 1, "", "FeatureFetcher"], [298, 1, 1, "", "FeatureStore"], [299, 1, 1, "", "FusedCSCSamplingGraph"], [300, 1, 1, "", "GPUCachedFeature"], [301, 1, 1, "", "HeteroItemSet"], [302, 1, 1, "", "InSubgraphSampler"], [303, 1, 1, "", "ItemSampler"], [304, 1, 1, "", "ItemSet"], [305, 1, 1, "", "LayerNeighborSampler"], [306, 1, 1, "", "LegacyDataset"], [307, 1, 1, "", "MiniBatch"], [308, 1, 1, "", "MiniBatchTransformer"], [309, 1, 1, "", "NegativeSampler"], [310, 1, 1, "", "NeighborSampler"], [311, 1, 1, "", "OnDiskDataset"], [312, 1, 1, "", "SampledSubgraph"], [313, 1, 1, "", "SampledSubgraphImpl"], [314, 1, 1, "", "SamplingGraph"], [315, 1, 1, "", "SubgraphSampler"], [316, 1, 1, "", "Task"], [317, 1, 1, "", "TemporalLayerNeighborSampler"], [318, 1, 1, "", "TemporalNeighborSampler"], [319, 1, 1, "", "TorchBasedFeature"], [320, 1, 1, "", "TorchBasedFeatureStore"], [321, 1, 1, "", "UniformNegativeSampler"], [322, 4, 1, "", "add_reverse_edges"], [323, 4, 1, "", "compact_csc_format"], [324, 4, 1, "", "cpu_cached_feature"], [325, 4, 1, "", "etype_str_to_tuple"], [326, 4, 1, "", "etype_tuple_to_str"], [327, 4, 1, "", "exclude_seed_edges"], [328, 4, 1, "", "expand_indptr"], [329, 4, 1, "", "from_dglgraph"], [330, 4, 1, "", "fused_csc_sampling_graph"], [331, 4, 1, "", "gpu_cached_feature"], [332, 4, 1, "", "index_select"], [333, 4, 1, "", "indptr_edge_ids"], [334, 4, 1, "", "isin"], [335, 4, 1, "", "load_from_shared_memory"], [336, 4, 1, "", "numpy_save_aligned"], [337, 4, 1, "", "seed"], [338, 4, 1, "", "unique_and_compact"], [339, 4, 1, "", "unique_and_compact_csc_formats"]], "dgl.graphbolt.BasicFeatureStore": [[288, 2, 1, "", "keys"]], "dgl.graphbolt.CPUCachedFeature": [[290, 3, 1, "", "cache_size_in_bytes"], [290, 2, 1, "", "count"], [290, 2, 1, "", "is_pinned"], [290, 3, 1, "", "miss_rate"], [290, 2, 1, "", "read"], [290, 2, 1, "", "read_async"], [290, 2, 1, "", "read_async_num_stages"], [290, 2, 1, "", "size"], [290, 2, 1, "", "update"]], "dgl.graphbolt.Dataset": [[293, 3, 1, "", "all_nodes_set"], [293, 3, 1, "", "dataset_name"], [293, 3, 1, "", "feature"], [293, 3, 1, "", "graph"], [293, 3, 1, "", "tasks"]], "dgl.graphbolt.DiskBasedFeature": [[294, 2, 1, "", "count"], [294, 2, 1, "", "metadata"], [294, 2, 1, "", "pin_memory_"], [294, 2, 1, "", "read"], [294, 2, 1, "", "read_async"], [294, 2, 1, "", "read_async_num_stages"], [294, 2, 1, "", "read_into_memory"], [294, 2, 1, "", "size"], [294, 2, 1, "", "to"], [294, 2, 1, "", "update"]], "dgl.graphbolt.Feature": [[296, 2, 1, "", "count"], [296, 2, 1, "", "metadata"], [296, 2, 1, "", "read"], [296, 2, 1, "", "read_async"], [296, 2, 1, "", "read_async_num_stages"], [296, 2, 1, "", "size"], [296, 2, 1, "", "update"]], "dgl.graphbolt.FeatureStore": [[298, 2, 1, "", "count"], [298, 2, 1, "", "keys"], [298, 2, 1, "", "metadata"], [298, 2, 1, "", "read"], [298, 2, 1, "", "size"], [298, 2, 1, "", "update"]], "dgl.graphbolt.FusedCSCSamplingGraph": [[299, 2, 1, "", "add_edge_attribute"], [299, 2, 1, "", "add_node_attribute"], [299, 2, 1, "", "copy_to_shared_memory"], [299, 3, 1, "", "csc_indptr"], [299, 2, 1, "", "edge_attribute"], [299, 3, 1, "", "edge_attributes"], [299, 3, 1, "", "edge_type_to_id"], [299, 2, 1, "", "in_subgraph"], [299, 3, 1, "", "indices"], [299, 2, 1, "", "node_attribute"], [299, 3, 1, "", "node_attributes"], [299, 3, 1, "", "node_type_offset"], [299, 3, 1, "", "node_type_to_id"], [299, 3, 1, "", "num_edges"], [299, 3, 1, "", "num_nodes"], [299, 2, 1, "", "pin_memory_"], [299, 2, 1, "", "sample_layer_neighbors"], [299, 2, 1, "", "sample_negative_edges_uniform"], [299, 2, 1, "", "sample_neighbors"], [299, 2, 1, "", "temporal_sample_layer_neighbors"], [299, 2, 1, "", "temporal_sample_neighbors"], [299, 2, 1, "", "to"], [299, 3, 1, "", "total_num_edges"], [299, 3, 1, "", "total_num_nodes"], [299, 3, 1, "", "type_per_edge"]], "dgl.graphbolt.GPUCachedFeature": [[300, 3, 1, "", "cache_size_in_bytes"], [300, 2, 1, "", "count"], [300, 3, 1, "", "miss_rate"], [300, 2, 1, "", "read"], [300, 2, 1, "", "read_async"], [300, 2, 1, "", "read_async_num_stages"], [300, 2, 1, "", "size"], [300, 2, 1, "", "update"]], "dgl.graphbolt.HeteroItemSet": [[301, 3, 1, "", "names"]], "dgl.graphbolt.InSubgraphSampler": [[302, 2, 1, "", "sample_subgraphs"]], "dgl.graphbolt.ItemSet": [[304, 3, 1, "", "names"], [304, 3, 1, "", "num_items"]], "dgl.graphbolt.LegacyDataset": [[306, 3, 1, "", "all_nodes_set"], [306, 3, 1, "", "dataset_name"], [306, 3, 1, "", "feature"], [306, 3, 1, "", "graph"], [306, 3, 1, "", "tasks"]], "dgl.graphbolt.MiniBatch": [[307, 3, 1, "", "blocks"], [307, 5, 1, "", "compacted_seeds"], [307, 2, 1, "", "compute_blocks"], [307, 5, 1, "", "edge_features"], [307, 2, 1, "", "edge_ids"], [307, 5, 1, "", "indexes"], [307, 5, 1, "", "input_nodes"], [307, 2, 1, "", "is_pinned"], [307, 5, 1, "", "labels"], [307, 5, 1, "", "node_features"], [307, 2, 1, "", "node_ids"], [307, 2, 1, "", "num_layers"], [307, 2, 1, "", "pin_memory"], [307, 5, 1, "", "sampled_subgraphs"], [307, 5, 1, "", "seeds"], [307, 2, 1, "", "set_edge_features"], [307, 2, 1, "", "set_node_features"], [307, 2, 1, "", "to"], [307, 2, 1, "", "to_pyg_data"]], "dgl.graphbolt.OnDiskDataset": [[311, 3, 1, "", "all_nodes_set"], [311, 3, 1, "", "dataset_name"], [311, 3, 1, "", "feature"], [311, 3, 1, "", "graph"], [311, 2, 1, "", "load"], [311, 3, 1, "", "tasks"], [311, 3, 1, "", "yaml_data"]], "dgl.graphbolt.SampledSubgraph": [[312, 2, 1, "", "exclude_edges"], [312, 2, 1, "", "is_pinned"], [312, 3, 1, "", "original_column_node_ids"], [312, 3, 1, "", "original_edge_ids"], [312, 3, 1, "", "original_row_node_ids"], [312, 2, 1, "", "pin_memory"], [312, 3, 1, "", "sampled_csc"], [312, 2, 1, "", "to"], [312, 2, 1, "", "to_pyg"]], "dgl.graphbolt.SampledSubgraphImpl": [[313, 5, 1, "", "original_column_node_ids"], [313, 5, 1, "", "original_edge_ids"], [313, 5, 1, "", "original_row_node_ids"], [313, 5, 1, "", "sampled_csc"]], "dgl.graphbolt.SamplingGraph": [[314, 2, 1, "", "copy_to_shared_memory"], [314, 3, 1, "", "num_edges"], [314, 3, 1, "", "num_nodes"], [314, 2, 1, "", "to"]], "dgl.graphbolt.SubgraphSampler": [[315, 2, 1, "", "sample_subgraphs"], [315, 2, 1, "", "sampling_stages"]], "dgl.graphbolt.Task": [[316, 3, 1, "", "metadata"], [316, 3, 1, "", "test_set"], [316, 3, 1, "", "train_set"], [316, 3, 1, "", "validation_set"]], "dgl.graphbolt.TorchBasedFeature": [[319, 2, 1, "", "count"], [319, 2, 1, "", "is_pinned"], [319, 2, 1, "", "metadata"], [319, 2, 1, "", "pin_memory_"], [319, 2, 1, "", "read"], [319, 2, 1, "", "read_async"], [319, 2, 1, "", "read_async_num_stages"], [319, 2, 1, "", "size"], [319, 2, 1, "", "to"], [319, 2, 1, "", "update"]], "dgl.graphbolt.TorchBasedFeatureStore": [[320, 2, 1, "", "is_pinned"], [320, 2, 1, "", "pin_memory_"], [320, 2, 1, "", "to"]], "dgl.multiprocessing.pytorch": [[361, 4, 1, "", "call_once_and_share"], [362, 4, 1, "", "shared_tensor"]], "dgl.nn": [[18, 0, 0, "-", "functional"]], "dgl.nn.functional": [[363, 4, 1, "", "edge_softmax"]], "dgl.nn.mxnet": [[364, 1, 1, "", "HeteroGraphConv"]], "dgl.nn.mxnet.conv": [[365, 1, 1, "", "AGNNConv"], [366, 1, 1, "", "APPNPConv"], [367, 1, 1, "", "ChebConv"], [368, 1, 1, "", "DenseChebConv"], [369, 1, 1, "", "DenseGraphConv"], [370, 1, 1, "", "DenseSAGEConv"], [371, 1, 1, "", "EdgeConv"], [372, 1, 1, "", "GATConv"], [373, 1, 1, "", "GINConv"], [374, 1, 1, "", "GMMConv"], [375, 1, 1, "", "GatedGraphConv"], [376, 1, 1, "", "GraphConv"], [377, 1, 1, "", "NNConv"], [378, 1, 1, "", "RelGraphConv"], [379, 1, 1, "", "SAGEConv"], [380, 1, 1, "", "SGConv"], [381, 1, 1, "", "TAGConv"]], "dgl.nn.mxnet.glob": [[382, 1, 1, "", "AvgPooling"], [383, 1, 1, "", "GlobalAttentionPooling"], [384, 1, 1, "", "MaxPooling"], [385, 1, 1, "", "Set2Set"], [386, 1, 1, "", "SortPooling"], [387, 1, 1, "", "SumPooling"]], "dgl.nn.mxnet.utils": [[388, 1, 1, "", "Sequential"]], "dgl.nn.pytorch": [[389, 1, 1, "", "DeepWalk"], [390, 1, 1, "", "HeteroEmbedding"], [391, 1, 1, "", "HeteroGraphConv"], [392, 1, 1, "", "HeteroLinear"], [393, 1, 1, "", "MetaPath2Vec"], [394, 1, 1, "", "TypedLinear"]], "dgl.nn.pytorch.DeepWalk": [[389, 2, 1, "", "forward"], [389, 5, 1, "", "node_embed"], [389, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroEmbedding": [[390, 2, 1, "", "forward"], [390, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroGraphConv": [[391, 2, 1, "", "forward"], [391, 5, 1, "", "mods"]], "dgl.nn.pytorch.HeteroLinear": [[392, 2, 1, "", "forward"]], "dgl.nn.pytorch.MetaPath2Vec": [[393, 2, 1, "", "forward"], [393, 5, 1, "", "local_to_global_nid"], [393, 5, 1, "", "node_embed"], [393, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.TypedLinear": [[394, 2, 1, "", "forward"], [394, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv": [[395, 1, 1, "", "AGNNConv"], [396, 1, 1, "", "APPNPConv"], [397, 1, 1, "", "AtomicConv"], [398, 1, 1, "", "CFConv"], [399, 1, 1, "", "ChebConv"], [400, 1, 1, "", "CuGraphGATConv"], [401, 1, 1, "", "CuGraphRelGraphConv"], [402, 1, 1, "", "CuGraphSAGEConv"], [403, 1, 1, "", "DGNConv"], [404, 1, 1, "", "DenseChebConv"], [405, 1, 1, "", "DenseGraphConv"], [406, 1, 1, "", "DenseSAGEConv"], [407, 1, 1, "", "DotGatConv"], [408, 1, 1, "", "EGATConv"], [409, 1, 1, "", "EGNNConv"], [410, 1, 1, "", "EdgeConv"], [411, 1, 1, "", "EdgeGATConv"], [412, 1, 1, "", "EdgeWeightNorm"], [413, 1, 1, "", "GATConv"], [414, 1, 1, "", "GATv2Conv"], [415, 1, 1, "", "GCN2Conv"], [416, 1, 1, "", "GINConv"], [417, 1, 1, "", "GINEConv"], [418, 1, 1, "", "GMMConv"], [419, 1, 1, "", "GatedGCNConv"], [420, 1, 1, "", "GatedGraphConv"], [421, 1, 1, "", "GraphConv"], [422, 1, 1, "", "GroupRevRes"], [423, 1, 1, "", "HGTConv"], [424, 1, 1, "", "NNConv"], [425, 1, 1, "", "PNAConv"], [426, 1, 1, "", "RelGraphConv"], [427, 1, 1, "", "SAGEConv"], [428, 1, 1, "", "SGConv"], [429, 1, 1, "", "TAGConv"], [430, 1, 1, "", "TWIRLSConv"], [431, 1, 1, "", "TWIRLSUnfoldingAndAttention"]], "dgl.nn.pytorch.conv.AGNNConv": [[395, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.APPNPConv": [[396, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.AtomicConv": [[397, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CFConv": [[398, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.ChebConv": [[399, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CuGraphGATConv": [[400, 2, 1, "", "forward"], [400, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphRelGraphConv": [[401, 2, 1, "", "forward"], [401, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphSAGEConv": [[402, 2, 1, "", "forward"], [402, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DGNConv": [[403, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.DenseChebConv": [[404, 2, 1, "", "forward"], [404, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseGraphConv": [[405, 2, 1, "", "forward"], [405, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseSAGEConv": [[406, 2, 1, "", "forward"], [406, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DotGatConv": [[407, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EGATConv": [[408, 2, 1, "", "forward"], [408, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EGNNConv": [[409, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeConv": [[410, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeGATConv": [[411, 2, 1, "", "forward"], [411, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EdgeWeightNorm": [[412, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GATConv": [[413, 2, 1, "", "forward"], [413, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GATv2Conv": [[414, 2, 1, "", "forward"], [414, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GCN2Conv": [[415, 2, 1, "", "forward"], [415, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GINConv": [[416, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GINEConv": [[417, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GMMConv": [[418, 2, 1, "", "forward"], [418, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GatedGCNConv": [[419, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GatedGraphConv": [[420, 2, 1, "", "forward"], [420, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GraphConv": [[421, 5, 1, "", "bias"], [421, 2, 1, "", "forward"], [421, 2, 1, "", "reset_parameters"], [421, 5, 1, "", "weight"]], "dgl.nn.pytorch.conv.GroupRevRes": [[422, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.HGTConv": [[423, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.NNConv": [[424, 2, 1, "", "forward"], [424, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.PNAConv": [[425, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.RelGraphConv": [[426, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.SAGEConv": [[427, 2, 1, "", "forward"], [427, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.SGConv": [[428, 2, 1, "", "forward"], [428, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TAGConv": [[429, 2, 1, "", "forward"], [429, 5, 1, "", "lin"], [429, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TWIRLSConv": [[430, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention": [[431, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain": [[432, 1, 1, "", "GNNExplainer"], [433, 1, 1, "", "HeteroGNNExplainer"], [434, 1, 1, "", "HeteroPGExplainer"], [435, 1, 1, "", "HeteroSubgraphX"], [436, 1, 1, "", "PGExplainer"], [437, 1, 1, "", "SubgraphX"]], "dgl.nn.pytorch.explain.GNNExplainer": [[432, 2, 1, "", "explain_graph"], [432, 2, 1, "", "explain_node"], [432, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroGNNExplainer": [[433, 2, 1, "", "explain_graph"], [433, 2, 1, "", "explain_node"], [433, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroPGExplainer": [[434, 2, 1, "", "explain_graph"], [434, 2, 1, "", "explain_node"], [434, 2, 1, "", "forward"], [434, 2, 1, "", "train_step"], [434, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.HeteroSubgraphX": [[435, 2, 1, "", "explain_graph"], [435, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.PGExplainer": [[436, 2, 1, "", "explain_graph"], [436, 2, 1, "", "explain_node"], [436, 2, 1, "", "forward"], [436, 2, 1, "", "train_step"], [436, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.SubgraphX": [[437, 2, 1, "", "explain_graph"], [437, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory": [[438, 1, 1, "", "KNNGraph"], [439, 1, 1, "", "RadiusGraph"], [440, 1, 1, "", "SegmentedKNNGraph"]], "dgl.nn.pytorch.factory.KNNGraph": [[438, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.RadiusGraph": [[439, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.SegmentedKNNGraph": [[440, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob": [[441, 1, 1, "", "AvgPooling"], [442, 1, 1, "", "GlobalAttentionPooling"], [443, 1, 1, "", "MaxPooling"], [444, 1, 1, "", "Set2Set"], [445, 1, 1, "", "SetTransformerDecoder"], [446, 1, 1, "", "SetTransformerEncoder"], [447, 1, 1, "", "SortPooling"], [448, 1, 1, "", "SumPooling"], [449, 1, 1, "", "WeightAndSum"]], "dgl.nn.pytorch.glob.AvgPooling": [[441, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.GlobalAttentionPooling": [[442, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.MaxPooling": [[443, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.Set2Set": [[444, 2, 1, "", "forward"], [444, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.glob.SetTransformerDecoder": [[445, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SetTransformerEncoder": [[446, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SortPooling": [[447, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SumPooling": [[448, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.WeightAndSum": [[449, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt": [[450, 1, 1, "", "BiasedMHA"], [451, 1, 1, "", "DegreeEncoder"], [452, 1, 1, "", "EGTLayer"], [453, 1, 1, "", "GraphormerLayer"], [454, 1, 1, "", "LapPosEncoder"], [455, 1, 1, "", "PathEncoder"], [456, 1, 1, "", "SpatialEncoder"], [457, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt.BiasedMHA": [[450, 2, 1, "", "forward"], [450, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.gt.DegreeEncoder": [[451, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.EGTLayer": [[452, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.GraphormerLayer": [[453, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.LapPosEncoder": [[454, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.PathEncoder": [[455, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder": [[456, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder3d": [[457, 2, 1, "", "forward"]], "dgl.nn.pytorch.link": [[458, 1, 1, "", "EdgePredictor"], [459, 1, 1, "", "TransE"], [460, 1, 1, "", "TransR"]], "dgl.nn.pytorch.link.EdgePredictor": [[458, 2, 1, "", "forward"], [458, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransE": [[459, 2, 1, "", "forward"], [459, 5, 1, "", "rel_emb"], [459, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransR": [[460, 2, 1, "", "forward"], [460, 5, 1, "", "rel_emb"], [460, 5, 1, "", "rel_project"], [460, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.sparse_emb": [[461, 1, 1, "", "NodeEmbedding"]], "dgl.nn.pytorch.utils": [[462, 1, 1, "", "JumpingKnowledge"], [463, 1, 1, "", "LabelPropagation"], [464, 1, 1, "", "Sequential"], [465, 1, 1, "", "WeightBasis"]], "dgl.nn.pytorch.utils.JumpingKnowledge": [[462, 2, 1, "", "forward"], [462, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.utils.LabelPropagation": [[463, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.Sequential": [[464, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.WeightBasis": [[465, 2, 1, "", "forward"]], "dgl.nn.tensorflow.conv": [[466, 1, 1, "", "APPNPConv"], [467, 1, 1, "", "ChebConv"], [468, 1, 1, "", "GATConv"], [469, 1, 1, "", "GINConv"], [470, 1, 1, "", "GraphConv"], [471, 1, 1, "", "RelGraphConv"], [472, 1, 1, "", "SAGEConv"], [473, 1, 1, "", "SGConv"]], "dgl.nn.tensorflow.glob": [[474, 1, 1, "", "AvgPooling"], [475, 1, 1, "", "GlobalAttentionPooling"], [476, 1, 1, "", "HeteroGraphConv"], [477, 1, 1, "", "MaxPooling"], [478, 1, 1, "", "SortPooling"], [479, 1, 1, "", "SumPooling"]], "dgl.ops": [[485, 4, 1, "", "copy_e_max"], [486, 4, 1, "", "copy_e_mean"], [487, 4, 1, "", "copy_e_min"], [488, 4, 1, "", "copy_e_sum"], [489, 4, 1, "", "copy_u"], [490, 4, 1, "", "copy_u_max"], [491, 4, 1, "", "copy_u_mean"], [492, 4, 1, "", "copy_u_min"], [493, 4, 1, "", "copy_u_sum"], [494, 4, 1, "", "copy_v"], [495, 4, 1, "", "e_add_u"], [496, 4, 1, "", "e_add_v"], [497, 4, 1, "", "e_div_u"], [498, 4, 1, "", "e_div_v"], [499, 4, 1, "", "e_dot_u"], [500, 4, 1, "", "e_dot_v"], [501, 4, 1, "", "e_mul_u"], [502, 4, 1, "", "e_mul_v"], [503, 4, 1, "", "e_sub_u"], [504, 4, 1, "", "e_sub_v"], [505, 4, 1, "", "gather_mm"], [506, 4, 1, "", "gsddmm"], [507, 4, 1, "", "gspmm"], [508, 4, 1, "", "segment_mm"], [509, 4, 1, "", "segment_reduce"], [510, 4, 1, "", "u_add_e"], [511, 4, 1, "", "u_add_e_max"], [512, 4, 1, "", "u_add_e_mean"], [513, 4, 1, "", "u_add_e_min"], [514, 4, 1, "", "u_add_e_sum"], [515, 4, 1, "", "u_add_v"], [516, 4, 1, "", "u_div_e"], [517, 4, 1, "", "u_div_e_max"], [518, 4, 1, "", "u_div_e_mean"], [519, 4, 1, "", "u_div_e_min"], [520, 4, 1, "", "u_div_e_sum"], [521, 4, 1, "", "u_div_v"], [522, 4, 1, "", "u_dot_e"], [523, 4, 1, "", "u_dot_v"], [524, 4, 1, "", "u_mul_e"], [525, 4, 1, "", "u_mul_e_max"], [526, 4, 1, "", "u_mul_e_mean"], [527, 4, 1, "", "u_mul_e_min"], [528, 4, 1, "", "u_mul_e_sum"], [529, 4, 1, "", "u_mul_v"], [530, 4, 1, "", "u_sub_e"], [531, 4, 1, "", "u_sub_e_max"], [532, 4, 1, "", "u_sub_e_mean"], [533, 4, 1, "", "u_sub_e_min"], [534, 4, 1, "", "u_sub_e_sum"], [535, 4, 1, "", "u_sub_v"], [536, 4, 1, "", "v_add_e"], [537, 4, 1, "", "v_add_u"], [538, 4, 1, "", "v_div_e"], [539, 4, 1, "", "v_div_u"], [540, 4, 1, "", "v_dot_e"], [541, 4, 1, "", "v_dot_u"], [542, 4, 1, "", "v_mul_e"], [543, 4, 1, "", "v_mul_u"], [544, 4, 1, "", "v_sub_e"], [545, 4, 1, "", "v_sub_u"]], "dgl.optim.pytorch": [[10, 1, 1, "", "SparseAdagrad"], [10, 1, 1, "", "SparseAdam"]], "dgl.sampling": [[564, 1, 1, "", "PinSAGESampler"], [565, 4, 1, "", "global_uniform_negative_sampling"], [566, 4, 1, "", "node2vec_random_walk"], [567, 4, 1, "", "pack_traces"], [568, 4, 1, "", "random_walk"], [569, 4, 1, "", "sample_labors"], [570, 4, 1, "", "sample_neighbors"], [571, 4, 1, "", "sample_neighbors_biased"], [572, 4, 1, "", "select_topk"]], "dgl.sampling.PinSAGESampler": [[564, 2, 1, "", "__init__"]], "dgl.sparse": [[12, 1, 1, "", "SparseMatrix"], [613, 4, 1, "", "add"], [614, 4, 1, "", "bsddmm"], [615, 4, 1, "", "bspmm"], [616, 4, 1, "", "diag"], [617, 4, 1, "", "div"], [618, 4, 1, "", "from_coo"], [619, 4, 1, "", "from_csc"], [620, 4, 1, "", "from_csr"], [621, 4, 1, "", "identity"], [622, 4, 1, "", "matmul"], [623, 4, 1, "", "mul"], [624, 4, 1, "", "power"], [625, 4, 1, "", "sddmm"], [626, 4, 1, "", "softmax"], [627, 4, 1, "", "sp_add_v"], [628, 4, 1, "", "sp_broadcast_v"], [629, 4, 1, "", "sp_div_v"], [630, 4, 1, "", "sp_mul_v"], [631, 4, 1, "", "sp_sub_v"], [632, 4, 1, "", "spmatrix"], [633, 4, 1, "", "spmm"], [634, 4, 1, "", "spspmm"], [635, 4, 1, "", "sub"], [636, 4, 1, "", "val_like"]], "dgl.sparse.SparseMatrix": [[582, 3, 1, "", "T"], [583, 2, 1, "", "coalesce"], [584, 3, 1, "", "col"], [585, 2, 1, "", "coo"], [586, 2, 1, "", "cpu"], [587, 2, 1, "", "csc"], [588, 2, 1, "", "csr"], [589, 2, 1, "", "cuda"], [590, 3, 1, "", "device"], [591, 2, 1, "", "double"], [592, 3, 1, "", "dtype"], [593, 2, 1, "", "float"], [594, 2, 1, "", "has_duplicate"], [595, 2, 1, "", "indices"], [596, 2, 1, "", "int"], [597, 2, 1, "", "long"], [598, 2, 1, "", "neg"], [599, 3, 1, "", "nnz"], [600, 2, 1, "", "reduce"], [601, 3, 1, "", "row"], [602, 3, 1, "", "shape"], [603, 2, 1, "", "smax"], [604, 2, 1, "", "smean"], [605, 2, 1, "", "smin"], [606, 2, 1, "", "softmax"], [607, 2, 1, "", "sum"], [608, 2, 1, "", "t"], [609, 2, 1, "", "to"], [610, 2, 1, "", "to_dense"], [611, 2, 1, "", "transpose"], [612, 3, 1, "", "val"]], "dgl.transforms": [[654, 1, 1, "", "AddEdge"], [655, 1, 1, "", "AddMetaPaths"], [656, 1, 1, "", "AddReverse"], [657, 1, 1, "", "AddSelfLoop"], [658, 1, 1, "", "BaseTransform"], [659, 1, 1, "", "Compose"], [660, 1, 1, "", "DropEdge"], [661, 1, 1, "", "DropNode"], [662, 1, 1, "", "FeatMask"], [663, 1, 1, "", "GCNNorm"], [664, 1, 1, "", "GDC"], [665, 1, 1, "", "HeatKernel"], [666, 1, 1, "", "KHopGraph"], [667, 1, 1, "", "LapPE"], [668, 1, 1, "", "LineGraph"], [669, 1, 1, "", "NodeShuffle"], [670, 1, 1, "", "PPR"], [671, 1, 1, "", "RandomWalkPE"], [672, 1, 1, "", "RemoveSelfLoop"], [673, 1, 1, "", "RowFeatNormalizer"], [674, 1, 1, "", "SIGNDiffusion"], [675, 1, 1, "", "SVDPE"], [676, 1, 1, "", "ToLevi"], [677, 1, 1, "", "ToSimple"]], "dgl.udf.EdgeBatch": [[678, 2, 1, "", "batch_size"], [679, 3, 1, "", "data"], [680, 3, 1, "", "dst"], [681, 2, 1, "", "edges"], [682, 3, 1, "", "src"]], "dgl.udf.NodeBatch": [[683, 2, 1, "", "batch_size"], [684, 3, 1, "", "data"], [685, 3, 1, "", "mailbox"], [686, 2, 1, "", "nodes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [4, 5, 8, 11, 22, 34, 35, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 73, 74, 87, 88, 90, 93, 94, 100, 103, 107, 113, 122, 125, 130, 131, 151, 152, 161, 163, 167, 168, 180, 182, 183, 188, 208, 210, 213, 220, 221, 230, 231, 233, 235, 240, 241, 242, 243, 245, 246, 287, 290, 295, 299, 300, 303, 307, 312, 321, 324, 331, 340, 341, 345, 346, 357, 358, 397, 405, 407, 411, 420, 421, 423, 444, 464, 481, 482, 506, 507, 546, 562, 569, 570, 571, 573, 576, 580, 581, 667, 694, 695, 697, 698, 699, 701, 703, 705, 708, 710, 713, 714, 715, 716, 718, 719, 726, 728, 729, 731, 733, 735, 736, 738, 760, 781, 788, 793, 802, 812, 813, 819, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 836, 837, 840, 841, 847, 851, 854, 855, 858, 859, 860, 864, 867, 870, 871, 876, 877], "0": [0, 4, 5, 6, 9, 10, 14, 20, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 207, 210, 213, 214, 216, 217, 219, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 290, 292, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 315, 319, 321, 322, 323, 328, 330, 333, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 361, 363, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 480, 481, 482, 483, 484, 508, 509, 546, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 583, 586, 587, 588, 589, 591, 593, 594, 596, 597, 600, 603, 604, 605, 606, 607, 609, 613, 614, 615, 616, 617, 619, 620, 621, 622, 623, 624, 625, 626, 628, 633, 634, 635, 639, 640, 641, 642, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 695, 696, 697, 699, 700, 701, 702, 703, 707, 708, 709, 710, 711, 717, 719, 720, 721, 722, 723, 725, 727, 728, 731, 732, 733, 734, 736, 737, 738, 742, 743, 745, 746, 748, 751, 752, 753, 754, 755, 761, 763, 764, 765, 766, 768, 771, 772, 773, 774, 776, 777, 778, 782, 783, 785, 786, 787, 788, 789, 792, 793, 794, 795, 796, 803, 805, 806, 807, 808, 809, 811, 812, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 830, 832, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 853, 854, 855, 857, 858, 859, 860, 861, 863, 864, 866, 867, 869, 870, 871, 873, 875, 876, 877, 879], "00": [25, 348, 639, 675, 826, 827, 830, 832, 835, 849, 853, 857, 863, 866, 869, 873, 875, 879], "000": [14, 146, 147, 169, 173, 174, 191, 195, 826, 832, 834, 850, 851, 853, 854, 855, 857, 871, 873, 875], "0000": [9, 118, 173, 363, 397, 405, 416, 421, 426, 431, 484, 556, 600, 604, 606, 617, 626, 663, 667, 671, 825, 829], "00000": [835, 858, 859, 861, 864], "000000": 825, "000007645": 851, "00001": [835, 858, 859, 861, 864], "00002": [835, 858, 859, 861, 864], "00003": [835, 858, 859, 861, 864], "00004": [835, 858, 859, 861, 864], "00005": [858, 859, 861, 864], "00006": [858, 859, 861, 864], "00007": [858, 859, 861, 864], "00008": [858, 859, 861, 864], "00009": [858, 859, 861, 864], "0000e": [348, 639, 675], "00010": [858, 859, 861], "00011": [858, 859, 861], "00012": [858, 859, 861], "00013": [858, 859, 861], "00014": [858, 859, 861], "00015": [858, 859, 861], "00016": [858, 859, 861], "00017": [858, 859, 861], "00018": [858, 859, 861], "00019": [858, 859, 861], "00020": [858, 859, 861], "00021": [858, 859, 861], "00022": [858, 859, 861], "00023": [858, 859, 861], "00024": [858, 859, 861], "00025": [858, 861], "00026": [858, 861], "00027": [858, 861], "00028": [858, 861], "00029": [858, 861], "00030": 858, "00031": 858, "00032": 858, "00033": 858, "00034": 858, "00035": 858, "00036": 858, "00037": 858, "00038": 858, "00039": 858, "00040": 858, "00041": 858, "00042": 858, "00043": 858, "00044": 858, "00045": 858, "00046": 858, "00047": 858, "00048": 858, "00049": 858, "0005": [434, 436], "001": [4, 10, 461, 571, 826, 827, 834, 835, 854, 855], "0012": 840, "0019": 841, "002": [14, 826, 834, 861], "002158116134429955": 695, "0028": 445, "003": [14, 564, 826, 832, 844, 876, 879], "0039": 858, "004": [14, 826, 844], "0040": 858, "005": [432, 433, 826, 844], "0053": 841, "006": [14, 826, 844, 861], "007": [14, 826, 844], "0070": 840, "00743445923710373": 695, "008": [14, 826, 844], "0081": 829, "0083": 841, "008790817766266334": 695, "0088": 829, "0089": 416, "009": [14, 826, 844], "0093": [826, 840], "00982": [146, 147, 169, 174, 195], "0099": 446, "01": [142, 143, 189, 348, 389, 432, 433, 434, 436, 639, 675, 723, 832, 842, 844, 845, 846, 849, 859, 863, 866, 871, 876, 877], "010": [14, 826, 844], "0100": 859, "011": [14, 826, 844], "0118": 416, "0119": 840, "012": [826, 844], "01217200152200748": 695, "0129": 414, "013": [826, 844], "01315": 830, "0133": 837, "0134": 464, "014": [14, 826, 844], "01404": 162, "0142": [441, 442, 443, 444, 445, 446, 447, 448, 449], "0145": 444, "0148": 830, "015": [14, 826, 832, 843, 844, 849], "0152": 830, "0155": 424, "0156": [445, 829, 830], "0158": 829, "016": [14, 826], "0163": 670, "0164": 399, "0167": 837, "0169": 464, "017": [14, 826, 844], "0177": 826, "018": [826, 844], "0180": [606, 626], "0184": 401, "0185": 830, "0187": 840, "019": [14, 826], "0192": 830, "01973": 564, "02": [832, 863], "0200": 664, "0201": 826, "0205": 840, "0207": 416, "0212": 829, "0217": 670, "0218": 829, "0219": 404, "022": 844, "02216": 727, "0224": 858, "023": [14, 844], "0235": 444, "0239": 414, "0242": 829, "02427121": 840, "0243": 840, "0245": 829, "025": [393, 861], "0255": 670, "026": 14, "0268": [407, 413], "0276": 445, "0278": 667, "0285": 826, "029": 844, "0297": [651, 652], "0298": 829, "03": 835, "030": 14, "0307": 841, "0315": [407, 413, 840], "0331": 826, "03348": 452, "0340": [826, 858], "0341": 464, "0359": 859, "0361": 826, "0365": 858, "03671": 850, "0375": 421, "0376": 444, "0381": 837, "03819": 871, "0383": 670, "0386": 695, "038622249776255946": 695, "039": 14, "0390": [407, 413], "0393": 858, "03d": [826, 834], "03f": 837, "04": [14, 400, 401, 402, 823, 832, 849], "040": 173, "0400": 664, "0401": 406, "0403": 841, "04034482": 841, "0406": [420, 665], "0409": 829, "041": 844, "0413": 840, "04132349": 840, "04133991340612775": 695, "0415": 841, "0423": 858, "0424": 829, "0425": 420, "0428": 445, "0429": [826, 837], "043": 136, "0430": 840, "043591": 847, "0438": 837, "0442": 830, "0448": 464, "04486384200747007": 695, "045": 14, "0451": 826, "0456": 858, "04573": 436, "0461": 445, "0470": 445, "0478": 841, "04781312": 841, "0483": 444, "0483e": 348, "0487": 859, "04876218": 840, "04878384701995819": 695, "0488": 840, "0489": 826, "0490": 840, "0493": 858, "049629338970987646": 695, "04it": 826, "05": [464, 670, 674, 707, 751, 792, 861, 864], "0500": 837, "0510": 670, "0515": 837, "05152": 437, "0523": [420, 837, 840], "0527": 404, "05287": 134, "0533": 858, "0535": 840, "05354099924658973": 695, "0539": [651, 652], "054": [14, 159, 173], "054016385555202384": 695, "0541": [416, 665], "0543": [407, 413], "0544": [128, 129], "055": 842, "0553": 830, "0556": [464, 825], "0560": 841, "0563": 841, "0564": 837, "0568": 829, "0574": 829, "0575": 843, "0577": 858, "058": [14, 830], "0580": [420, 441, 442, 443, 444, 445, 446, 447, 448, 449], "0584": 840, "0588": 825, "0589": 829, "0591": 118, "059172654879085296": 695, "0596": 414, "05d": [835, 858, 859, 861, 864, 877], "06": [25, 830], "060": [14, 844], "0600": [173, 664], "0608": 448, "0613": 843, "0616": 829, "0624": 840, "0626": 858, "0629": 841, "0630": [433, 837], "0634": 446, "0638": 670, "064": 844, "0643": 826, "0645": 840, "0654": 825, "0663": 840, "06630141": 840, "0668": 843, "0677": 837, "0680": 858, "0699": [441, 442, 443, 444, 445, 446, 447, 448, 449], "07": [639, 675], "0711e": 348, "0718": 829, "0720": 840, "0721": 829, "0724": [128, 129], "0729": 449, "073": 161, "0731": 825, "0739": 858, "074": 14, "0746": 829, "07502571020414439": 695, "0758": [416, 829], "0762": [407, 413], "0767": 825, "0769": 825, "077": 14, "07816474278491703": 695, "0783": [407, 413], "0794": 837, "0795": [829, 843], "08": [4, 10, 245, 481], "0800": 664, "0802": 829, "0804": [651, 652, 858], "0811": [826, 864], "0812": 665, "082": [832, 877, 879], "0822": 829, "0824": 837, "0832": 420, "0833": 9, "0835": 404, "0836": 825, "0845": 445, "0847": 837, "0849": 841, "085": 879, "0852": 835, "08543289788089736": 695, "0857": [420, 651, 652], "086": 14, "08638926": 840, "0864": 840, "08646544": 840, "0865": 840, "0868": 695, "08680051341900807": 695, "0869": 829, "08691420300562658": 695, "08692": 162, "0871": 837, "0875": 858, "0876": 401, "0880": [651, 652], "0888": 427, "0891": 825, "0898": 861, "08983": 871, "0899": 861, "08it": 835, "09": [830, 835], "0900": 861, "0901": [826, 861], "0902": 861, "0903": 861, "0904": 861, "0905": 861, "0906": 861, "0907": [840, 861], "0908": 861, "0909": 825, "0910": 861, "0911": 861, "0911194482288028": 695, "0912": 861, "0913": 446, "0915": [432, 861], "0917": 825, "0920": [446, 861], "0921": 861, "0922": 861, "0923": 840, "0928555079874982": 695, "0931": 837, "0932": 861, "0934": 861, "0935": 414, "0937": 432, "094": 844, "0943": 861, "0949": [826, 859, 861], "095": 842, "0952": 858, "0953": 825, "0961": 837, "0967": 840, "0981": 859, "0a0": 835, "0k": [178, 179], "0x7fec820937b8": [700, 746, 786], "0\ubd80\ud130": [788, 795, 796], "0\uc5d0": 788, "0\uc73c\ub85c": 807, "0\uc740": [787, 788], "0\uc744": 788, "0\uc774": [812, 815], "0\uc774\uace0": 788, "0\uc778": 815, "1": [1, 4, 5, 6, 9, 10, 12, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 139, 140, 142, 143, 146, 147, 148, 158, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 177, 183, 184, 186, 189, 190, 192, 195, 197, 198, 205, 207, 210, 214, 216, 217, 219, 226, 227, 229, 230, 231, 232, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 263, 264, 265, 266, 287, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 319, 320, 321, 322, 323, 328, 330, 332, 333, 334, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 357, 358, 360, 363, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 480, 481, 482, 483, 484, 505, 508, 509, 546, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 639, 640, 641, 642, 646, 647, 648, 649, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 694, 695, 696, 697, 699, 700, 701, 702, 704, 712, 713, 715, 716, 718, 720, 721, 722, 723, 724, 727, 728, 729, 731, 732, 733, 734, 736, 737, 739, 741, 742, 743, 745, 746, 748, 749, 756, 757, 759, 760, 762, 763, 764, 765, 766, 767, 769, 771, 772, 773, 774, 776, 777, 779, 781, 782, 783, 785, 786, 789, 790, 798, 801, 802, 804, 805, 806, 807, 808, 809, 810, 812, 813, 815, 816, 817, 818, 819, 820, 823, 824, 825, 826, 827, 830, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 846, 847, 851, 854, 855, 858, 859, 860, 866, 869, 871, 876, 877], "10": [4, 5, 6, 9, 10, 14, 20, 26, 130, 134, 135, 137, 142, 145, 146, 147, 149, 155, 159, 161, 163, 166, 168, 169, 171, 173, 174, 180, 182, 185, 187, 188, 192, 193, 195, 210, 214, 216, 219, 220, 246, 294, 295, 300, 301, 303, 304, 305, 310, 311, 312, 313, 317, 318, 319, 323, 341, 344, 345, 346, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 459, 460, 461, 463, 482, 508, 509, 546, 554, 555, 562, 564, 613, 616, 617, 623, 624, 628, 635, 648, 660, 662, 665, 669, 674, 695, 699, 700, 701, 711, 719, 720, 723, 725, 726, 727, 733, 734, 736, 737, 738, 745, 746, 755, 763, 773, 774, 776, 777, 778, 785, 786, 796, 805, 817, 818, 819, 820, 821, 823, 824, 825, 827, 829, 834, 835, 837, 840, 841, 842, 844, 845, 846, 854, 855, 858, 860, 861, 864, 867, 870, 871, 876, 877], "100": [9, 22, 172, 173, 174, 194, 287, 333, 393, 394, 432, 433, 435, 437, 438, 440, 450, 452, 453, 457, 554, 555, 624, 697, 707, 728, 734, 737, 738, 743, 751, 774, 777, 778, 783, 792, 807, 812, 818, 820, 821, 824, 826, 827, 832, 840, 841, 842, 844, 845, 860, 861, 863, 864, 867, 870, 871], "1000": [4, 9, 14, 141, 150, 154, 176, 205, 209, 217, 311, 393, 422, 617, 664, 677, 720, 721, 733, 734, 748, 773, 774, 789, 807, 817, 818, 824, 825, 826, 827, 840, 841, 842, 844, 845, 858, 860, 861, 871], "10000": [14, 132, 133, 144, 147, 170, 171, 174, 183, 195, 840, 841, 846], "100000": 173, "1000000": 240, "1002": 464, "1004": 829, "1008": 406, "100k": 173, "100x100": 171, "101": [184, 333, 438, 440, 705, 790, 840, 841, 864, 871], "1014": [128, 129], "10150": 161, "1018": 841, "102": [333, 438, 440, 824, 840, 841, 860, 864, 871], "1022": 564, "1023": 837, "1024": [168, 186, 210, 213, 214, 215, 216, 220, 691, 719, 722, 723, 725, 726, 727, 736, 763, 764, 766, 768, 776, 805, 806, 809, 811, 819, 835, 837, 854, 855, 877], "10240": 292, "1025": 837, "1029": 840, "10291973": 840, "103": [824, 840, 841, 864, 871], "1037": 858, "1037097085190507": 695, "1038000": 188, "1039": 667, "104": [840, 841, 864, 871], "1041": 185, "1043998": 788, "1046": 426, "1047": 826, "1048": 825, "105": [840, 841, 844, 864, 871], "1052": 695, "10522806046048205": 695, "10556": [25, 154, 824, 825, 827, 834, 842, 844, 845, 858, 860, 861], "106": [840, 841, 847, 864, 871], "1060": 172, "1063": 843, "1066": 118, "107": [840, 841, 864, 871], "1073972": 837, "1078": 858, "108": [14, 174, 840, 841, 864, 871], "1083": 665, "1084": 864, "1086": 695, "10864079337442234": 695, "1089": 564, "109": [840, 841, 864, 871], "10903": 775, "1092": 149, "1095": 830, "1099": 427, "10it": 835, "10m": 173, "11": [9, 14, 133, 161, 192, 295, 303, 312, 313, 432, 628, 648, 660, 661, 669, 728, 763, 805, 823, 824, 825, 826, 827, 829, 830, 835, 840, 841, 846, 860, 864, 871], "110": [840, 841, 844, 864, 871], "1104": 840, "1105977": 837, "1107": 418, "111": [840, 841, 864, 871], "1113": 25, "11158102039672668": 695, "11176768": 840, "1118": 840, "112": [840, 841, 842, 864, 871], "1123": 414, "1124": 837, "1126": 445, "1127": 826, "113": [840, 841, 864, 871], "1130": 858, "1134649": 788, "1135": 398, "1136": 837, "1138": 400, "1139": 464, "114": [181, 728, 824, 840, 841, 864, 871], "1140\uc5b5\uac1c\uc758": 812, "11446843700743892": 695, "1145": [134, 163, 173, 432, 695], "114615892": 25, "115": [840, 841, 844, 864, 871], "1150": 834, "1152": 841, "1154897249106891": 695, "1155": [414, 695], "1156": 414, "1157": 414, "11583": 837, "11584": 837, "11585": 837, "116": [840, 841, 864, 871], "11640": [137, 171, 180, 182, 188], "1166": 427, "117": [144, 147, 840, 841, 864, 871], "11701": 192, "1172": 840, "11758": 188, "1178": [25, 168, 186, 829], "118": [840, 841, 864, 871], "119": [136, 840, 841, 864, 871], "119046": 837, "1191": 564, "1192": 837, "1194614": 788, "119956": 837, "11d": 179, "11\ubc88": 805, "11\ubc88\uc5d0\uc11c": 805, "11\uc6d4": 797, "12": [9, 14, 79, 81, 178, 179, 295, 299, 302, 303, 312, 313, 408, 411, 418, 419, 432, 435, 437, 628, 660, 669, 728, 812, 823, 829, 830, 832, 834, 835, 837, 840, 841, 846, 860, 864, 867, 869, 871], "120": [150, 193, 840, 841, 844, 864, 871], "1200": 9, "1203": 703, "1203354": 788, "1208": 829, "1209": 398, "121": [175, 829, 840, 841, 861, 864, 871], "122": [840, 841, 844, 864, 871], "1220": 840, "1225": 840, "123": [14, 146, 192, 840, 841, 864, 871], "1230": 564, "1232": [829, 858], "12345": [835, 876, 877], "12346": 461, "1237": 826, "123718280": [4, 240], "124": [25, 840, 841, 864, 871], "12403": 305, "1244": 834, "125": [840, 841, 844, 864, 871], "1250": 9, "1252": 837, "126": [14, 153, 840, 841, 864, 871], "1261": 424, "1261310": 240, "1262": 446, "127": [461, 835, 840, 841, 850, 864, 871, 876, 877], "1277": 834, "128": [5, 165, 389, 393, 430, 437, 452, 720, 834, 840, 841, 864, 871], "1280188": 837, "1282": 564, "1283": 398, "12860": 703, "12861": 703, "1289": 564, "129": [840, 841, 858, 861, 864, 871], "1292": 840, "12k": 195, "13": [9, 135, 165, 194, 295, 303, 312, 313, 617, 660, 823, 826, 829, 834, 835, 837, 840, 841, 842, 860, 864, 871], "130": [178, 179, 840, 841, 844, 864, 871], "1302": 837, "1304": 834, "1305": 834, "1306": 834, "130622": 25, "1307": 834, "1309": 426, "131": [840, 841, 864, 871], "1311": 432, "1315": 829, "132": [161, 840, 841, 864, 871], "1323": [651, 652], "1328": 118, "1329": 837, "133": [14, 840, 841, 842, 864, 871], "1330": 433, "133914": 837, "134": [840, 841, 842, 864, 871], "1342": 420, "1343": 840, "1344": 858, "1349": [444, 840], "13490751": 840, "135": [14, 840, 841, 844, 864, 871], "1353": 665, "1355": 843, "136": [25, 145, 840, 841, 864, 871], "1361": [444, 667], "1363": 829, "1364": 695, "1364240150959487": 695, "1368": 840, "137": [840, 841, 864, 871], "1371": 416, "1372": 840, "13724295": 840, "1373e": [639, 675], "13752": 25, "1376": 420, "1377": [418, 829], "13774964202156292": 695, "1378": 837, "138": [840, 841, 864, 871], "1388": 420, "139": [840, 841, 864, 871], "1393": 695, "1393107840629273": 695, "1395": 416, "1397": 829, "14": [14, 158, 177, 295, 302, 312, 313, 661, 697, 743, 783, 829, 834, 835, 837, 840, 841, 860, 864, 871], "140": [132, 154, 824, 825, 827, 840, 841, 842, 844, 845, 858, 860, 861, 864, 871], "1404": 840, "1408": 416, "141": [840, 841, 864, 871], "141442": 191, "142": [840, 841, 864, 871], "1428": 826, "1428571492433548": 120, "14289499": 841, "1429": [825, 841], "143": [840, 841, 842, 864, 871], "1431": 25, "1433": [154, 824, 825, 827, 842, 844, 845, 858, 860, 861], "144": [840, 841, 844, 864, 871], "1440": 426, "145": [25, 840, 841, 844, 864, 871], "14541": 157, "1457": 829, "145749": 837, "1458": [651, 652], "146": [840, 841, 846, 864, 871], "14620": 837, "14623": 837, "14627": 837, "14627522432017592": 695, "1466": [843, 858], "1469": 829, "147": [163, 824, 840, 841, 864, 871], "1475": 841, "1477": 837, "1479": [407, 413], "148": [14, 840, 841, 864, 871], "148100": 170, "149": [840, 841, 846, 864, 871], "1496": 432, "1498": 859, "15": [9, 14, 25, 151, 164, 177, 210, 214, 216, 219, 220, 295, 305, 310, 312, 313, 317, 318, 408, 411, 508, 657, 660, 670, 708, 719, 728, 812, 824, 829, 830, 834, 837, 840, 841, 842, 844, 845, 847, 850, 860, 864, 871], "150": [840, 841, 844, 864, 870, 871], "1500": 670, "1505": 564, "151": [840, 841, 864, 871], "1516": 420, "152": [840, 841, 864, 871], "1520": [134, 651, 652], "15218126307872892": 695, "1526": 840, "153": [181, 840, 841, 864, 871], "1533": [564, 840], "1535": 829, "154": [829, 840, 841, 864, 871], "1544": 841, "155": [840, 841, 844, 864, 871], "1557019": 134, "1557108": 134, "1559": 418, "156": [25, 167, 840, 841, 844, 847, 864, 871], "1560": 614, "1561": 841, "15694736": 788, "157": [159, 840, 841, 864, 871], "158": [14, 824, 840, 841, 844, 864, 871], "1580": 843, "1582": 837, "1583": 841, "1585": 834, "159": [840, 841, 844, 864, 871], "1594": [407, 413], "1599": 858, "15k": [178, 179], "15\u884c\u547d\u540d\u4e3a": 752, "15\uc5d0\uc11c": 793, "16": [165, 168, 172, 183, 186, 195, 348, 449, 450, 451, 452, 453, 454, 455, 464, 556, 671, 704, 708, 728, 748, 789, 812, 823, 824, 826, 827, 829, 830, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 850, 854, 858, 859, 860, 864, 867, 871], "160": [840, 841, 842, 844, 864, 871], "1603": [840, 871], "1605": 841, "1606": 829, "1607": 420, "161": [14, 840, 841, 864, 871], "1612763": 837, "16168914": 841, "1617": 841, "162": [840, 841, 864, 871], "163": [136, 151, 840, 841, 864, 871], "1639": [564, 840], "164": [825, 840, 841, 864, 871], "1646": 418, "165": [829, 840, 841, 844, 864, 871], "1654": 837, "1655": 837, "1658": 564, "166": [840, 841, 864, 871], "1664": 185, "1667": 9, "167": [14, 840, 841, 864, 871], "16738734": 788, "1678": 446, "168": [840, 841, 854, 864, 871], "1681403185591509": 695, "1682": 173, "168318": 837, "16846068931179736": 695, "1685": 840, "169": [840, 841, 864, 871], "1690": 402, "1691": 843, "1695": 826, "1696": 433, "16974127573016262": 695, "1699": 859, "16gb": [14, 728, 812], "16\uc904": 793, "17": [14, 25, 182, 348, 661, 829, 834, 835, 837, 840, 841, 860, 864, 871], "170": [14, 837, 840, 841, 844, 864, 871], "1706": 727, "171": [840, 841, 864, 871], "1710": 775, "1714": 840, "1715": 834, "172": [703, 704, 748, 789, 840, 841, 864, 871], "173": [14, 840, 841, 846, 864, 871], "1735": [432, 614], "1737": 840, "17372012": 840, "174": [840, 841, 864, 871], "1741": 840, "1744": 858, "1745": 564, "1748": 840, "175": [704, 748, 789, 840, 841, 844, 864, 871], "1752": [651, 652], "17535": 157, "1754": 834, "17583413999295983": 695, "176": [840, 841, 864, 871], "177": [840, 841, 864, 871], "1777": 840, "178": [840, 841, 844, 864, 871], "1780": 448, "1785": 433, "1789": 445, "179": [14, 832, 840, 841, 859, 863, 864, 871], "17949803": 840, "1795": [840, 864], "18": [9, 14, 151, 182, 191, 508, 628, 660, 708, 829, 835, 840, 841, 846, 860, 864, 871], "180": [840, 841, 844, 864, 871], "1804": 416, "1806": 564, "1806445": 837, "1807": 871, "1808": 834, "1809": 399, "181": [840, 841, 864, 871], "1816": 840, "1817": 834, "1818": [564, 617], "182": [14, 840, 841, 844, 864, 871], "1825": 840, "18283": 837, "183": [155, 187, 840, 841, 864, 871], "18333": 25, "1835": [420, 837], "18389137408509248": 695, "1839": 695, "184": [464, 840, 841, 864, 871], "1843": 695, "18431292077750894": 695, "1845": 829, "1847": 432, "1849": 412, "1849222": 837, "185": [840, 841, 844, 864, 871], "1850": 414, "186": [840, 841, 864, 871], "186100": 137, "18626464175355095": 695, "1864": 829, "1867": 840, "18671899": 840, "187": [703, 840, 841, 864, 871], "18716985": 841, "1872": 841, "1877": 464, "188": [25, 165, 174, 840, 841, 864, 871], "18857794": 841, "1886": 841, "189": [840, 841, 864, 871], "18th": 182, "18\uc904\uc744": 793, "19": [138, 153, 179, 312, 313, 660, 703, 704, 748, 789, 829, 834, 835, 837, 840, 841, 860, 864, 871], "190": [147, 840, 841, 844, 864, 871], "1902": 445, "1904": 858, "1908": 414, "1909": 830, "191": [840, 841, 864, 871], "19117861103555467": 695, "1913": 829, "192": [840, 841, 854, 864, 871], "1925": 410, "192640": 25, "192it": 835, "193": [464, 840, 841, 864, 871], "193011360": 703, "1931": [651, 652], "1932390907048961": 695, "1939": 433, "1939743": 788, "194": [840, 841, 864, 871], "1943": 418, "1944": 829, "195": [840, 841, 842, 844, 864, 871], "1950": 829, "1951": 564, "1952": 402, "19536": [184, 864], "1954": 667, "196": [464, 840, 841, 864, 871], "1966": 433, "197": [840, 841, 864, 871], "19717": [25, 176], "19793": 25, "198": [133, 829, 832, 840, 841, 845, 849, 864, 871], "199": [840, 841, 864, 871], "1996": 446, "19989": 840, "1999": [840, 841], "19994": 840, "19999998807907104": 351, "1_gcn": [832, 858, 863], "1_gnn": [832, 860, 863], "1_graph_classif": [832, 876, 879], "1_introduct": [832, 842, 849], "1_node_classif": [832, 854, 857], "1d": [48, 51, 53, 54, 61, 88, 122, 131, 214, 216, 219, 232, 239, 240, 287, 299, 305, 310, 317, 318, 328, 333, 334, 340, 394, 401, 408, 413, 423, 426, 484, 547, 634], "1e": [4, 10, 245, 432, 436, 437, 481, 727, 728, 812, 824, 858, 860, 861, 864, 871], "1gb": [721, 807], "1m": 173, "1\u5b57\u7b26\u4e32": 741, "1\u8282": 749, "1\u8282\u4e2d": 765, "1\u8282\u4e2d\u5bf9\u5f02\u6784\u56fe\u7684\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": [774, 777], "1\u8282\u4e2d\u5bf9\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": 774, "1\u8282\u7684gnn\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a": [774, 777], "1\uc5d0": 788, "1\uc740": 788, "1\uc744": 788, "1\uc7a5": 797, "1\uc808\uc758": 790, "1\ucc28\uc6d0": 795, "2": [4, 5, 6, 9, 10, 12, 14, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 146, 147, 159, 161, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 183, 184, 186, 188, 189, 190, 197, 205, 207, 216, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 319, 320, 321, 322, 323, 330, 333, 334, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 357, 358, 363, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 463, 464, 480, 481, 482, 483, 484, 505, 508, 546, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 639, 640, 641, 642, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 692, 695, 699, 700, 702, 705, 707, 708, 709, 711, 712, 718, 719, 721, 723, 724, 725, 726, 728, 729, 733, 736, 738, 739, 745, 747, 748, 749, 751, 752, 753, 755, 756, 757, 762, 763, 765, 766, 767, 768, 769, 773, 776, 777, 778, 779, 785, 788, 789, 790, 792, 793, 794, 796, 798, 804, 805, 807, 808, 809, 810, 811, 812, 813, 817, 819, 821, 822, 823, 824, 825, 826, 827, 830, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 851, 853, 854, 855, 857, 858, 859, 860, 871, 873, 876, 877, 879], "20": [9, 25, 130, 161, 162, 171, 172, 174, 175, 181, 192, 209, 235, 303, 312, 313, 323, 408, 411, 417, 419, 422, 424, 434, 435, 436, 437, 445, 446, 556, 613, 623, 624, 628, 635, 654, 660, 661, 671, 673, 674, 701, 703, 734, 736, 737, 738, 774, 776, 777, 778, 818, 819, 820, 821, 823, 824, 826, 829, 832, 835, 840, 841, 842, 844, 845, 846, 849, 860, 861, 864, 867, 870, 871], "200": [200, 333, 564, 701, 787, 825, 830, 840, 841, 844, 864, 871], "2000": [4, 9, 126, 250, 677, 826, 840], "20000": 840, "2001": 829, "2002": [118, 134, 167, 414], "2003": [146, 147, 169, 174, 195], "2005": 161, "2008": 162, "200\uac1c": 787, "201": [333, 840, 841, 864, 871], "2010": 444, "2011": 436, "2012": 858, "2014": 181, "2015": [135, 136, 414, 823, 864], "2016": [151, 152], "2017": [824, 826, 834, 835, 837, 840, 841, 844], "2018": [164, 166, 564, 695, 844], "20181320245665535": 695, "2019": 823, "202": [333, 840, 841, 864, 871], "2020": [826, 834, 837, 840, 841], "2020\u5e749\u6708": 756, "2021\ub144": 797, "2022": [834, 837, 840, 841], "2023": [214, 299, 305, 317, 569, 835], "2024": [834, 837, 840, 841], "203": [840, 841, 864, 871], "204": [840, 841, 864, 871], "2040": 829, "20466": 157, "2048": 453, "205": [703, 704, 748, 789, 840, 841, 864, 871], "2050": 840, "2053": [441, 442, 443, 444, 445, 446, 447, 448, 449], "206": [840, 841, 847, 864, 871], "2062": 464, "2066": [829, 843], "2069": 829, "207": [464, 840, 841, 864, 871], "2070": 829, "208": [464, 840, 841, 864, 871], "2080": [448, 858], "2085": 410, "209": [173, 464, 840, 841, 864, 871], "2095": [414, 841], "2097": 834, "20gb": 235, "20x10": 870, "21": [14, 162, 312, 313, 628, 703, 829, 830, 834, 835, 837, 840, 841, 860, 864, 871], "210": [184, 840, 841, 864, 871], "2100": 829, "2101": 410, "2102": [415, 437], "2104": 162, "2105": 840, "2106": 420, "2108": 452, "211": [177, 840, 841, 864, 871], "2110": 564, "2116": 859, "2118": 840, "21184634": 840, "212": [840, 841, 864, 871], "21209": 25, "2125": [420, 840], "21250717341899872": 845, "213": [464, 840, 841, 864, 871], "2134": 416, "2136": 445, "21394654203489705": 695, "214": [840, 841, 864, 871], "2144": 840, "21441886": 840, "21474836480": 235, "215": [840, 841, 864, 871], "2154": 432, "2159": 405, "216": [161, 192, 824, 840, 841, 864, 871], "2162it": 835, "2167": 433, "217": [840, 841, 864, 871], "217073": 185, "2173": 829, "2175": 834, "2176": [834, 837], "2178": 421, "2179": 840, "218": [840, 841, 864, 871], "2182": [414, 829], "2183": 840, "21833968": 840, "219": [840, 841, 864, 871], "2192": 840, "21937428942781778": 695, "2194": 449, "21st": 864, "22": [14, 25, 829, 840, 841, 864, 871], "220": [464, 840, 841, 864, 871], "2207": 841, "2208": 812, "2209": 812, "221": [840, 841, 864, 871], "2212": 834, "22131880861864428": 695, "22155005": 788, "2216": 433, "2219": 841, "222": [840, 841, 864, 871], "2222": 9, "22296293": 703, "223": [840, 841, 864, 871], "2235": 432, "224": [840, 841, 864, 871], "2240": 398, "2242": 834, "2245": 25, "225": [464, 840, 841, 864, 871], "22575532": 841, "2258": 841, "226": [840, 841, 864], "22662": 182, "2267": 843, "227": [840, 841, 864], "2272": [420, 858], "2277": [149, 837], "228": [14, 840, 841, 864], "2282": 448, "2284": 464, "2289": [398, 834], "229": [840, 841, 864], "2291": [444, 445], "23": [181, 195, 400, 401, 402, 703, 704, 707, 748, 751, 789, 792, 829, 835, 840, 841, 864, 871], "230": [564, 840, 841, 864], "2302": [137, 171, 180, 182, 188], "2303": 420, "23033": [25, 166], "2304": 25, "2306": 834, "231": [840, 841, 864], "2310": 305, "2314": 840, "23142237259162102": 695, "232": [163, 181, 840, 841, 842, 864], "23221136629581451": 845, "2324": 444, "2326": 418, "232965": 25, "233": [840, 841, 864], "2330": 464, "2336": 840, "23368113896545695": 695, "2337": 695, "2338": 398, "234": [464, 840, 841, 864], "2340": 400, "2342": 410, "2347": 410, "2348": 433, "235": [840, 841, 864], "2351": [441, 442, 443, 444, 445, 446, 447, 448, 449], "2353726": 837, "236": [840, 841, 864], "2360": [449, 834], "2361": [834, 843], "2362": [432, 834], "2363": 446, "23682038840665198": 695, "237": [157, 840, 841, 864], "2370": 399, "2372": [175, 861], "2373": 564, "238": [136, 840, 841, 864], "2384": 412, "2387": 416, "239": [464, 840, 841, 864], "24": [166, 175, 440, 628, 654, 829, 835, 840, 841, 861, 864, 871], "240": [25, 166, 464, 840, 841, 842, 864], "2400": 840, "2402": 850, "2408": 564, "241": [840, 841, 864], "2415": 843, "2417": 442, "242": [840, 841, 864], "2426": [441, 442, 443, 444, 445, 446, 447, 448, 449], "2427": 834, "24285506608575758": 695, "243": [840, 841, 864], "2432": 134, "2436": 859, "244": [25, 826, 840, 841, 864], "2449029": [4, 240], "24492": 137, "245": [135, 177, 834, 840, 841, 864], "2450": 433, "2451": 415, "246": [840, 841, 864], "2461347": 837, "2467": 464, "2469": 420, "247": [152, 840, 841, 864], "2472495901894738": 695, "2473": 421, "248": [840, 841, 864], "2481": 405, "2482": 858, "2484": 837, "2486": 826, "249": [840, 841, 864], "249234": 837, "2493": 837, "2496": 185, "2497": 432, "25": [9, 147, 161, 408, 411, 439, 440, 464, 553, 699, 700, 745, 746, 785, 786, 824, 826, 829, 832, 840, 841, 842, 844, 845, 854, 855, 859, 860, 863, 864, 871], "250": [160, 464, 826, 840, 841, 864], "2500": [9, 617, 829], "2502": [427, 829, 840], "250k": 195, "251": [193, 840, 841, 864], "2513": 433, "25177597999572754": 245, "252": [840, 841, 864], "2520": 840, "2524": 420, "2524275481700897": 845, "253": [840, 841, 864], "2530": 667, "2531": 829, "2532": 840, "2533": 432, "253458867276219": 695, "2539": 840, "254": [840, 841, 864], "2541": 564, "255": [834, 840, 841, 854, 864], "2550": 858, "2556": 464, "256": [727, 728, 812, 825, 826, 834, 835, 840, 841, 854, 855, 864, 877], "2562": 834, "2564": 829, "257": [14, 840, 841, 864], "258": [840, 841, 864], "259": [840, 841, 864], "2597": 433, "26": [165, 829, 834, 835, 837, 840, 841, 864, 871], "260": [840, 841, 844, 864], "2607": 433, "261": [840, 841, 844, 864], "2611": 433, "262": [159, 840, 841, 864], "2622": 432, "263": [840, 841, 864], "2638": 432, "264": [840, 841, 864], "2643": 432, "2644": [420, 433], "2649": 432, "26499036865016423": 695, "265": [840, 841, 864], "2650": 695, "2652": 441, "2654": [418, 444, 464], "2658": 433, "2659": 464, "266": [840, 841, 864], "2663": 433, "2668": 841, "2669": 412, "267": [464, 840, 841, 864], "2675": 432, "268": [840, 841, 864], "2681": 840, "2684": 433, "2687": 564, "2688": [407, 413], "2689": [606, 626, 829], "269": [840, 841, 864], "2695": [651, 652], "27": [25, 635, 829, 840, 841, 864, 871], "270": [840, 841, 864], "2703": 444, "2706": 843, "2708": [25, 154, 824, 825, 827, 834, 842, 844, 845, 858, 860, 861], "2709": [441, 442, 443, 444, 445, 446, 447, 448, 449], "271": [464, 840, 841, 864], "2711": [840, 858], "2716": [433, 837], "27163": 170, "2719": 424, "272": [170, 840, 841, 864], "2721": [128, 129], "272115": 157, "27271804213523865": 845, "2729": 859, "273": [840, 841], "2730008213674695": 695, "2733": 432, "2734": [841, 843], "273542600896861": 846, "2738": [432, 433], "274": [840, 841, 864], "2743": 442, "27496277": 840, "275": [840, 841], "2750": 840, "2755": 864, "2757": 420, "276": [840, 841], "2763": 840, "27632724": 840, "2766": [651, 652], "2769": 840, "277": [163, 840, 841], "2775": 118, "278": [840, 841, 860], "2780": 433, "2783": 837, "2783258": 163, "2783370": 163, "2787": 464, "2789": 464, "279": [840, 841], "2794": 432, "2795": 829, "2796588354307046": 695, "2797": 421, "28": [9, 169, 195, 431, 829, 830, 837, 840, 841, 845, 849, 864, 871], "280": [840, 841], "2801": 829, "281": [840, 841, 846], "2811": 837, "282": [840, 841], "282119": 847, "2823": [433, 564, 837], "28236013": 840, "2824": 840, "2826": [667, 829, 840], "2828": [439, 553], "283": [824, 840, 841], "28357022069634585": 695, "28367647637469273": 695, "284": [25, 840, 841], "285": [840, 841], "2852": [410, 829, 840], "2855": 416, "2859": 840, "285932": 840, "286": [840, 841], "2861": 841, "2863627767733977": 695, "2864": 695, "287": [840, 841], "287326": 25, "2876": 433, "288": [164, 824, 840, 841], "2882": 464, "289": [832, 840, 841, 870, 873], "2899": 829, "29": [144, 195, 628, 703, 704, 748, 789, 829, 830, 840, 841, 863, 864, 871], "290": [840, 841], "29000": 871, "2905": 829, "2908": 433, "291": [840, 841], "2918": 564, "29185573": 840, "2919": 840, "292": [840, 841], "2923": 841, "2924": 840, "2927": 464, "293": [840, 841], "2931": 829, "29314538836479187": 845, "294": [840, 841], "2940": 858, "2942": 829, "2944": 841, "295": [840, 841], "29501": 850, "2953": 835, "2958": 829, "296": [826, 840, 841, 844], "2961": 858, "2962": 432, "29660083": 788, "297": [840, 841], "2976": 433, "298": [155, 178, 179, 840, 841, 842], "29846436": 840, "2985": 840, "299": [840, 841], "2994": [421, 445], "2998": 858, "2_capsul": [832, 870, 873], "2_dglgraph": [832, 843, 849], "2_link_predict": [832, 855, 857], "2_node_classif": [832, 877, 879], "2_small_graph": [832, 866], "2a240410": [834, 837, 840, 841], "2d": [299, 347, 394, 401, 423, 426, 457, 575], "2gb": [728, 812], "2k": 639, "2motif": 141, "2x3": 31, "2xlarg": 14, "2\uac1c\uc758": 788, "2\ub97c": 799, "2\ubc88\uc9f8": 805, "2\uc7a5": [797, 817, 821], "3": [4, 5, 6, 9, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 142, 143, 161, 169, 172, 173, 174, 176, 178, 179, 183, 190, 197, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 317, 319, 320, 321, 323, 330, 334, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 357, 358, 363, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 480, 481, 482, 483, 505, 508, 509, 546, 553, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 575, 576, 577, 580, 581, 583, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 639, 641, 642, 646, 647, 648, 649, 651, 652, 653, 657, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 673, 675, 676, 677, 683, 684, 685, 686, 687, 692, 695, 699, 702, 705, 707, 709, 710, 711, 712, 713, 718, 720, 721, 724, 727, 728, 733, 736, 738, 739, 745, 746, 749, 751, 753, 754, 755, 756, 757, 762, 763, 769, 773, 776, 778, 779, 785, 786, 788, 790, 792, 794, 795, 796, 798, 804, 805, 812, 813, 817, 819, 821, 823, 825, 827, 829, 834, 835, 837, 840, 841, 842, 843, 845, 846, 847, 851, 858, 859, 860, 871], "30": [25, 166, 181, 303, 408, 411, 419, 431, 459, 460, 464, 613, 623, 624, 628, 635, 728, 812, 824, 829, 840, 841, 842, 844, 845, 846, 861, 864, 871], "300": [137, 142, 143, 159, 182, 192, 194, 840, 841], "3000": [4, 126, 250, 564, 664, 733, 773, 817, 871], "3003": 871, "30050": [704, 748, 789, 854, 855], "301": [180, 840, 841], "3010": 841, "30104849": 841, "302": [840, 841], "3020": 441, "3025": [407, 413], "3027939452162367": 695, "3028": 695, "3029": 840, "303": [840, 841], "3030": [651, 652], "3039": 432, "304": [164, 832, 840, 841, 844], "3044": 840, "305": [161, 840, 841], "3053": 405, "3056": 859, "3058": 840, "30581515": 840, "306": [840, 841], "3061": 840, "3063": 420, "3068": 826, "307": [840, 841], "307080": 180, "3077": 859, "3078": 444, "308": [159, 840, 841], "3080": 421, "3082": 826, "3084": 829, "309": [840, 841], "3099": 841, "30k": 871, "30x": 850, "31": [118, 119, 164, 166, 703, 704, 710, 748, 754, 789, 795, 830, 835, 837, 840, 841, 864, 871], "310": [159, 840, 841], "31049427": 840, "3105": [445, 840], "311": [153, 840, 841], "3112": 829, "312": [840, 841], "3126": 464, "313": [840, 841], "31328748118329997": 695, "3134": [441, 442, 443, 444, 445, 446, 447, 448, 449], "31345158": 841, "3135": [433, 841], "3138270974159241": 845, "314": [159, 840, 841], "3148": 695, "3148264185956532": 695, "315": [840, 841], "316": [840, 841], "3160": 843, "3161154827254189": 695, "3163": 427, "3168": [651, 652], "317": [14, 840, 841], "3174": [651, 652], "318": [840, 841], "3189": 445, "319": [840, 841, 844], "3191": 415, "3192": 840, "32": [25, 146, 163, 172, 207, 343, 394, 422, 452, 464, 696, 710, 742, 754, 782, 795, 823, 830, 834, 837, 840, 841, 864, 871, 876], "320": [840, 841], "3203": 446, "321": [840, 841], "3219496197945605": 695, "322": [840, 841], "3225": 829, "323": [840, 841], "3231": [445, 840], "32312461": 840, "3235": 449, "3238": 858, "324": [840, 841], "3246e": [639, 675], "3247": 859, "325": [187, 840, 841], "326": [840, 841], "327": [840, 841], "327576": 25, "328": [840, 841], "329": [840, 841], "3291": 841, "3295": 401, "32it": 835, "32x": 850, "33": [613, 628, 829, 840, 841, 861, 864, 871], "330": [165, 840, 841], "3303": 426, "3304": 429, "3309": 829, "331": [840, 841], "3316": 428, "332": [840, 841], "33234211884156384": 695, "3325": 829, "3326": 421, "3327": [25, 150], "333": [151, 824, 840, 841], "3330": [441, 442, 443, 444, 445, 446, 447, 448, 449], "3333": [9, 363, 578, 579, 604, 663], "33391": 134, "334": [840, 841], "3342": 420, "3346": [651, 652], "33498287200927734": 845, "335": [840, 841], "336": [840, 841], "3364": 420, "337": [840, 841], "3371": 416, "338": [840, 841], "3381872773170471": 481, "339": [840, 841], "3391": 812, "33929432608774135": 695, "3394": 812, "34": [25, 152, 166, 167, 840, 841, 847, 864, 871], "340": [840, 841], "3400": 614, "341": [840, 841], "3419": 826, "342": [832, 840, 841, 867, 869], "3423": 829, "34270118": [702, 703], "343": [840, 841], "3430": 841, "3431": [829, 841], "34310793": 841, "3432": 829, "3439899477636117": 695, "344": [824, 840, 841], "3447": 420, "34493": 25, "345": [14, 158, 840, 841], "3455": [651, 652], "346": [840, 841], "3461": 840, "3462": 418, "3466": 410, "3468": 464, "347": [840, 841], "3477": 829, "348": [840, 841], "34846782265758314": 695, "3489": 667, "34895546": 840, "349": [840, 841], "3490": 840, "3491": 829, "3492": 840, "34923038": 840, "3496": 841, "34961098": 841, "3497": 421, "34it": 835, "35": [145, 147, 174, 824, 840, 841, 842, 844, 845, 846, 864, 871], "350": [142, 840, 841], "3500": 841, "3504": [858, 861], "35076354": 788, "351": [161, 840, 841], "3514": 412, "3516": 404, "352": [840, 841], "3521": 841, "3523777809254057": 695, "353": [824, 840, 841], "354": [840, 841], "3541": 421, "3546": 858, "355": [840, 841], "3550": 859, "356": [172, 840, 841], "3564": [829, 864], "35646113753318787": 845, "3569": 416, "357": [840, 841], "3571": 859, "3572": 841, "3575": 841, "358": [840, 841], "359": [14, 840, 841], "3594": 864, "3595": 843, "36": [132, 840, 841, 864, 871], "360": [832, 840, 841, 858, 863], "3604": 829, "361": [840, 841], "36101": 149, "362": [840, 841], "3623": 415, "3624": 859, "363": [834, 840, 841], "3637": [441, 442, 443, 444, 445, 446, 447, 448, 449], "3639": 837, "364": [840, 841], "3643": [464, 837], "3647": 837, "3648": 134, "365": [832, 840, 841, 847, 849], "3658": 412, "366": [840, 841], "3664": 399, "36649684241348557": 695, "3665": [449, 695], "367": [840, 841], "3672": 118, "36786902637778773": 695, "368": [840, 841], "3685": 405, "3688": 841, "369": [840, 841], "37": [155, 187, 195, 840, 841, 864, 871], "370": [840, 841], "3700": 414, "370293": 847, "3703": 150, "371": [840, 841], "3711": 829, "3717": 421, "372": [840, 841, 842], "373": [14, 840, 841], "3730": 840, "3736": 464, "3737": 446, "374": [840, 841], "3742": 840, "375": [840, 841], "3750": 841, "3756": 840, "3758": [401, 864], "376": [840, 841], "377": [840, 841], "3770": 614, "3772": 464, "3773": 843, "378": [840, 841, 863], "3780843913555145": 845, "3781": 420, "3782": 834, "3785": 834, "3786": 834, "3787": 840, "379": [14, 840, 841], "3796": 219, "38": [840, 841, 864, 871], "380": [840, 841], "3801": 829, "3803": 415, "3805": [407, 413], "3808": [651, 652], "3809": 420, "3809815": 840, "381": [840, 841], "3810": 840, "38128": 837, "382": [840, 841], "3820": 445, "3825": [407, 413], "3828": 829, "383": [840, 841], "3834": 840, "384": [164, 840, 841], "3840": 118, "3847": 420, "385": [840, 841], "3857": [837, 859], "3858": 837, "386": [840, 841], "3860": 859, "3866": 427, "387": [840, 841], "3872": [651, 652], "388": [824, 840, 841], "3889": 858, "389": [824, 840, 841], "3891": [441, 442, 443, 444, 445, 446, 447, 448, 449], "3893": 420, "39": [25, 163, 195, 464, 628, 834, 835, 837, 840, 841, 864, 871], "390": [840, 841], "391": [840, 841], "39161865931662243": 695, "392": [840, 841], "3929": 829, "393": [830, 840, 841], "3934": [651, 652], "3935": 843, "3938": 667, "394": [840, 841], "3943": [407, 413, 841], "3947": 864, "395": [840, 841], "39534097273254654": 695, "396": [840, 841], "3962": 840, "3964": 829, "397": [840, 841], "3973": 829, "3975": 840, "398": [830, 840, 841], "3985": 464, "39859931": 840, "3986": 840, "399": [830, 840, 841], "3990": 858, "3996": 426, "3999": 860, "39it": 835, "3_generative_model": [832, 869], "3_message_pass": [832, 844, 849], "3_tree": [832, 864, 866], "3d": [179, 347, 438, 440, 450, 452, 453, 457, 575], "3e": 825, "3f": [824, 825, 827, 834, 842, 844], "3x3": 829, "3\uac00\uc9c0": [783, 785, 809], "3\uac1c\uc758": [799, 808], "3\ub2e8\uacc4\ub85c": 815, "3\uc7a5": [797, 810, 817, 821], "4": [4, 5, 9, 12, 14, 20, 21, 22, 26, 27, 30, 34, 35, 36, 37, 46, 47, 51, 55, 56, 58, 60, 61, 73, 74, 75, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 107, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 132, 142, 143, 148, 172, 173, 195, 209, 210, 213, 214, 215, 216, 217, 219, 220, 229, 230, 240, 243, 244, 245, 246, 250, 287, 294, 295, 299, 300, 301, 302, 303, 304, 305, 310, 319, 320, 321, 323, 330, 334, 340, 341, 343, 344, 345, 346, 347, 349, 350, 351, 357, 363, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 454, 455, 456, 457, 458, 459, 460, 462, 464, 480, 481, 482, 509, 546, 553, 561, 562, 563, 566, 568, 569, 570, 573, 575, 580, 581, 583, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 613, 614, 616, 617, 618, 619, 620, 623, 624, 625, 626, 628, 632, 635, 636, 639, 646, 648, 649, 651, 652, 653, 662, 664, 665, 667, 669, 670, 673, 675, 676, 687, 699, 700, 703, 704, 705, 708, 709, 710, 711, 712, 718, 720, 721, 725, 727, 728, 733, 738, 739, 746, 747, 748, 749, 752, 753, 754, 755, 756, 762, 764, 766, 768, 773, 778, 779, 785, 786, 788, 790, 793, 794, 795, 796, 798, 804, 806, 809, 811, 812, 817, 821, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 842, 843, 844, 845, 847, 851, 854, 855, 860, 863, 864, 870, 871], "40": [138, 147, 159, 344, 389, 464, 623, 628, 824, 837, 840, 841, 842, 844, 845, 860, 864, 871], "400": [624, 701, 787, 840, 841, 867, 871], "4000": [173, 826, 829], "4000000": 210, "4002": 829, "4007": 464, "400\uac1c\uc758": 787, "401": [840, 841], "402": [840, 841, 842], "40200310945510864": 845, "4022": 414, "4028": 812, "4029": 860, "403": [840, 841], "4030": 841, "40304074": 841, "404": [840, 841], "4042": 445, "405": [840, 841], "40559906615287566": 695, "406": [564, 824, 840, 841], "4062": 841, "4063": 420, "407": [840, 841], "40707309111756307": 695, "408": [840, 841], "4081642382536248": 695, "409": [840, 841], "40943": 191, "4096": 420, "41": [159, 191, 830, 840, 841, 864, 871], "410": [168, 186, 824, 834, 840, 841], "4102c744bb9d6fd7b40ac67a300e49cd87e28392": [697, 743, 783], "4104": [147, 843], "411": [840, 841], "4111": [441, 442, 443, 444, 445, 446, 447, 448, 449], "41127": 138, "412": [840, 841], "4120": 843, "4122": 835, "4126": 420, "413": [840, 841], "4130": 829, "4131": 829, "4133": 841, "414": [840, 841], "415": [152, 840, 841], "41516080644186737": 695, "41527155506593394": 695, "416": [840, 841], "4162": 860, "4167": 9, "417": [840, 841], "418": [840, 841], "419": [14, 840, 841], "4195": 860, "4197669213305396": 695, "41it": 835, "42": [25, 198, 826, 840, 841, 864, 871], "420": [840, 841], "4200": 860, "421": [840, 841], "4216530595907526": 695, "422": [840, 841], "4220": 464, "4221": 421, "42222014": 788, "423": [840, 841], "424": [840, 841], "4240": 840, "42428281903266907": 845, "4249": [441, 442, 443, 444, 445, 446, 447, 448, 449, 829], "425": [834, 840, 841], "4252": 860, "4259": 860, "426": [834, 840, 841], "4260": 858, "42611": 837, "4268": 695, "4268254673041745": 695, "427": [840, 841], "4273": 414, "4279": [420, 860], "428": [840, 841], "4282": 840, "429": [840, 841], "4292": 840, "4293": 826, "42988138237505735": 695, "4299": 695, "43": [707, 751, 792, 840, 841, 864, 871], "430": [840, 841, 844], "431": [181, 192, 840, 841], "4318": [651, 652], "432": [14, 840, 841], "4322": 840, "4323": 426, "4325": [128, 129], "433": [840, 841], "4331": 401, "4334": 860, "4335": 401, "4338": 448, "434": [840, 841], "4349": [441, 442, 443, 444, 445, 446, 447, 448, 449], "435": [840, 841], "4351": 829, "4352": 860, "4359": 864, "436": [840, 841], "437": [840, 841], "438": [840, 841], "43806185": 841, "4381": 841, "439": [840, 841], "44": [174, 829, 830, 835, 840, 841, 864, 871], "440": [840, 841], "4400": 173, "4407": 835, "441": [840, 841], "442": [840, 841, 864], "4429": 840, "443": [840, 841], "444": [840, 841], "4440": 860, "44412796119211184": 695, "445": [14, 834, 840, 841], "4451": [651, 652], "4454": 860, "4457": 826, "4458": 420, "446": [840, 841], "4465": 416, "447": [840, 841], "4470617033458436": 695, "448": [840, 841, 844], "4482": 421, "449": [840, 841], "4496": [829, 843], "4497": 446, "45": [163, 464, 824, 840, 841, 842, 844, 845, 847, 850, 864, 871], "450": [824, 834, 840, 841], "4500966": 871, "45028555393218994": 845, "4507": 840, "45074314": 840, "4508": 667, "451": [840, 841], "4511": 448, "4518": 840, "452": [840, 841], "4522": 860, "4523600060547709": 695, "4529": 841, "453": [834, 840, 841], "454": [840, 841], "4542": [420, 464], "45441619816038514": 695, "4545": 837, "4549": 829, "455": [840, 841], "456": [149, 840, 841], "457": [14, 840, 841], "4570": [407, 413, 812], "4572": 826, "458": [840, 841], "4584": 840, "4587": 860, "459": [840, 841], "4590": 464, "46": [432, 830, 840, 841, 864, 871], "460": [840, 841, 844], "4600": 173, "4609": 812, "461": [840, 841], "462": [840, 841], "4620": [464, 858], "4629": [128, 129], "463": [840, 841], "4630": 464, "4631": 421, "464": [159, 840, 841], "4642": 840, "4647410679872376": 695, "465": [840, 841], "4652": [420, 829], "4653": [446, 858], "4654086994009452": 695, "466": [840, 841, 842], "4664": 118, "4669": 841, "467": [840, 841], "4673": 421, "468": [840, 841], "4682": 416, "4684": [826, 841], "469": [840, 841], "4692371689047904": 695, "4696": 840, "46963617": 840, "4698": 401, "47": [432, 564, 628, 834, 840, 841, 864, 871], "470": [840, 841], "4707": 840, "47099756": 840, "471": [840, 841], "4710": 840, "47117563": 840, "4712": 840, "4718": 829, "472": [824, 840, 841], "4721": [826, 840, 841], "4721299372462163": 837, "47224962583565544": 695, "4723": 860, "473": [840, 841], "4731": [667, 840], "47382": [168, 186], "474": [161, 832, 840, 841, 846, 849], "4741": 860, "4748": 837, "475": [840, 841], "4751": 840, "4754": 860, "4755": [441, 442, 443, 444, 445, 446, 447, 448, 449], "4756": 695, "47562693094002173": 695, "4758": 840, "476": [840, 841], "4760": 444, "4761": 829, "4762": 442, "4765": 841, "4766": 840, "477": [840, 841], "4770": 415, "4770019763881086": 695, "478": [14, 830, 840, 841], "4780917465686798": 845, "4785": 840, "4789": 841, "479": [840, 841], "4797": 404, "4798": 829, "48": [432, 840, 841, 864, 871], "480": [840, 841], "4800": 173, "4801": [407, 413], "4805": 414, "481": [824, 840, 841], "4815": 840, "4817": 464, "482": [840, 841], "4821": 416, "4828": 829, "483": [840, 841], "4830": 860, "483142": 158, "4837": 441, "484": [840, 841, 844], "4847": 420, "485": [840, 841], "4854": 826, "4858": 835, "486": [163, 840, 841], "4862": 840, "4866": 840, "487": [14, 840, 841], "488": [840, 841], "48810": 132, "4884": 174, "4885": 446, "4888": 4, "489": [824, 840, 841], "48921": 180, "49": [25, 432, 840, 841, 864, 871], "490": [830, 840, 841], "49037522512771525": 695, "4904": 446, "4909": 695, "490938012147181": 695, "491": [135, 830, 840, 841], "4910e": 348, "4918": 829, "492": [181, 840, 841], "4921e": 348, "493": [152, 840, 841], "493888090726854": 695, "49397782380750765": 695, "494": [840, 841], "4940": [446, 695], "4944": 840, "4948": 420, "495": [14, 152, 840, 841], "4954": [651, 652], "4956": 829, "4959": 858, "496": [840, 841], "4964": 826, "4968": 834, "497": [840, 841], "4975": 829, "4977": 446, "498": [840, 841], "4983": 826, "4985": 840, "499": [840, 841, 849], "4990": 858, "4994": 826, "4_link_predict": [832, 845, 849], "4_old_win": [832, 873], "4_rgcn": [832, 859, 863], "4d": 179, "4f": [826, 835, 858, 859, 860, 861, 864, 876, 877], "4kib": 336, "4m": [210, 721, 807], "4part_data": [854, 855], "4th": 728, "4\u6761\u8fb9": 752, "4\uac00\uc9c0": 784, "4\uac1c\uac00": 792, "4\uac1c\uc758": [795, 817], "4\uc7a5": [797, 817, 819, 821], "5": [5, 6, 9, 12, 14, 20, 22, 26, 27, 28, 34, 35, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 107, 113, 114, 115, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 137, 142, 143, 145, 146, 147, 148, 149, 152, 155, 156, 159, 161, 163, 172, 173, 174, 178, 184, 185, 187, 193, 197, 200, 205, 210, 214, 216, 219, 220, 229, 230, 243, 245, 246, 250, 292, 294, 295, 299, 300, 301, 302, 303, 304, 305, 310, 317, 318, 319, 320, 323, 330, 333, 339, 340, 341, 344, 345, 346, 347, 348, 350, 357, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 454, 463, 481, 482, 508, 509, 546, 553, 557, 558, 562, 563, 564, 567, 568, 569, 570, 571, 575, 580, 581, 600, 607, 613, 614, 616, 618, 619, 620, 621, 625, 632, 634, 635, 636, 646, 648, 649, 651, 652, 653, 654, 657, 660, 661, 662, 664, 665, 667, 669, 670, 673, 674, 687, 689, 691, 692, 695, 697, 699, 700, 702, 705, 706, 707, 708, 709, 710, 712, 713, 718, 719, 720, 721, 722, 723, 726, 728, 731, 739, 743, 746, 748, 749, 750, 751, 752, 753, 754, 756, 757, 762, 763, 766, 768, 771, 773, 779, 783, 786, 789, 790, 791, 792, 793, 794, 795, 798, 804, 805, 809, 811, 812, 815, 817, 823, 824, 825, 826, 827, 829, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 846, 847, 860, 861, 864, 870, 871, 876, 877], "50": [146, 171, 174, 175, 181, 432, 438, 440, 464, 554, 564, 628, 824, 840, 841, 842, 844, 845, 858, 860, 861, 864, 871], "500": [150, 154, 160, 176, 707, 733, 734, 751, 773, 774, 792, 817, 818, 824, 825, 827, 840, 841, 842, 844, 845, 846, 858, 860, 861, 870], "5000": [4, 9, 25, 126, 191, 250, 363, 396, 397, 431, 484, 556, 564, 578, 579, 600, 604, 617, 663, 671, 733, 773, 817, 829], "50000": [14, 146, 158], "500000": 210, "5005": 860, "500k": 210, "501": [840, 841], "5010": 826, "5011": 416, "5012": [840, 843], "502": [840, 841], "503": [840, 841], "5030": 420, "5034": 812, "5039": 812, "504": [840, 841], "5041": [407, 413], "5042": 424, "5047133564949036": 845, "5049": 829, "505": [840, 841], "5053": 399, "5054": 442, "506": [840, 841], "5065": [651, 652, 840], "507": [840, 841], "5077": 858, "508": [840, 841], "5087": 840, "509": [840, 841, 861], "5091": 841, "50911709": 841, "5097": 464, "51": [193, 432, 840, 841, 864, 871], "510": [840, 841], "5102": 840, "511": [840, 841], "5117": [667, 864], "512": [450, 453, 689, 691, 840, 841, 864], "513": [840, 841], "5133": 864, "514": [840, 841], "5142": 464, "515": [193, 840, 841], "5156": 841, "5159": [416, 840], "516": [840, 841], "5169": 420, "517": [840, 841], "5171": [651, 652], "518": [840, 841], "5182": [651, 652], "519": [840, 841], "5191278830882644": 695, "5192": [404, 840], "5197": [441, 442, 443, 444, 445, 446, 447, 448, 449, 651, 652, 695], "5197462471155317": 695, "52": [432, 826, 830, 840, 841, 864, 871], "520": [840, 841], "52000000": 240, "5201": 185, "521": [840, 841], "5215": 429, "5217": 431, "522": [840, 841], "5221": [446, 464], "5222": 841, "5227": 695, "5227112950269823": 695, "523": [840, 841], "5236": 416, "5237": 446, "524": [14, 824, 840, 841], "5243": 424, "525": [840, 841], "5251800239734318": 695, "5259": 404, "526": [840, 841], "5266": 416, "527": [840, 841], "5272": 840, "5278": [441, 442, 443, 444, 445, 446, 447, 448, 449], "528": [840, 841], "5283": 840, "5286": 412, "5287": 421, "529": [219, 840, 841, 861], "529195480661293": 695, "5297": [651, 652], "5299": 826, "52it": 835, "53": [14, 432, 830, 840, 841, 846, 864, 871], "530": [840, 841], "5303": [651, 652], "5306": 446, "5306878089904785": 845, "531": [840, 841], "5312": 464, "532": [840, 841], "5322": 449, "5327": 404, "533": [840, 841], "5333": 9, "534": [840, 841, 844], "5341": 826, "5347": [407, 413], "5348": 695, "534822233529295": 695, "535": [840, 841], "5352": 424, "5357": 826, "536": [840, 841], "5365": 695, "5365210052235699": 695, "537": [840, 841], "5379": 840, "538": [840, 841], "539": [840, 841, 844], "5398": 427, "54": [432, 840, 841, 846, 864, 871], "540": [840, 841, 844], "5400687466285844": 695, "5401": 695, "5406": 625, "5409": 826, "541": [840, 841], "5418": [651, 652], "542": [14, 840, 841], "5420": 448, "5421": 414, "543": [840, 841], "5436": 840, "54362048": 840, "544": [184, 840, 841], "5445": 441, "545": [840, 841], "5454": [420, 667], "5454703921677284": 695, "5455": 695, "5459": 840, "546": [840, 841, 844], "5462": 841, "547": [840, 841], "5477868606453535": 695, "5478": 829, "5479": 840, "54790758": 840, "548": [840, 841], "549": [840, 841], "5490": 429, "5492": 840, "54924076": 840, "5495035052928215": 695, "55": [147, 181, 432, 824, 829, 840, 841, 842, 844, 845, 864, 871], "550": [840, 841], "551": [840, 841], "5511": 445, "5512": 414, "5513": 429, "5514": 826, "552": [840, 841], "5520": [464, 835], "5527": 826, "5529": 444, "553": [840, 841], "5536": 841, "5538": 445, "554": [840, 841], "5540": [421, 858], "5541": [128, 129], "5543": 826, "555": [840, 841], "5550": 841, "5551": 420, "556": [840, 841], "5561": 826, "5563827995742111": 695, "5564": 695, "557": [840, 841, 842], "558": [824, 840, 841], "5584": 841, "559": [840, 841], "55it": 835, "56": [432, 840, 841, 864, 871], "560": [840, 841], "561": [840, 841, 860], "5612": 667, "5614": 118, "5614197853127827": 695, "562": [824, 840, 841, 860], "5620": 858, "5628": 826, "563": [840, 841], "564": [840, 841], "5643": 420, "5646": 835, "565": [834, 840, 841], "5658": [441, 442, 443, 444, 445, 446, 447, 448, 449, 843], "566": [564, 824, 840, 841], "5668682": 133, "567": [840, 841], "5671": 464, "568": [169, 840, 841], "569": [840, 841], "5692": [651, 652], "57": [432, 628, 827, 840, 841, 864, 871], "570": [840, 841], "571": [840, 841], "5711": 420, "57195603": 840, "572": [840, 841], "5720": 840, "5721": 416, "5725": [441, 442, 443, 444, 445, 446, 447, 448, 449], "5725330322207948": 695, "573": [14, 824, 840, 841], "574": [834, 840, 841], "574418": 25, "5746912787380253": 695, "5747": 860, "5749": 695, "5749339182767451": 695, "575": [840, 841], "576": [840, 841], "57646229739253": 837, "5767": 829, "577": [840, 841], "578": [840, 841], "579": [834, 840, 841], "58": [14, 834, 835, 840, 841, 864, 871], "580": [840, 841], "5809892416000366": 845, "581": [840, 841], "5810": 843, "5815": 841, "582": [840, 841], "5822": 444, "583": [840, 841, 842], "5834": 840, "584": [840, 841, 842], "5840": 449, "5843": 841, "5845": 464, "58455": 837, "5847": 441, "5849": 410, "585": [840, 841], "5854": 812, "5856": 840, "5858": 840, "5859": 835, "586": [840, 841], "5866": 829, "587": [840, 841], "5873": 427, "5878": 420, "588": [14, 840, 841], "5887": 826, "589": [840, 841], "59": [25, 155, 187, 464, 840, 841, 864, 871], "590": [840, 841], "5901": [651, 652], "59015401": 840, "5902": 840, "59071": 158, "5908": 812, "591": [840, 841, 844], "5913335505943637": 695, "592": [145, 840, 841], "5923": 667, "593": [840, 841, 844], "5931": 840, "5937484188166621": 695, "594": [840, 841], "5942": 442, "5945": [407, 413], "595": [825, 840, 841], "5952": 841, "59521408": 841, "5953": 858, "5958": 840, "59583181": 840, "596": [840, 841], "5960": 444, "5961": 840, "5962": 812, "5967": 812, "597": [840, 841], "598": [840, 841], "599": [840, 841], "5997": 841, "59972874": 841, "5_dgmg": [832, 867, 869], "5_graph_classif": [832, 846, 849], "5a0c40b": 867, "5e": [434, 436, 727, 728, 812, 824], "5f": 827, "5x4": 843, "5\uac1c\uc758": 809, "5\uc7a5": [797, 804], "6": [3, 6, 9, 11, 20, 26, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 107, 117, 118, 119, 122, 130, 131, 142, 147, 148, 150, 151, 156, 163, 172, 173, 189, 210, 214, 215, 216, 243, 295, 299, 300, 301, 303, 304, 305, 310, 319, 320, 323, 339, 340, 347, 348, 363, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 416, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 558, 562, 564, 570, 575, 623, 639, 641, 646, 648, 649, 661, 669, 675, 691, 692, 705, 708, 712, 717, 731, 733, 734, 736, 749, 752, 756, 761, 762, 773, 774, 776, 787, 790, 793, 803, 804, 817, 818, 819, 823, 825, 827, 829, 834, 835, 837, 840, 841, 843, 847, 849, 860, 864, 870, 871], "60": [169, 176, 189, 464, 623, 628, 824, 835, 840, 841, 842, 844, 845, 864, 871], "600": [25, 840, 841, 844, 867], "6000": 217, "60000": 169, "6000000238418579": 480, "6004": 829, "6005": 25, "6008": 420, "6008255310580892": 837, "601": [840, 841], "602": [181, 840, 841], "603": [840, 841], "6032": 442, "604": [840, 841, 842], "604045": 173, "604094": 173, "6044": 429, "6045": 446, "605": [840, 841], "6054": [841, 858], "60547612": 841, "6055": 841, "6058": 829, "6059": 841, "606": [830, 840, 841], "6066": [407, 413], "607": [840, 841], "60715949": 840, "6072": 840, "6073": 826, "608": [830, 840, 841, 844], "60849116": 841, "6085": 841, "609": [840, 841], "6091": 840, "6095": 667, "61": [835, 840, 841, 846, 864, 871], "610": [825, 840, 841], "6106": 421, "611": [840, 841], "6114": [651, 652], "6118": [441, 442, 443, 444, 445, 446, 447, 448, 449], "6118386331195641": 695, "61191552": 703, "61191553": 703, "61191556": 703, "612": [840, 841], "613": [840, 841], "614": [824, 840, 841, 844], "6143": 420, "6146": 442, "615": [181, 840, 841], "6156748364694707": 695, "6157": 829, "6159": 841, "616": [840, 841, 844], "6163": 399, "6167": 829, "617": [840, 841], "6170": 840, "61704491": 840, "6175": 840, "618": [840, 841], "619": [840, 841], "6193": 841, "6199": 446, "61gb": 14, "61m": [721, 807], "62": [835, 840, 841, 864, 871], "620": [840, 841], "620118223673067": 695, "6207": 840, "6209": 841, "621": [840, 841], "6211": 446, "6213": 464, "62136313299104": 837, "622": [840, 841], "6220": 420, "6221": 464, "6222": 441, "6224": 840, "623": [840, 841], "624": [840, 841], "6240": 858, "6246": 840, "625": [840, 841], "62539528": 240, "6254": 667, "626": [840, 841], "627": [840, 841], "628": [840, 841], "629": [840, 841], "6293": 829, "6295": 667, "6298": 841, "63": [25, 710, 754, 840, 841, 864, 871], "630": [163, 840, 841], "6305": [445, 841], "631": [840, 841], "6314": 840, "6316654921306084": 837, "6317": 445, "6318": 840, "6319": [464, 829], "632": [840, 841], "6325": 667, "6327": 840, "633": [840, 841, 844], "634": [840, 841], "6340": [420, 826], "6348": 841, "634899790318452": 695, "635": [840, 841], "6354": 840, "6355": 441, "63563": 25, "6358": 843, "636": [824, 840, 841], "6365": [441, 442, 443, 444, 445, 446, 447, 448, 449], "637": [840, 841], "6371": 840, "6373": 429, "6375": [410, 826], "6375445528248924": 695, "6376": 841, "6379": [651, 652], "638": [840, 841], "639": [14, 840, 841], "6393": 420, "6399": 444, "64": [14, 172, 195, 394, 430, 432, 436, 437, 572, 710, 754, 795, 837, 840, 841, 850, 864, 871], "640": [825, 840, 841], "6408": 414, "64095813": 840, "641": [824, 840, 841, 860], "6410": 840, "6418": 464, "642": [840, 841], "6421356421356421": 837, "6423369911742005": 837, "643": [840, 841], "6430l": 850, "6431": 840, "6431158": 840, "644": [840, 841], "645": [840, 841], "6453746567017163": 695, "6454876661300659": 845, "6458": 829, "646": [840, 841], "6462162561249654": 695, "6469344608879493": 837, "647": [840, 841], "6477": 400, "648": [840, 841], "6484": 840, "6485": 843, "648511695023323": 837, "648874463": 703, "649": [840, 841], "6494": 841, "64942545": 841, "6494437360242048": 695, "64d0f3f": 14, "65": [153, 824, 830, 834, 840, 841, 842, 844, 845, 864, 871], "650": [136, 840, 841], "6501": 840, "651": [840, 841], "6512e": [639, 675], "6515": [651, 652], "652": [14, 840, 841, 842], "6526403892728874": 695, "653": [840, 841], "654": [840, 841], "6542837007953287": 837, "6544": 826, "6546": 841, "6549": 421, "655": [840, 841], "6557": [439, 553], "6558": 464, "656": [825, 840, 841, 844], "6562": 812, "6568": [407, 413, 424], "657": [840, 841], "658": [14, 840, 841], "6580": 695, "6580438064356824": 695, "6585": 625, "65854": 182, "659": [840, 841], "6594951663841697": 695, "6595": 695, "6597": 427, "6598715708878852": 695, "66": [829, 834, 835, 837, 840, 841, 864, 871], "660": [840, 841], "6609": 835, "661": [840, 841], "662": [840, 841], "6624186423087752": 695, "6627": 858, "6628": 826, "663": [824, 840, 841, 842], "664": [840, 841], "665": [840, 841], "6653": 840, "66530273": 840, "6655": 812, "666": [830, 832, 840, 841, 844, 849], "6667": [604, 663], "667": [840, 841], "668": [840, 841, 844], "6680": 829, "669": [840, 841], "6693": 840, "6694943496824788": 695, "67": [840, 841, 864, 871], "670": [840, 841], "6700": 841, "6702": [651, 652], "671": [824, 840, 841], "6711": 840, "6717": 826, "672": [840, 841], "672884": 144, "673": [840, 841], "674": [830, 840, 841], "6746269314422184": 695, "675": [840, 841], "6751": 826, "6754": 445, "676": [840, 841], "677": [163, 173, 840, 841], "6776": 840, "6776417760682221": 695, "6778": 843, "678": [840, 841], "679": [840, 841], "6790": 858, "6793025732040405": 845, "6795": 826, "67985810014162": 695, "6799": 695, "68": [170, 830, 835, 840, 841, 864, 871], "680": [840, 841], "6800570517283978": 834, "681": [840, 841], "6810484348765842": 695, "6811": 826, "682": [173, 840, 841, 842], "68215723": 841, "6822": 841, "6825": [441, 442, 443, 444, 445, 446, 447, 448, 449], "683": [824, 840, 841], "6839": 829, "684": [824, 840, 841], "6845": 445, "685": [840, 841, 844], "6850": [840, 841], "6850027": 840, "68500468": 841, "6851": 829, "686": [840, 841], "687": [840, 841, 844], "6871": 421, "6876": 444, "6877": 834, "6878": 834, "6879": 840, "688": [14, 840, 841], "6882": 464, "689": [840, 841], "6893": [651, 652], "69": [173, 830, 840, 841, 861, 864, 871], "690": [825, 830, 840, 841, 842], "6901745368284345": 695, "6906": 118, "6907": [446, 840], "6908": 405, "691": [840, 841], "6910": 667, "6912": 840, "6915486454963684": 845, "6917": 840, "692": [840, 841, 842], "6925": [441, 442, 443, 444, 445, 446, 447, 448, 449], "692873149428549": 695, "693": [840, 841], "6931": 420, "6937": 464, "6939": 840, "694": [840, 841], "6943": 812, "6947": 860, "695": [840, 841], "6954": 464, "6955": 446, "6959": 841, "696": [840, 841], "6962": [441, 840], "697": [840, 841, 842], "698": [14, 840, 841], "6980": 840, "6982": 840, "6985674921582508": 695, "698592283371875": 695, "6986": 695, "699": [840, 841], "6994": 860, "6_line_graph": [832, 860, 863], "6_load_data": [832, 847, 849], "6gb": 703, "6\u4e2a\u8282\u70b9": 752, "6\uc740": 787, "6\uc744": 805, "6\uc7a5": [797, 803, 815, 817], "7": [6, 9, 14, 20, 26, 79, 80, 81, 82, 122, 136, 142, 154, 160, 161, 162, 163, 165, 171, 172, 177, 179, 243, 292, 295, 299, 300, 301, 302, 303, 304, 305, 310, 319, 330, 333, 347, 348, 412, 440, 557, 558, 562, 567, 606, 626, 639, 646, 648, 660, 661, 669, 675, 708, 711, 712, 717, 718, 721, 736, 745, 752, 755, 756, 761, 763, 776, 785, 793, 796, 803, 804, 805, 819, 823, 824, 825, 827, 829, 830, 834, 835, 837, 840, 841, 842, 844, 845, 858, 860, 861, 864, 870, 871], "70": [25, 153, 184, 210, 824, 830, 835, 840, 841, 842, 844, 845, 864, 871], "700": [840, 841], "7000": [439, 553], "701": [192, 840, 841], "702": [840, 841], "7026": 812, "703": [181, 840, 841], "7031": 812, "7033": 864, "704": [840, 841], "704606831073761": 845, "7048": [407, 413], "705": [840, 841], "7051530741717352": 695, "7053": 420, "7056": 840, "70587272": 840, "7059": 840, "706": [173, 840, 841, 844], "707": [840, 841, 846], "7071": 663, "7074": 834, "7075": 834, "7076": 840, "7078": 834, "708": [840, 841, 844], "709": [840, 841], "7091": 445, "7095": 464, "70it": 827, "71": [169, 184, 840, 841, 864, 871], "710": [153, 840, 841], "71035": 837, "7106": 864, "7108": 840, "711": [832, 840, 841, 864, 866], "7115": [829, 858], "712": [825, 840, 841], "7120": 840, "713": [703, 824, 840, 841], "7137": 841, "7138": 445, "714": [840, 841], "7141": 118, "7143": 841, "715": [840, 841], "7152": 840, "7153": 118, "716": [194, 840, 841], "7163": [812, 841], "7168": 812, "717": [161, 162, 163, 840, 841], "7174910641836348": 695, "718": [840, 841, 842], "719": [840, 841, 844], "7196969604886617": 695, "7197": 695, "72": [840, 841, 864, 871], "720": [840, 841], "721": [840, 841, 844], "7211": 25, "7219": 840, "722": [135, 840, 841, 842, 844], "723": [840, 841], "724": [825, 840, 841, 842], "7240": 858, "7241": 840, "7243": 829, "725": [840, 841], "7256": 858, "726": [192, 824, 825, 840, 841, 842], "7262": 132, "7269": [128, 129], "727": [840, 841], "728": [840, 841], "7287": 446, "7287e": [639, 675], "72899602": 841, "729": [149, 840, 841], "7290": 841, "7291568018841328": 695, "73": [840, 841, 864, 871], "730": [825, 840, 841, 844], "730570": 847, "731": [840, 841], "7311": [606, 626, 829], "7315": 829, "7319": 826, "732": [159, 825, 840, 841, 844], "7321742043493028": 695, "733": [840, 841, 842, 844], "7334": 834, "7335": 834, "734": [825, 840, 841, 844], "735": [840, 841, 842, 844], "7352138669985214": 695, "7356": [442, 826], "7359": 841, "736": [840, 841, 844], "7364": 841, "7365": 464, "7368": 695, "736833152378035": 695, "737": [824, 840, 841, 844], "7378": 840, "738": [832, 840, 841, 844, 861, 863], "7387": 841, "739": [840, 841, 844], "74": [25, 840, 841, 864, 871], "740": [159, 824, 840, 841, 842, 844], "7400": 858, "7405": 826, "741": [840, 841, 844], "7410": 442, "742": [840, 841, 842, 844], "7421": 840, "7426": 695, "7426272601929126": 695, "7427": 441, "743": [825, 840, 841], "7435": 841, "744": [840, 841, 842, 844], "745": [136, 825, 840, 841], "7457985352827006": 695, "746": [825, 840, 841, 842, 844], "7465": 464, "747": [840, 841], "748": [165, 840, 841, 842, 844], "749": [840, 841, 844], "75": [14, 244, 439, 553, 723, 766, 809, 824, 840, 841, 842, 844, 845, 864, 871], "750": [840, 841, 844], "7500": [556, 671], "7507": [651, 652], "751": [824, 840, 841], "7510": 858, "7514": 835, "752": [135, 830, 840, 841, 842, 844], "7520": 858, "7525": 412, "753": [825, 840, 841], "7530": 858, "754": [824, 840, 841, 842], "7540": [448, 858], "755": [14, 840, 841, 844], "7550": 858, "7556": 399, "756": [160, 840, 841, 842, 844], "7560": [444, 858], "7563": 860, "7567": [441, 442, 443, 444, 445, 446, 447, 448, 449], "757": [840, 841, 844], "7570": [829, 858], "758": [840, 841, 842, 844], "7580": 858, "7583372765843964": 695, "7587": [420, 840], "7588": 695, "7588441197954202": 695, "759": [840, 841, 842, 844], "7590": 858, "7595": 841, "75953191": 841, "75987194": 841, "7599": 841, "75it": 835, "76": [840, 841, 864, 871], "760": [824, 840, 841, 842, 844], "7600": [134, 858], "761": [840, 841, 842, 844], "7610": 858, "7613943085507672": 695, "7614": 695, "762": [824, 840, 841, 842, 844], "763": [840, 841, 842], "7630": 858, "764": [840, 841, 842, 844], "765": [840, 841, 842], "7650": [25, 829], "7653": 829, "765544096939567": 695, "7656": 431, "7659": 841, "766": [840, 841, 842, 844], "7665": 416, "767": [135, 840, 841, 842], "7675": 840, "768": [159, 824, 840, 841, 844, 864], "7680": 858, "769": [840, 841], "7692": 420, "7697": 695, "7697294432580938": 695, "7699": 860, "77": [830, 840, 841, 864, 871], "770": [840, 841], "77088895": 840, "7709": [428, 840], "771": [824, 840, 841], "7710": [128, 129, 449, 858], "7711": 421, "772": [824, 840, 841], "7720": 812, "7721": 420, "773": [840, 841], "7736": 860, "774": [840, 841, 844], "775": [840, 841], "7750": 860, "7752": 464, "776": [824, 825, 840, 841], "776002616178397": 695, "7762": 464, "7766": 464, "777": [840, 841], "7773": 416, "7774": 401, "778": [135, 840, 841], "77800": 827, "7784": 840, "7787": 432, "779": [840, 841], "7792": 829, "7795": [829, 860], "77it": 826, "78": [835, 840, 841, 864, 871], "780": [824, 840, 841, 844], "7809": 841, "781": [824, 827, 840, 841], "78100": 827, "7819": 695, "7819383771535038": 695, "782": [832, 840, 841, 842, 844, 849], "7824": 840, "7827": 812, "783": [840, 841], "78335887": 840, "7834": 840, "7835": 840, "784": [14, 824, 840, 841], "7843": 840, "7846": 464, "7849": 448, "785": [840, 841], "7853": 860, "7857": 864, "7858": 860, "7859": 826, "786": [824, 840, 841], "7861": 826, "7863421810531344": 695, "7865": 412, "787": [840, 841], "7871": 841, "7873": 859, "7875": 840, "78754593": 840, "788": [151, 824, 840, 841], "78804": 171, "7884": 826, "789": [840, 841], "7891": 695, "7891429392727503": 695, "7893": 840, "7893727601272978": 695, "7894": 464, "7896": 859, "79": [464, 830, 835, 840, 841, 864, 871], "790": [824, 840, 841], "7900": 840, "7901988878812207": 695, "7902": 695, "7905": 421, "7907": 829, "791": [824, 840, 841], "7910": 840, "7919": 829, "792": [840, 841], "7920": 859, "7924": 446, "7926": 840, "793": [153, 840, 841], "7934": 858, "7938": 835, "794": [14, 840, 841], "7945": 859, "7946": 420, "7949": [441, 442, 443, 444, 445, 446, 447, 448, 449, 864], "795": [824, 840, 841], "7952": 860, "796": [840, 841], "797": [840, 841], "7971": 840, "7972": 859, "7973": 446, "798": [159, 840, 841], "799": [840, 841], "7993": 420, "7994": 840, "7997": [651, 652], "7_transform": [832, 871, 873], "7g": [728, 812], "7\u548c11": 763, "7\u884c": 745, "7\ubd80\ud130": 807, "7\uc7a5": 797, "8": [4, 6, 9, 10, 14, 20, 130, 136, 139, 140, 142, 152, 153, 172, 184, 189, 190, 198, 207, 245, 246, 295, 300, 301, 303, 304, 305, 310, 319, 330, 341, 345, 346, 347, 350, 400, 401, 402, 408, 411, 419, 450, 452, 453, 455, 456, 457, 458, 462, 464, 481, 482, 562, 564, 570, 628, 646, 648, 660, 669, 691, 707, 708, 710, 712, 718, 751, 754, 763, 792, 795, 805, 823, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 846, 855, 860, 861, 864, 870, 871, 876], "80": [142, 143, 161, 190, 193, 464, 824, 826, 835, 840, 841, 842, 844, 845, 864, 871, 876], "800": [840, 841, 842], "8001": [859, 860], "801": [840, 841], "8010": 860, "8014": 840, "80142284": 840, "802": [133, 564, 840, 841], "8020": 841, "803": [840, 841], "8030": 446, "8031": 860, "8034": 859, "804": [14, 840, 841], "8043": 445, "8046": 860, "8048": 860, "805": [151, 163, 840, 841], "8051": 860, "8056": 860, "8058": 420, "806": [840, 841], "8065": 433, "8068": 427, "807": [825, 834, 840, 841], "8075": 859, "808": [840, 841], "8080": 21, "8086": 464, "809": [840, 841], "8090": 667, "809016994374948": 349, "8092": 840, "81": [151, 823, 830, 840, 841, 861, 864, 871], "810": [840, 841], "8101": 860, "8105": 841, "811": [840, 841], "8111": 442, "8113": 441, "811333": 25, "8117650553546695": 695, "812": [564, 840, 841], "8122": 860, "8128": [840, 859], "813": [824, 840, 841], "8132": 432, "8135": 414, "8137": [441, 442, 443, 444, 445, 446, 447, 448, 449], "814": [840, 841], "8145": 860, "8146": 432, "8149": 695, "8149104951283953": 695, "815": [840, 841], "816": [840, 841], "81618407": 841, "8162": 841, "8168": 860, "817": [840, 841], "818": [161, 840, 841], "8189658": 788, "819": [194, 840, 841], "8195": 859, "8199": 444, "81ea7a4": 835, "82": [172, 840, 841, 861, 864, 871], "820": [840, 841], "8206": 843, "8208": 429, "821": [161, 840, 841], "821187": 847, "8214": 840, "822": [824, 840, 841], "823": [14, 840, 841], "8232": 840, "8235": 421, "824": [840, 841], "8245": 420, "825": [840, 841], "8250": 826, "8252": 840, "826": [840, 841], "8262": 416, "827": [840, 841], "828": [840, 841], "8282": 859, "8287": 432, "829": [14, 840, 841], "8292": 840, "82it": 835, "83": [195, 830, 840, 841, 861, 864, 871], "830": [840, 841], "8301": 840, "8302": 840, "8307": [651, 652], "831": [178, 179, 181, 840, 841], "832": [840, 841], "8323": 412, "8325": 432, "8326": 415, "8326121496142408": 695, "833": [840, 841], "8331": 841, "834": [825, 840, 841], "835": [840, 841], "836": [840, 841], "837": [840, 841], "8371": 433, "8376": 858, "8377": [441, 442, 443, 444, 445, 446, 447, 448, 449], "838": [840, 841], "8380h": 850, "8387": 445, "839": [840, 841], "8391": 859, "8396": 829, "84": [195, 840, 841, 864, 871], "840": [840, 841], "8400": 614, "8403": 859, "841": [840, 841], "8414": 840, "84143073": 840, "8417": [840, 859], "842": [153, 840, 841, 844], "843": [840, 841], "8432": 859, "8437": 432, "844": [840, 841], "845": [840, 841], "8451": 859, "8451870383322376": 695, "8453123358491914": 695, "846": [840, 841], "8462": [840, 864], "8466859": 840, "8467": 840, "847": [194, 840, 841], "8470": 446, "8474": 859, "8478810655406659": 695, "848": [840, 841], "8487": 414, "8489": [651, 652], "849": [840, 841], "8494919263589972": 695, "8495": 695, "8499": 841, "849983324532477": 695, "85": [824, 840, 841, 842, 844, 845, 864, 871], "850": [840, 841], "8503": 859, "851": [840, 841], "8514": 829, "8515": 432, "852": [840, 841], "8521": [441, 442, 443, 444, 445, 446, 447, 448, 449], "8525": 859, "8528": 840, "853": [840, 841], "8534": 840, "8536": 396, "854": [840, 841], "8540": 859, "8544": 184, "8549": 464, "855": [834, 837, 840, 841], "8554": 840, "85544117": 840, "8555728757215696": 845, "8556": 835, "856": [840, 841], "8563": 829, "857": [840, 841], "858": [840, 841], "8582": 412, "8586722047523594": 695, "8589": 859, "859": [825, 840, 841], "8593": 840, "8597": 464, "86": [840, 841, 864, 871], "860": [14, 840, 841], "861": [840, 841], "8613": [695, 841], "86130959": 841, "8613368738351794": 695, "862": [840, 841], "863": [840, 841], "8634": [407, 413], "864": [840, 841], "8643238446466464": 695, "8648": 464, "865": [840, 841], "8653": 859, "8654": [426, 858], "8655": 841, "8655428": 841, "86573472329756": 695, "866": [840, 841], "8660": 840, "8667": 448, "867": [840, 841], "8670": 840, "8673": 841, "8674": 412, "8679": 415, "868": [840, 841], "8687": 859, "869": [840, 841], "86948626": 841, "8695": 841, "8698": 841, "87": [155, 187, 840, 841, 864, 871], "870": [840, 841], "871": [840, 841], "8710": 219, "8715": 829, "8715767748481147": 695, "872": [840, 841], "8726": 445, "873": [840, 841, 844], "87337514": 841, "8734": [841, 859], "874": [840, 841], "875": [840, 841], "8753": 841, "8753101998792645": 695, "8757520744192612": 695, "876": [840, 841], "8764": 416, "877": [840, 841], "8774": 829, "8778998699783784": 695, "878": [14, 173, 824, 840, 841], "8788": 835, "879": [840, 841], "87it": 835, "88": [168, 186, 829, 830, 840, 841, 864, 871], "880": [825, 840, 841], "881": [145, 840, 841, 844], "8813": 695, "8813472954005022": 695, "881680": 133, "882": [840, 841, 842], "8825": 432, "883": [840, 841], "8835": 859, "884": [840, 841], "8843": 416, "8849": 861, "885": [840, 841], "8851294998284638": 695, "8852": 835, "8854": 446, "886": [840, 841], "8864": 864, "88651": [25, 176], "8869": [445, 840], "887": [840, 841, 842], "8871": 861, "888": [840, 841], "8886": 859, "889": [840, 841], "8893": 861, "89": [145, 160, 168, 464, 835, 840, 841, 864, 871], "890": [840, 841], "8905": 840, "89053892": 840, "891": [840, 841], "8915": 861, "892": [181, 840, 841], "8920": [464, 835], "8922": 433, "893": [840, 841], "8937": 861, "8938": [441, 442, 443, 444, 445, 446, 447, 448, 449], "8939": 840, "894": [151, 840, 841], "8943": 835, "8945": [441, 442, 443, 444, 445, 446, 447, 448, 449], "8948": [441, 442, 443, 444, 445, 446, 447, 448, 449], "895": [840, 841], "8954": [651, 652], "8958": 861, "8959": 859, "896": [840, 841], "8964": 695, "8964389655603473": 695, "8967": 829, "897": [14, 840, 841], "8975": 695, "8975240205792763": 695, "898": [825, 840, 841], "8980": 861, "8984": 843, "8985": 834, "899": [160, 824, 840, 841], "8g": [728, 812], "8\u548c": 763, "8\u548c11": 763, "8\uac1c\uc758": [788, 792], "8\uacfc": 793, "8\ubc88\uc774": 805, "8\uc5d0": 805, "8\uc758": 805, "8\uc7a5": 797, "9": [4, 9, 10, 20, 26, 138, 148, 163, 195, 246, 295, 299, 300, 301, 302, 303, 304, 319, 341, 345, 346, 348, 412, 432, 464, 482, 562, 623, 624, 646, 648, 669, 707, 708, 717, 718, 728, 751, 752, 761, 763, 792, 793, 803, 805, 823, 825, 827, 829, 830, 834, 835, 837, 840, 841, 850, 860, 864, 871], "90": [464, 824, 840, 841, 842, 844, 845, 864, 867, 871], "900": [14, 624, 840, 841], "9000": 871, "9001": 861, "9009": 829, "901": [840, 841], "9011": 432, "9015": 840, "9016": [407, 413], "902": [14, 840, 841], "9022": 861, "9027": [405, 840], "9028": [441, 442, 443, 444, 445, 446, 447, 448, 449], "903": [840, 841], "9030": [441, 442, 443, 444, 445, 446, 447, 448, 449], "9039": 840, "904": [840, 841], "9043": 861, "905": [840, 841], "906": [840, 841], "9061": 840, "9064": 861, "907": [840, 841], "9074": 840, "90799365": 840, "908": [840, 841], "9080": 840, "9081": 446, "9085": 861, "9089": 424, "909": [840, 841], "9091": 416, "91": [840, 841, 864, 871], "910": [840, 841], "9105": [614, 651, 652], "9106": 861, "9108": [464, 859], "911": [840, 841], "9117": 841, "91173444": 841, "912": [840, 841], "9125": 841, "9126": [840, 861], "91261527": 840, "913": [840, 841], "9130": 829, "9135": 859, "9137": [441, 442, 443, 444, 445, 446, 447, 448, 449], "9137336384979067": 695, "914": [825, 840, 841], "9140": [651, 652], "9147": 861, "915": [840, 841], "9156": 464, "916": [840, 841], "9166": 433, "9167": [9, 861], "9168191778828504": 695, "917": [840, 841], "918": [840, 841], "9182": 840, "9187": 861, "919": [840, 841], "9194": 864, "92": [840, 841, 864, 867, 870, 871], "920": [840, 841], "9208": 861, "921": [824, 840, 841], "922": [840, 841], "9226": 400, "9228": [25, 150, 861], "923": [840, 841], "9230": 446, "924": [152, 840, 841], "9241": 420, "9248": 861, "9249": 841, "925": [840, 841], "9255": 829, "926": [825, 840, 841], "9268": [396, 861], "927": [840, 841], "9273": 428, "9278": 840, "928": [14, 840, 841], "9280": [651, 652], "9288": 861, "9288e": 348, "9289": 859, "929": [840, 841], "9297": 428, "93": [25, 830, 840, 841, 864, 871], "930": [840, 841], "9302": 400, "9307": 812, "9308": 861, "931": [840, 841], "9311": 843, "9315": 420, "932": [840, 841], "9320": 840, "9324": 840, "9328": 861, "933": [840, 841], "934": [840, 841], "9343": 428, "9344": 840, "93440779": 840, "9347": 843, "9348": 861, "935": [840, 841], "9354": 841, "936": [840, 841], "9364": 840, "936706701616337": 695, "9368": [128, 129, 861], "937": [825, 840, 841], "9370522452510665": 695, "938": [840, 841], "9387": 861, "939": [840, 841], "9397636966928355": 695, "94": [840, 841, 864, 871], "940": [840, 841], "9403": 843, "9404": 812, "9407": 861, "94075": 837, "941": [840, 841], "9418": 858, "9418796835016118": 695, "9419": [695, 858], "942": [840, 841], "9422093637539785": 695, "9425": 841, "9427": 861, "943": [173, 840, 841], "9430": 464, "944": [161, 840, 841], "9441": 428, "9444": 859, "9447": 861, "945": [840, 841, 842], "9451": 859, "946": [825, 830, 840, 841, 864], "947": [840, 841], "948": [840, 841], "94806": 144, "949": [840, 841, 844], "9490": 449, "95": [25, 824, 840, 841, 842, 844, 845, 864, 871], "950": [840, 841], "9508": 859, "951": [158, 840, 841], "9511783938523962": 695, "9512": 695, "952": [14, 840, 841, 844], "9520": 841, "9524": 864, "953": [840, 841], "9539": [168, 186], "954": [163, 194, 824, 840, 841], "9547": 840, "955": [840, 841], "956": [840, 841], "9562": 840, "957": [840, 841, 844], "9572": 415, "9579": 840, "958": [161, 840, 841], "959": [840, 841], "9599": 414, "96": [830, 840, 841, 864, 871], "960": [840, 841], "9600": 173, "9602": 843, "9609": 449, "961": [840, 841], "962": [152, 840, 841], "963": [14, 840, 841], "9634": 396, "9637": 464, "964": [840, 841], "9643": 859, "965": [181, 840, 841], "9653": 840, "96531779": 840, "9656": 840, "9659": 840, "96594698": 840, "966": [14, 840, 841], "9660": 841, "966043": [702, 703], "9664": 840, "967": [840, 841], "9671": 840, "968": [840, 841], "969": [840, 841], "9698": 399, "97": [840, 841, 864, 871], "970": [14, 840, 841], "971": [840, 841], "9714": [625, 859], "972": [564, 840, 841], "9722": 859, "9725": 840, "973": [14, 840, 841, 861], "9730": 841, "974": [703, 840, 841], "975": [840, 841, 861], "9752": 841, "976": [840, 841], "9768": 829, "977": [14, 840, 841], "9774471538377553": 695, "9776": 859, "978": [840, 841], "9784264442230887": 695, "9786": 859, "979": [840, 841], "9794634290792008": 695, "98": [25, 163, 704, 748, 789, 830, 840, 841, 864, 871], "980": [840, 841], "9806": 840, "981": [840, 841], "982": [840, 841], "9820": [606, 626], "983": [840, 841], "9830": 25, "984": [146, 840, 841], "9840": 446, "9848": 829, "9848072295736628": 695, "985": [14, 840, 841], "9853": 859, "986": [840, 841], "9868": 410, "9869": 843, "987": [840, 841], "988": [840, 841], "989": [840, 841], "99": [840, 841, 864, 871], "990": [840, 841], "991": [840, 841], "991848": 25, "992": [840, 841], "9927": 429, "993": [840, 841], "99382": 837, "994": [840, 841], "9949": 412, "995": [14, 840, 841], "9952376085297715": 695, "996": [824, 840, 841], "997": [840, 841], "9971749359397111": 695, "9972": 446, "998": [840, 841], "9982": [840, 841], "9986": 400, "999": [4, 10, 14, 840, 841], "9990": [441, 442, 443, 444, 445, 446, 447, 448, 449], "9995": 841, "99988365": 840, "9999": 840, "9_gat": [832, 861, 863], "9\uc5d0\uc11c": 793, "A": [4, 6, 7, 12, 14, 20, 21, 22, 26, 27, 28, 31, 34, 35, 39, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 71, 75, 79, 82, 87, 88, 93, 94, 95, 96, 100, 105, 109, 110, 118, 119, 121, 127, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 203, 205, 206, 207, 220, 230, 232, 236, 239, 241, 242, 245, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 317, 319, 320, 322, 323, 328, 333, 334, 336, 343, 344, 349, 350, 358, 359, 360, 390, 391, 392, 393, 394, 395, 396, 398, 399, 401, 404, 405, 407, 408, 410, 411, 412, 413, 414, 415, 418, 419, 421, 423, 425, 426, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 445, 446, 447, 450, 452, 453, 463, 464, 481, 482, 483, 505, 547, 564, 566, 567, 568, 569, 570, 571, 572, 580, 581, 583, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 617, 618, 619, 620, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 639, 641, 642, 643, 644, 645, 646, 647, 648, 650, 651, 652, 656, 659, 664, 665, 670, 674, 689, 695, 697, 700, 701, 703, 704, 706, 708, 709, 711, 715, 727, 735, 736, 737, 794, 796, 824, 825, 826, 827, 829, 830, 832, 833, 835, 838, 842, 844, 845, 847, 849, 854, 858, 860, 861, 864, 871, 872, 874, 875], "AND": 21, "And": [168, 173, 186, 240, 299, 322, 323, 338, 339, 412, 440, 569, 570, 571, 829, 839, 840], "As": [14, 20, 22, 197, 231, 240, 569, 570, 571, 572, 641, 647, 697, 700, 702, 703, 726, 732, 835, 845, 846, 851, 854, 855, 860, 861, 871], "At": [231, 695, 730, 860, 867], "Be": [826, 861], "Being": [4, 10, 736], "But": [89, 295, 303, 726, 823, 827, 867], "By": [4, 31, 32, 41, 53, 54, 70, 122, 125, 126, 131, 200, 201, 207, 210, 220, 232, 239, 240, 249, 250, 295, 340, 359, 360, 363, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 554, 555, 647, 695, 700, 701, 710, 711, 722, 728, 736, 796, 823, 833, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 846, 847, 854, 867, 870, 871], "For": [4, 5, 9, 10, 20, 21, 22, 24, 43, 46, 51, 52, 55, 59, 60, 61, 66, 72, 74, 87, 88, 89, 90, 103, 107, 113, 114, 115, 116, 118, 119, 122, 128, 129, 165, 179, 195, 209, 214, 215, 216, 217, 220, 221, 226, 227, 234, 235, 240, 241, 242, 290, 291, 296, 298, 299, 300, 307, 310, 311, 317, 318, 319, 320, 321, 333, 350, 363, 389, 391, 394, 397, 444, 450, 453, 562, 564, 569, 570, 571, 572, 573, 578, 579, 580, 581, 619, 620, 640, 641, 646, 647, 649, 655, 656, 657, 663, 668, 672, 681, 689, 691, 695, 697, 698, 699, 700, 701, 702, 703, 706, 708, 710, 711, 714, 715, 717, 718, 719, 721, 724, 726, 727, 730, 731, 732, 734, 735, 736, 737, 738, 787, 796, 822, 823, 825, 826, 827, 829, 834, 836, 837, 839, 840, 841, 843, 844, 845, 846, 847, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876], "If": [4, 6, 21, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 43, 44, 45, 46, 48, 51, 54, 56, 57, 58, 60, 64, 65, 70, 71, 73, 74, 79, 80, 81, 82, 87, 89, 90, 93, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 144, 145, 148, 156, 165, 168, 170, 177, 178, 179, 183, 184, 207, 210, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 246, 248, 249, 250, 287, 290, 292, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 310, 311, 312, 314, 315, 317, 318, 319, 320, 322, 323, 328, 332, 333, 338, 339, 340, 341, 344, 345, 346, 347, 348, 349, 350, 352, 358, 359, 363, 389, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438, 440, 441, 443, 447, 448, 450, 451, 453, 454, 457, 461, 465, 482, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 552, 557, 559, 560, 561, 562, 563, 566, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 586, 589, 591, 593, 596, 597, 600, 603, 604, 605, 606, 607, 609, 616, 617, 618, 619, 620, 621, 622, 623, 626, 628, 632, 639, 640, 641, 646, 647, 649, 651, 652, 653, 655, 656, 657, 664, 665, 667, 668, 670, 673, 675, 687, 688, 694, 695, 700, 702, 703, 707, 710, 711, 714, 717, 718, 719, 720, 721, 723, 724, 725, 728, 733, 734, 735, 738, 795, 823, 824, 825, 826, 827, 829, 831, 834, 835, 837, 839, 843, 845, 846, 847, 851, 854, 867], "In": [4, 6, 8, 14, 21, 22, 27, 41, 51, 70, 140, 150, 181, 183, 186, 210, 214, 221, 231, 232, 235, 239, 240, 245, 246, 247, 299, 302, 305, 310, 312, 317, 318, 319, 320, 322, 341, 345, 346, 349, 358, 389, 393, 397, 405, 406, 422, 461, 464, 481, 482, 483, 546, 568, 571, 575, 580, 581, 614, 622, 625, 628, 646, 649, 689, 691, 695, 697, 699, 700, 701, 703, 704, 706, 707, 710, 711, 713, 714, 719, 722, 724, 725, 726, 727, 729, 730, 731, 733, 734, 735, 736, 737, 738, 823, 824, 825, 827, 829, 833, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 859, 860, 861, 862, 864, 867, 870, 871, 874, 876, 877], "It": [4, 6, 7, 8, 9, 20, 21, 22, 34, 35, 48, 60, 73, 87, 91, 92, 93, 94, 100, 113, 120, 125, 126, 128, 129, 130, 131, 132, 138, 139, 141, 142, 143, 158, 162, 178, 179, 189, 190, 191, 197, 198, 205, 208, 210, 211, 212, 217, 219, 220, 231, 235, 240, 241, 242, 247, 249, 250, 287, 290, 294, 295, 296, 297, 299, 300, 305, 307, 310, 312, 317, 318, 319, 321, 323, 331, 339, 340, 345, 346, 347, 358, 390, 392, 393, 398, 400, 401, 402, 403, 410, 415, 417, 422, 426, 432, 433, 434, 435, 436, 437, 438, 439, 440, 447, 452, 458, 459, 460, 461, 462, 465, 484, 485, 486, 487, 488, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 553, 554, 555, 564, 565, 571, 572, 573, 575, 576, 646, 674, 691, 693, 695, 697, 700, 701, 702, 703, 706, 711, 714, 715, 726, 727, 728, 822, 825, 833, 834, 835, 837, 839, 840, 841, 845, 846, 847, 854, 858, 859, 861, 862, 864, 867, 868, 870, 871, 874, 876, 877], "Its": [53, 54, 142, 240, 422, 434, 435, 436, 437, 509, 571, 703, 867], "NOT": [5, 21, 22, 230, 421, 858, 859, 860, 861, 864, 867, 870, 871], "No": [394, 731, 835, 861, 876, 877], "Not": 851, "ON": 823, "Of": 713, "On": [22, 116, 435, 437, 713, 720, 728], "One": [20, 21, 43, 44, 46, 51, 73, 74, 77, 103, 104, 122, 130, 221, 229, 230, 234, 295, 299, 399, 457, 569, 647, 687, 693, 695, 697, 699, 700, 707, 709, 710, 711, 714, 720, 721, 722, 731, 734, 735, 736, 738, 827, 842, 846, 861, 864], "Or": [216, 568, 720, 725, 823], "Such": [726, 734, 737, 840, 841, 846, 870], "That": [4, 22, 26, 232, 239, 241, 305, 310, 317, 318, 700, 860, 867, 876], "The": [0, 2, 3, 4, 6, 8, 9, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 330, 331, 332, 333, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 363, 389, 390, 391, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 457, 458, 459, 460, 461, 462, 463, 464, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 586, 589, 590, 591, 593, 596, 597, 599, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 614, 618, 619, 620, 621, 622, 626, 632, 633, 634, 636, 640, 641, 642, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 662, 663, 664, 665, 666, 668, 670, 671, 673, 674, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 708, 710, 711, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 781, 796, 806, 807, 811, 823, 824, 825, 826, 827, 828, 829, 830, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 854, 855, 858, 860, 861, 865, 870, 871, 872, 874, 876, 877], "Then": [6, 113, 130, 174, 240, 347, 393, 397, 438, 440, 485, 486, 487, 488, 490, 491, 492, 493, 564, 575, 702, 725, 734, 854, 855, 860, 871], "There": [1, 22, 62, 63, 116, 126, 147, 217, 230, 232, 239, 293, 397, 463, 628, 695, 697, 701, 703, 707, 737, 829, 844, 861, 864, 867, 871], "These": [150, 162, 245, 481, 708, 725, 732, 823, 844, 872, 874], "To": [1, 4, 5, 14, 21, 22, 51, 68, 77, 89, 116, 122, 210, 213, 214, 215, 216, 219, 220, 240, 245, 315, 359, 360, 393, 421, 432, 433, 481, 554, 555, 568, 569, 570, 571, 649, 693, 695, 700, 701, 703, 710, 711, 719, 721, 725, 727, 732, 734, 737, 738, 796, 823, 825, 829, 830, 834, 835, 840, 841, 842, 851, 854, 859, 860, 861, 864, 867, 871, 876, 877], "Will": [200, 213], "With": [77, 209, 213, 394, 416, 567, 569, 570, 571, 648, 687, 718, 735, 736, 823, 842, 850, 858, 860, 867], "_": [0, 21, 245, 294, 300, 302, 319, 411, 414, 415, 419, 423, 429, 432, 433, 435, 444, 452, 457, 481, 655, 681, 691, 702, 723, 724, 737, 738, 763, 766, 767, 777, 778, 805, 809, 810, 820, 821, 825, 826, 843, 845, 847, 850, 858, 859, 860, 861, 867, 870, 871, 876], "_1": [403, 432, 433, 655], "_2": [458, 655], "_4": [763, 805], "_5": [763, 805, 836], "_7": [763, 805], "_8": [763, 805], "__": [137, 171, 180, 182, 188, 720, 727], "__all__": [4, 34, 35, 53, 54, 60, 87, 122, 363], "__call__": [659, 695, 766, 809], "__forward__": 860, "__getitem__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 693, 695, 697, 698, 740, 743, 744, 780, 783, 784, 847], "__init__": [21, 208, 218, 302, 315, 422, 432, 433, 434, 435, 436, 437, 464, 564, 693, 697, 701, 719, 720, 722, 723, 724, 725, 727, 728, 730, 732, 734, 736, 737, 738, 740, 743, 763, 764, 765, 766, 767, 768, 770, 772, 774, 776, 777, 778, 780, 783, 805, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 821, 824, 825, 826, 827, 829, 834, 835, 837, 842, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "__len__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 693, 697, 740, 743, 763, 780, 783, 805, 847], "__main__": [835, 867, 876, 877], "__name__": [835, 867, 876, 877], "__path__": 21, "__version__": [824, 825, 826, 827, 829, 834, 835, 837, 840, 841], "__\u4e2d\u7684\u505a\u6cd5": 775, "_aggre_typ": [730, 731, 770, 771, 814, 815], "_basenegativesampl": [226, 227], "_block": 307, "_collate_fn": [696, 742, 782], "_continu": 871, "_dgl_graph": [698, 744, 784], "_dist_train": 570, "_dst": 127, "_e": [4, 118, 125, 126, 232, 240, 407, 410, 418, 421, 424, 427, 641], "_edge_ids_in_fused_csc_sampling_graph": [299, 313], "_etype_str_to_tupl": 325, "_etype_tuple_to_str": 326, "_extract_gz": [694, 741, 781], "_ffi": 22, "_ft": [714, 758, 799], "_g": [697, 743, 783], "_gener": 0, "_get_dgl_url": [697, 743, 783], "_get_next": 867, "_get_previ": 867, "_i": [395, 411, 655, 674, 714, 758, 799, 829, 864, 871], "_id": [168, 186, 219, 246, 341, 345, 346, 482, 546, 562, 646, 647, 702, 703, 843], "_in_dst_feat": [727, 730, 770, 814], "_in_src_feat": [727, 730, 770, 814], "_info": [698, 744, 784], "_ini_api": 22, "_init_api": 22, "_initialize_edge_repr": 867, "_initialize_node_repr": 867, "_j": [411, 714, 758, 799, 829, 861, 871], "_k": [351, 441, 442, 443, 448], "_l": 864, "_label": [697, 743, 783], "_load_graph": [697, 743, 783], "_mean": [858, 861], "_method": [858, 861], "_n": [4, 239, 240, 407, 410, 418, 424, 427], "_name": [697, 743, 783], "_num_task": [697, 743, 783], "_out_feat": [727, 730, 770, 814], "_p": [459, 460], "_preprocess_featur": [697, 743, 783], "_sample_with_etyp": 723, "_sha1_str": [694, 697, 741, 743, 781, 783], "_src": 127, "_static": [842, 843, 844, 845, 846, 847], "_t": 444, "_tag": [580, 581], "_tag_offset": [571, 580, 581], "_type": [646, 647], "_type_kei": 22, "_u": [4, 125, 126, 421, 737, 763, 777, 805, 820, 858], "_url": [697, 743, 783], "_v": [125, 126, 421, 737, 763, 777, 805, 820, 829], "a1": [26, 829], "a2": [26, 829], "a_": [363, 394, 409, 420, 426, 429, 465, 714, 758, 799, 859, 860, 861, 867], "a_0": [178, 179], "a_1": [825, 867], "a_1x": 825, "a_2x": 825, "a_div": 727, "a_dst": 127, "a_hat": [824, 825, 829], "a_i": 825, "a_new": 829, "a_r": 825, "a_rx": 825, "a_src": 127, "a_t": 867, "a_tild": 825, "a_tre": 864, "ab": [118, 119, 127, 131, 134, 137, 146, 169, 171, 180, 182, 188, 358, 437, 564, 830, 850], "ab1": 26, "ab2": 26, "abil": 861, "abl": [703, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 846, 847, 850], "about": [1, 20, 21, 22, 158, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 397, 481, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 641, 688, 693, 700, 703, 705, 707, 708, 723, 736, 825, 846, 859, 860, 861, 864, 871], "abov": [5, 22, 130, 142, 178, 179, 210, 220, 246, 251, 252, 263, 264, 265, 266, 341, 345, 346, 363, 396, 397, 403, 412, 414, 415, 420, 421, 428, 429, 458, 462, 482, 546, 580, 581, 641, 691, 694, 697, 708, 711, 713, 714, 715, 719, 723, 725, 731, 734, 736, 737, 738, 827, 829, 835, 836, 837, 854, 855, 858, 859, 861, 867, 870, 877], "absent": 321, "absolut": [201, 202, 703, 822], "abstract": [156, 293, 312, 316, 658, 693, 705, 719, 829], "abund": 736, "ac": 144, "academ": [151, 152, 159, 289, 703], "academi": 859, "acc": [738, 778, 821, 824, 825, 827, 835, 837, 842, 844, 858, 860, 864, 876, 877], "acc_perm1": 860, "acc_perm2": 860, "acceler": [400, 401, 402, 461, 703, 825, 851, 864, 871], "accept": [21, 22, 209, 311, 312, 361, 401, 655, 709, 725, 794, 837, 843, 854], "access": [4, 22, 89, 108, 122, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 214, 288, 290, 293, 294, 296, 298, 300, 305, 310, 319, 320, 359, 362, 547, 697, 699, 703, 704, 708, 714, 720, 721, 725, 835, 877], "accompani": 349, "accomplish": 870, "accord": [9, 39, 52, 78, 91, 92, 139, 140, 141, 209, 214, 216, 220, 226, 227, 232, 239, 240, 243, 299, 347, 394, 403, 450, 457, 505, 508, 562, 564, 571, 573, 575, 651, 652, 687, 703, 723, 730, 731, 815, 826, 861, 871], "accordingli": [95, 96, 125, 249, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 562, 695, 702, 834, 837], "account": [120, 854], "accumul": [583, 871], "accur": 842, "accuraci": [21, 738, 821, 824, 825, 827, 830, 835, 837, 842, 844, 846, 854, 859, 860, 861, 870, 871, 877], "accuracy_scor": [837, 854], "achiev": [21, 22, 41, 393, 395, 405, 407, 410, 411, 413, 414, 415, 418, 421, 428, 715, 720, 726, 735, 737, 738, 826, 860, 870], "acl": 864, "acm": [134, 173], "acquaint": 822, "across": [22, 73, 113, 120, 128, 129, 130, 217, 245, 307, 422, 461, 462, 481, 647, 699, 700, 711, 731, 796, 851, 867, 876], "act": [235, 691, 871], "act_loss": 871, "act_loss_weight": 871, "action": [166, 435, 437], "action_step": 867, "activ": [151, 152, 180, 399, 400, 404, 405, 406, 411, 413, 414, 415, 416, 419, 421, 424, 426, 427, 428, 429, 452, 453, 639, 646, 675, 691, 728, 730, 731, 736, 770, 771, 812, 814, 815, 819, 824, 825, 858, 859, 861, 867, 870, 871], "actor": [134, 166], "actual": [4, 5, 22, 210, 221, 361, 565, 569, 570, 571, 731], "ad": [4, 10, 27, 28, 114, 115, 116, 142, 143, 150, 186, 189, 190, 289, 322, 357, 401, 426, 428, 463, 464, 657, 674, 695, 703, 710, 824, 839, 843, 850, 865, 867, 871, 874], "adagrad": [4, 10, 700, 786, 864], "adam": [4, 10, 432, 433, 434, 435, 436, 437, 699, 700, 720, 723, 725, 727, 728, 734, 736, 737, 738, 745, 746, 763, 764, 766, 768, 774, 776, 777, 778, 785, 786, 805, 806, 809, 811, 812, 818, 819, 820, 821, 824, 825, 826, 827, 834, 835, 837, 842, 844, 845, 846, 854, 855, 858, 859, 860, 861, 871, 876, 877], "adapt": [13, 165, 196, 415, 429, 433, 434, 435, 722, 870], "adavantag": 861, "add": [9, 21, 22, 27, 28, 114, 115, 116, 117, 125, 132, 133, 135, 136, 140, 142, 143, 144, 150, 151, 152, 153, 154, 157, 158, 165, 170, 176, 189, 190, 191, 192, 198, 249, 253, 254, 267, 268, 277, 278, 290, 299, 300, 317, 318, 348, 395, 399, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 450, 453, 495, 496, 506, 507, 510, 511, 512, 513, 514, 515, 536, 537, 628, 639, 654, 655, 656, 657, 667, 675, 687, 695, 697, 700, 714, 715, 719, 723, 758, 799, 827, 829, 839, 843, 847, 850, 851, 854, 858, 859, 861, 864, 871], "add_edg": [28, 95, 96, 115, 125, 249, 357, 464, 559, 560, 858, 867], "add_edge_ag": 867, "add_edge_attribut": 299, "add_edge_log_p": 867, "add_edge_or_not": 867, "add_edges_from": 867, "add_nod": [27, 95, 96, 114, 357, 464, 559, 560, 867], "add_node_ag": 867, "add_node_and_upd": 867, "add_node_attribut": 299, "add_node_log_p": 867, "add_nodes_from": [125, 249], "add_on": 303, "add_reverse_edg": 843, "add_safe_glob": [834, 837, 840, 841], "add_self_loop": [395, 400, 402, 407, 410, 411, 412, 413, 414, 415, 418, 421, 424, 427, 428, 430, 431, 561, 812], "addbackward0": [399, 401, 404, 405, 412, 415, 418, 420, 421, 424, 426, 427], "addedg": [13, 867], "addit": [4, 8, 21, 121, 140, 148, 173, 179, 182, 229, 230, 240, 246, 247, 341, 345, 346, 363, 414, 415, 421, 422, 432, 433, 434, 435, 436, 437, 450, 451, 453, 482, 483, 546, 562, 613, 627, 689, 695, 697, 700, 703, 704, 711, 715, 719, 723, 731, 732, 735, 736, 823, 829, 854, 858, 861, 862, 867, 874], "addition": [220, 348, 566, 568, 648, 833, 871], "addmetapath": 13, "addmmbackward": [406, 416, 428, 429], "addmmbackward0": 402, "addnod": 867, "address": [210, 461, 704, 711, 721, 725, 728, 836, 854, 855, 867, 871], "addrevers": [13, 433, 434, 435, 659, 695], "addselfloop": [13, 728], "adj": [33, 118, 146, 169, 404, 405, 406, 845], "adj_extern": [580, 581], "adj_neg": 845, "adjac": [13, 30, 31, 32, 118, 119, 126, 131, 250, 287, 340, 343, 344, 350, 396, 404, 405, 406, 415, 428, 429, 463, 571, 580, 581, 655, 663, 664, 665, 670, 674, 702, 703, 735, 787, 824, 825, 826, 827, 829, 858, 860, 861], "adjust": [120, 738, 870, 871], "adopt": [434, 436, 699, 738, 842, 871], "advanc": [210, 295, 566, 568, 689, 699, 701, 703, 714, 718, 822, 851, 860, 864, 871], "advantag": [315, 703, 720, 721, 736, 825, 851, 861], "affect": 864, "affili": [703, 847], "affiliated_with": [703, 788], "affin": [397, 851, 871], "affinit": 851, "after": [4, 73, 91, 92, 93, 94, 95, 96, 100, 113, 167, 240, 292, 305, 310, 317, 318, 345, 346, 359, 360, 395, 407, 408, 410, 411, 413, 414, 415, 418, 421, 428, 430, 454, 463, 547, 559, 560, 564, 568, 580, 581, 647, 664, 665, 670, 673, 695, 697, 702, 703, 714, 726, 737, 823, 825, 835, 840, 841, 845, 850, 854, 855, 860, 864, 867, 871, 876], "afterward": [4, 432, 433, 434, 435, 436, 437, 453, 844, 850], "ag": [707, 751, 792, 847], "again": [21, 646, 647, 703, 720, 723, 854, 860, 861, 877], "against": [21, 334, 737, 738, 830], "agg": [732, 772, 816], "agg_fn": [732, 772, 816], "aggreg": [5, 9, 73, 91, 92, 93, 94, 100, 111, 113, 117, 263, 264, 265, 266, 391, 395, 397, 400, 401, 402, 403, 405, 406, 407, 410, 411, 413, 414, 415, 416, 418, 421, 423, 424, 425, 427, 428, 432, 433, 434, 436, 462, 485, 486, 487, 488, 490, 491, 492, 493, 507, 509, 511, 512, 513, 514, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 557, 558, 649, 657, 677, 713, 714, 716, 722, 724, 727, 730, 731, 732, 736, 738, 770, 771, 772, 776, 778, 802, 805, 814, 815, 816, 819, 821, 824, 826, 836, 842, 844, 846, 854, 858, 859, 860, 861], "aggregate_radiu": 860, "aggregate\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 778, "aggregate\ub418\uace0": 808, "aggregate\ub97c": 819, "aggregation\ub9cc": 810, "aggregation\uc744": [814, 816], "aggregator_typ": [402, 416, 418, 424, 427, 730, 738, 770, 778, 814, 821, 837, 876], "aggregator_type\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 778, "aggress": 830, "aggretate\ud558\ub294": 808, "agnn": 395, "agnost": [9, 21], "agre": 870, "agreement": 870, "ahead": [845, 864], "ai": [23, 824, 825, 826, 827, 829, 830, 834, 835, 837, 840, 841, 847, 867], "aifb": [132, 859], "aifbdataset": 859, "aim": [301, 858, 859, 860, 861, 864, 867, 870, 871], "aka": 714, "al": [72, 135, 136, 564, 824, 826, 836, 842, 844, 858, 864], "albert": [141, 142, 143], "algorithm": [0, 3, 4, 6, 10, 209, 240, 293, 300, 324, 331, 347, 360, 430, 435, 437, 438, 440, 562, 564, 569, 575, 700, 701, 703, 718, 722, 736, 825, 854, 862, 867, 870, 871, 874, 877], "alia": [1, 4, 29, 33, 44, 49, 50, 69, 76, 83, 84, 85, 86, 97, 98, 99, 104, 106, 111, 156, 228, 582, 608, 829], "align": [5, 9, 304, 336, 861], "alist": [732, 772, 816], "aliv": 292, "all": [4, 5, 6, 9, 14, 20, 21, 22, 26, 30, 34, 35, 39, 41, 44, 45, 48, 51, 52, 53, 54, 56, 60, 61, 68, 70, 73, 77, 78, 79, 81, 82, 87, 88, 89, 95, 101, 102, 104, 105, 113, 117, 119, 121, 122, 126, 127, 128, 129, 130, 131, 133, 137, 143, 144, 146, 148, 156, 157, 158, 161, 164, 169, 179, 182, 184, 186, 189, 190, 191, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 226, 227, 232, 234, 239, 240, 241, 242, 243, 245, 247, 250, 289, 291, 293, 299, 306, 307, 311, 315, 320, 321, 323, 324, 338, 339, 340, 341, 347, 352, 359, 362, 363, 393, 397, 405, 410, 411, 415, 421, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 456, 462, 463, 481, 483, 485, 487, 490, 492, 508, 511, 513, 517, 519, 525, 527, 531, 533, 546, 547, 554, 555, 559, 561, 566, 567, 568, 569, 570, 571, 572, 575, 576, 641, 647, 649, 651, 652, 657, 664, 665, 670, 673, 679, 689, 695, 697, 699, 700, 701, 702, 703, 704, 706, 709, 710, 711, 714, 716, 718, 721, 722, 724, 725, 726, 731, 733, 734, 735, 736, 737, 738, 754, 795, 796, 805, 818, 821, 822, 825, 826, 827, 828, 829, 832, 834, 835, 836, 837, 839, 840, 841, 843, 844, 845, 846, 847, 850, 854, 858, 859, 860, 861, 864, 867, 870, 876, 877], "all_acc": 860, "all_edg": [564, 569, 570, 763, 805], "all_logit": [844, 845], "all_loss": 860, "all_nodes_set": [293, 306, 311, 722], "alloc": [235, 324], "allow": [4, 20, 22, 30, 31, 32, 34, 35, 41, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 126, 131, 146, 169, 246, 247, 249, 250, 287, 292, 340, 341, 345, 346, 391, 393, 482, 484, 509, 546, 557, 559, 561, 569, 575, 578, 580, 581, 646, 695, 700, 703, 707, 708, 711, 721, 726, 728, 830, 834, 837, 840, 841, 844, 850, 854, 862, 871, 874, 876], "allow_dupl": 657, "allow_zero_in_degre": [395, 407, 410, 411, 413, 414, 415, 418, 421, 428], "allowlist": [834, 837, 840, 841], "almost": [232, 239, 571, 697, 720, 723, 725, 727, 734, 835, 877], "alon": [842, 843], "along": [9, 20, 21, 48, 73, 91, 92, 93, 94, 100, 113, 165, 210, 302, 304, 305, 310, 317, 318, 332, 357, 391, 447, 455, 509, 567, 568, 569, 600, 603, 604, 605, 607, 651, 652, 655, 705, 738, 824, 825, 829, 844, 860, 862, 871, 874, 876], "alongsid": [231, 720, 822], "alp": [430, 431], "alpha": [178, 179, 396, 415, 430, 431, 452, 463, 670, 674, 861], "alpha1": [432, 433], "alpha2": [432, 433], "alpha_": [407, 411, 413, 414, 444, 861], "alpha_1": [432, 433], "alpha_2": [432, 433], "alpha_i": 462, "alreadi": [64, 71, 89, 108, 109, 117, 156, 159, 161, 162, 163, 200, 291, 299, 322, 357, 586, 589, 591, 593, 596, 597, 609, 640, 693, 694, 695, 697, 709, 725, 733, 780, 834, 835, 837, 840, 841, 844, 845, 847, 858, 871], "also": [0, 1, 2, 4, 5, 8, 14, 21, 22, 27, 28, 43, 44, 46, 70, 74, 101, 102, 103, 104, 114, 118, 119, 122, 130, 131, 144, 162, 174, 184, 214, 216, 220, 226, 227, 240, 241, 246, 247, 295, 299, 312, 322, 323, 332, 339, 340, 341, 345, 346, 363, 391, 423, 424, 426, 432, 433, 434, 436, 461, 482, 483, 546, 559, 560, 563, 565, 571, 580, 581, 587, 588, 641, 646, 648, 689, 691, 693, 696, 697, 699, 700, 701, 702, 703, 706, 707, 709, 710, 711, 714, 719, 720, 721, 723, 724, 725, 734, 736, 738, 794, 826, 829, 835, 836, 837, 838, 843, 844, 845, 846, 847, 850, 851, 854, 855, 859, 860, 861, 864, 867, 868, 870, 871, 874, 876, 877], "altern": [21, 22, 297, 305, 310, 830, 854, 864, 870], "although": [4, 432, 433, 434, 435, 436, 437, 566, 568, 823, 825, 843, 844, 845], "alwai": [21, 101, 102, 142, 143, 183, 189, 190, 200, 201, 240, 295, 300, 352, 359, 360, 439, 553, 564, 695, 702, 707, 836, 843], "always_preserv": 130, "am": 133, "amazon": [14, 21, 25, 135, 136, 137, 161, 162, 289, 797, 851], "amazon_co_buy_comput": 140, "amazonaw": [23, 697, 743, 783], "amazoncobui": [25, 135, 136], "amazoncobuycomputerdataset": [140, 197, 198], "amazoncobuydata": [697, 743, 783], "ambigu": [48, 57, 80], "among": [4, 14, 120, 161, 307, 345, 346, 393, 699, 724, 736, 840, 841, 845, 859, 860, 862, 867, 871, 872, 874], "amount": [245, 292, 481, 702, 870], "amp": [728, 812], "amp_dtyp": 728, "amp_en": 728, "amper": [9, 714, 799], "amplif": [403, 425], "amx": 728, "an": [0, 1, 4, 6, 7, 9, 14, 20, 21, 22, 31, 32, 34, 36, 39, 44, 46, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 64, 71, 73, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 104, 107, 109, 112, 113, 116, 118, 119, 126, 128, 131, 138, 140, 147, 151, 152, 156, 162, 165, 167, 168, 172, 173, 180, 181, 182, 186, 188, 207, 209, 210, 211, 212, 217, 220, 233, 234, 235, 240, 241, 243, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 295, 297, 299, 300, 302, 304, 305, 310, 311, 312, 314, 316, 317, 318, 330, 340, 341, 344, 347, 348, 349, 350, 358, 361, 363, 397, 400, 401, 402, 405, 406, 411, 413, 414, 415, 416, 419, 421, 422, 423, 426, 427, 429, 430, 431, 432, 433, 434, 436, 438, 439, 441, 447, 454, 481, 505, 508, 546, 557, 558, 562, 564, 565, 566, 567, 568, 569, 571, 575, 580, 581, 587, 588, 636, 639, 640, 641, 646, 647, 649, 651, 652, 655, 657, 658, 660, 663, 664, 665, 667, 668, 670, 675, 679, 681, 687, 689, 691, 694, 695, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 710, 711, 713, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 728, 729, 730, 731, 732, 733, 735, 736, 737, 738, 741, 781, 805, 809, 816, 819, 823, 824, 826, 827, 833, 834, 837, 840, 841, 842, 843, 845, 846, 847, 850, 851, 854, 855, 858, 859, 861, 862, 864, 867, 871, 874, 876, 877], "analog": 861, "analogu": [183, 207, 571], "analysi": [134, 697, 864, 867], "analyz": 5, "andd": 120, "angl": [400, 411, 413, 414], "angstrom": 178, "ani": [4, 5, 20, 21, 22, 26, 70, 116, 121, 130, 131, 148, 207, 210, 214, 216, 219, 220, 231, 235, 240, 287, 295, 299, 302, 303, 315, 316, 340, 341, 344, 345, 346, 350, 358, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 391, 395, 396, 401, 409, 415, 421, 432, 433, 434, 435, 436, 437, 440, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 482, 483, 546, 563, 569, 570, 571, 572, 573, 600, 603, 604, 605, 640, 641, 643, 644, 645, 646, 647, 649, 662, 673, 689, 695, 700, 709, 711, 719, 728, 734, 736, 794, 796, 805, 825, 833, 834, 836, 837, 839, 840, 841, 844, 845, 854, 858, 859, 860, 861, 867, 870, 871, 876], "ani2": 870, "anim": [722, 825, 836, 860, 867, 870], "annot": [184, 864, 871], "anonym": [4, 145], "anoth": [4, 21, 48, 130, 142, 162, 179, 220, 305, 310, 317, 318, 350, 430, 564, 646, 709, 720, 727, 734, 737, 738, 825, 830, 840, 841, 843, 845, 859, 860, 861, 867], "answer": 180, "anyth": 21, "anywher": [164, 694], "apach": [23, 822, 823], "apart": 707, "api": [0, 4, 7, 8, 21, 22, 41, 56, 68, 101, 102, 231, 235, 241, 242, 293, 317, 318, 359, 571, 649, 693, 696, 697, 699, 702, 707, 708, 709, 710, 711, 713, 719, 725, 728, 731, 732, 747, 764, 768, 785, 788, 806, 811, 816, 822, 824, 825, 826, 827, 829, 830, 843, 844, 858, 860, 861, 865, 872, 874, 876], "apinn": [729, 738, 767, 769, 778, 813, 821], "api\u4e5f\u652f\u6301python\u7684\u53ef\u8fed\u4ee3\u7c7b\u578b": 754, "api\u4e5f\u80fd\u5904\u7406\u7279\u5f81\u6570\u636e\u548c\u56fe\u7ea7\u522b\u7684\u6807\u7b7e\u6570\u636e": 751, "api\u4ee5\u6613\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u52a0\u8f7d\u7684\u683c\u5f0f\u6784\u9020\u5212\u5206\u7ed3\u679c": 747, "api\u4ee5\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u4fe1\u606f\u65f6": 755, "api\u548c": 771, "api\u5c06": 753, "api\u5c06\u5f02\u6784\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 755, "api\u5c06\u65b0id\u5206\u914d\u7ed9\u8f93\u5165\u56fe\u7684\u8282\u70b9\u548c\u8fb9": 747, "api\u7684\u8f93\u5165": 754, "api\uac00": 788, "api\uacfc": 788, "api\ub294": [785, 786, 788, 795], "api\ub4e4": [786, 792, 793, 795, 796, 798], "api\ub4e4\uacfc": 798, "api\ub4e4\uc740": [786, 792], "api\ub4e4\uc744": [782, 786, 792, 795], "api\ub4e4\uc758": 786, "api\ub4e4\uc774": 780, "api\ub4e4\uc774\ub2e4": 786, "api\ub85c": 799, "api\ub97c": [783, 785, 786, 787, 788, 792, 794, 796, 812], "api\uc5d0": 788, "api\uc5d0\uc11c\ub294": 795, "api\uc640": 815, "api\uc740": 788, "api\uc758": 786, "appear": [36, 51, 52, 131, 219, 340, 641, 720], "append": [295, 302, 303, 315, 391, 689, 722, 723, 727, 728, 732, 772, 812, 816, 825, 826, 834, 835, 837, 844, 847, 854, 855, 858, 859, 860, 861, 867, 870, 871, 877], "appendix": [183, 305, 317], "appendix_c": 183, "appi": [395, 406, 407, 410, 411, 413, 415, 418, 421, 428], "appl": 22, "appli": [0, 1, 9, 20, 27, 28, 73, 91, 92, 93, 94, 100, 113, 116, 117, 121, 148, 220, 241, 299, 308, 357, 363, 391, 392, 394, 397, 400, 401, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 426, 427, 428, 429, 432, 433, 441, 442, 443, 448, 453, 454, 455, 456, 457, 458, 462, 463, 464, 506, 507, 606, 626, 628, 657, 659, 663, 664, 665, 670, 672, 695, 711, 713, 715, 730, 731, 734, 736, 819, 826, 829, 843, 850, 858, 859, 860, 861, 864, 871], "applic": [14, 138, 220, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 444, 826, 845, 846, 864, 867], "apply_edg": [5, 9, 20, 35, 464, 678, 679, 680, 681, 682, 714, 715, 728, 734, 737, 758, 759, 764, 766, 774, 777, 799, 801, 806, 809, 812, 818, 820, 861, 871], "apply_func": [416, 417, 859], "apply_nod": [34, 871], "apply_node_func": [73, 91, 92, 93, 94, 100, 113, 548, 549, 550, 551, 552, 717, 761, 803, 864], "apply_norm": 401, "appnp": [396, 674], "appoint": 6, "appreci": 864, "approach": [131, 287, 305, 317, 340, 347, 438, 439, 440, 553, 575, 699, 703, 709, 711, 714, 715, 860, 868, 870, 874], "appropri": [120, 210, 213, 728, 871], "approv": 21, "approx": 415, "approxim": [14, 347, 396, 438, 440, 575, 674], "apt": [823, 854], "ar": [1, 4, 5, 6, 9, 10, 11, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 78, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 135, 136, 137, 140, 142, 143, 145, 147, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 163, 165, 171, 173, 174, 178, 179, 180, 182, 186, 187, 188, 191, 192, 193, 195, 197, 210, 213, 214, 216, 217, 219, 220, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 307, 311, 312, 315, 316, 319, 320, 321, 323, 324, 338, 339, 340, 341, 344, 345, 346, 347, 351, 357, 358, 359, 363, 389, 391, 393, 394, 395, 397, 403, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 438, 439, 440, 450, 452, 453, 457, 461, 463, 464, 481, 482, 483, 484, 506, 509, 546, 547, 549, 553, 557, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 578, 580, 581, 583, 609, 617, 619, 620, 622, 623, 628, 632, 640, 641, 643, 644, 645, 647, 649, 651, 652, 656, 657, 663, 673, 687, 689, 693, 695, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 718, 719, 720, 722, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 755, 763, 780, 784, 795, 796, 802, 805, 806, 821, 823, 824, 825, 826, 827, 828, 829, 830, 831, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 850, 854, 858, 859, 860, 861, 862, 864, 865, 867, 870, 871, 872, 874, 877], "arang": [9, 20, 95, 96, 117, 157, 158, 191, 209, 217, 219, 220, 246, 294, 295, 300, 301, 303, 304, 319, 328, 341, 345, 346, 389, 393, 482, 546, 559, 560, 561, 562, 613, 614, 617, 623, 624, 625, 635, 657, 660, 661, 703, 719, 720, 764, 765, 806, 808, 840, 841, 845, 846, 855, 859, 870], "arbitrari": [4, 20, 48, 111, 125, 249, 304, 361, 422, 564, 649, 677, 691, 695, 703, 735, 737, 827, 834, 837, 840, 841, 843, 845, 867], "arbitrarili": 677, "arc": 706, "architectur": [9, 447, 691, 714, 826, 859, 860, 871], "archiv": 201, "archlinux": 854, "archwiki": 854, "area": 845, "arena": 851, "arg": [22, 121, 315, 336, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 422, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 699, 723, 745, 763, 766, 785, 805, 809, 835, 850, 855, 876, 877], "argmax": [824, 825, 837, 842, 844, 846, 854, 859, 864], "argo_scal": 850, "argo_tutori": [832, 850, 853], "argument": [4, 20, 22, 34, 36, 37, 51, 54, 73, 93, 94, 100, 108, 113, 117, 121, 122, 131, 140, 210, 211, 212, 213, 216, 220, 231, 240, 242, 246, 287, 292, 299, 312, 315, 328, 333, 340, 341, 345, 346, 352, 360, 361, 391, 420, 422, 432, 433, 434, 435, 436, 437, 462, 482, 509, 546, 562, 568, 569, 570, 572, 573, 580, 581, 641, 646, 649, 687, 703, 704, 709, 710, 714, 719, 721, 725, 735, 794, 806, 807, 824, 843, 845, 851, 854, 861], "argument\ub85c": 811, "ari": [827, 864], "arnold": 864, "around": [292, 835, 837, 877], "arr": [4, 319, 700, 746, 786], "arrai": [4, 7, 21, 101, 102, 125, 126, 148, 197, 198, 205, 207, 217, 220, 233, 240, 249, 250, 312, 319, 336, 562, 566, 567, 568, 571, 580, 581, 587, 588, 695, 700, 703, 711, 788, 839, 840, 841, 847, 854, 860], "arrang": [562, 580, 581, 697], "array_lik": 207, "array\ub294": 788, "array\ub4e4\uc5d0": 786, "array\ub4e4\uc744": 786, "array\ub4e4\uc758": 786, "array\ub97c": 795, "arrow": [836, 860], "arrows": 864, "art": [702, 830, 871], "articl": [149, 182, 185, 192, 843, 851], "arxiv": [134, 137, 146, 147, 161, 162, 169, 171, 174, 180, 182, 188, 195, 289, 305, 436, 437, 452, 564, 725, 727, 775, 830, 837, 850, 871, 877], "as_edge_prediction_sampl": [214, 216], "as_tensor": 826, "as_tupl": [697, 743, 783, 788, 859, 860], "asarrai": [4, 700, 746, 786], "ascend": [197, 205, 287, 299, 447, 572], "asgraphpreddataset": 826, "aslinkpreddataset": 855, "aspect": [178, 179, 867], "aspirincod": 756, "assembl": [301, 867, 871], "assert": [89, 121, 219, 290, 294, 296, 300, 319, 697, 743, 763, 783, 805], "assign": [4, 27, 28, 39, 52, 78, 114, 115, 125, 141, 142, 143, 147, 173, 221, 222, 223, 224, 225, 232, 236, 239, 240, 241, 249, 359, 360, 547, 562, 571, 647, 700, 701, 702, 703, 708, 709, 710, 734, 738, 753, 794, 818, 844, 847, 854, 859, 860, 871], "associ": [43, 46, 47, 74, 75, 103, 197, 205, 241, 242, 301, 307, 391, 422, 433, 435, 566, 568, 569, 570, 571, 572, 700, 706, 711, 735, 796, 859, 860, 861, 870, 871], "assum": [48, 130, 207, 210, 214, 215, 216, 217, 219, 221, 241, 245, 299, 312, 328, 350, 432, 481, 566, 568, 569, 570, 571, 646, 695, 697, 699, 700, 703, 733, 734, 736, 737, 788, 842, 844, 847, 854, 855, 867, 871, 876, 877], "assume_num_node_within_int32": 312, "assumpt": [20, 704, 851, 860], "assur": 687, "astyp": [407, 408, 411, 413, 414, 424, 847], "asv": 830, "asym_a": 829, "asymmetr": 706, "async_op": [299, 339], "asynchron": [210, 290, 294, 296, 297, 299, 300, 305, 310, 319, 339], "aten": 826, "atom": [177, 178, 179, 195, 397, 449], "atom_encod": 826, "atomencod": 826, "att": [423, 871], "att_anim": 871, "att_map": 871, "att_weight_map": 871, "attach": [4, 141, 142, 143, 189, 190, 700, 859, 870], "attempt": 200, "attend": [867, 871], "attent": [9, 363, 395, 400, 407, 408, 411, 413, 414, 423, 430, 431, 442, 445, 446, 450, 452, 453, 455, 456, 457, 462, 639, 655, 675, 691, 728, 829, 832, 862, 863, 872, 874], "attention_weight": 411, "attenu": [403, 425], "attn": [450, 826], "attn_aft": 431, "attn_bef": 430, "attn_bia": [450, 453, 691], "attn_bias_typ": [450, 453], "attn_drop": [411, 413, 414, 450], "attn_dropout": [430, 431, 452, 453], "attn_fc": 861, "attn_head": 861, "attn_mask": [450, 453, 689, 691], "attr": [165, 179, 432, 436, 437, 452, 606, 626, 736, 775, 776, 788, 819, 846, 876], "attract": [73, 113], "attribut": [22, 122, 125, 140, 149, 159, 165, 179, 185, 186, 248, 249, 291, 299, 304, 305, 310, 317, 318, 330, 648, 651, 652, 687, 701, 703, 716, 734, 788, 842, 843, 846, 847, 871], "attrvisitor": 22, "auc": [834, 845, 855], "augment": [452, 654, 660, 661, 662, 703, 824, 860], "auroc": 834, "aut": 871, "authent": 854, "author": [145, 151, 152, 177, 178, 179, 181, 311, 320, 397, 655, 694, 703, 706, 725, 788, 858, 859, 860, 861, 864, 867, 870, 871], "author___affiliated_with___institut": 703, "author___writes___pap": 703, "authorship": [151, 152], "auto": [21, 22, 822, 829, 834, 837, 850, 871, 877], "auto_cast_to_optimal_dtyp": 311, "autocast": [728, 812], "autoencod": 859, "autograd": [9, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 583, 830], "autom": 21, "automat": [4, 21, 22, 156, 221, 291, 423, 426, 430, 565, 646, 694, 700, 701, 703, 714, 719, 724, 728, 812, 829, 854, 855, 858], "auxiliari": [702, 703], "av": 403, "avail": [4, 21, 118, 119, 148, 168, 183, 186, 207, 231, 240, 289, 324, 347, 438, 440, 573, 575, 695, 699, 724, 736, 738, 825, 830, 835, 851, 868, 871, 874], "averag": [4, 10, 137, 149, 175, 177, 181, 183, 185, 195, 245, 403, 405, 421, 441, 481, 649, 664, 665, 670, 736, 819, 829, 835, 844, 845, 846, 861, 871, 876, 877], "avg": 25, "avg_deg": 183, "avg_degre": [664, 665, 670], "avg_loss": [826, 871], "avgpool": [432, 437], "avoid": [21, 34, 70, 73, 89, 93, 94, 100, 113, 116, 130, 220, 328, 333, 344, 350, 395, 405, 407, 410, 411, 413, 414, 415, 418, 421, 428, 450, 452, 453, 563, 569, 570, 571, 572, 640, 647, 649, 689, 700, 703, 707, 715, 726, 732, 835, 877], "aw": [289, 851], "awai": [4, 865, 874], "awar": [719, 736, 861], "awesom": 21, "ax": [825, 867, 870], "axi": [410, 858, 860, 861, 870], "b": [6, 22, 26, 45, 79, 82, 105, 118, 119, 121, 127, 128, 129, 131, 179, 312, 313, 322, 358, 394, 399, 408, 411, 413, 414, 419, 421, 426, 434, 436, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 455, 456, 457, 465, 505, 508, 557, 558, 564, 613, 617, 622, 623, 634, 635, 641, 646, 651, 652, 656, 701, 731, 736, 763, 764, 766, 768, 771, 776, 805, 806, 809, 811, 815, 819, 827, 829, 859, 860, 864, 867, 870], "b_": [860, 867, 870], "b_dst": 127, "b_h": 871, "b_iou": 864, "b_o": 871, "b_size": 850, "b_src": 127, "ba": [118, 127, 131, 141, 142, 143, 358, 564], "bachman": 847, "back": [21, 22, 44, 104, 122, 564, 646, 649, 701, 723, 808, 843], "backend": [3, 4, 6, 8, 9, 21, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 210, 214, 215, 216, 219, 246, 247, 248, 249, 250, 287, 290, 300, 340, 341, 345, 346, 347, 357, 363, 438, 439, 440, 441, 442, 443, 444, 448, 449, 464, 482, 483, 546, 553, 575, 577, 640, 642, 646, 647, 648, 656, 662, 668, 673, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 699, 700, 707, 709, 729, 733, 745, 746, 785, 786, 794, 826, 830, 835, 851, 854, 855, 861, 864, 876, 877], "backend_unittest": 21, "background": [305, 310], "backprop": [728, 812], "backpropag": 725, "backpropagate\ub97c": 811, "backtrack": [69, 350, 668, 860], "backup": 699, "backward": [4, 9, 10, 118, 119, 389, 393, 432, 433, 434, 435, 436, 437, 461, 699, 700, 718, 719, 720, 723, 725, 727, 728, 734, 736, 737, 738, 745, 746, 763, 764, 766, 768, 774, 776, 777, 778, 785, 786, 805, 806, 809, 811, 812, 818, 819, 820, 821, 824, 825, 826, 827, 834, 835, 837, 842, 844, 845, 846, 854, 855, 858, 859, 860, 861, 864, 876, 877], "backwards\ub97c": 805, "bad": [21, 22, 450, 451, 453, 455, 456, 860], "bag": [135, 136, 155, 187, 193], "baidu": 21, "balanc": [189, 190, 240, 359, 360, 463, 702, 854], "balance_edg": [209, 240, 359, 360, 703, 747, 788, 854, 855], "balance_ntyp": [209, 240, 359, 360, 703, 747, 788, 854], "balkance_edg": 209, "ban": 188, "bandwidth": [292, 305, 310], "bar": [120, 824, 825, 829], "barab\u00e1si": [141, 142, 143], "barrier": [4, 850], "baryshnikov": 859, "base": [4, 6, 13, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 232, 239, 240, 243, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 484, 547, 564, 566, 568, 606, 616, 626, 639, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 691, 693, 700, 701, 710, 719, 731, 736, 737, 825, 830, 833, 840, 841, 845, 846, 847, 859, 860, 861, 870, 871], "base_dir": [311, 840, 841], "baselin": 830, "basenam": [840, 841], "basetransform": [13, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677], "bash": [21, 823], "basi": [394, 401, 426, 457, 465, 725, 859], "basic": [7, 9, 156, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 693, 696, 702, 705, 822, 828, 842, 844, 845, 847, 854, 855, 860, 867, 871, 877], "basicfeaturestor": [306, 320], "batch": [4, 6, 7, 13, 20, 22, 27, 28, 36, 37, 38, 53, 54, 95, 96, 101, 102, 114, 115, 116, 117, 128, 129, 130, 165, 168, 172, 183, 186, 208, 210, 213, 220, 246, 247, 295, 299, 303, 308, 341, 344, 347, 349, 350, 358, 389, 393, 394, 399, 410, 419, 430, 434, 436, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 454, 455, 456, 457, 482, 483, 546, 557, 558, 559, 560, 561, 563, 569, 575, 577, 578, 579, 614, 615, 622, 640, 649, 650, 651, 652, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 696, 697, 699, 700, 714, 717, 718, 721, 725, 726, 731, 742, 745, 746, 748, 776, 782, 785, 786, 789, 808, 822, 826, 829, 833, 835, 850, 861, 867, 871], "batch_depend": [214, 305], "batch_f": [441, 442, 443, 444, 445, 446, 447, 448, 449], "batch_first": [451, 689, 730, 770, 814], "batch_g": [441, 442, 443, 444, 445, 446, 447, 448, 449], "batch_input": [699, 745, 785, 854, 855], "batch_label": [699, 745, 785, 854], "batch_norm": [410, 419, 454], "batch_num_edg": [95, 96, 122, 687, 736, 819, 846], "batch_num_nod": [96, 122, 687, 736, 819, 846], "batch_pr": [699, 745, 785, 854, 855], "batch_siz": [4, 122, 183, 209, 210, 213, 214, 215, 216, 219, 220, 295, 302, 303, 305, 310, 321, 389, 393, 432, 436, 437, 450, 452, 453, 696, 697, 699, 700, 719, 720, 721, 722, 723, 725, 726, 727, 736, 742, 743, 745, 746, 763, 764, 765, 766, 768, 776, 782, 783, 785, 786, 805, 806, 807, 808, 809, 811, 819, 826, 834, 835, 837, 846, 850, 854, 855, 860, 864, 871, 876, 877], "batch_tre": 864, "batch_walk": 389, "batched_g": 826, "batched_graph": [165, 168, 172, 186, 213, 736, 776, 819, 846, 860, 864], "batched_label": [165, 168, 172, 186, 860], "batched_pmpd": 860, "batchedgraph": 871, "batcher": 864, "batcher_dev": 864, "batchnorm": 422, "batchnorm1": 826, "batchnorm1d": [422, 826, 860], "batchnorm2": 826, "bbg": 122, "bc": 118, "bcewithlogitsloss": [826, 861], "bdd": [394, 426], "beam": 871, "beat": 21, "becam": 167, "becasu": 322, "becaus": [4, 9, 21, 22, 34, 73, 93, 94, 100, 113, 122, 131, 287, 340, 391, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 571, 700, 701, 702, 707, 715, 721, 722, 737, 827, 835, 844, 854, 860, 861, 868, 874, 877], "becom": [122, 126, 131, 249, 250, 287, 340, 427, 559, 625, 720, 871], "been": [4, 22, 120, 131, 162, 173, 188, 230, 287, 292, 340, 394, 423, 426, 571, 697, 704, 721, 725, 826, 860, 864, 871], "befor": [4, 21, 89, 108, 117, 126, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 223, 224, 225, 235, 250, 290, 292, 295, 299, 300, 302, 303, 305, 310, 315, 322, 359, 430, 431, 442, 453, 461, 547, 558, 565, 568, 571, 673, 689, 691, 700, 701, 702, 703, 721, 723, 726, 728, 829, 835, 842, 847, 850, 854, 860, 861, 864, 868, 871, 874, 876, 877], "begin": [358, 452, 763, 805, 827, 828, 854, 860, 861, 867, 876], "beginn": 822, "behavior": [229, 230, 290, 294, 296, 300, 311, 319, 700, 707, 737, 847, 851, 867, 870, 871], "behaviour": 835, "behind": [700, 859, 876], "being": [21, 45, 79, 82, 105, 108, 122, 214, 216, 219, 246, 249, 299, 305, 310, 317, 318, 324, 341, 345, 346, 482, 546, 557, 558, 563, 569, 580, 581, 845, 860, 867, 870], "believ": 851, "belong": [4, 68, 116, 142, 143, 174, 181, 189, 190, 197, 205, 220, 229, 230, 232, 236, 239, 240, 307, 351, 359, 547, 640, 687, 702, 703, 734, 827, 847, 859, 860, 868, 874], "below": [4, 5, 22, 89, 131, 220, 240, 287, 295, 340, 344, 425, 426, 465, 575, 664, 665, 670, 695, 697, 699, 700, 701, 702, 703, 704, 708, 710, 711, 718, 719, 727, 731, 735, 824, 825, 826, 827, 829, 830, 840, 841, 850, 854, 855, 858, 860, 861, 867, 870, 871, 876], "benchmark": [22, 132, 135, 136, 146, 151, 152, 153, 159, 162, 169, 179, 192, 347, 348, 351, 419, 480, 667, 696, 703, 742, 782, 826, 835, 837], "benefici": [715, 854], "benefit": [697, 703, 833, 845, 854], "benign": 161, "bernoulli": [733, 734, 773, 774, 817, 818, 867], "bernoulli_": [763, 805], "bernoulli_action_log_prob": 867, "bert": [159, 871], "besid": [159, 352, 422, 573, 699, 715, 723, 730, 732, 867, 871], "best": [4, 14, 401, 556, 671, 693, 721, 726, 780, 829, 832, 837, 842, 843, 845, 852, 853, 861], "best_test_acc": [842, 844], "best_val_acc": [842, 844], "beta": [4, 10, 395, 398, 415, 871], "beta1": [4, 10, 432, 433], "beta2": [4, 10, 432, 433], "beta_": 457, "beta_1": [432, 433], "beta_2": [432, 433], "beta_l": 415, "better": [21, 639, 675, 697, 710, 722, 783, 827, 830, 843, 847, 850, 851, 860], "between": [4, 5, 26, 48, 56, 66, 72, 101, 102, 116, 118, 119, 142, 147, 149, 155, 166, 174, 178, 179, 182, 185, 187, 193, 195, 207, 226, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 299, 305, 310, 347, 397, 415, 418, 435, 437, 438, 440, 450, 455, 456, 457, 461, 463, 547, 565, 566, 569, 575, 576, 580, 581, 649, 691, 701, 703, 706, 711, 720, 726, 734, 736, 737, 826, 827, 829, 843, 845, 847, 858, 859, 860, 861, 867, 870, 871, 876], "bewteen": [407, 413, 414], "beyond": [120, 244, 245, 481, 703, 844, 845], "bf": 551, "bf16": 728, "bfs_nodes_gener": [0, 551], "bg": [36, 37, 38, 95, 96, 116, 122, 128, 129, 144, 432, 434, 436, 437, 557, 558, 577, 578, 579, 651, 652, 687, 710, 736, 754, 776, 795, 819, 876], "bg1": [116, 640], "bhg": [122, 687], "bi": [6, 349, 640, 871], "bi_part": 407, "bia": [392, 399, 400, 401, 402, 404, 405, 406, 408, 411, 412, 413, 414, 415, 418, 420, 421, 424, 426, 427, 428, 429, 450, 453, 455, 456, 457, 458, 571, 691, 727, 730, 770, 814, 858, 859, 861, 864], "bias": 457, "biasedmha": 691, "bidecod": [734, 774], "bidirect": [116, 162, 173, 220, 348, 439, 553, 564, 640, 667, 843], "big": [411, 736], "bigger": [846, 865, 874], "billion": [703, 718], "bilstm": 462, "bin": [204, 352, 573, 698, 702, 744, 784, 788, 847], "binar": 864, "binari": [5, 9, 161, 163, 171, 180, 186, 189, 190, 240, 463, 506, 507, 573, 689, 702, 703, 714, 788, 799, 827, 845, 861, 864], "binary_cross_entropy_with_logit": [723, 834, 845, 855], "binaryreducebackward": [395, 407, 413], "bind": [397, 823, 850], "bio": 851, "bipartit": [9, 26, 44, 45, 68, 79, 82, 104, 105, 116, 118, 119, 125, 126, 130, 358, 398, 400, 401, 402, 405, 406, 407, 408, 410, 411, 413, 414, 418, 421, 424, 427, 554, 564, 571, 641, 706, 711, 731, 732, 791, 796, 806, 815, 816, 836, 860, 870], "bipartite_from_networkx": 126, "bipartite_from_scipi": 125, "bisect": [359, 360, 701], "bisect_left": 701, "bit": [21, 22, 343, 710, 737, 867, 871], "bitcoin": 145, "bitcoinotc": [25, 145], "bitcoinotcdata": [697, 743, 783], "bitcoinotcdataset": [694, 741, 781], "bla": [14, 347, 438, 440, 575], "blitz": [822, 832, 847, 849], "blitz_1_introduct": 842, "blitz_2_dglgraph": 843, "blitz_3_message_pass": 844, "blitz_4_link_predict": 845, "blitz_5_graph_classif": 846, "blitz_6_load_data": 847, "bloat16": 728, "blob": [165, 210, 834, 837, 840, 841, 850], "block": [4, 10, 127, 131, 180, 183, 210, 214, 215, 216, 220, 291, 293, 303, 307, 394, 426, 446, 461, 641, 699, 700, 701, 719, 720, 722, 723, 724, 725, 727, 729, 731, 732, 745, 746, 763, 764, 765, 766, 767, 768, 771, 785, 786, 787, 805, 806, 808, 809, 810, 811, 813, 815, 826, 834, 835, 837, 850, 854, 855, 859, 860, 861, 867, 877], "block3": [763, 805], "block_diag": 860, "block_id": [763, 805], "block_typ": 446, "blocksampl": [214, 216, 721, 763, 805, 807], "blog": [831, 851], "blue": 825, "bmatrix": 827, "bmm": 859, "bn": 860, "board": 851, "bodi": 22, "boil": 858, "boldsymbol": [737, 763, 777, 805, 820], "bond": [177, 179, 195], "book": [137, 232, 237, 239, 702, 703, 831], "bool": [4, 6, 10, 31, 48, 57, 58, 65, 66, 67, 95, 96, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 207, 210, 213, 214, 216, 217, 219, 226, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 246, 287, 291, 292, 295, 297, 299, 303, 305, 307, 310, 311, 312, 317, 318, 324, 327, 329, 339, 341, 344, 345, 346, 347, 348, 350, 359, 360, 389, 392, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 450, 452, 453, 454, 458, 463, 482, 546, 547, 549, 551, 552, 553, 559, 560, 562, 563, 565, 566, 568, 569, 570, 571, 572, 575, 576, 577, 639, 640, 641, 647, 649, 651, 652, 653, 655, 656, 657, 667, 668, 673, 675, 693, 695, 697, 733, 734, 740, 763, 773, 774, 780, 783, 788, 805, 817, 818, 839, 847, 854, 855, 867], "boolean": [53, 54, 210, 213, 216, 232, 239, 246, 299, 305, 310, 317, 318, 334, 339, 342, 482, 570, 688, 700, 734, 738, 786, 842, 854], "booltensor": 861, "boost": 726, "borrow": [22, 199, 200, 736], "both": [0, 9, 21, 22, 44, 56, 62, 63, 73, 89, 104, 116, 118, 119, 130, 134, 149, 155, 181, 185, 187, 193, 210, 216, 230, 299, 305, 310, 311, 317, 318, 322, 344, 350, 357, 358, 391, 405, 406, 407, 408, 411, 412, 413, 414, 421, 423, 424, 427, 451, 457, 482, 483, 563, 573, 600, 603, 604, 605, 607, 617, 622, 623, 640, 641, 646, 647, 649, 695, 699, 700, 703, 705, 710, 711, 713, 714, 722, 728, 734, 829, 830, 839, 842, 843, 845, 847, 854, 859, 860, 861, 862, 867, 871, 874], "bother": [694, 829], "bottom": [142, 143, 864], "bought": [135, 136, 137, 706, 721, 791], "bound": [235, 451, 456, 571, 728], "boundari": 825, "bpr": [737, 820], "branch": [21, 192, 702, 788], "brand": 22, "breadth": [123, 124, 566], "break": [51, 219, 871], "breviti": 697, "brew": 823, "brief": [705, 860], "briefli": 825, "bring": [20, 670, 726], "broadcast": [5, 9, 128, 129, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 323, 416, 427, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 614, 627, 628, 629, 630, 631, 714], "broadcast_edg": 129, "broadcast_nod": 128, "broken": [835, 861], "brook": 756, "brookhuang16211": 756, "bruteforc": [14, 347, 438, 440, 575], "bsddmm": 826, "bspmm": 826, "bucket": 13, "budget": 217, "buffer": [235, 347, 438, 440, 575, 726], "buffer_devic": 722, "bugfix": 21, "bui": [554, 706, 791], "build": [14, 22, 157, 158, 191, 214, 215, 216, 235, 305, 317, 441, 442, 443, 444, 445, 446, 447, 448, 449, 569, 690, 697, 700, 707, 711, 712, 718, 721, 724, 733, 736, 738, 783, 822, 823, 826, 827, 828, 842, 845, 846, 861, 864, 867], "build_dgl": 823, "build_ext": [21, 823], "build_hidden_lay": 859, "build_input_lay": 859, "build_model": 859, "build_output_lay": 859, "built": [3, 9, 13, 22, 34, 73, 91, 92, 93, 94, 100, 113, 162, 179, 181, 289, 700, 713, 715, 728, 731, 735, 736, 738, 758, 799, 812, 815, 822, 829, 830, 833, 844, 858, 861, 864, 867], "builtin": [9, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 697, 698, 723, 724, 825, 834, 844, 845, 858, 859, 861], "builtindataset": [725, 727, 834, 835, 837, 877], "builtinfunct": [34, 73, 91, 92, 93, 94, 100, 113], "bulit": [34, 73, 93, 94, 100, 113], "bunch": [703, 731], "busi": 194, "button": 21, "buyer": 706, "bwtype": 564, "byte": [235, 290, 300, 324, 331], "c": [6, 21, 22, 25, 118, 119, 120, 121, 151, 152, 179, 183, 192, 289, 293, 351, 400, 401, 402, 409, 419, 422, 463, 505, 710, 795, 823, 825, 850, 864, 870, 871], "c_": [178, 179, 405, 412, 421, 859, 861, 864, 870], "c_csc_graph": 299, "c_etyp": [325, 326, 433, 435, 716, 760, 802], "c_etype_func_dict": [433, 435], "c_etype_str": [325, 326], "c_i": 859, "c_j": 864, "c_k": [351, 397], "cach": [23, 138, 139, 140, 142, 143, 148, 156, 189, 190, 209, 210, 217, 290, 300, 305, 310, 324, 331, 428, 698, 723, 809, 824, 825, 827, 842, 844, 845, 851, 858, 859, 860, 861], "cache_path": 209, "cache_s": 300, "cache_size_in_byt": [290, 300], "caculatorgetbrand": 22, "cal": [178, 179], "calc": 22, "calcul": [4, 22, 316, 328, 333, 400, 401, 402, 439, 484, 553, 578, 579, 580, 581, 606, 626, 647, 699, 703, 736, 819, 825, 829, 834, 835, 860, 861, 867, 870, 871, 877], "calculate_gain": [727, 730, 770, 814, 859, 861], "calculatorobject": 22, "call": [0, 4, 6, 9, 21, 22, 26, 45, 52, 66, 79, 82, 105, 108, 117, 118, 119, 131, 145, 156, 217, 240, 287, 290, 294, 295, 296, 299, 300, 303, 319, 339, 340, 363, 391, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 430, 432, 433, 434, 435, 436, 437, 480, 563, 569, 571, 622, 646, 647, 651, 652, 687, 697, 700, 701, 702, 703, 706, 709, 710, 711, 714, 715, 716, 717, 725, 730, 731, 732, 734, 736, 737, 753, 794, 799, 826, 835, 836, 840, 841, 842, 843, 844, 854, 860, 861, 864, 867, 871, 872, 874, 877], "callabl": [4, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 121, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 220, 295, 303, 361, 391, 400, 405, 406, 411, 413, 414, 415, 416, 417, 419, 421, 424, 426, 427, 428, 429, 452, 453, 461, 548, 549, 550, 551, 552, 564, 659, 730], "came": 22, "can": [4, 5, 6, 7, 9, 12, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 73, 74, 75, 77, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 117, 118, 119, 120, 122, 125, 128, 129, 130, 131, 147, 156, 161, 163, 168, 186, 197, 207, 210, 213, 214, 216, 217, 220, 221, 229, 230, 232, 234, 235, 240, 241, 242, 245, 246, 247, 249, 287, 290, 292, 294, 295, 296, 299, 300, 303, 305, 307, 310, 311, 312, 317, 318, 319, 320, 339, 340, 341, 345, 346, 347, 349, 359, 360, 363, 390, 391, 392, 393, 395, 397, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 413, 414, 415, 418, 420, 421, 424, 426, 427, 428, 430, 438, 439, 440, 442, 450, 454, 457, 458, 459, 460, 461, 462, 465, 481, 482, 484, 509, 546, 547, 553, 557, 558, 559, 560, 561, 562, 565, 568, 569, 570, 571, 572, 575, 578, 579, 580, 581, 625, 641, 646, 647, 649, 651, 652, 674, 688, 689, 691, 693, 694, 695, 697, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 781, 793, 822, 823, 825, 826, 827, 828, 829, 830, 833, 834, 835, 836, 837, 839, 842, 843, 844, 845, 846, 850, 851, 854, 855, 858, 859, 860, 861, 862, 864, 867, 868, 870, 871, 872, 874, 876], "candid": [347, 438, 440, 575], "cannot": [4, 20, 21, 210, 307, 341, 345, 346, 436, 482, 546, 700, 701, 703, 708, 709, 711, 714, 733, 753, 755, 794, 796], "canon": [4, 26, 36, 39, 46, 48, 51, 52, 57, 66, 80, 109, 131, 240, 325, 326, 340, 393, 433, 648, 656, 663, 711, 796, 833, 839, 840], "canonical_etyp": [4, 52, 66, 109, 391, 433, 434, 435, 656, 711, 716, 724, 732, 755, 760, 763, 764, 766, 767, 772, 796, 802, 805, 806, 809, 810, 816, 859], "cap": 850, "capabl": [210, 728, 871], "capac": [1, 9, 324, 331, 575, 703, 714, 718, 861, 862, 874], "capav": [178, 179], "capsul": [363, 832, 872, 873, 874], "captur": [706, 716], "care": [162, 432, 433, 434, 435, 436, 437], "carlo": [435, 437], "carri": [702, 703, 736], "cartesian": 457, "case": [4, 5, 9, 14, 21, 22, 27, 32, 34, 41, 42, 44, 48, 51, 73, 93, 94, 100, 104, 108, 109, 113, 116, 125, 126, 131, 140, 181, 200, 210, 214, 232, 239, 249, 250, 287, 299, 340, 349, 358, 363, 395, 398, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 418, 421, 424, 427, 428, 441, 442, 443, 444, 445, 446, 447, 448, 449, 463, 464, 568, 576, 580, 581, 622, 628, 646, 687, 689, 694, 695, 698, 700, 703, 710, 711, 715, 719, 721, 724, 725, 731, 734, 815, 827, 829, 834, 837, 840, 841, 845, 847, 851, 854, 859, 860, 861, 864, 871], "case1": [458, 462, 600, 603, 604, 605, 606, 607, 616, 618, 619, 620, 621, 626, 632, 656, 657, 662, 663, 668, 672, 673, 677], "case2": [458, 462, 600, 603, 604, 605, 606, 607, 616, 618, 619, 620, 621, 626, 632, 656, 657, 662, 663, 668, 672, 673, 677], "case3": [458, 462, 606, 616, 618, 621, 626, 632, 656, 657], "case4": 458, "case\ub4e4\uc5d0": 788, "casio": 22, "cast": [64, 71, 131, 287, 311, 340, 401, 643, 644, 645, 826], "cat": [157, 158, 191, 220, 302, 315, 441, 442, 443, 444, 445, 446, 447, 448, 449, 455, 458, 462, 575, 689, 715, 720, 724, 734, 759, 764, 767, 774, 801, 806, 810, 818, 825, 826, 834, 835, 844, 845, 847, 855, 860, 861, 867, 870, 877], "cat_feat": [715, 759, 801], "catbackward": 444, "categor": [160, 194, 734, 843, 851, 859, 867], "categori": [5, 132, 133, 135, 136, 144, 150, 154, 155, 161, 170, 176, 187, 193, 723, 738, 829, 842, 845, 846, 847, 859], "category_id": 859, "caus": [292, 295, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 731, 850], "caution": 4, "cc": [22, 167, 702, 788], "cd": [21, 137, 823], "cdgnn": 860, "cdot": [116, 120, 186, 395, 399, 402, 403, 407, 410, 411, 422, 423, 424, 427, 444, 458, 563, 674, 731, 763, 771, 805, 815, 825, 844, 864, 867, 870, 871], "cedric": 870, "cell": 171, "center": [393, 432, 433, 434, 436, 457, 843], "cento": 823, "central": 844, "centric": [705, 830], "centuri": 864, "certain": [27, 150, 154, 176, 569, 570, 580, 581, 707, 716, 730, 846, 870], "certif": 200, "certifi": [834, 835, 837, 840, 841], "cetyp": 859, "chain": [182, 315, 707, 726, 792, 845, 858, 864, 867, 871], "chainer": 21, "challeng": [151, 152, 864, 865, 867, 868, 874], "chameleon": 149, "chang": [1, 6, 26, 64, 70, 71, 131, 145, 177, 178, 179, 287, 294, 305, 340, 428, 580, 581, 694, 695, 697, 725, 728, 834, 837, 850, 854, 867, 876], "channel": [422, 860, 861, 871], "chapter": [1, 3, 5, 11, 20, 641, 693, 701, 702, 703, 712, 717, 724, 731, 736, 738, 850, 851], "char": 22, "charact": 867, "character": [120, 245, 481, 736, 827], "characterist": [245, 481, 716], "charg": 699, "charset": [834, 835, 837, 840, 841], "chart": 693, "cheatsheet": 5, "chebconv": 404, "chebnet": 399, "chebyshev": [399, 404], "check": [21, 22, 56, 65, 66, 67, 101, 102, 131, 156, 199, 307, 312, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 571, 693, 694, 697, 698, 702, 703, 717, 719, 728, 780, 781, 784, 822, 823, 824, 825, 826, 827, 830, 845, 859, 861, 867, 876], "check_eq_shap": [731, 771, 815], "check_sha1": [694, 741, 781], "checkout": 21, "checkpoint": [707, 850], "chee": 870, "chemic": 867, "chemistri": [179, 397, 424], "chen": 756, "child": 864, "children": [435, 437], "china": 23, "choic": [23, 463, 506, 554, 555, 702, 845, 846], "choos": [126, 131, 226, 227, 246, 249, 250, 287, 299, 340, 482, 554, 555, 566, 568, 571, 647, 701, 738, 823, 829, 836, 851], "choose_dest": 867, "choose_dest_ag": 867, "choose_dest_and_upd": 867, "choose_dest_log_p": 867, "choosedestandupd": 867, "chosen": [146, 169, 195, 226, 227, 241, 242, 299, 304, 321, 347, 434, 436, 569, 570, 571, 572, 823], "chrsmrr": [168, 186], "chunk": [701, 864], "chunk_graph": 703, "chunkfilespec": 703, "ci": 21, "cifar10": [146, 169], "cikm": 162, "circ": [398, 450, 826], "circl": 867, "circular": 172, "citat": [150, 153, 154, 176, 289, 670, 827, 842, 845, 860], "citation2": [289, 855], "citation_graph": [860, 861], "citationdata": [697, 743, 783], "citationgraphdataset": [25, 150, 154, 176, 697, 743, 783], "citationgraphdataset\u6e90\u4ee3\u7801": 743, "cite": [311, 703, 788, 827, 845, 859, 860], "citegrh": [860, 861], "cites": [25, 150, 697, 743, 783, 830], "citeseergraphdataset": [697, 728, 733, 738, 743, 773, 778, 783, 817, 821], "citizen": 22, "cla": [825, 867, 870], "clamp": [451, 456, 463, 689, 737, 777, 809, 820, 871], "clang": 823, "class": [0, 1, 4, 6, 8, 10, 13, 22, 31, 120, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 244, 245, 250, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 351, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 564, 615, 622, 633, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 692, 694, 695, 697, 700, 701, 719, 720, 722, 723, 724, 725, 727, 728, 730, 732, 734, 736, 737, 738, 740, 743, 763, 764, 765, 766, 767, 768, 770, 772, 774, 776, 777, 778, 780, 783, 805, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 821, 824, 825, 826, 827, 828, 829, 834, 835, 837, 838, 839, 842, 844, 845, 846, 847, 851, 854, 855, 858, 859, 860, 861, 864, 870, 876, 877], "classic": [430, 719, 822, 825, 870, 871], "classif": [2, 120, 122, 132, 133, 135, 136, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 159, 160, 161, 163, 165, 167, 168, 169, 170, 172, 175, 176, 181, 186, 189, 190, 192, 194, 209, 210, 211, 213, 214, 215, 216, 219, 220, 245, 289, 305, 307, 310, 317, 318, 405, 421, 432, 433, 434, 435, 436, 437, 447, 463, 481, 660, 663, 700, 703, 718, 723, 727, 733, 737, 818, 820, 824, 830, 832, 833, 834, 844, 845, 848, 849, 855, 856, 857, 858, 859, 860, 861, 867, 878, 879], "classifi": [149, 155, 185, 187, 193, 435, 437, 736, 737, 738, 776, 819, 858, 859, 860], "claud": 864, "clean": [21, 692, 711, 714], "clear": [861, 871], "clearli": [21, 861], "clf": [389, 870], "cli": 21, "click": [21, 220, 733, 734, 737, 773, 774, 777, 817, 818, 820, 825], "click_dst": [733, 773, 817], "click_src": [733, 773, 817], "client": [4, 235], "cliqu": 172, "clock": [183, 207, 324], "clone": [21, 56, 64, 71, 89, 108, 422, 643, 644, 645, 702, 788, 823, 860, 867, 871], "cloner": 21, "close": [178, 389, 393, 697, 825, 861, 870, 871], "cloud": [6, 14, 21, 347, 410, 438, 440, 575], "club": [167, 707, 751, 792, 825, 847], "cluster": [4, 6, 147, 209, 562, 699, 700, 702, 703, 704, 830, 854, 855, 860], "cluster_gcn": 209, "cm": 825, "cmake": 823, "cmap": [825, 860], "cn": 23, "cnn": [410, 418, 843, 871], "cnt": 649, "co": [4, 134, 135, 136, 137, 151, 152, 289, 395, 397, 458, 655, 827, 829], "coalesc": [240, 594, 649, 677, 727, 829], "coarsen": 6, "coauthor": [25, 151, 152, 706], "coauthordata": [697, 743, 783], "code": [4, 22, 130, 145, 164, 166, 175, 177, 178, 179, 183, 184, 196, 199, 200, 209, 220, 235, 391, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 694, 696, 697, 699, 700, 701, 707, 708, 710, 711, 713, 714, 719, 720, 724, 725, 726, 727, 728, 729, 731, 734, 735, 736, 738, 748, 783, 789, 824, 825, 826, 827, 829, 830, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 862, 864, 865, 867, 868, 870, 871, 872, 874, 876, 877], "coef": [435, 437, 664], "coeffici": [4, 10, 394, 426, 431, 463, 465, 484, 664, 859, 870], "coff_budget": [434, 436], "coff_connect": [434, 436], "col": [618, 632, 829, 860], "col_sort": 287, "colab": 828, "collab": [25, 165, 168, 186], "collaps": 164, "collat": [183, 213, 689], "collate_dgl": 826, "collate_fn": [4, 183, 213, 389, 393, 696, 699, 700, 742, 745, 746, 782, 785, 786, 826, 860, 864], "collect": [5, 7, 22, 122, 133, 164, 241, 242, 299, 301, 397, 434, 436, 461, 696, 699, 700, 833, 835, 859, 860, 864, 867, 876, 877], "colon": 703, "color": [22, 825, 827, 836, 860, 861], "colorbar": 861, "column": [4, 31, 32, 118, 119, 131, 287, 312, 323, 328, 330, 340, 347, 404, 405, 406, 553, 584, 585, 587, 588, 600, 603, 604, 605, 606, 607, 618, 619, 620, 626, 628, 632, 662, 695, 711, 755, 796, 827, 829, 847, 854, 855, 860], "com": [21, 23, 135, 136, 151, 152, 153, 159, 162, 165, 210, 688, 697, 702, 743, 756, 783, 788, 797, 823, 834, 835, 837, 840, 841, 850, 851], "combin": [20, 26, 231, 240, 394, 398, 425, 426, 431, 442, 458, 465, 573, 647, 703, 713, 714, 715, 722, 725, 734, 738, 825, 842, 846, 859, 861, 871], "combine_nam": 26, "come": [134, 149, 155, 185, 187, 193, 401, 426, 462, 647, 835, 845, 867, 871], "comma": 695, "command": [21, 700, 702, 704, 823, 824, 825, 826, 827, 829, 854, 860], "comment": [21, 181, 724], "commerc": 827, "commerci": 159, "commit": 21, "committ": 21, "committor": 21, "common": [14, 21, 26, 130, 160, 210, 213, 395, 405, 407, 410, 411, 413, 414, 415, 418, 421, 428, 707, 711, 714, 715, 717, 728, 731, 732, 734, 736, 816, 822, 833, 834, 843, 847, 854, 859, 861, 876], "commonli": [12, 128, 129, 393, 449, 557, 558, 564, 641, 665, 670, 674, 692, 700, 706, 714, 729, 730, 846, 858], "commun": [21, 142, 147, 167, 174, 181, 183, 235, 240, 360, 699, 700, 702, 703, 736, 862, 874, 876], "comp_cor": 850, "compact": [130, 299, 302, 305, 307, 310, 312, 317, 318, 323, 338, 339, 432, 433, 723, 727], "compact_graph": 721, "compacted_csc_format": [323, 339], "compacted_mat": 727, "compacted_node_list": 338, "compacted_pair": 723, "compacted_se": [303, 305, 307, 720, 723, 834, 837], "compani": 393, "companion": [860, 862, 874], "compar": [120, 156, 245, 299, 304, 481, 569, 575, 724, 731, 737, 738, 829, 854, 860, 861, 871], "comparison": [21, 830], "compat": [8, 21, 557, 558, 718, 728, 733, 736, 823, 829], "competit": [835, 870, 877], "compil": [9, 22, 702, 714], "complet": [13, 52, 347, 460, 691, 697, 702, 734, 738, 774, 818, 827, 829, 842, 845, 850, 859, 861, 864, 867, 870, 871, 876], "complex": [9, 347, 438, 440, 575, 695, 716, 826, 844, 845, 861, 867, 871], "complic": [344, 730, 734], "compon": [11, 122, 229, 230, 293, 307, 347, 575, 577, 691, 692, 699, 700, 705, 734, 736, 834, 835, 837, 846, 854, 871], "compos": [3, 13, 22, 159, 174, 246, 289, 341, 345, 346, 347, 393, 425, 465, 482, 546, 575, 826, 833, 859, 861], "composit": [22, 307, 322], "compress": [587, 588, 619, 620, 829], "comput": [0, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 60, 70, 87, 122, 126, 131, 135, 136, 151, 192, 210, 211, 212, 214, 215, 216, 220, 222, 223, 224, 225, 240, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 305, 312, 317, 340, 347, 348, 350, 363, 389, 391, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 463, 465, 481, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 556, 564, 569, 575, 576, 578, 579, 600, 603, 604, 605, 607, 622, 639, 649, 667, 671, 675, 683, 684, 685, 686, 689, 691, 697, 699, 700, 703, 705, 713, 714, 715, 716, 718, 720, 722, 723, 724, 725, 726, 728, 731, 734, 735, 737, 738, 788, 806, 808, 811, 818, 820, 821, 824, 825, 826, 827, 829, 830, 833, 834, 835, 836, 842, 843, 844, 845, 846, 851, 854, 855, 858, 859, 860, 861, 864, 867, 872, 874, 876, 877], "computation": 871, "compute_auc": 845, "compute_block": 307, "compute_cor": [850, 851], "compute_loss": [719, 720, 725, 737, 763, 764, 766, 768, 777, 805, 806, 809, 811, 820, 845], "compute_mod": [439, 553], "conan": 864, "conatin": 307, "concat": [402, 427, 731, 771, 815, 844, 861, 867, 871], "concat_message_funct": [715, 759, 801], "concat_typ": 567, "concat_vid": 567, "concat_vtyp": 567, "concaten": [26, 122, 299, 397, 422, 425, 441, 442, 443, 444, 445, 446, 447, 448, 449, 458, 462, 567, 647, 681, 711, 715, 720, 731, 734, 736, 755, 774, 796, 815, 818, 825, 837, 840, 841, 845, 846, 854, 860, 861, 864, 871], "concentr": [861, 870], "concept": [144, 214, 215, 216, 705, 720, 725, 822, 825, 844, 861], "concis": [9, 714], "conclus": 861, "concret": 89, "concurr": 700, "conda": [400, 401, 402, 834, 837, 840, 841, 850, 858, 861], "condit": [182, 245, 423, 426, 430, 431, 481, 711, 867], "conduct": [14, 161, 163, 305, 310, 317, 318, 505, 697, 702, 718, 736], "confid": 735, "config": [236, 237, 238, 562, 702, 703, 788, 823], "configur": [0, 4, 21, 217, 231, 240, 700, 702, 703, 704, 788, 823, 850, 851, 854, 855, 859, 867], "conflict": [167, 835], "confus": 867, "conjunct": 876, "connect": [1, 4, 96, 120, 130, 133, 137, 144, 151, 152, 161, 162, 163, 171, 173, 174, 178, 180, 181, 182, 188, 220, 229, 230, 235, 344, 347, 350, 358, 359, 397, 400, 403, 411, 413, 414, 418, 419, 422, 424, 425, 434, 436, 547, 560, 564, 575, 580, 581, 641, 655, 666, 687, 700, 706, 734, 735, 736, 737, 826, 827, 833, 842, 843, 846, 854, 855, 858, 859, 860, 861, 867, 870, 871], "consecut": [6, 32, 95, 96, 125, 131, 207, 249, 287, 305, 307, 340, 571, 580, 581, 701, 703, 711, 843], "consequ": [722, 843], "consid": [53, 54, 197, 205, 214, 216, 299, 304, 305, 310, 317, 318, 389, 393, 397, 564, 569, 576, 580, 581, 703, 715, 718, 722, 724, 735, 825, 827, 829, 834, 835, 837, 843, 844, 845, 851, 860, 864, 867, 870], "consider": 867, "consist": [164, 166, 173, 177, 178, 179, 192, 241, 242, 293, 307, 316, 349, 564, 571, 576, 641, 706, 720, 725, 729, 827, 834, 837, 842, 845, 847, 858, 860, 861, 871], "const": 22, "constant": [143, 168, 179, 189, 190, 245, 409, 418, 419, 481, 689, 737, 859, 861, 871], "constexpr": 22, "constitu": [184, 864], "constrain": [195, 434, 436, 871], "constraint": [72, 240, 302, 315, 359, 360, 711, 867], "constrant": [240, 359, 360], "construct": [0, 4, 125, 130, 131, 141, 142, 143, 189, 190, 196, 210, 240, 249, 287, 290, 299, 300, 307, 340, 347, 359, 360, 438, 439, 440, 553, 564, 575, 641, 695, 700, 703, 707, 709, 711, 715, 721, 729, 731, 737, 794, 824, 826, 827, 834, 837, 840, 841, 845, 854, 860, 871, 876], "construct_negative_graph": [737, 777, 820], "constructor": [4, 12, 464, 719], "consum": [292, 312, 715, 728], "consumpt": [715, 721, 722, 728, 830], "contain": [0, 2, 4, 6, 11, 21, 27, 28, 53, 54, 57, 58, 73, 114, 115, 116, 121, 130, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 160, 164, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 186, 191, 192, 194, 195, 207, 220, 236, 240, 241, 242, 247, 287, 290, 293, 294, 296, 299, 300, 302, 305, 306, 307, 310, 311, 315, 317, 318, 319, 322, 332, 340, 347, 352, 357, 359, 390, 395, 398, 403, 406, 407, 408, 411, 413, 414, 416, 417, 418, 421, 427, 438, 439, 440, 457, 464, 483, 547, 553, 569, 570, 571, 572, 575, 580, 581, 594, 640, 641, 648, 689, 695, 696, 700, 702, 703, 704, 710, 716, 720, 725, 734, 737, 818, 820, 829, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 854, 860, 864, 865, 867, 874], "containertyp": 22, "content": [26, 159, 199, 201, 362, 694, 695, 703, 724, 741, 781, 843, 851], "context": [4, 21, 31, 42, 62, 63, 70, 89, 108, 125, 126, 131, 210, 246, 247, 249, 250, 287, 295, 299, 305, 307, 310, 312, 317, 318, 340, 341, 345, 346, 363, 393, 482, 483, 546, 554, 555, 569, 570, 571, 572, 641, 699, 710, 716, 721, 825, 835, 843, 877], "context\ub97c": 807, "contigu": [4, 323, 338, 339, 359, 547, 575, 702, 722, 854], "continu": [299, 398, 647, 695, 718, 732, 772, 816, 830], "contrari": [116, 827], "contrast": [241, 654, 660, 661, 662, 706, 722, 737, 777, 820, 842, 859, 861, 870], "contrib": 871, "contribut": [299, 434, 436, 569, 729, 871], "control": [0, 4, 13, 93, 113, 311, 396, 435, 437, 554, 555, 566, 651, 652, 664, 665, 670, 695, 822, 834, 837, 840, 841, 851], "contruct": [738, 821], "conv": [13, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 434, 436, 466, 467, 468, 469, 470, 471, 472, 473, 727, 729, 731, 738, 769, 778, 813, 815, 821], "conv1": [415, 436, 437, 720, 725, 736, 738, 764, 765, 766, 768, 776, 778, 806, 808, 809, 811, 819, 821, 824, 837, 842, 844, 845, 846, 876], "conv2": [415, 436, 437, 720, 725, 736, 738, 764, 765, 766, 768, 776, 778, 806, 808, 809, 811, 819, 821, 824, 837, 842, 844, 845, 846, 876], "conveni": [9, 693, 734, 845, 876], "convent": [0, 5, 125, 133, 144, 714], "converg": [214, 305, 317, 569, 728, 825], "convers": [22, 231, 563, 609, 647, 702, 707, 710, 728, 829], "convert": [9, 22, 109, 110, 118, 119, 125, 126, 127, 138, 139, 140, 146, 148, 169, 231, 240, 248, 249, 250, 325, 326, 328, 329, 333, 591, 593, 596, 597, 609, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 676, 677, 695, 701, 702, 703, 707, 710, 723, 727, 728, 795, 829, 834, 843, 847, 854, 855, 859, 860], "convert_partit": 788, "convnet": 861, "convolut": [134, 149, 155, 185, 187, 193, 209, 391, 394, 397, 398, 399, 401, 404, 405, 406, 409, 415, 416, 418, 419, 420, 421, 423, 424, 426, 427, 428, 429, 430, 452, 465, 480, 564, 639, 660, 663, 664, 675, 718, 724, 732, 734, 736, 738, 774, 804, 810, 818, 819, 821, 825, 828, 831, 832, 844, 846, 860, 861, 862, 863, 867, 870, 871, 874], "convolutin": 860, "convolution\uc740": 816, "convolution\uc744": 821, "convolution\uc758": 821, "coo": [31, 32, 41, 56, 126, 131, 231, 240, 250, 287, 328, 333, 340, 573, 595, 618, 829, 860], "coo_matrix": [126, 250, 845, 860], "coolwarm": 860, "cooper": 166, "coord": 457, "coord_feat": 409, "coord_feat_out": 409, "coordin": [12, 31, 126, 178, 179, 250, 312, 347, 409, 418, 439, 457, 553, 575, 585, 595, 618, 632, 829], "coordint": 418, "copi": [5, 7, 9, 34, 40, 56, 64, 71, 73, 89, 93, 94, 100, 108, 113, 116, 126, 130, 131, 235, 246, 247, 249, 250, 287, 291, 292, 299, 307, 312, 314, 319, 320, 340, 341, 344, 345, 346, 350, 358, 422, 482, 483, 489, 490, 491, 492, 493, 494, 546, 562, 563, 569, 570, 571, 572, 580, 581, 610, 640, 643, 644, 645, 646, 648, 649, 656, 679, 680, 682, 702, 703, 709, 711, 714, 715, 721, 726, 753, 758, 794, 796, 799, 808, 826, 835, 837, 843, 844, 845, 847, 860, 864, 867, 871, 877], "copy_": [5, 20, 679, 864, 870, 871], "copy_edata": [99, 111, 116, 130, 563, 569, 570, 571, 572, 649, 656], "copy_fil": [748, 789], "copy_lh": [506, 507], "copy_ndata": [99, 111, 116, 130, 344, 563, 569, 570, 571, 572, 640, 649], "copy_rh": [506, 507], "copy_to": [291, 292, 719, 720, 722, 723, 725, 726, 727, 834, 835, 837, 877], "copy_to_shared_memori": [299, 314], "copy_u": [5, 73, 91, 92, 93, 94, 100, 113, 432, 433, 435, 464, 682, 683, 684, 685, 686, 716, 724, 728, 731, 735, 760, 767, 771, 775, 802, 810, 812, 815, 844, 858, 860, 864], "copy_u_sum": 9, "copy_v": 9, "copyreducebackward": 410, "cora": [25, 153, 154, 289, 697, 743, 783, 824, 825, 827, 830, 834, 845, 858], "cora_v2": [139, 697, 743, 783, 824, 825, 827], "corabinari": 860, "coraful": 25, "corafulldata": [697, 743, 783], "corafulldataset": 219, "coragraphdataset": [139, 389, 432, 436, 824, 825, 827, 834, 842, 844, 845, 858], "core": [8, 700, 705, 824, 829, 830, 832, 851, 852, 853, 858, 861, 864, 876], "cornel": 155, "corner": 731, "corpu": 871, "correct": [21, 22, 738, 778, 821, 858], "correctli": [220, 703, 823, 860], "correspond": [7, 20, 21, 22, 27, 43, 46, 53, 54, 74, 90, 101, 102, 103, 107, 109, 113, 117, 118, 119, 122, 134, 139, 147, 148, 156, 165, 178, 179, 182, 192, 205, 210, 213, 214, 216, 221, 232, 239, 240, 299, 304, 305, 307, 310, 312, 317, 318, 322, 323, 338, 339, 347, 350, 363, 391, 400, 401, 402, 411, 422, 431, 434, 438, 439, 440, 450, 453, 457, 458, 462, 553, 563, 565, 567, 576, 619, 620, 639, 647, 655, 657, 667, 668, 675, 695, 701, 703, 710, 711, 714, 723, 724, 725, 732, 735, 736, 738, 824, 825, 826, 827, 834, 837, 840, 841, 842, 844, 860, 861, 864, 871], "correspondenc": 394, "corrsepond": 4, "corrupt": [569, 570, 571, 572, 700, 786], "cosin": [347, 438, 440, 458, 575], "cost": [9, 14, 210, 647], "costli": [646, 722, 836], "could": [9, 21, 22, 32, 66, 216, 231, 240, 241, 242, 293, 295, 299, 303, 311, 322, 363, 395, 396, 441, 443, 447, 448, 506, 507, 564, 573, 580, 581, 646, 675, 695, 697, 701, 703, 715, 719, 723, 724, 736, 738, 829, 834, 835, 837, 840, 841, 845, 851, 854, 860, 864], "coulomb": 177, "count": [111, 231, 290, 294, 296, 298, 300, 305, 317, 319, 347, 438, 440, 575, 600, 603, 604, 605, 649, 677, 842, 851], "counter": 850, "counterpart": [211, 212, 295, 322, 700, 703, 854, 855], "coupl": 870, "cours": [155, 187, 193], "coustom": 791, "cout": 22, "covari": 418, "cover": [14, 21, 209, 699, 700, 701, 702, 703, 707, 718, 726, 822, 828, 836, 871], "cp": 393, "cpp": [826, 847, 860], "cpplint": 21, "cpu": [4, 9, 10, 14, 21, 31, 42, 62, 63, 89, 108, 112, 118, 119, 125, 126, 130, 131, 209, 210, 216, 217, 241, 242, 249, 250, 287, 290, 293, 294, 305, 310, 319, 324, 340, 343, 347, 350, 358, 438, 439, 440, 553, 554, 555, 562, 566, 567, 569, 570, 571, 572, 575, 580, 581, 641, 648, 649, 703, 709, 720, 721, 722, 725, 726, 753, 765, 794, 807, 808, 822, 823, 825, 826, 829, 832, 834, 835, 837, 840, 841, 842, 853, 854, 855, 858, 861, 864, 871, 876], "cpu_best_practis": [832, 851, 853], "cpu_cached_featur": 290, "cpu_count": [835, 877], "cpucachedfeatur": 324, "cpufeaturecach": 290, "cpu\uc5d0\uc11c\ub9cc": 807, "cpu\uc758": 808, "crawlscript": 756, "creat": [1, 3, 4, 5, 9, 12, 13, 21, 22, 27, 28, 41, 42, 44, 48, 51, 55, 56, 57, 58, 60, 61, 64, 65, 70, 71, 77, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 104, 107, 109, 116, 118, 119, 125, 126, 128, 129, 131, 138, 139, 148, 156, 157, 158, 191, 197, 205, 220, 235, 246, 248, 249, 250, 287, 295, 299, 303, 304, 330, 340, 341, 345, 346, 357, 362, 363, 390, 391, 423, 426, 441, 442, 443, 444, 446, 447, 448, 449, 461, 546, 557, 558, 563, 564, 568, 573, 577, 578, 579, 616, 618, 619, 620, 621, 632, 636, 649, 651, 652, 659, 678, 681, 692, 694, 695, 697, 699, 700, 701, 703, 704, 705, 708, 709, 710, 717, 720, 725, 727, 728, 732, 734, 741, 781, 783, 785, 795, 796, 812, 823, 824, 825, 826, 835, 837, 840, 841, 842, 845, 846, 854, 855, 858, 860, 861, 864, 867, 870, 871, 877], "create_block": [127, 641], "create_dataload": [835, 837, 877], "create_dev_conda_env": 823, "create_featur": 859, "create_formats_": [56, 89, 721], "createcacul": 22, "createcalcul": 22, "creation": [4, 210, 290, 300, 699, 731, 837, 843, 847], "credit": [842, 843, 844, 845, 846, 847], "crisi": 166, "criteria": [719, 854], "criterion": [192, 432, 436, 437, 871, 876], "critic": [9, 21, 22, 137, 171, 180, 182, 188, 432, 433, 435, 437, 707, 861], "cross": [73, 101, 102, 702, 703, 716, 737, 802, 820, 845, 859, 860, 871], "cross_entropi": [433, 434, 435, 720, 727, 728, 734, 736, 738, 774, 776, 778, 812, 818, 819, 821, 825, 827, 835, 837, 842, 844, 846, 859, 860, 877], "cross_reduc": 73, "cross_sum": 73, "crossentropyloss": [432, 436, 437, 699, 728, 745, 785, 824, 854, 855, 876], "crowdsourc": 188, "crucial": [432, 433, 434, 436], "cs224w": 842, "csc": [32, 41, 56, 89, 131, 231, 240, 287, 299, 312, 323, 330, 339, 340, 571, 573, 580, 619, 829], "csc_format": [323, 339], "csc_indptr": [299, 328, 330, 333, 727, 840, 841], "cscforamtbas": 313, "cscformatbas": [299, 302, 305, 310, 312, 313, 323, 339, 834, 837], "cscsamplinggraph": 313, "csr": [32, 41, 56, 118, 119, 126, 131, 240, 250, 287, 340, 571, 573, 580, 581, 620, 829], "csr_csc_g": 56, "csr_g": 56, "csr_matrix": [126, 250], "csrc": [847, 860], "csrmmbackward": 118, "csv": [148, 311, 692, 694, 703, 741, 781, 788, 839, 840, 841], "csvdataset": 695, "csvdatatset": 695, "csv\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u683c\u5f0f": 751, "csv\uac00": 792, "ctx": [31, 62, 63], "cu": 393, "cu118": [824, 825, 826, 827], "cu121": 835, "cuda": [4, 14, 89, 108, 110, 125, 126, 210, 248, 249, 250, 287, 291, 292, 297, 300, 305, 310, 319, 331, 332, 340, 347, 400, 401, 402, 438, 440, 575, 586, 609, 642, 709, 720, 725, 728, 753, 763, 764, 766, 768, 794, 805, 806, 807, 809, 811, 812, 823, 824, 825, 826, 827, 834, 835, 837, 842, 871, 876, 877], "cuda_g": [709, 753, 794], "cuda\ub294": 807, "cudf": 248, "cugraph": [13, 110, 248, 400, 401, 402, 642], "cugraph_g": [110, 248, 642], "cugraph_graph": 248, "cugraphbaseconv": [400, 401, 402], "cumsum": 701, "cup": [151, 152], "cur": [701, 787], "current": [1, 4, 14, 20, 21, 27, 28, 56, 130, 138, 139, 144, 200, 220, 232, 236, 239, 240, 244, 295, 359, 360, 412, 415, 461, 562, 568, 609, 700, 719, 822, 823, 834, 837, 840, 841, 855, 864], "current_devic": [210, 300, 331], "curv": [845, 861], "cuspars": [118, 119], "custom": [4, 194, 213, 391, 421, 562, 641, 691, 692, 693, 701, 703, 706, 718, 720, 721, 723, 725, 726, 727, 729, 732, 738, 780, 809, 833, 837, 847], "customgraphconv": [724, 767, 810], "customheterographconv": [724, 767, 810], "customiz": [304, 738], "customized_parser_dataset": 695, "customized_sample_neg": 723, "customized_sample_neighbor": 719, "customizednegativesampl": 723, "customizedneighborsampl": 719, "cut": [240, 360, 691, 703, 788], "cuthil": 562, "cutoff": [178, 397], "cutom": 727, "cv": [178, 179], "cycl": [141, 172, 189, 246, 341, 482, 546, 867], "cycle_s": 189, "cython": [21, 823], "d": [4, 9, 14, 21, 120, 138, 139, 140, 146, 169, 170, 178, 179, 233, 243, 332, 360, 394, 396, 399, 403, 410, 415, 419, 423, 425, 426, 428, 429, 431, 432, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 450, 451, 454, 455, 459, 460, 463, 505, 508, 557, 558, 606, 616, 618, 619, 620, 621, 623, 624, 625, 626, 628, 632, 636, 651, 652, 674, 684, 685, 686, 695, 710, 736, 776, 819, 824, 825, 826, 829, 845, 858, 860, 870, 876], "d1": [394, 505, 508, 829], "d2": [394, 505, 508, 829], "d_": [243, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 458, 860], "d_1": [713, 757, 798], "d_2": [713, 757, 798], "d_e": 827, "d_e_inv": 827, "d_ff": [445, 446], "d_hat": [727, 824, 825, 829], "d_hat_invsqrt": [824, 825], "d_head": [445, 446], "d_i": 9, "d_k": 871, "d_model": [445, 446], "d_t": [243, 433, 434, 435], "d_v": 827, "d_v_invsqrt": 827, "dada": [840, 841], "dadta": [840, 841], "dai": [21, 164, 181, 694], "damm": 864, "data": [0, 1, 3, 4, 5, 6, 7, 13, 14, 22, 26, 27, 28, 34, 35, 41, 43, 44, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 68, 70, 73, 74, 75, 77, 87, 88, 89, 91, 92, 93, 94, 100, 103, 104, 108, 112, 113, 114, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 232, 236, 238, 239, 240, 246, 247, 249, 250, 251, 287, 291, 292, 293, 295, 296, 302, 303, 305, 307, 310, 311, 312, 316, 317, 318, 340, 341, 345, 346, 347, 352, 357, 359, 361, 389, 391, 393, 394, 401, 408, 426, 432, 433, 434, 435, 436, 437, 438, 440, 457, 459, 461, 463, 465, 482, 483, 505, 546, 547, 554, 555, 562, 563, 573, 575, 580, 581, 591, 592, 593, 596, 597, 609, 619, 620, 621, 641, 643, 644, 645, 647, 648, 649, 676, 685, 690, 691, 693, 696, 699, 702, 704, 705, 707, 708, 709, 710, 711, 712, 714, 716, 718, 719, 722, 724, 727, 728, 730, 733, 734, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748, 755, 758, 760, 763, 764, 767, 773, 774, 776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 787, 788, 789, 794, 796, 797, 799, 802, 805, 806, 810, 812, 817, 818, 819, 820, 821, 823, 824, 825, 826, 829, 833, 839, 842, 843, 844, 845, 847, 850, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871], "data0": 695, "data1": 695, "data_dict": [131, 340], "data_it": 871, "data_load": 295, "data_path": 148, "data_pip": 303, "data_root_dir": [240, 702, 703, 747, 788], "data_type_dict": [697, 743, 783], "databas": [164, 847], "dataflow": 860, "datafram": [148, 248, 695, 840, 841], "datail": 179, "dataload": [10, 11, 13, 183, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 295, 305, 315, 317, 389, 393, 432, 436, 437, 461, 689, 691, 696, 697, 699, 700, 719, 720, 721, 722, 723, 725, 726, 727, 736, 742, 743, 745, 746, 763, 764, 765, 766, 768, 776, 782, 783, 785, 786, 805, 806, 807, 808, 809, 811, 819, 826, 834, 835, 837, 846, 850, 851, 854, 855, 860, 864, 876, 877], "dataloader\u4e2d\u8fd0\u884c": 746, "dataloader\u5728\u6bcf\u4e2a\u8bad\u7ec3\u5468\u671f\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u91c7\u6837\u5de5\u4f5c\u8fdb\u7a0b": 746, "dataloader\u76f8\u540c\u7684\u63a5\u53e3": 746, "dataloader\ub294": 786, "dataloader\ub97c": [806, 811], "dataloader\uc5d0\uc11c": 786, "dataloader\uc640": 786, "datapars": 695, "datapip": [7, 291, 292, 295, 297, 302, 303, 305, 308, 309, 310, 315, 317, 318, 321, 719, 720, 722, 723, 725, 726, 727, 833, 834, 835, 837, 877], "datapoint": [196, 207], "dataset": [4, 13, 14, 21, 23, 25, 120, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 210, 213, 245, 289, 292, 306, 311, 389, 432, 434, 436, 437, 481, 689, 692, 693, 694, 698, 699, 700, 725, 727, 728, 733, 736, 738, 742, 743, 745, 746, 773, 776, 780, 782, 783, 785, 786, 817, 819, 824, 825, 826, 827, 830, 832, 833, 835, 839, 840, 841, 844, 845, 846, 848, 849, 858, 861, 876, 877], "dataset_nam": [293, 306, 311, 693, 695, 740, 780, 840, 841], "dataset\ub97c": 779, "datatyp": [728, 829], "dateset": 830, "dateutil": [834, 837, 840, 841], "datset": [25, 172], "dcmake_configuration_typ": 823, "dcmake_cxx_flag": 823, "dd": [25, 168, 186, 871], "ddgl_export": 823, "ddmlc_force_shared_crt": 823, "ddp": [295, 850, 876, 877], "ddp_seed": [210, 213], "de": 871, "deadlock": 324, "deal": [122, 724, 736, 868, 874], "dealloc": 851, "debian": 823, "debug": [4, 23], "dec": 871, "dec_graph": [734, 774, 818], "decai": 415, "decid": [9, 22, 131, 340, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 430, 710, 867, 871], "declar": 700, "decod": [445, 871], "decompos": [394, 426, 864, 871], "decomposit": [394, 401, 426, 465, 725, 859], "decomposition\uc740": 811, "decor": [295, 303], "decreas": [432, 433], "dedic": 231, "dedupl": [305, 310], "deep": [4, 23, 209, 219, 415, 418, 434, 436, 447, 660, 731, 736, 738, 829, 830, 831, 843, 864, 867, 868, 874], "deepchem": [697, 743, 783], "deepcopi": 867, "deepset": 454, "deepset_encod": 454, "deepwalk": 842, "def": [4, 5, 10, 20, 22, 53, 54, 70, 73, 100, 218, 251, 252, 263, 264, 265, 266, 302, 303, 315, 391, 422, 424, 432, 433, 434, 435, 436, 437, 461, 464, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 693, 694, 695, 696, 697, 698, 700, 701, 714, 715, 719, 720, 722, 723, 724, 725, 727, 728, 730, 731, 732, 734, 736, 737, 738, 740, 741, 742, 743, 744, 746, 758, 759, 763, 764, 765, 766, 767, 768, 770, 771, 772, 774, 776, 777, 778, 780, 781, 782, 783, 784, 786, 799, 801, 805, 806, 808, 809, 810, 811, 812, 814, 815, 816, 818, 819, 820, 821, 824, 825, 826, 827, 829, 834, 835, 837, 842, 844, 845, 846, 847, 850, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "defalt": 450, "default": [4, 6, 9, 10, 14, 23, 27, 28, 31, 32, 34, 35, 41, 48, 51, 53, 54, 61, 62, 63, 79, 81, 82, 88, 89, 116, 117, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 205, 207, 208, 209, 210, 213, 214, 216, 219, 226, 231, 232, 235, 236, 239, 240, 245, 246, 247, 249, 250, 287, 289, 291, 292, 295, 297, 302, 305, 310, 311, 312, 315, 324, 330, 340, 341, 344, 345, 346, 347, 348, 350, 352, 359, 360, 363, 389, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 450, 451, 452, 453, 454, 455, 456, 457, 461, 463, 481, 482, 483, 546, 548, 550, 553, 554, 555, 556, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 575, 576, 639, 640, 641, 646, 647, 648, 649, 657, 662, 667, 671, 673, 674, 675, 693, 695, 700, 701, 702, 703, 704, 710, 711, 714, 780, 795, 796, 823, 826, 829, 833, 834, 835, 837, 839, 840, 841, 851, 854, 855, 867, 871, 877], "defin": [4, 5, 7, 9, 13, 27, 28, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 120, 146, 156, 169, 210, 220, 243, 244, 245, 251, 252, 263, 264, 265, 266, 315, 316, 350, 351, 393, 397, 403, 415, 416, 421, 432, 433, 434, 435, 436, 437, 445, 459, 460, 480, 481, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 691, 692, 693, 695, 699, 700, 708, 711, 713, 714, 728, 734, 736, 737, 738, 758, 778, 785, 796, 799, 812, 818, 820, 821, 824, 825, 827, 829, 839, 858, 860, 861, 871, 876], "definit": [66, 72, 240, 397, 627, 629, 630, 631, 699, 705, 720, 723, 727, 738, 859, 860, 864], "deform": 870, "defus": [214, 299, 305, 317, 569], "deg": [731, 771, 815], "deg_emb": 691, "deg_g": 860, "deg_lg": 860, "deg_proj": 860, "degg_batch": 183, "deglg_batch": 183, "degrad": 214, "degre": [4, 13, 60, 87, 120, 130, 165, 181, 183, 217, 245, 395, 400, 401, 402, 403, 405, 407, 410, 411, 413, 414, 415, 418, 421, 425, 428, 429, 435, 437, 451, 481, 484, 664, 665, 670, 674, 689, 702, 703, 723, 727, 731, 824, 825, 827, 829, 843, 844, 858, 860, 861, 864], "degree_as_nlabel": 165, "degree_embed": 451, "degree_encod": [451, 691], "degreeencod": 691, "degree\uac00": 815, "degree\ub4e4": 788, "degree\uc758": 809, "del": 867, "delet": [21, 180, 305, 310, 559, 560], "delimit": 703, "deliv": 867, "delta": [178, 179, 403, 425], "demand": [305, 310], "demo": 826, "demonstr": [42, 459, 460, 649, 695, 727, 733, 734, 828, 840, 841, 847, 854, 862, 864, 871, 874], "denomin": [4, 10, 412], "denot": [120, 243, 397, 411, 418, 429, 463, 673, 824, 825, 858, 859, 860, 861, 864], "dens": [9, 13, 226, 299, 343, 404, 405, 406, 450, 453, 505, 506, 508, 565, 610, 614, 615, 622, 625, 633, 691, 700, 720, 729, 769, 786, 806, 813, 825, 826, 829], "densiti": [183, 197, 565, 707, 751, 792, 860, 867], "departur": 864, "depend": [9, 21, 31, 89, 126, 131, 182, 210, 211, 212, 214, 215, 216, 220, 245, 249, 250, 287, 305, 307, 317, 340, 400, 401, 402, 461, 481, 557, 558, 569, 695, 703, 706, 716, 718, 720, 721, 722, 724, 725, 729, 804, 836, 851, 861, 864, 871], "dependency\ub4e4\uc744": 811, "dependency\uc5d0\uc11c": 806, "deploi": [862, 874], "deprec": [116, 144, 168, 177, 178, 179, 186, 231, 235, 640, 650, 860], "depth": [1, 229, 230, 566], "deriv": [403, 734, 825], "desc": 826, "descend": [651, 652], "descent": [14, 347, 438, 440, 575, 718, 804, 876], "describ": [5, 21, 43, 46, 47, 74, 75, 103, 167, 240, 305, 317, 320, 410, 426, 465, 641, 646, 654, 655, 660, 661, 662, 663, 703, 714, 718, 731, 733, 734, 737, 825, 827, 836, 837, 839, 840, 841, 842, 845, 847, 858, 860, 861, 867, 870], "descript": [61, 88, 131, 137, 160, 178, 179, 180, 287, 320, 340, 859, 871], "deserv": 861, "design": [4, 150, 154, 176, 244, 289, 307, 397, 571, 691, 700, 701, 703, 716, 722, 726, 736, 829, 833, 838, 860, 871], "desir": [20, 22, 120, 226, 565, 664, 665, 670, 702], "desktop": 851, "despit": 703, "dest": 867, "dest_list": 867, "destin": [4, 5, 9, 26, 27, 30, 31, 32, 34, 39, 43, 44, 45, 47, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 73, 79, 80, 82, 87, 88, 90, 91, 92, 93, 94, 100, 104, 105, 107, 109, 113, 114, 117, 118, 119, 123, 125, 126, 127, 131, 200, 214, 216, 220, 226, 227, 231, 233, 243, 247, 248, 250, 287, 295, 299, 303, 314, 321, 322, 323, 339, 340, 358, 363, 391, 398, 400, 401, 402, 404, 405, 406, 407, 408, 411, 413, 414, 424, 427, 458, 484, 485, 486, 487, 488, 490, 491, 492, 493, 494, 496, 498, 500, 502, 504, 506, 507, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 523, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 554, 557, 559, 561, 562, 565, 571, 578, 580, 581, 641, 656, 657, 663, 672, 680, 695, 702, 703, 711, 714, 716, 723, 730, 731, 732, 796, 802, 805, 835, 836, 840, 843, 844, 845, 847, 860, 864, 871, 877], "destination_typ": [711, 755, 796], "destroi": [4, 700], "destroy_process_group": 876, "dests_prob": 867, "dests_scor": 867, "detach": [389, 826, 834, 835, 837, 844, 854, 860, 877], "detail": [4, 9, 21, 22, 91, 146, 169, 209, 214, 216, 217, 220, 222, 223, 224, 225, 230, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 564, 570, 627, 629, 630, 631, 688, 689, 691, 695, 697, 699, 700, 701, 703, 707, 714, 717, 719, 720, 721, 723, 725, 726, 727, 731, 738, 822, 823, 830, 834, 837, 840, 841, 844, 847, 854, 855, 861, 867, 871, 876, 877], "detect": [145, 161, 163, 181, 183, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 862, 874], "determin": [4, 26, 231, 241, 242, 299, 305, 310, 403, 425, 457, 565, 569, 570, 571, 572, 647, 701, 703, 711, 728, 730, 731, 870], "determinist": [131, 198, 305, 317, 340, 391, 562], "dev": [183, 184, 207, 728, 823, 824, 825, 826, 827, 829, 834, 837, 840, 841, 858, 861, 864], "dev_data": 184, "devel": 823, "develop": [22, 27, 28, 30, 31, 41, 44, 45, 56, 82, 95, 96, 101, 102, 104, 105, 109, 114, 115, 363, 559, 560, 646, 647, 700, 718, 720, 725, 735, 823, 843, 851, 854], "deviat": [403, 425, 457], "devic": [4, 7, 13, 31, 34, 35, 43, 46, 48, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 74, 87, 88, 89, 93, 94, 100, 103, 108, 125, 126, 130, 131, 208, 209, 210, 211, 212, 214, 216, 217, 246, 247, 248, 249, 250, 287, 290, 291, 294, 296, 299, 300, 307, 312, 314, 319, 320, 328, 332, 340, 341, 345, 346, 347, 400, 401, 402, 438, 439, 440, 461, 482, 483, 546, 553, 554, 555, 562, 568, 569, 570, 571, 572, 575, 589, 609, 621, 689, 699, 709, 710, 719, 720, 721, 722, 723, 725, 726, 727, 728, 745, 753, 763, 764, 765, 766, 768, 785, 794, 805, 806, 807, 808, 809, 811, 812, 825, 826, 829, 834, 835, 837, 840, 841, 844, 850, 860, 864, 871, 876, 877], "device_count": [835, 876, 877], "device_id": 876, "device_typ": 728, "df": [229, 230, 248, 549, 695, 840, 841], "dfrac": [450, 826], "dfs_labeled_edg": 230, "dfs_labeled_edges_gener": 549, "dgl": [13, 14, 20, 23, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 708, 709, 710, 713, 714, 715, 716, 718, 719, 720, 723, 724, 725, 728, 729, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 752, 753, 754, 755, 756, 758, 759, 760, 763, 764, 765, 766, 767, 768, 769, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 787, 788, 793, 794, 795, 797, 799, 800, 801, 802, 805, 806, 808, 809, 810, 811, 812, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 832, 833, 836, 844, 845, 847, 849, 850, 851, 854, 855, 862, 865, 866, 867, 870, 872, 876, 877], "dgl_declare_object_type_info": 22, "dgl_download_dir": 23, "dgl_g": 825, "dgl_home": 21, "dgl_library_path": 21, "dgl_log_debug": 23, "dgl_mxnet_set_np_shap": 823, "dgl_partition_to_graphbolt": 854, "dgl_register_glob": 22, "dgl_repo": 23, "dgl_test": [834, 837, 840, 841, 847, 860, 864, 867, 870], "dgl_warn": [864, 867, 870], "dglarg": 22, "dglbackend": [21, 23, 823, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 864, 867, 870, 876, 877], "dglblock": [127, 131, 400, 401, 402, 641], "dglbuiltindataset": [134, 141, 142, 143, 145, 147, 159, 160, 162, 164, 165, 166, 168, 174, 175, 181, 184, 186, 189, 190, 192, 194, 195, 694, 697, 741, 743, 781, 783], "dgldataset": [138, 139, 140, 148, 167, 172, 173, 177, 178, 179, 183, 197, 198, 306, 692, 695, 697, 733, 739, 740, 743, 773, 779, 783, 817], "dgldataset\u7c7b": [739, 756], "dgldefaultdir": 23, "dglerror": [27, 28, 95, 96, 395, 407, 410, 411, 412, 413, 414, 415, 418, 421, 428, 641, 709, 711, 753, 755, 794, 796], "dglfunccal": 22, "dglgraph": [0, 4, 5, 6, 9, 13, 22, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 209, 210, 222, 223, 224, 225, 229, 230, 231, 234, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 295, 329, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 360, 363, 389, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 463, 464, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 687, 689, 695, 696, 697, 698, 700, 701, 703, 705, 707, 708, 710, 711, 731, 736, 742, 743, 746, 749, 751, 752, 753, 754, 755, 763, 764, 766, 771, 776, 782, 783, 784, 786, 787, 788, 790, 792, 793, 795, 796, 805, 806, 809, 815, 819, 843, 845, 846, 858, 859, 860, 861, 864, 867, 870], "dglgraphinst": 329, "dglgraphproppreddataset": [138, 696, 742, 782, 826], "dglgraph\ub85c": 792, "dgllinkproppreddataset": [696, 742, 782, 855], "dglnn": [391, 720, 722, 723, 725, 736, 738, 764, 766, 768, 776, 778, 806, 809, 811, 819, 821, 826, 834, 854, 855, 877], "dglnodeproppreddataset": [696, 742, 782, 854], "dglretvalu": 22, "dglroutinglay": 870, "dglsp": [12, 583, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 727, 824, 825, 826, 827, 829], "dglwarn": [864, 867, 870], "dgl\u4e0d\u63d0\u4f9b\u5bf9\u6765\u81ea\u591a\u4e2a\u8bad\u7ec3\u5668\u7684\u5e76\u53d1\u5199\u5165\u7684\u4fdd\u62a4": 746, "dgl\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 767, "dgl\u4e2d\u7684": 766, "dgl\u4e3a\u5206\u5e03\u5f0f\u5f20\u91cf\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u5355\u673a\u666e\u901a\u5f20\u91cf\u7684\u63a5\u53e3": 746, "dgl\u4e5f\u4f1a\u6839\u636e\u8fb9\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f": 754, "dgl\u4e5f\u652f\u6301\u4ece\u5176\u4ed6\u7684\u6570\u636e\u6e90\u6765\u521b\u5efa\u56fe\u5bf9\u8c61": 754, "dgl\u4e5f\u652f\u6301\u76f4\u63a5\u4eces3": 751, "dgl\u4ec5\u5141\u8bb8\u521b\u5efa\u5355\u4e2adistgraph\u5bf9\u8c61": 746, "dgl\u4ec5\u652f\u6301\u5bc6\u96c6\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 746, "dgl\u4ee5\u540e\u5c06\u4e3a\u7a00\u758f\u5d4c\u5165\u6dfb\u52a0\u66f4\u591a\u7684\u4f18\u5316\u5668": 746, "dgl\u4f18\u5316\u4e86\u6d88\u606f\u4f20\u9012\u7684\u5185\u5b58\u6d88\u8017\u548c\u8ba1\u7b97\u901f\u5ea6": 759, "dgl\u4f1a\u5212\u5206\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 746, "dgl\u4f1a\u5728\u5185\u90e8\u5c061\u6761\u65e0\u5411\u8fb9\u8f6c\u6362\u4e3a2\u6761\u6709\u5411\u8fb9": 751, "dgl\u4f1a\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 745, "dgl\u4f1a\u5c06\u5b83\u4eec\u5206\u7247\u5e76\u5b58\u50a8\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u673a\u4e0a": 746, "dgl\u4f1a\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u6bcf\u6761\u8fb9": 752, "dgl\u4f1a\u68c0\u67e5\u8f93\u5165\u56fe\u4e2d\u662f\u5426\u6709\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9": 771, "dgl\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u7684\u6574\u578b\u5f20\u91cf": 754, "dgl\u4f7f\u7528\u4e00\u4e2a\u5305\u542b2\u4e2a\u8282\u70b9\u5f20\u91cf\u7684\u5143\u7ec4": 754, "dgl\u4f7f\u7528\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u6765\u8868\u793a\u4e00\u4e2a\u8282\u70b9": 754, "dgl\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684meti": 747, "dgl\u4fdd\u8bc1\u8fb9\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u4e0e\u751f\u6210\u7684\u5757\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u76f8\u540c": 764, "dgl\u5047\u5b9a\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7684\u9700\u8981\u5408\u5e76\u7684\u7279\u5f81\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u6570\u636e\u7c7b\u578b": 755, "dgl\u5185\u7f6e\u4e86\u5e38\u89c1\u7684\u56fe\u8bfb\u51fa\u51fd\u6570": 776, "dgl\u5185\u7f6e\u7684nn\u6a21\u5757\u5982\u679c\u5728forward\u51fd\u6570\u4e2d\u652f\u6301\u4e00\u4e2a\u53ef\u9009\u7684": 775, "dgl\u5185\u7f6e\u7684\u6d88\u606f": 771, "dgl\u53ef\u4ee5\u5904\u7406\u6700\u591a": 754, "dgl\u53ef\u4ee5\u95f4\u63a5\u5730\u4ece\u8fd9\u4e9b\u6765\u6e90\u521b\u5efa\u56fe": 751, "dgl\u540c\u6837\u652f\u6301\u5b83\u5728mxnet\u548ctensorflow\u540e\u7aef\u91cc\u7684\u5b9e\u73b0": [767, 776], "dgl\u548c\u8fd9\u4e9b\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u5176\u72ec\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c": 769, "dgl\u5728": 739, "dgl\u5728\u5185\u90e8\u5c06scipy\u77e9\u9635\u548cnetworkx\u56fe\u8f6c\u6362\u4e3a\u5f20\u91cf\u6765\u521b\u5efa\u56fe": 751, "dgl\u5728\u547d\u540d\u7a7a\u95f4": 758, "dgl\u5728\u96c6\u7fa4\u6240\u6709\u673a\u5668\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u8bad\u7ec3\u811a\u672c": 745, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6574\u56fe\u5206\u7c7b\u7684\u6837\u4f8b": 776, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5206\u5e03\u5f0f\u7ec4\u4ef6\u4ee5\u652f\u6301\u5206\u5e03\u5f0f\u8bad\u7ec3": 745, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7ba1\u9053": 762, "dgl\u5b9e\u73b0\u4e86\u591a\u4e2a\u53ef\u7528\u4e8e\u751f\u6210\u8fb9\u754c\u7684\u51fd\u6570": 763, "dgl\u5bf9\u8fb9\u754c\u5b50\u56fe\u505a\u4e86\u4e00\u4e2a\u8f6c\u6362": 763, "dgl\u5c06\u56fe\u5212\u5206\u7ed3\u679c\u5b58\u50a8\u5728\u8f93\u51fa\u76ee\u5f55\u4e2d\u7684\u591a\u4e2a\u6587\u4ef6\u4e2d": 747, "dgl\u5c06\u9700\u8981\u8ba1\u7b97gnn\u8f93\u51fa\u7684\u8282\u70b9\u79f0\u4e3a": 763, "dgl\u5df2\u7ecf\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528\u7684": 769, "dgl\u5efa\u8bae": 758, "dgl\u5efa\u8bae\u4f7f\u7528\u8282\u70b9\u63a9\u7801\u6765\u6307\u5b9a\u6570\u636e\u96c6\u7684\u5212\u5206": 743, "dgl\u5efa\u8bae\u7528\u6237\u5b9e\u73b0\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e\u7684\u51fd\u6570": 744, "dgl\u5efa\u8bae\u7528\u6237\u5c3d\u91cf\u51cf\u5c11\u8fb9\u7684\u7279\u5f81\u7ef4\u6570": 759, "dgl\u5efa\u8bae\u8ba9": 743, "dgl\u5efa\u8bae\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ece\u70b9\u5230\u8fb9\u7684\u5185\u5b58\u62f7\u8d1d": 759, "dgl\u63a8\u8350\u4f7f\u7528tensor\u4f5c\u4e3adgl": 754, "dgl\u63a8\u8350\u7528\u6237\u5c06\u56fe\u6570\u636e\u5904\u7406\u4e3a": 739, "dgl\u63a8\u8350\u91cd\u65b0\u6392\u5217\u56fe\u7684\u8282\u70b9": 743, "dgl\u63d0\u4f9b": 746, "dgl\u63d0\u4f9b\u4e86": [746, 755, 763, 772], "dgl\u63d0\u4f9b\u4e864\u4e2a\u51fd\u6570\u8ba9\u4efb\u52a1\u53d8\u5f97\u7b80\u5355": 744, "dgl\u63d0\u4f9b\u4e86api\u4ee5\u4ece\u78c1\u76d8\u4e2d\u52a0\u8f7d\u6216\u5411\u78c1\u76d8\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u56fe": 751, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2aapi\u4ee5\u6267\u884c\u8fd9\u4e24\u4e2a\u6b65\u9aa4": 747, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u529f\u80fd\u7684\u51fd\u6570": 775, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684rgcn\u7684\u7aef\u5230\u7aef\u7684\u4f8b\u5b50": 778, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a00\u758f\u7684adagrad\u4f18\u5316\u5668": 746, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u793a\u4f8b": 768, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u56fe\u5377\u79ef\u6a21\u5757": 778, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177": 745, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784": 746, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784\u548c\u591a\u79cdapi": 746, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7ea7\u522b\u7684api": 746, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u811a\u672c\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 748, "dgl\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b0\u7c7b\u578b\u7684\u8bed\u6cd5": 755, "dgl\u63d0\u4f9b\u4e86\u51e0\u4e2a\u90bb\u5c45\u91c7\u6837\u7c7b": 768, "dgl\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u7684api": 745, "dgl\u63d0\u4f9b\u4e86\u540d\u4e3a": 743, "dgl\u63d0\u4f9b\u4e86\u5728\u540c\u6784\u56fe\u4e0a\u505a\u94fe\u8def\u9884\u6d4b\u7684\u4e00\u4e2a\u793a\u4f8b": 766, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u91c7\u6837\u7684\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668": 746, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u542f\u52a8\u96c6\u7fa4\u4e2d\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684tool": 748, "dgl\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684": 768, "dgl\u63d0\u4f9b\u4e86\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5": 754, "dgl\u63d0\u4f9b\u7684\u4e00\u4e9b\u91c7\u6837\u65b9\u6cd5\u4e5f\u652f\u6301\u5f02\u6784\u56fe": 768, "dgl\u652f\u6301": 758, "dgl\u652f\u6301\u4f7f\u7528": 754, "dgl\u652f\u6301\u5185\u7f6e\u7684\u805a\u5408\u51fd\u6570": 758, "dgl\u73b0\u5728\u652f\u6301": 758, "dgl\u7684gin\u6837\u4f8b": 776, "dgl\u7684graphsage\u6837\u4f8b": 778, "dgl\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u5177\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u4ea4\u4e92\u8fdb\u7a0b": 745, "dgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u5c0f\u6279\u6b21\u751f\u6210\u4e09\u9879": 766, "dgl\u786e\u4fdd\u5757\u7684\u8f93\u51fa\u8282\u70b9\u5c06\u59cb\u7ec8\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 763, "dgl\u793e\u533a\u7684\u4e00\u7fa4\u70ed\u5fc3\u8d21\u732e\u8005\u628adgl\u7528\u6237\u6307\u5357\u8bd1\u6210\u4e86\u4e2d\u6587": 756, "dgl\u79f0\u4e4b\u4e3a": 754, "dgl\u79f0\u5b83\u4eec\u4e3a\u7ea2\u8272\u8282\u70b98\u5728\u7b2c\u4e8c\u4e2agnn\u5c42\u7684": 763, "dgl\u79f0\u5b83\u4eec\u4e3a\u89c4\u8303\u8fb9\u7c7b\u578b": 755, "dgl\u79f0\u8fd9\u79cd\u4ec5\u5305\u542b\u5fc5\u8981\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u4e8c\u5206\u56fe\u4e3a\u4e00\u4e2a": 763, "dgl\u8981\u6c42\u9884\u5904\u7406\u56fe\u6570\u636e\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 747, "dgl\u901a\u8fc7\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784": 749, "dgl\u91c7\u7528\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5": 745, "dgl\u91cc\u5bf9\u56fe\u8fdb\u884c\u53d8\u6362\u7684\u51fd\u6570\u4f1a\u53bb\u6389\u56fe\u4e0a\u7684\u6279\u6b21\u4fe1\u606f": 776, "dgl\u9ed8\u8ba4\u4f7f\u7528int64": 754, "dgl\ub294": [795, 811, 819], "dgl\uc5d0\uc11c": [787, 788, 791, 795, 796, 799, 806, 811, 815, 817], "dgl\uc5d0\uc11c\ub294": [783, 784, 795, 801, 805, 806, 809, 811], "dgl\uc740": [779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 792, 795, 796, 799, 800, 801, 804, 805, 810, 812, 813, 818, 819, 821], "dgl\uc758": [783, 785, 786, 788, 796, 798, 799, 801, 809, 810, 811, 815], "dgl\uc774": [788, 805, 806, 811], "dgmg": [868, 874], "dgmg_cycl": 867, "dgmg_msg": 867, "dgmg_reduc": 867, "dgmgskeleton": 867, "dgn": 403, "dh": 826, "diag": [613, 617, 622, 623, 624, 635, 727, 824, 825, 827, 829], "diagmatrix": [596, 597], "diagon": [394, 405, 415, 426, 429, 616, 617, 621, 622, 623, 824, 825, 827, 860], "diagram": 703, "dichotomi": [120, 245, 481], "dict": [4, 20, 27, 28, 43, 46, 47, 56, 73, 74, 75, 103, 114, 115, 121, 130, 131, 148, 203, 204, 205, 206, 208, 210, 213, 214, 216, 219, 220, 222, 223, 224, 225, 234, 236, 237, 238, 240, 241, 242, 246, 288, 294, 296, 297, 298, 299, 301, 302, 307, 311, 312, 313, 314, 315, 316, 319, 322, 323, 324, 327, 330, 331, 338, 339, 340, 341, 345, 346, 352, 359, 363, 390, 391, 392, 393, 432, 433, 434, 435, 436, 437, 482, 546, 547, 562, 569, 570, 572, 573, 641, 649, 655, 687, 698, 703, 768, 784, 805, 811, 845, 864, 867, 870, 871], "dict_kei": 391, "dictionari": [22, 43, 46, 47, 74, 75, 101, 102, 103, 121, 122, 131, 148, 210, 220, 236, 240, 242, 246, 297, 299, 301, 307, 312, 314, 322, 323, 338, 339, 340, 341, 345, 346, 352, 390, 433, 435, 482, 546, 569, 570, 572, 649, 687, 695, 703, 711, 716, 719, 720, 725, 732, 734, 738, 788, 802, 816, 842, 845, 847], "dictionary\uac00": 788, "dictionary\ub294": 788, "dictionary\ub4e4\uc744": 811, "dictionary\ub97c": [788, 809], "dictionary\uc5d0": 788, "dictionary\uc640": 809, "dict\u5bf9\u8c61": 744, "diff": 328, "differ": [4, 5, 11, 51, 61, 73, 88, 91, 92, 113, 116, 120, 126, 131, 135, 136, 138, 139, 140, 151, 152, 153, 158, 159, 172, 178, 179, 186, 192, 214, 216, 217, 219, 220, 229, 230, 235, 240, 243, 245, 249, 250, 287, 299, 301, 304, 305, 307, 323, 340, 345, 346, 359, 360, 390, 391, 393, 408, 425, 429, 434, 435, 436, 437, 440, 454, 464, 481, 569, 571, 575, 640, 646, 695, 697, 700, 703, 705, 706, 708, 711, 716, 718, 720, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 793, 796, 826, 827, 829, 834, 835, 840, 841, 843, 846, 851, 854, 859, 860, 861, 862, 864, 865, 867, 870, 871, 874, 876, 877], "differenti": [118, 119, 720, 861], "diffus": [664, 665, 670, 674, 828], "diffuse_op": 674, "digit": [199, 200], "digraph": [125, 249, 648, 707, 751, 792], "dii": 21, "dill": 835, "dim": [73, 263, 264, 265, 266, 332, 347, 391, 418, 454, 455, 575, 600, 603, 604, 605, 606, 607, 626, 651, 652, 681, 689, 714, 715, 738, 758, 759, 778, 799, 801, 821, 824, 825, 826, 829, 834, 844, 858, 859, 861, 867, 870], "dim_ff": 871, "dim_model": 871, "dim_nfeat": 846, "dimens": [4, 5, 9, 10, 14, 20, 139, 150, 154, 176, 294, 304, 319, 332, 347, 363, 391, 399, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 431, 432, 438, 440, 447, 451, 455, 461, 509, 553, 575, 600, 603, 604, 605, 606, 607, 614, 622, 626, 628, 651, 652, 691, 701, 708, 714, 715, 716, 730, 736, 824, 826, 829, 842, 844, 846, 858, 859, 861, 871, 876], "dimension": [9, 159, 304, 307, 347, 410, 412, 416, 418, 438, 440, 566, 567, 568, 575, 708, 715, 825, 843, 846], "dipol": [178, 179], "dir": [403, 703, 788], "dir1": 403, "direct": [6, 123, 124, 126, 134, 149, 155, 159, 178, 185, 187, 193, 229, 230, 248, 249, 289, 290, 294, 296, 300, 319, 347, 349, 403, 451, 549, 551, 552, 554, 576, 640, 653, 676, 695, 706, 707, 710, 791, 836, 843, 844, 860, 867, 870], "direction": 706, "directli": [9, 21, 64, 71, 89, 108, 109, 112, 117, 131, 148, 210, 231, 246, 305, 307, 310, 317, 318, 341, 345, 346, 347, 352, 401, 438, 440, 482, 546, 573, 575, 656, 657, 695, 707, 827, 829, 844, 845, 847, 850, 854, 859], "directoractor": 134, "directori": [21, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 209, 289, 311, 693, 694, 698, 702, 704, 780, 781, 784, 823, 839, 840, 841, 850, 854, 871], "dirnam": 202, "disabl": [4, 9, 714, 823, 835, 851], "disable_shared_mem": 4, "disallow": 568, "disambigu": 711, "disappear": [4, 700], "disast": 860, "discard": [27, 28, 114, 115, 116, 117, 130, 246, 247, 341, 344, 350, 358, 482, 483, 546, 560, 563, 640, 649, 650, 736, 826], "discov": [871, 872, 874], "discoveri": 867, "discret": [665, 861], "disct": 641, "discuss": [21, 641, 733, 738, 860], "diseas": [569, 570, 711, 755, 796], "disease\u6cbb\u7597\u8fb9": 755, "disease\u8282\u70b9": 755, "disjoint": 122, "disk": [4, 138, 139, 140, 156, 203, 206, 293, 294, 300, 311, 319, 320, 693, 694, 698, 703, 780, 834, 838, 840, 841, 845, 847], "dislik": [733, 734, 773, 774, 817, 818], "dislike_dst": [733, 773, 817], "dislike_src": [733, 773, 817], "dispatch": [9, 702], "dispatch_data": 703, "displai": [56, 825, 864], "dist": [347, 438, 439, 440, 455, 456, 553, 575, 576, 689, 691, 826, 832, 835, 850, 857, 876, 877], "dist_anim": 870, "dist_graph": [700, 746, 786], "dist_list": 870, "dist_matrix": 870, "distanc": [6, 178, 179, 243, 347, 397, 438, 439, 440, 455, 456, 553, 575, 576, 689, 691, 867], "distdataload": [4, 211, 212, 699, 700, 745, 746, 785, 786], "distedgedataload": [700, 746, 855], "distembed": [4, 699, 745, 746, 785], "distgraph": [4, 211, 212, 233, 234, 240, 241, 242, 699, 701, 703, 745, 746, 747, 785, 787, 788, 854, 855], "distgraphserv": 4, "distgraph\u5c06\u56fe\u6570\u636e\u52a0\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u4e2d": 746, "distgraph\uc758": 786, "distinct": [142, 695, 862, 874], "distinguish": [68, 156, 646, 689, 695, 711, 829], "distmult": 859, "distnodedataload": [700, 746, 786, 854, 855], "distplot": 870, "distribut": [13, 120, 142, 174, 197, 205, 210, 211, 212, 213, 226, 227, 245, 295, 299, 321, 361, 362, 390, 418, 434, 436, 461, 481, 571, 702, 712, 723, 734, 737, 745, 746, 747, 785, 787, 788, 809, 832, 835, 850, 857, 861, 867, 870, 871, 877], "distributeddataparallel": [210, 213, 699, 745, 785, 835, 850, 854, 855, 876, 877], "distributeditemsampl": [835, 877], "distributedli": [295, 700], "distributedsampl": [210, 213], "disttenor": 4, "disttensor": [4, 232, 239, 699, 700, 701, 745, 746, 785, 786, 787], "disttensor\u4e2d\u7684\u884c\u6570\u5fc5\u987b\u4e0e\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u6216\u8fb9\u6570\u76f8\u540c": 746, "div": [9, 255, 256, 269, 270, 279, 280, 497, 498, 506, 507, 516, 517, 518, 519, 520, 521, 538, 539, 714, 758, 799, 829], "dive": [731, 831], "divers": 871, "divid": [45, 68, 79, 82, 105, 142, 143, 189, 190, 232, 239, 405, 421, 654, 724, 727, 731, 815, 845, 858, 861], "divis": [4, 403, 412, 425, 426, 450, 452, 453, 617, 629], "dl": [134, 173, 822], "dlg": 788, "dlg\uc758": 799, "dm": 870, "dmlc": [21, 823, 850], "dncoder": 871, "dnn": [729, 813], "do": [4, 9, 21, 22, 70, 89, 101, 102, 114, 116, 130, 140, 180, 240, 299, 338, 347, 357, 359, 391, 431, 438, 440, 450, 451, 453, 455, 456, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 561, 565, 570, 575, 641, 694, 700, 710, 711, 718, 719, 724, 725, 734, 737, 738, 805, 837, 838, 840, 841, 842, 845, 860, 861, 864, 867], "do_someth": 0, "doc": [9, 14, 168, 186, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 720, 732, 829, 844], "docstr": 21, "document": [8, 22, 214, 216, 240, 839, 854], "doc\uc5d0\uc11c": 816, "doe": [4, 8, 21, 26, 27, 28, 64, 71, 93, 113, 116, 130, 131, 134, 149, 155, 164, 185, 187, 193, 294, 295, 303, 340, 359, 461, 507, 547, 583, 600, 603, 604, 605, 622, 641, 664, 665, 670, 694, 700, 702, 703, 707, 711, 715, 721, 725, 731, 734, 741, 781, 796, 815, 829, 832, 842, 844, 845, 846, 847, 848, 849, 858, 860, 861, 864, 867, 871, 876], "doesn": [4, 56, 168, 200, 728, 860], "doi": [134, 163, 173], "domain": [288, 298, 311, 320, 839, 840, 841, 845, 851], "don": [21, 89, 241, 242, 566, 568, 569, 641, 722, 829, 834, 837, 840, 841, 871], "done": [6, 21, 156, 338, 689, 693, 700, 824, 825, 827, 842, 844, 845, 850, 851, 854, 858, 859, 860, 861], "donghuixu": 756, "donot_use_mm_for_euclid_dist": [439, 553], "dot": [9, 257, 258, 271, 272, 281, 282, 407, 458, 499, 500, 506, 522, 523, 540, 541, 714, 728, 734, 737, 758, 777, 799, 809, 812, 818, 820, 826, 845, 855, 860, 861, 864, 871], "dotpredictor": [734, 774, 818, 845], "dotproductpredictor": [734, 737, 774, 777, 818, 820], "doubl": [9, 22, 173, 243, 643, 695, 708, 714, 793, 799, 867], "down": [292, 305, 826, 858, 861], "download": [2, 21, 23, 132, 133, 134, 135, 136, 137, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 202, 289, 692, 693, 696, 740, 741, 780, 781, 823, 824, 825, 827, 829, 834, 837, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "downstream": [703, 734, 737, 738, 833, 854, 859], "doxygen": 21, "dozen": 22, "dpi": 870, "dramat": 861, "draw": [393, 834, 864, 867], "draw_circular": 867, "draw_networkx": 860, "draw_networkx_edg": [825, 870], "draw_networkx_nod": [825, 870], "drawn": [722, 827], "drive": [21, 294], "driven": [868, 874], "drop": [4, 210, 213, 248, 295, 303, 305, 317, 655, 660, 661, 664, 665, 670, 835, 870, 877], "drop_last": [4, 209, 210, 213, 214, 215, 216, 219, 220, 295, 303, 699, 721, 736, 745, 763, 764, 765, 766, 768, 776, 785, 805, 806, 807, 808, 809, 811, 819, 835, 846, 850, 854, 855, 860, 877], "drop_uneven_input": [295, 835, 877], "dropbox": 21, "dropedg": 13, "dropnod": 13, "dropout": [396, 400, 401, 402, 403, 406, 411, 413, 414, 419, 422, 423, 425, 426, 427, 430, 431, 445, 446, 450, 452, 453, 691, 699, 722, 727, 728, 738, 745, 785, 821, 827, 835, 861, 864, 871, 877], "dropouta": [445, 446], "dropouth": [445, 446], "dropout\u6982\u7387": 778, "drug": [52, 122, 569, 570, 687, 711, 755, 796, 867], "drugai": 756, "drug\u76f8\u4e92\u4f5c\u7528\u8fb9": 755, "drug\u8282\u70b9": 755, "dst": [34, 62, 63, 68, 110, 220, 243, 363, 398, 407, 408, 411, 413, 414, 418, 421, 427, 458, 459, 460, 562, 565, 618, 641, 642, 646, 681, 697, 707, 714, 715, 720, 723, 728, 731, 732, 734, 737, 743, 751, 758, 759, 763, 764, 766, 771, 772, 774, 777, 783, 792, 799, 801, 805, 806, 809, 812, 815, 816, 818, 820, 835, 844, 845, 847, 861, 871, 877], "dst_dtype": [731, 771, 815], "dst_field": 871, "dst_id": [59, 126, 250, 287, 695, 702, 788], "dst_id_field": 695, "dst_input": [732, 772, 816], "dst_node": [323, 641, 805, 815], "dst_node_id": 702, "dst_timestamp": 323, "dst_type": [131, 340, 433, 435], "dst_x": 720, "dstdata": [4, 9, 44, 68, 208, 221, 222, 391, 580, 641, 699, 701, 715, 724, 727, 731, 732, 745, 759, 763, 767, 768, 771, 772, 785, 787, 801, 805, 810, 811, 815, 816], "dstnode": [43, 68, 208, 222, 641, 724, 763, 767, 805, 810], "dsttype": [26, 68, 105, 226, 227, 391, 716, 732, 760, 772, 802, 816], "dt": 695, "dtype": [4, 10, 21, 47, 64, 75, 95, 96, 117, 126, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 246, 247, 250, 299, 304, 311, 328, 333, 341, 345, 346, 361, 362, 391, 456, 482, 483, 546, 559, 560, 561, 566, 568, 580, 581, 591, 596, 609, 621, 646, 660, 661, 668, 674, 687, 689, 695, 697, 700, 702, 703, 708, 711, 721, 722, 728, 732, 733, 734, 743, 746, 752, 755, 772, 773, 774, 783, 786, 788, 793, 796, 812, 816, 817, 818, 826, 829, 834, 835, 837, 840, 841, 843, 846, 847, 854, 855, 858, 860, 861, 871, 877], "due": [22, 118, 119, 192, 295, 305, 310, 311, 324, 562, 647, 710, 722, 858, 871], "dump": [788, 855], "duplic": [116, 135, 136, 151, 152, 153, 186, 192, 289, 341, 345, 346, 436, 482, 546, 594, 649, 657, 677, 702, 829, 864], "dur": [858, 861], "dure": [5, 21, 89, 231, 242, 295, 347, 350, 428, 438, 440, 565, 569, 570, 575, 639, 675, 700, 702, 703, 709, 714, 719, 725, 834, 835, 837, 840, 841, 843, 851, 854, 861, 864, 867, 870, 871], "duse_cuda": 823, "duse_libxsmm": 823, "duse_openmp": 823, "dvd": 137, "dwivedi": 826, "dx": [163, 403, 860, 871], "dynam": [410, 868, 870, 871, 872, 874], "e": [0, 4, 5, 9, 21, 22, 26, 41, 42, 48, 54, 62, 63, 70, 108, 112, 118, 119, 120, 122, 125, 126, 130, 131, 166, 174, 178, 186, 210, 213, 220, 240, 244, 245, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 292, 293, 305, 310, 340, 347, 349, 363, 391, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 431, 432, 436, 438, 440, 455, 458, 459, 460, 464, 481, 506, 507, 554, 555, 562, 563, 567, 568, 573, 575, 578, 580, 581, 616, 618, 619, 620, 632, 647, 648, 664, 665, 670, 679, 680, 682, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 710, 713, 714, 715, 719, 720, 728, 734, 735, 736, 742, 750, 757, 758, 775, 782, 783, 791, 798, 799, 800, 823, 824, 825, 826, 827, 829, 830, 836, 842, 843, 844, 845, 851, 860, 861, 867, 871, 876], "e1": [299, 323, 330, 339], "e2": [299, 323, 330, 339], "e2d": 871, "e2n": 676, "e_": [397, 407, 408, 412, 413, 414, 416, 417, 419, 420, 421, 424, 425, 426, 427, 836, 844, 860, 861], "e_add_u": 5, "e_add_v": 5, "e_attr": 125, "e_div_u": 5, "e_div_v": 5, "e_dot_u": 5, "e_dot_v": 5, "e_feat": [164, 166, 464], "e_ij": 398, "e_mul_u": 5, "e_mul_v": 5, "e_sub_u": 5, "e_sub_v": [5, 9], "e_t": [433, 434], "e_typ": [157, 158, 191], "e_weight": 6, "each": [0, 4, 5, 6, 7, 14, 20, 22, 34, 35, 36, 37, 39, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 78, 87, 88, 92, 93, 94, 100, 101, 102, 116, 117, 122, 123, 124, 126, 130, 131, 135, 136, 141, 142, 147, 150, 151, 152, 153, 154, 157, 158, 171, 174, 175, 176, 178, 179, 181, 182, 183, 184, 191, 195, 197, 198, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 232, 235, 239, 240, 241, 242, 243, 246, 250, 287, 291, 295, 299, 301, 303, 304, 305, 307, 308, 310, 312, 317, 318, 321, 323, 324, 330, 334, 338, 339, 340, 341, 345, 346, 347, 349, 359, 360, 363, 389, 390, 391, 393, 394, 395, 396, 397, 399, 403, 405, 407, 410, 411, 412, 413, 414, 415, 416, 418, 421, 422, 423, 424, 425, 427, 428, 430, 431, 438, 439, 440, 442, 444, 445, 446, 447, 451, 455, 456, 457, 461, 463, 465, 482, 508, 509, 546, 547, 553, 556, 557, 558, 561, 562, 564, 566, 567, 568, 569, 570, 571, 572, 575, 576, 578, 579, 580, 581, 641, 646, 647, 649, 653, 656, 657, 664, 672, 673, 678, 681, 683, 684, 685, 686, 687, 691, 692, 695, 697, 698, 699, 700, 701, 702, 703, 704, 706, 708, 710, 711, 713, 716, 718, 719, 720, 723, 725, 726, 728, 731, 732, 733, 734, 735, 736, 737, 738, 783, 788, 793, 811, 818, 820, 825, 826, 827, 829, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 877], "earli": [166, 192, 734, 818], "earlier": [292, 700, 859, 867], "eas": [21, 22, 307], "easi": [21, 22, 344, 567, 693, 703, 737, 822, 829], "easier": [70, 701, 703, 845], "easili": [122, 229, 230, 718, 723, 726, 734, 833, 836, 842, 861], "ec2": [14, 851], "ecosystem": 829, "ed": [864, 871], "edata": [4, 5, 9, 20, 27, 30, 34, 47, 51, 53, 70, 95, 96, 108, 114, 117, 118, 119, 122, 125, 126, 128, 145, 147, 157, 158, 164, 166, 174, 177, 179, 191, 195, 208, 214, 216, 219, 221, 223, 246, 249, 250, 341, 345, 346, 363, 432, 455, 464, 482, 546, 557, 559, 560, 561, 562, 563, 568, 569, 570, 571, 572, 573, 577, 578, 641, 646, 647, 648, 649, 651, 656, 657, 660, 661, 662, 663, 664, 665, 668, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 687, 689, 695, 697, 700, 701, 702, 703, 708, 711, 715, 728, 734, 735, 737, 743, 746, 747, 752, 755, 759, 764, 766, 774, 775, 777, 783, 786, 787, 788, 793, 796, 800, 801, 806, 809, 812, 818, 820, 842, 843, 844, 845, 847, 858, 859, 870], "edata_develop": 363, "edata_dict": 363, "edata_follow": 363, "edata_pars": [148, 695], "edata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 246, 247, 341, 344, 345, 346, 350, 482, 483, 546, 555, 559, 560, 561, 577, 646, 660, 661, 668, 674, 687, 695, 702, 703, 707, 708, 710, 736, 751, 752, 754, 792, 793, 795, 819, 843, 846, 847], "edeg": [45, 79, 82, 105], "edg": [0, 4, 5, 6, 7, 9, 13, 21, 25, 26, 27, 30, 31, 32, 34, 36, 39, 41, 46, 47, 48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 297, 298, 299, 302, 305, 307, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 327, 330, 333, 339, 340, 341, 344, 345, 346, 347, 349, 350, 357, 358, 359, 360, 363, 391, 393, 395, 396, 397, 398, 401, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 455, 458, 459, 460, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 580, 581, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 659, 660, 662, 663, 664, 665, 666, 668, 670, 671, 672, 673, 674, 676, 677, 678, 679, 680, 682, 687, 689, 691, 695, 697, 699, 701, 702, 703, 705, 706, 713, 714, 715, 716, 718, 721, 723, 724, 726, 728, 730, 732, 733, 736, 737, 738, 743, 752, 754, 755, 756, 758, 759, 764, 766, 773, 774, 777, 783, 787, 788, 793, 795, 796, 798, 799, 800, 801, 805, 806, 809, 812, 817, 818, 819, 820, 822, 824, 825, 826, 827, 829, 833, 834, 835, 837, 839, 840, 841, 842, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 862, 864, 870, 874, 876], "edge_attent": 861, "edge_attr": [179, 249, 648], "edge_attr_dtyp": 788, "edge_attr_schem": [4, 75], "edge_attribut": [299, 330], "edge_classif": 311, "edge_color": 860, "edge_data": [311, 695, 703, 788], "edge_dir": [214, 216, 241, 242, 569, 570, 571, 572], "edge_drop": 396, "edge_feat": [177, 240, 398, 403, 408, 409, 411, 417, 419, 425, 702, 703, 747, 788], "edge_feat_0": 841, "edge_feat_0_path": 841, "edge_feat_1": 841, "edge_feat_1_path": 841, "edge_feat_nam": [29, 117, 657, 662, 673], "edge_feat_s": [138, 403, 409, 425, 452], "edge_featur": [297, 303, 307, 720, 834, 837, 847], "edge_feature_kei": 297, "edge_follow_feat_0": 840, "edge_follow_feat_0_path": 840, "edge_follow_feat_1": 840, "edge_follow_feat_1_path": 840, "edge_func": 424, "edge_gat": 411, "edge_id": [32, 233, 307], "edge_id_attr_nam": [125, 249], "edge_in_feat": 398, "edge_index": [312, 703], "edge_label": [25, 320, 734, 764, 774, 806, 818], "edge_like_feat_0": 840, "edge_like_feat_0_path": 840, "edge_like_feat_1": 840, "edge_like_feat_1_path": 840, "edge_map": [240, 703, 747, 788], "edge_mask": [432, 433, 434, 763, 805], "edge_permute_algo": [98, 562], "edge_pred_graph": [734, 774, 818], "edge_predict": [764, 806], "edge_repr": 867, "edge_split": [687, 700, 746, 786, 855], "edge_subgraph": [157, 158, 191, 482, 721, 763, 764, 766, 805, 806, 809, 843], "edge_timestamp_attr_nam": [299, 317, 318], "edge_trainer_id": 232, "edge_typ": [131, 299, 307, 340, 701, 703, 711, 731, 755, 771, 788, 796, 815], "edge_type_id": 702, "edge_type_subgraph": [26, 483, 711, 755, 796], "edge_type_to_id": [299, 330, 840], "edge_udf": [20, 678, 679, 680, 681, 682], "edge_upd": 452, "edge_weight": [6, 145, 214, 396, 408, 412, 413, 415, 416, 421, 427, 428, 429, 434, 436, 735, 775], "edgebatch": [20, 53, 714, 758, 799], "edgedataload": [700, 746, 764, 766, 786, 806, 807, 809, 855], "edgedataview": 4, "edgelist": 870, "edgepredictor": 855, "edges1": 391, "edges2": 391, "edges3": 391, "edges_0": 695, "edges_1": 695, "edges_b": 870, "edges_data": 847, "edges_dst": 847, "edges_field": 871, "edges_gener": [91, 548], "edges_group": 847, "edges_of_id": 847, "edges_path": 841, "edges_perm": 562, "edges_src": 847, "edges_to_exclud": 312, "edges_with_feature_on": 53, "edgeweightnorm": [396, 415, 421, 428, 429, 735, 775], "edist": 397, "edu": [145, 175, 181, 184], "educ": 859, "ee": 871, "efeat": [398, 408, 411, 417, 424, 452, 702, 703], "effect": [10, 210, 213, 244, 287, 400, 401, 402, 426, 462, 576, 580, 581, 664, 665, 670, 698, 826, 871], "effici": [4, 5, 9, 22, 34, 73, 93, 94, 100, 113, 122, 126, 131, 209, 240, 249, 250, 287, 340, 347, 393, 435, 437, 438, 440, 571, 575, 647, 703, 710, 713, 724, 728, 731, 736, 833, 838, 844, 851, 858, 859, 860, 861, 864, 867, 870, 871], "effort": [859, 876], "eg": [711, 755, 796], "egat": 408, "egat_model": [408, 411], "egnn": 409, "egt": 452, "eid": [4, 20, 26, 51, 55, 61, 88, 89, 95, 96, 125, 130, 211, 223, 233, 234, 240, 241, 242, 246, 249, 341, 345, 346, 358, 363, 432, 482, 546, 559, 560, 562, 566, 568, 569, 570, 571, 572, 577, 641, 646, 649, 681, 701, 703, 711, 755, 763, 766, 787, 788, 796, 805, 809, 843, 845, 871], "eid2localeid": 4, "eid2partid": 4, "eid_attr": 648, "eid_het2hom": 701, "eid_hom2het": 701, "eid_offset": 701, "eid_rang": 788, "eids_dict": [766, 809], "eig": 403, "eig_vec": 403, "eigenvalu": [348, 349, 399, 404, 454, 667], "eigenvector": [348, 403, 454, 667], "eight": [171, 702], "eigval": [454, 667], "eigval_nam": [454, 667], "eigvec": [454, 667], "eisfischerh\u00fctt": 871, "either": [9, 21, 26, 32, 34, 62, 63, 73, 91, 92, 93, 94, 100, 113, 131, 182, 210, 214, 216, 220, 223, 241, 242, 299, 307, 315, 319, 320, 340, 347, 391, 439, 553, 567, 569, 570, 571, 572, 575, 600, 603, 604, 605, 607, 641, 703, 706, 710, 724, 839, 842, 845, 854, 867], "el": [458, 714, 758, 799], "electron": [178, 179], "element": [0, 4, 5, 22, 31, 32, 34, 35, 36, 37, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 93, 94, 100, 119, 121, 122, 214, 216, 219, 220, 240, 241, 242, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 299, 305, 307, 310, 312, 317, 318, 330, 334, 340, 341, 345, 346, 348, 349, 359, 360, 394, 398, 440, 482, 508, 546, 547, 557, 558, 568, 569, 570, 572, 583, 584, 587, 588, 599, 600, 601, 606, 612, 619, 620, 626, 632, 636, 647, 651, 652, 700, 725, 726, 731, 826, 827, 845, 846], "elementwis": [458, 613, 614, 617, 623, 624, 625, 635], "elif": [724, 731, 767, 771, 810, 815], "elimin": 130, "ell": 655, "els": [73, 397, 430, 431, 432, 433, 434, 436, 689, 695, 720, 722, 724, 725, 728, 731, 732, 763, 765, 767, 771, 772, 805, 808, 810, 812, 815, 816, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 859, 861, 867, 871, 876, 877], "elsewher": 621, "elu": [452, 728, 812, 861], "emap": 854, "emb": [4, 10, 390, 434, 436, 461, 700, 746, 786, 859, 864, 867, 871], "emb_dim": [389, 393], "emb_stat": 4, "embed": [5, 13, 137, 149, 158, 180, 182, 184, 185, 191, 316, 389, 390, 393, 434, 436, 451, 452, 455, 456, 459, 460, 461, 691, 699, 700, 701, 703, 723, 737, 738, 821, 834, 854, 855, 858, 859, 860, 861, 864, 871], "embedding_dim": [4, 390, 451, 461, 691], "emit": [734, 867], "emphas": 845, "empir": [14, 120, 182], "emploi": [20, 305, 310, 317, 318, 435, 436, 437, 727, 826, 861, 871], "employ": 871, "empti": [32, 56, 131, 204, 236, 287, 305, 310, 317, 340, 352, 357, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 722, 731, 840, 841, 858, 861, 871], "en": [851, 871], "enabl": [9, 23, 291, 305, 310, 434, 436, 714, 721, 726, 728, 812, 823, 833, 835, 867, 871, 877], "enable_cpu_affin": [850, 851], "enc": 871, "encapsul": 732, "enclos": [243, 695], "encod": [13, 135, 136, 139, 159, 165, 171, 348, 446, 451, 454, 455, 456, 457, 463, 556, 639, 667, 671, 675, 706, 826, 843, 855, 859, 860, 862, 871, 872, 874], "encompass": [305, 307, 310, 317, 318], "encount": [858, 861], "encourag": [435, 437, 737], "end": [4, 20, 22, 27, 114, 164, 217, 240, 305, 310, 348, 358, 393, 397, 447, 564, 576, 639, 667, 675, 681, 689, 703, 710, 725, 730, 734, 736, 738, 763, 795, 805, 811, 818, 819, 821, 827, 828, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "end_epoch_tim": 723, "end_tim": 164, "endl": 22, "endpoint": [4, 34, 48, 53, 100, 116, 482, 483, 640, 649, 860], "energi": [178, 179], "enforc": 854, "english": [149, 182, 185, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821], "enhanc": [21, 312, 825, 862, 872, 874], "enjoi": [9, 21, 826], "enough": [14, 703, 846], "enrich": 861, "ensur": [131, 307, 321, 336, 415, 700, 702, 720, 854, 876], "entail": 867, "enter": 70, "enthalpi": [178, 179], "entir": [3, 9, 45, 79, 82, 105, 210, 290, 296, 298, 300, 319, 699, 703, 720, 721, 724, 736, 833, 845, 846, 854, 861], "entiti": [132, 133, 144, 158, 161, 170, 307, 459, 460, 705, 706, 737, 790, 859, 862, 874], "entri": [126, 164, 177, 250, 324, 332, 450, 453, 571, 621, 707, 735, 792, 827, 829, 860], "entropi": [245, 432, 433, 434, 436, 481, 737, 820, 845, 859, 861, 870], "entropy_list": 870, "enumer": [290, 294, 296, 300, 302, 319, 699, 701, 707, 722, 723, 727, 728, 745, 765, 785, 808, 812, 834, 835, 837, 854, 855, 864, 871, 877], "env": [834, 837, 840, 841, 858, 861], "environ": [14, 21, 295, 702, 823, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 858, 859, 860, 861, 864, 867, 870, 876, 877], "enzym": [25, 168, 186], "ep": [4, 10, 245, 412, 481, 664, 665, 670, 850, 871], "epoch": [4, 210, 213, 389, 432, 433, 434, 435, 436, 697, 699, 700, 723, 727, 728, 734, 736, 737, 738, 743, 745, 748, 774, 776, 777, 778, 783, 785, 786, 789, 812, 818, 819, 820, 821, 824, 825, 826, 827, 830, 834, 835, 837, 842, 844, 845, 846, 850, 854, 855, 858, 859, 860, 861, 864, 871, 876, 877], "epoch_end": [835, 877], "epoch_start": [835, 877], "epsilon": [178, 179, 403, 416, 417], "epsilon_": [178, 179], "eq": [431, 864], "equal": [128, 129, 139, 173, 182, 205, 219, 245, 299, 305, 310, 317, 318, 328, 333, 363, 395, 430, 464, 481, 508, 509, 571, 616, 708, 763, 805, 851, 861, 870], "equat": [396, 397, 414, 415, 428, 429, 458, 462, 713, 827, 858, 859, 860, 864], "equip": 9, "equival": [26, 73, 222, 223, 224, 225, 246, 251, 252, 263, 264, 265, 266, 291, 299, 328, 332, 341, 391, 396, 405, 410, 415, 421, 428, 429, 439, 546, 553, 598, 613, 615, 617, 622, 623, 624, 633, 634, 635, 651, 652, 679, 682, 714, 715, 720, 725, 735, 829, 843, 844, 860, 864], "equivari": [409, 860], "er": [714, 758, 799], "erdos_renyi_graph": 464, "error": [48, 89, 109, 116, 131, 287, 295, 340, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 639, 640, 641, 675, 687, 703, 709, 753, 763, 794, 805, 834, 835, 837, 840, 841, 867, 877], "errorbar": 870, "especi": [21, 125, 249, 721, 722, 836, 859], "essenc": 861, "essenti": [20, 22, 240, 465, 724, 823, 826, 836, 844, 854, 858, 867], "establish": 4, "estim": [435, 437, 721, 737, 777, 820, 842, 843, 844, 845, 846, 847, 876], "et": [72, 135, 136, 564, 824, 826, 836, 842, 844, 858, 864], "eta": [245, 481], "etc": [0, 1, 4, 11, 21, 125, 162, 249, 363, 693, 702, 703, 714, 719, 720, 724, 726, 730, 736, 829, 845, 854, 870], "ether": 4, "etyp": [4, 26, 27, 29, 30, 31, 32, 33, 34, 36, 39, 47, 48, 50, 51, 53, 55, 57, 60, 61, 62, 63, 80, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 100, 107, 109, 113, 114, 117, 118, 125, 126, 128, 130, 208, 214, 216, 219, 220, 223, 226, 227, 232, 240, 241, 247, 299, 325, 326, 330, 353, 355, 391, 393, 401, 420, 423, 426, 433, 434, 435, 484, 554, 557, 559, 561, 563, 565, 569, 570, 572, 578, 637, 640, 641, 646, 647, 648, 649, 651, 655, 656, 657, 672, 677, 695, 697, 701, 702, 703, 711, 716, 720, 723, 724, 725, 732, 734, 736, 737, 738, 743, 755, 760, 763, 764, 766, 767, 768, 772, 774, 776, 777, 778, 783, 787, 788, 796, 802, 805, 806, 809, 810, 811, 816, 818, 819, 820, 821, 840, 859], "etype2id": 701, "etype2id_map": 701, "etype_attr": 648, "etype_count": 647, "etype_dict": 73, "etype_field": 646, "etype_id": 788, "etype_sort": 241, "etype_weight": [433, 435], "etypes_list": 240, "etypes\u662f\u4e00\u4e2a\u5217\u8868": 776, "eu": 48, "euclidean": [347, 438, 439, 440, 553, 575, 867], "ev": [48, 178, 179], "eval": [738, 778, 821, 825, 826, 827, 834, 835, 837, 858, 867, 871, 876, 877], "eval_dataload": 834, "evalu": [137, 171, 180, 182, 188, 197, 205, 703, 704, 718, 722, 738, 778, 821, 824, 825, 826, 830, 842, 845, 846, 858, 861, 867, 871, 876], "even": [4, 210, 305, 310, 317, 358, 559, 700, 718, 833, 860, 864], "evenli": [232, 239, 854], "event": [164, 166], "everi": [0, 4, 10, 21, 117, 119, 121, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 214, 215, 216, 219, 241, 242, 305, 310, 317, 340, 349, 363, 391, 414, 432, 433, 434, 435, 436, 437, 563, 568, 569, 570, 572, 700, 703, 707, 722, 734, 736, 830, 837, 843, 846, 854, 867, 868, 871, 874, 876], "everyth": [21, 292, 854], "evict": [300, 324, 331], "evid": 861, "evolut": [867, 870], "evolv": 860, "eweight": [126, 250, 432, 433, 735, 773, 775, 800], "eweight_nam": [30, 126, 250, 556, 663, 664, 665, 670, 671, 674], "eweight\ub97c": 800, "exact": [718, 835, 877], "exactli": [8, 117, 299, 641, 700, 720, 728, 827, 845, 854, 855, 861, 867], "exampl": [0, 3, 4, 5, 6, 9, 10, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 205, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 235, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 330, 334, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 480, 481, 482, 483, 484, 509, 546, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 639, 640, 641, 642, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 706, 707, 708, 710, 711, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 729, 731, 732, 733, 734, 735, 736, 737, 738, 780, 783, 809, 819, 821, 822, 824, 825, 826, 827, 828, 832, 833, 834, 836, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 853, 854, 855, 857, 858, 859, 860, 861, 863, 864, 866, 867, 869, 870, 871, 873, 875, 876, 877, 879], "examplelay": 464, "exceed": [455, 718], "except": [4, 171, 211, 212, 348, 410, 641, 646, 667, 700, 702, 720, 723, 724, 725, 738, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 861, 877], "exception": 833, "exchang": [307, 854], "exclud": [220, 226, 241, 242, 312, 322, 327, 565, 567, 569, 570, 720, 726, 764, 806], "exclude_edg": [241, 242, 312, 322, 569, 570, 719], "exclude_eid": 220, "exclude_seed_edg": [719, 720, 723, 726, 834], "exclude_self": [116, 347, 438, 440, 575], "exclude_self_loop": [226, 565], "excluded_edg": [569, 570], "exclus": [216, 220, 295, 568, 876], "execut": [89, 156, 295, 361, 700, 832, 834, 835, 837, 840, 841, 849, 853, 857, 863, 866, 869, 870, 873, 875, 877, 879], "exhaust": 737, "exhibit": 861, "exist": [0, 4, 21, 27, 28, 114, 115, 117, 142, 143, 186, 200, 226, 232, 239, 301, 322, 344, 357, 358, 559, 565, 589, 636, 640, 649, 654, 664, 665, 670, 689, 698, 700, 706, 720, 737, 744, 784, 822, 824, 825, 833, 842, 844, 845, 854, 859, 864, 867], "exist_ok": [840, 841], "exit": [70, 858], "exmapl": 6, "exp": [363, 397, 398, 418, 457, 578, 579, 829, 861, 867, 871], "expand": [345, 346, 435, 437, 731, 815, 867], "expand_as_pair": [730, 731, 770, 771, 814, 815], "expans": [345, 346], "expect": [109, 120, 199, 200, 315, 412, 428, 711, 796, 824, 858, 859, 871], "expens": 66, "experi": [14, 173, 556, 671, 728, 842, 847, 861], "experiment": [4, 6, 10, 400, 401, 402, 461, 834, 837, 840, 841], "explain": [141, 432, 433, 434, 435, 436, 437, 692, 713, 822, 858, 861], "explain_graph": [432, 433, 434, 435, 436, 437], "explain_nod": [432, 433, 434, 436], "explan": [1, 3, 11, 142, 143, 189, 190, 209, 217, 220, 222, 223, 224, 225, 432, 433, 434, 435, 436, 437, 702, 720, 725, 858, 859, 860, 861, 864, 867, 870, 871], "explanatori": [434, 436], "explic": 4, "explicit": [710, 829, 867], "explicitli": [287, 340, 700, 701, 710, 795, 829, 834, 835, 837, 840, 841, 867], "exploit": [22, 435, 437, 859], "explor": [435, 437, 691, 826, 865, 867, 874, 876], "explos": [214, 299, 305, 317, 569], "expon": 624, "exponenti": [624, 871], "export": [21, 702, 788, 823, 851, 854], "expos": [20, 22, 833], "express": [5, 705, 734, 737, 844, 862, 870, 874], "extend": [5, 153, 210, 397, 435, 437, 723, 737, 835, 859, 862, 864, 874], "extens": [183, 823, 834, 835, 837, 840, 841, 871], "extent": [178, 179], "extern": [2, 31, 421, 697, 705, 710], "extra": [22, 174, 391, 431, 563, 649, 695, 726, 826, 850, 854, 859], "extra_cached_hop": [359, 547], "extract": [1, 13, 95, 96, 159, 162, 173, 201, 220, 234, 246, 247, 289, 307, 341, 345, 346, 482, 483, 546, 559, 560, 577, 694, 703, 721, 732, 738, 763, 781, 805, 821, 824, 825, 827, 834, 837, 843, 859, 860], "extract_arch": [694, 741, 781], "extrem": 860, "ey": 845, "e\u662f\u8fb9\u7684\u6570\u91cf": 775, "f": [4, 9, 10, 295, 403, 408, 418, 419, 432, 433, 435, 437, 461, 697, 699, 701, 720, 722, 723, 724, 725, 727, 728, 731, 734, 736, 738, 743, 745, 764, 765, 766, 767, 768, 771, 774, 776, 778, 783, 785, 806, 808, 809, 810, 811, 812, 815, 818, 819, 821, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 842, 844, 845, 846, 854, 855, 858, 859, 861, 864, 867, 870, 871, 876, 877], "f1": [391, 687, 861], "f1_": 861, "f2": [391, 687], "f4": 850, "f9065fa7": 156, "f_": [397, 403, 408, 416, 417, 422, 424, 442, 864, 867], "f_r": [732, 772, 816], "f_size": 870, "face": 22, "facilit": 307, "fact": [708, 720, 858, 867], "factor": [324, 403, 425, 457, 728, 859], "factori": [438, 439, 440], "factor\ub97c": 812, "faculti": [155, 187, 193], "fail": [21, 825, 826, 827], "failur": 200, "faithfulli": 186, "fake": 159, "fakenew": 159, "fall": [4, 44, 104, 299, 302, 312, 315, 359, 547, 701], "fallback": [290, 300, 324, 331], "fallback_featur": [290, 300, 324, 331], "fals": [4, 10, 25, 31, 48, 57, 58, 65, 66, 69, 70, 95, 96, 99, 111, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 235, 236, 238, 240, 241, 242, 246, 287, 291, 295, 299, 303, 305, 307, 310, 311, 312, 317, 318, 320, 321, 324, 327, 329, 334, 339, 341, 344, 347, 348, 350, 359, 360, 394, 395, 400, 401, 403, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 421, 423, 424, 425, 426, 428, 430, 431, 434, 435, 436, 437, 438, 439, 440, 442, 450, 453, 454, 456, 458, 463, 482, 546, 547, 549, 551, 552, 553, 559, 560, 563, 565, 566, 568, 569, 570, 571, 572, 575, 576, 577, 594, 639, 640, 641, 647, 649, 651, 652, 653, 656, 657, 667, 668, 673, 675, 691, 693, 695, 696, 697, 699, 701, 702, 703, 711, 721, 727, 736, 740, 742, 743, 745, 755, 763, 764, 765, 766, 768, 776, 780, 782, 783, 785, 787, 796, 805, 806, 807, 808, 809, 811, 819, 824, 825, 826, 827, 829, 834, 835, 837, 839, 840, 841, 842, 846, 850, 854, 855, 859, 860, 861, 864, 867, 870, 871, 876, 877], "famili": [822, 867, 868, 874], "familiar": [724, 737, 854], "famou": 825, "fanout": [214, 216, 219, 241, 242, 299, 302, 305, 310, 315, 317, 318, 400, 401, 402, 569, 570, 571, 700, 701, 719, 727, 746, 763, 786, 787, 805, 834], "faq": 823, "far": [728, 859, 861, 867], "farthest_point_sampl": 6, "fashion": [699, 834], "fast": [22, 125, 138, 139, 140, 249, 347, 399, 404, 438, 440, 575, 707], "fast_neg": 389, "faster": [148, 168, 210, 226, 347, 394, 423, 426, 438, 440, 565, 575, 728, 826, 840, 841], "favor": 845, "fb15k": [157, 158], "fb15k237": 157, "fb15k237dataset": [697, 743, 783], "fc": [411, 413, 414, 418, 434, 436, 861], "fc_neigh": [727, 730, 731, 770, 771, 814, 815], "fc_pool": [730, 731, 770, 771, 814, 815], "fc_self": [727, 730, 731, 770, 771, 814, 815], "feat": [4, 10, 25, 43, 46, 51, 64, 71, 74, 103, 128, 129, 135, 136, 137, 138, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 168, 169, 171, 173, 174, 175, 176, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 217, 219, 236, 294, 311, 320, 353, 354, 355, 356, 392, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 459, 460, 461, 464, 557, 558, 578, 579, 637, 638, 647, 651, 652, 657, 674, 689, 695, 697, 700, 701, 703, 715, 719, 720, 722, 723, 725, 726, 727, 728, 731, 736, 737, 738, 743, 746, 759, 771, 776, 777, 778, 783, 786, 787, 801, 812, 815, 819, 820, 821, 824, 825, 826, 827, 834, 835, 837, 840, 841, 842, 844, 845, 847, 854, 855, 858, 861, 876, 877], "feat0": 129, "feat1": [125, 128, 249, 657, 701, 787], "feat2": [125, 249], "feat3": 125, "feat_0": [415, 840, 841], "feat_1": [840, 841], "feat_a": 860, "feat_b": 860, "feat_data": 320, "feat_dict": [716, 760, 802], "feat_dim": [455, 691], "feat_drop": [400, 402, 406, 411, 413, 414, 427], "feat_dst": [715, 727, 731, 771, 815], "feat_dst\uc758": 801, "feat_list": 462, "feat_mask": [432, 433], "feat_nam": [288, 298, 403, 454, 667, 671, 675, 711, 755, 796], "feat_nn": 442, "feat_siz": [139, 432, 436, 437, 450, 452, 453, 691], "feat_src": [715, 727, 731, 771, 815], "feat_src\uc640": 801, "featmask": 13, "featur": [0, 4, 5, 9, 13, 19, 20, 26, 27, 28, 30, 34, 35, 43, 44, 46, 47, 51, 53, 54, 56, 64, 70, 71, 73, 74, 75, 77, 91, 92, 93, 94, 95, 96, 100, 103, 104, 108, 113, 114, 115, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 208, 210, 214, 216, 217, 219, 221, 222, 223, 224, 225, 234, 236, 238, 240, 241, 242, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 294, 297, 298, 300, 306, 307, 311, 312, 316, 319, 320, 324, 331, 341, 344, 345, 346, 347, 350, 357, 358, 363, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 458, 459, 460, 464, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 553, 557, 558, 559, 560, 562, 563, 564, 566, 568, 569, 570, 571, 572, 573, 575, 578, 579, 580, 581, 640, 641, 643, 644, 645, 646, 647, 648, 649, 651, 652, 656, 657, 662, 673, 674, 677, 678, 679, 680, 681, 682, 684, 685, 686, 687, 689, 691, 693, 697, 699, 700, 701, 702, 703, 705, 706, 707, 709, 711, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 732, 733, 734, 735, 736, 737, 738, 743, 753, 764, 766, 768, 773, 774, 777, 778, 783, 788, 793, 794, 796, 802, 806, 808, 809, 810, 811, 812, 815, 817, 818, 819, 820, 821, 824, 825, 826, 829, 833, 834, 835, 836, 837, 838, 839, 842, 844, 846, 847, 851, 854, 858, 859, 860, 861, 864, 867, 870, 872, 874, 876, 877], "feature_data": [311, 840, 841], "feature_nam": [159, 222, 223, 224, 225, 298, 307, 788], "feature_stor": [297, 320], "featurefetch": 292, "featurekei": [324, 331], "featureless": 703, "features_to_us": 397, "featurestor": [288, 293, 297], "febd69": 867, "fed": [108, 425, 434, 436], "fedora": 823, "feed": [445, 446, 689, 723, 725, 734, 826, 845, 859, 864, 871], "feed_forward": 871, "feedback": [737, 777, 820], "feedforward": [453, 691], "feel": [21, 829], "fell": 22, "fetch": [7, 21, 208, 222, 223, 224, 225, 292, 297, 305, 310, 723, 726, 727, 833, 837, 861], "fetch_featur": [297, 719, 720, 722, 723, 725, 726, 727, 834, 835, 837, 877], "fetcher": [7, 294, 297, 833], "few": [1, 4, 14, 22, 324, 641, 699, 700, 718, 724, 738, 854, 855, 867, 871], "fewer": [171, 295, 299, 305, 317, 569, 836, 870], "ffn": [445, 446, 871], "ffn1": 826, "ffn2": 826, "field": [21, 22, 25, 27, 28, 114, 115, 146, 151, 152, 168, 169, 184, 186, 192, 240, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 311, 312, 403, 557, 646, 651, 652, 695, 697, 702, 714, 839, 840, 841, 860, 864, 871], "field_of_studi": 788, "fifo": 324, "fig": [825, 867, 870], "fig2": 870, "figsiz": [860, 870], "figur": [699, 703, 711, 718, 826, 827, 860, 864, 870, 871], "file": [4, 21, 22, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 206, 209, 231, 235, 236, 237, 238, 240, 293, 294, 311, 352, 573, 692, 694, 697, 700, 702, 703, 704, 711, 734, 738, 741, 781, 788, 823, 824, 825, 827, 832, 834, 837, 839, 842, 844, 845, 847, 849, 850, 853, 854, 855, 857, 858, 859, 860, 861, 863, 866, 869, 873, 875, 879], "file_nam": 695, "file_path": [694, 741, 781], "file_system": [835, 877], "filelock": [834, 835, 837, 840, 841], "filenam": [199, 204, 352, 573], "filesystem": 236, "fill": [27, 28, 93, 113, 114, 115, 117, 455, 576, 618, 619, 620, 632, 657, 867], "fill_data": [29, 117, 657], "film": 134, "filter": [53, 54, 163, 299, 302, 315, 395, 397, 398, 399, 404, 407, 410, 411, 413, 414, 415, 418, 421, 428], "filter_edg": 871, "filter_nod": 871, "final": [6, 22, 132, 133, 144, 170, 240, 317, 318, 397, 425, 454, 458, 697, 714, 715, 718, 732, 736, 738, 758, 799, 823, 840, 841, 859, 860, 861, 864, 871, 876], "final_ft": [714, 758, 799], "final_tmp": [434, 436], "find": [14, 21, 26, 55, 130, 131, 322, 340, 435, 437, 565, 704, 731, 737, 824, 825, 826, 827, 843, 844, 845, 847, 859, 860, 861, 867, 871], "find_edg": [4, 89, 766, 809], "fine": [89, 315, 722, 829, 851, 864], "fingerprint": 854, "finish": [21, 824, 825, 827, 834, 840, 841, 854, 876], "first": [4, 9, 21, 22, 27, 51, 56, 73, 118, 119, 121, 123, 124, 125, 126, 130, 131, 137, 139, 140, 141, 162, 171, 180, 181, 182, 184, 188, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 229, 230, 240, 245, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 295, 299, 304, 332, 340, 345, 346, 347, 363, 391, 397, 410, 421, 428, 432, 438, 440, 447, 481, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 562, 566, 567, 568, 571, 575, 622, 632, 641, 646, 647, 657, 691, 696, 700, 701, 703, 711, 721, 722, 724, 730, 731, 736, 738, 823, 824, 825, 829, 835, 836, 840, 841, 843, 845, 846, 847, 850, 854, 855, 858, 859, 860, 861, 864, 867, 871, 872, 874, 876, 877], "first_label": 301, "first_se": 301, "firstli": 826, "fission": 167, "fit": [210, 311, 389, 416, 417, 424, 703, 718, 721, 733, 836, 838, 843, 844], "five": [137, 141, 142, 143, 155, 187, 193, 695, 839, 864], "fix": [197, 198, 205, 214, 216, 217, 359, 419, 547, 569, 719, 871], "flag": [31, 57, 58, 246, 342, 403, 425, 463, 482, 688, 823, 854], "flatten": [567, 728, 812], "flexibl": [20, 641, 695, 833, 871], "flickr": 160, "flickrdataset": 194, "flip": [639, 675, 834, 837, 840, 841], "flist": 73, "float": [4, 9, 10, 22, 95, 96, 117, 120, 138, 139, 140, 142, 143, 161, 162, 163, 178, 183, 189, 190, 198, 205, 241, 242, 244, 245, 299, 305, 310, 317, 318, 343, 349, 351, 363, 389, 395, 396, 397, 400, 401, 402, 403, 404, 406, 411, 412, 413, 414, 415, 416, 417, 419, 423, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 439, 445, 446, 450, 452, 453, 463, 480, 481, 553, 559, 560, 561, 565, 566, 568, 569, 570, 571, 614, 625, 643, 644, 645, 654, 657, 660, 661, 662, 664, 665, 670, 674, 681, 686, 695, 697, 708, 714, 727, 733, 766, 773, 783, 793, 799, 809, 817, 824, 825, 826, 835, 842, 844, 846, 860, 864, 871, 877], "float16": [9, 645, 714, 728, 799, 812], "float16\uc744": 799, "float32": [4, 9, 10, 47, 75, 95, 96, 117, 146, 147, 165, 168, 169, 174, 219, 247, 289, 362, 397, 407, 408, 411, 413, 414, 424, 483, 559, 560, 561, 572, 593, 644, 668, 674, 687, 697, 700, 701, 708, 711, 722, 743, 746, 752, 755, 783, 786, 787, 793, 796, 829, 843, 846], "float64": [126, 250, 591, 643, 695, 840, 841, 847], "floattensor": [449, 567, 568, 569, 570, 572, 715, 759, 801, 860], "flow": [127, 131, 167, 208, 210, 211, 212, 693, 720, 723, 725, 805, 806, 809, 811, 836, 837, 871], "flush": 728, "fly": [400, 401, 402, 867], "fmt": 32, "fn": [5, 9, 20, 21, 34, 73, 91, 92, 93, 94, 100, 113, 121, 432, 433, 435, 464, 678, 679, 680, 681, 682, 683, 684, 685, 686, 714, 715, 716, 724, 728, 731, 734, 735, 737, 758, 759, 760, 767, 771, 774, 775, 777, 799, 800, 801, 802, 810, 812, 815, 818, 820, 844, 845, 858, 859, 860, 864, 870, 871], "fn_": 861, "focu": [850, 851, 864, 867], "focus": [697, 859, 860, 862, 871, 874], "folder": [22, 156, 702, 703, 711, 796, 854], "follow": [0, 3, 4, 5, 6, 9, 20, 21, 22, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 140, 141, 142, 143, 148, 156, 178, 179, 182, 189, 190, 204, 209, 214, 216, 219, 220, 229, 230, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 295, 297, 301, 303, 311, 340, 341, 345, 346, 347, 350, 351, 352, 357, 363, 390, 391, 392, 397, 408, 410, 412, 415, 421, 422, 423, 432, 433, 438, 439, 440, 441, 442, 443, 444, 448, 449, 459, 460, 463, 464, 480, 482, 483, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 549, 551, 552, 553, 561, 563, 567, 568, 569, 570, 571, 575, 577, 578, 579, 580, 581, 583, 619, 620, 640, 641, 642, 646, 647, 648, 653, 656, 657, 662, 668, 672, 673, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 708, 710, 711, 713, 715, 718, 719, 720, 721, 722, 723, 724, 725, 728, 730, 733, 734, 735, 736, 737, 738, 763, 764, 773, 805, 806, 817, 823, 826, 827, 829, 833, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 847, 850, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "follow_dst": [733, 773, 817], "follow_edg": 840, "follow_edges_path": 840, "follow_src": [733, 773, 817], "followed_bi": 720, "follows\uc640": 796, "foo": 70, "footnot": [850, 851], "footprint": [703, 715], "foral": [402, 418, 423, 427, 506, 731, 771, 815, 844], "forc": [232, 239, 311, 850, 867, 871], "force_even": [232, 239, 699, 745, 785, 855], "force_preprocess": 311, "force_reload": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 693, 697, 740, 743, 780, 783], "forcibli": [403, 425], "forg": 850, "fork": [8, 21, 850], "form": [20, 21, 22, 26, 51, 61, 88, 130, 131, 173, 208, 210, 246, 287, 299, 340, 341, 345, 346, 358, 389, 393, 412, 434, 435, 436, 437, 465, 482, 546, 554, 555, 564, 569, 570, 639, 649, 655, 675, 701, 703, 710, 736, 754, 766, 795, 809, 837, 844, 845, 846, 859, 860, 861, 870, 872, 874], "formal": [20, 72, 245, 481, 655, 703, 825, 859], "format": [0, 4, 12, 13, 30, 31, 32, 34, 35, 41, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 118, 119, 126, 131, 231, 240, 241, 246, 247, 249, 250, 287, 288, 297, 298, 299, 307, 311, 312, 320, 323, 328, 333, 339, 340, 341, 345, 346, 482, 484, 546, 557, 559, 561, 573, 578, 580, 581, 610, 619, 620, 632, 647, 694, 695, 697, 701, 710, 721, 728, 730, 731, 741, 743, 770, 771, 781, 783, 787, 788, 812, 814, 815, 829, 837, 839, 840, 841, 844, 845, 854, 855, 858, 859, 861, 864, 867, 871, 876], "former": [363, 432, 433, 434, 435, 436, 437, 565, 700, 720], "formul": [410, 421, 614, 625, 732, 734, 836, 842, 845, 859, 860, 872, 874], "formula": [363, 395, 416, 417, 420, 424, 714, 731], "formular": 673, "forth": [22, 647], "forum": 21, "forward": [4, 70, 230, 312, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 715, 720, 722, 723, 724, 725, 727, 728, 729, 732, 734, 735, 736, 737, 738, 764, 765, 766, 767, 768, 771, 772, 774, 776, 777, 778, 806, 808, 809, 810, 811, 812, 813, 816, 818, 819, 820, 821, 824, 825, 826, 827, 829, 834, 835, 837, 842, 844, 845, 846, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "forward_infer": 867, "forward_train": 867, "found": [26, 48, 70, 322, 438, 440, 556, 568, 671, 688, 695, 697, 714, 732, 824, 829, 830, 834, 835, 837, 840, 841, 844, 858, 859, 871, 876, 877], "four": [508, 575, 674, 698, 701, 702, 710, 733, 839, 854, 860, 861], "fourth": 567, "fp16": [728, 812], "fp16\ub97c": 812, "fp16\uc744": 812, "fp_": 861, "frac": [120, 178, 179, 244, 245, 305, 351, 363, 397, 398, 403, 415, 418, 421, 423, 428, 441, 457, 458, 480, 481, 571, 578, 579, 673, 736, 776, 819, 824, 825, 826, 829, 858, 859, 860, 861, 867, 870, 871], "frac_list": [207, 876], "fraction": [207, 415], "fragment": 851, "frame": [9, 825, 867, 870], "framework": [4, 7, 9, 21, 23, 42, 59, 62, 63, 108, 125, 126, 131, 186, 235, 246, 247, 249, 250, 287, 340, 341, 345, 346, 347, 438, 440, 445, 446, 482, 483, 546, 554, 555, 569, 570, 571, 572, 575, 700, 707, 709, 711, 729, 794, 822, 830, 833, 840, 841, 844, 854, 864, 867, 871], "fraud": [145, 161, 162, 163], "frauddataset": [161, 163], "fraudul": [145, 161, 162], "free": [21, 178, 179, 822, 829, 836, 839, 861], "freebas": 158, "frequenc": 403, "frequent": [22, 135, 136, 137, 182, 305, 310, 703], "friendship": [194, 706, 736], "from": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 22, 26, 27, 32, 45, 48, 68, 73, 79, 82, 89, 93, 94, 95, 96, 105, 112, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 229, 230, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 289, 291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 315, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 330, 335, 338, 339, 340, 341, 344, 345, 346, 347, 349, 351, 352, 357, 358, 363, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 480, 481, 482, 483, 546, 553, 554, 555, 556, 560, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 576, 577, 580, 581, 616, 618, 619, 620, 632, 636, 640, 641, 646, 648, 649, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 680, 681, 682, 689, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 703, 705, 709, 710, 714, 715, 716, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 736, 737, 738, 740, 741, 742, 743, 744, 770, 771, 776, 780, 781, 782, 783, 784, 788, 792, 794, 795, 806, 812, 814, 815, 818, 819, 820, 824, 825, 826, 827, 829, 832, 833, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 846, 849, 850, 853, 854, 855, 857, 859, 861, 863, 864, 866, 867, 869, 870, 871, 873, 875, 876, 877, 879], "from_coo": [824, 829], "from_csc": [727, 829], "from_csr": 829, "from_cudf_edgelist": 248, "from_networkx": [250, 287, 707, 751, 792], "from_numpi": [319, 847, 860], "from_scipi": [249, 287, 707, 751, 792], "fromnumer": [858, 861], "fromt": [146, 169], "front": 731, "frontier": [4, 91, 92, 123, 124, 229, 230, 548, 549, 550, 551, 552, 564, 653, 700, 701, 746, 763, 786, 787, 805], "frontier2": [763, 805], "fsspec": [834, 835, 837, 840, 841], "fstab": 854, "ft": [714, 735, 758, 775, 799, 800], "full": [4, 26, 153, 191, 295, 303, 311, 718, 722, 724, 725, 727, 734, 738, 811, 824, 825, 826, 834, 835, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 860, 861, 864, 867, 870, 871, 876, 877], "fulli": [4, 21, 292, 699, 731, 829, 830, 858], "func": [34, 35, 53, 54, 361, 687, 714, 716, 760, 802, 864, 871], "funcanim": [825, 867, 870], "function": [0, 1, 4, 13, 21, 26, 27, 28, 34, 35, 53, 54, 64, 70, 71, 73, 89, 91, 92, 93, 94, 95, 96, 100, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 130, 146, 156, 168, 169, 183, 197, 213, 232, 235, 236, 239, 241, 243, 245, 246, 247, 250, 290, 291, 294, 295, 296, 297, 299, 300, 302, 303, 305, 307, 308, 309, 310, 312, 315, 317, 318, 319, 321, 322, 341, 344, 347, 348, 349, 350, 358, 359, 361, 390, 391, 392, 395, 399, 400, 403, 404, 405, 406, 407, 410, 411, 413, 414, 415, 416, 418, 419, 421, 422, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 452, 453, 457, 458, 461, 464, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 556, 557, 558, 559, 560, 561, 562, 563, 565, 568, 569, 570, 571, 573, 575, 580, 581, 583, 587, 588, 622, 639, 640, 642, 646, 647, 648, 649, 650, 651, 652, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 693, 694, 697, 698, 700, 702, 703, 707, 713, 715, 716, 719, 720, 723, 724, 725, 728, 729, 732, 734, 735, 736, 737, 738, 758, 759, 760, 766, 767, 768, 771, 774, 775, 776, 778, 798, 799, 800, 801, 802, 809, 810, 811, 812, 815, 816, 818, 819, 821, 824, 825, 826, 827, 830, 834, 836, 837, 840, 841, 842, 845, 846, 850, 854, 855, 858, 859, 860, 861, 862, 864, 867, 874, 877], "functional_datapip": [295, 302, 303, 315, 719, 723, 727], "functool": [720, 834, 859, 867, 871], "fundament": [859, 867], "further": [45, 66, 68, 73, 79, 82, 91, 92, 93, 94, 100, 105, 113, 210, 295, 303, 703, 715, 732, 734, 823, 829, 830, 861, 871], "furthermor": [125, 130, 702, 709, 859], "fuse": [9, 216, 507, 511, 512, 513, 514, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534], "fused_csc_sampling_graph": [231, 299, 302, 305, 310, 321], "fusedcscsamplinggraph": [231, 302, 305, 310, 311, 317, 318, 321, 329, 330, 335, 719, 727, 840, 841], "futur": [6, 21, 183, 231, 290, 294, 296, 299, 300, 319, 339, 695, 728, 834, 837, 840, 841, 867, 871], "futurewarn": [834, 837, 840, 841], "fwtype": 564, "g": [0, 4, 5, 6, 9, 10, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 233, 234, 240, 241, 242, 243, 246, 247, 248, 249, 250, 287, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 357, 358, 359, 360, 363, 389, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 449, 454, 455, 458, 459, 460, 461, 463, 464, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 554, 555, 556, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 575, 576, 577, 580, 581, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 731, 732, 734, 736, 737, 742, 743, 745, 746, 747, 750, 752, 753, 754, 755, 759, 760, 761, 763, 764, 765, 766, 767, 768, 771, 772, 774, 776, 777, 782, 783, 785, 786, 787, 788, 791, 793, 794, 795, 796, 801, 802, 803, 805, 806, 807, 808, 809, 810, 811, 812, 815, 816, 818, 819, 820, 823, 824, 825, 826, 829, 830, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876], "g1": [36, 37, 38, 89, 101, 102, 108, 122, 128, 129, 352, 391, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 456, 464, 557, 558, 566, 568, 573, 577, 578, 579, 651, 652, 667, 687, 736, 776, 819, 860], "g1_node_feat": [441, 442, 443, 444, 445, 446, 447, 448, 449], "g2": [36, 37, 38, 95, 96, 101, 102, 122, 128, 129, 130, 352, 391, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 456, 464, 557, 558, 567, 568, 573, 577, 578, 579, 651, 652, 667, 687, 736, 776, 819], "g2_node_feat": [441, 442, 443, 444, 445, 446, 447, 448, 449], "g3": [464, 667, 687], "g32": [710, 754, 795], "g32_2": [710, 754, 795], "g64": [710, 754, 795], "g64_2": [710, 754, 795], "g_": [4, 10, 675], "g_2": 344, "g_atom": 179, "g_batch": 183, "g_edg": [569, 570], "g_int": 64, "g_l": 860, "g_layer": 860, "g_list": 573, "g_long": 71, "g_m": 867, "g_nodes_explain": 437, "g_r": [732, 772, 816], "g_sort": [571, 580, 581], "g_t": 867, "gai": [858, 860], "gain": [727, 730, 770, 814, 830, 858, 859, 860, 861, 864, 867, 870, 871], "galleri": [21, 832, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 854, 855, 856, 858, 859, 860, 861, 864, 867, 870, 871, 874, 876, 877, 878], "game": [4, 27, 28, 30, 31, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 171, 214, 216, 219, 246, 247, 340, 341, 345, 346, 363, 391, 433, 434, 435, 482, 483, 546, 554, 559, 560, 561, 563, 646, 647, 648, 649, 656, 657, 662, 672, 673, 677, 687, 711, 755, 763, 796, 805], "gamma": [826, 860], "gamma_": [397, 457, 860], "gamma_k": 397, "gan": [858, 871], "gap": [178, 179, 442, 861], "gat": [363, 408, 728, 735, 800, 812, 829, 830, 862, 874], "gatconv": [400, 411, 715, 728, 759, 801, 812, 861], "gate": [419, 420, 442, 867], "gate_nn": 442, "gatedgcn": 419, "gatedgraphconv": 442, "gather": [9, 214, 215, 216, 299, 305, 310, 317, 318, 505, 569, 725, 738, 763, 805, 837, 844, 860], "gathermm": 13, "gatlay": 861, "gatv2": 414, "gat\ub97c": 812, "gaussian": [14, 418, 457], "gb": [235, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 319, 320, 321, 322, 323, 339, 703, 719, 720, 722, 723, 725, 726, 727, 830, 834, 835, 837, 840, 841, 877], "gb_warn": [840, 841], "gbwarn": [840, 841], "gcc": [702, 788, 823], "gclass": [432, 436, 437, 846], "gcmc": [764, 806], "gcmclayer": [734, 774, 818], "gcn": [134, 149, 155, 185, 187, 193, 209, 406, 407, 412, 421, 427, 449, 480, 674, 720, 722, 725, 727, 728, 730, 731, 764, 766, 770, 771, 800, 806, 809, 814, 815, 823, 830, 846, 860, 862, 864, 874], "gcn_model": 824, "gcn_msg": 858, "gcn_reduc": 858, "gcnii": 415, "gcnlayer": [824, 858], "gcnnorm": 13, "gcn\uc744": [808, 811], "gdata_pars": 148, "gdc": 13, "gdelt": [25, 164], "gdeltdataset": [698, 744, 784], "ge": 440, "gender": 843, "gene": [569, 570, 711, 755, 796, 861], "gener": [0, 1, 3, 4, 5, 7, 9, 10, 20, 34, 73, 91, 92, 93, 94, 100, 113, 117, 123, 124, 128, 129, 138, 139, 140, 141, 142, 143, 172, 174, 183, 189, 190, 207, 210, 211, 212, 213, 217, 220, 226, 227, 229, 290, 293, 294, 295, 296, 299, 300, 303, 304, 309, 319, 321, 347, 391, 397, 400, 401, 402, 408, 411, 432, 433, 434, 436, 438, 440, 454, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 548, 549, 550, 551, 552, 554, 555, 557, 558, 562, 564, 565, 566, 568, 569, 575, 639, 653, 657, 675, 691, 699, 700, 702, 703, 707, 710, 713, 714, 718, 720, 723, 724, 725, 726, 728, 730, 733, 734, 817, 826, 832, 833, 836, 837, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 854, 855, 856, 858, 859, 860, 861, 864, 869, 870, 871, 876, 877, 878], "generaliz": 861, "generic_join": 295, "gene\u76f8\u4e92\u4f5c\u7528\u8fb9": 755, "gene\u8282\u70b9": 755, "gentl": 858, "geom": [134, 149, 155, 185, 187, 193, 480], "geometr": [134, 149, 155, 185, 186, 187, 193, 418, 457, 480, 830], "geomgcndataset": [149, 155, 185, 187, 193], "get": [0, 1, 4, 22, 26, 30, 31, 42, 43, 44, 46, 48, 51, 56, 68, 70, 74, 77, 103, 104, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 209, 210, 232, 239, 245, 247, 288, 290, 292, 294, 295, 296, 298, 299, 300, 307, 319, 320, 342, 347, 390, 393, 428, 438, 440, 449, 481, 483, 565, 569, 571, 575, 577, 580, 581, 649, 687, 691, 693, 695, 696, 697, 699, 701, 703, 708, 711, 714, 720, 722, 723, 725, 732, 733, 736, 737, 772, 780, 782, 783, 793, 796, 805, 816, 823, 824, 825, 829, 834, 837, 851, 861, 867, 871, 876], "get_aggregate_fn": [732, 772, 816], "get_attent": [407, 408, 411, 413, 414, 442], "get_cmap": 860, "get_dataload": 876, "get_dataset": 871, "get_dist": [439, 553], "get_edge_partition_polici": 4, "get_edge_split": [696, 742, 782], "get_etype_id": [4, 647, 788], "get_group": 847, "get_idx_split": [696, 742, 782, 854], "get_log_prob": 867, "get_node_partition_polici": [4, 701, 787], "get_ntype_id": [4, 647, 788], "get_o": 871, "get_part_s": 4, "get_partition_book": [4, 699, 701, 745, 785, 787, 855], "get_seq_by_id": 871, "get_siz": 4, "ggnn": 442, "ghz": 179, "giant": 130, "gid": 577, "gilmer": [836, 844], "gin": [736, 776, 819, 846, 876], "ginconv": [736, 776, 819, 876], "gindataset": [432, 436, 437, 697, 736, 743, 776, 783, 819, 846, 876], "girvan": 167, "git": [702, 788, 823], "github": [135, 136, 151, 152, 153, 159, 162, 165, 168, 186, 210, 688, 702, 756, 788, 822, 823, 834, 837, 840, 841, 850, 859, 860, 870, 871], "git\uc5d0\uc11c": 788, "give": [4, 11, 27, 114, 207, 245, 344, 481, 562, 576, 641, 686, 707, 708, 723, 793, 824, 834, 846], "given": [4, 5, 6, 9, 14, 22, 30, 31, 32, 35, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 79, 81, 82, 87, 88, 93, 109, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 148, 164, 183, 184, 197, 198, 200, 205, 208, 209, 213, 214, 216, 219, 220, 229, 230, 232, 233, 234, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 287, 290, 291, 295, 299, 300, 302, 305, 307, 310, 315, 317, 318, 322, 323, 328, 333, 340, 341, 348, 350, 352, 358, 395, 398, 400, 401, 402, 404, 406, 407, 408, 410, 411, 413, 414, 416, 417, 418, 421, 423, 424, 427, 434, 436, 439, 458, 464, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 553, 555, 557, 558, 562, 564, 565, 568, 569, 570, 571, 572, 576, 580, 581, 600, 603, 604, 605, 607, 636, 641, 646, 649, 653, 655, 657, 664, 665, 667, 668, 670, 673, 687, 695, 700, 703, 709, 710, 725, 734, 736, 737, 738, 795, 829, 833, 842, 845, 846, 847, 859, 861, 864, 867, 870, 871], "gklib": [702, 788], "gklib\uc744": 788, "glabel": 573, "glist": 352, "gloabl": 4, "glob": [382, 383, 384, 385, 386, 387, 441, 442, 443, 444, 445, 446, 447, 448, 449, 474, 475, 476, 477, 478, 479], "global": [4, 13, 128, 129, 164, 236, 237, 240, 299, 393, 442, 452, 569, 639, 675, 823, 854], "global_test_eid": 855, "global_valid_eid": 855, "gloo": [699, 700, 745, 746, 785, 786, 850, 854, 855, 876], "glorot": [406, 413, 414, 418, 420, 421, 424, 427, 429], "glove": [184, 864], "glove_emb": 184, "glove_embed_fil": 184, "gluon": [199, 200, 729, 813], "gluoncv": 823, "gluonnlp": 823, "gluon\u7684nn\u5757": 769, "gm_": [4, 10], "gml": [711, 796], "gnn": [4, 7, 12, 21, 135, 136, 137, 146, 151, 152, 153, 159, 162, 165, 169, 171, 180, 182, 188, 210, 213, 214, 215, 216, 219, 220, 299, 305, 312, 317, 363, 422, 432, 433, 434, 435, 436, 437, 462, 464, 569, 712, 718, 722, 726, 733, 734, 735, 737, 738, 756, 767, 773, 778, 797, 800, 804, 805, 808, 812, 817, 818, 820, 821, 822, 830, 832, 834, 835, 836, 837, 847, 848, 849, 851, 858, 860, 861, 876, 877], "gnn_modul": 422, "gnnbenchmarkdataset": [135, 136, 151, 152, 153], "gnnexplain": [142, 143, 189, 190, 433], "gnnlayer": 422, "gnn\uc5d0": 811, "gnn\uc740": 804, "gnn\uc744": [805, 808, 818, 820], "gnu": [823, 851], "go": [14, 21, 22, 568, 822, 823, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "goal": 188, "goe": [4, 20, 21, 710, 720, 844, 845], "gone": 846, "good": [135, 136, 162, 845, 854, 861], "googl": [21, 828, 871], "gossipcop": 159, "goto": 156, "gp_": [4, 10], "gpb": [4, 240, 701, 787], "gpt": 871, "gpu": [6, 9, 10, 14, 21, 89, 108, 110, 112, 118, 119, 125, 126, 210, 249, 250, 287, 300, 305, 310, 319, 331, 340, 347, 350, 358, 439, 461, 553, 562, 564, 568, 569, 570, 575, 589, 641, 642, 705, 714, 718, 722, 725, 726, 728, 733, 794, 799, 804, 808, 812, 817, 822, 823, 825, 826, 830, 832, 833, 836, 837, 854, 864, 871, 879], "gpu_0": [10, 461], "gpu_cach": 210, "gpu_cache_threshold": [305, 310], "gpu_cached_featur": 300, "gpucachedfeatur": 331, "gpufeaturecach": 300, "gpu\u56fe\u53ea\u63a5\u53d7gpu\u4e0a\u7684\u7279\u5f81\u6570\u636e": 753, "gpu\ub85c": [794, 806, 811], "gpu\ub97c": 808, "gpu\uc5d0": [794, 804, 807, 811], "gpu\uc5d0\uc11c": [790, 807], "graclu": 6, "grad": [9, 118, 119], "grad_fn": [9, 118, 395, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 418, 420, 421, 424, 426, 427, 428, 429, 442, 444, 445, 446, 449], "gradient": [4, 9, 10, 389, 393, 403, 422, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 699, 718, 728, 804, 812, 846, 854, 876], "gradscal": [728, 812], "gradual": [867, 870, 871], "graident\ub4e4\uc740": 812, "grain": [315, 829, 851, 864], "granular": [164, 166], "grapbolt": 727, "graph": [3, 6, 9, 11, 13, 14, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 289, 293, 297, 298, 299, 301, 302, 305, 306, 307, 310, 311, 312, 314, 315, 316, 317, 318, 321, 322, 323, 330, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 460, 461, 462, 463, 464, 465, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 691, 693, 696, 698, 699, 704, 708, 709, 712, 713, 714, 715, 721, 726, 727, 728, 730, 732, 735, 742, 743, 744, 747, 748, 751, 752, 753, 754, 755, 758, 763, 771, 773, 774, 775, 776, 777, 778, 780, 782, 783, 784, 787, 788, 789, 790, 791, 792, 793, 794, 795, 799, 800, 802, 804, 805, 806, 807, 809, 811, 812, 816, 817, 818, 819, 820, 821, 823, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 844, 848, 849, 850, 863, 864, 868, 869, 873, 877, 878, 879], "graph0": 695, "graph1": 695, "graph_data": [695, 711, 755, 796], "graph_degre": 183, "graph_edg": 847, "graph_emb": 867, "graph_embed_func": 867, "graph_feat": [128, 129, 436, 437], "graph_format": [231, 240], "graph_hidden_s": 867, "graph_id": [695, 847], "graph_id_field": 695, "graph_index": 21, "graph_label": 573, "graph_list": 352, "graph_nam": [4, 240, 699, 700, 701, 702, 703, 745, 746, 747, 785, 786, 787, 788, 854, 855], "graph_op": 867, "graph_path": [698, 744, 784], "graph_pool": 871, "graph_prop": 867, "graph_prop_func": 867, "graph_properti": 847, "graph_sampl": [210, 211, 212], "graph_topologi": [834, 837, 840, 841], "graph_train": 855, "graphbolt": [231, 235, 236, 240, 241, 242, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 719, 720, 721, 723, 725, 726, 727, 834, 835, 837, 838, 840, 841, 851, 877], "graphbolt_test": 311, "graphconv": [391, 396, 405, 412, 415, 422, 428, 429, 434, 436, 437, 720, 725, 728, 729, 731, 736, 738, 764, 765, 766, 768, 771, 776, 778, 806, 808, 809, 811, 813, 815, 819, 821, 842, 846, 858], "graphdataload": [432, 436, 437, 696, 697, 736, 742, 743, 776, 782, 783, 819, 826, 846, 876], "graphdataloader\uc758": 819, "graphemb": 867, "graphgp": 454, "graphic": 307, "graphmetadata": 299, "graphnet": 830, "graphorm": [453, 689], "graphormerlay": 691, "graphpartitionbook": [4, 232, 236, 237, 239, 241, 701], "graphpool": 871, "graphpr": 138, "graphprop": 867, "graphproppr": [138, 696, 742, 782, 826], "graphsag": [175, 181, 402, 406, 427, 699, 721, 722, 725, 727, 731, 738, 748, 765, 778, 789, 808, 809, 811, 815, 821, 834, 835, 837, 844, 854, 855, 861, 877], "graphsage\u4e2dgcn\u805a\u5408\u4e0d\u9700\u8981fc_self": 771, "graphsage\u7684\u5b9e\u73b0": 768, "graphsage\ub97c": 785, "graphsage\uc5d0\uc11c": 821, "graphsaint": [160, 194, 217], "graphtransform": 691, "graphviz_layout": 864, "graphwis": 446, "graph\uc5d0": 805, "graph\uc758": [806, 811, 821], "great": 860, "greater": [131, 197, 287, 294, 319, 340, 569, 570, 571, 851, 864], "greatli": [862, 874], "greedi": 6, "green": 836, "grid": [171, 172, 190], "grid_siz": 190, "groud": 821, "ground": [150, 154, 167, 176, 738, 821, 835, 842, 855, 860, 867, 877], "group": [4, 20, 137, 166, 167, 182, 295, 361, 362, 422, 461, 689, 691, 699, 711, 723, 829, 840, 841, 844, 847, 860], "groupbi": 847, "grouplen": 173, "growth": 859, "grpah": 676, "gru": [420, 867], "grucel": 867, "gsddmm": 13, "gsddmmbackward": 9, "gspmm": 13, "gspmmbackward": [9, 414], "gt": [450, 451, 452, 453, 454, 455, 456, 457, 690, 826, 834, 835, 837, 840, 841], "gtlayer": 826, "gtmodel": 826, "guarante": [4, 101, 102, 226, 232, 239, 305, 565, 876], "guid": [1, 3, 11, 21, 209, 210, 214, 215, 216, 217, 220, 222, 223, 224, 225, 641, 697, 702, 721, 738, 747, 797, 822, 854, 864], "guide_cn": [756, 773], "guidelin": 822, "guo": [864, 871], "gz": [694, 741, 781], "gz_file_path": [694, 741, 781], "gz\u6216": 741, "gz\u6587\u4ef6": 741, "h": [4, 5, 22, 25, 27, 28, 30, 34, 35, 43, 44, 46, 51, 53, 54, 56, 70, 73, 74, 77, 91, 92, 93, 94, 100, 103, 104, 108, 113, 114, 115, 116, 121, 128, 129, 145, 177, 178, 179, 245, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 357, 395, 396, 399, 400, 408, 409, 411, 413, 414, 415, 423, 428, 429, 432, 433, 434, 435, 436, 437, 455, 456, 457, 458, 459, 460, 464, 481, 483, 557, 558, 562, 563, 578, 579, 647, 648, 649, 651, 652, 660, 661, 662, 668, 673, 674, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 709, 714, 716, 718, 724, 728, 731, 734, 736, 737, 738, 753, 758, 760, 762, 763, 765, 767, 771, 774, 776, 777, 778, 794, 799, 802, 804, 805, 808, 810, 812, 815, 818, 819, 820, 821, 823, 826, 827, 829, 836, 837, 842, 844, 845, 846, 855, 858, 859, 861, 864, 867, 871], "h1": [5, 47, 75, 391, 648, 669, 826], "h2": [5, 47, 70, 75, 391, 648, 669, 826], "h2h": 859, "h2o": 859, "h_": [120, 397, 402, 408, 413, 414, 419, 420, 424, 427, 433, 435, 731, 732, 771, 772, 815, 816, 827, 844, 858, 861, 864], "h_atom": 179, "h_cat": 864, "h_dict": [738, 778, 821], "h_dim": 859, "h_dst": [458, 724, 765, 767, 808, 810], "h_e": [403, 409, 425], "h_feat": [837, 842, 844, 845, 846], "h_g": [736, 776, 819], "h_head": [459, 460], "h_i": [395, 398, 399, 403, 404, 405, 406, 407, 409, 410, 413, 414, 416, 417, 418, 420, 421, 424, 425, 426, 427, 458, 462, 829, 859, 861, 871], "h_item": [738, 778, 821], "h_j": [395, 398, 403, 405, 407, 409, 410, 413, 414, 415, 416, 417, 421, 424, 425, 426, 427, 458, 859, 864], "h_jl": 864, "h_max": 5, "h_n": [403, 409, 425, 844], "h_neg_dst": 855, "h_neg_src": 855, "h_neigh": [724, 731, 767, 771, 810, 815], "h_new": 5, "h_pos_dst": 855, "h_pos_src": 855, "h_self": [731, 771, 815], "h_size": 864, "h_src": [458, 724, 767, 810], "h_sub_g": [711, 755, 796], "h_sum": [5, 128, 129], "h_t": 871, "h_tail": [459, 460], "h_total": 844, "h_u": [734, 774, 818, 836, 844, 845, 867], "h_user": [738, 778, 821], "h_v": [730, 734, 736, 770, 774, 776, 814, 818, 819, 836, 844, 845, 858], "h_x": 409, "ha": [4, 5, 9, 14, 22, 27, 28, 30, 31, 32, 34, 36, 37, 47, 48, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 107, 113, 114, 115, 117, 118, 119, 120, 122, 131, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 160, 162, 166, 167, 168, 170, 173, 175, 176, 184, 191, 192, 194, 220, 221, 230, 240, 246, 287, 291, 292, 295, 312, 332, 340, 341, 345, 346, 347, 350, 357, 359, 391, 412, 421, 438, 439, 440, 457, 461, 482, 484, 546, 553, 557, 559, 561, 562, 565, 567, 568, 571, 575, 578, 579, 580, 581, 614, 641, 646, 651, 652, 693, 695, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 711, 714, 720, 721, 722, 724, 728, 729, 731, 733, 734, 736, 783, 791, 823, 826, 827, 829, 830, 839, 840, 843, 844, 845, 846, 854, 855, 858, 859, 860, 861, 864, 867, 868, 871, 872, 874], "hadamard": 826, "half": [9, 141, 645, 714, 715, 799, 871], "halo": [236, 240, 359, 547, 702, 703, 788], "halo_hop": 240, "halt": [568, 871], "halt_and_accum": 871, "halt_dec": 871, "halt_enc": 871, "haltingunit": 871, "hamilton": 844, "hand": 703, "handcraft": [161, 163], "handl": [210, 293, 395, 407, 408, 410, 411, 413, 414, 415, 418, 421, 428, 507, 694, 695, 702, 703, 705, 707, 710, 714, 731, 732, 838, 843, 846, 861, 867, 871], "hang": [295, 324, 877], "hao": 861, "happen": [210, 226, 565, 860], "happend": 164, "har": [862, 874], "hard": [21, 245, 481, 867], "hardwar": [726, 851], "harm": [305, 317, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428], "harvard": 871, "has_cach": [156, 693, 698, 740, 744, 780, 784], "has_dupl": 829, "has_edges_between": [569, 570, 867], "has_nontree_edg": [230, 549], "has_reverse_edg": [230, 549], "has_top": 788, "hasattr": 139, "hash": [156, 199, 200, 243, 694, 741, 781], "hash_kei": 156, "hat": [415, 419, 432, 433, 845, 858, 860, 870], "have": [4, 6, 9, 10, 14, 21, 22, 26, 34, 35, 48, 53, 55, 56, 57, 58, 60, 61, 68, 87, 88, 93, 94, 100, 115, 116, 117, 118, 119, 122, 125, 126, 130, 131, 161, 165, 171, 174, 180, 186, 188, 197, 205, 210, 211, 212, 214, 216, 219, 220, 226, 227, 230, 234, 235, 241, 242, 246, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 295, 296, 298, 299, 300, 305, 310, 312, 319, 322, 332, 340, 341, 344, 345, 346, 349, 350, 358, 359, 363, 391, 393, 394, 410, 423, 426, 428, 434, 435, 436, 437, 441, 443, 447, 448, 462, 482, 546, 547, 563, 564, 566, 568, 569, 570, 571, 572, 580, 581, 600, 603, 604, 605, 622, 632, 636, 640, 641, 646, 647, 649, 695, 697, 699, 700, 701, 702, 703, 704, 706, 708, 711, 714, 716, 718, 720, 722, 724, 725, 727, 728, 732, 734, 736, 738, 793, 796, 805, 826, 829, 834, 835, 836, 837, 840, 841, 842, 843, 844, 845, 846, 847, 851, 854, 855, 859, 860, 861, 864, 865, 867, 871, 874, 876, 877], "hdf": [352, 573, 707], "hdfs\u4e2d\u52a0\u8f7d\u6216\u5411s3": 751, "hdfs\u4fdd\u5b58\u56fe": 751, "hdfs\uc5d0": 792, "he": [95, 96, 117, 559, 560, 561, 563, 649, 657, 711, 714, 755, 758, 796, 799, 864, 867], "head": [9, 400, 407, 408, 411, 413, 414, 423, 445, 446, 450, 452, 453, 454, 455, 456, 457, 459, 460, 691, 728, 812, 847, 862, 872, 874], "head_dim": 826, "head_out": 861, "head_siz": 423, "header": [695, 839, 840, 841], "head\uc758": 812, "heat": [178, 179, 665], "heatkernel": 13, "heavi": 195, "heavili": 714, "height": [189, 190], "height_in": 870, "height_in_i": 870, "height_out": 870, "height_out_i": 870, "held": 164, "help": [161, 295, 322, 647, 710, 711, 736, 838, 842, 860], "henc": [116, 126, 130, 135, 136, 151, 152, 153, 192, 250, 344, 350, 563, 640, 649, 707, 711, 796], "here": [5, 9, 21, 31, 145, 151, 152, 164, 166, 175, 177, 178, 179, 183, 184, 240, 315, 391, 688, 695, 696, 697, 701, 702, 715, 716, 720, 725, 728, 730, 733, 734, 737, 783, 788, 824, 825, 826, 827, 830, 834, 836, 843, 844, 845, 846, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871], "hereaft": 871, "hetergen": [246, 482], "hetero": [305, 310, 317, 702], "hetero_block": [763, 805], "hetero_fronti": [763, 805], "hetero_graph": [733, 734, 737, 738, 773, 774, 777, 778, 817, 818, 820, 821], "heteroclassifi": [736, 776, 819], "heterodotproductpredictor": [734, 737, 774, 777, 818, 820], "heterogen": [1, 4, 7, 13, 26, 27, 28, 31, 34, 35, 36, 37, 38, 42, 47, 51, 53, 54, 65, 66, 72, 75, 77, 79, 82, 93, 94, 95, 96, 100, 101, 102, 108, 113, 114, 115, 116, 117, 140, 214, 216, 219, 220, 221, 222, 223, 224, 225, 240, 242, 246, 289, 295, 299, 303, 307, 312, 314, 322, 323, 338, 339, 340, 341, 345, 346, 390, 391, 392, 393, 395, 407, 410, 411, 413, 414, 415, 418, 421, 423, 428, 433, 434, 435, 482, 546, 559, 560, 561, 569, 580, 581, 640, 641, 646, 647, 648, 649, 655, 656, 657, 662, 663, 672, 673, 676, 677, 699, 702, 703, 705, 706, 713, 729, 731, 785, 790, 791, 802, 807, 813, 815, 838, 839, 864], "heterogenen": [113, 563], "heterogeneous_graph_nc_lp": 840, "heterograph": [1, 4, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 122, 125, 126, 130, 220, 246, 247, 341, 345, 346, 358, 363, 391, 393, 407, 408, 410, 411, 413, 414, 418, 421, 424, 427, 433, 434, 435, 482, 483, 546, 559, 560, 561, 563, 564, 567, 568, 569, 570, 640, 641, 646, 647, 648, 649, 655, 656, 657, 662, 672, 673, 677, 687, 695, 716, 721, 732, 733, 737, 738, 755, 763, 773, 777, 778, 796, 805, 816, 817, 820, 821, 867, 870], "heterographconv": [434, 720, 723, 725, 736, 738, 764, 766, 768, 772, 776, 778, 806, 809, 811, 819, 821], "heterogrph": [91, 92], "heteroitemset": [293, 295, 303, 306, 311, 316, 719, 720, 725, 840], "heteromlppredictor": [734, 774, 818], "heterophili": [120, 137, 171, 180, 182, 188, 245, 481], "heterophilousgraphdataset": [137, 171, 180, 182, 188], "hexadecim": [199, 200], "hg": [51, 55, 60, 61, 77, 87, 88, 90, 101, 102, 107, 363, 433, 434, 435, 436, 646, 647, 711, 719, 736, 755, 776, 788, 796, 819], "hg1": [36, 37, 38, 122, 687], "hg2": [36, 37, 38, 122, 687], "hg_2": 646, "hhhiddleston": 756, "hid_feat": [434, 736, 738, 776, 778, 819, 821], "hid_siz": [727, 728], "hidden": [168, 398, 409, 430, 445, 446, 453, 691, 718, 730, 734, 738, 804, 814, 818, 859, 860, 861, 864, 871], "hidden_d": 430, "hidden_dim": [434, 437, 736, 776, 819, 827, 861], "hidden_feat": [398, 720, 725, 764, 766, 768, 806, 809, 811], "hidden_featur": [720, 725, 734, 737, 763, 764, 765, 766, 768, 774, 777, 805, 806, 808, 809, 811, 818, 820], "hidden_s": [168, 409, 453, 691, 722, 723, 824, 825, 826, 834, 835, 877], "hidden_x": [722, 723, 727, 834, 835, 877], "hide": [305, 310], "hierarch": 183, "high": [240, 245, 292, 435, 437, 459, 460, 481, 573, 700, 714, 715, 786, 823, 830, 833, 861, 870, 871], "high2low": [435, 437], "higher": [9, 214, 305, 432, 433, 434, 435, 436, 437, 737, 860, 861, 870, 872, 874], "highest": [178, 179, 861], "highli": [401, 402, 692, 822, 830, 833, 851, 854, 859], "highlight": [697, 727, 824, 825, 826, 827, 835, 860, 871, 877], "hing": 809, "hint": [716, 802], "histogram": [861, 870], "histor": 159, "hold": [6, 36, 37, 125, 182, 210, 217, 248, 249, 299, 304, 447, 656, 657, 677, 703, 711, 732, 844], "holist": 11, "home": [23, 139, 702, 788, 834, 837, 840, 841, 847, 854, 860, 864, 867, 870], "homebrew": 823, "homegen": [787, 819], "homo": [178, 179, 405, 406], "homogen": [1, 4, 6, 7, 9, 26, 27, 28, 34, 35, 36, 37, 38, 42, 47, 48, 53, 54, 55, 57, 60, 61, 65, 66, 75, 77, 79, 82, 87, 88, 90, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 122, 138, 139, 209, 210, 214, 215, 216, 219, 220, 222, 223, 224, 225, 240, 241, 246, 289, 297, 299, 307, 311, 312, 314, 322, 323, 338, 339, 341, 343, 345, 346, 347, 348, 349, 350, 358, 395, 407, 408, 410, 411, 413, 414, 415, 418, 421, 424, 427, 428, 432, 436, 437, 482, 546, 553, 556, 559, 560, 561, 562, 563, 564, 566, 568, 571, 576, 639, 641, 642, 646, 647, 648, 649, 656, 657, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 676, 677, 695, 701, 702, 703, 706, 720, 723, 725, 731, 734, 736, 737, 738, 787, 788, 791, 796, 805, 806, 809, 811, 815, 818, 819, 820, 821, 838, 839, 840], "homogeneous_graph_nc_lp": 841, "homogeneous\uc5ec\uc57c": 810, "homograph": [41, 56, 695], "homophil": [162, 351, 480], "homophili": [13, 120, 244, 245, 351, 480, 481], "hood": [699, 702, 858, 876], "hook": [432, 433, 434, 435, 436, 437], "hop": [219, 240, 305, 310, 344, 345, 346, 359, 428, 429, 432, 433, 434, 436, 547, 666, 825, 836, 860, 861], "hop2j_list": 860, "host": [1, 2, 5], "hostil": 166, "hot": [165, 168, 171, 463, 843, 867], "hotel": 163, "hour": 166, "hous": [141, 142, 143], "how": [4, 9, 11, 21, 139, 162, 165, 220, 245, 305, 310, 405, 408, 414, 416, 421, 442, 444, 449, 481, 564, 565, 580, 581, 649, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 706, 713, 715, 718, 722, 724, 725, 727, 728, 729, 730, 733, 734, 738, 763, 805, 811, 823, 824, 825, 826, 827, 832, 833, 834, 835, 836, 838, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 851, 854, 858, 859, 860, 861, 862, 867, 870, 872, 874, 876, 877], "howev": [4, 9, 21, 22, 171, 236, 295, 305, 310, 317, 318, 701, 703, 706, 710, 722, 731, 823, 835, 836, 845, 846, 850, 854, 860, 861, 864, 867, 871], "html": [9, 21, 145, 184, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 851], "http": [9, 21, 23, 133, 134, 135, 136, 137, 144, 145, 146, 147, 151, 152, 153, 159, 161, 162, 163, 165, 167, 168, 169, 171, 173, 174, 175, 177, 180, 181, 182, 184, 186, 188, 195, 210, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 436, 437, 452, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 564, 688, 697, 702, 727, 743, 756, 775, 783, 788, 823, 824, 825, 826, 827, 829, 830, 834, 835, 837, 840, 841, 847, 850, 851, 854, 867, 871], "hu": [714, 758, 799, 867], "huaiwen": 756, "huang": [756, 858, 860], "huge": 728, "hugectr": 210, "human": 861, "hundr": [703, 822], "hurt": 861, "hv": [96, 116, 117, 560, 563, 649, 711, 714, 755, 758, 796, 799, 867], "hv_init": 867, "hv_old": 867, "hx": [728, 812], "hy": [728, 812], "hyper": [4, 430, 861, 864], "hypercub": 172, "hyperedg": 827, "hyperedge_degre": 827, "hypergraph": 828, "hyperlink": [155, 187, 192, 193, 301, 304, 307], "hyperparamet": [192, 415, 435, 437, 564, 737, 861], "hyperthread": 851, "h\u662f\u4ece5": [774, 777], "h\u73b0\u5728\u662f\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u5f20\u91cf\u5bf9": 767, "i": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 200, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 332, 334, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 360, 362, 363, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 480, 481, 482, 483, 485, 487, 490, 492, 505, 506, 507, 508, 511, 513, 517, 519, 525, 527, 531, 533, 546, 547, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 578, 579, 580, 581, 586, 589, 590, 600, 603, 604, 605, 606, 607, 614, 616, 618, 619, 620, 622, 625, 626, 628, 632, 639, 640, 641, 643, 644, 645, 647, 649, 651, 652, 653, 655, 656, 657, 664, 665, 667, 668, 670, 673, 674, 675, 679, 680, 681, 682, 684, 685, 686, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 733, 734, 735, 736, 737, 738, 741, 742, 754, 755, 758, 763, 771, 772, 777, 781, 782, 783, 787, 788, 791, 794, 795, 796, 799, 800, 805, 808, 810, 815, 816, 819, 820, 822, 823, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 861, 864, 865, 867, 868, 870, 871, 872, 874, 876, 877], "i2h": 859, "i64": [702, 788], "i_": 423, "i_1": [116, 563], "i_2": 563, "i_j": 864, "i_n": 116, "ic": 871, "icew": 166, "icews18": [25, 166], "icon": 825, "id": [0, 4, 6, 13, 20, 26, 27, 32, 34, 35, 39, 44, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 77, 78, 87, 88, 90, 92, 93, 94, 95, 96, 100, 104, 107, 114, 115, 122, 123, 124, 125, 126, 130, 131, 133, 138, 140, 144, 184, 197, 205, 209, 220, 221, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 249, 250, 287, 290, 294, 295, 296, 298, 299, 300, 303, 307, 311, 312, 319, 322, 323, 328, 330, 333, 338, 339, 340, 341, 345, 346, 347, 359, 360, 361, 363, 389, 390, 393, 432, 433, 434, 435, 436, 438, 439, 440, 457, 482, 546, 547, 553, 554, 555, 559, 560, 562, 566, 567, 568, 569, 570, 571, 572, 575, 576, 577, 580, 581, 641, 646, 647, 648, 649, 653, 681, 686, 689, 695, 697, 699, 702, 710, 711, 717, 719, 720, 725, 727, 787, 795, 796, 805, 806, 809, 811, 827, 837, 840, 841, 843, 847, 859, 864, 871, 876], "id2etyp": 701, "id2ntyp": 701, "id_": 221, "id_tensor": 4, "idconvert": 701, "idea": [21, 22, 736, 737, 829, 845, 864, 871, 872, 874], "ideal": 861, "ident": [116, 220, 299, 403, 415, 425, 569, 641, 656, 663, 699, 720, 737, 824, 825, 827, 829, 834, 835, 877], "identifi": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 241, 247, 432, 433, 435, 437, 461, 484, 557, 559, 561, 578, 700, 701, 731, 734, 736], "idf": 161, "idna": [834, 835, 837, 840, 841], "ids_devic": [290, 294, 296, 300, 319], "idtyp": [4, 54, 64, 71, 125, 126, 131, 249, 250, 287, 340, 554, 555, 710, 721, 754, 795], "idx": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 693, 697, 698, 740, 743, 744, 780, 783, 784, 826], "idx_b": 505, "idx_list": 352, "id\uac00": 788, "id\uac12\ub4e4\uc744": 787, "id\uac12\ub4e4\uc774": 783, "id\uac12\uc744": 788, "id\ub294": [787, 788, 796, 805], "id\ub4e4\uacfc": 787, "id\ub4e4\ub85c": 787, "id\ub4e4\uc5d0": 795, "id\ub4e4\uc640": 805, "id\ub4e4\uc740": [788, 796], "id\ub4e4\uc744": [787, 788], "id\ub4e4\uc758": [806, 809, 811], "id\ub77c\uace0": 795, "id\ub85c": [787, 795], "id\ub97c": [787, 788, 795, 796, 803, 806], "id\ub9cc\uc744": 788, "id\uc5d0": 788, "id\uc640": [787, 788, 806], "id\uc758": [787, 788, 795], "id\uc774\ub2e4": 788, "ie": 164, "ignor": [116, 133, 144, 200, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 432, 433, 434, 435, 436, 437, 695], "ignore_bipartit": 116, "ii": [415, 429], "ij": [363, 395, 397, 405, 407, 408, 409, 413, 414, 415, 418, 419, 420, 424, 429, 758, 799, 827, 829, 861, 870, 871], "ik": 861, "illustr": [701, 703, 710, 721, 824, 825, 826, 827, 840, 854, 855, 860, 871], "imag": [146, 160, 169, 830, 843, 846], "imaginari": 826, "imbal": [162, 703], "imdb": 186, "imdbbinari": [165, 876], "imdbmulti": 165, "immedi": [22, 41, 566, 861], "immunolog": 861, "impact": [14, 565], "impl": [834, 837, 840, 841], "implement": [0, 4, 6, 7, 9, 10, 14, 21, 22, 23, 197, 291, 294, 302, 305, 315, 317, 397, 421, 438, 439, 450, 461, 485, 487, 490, 492, 511, 513, 517, 519, 525, 527, 531, 533, 562, 659, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 703, 713, 714, 715, 718, 720, 725, 726, 727, 731, 736, 738, 811, 822, 824, 825, 829, 833, 835, 842, 844, 847, 854, 861, 862, 864, 872, 874, 877], "impli": 859, "implicit": [89, 737, 777, 820, 829], "implicitli": [27, 114, 305, 310, 317, 318, 834, 837, 840, 841, 867], "import": [4, 5, 6, 9, 20, 21, 22, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 120, 122, 125, 126, 128, 129, 131, 137, 138, 141, 142, 143, 146, 147, 149, 155, 160, 169, 171, 173, 174, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 204, 214, 217, 218, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 310, 312, 319, 320, 321, 323, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 357, 363, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 480, 481, 482, 483, 484, 509, 546, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 569, 573, 575, 576, 577, 578, 579, 580, 581, 616, 639, 640, 642, 646, 647, 648, 649, 651, 652, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 707, 708, 709, 710, 711, 714, 715, 716, 719, 720, 724, 725, 728, 730, 731, 732, 733, 734, 735, 736, 738, 740, 741, 742, 743, 744, 745, 746, 751, 752, 753, 754, 755, 758, 759, 760, 763, 767, 768, 770, 771, 772, 773, 774, 775, 776, 778, 780, 781, 782, 783, 784, 785, 786, 787, 792, 793, 794, 795, 796, 799, 800, 801, 802, 805, 810, 811, 812, 814, 815, 816, 817, 818, 819, 821, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876], "importance_sampl": [214, 569], "importerror": [824, 825, 826, 827, 829, 834, 835, 837, 840, 841], "imposs": [571, 834], "impress": 861, "improv": [4, 10, 21, 664, 697, 728, 832, 851, 852, 853, 854, 859, 864, 867, 868, 871, 874], "in_": [398, 407, 408, 411, 413, 414, 418, 421, 427], "in_degre": [4, 87, 89, 451, 689, 691, 709, 731, 753, 766, 771, 794, 809, 815, 843, 860], "in_dim": [433, 435, 437, 734, 736, 774, 776, 818, 819, 861], "in_dir": 703, "in_edg": [88, 709, 753, 794, 860], "in_edge_feat": 408, "in_feat": [392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 417, 418, 420, 421, 424, 426, 427, 428, 429, 432, 434, 436, 449, 458, 462, 699, 720, 724, 725, 727, 728, 730, 736, 738, 745, 764, 766, 767, 768, 770, 776, 778, 785, 806, 809, 810, 811, 812, 814, 819, 821, 837, 842, 844, 845, 846, 854, 855, 858, 859, 860], "in_feat_nam": 674, "in_feats\u662f\u8f93\u5165\u7279\u5f81\u7684\u7ef4\u5ea6": 778, "in_featur": [720, 725, 734, 737, 763, 764, 765, 766, 768, 774, 777, 805, 806, 808, 809, 811, 818, 820, 858, 864], "in_indx": 870, "in_memori": [311, 320, 839, 840, 841], "in_nod": 870, "in_node_feat": 408, "in_siz": [392, 394, 403, 409, 423, 425, 722, 723, 727, 728, 824, 825, 827, 829, 834, 835, 837, 877], "in_subgraph": [299, 302, 345, 546, 721, 763, 805], "in_test_mask": [197, 205], "in_train_mask": [197, 205], "in_valid_mask": [197, 205], "inbound": [214, 216, 219, 234, 241, 242, 299, 302, 341, 569, 570, 571, 572, 641, 805], "inc": 63, "incept": [674, 825], "incid": [13, 62, 63, 220, 245, 246, 247, 481, 703, 713, 720, 734, 798, 806, 827, 834, 845, 860], "includ": [4, 21, 22, 48, 62, 63, 132, 133, 138, 139, 144, 157, 158, 161, 162, 163, 170, 179, 191, 197, 205, 214, 216, 219, 230, 236, 240, 289, 311, 316, 323, 345, 346, 401, 410, 419, 426, 438, 440, 549, 564, 641, 695, 699, 702, 703, 706, 707, 714, 717, 726, 730, 731, 732, 734, 736, 737, 827, 836, 839, 840, 841, 845, 850, 851, 861, 864, 867, 871], "include_dst_in_src": 641, "include_original_edge_id": [311, 329], "include_reverse_edg": [327, 720, 834], "inclus": [21, 207], "incom": [20, 61, 100, 117, 214, 216, 299, 341, 359, 363, 411, 485, 486, 487, 488, 490, 491, 492, 493, 511, 512, 513, 514, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 657, 713, 805, 844, 859, 861, 864, 871], "incomplet": [4, 210, 213, 694, 741, 781, 835], "inconsist": [162, 397], "incorpor": [173, 738], "increas": [294, 311, 319, 320, 415, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 565, 699, 830, 850], "increment": [568, 683, 867, 871], "incur": [246, 247, 341, 345, 346, 482, 483, 546, 726], "inde": [22, 641, 646], "indent": 788, "independ": [120, 578, 579, 651, 652, 711], "index": [4, 6, 21, 22, 95, 96, 108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 287, 289, 290, 294, 296, 298, 300, 303, 304, 305, 307, 312, 319, 321, 332, 340, 397, 415, 587, 588, 651, 652, 693, 697, 700, 703, 709, 727, 731, 743, 753, 780, 783, 794, 829, 834, 835, 837, 839, 840, 841, 854, 859, 871], "indexes_follow": 303, "indexes_lik": 303, "indic": [4, 6, 9, 12, 30, 31, 32, 53, 54, 62, 63, 101, 102, 131, 135, 136, 139, 140, 142, 143, 145, 146, 149, 151, 152, 169, 171, 180, 183, 185, 189, 190, 196, 209, 210, 213, 218, 220, 232, 239, 240, 241, 246, 287, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 307, 310, 312, 313, 314, 317, 318, 319, 321, 323, 330, 332, 338, 339, 340, 349, 352, 359, 360, 404, 450, 452, 453, 463, 482, 505, 547, 564, 565, 567, 568, 583, 584, 585, 586, 587, 588, 589, 591, 593, 594, 596, 597, 598, 600, 601, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 641, 649, 689, 697, 700, 702, 703, 706, 710, 711, 714, 725, 727, 732, 735, 738, 778, 821, 824, 825, 826, 827, 829, 834, 836, 837, 840, 841, 842, 847, 854, 858, 859, 860, 861, 864, 867], "indices1": [622, 634], "indices2": [622, 634], "indirectli": 707, "individu": [121, 122, 166, 299, 399, 444, 569, 703, 867], "indptr": [32, 299, 302, 305, 310, 312, 313, 321, 323, 328, 333, 339, 587, 588, 619, 620, 829, 834, 837], "induc": [26, 134, 197, 209, 217, 219, 234, 246, 247, 299, 302, 305, 310, 317, 318, 341, 345, 346, 432, 433, 434, 436, 446, 482, 483, 546, 570, 571, 572, 641, 720, 843, 864, 871], "induced_dst": 641, "induced_src": 641, "induct": [160, 175, 194, 217, 402, 406, 427, 727, 861], "industri": 162, "ineffici": [14, 736], "inf": 452, "infeas": 722, "infer": [4, 131, 287, 291, 340, 463, 616, 618, 619, 620, 632, 646, 699, 703, 710, 718, 728, 765, 795, 808, 829, 851, 864, 867, 871], "inferenc": 851, "infin": [485, 487, 490, 492, 511, 513, 517, 519, 525, 527, 531, 533], "infinitesim": 403, "influenc": 134, "info": [203, 206], "info_path": [698, 744, 784], "inform": [4, 13, 22, 27, 28, 59, 95, 96, 101, 102, 114, 115, 116, 117, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 206, 220, 236, 237, 240, 245, 246, 247, 249, 250, 287, 293, 302, 305, 310, 316, 317, 318, 340, 341, 344, 350, 358, 397, 432, 433, 436, 461, 481, 482, 483, 546, 554, 555, 559, 560, 561, 563, 640, 647, 649, 650, 687, 688, 691, 693, 695, 697, 698, 700, 701, 702, 703, 710, 711, 719, 735, 736, 738, 780, 784, 823, 835, 839, 842, 844, 845, 846, 854, 859, 860, 861, 864, 867, 871, 877], "informat": 859, "infti": 430, "inher": [865, 874], "inherit": [312, 659, 693, 694, 700, 723, 729, 842, 847], "init": [4, 10, 390, 431, 434, 436, 461, 727, 730, 770, 814, 823, 826, 859, 861, 867, 870, 871], "init_att": 431, "init_beta": 395, "init_ep": [416, 417], "init_func": [4, 10, 461, 700, 746, 786], "init_graph": 870, "init_method": [835, 876, 877], "init_model": 876, "init_node_activ": 867, "init_process_group": [235, 699, 700, 745, 746, 785, 786, 835, 850, 854, 855, 876, 877], "init_tmp": [434, 436], "initi": [10, 13, 27, 28, 70, 118, 119, 128, 129, 168, 197, 205, 207, 294, 295, 311, 319, 363, 397, 406, 411, 413, 414, 415, 416, 417, 418, 420, 421, 424, 427, 428, 429, 430, 434, 436, 437, 450, 459, 460, 461, 463, 557, 558, 573, 578, 579, 651, 652, 664, 665, 670, 699, 701, 730, 745, 746, 748, 785, 786, 789, 825, 833, 834, 835, 837, 850, 858, 859, 860, 864, 867, 877], "initialize_hv": 867, "inner": [231, 722, 737, 808, 820, 860], "inner_edg": [240, 702, 703], "inner_nod": [240, 702, 703, 788], "innermost": [310, 317, 318], "innov": 860, "inp_dropout": 430, "inplac": [21, 27, 28, 70, 89, 112, 357, 823, 864], "input": [4, 5, 6, 9, 20, 21, 34, 53, 56, 57, 58, 60, 73, 87, 100, 109, 110, 116, 118, 119, 121, 122, 126, 130, 131, 132, 133, 135, 136, 138, 140, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 210, 214, 216, 220, 222, 223, 224, 225, 232, 234, 239, 240, 241, 243, 246, 247, 248, 249, 250, 287, 295, 299, 302, 303, 307, 312, 315, 323, 332, 334, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 357, 358, 359, 360, 363, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 458, 459, 460, 463, 464, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 556, 557, 558, 559, 562, 563, 569, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 600, 603, 604, 605, 606, 607, 614, 626, 640, 642, 646, 647, 648, 649, 650, 651, 652, 655, 656, 663, 664, 665, 668, 670, 674, 687, 691, 693, 700, 701, 703, 710, 714, 718, 719, 720, 723, 724, 725, 730, 731, 732, 734, 735, 736, 738, 772, 776, 778, 780, 787, 788, 808, 810, 815, 816, 819, 821, 825, 826, 829, 833, 834, 835, 836, 837, 844, 846, 850, 854, 855, 858, 859, 860, 861, 864, 867, 871, 876, 877], "input_": [731, 771, 815], "input_d": 430, "input_dict": 826, "input_dim": [433, 434, 435, 444], "input_dir": 788, "input_dst": [731, 771, 815], "input_feat": 419, "input_featur": [719, 725, 763, 764, 766, 768, 805, 806, 809, 811, 859], "input_id": [184, 390], "input_nod": [210, 214, 215, 216, 219, 220, 303, 307, 719, 722, 763, 764, 765, 766, 768, 805, 806, 808, 809, 811, 834, 837, 854, 855], "input_s": 876, "inputs\u662f\u8282\u70b9\u7684\u7279\u5f81": 776, "ins": 714, "insert": [302, 315, 700, 719, 727, 746, 786, 837], "insert_revers": [132, 133, 144, 170], "insid": [21, 201, 297, 299, 307, 312, 323, 338, 339, 410, 418, 430, 464, 703, 736], "insight": [858, 859, 860, 861, 864, 867, 870, 871], "inspect": [702, 703, 862, 864, 874], "inspir": [171, 430, 825, 844], "instal": [21, 400, 401, 402, 696, 742, 782, 788, 824, 825, 826, 827, 829, 851, 854], "instanc": [14, 20, 133, 144, 156, 162, 165, 168, 172, 186, 209, 290, 292, 300, 301, 312, 391, 432, 433, 434, 435, 436, 437, 703, 706, 714, 720, 724, 725, 734, 738, 827, 836, 843, 845, 846, 851, 860, 871, 876], "instanti": [31, 73, 91, 92, 247, 316, 483, 678, 679, 680, 681, 682, 683, 684, 685, 686], "instead": [4, 9, 21, 48, 57, 80, 116, 118, 168, 177, 178, 179, 186, 214, 216, 219, 221, 305, 317, 349, 432, 433, 434, 435, 436, 437, 446, 569, 570, 571, 572, 651, 652, 656, 700, 707, 711, 720, 722, 724, 736, 810, 827, 835, 836, 846, 860, 861, 867, 870, 872, 874, 877], "institut": [703, 788, 859], "instruct": [21, 702, 823, 854], "instructon": 728, "instrument": 161, "insubgraph_sampl": 302, "int": [4, 6, 22, 27, 28, 34, 35, 38, 48, 53, 54, 55, 57, 58, 59, 60, 61, 71, 79, 80, 81, 82, 87, 88, 90, 93, 94, 95, 96, 100, 107, 114, 115, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 287, 290, 292, 294, 295, 296, 298, 299, 300, 303, 304, 305, 307, 309, 310, 314, 317, 318, 319, 321, 324, 328, 330, 331, 333, 337, 340, 341, 343, 344, 345, 346, 347, 348, 352, 359, 360, 361, 362, 389, 390, 392, 393, 394, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 482, 546, 547, 554, 555, 556, 559, 560, 564, 565, 566, 568, 569, 570, 571, 572, 574, 575, 576, 577, 599, 600, 602, 603, 604, 605, 606, 607, 616, 618, 619, 620, 621, 626, 632, 639, 647, 651, 652, 657, 664, 665, 666, 667, 670, 671, 674, 675, 678, 683, 695, 697, 708, 710, 727, 728, 738, 743, 754, 778, 783, 788, 793, 795, 812, 821, 839, 840, 841, 844, 845, 846, 847, 864, 867], "int16": [147, 174], "int32": [4, 59, 64, 71, 118, 119, 125, 126, 131, 249, 250, 287, 304, 312, 340, 401, 554, 555, 567, 572, 580, 581, 596, 609, 702, 703, 708, 710, 752, 754, 793, 795, 829, 834, 837, 840, 841], "int64": [4, 31, 59, 64, 71, 125, 126, 131, 138, 147, 165, 168, 174, 184, 186, 195, 219, 246, 249, 250, 287, 299, 340, 341, 345, 346, 482, 546, 554, 555, 567, 569, 646, 660, 661, 695, 702, 703, 710, 754, 788, 795, 843, 846, 847], "int8": [702, 703, 847], "integ": [22, 32, 39, 52, 78, 95, 96, 122, 125, 131, 138, 140, 142, 143, 189, 190, 200, 207, 210, 214, 216, 219, 240, 241, 249, 287, 299, 304, 307, 314, 317, 318, 330, 340, 394, 401, 409, 423, 426, 440, 505, 508, 562, 571, 580, 581, 646, 647, 695, 701, 702, 703, 708, 710, 711, 793, 823, 843, 876], "integr": [166, 702, 729, 735, 833, 872, 874], "intel": 728, "inter": [860, 868, 874], "interact": [52, 166, 175, 178, 398, 569, 570, 699, 706, 711, 755, 796, 847], "interaction_cutoff": 397, "interatom": 178, "interest": [695, 699, 867, 871], "interfac": [4, 6, 20, 165, 236, 506, 507, 700, 701, 705, 708, 711, 716, 725, 843, 871], "intermedi": [310, 317, 318, 434, 436, 676, 714, 718, 858], "intermediari": 861, "intern": [1, 4, 20, 22, 39, 52, 78, 126, 131, 178, 179, 249, 250, 287, 340, 390, 570, 571, 580, 581, 700, 701, 707, 710, 714, 732, 816, 826, 840, 841, 847, 860], "interpol": [299, 566], "intersect": [56, 197, 205], "interv": [825, 867, 870], "intimid": 860, "intra": [174, 860, 868, 874], "intra_src": 860, "introduc": [22, 77, 134, 158, 173, 191, 243, 348, 401, 403, 417, 422, 450, 451, 452, 453, 454, 455, 456, 457, 556, 639, 647, 664, 665, 667, 670, 671, 675, 689, 690, 692, 696, 705, 711, 713, 721, 722, 729, 733, 736, 825, 833, 834, 854, 860, 864, 871], "introduct": [705, 822, 844, 845, 846, 858], "introductori": 842, "inttensor": [571, 580, 581], "intuit": [22, 245, 481, 829, 876], "inv": 829, "inv_sigma": 418, "inv_vocab": 864, "invalid": [5, 173, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 450, 452, 453, 689, 701, 731, 858, 861], "invari": [445, 446], "invent": 844, "invers": [157, 827], "inverse_indic": [345, 346, 434, 436], "invert": [322, 864], "investig": 162, "invoc": [290, 294, 296, 300, 319], "invok": [4, 20, 22, 27, 34, 73, 93, 94, 100, 113, 114, 117, 126, 131, 156, 216, 235, 249, 250, 287, 340, 361, 391, 700, 701, 702, 703, 704, 711, 714, 728, 842, 854, 855, 876], "involv": [4, 21, 305, 307, 310, 317, 318, 322, 709, 719, 722, 723, 734, 736, 737, 738, 847, 858, 861, 876], "io": [162, 168, 186, 697, 743, 756, 783, 835], "io_ur": 294, "iostream": 22, "iou": 864, "ip": [703, 704, 789, 854, 855], "ip_addr1": [854, 855], "ip_addr2": [854, 855], "ip_addr3": 854, "ip_addr4": 854, "ip_config": [235, 699, 700, 703, 704, 745, 746, 748, 785, 786, 789, 854, 855], "ipynb": [842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "ipython": 825, "ip\u5730\u5740\u540e\u9762\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u7aef\u53e3": 748, "ip\u914d\u7f6e\u6587\u4ef6": 748, "irrespect": 871, "is_avail": [720, 725, 825, 835, 871, 876, 877], "is_bf16_support": 728, "is_block": [724, 731, 732, 767, 771, 772, 810, 815, 816], "is_cuda": 332, "is_gdata": 4, "is_homogen": 329, "is_input_lay": 859, "is_last_lay": [722, 723, 834, 835, 877], "is_libxsmm_en": 688, "is_pin": [89, 290, 307, 312, 319, 320], "is_tempor": [145, 164, 166], "is_train": [835, 871, 877], "is_unibipartit": [44, 45, 79, 82, 104, 105], "is_valid": 867, "isab": 446, "isinst": [724, 727, 731, 732, 767, 771, 772, 810, 815, 816], "isn": 707, "isol": [130, 150, 246, 341, 345, 346, 546, 559, 710, 795, 805], "isomorph": [416, 417, 876], "isotrop": [178, 179], "issu": [21, 126, 131, 168, 249, 250, 287, 340, 694, 728, 741, 781, 834, 836, 837, 840, 841], "item": [4, 7, 22, 132, 133, 135, 136, 144, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 175, 176, 177, 178, 179, 181, 183, 191, 192, 194, 196, 220, 222, 223, 224, 225, 295, 301, 303, 304, 307, 325, 326, 349, 391, 434, 567, 568, 695, 697, 705, 706, 719, 720, 721, 723, 726, 727, 728, 731, 732, 733, 734, 736, 737, 738, 743, 766, 771, 772, 773, 774, 776, 777, 778, 783, 790, 809, 812, 815, 816, 817, 818, 819, 820, 821, 826, 833, 834, 835, 837, 840, 841, 845, 846, 858, 859, 860, 861, 864, 867, 876, 877], "item_feat": [734, 737, 738, 774, 777, 778, 818, 820, 821], "item_id": 840, "item_sampl": [295, 302, 303, 305, 321], "item_set": [295, 301, 302, 303, 304, 305, 310, 321, 719, 835, 877], "itemsampl": [295, 302, 305, 310, 321, 719, 720, 722, 723, 725, 726, 727, 834, 835, 837, 877], "itemset": [293, 295, 301, 302, 303, 305, 306, 310, 311, 316, 321, 719, 720, 723, 725, 726, 835, 837, 840, 841, 877], "item\uc744": 818, "iter": [0, 3, 4, 6, 7, 34, 35, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 92, 93, 94, 100, 114, 131, 165, 168, 172, 177, 178, 179, 186, 209, 210, 211, 212, 213, 220, 246, 287, 292, 295, 303, 305, 310, 317, 340, 341, 345, 346, 396, 430, 434, 436, 440, 444, 482, 546, 559, 560, 648, 691, 697, 710, 718, 720, 722, 723, 725, 726, 736, 768, 795, 805, 806, 808, 811, 825, 834, 837, 846, 867, 870], "iterabledatapip": 726, "iterate\ud558\uace0": [809, 811], "iterate\ud558\ub294": [808, 809, 811], "iterate\ud558\uba74\uc11c": [805, 819], "iterate\ud55c\ub2e4": [805, 819], "iterate\ud574\uc11c": 806, "iterating\ud558\ub294": 811, "iteration\ub9c8\ub2e4": 811, "iteration\uc744": 783, "iterator\ub294": 811, "iterator\ub97c": 811, "iterdatapip": [291, 303], "iterrow": 847, "itertool": 845, "ith": [196, 207], "its": [1, 4, 6, 10, 14, 22, 26, 45, 47, 68, 75, 79, 82, 105, 109, 138, 141, 146, 164, 165, 167, 168, 169, 172, 173, 182, 186, 209, 217, 245, 290, 294, 296, 299, 300, 305, 310, 312, 319, 320, 323, 347, 363, 391, 415, 418, 421, 427, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 481, 569, 571, 575, 578, 579, 580, 581, 646, 647, 655, 676, 700, 701, 702, 703, 705, 710, 713, 719, 725, 728, 733, 734, 735, 736, 738, 825, 827, 829, 830, 836, 842, 846, 847, 854, 855, 858, 860, 861, 864, 867, 870, 871, 876], "itself": [21, 210, 438, 440, 556, 566, 568, 571, 576, 734, 827, 850, 858, 860, 871], "j": [4, 10, 21, 126, 250, 347, 363, 389, 393, 397, 398, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 424, 425, 426, 427, 429, 438, 440, 457, 568, 576, 580, 581, 640, 656, 714, 758, 799, 827, 829, 859, 860, 861, 864, 870, 871], "j4": 823, "j_1": [116, 563], "j_2": 563, "j_n": 116, "jake": [864, 870], "jean": 864, "ji": [412, 416, 421, 427, 714, 871], "jinj": [870, 871], "jinja2": [834, 835, 837, 840, 841], "jinyang": 870, "jk": [412, 864], "jl": 864, "job": [21, 231, 703, 704, 876], "join": [142, 156, 295, 433, 435, 694, 698, 699, 703, 741, 744, 781, 784, 822, 835, 840, 841, 854, 877], "joint": 867, "json": [4, 231, 240, 699, 700, 701, 702, 703, 704, 711, 745, 746, 747, 748, 785, 786, 787, 788, 789, 823, 854], "json\u4e2d\u7684\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 747, "json\u6587\u4ef6\u5305\u542b\u6240\u6709\u5212\u5206\u7684\u914d\u7f6e": 747, "json\u7684json\u6587\u4ef6": 747, "json\uacfc": 796, "judici": [862, 874], "jump": [462, 861], "jupyt": [700, 786, 828, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "jure": 844, "just": [21, 22, 45, 79, 82, 105, 235, 691, 701, 703, 711, 723, 736, 738, 837, 840, 841, 846, 854, 855, 861], "k": [14, 21, 120, 121, 122, 178, 179, 183, 209, 219, 221, 222, 223, 224, 225, 226, 227, 343, 344, 345, 346, 347, 348, 351, 359, 360, 396, 397, 399, 403, 404, 412, 418, 423, 428, 429, 432, 433, 434, 436, 438, 440, 441, 442, 443, 445, 447, 448, 450, 454, 457, 463, 556, 562, 572, 575, 614, 615, 622, 639, 651, 652, 666, 667, 671, 674, 675, 723, 731, 732, 736, 737, 738, 766, 771, 772, 776, 777, 778, 809, 815, 816, 819, 820, 821, 826, 829, 844, 845, 860, 861, 864, 867, 870, 871], "k_i": 871, "k_j": 871, "k_proj": 826, "kai": 864, "kappa": 305, "karat": [167, 707, 751, 792, 825, 847], "karate_club": 847, "karateclub": 25, "karateclubdata": [697, 743, 783], "karateclubdataset": [825, 847], "karlsruh": 132, "karypislab": [702, 788], "kd": [14, 347, 438, 440, 575], "kdd": [151, 152], "kde": 870, "keep": [6, 22, 139, 140, 186, 234, 305, 317, 358, 403, 562, 655, 715, 726, 860, 864], "keep_orig_edg": 655, "keepdim": [728, 812, 867, 870, 871], "kei": [22, 26, 27, 28, 73, 108, 114, 115, 121, 122, 131, 148, 178, 179, 205, 210, 213, 221, 223, 240, 241, 242, 246, 288, 293, 297, 298, 299, 301, 307, 312, 323, 338, 339, 340, 341, 345, 346, 359, 390, 391, 392, 433, 434, 435, 482, 546, 547, 562, 573, 689, 695, 696, 697, 703, 716, 720, 725, 732, 742, 782, 826, 847, 854, 861, 864, 865, 867, 871, 872, 874], "kept": 130, "kera": [729, 813], "kernel": [5, 9, 34, 73, 93, 94, 100, 113, 168, 186, 397, 418, 445, 446, 457, 507, 511, 512, 513, 514, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 665, 728, 822, 830, 854, 858], "kevin": 756, "keyerror": [730, 731, 770, 771, 814, 815], "keyword": [121, 134, 151, 152, 240, 315], "kg": [438, 440], "kgdata": [697, 743, 783], "khop_in_subgraph": 346, "khop_out_subgraph": 345, "khopgraph": 13, "ki": [412, 871], "kick": [824, 825, 826], "kind": [126, 210, 250, 316, 696, 861], "kipf": [824, 831, 842, 858], "kit": 851, "kl": 864, "knn": [347, 575], "knn_g": [347, 575], "knn_graph": [14, 575], "know": [21, 245, 481, 720, 737, 844, 847, 859, 877], "knowledg": [13, 21, 164, 166, 245, 460, 462, 481, 845, 859, 876], "knowledgegraphdataset": [157, 158, 191, 697, 743, 783], "known": [195, 463, 707, 864, 871], "known_host": 854, "konect": 167, "kv": 871, "kvstore": 4, "kwarg": [108, 121, 138, 139, 140, 210, 211, 212, 213, 215, 240, 315, 336, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 432, 433, 434, 435, 436, 437, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 763, 805], "l": [243, 350, 394, 395, 396, 398, 399, 402, 403, 404, 405, 406, 407, 409, 410, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 425, 426, 427, 432, 433, 434, 436, 437, 455, 463, 576, 614, 615, 622, 625, 633, 634, 668, 674, 718, 728, 731, 732, 737, 762, 763, 765, 771, 772, 777, 804, 805, 808, 812, 815, 816, 820, 824, 827, 829, 836, 844, 845, 854, 855, 858, 859, 860, 861, 864, 871], "l1": [439, 553], "l2": [347, 438, 439, 440, 553, 575, 730, 814, 859], "l2norm": 859, "l_": 860, "label": [4, 6, 13, 21, 25, 120, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 208, 213, 214, 216, 217, 219, 220, 230, 243, 244, 245, 295, 301, 303, 304, 305, 307, 311, 320, 321, 341, 351, 352, 389, 432, 434, 436, 437, 463, 480, 481, 546, 549, 560, 562, 573, 693, 696, 697, 698, 703, 707, 719, 720, 723, 725, 727, 728, 733, 734, 736, 738, 742, 743, 744, 764, 768, 773, 774, 776, 778, 780, 782, 783, 784, 806, 811, 812, 817, 818, 819, 821, 824, 825, 826, 827, 834, 835, 837, 839, 840, 841, 842, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 864, 871, 876, 877], "label0_nod": 860, "label1": 860, "label_dict": [204, 352, 698, 744, 784, 847], "label_kei": [178, 179], "label_propag": 463, "labels_follow": [301, 303], "labels_item": 301, "labels_lik": [301, 303], "labels_us": 301, "labelsmooth": 871, "labl": 304, "labor": [214, 299, 305, 317, 569], "laborsampl": [305, 317], "lab\uc758": 797, "lacon": 825, "ladder": 172, "lake": 871, "lam": [430, 431], "lambda": [4, 34, 35, 415, 430, 431, 871], "lambda_": [399, 415], "lambda_max": [399, 404], "land": 556, "langl": [178, 179], "languag": [159, 164, 826, 843, 846, 864, 867, 871], "lapacian": 0, "laplacian": [348, 349, 399, 403, 430, 431, 454, 667, 826, 827], "laplacian_lambda_max": 399, "laplacian_p": 826, "laplacianp": [403, 454], "lapp": [13, 454], "larg": [3, 10, 11, 14, 22, 66, 123, 124, 125, 126, 131, 134, 168, 181, 209, 229, 230, 249, 250, 287, 311, 340, 347, 351, 402, 406, 422, 427, 438, 440, 461, 465, 480, 575, 641, 646, 653, 693, 698, 703, 712, 717, 721, 727, 731, 733, 736, 822, 823, 834, 836, 838, 839, 845, 846, 860, 871], "larger": [178, 240, 299, 307, 315, 324, 434, 436, 465, 569, 715, 738, 836], "largest": [131, 287, 340, 349, 399, 404, 447, 572, 639, 651, 652, 675, 710, 795, 860], "last": [4, 5, 9, 208, 210, 213, 214, 216, 295, 299, 303, 415, 421, 614, 647, 652, 704, 713, 714, 720, 731, 826, 835, 850, 858, 861, 877], "latenc": [305, 310], "latent": 864, "later": [149, 155, 185, 187, 193, 305, 395, 480, 700, 703, 823, 845], "latest": [703, 867], "latter": [363, 432, 433, 434, 435, 436, 437, 565, 700, 715, 720, 872, 874], "launch": [4, 461, 699, 700, 703, 727, 748, 786, 789, 835, 850, 876], "law": 703, "layer": [13, 208, 210, 214, 215, 216, 219, 220, 299, 305, 307, 310, 312, 317, 318, 390, 392, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 452, 453, 454, 458, 462, 564, 569, 700, 715, 718, 719, 720, 722, 723, 725, 726, 727, 728, 729, 736, 737, 738, 765, 808, 811, 812, 813, 821, 829, 834, 835, 836, 837, 842, 844, 845, 846, 854, 855, 858, 861, 870, 872, 874, 877], "layer1": [858, 860, 861], "layer2": [858, 860, 861], "layer3": 860, "layer_depend": [214, 305], "layer_id": 307, "layer_idx": [722, 723, 727, 834, 835, 877], "layer_norm": 426, "layernorm": 871, "layer\uc640": 819, "layout": [31, 62, 63, 708], "lazi": [222, 223, 224, 225, 246, 247, 341, 345, 346, 482, 483, 546], "lazyfeatur": [222, 223, 224, 225], "lbrace": [186, 713, 757, 763, 798, 805], "ld_library_path": [702, 788], "ld_preload": 851, "ldot": [422, 462, 655], "lead": [395, 405, 407, 410, 411, 413, 414, 415, 418, 421, 428, 700, 708, 710, 731, 850], "leaf": [159, 184, 435, 437, 864], "leak": 4, "leakag": [220, 719], "leaky_relu": [829, 861], "leakyrelu": [400, 408, 411, 413, 414, 829, 861], "learn": [4, 10, 13, 14, 23, 160, 179, 194, 217, 351, 389, 392, 393, 395, 400, 402, 406, 410, 411, 413, 414, 418, 427, 428, 431, 432, 433, 434, 436, 447, 454, 460, 462, 463, 480, 566, 654, 660, 661, 662, 664, 697, 723, 727, 733, 734, 736, 738, 797, 809, 822, 823, 825, 826, 829, 831, 834, 835, 836, 837, 842, 843, 844, 845, 847, 858, 859, 860, 864, 865, 867, 870, 871, 874, 876, 877], "learn_beta": 395, "learn_ep": [416, 417], "learnabl": [4, 118, 119, 389, 393, 395, 397, 399, 400, 401, 402, 404, 405, 406, 408, 411, 413, 414, 415, 416, 417, 418, 420, 421, 424, 427, 428, 429, 430, 444, 451, 455, 456, 457, 458, 459, 460, 462, 556, 671, 691, 700, 730, 786, 814, 825, 861, 867], "least": [21, 119, 161, 182, 300, 331, 430, 450, 453, 641, 839, 860, 861], "leav": [299, 714, 830, 843, 845, 864], "left": [118, 351, 396, 399, 402, 408, 411, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 427, 442, 443, 457, 462, 506, 507, 508, 639, 674, 675, 713, 715, 731, 736, 737, 757, 763, 771, 777, 798, 805, 815, 820, 829, 836, 844, 845, 859, 861, 864, 871], "leftarrow": [844, 871], "legaci": 306, "legitim": 163, "len": [73, 138, 145, 146, 147, 164, 165, 166, 168, 169, 172, 174, 184, 186, 195, 207, 220, 302, 311, 328, 391, 462, 505, 509, 568, 575, 593, 615, 616, 619, 620, 634, 689, 695, 697, 722, 723, 727, 728, 732, 734, 737, 738, 743, 763, 766, 772, 774, 777, 778, 783, 805, 809, 812, 816, 818, 820, 821, 825, 826, 834, 835, 845, 846, 847, 850, 854, 855, 858, 859, 860, 864, 867, 870, 871, 876, 877], "length": [36, 37, 142, 164, 182, 205, 207, 217, 232, 239, 240, 290, 296, 298, 299, 300, 305, 310, 317, 318, 319, 332, 344, 363, 399, 455, 508, 509, 547, 566, 567, 568, 571, 576, 614, 615, 689, 691, 700, 706, 708, 793, 829, 843, 865, 870, 871, 874], "leq": [864, 871], "leskovec": 844, "less": [118, 119, 139, 161, 226, 347, 438, 440, 455, 565, 575, 703, 710, 721, 850, 861], "let": [43, 46, 74, 103, 126, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 505, 703, 713, 788, 825, 829, 834, 835, 837, 840, 841, 854, 855, 858, 860, 867, 876], "level": [0, 5, 23, 120, 128, 129, 148, 436, 557, 558, 573, 651, 652, 700, 701, 703, 707, 714, 732, 736, 786, 826, 844, 846, 847, 851, 858, 861, 864, 867, 870, 872, 874], "level\uc758": 786, "leverag": [393, 401, 402, 715, 728, 825, 830, 860, 864, 868, 874], "levi": 676, "lexicograph": [123, 583], "lexicon": 144, "lg": [350, 676, 860], "lg1": 860, "lg_batch": 183, "lg_layer": 860, "lg_x": 860, "lgnn": [862, 874], "lgnncore": 860, "lgnnlayer": 860, "lh": 506, "lhs_data": [506, 507], "lhs_field": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "lhs_target": 506, "li": [245, 408, 481, 665, 670, 674, 729, 756, 840, 841, 859, 861, 867, 870], "lib": [702, 788, 826, 834, 835, 837, 840, 841, 851, 854, 858, 861], "libgoogl": 851, "librari": [8, 12, 21, 22, 727, 823, 829, 830, 850, 851, 867], "libtcmalloc": 851, "libxsmm": 688, "licens": 822, "life": 4, "lifesci": [444, 449], "ligand": 397, "light": 22, "lightn": 835, "like": [9, 21, 22, 26, 116, 131, 162, 214, 216, 219, 226, 295, 301, 303, 305, 317, 325, 326, 422, 434, 436, 564, 565, 689, 691, 694, 695, 700, 703, 711, 715, 720, 722, 724, 725, 730, 731, 733, 734, 736, 755, 774, 786, 796, 823, 837, 840, 841, 842, 844, 846, 847, 858, 871, 876], "like_edg": 840, "like_edges_path": 840, "like_orig_eids_0": 703, "liked_bi": 720, "likelihood": [565, 566, 737, 820, 860], "limit": [22, 244, 292, 311, 722, 830, 834, 835, 837, 840, 841, 860, 877], "limits_": [411, 859, 871], "lin": [416, 424, 429], "line": [22, 183, 350, 668, 700, 702, 703, 704, 708, 823, 832, 842, 854, 862, 863, 870, 874, 876], "line_graph": [183, 860], "line_graph_degre": 183, "linear": [392, 394, 406, 410, 416, 417, 419, 421, 423, 424, 425, 427, 429, 432, 433, 434, 435, 436, 442, 450, 458, 465, 715, 720, 723, 724, 725, 727, 730, 734, 736, 759, 764, 767, 770, 774, 776, 801, 806, 810, 814, 818, 819, 824, 825, 826, 827, 834, 844, 845, 858, 859, 860, 861, 864, 867, 871, 876], "linear_deg": 860, "linear_dst": [715, 759, 801], "linear_fus": 860, "linear_model": 389, "linear_prev": 860, "linear_radiu": 860, "linear_src": [715, 759, 801], "linearity\uc640": 811, "linearli": [394, 426, 824], "linegraph": 13, "lingfan": [859, 867], "link": [2, 13, 139, 149, 157, 158, 185, 191, 211, 214, 216, 220, 243, 305, 307, 310, 317, 318, 458, 459, 460, 696, 700, 718, 719, 733, 736, 738, 742, 766, 782, 783, 809, 826, 832, 833, 835, 837, 842, 848, 849, 856, 857, 860], "link_predict": [311, 834, 840, 841], "linkpr": 139, "linkproppr": [696, 742, 782, 855], "linspac": 870, "lint": 21, "linux": 851, "list": [4, 10, 21, 22, 27, 36, 37, 39, 45, 52, 54, 56, 73, 78, 92, 95, 96, 105, 117, 119, 121, 122, 123, 124, 125, 130, 131, 145, 148, 159, 178, 179, 183, 196, 197, 205, 207, 208, 209, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 236, 240, 247, 249, 287, 288, 293, 295, 297, 298, 301, 302, 303, 304, 305, 306, 307, 310, 311, 315, 317, 318, 320, 338, 340, 349, 352, 357, 358, 391, 393, 399, 403, 425, 426, 462, 464, 483, 549, 551, 562, 568, 569, 571, 573, 575, 580, 581, 585, 595, 618, 641, 646, 647, 653, 655, 657, 659, 662, 664, 673, 687, 691, 695, 696, 697, 698, 702, 703, 710, 714, 719, 720, 725, 727, 731, 732, 736, 737, 738, 782, 783, 795, 819, 839, 842, 843, 847, 851, 854, 860, 864, 867, 870, 871], "listen": 700, "liter": [133, 144], "literatur": 734, "littl": [21, 22, 70, 720, 736, 871], "live": [4, 859], "ll": 846, "load": [0, 2, 3, 138, 139, 140, 142, 143, 148, 156, 166, 179, 181, 184, 189, 190, 203, 204, 213, 236, 237, 238, 289, 307, 311, 319, 320, 335, 352, 432, 434, 436, 437, 692, 693, 697, 699, 700, 702, 718, 725, 727, 728, 740, 744, 751, 780, 782, 783, 784, 792, 812, 824, 825, 826, 833, 835, 839, 840, 841, 844, 847, 850, 854, 855, 858, 859, 860, 861, 867, 876], "load_cor": 850, "load_cora": [860, 861], "load_cora_data": [858, 861], "load_data": 827, "load_edg": 238, "load_feat": 236, "load_graph": [204, 573, 698, 707, 711, 744, 751, 755, 784, 792, 796, 843], "load_info": [698, 744, 784], "load_nod": 238, "load_partit": [4, 240, 702, 703], "load_partition_book": [4, 702, 703], "load_partition_feat": [702, 703], "load_state_dict": [850, 867], "load_subtensor": [699, 745, 785], "load_tensor": 703, "load_url": 867, "loader": [41, 209, 210, 211, 212, 213, 292, 305, 310, 860, 877], "loader_cor": [850, 851], "local": [4, 23, 70, 197, 214, 232, 236, 239, 240, 299, 305, 352, 399, 404, 461, 569, 573, 693, 694, 697, 698, 699, 700, 702, 703, 780, 783, 788, 826, 835, 842, 851, 854, 858, 861, 871], "local_edg": 788, "local_nod": 788, "local_node_idx": 788, "local_partit": 4, "local_scop": [432, 433, 434, 435, 436, 464, 724, 731, 734, 736, 737, 764, 766, 767, 771, 774, 776, 777, 806, 809, 810, 815, 818, 819, 820, 844, 845, 858], "local_to_global_nid": 393, "local_var": 70, "localhost": 21, "localscratch": 835, "locat": [4, 146, 169, 232, 239, 614, 625, 693, 697, 702, 829], "lock": [10, 67, 89, 112, 324, 851], "log": [23, 132, 133, 144, 170, 200, 398, 403, 415, 425, 432, 433, 435, 437, 737, 777, 820, 845, 860, 861, 867, 870], "log_prob": 867, "log_softmax": [858, 861, 864, 867], "logic": [156, 871], "logical_and": 788, "login": 854, "logisticregress": 389, "logit": [363, 432, 433, 434, 435, 436, 437, 723, 728, 734, 736, 738, 774, 776, 778, 812, 818, 819, 821, 824, 825, 826, 829, 834, 842, 844, 858, 859, 861, 864, 867], "logit\uc73c\ub85c": 818, "logn": 438, "logp": [858, 861, 864], "logsigmoid": 867, "lollipop": 172, "long": [4, 14, 22, 59, 64, 68, 118, 131, 287, 340, 456, 463, 593, 689, 703, 710, 721, 723, 754, 795, 860, 864, 871], "longer": [834, 837, 840, 841, 865, 867, 874], "longest": [182, 576], "longtensor": [4, 226, 299, 302, 305, 310, 321, 323, 339, 390, 393, 420, 459, 460, 463, 564, 641, 700, 727, 746, 763, 786, 805, 826, 827, 843, 847, 860, 867], "look": [9, 21, 137, 171, 180, 182, 188, 221, 722, 724, 725, 734, 834, 835, 837, 840, 841, 843, 864, 867, 871], "lookup": [22, 859], "loop": [21, 62, 63, 116, 117, 181, 226, 347, 395, 401, 405, 407, 410, 411, 413, 414, 415, 418, 421, 426, 428, 438, 439, 440, 553, 561, 565, 575, 657, 672, 699, 700, 702, 703, 706, 722, 785, 791, 811, 825, 827, 850, 851, 860, 861, 867, 871], "loopi": 860, "loss": [4, 10, 389, 393, 432, 433, 434, 435, 436, 437, 461, 699, 700, 719, 720, 723, 725, 727, 728, 734, 736, 737, 738, 745, 746, 763, 764, 766, 768, 774, 776, 777, 778, 785, 786, 805, 806, 809, 811, 812, 818, 819, 820, 821, 824, 825, 826, 827, 834, 835, 836, 837, 842, 844, 845, 846, 850, 854, 855, 858, 859, 860, 861, 864, 867, 871, 876, 877], "loss_comput": 871, "loss_fcn": [699, 728, 745, 785, 824, 826, 854, 855], "loss_perm1": 860, "loss_perm2": 860, "loss\uac00": 812, "loss\ub97c": [811, 820, 821], "loss\uc5d0": 812, "lot": [22, 168, 186, 698, 721, 722, 736, 737], "low": [5, 240, 245, 292, 347, 403, 435, 437, 438, 440, 459, 460, 481, 573, 575, 700, 701, 715, 786, 823, 850, 861], "low2high": [435, 437], "lower": [22, 431, 697, 700, 743, 783, 844, 861, 870, 872, 874], "lowest": [178, 179], "lp": [459, 460, 840, 841], "lp_task": [840, 841], "lp_test_follow_index": 840, "lp_test_follow_indexes_path": 840, "lp_test_follow_label": 840, "lp_test_follow_labels_path": 840, "lp_test_follow_neg_dst": 840, "lp_test_follow_neg_index": 840, "lp_test_follow_neg_se": 840, "lp_test_follow_neg_src": 840, "lp_test_follow_se": 840, "lp_test_follow_seeds_path": 840, "lp_test_index": 841, "lp_test_indexes_path": 841, "lp_test_label": 841, "lp_test_labels_path": 841, "lp_test_like_index": 840, "lp_test_like_indexes_path": 840, "lp_test_like_label": 840, "lp_test_like_labels_path": 840, "lp_test_like_neg_dst": 840, "lp_test_like_neg_index": 840, "lp_test_like_neg_se": 840, "lp_test_like_neg_src": 840, "lp_test_like_se": 840, "lp_test_like_seeds_path": 840, "lp_test_neg_dst": 841, "lp_test_neg_index": 841, "lp_test_neg_se": 841, "lp_test_neg_src": 841, "lp_test_se": 841, "lp_test_seeds_path": 841, "lp_train_follow_se": 840, "lp_train_follow_seeds_path": 840, "lp_train_like_se": 840, "lp_train_like_seeds_path": 840, "lp_train_se": 841, "lp_train_seeds_path": 841, "lp_val_follow_index": 840, "lp_val_follow_indexes_path": 840, "lp_val_follow_label": 840, "lp_val_follow_labels_path": 840, "lp_val_follow_neg_dst": 840, "lp_val_follow_neg_index": 840, "lp_val_follow_neg_se": 840, "lp_val_follow_neg_src": 840, "lp_val_follow_se": 840, "lp_val_follow_seeds_path": 840, "lp_val_index": 841, "lp_val_indexes_path": 841, "lp_val_label": 841, "lp_val_labels_path": 841, "lp_val_like_index": 840, "lp_val_like_indexes_path": 840, "lp_val_like_label": 840, "lp_val_like_labels_path": 840, "lp_val_like_neg_dst": 840, "lp_val_like_neg_index": 840, "lp_val_like_neg_se": 840, "lp_val_like_neg_src": 840, "lp_val_like_se": 840, "lp_val_like_seeds_path": 840, "lp_val_neg_dst": 841, "lp_val_neg_index": 841, "lp_val_neg_se": 841, "lp_val_neg_src": 841, "lp_val_se": 841, "lp_val_seeds_path": 841, "lpe": 454, "lr": [4, 10, 389, 393, 432, 433, 434, 436, 437, 461, 699, 700, 723, 727, 728, 745, 746, 748, 785, 786, 789, 812, 824, 825, 826, 827, 834, 835, 842, 844, 845, 846, 854, 855, 858, 859, 860, 861, 864, 871, 876, 877], "lr1": [700, 746, 786], "lr2": [700, 746, 786], "lr_schedul": 826, "lru": [300, 324, 331], "lsc": 289, "lsc_2part": 703, "lsc_chunk": 703, "lstm": [427, 444, 462, 730, 770, 814, 832, 865, 866, 868, 871, 874], "lt": [14, 826, 827, 834, 835, 837, 840, 841], "lumo": [178, 179], "lut": 871, "lvert": [457, 730, 770, 814], "m": [5, 9, 21, 62, 63, 73, 91, 92, 93, 94, 100, 113, 126, 128, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 357, 394, 403, 409, 423, 425, 432, 433, 435, 438, 440, 446, 464, 571, 614, 615, 622, 625, 633, 634, 683, 684, 685, 686, 714, 716, 724, 728, 731, 735, 737, 758, 760, 767, 771, 775, 777, 799, 800, 802, 810, 812, 815, 820, 823, 827, 829, 835, 836, 844, 858, 860, 867, 870], "m_": [409, 713, 757, 798, 836, 844], "m_i": 409, "m_r": 460, "m_v": [836, 844], "machin": [4, 177, 178, 179, 211, 212, 232, 239, 240, 461, 697, 699, 700, 701, 702, 703, 704, 728, 797, 822, 830, 832, 842, 847, 854, 855, 860, 864, 867, 868, 871, 874, 878, 879], "machine_id": 4, "made": [181, 432, 433, 434, 436, 859, 871], "mag": [289, 703, 725, 788], "mag240m": 289, "mag_lsc_partit": 703, "maggi": 756, "magnitud": 861, "mag\uc758": 788, "mai": [4, 6, 20, 21, 41, 116, 186, 214, 220, 226, 236, 292, 295, 322, 359, 394, 423, 426, 547, 565, 646, 647, 694, 695, 697, 699, 700, 703, 711, 719, 730, 731, 732, 734, 735, 736, 737, 738, 741, 781, 823, 825, 835, 842, 843, 845, 847, 854, 859, 877], "mailbox": [5, 20, 100, 263, 264, 265, 266, 683, 684, 686, 714, 728, 731, 758, 771, 799, 812, 815, 844, 861, 864, 867, 871], "main": [4, 21, 210, 292, 699, 700, 726, 736, 776, 819, 829, 830, 834, 835, 837, 840, 841, 850, 851, 860, 861, 877], "mainland": 23, "mainli": [4, 231, 700], "maintain": [4, 6, 10, 27, 28, 114, 115, 116, 117, 126, 130, 131, 145, 246, 247, 249, 250, 287, 292, 340, 341, 344, 350, 358, 482, 483, 546, 560, 563, 640, 649, 650, 736, 854, 864, 871], "major": [144, 232, 239, 708, 727, 729, 736, 793, 835, 840, 854, 877], "make": [8, 20, 21, 22, 70, 120, 122, 137, 140, 162, 171, 180, 182, 188, 198, 210, 214, 215, 216, 226, 229, 230, 241, 242, 245, 295, 299, 390, 416, 422, 427, 432, 433, 441, 443, 447, 448, 450, 453, 481, 565, 569, 571, 673, 679, 689, 693, 694, 697, 698, 699, 700, 702, 704, 710, 714, 724, 725, 734, 736, 781, 788, 818, 823, 826, 832, 842, 843, 845, 848, 849, 864, 870, 871], "make_model": 871, "make_shar": 22, "makedir": [698, 744, 784, 840, 841], "malici": [834, 837, 840, 841], "manag": [288, 295, 298, 320, 700, 711, 823, 830, 835, 877], "mandatori": [21, 231, 839], "manhattan": [439, 553], "mani": [4, 22, 122, 214, 226, 305, 310, 565, 569, 692, 695, 700, 704, 707, 719, 729, 731, 826, 842, 843, 844, 845, 854, 864, 867, 871], "manifold": 418, "manipul": [0, 13, 22, 308, 861], "manner": [835, 870], "manual": [4, 101, 102, 155, 168, 186, 187, 193, 292, 395, 407, 410, 411, 413, 414, 415, 418, 421, 423, 426, 428, 702, 707, 822, 835, 844, 851, 854, 877], "manual_se": 876, "map": [4, 5, 20, 26, 43, 46, 47, 74, 75, 101, 102, 103, 109, 121, 130, 131, 186, 220, 231, 234, 240, 299, 303, 307, 312, 322, 323, 327, 330, 338, 339, 340, 390, 392, 393, 415, 424, 433, 434, 438, 440, 442, 547, 641, 649, 655, 695, 701, 702, 720, 731, 732, 771, 787, 815, 843, 854, 860, 867, 871], "map_to_homo_eid": [4, 701, 787], "map_to_homo_nid": [4, 701, 787], "map_to_per_etyp": [4, 241, 701, 787], "map_to_per_ntyp": [4, 241, 701, 787], "mapper": 303, "mapperiterdatapip": 308, "margin": [737, 820], "mark": [144, 167, 222, 223, 224, 225, 243, 845], "marker": 870, "marketplac": 706, "markupsaf": [834, 835, 837, 840, 841], "mask": [22, 132, 133, 140, 144, 150, 154, 157, 158, 159, 160, 161, 162, 163, 170, 173, 176, 181, 184, 191, 192, 194, 197, 198, 205, 216, 231, 232, 239, 246, 432, 433, 434, 436, 450, 452, 453, 463, 482, 662, 689, 693, 697, 728, 733, 734, 738, 763, 778, 780, 783, 805, 817, 821, 847, 854, 858, 861, 864, 871], "massiv": [702, 703, 718], "master": [21, 165, 850], "master_addr": 850, "master_port": 850, "mat": [636, 694, 697, 741, 743, 781, 783, 860], "mat_path": [697, 743, 783], "match": [4, 5, 9, 118, 199, 200, 299, 312, 357, 358, 361, 436, 464, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 568, 694, 741, 781, 829], "materi": [9, 89, 721, 843, 867], "materialize_data": 108, "math": [245, 411, 481, 651, 652, 714, 731, 791, 805, 820, 858, 860, 864], "mathbb": [713, 757, 798, 825, 826, 827, 867, 871], "mathbf": [411, 415, 420, 463], "mathcal": [244, 351, 363, 398, 401, 402, 403, 407, 409, 410, 411, 412, 413, 414, 416, 417, 418, 420, 421, 423, 424, 426, 427, 480, 506, 507, 578, 579, 655, 713, 714, 731, 732, 736, 737, 757, 758, 763, 771, 772, 776, 777, 798, 799, 805, 815, 816, 819, 820, 829, 836, 844, 845, 861, 864], "mathemat": [120, 244, 351, 400, 401, 412, 415, 421, 459, 460, 480, 614, 625, 715, 824, 825, 844, 858, 860], "mathrm": [118, 245, 395, 402, 407, 408, 411, 413, 414, 416, 417, 418, 420, 424, 427, 442, 444, 481, 731, 771, 815, 871], "matmul": [829, 859], "matplotlib": [825, 860, 864, 867, 870], "matric": [41, 62, 63, 118, 119, 183, 394, 411, 426, 450, 614, 617, 622, 623, 625, 634, 655, 707, 825, 828, 829, 858], "matrix": [0, 9, 13, 14, 30, 31, 32, 62, 63, 118, 119, 126, 131, 146, 169, 177, 250, 287, 340, 343, 344, 347, 350, 396, 404, 405, 406, 408, 414, 415, 418, 421, 428, 429, 438, 439, 440, 455, 460, 463, 465, 505, 506, 507, 508, 553, 571, 575, 580, 581, 583, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 655, 664, 665, 670, 674, 707, 715, 727, 734, 735, 774, 818, 822, 824, 825, 826, 827, 828, 843, 858, 859, 861, 862, 874], "matrix\uc774\ub2e4": 787, "matter": [21, 300, 444, 860, 861, 871], "mat\u6587\u4ef6\u4e0b\u8f7d\u5230\u76ee\u5f55": 741, "max": [5, 9, 73, 117, 231, 351, 353, 354, 391, 399, 402, 403, 416, 418, 424, 425, 443, 462, 485, 490, 507, 509, 511, 517, 525, 531, 557, 558, 580, 581, 618, 619, 620, 632, 657, 689, 710, 714, 716, 730, 731, 737, 738, 758, 760, 770, 771, 777, 778, 795, 799, 802, 814, 815, 820, 821, 829, 858, 860, 867, 870, 872, 874, 876], "max_": [410, 443], "max_allow_nod": 168, "max_cache_size_in_byt": [324, 331], "max_degre": [451, 691], "max_depth": 871, "max_dist": [456, 691], "max_in_degre": [400, 401, 402], "max_len": [455, 689, 691], "max_node_typ": 457, "max_num_nod": [168, 186, 689, 691], "max_num_v": 172, "max_queue_s": 235, "max_uva_thread": 292, "maxim": [6, 232, 235, 239, 389, 703, 844, 851, 867], "maximum": [6, 118, 119, 168, 172, 186, 400, 401, 402, 403, 410, 425, 450, 451, 452, 453, 455, 456, 457, 564, 600, 603, 674, 691, 736, 737, 820, 861, 865, 871, 874], "mayb": 21, "mb": [703, 832, 849, 853, 857, 863, 866, 869, 873, 875, 879], "mcaulei": [135, 136], "mckee": 562, "mct": [435, 437], "md": [210, 823, 834, 837, 840, 841], "mean": [4, 5, 9, 10, 73, 117, 137, 147, 150, 154, 176, 177, 180, 210, 211, 212, 240, 292, 297, 299, 307, 310, 312, 317, 318, 323, 339, 355, 356, 363, 391, 402, 403, 415, 416, 418, 421, 424, 425, 427, 432, 433, 435, 438, 439, 440, 441, 442, 444, 445, 447, 448, 486, 491, 507, 509, 512, 518, 526, 532, 554, 555, 557, 558, 600, 604, 640, 641, 649, 657, 677, 700, 710, 714, 716, 722, 723, 724, 727, 728, 730, 731, 734, 737, 738, 758, 760, 767, 770, 771, 774, 777, 778, 786, 795, 799, 802, 809, 810, 812, 814, 815, 818, 820, 821, 824, 825, 826, 829, 834, 835, 837, 842, 844, 845, 847, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 877], "mean_nod": [433, 434, 435, 436, 736, 776, 819, 846], "mean_udf": 844, "meaning": 735, "meaningless": 116, "meant": [22, 707], "measur": [13, 120, 161, 244, 245, 347, 351, 435, 437, 438, 440, 459, 460, 480, 481, 575, 691, 835, 861, 871, 877], "mechan": [5, 20, 22, 455, 456, 457, 726, 735, 826, 860, 861, 867, 871, 872, 874, 877], "medium": 14, "meet": [396, 825], "mem": [10, 832, 849, 853, 857, 863, 866, 869, 873, 875, 879], "member": [21, 434, 436, 714, 844, 845, 847, 860, 876], "memmap": 703, "memo": 5, "memori": [4, 9, 10, 14, 67, 89, 112, 126, 131, 184, 210, 235, 249, 250, 287, 291, 293, 299, 300, 305, 307, 310, 312, 314, 319, 320, 324, 332, 335, 340, 347, 362, 438, 440, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 565, 575, 647, 699, 703, 710, 715, 718, 721, 722, 728, 812, 823, 830, 838, 839, 840, 841, 845, 854, 864, 871], "meng": 756, "mention": [700, 702, 703, 722, 871], "merg": [21, 229, 230, 687, 711, 714, 716, 732, 734, 796, 846, 860, 861], "merit": 22, "merlin": 210, "messag": [1, 13, 53, 73, 91, 92, 93, 94, 100, 113, 127, 130, 131, 178, 179, 208, 210, 211, 212, 214, 215, 216, 219, 220, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 395, 396, 397, 398, 401, 403, 405, 407, 410, 411, 413, 414, 415, 416, 418, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 435, 436, 437, 485, 486, 487, 488, 490, 491, 492, 493, 507, 511, 512, 513, 514, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 548, 549, 550, 551, 552, 569, 641, 678, 679, 680, 681, 682, 683, 684, 685, 686, 702, 712, 720, 722, 723, 724, 725, 729, 730, 732, 733, 736, 738, 756, 797, 802, 805, 806, 809, 811, 812, 817, 821, 822, 837, 843, 845, 859, 861, 862, 865, 867, 872, 874], "message_func": [73, 91, 92, 93, 94, 100, 113, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 548, 549, 550, 551, 552, 714, 716, 717, 758, 760, 761, 799, 802, 803, 844, 859, 861, 864, 867, 871], "meta": [4, 148, 293, 316, 393, 461, 695, 701, 703, 864], "meta_g": 72, "metadata": [4, 236, 240, 294, 296, 298, 299, 311, 316, 319, 695, 700, 701, 702, 703, 704, 727, 788, 834, 835, 837, 838, 839, 840, 841, 877], "metadata_path": [840, 841], "metagraph": [13, 26, 101, 102, 117, 119, 122, 127, 130, 131, 173, 220, 246, 340, 341, 345, 346, 433, 482, 546, 554, 563, 646, 649, 676, 687, 695, 711, 755, 796], "metapath": [358, 393, 564, 567, 568, 655], "method": [1, 22, 89, 112, 160, 194, 208, 209, 210, 217, 218, 220, 221, 232, 239, 240, 291, 302, 305, 312, 315, 347, 351, 390, 391, 394, 399, 411, 413, 414, 427, 438, 440, 480, 509, 548, 550, 564, 575, 647, 695, 707, 710, 718, 719, 722, 723, 733, 734, 835, 836, 842, 843, 845, 847, 851, 858, 859], "methodologi": [641, 722, 737], "meti": [4, 6, 209, 232, 239, 240, 359, 360, 562, 703, 747, 788, 854], "metirs\ub97c": 788, "metis_partition_assign": [209, 562], "metis\u4ec5\u5e73\u8861\u6bcf\u4e2a\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u6570": 747, "metis\u5212\u5206\u7684\u597d\u5904\u5728\u4e8e": 747, "metis\uc640": 788, "metis\uc740": 788, "metis\uc758": 788, "metric": [21, 347, 438, 439, 440, 553, 575, 722, 834, 837, 845, 854, 855], "metric\uc744": 808, "mf": [835, 877], "mfg": [127, 131, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 720, 723, 725, 806, 809, 811, 836, 837, 855], "mfg\uac00": 805, "mfg\ub4e4\ub85c": 805, "mfg\ub4e4\uc740": 805, "mfg\ub4e4\uc758": [805, 806, 811], "mfg\ub85c": 805, "mfg\ub97c": [805, 811], "mfg\uc5d0": 810, "mfg\uc5d0\uc11c": 810, "mfg\uc5d0\uc11c\uc758": 805, "mfg\uc758": [805, 806, 811], "mfg\uc778": 810, "mgf\uac00": 810, "mha": 826, "michal": 847, "michel": 167, "micro": 861, "microbenchmark": 830, "microsoft": [151, 152, 289, 703], "middl": [142, 143], "might": [358, 397, 706, 716, 736, 835, 851, 860], "migrat": 21, "mikhail": 859, "million": [461, 718, 728, 822, 835, 837], "min": [5, 9, 73, 117, 243, 391, 402, 403, 425, 487, 492, 507, 509, 513, 519, 527, 533, 557, 558, 616, 657, 689, 714, 716, 730, 737, 758, 760, 770, 777, 799, 802, 809, 814, 820, 829, 860], "min_num_v": 172, "mind": [699, 860], "mine": [132, 171], "minesweep": 171, "mini": [4, 7, 165, 168, 172, 186, 208, 210, 220, 308, 697, 699, 700, 717, 718, 721, 725, 731, 736, 785, 822, 833, 835, 846, 850], "mini_batch": [720, 725], "mini_cn": 745, "mini_feature_dataset": 695, "mini_featureless_dataset": 695, "mini_hetero_dataset": 695, "mini_multi_dataset": 695, "minibatch": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 291, 295, 303, 304, 305, 308, 310, 317, 321, 327, 718, 722, 726, 806, 832, 833, 834, 835, 836, 837, 839, 846, 878, 879], "minibatcher_default": [295, 303], "minibatchtransform": [292, 297, 309, 315, 720], "minigcdataset": [697, 743, 783], "minim": [8, 21, 22, 240, 360, 389, 695, 702, 703, 725, 726, 737, 860, 861], "minimum": [6, 9, 172, 186, 299, 403, 425, 600, 605, 673, 714, 736, 860], "minji": [858, 860, 861, 864], "minkowski": [439, 553], "minst": 169, "minut": [164, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "misc": 13, "miss": [290, 299, 300, 695, 859, 861], "miss_rat": [290, 300], "mix": [9, 14, 309, 425, 712, 714, 797, 799, 860, 862, 874], "mixtur": [183, 418], "mkdir": [823, 854], "ml": 173, "mle": 867, "mlp": [409, 425, 430, 454, 734, 736, 776, 819, 845], "mlppredictor": [734, 774, 818, 845], "mlp\ub97c": 818, "mlsoar": 756, "mm": 860, "mmap": [840, 841], "mmap_mod": 319, "mnist": [14, 169, 870], "mod": [391, 732, 772, 816], "mod_arg": [391, 732, 772, 816], "mod_kwarg": [391, 434, 732, 772, 816], "mode": [4, 147, 164, 166, 174, 175, 184, 195, 209, 217, 235, 359, 360, 462, 464, 698, 744, 784, 823, 825, 834, 837, 840, 841, 864, 871], "model": [4, 7, 9, 12, 14, 23, 70, 120, 158, 159, 167, 183, 191, 197, 205, 210, 213, 222, 223, 224, 225, 295, 312, 389, 393, 394, 398, 400, 401, 412, 418, 420, 421, 422, 424, 426, 428, 429, 432, 433, 434, 435, 436, 437, 445, 446, 454, 459, 462, 465, 564, 566, 689, 690, 697, 699, 700, 704, 706, 711, 716, 719, 721, 722, 726, 727, 728, 729, 731, 735, 737, 745, 746, 763, 764, 766, 768, 774, 776, 777, 778, 785, 786, 805, 806, 809, 811, 812, 818, 819, 820, 821, 822, 823, 824, 825, 827, 829, 830, 832, 840, 841, 842, 843, 844, 850, 860, 861, 862, 863, 864, 865, 866, 869, 871, 873, 875], "model_opt": 871, "model_state_dict": 850, "model_typ": 454, "model_zoo": 867, "modelnet": 14, "modif": [450, 453, 699, 854, 855], "modifi": [8, 148, 149, 155, 185, 187, 193, 198, 292, 299, 319, 320, 450, 453, 643, 644, 645, 725, 735, 822, 823, 850, 854], "modul": [4, 6, 8, 13, 18, 21, 235, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 664, 665, 666, 667, 668, 670, 671, 674, 690, 691, 699, 712, 718, 720, 722, 723, 725, 727, 728, 733, 734, 736, 737, 738, 764, 765, 766, 767, 768, 770, 772, 774, 776, 777, 778, 806, 808, 809, 810, 811, 812, 813, 814, 816, 818, 819, 820, 821, 824, 825, 826, 827, 829, 832, 834, 835, 836, 837, 840, 841, 842, 845, 846, 848, 849, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "modular": 703, "moduledict": [433, 435, 724, 732, 767, 772, 810, 816], "modulelist": [691, 722, 723, 727, 728, 812, 825, 826, 834, 835, 854, 855, 859, 860, 861, 867, 877], "mol": [178, 179], "mol_encod": 826, "molass": 756, "molecul": [177, 178, 179, 449], "molecular": [178, 179, 195, 397, 444, 449, 457, 846], "moleculenet": 179, "molhiv": [138, 696, 742, 782, 826], "moment": [178, 179, 403, 425, 562], "moment3": [403, 425], "moment4": [403, 425], "moment5": [403, 425], "monitor": 870, "mont": [435, 437], "month": [163, 181], "monthli": [149, 185], "more": [3, 4, 9, 20, 21, 22, 27, 28, 66, 91, 95, 96, 120, 122, 156, 161, 168, 214, 216, 226, 230, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 294, 295, 296, 300, 307, 319, 344, 397, 415, 432, 433, 434, 436, 461, 481, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 564, 565, 570, 571, 641, 647, 689, 695, 697, 698, 699, 700, 703, 707, 711, 715, 717, 718, 719, 720, 721, 725, 726, 727, 730, 732, 734, 736, 738, 755, 796, 822, 823, 825, 827, 829, 834, 835, 837, 840, 841, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876], "moreov": [118, 119], "most": [1, 14, 116, 126, 131, 147, 151, 152, 159, 182, 226, 249, 250, 287, 340, 435, 437, 564, 641, 697, 698, 700, 701, 710, 714, 719, 724, 728, 734, 735, 736, 738, 829, 842, 851, 871], "mostli": 22, "motif": [141, 142, 143, 189, 190, 861], "mount": 854, "move": [4, 89, 108, 305, 310, 586, 589, 694, 701, 725, 825, 835, 871, 877], "movement": [246, 247, 341, 345, 346, 482, 483, 546, 726], "movi": [43, 173, 860], "movielen": 173, "mp": [295, 835, 850, 876, 877], "mpicc": [702, 788], "mpirun": [702, 788], "mpmath": [834, 835, 837, 840, 841], "mpnn": [424, 444], "mq": 571, "msbuild": 823, "msg": [263, 264, 265, 266, 423, 858, 859, 860, 871], "mu": [178, 179, 418, 457], "mu_": 423, "mu_k": 418, "much": [4, 122, 139, 245, 299, 481, 565, 569, 715, 822, 830, 836, 840, 841, 854, 859, 861, 867, 871], "mufei": [859, 861, 867], "muhyun": 797, "mul": [9, 259, 260, 273, 274, 283, 284, 450, 453, 501, 502, 506, 507, 524, 525, 526, 527, 528, 529, 542, 543, 628, 714, 758, 799, 829], "mulbackward0": 9, "multi": [9, 41, 149, 158, 162, 185, 191, 194, 295, 304, 400, 407, 411, 412, 413, 414, 423, 450, 453, 455, 456, 457, 459, 461, 554, 555, 650, 691, 697, 703, 708, 721, 725, 737, 738, 822, 832, 833, 834, 837, 842, 843, 844, 852, 853, 854, 859, 862, 872, 874, 878, 879], "multi30k": 871, "multi_update_al": [433, 435, 716, 732, 760, 772, 802, 816], "multiclass": [165, 434, 435, 436, 437, 463, 827, 835, 877], "multidigraph": [72, 646], "multigraph": [48, 66, 118, 119, 706, 791, 867], "multihead": 445, "multiheadattent": 871, "multiheadgatlay": 861, "multilabel": 463, "multilay": [214, 215, 216, 305, 317, 569, 725, 734], "multilayerdropoutsampl": [763, 805], "multilayerfullneighborsampl": [763, 764, 765, 766, 768, 805, 806, 808, 809, 811], "multilayerneighborsampl": [210, 700, 746, 763, 786, 805, 854, 855], "multilevel": [359, 360], "multinomi": [723, 766, 809], "multipl": [0, 4, 7, 9, 14, 22, 26, 27, 28, 36, 37, 41, 43, 46, 47, 48, 51, 52, 54, 55, 56, 57, 60, 61, 65, 74, 75, 77, 87, 88, 90, 91, 92, 95, 96, 103, 107, 118, 126, 128, 129, 130, 131, 229, 230, 240, 249, 250, 287, 288, 290, 292, 293, 298, 299, 300, 305, 310, 311, 317, 318, 320, 340, 347, 349, 352, 390, 391, 393, 398, 425, 434, 436, 438, 439, 440, 449, 450, 453, 461, 462, 505, 506, 507, 508, 553, 557, 558, 561, 564, 568, 569, 573, 575, 578, 579, 589, 614, 622, 623, 625, 640, 641, 649, 655, 659, 689, 691, 699, 700, 701, 703, 706, 710, 716, 721, 724, 726, 732, 736, 737, 738, 802, 823, 825, 826, 830, 835, 840, 841, 842, 845, 851, 854, 858, 859, 861, 862, 867, 871, 874, 876, 877], "multipli": [5, 183, 216, 403, 425, 432, 433, 557, 558, 614, 615, 622, 625, 630, 633, 634, 714, 728, 735, 824, 829, 859, 871], "multiprocess": [4, 292, 726, 835, 876, 877], "multiprocessor": 292, "multpli": 735, "music": [137, 161], "must": [4, 6, 9, 27, 28, 34, 35, 36, 37, 43, 46, 48, 51, 53, 54, 55, 57, 58, 60, 61, 73, 74, 87, 88, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 113, 118, 119, 122, 125, 130, 131, 138, 139, 140, 147, 164, 174, 175, 197, 198, 205, 209, 210, 211, 212, 214, 216, 218, 219, 220, 241, 242, 246, 249, 250, 287, 290, 296, 298, 299, 300, 304, 305, 310, 317, 318, 319, 320, 340, 341, 343, 345, 346, 348, 349, 350, 361, 391, 395, 398, 403, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 421, 425, 426, 427, 433, 434, 435, 436, 437, 440, 463, 482, 508, 509, 546, 556, 557, 558, 559, 562, 566, 567, 568, 569, 570, 571, 572, 575, 576, 580, 581, 600, 603, 604, 605, 607, 616, 634, 639, 641, 649, 687, 693, 695, 697, 700, 701, 704, 708, 709, 711, 714, 721, 724, 755, 794, 796, 807, 829, 843, 859, 864], "mutag": [25, 165, 168, 170, 186, 432, 436, 437, 736, 776, 819], "mutat": [13, 70, 864, 867], "mutual": [149, 161, 185, 216, 220, 245, 481, 568, 706, 876], "mxnet": [4, 9, 13, 21, 23, 199, 200, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 697, 710, 724, 729, 736, 738, 769, 813, 819, 822, 830, 862, 874], "mxnet\uacfc": 821, "mxnet\uc5d0\uc11c\ub294": 783, "mxnet\uc758": 795, "mxnet\uc774\ub098": 810, "my": [703, 704], "my_agg_func": 391, "my_sample_subgraph": [302, 315], "my_train_script": 704, "myadd": 22, "mydata": 703, "mydatapars": 695, "mydataset": [693, 694, 740, 780, 781], "mygraph": [703, 704], "myrepo": 703, "mysubgraphsampl": [302, 315], "n": [6, 9, 14, 20, 21, 62, 63, 126, 129, 186, 190, 240, 243, 250, 299, 312, 322, 323, 338, 339, 347, 348, 351, 359, 360, 363, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 463, 480, 505, 508, 556, 571, 575, 576, 580, 581, 614, 615, 616, 619, 620, 622, 625, 632, 633, 634, 639, 648, 651, 652, 667, 675, 684, 685, 686, 689, 701, 714, 718, 727, 731, 758, 762, 763, 771, 799, 804, 805, 809, 815, 824, 825, 826, 827, 829, 830, 836, 840, 841, 844, 858, 860, 861, 864, 867, 870, 871, 875], "n0": 299, "n1": [299, 323, 330, 339, 456], "n2": [299, 323, 330, 339, 456], "n2e": 676, "n3": 330, "n_": [395, 398, 405, 406, 407, 408, 411, 413, 414, 416, 417, 418, 419, 421, 423, 427], "n_0": 122, "n_1": 122, "n_base": 859, "n_class": [437, 699, 728, 734, 736, 745, 774, 776, 785, 812, 818, 819, 854, 855], "n_click": [733, 773, 817], "n_commun": 183, "n_dislik": [733, 773, 817], "n_edg": [737, 764, 777, 806, 812, 820, 827, 871], "n_epoch": [210, 213, 859], "n_etyp": 420, "n_feat": 464, "n_featur": [737, 738, 777, 778, 820, 821], "n_follow": [733, 773, 817], "n_graph": 183, "n_head": [446, 454], "n_hetero_featur": [733, 738, 773, 778, 817, 821], "n_hidden": [728, 812, 854, 855, 859], "n_hidden_lay": 859, "n_i": [122, 441, 442, 443, 448, 859], "n_item": [733, 773, 817], "n_iter": 444, "n_job": 231, "n_k": 122, "n_kernel": 418, "n_label": [738, 778, 821], "n_layer": [444, 445, 446, 763, 765, 805, 808, 854, 855], "n_max_click": [733, 773, 817], "n_node": [183, 847, 871], "n_search": 850, "n_step": 420, "n_t": [433, 434, 435], "n_token": 871, "n_train": 847, "n_user": [733, 773, 817], "n_user_class": [733, 738, 773, 778, 817, 821], "n_val": 847, "naive_propagate_attent": 871, "name": [0, 4, 5, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 45, 46, 47, 48, 52, 53, 55, 57, 58, 60, 61, 62, 63, 68, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 133, 138, 156, 159, 162, 165, 168, 173, 178, 179, 186, 197, 200, 205, 208, 214, 216, 219, 220, 221, 222, 223, 224, 225, 236, 237, 240, 241, 242, 246, 247, 249, 250, 289, 291, 293, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 320, 321, 324, 335, 341, 345, 346, 352, 391, 403, 425, 461, 482, 483, 484, 507, 546, 554, 556, 557, 558, 559, 560, 561, 562, 564, 566, 568, 569, 570, 571, 572, 573, 577, 578, 579, 580, 581, 646, 648, 649, 655, 657, 662, 663, 664, 665, 667, 670, 671, 673, 674, 675, 677, 679, 693, 694, 695, 696, 697, 700, 701, 702, 703, 708, 711, 714, 719, 720, 725, 734, 736, 740, 741, 742, 743, 746, 748, 755, 780, 781, 782, 783, 786, 788, 789, 793, 796, 823, 829, 834, 837, 839, 840, 841, 844, 845, 847, 854, 855, 867, 871, 876], "namedrockunit": 144, "namedtupl": 864, "namespac": [1, 22, 133, 144, 714, 822], "name\u76ee\u5f55\u4e2d": 741, "nan": [348, 450, 453, 667, 858, 861], "narrow_row": [731, 771, 815], "nation": 166, "nativ": [8, 293, 699, 719, 823, 826, 829], "nativelayernormbackward": 446, "natur": [562, 735, 826, 860, 864, 870, 871], "nblink": 720, "nc": [840, 841], "nc_task": [840, 841], "nc_test_id": 841, "nc_test_ids_path": 841, "nc_test_item_id": 840, "nc_test_item_ids_path": 840, "nc_test_item_label": 840, "nc_test_item_labels_path": 840, "nc_test_label": 841, "nc_test_labels_path": 841, "nc_test_user_id": 840, "nc_test_user_ids_path": 840, "nc_test_user_label": 840, "nc_test_user_labels_path": 840, "nc_train_id": 841, "nc_train_ids_path": 841, "nc_train_item_id": 840, "nc_train_item_ids_path": 840, "nc_train_item_label": 840, "nc_train_item_labels_path": 840, "nc_train_label": 841, "nc_train_labels_path": 841, "nc_train_user_id": 840, "nc_train_user_ids_path": 840, "nc_train_user_label": 840, "nc_train_user_labels_path": 840, "nc_val_id": 841, "nc_val_ids_path": 841, "nc_val_item_id": 840, "nc_val_item_ids_path": 840, "nc_val_item_label": 840, "nc_val_item_labels_path": 840, "nc_val_label": 841, "nc_val_labels_path": 841, "nc_val_user_id": 840, "nc_val_user_ids_path": 840, "nc_val_user_label": 840, "nc_val_user_labels_path": 840, "nccl": [835, 876, 877], "nci1": 165, "ndarrai": [22, 27, 54, 95, 96, 125, 131, 183, 205, 249, 287, 340, 707, 710, 751, 792, 823, 860], "ndarraypartit": 461, "ndarray\u7c7b\u578b\u4f5c\u4e3aapi\u7684\u8f93\u5165": 754, "ndarri": 795, "ndata": [4, 5, 9, 28, 34, 35, 43, 54, 56, 64, 71, 75, 77, 93, 94, 95, 96, 100, 103, 108, 113, 115, 117, 122, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 167, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 217, 219, 221, 224, 240, 246, 249, 341, 345, 346, 357, 389, 403, 432, 433, 434, 435, 436, 437, 450, 454, 464, 482, 546, 558, 559, 560, 562, 563, 571, 577, 579, 580, 581, 646, 647, 648, 649, 652, 661, 662, 667, 668, 669, 671, 673, 674, 675, 676, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 695, 697, 699, 700, 702, 703, 708, 709, 711, 714, 715, 724, 728, 734, 735, 736, 737, 738, 743, 745, 746, 747, 752, 753, 755, 758, 759, 763, 764, 766, 767, 768, 774, 775, 776, 777, 778, 783, 785, 786, 788, 793, 794, 796, 799, 801, 805, 806, 809, 810, 811, 812, 818, 819, 820, 821, 824, 825, 826, 827, 842, 843, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876], "ndata_pars": [148, 695], "ndata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 246, 247, 341, 344, 345, 346, 350, 482, 483, 546, 555, 559, 560, 577, 646, 660, 661, 668, 674, 687, 695, 702, 703, 707, 708, 710, 736, 751, 752, 754, 792, 793, 795, 819, 843, 846, 847], "nearbi": [389, 393], "nearest": [14, 347, 438, 440, 575, 737, 820], "nearli": 871, "necessari": [4, 21, 41, 210, 214, 216, 220, 231, 571, 641, 715, 720, 721, 738, 808, 821, 836, 846, 850, 854, 871], "necessarili": [131, 340, 646, 724, 836, 844, 867], "need": [4, 5, 6, 21, 48, 57, 65, 77, 89, 118, 138, 139, 140, 145, 214, 229, 230, 240, 246, 247, 295, 297, 305, 310, 312, 317, 318, 341, 345, 346, 347, 359, 360, 394, 422, 432, 433, 434, 435, 436, 437, 438, 440, 462, 482, 483, 546, 547, 575, 580, 581, 647, 694, 695, 700, 701, 702, 703, 704, 710, 711, 715, 716, 719, 722, 723, 724, 725, 726, 730, 731, 732, 734, 735, 736, 737, 738, 787, 795, 796, 823, 829, 834, 835, 836, 839, 840, 841, 842, 845, 846, 847, 854, 855, 867, 871, 876, 877], "needham": 845, "neg": [6, 7, 13, 120, 139, 161, 163, 184, 214, 216, 219, 220, 226, 227, 241, 242, 295, 299, 303, 305, 309, 310, 317, 318, 321, 389, 393, 400, 411, 413, 414, 485, 490, 511, 517, 525, 531, 565, 566, 568, 569, 570, 571, 673, 695, 726, 737, 766, 829, 833, 834, 840, 841, 855, 859, 860, 864], "neg_dst": [737, 777, 820, 855], "neg_eid": 845, "neg_featur": 855, "neg_g": [737, 777, 820], "neg_graph": 855, "neg_pair_graph": 220, "neg_ratio": 139, "neg_sampl": [220, 226, 227, 305, 321], "neg_scor": [737, 766, 777, 809, 820, 845, 855], "neg_src": [737, 777, 820, 855], "neg_u": 845, "neg_v": [393, 845], "neg_weight": 389, "negat": [598, 829], "negative_edge_dst": [139, 855], "negative_edge_src": [139, 855], "negative_graph": [737, 766, 777, 809, 820], "negative_ratio": [299, 309, 321], "negative_s": [389, 393], "negative_sampl": [220, 226, 227, 228, 766, 809], "negative_slop": [400, 411, 413, 414], "negativesampl": [321, 723, 726, 766, 809], "neghborhood": 834, "neglig": 22, "neigh": [731, 771, 815], "neighbor": [4, 13, 14, 171, 210, 214, 215, 216, 219, 220, 234, 241, 242, 245, 299, 302, 305, 310, 315, 317, 318, 344, 347, 358, 397, 400, 401, 402, 410, 411, 418, 421, 426, 438, 439, 440, 481, 553, 564, 566, 568, 569, 570, 571, 572, 575, 580, 581, 666, 697, 718, 719, 722, 725, 726, 727, 737, 738, 763, 805, 820, 829, 833, 842, 844, 845, 846, 858, 859, 861, 867], "neighbor_match": 6, "neighbor_sampling_overview": 720, "neighborhood": [1, 214, 220, 299, 305, 310, 317, 345, 346, 432, 433, 434, 436, 564, 569, 570, 641, 700, 722, 727, 738, 764, 768, 806, 811, 842, 859, 860, 861, 862, 874], "neighborsampl": [215, 220, 305, 317, 699, 720, 722, 725, 745, 785], "neighborsamplerimpl": [305, 310], "neighbor\ub4e4\uc5d0": 783, "neighbour": [403, 425], "neighbourhood": [425, 860], "neither": [168, 580, 581], "nelement": 867, "neo4j": 845, "neq": 860, "net": [425, 450, 452, 453, 464, 858, 861], "net_typ": 235, "network": [4, 13, 72, 134, 141, 142, 143, 145, 149, 150, 154, 155, 164, 165, 166, 167, 175, 176, 183, 185, 187, 189, 190, 192, 193, 209, 210, 219, 235, 243, 244, 289, 316, 348, 363, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 409, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 426, 428, 429, 430, 432, 433, 434, 435, 436, 437, 442, 445, 446, 449, 462, 464, 465, 480, 556, 564, 566, 655, 660, 663, 667, 671, 674, 691, 699, 700, 702, 703, 704, 706, 707, 712, 716, 718, 724, 725, 730, 734, 735, 737, 751, 763, 792, 805, 822, 826, 828, 829, 830, 831, 832, 843, 844, 846, 847, 848, 849, 850, 863, 864, 867, 872, 873, 876, 877], "networkx": [72, 125, 230, 249, 464, 646, 648, 707, 751, 792, 825, 834, 835, 837, 840, 841, 860, 861, 864, 867, 870], "networkx\ub294": 792, "network\ub97c": 804, "neural": [4, 141, 142, 143, 165, 179, 183, 189, 190, 192, 210, 219, 243, 244, 316, 348, 395, 396, 398, 399, 404, 409, 416, 417, 419, 420, 422, 424, 430, 432, 433, 434, 435, 436, 437, 442, 445, 446, 464, 556, 564, 667, 671, 674, 691, 712, 716, 718, 724, 725, 730, 735, 737, 763, 805, 822, 826, 828, 829, 830, 832, 842, 843, 844, 846, 848, 849, 850, 858, 863, 867, 872, 873, 876, 877], "neurip": [214, 299, 305, 317, 569], "neuron": 860, "neutral": [184, 864], "never": [235, 439, 553, 720], "nevertheless": 701, "new": [0, 1, 3, 4, 26, 27, 28, 34, 40, 70, 89, 114, 115, 116, 117, 118, 119, 122, 138, 140, 142, 143, 159, 210, 231, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 299, 324, 332, 341, 344, 345, 346, 351, 357, 358, 391, 393, 401, 408, 410, 423, 426, 432, 433, 436, 480, 546, 559, 560, 561, 562, 563, 567, 569, 570, 571, 572, 580, 581, 598, 636, 640, 641, 655, 656, 657, 672, 677, 700, 701, 703, 710, 711, 718, 721, 724, 796, 805, 829, 830, 831, 835, 842, 843, 844, 845, 846, 854, 858, 859, 864, 867, 871, 872, 874], "new_cent": [432, 433], "new_d": [139, 140], "new_dataset": 138, "new_edge_feat": [408, 419], "new_edges_mask": [763, 805], "new_etyp": 657, "new_g": [26, 130, 358, 654, 655, 656, 657, 659, 660, 661, 664, 665, 666, 668, 670, 672], "new_g1": 26, "new_g2": [26, 130], "new_label": 463, "new_node_feat": [408, 411, 419], "new_node_id": [432, 433], "new_val": 829, "newer": [302, 315], "newg": 843, "newh": 70, "newli": [114, 115, 850], "newman": 167, "next": [303, 305, 310, 566, 568, 647, 691, 695, 701, 703, 725, 768, 811, 834, 837, 845, 860, 864, 871], "next_lg_x": 860, "next_x": 860, "nf": [704, 789], "nfeat": [398, 408, 411, 417, 434, 435, 436, 437, 452, 453, 460, 702, 703], "ngc": 835, "nh": 826, "nice": [22, 736, 831], "nid": [4, 10, 26, 95, 96, 130, 212, 219, 221, 222, 224, 225, 240, 246, 341, 345, 346, 432, 461, 482, 546, 559, 560, 562, 577, 641, 646, 686, 699, 700, 701, 703, 711, 717, 745, 746, 755, 761, 763, 785, 786, 787, 788, 796, 803, 805, 837, 843, 855, 871], "nid2localnid": 4, "nid2partid": 4, "nid_het2hom": 701, "nid_hom2het": 701, "nid_offset": 701, "nid_rang": 788, "nightli": 830, "nine": 165, "niter": 860, "nk": [347, 438, 440, 575], "nl": 133, "nlh": [718, 762, 804], "nll_loss": [858, 861, 864], "nlp": [184, 871], "nmap": 854, "nn": [10, 13, 14, 21, 121, 210, 213, 347, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 575, 689, 691, 699, 700, 715, 720, 722, 723, 724, 725, 727, 728, 729, 732, 734, 736, 737, 738, 745, 759, 764, 765, 766, 767, 768, 770, 771, 772, 774, 776, 777, 778, 785, 786, 801, 806, 808, 809, 810, 811, 812, 813, 816, 818, 819, 820, 821, 824, 825, 826, 827, 829, 834, 835, 837, 842, 844, 845, 846, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "nnz": [12, 30, 31, 62, 63, 583, 586, 589, 591, 593, 595, 596, 597, 598, 606, 609, 611, 613, 614, 616, 617, 618, 619, 620, 621, 623, 624, 625, 626, 628, 632, 634, 635, 636, 829], "nn\u6a21\u5757": [769, 770, 772], "nn\u6a21\u5757\u4e2d": 769, "nn\u6a21\u5757\u53ef\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u8f93\u5165\u4e2d\u91cd\u590d\u4f7f\u7528": 771, "nn\u6a21\u5757\u662f\u7528\u6237\u6784\u5efagnn\u6a21\u578b\u7684\u57fa\u672c\u6a21\u5757": 769, "nn\u6a21\u5757\u7684api\u53c2\u8003": 768, "nn\u6a21\u5757\u7684forward\u51fd\u6570": [756, 769], "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [756, 769], "nn\u6a21\u5757\u7684\u7236\u7c7b\u53d6\u51b3\u4e8e\u540e\u7aef\u6240\u4f7f\u7528\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 769, "nn\u6a21\u5757\u76f8\u6bd4": 771, "nn\u6a21\u5757\u989d\u5916\u589e\u52a0\u4e861\u4e2a\u53c2\u6570": 771, "no_grad": [738, 778, 821, 826, 835, 837, 845, 854, 855, 858, 876, 877], "no_subtree_check": 854, "noam": 871, "noamopt": 871, "node": [0, 5, 6, 7, 9, 13, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 39, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 224, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 263, 264, 265, 266, 287, 289, 293, 295, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 328, 330, 338, 339, 340, 341, 344, 345, 346, 347, 348, 350, 351, 357, 358, 359, 360, 363, 389, 391, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 463, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 577, 578, 579, 580, 581, 639, 640, 641, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 655, 656, 657, 660, 661, 662, 663, 664, 665, 667, 668, 669, 670, 672, 673, 674, 675, 676, 680, 681, 682, 683, 684, 685, 687, 689, 691, 695, 696, 699, 701, 702, 703, 705, 706, 709, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 730, 731, 732, 733, 735, 736, 737, 742, 753, 754, 755, 758, 760, 763, 767, 771, 773, 774, 777, 778, 782, 783, 787, 788, 793, 794, 795, 796, 798, 799, 802, 805, 806, 808, 810, 812, 817, 818, 819, 820, 821, 822, 824, 825, 826, 827, 829, 832, 833, 836, 839, 844, 845, 846, 848, 849, 851, 856, 857, 858, 859, 860, 861, 862, 864, 870, 871, 874, 876, 878, 879], "node1": 860, "node2": 860, "node2vec": [566, 842], "node_activ": 867, "node_activation_hidden_s": 867, "node_attr": [25, 249, 648], "node_attr_dtyp": 788, "node_attr_schem": [4, 47], "node_attribut": [299, 330], "node_classif": [311, 837, 840, 841], "node_color": [825, 860, 864, 867, 870], "node_count_check": 131, "node_data": [311, 695, 703, 788], "node_degre": [723, 827], "node_emb": [389, 393, 703, 788, 854], "node_embed": [737, 777, 820], "node_feat": [240, 320, 398, 403, 408, 409, 411, 417, 419, 425, 689, 691, 702, 703, 747, 788], "node_feat_0": 841, "node_feat_0_path": 841, "node_feat_1": 841, "node_feat_1_path": 841, "node_feat_dim": [715, 759, 801], "node_feat_nam": [662, 673], "node_feat_out": 409, "node_feat_s": 138, "node_featur": [297, 303, 307, 719, 723, 725, 727, 734, 737, 738, 774, 777, 778, 818, 820, 821, 834, 835, 837, 847, 855, 877], "node_feature_kei": [297, 719, 720, 722, 723, 725, 726, 727, 834, 835, 837, 877], "node_g": 867, "node_gener": 550, "node_hidden_s": 867, "node_id": [304, 307, 328, 432, 433, 695, 702, 788, 859], "node_id_field": 695, "node_ids_item": 301, "node_ids_us": 301, "node_in_feat": 398, "node_input": 855, "node_item_feat_0": 840, "node_item_feat_0_path": 840, "node_item_feat_1": 840, "node_item_feat_1_path": 840, "node_label": [25, 168, 186, 703, 738, 778, 821, 847], "node_map": [240, 703, 747, 788], "node_min": [435, 437], "node_pair": 299, "node_part": 547, "node_permute_algo": [98, 562], "node_repr": 855, "node_s": [825, 860, 864, 870], "node_split": [687, 699, 700, 745, 746, 785, 786, 854, 855], "node_subgraph": [106, 246, 721], "node_timestamp_attr_nam": [299, 317, 318], "node_to_graph": 867, "node_trainer_id": 239, "node_typ": [240, 307, 457, 701, 703, 711, 755, 788, 796, 867], "node_type_emb": 867, "node_type_id": [701, 702, 787], "node_type_offset": [299, 330, 840], "node_type_offset_": 299, "node_type_subgraph": 247, "node_type_to_id": [299, 330, 840], "node_udf": [20, 683, 684, 685, 686], "node_update_func": 867, "node_user_feat_0": 840, "node_user_feat_0_path": 840, "node_user_feat_1": 840, "node_user_feat_1_path": 840, "node_weight_list": 702, "node_year": 703, "nodebatch": [20, 54, 714, 758, 799], "nodedataload": [700, 746, 763, 764, 765, 768, 786, 805, 806, 807, 808, 811, 854], "nodedataview": [4, 648], "nodeembed": 10, "nodelist": 870, "nodepr": 140, "nodeproppr": [696, 742, 782, 854], "nodes_": 871, "nodes_0": 695, "nodes_1": 695, "nodes_d": 871, "nodes_data": 847, "nodes_gener": [92, 550], "nodes_perm": 562, "nodes_with_feature_on": 54, "nodeshuffl": 13, "nodeview": 72, "nodewis": 446, "nois": [737, 777, 820], "noisi": 162, "non": [6, 9, 21, 27, 30, 114, 116, 162, 182, 184, 197, 200, 205, 210, 214, 216, 219, 241, 242, 299, 312, 315, 330, 348, 351, 363, 403, 412, 454, 480, 562, 566, 568, 569, 570, 571, 583, 584, 587, 588, 599, 600, 601, 603, 604, 605, 606, 607, 612, 614, 619, 620, 622, 626, 628, 632, 634, 636, 667, 673, 689, 695, 703, 709, 725, 735, 737, 794, 807, 811, 824, 833, 835, 845, 847, 858, 860, 864, 872, 874, 877], "non_block": [291, 307, 312], "none": [4, 6, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 113, 114, 115, 116, 117, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 231, 232, 235, 238, 239, 240, 241, 242, 246, 247, 249, 250, 287, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 315, 317, 318, 319, 322, 323, 324, 327, 328, 330, 333, 340, 341, 345, 346, 352, 353, 354, 355, 356, 359, 360, 391, 394, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 442, 446, 450, 452, 453, 455, 456, 457, 458, 461, 462, 463, 482, 483, 484, 506, 507, 546, 547, 549, 551, 552, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 568, 569, 570, 571, 572, 573, 576, 578, 579, 587, 588, 600, 603, 604, 605, 607, 609, 616, 618, 619, 620, 621, 632, 637, 638, 640, 641, 646, 647, 648, 651, 652, 657, 662, 664, 665, 667, 670, 671, 673, 674, 687, 689, 693, 697, 722, 723, 727, 730, 731, 732, 740, 743, 763, 770, 771, 772, 780, 783, 805, 814, 815, 816, 834, 835, 837, 841, 859, 864, 867, 871, 877], "nonlinear": [738, 825, 860], "nonneg": 183, "nontre": [230, 549], "nonzero": [126, 214, 250, 564, 580, 581, 598, 614, 625, 697, 707, 743, 783, 788, 792, 829, 859, 860], "norm": [347, 405, 406, 412, 421, 422, 423, 426, 427, 428, 430, 438, 439, 440, 459, 460, 553, 575, 720, 725, 730, 731, 764, 766, 768, 770, 771, 806, 809, 811, 814, 815, 826, 829, 859, 860, 871], "norm_": 419, "norm_bi": 363, "norm_by_dst": 859, "norm_edge_weight": 412, "norm_first": [453, 691], "norm_typ": 463, "norm_x": 871, "normal": [4, 128, 129, 142, 150, 154, 176, 245, 349, 363, 399, 401, 403, 405, 406, 409, 410, 411, 412, 418, 419, 421, 425, 426, 427, 428, 430, 431, 453, 454, 463, 481, 484, 568, 578, 579, 663, 673, 674, 691, 693, 703, 724, 730, 731, 735, 736, 815, 819, 824, 827, 829, 834, 835, 837, 840, 841, 842, 846, 847, 859, 860, 861, 870, 871], "normalis": 673, "normalization\uacfc": 780, "normalization\uc73c\ub85c": 814, "normalization\uc744": [814, 815], "normalization\uc774": 810, "normliz": 814, "north": 23, "nose": 21, "notabl": [699, 720], "notat": [825, 867], "note": [4, 6, 9, 10, 14, 21, 22, 26, 27, 28, 34, 39, 43, 46, 48, 52, 66, 68, 70, 73, 74, 78, 93, 94, 95, 96, 100, 101, 102, 103, 108, 110, 113, 114, 115, 116, 117, 118, 119, 126, 130, 131, 134, 135, 136, 149, 150, 151, 152, 153, 154, 155, 159, 168, 173, 176, 184, 185, 186, 187, 192, 193, 210, 214, 215, 216, 220, 226, 235, 246, 247, 249, 250, 287, 294, 295, 299, 303, 307, 310, 317, 318, 319, 320, 321, 322, 323, 340, 341, 344, 345, 346, 350, 357, 358, 363, 391, 393, 401, 403, 405, 406, 407, 425, 426, 438, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 461, 462, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 559, 560, 561, 562, 563, 566, 567, 569, 570, 571, 572, 580, 581, 640, 641, 642, 646, 647, 648, 649, 650, 651, 652, 693, 696, 697, 698, 699, 701, 707, 711, 716, 722, 724, 728, 731, 732, 733, 736, 738, 745, 746, 747, 748, 785, 786, 787, 788, 789, 802, 808, 824, 825, 826, 827, 836, 840, 841, 842, 843, 844, 850, 854, 858, 860, 861, 864, 871], "notebook": [700, 720, 828, 835, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "notebook\u4e2d\u5f00\u53d1\u548c\u8fd0\u884c\u4ee3\u7801": 746, "notebook\u4e2d\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 746, "notebook\uc5d0\uc11c": 786, "noth": [561, 867], "notic": [641, 647, 835, 836, 845, 846], "notimplementederror": 867, "notion": [22, 860], "noun": [149, 185], "now": [183, 234, 294, 357, 646, 700, 702, 720, 724, 725, 738, 810, 827, 835, 840, 841, 850, 854, 861, 867, 877], "np": [4, 125, 126, 205, 249, 250, 294, 319, 320, 395, 396, 397, 398, 399, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 424, 426, 427, 428, 429, 434, 436, 571, 695, 700, 701, 702, 733, 734, 746, 773, 774, 786, 788, 817, 818, 837, 840, 841, 843, 845, 854, 855, 858, 860, 861, 870, 871], "npoint": 6, "nproc": [835, 876, 877], "npy": [240, 294, 311, 319, 320, 703, 747, 788, 840, 841], "nty": [391, 732, 772, 816], "ntype": [4, 26, 28, 35, 37, 54, 58, 75, 76, 79, 81, 82, 83, 85, 86, 96, 115, 118, 129, 157, 158, 191, 198, 210, 214, 216, 221, 239, 240, 299, 330, 354, 356, 391, 423, 433, 434, 435, 483, 558, 560, 564, 579, 638, 646, 647, 648, 652, 695, 697, 701, 702, 703, 711, 716, 719, 723, 724, 736, 737, 743, 755, 760, 767, 776, 777, 783, 787, 788, 796, 802, 810, 819, 820, 859], "ntype2id": 701, "ntype2id_map": 701, "ntype_attr": 648, "ntype_count": 647, "ntype_field": 646, "ntype_id": 788, "ntype_output": 391, "ntypes_list": 240, "null": [120, 824, 825, 826, 827, 829, 839], "num": [28, 115, 304, 311, 748, 788, 789, 839, 840, 841], "num_atom_typ": 195, "num_bas": [394, 401, 426, 465, 859], "num_base_edges_per_nod": [142, 143], "num_base_nod": [142, 143], "num_bond_typ": 195, "num_child": [435, 437], "num_class": [132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 311, 432, 433, 434, 435, 436, 698, 703, 720, 727, 728, 744, 764, 766, 784, 806, 809, 812, 824, 825, 827, 835, 837, 839, 840, 841, 842, 844, 846, 859, 864, 876, 877], "num_correct": 846, "num_dst": 565, "num_dst_nod": [82, 83, 131, 554, 805, 834, 837], "num_edgnum_edges_per_chunk": [701, 703], "num_embed": [4, 390, 461], "num_epoch": [389, 432, 433, 699, 745, 785, 826, 850], "num_etyp": 423, "num_exampl": 846, "num_featur": [434, 436], "num_gpu": 876, "num_gpu_cached_edg": [305, 310], "num_graph": [138, 139, 140, 159, 172, 689, 691], "num_head": [400, 407, 408, 411, 413, 414, 423, 445, 450, 452, 453, 455, 456, 457, 691, 826, 861], "num_hidden": [699, 745, 785, 854, 855], "num_hidden_lay": 859, "num_hop": [4, 240, 432, 433, 434, 435, 436, 437], "num_input_nod": 763, "num_inter_edg": 142, "num_it": 217, "num_item": 304, "num_kernel": 457, "num_label": [168, 175, 177, 178, 179, 186, 854, 855], "num_lay": [215, 307, 454, 462, 699, 745, 763, 785, 805, 826, 854, 855], "num_mlp_aft": 430, "num_mlp_befor": 430, "num_motif": [142, 143, 189, 190], "num_neighbor": 564, "num_nod": [4, 5, 10, 26, 27, 28, 85, 95, 96, 101, 102, 114, 115, 117, 122, 127, 138, 146, 147, 157, 158, 165, 168, 169, 172, 173, 174, 184, 186, 191, 192, 195, 205, 219, 240, 246, 247, 287, 299, 314, 340, 341, 344, 345, 346, 350, 389, 391, 393, 408, 411, 417, 419, 422, 433, 434, 435, 452, 453, 456, 458, 459, 460, 461, 462, 464, 482, 483, 546, 554, 555, 559, 560, 561, 562, 563, 577, 646, 647, 649, 660, 661, 662, 668, 673, 674, 676, 687, 689, 695, 700, 701, 702, 703, 707, 708, 710, 711, 724, 727, 736, 737, 746, 751, 752, 754, 755, 763, 765, 767, 777, 786, 787, 788, 792, 793, 795, 796, 805, 808, 810, 819, 820, 824, 825, 826, 840, 841, 843, 845, 846, 847, 854, 855, 859, 864, 867], "num_node_typ": 299, "num_node_weight": 788, "num_nodes_dict": [118, 119, 340, 737, 763, 777, 805, 820, 847], "num_nodes_per_chunk": [701, 703], "num_ntyp": 423, "num_of_class": 176, "num_output": 465, "num_output_nod": 763, "num_part": [209, 240, 703, 788, 854, 855], "num_partit": [4, 703], "num_positive_edg": 139, "num_post_lay": 454, "num_prop_round": 867, "num_random_walk": 564, "num_rel": [157, 158, 191, 401, 426, 459, 460, 859], "num_replica": 295, "num_rollout": [435, 437], "num_sampl": [565, 704, 748, 789, 854], "num_se": [566, 568], "num_serv": [704, 748, 789, 854], "num_split": 192, "num_src": 565, "num_src_nod": [79, 86, 131, 554, 805, 834, 837], "num_task": [138, 177, 178, 179, 697, 743, 783, 826], "num_test": [840, 841, 846], "num_test_item": [835, 877], "num_thread": 294, "num_tow": [403, 425], "num_train": [704, 748, 789, 840, 841, 846, 854], "num_train_item": [835, 877], "num_trainers_per_machin": 240, "num_travers": 564, "num_trial": 867, "num_typ": 394, "num_val": [840, 841], "num_val_item": [835, 877], "num_valid": 867, "num_virtual_nod": 452, "num_vocab": 864, "num_work": [209, 210, 213, 214, 215, 216, 217, 219, 220, 292, 721, 748, 763, 764, 766, 768, 789, 805, 806, 807, 809, 811, 834, 850, 851, 864], "num_worker_thread": 235, "numa": 851, "number": [3, 4, 6, 9, 10, 14, 21, 22, 28, 36, 37, 38, 62, 63, 70, 79, 80, 81, 82, 101, 102, 113, 115, 118, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 231, 232, 235, 236, 239, 240, 241, 242, 243, 250, 287, 290, 292, 294, 295, 296, 299, 300, 304, 305, 307, 310, 314, 317, 318, 319, 332, 340, 345, 346, 347, 348, 351, 359, 360, 363, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 547, 554, 555, 556, 559, 562, 564, 565, 569, 570, 571, 572, 575, 576, 580, 581, 599, 617, 619, 620, 623, 624, 639, 647, 649, 654, 664, 665, 666, 667, 670, 671, 674, 675, 678, 679, 680, 682, 683, 684, 685, 686, 687, 691, 693, 695, 697, 700, 701, 702, 703, 704, 708, 710, 711, 715, 716, 719, 721, 724, 728, 735, 738, 780, 783, 795, 796, 800, 807, 825, 827, 829, 835, 836, 837, 839, 840, 842, 843, 845, 846, 847, 850, 851, 854, 858, 859, 861, 867, 870, 871, 876, 877], "number_of_dst_nod": [641, 724, 731, 732, 763, 765, 767, 771, 772, 805, 808, 810, 815, 816], "number_of_edg": 4, "number_of_nod": 4, "number_of_src_nod": [724, 763, 767, 805, 810], "numclass": [824, 825, 827, 842, 844, 845, 858, 860, 861], "numedg": [824, 825, 827, 842, 844, 845, 858, 860, 861], "numer": [4, 10, 22, 245, 403, 419, 481, 695, 708, 843, 847, 867, 871], "numfeat": [824, 825, 827, 842, 844, 845, 858, 860, 861], "numnod": [824, 825, 827, 842, 844, 845, 858, 860, 861], "numpi": [5, 9, 21, 27, 31, 54, 95, 96, 125, 126, 128, 129, 131, 168, 183, 198, 205, 240, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 294, 311, 319, 320, 336, 340, 389, 395, 396, 397, 398, 399, 404, 405, 406, 407, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 424, 426, 427, 428, 429, 434, 436, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 695, 699, 701, 703, 707, 710, 711, 733, 745, 751, 773, 785, 788, 792, 795, 796, 817, 823, 826, 834, 835, 837, 839, 840, 841, 843, 845, 847, 854, 855, 858, 860, 861, 870, 871], "numpy_save_align": [294, 319, 320], "numtestsampl": [824, 825, 827, 842, 844, 845, 858, 860, 861], "numtrainingsampl": [824, 825, 827, 842, 844, 845, 858, 860, 861], "numvalidationsampl": [824, 825, 827, 842, 844, 845, 858, 860, 861], "nutshel": 828, "nvidia": [210, 400, 401, 402, 728, 812, 835], "nx": [125, 249, 464, 707, 751, 792, 825, 860, 861, 864, 867, 870], "nx_agraph": 864, "nx_g": [125, 249, 648, 707, 751, 792, 825, 867], "nx_g1": 860, "nx_graph": [125, 249], "nxg": [707, 751, 792], "nxn": [438, 439], "o": [4, 9, 22, 156, 347, 438, 440, 575, 694, 698, 718, 741, 744, 762, 781, 784, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 850, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "o1": 829, "o2": 829, "o3": 829, "o4": 829, "o5": 829, "o6": 829, "o7": 829, "o8": 829, "o_j": 864, "ob": 465, "obg": 782, "obj_": 22, "object": [4, 22, 26, 42, 53, 54, 59, 108, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 210, 218, 220, 221, 229, 230, 240, 246, 247, 248, 249, 250, 287, 290, 293, 294, 296, 298, 299, 300, 301, 304, 307, 312, 314, 316, 319, 320, 330, 335, 340, 341, 345, 346, 360, 361, 363, 391, 432, 433, 461, 482, 483, 546, 549, 551, 552, 554, 555, 557, 558, 569, 570, 571, 572, 573, 578, 579, 648, 651, 652, 653, 658, 659, 689, 695, 696, 697, 698, 699, 700, 701, 703, 707, 709, 719, 731, 766, 794, 809, 823, 824, 834, 837, 839, 840, 841, 842, 843, 846, 859, 860], "objectbas": 22, "objectref": 22, "objtyp": [240, 360], "observ": [850, 860, 870], "obtain": [14, 245, 299, 339, 345, 346, 408, 411, 450, 453, 454, 462, 481, 567, 641, 655, 697, 720, 724, 734, 736, 737, 738, 783, 825, 835, 842, 843, 861, 864, 877], "occasion": [173, 847], "occup": 843, "occupi": [178, 179], "occur": [26, 240], "occurr": 134, "odot": [419, 458, 864], "ofev": 164, "off": [435, 437, 691, 823, 824, 825, 826, 851, 860, 861, 870, 871], "offer": [822, 833, 842, 850, 864, 870], "offic": 145, "offici": [21, 167, 184, 696, 858, 859, 860, 861, 864, 867, 870, 871], "offlin": [718, 808], "offset": [290, 299, 300, 328, 330, 333, 412, 567, 571, 580, 581], "often": [21, 120, 695, 697, 836, 843, 847, 850], "ogb": [4, 138, 289, 692, 721, 742, 748, 779, 789, 807, 826, 835, 837, 854, 855], "ogb_exampl": 850, "ogb_example_argo": 850, "ogbg": [138, 696, 742, 782, 826], "ogbl": [289, 696, 742, 782, 855], "ogbn": [289, 696, 725, 727, 742, 782, 788, 835, 837, 854, 877], "ok": [5, 709, 794], "okai": 299, "old": [27, 28, 114, 432, 649, 858], "old_step_count": 867, "omega": 825, "omit": [4, 27, 28, 30, 31, 32, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 117, 128, 129, 311, 484, 557, 558, 559, 560, 561, 565, 566, 568, 578, 579, 647, 651, 652, 689, 691, 738, 821, 843], "omp": 235, "omp_num_thread": [835, 877], "onc": [21, 131, 235, 287, 290, 292, 294, 296, 299, 300, 305, 310, 311, 317, 318, 319, 340, 702, 703, 736, 825, 867, 871, 876], "ondisk": 311, "ondisk_dataset": [834, 837, 840, 841], "ondisk_dataset_heterograph": 840, "ondisk_dataset_homograph": 841, "ondiskdataset": [289, 833, 839], "ondiskfeaturedata": 320, "ondiskfeaturedatadomain": [840, 841], "ondisktask": [840, 841], "one": [0, 4, 5, 6, 9, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 44, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 77, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 107, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 144, 147, 150, 154, 157, 158, 160, 161, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 180, 182, 183, 184, 188, 191, 192, 194, 195, 198, 205, 214, 216, 219, 220, 230, 234, 240, 241, 242, 246, 247, 249, 250, 287, 299, 305, 307, 310, 340, 341, 345, 346, 347, 358, 393, 394, 395, 410, 418, 420, 421, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 453, 463, 482, 484, 506, 507, 511, 512, 513, 514, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 546, 557, 558, 559, 560, 561, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 578, 579, 580, 581, 595, 600, 639, 641, 646, 649, 651, 652, 677, 678, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 706, 707, 708, 710, 711, 714, 715, 716, 717, 718, 719, 722, 723, 724, 725, 727, 730, 731, 732, 733, 734, 735, 736, 737, 738, 742, 755, 780, 782, 783, 795, 796, 818, 823, 825, 827, 829, 830, 834, 836, 837, 842, 843, 844, 846, 851, 854, 855, 859, 860, 861, 864, 867, 870, 871, 872, 874, 876], "onehot_label": [697, 743, 783], "ones": [0, 1, 4, 9, 27, 28, 34, 35, 43, 44, 45, 46, 51, 56, 64, 70, 71, 74, 77, 79, 82, 93, 94, 100, 103, 104, 105, 108, 113, 114, 115, 116, 122, 125, 232, 239, 249, 312, 357, 363, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 415, 416, 418, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 456, 462, 509, 563, 568, 573, 593, 616, 621, 622, 634, 636, 641, 647, 648, 649, 656, 662, 678, 682, 683, 684, 685, 686, 687, 689, 699, 701, 703, 707, 708, 711, 752, 755, 793, 796, 830, 844, 845, 855, 864, 867, 870, 871], "ones_lik": 855, "onli": [3, 4, 10, 14, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 41, 47, 48, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 125, 128, 129, 130, 132, 133, 134, 138, 139, 140, 144, 146, 147, 150, 154, 157, 158, 159, 160, 167, 169, 170, 176, 178, 191, 192, 194, 210, 213, 214, 216, 219, 220, 234, 235, 236, 240, 241, 242, 246, 247, 249, 287, 290, 291, 294, 296, 298, 299, 300, 302, 305, 307, 310, 311, 315, 317, 318, 319, 341, 344, 345, 346, 347, 348, 391, 400, 401, 402, 403, 406, 407, 408, 410, 411, 412, 413, 414, 420, 422, 428, 438, 440, 442, 452, 454, 458, 462, 482, 483, 546, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 576, 578, 579, 580, 581, 640, 641, 642, 646, 648, 649, 651, 652, 657, 663, 664, 665, 666, 667, 668, 670, 671, 672, 674, 676, 687, 691, 695, 696, 697, 699, 700, 701, 702, 703, 707, 708, 709, 711, 714, 717, 720, 722, 723, 724, 725, 728, 734, 735, 736, 738, 742, 782, 783, 808, 819, 823, 826, 829, 837, 842, 843, 844, 846, 847, 851, 858, 859, 860, 861, 864, 867, 870, 871, 876], "onlin": [160, 389], "onto": [26, 295, 721, 725, 835, 842, 867, 877], "ood": [197, 205], "oom": [728, 812, 830], "op": [1, 13, 294, 353, 354, 355, 356, 400, 401, 402, 458, 557, 558, 628, 637, 638, 721, 728, 763, 805, 812, 829], "open": [21, 293, 696, 703, 742, 782, 788, 834, 835, 837, 840, 841, 855], "openmp": 8, "opennmt": 871, "oper": [0, 5, 6, 9, 11, 21, 22, 70, 116, 128, 129, 130, 210, 214, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 294, 296, 297, 300, 305, 310, 317, 318, 319, 320, 332, 344, 347, 350, 363, 397, 410, 438, 440, 444, 450, 453, 458, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 557, 558, 563, 569, 570, 571, 572, 575, 580, 581, 622, 628, 640, 647, 649, 672, 674, 687, 693, 700, 701, 709, 711, 714, 715, 719, 721, 727, 728, 729, 731, 735, 736, 737, 823, 824, 825, 826, 828, 837, 844, 850, 851, 861, 862, 867, 871, 872, 874], "operand": [9, 118, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "oplu": 425, "oplus_": [394, 425, 426], "opportun": [833, 842], "opposit": 844, "opt": [719, 720, 725, 734, 736, 737, 738, 763, 764, 766, 768, 774, 776, 777, 778, 805, 806, 809, 811, 818, 819, 820, 821, 834, 837, 840, 841, 858, 861], "optim": [13, 14, 214, 222, 223, 224, 225, 305, 310, 315, 316, 389, 393, 401, 402, 432, 433, 434, 435, 436, 437, 461, 569, 699, 700, 703, 714, 715, 720, 723, 725, 726, 727, 728, 731, 734, 736, 737, 738, 745, 746, 763, 764, 766, 768, 774, 776, 777, 778, 785, 786, 805, 806, 809, 811, 812, 818, 819, 820, 821, 822, 824, 825, 826, 827, 830, 833, 834, 835, 837, 842, 844, 845, 846, 850, 851, 854, 855, 858, 859, 860, 861, 864, 870, 871, 876, 877], "optimizer_exp": [434, 436], "optimizer_state_dict": 850, "optimizer\ub4e4\uc744": 786, "optimizer\ub97c": 812, "optimizer\uc5d0": 786, "option": [4, 6, 10, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 116, 117, 118, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 213, 214, 216, 217, 219, 220, 221, 226, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 249, 250, 287, 289, 290, 292, 295, 296, 297, 298, 299, 300, 303, 304, 305, 310, 311, 317, 318, 319, 322, 323, 324, 328, 330, 333, 340, 341, 344, 345, 346, 347, 348, 350, 352, 361, 362, 363, 389, 391, 392, 393, 394, 395, 396, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 481, 482, 483, 484, 505, 509, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 565, 566, 568, 569, 570, 571, 572, 573, 575, 576, 578, 579, 600, 603, 604, 605, 607, 609, 616, 618, 619, 620, 621, 632, 639, 640, 641, 646, 647, 648, 649, 651, 652, 653, 654, 655, 656, 657, 660, 661, 662, 663, 664, 665, 667, 668, 670, 671, 673, 674, 675, 677, 687, 692, 695, 703, 704, 707, 730, 731, 734, 735, 779, 788, 823, 839, 840, 841, 854, 855], "optiona": 423, "oracl": 867, "orbit": [178, 179], "order": [0, 4, 9, 20, 51, 56, 91, 92, 95, 96, 123, 125, 130, 131, 141, 142, 143, 189, 190, 197, 205, 229, 230, 241, 249, 287, 299, 310, 317, 318, 340, 347, 358, 391, 393, 422, 439, 444, 447, 458, 462, 464, 482, 552, 553, 562, 569, 570, 571, 572, 575, 583, 587, 588, 641, 646, 659, 670, 700, 702, 703, 710, 711, 720, 725, 726, 736, 796, 829, 840, 841, 843, 854, 859, 860, 864, 867, 876], "ordereddict": 184, "ordinari": 732, "org": [9, 133, 134, 137, 146, 147, 161, 162, 163, 169, 171, 173, 174, 177, 178, 180, 182, 188, 195, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 436, 437, 452, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 564, 727, 775, 823, 829, 830, 835, 850, 854, 871], "organ": [21, 230, 240, 702, 703, 732, 822, 838], "organiz": 132, "orient": [576, 870], "orig": 703, "orig_dst_id": [702, 788], "orig_eid": 703, "orig_eids_0": 703, "orig_id": [359, 547, 702, 703, 747, 788], "orig_nid": 703, "orig_nids_0": 703, "orig_node_emb": [703, 788, 854], "orig_src_id": [702, 788], "orig_type_edge_id": 788, "orig_type_node_id": 788, "origianl": 703, "origin": [3, 21, 26, 56, 64, 70, 71, 100, 108, 116, 122, 125, 130, 135, 136, 142, 143, 146, 151, 152, 153, 169, 183, 186, 189, 190, 192, 208, 209, 220, 221, 231, 234, 240, 241, 242, 246, 249, 289, 295, 299, 307, 311, 312, 322, 323, 327, 332, 341, 344, 345, 346, 350, 358, 359, 397, 410, 421, 432, 433, 435, 437, 450, 482, 546, 547, 562, 563, 567, 568, 569, 570, 571, 572, 578, 579, 586, 589, 591, 593, 596, 597, 598, 609, 640, 641, 643, 644, 645, 646, 648, 649, 655, 656, 666, 676, 677, 684, 685, 686, 694, 702, 703, 709, 711, 714, 724, 731, 734, 735, 736, 781, 794, 796, 805, 806, 825, 827, 829, 843, 845, 846, 847, 850, 854, 859, 860, 862, 871, 874], "original_column_node_id": [302, 305, 310, 312, 313, 834, 837], "original_edge_id": [305, 310, 312, 313, 834, 837], "original_row_node_id": [302, 305, 310, 312, 313, 323, 834, 837], "origini": 567, "ot": 289, "otc": 145, "other": [0, 1, 9, 21, 68, 120, 121, 180, 182, 186, 207, 210, 236, 240, 243, 245, 295, 303, 307, 311, 332, 361, 363, 389, 401, 430, 434, 436, 481, 564, 646, 664, 665, 670, 689, 691, 697, 698, 699, 700, 702, 703, 704, 706, 707, 710, 711, 715, 719, 720, 721, 733, 737, 738, 784, 823, 825, 827, 829, 830, 834, 836, 837, 839, 842, 843, 844, 845, 854, 858, 860, 861, 864, 867, 871, 876], "other_typ": 564, "otherwis": [4, 6, 31, 36, 37, 44, 51, 54, 56, 62, 63, 64, 71, 104, 108, 118, 165, 183, 184, 207, 210, 214, 216, 229, 230, 232, 239, 241, 242, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 299, 305, 310, 312, 317, 318, 319, 324, 334, 341, 345, 346, 348, 358, 421, 435, 437, 451, 453, 457, 482, 546, 547, 557, 558, 566, 568, 569, 570, 571, 576, 600, 603, 604, 605, 607, 609, 616, 618, 619, 620, 621, 632, 641, 647, 655, 667, 687, 688, 694, 700, 720, 741, 781, 825, 827, 860, 876, 877], "ouptut": 871, "our": [3, 9, 21, 442, 564, 721, 722, 728, 737, 738, 822, 827, 830, 837, 854, 858, 859, 860, 861], "ourselv": 867, "out": [1, 4, 13, 14, 22, 62, 63, 70, 87, 130, 132, 133, 135, 136, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 197, 205, 214, 216, 217, 241, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 346, 395, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 446, 449, 450, 451, 452, 453, 455, 456, 457, 546, 569, 570, 571, 572, 581, 614, 625, 693, 702, 703, 715, 728, 732, 759, 780, 801, 812, 822, 823, 824, 825, 826, 829, 830, 843, 858, 859, 860, 861, 870], "out1": 9, "out2": 9, "out3": 9, "out4": 9, "out_1": 9, "out_2": 9, "out_3": 9, "out_class": [734, 774, 818], "out_degre": [4, 60, 451, 689, 691, 843], "out_dim": [715, 759, 801, 859, 861], "out_dir": 703, "out_dst": [715, 759, 801], "out_edg": 61, "out_edge_feat": 408, "out_feat": [392, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 411, 413, 414, 415, 417, 418, 420, 421, 424, 426, 427, 428, 429, 432, 434, 436, 458, 674, 720, 724, 725, 727, 730, 736, 738, 764, 766, 767, 768, 770, 776, 778, 806, 809, 810, 811, 814, 819, 821, 844, 858, 859, 860], "out_feat_1": 674, "out_feat_2": 674, "out_feat_nam": 674, "out_feats\u662f\u8f93\u51fa\u7279\u5f81\u7684\u7ef4\u5ea6": 778, "out_featur": [720, 725, 734, 737, 763, 764, 765, 766, 768, 774, 777, 805, 806, 808, 809, 811, 818, 820, 858, 864], "out_field": 871, "out_indx": 870, "out_nod": 870, "out_node_feat": 408, "out_path": [4, 240, 854, 855], "out_proj": 826, "out_siz": [392, 394, 403, 409, 425, 722, 727, 728, 824, 825, 826, 827, 829, 835, 877], "out_src": [715, 759, 801], "out_subgraph": [341, 346, 721], "out_test_mask": [197, 205], "out_valid_mask": [197, 205], "outbound": [241, 242, 546, 566, 568, 569, 570, 571, 572, 641], "outcom": 546, "outdat": [694, 741, 781], "outer": [722, 808], "outermost": [307, 310, 317, 318], "outfil": 788, "outgo": [88, 363, 859], "outmultiedgedataview": [72, 648, 711, 755, 796], "output": [4, 5, 9, 21, 53, 54, 73, 133, 144, 174, 208, 209, 210, 214, 216, 217, 240, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 307, 328, 333, 341, 345, 346, 347, 361, 391, 392, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 458, 462, 464, 465, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 569, 570, 571, 572, 575, 606, 622, 626, 691, 701, 703, 714, 715, 718, 720, 722, 724, 725, 730, 732, 736, 772, 788, 808, 810, 816, 829, 834, 836, 837, 844, 854, 858, 859, 860, 861, 870, 871], "output_d": 430, "output_devic": [49, 50, 76, 106, 208, 209, 214, 216, 217, 219, 246, 247, 341, 345, 346, 482, 483, 546, 569, 570, 571, 572, 876], "output_feat": 419, "output_featur": 859, "output_label": [719, 725, 763, 768, 805, 811], "output_nod": [210, 214, 215, 216, 219, 763, 765, 768, 808, 811, 855], "output_predict": [719, 725, 763, 768, 805, 811], "output_s": [328, 333], "outsid": [693, 700, 703, 714, 799, 829], "over": [3, 7, 79, 82, 164, 166, 177, 178, 179, 209, 210, 211, 212, 213, 245, 292, 295, 303, 363, 403, 425, 441, 443, 448, 481, 557, 558, 578, 579, 580, 581, 651, 652, 677, 695, 720, 721, 722, 723, 725, 726, 736, 805, 808, 823, 825, 834, 837, 844, 846, 850, 851, 854, 858, 861, 864, 867, 870, 871], "overal": [438, 703, 736, 835, 845, 850, 861, 867, 871, 877], "overfit": 859, "overhead": [22, 70, 347, 401, 438, 440, 575, 726, 850, 851], "overlap": [292, 297, 305, 310, 726], "overlap_fetch": [297, 305, 310], "overlap_graph_fetch": [305, 310], "overrid": [210, 213, 218, 723], "overridden": [315, 432, 433, 434, 435, 436, 437], "overview": [707, 860, 877], "overwit": 156, "overwrit": [200, 201], "overwritten": 823, "own": [21, 156, 347, 421, 438, 440, 573, 575, 691, 700, 701, 702, 703, 715, 719, 720, 721, 723, 725, 738, 829, 830, 832, 833, 837, 842, 845, 848, 849, 851, 854, 855, 859, 861, 867, 871], "owner": 703, "ownership": 703, "p": [120, 147, 161, 174, 214, 216, 219, 395, 430, 431, 439, 440, 459, 460, 553, 566, 568, 571, 660, 661, 662, 702, 703, 763, 788, 805, 854, 864, 867, 871], "p1d": 689, "p3": 14, "p3d": 689, "p_": [395, 397], "p_n": [737, 777, 820], "p_p": 174, "pack": 567, "packag": [0, 2, 3, 6, 11, 21, 148, 400, 401, 402, 461, 692, 711, 728, 812, 822, 823, 824, 825, 826, 827, 829, 830, 844, 850, 851, 854, 858, 861, 864], "package\ub97c": 812, "packed_func": 22, "packed_func_ext": 22, "packedfunc": 22, "pad": [348, 451, 452, 454, 455, 456, 566, 567, 568, 576, 639, 651, 652, 667, 675, 689, 826, 835, 865, 871, 874, 877], "pad_id": 871, "pad_num_nod": 689, "pad_sequ": [451, 689], "pad_word": [184, 864], "padding_idx": 871, "page": [10, 21, 67, 89, 112, 134, 149, 155, 185, 187, 193, 719, 823, 824, 825, 826, 827, 834, 835, 837], "pagerank": [396, 670, 674, 825], "pai": 728, "pair": [6, 32, 48, 66, 178, 183, 220, 226, 227, 240, 241, 242, 295, 299, 303, 305, 310, 312, 317, 318, 321, 322, 323, 339, 347, 350, 389, 391, 393, 395, 398, 406, 407, 408, 410, 411, 413, 414, 416, 417, 418, 421, 424, 427, 438, 440, 455, 456, 457, 458, 554, 555, 565, 575, 576, 668, 689, 691, 701, 703, 706, 707, 710, 720, 723, 724, 736, 737, 792, 810, 826, 834, 845, 847, 855, 859, 860, 861, 871], "pair_graph": 220, "pairwis": [438, 439], "panda": [148, 168, 695, 707, 711, 792, 834, 837, 840, 841, 847], "pandas\uc640": 796, "papaer": 871, "paper": [137, 151, 152, 153, 154, 162, 165, 167, 171, 180, 182, 188, 214, 289, 299, 305, 311, 317, 320, 347, 397, 405, 421, 430, 431, 438, 440, 450, 480, 556, 566, 569, 575, 655, 671, 701, 703, 706, 725, 730, 787, 788, 822, 825, 827, 830, 842, 845, 846, 858, 859, 860, 861, 862, 864, 865, 867, 868, 870, 871, 872], "paper___cites___pap": 703, "papers100m": 289, "paradigm": [3, 699, 844, 864], "paral": 864, "parallel": [4, 48, 66, 122, 210, 213, 231, 241, 242, 295, 391, 449, 640, 649, 677, 699, 701, 703, 718, 745, 785, 826, 835, 850, 851, 854, 855, 861, 864, 865, 867, 868, 874, 876, 877], "param": [4, 6, 10, 32, 294, 395, 396, 397, 398, 403, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 425, 427, 428, 429, 430, 431, 458, 459, 462], "paramet": [4, 6, 10, 14, 20, 26, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 363, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 600, 603, 604, 605, 606, 607, 609, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 639, 640, 641, 642, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 673, 674, 675, 677, 687, 688, 693, 697, 699, 700, 714, 715, 716, 720, 723, 725, 727, 728, 729, 730, 731, 732, 734, 736, 737, 738, 740, 743, 745, 746, 759, 763, 764, 766, 768, 774, 776, 777, 778, 780, 783, 785, 786, 801, 805, 806, 809, 811, 812, 814, 818, 819, 820, 821, 823, 824, 825, 826, 827, 829, 834, 835, 837, 842, 844, 845, 846, 850, 854, 855, 858, 859, 860, 861, 864, 867, 871, 876, 877], "parameter": [141, 434, 436, 734, 818, 859, 860, 867], "parametr": [867, 872, 874], "parent": [210, 213, 234, 246, 482, 870], "parit": [359, 360], "paritt": 461, "parmeti": [701, 703], "parmetis\uac00": 788, "parmetis\ub290": 788, "parmetis\ub294": 788, "parmetis\uc5d0": 788, "parmetis\uc758": 788, "parquet": 703, "pars": [148, 695, 703, 707, 711, 847, 864, 865, 874], "parser": 148, "part": [4, 21, 22, 135, 151, 152, 197, 205, 240, 299, 445, 446, 455, 569, 691, 697, 700, 703, 707, 713, 716, 720, 731, 788, 826, 840, 841, 844, 871], "part0": [240, 702, 703, 747, 788], "part1": [240, 702, 703, 747, 788], "part1_end": 240, "part1_start": 240, "part2": 703, "part2_end": 240, "part2_start": 240, "part_config": [4, 231, 236, 237, 238, 699, 700, 701, 704, 745, 746, 748, 785, 786, 787, 789, 854], "part_data": [702, 703], "part_graph": 240, "part_id": [4, 236, 237, 238, 359, 702, 703, 788], "part_method": [4, 240], "part_polici": [4, 701, 787], "part_ratio": [197, 205], "partial": [4, 720, 834, 859, 861, 867, 871], "particip": [210, 213], "particular": [4, 21, 90, 107, 149, 185, 197, 221, 240, 247, 422, 433, 577, 614, 625, 701, 711, 722, 829, 845, 846], "particularli": [245, 481, 707, 711, 827], "partid": 4, "partid2eid": 4, "partid2nid": 4, "partit": [13, 209, 231, 232, 236, 237, 238, 239, 240, 359, 360, 422, 461, 547, 562, 687, 693, 699, 700, 704, 788, 860, 876], "partiti": 871, "partitioend": [359, 547], "partition_algo": 703, "partition_book": [4, 232, 239, 702, 703], "partition_graph": [4, 700, 702, 703, 747, 786, 788, 854, 855], "partitionpolici": [4, 701, 787], "partmetis\ub97c": 788, "partx": [702, 703], "pascal": [9, 714, 799], "pass": [0, 1, 4, 5, 13, 22, 73, 91, 92, 121, 122, 130, 131, 178, 179, 208, 209, 210, 213, 214, 215, 220, 240, 246, 290, 294, 296, 299, 300, 315, 317, 318, 319, 341, 345, 346, 359, 360, 395, 396, 397, 398, 401, 407, 408, 410, 411, 413, 414, 415, 418, 421, 422, 424, 425, 428, 429, 431, 432, 433, 434, 435, 436, 437, 439, 458, 464, 482, 546, 569, 573, 641, 678, 679, 680, 681, 682, 683, 684, 685, 686, 693, 695, 697, 700, 702, 703, 709, 712, 719, 722, 724, 725, 729, 732, 733, 736, 738, 740, 743, 756, 780, 783, 797, 802, 812, 817, 821, 822, 837, 839, 840, 841, 845, 851, 854, 855, 861, 862, 865, 867, 872, 874], "passwordless": [704, 789, 854], "pass\ub97c": 812, "path": [4, 21, 156, 184, 199, 200, 201, 202, 203, 206, 209, 235, 236, 237, 238, 240, 294, 311, 320, 344, 352, 358, 393, 455, 456, 567, 568, 573, 576, 655, 689, 694, 695, 698, 702, 703, 704, 741, 744, 781, 784, 788, 834, 837, 839, 840, 841, 850, 854, 867], "path_data": [455, 689, 691], "path_encod": [455, 691], "path_graph": [707, 751, 792], "path_len": 689, "pathencod": 691, "pathlik": 4, "patit": 701, "pattern": [22, 120, 174, 843, 861], "pb": [699, 745, 785], "pc": 393, "pcgnn_www2021": 162, "pci": [292, 305, 310], "pcie": 726, "pd": [183, 695, 840, 841, 847, 860], "pdf": [147, 161, 162, 174, 195, 436, 452, 727, 775, 871], "pe": [403, 667, 671, 826], "peek": 834, "peocess": [310, 318], "peopl": [145, 706, 736], "pep8": 21, "per": [4, 101, 102, 138, 166, 175, 186, 214, 215, 216, 219, 220, 226, 227, 240, 241, 246, 299, 305, 314, 317, 323, 338, 339, 341, 345, 346, 347, 401, 438, 440, 482, 484, 546, 569, 575, 657, 684, 685, 686, 696, 701, 703, 711, 716, 787, 802, 825, 834, 851, 861, 876], "percent": [860, 861], "percentag": [145, 867], "perfetch": 726, "perform": [0, 1, 4, 5, 9, 21, 22, 91, 92, 118, 119, 122, 130, 131, 141, 142, 143, 162, 168, 188, 189, 190, 207, 210, 217, 219, 221, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 294, 302, 304, 305, 310, 311, 317, 318, 319, 320, 321, 359, 360, 363, 391, 395, 397, 398, 401, 407, 410, 411, 413, 414, 415, 418, 421, 428, 432, 433, 434, 435, 436, 437, 449, 450, 451, 453, 455, 456, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 557, 565, 569, 570, 571, 572, 578, 579, 609, 651, 652, 674, 700, 701, 703, 705, 707, 709, 715, 718, 721, 722, 726, 728, 730, 731, 732, 734, 736, 737, 738, 825, 826, 829, 835, 836, 837, 844, 845, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 868, 874, 876, 877], "perftools4": 851, "perhap": 861, "period": [299, 302, 315], "perman": 21, "permiss": [21, 835], "permut": [197, 205, 445, 446, 562, 845, 860], "permute_config": [98, 562], "persist": [4, 700], "persistent_work": 292, "person": [396, 655, 670, 674, 825, 859], "personen": 132, "persourceuniform": 228, "perspect": [870, 871], "perturb": [142, 143, 189, 190], "perturb_ratio": [142, 143, 189, 190], "pgexplain": 434, "phase": [731, 864, 871], "phi": [410, 423, 506, 713, 737, 757, 763, 777, 798, 805, 820], "phi_e": 409, "phi_h": 409, "phi_x": 409, "photo": [25, 135, 136], "php": 854, "physic": [25, 151, 152, 703], "pi": [397, 457, 860], "pick": [6, 14, 214, 216, 219, 438, 439, 566, 568, 569, 571, 723, 845, 861], "pickl": [834, 837, 840, 841, 855], "pictur": 871, "piec": 844, "pin": [10, 67, 89, 112, 210, 290, 291, 299, 305, 307, 310, 312, 319, 320, 324, 332, 568, 721, 835, 877], "pin_memori": [307, 312, 319, 324, 722, 766, 809], "pin_memory_": [294, 299, 319, 320, 721, 835, 877], "pin_prefetch": 210, "pinsag": 564, "pip": [696, 742, 782, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 850], "pipe": [726, 837], "pipelin": [3, 7, 292, 693, 701, 712, 718, 721, 723, 733, 736, 738, 833, 836, 837, 855], "pixel": [146, 169], "pkl": [209, 698, 744, 784, 855], "place": [1, 21, 70, 116, 130, 210, 292, 299, 300, 319, 320, 331, 332, 344, 350, 563, 569, 570, 571, 572, 640, 649, 709, 835, 850, 876, 877], "placehold": [221, 294], "plai": [4, 27, 28, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 114, 115, 116, 117, 122, 130, 214, 216, 219, 246, 247, 340, 341, 345, 346, 391, 432, 433, 434, 435, 436, 437, 482, 483, 546, 559, 560, 561, 563, 648, 649, 656, 657, 662, 672, 673, 677, 687, 711, 755, 763, 796, 805, 825, 828], "plain": 838, "plan": 733, "platform": [145, 188], "player": [46, 74, 103, 662, 673], "pleas": [4, 9, 21, 22, 27, 28, 114, 115, 116, 117, 130, 148, 210, 214, 215, 216, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 341, 344, 350, 358, 416, 427, 482, 483, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 560, 562, 563, 564, 571, 640, 641, 649, 650, 689, 691, 697, 702, 719, 720, 723, 725, 726, 727, 728, 736, 738, 827, 834, 835, 837, 840, 841, 844, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 877], "plenti": 843, "plot": [861, 864], "plot_tre": 864, "plt": [825, 860, 864, 867, 870], "plu": [131, 159, 287, 340, 715, 827, 830], "pm": [183, 860, 861], "pm_dglpart": [702, 788], "pm_pd": [183, 860], "pm_pd_batch": 183, "pm_pd_y": 860, "pma": 445, "pmpd": 860, "pmpd1": 860, "pn": 777, "pna": 425, "pnaconv": 403, "png": [842, 843, 844, 845, 846, 847, 850], "po": [6, 179, 825, 840, 841, 860, 864, 870, 871], "point": [9, 14, 178, 179, 299, 305, 310, 317, 318, 347, 410, 438, 439, 440, 553, 575, 643, 644, 645, 714, 805, 827, 835, 860, 871], "point_idx": 6, "pointer": [22, 131, 287, 299, 330, 340, 619, 620, 707], "poisson": [305, 317], "polariz": [178, 179], "polici": [4, 300, 324, 331, 701], "policy_str": 4, "polit": 166, "politifact": 159, "ponder": 871, "ponderli": 162, "pool": [6, 13, 397, 427, 432, 437, 441, 442, 443, 444, 445, 447, 448, 454, 462, 729, 730, 731, 769, 770, 771, 813, 814, 815, 864, 870, 871, 872, 874, 876], "pooler": 826, "poorli": 851, "pop": [434, 436, 437, 858, 859, 861, 864, 876], "popul": [21, 208, 328, 333, 434, 436], "popular": [167, 197, 700, 711, 738, 823, 830, 842], "port": [704, 854, 855], "port1": [854, 855], "port2": [854, 855], "portion": [4, 10, 700, 836, 842], "pos_dst": 855, "pos_enc": [826, 871], "pos_enc_s": 826, "pos_encod": 454, "pos_featur": 855, "pos_graph": 855, "pos_linear": 826, "pos_pair_graph": 220, "pos_scor": [737, 766, 777, 809, 820, 845, 855], "pos_src": 855, "pos_u": 393, "pos_v": 393, "pose": 870, "posit": [6, 13, 120, 145, 150, 157, 158, 161, 163, 184, 191, 214, 220, 241, 242, 299, 305, 309, 310, 317, 318, 321, 348, 389, 391, 393, 409, 412, 450, 452, 453, 454, 556, 566, 568, 569, 639, 667, 671, 675, 689, 695, 723, 809, 826, 829, 834, 855, 861, 864, 871], "positionwis": [445, 446], "positive_edge_dst": [139, 855], "positive_edge_src": [139, 855], "positive_graph": [766, 809], "possibl": [21, 137, 220, 226, 295, 311, 397, 554, 555, 565, 707, 714, 715, 721, 834, 837, 840, 841, 845, 846, 854, 859, 860, 867, 871], "possible_dest": 867, "possible_dests_emb": 867, "possibli": [302, 315, 736, 835], "post": [21, 24, 163, 181, 871], "post0": [834, 835, 837, 840, 841], "post_func": 871, "post_pair": 871, "postiv": 809, "potenti": [294, 311, 319, 320, 720, 846, 850, 859], "power": [10, 22, 165, 416, 434, 436, 439, 454, 553, 664, 703, 723, 763, 805, 825, 829, 842, 846, 865, 874], "ppa": [696, 742, 782], "ppi": [25, 830], "ppidata": [697, 743, 783], "ppidataset": 25, "ppr": [13, 674], "pq": 183, "pr": 21, "practic": [304, 395, 405, 407, 410, 411, 413, 414, 415, 418, 421, 428, 480, 693, 717, 736, 826, 832, 834, 845, 847, 852, 853, 860, 861, 876], "practice\ub4e4\uc744": 780, "practis": [395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 715, 851], "pramet": 430, "pre": [4, 23, 125, 173, 249, 305, 310, 317, 318, 394, 417, 421, 423, 426, 430, 431, 825, 826, 834, 835, 837, 840, 841, 867, 871], "pre_func": 871, "pre_kv": 871, "pre_pair": 871, "pre_q": 871, "precis": [9, 643, 644, 645, 712, 714, 797, 799, 845, 861], "precomput": 403, "precond": [430, 431], "pred": [4, 436, 720, 734, 737, 764, 766, 774, 777, 806, 809, 818, 820, 824, 825, 842, 844, 845, 846, 860, 864, 876], "predction": 198, "predecessor": [93, 107, 345, 347, 351, 438, 440, 480, 575, 805], "predefin": [150, 154, 176, 738], "predic": [53, 54, 860, 871], "predict": [13, 132, 133, 137, 138, 139, 140, 144, 150, 154, 157, 158, 162, 170, 171, 173, 176, 177, 178, 179, 180, 188, 191, 197, 211, 214, 216, 220, 243, 245, 305, 307, 310, 317, 318, 396, 397, 432, 433, 434, 436, 437, 444, 449, 458, 481, 696, 700, 718, 719, 720, 725, 733, 736, 738, 742, 766, 782, 783, 809, 824, 825, 826, 832, 833, 835, 837, 842, 844, 846, 848, 849, 854, 856, 857, 860, 861, 864, 867, 870], "predict_categori": [132, 133, 144, 170, 859], "prediction\u6570\u636e\u96c6": 742, "prediction\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 742, "predictor": [449, 458, 720, 723, 734, 764, 766, 806, 809, 826, 834, 855], "prefer": [168, 186, 710, 844], "prefetch": [13, 208, 209, 214, 216, 217, 220, 221, 222, 223, 224, 225, 726], "prefetch_edata": [209, 217], "prefetch_edge_feat": [208, 214, 216, 219], "prefetch_label": [208, 214, 216, 220], "prefetch_ndata": [209, 217], "prefetch_node_feat": [208, 214, 216, 219], "prefix": [641, 702, 788], "preform": [299, 305, 310, 317, 318, 727], "prepar": [295, 690, 691, 703, 733, 736, 834, 837, 847, 854, 871], "prepare_for_train": 867, "prepare_train": 867, "prepend": 68, "preprocess": [132, 133, 144, 170, 179, 184, 699, 702, 824, 825, 827, 833, 834, 835, 837, 840, 841, 845, 877], "prerequisit": 702, "presenc": [149, 185], "present": [299, 312, 433, 435, 826, 859, 861, 870], "preserv": [95, 96, 127, 232, 234, 239, 241, 242, 559, 561, 569, 570, 571, 572, 664, 665, 670, 829, 858, 864], "presort": [423, 426], "pretrain": [159, 184, 823], "pretrained_emb": [184, 864], "prev_proj": 860, "prevent": [122, 145, 422, 450, 453, 657, 719, 728, 823, 859], "previou": [186, 291, 305, 395, 723, 726, 734, 736, 737, 820, 835, 836, 845, 847, 854, 860, 871, 877], "previous": [725, 727, 734], "price": 22, "primari": [293, 691], "prime": [408, 411], "primit": [3, 401, 402, 867], "princip": [425, 797], "principl": [707, 724], "print": [4, 6, 20, 21, 22, 42, 53, 54, 70, 108, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 219, 246, 295, 299, 302, 312, 313, 321, 322, 325, 326, 330, 339, 344, 390, 391, 392, 394, 396, 412, 415, 417, 421, 438, 440, 451, 455, 456, 457, 483, 484, 562, 576, 577, 646, 654, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 677, 693, 695, 696, 700, 702, 703, 710, 725, 728, 734, 737, 738, 742, 746, 754, 763, 768, 774, 777, 778, 780, 782, 786, 795, 805, 811, 812, 818, 820, 821, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 854, 858, 859, 860, 861, 864, 867, 871, 876, 877], "print_everi": [132, 133, 144, 170], "printcalcul": 22, "prior": [865, 874], "prioriti": [240, 573, 823], "prob": [214, 216, 219, 241, 242, 434, 436, 566, 568, 569, 570, 867, 871], "prob_nam": [305, 310, 317, 318], "probabl": [147, 174, 214, 216, 217, 219, 241, 242, 299, 305, 310, 317, 318, 396, 434, 436, 450, 452, 453, 556, 564, 566, 568, 569, 570, 571, 660, 661, 662, 670, 674, 723, 738, 805, 809, 834, 845, 860, 861, 867, 868, 870, 871, 874], "problem": [295, 728, 842, 845, 859, 860, 865, 871, 874, 877], "probs_nam": 299, "proc_id": 295, "proce": [711, 736, 858, 860, 871], "procedur": [6, 434, 436, 697, 871], "process": [0, 2, 4, 6, 8, 22, 41, 134, 137, 138, 139, 140, 142, 143, 149, 155, 156, 171, 173, 180, 182, 185, 187, 188, 189, 190, 193, 210, 213, 232, 235, 239, 292, 295, 303, 305, 307, 310, 312, 317, 318, 361, 362, 393, 396, 415, 428, 429, 432, 433, 434, 436, 449, 461, 463, 583, 691, 692, 693, 695, 696, 698, 699, 700, 701, 702, 703, 704, 718, 721, 726, 736, 740, 743, 780, 783, 784, 825, 826, 833, 846, 847, 851, 854, 855, 859, 860, 861, 864, 867, 871], "prod_": 9, "produc": [230, 600, 603, 604, 605, 607, 703, 731, 845, 858, 861], "product": [4, 118, 135, 136, 137, 161, 163, 289, 393, 407, 421, 458, 600, 625, 706, 721, 727, 734, 737, 748, 789, 807, 820, 826, 827, 835, 845, 854, 855, 861, 870, 871], "product\ub85c": 809, "product\ub97c": [818, 820], "profil": [159, 188], "prog": 864, "program": [9, 21, 22, 295, 699, 705, 825, 847, 877], "progress": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 435, 437, 693, 780, 868, 874], "prohibit": 159, "proj": 871, "project": [22, 155, 187, 188, 193, 397, 450, 460, 720, 844, 858, 859, 860, 867], "project_initial_featur": 415, "prompt": 823, "prop": [431, 867], "prop_edg": 92, "prop_edges_yyi": 0, "prop_nod": [91, 864], "prop_nodes_topo": 864, "prop_nodes_xxx": 0, "prop_step": [430, 431], "propag": [13, 91, 92, 159, 396, 430, 431, 463, 549, 551, 552, 722, 738, 821, 825, 836, 860, 864], "propagagtion\uc744": 808, "propagate_attent": 871, "propagation\uc744": 821, "propagation\uc758": 808, "proper": [210, 851], "properli": [138, 139, 140], "properti": [4, 38, 39, 42, 43, 44, 45, 46, 51, 52, 59, 65, 66, 68, 74, 77, 78, 103, 104, 105, 120, 138, 160, 162, 177, 178, 179, 195, 197, 205, 290, 293, 299, 300, 301, 304, 306, 307, 311, 312, 314, 316, 444, 449, 582, 583, 584, 590, 592, 599, 601, 602, 612, 679, 680, 682, 684, 685, 696, 697, 708, 736, 742, 743, 782, 783, 826, 840, 841, 843, 846, 847, 859, 867, 870], "property_nam": 197, "property_valu": 205, "proport": [214, 216, 217, 219, 305, 309, 321, 702, 723], "propos": [162, 197, 205, 245, 394, 481, 639, 675, 842, 844, 859, 861, 864, 871], "protect": [700, 847], "protein": [25, 52, 165, 175, 397, 696, 742, 782, 846], "proteom": 867, "protest": 164, "prototyp": [22, 710], "proven": 826, "provid": [0, 3, 4, 5, 7, 8, 9, 21, 34, 35, 73, 80, 89, 93, 113, 131, 138, 139, 140, 165, 168, 178, 179, 205, 208, 209, 213, 214, 216, 219, 220, 287, 293, 295, 299, 302, 305, 310, 312, 315, 317, 318, 333, 340, 347, 352, 391, 416, 421, 427, 434, 436, 438, 440, 461, 562, 573, 575, 580, 581, 609, 646, 674, 687, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 707, 710, 711, 717, 718, 720, 723, 724, 725, 728, 733, 734, 735, 736, 738, 829, 833, 834, 835, 837, 838, 842, 843, 844, 845, 846, 847, 850, 851, 854, 858, 859, 861, 864, 870, 871, 876, 877], "provis": [699, 704], "proxi": 133, "prune": [435, 437], "pseudo": [207, 391, 418], "pseudocod": 870, "psi": [457, 507, 713, 757, 798], "psi_": 507, "psutil": [834, 835, 837, 840, 841], "pt": [231, 320, 703, 840, 841, 850], "ptc": 165, "pth": [294, 867], "pub": 162, "public": [22, 150, 176, 860], "publish": 830, "pubm": [25, 176, 697, 743, 783, 830], "pull": [0, 21, 92, 860, 864], "purchas": [135, 136, 137, 289, 764, 806, 827], "pure": [178, 179, 714, 730], "purl": 133, "purpos": [4, 240, 295, 303, 307, 571, 693, 695, 697, 711, 722, 734, 861], "push": [4, 21, 830], "put": [22, 240, 359, 360, 431, 452, 562, 691, 721, 725, 726, 840, 841, 842, 870, 876], "py": [21, 22, 199, 200, 703, 704, 736, 748, 776, 788, 789, 819, 823, 826, 832, 834, 837, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 851, 853, 854, 855, 857, 858, 859, 860, 861, 863, 864, 866, 867, 869, 870, 871, 873, 876, 877, 879], "pyarrow": [703, 788], "pydant": 148, "pyg": [307, 312, 830], "pygcn": 858, "pyglayerdata": 312, "pyglayerheterodata": 312, "pygraphviz": 864, "pylibcugraphop": [400, 401, 402], "pylint": 21, "pylintrc": 21, "pypa": 835, "pypi": 835, "pyplot": [825, 860, 864, 867, 870], "python": [0, 8, 21, 22, 34, 53, 92, 100, 203, 205, 206, 210, 400, 401, 402, 698, 699, 700, 703, 707, 710, 744, 784, 786, 792, 822, 823, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "python3": [21, 704, 748, 789, 823, 826, 834, 835, 837, 840, 841, 854, 858, 861], "pythonpath": 21, "python\uc758": 784, "pytorch": [3, 4, 5, 6, 8, 9, 10, 13, 14, 21, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 186, 196, 210, 213, 214, 215, 216, 219, 235, 246, 247, 248, 249, 250, 263, 264, 265, 266, 287, 291, 295, 319, 320, 340, 341, 345, 346, 347, 357, 363, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 482, 483, 546, 553, 564, 575, 577, 640, 642, 646, 647, 648, 656, 662, 668, 673, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 689, 691, 697, 699, 700, 710, 724, 726, 728, 729, 730, 731, 733, 736, 738, 767, 769, 772, 776, 778, 785, 786, 806, 810, 811, 812, 813, 814, 819, 821, 822, 824, 825, 826, 827, 829, 830, 831, 833, 834, 835, 837, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 862, 864, 865, 867, 868, 870, 871, 872, 874, 876, 877], "pytorchcaffe2": 851, "pytorch\u7684nn\u6a21\u5757": 769, "pytorch\u7684tensor\u7c7b": 754, "pytorch\ub294": 812, "pytorch\ub85c": 810, "pytorch\ub97c": 817, "pytorch\uc640": [783, 786], "pytorch\uc758": [795, 812, 815], "pytz": [834, 837, 840, 841], "pyyaml": 148, "py\u548claunch": 748, "py\u5e94\u8be5\u4f7f\u7528\u76f8\u540c\u7684ip\u914d\u7f6e\u6587\u4ef6": 748, "q": [147, 174, 180, 423, 444, 450, 566, 571, 826, 871], "q_": [394, 426], "q_i": 871, "q_j": 871, "q_p": 174, "q_proj": 826, "q_t": 444, "qi": [858, 860], "qingbiao": 756, "qingbiaoli": 756, "qipeng": [864, 871], "qk": [450, 826], "qkv": 871, "qm7b": [25, 177, 697, 743, 783], "qm7bdata": [697, 743, 783], "qm7bdataset": [694, 697, 741, 743, 781, 783], "qm7bdataset\u6e90\u4ee3\u7801": 743, "qm9": 178, "qm9dataset": 179, "qm9edg": 179, "qm9edgedataset": 178, "qquad": 860, "qualiti": [214, 871], "quan": [858, 871], "quantiti": [245, 481], "quantum": [177, 178, 179, 398, 424], "queri": [4, 13, 36, 37, 38, 45, 47, 48, 51, 54, 55, 56, 57, 58, 60, 61, 75, 77, 79, 80, 81, 82, 87, 88, 89, 90, 105, 107, 301, 307, 710, 826, 871], "question": [180, 860], "queue": [4, 235, 294], "queue_siz": 4, "quick": [22, 710, 829], "quickli": 844, "quickstart": 828, "quit": [22, 698, 727, 861], "quot": [695, 843], "r": [14, 60, 87, 118, 119, 163, 178, 179, 319, 322, 394, 408, 411, 413, 414, 426, 439, 441, 442, 443, 448, 459, 460, 505, 508, 553, 656, 703, 713, 716, 727, 732, 757, 772, 798, 816, 825, 826, 827, 829, 867, 870, 871], "r0": [299, 701, 787], "r1": [299, 701, 787], "r2": [178, 179, 299, 701, 787], "r3": [299, 701, 787], "r_": [397, 655, 732, 772, 816, 829], "r_1": 655, "r_2": 655, "r_g": 553, "r_i": [401, 457], "r_j": [457, 655], "r_k": 397, "r_t": [214, 299, 444, 569], "radial": 397, "radiu": [243, 439, 553], "radius_proj": 860, "rais": [21, 48, 89, 109, 116, 131, 145, 177, 178, 179, 183, 287, 340, 348, 395, 407, 410, 411, 412, 413, 414, 415, 418, 421, 428, 639, 640, 641, 667, 675, 694, 701, 730, 731, 741, 770, 771, 781, 814, 815], "ram": [14, 311, 703], "rand": [6, 9, 128, 129, 214, 216, 219, 407, 408, 410, 411, 413, 414, 418, 419, 421, 424, 427, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 455, 457, 464, 651, 652, 707, 728, 751, 792, 812, 840, 841], "rand_bipartit": 555, "rand_graph": [9, 393, 408, 411, 419, 422, 441, 442, 443, 444, 445, 446, 447, 448, 449, 458, 459, 460, 463, 554, 654, 660, 661, 662, 673, 674, 728, 812], "randint": [394, 459, 460, 720, 733, 734, 737, 773, 774, 777, 817, 818, 820, 840, 841], "randn": [5, 47, 75, 118, 119, 121, 391, 392, 394, 417, 422, 433, 434, 435, 458, 459, 460, 615, 616, 622, 625, 633, 657, 673, 674, 676, 708, 709, 733, 734, 752, 753, 763, 773, 774, 793, 794, 805, 817, 818, 829, 843, 870], "random": [0, 6, 13, 142, 143, 161, 162, 163, 172, 173, 174, 183, 189, 190, 197, 198, 205, 207, 214, 217, 240, 245, 295, 299, 303, 305, 337, 389, 393, 407, 408, 411, 413, 414, 421, 424, 441, 442, 443, 444, 445, 446, 447, 448, 449, 481, 554, 555, 556, 564, 566, 567, 568, 569, 574, 671, 674, 703, 722, 727, 733, 734, 773, 774, 817, 818, 826, 840, 841, 845, 861, 876], "random_flip": [639, 675], "random_partit": 703, "random_se": [161, 162, 163, 197, 205, 299, 569], "random_st": [142, 143, 173, 189, 190, 207, 876], "random_walk": [567, 721], "random_walk_with_restart": 568, "randomli": [6, 142, 143, 147, 171, 174, 189, 190, 207, 209, 210, 213, 226, 227, 232, 239, 241, 242, 299, 459, 460, 569, 570, 571, 639, 654, 660, 661, 662, 669, 675, 703, 733, 805, 817, 833, 845], "randomst": [183, 207], "randomwalkp": 13, "rang": [4, 128, 129, 145, 164, 165, 168, 172, 186, 210, 213, 240, 300, 312, 319, 323, 338, 339, 359, 389, 432, 433, 434, 435, 436, 451, 456, 463, 547, 565, 571, 580, 581, 647, 689, 691, 697, 699, 701, 703, 727, 728, 734, 736, 737, 738, 743, 745, 774, 776, 777, 778, 783, 785, 812, 818, 819, 820, 821, 824, 825, 826, 834, 835, 837, 842, 844, 845, 846, 850, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "range_tensor": 304, "rangepartitionbook": 4, "rangl": [178, 179], "rank": [4, 232, 239, 361, 447, 670, 835, 844, 850, 876, 877], "rapid": 859, "rare": [226, 565], "rate": [4, 10, 14, 137, 161, 163, 173, 290, 300, 396, 400, 401, 402, 406, 411, 413, 414, 419, 423, 426, 427, 430, 431, 432, 433, 445, 446, 691, 734, 859], "rather": [142, 143, 189, 190, 827, 860, 867], "ratio": [138, 139, 140, 161, 163, 173, 197, 198, 205, 244, 299, 403, 425, 654], "raw": [0, 95, 96, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 246, 341, 345, 346, 454, 482, 546, 559, 560, 577, 674, 692, 693, 695, 697, 703, 735, 779, 780, 830, 833, 840, 841, 847], "raw_dir": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 693, 694, 697, 740, 741, 743, 780, 781, 783], "raw_dir\u4e0b\u7684self": 741, "raw_dir\u6307\u5b9a\u7684\u503c": 740, "raw_path": [156, 694, 697, 741, 743, 781, 783], "rb": [426, 855, 859], "rbf": 397, "rbf_kernel_mean": 397, "rbf_kernel_sc": 397, "rbrace": [186, 713, 757, 763, 798, 805], "rcmk": 562, "rcount": [858, 861], "rdf": [132, 133, 144, 170, 859], "rdfdata": [697, 743, 783], "rdfgraphdataset": [132, 133, 144, 170], "re": [6, 95, 96, 134, 137, 138, 139, 140, 148, 149, 155, 171, 173, 180, 182, 185, 187, 188, 193, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 410, 412, 413, 414, 415, 416, 417, 418, 420, 421, 424, 426, 427, 428, 429, 430, 431, 560, 562, 697, 830, 835, 840, 841, 877], "reach": [718, 864, 871], "reachabl": 358, "read": [1, 3, 4, 5, 13, 21, 168, 183, 207, 290, 294, 296, 297, 298, 300, 311, 319, 324, 391, 695, 700, 702, 703, 722, 822, 829, 830, 845, 847, 854, 855, 864, 871, 877], "read_async": [290, 294, 296, 300, 319], "read_async_num_stag": [290, 294, 296, 300, 319], "read_csv": 847, "read_into_memori": 294, "reader": [858, 861], "readi": [719, 840, 841, 854, 867], "readm": [21, 210], "readonli": [116, 640], "readout": [446, 449, 557, 558, 846], "readout_edg": [353, 355, 558, 637], "readout_nod": [354, 356, 557, 638, 736, 776, 819], "real": [159, 162, 295, 689, 703, 788, 825, 826, 836, 843, 867, 871], "realiz": 20, "realli": [137, 171, 180, 182, 188, 322, 450, 451, 453, 455, 456], "reason": [21, 164, 166, 295, 700, 722], "reassign": 702, "recal": [14, 826, 836, 859, 861, 871], "receiv": [20, 53, 100, 221, 295, 396, 405, 421, 683, 684, 685, 686, 714, 844, 867], "recent": [162, 300, 331, 826, 871], "recip": [432, 433, 434, 435, 436, 437], "recogn": [731, 771, 815], "recognit": 174, "recommand": 27, "recommend": [5, 21, 22, 34, 73, 93, 94, 100, 113, 120, 125, 163, 173, 210, 249, 295, 404, 405, 406, 564, 647, 692, 693, 697, 698, 700, 702, 703, 706, 714, 715, 721, 734, 737, 823, 834, 835, 837, 839, 840, 841, 844, 845, 850, 851, 854, 858, 859, 860, 861, 864, 867, 870, 871, 876], "reconstruct": 859, "record": [56, 132, 145, 649, 825, 864, 867], "recov": [703, 846, 859], "recreat": 829, "recurr": [164, 166, 420, 444, 871, 872, 874], "recurs": [21, 359, 360, 823], "reddit": [25, 181, 728, 812, 830], "redditbinari": 165, "redditdata": [697, 743, 783], "redditdataset": [25, 728, 812], "redditmulti5k": 165, "redistribut": [822, 823], "reduc": [13, 20, 73, 91, 92, 93, 94, 100, 113, 245, 263, 264, 265, 266, 305, 310, 311, 481, 507, 509, 548, 549, 550, 551, 552, 603, 604, 605, 607, 703, 713, 714, 716, 722, 728, 798, 799, 802, 812, 815, 835, 836, 844, 851, 858, 859, 861, 864, 871, 877], "reduce_func": [73, 91, 92, 93, 94, 100, 113, 263, 264, 265, 266, 548, 549, 550, 551, 552, 714, 716, 717, 758, 760, 761, 799, 802, 803, 844, 861, 864, 867, 871], "reduce_op": 507, "reduceop": [835, 877], "reducer\ub294": 802, "reduct": [9, 73, 91, 92, 93, 94, 100, 113, 214, 305, 509, 600, 603, 604, 605, 716, 732, 802, 816, 844, 864], "redund": [295, 565], "ref": [144, 747], "refer": [4, 9, 21, 22, 24, 44, 72, 104, 135, 136, 146, 147, 148, 151, 152, 153, 159, 162, 164, 166, 169, 174, 175, 177, 178, 179, 181, 183, 195, 210, 214, 215, 216, 240, 241, 295, 299, 321, 394, 426, 441, 442, 443, 444, 445, 447, 448, 452, 506, 507, 564, 570, 641, 689, 691, 697, 700, 707, 711, 719, 720, 721, 725, 726, 727, 737, 738, 764, 768, 806, 811, 822, 824, 825, 827, 834, 835, 837, 840, 841, 843, 844, 846, 851, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "refere": 871, "reflect": [22, 26, 70, 149, 185, 307, 312, 825], "refresh": [827, 837], "regard": [416, 421, 427, 485, 486, 487, 488, 628, 735, 829], "regardless": [4, 80, 117, 130, 234, 299, 312, 352, 358, 702, 703, 867], "regim": 722, "region": [23, 825], "regist": [22, 432, 433, 434, 435, 436, 437, 730], "register_object": 22, "registr": 729, "registri": 22, "regress": [2, 138, 177, 178, 179, 195, 211, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 697, 720, 731, 733, 737, 783, 817, 846], "regression\ub3c4": 821, "regular": [171, 394, 401, 408, 426, 434, 436, 465, 700, 859], "regularli": 876, "reiniti": [389, 393, 400, 401, 402, 404, 405, 406, 408, 411, 413, 414, 415, 418, 420, 421, 424, 427, 428, 429, 444, 458, 459, 460, 462, 730, 814, 861], "reject": [565, 655], "rel": [95, 96, 311, 434, 435, 437, 459, 460, 697, 703, 704, 720, 723, 725, 736, 738, 743, 764, 766, 768, 776, 778, 783, 806, 809, 811, 819, 821, 839, 840, 841], "rel_data_path": [748, 789], "rel_emb": [459, 460], "rel_graph": [732, 772, 816], "rel_nam": [434, 720, 723, 725, 734, 736, 737, 738, 764, 766, 768, 774, 776, 777, 778, 806, 809, 811, 818, 819, 820, 821], "rel_project": 460, "rel_typ": [25, 164, 166], "relabel": [4, 6, 122, 125, 240, 246, 249, 323, 341, 345, 346, 482, 546, 711, 727], "relabel_idx": 6, "relabel_nod": [49, 106, 157, 158, 191, 246, 341, 345, 346, 482, 546, 763, 805], "relat": [1, 13, 18, 21, 26, 52, 59, 113, 117, 122, 125, 126, 131, 132, 133, 144, 157, 158, 161, 162, 163, 170, 191, 203, 206, 220, 246, 249, 250, 287, 291, 299, 302, 312, 313, 315, 340, 341, 345, 346, 363, 391, 394, 401, 403, 425, 426, 457, 459, 460, 465, 482, 546, 554, 555, 655, 691, 695, 697, 703, 705, 706, 711, 716, 720, 731, 732, 796, 802, 829, 832, 833, 834, 837, 840, 841, 861, 862, 863, 871, 874], "relation_submodul": 391, "relationship": [150, 154, 176, 568, 720, 827, 845, 859, 860, 862, 874], "releas": [6, 823, 834, 835, 837, 840, 841], "relev": [689, 737], "relgraphconv": [401, 647], "relgraphconvlay": [738, 778, 821], "reli": [728, 833, 854], "reliabl": 22, "reload": [132, 133, 135, 136, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 311, 693, 780], "relu": [121, 399, 404, 410, 416, 417, 419, 437, 453, 691, 699, 720, 722, 723, 724, 725, 727, 728, 730, 731, 736, 738, 745, 764, 765, 766, 767, 768, 770, 771, 776, 778, 785, 806, 808, 809, 810, 811, 814, 815, 819, 821, 824, 825, 826, 827, 829, 834, 835, 837, 842, 844, 845, 846, 854, 855, 858, 859, 860, 861, 876, 877], "relubackward0": 416, "remain": [100, 180, 181, 305, 310, 311, 560, 718, 727, 851, 861], "remaind": 871, "remap": 703, "remot": [21, 145, 177, 178, 179, 693, 694], "remov": [95, 96, 118, 119, 130, 135, 136, 151, 152, 153, 157, 168, 186, 192, 246, 289, 341, 345, 346, 546, 559, 560, 561, 567, 649, 657, 672, 724, 725, 845, 871], "remove_edg": [27, 28, 96, 114, 115, 560, 845], "remove_nod": [27, 28, 95, 114, 115, 559], "remove_self_loop": 117, "removeselfloop": 13, "renam": [127, 650], "render": 21, "reorder": [150, 154, 160, 176, 194, 423, 562, 571, 697, 783], "reorder_graph": [150, 154, 160, 176, 194, 423, 426, 697, 743, 783], "reparameter": 431, "repeat": [6, 128, 129, 142, 322, 323, 345, 346, 454, 738, 840, 841, 867, 870, 876], "repeat_interleav": [128, 129, 328, 723, 737, 766, 777, 809, 820], "repeatedli": [393, 737, 871], "replac": [21, 100, 131, 216, 219, 221, 226, 241, 242, 287, 294, 299, 305, 310, 317, 318, 319, 320, 323, 338, 339, 340, 452, 485, 487, 490, 492, 511, 513, 517, 519, 525, 527, 531, 533, 554, 555, 565, 569, 570, 571, 639, 649, 675, 691, 700, 701, 703, 723, 724, 725, 746, 766, 786, 787, 809, 826, 829, 844, 845, 858, 870, 871, 872, 874], "replic": 236, "replica": [295, 835, 877], "repo": [21, 23, 694, 703, 741, 781, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 871], "report": [14, 861], "repositori": [21, 823, 830, 859], "repres": [3, 5, 21, 22, 26, 31, 32, 51, 61, 88, 118, 119, 126, 131, 134, 135, 136, 149, 151, 152, 153, 155, 159, 162, 173, 184, 185, 187, 188, 192, 193, 220, 250, 287, 289, 299, 302, 307, 312, 315, 323, 328, 333, 334, 339, 340, 391, 397, 398, 404, 405, 406, 418, 421, 425, 427, 434, 435, 436, 437, 565, 571, 600, 647, 655, 695, 702, 706, 710, 714, 716, 720, 725, 727, 731, 732, 737, 827, 829, 832, 836, 840, 841, 842, 844, 845, 846, 848, 849, 859, 861, 864, 870], "represensit": 14, "represent": [0, 32, 62, 63, 131, 155, 187, 193, 214, 215, 216, 220, 287, 305, 307, 317, 330, 340, 389, 391, 393, 397, 398, 402, 406, 422, 427, 446, 449, 450, 451, 453, 455, 456, 458, 462, 556, 557, 558, 569, 585, 587, 588, 595, 651, 652, 671, 716, 718, 720, 722, 727, 731, 734, 736, 737, 738, 808, 809, 818, 819, 820, 826, 829, 836, 842, 844, 845, 846, 855, 858, 859, 860, 862, 864, 865, 867, 870, 871, 872, 874], "representation\ub4e4\uacfc": 818, "representation\ub4e4\ub85c": 818, "representation\ub4e4\ub85c\ubd80\ud130": 806, "representation\ub4e4\uc744": [805, 806, 808, 809, 819], "representation\ub4e4\uc758": [809, 818, 821], "representation\ub4e4\uc774": [805, 811], "representation\uc740": [815, 820], "representation\uc744": [804, 806, 808, 811, 818, 819], "representation\uc774\uace0": 819, "representation\uc774\ub2e4": 820, "reproduc": [295, 303], "repurpos": [138, 139, 140, 734], "reput": 145, "request": [21, 324, 700, 834, 835, 837, 840, 841, 847], "requir": [4, 5, 9, 10, 21, 51, 55, 60, 61, 66, 87, 88, 90, 107, 122, 130, 148, 210, 216, 217, 220, 290, 292, 293, 294, 296, 300, 311, 319, 400, 401, 402, 403, 416, 417, 424, 427, 432, 433, 458, 462, 506, 507, 553, 562, 695, 699, 700, 701, 702, 703, 709, 710, 714, 718, 719, 725, 726, 728, 731, 815, 824, 825, 826, 827, 829, 834, 835, 836, 837, 839, 840, 841, 842, 845, 846, 854, 860, 864, 871, 877], "requires_grad": [9, 864], "requires_grad_": [9, 118, 119, 860], "research": [826, 859, 860, 861, 862, 864, 867, 871, 874], "reserv": 646, "reset": [394, 463, 730], "reset_paramet": [389, 390, 393, 394, 400, 401, 402, 404, 405, 406, 408, 411, 413, 414, 415, 418, 420, 421, 424, 427, 428, 429, 444, 450, 458, 459, 460, 462, 727, 730, 770, 814, 861], "reshap": [95, 96, 117, 294, 300, 301, 303, 304, 319, 559, 560, 561, 657, 720, 826, 829, 840, 841, 870], "reshuffl": [4, 240, 359, 547, 788], "resid": [290, 294, 296, 300, 311, 319], "residu": [400, 403, 411, 413, 414, 415, 418, 419, 422, 424, 425, 826, 871], "resolv": 21, "resourc": [2, 311, 699, 718, 726, 835, 877], "respect": [5, 95, 96, 140, 147, 184, 214, 215, 216, 219, 240, 243, 305, 312, 316, 317, 389, 393, 409, 425, 433, 435, 506, 507, 559, 560, 562, 565, 577, 606, 626, 702, 703, 711, 714, 715, 724, 826, 839, 840, 841, 845, 850, 851, 860, 867, 871], "respons": [299, 302, 305, 308, 310, 317, 318, 699, 700, 854], "rest": [6, 95, 96, 141, 240, 292, 297, 305, 310, 341, 345, 346, 546, 641, 693, 699, 731, 736, 828, 834, 845, 847], "restart": [568, 670, 674, 854], "restart_prob": [567, 568], "restaur": 163, "restrict": [44, 104, 118, 119, 126, 131, 249, 250, 287, 340, 851, 867], "resuffl": [359, 547], "result": [6, 9, 20, 21, 51, 56, 61, 70, 73, 88, 95, 96, 116, 118, 119, 122, 125, 126, 130, 197, 198, 209, 214, 226, 227, 240, 241, 242, 246, 247, 249, 250, 290, 292, 294, 296, 299, 300, 305, 312, 319, 324, 332, 339, 341, 344, 345, 346, 347, 350, 358, 361, 391, 397, 408, 428, 429, 458, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 554, 555, 557, 558, 559, 560, 562, 563, 566, 568, 569, 570, 571, 572, 576, 577, 578, 579, 600, 603, 604, 605, 614, 615, 622, 625, 633, 640, 641, 646, 647, 648, 649, 663, 664, 665, 670, 674, 683, 687, 700, 702, 703, 705, 706, 707, 709, 714, 716, 726, 727, 732, 736, 738, 799, 802, 825, 829, 830, 835, 844, 845, 847, 851, 854, 855, 860, 861, 871], "result_dict": [766, 809], "ret": [403, 425, 858, 861, 871], "retain": [56, 711, 796, 829], "retri": 200, "retriev": [22, 125, 126, 192, 234, 249, 250, 295, 390, 556, 577, 646, 663, 664, 665, 670, 671, 674, 679, 680, 681, 682, 736, 843, 845, 847, 860], "return": [0, 4, 5, 6, 10, 20, 22, 26, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 100, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 207, 209, 214, 217, 218, 219, 220, 221, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 288, 290, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 328, 330, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 357, 358, 359, 360, 361, 362, 363, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 656, 657, 666, 668, 672, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 689, 695, 696, 697, 698, 700, 701, 703, 714, 715, 716, 719, 720, 722, 723, 724, 725, 727, 728, 731, 734, 736, 737, 738, 742, 743, 744, 746, 758, 759, 760, 763, 764, 765, 766, 767, 768, 771, 774, 776, 777, 778, 782, 783, 784, 786, 787, 799, 801, 802, 805, 806, 808, 809, 810, 811, 812, 815, 818, 819, 820, 821, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 842, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "return_count": [111, 647, 649, 677], "return_eid": [566, 568], "return_eigv": 348, "return_label": 230, "return_map": [240, 703, 788, 854], "return_path": [455, 456, 576, 689], "return_uv": 48, "returning_indices_and_original_edge_ids_are_opt": 299, "retweet": 159, "reuiqr": 458, "reus": [701, 720, 737, 837], "reusabl": 731, "rev": 788, "rev_plai": [433, 656], "rev_r": 656, "rev_rev_plai": 433, "reveal": [245, 481], "revers": [116, 123, 124, 130, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 170, 176, 191, 192, 220, 229, 230, 289, 302, 312, 315, 322, 327, 349, 422, 549, 551, 552, 562, 653, 656, 687, 695, 697, 703, 719, 720, 743, 783, 806, 843, 860], "reverse_edg": [150, 154, 176], "reverse_eid": [220, 764, 806], "reverse_etyp": [220, 764, 806], "reverse_etypes_map": [322, 327, 720], "reverse_id": [220, 764, 806], "reverse_typ": [220, 764, 806], "revert": 687, "review": [21, 135, 136, 137, 161, 162, 163, 194], "revis": 871, "revisit": 566, "reweight": 430, "rewond": 756, "rewrit": 724, "rfeat": 460, "rg": [439, 562, 563], "rgcn": [720, 722, 725, 734, 736, 737, 738, 764, 765, 766, 774, 776, 777, 778, 806, 808, 809, 811, 818, 819, 820, 821, 859], "rgcnlayer": 859, "rgcn\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u4e0e\u5b83\u975e\u5e38\u76f8\u4f3c": 768, "rgcn\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6": 778, "rgcn\u7684\u5b9e\u73b0": 768, "rh": 506, "rhel": 823, "rho": [431, 507, 713, 757, 763, 798, 805, 860], "rhs_data": [506, 507], "rhs_field": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "rhs_target": 506, "rich": 162, "richer": 870, "rid": 722, "right": [4, 5, 118, 150, 351, 396, 399, 402, 405, 408, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 423, 424, 427, 442, 443, 457, 462, 506, 507, 508, 639, 674, 675, 694, 700, 701, 713, 715, 719, 720, 725, 731, 736, 737, 757, 763, 764, 766, 768, 771, 777, 798, 805, 806, 809, 811, 815, 820, 829, 836, 844, 845, 859, 861, 864, 871], "rightarrow": [363, 860, 867], "riski": 145, "rng": 183, "rnn": [451, 689, 871, 872, 874], "robust": [197, 205], "roc_auc_scor": [834, 845, 855], "rocauc": 826, "rock": 864, "role": [182, 243, 432, 433, 434, 435, 436, 437], "roll": [299, 569], "rollout": [435, 437], "roman": 182, "room": 714, "root": [159, 217, 289, 412, 421, 455, 456, 576, 689, 823, 824, 825, 827, 835, 864], "rossmann": 408, "rotat": 179, "roughli": [191, 240, 397, 702, 854, 860], "round": [91, 92, 738, 867], "rout": [870, 872, 874], "routin": [22, 843], "routing_num": 870, "row": [4, 27, 31, 32, 118, 119, 131, 150, 154, 176, 287, 290, 296, 298, 299, 300, 307, 312, 319, 323, 330, 340, 347, 390, 404, 405, 406, 450, 453, 463, 553, 557, 558, 575, 585, 587, 588, 593, 600, 603, 604, 605, 606, 607, 615, 618, 619, 620, 626, 628, 632, 651, 652, 673, 674, 700, 702, 708, 724, 788, 793, 810, 827, 829, 847, 854, 855, 860], "row1": 634, "row2": 634, "row_id": 727, "row_sort": 287, "rowfeatnorm": 13, "rpc": 4, "rr": [322, 756], "rst": [391, 727, 731, 732, 771, 772, 815, 816], "rtype": [294, 395, 396, 397, 398, 403, 406, 410, 412, 415, 416, 418, 420, 421, 425, 427, 428, 429, 430, 431, 458, 459, 462, 600], "rule": [21, 220, 736, 860, 861, 867, 871], "run": [4, 10, 14, 21, 214, 231, 235, 240, 292, 299, 305, 310, 332, 430, 432, 433, 434, 435, 436, 437, 569, 571, 694, 699, 700, 703, 718, 726, 728, 732, 823, 826, 835, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "run_epoch": 871, "runnabl": 21, "runtim": [0, 4, 14, 22, 156, 688, 700, 701, 703, 834, 837, 850, 851], "runtimeerror": 183, "runtimewarn": [858, 861], "russia": [164, 859], "rv": 22, "rvert": 457, "rvert_2": [730, 770, 814], "rw": [674, 854], "r\uc5d0": 802, "s2": 444, "s3": [21, 23, 289, 324, 352, 573, 697, 707, 743, 783, 792], "s_": 829, "s_c": 860, "s_i": 871, "s_j": [870, 871], "s_norm": 870, "sab": 446, "safe": [159, 711], "sage": [406, 699, 722, 723, 727, 734, 737, 738, 745, 774, 777, 778, 785, 818, 820, 821, 834, 835, 850, 854, 855, 877], "sageconv": [391, 406, 722, 723, 724, 727, 729, 730, 731, 738, 767, 769, 770, 771, 778, 810, 813, 814, 815, 821, 834, 835, 836, 837, 844, 845, 854, 855, 877], "sageconv\u7684\u6570\u5b66\u516c\u5f0f\u5982\u4e0b": 771, "sageconv\uc5d0\uc11c": 815, "sageconv\uc758": [814, 815], "sai": [21, 693, 718, 837], "said": [211, 212, 213], "same": [0, 3, 4, 5, 8, 9, 20, 28, 34, 35, 42, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 68, 70, 74, 87, 88, 91, 92, 93, 94, 100, 103, 108, 113, 116, 118, 119, 120, 121, 122, 130, 131, 134, 156, 161, 163, 181, 188, 197, 200, 205, 208, 209, 210, 211, 212, 214, 216, 219, 230, 232, 234, 239, 240, 241, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 295, 296, 298, 299, 300, 301, 304, 305, 310, 319, 320, 332, 334, 340, 341, 345, 346, 347, 350, 358, 359, 362, 391, 393, 395, 396, 403, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 421, 422, 424, 425, 427, 438, 439, 441, 443, 447, 448, 450, 457, 461, 462, 464, 482, 483, 546, 547, 553, 559, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 576, 578, 579, 580, 581, 583, 587, 588, 606, 626, 636, 640, 641, 646, 647, 649, 657, 672, 689, 694, 695, 697, 699, 700, 701, 702, 703, 706, 707, 708, 709, 710, 711, 716, 720, 721, 723, 725, 727, 728, 729, 731, 732, 734, 736, 737, 738, 753, 781, 794, 796, 802, 805, 808, 823, 826, 829, 835, 836, 840, 843, 844, 845, 847, 850, 854, 855, 858, 859, 860, 861, 864, 867, 871, 876, 877], "sampl": [3, 6, 7, 9, 13, 14, 122, 130, 139, 146, 147, 160, 165, 168, 169, 172, 173, 174, 175, 181, 184, 186, 194, 195, 198, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 231, 234, 235, 241, 242, 245, 293, 295, 299, 302, 303, 305, 309, 310, 312, 313, 314, 315, 317, 318, 321, 322, 327, 389, 393, 394, 434, 435, 436, 437, 444, 481, 506, 580, 581, 614, 625, 641, 693, 695, 699, 701, 722, 726, 727, 731, 736, 737, 746, 763, 786, 805, 806, 807, 826, 829, 833, 834, 835, 837, 839, 845, 846, 851, 859, 860, 864, 867, 868, 871, 874, 877], "sample_bia": [434, 436], "sample_block": [699, 700, 745, 746, 763, 785, 786, 805], "sample_fronti": [763, 805], "sample_in_subgraph": 302, "sample_layer_neighbor": [299, 305], "sample_log_prob": 867, "sample_neg": 309, "sample_negative_edges_uniform": 299, "sample_neighbor": [4, 214, 216, 241, 299, 302, 310, 315, 699, 700, 701, 719, 720, 721, 722, 723, 725, 726, 745, 746, 763, 785, 786, 787, 805, 807, 834, 835, 837, 877], "sample_neighbors_bias": [580, 581], "sample_point": 6, "sample_sparse_neighbor": 727, "sample_subgraph": [302, 315, 719, 727], "sample_uniform_neg": [310, 321, 723, 726, 834], "sampled_csc": [299, 302, 305, 310, 312, 313, 834, 837], "sampled_matric": 727, "sampled_matrix": 727, "sampled_subgraph": [302, 303, 305, 307, 310, 719, 727, 834, 837], "sampledsubgraph": [302, 307, 313, 315, 719], "sampledsubgraphimpl": [299, 305, 310, 312, 834, 837], "sampler": [7, 13, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 295, 302, 303, 305, 309, 310, 315, 317, 318, 400, 401, 402, 564, 565, 569, 699, 700, 704, 718, 721, 723, 727, 745, 746, 763, 764, 765, 766, 768, 785, 786, 805, 806, 807, 808, 809, 811, 833, 846, 850], "sampler1": 721, "sampler2": 721, "sampling_stag": 315, "samplinggraph": [293, 299, 306, 311, 720], "saniti": [131, 859], "satisfi": [53, 54, 423, 426, 583, 724, 834, 835, 837, 840, 841, 860, 871], "satisif": 120, "save": [0, 2, 4, 9, 23, 156, 206, 231, 240, 294, 319, 320, 336, 352, 573, 648, 663, 692, 693, 695, 702, 703, 707, 711, 714, 715, 716, 718, 728, 732, 734, 735, 738, 740, 744, 751, 780, 784, 788, 792, 802, 821, 824, 825, 827, 837, 840, 841, 842, 844, 845, 847, 850, 854, 867, 871], "save_dir": [156, 693, 740, 780], "save_graph": [172, 204, 352, 698, 707, 711, 744, 751, 755, 784, 792, 796, 843], "save_info": [698, 744, 784], "save_path": [138, 139, 140, 156, 693, 698, 740, 744, 780, 784], "save_tensor": 788, "sbm": [147, 174], "sbmdata": [697, 743, 783], "scalabl": [393, 454, 566, 674, 825, 830, 832, 833, 852, 853], "scalar": [6, 118, 119, 125, 214, 216, 219, 249, 304, 395, 407, 408, 411, 412, 413, 414, 421, 424, 427, 434, 436, 442, 600, 603, 604, 605, 607, 614, 617, 618, 619, 620, 623, 624, 632, 633, 706, 708, 735, 793, 809, 829, 845, 858, 860, 861, 870, 872, 874], "scalar_v": 829, "scale": [125, 134, 149, 185, 249, 351, 403, 421, 425, 457, 461, 480, 564, 703, 728, 812, 822, 826, 836, 845, 850, 851, 861, 871], "scale_const": 871, "scaled_exp": 871, "scaler": [403, 425, 616, 621, 728, 812], "scenario": [14, 22, 305, 310, 317, 318, 571, 701, 718, 736, 835], "scene": [411, 700], "schedul": [826, 833], "schema": [72, 234, 703, 711, 788], "scheme": [4, 47, 75, 95, 96, 117, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 246, 247, 341, 345, 346, 482, 483, 546, 559, 560, 561, 646, 660, 661, 668, 674, 687, 695, 702, 703, 708, 711, 752, 755, 793, 796, 843, 846, 847], "schnet": 398, "schwarzenegg": 864, "scienc": [151, 192, 289], "scientif": [150, 176, 860], "scientist\uac00": 797, "scikit": 850, "scipi": [9, 31, 118, 119, 126, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 562, 564, 707, 751, 792, 825, 829, 834, 835, 837, 840, 841, 845, 860], "scipy_fmt": [31, 580, 581], "scope": [70, 845, 858, 860], "score": [13, 389, 407, 408, 413, 414, 423, 442, 458, 459, 460, 462, 720, 734, 735, 737, 764, 766, 774, 777, 806, 809, 818, 820, 826, 829, 834, 837, 845, 855, 859, 861, 871], "score_neg": 855, "score_po": 855, "scorepredictor": [720, 764, 766, 806, 809], "scorer": [459, 460], "scrape": 191, "scratch": [142, 143, 189, 190, 389, 843, 858, 859, 861], "script": [4, 21, 699, 700, 703, 704, 823, 824, 825, 826, 842, 843, 844, 845, 846, 847, 850, 851, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "script_fold": [748, 789], "scriptobject": 299, "sddmm": [489, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 515, 516, 521, 522, 523, 524, 529, 530, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 614, 826, 829], "sdg\uc5d0\uc11c": 786, "seaborn": 870, "seal": 845, "seamlessli": [729, 833], "search": [123, 124, 229, 230, 347, 435, 437, 438, 440, 575, 737, 820, 822, 850, 861, 871], "search\uc640": 820, "second": [20, 130, 131, 210, 214, 215, 216, 219, 287, 299, 340, 348, 391, 464, 567, 568, 569, 575, 577, 622, 632, 641, 647, 703, 731, 736, 830, 836, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 860, 861, 864, 867, 870, 871, 872, 874, 876, 877], "second_label": 301, "second_se": 301, "section": [14, 21, 210, 214, 215, 216, 687, 689, 691, 692, 696, 697, 699, 700, 702, 703, 707, 713, 718, 722, 724, 731, 733, 734, 737, 738, 818, 820, 842, 845, 850, 854, 855, 860, 861, 877], "sector": 166, "secur": [834, 837, 840, 841], "see": [1, 4, 9, 20, 21, 44, 61, 66, 88, 89, 91, 104, 130, 131, 146, 169, 209, 210, 211, 212, 214, 216, 217, 220, 222, 223, 224, 225, 230, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 294, 296, 300, 319, 340, 347, 400, 401, 408, 423, 426, 432, 433, 442, 444, 449, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 580, 581, 585, 587, 588, 595, 618, 619, 620, 627, 629, 630, 631, 641, 647, 693, 695, 697, 700, 706, 707, 708, 710, 711, 714, 720, 722, 723, 724, 725, 733, 736, 738, 823, 825, 826, 834, 836, 837, 840, 841, 843, 844, 845, 846, 847, 854, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "seed": [4, 142, 143, 161, 162, 163, 172, 173, 183, 189, 190, 197, 198, 205, 207, 208, 210, 213, 214, 216, 219, 242, 295, 299, 301, 302, 303, 304, 305, 307, 310, 311, 315, 317, 318, 321, 327, 445, 554, 555, 564, 568, 569, 570, 700, 701, 719, 720, 722, 723, 726, 727, 746, 786, 787, 826, 834, 837, 839, 840, 841, 854, 860, 876], "seed2_contribut": [299, 569], "seed_nod": [216, 301, 719, 763, 805], "seeds_follow": [301, 303], "seeds_label": 720, "seeds_lik": [301, 303], "seeds_pre_time_window": [299, 302, 315], "seeds_timestamp": [299, 302, 315], "seem": [397, 860, 861], "seen": [725, 738, 830, 858, 859, 860, 861, 871], "seg": [440, 509, 575], "segal": 864, "seglen": 509, "seglen_a": 508, "segment": [13, 122, 135, 136, 508, 509, 580, 581, 687], "segmentmm": 13, "segmentreducebackward": [442, 449], "select": [6, 21, 56, 142, 143, 147, 171, 174, 182, 189, 190, 209, 210, 217, 240, 241, 242, 299, 305, 310, 317, 318, 347, 403, 425, 434, 436, 438, 440, 447, 450, 451, 453, 564, 569, 570, 571, 572, 573, 575, 589, 649, 677, 718, 722, 728, 805, 823, 825, 829, 833, 836, 837, 867], "self": [26, 62, 63, 116, 117, 156, 162, 164, 165, 181, 218, 220, 226, 302, 312, 315, 347, 395, 401, 405, 407, 410, 411, 413, 414, 415, 418, 421, 422, 426, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 449, 452, 464, 553, 561, 565, 575, 639, 657, 672, 675, 691, 693, 694, 695, 697, 698, 701, 702, 703, 706, 716, 719, 720, 722, 723, 724, 725, 727, 728, 730, 731, 732, 734, 736, 737, 738, 740, 741, 743, 744, 760, 763, 764, 765, 766, 767, 768, 770, 771, 772, 774, 776, 777, 778, 780, 781, 783, 784, 791, 802, 805, 806, 808, 809, 810, 811, 812, 814, 815, 816, 818, 819, 820, 821, 824, 825, 826, 827, 829, 834, 835, 837, 842, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "self_attn": 871, "self_loop": [165, 181, 395, 401, 407, 410, 411, 413, 414, 415, 418, 421, 426, 428, 432, 436, 437, 439, 553, 846, 876], "sell": [391, 706, 791], "seller": 706, "semant": [5, 9, 132, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 735, 864, 871], "semi": [140, 147, 395, 405, 421, 663, 703, 722, 788, 808, 842, 858, 860, 867], "send": [53, 73, 91, 94, 100, 113, 421, 423, 736, 861, 867, 871], "send_and_recv": [0, 91, 871], "send_sourc": 100, "sent": [421, 843, 844, 870, 871], "sentenc": [182, 184, 864, 865, 867, 871, 872, 874], "sentiment": [184, 864, 867], "separ": [4, 142, 143, 171, 180, 347, 398, 695, 702, 703, 726, 732, 736, 738, 823, 837, 840, 846, 851, 858], "septemb": 181, "sequenc": [54, 121, 131, 207, 287, 340, 357, 389, 393, 420, 442, 444, 659, 865, 867, 871, 874], "sequenti": [91, 92, 305, 317, 655, 723, 826, 834, 867], "seri": [711, 836, 837, 860], "serial": [455, 834, 837, 840, 841], "serv": [290, 299, 300, 691, 699, 724, 859], "server": [4, 21, 145, 177, 178, 179, 235, 693, 694, 699, 700, 701, 704, 855], "servic": [21, 159, 293, 699, 700], "set": [0, 1, 4, 6, 7, 10, 21, 23, 43, 44, 45, 46, 51, 68, 70, 72, 74, 77, 79, 82, 92, 101, 102, 103, 104, 105, 122, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 147, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 176, 181, 189, 190, 191, 194, 198, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 232, 239, 240, 243, 244, 246, 247, 292, 293, 295, 299, 305, 307, 311, 315, 316, 337, 340, 341, 345, 346, 347, 351, 358, 360, 363, 395, 399, 400, 401, 402, 403, 405, 407, 410, 411, 412, 413, 414, 415, 418, 421, 425, 426, 428, 430, 431, 434, 436, 438, 439, 440, 444, 445, 446, 450, 453, 457, 463, 480, 482, 483, 546, 553, 554, 555, 565, 568, 571, 574, 575, 641, 647, 649, 651, 652, 679, 680, 682, 684, 685, 686, 688, 690, 697, 699, 700, 702, 703, 706, 710, 711, 719, 720, 721, 722, 724, 725, 726, 728, 730, 731, 732, 734, 736, 737, 738, 783, 795, 796, 823, 824, 825, 828, 829, 833, 834, 835, 837, 839, 840, 841, 842, 844, 846, 847, 850, 859, 861, 864, 867, 870, 871, 876, 877], "set_batch_num_edg": [27, 28, 102, 114, 115, 116, 117, 130, 246, 247, 341, 344, 350, 358, 482, 483, 546, 560, 563, 640, 649, 650, 736, 776, 819], "set_batch_num_nod": [27, 28, 101, 114, 115, 116, 117, 130, 246, 247, 341, 344, 350, 358, 482, 483, 546, 560, 563, 640, 649, 650, 736, 776, 819], "set_bodi": 22, "set_default_backend": 823, "set_devic": [835, 876, 877], "set_e_initi": 867, "set_edge_featur": 307, "set_edgecolor": 825, "set_epoch": [213, 876], "set_grad_en": 871, "set_n_initi": [27, 28, 93, 113, 867], "set_node_featur": 307, "set_num_thread": 851, "set_postfix": [827, 837], "set_sharing_strategi": [835, 877], "set_start_method": 850, "set_titl": 870, "set_trans_dec": 445, "set_trans_enc": 446, "set_xlabel": 870, "settran": 446, "settransformerdecod": 446, "settransformerencod": 445, "setup": [4, 721, 850, 851], "setuptool": 835, "seven": 860, "sever": [245, 293, 481, 693, 697, 708, 720, 725, 726, 731, 859, 871, 872, 874], "sg": [246, 341, 345, 346, 432, 433, 482, 546, 569, 570, 571, 572, 649, 677, 717, 719, 761, 763, 803, 805], "sg1": 843, "sg2": 843, "sgc": 428, "sgd": 700, "sh": [21, 823], "sha": [694, 741, 781], "sha1": [199, 200], "sha1_hash": [199, 200], "shall": [20, 687], "shallow": [64, 71, 219, 580, 581, 643, 644, 645], "shamelessli": 22, "shape": [4, 5, 6, 9, 12, 30, 47, 75, 95, 96, 117, 120, 126, 128, 129, 138, 143, 146, 147, 165, 168, 169, 174, 184, 186, 192, 195, 219, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 299, 301, 304, 328, 330, 333, 334, 341, 345, 346, 347, 348, 351, 361, 362, 363, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 465, 480, 481, 482, 483, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 556, 557, 558, 559, 560, 561, 566, 568, 575, 576, 578, 579, 580, 581, 583, 586, 589, 591, 593, 595, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 639, 646, 647, 651, 652, 657, 660, 661, 664, 665, 668, 670, 674, 676, 679, 680, 682, 684, 685, 686, 687, 689, 691, 695, 697, 700, 702, 703, 708, 711, 727, 728, 735, 736, 737, 738, 743, 746, 752, 755, 777, 778, 783, 786, 788, 793, 796, 800, 809, 812, 820, 821, 823, 824, 825, 826, 827, 829, 839, 840, 841, 842, 843, 844, 845, 846, 847, 854, 855, 858, 860, 864, 871], "shape\uc740": 819, "shaplei": [435, 437], "shapley_step": [435, 437], "shard": [4, 700, 786], "share": [4, 22, 26, 69, 116, 122, 130, 131, 247, 287, 290, 293, 299, 300, 314, 335, 340, 344, 347, 350, 361, 362, 391, 415, 438, 440, 461, 563, 571, 575, 580, 581, 640, 646, 649, 699, 702, 703, 704, 788, 823, 851, 854, 859, 860, 861, 871], "share_edata": [99, 563], "share_ndata": [99, 563], "share_weight": 414, "shared_memori": 4, "shared_memory_nam": [299, 314, 335], "sharemem": [14, 347, 438, 440, 575], "sharp": 861, "sharper": 861, "shchur": [135, 136, 151, 152, 153], "shelf": 861, "shell": 850, "shift": [197, 205, 398], "short": [394, 711, 716, 830, 844, 864], "shortcut": 182, "shortest": [243, 455, 456, 576, 689, 691], "shortest_dist": [455, 456, 689], "shortest_path": 689, "shot": [734, 818], "should": [4, 21, 42, 53, 54, 89, 91, 116, 125, 126, 128, 129, 130, 131, 146, 169, 173, 178, 179, 184, 195, 196, 210, 214, 216, 219, 220, 222, 223, 224, 225, 231, 241, 242, 249, 250, 287, 291, 294, 295, 297, 299, 302, 304, 305, 307, 310, 312, 315, 317, 318, 319, 322, 323, 324, 328, 333, 338, 339, 340, 344, 349, 350, 395, 396, 400, 401, 402, 403, 404, 405, 406, 416, 417, 424, 425, 428, 432, 433, 434, 435, 436, 437, 440, 451, 452, 455, 457, 461, 464, 554, 555, 562, 563, 564, 568, 569, 570, 571, 572, 573, 617, 618, 619, 620, 622, 623, 632, 640, 646, 647, 649, 659, 664, 665, 670, 674, 695, 700, 702, 703, 704, 710, 719, 721, 722, 728, 731, 829, 835, 840, 841, 842, 843, 844, 845, 847, 851, 854, 859, 860, 867, 870, 876, 877], "show": [4, 9, 14, 118, 119, 220, 240, 245, 481, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 718, 720, 722, 723, 728, 736, 737, 738, 824, 827, 834, 835, 836, 837, 838, 840, 841, 842, 845, 846, 854, 858, 859, 860, 861, 862, 864, 867, 871, 872, 874], "shown": [120, 697, 700, 710, 727, 731, 854, 855, 870, 871], "shuffl": [4, 168, 186, 207, 209, 210, 213, 214, 215, 216, 219, 220, 232, 239, 240, 295, 303, 389, 393, 432, 436, 437, 669, 696, 697, 699, 700, 703, 719, 720, 721, 722, 723, 725, 726, 736, 742, 743, 745, 746, 763, 764, 765, 766, 768, 776, 782, 783, 785, 786, 805, 806, 807, 808, 809, 811, 819, 826, 834, 835, 837, 840, 841, 850, 854, 855, 864, 876, 877], "shut": 292, "side": [22, 641, 836], "siev": 324, "sigma": [419, 421, 423, 426, 427, 457, 731, 737, 771, 777, 815, 820, 824, 825, 827, 858, 859, 861, 864, 871], "sigma_": 419, "sigma_k": 418, "sigmoid": [419, 829, 864, 867], "sign": [145, 639, 674, 675, 825], "sign_diffus": 825, "signal": [21, 174, 363, 825, 867], "signatur": [21, 53, 54, 861], "signdiffus": 13, "signifi": [299, 305, 310, 317, 318], "signific": [693, 721, 726, 833, 851, 861, 864], "significantli": [312, 728, 836], "silent": [395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 432, 433, 434, 435, 436, 437, 731], "sim": [737, 777, 820, 845], "similar": [4, 9, 26, 34, 53, 54, 100, 128, 129, 130, 161, 214, 221, 305, 317, 347, 389, 407, 438, 440, 458, 459, 460, 575, 641, 687, 696, 697, 699, 700, 701, 711, 720, 723, 724, 725, 727, 728, 737, 738, 755, 796, 823, 829, 830, 834, 835, 839, 842, 846, 854, 855, 859, 860, 861, 867, 870, 871, 876, 877], "similarli": [130, 221, 236, 240, 700, 702, 734, 827, 867, 872, 874], "simpl": [21, 22, 48, 118, 119, 351, 415, 480, 640, 649, 650, 677, 692, 698, 701, 728, 825, 835, 842, 846, 858, 860, 861, 862, 867, 870, 874], "simple_reduc": 100, "simplelosscomput": 871, "simplest": [725, 829], "simpli": [21, 22, 720, 723, 725, 726, 734, 736, 738, 842, 844, 845, 846, 858, 860, 861, 865, 867, 874], "simplic": [691, 703, 725, 840, 847, 861], "simplifi": [428, 724, 734, 825, 829, 858, 867, 871, 876], "simplifiedgat": 829, "simul": 860, "simultan": [292, 600, 603, 604, 605, 607, 699, 825, 864], "sin": 829, "sinc": [21, 27, 28, 56, 114, 115, 122, 145, 173, 182, 290, 300, 347, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 432, 433, 434, 435, 436, 437, 438, 440, 455, 456, 575, 580, 581, 641, 689, 693, 697, 711, 714, 721, 734, 736, 737, 824, 829, 834, 836, 845, 846, 847, 854, 858, 860, 861, 864, 867], "singl": [0, 4, 6, 22, 27, 28, 34, 35, 41, 43, 44, 46, 48, 51, 53, 55, 56, 57, 58, 60, 61, 73, 74, 77, 87, 88, 93, 94, 95, 96, 100, 101, 102, 103, 104, 128, 129, 131, 148, 164, 210, 211, 212, 214, 215, 216, 219, 220, 242, 290, 299, 300, 301, 304, 307, 311, 345, 346, 347, 349, 357, 361, 395, 418, 441, 442, 443, 444, 445, 446, 447, 448, 449, 461, 462, 484, 564, 568, 569, 570, 572, 644, 651, 652, 697, 699, 700, 703, 711, 714, 722, 724, 732, 733, 734, 736, 796, 808, 810, 830, 832, 836, 837, 842, 846, 847, 854, 855, 860, 861, 864, 871, 878, 879], "singular": [639, 675], "site": [184, 834, 837, 840, 841, 858, 861], "six": [834, 837, 840, 841], "size": [4, 5, 9, 20, 21, 22, 31, 62, 63, 120, 122, 128, 129, 135, 136, 138, 139, 146, 147, 151, 152, 153, 159, 160, 161, 162, 163, 168, 169, 174, 177, 181, 184, 192, 194, 196, 205, 210, 235, 290, 294, 295, 296, 298, 300, 303, 312, 319, 324, 328, 332, 333, 389, 390, 392, 393, 394, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 557, 558, 615, 622, 633, 651, 652, 657, 676, 689, 701, 703, 711, 715, 718, 719, 726, 727, 736, 748, 759, 789, 796, 801, 819, 823, 829, 834, 835, 837, 840, 841, 844, 850, 851, 858, 859, 860, 861, 864, 865, 867, 871, 874, 876, 877], "skeleton": 867, "skip": [420, 697, 732, 783, 840, 841, 860, 861, 864], "sklearn": [389, 834, 837, 845, 854, 855], "skm": 855, "sleeplessai": 756, "slice": [4, 26, 210, 708, 724, 858, 861], "slightli": 214, "sln": 823, "slope": [400, 411, 413, 414], "slow": [22, 305, 722, 845, 860], "slower": [347, 438, 440, 575, 871], "sm_53": [9, 714, 799], "small": [4, 10, 14, 70, 123, 124, 126, 167, 226, 229, 230, 245, 250, 287, 347, 412, 419, 432, 433, 438, 440, 481, 565, 575, 653, 687, 699, 700, 703, 728, 733, 736, 836, 842, 845, 846, 847, 854, 860], "smaller": [4, 130, 299, 394, 397, 618, 619, 620, 632, 664, 665, 670, 823, 854, 859, 860], "smallest": [311, 348, 403, 438, 454, 572, 651, 652, 667], "smax": [600, 829], "smean": [600, 829], "smin": [600, 829], "smooth": [415, 431, 871], "sn": 870, "snap": [145, 175, 181], "snippet": [707, 710, 711, 735, 860], "so": [4, 5, 8, 9, 21, 22, 125, 130, 140, 186, 197, 226, 229, 230, 232, 239, 245, 249, 290, 292, 296, 298, 299, 300, 312, 319, 339, 359, 401, 407, 481, 547, 562, 565, 569, 571, 580, 581, 643, 644, 645, 647, 695, 697, 698, 700, 701, 703, 719, 721, 725, 734, 738, 827, 837, 842, 843, 845, 846, 851, 854, 858, 859, 860, 861, 864, 867, 870, 876], "soc": 145, "social": [134, 167, 389, 706, 845], "socio": 166, "socket": 235, "soduku": 442, "softmax": [363, 395, 411, 423, 442, 444, 450, 453, 578, 579, 826, 844, 859, 861, 867, 870, 871], "softmax_edg": 579, "softmax_i": [407, 411, 413, 414], "softmax_nod": 578, "softwar": [822, 851], "solubl": 195, "solut": [22, 692, 721, 797, 854, 860], "solv": [295, 442, 822, 859, 860, 865, 874, 877], "some": [0, 4, 5, 9, 14, 21, 27, 28, 41, 43, 46, 48, 74, 93, 103, 113, 114, 115, 128, 129, 131, 134, 150, 168, 186, 236, 240, 247, 295, 340, 359, 360, 391, 395, 401, 407, 410, 411, 413, 414, 415, 418, 421, 428, 434, 436, 559, 562, 647, 691, 694, 695, 697, 701, 702, 703, 705, 707, 710, 711, 714, 715, 718, 719, 730, 737, 783, 823, 830, 836, 843, 845, 854, 861, 867, 870, 876], "some_complex_data": 695, "someth": 733, "sometim": [22, 715, 720, 733, 734, 736, 836, 844], "somewhat": 720, "song": 756, "soon": 703, "sophist": 736, "sort": [39, 51, 52, 78, 123, 168, 186, 197, 205, 241, 299, 394, 423, 426, 447, 562, 571, 580, 581, 583, 651, 652, 864, 871], "sort_csc_by_tag": 571, "sort_csr_by_tag": 571, "sortbi": [651, 652], "sorted_by_typ": 394, "sorted_feat": [651, 652], "sorted_idx": [651, 652], "sortpool": [651, 652], "sourc": [1, 4, 5, 6, 9, 10, 12, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 480, 481, 482, 483, 484, 489, 490, 491, 492, 493, 494, 495, 497, 499, 501, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 539, 541, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 681, 682, 683, 686, 687, 688, 695, 697, 702, 703, 705, 710, 711, 714, 723, 726, 730, 731, 783, 796, 805, 835, 836, 840, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "source_typ": [711, 755, 796], "sourcetensor": 860, "sp": [707, 751, 792, 845, 860], "sp_": 829, "sp_add_v": 829, "sp_broadcast_v": [627, 629, 630, 631], "sp_mat": [126, 250], "space": [9, 338, 339, 457, 711, 859, 867, 871], "spaci": 159, "spam": 163, "span": 4, "spars": [4, 9, 10, 13, 31, 32, 41, 56, 62, 63, 89, 126, 131, 249, 250, 287, 340, 389, 393, 400, 432, 433, 461, 507, 564, 691, 700, 707, 718, 721, 751, 786, 792, 822, 825, 827, 845, 858, 862, 871, 874], "sparse2th": 860, "sparse_coo": [31, 62, 63], "sparse_coo_tensor": 860, "sparse_emb": 461, "sparse_matrix": 622, "sparse_optim": [700, 746, 786], "sparseadagrad": [4, 10, 461, 700, 746, 786], "sparseadam": [4, 10, 389, 393, 461], "sparseattn": 826, "sparsefloat": 860, "sparsematrix": [12, 30, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 727, 824, 829], "sparsemha": 826, "sparseneighborsampl": 727, "sparser": 871, "sparsetensor": [31, 62, 63, 860], "sparsif": [664, 665, 670], "sparsiti": [664, 665, 670, 826, 829], "spatial": [178, 179, 456, 457], "spatial_encod": [456, 457, 691], "spatialencod": 691, "spawn": [210, 295, 721, 876], "spd": 689, "speak": 860, "special": [184, 403, 706, 711, 720, 725, 728, 829, 833, 860, 864], "specif": [14, 21, 42, 59, 108, 125, 126, 131, 165, 235, 242, 246, 247, 249, 250, 287, 299, 307, 340, 341, 344, 345, 346, 390, 393, 433, 460, 482, 483, 546, 554, 555, 565, 569, 570, 571, 572, 641, 664, 665, 670, 674, 691, 697, 699, 708, 711, 722, 723, 726, 796, 806, 822, 838, 840, 841, 851, 860, 876], "specifi": [4, 5, 6, 27, 28, 31, 34, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 68, 72, 75, 77, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 113, 117, 122, 125, 131, 140, 146, 148, 156, 159, 161, 162, 163, 169, 173, 196, 200, 214, 216, 217, 219, 229, 230, 231, 240, 246, 249, 287, 290, 294, 296, 298, 299, 300, 305, 307, 311, 312, 314, 319, 320, 340, 345, 346, 347, 391, 394, 403, 407, 408, 411, 412, 413, 414, 424, 425, 427, 439, 457, 482, 547, 553, 559, 560, 562, 568, 573, 575, 580, 581, 616, 618, 619, 620, 632, 641, 646, 647, 649, 693, 695, 697, 700, 701, 703, 704, 710, 711, 714, 716, 720, 725, 731, 734, 737, 755, 780, 796, 802, 815, 823, 827, 829, 834, 835, 839, 840, 841, 843, 854, 864, 877], "specifici": 850, "spectral": [399, 404], "speed": [10, 21, 22, 305, 312, 317, 647, 710, 715, 721, 736, 822, 830, 845, 854, 864, 867, 870], "speedup": [703, 850, 861], "sphinx": [21, 842, 843, 844, 845, 846, 847, 848, 850, 851, 852, 854, 855, 856, 858, 859, 860, 861, 864, 867, 870, 871, 874, 876, 877, 878], "sphinx_gallery_thumbnail_path": [842, 843, 844, 845, 846, 847], "sphinx_rtd_them": 21, "spilt": 192, "spinlock": 851, "splash": 864, "split": [13, 132, 133, 134, 137, 138, 139, 140, 144, 146, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 168, 169, 170, 171, 173, 176, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 205, 207, 209, 210, 213, 232, 239, 240, 295, 425, 547, 567, 646, 687, 693, 696, 697, 699, 701, 715, 716, 730, 731, 734, 738, 743, 780, 782, 783, 818, 837, 845, 854, 860, 876], "split_dataset": 876, "split_edg": [696, 742, 782], "split_idx": [696, 742, 782], "split_mask": 205, "split_ratio": [138, 139, 140], "splitted_idx": 854, "split\ub97c": 786, "spmat": [707, 751, 792], "spmatrix": [12, 31, 126, 250, 583, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 613, 614, 615, 617, 618, 622, 623, 624, 625, 626, 628, 633, 634, 635, 636, 824, 825, 826, 827, 829], "spmm": [485, 486, 487, 488, 490, 491, 492, 493, 511, 512, 513, 514, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 622], "spmv": 861, "spp": 398, "spring_layout": [825, 860], "sprod": 600, "spspmm": 622, "sq": 870, "sqrt": [4, 10, 347, 412, 421, 423, 438, 440, 450, 457, 575, 826, 861, 870, 871], "squar": [4, 10, 250, 412, 421, 827], "squash": 870, "squeez": [53, 54, 695, 697, 723, 743, 783, 834, 845, 859, 860], "squirrel": 185, "squre": 430, "src": [5, 22, 34, 62, 63, 68, 98, 100, 110, 220, 243, 252, 363, 398, 407, 408, 411, 413, 414, 418, 421, 427, 458, 459, 460, 562, 565, 618, 641, 642, 646, 681, 697, 707, 714, 715, 720, 723, 727, 728, 731, 732, 734, 737, 743, 751, 758, 759, 763, 764, 766, 771, 772, 774, 777, 783, 792, 799, 801, 805, 806, 809, 812, 815, 816, 818, 820, 826, 844, 845, 847, 859, 860, 861, 864, 867, 871], "src_dot_dst": 871, "src_emb": [867, 871], "src_embed_expand": 867, "src_field": 871, "src_id": [59, 126, 250, 287, 695, 702, 788], "src_id_field": 695, "src_input": [732, 772, 816], "src_label": 860, "src_list": 867, "src_mul_egd": 871, "src_node": [641, 805], "src_node_id": 702, "src_po": 871, "src_seq": 871, "src_timestamp": 323, "src_type": [131, 340, 433, 435, 731, 771, 815], "src_x": 720, "srcdata": [4, 9, 68, 104, 208, 221, 225, 581, 641, 699, 700, 701, 715, 724, 727, 731, 745, 746, 759, 763, 764, 766, 767, 768, 771, 785, 786, 787, 801, 805, 806, 809, 810, 811, 815, 837, 855], "srcdst": 51, "srcnode": [68, 103, 208, 225, 641, 724, 763, 767, 805, 810], "srctype": [26, 45, 68, 226, 227, 716, 719, 723, 760, 802], "srl": 859, "ssh": [704, 789], "ssl": 200, "ssp": 398, "sst": 864, "sstbatch": 864, "sstdata": [697, 743, 783], "sstdataset": 864, "stabil": [4, 10, 245, 419, 481, 861, 867, 871], "stabl": 403, "stack": [20, 73, 347, 391, 415, 451, 464, 595, 681, 689, 691, 696, 716, 726, 738, 742, 760, 782, 802, 824, 825, 826, 827, 842, 844, 859, 860, 861], "staff": [155, 187, 193], "stage": [7, 290, 294, 296, 300, 305, 307, 310, 315, 319, 715, 723, 726, 825, 833, 837, 840, 841, 855, 871], "stai": [587, 588, 728], "stand": [411, 567, 689, 829, 876], "standalon": [4, 830], "standard": [5, 7, 21, 138, 140, 403, 425, 457, 689, 691, 692, 693, 695, 697, 859, 864], "stanford": [145, 175, 181, 184, 842, 864], "star": [161, 163, 172, 843], "start": [6, 32, 114, 115, 125, 131, 164, 229, 230, 240, 249, 287, 307, 312, 330, 340, 345, 346, 393, 556, 564, 566, 568, 580, 581, 695, 700, 701, 702, 705, 710, 711, 718, 722, 728, 736, 823, 824, 825, 826, 827, 831, 834, 835, 837, 840, 841, 843, 854, 855, 859, 860, 864, 867, 870, 876], "start_epoch": [210, 213], "start_epoch_tim": 723, "start_idx": 6, "start_tim": 164, "state": [4, 10, 21, 142, 143, 166, 189, 190, 702, 718, 804, 830, 864, 867, 868, 870, 871, 874], "state_dict": [4, 850, 867], "statement": [724, 734, 829], "static": [22, 861, 870], "static_cast": 22, "staticmethod": [22, 870], "statist": [132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 702, 859, 860, 861], "statu": 56, "std": [22, 403, 425, 870], "steadili": [868, 874], "step": [4, 9, 10, 21, 92, 141, 142, 143, 156, 189, 190, 214, 240, 305, 310, 317, 318, 389, 393, 420, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 461, 463, 507, 511, 512, 513, 514, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 556, 562, 568, 569, 671, 699, 700, 701, 702, 713, 714, 718, 719, 720, 722, 723, 725, 727, 728, 730, 734, 736, 737, 738, 745, 746, 763, 764, 766, 768, 774, 776, 777, 778, 785, 786, 805, 806, 809, 811, 812, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 842, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 867, 871, 876, 877], "step_count": 867, "step_forward": 871, "step_siz": 826, "steplr": 826, "steven": 864, "still": [22, 70, 93, 108, 113, 232, 239, 695, 697, 720, 722, 723, 725, 728, 734, 736, 846, 871], "stochast": [3, 11, 183, 295, 303, 641, 712, 717, 720, 725, 731, 733, 736, 797, 803, 805, 806, 811, 815, 817, 819, 822, 836, 855, 867, 877], "stochastic_train": 720, "stochastical\ud558\uac8c": 804, "stochastictwolayergcn": [720, 725, 764, 765, 766, 768, 806, 808, 809, 811], "stochastictwolayerrgcn": [720, 725, 763, 764, 766, 768, 805, 806, 809, 811], "stop": [192, 566, 568, 734, 867], "stopping_mask": 192, "stopping\uc774\ub098": 818, "storag": [1, 4, 21, 116, 131, 211, 212, 287, 290, 293, 297, 311, 324, 340, 350, 562, 563, 695, 704, 710, 711, 830, 854], "store": [0, 1, 4, 7, 10, 31, 34, 53, 54, 59, 92, 95, 96, 100, 101, 102, 125, 126, 131, 134, 137, 138, 140, 141, 142, 143, 146, 149, 155, 156, 159, 161, 162, 163, 165, 168, 169, 171, 173, 180, 182, 184, 185, 186, 187, 188, 189, 190, 193, 200, 203, 204, 205, 206, 209, 220, 231, 232, 234, 239, 240, 241, 242, 246, 249, 250, 287, 288, 289, 293, 298, 312, 319, 320, 336, 340, 341, 345, 346, 347, 352, 359, 363, 391, 394, 399, 438, 440, 461, 482, 509, 546, 547, 554, 555, 559, 560, 562, 564, 566, 568, 569, 570, 571, 572, 573, 575, 577, 580, 581, 618, 619, 620, 641, 646, 647, 648, 649, 663, 664, 665, 667, 670, 671, 674, 675, 693, 694, 695, 697, 699, 700, 701, 702, 703, 707, 708, 710, 711, 714, 718, 735, 738, 780, 781, 787, 788, 799, 829, 834, 837, 838, 840, 841, 842, 843, 847, 854, 855, 858, 864, 867, 871], "store_eid": 231, "store_id": [49, 95, 96, 98, 106, 246, 341, 345, 346, 482, 546, 559, 560, 562, 577], "store_inner_edg": 231, "store_inner_nod": 231, "store_typ": 647, "stori": 830, "str": [4, 20, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 293, 294, 297, 298, 299, 301, 302, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 317, 318, 322, 323, 324, 327, 330, 335, 338, 339, 340, 341, 345, 346, 347, 352, 358, 359, 360, 363, 391, 393, 394, 401, 402, 403, 405, 412, 416, 418, 421, 424, 425, 426, 427, 430, 433, 434, 435, 438, 439, 440, 446, 450, 451, 453, 454, 458, 461, 462, 463, 482, 483, 484, 506, 507, 509, 546, 553, 554, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 568, 569, 570, 571, 572, 573, 575, 578, 579, 580, 581, 600, 628, 641, 646, 647, 648, 649, 651, 652, 655, 657, 662, 663, 664, 665, 667, 670, 671, 673, 674, 675, 677, 687, 693, 732, 740, 772, 780, 816, 835, 877], "straight": 715, "straightforward": [859, 860], "strategi": [197, 232, 239, 417, 435, 437, 566, 718, 833, 847, 854, 860], "stream": [210, 292, 297, 305, 310, 328, 333], "streamlin": 833, "strength": [415, 706, 735], "strict": 703, "string": [4, 22, 23, 26, 39, 52, 109, 121, 122, 131, 183, 223, 294, 299, 307, 311, 325, 326, 340, 390, 391, 392, 393, 694, 695, 703, 711, 714, 716, 736, 819, 839, 840, 843], "strong": [351, 480], "strongli": 21, "structur": [0, 4, 7, 13, 19, 21, 22, 56, 59, 67, 89, 101, 102, 108, 112, 125, 126, 131, 132, 141, 142, 143, 147, 150, 154, 159, 161, 162, 163, 167, 170, 173, 174, 175, 176, 181, 184, 197, 205, 210, 234, 236, 240, 248, 249, 250, 287, 307, 312, 316, 340, 432, 433, 434, 436, 450, 554, 555, 556, 563, 573, 641, 665, 671, 691, 699, 702, 703, 705, 706, 707, 709, 710, 719, 736, 788, 826, 829, 833, 839, 854, 859, 861, 862, 864, 865, 867, 868, 872, 874], "strucutr": 838, "strutur": [89, 112, 703], "stub": 21, "student": [155, 187, 193], "studi": [151, 152, 162, 822], "studio": 823, "style": [9, 860, 861], "stype": [391, 732, 772, 816], "sub": [9, 144, 261, 262, 275, 276, 285, 286, 391, 464, 503, 504, 506, 507, 530, 531, 532, 533, 534, 535, 544, 545, 628, 714, 725, 758, 799, 829, 835, 877], "sub_g": [246, 247, 341, 482, 483, 546, 711, 755, 796], "subbackward0": 398, "subclass": [3, 218, 302, 315, 432, 433, 434, 435, 436, 437, 692, 693, 697, 719, 721], "subg": [209, 217, 719, 788], "subgraph": [1, 3, 7, 13, 26, 134, 208, 209, 210, 214, 216, 217, 218, 219, 220, 221, 234, 241, 242, 243, 246, 247, 293, 299, 302, 305, 310, 312, 313, 315, 317, 318, 322, 327, 341, 345, 346, 359, 432, 433, 434, 435, 436, 437, 482, 483, 546, 547, 569, 570, 571, 572, 699, 701, 717, 719, 720, 721, 722, 723, 726, 731, 732, 761, 763, 803, 805, 815, 833, 834, 843, 845, 861, 867, 871], "subgraph_sampl": 305, "subgraphs_nod": [302, 315], "subgraphsampl": [218, 302, 719, 727], "subgraphx": 435, "subject": [6, 859], "sublay": [445, 446, 871], "sublist": 56, "submatrix": [347, 727], "submodul": [4, 391, 730, 823, 844], "subnet": 854, "suboptim": [703, 788], "subpackag": [5, 861], "subplot": [825, 867, 870], "subprocess": [292, 295], "subreddit": 181, "subsect": 725, "subsequ": [305, 310, 317, 318, 702, 703], "subset": [4, 14, 45, 79, 82, 105, 130, 146, 155, 157, 158, 169, 178, 179, 187, 193, 195, 197, 205, 207, 217, 232, 239, 247, 289, 295, 307, 390, 432, 433, 483, 700, 703, 708, 833, 836, 846, 867, 876], "subsetrandomsampl": 846, "subspac": 826, "substanc": 825, "substitut": [833, 861], "substract": [631, 829], "subtract": [635, 673], "subtract_min": 673, "subtre": 864, "succe": [4, 700], "success": 826, "successor": [90, 94, 346, 358, 867], "sudo": [823, 854], "suffer": 850, "suffici": 854, "suffix": [127, 694, 781], "sugar": [353, 354, 355, 356, 637, 638, 864], "suggest": [21, 23, 434, 436, 714, 715, 843, 851, 861], "suitabl": [347, 438, 440, 575, 698, 702, 703, 718], "sum": [4, 5, 9, 10, 20, 22, 73, 79, 82, 91, 92, 93, 94, 100, 113, 117, 118, 119, 122, 138, 139, 140, 173, 197, 198, 205, 241, 242, 391, 402, 403, 411, 416, 418, 424, 425, 429, 432, 433, 434, 435, 440, 448, 449, 452, 461, 464, 488, 493, 507, 509, 514, 520, 528, 534, 557, 558, 566, 568, 569, 575, 600, 637, 638, 649, 657, 673, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 700, 701, 714, 716, 724, 727, 728, 730, 731, 732, 735, 736, 738, 758, 760, 767, 770, 771, 772, 775, 776, 778, 786, 799, 800, 802, 810, 812, 814, 815, 816, 819, 821, 824, 825, 827, 829, 835, 836, 842, 844, 846, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "sum_": [120, 122, 347, 351, 363, 394, 397, 398, 399, 403, 407, 409, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 426, 429, 438, 440, 441, 442, 444, 448, 462, 465, 480, 575, 578, 579, 714, 736, 737, 758, 776, 777, 799, 819, 820, 827, 829, 836, 844, 845, 859, 861, 864, 867, 871], "sum_edg": 128, "sum_i": [673, 870], "sum_nod": 129, "sum_p": 871, "summar": [21, 736, 833, 861, 867], "summari": 833, "summat": [119, 128, 129, 391, 508, 509, 557, 583, 649, 736, 819, 836, 844, 860], "sumpool": [826, 876], "super": [146, 169, 218, 302, 315, 422, 432, 433, 434, 435, 436, 437, 464, 693, 697, 719, 720, 722, 723, 724, 725, 727, 728, 730, 732, 734, 736, 737, 738, 740, 743, 763, 764, 765, 766, 767, 768, 770, 772, 774, 776, 777, 778, 780, 783, 805, 806, 808, 809, 810, 811, 812, 814, 816, 818, 819, 820, 821, 824, 825, 826, 827, 829, 834, 835, 837, 842, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "superpixel": [146, 169], "superpixeldataset": [146, 169], "superscript": 858, "superset": 641, "supervis": [140, 147, 183, 395, 405, 421, 663, 703, 722, 788, 808, 842, 858, 867], "supplementari": 408, "support": [4, 5, 10, 13, 22, 110, 117, 122, 126, 138, 139, 146, 169, 210, 234, 240, 250, 292, 294, 295, 297, 303, 307, 350, 352, 359, 360, 363, 394, 406, 412, 461, 463, 464, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 562, 564, 566, 568, 569, 570, 571, 573, 576, 583, 622, 642, 648, 657, 676, 687, 695, 699, 700, 701, 702, 703, 707, 710, 714, 725, 728, 730, 735, 736, 770, 814, 822, 823, 824, 825, 826, 827, 829, 835, 837, 840, 841, 842, 844, 847, 851, 871, 877], "suppos": [21, 231, 299, 321, 508, 735, 800, 836, 858, 871], "suppress": [395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 847], "sure": [6, 21, 22, 229, 230, 295, 416, 427, 441, 443, 447, 448, 450, 453, 571, 694, 702, 781, 826, 867], "surpass": 21, "svd": [639, 675], "svd_pe": 675, "svdpe": 13, "swap": 322, "switch": [823, 825], "sym": 463, "sym_new_etyp": 656, "symbol": [5, 695, 871], "symmetr": [183, 349, 421, 463, 663, 674, 706, 734, 818, 824, 829, 860], "sympi": [834, 835, 837, 840, 841], "sync": 854, "synchron": [4, 305, 310, 328, 333, 700, 786, 835, 851, 867, 876, 877], "synset": 191, "syntact": [182, 864, 865, 874], "syntax": [353, 354, 355, 356, 637, 638, 711, 734, 796, 864], "synthet": [14, 141, 142, 143, 172, 189, 190, 695, 733, 734, 818, 846, 847], "syntheticdataset": 847, "system": [4, 22, 166, 173, 291, 324, 461, 564, 706, 827, 835, 845, 850, 851, 854], "systemat": [434, 436], "systemctl": 854, "t": [4, 10, 21, 56, 60, 87, 89, 118, 119, 131, 163, 164, 168, 200, 214, 241, 242, 243, 293, 299, 340, 358, 394, 397, 407, 411, 413, 414, 418, 420, 423, 426, 430, 431, 433, 434, 435, 444, 450, 458, 459, 460, 462, 463, 564, 566, 568, 569, 641, 647, 659, 665, 674, 702, 703, 707, 713, 720, 722, 723, 727, 728, 757, 798, 826, 827, 829, 834, 837, 840, 841, 854, 860, 861, 867, 871], "t0": [701, 787, 858, 861], "t1": [701, 787], "t_i": 871, "t_j": 871, "tabl": [178, 179, 389, 390, 393, 703, 830, 847, 861], "tabular": [703, 707], "tackl": [434, 435, 436, 437, 860], "tag": [21, 571, 580, 581], "tag_offset": [580, 581], "tag_offset_nam": [571, 580, 581], "tag_pos_nam": [580, 581], "tag_typ": [580, 581], "tail": [459, 460], "take": [20, 51, 118, 119, 120, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 210, 214, 215, 216, 219, 220, 241, 242, 287, 295, 303, 315, 349, 407, 408, 411, 413, 414, 422, 424, 425, 427, 432, 433, 434, 435, 436, 437, 565, 569, 570, 571, 572, 600, 606, 626, 628, 677, 691, 695, 697, 700, 703, 710, 711, 714, 716, 718, 719, 720, 721, 723, 725, 729, 731, 732, 733, 734, 735, 736, 738, 823, 825, 827, 835, 836, 844, 845, 847, 850, 851, 859, 860, 861, 864, 867, 871, 876], "taken": [161, 163, 290, 300, 860], "talk": 846, "tanh": [829, 864], "tape": 137, "tar": [694, 741, 781], "target": [108, 132, 133, 144, 170, 177, 178, 179, 201, 243, 322, 414, 423, 435, 437, 609, 703, 725, 726, 834, 837, 871], "target_class": [435, 437], "target_dir": 201, "target_idx": 859, "target_ntyp": 140, "task": [2, 7, 21, 122, 132, 133, 135, 136, 137, 138, 139, 140, 144, 146, 147, 150, 151, 152, 153, 154, 159, 160, 161, 163, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 188, 194, 195, 197, 198, 289, 293, 305, 306, 307, 310, 311, 317, 318, 696, 697, 700, 703, 719, 725, 727, 733, 734, 736, 737, 738, 783, 822, 826, 827, 830, 833, 834, 835, 837, 838, 842, 846, 854, 855, 861, 867, 876, 877], "task_lint": 21, "task_nam": [834, 837], "task_unit_test": 21, "tau": [423, 430, 431], "tb": 394, "tcmalloc": 851, "tcp": [835, 876, 877], "tcpstore": 461, "teach": 845, "teacher": 867, "team": [21, 871, 876], "techniqu": [393, 734, 864, 871], "technologi": 851, "teleport": 396, "tell": [5, 21, 130, 210, 213, 240, 695, 725, 843, 844, 846], "temperatur": [434, 436], "templat": [21, 156, 693, 780], "tempor": [25, 145, 164, 166, 214, 299, 302, 305, 315, 317, 318], "temporal_sample_layer_neighbor": [299, 317], "temporal_sample_neighbor": [299, 318], "temporalneighborsamplerimpl": [317, 318], "temporari": 25, "ten": 159, "tend": [120, 716], "tensor": [0, 1, 5, 6, 7, 9, 12, 13, 20, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 138, 139, 140, 146, 159, 165, 168, 169, 172, 173, 175, 177, 178, 179, 184, 186, 195, 210, 213, 220, 221, 226, 227, 229, 230, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 290, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 328, 330, 332, 333, 334, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 350, 351, 352, 357, 358, 359, 360, 361, 362, 363, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 464, 465, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 549, 551, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 575, 576, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 591, 593, 594, 595, 596, 597, 598, 600, 601, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 655, 656, 657, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 695, 697, 701, 703, 707, 708, 709, 710, 711, 714, 719, 721, 724, 727, 728, 729, 731, 732, 735, 736, 738, 743, 746, 752, 753, 754, 755, 776, 783, 793, 794, 795, 796, 800, 810, 812, 819, 823, 825, 826, 827, 829, 830, 834, 835, 837, 840, 841, 842, 843, 844, 846, 847, 854, 859, 861, 862, 864, 867, 871, 874, 876, 877], "tensor_new": 860, "tensor_numpi": 847, "tensorcor": 728, "tensorcore\ub4e4\uc744": 812, "tensorflow": [9, 13, 21, 23, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 697, 710, 724, 729, 736, 738, 810, 813, 819, 822, 830], "tensorflow\u7684keras\u5c42": 769, "tensorflow\u7684tensor\u7c7b\u6216mxnet\u7684ndarray\u7c7b": 754, "tensorflow\uc5d0\uc11c\ub294": 783, "tensorflow\uc5d0\uc11c\ub3c4": 821, "tensorflow\uc758": 795, "term": [4, 10, 14, 144, 149, 185, 321, 389, 392, 400, 408, 411, 412, 413, 421, 431, 691, 822, 850, 860, 864, 867, 870], "termin": [564, 568], "termination_prob": 564, "tesla": 14, "test": [4, 9, 25, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 240, 293, 311, 316, 334, 696, 700, 703, 727, 734, 738, 742, 746, 747, 782, 786, 788, 818, 823, 824, 825, 826, 827, 829, 833, 834, 835, 837, 839, 840, 841, 842, 844, 846, 847, 854, 855, 858, 861, 871, 876, 877], "test_acc": [824, 825, 827, 835, 842, 844, 876, 877], "test_data": [164, 166, 184], "test_dataload": [826, 846], "test_edg": [139, 855], "test_edge_mask": [157, 158, 191], "test_el": 334, "test_idx": [138, 140, 826, 859], "test_label": [696, 742, 782, 855], "test_load": [696, 742, 782, 876], "test_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 389, 695, 697, 738, 743, 778, 783, 821, 824, 825, 827, 842, 844, 847, 854, 858, 859], "test_metr": 826, "test_neg_dst": 855, "test_neg_g": 845, "test_neg_src": 855, "test_neg_u": 845, "test_neg_v": 845, "test_nid": 854, "test_pos_dst": 855, "test_pos_g": 845, "test_pos_src": 855, "test_pos_u": 845, "test_pos_v": 845, "test_pr": 855, "test_rat": 173, "test_ratio": 173, "test_sampl": 846, "test_set": [311, 316, 834, 835, 837, 839, 840, 841, 876, 877], "test_siz": [826, 845], "texa": 187, "text": [161, 182, 398, 415, 421, 423, 430, 450, 703, 713, 733, 757, 798, 826, 844, 859, 861, 867, 870], "textbf": [867, 870], "textrm": [178, 179, 864, 871], "textur": 870, "tf": [4, 161, 830], "tf_force_gpu_allow_growth": 823, "tf_geometr": 830, "tgt": 871, "tgt_emb": 871, "tgt_po": 871, "tgt_seq": 871, "tgt_y": 871, "tgz": [694, 697, 743, 781, 783], "tgz\u6587\u4ef6": 741, "th": [4, 5, 9, 10, 27, 34, 36, 37, 48, 53, 55, 60, 87, 100, 114, 116, 122, 128, 129, 138, 146, 147, 157, 158, 165, 168, 169, 172, 174, 175, 186, 191, 214, 216, 219, 220, 246, 290, 294, 296, 300, 319, 347, 349, 363, 391, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 464, 482, 509, 553, 557, 558, 563, 567, 568, 573, 578, 579, 640, 647, 649, 651, 652, 676, 686, 687, 689, 691, 699, 700, 701, 702, 703, 707, 708, 709, 710, 711, 718, 736, 745, 746, 751, 752, 753, 754, 755, 785, 786, 787, 788, 792, 793, 794, 795, 796, 819, 826, 827, 829, 836, 847, 850, 854, 855, 858, 859, 860, 864, 870, 871], "than": [4, 21, 27, 28, 66, 95, 96, 118, 119, 120, 121, 131, 139, 142, 143, 161, 168, 178, 189, 190, 226, 287, 290, 294, 295, 296, 299, 300, 302, 307, 315, 319, 324, 340, 347, 394, 397, 434, 436, 438, 440, 455, 465, 565, 569, 570, 571, 575, 618, 619, 620, 632, 664, 665, 670, 710, 711, 715, 721, 732, 734, 737, 755, 796, 823, 827, 830, 840, 841, 850, 851, 854, 859, 860, 861, 864, 867], "thei": [1, 4, 9, 11, 20, 21, 26, 56, 117, 119, 122, 130, 131, 138, 140, 151, 152, 188, 234, 241, 242, 245, 312, 323, 340, 357, 358, 397, 464, 481, 563, 566, 568, 569, 692, 693, 699, 700, 701, 703, 708, 709, 711, 714, 720, 724, 728, 731, 732, 733, 735, 826, 830, 834, 837, 839, 840, 841, 842, 844, 846, 854, 860, 861, 864, 867, 870], "them": [1, 4, 5, 9, 41, 48, 56, 68, 73, 93, 100, 113, 120, 130, 133, 142, 144, 148, 149, 155, 178, 185, 187, 193, 205, 221, 245, 246, 249, 299, 322, 341, 345, 346, 347, 397, 432, 433, 434, 435, 436, 437, 442, 451, 458, 481, 482, 546, 561, 571, 573, 617, 623, 641, 649, 655, 695, 699, 700, 701, 703, 706, 707, 711, 713, 721, 726, 734, 736, 822, 829, 836, 838, 840, 841, 842, 843, 845, 854, 860, 864, 865, 867, 871, 874, 876], "themselv": [21, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 720, 836, 845], "theori": 860, "ther": 431, "therefor": [4, 26, 220, 295, 647, 700, 701, 720, 721, 827, 845, 855, 859, 860, 861, 864], "theta": [410, 411, 416, 417, 424, 428, 429, 825, 860], "theta_": [825, 860], "theta_0": 825, "theta_i": 860, "theta_k": 664, "theta_r": 825, "theta_x": 860, "thew": 26, "thi": [4, 5, 6, 7, 8, 10, 14, 21, 22, 24, 26, 27, 28, 34, 40, 41, 44, 45, 48, 51, 52, 59, 70, 73, 79, 82, 89, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 137, 140, 141, 142, 143, 145, 148, 156, 157, 158, 159, 160, 162, 164, 165, 166, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 197, 209, 210, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 231, 232, 235, 239, 240, 241, 242, 243, 245, 246, 247, 287, 290, 292, 294, 295, 296, 299, 300, 301, 302, 303, 305, 307, 310, 311, 312, 315, 317, 318, 319, 322, 328, 333, 340, 341, 344, 345, 346, 347, 348, 350, 358, 359, 360, 363, 391, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 425, 428, 429, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 451, 454, 455, 456, 457, 461, 462, 464, 481, 482, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 556, 559, 560, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 575, 580, 581, 587, 588, 611, 618, 619, 620, 622, 628, 632, 639, 640, 641, 643, 644, 645, 646, 647, 649, 650, 663, 664, 665, 666, 667, 668, 670, 671, 672, 674, 675, 676, 684, 685, 686, 687, 689, 690, 691, 692, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 707, 710, 711, 713, 714, 715, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 735, 736, 737, 738, 783, 788, 808, 821, 823, 824, 825, 826, 827, 829, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 862, 864, 865, 867, 868, 870, 871, 872, 874, 876, 877], "thing": [210, 226, 565, 698, 720, 864], "third": [131, 210, 214, 215, 216, 219, 220, 287, 340, 567], "thoma": 831, "thorough": 641, "thoroughli": [860, 861], "those": [27, 28, 114, 116, 209, 220, 243, 295, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 438, 440, 714, 715, 718, 730, 836, 843, 861, 864, 867, 871], "though": [21, 22, 241, 242, 305, 310, 317, 569, 707, 860], "thought": [867, 871], "thousand": 837, "thre": 871, "thread": [21, 210, 235, 292, 294, 305, 310, 835, 854, 877], "three": [14, 48, 62, 63, 80, 126, 131, 161, 163, 198, 217, 230, 240, 250, 287, 340, 391, 463, 575, 647, 695, 697, 699, 700, 702, 703, 714, 722, 727, 731, 835, 839, 844, 845, 847, 850, 859, 860, 864, 867, 871, 877], "threshold": [299, 431, 435, 437, 664, 665, 670], "through": [22, 236, 700, 736, 822, 846, 854, 855, 859], "throughout": [307, 710, 867], "throughput": 699, "throw": 687, "thrown": [865, 874], "thu": [4, 9, 14, 22, 70, 122, 182, 198, 245, 246, 305, 317, 341, 345, 346, 401, 428, 465, 481, 482, 546, 557, 558, 695, 700, 701, 703, 707, 709, 728, 825, 858, 859, 860, 861, 864, 867, 870, 871, 876], "thumb": 21, "thumbnail": [842, 843, 844, 845, 846, 847], "ti": 51, "tid": 701, "tild": [396, 399, 415, 423, 428, 429, 463, 825, 858, 860], "tile": 870, "time": [6, 113, 118, 164, 166, 200, 214, 231, 299, 302, 305, 310, 315, 317, 318, 345, 346, 394, 421, 422, 438, 454, 565, 568, 569, 665, 674, 693, 698, 700, 703, 715, 722, 723, 728, 736, 759, 801, 825, 826, 827, 829, 830, 835, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "time_enc": 871, "timestamp": [299, 302, 315, 317, 318, 323], "tini": [130, 184, 864], "tiny_data": 184, "tiny_sst": 864, "tip": [210, 718], "tissu": 861, "titl": [707, 751, 792], "tmp": [319, 320, 434, 436, 703, 747, 788], "to_add_edg": 867, "to_bfloat16": 728, "to_bidirect": [6, 116, 710, 754, 795], "to_block": [4, 131, 700, 701, 719, 721, 746, 763, 786, 787, 805, 807], "to_csv": [840, 841], "to_dens": [825, 827, 829], "to_direct": [248, 249], "to_heterogen": 647, "to_homogen": [423, 426, 646, 711, 755, 796, 859], "to_homogenen": 26, "to_jshtml": 825, "to_loc": 4, "to_networkx": [825, 860, 864, 870], "to_numpi": [695, 847], "to_partid": 4, "to_pyg": 312, "to_pyg_data": 307, "to_simpl": [118, 119, 186, 650], "to_undirect": 825, "tocoo": [126, 250], "todens": 845, "todo": [317, 318], "togeth": [11, 26, 91, 92, 101, 102, 130, 135, 136, 137, 214, 216, 240, 338, 348, 357, 429, 430, 431, 441, 443, 447, 448, 562, 703, 711, 726, 736, 827, 840, 841, 860, 876], "toi": [175, 871], "token": [864, 871, 872, 874], "tolevi": 13, "tolist": [567, 825, 864], "tolok": 188, "toloka": 188, "tone": 164, "too": [4, 22, 60, 87, 240, 292, 311, 703, 709, 721, 794, 829, 836, 871], "tool": [699, 700, 703, 748, 788, 789, 823, 829, 830, 837, 842, 854], "toolbox": 408, "top": [142, 143, 161, 423, 447, 651, 652, 700, 703, 822, 826, 827, 829, 833, 845, 850, 854, 859], "topic": [340, 648, 702, 718, 860], "topk": [347, 438, 440, 575, 651, 652], "topolog": [552, 653, 864], "topologi": [13, 293, 311, 397, 429, 735, 864, 865, 867, 874], "topological_nodes_gener": [552, 864], "torch": [4, 5, 6, 8, 9, 10, 12, 20, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 131, 138, 146, 147, 165, 168, 169, 172, 174, 183, 184, 186, 195, 209, 210, 213, 214, 216, 217, 219, 220, 226, 227, 244, 245, 246, 247, 249, 250, 263, 264, 265, 266, 287, 290, 291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 328, 330, 331, 332, 333, 334, 338, 339, 340, 341, 345, 346, 347, 351, 357, 361, 362, 363, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 480, 481, 482, 483, 509, 546, 553, 554, 555, 557, 558, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 571, 572, 573, 575, 577, 578, 579, 580, 581, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 600, 601, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 640, 641, 642, 646, 647, 648, 649, 651, 652, 656, 657, 660, 661, 662, 663, 664, 665, 668, 669, 670, 673, 674, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 695, 696, 697, 699, 700, 702, 703, 707, 708, 709, 710, 711, 714, 715, 719, 720, 721, 722, 723, 724, 725, 727, 728, 730, 731, 732, 733, 734, 736, 737, 738, 742, 743, 745, 746, 751, 752, 753, 754, 755, 758, 759, 763, 764, 765, 766, 767, 768, 770, 771, 772, 773, 774, 776, 777, 778, 782, 783, 785, 786, 792, 793, 794, 795, 796, 799, 801, 805, 806, 807, 808, 809, 810, 811, 812, 814, 815, 816, 817, 818, 819, 820, 821, 824, 825, 826, 827, 829, 834, 835, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "torch_feat": [294, 300, 319], "torch_featur": 319, "torchaudio": 829, "torchbasedfeatur": [294, 300, 840, 841], "torchbasedfeaturestor": [311, 840, 841], "torchdata": [726, 834, 835, 837, 840, 841], "torchmetr": [827, 835, 877], "torchvis": 829, "tosimpl": [13, 659], "total": [4, 10, 80, 81, 181, 299, 305, 310, 314, 317, 318, 389, 394, 422, 440, 449, 697, 701, 702, 726, 832, 842, 843, 844, 845, 846, 847, 849, 850, 851, 853, 854, 855, 857, 858, 859, 860, 861, 863, 864, 866, 867, 869, 870, 871, 873, 875, 876, 877, 879], "total_correct": 876, "total_loss": [723, 727, 826, 834, 835, 876, 877], "total_node_weight": 702, "total_num_edg": [299, 330], "total_num_nod": [299, 330, 722, 840, 841], "touch": 21, "toward": 660, "tower": [403, 425], "tp_": 861, "tq": [827, 837], "tqdm": [722, 723, 826, 827, 834, 835, 837, 840, 841, 871, 877], "tr": 864, "trace": [566, 567, 568], "track": 864, "trade": [145, 435, 437, 871], "traffic": [149, 185], "train": [3, 4, 7, 9, 10, 11, 23, 25, 89, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 209, 210, 213, 214, 215, 216, 219, 220, 232, 235, 239, 240, 293, 295, 305, 311, 316, 317, 393, 403, 417, 422, 425, 428, 432, 433, 434, 435, 436, 437, 461, 639, 641, 675, 690, 691, 696, 697, 700, 701, 702, 703, 712, 714, 717, 719, 721, 722, 726, 731, 742, 745, 773, 776, 778, 782, 783, 785, 788, 799, 805, 806, 811, 812, 817, 818, 819, 821, 822, 823, 830, 832, 834, 836, 839, 840, 841, 847, 848, 849, 850, 851, 858, 861, 864, 865, 867, 868, 870, 874, 876], "train_acc": [842, 844, 859], "train_data": [164, 166, 184], "train_dataload": [826, 834, 837, 846, 854, 855], "train_dataset": [146, 169], "train_dataset_subset": [146, 169], "train_dist": [748, 789, 854], "train_edg": [157, 158, 191], "train_edge_mask": [157, 158, 191], "train_eid": [214, 216, 220, 764, 806, 855], "train_eid_dict": [764, 766, 806, 809], "train_g": [157, 158, 191, 845], "train_graph": 139, "train_idx": [138, 140, 697, 743, 783, 826, 859], "train_it": 871, "train_label": [696, 742, 782], "train_load": [696, 742, 782, 864, 876], "train_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 240, 389, 432, 695, 697, 699, 700, 703, 728, 733, 734, 738, 743, 745, 746, 747, 773, 774, 778, 783, 785, 786, 788, 812, 817, 818, 821, 824, 825, 827, 842, 844, 847, 854, 858, 859, 861], "train_neg_g": 845, "train_neg_u": 845, "train_neg_v": 845, "train_nid": [210, 214, 215, 216, 219, 699, 700, 721, 745, 746, 763, 768, 785, 786, 805, 807, 811, 850, 854, 855], "train_nid_dict": [768, 811], "train_on": [209, 210, 213, 214, 215, 216, 217, 220], "train_pos_g": 845, "train_pos_u": 845, "train_pos_v": 845, "train_rat": 173, "train_sampl": 846, "train_se": [766, 809], "train_set": [157, 158, 191, 311, 316, 719, 720, 725, 834, 835, 837, 839, 840, 841, 860, 876, 877], "train_siz": [161, 162, 163, 164, 166, 826, 845], "train_step": [434, 436], "train_step_nod": [434, 436], "trainabl": [4, 824, 829, 859], "trainer": [4, 232, 239, 240, 699, 700, 701, 703, 704, 854, 855], "trainer_id": 240, "trainer\uc5d0\uac8c": 785, "training_load": 860, "training_set": 195, "training\uc744": 799, "trainset": [147, 174, 864], "trang": [723, 827], "transact": 145, "transduct": [140, 197, 198, 428, 700, 746, 786], "transfer": [210, 291], "transform": [9, 13, 26, 27, 28, 114, 115, 116, 117, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 246, 247, 308, 341, 344, 347, 350, 358, 363, 392, 394, 397, 403, 407, 411, 423, 433, 434, 435, 438, 439, 440, 445, 446, 450, 451, 452, 453, 454, 455, 456, 457, 465, 482, 483, 546, 553, 560, 563, 571, 640, 649, 650, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 691, 695, 703, 707, 719, 720, 721, 723, 726, 728, 736, 824, 828, 832, 834, 858, 859, 860, 861, 864, 867, 872, 873, 874], "transform1": 667, "transform2": 667, "transform3": 667, "transformer_encod": 454, "transit": 568, "translat": [158, 191, 459, 871], "translationdataset": 871, "transmiss": 210, "transpar": [701, 726], "transpos": [31, 563, 580, 582, 608, 826, 829, 860], "travel": [825, 867], "travers": [13, 91, 92, 123, 124, 229, 230, 549, 551, 552, 564, 566, 568, 653], "traversal_ord": 864, "treat": [312, 323, 393, 569, 570, 649, 674, 711, 731, 755, 796, 843, 845, 846, 847, 860, 864, 865, 871, 874], "tree": [14, 21, 159, 182, 184, 189, 190, 230, 347, 435, 437, 438, 440, 575, 832, 865, 866, 868, 871, 874], "tree_height": [189, 190], "treebank": [184, 864], "treelstm": 864, "treelstmcel": 864, "tri": [4, 148, 240, 359, 360], "trick": [22, 858], "trigger": [0, 91, 92, 412, 716, 728, 802, 826, 830, 844, 847, 860, 861, 864], "tripl": [459, 460, 859], "triplet": [4, 30, 31, 32, 34, 39, 47, 48, 52, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 131, 223, 247, 340, 484, 557, 559, 561, 578, 646, 695, 711], "trivial": [9, 348, 403, 454, 667, 864], "troubl": 21, "true": [4, 6, 9, 10, 25, 31, 48, 49, 57, 58, 65, 66, 67, 69, 95, 96, 98, 99, 106, 111, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 197, 198, 200, 201, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 246, 248, 287, 290, 292, 295, 297, 299, 305, 310, 311, 312, 317, 318, 319, 320, 332, 334, 341, 342, 344, 345, 346, 347, 348, 350, 389, 392, 393, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 450, 451, 452, 453, 454, 455, 463, 482, 546, 547, 549, 551, 552, 553, 559, 560, 562, 563, 565, 566, 568, 569, 570, 571, 572, 575, 576, 577, 580, 594, 639, 640, 641, 647, 648, 649, 651, 652, 653, 655, 656, 657, 667, 668, 673, 675, 688, 689, 695, 696, 697, 699, 700, 702, 703, 719, 720, 721, 722, 723, 725, 726, 727, 728, 730, 736, 742, 743, 745, 746, 763, 764, 765, 766, 768, 770, 776, 782, 783, 785, 786, 788, 805, 806, 807, 808, 809, 811, 812, 814, 819, 823, 824, 825, 826, 827, 829, 834, 835, 837, 839, 840, 841, 842, 846, 847, 850, 854, 855, 858, 859, 860, 864, 867, 870, 871, 876, 877], "truediv": 628, "trueli": [702, 703], "truli": [240, 722], "truncat": 455, "trust": 145, "truth": [150, 154, 167, 176, 738, 821, 835, 842, 855, 860, 867, 877], "trv_a_tre": 864, "trv_graph": 864, "try": [116, 130, 207, 226, 240, 344, 350, 563, 564, 565, 640, 649, 702, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841, 846, 851], "tudata": [697, 743, 783], "tudataset": 25, "tune": [192, 292, 415, 728, 822, 850, 851, 861], "tupl": [4, 10, 22, 26, 27, 32, 36, 48, 51, 54, 61, 73, 88, 95, 123, 125, 131, 132, 133, 139, 144, 156, 170, 183, 196, 217, 240, 249, 287, 288, 298, 301, 304, 307, 312, 323, 325, 326, 338, 339, 340, 358, 361, 362, 363, 390, 391, 392, 433, 465, 565, 568, 569, 585, 587, 588, 602, 616, 618, 619, 620, 621, 632, 696, 697, 701, 710, 724, 731, 732, 767, 771, 782, 810, 815], "tuple\uacfc": 787, "tuple\uc744": [783, 787], "tuple\uc758": 815, "ture": [9, 714, 799], "turn": [21, 210, 213, 305, 342, 359, 547, 728, 826, 836, 851, 854, 860, 867], "tutori": [9, 21, 210, 214, 215, 216, 295, 691, 707, 714, 720, 721, 724, 725, 727, 792, 805, 806, 811, 824, 825, 826, 827, 829, 831, 832, 833, 834, 835, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 849, 850, 853, 854, 855, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 879], "tvm": 22, "tvt": 316, "tweak": 21, "tweet": 159, "twirl": 430, "twitter": [159, 706], "two": [3, 4, 5, 9, 26, 34, 45, 48, 51, 52, 53, 58, 68, 77, 79, 81, 82, 100, 105, 116, 118, 119, 125, 126, 128, 129, 130, 135, 136, 141, 142, 159, 162, 163, 178, 180, 182, 188, 232, 239, 240, 245, 249, 299, 345, 346, 347, 358, 359, 360, 393, 394, 395, 397, 398, 403, 406, 407, 408, 409, 410, 411, 413, 414, 416, 417, 418, 421, 427, 461, 462, 464, 481, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 556, 557, 558, 562, 564, 565, 571, 578, 579, 580, 581, 614, 622, 625, 628, 634, 640, 641, 646, 647, 649, 651, 652, 655, 671, 687, 691, 695, 700, 701, 702, 703, 705, 706, 707, 708, 709, 711, 714, 715, 716, 720, 722, 724, 725, 728, 732, 734, 736, 737, 738, 806, 821, 827, 829, 836, 837, 839, 842, 845, 846, 847, 854, 858, 859, 860, 861, 862, 864, 867, 870, 871, 872, 874], "twolayergcn": [725, 768, 811], "tx": 674, "txt": [699, 700, 702, 703, 704, 745, 746, 748, 785, 786, 788, 789, 854, 855], "ty_a": 646, "ty_b": 646, "type": [4, 5, 6, 10, 13, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 288, 290, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 307, 310, 311, 312, 314, 317, 318, 319, 320, 322, 323, 324, 327, 328, 330, 331, 332, 333, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 357, 358, 359, 360, 361, 362, 363, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 437, 438, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 460, 462, 463, 465, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 575, 577, 578, 579, 580, 581, 583, 584, 586, 589, 590, 591, 592, 593, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 663, 672, 678, 681, 683, 686, 687, 695, 697, 699, 701, 702, 703, 705, 706, 707, 708, 709, 710, 714, 716, 720, 723, 724, 725, 727, 728, 730, 732, 733, 736, 737, 738, 753, 755, 770, 771, 783, 787, 794, 796, 802, 805, 814, 818, 819, 820, 823, 829, 834, 835, 837, 839, 840, 841, 843, 846, 847, 858, 859, 861, 864, 867, 876], "type_": [222, 223, 224, 225], "type_edge_id": 788, "type_nam": [288, 298], "type_per_edg": [299, 330, 840], "type_wise_edge_id": 702, "type_wise_id": [701, 787], "type_wise_node_id": 702, "typestr": [62, 63], "typic": [1, 4, 11, 241, 312, 394, 697, 704, 714, 728, 730, 731, 825, 851, 860, 867, 871], "typl": [128, 651], "tzdata": [834, 837, 840, 841], "u": [4, 5, 21, 27, 48, 51, 57, 61, 87, 88, 90, 94, 107, 114, 130, 131, 161, 163, 178, 179, 226, 227, 230, 244, 252, 253, 255, 257, 259, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 284, 286, 287, 299, 321, 340, 344, 350, 351, 358, 407, 408, 410, 411, 413, 414, 418, 421, 422, 424, 425, 427, 480, 506, 507, 563, 579, 640, 641, 649, 668, 681, 694, 697, 706, 709, 710, 711, 713, 714, 715, 726, 737, 743, 750, 753, 754, 755, 757, 758, 759, 763, 777, 783, 791, 794, 795, 796, 798, 799, 801, 805, 820, 822, 825, 836, 843, 844, 845, 851, 858, 860, 864, 867, 870, 871], "u0": [178, 179], "u0_atom": 179, "u_": [418, 864], "u_0": [178, 179], "u_add_": 5, "u_add_e_max": 9, "u_add_v": [5, 34, 464, 714, 715, 758, 759, 799, 801], "u_atom": 179, "u_attr": 125, "u_div_": 5, "u_div_v": [5, 9], "u_dot_": 5, "u_dot_v": [5, 9, 728, 734, 737, 766, 774, 777, 809, 812, 818, 820, 845], "u_f": 864, "u_fea": [410, 418, 421, 427], "u_feat": [407, 408, 411, 413, 414, 424], "u_hat": 870, "u_iou": 864, "u_j": 864, "u_l": 864, "u_mul_": [5, 9, 432, 433, 714, 728, 735, 758, 775, 799, 800, 812, 844, 871], "u_mul_e_sum": 9, "u_mul_e_udf": 844, "u_mul_v": 5, "u_sub_": 5, "u_sub_v": 5, "ubuntu": [14, 139, 823, 834, 837, 840, 841, 847, 851, 860, 864, 867, 870], "uc": 393, "ucidata": 167, "udf": [20, 700, 714, 728, 746, 799, 812, 861, 864], "udf_max": 5, "udf_u_mul_": 5, "udf\ub294": 799, "udf\uc640": 799, "udf\uc758": 799, "uint32": 823, "uint8": [700, 746, 786, 840, 871], "uk": 144, "un": [847, 861], "unari": [5, 714, 799], "unbatch": [101, 102, 122, 846, 864], "unblock": [395, 407, 410, 411, 413, 414, 415, 418, 421, 428], "uncertainti": [197, 205], "unchang": 109, "uncom": [824, 825, 826, 827, 829], "uncompress": 201, "uncov": 859, "undefin": [229, 230, 241, 242, 290, 294, 296, 300, 319, 341, 345, 346, 482, 546, 566, 568, 569, 570, 571, 700, 847], "under": [1, 5, 14, 22, 95, 96, 137, 161, 163, 171, 180, 182, 188, 197, 205, 240, 246, 341, 345, 346, 482, 546, 559, 560, 562, 571, 577, 649, 694, 695, 699, 702, 703, 704, 718, 781, 822, 823, 844, 845, 854, 858, 859, 861, 867, 876], "underflow": [728, 812], "underli": [434, 436, 700], "underset": [732, 772, 816, 860], "understand": [21, 449, 457, 702, 718, 825, 830, 832, 836, 844, 846, 854, 860, 862, 863, 874], "undirect": [6, 173, 220, 248, 249, 289, 706, 707, 710, 791, 806, 843, 867], "uneven": [835, 877], "unexist": [450, 453], "unfamiliar": 21, "uni": [44, 45, 68, 79, 82, 104, 105, 126, 410, 554], "unidirect": [116, 125, 358, 405, 406, 407, 408, 410, 411, 413, 414, 418, 421, 424, 427, 724, 810], "unifi": [21, 210, 307, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 721, 833], "uniform": [174, 205, 214, 216, 219, 220, 226, 227, 299, 321, 406, 413, 414, 418, 420, 421, 424, 427, 429, 568, 569, 571, 723, 737, 766, 807, 809, 861], "uniform_": [4, 700, 746, 786], "uniformli": [214, 216, 217, 226, 227, 245, 299, 321, 390, 422, 481, 554, 555, 566, 568, 569, 723, 834], "uniformnegativesampl": [305, 723, 834], "uniform\uc0d8\ud50c\ub9c1\uc740": 807, "uniniti": [299, 362], "union": [4, 209, 220, 295, 299, 302, 303, 304, 312, 314, 315, 322, 323, 324, 331, 339, 438, 440, 864], "uniqu": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 162, 182, 216, 226, 241, 247, 299, 301, 302, 305, 310, 315, 317, 318, 323, 338, 339, 461, 484, 557, 559, 561, 565, 569, 578, 583, 700, 701, 703, 708, 710, 711, 729, 736, 854, 855], "unique_dst": 339, "unique_dst_nod": 339, "unique_nod": [338, 339], "unit": [7, 178, 179, 703, 859, 864, 876], "univers": [132, 167, 872, 874], "unknown": [147, 171], "unlabel": [161, 463, 703, 722], "unleash": 850, "unless": [210, 834, 837, 840, 841], "unlik": [118, 119, 305, 317, 860, 861, 868, 874], "unmark": 6, "unnam": 695, "unnecessari": [715, 732, 851], "unnorm": [241, 242, 299, 305, 310, 317, 318, 408, 412, 566, 568, 569, 570, 571], "unobserv": 861, "unoccupi": [178, 179], "unorm": 430, "unpack": [702, 703, 723], "unpickl": [834, 837, 840, 841], "unpin": 112, "unpin_memory_": 89, "unplug": 173, "unreach": [243, 455, 456, 576, 689], "unscal": [728, 812], "unsqueez": [128, 129, 455, 686, 731, 771, 777, 815, 859, 860, 864, 867], "unsupervis": [723, 809, 860], "until": [4, 6, 21, 214, 569, 718, 864, 871], "untrust": [834, 837, 840, 841], "untyp": [859, 867], "unus": 21, "unvisit": [435, 437], "unweight": [289, 576, 663, 674, 706, 735, 791], "up": [4, 9, 22, 221, 241, 242, 305, 310, 440, 566, 568, 569, 575, 647, 697, 703, 710, 714, 715, 736, 835, 842, 845, 850, 858, 859, 861, 864, 870, 877], "updat": [4, 10, 20, 21, 27, 28, 34, 35, 73, 91, 92, 93, 94, 100, 113, 222, 223, 224, 225, 290, 294, 296, 297, 298, 300, 319, 357, 391, 393, 397, 398, 400, 405, 406, 408, 411, 413, 414, 415, 416, 417, 419, 421, 427, 428, 429, 452, 461, 463, 548, 549, 550, 551, 552, 691, 699, 700, 713, 714, 715, 716, 717, 724, 728, 736, 759, 799, 801, 802, 812, 823, 829, 830, 835, 836, 844, 854, 860, 861, 864, 870, 871, 876], "update_al": [5, 9, 20, 432, 464, 678, 679, 680, 681, 682, 683, 684, 685, 686, 714, 715, 716, 717, 724, 728, 731, 735, 758, 759, 760, 761, 767, 771, 775, 799, 800, 801, 802, 803, 810, 812, 815, 844, 845, 858, 859, 860, 861, 867, 870], "update_all_exampl": [714, 758, 799], "update_graph": 871, "upgrad": [825, 835], "upload": [21, 854], "upon": [22, 162, 829], "upper": [235, 431, 451, 456], "upstream": [21, 864], "upward": 864, "urandom": [183, 207], "url": [23, 156, 200, 693, 694, 697, 740, 741, 743, 780, 781, 783, 829], "urllib": 847, "urllib3": [834, 835, 837, 840, 841], "urlretriev": 847, "us": [4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 142, 143, 144, 145, 148, 150, 154, 159, 160, 162, 165, 167, 168, 173, 176, 177, 178, 179, 181, 183, 184, 186, 189, 190, 194, 195, 197, 205, 207, 209, 210, 213, 214, 217, 220, 222, 223, 224, 225, 229, 232, 235, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 290, 292, 293, 294, 295, 296, 297, 299, 300, 305, 307, 308, 309, 310, 312, 315, 316, 317, 318, 319, 320, 322, 328, 331, 332, 333, 338, 340, 341, 344, 345, 346, 347, 348, 350, 357, 358, 359, 360, 363, 389, 390, 393, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 410, 411, 413, 414, 415, 416, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 448, 449, 450, 452, 453, 454, 456, 458, 459, 460, 461, 464, 465, 481, 482, 483, 546, 549, 551, 552, 553, 554, 555, 556, 557, 558, 560, 562, 563, 564, 568, 569, 570, 571, 572, 575, 577, 591, 593, 596, 597, 609, 636, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 656, 662, 667, 668, 671, 673, 674, 675, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 688, 689, 691, 692, 694, 695, 697, 698, 699, 700, 701, 702, 703, 705, 706, 707, 710, 711, 713, 714, 716, 718, 719, 720, 722, 723, 725, 727, 728, 729, 730, 731, 732, 733, 734, 736, 737, 738, 781, 788, 795, 796, 812, 821, 823, 825, 827, 828, 829, 832, 834, 835, 836, 837, 839, 840, 841, 842, 844, 846, 847, 848, 849, 850, 851, 854, 855, 858, 859, 860, 861, 862, 864, 865, 867, 868, 870, 871, 874, 876, 877], "usag": [0, 1, 8, 9, 21, 25, 56, 126, 131, 210, 249, 250, 287, 296, 340, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 696, 697, 707, 714, 717, 822, 828, 830, 851, 854], "use_alternate_stream": 210, "use_cpu_affin": 851, "use_ddp": [210, 213, 850, 876], "use_eta": [430, 431], "use_featur": [146, 169], "use_fp16": 812, "use_graphbolt": [235, 236, 240, 241, 242, 854], "use_int64_tensor_s": 823, "use_libxsmm": 342, "use_libxsmm_flag": 342, "use_mm_for_euclid_dist": [439, 553], "use_mm_for_euclid_dist_if_necessari": [439, 553], "use_norm": 423, "use_panda": 168, "use_prefetch_thread": 210, "use_uva": [10, 210, 721], "user": [1, 3, 4, 5, 9, 11, 13, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 140, 145, 156, 159, 161, 163, 173, 180, 181, 210, 214, 215, 216, 219, 220, 235, 240, 241, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 299, 301, 303, 311, 316, 325, 326, 340, 341, 344, 345, 346, 350, 359, 360, 363, 390, 391, 392, 393, 395, 405, 407, 410, 411, 413, 414, 415, 418, 421, 428, 433, 434, 435, 482, 483, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 554, 559, 560, 561, 562, 563, 567, 568, 569, 570, 571, 572, 580, 581, 640, 641, 646, 647, 648, 649, 656, 657, 662, 672, 673, 677, 687, 695, 699, 700, 701, 702, 703, 704, 705, 706, 708, 711, 714, 719, 720, 721, 723, 726, 728, 733, 734, 737, 738, 755, 758, 763, 773, 774, 777, 778, 790, 796, 797, 799, 805, 812, 817, 818, 820, 821, 822, 823, 833, 834, 835, 837, 838, 839, 840, 841, 851, 854, 864], "user_emb": 393, "user_feat": [734, 737, 738, 774, 777, 778, 818, 820, 821], "user_id": 840, "user_nid": 393, "user_orig_nids_0": 703, "usernam": 21, "userwarn": [145, 177, 178, 179, 694, 741, 781, 826, 847, 860], "user\uac00": 818, "user\uc640": [796, 818], "usr": [826, 835], "usual": [4, 10, 21, 338, 465, 564, 700, 704, 714, 718, 720, 722, 726, 730, 731, 736, 738, 827, 834, 837, 840, 841, 846, 858, 861], "util": [1, 4, 11, 13, 146, 169, 183, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 289, 292, 295, 297, 303, 305, 307, 310, 316, 317, 318, 352, 388, 389, 393, 451, 462, 463, 464, 465, 573, 689, 690, 691, 694, 697, 698, 699, 703, 707, 721, 726, 729, 730, 731, 735, 738, 741, 743, 744, 769, 770, 771, 781, 783, 784, 788, 813, 814, 815, 825, 830, 835, 840, 841, 846, 847, 850, 851, 860, 864, 867], "utransform": 871, "utyp": [125, 126, 393, 554, 641, 724, 737, 767, 777, 810, 820], "uv": [51, 61, 88, 564, 681], "uva": [210, 292, 297, 305, 310, 564, 568], "v": [4, 5, 21, 22, 27, 35, 48, 51, 57, 60, 61, 62, 63, 87, 88, 90, 93, 94, 107, 114, 120, 121, 131, 161, 178, 179, 226, 227, 230, 244, 245, 254, 256, 258, 260, 262, 268, 270, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 299, 321, 340, 344, 350, 351, 358, 397, 401, 407, 408, 410, 411, 413, 414, 418, 421, 423, 424, 426, 427, 480, 481, 506, 507, 563, 579, 627, 628, 629, 630, 631, 640, 641, 649, 655, 668, 681, 706, 709, 710, 711, 713, 714, 715, 724, 731, 732, 736, 737, 738, 750, 753, 754, 755, 757, 758, 759, 763, 767, 771, 772, 776, 777, 778, 791, 794, 795, 796, 798, 799, 801, 805, 810, 815, 816, 819, 820, 821, 826, 829, 836, 844, 845, 858, 860, 864, 867, 870, 871], "v0": 787, "v1": 829, "v100": [14, 728, 812], "v2": 829, "v3": 829, "v_": 860, "v_1": 829, "v_2": 829, "v_a": 701, "v_add_": 5, "v_add_u": 5, "v_attr": 125, "v_b": [394, 426, 465, 701, 859], "v_div_": 5, "v_div_u": 5, "v_dot_": 5, "v_dot_u": 5, "v_fea": [410, 418, 421, 427], "v_feat": [407, 408, 411, 413, 414, 424], "v_i": [411, 737, 777, 820, 861, 864, 871], "v_j": [870, 871], "v_k": [864, 871], "v_max": 867, "v_mul_": 5, "v_mul_u": 5, "v_p": 440, "v_proj": 826, "v_sub_": 5, "v_sub_u": 5, "vacabulari": 184, "vaganova": 859, "val": [101, 102, 134, 137, 138, 139, 140, 149, 155, 168, 171, 180, 182, 185, 186, 187, 188, 192, 193, 337, 509, 574, 583, 593, 594, 598, 600, 603, 604, 605, 606, 607, 611, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 625, 626, 628, 632, 633, 635, 636, 824, 825, 826, 827, 829, 840, 841, 842, 844, 855, 876], "val1": [622, 634], "val2": [622, 634], "val_acc": [824, 825, 827, 842, 844, 859, 876], "val_edg": [139, 157, 158, 191, 855], "val_edge_mask": [157, 158, 191], "val_g": [157, 158, 191], "val_idx": [138, 140, 826], "val_lik": 829, "val_load": 876, "val_loss": 859, "val_mask": [25, 137, 140, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 171, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 695, 697, 738, 743, 778, 783, 821, 824, 825, 827, 842, 844, 847, 854], "val_metr": 826, "val_nid": 854, "val_set": [157, 158, 191, 876], "val_siz": [161, 162, 163, 606, 614, 618, 619, 620, 621, 626, 628, 632, 826, 829], "valid": [5, 25, 91, 125, 131, 138, 139, 140, 147, 150, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173, 174, 175, 176, 181, 191, 192, 194, 195, 197, 198, 205, 207, 249, 293, 311, 316, 452, 687, 696, 700, 703, 722, 734, 738, 742, 782, 818, 821, 824, 825, 833, 834, 835, 837, 839, 840, 841, 842, 844, 845, 847, 859, 861, 864, 867, 871, 876, 877], "valid_data": [164, 166], "valid_dataload": [826, 837, 854], "valid_it": 871, "valid_label": [696, 742, 782], "valid_load": [696, 742, 782], "valid_mask": [173, 738, 778, 821], "valid_nid": 854, "valid_r": 173, "valid_ratio": 173, "valid_set": [835, 837, 877], "validation_set": [311, 316, 835, 837, 839, 840, 841, 877], "valu": [4, 9, 12, 22, 23, 30, 31, 34, 51, 57, 58, 61, 62, 63, 73, 88, 89, 93, 113, 114, 115, 117, 120, 121, 126, 131, 137, 147, 148, 156, 164, 174, 178, 179, 183, 184, 197, 205, 210, 214, 216, 219, 220, 240, 241, 242, 244, 245, 246, 250, 287, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 304, 305, 307, 310, 312, 317, 318, 319, 323, 328, 334, 338, 339, 340, 341, 345, 346, 351, 359, 363, 389, 391, 393, 395, 399, 400, 401, 402, 404, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 421, 424, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 442, 447, 450, 452, 453, 461, 480, 481, 482, 485, 487, 490, 492, 509, 511, 513, 517, 519, 525, 527, 531, 533, 546, 547, 556, 562, 567, 569, 576, 583, 586, 587, 588, 589, 591, 593, 596, 597, 598, 600, 603, 604, 605, 606, 607, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 628, 632, 633, 634, 635, 636, 639, 657, 671, 673, 675, 693, 695, 702, 703, 728, 731, 732, 735, 780, 825, 826, 829, 834, 835, 837, 840, 841, 847, 858, 860, 861, 864, 870, 871, 877], "valueerror": 701, "valueobject": 22, "van": 864, "vanilla": [826, 871], "vanillar": 826, "vanish": 422, "var": [403, 425], "vare": 186, "varepsilon": [419, 871], "vari": [695, 730, 731, 825, 840, 841], "variabl": [21, 245, 481, 702, 823, 843, 850, 851, 860], "varianc": [403, 425], "variant": [214, 245, 481, 569, 858, 861], "variat": [214, 299, 305, 569, 860], "varieti": [707, 867, 871], "variou": [4, 14, 221, 307, 425, 700, 726, 829, 840, 841, 843, 846, 870], "vast": 843, "vaswani": 826, "vcpu": 14, "ve": [829, 854], "vec": [150, 408, 413, 414, 825, 861], "vector": [128, 129, 159, 214, 216, 219, 232, 239, 240, 359, 360, 389, 390, 393, 403, 408, 411, 418, 424, 431, 445, 446, 451, 576, 600, 603, 604, 605, 607, 614, 615, 616, 618, 619, 620, 621, 625, 627, 628, 629, 630, 631, 632, 639, 675, 691, 695, 703, 708, 734, 824, 825, 827, 829, 842, 843, 845, 846, 854, 858, 861, 864, 867, 870, 871, 872, 874], "vector_v": 829, "venu": 655, "venv": 835, "verbos": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 436, 693, 697, 740, 743, 780, 783], "veri": [4, 10, 22, 122, 184, 700, 707, 720, 722, 723, 725, 734, 736, 737, 854, 855, 864, 868, 871, 874], "verifi": [21, 130, 200, 641, 731, 860], "verify_ssl": 200, "versa": [860, 861], "versatil": 822, "versin": 815, "version": [4, 10, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 216, 245, 407, 431, 481, 571, 695, 703, 734, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 816, 817, 818, 819, 820, 821, 823, 824, 825, 826, 827, 829, 830, 834, 835, 837, 840, 841, 858, 867, 870, 877], "vert": [422, 444, 458, 462], "vertex": [6, 214, 239, 305, 310, 317, 360, 418, 569], "vertic": [214, 305, 317, 359, 569, 706, 860], "vh": 137, "via": [5, 11, 22, 41, 93, 113, 122, 214, 216, 234, 299, 305, 311, 317, 400, 401, 402, 415, 435, 437, 463, 554, 555, 569, 573, 695, 699, 706, 708, 719, 720, 721, 722, 725, 728, 737, 822, 834, 837, 840, 841, 843, 844, 845, 846, 851, 854], "viabl": 703, "vibrat": [178, 179], "vice": [860, 861], "vid": [58, 567], "video": 137, "view": [4, 9, 43, 44, 46, 51, 74, 77, 103, 104, 246, 341, 345, 346, 464, 482, 546, 562, 567, 568, 580, 581, 614, 628, 679, 680, 682, 684, 685, 735, 737, 777, 809, 820, 826, 859, 861, 864, 867, 870, 871], "viewbackward": [397, 445], "viewbackward0": 400, "virtual": [10, 210, 452, 689, 721, 835], "visibl": [116, 130, 344, 350, 563, 640, 649], "vision": [826, 843, 872, 874], "visit": [0, 22, 217, 230, 564], "visitattr": 22, "visitor": 22, "visual": [823, 825, 864, 870], "viz_idx": 871, "vocab": [184, 864], "vocab_fil": 184, "vocab_s": [184, 864, 871], "vocabulari": [174, 184, 864], "void": 22, "vol": [240, 360], "volta": [9, 714, 799], "volum": [240, 360], "vote": 161, "vs2019": 823, "vtype": [125, 126, 393, 554, 567, 641, 724, 737, 767, 777, 810, 820], "w": [5, 21, 27, 28, 60, 87, 114, 115, 118, 119, 122, 126, 167, 250, 341, 345, 346, 350, 389, 393, 398, 399, 402, 406, 413, 414, 415, 421, 423, 426, 427, 432, 433, 546, 557, 558, 562, 656, 662, 663, 664, 665, 668, 670, 673, 674, 676, 677, 687, 708, 715, 720, 724, 728, 731, 734, 735, 752, 759, 764, 767, 771, 774, 775, 788, 793, 801, 806, 810, 812, 815, 818, 824, 825, 827, 829, 840, 841, 844, 858, 859, 861, 864, 867], "w1": [422, 827, 845], "w2": [827, 845], "w_": [414, 420, 713, 757, 798, 858, 871], "w_0": [426, 859], "w_comp": 859, "w_h": 871, "w_i": 407, "w_iou": 864, "w_j": 407, "w_k": [418, 871], "w_l": [715, 759, 801], "w_new": 5, "w_o": [465, 871], "w_q": 871, "w_r": [426, 715, 759, 801, 859], "w_t": 394, "w_v": 871, "wa": [9, 141, 158, 162, 182, 186, 191, 333, 397, 449, 710, 825, 854, 859, 864, 871], "wai": [1, 4, 5, 126, 209, 232, 239, 250, 359, 360, 403, 408, 425, 461, 664, 665, 670, 677, 693, 697, 700, 710, 711, 718, 720, 722, 724, 729, 737, 827, 829, 843, 844, 854, 855, 861, 871], "wait": [21, 290, 294, 296, 299, 300, 319, 339], "walk": [13, 217, 389, 393, 421, 556, 564, 566, 567, 568, 671, 674, 854, 855], "walk_length": [389, 566], "walkthrough": [724, 829], "wang": [858, 860, 861, 864], "want": [4, 21, 22, 41, 210, 214, 216, 217, 219, 245, 299, 481, 569, 694, 695, 700, 703, 706, 711, 717, 719, 720, 723, 725, 726, 734, 735, 737, 738, 791, 834, 835, 837, 843, 845, 847, 854, 861], "warn": [166, 835, 847], "watch": [43, 870], "wayn": 167, "wb": 855, "wc": 422, "we": [4, 6, 9, 14, 21, 22, 27, 28, 31, 41, 45, 68, 79, 82, 105, 131, 133, 137, 144, 171, 179, 180, 181, 182, 188, 207, 210, 220, 234, 240, 241, 245, 299, 316, 345, 346, 347, 359, 360, 363, 393, 394, 397, 404, 405, 406, 415, 421, 426, 438, 440, 480, 481, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 506, 507, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 564, 569, 575, 580, 581, 646, 689, 691, 695, 699, 700, 701, 702, 703, 711, 718, 719, 720, 721, 722, 725, 726, 727, 728, 729, 733, 734, 737, 738, 787, 822, 823, 824, 825, 826, 827, 829, 830, 834, 835, 837, 840, 841, 844, 845, 846, 850, 851, 854, 855, 858, 859, 860, 861, 867, 870, 871, 876, 877], "web": [132, 155, 187, 193, 564, 670], "webkb": [155, 187, 193], "websit": [145, 167, 180, 697, 743, 783, 823], "wedg": 244, "week": 161, "weight": [5, 6, 21, 118, 119, 120, 125, 126, 145, 245, 249, 250, 299, 305, 310, 317, 318, 353, 354, 355, 356, 363, 389, 390, 391, 393, 394, 396, 399, 401, 406, 408, 411, 412, 413, 414, 415, 416, 418, 421, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 449, 450, 463, 465, 481, 556, 557, 558, 564, 569, 570, 572, 637, 638, 663, 664, 665, 670, 671, 674, 702, 706, 707, 708, 716, 723, 727, 730, 733, 751, 752, 760, 766, 770, 788, 792, 793, 802, 809, 814, 824, 825, 827, 829, 844, 847, 858, 859, 861, 864, 867, 870, 871, 877], "weight1": 788, "weight2": 788, "weight_and_sum": 449, "weight_anim": 870, "weight_column": 564, "weight_decai": [727, 728, 812, 824, 859, 864], "weight_nam": [118, 119], "weighted_reduc": [835, 877], "weightedsageconv": 844, "weights_onli": [834, 837, 840, 841], "weihua916": 165, "welcom": [21, 729, 871], "well": [4, 7, 21, 56, 96, 125, 126, 130, 173, 220, 236, 240, 332, 560, 641, 689, 693, 694, 695, 697, 703, 704, 709, 711, 718, 720, 722, 723, 733, 734, 736, 737, 796, 818, 827, 830, 836, 843, 847, 851, 854, 858, 861, 870, 871], "were": [137, 149, 180, 182, 185, 724, 823, 867, 871], "west": [697, 743, 783], "wh": [433, 435, 716, 760, 802], "wh_": [716, 760, 802], "what": [9, 21, 22, 240, 573, 726, 737, 738, 827, 829, 834, 836, 854, 858, 864, 867, 871], "whatev": 21, "wheel": [172, 824, 825, 826, 827, 829, 834, 835, 837, 840, 841], "when": [1, 4, 10, 14, 20, 21, 22, 31, 36, 41, 48, 51, 56, 57, 68, 70, 80, 89, 125, 130, 131, 146, 157, 158, 168, 169, 173, 191, 200, 210, 213, 214, 221, 222, 223, 224, 225, 232, 235, 239, 240, 241, 242, 246, 247, 249, 287, 290, 291, 292, 294, 295, 296, 299, 300, 305, 310, 312, 316, 317, 319, 332, 341, 345, 346, 347, 348, 359, 360, 394, 395, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 418, 420, 421, 426, 428, 431, 435, 437, 438, 439, 440, 442, 482, 483, 546, 553, 563, 565, 568, 569, 570, 571, 572, 575, 576, 639, 641, 647, 649, 667, 675, 695, 700, 701, 702, 703, 707, 711, 720, 722, 723, 725, 728, 731, 732, 736, 827, 829, 837, 840, 841, 845, 846, 850, 854, 858, 860, 867, 871], "whenev": [714, 845], "whenver": 867, "where": [4, 9, 10, 14, 21, 26, 34, 45, 48, 53, 57, 58, 62, 63, 73, 79, 82, 100, 105, 120, 128, 129, 130, 131, 135, 136, 157, 159, 162, 171, 186, 210, 214, 215, 216, 219, 226, 227, 240, 243, 244, 250, 299, 307, 312, 321, 323, 338, 339, 340, 343, 344, 347, 348, 349, 350, 351, 358, 363, 394, 395, 396, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 480, 505, 506, 507, 553, 556, 564, 565, 566, 568, 571, 575, 576, 619, 620, 622, 632, 639, 651, 652, 664, 665, 668, 670, 673, 674, 675, 679, 680, 682, 684, 685, 686, 689, 695, 697, 701, 702, 703, 704, 706, 715, 718, 721, 732, 734, 735, 736, 737, 738, 800, 824, 825, 826, 827, 829, 834, 836, 837, 840, 841, 842, 843, 844, 845, 858, 859, 860, 861, 864, 867, 871, 876], "wherea": [860, 861], "whether": [4, 9, 10, 21, 48, 53, 54, 57, 58, 62, 63, 65, 66, 68, 117, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 210, 213, 214, 216, 219, 220, 226, 231, 234, 235, 236, 238, 240, 241, 242, 246, 287, 291, 299, 300, 305, 307, 310, 311, 312, 317, 318, 324, 339, 342, 350, 352, 358, 359, 360, 394, 403, 407, 408, 410, 411, 413, 414, 415, 419, 423, 425, 426, 436, 439, 442, 452, 458, 463, 482, 553, 565, 569, 570, 571, 572, 651, 652, 688, 691, 693, 698, 702, 703, 724, 725, 734, 737, 780, 784, 829, 839, 840, 841, 842, 845, 847, 860, 867, 871], "which": [0, 1, 4, 9, 10, 20, 21, 22, 32, 36, 41, 42, 51, 56, 61, 88, 92, 116, 120, 122, 130, 131, 140, 143, 146, 148, 158, 161, 162, 163, 169, 171, 178, 179, 180, 182, 183, 186, 188, 189, 190, 195, 197, 205, 210, 211, 212, 217, 219, 222, 223, 224, 225, 230, 231, 236, 240, 244, 245, 287, 289, 293, 295, 299, 302, 305, 307, 308, 310, 311, 312, 316, 317, 318, 321, 332, 340, 341, 344, 345, 346, 350, 351, 359, 363, 391, 394, 395, 397, 398, 400, 401, 402, 403, 405, 407, 410, 411, 413, 414, 415, 418, 421, 424, 426, 428, 432, 434, 436, 450, 451, 452, 453, 456, 459, 460, 464, 480, 481, 482, 546, 547, 554, 555, 562, 563, 564, 565, 566, 568, 571, 576, 580, 581, 618, 625, 632, 639, 640, 641, 646, 649, 651, 652, 655, 657, 662, 665, 670, 673, 674, 675, 679, 682, 687, 690, 691, 694, 695, 697, 699, 700, 702, 703, 704, 707, 708, 709, 710, 714, 715, 716, 719, 720, 721, 722, 723, 724, 725, 726, 728, 731, 732, 734, 735, 738, 802, 822, 823, 824, 829, 833, 834, 836, 837, 840, 841, 842, 844, 845, 850, 851, 854, 860, 861, 864, 867, 871, 876], "while": [5, 9, 22, 68, 73, 92, 114, 115, 147, 179, 197, 205, 210, 214, 240, 292, 299, 311, 322, 405, 406, 421, 432, 433, 434, 435, 436, 437, 452, 569, 571, 622, 691, 700, 701, 702, 703, 707, 715, 719, 728, 736, 827, 830, 837, 854, 860, 861, 867], "whitespac": 702, "whl": 829, "who": [21, 145, 159, 699, 718, 822, 854], "whole": [173, 210, 240, 673, 703, 714, 721, 723, 727, 731, 823, 860, 871], "whom": 145, "whose": [4, 10, 54, 116, 118, 119, 121, 125, 126, 131, 221, 240, 242, 299, 301, 302, 315, 340, 344, 347, 391, 432, 482, 483, 553, 565, 580, 581, 640, 663, 664, 665, 666, 670, 703, 718, 827, 860], "why": [22, 836, 861], "wi": 422, "wide": [1, 444, 695, 738, 842], "width": [860, 870], "wiki": [192, 854], "wikic": 192, "wikipedia": [134, 149, 182, 185, 192, 585, 587, 588, 595, 618, 619, 620, 843], "wildcard": 26, "win": [116, 640, 649], "window": [183, 207, 299, 302, 315, 851], "window_s": [389, 393], "wisconsin": 193, "wise": [4, 5, 13, 73, 113, 219, 220, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 398, 457, 557, 558, 578, 579, 606, 626, 651, 652, 701, 713, 714, 716, 787, 798, 802, 826, 845, 847, 861, 871], "wish": [21, 117, 130, 718, 720, 725, 734, 822], "with_label": [860, 864, 867], "within": [4, 20, 21, 161, 209, 287, 299, 302, 307, 312, 315, 359, 362, 389, 393, 432, 433, 434, 435, 436, 437, 439, 547, 553, 701, 716, 732, 808, 827, 860, 867, 871], "without": [5, 6, 21, 27, 28, 114, 115, 116, 131, 241, 242, 245, 246, 287, 291, 295, 299, 303, 305, 310, 317, 318, 327, 340, 421, 438, 440, 481, 554, 555, 558, 561, 569, 570, 571, 618, 619, 620, 632, 649, 677, 694, 695, 711, 714, 728, 736, 796, 836, 860, 864], "wm": 649, "wmt14": 871, "wn18": 191, "word": [21, 108, 135, 136, 137, 155, 180, 182, 184, 187, 193, 210, 213, 245, 391, 481, 646, 700, 842, 864, 867, 871], "word2vec": 159, "wordid": 864, "wordnet": 191, "work": [3, 4, 8, 9, 11, 21, 116, 118, 119, 188, 214, 216, 219, 295, 395, 407, 410, 411, 413, 414, 415, 418, 421, 428, 461, 564, 640, 664, 665, 666, 667, 668, 670, 671, 674, 692, 693, 704, 706, 718, 719, 721, 722, 733, 734, 738, 835, 843, 845, 847, 851, 860, 865, 867, 871, 874, 876, 877], "workaround": 861, "worker": [4, 188, 235, 292, 700, 704, 721, 746, 786, 789, 807, 851], "workflow": [842, 845], "workload": [13, 232, 239, 699, 703, 718, 731, 829, 851, 876], "workspac": [704, 748, 788, 789, 854], "workspace\ub294": 789, "workspace\uc758": 789, "world": [162, 164, 295, 703, 788, 836, 843, 867, 871], "world_siz": [835, 850, 876, 877], "would": [9, 21, 26, 89, 130, 131, 210, 214, 216, 219, 299, 304, 323, 333, 358, 399, 407, 408, 411, 413, 414, 424, 427, 428, 446, 564, 569, 641, 651, 652, 715, 718, 720, 722, 724, 733, 734, 836, 844, 845, 847, 864, 867, 871], "wouldn": 867, "wrap": [131, 210, 211, 212, 290, 300, 304, 324, 331, 723, 726, 728, 812, 835, 850, 871, 876, 877], "wrapper": [8, 21, 22, 294, 296, 304, 319, 336, 835, 850, 877], "writabl": 847, "write": [4, 21, 22, 311, 320, 324, 391, 573, 649, 658, 700, 703, 713, 719, 731, 734, 788, 824, 827, 832, 840, 841, 842, 845, 847, 848, 849, 860, 864, 867], "write_t": 703, "writeback": 649, "writeback_map": [111, 649], "writer": 134, "written": [9, 714, 828, 834, 835, 837, 860, 871], "wrong": [21, 428], "wu": 756, "wv": 871, "www": [162, 756, 824, 825, 826, 827, 834, 835, 837, 844, 851], "x": [5, 6, 9, 21, 34, 35, 93, 94, 100, 113, 122, 132, 133, 144, 170, 183, 184, 246, 312, 347, 357, 389, 394, 396, 398, 400, 401, 402, 403, 409, 422, 423, 425, 428, 429, 431, 438, 439, 440, 441, 442, 443, 448, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 553, 575, 615, 622, 633, 673, 674, 687, 691, 703, 708, 709, 720, 722, 723, 725, 727, 728, 734, 737, 752, 753, 763, 764, 765, 766, 768, 774, 777, 793, 794, 805, 806, 808, 809, 811, 812, 818, 820, 823, 824, 825, 826, 827, 829, 834, 835, 837, 843, 854, 855, 858, 864, 867, 870, 871, 877], "x1": [347, 575, 614, 625, 829], "x2": [347, 575, 614, 625, 829], "x64": 823, "x86_64": 851, "x_": [347, 422, 438, 440, 506, 575, 578, 829], "x_0": 422, "x_1": [422, 829], "x_2": [422, 829], "x_c": 422, "x_dst": [391, 765, 808], "x_e": [507, 578], "x_i": [409, 418, 420, 422, 444, 673, 829, 871], "x_j": [409, 418, 829, 864, 871], "x_sign": 825, "x_size": 864, "x_src": 391, "x_type": 394, "x_u": [506, 507, 579, 713, 757, 798], "x_uv": 867, "x_v": [506, 507, 579, 713, 757, 798], "xavier": [390, 411, 413, 414, 427, 428], "xavier_normal_": 861, "xavier_uniform_": [10, 434, 436, 461, 727, 730, 770, 814, 859], "xcode": 823, "xeon": [728, 850], "xi": [245, 481, 825], "xlabel": 870, "xrightarrow": 655, "xtick": 870, "xuv": 867, "xv1": 829, "xv2": 829, "xw_t": 394, "xxx": [0, 702, 747, 788], "xxx_edg": [702, 788], "xxx_node": [702, 788], "xxx_note": 788, "xxx_stat": [702, 788], "xxx\ub294": 788, "y": [9, 21, 120, 184, 244, 245, 351, 389, 394, 432, 433, 450, 453, 463, 480, 481, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 708, 722, 723, 727, 728, 734, 752, 763, 765, 774, 793, 805, 808, 812, 818, 823, 825, 827, 829, 834, 835, 843, 845, 864, 870, 877], "y1": 9, "y_": [245, 347, 438, 440, 481, 575, 737, 777, 820, 845], "y_dst": 391, "y_hat": [720, 727, 826, 827, 835, 877], "y_i": [835, 877], "y_pred": 826, "y_true": 826, "y_u": [244, 351, 480], "y_v": [120, 244, 351, 480], "yaml": [148, 311, 316, 838], "yaml_cont": [840, 841], "yaml_data": 311, "yandex": 180, "ye": [864, 871], "year": [703, 706], "yellow": 836, "yelp": [162, 163, 194], "yet": [4, 721, 851], "yield": [220, 290, 291, 294, 296, 300, 319, 412, 422, 646, 647, 720, 725, 836, 837, 846, 861], "ying": 564, "yingtongd": 162, "yiran": 756, "yizhou": 72, "ylabel": 870, "you": [6, 9, 14, 21, 22, 26, 89, 114, 118, 119, 130, 131, 186, 210, 213, 214, 216, 217, 219, 287, 294, 295, 305, 310, 319, 320, 340, 422, 428, 568, 569, 570, 571, 641, 691, 694, 695, 708, 714, 719, 720, 721, 723, 724, 725, 733, 734, 737, 738, 741, 781, 822, 823, 825, 828, 829, 831, 834, 835, 836, 837, 839, 840, 841, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 859, 860, 861, 862, 864, 867, 868, 870, 871, 874, 876, 877], "your": [6, 8, 9, 21, 118, 119, 145, 164, 166, 175, 177, 178, 179, 183, 184, 305, 310, 691, 697, 700, 714, 718, 719, 721, 722, 723, 724, 729, 733, 734, 738, 783, 832, 836, 837, 842, 845, 848, 849, 851, 867, 871], "your_cod": 850, "yu": [858, 859, 860, 867], "yum": 823, "yyi": 0, "z": [9, 178, 399, 825, 860, 861, 871], "z2": 861, "z_": 363, "z_e": 578, "z_i": [397, 399, 861], "z_j": [397, 861], "z_list": 860, "z_v": [579, 860], "zachari": [167, 847], "zero": [4, 27, 28, 30, 43, 46, 70, 74, 89, 93, 103, 108, 113, 114, 115, 118, 119, 120, 122, 125, 130, 150, 178, 179, 210, 235, 240, 249, 299, 307, 312, 330, 348, 357, 395, 405, 407, 410, 411, 413, 414, 415, 418, 420, 421, 424, 428, 451, 455, 457, 461, 462, 463, 485, 486, 487, 488, 490, 491, 492, 493, 509, 511, 512, 513, 514, 517, 518, 519, 520, 525, 526, 527, 528, 531, 532, 533, 534, 563, 570, 571, 583, 584, 587, 588, 599, 600, 601, 603, 604, 605, 606, 607, 612, 614, 619, 620, 621, 622, 626, 628, 632, 634, 636, 639, 641, 647, 648, 649, 651, 652, 667, 675, 687, 689, 695, 700, 702, 703, 711, 721, 728, 731, 733, 734, 735, 746, 755, 763, 765, 773, 774, 786, 788, 796, 805, 808, 817, 818, 825, 829, 845, 847, 854, 860, 864, 867, 870, 871], "zero_grad": [389, 393, 432, 433, 434, 435, 436, 437, 699, 719, 720, 723, 725, 727, 728, 734, 736, 737, 738, 745, 763, 764, 766, 768, 774, 776, 777, 778, 785, 805, 806, 809, 811, 812, 818, 819, 820, 821, 824, 825, 826, 827, 834, 835, 837, 842, 844, 845, 846, 854, 855, 858, 859, 860, 861, 864, 876, 877], "zero_initi": 867, "zeros_lik": [763, 805, 855], "zhang": [756, 858, 859, 860, 861, 864, 867, 870, 871], "zhao": [864, 870], "zheng": [858, 859, 860, 861, 864, 867, 870, 871], "zhenkun": [317, 318], "zhiyu": 756, "zhiyuchen": 756, "zhjwy9343": 756, "zhou": [870, 871], "zihao": [864, 871], "zinc": 195, "zip": [165, 168, 172, 186, 694, 697, 722, 723, 727, 743, 781, 783, 824, 825, 827, 834, 835, 837, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 858, 859, 860, 861, 864, 867, 870, 871, 876, 877], "zpve": [178, 179], "\u4e00\u4e2a\u4e8c\u5206\u56fe": 755, "\u4e00\u4e2a\u4ec5\u5e73\u8861\u56fe\u4e2d\u8282\u70b9": 747, "\u4e00\u4e2a\u53ef\u9009\u9879\u662f\u7528\u6237\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u793a\u4f8b\u68c0\u67e5\u4e0b\u8f7d\u540e\u6587\u4ef6\u7684sha": 741, "\u4e00\u4e2a\u540c\u6784\u56fe": 755, "\u4e00\u4e2a\u56fe\u6279\u6b21\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u5f20\u5927\u56fe": 776, "\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e0c\u671b": 777, "\u4e00\u4e2a\u5b50\u56fe\u5bf9\u5e94\u4e00\u79cd\u5173\u7cfb": 755, "\u4e00\u4e2a\u5e94\u7528\u4e8e": 759, "\u4e00\u4e2a\u5f02\u6784\u56fe\u7531\u4e00\u7cfb\u5217\u5b50\u56fe\u6784\u6210": 755, "\u4e00\u4e2a\u5f02\u6784\u56fe\u793a\u4f8b": 755, "\u4e00\u4e2a\u6279\u6b21\u4e2d\u4e0d\u540c\u7684\u56fe\u662f\u5b8c\u5168\u5206\u5f00\u7684": 776, "\u4e00\u4e2a\u662f\u8fb9\u7684\u96c6\u5408": 750, "\u4e00\u4e2a\u6709\u6548\u7684\u56fe\u540d\u79f0\u5e94\u8be5\u4ec5\u5305\u542b\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf": 747, "\u4e00\u4e2a\u6b63\u6837\u672c\u56fe": 766, "\u4e00\u4e2a\u6d88\u606f\u4f20\u9012\u8fd0\u7b97\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u51fd\u6570": 775, "\u4e00\u4e2a\u7528\u4e8e\u6307\u5b9a": 758, "\u4e00\u4e2a\u7528\u4e8e\u6307\u793a\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7684\u5b57\u6bb5\u540d": 758, "\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5d4c\u5165": 746, "\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b": 759, "\u4e00\u4e2a\u805a\u5408\u51fd\u6570\u548c\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570": 758, "\u4e00\u4e2a\u8d1f\u6837\u672c\u56fe": 766, "\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u805a\u5408\u64cd\u4f5c\u5305\u62ec": 758, "\u4e00\u4e9b\u6a21\u5757\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u805a\u5408\u51fd\u6570": 770, "\u4e00\u53f0\u673a\u5668\u53ef\u80fd\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b": 745, "\u4e00\u662f\u8282\u70b9\u7684\u96c6\u5408": 750, "\u4e00\u6761\u8fb9": 750, "\u4e00\u6761\u94fe\u8def0": 751, "\u4e00\u6837": 746, "\u4e00\u6b21\u6027\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684": 774, "\u4e00\u76f4\u5230\u8f93\u5165": 762, "\u4e00\u79cd\u5b58\u50a8\u5f02\u6784\u56fe\u7684\u5e38\u89c1\u65b9\u6cd5\u662f\u5728\u4e0d\u540c\u7684csv\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 755, "\u4e00\u822c\u6765\u8bf4": 758, "\u4e00\u822c\u6d41\u7a0b\u662f": 776, "\u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u591a\u5c42gnn\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 774, "\u4e0a\u56fe\u4e2d\u9690\u53bb\u4e86\u548c\u8ba1\u7b97\u4e0d\u76f8\u5173\u7684\u8fb9": 763, "\u4e0a\u7684\u5206\u5e03\u5f0f\u90bb\u5c45\u91c7\u6837\u63d0\u4f9b\u4e86": 746, "\u4e0a\u7684\u7279\u5f81\u4e3a": 757, "\u4e0a\u7684\u7684\u7279\u5f81\u4e3a": 757, "\u4e0a\u7684\u8282\u70b9": 763, "\u4e0a\u7684\u8bad\u7ec3\u53ea\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u6a21\u578b\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 778, "\u4e0a\u8c03\u7528\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570": 746, "\u4e0a\u8fd0\u884c": 746, "\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684for\u5faa\u73af\u4e3a\u5904\u7406\u5f02\u6784\u56fe\u8ba1\u7b97\u7684\u4e3b\u8981\u903b\u8f91": 772, "\u4e0a\u8ff0\u51fd\u6570\u7684\u6570\u5b66\u516c\u5f0f\u4e3a": 758, "\u4e0a\u9762\u4ee3\u7801\u91cc\u7684": 770, "\u4e0a\u9762\u7684dataloader\u4e00\u6b21\u8fed\u4ee3\u4f1a\u751f\u6210\u4e09\u4e2a\u8f93\u51fa": 768, "\u4e0a\u9762\u7684dgl": 768, "\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230": 741, "\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4e00\u4e2a": 741, "\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u4e86\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408\u7684\u8ba1\u7b97": 771, "\u4e0b\u4f8b\u7684\u8f93\u51fa\u8282\u70b9\u5305\u542b\u4e86\u6ca1\u6709\u5165\u8fb9\u7684\u5b64\u7acb\u8282\u70b9": 763, "\u4e0b\u56fe\u663e\u793a\u4e86\u4ee5\u8282\u70b98\u4e3a\u79cd\u5b50\u8282\u70b9\u65f6\u7b2c\u4e8c\u4e2agnn\u5c42\u6240\u9700\u7684\u5757": 763, "\u4e0b\u56fe\u663e\u793a\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\u53ca\u5b83\u4eec\u95f4\u7684\u76f8\u4e92\u4f5c\u7528": 745, "\u4e0b\u6587\u5c55\u793a\u4e86sageconv\u793a\u4f8b\u4e2d\u7684": 771, "\u4e0b\u6587\u662f\u5728\u4e00\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 777, "\u4e0b\u6587\u7ee7\u7eed\u4f7f\u7528\u4e0a\u8ff0\u7684\u4f8b\u5b50": 763, "\u4e0b\u7684\u76ee\u5f55": 741, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": [739, 756], "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e\u96c6\u7684url": 740, "\u4e0b\u8f7d\u6587\u4ef6": 741, "\u4e0b\u9762\u4e2d\u4f7f\u7528": 743, "\u4e0b\u9762\u4ee5": 743, "\u4e0b\u9762\u4f7f\u7528": 743, "\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684": 743, "\u4e0b\u9762\u5c55\u793a\u4e86\u5728\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684\u793a\u4f8b": 748, "\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50": 755, "\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u901a\u8fc7\u5bf9\u8282\u70b9\u7279\u5f81\u964d\u7ef4\u6765\u51cf\u5c11\u6d88\u606f\u7ef4\u5ea6\u7684\u793a\u4f8b": 759, "\u4e0b\u9762\u662f\u4f7f\u7528\u70b9\u79ef\u8ba1\u7b97\u8fb9\u5f97\u5206\u7684\u4f8b\u5b50": 777, "\u4e0b\u9762\u662f\u901a\u8fc7\u4f7f\u7528\u51c6\u786e\u6027\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u4e00\u4e2a\u4f8b\u5b50": 778, "\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u4e13\u95e8\u7528\u4e8e\u5728\u90bb\u5c45\u91c7\u6837\u65f6\u5220\u9664\u5c0f\u6279\u6b21\u7684\u4e00\u4e9b\u8fb9\u548c\u5b83\u4eec\u7684\u53cd\u5411\u8fb9": 764, "\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 778, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f": 767, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u5728dgl\u4e2d\u521b\u5efa\u5f02\u6784\u56fe\u7684\u793a\u4f8b": 755, "\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4f7f\u7528\u4e86": 754, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b": 740, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e00\u4e2a\u62e5\u6709": 774, "\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe": 777, "\u4e0b\u9762\u7684\u52a8\u753b\u5c55\u793a\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b": 765, "\u4e0b\u9762\u7684\u6d41\u7a0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6a21\u7248\u7684\u5de5\u4f5c\u65b9\u5f0f": 740, "\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u4fdd\u5b58\u548c\u8bfb\u53d6\u56fe\u548c\u6570\u636e\u96c6\u4fe1\u606f\u7684\u5217\u8868": 744, "\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8bad\u7ec3\u96c6\u62c6\u5206": 746, "\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5\u7684\u793a\u4f8b": 766, "\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e": [766, 768], "\u4e0d\u540c\u540d\u79f0\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u5f62\u72b6": 752, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u5355\u72ec\u7684id": 755, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e38\u5e38\u5177\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u5c5e\u6027": 760, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6216\u5927\u5c0f": 755, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6709\u5355\u72ec\u7684id": 755, "\u4e0d\u5fc5\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5": 755, "\u4e0d\u662fpytorch\u7684nn\u6a21\u5757": 746, "\u4e0d\u80fd\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u5b50\u96c6": 752, "\u4e0d\u8fc7": 754, "\u4e0d\u8fc7\u5927\u90e8\u5206\u7684dgl": 754, "\u4e0e": [745, 746], "\u4e0e\u4e0d\u5b58\u5728\u7684\u8fb9": 766, "\u4e0e\u4e4b\u524d\u7684\u4efb\u52a1\u7c7b\u4f3c": 776, "\u4e0e\u540c\u6784\u56fe\u7684\u60c5\u51b5\u7c7b\u4f3c": 755, "\u4e0e\u5f02\u6784\u56fe\u76f8\u5173\u8054\u7684": 755, "\u4e0e\u6574\u56fe\u5206\u7c7b\u4e0d\u540c": 743, "\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92": 745, "\u4e0e\u6b64\u540c\u65f6": 747, "\u4e0e\u8fb9\u7279\u5f81": 758, "\u4e0e\u901a\u5e38\u4ee5\u5f20\u91cf\u4e3a\u53c2\u6570\u7684pytorch": 771, "\u4e0e\u91c7\u6837\u5668\u8fdb\u884c\u4ea4\u4e92\u4ee5\u83b7\u5f97\u5c0f\u6279\u6b21\u6570\u636e": 745, "\u4e0e\u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5668\u8fde\u63a5\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u5b83\u4eec": 746, "\u4e14\u53ea\u8003\u8651\u5e73\u5747\u805a\u5408\u51fd\u6570\u7684\u60c5\u51b5": 767, "\u4e14\u663e\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u5b58\u50a8\u7684\u8bbe\u5907\u4fe1\u606f": 754, "\u4e24\u4e2a\u51fd\u6570\u5728\u53d8\u6362\u540e\u7684\u56fe\u4e0a\u91cd\u65b0\u52a0\u5165\u6279\u6b21\u4fe1\u606f": 776, "\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684numpy\u6570\u7ec4\u4f1a\u5f88\u5927": 747, "\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u8fb9\u7684\u8054\u7cfb": 764, "\u4e24\u540d\u4f5c\u8005\u53ef\u4ee5\u5728\u4e0d\u540c\u5e74\u4efd\u5171\u540c\u7f72\u540d\u6587\u7ae0": 750, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b": 774, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 774, "\u4e2a\u4eba\u59d3\u540d": 756, "\u4e2a\u4eba\u94fe\u63a5": 756, "\u4e2a\u5bf9\u5e94\u7684\u8d1f\u91c7\u6837\u6837\u672c": 777, "\u4e2a\u8282\u70b9\u6216\u8fb9": 754, "\u4e2a\u8282\u70b9\u7684\u56fe\u4e0a\u8fd0\u884c\u7684": 762, "\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 766, "\u4e2d": [741, 743, 744, 750, 751, 755, 768], "\u4e2d\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u6574\u56fe\u4e0a\u8bad\u7ec3\u4e00\u4e2a2\u5c42\u7684rgcn\u6a21\u578b": 768, "\u4e2d\u4ecb\u7ecd\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 773, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u65b9\u6cd5\u548c": 773, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236": 778, "\u4e2d\u521b\u5efa": 746, "\u4e2d\u53ef\u4ee5\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801": 743, "\u4e2d\u5904\u7406\u6bcf\u4e2a\u6570\u636e\u5b9e\u4f8b\u662f\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5": 744, "\u4e2d\u5b58\u50a8\u7ed3\u679c": 758, "\u4e2d\u5b9a\u4e49\u7684": 774, "\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u96c6\u7684\u57fa\u7c7b": 740, "\u4e2d\u5b9e\u73b0\u4e86\u5e38\u7528\u7684\u6d88\u606f\u51fd\u6570\u548c\u805a\u5408\u51fd\u6570\u4f5c\u4e3a": 758, "\u4e2d\u5df2\u7ecf\u6709\u4e86": 778, "\u4e2d\u6240\u4ecb\u7ecd\u7684": 766, "\u4e2d\u6240\u8ff0\u7684\u5168\u56fe\u8bad\u7ec3": 762, "\u4e2d\u6240\u8ff0\u7684\u8fb9\u56de\u5f52\u6a21\u578b\u76f8\u540c": 777, "\u4e2d\u6240\u91c7\u6837\u7684\u8282\u70b9": 777, "\u4e2d\u627e\u5230": 743, "\u4e2d\u6307\u5b9a": 747, "\u4e2d\u6307\u5b9a\u66f4\u65b0\u51fd\u6570": 758, "\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 748, "\u4e2d\u6587\u7248": [692, 693, 694, 696, 697, 698, 699, 700, 705, 706, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 720, 722, 723, 724, 725, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738], "\u4e2d\u6587\u7248\u94fe\u63a5": 822, "\u4e2d\u662f\u5426\u5b58\u6709\u5904\u7406\u540e\u7684\u6570\u636e": 740, "\u4e2d\u67e5\u770b\u5f02\u6784\u56fe\u5377\u79ef": 778, "\u4e2d\u6807\u8bc6\u8282\u70b9\u6570\u636e": 746, "\u4e2d\u7684": 746, "\u4e2d\u7684\u4e00\u4e2a": 760, "\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20": 768, "\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9": 755, "\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801": 743, "\u4e2d\u7684\u4f8b\u5b50": 778, "\u4e2d\u7684\u505a\u6cd5\u7c7b\u4f3c": 778, "\u4e2d\u7684\u5206\u533a\u6570\u636e\u548c\u76f8\u5173\u6587\u4ef6": 748, "\u4e2d\u7684\u5b57\u6bb5\u540d": 758, "\u4e2d\u7684\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 776, "\u4e2d\u7684\u7279\u5f81\u6765\u52a0\u8f7d\u6807\u7b7e": 768, "\u4e2d\u7684\u8fb9": 755, "\u4e2d\u8282\u70b9\u7684\u96c6\u5408": 776, "\u4e2d\u95f4\u67d0\u4e00\u5c42\u5bf9\u5e94\u7684\u8fb9\u754c\u9700\u8981\u5305\u542b\u8be5\u5c42\u53ca\u6240\u6709\u540e\u7eed\u5c42\u8ba1\u7b97\u6d89\u53ca\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 763, "\u4e2d\u95f4\u6d88\u606f": 758, "\u4e3a\u4e86\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3": 747, "\u4e3a\u4e86\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u83b7\u5f97\u5e73\u8861\u7684\u5de5\u4f5c\u8d1f\u8f7d": 747, "\u4e3a\u4e86\u5904\u7406\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u672c\u5730\u78c1\u76d8\u4e0a\u7684\u56fe\u6570\u636e\u96c6": 740, "\u4e3a\u4e86\u5b8c\u6210\u5355\u4e2a\u56fe\u7684\u9884\u6d4b": 776, "\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684": 755, "\u4e3a\u4e86\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u7c7b": 778, "\u4e3a\u4e86\u5e76\u884c\u5316\u8ba1\u7b97": 745, "\u4e3a\u4e86\u6307\u4ee3\u591a\u6761\u8fb9": 754, "\u4e3a\u4e86\u8bbe\u7f6e": 755, "\u4e3a\u4e86\u968f\u673a": 768, "\u4e3a\u4f8b": 743, "\u4e3a\u540e\u7eed\u5728\u56fe\u4e0a\u8fdb\u884c\u7684\u8ba1\u7b97\u4e0e\u5206\u6790\u7684\u6027\u80fd\u6539\u5584\u63d0\u4f9b\u53ef\u80fd": 743, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": [756, 762, 768], "\u4e3a\u5f02\u6784\u56fe\u4fee\u6539gnn\u6a21\u5757\u7684\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684": 767, "\u4e3a\u5f02\u6784\u56fe\u751f\u6210\u8fb9\u754c\u4e0e\u4e3a\u540c\u6784\u56fe\u751f\u6210\u8fb9\u754c\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c": 763, "\u4e3a\u63d0\u5347\u6570\u636e\u52a0\u8f7d\u901f\u5ea6": 776, "\u4e3a\u6709\u5411\u56fe": 763, "\u4e3a\u67d0\u4e00\u79cd\u8fb9\u7c7b\u578b": 777, "\u4e3a\u6b64": [763, 766], "\u4e3a\u7b80\u4fbf\u8d77\u89c1": 743, "\u4e3a\u7b80\u5355\u8d77\u89c1": 768, "\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0\u7684id": 747, "\u4e3b\u8981\u539f\u56e0\u662fpytorch": 746, "\u4e3b\u8981\u5e94\u7528\u573a\u666f\u662f\u8fd0\u884c\u91c7\u6837api\u4ee5\u652f\u6301\u5c0f\u6279\u91cf\u8bad\u7ec3": 746, "\u4e3b\u8ba1\u7b97\u673a": 748, "\u4e4b\u524d\u58f0\u660e\u5206\u5e03\u5f0f\u5d4c\u5165": 746, "\u4e4b\u524d\u88ab\u58f0\u660e": 746, "\u4e4b\u524d\u8c03\u7528": 746, "\u4e4b\u540e": 771, "\u4e4b\u95f4\u5206\u6570\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e0e": 777, "\u4e4b\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684": 777, "\u4e4b\u95f4\u7684\u5173\u7cfb": 750, "\u4e4b\u95f4\u7684\u5f97\u5206": 777, "\u4e4b\u95f4\u7684\u5f97\u5206\u8981\u9ad8\u4e8e": 777, "\u4e58\u4ee52\u5f97\u5230\u6700\u7ec8\u7ed3\u679c": 758, "\u4e5f\u53ef\u4ee5\u5728\u4e0d\u6d89\u53ca\u6d88\u606f\u4f20\u9012\u7684\u60c5\u51b5\u4e0b": 758, "\u4e5f\u53ef\u4ee5\u662f\u6709\u5411\u7684": 750, "\u4e5f\u5c06\u5728gpu\u4e0a": 753, "\u4e5f\u5c31\u662f\u8bf4": 746, "\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u7ea7\u522b\u7684\u91c7\u6837api": 746, "\u4e5f\u63d0\u4f9b\u4e86": 746, "\u4e5f\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 764, "\u4e5f\u79f0\u4e3a": 758, "\u4e86\u89e3\u4e86\u4e0a\u8ff0\u8ba1\u7b97\u89c4\u5219\u540e": 776, "\u4e8c\u5206\u56fe\u662f\u4e00\u7c7b\u7279\u6b8a\u7684": 750, "\u4e8c\u5206\u56fe\u7684\u60c5\u51b5": 771, "\u4ea4\u53c9\u71b5\u635f\u5931": 777, "\u4eba\u4eec\u81ea\u7136\u4f1a\u60f3\u8981\u5728\u6a21\u578b\u5f00\u53d1\u4e2d\u4f7f\u7528\u5b83\u4eec": 775, "\u4ec5\u4ec5\u4fdd\u7559\u4e86\u8f93\u51fa\u8282\u70b9\u6240\u9700\u8981\u6536\u96c6\u6d88\u606f\u7684\u8fb9": 763, "\u4ec5\u5141\u8bb8\u4f7f\u7528\u6570\u503c\u7c7b\u578b": 752, "\u4ec5\u6709\u7684\u4ee3\u7801\u4fee\u6539\u51fa\u73b0\u5728\u7b2c4": 745, "\u4ecd\u7136\u5177\u6709\u76f8\u540c\u7684\u7ed3\u679c": 776, "\u4ece": [740, 763], "\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230": 763, "\u4ece\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa": 763, "\u4ece\u5185\u5b58\u89d2\u5ea6\u6765\u8bf4\u662f\u9ad8\u6548\u7684": 759, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [743, 749, 754, 756], "\u4ece\u5de6\u81f3\u53f3": 776, "\u4ece\u6210\u5bf9\u7684\u8fb9": 751, "\u4ece\u7528\u4e8e\u56fe\u548c\u7a00\u758f\u77e9\u9635\u7684\u5916\u90e8python\u5e93": 751, "\u4ece\u76ee\u5f55": 744, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe\u6570\u636e": 751, "\u4ece\u800c\u4ea7\u751f\u5305\u542b\u8fb9\u5c0f\u6279\u6b21\u7684\u5b50\u56fe\u4ee5\u53ca\u4f9b\u4e0b\u6587\u4e2d\u6a21\u5757\u4f7f\u7528\u7684": 764, "\u4ece\u800c\u4ee5\u5c0f\u6279\u6b21\u904d\u5386\u6574\u4e2a\u56fe\u6570\u636e\u96c6": 776, "\u4ece\u800c\u51cf\u5c11\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u7f51\u7edc\u901a\u4fe1": 747, "\u4ece\u800c\u5b8c\u6210\u540e\u5411\u4f20\u64ad": 778, "\u4ece\u800c\u5bfc\u81f4\u591a\u6b21\u521b\u5efa\u548c\u5220\u9664": 746, "\u4ece\u800c\u8fdb\u4e00\u6b65\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u5e76\u8282\u7701\u5185\u5b58\u5360\u7528": 759, "\u4ece\u8f93\u51fa\u5f00\u59cb": 762, "\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u6d88\u606f\u4f20\u9012\u5747\u4f7f\u7528": 771, "\u4ee3\u7801\u5b9e\u73b0\u7684\u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u8c03\u7528": 764, "\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u8bfb": 767, "\u4ee3\u7801\u91cc\u79fb\u9664\u4e86\u5f52\u4e00\u5316": 767, "\u4ee3\u8868\u8ba1\u7b97": 768, "\u4ee5\u4e0a3\u79cd\u56fe\u7c7b\u578b\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u76f8\u540c\u7684": 771, "\u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u73b0\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684": 759, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u5f20\u91cf": 746, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e862\u4e2a\u8282\u70b9\u7279\u5f81": 752, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u6570\u636e\u52a0\u8f7d\u5668": 764, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u7684": 768, "\u4ee5\u4e0b\u4ee3\u7801\u5728\u6ce8\u91ca\u91cc\u4fdd\u7559\u4e86\u6574\u56fe\u5b9e\u73b0\u7684\u8bed\u53e5": 767, "\u4ee5\u4e0b\u4ee3\u7801\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f8b\u5b50": 775, "\u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5728": 741, "\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4e3a": 742, "\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5bf9\u6bcf\u79cd\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a\u53d6\u5e73\u5747\u503c\u5e76\u6c42\u548c": 776, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u4e3a\u4ecescipy\u7a00\u758f\u77e9\u9635\u548cnetworkx\u56fe\u521b\u5efadgl\u56fe\u7684\u793a\u4f8b": 751, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u5b9e\u73b0\u4e86\u901a\u8fc7\u5408\u5e76\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u5e76\u5c06\u5176\u6620\u5c04\u5230\u5168\u8fde\u63a5\u5c42\u6765\u9884\u6d4b\u8fb9\u7684\u5f97\u5206": 764, "\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210\u4e86\u4e00\u4e2a\u968f\u673a\u56fe\u7528\u4e8e\u6f14\u793a\u8fb9\u5206\u7c7b": 774, "\u4ee5\u4e0b\u4ee3\u7801\u7528\u4e86": 774, "\u4ee5\u4e0b\u4ee3\u7801\u7531\u4e8e\u8f93\u51fa\u8282\u70b9\u672a\u8986\u76d6\u6240\u6709\u8fd9\u4e9b\u8282\u70b9": 763, "\u4ee5\u4e0b\u4ee3\u7801\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u5206\u5e03\u5f0f\u65b9\u5f0f\u8bad\u7ec3graphsage\u7684\u793a\u4f8b": 745, "\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86": 776, "\u4ee5\u4e0b\u5185\u5bb9\u8bf4\u660e\u4e86\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f": 739, "\u4ee5\u4e0b\u56fe\u4e3a\u4f8b": 763, "\u4ee5\u4e0b\u5c0f\u8282\u5c06\u9010\u4e00\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4": 768, "\u4ee5\u4e0b\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9\u5747\u5300\u91c7\u68375\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 766, "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50": 760, "\u4ee5\u4e0b\u793a\u4f8b\u5c06\u8bad\u7ec3\u96c6\u5185\u548c\u8bad\u7ec3\u96c6\u5916\u7684\u8282\u70b9\u770b\u4f5c\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 747, "\u4ee5\u4e0b\u9762\u7528\u4e8e\u5168\u56fe\u7684gnn\u6a21\u5757\u4e3a\u4f8b": 767, "\u4ee5\u4e0b\u9762\u7684\u81ea\u5b9a\u4e49\u56fe\u5377\u79ef\u6a21\u5757\u4ee3\u7801\u4e3a\u4f8b": 767, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u5b50\u56fe\u7ed3\u6784": 747, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8282\u70b9\u7279\u5f81": 747, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8fb9\u7279\u5f81": 747, "\u4ee5\u4fbf\u533a\u5206": 764, "\u4ee5\u4fbf\u5b83\u4e5f\u53ef\u4ee5\u5728\u5f02\u6784\u56fe\u4e0a\u4f7f\u7528": 763, "\u4ee5\u4fbf\u6bcf\u4e2a\u8bad\u7ec3\u5668\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bad\u7ec3\u96c6\u5b50\u96c6": 746, "\u4ee5\u50a8\u5b58\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u5c5e\u6027": 752, "\u4ee5\u5145\u5206\u5229\u7528": 771, "\u4ee5\u5229\u7528\u66f4\u5927\u8303\u56f4\u7684\u90bb\u5c45\u4fe1\u606f": 778, "\u4ee5\u53ca": 745, "\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6267\u884c\u7684\u8ba1\u7b97": 749, "\u4ee5\u53ca\u53ef\u5b9a\u5236\u7684\u805a\u5408\u51fd\u6570\u548c\u975e\u7ebf\u6027\u51fd\u6570": 778, "\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5e26\u6709\u6d88\u606f\u4f20\u9012\u7684gnn\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282": 778, "\u4ee5\u53ca\u60f3\u8981\u4e86\u89e3\u5982\u4f55\u5728\u5c0f\u6279\u6b21\u6570\u636e\u4e0a\u8fdb\u884c\u8bc4\u4f30\u548c\u63a8\u7406\u6a21\u578b\u7684\u7528\u6237": 762, "\u4ee5\u53ca\u628a\u5b83\u4eec\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\u7684\u7c7b\u578b\u8fdb\u884c\u5408\u5e76\u540e\u7684\u5355\u4e00\u8fb9\u7c7b\u578b": 774, "\u4ee5\u53ca\u6765\u81ea\u8f93\u5165\u8282\u70b9\u7684\u8868\u793a\u5982\u4f55\u4f20\u64ad\u5230\u8f93\u51fa\u8282\u70b9": 768, "\u4ee5\u53ca\u7531\u5c0f\u6279\u6b21\u8fb9\u5bfc\u51fa\u7684\u539f\u59cb\u56fe\u7684\u5b50\u56fe": 764, "\u4ee5\u53ca\u8ba1\u7b97\u5176\u4e24\u7aef\u8282\u70b9\u8868\u793a\u6240\u9700\u7684\u5757\u5217\u8868": 764, "\u4ee5\u53ca\u8bf8\u5982\u7c7b\u522b\u6570": 740, "\u4ee5\u53ca\u8d1f\u91c7\u6837\u5668": 766, "\u4ee5\u53ca\u8fb9\u7684\u6807\u7b7e": 774, "\u4ee5\u591a\u5c42gcn\u4e3a\u4f8b": 768, "\u4ee5\u5bfc\u5165\u6570\u636e\u7684\u7279\u5b9a\u90e8\u5206": 743, "\u4ee5\u5c06\u4efb\u4f55\u8fb9\u754c\u8f6c\u6362\u4e3a\u5757": 763, "\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u7ec4\u8fb9\u8fdb\u884c\u8fed\u4ee3": 764, "\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u548c\u7f51\u7edc\u901a\u4fe1": 745, "\u4ee5\u652f\u6301\u9700\u8981\u8282\u70b9\u5d4c\u5165\u7684\u76f4\u63a8": 746, "\u4ee5\u67e5\u770b\u5982\u4f55\u4ece\u5916\u90e8\u6570\u636e\u6e90\u6784\u5efa\u56fe\u7684\u5b8c\u6574\u6307\u5357": 743, "\u4ee5\u6982\u7387p\u968f\u673a\u9009\u62e9\u8fb9": 763, "\u4ee5\u7a81\u51fa\u5c55\u793a\u7528\u4e8e\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 743, "\u4ee5\u83b7\u5f97": 743, "\u4ee5\u8868\u683c\u683c\u5f0f\u50a8\u5b58\u8282\u70b9": 751, "\u4ee5\u8bbf\u95ee\u7fa4\u96c6\u4e2d\u7684\u5206\u533a\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 746, "\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 746, "\u4ee5\u8fdb\u884c\u8fed\u4ee3": 743, "\u4ee5\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 763, "\u4ee5\u907f\u514d\u91c7\u6837\u6240\u5e26\u6765\u7684\u968f\u673a\u6027": 765, "\u4ee5\u9632\u4f5c\u8005\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u66f4\u6539\u4e86\u6587\u4ef6": 741, "\u4efb\u4f55\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u4ee5\u7528\u4f5c\u8fb9\u754c": 763, "\u4efb\u4f55\u6d89\u53cagpu\u56fe\u7684\u64cd\u4f5c\u90fd\u662f\u5728gpu\u4e0a\u8fd0\u884c\u7684": 753, "\u4efb\u52a1": 777, "\u4efb\u52a1\u52a0\u8f7d\u6570\u636e\u96c6": 742, "\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u4e00\u6b65\u805a\u5408": 772, "\u4f1a\u6839\u636eip\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u5bf9\u5e94\u7684\u8ba1\u7b97\u673a\u6765\u5b58\u50a8\u56fe\u5206\u533a": 748, "\u4f1a\u7ed3\u5408\u805a\u5408\u540e\u7684\u6d88\u606f\u548c\u8282\u70b9\u672c\u8eab\u7684\u7279\u5f81\u6765\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 757, "\u4f1a\u805a\u5408\u8282\u70b9\u63a5\u53d7\u5230\u7684\u6d88\u606f": 757, "\u4f1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684": 772, "\u4f1a\u975e\u5e38\u6d88\u8017\u8d44\u6e90": 765, "\u4f20\u7ed9": 747, "\u4f46\u4e0d\u540c\u7684\u662f": 776, "\u4f46\u4e0d\u652f\u6301\u4e00\u4e9b\u8ba1\u7b97\u8fd0\u7b97\u7b26": 746, "\u4f46\u5176\u57fa\u672c\u601d\u60f3\u548c\u672c\u7ae0\u63cf\u8ff0\u7684\u6d41\u7a0b\u662f\u4e00\u81f4\u7684": 774, "\u4f46\u53ea\u5bf9\u4e00\u5c42\u8fdb\u884c\u8ba1\u7b97": 765, "\u4f46\u5b83\u6bcf\u6b21\u53ea\u4e3a\u4e00\u5c42\u8fdb\u884c\u91c7\u6837": 765, "\u4f46\u662f": [763, 771], "\u4f46\u662f\u4efb\u4f55\u62e5\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u7528\u4f5c\u8fb9\u754c": 763, "\u4f46\u6709\u65f6\u7528\u6237\u8fd8\u662f\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u91c7\u6837\u5668": 763, "\u4f46\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u79cd\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe\u5bf9\u8c61": 742, "\u4f46\u8fd8\u662f\u6709\u4e00\u4e9b\u660e\u663e\u7684\u533a\u522b": 764, "\u4f4d\u4e8e\u8282\u70b9\u5217\u8868\u7684\u6700\u524d\u9762": 771, "\u4f4d\u6216": 754, "\u4f4d\u6574\u6570": 754, "\u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u8282\u70b9id\u548c\u8fb9id": 754, "\u4f5c\u4e3a\u4e00\u4e2a\u672a\u7ecf\u8fc7\u5f52\u4e00\u5316\u7684\u7c7b\u522b\u7684\u5206\u5e03": 774, "\u4f5c\u4e3a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u5982\u4f55\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684dgl": 769, "\u4f5c\u4e3a\u5165\u53c2": 766, "\u4f5c\u4e3a\u53c2\u6570": 768, "\u4f5c\u4e3a\u6f14\u793a\u7684\u6837\u4f8b\u4ee3\u7801": 778, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e": 746, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e\u4e4b\u4e00\u6dfb\u52a0\u5230": 746, "\u4f5c\u4e3a\u8282\u70b9\u8868\u793a\u8ba1\u7b97\u6a21\u578b\u4ee5\u53ca\u524d\u4e00\u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684": 774, "\u4f5c\u4e3a\u8f93\u5165": 763, "\u4f5c\u4e3a\u8fb9\u9884\u6d4b\u6a21\u578b": 774, "\u4f5c\u5f0a": 764, "\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9": 743, "\u4f7f\u7528": 746, "\u4f7f\u7528dgl": 776, "\u4f7f\u7528int32\u6784\u5efa\u56fe": 754, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": [739, 756], "\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 758, "\u4f7f\u7528\u5e73\u5747\u8bfb\u51fa\u8ba1\u7b97\u56fe\u8868\u793a": 776, "\u4f7f\u7528\u5e95\u5c42api\u65f6": 746, "\u4f7f\u7528\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 778, "\u4f7f\u7528\u6240\u6709\u8282\u70b9": 778, "\u4f7f\u7528\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 778, "\u4f7f\u7528\u6709\u5411\u7684networkx\u56fe": 751, "\u4f7f\u7528\u6a21\u578b\u65f6\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u8282\u70b9\u7c7b\u578b\u548c\u6570\u636e\u7279\u5f81\u7684\u5b57\u5178": 774, "\u4f7f\u7528\u8be5\u540d\u79f0\u6765\u8bc6\u522b\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u56fe": 747, "\u4f7f\u7528\u8d1f\u91c7\u6837\u65b9\u6cd5\u540e": 766, "\u4f7f\u7528\u8fd9\u6837\u7684": 746, "\u4f8b\u5982": [744, 746, 747, 748, 749, 750, 752, 755, 758, 761, 763, 764, 766, 767, 768, 770, 774, 775, 776, 777, 778], "\u4f8b\u5982nf": 748, "\u4f8b\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7fa4\u793e\u533a": 776, "\u4f8b\u5982\u4f7f\u7528": 776, "\u4f8b\u5982\u5728\u4e0b\u56fe\u4e2d": 755, "\u4f8b\u5982\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b": 746, "\u4f8b\u5982\u60f3\u5728\u67d0\u4e00\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u5206\u7c7b\u4efb\u52a1": 774, "\u4f8b\u5982\u6c42\u548c\u4ee5\u53ca\u6c42\u5747\u503c": 746, "\u4f8b\u5982\u8282\u70b9\u548c\u8fb9\u7684\u6570\u91cf": 746, "\u4f9d\u6279\u6b21\u5bf9\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3": 765, "\u4fdd\u5b58dglgraph\u5bf9\u8c61\u548c\u6807\u7b7e\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 744, "\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 744, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [739, 740, 756], "\u4fdd\u5b58\u56fe\u548c\u6807\u7b7e": 744, "\u4fdd\u5b58\u8bad\u7ec3\u597d\u7684\u6a21\u578b": 778, "\u4fdd\u7559\u5173\u7cfb": 755, "\u4fee\u6539\u6a21\u578b\u8bad\u7ec3\u5faa\u73af\u90e8\u5206": 768, "\u501f\u7528\u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u5c0f\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5": 776, "\u503c\u4e3a\u4e00\u7684\u5143\u7d20\u8868\u793a\u4e00\u6761\u8fb9": 775, "\u503c\u4e3a\u4f5c\u7528\u5728\u8be5\u5173\u7cfb\u4e0ann\u6a21\u5757\u5bf9\u8c61": 772, "\u503c\u5219\u4e3a\u5bf9\u5e94nn\u6a21\u5757\u7684\u81ea\u5b9a\u4e49\u53c2\u6570": 772, "\u503c\u662f\u8fd9\u79cd\u5173\u7cfb\u5bf9\u5e94": 760, "\u5047\u5b9agraph": 775, "\u5047\u8bbe\u6279\u6b21\u5927\u5c0f\u4e3a": 776, "\u5047\u8bbe\u6709\u5982\u4e0b\u7684\u8fb9\u754c": 763, "\u5047\u8bbe\u7ea2\u8272\u8282\u70b9\u4e3a\u9700\u8981\u66f4\u65b0\u7684\u76ee\u6807\u8282\u70b9": 763, "\u5047\u8bbe\u8282\u70b9": 757, "\u5047\u8bbe\u8981\u4f7f\u75282\u5c42gnn\u8ba1\u7b97\u79cd\u5b50\u8282\u70b98": 763, "\u5143\u7d20\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8fb9\u7c7b\u578b": 776, "\u5143\u7ec4\u4e2d\u7684\u7b2c1\u4e2a\u5143\u7d20\u4e3a\u6e90\u8282\u70b9\u7279\u5f81": 771, "\u5148\u6765\u770b\u4e00\u4e0b": 763, "\u5168\u56fe": 778, "\u51713\u4e2a\u6210\u5458\u5c5e\u6027": 758, "\u5173\u4e8e": 752, "\u5173\u4e8edgl\u5185\u7f6e\u56fe\u5377\u79ef\u6a21\u5757\u7684\u5b8c\u6574\u5217\u8868": 778, "\u5173\u4e8e\u5185\u7f6e\u51fd\u6570\u7684\u5217\u8868": 758, "\u5173\u4e8e\u5185\u7f6e\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5": 766, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [749, 756], "\u5173\u4e8e\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u8fdb\u9636\u7528\u6cd5": 758, "\u5173\u6ce8": [755, 764], "\u5173\u7cfb": 764, "\u5173\u7cfb\u53ef\u4ee5\u662f\u65e0\u5411\u7684": 750, "\u5173\u7cfb\u8868\u793a\u4e3a": 771, "\u5176\u4e2d": [747, 754, 759, 763, 772, 776, 777], "\u5176\u4e2dxxx\u662f\u63d0\u4f9b\u7ed9\u5212\u5206api\u7684\u56fe\u7684\u540d\u79f0": 747, "\u5176\u4e2d\u4e00\u4e9b\u4ee3\u7801\u6f14\u793a\u4e86\u67e5\u8be2\u56fe\u7ed3\u6784\u7684\u90e8\u5206api\u7684\u4f7f\u7528\u65b9\u6cd5": 754, "\u5176\u4e2d\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u6a21\u5757\u7ec4\u4ef6": 776, "\u5176\u4e2d\u5305\u542b\u6240\u6709\u8d1f\u91c7\u6837\u7684\u8282\u70b9\u5bf9\u4f5c\u4e3a\u8fb9": 777, "\u5176\u4e2d\u5305\u542b\u6709\u5173\u8f93\u5165\u56fe\u7684\u6240\u6709\u4fe1\u606f": 746, "\u5176\u4e2d\u5305\u542b\u7531\u8d1f\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u6240\u6709\u4e0d\u5b58\u5728\u7684\u8fb9": 766, "\u5176\u4e2d\u5305\u542b\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u5185\u6240\u6709\u7684\u8fb9": 766, "\u5176\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b": 746, "\u5176\u4e2d\u7684\u8fb9\u8fde\u63a5\u4e24\u7c7b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 750, "\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8fb9\u754c": 763, "\u5176\u4e2d\u7ea2\u8272\u548c\u7eff\u8272\u8282\u70b9": 763, "\u5176\u4e2d\u8282\u70b9\u548c\u8fb9\u53ef\u4ee5\u662f\u6709\u7c7b\u578b\u7684": 749, "\u5176\u4f59\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8": 745, "\u5176\u503c\u4e3a\u6bcf\u4e2a\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 772, "\u5176\u6570\u5b66\u5b9a\u4e49\u4e3a": 772, "\u5176\u6700\u7ec8\u8868\u793a\u5c06\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c": 762, "\u5176\u6b21": 776, "\u5176\u6d88\u606f\u4f20\u9012\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b": 763, "\u5176\u7ed3\u679c": 753, "\u5176\u7ed3\u679c\u662f": 765, "\u5176\u884c\u4e3a\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u975e\u5e38\u76f8\u4f3c": 746, "\u5176\u9002\u7528\u4e8e\u5355\u5411\u4e8c\u5206\u56fe": 767, "\u5176\u952e\u4e3a": 772, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 741, "\u5177\u4f53\u5982\u4e0b\u6240\u793a": 778, "\u5177\u4f53\u6765\u8bf4": [745, 765], "\u5177\u4f53\u884c\u4e3a\u5982\u4e0b": 755, "\u5177\u6709\u5bf9\u96c6\u7fa4\u5185\u6240\u6709\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u65e0\u5bc6\u7801ssh\u8bbf\u95ee\u6743\u9650": 748, "\u5177\u6709\u76f8\u540c\u7684\u952e": 772, "\u5185\u7f6e\u51fd\u6570": 758, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": [756, 757], "\u5185\u7f6e\u6d88\u606f\u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u5143\u51fd\u6570\u6216\u4e8c\u5143\u51fd\u6570": 758, "\u5185\u7f6e\u7684dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u7684\u8f93\u5165\u56fe\u53ca\u7279\u5f81\u5fc5\u987b\u6ee1\u8db3\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00": 767, "\u518d\u5c06": 758, "\u518d\u6784\u5efa\u4e00\u4e2a\u5173\u7cfb\u5b57\u5178": 755, "\u518d\u6b21\u63d0\u9192\u4e0b": 768, "\u518d\u7531\u8fb9\u754c\u8f6c\u6362\u6210\u5757": 763, "\u51c6\u5907\u4e00\u4e2a\u6279\u6b21\u7684\u56fe": 776, "\u51fa\u4e8e\u5efa\u6a21\u7684\u76ee\u7684": 755, "\u51fd\u6570": [743, 754, 755, 758, 771, 776], "\u51fd\u6570\u4e2d\u5b9e\u73b0\u6570\u636e\u5904\u7406": 743, "\u51fd\u6570\u6267\u884c\u4e86\u5b9e\u9645\u7684\u6d88\u606f\u4f20\u9012\u548c\u8ba1\u7b97": 771, "\u51fd\u6570\u662f\u57fa\u4e8e\u5747\u5300\u5206\u5e03\u7684\u91c7\u6837\u51fd\u6570": 766, "\u51fd\u6570\u6765\u5728\u8fd0\u884c\u65f6\u62c6\u5206\u8bad\u7ec3": 746, "\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684": 754, "\u51fd\u6570\u6765\u6784\u5efa\u4e00\u4e2a": 754, "\u51fd\u6570\u7684\u5185\u5bb9\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a3\u9879\u64cd\u4f5c": 771, "\u51fd\u6570\u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u5728\u5b8c\u6210\u6d88\u606f\u805a\u5408\u540e\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 771, "\u51fd\u6570\u7684\u8f93\u5165\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 774, "\u51fd\u6570\u7684\u8f93\u51fa\u4e0d\u4f1a\u5168\u4e3a0": 771, "\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u7684\u5bf9\u8c61": 772, "\u51fd\u6570\u805a\u5408\u6765\u81ea\u591a\u4e2a\u5173\u7cfb\u7684\u7ed3\u679c": 772, "\u51fd\u6570\u8fd8\u4f7f\u75282\u4e2a\u989d\u5916\u7684\u5b57\u5178\u53c2\u6570": 772, "\u51fd\u6570\u8fdb\u884c\u89e3\u538b\u7f29": 741, "\u51fd\u6570\u9700\u8981\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u8f93\u5165\u56fe\u7c7b\u578b": 772, "\u51fd\u6570\u9700\u8981\u5904\u7406\u8f93\u5165\u7684\u8bb8\u591a\u6781\u7aef\u60c5\u51b5": 771, "\u5206\u522b\u5728\u7b2c8": 752, "\u5206\u522b\u662f\u53ef\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u51fd\u6570\u4e0e\u805a\u5408\u51fd\u6570": 763, "\u5206\u522b\u662f\u77e9\u9635": 759, "\u5206\u522b\u7528\u4e8e\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5f02\u6784\u56fe\u548c\u52a0\u8f7d\u5b83\u4eec": 755, "\u5206\u522b\u7528\u4e8e\u8bbf\u95ee\u6e90\u8282\u70b9": 758, "\u5206\u533a": [745, 747], "\u5206\u533a0\u7684\u6570\u636e": 747, "\u5206\u533a1\u7684\u6570\u636e": 747, "\u5206\u533a\u6570\u636e\u548c\u8bad\u7ec3\u811a\u672c\u90fd\u5df2\u88ab\u590d\u5236\u5230\u96c6\u7fa4\u6216\u5b58\u5728\u96c6\u7fa4\u4e2d\u6240\u6709\u8ba1\u7b97\u673a\u5747\u53ef\u8bbf\u95ee\u7684\u5168\u5c40\u5b58\u50a8\u7a7a\u95f4": 748, "\u5206\u533a\u914d\u7f6e\u6587\u4ef6\u4ee5\u53ca\u56fe\u5206\u533a": 748, "\u5206\u5e03\u5f0f\u5d4c\u5165\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u5f20\u91cf\u4e4b\u4e0a": 746, "\u5206\u5e03\u5f0f\u5d4c\u5165\u7684\u521b\u5efa\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684\u521b\u5efa\u975e\u5e38\u76f8\u4f3c": 746, "\u5206\u5e03\u5f0f\u5f20\u91cf\u5fc5\u987b\u4e0e\u56fe\u7684\u8282\u70b9\u6216\u8fb9\u76f8\u5173\u8054": 746, "\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668\u5177\u6709\u4e0epytorch": 746, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u548c\u72ec\u7acb\u6a21\u5f0f": 746, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": [745, 756], "\u5206\u5e03\u5f0f\u8bad\u7ec3": 756, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u5c06\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u5206\u533a": 748, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [745, 756], "\u5206\u5e03\u5f0f\u91c7\u6837\u548c\u6570\u636e\u5206\u5272": 746, "\u5206\u5e03\u5f0f\u91c7\u6837\u6a21\u5757\u9075\u5faa\u76f8\u540c\u7684\u8bbe\u8ba1": 746, "\u5206\u914did\u540e": 747, "\u5206\u914d\u7ed9": 746, "\u5207\u7247\u53d6\u8f93\u5165\u7279\u5f81\u7684\u524d\u51e0\u884c": 767, "\u5207\u7247\u884c\u6570\u53ef\u4ee5\u901a\u8fc7": 767, "\u5212\u5206api\u901a\u8fc7\u5728": 747, "\u5212\u5206\u6216\u7279\u5f81\u5f52\u4e00\u5316\u7b49\u64cd\u4f5c\u5efa\u8bae\u5728": 740, "\u5212\u5206\u63a9\u7801": 743, "\u5217\u8868": 742, "\u5219": 746, "\u5219dgl\u4f1a\u81ea\u52a8\u5c06\u8f93\u5165\u8282\u70b9\u7279\u5f81\u524d\u4e00\u90e8\u5206\u8bbe\u4e3a\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 767, "\u5219dgl\u5141\u8bb8\u4f7f\u7528": 755, "\u5219\u4e0d\u9700\u8981\u6307\u5b9a\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b": 755, "\u5219\u53ea\u9700\u8981\u6309\u7167\u5982\u4e0b\u7684\u65b9\u6cd5\u91cd\u5199forward\u51fd\u6570": 767, "\u5219\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6d88\u606f\u6216\u805a\u5408\u51fd\u6570": 758, "\u5219\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u7b80\u5355\u5730\u5b9a\u4e49\u91c7\u6837\u5668": 763, "\u5219\u53ef\u4ee5\u6dfb\u52a0\u53c2\u6570": 743, "\u5219\u53ef\u4ee5\u901a\u8fc7": 768, "\u5219\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u76f4\u63a5\u8bfb\u53d6\u5757\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 763, "\u5219\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u51fd\u6570": 741, "\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee": 768, "\u5219\u56fe\u8bfb\u51fa\u7684\u5f20\u91cf\u5f62\u72b6\u4e3a": 776, "\u5219\u5b83\u4e5f\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55": 741, "\u5219\u6307\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u7ed3\u679c": 772, "\u5219\u6a21\u578b\u5728\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3\u65f6\u53ea\u9700\u505a\u5f88\u5c0f\u7684\u8c03\u6574": 768, "\u5219\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u8fb9\u7c7b\u578b\u53ca\u5176\u53cd\u5411\u8fb9\u7c7b\u578b\u4e4b\u95f4\u7684\u6620\u5c04": 764, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u5411\u4e8c\u5206\u56fe": 767, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u540c\u6784\u56fe": 767, "\u5219\u8fb9\u662f\u65e0\u5411\u7684": 750, "\u5219\u8fb9\u662f\u6709\u5411\u7684": 750, "\u5219\u901a\u5e38\u4e0d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7cbe\u786e\u7684\u79bb\u7ebf\u63a8\u65ad": 765, "\u5219\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u4f18\u5316\u5668": 746, "\u5219\u9ed8\u8ba4\u503c\u4e3a": 748, "\u521b\u5efa": 743, "\u521b\u5efa\u4e00\u4e2a": 754, "\u521b\u5efa\u4e00\u4e2a\u5177\u67093\u79cd\u8282\u70b9\u7c7b\u578b\u548c3\u79cd\u8fb9\u7c7b\u578b\u7684\u5f02\u6784\u56fe": 755, "\u521b\u5efa\u5206\u5e03\u5f0f\u56fe\u5bf9\u8c61": 745, "\u521b\u5efa\u5d4c\u5165\u65f6": 746, "\u521b\u5efa\u800c\u6765": 751, "\u521b\u5efa\u91c7\u6837\u5668": 745, "\u521b\u5efa\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u793a\u4f8b": 743, "\u521d\u59cb\u5316api\u5e94\u6309\u4ee5\u4e0b\u987a\u5e8f\u8c03\u7528": 746, "\u521d\u59cb\u5316dgl\u7684\u5206\u5e03\u5f0f\u6a21\u5757": 745, "\u521d\u59cb\u5316\u53c2\u6570": 770, "\u521d\u59cb\u56fe\u548c\u8981\u8ba1\u7b97\u8868\u793a\u7684\u8282\u70b9": 763, "\u5220\u9664\u5c0f\u6279\u6b21\u4e2d\u7684\u8fb9\u53ca\u5176\u53cd\u5411\u8fb9\u7684\u65b9\u6cd5\u5982\u4e0b": 764, "\u5229\u7528\u8282\u70b9\u81ea\u8eab\u7684\u7279\u5f81\u548c\u5176\u90bb\u8282\u70b9\u53ca\u8fb9\u7684\u7279\u5f81\u6765\u8ba1\u7b97\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 778, "\u5229\u7528\u8fd9\u4e9b\u4f18\u5316\u7684\u4e00\u4e2a\u5e38\u89c1\u5b9e\u8df5\u662f\u901a\u8fc7\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 759, "\u5230": [754, 774], "\u524d\u8005\u5728": 746, "\u524d\u9762\u7ae0\u8282\u91cc\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7528\u5728\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 763, "\u5269\u4f59\u90e8\u5206\u7684\u8bad\u7ec3\u4ee3\u7801\u548c\u540c\u6784\u56fe\u4ee3\u7801\u76f8\u540c": 776, "\u52a0\u6743\u7684": 750, "\u52a0\u6cd5\u53ef\u4ee5\u901a\u8fc7dgl\u7684\u5185\u7f6e\u51fd\u6570": 759, "\u52a0\u8f7d": 742, "\u5305\u542b\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b": 767, "\u5305\u542b\u4e86\u6bcf\u4e2agnn\u5c42\u8981\u8ba1\u7b97\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u51fa": 768, "\u5305\u542b\u4e86\u96c6\u7fa4\u4e2d\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 748, "\u5305\u542b\u591a\u4e2a\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u7c7b": 745, "\u5305\u542b\u90bb\u5c45\u91c7\u6837\u548c\u6d88\u606f\u4f20\u9012": 765, "\u5305\u62ec": [745, 751, 771], "\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e": 777, "\u5305\u62ec\u5206\u533a\u4e2d\u7684\u56fe\u7ed3\u6784": 746, "\u5305\u62ec\u81ea\u5faa\u73af\u7684\u8fb9": 750, "\u5305\u62ec\u8bbf\u95ee\u8282\u70b9": 746, "\u5305\u63d0\u4f9b\u4e86\u7528\u4e8e\u4e0b\u8f7d\u548c\u5904\u7406ogb\u6570\u636e\u96c6\u5230": 742, "\u533a\u522b\u53ea\u5728\u4e8e\u8282\u70b9\u88ab\u5212\u5206\u4e3a\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 767, "\u5355\u5411\u4e8c\u5206\u56fe": 767, "\u5355\u72ec\u8c03\u7528\u9010\u8fb9\u8ba1\u7b97": 758, "\u5373": [759, 763, 775], "\u5373\u4e00\u7ec4\u673a\u5668": 745, "\u5373\u4efb\u610f\u4e24\u4e2a\u56fe\u4e4b\u95f4\u6ca1\u6709\u8fb9\u8fde\u63a5": 776, "\u5373\u4f7f": 746, "\u5373\u6267\u884c": 759, "\u5373\u6839\u636e\u7ed3\u6784\u548c\u6574\u4f53\u4fe1\u606f\u5bf9\u56fe\u8fdb\u884c\u5206\u7c7b": 776, "\u5373\u6b63\u786e\u7684\u6807\u6ce8": 778, "\u5373\u6bcf\u4e2a\u884c\u5207\u7247\u50a8\u5b581\u4e2a\u8282\u70b9\u62161\u6761\u8fb9\u7684\u7279\u5f81": 752, "\u5373\u8282\u70b94": 763, "\u5373\u8fb9": 754, "\u5373\u9884\u6d4b\u4efb\u52a1\u6570": 743, "\u539f\u5219\u662f\u5c06": 767, "\u539f\u56e0\u662f\u6d88\u606f\u4f20\u9012\u540e\u7684\u7279\u5f81\u7ec4\u5408\u9700\u8981\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u8282\u70b9\u8868\u793a": 763, "\u539f\u56e0\u662f\u8fd9\u9700\u8981\u4e3a\u6bcf\u4e00\u5c42\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u8868\u793a": 765, "\u539f\u56fe\u4e0a\u7684\u5176\u4ed6\u8282\u70b9\u662f\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u7684": 763, "\u539f\u59cb\u7279\u5f81\u5728cpu\u4e0a": 753, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8282\u70b9id": 755, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8fb9id": 755, "\u539f\u59cb\u7684\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684id\u88ab\u5b58\u50a8\u5728": 755, "\u539f\u59cb\u8282\u70b9\u7c7b\u578b": 755, "\u539f\u59cb\u8fb9\u7c7b\u578b": 755, "\u53c2\u6570": 772, "\u53c2\u8003\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7b2c16\u548c18\u884c": 752, "\u53c2\u8003\u624b\u518c\u63d0\u4f9b\u4e86\u8be5\u7528\u6cd5\u7684\u66f4\u591a\u7ec6\u8282": 751, "\u53c2\u8003\u7528\u6237\u6307\u5357": 760, "\u53c2\u89c1": [758, 767], "\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u548c\u6574\u578b": 752, "\u53cd\u5411\u8fb9\u901a\u5e38\u5177\u6709\u4e0e\u6b63\u5411\u8fb9\u672c\u8eab\u4e0d\u540c\u7684\u8fb9\u7c7b\u578b": 764, "\u53d6\u5e73\u5747\u503c": 776, "\u53d8\u91cf": 775, "\u53e6\u4e00\u4e2a\u5e94\u7528\u4e8e": 759, "\u53e6\u4e00\u4e2a\u7528\u4e8e\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 746, "\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 753, "\u53e6\u5916": [746, 748, 759], "\u53e6\u89c1": 751, "\u53ea\u4f7f\u7528": 755, "\u53ea\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u5305\u62ec\u8282\u70b9\u8868\u793a\u7684\u5b57\u5178\u6765\u8ba1\u7b97\u9884\u6d4b\u503c": 778, "\u53ea\u8981\u4f7f\u8fd4\u56de\u7684\u56fe\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9": 763, "\u53ea\u9700\u8981\u6309\u4e0b\u4f8b\u7f16\u5199\u4ee3\u7801": 774, "\u53ea\u9700\u8981\u8282\u70b94": 763, "\u53ea\u9700\u8981\u9884\u6d4b\u6bcf\u4e2a\u8fb9\u7684\u6807\u91cf\u5206\u6570\u800c\u4e0d\u662f\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03": 766, "\u53ef\u4ee5\u4ece\u5916\u90e8\u6765\u6e90\u6784\u9020\u4e00\u4e2a": 751, "\u53ef\u4ee5\u4f7f\u7528": [754, 763], "\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u56fe\u8868\u793a": 750, "\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e0a\u8ff0\u8fb9\u754c\u8f6c\u6362\u4e3a\u8f93\u51fa\u8282\u70b9\u4e3a8\u7684\u5757": 763, "\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4ee5\u4e0b\u4ee3\u7801\u7684\u65b9\u6cd5\u83b7\u53d6\u5355\u4e2a\u56fe\u6570\u636e\u96c6\u7684\u56fe\u6570\u636e": 773, "\u53ef\u4ee5\u5148\u62bd\u53d6\u5f02\u6784\u56fe\u7684\u8fb9\u7c7b\u578b\u5b50\u56fe": 755, "\u53ef\u4ee5\u5148\u901a\u8fc7\u60f3\u8981\u56ca\u62ec\u7684\u8282\u70b9\u7f16\u53f7\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe": 761, "\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u7684\u5757": 763, "\u53ef\u4ee5\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c": 746, "\u53ef\u4ee5\u5982\u4e0b\u5b9a\u4e49\u94fe\u63a5\u9884\u6d4b\u6a21\u578b": 766, "\u53ef\u4ee5\u5b8c\u6210\u4e00\u8f6e\u6d88\u606f\u4f20\u9012\u8ba1\u7b97": 778, "\u53ef\u4ee5\u5c06\u5176\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4fee\u6539\u4ee5\u652f\u6301\u8fb9\u6743\u91cd": 775, "\u53ef\u4ee5\u5c06\u8be5\u7c7b\u578b\u6570\u636e\u52a0\u8f7d\u5230python\u5bf9\u8c61": 751, "\u53ef\u4ee5\u5f97\u5230\u591a\u5f20\u7528\u4e8e\u5206\u7c7b\u7684\u56fe": 776, "\u53ef\u4ee5\u627e\u5230": 771, "\u53ef\u4ee5\u63a5\u53d7\u975e\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570": 753, "\u53ef\u4ee5\u63d0\u9ad8\u8282\u70b9": 743, "\u53ef\u4ee5\u662f\u5f02\u6784\u56fe\u6216\u6765\u81ea\u5f02\u6784\u56fe\u7684\u5b50\u56fe\u533a\u5757": 772, "\u53ef\u4ee5\u7528\u4e8e\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u6a21\u5757": 746, "\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u8282\u70b9\u6536\u5230\u7684\u6d88\u606f": 758, "\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f": 741, "\u53ef\u4ee5\u8ba9\u7528\u6237\u4e0d\u7528\u4e00\u6b21\u6027\u628a\u6240\u6709\u8282\u70b9\u7279\u5f81\u62f7\u8d1d\u5230gpu\u4e0a": 762, "\u53ef\u4ee5\u901a\u8fc7": 763, "\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u552f\u4e00\u6807\u8bc6": 746, "\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u56fe\u5377\u79ef\u6a21\u5757\u6765\u5b9e\u73b0\u8fd9\u79cd\u7f51\u7edc\u67b6\u6784": 778, "\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c": 774, "\u53ef\u4ee5\u9075\u5faa\u76f8\u540c\u7684\u539f\u7406\u6765\u6784\u5efa\u56fe": 751, "\u53ef\u4ee5\u91cd\u5199\u4e0a\u9762\u7684": 763, "\u53ef\u547d\u540d\u7684\u7279\u5f81": 752, "\u53ef\u5c06\u6570\u636e\u548c\u8ba1\u7b97\u540c\u65f6\u5206\u5e03\u5728\u4e00\u7ec4\u8ba1\u7b97\u8d44\u6e90\u4e2d": 745, "\u53ef\u5c06\u6570\u636e\u590d\u5236\u5230\u96c6\u7fa4\u7684\u8ba1\u7b97\u673a\u4e0a": 745, "\u53ef\u6309\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u5b83\u7684\u4e24\u7aef\u8282\u70b9\u9690\u85cf\u8868\u793a\u7684\u70b9\u79ef\u6765\u4f5c\u4e3a\u5206\u6570": 774, "\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u5de5\u4f5c\u7684\u60f3\u6cd5\u90fd\u5f88\u7c7b\u4f3c": 777, "\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7ef4\u5ea6\u7684\u8868\u793a\u6765\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u5efa\u6a21": 760, "\u53ef\u9009": [739, 747, 756], "\u53ef\u907f\u514d\u8be5\u884c\u4e3a": 751, "\u5404\u79cd\u6570\u636e\u683c\u5f0f": 751, "\u5408\u5e76\u6210\u4e00\u79cd\u8fb9\u7684\u56fe": 774, "\u540c\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u53ef\u4ee5\u6709\u591a\u6761": 750, "\u540c\u65f6": [754, 763], "\u540c\u65f6dgl\u4e5f\u5efa\u8bae\u5b9e\u73b0\u4fdd\u5b58\u548c\u5bfc\u5165\u51fd\u6570": 740, "\u540c\u65f6\u4e5f\u652f\u6301\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u91c7\u6837\u7b56\u7565": 762, "\u540c\u65f6\u5c06\u8fb9id\u6620\u5c04\u5230\u5176\u53cd\u5411\u8fb9id": 764, "\u540c\u65f6\u5efa\u7acb\u53cd\u5411\u8fb9": 774, "\u540c\u65f6\u7701\u7565\u4e86\u8be6\u7ec6\u7684\u6570\u636e\u5904\u7406\u4ee3\u7801\u4ee5\u7a81\u51fa\u5c55\u793a\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 743, "\u540c\u6784\u56fe": 771, "\u540c\u6784\u56fe\u548c\u4e8c\u5206\u56fe\u53ea\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f02\u6784\u56fe": 755, "\u540c\u6784\u56fe\u548c\u5757": 767, "\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e4b\u95f4\u552f\u4e00\u7684\u5b9e\u73b0\u5dee\u5f02\u662f\u540e\u8005\u9700\u8981\u7528": 766, "\u540c\u6784\u56fe\u7684\u60c5\u51b5": 771, "\u540c\u6784\u7684": 750, "\u540c\u6837": [746, 768], "\u540c\u6837\u5730": 774, "\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 774, "\u540d\u79f0\u5c31\u5f88\u6709\u7528": 746, "\u540e": 776, "\u540e\u4e00\u79cd\u65b9\u6cd5\u6548\u7387\u9ad8\u5f97\u591a": 759, "\u540e\u7eed\u7ae0\u8282\u7684\u5185\u5bb9\u5747\u5047\u8bbe\u7528\u6237\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u56fe\u548c\u8282\u70b9": 773, "\u540e\u8005\u53ef\u4ee5\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u8fdb\u884c\u8fed\u4ee3": 768, "\u540e\u8005\u652f\u6301\u89e3\u538b\u7f29zip\u6587\u4ef6": 741, "\u5411\u524d": 764, "\u5411\u540e": 764, "\u5411\u91cf\u6216\u591a\u7ef4\u5f20\u91cf": 752, "\u5426\u5219": 764, "\u5426\u5219\u7528\u6237\u9700\u8981\u81ea\u5df1\u5b9e\u73b0": 741, "\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u7a7a\u95f4": 748, "\u542f\u52a8\u811a\u672c\u4f1a\u5728\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u6307\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u4efb\u52a1": 748, "\u542f\u52a8\u811a\u672c\u5728\u540e\u53f0\u542f\u52a8\u670d\u52a1\u5668": 746, "\u5434\u7d2b\u8587": 756, "\u548c": [740, 743, 744, 745, 746, 747, 749, 750, 751, 752, 754, 755, 758, 759, 760, 763, 764, 765, 769, 770, 771, 772, 774, 776, 777, 778], "\u548c1\u4e2a\u8fb9\u7279\u5f81": 752, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 765, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 765, "\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9": 755, "\u548c\u4ece\u4e00\u4e2a\u4efb\u610f\u7684\u566a\u58f0\u5206\u5e03": 777, "\u548c\u5305\u542b\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u5757": 767, "\u548c\u5b50\u56fe\u5757": 771, "\u548c\u5b83\u4eec\u7684\u5173\u7cfb": 749, "\u548c\u5c0f\u6279\u91cf\u7684\u8fb9id\u6570\u7ec4": 766, "\u548c\u666e\u901a\u7684nn\u6a21\u5757\u4e00\u6837": 772, "\u548c\u7528\u4e8e\u5206\u5e03\u5f0f\u53ef\u5b66\u4e60\u5d4c\u5165\u7684": 746, "\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81": 771, "\u548c\u8282\u70b9\u5206\u7c7b\u4e00\u6837\u7684\u90bb\u5c45\u91c7\u6837\u5668": 764, "\u552f\u4e00\u7684\u533a\u522b\u662f\u5728\u8c03\u7528": 774, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4e3a\u8bad\u7ec3\u96c6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u7684\u5b57\u5178": 768, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528": [746, 764], "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u63d0\u4f9b\u8d1f\u91c7\u6837\u65b9\u6cd5": 766, "\u5546\u54c1": 750, "\u5546\u5bb6": 750, "\u56de\u5f52": [743, 756, 773, 777], "\u56de\u5f52\u4e2d\u7684\u8282\u70b9\u8868\u793a\u6a21\u578b": 766, "\u56de\u5f52\u4e2d\u7684\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 766, "\u56de\u5f52\u4efb\u52a1": 774, "\u56de\u5f52\u6240\u9700\u7684\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 764, "\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u8fb9\u5f97\u5206\u6a21\u578b\u76f8\u540c": 777, "\u56de\u5f52\u7684\u6a21\u578b": 774, "\u56de\u5f52\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b": 764, "\u56de\u5f52\u7684\u8bad\u7ec3\u7c7b\u4f3c": 764, "\u56de\u5f52\u91cc\u7684\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c": 766, "\u56de\u60f3\u4e00\u4e0b\u5728": 763, "\u56e0\u4e3a": 759, "\u56e0\u4e3a\u4e0a\u8ff0\u7684\u5f97\u5206\u9884\u6d4b\u6a21\u578b\u5728\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 777, "\u56e0\u4e3a\u4e0d\u9700\u8981\u5728\u8fb9\u4e0a\u4fdd\u5b58feat_src\u548cfeat_dst": 759, "\u56e0\u4e3a\u53cb\u8c0a\u662f\u76f8\u4e92\u7684": 750, "\u56e0\u4e3a\u540c\u6b65sgd\u4f1a\u5047\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c0f\u6279\u6b21": 746, "\u56e0\u4e3a\u5b83\u4eec\u7ecf\u8fc7\u4e86\u5927\u91cf\u4f18\u5316": 758, "\u56e0\u4e3a\u5bf9\u4e8e\u5904\u7406\u540e\u7684\u5927\u578b\u6570\u636e\u96c6": 740, "\u56e0\u4e3a\u5d4c\u5165\u662f\u6a21\u578b\u7684\u4e00\u90e8\u5206": 746, "\u56e0\u4e3a\u7528\u6237\u9700\u8981\u6307\u5b9a\u5728\u54ea\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b": 777, "\u56e0\u4e3a\u9700\u8981\u4ece\u7b2c\u4e00\u5c42\u5f00\u59cb\u5bf9\u8282\u70b9\u8868\u793a\u9010\u5c42\u8ba1\u7b97": 765, "\u56e0\u6b64": [743, 746, 748, 751, 753, 755, 763, 764, 766], "\u56e0\u6b64\u5982\u679c\u4e00\u5f20\u56fe\u5f88\u5927": 747, "\u56e0\u6b64\u6570\u636e\u96c6\u7684\u5212\u5206\u662f\u5728\u56fe\u7684\u8282\u70b9\u96c6\u4e0a\u8fdb\u884c": 743, "\u56e0\u6b64\u672c\u793a\u4f8b\u8bf4\u660e\u4e86\u5982\u4f55\u4f7f\u7528\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5411\u91cf\u7684\u70b9\u79ef\u6765\u8ba1\u7b97\u5206\u6570": 766, "\u56e0\u6b64\u7528\u6237\u65e0\u6cd5\u4ecenn\u6a21\u5757\u7684\u53c2\u6570\u8bbf\u95ee\u5b83": 746, "\u56e0\u6b64\u76f4\u63a5\u5728\u8fb9\u754c\u5b50\u56fe\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012\u6709\u5f88\u5927\u5f00\u9500": 763, "\u56e0\u6b64\u901a\u5e38\u53ef\u4ee5\u5728\u968f\u673a\u62bd\u53d6\u7684\u5c0f\u6279\u6b21\u56fe\u4e0a\u8fdb\u884c\u9ad8\u6548\u7684\u8bad\u7ec3": 776, "\u56e0\u6b64\u9700\u8981\u5c06\u6240\u8981\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b": 774, "\u56fe": [743, 756], "\u56fe\u4e0a\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38\u6709\u4e09\u79cd\u7c7b\u578b": 743, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5b50\u56fe\u5bf9\u5e94\u4e00\u5f20\u539f\u59cb\u5c0f\u56fe": 776, "\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u662fdgl\u901a\u8fc7\u7ed9\u5b9a\u7684\u56fe\u7684\u8fb9\u5217\u8868\u4e2d\u6700\u5927\u7684\u70b9id\u63a8\u65ad\u6240\u5f97\u51fa\u7684": 754, "\u56fe\u5212\u5206api\u5f53\u524d\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c": 747, "\u56fe\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u4e8c\u5206\u56fe": 771, "\u56fe\u53ef\u4ee5\u662f": 750, "\u56fe\u540d\u79f0\u6807\u8bc6\u4e86\u96c6\u7fa4\u4e2d\u6240\u9700\u52a0\u8f7d\u7684\u56fe": 746, "\u56fe\u5c06\u4f1a\u88ab\u89c6\u4e3a\u4e8c\u5206\u56fe": 771, "\u56fe\u6216\u5f20\u91cf": 753, "\u56fe\u6570\u636e\u4e2d\u7684\u8bad\u7ec3": 778, "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [756, 773, 776, 778], "\u56fe\u662f\u7528\u4ee5\u8868\u793a\u5b9e\u4f53\u53ca\u5176\u5173\u7cfb\u7684\u7ed3\u6784": 750, "\u56fe\u6ce8\u610f\u529b\u7f51\u7edc": 775, "\u56fe\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210": 750, "\u56fe\u7684": 743, "\u56fe\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4e86": 778, "\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e2a\u5178\u578b\u9009\u9879\u662f\u805a\u5408\u7c7b\u578b": 770, "\u56fe\u8868\u793a\u5b9e\u4f53": 749, "\u5728": [743, 744, 746, 768, 771], "\u5728dgl": 769, "\u5728dgl\u4e2d": [755, 758, 760, 763], "\u5728dgl\u4e2d\u79f0\u4e4b\u4e3a": 768, "\u5728dgl\u7684\u56fe\u91cc": 754, "\u5728dgl\u91cc\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5b9e\u73b0\u8fd9\u4e00\u9700\u6c42": 775, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 749, "\u5728gpu\u4e0a\u8fdb\u884c\u5168\u56fe\u524d\u5411\u4f20\u64ad\u901a\u5e38\u7531\u4e8e\u663e\u5b58\u5927\u5c0f\u7684\u9650\u5236\u800c\u4e0d\u53ef\u884c": 765, "\u5728graph": 758, "\u5728jupyt": 746, "\u5728mxnet\u4e2d\u662ffloat\u5f20\u91cf": 743, "\u5728nn\u6a21\u5757\u4e2d": 771, "\u5728node": 742, "\u5728python\u5b57\u5178\u91cc\u4fdd\u5b58\u5176\u4ed6\u4fe1\u606f": 744, "\u5728sageconv\u4e2d": 770, "\u5728sageconv\u8bba\u6587\u91cc": 770, "\u5728update_all\u5916\u8c03\u7528\u66f4\u65b0\u51fd\u6570": 758, "\u5728user\u7c7b\u578b\u7684\u8282\u70b9\u548cclick\u7c7b\u578b\u7684\u8fb9\u4e0a\u968f\u673a\u751f\u6210\u8bad\u7ec3\u96c6\u7684\u63a9\u7801": 773, "\u5728\u4e00\u4e2a\u52a0\u6743\u56fe\u91cc": 775, "\u5728\u4e00\u4e2a\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 745, "\u5728\u4e00\u5c42\u4e2d": 765, "\u5728\u4e0a\u9762\u7684\u7b49\u5f0f\u4e2d": 757, "\u5728\u4ecb\u7ecddgl\u4e2d\u90bb\u5c45\u91c7\u6837\u7684\u7528\u6cd5\u4e4b\u524d": 763, "\u5728\u4f7f\u7528pytorch\u65f6": 746, "\u5728\u4f7f\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 760, "\u5728\u5185\u7f6e\u6570\u636e\u96c6": 744, "\u5728\u5185\u90e8": 746, "\u5728\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0b": 746, "\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e2d": 746, "\u5728\u521b\u5efa\u56fe\u7684\u65f6\u5019": 754, "\u5728\u521d\u6b65\u4e86\u89e3\u4e86\u5206\u5e03\u5f0f\u7ec4\u4ef6\u540e": 745, "\u5728\u52a0\u6743\u56fe\u4e2d": 750, "\u5728\u533a\u5757\u521b\u5efa\u7684\u9636\u6bb5": 771, "\u5728\u534a\u76d1\u7763\u8282\u70b9\u5206\u7c7b\u7684\u573a\u666f\u91cc": 747, "\u5728\u540c\u6784\u56fe\u4e2d": 750, "\u5728\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e0a\u505a\u8bc4\u5206\u9884\u6d4b\u65f6": 764, "\u5728\u56fe\u5212\u5206\u540e": 747, "\u5728\u56fe\u5212\u5206\u671f\u95f4\u7684\u56fe\u540d\u79f0": 746, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [756, 757], "\u5728\u57fa\u4e8e\u90bb\u5c45\u91c7\u6837\u7684\u8fb9\u5206\u7c7b\u4e2d": 764, "\u5728\u591a\u91cd\u56fe\u4e2d": 750, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": [756, 761, 771, 773], "\u5728\u5b58\u50a8\u56fe\u5206\u533a\u6570\u636e": 745, "\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u91c7\u6837\u5668\u540e": 763, "\u5728\u5bf9\u56fe\u8fdb\u884c\u5212\u5206\u65f6": 747, "\u5728\u5c0f\u6279\u6b21\u8bad\u7ec3\u4e2d": 771, "\u5728\u5f02\u6784\u56fe\u4e0a": 764, "\u5728\u5f02\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u548c\u5728\u540c\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u7565\u6709\u4e0d\u540c": 776, "\u5728\u5f02\u6784\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8282\u70b9\u5206\u7c7b\u7684\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684": 768, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [756, 757], "\u5728\u5f02\u6784\u56fe\u4e2d": 750, "\u5728\u5f02\u6784\u56fe\u7684\u60c5\u51b5\u4e0b": 771, "\u5728\u5f53\u524d\u5b9e\u73b0\u4e2d": 746, "\u5728\u5f97\u5230": 776, "\u5728\u6240\u6709\u8fb9\u7c7b\u578b\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012": 778, "\u5728\u63a8\u8350\u573a\u666f\u4e2d\u5f88\u5e38\u89c1": 774, "\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d": 750, "\u5728\u6574\u4e2a\u56fe\u6279\u6b21\u4e0a\u8fdb\u884c\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3": 776, "\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5": 759, "\u5728\u672c\u4f8b\u4e2d\u7701\u7565": 778, "\u5728\u672c\u8282\u4e2d": 745, "\u5728\u6784\u9020\u51fd\u6570\u4e2d": 770, "\u5728\u67d0\u4e9b\u573a\u666f\u4e2d": 777, "\u5728\u67d0\u79cd\u7c7b\u578b\u7684\u8fb9\u4e0a\u4e3a\u6bcf\u4e00\u6761\u8fb9\u9884\u6d4b\u7684\u7aef\u5230\u7aef\u6a21\u578b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a": 774, "\u5728\u6bcf\u4e2a\u5206\u533a\u7684\u6587\u4ef6\u5939\u5185": 747, "\u5728\u6bcf\u4e2a\u751f\u6210\u5757\u5217\u8868\u7684\u8fed\u4ee3\u4e2d": 768, "\u5728\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u4e2d\u7684\u8282\u70b9\u6570\u4e0a\u5b9e\u73b0\u5206\u533a\u95f4\u7684\u5e73\u8861": 747, "\u5728\u6d88\u606f\u4f20\u9012\u65f6": 758, "\u5728\u6d88\u606f\u51fd\u6570\u91cc": 775, "\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 746, "\u5728\u7528\u591a\u5c42\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 763, "\u5728\u7b2c9\u884c\u547d\u540d\u4e3a": 752, "\u5728\u7c7bdgldataset\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u5904\u7406\u6a21\u7248\u7684\u6d41\u7a0b\u56fe": 740, "\u5728\u7f16\u5199\u5b8c\u8fd9\u4e9b\u4ee3\u7801\u4e4b\u540e": 743, "\u5728\u8bad\u7ec3\u5668\u8fdb\u7a0b\u4e2d": 746, "\u5728\u8bad\u7ec3\u671f\u95f4": 747, "\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u63a9\u7801\u533a\u5206\u8bad\u7ec3": 774, "\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 763, "\u5728\u8fb9\u4e0a\u5c06\u4ee5\u4e0a\u4e24\u90e8\u5206\u7ebf\u6027\u64cd\u4f5c\u7684\u7ed3\u679c\u76f8\u52a0": 759, "\u5728\u8fb9\u96c6": 750, "\u5728\u8fd9\u4e2a\u573a\u666f\u91cc": 776, "\u5728\u8fd9\u4e2a\u6279\u6b21\u7684\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u4ee5\u66f4\u65b0\u8282\u70b9\u6216\u8fb9\u7684\u7279\u5f81": 776, "\u5728\u8fd9\u4e9b\u673a\u5668\u4e0a": 748, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": 771, "\u5728\u8fd9\u91cc\u53ef\u4ee5\u590d\u7528\u4e0a\u8ff0\u63d0\u5230\u7684": 774, "\u5728\u8fdb\u884c\u63a8\u65ad\u65f6": 765, "\u5757": [763, 764, 768], "\u5757\u4e5f\u53ef\u7528\u4e8e\u5f02\u6784\u56fe": 763, "\u5757\u7684\u8f93\u51fa\u8282\u70b9\u4e3a": 763, "\u578b\u8282\u70b9\u5230": 755, "\u578b\u8282\u70b9\u7684\u8fb9": 755, "\u57fa\u4e8egnn\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u9700\u9884\u6d4b\u7684\u8282\u70b9\u5bf9": 777, "\u5904\u7406\u548c\u4fdd\u5b58\u56fe\u6570\u636e\u63d0\u4f9b\u4e86\u7b80\u5355\u800c\u5e72\u51c0\u7684\u89e3\u51b3\u65b9\u6848": 739, "\u5904\u7406\u5b8c\u6210\u7684\u6570\u636e\u96c6\u7684\u4fdd\u5b58\u76ee\u5f55": 740, "\u5904\u7406\u6570\u636e": [739, 756], "\u5904\u7406\u8fc7\u7684\u6570\u636e\u6bd4\u8f83\u5927": 744, "\u590d\u5236\u5230": 748, "\u590d\u5236\u5230gpu": 753, "\u591a\u5c42\u611f\u77e5\u673a": 774, "\u5927\u90e8\u5206\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u9988\u8ba1\u7b97\u4e2d\u4ec5\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5f15\u5165\u56fe\u7ed3\u6784\u4fe1\u606f": 775, "\u5982": [751, 754, 766, 773, 774, 778], "\u5982panda": 751, "\u5982\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684": 752, "\u5982\u4e0b": 752, "\u5982\u4e0b\u4ee3\u7801\u6240\u6f14\u793a\u7684": 763, "\u5982\u4e0b\u4f8b\u6240\u793a": 754, "\u5982\u4e0b\u56fe\u6240\u793a": [762, 763], "\u5982\u4e0b\u6240\u793a": [763, 764], "\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u6240\u793a": 754, "\u5982\u4ee3\u7801\u6240\u793a": 743, "\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a": 746, "\u5982\u524d\u6240\u8ff0": 746, "\u5982\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b": 752, "\u5982\u63cf\u8ff0\u8282\u70b9\u4e4b\u95f4\u7684\u5bf9\u79f0\u5173\u7cfb": 750, "\u5982\u63cf\u8ff0\u975e\u5bf9\u79f0\u5173\u7cfb": 750, "\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684id\u76f8\u540c": 764, "\u5982\u679c\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u9002\u7528": 755, "\u5982\u679c\u4ee5\u6a21\u578b\u9009\u62e9\u4e3a\u76ee\u7684\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u8bc4\u4ef7\u6307\u6807": 765, "\u5982\u679c\u4f7f\u7528": 754, "\u5982\u679c\u5177\u6709\u6700\u5927id\u7684\u8282\u70b9\u6ca1\u6709\u8fb9": 754, "\u5982\u679c\u539f\u56fe\u5305\u542b\u591a\u79cd\u8282\u70b9\u7c7b\u578b": 767, "\u5982\u679c\u539f\u56fe\u53ea\u5305\u542b\u4e00\u79cd\u8282\u70b9\u7c7b\u578b": 767, "\u5982\u679c\u539f\u59cb\u6570\u636e\u5df2\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6": 743, "\u5982\u679c\u53ea\u9884\u6d4b": 778, "\u5982\u679c\u540e\u7aef\u6846\u67b6\u4e5f\u63d0\u4f9b\u4e86\u4ece\u78c1\u76d8\u4e2d\u4fdd\u5b58\u6216\u52a0\u8f7d\u5f20\u91cf\u7684\u5de5\u5177": 751, "\u5982\u679c\u56fe\u662f\u5f02\u6784\u7684": 778, "\u5982\u679c\u56fe\u91cc\u53ea\u6709\u4e00\u79cd\u8282\u70b9\u6216\u8fb9\u7c7b\u578b": 755, "\u5982\u679c\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8005\u8fb9\u7684\u6570\u91cf\u5c0f\u4e8e": 754, "\u5982\u679c\u5bf9\u901f\u5ea6\u4e0d\u592a\u5173\u6ce8\u7684\u8bdd": 751, "\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 768, "\u5982\u679c\u6570\u636e\u96c6\u662f\u4e00\u4e2azip\u6587\u4ef6": 741, "\u5982\u679c\u6587\u4ef6\u662f": 741, "\u5982\u679c\u662f\u4ece\u56fe\u4e2d\u5f97\u5230\u7684\u8fb9\u754c": 763, "\u5982\u679c\u672a\u63d0\u4f9b\u5177\u4f53\u7aef\u53e3": 748, "\u5982\u679c\u6a21\u578b\u540c\u65f6\u5177\u6709\u8282\u70b9\u5d4c\u5165\u548c\u89c4\u5219\u7684\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 746, "\u5982\u679c\u7279\u5f81\u5b58\u50a8\u5728": 768, "\u5982\u679c\u7528\u6237\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u7684\u6a21\u578b\u8ba1\u7b97\u4e86\u8282\u70b9\u7684\u8868\u793a": 774, "\u5982\u679c\u7528\u6237\u53ea\u60f3\u66f4\u65b0\u56fe\u4e2d\u7684\u90e8\u5206\u8282\u70b9": 761, "\u5982\u679c\u7528\u6237\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u4e00\u6b21\u4ec5\u4f7f\u7528\u4e00\u5f20\u56fe": 776, "\u5982\u679c\u7528\u6237\u5df2\u6709\u4e00\u4e2a\u7528\u4e8e\u6574\u4e2a\u56fe\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u4f20\u9012\u6a21\u5757": 767, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u6570\u636e\u96c6\u6216\u5176\u4ed6\u517c\u5bb9": 773, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5220\u9664\u5f02\u6784\u56fe\u4e2d\u7684\u53cd\u5411\u8fb9": 764, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5f00\u53d1\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 764, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 768, "\u5982\u679c\u7528\u6237\u60f3\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u4e00\u4e2a\u5206\u6570": 774, "\u5982\u679c\u7528\u6237\u60f3\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u4ee3\u7801\u800c\u53c8\u4e0d\u60f3\u81ea\u5df1\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u6b63\u786e\u7684\u76ee\u5f55\u4e2d": 741, "\u5982\u679c\u7528\u6237\u60f3\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 766, "\u5982\u679c\u7528\u6237\u60f3\u9884\u6d4b\u8fb9\u7c7b\u578b\u4e3a": 774, "\u5982\u679c\u7528\u6237\u6709\u5305\u542b\u6570\u767e\u4e07\u751a\u81f3\u6570\u5341\u4ebf\u4e2a\u8282\u70b9\u6216\u8fb9\u7684\u5927\u56fe": 762, "\u5982\u679c\u7528\u6237\u6a21\u578b\u5728\u5168\u56fe\u4e0a\u662f\u6309\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u7684": 768, "\u5982\u679c\u7528\u6237\u719f\u6089": 777, "\u5982\u679c\u7528\u6237\u719f\u6089\u5982\u4f55\u5b9a\u5236\u7528\u4e8e\u66f4\u65b0\u6574\u4e2a\u540c\u6784\u56fe\u6216\u5f02\u6784\u56fe\u7684gnn\u6a21\u5757": 767, "\u5982\u679c\u7528\u6237\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 741, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570\u65e0\u6cd5\u7528\u5185\u7f6e\u51fd\u6570\u5b9e\u73b0": 758, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757\u5168\u4f7f\u7528\u7684\u662fdgl\u5185\u7f6e\u6a21\u5757": 768, "\u5982\u679c\u7528\u6237\u8981\u5f15\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 746, "\u5982\u679c\u8981\u4ee5\u67d0\u79cd\u6982\u7387\u5c06\u79cd\u5b50\u8282\u70b9\u7684\u5165\u8fb9\u968f\u673a\u5254\u9664": 763, "\u5982\u679c\u8bad\u7ec3\u811a\u672c\u91cc\u5305\u542b\u9700\u8981\u5728\u670d\u52a1\u5668": 746, "\u5982\u679c\u8be5api\u6ca1\u6709\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0id": 747, "\u5982\u679c\u8be5\u7c7b\u7ee7\u627f\u81ea": 741, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u4e0d\u662f\u5757": 767, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u662f\u4e00\u4e2a\u5757": 767, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5f20\u91cf\u5bf9": 767, "\u5982\u679c\u9700\u8981\u7684\u8bdd": 778, "\u5b50\u56fe\u5728dgl\u4e2d\u79f0\u4e3a\u533a\u5757": 771, "\u5b50\u56fe\u5757\u7684\u60c5\u51b5": 771, "\u5b50\u56fe\u662f\u4ece\u76f8\u540c\u7684\u6570\u636e\u52a0\u8f7d\u5668\u4ea7\u751f\u7684": 764, "\u5b50\u56fe\u91c7\u6837\u548c\u90bb\u5c45\u91c7\u6837\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11\u7528gpu\u8bad\u7ec3gnn\u6a21\u578b\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6d88\u8017": 765, "\u5b50\u6a21\u5757\u6839\u636e\u805a\u5408\u7c7b\u578b\u800c\u6709\u6240\u4e0d\u540c": 770, "\u5b50\u7c7b\u4e4b\u5916\u5b8c\u6210": 740, "\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570": 740, "\u5b58\u50a8\u4e86\u5212\u5206\u63a9\u7801": 743, "\u5b58\u50a8\u4e86\u8f93\u5165\u8282\u70b9\u7279\u5f81": 775, "\u5b58\u50a8\u5206\u533a\u7684\u56fe\u7ed3\u6784\u4ee5\u53ca\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u4e00\u4e9b\u5143\u6570\u636e": 747, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u533aid": 747, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u7684\u5206\u533aid": 747, "\u5b58\u50a8\u5c5e\u4e8e\u8be5\u5206\u533a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u7279\u5f81": 747, "\u5b58\u50a8\u6587\u4ef6\u7684\u8def\u5f84": 741, "\u5b58\u50a8\u9690\u5c42\u8868\u793a\u9700\u8981": 762, "\u5b5f\u51e1\u8363": 756, "\u5b83\u4e3a": 746, "\u5b83\u4ece\u805a\u5408\u4e0e\u66f4\u65b0\u7684\u89d2\u5ea6\u5f52\u7eb3\u603b\u7ed3\u4e86\u591a\u79cdgnn\u6a21\u578b\u7684\u5b9e\u73b0": 757, "\u5b83\u4eec\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684api\u76f8\u4f3c": 745, "\u5b83\u4eec\u4e3b\u8981\u88ab\u7528\u6765\u63d0\u4f9b\u56fe\u4fe1\u606f": 746, "\u5b83\u4eec\u53ea\u5305\u62ec\u4e00\u79cd\u5173\u7cfb": 755, "\u5b83\u4eec\u5b58\u50a8\u8282\u70b9\u548c\u8fb9id\u4e0e\u5206\u533aid\u4e4b\u95f4\u7684\u6620\u5c04": 747, "\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e": 746, "\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f\u5b57\u7b26\u4e32": 758, "\u5b83\u4eec\u786e\u4fdd\u6240\u6709\u90e8\u5206\u90fd\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u548c\u8fb9": 746, "\u5b83\u4eec\u901a\u8fc7": 750, "\u5b83\u4eec\u9075\u5faa\u4e86\u7531": 739, "\u5b83\u4eec\u90fd\u662f\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9": 771, "\u5b83\u5141\u8bb8\u7528\u6237\u4e3a\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u90e8\u5206\u90bb\u5c45\u8282\u70b9\u4ee5\u6c47\u805a\u4fe1\u606f": 763, "\u5b83\u5177\u6709": 774, "\u5b83\u5177\u6709\u4e0e\u5e38\u89c4\u5f20\u91cf\u76f8\u540c\u7684api": 746, "\u5b83\u5206\u6279\u8fed\u4ee3\u8bad\u7ec3\u8282\u70b9id\u6570\u7ec4": 768, "\u5b83\u52a0\u8f7d\u5206\u533a\u6570\u636e": 746, "\u5b83\u5305\u62ec": 772, "\u5b83\u53ef\u4ee5\u7528\u6700\u5c11\u7684\u8fb9\u5206\u5272\u4ee5\u751f\u6210\u5206\u533a": 747, "\u5b83\u53ef\u83b7\u53d6\u8282\u70b9\u7684\u6240\u6709\u90bb\u5c45": 768, "\u5b83\u5728\u5355\u4e2aapi\u8c03\u7528\u91cc\u5408\u5e76\u4e86\u6d88\u606f\u751f\u6210": 758, "\u5b83\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6240\u6709\u8ba1\u7b97": 746, "\u5b83\u5b9e\u73b0\u4e86\u7528\u4e8e\u5904\u7406\u56fe\u6570\u636e\u7684\u57fa\u672c\u6a21\u7248": 740, "\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9": 766, "\u5b83\u5c06\u4ee5\u72ec\u7acb\u6a21\u5f0f\u8fd0\u884c": 746, "\u5b83\u5c06\u751f\u6210\u4e24\u4e2a\u989d\u5916\u7684numpy\u6587\u4ef6": 747, "\u5b83\u5e94\u5f53\u4ee5\u539f\u56fe": 766, "\u5b83\u5e94\u8be5\u7ee7\u627f": 769, "\u5b83\u6307\u5b9a\u8282\u70b9\u96c6\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u7c7b\u578b\u7ea6\u675f": 755, "\u5b83\u63a5\u53d7\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408\u4f5c\u4e3a\u8f93\u5165": 754, "\u5b83\u662fgraphsage\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u56fe\u5377\u79ef\u6a21\u5757": 778, "\u5b83\u662f\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 768, "\u5b83\u7528": 745, "\u5b83\u7ee7\u627f\u81ea": 740, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8282\u70b9": 758, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8fb9": 758, "\u5b83\u8fd4\u56de\u4ee5\u8fb9\u7c7b\u578b\u4e3a\u952e": 766, "\u5b83\u901a\u8fc7\u5c06\u8fb9\u4e0a\u7279\u5f81\u4e0e\u5176\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408\u6765\u751f\u6210\u6d88\u606f": 757, "\u5b8b\u6021\u7136": 756, "\u5b8c\u5168\u76f8\u540c": 764, "\u5b8c\u6574\u7684\u5185\u7f6e\u91c7\u6837\u65b9\u6cd5\u6e05\u5355": 768, "\u5b98\u65b9\u7684": 742, "\u5b9a\u4e49": [746, 755], "\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u9010\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u8ba1\u7b97": 757, "\u5b9a\u4e49\u6a21\u578b\u548c\u4f18\u5316\u5668": 745, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 768, "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [756, 762, 764, 768], "\u5b9e\u4f8b\u5316heterographconv": 778, "\u5b9e\u4f8b\u5316sageconv": 778, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad\u7684\u65b9\u6cd5\u4f9d\u7136\u9700\u8981\u4f7f\u7528": 765, "\u5b9e\u73b0\u903b\u8f91\u4e0e\u6d88\u606f\u4f20\u9012\u7ea7\u522b\u7684api": 772, "\u5b9e\u9645\u5e94\u7528\u4e2d": 777, "\u5bf9dataloader\u8fdb\u884c\u8fed\u4ee3": 768, "\u5bf9\u4e00\u6761\u8fb9\u8ba1\u7b97\u9884\u6d4b\u503c\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5c06\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u51fd\u6570": 774, "\u5bf9\u4e8e": 767, "\u5bf9\u4e8emxnet\u540e\u7aef": 769, "\u5bf9\u4e8epytorch\u540e\u7aef": 769, "\u5bf9\u4e8etensorflow\u540e\u7aef": 769, "\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26\u6743\u91cd\u7684\u56fe": 775, "\u5bf9\u4e8e\u4e00\u4e2a\u52a0\u6743\u56fe": 775, "\u5bf9\u4e8e\u4e00\u4e2a\u6307\u5b9a\u7684\u5c42": 765, "\u5bf9\u4e8e\u4e00\u5143\u51fd\u6570": 758, "\u5bf9\u4e8e\u4e00\u822c\u7684pytorch\u6a21\u5757": 770, "\u5bf9\u4e8e\u4e8c\u5143\u51fd\u6570": 758, "\u5bf9\u4e8e\u4e8c\u5206\u56fe": 772, "\u5bf9\u4e8e\u5168\u90bb\u5c45\u91c7\u6837": 768, "\u5bf9\u4e8e\u5177\u6709\u4e24\u4e2a\u5173\u7cfb": 755, "\u5bf9\u4e8e\u5177\u6709\u5341\u4ebf\u7ea7\u6570\u91cf\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 747, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3": 746, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u8bc4\u4f30": 746, "\u5bf9\u4e8e\u52a0\u6743\u56fe": 752, "\u5bf9\u4e8e\u540c\u6784\u56fe\u4e0a\u7684\u5168\u56fe\u8bad\u7ec3": 771, "\u5bf9\u4e8e\u56fe\u4e0a\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b": 778, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc": 770, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4": 778, "\u5bf9\u4e8e\u591a\u4e2a\u8282\u70b9": 754, "\u5bf9\u4e8e\u5e95\u5c42\u7684\u91c7\u6837api": 746, "\u5bf9\u4e8e\u5f97\u5206\u7684\u9884\u6d4b": 766, "\u5bf9\u4e8e\u65e0\u5411\u7684\u56fe": 754, "\u5bf9\u4e8e\u65e0\u6cd5\u5168\u90e8\u8f7d\u5165\u7684\u60c5\u51b5": 773, "\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5": 759, "\u5bf9\u4e8e\u6d88\u606f\u4f20\u9012": 758, "\u5bf9\u4e8e\u7279\u5b9a\u76ee\u6807\u8282\u70b9": 770, "\u5bf9\u4e8e\u79bb\u7ebf\u63a8\u65ad\u7684\u793a\u4f8b": 765, "\u5bf9\u4e8e\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 746, "\u5bf9\u4e8e\u8981\u62f7\u8d1d\u7684\u7279\u5f81": 755, "\u5bf9\u4e8e\u8bad\u7ec3\u811a\u672c": 745, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u6570\u91cf": 767, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u7279\u5f81": 767, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u6570\u91cf": 767, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 767, "\u5bf9\u4e8e\u8fb9\u56de\u5f52\u4efb\u52a1": 774, "\u5bf9\u4e8e\u8fd9\u4e2a\u5757": 763, "\u5bf9\u4e8e\u90bb\u5c45\u91c7\u6837": 763, "\u5bf9\u5176\u8fdb\u884c\u62c6\u5206": 746, "\u5bf9\u56fe\u8fdb\u884c\u5206\u533a\u7684\u8ba1\u7b97\u673a": 748, "\u5bf9\u5b83\u6240\u6709\u8282\u70b9\u7279\u5f81\u53d6\u5e73\u5747\u503c\u7684\u805a\u5408\u8bfb\u51fa\u516c\u5f0f\u5982\u4e0b": 776, "\u5bf9\u5e94\u4e8e\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b": 755, "\u5bf9\u5e94\u7740\u4e0b\u56fe\u6240\u793a\u7684\u5305\u542b4\u4e2a\u8282\u70b9\u7684\u56fe": 754, "\u5bf9\u5f02\u6784\u56fe\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u7684\u63a5\u53e3\u662f": 760, "\u5bf9\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u5408\u5e76\u7528\u6237\u6307\u5b9a\u7684\u7279\u5f81": 755, "\u5bf9\u6240\u6709\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u6c42\u548c": 776, "\u5bf9\u6bcf\u4e2a\u5173\u7cfb\u8ba1\u7b97\u548c\u805a\u5408\u6d88\u606f": 760, "\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u6d88\u606f": 760, "\u5bf9\u6bcf\u6761\u8fb9\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u8868\u793a": 774, "\u5bf9\u8c61": [746, 747, 751, 754], "\u5bf9\u8c61\u65f6": 751, "\u5bf9\u8c61\u67098\u6761\u8fb9": 751, "\u5bf9\u8c61\u6d88\u5931": 746, "\u5bf9\u8c61\u7684api": 742, "\u5bf9\u8c61\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 754, "\u5bf9\u8c61\u7684\u5217\u8868\u548c\u6807\u7b7e\u5f20\u91cf\u7684\u5217\u8868": 743, "\u5bf9\u8c61\u7684\u8282\u70b9\u548c\u8fb9\u53ef\u5177\u6709\u591a\u4e2a\u7528\u6237\u5b9a\u4e49\u7684": 752, "\u5bf9\u8f93\u5165\u8282\u70b9\u7279\u5f81": 767, "\u5bfc\u5165\u548c\u4fdd\u5b58": 740, "\u5bfc\u5165\u5904\u7406\u540e\u7684\u6570\u636e": 740, "\u5bfc\u5165\u6570\u636e": 743, "\u5c06": 767, "\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 747, "\u5c06\u4e00\u5f20\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u805a\u5408\u6210\u6574\u5f20\u56fe\u7684\u56fe\u8868\u793a": 776, "\u5c06\u4e0a\u8ff0\u56fe\u4f5c\u4e3a\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u8f93\u5165": 774, "\u5c06\u4e0e\u8f93\u5165\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u7279\u5f81\u52a0\u8f7d\u5230gpu\u4e0a": 768, "\u5c06\u4e0e\u8f93\u51fa\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u6807\u7b7e\u52a0\u8f7d\u5230gpu\u4e0a": 768, "\u5c06\u4e3a\u7a7a": 771, "\u5c06\u4ee5\u5206\u5e03\u5f0f\u6a21\u5f0f\u8fd0\u884c": 746, "\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u56fe\u7684\u5217\u8868": 768, "\u5c06\u4f1a\u62a5\u9519": 763, "\u5c06\u5176\u547d\u540d\u4e3a": 752, "\u5c06\u539f\u59cb\u6570\u636e\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8": 740, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe": 740, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 743, "\u5c06\u5757\u5217\u8868\u548c\u8f93\u5165\u8282\u70b9\u7279\u5f81\u4f20\u5165\u591a\u5c42gnn\u5e76\u83b7\u53d6\u8f93\u51fa": 768, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u4fdd\u5b58\u81f3": 740, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u7f13\u5b58\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 744, "\u5c06\u5f97\u5230\u7684\u56fe\u548c\u8f93\u5165\u7279\u5f81\u4f20\u5165\u4e0a\u8ff0\u6a21\u578b": 766, "\u5c06\u5fc5\u8981\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81\u590d\u5236\u5230gpu\u4e0a": 765, "\u5c06\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 743, "\u5c06\u6570\u636e\u96c6\u7684\u6709\u7528\u4fe1\u606f": 744, "\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55self": 741, "\u5c06\u6bcf\u4e2a\u7c7b\u578b\u6d88\u606f\u805a\u5408\u7684\u7ed3\u679c\u76f8\u52a0": 760, "\u5c06\u88ab\u6e05\u9664": 758, "\u5c06\u8ba1\u7b97\u673a": 748, "\u5c06\u8f93\u51fa\u590d\u5236\u56decpu": 765, "\u5c06\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 775, "\u5c0f\u6279\u6b21\u662f\u4e00\u4e2a\u5143\u7ec4": 742, "\u5c24\u5176\u662f\u5728\u5305\u542b\u5927\u91cf\u672a\u6807\u8bb0\u6570\u636e\u7684\u534a\u76d1\u7763\u7cfb\u7edf\u4e2d": 765, "\u5c31\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 763, "\u5c31\u597d\u50cf\u8fd9\u4e9b\u8fb9\u6839\u672c\u4e0d\u5b58\u5728\u4e00\u6837": 764, "\u5c31\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u7684\u5e73\u5747\u503c\u8bfb\u51fa\u8ba1\u7b97": 776, "\u5c31\u662f\u56fe\u7684\u6a21\u5f0f": 755, "\u5c3d\u53ef\u80fd": 758, "\u5c42\u56fe\u5377\u79ef\u7f51\u7edc": 762, "\u5c42\u8fdb\u884c\u8ba1\u7b97": 762, "\u5c42\u9009\u62e9\u8be5\u6279\u6b21\u8282\u70b9\u7684\u5168\u90e8\u6216\u90e8\u5206\u90bb\u5c45\u8282\u70b9": 762, "\u5c5e\u4e8e\u53e6\u4e00\u7c7b\u578b\u7684\u53cd\u5411\u8fb9": 764, "\u5d4c\u5165": 745, "\u5df2\u7ecf\u8d2d\u4e70": 750, "\u5e26\u6807\u7b7e\u548c\u672a\u5e26\u6807\u7b7e": 747, "\u5e38\u7528\u7684\u5f02\u6784\u56fe": 750, "\u5e38\u7528\u7684\u805a\u5408\u7c7b\u578b\u5305\u62ec": 770, "\u5e38\u89c1\u7684\u66f4\u65b0\u64cd\u4f5c\u662f\u6839\u636e\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u6765\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u548c\u8fdb\u884c\u5f52\u4e00\u5316": 771, "\u5e38\u89c1\u7684\u805a\u5408\u65b9\u6cd5\u5305\u62ec": 776, "\u5e76\u4e14\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u901a\u4fe1": 746, "\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u8c03\u7528\u5b83\u65f6": 746, "\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u7ef4\u5ea6\u5e7f\u64ad": 758, "\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7": 763, "\u5e76\u4e14\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 758, "\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8868\u793a\u8bad\u7ec3": 746, "\u5e76\u4e14\u60f3\u5c06\u5176\u7528\u4e8e\u5757": 767, "\u5e76\u4e14\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u7684\u5b57\u5178": [764, 766], "\u5e76\u4e14\u6709\u591a\u4e2a\u5df2\u6709\u7684api\u53ef\u4ee5\u7b80\u5316\u6b64\u64cd\u4f5c": 740, "\u5e76\u4e14\u7528\u6237\u4e0d\u5e0c\u671b\u5728\u5efa\u6a21\u4e2d\u533a\u5206\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b": 755, "\u5e76\u4e14\u7528\u6237\u5e0c\u671b\u5bf9\u5d4c\u5165\u6267\u884c\u7a00\u758f\u66f4\u65b0": 746, "\u5e76\u4e14\u805a\u5408\u51fd\u6570\u7684\u8f93\u51fa\u503c\u5168\u4e3a0": 771, "\u5e76\u4e14\u904d\u5386\u79cd\u5b50\u8282\u70b9\u751f\u6210\u4e00\u7cfb\u5217\u7684\u5757": 763, "\u5e76\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u51fa\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u53ef\u80fd\u5f97\u5206": 774, "\u5e76\u4e3a\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4f7f\u7528\u4e00\u79cd\u56fe\u5377\u79ef\u6a21\u5757": 778, "\u5e76\u4ece\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 774, "\u5e76\u4f5c\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u6700\u7ec8\u7ed3\u679c": 778, "\u5e76\u4f7f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8bad\u7ec3\u5668\u5747\u53ef\u8bbf\u95ee\u5b83\u4eec": 746, "\u5e76\u5411\u672c\u5730\u8bad\u7ec3\u5668\u8fd4\u56de\u4e00\u90e8\u5206": 746, "\u5e76\u5411\u672c\u5730\u8fdb\u7a0b\u8fd4\u56de\u8282\u70b9\u7684\u5b50\u96c6": 746, "\u5e76\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\u4f7f\u7528": 774, "\u5e76\u5728\u540c\u6837\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u5c06\u5206\u533a\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 745, "\u5e76\u5728\u6240\u6709\u673a\u5668\u4e0a\u542f\u52a8\u8bad\u7ec3\u4efb\u52a1": 745, "\u5e76\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u8981\u8fdb\u884c\u591a\u8f6e\u7684\u4fe1\u606f\u4f20\u9012": 778, "\u5e76\u5bf9\u5b83\u4eec\u5e94\u7528\u76f8\u540c\u7684\u64cd\u4f5c": 755, "\u5e76\u5bf9\u8282\u70b9\u548c\u8fb9\u91c7\u6837\u4ee5\u751f\u6210\u7528\u4e8e\u8bad\u7ec3\u7684\u5c0f\u6279\u6b21\u6570\u636e": 745, "\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5757": 763, "\u5e76\u5c06\u5206\u533a\u6570\u636e\u81ea\u52a8\u52a0\u8f7d\u5230\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e2d": 746, "\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u7a00\u758f\u4f18\u5316\u5668": 746, "\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d": 746, "\u5e76\u5c06\u751f\u6210\u7684\u5757\u5217\u8868\u653e\u5230gpu\u4e0a": 764, "\u5e76\u5c06\u751f\u6210\u7684\u5b50\u56fe\u5217\u8868\u653e\u5230gpu\u4e0a": 768, "\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728outputs\u5b57\u5178\u4e2d": 772, "\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237": 772, "\u5e76\u5c06\u8f93\u51fa\u4f5c\u4e3a\u8282\u70b9\u7684\u65b0\u7279\u5f81": 758, "\u5e76\u5c55\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u7ba1\u9053\u7684\u6bcf\u4e2a\u7ec4\u4ef6": 739, "\u5e76\u63d0\u53d6\u8f93\u51fa\u7684user\u8282\u70b9\u5d4c\u5165": 778, "\u5e76\u6709\u53ef\u80fd\u5229\u7528\u8fd9\u70b9": 764, "\u5e76\u7528\u5b83\u6784\u9020\u4e00\u4e2a\u5f02\u6784\u56fe": 755, "\u5e76\u7528\u5bf9\u5e94\u7684\u4e24\u4e2a\u7aef\u70b9id\u8868\u793a\u4e00\u6761\u8fb9": 754, "\u5e76\u8ba1\u7b97\u672c\u5730\u8fdb\u7a0b\u7684\u8282\u70b9": 745, "\u5e76\u8df3\u8fc7\u4ece\u6587\u4ef6\u6784\u5efa\u56fe\u7684\u5b9e\u73b0": 743, "\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u7684\u5b57\u5178": 778, "\u5e76\u8fd4\u56de\u6e90\u8282\u70b9id\u6570\u7ec4\u548c\u76ee\u6807\u8282\u70b9id\u6570\u7ec4": 766, "\u5e76\u901a\u8fc7\u5728\u8bad\u7ec3\u8282\u70b9\u4e0a\u6bd4\u8f83\u9884\u6d4b\u548c\u771f\u5b9e\u6807\u7b7e\u6765\u8ba1\u7b97\u635f\u5931": 778, "\u5e76\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u4e2d\u5177\u6709\u5e42\u5f8b\u5206\u5e03\u7684\u56fe\u8fdb\u884c\u4e86\u4f18\u5316": 747, "\u5e94\u7528\u56fe\u5377\u79ef\u548c\u6fc0\u6d3b\u51fd\u6570": 776, "\u5e95\u5c42api\u8981\u6c42\u7528\u6237\u7f16\u5199\u4ee3\u7801\u4ee5\u660e\u786e\u5b9a\u4e49\u5982\u4f55\u5bf9\u8282\u70b9\u5c42\u8fdb\u884c\u91c7\u6837": 746, "\u5efa\u7acb\u70b9\u548c\u8fb9\u7279\u5f81": 774, "\u5efa\u8bae\u7684\u5b9e\u73b0\u662f\u5c06\u7ebf\u6027\u64cd\u4f5c\u5206\u6210\u4e24\u90e8\u5206": 759, "\u5f02\u6784\u56fe": [749, 750, 756, 760, 771], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u540c\u6784\u56fe\u7684\u6a21\u578b\u8bad\u7ec3\u662f\u4e00\u6837\u7684": 778, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": [756, 769], "\u5f02\u6784\u56fe\u4e0a\u7684\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206": 760, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 768, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 777, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u548c\u540c\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6ca1\u6709\u592a\u5927\u533a\u522b": 777, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u6a21\u578b\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u51e0\u4e4e\u76f8\u540c": 766, "\u5f02\u6784\u56fe\u4e2d\u8282\u70b9\u7c7b\u578b\u7684\u987a\u5e8f": 755, "\u5f02\u6784\u56fe\u4e2d\u8fb9\u7c7b\u578b\u7684\u987a\u5e8f": 755, "\u5f02\u6784\u56fe\u4e3a\u7ba1\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u53ca\u5176\u76f8\u5173\u7279\u5f81\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u63a5\u53e3": 755, "\u5f02\u6784\u56fe\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u8fb9\u7684\u7c7b\u578b": 773, "\u5f02\u6784\u56fe\u7684\u5377\u79ef\u64cd\u4f5c\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u53c2\u6570": 772, "\u5f02\u6784\u56fe\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u51e0\u4e4e\u76f8\u540c": 764, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 778, "\u5f02\u6784\u56fe\u91cc\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 755, "\u5f02\u6784\u7684": 750, "\u5f20\u5efa": 756, "\u5f20\u6000\u6587": 756, "\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570\u5fc5\u987b\u5728gpu\u4e0a": 753, "\u5f52\u4e00\u5316": 771, "\u5f52\u4e00\u5316\u53ef\u4ee5\u662fl2\u5f52\u4e00\u5316": 770, "\u5f53": 762, "\u5f531\u4e2a\u8282\u70b9\u5165\u5ea6\u4e3a0\u65f6": 771, "\u5f53\u4e00\u53f0\u673a\u5668\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u65f6": 746, "\u5f53\u4f7f\u7528": 751, "\u5f53\u524d": 746, "\u5f53\u524d\u4ec5\u652f\u6301\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 746, "\u5f53\u524d\u7248\u672c\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3api\u4ec5\u652f\u6301pytorch\u540e\u7aef": 745, "\u5f53\u524d\u7248\u672c\u7684\u5b9e\u73b0\u4ec5\u652f\u6301\u5177\u6709\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 745, "\u5f53\u5f15\u5165\u591a\u79cd\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u540e": 755, "\u5f53\u7528\u6237\u4f7f\u7528\u542f\u52a8\u811a\u672c\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 746, "\u5f53\u7528\u6237\u5728python\u547d\u4ee4\u884c\u6216jupyt": 746, "\u5f53\u811a\u672c\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 746, "\u5f53\u8bad\u7ec3\u811a\u672c\u5728\u8bad\u7ec3\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 746, "\u5f53\u8f93\u5165\u7279\u5f81": 771, "\u5f53\u8fb9\u7c7b\u578b\u552f\u4e00\u5730\u786e\u5b9a\u4e86\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u7684\u7c7b\u578b\u65f6": 755, "\u5f90\u4e1c\u8f89": 756, "\u5f97\u5206": 777, "\u5f97\u5230": 774, "\u5f97\u5230\u5757\u4e2d\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u521d\u59cb\u8282\u70b9id": 763, "\u5f97\u5230\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 767, "\u5f97\u5230\u8fb9id\u5230\u8f93\u5165\u8fb9\u754c\u4e2d\u8fb9\u7684\u521d\u59cbid\u7684\u6620\u5c04": 763, "\u5fc5\u987b\u5728": 746, "\u5fc5\u987b\u5728dgl\u7684\u4efb\u4f55\u5176\u4ed6\u5206\u5e03\u5f0fapi\u4e4b\u524d": 746, "\u5fc5\u987b\u5728\u521d\u59cb\u5316": 746, "\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u7684\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8c03\u7528\u542f\u52a8\u811a\u672c": 748, "\u60c5\u51b5\u4f1a\u6709\u6240\u4e0d\u540c": 764, "\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f": 750, "\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570": 763, "\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u90bb\u5c45\u91c7\u6837\u7b56\u7565": 763, "\u60f3\u8981\u5b9e\u73b0\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u517c\u5bb9\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 762, "\u60f3\u8981\u7528dgl\u63d0\u4f9b\u7684\u90bb\u5c45\u91c7\u6837\u5668\u505a\u8fb9\u5206\u7c7b": 764, "\u60f3\u8d2d\u4e70": 750, "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528g": 772, "\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528\u4e00\u4e2a\u96c6\u7fa4\u7684\u73af\u5883\u8bbe\u7f6e": 745, "\u6216": [750, 755, 767], "\u6216numpi": 754, "\u6216\u4e3a\u76f8\u5173\u5b9e\u4f53\u63a8\u8350\u8fdb\u884c\u6700\u8fd1\u90bb\u641c\u7d22\u6216\u6700\u5927\u5185\u79ef\u641c\u7d22": 777, "\u6216\u65e0\u5411\u56fe\u4e2d\u7684\u90bb\u5c45": 763, "\u6216\u662f": 750, "\u6216\u8005\u60f3\u8981\u5173\u4e8e\u5757\u7684\u66f4\u6df1\u5165\u7684\u4ecb\u7ecd": 768, "\u6216\u8005\u60f3\u8981\u5bf9\u5757\u7684\u6982\u5ff5\u6709\u66f4\u8be6\u7ec6\u7684\u4e86\u89e3": 764, "\u6240\u4ee5dgl\u4e0d\u63a8\u8350\u5728": 758, "\u6240\u4ee5\u5f53\u5c06\u65e0\u5411\u7684networkx\u56fe\u8f6c\u6362\u4e3a": 751, "\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u5c06\u5176\u9644\u52a0\u5230\u4f18\u5316\u5668\u4e0a\u4ee5\u8fdb\u884c\u5c0f\u6279\u91cf\u8bad\u7ec3": 746, "\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019": 744, "\u6240\u4ee5\u8fd9\u91cc\u96be\u4ee5\u679a\u4e3e\u6240\u6709\u9009\u9879": 751, "\u6240\u6709\u6d88\u606f\u4f20\u9012\u51fd\u6570": 776, "\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6709\u65b9\u5411\u7684": 754, "\u6240\u6709\u8282\u70b9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5b9e\u4f53": 750, "\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u5fc5\u987b\u8c03\u7528\u521b\u5efa": 746, "\u6240\u6709\u8fb9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5173\u7cfb": 750, "\u6240\u8ff0": 773, "\u6267\u884c\u542f\u52a8\u811a\u672c\u7684\u8ba1\u7b97\u673a": 748, "\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u5bf9\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u64cd\u4f5c": 758, "\u6269\u5c55\u4e3a": 771, "\u6279\u6b21": [756, 761, 768, 771, 773], "\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u5f20\u91cf\u5747\u901a\u8fc7\u5c06\u6240\u6709\u56fe\u4e0a\u7684\u76f8\u5e94\u7279\u5f81\u62fc\u63a5\u5f97\u5230": 776, "\u6279\u6b21\u5316\u7684\u56fe": 776, "\u6279\u91cf\u5f52\u4e00\u5316\u7b49": 776, "\u628a\u5b83\u5b58\u5728\u56fe\u4e2d\u7528\u6765\u505a\u6d88\u606f\u4f20\u9012": 760, "\u628a\u5b83\u7684\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\u53d8\u6210\u4e86\u4e00\u4e2a\u5c0f\u7684\u4e8c\u5206\u56fe": 763, "\u628a\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 775, "\u62bd\u53d6\u51fa\u6765": 772, "\u62c6\u5206\u8bad\u7ec3\u96c6": 745, "\u62f7\u8d1d\u8282\u70b9\u7279\u5f81": 755, "\u62f7\u8d1d\u8fb9\u7684\u7279\u5f81": 755, "\u62fc\u63a5": 759, "\u6307\u4ee3\u4e00\u6761": 754, "\u6307\u5411\u8282\u70b9": 754, "\u6307\u5b9a\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55\u6216\u5df2\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55": 740, "\u6307\u5b9a\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 748, "\u6307\u5b9a\u56fe\u7c7b\u578b": 771, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u5206\u533a\u6570\u636e\u7684\u76f8\u5bf9\u8def\u5f84": 748, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u7528\u6237\u7684\u8bad\u7ec3\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84": 748, "\u6307\u5b9a\u6bcf\u4e2a\u5173\u7cfb\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570": 760, "\u6307\u5b9a\u8bad\u7ec3\u673a\u5668\u4e2d\u5b58\u50a8\u4e0e\u5206\u5e03\u5f0f\u8bad\u7ec3\u6709\u5173\u7684\u6240\u6709\u6570\u636e\u7684\u76ee\u5f55": 748, "\u6307\u5b9a\u96c6\u7fa4\u7684ip\u914d\u7f6e\u6587\u4ef6": 748, "\u6307\u793a\u76f8\u5e94\u8282\u70b9\u548c\u8fb9\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7279\u5f81\u5b57\u6bb5\u540d": 758, "\u6362\u53e5\u8bdd\u8bf4": 746, "\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570": 758, "\u63a5\u53d7\u4e00\u4e2a\u5982\u4e0a\u6240\u8ff0\u7684\u53c2\u6570": 758, "\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178": 760, "\u63a5\u53d7\u6765\u81ea\u540e\u7aef\u6846\u67b6\u7684\u4efb\u4f55\u8bbe\u5907\u5bf9\u8c61": 753, "\u63a5\u53e3\u53ef\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5f81": 752, "\u63a5\u53e3\u7684\u91cd\u8981\u8bf4\u660e": 752, "\u63a5\u6536\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u5f20\u91cf\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 778, "\u63a5\u7740\u8c03\u7528\u7528\u6237\u9884\u5148\u6ce8\u518c\u5728\u8be5\u5173\u7cfb\u4e0a\u7684nn\u6a21\u5757": 772, "\u63a8\u65ad": 746, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [745, 756], "\u63a8\u65ad\u7b97\u6cd5\u4e0d\u540c\u4e8e\u8bad\u7ec3\u7b97\u6cd5": 765, "\u63a8\u65ad\u7b97\u6cd5\u5c06\u5305\u542b\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 765, "\u63a8\u7406\u671f\u95f4\u5b9a\u4f4d\u8282\u70b9": 747, "\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5e03\u5c14\u6570\u7ec4\u8868\u793a\u8bad\u7ec3": 746, "\u63a9\u7801": 740, "\u63a9\u7801\u5728pytorch\u548ctensorflow\u4e2d\u662fbool\u5f20\u91cf": 743, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee5\u56fe\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u62bd\u8c61": 749, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u540c\u6784\u56fe\u8282\u70b9\u5206\u7c7b\u7684\u4f8b\u5b50": 778, "\u63d0\u4f9b\u4e86\u4e00\u4e9b\u529f\u80fd": 746, "\u63d0\u4f9b\u4e86\u4e00\u5c0f\u90e8\u5206": 746, "\u63d0\u4f9b\u4e86\u51e0\u4e2aapi\u6765\u8bbf\u95ee\u56fe\u7ed3\u6784": 746, "\u63d0\u4f9b\u4e86\u5bf9": 767, "\u63d0\u4f9b\u4e86\u63a5\u53e3\u4ee5\u5904\u7406\u56fe\u7684\u7ed3\u6784": 749, "\u63d0\u4f9b\u4e86\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 743, "\u63d0\u5230\u7684\u4e24\u5c42gcn\u4e3a\u4f8b": 765, "\u64cd\u4f5c": 758, "\u652f\u6301\u7d22\u5f15\u8bfb\u53d6\u548c\u5199\u5165": 746, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u975e\u5e38\u76f8\u4f3c": 764, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8fb9\u5206\u7c7b": 766, "\u6570\u636e\u5bfc\u5165": 743, "\u6570\u636e\u6587\u4ef6\u5939": 755, "\u6570\u636e\u6837\u672c\u7684\u6570\u91cf": 740, "\u6570\u636e\u96c6\u4e2d\u56fe\u7684\u6570\u91cf": 743, "\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u5f20\u56fe\u90fd\u6709\u5b83\u72ec\u7279\u7684\u7ed3\u6784\u548c\u8282\u70b9\u4e0e\u8fb9\u7684\u7279\u5f81": 776, "\u6570\u636e\u96c6\u4e2d\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u56fe": 743, "\u6570\u636e\u96c6\u4e5f\u53ea\u5305\u62ec\u4e00\u4e2a\u56fe": 742, "\u6570\u636e\u96c6\u7c7b\u4f3c": 742, "\u6574\u56fe\u5206\u7c7b": [743, 756, 773, 778], "\u6574\u56fe\u5206\u7c7b\u4e0e\u8282\u70b9\u5206\u7c7b\u6216\u94fe\u63a5\u9884\u6d4b\u7684\u4e3b\u8981\u533a\u522b\u662f": 776, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u8fd8\u9700\u8981\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u8868\u793a": 776, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u9700\u8981\u5728\u5f88\u591a\u56fe\u4e0a\u8fdb\u884c\u8bad\u7ec3": 776, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u4e0e\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u5178\u578b\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u7684\u5927\u591a\u6570\u6570\u636e\u96c6\u7c7b\u4f3c": 743, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u91cc\u7684\u6bcf\u4e2a\u6570\u636e\u70b9\u662f\u4e00\u4e2a\u56fe\u548c\u5b83\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4": 776, "\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u53ef\u4ee5\u8bc6\u522b\u793e\u533a\u7684\u7c7b\u578b": 776, "\u6574\u56fe\u5206\u7c7b\u6d41\u7a0b": 776, "\u6574\u56fe\u5206\u7c7b\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a": 776, "\u6587\u4ef6\u4e2d\u52a0\u8f7d": 751, "\u6587\u4ef6\u7684\u6240\u6709\u8def\u5f84\u90fd\u5e94\u6307\u5b9a\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u7684\u76f8\u5bf9\u8def\u5f84": 748, "\u65b9\u4fbf\u5e7f\u5927\u4e2d\u6587\u7528\u6237\u7fa4\u5b66\u4e60\u548c\u4f7f\u7528dgl": 756, "\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\u9a8c\u8bc1": 754, "\u65b9\u6cd5": [761, 763], "\u65b9\u6cd5\u4ece\u6700\u540e\u4e00\u5c42\u5f00\u59cb\u751f\u6210\u4e00\u4e2a\u5757\u7684\u5217\u8868": 763, "\u65b9\u6cd5\u8ba1\u7b97\u8fb9\u9884\u6d4b\u7684\u7ec4\u4ef6\u5373\u53ef\u8fdb\u884c\u8fb9\u5206\u7c7b": 774, "\u65b9\u6cd5\u8ba1\u7b97\u9884\u6d4b\u503c\u5373\u53ef": 774, "\u65e0\u5411\u7684": 750, "\u65e0\u76d1\u7763\u5b66\u4e60graphsag": 766, "\u65e0\u9700\u8fdb\u884c\u6b64\u7c7b\u68c0\u9a8c": 771, "\u65f6": 746, "\u65f6\u5206\u5e03\u5f0f\u91c7\u6837\u4ee3\u7801\u4e0e\u5355\u8fdb\u7a0b\u91c7\u6837\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c": 746, "\u65f6\u8bbe\u7f6e": 764, "\u65f6\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u8fed\u4ee3": 764, "\u65f6\u9700\u8981\u6307\u5b9a\u8fb9\u7684\u7c7b\u578b": 774, "\u662f": 747, "\u662f1\u4e2a\u5143\u7ec4\u65f6": 771, "\u662f\u4e00\u4e2apython\u7c7b": 746, "\u662f\u4e00\u4e2a\u56fe\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u51c6\u6570\u636e\u96c6": 742, "\u662f\u4e00\u4e2a\u5728\u4e8c\u5206\u56fe\u4e0a\u505a\u8fb9\u5206\u7c7b\u7684\u4ee3\u7801\u793a\u4f8b": 764, "\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u90bb\u5c45\u91c7\u6837\u5668\u7c7b": 763, "\u662f\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\u7684\u51fd\u6570": 763, "\u662f\u4e00\u4e2a\u9ad8\u7ea7api": 758, "\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 764, "\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 749, "\u662f\u4ece\u5747\u5300\u5206\u5e03\u4e2d\u91c7\u6837\u7684": 777, "\u662f\u4ee5\u8fb9\u7c7b\u578b\u5b57\u5178\u548c\u9884\u6d4b\u7ed3\u679c\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 766, "\u662f\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 760, "\u662f\u5426\u6253\u5370\u8fdb\u5ea6\u4fe1\u606f": 740, "\u662f\u5426\u91cd\u65b0\u5bfc\u5165\u6570\u636e\u96c6": 740, "\u662f\u56fe": 776, "\u662f\u5904\u7406": 740, "\u662f\u5b9a\u4e49\u5728\u6bcf\u6761\u8fb9\u4e0a\u7684\u6d88\u606f\u51fd\u6570": 757, "\u662f\u5bf9\u5e94\u6bcf\u4e2a\u5173\u7cfb": 772, "\u662f\u5e38\u6570\u9879\u8d85\u53c2\u6570": 777, "\u662f\u7528\u4e8e\u7279\u5f81\u5f52\u4e00\u5316\u7684\u53ef\u8c03\u7528\u51fd\u6570": 770, "\u662f\u805a\u5408\u51fd\u6570": 772, "\u662f\u8282\u70b9": 776, "\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55": 748, "\u662f\u987e\u5ba2": 750, "\u6635\u79f0": 756, "\u6682\u4e0d\u652f\u6301\u7a00\u758f\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 746, "\u66f4\u591a\u7ec6\u8282": 743, "\u66f4\u591a\u8be6\u7ec6\u7528\u6cd5\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357": 761, "\u66f4\u65b0\u51fd\u6570": [757, 758], "\u66f4\u65b0\u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u53c2\u6570": 758, "\u66ff\u6362\u4e3a": 767, "\u6700\u540e": [772, 776], "\u6700\u5e38\u89c1\u548c\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4efb\u52a1\u4e4b\u4e00\u5c31\u662f\u8282\u70b9\u5206\u7c7b": 778, "\u6700\u7b80\u5355\u7684\u90bb\u5c45\u91c7\u6837\u5668\u662f": 768, "\u6709": 758, "\u67093\u4e2a\u6587\u4ef6\u4ee5dgl\u683c\u5f0f\u5b58\u50a8\u5206\u533a\u6570\u636e": 747, "\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9002\u5408\u4fdd\u5b58\u5904\u7406\u8fc7\u7684\u6570\u636e": 744, "\u6709\u5173dgl\u7684\u5185\u7f6e\u91c7\u6837\u5668\u7684\u5b8c\u6574\u5217\u8868": 764, "\u6709\u5173dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u5982\u4f55\u5de5\u4f5c": 778, "\u6709\u5173\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 743, "\u6709\u5173\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 743, "\u6709\u5173\u8bad\u7ec3\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 743, "\u6709\u5173\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 743, "\u6709\u5206\u5e03\u5f0f\u7684\u7248\u672c": 746, "\u6709\u5411": 750, "\u6709\u5411\u7684": 750, "\u6709\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u53ef\u50a8\u5b58\u56fe": 751, "\u6709\u65f6\u5e0c\u671b\u4ece\u8ba1\u7b97\u4f9d\u8d56\u4e2d\u5220\u9664\u51fa\u73b0\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u8fb9": 764, "\u6709\u65f6\u7528\u6237\u4f1a\u60f3\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 773, "\u6709\u65f6\u7528\u6237\u5e0c\u671b\u9884\u6d4b\u56fe\u4e2d\u8fb9\u7684\u5c5e\u6027\u503c": 774, "\u6709\u65f6\u8fb9\u4e0a\u7684\u6d88\u606f\u53ef\u80fd\u662f\u9ad8\u7ef4\u7684": 759, "\u6709\u7740\u8bb8\u591a\u4f7f\u7528\u8282\u70b9\u5d4c\u5165\u7684\u65b9\u6cd5": 777, "\u670d\u52a1\u5668": 745, "\u670d\u52a1\u5668\u8fdb\u7a0b": 745, "\u670d\u52a1\u5668\u8fdb\u7a0b\u8d1f\u8d23\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570": 746, "\u672a\u52a0\u6743\u7684": 750, "\u672a\u6765dgl\u5c06\u652f\u6301\u5206\u5e03\u5f0f\u56fe\u5212\u5206": 747, "\u672c\u4f8b\u4e2d\u7701\u7565": 778, "\u672c\u7ae0\u4e2d\u9009\u62e9": 778, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5728\u5927\u56fe\u4e0a\u8fdb\u884c\u968f\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u65b9\u6cd5": 762, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4e3a\u7528\u6237\u81ea\u5df1\u7684\u56fe\u6570\u636e\u521b\u5efa\u4e00\u4e2adgl\u6570\u636e\u96c6": 739, "\u672c\u7ae0\u4ee3\u7801\u4f7f\u7528pytorch\u4f5c\u4e3adgl\u7684\u540e\u7aef\u6846\u67b6": 773, "\u672c\u7ae0\u4f1a\u4ee5\u4e0b\u9762\u4ee3\u7801\u6240\u521b\u5efa\u7684\u4e00\u4e2a\u5f02\u6784\u56fe\u4e3a\u4f8b": 773, "\u672c\u7ae0\u4f59\u4e0b\u7684\u5c0f\u8282\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4e3b\u9898": 762, "\u672c\u7ae0\u5047\u8bbe\u7528\u6237\u7684\u56fe\u4ee5\u53ca\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u90fd\u80fd\u5b58\u8fdbgpu": 773, "\u672c\u7ae0\u5171\u6709\u56db\u8282": 773, "\u672c\u7ae0\u5c06\u4f7f\u7528pytorch\u4f5c\u4e3a\u540e\u7aef": 769, "\u672c\u7ae0\u7684": 778, "\u672c\u7ae0\u7684\u524d\u534a\u90e8\u5206\u4ecb\u7ecd\u4e86\u4e0d\u540c\u573a\u666f\u4e0b\u5982\u4f55\u8fdb\u884c\u968f\u673a\u8bad\u7ec3\u7684\u65b9\u6cd5": 762, "\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u5206\u5e03\u5f0f\u7ec4\u4ef6": 745, "\u672c\u7ae0\u7684\u540e\u7eed\u90e8\u5206\u5c55\u793a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5": 740, "\u672c\u7ae0\u7684\u5f02\u6784\u56fe\u6837\u4f8b\u6570\u636e": 774, "\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u89e3\u91ca\u4e86\u5982\u4f55\u5728\u5f02\u6784\u56fe\u4e0a\u5b9e\u73b0\u6d88\u606f\u4f20\u9012": 757, "\u672c\u7ae0\u901a\u8fc7\u4f7f\u7528": 773, "\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u4e86dgl\u7684\u6d88\u606f\u4f20\u9012api": 757, "\u672c\u7ae0\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e86\u56fe\u7684\u5b9a\u4e49": 749, "\u672c\u8282\u4e0d\u6d89\u53ca\u901a\u8fc7\u8f6c\u6362\u5176\u4ed6\u56fe\u6765\u751f\u6210\u56fe\u7684\u51fd\u6570": 751, "\u672c\u8282\u4ec5\u7ed9\u51fa\u4e00\u4e9b\u5e38\u89c1\u683c\u5f0f\u7684\u4e00\u822c\u60c5\u51b5": 751, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728gpu\u663e\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u5c0f\u6279\u6b21\u5904\u7406\u548c\u90bb\u5c45\u91c7\u6837\u5b9e\u73b0\u5168\u56fe\u524d\u5411\u4f20\u64ad\u7684\u65b9\u6cd5": 765, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97api": 746, "\u672c\u8282\u4ee5\u5185\u7f6e\u6570\u636e\u96c6": 743, "\u672c\u8282\u4ee5\u5185\u7f6e\u7684\u6570\u636e\u96c6": 743, "\u672c\u8282\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u7684\u57fa\u672c\u7528\u6cd5": 742, "\u672c\u8282\u4f1a\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u7528\u6237\u81ea\u5df1\u7684\u91c7\u6837\u5668\u5e76\u5c06\u5176\u52a0\u5165\u5230gnn\u7684\u8bad\u7ec3\u6846\u67b6\u4e2d": 763, "\u672c\u8282\u4f7f\u7528dgl\u5185\u7f6e\u7684\u6570\u636e\u96c6": 778, "\u672c\u8282\u5c06\u5c55\u793a\u5982\u4f55\u5904\u7406\u4e0e\u8fd9\u4e9b\u4efb\u52a1\u76f8\u5173\u7684\u6570\u636e\u96c6": 743, "\u672c\u8282\u628a\u8282\u70b9": 777, "\u672c\u8282\u91cd\u70b9\u4ecb\u7ecd\u4e86\u5904\u7406\u56fe": 743, "\u672c\u8d28\u4e0a": 767, "\u673a\u5668\u96c6\u7fa4\u4e0a": 748, "\u674e\u5e86\u6807": 756, "\u6765\u4fdd\u5b58\u56fe\u7684\u70b9id": 754, "\u6765\u505a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u94fe\u8def\u9884\u6d4b\u7684\u6570\u636e\u96c6": 743, "\u6765\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u5757\u7684\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 768, "\u6765\u5904\u7406zip\u6587\u4ef6": 741, "\u6765\u5c55\u793a\u6a21\u578b\u7684\u8bad\u7ec3": 778, "\u6765\u5e73\u8861\u6bcf\u4e2a\u7c7b\u578b\u8282\u70b9\u5728\u5b50\u56fe\u4e2d\u7684\u5165\u5ea6": 747, "\u6765\u5f00\u53d1\u6d88\u606f\u4f20\u9012\u529f\u80fd": 759, "\u6765\u6307\u4ee3\u8fd9\u4e24\u4e2a\u5173\u7cfb\u662f\u53ef\u4ee5\u7684": 755, "\u6765\u6307\u5b9a\u6574\u5408\u4e0d\u540c\u5173\u7cfb\u805a\u5408\u7ed3\u679c\u7684\u65b9\u5f0f": 760, "\u6765\u6307\u793a\u6b64\u591a\u4efb\u52a1\u6570\u636e\u96c6\u4e2d\u7684\u9884\u6d4b\u4efb\u52a1\u603b\u6570": 743, "\u6765\u66ff\u6362\u56fe": 768, "\u6765\u67e5\u770bdgl\u7684\u5185\u7f6e\u6a21\u578b\u6a21\u5757\u662f\u5426\u652f\u6301\u63a5\u53d7": 768, "\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684\u6570\u636e\u96c6": 743, "\u6765\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 773, "\u6765\u81eanetworkx": 751, "\u6765\u81eascipi": 751, "\u6765\u81ea\u52a8\u5b8c\u6210": 741, "\u6765\u83b7\u53d6\u8282\u70b9": 745, "\u6765\u83b7\u53d6\u88ab\u5212\u5206\u7684\u56fe\u5206\u533a\u6570\u636e": 745, "\u6765\u83b7\u5f97\u5206\u7c7b\u8f93\u51fa": 776, "\u6765\u8ba1\u7b97\u8282\u70b9\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 777, "\u6765\u8ba1\u7b97\u8fb9\u7684\u5206\u6570": 766, "\u6765\u8bbf\u95ee\u8282\u70b9\u548c\u8fb9\u4e2d\u7684\u6570\u636e": 746, "\u6765\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 766, "\u6784\u5efa\u4e00\u4e2a2\u5c42\u7684gnn\u6a21\u578b": 778, "\u6784\u5efa\u4e86\u4e00\u4e2a\u65e0\u5411\u7684networkx\u56fe": 751, "\u6784\u5efa\u56fe": 743, "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": [756, 767, 773, 778], "\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u6ce8\u518c\u548c\u524d\u5411\u4f20\u64ad\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u5f20\u91cf\u64cd\u4f5c\u4e0e\u540e\u7aef\u6846\u67b6\u4e00\u6837": 769, "\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1": 770, "\u6784\u9020\u51fd\u6570\u7684\u6700\u540e\u8c03\u7528\u4e86": 770, "\u6807\u7b7e": [740, 743], "\u6807\u7b7e\u548c\u6570\u636e\u96c6\u5212\u5206\u7684\u63a9\u7801": 740, "\u6807\u7b7e\u6570\u7b49\u57fa\u672c\u4fe1\u606f": 740, "\u6807\u91cf\u6574\u578b\u7279\u5f81": 752, "\u6829\u6829\u7684\u590f\u5929": 756, "\u6839\u636e": 774, "\u6839\u636edgl\u6240\u4f7f\u7528\u7684\u540e\u7aef\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 769, "\u6839\u636e\u4efb\u52a1\u8bbe\u8ba1\u5206\u7c7b\u5c42": 776, "\u6839\u636e\u5176\u590d\u6742\u6027": 760, "\u6839\u636e\u5f53\u524d\u7684\u4efb\u52a1\u60c5\u51b5": 747, "\u6839\u636e\u8fd9\u4e2a\u826f\u597d\u7684\u6027\u8d28": 776, "\u6839\u636e\u9700\u8981\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u6765\u9009\u62e9": 767, "\u68c0\u67e5": 741, "\u68c0\u67e5\u5728": [740, 744], "\u68c0\u6d4b\u8f93\u5165\u56fe\u5bf9\u8c61\u662f\u5426\u7b26\u5408\u89c4\u8303": 771, "\u6a21\u5757": [756, 767, 773, 778], "\u6a21\u5757\u4e2d": 771, "\u6a21\u5757\u4f5c\u4e3a\u56fe\u5377\u79ef\u5c42": 776, "\u6a21\u5757\u63a5\u53d7\u7684\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684": 768, "\u6a21\u5757\u9996\u5148\u5bf9\u6bcf\u79cd\u8fb9\u7c7b\u578b\u8fdb\u884c\u5355\u72ec\u7684\u56fe\u5377\u79ef\u8ba1\u7b97": 778, "\u6a21\u578b": 746, "\u6a21\u578b\u4e2d\u5e94\u7279\u522b\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9": 776, "\u6a21\u578b\u5b9a\u4e49": 745, "\u6a21\u578b\u5b9a\u4e49\u5b8c\u6210\u540e": 776, "\u6a21\u578b\u5b9e\u73b0\u4f4d\u4e8e": 776, "\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6\u4e2d": 774, "\u6a21\u578b\u5c06": 764, "\u6a21\u578b\u63a5\u53d7\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868": 764, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u51e0\u4e4e\u76f8\u540c": 768, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c": 764, "\u6a21\u578b\u7684\u8f93\u5165\u662f\u5e26\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u7684\u6279\u6b21\u5316\u56fe": 776, "\u6a21\u578b\u8bad\u7ec3\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u4f4d\u4e8e": 776, "\u6a21\u578b\u8bad\u7ec3\u7684\u5faa\u73af": 745, "\u6b22\u8fce\u7ed9dgl\u8d21\u732e\u66f4\u591a\u7684\u6a21\u5757": 769, "\u6b63\u5728\u9500\u552e": 750, "\u6b63\u6837\u672c": 766, "\u6b64\u51fd\u6570\u5bf9": 758, "\u6b64\u521b\u5efa\u8fc7\u7a0b\u624d\u80fd\u6210\u529f": 746, "\u6b64\u5904\u53ea\u662f\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49gnn\u6a21\u5757\u7684\u4e00\u4e2a\u793a\u4f8b": 767, "\u6b64\u5916": [743, 753, 755], "\u6b64\u6a21\u5f0f\u4e3b\u8981\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5": 746, "\u6b64\u8c03\u7528\u901a\u8fc7\u5c06\u6e90\u8282\u70b9\u7279\u5f81": 758, "\u6bcf\u4e00\u6761\u8fb9": 777, "\u6bcf\u4e2a": 742, "\u6bcf\u4e2a\u5173\u7cfb\u4e0a\u7684dgl": 772, "\u6bcf\u4e2a\u5173\u7cfb\u7531\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4": 755, "\u6bcf\u4e2a\u56fe\u7684\u6807\u7b7e\u6570": 743, "\u6bcf\u4e2a\u8282\u70b9\u7279\u5f81\u5177\u6709\u552f\u4e00\u540d\u79f0": 752, "\u6bcf\u4e2a\u8fb9\u7279\u5f81\u4e5f\u5177\u6709\u552f\u4e00\u540d\u79f0": 752, "\u6bcf\u53f0\u8ba1\u7b97\u673a\u8d1f\u8d23\u4e00\u4e2a\u4e14\u53ea\u8d1f\u8d23\u4e00\u4e2a\u5206\u533a": 746, "\u6bcf\u5c42\u53ea\u5c55\u793a\u524d3\u4e2a\u5c0f\u6279\u6b21": 765, "\u6bcf\u6761\u8fb9\u7684\u6743\u91cd": 752, "\u6bcf\u6761\u8fb9\u90fd\u4e0e\u4e00\u4e2a\u6807\u91cf\u6743\u91cd\u503c\u76f8\u5173\u8054": 750, "\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u91cf\u6743\u91cd": 775, "\u6bcf\u6b21\u68af\u5ea6\u4e0b\u964d": 762, "\u6bcf\u79cd\u5173\u7cfb\u5bf9\u5e94\u4e00\u4e2a": 771, "\u6bcf\u8282\u5bf9\u5e94\u4e00\u79cd\u56fe\u5b66\u4e60\u4efb\u52a1": 773, "\u6bcf\u884c\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 748, "\u6bd4\u5982": [759, 770], "\u6bd4\u5982gml\u6216json": 755, "\u6bd4\u5982\u5217\u8868": 754, "\u6bd4\u5982\u5728": 771, "\u6c88\u6210": 756, "\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u8fb9": 763, "\u6ca1\u6709\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u5c31\u6ca1\u6709\u660e\u786e\u7684\u8fd4\u56de\u503c": 755, "\u6ce8\u518c\u53c2\u6570\u548c\u5b50\u6a21\u5757": 770, "\u6ce8\u518c\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u6216\u8005\u5b50\u6a21\u5757": 770, "\u6ce8\u610f": [751, 755, 765, 767, 773], "\u6ce8\u610f\u7ed3\u679c\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u7279\u5f81": 760, "\u6ce8\u610f\u8ba1\u7b97\u65b9\u6cd5\u662f\u4e00\u6837\u7684": 765, "\u6d4b\u8bd5\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u5bf9\u5e94\u8282\u70b9": 746, "\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u91cd\u590d\u591a\u8f6e": 778, "\u6d88\u606f\u4f20\u9012\u662f\u5b9e\u73b0gnn\u7684\u4e00\u79cd\u901a\u7528\u6846\u67b6\u548c\u7f16\u7a0b\u8303\u5f0f": 757, "\u6d88\u606f\u4f20\u9012\u7684\u5b9a\u4e49\u662f": 763, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [756, 773, 774, 778], "\u6d88\u606f\u4f20\u9012\u9700\u8981\u805a\u96c6\u5176\u90bb\u5c45": 763, "\u6d88\u606f\u51fd\u6570": 758, "\u6d88\u606f\u7684\u5185\u7f6e\u51fd\u6570\u7684\u547d\u540d\u7ea6\u5b9a\u662f": 758, "\u6d88\u606f\u805a\u5408\u548c\u8282\u70b9\u7279\u5f81\u66f4\u65b0": 758, "\u6e38\u620f": 755, "\u6e90": [758, 759], "\u6e90\u4ee3\u7801": 743, "\u6e90\u6587\u4ef6\u4e2d\u7684": 776, "\u6e90\u8282\u70b9": 766, "\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u76f8\u540c": 771, "\u6e90\u8282\u70b9\u7279\u5f81": 771, "\u6e90\u8282\u70b9\u7c7b\u578b": 755, "\u6fc0\u6d3b\u51fd\u6570": 771, "\u70b9\u4e0a\u8ba1\u7b97": 757, "\u7136\u540e": [768, 778], "\u7136\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e9b": 749, "\u7136\u540e\u540c\u6837\u901a\u8fc7\u8c03\u7528": 774, "\u7136\u540e\u5728\u5b50\u56fe\u4e0a\u8c03\u7528": 761, "\u7136\u540e\u5728\u7f51\u7edc\u7684\u7b2c": 762, "\u7136\u540e\u5bf9\u6240\u6709\u6d88\u606f\u6c42\u548c\u6765\u66f4\u65b0\u8282\u70b9\u7279\u5f81": 758, "\u7136\u540e\u5c06\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4e0a\u7684\u6d88\u606f\u805a\u5408\u7ed3\u679c\u518d\u76f8\u52a0": 778, "\u7136\u540e\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u8fb9\u7684": 758, "\u7136\u540e\u5c06\u8be5\u5b50\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 755, "\u7136\u540e\u5e94\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42": 759, "\u7136\u540e\u6839\u636e\u56fe\u7c7b\u578b\u6269\u5c55\u8f93\u5165\u7279\u5f81": 771, "\u7136\u540e\u8bb2\u89e3\u4e86\u5982\u4f55\u9ad8\u6548\u5730\u5728\u70b9\u548c\u8fb9\u4e0a\u4f7f\u7528\u8fd9\u4e9bapi": 757, "\u7136\u800c": 765, "\u7269\u54c1": [749, 750], "\u7279\u5f81": [740, 755], "\u7279\u5f81\u4e0a": 758, "\u7279\u5f81\u4e5f\u5fc5\u987b\u5728gpu\u4e0a": 753, "\u7279\u5f81\u548c\u5212\u5206\u63a9\u7801\u7684\u6807\u51c6\u65b9\u6cd5": 743, "\u7279\u5f81\u548c\u76ee\u6807\u8282\u70b9\u7684": 758, "\u7279\u5f81\u5c3a\u5bf8\u662f7": 776, "\u7279\u5f81\u5f20\u91cf\u4f7f\u7528": 752, "\u7279\u5f81\u6570\u636e\u4e5f\u62f7\u8d1d\u5230\u4e86gpu\u4e0a": 753, "\u7279\u5f81\u6c42\u548c": 758, "\u7279\u6b64\u81f4\u8c22\u4e0b\u8ff0\u8d21\u732e\u8005": 756, "\u72ec\u7acb\u6a21\u5f0f\u8981\u6c42\u8f93\u5165\u56fe\u4ec5\u5177\u6709\u4e00\u4e2a\u5206\u533a": 746, "\u738b\u5efa\u6c11": 756, "\u73a9": 755, "\u751f\u6210\u8fb9\u754c": 763, "\u7528": [745, 754, 769], "\u7528\u4e8e\u5206\u5e03\u5f0f\u56fe\u7684": 746, "\u7528\u4e8e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684": 746, "\u7528\u4e8e\u521d\u59cb\u5316": 746, "\u7528\u4e8e\u5728dgl\u4e2d\u81ea\u5b9a\u4e49\u56fe\u6570\u636e\u96c6\u7684\u6a21\u677f": 740, "\u7528\u4e8e\u5728\u673a\u5668\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1": 748, "\u7528\u4e8e\u5b9a\u4e49\u5f02\u6784\u56fe\u4e0agnn\u6a21\u5757": 772, "\u7528\u4e8e\u5bf9\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u91c7\u6837\u4ee5\u751f\u6210\u5c0f\u6279\u6b21\u8bad\u7ec3\u6570\u636e": 746, "\u7528\u4e8e\u5c06\u56fe\u5206\u533a\u590d\u5236\u5230\u96c6\u7fa4": 748, "\u7528\u4e8e\u6307\u5b9a\u56fe\u7c7b\u578b\u5e76\u5c06": 771, "\u7528\u4e8e\u8bbf\u95ee\u5176\u5143\u6570\u636e": 746, "\u7528\u4e8e\u8bbf\u95ee\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d\u7684\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 746, "\u7528\u4ece0\u5f00\u59cb\u7684\u8fde\u7eed\u6574\u6570\u91cd\u65b0\u6807\u8bb0\u6240\u6709\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 755, "\u7528\u4fdd\u5b58\u7684\u8fb9\u7279\u5f81\u4e0e\u5bf9\u5e94\u8fb9\u7684\u539f\u59cb\u6d88\u606f\u76f8\u4e58": 775, "\u7528\u6237": [749, 750, 755], "\u7528\u6237\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5b83": 758, "\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528mlp": 774, "\u7528\u6237\u4e5f\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a": 774, "\u7528\u6237\u4ec5\u9700\u5bf9\u5355\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u8bad\u7ec3": 745, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 763, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528": 768, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8282\u70b9": 766, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7": 747, "\u7528\u6237\u53ea\u9700\u4f7f\u7528\u65b0\u7684\u8282\u70b9\u548c\u8fb9\u7684id": 747, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 768, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u51fa\u8282\u70b9\u7684\u6807\u7b7e": 768, "\u7528\u6237\u53ea\u9700\u8981\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a": 774, "\u7528\u6237\u53ef\u4ee5\u4ece\u8fd4\u56de\u7684\u5b57\u5178\u4e2d\u63d0\u53d6": 778, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528": [764, 778], "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u50cfpandas\u8fd9\u6837\u7684\u5305\u5148\u5c06csv\u6587\u4ef6\u89e3\u6790\u4e3anumpy\u6570\u7ec4\u6216\u6846\u67b6\u5f20\u91cf": 755, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 758, "\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u52a0\u8f7d\u5668": 763, "\u7528\u6237\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5c06\u8bad\u7ec3\u96c6": 747, "\u7528\u6237\u53ef\u4ee5\u53c2\u7167": 765, "\u7528\u6237\u53ef\u4ee5\u53c2\u8003": [743, 763, 764, 766, 768], "\u7528\u6237\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u5185\u7f6e\u6570\u636e\u96c6": 743, "\u7528\u6237\u53ef\u4ee5\u53ea\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4\u6765\u6307\u5b9a\u8fb9\u7c7b\u578b": 755, "\u7528\u6237\u53ef\u4ee5\u5728": [743, 778], "\u7528\u6237\u53ef\u4ee5\u5728\u5b9e\u4f8b\u5316": 764, "\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u6709\u5173\u6570\u636e\u96c6\u7684\u56fe": 740, "\u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b": 776, "\u7528\u6237\u53ef\u4ee5\u5bf9\u8981\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b\u6784\u9020\u4e00\u4e2a\u8d1f\u91c7\u6837\u56fe": 777, "\u7528\u6237\u53ef\u4ee5\u5c06": 746, "\u7528\u6237\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u6cbf\u6240\u6709\u5165\u8fb9\u4f20\u9012\u6d88\u606f\u7684\u8fb9\u754c": 763, "\u7528\u6237\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u6807\u7b7e\u4f7f\u7528": 774, "\u7528\u6237\u53ef\u4ee5\u5c06\u6743\u91cd\u50a8\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 752, "\u7528\u6237\u53ef\u4ee5\u5c06\u7528\u4e8e\u5757\u7684\u8bed\u53e5\u548c\u539f\u5148\u7528\u4e8e\u6574\u56fe\u7684\u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83": 767, "\u7528\u6237\u53ef\u4ee5\u5c06\u91c7\u6837\u5668\u5bf9\u8c61\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668\u5bf9\u8c61": 763, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u62d3\u5c55\u4e3a\u5bf9\u591a\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 777, "\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u5173\u7cfb\u5207\u7247\u7684\u65b9\u5f0f\u521b\u5efa\u8fd9\u4e2a\u56fe": 774, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u4f7f\u7528": 743, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6a21\u578b\u7684\u8bad\u7ec3": 778, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199\u9884\u6d4b\u6a21\u5757": 774, "\u7528\u6237\u53ef\u4ee5\u6309\u8282\u70b9\u7c7b\u578b\u6765\u83b7\u53d6\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 763, "\u7528\u6237\u53ef\u4ee5\u67e5\u9605": 768, "\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027": 743, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u590d\u7528\u5b83": 764, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 778, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528": 764, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528graphdataload": 776, "\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u7f16\u5199\u5728\u6240\u6709\u8fb9\u4e0a\u8fdb\u884c\u9884\u6d4b\u7684\u5168\u56fe\u8bad\u7ec3\u4ee3\u7801": 774, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": [763, 776], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539nn\u6a21\u5757\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c\u6765\u7ed9nn\u6a21\u5757\u589e\u52a0\u8fb9\u6743\u91cd\u652f\u6301": 775, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u4f20\u5165\u4e24\u4e2agpu\u5f20\u91cf\u6765\u521b\u5efagpu\u4e0a\u7684": 753, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u8981\u4fdd\u7559\u7684\u5173\u7cfb\u6765\u521b\u5efa\u5f02\u6784\u56fe\u7684\u5b50\u56fe": 755, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u8fb9": 766, "\u7528\u6237\u53ef\u4ee5\u904d\u5386\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u83b7\u5f97\u7531\u5c0f\u6279\u6b21\u8fb9\u7ec4\u6210\u7684\u5b50\u56fe": 764, "\u7528\u6237\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528": 777, "\u7528\u6237\u53ef\u4ee5\u91cd\u7528\u5728\u8fb9\u5206\u7c7b": 766, "\u7528\u6237\u53ef\u5c06\u4e00\u7cfb\u5217\u7684\u56fe\u5efa\u7acb\u6210\u4e00\u4e2a\u56fe\u6279\u6b21": 776, "\u7528\u6237\u53ef\u5c06\u5176\u4f20\u7ed9\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a": 776, "\u7528\u6237\u53ef\u5c06\u591a\u5f20\u56fe\u7ec4\u6210\u4e00\u4e2a\u6279\u6b21": 776, "\u7528\u6237\u53ef\u7528\u5982\u4e0b\u4ee3\u7801\u83b7\u53d6": 778, "\u7528\u6237\u53ef\u80fd\u4f1a\u9700\u8981\u6807\u51c6\u5316\u539f\u59cb\u8fb9\u6743\u91cd": 775, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u6cbf\u7740\u6240\u6709\u8fb9\u7c7b\u578b\u4ece\u90bb\u5c45\u90a3\u91cc\u6536\u96c6\u6d88\u606f": 778, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u9884\u6d4b\u7ed9\u5b9a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9": 777, "\u7528\u6237\u53ef\u80fd\u9700\u8981\u5c06\u4e00\u4e9b\u5173\u7cfb\u5408\u5e76": 755, "\u7528\u6237\u5728\u8bad\u7ec3\u8fb9\u5206\u7c7b\u6a21\u578b\u65f6": 764, "\u7528\u6237\u5728\u8c03\u7528dglgraph": 755, "\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 758, "\u7528\u6237\u5c06\u9700\u8981\u4e00\u53f0\u5927\u5185\u5b58\u7684\u673a\u5668\u6765\u5bf9\u56fe\u8fdb\u884c\u5212\u5206": 747, "\u7528\u6237\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b": 776, "\u7528\u6237\u5e0c\u671b\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e94\u7528\u4e0d\u540c\u7684\u64cd\u4f5c": 755, "\u7528\u6237\u5fc5\u987b\u5b9e\u73b0": 743, "\u7528\u6237\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5757": 768, "\u7528\u6237\u6307\u5357\u5c06\u4ee5\u5185\u7f6e\u6570\u636e\u96c6\u4e3a\u4f8b": 743, "\u7528\u6237\u6700\u597d\u4f7f\u7528": 754, "\u7528\u6237\u6709\u65f6\u4f1a\u5e0c\u671b\u4ece\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u56fe\u4e2d\u5220\u53bb\u90e8\u5206\u8fb9\u53ca\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9": 764, "\u7528\u6237\u7684\u4efb\u52a1\u662f\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 774, "\u7528\u6237\u81ea\u5df1\u7684\u8bad\u7ec3\u4ee3\u7801": 743, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5411\u7c7b\u6dfb\u52a0\u5c5e\u6027\u4ee5\u6307\u793a\u4e00\u4e9b\u6709\u7528\u7684\u6570\u636e\u96c6\u4fe1\u606f": 743, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5c06\u65b0\u7684": 746, "\u7528\u6237\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u552f\u4e00\u7684\u5f20\u91cf\u540d\u79f0": 746, "\u7528\u6237\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 766, "\u7528\u6237\u8fd8\u5fc5\u987b\u5c06gnn\u7684\u5c42\u6570\u4f20\u9012\u7ed9\u7236\u7c7b": 763, "\u7528\u6237\u8fd8\u662f\u5728\u8282\u70b9\u6216\u8fb9\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 776, "\u7528\u6237\u8fd8\u9700\u8981\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5206\u5272\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 746, "\u7528\u6237\u9664\u4e86\u9700\u8981\u4f7f\u7528\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 776, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u6307\u5b9a\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf": 748, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u6761\u8fb9\u90fd\u521b\u5efa\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9": 754, "\u7528\u6237\u9700\u8981\u4ece\u6a21\u578b\u4e2d\u6536\u96c6\u6240\u6709\u5206\u5e03\u5f0f\u5d4c\u5165": 746, "\u7528\u6237\u9700\u8981\u5206\u5272\u8bad\u7ec3\u96c6": 746, "\u7528\u6237\u9700\u8981\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 766, "\u7528\u6237\u9700\u8981\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u53e6\u5916\u4e00\u4e2a\u56fe": 777, "\u7528\u6237\u9700\u8981\u63d0\u4f9b\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 746, "\u7528\u6237\u9700\u8981\u660e\u786e\u5730\u6307\u660e\u8282\u70b9\u7684\u6570\u91cf": 754, "\u7528\u6237\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8fb9\u5206\u7c7b": 774, "\u7528\u6237\u9996\u5148\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u7684\u7ef4\u5ea6": 770, "\u7528\u6765\u6307\u5b9a\u4e0d\u540c\u8bad\u7ec3\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u6240\u4f7f\u7528\u7684\u7aef\u53e3": 748, "\u7528\u8be5\u6a21\u5757\u8fdb\u884c\u79bb\u7ebf\u63a8\u65ad": 765, "\u7528\u8fb9\u4e24\u7aef\u8282\u70b9\u8868\u793a\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u6253\u5206": 764, "\u7531gpu\u5f20\u91cf\u6784\u9020\u7684\u56fe\u4e5f\u5728gpu\u4e0a": 753, "\u7531\u4e8etensor\u7c7b\u5185\u90e8\u4f7f\u7528c\u6765\u5b58\u50a8": 754, "\u7531\u4e8e\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\u5c06\u539f\u6765\u7684\u8fb9\u7c7b\u578b\u5b58\u6210\u8fb9\u7279\u5f81": 774, "\u7531\u4e8e\u6574\u56fe\u5206\u7c7b\u5904\u7406\u7684\u662f\u5f88\u591a\u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe": 776, "\u7531\u4e8e\u66f4\u65b0\u51fd\u6570\u901a\u5e38\u53ef\u4ee5\u7528\u7eaf\u5f20\u91cf\u64cd\u4f5c\u5b9e\u73b0": 758, "\u7531\u4e8e\u8fd9\u91cc\u7684\u5173\u7cfb\u5b9a\u4e49\u6d88\u9664\u4e86\u8fb9\u7c7b\u578b\u7684\u6b67\u4e49": 755, "\u7531\u591a\u5c42gnn\u8ba1\u7b97\u5f97\u51fa": 777, "\u7684": [754, 762], "\u7684api\u4ee5\u65b9\u4fbf\u6570\u636e\u8bbf\u95ee": 746, "\u7684api\u7528\u4e8e\u6b64\u4f18\u5316": 743, "\u7684nn\u6a21\u5757": 772, "\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u6240\u4e0d\u540c": 764, "\u7684\u5177\u4f53\u5b9a\u4e49": 778, "\u7684\u5178\u578b\u793a\u4f8b\u5982\u4e0b": 748, "\u7684\u5185\u5b58\u7a7a\u95f4": 762, "\u7684\u51fd\u6570\u662f": 771, "\u7684\u5212\u5206": 747, "\u7684\u5212\u5206\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba1\u7b97\u8d1f\u8f7d\u4e0d\u5e73\u8861": 747, "\u7684\u521b\u5efa\u662f\u4e00\u4e2a\u540c\u6b65\u64cd\u4f5c": 746, "\u7684\u521b\u5efa\u9700\u8981": 746, "\u7684\u524d\u9a71\u8282\u70b9": 763, "\u7684\u539f\u5219": 752, "\u7684\u53c2\u6570": 760, "\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6d88\u606f\u51fd\u6570": 758, "\u7684\u56fe\u540d\u79f0\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570": 747, "\u7684\u5b50\u7c7b": [739, 743], "\u7684\u5b9e\u4f8b": 758, "\u7684\u5b9e\u73b0\u4e5f\u53d1\u751f\u4e86\u53d8\u5316": 743, "\u7684\u5b9e\u73b0\u4f1a\u5305\u542b\u4e24\u4e2a\u5b57\u5178": 768, "\u7684\u5b9e\u73b0\u5982\u4e0b": 763, "\u7684\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206": 759, "\u7684\u5f02\u6784\u56fe": 755, "\u7684\u5f20\u91cf": 775, "\u7684\u5f97\u5206\u6765\u8bad\u7ec3\u94fe\u8def\u6a21\u578b": 766, "\u7684\u6210\u5458\u5c5e\u6027": 758, "\u7684\u6240\u6709\u5165\u8fb9": 763, "\u7684\u6559\u7a0b": 751, "\u7684\u6570\u636e": 773, "\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c": 745, "\u7684\u6d88\u606f": 763, "\u7684\u7236\u7c7b": 763, "\u7684\u7279\u5f81": [749, 752, 776, 778], "\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u4e14\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5bfc\u5165\u56fe\u6570\u636e": 740, "\u7684\u793a\u4f8b": 772, "\u7684\u7b80\u5316\u7248": 767, "\u7684\u805a\u5408\u7ed3\u679c\u8fdb\u884c\u64cd\u4f5c": 758, "\u7684\u8282\u70b9": 750, "\u7684\u8282\u70b9\u5d4c\u5165": 778, "\u7684\u8282\u70b9\u7279\u5f81": 763, "\u7684\u8282\u70b9\u8868\u793a": 777, "\u7684\u8282\u70b9\u8868\u793a\u6a21\u5757\u79f0\u4f5c": 774, "\u7684\u8868\u5f81": 776, "\u7684\u8868\u793a\u6240\u9700\u7684\u8282\u70b9": 768, "\u7684\u8ba1\u7b97": 776, "\u7684\u8bba\u6587\u4e2d": 763, "\u7684\u8be6\u7ec6\u4fe1\u606f": 743, "\u7684\u8bed\u6cd5\u4e0e\u5e38\u89c4\u56fe\u4e2d\u7684": 763, "\u7684\u8bed\u6cd5\u5c06\u53ea\u5305\u542b\u8be5\u5173\u7cfb\u7684\u5b50\u56fe": 772, "\u7684\u8f93\u51fa": 763, "\u7684\u8f93\u51fa\u5f20\u91cf\u7684\u5217\u8868": 772, "\u7684\u8fb9": [754, 777], "\u7684\u8fb9\u4e92\u76f8\u8fde\u63a5": 750, "\u7684\u8fb9\u603b\u662f\u6709\u5411\u7684": 751, "\u7684\u8fb9\u7684\u6807\u7b7e": 774, "\u7684\u8fb9\u7c7b\u578b": 774, "\u7684\u90e8\u5206": 743, "\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u5411\u540e\u8fed\u4ee3": 763, "\u76ee\u524d": 746, "\u76ee\u5f55\u4e2d": 743, "\u76ee\u6807": [758, 759], "\u76ee\u6807\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 758, "\u76ee\u6807\u8282\u70b9\u6570\u7ec4\u5bf9\u4e3a\u503c\u7684\u5b57\u5178": 766, "\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 755, "\u76f4\u5230\u5230\u8fbe\u8f93\u5165\u5c42": 762, "\u76f4\u5230\u8bad\u7ec3\u4efb\u52a1\u7ed3\u675f": 746, "\u76f8\u4e58\u751f\u6210\u6d88\u606f": 758, "\u76f8\u5173api": [751, 752, 754, 755], "\u76f8\u5173\u6982\u8ff0\u8bf7\u9605\u8bfbapi\u53c2\u8003\u624b\u518c": 751, "\u76f8\u5173\u7684\u6838\u5fc3\u6982\u5ff5": 749, "\u76f8\u5173\u7684\u7279\u5f81\u4e5f\u4f1a\u88ab\u62f7\u8d1d": 755, "\u76f8\u540c": [763, 772], "\u76f8\u540c\u540d\u79f0\u7684\u7279\u5f81\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b": 752, "\u76f8\u5bf9\u5730": 750, "\u76f8\u6bd4\u4e4b\u4e0b": 765, "\u76f8\u6bd4\u540c\u6784\u56fe": 755, "\u77e5\u9053": 764, "\u786e\u5b9a": 771, "\u793a\u4f8b\u5982\u4e0b\u6240\u793a": 766, "\u793e\u4ea4\u7f51\u7edc\u7684\u56fe\u7531\u8868\u793a\u540c\u4e00\u5b9e\u4f53\u7c7b\u578b\u7684\u4eba\u53ca\u5176\u76f8\u4e92\u4e4b\u95f4\u7684\u793e\u4ea4\u5173\u7cfb\u7ec4\u6210": 750, "\u79cd\u5b50\u8282\u70b9": 763, "\u79f0\u4e3a": 740, "\u79f0\u4e3a\u70b9id": 754, "\u79f0\u4e3a\u8fb9id": 754, "\u7ae0\u8282": 756, "\u7ae0\u8282\u4e2d\u4e5f\u4f1a\u63d0\u5230": 763, "\u7b2c1\u7ae0": 756, "\u7b2c2\u4e2a\u5143\u7d20\u4e3a\u76ee\u6807\u8282\u70b9\u7279\u5f81": 771, "\u7b2c2\u7ae0": [756, 773, 774, 778], "\u7b2c3\u7ae0": [756, 767, 773, 778], "\u7b2c4\u7ae0": [756, 773, 776, 778], "\u7b2c5\u7ae0": [756, 762], "\u7b2c6\u7ae0": [756, 761, 771, 773], "\u7b2c7\u7ae0": 756, "\u7b2c\u4e00\u90e8\u5206\u4e0e": 764, "\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8f93\u51fa\u8282\u70b9": 763, "\u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u8fb9\u4e0a\u7684\u9884\u6d4b\u503c": 774, "\u7b2c\u4e8c\u90e8\u5206\u7684\u8f93\u5165\u901a\u5e38\u662f\u524d\u4e00\u90e8\u5206\u7684\u8f93\u51fa": 764, "\u7b49": [758, 770], "\u7b49conv\u6a21\u5757\u4e2d": 771, "\u7b49\u4ef7\u4e8e\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u63a5\u6536\u5230\u6d88\u606f\u6c42\u548c\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 758, "\u7ba1\u7406\u5728\u591a\u4e2a\u8ba1\u7b97\u673a\u4e2d\u88ab\u5212\u5206\u548c\u5b58\u50a8\u7684\u5bc6\u96c6\u5f20\u91cf": 746, "\u7c7b": 741, "\u7c7b\u4e2d\u4e0b\u8f7d\u4e00\u4e2a": 741, "\u7c7b\u4e2d\u770b\u5230\u6a21\u578b\u5b9e\u73b0\u7684\u7ec6\u8282": 778, "\u7c7b\u4f3c": 745, "\u7c7b\u548c": 768, "\u7c7b\u578b\u7684\u8282\u70b9\u4e5f\u4f1a\u88ab\u4fdd\u7559": 755, "\u7c7b\u578b\u7684\u8282\u70b9\u7684": 755, "\u7c7b\u578b\u7684\u8fb9\u7684": 755, "\u7c7b\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u6570\u636e\u5904\u7406\u7ba1\u9053": 739, "\u7c7b\u6709\u62bd\u8c61\u51fd\u6570": 740, "\u7c7b\u8fdb\u884c\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 768, "\u7ea2\u8272\u70b9": 763, "\u7ec6\u8282\u5185\u5bb9\u53ef\u4ee5\u5728\u4e0b\u9762\u7684disttensor\u548cdistembedding\u7ae0\u8282\u91cc\u67e5\u770b": 746, "\u7ed3\u5408\u4e86\u8282\u70b9\u8868\u793a\u6a21\u5757\u548c\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u6a21\u578b\u5982\u4e0b\u6240\u793a": 774, "\u7ed3\u5408\u4f7f\u7528": [764, 768], "\u7ed9\u5b9agnn\u5c42": 763, "\u7ed9\u5b9a\u4e00\u5f20\u56fe": 776, "\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 777, "\u7ed9\u5b9a\u8ba1\u7b97\u8282\u70b9\u548c\u8fb9\u4e0a\u8868\u793a\u7684\u6a21\u578b\u540e": 774, "\u7ed9\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u7f16\u53f7": 754, "\u7ef4\u5ea6\u901a\u5e38\u5305\u62ec\u8f93\u5165\u7684\u7ef4\u5ea6": 770, "\u7eff\u8272\u548c\u7ea2\u8272\u8282\u70b9": 763, "\u7eff\u8272\u70b9": 763, "\u7eff\u8272\u8282\u70b9": 763, "\u7f13\u5b58\u6982\u7387\u5206\u5e03": 766, "\u7f16\u5199dgl": [756, 769], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [756, 757, 771], "\u7f16\u7801\u5e02\u573a\u7684\u56fe\u53ef\u4ee5\u6709\u8868\u793a": 750, "\u8003\u8651\u4ee5\u4e0b\u57fa\u4e8edgl\u7684\u6d88\u606f\u4f20\u9012\u793a\u4f8b": 775, "\u8003\u8651\u4ee5\u4e0b\u8fb9\u754c": 763, "\u8003\u8651\u5230\u67d0\u4e9b\u56fe\u8fb9\u7684\u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u8282\u70b9\u7684\u6570\u91cf": 759, "\u8003\u8651\u5728\u4e00\u4e2a\u6709": 762, "\u800c": 751, "\u800c\u4e0d\u662f": 764, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7279\u5f81\u5f20\u91cf": 767, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5927\u56fe": 776, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u6807\u7b7e": 768, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81": 768, "\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u5927\u56fe\u6570\u636e": 776, "\u800c\u4e0d\u662f\u5e95\u5c42\u6846\u67b6\u91cc\u7684\u5f20\u91cf": 746, "\u800c\u4e0d\u662f\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u5f20\u91cf\u7684\u5b57\u5178": [764, 766], "\u800c\u4e14\u4e24\u79cd\u8282\u70b9\u5177\u6709\u4e0d\u540c\u7684\u7279\u5f81": 755, "\u800c\u4ee5\u4e0b\u7528\u6237\u5b9a\u4e49\u6d88\u606f\u51fd\u6570\u4e0e\u6b64\u5185\u7f6e\u51fd\u6570\u7b49\u4ef7": 758, "\u800c\u540e\u8005\u5219\u6807\u8bc6dgl\u670d\u52a1\u5668\u4e2d\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 746, "\u800c\u5728cpu\u4e0a\u8fdb\u884c\u5219\u8ba1\u7b97\u901f\u5ea6\u5f88\u6162": 765, "\u800c\u65e0\u9700\u8bbe\u8ba1\u590d\u6742\u7684\u56fe\u91c7\u6837\u7b97\u6cd5": 776, "\u800c\u662f\u5728": 758, "\u800c\u7ebf\u6027\u5c42\u8f93\u51fa\u7ef4\u6570\u8f83\u4f4e": 759, "\u800c\u975e4\u6761": 751, "\u805a\u5408\u51fd\u6570": [757, 758], "\u805a\u5408\u51fd\u6570\u6765\u5b9e\u73b0": 771, "\u805a\u5408\u51fd\u6570\u901a\u5e38\u6709\u4e24\u4e2a\u53c2\u6570": 758, "\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u4e0a\u7684\u7ed3\u679c": 772, "\u805a\u5408\u7c7b\u578b": 770, "\u805a\u5408\u7c7b\u578b\u51b3\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u4e0d\u540c\u8fb9\u4e0a\u7684\u4fe1\u606f": 770, "\u80e1\u9a8f": 756, "\u8282\u70b9": [749, 758], "\u8282\u70b92": 763, "\u8282\u70b93": 763, "\u8282\u70b93\u662f\u4e00\u4e2a\u5b64\u7acb\u8282\u70b9": 763, "\u8282\u70b98": 763, "\u8282\u70b9\u5206\u7c7b": [743, 756, 773], "\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b": 743, "\u8282\u70b9\u5206\u7c7b\u7684rgcn\u6a21\u578b": 774, "\u8282\u70b9\u5206\u7c7b\u901a\u5e38\u5728\u5355\u4e2a\u56fe\u4e0a\u8fdb\u884c": 743, "\u8282\u70b9\u548c": [759, 774], "\u8282\u70b9\u548c\u8fb9": [749, 756], "\u8282\u70b9\u548c\u8fb9id\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4": 754, "\u8282\u70b9\u548c\u8fb9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u6784\u5efa\u7684": 754, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [749, 756], "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0": 752, "\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684": 750, "\u8282\u70b9\u56de\u5f52\u4efb\u52a1\u4e5f\u7c7b\u4f3c": 778, "\u8282\u70b9\u5f20\u91cf": 754, "\u8282\u70b9\u6570\u636e\u540d\u79f0\u548c\u5f20\u91cf\u540d\u79f0\u4e0d\u5fc5\u76f8\u540c": 746, "\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 746, "\u8282\u70b9\u6807\u7b7e\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u5668\u4e2d": 768, "\u8282\u70b9\u7279\u5f81": 759, "\u8282\u70b9\u7279\u5f81\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u4e2d": 768, "\u8282\u70b9\u7279\u5f81\u548c\u6807\u7b7e\u5b58\u50a8\u5728\u5176\u56fe\u4e0a": 778, "\u8282\u70b9\u7279\u5f81\u548c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u5b58\u50a8\u5728": 743, "\u8282\u70b9\u7279\u5f81\u7ef4\u6570\u8f83\u9ad8": 759, "\u8282\u70b9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u7684": 755, "\u8282\u70b9\u7684\u6807\u7b7e": 743, "\u8282\u70b9\u7684\u7279\u5f81": 743, "\u8282\u70b9\u7684\u7c7b\u522b": 778, "\u8282\u70b9\u7684\u8fb9": 774, "\u8282\u70b9\u7c7b\u578b": 743, "\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7ed3\u679c": 768, "\u8282\u70b9\u8868\u793a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6": 777, "\u82e5\u7528\u56fe\u5bf9twitter\u7528\u6237\u7684\u5173\u6ce8\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21": 750, "\u82e5\u7528\u56fe\u5bf9\u793e\u4ea4\u7f51\u7edc\u4e2d\u4eba\u4eec\u7684\u53cb\u8c0a\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21": 750, "\u83ab\u4f73\u5e05\u5b50": 756, "\u83b7\u53d6": [755, 763], "\u83b7\u53d6drug\u8282\u70b9\u7684\u6570\u91cf": 755, "\u83b7\u53d6\u5212\u5206\u7684\u63a9\u7801": 743, "\u83b7\u53d6\u5212\u5206\u7684\u6807\u7b7e": 742, "\u83b7\u53d6\u5355\u4e00\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81": 755, "\u83b7\u53d6\u539f\u59cbid": 747, "\u83b7\u53d6\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u91cf": 755, "\u83b7\u53d6\u6807\u7b7e": 743, "\u83b7\u53d6\u7279\u5b9a\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u7684\u7279\u5f81": 755, "\u83b7\u53d6\u79cd": 763, "\u83b7\u53d6\u805a\u5408\u51fd\u6570\u7684\u5185\u90e8\u51fd\u6570": 772, "\u83b7\u53d6\u8282\u70b91\u7684\u7279\u5f81": 752, "\u83b7\u53d6\u8282\u70b9\u7279\u5f81": 743, "\u83b7\u53d6\u8282\u70b9\u7684id": 754, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u8fb9\u7c7b\u578b": 743, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u63a9\u7801": 743, "\u83b7\u53d6\u8fb90\u548c3\u7684\u7279\u5f81": 752, "\u83b7\u53d6\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 764, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9": 754, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9\u548c\u8fb9id": 754, "\u83b7\u5f97": 767, "\u867d\u7136dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u90bb\u5c45\u91c7\u6837\u5668": 763, "\u867d\u7136\u4e0a\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u8fb9\u754c": 763, "\u867d\u7136\u8fd9\u4e24\u4e2a\u6a21\u5757\u90fd\u6bd4\u4e0a\u8ff0\u7684\u793a\u4f8b\u4ee3\u7801\u8981\u590d\u6742": 774, "\u884c\u4f18\u5148": 752, "\u8868\u660e\u4e24\u8282\u70b9\u95f4\u5b58\u5728\u5173\u7cfb": 750, "\u8868\u793a": 758, "\u8868\u793a\u5728\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u5b58\u5728\u4ece": 755, "\u8868\u793a\u5b83\u662f\u4ece\u8282\u70b9": 754, "\u8868\u793a\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u8ba1\u7b97\u7ed3\u679c": 772, "\u88ab\u4e70\u4e0b": 764, "\u88ab\u5173\u6ce8": 764, "\u88ab\u805a\u5408\u7684\u7279\u5f81\u5c06\u4f1a\u4e0e\u8282\u70b9\u7684\u521d\u59cb\u7279\u5f81\u62fc\u63a5\u8d77\u6765": 771, "\u8981\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u91c7\u6837\u5668": 768, "\u8981\u5bf9\u6e90\u8282\u70b9\u7684": 758, "\u8981\u5c06\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u5165": 768, "\u8981\u6267\u884c\u8d1f\u91c7\u6837": 777, "\u8981\u67e5\u627e\u7ed9\u5b9a\u8282\u70b9\u7c7b\u578b\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u6570\u91cf": 763, "\u8981\u805a\u5408\u7684\u7279\u5f81\u5927\u5c0f\u4e3a": 776, "\u8981\u8ba1\u7b97": 763, "\u89c11": 749, "\u8ba1\u7b97": [763, 777], "\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u94fe\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 777, "\u8ba1\u7b97\u5e94\u7528\u4e8e\u7ed9\u5b9a\u7684\u4e00\u5806\u76ee\u6807\u8282\u70b9\u6240\u91c7\u6837\u7684\u5b50\u56fe": 771, "\u8ba1\u7b97\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 766, "\u8ba1\u7b97\u5fc5\u987b\u5728\u8fb9\u4e0a\u4fdd\u5b58\u6d88\u606f": 759, "\u8ba1\u7b97\u635f\u5931\u503c": 778, "\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u63a5\u53d7\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7684\u4e24\u4e2a\u5b57\u5178": 764, "\u8ba1\u7b97\u635f\u5931\u5e76\u53cd\u5411\u4f20\u64ad": 768, "\u8ba1\u7b97\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 764, "\u8ba1\u7b97\u8f93\u51fa": 765, "\u8ba1\u7b97\u8fb9\u5b50\u56fe\u4e2d\u8fb9\u7684\u5f97\u5206": 764, "\u8ba1\u7b97\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u5ea6": 778, "\u8bad\u7ec3": [743, 756, 761, 771, 773, 778], "\u8bad\u7ec3\u4e00\u4e2a\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u6d89\u53ca\u5230\u6bd4\u5bf9\u4e24\u4e2a\u76f8\u8fde\u63a5\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u4e0e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u7684\u5dee\u5f02": 777, "\u8bad\u7ec3\u4e0b\u6e38\u4efb\u52a1\u7684\u5206\u7c7b\u5668": 777, "\u8bad\u7ec3\u540e": 777, "\u8bad\u7ec3\u5668": 745, "\u8bad\u7ec3\u5668\u4f1a\u5bf9\u5c40\u90e8\u5206\u533a\u4e2d\u5e26\u6807\u7b7e\u8282\u70b9\u7684\u5b50\u96c6\u8fdb\u884c\u8ba1\u7b97": 747, "\u8bad\u7ec3\u5668\u8fdb\u7a0b": 745, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [756, 762], "\u8bad\u7ec3\u5faa\u73af\u901a\u8fc7\u6570\u636e\u52a0\u8f7d\u5668\u53bb\u904d\u5386\u6570\u636e": 766, "\u8bad\u7ec3\u6548\u7387\u4f1a\u5f88\u4f4e": 776, "\u8bad\u7ec3\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357\u53ef\u4ee5\u5728": 743, "\u8bad\u7ec3\u6a21\u578b": 768, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u548c\u540c\u6784\u56fe\u65f6\u4e00\u81f4": 777, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u91cc\u4f1a\u91cd\u590d\u6784\u5efa\u8d1f\u91c7\u6837\u56fe\u5e76\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u503c": 777, "\u8bad\u7ec3\u7b97\u6cd5\u6709\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 765, "\u8bad\u7ec3\u811a\u672c": 748, "\u8bad\u7ec3\u8fc7\u7a0b\u5305\u62ec\u904d\u5386dataloader\u548c\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u90e8\u5206": 776, "\u8bad\u7ec3\u90e8\u5206\u548c\u540c\u6784\u56fe\u7684\u8bad\u7ec3\u57fa\u672c\u4e00\u81f4": 774, "\u8bad\u7ec3\u90e8\u5206\u5982\u4e0b\u6240\u793a": 774, "\u8bb0\u4e3a": 750, "\u8bb0\u4f5c": 777, "\u8bb2\u89e3\u4e86\u5982\u4f55\u5bf9\u5c0f\u89c4\u6a21\u7684\u56fe\u6570\u636e\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 773, "\u8bb8\u591a\u573a\u666f\u4e2d\u7684\u56fe\u6570\u636e\u662f\u7531\u591a\u4e2a\u56fe\u7ec4\u6210": 776, "\u8bb8\u591a\u635f\u5931\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807": 777, "\u8bb8\u591a\u77e5\u540dpython\u5e93": 751, "\u8bbe\u7f6e": 755, "\u8bbe\u7f6e\u9009\u9879": 770, "\u8bbf\u95ee\u5176\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 763, "\u8bbf\u95ee\u8be5\u5757\u7684\u8f93\u5165\u8282\u70b9\u7279\u5f81": 763, "\u8be5api\u4f1a\u76f8\u5e94\u5730\u6253\u4e71\u6240\u6709\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 747, "\u8be5api\u652f\u6301\u968f\u673a\u5212\u5206\u548c\u4e00\u4e2a\u57fa\u4e8e": 747, "\u8be5pytorch\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u6279\u7684\u5f62\u5f0f\u8fed\u4ee3\u8bad\u7ec3\u8fb9id\u7684\u6570\u7ec4": 764, "\u8be5\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\u5b9e\u73b0": 767, "\u8be5\u4f8b\u5b50\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u5355\u4e2a\u8282\u70b9": 763, "\u8be5\u4f8b\u5b50\u91cc\u7701\u7565\u4e86\u8bad\u7ec3\u65e9\u505c\u548c\u6a21\u578b\u4fdd\u5b58\u90e8\u5206\u7684\u4ee3\u7801": 774, "\u8be5\u505a\u6cd5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c": 759, "\u8be5\u51fd\u6570\u5047\u5b9a\u539f\u59cb\u6570\u636e\u5df2\u7ecf\u4f4d\u4e8e": 743, "\u8be5\u51fd\u6570\u7684\u7ec6\u8282\u5982\u4e0b\u6240\u793a": 771, "\u8be5\u540d\u79f0\u4ecd\u5b58\u5728\u4e8e\u7fa4\u96c6\u4e2d": 746, "\u8be5\u56fe\u5177\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 755, "\u8be5\u5b50\u56fe\u5305\u62ec\u521d\u59cb\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u548c\u6307\u5b9a\u8282\u70b9\u7684\u5165\u8fb9": 763, "\u8be5\u5f20\u91cf\u7684\u7b2c\u4e00\u7ef4\u5fc5\u987b\u4e0e\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u6570\u91cf\u4e00\u81f4": 752, "\u8be5\u6587\u4ef6\u5305\u542b\u672c\u5730\u8ba1\u7b97\u673a\u4e2d\u5206\u533a\u6570\u636e\u7684\u4fe1\u606f": 748, "\u8be5\u65b9\u6cd5\u80fd\u8282\u7701\u5728\u5927\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u9500\u548c\u8ba1\u7b97\u8d44\u6e90": 762, "\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4e3a\u5b83\u4eec\u751f\u6210\u8fb9\u754c": 763, "\u8be5\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u957f\u5ea6\u6216\u8fde\u63a5\u7684\u5f3a\u5ea6": 750, "\u8be5\u6a21\u578b\u4e0e\u5f02\u6784\u56fe\u4e0a\u8fb9\u5206\u7c7b\u7684\u6a21\u578b\u6709\u4e9b\u4e0d\u540c": 777, "\u8be5\u6a21\u578b\u7684\u8f93\u5165\u5305\u62ec\u4e0a\u8ff0\u4e09\u9879\u4ee5\u53ca\u8f93\u5165\u7684\u7279\u5f81": 766, "\u8be5\u7c7b\u4e3a\u5bfc\u5165": 739, "\u8be5\u811a\u672c\u5305\u542b\u56db\u4e2a\u53c2\u6570": 748, "\u8be5\u811a\u672c\u6709\u4ee5\u4e0b\u5047\u8bbe": 748, "\u8be5\u8fb9\u7c7b\u578b\u662f\u901a\u8fc7\u5408\u5e76\u6240\u6709\u4ece": 774, "\u8be5\u91c7\u6837\u65b9\u6cd5\u6839\u636e\u4e0e\u8282\u70b9\u7684\u5ea6\u7684\u5e42\u6210\u6b63\u6bd4\u7684\u6982\u7387\u5206\u5e03\u5bf9\u8d1f\u6837\u672c\u76ee\u6807\u8282\u70b9\u8fdb\u884c\u91c7\u6837": 766, "\u8be6\u7ec6\u7684\u5b9e\u73b0\u8bf7\u53c2\u8003": 743, "\u8be6\u7ec6\u89e3\u91ca": 747, "\u8bf4\u660e\u805a\u5408\u662f\u9010\u7c7b\u8fdb\u884c\u7684": 760, "\u8bf7\u4f7f\u7528": 741, "\u8bf7\u53c2\u8003": [743, 764, 778], "\u8bf7\u53c2\u8003dgl\u7684\u5185\u7f6e\u6570\u636e\u96c6": 743, "\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357\u7684": 773, "\u8bf7\u53c2\u89c1": [743, 747, 758], "\u8bf7\u53c2\u89c1\u542f\u52a8\u811a\u672c\u90e8\u5206": 746, "\u8bf7\u53c2\u9605": 740, "\u8bf7\u53c2\u9605\u4e0b\u6587\u91cc\u5206\u5e03\u5f0f\u56fe\u91c7\u6837\u90e8\u5206": 746, "\u8bf7\u53c2\u9605\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u7ae0\u8282": 746, "\u8bf7\u6ce8\u610f": [740, 743, 744, 745, 763, 768, 771, 778], "\u8bf7\u786e\u4fdd\u4f7f\u7528\u4e0e\u539f\u59cb\u6587\u4ef6\u540d\u76f8\u540c\u7684\u540e\u7f00": 741, "\u8bf7\u786e\u4fdd\u5b83\u88ab\u5b58\u653e\u5728\u76ee\u5f55": 741, "\u8bf8\u5982\u91c7\u6837": 740, "\u8bfb\u51fa": 776, "\u8bfb\u51fa\u51fd\u6570\u4f1a\u5206\u522b\u4f5c\u7528\u5728\u56fe\u6279\u6b21\u4e2d\u7684\u6bcf\u5f20\u56fe\u4e0a": 776, "\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528networkx\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u89e3\u6790": 751, "\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003": [768, 778], "\u8bfb\u8005\u53ef\u4ee5\u5728api\u6587\u6863\u4e2d\u627e\u5230": 772, "\u8bfb\u8005\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53c2\u8003": 774, "\u8bfb\u8005\u53ef\u53c2\u8003": [750, 754], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": 765, "\u8c03\u7528\u540e": 758, "\u8c03\u7528\u6b64api": 746, "\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u635f\u5931": 777, "\u8d1f\u6837\u672c": 766, "\u8d1f\u8d23\u4f7f\u7528": 763, "\u8d1f\u8d23\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684": 748, "\u8d1f\u91c7\u6837": 777, "\u8d2d\u4e70": 764, "\u8d4b\u503c": 774, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [756, 762], "\u8df3\u8fc7\u4e00\u4e9b\u5904\u7406\u7684\u4ee3\u7801": 743, "\u8df3\u8fc7\u6570\u636e\u5904\u7406": 743, "\u8f6c\u6362\u6210int32": 754, "\u8f6c\u6362\u6210int64": 754, "\u8f7d\u5165ogb\u7684graph": 742, "\u8f7d\u5165ogb\u7684link": 742, "\u8f7d\u5165ogb\u7684nod": 742, "\u8f7d\u5165\u6570\u636e\u96c6": 742, "\u8f83\u5927\u65f6": 762, "\u8f93\u5165": 772, "\u8f93\u5165\u4ecd\u7136\u662fdgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868\u548c\u8f93\u5165\u7279\u5f81": 764, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81": 778, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81\u5b57\u5178": 778, "\u8f93\u5165\u7279\u5f81\u5c06\u88ab\u7ec4\u7ec7\u4e3a\u5143\u7ec4": 772, "\u8f93\u5165\u7684user\u548cgame\u8282\u70b9": 763, "\u8f93\u5165\u7ef4\u5ea6\u53ef\u88ab\u5206\u4e3a\u6e90\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6": 770, "\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u5c06\u540c\u65f6\u5305\u542b\u8fd9\u4e9b\u5b64\u7acb\u8282\u70b9": 763, "\u8f93\u5165\u8fd8\u53ef\u4ee5\u5305\u62ec\u8fb9\u81ea\u8eab\u7684\u7279\u5f81": 774, "\u8f93\u51fa\u7684user\u548cgame\u8282\u70b9": 763, "\u8f93\u51fa\u7684\u7ef4\u5ea6\u548c\u9690\u5c42\u7684\u7ef4\u5ea6": 770, "\u8f93\u51fa\u76ee\u5f55\u91cc\u59cb\u7ec8\u5305\u542b\u4e00\u4e2a\u540d\u4e3axxx": 747, "\u8f93\u51fa\u8282\u70b9": 763, "\u8f93\u51fa\u8282\u70b9\u4e5f\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 763, "\u8f93\u51fa\u8282\u70b9\u53ef\u4ee5\u6bd4\u4ee5\u4e0a\u8282\u70b9\u5305\u542b\u66f4\u591a\u8282\u70b9": 763, "\u8f93\u51fa\u8282\u70b9\u7684id\u4f4d\u4e8e\u5176\u5b83\u8282\u70b9\u4e4b\u524d": 763, "\u8fb9": [743, 747, 749, 750, 752, 754, 757, 758], "\u8fb9\u4e0a\u8ba1\u7b97": 757, "\u8fb9\u5206\u7c7b": [756, 764, 773, 777, 778], "\u8fb9\u5206\u7c7b\u4e2d\u76f8\u540c\u7684\u90bb\u5c45\u91c7\u6837\u5668": 766, "\u8fb9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u7684\u8bad\u7ec3": 773, "\u8fb9\u5206\u7c7b\u6a21\u578b\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210": 764, "\u8fb9\u53ca\u5176\u7279\u5f81": 751, "\u8fb9\u5b50\u56fe\u4ee5\u53ca\u8f93\u5165\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad": 764, "\u8fb9\u6743\u91cd\u53ef\u4ee5\u662f\u8fde\u63a5\u5f3a\u5ea6\u6216\u8005\u4fe1\u5fc3\u6307\u6570": 775, "\u8fb9\u6743\u91cd\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a": 775, "\u8fb9\u7279\u5f81": [745, 746], "\u8fb9\u7279\u5f81\u548c\u56fe\u91c7\u6837": 746, "\u8fb9\u754c\u5b50\u56fe": 763, "\u8fb9\u7684id\u4f4d\u4e8e\u90bb\u8fd1\u533a\u95f4\u5185": 743, "\u8fb9\u7684\u7279\u5f81\u6570\u636e": 773, "\u8fb9\u7684\u90bb\u5c45\u7684\u5c40\u90e8\u6027": 743, "\u8fb9\u7c7b\u578b": [743, 755], "\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u79f0\u4f5c": 774, "\u8fb9\u7c7b\u578b\u9884\u6d4b\u7684\u7b2c\u4e00\u6b65\u4ecd\u7136\u662f\u8ba1\u7b97\u8282\u70b9\u8868\u793a": 774, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": [745, 756], "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u56fe\u4f5c\u4e3a\u8fb9\u754c": 763, "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u8fb9\u754c": 763, "\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178": 763, "\u8fd4\u56de\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\u7684\u5143\u7ec4": 743, "\u8fd4\u56de\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u7279\u5f81\u5b57\u5178": 760, "\u8fd4\u56de\u7684\u662f": 746, "\u8fd8\u5141\u8bb8\u901a\u8fc7\u6307\u5b9a": 747, "\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u4e0b\u6e38\u4efb\u52a1\u83b7\u53d6\u9690\u85cf\u8282\u70b9\u8868\u793a": 778, "\u8fd8\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\u8de8\u7c7b\u578b\u6574\u5408\u51fd\u6570": 760, "\u8fd8\u652f\u6301\u751f\u6210\u7528\u4e8e\u94fe\u63a5\u9884\u6d4b\u7684\u8d1f\u6837\u672c": 766, "\u8fd8\u662f": 774, "\u8fd8\u80fd\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528": 754, "\u8fd8\u9700\u8981\u5728\u8bfb\u51fa\u51fd\u6570\u4e2d\u805a\u5408\u4e0d\u540c\u7c7b\u522b\u7684\u8282\u70b9": 776, "\u8fd8\u9700\u8981\u5c06\u5176\u4e0e": 768, "\u8fd92\u4e2a\u5b57\u5178\u4e0e": 772, "\u8fd9\u4e00\u793a\u4f8b\u6765\u4e86\u89e3\u5982\u4f55\u9884\u6d4b\u5f02\u6784\u56fe\u4e2d\u7684\u8fb9\u7c7b\u578b": 774, "\u8fd9\u4e00\u7ae0\u4e2d\u63d0\u5230\u7684\u56fe\u5377\u79ef\u7f51\u7edc\u83b7\u5f97": 774, "\u8fd9\u4e0e\u5728": 778, "\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u5e03\u5c14\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165": 746, "\u8fd9\u4e2a": 773, "\u8fd9\u4e2aapi\u4f1a\u4e0edgl\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u5e76\u521b\u5efa\u91c7\u6837\u5668\u8fdb\u7a0b": 746, "\u8fd9\u4e2aapi\u5c06\u8fd0\u884c\u670d\u52a1\u5668\u4ee3\u7801": 746, "\u8fd9\u4e2a\u4f8b\u5b50\u662f\u8bc4\u5206\u9884\u6d4b\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 774, "\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u628a\u539f\u56fe\u8f6c\u6362\u6210\u4e00\u4e2a\u5305\u542b\u53cd\u5411\u8fb9\u7684\u56fe": 754, "\u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u53d8\u91cf\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u548c\u5176\u4ed6\u8f93\u5165\u7279\u5f81": 775, "\u8fd9\u4e2a\u5b57\u5178\u7684\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u91cc": 760, "\u8fd9\u4e2a\u5b57\u5178\u7684\u952e\u4e3a\u5173\u7cfb\u540d": 772, "\u8fd9\u4e2a\u63a5\u53e3\u5c06\u66f4\u65b0\u6240\u6709\u7684\u8fb9": 758, "\u8fd9\u4e2a\u6570\u636e\u52a0\u8f7d\u5668\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668": 763, "\u8fd9\u4e2a\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe": 743, "\u8fd9\u4e2a\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 743, "\u8fd9\u4e2a\u6574\u5408\u65b9\u5f0f\u53ef\u4ee5\u662f": 760, "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f02\u6784\u56fe": 774, "\u8fd9\u4e2a\u6a21\u578b\u4e0d\u4ec5\u53ef\u4ee5\u505a\u8282\u70b9\u5206\u7c7b": 778, "\u8fd9\u4e2a\u6a21\u578b\u5177\u6709\u53ef\u8c03\u8282\u7684\u5c42\u6570": 778, "\u8fd9\u4e2a\u8fc7\u7a0b": 743, "\u8fd9\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u4f1a\u6784\u5efa\u8ba1\u7b97\u7684\u4f9d\u8d56\u5173\u7cfb\u56fe": 762, "\u8fd9\u4e3a\u4ece\u6574\u4f53\u4e0a\u8fdb\u884c\u7cfb\u7edf\u4f18\u5316\u63d0\u4f9b\u4e86\u7a7a\u95f4": 758, "\u8fd9\u4e48\u505a\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4": 740, "\u8fd9\u4e9budf\u5fc5\u987b\u5728": 746, "\u8fd9\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u72ec\u7acb\u7684id\u7a7a\u95f4\u548c\u7279\u5f81": 755, "\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32": 758, "\u8fd9\u4e9b\u56fe\u8868\u793a\u6bcf\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56": 768, "\u8fd9\u4e9b\u5c5e\u6027\u65e8\u5728\u523b\u753b\u6bcf\u4e00\u79cd\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 760, "\u8fd9\u4e9b\u5e03\u5c14\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf": 746, "\u8fd9\u4e9b\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u548c\u6d88\u606f\u4f20\u9012\u4e2d\u7684\u503c\u65e0\u6548": 771, "\u8fd9\u4e9b\u670d\u52a1\u5668\u4e00\u8d77\u5de5\u4f5c\u4ee5\u5c06\u56fe\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 745, "\u8fd9\u4e9b\u6784\u5efa\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u91cd\u89c6\u6027\u80fd\u7684\u573a\u666f": 751, "\u8fd9\u4e9b\u6a21\u5757\u662f\u7eafpytorch": 770, "\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u662f\u6807\u91cf": 752, "\u8fd9\u4e9b\u7c7b\u4f1a\u751f\u6210\u9700\u8ba1\u7b97\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u8ba1\u7b97\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u56fe": 768, "\u8fd9\u4e9b\u8282\u70b9\u4e0e\u7528\u6237\u5e0c\u671b\u8ba1\u7b97\u6700\u7ec8\u8868\u793a\u7684\u8282\u70b9\u76f8\u540c": 768, "\u8fd9\u4e9b\u8282\u70b9\u662f\u8ba1\u7b97\u8282\u70b9\u6700\u7ec8\u8868\u793a\u6240\u9700\u7684\u6240\u6709\u5fc5\u9700\u7684\u8282\u70b9": 768, "\u8fd9\u4ec5\u662f\u4e2a\u4f8b\u5b50": 776, "\u8fd9\u4f1a\u5c06\u56fe\u7ed3\u6784\u548c\u7279\u5f81\u6570\u636e\u90fd\u62f7\u8d1d\u5230\u6307\u5b9a\u7684\u8bbe\u5907": 753, "\u8fd9\u4f1a\u975e\u5e38\u6d88\u8017\u5185\u5b58": 759, "\u8fd9\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4": 747, "\u8fd9\u5305\u62ec\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 745, "\u8fd9\u53d6\u51b3\u4e8e\u56fe\u4e2d\u8fb9\u7684\u65b9\u5411\u6027": 750, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u574f": 746, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u6027\u80fd\u4e0d\u4f73": 771, "\u8fd9\u53ef\u80fd\u5e26\u6765\u975e\u6700\u4f18\u7684\u914d\u7f6e": 747, "\u8fd9\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528": 755, "\u8fd9\u5bf9\u4e8e\u540c\u6b65sgd\u975e\u5e38\u91cd\u8981": 746, "\u8fd9\u5c31\u5e26\u6765\u4e86\u5177\u6709\u4e0d\u540c\u7279\u5f81\u7684\u591a\u6761\u8fb9": 750, "\u8fd9\u5e73\u8861\u4e86\u4e0d\u540c\u7c7b\u578b\u8282\u70b9\u7684\u8fde\u8fb9\u6570\u91cf": 747, "\u8fd9\u5f88\u5bb9\u6613\u8d85\u8fc7\u4e00\u5757gpu\u7684\u663e\u5b58\u9650\u5236": 762, "\u8fd9\u662f\u4e00\u4e2a": 758, "\u8fd9\u662f\u56e0\u4e3adgl\u8981\u5b9a\u4f4d\u5e76\u5220\u9664\u5305\u542b\u5728\u5c0f\u6279\u6b21\u4e2d\u7684\u53cd\u5411\u8fb9": 764, "\u8fd9\u662f\u56e0\u4e3a\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u8fb9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee": 747, "\u8fd9\u662f\u56e0\u4e3a\u5b83\u5bf9\u4e00\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u6d88\u606f\u7684\u805a\u5408\u548c\u7ed3\u5408": 765, "\u8fd9\u662f\u56e0\u4e3a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u53ea\u7528\u4e00\u4e2a\u56fe": 743, "\u8fd9\u662f\u5c0f\u6279\u91cf\u8bad\u7ec3\u4e2d\u7684\u5e38\u89c1\u7528\u6cd5": 761, "\u8fd9\u662f\u7531\u4e8e": 751, "\u8fd9\u6837\u4e0d\u4ec5\u80fd\u63d0\u5347\u901f\u5ea6": 754, "\u8fd9\u6837\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5e2e\u7528\u6237\u8282\u7701\u5927\u91cf\u7684\u6570\u636e\u5904\u7406\u65f6\u95f4": 744, "\u8fd9\u6837\u7684\u4efb\u52a1\u79f0\u4f5c": 777, "\u8fd9\u6837\u7684\u65b9\u6cd5\u79f0\u4f5c": 777, "\u8fd9\u70b9\u5728\u4e4b\u540e\u7684": 763, "\u8fd9\u79cd\u60c5\u51b5\u4e0b": 774, "\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97dgl\u7684\u4ee3\u7801\u53ef\u4ee5\u65e0\u7f1d\u5d4c\u5165\u5230\u540e\u7aef\u6846\u67b6\u7684\u4ee3\u7801\u4e2d": 769, "\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f": 755, "\u8fd9\u7b49\u4ef7\u4e8e\u628a\u6bcf\u6761\u6d88\u606f\u548c\u5bf9\u5e94\u7684\u8fb9\u6743\u91cd\u76f8\u4e58": 775, "\u8fd9\u7c7b\u64cd\u4f5c\u53eb\u505a": 776, "\u8fd9\u8981\u6c42\u6240\u6709\u5f20\u91cf\u53c2\u6570\u90fd\u5df2\u7ecf\u653e\u5728gpu\u4e0a": 753, "\u8fd9\u90e8\u5206\u4ee3\u7801\u4f1a\u56e0\u6a21\u5757\u800c\u5f02": 771, "\u8fd9\u91cc": 743, "\u8fd9\u91cc\u4ee56": 765, "\u8fd9\u91cc\u5148\u89e3\u91ca\u4e00\u4e0b\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 763, "\u8fd9\u91cc\u5220\u9664\u4e86\u81ea\u73af": 768, "\u8fd9\u91cc\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u5faa\u73af\u4ec5\u5305\u542b\u4f7f\u7528\u5b9a\u5236\u7684\u6279\u5904\u7406\u8fed\u4ee3\u5668\u904d\u5386\u6570\u636e\u96c6\u7684\u5185\u5bb9": 768, "\u8fd9\u91cc\u7684\u79bb\u7ebf\u63a8\u65ad\u88ab\u5b9e\u73b0\u4e3agnn\u6a21\u5757\u7684\u4e00\u4e2a\u65b9\u6cd5": 765, "\u8fd9\u91cc\u7701\u7565\u4e86": 743, "\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8f93\u5165\u7684\u56fe\u6570\u636e\u4e0d\u80fd\u5305\u542b\u8fb9\u7684\u7c7b\u578b\u4fe1\u606f": 774, "\u8fdb\u800c\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u6765\u6784\u5efadglgraph\u5bf9\u8c61": 751, "\u8fdb\u884c\u4f18\u5316": 759, "\u8fdb\u884c\u521b\u5efa\u65f6": 751, "\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 778, "\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97": 778, "\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316": 770, "\u8fdb\u884c\u8bad\u7ec3": 774, "\u8fde\u63a5\u4e00\u5bf9\u8282\u70b9": 750, "\u9009\u62e9\u4e00\u4e2a\u5c0f\u6279\u6b21\u7684\u56fe\u8282\u70b9": 762, "\u9010\u5143\u7d20\u6c42\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c": 776, "\u9010\u5c42\u8ba1\u7b97\u8868\u793a": 765, "\u901a\u5e38": [746, 767], "\u901a\u5e38\u4f1a\u805a\u5408\u5e76\u6c47\u603b\u5355\u4e2a\u56fe\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f": 776, "\u901a\u5e38\u5728\u6d88\u606f\u4f20\u9012\u7684\u6700\u540e\u4e00\u6b65\u5c06\u5176\u4e0e\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408": 758, "\u901a\u5e38\u65e0\u6cd5\u8fdb\u884c": 762, "\u901a\u5e38\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u90bb\u5c45\u8fdb\u884c\u771f\u6b63\u7684\u805a\u5408": 765, "\u901a\u5e38\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u91c7\u6837\u8fc7\u7a0b\u53d8\u6162\u5f88\u591a": 764, "\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u591a\u5c42\u7684\u56fe\u795e\u7ecf\u7f51\u7edc": 778, "\u901a\u8fc7": [752, 758], "\u901a\u8fc7idx\u5f97\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e00\u4e2a\u6837\u672c": 740, "\u901a\u8fc7idx\u83b7\u53d6\u5bf9\u5e94\u7684\u56fe\u548c\u6807\u7b7e": 743, "\u901a\u8fc7\u5173\u7cfb\u540d": 772, "\u901a\u8fc7\u5e73\u5747\u8bfb\u51fa\u503c\u6765\u8ba1\u7b97\u5355\u56fe\u7684\u8868\u5f81": 776, "\u901a\u8fc7\u5f20\u91cf\u5206\u914d\u521b\u5efa\u7279\u5f81\u65f6": 752, "\u901a\u8fc7\u7528\u56fe\u523b\u753b\u540c\u4e00\u793e\u533a\u91cc\u4eba\u4e0e\u4eba\u95f4\u7684\u53cb\u8c0a": 776, "\u901a\u8fc7\u7d22\u5f15": 771, "\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u5bf9\u8fb9\u5c5e\u6027\u7684\u9884\u6d4b": 774, "\u901a\u8fc7\u8c03\u7528": 772, "\u904d\u5386\u6240\u6709\u8fb9\u7684\u7c7b\u578b": 763, "\u90a3\u4e48\u5728\u5757\u4e0a\u8ba1\u7b97\u7684\u4ee3\u7801\u4e5f\u662f\u7c7b\u4f3c\u7684": 767, "\u90a3\u4e48\u5b83\u4eec\u5df2\u7ecf\u652f\u6301\u4e86\u8fb9\u6743\u91cd": 775, "\u90a3\u4e48\u7528\u6237\u53ea\u9700\u8981\u518d\u7f16\u5199\u4e00\u4e2a\u7528": 774, "\u90a3\u4e48\u7528\u6237\u5c31\u9700\u8981\u8c03\u7528\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 759, "\u90a3\u4e48\u8be5\u51fd\u6570\u5e94\u4ee5\u521d\u59cb\u56fe\u4ee5\u53ca\u7531\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u6784\u6210\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 766, "\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b\u901a\u5e38\u5982\u4e0b": 762, "\u90bb\u5c45\u91c7\u6837\u5728\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u66f4\u597d\u5730\u53d1\u6325\u4f5c\u7528": 765, "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u5757\u7684\u5217\u8868": 766, "\u90bb\u63a5\u77e9\u9635\u91cc\u7684\u5143\u7d20\u4e0d\u662f\u96f6\u5c31\u662f\u4e00": 775, "\u90fd\u662f\u540e\u7eed\u56fe\u795e\u7ecf\u7f51\u7edc\u5c42\u8ba1\u7b97\u4e2d\u67d0\u6761\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 763, "\u90fd\u6709": 777, "\u90fd\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 767, "\u914d\u7f6e\u6587\u4ef6": 748, "\u91c7\u6837": 766, "\u91c7\u6837\u4ee3\u7801\u7c7b\u4f3c\u4e8e\u5355\u8fdb\u7a0b\u91c7\u6837": 746, "\u91c7\u6837\u5668": 745, "\u91c7\u6837\u5668\u65e0\u6cd5\u5728\u5177\u6709\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7684pytorch": 746, "\u91c7\u6837\u5668\u8fdb\u7a0b": 745, "\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf\u5fc5\u987b\u5339\u914d": 748, "\u91cc\u5b9e\u73b0\u4e86\u5f88\u591a\u5e38\u7528\u7684\u56fe\u6570\u636e\u96c6": 739, "\u91cc\u6240\u4ecb\u7ecd\u7684\u6027\u80fd\u4f18\u5316": 771, "\u91cc\u662f\u5426\u6709\u5904\u7406\u8fc7\u7684\u6570\u636e\u6587\u4ef6": 744, "\u91cc\u7684": 777, "\u91cc\u8bfb\u53d6\u5904\u7406\u8fc7\u7684\u6570\u636e": 744, "\u91cc\u9762\u4fdd\u5b58\u4e86\u8bad\u7ec3\u811a\u672c": 748, "\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b": 762, "\u91cd\u6392\u56fe\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u5c40\u90e8\u6027": 743, "\u91cd\u65b0\u521d\u59cb\u5316\u53ef\u5b66\u4e60\u7684\u53c2\u6570": 770, "\u9488\u5bf9mxnet\u548cpytorch\u540e\u7aef\u4e5f\u6709\u5bf9\u5e94\u7684\u6a21\u5757": 778, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [756, 762], "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [756, 762], "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [756, 762], "\u94fe\u63a5\u9884\u6d4b": [743, 756, 766, 773, 778], "\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u4e5f\u5e94\u4f7f\u7528\u7c7b\u4f3c\u7684\u5e03\u5c14\u6570\u7ec4": 746, "\u94fe\u63a5\u9884\u6d4b\u548c\u6574\u56fe\u5206\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 773, "\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5904\u7406\u4e0e\u8282\u70b9\u5206\u7c7b\u76f8\u4f3c": 743, "\u9500\u6bc1distgraph\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0distgraph\u7684\u884c\u4e3a\u6ca1\u6709\u88ab\u5b9a\u4e49": 746, "\u952e\u662f\u4e00\u79cd\u5173\u7cfb": 760, "\u957f\u5ea6\u4e3a3\u7684\u8282\u70b9\u7279\u5f81": 752, "\u95f4\u9694\u635f\u5931": 777, "\u9648\u77e5\u96e8": 756, "\u9664\u4e86": 764, "\u9664\u4e86\u56fe\u7ed3\u6784": 751, "\u9664\u4e86\u5e73\u8861\u8282\u70b9\u7684\u7c7b\u578b\u4e4b\u5916": 747, "\u9664\u4e86\u5f20\u91cf\u7684\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b\u4e4b\u5916": 746, "\u9664\u4e86\u6570\u636e\u7ef4\u5ea6": 770, "\u9664\u4e86\u7528\u6237\u5728\u521b\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u65f6\u65e0\u6cd5\u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 746, "\u9664\u4e86\u8f93\u5165\u56fe\u548c\u8f93\u5165\u5f20\u91cf": 772, "\u9664\u4ee5\u5165\u5ea6": 771, "\u9664\u6b64\u4e4b\u5916": 759, "\u968f\u540e": 766, "\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b": 764, "\u9690\u5c42\u5927\u5c0f\u4e3a": 762, "\u96c6\u7fa4\u4e2d\u7684\u6bcf\u53f0\u673a\u5668\u5404\u81ea\u8d1f\u8d23\u4e00\u5f20\u5b50\u56fe": 745, "\u9700\u8981\u4e0b\u56fe\u4e2d\u7684\u6765\u81ea\u8282\u70b94": 763, "\u9700\u8981\u4ee5\u5c0f\u6279\u6b21\u7684\u65b9\u5f0f\u8ba1\u7b97\u8fd9\u4e2agnn\u5c42\u6240\u6709\u8282\u70b9\u7684\u8f93\u51fa\u8868\u793a": 765, "\u9700\u8981\u5411\u6570\u636e\u8f7d\u5165\u5668\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u5bf9\u5e94\u8fb9id\u7684\u5b57\u5178": 766, "\u9700\u8981\u5bf9\u7528\u4e8e\u6574\u56fe\u7684gnn\u6a21\u5757\u8fdb\u884c\u5982\u4e0b\u8c03\u6574\u4ee5\u5c06\u5176\u7528\u4e8e\u5757\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5": 767, "\u9700\u8981\u5c06\u5176\u4e0e": 764, "\u9700\u8981\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a": 743, "\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u8282\u70b9\u548c\u8fb9\u7c7b\u578b": 755, "\u9700\u8981\u6839\u636e\u56fe\u7c7b\u578b\u88ab\u6307\u5b9a": 771, "\u9700\u8981\u6ce8\u610f": 776, "\u9700\u8981\u6ce8\u610f\u7684\u662f\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u8282\u70b9\u548c\u8fb9\u5c5e\u6027\u6ca1\u6709\u6279\u6b21\u5927\u5c0f\u5bf9\u5e94\u7684\u7ef4\u5ea6": 776, "\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c": 768, "\u975e\u7ebf\u6027\u548c\u57fa\u5206\u89e3": 768, "\u975e\u96f6\u7684\u5143\u7d20\u53ef\u4ee5\u53d6\u4efb\u610f\u6807\u91cf\u503c": 775, "\u975e\u96f6\u9879": 751, "\u9762\u5411\u90a3\u4e9b\u60f3\u8981\u5f00\u53d1\u65b0\u7684\u91c7\u6837\u7b97\u6cd5": 762, "\u987e\u5ba2": 750, "\u9884\u6d4b\u56fe\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u8fb9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u4efb\u52a1\u7c7b\u578b": 774, "\u9884\u6d4b\u5b83\u7684\u7c7b\u578b\u662f": 774, "\u9884\u6d4b\u7ed3\u679c\u523b\u753b\u4e86\u6574\u4e2a\u8f93\u5165\u56fe\u7684\u5c5e\u6027": 776, "\u9884\u6d4b\u8fb9\u5f97\u5206\u7684\u6a21\u578b\u548c\u8fb9\u5206\u7c7b": 777, "\u9996\u5148": 776, "\u9996\u5148\u4f7f\u7528pip\u5b89\u88c5ogb\u5305": 742, "\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0a\u56fe\u6240\u793a\u7684dglgraph": 763, "\u9996\u5148\u6211\u4eec\u904d\u5386\u56fe\u4e2d\u6240\u6709\u7684\u5173\u7cfb": 772, "\u9a8c\u8bc1": 746, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u6570\u636e\u96c6": 774, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u7684\u5206\u5272\u4e5f\u4ee5\u5e03\u5c14\u63a9\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u56fe\u4e0a": 778, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 746, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4ece\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u7c7b\u522b\u4e2d\u5206\u914d\u7684\u4e00\u4e2a\u7c7b\u522b": 778, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u6807\u6ce8\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57": 778, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u5212\u5206": 774, "\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u8282\u70b9\u770b\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 747, "\u9ad8\u5c42\u91c7\u6837api\u4e3a\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u91c7\u6837\u7b97\u6cd5": 746, "\u9ec4\u5d1f": 756, "\u9ed8\u8ba4": 740, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [746, 747], "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u8fdb\u884c\u7279\u5f81\u5408\u5e76": 755, "\uac00": [783, 785, 786, 788, 798, 801, 802, 812, 815, 816, 819], "\uac00\uae4c\uc6b4": 783, "\uac00\ub2a5": 821, "\uac00\ub2a5\ub3c4": 820, "\uac00\ub2a5\ud558\ub2e4": [783, 788, 793, 799, 801, 803, 807, 809, 818, 819, 821], "\uac00\ub2a5\ud55c": [789, 799, 801, 821], "\uac00\uc774\ub4dc\ub294": 783, "\uac00\uc774\ub4dc\uc640": 807, "\uac00\uc7a5": [799, 810, 811, 815, 818, 821], "\uac00\uc815\ud558\uace0": [785, 820], "\uac00\uc815\ud558\ub294": 786, "\uac00\uc815\ud558\uba74": 818, "\uac00\uc815\ud558\uc790": 801, "\uac00\uc815\ud55c\ub2e4": [788, 789, 817, 818], "\uac00\uc838\ub2e4": 807, "\uac00\uc911\uce58": [788, 791, 793, 798], "\uac00\uc911\uce58\uace0": 800, "\uac00\uc911\uce58\ub294": [791, 800], "\uac00\uc911\uce58\ub4e4\uc744": 814, "\uac00\uc911\uce58\ub85c": 788, "\uac00\uc911\uce58\ub97c": [788, 791, 793, 800], "\uac00\uc911\uce58\uc640": 791, "\uac00\uc911\uce58\uc758": 788, "\uac00\uc911\uce58\uc774\ub2e4": 788, "\uac00\uc9c0": [785, 786, 788, 804, 806, 811, 820, 821], "\uac00\uc9c0\uace0": [811, 819, 821], "\uac01": [779, 784, 785, 786, 787, 788, 789, 791, 793, 795, 796, 798, 802, 804, 805, 807, 808, 809, 811, 812, 815, 816, 818, 819, 820, 821], "\uac01\uac01": [799, 801, 810], "\uac04\uacb0\ud558\uac8c": 799, "\uac04\ub2e8\ud558\uac8c": [784, 811, 818], "\uac04\ub2e8\ud558\uace0": 779, "\uac04\ub2e8\ud558\ub2e4": [788, 811, 818], "\uac04\ub2e8\ud55c": 790, "\uac04\ub2e8\ud788": 818, "\uac04\ub7b5\ud558\uac8c": 783, "\uac04\ub7b5\ud55c": 818, "\uac04\uc12d\uc774": 819, "\uac04\uc5d0": [787, 796], "\uac04\uc758": [791, 819, 820], "\uac12": 781, "\uac12\ub3c4": 788, "\uac12\ub4e4\uc744": 821, "\uac12\ub4e4\uc774\ub2e4": 788, "\uac12\ub4e4\uc778\ub370": 788, "\uac12\uc5d0": [806, 809, 812], "\uac12\uc73c\ub85c": [788, 812], "\uac12\uc740": [788, 802, 816, 818], "\uac12\uc744": [787, 788, 800, 815, 818], "\uac12\uc758": 787, "\uac12\uc774": 788, "\uac12\uc774\ub2e4": 788, "\uac12\uc778": 789, "\uac15\ub3c4\ub97c": 791, "\uac15\ub825\ud55c\uac00": 805, "\uac15\uc870\ud558\uae30": 783, "\uac15\ud558\uac8c": 779, "\uac16\uac70\ub098": 791, "\uac16\uac8c": 802, "\uac16\uace0": [782, 786, 787, 788, 793, 795, 796, 799, 807, 810, 818], "\uac16\uae30": [788, 802], "\uac16\ub294": [786, 787, 788, 790, 791, 792, 793, 795, 796, 802, 804, 805, 806, 810, 812, 818, 819], "\uac16\ub294\ub2e4": [785, 787, 788, 791, 793, 796, 799, 800, 807, 808, 817, 820], "\uac16\ub294\ub2e4\uace0": [786, 788], "\uac16\ub294\ub2e4\uba74": [788, 796, 806], "\uac16\ub294\ub370": [786, 788, 799, 812], "\uac16\ub3c4\ub85d": [786, 787, 788, 805], "\uac16\uc544\uc57c": 793, "\uac16\uc73c\uba70": 818, "\uac16\uc744": [790, 791, 793, 802, 816], "\uac16\uc74c": 810, "\uac16\uc9c0": [791, 815], "\uac19\uace0": 786, "\uac19\ub2e4": [780, 785, 786, 788, 789, 796, 799, 801, 802, 804, 805, 806, 807, 809, 811, 815, 818, 819, 820], "\uac19\ub3c4\ub85d": 788, "\uac19\uc544\uc57c": [789, 793, 795], "\uac19\uc544\uc57c\ub9cc": 786, "\uac19\uc740": [780, 785, 786, 787, 788, 789, 791, 793, 795, 796, 799, 800, 801, 805, 806, 807, 810, 811, 814, 815, 816, 817, 818, 819, 820, 821], "\uac19\uc744": 786, "\uac19\uc774": [783, 791, 798, 805, 806, 809, 810, 814, 816, 817, 818, 819, 820, 821], "\uac1c": 795, "\uac1c\uac00": 788, "\uac1c\uae4c\uc9c0": 795, "\uac1c\ub150\uc5d0": [806, 811], "\uac1c\ub150\uc740": [805, 806, 811], "\uac1c\ub150\uc744": 790, "\uac1c\ub97c": 786, "\uac1c\ub9cc": 786, "\uac1c\ubc1c": 786, "\uac1c\ubc1c\uc744": 795, "\uac1c\ubc1c\uc774": 807, "\uac1c\ubc1c\ud558\uace0": 786, "\uac1c\uc218": [780, 786, 789], "\uac1c\uc218\uac00": [788, 805], "\uac1c\uc218\uacfc": [786, 789], "\uac1c\uc218\ub294": [786, 789, 810], "\uac1c\uc218\ub97c": [786, 788], "\uac1c\uc218\uc5d0": [788, 807], "\uac1c\uc218\uc640": [786, 788, 793], "\uac1c\uc218\uc758": [786, 788], "\uac1c\uc22b\ub97c": 783, "\uac1c\uc758": [782, 786, 787, 788, 789, 809, 820], "\uac1c\uc778": 804, "\uac1d\uccb4": [784, 785, 792, 815], "\uac1d\uccb4\uac00": 786, "\uac1d\uccb4\ub294": 799, "\uac1d\uccb4\ub4e4\uc744": 786, "\uac1d\uccb4\ub4e4\uc758": 783, "\uac1d\uccb4\ub85c": [782, 788], "\uac1d\uccb4\ub97c": [786, 799, 806], "\uac1d\uccb4\ub9cc": 782, "\uac1d\uccb4\uc5d0": 786, "\uac1d\uccb4\uc640": 784, "\uac1d\uccb4\uc774\ub2e4": 799, "\uac2f\uc218\ub97c": 812, "\uac70\uafb8\ub85c": 804, "\uac70\ub4ed": 788, "\uac70\ub4ed\uc81c\uacf1\uc5d0": 809, "\uac70\uc758": [783, 806, 809, 811, 818], "\uac78\ub9ac\ub294": 808, "\uac78\uccd0\uc11c": [788, 796, 815], "\uac80\uc0c9\ud560": 787, "\uac80\uc99d": [786, 788, 808, 818, 821], "\uac80\uc99d\uacfc": 804, "\uac80\uc99d\uc744": 781, "\uac83": [806, 810, 811, 812], "\uac83\uacfc": [786, 788, 791, 806, 809, 813, 818], "\uac83\uacfc\ub294": 811, "\uac83\ub3c4": [781, 795, 799, 818], "\uac83\ub3e0": 807, "\uac83\ub4e4\uc5d0": 792, "\uac83\ub4e4\uc774\ub2e4": 788, "\uac83\ub9cc\uc774": 810, "\uac83\uc5d0": [788, 810], "\uac83\uc73c\ub85c": [788, 807, 811, 821], "\uac83\uc740": [783, 786, 793, 800, 805, 806, 808, 810, 811, 818, 819, 820, 821], "\uac83\uc744": [779, 780, 783, 784, 786, 787, 788, 796, 799, 801, 805, 809, 810, 819, 821], "\uac83\uc774": [782, 783, 784, 788, 801, 805, 806, 807, 808, 809, 811, 819, 820], "\uac83\uc774\uace0": [783, 786, 806], "\uac83\uc774\ub2e4": [780, 781, 783, 786, 788, 791, 793, 795, 796, 801, 804, 805, 806, 809, 810, 811, 815, 816, 818, 819, 820, 821], "\uac83\uc774\uc9c0\ub9cc": 812, "\uac83\uc778\ub2e4": 788, "\uac83\uc778\uc9c0": [805, 810], "\uac83\uc778\uc9c0\uc5d0": 810, "\uac83\uc77c": [809, 819], "\uac83\uc785\ub2c8\ub2e4": 797, "\uac83\uc9c0\ub9cc": 788, "\uac83\ucc98\ub7fc": [800, 806, 809], "\uacb0\uacfc": [794, 801, 805, 808, 816], "\uacb0\uacfc\uac00": 819, "\uacb0\uacfc\ub294": [788, 815, 816], "\uacb0\uacfc\ub4e4\uc740": 816, "\uacb0\uacfc\ub4e4\uc774": 788, "\uacb0\uacfc\ub77c\ub294": 811, "\uacb0\uacfc\ub85c": 806, "\uacb0\uacfc\ub85c\uc11c": 821, "\uacb0\uacfc\ub97c": [788, 790, 799, 801, 802, 805, 811, 816, 819], "\uacb0\uacfc\uc5d0": [786, 799], "\uacb0\uacfc\uc640": 799, "\uacb0\uacfc\uc758": 819, "\uacb0\uc815\ud55c\ub2e4": 814, "\uacb0\uc815\ud560": [787, 796], "\uacb0\ud569\ud558\uace0": 799, "\uacbd\ub85c\ub4e4\uc740": 789, "\uacbd\ub85c\ub85c": 789, "\uacbd\ub85c\ub97c": 789, "\uacbd\uc6b0": [781, 784, 786, 788, 789, 793, 796, 799, 803, 804, 805, 810, 812, 814, 815, 816, 819, 820], "\uacbd\uc6b0\uac00": [796, 818, 820], "\uacbd\uc6b0\ub294": 796, "\uacbd\uc6b0\ub3c4": [784, 805, 810, 817, 819], "\uacbd\uc6b0\ub4e4": 810, "\uacbd\uc6b0\ub77c\uba74": 799, "\uacbd\uc6b0\ub97c": 801, "\uacbd\uc6b0\uc5d0": [784, 786, 808, 815], "\uacbd\uc6b0\uc5d0\ub294": [783, 788, 795, 801, 804, 814], "\uacbd\uc6b0\uc5d0\ub9cc": 786, "\uacbd\uc6b0\uc640": [783, 796, 805, 819], "\uacbd\uc6b0\uc640\ub294": 819, "\uacc4\ub2e8\ub41c": 820, "\uacc4\uc0b0": [809, 812, 815, 818], "\uacc4\uc0b0\ub418\uc5b4\uc57c": [804, 811], "\uacc4\uc0b0\ub41c": 788, "\uacc4\uc0b0\uc740": 808, "\uacc4\uc0b0\uc744": [785, 787, 788], "\uacc4\uc0b0\uc774": 786, "\uacc4\uc0b0\uc801\uc778": 788, "\uacc4\uc0b0\ud558\uace0\uc790": 818, "\uacc4\uc0b0\ud558\uae30": [785, 805, 806, 809, 818], "\uacc4\uc0b0\ud558\uae30\ub97c": 811, "\uacc4\uc0b0\ud558\ub294": [805, 806, 808, 809, 818, 820, 821], "\uacc4\uc0b0\ud558\ub294\ub370": 811, "\uacc4\uc0b0\ud558\uba74": 818, "\uacc4\uc0b0\ud55c": 811, "\uacc4\uc0b0\ud55c\ub2e4": [806, 820], "\uacc4\uc0b0\ud55c\ub2e4\uace0": 818, "\uacc4\uc0b0\ud560": [805, 808, 811, 820, 821], "\uacc4\uc0b0\ud574\uc57c\ud558\uae30": 808, "\uacc4\uc0b0\ud574\uc57c\ud55c\ub2e4": 808, "\uacc4\uc18d": 812, "\uacc4\ud68d\uc774\ub77c\uba74": 817, "\uace0\uac1d": 791, "\uace0\uae09": [799, 804], "\uace0\ub824\ud558\uac8c": 788, "\uace0\ub824\ud558\uc790": 805, "\uace0\ub824\ud55c": 788, "\uace0\ub824\ud574\uc11c": 788, "\uace0\ub9bd": 805, "\uace0\ub9bd\ub41c": 805, "\uace0\uc720\uc758": 813, "\uace0\uc720\ud558\uac8c": [786, 796], "\uace0\uc720\ud558\ub2e4": 787, "\uace0\uc720\ud55c": [787, 788, 793, 795], "\uace0\uce58\uae30": 811, "\uacf1\ud558\uace0": [799, 812], "\uacf1\ud558\uae30": 800, "\uacf1\ud574\uc11c": 799, "\uacf3\uc5d0": [788, 792], "\uacf5\uac04\uacfc": 796, "\uacf5\ub3d9": 791, "\uacf5\ubc31": 788, "\uacf5\ubc31\uc73c\ub85c": 788, "\uacf5\uc2dd": 782, "\uacf5\uc2dd\uc5d0": 805, "\uacf5\uc2dd\uc73c\ub85c": [799, 816], "\uacf5\uc2dd\uc740": [805, 815], "\uacf5\ud1b5\uc801\uc778": 792, "\uacfc": [785, 786, 788, 789, 790, 791, 812, 814, 817], "\uacfc\uc815\uc5d0\uc11c": [788, 815], "\uacfc\uc81c": 820, "\uacfc\uc81c\ub4e4\uc758": 817, "\uacfc\uc81c\ub97c": 788, "\uad00\uacc4": [790, 791, 796, 802], "\uad00\uacc4\uac00": [791, 796, 816], "\uad00\uacc4\ub294": [791, 796, 815, 816], "\uad00\uacc4\ub2f9": [796, 815], "\uad00\uacc4\ub4e4\uc744": [796, 806], "\uad00\uacc4\ub4e4\uc758": 816, "\uad00\uacc4\ub85c": 816, "\uad00\uacc4\ub85c\ubd80\ud130": 816, "\uad00\uacc4\ub97c": [791, 796, 816, 819], "\uad00\uacc4\uc5d0": 816, "\uad00\uacc4\uc758": 802, "\uad00\uacc4\uc774\uace0": [802, 806], "\uad00\uacc4\uc778": 806, "\uad00\ub828": [789, 816], "\uad00\ub828\ub41c": [783, 789, 796, 799, 814, 820], "\uad00\ub828\uc5c6\uc774": 787, "\uad00\ub828\uc774": 807, "\uad00\ub9ac\ud558\ub294\ub370": 796, "\uad00\ub9ac\ud55c\ub2e4": 786, "\uad49\uc7a5\ud788": [784, 819], "\uad50\uccb4\ud558\ub294": 811, "\uad50\uccb4\ud55c\ub2e4": 810, "\uad6c\ub3d9\ud558\uace0": 786, "\uad6c\ub9e4\uc790": 791, "\uad6c\ubcc4\uc774": 796, "\uad6c\ubcc4\ud558\uace0": 786, "\uad6c\ubcc4\ud558\ub294": 788, "\uad6c\ubcc4\ud558\ub294\ub370": 786, "\uad6c\ubcc4\ud574\ubcfc": 819, "\uad6c\ubd84\ub418\ub294": 788, "\uad6c\ubd84\ub41c\ub2e4": 788, "\uad6c\ubd84\ub41c\ub2e4\uace0": 818, "\uad6c\ubd84\uc9c1\uae30": 806, "\uad6c\ubd84\ud55c\ub2e4\uba74": 787, "\uad6c\uc131": 788, "\uad6c\uc131\ub418\uc5b4": [813, 817], "\uad6c\uc131\ub418\uc5b4\uc57c": 788, "\uad6c\uc131\ub41c": [788, 791, 819, 820], "\uad6c\uc131\ub41c\ub2e4": [788, 791, 806, 811, 816, 821], "\uad6c\uc131\ud558\ub294": 788, "\uad6c\uc131\ud560": 788, "\uad6c\uc785": 791, "\uad6c\uc785\ud588\uc74c": 791, "\uad6c\uc870": 790, "\uad6c\uc870\ub294": 786, "\uad6c\uc870\ub85c": 790, "\uad6c\uc870\ub97c": [795, 819], "\uad6c\uc870\uc640": [785, 786, 788, 792, 794], "\uad6c\uc870\uc774\ub2e4": 791, "\uad6c\uccb4\uc801\uc778": 783, "\uad6c\ud558\uace0": 818, "\uad6c\ud558\uae30": [799, 821], "\uad6c\ud558\ub294\ub370": [806, 809], "\uad6c\ud574\uc9c4": 819, "\uad6c\ud604": [783, 811, 818, 821], "\uad6c\ud604\uacfc": [806, 809], "\uad6c\ud604\ub355\uc5d0": 813, "\uad6c\ud604\ub3c4": [806, 809], "\uad6c\ud604\ub418\uc5b4": [799, 815, 816, 821], "\uad6c\ud604\ub418\uc5b4\uc57c": 780, "\uad6c\ud604\ub41c\ub2e4": [815, 818], "\uad6c\ud604\ub41c\ub2e4\ub294": 808, "\uad6c\ud604\uc0c1\uc758": [806, 809], "\uad6c\ud604\uc5d0": 783, "\uad6c\ud604\uc5d0\uc11c": 811, "\uad6c\ud604\uc740": [783, 786, 801, 805, 810, 811, 819], "\uad6c\ud604\uc774": [783, 799, 806, 809, 810], "\uad6c\ud604\ud558\uace0": [779, 785, 786, 799, 804, 812, 819], "\uad6c\ud604\ud558\uae30": [784, 804, 811], "\uad6c\ud604\ud558\uae30\ub9cc": 805, "\uad6c\ud604\ud558\ub294": [779, 780, 808, 810, 811], "\uad6c\ud604\ud558\ub294\ub370": 780, "\uad6c\ud604\ud558\ub294\uc9c0": 798, "\uad6c\ud604\ud558\uba74": 801, "\uad6c\ud604\ud55c": [805, 810], "\uad6c\ud604\ud55c\ub2e4": [780, 781], "\uad6c\ud604\ud560": [781, 783, 784, 799, 821], "\uad6c\ud604\ud574\uc11c": 781, "\uad6c\ud604\ud574\uc57c": 783, "\uad8c\uc7a5\ud558\ub294\ub370": [780, 799], "\uad8c\uc7a5\ud55c\ub2e4": [779, 783, 784, 786, 801], "\uaddc\uce59\uc740": 799, "\uaddc\uce59\uc744": 819, "\uade0\ub4f1": 820, "\uade0\ub4f1\ud558\uac8c": 809, "\uade0\uc77c": 807, "\uade0\ud5dd\uc744": 788, "\uade0\ud615\uc744": 788, "\uade0\ud615\uc7a1\ud78c": 788, "\uadf8": [780, 786, 787, 788, 790, 792, 796, 798, 799, 801, 803, 804, 805, 808, 809, 811, 814, 815, 818, 819, 820, 821], "\uadf8\uac83\ub4e4\uc5d0": 796, "\uadf8\uac83\ub4e4\uc740": 786, "\uadf8\uac83\ub4e4\uc744": [786, 805], "\uadf8\uac83\ub4e4\uc758": [785, 788, 791, 792, 804, 806, 818], "\uadf8\uac83\uc740": 820, "\uadf8\uac83\uc758": [788, 811], "\uadf8\ub300\ub85c": [805, 809], "\uadf8\ub4e4\uc758": 791, "\uadf8\ub798\ub4e4": 819, "\uadf8\ub798\uc11c": [788, 792], "\uadf8\ub798\ud504": [780, 782, 785, 788, 789, 794, 797, 798, 802, 804, 805, 806, 808, 809, 811, 814, 816], "\uadf8\ub798\ud504\uac00": [786, 787, 788, 789, 791, 796, 805, 806, 810, 815, 818, 819, 821], "\uadf8\ub798\ud504\uac04\uc758": [806, 809], "\uadf8\ub798\ud504\ub098": 810, "\uadf8\ub798\ud504\ub294": [787, 788, 790, 791, 794, 796, 805, 806, 807, 810, 815, 819], "\uadf8\ub798\ud504\ub3c4": 805, "\uadf8\ub798\ud504\ub4e4": 783, "\uadf8\ub798\ud504\ub4e4\uacfc": 809, "\uadf8\ub798\ud504\ub4e4\ub85c": [785, 788], "\uadf8\ub798\ud504\ub4e4\uc5d0": [804, 809, 816, 817, 818, 819, 820], "\uadf8\ub798\ud504\ub4e4\uc5d0\uc11c": 820, "\uadf8\ub798\ud504\ub4e4\uc744": [787, 795, 819], "\uadf8\ub798\ud504\ub4e4\uc758": [783, 784, 788, 796, 806, 809, 811], "\uadf8\ub798\ud504\ub85c": [788, 789, 795, 805, 815, 819, 820], "\uadf8\ub798\ud504\ub85c\ubd80\ud130": [787, 792], "\uadf8\ub798\ud504\ub97c": [782, 783, 785, 786, 787, 788, 791, 792, 795, 805, 806, 807, 810, 811, 817, 818, 819, 820, 821], "\uadf8\ub798\ud504\ub9cc": 783, "\uadf8\ub798\ud504\ubcc4": 793, "\uadf8\ub798\ud504\uc5d0": [783, 786, 790, 794, 795, 797, 798, 803, 805, 808, 810, 811, 815, 817, 820, 821], "\uadf8\ub798\ud504\uc5d0\ub3c4": 805, "\uadf8\ub798\ud504\uc5d0\uc11c": [783, 788, 791, 802, 805, 816], "\uadf8\ub798\ud504\uc5d0\uc11c\ub294": 788, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": [798, 820], "\uadf8\ub798\ud504\uc640": [796, 805, 806, 807, 809, 810, 816, 817, 818, 819], "\uadf8\ub798\ud504\uc758": [783, 786, 787, 788, 790, 791, 793, 795, 796, 801, 805, 807, 810, 815, 816, 819], "\uadf8\ub798\ud504\uc774\uace0": 791, "\uadf8\ub798\ud504\uc774\uae30": 792, "\uadf8\ub798\ud504\uc774\ub2e4": [791, 802, 819, 820], "\uadf8\ub798\ud504\uc774\uc5b4\uc57c": 810, "\uadf8\ub798\ud504\uc774\uc790": 819, "\uadf8\ub798\ud504\uc778": [793, 804, 806], "\uadf8\ub798\ud504\uc77c": 796, "\uadf8\ub798\ud504\ud2d1": 787, "\uadf8\ub7a8\uc758": 796, "\uadf8\ub7a8\ud504\ub97c": 820, "\uadf8\ub7ec\uba74": 818, "\uadf8\ub7f0": 820, "\uadf8\ub807\uc9c0": [781, 806, 817], "\uadf8\ub8f9": 785, "\uadf8\ub8f9\uc73c\ub85c": 796, "\uadf8\ub9ac\uace0": [780, 783, 785, 786, 788, 789, 790, 791, 792, 796, 798, 799, 805, 806, 812, 813, 814, 817, 819, 821], "\uadf8\ub9bc\uc5d0\uc11c\uc640": 805, "\uadf8\ub9bc\uc740": [785, 787, 805], "\uadf8\ub9bc\uc758": 805, "\uadf8\uc5d0": [788, 802], "\uadf8\uc640": [791, 806], "\uae30\ub2a5": 792, "\uae30\ub2a5\uc740": 807, "\uae30\ub2a5\uc744": [788, 792, 799, 805], "\uae30\ubc18\uc73c\ub85c": [787, 789, 815], "\uae30\ubc18\uc758": [788, 820], "\uae30\ubc18\uc774\ub2e4": 805, "\uae30\ubc95\uc744": 818, "\uae30\ubc95\uc774\ub2e4": 800, "\uae30\ubcf8": [780, 786, 787, 788, 789, 799, 805], "\uae30\ubcf8\uc801\uc73c\ub85c": 810, "\uae30\ubcf8\uc801\uc778": [780, 782, 788, 790, 811], "\uae30\uc220\uc801\uc73c\ub85c\ub294": 805, "\uae30\uc5ec\ub97c": 813, "\uae30\uc900\uc758": 797, "\uae30\ud638\ub9cc\uc73c\ub85c": 788, "\uae38\uc774": 791, "\uae38\uc774\ub294": 786, "\uae40\ubb34\ud604": 797, "\uae54\ub054\ud55c": [779, 796], "\uae68\uc9d0": 786, "\uaf2d": [780, 788], "\ub05d\ub098\uba74": 788, "\ub098\ub204\uace0": [785, 786, 788], "\ub098\ub204\ub294": [786, 788, 801], "\ub098\ub208\ub2e4": 788, "\ub098\ub220\uc57c\ub9cc": 786, "\ub098\ub220\uc57c\ud55c\ub2e4": 786, "\ub098\ub220\uc838": 783, "\ub098\ub220\uc838\uc11c": [786, 787], "\ub098\ub220\uc9c4": 786, "\ub098\ub25c\ub2e4": [802, 814], "\ub098\ub25c\ub2e4\ub294": 810, "\ub098\ub260": 815, "\ub098\uba38\uc9c0": [785, 788, 819], "\ub098\uba38\uc9c0\ub294": 805, "\ub098\uba38\uc9c0\uc5d0\uc11c\ub294": [780, 785], "\ub098\uc544\uac00": [788, 794], "\ub098\uc5f4\ub418\uc5b4": 788, "\ub098\uc5f4\ud558\uace0": 788, "\ub098\uc5f4\ud558\uae30\ub294": 792, "\ub098\ud0c0\ub0b8\ub2e4": [791, 795], "\ub098\ud0c0\ub0b8\ub2e4\ub294": 819, "\ub0a8\uc544\uc788\ub2e4": 799, "\ub0ae\ub2e4\uace0": 801, "\ub0ae\ucd94\ub294": 801, "\ub0b4\ubcf4\ub0b4\ub294": 818, "\ub0b4\ubd80\uc801\uc73c\ub85c": [792, 799], "\ub0b4\ubd80\uc801\uc73c\ub85c\ub294": 786, "\ub0b4\uc5d0\uc11c": 788, "\ub0b4\uc6a9\uc73c\ub85c": 805, "\ub0b4\uc6a9\uc740": [783, 799], "\ub0b4\uc6a9\uc774": 792, "\ub0b8": 806, "\ub108\ubb34": [801, 807, 818], "\ub110\ub9ac": 821, "\ub118\uc744": 804, "\ub123\uae30": 807, "\ub124": [787, 788, 789], "\ub124\uac00\uc9c0": 787, "\ub124\uac00\ud2f0\ube0c": 820, "\ub124\uc784\uc2a4\ud328\uc774\uc2a4\uc5d0": 799, "\ub124\ud2b8\uc6cc\ud06c": [785, 788, 789, 797, 804, 810, 820], "\ub124\ud2b8\uc6cc\ud06c\uac00": [805, 821], "\ub124\ud2b8\uc6cc\ud06c\ub294": [791, 821], "\ub124\ud2b8\uc6cc\ud06c\ub4e4\uc5d0\uc11c": 802, "\ub124\ud2b8\uc6cc\ud06c\ub97c": [786, 811, 817, 818], "\ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c": 791, "\ub124\ud2b8\uc6cc\ud06c\uc758": 814, "\ub178\ub4dc": [785, 787, 790, 791, 792, 793, 796, 798, 799, 804, 805, 806, 809, 810, 815, 816, 817, 819, 820], "\ub178\ub4dc\uac00": [786, 788, 804, 811], "\ub178\ub4dc\uac04\uc758": 796, "\ub178\ub4dc\ub098": 802, "\ub178\ub4dc\ub294": [807, 821], "\ub178\ub4dc\ub4e4": [786, 788, 790, 804, 805, 806, 820], "\ub178\ub4dc\ub4e4\uac04\uc758": [790, 791], "\ub178\ub4dc\ub4e4\uacfc": [791, 793, 796, 805, 806, 807, 811], "\ub178\ub4dc\ub4e4\ub85c": 787, "\ub178\ub4dc\ub4e4\ub9cc\uc774": 805, "\ub178\ub4dc\ub4e4\uc5d0": [788, 805, 808, 811, 819, 820], "\ub178\ub4dc\ub4e4\uc5d0\uac8c": 799, "\ub178\ub4dc\ub4e4\uc5d0\uc11c": 805, "\ub178\ub4dc\ub4e4\uc640": 783, "\ub178\ub4dc\ub4e4\uc740": [787, 788, 791, 805, 811], "\ub178\ub4dc\ub4e4\uc744": [785, 788, 805, 809, 811, 815], "\ub178\ub4dc\ub4e4\uc758": [786, 788, 791, 801, 803, 804, 805, 808, 811, 815, 818, 819, 820, 821], "\ub178\ub4dc\ub4e4\uc774": [787, 791, 805, 806, 810], "\ub178\ub4dc\ub4e4\uc774\ub098": [788, 819], "\ub178\ub4dc\ub4e4\uc774\ub2e4": [790, 805, 815], "\ub178\ub4dc\ub85c": [801, 810, 811], "\ub178\ub4dc\ub97c": [787, 788, 791, 795, 799, 805, 809, 815, 821], "\ub178\ub4dc\ubcc4": 798, "\ub178\ub4dc\uc5d0": [788, 793, 795, 798, 809, 811, 814, 816, 818, 821], "\ub178\ub4dc\uc5d0\ub3c4": 805, "\ub178\ub4dc\uc5d0\uc11c": [783, 801], "\ub178\ub4dc\uc640": [785, 786, 787, 788, 790, 795, 796, 798, 799, 802, 805, 810, 815, 819], "\ub178\ub4dc\uc758": [783, 786, 788, 795, 796, 798, 799, 800, 803, 805, 806, 808, 810, 811, 814, 815, 818, 821], "\ub178\ub4e4\ub4e4": 805, "\ub178\ub4e4\ub4e4\uc744": 805, "\ub178\ub4e4\ub4e4\uc758": 808, "\ub178\ub4e4\uc5d0": 805, "\ub178\ub4e4\uc744": 805, "\ub178\ub4e4\uc758": [786, 788], "\ub178\uc774\uc988": 820, "\ub178\ud2b8": [788, 802, 805, 807, 818, 819], "\ub179\uc0c9": 805, "\ub179\uc0c9\uacfc": 805, "\ub179\uc0c9\uc73c\ub85c": 805, "\ub192\ub3c4\ub85d": 820, "\ub192\uc740": 801, "\ub193\uc774\uac8c": 815, "\ub208\uc5d0": 806, "\ub274\ub7f4": [797, 802, 804, 805, 810, 811, 814, 820], "\ub290\ub9b0": 808, "\ub294": [780, 782, 786, 788, 789, 791, 792, 795, 796, 798, 799, 802, 805, 806, 807, 809, 811, 812, 815, 816, 817, 819, 820, 821], "\ub298": 805, "\ub2a5\ub825\uc774": 799, "\ub2e4\ub8e8\uace0": 810, "\ub2e4\ub8e8\uae30": [781, 819], "\ub2e4\ub8e8\ub294": 807, "\ub2e4\ub8e8\ub294\ub370": 790, "\ub2e4\ub8e8\uc9c0": 792, "\ub2e4\ub8ec": 808, "\ub2e4\ub8ec\ub2e4": [785, 786, 804], "\ub2e4\ub8f0": [792, 795, 815, 816], "\ub2e4\ub974\uac8c": [783, 786, 811, 815], "\ub2e4\ub974\uae30": 805, "\ub2e4\ub974\uc9c0": [818, 819, 820], "\ub2e4\ub978": [786, 788, 789, 790, 791, 792, 794, 795, 796, 799, 801, 802, 806, 807, 811, 816, 817, 818, 819, 821], "\ub2e4\ub978\ub370": [808, 820], "\ub2e4\ub984\uc744": 782, "\ub2e4\uba74": 787, "\ub2e4\uc2dc": [786, 788, 796, 810], "\ub2e4\uc591\ud55c": [786, 792, 816, 820], "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0": 781, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 779, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294": 781, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c": 781, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c\ub2e4": 781, "\ub2e4\uc6b4\ub85c\ub4dc\ud574\uc11c": 782, "\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc": [788, 818, 820, 821], "\ub2e4\uc74c": [779, 781, 782, 783, 784, 786, 787, 788, 795, 796, 799, 805, 806, 807, 809, 810, 811, 812, 814, 818, 819, 820, 821], "\ub2e4\uc74c\uacfc": [780, 783, 785, 788, 789, 796, 798, 799, 800, 801, 802, 804, 805, 806, 809, 810, 811, 815, 816, 817, 818, 819, 820, 821], "\ub2e4\uc74c\uc5d0": 815, "\ub2e4\uc74c\uc5d0\ub294": 805, "\ub2e4\uc74c\uc73c\ub85c": 804, "\ub2e4\uc74c\uc73c\ub85c\ub294": [809, 814], "\ub2e4\uc74c\uc740": [788, 789, 809, 812, 820, 821], "\ub2e4\uc74c\uc744": [789, 816], "\ub2e4\uc911": [787, 791], "\ub2e4\uc911\uc758": 786, "\ub2e4\ucc28\uc6d0": 793, "\ub2e8": [784, 786, 788], "\ub2e8\uacc4\uac00": 786, "\ub2e8\uacc4\ub4e4\uc744": 814, "\ub2e8\uacc4\ub85c": 788, "\ub2e8\uacc4\ub97c": [788, 811], "\ub2e8\uacc4\ub9c8\ub2e4": 804, "\ub2e8\uacc4\uc5d0\uc11c": [798, 801, 815], "\ub2e8\ubc29\ud5a5": 810, "\ub2e8\uc21c\ud558\uac8c": [806, 810, 811, 819, 821], "\ub2e8\uc21c\ud55c": 811, "\ub2e8\uc21c\ud788": 805, "\ub2e8\uc704\ub85c": 819, "\ub2e8\uc77c": [783, 785, 786, 788, 799, 810, 816, 817, 818], "\ub2e8\uc885": 815, "\ub2e8\uc9c0": [796, 805, 810, 821], "\ub2e8\ud56d": 799, "\ub2e8\ud56d\uc758": 799, "\ub2ec\ub77c\uc9c4\ub2e4": [806, 814], "\ub2ec\uc131\ud558\uae30": 820, "\ub2ec\uc131\ud558\ub294": 801, "\ub2f4\uace0": [786, 788, 806, 811, 819], "\ub2f4\ub2f9\ud558\ub294": 802, "\ub2f4\ub2f9\ud55c\ub2e4": [786, 788, 805], "\ub300\ub7b5": 788, "\ub300\ubd80\ubd84": [786, 795, 812], "\ub300\ubd80\ubd84\uc758": [784, 819], "\ub300\uc0c1": 810, "\ub300\uc0c1\uc73c\ub85c": 810, "\ub300\uc2e0": [786, 796, 809], "\ub300\uc2e0\uc5d0": [806, 809], "\ub300\uce6d\uc801\uc778": 791, "\ub300\ud45c\ud558\ub3c4\ub85d": 811, "\ub300\ud55c": [779, 780, 781, 783, 784, 786, 787, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 801, 802, 803, 805, 806, 808, 809, 810, 811, 812, 815, 816, 817, 819, 820, 821], "\ub300\ud574": [785, 811, 816], "\ub300\ud574\uc11c": [786, 788, 805, 808, 809, 811, 812, 814, 816, 817, 818, 819, 820, 821], "\ub300\ud578": 804, "\ub354": [783, 784, 786, 788, 794, 799, 801, 805, 808, 812, 821], "\ub354\ubd88\uc5b4": [788, 792, 816, 819], "\ub354\ubd88\uc5b4\uc11c": 787, "\ub354\ud55c\ub2e4": 801, "\ub354\ud560": 783, "\ub354\ud574\uc11c": [788, 799, 819], "\ub355\uc5d0": 819, "\ub370\uc774": 786, "\ub370\uc774\ud130": [780, 788, 792, 795, 796, 797, 799, 805, 812, 814, 817, 821], "\ub370\uc774\ud130\uac00": [783, 784, 789, 808, 819], "\ub370\uc774\ud130\ub294": [783, 788], "\ub370\uc774\ud130\ub3c4": [788, 792], "\ub370\uc774\ud130\ub85c": 787, "\ub370\uc774\ud130\ub85c\ub354\ub97c": 819, "\ub370\uc774\ud130\ub85c\uc11c": 786, "\ub370\uc774\ud130\ub97c": [779, 781, 784, 785, 786, 787, 788, 792, 794], "\ub370\uc774\ud130\ub9cc": 794, "\ub370\uc774\ud130\uc14b": [780, 782, 784, 812, 817, 821], "\ub370\uc774\ud130\uc14b\uacfc": 783, "\ub370\uc774\ud130\uc14b\ub4e4": 779, "\ub370\uc774\ud130\uc14b\ub4e4\uc740": 783, "\ub370\uc774\ud130\uc14b\ub4e4\uc744": 782, "\ub370\uc774\ud130\uc14b\uc5d0": [780, 782, 783, 784, 808], "\ub370\uc774\ud130\uc14b\uc740": [782, 783, 821], "\ub370\uc774\ud130\uc14b\uc744": [779, 780, 782, 783, 811, 817, 819], "\ub370\uc774\ud130\uc14b\uc758": [782, 783, 819], "\ub370\uc774\ud130\uc14b\uc774": 781, "\ub370\uc774\ud130\uc5d0": [786, 787, 788, 789, 806], "\ub370\uc774\ud130\uc640": [785, 786, 787, 788, 789, 792], "\ub370\uc774\ud130\uc758": [783, 786], "\ub370\uc774\ud14c\uc14b\uc744": 783, "\ub370\uc774\ud2b8\ub97c": 780, "\ub374\uc2a4": 786, "\ub3c4\uad6c\ub4e4\uc744": 785, "\ub3c4\uc6c0\uc774": 801, "\ub3c4\ucc29\uc9c0": 796, "\ub3c4\ucd9c\ud560": 818, "\ub3c5\ub9bd\uc801\uc778": 796, "\ub3d5\uae30": 788, "\ub3d5\ub294": 789, "\ub3d9\uae30\ud654": 786, "\ub3d9\uc2dc": 786, "\ub3d9\uc2dc\uc5d0": [785, 786], "\ub3d9\uc548": [788, 799], "\ub3d9\uc548\uc5d0": 786, "\ub3d9\uc77c\ud558\uac8c": 796, "\ub3d9\uc77c\ud558\uae30\uc5d0": 806, "\ub3d9\uc77c\ud558\ub2e4": [783, 788, 801, 805, 812, 813, 815, 820, 821], "\ub3d9\uc77c\ud558\ub3c4\ub85d": 806, "\ub3d9\uc77c\ud55c": [785, 786, 799], "\ub3d9\uc791\uc740": 815, "\ub3d9\uc791\ud558\uac8c": 810, "\ub3d9\uc791\ud558\ub294": [807, 818], "\ub3d9\uc791\ud558\ub294\uc9c0": [779, 810, 821], "\ub3d9\uc791\ud558\ub294\uc9c0\ub97c": 780, "\ub3d9\uc791\ud55c\ub2e4": [786, 807, 810], "\ub3d9\uc791\ud560": 805, "\ub3d9\uc791\ud568": 807, "\ub3d9\uc885": 791, "\ub418\uac8c": 785, "\ub418\uace0": 815, "\ub418\uae30": 815, "\ub418\uae30\ub3c4": 802, "\ub418\ub294": 805, "\ub418\ub3c4\ub85d": 811, "\ub418\ubc84\ub9bc": 812, "\ub41c\ub2e4": [783, 791, 796, 801, 802, 805, 806, 815, 818, 819, 820, 821], "\ub41c\ub2e4\ub294": 811, "\ub420": [788, 789, 805], "\ub450": [786, 788, 789, 791, 793, 794, 796, 801, 802, 806, 809, 812, 818, 819, 820], "\ub450\uac00\uc9c0": [786, 787, 796, 807, 816], "\ub450\uac1c": 810, "\ub450\uac1c\ub85c": 801, "\ub450\uac1c\uc758": [791, 792, 799, 811], "\ub450\ubc88\uc9f8": [788, 805, 806], "\ub450\ubc88\uc9f8\ub294": [806, 815], "\ub450\ubc88\uc9f8\ub85c": 819, "\ub458\uc740": 818, "\ub4a4\uc5d0": 789, "\ub4e4": [805, 819], "\ub4e4\uaca0\ub2e4": 783, "\ub4e4\ub9cc": 805, "\ub4e4\uba74": [786, 799, 800, 809, 818, 819, 820], "\ub4e4\uc5b4": [784, 786, 787, 788, 790, 791, 793, 799, 805, 807, 810, 811, 818, 819, 820, 821], "\ub4e4\uc5b4\uac08": [807, 817], "\ub4e4\uc5b4\ubcf4\uc790": [801, 805, 810, 811], "\ub4e4\uc744": [799, 806], "\ub4e4\uc758": [798, 806, 809, 811], "\ub4e4\uc790": 810, "\ub4ec\ub140": 796, "\ub4f1": 780, "\ub4f1\uacfc": 814, "\ub4f1\ub85d": 814, "\ub4f1\ub85d\uacfc": 813, "\ub4f1\ub85d\ud55c\ub2e4": 814, "\ub4f1\uc740": 788, "\ub4f1\uc758": 821, "\ub4f1\uc774": [799, 819], "\ub4f1\uc7a5\ud55c\ub2e4\ub294": 805, "\ub514\ub809\ud1a0\ub9ac": [781, 789], "\ub514\ub809\ud1a0\ub9ac\ub85c": [781, 789], "\ub514\ub809\ud1a0\ub9ac\ub97c": [788, 789], "\ub514\ub809\ud1a0\ub9ac\uc5d0": [781, 783, 788], "\ub514\ub809\ud1a0\ub9ac\uc640": 788, "\ub514\ub809\ud1a0\ub9ac\uc758": 788, "\ub514\ubc14\uc774\uc2a4": 795, "\ub514\ubc14\uc774\uc2a4\ub85c": 807, "\ub514\uc2a4\ud06c\ub85c": 784, "\ub514\uc2a4\ud06c\uc5d0": [780, 781, 784, 792], "\ub514\uc790\uc778\uc744": 786, "\ub525\ub7ec\ub2dd": 821, "\ub525\ub7ec\ub2dd\uc5d0\uc11c": 819, "\ub530\ub77c": [788, 795, 813, 814, 815, 820, 821], "\ub530\ub77c\uc11c": [783, 786, 787, 788, 789, 791, 792, 794, 805, 806, 807, 809, 810, 812, 815], "\ub530\ub974\uace0": 786, "\ub530\ub974\uba74": 805, "\ub530\ub978\ub2e4": [779, 793], "\ub54c": [785, 786, 787, 788, 796, 799, 801, 806, 808, 809, 811, 814, 816, 818, 819, 820], "\ub54c\uae4c\uc9c0": 804, "\ub54c\ub294": [787, 796, 812], "\ub54c\ub85c\ub294": [801, 806, 817], "\ub54c\ub860": 818, "\ub54c\ubb38\uc5d0": [783, 784, 786, 791, 796, 801, 805, 808, 809, 812, 815, 818, 819, 820], "\ub54c\ubb38\uc774\ub2e4": [779, 780, 786, 788, 792, 795, 799, 801, 805, 806, 807, 808, 820], "\ub54c\uc758": 812, "\ub5a0\uc62c\ub824": 805, "\ub610\ub294": [780, 781, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 802, 804, 805, 810, 814, 816, 817, 819, 820, 821], "\ub610\ud55c": [780, 783, 786, 788, 789, 795, 804, 811, 818, 821], "\ub611\uac19\uc774": 819, "\ub73b": 820, "\ub744\ub294": 806, "\ub77c\uace0": [795, 799, 805, 811, 818, 820], "\ub77c\ub294": [783, 787, 788, 799], "\ub77c\uc774\ube0c\ub7ec\ub9ac": 792, "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4": 792, "\ub77c\uc778": 793, "\ub77c\uc778\uc774\ub2e4": 785, "\ub798\ud551\ud558\uba74": 812, "\ub79c\ub364": 788, "\ub7ec\ud37c\ub7f0\uc2a4": 792, "\ub7f0\uce58": 789, "\ub7f0\uce6d\ud558\uae30": 785, "\ub808\uc774\ube14": [780, 783, 792, 819], "\ub808\uc774\ube14\uacfc": 821, "\ub808\uc774\ube14\ub4e4\uc758": 783, "\ub808\uc774\ube14\ub85c": 818, "\ub808\uc774\ube14\ub9cc": 811, "\ub808\uc774\ube14\uc740": [811, 821], "\ub808\uc774\ube14\uc744": [784, 796, 811, 818], "\ub808\uc774\ube14\uc774": [788, 808], "\ub808\uc774\uc544\uc6c3\uc744": 793, "\ub808\uc774\uc5b4": [801, 808, 811, 812, 818, 820, 821], "\ub808\uc774\uc5b4\uac00": 786, "\ub808\uc774\uc5b4\ub4e4": 808, "\ub808\uc774\uc5b4\ub4e4\uc744": 808, "\ub808\uc774\uc5b4\ub85c\ubd80\ud130": 805, "\ub808\uc774\uc5b4\ub97c": 805, "\ub808\uc774\uc5b4\ubd80\ud130": 808, "\ub808\uc774\uc5b4\uc5d0": [805, 806, 808, 811, 819], "\ub808\uc774\uc5b4\uc5d0\uc11c": [804, 811], "\ub808\uc774\uc5b4\uc758": [801, 804, 805, 808], "\ub808\uc774\uc774\ubcc4\ub85c": 808, "\ub85c": [787, 789, 790, 792, 795, 798, 810, 811, 812, 815, 816, 821], "\ub85c\ub354": 786, "\ub85c\ub354\uac00": [806, 811], "\ub85c\ub354\ub294": 809, "\ub85c\ub354\ub85c\ubd80\ud130": 806, "\ub85c\ub354\ub97c": [786, 805, 806, 809], "\ub85c\ub354\uc5d0": 809, "\ub85c\ub354\uc5d0\uc11c": 806, "\ub85c\ub4dc\ub420": [786, 787, 811], "\ub85c\ub4dc\uc548\ub2e4": 788, "\ub85c\ub4dc\uc5d0": 780, "\ub85c\ub4dc\ud558\uace0": [786, 788], "\ub85c\ub4dc\ud558\uae30": [779, 783], "\ub85c\ub4dc\ud558\ub294": 811, "\ub85c\ub4dc\ud558\uba74": 811, "\ub85c\ub4dc\ud55c\ub2e4": [786, 811], "\ub85c\ub4dc\ud55c\ub2e4\ub294": 811, "\ub85c\ub529": [779, 780, 782], "\ub85c\ub529\ub420": 788, "\ub85c\ub529\uc744": 780, "\ub85c\ub529\ud558\uace0": [779, 780, 792], "\ub85c\ub529\ud558\uae30": 788, "\ub85c\ub529\ud558\ub294": [782, 792, 807], "\ub85c\ub529\ud55c\ub2e4": 811, "\ub85c\ub529\ud568": 784, "\ub85c\ubd80\ud130": [786, 787, 792, 805], "\ub85c\uc11c": 798, "\ub85c\uc758": 795, "\ub85c\uc9c1\uc73c\ub85c": 816, "\ub85c\uceec": [780, 781, 784, 785, 786, 788, 789], "\ub8e8\ud504": 791, "\ub8f9\uacfc": [785, 806, 808, 820, 821], "\ub8f9\uc740": [806, 809, 811, 818, 819, 820, 821], "\ub8f9\uc744": [788, 808, 818, 821], "\ub8f9\uc774\ub791": 811, "\ub97c": [780, 781, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 801, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 815, 816, 817, 818, 819, 820, 821], "\ub9ac\uadf8\ub798\uc158": [783, 817], "\ub9ac\uadf8\ub808\uc158": [806, 817, 820, 821], "\ub9ac\uadf8\ub808\uc158\uacfc": 806, "\ub9ac\uadf8\ub808\uc158\uc5d0\uc11c": 809, "\ub9ac\uadf8\ub808\uc158\uc744": [806, 809, 818], "\ub9ac\ub4c0\uc154": 802, "\ub9ac\ub4dc\uc544\uc6c3\uc740": 819, "\ub9ac\uc14b": 814, "\ub9ac\uc18c\uc2a4\ub4e4\uc758": 785, "\ub9ac\uc18c\uc2a4\ub97c": 808, "\ub9ac\uc2a4\ud2b8": [809, 811], "\ub9ac\uc2a4\ud2b8\ub4e4\uc5d0": 816, "\ub9ac\uc2a4\ud2b8\ub85c": 783, "\ub9ac\uc2a4\ud2b8\ub85c\ubd80\ud130": 819, "\ub9ac\uc2a4\ud2b8\ub97c": [805, 806, 811, 819], "\ub9ac\uc2a4\ud2b8\uc5d0": 819, "\ub9ac\uc2a4\ud2b8\uc5d0\uc11c": 806, "\ub9ac\uc2a4\ud2b8\uc640": [783, 784, 806], "\ub9ac\uc2a4\ud2b8\uc758": 815, "\ub9ac\uc2a4\ud2b8\uc774\ub2e4": 816, "\ub9ac\ud134\ub418\uc9c0": 786, "\ub9ac\ud134\ub41c": [805, 821], "\ub9ac\ud134\ub41c\ub2e4": [788, 806], "\ub9ac\ud134\ud558\uae30": 818, "\ub9ac\ud134\ud558\ub3c4\ub85d": 783, "\ub9ac\ud134\ud55c\ub2e4": [786, 788, 806, 818, 821], "\ub9ac\ud134\ud55c\ub2e4\ub294": 786, "\ub9ac\ud134\ud574\uc57c": 809, "\ub9ac\ud134\ud574\uc57c\ud55c\ub2e4": 809, "\ub9b4\ub9ac\uc988\uc5d0\uc11c": 787, "\ub9c1\ud06c": [786, 804, 817, 819, 821], "\ub9c1\ud06c\ub97c": 783, "\ub9c8\ub2e4": [786, 809], "\ub9c8\uc2a4\ud06c": 783, "\ub9c8\uc2a4\ud06c\ub294": 783, "\ub9c8\uc2a4\ud06c\ub4e4\uc744": 783, "\ub9c8\uc2a4\ud06c\ub85c": 818, "\ub9c8\uc2a4\ud06c\ub85c\uc11c": 821, "\ub9c8\uc2a4\ud06c\ub97c": 783, "\ub9c8\uc2a4\ud130": 789, "\ub9c8\uc9c0\ub9c9": [798, 799, 801, 805, 806, 811, 815], "\ub9c8\uc9c0\ub9c9\uc5d0\ub294": 814, "\ub9c8\uc9c0\ub9c9\uc73c\ub85c": [799, 804, 816, 819], "\ub9c8\uce5c": 783, "\ub9cc": 807, "\ub9cc\ub4dc\ub294": [779, 783, 786, 788, 792, 795, 796, 798, 805, 806, 810, 811, 813, 820], "\ub9cc\ub4dc\ub294\ub370": [792, 813], "\ub9cc\ub4e0": [788, 803, 809, 817, 818], "\ub9cc\ub4e0\ub2e4": [788, 792, 806, 811, 818, 819], "\ub9cc\ub4e4": [786, 787, 788, 792, 794, 805, 806, 814, 815, 819], "\ub9cc\ub4e4\uac8c": 805, "\ub9cc\ub4e4\uace0": [786, 795, 796, 810, 820], "\ub9cc\ub4e4\uace0\uc790": [804, 818], "\ub9cc\ub4e4\uae30": [785, 787, 788, 795, 797, 799, 808, 810, 817, 821], "\ub9cc\ub4e4\uba74": 792, "\ub9cc\ub4e4\uc5b4": [786, 806], "\ub9cc\ub4e4\uc5b4\ub0b4\uae30": 819, "\ub9cc\ub4e4\uc5b4\ub0b4\ub294": 805, "\ub9cc\ub4e4\uc5b4\ub0b8\ub2e4": [809, 819], "\ub9cc\ub4e4\uc5b4\ub0bc": 815, "\ub9cc\ub4e4\uc5b4\uc11c": [801, 819], "\ub9cc\ub4e4\uc5b4\uc57c": [786, 788, 795], "\ub9cc\ub4e4\uc5b4\uc57c\ud560": 805, "\ub9cc\ub4e4\uc5b4\uc84c\ub2e4\uba74": 805, "\ub9cc\ub4e4\uc5b4\uc9c0\uba74": [786, 788], "\ub9cc\ub4e4\uc5b4\uc9c4\ub2e4": [786, 791, 793], "\ub9cc\ub4e4\uc5b4\uc9c8": [788, 806], "\ub9cc\ub4e4\uc5c8\ub2e4": 783, "\ub9cc\ub4e4\uc5c8\ub2e4\uba74": 818, "\ub9cc\ub4e4\uc790": 781, "\ub9cc\uc57d": [781, 783, 786, 787, 788, 792, 796, 799, 801, 804, 805, 806, 807, 809, 811, 812, 817, 821], "\ub9cc\uc744": [787, 821], "\ub9cc\uc871\ud558\uc9c0": 796, "\ub9cc\uc871\ud574\uc57c": 810, "\ub9ce\uc740": [783, 786, 788, 801, 805, 807, 808, 819], "\ub9ce\uc774": [779, 780, 801, 813, 819, 820], "\ub9d0\ud558\uc790\uba74": 786, "\ub9de\uac8c": 808, "\ub9de\ub3c4\ub85d": [788, 811], "\ub9de\ucd94\uac83\uc744": 788, "\ub9de\ucd94\ub294": 788, "\ub9de\ucd98\ub2e4": 788, "\ub9de\ucd9c": 788, "\ub9e4": [786, 811], "\ub9e4\ub274\uc5bc\uc758": 792, "\ub9e4\ubc88": 811, "\ub9e4\uc6b0": [801, 811], "\ub9e4\ud551": 806, "\ub9e4\ud551\uc740": 805, "\ub9e4\ud551\uc744": [788, 806], "\ub9e4\ud551\uc774\ub2e4": 788, "\ub9e4\ud551\ud558\ub294": 816, "\ub9f4\ubc84": 799, "\ub9f4\ubc84\ub97c": 799, "\uba04\uc57d": 788, "\uba38\uc2e0": 789, "\uba38\uc2e0\ub4e4\uc5d0": [786, 788], "\uba38\uc2e0\ub4e4\uc758": [786, 789], "\uba38\uc2e0\ub7ec\ub2dd": 783, "\uba38\uc2e0\ub7ec\ub2dd\uc5d0\ub294": 783, "\uba38\uc2e0\uc5d0": [787, 788, 789], "\uba38\uc2e0\uc5d0\uc11c": [786, 788, 789], "\uba38\uc2e0\uc740": 789, "\uba38\uc2e0\uc744": 789, "\uba38\uc2e0\uc758": [786, 789], "\uba38\uc2e0\uc774": [786, 789], "\uba3c\uc800": [786, 805], "\uba40\ud2f0": [783, 807, 811, 818, 820, 821], "\uba4b\uc9c4": 819, "\uba54\ub274\uc5bc\uc5d0": 792, "\uba54\ubaa8\ub9ac": [801, 807, 808, 812], "\uba54\ubaa8\ub9ac\uac00": [804, 812], "\uba54\ubaa8\ub9ac\ub098": 811, "\uba54\ubaa8\ub9ac\ub97c": [801, 807, 812], "\uba54\ubaa8\ub9ac\uc5d0": [807, 817], "\uba54\ubaa8\ub9ac\uc640": 808, "\uba54\uc18c\ub4dc": 805, "\uba54\uc18c\ub4dc\ub294": 805, "\uba54\uc18c\ub4dc\ub85c": [808, 818], "\uba54\uc18c\ub4dc\ub97c": [795, 805, 818], "\uba54\uc18c\ub4dc\uc5d0": 818, "\uba54\uc18c\uc2a4\ub4e4": 805, "\uba54\uc2dc\uc9c0": [798, 808, 810, 811, 813, 816, 817, 819, 821], "\uba54\uc2dc\uc9c0\ub4e4": 799, "\uba54\uc2dc\uc9c0\ub4e4\uc5b4": 808, "\uba54\uc2dc\uc9c0\ub4e4\uc744": [798, 799], "\uba54\uc2dc\uc9c0\ub4e4\uc774": 814, "\uba54\uc2dc\uc9c0\ub97c": [798, 801, 805, 811, 821], "\uba54\uc2dc\uc9c0\uc758": 801, "\uba54\uc9c0\uc2dc": [797, 802, 817, 821], "\uba54\ucf13\ud50c\ub798\uc774\uc2a4\ub97c": 791, "\uba54\ud0c0": 788, "\uba54\ud0c0\uadf8\ub798\ud504": 796, "\uba54\ud0c0\uadf8\ub798\ud504\uc758": 796, "\uba54\ud0c0\ub370\uc774\ud130\ub97c": 786, "\uba54\ud551\uc744": 788, "\uba64\uba38\ub97c": 805, "\uba85\ub839": 788, "\uba85\ub839\uc73c\ub85c": 782, "\uba85\ub839\uc740": 788, "\uba85\ub839\uc744": 788, "\uba85\ub839\uc758": 788, "\uba85\ub839\uc774": 788, "\uba85\ub839\ud589\uc774\ub098": 786, "\uba85\uc2dc\ub41c": [789, 815], "\uba85\uc2dc\ub41c\ub2e4\uba74": 788, "\uba85\uc2dc\uc801\uc73c\ub85c": 786, "\uba85\uc2dc\uc801\uc778": 795, "\uba85\uc2dc\ud558\uace0": 796, "\uba85\uc2dc\ud558\uae30\ub9cc": 818, "\uba85\uc2dc\ud558\ub294": 788, "\uba85\uc2dc\ud558\uc9c0": 788, "\uba85\uc2dc\ud55c\ub2e4": 788, "\uba85\uc2dc\ud560": [796, 806], "\uba85\uc2dc\ud574\uc57c": [787, 815], "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4": 796, "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4\ub294": 811, "\uba85\ud655\ud558\uac8c": 796, "\uba87": [785, 786, 788, 804, 806, 810, 811, 820, 821], "\uba87\uac00\uc9c0": [790, 820], "\uba87\uac1c\uc758": 810, "\ubaa8\ub378": [783, 785, 786, 804, 808, 815, 818], "\ubaa8\ub378\uacfc": 820, "\ubaa8\ub378\uacfc\ub294": 820, "\ubaa8\ub378\ub85c": [786, 818], "\ubaa8\ub378\ub9c1": [796, 802], "\ubaa8\ub378\ub9c1\uc5d0": 791, "\ubaa8\ub378\ub9c1\uc5d0\uc11c": [796, 800], "\ubaa8\ub378\ub9c1\ud558\ub294\ub370": 791, "\ubaa8\ub378\uc5d0": [783, 809, 818, 819, 821], "\ubaa8\ub378\uc5d0\uc11c\ub294": 821, "\ubaa8\ub378\uc740": [806, 809, 818, 820, 821], "\ubaa8\ub378\uc744": [786, 804, 808, 812, 813, 818, 819, 820, 821], "\ubaa8\ub378\uc758": [786, 804, 812, 819], "\ubaa8\ub378\uc774": [786, 807, 819], "\ubaa8\ub450": [788, 791, 796, 799, 805, 807, 808, 815, 819, 820], "\ubaa8\ub450\ub97c": 809, "\ubaa8\ub450\uc5d0": 805, "\ubaa8\ub4c8": [785, 797, 804, 811, 817, 821], "\ubaa8\ub4c8\uacfc": [815, 818], "\ubaa8\ub4c8\ub3c4": 786, "\ubaa8\ub4c8\ub4e4\uc740": [810, 811, 814], "\ubaa8\ub4c8\ub4e4\uc744": 821, "\ubaa8\ub4c8\ub9cc\uc744": 811, "\ubaa8\ub4c8\uc5d0": [815, 816, 819], "\ubaa8\ub4c8\uc5d0\uc11c": [806, 813, 815], "\ubaa8\ub4c8\uc740": [813, 814, 815, 818], "\ubaa8\ub4c8\uc744": [786, 804, 810, 811, 812, 813, 816, 817, 818, 821], "\ubaa8\ub4c8\uc758": [786, 808, 810, 813, 814, 818, 821], "\ubaa8\ub4c8\uc774": [786, 810, 811, 816, 821], "\ubaa8\ub4c8\uc774\uace0": 816, "\ubaa8\ub4c8\uc774\ub2e4": 814, "\ubaa8\ub4c8\uc778": 821, "\ubaa8\ub4c8\ucc98\ub7fc": 816, "\ubaa8\ub4dc\ub294": 786, "\ubaa8\ub4dc\ub85c": 786, "\ubaa8\ub4dc\uc5d0\uc11c\ub294": 786, "\ubaa8\ub4dc\uc640": 786, "\ubaa8\ub4e0": [785, 786, 787, 788, 789, 791, 792, 794, 795, 796, 799, 802, 804, 805, 807, 808, 809, 810, 811, 815, 818, 819, 821], "\ubaa8\uc544\uc11c": 796, "\ubaa8\uc74c\uc774\ub2e4": 782, "\ubaa9\ub85d": 819, "\ubaa9\ub85d\uc5d0": 819, "\ubaa9\ub85d\uc740": [799, 806, 811, 821], "\ubaa9\ub85d\uc744": [806, 811], "\ubaa9\ub85d\uc774": 805, "\ubaa9\uc801": 816, "\ubaa9\uc801\uc73c\ub85c": [796, 808], "\ubaa9\uc801\uc73c\ub85c\ub294": 808, "\ubaa9\uc801\uc740": 780, "\ubaa9\uc801\uc9c0": [788, 799, 805, 809, 811, 814, 815, 816], "\ubaa9\uc801\uc9c0\uac00": 805, "\ubaa9\uc801\uc9c0\uc640": 796, "\ubaa9\uc801\uc9c0\uc778": 805, "\ubb38\ubc95\uc744": 796, "\ubb38\uc790": 796, "\ubb38\uc790\ub4e4\uacfc": 788, "\ubb38\uc790\ub85c": 788, "\ubb38\uc790\ub9cc\ub4e4": 796, "\ubb38\uc790\uc5f4": 796, "\ubb38\uc790\uc5f4\uc774\ub2e4": [799, 802], "\ubb38\uc7a5\uc73c\ub85c": 818, "\ubb38\uc81c\ub294": 819, "\ubb38\uc81c\ub4e4\uacfc": 819, "\ubb38\uc81c\ub97c": [812, 815], "\ubb38\uc81c\uc640": 819, "\ubb38\uc81c\uc778": 818, "\ubbf8\ub2c8": [783, 785, 786, 803, 804, 808, 815, 819], "\ubbf8\ub2c8\ubc30\uce58": [786, 787, 809], "\ubbf8\ub2c8\ubc30\uce58\ub97c": 808, "\ubbf8\ub2c8\ubc30\uce58\ub9cc": 808, "\ubbf8\ub2c8\ubc30\uce58\uc5d0": [809, 811], "\ubbf8\ub2c8\ubc30\uce58\uc5d0\uc11c": 806, "\ubbf8\ub2c8\ubc30\uce58\uc640": 808, "\ubbf8\ub2c8\ubc30\uce58\uc758": [806, 808], "\ubbf8\ub798\uc758": 818, "\ubbf8\ub9ac": 821, "\ubbf8\ub9cc\uc758": 807, "\ubc0f": [783, 784, 786, 787, 790, 792, 793, 795, 796, 797, 798, 804, 805, 808, 812, 815, 817, 819, 821], "\ubc11\uc904": 788, "\ubc14\uafb8\uace0": 787, "\ubc14\uafb8\uae30\ub9cc": 805, "\ubc14\uafb8\ub294": 810, "\ubc14\uafb8\uba74": 812, "\ubc14\ub010": 783, "\ubc14\ub014": 787, "\ubc16\uc5d0\uc11c": [780, 799], "\ubc18\uacfc": 801, "\ubc18\ub300": 806, "\ubc18\ub300\ub85c": 791, "\ubc18\ub300\uc758": 788, "\ubc18\ub4dc\uc2dc": [799, 810], "\ubc18\uba74": 808, "\ubc18\uba74\uc5d0": 801, "\ubc18\ubcf5": 804, "\ubc18\ubcf5\ub41c\ub2e4": 804, "\ubc18\ubcf5\uc801\uc73c\ub85c": 820, "\ubc18\ubcf5\ud574\uc11c": 821, "\ubc18\uc774": 801, "\ubc18\ud658\ud558\ub294": 811, "\ubc1b\uace0": [786, 816, 821], "\ubc1b\ub294": [809, 815], "\ubc1b\ub294\ub2e4": [788, 795, 802, 811, 815, 816], "\ubc1b\ub294\ub2e4\ub294": [806, 809, 811], "\ubc1b\ub294\ub370": 799, "\ubc1b\uc544\ub4e4\uc778\ub2e4": 794, "\ubc1b\uc544\uc11c": 809, "\ubc1b\uc544\uc57c\ud558\uace0": 809, "\ubc1b\uc744": 811, "\ubc1c\ub824\uc640\uc11c": 819, "\ubc1c\uc0dd\uc2dc\ud0a4\ub294\ub370": 805, "\ubc1c\uc0dd\ud560": [786, 808], "\ubc25\ubc99\uc73c\ub85c": 800, "\ubc29\ubc95": [786, 795, 798, 815], "\ubc29\ubc95\uacfc": [805, 806, 811, 817], "\ubc29\ubc95\ub3c4": 804, "\ubc29\ubc95\ub4e4\uc5d0": 792, "\ubc29\ubc95\ub4e4\uc744": [795, 805], "\ubc29\ubc95\uc5d0": [783, 801, 817], "\ubc29\ubc95\uc73c\ub85c": [786, 788, 803, 807], "\ubc29\ubc95\uc73c\ub85c\ub294": 794, "\ubc29\ubc95\uc740": [783, 788, 792, 796, 801, 804, 808, 812, 818, 819, 820, 821], "\ubc29\ubc95\uc744": [779, 780, 782, 783, 788, 798, 799, 805, 808, 809, 812, 813, 818, 821], "\ubc29\ubc95\uc774\ub2e4": [783, 803, 807], "\ubc29\uc2dd\uc73c\ub85c": [798, 805], "\ubc29\uc2dd\uc744": 785, "\ubc29\uc2dd\uc758": 813, "\ubc29\uc9c0\ud558\ub294": 786, "\ubc29\ud5a5\uc131": [791, 805], "\ubc29\ud5a5\uc131\uc5d0": 791, "\ubc29\ud5a5\uc131\uc744": 791, "\ubc29\ud5a5\uc131\uc774": 791, "\ubc29\ud5a5\uc744": 795, "\ubc29\ud5a5\uc774": 792, "\ubc30\uc5f4": [796, 806, 809, 811], "\ubc30\uc5f4\uacfc": 809, "\ubc30\uc5f4\uc758": 809, "\ubc30\uc81c\ud558\uace0\uc790": 806, "\ubc30\uc81c\ud558\ub294": 806, "\ubc30\uce58": [783, 785, 786, 803, 804, 808, 815], "\ubc30\uce58\ub4e4\uc744": 786, "\ubc30\uce58\ub4e4\uc758": 811, "\ubc30\uce58\ub85c\ubd80\ud130": 806, "\ubc30\uce58\ub97c": [785, 786, 799, 804, 819], "\ubc30\uce58\uc548\uc5d0": 806, "\ubc30\uce58\uc5d0": [799, 819], "\ubc30\uce58\uc5d0\uc11c": 804, "\ubc31\uc564\ub4dc\ub9cc": 785, "\ubc31\uc5d4\ub4dc": [792, 813], "\ubc31\uc5d4\ub4dc\ub85c": [813, 817], "\ubc31\uc5d4\ub4dc\ub97c": 813, "\ubc84\ub9b0\ub2e4\ub294": 819, "\ubc84\uc804": 797, "\ubc84\uc804\ub3c4": [810, 819], "\ubc84\uc804\uc758": 788, "\ubc84\uc804\uc774\ub2e4": 818, "\ubc84\ud2f1\uc2a4\ub4e4": 791, "\ubc88": 821, "\ubc88\uc5ed\ud55c": 797, "\ubc88\ud638": 795, "\ubc88\ud638\uac00": [789, 795], "\ubc88\ud638\ub294": 795, "\ubc88\ud638\ub3c4": 789, "\ubc88\ud638\ub97c": 795, "\ubc94\uc704\ub3c4": 788, "\ubc94\uc704\ub97c": 788, "\ubc94\uc704\uc5d0": 783, "\ubc94\uc704\uc758": 821, "\ubc94\uc8fc\ud615": 818, "\ubc95\uc744": 804, "\ubc95\uce59\uc758": 788, "\ubca0\uce58\ub4e4\uc5d0": 806, "\ubca1\ud130": [793, 818], "\ubca1\ud130\ub294": 788, "\ubca1\ud130\ub4e4\uc758": 788, "\ubca1\ud130\ub97c": 788, "\ubca1\ud130\uc778": 788, "\ubca4\uce58\ub9c8\ud0b9": 782, "\ubcc0\uacbd\ub418\uc5c8\ub294\uc9c0": 781, "\ubcc0\uacbd\uc740": 785, "\ubcc0\uacbd\ud558\uae30": 811, "\ubcc0\uacbd\ud574\uc11c": 818, "\ubcc0\uacbd\ud574\uc57c\ud560": 811, "\ubcc0\uc218\ub4e4": 788, "\ubcc0\ud615": 800, "\ubcc0\ud658": [786, 819], "\ubcc0\ud658\ub41c": 819, "\ubcc0\ud658\ub41c\ub2e4": 783, "\ubcc0\ud658\uc740": 796, "\ubcc0\ud658\uc744": 795, "\ubcc0\ud658\ud558\uace0": 788, "\ubcc0\ud658\ud558\uae30": 792, "\ubcc0\ud658\ud558\ub294": [787, 805], "\ubcc0\ud658\ud558\ub294\ub370": 792, "\ubcc0\ud658\ud558\ub3c4\ub85d": 788, "\ubcc0\ud658\ud558\uba74": [783, 792], "\ubcc0\ud658\ud558\uba74\uc11c": 805, "\ubcc0\ud658\ud55c\ub2e4": [787, 792, 796], "\ubcc0\ud658\ud560": [795, 796], "\ubcc0\ud658\ud574\uc11c": 792, "\ubcc4\ub3c4\ub85c": 788, "\ubcc4\ub3c4\ub85d": 819, "\ubcc4\ub3c4\uc758": [796, 820, 821], "\ubcc4\ub85c\ub3c4": 816, "\ubcd1\ub82c\ub85c": 788, "\ubcd1\ub82c\ud654": 785, "\ubcd1\ub82c\ud654\uc2dc\ud0a4\uace0": 785, "\ubcd1\ud569": [799, 818], "\ubcd1\ud569\uc774\uc804\uc5d0": 800, "\ubcd1\ud569\ud558\ub294": 818, "\ubcf4\ub0b4\uc8fc\uc138\uc694": 797, "\ubcf4\ub2e4": [786, 804, 805, 806, 807, 811], "\ubcf4\ub77c": 788, "\ubcf4\uba74": 796, "\ubcf4\uc5ec\uc8fc\uace0": 808, "\ubcf4\uc5ec\uc8fc\uae30": 810, "\ubcf4\uc5ec\uc8fc\ub294": 787, "\ubcf4\uc5ec\uc900\ub2e4": [779, 780, 782, 784, 785, 787, 788, 789, 795, 805, 806, 812], "\ubcf4\uc790": [786, 793, 795, 805, 808, 810], "\ubcf4\uc874\ud558\uace0": 796, "\ubcf4\ud1b5": [799, 821], "\ubcf4\ud1b5\uc740": [786, 799, 800, 806, 808, 814, 819], "\ubcf4\ud1b5\uc758": [816, 819], "\ubcf4\ud1b5\uc774\ub2e4": 806, "\ubcf4\ud638\ub97c": 786, "\ubcf5\uc0ac": 789, "\ubcf5\uc0ac\ub41c\ub2e4": 789, "\ubcf5\uc0ac\ub97c": 801, "\ubcf5\uc0ac\ud558\uace0": 785, "\ubcf5\uc0ac\ud558\uba74\uc11c": 796, "\ubcf5\uc0ac\ud55c\ub2e4": [789, 794], "\ubcf5\uc0ac\ud560": 794, "\ubcf5\uc7a1\ud558\ub2c8": 818, "\ubcf5\uc7a1\ud55c": [802, 805, 814, 819], "\ubcf8\uac83\uacfc": 821, "\ubcfc": 783, "\ubd80\ub3d9\uc18c\uc218\uc810": 799, "\ubd80\ub978\ub2e4": [795, 805, 811, 819], "\ubd80\ubd84": [783, 806], "\ubd80\ubd84\ub4e4\uc774": 786, "\ubd80\ubd84\uc5d0": 806, "\ubd80\ubd84\uc73c\ub85c": 806, "\ubd80\ubd84\uc740": [806, 815], "\ubd80\ubd84\uc744": [783, 786], "\ubd80\ubd84\uc758": [806, 815], "\ubd80\uc0b0": 786, "\ubd80\uc18d": [798, 806, 809, 818], "\ubd80\uc18d\ub418\ub294": 788, "\ubd80\uc218\uc801\uc73c\ub85c": 818, "\ubd80\uc5ec": 788, "\ubd80\uc5ec\ub41c\ub2e4": [788, 795], "\ubd80\uc5ec\ud558\uace0": 795, "\ubd80\uc5ec\ud558\uae30": 788, "\ubd80\uc5ec\ud558\ub294\ub370": 795, "\ubd80\uc5ec\ud55c\ub2e4": [788, 796], "\ubd80\ud130": [783, 786, 816, 818], "\ubd84\ub4e4\uc744": 804, "\ubd84\ub958": [786, 804, 809, 817, 820], "\ubd84\ub958\uac00": 819, "\ubd84\ub958\uae30": 820, "\ubd84\ub958\ub098": 819, "\ubd84\ub958\ub294": [783, 818, 819], "\ubd84\ub958\ub418\uc5b4": 821, "\ubd84\ub958\ub97c": [805, 817, 818], "\ubd84\ub958\uc5d0": 806, "\ubd84\ub958\uc5d0\uc11c": [806, 809], "\ubd84\ub958\uc640\ub294": 783, "\ubd84\ub958\uc744": [806, 809], "\ubd84\ub958\uc758": [783, 788, 806, 818], "\ubd84\ub958\uc774\ub2e4": 821, "\ubd84\ub958\ud558\uae30": 821, "\ubd84\ub958\ud558\ub294": [818, 820], "\ubd84\ub958\ud55c\ub2e4": 819, "\ubd84\ub958\ud560": 819, "\ubd84\ub9ac\ub418\uc5b4": 819, "\ubd84\uc0b0": 797, "\ubd84\uc0b0\ud558\uace0": 788, "\ubd84\uc0b0\ud558\ub294": 785, "\ubd84\uc0b0\ud559\uc2b5\uc774": 786, "\ubd84\uc11d\uc744": 783, "\ubd84\ud3ec": 809, "\ubd84\ud3ec\ub97c": 788, "\ubd84\ud3ec\uc5d0": 809, "\ubd84\ud3ec\uc5d0\uc11c": 820, "\ubd84\ud45c": 820, "\ubd84\ud560": [783, 786, 821], "\ubd84\ud560\uc744": 783, "\ubd84\ud560\ud558\uae30": 783, "\ubd84\ud560\ud558\uc5ec": 801, "\ubd88\uac00\ub2a5\ud558\ub2e4": [792, 793], "\ubd88\uac00\ub2a5\ud558\ub2e4\uba74": 799, "\ubd88\uade0\ud615\ud558\uac8c": 788, "\ubd88\ub9b0\ub2e4": 818, "\ubd88\ud544\uc694\ud55c": 801, "\ubd99\uc5ec\uc918\uc57c": 786, "\ube0c\ub79c\uce58\ub97c": 788, "\ube0c\ub85c\ub4dc\uce90\uc2a4\ud305\uc744": 799, "\ube14\ub85d": 815, "\ube14\ub85d\ub4e4\ub85c": 813, "\ube14\ub85d\uc774": 815, "\ube14\ub85d\uc77c": 816, "\ube44\uad50\ud558\ub294": 809, "\ube44\uad50\ud558\uba74": 815, "\ube44\uad50\ud558\uba74\uc11c": 820, "\ube44\uad50\ud574": 810, "\ube44\uad50\ud574\uc11c": 821, "\ube44\ub300\uce6d\uc801\uc778": 791, "\ube44\ub840\ud558\ub294": 809, "\ube44\ubc29\ud5a5\uc131": [791, 795], "\ube44\uc120\ud615\uc131": 821, "\ube44\uc2b7\ud558\uac8c": [786, 788, 811, 818], "\ube44\uc2b7\ud558\ub2e4": [783, 786, 806, 809, 810, 811, 820, 821], "\ube44\uc2b7\ud558\ub2e4\ub294": 810, "\ube44\uc2b7\ud558\uc9c0\ub9cc": 782, "\ube44\uc2b7\ud55c": [785, 786, 788, 812], "\ube44\ud2b8": 795, "\ube44\ud2b8\ub97c": 795, "\ube44\ud574\uc11c": 807, "\ube44\ud65c\uc131\ud654\ub418\uc5b4": 799, "\ube44\ud65c\uc131\ud654\ub418\uc5c8\uc744": 812, "\ube44\ud6a8\uc728\uc801\uc774\ub2e4": 819, "\ube44\ud6a8\uc728\uc801\uc778": 801, "\ube4c\ub4dc\uc778": [809, 811, 819, 821], "\ube4c\ub529": 813, "\ube4c\ud2b8\uc778": [783, 784, 798, 801, 810, 812, 821], "\ube4c\ud2b8\uc778\uc73c\ub85c": 806, "\ube60\ub974\uac8c": [783, 819], "\ube60\ub974\uace0": [795, 801], "\ube60\ub974\ub2e4": 812, "\ube60\ub974\uc9c0\ub294": 792, "\ube60\ub978": 795, "\ube68\uac04": 805, "\ube68\uac04\uc0c9": 805, "\ubfd0\ub9cc": 821, "\ubfd0\ub9cc\uc544\ub2c8\ub77c": 786, "\ubfd0\uc774\ub2e4": [809, 810, 811, 819], "\ubfd0\uc784\uc744": 796, "\uc0ac\ub77c\uc838\ub3c4": 786, "\uc0ac\ub78c\ub4e4": 791, "\uc0ac\ub78c\ub4e4\uacfc": 791, "\uc0ac\ub78c\ub4e4\uc758": 819, "\uc0ac\uc2e4\ub4e4": 793, "\uc0ac\uc2e4\uc744": 806, "\uc0ac\uc6a9": [786, 812, 818, 821], "\uc0ac\uc6a9\uacfc": 801, "\uc0ac\uc6a9\ub418\uace0": 814, "\uc0ac\uc6a9\ub418\uae30": [783, 792, 805], "\uc0ac\uc6a9\ub418\ub294": [779, 783, 786, 791, 796, 799, 800, 801, 803, 813, 814, 815, 819, 821], "\uc0ac\uc6a9\ub418\ub294\ub370": 812, "\uc0ac\uc6a9\ub418\uc5b4\uc57c": 789, "\uc0ac\uc6a9\ub41c": [786, 788, 799], "\uc0ac\uc6a9\ub41c\ub2e4": [786, 788, 789, 792, 795, 805, 808, 816, 819], "\uc0ac\uc6a9\ub41c\ub2e4\uba74": 791, "\uc0ac\uc6a9\ub41c\uba70": 812, "\uc0ac\uc6a9\ub420": [785, 786, 788, 789, 805, 806, 809, 818, 821], "\uc0ac\uc6a9\ub7c9\uc744": [801, 812], "\uc0ac\uc6a9\ubc95\uc740": [803, 805], "\uc0ac\uc6a9\ubc95\uc744": [782, 799], "\uc0ac\uc6a9\uc790": [793, 799], "\uc0ac\uc6a9\uc790\uac00": [786, 788, 796], "\uc0ac\uc6a9\uc790\ub294": [786, 787, 788, 789, 799], "\uc0ac\uc6a9\uc790\ub4e4\uacfc": 791, "\uc0ac\uc6a9\uc790\ub4e4\uc740": 788, "\uc0ac\uc6a9\uc790\uc758": 789, "\uc0ac\uc6a9\ud558\uaca0\ub2e4": 817, "\uc0ac\uc6a9\ud558\uace0": [788, 800, 806, 811], "\uc0ac\uc6a9\ud558\uae30": [788, 790, 795, 804, 809, 811], "\uc0ac\uc6a9\ud558\uae30\ub97c": 809, "\uc0ac\uc6a9\ud558\ub294": [783, 788, 795, 799, 801, 805, 807, 809, 812, 818, 819, 820, 821], "\uc0ac\uc6a9\ud558\ub294\ub370": [783, 804], "\uc0ac\uc6a9\ud558\ub294\uc9c0\ub294": 791, "\uc0ac\uc6a9\ud558\ub824\uba74": 806, "\uc0ac\uc6a9\ud558\uba70": 809, "\uc0ac\uc6a9\ud558\uba74": [792, 795, 801, 804], "\uc0ac\uc6a9\ud558\uba74\uc11c": 812, "\uc0ac\uc6a9\ud558\uc790": 819, "\uc0ac\uc6a9\ud558\uc9c0": [788, 812, 819], "\uc0ac\uc6a9\ud558\uc9c0\ub9cc": 808, "\uc0ac\uc6a9\ud55c": [783, 786, 788, 790, 795, 804, 807, 808, 813, 821], "\uc0ac\uc6a9\ud55c\ub2e4": [783, 787, 788, 789, 795, 806, 807, 809, 810, 817, 818, 819, 821], "\uc0ac\uc6a9\ud55c\ub2e4\ub294": [786, 806, 809], "\uc0ac\uc6a9\ud55c\ub2e4\uba74": 791, "\uc0ac\uc6a9\ud560": [783, 786, 788, 792, 795, 796, 806, 807, 809, 811, 817, 818], "\uc0ac\uc6a9\ud574": 819, "\uc0ac\uc6a9\ud574\ub3c4": 796, "\uc0ac\uc6a9\ud574\uc11c": [779, 783, 786, 787, 788, 789, 790, 791, 794, 795, 796, 798, 799, 801, 803, 805, 806, 808, 811, 812, 816, 817, 818, 819, 820, 821], "\uc0ac\uc6a9\ud574\uc57c": [786, 787, 788], "\uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4": [795, 806], "\uc0ac\uc6a9\ud588\ub2e4\uba74": 781, "\uc0ac\uc6a9\ud588\ub358": 809, "\uc0ac\uc774\uc5d0": [791, 806, 819, 820], "\uc0ac\uc774\uc758": [788, 805, 820], "\uc0ac\uc804": [802, 806, 809, 816], "\uc0ac\uc804\ub4e4\uc744": [806, 809], "\uc0ac\uc804\uc5d0\uc11c": 821, "\uc0ac\uc804\uc744": [796, 806, 809, 811, 816, 818, 821], "\uc0ac\uc804\uc758": 802, "\uc0ad\uc81c\ud558\uac8c\ud558\uae30": 786, "\uc0ad\uc81c\ud558\uae30\ub3c4": 806, "\uc0ad\uc81c\ud558\uae30\ub97c": 805, "\uc0b4\ud3b4\ubcf4\uaca0\ub2e4": 815, "\uc0b4\ud3b4\ubcf4\uae30": 805, "\uc0b4\ud3b4\ubcf4\uc790": [783, 799, 805, 811, 812], "\uc0c1\uad00\ud558\uc9c0": 788, "\uc0c1\ub2f9\ud55c": 807, "\uc0c1\ub2f9\ud788": 784, "\uc0c1\ub300": 789, "\uc0c1\ub300\uc801\uc73c\ub85c": [788, 819], "\uc0c1\uc138\ud55c": [806, 811], "\uc0c1\uc18d\ud55c": 805, "\uc0c1\uc18d\ud55c\ub2e4": 813, "\uc0c1\uc18d\ud574\uc11c": [780, 781], "\uc0c1\uc218": 820, "\uc0c1\uc704": 805, "\uc0c1\ud0dc\ub97c": 804, "\uc0c1\ud488": 791, "\uc0c1\ud638\uad00\uacc4\ub97c": 791, "\uc0c1\ud638\uc791\uc6a9\uc744": 785, "\uc0c1\ud669\uc5d0\uc11c": 819, "\uc0c8\ub85c\uc6b4": [786, 787, 788, 796, 804, 810], "\uc0d8\ub4e4\ub85c": 820, "\uc0d8\ub4e4\uc740": 820, "\uc0d8\ud50c": 809, "\uc0d8\ud50c\ub41c": [806, 809, 815], "\uc0d8\ud50c\ub7ec": [785, 786, 789, 804], "\uc0d8\ud50c\ub7ec\uac00": [807, 809], "\uc0d8\ud50c\ub7ec\ub294": [786, 811], "\uc0d8\ud50c\ub7ec\ub2e4": 809, "\uc0d8\ud50c\ub7ec\ub4e4\uacfc": 804, "\uc0d8\ud50c\ub7ec\ub4e4\uc5d0": 806, "\uc0d8\ud50c\ub7ec\ub4e4\uc740": [809, 811], "\uc0d8\ud50c\ub7ec\ub4e4\uc758": 811, "\uc0d8\ud50c\ub7ec\ub85c": 805, "\uc0d8\ud50c\ub7ec\ub97c": [805, 806, 809, 811], "\uc0d8\ud50c\ub7ec\uc640": 785, "\uc0d8\ud50c\ub9c1": [780, 809, 819], "\uc0d8\ud50c\ub9c1\uacfc": [786, 808], "\uc0d8\ud50c\ub9c1\ub41c": 820, "\uc0d8\ud50c\ub9c1\ub41c\ub2e4": 820, "\uc0d8\ud50c\ub9c1\ub420\uc9c0\ub97c": 786, "\uc0d8\ud50c\ub9c1\uc5d0": 804, "\uc0d8\ud50c\ub9c1\uc5d0\uc11c": [787, 811], "\uc0d8\ud50c\ub9c1\uc73c\ub85c": 808, "\uc0d8\ud50c\ub9c1\uc740": [786, 806, 807, 808], "\uc0d8\ud50c\ub9c1\uc744": [786, 804, 805, 807, 808, 820], "\uc0d8\ud50c\ub9c1\uc774": 808, "\uc0d8\ud50c\ub9c1\ud558\ub294": 809, "\uc0d8\ud50c\ub9c1\ud55c\ub2e4": [785, 787, 809], "\uc0d8\ud50c\ud558\ub294": 805, "\uc0dd\uac01\ud574": [805, 808], "\uc0dd\uac01\ud574\ubcf4\uc790": [804, 805], "\uc0dd\uae38": 812, "\uc0dd\ub7b5\ud55c\ub2e4": [783, 818], "\uc0dd\ub7b5\ud574\uc11c": 783, "\uc0dd\ub7b5\ud588\ub2e4": 783, "\uc0dd\uc120\ud55c": 788, "\uc0dd\uc131": [785, 792, 799, 813, 815], "\uc0dd\uc131\ub418\ub294": 815, "\uc0dd\uc131\ub41c": [786, 792, 806, 811], "\uc0dd\uc131\ub41c\ub2e4": [788, 816], "\uc0dd\uc131\uc2dc": 794, "\uc0dd\uc131\uc740": 786, "\uc0dd\uc131\uc744": [786, 809], "\uc0dd\uc131\uc774": 786, "\uc0dd\uc131\ud558\uace0": [786, 787, 793, 799, 805], "\uc0dd\uc131\ud558\uae30": [783, 785, 786, 790, 795], "\uc0dd\uc131\ud558\ub294": [786, 792, 795, 805, 811], "\uc0dd\uc131\ud558\ub294\uac83\uc744": 805, "\uc0dd\uc131\ud558\ub294\ub370": [786, 788, 805], "\uc0dd\uc131\ud558\uba70": 804, "\uc0dd\uc131\ud558\uba74": 820, "\uc0dd\uc131\ud558\uc9c0\ub9cc": 805, "\uc0dd\uc131\ud55c": [788, 809, 811, 817], "\uc0dd\uc131\ud55c\ub2e4": [786, 789, 793, 799, 805, 811], "\uc0dd\uc131\ud560": [786, 787, 796, 805, 818, 819], "\uc0e4\ub4dc": 786, "\uc11c\ub85c": [783, 788, 790, 791, 796, 806, 821], "\uc11c\ubc84": [785, 786], "\uc11c\ubc84\ub4e4\uac04\uc758": 786, "\uc11c\ubc84\ub4e4\uacfc": [785, 786], "\uc11c\ubc84\ub4e4\uc5d0\uc11c": 786, "\uc11c\ubc84\ub4e4\uc740": 785, "\uc11c\ubc84\ub4e4\uc744": [785, 786], "\uc11c\ubc84\ub4e4\uc774": 786, "\uc11c\ubc84\uc5d0": 787, "\uc11c\ube0c": [781, 783, 785, 787, 788, 805, 806, 807, 808, 815], "\uc11c\ube0c\uadf8\ub798\ud504": [815, 816], "\uc11c\ube0c\uadf8\ub798\ud504\ub97c": [796, 803], "\uc11c\ube0c\uadf8\ub798\ud504\uc5d0": 803, "\uc11c\ube0c\ubaa8\ub4c8": 814, "\uc11c\ube0c\ubaa8\ub4c8\ub4e4\uc744": 814, "\uc11c\ube0c\ubaa8\ub4c8\uc740": 814, "\uc11c\ube0c\uc14b\uc5d0": 788, "\uc11c\ube0c\uc14b\uc744": 786, "\uc11c\ube0c\ud074\ub798\uc2a4": 780, "\uc11c\ube0c\ud074\ub798\uc2a4\ub85c": 779, "\uc11c\ube0c\ud074\ub798\uc2a4\uc5d0\uc11c": 780, "\uc11c\uce58\ud558\ub294": 780, "\uc11e\uace0": 788, "\uc11e\uae30\uc804\uc758": 788, "\uc11e\ub294\ub2e4": 788, "\uc11e\uc5b4\uc57c\ud55c\ub2e4": 788, "\uc11e\uc5b4\uc900\ub2e4": 788, "\uc11e\uc778": 788, "\uc120\uc5b8\ub418\uc57c": 786, "\uc120\ud0dd": 808, "\uc120\ud0dd\uc744": 808, "\uc120\ud0dd\uc801\uc73c\ub85c": 789, "\uc120\ud0dd\uc801\uc778": 788, "\uc120\ud0dd\ud55c\ub2e4": [787, 804, 809, 812], "\uc120\ud0dd\ud560\uc9c0": 818, "\uc120\ud0dd\ud560\uc9c0\ub97c": 818, "\uc120\ud589": 805, "\uc120\ud615": 801, "\uc124\uba85\ub41c": 815, "\uc124\uba85\uc740": 818, "\uc124\uba85\uc744": [788, 806, 811], "\uc124\uba85\ud558\uace0": 779, "\uc124\uba85\ud558\uae30": 817, "\uc124\uba85\ud558\uae30\uc5d0\ub294": 818, "\uc124\uba85\ud55c": [809, 820], "\uc124\uba85\ud55c\ub2e4": [782, 783, 798, 805, 811, 821], "\uc124\uba85\ud588\ub4ef\uc774": 805, "\uc124\uc815": [785, 786, 789, 814], "\uc124\uc815\ub41c": 815, "\uc124\uc815\ub4e4\uc744": 788, "\uc124\uc815\uc5d0\uc11c\ub294": 799, "\uc124\uc815\uc73c\ub85c": [787, 788], "\uc124\uc815\uc73c\ub85c\ub294": [786, 799], "\uc124\uc815\uc740": 788, "\uc124\uc815\uc744": 788, "\uc124\uc815\ud558\uace0": 796, "\uc124\uc815\ud558\uae30": 807, "\uc124\uc815\ud558\ub294": 788, "\uc124\uc815\ud55c\ub2e4": 816, "\uc124\uc815\ud574\uc57c": 788, "\uc124\uce58\ub294": 788, "\uc124\uce58\ud558\ub294": 788, "\uc124\uce58\ud558\uc790": 788, "\uc124\uce58\ud55c\ub2e4": [782, 788], "\uc131\ub2a5": [804, 815], "\uc131\ub2a5\uc740": 812, "\uc131\ub2a5\uc774": 792, "\uc131\ub9bd\ud558\uae30": 801, "\uc131\uc9c8": 819, "\uc138": 788, "\uc138\uac00\uc9c0": [786, 815], "\uc138\uac1c\uc758": 811, "\uc138\ud305\uc5d0\uc11c": 786, "\uc139\uc158": 786, "\uc140\ud504": 788, "\uc148\ud50c\ub4e4": 820, "\uc14b": 788, "\uc14b\ub3c4": 786, "\uc14b\uc5d0": [786, 788, 811], "\uc14b\uc73c\ub85c": 786, "\uc14b\uc744": [785, 786], "\uc14b\uc758": 821, "\uc14b\uc774": 818, "\uc18c\uac1c\ub294": 792, "\uc18c\uac1c\ub97c": 790, "\uc18c\uac1c\ud55c": [804, 817, 819, 821], "\uc18c\uac1c\ud55c\ub2e4": [779, 780, 788, 790, 792, 798, 808, 813], "\uc18c\uc15c": 791, "\uc18c\uc2a4": [783, 788, 799, 800, 805, 809, 811, 814, 815], "\uc18c\uc2a4\ub4e4\ub85c": 783, "\uc18c\uc2a4\ub4e4\ub85c\ubd80\ud130": 792, "\uc18c\uc2a4\ub85c\ubd80\ud130": 795, "\uc18c\uc2a4\ub97c": [783, 790, 795], "\uc18d\ub3c4": [807, 808], "\uc18d\ub3c4\ub3c4": 795, "\uc18d\ub3c4\ub97c": 788, "\uc18d\ub4dc\ub97c": 801, "\uc18d\uc131": 788, "\uc18d\uc131\ub4e4\uc744": 788, "\uc18d\uc131\ub4e4\uc758": 788, "\uc18d\uc131\uc744": [788, 793, 802, 818], "\uc18d\uc131\uc758": 788, "\uc18d\ud558\ub294": 788, "\uc18d\ud558\ub294\uc9c0\ub97c": 786, "\uc18d\ud55c": [788, 799, 805], "\uc18d\ud55c\ub2e4": 787, "\uc194\ub8e8\uc158\uc740": 788, "\uc194\ub8e8\uc158\uc744": 788, "\uc218": [780, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821], "\uc218\uac00": [801, 821], "\uc218\ub3c4": [787, 809, 815, 818], "\uc218\ub834\ud55c\ub2e4": 812, "\uc218\ub97c": [788, 805], "\uc218\ubc31\ub9cc": 804, "\uc218\ubcf4\ub2e4": 801, "\uc218\uc2dd\uc5d0\uc11c": 798, "\uc218\uc2ed\uc5b5": 788, "\uc218\uc2ed\uc5b5\uac1c\uc758": 804, "\uc218\uc5d0": 788, "\uc218\uc640": 786, "\uc218\uc758": [786, 787, 789, 805, 819], "\uc218\uc815\ud558\uba74": 785, "\uc218\uc815\ud560": 811, "\uc218\uc900\uc758": [786, 792, 816, 819], "\uc218\uc9d1\ud558\uace0": 786, "\uc218\uc9d1\ud558\uae30\ub97c": 821, "\uc218\uc9d1\ud558\ub294": 805, "\uc218\uc9d1\ud558\ub3c4\ub85d": 811, "\uc218\uc9d1\ud560": 805, "\uc218\ud559": [799, 815], "\uc218\ud559\uc801\uc73c\ub85c": 801, "\uc218\ud589": 789, "\uc218\ud589\ub418\uace0": 786, "\uc218\ud589\ub418\ub294": 821, "\uc218\ud589\ub418\ub294\uc9c0": 804, "\uc218\ud589\ub418\uba74": 786, "\uc218\ud589\ub41c": [789, 790, 805], "\uc218\ud589\ub41c\ub2e4": [780, 786, 788, 794, 812, 815, 819], "\uc218\ud589\ub420": [786, 799], "\uc218\ud589\uc774": 788, "\uc218\ud589\uc774\ub2e4": 786, "\uc218\ud589\ud558\uace0": [786, 821], "\uc218\ud589\ud558\uae30": [805, 812, 820], "\uc218\ud589\ud558\ub294": [785, 786, 789, 804, 808, 815, 821], "\uc218\ud589\ud558\uba74\uc11c": [785, 788], "\uc218\ud589\ud558\uc790": 818, "\uc218\ud589\ud558\uc9c0": 781, "\uc218\ud589\ud558\uc9c0\ub9cc": 819, "\uc218\ud589\ud55c\ub2e4": [788, 798, 808, 811, 812, 814, 815, 821], "\uc218\ud589\ud55c\ub2e4\uace0": 820, "\uc218\ud589\ud55c\ub2e4\ub294": 805, "\uc218\ud589\ud560": [785, 786, 788, 805, 808, 816, 819, 820], "\uc218\ud589\ud560\uc9c0\ub97c": 805, "\uc218\ud589\ud574\uc11c": [781, 819, 821], "\uc21c\uc11c\ub300\ub85c": 819, "\uc21c\uc11c\ub3c4": 780, "\uc21c\uc11c\ub3c4\ub294": 780, "\uc21c\uc11c\ub85c": 786, "\uc21c\uc11c\uc5d0": 795, "\uc21c\uc218": 799, "\uc21c\uc218\ud55c": 814, "\uc22b\uc790": 793, "\uc27d\uac8c": [780, 788], "\uc27d\ub2e4": 820, "\uc27d\uc9c0": 808, "\uc2a4\uce7c\ub77c": [791, 793, 800], "\uc2a4\ud06c\ub9bd\ud2b8": [786, 788, 789], "\uc2a4\ud06c\ub9bd\ud2b8\uac00": [786, 789], "\uc2a4\ud06c\ub9bd\ud2b8\ub294": 789, "\uc2a4\ud06c\ub9bd\ud2b8\ub4e4\uc744": 789, "\uc2a4\ud06c\ub9bd\ud2b8\ub97c": [785, 786, 788], "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0": 786, "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c": 789, "\uc2a4\ud06c\ub9bd\ud2b8\uc774\ub2e4": 812, "\uc2a4\ud0a4\ub9c8": 788, "\uc2a4\ud0a4\ub9c8\ub97c": 788, "\uc2a4\ud0a4\ub9c8\uc774\ub2e4": 796, "\uc2a4\ud0ed\uc5d0\uc11c": 799, "\uc2a4\ud1a0\ub9ac\uc9c0": 789, "\uc2ac\ub77c\uc774\uc2a4\ub294": 793, "\uc2dc\uac01\ud654\ud558\uba74": 804, "\uc2dc\uac04": 812, "\uc2dc\uac04\uc744": [780, 784, 808], "\uc2dc\ub098\ub9ac\uc624\ub4e4\ub85c": 804, "\uc2dc\ub4dc": [787, 805], "\uc2dc\ub9ac\uc988\ub85c": 796, "\uc2dc\uc2a4\ud15c\uc5d0\uc11c": 791, "\uc2dc\uc791": 789, "\uc2dc\uc791\uc73c\ub85c": 790, "\uc2dc\uc791\ud558\uace0": 796, "\uc2dc\uc791\ud558\uae30": 789, "\uc2dc\uc791\ud558\ub294": [788, 796, 805], "\uc2dc\uc791\ud55c\ub2e4": [795, 804], "\uc2dc\uc791\ud560": 819, "\uc2dc\uc791\ud574\uc11c": 808, "\uc2dd\ubcc4\ub420": 786, "\uc2e4\uc81c": [788, 815], "\uc2e4\uc81c\ub85c": 815, "\uc2e4\ud589": 787, "\uc2e4\ud589\ub418\ub294": [788, 789, 799], "\uc2e4\ud589\ub418\uba74": 786, "\uc2e4\ud589\ub418\uc57c": 789, "\uc2e4\ud589\ub41c": 788, "\uc2e4\ud589\ub41c\ub2e4": [785, 786, 788, 821], "\uc2e4\ud589\ub420": [786, 788, 789], "\uc2e4\ud589\ud558\uace0": [781, 786, 815], "\uc2e4\ud589\ud558\ub294": [785, 786, 801], "\uc2e4\ud589\ud558\uba74": 786, "\uc2e4\ud589\ud55c\ub2e4": 785, "\uc2e4\ud589\ud560": 786, "\uc2e4\ud589\ud574\uc11c": [785, 788], "\uc2e4\ud589\ud574\uc57c\ud558\uace0": 786, "\uc2e4\ud5d8\uc801\uc73c\ub85c": 787, "\uc2e4\ud5d8\uc801\uc778": 807, "\uc2f1\uae00": 786, "\uc2f6\ub2e4": [788, 796], "\uc2f6\ub2e4\uba74": [781, 788, 810, 811, 821], "\uc2f6\uc73c\uba74": 799, "\uc2f6\uc740": [786, 796, 803, 804, 820], "\uc30d\ub4e4": 791, "\uc30d\ub4e4\ub85c\ub9cc": 820, "\uc30d\uc5d0": 820, "\uc30d\uc73c\ub85c": 795, "\uc30d\uc744": [791, 809], "\uc30d\uc758": 809, "\uc30d\uc774\ub2e4": 819, "\uc30d\uc778": 810, "\uc313\uc544\uc11c": 821, "\uc4f0\uae30\ub97c": 786, "\uc4f0\uc774\ub294": [818, 819], "\uc544\ub2c8\uae30": 815, "\uc544\ub2c8\ub2e4": [786, 812], "\uc544\ub2c8\ub77c": [792, 819, 821], "\uc544\ub2cc": [810, 819], "\uc544\ub2cc\uc9c0\ub97c": 820, "\uc544\ub2d8\uc744": 810, "\uc544\ub798": [780, 785, 786, 787, 788, 789, 792, 793, 795, 796, 799, 805, 806, 808, 809, 810, 818, 820, 821], "\uc544\ub798\uc640": [795, 806, 811, 818, 819], "\uc544\ub798\uc758": [781, 796], "\uc544\ub9c8\ub3c4": 819, "\uc544\ubb34\uac83\ub3c4": 815, "\uc544\uc6c3\ud48b\ub4e4\uc744": 816, "\uc544\uc6c3\ud48b\uc740": 788, "\uc544\uc774\ub514\uc5b4\ub294": 820, "\uc544\uc774\ub514\uc5b4\ub97c": 819, "\uc544\uc774\ud15c\ub4e4\uc744": 809, "\uc544\uc774\ud15c\ub4e4\uc758": 791, "\uc544\uc774\ud15c\uc640": 809, "\uc544\uc774\ud15c\uc740": 819, "\uc544\uc774\ud15c\uc744": 811, "\uc544\uc8fc": [785, 792, 806, 808, 809], "\uc544\uc9c1": 812, "\uc544\ud06c\ub4e4": 791, "\uc544\ud0a4\ud14d\ud0c0": 799, "\uc548\uc5d0\ub294": 788, "\uc548\uc5d0\uc11c": 816, "\uc54a\uaca0\ub2e4": 792, "\uc54a\uace0": [781, 788, 796, 799, 812, 819], "\uc54a\uae30": [805, 807], "\uc54a\ub294": [788, 799, 809, 812], "\uc54a\ub294\ub2e4": [786, 788, 791, 807, 818, 819], "\uc54a\ub294\ub2e4\uba74": [796, 807], "\uc54a\ub294\uc9c0": 815, "\uc54a\ub2e4": [786, 792, 808, 818, 819, 820], "\uc54a\ub2e4\uba74": 817, "\uc54a\uc558\ub358": 806, "\uc54a\uc73c\uba74": 806, "\uc54a\uc740": [781, 783, 784, 788, 789, 805, 815], "\uc54a\uc744": 788, "\uc54a\uc9c0\ub9cc": 792, "\uc54c": 810, "\uc54c\uace0": [799, 820], "\uc54c\uace0\ub9ac\uc998\uacfc\ub294": 808, "\uc54c\uace0\ub9ac\uc998\ub4e4": 804, "\uc54c\uace0\ub9ac\uc998\uc740": 808, "\uc54c\uace0\ub9ac\uc998\uc744": [786, 819], "\uc54c\ub824\uc8fc\uace0": 811, "\uc54c\ub824\uc900\ub2e4": [788, 796], "\uc54c\ub824\uc9c4": 792, "\uc54c\uc218": 805, "\uc54c\uc544\ub0bc": 805, "\uc54c\uc544\ub450\uc790": [783, 796, 811, 821], "\uc54c\uc544\ubcf8\ub2e4": [783, 804, 817], "\uc54c\uc544\ubd24\ub2e4": 818, "\uc54c\ud30c\ubcb3": 788, "\uc55e": 818, "\uc55e\uc5d0": 815, "\uc55e\uc5d0\uc11c": [786, 811, 820], "\uc55e\uc73c\ub85c": 787, "\uc55e\uc73c\ub85c\uc758": 812, "\uc560\ub2c8\ub9e4\uc774\uc158\uc740": 808, "\uc564\ud2f0\ud2f0\ub4e4": 790, "\uc57d": 807, "\uc57d\uac04": [806, 819, 820], "\uc591\ubc29\ud5a5\uc5d0": 795, "\uc591\ubc29\ud5a5\uc758": 795, "\uc591\ubc29\ud5a5\uc774\uae30": 791, "\uc5b4\ub290\uc815\ub3c4": 806, "\uc5b4\ub514\uc11c\ub098": 781, "\uc5b4\ub5a4": [786, 788, 802, 805, 806, 811, 814, 820], "\uc5b4\ub5bb\uac8c": [779, 780, 786, 787, 788, 791, 798, 804, 805, 808, 810, 811, 814, 821], "\uc5b4\ub824\uc6b8": 804, "\uc5b8\uae09\ud55c": 799, "\uc5b8\uae09\ud588\ub4ef\uc774": 786, "\uc5b8\ub354\ud50c\ub85c\uc6b0": 812, "\uc5b8\uc5b4\uc5d0\uc11c": 795, "\uc5bb\uae30": [785, 788, 818], "\uc5bb\ub294": [787, 806], "\uc5bb\ub294\ub2e4": [806, 810, 811, 819], "\uc5bb\uc5b4\uc9c4": 816, "\uc5bb\uc740": [806, 816], "\uc5bb\uc744": [796, 805, 811, 817, 820], "\uc5bc\ub9c8\ub098": 805, "\uc5c5\ub370\uc774\ud2b8": [798, 799], "\uc5c5\ub370\uc774\ud2b8\ub97c": [786, 799, 803, 807, 812], "\uc5c5\ub370\uc774\ud2b8\ud558\uace0": 799, "\uc5c5\ub370\uc774\ud2b8\ud558\ub294": [805, 810, 812, 815, 819], "\uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4": [798, 799, 819], "\uc5c6\uac70\ub098": 791, "\uc5c6\uac8c": 815, "\uc5c6\uace0": 787, "\uc5c6\uae30": 801, "\uc5c6\ub294": [788, 792, 804, 808], "\uc5c6\ub294\uc9c0\ub97c": 811, "\uc5c6\ub2e4": [786, 787, 796, 805, 815, 819], "\uc5c6\ub2e4\ub294": [786, 808], "\uc5c6\uc560\uace0": 786, "\uc5c6\uc5b4\uc57c": 788, "\uc5c6\uc744": 791, "\uc5c6\uc774": 789, "\uc5d0": [783, 785, 786, 787, 788, 789, 796, 799, 802, 805, 806, 811, 812, 815, 816, 818, 819, 820, 821], "\uc5d0\ub294": [806, 811], "\uc5d0\ub7ec\ub97c": 805, "\uc5d0\uc11c": [779, 780, 781, 784, 786, 787, 788, 789, 791, 795, 800, 804, 805, 808, 809, 811, 815, 817, 819, 821], "\uc5d0\uc11c\ub294": [791, 818], "\uc5d0\uc11c\uc758": 810, "\uc5d0\uc9c0": [785, 787, 790, 791, 793, 798, 799, 801, 802, 804, 805, 809, 810, 817, 819, 820, 821], "\uc5d0\uc9c0\uac00": [788, 791, 795, 796, 806, 818, 819, 820], "\uc5d0\uc9c0\ub098": 788, "\uc5d0\uc9c0\ub294": [787, 791, 795, 796], "\uc5d0\uc9c0\ub3c4": 805, "\uc5d0\uc9c0\ub4e4\uacfc": 806, "\uc5d0\uc9c0\ub4e4\ub3c4": [791, 806], "\uc5d0\uc9c0\ub4e4\ub9cc\uc744": 805, "\uc5d0\uc9c0\ub4e4\uc5d0": [788, 806, 819], "\uc5d0\uc9c0\ub4e4\uc740": [793, 795, 806], "\uc5d0\uc9c0\ub4e4\uc744": [786, 790, 791, 795, 804, 806, 807, 809], "\uc5d0\uc9c0\ub4e4\uc758": [788, 791, 793, 796, 801, 805, 806, 809, 818, 820], "\uc5d0\uc9c0\ub4e4\uc774": [783, 788, 791, 802, 806, 820], "\uc5d0\uc9c0\ub85c": [791, 792, 820], "\uc5d0\uc9c0\ub85c\uc758": 801, "\uc5d0\uc9c0\ub97c": [785, 786, 787, 788, 792, 795, 796, 802, 805, 806, 809, 812], "\uc5d0\uc9c0\ubcc4": [798, 799], "\uc5d0\uc9c0\uc5d0": [788, 793, 795, 796, 798, 801, 818], "\uc5d0\uc9c0\uc5d0\ub294": 795, "\uc5d0\uc9c0\uc640": [786, 788, 796], "\uc5d0\uc9c0\uc640\ub294": 806, "\uc5d0\uc9c0\uc744": 805, "\uc5d0\uc9c0\uc758": [785, 786, 788, 790, 791, 796, 798, 799, 800, 802, 805, 806, 807, 809, 814, 818, 819, 820, 821], "\uc5d0\uc9c0\uc774\ub2e4": 795, "\uc5d0\uce58": [786, 792, 819], "\uc5d4\ud130\ub9ac": 820, "\uc5d4\ud2b8\ub9ac\ub97c": 788, "\uc5ec\uae30\uc11c": [787, 788, 805, 811, 814, 816, 818, 819, 820, 821], "\uc5ec\uae30\uc11c\ub294": [788, 817], "\uc5ec\uae30\uc11c\ubd80\ud130\ub294": 788, "\uc5ec\ub7ec": [783, 785, 786, 787, 788, 791, 792, 795, 796, 802, 804, 805, 810, 814, 815, 816, 819, 820, 821], "\uc5ec\ub7ec\uac00\uc9c0\uac00": 820, "\uc5ec\ub7ec\uac1c\uac00": 816, "\uc5ec\ub7ec\ubc88": 786, "\uc5ec\ub7ec\ubd84": 811, "\uc5ec\ub7ec\ubd84\ub9cc\uc758": [806, 811], "\uc5ec\ub7ec\ubd84\uc740": 821, "\uc5ec\ub7ec\ubd84\uc758": [799, 813], "\uc5ec\ubd80\ub97c": 788, "\uc5ec\uc804\ud788": [805, 808, 811], "\uc5ec\uc9c0\uac00": 799, "\uc5ed": 806, "\uc5ed\ubc29\ud5a5": 806, "\uc5ed\ubc29\ud5a5\uc758": 806, "\uc5ed\uc2dc": [782, 794, 811], "\uc5ed\ud560\uc744": [788, 798, 805], "\uc5f0\uacb0": [791, 815, 820], "\uc5f0\uacb0\ub418\ub294": 805, "\uc5f0\uacb0\ub418\uc5b4": [786, 788, 791], "\uc5f0\uacb0\ub418\uc9c0": 805, "\uc5f0\uacb0\ub41c": [795, 816, 820], "\uc5f0\uacb0\ub41c\ub2e4": 791, "\uc5f0\uacb0\ub85c": 791, "\uc5f0\uacb0\uc744": 786, "\uc5f0\uacb0\ud558\uace0": [801, 806, 818], "\uc5f0\uacb0\ud558\ub294": [791, 818, 819], "\uc5f0\uacb0\ud55c\ub2e4": [786, 791], "\uc5f0\uacb0\ud574\uc11c": 819, "\uc5f0\uad00\ub41c": [787, 796, 806, 816], "\uc5f0\uc0b0": [783, 786, 790, 794, 801, 804, 812, 819], "\uc5f0\uc0b0\uacfc": [785, 802], "\uc5f0\uc0b0\ub4e4\uc740": [812, 815, 819], "\uc5f0\uc0b0\ub4e4\uc744": 819, "\uc5f0\uc0b0\ub9cc": 799, "\uc5f0\uc0b0\uc18d\ub3c4\uac00": 801, "\uc5f0\uc0b0\uc5d0": 813, "\uc5f0\uc0b0\uc73c\ub85c": 799, "\uc5f0\uc0b0\uc740": [794, 813, 815], "\uc5f0\uc0b0\uc744": [785, 796, 798, 799, 801, 810, 815, 819], "\uc5f0\uc0b0\uc758": 801, "\uc5f0\uc0b0\uc774": [808, 815], "\uc5f0\uc18d\ub41c": [787, 788], "\uc5fc\ub450\ud574\ub450\uace0": 785, "\uc5fc\ub450\ud574\uc11c": 819, "\uc601\ubb38": 797, "\uc601\uc18d\uc801\uc778": 786, "\uc601\uc5ed\uc5d0\uc11c\ub294": 808, "\uc608": [786, 789, 792, 793, 795, 796, 812, 818], "\uc608\ub294": [783, 784, 789, 820], "\uc608\ub4e4": 791, "\uc608\ub4e4\ub85c": 808, "\uc608\ub4e4\uc744": 783, "\uc608\ub85c": [780, 783, 805, 810, 811], "\uc608\ub97c": [784, 786, 787, 788, 789, 790, 791, 793, 796, 799, 800, 805, 806, 807, 809, 810, 811, 818, 819, 820, 821], "\uc608\ub97c\ub4e4\uba74": 796, "\uc608\uc758": 793, "\uc608\uc774\ub2e4": [781, 788, 809], "\uc608\uc804\uacfc": 805, "\uc608\uc815\uc774\ub2e4": 786, "\uc608\uc81c": [809, 811, 818, 821], "\uc608\uc81c\uac00": 821, "\uc608\uc81c\ub294": [786, 787, 788, 800, 802, 806, 809, 811, 812, 819, 820], "\uc608\uc81c\ub4e4\uc740": 817, "\uc608\uc81c\ub4e4\uc744": [783, 784, 821], "\uc608\uc81c\ub4e4\uc774": 816, "\uc608\uc81c\ub85c": [783, 809, 813, 818], "\uc608\uc81c\ub97c": [795, 801, 817, 821], "\uc608\uc81c\uc5d0": 818, "\uc608\uc81c\uc5d0\uc11c": 818, "\uc608\uc81c\uc5d0\uc11c\uc640": 783, "\uc608\uc81c\uc640": 811, "\uc608\uc81c\uc758": [783, 793, 805], "\uc608\uc81c\uc774\ub2e4": [785, 788, 792, 796, 801, 806, 819, 820], "\uc608\uc81c\uc778": [809, 811], "\uc608\uc81c\ucc98\ub7fc": 781, "\uc608\uce21": [786, 804, 806, 811, 817, 818, 819, 821], "\uc608\uce21\uac12\uc744": 818, "\uc608\uce21\uacfc": 820, "\uc608\uce21\ub97c": 809, "\uc608\uce21\uc740": [809, 818, 820], "\uc608\uce21\uc744": [809, 818, 819, 820, 821], "\uc608\uce21\uc758": [809, 818], "\uc608\uce21\ud558\uace0": [818, 820, 821], "\uc608\uce21\ud558\uae30": [806, 809], "\uc608\uce21\ud558\uae30\ub9cc": 809, "\uc608\uce21\ud558\ub294": [806, 818, 820], "\uc608\uce21\ud558\uba74": 818, "\uc608\uce21\ud560": 818, "\uc624\ub958": 797, "\uc624\ub978\ucabd": 801, "\uc624\ub978\ucabd\uc73c\ub85c": 819, "\uc624\uc9c1": [782, 796], "\uc624\ud37c\ub808\uc774\ud130\ub294": 786, "\uc624\ud504\ub77c\uc778": 804, "\uc62c\ub824\uc11c": 807, "\uc62c\ub824\uc57c\ud560": 804, "\uc62e\uaca8\ub193\ub294\ub2e4": 806, "\uc62e\uae30\ub294": [781, 811], "\uc635\uc158": 814, "\uc635\uc158\ub4e4": 792, "\uc635\uc158\ub4e4\uc744": 792, "\uc635\uc158\uc5d0": 815, "\uc635\uc158\uc73c\ub85c": 814, "\uc640": [780, 783, 784, 785, 786, 787, 788, 790, 791, 793, 796, 799, 801, 805, 806, 807, 809, 811, 812, 813, 815, 816, 818, 819, 820, 821], "\uc644\ub8cc\ub418\uba74": [788, 799], "\uc644\ub8cc\ub41c\ub2e4": 786, "\uc644\ubcbd\ud55c": 783, "\uc644\uc804\ud558\uac8c": 807, "\uc644\uc804\ud55c": 785, "\uc644\uc804\ud788": [806, 819], "\uc678\ubd80": [783, 790, 795, 811], "\uc678\uc5d0": 788, "\uc67c\ucabd": 801, "\uc67c\ucabd\ubd80\ud130": 819, "\uc694\uad6c\ub418\uae30": 799, "\uc694\uad6c\ub7c9\uc740": 807, "\uc694\uc18c\ub294": 815, "\uc694\uc57d\ud55c\ub2e4": 819, "\uc6a9\ub3c4\ub97c": 818, "\uc6a9\ub7c9\uc744": 804, "\uc6b0\ub9ac\ub294": [786, 788, 808, 818, 821], "\uc6b0\uc120": [782, 786, 787, 796, 805, 818], "\uc6cc\ud06c\ub85c\ub4dc": 804, "\uc6cc\ud06c\ub85c\ub4dc\ub97c": 788, "\uc6d0\uaca9": 780, "\uc6d0\ub798": 799, "\uc6d0\ub798\uc758": [796, 815, 818, 819], "\uc6d0\ubcf8": [788, 805, 809, 810], "\uc6d0\ubcf8\uc758": 805, "\uc6d0\uc18c\ub4e4\uc740": 786, "\uc6d0\uc18c\ub97c": 811, "\uc6d0\uce59\uc740": 810, "\uc6d0\ud558\ub294": [803, 811, 818], "\uc6d0\ud55c\ub2e4\uba74": [805, 809], "\uc6d0\ud560": 821, "\uc6d0\ud568": 791, "\uc6d0\ud65c\ud558\uac8c": 813, "\uc704": [781, 783, 788, 793, 796, 798, 799, 801, 805, 807, 811, 818, 819, 821], "\uc704\ub97c": 820, "\uc704\uc5d0\uc11c": [799, 820, 821], "\uc704\uc758": [783, 805, 819], "\uc704\uc8fc": 793, "\uc704\uce58\uc774\ub2e4": 789, "\uc704\uce58\ud55c": 794, "\uc704\uce58\ud55c\ub2e4": 805, "\uc704\ud55c": [780, 782, 784, 785, 786, 787, 791, 792, 795, 796, 799, 804, 806, 808, 809, 811, 816, 817, 818, 820, 821], "\uc704\ud568\uc774\ub2e4": 783, "\uc704\ud568\uc774\uc9c0": 810, "\uc704\ud574": [779, 783, 784, 786, 787, 806], "\uc704\ud574\uc11c": [780, 781, 783, 785, 786, 787, 788, 789, 791, 793, 795, 796, 799, 802, 805, 808, 809, 811, 812, 814, 816, 817, 818, 819, 820, 821], "\uc704\ud574\uc11c\ub294": [788, 795, 799, 805, 809, 810, 811], "\uc704\ud574\uc11c\uc774\ub2e4": [806, 815], "\uc704\ud578": 786, "\uc720\ub3c4\ub41c": 806, "\uc720\ub3c4\ud558\ub294": 805, "\uc720\uba85\ud558\uace0": 821, "\uc720\uba85\ud55c": [786, 796], "\uc720\uc0ac\ud558\ub2e4": [811, 818], "\uc720\uc6a9\ud558\ub2e4": [786, 796], "\uc720\uc6a9\ud55c": [783, 784], "\uc720\uc758\ud558\uc790": [782, 792, 805, 811], "\uc720\uc77c\ud55c": [785, 786, 806, 809, 819], "\uc720\uc9c0\ud558\uae30": 819, "\uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744": 792, "\uc720\ud6a8\ud558\uc9c0": 815, "\uc73c\ub85c": [787, 797, 799, 816], "\uc740": [782, 783, 786, 787, 788, 789, 790, 798, 806, 809, 810, 811, 814, 820], "\uc740\ub2c9": 814, "\uc744": [780, 783, 785, 786, 787, 788, 789, 791, 792, 797, 799, 802, 805, 810, 811, 816, 818, 820, 821], "\uc758": [779, 780, 783, 784, 786, 787, 788, 789, 790, 791, 793, 798, 799, 805, 806, 807, 809, 811, 815, 816, 818, 819, 820, 821], "\uc758\ubbf8\ud558\ub294\ub370": 814, "\uc758\ubbf8\ud55c\ub2e4": [788, 799, 805, 811, 816], "\uc758\ubbf8\ud560": 791, "\uc758\uc874\uc131": 804, "\uc758\uc874\ud558\uae30": 808, "\uc758\ud574": 788, "\uc758\ud574\uc11c": 806, "\uc774": [779, 780, 782, 783, 785, 786, 788, 789, 790, 791, 792, 793, 795, 796, 797, 798, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821], "\uc774\uac83\ub4e4\uc740": [779, 811, 815, 816], "\uc774\uac83\ub4e4\uc744": [786, 796, 811], "\uc774\uac83\uc740": [796, 799, 806, 808], "\uc774\uac83\uc744": 796, "\uc774\uace0": [783, 819], "\uc774\ub098": [787, 812, 818, 820], "\uc774\ub294": [779, 780, 784, 785, 786, 787, 788, 792, 794, 795, 799, 803, 805, 806, 807, 815, 816, 818, 821], "\uc774\ub2e4": [783, 786, 796, 799, 802], "\uc774\ub4e4": [791, 805], "\uc774\ub4e4\uc740": 791, "\uc774\ub4e4\uc744": 788, "\uc774\ub54c": 783, "\uc774\ub77c\uace0": [780, 815, 819], "\uc774\ub77c\ub294": 818, "\uc774\ub77c\uba74": [781, 821], "\uc774\ub7f0": [782, 792, 805, 813, 815, 819], "\uc774\ub904\uc9c4\ub2e4": [783, 796, 820], "\uc774\ub97c": [779, 780, 781, 783, 784, 786, 787, 788, 792, 795, 796, 799, 800, 801, 804, 805, 806, 809, 810, 811, 812, 818, 819, 820], "\uc774\ub984": [793, 799], "\uc774\ub984\uacfc": 786, "\uc774\ub984\ub4e4\uc744": 788, "\uc774\ub984\uc740": [786, 788], "\uc774\ub984\uc744": [786, 788, 793, 799], "\uc774\ub984\uc758": [788, 793, 818], "\uc774\ub984\uc774": 786, "\uc774\ub984\uc774\uace0": 799, "\uc774\ub984\uc774\ub2e4": [788, 799], "\uc774\ubbf8": [781, 794, 817, 821], "\uc774\ubd84": [791, 796, 806, 815, 816], "\uc774\uc0c1": 799, "\uc774\uc288\uac00": 812, "\uc774\uc5b4\uc9c4": 795, "\uc774\uc640": [783, 799], "\uc774\uc678\uc758": [807, 814], "\uc774\uc6a9\ud55c": [818, 821], "\uc774\uc6a9\ud560": [792, 806], "\uc774\uc6a9\ud574\uc11c": [793, 796, 815, 819], "\uc774\uc6c3": [786, 808, 821], "\uc774\uc6c3\ub4e4\ub85c\ubd80\ud130": [811, 821], "\uc774\uc6c3\ub4e4\uc5d0": [808, 821], "\uc774\uc720\ub294": [780, 786, 788, 792, 795, 799, 801, 805, 820], "\uc774\uc804": [805, 806, 818, 819], "\uc774\uc804\uc5d0": 818, "\uc774\uc81c": [800, 809, 811], "\uc774\uc81c\uc758": 793, "\uc774\uc885": [790, 791, 798, 815, 821], "\uc774\uc9c4": [818, 821], "\uc774\ud130\ub808\uc774\uc158\uc5d0": 819, "\uc774\ud558\uc778": 795, "\uc774\ud56d": 799, "\uc774\ud574\ud558\uace0": 804, "\uc775\uc219\ud558\ub2e4\uba74": 810, "\uc778": [788, 804, 816, 819], "\uc778\ub371\uc2a4\ub97c": [786, 815], "\uc778\ubc14\uc6b4\ub4dc": 805, "\uc778\uc2a4\ud134\uc2a4\ub97c": 791, "\uc778\uc2a4\ud134\uc2a4\uc5d0": 821, "\uc778\uc790": 799, "\uc778\uc790\ub294": 805, "\uc778\uc790\ub4e4\uc740": 807, "\uc778\uc790\ub4e4\uc744": 788, "\uc778\uc790\ub4e4\uc774": 794, "\uc778\uc790\ub85c": [788, 795, 799, 802, 806, 809, 811, 816], "\uc778\uc790\ub97c": [789, 807], "\uc778\uc790\uc774\ub2e4": 788, "\uc778\uc9c0": 806, "\uc778\ucea1\uc290\ub808\uc774\uc158\uc774\ub2e4": 816, "\uc778\ucf54\ub529\ud55c": 791, "\uc778\ud130\uc5d1\uc158\uc744": 785, "\uc778\ud130\ud328\uc774\uc2a4\ub97c": 786, "\uc778\ud130\ud398\uc774\uc2a4\ub294": 802, "\uc778\ud130\ud398\uc774\uc2a4\ub97c": [786, 790, 793, 796], "\uc778\ud130\ud398\uc774\uc2a4\uc758": 793, "\uc778\ud2f0\ud2f0\ub4e4\uacfc": 791, "\uc77c": [791, 801], "\uc77c\ub3c4": 818, "\uc77c\ub4e4\uc5d0": 783, "\uc77c\ubc18": [786, 805], "\uc77c\ubc18\uc801": 819, "\uc77c\ubc18\uc801\uc73c\ub85c": [779, 783, 786, 795, 799, 801, 804, 810, 813, 815], "\uc77c\ubc18\uc801\uc778": [792, 796, 814, 815, 818, 819], "\uc77c\ubc88\uc801\uc73c\ub85c": 783, "\uc77c\ubd80": [800, 811], "\uc77c\ubd80\ub294": 783, "\uc77c\ubd80\ub97c": 804, "\uc77c\ubd80\ub9cc": 803, "\uc77c\ubd80\uc5d0": 798, "\uc77c\ubd80\uc5d0\ub9cc": 793, "\uc77c\ubd80\uc774\uae30": 786, "\uc77c\uc5b4\ub098\ub294\uc9c0\ub97c": 808, "\uc77c\uc5b4\ub09c\ub2e4": [783, 786], "\uc77c\uc744": [781, 811, 821], "\uc77c\uc774": 783, "\uc77c\uc774\ud0ac": 815, "\uc77d\uae30": 796, "\uc77d\uae30\uc640": 786, "\uc77d\ub294": 792, "\uc77d\uc744": 805, "\uc784\ubc30\ub529\uc740": 786, "\uc784\ubca0\ub529": 787, "\uc784\ubca0\ub529\uacfc": 786, "\uc784\ubca0\ub529\ub4e4\uc5d0": 786, "\uc784\ubca0\ub529\ub4e4\uc740": 787, "\uc784\ubca0\ub529\ub4e4\uc744": [786, 788], "\uc784\ubca0\ub529\uc744": [785, 786, 787, 788, 820, 821], "\uc784\ubca0\ub529\uc774": 786, "\uc784\uc2dc\ub85c": 784, "\uc784\uc758\ub85c": [805, 817], "\uc784\uc758\uc131\uc744": 808, "\uc784\uc758\uc758": [788, 805, 818, 820], "\uc785\ub825": [780, 786, 806, 809, 810, 811, 814, 815, 816, 819], "\uc785\ub825\uacfc": [799, 805], "\uc785\ub825\uae4c\uc9c0\uc758": 804, "\uc785\ub825\uc5d0": [804, 815], "\uc785\ub825\uc73c\ub85c": [786, 795, 805, 811, 818, 821], "\uc785\ub825\uc740": [806, 819], "\uc785\ub825\ud558\ub294": 809, "\uc785\ub825\ud558\uba74": 818, "\uc785\ub825\ud574\uc11c": [806, 811], "\uc788\uac8c\ud55c\ub2e4": 784, "\uc788\uace0": [780, 786, 788, 799, 805, 810, 812, 813, 816, 819, 820, 821], "\uc788\uae30": [780, 783, 799, 805, 806], "\uc788\ub294": [779, 780, 785, 786, 788, 791, 792, 794, 801, 806, 807, 808, 809, 811, 814, 815, 816, 817, 818, 819, 821], "\uc788\ub294\ub370": [788, 792, 815, 820], "\uc788\ub294\uc9c0": [788, 811], "\uc788\ub2e4": [779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 799, 800, 801, 802, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821], "\uc788\ub2e4\uace0": 817, "\uc788\ub2e4\ub294": [788, 796], "\uc788\ub2e4\uba74": [788, 796, 811, 820], "\uc788\ub3c4\ub85d": [783, 786, 805], "\uc788\ub4ef\uc774": [783, 805], "\uc788\uc5b4\uc11c": 812, "\uc788\uc5b4\uc57c": [781, 783, 788, 815, 816], "\uc788\uc5b4\uc57c\ub9cc": 786, "\uc788\uc73c\ub2c8": 792, "\uc788\uc73c\uba70": [783, 788, 814], "\uc788\uc744": [783, 796, 811], "\uc788\uc74c": 819, "\uc788\uc74c\uc744": [791, 808, 816, 821], "\uc788\uc9c0": 786, "\uc788\uc9c0\ub9cc": [805, 806], "\uc790\ub3d9\uc73c\ub85c": [781, 786, 787, 799, 810, 812], "\uc790\ub3d9\uc744": 781, "\uc790\ub3d9\ud654\ud560": 781, "\uc790\ub8cc": [786, 790, 791], "\uc790\uc138\ud558\uac8c": 815, "\uc790\uc138\ud55c": [783, 792, 799, 803, 818], "\uc790\uc138\ud788": 810, "\uc790\uc2e0\uc758": [811, 821], "\uc790\uc6d0\uc744": 804, "\uc790\uccb4": 791, "\uc791\ub3d9\uc744": 807, "\uc791\ub3d9\ud558\uac8c": 805, "\uc791\ub3d9\ud558\ub3c4\ub85d": 810, "\uc791\ub3d9\ud558\uba74\uc11c": 785, "\uc791\uc131": [798, 815], "\uc791\uc131\ud558\uace0\uc790": 818, "\uc791\uc131\ud558\ub294": [810, 821], "\uc791\uc131\ud558\uba74": 818, "\uc791\uc131\ud55c\ub2e4": 818, "\uc791\uc131\ud560": [818, 821], "\uc791\uc131\ud574\uc57c\ud55c\ub2e4": 786, "\uc791\uc5c5": 789, "\uc791\uc5c5\uc740": 780, "\uc791\uc740": [786, 788, 805, 812, 817, 819], "\uc798": 792, "\uc798\ub77c\uc11c": 810, "\uc7a0\uc7ac\uc801\uc73c\ub85c": 806, "\uc7a0\uc7ac\uc801\uc73c\ub85c\ub294": 788, "\uc7a0\uc7ac\uc801\uc778": 815, "\uc7a1": 789, "\uc7a1\ub294": [788, 805], "\uc7a1\uc744": [785, 789], "\uc7a1\uc774": 789, "\uc7a5\ub294": 798, "\uc7a5\uc5d0\uc11c\ub294": [813, 817], "\uc7a5\uc740": [779, 790, 804, 817], "\uc7a5\uc758": [780, 817], "\uc7a5\uc810\uc740": 788, "\uc7a5\uc810\uc744": 819, "\uc7ac\ubc30\uc5f4\ud558\ub294": 783, "\uc7ac\uc0ac\uc6a9\ub420": 815, "\uc7ac\uc0ac\uc6a9\ud55c\ub2e4": 809, "\uc7ac\uc0ac\uc6a9\ud560": 806, "\uc7ac\uc791\uc131\ud574\uc11c": 805, "\uc7ac\ud560\ub2f9": 788, "\uc7ac\ud560\ub2f9\uc774": 788, "\uc7ac\ud560\ub2f9\ud55c\ub2e4": 788, "\uc7ac\ud65c\uc6a9\ud574\uc11c": 820, "\uc800\uc790\uac00": 791, "\uc800\uc791\uc744": 791, "\uc800\uc7a5": [784, 800], "\uc800\uc7a5\uacf5\uac04\ub3c4": 795, "\uc800\uc7a5\uacfc": [779, 780], "\uc800\uc7a5\ub418\ub294": [789, 795], "\uc800\uc7a5\ub418\uc5b4": [786, 805, 811, 821], "\uc800\uc7a5\ub418\uc5b4\uc57c": 788, "\uc800\uc7a5\ub41c": [788, 811], "\uc800\uc7a5\ub41c\ub2e4": [786, 787, 788, 794, 796, 816], "\uc800\uc7a5\ub420": [788, 789], "\uc800\uc7a5\uc18c\ub97c": 796, "\uc800\uc7a5\uc18c\uc5d0": 811, "\uc800\uc7a5\uc740": 818, "\uc800\uc7a5\uc774": 801, "\uc800\uc7a5\ud558\uace0": [785, 788, 792, 796], "\uc800\uc7a5\ud558\uae30": [780, 784, 792, 793, 816], "\uc800\uc7a5\ud558\ub294": [784, 786, 788, 789, 796, 799], "\uc800\uc7a5\ud558\ub294\ub370": [779, 788, 795, 804], "\uc800\uc7a5\ud55c\ub2e4": [786, 787, 788, 789, 792, 793, 799], "\uc800\uc7a5\ud560": [780, 788, 789, 793, 801], "\uc801\uac8c": 795, "\uc801\ub2e4": 811, "\uc801\uc6a9\ub418\uace0": 821, "\uc801\uc6a9\ub418\uae30": 820, "\uc801\uc6a9\ub418\ub294": 810, "\uc801\uc6a9\ub418\ub294\ub370": 799, "\uc801\uc6a9\ub418\uc5b4": 819, "\uc801\uc6a9\ub41c\ub2e4": [796, 815], "\uc801\uc6a9\ub429\ub2c8\ub2e4": 805, "\uc801\uc6a9\ud558\uace0": [796, 801, 815], "\uc801\uc6a9\ud558\uae30": [798, 804, 816], "\uc801\uc6a9\ud558\uae30\ub3c4": 814, "\uc801\uc6a9\ud558\ub294": [798, 800, 801], "\uc801\uc6a9\ud55c\ub2e4": [801, 818], "\uc801\uc6a9\ud574\ubcf4\uba74": 818, "\uc801\uc740": [786, 805, 807], "\uc801\uc808\ud55c": [787, 812], "\uc801\ud569\ud558\uc9c0": [784, 792], "\uc804\ub2ec": [797, 810, 811, 813, 815, 816, 817, 819, 821], "\uc804\ub2ec\ub418\ub294": 788, "\uc804\ub2ec\ub41c": [798, 799], "\uc804\ub2ec\uc5d0": [798, 801], "\uc804\ub2ec\uc740": [802, 805, 815, 821], "\uc804\ub2ec\uc744": [798, 799, 802, 808, 812, 819, 821], "\uc804\ub2ec\uc774": [799, 821], "\uc804\ub2ec\ud55c\ub2e4": 809, "\uc804\ub2ec\ud560": 805, "\uc804\ub2ec\ud574\uc11c": [794, 819], "\uc804\ub2ec\ud574\uc57c": [786, 805], "\uc804\ub7b5\uc740": 788, "\uc804\ub7b5\uc744": [804, 805], "\uc804\ubc18\uc801\uc73c\ub85c": 799, "\uc804\ubd80\uc774\ub2e4": 811, "\uc804\uc5d0": [786, 788, 812], "\uc804\uc790\ub294": 786, "\uc804\ucc98\ub9ac": 785, "\uc804\ucc98\ub9ac\uac00": 788, "\uc804\ucc98\ub9ac\ub294": 788, "\uc804\uccb4": [783, 788, 804, 805, 806, 807, 808, 810, 811, 815, 818, 819, 821], "\uc804\uccb4\ub97c": [804, 815], "\uc804\uccb4\uc5d0": 811, "\uc804\ud30c\ub418\uc5b4\uc57c": 811, "\uc804\ud615\uc801\uc778": [783, 789, 814, 815], "\uc804\ud658\ud558\ub294": 805, "\uc808\ub300\ub85c": 786, "\uc808\ub4e4\uc5d0\uc11c": 779, "\uc808\ub4e4\uc5d0\uc11c\ub294": 804, "\uc808\ub85c": 817, "\uc808\uc57d\ud560": [784, 804, 812], "\uc808\uc5d0\uc11c": [783, 804, 818], "\uc808\uc5d0\uc11c\ub294": [783, 785, 792, 798, 805, 815], "\uc808\uc740": [782, 786, 808, 821], "\uc808\uc744": 788, "\uc808\uc758": 785, "\uc808\ucc28\ub294": [783, 804], "\uc808\ucc98\ub85c": 796, "\uc810\uac80\uc740": 815, "\uc810\uc218": 809, "\uc810\uc218\uac00": 820, "\uc810\uc218\ub97c": [806, 809, 818, 820], "\uc810\uc218\ubcf4\ub2e4": 820, "\uc810\uc218\uc640": [809, 820], "\uc810\uc740": [786, 811], "\uc810\uc744": [783, 792, 805, 806, 808, 809, 811, 819], "\uc810\uc774\ub2e4": [786, 788, 806, 809], "\uc811\uadfc": [789, 799], "\uc811\uadfc\uc131\uc744": 783, "\uc811\uadfc\uc744": [786, 789], "\uc811\uadfc\ud558\uae30": [785, 786], "\uc811\uadfc\ud558\ub294": 786, "\uc811\uadfc\ud560": [786, 787, 793, 805], "\uc811\uadfc\ud574\uc11c": 811, "\uc815\ub82c\ud55c\ub2e4": 787, "\uc815\ubcf4": [780, 784, 795], "\uc815\ubcf4\ub4e4\uc744": [783, 788, 819], "\uc815\ubcf4\ub97c": [784, 786, 788, 789, 796, 806, 819, 821], "\uc815\ubcf4\uc640": 806, "\uc815\uc0c1\uc801\uc778": 786, "\uc815\uc218": [788, 795], "\uc815\uc218\ub85c": 796, "\uc815\uc218\ub97c": 795, "\uc815\uc758": [785, 790, 793, 799], "\uc815\uc758\ub294": 821, "\uc815\uc758\ub418\uc5b4": 786, "\uc815\uc758\ub418\uc5c8\ub2e4\uba74": 819, "\uc815\uc758\ub41c": [780, 821], "\uc815\uc758\ub41c\ub2e4": [805, 819], "\uc815\uc758\uc5d0": 790, "\uc815\uc758\ud558\uace0": 779, "\uc815\uc758\ud558\ub098": 780, "\uc815\uc758\ud558\ub294": 786, "\uc815\uc758\ud558\ub294\ub370": 821, "\uc815\uc758\ud55c": [809, 818], "\uc815\uc758\ud55c\ub2e4": [798, 805, 810, 819], "\uc815\uc758\ud560": [805, 809], "\uc815\ucc45\uc740": 787, "\uc815\ucc45\uc744": 787, "\uc815\ud574\uc57c": 789, "\uc815\ud574\uc9c4": [815, 821], "\uc815\ud655\ub3c4": 821, "\uc815\ud655\ud558\uac8c": 786, "\uc815\ud655\ud55c": 804, "\uc81c\uac70\ub418\uc5b4": 810, "\uc81c\uac70\ud558\uae30": 808, "\uc81c\uac70\ud558\ub294": 806, "\uc81c\uac70\ud55c\ub2e4": 799, "\uc81c\uac70\ud588\ub2e4": 811, "\uc81c\uacf1": 788, "\uc81c\uacf5\ub418\ub294": [811, 817], "\uc81c\uacf5\ud558\uae30": [779, 785], "\uc81c\uacf5\ud558\ub294": [780, 788, 806, 811], "\uc81c\uacf5\ud558\ub294\ub370": 792, "\uc81c\uacf5\ud558\uc9c0\ub9cc": 805, "\uc81c\uacf5\ud55c\ub2e4": [782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 795, 796, 799, 804, 805, 809, 811, 812, 818, 821], "\uc81c\uacf5\ud55c\ub2e4\uba74": 792, "\uc81c\uacf5\ud560": 783, "\uc81c\uacf5\ud568": [810, 821], "\uc81c\uacf5\ud574\uc57c": 786, "\uc81c\uacf5\ud574\uc57c\ud55c\ub2e4": 809, "\uc81c\uc548\ud558\ub294": 801, "\uc81c\uc57d": 796, "\uc81c\uc57d\uc774\ub098": 808, "\uc81c\uc678\ud558\uace0\ub294": 821, "\uc81c\uc678\ud558\uba74": [806, 809], "\uc81c\ud55c\uc801\uc778": 808, "\uc870\uac74\uc744": [796, 807], "\uc870\uae08\ub9cc": 785, "\uc870\uc815\uac00\ub2a5": 821, "\uc874\uc7ac\ud558\ub294": [786, 820], "\uc874\uc7ac\ud558\ub294\uc9c0": 820, "\uc874\uc7ac\ud558\uc9c0": [806, 809, 819], "\uc874\uc7ac\ud55c\ub2e4": 813, "\uc874\uc7ac\ud55c\ub2e4\ub294": [782, 806], "\uc874\uc7ac\ud55c\ub2e4\uba74": 781, "\uc874\uc7ac\ud574\uc57c\ud558\uba70": 794, "\uc880\ub354": 814, "\uc885\ub8cc\ub418\uba74": 820, "\uc885\ub958": 819, "\uc885\ub958\ub97c": 819, "\uc885\ub958\uc5d0": 821, "\uc885\ub958\uc758": [782, 783, 785, 810, 815, 816, 819], "\uc885\uc885": [818, 819], "\uc88b\ub2e4": 808, "\uc88b\uc740": 788, "\uc8fc\ub85c": [783, 786], "\uc8fc\ubaa9\ud558\uc790": 808, "\uc8fc\uc11d": 810, "\uc8fc\uc18c": 789, "\uc8fc\uc18c\ub4e4\uc744": 789, "\uc8fc\uc18c\uc774\ub2e4": 789, "\uc8fc\uc5b4\uc84c\uc744": 818, "\uc8fc\uc5b4\uc9c0\uba74": 805, "\uc8fc\uc5b4\uc9c4": [788, 805, 818], "\uc8fc\uc694": [783, 786, 813, 819], "\uc8fc\uc758": 817, "\uc8fc\uc758\ud558\uc790": [808, 810, 819], "\uc900\ub2e4": [786, 807], "\uc900\ube44\ud558\uace0": 788, "\uc900\ube44\ud55c\ub2e4": 819, "\uc904\ub9cc": 788, "\uc904\uc5ec\uc900\ub2e4": 788, "\uc904\uc740": 789, "\uc904\uc774\uae30": 808, "\uc904\uc778": 801, "\uc904\uc77c": 780, "\uc911": 784, "\uc911\uac04": [788, 804], "\uc911\uac04\uc5d0": 799, "\uc911\ubcf5\ub41c": 788, "\uc911\uc2ec\uc758": 790, "\uc911\uc5d0": [786, 787, 789, 802, 810, 821], "\uc911\uc694\ud558\ub2e4": [786, 788], "\uc911\uc694\ud55c": [783, 788, 792, 793], "\uc911\uc758": 795, "\uc911\uc774\ub2e4": 807, "\uc989": [783, 786, 788, 793, 799, 801, 805, 806, 809, 811, 815, 818, 819, 820], "\uc9c0\uae08\uc740": 786, "\uc9c0\ub2c8\uace0": 819, "\uc9c0\uc5b4\ubcf8\ub2e4\uba74": 819, "\uc9c0\uc6d0\ub418\ub294": [799, 806, 811], "\uc9c0\uc6d0\uc740": 799, "\uc9c0\uc6d0\uc744": [788, 812], "\uc9c0\uc6d0\ud558\uace0": [795, 800], "\uc9c0\uc6d0\ud558\uae30": [785, 786, 795, 799], "\uc9c0\uc6d0\ud558\ub294": 812, "\uc9c0\uc6d0\ud558\ub294\ub370": 807, "\uc9c0\uc6d0\ud558\uc9c0": [786, 807], "\uc9c0\uc6d0\ud558\uc9c0\ub9cc": 786, "\uc9c0\uc6d0\ud55c\ub2e4": [785, 786, 787, 788, 795, 799, 804, 807, 809, 811, 819], "\uc9c0\uc6d0\ud568": 807, "\uc9c0\uc815\ub418\uace0": 787, "\uc9c0\uc815\ub418\uba74": 809, "\uc9c0\uc815\ub418\uc5b4\uc57c": 789, "\uc9c0\uc815\ub418\uc9c0": 789, "\uc9c0\uc815\ub41c": 789, "\uc9c0\uc815\ub420": 787, "\uc9c0\uc815\ud558\uae30": [783, 796], "\uc9c0\uc815\ud558\ub294": 783, "\uc9c0\uc815\ud558\ub294\ub370": 788, "\uc9c0\uc815\ud558\uc9c0": 799, "\uc9c0\uc815\ud55c": 796, "\uc9c0\uc815\ud55c\ub2e4": [786, 787, 788, 789, 796], "\uc9c0\uc815\ud560": [786, 789, 806], "\uc9c0\uc815\ud574\uc57c": [787, 814], "\uc9c0\uc815\ud574\uc57c\ud558\uae30": 820, "\uc9c0\uce6d\ud558\ub294": 799, "\uc9c0\ucf1c\ubcf4\uc790": [807, 812], "\uc9c1\uad00\uc801\uc73c\ub85c": 801, "\uc9c1\uc811": [781, 786, 787, 788, 792, 799, 801, 809, 810], "\uc9c4\ub2e4": 785, "\uc9c4\uc785": 805, "\uc9c4\ud589": [807, 819], "\uc9c8\ubb38\uc740": 797, "\uc9d1\uacc4": [799, 802], "\uc9d1\uacc4\ub41c\ub2e4": 816, "\uc9d1\uacc4\ud558\ub294": 816, "\uc9d1\uc911\ud574\uc11c": 783, "\uc9d1\ud55c\uc740": 811, "\uc9d1\ud569": [791, 819], "\uc9d1\ud569\ub418\uc5b4\uc57c": 814, "\uc9d1\ud569\ub4e4\uc5d0": 785, "\uc9d1\ud569\uc5d0": 796, "\uc9d1\ud569\uc73c\ub85c": 791, "\uc9d1\ud569\uc744": [795, 805, 806], "\uc9e7\uac8c": 796, "\ucc28\ub840": 821, "\ucc28\uc6d0": [787, 793, 799, 814], "\ucc28\uc6d0\uacfc": 814, "\ucc28\uc6d0\ub4e4": 814, "\ucc28\uc6d0\ub4e4\uc744": 802, "\ucc28\uc6d0\uc73c\ub85c": 814, "\ucc28\uc6d0\uc740": [793, 801, 814], "\ucc28\uc6d0\uc744": [801, 814], "\ucc28\uc6d0\uc758": 807, "\ucc28\uc6d0\uc774": [801, 819], "\ucc28\uc6d0\uc774\ub780": 814, "\ucc28\uc774\uac00": 819, "\ucc28\uc774\ub97c": 812, "\ucc28\uc774\uc810\uc740": [786, 788, 806, 809, 810, 813, 819], "\ucc28\uc774\uc810\uc774": 806, "\ucc28\uc9c0\ud558\uace0": 807, "\ucc28\uc9c0\ud558\uae30\ub3c4": 801, "\ucc28\uc9c0\ud558\uc9c0": 807, "\ucc38\uace0": [780, 799], "\ucc38\uace0\ud558\uace0\uc790": 786, "\ucc38\uace0\ud558\uba74": 783, "\ucc38\uace0\ud558\uc790": [783, 788, 791, 792, 795, 799, 803, 805, 806, 807, 808, 811, 817, 819, 821], "\ucc38\uace0\ud560": [792, 793, 795, 796], "\ucc38\uc870": 786, "\ucc38\uc870\ub9cc": 792, "\ucc38\uc870\ud558\uae30": 792, "\ucc38\uc870\ud558\uc790": 792, "\ucc3e\ub294\ub2e4": 789, "\ucc3e\uc544\ub0b4\uc57c\ud55c\ub2e4": 819, "\ucc3e\uc544\ub0bc": 815, "\ucc3e\uc544\ubcfc": 811, "\ucc44\ud0dd\ud558\uace0": 785, "\ucc45\uc784\uc744": 785, "\ucc98\ub7fc": [781, 786, 806], "\ucc98\ub9ac": [780, 783], "\ucc98\ub9ac\ub418\uc9c0": 783, "\ucc98\ub9ac\ub97c": 810, "\ucc98\ub9ac\ud558\uace0": 779, "\ucc98\ub9ac\ud558\uae30": 780, "\ucc98\ub9ac\ud558\ub294": [783, 784], "\uccab": [787, 808, 810], "\uccab\ubc88\uc9f8": [788, 793, 805, 806, 808, 811, 815], "\uccab\ubc88\uc9f8\ub294": 806, "\uccab\uc9f8\ub85c": 819, "\uccb4\ud06c": 815, "\uccb4\ud06c\uac00": 815, "\uccb4\ud06c\ud3ec\uc778\ud2b8\ub97c": 792, "\ucd08\uae30\ud654\ub41c\ub2e4": 787, "\ucd08\uae30\ud654\ud558\uae30": 785, "\ucd08\uae30\ud654\ud55c\ub2e4": [786, 814], "\ucd1d": [783, 787], "\ucd5c\ub300": 819, "\ucd5c\uc120\uc758": 807, "\ucd5c\uc18c\ub4e4\uc774": 819, "\ucd5c\uc18c\uc758": 788, "\ucd5c\uc18c\ud55c\uc758": 799, "\ucd5c\uc2e0": 788, "\ucd5c\uc801\uc740": 812, "\ucd5c\uc801\uc774\uc9c0": 788, "\ucd5c\uc801\ud654\ub418\uc5b4": 788, "\ucd5c\uc801\ud654\ub41c": 799, "\ucd5c\uc801\ud654\ub420": 801, "\ucd5c\uc801\ud654\ub4e4\uc744": 801, "\ucd5c\uc801\ud654\ub97c": 815, "\ucd5c\uc801\ud654\ud558\uace0": 801, "\ucd5c\uc801\ud654\ud560": 799, "\ucd5c\uc885": [804, 811], "\ucd94\uac00": [807, 815], "\ucd94\uac00\ub41c": 795, "\ucd94\uac00\ub85c": [783, 788, 796, 801], "\ucd94\uac00\uc801\uc73c\ub85c": [781, 788], "\ucd94\uac00\uc801\uc778": 816, "\ucd94\uac00\ud558\ub294": 783, "\ucd94\uac00\ud55c\ub2e4": 783, "\ucd94\uac00\ud560": [783, 786], "\ucd94\ub860": 804, "\ucd94\ub860\uc5d0": 786, "\ucd94\ub860\uc5d0\uc11c": 788, "\ucd94\ub860\uc740": 808, "\ucd94\ub860\uc744": [785, 808], "\ucd94\ub860\uc758": 808, "\ucd94\ub860\uc774": [788, 804], "\ucd94\uc0c1\ud654\ub97c": 790, "\ucd94\ucc9c": 791, "\ucd94\ucc9c\uc5d0\uc11c": 818, "\ucd94\ucc9c\uc744": 820, "\ucd94\ucd9c\ub420": 781, "\ucd94\ucd9c\uc744": 781, "\ucd94\ucd9c\ud558\uace0": 796, "\ucd94\ucd9c\ud558\uba74": 821, "\ucd94\ucd9c\ud558\uc790": 781, "\ucd94\ucd9c\ud55c\ub2e4": 781, "\ucd94\ucd9c\ud560": 816, "\ucd95\uc18c": [798, 799], "\ucd95\uc57d": [799, 802, 816], "\ucd9c\ub825": [788, 799, 805, 806, 808, 810, 811, 814], "\ucd9c\ub825\uacfc": 806, "\ucd9c\ub825\uc2dc\uc791\ud574\uc11c": 804, "\ucd9c\ub825\uc73c\ub85c": 811, "\ucd9c\ub825\uc73c\ub85c\ub294": 805, "\ucd9c\ub825\uc758": 805, "\ucda9\ubd84\ud558\ub2e4": 808, "\ucda9\ubd84\ud558\uc9c0": 788, "\ucda9\uc871\ud558\uba74": 807, "\ucde8\uae09\ud55c\ub2e4": 815, "\ucde8\ud558\uac8c\ud558\uba74": 818, "\uce58\uc6d0\uc744": 814, "\uce5c\uad6c": 791, "\uce5c\ubaa9": 819, "\uce5c\uc219\ud560": 820, "\uce74\ud14c\uace0\ub9ac\ub85c": 821, "\uce74\ud14c\ub85c\uae30\ub4e4\ub85c": 821, "\uce90\ub178\ub2c8\uceec": 796, "\ucee4\ub110\uc758": 812, "\ucee4\ub2e4\ub780": 819, "\ucee4\ubba4\ub2c8\ud2f0\uc5d0": 819, "\ucee4\ubba4\ub2c8\ud2f0\uc758": 819, "\ucee4\uc11c": 801, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ub41c": 816, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c": 811, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\uc774": 821, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [804, 806, 811], "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\ub294": 804, "\ucee4\uc2a4\ud140": [779, 804, 807, 811, 813, 821], "\ucee4\uc9c8": 788, "\ucee8\ud0dd\uc2a4\ud2b8": 795, "\ucef4\ud30c\uc77c\uacfc": 788, "\ucef4\ud30c\uc77c\uc744": 799, "\ucef4\ud30c\uc77c\ud558\uace0": 788, "\ucef4\ud30c\uc77c\ud55c\ub2e4": 788, "\ucef4\ud3ec\ub10c\ub4dc\ub4e4\uc744": 785, "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uacfc": [785, 819], "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uc744": [785, 790], "\ucef4\ud3ec\ub10c\ud2b8\ub97c": [779, 785, 819], "\ucef4\ud3ec\ub10c\ud2b8\ub9cc": 818, "\ucef4\ud4e8\ud130": 785, "\ucef4\ud4e8\ud130\ub294": [785, 786], "\ucef4\ud4e8\ud130\ub4e4\uc5d0": 785, "\ucef4\ud4e8\ud130\ub4e4\uc758": [785, 788], "\ucef4\ud4e8\ud130\ub97c": 788, "\ucef4\ud4e8\ud130\uc5d0": 786, "\ucef4\ud4e8\ud130\uc5d0\uc11c": [785, 788, 812], "\ucef4\ud4e8\ud305": 799, "\ucef7": 788, "\ucf00\uc774\uc2a4\ub294": 786, "\ucf00\uc774\uc2a4\ub4e4\uc744": 815, "\ucf54\ub4dc": [783, 785, 788, 798, 806, 809, 812, 815, 819], "\ucf54\ub4dc\ub294": [781, 782, 783, 785, 786, 787, 788, 792, 793, 795, 796, 805, 806, 809, 810, 811, 813, 815, 818, 819, 820, 821], "\ucf54\ub4dc\ub3c4": 810, "\ucf54\ub4dc\ub4e4\uacfc": 810, "\ucf54\ub4dc\ub97c": [781, 783, 785, 786, 799], "\ucf54\ub4dc\uc5d0\uc11c": [783, 805], "\ucf54\ub4dc\uc640": [786, 813, 818], "\ucf54\ub4dc\uc758": [783, 815], "\ucf54\ub4dc\uc774\ub2e4": 821, "\ucf54\ub4dc\ucc98\ub7fc": 821, "\ucffc\ub9ac\ud558\ub294": 795, "\ud06c\uac8c": 818, "\ud06c\uae30": 784, "\ud06c\uae30\uac00": [804, 819], "\ud06c\uae30\ub77c\uace0": 817, "\ud06c\uae30\ub97c": [787, 796], "\ud06c\uae30\uc758": 786, "\ud06c\uae30\uc774\uace0": 807, "\ud06c\ub85c\uc2a4": 802, "\ud070": [780, 788, 797, 803, 815, 817, 819, 821], "\ud074\ub798\uc2a4": [779, 811], "\ud074\ub798\uc2a4\ub294": [786, 805], "\ud074\ub798\uc2a4\ub4e4\uc744": 811, "\ud074\ub798\uc2a4\ub97c": [780, 781, 785, 811], "\ud074\ub798\uc2a4\uc5d0": [780, 783, 805, 821], "\ud074\ub798\uc2a4\uc5d0\ub294": 780, "\ud074\ub798\uc2a4\uc5d0\uc11c": 779, "\ud074\ub798\uc2a4\uc774\uace0": 807, "\ud074\ub798\uc2a4\uc774\ub2e4": [780, 786], "\ud074\ub798\uc2a4\uc778": [783, 805], "\ud074\ub7ec\uc2a4\ud130": [785, 789], "\ud074\ub7ec\uc2a4\ud130\uc5d0": [786, 789], "\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c": [785, 786, 788, 789], "\ud074\ub7ec\uc2a4\ud130\uc758": [785, 786, 788, 789], "\ud074\ub7ec\uc2a4\ud130\uc774": 785, "\ud074\ub85c\ubc8c": 789, "\ud074\ub860\ud558\uace0": 788, "\ud074\ub860\ud55c\ub2e4": 788, "\ud0a4\uac12\ub294": 802, "\ud0a4\ub85c": [788, 816], "\ud0c0\uc785": [787, 788, 793, 795, 802, 814, 816], "\ud0c0\uc785\uac04\uc758": 806, "\ud0c0\uc785\uacfc": [786, 787, 796, 806, 809, 818, 821], "\ud0c0\uc785\ub4e4\uacfc": [787, 788, 806, 809, 811, 821], "\ud0c0\uc785\ub4e4\uc5d0": [796, 815, 821], "\ud0c0\uc785\ub4e4\uc640": [809, 811], "\ud0c0\uc785\ub4e4\uc740": 802, "\ud0c0\uc785\ub4e4\uc744": [788, 805, 806, 809, 816], "\ud0c0\uc785\ub4e4\uc758": 788, "\ud0c0\uc785\ub4e4\uc774": 788, "\ud0c0\uc785\ub9cc": 818, "\ud0c0\uc785\ub9cc\uc744": 786, "\ud0c0\uc785\ubcc4": [787, 796], "\ud0c0\uc785\ubcc4\ub85c": [788, 805, 821], "\ud0c0\uc785\uc5d0": [787, 788, 796, 799, 802, 814, 815, 816, 818, 819, 820, 821], "\ud0c0\uc785\uc5d0\uc11c": 787, "\ud0c0\uc785\uc5d0\uc11c\uc758": 788, "\ud0c0\uc785\uc73c\ub85c": [791, 816, 818, 820], "\ud0c0\uc785\uc73c\ub85c\ub294": 814, "\ud0c0\uc785\uc740": [787, 795, 814], "\ud0c0\uc785\uc744": [787, 788, 790, 791, 793, 799, 802, 806, 810, 812, 817, 818, 820], "\ud0c0\uc785\uc758": [787, 788, 790, 791, 796, 802, 805, 806, 818], "\ud0c0\uc785\uc774": [787, 788, 795, 796, 815, 816], "\ud0c0\uc785\uc774\ub098": 787, "\ud0c0\uc785\uc774\ub2e4": 788, "\ud0c0\uc785\uc774\ub77c\uace0": 796, "\ud134\uc11c": 793, "\ud14c\uc2a4\ud06c": 783, "\ud14c\uc2a4\ud06c\ub4e4\uc5d0": 818, "\ud14c\uc2a4\ud06c\ub4e4\uc744": 821, "\ud14c\uc2a4\ud06c\ub97c": [782, 817], "\ud14c\uc2a4\ud06c\uc5d0": 788, "\ud14c\uc2a4\ud06c\uc5d0\ub3c4": 786, "\ud14c\uc2a4\ud06c\uc5d0\uc11c": 783, "\ud14c\uc2a4\ud06c\uc758": 786, "\ud14c\uc2a4\ud2b8": [786, 788, 818, 821], "\ud14c\uc2a4\ud2b8\ub97c": 786, "\ud14c\uc2a4\ud2b8\uc758": 783, "\ud14c\uc774\ube14": 792, "\ud14c\uc785\ub4e4\uc758": 788, "\ud150\uc11c": [787, 794, 795, 799, 813], "\ud150\uc11c\uac00": [786, 793], "\ud150\uc11c\ub294": [786, 793, 812], "\ud150\uc11c\ub4e4\uacfc": [787, 816], "\ud150\uc11c\ub4e4\uc5d0": 796, "\ud150\uc11c\ub4e4\uc744": [786, 815], "\ud150\uc11c\ub4e4\uc758": [783, 788, 806, 809, 810, 821], "\ud150\uc11c\ub85c": 792, "\ud150\uc11c\ub97c": [786, 787, 792, 794, 795, 816], "\ud150\uc11c\uc5d0": 812, "\ud150\uc11c\uc5ec\uc57c\ub9cc": 799, "\ud150\uc11c\uc640": 786, "\ud150\uc11c\uc758": [793, 795], "\ud150\uc11c\uc774\uace0": 810, "\ud15c\ud50c\ub9bf\uc740": 780, "\ud1a0\uc774": 788, "\ud1a0\ud53d\ub4e4\uc744": 804, "\ud1b5\uacc4\ub4e4\uc744": 788, "\ud1b5\uc2e0\uc5d0": 789, "\ud1b5\uc2e0\uc744": [785, 788], "\ud1b5\uc2e0\uc774": 786, "\ud1b5\ud569\ub420": 813, "\ud1b5\ud569\ud558\ub294": [798, 816], "\ud1b5\ud574\uc11c": [786, 787, 788, 792, 799, 805, 808, 809, 816, 820], "\ud1b5\ud574\uc11c\ub294": 805, "\ud234\ub4e4": 785, "\ud234\uc740": 786, "\ud29c\ud1a0\ub9ac\uc5bc": 799, "\ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c": 807, "\ud29c\ud50c": 795, "\ud2b8\ub808\uc774\ub108": [785, 786], "\ud2b8\ub808\uc774\ub108\uac00": 786, "\ud2b8\ub808\uc774\ub108\ub294": 788, "\ud2b8\ub808\uc774\ub108\ub4e4\uc740": [785, 786], "\ud2b8\ub808\uc774\ub108\ub4e4\uc758": 789, "\ud2b8\ub808\uc774\ub108\ub4e4\uc774": 786, "\ud2b8\ub808\uc774\ub108\uc5d0": 789, "\ud2b8\ub808\uc774\ub108\uc5d0\uac8c": [785, 786], "\ud2b8\ub9ac\ud50c": 796, "\ud2b8\uc704\ud130\uc758": 791, "\ud2b9\ubcc4\ud558\uac8c": 811, "\ud2b9\ubcc4\ud55c": [791, 796, 815], "\ud2b9\ubcc4\ud788": 792, "\ud2b9\uc131\uc744": 819, "\ud2b9\uc815": [781, 783, 787, 788, 796, 805, 808, 814, 818], "\ud2b9\uc9d5\uacfc": 795, "\ud2b9\uc9d5\uc744": [802, 819], "\ud2b9\ud788": [785, 796, 808], "\ud2f0\uc555\uc5d0": 818, "\ud2f0\uc785\uc5d0": 788, "\ud301\uc744": 804, "\ud30c\ub77c\uba54\ud130": [813, 814], "\ud30c\ub77c\uba54\ud130\ub4e4": 816, "\ud30c\ub77c\uba54\ud130\ub4e4\uacfc": 814, "\ud30c\ub77c\uba54\ud130\ub4e4\ub85c\uc368": 816, "\ud30c\ub77c\uba54\ud130\ub4e4\uc740": 799, "\ud30c\ub77c\uba54\ud130\ub4e4\uc744": [786, 802, 812], "\ud30c\ub77c\uba54\ud130\ub85c": [801, 815], "\ud30c\ub77c\uba54\ud130\ub97c": [783, 799, 805], "\ud30c\ub77c\uba54\ud130\uc774\ub2e4": 820, "\ud30c\ub77c\ubbf8\ud130\ub4e4\uc740": 799, "\ud30c\ub77c\ubbf8\ud130\ub85c": 799, "\ud30c\uc2f1\ud558\uace0": 796, "\ud30c\uc2f1\ud558\ub294": 792, "\ud30c\uc774\uc120": 795, "\ud30c\uc774\ud504\ub77c\uc778": [797, 817, 819, 821], "\ud30c\uc774\ud504\ub77c\uc778\uc5d0": 780, "\ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c": 780, "\ud30c\uc774\ud504\ub77c\uc778\uc740": 819, "\ud30c\uc774\ud504\ub77c\uc778\uc744": [779, 780, 804], "\ud30c\uc774\ud504\ub77c\uc778\uc758": 779, "\ud30c\uc774\ud504\ub77c\uc778\uc774": [779, 780], "\ud30c\uc77c": [781, 788, 789, 818, 821], "\ud30c\uc77c\ub4e4": [788, 789], "\ud30c\uc77c\ub4e4\ub85c": 783, "\ud30c\uc77c\ub4e4\uc5d0": 788, "\ud30c\uc77c\ub4e4\uc740": [781, 788], "\ud30c\uc77c\ub4e4\uc744": [781, 796], "\ud30c\uc77c\ub4e4\uc758": [788, 789], "\ud30c\uc77c\ub4e4\uc774": 788, "\ud30c\uc77c\ub85c": [783, 788], "\ud30c\uc77c\ub85c\uc11c": 788, "\ud30c\uc77c\uc5d0": [781, 788, 796], "\ud30c\uc77c\uc5d0\uc11c": 788, "\ud30c\uc77c\uc740": 788, "\ud30c\uc77c\uc744": [781, 786, 788, 789], "\ud30c\uc77c\uc758": 788, "\ud30c\uc77c\uc774": [781, 788, 789], "\ud30c\uc77c\uc774\ub2e4": 788, "\ud30c\uccd0": 780, "\ud30c\ud0c0\uc154\ub2dd": 788, "\ud30c\ud0c0\uc158\uacfc": 786, "\ud30c\ud0c0\uc158\ub41c": 789, "\ud30c\ud0c0\uc158\uc5d0": 788, "\ud30c\ud130\uc158\ud558\uae30": 786, "\ud30c\ud2b8\ub85c": 802, "\ud30c\ud2f0\uc154\ub2dd": [780, 786], "\ud30c\ud2f0\uc154\ub2dd\uc740": 788, "\ud30c\ud2f0\uc154\ub2dd\uc744": 788, "\ud30c\ud2f0\uc154\ub2dd\uc758": 788, "\ud30c\ud2f0\uc154\ub2dd\ud55c\ub2e4": 788, "\ud30c\ud2f0\uc154\ub2dd\ud560": 788, "\ud30c\ud2f0\uc158": [785, 786, 787, 788, 789], "\ud30c\ud2f0\uc158\uacfc": 788, "\ud30c\ud2f0\uc158\ub418\uc5b4": 786, "\ud30c\ud2f0\uc158\ub41c": [785, 786, 788, 789], "\ud30c\ud2f0\uc158\ub4e4\uc5d0": 788, "\ud30c\ud2f0\uc158\ub4e4\uc744": [788, 789], "\ud30c\ud2f0\uc158\ub4e4\uc758": 788, "\ud30c\ud2f0\uc158\ub4e4\uc774": [788, 789], "\ud30c\ud2f0\uc158\uc5d0": 788, "\ud30c\ud2f0\uc158\uc5d0\uc11c": 786, "\ud30c\ud2f0\uc158\uc73c\ub85c": 788, "\ud30c\ud2f0\uc158\uc740": 788, "\ud30c\ud2f0\uc158\uc744": [786, 787, 788, 789], "\ud30c\ud2f0\uc158\uc758": [786, 788], "\ud30c\ud2f0\uc158\uc774": [788, 789], "\ud30c\ud2f0\uc158\uc774\ub2e4": 786, "\ud30c\ud2f0\uc158\ud558\uae30": 788, "\ud310\ub9e4\uc790": 791, "\ud310\ub9e4\ud568": 791, "\ud314\ub85c\uc6b0": 791, "\ud328\uc2a4": 812, "\ud328\uc2a4\uc6cc\ub4dc": 789, "\ud328\ud0a4\uc9c0": 782, "\ud328\ud0a4\uc9c0\ub4e4\uc744": 796, "\ud328\ud0a4\uc9c0\ub97c": [779, 788], "\ud398\uc774\ud37c\uc5d0\uc11c\ub294": 814, "\ud3b8\ub9ac\ud558\uace0": 780, "\ud3c9\uac00": [808, 818], "\ud3c9\uac00\ud558\ub294": 821, "\ud3c9\uade0": 819, "\ud3c9\uade0\uc744": 819, "\ud3ec\uba67\ub4e4\uc5d0\ub3c4": 796, "\ud3ec\uba67\ub4e4\uc774": 792, "\ud3ec\uba67\uc73c\ub85c": [788, 792, 796], "\ud3ec\uba67\uc744": 795, "\ud3ec\uba67\uc758": 812, "\ud3ec\uba67\uc774": 781, "\ud3ec\uba67\uc778": 781, "\ud3ec\ud2b8": 789, "\ud3ec\ud568": [785, 812], "\ud3ec\ud568\ub418\uc5b4": [788, 821], "\ud3ec\ud568\ub41c": 788, "\ud3ec\ud568\ub41c\ub2e4\ub294": 788, "\ud3ec\ud568\ub420": 805, "\ud3ec\ud568\ud558\uace0": [783, 785, 788, 805, 813], "\ud3ec\ud568\ud558\ub294": 805, "\ud3ec\ud568\ud558\ub294\ub370": 788, "\ud3ec\ud568\ud558\uc9c0": [805, 818], "\ud3ec\ud568\ud558\uc9c0\ub9cc": 805, "\ud3ec\ud568\ud55c": [791, 805, 809], "\ud3ec\ud568\ud55c\ub2e4": [788, 816], "\ud3ec\ud568\ud560": 805, "\ud3ec\ud568\ud574\uc57c": 805, "\ud3f4\ub354\ub294": 788, "\ud45c\uc2dc\ub41c": 805, "\ud45c\uc900": [779, 783], "\ud45c\uc900\uc801\uc778": 780, "\ud45c\ud604\ub418\uace0": 808, "\ud45c\ud604\ub418\uba70": 790, "\ud45c\ud604\ub418\uc5b4\uc57c": 820, "\ud45c\ud604\ub41c\ub2e4": [795, 796, 815, 816], "\ud45c\ud604\uc744": 821, "\ud45c\ud604\ud558\uace0": 791, "\ud45c\ud604\ud558\uae30": [791, 795, 799, 802], "\ud45c\ud604\ud558\ub294": [788, 791, 818], "\ud45c\ud604\ud558\ub294\ub370": 820, "\ud45c\ud604\ud558\uba74": 799, "\ud45c\ud604\ud560": 791, "\ud48d\ubd80\ud55c": 819, "\ud504\ub798\ud504\uc5d0\uc11c": 805, "\ud504\ub808\uc784\uc6cc\ud06c": 813, "\ud504\ub808\uc784\uc6cc\ud06c\uac00": 792, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0": 813, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c": 805, "\ud504\ub808\uc784\uc6cc\ud06c\uc758": [786, 796, 813], "\ud504\ub85c\uadf8\ub798\ubc0d": 790, "\ud504\ub85c\uc138\uc2a4": [786, 819], "\ud504\ub85c\uc138\uc2a4\ub294": [785, 786, 788, 804], "\ud504\ub85c\uc138\uc2a4\ub41c": 784, "\ud504\ub85c\uc138\uc2a4\ub4e4\uacfc\uc758": 786, "\ud504\ub85c\uc138\uc2a4\ub4e4\uc740": [785, 786], "\ud504\ub85c\uc138\uc2a4\ub4e4\uc744": [785, 786], "\ud504\ub85c\uc138\uc2a4\ub97c": [785, 786, 788, 807, 819], "\ud504\ub85c\uc138\uc2a4\ub9cc": 786, "\ud504\ub85c\uc138\uc2a4\uc5d0": 786, "\ud504\ub85c\uc138\uc2a4\uc5d0\uc11c": 786, "\ud504\ub85c\uc138\uc2a4\uc758": [786, 789], "\ud504\ub85c\uc138\uc2f1": [779, 784], "\ud504\ub85c\uc138\uc2f1\ub418\uc5b4": 817, "\ud504\ub85c\uc138\uc2f1\ub41c": 784, "\ud504\ub85c\uc138\uc2f1\uc758": 783, "\ud504\ub85c\uc138\uc2f1\ud558\uace0": 780, "\ud504\ub85c\uc138\uc2f1\ud558\ub294": [779, 782, 783], "\ud504\ub85c\ud1a0\ud0c0\uc785": 795, "\ud504\ub85c\ud2f0\uc5b4\uac00": 805, "\ud504\ub85c\ud37c\ud2f0\ub4e4\uc744": 783, "\ud504\ub85c\ud37c\ud2f0\ub97c": 783, "\ud504\ub860\ud2f0\uc5b4": 805, "\ud504\ub860\ud2f0\uc5b4\uac00": 805, "\ud504\ub860\ud2f0\uc5b4\ub294": 805, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uacfc": 805, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uc744": 805, "\ud504\ub860\ud2f0\uc5b4\ub85c": 805, "\ud504\ub860\ud2f0\uc5b4\ub97c": 805, "\ud504\ub860\ud2f0\uc5b4\uc5d0\uc11c": 805, "\ud504\ub860\ud2f0\uc5b4\uc758": 805, "\ud504\ub860\ud2f0\uc5b4\uc774\uace0": 805, "\ud53c\ucc98": [790, 792, 794, 796, 799, 801, 814, 819, 821], "\ud53c\ucc98\uac00": [793, 796, 811], "\ud53c\ucc98\ub294": 793, "\ud53c\ucc98\ub4e4\uacfc": 790, "\ud53c\ucc98\ub4e4\ub9cc": 793, "\ud53c\ucc98\ub4e4\uc740": 793, "\ud53c\ucc98\ub4e4\uc744": [791, 792, 796, 806, 811], "\ud53c\ucc98\ub77c\uace0": 798, "\ud53c\ucc98\ub85c": [793, 799, 818], "\ud53c\ucc98\ub97c": [785, 793, 798, 799, 805, 810, 811], "\ud53c\ucc98\ub9cc": 811, "\ud53c\ucc98\uc5d0": 801, "\ud53c\ucc98\uc640": [798, 799], "\ud53c\ucc98\uc758": [799, 810], "\ud53c\ucc98\uc774\uace0": [798, 815], "\ud53c\ucc98\uc774\ub2e4": 815, "\ud53c\uccd0": [780, 785, 786, 788, 794, 819, 821], "\ud53c\uccd0\uac00": [796, 810], "\ud53c\uccd0\ub294": [793, 805, 810, 816, 819], "\ud53c\uccd0\ub3c4": [788, 793, 821], "\ud53c\uccd0\ub4e4": [783, 811, 819], "\ud53c\uccd0\ub4e4\uacfc": [788, 819], "\ud53c\uccd0\ub4e4\ub85c\ubd80\ud130": 810, "\ud53c\uccd0\ub4e4\ub9cc": 786, "\ud53c\uccd0\ub4e4\uc5d0": [812, 818, 819], "\ud53c\uccd0\ub4e4\uc740": [799, 811, 817], "\ud53c\uccd0\ub4e4\uc744": [786, 788, 793, 796, 805, 806, 807, 809, 811, 819], "\ud53c\uccd0\ub4e4\uc758": 818, "\ud53c\uccd0\ub4e4\uc774": [806, 807, 811, 817], "\ud53c\uccd0\ub85c": 800, "\ud53c\uccd0\ub97c": [793, 796, 799, 800, 801, 804, 807, 810, 815, 819, 821], "\ud53c\uccd0\uc5d0": [801, 805, 812], "\ud53c\uccd0\uc640": [800, 801, 815], "\ud53c\uccd0\uc758": [801, 810, 821], "\ud53c\uccd0\uc774\ub2e4": 819, "\ud53c\ud558\ub294": 801, "\ud53c\ud560": 792, "\ud544\ub4dc": 799, "\ud544\ub4dc\ub294": 788, "\ud544\ub4dc\ub4e4\ub85c": 788, "\ud544\ub4dc\ub4e4\uc740": 788, "\ud544\ub4dc\ub4e4\uc744": 788, "\ud544\ub4dc\ub4e4\uc774\ub2e4": 788, "\ud544\ub4dc\ub97c": 788, "\ud544\ub4dc\uc5d0": [783, 788, 799], "\ud544\ub4dc\uc778": 788, "\ud544\uc694": 815, "\ud544\uc694\uac00": [788, 796, 801, 804, 805, 808], "\ud544\uc694\ub294": 786, "\ud544\uc694\ub85c": [786, 788], "\ud544\uc694\ub85c\ud558\uae30": 808, "\ud544\uc694\ud558\uace0": [804, 805], "\ud544\uc694\ud558\ub2e4": [786, 788, 805, 806, 810, 811, 818, 821], "\ud544\uc694\ud558\uc9c0": 796, "\ud544\uc694\ud55c": [780, 790, 804, 811, 813], "\ud544\uc694\ud55c\ub370": 808, "\ud544\uc694\ud55c\uc9c0": 811, "\ud558\uac70\ub098": 804, "\ud558\uac8c\ub41c\ub2e4": 818, "\ud558\uace0": [795, 803, 805, 806, 818], "\ud558\uae30": [783, 785, 796, 803, 805, 811, 819], "\ud558\ub098\uac00": [802, 821], "\ud558\ub098\ub294": [786, 795, 799, 801], "\ud558\ub098\ub85c": 786, "\ud558\ub098\ub85c\uc11c": 786, "\ud558\ub098\ub97c": [810, 821], "\ud558\ub098\uc529": 811, "\ud558\ub098\uc5d0\uc11c": 789, "\ud558\ub098\uc758": [783, 786, 788, 789, 796, 804, 808, 810, 815, 818, 819, 820], "\ud558\ub294": [780, 785, 786, 788, 799, 806, 807, 811, 812, 820], "\ud558\ub294\ub370": 805, "\ud558\ub294\uc9c0": 788, "\ud558\ub294\uc9c0\ub97c": [811, 814], "\ud558\uba70": 795, "\ud558\uba74": [805, 818], "\ud558\uba74\ub418\uae30": 809, "\ud558\uba74\ub41c\ub2e4": 805, "\ud558\uba74\uc11c": [785, 811], "\ud558\uc774\ub808\ubca8": 799, "\ud558\uc774\ud37c": 820, "\ud558\uc790": [780, 798], "\ud558\uc9c0\ub9cc": [783, 787, 788, 791, 795, 805, 808, 815], "\ud559\uc2b5": [786, 788, 797, 803, 805, 808, 815, 817], "\ud559\uc2b5\uacfc": [785, 804], "\ud559\uc2b5\ub420": 809, "\ud559\uc2b5\uc2dc": 788, "\ud559\uc2b5\uc2dc\ud0a4\ub294": [815, 820], "\ud559\uc2b5\uc5d0": [783, 785, 789, 808, 812], "\ud559\uc2b5\uc5d0\ub3c4": 811, "\ud559\uc2b5\uc5d0\uc11c": [803, 811], "\ud559\uc2b5\uc5d0\uc11c\ub294": [786, 787], "\ud559\uc2b5\uc740": [785, 812, 821], "\ud559\uc2b5\uc744": [785, 786, 787, 789, 804, 811, 812, 819], "\ud559\uc2b5\uc758": [815, 819], "\ud559\uc2b5\uc774": [783, 788, 789, 811, 820], "\ud559\uc2b5\uc774\ub2e4": 820, "\ud559\uc2b5\ud558\uae30": [785, 786, 797, 804, 819], "\ud559\uc2b5\ud558\ub294": [785, 804, 806, 811, 817], "\ud559\uc2b5\ud558\ub294\ub370": [804, 808], "\ud559\uc2b5\ud560": [806, 812, 814, 819], "\ud55c": [782, 785, 786, 787, 788, 789, 793, 796, 810, 816, 820, 821], "\ud55c\uac00\uc9c0": 799, "\ud55c\uac1c\uac00": 819, "\ud55c\uac1c\ub97c": 812, "\ud55c\uac1c\uc529": 819, "\ud55c\uac1c\uc5d0": 805, "\ud55c\uac1c\uc758": [782, 785, 788, 793, 796, 799, 819], "\ud55c\uae00": 797, "\ud55c\ub2e4": [781, 783, 785, 786, 787, 788, 789, 793, 795, 796, 799, 801, 802, 805, 806, 809, 810, 811, 812, 814, 815, 816, 818, 820], "\ud55c\ub2e4\uba74": [806, 818], "\ud55c\ubc88\uc5d0": 808, "\ud55c\ubc88\uc758": 819, "\ud560": [786, 788, 789, 792, 804, 805, 806, 811, 820], "\ud560\ub2f9\ub418\uc5b4": [788, 821], "\ud560\ub2f9\ub418\uc5c8\ub2e4\uba74": 788, "\ud560\ub2f9\ub41c": 788, "\ud560\ub2f9\ub41c\ub2e4": 788, "\ud560\ub2f9\uc73c\ub85c": 793, "\ud560\ub2f9\uc744": 787, "\ud560\ub2f9\ud558\ub294": 793, "\ud560\ub2f9\ud558\uc9c0": 788, "\ud560\ub2f9\ud55c": 788, "\ud560\ub2f9\ud560": 786, "\ud560\ub2f9\ud574\uc57c": 786, "\ud560\uc9c0\ub97c": 787, "\ud568\uaed8": [785, 786, 788, 792, 794, 801, 806, 821], "\ud568\uc218": [783, 795, 796, 798, 801, 812, 813, 821], "\ud568\uc218\uac00": [786, 799, 820], "\ud568\uc218\ub294": [786, 799, 805, 809, 814, 815, 816, 818, 819], "\ud568\uc218\ub4e4": [780, 807], "\ud568\uc218\ub4e4\uacfc": 799, "\ud568\uc218\ub4e4\ub85c": 815, "\ud568\uc218\ub4e4\uc5d0": 799, "\ud568\uc218\ub4e4\uc740": [792, 799, 807, 819], "\ud568\uc218\ub4e4\uc744": [786, 799], "\ud568\uc218\ub4e4\uc774": 805, "\ud568\uc218\ub85c": [781, 799, 818, 819, 820], "\ud568\uc218\ub85c\ub294": 799, "\ud568\uc218\ub97c": [780, 781, 784, 795, 799, 801, 805, 809, 810, 814, 815, 816, 818], "\ud568\uc218\uc548\uc5d0": 819, "\ud568\uc218\uc5d0": 783, "\ud568\uc218\uc5d0\uc11c": [783, 800, 813, 819], "\ud568\uc218\uc5d0\uc11c\uc758": 813, "\ud568\uc218\uc640": 801, "\ud568\uc218\uc758": [783, 799, 805, 814, 815], "\ud568\uc218\uc774\uace0": 805, "\ud568\uc218\uc774\ub2e4": [799, 805, 809, 814, 815, 816], "\ud569": 819, "\ud569\uc0b0\ud558\ub294": 819, "\ud569\uc740": 801, "\ud569\uccd0\uc11c": [798, 819], "\ud569\uccd0\uc57c\ud55c\ub2e4": [805, 811], "\ud569\uccd0\uc9c0\ub294\uc9c0\uc5d0": 808, "\ud569\ucce4\ub294\ub370": 799, "\ud569\uce58\uace0": 819, "\ud569\uce58\ub294": 802, "\ud569\uce58\ub294\ub370": 805, "\ud569\uce5c": 818, "\ud569\uce5c\ub2e4": 796, "\ud569\ud558\ub294": [799, 821], "\ud569\ud574\uc11c": 807, "\ud56d\uc0c1": [788, 792, 799, 805, 815], "\ud574\uacb0\ud558\uae30": 812, "\ud574\ub2f9": [789, 818, 821], "\ud574\ub2f9\ud558\ub294": [795, 811], "\ud574\ub2f9\ud55c\ub2e4": 796, "\ud574\uc11c": [786, 805], "\ud574\uc57c\ud55c\ub2e4": [810, 819], "\ud574\uc5d0": 791, "\ud574\uc8fc\uae30": 799, "\ud574\uc8fc\ub294": [781, 809], "\ud574\uc900\ub2e4": [785, 786, 811], "\ud575\uc2ec": 790, "\ud588\ub2e4\uba74": 791, "\ud588\uc73c\ub2c8": 810, "\ud589": [786, 788, 793], "\ud589\ub4e4": 810, "\ud589\ub82c\uacfc": 792, "\ud589\ub82c\uc744": 792, "\ud589\ub82c\uc758": 801, "\ud589\uc73c\ub85c": 810, "\ud589\uc740": 788, "\ud589\uc758": [786, 810], "\ud5a5\uc0c1\uc2dc\ucf1c\uc11c": 783, "\ud5a5\uc0c1\uc744": 807, "\ud5a5\uc0c1\ud558\uace0": 812, "\ud5a5\ud6c4": 788, "\ud5c8\uc6a9\ub41c\ub2e4": 793, "\ud5c8\uc6a9\ud55c\ub2e4": 812, "\ud5e4\ud14c\ub85c\uadf8\ub798\ud504\ub294": 802, "\ud604\uc0c1\uc744": 792, "\ud604\uc7ac": [785, 786], "\ud604\uc7ac\ub294": [786, 807], "\ud611\uccd0\uc9c4": 819, "\ud615\uc2dd\uc73c\ub85c": 788, "\ud615\ud0dc\ub85c": [785, 788, 791, 792, 799], "\ud615\ud0dc\uc758": [792, 796], "\ud615\ud0dc\uc774\uace0": 788, "\ud638\ucd9c\ub418\uace0": 816, "\ud638\ucd9c\ub418\uc5b4\uc57c": 786, "\ud638\ucd9c\ub41c\ub2e4": 786, "\ud638\ucd9c\ub420": 814, "\ud638\ucd9c\ub85c": [799, 814], "\ud638\ucd9c\uc2dc": 801, "\ud638\ucd9c\uc774": 799, "\ud638\ucd9c\ud558\uae30": 786, "\ud638\ucd9c\ud558\ub294": [799, 803], "\ud638\ucd9c\ud558\uc9c0": 799, "\ud638\ucd9c\ud55c": 786, "\ud638\ucd9c\ud55c\ub2e4": 819, "\ud638\ucd9c\ud560": [796, 799, 806, 809], "\ud638\ucd9c\ud574\uc57c": 801, "\ud638\ud658\ub418\ub294": [804, 817, 819], "\ud638\ud658\ub41c\ub2e4": 812, "\ud655\ub960": 809, "\ud655\ub960\ub4e4": 821, "\ud655\ub960\uc5d0": 805, "\ud655\uc778\ub418\uba74": 815, "\ud655\uc778\ud558\ub294": [781, 815], "\ud655\uc778\ud558\uc790": [783, 809], "\ud655\uc778\ud55c\ub2e4": 806, "\ud655\uc778\ud560": [783, 821], "\ud655\uc7a5\ud558\ub294": [815, 820], "\ud655\uc7a5\ud574\uc11c": 788, "\ud658\uacbd": 788, "\ud658\uc601\ud55c\ub2e4": 813, "\ud65c\uc131\ud654": [812, 815], "\ud65c\uc131\ud654\uc2dc\ud0ac": 799, "\ud65c\uc131\ud654\ud558\uba74": 812, "\ud65c\uc131\ud654\ud574\uc11c": 788, "\ud65c\uc6a9\ud558\uae30": [812, 815], "\ud65c\uc6a9\ud558\ub294": 801, "\ud65c\uc6a9\ud55c": 821, "\ud65c\uc6a9\ud55c\ub2e4": 821, "\ud65c\uc6a9\ud560": 821, "\ud65c\uc6a9\ud574\uc11c": 788, "\ud68c": 821, "\ud68c\uc18c": 792, "\ud6a8\uacfc\uc801\uc73c\ub85c": 819, "\ud6a8\uc728\uc801\uc73c\ub85c": [795, 798], "\ud6a8\uc728\uc801\uc774\uace0": 812, "\ud6a8\uc728\uc801\uc774\ub2e4": 784, "\ud6a8\uc728\uc801\uc778": [798, 810, 815], "\ud6a8\uc728\uc801\uc778\ub370": 801, "\ud6c4": [788, 801, 803, 804, 811, 819], "\ud6c4\uc5d0": [783, 805], "\ud6c4\uc5d0\ub294": 815, "\ud6c4\uc758": [783, 788], "\ud6c4\uc790\uac00": 801, "\ud6c4\uc790\ub294": 786, "\ud6e8\uc52c": [801, 804], "\ud754\ud558\uac8c": 800, "\ud754\ud55c": 799, "\ud754\ud788": [791, 803, 814, 818, 819], "\ud76c\uc18c\ud589\ub82c\uacfc": 792, "\ud788\ub4e0": 821, "\ud835\udc3e": 829}, "titles": ["dgl", "dgl.DGLGraph", "dgl.data", "dgl.dataloading", "dgl.distributed", "dgl.function", "dgl.geometry", "\ud83c\udd95 dgl.graphbolt", "dgl.multiprocessing", "dgl.ops", "dgl.optim", "dgl.sampling", "dgl.sparse", "API Reference", "Benchmark the performance of KNN algorithms", "dgl.nn (MXNet)", "dgl.nn (PyTorch)", "dgl.nn (TensorFlow)", "dgl.nn.functional", "dgl.transforms", "User-defined Functions", "Contribute to DGL", "DGL Foreign Function Interface (FFI)", "Environment Variables", "Frequently Asked Questions (FAQ)", "&lt;no title&gt;", "dgl.DGLGraph.__getitem__", "dgl.DGLGraph.add_edges", "dgl.DGLGraph.add_nodes", "dgl.DGLGraph.add_self_loop", "dgl.DGLGraph.adj", "dgl.DGLGraph.adj_external", "dgl.DGLGraph.adj_tensors", "dgl.DGLGraph.adjacency_matrix", "dgl.DGLGraph.apply_edges", "dgl.DGLGraph.apply_nodes", "dgl.DGLGraph.batch_num_edges", "dgl.DGLGraph.batch_num_nodes", "dgl.DGLGraph.batch_size", "dgl.DGLGraph.canonical_etypes", "dgl.DGLGraph.cpu", "dgl.DGLGraph.create_formats_", "dgl.DGLGraph.device", "dgl.DGLGraph.dstdata", "dgl.DGLGraph.dstnodes", "dgl.DGLGraph.dsttypes", "dgl.DGLGraph.edata", "dgl.DGLGraph.edge_attr_schemes", "dgl.DGLGraph.edge_ids", "dgl.DGLGraph.edge_subgraph", "dgl.DGLGraph.edge_type_subgraph", "dgl.DGLGraph.edges", "dgl.DGLGraph.etypes", "dgl.DGLGraph.filter_edges", "dgl.DGLGraph.filter_nodes", "dgl.DGLGraph.find_edges", "dgl.DGLGraph.formats", "dgl.DGLGraph.has_edges_between", "dgl.DGLGraph.has_nodes", "dgl.DGLGraph.idtype", "dgl.DGLGraph.in_degrees", "dgl.DGLGraph.in_edges", "dgl.DGLGraph.inc", "dgl.DGLGraph.incidence_matrix", "dgl.DGLGraph.int", "dgl.DGLGraph.is_homogeneous", "dgl.DGLGraph.is_multigraph", "dgl.DGLGraph.is_pinned", "dgl.DGLGraph.is_unibipartite", "dgl.DGLGraph.line_graph", "dgl.DGLGraph.local_scope", "dgl.DGLGraph.long", "dgl.DGLGraph.metagraph", "dgl.DGLGraph.multi_update_all", "dgl.DGLGraph.ndata", "dgl.DGLGraph.node_attr_schemes", "dgl.DGLGraph.node_type_subgraph", "dgl.DGLGraph.nodes", "dgl.DGLGraph.ntypes", "dgl.DGLGraph.num_dst_nodes", "dgl.DGLGraph.num_edges", "dgl.DGLGraph.num_nodes", "dgl.DGLGraph.num_src_nodes", "dgl.DGLGraph.number_of_dst_nodes", "dgl.DGLGraph.number_of_edges", "dgl.DGLGraph.number_of_nodes", "dgl.DGLGraph.number_of_src_nodes", "dgl.DGLGraph.out_degrees", "dgl.DGLGraph.out_edges", "dgl.DGLGraph.pin_memory_", "dgl.DGLGraph.predecessors", "dgl.DGLGraph.prop_edges", "dgl.DGLGraph.prop_nodes", "dgl.DGLGraph.pull", "dgl.DGLGraph.push", "dgl.DGLGraph.remove_edges", "dgl.DGLGraph.remove_nodes", "dgl.DGLGraph.remove_self_loop", "dgl.DGLGraph.reorder_graph", "dgl.DGLGraph.reverse", "dgl.DGLGraph.send_and_recv", "dgl.DGLGraph.set_batch_num_edges", "dgl.DGLGraph.set_batch_num_nodes", "dgl.DGLGraph.srcdata", "dgl.DGLGraph.srcnodes", "dgl.DGLGraph.srctypes", "dgl.DGLGraph.subgraph", "dgl.DGLGraph.successors", "dgl.DGLGraph.to", "dgl.DGLGraph.to_canonical_etype", "dgl.DGLGraph.to_cugraph", "dgl.DGLGraph.to_simple", "dgl.DGLGraph.unpin_memory_", "dgl.DGLGraph.update_all", "dgl.add_edges", "dgl.add_nodes", "dgl.add_reverse_edges", "dgl.add_self_loop", "dgl.adj_product_graph", "dgl.adj_sum_graph", "dgl.adjusted_homophily", "dgl.apply_each", "dgl.batch", "dgl.bfs_edges_generator", "dgl.bfs_nodes_generator", "dgl.bipartite_from_networkx", "dgl.bipartite_from_scipy", "dgl.block_to_graph", "dgl.broadcast_edges", "dgl.broadcast_nodes", "dgl.compact_graphs", "dgl.create_block", "AIFBDataset", "AMDataset", "ActorDataset", "AmazonCoBuyComputerDataset", "AmazonCoBuyPhotoDataset", "AmazonRatingsDataset", "AsGraphPredDataset", "AsLinkPredDataset", "AsNodePredDataset", "BA2MotifDataset", "BACommunityDataset", "BAShapeDataset", "BGSDataset", "BitcoinOTCDataset", "CIFAR10SuperPixelDataset", "CLUSTERDataset", "CSVDataset", "ChameleonDataset", "CiteseerGraphDataset", "CoauthorCSDataset", "CoauthorPhysicsDataset", "CoraFullDataset", "CoraGraphDataset", "CornellDataset", "DGLDataset", "FB15k237Dataset", "FB15kDataset", "FakeNewsDataset", "FlickrDataset", "FraudAmazonDataset", "FraudDataset", "FraudYelpDataset", "GDELTDataset", "GINDataset", "ICEWS18Dataset", "KarateClubDataset", "LegacyTUDataset", "MNISTSuperPixelDataset", "MUTAGDataset", "MinesweeperDataset", "MiniGCDataset", "MovieLensDataset", "PATTERNDataset", "PPIDataset", "PubmedGraphDataset", "QM7bDataset", "QM9Dataset", "QM9EdgeDataset", "QuestionsDataset", "RedditDataset", "RomanEmpireDataset", "SBMMixtureDataset", "SSTDataset", "SquirrelDataset", "TUDataset", "TexasDataset", "TolokersDataset", "TreeCycleDataset", "TreeGridDataset", "WN18Dataset", "WikiCSDataset", "WisconsinDataset", "YelpDataset", "ZINCDataset", "Subset", "add_node_property_split", "add_nodepred_split", "check_sha1", "download", "extract_archive", "get_download_dir", "load_info", "load_labels", "mask_nodes_by_property", "save_info", "split_dataset", "dgl.dataloading.BlockSampler", "ClusterGCNSampler", "DataLoader", "DistEdgeDataLoader", "DistNodeDataLoader", "GraphDataLoader", "LaborSampler", "MultiLayerFullNeighborSampler", "NeighborSampler", "SAINTSampler", "Sampler", "ShaDowKHopSampler", "dgl.dataloading.as_edge_prediction_sampler", "LazyFeature", "set_dst_lazy_features", "set_edge_lazy_features", "set_node_lazy_features", "set_src_lazy_features", "GlobalUniform", "PerSourceUniform", "Uniform", "dgl.dfs_edges_generator", "dgl.dfs_labeled_edges_generator", "dgl.distributed.dgl_partition_to_graphbolt", "dgl.distributed.edge_split", "dgl.distributed.find_edges", "dgl.distributed.in_subgraph", "dgl.distributed.initialize", "dgl.distributed.load_partition", "dgl.distributed.load_partition_book", "dgl.distributed.load_partition_feats", "dgl.distributed.node_split", "dgl.distributed.partition_graph", "dgl.distributed.sample_etype_neighbors", "dgl.distributed.sample_neighbors", "dgl.double_radius_node_labeling", "dgl.edge_homophily", "dgl.edge_label_informativeness", "dgl.edge_subgraph", "dgl.edge_type_subgraph", "dgl.from_cugraph", "dgl.from_networkx", "dgl.from_scipy", "dgl.function.copy_e", "dgl.function.copy_u", "dgl.function.e_add_u", "dgl.function.e_add_v", "dgl.function.e_div_u", "dgl.function.e_div_v", "dgl.function.e_dot_u", "dgl.function.e_dot_v", "dgl.function.e_mul_u", "dgl.function.e_mul_v", "dgl.function.e_sub_u", "dgl.function.e_sub_v", "dgl.function.max", "dgl.function.mean", "dgl.function.min", "dgl.function.sum", "dgl.function.u_add_e", "dgl.function.u_add_v", "dgl.function.u_div_e", "dgl.function.u_div_v", "dgl.function.u_dot_e", "dgl.function.u_dot_v", "dgl.function.u_mul_e", "dgl.function.u_mul_v", "dgl.function.u_sub_e", "dgl.function.u_sub_v", "dgl.function.v_add_e", "dgl.function.v_add_u", "dgl.function.v_div_e", "dgl.function.v_div_u", "dgl.function.v_dot_e", "dgl.function.v_dot_u", "dgl.function.v_mul_e", "dgl.function.v_mul_u", "dgl.function.v_sub_e", "dgl.function.v_sub_u", "dgl.graph", "BasicFeatureStore", "BuiltinDataset", "CPUCachedFeature", "CopyTo", "DataLoader", "Dataset", "DiskBasedFeature", "DistributedItemSampler", "Feature", "FeatureFetcher", "FeatureStore", "FusedCSCSamplingGraph", "GPUCachedFeature", "HeteroItemSet", "InSubgraphSampler", "ItemSampler", "ItemSet", "LayerNeighborSampler", "LegacyDataset", "MiniBatch", "MiniBatchTransformer", "NegativeSampler", "NeighborSampler", "OnDiskDataset", "SampledSubgraph", "SampledSubgraphImpl", "SamplingGraph", "SubgraphSampler", "Task", "TemporalLayerNeighborSampler", "TemporalNeighborSampler", "TorchBasedFeature", "TorchBasedFeatureStore", "UniformNegativeSampler", "dgl.graphbolt.add_reverse_edges", "dgl.graphbolt.compact_csc_format", "dgl.graphbolt.cpu_cached_feature", "dgl.graphbolt.etype_str_to_tuple", "dgl.graphbolt.etype_tuple_to_str", "dgl.graphbolt.exclude_seed_edges", "dgl.graphbolt.expand_indptr", "dgl.graphbolt.from_dglgraph", "dgl.graphbolt.fused_csc_sampling_graph", "dgl.graphbolt.gpu_cached_feature", "dgl.graphbolt.index_select", "dgl.graphbolt.indptr_edge_ids", "dgl.graphbolt.isin", "dgl.graphbolt.load_from_shared_memory", "dgl.graphbolt.numpy_save_aligned", "dgl.graphbolt.seed", "dgl.graphbolt.unique_and_compact", "dgl.graphbolt.unique_and_compact_csc_formats", "dgl.heterograph", "dgl.in_subgraph", "dgl.is_libxsmm_enabled", "dgl.khop_adj", "dgl.khop_graph", "dgl.khop_in_subgraph", "dgl.khop_out_subgraph", "dgl.knn_graph", "dgl.lap_pe", "dgl.laplacian_lambda_max", "dgl.line_graph", "dgl.linkx_homophily", "dgl.load_graphs", "dgl.max_edges", "dgl.max_nodes", "dgl.mean_edges", "dgl.mean_nodes", "dgl.merge", "dgl.metapath_reachable_graph", "dgl.metis_partition", "dgl.metis_partition_assignment", "dgl.multiprocessing.pytorch.call_once_and_share", "dgl.multiprocessing.pytorch.shared_tensor", "dgl.nn.functional.edge_softmax", "HeteroGraphConv", "AGNNConv", "APPNPConv", "ChebConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "EdgeConv", "GATConv", "GINConv", "GMMConv", "GatedGraphConv", "GraphConv", "NNConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SortPooling", "SumPooling", "Sequential", "DeepWalk", "HeteroEmbedding", "HeteroGraphConv", "HeteroLinear", "MetaPath2Vec", "TypedLinear", "AGNNConv", "APPNPConv", "AtomicConv", "CFConv", "ChebConv", "CuGraphGATConv", "CuGraphRelGraphConv", "CuGraphSAGEConv", "DGNConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "DotGatConv", "EGATConv", "EGNNConv", "EdgeConv", "EdgeGATConv", "EdgeWeightNorm", "GATConv", "GATv2Conv", "GCN2Conv", "GINConv", "GINEConv", "GMMConv", "GatedGCNConv", "GatedGraphConv", "GraphConv", "GroupRevRes", "HGTConv", "NNConv", "PNAConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "TWIRLSConv", "TWIRLSUnfoldingAndAttention", "GNNExplainer", "HeteroGNNExplainer", "HeteroPGExplainer", "HeteroSubgraphX", "PGExplainer", "SubgraphX", "KNNGraph", "RadiusGraph", "SegmentedKNNGraph", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SetTransformerDecoder", "SetTransformerEncoder", "SortPooling", "SumPooling", "WeightAndSum", "BiasedMHA", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "LapPosEncoder", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "EdgePredictor", "TransE", "TransR", "NodeEmbedding", "JumpingKnowledge", "LabelPropagation", "Sequential", "WeightBasis", "APPNPConv", "ChebConv", "GATConv", "GINConv", "GraphConv", "RelGraphConv", "SAGEConv", "SGConv", "AvgPooling", "GlobalAttentionPooling", "HeteroGraphConv", "MaxPooling", "SortPooling", "SumPooling", "dgl.node_homophily", "dgl.node_label_informativeness", "dgl.node_subgraph", "dgl.node_type_subgraph", "dgl.norm_by_dst", "dgl.ops.copy_e_max", "dgl.ops.copy_e_mean", "dgl.ops.copy_e_min", "dgl.ops.copy_e_sum", "dgl.ops.copy_u", "dgl.ops.copy_u_max", "dgl.ops.copy_u_mean", "dgl.ops.copy_u_min", "dgl.ops.copy_u_sum", "dgl.ops.copy_v", "dgl.ops.e_add_u", "dgl.ops.e_add_v", "dgl.ops.e_div_u", "dgl.ops.e_div_v", "dgl.ops.e_dot_u", "dgl.ops.e_dot_v", "dgl.ops.e_mul_u", "dgl.ops.e_mul_v", "dgl.ops.e_sub_u", "dgl.ops.e_sub_v", "dgl.ops.gather_mm", "dgl.ops.gsddmm", "dgl.ops.gspmm", "dgl.ops.segment_mm", "dgl.ops.segment_reduce", "dgl.ops.u_add_e", "dgl.ops.u_add_e_max", "dgl.ops.u_add_e_mean", "dgl.ops.u_add_e_min", "dgl.ops.u_add_e_sum", "dgl.ops.u_add_v", "dgl.ops.u_div_e", "dgl.ops.u_div_e_max", "dgl.ops.u_div_e_mean", "dgl.ops.u_div_e_min", "dgl.ops.u_div_e_sum", "dgl.ops.u_div_v", "dgl.ops.u_dot_e", "dgl.ops.u_dot_v", "dgl.ops.u_mul_e", "dgl.ops.u_mul_e_max", "dgl.ops.u_mul_e_mean", "dgl.ops.u_mul_e_min", "dgl.ops.u_mul_e_sum", "dgl.ops.u_mul_v", "dgl.ops.u_sub_e", "dgl.ops.u_sub_e_max", "dgl.ops.u_sub_e_mean", "dgl.ops.u_sub_e_min", "dgl.ops.u_sub_e_sum", "dgl.ops.u_sub_v", "dgl.ops.v_add_e", "dgl.ops.v_add_u", "dgl.ops.v_div_e", "dgl.ops.v_div_u", "dgl.ops.v_dot_e", "dgl.ops.v_dot_u", "dgl.ops.v_mul_e", "dgl.ops.v_mul_u", "dgl.ops.v_sub_e", "dgl.ops.v_sub_u", "dgl.out_subgraph", "dgl.partition_graph_with_halo", "dgl.prop_edges", "dgl.prop_edges_dfs", "dgl.prop_nodes", "dgl.prop_nodes_bfs", "dgl.prop_nodes_topo", "dgl.radius_graph", "dgl.rand_bipartite", "dgl.rand_graph", "dgl.random_walk_pe", "dgl.readout_edges", "dgl.readout_nodes", "dgl.remove_edges", "dgl.remove_nodes", "dgl.remove_self_loop", "dgl.reorder_graph", "dgl.reverse", "dgl.sampling.PinSAGESampler", "dgl.sampling.global_uniform_negative_sampling", "dgl.sampling.node2vec_random_walk", "dgl.sampling.pack_traces", "dgl.sampling.random_walk", "dgl.sampling.sample_labors", "dgl.sampling.sample_neighbors", "dgl.sampling.sample_neighbors_biased", "dgl.sampling.select_topk", "dgl.save_graphs", "dgl.seed", "dgl.segmented_knn_graph", "dgl.shortest_dist", "dgl.slice_batch", "dgl.softmax_edges", "dgl.softmax_nodes", "dgl.sort_csc_by_tag", "dgl.sort_csr_by_tag", "dgl.sparse.SparseMatrix.T", "dgl.sparse.SparseMatrix.coalesce", "dgl.sparse.SparseMatrix.col", "dgl.sparse.SparseMatrix.coo", "dgl.sparse.SparseMatrix.cpu", "dgl.sparse.SparseMatrix.csc", "dgl.sparse.SparseMatrix.csr", "dgl.sparse.SparseMatrix.cuda", "dgl.sparse.SparseMatrix.device", "dgl.sparse.SparseMatrix.double", "dgl.sparse.SparseMatrix.dtype", "dgl.sparse.SparseMatrix.float", "dgl.sparse.SparseMatrix.has_duplicate", "dgl.sparse.SparseMatrix.indices", "dgl.sparse.SparseMatrix.int", "dgl.sparse.SparseMatrix.long", "dgl.sparse.SparseMatrix.neg", "dgl.sparse.SparseMatrix.nnz", "dgl.sparse.SparseMatrix.reduce", "dgl.sparse.SparseMatrix.row", "dgl.sparse.SparseMatrix.shape", "dgl.sparse.SparseMatrix.smax", "dgl.sparse.SparseMatrix.smean", "dgl.sparse.SparseMatrix.smin", "dgl.sparse.SparseMatrix.softmax", "dgl.sparse.SparseMatrix.sum", "dgl.sparse.SparseMatrix.t", "dgl.sparse.SparseMatrix.to", "dgl.sparse.SparseMatrix.to_dense", "dgl.sparse.SparseMatrix.transpose", "dgl.sparse.SparseMatrix.val", "dgl.sparse.add", "dgl.sparse.bsddmm", "dgl.sparse.bspmm", "dgl.sparse.diag", "dgl.sparse.div", "dgl.sparse.from_coo", "dgl.sparse.from_csc", "dgl.sparse.from_csr", "dgl.sparse.identity", "dgl.sparse.matmul", "dgl.sparse.mul", "dgl.sparse.power", "dgl.sparse.sddmm", "dgl.sparse.softmax", "dgl.sparse.sp_add_v", "dgl.sparse.sp_broadcast_v", "dgl.sparse.sp_div_v", "dgl.sparse.sp_mul_v", "dgl.sparse.sp_sub_v", "dgl.sparse.spmatrix", "dgl.sparse.spmm", "dgl.sparse.spspmm", "dgl.sparse.sub", "dgl.sparse.val_like", "dgl.sum_edges", "dgl.sum_nodes", "dgl.svd_pe", "dgl.to_bidirected", "dgl.to_block", "dgl.to_cugraph", "dgl.to_double", "dgl.to_float", "dgl.to_half", "dgl.to_heterogeneous", "dgl.to_homogeneous", "dgl.to_networkx", "dgl.to_simple", "dgl.to_simple_graph", "dgl.topk_edges", "dgl.topk_nodes", "dgl.topological_nodes_generator", "AddEdge", "AddMetaPaths", "AddReverse", "AddSelfLoop", "BaseTransform", "Compose", "DropEdge", "DropNode", "FeatMask", "GCNNorm", "GDC", "HeatKernel", "KHopGraph", "LapPE", "LineGraph", "NodeShuffle", "PPR", "RandomWalkPE", "RemoveSelfLoop", "RowFeatNormalizer", "SIGNDiffusion", "SVDPE", "ToLevi", "ToSimple", "dgl.udf.EdgeBatch.batch_size", "dgl.udf.EdgeBatch.data", "dgl.udf.EdgeBatch.dst", "dgl.udf.EdgeBatch.edges", "dgl.udf.EdgeBatch.src", "dgl.udf.NodeBatch.batch_size", "dgl.udf.NodeBatch.data", "dgl.udf.NodeBatch.mailbox", "dgl.udf.NodeBatch.nodes", "dgl.unbatch", "dgl.use_libxsmm", "Prepare Data", "\ud83c\udd95 Tutorial: Graph Transformer", "Build Model", "Chapter 4: Graph Data Pipeline", "4.1 DGLDataset class", "4.2 Download raw data (optional)", "4.6 Loading data from CSV files", "4.5 Loading OGB datasets using <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> package", "4.3 Process data", "4.4 Save and load data", "Chapter 7: Distributed Training", "7.3 Programming APIs", "7.5 Heterogeneous Graph Under The Hood", "7.4 Advanced Graph Partitioning", "7.1 Data Preprocessing", "7.2 Tools for launching distributed training/inference", "Chapter 1: Graph", "1.1 Some Basic Definitions about Graphs (Graphs 101)", "1.4 Creating Graphs from External Sources", "1.3 Node and Edge Features", "1.6 Using DGLGraph on a GPU", "1.2 Graphs, Nodes, and Edges", "1.5 Heterogeneous Graphs", "User Guide", "Chapter 2: Message Passing", "2.1 Built-in Functions and Message Passing APIs", "2.2 Writing Efficient Message Passing Code", "2.5 Message Passing on Heterogeneous Graph", "2.3 Apply Message Passing On Part Of The Graph", "Chapter 6: Stochastic Training on Large Graphs", "6.4 Implementing Custom Graph Samplers", "6.2 Training GNN for Edge Classification with Neighborhood Sampling", "6.8 Using GPU for Neighborhood Sampling", "6.7 Exact Offline Inference on Large Graphs", "6.3 Training GNN for Link Prediction with Neighborhood Sampling", "6.6 Implementing Custom GNN Module for Mini-batch Training", "6.1 Training GNN for Node Classification with Neighborhood Sampling", "6.9 Data Loading Parallelism", "6.5 Training GNN with DGL sparse", "Chapter 8: Mixed Precision Training", "Chapter 3: Building GNN Modules", "3.1 DGL NN Module Construction Function", "3.2 DGL NN Module Forward Function", "3.3 Heterogeneous GraphConv Module", "Chapter 5: Training Graph Neural Networks", "5.2 Edge Classification/Regression", "5.5 Use of Edge Weights", "5.4 Graph Classification", "5.3 Link Prediction", "5.1 Node Classification/Regression", "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053", "4.1 DGLDataset\u7c7b", "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09", "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6", "4.3 \u5904\u7406\u6570\u636e", "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e", "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3", "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API", "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406", "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177", "\u7b2c1\u7ae0\uff1a\u56fe", "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5", "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe", "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81", "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph", "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9", "1.5 \u5f02\u6784\u56fe", "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011", "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f", "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API", "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801", "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3", "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668", "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad", "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757", "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757", "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570", "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570", "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757", "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc", "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52", "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd", "5.4 \u6574\u56fe\u5206\u7c7b", "5.3 \u94fe\u63a5\u9884\u6d4b", "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52", "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778", "4.1 DGLDataset \ud074\ub798\uc2a4", "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)", "4.5 <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30", "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1", "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529", "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5", "7.2 \ubd84\uc0b0 APIs", "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30", "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac", "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4", "1\uc7a5: \uadf8\ub798\ud504", "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)", "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30", "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98", "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30", "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0", "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)", "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]", "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)", "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4", "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30", "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95", "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec", "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30", "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5", "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30", "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30", "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860", "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30", "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "8\uc7a5: Mixed Precision \ud559\uc2b5", "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30", "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218", "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218", "3.3 Heterogeneous GraphConv \ubaa8\ub4c8", "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30", "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)", "5.4 \uadf8\ub798\ud504 \ubd84\ub958", "5.3 \ub9c1\ud06c \uc608\uce21", "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)", "Welcome to Deep Graph Library Tutorials and Documentation", "Install and Setup", "Building a Graph Convolutional Network Using Sparse Matrices", "Graph Diffusion in Graph Neural Networks", "Graph Transformer in a Nutshell", "Hypergraph Neural Networks", "Tutorials: dgl.sparse", "Quickstart", "Performance Benchmarks", "Resources", "Computation times", "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt", "Link Prediction", "Multi-GPU Node Classification", "Neighbor Sampling Overview", "Node Classification", "Composing OnDiskDataset from raw data", "YAML specification", "OnDiskDataset for Heterogeneous Graph", "OnDiskDataset for Homogeneous Graph", "Node Classification with DGL", "How Does DGL Represent A Graph?", "Write your own GNN module", "Link Prediction using Graph Neural Networks", "Training a GNN for Graph Classification", "Make Your Own Dataset", "A Blitz Introduction to DGL", "Computation times", "Improve Scalability on Multi-Core CPUs", "CPU Best Practices", "Training on CPUs", "Computation times", "Distributed Node Classification", "Distributed Link Prediction", "Distributed training", "Computation times", "Graph Convolutional Network", "Relational Graph Convolutional Network", "Line Graph Neural Network", "Understand Graph Attention Network", "Graph neural networks and its variants", "Computation times", "Tree-LSTM in DGL", "Batching many small graphs", "Computation times", "Generative Models of Graphs", "Generative models", "Computation times", "Capsule Network", "Transformer as a Graph Neural Network", "Revisit classic models from a graph perspective", "Computation times", "Paper Study with DGL", "Computation times", "Single Machine Multi-GPU Minibatch Graph Classification", "Single Machine Multi-GPU Minibatch Node Classification", "Training on Multiple GPUs", "Computation times"], "titleterms": {"": [842, 843, 844, 846, 861], "1": [693, 703, 705, 706, 707, 708, 709, 710, 711, 714, 725, 730, 738, 740, 747, 750, 751, 752, 753, 754, 755, 758, 768, 770, 778, 780, 787, 788, 791, 792, 793, 794, 795, 796, 799, 811, 814, 821, 829, 850, 861, 864, 867, 870], "101": [706, 791], "1\uc7a5": 790, "2": [694, 703, 704, 710, 713, 714, 715, 716, 717, 720, 731, 734, 741, 746, 754, 758, 759, 760, 761, 764, 771, 774, 781, 786, 787, 795, 799, 800, 801, 802, 803, 806, 815, 818, 829, 850, 861, 864, 867, 870], "2\uc7a5": 798, "3": [697, 700, 708, 717, 723, 729, 730, 731, 732, 737, 743, 748, 752, 761, 766, 770, 771, 772, 777, 783, 787, 793, 803, 809, 814, 815, 816, 820, 830, 850, 861, 864, 867, 870], "3\uc7a5": 813, "4": [692, 693, 694, 695, 696, 697, 698, 702, 707, 719, 736, 740, 741, 742, 743, 744, 751, 763, 776, 780, 781, 782, 783, 784, 789, 792, 800, 805, 819, 830, 850, 861], "4\uc7a5": 779, "5": [696, 701, 711, 716, 727, 733, 734, 735, 736, 737, 738, 742, 755, 760, 767, 774, 775, 776, 777, 778, 782, 796, 802, 810, 818, 819, 820, 821, 830, 850], "5\uc7a5": 817, "6": [695, 709, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 753, 763, 764, 765, 766, 767, 768, 794, 805, 806, 807, 808, 809, 810, 811, 830, 850], "6\uc7a5": 804, "7": [699, 700, 701, 702, 703, 704, 722, 746, 747, 748, 786, 787, 788, 789, 807, 850], "7\uc7a5": 785, "8": [721, 728, 850], "8\uc7a5": 812, "9": 726, "A": [843, 846, 848, 859], "For": [720, 723, 725], "Of": 717, "On": 717, "One": 860, "The": [701, 717, 859, 864, 867], "__getitem__": 26, "about": 706, "abstract": 860, "access": [700, 701, 854], "across": 835, "action": 867, "activ": [12, 829], "actordataset": 134, "adapt": [2, 720, 725, 871], "add": [613, 867], "add_edg": [27, 114], "add_nod": [28, 115], "add_node_property_split": 197, "add_nodepred_split": 198, "add_reverse_edg": [116, 322], "add_self_loop": [29, 117], "addedg": 654, "addmetapath": 655, "addrevers": 656, "addselfloop": 657, "adj": 30, "adj_extern": 31, "adj_product_graph": 118, "adj_sum_graph": 119, "adj_tensor": 32, "adjac": [0, 1], "adjacency_matrix": 33, "adjusted_homophili": 120, "advanc": 702, "after": [701, 719, 731], "aggreg": 871, "agnnconv": [365, 395], "aifbdataset": 132, "algorithm": [14, 702, 860], "all": 871, "alloc": 851, "altern": 851, "amazoncobuycomputerdataset": 135, "amazoncobuyphotodataset": 136, "amazonratingsdataset": 137, "amdataset": 133, "an": [734, 860], "api": [9, 13, 700, 703, 714, 786, 864], "api\ub4e4": 799, "appli": 717, "apply_each": 121, "apply_edg": [34, 845], "apply_nod": 35, "appnpconv": [366, 396, 466], "approach": 718, "argo": 850, "as_edge_prediction_sampl": 220, "asgraphpreddataset": 138, "ask": 24, "aslinkpreddataset": 139, "asnodepreddataset": 140, "assign": 843, "atomicconv": 397, "attent": [826, 861, 871], "attribut": [12, 829], "avgpool": [382, 441, 474], "ba2motifdataset": 141, "backend": [23, 823], "bacommunitydataset": 142, "balanc": 703, "base": [2, 721], "basetransform": 658, "bashapedataset": 143, "basic": 706, "basicfeaturestor": 288, "batch": [0, 1, 122, 724, 736, 819, 846, 854, 855, 860, 864, 865, 874, 877], "batch_num_edg": 36, "batch_num_nod": 37, "batch_siz": [38, 678, 683], "benchmark": [14, 830], "best": [844, 851], "bfloat16": 728, "bfs_edges_gener": 123, "bfs_nodes_gener": 124, "bgsdataset": 144, "biasedmha": 450, "binari": [707, 711, 860], "bipartit": [724, 805, 810], "bipartite_from_networkx": 125, "bipartite_from_scipi": 126, "bitcoinotcdataset": 145, "blitz": 848, "block_to_graph": 127, "blocksampl": 208, "book": 4, "brief": 859, "broadcast": [12, 829], "broadcast_edg": 128, "broadcast_nod": 129, "bsddmm": 614, "bspmm": 615, "bucket": 20, "build": [21, 691, 729, 824, 871], "built": [5, 714, 871], "builtindataset": 289, "call_once_and_shar": 361, "canonical_etyp": 39, "capsul": 870, "cell": 864, "cfconv": 398, "chain": 860, "chameleondataset": 149, "chang": 21, "chapter": [692, 699, 705, 713, 718, 728, 729, 733], "chebconv": [367, 399, 467], "check": 731, "check_sha1": 199, "choos": 867, "chunk": 703, "cifar10superpixeldataset": 146, "citeseergraphdataset": 150, "class": [2, 3, 12, 693, 867, 871], "classic": [872, 874], "classif": [697, 720, 725, 734, 736, 738, 835, 837, 840, 841, 842, 846, 847, 854, 876, 877], "client": 854, "clusterdataset": 147, "clustergcnsampl": 209, "coalesc": 583, "coauthorcsdataset": 151, "coauthorphysicsdataset": 152, "code": [21, 715], "col": 584, "comma": [707, 711, 792, 796], "commun": [854, 855, 860], "compact_csc_format": 323, "compact_graph": 130, "complet": [16, 860], "compos": [659, 838], "comput": [1, 736, 832, 837, 849, 853, 857, 863, 866, 869, 871, 873, 875, 879], "conclus": [14, 834, 837], "conda": 823, "configur": 23, "construct": [730, 843], "contain": 22, "contribut": [21, 822], "control": 1, "conv": [15, 16, 17], "convers": 701, "convert": 711, "convolut": [824, 842, 858, 859], "coo": 585, "copy_": 251, "copy_e_max": 485, "copy_e_mean": 486, "copy_e_min": 487, "copy_e_sum": 488, "copy_u": [252, 489], "copy_u_max": 490, "copy_u_mean": 491, "copy_u_min": 492, "copy_u_sum": 493, "copy_v": 494, "copyto": [7, 291], "cora": [842, 860, 861], "corafulldataset": 153, "coragraphdataset": 154, "core": [21, 850], "cornelldataset": 155, "cpu": [40, 586, 728, 850, 851, 852], "cpu_cached_featur": 324, "cpucachedfeatur": 290, "creat": [0, 707, 711, 829, 847, 859], "create_block": 131, "create_formats_": 41, "creation": [12, 700], "csc": 587, "csr": 588, "csv": [695, 707, 711, 751, 755, 792, 796, 847], "csvdataset": [148, 847], "cuda": [589, 721], "cugraph": 16, "cugraphgatconv": 400, "cugraphrelgraphconv": 401, "cugraphsageconv": 402, "custom": [695, 719, 724, 844], "data": [2, 9, 21, 23, 679, 684, 689, 692, 694, 695, 697, 698, 700, 701, 703, 720, 721, 723, 725, 726, 736, 827, 834, 835, 837, 838, 840, 841, 846, 876, 877], "dataload": [3, 4, 7, 208, 210, 220, 292], "dataset": [2, 7, 293, 695, 696, 697, 834, 837, 842, 847, 859, 860, 864, 871], "dataset_nam": 839, "deep": 822, "deepwalk": 389, "defin": [20, 22, 720, 723, 725, 834, 835, 837, 842, 844, 845, 846, 854, 855, 859, 864, 870, 877], "definit": [706, 736], "deg": 860, "degre": [20, 691], "degreeencod": 451, "dens": [15, 16], "densechebconv": [368, 404], "densegraphconv": [369, 405], "densesageconv": [370, 406], "depend": [835, 837], "descript": [6, 395, 396, 397, 398, 403, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 424, 425, 427, 428, 429, 430, 431, 458, 459, 460, 462], "destin": 867, "detect": 860, "develop": 21, "devic": [1, 42, 590], "dfs_edges_gener": 229, "dfs_labeled_edges_gener": 230, "dgl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 208, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 700, 707, 711, 721, 727, 730, 731, 751, 770, 786, 792, 796, 807, 814, 815, 828, 829, 834, 835, 837, 840, 841, 842, 843, 846, 848, 858, 859, 860, 861, 864, 871, 874], "dgl_partition_to_graphbolt": 231, "dgldataset": [156, 693, 780, 847], "dgldataset\u7c7b": 740, "dglgraph": [1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 709, 794], "dglgraph\ub85c": 788, "dgl\u4e8c\u8fdb\u5236\u683c\u5f0f": 755, "dgl\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": 746, "dgmg": 867, "dgnconv": 403, "diag": 616, "diagon": 829, "differ": [734, 823], "diffus": 825, "disk": [707, 711], "diskbasedfeatur": 294, "dispatch": 703, "distedgedataload": 211, "distembed": [700, 786], "distgraph": [700, 786], "distnodedataload": 212, "distribut": [4, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 699, 700, 701, 703, 704, 786, 854, 855, 856, 876], "distributeditemsampl": 295, "div": 617, "doc": 21, "document": [21, 822], "doe": 843, "dotgatconv": 407, "doubl": 591, "double_radius_node_label": 243, "download": [200, 694], "dropedg": 660, "dropnod": 661, "dst": 680, "dstdata": 43, "dstnode": 44, "dsttype": 45, "dtype": 592, "dure": 701, "dynam": 867, "e_add_u": [253, 495], "e_add_v": [254, 496], "e_div_u": [255, 497], "e_div_v": [256, 498], "e_dot_u": [257, 499], "e_dot_v": [258, 500], "e_mul_u": [259, 501], "e_mul_v": [260, 502], "e_sub_u": [261, 503], "e_sub_v": [262, 504], "each": 876, "edata": 46, "edg": [1, 2, 20, 51, 681, 700, 707, 708, 710, 711, 719, 720, 734, 735, 751, 792, 843, 867, 871], "edge_attr_schem": 47, "edge_homophili": 244, "edge_id": 48, "edge_label_inform": 245, "edge_softmax": 363, "edge_split": 232, "edge_subgraph": [49, 246], "edge_type_subgraph": [50, 247], "edgebatch": [678, 679, 680, 681, 682], "edgeconv": [371, 410], "edgedata": 695, "edgegatconv": 411, "edgepredictor": 458, "edgeweightnorm": 412, "editori": 21, "effici": 715, "egatconv": 408, "egnnconv": 409, "egtlay": 452, "element": 829, "elementwis": [12, 829], "embed": [4, 10, 16, 867], "enabl": [850, 854], "encod": [0, 691, 867], "end": [728, 812], "environ": [23, 854, 855], "equat": 861, "etyp": 52, "etype_str_to_tupl": 325, "etype_tuple_to_str": 326, "evalu": [827, 834, 835, 877], "even": 844, "everyth": 861, "exact": 722, "exampl": [21, 363, 703, 728], "exclud": 719, "exclude_seed_edg": 327, "execut": 871, "exercis": 829, "exist": 734, "expand_indptr": 328, "extern": 707, "extract": 0, "extract_arch": 201, "f": 860, "fakenewsdataset": 159, "faq": 24, "farthest": 6, "fb15k237dataset": 157, "fb15kdataset": 158, "featmask": 662, "featur": [1, 3, 7, 21, 296, 695, 708, 731, 840, 841, 843, 845], "feature_data": 839, "featurefetch": [7, 297], "featurestor": [7, 298], "ffi": 22, "file": [695, 840, 841], "filter_edg": 53, "filter_nod": 54, "find_edg": [55, 233], "flickrdataset": 160, "float": 593, "flow": 867, "folder": 695, "foreign": 22, "format": [1, 56, 702, 703, 707, 711], "formula": 858, "forward": [691, 731, 815], "fraudamazondataset": 161, "frauddataset": 162, "fraudyelpdataset": 163, "frequent": 24, "from": [695, 707, 711, 720, 734, 823, 838, 847, 858, 860, 872, 874], "from_coo": 618, "from_csc": 619, "from_csr": 620, "from_cugraph": 248, "from_dglgraph": 329, "from_networkx": 249, "from_scipi": 250, "full": [695, 859], "function": [3, 5, 9, 12, 18, 20, 22, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 363, 714, 721, 730, 731, 829, 835, 844, 870, 871, 876], "fuse": 860, "fused_csc_sampling_graph": 330, "fusedcscsamplinggraph": 299, "gat": 861, "gatconv": [372, 413, 468], "gatedgcnconv": 419, "gatedgraphconv": [375, 420], "gather_mm": 505, "gathermm": 9, "gatv2conv": 414, "gcn": [824, 842, 858, 859, 861], "gcn2conv": 415, "gcnnorm": 663, "gdc": 664, "gdeltdataset": 164, "gener": [21, 840, 841, 867, 868, 874], "geometri": 6, "get": [822, 854, 855], "get_download_dir": 202, "ginconv": [373, 416, 469], "gindataset": 165, "gineconv": 417, "git": 21, "github": 21, "global": [15, 16, 17, 23], "global_uniform_negative_sampl": 565, "globalattentionpool": [383, 442, 475], "globaluniform": 226, "gml": [707, 751, 792], "gmmconv": [374, 418], "gnn": [720, 723, 724, 725, 727, 729, 769, 806, 809, 810, 811, 813, 825, 833, 842, 844, 845, 846, 850, 854, 855], "gnnexplain": 432, "gpu": [709, 721, 807, 835, 842, 876, 877, 878], "gpu_cached_featur": 331, "gpucachedfeatur": 300, "gpu\uc5d0\uc11c": 794, "graph": [0, 1, 2, 4, 7, 16, 287, 363, 690, 692, 695, 697, 700, 701, 702, 703, 705, 706, 707, 710, 711, 716, 717, 718, 719, 720, 722, 723, 724, 725, 731, 733, 734, 736, 737, 738, 796, 810, 815, 822, 824, 825, 826, 839, 840, 841, 842, 843, 845, 846, 847, 854, 855, 858, 859, 860, 861, 862, 865, 867, 870, 871, 872, 874, 876], "graphbolt": [7, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 833, 854], "graphconv": [376, 421, 470, 732, 816], "graphdata": 695, "graphdataload": 213, "graphorm": 691, "graphormerlay": 453, "graphsag": [723, 845], "group": 876, "grouprevr": 422, "gsddmm": [9, 506], "gspmm": [9, 507], "guid": 712, "half": [728, 812], "handl": [837, 859], "has_dupl": 594, "has_edges_between": 57, "has_nod": 58, "head": [826, 861, 871], "heatkernel": 665, "heteroembed": 390, "heterogen": [15, 16, 17, 363, 695, 701, 711, 716, 719, 720, 723, 724, 725, 732, 733, 734, 736, 737, 738, 787, 788, 796, 805, 806, 809, 810, 811, 816, 817, 818, 819, 820, 821, 840], "heterognnexplain": 433, "heterograph": [340, 711], "heterographconv": [364, 391, 476, 732, 816], "heterographconv\u7684\u5b9e\u73b0\u903b\u8f91": 772, "heteroitemset": 301, "heterolinear": 392, "heteropgexplain": 434, "heterosubgraphx": 435, "hgnn": 827, "hgtconv": 423, "homogen": [363, 711, 724, 810, 841], "homophili": 0, "hood": 701, "host": 21, "how": [837, 843, 871], "hyper": 851, "hypergraph": 827, "i": 860, "icews18dataset": 166, "id": [1, 701, 703, 788, 854, 855], "idea": [859, 860, 870], "ident": 621, "idtyp": 59, "implement": [719, 722, 724, 732, 734, 858, 859, 860, 867, 870, 871], "import": 877, "improv": 850, "in_degre": 60, "in_edg": 61, "in_subgraph": [234, 341], "inc": 62, "incid": 1, "incidence_matrix": 63, "index": 822, "index_select": 332, "indic": 595, "indptr_edge_id": 333, "infer": [704, 722, 855, 860], "inform": [0, 1], "initi": [4, 235, 700, 829, 854, 855, 870, 876], "input": 702, "instal": [702, 823, 834, 835, 837, 840, 841, 850], "instanti": [840, 841], "insubgraphsampl": 302, "int": [64, 596], "integr": 830, "intel": 851, "interact": 861, "interfac": [21, 22], "introduc": 861, "introduct": [848, 859, 867], "is_homogen": 65, "is_libxsmm_en": 342, "is_multigraph": 66, "is_pin": 67, "is_unibipartit": 68, "isin": 334, "itemsampl": [7, 303], "itemset": [7, 304], "its": [862, 874], "job": 854, "json": [707, 751, 792], "jumpingknowledg": 462, "karateclubdataset": 167, "kei": [859, 860, 870], "khop_adj": 343, "khop_graph": 344, "khop_in_subgraph": 345, "khop_out_subgraph": 346, "khopgraph": 666, "knn": 14, "knn_graph": 347, "knngraph": 438, "knowledg": 16, "label": [0, 695], "labelpropag": 463, "laborsampl": 214, "lap_p": 348, "laplacian_lambda_max": 349, "lapp": 667, "lapposencod": 454, "larg": [718, 722], "launch": [704, 854], "layer": [15, 16, 17, 691, 824, 826, 827, 859, 860, 871], "layerneighborsampl": 305, "lazyfeatur": 221, "learn": [15, 16, 17, 861], "legacydataset": 306, "legacytudataset": 168, "less": 695, "level": 695, "lgnn": 860, "librari": [707, 822], "line": 860, "line_graph": [69, 350], "linear": [12, 829], "linegraph": 668, "link": [3, 16, 697, 723, 737, 834, 840, 841, 845, 847, 855, 859], "linkx_homophili": 351, "linux": 823, "load": [4, 695, 696, 698, 701, 703, 707, 711, 726, 736, 827, 834, 837, 842, 843, 845, 846, 877], "load_from_shared_memori": 335, "load_graph": 352, "load_info": 203, "load_label": 204, "load_partit": 236, "load_partition_book": 237, "load_partition_feat": 238, "loader": [720, 721, 723, 725, 834, 835, 837, 846, 876], "local": 21, "local_scop": 70, "logic": 732, "long": [71, 597], "loop": [720, 723, 725, 734, 736, 737, 738, 818, 821, 834, 835, 837, 844, 845, 846, 854, 855, 859, 864, 877], "lsc": 703, "lstm": 864, "machin": [876, 877], "maco": 823, "mag240m": 703, "mailbox": 685, "main": [864, 867, 871, 876], "make": [703, 847], "mani": [865, 874], "manipul": 1, "map": 703, "mask_nodes_by_properti": 205, "match": 6, "matmul": 622, "matric": 824, "matrix": [1, 12, 829, 860], "max": 263, "max_edg": 353, "max_nod": 354, "maxpool": [384, 443, 477], "mean": 264, "mean_edg": 355, "mean_nod": 356, "measur": 0, "memori": 851, "merg": 357, "messag": [0, 5, 9, 20, 713, 714, 715, 716, 717, 728, 731, 735, 798, 836, 844, 858, 860, 864, 870, 871], "metagraph": [1, 72], "metapath2vec": 393, "metapath_reachable_graph": 358, "method": [12, 829], "meti": 702, "metis_partit": 359, "metis_partition_assign": 360, "mfg": 724, "mfg\ub97c": 810, "min": 265, "minesweeperdataset": 171, "mini": [724, 854, 855, 877], "minibatch": [7, 307, 720, 723, 725, 876, 877], "minibatchtransform": 308, "minigcdataset": 172, "misc": 1, "mix": [728, 812], "mnistsuperpixeldataset": 169, "mode": 700, "model": [21, 691, 720, 723, 725, 734, 736, 738, 826, 834, 835, 837, 845, 846, 854, 855, 858, 859, 867, 868, 870, 872, 874, 876, 877], "modul": [9, 15, 16, 17, 700, 724, 729, 730, 731, 732, 735, 844], "more": 844, "movielensdataset": 173, "mul": 623, "multi": [826, 835, 850, 861, 871, 876, 877], "multi_update_al": 73, "multilayerfullneighborsampl": 215, "multipl": [12, 21, 695, 711, 829, 860, 878], "multiprocess": [8, 361, 362], "mutagdataset": 170, "mutat": 1, "mxnet": [15, 823], "ndata": 74, "neg": [3, 11, 598, 723, 809, 845], "negativesampl": [7, 309], "neighbor": [6, 11, 720, 721, 723, 834, 835, 836, 837, 854], "neighborhood": [718, 720, 721, 723, 725, 804], "neighborsampl": [216, 310], "network": [16, 733, 736, 738, 824, 825, 827, 842, 845, 854, 855, 858, 859, 860, 861, 862, 870, 871, 874], "neural": [733, 736, 738, 825, 827, 845, 860, 862, 871, 874], "new": [21, 22], "next": [842, 843, 844, 846, 861], "nf": 854, "nn": [15, 16, 17, 18, 363, 730, 731, 735, 814, 815], "nnconv": [377, 424], "nnz": 599, "nn\u6a21\u5757\u7684forward\u51fd\u6570": 771, "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": 770, "node": [1, 2, 4, 10, 20, 77, 686, 697, 700, 707, 708, 710, 725, 734, 738, 751, 792, 834, 835, 837, 840, 841, 842, 843, 847, 854, 855, 867, 877], "node2vec_random_walk": 566, "node_attr_schem": 75, "node_homophili": 480, "node_label_inform": 481, "node_split": 239, "node_subgraph": 482, "node_type_subgraph": [76, 483], "nodebatch": [683, 684, 685, 686], "nodedata": 695, "nodeembed": 461, "nodeshuffl": 669, "non": [12, 829], "norm_by_dst": 484, "ntype": 78, "num_dst_nod": 79, "num_edg": 80, "num_nod": 81, "num_src_nod": 82, "number_of_dst_nod": 83, "number_of_edg": 84, "number_of_nod": 85, "number_of_src_nod": 86, "numpy_save_align": 336, "nutshel": 826, "object": [847, 867], "offlin": 722, "ogb": [696, 782], "ondiskdataset": [311, 838, 840, 841], "one": 858, "onli": 854, "op": [0, 9, 12, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545], "openmp": 851, "oper": [4, 12, 829, 860], "optim": [4, 10, 867], "option": [23, 694, 781], "organ": [840, 841], "origin": 720, "other": 835, "out": 0, "out_degre": 87, "out_edg": 88, "out_subgraph": 546, "output": [702, 731], "overview": [718, 733, 734, 736, 737, 738, 833, 836, 842, 845, 846, 847, 858], "own": [844, 847, 850], "pack_trac": 567, "packag": [696, 834, 835, 837, 840, 841, 877], "paper": 874, "paradigm": [713, 798], "parallel": [702, 726, 860], "parmeti": [702, 788], "parmetis\ub97c": 788, "parser": 695, "part": 717, "partit": [0, 4, 701, 702, 703, 854, 855], "partition_graph": 240, "partition_graph_with_halo": 547, "pass": [9, 20, 713, 714, 715, 716, 717, 728, 731, 735, 798, 836, 844, 858, 860, 864, 870, 871], "path": 691, "pathencod": 455, "patterndataset": 174, "perform": [14, 830, 834], "persourceuniform": 227, "perspect": [858, 872, 874], "pgexplain": 436, "pin_memory_": 89, "pinsagesampl": [564, 721], "pip": 823, "pipelin": [692, 703], "platform": 21, "pnaconv": 425, "point": 6, "pool": [15, 16, 17], "posit": [0, 845], "postprocess": 871, "power": 624, "ppi": 861, "ppidataset": 175, "ppr": 670, "practic": [844, 851], "precis": [728, 812], "precision\uc744": 812, "predecessor": 90, "predict": [2, 3, 16, 697, 723, 734, 737, 834, 840, 841, 845, 847, 855, 859], "prefetch": 3, "prepar": [689, 840, 841, 845, 876], "preprocess": [701, 703, 871], "prev": 860, "procedur": [835, 877], "process": [21, 697, 835, 876, 877], "program": [700, 850], "progress": 860, "prop_edg": [91, 548], "prop_edges_df": 549, "prop_nod": [92, 550], "prop_nodes_bf": 551, "prop_nodes_topo": 552, "propag": [0, 867], "protein": 861, "pubmedgraphdataset": 176, "pull": 93, "push": 94, "put": [861, 864, 867, 871], "pytorch": [16, 361, 362, 823], "qm7bdataset": 177, "qm9dataset": 178, "qm9edgedataset": 179, "queri": [1, 843], "question": 24, "questionsdataset": 180, "quickstart": 829, "r": 859, "radiu": 860, "radius_graph": 553, "radiusgraph": 439, "rand_bipartit": 554, "rand_graph": 555, "random": 11, "random_walk": 568, "random_walk_p": 556, "randomwalkneighborsampl": 721, "randomwalkp": 671, "raw": [694, 781, 838], "read": 0, "readout": [736, 819], "readout_edg": 557, "readout_nod": 558, "redditdataset": 181, "reduc": [5, 9, 600, 731, 829], "reduct": 835, "refer": [13, 854, 855], "regress": [734, 738, 818, 821], "relat": [0, 9, 859], "relgraphconv": [378, 426, 471], "remov": 720, "remove_edg": [95, 559], "remove_nod": [96, 560], "remove_self_loop": [97, 561], "removeselfloop": 672, "reorder_graph": [98, 562], "repositori": 23, "repres": 843, "represent": 834, "requir": 823, "resourc": 831, "result": 14, "revers": [99, 563], "review": 836, "revisit": [872, 874], "roadmap": [692, 705, 713, 718, 729, 733], "romanempiredataset": 182, "row": 601, "rowfeatnorm": 673, "run": 702, "sageconv": [379, 427, 472], "saintsampl": 217, "sampl": [4, 11, 564, 565, 566, 567, 568, 569, 570, 571, 572, 700, 718, 719, 720, 721, 723, 725, 804, 836, 854], "sample_etype_neighbor": 241, "sample_labor": 569, "sample_neighbor": [242, 570], "sample_neighbors_bias": 571, "sampledsubgraph": 312, "sampledsubgraphimpl": 313, "sampler": [3, 6, 218, 719, 720, 725, 834, 835, 837, 854, 855], "samplinggraph": 314, "save": [698, 843], "save_graph": 573, "save_info": 206, "sbmmixturedataset": 183, "scalabl": 850, "scenario": 833, "score": 16, "script": [854, 855], "sddmm": 625, "second": 859, "seed": [337, 574], "segment": 9, "segment_mm": 508, "segment_reduc": 509, "segmented_knn_graph": 575, "segmentedknngraph": 440, "segmentmm": 9, "select_topk": 572, "send_and_recv": 100, "separ": [707, 711, 792, 796], "sequenti": [388, 464], "server": 854, "set": [845, 851, 854, 855, 860], "set2set": [385, 444], "set_batch_num_edg": 101, "set_batch_num_nod": 102, "set_dst_lazy_featur": 222, "set_edge_lazy_featur": 223, "set_node_lazy_featur": 224, "set_src_lazy_featur": 225, "settransformerdecod": 445, "settransformerencod": 446, "setup": [21, 823, 854, 870], "sgconv": [380, 428, 473], "shadowkhopsampl": 219, "shape": 602, "shared_tensor": 362, "shortest_dist": 576, "side": 854, "signdiffus": 674, "simpl": 871, "singl": [695, 876, 877], "slice_batch": 577, "small": [865, 874], "smax": 603, "smean": 604, "smin": 605, "softmax": [606, 626, 829], "softmax_edg": 578, "softmax_nod": 579, "some": 706, "sort_csc_by_tag": 580, "sort_csr_by_tag": 581, "sortpool": [386, 447, 478], "sourc": [707, 823], "sp_add_v": 627, "sp_broadcast_v": 628, "sp_div_v": 629, "sp_mul_v": 630, "sp_sub_v": 631, "spars": [1, 12, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 727, 824, 826, 828, 829, 860], "sparsematrix": [582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612], "spatial": 691, "spatialencod": 456, "spatialencoder3d": 457, "spawn": [835, 877], "specif": [695, 703, 731, 815, 839, 871], "speed": 871, "split": [4, 700, 786], "split_dataset": 207, "spmatrix": 632, "spmm": 633, "spspmm": 634, "squirreldataset": 185, "src": 682, "srcdata": 103, "srcnode": 104, "srctype": 105, "ssh": 854, "sstdataset": 184, "standalon": [700, 786], "start": 822, "step": [703, 850, 864, 870], "stochast": [718, 804, 833], "structur": [1, 695, 700, 805, 840, 841, 843, 860, 871], "studi": 874, "style": 21, "sub": 635, "subgraph": [0, 106, 711, 860], "subgraphsampl": [7, 315], "subgraphx": 437, "subset": 196, "successor": 107, "sum": [266, 607], "sum_edg": 637, "sum_nod": 638, "sumpool": [387, 448, 479], "supervis": 860, "support": [9, 21, 721], "svd_pe": 639, "svdpe": 675, "system": 823, "t": [582, 608], "tagconv": [381, 429], "task": [316, 839, 840, 841, 859, 860, 864, 871], "temporallayerneighborsampl": 317, "temporalneighborsampl": 318, "tensor": [4, 700, 786, 860], "tensorflow": [17, 823], "test": [21, 845, 860, 870], "texasdataset": 187, "text": 860, "thread": 851, "time": [832, 849, 853, 857, 863, 866, 869, 873, 875, 879], "tip": 703, "to_bidirect": 640, "to_block": 641, "to_canonical_etyp": 109, "to_cugraph": [110, 642], "to_dens": 610, "to_doubl": 643, "to_float": 644, "to_half": 645, "to_heterogen": 646, "to_homogen": 647, "to_networkx": 648, "to_simpl": [111, 649], "to_simple_graph": 650, "togeth": [861, 864, 867, 871], "tolevi": 676, "tolokersdataset": 188, "tool": 704, "top": 695, "topk_edg": 651, "topk_nod": 652, "topologi": 1, "topological_nodes_gener": 653, "torchbasedfeatur": 319, "torchbasedfeaturestor": 320, "tosimpl": 677, "tra": 834, "train": [699, 704, 718, 720, 723, 724, 725, 727, 728, 733, 734, 736, 737, 738, 824, 825, 826, 827, 833, 835, 837, 842, 844, 845, 846, 852, 854, 855, 856, 859, 860, 871, 877, 878], "trainer": [835, 877], "trane": 877, "trans": 459, "transform": [0, 1, 3, 16, 19, 690, 826, 829, 843, 871], "transpos": 611, "transr": 460, "travers": [0, 864], "tree": 864, "treecycledataset": 189, "treegriddataset": 190, "tudataset": 186, "tutori": [690, 822, 828], "twirlsconv": 430, "twirlsunfoldingandattent": 431, "type": [1, 9, 22, 711, 731, 734, 815], "typedlinear": 394, "u_add_": [267, 510], "u_add_e_max": 511, "u_add_e_mean": 512, "u_add_e_min": 513, "u_add_e_sum": 514, "u_add_v": [268, 515], "u_div_": [269, 516], "u_div_e_max": 517, "u_div_e_mean": 518, "u_div_e_min": 519, "u_div_e_sum": 520, "u_div_v": [270, 521], "u_dot_": [271, 522], "u_dot_v": [272, 523], "u_mul_": [273, 524], "u_mul_e_max": 525, "u_mul_e_mean": 526, "u_mul_e_min": 527, "u_mul_e_sum": 528, "u_mul_v": [274, 529], "u_sub_": [275, 530], "u_sub_e_max": 531, "u_sub_e_mean": 532, "u_sub_e_min": 533, "u_sub_e_sum": 534, "u_sub_v": [276, 535], "ubuntu": 854, "udf": [678, 679, 680, 681, 682, 683, 684, 685, 686], "unbatch": 687, "under": 701, "understand": 861, "uniform": 228, "uniformnegativesampl": 321, "unique_and_compact": 338, "unique_and_compact_csc_format": 339, "unit": 21, "univers": 871, "unpin_memory_": 112, "up": [854, 855, 860, 871], "updat": [731, 867], "update_al": 113, "us": [1, 696, 709, 721, 735, 824, 845], "use_libxsmm": 688, "user": [20, 712, 844], "util": [0, 2, 3, 7, 15, 16, 701], "uva": 721, "v": [700, 786], "v0": 830, "v_add_": [277, 536], "v_add_u": [278, 537], "v_div_": [279, 538], "v_div_u": [280, 539], "v_dot_": [281, 540], "v_dot_u": [282, 541], "v_mul_": [283, 542], "v_mul_u": [284, 543], "v_sub_": [285, 544], "v_sub_u": [286, 545], "val": 612, "val_lik": 636, "valid": [854, 855], "valu": [707, 711, 792, 796], "variabl": 23, "variant": [862, 874], "via": [21, 847, 867], "visual": [860, 861, 871], "walk": 11, "web": 21, "weight": [735, 835], "weightandsum": 449, "weightbasi": 465, "welcom": 822, "what": [842, 843, 844, 846, 860, 861], "wikicsdataset": 192, "window": 823, "wisconsindataset": 193, "wise": [20, 829], "wn18dataset": 191, "work": [711, 724, 823], "workload": [4, 700, 786], "write": [715, 724, 736, 738, 844], "x": 860, "y": 860, "yaml": [695, 839, 840, 841], "yelpdataset": 194, "your": [720, 725, 844, 847, 850], "zincdataset": 195, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": 741, "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": 774, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": 767, "\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": 767, "\u4e8c\u8fdb\u5236\u683c\u5f0f": 751, "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": 751, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": 751, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": 751, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": 755, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": 742, "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": 755, "\u4f7f\u7528\u8fb9\u6743\u91cd": 775, "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": 775, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": 744, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": 750, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": 758, "\u5206\u5272\u6570\u636e\u96c6": 746, "\u5206\u5e03\u5f0f\u56fe": 746, "\u5206\u5e03\u5f0f\u5d4c\u5165": 746, "\u5206\u5e03\u5f0f\u5f20\u91cf": 746, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": 746, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": 746, "\u5206\u5e03\u5f0f\u8bad\u7ec3": 745, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": 747, "\u5206\u5e03\u5f0f\u91c7\u6837": 746, "\u521b\u5efadistgraph": 746, "\u521b\u5efa\u5f02\u6784\u56fe": 755, "\u5305\u542b\u8fc7\u65f6\u4fe1\u606f": 756, "\u53ef\u9009": 741, "\u56de\u5f52": [774, 778], "\u56fe": [749, 754], "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": 739, "\u56fe\u8bfb\u51fa": 776, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 753, "\u5728nn\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": 775, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 761, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": 762, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 760, "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": 774, "\u5904\u7406\u6570\u636e": 743, "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 743, "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": 743, "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": 743, "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": 763, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [764, 768], "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 763, "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 763, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": 765, "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 767, "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": 755, "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": 764, "\u5f02\u6784\u56fe": 755, "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": 768, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": 772, "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 776, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": 767, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": 764, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 778, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 774, "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": 763, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 777, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 766, "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": 763, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 773, "\u6279\u6b21": 762, "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": 776, "\u6279\u6b21\u7684\u56fe": 776, "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": 763, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": 748, "\u6570\u636e\u52a0\u8f7d": 776, "\u6574\u56fe\u5206\u7c7b": 776, "\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": 771, "\u672c\u7ae0\u8def\u7ebf\u56fe": [739, 749, 757, 762, 769, 773], "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": 769, "\u683c\u5f0f": 751, "\u6982\u8ff0": [773, 774, 776, 777, 778], "\u6a21\u5757": 769, "\u6a21\u578b\u5b9a\u4e49": 776, "\u6a21\u578b\u7684\u8bad\u7ec3": [764, 766, 768, 774, 776, 777, 778], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": 771, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": 757, "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 763, "\u7528\u6237\u6307\u5357": 756, "\u7b2c1\u7ae0": 749, "\u7b2c2\u7ae0": 757, "\u7b2c3\u7ae0": 769, "\u7b2c4\u7ae0": 739, "\u7b2c5\u7ae0": 773, "\u7b2c6\u7ae0": 762, "\u7b2c7\u7ae0": 745, "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": 766, "\u7f16\u5199dgl": 771, "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [776, 778], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": 759, "\u805a\u5408\u540e": 771, "\u8282\u70b9\u5206\u7c7b": 778, "\u8282\u70b9\u548c\u8fb9": 754, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 752, "\u8bad\u7ec3": 762, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": 773, "\u8bbf\u95ee\u56fe\u7ed3\u6784": 746, "\u8bbf\u95ee\u8282\u70b9": 746, "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [766, 768], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": 764, "\u8d1f\u8f7d\u5747\u8861": 747, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": 765, "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": 771, "\u8fb9\u5206\u7c7b": 774, "\u8fb9\u6570\u636e": 746, "\u8fb9\u7c7b\u578b\u5b50\u56fe": 755, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 748, "\u9017\u53f7\u5206\u9694\u503c": [751, 755], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": 762, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 768, "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 764, "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 766, "\u94fe\u63a5\u9884\u6d4b": 777, "\uac00\uc774\ub4dc": 797, "\uac00\uc911\uce58": 800, "\uac1c\uc694": [804, 817, 818, 819, 820, 821], "\uacb0\uacfc": 788, "\uacb0\uacfc\ub4e4\uc744": 788, "\uacbd\uc6b0": [806, 809, 811], "\uad6c\uc870": [786, 805], "\uad6c\ud604": 816, "\uad6c\ud604\uc0c1\uc758": 818, "\uad6c\ud604\ud558\uae30": [805, 808, 810], "\uadf8\ub798\ud504": [779, 783, 786, 787, 790, 791, 792, 795, 796, 803, 810, 815, 817, 818, 819, 821], "\uadf8\ub798\ud504\ub4e4": [805, 810, 820], "\uadf8\ub798\ud504\ub4e4\uc5d0": 808, "\uadf8\ub798\ud504\ub4e4\uc758": 819, "\uadf8\ub798\ud504\ub85c": 796, "\uadf8\ub798\ud504\ub97c": 796, "\uadf8\ub798\ud504\uc5d0": [788, 791, 804, 819], "\uadf8\ub798\ud504\uc5d0\uc11c": 806, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": 802, "\uadf8\ub798\ud504\uc758": [806, 809, 811, 818], "\uadf8\ub9ac\uace0": [795, 810], "\uae30\ubc18\uc758": 807, "\uae30\ubcf8\uc801\uc778": 791, "\ub098\ub204\uae30": 786, "\ub124\ud2b8\uc6cc\ud06c": [817, 819, 821], "\ub178\ub4dc": [783, 786, 788, 795, 811, 818, 821], "\ub178\ub4dc\uc640": 793, "\ub274\ub7f4": [817, 819, 821], "\ub2e4\ub8e8\uae30": 796, "\ub2e4\uc591\ud55c": 796, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 781, "\ub2e8\ub3c5": 786, "\ub300\ud55c": [788, 791, 804, 818], "\ub300\ud578": 808, "\ub370\uc774\ud130": [779, 781, 783, 784, 786, 787, 806, 807, 809, 811, 819], "\ub370\uc774\ud130\uc14b": 783, "\ub370\uc774\ud130\uc14b\ub4e4": 782, "\ub3d9\uc885": 796, "\ub4a4\uccd0\uc9c4": 797, "\ub514\uc2a4\ud06c\uc5d0\uc11c": [792, 796], "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c": 792, "\ub7f0\uce6d\ud558\uae30": 789, "\ub808\uc774\uc5b4": 805, "\ub85c\ub354": [806, 809, 811], "\ub85c\ub354\uc5d0\uc11c": 807, "\ub85c\ub4dc": 788, "\ub85c\ub4dc\ub9f5": [779, 790, 798, 804, 813, 817], "\ub85c\ub4dc\ud558\uae30": 782, "\ub85c\ub529": [784, 819], "\ub85c\ub529\ud558\uae30": [792, 796], "\ub85c\uc9c1": 816, "\ub8f9": [806, 809, 811, 818, 819, 820, 821], "\ub9ac\uadf8\ub798\uc158": 821, "\ub9ac\uadf8\ub808\uc158": 818, "\ub9ac\ub4dc\uc544\uc6c3": 819, "\ub9c1\ud06c": [783, 809, 820], "\ub9cc\ub4e4\uae30": [806, 809, 811, 813], "\ub9de\uac8c": [806, 809, 811], "\ub9e4\ud551": 788, "\uba40\ud2f0": 805, "\uba54\uc2dc\uc9c0": [799, 800, 801, 802, 805, 812, 815], "\uba54\uc9c0\uc2dc": [798, 803], "\uba85\uc138\ud654": 815, "\uba87\uac00\uc9c0": 791, "\ubaa8\ub378": [806, 809, 811, 819, 821], "\ubaa8\ub378\uacfc": 818, "\ubaa8\ub378\uc744": [806, 809, 811], "\ubaa8\ub4c8": [786, 810, 813, 814, 816], "\ubaa8\ub4c8\uc758": 815, "\ubaa8\ub4dc": 786, "\ubbf8\ub2c8": [806, 809, 810, 811], "\ubbf8\ub2c8\ubc30\uce58": 805, "\ubc0f": [788, 799, 806, 809, 811, 818], "\ubc14\uc774\ub108\ub9ac": [792, 796], "\ubc29\ubc95": [801, 804], "\ubc30\uce58": [806, 809, 810, 811, 819], "\ubc30\uce58\uc758": 806, "\ubc38\ub7f0\uc2f1": 788, "\ubcc0\ud658\ud558\uae30": [788, 796], "\ubd84\ub958": [783, 806, 811, 818, 819, 821], "\ubd84\uc0b0": [785, 786, 787, 788, 789], "\ube4c\ud2b8\uc778": 799, "\uc0ac\uc6a9\uc790": 797, "\uc0ac\uc6a9\ud558\uae30": [794, 807], "\uc0ac\uc6a9\ud55c": [792, 806, 809, 811, 812], "\uc0ac\uc6a9\ud574\uc11c": [782, 792], "\uc0d8\ud50c\ub7ec": [805, 806, 809, 811], "\uc0d8\ud50c\ub7ec\ub97c": 807, "\uc0d8\ud50c\ub9c1": [786, 787, 804, 805, 807], "\uc0d8\ud50c\ub9c1\uc5d0": 807, "\uc0d8\ud50c\ub9c1\uc744": [806, 809, 811], "\uc0dd\uc131": [786, 814], "\uc0dd\uc131\ud558\uae30": [788, 792, 796], "\uc11c\ube0c\uadf8\ub798\ud504": 796, "\uc124\uce58": 788, "\uc18c\uc2a4\ub97c": 792, "\uc2dc\ub300\uc5d0": 797, "\uc2e4\ud589\ud558\uae30": 788, "\uc5c5\ub370\uc774\ud2b8": 815, "\uc5d0\uc9c0": [786, 788, 795, 796, 800, 806, 818], "\uc5d0\uc9c0\ub4e4": 806, "\uc5d0\uc9c0\ub4e4\uc5d0": 818, "\uc5d0\uc9c0\uc758": 793, "\uc5f0\uc0b0\ud558\uae30": 819, "\uc608\uce21": [783, 809, 820], "\uc608\uce21\ud558\uae30": 818, "\uc624\ud504\ub77c\uc778": 808, "\uc678\ubd80": 792, "\uc6cc\ud06c\ub85c\ub4dc": 786, "\uc6d0\ubcf8": 806, "\uc704\ud55c": [788, 789, 805, 810, 815], "\uc704\ud574\uc11c": 806, "\uc758\uc874\uc131": 805, "\uc774\ubd84": [805, 810], "\uc774\uc6c3": [804, 805, 806, 807, 809, 811], "\uc774\uc885": [796, 802], "\uc77c\ubd80\uc5d0": 803, "\uc785\ub825": 788, "\uc791\uc131": 801, "\uc791\uc131\ud558\uae30": [810, 819, 821], "\uc800\uc7a5\uacfc": 784, "\uc801\uc6a9\ud558\uae30": [800, 803], "\uc804\ub2ec": [798, 799, 801, 802, 803, 805, 812], "\uc804\ub2ec\uacfc": 815, "\uc804\ub2ec\uc5d0": 800, "\uc804\ub2ec\uc744": 805, "\uc804\ucc98\ub9ac": 788, "\uc811\uadfc": 786, "\uc811\uadfc\ud558\uae30": 787, "\uc815\uc758": 791, "\uc815\uc758\ud558\uae30": [806, 809, 811, 819], "\uc815\ud655\ud55c": 808, "\uc81c\uac70\ud558\uae30": 806, "\uc9c1\uc811": 805, "\ucc28\uc774\uc810": 818, "\ucc3e\uae30": 805, "\uccb4\ud06c\uc640": 815, "\ucd08\uae30\ud654": 786, "\ucd94\ub860": 808, "\ucd94\ub860\uc744": 789, "\ucd95\uc57d": 815, "\ucd9c\ub825\uac12\uc744": 815, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": 805, "\ucee4\uc2a4\ud140": [805, 810], "\ucf54\ub4dc": 801, "\ud070": [804, 808], "\ud074\ub798\uc2a4": 780, "\ud0c0\uc785": [796, 815, 818], "\ud0c0\uc785\uc744": 796, "\ud150\uc11c": 786, "\ud234\ub4e4": 789, "\ud30c\uc774\ud504\ub77c\uc778": 779, "\ud30c\ud2f0\uc154\ub2dd": 788, "\ud328\ub7ec\ub2e4\uc784": 798, "\ud328\ud0a4\uc9c0\ub97c": 782, "\ud3ec\uba67": [788, 792, 796], "\ud3ec\uba67\ub4e4": 788, "\ud504\ub85c\uc138\uc2f1": 783, "\ud53c\ucc98": 793, "\ud53c\ucc98\ub4e4": 788, "\ud53c\uccd0": 815, "\ud559\uc2b5": [785, 789, 804, 806, 809, 811, 812, 818, 819, 820, 821], "\ud559\uc2b5\uc5d0": [806, 809, 811], "\ud559\uc2b5\uc744": [788, 810], "\ud559\uc2b5\ud558\uae30": [787, 806, 809, 811, 817], "\ud568\uaed8": 807, "\ud568\uc218": [799, 814, 815], "\ud568\uc218\uc640": 807, "\ud574\ubcf4\uae30": 805, "\ud6a8\uc728\uc801\uc778": 801, "\ud6c4": 815}})