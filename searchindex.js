Search.setIndex({"alltitles": {"1.1 Some Basic Definitions about Graphs (Graphs 101)": [[700, "some-basic-definitions-about-graphs-graphs-101"]], "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [[744, "guide-cn-graph-basic"]], "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)": [[785, "guide-ko-graph-basic"]], "1.2 Graphs, Nodes, and Edges": [[704, "graphs-nodes-and-edges"]], "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9": [[748, "guide-cn-graph-graphs-nodes-edges"]], "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0": [[789, "guide-ko-graph-graphs-nodes-edges"]], "1.3 Node and Edge Features": [[702, "node-and-edge-features"]], "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [[746, "guide-cn-graph-feature"]], "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98": [[787, "guide-ko-graph-feature"]], "1.4 Creating Graphs from External Sources": [[701, "creating-graphs-from-external-sources"]], "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [[745, "guide-cn-graph-external"]], "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[786, "guide-ko-graph-external"]], "1.5 Heterogeneous Graphs": [[705, "heterogeneous-graphs"]], "1.5 \u5f02\u6784\u56fe": [[749, "guide-cn-graph-heterogeneous"]], "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)": [[790, "heterogeneous-graph"]], "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30": [[788, "gpu-dglgraph"]], "1.6 Using DGLGraph on a GPU": [[703, "using-dglgraph-on-a-gpu"]], "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph": [[747, "gpudglgraph"]], "1\uc7a5: \uadf8\ub798\ud504": [[784, "guide-ko-graph"]], "2.1 Built-in Functions and Message Passing APIs": [[708, "built-in-functions-and-message-passing-apis"]], "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API": [[752, "api"]], "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4": [[793, "api"]], "2.2 Writing Efficient Message Passing Code": [[709, "writing-efficient-message-passing-code"]], "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [[753, "guide-cn-message-passing-efficient"]], "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95": [[795, "guide-ko-message-passing-efficient"]], "2.3 Apply Message Passing On Part Of The Graph": [[711, "apply-message-passing-on-part-of-the-graph"]], "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[755, "guide-cn-message-passing-part"]], "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30": [[797, "guide-ko-message-passing-part"]], "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30": [[794, "guide-ko-message-passing-edge"]], "2.5 Message Passing on Heterogeneous Graph": [[710, "message-passing-on-heterogeneous-graph"]], "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[754, "guide-cn-message-passing-heterograph"]], "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[796, "guide-ko-message-passing-heterograph"]], "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)": [[792, "message-passing"]], "3.1 DGL NN Module Construction Function": [[724, "dgl-nn-module-construction-function"]], "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218": [[808, "dgl-nn"]], "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [[764, "dgl-nn"]], "3.2 DGL NN Module Forward Function": [[725, "dgl-nn-module-forward-function"]], "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218": [[809, "dgl-nn-forward"]], "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570": [[765, "dgl-nnforward"]], "3.3 Heterogeneous GraphConv Module": [[726, "heterogeneous-graphconv-module"]], "3.3 Heterogeneous GraphConv \ubaa8\ub4c8": [[810, "heterogeneous-graphconv"]], "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757": [[766, "graphconv"]], "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30": [[807, "gnn"]], "4.1 DGLDataset class": [[687, "dgldataset-class"]], "4.1 DGLDataset \ud074\ub798\uc2a4": [[774, "dgldataset"]], "4.1 DGLDataset\u7c7b": [[734, "dgldataset"]], "4.2 Download raw data (optional)": [[688, "download-raw-data-optional"]], "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)": [[775, "raw-optional"]], "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09": [[735, "guide-cn-data-pipeline-download"]], "4.3 Process data": [[691, "process-data"]], "4.3 \u5904\u7406\u6570\u636e": [[737, "guide-cn-data-pipeline-process"]], "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1": [[777, "guide-ko-data-pipeline-process"]], "4.4 Save and load data": [[692, "save-and-load-data"]], "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [[738, "guide-cn-data-pipeline-savenload"]], "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529": [[778, "guide-ko-data-pipeline-savenload"]], "4.5 Loading OGB datasets using ogb package": [[690, "loading-ogb-datasets-using-ogb-package"]], "4.5 ogb \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30": [[776, "ogb-ogb"]], "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6": [[736, "ogbogb"]], "4.6 Loading data from CSV files": [[689, "loading-data-from-csv-files"]], "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778": [[773, "guide-ko-data-pipeline"]], "5.1 Node Classification/Regression": [[732, "node-classification-regression"]], "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52": [[772, "guide-cn-training-node-classification"]], "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)": [[815, "regression"]], "5.2 Edge Classification/Regression": [[728, "edge-classification-regression"]], "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52": [[768, "guide-cn-training-edge-classification"]], "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)": [[812, "regression"]], "5.3 Link Prediction": [[731, "link-prediction"]], "5.3 \u94fe\u63a5\u9884\u6d4b": [[771, "guide-cn-training-link-prediction"]], "5.3 \ub9c1\ud06c \uc608\uce21": [[814, "guide-ko-training-link-prediction"]], "5.4 Graph Classification": [[730, "graph-classification"]], "5.4 \u6574\u56fe\u5206\u7c7b": [[770, "guide-cn-training-graph-classification"]], "5.4 \uadf8\ub798\ud504 \ubd84\ub958": [[813, "guide-ko-training-graph-classification"]], "5.5 Use of Edge Weights": [[729, "use-of-edge-weights"]], "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd": [[769, "guide-cn-training-eweight"]], "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30": [[811, "guide-ko-training"]], "6.1 Training GNN for Node Classification with Neighborhood Sampling": [[719, "training-gnn-for-node-classification-with-neighborhood-sampling"]], "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[762, "guide-cn-minibatch-node-classification-sampler"]], "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[805, "gnn"]], "6.2 Training GNN for Edge Classification with Neighborhood Sampling": [[714, "training-gnn-for-edge-classification-with-neighborhood-sampling"]], "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[758, "guide-cn-minibatch-edge-classification-sampler"]], "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[800, "gnn"]], "6.3 Training GNN for Link Prediction with Neighborhood Sampling": [[717, "training-gnn-for-link-prediction-with-neighborhood-sampling"]], "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[760, "guide-cn-minibatch-link-classification-sampler"]], "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[803, "gnn"]], "6.4 Implementing Custom Graph Samplers": [[713, "implementing-custom-graph-samplers"]], "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [[757, "guide-cn-minibatch-customizing-neighborhood-sampler"]], "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [[799, "guide-ko-minibatch-customizing-neighborhood-sampler"]], "6.5 Training GNN with DGL sparse": [[721, "training-gnn-with-dgl-sparse"]], "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757": [[761, "gnn"]], "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30": [[804, "gnn"]], "6.6 Implementing Custom GNN Module for Mini-batch Training": [[718, "implementing-custom-gnn-module-for-mini-batch-training"]], "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [[759, "guide-cn-minibatch-inference"]], "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860": [[802, "guide-ko-minibatch-inference"]], "6.7 Exact Offline Inference on Large Graphs": [[716, "exact-offline-inference-on-large-graphs"]], "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30": [[801, "gpu"]], "6.8 Using GPU for Neighborhood Sampling": [[715, "using-gpu-for-neighborhood-sampling"]], "6.9 Data Loading Parallelism": [[720, "data-loading-parallelism"]], "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5": [[798, "stochastic"]], "7.1 Data Preprocessing": [[697, "data-preprocessing"]], "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [[741, "guide-cn-distributed-preprocessing"]], "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac": [[782, "guide-ko-distributed-preprocessing"]], "7.1.1 Partitioning API": [[697, "partitioning-api"]], "7.1.1 \ubd84\uc0b0 \ud30c\ud2f0\uc154\ub2dd": [[782, "id3"]], "7.1.2 Distributed Graph Partitioning Pipeline": [[697, "distributed-graph-partitioning-pipeline"]], "7.2 Tools for launching distributed training/inference": [[698, "tools-for-launching-distributed-training-inference"]], "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API": [[740, "api"]], "7.2 \ubd84\uc0b0 APIs": [[780, "apis"]], "7.3 Programming APIs": [[694, "programming-apis"]], "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [[742, "guide-cn-distributed-tools"]], "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30": [[781, "heterogeneous"]], "7.3.1 \ubd84\uc0b0 \uadf8\ub798\ud504 \ub370\uc774\ud130 \uc811\uadfc\ud558\uae30": [[781, "id1"]], "7.3.2 \ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[781, "id2"]], "7.4 Advanced Graph Partitioning": [[696, "advanced-graph-partitioning"]], "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4": [[783, "guide-ko-distributed-tools"]], "7.5 Heterogeneous Graph Under The Hood": [[695, "heterogeneous-graph-under-the-hood"]], "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5": [[779, "guide-ko-distributed"]], "8\uc7a5: Mixed Precision \ud559\uc2b5": [[806, "mixed-precision"]], "A Batched Graph in DGL": [[840, "A-Batched-Graph-in-DGL"]], "A Blitz Introduction to DGL": [[842, "a-blitz-introduction-to-dgl"]], "A brief introduction to R-GCN": [[853, "A-brief-introduction-to-R-GCN"]], "AGNNConv": [[359, "agnnconv"], [389, "agnnconv"]], "AIFBDataset": [[132, "aifbdataset"]], "AMDataset": [[133, "amdataset"]], "API Reference": [[13, "api-reference"]], "APPNPConv": [[360, "appnpconv"], [390, "appnpconv"], [460, "appnpconv"]], "Access distributed graph data": [[695, "access-distributed-graph-data"]], "Access node/edge data": [[694, "access-node-edge-data"]], "Accessing graph structure": [[694, "accessing-graph-structure"]], "Action 1: Add nodes": [[861, "Action-1:-Add-nodes"]], "Action 2: Add edges": [[861, "Action-2:-Add-edges"]], "Action 3: Choose a destination": [[861, "Action-3:-Choose-a-destination"]], "Actions": [[861, "Actions"]], "ActorDataset": [[134, "actordataset"]], "Adapt your model for minibatch training": [[714, "adapt-your-model-for-minibatch-training"], [719, "adapt-your-model-for-minibatch-training"]], "Adaptive Universal Transformer": [[865, "Adaptive-Universal-Transformer"]], "AddEdge": [[648, "addedge"]], "AddMetaPaths": [[649, "addmetapaths"]], "AddReverse": [[650, "addreverse"]], "AddSelfLoop": [[651, "addselfloop"]], "Adjacency Related Utilities": [[0, "adjacency-related-utilities"]], "Adjacency and incidence matrix": [[1, "adjacency-and-incidence-matrix"]], "After Partition Loading": [[695, "after-partition-loading"]], "Alternative memory allocators": [[845, "Alternative-memory-allocators"]], "AmazonCoBuyComputerDataset": [[135, "amazoncobuycomputerdataset"]], "AmazonCoBuyPhotoDataset": [[136, "amazoncobuyphotodataset"]], "AmazonRatingsDataset": [[137, "amazonratingsdataset"]], "AsGraphPredDataset": [[138, "asgraphpreddataset"]], "AsLinkPredDataset": [[139, "aslinkpreddataset"]], "AsNodePredDataset": [[140, "asnodepreddataset"]], "Assigning Node and Edge Features to Graph": [[837, "Assigning-Node-and-Edge-Features-to-Graph"]], "AtomicConv": [[391, "atomicconv"]], "Attention layer of Transformer": [[865, "Attention-layer-of-Transformer"]], "Attributes and methods": [[12, "attributes-and-methods"]], "Attributes and methods of a DGL Sparse Matrix": [[823, "Attributes-and-methods-of-a-DGL-Sparse-Matrix"]], "AvgPooling": [[376, "avgpooling"], [435, "avgpooling"], [468, "avgpooling"]], "BA2MotifDataset": [[141, "ba2motifdataset"]], "BACommunityDataset": [[142, "bacommunitydataset"]], "BAShapeDataset": [[143, "bashapedataset"]], "BFloat16 CPU example": [[722, "bfloat16-cpu-example"]], "BGSDataset": [[144, "bgsdataset"]], "Backend Options": [[23, "backend-options"]], "Base Class": [[2, "base-class"]], "BaseTransform": [[652, "basetransform"]], "BasicFeatureStore": [[288, "basicfeaturestore"]], "Batch of Graphs": [[730, "batch-of-graphs"]], "Batching and Reading Out Ops": [[0, "batching-and-reading-out-ops"]], "Batching graphs for parallelism": [[854, "Batching-graphs-for-parallelism"]], "Batching many small graphs": [[859, "batching-many-small-graphs"], [868, "batching-many-small-graphs"]], "Benchmark the performance of KNN algorithms": [[14, "benchmark-the-performance-of-knn-algorithms"]], "Best practice of writing custom GNN modules": [[838, "Best-practice-of-writing-custom-GNN-modules"]], "BiasedMHA": [[444, "biasedmha"]], "Binary community subgraph from Cora with a test dataset": [[854, "Binary-community-subgraph-from-Cora-with-a-test-dataset"]], "BitcoinOTCDataset": [[145, "bitcoinotcdataset"]], "Broadcast operations": [[823, "Broadcast-operations"]], "Broadcast operators": [[12, "broadcast-operators"]], "Build Model": [[685, "build-model"]], "Building Docs Locally": [[21, "building-docs-locally"]], "Building a Graph Convolutional Network Using Sparse Matrices": [[818, "Building-a-Graph-Convolutional-Network-Using-Sparse-Matrices"]], "Building and Testing": [[21, "building-and-testing"]], "BuiltinDataset": [[289, "builtindataset"]], "CFConv": [[392, "cfconv"]], "CIFAR10SuperPixelDataset": [[146, "cifar10superpixeldataset"]], "CLUSTERDataset": [[147, "clusterdataset"]], "CPU Best Practices": [[845, "CPU-Best-Practices"]], "CSVDataset": [[148, "csvdataset"]], "Capsule Network": [[864, "Capsule-Network"]], "Chain-up LGNN abstractions as an LGNN layer": [[854, "Chain-up-LGNN-abstractions-as-an-LGNN-layer"]], "Chain-up LGNN layers": [[854, "Chain-up-LGNN-layers"]], "ChameleonDataset": [[149, "chameleondataset"]], "Chapter 1: Graph": [[699, "chapter-1-graph"]], "Chapter 2: Message Passing": [[707, "chapter-2-message-passing"]], "Chapter 3: Building GNN Modules": [[723, "chapter-3-building-gnn-modules"]], "Chapter 4: Graph Data Pipeline": [[686, "chapter-4-graph-data-pipeline"]], "Chapter 5: Training Graph Neural Networks": [[727, "chapter-5-training-graph-neural-networks"]], "Chapter 6: Stochastic Training on Large Graphs": [[712, "chapter-6-stochastic-training-on-large-graphs"]], "Chapter 7: Distributed Training": [[693, "chapter-7-distributed-training"]], "Chapter 8: Mixed Precision Training": [[722, "chapter-8-mixed-precision-training"]], "ChebConv": [[361, "chebconv"], [393, "chebconv"], [461, "chebconv"]], "Chunked Graph Format": [[697, "chunked-graph-format"]], "CiteseerGraphDataset": [[150, "citeseergraphdataset"]], "ClusterGCNSampler": [[209, "clustergcnsampler"]], "CoauthorCSDataset": [[151, "coauthorcsdataset"]], "CoauthorPhysicsDataset": [[152, "coauthorphysicsdataset"]], "Coding styles": [[21, "coding-styles"]], "Comma Separated Values (CSV)": [[701, "comma-separated-values-csv"], [705, "comma-separated-values-csv"], [786, "comma-separated-values-csv"], [790, "comma-separated-values-csv"]], "Community detection in a supervised setting": [[854, "Community-detection-in-a-supervised-setting"]], "Completing f(x, y)": [[854, "Completing-f(x,-y)"]], "Compose": [[653, "compose"]], "Composing OnDiskDataset from raw data": [[832, "composing-ondiskdataset-from-raw-data"]], "Computation on a Batched Graph": [[730, "computation-on-a-batched-graph"]], "Computation times": [[826, "computation-times"], [843, "computation-times"], [847, "computation-times"], [851, "computation-times"], [857, "computation-times"], [860, "computation-times"], [863, "computation-times"], [867, "computation-times"], [869, "computation-times"], [873, "computation-times"]], "Computing with DGLGraph": [[1, "computing-with-dglgraph"]], "Conclusion": [[14, "conclusion"], [828, "Conclusion"], [831, "Conclusion"]], "Containers": [[22, "containers"]], "Contribute to DGL": [[21, "contribute-to-dgl"]], "Contributing Code Changes": [[21, "contributing-code-changes"]], "Contributing Core Features": [[21, "contributing-core-features"]], "Contributing Documentations": [[21, "contributing-documentations"]], "Contributing Editorial Changes via GitHub Web Interface": [[21, "contributing-editorial-changes-via-github-web-interface"]], "Contributing New Models as Examples": [[21, "contributing-new-models-as-examples"]], "Contribution": [[816, "contribution"]], "Conv Layers": [[15, "conv-layers"], [16, "conv-layers"], [17, "conv-layers"]], "Converting Heterogeneous Graphs to Homogeneous Graphs": [[705, "converting-heterogeneous-graphs-to-homogeneous-graphs"]], "CopyTo": [[7, "copyto"], [290, "copyto"]], "Cora": [[855, "Cora"]], "Cora dataset": [[854, "Cora-dataset"]], "CoraFullDataset": [[153, "corafulldataset"]], "CoraGraphDataset": [[154, "coragraphdataset"]], "CornellDataset": [[155, "cornelldataset"]], "Create graph and model": [[853, "Create-graph-and-model"]], "Creating Dataset from CSV via :class:~dgl.data.CSVDataset": [[841, "Creating-Dataset-from-CSV-via-:class:~dgl.data.CSVDataset"]], "Creating Graphs from External Libraries": [[701, "creating-graphs-from-external-libraries"]], "Creating a DGL Sparse Matrix": [[823, "Creating-a-DGL-Sparse-Matrix"]], "Creating a Dataset for Graph Classification from CSV": [[841, "Creating-a-Dataset-for-Graph-Classification-from-CSV"]], "Creating a Dataset for Node Classification or Link Prediction from CSV": [[841, "Creating-a-Dataset-for-Node-Classification-or-Link-Prediction-from-CSV"]], "Creating a Heterogeneous Graph": [[705, "creating-a-heterogeneous-graph"]], "Creation Ops": [[12, "creation-ops"]], "CuGraph Conv Layers": [[16, "cugraph-conv-layers"]], "CuGraphGATConv": [[394, "cugraphgatconv"]], "CuGraphRelGraphConv": [[395, "cugraphrelgraphconv"]], "CuGraphSAGEConv": [[396, "cugraphsageconv"]], "Custom Data Parser": [[689, "custom-data-parser"]], "DGL Binary Format": [[701, "dgl-binary-format"], [705, "dgl-binary-format"]], "DGL Built-in Function": [[5, "dgl-built-in-function"]], "DGL Foreign Function Interface (FFI)": [[22, "dgl-foreign-function-interface-ffi"]], "DGL Graph Construction": [[837, "DGL-Graph-Construction"]], "DGL \u4e8c\u8fdb\u5236\u683c\u5f0f": [[745, "dgl"]], "DGL \ub370\uc774\ud130 \ub85c\ub354\uc5d0\uc11c GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc0ac\uc6a9\ud558\uae30": [[801, "dgl-gpu"]], "DGL \ubc14\uc774\ub108\ub9ac \ud3ec\uba67": [[786, "dgl"], [790, "dgl"]], "DGL \ubd84\uc0b0 \ubaa8\ub4c8 \ucd08\uae30\ud654": [[780, "dgl"]], "DGLDataset": [[156, "dgldataset"]], "DGLDataset Object Overview": [[841, "DGLDataset-Object-Overview"]], "DGL\u4e8c\u8fdb\u5236\u683c\u5f0f": [[749, "dgl"]], "DGL\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": [[740, "dgl"]], "DGMG: Optimization objective": [[861, "DGMG:-Optimization-objective"]], "DGMG: The implementation": [[861, "DGMG:-The-implementation"]], "DGMG: The main flow": [[861, "DGMG:-The-main-flow"]], "DGNConv": [[397, "dgnconv"]], "Data Loader Preparation": [[870, "Data-Loader-Preparation"]], "Data Loading": [[730, "data-loading"]], "Data Repository": [[23, "data-repository"]], "Data folder structure": [[689, "data-folder-structure"]], "Data hosting": [[21, "data-hosting"]], "Data preparation": [[834, "Data-preparation"], [835, "Data-preparation"]], "DataLoader": [[7, "dataloader"], [210, "dataloader"], [291, "dataloader"]], "DataLoaders": [[3, "dataloaders"]], "Dataset": [[7, "dataset"], [292, "dataset"]], "Dataset adapters": [[2, "dataset-adapters"]], "Dataset of a single feature-less graph": [[689, "dataset-of-a-single-feature-less-graph"]], "Dataset of a single graph with features and labels": [[689, "dataset-of-a-single-graph-with-features-and-labels"]], "Dataset of a single heterogeneous graph": [[689, "dataset-of-a-single-heterogeneous-graph"]], "Dataset of multiple graphs": [[689, "dataset-of-multiple-graphs"]], "DeepWalk": [[383, "deepwalk"]], "Define Model": [[840, "Define-Model"]], "Define a GNN model": [[848, "Define-a-GNN-model"], [849, "Define-a-GNN-model"]], "Define a GraphSAGE model": [[839, "Define-a-GraphSAGE-model"]], "Define a GraphSAGE model for minibatch training": [[717, "define-a-graphsage-model-for-minibatch-training"]], "Define a data loader with neighbor and negative sampling": [[717, "define-a-data-loader-with-neighbor-and-negative-sampling"]], "Define a neighborhood sampler and data loader": [[714, "define-a-neighborhood-sampler-and-data-loader"], [719, "define-a-neighborhood-sampler-and-data-loader"]], "Defining Data Loader": [[840, "Defining-Data-Loader"]], "Defining Model": [[829, "Defining-Model"], [831, "Defining-Model"], [871, "Defining-Model"]], "Defining Model for Node Representation": [[828, "Defining-Model-for-Node-Representation"]], "Defining Neighbor Sampler and Data Loader in DGL": [[828, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [829, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [831, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"]], "Defining Traing Loop": [[828, "Defining-Traing-Loop"]], "Defining Training Loop": [[831, "Defining-Training-Loop"]], "Defining Training and Evaluation Procedures": [[829, "Defining-Training-and-Evaluation-Procedures"]], "Defining Traning and Evaluation Procedures": [[871, "Defining-Traning-and-Evaluation-Procedures"]], "Defining a Graph Convolutional Network (GCN)": [[836, "Defining-a-Graph-Convolutional-Network-(GCN)"]], "Defining new types": [[22, "defining-new-types"]], "Degree Bucketing for Message Passing with User Defined Functions": [[20, "degree-bucketing-for-message-passing-with-user-defined-functions"]], "Degree Encoding": [[685, "degree-encoding"]], "DegreeEncoder": [[445, "degreeencoder"]], "Dense Conv Layers": [[15, "dense-conv-layers"], [16, "dense-conv-layers"]], "DenseChebConv": [[362, "densechebconv"], [398, "densechebconv"]], "DenseGraphConv": [[363, "densegraphconv"], [399, "densegraphconv"]], "DenseSAGEConv": [[364, "densesageconv"], [400, "densesageconv"]], "Description": [[6, "description"], [389, "description"], [390, "description"], [391, "description"], [392, "description"], [397, "description"], [400, "description"], [400, "id1"], [401, "description"], [403, "description"], [404, "description"], [405, "description"], [405, "id1"], [406, "description"], [407, "description"], [407, "id1"], [408, "description"], [408, "id1"], [409, "description"], [409, "id1"], [410, "description"], [412, "description"], [412, "id1"], [413, "description"], [414, "description"], [414, "id1"], [415, "description"], [415, "id1"], [418, "description"], [419, "description"], [421, "description"], [421, "id1"], [422, "description"], [422, "id1"], [423, "description"], [423, "id1"], [424, "description"], [425, "description"], [425, "id1"], [452, "description"], [452, "id1"], [453, "description"], [453, "id1"], [454, "description"], [456, "description"], [456, "id1"]], "Device Control": [[1, "device-control"]], "Diagonal Matrix": [[823, "Diagonal-Matrix"]], "DistEdgeDataLoader": [[211, "distedgedataloader"]], "DistGraph creation": [[694, "distgraph-creation"]], "DistGraph \uc0dd\uc131": [[780, "distgraph"]], "DistNodeDataLoader": [[212, "distnodedataloader"]], "Distributed DataLoader": [[4, "distributed-dataloader"]], "Distributed DistEmbedding": [[694, "distributed-distembedding"]], "Distributed Graph": [[4, "distributed-graph"]], "Distributed Graph Sampling Operators": [[4, "distributed-graph-sampling-operators"]], "Distributed Link Prediction": [[849, "Distributed-Link-Prediction"]], "Distributed Node Classification": [[848, "Distributed-Node-Classification"]], "Distributed Node Embedding": [[4, "distributed-node-embedding"]], "Distributed Process Group Initialization": [[870, "Distributed-Process-Group-Initialization"]], "Distributed Sampling": [[4, "distributed-sampling"]], "Distributed Tensor": [[4, "distributed-tensor"], [694, "distributed-tensor"]], "Distributed embedding optimizer": [[4, "distributed-embedding-optimizer"]], "Distributed graph": [[694, "distributed-graph"]], "Distributed mini-batch sampler": [[848, "Distributed-mini-batch-sampler"], [849, "Distributed-mini-batch-sampler"]], "Distributed mode vs. standalone mode": [[694, "distributed-mode-vs-standalone-mode"]], "Distributed sampling": [[694, "distributed-sampling"]], "Distributed training": [[850, "distributed-training"]], "Distributed training script": [[848, "Distributed-training-script"], [849, "Distributed-training-script"]], "Distributed workload split": [[4, "distributed-workload-split"]], "Distributed \uadf8\ub798\ud504": [[780, "distributed"]], "DistributedItemSampler": [[293, "distributeditemsampler"]], "DotGatConv": [[401, "dotgatconv"]], "DropEdge": [[654, "dropedge"]], "DropNode": [[655, "dropnode"]], "During Preprocessing": [[695, "during-preprocessing"]], "EGATConv": [[402, "egatconv"]], "EGNNConv": [[403, "egnnconv"]], "EGTLayer": [[446, "egtlayer"]], "Edge Prediction Datasets": [[2, "edge-prediction-datasets"]], "Edge Type Subgraph": [[705, "edge-type-subgraph"]], "Edge-wise User-defined Function": [[20, "edge-wise-user-defined-function"]], "EdgeConv": [[365, "edgeconv"], [404, "edgeconv"]], "EdgeData": [[689, "edgedata"]], "EdgeGATConv": [[405, "edgegatconv"]], "EdgePredictor": [[452, "edgepredictor"]], "EdgeWeightNorm": [[406, "edgeweightnorm"]], "Element-wise functions": [[823, "Element-wise-functions"]], "Elementwise Operators": [[12, "elementwise-operators"]], "Elementwise operations": [[823, "Elementwise-operations"]], "Enable GraphBolt sampling in the training script": [[848, "Enable-GraphBolt-sampling-in-the-training-script"]], "Enabling ARGO on your own GNN program": [[844, "Enabling-ARGO-on-your-own-GNN-program"]], "Encoding a dynamic graph": [[861, "Encoding-a-dynamic-graph"]], "End-to-End Mixed Precision Training": [[722, "end-to-end-mixed-precision-training"]], "End-to-End Mixed Precision \ud559\uc2b5": [[806, "end-to-end-mixed-precision"]], "Environment Variables": [[23, "environment-variables"]], "Equation (1)": [[855, "Equation-(1)"]], "Equation (2)": [[855, "Equation-(2)"]], "Equation (3) & (4)": [[855, "Equation-(3)-&-(4)"]], "Evaluating Performance with Link Prediction": [[828, "Evaluating-Performance-with-Link-Prediction"]], "Evaluation Loop": [[871, "Evaluation-Loop"]], "Evaluation function": [[829, "Evaluation-function"]], "Even more customization by user-defined function": [[838, "Even-more-customization-by-user-defined-function"]], "Example: MAG240M-LSC": [[697, "example-mag240m-lsc"]], "Examples on a heterogeneous graph": [[357, "examples-on-a-heterogeneous-graph"]], "Examples on a homogeneous graph": [[357, "examples-on-a-homogeneous-graph"]], "Exclude Edges After Sampling": [[713, "exclude-edges-after-sampling"]], "Execute on specific edges": [[865, "Execute-on-specific-edges"]], "Exercise #1": [[823, "Exercise-#1"]], "Exercise #2": [[823, "Exercise-#2"]], "FB15k237Dataset": [[157, "fb15k237dataset"]], "FB15kDataset": [[158, "fb15kdataset"]], "FakeNewsDataset": [[159, "fakenewsdataset"]], "Farthest Point Sampler": [[6, "farthest-point-sampler"]], "FeatMask": [[656, "featmask"]], "Feature": [[294, "feature"]], "Feature and FeatureStore": [[7, "feature-and-featurestore"]], "FeatureFetcher": [[7, "featurefetcher"], [295, "featurefetcher"]], "FeatureStore": [[296, "featurestore"]], "FlickrDataset": [[160, "flickrdataset"]], "For heterogeneous graphs": [[714, "for-heterogeneous-graphs"], [717, "for-heterogeneous-graphs"], [719, "for-heterogeneous-graphs"]], "FraudAmazonDataset": [[161, "fraudamazondataset"]], "FraudDataset": [[162, "frauddataset"]], "FraudYelpDataset": [[163, "fraudyelpdataset"]], "Frequently Asked Questions (FAQ)": [[24, "frequently-asked-questions-faq"]], "Full R-GCN model defined": [[853, "Full-R-GCN-model-defined"]], "Full YAML Specification": [[689, "full-yaml-specification"]], "FusedCSCSamplingGraph": [[297, "fusedcscsamplinggraph"]], "GAT in DGL": [[855, "GAT-in-DGL"]], "GATConv": [[366, "gatconv"], [407, "gatconv"], [462, "gatconv"]], "GATv2Conv": [[408, "gatv2conv"]], "GCN implementation with DGL": [[852, "GCN-implementation-with-DGL"]], "GCN in one formula": [[852, "GCN-in-one-formula"]], "GCN2Conv": [[409, "gcn2conv"]], "GCNNorm": [[657, "gcnnorm"]], "GDC": [[658, "gdc"]], "GDELTDataset": [[164, "gdeltdataset"]], "GINConv": [[367, "ginconv"], [410, "ginconv"], [463, "ginconv"]], "GINDataset": [[165, "gindataset"]], "GINEConv": [[411, "gineconv"]], "GMMConv": [[368, "gmmconv"], [412, "gmmconv"]], "GNNExplainer": [[426, "gnnexplainer"]], "GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub7ec\ub97c DGL \ud568\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30": [[801, "gpu-dgl"]], "GPUCachedFeature": [[298, "gpucachedfeature"]], "GSDDMM functions": [[9, "gsddmm-functions"]], "GSpMM functions": [[9, "gspmm-functions"]], "GatedGCNConv": [[413, "gatedgcnconv"]], "GatedGraphConv": [[369, "gatedgraphconv"], [414, "gatedgraphconv"]], "GatherMM and SegmentMM Module": [[9, "gathermm-and-segmentmm-module"]], "General development process": [[21, "general-development-process"]], "Generate feature data for graph": [[834, "Generate-feature-data-for-graph"], [835, "Generate-feature-data-for-graph"]], "Generate graph structure data": [[834, "Generate-graph-structure-data"], [835, "Generate-graph-structure-data"]], "Generate tasks": [[834, "Generate-tasks"], [835, "Generate-tasks"]], "Generative Models of Graphs": [[861, "Generative-Models-of-Graphs"]], "Generative models": [[862, "generative-models"], [868, "generative-models"]], "Get training and validation node IDs": [[848, "Get-training-and-validation-node-IDs"], [849, "Get-training-and-validation-node-IDs"]], "Getting Started": [[816, "getting-started"]], "Git setup (for developers)": [[21, "git-setup-for-developers"]], "Global Configurations": [[23, "global-configurations"]], "Global Pooling Layers": [[15, "global-pooling-layers"], [16, "global-pooling-layers"], [17, "global-pooling-layers"]], "GlobalAttentionPooling": [[377, "globalattentionpooling"], [436, "globalattentionpooling"], [469, "globalattentionpooling"]], "GlobalUniform": [[226, "globaluniform"]], "Graph": [[7, "graph"]], "Graph Convolutional Layer": [[818, "Graph-Convolutional-Layer"]], "Graph Convolutional Network": [[852, "Graph-Convolutional-Network"]], "Graph Create Ops": [[0, "graph-create-ops"]], "Graph Diffusion": [[819, "Graph-Diffusion"]], "Graph Diffusion in GNNs": [[819, "Graph-Diffusion-in-GNNs"]], "Graph Diffusion in Graph Neural Networks": [[819, "Graph-Diffusion-in-Graph-Neural-Networks"]], "Graph Partition Utilities": [[0, "graph-partition-utilities"]], "Graph Positional Encoding Ops:": [[0, "graph-positional-encoding-ops"]], "Graph Prediction Datasets": [[2, "graph-prediction-datasets"]], "Graph Readout": [[730, "graph-readout"]], "Graph Transform Ops": [[0, "graph-transform-ops"]], "Graph Transformations": [[837, "Graph-Transformations"]], "Graph Transformer Layer": [[820, "Graph-Transformer-Layer"]], "Graph Transformer Model": [[820, "Graph-Transformer-Model"]], "Graph Transformer in a Nutshell": [[820, "Graph-Transformer-in-a-Nutshell"]], "Graph Traversal & Message Propagation": [[0, "graph-traversal-message-propagation"]], "Graph building": [[865, "Graph-building"]], "Graph checking and graph type specification": [[725, "graph-checking-and-graph-type-specification"]], "Graph embedding": [[861, "Graph-embedding"]], "Graph neural networks and its variants": [[856, "graph-neural-networks-and-its-variants"], [868, "graph-neural-networks-and-its-variants"]], "Graph partition book": [[4, "graph-partition-book"]], "Graph partitioning": [[848, "Graph-partitioning"]], "Graph structure": [[865, "Graph-structure"]], "GraphConv": [[370, "graphconv"], [415, "graphconv"], [464, "graphconv"]], "GraphData": [[689, "graphdata"]], "GraphDataLoader": [[213, "graphdataloader"]], "Graphormer Layer": [[685, "graphormer-layer"]], "GraphormerLayer": [[447, "graphormerlayer"]], "GroupRevRes": [[416, "grouprevres"]], "HGTConv": [[417, "hgtconv"]], "Half precision\uc744 \uc0ac\uc6a9\ud55c \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[806, "half-precision"]], "Handle dataset": [[853, "Handle-dataset"]], "HeatKernel": [[659, "heatkernel"]], "HeteroEmbedding": [[384, "heteroembedding"]], "HeteroGNNExplainer": [[427, "heterognnexplainer"]], "HeteroGraphConv": [[358, "heterographconv"], [385, "heterographconv"], [470, "heterographconv"]], "HeteroGraphConv implementation logic:": [[726, "heterographconv-implementation-logic"]], "HeteroGraphConv \uad6c\ud604 \ub85c\uc9c1:": [[810, "heterographconv"]], "HeteroGraphConv\u7684\u5b9e\u73b0\u903b\u8f91": [[766, "heterographconv"]], "HeteroItemSet": [[299, "heteroitemset"]], "HeteroLinear": [[386, "heterolinear"]], "HeteroPGExplainer": [[428, "heteropgexplainer"]], "HeteroSubgraphX": [[429, "heterosubgraphx"]], "Heterogeneous Graphs": [[727, "heterogeneous-graphs"]], "Heterogeneous Learning Modules": [[15, "heterogeneous-learning-modules"], [16, "heterogeneous-learning-modules"], [17, "heterogeneous-learning-modules"]], "Heterogeneous graph": [[728, "heterogeneous-graph"], [730, "heterogeneous-graph"], [732, "heterogeneous-graph"]], "Heterogeneous graphs": [[718, "heterogeneous-graphs"], [731, "heterogeneous-graphs"]], "Heterogeneous \uadf8\ub798\ud504": [[811, "heterogeneous"], [812, "heterogeneous"], [813, "heterogeneous"], [815, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\ub4e4": [[799, "heterogeneous"], [799, "id5"], [804, "heterogeneous"], [814, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \ub178\ub4dc/\uc5d0\uc9c0 \ud53c\ucc98\ub4e4 \uc0dd\uc131\ud558\uae30": [[782, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uacbd\uc6b0": [[800, "heterogeneous"], [803, "heterogeneous"], [805, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uc5d0\uc9c0\ub4e4\uc5d0 \ub300\ud55c \uc5d0\uc9c0 \ud0c0\uc785 \uc608\uce21\ud558\uae30": [[812, "id3"]], "Homogeneous \uadf8\ub798\ud504, \uc774\ubd84 \uadf8\ub798\ud504(bipartite graph), \uadf8\ub9ac\uace0 MFG\ub97c \uc704\ud55c \ubaa8\ub4c8 \uc791\uc131\ud558\uae30": [[804, "homogeneous-bipartite-graph-mfg"]], "Homophily Measures": [[0, "homophily-measures"]], "How DGL Handles Computation Dependency\u00b6": [[831, "How-DGL-Handles-Computation-Dependency\u00b6"]], "How DGL implements Transformer with a graph neural network": [[865, "How-DGL-implements-Transformer-with-a-graph-neural-network"]], "How Does DGL Represent A Graph?": [[837, "How-Does-DGL-Represent-A-Graph?"]], "Hyper-threading": [[845, "Hyper-threading"]], "Hypergraph Neural Network (HGNN) Layer": [[821, "Hypergraph-Neural-Network-(HGNN)-Layer"]], "Hypergraph Neural Networks": [[821, "Hypergraph-Neural-Networks"]], "Hypergraphs": [[821, "Hypergraphs"]], "ICEWS18Dataset": [[166, "icews18dataset"]], "ID Conversion Utilities": [[695, "id-conversion-utilities"]], "ID mapping": [[697, "id-mapping"]], "ID \ub9e4\ud551": [[782, "id"]], "Implement LGNN in DGL": [[854, "Implement-LGNN-in-DGL"]], "Implement R-GCN in DGL": [[853, "Implement-R-GCN-in-DGL"]], "Implementing Offline Inference": [[716, "implementing-offline-inference"]], "Implementing \\text{fuse} as sparse matrix multiplication": [[854, "Implementing-\\text{fuse}-as-sparse-matrix-multiplication"]], "Implementing \\text{prev} and \\text{deg} as tensor operation": [[854, "Implementing-\\text{prev}-and-\\text{deg}-as-tensor-operation"]], "Implementing \\text{radius} as message passing in DGL": [[854, "Implementing-\\text{radius}-as-message-passing-in-DGL"]], "Importing Packages": [[871, "Importing-Packages"]], "Improve Scalability on Multi-Core CPUs": [[844, "Improve-Scalability-on-Multi-Core-CPUs"]], "InSubgraphSampler": [[300, "insubgraphsampler"]], "Index": [[816, "index"]], "Inference": [[849, "Inference"]], "Initialization": [[4, "initialization"]], "Initialization of the DGL distributed module": [[694, "initialization-of-the-dgl-distributed-module"]], "Initialize network communication": [[848, "Initialize-network-communication"], [849, "Initialize-network-communication"]], "Initializing a DGL Diagonal Sparse Matrix": [[823, "Initializing-a-DGL-Diagonal-Sparse-Matrix"]], "Input format": [[696, "input-format"]], "Install DGL package": [[828, "Install-DGL-package"], [831, "Install-DGL-package"], [834, "Install-DGL-package"], [835, "Install-DGL-package"]], "Install DGL package and other dependencies": [[829, "Install-DGL-package-and-other-dependencies"]], "Install and Setup": [[817, "install-and-setup"]], "Install from Conda or Pip": [[817, "install-from-conda-or-pip"]], "Install from source": [[817, "install-from-source"]], "Installation": [[844, "Installation"]], "Instantiate OnDiskDataset": [[834, "Instantiate-OnDiskDataset"], [835, "Instantiate-OnDiskDataset"]], "Integrated Benchmarks": [[824, "integrated-benchmarks"]], "Intel": [[845, "Intel"]], "Introducing attention to GCN": [[855, "Introducing-attention-to-GCN"]], "Introduction": [[861, "Introduction"]], "ItemSampler": [[7, "itemsampler"], [301, "itemsampler"]], "ItemSet": [[7, "itemset"], [302, "itemset"]], "JSON/GML Format": [[701, "json-gml-format"]], "JSON/GML \u683c\u5f0f": [[745, "json-gml"]], "JSON/GML \ud3ec\uba67": [[786, "json-gml"]], "JumpingKnowledge": [[456, "jumpingknowledge"]], "KHopGraph": [[660, "khopgraph"]], "KNNGraph": [[432, "knngraph"]], "KarateClubDataset": [[167, "karateclubdataset"]], "Key ideas of Capsule": [[864, "Key-ideas-of-Capsule"]], "Key ideas of R-GCN": [[853, "Key-ideas-of-R-GCN"]], "Label Informativeness Measures": [[0, "label-informativeness-measures"]], "LabelPropagation": [[457, "labelpropagation"]], "LaborSampler": [[214, "laborsampler"]], "LapPE": [[661, "lappe"]], "LapPosEncoder": [[448, "lapposencoder"]], "Launch the distributed training job": [[848, "Launch-the-distributed-training-job"]], "LayerNeighborSampler": [[303, "layerneighborsampler"]], "LazyFeature": [[221, "lazyfeature"]], "LegacyDataset": [[304, "legacydataset"]], "LegacyTUDataset": [[168, "legacytudataset"]], "Line Graph Neural Network": [[854, "Line-Graph-Neural-Network"]], "Line graph neural network key ideas": [[854, "Line-graph-neural-network-key-ideas"]], "LineGraph": [[662, "linegraph"]], "Link Prediction": [[828, "Link-Prediction"]], "Link Prediction Task": [[834, "Link-Prediction-Task"], [835, "Link-Prediction-Task"]], "Link Prediction using Graph Neural Networks": [[839, "Link-Prediction-using-Graph-Neural-Networks"]], "Linux": [[817, "linux"]], "Load balancing": [[697, "load-balancing"]], "Load partitioned graphs": [[697, "load-partitioned-graphs"]], "Loading Cora Dataset": [[836, "Loading-Cora-Dataset"]], "Loading Data": [[821, "Loading-Data"], [840, "Loading-Data"]], "Loading Dataset": [[828, "Loading-Dataset"], [831, "Loading-Dataset"]], "Loading Graphs from Disk": [[701, "loading-graphs-from-disk"]], "Loading Heterographs from Disk": [[705, "loading-heterographs-from-disk"]], "Loading and Saving Graphs": [[837, "Loading-and-Saving-Graphs"]], "Loading graph and features": [[839, "Loading-graph-and-features"]], "METIS partition algorithm": [[696, "metis-partition-algorithm"]], "MNISTSuperPixelDataset": [[169, "mnistsuperpixeldataset"]], "MUTAGDataset": [[170, "mutagdataset"]], "MXNet backend": [[817, "mxnet-backend"]], "Main Function for Each Process": [[870, "Main-Function-for-Each-Process"]], "Main Loop": [[858, "Main-Loop"]], "Main class of Transformer graph": [[865, "Main-class-of-Transformer-graph"]], "Make Your Own Dataset": [[841, "Make-Your-Own-Dataset"]], "Matrix Multiplication": [[12, "matrix-multiplication"]], "Matrix multiplication": [[823, "Matrix-multiplication"]], "Matrix transformations": [[823, "Matrix-transformations"]], "MaxPooling": [[378, "maxpooling"], [437, "maxpooling"], [471, "maxpooling"]], "Message Passing Paradigm": [[707, "message-passing-paradigm"]], "Message Passing Review": [[830, "Message-Passing-Review"]], "Message Passing with Edge Weights": [[729, "message-passing-with-edge-weights"]], "Message aggregation": [[865, "Message-aggregation"]], "Message computation": [[865, "Message-computation"]], "Message functions": [[5, "message-functions"]], "Message passing": [[865, "Message-passing"]], "Message passing and GNNs": [[838, "Message-passing-and-GNNs"]], "Message passing and reducing": [[725, "message-passing-and-reducing"]], "Message-Passing with Half Precision": [[722, "message-passing-with-half-precision"]], "MetaPath2Vec": [[387, "metapath2vec"]], "MinesweeperDataset": [[171, "minesweeperdataset"]], "Mini-batch Data Loading": [[871, "Mini-batch-Data-Loading"]], "MiniBatch": [[7, "minibatch"], [305, "minibatch"]], "MiniBatchTransformer": [[306, "minibatchtransformer"]], "MiniGCDataset": [[172, "minigcdataset"]], "Misc": [[1, "misc"]], "Model Definition": [[730, "model-definition"]], "Model Forward": [[685, "model-forward"]], "Model Implementation Difference from Node Classification": [[728, "model-implementation-difference-from-node-classification"]], "Model Initialization": [[870, "Model-Initialization"]], "Model Overview": [[852, "Model-Overview"]], "Model implementation": [[864, "Model-implementation"]], "More customization": [[838, "More-customization"]], "MovieLensDataset": [[173, "movielensdataset"]], "Multi-GPU Node Classification": [[829, "Multi-GPU-Node-Classification"]], "Multi-head attention": [[855, "Multi-head-attention"], [865, "Multi-head-attention"]], "Multi-head attention layer": [[865, "Multi-head-attention-layer"]], "MultiLayerFullNeighborSampler": [[215, "multilayerfullneighborsampler"]], "Mutating topology": [[1, "mutating-topology"]], "NFS client side setup (ubuntu only)": [[848, "NFS-client-side-setup-(ubuntu-only)"]], "NFS server side setup (ubuntu only)": [[848, "NFS-server-side-setup-(ubuntu-only)"]], "NNConv": [[371, "nnconv"], [418, "nnconv"]], "Negative Samplers for Link Prediction": [[3, "negative-samplers-for-link-prediction"]], "Negative sampling": [[11, "negative-sampling"]], "Negative \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[803, "negative"]], "NegativeSampler": [[7, "negativesampler"], [307, "negativesampler"]], "Neighbor Matching": [[6, "neighbor-matching"]], "Neighbor Sampling Overview": [[830, "Neighbor-Sampling-Overview"], [830, "id1"]], "Neighbor sampling": [[11, "neighbor-sampling"]], "NeighborSampler": [[216, "neighborsampler"], [308, "neighborsampler"]], "Network Embedding Modules": [[16, "network-embedding-modules"]], "Node Classification": [[831, "Node-Classification"]], "Node Classification Task": [[834, "Node-Classification-Task"], [835, "Node-Classification-Task"]], "Node Classification with DGL": [[836, "Node-Classification-with-DGL"]], "Node Prediction Datasets": [[2, "node-prediction-datasets"]], "Node embedding optimizer": [[10, "node-embedding-optimizer"]], "Node-wise User-defined Function": [[20, "node-wise-user-defined-function"]], "NodeData": [[689, "nodedata"]], "NodeEmbedding": [[455, "nodeembedding"]], "NodeShuffle": [[663, "nodeshuffle"]], "Non-linear activation functions": [[12, "non-linear-activation-functions"], [823, "Non-linear-activation-functions"]], "OnDiskDataset": [[309, "ondiskdataset"]], "OnDiskDataset for Heterogeneous Graph": [[834, "OnDiskDataset-for-Heterogeneous-Graph"]], "OnDiskDataset for Homogeneous Graph": [[835, "OnDiskDataset-for-Homogeneous-Graph"]], "One layer in LGNN, algorithm structure": [[854, "One-layer-in-LGNN,-algorithm-structure"]], "OpenMP settings": [[845, "OpenMP-settings"]], "Operations on Sparse Matrix": [[823, "Operations-on-Sparse-Matrix"]], "Operators": [[12, "operators"]], "Organize Data into YAML File": [[834, "Organize-Data-into-YAML-File"], [835, "Organize-Data-into-YAML-File"]], "Output format": [[696, "output-format"]], "Overview": [[727, "overview"], [728, "overview"], [730, "overview"], [731, "overview"], [732, "overview"], [827, "overview"]], "Overview of Graph Classification with GNN": [[840, "Overview-of-Graph-Classification-with-GNN"]], "Overview of Link Prediction with GNN": [[839, "Overview-of-Link-Prediction-with-GNN"]], "Overview of Neighborhood Sampling Approaches": [[712, "overview-of-neighborhood-sampling-approaches"]], "Overview of Node Classification with GNN": [[836, "Overview-of-Node-Classification-with-GNN"]], "PATTERNDataset": [[174, "patterndataset"]], "PGExplainer": [[430, "pgexplainer"]], "PNAConv": [[419, "pnaconv"]], "PPIDataset": [[175, "ppidataset"]], "PPR": [[664, "ppr"]], "Paper Study with DGL": [[868, "paper-study-with-dgl"]], "ParMETIS Installation": [[696, "parmetis-installation"]], "ParMETIS \uacb0\uacfc\ub4e4\uc744 DGLGraph\ub85c \ubcc0\ud658\ud558\uae30": [[782, "parmetis-dglgraph"]], "ParMETIS \uc124\uce58": [[782, "parmetis"]], "ParMETIS \uc2e4\ud589\ud558\uae30 \ubc0f \uacb0\uacfc \ud3ec\uba67\ub4e4": [[782, "id9"]], "ParMETIS\ub97c \uc704\ud55c \uc785\ub825 \ud3ec\uba67": [[782, "id8"]], "Parallel METIS partitioning": [[696, "parallel-metis-partitioning"]], "Partition": [[4, "partition"]], "Partition a graph": [[848, "Partition-a-graph"], [849, "Partition-a-graph"]], "Path Encoding": [[685, "path-encoding"]], "PathEncoder": [[449, "pathencoder"]], "PerSourceUniform": [[227, "persourceuniform"]], "Performance Benchmarks": [[824, "performance-benchmarks"]], "Positive graph, negative graph, and apply_edges": [[839, "Positive-graph,-negative-graph,-and-apply_edges"]], "Predicting Edge Type of an Existing Edge on a Heterogeneous Graph": [[728, "predicting-edge-type-of-an-existing-edge-on-a-heterogeneous-graph"]], "Prepare Data": [[683, "prepare-data"]], "Prepare training and testing sets": [[839, "Prepare-training-and-testing-sets"]], "Preprocessing and postprocessing": [[865, "Preprocessing-and-postprocessing"]], "Processing Graph Classification datasets": [[691, "processing-graph-classification-datasets"]], "Processing Node Classification datasets": [[691, "processing-node-classification-datasets"]], "Processing dataset for Link Prediction datasets": [[691, "processing-dataset-for-link-prediction-datasets"]], "Protein-protein interaction (PPI) networks": [[855, "Protein-protein-interaction-(PPI)-networks"]], "PubmedGraphDataset": [[176, "pubmedgraphdataset"]], "Put everything together": [[855, "Put-everything-together"]], "Put it all together": [[865, "Put-it-all-together"]], "Putting it together": [[858, "Putting-it-together"], [861, "Putting-it-together"]], "PyTorch backend": [[817, "pytorch-backend"]], "QM7bDataset": [[177, "qm7bdataset"]], "QM9Dataset": [[178, "qm9dataset"]], "QM9EdgeDataset": [[179, "qm9edgedataset"]], "Querying Graph Structures": [[837, "Querying-Graph-Structures"]], "Querying and manipulating batch information": [[1, "querying-and-manipulating-batch-information"]], "Querying and manipulating node/edge ID type": [[1, "querying-and-manipulating-node-edge-id-type"]], "Querying and manipulating sparse format": [[1, "querying-and-manipulating-sparse-format"]], "Querying graph structure": [[1, "querying-graph-structure"]], "Querying metagraph structure": [[1, "querying-metagraph-structure"]], "QuestionsDataset": [[180, "questionsdataset"]], "Quickstart": [[823, "Quickstart"]], "R-GCN layers": [[853, "R-GCN-layers"]], "RadiusGraph": [[433, "radiusgraph"]], "Random walk": [[11, "random-walk"]], "RandomWalkPE": [[665, "randomwalkpe"]], "RedditDataset": [[181, "redditdataset"]], "Reduce functions": [[5, "reduce-functions"]], "Reduce operations": [[823, "Reduce-operations"]], "Reference to the distributed graph": [[848, "Reference-to-the-distributed-graph"], [849, "Reference-to-the-distributed-graph"]], "RelGraphConv": [[372, "relgraphconv"], [420, "relgraphconv"], [465, "relgraphconv"]], "Relation with Message Passing APIs": [[9, "relation-with-message-passing-apis"]], "Relational Graph Convolutional Network": [[853, "Relational-Graph-Convolutional-Network"]], "RemoveSelfLoop": [[666, "removeselfloop"]], "Removing edges in the minibatch from the original graph for neighbor sampling": [[714, "removing-edges-in-the-minibatch-from-the-original-graph-for-neighbor-sampling"]], "Resources": [[825, "resources"]], "Results": [[14, "results"]], "Revisit classic models from a graph perspective": [[866, "revisit-classic-models-from-a-graph-perspective"], [868, "revisit-classic-models-from-a-graph-perspective"]], "Roadmap": [[686, "roadmap"], [699, "roadmap"], [707, "roadmap"], [712, "roadmap"], [723, "roadmap"], [727, "roadmap"]], "RomanEmpireDataset": [[182, "romanempiredataset"]], "RowFeatNormalizer": [[667, "rowfeatnormalizer"]], "Run ParMETIS and output format": [[696, "run-parmetis-and-output-format"]], "SAGEConv": [[373, "sageconv"], [421, "sageconv"], [466, "sageconv"]], "SAINTSampler": [[217, "saintsampler"]], "SBMMixtureDataset": [[183, "sbmmixturedataset"]], "SGConv": [[374, "sgconv"], [422, "sgconv"], [467, "sgconv"]], "SIGNDiffusion": [[668, "signdiffusion"]], "SSH Access": [[848, "SSH-Access"]], "SSTDataset": [[184, "sstdataset"]], "SVDPE": [[669, "svdpe"]], "Sample neighbors with GraphBolt": [[848, "Sample-neighbors-with-GraphBolt"]], "SampledSubgraph": [[310, "sampledsubgraph"]], "SampledSubgraphImpl": [[311, "sampledsubgraphimpl"]], "Sampler": [[218, "sampler"]], "Sampler Transformations": [[3, "sampler-transformations"]], "Sampler for Heterogeneous Graphs": [[713, "sampler-for-heterogeneous-graphs"]], "Samplers": [[3, "samplers"]], "SamplingGraph": [[312, "samplinggraph"]], "Scenarios": [[827, "scenarios"]], "Score Modules for Link Prediction and Knowledge Graph Completion": [[16, "score-modules-for-link-prediction-and-knowledge-graph-completion"]], "Segment Reduce Module": [[9, "segment-reduce-module"]], "SegmentedKNNGraph": [[434, "segmentedknngraph"]], "Sequential": [[382, "sequential"], [458, "sequential"]], "Set up distributed training environment": [[848, "Set-up-distributed-training-environment"], [849, "Set-up-distributed-training-environment"]], "Set2Set": [[379, "set2set"], [438, "set2set"]], "SetTransformerDecoder": [[439, "settransformerdecoder"]], "SetTransformerEncoder": [[440, "settransformerencoder"]], "ShaDowKHopSampler": [[219, "shadowkhopsampler"]], "Simple implementation": [[865, "Simple-implementation"]], "Single Machine Multi-GPU Minibatch Graph Classification": [[870, "Single-Machine-Multi-GPU-Minibatch-Graph-Classification"]], "Single Machine Multi-GPU Minibatch Node Classification": [[871, "Single-Machine-Multi-GPU-Minibatch-Node-Classification"]], "Softmax": [[823, "Softmax"]], "SortPooling": [[380, "sortpooling"], [441, "sortpooling"], [472, "sortpooling"]], "Sparse Matrix": [[823, "Sparse-Matrix"]], "Sparse Multi-head Attention": [[820, "Sparse-Multi-head-Attention"]], "Sparse matrix class": [[12, "sparse-matrix-class"]], "Spatial Encoding": [[685, "spatial-encoding"]], "SpatialEncoder": [[450, "spatialencoder"]], "SpatialEncoder3d": [[451, "spatialencoder3d"]], "Spawning Trainer Processes": [[829, "Spawning-Trainer-Processes"], [871, "Spawning-Trainer-Processes"]], "Specification": [[697, "specification"]], "Speeding up with built-in functions": [[865, "Speeding-up-with-built-in-functions"]], "Split and Load Partitions": [[4, "split-and-load-partitions"]], "Split workloads": [[694, "split-workloads"]], "SquirrelDataset": [[185, "squirreldataset"]], "Step 1": [[844, "Step-1"]], "Step 1: Batching": [[858, "Step-1:-Batching"]], "Step 2": [[844, "Step-2"]], "Step 2: Define message passing functions": [[864, "Step-2:-Define-message-passing-functions"]], "Step 2: Tree-LSTM cell with message-passing APIs": [[858, "Step-2:-Tree-LSTM-cell-with-message-passing-APIs"]], "Step 3": [[844, "Step-3"]], "Step 3: Define traversal": [[858, "Step-3:-Define-traversal"]], "Step 3: Testing": [[864, "Step-3:-Testing"]], "Step 4": [[844, "Step-4"]], "Step 5": [[844, "Step-5"]], "Step 6": [[844, "Step-6"]], "Step 7": [[844, "Step-7"]], "Step 8": [[844, "Step-8"]], "Step.1 Graph Partitioning": [[697, "step-1-graph-partitioning"]], "Step.2 Data Dispatching": [[697, "step-2-data-dispatching"]], "Subgraph Extraction Ops": [[0, "subgraph-extraction-ops"]], "SubgraphSampler": [[7, "subgraphsampler"], [313, "subgraphsampler"]], "SubgraphX": [[431, "subgraphx"]], "Subset": [[196, "subset"]], "SumPooling": [[381, "sumpooling"], [442, "sumpooling"], [473, "sumpooling"]], "Supervised community detection task with the Cora dataset": [[854, "Supervised-community-detection-task-with-the-Cora-dataset"]], "Supported Data types": [[9, "supported-data-types"]], "Supporting Multiple Platforms": [[21, "supporting-multiple-platforms"]], "System requirements": [[817, "system-requirements"]], "TAGConv": [[375, "tagconv"], [423, "tagconv"]], "TUDataset": [[186, "tudataset"]], "TWIRLSConv": [[424, "twirlsconv"]], "TWIRLSUnfoldingAndAttention": [[425, "twirlsunfoldingandattention"]], "Task": [[314, "task"]], "Task and the dataset": [[865, "Task-and-the-dataset"]], "TemporalLayerNeighborSampler": [[315, "temporallayerneighborsampler"]], "TemporalNeighborSampler": [[316, "temporalneighborsampler"]], "Tensorflow backend": [[817, "tensorflow-backend"]], "TexasDataset": [[187, "texasdataset"]], "The second task, link prediction": [[853, "The-second-task,-link-prediction"]], "The task and the dataset": [[858, "The-task-and-the-dataset"]], "Tips for making chunked graph data": [[697, "tips-for-making-chunked-graph-data"]], "ToLevi": [[670, "tolevi"]], "ToSimple": [[671, "tosimple"]], "TolokersDataset": [[188, "tolokersdataset"]], "Top-level": [[689, "top-level"]], "TorchBasedFeature": [[317, "torchbasedfeature"]], "TorchBasedFeatureStore": [[318, "torchbasedfeaturestore"]], "Training": [[819, "Training"], [820, "Training"], [865, "Training"]], "Training Loop": [[714, "training-loop"], [719, "training-loop"], [730, "training-loop"], [829, "Training-Loop"], [840, "Training-Loop"], [871, "Training-Loop"]], "Training a GNN for Graph Classification": [[840, "Training-a-GNN-for-Graph-Classification"]], "Training and Evaluation": [[821, "Training-and-Evaluation"]], "Training and inference": [[854, "Training-and-inference"]], "Training loop": [[717, "training-loop"], [728, "training-loop"], [731, "training-loop"], [732, "training-loop"], [838, "Training-loop"], [839, "Training-loop"], [848, "Training-loop"], [849, "Training-loop"], [853, "Training-loop"]], "Training on CPUs": [[846, "training-on-cpus"]], "Training on GPU": [[836, "Training-on-GPU"]], "Training on Multiple GPUs": [[872, "training-on-multiple-gpus"]], "Training the GCN": [[818, "Training-the-GCN"], [836, "Training-the-GCN"]], "TransE": [[453, "transe"]], "TransR": [[454, "transr"]], "Transformer as a Graph Neural Network": [[865, "Transformer-as-a-Graph-Neural-Network"]], "Transforming graph": [[1, "transforming-graph"]], "Tree-LSTM in DGL": [[858, "Tree-LSTM-in-DGL"]], "TreeCycleDataset": [[189, "treecycledataset"]], "TreeGridDataset": [[190, "treegriddataset"]], "Tutorials: dgl.sparse": [[822, "tutorials-dgl-sparse"]], "TypedLinear": [[388, "typedlinear"]], "UVA and GPU support for PinSAGESampler/RandomWalkNeighborSampler": [[715, "uva-and-gpu-support-for-pinsagesampler-randomwalkneighborsampler"]], "Understand Graph Attention Network": [[855, "Understand-Graph-Attention-Network"]], "Uniform": [[228, "uniform"]], "UniformNegativeSampler": [[319, "uniformnegativesampler"]], "Unit tests": [[21, "unit-tests"]], "Update feature after reducing for output": [[725, "update-feature-after-reducing-for-output"]], "Update node embeddings via graph propagation": [[861, "Update-node-embeddings-via-graph-propagation"]], "User Guide": [[706, "user-guide"]], "User-defined Functions": [[20, "user-defined-functions"]], "Using CUDA UVA-based neighborhood sampling in DGL data loaders": [[715, "using-cuda-uva-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using GPU-based neighbor sampling with DGL functions": [[715, "using-gpu-based-neighbor-sampling-with-dgl-functions"]], "Using GPU-based neighborhood sampling in DGL data loaders": [[715, "using-gpu-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using NN Modules with Edge Weights": [[729, "using-nn-modules-with-edge-weights"]], "Using Node/edge features": [[1, "using-node-edge-features"]], "Utilities": [[0, "utilities"], [2, "utilities"], [7, "utilities"]], "Utility Class and Functions for Feature Prefetching": [[3, "utility-class-and-functions-for-feature-prefetching"]], "Utility Modules": [[15, "utility-modules"], [16, "utility-modules"]], "Utility Modules for Graph Transformer": [[16, "utility-modules-for-graph-transformer"]], "Visualization": [[865, "Visualization"]], "Visualize training progress": [[854, "Visualize-training-progress"]], "Visualizing and understanding attention learned": [[855, "Visualizing-and-understanding-attention-learned"]], "WN18Dataset": [[191, "wn18dataset"]], "WeightAndSum": [[443, "weightandsum"]], "WeightBasis": [[459, "weightbasis"]], "Weighted reduction across GPUs": [[829, "Weighted-reduction-across-GPUs"]], "Welcome to Deep Graph Library Tutorials and Documentation": [[816, "welcome-to-deep-graph-library-tutorials-and-documentation"]], "What is a line-graph?": [[854, "What-is-a-line-graph?"]], "What\u2019s next": [[840, "What\u2019s-next"]], "What\u2019s next?": [[836, "What\u2019s-next?"], [837, "What\u2019s-next?"], [838, "What\u2019s-next?"], [855, "What's-next?"]], "WikiCSDataset": [[192, "wikicsdataset"]], "Windows": [[817, "windows"]], "WisconsinDataset": [[193, "wisconsindataset"]], "Working with Multiple Types": [[705, "working-with-multiple-types"]], "Working with different backends": [[817, "working-with-different-backends"]], "Write your own GNN module": [[838, "Write-your-own-GNN-module"]], "Writing Neural Network Model": [[730, "writing-neural-network-model"]], "Writing modules that work on homogeneous graphs, bipartite graphs, and MFGs": [[718, "writing-modules-that-work-on-homogeneous-graphs-bipartite-graphs-and-mfgs"]], "Writing neural network model": [[732, "writing-neural-network-model"]], "YAML specification": [[833, "yaml-specification"]], "YelpDataset": [[194, "yelpdataset"]], "ZINCDataset": [[195, "zincdataset"]], "add_node_property_split": [[197, "add-node-property-split"]], "add_nodepred_split": [[198, "add-nodepred-split"]], "check_sha1": [[199, "check-sha1"]], "dataset_name": [[833, "dataset-name"]], "dgl": [[0, "module-dgl"]], "dgl.DGLGraph": [[1, "dgl-dglgraph"]], "dgl.DGLGraph.__getitem__": [[26, "dgl-dglgraph-getitem"]], "dgl.DGLGraph.add_edges": [[27, "dgl-dglgraph-add-edges"]], "dgl.DGLGraph.add_nodes": [[28, "dgl-dglgraph-add-nodes"]], "dgl.DGLGraph.add_self_loop": [[29, "dgl-dglgraph-add-self-loop"]], "dgl.DGLGraph.adj": [[30, "dgl-dglgraph-adj"]], "dgl.DGLGraph.adj_external": [[31, "dgl-dglgraph-adj-external"]], "dgl.DGLGraph.adj_tensors": [[32, "dgl-dglgraph-adj-tensors"]], "dgl.DGLGraph.adjacency_matrix": [[33, "dgl-dglgraph-adjacency-matrix"]], "dgl.DGLGraph.apply_edges": [[34, "dgl-dglgraph-apply-edges"]], "dgl.DGLGraph.apply_nodes": [[35, "dgl-dglgraph-apply-nodes"]], "dgl.DGLGraph.batch_num_edges": [[36, "dgl-dglgraph-batch-num-edges"]], "dgl.DGLGraph.batch_num_nodes": [[37, "dgl-dglgraph-batch-num-nodes"]], "dgl.DGLGraph.batch_size": [[38, "dgl-dglgraph-batch-size"]], "dgl.DGLGraph.canonical_etypes": [[39, "dgl-dglgraph-canonical-etypes"]], "dgl.DGLGraph.cpu": [[40, "dgl-dglgraph-cpu"]], "dgl.DGLGraph.create_formats_": [[41, "dgl-dglgraph-create-formats"]], "dgl.DGLGraph.device": [[42, "dgl-dglgraph-device"]], "dgl.DGLGraph.dstdata": [[43, "dgl-dglgraph-dstdata"]], "dgl.DGLGraph.dstnodes": [[44, "dgl-dglgraph-dstnodes"]], "dgl.DGLGraph.dsttypes": [[45, "dgl-dglgraph-dsttypes"]], "dgl.DGLGraph.edata": [[46, "dgl-dglgraph-edata"]], "dgl.DGLGraph.edge_attr_schemes": [[47, "dgl-dglgraph-edge-attr-schemes"]], "dgl.DGLGraph.edge_ids": [[48, "dgl-dglgraph-edge-ids"]], "dgl.DGLGraph.edge_subgraph": [[49, "dgl-dglgraph-edge-subgraph"]], "dgl.DGLGraph.edge_type_subgraph": [[50, "dgl-dglgraph-edge-type-subgraph"]], "dgl.DGLGraph.edges": [[51, "dgl-dglgraph-edges"]], "dgl.DGLGraph.etypes": [[52, "dgl-dglgraph-etypes"]], "dgl.DGLGraph.filter_edges": [[53, "dgl-dglgraph-filter-edges"]], "dgl.DGLGraph.filter_nodes": [[54, "dgl-dglgraph-filter-nodes"]], "dgl.DGLGraph.find_edges": [[55, "dgl-dglgraph-find-edges"]], "dgl.DGLGraph.formats": [[56, "dgl-dglgraph-formats"]], "dgl.DGLGraph.has_edges_between": [[57, "dgl-dglgraph-has-edges-between"]], "dgl.DGLGraph.has_nodes": [[58, "dgl-dglgraph-has-nodes"]], "dgl.DGLGraph.idtype": [[59, "dgl-dglgraph-idtype"]], "dgl.DGLGraph.in_degrees": [[60, "dgl-dglgraph-in-degrees"]], "dgl.DGLGraph.in_edges": [[61, "dgl-dglgraph-in-edges"]], "dgl.DGLGraph.inc": [[62, "dgl-dglgraph-inc"]], "dgl.DGLGraph.incidence_matrix": [[63, "dgl-dglgraph-incidence-matrix"]], "dgl.DGLGraph.int": [[64, "dgl-dglgraph-int"]], "dgl.DGLGraph.is_homogeneous": [[65, "dgl-dglgraph-is-homogeneous"]], "dgl.DGLGraph.is_multigraph": [[66, "dgl-dglgraph-is-multigraph"]], "dgl.DGLGraph.is_pinned": [[67, "dgl-dglgraph-is-pinned"]], "dgl.DGLGraph.is_unibipartite": [[68, "dgl-dglgraph-is-unibipartite"]], "dgl.DGLGraph.line_graph": [[69, "dgl-dglgraph-line-graph"]], "dgl.DGLGraph.local_scope": [[70, "dgl-dglgraph-local-scope"]], "dgl.DGLGraph.long": [[71, "dgl-dglgraph-long"]], "dgl.DGLGraph.metagraph": [[72, "dgl-dglgraph-metagraph"]], "dgl.DGLGraph.multi_update_all": [[73, "dgl-dglgraph-multi-update-all"]], "dgl.DGLGraph.ndata": [[74, "dgl-dglgraph-ndata"]], "dgl.DGLGraph.node_attr_schemes": [[75, "dgl-dglgraph-node-attr-schemes"]], "dgl.DGLGraph.node_type_subgraph": [[76, "dgl-dglgraph-node-type-subgraph"]], "dgl.DGLGraph.nodes": [[77, "dgl-dglgraph-nodes"]], "dgl.DGLGraph.ntypes": [[78, "dgl-dglgraph-ntypes"]], "dgl.DGLGraph.num_dst_nodes": [[79, "dgl-dglgraph-num-dst-nodes"]], "dgl.DGLGraph.num_edges": [[80, "dgl-dglgraph-num-edges"]], "dgl.DGLGraph.num_nodes": [[81, "dgl-dglgraph-num-nodes"]], "dgl.DGLGraph.num_src_nodes": [[82, "dgl-dglgraph-num-src-nodes"]], "dgl.DGLGraph.number_of_dst_nodes": [[83, "dgl-dglgraph-number-of-dst-nodes"]], "dgl.DGLGraph.number_of_edges": [[84, "dgl-dglgraph-number-of-edges"]], "dgl.DGLGraph.number_of_nodes": [[85, "dgl-dglgraph-number-of-nodes"]], "dgl.DGLGraph.number_of_src_nodes": [[86, "dgl-dglgraph-number-of-src-nodes"]], "dgl.DGLGraph.out_degrees": [[87, "dgl-dglgraph-out-degrees"]], "dgl.DGLGraph.out_edges": [[88, "dgl-dglgraph-out-edges"]], "dgl.DGLGraph.pin_memory_": [[89, "dgl-dglgraph-pin-memory"]], "dgl.DGLGraph.predecessors": [[90, "dgl-dglgraph-predecessors"]], "dgl.DGLGraph.prop_edges": [[91, "dgl-dglgraph-prop-edges"]], "dgl.DGLGraph.prop_nodes": [[92, "dgl-dglgraph-prop-nodes"]], "dgl.DGLGraph.pull": [[93, "dgl-dglgraph-pull"]], "dgl.DGLGraph.push": [[94, "dgl-dglgraph-push"]], "dgl.DGLGraph.remove_edges": [[95, "dgl-dglgraph-remove-edges"]], "dgl.DGLGraph.remove_nodes": [[96, "dgl-dglgraph-remove-nodes"]], "dgl.DGLGraph.remove_self_loop": [[97, "dgl-dglgraph-remove-self-loop"]], "dgl.DGLGraph.reorder_graph": [[98, "dgl-dglgraph-reorder-graph"]], "dgl.DGLGraph.reverse": [[99, "dgl-dglgraph-reverse"]], "dgl.DGLGraph.send_and_recv": [[100, "dgl-dglgraph-send-and-recv"]], "dgl.DGLGraph.set_batch_num_edges": [[101, "dgl-dglgraph-set-batch-num-edges"]], "dgl.DGLGraph.set_batch_num_nodes": [[102, "dgl-dglgraph-set-batch-num-nodes"]], "dgl.DGLGraph.srcdata": [[103, "dgl-dglgraph-srcdata"]], "dgl.DGLGraph.srcnodes": [[104, "dgl-dglgraph-srcnodes"]], "dgl.DGLGraph.srctypes": [[105, "dgl-dglgraph-srctypes"]], "dgl.DGLGraph.subgraph": [[106, "dgl-dglgraph-subgraph"]], "dgl.DGLGraph.successors": [[107, "dgl-dglgraph-successors"]], "dgl.DGLGraph.to": [[108, "dgl-dglgraph-to"]], "dgl.DGLGraph.to_canonical_etype": [[109, "dgl-dglgraph-to-canonical-etype"]], "dgl.DGLGraph.to_cugraph": [[110, "dgl-dglgraph-to-cugraph"]], "dgl.DGLGraph.to_simple": [[111, "dgl-dglgraph-to-simple"]], "dgl.DGLGraph.unpin_memory_": [[112, "dgl-dglgraph-unpin-memory"]], "dgl.DGLGraph.update_all": [[113, "dgl-dglgraph-update-all"]], "dgl.add_edges": [[114, "dgl-add-edges"]], "dgl.add_nodes": [[115, "dgl-add-nodes"]], "dgl.add_reverse_edges": [[116, "dgl-add-reverse-edges"]], "dgl.add_self_loop": [[117, "dgl-add-self-loop"]], "dgl.adj_product_graph": [[118, "dgl-adj-product-graph"]], "dgl.adj_sum_graph": [[119, "dgl-adj-sum-graph"]], "dgl.adjusted_homophily": [[120, "dgl-adjusted-homophily"]], "dgl.apply_each": [[121, "dgl-apply-each"]], "dgl.batch": [[122, "dgl-batch"]], "dgl.bfs_edges_generator": [[123, "dgl-bfs-edges-generator"]], "dgl.bfs_nodes_generator": [[124, "dgl-bfs-nodes-generator"]], "dgl.bipartite_from_networkx": [[125, "dgl-bipartite-from-networkx"]], "dgl.bipartite_from_scipy": [[126, "dgl-bipartite-from-scipy"]], "dgl.block_to_graph": [[127, "dgl-block-to-graph"]], "dgl.broadcast_edges": [[128, "dgl-broadcast-edges"]], "dgl.broadcast_nodes": [[129, "dgl-broadcast-nodes"]], "dgl.compact_graphs": [[130, "dgl-compact-graphs"]], "dgl.create_block": [[131, "dgl-create-block"]], "dgl.data": [[2, "module-dgl.data"]], "dgl.dataloading": [[3, "dgl-dataloading"]], "dgl.dataloading.BlockSampler": [[208, "dgl-dataloading-blocksampler"]], "dgl.dataloading.as_edge_prediction_sampler": [[220, "dgl-dataloading-as-edge-prediction-sampler"]], "dgl.dfs_edges_generator": [[229, "dgl-dfs-edges-generator"]], "dgl.dfs_labeled_edges_generator": [[230, "dgl-dfs-labeled-edges-generator"]], "dgl.distributed": [[4, "dgl-distributed"]], "dgl.distributed.dgl_partition_to_graphbolt": [[231, "dgl-distributed-dgl-partition-to-graphbolt"]], "dgl.distributed.edge_split": [[232, "dgl-distributed-edge-split"]], "dgl.distributed.find_edges": [[233, "dgl-distributed-find-edges"]], "dgl.distributed.in_subgraph": [[234, "dgl-distributed-in-subgraph"]], "dgl.distributed.initialize": [[235, "dgl-distributed-initialize"]], "dgl.distributed.load_partition": [[236, "dgl-distributed-load-partition"]], "dgl.distributed.load_partition_book": [[237, "dgl-distributed-load-partition-book"]], "dgl.distributed.load_partition_feats": [[238, "dgl-distributed-load-partition-feats"]], "dgl.distributed.node_split": [[239, "dgl-distributed-node-split"]], "dgl.distributed.partition_graph": [[240, "dgl-distributed-partition-graph"]], "dgl.distributed.sample_etype_neighbors": [[241, "dgl-distributed-sample-etype-neighbors"]], "dgl.distributed.sample_neighbors": [[242, "dgl-distributed-sample-neighbors"]], "dgl.double_radius_node_labeling": [[243, "dgl-double-radius-node-labeling"]], "dgl.edge_homophily": [[244, "dgl-edge-homophily"]], "dgl.edge_label_informativeness": [[245, "dgl-edge-label-informativeness"]], "dgl.edge_subgraph": [[246, "dgl-edge-subgraph"]], "dgl.edge_type_subgraph": [[247, "dgl-edge-type-subgraph"]], "dgl.from_cugraph": [[248, "dgl-from-cugraph"]], "dgl.from_networkx": [[249, "dgl-from-networkx"]], "dgl.from_scipy": [[250, "dgl-from-scipy"]], "dgl.function": [[5, "dgl-function"]], "dgl.function.copy_e": [[251, "dgl-function-copy-e"]], "dgl.function.copy_u": [[252, "dgl-function-copy-u"]], "dgl.function.e_add_u": [[253, "dgl-function-e-add-u"]], "dgl.function.e_add_v": [[254, "dgl-function-e-add-v"]], "dgl.function.e_div_u": [[255, "dgl-function-e-div-u"]], "dgl.function.e_div_v": [[256, "dgl-function-e-div-v"]], "dgl.function.e_dot_u": [[257, "dgl-function-e-dot-u"]], "dgl.function.e_dot_v": [[258, "dgl-function-e-dot-v"]], "dgl.function.e_mul_u": [[259, "dgl-function-e-mul-u"]], "dgl.function.e_mul_v": [[260, "dgl-function-e-mul-v"]], "dgl.function.e_sub_u": [[261, "dgl-function-e-sub-u"]], "dgl.function.e_sub_v": [[262, "dgl-function-e-sub-v"]], "dgl.function.max": [[263, "dgl-function-max"]], "dgl.function.mean": [[264, "dgl-function-mean"]], "dgl.function.min": [[265, "dgl-function-min"]], "dgl.function.sum": [[266, "dgl-function-sum"]], "dgl.function.u_add_e": [[267, "dgl-function-u-add-e"]], "dgl.function.u_add_v": [[268, "dgl-function-u-add-v"]], "dgl.function.u_div_e": [[269, "dgl-function-u-div-e"]], "dgl.function.u_div_v": [[270, "dgl-function-u-div-v"]], "dgl.function.u_dot_e": [[271, "dgl-function-u-dot-e"]], "dgl.function.u_dot_v": [[272, "dgl-function-u-dot-v"]], "dgl.function.u_mul_e": [[273, "dgl-function-u-mul-e"]], "dgl.function.u_mul_v": [[274, "dgl-function-u-mul-v"]], "dgl.function.u_sub_e": [[275, "dgl-function-u-sub-e"]], "dgl.function.u_sub_v": [[276, "dgl-function-u-sub-v"]], "dgl.function.v_add_e": [[277, "dgl-function-v-add-e"]], "dgl.function.v_add_u": [[278, "dgl-function-v-add-u"]], "dgl.function.v_div_e": [[279, "dgl-function-v-div-e"]], "dgl.function.v_div_u": [[280, "dgl-function-v-div-u"]], "dgl.function.v_dot_e": [[281, "dgl-function-v-dot-e"]], "dgl.function.v_dot_u": [[282, "dgl-function-v-dot-u"]], "dgl.function.v_mul_e": [[283, "dgl-function-v-mul-e"]], "dgl.function.v_mul_u": [[284, "dgl-function-v-mul-u"]], "dgl.function.v_sub_e": [[285, "dgl-function-v-sub-e"]], "dgl.function.v_sub_u": [[286, "dgl-function-v-sub-u"]], "dgl.geometry": [[6, "module-dgl.geometry"]], "dgl.graph": [[287, "dgl-graph"]], "dgl.graphbolt.add_reverse_edges": [[320, "dgl-graphbolt-add-reverse-edges"]], "dgl.graphbolt.compact_csc_format": [[321, "dgl-graphbolt-compact-csc-format"]], "dgl.graphbolt.etype_str_to_tuple": [[322, "dgl-graphbolt-etype-str-to-tuple"]], "dgl.graphbolt.etype_tuple_to_str": [[323, "dgl-graphbolt-etype-tuple-to-str"]], "dgl.graphbolt.exclude_seed_edges": [[324, "dgl-graphbolt-exclude-seed-edges"]], "dgl.graphbolt.expand_indptr": [[325, "dgl-graphbolt-expand-indptr"]], "dgl.graphbolt.from_dglgraph": [[326, "dgl-graphbolt-from-dglgraph"]], "dgl.graphbolt.fused_csc_sampling_graph": [[327, "dgl-graphbolt-fused-csc-sampling-graph"]], "dgl.graphbolt.index_select": [[328, "dgl-graphbolt-index-select"]], "dgl.graphbolt.isin": [[329, "dgl-graphbolt-isin"]], "dgl.graphbolt.load_from_shared_memory": [[330, "dgl-graphbolt-load-from-shared-memory"]], "dgl.graphbolt.seed": [[331, "dgl-graphbolt-seed"]], "dgl.graphbolt.unique_and_compact": [[332, "dgl-graphbolt-unique-and-compact"]], "dgl.graphbolt.unique_and_compact_csc_formats": [[333, "dgl-graphbolt-unique-and-compact-csc-formats"]], "dgl.heterograph": [[334, "dgl-heterograph"]], "dgl.in_subgraph": [[335, "dgl-in-subgraph"]], "dgl.is_libxsmm_enabled": [[336, "dgl-is-libxsmm-enabled"]], "dgl.khop_adj": [[337, "dgl-khop-adj"]], "dgl.khop_graph": [[338, "dgl-khop-graph"]], "dgl.khop_in_subgraph": [[339, "dgl-khop-in-subgraph"]], "dgl.khop_out_subgraph": [[340, "dgl-khop-out-subgraph"]], "dgl.knn_graph": [[341, "dgl-knn-graph"]], "dgl.lap_pe": [[342, "dgl-lap-pe"]], "dgl.laplacian_lambda_max": [[343, "dgl-laplacian-lambda-max"]], "dgl.line_graph": [[344, "dgl-line-graph"]], "dgl.linkx_homophily": [[345, "dgl-linkx-homophily"]], "dgl.load_graphs": [[346, "dgl-load-graphs"]], "dgl.max_edges": [[347, "dgl-max-edges"]], "dgl.max_nodes": [[348, "dgl-max-nodes"]], "dgl.mean_edges": [[349, "dgl-mean-edges"]], "dgl.mean_nodes": [[350, "dgl-mean-nodes"]], "dgl.merge": [[351, "dgl-merge"]], "dgl.metapath_reachable_graph": [[352, "dgl-metapath-reachable-graph"]], "dgl.metis_partition": [[353, "dgl-metis-partition"]], "dgl.metis_partition_assignment": [[354, "dgl-metis-partition-assignment"]], "dgl.multiprocessing": [[8, "dgl-multiprocessing"]], "dgl.multiprocessing.pytorch.call_once_and_share": [[355, "dgl-multiprocessing-pytorch-call-once-and-share"]], "dgl.multiprocessing.pytorch.shared_tensor": [[356, "dgl-multiprocessing-pytorch-shared-tensor"]], "dgl.nn (MXNet)": [[15, "dgl-nn-mxnet"]], "dgl.nn (PyTorch)": [[16, "dgl-nn-pytorch"]], "dgl.nn (TensorFlow)": [[17, "dgl-nn-tensorflow"]], "dgl.nn.functional": [[18, "module-dgl.nn.functional"]], "dgl.nn.functional.edge_softmax": [[357, "dgl-nn-functional-edge-softmax"]], "dgl.node_homophily": [[474, "dgl-node-homophily"]], "dgl.node_label_informativeness": [[475, "dgl-node-label-informativeness"]], "dgl.node_subgraph": [[476, "dgl-node-subgraph"]], "dgl.node_type_subgraph": [[477, "dgl-node-type-subgraph"]], "dgl.norm_by_dst": [[478, "dgl-norm-by-dst"]], "dgl.ops": [[9, "dgl-ops"]], "dgl.ops.copy_e_max": [[479, "dgl-ops-copy-e-max"]], "dgl.ops.copy_e_mean": [[480, "dgl-ops-copy-e-mean"]], "dgl.ops.copy_e_min": [[481, "dgl-ops-copy-e-min"]], "dgl.ops.copy_e_sum": [[482, "dgl-ops-copy-e-sum"]], "dgl.ops.copy_u": [[483, "dgl-ops-copy-u"]], "dgl.ops.copy_u_max": [[484, "dgl-ops-copy-u-max"]], "dgl.ops.copy_u_mean": [[485, "dgl-ops-copy-u-mean"]], "dgl.ops.copy_u_min": [[486, "dgl-ops-copy-u-min"]], "dgl.ops.copy_u_sum": [[487, "dgl-ops-copy-u-sum"]], "dgl.ops.copy_v": [[488, "dgl-ops-copy-v"]], "dgl.ops.e_add_u": [[489, "dgl-ops-e-add-u"]], "dgl.ops.e_add_v": [[490, "dgl-ops-e-add-v"]], "dgl.ops.e_div_u": [[491, "dgl-ops-e-div-u"]], "dgl.ops.e_div_v": [[492, "dgl-ops-e-div-v"]], "dgl.ops.e_dot_u": [[493, "dgl-ops-e-dot-u"]], "dgl.ops.e_dot_v": [[494, "dgl-ops-e-dot-v"]], "dgl.ops.e_mul_u": [[495, "dgl-ops-e-mul-u"]], "dgl.ops.e_mul_v": [[496, "dgl-ops-e-mul-v"]], "dgl.ops.e_sub_u": [[497, "dgl-ops-e-sub-u"]], "dgl.ops.e_sub_v": [[498, "dgl-ops-e-sub-v"]], "dgl.ops.gather_mm": [[499, "dgl-ops-gather-mm"]], "dgl.ops.gsddmm": [[500, "dgl-ops-gsddmm"]], "dgl.ops.gspmm": [[501, "dgl-ops-gspmm"]], "dgl.ops.segment_mm": [[502, "dgl-ops-segment-mm"]], "dgl.ops.segment_reduce": [[503, "dgl-ops-segment-reduce"]], "dgl.ops.u_add_e": [[504, "dgl-ops-u-add-e"]], "dgl.ops.u_add_e_max": [[505, "dgl-ops-u-add-e-max"]], "dgl.ops.u_add_e_mean": [[506, "dgl-ops-u-add-e-mean"]], "dgl.ops.u_add_e_min": [[507, "dgl-ops-u-add-e-min"]], "dgl.ops.u_add_e_sum": [[508, "dgl-ops-u-add-e-sum"]], "dgl.ops.u_add_v": [[509, "dgl-ops-u-add-v"]], "dgl.ops.u_div_e": [[510, "dgl-ops-u-div-e"]], "dgl.ops.u_div_e_max": [[511, "dgl-ops-u-div-e-max"]], "dgl.ops.u_div_e_mean": [[512, "dgl-ops-u-div-e-mean"]], "dgl.ops.u_div_e_min": [[513, "dgl-ops-u-div-e-min"]], "dgl.ops.u_div_e_sum": [[514, "dgl-ops-u-div-e-sum"]], "dgl.ops.u_div_v": [[515, "dgl-ops-u-div-v"]], "dgl.ops.u_dot_e": [[516, "dgl-ops-u-dot-e"]], "dgl.ops.u_dot_v": [[517, "dgl-ops-u-dot-v"]], "dgl.ops.u_mul_e": [[518, "dgl-ops-u-mul-e"]], "dgl.ops.u_mul_e_max": [[519, "dgl-ops-u-mul-e-max"]], "dgl.ops.u_mul_e_mean": [[520, "dgl-ops-u-mul-e-mean"]], "dgl.ops.u_mul_e_min": [[521, "dgl-ops-u-mul-e-min"]], "dgl.ops.u_mul_e_sum": [[522, "dgl-ops-u-mul-e-sum"]], "dgl.ops.u_mul_v": [[523, "dgl-ops-u-mul-v"]], "dgl.ops.u_sub_e": [[524, "dgl-ops-u-sub-e"]], "dgl.ops.u_sub_e_max": [[525, "dgl-ops-u-sub-e-max"]], "dgl.ops.u_sub_e_mean": [[526, "dgl-ops-u-sub-e-mean"]], "dgl.ops.u_sub_e_min": [[527, "dgl-ops-u-sub-e-min"]], "dgl.ops.u_sub_e_sum": [[528, "dgl-ops-u-sub-e-sum"]], "dgl.ops.u_sub_v": [[529, "dgl-ops-u-sub-v"]], "dgl.ops.v_add_e": [[530, "dgl-ops-v-add-e"]], "dgl.ops.v_add_u": [[531, "dgl-ops-v-add-u"]], "dgl.ops.v_div_e": [[532, "dgl-ops-v-div-e"]], "dgl.ops.v_div_u": [[533, "dgl-ops-v-div-u"]], "dgl.ops.v_dot_e": [[534, "dgl-ops-v-dot-e"]], "dgl.ops.v_dot_u": [[535, "dgl-ops-v-dot-u"]], "dgl.ops.v_mul_e": [[536, "dgl-ops-v-mul-e"]], "dgl.ops.v_mul_u": [[537, "dgl-ops-v-mul-u"]], "dgl.ops.v_sub_e": [[538, "dgl-ops-v-sub-e"]], "dgl.ops.v_sub_u": [[539, "dgl-ops-v-sub-u"]], "dgl.optim": [[10, "module-dgl.optim"]], "dgl.out_subgraph": [[540, "dgl-out-subgraph"]], "dgl.partition_graph_with_halo": [[541, "dgl-partition-graph-with-halo"]], "dgl.prop_edges": [[542, "dgl-prop-edges"]], "dgl.prop_edges_dfs": [[543, "dgl-prop-edges-dfs"]], "dgl.prop_nodes": [[544, "dgl-prop-nodes"]], "dgl.prop_nodes_bfs": [[545, "dgl-prop-nodes-bfs"]], "dgl.prop_nodes_topo": [[546, "dgl-prop-nodes-topo"]], "dgl.radius_graph": [[547, "dgl-radius-graph"]], "dgl.rand_bipartite": [[548, "dgl-rand-bipartite"]], "dgl.rand_graph": [[549, "dgl-rand-graph"]], "dgl.random_walk_pe": [[550, "dgl-random-walk-pe"]], "dgl.readout_edges": [[551, "dgl-readout-edges"]], "dgl.readout_nodes": [[552, "dgl-readout-nodes"]], "dgl.remove_edges": [[553, "dgl-remove-edges"]], "dgl.remove_nodes": [[554, "dgl-remove-nodes"]], "dgl.remove_self_loop": [[555, "dgl-remove-self-loop"]], "dgl.reorder_graph": [[556, "dgl-reorder-graph"]], "dgl.reverse": [[557, "dgl-reverse"]], "dgl.sampling": [[11, "module-dgl.sampling"]], "dgl.sampling.PinSAGESampler": [[558, "dgl-sampling-pinsagesampler"]], "dgl.sampling.global_uniform_negative_sampling": [[559, "dgl-sampling-global-uniform-negative-sampling"]], "dgl.sampling.node2vec_random_walk": [[560, "dgl-sampling-node2vec-random-walk"]], "dgl.sampling.pack_traces": [[561, "dgl-sampling-pack-traces"]], "dgl.sampling.random_walk": [[562, "dgl-sampling-random-walk"]], "dgl.sampling.sample_labors": [[563, "dgl-sampling-sample-labors"]], "dgl.sampling.sample_neighbors": [[564, "dgl-sampling-sample-neighbors"]], "dgl.sampling.sample_neighbors_biased": [[565, "dgl-sampling-sample-neighbors-biased"]], "dgl.sampling.select_topk": [[566, "dgl-sampling-select-topk"]], "dgl.save_graphs": [[567, "dgl-save-graphs"]], "dgl.seed": [[568, "dgl-seed"]], "dgl.segmented_knn_graph": [[569, "dgl-segmented-knn-graph"]], "dgl.shortest_dist": [[570, "dgl-shortest-dist"]], "dgl.slice_batch": [[571, "dgl-slice-batch"]], "dgl.softmax_edges": [[572, "dgl-softmax-edges"]], "dgl.softmax_nodes": [[573, "dgl-softmax-nodes"]], "dgl.sort_csc_by_tag": [[574, "dgl-sort-csc-by-tag"]], "dgl.sort_csr_by_tag": [[575, "dgl-sort-csr-by-tag"]], "dgl.sparse": [[12, "dgl-sparse"]], "dgl.sparse.SparseMatrix.T": [[576, "dgl-sparse-sparsematrix-t"]], "dgl.sparse.SparseMatrix.coalesce": [[577, "dgl-sparse-sparsematrix-coalesce"]], "dgl.sparse.SparseMatrix.col": [[578, "dgl-sparse-sparsematrix-col"]], "dgl.sparse.SparseMatrix.coo": [[579, "dgl-sparse-sparsematrix-coo"]], "dgl.sparse.SparseMatrix.cpu": [[580, "dgl-sparse-sparsematrix-cpu"]], "dgl.sparse.SparseMatrix.csc": [[581, "dgl-sparse-sparsematrix-csc"]], "dgl.sparse.SparseMatrix.csr": [[582, "dgl-sparse-sparsematrix-csr"]], "dgl.sparse.SparseMatrix.cuda": [[583, "dgl-sparse-sparsematrix-cuda"]], "dgl.sparse.SparseMatrix.device": [[584, "dgl-sparse-sparsematrix-device"]], "dgl.sparse.SparseMatrix.double": [[585, "dgl-sparse-sparsematrix-double"]], "dgl.sparse.SparseMatrix.dtype": [[586, "dgl-sparse-sparsematrix-dtype"]], "dgl.sparse.SparseMatrix.float": [[587, "dgl-sparse-sparsematrix-float"]], "dgl.sparse.SparseMatrix.has_duplicate": [[588, "dgl-sparse-sparsematrix-has-duplicate"]], "dgl.sparse.SparseMatrix.indices": [[589, "dgl-sparse-sparsematrix-indices"]], "dgl.sparse.SparseMatrix.int": [[590, "dgl-sparse-sparsematrix-int"]], "dgl.sparse.SparseMatrix.long": [[591, "dgl-sparse-sparsematrix-long"]], "dgl.sparse.SparseMatrix.neg": [[592, "dgl-sparse-sparsematrix-neg"]], "dgl.sparse.SparseMatrix.nnz": [[593, "dgl-sparse-sparsematrix-nnz"]], "dgl.sparse.SparseMatrix.reduce": [[594, "dgl-sparse-sparsematrix-reduce"]], "dgl.sparse.SparseMatrix.row": [[595, "dgl-sparse-sparsematrix-row"]], "dgl.sparse.SparseMatrix.shape": [[596, "dgl-sparse-sparsematrix-shape"]], "dgl.sparse.SparseMatrix.smax": [[597, "dgl-sparse-sparsematrix-smax"]], "dgl.sparse.SparseMatrix.smean": [[598, "dgl-sparse-sparsematrix-smean"]], "dgl.sparse.SparseMatrix.smin": [[599, "dgl-sparse-sparsematrix-smin"]], "dgl.sparse.SparseMatrix.softmax": [[600, "dgl-sparse-sparsematrix-softmax"]], "dgl.sparse.SparseMatrix.sum": [[601, "dgl-sparse-sparsematrix-sum"]], "dgl.sparse.SparseMatrix.t": [[602, "dgl-sparse-sparsematrix-t"]], "dgl.sparse.SparseMatrix.to": [[603, "dgl-sparse-sparsematrix-to"]], "dgl.sparse.SparseMatrix.to_dense": [[604, "dgl-sparse-sparsematrix-to-dense"]], "dgl.sparse.SparseMatrix.transpose": [[605, "dgl-sparse-sparsematrix-transpose"]], "dgl.sparse.SparseMatrix.val": [[606, "dgl-sparse-sparsematrix-val"]], "dgl.sparse.add": [[607, "dgl-sparse-add"]], "dgl.sparse.bsddmm": [[608, "dgl-sparse-bsddmm"]], "dgl.sparse.bspmm": [[609, "dgl-sparse-bspmm"]], "dgl.sparse.diag": [[610, "dgl-sparse-diag"]], "dgl.sparse.div": [[611, "dgl-sparse-div"]], "dgl.sparse.from_coo": [[612, "dgl-sparse-from-coo"]], "dgl.sparse.from_csc": [[613, "dgl-sparse-from-csc"]], "dgl.sparse.from_csr": [[614, "dgl-sparse-from-csr"]], "dgl.sparse.identity": [[615, "dgl-sparse-identity"]], "dgl.sparse.matmul": [[616, "dgl-sparse-matmul"]], "dgl.sparse.mul": [[617, "dgl-sparse-mul"]], "dgl.sparse.power": [[618, "dgl-sparse-power"]], "dgl.sparse.sddmm": [[619, "dgl-sparse-sddmm"]], "dgl.sparse.softmax": [[620, "dgl-sparse-softmax"]], "dgl.sparse.sp_add_v": [[621, "dgl-sparse-sp-add-v"]], "dgl.sparse.sp_broadcast_v": [[622, "dgl-sparse-sp-broadcast-v"]], "dgl.sparse.sp_div_v": [[623, "dgl-sparse-sp-div-v"]], "dgl.sparse.sp_mul_v": [[624, "dgl-sparse-sp-mul-v"]], "dgl.sparse.sp_sub_v": [[625, "dgl-sparse-sp-sub-v"]], "dgl.sparse.spmatrix": [[626, "dgl-sparse-spmatrix"]], "dgl.sparse.spmm": [[627, "dgl-sparse-spmm"]], "dgl.sparse.spspmm": [[628, "dgl-sparse-spspmm"]], "dgl.sparse.sub": [[629, "dgl-sparse-sub"]], "dgl.sparse.val_like": [[630, "dgl-sparse-val-like"]], "dgl.sum_edges": [[631, "dgl-sum-edges"]], "dgl.sum_nodes": [[632, "dgl-sum-nodes"]], "dgl.svd_pe": [[633, "dgl-svd-pe"]], "dgl.to_bidirected": [[634, "dgl-to-bidirected"]], "dgl.to_block": [[635, "dgl-to-block"]], "dgl.to_cugraph": [[636, "dgl-to-cugraph"]], "dgl.to_double": [[637, "dgl-to-double"]], "dgl.to_float": [[638, "dgl-to-float"]], "dgl.to_half": [[639, "dgl-to-half"]], "dgl.to_heterogeneous": [[640, "dgl-to-heterogeneous"]], "dgl.to_homogeneous": [[641, "dgl-to-homogeneous"]], "dgl.to_networkx": [[642, "dgl-to-networkx"]], "dgl.to_simple": [[643, "dgl-to-simple"]], "dgl.to_simple_graph": [[644, "dgl-to-simple-graph"]], "dgl.topk_edges": [[645, "dgl-topk-edges"]], "dgl.topk_nodes": [[646, "dgl-topk-nodes"]], "dgl.topological_nodes_generator": [[647, "dgl-topological-nodes-generator"]], "dgl.transforms": [[19, "module-dgl.transforms"]], "dgl.udf.EdgeBatch.batch_size": [[672, "dgl-udf-edgebatch-batch-size"]], "dgl.udf.EdgeBatch.data": [[673, "dgl-udf-edgebatch-data"]], "dgl.udf.EdgeBatch.dst": [[674, "dgl-udf-edgebatch-dst"]], "dgl.udf.EdgeBatch.edges": [[675, "dgl-udf-edgebatch-edges"]], "dgl.udf.EdgeBatch.src": [[676, "dgl-udf-edgebatch-src"]], "dgl.udf.NodeBatch.batch_size": [[677, "dgl-udf-nodebatch-batch-size"]], "dgl.udf.NodeBatch.data": [[678, "dgl-udf-nodebatch-data"]], "dgl.udf.NodeBatch.mailbox": [[679, "dgl-udf-nodebatch-mailbox"]], "dgl.udf.NodeBatch.nodes": [[680, "dgl-udf-nodebatch-nodes"]], "dgl.unbatch": [[681, "dgl-unbatch"]], "dgl.use_libxsmm": [[682, "dgl-use-libxsmm"]], "download": [[200, "download"]], "edges.csv": [[701, "id2"], [745, "id6"], [786, "id6"]], "extract_archive": [[201, "extract-archive"]], "feature_data": [[833, "feature-data"]], "get_download_dir": [[202, "get-download-dir"]], "graph": [[833, "graph"]], "load_info": [[203, "load-info"]], "load_labels": [[204, "load-labels"]], "macOS": [[817, "macos"]], "mask_nodes_by_property": [[205, "mask-nodes-by-property"]], "nodes.csv": [[701, "id1"], [745, "id5"], [786, "id5"]], "save_info": [[206, "save-info"]], "set_dst_lazy_features": [[222, "set-dst-lazy-features"]], "set_edge_lazy_features": [[223, "set-edge-lazy-features"]], "set_node_lazy_features": [[224, "set-node-lazy-features"]], "set_src_lazy_features": [[225, "set-src-lazy-features"]], "split_dataset": [[207, "split-dataset"]], "tasks": [[833, "tasks"]], "v0.4.3 Benchmarks": [[824, "v0-4-3-benchmarks"]], "v0.5 Benchmarks": [[824, "v0-5-benchmarks"]], "v0.6 Benchmarks": [[824, "v0-6-benchmarks"]], "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": [[768, "id3"]], "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": [[745, "id2"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": [[745, "id3"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": [[749, "id4"]], "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": [[749, "id3"]], "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": [[769, "id2"]], "\u5206\u5272\u6570\u636e\u96c6": [[740, "id8"]], "\u5206\u5e03\u5f0f\u56fe": [[740, "id1"]], "\u5206\u5e03\u5f0f\u5d4c\u5165": [[740, "id6"]], "\u5206\u5e03\u5f0f\u5f20\u91cf": [[740, "id5"]], "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": [[740, "id2"]], "\u5206\u5e03\u5f0f\u91c7\u6837": [[740, "id7"]], "\u521b\u5efaDistGraph": [[740, "distgraph"]], "\u521b\u5efa\u5f02\u6784\u56fe": [[749, "id2"]], "\u56fe\u8bfb\u51fa": [[770, "id4"]], "\u5728NN\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": [[769, "nn"]], "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": [[768, "id6"]], "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": [[737, "id2"]], "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": [[737, "id3"]], "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": [[737, "id4"]], "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": [[757, "id4"]], "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[758, "id2"], [762, "id2"]], "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": [[757, "guide-cn-minibatch-customizing-neighborhood-sampler-impl"]], "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": [[759, "id2"]], "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe\u3001\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": [[761, "id2"]], "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": [[749, "id6"]], "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": [[758, "id3"]], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": [[762, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[770, "id10"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": [[761, "id1"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": [[758, "id6"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[772, "guide-cn-training-rgcn-node-classification"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[768, "guide-cn-training-edge-classification-heterogeneous-graph"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": [[757, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[771, "id4"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": [[760, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": [[757, "id7"]], "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": [[767, "guide-cn-training-heterogeneous-graph-example"]], "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": [[770, "id6"]], "\u6279\u6b21\u7684\u56fe": [[770, "id3"]], "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": [[757, "id3"]], "\u6570\u636e\u52a0\u8f7d": [[770, "id9"]], "\u672c\u7ae0\u8def\u7ebf\u56fe": [[733, "id2"], [743, "id2"], [751, "id3"], [756, "id3"], [763, "id1"], [767, "id4"]], "\u6982\u8ff0": [[767, "id2"], [768, "id2"], [770, "id2"], [771, "id2"], [772, "id2"]], "\u6a21\u578b\u5b9a\u4e49": [[770, "id7"]], "\u6a21\u578b\u7684\u8bad\u7ec3": [[758, "id5"], [760, "id4"], [762, "id4"], [768, "id4"], [770, "id8"], [771, "id3"], [772, "id4"]], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": [[765, "id2"]], "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[751, "id2"]], "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": [[757, "id2"]], "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011": [[750, "id1"]], "\u7b2c1\u7ae0\uff1a\u56fe": [[743, "guide-cn-graph"]], "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[751, "guide-cn-message-passing"]], "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757": [[763, "gnn"]], "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [[733, "guide-cn-data-pipeline"]], "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [[767, "guide-cn-training"]], "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3": [[756, "guide-cn-minibatch"]], "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3": [[739, "guide-cn-distributed"]], "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[760, "id2"]], "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [[770, "id5"], [772, "id3"]], "\u805a\u5408\u540e\uff0c\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": [[765, "id3"]], "\u8bbf\u95ee\u56fe\u7ed3\u6784": [[740, "id3"]], "\u8bbf\u95ee\u8282\u70b9/\u8fb9\u6570\u636e": [[740, "id4"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [[760, "id3"], [762, "guide-cn-minibatch-node-classification-model"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": [[758, "id4"]], "\u8d1f\u8f7d\u5747\u8861": [[741, "id2"]], "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": [[765, "id1"]], "\u8fb9\u7c7b\u578b\u5b50\u56fe": [[749, "id5"]], "\u9017\u53f7\u5206\u9694\u503c\uff08CSV\uff09": [[745, "csv"], [749, "csv"]], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": [[756, "id2"]], "\uac1c\uc694": [[811, "id2"], [812, "id1"], [813, "id2"], [814, "id2"], [815, "id1"]], "\uadf8\ub798\ud504 \uad6c\uc870 \uc811\uadfc": [[780, "id1"]], "\uadf8\ub798\ud504 \ub9ac\ub4dc\uc544\uc6c3(readout)": [[813, "readout"]], "\uadf8\ub798\ud504 \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[777, "id2"]], "\uadf8\ub798\ud504 \uccb4\ud06c\uc640 \uadf8\ub798\ud504 \ud0c0\uc785 \uba85\uc138\ud654(graph type specification)": [[809, "graph-type-specification"]], "\uadf8\ub798\ud504\ub4e4\uc758 \ubc30\uce58(batch)": [[813, "batch"]], "\ub178\ub4dc \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[777, "id3"]], "\ub178\ub4dc \ubd84\ub958 \ubaa8\ub378\uacfc \uad6c\ud604\uc0c1\uc758 \ucc28\uc774\uc810": [[812, "id2"]], "\ub178\ub4dc/\uc5d0\uc9c0 \ub370\uc774\ud130 \uc811\uadfc": [[780, "id2"]], "\ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc791\uc131\ud558\uae30": [[813, "id3"], [815, "id2"]], "\ub2e4\uc591\ud55c \ud0c0\uc785\uc744 \ub2e4\ub8e8\uae30": [[790, "id2"]], "\ub370\uc774\ud130 \ub85c\ub529": [[813, "id7"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[786, "id3"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uc774\uc885 \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[790, "id3"]], "\ub85c\ub4dc \ubc38\ub7f0\uc2f1": [[782, "id2"]], "\ub85c\ub4dc\ub9f5": [[773, "id2"], [784, "id2"], [792, "id1"], [798, "id1"], [807, "id1"], [811, "id3"]], "\ub9c1\ud06c \uc608\uce21 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[777, "id4"]], "\uba40\ud2f0-\ub808\uc774\uc5b4 \ubbf8\ub2c8\ubc30\uce58 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc744 \uc704\ud55c \uc774\ubd84 \uad6c\uc870(Bipartite Structure)": [[799, "bipartite-structure"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec \uc758\uc874\uc131 \ucc3e\uae30": [[799, "id3"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec\uacfc \ucd95\uc57d": [[809, "id1"]], "\uba54\uc9c0\uc2dc \uc804\ub2ec \ud328\ub7ec\ub2e4\uc784(Message Passing Paradigm)": [[792, "message-passing-paradigm"]], "\ubaa8\ub378 \uc815\uc758\ud558\uae30": [[813, "id5"]], "\ubaa8\ub378\uc744 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc5d0 \ub9de\uac8c \ub9cc\ub4e4\uae30": [[800, "id3"], [803, "id1"], [805, "guide-ko-minibatch-node-classification-model"]], "\ubc30\uce58 \uadf8\ub798\ud504\uc5d0 \uc5f0\uc0b0\ud558\uae30": [[813, "id4"]], "\ubd84\uc0b0 DistEmbedding": [[780, "distembedding"]], "\ubd84\uc0b0 \ubaa8\ub4dc vs. \ub2e8\ub3c5(standalone) \ubaa8\ub4dc": [[780, "vs-standalone"]], "\ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[780, "id3"]], "\ubd84\uc0b0 \ud150\uc11c(Distributed Tensor)": [[780, "distributed-tensor"]], "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]": [[791, "id1"]], "\uc5d0\uc9c0 \ud0c0\uc785 \uc11c\ube0c\uadf8\ub798\ud504": [[790, "id4"]], "\uc624\ud504\ub77c\uc778 \ucd94\ub860 \uad6c\ud604\ud558\uae30": [[802, "id2"]], "\uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud574\uc11c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[786, "id2"]], "\uc6cc\ud06c\ub85c\ub4dc \ub098\ub204\uae30(Split workloads)": [[780, "split-workloads"]], "\uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[800, "id1"], [805, "id1"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc9c1\uc811 \ud574\ubcf4\uae30": [[799, "id2"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1(Neighborhood Sampling) \ubc29\ubc95 \uac1c\uc694": [[798, "neighborhood-sampling"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc704\ud574\uc11c \uc6d0\ubcf8 \uadf8\ub798\ud504\uc5d0\uc11c \ubbf8\ub2c8 \ubc30\uce58\uc758 \uc5d0\uc9c0\ub4e4 \uc81c\uac70\ud558\uae30": [[800, "id2"]], "\uc774\uc885 \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[790, "id1"]], "\uc774\uc885 \uadf8\ub798\ud504\ub97c \ub3d9\uc885 \uadf8\ub798\ud504\ub85c \ubcc0\ud658\ud558\uae30": [[790, "id5"]], "\ucd9c\ub825\uac12\uc744 \uc704\ud55c \ucd95\uc57d \ud6c4 \ud53c\uccd0 \uc5c5\ub370\uc774\ud2b8": [[809, "id2"]], "\ucee4\uc2a4\ud140 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \uad6c\ud604\ud558\uae30": [[799, "guide-ko-minibatch-customizing-neighborhood-sampler-impl"]], "\ud559\uc2b5 \ub8f9": [[800, "id4"], [803, "id2"], [805, "id3"], [813, "id6"], [814, "id3"]], "\ud559\uc2b5 \ub8f9(loop)": [[812, "loop"], [815, "loop"]], "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt": [[827, "stochastic-training-of-gnns-with-graphbolt"]], "\ud83c\udd95 Tutorial: Graph Transformer": [[684, "tutorial-graph-transformer"]], "\ud83c\udd95 dgl.graphbolt": [[7, "dgl-graphbolt"]]}, "docnames": ["api/python/dgl", "api/python/dgl.DGLGraph", "api/python/dgl.data", "api/python/dgl.dataloading", "api/python/dgl.distributed", "api/python/dgl.function", "api/python/dgl.geometry", "api/python/dgl.graphbolt", "api/python/dgl.multiprocessing", "api/python/dgl.ops", "api/python/dgl.optim", "api/python/dgl.sampling", "api/python/dgl.sparse_v0", "api/python/index", "api/python/knn_benchmark", "api/python/nn-mxnet", "api/python/nn-pytorch", "api/python/nn-tensorflow", "api/python/nn.functional", "api/python/transforms", "api/python/udf", "contribute", "developer/ffi", "env_var", "faq", "features/dataset", "generated/dgl.DGLGraph.__getitem__", "generated/dgl.DGLGraph.add_edges", "generated/dgl.DGLGraph.add_nodes", "generated/dgl.DGLGraph.add_self_loop", "generated/dgl.DGLGraph.adj", "generated/dgl.DGLGraph.adj_external", "generated/dgl.DGLGraph.adj_tensors", "generated/dgl.DGLGraph.adjacency_matrix", "generated/dgl.DGLGraph.apply_edges", "generated/dgl.DGLGraph.apply_nodes", "generated/dgl.DGLGraph.batch_num_edges", "generated/dgl.DGLGraph.batch_num_nodes", "generated/dgl.DGLGraph.batch_size", "generated/dgl.DGLGraph.canonical_etypes", "generated/dgl.DGLGraph.cpu", "generated/dgl.DGLGraph.create_formats_", "generated/dgl.DGLGraph.device", "generated/dgl.DGLGraph.dstdata", "generated/dgl.DGLGraph.dstnodes", "generated/dgl.DGLGraph.dsttypes", "generated/dgl.DGLGraph.edata", "generated/dgl.DGLGraph.edge_attr_schemes", "generated/dgl.DGLGraph.edge_ids", "generated/dgl.DGLGraph.edge_subgraph", "generated/dgl.DGLGraph.edge_type_subgraph", "generated/dgl.DGLGraph.edges", "generated/dgl.DGLGraph.etypes", "generated/dgl.DGLGraph.filter_edges", "generated/dgl.DGLGraph.filter_nodes", "generated/dgl.DGLGraph.find_edges", "generated/dgl.DGLGraph.formats", "generated/dgl.DGLGraph.has_edges_between", "generated/dgl.DGLGraph.has_nodes", "generated/dgl.DGLGraph.idtype", "generated/dgl.DGLGraph.in_degrees", "generated/dgl.DGLGraph.in_edges", "generated/dgl.DGLGraph.inc", "generated/dgl.DGLGraph.incidence_matrix", "generated/dgl.DGLGraph.int", "generated/dgl.DGLGraph.is_homogeneous", "generated/dgl.DGLGraph.is_multigraph", "generated/dgl.DGLGraph.is_pinned", "generated/dgl.DGLGraph.is_unibipartite", "generated/dgl.DGLGraph.line_graph", "generated/dgl.DGLGraph.local_scope", "generated/dgl.DGLGraph.long", "generated/dgl.DGLGraph.metagraph", "generated/dgl.DGLGraph.multi_update_all", "generated/dgl.DGLGraph.ndata", "generated/dgl.DGLGraph.node_attr_schemes", "generated/dgl.DGLGraph.node_type_subgraph", "generated/dgl.DGLGraph.nodes", "generated/dgl.DGLGraph.ntypes", "generated/dgl.DGLGraph.num_dst_nodes", "generated/dgl.DGLGraph.num_edges", "generated/dgl.DGLGraph.num_nodes", "generated/dgl.DGLGraph.num_src_nodes", "generated/dgl.DGLGraph.number_of_dst_nodes", "generated/dgl.DGLGraph.number_of_edges", "generated/dgl.DGLGraph.number_of_nodes", "generated/dgl.DGLGraph.number_of_src_nodes", "generated/dgl.DGLGraph.out_degrees", "generated/dgl.DGLGraph.out_edges", "generated/dgl.DGLGraph.pin_memory_", "generated/dgl.DGLGraph.predecessors", "generated/dgl.DGLGraph.prop_edges", "generated/dgl.DGLGraph.prop_nodes", "generated/dgl.DGLGraph.pull", "generated/dgl.DGLGraph.push", "generated/dgl.DGLGraph.remove_edges", "generated/dgl.DGLGraph.remove_nodes", "generated/dgl.DGLGraph.remove_self_loop", "generated/dgl.DGLGraph.reorder_graph", "generated/dgl.DGLGraph.reverse", "generated/dgl.DGLGraph.send_and_recv", "generated/dgl.DGLGraph.set_batch_num_edges", "generated/dgl.DGLGraph.set_batch_num_nodes", "generated/dgl.DGLGraph.srcdata", "generated/dgl.DGLGraph.srcnodes", "generated/dgl.DGLGraph.srctypes", "generated/dgl.DGLGraph.subgraph", "generated/dgl.DGLGraph.successors", "generated/dgl.DGLGraph.to", "generated/dgl.DGLGraph.to_canonical_etype", "generated/dgl.DGLGraph.to_cugraph", "generated/dgl.DGLGraph.to_simple", "generated/dgl.DGLGraph.unpin_memory_", "generated/dgl.DGLGraph.update_all", "generated/dgl.add_edges", "generated/dgl.add_nodes", "generated/dgl.add_reverse_edges", "generated/dgl.add_self_loop", "generated/dgl.adj_product_graph", "generated/dgl.adj_sum_graph", "generated/dgl.adjusted_homophily", "generated/dgl.apply_each", "generated/dgl.batch", "generated/dgl.bfs_edges_generator", "generated/dgl.bfs_nodes_generator", "generated/dgl.bipartite_from_networkx", "generated/dgl.bipartite_from_scipy", "generated/dgl.block_to_graph", "generated/dgl.broadcast_edges", "generated/dgl.broadcast_nodes", "generated/dgl.compact_graphs", "generated/dgl.create_block", "generated/dgl.data.AIFBDataset", "generated/dgl.data.AMDataset", "generated/dgl.data.ActorDataset", "generated/dgl.data.AmazonCoBuyComputerDataset", "generated/dgl.data.AmazonCoBuyPhotoDataset", "generated/dgl.data.AmazonRatingsDataset", "generated/dgl.data.AsGraphPredDataset", "generated/dgl.data.AsLinkPredDataset", "generated/dgl.data.AsNodePredDataset", "generated/dgl.data.BA2MotifDataset", "generated/dgl.data.BACommunityDataset", "generated/dgl.data.BAShapeDataset", "generated/dgl.data.BGSDataset", "generated/dgl.data.BitcoinOTCDataset", "generated/dgl.data.CIFAR10SuperPixelDataset", "generated/dgl.data.CLUSTERDataset", "generated/dgl.data.CSVDataset", "generated/dgl.data.ChameleonDataset", "generated/dgl.data.CiteseerGraphDataset", "generated/dgl.data.CoauthorCSDataset", "generated/dgl.data.CoauthorPhysicsDataset", "generated/dgl.data.CoraFullDataset", "generated/dgl.data.CoraGraphDataset", "generated/dgl.data.CornellDataset", "generated/dgl.data.DGLDataset", "generated/dgl.data.FB15k237Dataset", "generated/dgl.data.FB15kDataset", "generated/dgl.data.FakeNewsDataset", "generated/dgl.data.FlickrDataset", "generated/dgl.data.FraudAmazonDataset", "generated/dgl.data.FraudDataset", "generated/dgl.data.FraudYelpDataset", "generated/dgl.data.GDELTDataset", "generated/dgl.data.GINDataset", "generated/dgl.data.ICEWS18Dataset", "generated/dgl.data.KarateClubDataset", "generated/dgl.data.LegacyTUDataset", "generated/dgl.data.MNISTSuperPixelDataset", "generated/dgl.data.MUTAGDataset", "generated/dgl.data.MinesweeperDataset", "generated/dgl.data.MiniGCDataset", "generated/dgl.data.MovieLensDataset", "generated/dgl.data.PATTERNDataset", "generated/dgl.data.PPIDataset", "generated/dgl.data.PubmedGraphDataset", "generated/dgl.data.QM7bDataset", "generated/dgl.data.QM9Dataset", "generated/dgl.data.QM9EdgeDataset", "generated/dgl.data.QuestionsDataset", "generated/dgl.data.RedditDataset", "generated/dgl.data.RomanEmpireDataset", "generated/dgl.data.SBMMixtureDataset", "generated/dgl.data.SSTDataset", "generated/dgl.data.SquirrelDataset", "generated/dgl.data.TUDataset", "generated/dgl.data.TexasDataset", "generated/dgl.data.TolokersDataset", "generated/dgl.data.TreeCycleDataset", "generated/dgl.data.TreeGridDataset", "generated/dgl.data.WN18Dataset", "generated/dgl.data.WikiCSDataset", "generated/dgl.data.WisconsinDataset", "generated/dgl.data.YelpDataset", "generated/dgl.data.ZINCDataset", "generated/dgl.data.utils.Subset", "generated/dgl.data.utils.add_node_property_split", "generated/dgl.data.utils.add_nodepred_split", "generated/dgl.data.utils.check_sha1", "generated/dgl.data.utils.download", "generated/dgl.data.utils.extract_archive", "generated/dgl.data.utils.get_download_dir", "generated/dgl.data.utils.load_info", "generated/dgl.data.utils.load_labels", "generated/dgl.data.utils.mask_nodes_by_property", "generated/dgl.data.utils.save_info", "generated/dgl.data.utils.split_dataset", "generated/dgl.dataloading.BlockSampler", "generated/dgl.dataloading.ClusterGCNSampler", "generated/dgl.dataloading.DataLoader", "generated/dgl.dataloading.DistEdgeDataLoader", "generated/dgl.dataloading.DistNodeDataLoader", "generated/dgl.dataloading.GraphDataLoader", "generated/dgl.dataloading.LaborSampler", "generated/dgl.dataloading.MultiLayerFullNeighborSampler", "generated/dgl.dataloading.NeighborSampler", "generated/dgl.dataloading.SAINTSampler", "generated/dgl.dataloading.Sampler", "generated/dgl.dataloading.ShaDowKHopSampler", "generated/dgl.dataloading.as_edge_prediction_sampler", "generated/dgl.dataloading.base.LazyFeature", "generated/dgl.dataloading.base.set_dst_lazy_features", "generated/dgl.dataloading.base.set_edge_lazy_features", "generated/dgl.dataloading.base.set_node_lazy_features", "generated/dgl.dataloading.base.set_src_lazy_features", "generated/dgl.dataloading.negative_sampler.GlobalUniform", "generated/dgl.dataloading.negative_sampler.PerSourceUniform", "generated/dgl.dataloading.negative_sampler.Uniform", "generated/dgl.dfs_edges_generator", "generated/dgl.dfs_labeled_edges_generator", "generated/dgl.distributed.dgl_partition_to_graphbolt", "generated/dgl.distributed.edge_split", "generated/dgl.distributed.find_edges", "generated/dgl.distributed.in_subgraph", "generated/dgl.distributed.initialize", "generated/dgl.distributed.load_partition", "generated/dgl.distributed.load_partition_book", "generated/dgl.distributed.load_partition_feats", "generated/dgl.distributed.node_split", "generated/dgl.distributed.partition_graph", "generated/dgl.distributed.sample_etype_neighbors", "generated/dgl.distributed.sample_neighbors", "generated/dgl.double_radius_node_labeling", "generated/dgl.edge_homophily", "generated/dgl.edge_label_informativeness", "generated/dgl.edge_subgraph", "generated/dgl.edge_type_subgraph", "generated/dgl.from_cugraph", "generated/dgl.from_networkx", "generated/dgl.from_scipy", "generated/dgl.function.copy_e", "generated/dgl.function.copy_u", "generated/dgl.function.e_add_u", "generated/dgl.function.e_add_v", "generated/dgl.function.e_div_u", "generated/dgl.function.e_div_v", "generated/dgl.function.e_dot_u", "generated/dgl.function.e_dot_v", "generated/dgl.function.e_mul_u", "generated/dgl.function.e_mul_v", "generated/dgl.function.e_sub_u", "generated/dgl.function.e_sub_v", "generated/dgl.function.max", "generated/dgl.function.mean", "generated/dgl.function.min", "generated/dgl.function.sum", "generated/dgl.function.u_add_e", "generated/dgl.function.u_add_v", "generated/dgl.function.u_div_e", "generated/dgl.function.u_div_v", "generated/dgl.function.u_dot_e", "generated/dgl.function.u_dot_v", "generated/dgl.function.u_mul_e", "generated/dgl.function.u_mul_v", "generated/dgl.function.u_sub_e", "generated/dgl.function.u_sub_v", "generated/dgl.function.v_add_e", "generated/dgl.function.v_add_u", "generated/dgl.function.v_div_e", "generated/dgl.function.v_div_u", "generated/dgl.function.v_dot_e", "generated/dgl.function.v_dot_u", "generated/dgl.function.v_mul_e", "generated/dgl.function.v_mul_u", "generated/dgl.function.v_sub_e", "generated/dgl.function.v_sub_u", "generated/dgl.graph", "generated/dgl.graphbolt.BasicFeatureStore", "generated/dgl.graphbolt.BuiltinDataset", "generated/dgl.graphbolt.CopyTo", "generated/dgl.graphbolt.DataLoader", "generated/dgl.graphbolt.Dataset", "generated/dgl.graphbolt.DistributedItemSampler", "generated/dgl.graphbolt.Feature", "generated/dgl.graphbolt.FeatureFetcher", "generated/dgl.graphbolt.FeatureStore", "generated/dgl.graphbolt.FusedCSCSamplingGraph", "generated/dgl.graphbolt.GPUCachedFeature", "generated/dgl.graphbolt.HeteroItemSet", "generated/dgl.graphbolt.InSubgraphSampler", "generated/dgl.graphbolt.ItemSampler", "generated/dgl.graphbolt.ItemSet", "generated/dgl.graphbolt.LayerNeighborSampler", "generated/dgl.graphbolt.LegacyDataset", "generated/dgl.graphbolt.MiniBatch", "generated/dgl.graphbolt.MiniBatchTransformer", "generated/dgl.graphbolt.NegativeSampler", "generated/dgl.graphbolt.NeighborSampler", "generated/dgl.graphbolt.OnDiskDataset", "generated/dgl.graphbolt.SampledSubgraph", "generated/dgl.graphbolt.SampledSubgraphImpl", "generated/dgl.graphbolt.SamplingGraph", "generated/dgl.graphbolt.SubgraphSampler", "generated/dgl.graphbolt.Task", "generated/dgl.graphbolt.TemporalLayerNeighborSampler", "generated/dgl.graphbolt.TemporalNeighborSampler", "generated/dgl.graphbolt.TorchBasedFeature", "generated/dgl.graphbolt.TorchBasedFeatureStore", "generated/dgl.graphbolt.UniformNegativeSampler", "generated/dgl.graphbolt.add_reverse_edges", "generated/dgl.graphbolt.compact_csc_format", "generated/dgl.graphbolt.etype_str_to_tuple", "generated/dgl.graphbolt.etype_tuple_to_str", "generated/dgl.graphbolt.exclude_seed_edges", "generated/dgl.graphbolt.expand_indptr", "generated/dgl.graphbolt.from_dglgraph", "generated/dgl.graphbolt.fused_csc_sampling_graph", "generated/dgl.graphbolt.index_select", "generated/dgl.graphbolt.isin", "generated/dgl.graphbolt.load_from_shared_memory", "generated/dgl.graphbolt.seed", "generated/dgl.graphbolt.unique_and_compact", "generated/dgl.graphbolt.unique_and_compact_csc_formats", "generated/dgl.heterograph", "generated/dgl.in_subgraph", "generated/dgl.is_libxsmm_enabled", "generated/dgl.khop_adj", "generated/dgl.khop_graph", "generated/dgl.khop_in_subgraph", "generated/dgl.khop_out_subgraph", "generated/dgl.knn_graph", "generated/dgl.lap_pe", "generated/dgl.laplacian_lambda_max", "generated/dgl.line_graph", "generated/dgl.linkx_homophily", "generated/dgl.load_graphs", "generated/dgl.max_edges", "generated/dgl.max_nodes", "generated/dgl.mean_edges", "generated/dgl.mean_nodes", "generated/dgl.merge", "generated/dgl.metapath_reachable_graph", "generated/dgl.metis_partition", "generated/dgl.metis_partition_assignment", "generated/dgl.multiprocessing.pytorch.call_once_and_share", "generated/dgl.multiprocessing.pytorch.shared_tensor", "generated/dgl.nn.functional.edge_softmax", "generated/dgl.nn.mxnet.HeteroGraphConv", "generated/dgl.nn.mxnet.conv.AGNNConv", "generated/dgl.nn.mxnet.conv.APPNPConv", "generated/dgl.nn.mxnet.conv.ChebConv", "generated/dgl.nn.mxnet.conv.DenseChebConv", "generated/dgl.nn.mxnet.conv.DenseGraphConv", "generated/dgl.nn.mxnet.conv.DenseSAGEConv", "generated/dgl.nn.mxnet.conv.EdgeConv", "generated/dgl.nn.mxnet.conv.GATConv", "generated/dgl.nn.mxnet.conv.GINConv", "generated/dgl.nn.mxnet.conv.GMMConv", "generated/dgl.nn.mxnet.conv.GatedGraphConv", "generated/dgl.nn.mxnet.conv.GraphConv", "generated/dgl.nn.mxnet.conv.NNConv", "generated/dgl.nn.mxnet.conv.RelGraphConv", "generated/dgl.nn.mxnet.conv.SAGEConv", "generated/dgl.nn.mxnet.conv.SGConv", "generated/dgl.nn.mxnet.conv.TAGConv", "generated/dgl.nn.mxnet.glob.AvgPooling", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling", "generated/dgl.nn.mxnet.glob.MaxPooling", "generated/dgl.nn.mxnet.glob.Set2Set", "generated/dgl.nn.mxnet.glob.SortPooling", "generated/dgl.nn.mxnet.glob.SumPooling", "generated/dgl.nn.mxnet.utils.Sequential", "generated/dgl.nn.pytorch.DeepWalk", "generated/dgl.nn.pytorch.HeteroEmbedding", "generated/dgl.nn.pytorch.HeteroGraphConv", "generated/dgl.nn.pytorch.HeteroLinear", "generated/dgl.nn.pytorch.MetaPath2Vec", "generated/dgl.nn.pytorch.TypedLinear", "generated/dgl.nn.pytorch.conv.AGNNConv", "generated/dgl.nn.pytorch.conv.APPNPConv", "generated/dgl.nn.pytorch.conv.AtomicConv", "generated/dgl.nn.pytorch.conv.CFConv", "generated/dgl.nn.pytorch.conv.ChebConv", "generated/dgl.nn.pytorch.conv.CuGraphGATConv", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv", "generated/dgl.nn.pytorch.conv.DGNConv", "generated/dgl.nn.pytorch.conv.DenseChebConv", "generated/dgl.nn.pytorch.conv.DenseGraphConv", "generated/dgl.nn.pytorch.conv.DenseSAGEConv", "generated/dgl.nn.pytorch.conv.DotGatConv", "generated/dgl.nn.pytorch.conv.EGATConv", "generated/dgl.nn.pytorch.conv.EGNNConv", "generated/dgl.nn.pytorch.conv.EdgeConv", "generated/dgl.nn.pytorch.conv.EdgeGATConv", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm", "generated/dgl.nn.pytorch.conv.GATConv", "generated/dgl.nn.pytorch.conv.GATv2Conv", "generated/dgl.nn.pytorch.conv.GCN2Conv", "generated/dgl.nn.pytorch.conv.GINConv", "generated/dgl.nn.pytorch.conv.GINEConv", "generated/dgl.nn.pytorch.conv.GMMConv", "generated/dgl.nn.pytorch.conv.GatedGCNConv", "generated/dgl.nn.pytorch.conv.GatedGraphConv", "generated/dgl.nn.pytorch.conv.GraphConv", "generated/dgl.nn.pytorch.conv.GroupRevRes", "generated/dgl.nn.pytorch.conv.HGTConv", "generated/dgl.nn.pytorch.conv.NNConv", "generated/dgl.nn.pytorch.conv.PNAConv", "generated/dgl.nn.pytorch.conv.RelGraphConv", "generated/dgl.nn.pytorch.conv.SAGEConv", "generated/dgl.nn.pytorch.conv.SGConv", "generated/dgl.nn.pytorch.conv.TAGConv", "generated/dgl.nn.pytorch.conv.TWIRLSConv", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", "generated/dgl.nn.pytorch.explain.GNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX", "generated/dgl.nn.pytorch.explain.PGExplainer", "generated/dgl.nn.pytorch.explain.SubgraphX", "generated/dgl.nn.pytorch.factory.KNNGraph", "generated/dgl.nn.pytorch.factory.RadiusGraph", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph", "generated/dgl.nn.pytorch.glob.AvgPooling", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling", "generated/dgl.nn.pytorch.glob.MaxPooling", "generated/dgl.nn.pytorch.glob.Set2Set", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder", "generated/dgl.nn.pytorch.glob.SortPooling", "generated/dgl.nn.pytorch.glob.SumPooling", "generated/dgl.nn.pytorch.glob.WeightAndSum", "generated/dgl.nn.pytorch.gt.BiasedMHA", "generated/dgl.nn.pytorch.gt.DegreeEncoder", "generated/dgl.nn.pytorch.gt.EGTLayer", "generated/dgl.nn.pytorch.gt.GraphormerLayer", "generated/dgl.nn.pytorch.gt.LapPosEncoder", "generated/dgl.nn.pytorch.gt.PathEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d", "generated/dgl.nn.pytorch.link.EdgePredictor", "generated/dgl.nn.pytorch.link.TransE", "generated/dgl.nn.pytorch.link.TransR", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding", "generated/dgl.nn.pytorch.utils.JumpingKnowledge", "generated/dgl.nn.pytorch.utils.LabelPropagation", "generated/dgl.nn.pytorch.utils.Sequential", "generated/dgl.nn.pytorch.utils.WeightBasis", "generated/dgl.nn.tensorflow.conv.APPNPConv", "generated/dgl.nn.tensorflow.conv.ChebConv", "generated/dgl.nn.tensorflow.conv.GATConv", "generated/dgl.nn.tensorflow.conv.GINConv", "generated/dgl.nn.tensorflow.conv.GraphConv", "generated/dgl.nn.tensorflow.conv.RelGraphConv", "generated/dgl.nn.tensorflow.conv.SAGEConv", "generated/dgl.nn.tensorflow.conv.SGConv", "generated/dgl.nn.tensorflow.glob.AvgPooling", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv", "generated/dgl.nn.tensorflow.glob.MaxPooling", "generated/dgl.nn.tensorflow.glob.SortPooling", "generated/dgl.nn.tensorflow.glob.SumPooling", "generated/dgl.node_homophily", "generated/dgl.node_label_informativeness", "generated/dgl.node_subgraph", "generated/dgl.node_type_subgraph", "generated/dgl.norm_by_dst", "generated/dgl.ops.copy_e_max", "generated/dgl.ops.copy_e_mean", "generated/dgl.ops.copy_e_min", "generated/dgl.ops.copy_e_sum", "generated/dgl.ops.copy_u", "generated/dgl.ops.copy_u_max", "generated/dgl.ops.copy_u_mean", "generated/dgl.ops.copy_u_min", "generated/dgl.ops.copy_u_sum", "generated/dgl.ops.copy_v", "generated/dgl.ops.e_add_u", "generated/dgl.ops.e_add_v", "generated/dgl.ops.e_div_u", "generated/dgl.ops.e_div_v", "generated/dgl.ops.e_dot_u", "generated/dgl.ops.e_dot_v", "generated/dgl.ops.e_mul_u", "generated/dgl.ops.e_mul_v", "generated/dgl.ops.e_sub_u", "generated/dgl.ops.e_sub_v", "generated/dgl.ops.gather_mm", "generated/dgl.ops.gsddmm", "generated/dgl.ops.gspmm", "generated/dgl.ops.segment_mm", "generated/dgl.ops.segment_reduce", "generated/dgl.ops.u_add_e", "generated/dgl.ops.u_add_e_max", "generated/dgl.ops.u_add_e_mean", "generated/dgl.ops.u_add_e_min", "generated/dgl.ops.u_add_e_sum", "generated/dgl.ops.u_add_v", "generated/dgl.ops.u_div_e", "generated/dgl.ops.u_div_e_max", "generated/dgl.ops.u_div_e_mean", "generated/dgl.ops.u_div_e_min", "generated/dgl.ops.u_div_e_sum", "generated/dgl.ops.u_div_v", "generated/dgl.ops.u_dot_e", "generated/dgl.ops.u_dot_v", "generated/dgl.ops.u_mul_e", "generated/dgl.ops.u_mul_e_max", "generated/dgl.ops.u_mul_e_mean", "generated/dgl.ops.u_mul_e_min", "generated/dgl.ops.u_mul_e_sum", "generated/dgl.ops.u_mul_v", "generated/dgl.ops.u_sub_e", "generated/dgl.ops.u_sub_e_max", "generated/dgl.ops.u_sub_e_mean", "generated/dgl.ops.u_sub_e_min", "generated/dgl.ops.u_sub_e_sum", "generated/dgl.ops.u_sub_v", "generated/dgl.ops.v_add_e", "generated/dgl.ops.v_add_u", "generated/dgl.ops.v_div_e", "generated/dgl.ops.v_div_u", "generated/dgl.ops.v_dot_e", "generated/dgl.ops.v_dot_u", "generated/dgl.ops.v_mul_e", "generated/dgl.ops.v_mul_u", "generated/dgl.ops.v_sub_e", "generated/dgl.ops.v_sub_u", "generated/dgl.out_subgraph", "generated/dgl.partition_graph_with_halo", "generated/dgl.prop_edges", "generated/dgl.prop_edges_dfs", "generated/dgl.prop_nodes", "generated/dgl.prop_nodes_bfs", "generated/dgl.prop_nodes_topo", "generated/dgl.radius_graph", "generated/dgl.rand_bipartite", "generated/dgl.rand_graph", "generated/dgl.random_walk_pe", "generated/dgl.readout_edges", "generated/dgl.readout_nodes", "generated/dgl.remove_edges", "generated/dgl.remove_nodes", "generated/dgl.remove_self_loop", "generated/dgl.reorder_graph", "generated/dgl.reverse", "generated/dgl.sampling.PinSAGESampler", "generated/dgl.sampling.global_uniform_negative_sampling", "generated/dgl.sampling.node2vec_random_walk", "generated/dgl.sampling.pack_traces", "generated/dgl.sampling.random_walk", "generated/dgl.sampling.sample_labors", "generated/dgl.sampling.sample_neighbors", "generated/dgl.sampling.sample_neighbors_biased", "generated/dgl.sampling.select_topk", "generated/dgl.save_graphs", "generated/dgl.seed", "generated/dgl.segmented_knn_graph", "generated/dgl.shortest_dist", "generated/dgl.slice_batch", "generated/dgl.softmax_edges", "generated/dgl.softmax_nodes", "generated/dgl.sort_csc_by_tag", "generated/dgl.sort_csr_by_tag", "generated/dgl.sparse.SparseMatrix.T", "generated/dgl.sparse.SparseMatrix.coalesce", "generated/dgl.sparse.SparseMatrix.col", "generated/dgl.sparse.SparseMatrix.coo", "generated/dgl.sparse.SparseMatrix.cpu", "generated/dgl.sparse.SparseMatrix.csc", "generated/dgl.sparse.SparseMatrix.csr", "generated/dgl.sparse.SparseMatrix.cuda", "generated/dgl.sparse.SparseMatrix.device", "generated/dgl.sparse.SparseMatrix.double", "generated/dgl.sparse.SparseMatrix.dtype", "generated/dgl.sparse.SparseMatrix.float", "generated/dgl.sparse.SparseMatrix.has_duplicate", "generated/dgl.sparse.SparseMatrix.indices", "generated/dgl.sparse.SparseMatrix.int", "generated/dgl.sparse.SparseMatrix.long", "generated/dgl.sparse.SparseMatrix.neg", "generated/dgl.sparse.SparseMatrix.nnz", "generated/dgl.sparse.SparseMatrix.reduce", "generated/dgl.sparse.SparseMatrix.row", "generated/dgl.sparse.SparseMatrix.shape", "generated/dgl.sparse.SparseMatrix.smax", "generated/dgl.sparse.SparseMatrix.smean", "generated/dgl.sparse.SparseMatrix.smin", "generated/dgl.sparse.SparseMatrix.softmax", "generated/dgl.sparse.SparseMatrix.sum", "generated/dgl.sparse.SparseMatrix.t", "generated/dgl.sparse.SparseMatrix.to", "generated/dgl.sparse.SparseMatrix.to_dense", "generated/dgl.sparse.SparseMatrix.transpose", "generated/dgl.sparse.SparseMatrix.val", "generated/dgl.sparse.add", "generated/dgl.sparse.bsddmm", "generated/dgl.sparse.bspmm", "generated/dgl.sparse.diag", "generated/dgl.sparse.div", "generated/dgl.sparse.from_coo", "generated/dgl.sparse.from_csc", "generated/dgl.sparse.from_csr", "generated/dgl.sparse.identity", "generated/dgl.sparse.matmul", "generated/dgl.sparse.mul", "generated/dgl.sparse.power", "generated/dgl.sparse.sddmm", "generated/dgl.sparse.softmax", "generated/dgl.sparse.sp_add_v", "generated/dgl.sparse.sp_broadcast_v", "generated/dgl.sparse.sp_div_v", "generated/dgl.sparse.sp_mul_v", "generated/dgl.sparse.sp_sub_v", "generated/dgl.sparse.spmatrix", "generated/dgl.sparse.spmm", "generated/dgl.sparse.spspmm", "generated/dgl.sparse.sub", "generated/dgl.sparse.val_like", "generated/dgl.sum_edges", "generated/dgl.sum_nodes", "generated/dgl.svd_pe", "generated/dgl.to_bidirected", "generated/dgl.to_block", "generated/dgl.to_cugraph", "generated/dgl.to_double", "generated/dgl.to_float", "generated/dgl.to_half", "generated/dgl.to_heterogeneous", "generated/dgl.to_homogeneous", "generated/dgl.to_networkx", "generated/dgl.to_simple", "generated/dgl.to_simple_graph", "generated/dgl.topk_edges", "generated/dgl.topk_nodes", "generated/dgl.topological_nodes_generator", "generated/dgl.transforms.AddEdge", "generated/dgl.transforms.AddMetaPaths", "generated/dgl.transforms.AddReverse", "generated/dgl.transforms.AddSelfLoop", "generated/dgl.transforms.BaseTransform", "generated/dgl.transforms.Compose", "generated/dgl.transforms.DropEdge", "generated/dgl.transforms.DropNode", "generated/dgl.transforms.FeatMask", "generated/dgl.transforms.GCNNorm", "generated/dgl.transforms.GDC", "generated/dgl.transforms.HeatKernel", "generated/dgl.transforms.KHopGraph", "generated/dgl.transforms.LapPE", "generated/dgl.transforms.LineGraph", "generated/dgl.transforms.NodeShuffle", "generated/dgl.transforms.PPR", "generated/dgl.transforms.RandomWalkPE", "generated/dgl.transforms.RemoveSelfLoop", "generated/dgl.transforms.RowFeatNormalizer", "generated/dgl.transforms.SIGNDiffusion", "generated/dgl.transforms.SVDPE", "generated/dgl.transforms.ToLevi", "generated/dgl.transforms.ToSimple", "generated/dgl.udf.EdgeBatch.batch_size", "generated/dgl.udf.EdgeBatch.data", "generated/dgl.udf.EdgeBatch.dst", "generated/dgl.udf.EdgeBatch.edges", "generated/dgl.udf.EdgeBatch.src", "generated/dgl.udf.NodeBatch.batch_size", "generated/dgl.udf.NodeBatch.data", "generated/dgl.udf.NodeBatch.mailbox", "generated/dgl.udf.NodeBatch.nodes", "generated/dgl.unbatch", "generated/dgl.use_libxsmm", "graphtransformer/data", "graphtransformer/index", "graphtransformer/model", "guide/data", "guide/data-dataset", "guide/data-download", "guide/data-loadcsv", "guide/data-loadogb", "guide/data-process", "guide/data-savenload", "guide/distributed", "guide/distributed-apis", "guide/distributed-hetero", "guide/distributed-partition", "guide/distributed-preprocessing", "guide/distributed-tools", "guide/graph", "guide/graph-basic", "guide/graph-external", "guide/graph-feature", "guide/graph-gpu", "guide/graph-graphs-nodes-edges", "guide/graph-heterogeneous", "guide/index", "guide/message", "guide/message-api", "guide/message-efficient", "guide/message-heterograph", "guide/message-part", "guide/minibatch", "guide/minibatch-custom-sampler", "guide/minibatch-edge", "guide/minibatch-gpu-sampling", "guide/minibatch-inference", "guide/minibatch-link", "guide/minibatch-nn", "guide/minibatch-node", "guide/minibatch-parallelism", "guide/minibatch-sparse", "guide/mixed_precision", "guide/nn", "guide/nn-construction", "guide/nn-forward", "guide/nn-heterograph", "guide/training", "guide/training-edge", "guide/training-eweight", "guide/training-graph", "guide/training-link", "guide/training-node", "guide_cn/data", "guide_cn/data-dataset", "guide_cn/data-download", "guide_cn/data-loadogb", "guide_cn/data-process", "guide_cn/data-savenload", "guide_cn/distributed", "guide_cn/distributed-apis", "guide_cn/distributed-preprocessing", "guide_cn/distributed-tools", "guide_cn/graph", "guide_cn/graph-basic", "guide_cn/graph-external", "guide_cn/graph-feature", "guide_cn/graph-gpu", "guide_cn/graph-graphs-nodes-edges", "guide_cn/graph-heterogeneous", "guide_cn/index", "guide_cn/message", "guide_cn/message-api", "guide_cn/message-efficient", "guide_cn/message-heterograph", "guide_cn/message-part", "guide_cn/minibatch", "guide_cn/minibatch-custom-sampler", "guide_cn/minibatch-edge", "guide_cn/minibatch-inference", "guide_cn/minibatch-link", "guide_cn/minibatch-nn", "guide_cn/minibatch-node", "guide_cn/nn", "guide_cn/nn-construction", "guide_cn/nn-forward", "guide_cn/nn-heterograph", "guide_cn/training", "guide_cn/training-edge", "guide_cn/training-eweight", "guide_cn/training-graph", "guide_cn/training-link", "guide_cn/training-node", "guide_ko/data", "guide_ko/data-dataset", "guide_ko/data-download", "guide_ko/data-loadogb", "guide_ko/data-process", "guide_ko/data-savenload", "guide_ko/distributed", "guide_ko/distributed-apis", "guide_ko/distributed-hetero", "guide_ko/distributed-preprocessing", "guide_ko/distributed-tools", "guide_ko/graph", "guide_ko/graph-basic", "guide_ko/graph-external", "guide_ko/graph-feature", "guide_ko/graph-gpu", "guide_ko/graph-graphs-nodes-edges", "guide_ko/graph-heterogeneous", "guide_ko/index", "guide_ko/message", "guide_ko/message-api", "guide_ko/message-edge", "guide_ko/message-efficient", "guide_ko/message-heterograph", "guide_ko/message-part", "guide_ko/minibatch", "guide_ko/minibatch-custom-sampler", "guide_ko/minibatch-edge", "guide_ko/minibatch-gpu-sampling", "guide_ko/minibatch-inference", "guide_ko/minibatch-link", "guide_ko/minibatch-nn", "guide_ko/minibatch-node", "guide_ko/mixed_precision", "guide_ko/nn", "guide_ko/nn-construction", "guide_ko/nn-forward", "guide_ko/nn-heterograph", "guide_ko/training", "guide_ko/training-edge", "guide_ko/training-graph", "guide_ko/training-link", "guide_ko/training-node", "index", "install/index", "notebooks/sparse/gcn", "notebooks/sparse/graph_diffusion", "notebooks/sparse/graph_transformer", "notebooks/sparse/hgnn", "notebooks/sparse/index", "notebooks/sparse/quickstart", "performance", "resources", "sg_execution_times", "stochastic_training/index", "stochastic_training/link_prediction", "stochastic_training/multigpu_node_classification", "stochastic_training/neighbor_sampling_overview", "stochastic_training/node_classification", "stochastic_training/ondisk-dataset", "stochastic_training/ondisk-dataset-specification", "stochastic_training/ondisk_dataset_heterograph", "stochastic_training/ondisk_dataset_homograph", "tutorials/blitz/1_introduction", "tutorials/blitz/2_dglgraph", "tutorials/blitz/3_message_passing", "tutorials/blitz/4_link_predict", "tutorials/blitz/5_graph_classification", "tutorials/blitz/6_load_data", "tutorials/blitz/index", "tutorials/blitz/sg_execution_times", "tutorials/cpu/argo_tutorial", "tutorials/cpu/cpu_best_practises", "tutorials/cpu/index", "tutorials/cpu/sg_execution_times", "tutorials/dist/1_node_classification", "tutorials/dist/2_link_prediction", "tutorials/dist/index", "tutorials/dist/sg_execution_times", "tutorials/models/1_gnn/1_gcn", "tutorials/models/1_gnn/4_rgcn", "tutorials/models/1_gnn/6_line_graph", "tutorials/models/1_gnn/9_gat", "tutorials/models/1_gnn/index", "tutorials/models/1_gnn/sg_execution_times", "tutorials/models/2_small_graph/3_tree-lstm", "tutorials/models/2_small_graph/index", "tutorials/models/2_small_graph/sg_execution_times", "tutorials/models/3_generative_model/5_dgmg", "tutorials/models/3_generative_model/index", "tutorials/models/3_generative_model/sg_execution_times", "tutorials/models/4_old_wines/2_capsule", "tutorials/models/4_old_wines/7_transformer", "tutorials/models/4_old_wines/index", "tutorials/models/4_old_wines/sg_execution_times", "tutorials/models/index", "tutorials/models/sg_execution_times", "tutorials/multi/1_graph_classification", "tutorials/multi/2_node_classification", "tutorials/multi/index", "tutorials/multi/sg_execution_times"], "envversion": {"nbsphinx": 4, "sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/python/dgl.rst", "api/python/dgl.DGLGraph.rst", "api/python/dgl.data.rst", "api/python/dgl.dataloading.rst", "api/python/dgl.distributed.rst", "api/python/dgl.function.rst", "api/python/dgl.geometry.rst", "api/python/dgl.graphbolt.rst", "api/python/dgl.multiprocessing.rst", "api/python/dgl.ops.rst", "api/python/dgl.optim.rst", "api/python/dgl.sampling.rst", "api/python/dgl.sparse_v0.rst", "api/python/index.rst", "api/python/knn_benchmark.rst", "api/python/nn-mxnet.rst", "api/python/nn-pytorch.rst", "api/python/nn-tensorflow.rst", "api/python/nn.functional.rst", "api/python/transforms.rst", "api/python/udf.rst", "contribute.rst", "developer/ffi.rst", "env_var.rst", "faq.rst", "features/dataset.rst", "generated/dgl.DGLGraph.__getitem__.rst", "generated/dgl.DGLGraph.add_edges.rst", "generated/dgl.DGLGraph.add_nodes.rst", "generated/dgl.DGLGraph.add_self_loop.rst", "generated/dgl.DGLGraph.adj.rst", "generated/dgl.DGLGraph.adj_external.rst", "generated/dgl.DGLGraph.adj_tensors.rst", "generated/dgl.DGLGraph.adjacency_matrix.rst", "generated/dgl.DGLGraph.apply_edges.rst", "generated/dgl.DGLGraph.apply_nodes.rst", "generated/dgl.DGLGraph.batch_num_edges.rst", "generated/dgl.DGLGraph.batch_num_nodes.rst", "generated/dgl.DGLGraph.batch_size.rst", "generated/dgl.DGLGraph.canonical_etypes.rst", "generated/dgl.DGLGraph.cpu.rst", "generated/dgl.DGLGraph.create_formats_.rst", "generated/dgl.DGLGraph.device.rst", "generated/dgl.DGLGraph.dstdata.rst", "generated/dgl.DGLGraph.dstnodes.rst", "generated/dgl.DGLGraph.dsttypes.rst", "generated/dgl.DGLGraph.edata.rst", "generated/dgl.DGLGraph.edge_attr_schemes.rst", "generated/dgl.DGLGraph.edge_ids.rst", "generated/dgl.DGLGraph.edge_subgraph.rst", "generated/dgl.DGLGraph.edge_type_subgraph.rst", "generated/dgl.DGLGraph.edges.rst", "generated/dgl.DGLGraph.etypes.rst", "generated/dgl.DGLGraph.filter_edges.rst", "generated/dgl.DGLGraph.filter_nodes.rst", "generated/dgl.DGLGraph.find_edges.rst", "generated/dgl.DGLGraph.formats.rst", "generated/dgl.DGLGraph.has_edges_between.rst", "generated/dgl.DGLGraph.has_nodes.rst", "generated/dgl.DGLGraph.idtype.rst", "generated/dgl.DGLGraph.in_degrees.rst", "generated/dgl.DGLGraph.in_edges.rst", "generated/dgl.DGLGraph.inc.rst", "generated/dgl.DGLGraph.incidence_matrix.rst", "generated/dgl.DGLGraph.int.rst", "generated/dgl.DGLGraph.is_homogeneous.rst", "generated/dgl.DGLGraph.is_multigraph.rst", "generated/dgl.DGLGraph.is_pinned.rst", "generated/dgl.DGLGraph.is_unibipartite.rst", "generated/dgl.DGLGraph.line_graph.rst", "generated/dgl.DGLGraph.local_scope.rst", "generated/dgl.DGLGraph.long.rst", "generated/dgl.DGLGraph.metagraph.rst", "generated/dgl.DGLGraph.multi_update_all.rst", "generated/dgl.DGLGraph.ndata.rst", "generated/dgl.DGLGraph.node_attr_schemes.rst", "generated/dgl.DGLGraph.node_type_subgraph.rst", "generated/dgl.DGLGraph.nodes.rst", "generated/dgl.DGLGraph.ntypes.rst", "generated/dgl.DGLGraph.num_dst_nodes.rst", "generated/dgl.DGLGraph.num_edges.rst", "generated/dgl.DGLGraph.num_nodes.rst", "generated/dgl.DGLGraph.num_src_nodes.rst", "generated/dgl.DGLGraph.number_of_dst_nodes.rst", "generated/dgl.DGLGraph.number_of_edges.rst", "generated/dgl.DGLGraph.number_of_nodes.rst", "generated/dgl.DGLGraph.number_of_src_nodes.rst", "generated/dgl.DGLGraph.out_degrees.rst", "generated/dgl.DGLGraph.out_edges.rst", "generated/dgl.DGLGraph.pin_memory_.rst", "generated/dgl.DGLGraph.predecessors.rst", "generated/dgl.DGLGraph.prop_edges.rst", "generated/dgl.DGLGraph.prop_nodes.rst", "generated/dgl.DGLGraph.pull.rst", "generated/dgl.DGLGraph.push.rst", "generated/dgl.DGLGraph.remove_edges.rst", "generated/dgl.DGLGraph.remove_nodes.rst", "generated/dgl.DGLGraph.remove_self_loop.rst", "generated/dgl.DGLGraph.reorder_graph.rst", "generated/dgl.DGLGraph.reverse.rst", "generated/dgl.DGLGraph.send_and_recv.rst", "generated/dgl.DGLGraph.set_batch_num_edges.rst", "generated/dgl.DGLGraph.set_batch_num_nodes.rst", "generated/dgl.DGLGraph.srcdata.rst", "generated/dgl.DGLGraph.srcnodes.rst", "generated/dgl.DGLGraph.srctypes.rst", "generated/dgl.DGLGraph.subgraph.rst", "generated/dgl.DGLGraph.successors.rst", "generated/dgl.DGLGraph.to.rst", "generated/dgl.DGLGraph.to_canonical_etype.rst", "generated/dgl.DGLGraph.to_cugraph.rst", "generated/dgl.DGLGraph.to_simple.rst", "generated/dgl.DGLGraph.unpin_memory_.rst", "generated/dgl.DGLGraph.update_all.rst", "generated/dgl.add_edges.rst", "generated/dgl.add_nodes.rst", "generated/dgl.add_reverse_edges.rst", "generated/dgl.add_self_loop.rst", "generated/dgl.adj_product_graph.rst", "generated/dgl.adj_sum_graph.rst", "generated/dgl.adjusted_homophily.rst", "generated/dgl.apply_each.rst", "generated/dgl.batch.rst", "generated/dgl.bfs_edges_generator.rst", "generated/dgl.bfs_nodes_generator.rst", "generated/dgl.bipartite_from_networkx.rst", "generated/dgl.bipartite_from_scipy.rst", "generated/dgl.block_to_graph.rst", "generated/dgl.broadcast_edges.rst", "generated/dgl.broadcast_nodes.rst", "generated/dgl.compact_graphs.rst", "generated/dgl.create_block.rst", "generated/dgl.data.AIFBDataset.rst", "generated/dgl.data.AMDataset.rst", "generated/dgl.data.ActorDataset.rst", "generated/dgl.data.AmazonCoBuyComputerDataset.rst", "generated/dgl.data.AmazonCoBuyPhotoDataset.rst", "generated/dgl.data.AmazonRatingsDataset.rst", "generated/dgl.data.AsGraphPredDataset.rst", "generated/dgl.data.AsLinkPredDataset.rst", "generated/dgl.data.AsNodePredDataset.rst", "generated/dgl.data.BA2MotifDataset.rst", "generated/dgl.data.BACommunityDataset.rst", "generated/dgl.data.BAShapeDataset.rst", "generated/dgl.data.BGSDataset.rst", "generated/dgl.data.BitcoinOTCDataset.rst", "generated/dgl.data.CIFAR10SuperPixelDataset.rst", "generated/dgl.data.CLUSTERDataset.rst", "generated/dgl.data.CSVDataset.rst", "generated/dgl.data.ChameleonDataset.rst", "generated/dgl.data.CiteseerGraphDataset.rst", "generated/dgl.data.CoauthorCSDataset.rst", "generated/dgl.data.CoauthorPhysicsDataset.rst", "generated/dgl.data.CoraFullDataset.rst", "generated/dgl.data.CoraGraphDataset.rst", "generated/dgl.data.CornellDataset.rst", "generated/dgl.data.DGLDataset.rst", "generated/dgl.data.FB15k237Dataset.rst", "generated/dgl.data.FB15kDataset.rst", "generated/dgl.data.FakeNewsDataset.rst", "generated/dgl.data.FlickrDataset.rst", "generated/dgl.data.FraudAmazonDataset.rst", "generated/dgl.data.FraudDataset.rst", "generated/dgl.data.FraudYelpDataset.rst", "generated/dgl.data.GDELTDataset.rst", "generated/dgl.data.GINDataset.rst", "generated/dgl.data.ICEWS18Dataset.rst", "generated/dgl.data.KarateClubDataset.rst", "generated/dgl.data.LegacyTUDataset.rst", "generated/dgl.data.MNISTSuperPixelDataset.rst", "generated/dgl.data.MUTAGDataset.rst", "generated/dgl.data.MinesweeperDataset.rst", "generated/dgl.data.MiniGCDataset.rst", "generated/dgl.data.MovieLensDataset.rst", "generated/dgl.data.PATTERNDataset.rst", "generated/dgl.data.PPIDataset.rst", "generated/dgl.data.PubmedGraphDataset.rst", "generated/dgl.data.QM7bDataset.rst", "generated/dgl.data.QM9Dataset.rst", "generated/dgl.data.QM9EdgeDataset.rst", "generated/dgl.data.QuestionsDataset.rst", "generated/dgl.data.RedditDataset.rst", "generated/dgl.data.RomanEmpireDataset.rst", "generated/dgl.data.SBMMixtureDataset.rst", "generated/dgl.data.SSTDataset.rst", "generated/dgl.data.SquirrelDataset.rst", "generated/dgl.data.TUDataset.rst", "generated/dgl.data.TexasDataset.rst", "generated/dgl.data.TolokersDataset.rst", "generated/dgl.data.TreeCycleDataset.rst", "generated/dgl.data.TreeGridDataset.rst", "generated/dgl.data.WN18Dataset.rst", "generated/dgl.data.WikiCSDataset.rst", "generated/dgl.data.WisconsinDataset.rst", "generated/dgl.data.YelpDataset.rst", "generated/dgl.data.ZINCDataset.rst", "generated/dgl.data.utils.Subset.rst", "generated/dgl.data.utils.add_node_property_split.rst", "generated/dgl.data.utils.add_nodepred_split.rst", "generated/dgl.data.utils.check_sha1.rst", "generated/dgl.data.utils.download.rst", "generated/dgl.data.utils.extract_archive.rst", "generated/dgl.data.utils.get_download_dir.rst", "generated/dgl.data.utils.load_info.rst", "generated/dgl.data.utils.load_labels.rst", "generated/dgl.data.utils.mask_nodes_by_property.rst", "generated/dgl.data.utils.save_info.rst", "generated/dgl.data.utils.split_dataset.rst", "generated/dgl.dataloading.BlockSampler.rst", "generated/dgl.dataloading.ClusterGCNSampler.rst", "generated/dgl.dataloading.DataLoader.rst", "generated/dgl.dataloading.DistEdgeDataLoader.rst", "generated/dgl.dataloading.DistNodeDataLoader.rst", "generated/dgl.dataloading.GraphDataLoader.rst", "generated/dgl.dataloading.LaborSampler.rst", "generated/dgl.dataloading.MultiLayerFullNeighborSampler.rst", "generated/dgl.dataloading.NeighborSampler.rst", "generated/dgl.dataloading.SAINTSampler.rst", "generated/dgl.dataloading.Sampler.rst", "generated/dgl.dataloading.ShaDowKHopSampler.rst", "generated/dgl.dataloading.as_edge_prediction_sampler.rst", "generated/dgl.dataloading.base.LazyFeature.rst", "generated/dgl.dataloading.base.set_dst_lazy_features.rst", "generated/dgl.dataloading.base.set_edge_lazy_features.rst", "generated/dgl.dataloading.base.set_node_lazy_features.rst", "generated/dgl.dataloading.base.set_src_lazy_features.rst", "generated/dgl.dataloading.negative_sampler.GlobalUniform.rst", "generated/dgl.dataloading.negative_sampler.PerSourceUniform.rst", "generated/dgl.dataloading.negative_sampler.Uniform.rst", "generated/dgl.dfs_edges_generator.rst", "generated/dgl.dfs_labeled_edges_generator.rst", "generated/dgl.distributed.dgl_partition_to_graphbolt.rst", "generated/dgl.distributed.edge_split.rst", "generated/dgl.distributed.find_edges.rst", "generated/dgl.distributed.in_subgraph.rst", "generated/dgl.distributed.initialize.rst", "generated/dgl.distributed.load_partition.rst", "generated/dgl.distributed.load_partition_book.rst", "generated/dgl.distributed.load_partition_feats.rst", "generated/dgl.distributed.node_split.rst", "generated/dgl.distributed.partition_graph.rst", "generated/dgl.distributed.sample_etype_neighbors.rst", "generated/dgl.distributed.sample_neighbors.rst", "generated/dgl.double_radius_node_labeling.rst", "generated/dgl.edge_homophily.rst", "generated/dgl.edge_label_informativeness.rst", "generated/dgl.edge_subgraph.rst", "generated/dgl.edge_type_subgraph.rst", "generated/dgl.from_cugraph.rst", "generated/dgl.from_networkx.rst", "generated/dgl.from_scipy.rst", "generated/dgl.function.copy_e.rst", "generated/dgl.function.copy_u.rst", "generated/dgl.function.e_add_u.rst", "generated/dgl.function.e_add_v.rst", "generated/dgl.function.e_div_u.rst", "generated/dgl.function.e_div_v.rst", "generated/dgl.function.e_dot_u.rst", "generated/dgl.function.e_dot_v.rst", "generated/dgl.function.e_mul_u.rst", "generated/dgl.function.e_mul_v.rst", "generated/dgl.function.e_sub_u.rst", "generated/dgl.function.e_sub_v.rst", "generated/dgl.function.max.rst", "generated/dgl.function.mean.rst", "generated/dgl.function.min.rst", "generated/dgl.function.sum.rst", "generated/dgl.function.u_add_e.rst", "generated/dgl.function.u_add_v.rst", "generated/dgl.function.u_div_e.rst", "generated/dgl.function.u_div_v.rst", "generated/dgl.function.u_dot_e.rst", "generated/dgl.function.u_dot_v.rst", "generated/dgl.function.u_mul_e.rst", "generated/dgl.function.u_mul_v.rst", "generated/dgl.function.u_sub_e.rst", "generated/dgl.function.u_sub_v.rst", "generated/dgl.function.v_add_e.rst", "generated/dgl.function.v_add_u.rst", "generated/dgl.function.v_div_e.rst", "generated/dgl.function.v_div_u.rst", "generated/dgl.function.v_dot_e.rst", "generated/dgl.function.v_dot_u.rst", "generated/dgl.function.v_mul_e.rst", "generated/dgl.function.v_mul_u.rst", "generated/dgl.function.v_sub_e.rst", "generated/dgl.function.v_sub_u.rst", "generated/dgl.graph.rst", "generated/dgl.graphbolt.BasicFeatureStore.rst", "generated/dgl.graphbolt.BuiltinDataset.rst", "generated/dgl.graphbolt.CopyTo.rst", "generated/dgl.graphbolt.DataLoader.rst", "generated/dgl.graphbolt.Dataset.rst", "generated/dgl.graphbolt.DistributedItemSampler.rst", "generated/dgl.graphbolt.Feature.rst", "generated/dgl.graphbolt.FeatureFetcher.rst", "generated/dgl.graphbolt.FeatureStore.rst", "generated/dgl.graphbolt.FusedCSCSamplingGraph.rst", "generated/dgl.graphbolt.GPUCachedFeature.rst", "generated/dgl.graphbolt.HeteroItemSet.rst", "generated/dgl.graphbolt.InSubgraphSampler.rst", "generated/dgl.graphbolt.ItemSampler.rst", "generated/dgl.graphbolt.ItemSet.rst", "generated/dgl.graphbolt.LayerNeighborSampler.rst", "generated/dgl.graphbolt.LegacyDataset.rst", "generated/dgl.graphbolt.MiniBatch.rst", "generated/dgl.graphbolt.MiniBatchTransformer.rst", "generated/dgl.graphbolt.NegativeSampler.rst", "generated/dgl.graphbolt.NeighborSampler.rst", "generated/dgl.graphbolt.OnDiskDataset.rst", "generated/dgl.graphbolt.SampledSubgraph.rst", "generated/dgl.graphbolt.SampledSubgraphImpl.rst", "generated/dgl.graphbolt.SamplingGraph.rst", "generated/dgl.graphbolt.SubgraphSampler.rst", "generated/dgl.graphbolt.Task.rst", "generated/dgl.graphbolt.TemporalLayerNeighborSampler.rst", "generated/dgl.graphbolt.TemporalNeighborSampler.rst", "generated/dgl.graphbolt.TorchBasedFeature.rst", "generated/dgl.graphbolt.TorchBasedFeatureStore.rst", "generated/dgl.graphbolt.UniformNegativeSampler.rst", "generated/dgl.graphbolt.add_reverse_edges.rst", "generated/dgl.graphbolt.compact_csc_format.rst", "generated/dgl.graphbolt.etype_str_to_tuple.rst", "generated/dgl.graphbolt.etype_tuple_to_str.rst", "generated/dgl.graphbolt.exclude_seed_edges.rst", "generated/dgl.graphbolt.expand_indptr.rst", "generated/dgl.graphbolt.from_dglgraph.rst", "generated/dgl.graphbolt.fused_csc_sampling_graph.rst", "generated/dgl.graphbolt.index_select.rst", "generated/dgl.graphbolt.isin.rst", "generated/dgl.graphbolt.load_from_shared_memory.rst", "generated/dgl.graphbolt.seed.rst", "generated/dgl.graphbolt.unique_and_compact.rst", "generated/dgl.graphbolt.unique_and_compact_csc_formats.rst", "generated/dgl.heterograph.rst", "generated/dgl.in_subgraph.rst", "generated/dgl.is_libxsmm_enabled.rst", "generated/dgl.khop_adj.rst", "generated/dgl.khop_graph.rst", "generated/dgl.khop_in_subgraph.rst", "generated/dgl.khop_out_subgraph.rst", "generated/dgl.knn_graph.rst", "generated/dgl.lap_pe.rst", "generated/dgl.laplacian_lambda_max.rst", "generated/dgl.line_graph.rst", "generated/dgl.linkx_homophily.rst", "generated/dgl.load_graphs.rst", "generated/dgl.max_edges.rst", "generated/dgl.max_nodes.rst", "generated/dgl.mean_edges.rst", "generated/dgl.mean_nodes.rst", "generated/dgl.merge.rst", "generated/dgl.metapath_reachable_graph.rst", "generated/dgl.metis_partition.rst", "generated/dgl.metis_partition_assignment.rst", "generated/dgl.multiprocessing.pytorch.call_once_and_share.rst", "generated/dgl.multiprocessing.pytorch.shared_tensor.rst", "generated/dgl.nn.functional.edge_softmax.rst", "generated/dgl.nn.mxnet.HeteroGraphConv.rst", "generated/dgl.nn.mxnet.conv.AGNNConv.rst", "generated/dgl.nn.mxnet.conv.APPNPConv.rst", "generated/dgl.nn.mxnet.conv.ChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseGraphConv.rst", "generated/dgl.nn.mxnet.conv.DenseSAGEConv.rst", "generated/dgl.nn.mxnet.conv.EdgeConv.rst", "generated/dgl.nn.mxnet.conv.GATConv.rst", "generated/dgl.nn.mxnet.conv.GINConv.rst", "generated/dgl.nn.mxnet.conv.GMMConv.rst", "generated/dgl.nn.mxnet.conv.GatedGraphConv.rst", "generated/dgl.nn.mxnet.conv.GraphConv.rst", "generated/dgl.nn.mxnet.conv.NNConv.rst", "generated/dgl.nn.mxnet.conv.RelGraphConv.rst", "generated/dgl.nn.mxnet.conv.SAGEConv.rst", "generated/dgl.nn.mxnet.conv.SGConv.rst", "generated/dgl.nn.mxnet.conv.TAGConv.rst", "generated/dgl.nn.mxnet.glob.AvgPooling.rst", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.mxnet.glob.MaxPooling.rst", "generated/dgl.nn.mxnet.glob.Set2Set.rst", "generated/dgl.nn.mxnet.glob.SortPooling.rst", "generated/dgl.nn.mxnet.glob.SumPooling.rst", "generated/dgl.nn.mxnet.utils.Sequential.rst", "generated/dgl.nn.pytorch.DeepWalk.rst", "generated/dgl.nn.pytorch.HeteroEmbedding.rst", "generated/dgl.nn.pytorch.HeteroGraphConv.rst", "generated/dgl.nn.pytorch.HeteroLinear.rst", "generated/dgl.nn.pytorch.MetaPath2Vec.rst", "generated/dgl.nn.pytorch.TypedLinear.rst", "generated/dgl.nn.pytorch.conv.AGNNConv.rst", "generated/dgl.nn.pytorch.conv.APPNPConv.rst", "generated/dgl.nn.pytorch.conv.AtomicConv.rst", "generated/dgl.nn.pytorch.conv.CFConv.rst", "generated/dgl.nn.pytorch.conv.ChebConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphGATConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DGNConv.rst", "generated/dgl.nn.pytorch.conv.DenseChebConv.rst", "generated/dgl.nn.pytorch.conv.DenseGraphConv.rst", "generated/dgl.nn.pytorch.conv.DenseSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DotGatConv.rst", "generated/dgl.nn.pytorch.conv.EGATConv.rst", "generated/dgl.nn.pytorch.conv.EGNNConv.rst", "generated/dgl.nn.pytorch.conv.EdgeConv.rst", "generated/dgl.nn.pytorch.conv.EdgeGATConv.rst", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm.rst", "generated/dgl.nn.pytorch.conv.GATConv.rst", "generated/dgl.nn.pytorch.conv.GATv2Conv.rst", "generated/dgl.nn.pytorch.conv.GCN2Conv.rst", "generated/dgl.nn.pytorch.conv.GINConv.rst", "generated/dgl.nn.pytorch.conv.GINEConv.rst", "generated/dgl.nn.pytorch.conv.GMMConv.rst", "generated/dgl.nn.pytorch.conv.GatedGCNConv.rst", "generated/dgl.nn.pytorch.conv.GatedGraphConv.rst", "generated/dgl.nn.pytorch.conv.GraphConv.rst", "generated/dgl.nn.pytorch.conv.GroupRevRes.rst", "generated/dgl.nn.pytorch.conv.HGTConv.rst", "generated/dgl.nn.pytorch.conv.NNConv.rst", "generated/dgl.nn.pytorch.conv.PNAConv.rst", "generated/dgl.nn.pytorch.conv.RelGraphConv.rst", "generated/dgl.nn.pytorch.conv.SAGEConv.rst", "generated/dgl.nn.pytorch.conv.SGConv.rst", "generated/dgl.nn.pytorch.conv.TAGConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.rst", "generated/dgl.nn.pytorch.explain.GNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX.rst", "generated/dgl.nn.pytorch.explain.PGExplainer.rst", "generated/dgl.nn.pytorch.explain.SubgraphX.rst", "generated/dgl.nn.pytorch.factory.KNNGraph.rst", "generated/dgl.nn.pytorch.factory.RadiusGraph.rst", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph.rst", "generated/dgl.nn.pytorch.glob.AvgPooling.rst", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.pytorch.glob.MaxPooling.rst", "generated/dgl.nn.pytorch.glob.Set2Set.rst", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder.rst", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder.rst", "generated/dgl.nn.pytorch.glob.SortPooling.rst", "generated/dgl.nn.pytorch.glob.SumPooling.rst", "generated/dgl.nn.pytorch.glob.WeightAndSum.rst", "generated/dgl.nn.pytorch.gt.BiasedMHA.rst", "generated/dgl.nn.pytorch.gt.DegreeEncoder.rst", "generated/dgl.nn.pytorch.gt.EGTLayer.rst", "generated/dgl.nn.pytorch.gt.GraphormerLayer.rst", "generated/dgl.nn.pytorch.gt.LapPosEncoder.rst", "generated/dgl.nn.pytorch.gt.PathEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.link.EdgePredictor.rst", "generated/dgl.nn.pytorch.link.TransE.rst", "generated/dgl.nn.pytorch.link.TransR.rst", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding.rst", "generated/dgl.nn.pytorch.utils.JumpingKnowledge.rst", "generated/dgl.nn.pytorch.utils.LabelPropagation.rst", "generated/dgl.nn.pytorch.utils.Sequential.rst", "generated/dgl.nn.pytorch.utils.WeightBasis.rst", "generated/dgl.nn.tensorflow.conv.APPNPConv.rst", "generated/dgl.nn.tensorflow.conv.ChebConv.rst", "generated/dgl.nn.tensorflow.conv.GATConv.rst", "generated/dgl.nn.tensorflow.conv.GINConv.rst", "generated/dgl.nn.tensorflow.conv.GraphConv.rst", "generated/dgl.nn.tensorflow.conv.RelGraphConv.rst", "generated/dgl.nn.tensorflow.conv.SAGEConv.rst", "generated/dgl.nn.tensorflow.conv.SGConv.rst", "generated/dgl.nn.tensorflow.glob.AvgPooling.rst", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv.rst", "generated/dgl.nn.tensorflow.glob.MaxPooling.rst", "generated/dgl.nn.tensorflow.glob.SortPooling.rst", "generated/dgl.nn.tensorflow.glob.SumPooling.rst", "generated/dgl.node_homophily.rst", "generated/dgl.node_label_informativeness.rst", "generated/dgl.node_subgraph.rst", "generated/dgl.node_type_subgraph.rst", "generated/dgl.norm_by_dst.rst", "generated/dgl.ops.copy_e_max.rst", "generated/dgl.ops.copy_e_mean.rst", "generated/dgl.ops.copy_e_min.rst", "generated/dgl.ops.copy_e_sum.rst", "generated/dgl.ops.copy_u.rst", "generated/dgl.ops.copy_u_max.rst", "generated/dgl.ops.copy_u_mean.rst", "generated/dgl.ops.copy_u_min.rst", "generated/dgl.ops.copy_u_sum.rst", "generated/dgl.ops.copy_v.rst", "generated/dgl.ops.e_add_u.rst", "generated/dgl.ops.e_add_v.rst", "generated/dgl.ops.e_div_u.rst", "generated/dgl.ops.e_div_v.rst", "generated/dgl.ops.e_dot_u.rst", "generated/dgl.ops.e_dot_v.rst", "generated/dgl.ops.e_mul_u.rst", "generated/dgl.ops.e_mul_v.rst", "generated/dgl.ops.e_sub_u.rst", "generated/dgl.ops.e_sub_v.rst", "generated/dgl.ops.gather_mm.rst", "generated/dgl.ops.gsddmm.rst", "generated/dgl.ops.gspmm.rst", "generated/dgl.ops.segment_mm.rst", "generated/dgl.ops.segment_reduce.rst", "generated/dgl.ops.u_add_e.rst", "generated/dgl.ops.u_add_e_max.rst", "generated/dgl.ops.u_add_e_mean.rst", "generated/dgl.ops.u_add_e_min.rst", "generated/dgl.ops.u_add_e_sum.rst", "generated/dgl.ops.u_add_v.rst", "generated/dgl.ops.u_div_e.rst", "generated/dgl.ops.u_div_e_max.rst", "generated/dgl.ops.u_div_e_mean.rst", "generated/dgl.ops.u_div_e_min.rst", "generated/dgl.ops.u_div_e_sum.rst", "generated/dgl.ops.u_div_v.rst", "generated/dgl.ops.u_dot_e.rst", "generated/dgl.ops.u_dot_v.rst", "generated/dgl.ops.u_mul_e.rst", "generated/dgl.ops.u_mul_e_max.rst", "generated/dgl.ops.u_mul_e_mean.rst", "generated/dgl.ops.u_mul_e_min.rst", "generated/dgl.ops.u_mul_e_sum.rst", "generated/dgl.ops.u_mul_v.rst", "generated/dgl.ops.u_sub_e.rst", "generated/dgl.ops.u_sub_e_max.rst", "generated/dgl.ops.u_sub_e_mean.rst", "generated/dgl.ops.u_sub_e_min.rst", "generated/dgl.ops.u_sub_e_sum.rst", "generated/dgl.ops.u_sub_v.rst", "generated/dgl.ops.v_add_e.rst", "generated/dgl.ops.v_add_u.rst", "generated/dgl.ops.v_div_e.rst", "generated/dgl.ops.v_div_u.rst", "generated/dgl.ops.v_dot_e.rst", "generated/dgl.ops.v_dot_u.rst", "generated/dgl.ops.v_mul_e.rst", "generated/dgl.ops.v_mul_u.rst", "generated/dgl.ops.v_sub_e.rst", "generated/dgl.ops.v_sub_u.rst", "generated/dgl.out_subgraph.rst", "generated/dgl.partition_graph_with_halo.rst", "generated/dgl.prop_edges.rst", "generated/dgl.prop_edges_dfs.rst", "generated/dgl.prop_nodes.rst", "generated/dgl.prop_nodes_bfs.rst", "generated/dgl.prop_nodes_topo.rst", "generated/dgl.radius_graph.rst", "generated/dgl.rand_bipartite.rst", "generated/dgl.rand_graph.rst", "generated/dgl.random_walk_pe.rst", "generated/dgl.readout_edges.rst", "generated/dgl.readout_nodes.rst", "generated/dgl.remove_edges.rst", "generated/dgl.remove_nodes.rst", "generated/dgl.remove_self_loop.rst", "generated/dgl.reorder_graph.rst", "generated/dgl.reverse.rst", "generated/dgl.sampling.PinSAGESampler.rst", "generated/dgl.sampling.global_uniform_negative_sampling.rst", "generated/dgl.sampling.node2vec_random_walk.rst", "generated/dgl.sampling.pack_traces.rst", "generated/dgl.sampling.random_walk.rst", "generated/dgl.sampling.sample_labors.rst", "generated/dgl.sampling.sample_neighbors.rst", "generated/dgl.sampling.sample_neighbors_biased.rst", "generated/dgl.sampling.select_topk.rst", "generated/dgl.save_graphs.rst", "generated/dgl.seed.rst", "generated/dgl.segmented_knn_graph.rst", "generated/dgl.shortest_dist.rst", "generated/dgl.slice_batch.rst", "generated/dgl.softmax_edges.rst", "generated/dgl.softmax_nodes.rst", "generated/dgl.sort_csc_by_tag.rst", "generated/dgl.sort_csr_by_tag.rst", "generated/dgl.sparse.SparseMatrix.T.rst", "generated/dgl.sparse.SparseMatrix.coalesce.rst", "generated/dgl.sparse.SparseMatrix.col.rst", "generated/dgl.sparse.SparseMatrix.coo.rst", "generated/dgl.sparse.SparseMatrix.cpu.rst", "generated/dgl.sparse.SparseMatrix.csc.rst", "generated/dgl.sparse.SparseMatrix.csr.rst", "generated/dgl.sparse.SparseMatrix.cuda.rst", "generated/dgl.sparse.SparseMatrix.device.rst", "generated/dgl.sparse.SparseMatrix.double.rst", "generated/dgl.sparse.SparseMatrix.dtype.rst", "generated/dgl.sparse.SparseMatrix.float.rst", "generated/dgl.sparse.SparseMatrix.has_duplicate.rst", "generated/dgl.sparse.SparseMatrix.indices.rst", "generated/dgl.sparse.SparseMatrix.int.rst", "generated/dgl.sparse.SparseMatrix.long.rst", "generated/dgl.sparse.SparseMatrix.neg.rst", "generated/dgl.sparse.SparseMatrix.nnz.rst", "generated/dgl.sparse.SparseMatrix.reduce.rst", "generated/dgl.sparse.SparseMatrix.row.rst", "generated/dgl.sparse.SparseMatrix.shape.rst", "generated/dgl.sparse.SparseMatrix.smax.rst", "generated/dgl.sparse.SparseMatrix.smean.rst", "generated/dgl.sparse.SparseMatrix.smin.rst", "generated/dgl.sparse.SparseMatrix.softmax.rst", "generated/dgl.sparse.SparseMatrix.sum.rst", "generated/dgl.sparse.SparseMatrix.t.rst", "generated/dgl.sparse.SparseMatrix.to.rst", "generated/dgl.sparse.SparseMatrix.to_dense.rst", "generated/dgl.sparse.SparseMatrix.transpose.rst", "generated/dgl.sparse.SparseMatrix.val.rst", "generated/dgl.sparse.add.rst", "generated/dgl.sparse.bsddmm.rst", "generated/dgl.sparse.bspmm.rst", "generated/dgl.sparse.diag.rst", "generated/dgl.sparse.div.rst", "generated/dgl.sparse.from_coo.rst", "generated/dgl.sparse.from_csc.rst", "generated/dgl.sparse.from_csr.rst", "generated/dgl.sparse.identity.rst", "generated/dgl.sparse.matmul.rst", "generated/dgl.sparse.mul.rst", "generated/dgl.sparse.power.rst", "generated/dgl.sparse.sddmm.rst", "generated/dgl.sparse.softmax.rst", "generated/dgl.sparse.sp_add_v.rst", "generated/dgl.sparse.sp_broadcast_v.rst", "generated/dgl.sparse.sp_div_v.rst", "generated/dgl.sparse.sp_mul_v.rst", "generated/dgl.sparse.sp_sub_v.rst", "generated/dgl.sparse.spmatrix.rst", "generated/dgl.sparse.spmm.rst", "generated/dgl.sparse.spspmm.rst", "generated/dgl.sparse.sub.rst", "generated/dgl.sparse.val_like.rst", "generated/dgl.sum_edges.rst", "generated/dgl.sum_nodes.rst", "generated/dgl.svd_pe.rst", "generated/dgl.to_bidirected.rst", "generated/dgl.to_block.rst", "generated/dgl.to_cugraph.rst", "generated/dgl.to_double.rst", "generated/dgl.to_float.rst", "generated/dgl.to_half.rst", "generated/dgl.to_heterogeneous.rst", "generated/dgl.to_homogeneous.rst", "generated/dgl.to_networkx.rst", "generated/dgl.to_simple.rst", "generated/dgl.to_simple_graph.rst", "generated/dgl.topk_edges.rst", "generated/dgl.topk_nodes.rst", "generated/dgl.topological_nodes_generator.rst", "generated/dgl.transforms.AddEdge.rst", "generated/dgl.transforms.AddMetaPaths.rst", "generated/dgl.transforms.AddReverse.rst", "generated/dgl.transforms.AddSelfLoop.rst", "generated/dgl.transforms.BaseTransform.rst", "generated/dgl.transforms.Compose.rst", "generated/dgl.transforms.DropEdge.rst", "generated/dgl.transforms.DropNode.rst", "generated/dgl.transforms.FeatMask.rst", "generated/dgl.transforms.GCNNorm.rst", "generated/dgl.transforms.GDC.rst", "generated/dgl.transforms.HeatKernel.rst", "generated/dgl.transforms.KHopGraph.rst", "generated/dgl.transforms.LapPE.rst", "generated/dgl.transforms.LineGraph.rst", "generated/dgl.transforms.NodeShuffle.rst", "generated/dgl.transforms.PPR.rst", "generated/dgl.transforms.RandomWalkPE.rst", "generated/dgl.transforms.RemoveSelfLoop.rst", "generated/dgl.transforms.RowFeatNormalizer.rst", "generated/dgl.transforms.SIGNDiffusion.rst", "generated/dgl.transforms.SVDPE.rst", "generated/dgl.transforms.ToLevi.rst", "generated/dgl.transforms.ToSimple.rst", "generated/dgl.udf.EdgeBatch.batch_size.rst", "generated/dgl.udf.EdgeBatch.data.rst", "generated/dgl.udf.EdgeBatch.dst.rst", "generated/dgl.udf.EdgeBatch.edges.rst", "generated/dgl.udf.EdgeBatch.src.rst", "generated/dgl.udf.NodeBatch.batch_size.rst", "generated/dgl.udf.NodeBatch.data.rst", "generated/dgl.udf.NodeBatch.mailbox.rst", "generated/dgl.udf.NodeBatch.nodes.rst", "generated/dgl.unbatch.rst", "generated/dgl.use_libxsmm.rst", "graphtransformer/data.rst", "graphtransformer/index.rst", "graphtransformer/model.rst", "guide/data.rst", "guide/data-dataset.rst", "guide/data-download.rst", "guide/data-loadcsv.rst", "guide/data-loadogb.rst", "guide/data-process.rst", "guide/data-savenload.rst", "guide/distributed.rst", "guide/distributed-apis.rst", "guide/distributed-hetero.rst", "guide/distributed-partition.rst", "guide/distributed-preprocessing.rst", "guide/distributed-tools.rst", "guide/graph.rst", "guide/graph-basic.rst", "guide/graph-external.rst", "guide/graph-feature.rst", "guide/graph-gpu.rst", "guide/graph-graphs-nodes-edges.rst", "guide/graph-heterogeneous.rst", "guide/index.rst", "guide/message.rst", "guide/message-api.rst", "guide/message-efficient.rst", "guide/message-heterograph.rst", "guide/message-part.rst", "guide/minibatch.rst", "guide/minibatch-custom-sampler.rst", "guide/minibatch-edge.rst", "guide/minibatch-gpu-sampling.rst", "guide/minibatch-inference.rst", "guide/minibatch-link.rst", "guide/minibatch-nn.rst", "guide/minibatch-node.rst", "guide/minibatch-parallelism.rst", "guide/minibatch-sparse.rst", "guide/mixed_precision.rst", "guide/nn.rst", "guide/nn-construction.rst", "guide/nn-forward.rst", "guide/nn-heterograph.rst", "guide/training.rst", "guide/training-edge.rst", "guide/training-eweight.rst", "guide/training-graph.rst", "guide/training-link.rst", "guide/training-node.rst", "guide_cn/data.rst", "guide_cn/data-dataset.rst", "guide_cn/data-download.rst", "guide_cn/data-loadogb.rst", "guide_cn/data-process.rst", "guide_cn/data-savenload.rst", "guide_cn/distributed.rst", "guide_cn/distributed-apis.rst", "guide_cn/distributed-preprocessing.rst", "guide_cn/distributed-tools.rst", "guide_cn/graph.rst", "guide_cn/graph-basic.rst", "guide_cn/graph-external.rst", "guide_cn/graph-feature.rst", "guide_cn/graph-gpu.rst", "guide_cn/graph-graphs-nodes-edges.rst", "guide_cn/graph-heterogeneous.rst", "guide_cn/index.rst", "guide_cn/message.rst", "guide_cn/message-api.rst", "guide_cn/message-efficient.rst", "guide_cn/message-heterograph.rst", "guide_cn/message-part.rst", "guide_cn/minibatch.rst", "guide_cn/minibatch-custom-sampler.rst", "guide_cn/minibatch-edge.rst", "guide_cn/minibatch-inference.rst", "guide_cn/minibatch-link.rst", "guide_cn/minibatch-nn.rst", "guide_cn/minibatch-node.rst", "guide_cn/nn.rst", "guide_cn/nn-construction.rst", "guide_cn/nn-forward.rst", "guide_cn/nn-heterograph.rst", "guide_cn/training.rst", "guide_cn/training-edge.rst", "guide_cn/training-eweight.rst", "guide_cn/training-graph.rst", "guide_cn/training-link.rst", "guide_cn/training-node.rst", "guide_ko/data.rst", "guide_ko/data-dataset.rst", "guide_ko/data-download.rst", "guide_ko/data-loadogb.rst", "guide_ko/data-process.rst", "guide_ko/data-savenload.rst", "guide_ko/distributed.rst", "guide_ko/distributed-apis.rst", "guide_ko/distributed-hetero.rst", "guide_ko/distributed-preprocessing.rst", "guide_ko/distributed-tools.rst", "guide_ko/graph.rst", "guide_ko/graph-basic.rst", "guide_ko/graph-external.rst", "guide_ko/graph-feature.rst", "guide_ko/graph-gpu.rst", "guide_ko/graph-graphs-nodes-edges.rst", "guide_ko/graph-heterogeneous.rst", "guide_ko/index.rst", "guide_ko/message.rst", "guide_ko/message-api.rst", "guide_ko/message-edge.rst", "guide_ko/message-efficient.rst", "guide_ko/message-heterograph.rst", "guide_ko/message-part.rst", "guide_ko/minibatch.rst", "guide_ko/minibatch-custom-sampler.rst", "guide_ko/minibatch-edge.rst", "guide_ko/minibatch-gpu-sampling.rst", "guide_ko/minibatch-inference.rst", "guide_ko/minibatch-link.rst", "guide_ko/minibatch-nn.rst", "guide_ko/minibatch-node.rst", "guide_ko/mixed_precision.rst", "guide_ko/nn.rst", "guide_ko/nn-construction.rst", "guide_ko/nn-forward.rst", "guide_ko/nn-heterograph.rst", "guide_ko/training.rst", "guide_ko/training-edge.rst", "guide_ko/training-graph.rst", "guide_ko/training-link.rst", "guide_ko/training-node.rst", "index.rst", "install/index.rst", "notebooks/sparse/gcn.nblink", "notebooks/sparse/graph_diffusion.nblink", "notebooks/sparse/graph_transformer.nblink", "notebooks/sparse/hgnn.nblink", "notebooks/sparse/index.rst", "notebooks/sparse/quickstart.nblink", "performance.rst", "resources.rst", "sg_execution_times.rst", "stochastic_training/index.rst", "stochastic_training/link_prediction.nblink", "stochastic_training/multigpu_node_classification.nblink", "stochastic_training/neighbor_sampling_overview.nblink", "stochastic_training/node_classification.nblink", "stochastic_training/ondisk-dataset.rst", "stochastic_training/ondisk-dataset-specification.rst", "stochastic_training/ondisk_dataset_heterograph.nblink", "stochastic_training/ondisk_dataset_homograph.nblink", "tutorials/blitz/1_introduction.ipynb", "tutorials/blitz/2_dglgraph.ipynb", "tutorials/blitz/3_message_passing.ipynb", "tutorials/blitz/4_link_predict.ipynb", "tutorials/blitz/5_graph_classification.ipynb", "tutorials/blitz/6_load_data.ipynb", "tutorials/blitz/index.rst", "tutorials/blitz/sg_execution_times.rst", "tutorials/cpu/argo_tutorial.ipynb", "tutorials/cpu/cpu_best_practises.ipynb", "tutorials/cpu/index.rst", "tutorials/cpu/sg_execution_times.rst", "tutorials/dist/1_node_classification.ipynb", "tutorials/dist/2_link_prediction.ipynb", "tutorials/dist/index.rst", "tutorials/dist/sg_execution_times.rst", "tutorials/models/1_gnn/1_gcn.ipynb", "tutorials/models/1_gnn/4_rgcn.ipynb", "tutorials/models/1_gnn/6_line_graph.ipynb", "tutorials/models/1_gnn/9_gat.ipynb", "tutorials/models/1_gnn/index.rst", "tutorials/models/1_gnn/sg_execution_times.rst", "tutorials/models/2_small_graph/3_tree-lstm.ipynb", "tutorials/models/2_small_graph/index.rst", "tutorials/models/2_small_graph/sg_execution_times.rst", "tutorials/models/3_generative_model/5_dgmg.ipynb", "tutorials/models/3_generative_model/index.rst", "tutorials/models/3_generative_model/sg_execution_times.rst", "tutorials/models/4_old_wines/2_capsule.ipynb", "tutorials/models/4_old_wines/7_transformer.ipynb", "tutorials/models/4_old_wines/index.rst", "tutorials/models/4_old_wines/sg_execution_times.rst", "tutorials/models/index.rst", "tutorials/models/sg_execution_times.rst", "tutorials/multi/1_graph_classification.ipynb", "tutorials/multi/2_node_classification.ipynb", "tutorials/multi/index.rst", "tutorials/multi/sg_execution_times.rst"], "indexentries": {"__getitem__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__getitem__", false]], "__getitem__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__getitem__", false]], "__getitem__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__getitem__", false]], "__getitem__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__getitem__", false]], "__getitem__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__getitem__", false]], "__getitem__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__getitem__", false]], "__getitem__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__getitem__", false]], "__getitem__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__getitem__", false]], "__getitem__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__getitem__", false]], "__getitem__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__getitem__", false]], "__getitem__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__getitem__", false]], "__getitem__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__getitem__", false]], "__getitem__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__getitem__", false]], "__getitem__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__getitem__", false]], "__getitem__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__getitem__", false]], "__getitem__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__getitem__", false]], "__getitem__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__getitem__", false]], "__getitem__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__getitem__", false]], "__getitem__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__getitem__", false]], "__getitem__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__getitem__", false]], "__getitem__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__getitem__", false]], "__getitem__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__getitem__", false]], "__getitem__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__getitem__", false]], "__getitem__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__getitem__", false]], "__getitem__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__getitem__", false]], "__getitem__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__getitem__", false]], "__getitem__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__getitem__", false]], "__getitem__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__getitem__", false]], "__getitem__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__getitem__", false]], "__getitem__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__getitem__", false]], "__getitem__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__getitem__", false]], "__getitem__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__getitem__", false]], "__getitem__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__getitem__", false]], "__getitem__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__getitem__", false]], "__getitem__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__getitem__", false]], "__getitem__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__getitem__", false]], "__getitem__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__getitem__", false]], "__getitem__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__getitem__", false]], "__getitem__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__getitem__", false]], "__getitem__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__getitem__", false]], "__getitem__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__getitem__", false]], "__getitem__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__getitem__", false]], "__getitem__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__getitem__", false]], "__getitem__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__getitem__", false]], "__getitem__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__getitem__", false]], "__getitem__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__getitem__", false]], "__getitem__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__getitem__", false]], "__getitem__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__getitem__", false]], "__getitem__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__getitem__", false]], "__getitem__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__getitem__", false]], "__getitem__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__getitem__", false]], "__getitem__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__getitem__", false]], "__getitem__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__getitem__", false]], "__getitem__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__getitem__", false]], "__getitem__() (dgl.dglgraph method)": [[26, "dgl.DGLGraph.__getitem__", false]], "__init__() (dgl.dataloading.blocksampler method)": [[208, "dgl.dataloading.BlockSampler.__init__", false]], "__init__() (dgl.sampling.pinsagesampler method)": [[558, "dgl.sampling.PinSAGESampler.__init__", false]], "__len__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__len__", false]], "__len__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__len__", false]], "__len__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__len__", false]], "__len__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__len__", false]], "__len__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__len__", false]], "__len__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__len__", false]], "__len__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__len__", false]], "__len__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__len__", false]], "__len__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__len__", false]], "__len__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__len__", false]], "__len__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__len__", false]], "__len__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__len__", false]], "__len__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__len__", false]], "__len__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__len__", false]], "__len__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__len__", false]], "__len__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__len__", false]], "__len__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__len__", false]], "__len__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__len__", false]], "__len__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__len__", false]], "__len__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__len__", false]], "__len__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__len__", false]], "__len__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__len__", false]], "__len__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__len__", false]], "__len__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__len__", false]], "__len__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__len__", false]], "__len__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__len__", false]], "__len__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__len__", false]], "__len__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__len__", false]], "__len__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__len__", false]], "__len__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__len__", false]], "__len__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__len__", false]], "__len__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__len__", false]], "__len__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__len__", false]], "__len__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__len__", false]], "__len__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__len__", false]], "__len__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__len__", false]], "__len__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__len__", false]], "__len__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__len__", false]], "__len__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__len__", false]], "__len__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__len__", false]], "__len__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__len__", false]], "__len__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__len__", false]], "__len__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__len__", false]], "__len__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__len__", false]], "__len__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__len__", false]], "__len__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__len__", false]], "__len__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__len__", false]], "__len__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__len__", false]], "__len__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__len__", false]], "__len__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__len__", false]], "__len__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__len__", false]], "__len__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__len__", false]], "__len__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__len__", false]], "__len__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__len__", false]], "__len__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__len__", false]], "__len__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__len__", false]], "__len__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__len__", false]], "__len__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__len__", false]], "__len__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__len__", false]], "__len__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__len__", false]], "__len__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__len__", false]], "__len__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__len__", false]], "__len__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__len__", false]], "__len__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__len__", false]], "__len__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__len__", false]], "actordataset (class in dgl.data)": [[134, "dgl.data.ActorDataset", false]], "add() (in module dgl.sparse)": [[607, "dgl.sparse.add", false]], "add_edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.add_edge_attribute", false]], "add_edges() (dgl.dglgraph method)": [[27, "dgl.DGLGraph.add_edges", false]], "add_edges() (in module dgl)": [[114, "dgl.add_edges", false]], "add_node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.add_node_attribute", false]], "add_node_property_split (class in dgl.data.utils)": [[197, "dgl.data.utils.add_node_property_split", false]], "add_nodepred_split (class in dgl.data.utils)": [[198, "dgl.data.utils.add_nodepred_split", false]], "add_nodes() (dgl.dglgraph method)": [[28, "dgl.DGLGraph.add_nodes", false]], "add_nodes() (in module dgl)": [[115, "dgl.add_nodes", false]], "add_reverse_edges() (in module dgl)": [[116, "dgl.add_reverse_edges", false]], "add_reverse_edges() (in module dgl.graphbolt)": [[320, "dgl.graphbolt.add_reverse_edges", false]], "add_self_loop() (dgl.dglgraph method)": [[29, "dgl.DGLGraph.add_self_loop", false]], "add_self_loop() (in module dgl)": [[117, "dgl.add_self_loop", false]], "addedge (class in dgl.transforms)": [[648, "dgl.transforms.AddEdge", false]], "addmetapaths (class in dgl.transforms)": [[649, "dgl.transforms.AddMetaPaths", false]], "addreverse (class in dgl.transforms)": [[650, "dgl.transforms.AddReverse", false]], "addselfloop (class in dgl.transforms)": [[651, "dgl.transforms.AddSelfLoop", false]], "adj() (dgl.dglgraph method)": [[30, "dgl.DGLGraph.adj", false]], "adj_external() (dgl.dglgraph method)": [[31, "dgl.DGLGraph.adj_external", false]], "adj_product_graph() (in module dgl)": [[118, "dgl.adj_product_graph", false]], "adj_sum_graph() (in module dgl)": [[119, "dgl.adj_sum_graph", false]], "adj_tensors() (dgl.dglgraph method)": [[32, "dgl.DGLGraph.adj_tensors", false]], "adjacency_matrix() (dgl.dglgraph method)": [[33, "dgl.DGLGraph.adjacency_matrix", false]], "adjusted_homophily() (in module dgl)": [[120, "dgl.adjusted_homophily", false]], "agnnconv (class in dgl.nn.mxnet.conv)": [[359, "dgl.nn.mxnet.conv.AGNNConv", false]], "agnnconv (class in dgl.nn.pytorch.conv)": [[389, "dgl.nn.pytorch.conv.AGNNConv", false]], "aifbdataset (class in dgl.data)": [[132, "dgl.data.AIFBDataset", false]], "all_nodes_set (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.all_nodes_set", false]], "amazoncobuycomputerdataset (class in dgl.data)": [[135, "dgl.data.AmazonCoBuyComputerDataset", false]], "amazoncobuyphotodataset (class in dgl.data)": [[136, "dgl.data.AmazonCoBuyPhotoDataset", false]], "amazonratingsdataset (class in dgl.data)": [[137, "dgl.data.AmazonRatingsDataset", false]], "amdataset (class in dgl.data)": [[133, "dgl.data.AMDataset", false]], "apply_each() (in module dgl)": [[121, "dgl.apply_each", false]], "apply_edges() (dgl.dglgraph method)": [[34, "dgl.DGLGraph.apply_edges", false]], "apply_nodes() (dgl.dglgraph method)": [[35, "dgl.DGLGraph.apply_nodes", false]], "appnpconv (class in dgl.nn.mxnet.conv)": [[360, "dgl.nn.mxnet.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.pytorch.conv)": [[390, "dgl.nn.pytorch.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.tensorflow.conv)": [[460, "dgl.nn.tensorflow.conv.APPNPConv", false]], "as_edge_prediction_sampler() (in module dgl.dataloading)": [[220, "dgl.dataloading.as_edge_prediction_sampler", false]], "asgraphpreddataset (class in dgl.data)": [[138, "dgl.data.AsGraphPredDataset", false]], "aslinkpreddataset (class in dgl.data)": [[139, "dgl.data.AsLinkPredDataset", false]], "asnodepreddataset (class in dgl.data)": [[140, "dgl.data.AsNodePredDataset", false]], "atomicconv (class in dgl.nn.pytorch.conv)": [[391, "dgl.nn.pytorch.conv.AtomicConv", false]], "avgpooling (class in dgl.nn.mxnet.glob)": [[376, "dgl.nn.mxnet.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.pytorch.glob)": [[435, "dgl.nn.pytorch.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.tensorflow.glob)": [[468, "dgl.nn.tensorflow.glob.AvgPooling", false]], "ba2motifdataset (class in dgl.data)": [[141, "dgl.data.BA2MotifDataset", false]], "bacommunitydataset (class in dgl.data)": [[142, "dgl.data.BACommunityDataset", false]], "barrier() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.barrier", false]], "basetransform (class in dgl.transforms)": [[652, "dgl.transforms.BaseTransform", false]], "bashapedataset (class in dgl.data)": [[143, "dgl.data.BAShapeDataset", false]], "basicfeaturestore (class in dgl.graphbolt)": [[288, "dgl.graphbolt.BasicFeatureStore", false]], "batch() (in module dgl)": [[122, "dgl.batch", false]], "batch_num_edges() (dgl.dglgraph method)": [[36, "dgl.DGLGraph.batch_num_edges", false]], "batch_num_nodes() (dgl.dglgraph method)": [[37, "dgl.DGLGraph.batch_num_nodes", false]], "batch_size (dgl.dglgraph property)": [[38, "dgl.DGLGraph.batch_size", false]], "batch_size() (dgl.udf.edgebatch method)": [[672, "dgl.udf.EdgeBatch.batch_size", false]], "batch_size() (dgl.udf.nodebatch method)": [[677, "dgl.udf.NodeBatch.batch_size", false]], "bfs_edges_generator() (in module dgl)": [[123, "dgl.bfs_edges_generator", false]], "bfs_nodes_generator() (in module dgl)": [[124, "dgl.bfs_nodes_generator", false]], "bgsdataset (class in dgl.data)": [[144, "dgl.data.BGSDataset", false]], "bias (dgl.nn.pytorch.conv.graphconv attribute)": [[415, "dgl.nn.pytorch.conv.GraphConv.bias", false]], "biasedmha (class in dgl.nn.pytorch.gt)": [[444, "dgl.nn.pytorch.gt.BiasedMHA", false]], "bipartite_from_networkx() (in module dgl)": [[125, "dgl.bipartite_from_networkx", false]], "bipartite_from_scipy() (in module dgl)": [[126, "dgl.bipartite_from_scipy", false]], "bitcoinotcdataset (class in dgl.data)": [[145, "dgl.data.BitcoinOTCDataset", false]], "block_to_graph() (in module dgl)": [[127, "dgl.block_to_graph", false]], "blocks (dgl.graphbolt.minibatch property)": [[305, "dgl.graphbolt.MiniBatch.blocks", false]], "blocksampler (class in dgl.dataloading)": [[208, "dgl.dataloading.BlockSampler", false]], "broadcast_edges() (in module dgl)": [[128, "dgl.broadcast_edges", false]], "broadcast_nodes() (in module dgl)": [[129, "dgl.broadcast_nodes", false]], "bsddmm() (in module dgl.sparse)": [[608, "dgl.sparse.bsddmm", false]], "bspmm() (in module dgl.sparse)": [[609, "dgl.sparse.bspmm", false]], "builtindataset (class in dgl.graphbolt)": [[289, "dgl.graphbolt.BuiltinDataset", false]], "call_once_and_share() (in module dgl.multiprocessing.pytorch)": [[355, "dgl.multiprocessing.pytorch.call_once_and_share", false]], "canonical_etypes (dgl.dglgraph property)": [[39, "dgl.DGLGraph.canonical_etypes", false]], "canonical_etypes (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.canonical_etypes", false]], "cfconv (class in dgl.nn.pytorch.conv)": [[392, "dgl.nn.pytorch.conv.CFConv", false]], "chameleondataset (class in dgl.data)": [[149, "dgl.data.ChameleonDataset", false]], "chebconv (class in dgl.nn.mxnet.conv)": [[361, "dgl.nn.mxnet.conv.ChebConv", false]], "chebconv (class in dgl.nn.pytorch.conv)": [[393, "dgl.nn.pytorch.conv.ChebConv", false]], "chebconv (class in dgl.nn.tensorflow.conv)": [[461, "dgl.nn.tensorflow.conv.ChebConv", false]], "check_sha1 (class in dgl.data.utils)": [[199, "dgl.data.utils.check_sha1", false]], "cifar10superpixeldataset (class in dgl.data)": [[146, "dgl.data.CIFAR10SuperPixelDataset", false]], "citeseergraphdataset (class in dgl.data)": [[150, "dgl.data.CiteseerGraphDataset", false]], "clusterdataset (class in dgl.data)": [[147, "dgl.data.CLUSTERDataset", false]], "clustergcnsampler (class in dgl.dataloading)": [[209, "dgl.dataloading.ClusterGCNSampler", false]], "coalesce() (dgl.sparse.sparsematrix method)": [[577, "dgl.sparse.SparseMatrix.coalesce", false]], "coauthorcsdataset (class in dgl.data)": [[151, "dgl.data.CoauthorCSDataset", false]], "coauthorphysicsdataset (class in dgl.data)": [[152, "dgl.data.CoauthorPhysicsDataset", false]], "col (dgl.sparse.sparsematrix property)": [[578, "dgl.sparse.SparseMatrix.col", false]], "collate_fn() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.collate_fn", false]], "compact_csc_format() (in module dgl.graphbolt)": [[321, "dgl.graphbolt.compact_csc_format", false]], "compact_graphs() (in module dgl)": [[130, "dgl.compact_graphs", false]], "compacted_seeds (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.compacted_seeds", false]], "compose (class in dgl.transforms)": [[653, "dgl.transforms.Compose", false]], "compute_blocks() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.compute_blocks", false]], "coo() (dgl.sparse.sparsematrix method)": [[579, "dgl.sparse.SparseMatrix.coo", false]], "copy_e() (in module dgl.function)": [[251, "dgl.function.copy_e", false]], "copy_e_max() (in module dgl.ops)": [[479, "dgl.ops.copy_e_max", false]], "copy_e_mean() (in module dgl.ops)": [[480, "dgl.ops.copy_e_mean", false]], "copy_e_min() (in module dgl.ops)": [[481, "dgl.ops.copy_e_min", false]], "copy_e_sum() (in module dgl.ops)": [[482, "dgl.ops.copy_e_sum", false]], "copy_to_shared_memory() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.copy_to_shared_memory", false]], "copy_to_shared_memory() (dgl.graphbolt.samplinggraph method)": [[312, "dgl.graphbolt.SamplingGraph.copy_to_shared_memory", false]], "copy_u() (in module dgl.function)": [[252, "dgl.function.copy_u", false]], "copy_u() (in module dgl.ops)": [[483, "dgl.ops.copy_u", false]], "copy_u_max() (in module dgl.ops)": [[484, "dgl.ops.copy_u_max", false]], "copy_u_mean() (in module dgl.ops)": [[485, "dgl.ops.copy_u_mean", false]], "copy_u_min() (in module dgl.ops)": [[486, "dgl.ops.copy_u_min", false]], "copy_u_sum() (in module dgl.ops)": [[487, "dgl.ops.copy_u_sum", false]], "copy_v() (in module dgl.ops)": [[488, "dgl.ops.copy_v", false]], "copyto (class in dgl.graphbolt)": [[290, "dgl.graphbolt.CopyTo", false]], "corafulldataset (class in dgl.data)": [[153, "dgl.data.CoraFullDataset", false]], "coragraphdataset (class in dgl.data)": [[154, "dgl.data.CoraGraphDataset", false]], "cornelldataset (class in dgl.data)": [[155, "dgl.data.CornellDataset", false]], "cpu() (dgl.dglgraph method)": [[40, "dgl.DGLGraph.cpu", false]], "cpu() (dgl.sparse.sparsematrix method)": [[580, "dgl.sparse.SparseMatrix.cpu", false]], "create_block() (in module dgl)": [[131, "dgl.create_block", false]], "create_formats_() (dgl.dglgraph method)": [[41, "dgl.DGLGraph.create_formats_", false]], "csc() (dgl.sparse.sparsematrix method)": [[581, "dgl.sparse.SparseMatrix.csc", false]], "csc_indptr (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.csc_indptr", false]], "csr() (dgl.sparse.sparsematrix method)": [[582, "dgl.sparse.SparseMatrix.csr", false]], "csvdataset (class in dgl.data)": [[148, "dgl.data.CSVDataset", false]], "cuda() (dgl.sparse.sparsematrix method)": [[583, "dgl.sparse.SparseMatrix.cuda", false]], "cugraphgatconv (class in dgl.nn.pytorch.conv)": [[394, "dgl.nn.pytorch.conv.CuGraphGATConv", false]], "cugraphrelgraphconv (class in dgl.nn.pytorch.conv)": [[395, "dgl.nn.pytorch.conv.CuGraphRelGraphConv", false]], "cugraphsageconv (class in dgl.nn.pytorch.conv)": [[396, "dgl.nn.pytorch.conv.CuGraphSAGEConv", false]], "data (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.data", false]], "data (dgl.udf.edgebatch property)": [[673, "dgl.udf.EdgeBatch.data", false]], "data (dgl.udf.nodebatch property)": [[678, "dgl.udf.NodeBatch.data", false]], "dataloader (class in dgl.dataloading)": [[210, "dgl.dataloading.DataLoader", false]], "dataloader (class in dgl.graphbolt)": [[291, "dgl.graphbolt.DataLoader", false]], "dataset (class in dgl.graphbolt)": [[292, "dgl.graphbolt.Dataset", false]], "dataset_name (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.dataset_name", false]], "dataset_name (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.dataset_name", false]], "dataset_name (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.dataset_name", false]], "deepwalk (class in dgl.nn.pytorch)": [[383, "dgl.nn.pytorch.DeepWalk", false]], "degreeencoder (class in dgl.nn.pytorch.gt)": [[445, "dgl.nn.pytorch.gt.DegreeEncoder", false]], "densechebconv (class in dgl.nn.mxnet.conv)": [[362, "dgl.nn.mxnet.conv.DenseChebConv", false]], "densechebconv (class in dgl.nn.pytorch.conv)": [[398, "dgl.nn.pytorch.conv.DenseChebConv", false]], "densegraphconv (class in dgl.nn.mxnet.conv)": [[363, "dgl.nn.mxnet.conv.DenseGraphConv", false]], "densegraphconv (class in dgl.nn.pytorch.conv)": [[399, "dgl.nn.pytorch.conv.DenseGraphConv", false]], "densesageconv (class in dgl.nn.mxnet.conv)": [[364, "dgl.nn.mxnet.conv.DenseSAGEConv", false]], "densesageconv (class in dgl.nn.pytorch.conv)": [[400, "dgl.nn.pytorch.conv.DenseSAGEConv", false]], "device (dgl.dglgraph property)": [[42, "dgl.DGLGraph.device", false]], "device (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.device", false]], "device (dgl.sparse.sparsematrix property)": [[584, "dgl.sparse.SparseMatrix.device", false]], "dfs_edges_generator() (in module dgl)": [[229, "dgl.dfs_edges_generator", false]], "dfs_labeled_edges_generator() (in module dgl)": [[230, "dgl.dfs_labeled_edges_generator", false]], "dgl": [[0, "module-dgl", false]], "dgl.data": [[2, "module-dgl.data", false]], "dgl.geometry": [[6, "module-dgl.geometry", false]], "dgl.nn.functional": [[18, "module-dgl.nn.functional", false]], "dgl.optim": [[10, "module-dgl.optim", false]], "dgl.sampling": [[11, "module-dgl.sampling", false]], "dgl.transforms": [[19, "module-dgl.transforms", false]], "dgl_partition_to_graphbolt() (in module dgl.distributed)": [[231, "dgl.distributed.dgl_partition_to_graphbolt", false]], "dgldataset (class in dgl.data)": [[156, "dgl.data.DGLDataset", false]], "dglgraph (class in dgl)": [[1, "dgl.DGLGraph", false]], "dgnconv (class in dgl.nn.pytorch.conv)": [[397, "dgl.nn.pytorch.conv.DGNConv", false]], "diag() (in module dgl.sparse)": [[610, "dgl.sparse.diag", false]], "distdataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistDataLoader", false]], "distedgedataloader (class in dgl.dataloading)": [[211, "dgl.dataloading.DistEdgeDataLoader", false]], "distembedding (class in dgl.distributed)": [[4, "dgl.distributed.DistEmbedding", false]], "distgraph (class in dgl.distributed)": [[4, "dgl.distributed.DistGraph", false]], "distnodedataloader (class in dgl.dataloading)": [[212, "dgl.dataloading.DistNodeDataLoader", false]], "distributeditemsampler (class in dgl.graphbolt)": [[293, "dgl.graphbolt.DistributedItemSampler", false]], "disttensor (class in dgl.distributed)": [[4, "dgl.distributed.DistTensor", false]], "div() (in module dgl.sparse)": [[611, "dgl.sparse.div", false]], "dotgatconv (class in dgl.nn.pytorch.conv)": [[401, "dgl.nn.pytorch.conv.DotGatConv", false]], "double() (dgl.sparse.sparsematrix method)": [[585, "dgl.sparse.SparseMatrix.double", false]], "double_radius_node_labeling() (in module dgl)": [[243, "dgl.double_radius_node_labeling", false]], "download (class in dgl.data.utils)": [[200, "dgl.data.utils.download", false]], "dropedge (class in dgl.transforms)": [[654, "dgl.transforms.DropEdge", false]], "dropnode (class in dgl.transforms)": [[655, "dgl.transforms.DropNode", false]], "dst (dgl.udf.edgebatch property)": [[674, "dgl.udf.EdgeBatch.dst", false]], "dstdata (dgl.dglgraph property)": [[43, "dgl.DGLGraph.dstdata", false]], "dstnodes (dgl.dglgraph property)": [[44, "dgl.DGLGraph.dstnodes", false]], "dsttypes (dgl.dglgraph property)": [[45, "dgl.DGLGraph.dsttypes", false]], "dtype (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.dtype", false]], "dtype (dgl.sparse.sparsematrix property)": [[586, "dgl.sparse.SparseMatrix.dtype", false]], "e_add_u() (in module dgl.function)": [[253, "dgl.function.e_add_u", false]], "e_add_u() (in module dgl.ops)": [[489, "dgl.ops.e_add_u", false]], "e_add_v() (in module dgl.function)": [[254, "dgl.function.e_add_v", false]], "e_add_v() (in module dgl.ops)": [[490, "dgl.ops.e_add_v", false]], "e_div_u() (in module dgl.function)": [[255, "dgl.function.e_div_u", false]], "e_div_u() (in module dgl.ops)": [[491, "dgl.ops.e_div_u", false]], "e_div_v() (in module dgl.function)": [[256, "dgl.function.e_div_v", false]], "e_div_v() (in module dgl.ops)": [[492, "dgl.ops.e_div_v", false]], "e_dot_u() (in module dgl.function)": [[257, "dgl.function.e_dot_u", false]], "e_dot_u() (in module dgl.ops)": [[493, "dgl.ops.e_dot_u", false]], "e_dot_v() (in module dgl.function)": [[258, "dgl.function.e_dot_v", false]], "e_dot_v() (in module dgl.ops)": [[494, "dgl.ops.e_dot_v", false]], "e_mul_u() (in module dgl.function)": [[259, "dgl.function.e_mul_u", false]], "e_mul_u() (in module dgl.ops)": [[495, "dgl.ops.e_mul_u", false]], "e_mul_v() (in module dgl.function)": [[260, "dgl.function.e_mul_v", false]], "e_mul_v() (in module dgl.ops)": [[496, "dgl.ops.e_mul_v", false]], "e_sub_u() (in module dgl.function)": [[261, "dgl.function.e_sub_u", false]], "e_sub_u() (in module dgl.ops)": [[497, "dgl.ops.e_sub_u", false]], "e_sub_v() (in module dgl.function)": [[262, "dgl.function.e_sub_v", false]], "e_sub_v() (in module dgl.ops)": [[498, "dgl.ops.e_sub_v", false]], "edata (dgl.dglgraph property)": [[46, "dgl.DGLGraph.edata", false]], "edata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edata", false]], "edge_attr_schemes() (dgl.dglgraph method)": [[47, "dgl.DGLGraph.edge_attr_schemes", false]], "edge_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.edge_attr_schemes", false]], "edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attribute", false]], "edge_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attributes", false]], "edge_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.edge_feat_size", false]], "edge_features (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.edge_features", false]], "edge_homophily() (in module dgl)": [[244, "dgl.edge_homophily", false]], "edge_ids() (dgl.dglgraph method)": [[48, "dgl.DGLGraph.edge_ids", false]], "edge_ids() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.edge_ids", false]], "edge_label_informativeness() (in module dgl)": [[245, "dgl.edge_label_informativeness", false]], "edge_softmax() (in module dgl.nn.functional)": [[357, "dgl.nn.functional.edge_softmax", false]], "edge_split() (in module dgl.distributed)": [[232, "dgl.distributed.edge_split", false]], "edge_subgraph() (dgl.dglgraph method)": [[49, "dgl.DGLGraph.edge_subgraph", false]], "edge_subgraph() (in module dgl)": [[246, "dgl.edge_subgraph", false]], "edge_type_subgraph() (dgl.dglgraph method)": [[50, "dgl.DGLGraph.edge_type_subgraph", false]], "edge_type_subgraph() (in module dgl)": [[247, "dgl.edge_type_subgraph", false]], "edge_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.edge_type_to_id", false]], "edgeconv (class in dgl.nn.mxnet.conv)": [[365, "dgl.nn.mxnet.conv.EdgeConv", false]], "edgeconv (class in dgl.nn.pytorch.conv)": [[404, "dgl.nn.pytorch.conv.EdgeConv", false]], "edgegatconv (class in dgl.nn.pytorch.conv)": [[405, "dgl.nn.pytorch.conv.EdgeGATConv", false]], "edgepredictor (class in dgl.nn.pytorch.link)": [[452, "dgl.nn.pytorch.link.EdgePredictor", false]], "edges (dgl.dglgraph property)": [[51, "dgl.DGLGraph.edges", false]], "edges (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edges", false]], "edges() (dgl.udf.edgebatch method)": [[675, "dgl.udf.EdgeBatch.edges", false]], "edgeweightnorm (class in dgl.nn.pytorch.conv)": [[406, "dgl.nn.pytorch.conv.EdgeWeightNorm", false]], "egatconv (class in dgl.nn.pytorch.conv)": [[402, "dgl.nn.pytorch.conv.EGATConv", false]], "egnnconv (class in dgl.nn.pytorch.conv)": [[403, "dgl.nn.pytorch.conv.EGNNConv", false]], "egtlayer (class in dgl.nn.pytorch.gt)": [[446, "dgl.nn.pytorch.gt.EGTLayer", false]], "eid2localeid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2localeid", false]], "eid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2partid", false]], "end_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.end_time", false]], "etype_str_to_tuple() (in module dgl.graphbolt)": [[322, "dgl.graphbolt.etype_str_to_tuple", false]], "etype_tuple_to_str() (in module dgl.graphbolt)": [[323, "dgl.graphbolt.etype_tuple_to_str", false]], "etypes (dgl.dglgraph property)": [[52, "dgl.DGLGraph.etypes", false]], "etypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.etypes", false]], "exclude_edges() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.exclude_edges", false]], "exclude_seed_edges() (in module dgl.graphbolt)": [[324, "dgl.graphbolt.exclude_seed_edges", false]], "expand_indptr() (in module dgl.graphbolt)": [[325, "dgl.graphbolt.expand_indptr", false]], "explain_graph() (dgl.nn.pytorch.explain.gnnexplainer method)": [[426, "dgl.nn.pytorch.explain.GNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[427, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[428, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[429, "dgl.nn.pytorch.explain.HeteroSubgraphX.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.pgexplainer method)": [[430, "dgl.nn.pytorch.explain.PGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.subgraphx method)": [[431, "dgl.nn.pytorch.explain.SubgraphX.explain_graph", false]], "explain_node() (dgl.nn.pytorch.explain.gnnexplainer method)": [[426, "dgl.nn.pytorch.explain.GNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[427, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[428, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[430, "dgl.nn.pytorch.explain.PGExplainer.explain_node", false]], "extract_archive (class in dgl.data.utils)": [[201, "dgl.data.utils.extract_archive", false]], "fakenewsdataset (class in dgl.data)": [[159, "dgl.data.FakeNewsDataset", false]], "farthest_point_sampler (class in dgl.geometry)": [[6, "dgl.geometry.farthest_point_sampler", false]], "fb15k237dataset (class in dgl.data)": [[157, "dgl.data.FB15k237Dataset", false]], "fb15kdataset (class in dgl.data)": [[158, "dgl.data.FB15kDataset", false]], "feat_size (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.feat_size", false]], "featmask (class in dgl.transforms)": [[656, "dgl.transforms.FeatMask", false]], "feature (class in dgl.graphbolt)": [[294, "dgl.graphbolt.Feature", false]], "feature (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature", false]], "feature (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.feature", false]], "feature (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.feature", false]], "feature (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.feature", false]], "feature_name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature_name", false]], "featurefetcher (class in dgl.graphbolt)": [[295, "dgl.graphbolt.FeatureFetcher", false]], "features (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.features", false]], "featurestore (class in dgl.graphbolt)": [[296, "dgl.graphbolt.FeatureStore", false]], "filter_edges() (dgl.dglgraph method)": [[53, "dgl.DGLGraph.filter_edges", false]], "filter_nodes() (dgl.dglgraph method)": [[54, "dgl.DGLGraph.filter_nodes", false]], "find_edges() (dgl.dglgraph method)": [[55, "dgl.DGLGraph.find_edges", false]], "find_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.find_edges", false]], "find_edges() (in module dgl.distributed)": [[233, "dgl.distributed.find_edges", false]], "flickrdataset (class in dgl.data)": [[160, "dgl.data.FlickrDataset", false]], "float() (dgl.sparse.sparsematrix method)": [[587, "dgl.sparse.SparseMatrix.float", false]], "formats() (dgl.dglgraph method)": [[56, "dgl.DGLGraph.formats", false]], "forward() (dgl.nn.pytorch.conv.agnnconv method)": [[389, "dgl.nn.pytorch.conv.AGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.appnpconv method)": [[390, "dgl.nn.pytorch.conv.APPNPConv.forward", false]], "forward() (dgl.nn.pytorch.conv.atomicconv method)": [[391, "dgl.nn.pytorch.conv.AtomicConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cfconv method)": [[392, "dgl.nn.pytorch.conv.CFConv.forward", false]], "forward() (dgl.nn.pytorch.conv.chebconv method)": [[393, "dgl.nn.pytorch.conv.ChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[394, "dgl.nn.pytorch.conv.CuGraphGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[395, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[396, "dgl.nn.pytorch.conv.CuGraphSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densechebconv method)": [[398, "dgl.nn.pytorch.conv.DenseChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densegraphconv method)": [[399, "dgl.nn.pytorch.conv.DenseGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densesageconv method)": [[400, "dgl.nn.pytorch.conv.DenseSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dgnconv method)": [[397, "dgl.nn.pytorch.conv.DGNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dotgatconv method)": [[401, "dgl.nn.pytorch.conv.DotGatConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeconv method)": [[404, "dgl.nn.pytorch.conv.EdgeConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgegatconv method)": [[405, "dgl.nn.pytorch.conv.EdgeGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeweightnorm method)": [[406, "dgl.nn.pytorch.conv.EdgeWeightNorm.forward", false]], "forward() (dgl.nn.pytorch.conv.egatconv method)": [[402, "dgl.nn.pytorch.conv.EGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.egnnconv method)": [[403, "dgl.nn.pytorch.conv.EGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatconv method)": [[407, "dgl.nn.pytorch.conv.GATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgcnconv method)": [[413, "dgl.nn.pytorch.conv.GatedGCNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[414, "dgl.nn.pytorch.conv.GatedGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatv2conv method)": [[408, "dgl.nn.pytorch.conv.GATv2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.gcn2conv method)": [[409, "dgl.nn.pytorch.conv.GCN2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.ginconv method)": [[410, "dgl.nn.pytorch.conv.GINConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gineconv method)": [[411, "dgl.nn.pytorch.conv.GINEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gmmconv method)": [[412, "dgl.nn.pytorch.conv.GMMConv.forward", false]], "forward() (dgl.nn.pytorch.conv.graphconv method)": [[415, "dgl.nn.pytorch.conv.GraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.grouprevres method)": [[416, "dgl.nn.pytorch.conv.GroupRevRes.forward", false]], "forward() (dgl.nn.pytorch.conv.hgtconv method)": [[417, "dgl.nn.pytorch.conv.HGTConv.forward", false]], "forward() (dgl.nn.pytorch.conv.nnconv method)": [[418, "dgl.nn.pytorch.conv.NNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.pnaconv method)": [[419, "dgl.nn.pytorch.conv.PNAConv.forward", false]], "forward() (dgl.nn.pytorch.conv.relgraphconv method)": [[420, "dgl.nn.pytorch.conv.RelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sageconv method)": [[421, "dgl.nn.pytorch.conv.SAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sgconv method)": [[422, "dgl.nn.pytorch.conv.SGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.tagconv method)": [[423, "dgl.nn.pytorch.conv.TAGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsconv method)": [[424, "dgl.nn.pytorch.conv.TWIRLSConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsunfoldingandattention method)": [[425, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.forward", false]], "forward() (dgl.nn.pytorch.deepwalk method)": [[383, "dgl.nn.pytorch.DeepWalk.forward", false]], "forward() (dgl.nn.pytorch.explain.gnnexplainer method)": [[426, "dgl.nn.pytorch.explain.GNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[427, "dgl.nn.pytorch.explain.HeteroGNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[428, "dgl.nn.pytorch.explain.HeteroPGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[429, "dgl.nn.pytorch.explain.HeteroSubgraphX.forward", false]], "forward() (dgl.nn.pytorch.explain.pgexplainer method)": [[430, "dgl.nn.pytorch.explain.PGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.subgraphx method)": [[431, "dgl.nn.pytorch.explain.SubgraphX.forward", false]], "forward() (dgl.nn.pytorch.factory.knngraph method)": [[432, "dgl.nn.pytorch.factory.KNNGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.radiusgraph method)": [[433, "dgl.nn.pytorch.factory.RadiusGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.segmentedknngraph method)": [[434, "dgl.nn.pytorch.factory.SegmentedKNNGraph.forward", false]], "forward() (dgl.nn.pytorch.glob.avgpooling method)": [[435, "dgl.nn.pytorch.glob.AvgPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.globalattentionpooling method)": [[436, "dgl.nn.pytorch.glob.GlobalAttentionPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.maxpooling method)": [[437, "dgl.nn.pytorch.glob.MaxPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.set2set method)": [[438, "dgl.nn.pytorch.glob.Set2Set.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerdecoder method)": [[439, "dgl.nn.pytorch.glob.SetTransformerDecoder.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerencoder method)": [[440, "dgl.nn.pytorch.glob.SetTransformerEncoder.forward", false]], "forward() (dgl.nn.pytorch.glob.sortpooling method)": [[441, "dgl.nn.pytorch.glob.SortPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.sumpooling method)": [[442, "dgl.nn.pytorch.glob.SumPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.weightandsum method)": [[443, "dgl.nn.pytorch.glob.WeightAndSum.forward", false]], "forward() (dgl.nn.pytorch.gt.biasedmha method)": [[444, "dgl.nn.pytorch.gt.BiasedMHA.forward", false]], "forward() (dgl.nn.pytorch.gt.degreeencoder method)": [[445, "dgl.nn.pytorch.gt.DegreeEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.egtlayer method)": [[446, "dgl.nn.pytorch.gt.EGTLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.graphormerlayer method)": [[447, "dgl.nn.pytorch.gt.GraphormerLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.lapposencoder method)": [[448, "dgl.nn.pytorch.gt.LapPosEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.pathencoder method)": [[449, "dgl.nn.pytorch.gt.PathEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder method)": [[450, "dgl.nn.pytorch.gt.SpatialEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder3d method)": [[451, "dgl.nn.pytorch.gt.SpatialEncoder3d.forward", false]], "forward() (dgl.nn.pytorch.heteroembedding method)": [[384, "dgl.nn.pytorch.HeteroEmbedding.forward", false]], "forward() (dgl.nn.pytorch.heterographconv method)": [[385, "dgl.nn.pytorch.HeteroGraphConv.forward", false]], "forward() (dgl.nn.pytorch.heterolinear method)": [[386, "dgl.nn.pytorch.HeteroLinear.forward", false]], "forward() (dgl.nn.pytorch.link.edgepredictor method)": [[452, "dgl.nn.pytorch.link.EdgePredictor.forward", false]], "forward() (dgl.nn.pytorch.link.transe method)": [[453, "dgl.nn.pytorch.link.TransE.forward", false]], "forward() (dgl.nn.pytorch.link.transr method)": [[454, "dgl.nn.pytorch.link.TransR.forward", false]], "forward() (dgl.nn.pytorch.metapath2vec method)": [[387, "dgl.nn.pytorch.MetaPath2Vec.forward", false]], "forward() (dgl.nn.pytorch.typedlinear method)": [[388, "dgl.nn.pytorch.TypedLinear.forward", false]], "forward() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[456, "dgl.nn.pytorch.utils.JumpingKnowledge.forward", false]], "forward() (dgl.nn.pytorch.utils.labelpropagation method)": [[457, "dgl.nn.pytorch.utils.LabelPropagation.forward", false]], "forward() (dgl.nn.pytorch.utils.sequential method)": [[458, "dgl.nn.pytorch.utils.Sequential.forward", false]], "forward() (dgl.nn.pytorch.utils.weightbasis method)": [[459, "dgl.nn.pytorch.utils.WeightBasis.forward", false]], "fraudamazondataset (class in dgl.data)": [[161, "dgl.data.FraudAmazonDataset", false]], "frauddataset (class in dgl.data)": [[162, "dgl.data.FraudDataset", false]], "fraudyelpdataset (class in dgl.data)": [[163, "dgl.data.FraudYelpDataset", false]], "from_coo() (in module dgl.sparse)": [[612, "dgl.sparse.from_coo", false]], "from_csc() (in module dgl.sparse)": [[613, "dgl.sparse.from_csc", false]], "from_csr() (in module dgl.sparse)": [[614, "dgl.sparse.from_csr", false]], "from_cugraph() (in module dgl)": [[248, "dgl.from_cugraph", false]], "from_dglgraph() (in module dgl.graphbolt)": [[326, "dgl.graphbolt.from_dglgraph", false]], "from_networkx() (in module dgl)": [[249, "dgl.from_networkx", false]], "from_scipy() (in module dgl)": [[250, "dgl.from_scipy", false]], "fused_csc_sampling_graph() (in module dgl.graphbolt)": [[327, "dgl.graphbolt.fused_csc_sampling_graph", false]], "fusedcscsamplinggraph (class in dgl.graphbolt)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph", false]], "gatconv (class in dgl.nn.mxnet.conv)": [[366, "dgl.nn.mxnet.conv.GATConv", false]], "gatconv (class in dgl.nn.pytorch.conv)": [[407, "dgl.nn.pytorch.conv.GATConv", false]], "gatconv (class in dgl.nn.tensorflow.conv)": [[462, "dgl.nn.tensorflow.conv.GATConv", false]], "gatedgcnconv (class in dgl.nn.pytorch.conv)": [[413, "dgl.nn.pytorch.conv.GatedGCNConv", false]], "gatedgraphconv (class in dgl.nn.mxnet.conv)": [[369, "dgl.nn.mxnet.conv.GatedGraphConv", false]], "gatedgraphconv (class in dgl.nn.pytorch.conv)": [[414, "dgl.nn.pytorch.conv.GatedGraphConv", false]], "gather_mm() (in module dgl.ops)": [[499, "dgl.ops.gather_mm", false]], "gatv2conv (class in dgl.nn.pytorch.conv)": [[408, "dgl.nn.pytorch.conv.GATv2Conv", false]], "gcn2conv (class in dgl.nn.pytorch.conv)": [[409, "dgl.nn.pytorch.conv.GCN2Conv", false]], "gcnnorm (class in dgl.transforms)": [[657, "dgl.transforms.GCNNorm", false]], "gdc (class in dgl.transforms)": [[658, "dgl.transforms.GDC", false]], "gdeltdataset (class in dgl.data)": [[164, "dgl.data.GDELTDataset", false]], "get_download_dir (class in dgl.data.utils)": [[202, "dgl.data.utils.get_download_dir", false]], "get_edge_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_edge_partition_policy", false]], "get_etype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_etype_id", false]], "get_node_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_node_partition_policy", false]], "get_ntype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_ntype_id", false]], "get_part_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_part_size", false]], "get_partition_book() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_partition_book", false]], "get_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_size", false]], "ginconv (class in dgl.nn.mxnet.conv)": [[367, "dgl.nn.mxnet.conv.GINConv", false]], "ginconv (class in dgl.nn.pytorch.conv)": [[410, "dgl.nn.pytorch.conv.GINConv", false]], "ginconv (class in dgl.nn.tensorflow.conv)": [[463, "dgl.nn.tensorflow.conv.GINConv", false]], "gindataset (class in dgl.data)": [[165, "dgl.data.GINDataset", false]], "gineconv (class in dgl.nn.pytorch.conv)": [[411, "dgl.nn.pytorch.conv.GINEConv", false]], "global_uniform_negative_sampling() (in module dgl.sampling)": [[559, "dgl.sampling.global_uniform_negative_sampling", false]], "globalattentionpooling (class in dgl.nn.mxnet.glob)": [[377, "dgl.nn.mxnet.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.pytorch.glob)": [[436, "dgl.nn.pytorch.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.tensorflow.glob)": [[469, "dgl.nn.tensorflow.glob.GlobalAttentionPooling", false]], "globaluniform (class in dgl.dataloading.negative_sampler)": [[226, "dgl.dataloading.negative_sampler.GlobalUniform", false]], "gmmconv (class in dgl.nn.mxnet.conv)": [[368, "dgl.nn.mxnet.conv.GMMConv", false]], "gmmconv (class in dgl.nn.pytorch.conv)": [[412, "dgl.nn.pytorch.conv.GMMConv", false]], "gnnexplainer (class in dgl.nn.pytorch.explain)": [[426, "dgl.nn.pytorch.explain.GNNExplainer", false]], "gpucachedfeature (class in dgl.graphbolt)": [[298, "dgl.graphbolt.GPUCachedFeature", false]], "graph (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.graph", false]], "graph (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.graph", false]], "graph (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.graph", false]], "graph (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.graph", false]], "graph (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.graph", false]], "graph() (in module dgl)": [[287, "dgl.graph", false]], "graphconv (class in dgl.nn.mxnet.conv)": [[370, "dgl.nn.mxnet.conv.GraphConv", false]], "graphconv (class in dgl.nn.pytorch.conv)": [[415, "dgl.nn.pytorch.conv.GraphConv", false]], "graphconv (class in dgl.nn.tensorflow.conv)": [[464, "dgl.nn.tensorflow.conv.GraphConv", false]], "graphdataloader (class in dgl.dataloading)": [[213, "dgl.dataloading.GraphDataLoader", false]], "graphormerlayer (class in dgl.nn.pytorch.gt)": [[447, "dgl.nn.pytorch.gt.GraphormerLayer", false]], "graphpartitionbook (class in dgl.distributed)": [[4, "dgl.distributed.GraphPartitionBook", false]], "graphs (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.graphs", false]], "graphs (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.graphs", false]], "graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.graphs", false]], "grouprevres (class in dgl.nn.pytorch.conv)": [[416, "dgl.nn.pytorch.conv.GroupRevRes", false]], "gsddmm() (in module dgl.ops)": [[500, "dgl.ops.gsddmm", false]], "gspmm() (in module dgl.ops)": [[501, "dgl.ops.gspmm", false]], "has_duplicate() (dgl.sparse.sparsematrix method)": [[588, "dgl.sparse.SparseMatrix.has_duplicate", false]], "has_edges_between() (dgl.dglgraph method)": [[57, "dgl.DGLGraph.has_edges_between", false]], "has_nodes() (dgl.dglgraph method)": [[58, "dgl.DGLGraph.has_nodes", false]], "hash (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.hash", false]], "heatkernel (class in dgl.transforms)": [[659, "dgl.transforms.HeatKernel", false]], "heteroembedding (class in dgl.nn.pytorch)": [[384, "dgl.nn.pytorch.HeteroEmbedding", false]], "heterognnexplainer (class in dgl.nn.pytorch.explain)": [[427, "dgl.nn.pytorch.explain.HeteroGNNExplainer", false]], "heterograph() (in module dgl)": [[334, "dgl.heterograph", false]], "heterographconv (class in dgl.nn.mxnet)": [[358, "dgl.nn.mxnet.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.pytorch)": [[385, "dgl.nn.pytorch.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.tensorflow.glob)": [[470, "dgl.nn.tensorflow.glob.HeteroGraphConv", false]], "heteroitemset (class in dgl.graphbolt)": [[299, "dgl.graphbolt.HeteroItemSet", false]], "heterolinear (class in dgl.nn.pytorch)": [[386, "dgl.nn.pytorch.HeteroLinear", false]], "heteropgexplainer (class in dgl.nn.pytorch.explain)": [[428, "dgl.nn.pytorch.explain.HeteroPGExplainer", false]], "heterosubgraphx (class in dgl.nn.pytorch.explain)": [[429, "dgl.nn.pytorch.explain.HeteroSubgraphX", false]], "hgtconv (class in dgl.nn.pytorch.conv)": [[417, "dgl.nn.pytorch.conv.HGTConv", false]], "icews18dataset (class in dgl.data)": [[166, "dgl.data.ICEWS18Dataset", false]], "identity() (in module dgl.sparse)": [[615, "dgl.sparse.identity", false]], "idtype (dgl.dglgraph property)": [[59, "dgl.DGLGraph.idtype", false]], "idtype (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.idtype", false]], "in_degrees() (dgl.dglgraph method)": [[60, "dgl.DGLGraph.in_degrees", false]], "in_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.in_degrees", false]], "in_edges() (dgl.dglgraph method)": [[61, "dgl.DGLGraph.in_edges", false]], "in_subgraph() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.in_subgraph", false]], "in_subgraph() (in module dgl)": [[335, "dgl.in_subgraph", false]], "in_subgraph() (in module dgl.distributed)": [[234, "dgl.distributed.in_subgraph", false]], "inc() (dgl.dglgraph method)": [[62, "dgl.DGLGraph.inc", false]], "incidence_matrix() (dgl.dglgraph method)": [[63, "dgl.DGLGraph.incidence_matrix", false]], "index_select() (in module dgl.graphbolt)": [[328, "dgl.graphbolt.index_select", false]], "indexes (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.indexes", false]], "indices (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.indices", false]], "indices() (dgl.sparse.sparsematrix method)": [[589, "dgl.sparse.SparseMatrix.indices", false]], "initialize() (in module dgl.distributed)": [[235, "dgl.distributed.initialize", false]], "input_nodes (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.input_nodes", false]], "insubgraphsampler (class in dgl.graphbolt)": [[300, "dgl.graphbolt.InSubgraphSampler", false]], "int() (dgl.dglgraph method)": [[64, "dgl.DGLGraph.int", false]], "int() (dgl.sparse.sparsematrix method)": [[590, "dgl.sparse.SparseMatrix.int", false]], "is_homogeneous (dgl.dglgraph property)": [[65, "dgl.DGLGraph.is_homogeneous", false]], "is_libxsmm_enabled() (in module dgl)": [[336, "dgl.is_libxsmm_enabled", false]], "is_multigraph (dgl.dglgraph property)": [[66, "dgl.DGLGraph.is_multigraph", false]], "is_pinned() (dgl.dglgraph method)": [[67, "dgl.DGLGraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.is_pinned", false]], "is_pinned() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeaturestore method)": [[318, "dgl.graphbolt.TorchBasedFeatureStore.is_pinned", false]], "is_temporal (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.is_temporal", false]], "is_temporal (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.is_temporal", false]], "is_temporal (dgl.data.icews18dataset attribute)": [[166, "dgl.data.ICEWS18Dataset.is_temporal", false]], "is_unibipartite (dgl.dglgraph property)": [[68, "dgl.DGLGraph.is_unibipartite", false]], "isin() (in module dgl.graphbolt)": [[329, "dgl.graphbolt.isin", false]], "itemsampler (class in dgl.graphbolt)": [[301, "dgl.graphbolt.ItemSampler", false]], "itemset (class in dgl.graphbolt)": [[302, "dgl.graphbolt.ItemSet", false]], "jumpingknowledge (class in dgl.nn.pytorch.utils)": [[456, "dgl.nn.pytorch.utils.JumpingKnowledge", false]], "karateclubdataset (class in dgl.data)": [[167, "dgl.data.KarateClubDataset", false]], "keys() (dgl.graphbolt.basicfeaturestore method)": [[288, "dgl.graphbolt.BasicFeatureStore.keys", false]], "keys() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.keys", false]], "khop_adj() (in module dgl)": [[337, "dgl.khop_adj", false]], "khop_graph() (in module dgl)": [[338, "dgl.khop_graph", false]], "khop_in_subgraph() (in module dgl)": [[339, "dgl.khop_in_subgraph", false]], "khop_out_subgraph() (in module dgl)": [[340, "dgl.khop_out_subgraph", false]], "khopgraph (class in dgl.transforms)": [[660, "dgl.transforms.KHopGraph", false]], "knn_graph() (in module dgl)": [[341, "dgl.knn_graph", false]], "knngraph (class in dgl.nn.pytorch.factory)": [[432, "dgl.nn.pytorch.factory.KNNGraph", false]], "labelpropagation (class in dgl.nn.pytorch.utils)": [[457, "dgl.nn.pytorch.utils.LabelPropagation", false]], "labels (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.labels", false]], "labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.labels", false]], "labels (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.labels", false]], "laborsampler (class in dgl.dataloading)": [[214, "dgl.dataloading.LaborSampler", false]], "lap_pe() (in module dgl)": [[342, "dgl.lap_pe", false]], "laplacian_lambda_max() (in module dgl)": [[343, "dgl.laplacian_lambda_max", false]], "lappe (class in dgl.transforms)": [[661, "dgl.transforms.LapPE", false]], "lapposencoder (class in dgl.nn.pytorch.gt)": [[448, "dgl.nn.pytorch.gt.LapPosEncoder", false]], "layerneighborsampler (class in dgl.graphbolt)": [[303, "dgl.graphbolt.LayerNeighborSampler", false]], "lazyfeature (class in dgl.dataloading.base)": [[221, "dgl.dataloading.base.LazyFeature", false]], "legacydataset (class in dgl.graphbolt)": [[304, "dgl.graphbolt.LegacyDataset", false]], "legacytudataset (class in dgl.data)": [[168, "dgl.data.LegacyTUDataset", false]], "lin (dgl.nn.pytorch.conv.tagconv attribute)": [[423, "dgl.nn.pytorch.conv.TAGConv.lin", false]], "line_graph() (dgl.dglgraph method)": [[69, "dgl.DGLGraph.line_graph", false]], "line_graph() (in module dgl)": [[344, "dgl.line_graph", false]], "linegraph (class in dgl.transforms)": [[662, "dgl.transforms.LineGraph", false]], "linkx_homophily() (in module dgl)": [[345, "dgl.linkx_homophily", false]], "load() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.load", false]], "load() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.load", false]], "load() (dgl.graphbolt.ondiskdataset method)": [[309, "dgl.graphbolt.OnDiskDataset.load", false]], "load_from_shared_memory() (in module dgl.graphbolt)": [[330, "dgl.graphbolt.load_from_shared_memory", false]], "load_graphs() (in module dgl)": [[346, "dgl.load_graphs", false]], "load_info (class in dgl.data.utils)": [[203, "dgl.data.utils.load_info", false]], "load_labels (class in dgl.data.utils)": [[204, "dgl.data.utils.load_labels", false]], "load_partition() (in module dgl.distributed)": [[236, "dgl.distributed.load_partition", false]], "load_partition_book() (in module dgl.distributed)": [[237, "dgl.distributed.load_partition_book", false]], "load_partition_feats() (in module dgl.distributed)": [[238, "dgl.distributed.load_partition_feats", false]], "local_partition (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.local_partition", false]], "local_scope() (dgl.dglgraph method)": [[70, "dgl.DGLGraph.local_scope", false]], "local_to_global_nid (dgl.nn.pytorch.metapath2vec attribute)": [[387, "dgl.nn.pytorch.MetaPath2Vec.local_to_global_nid", false]], "long() (dgl.dglgraph method)": [[71, "dgl.DGLGraph.long", false]], "long() (dgl.sparse.sparsematrix method)": [[591, "dgl.sparse.SparseMatrix.long", false]], "mailbox (dgl.udf.nodebatch property)": [[679, "dgl.udf.NodeBatch.mailbox", false]], "map_to_homo_eid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_eid", false]], "map_to_homo_nid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_nid", false]], "map_to_per_etype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_etype", false]], "map_to_per_ntype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_ntype", false]], "mask_nodes_by_property (class in dgl.data.utils)": [[205, "dgl.data.utils.mask_nodes_by_property", false]], "matmul() (in module dgl.sparse)": [[616, "dgl.sparse.matmul", false]], "max() (in module dgl.function)": [[263, "dgl.function.max", false]], "max_edges() (in module dgl)": [[347, "dgl.max_edges", false]], "max_nodes() (in module dgl)": [[348, "dgl.max_nodes", false]], "max_num_node (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.max_num_node", false]], "max_num_node (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.max_num_node", false]], "max_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.max_num_v", false]], "maxpooling (class in dgl.nn.mxnet.glob)": [[378, "dgl.nn.mxnet.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.pytorch.glob)": [[437, "dgl.nn.pytorch.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.tensorflow.glob)": [[471, "dgl.nn.tensorflow.glob.MaxPooling", false]], "mean() (in module dgl.function)": [[264, "dgl.function.mean", false]], "mean_edges() (in module dgl)": [[349, "dgl.mean_edges", false]], "mean_nodes() (in module dgl)": [[350, "dgl.mean_nodes", false]], "merge() (in module dgl)": [[351, "dgl.merge", false]], "metadata (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.metadata", false]], "metadata() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.metadata", false]], "metadata() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.metadata", false]], "metadata() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.metadata", false]], "metadata() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.metadata", false]], "metagraph() (dgl.dglgraph method)": [[72, "dgl.DGLGraph.metagraph", false]], "metapath2vec (class in dgl.nn.pytorch)": [[387, "dgl.nn.pytorch.MetaPath2Vec", false]], "metapath_reachable_graph() (in module dgl)": [[352, "dgl.metapath_reachable_graph", false]], "metis_partition() (in module dgl)": [[353, "dgl.metis_partition", false]], "metis_partition_assignment() (in module dgl)": [[354, "dgl.metis_partition_assignment", false]], "min() (in module dgl.function)": [[265, "dgl.function.min", false]], "min_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.min_num_v", false]], "minesweeperdataset (class in dgl.data)": [[171, "dgl.data.MinesweeperDataset", false]], "minibatch (class in dgl.graphbolt)": [[305, "dgl.graphbolt.MiniBatch", false]], "minibatchtransformer (class in dgl.graphbolt)": [[306, "dgl.graphbolt.MiniBatchTransformer", false]], "minigcdataset (class in dgl.data)": [[172, "dgl.data.MiniGCDataset", false]], "mnistsuperpixeldataset (class in dgl.data)": [[169, "dgl.data.MNISTSuperPixelDataset", false]], "mods (dgl.nn.pytorch.heterographconv attribute)": [[385, "dgl.nn.pytorch.HeteroGraphConv.mods", false]], "module": [[0, "module-dgl", false], [2, "module-dgl.data", false], [6, "module-dgl.geometry", false], [10, "module-dgl.optim", false], [11, "module-dgl.sampling", false], [18, "module-dgl.nn.functional", false], [19, "module-dgl.transforms", false]], "movielensdataset (class in dgl.data)": [[173, "dgl.data.MovieLensDataset", false]], "mul() (in module dgl.sparse)": [[617, "dgl.sparse.mul", false]], "multi_update_all() (dgl.dglgraph method)": [[73, "dgl.DGLGraph.multi_update_all", false]], "multilayerfullneighborsampler (class in dgl.dataloading)": [[215, "dgl.dataloading.MultiLayerFullNeighborSampler", false]], "mutagdataset (class in dgl.data)": [[170, "dgl.data.MUTAGDataset", false]], "name (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.name", false]], "name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.name", false]], "name (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.name", false]], "names (dgl.graphbolt.heteroitemset property)": [[299, "dgl.graphbolt.HeteroItemSet.names", false]], "names (dgl.graphbolt.itemset property)": [[302, "dgl.graphbolt.ItemSet.names", false]], "ndata (dgl.dglgraph property)": [[74, "dgl.DGLGraph.ndata", false]], "ndata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ndata", false]], "neg() (dgl.sparse.sparsematrix method)": [[592, "dgl.sparse.SparseMatrix.neg", false]], "negativesampler (class in dgl.graphbolt)": [[307, "dgl.graphbolt.NegativeSampler", false]], "neighbor_matching (class in dgl.geometry)": [[6, "dgl.geometry.neighbor_matching", false]], "neighborsampler (class in dgl.dataloading)": [[216, "dgl.dataloading.NeighborSampler", false]], "neighborsampler (class in dgl.graphbolt)": [[308, "dgl.graphbolt.NeighborSampler", false]], "nid2localnid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2localnid", false]], "nid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2partid", false]], "nnconv (class in dgl.nn.mxnet.conv)": [[371, "dgl.nn.mxnet.conv.NNConv", false]], "nnconv (class in dgl.nn.pytorch.conv)": [[418, "dgl.nn.pytorch.conv.NNConv", false]], "nnz (dgl.sparse.sparsematrix property)": [[593, "dgl.sparse.SparseMatrix.nnz", false]], "node2vec_random_walk() (in module dgl.sampling)": [[560, "dgl.sampling.node2vec_random_walk", false]], "node_attr_schemes() (dgl.dglgraph method)": [[75, "dgl.DGLGraph.node_attr_schemes", false]], "node_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.node_attr_schemes", false]], "node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_attribute", false]], "node_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_attributes", false]], "node_embed (dgl.nn.pytorch.deepwalk attribute)": [[383, "dgl.nn.pytorch.DeepWalk.node_embed", false]], "node_embed (dgl.nn.pytorch.metapath2vec attribute)": [[387, "dgl.nn.pytorch.MetaPath2Vec.node_embed", false]], "node_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.node_feat_size", false]], "node_features (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.node_features", false]], "node_homophily() (in module dgl)": [[474, "dgl.node_homophily", false]], "node_ids() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.node_ids", false]], "node_label_informativeness() (in module dgl)": [[475, "dgl.node_label_informativeness", false]], "node_split() (in module dgl.distributed)": [[239, "dgl.distributed.node_split", false]], "node_subgraph() (in module dgl)": [[476, "dgl.node_subgraph", false]], "node_type_offset (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_offset", false]], "node_type_subgraph() (dgl.dglgraph method)": [[76, "dgl.DGLGraph.node_type_subgraph", false]], "node_type_subgraph() (in module dgl)": [[477, "dgl.node_type_subgraph", false]], "node_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_to_id", false]], "nodeembedding (class in dgl.nn.pytorch.sparse_emb)": [[455, "dgl.nn.pytorch.sparse_emb.NodeEmbedding", false]], "nodes (dgl.dglgraph property)": [[77, "dgl.DGLGraph.nodes", false]], "nodes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.nodes", false]], "nodes() (dgl.udf.nodebatch method)": [[680, "dgl.udf.NodeBatch.nodes", false]], "nodeshuffle (class in dgl.transforms)": [[663, "dgl.transforms.NodeShuffle", false]], "norm_by_dst() (in module dgl)": [[478, "dgl.norm_by_dst", false]], "ntypes (dgl.dglgraph property)": [[78, "dgl.DGLGraph.ntypes", false]], "ntypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ntypes", false]], "num_atom_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_atom_types", false]], "num_bond_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_bond_types", false]], "num_classes (dgl.data.actordataset attribute)": [[134, "dgl.data.ActorDataset.num_classes", false]], "num_classes (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuycomputerdataset attribute)": [[135, "dgl.data.AmazonCoBuyComputerDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuyphotodataset attribute)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.num_classes", false]], "num_classes (dgl.data.amazonratingsdataset attribute)": [[137, "dgl.data.AmazonRatingsDataset.num_classes", false]], "num_classes (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.num_classes", false]], "num_classes (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_classes", false]], "num_classes (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.num_classes", false]], "num_classes (dgl.data.ba2motifdataset attribute)": [[141, "dgl.data.BA2MotifDataset.num_classes", false]], "num_classes (dgl.data.bacommunitydataset attribute)": [[142, "dgl.data.BACommunityDataset.num_classes", false]], "num_classes (dgl.data.bashapedataset attribute)": [[143, "dgl.data.BAShapeDataset.num_classes", false]], "num_classes (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.num_classes", false]], "num_classes (dgl.data.chameleondataset attribute)": [[149, "dgl.data.ChameleonDataset.num_classes", false]], "num_classes (dgl.data.citeseergraphdataset attribute)": [[150, "dgl.data.CiteseerGraphDataset.num_classes", false]], "num_classes (dgl.data.clusterdataset attribute)": [[147, "dgl.data.CLUSTERDataset.num_classes", false]], "num_classes (dgl.data.coauthorcsdataset attribute)": [[151, "dgl.data.CoauthorCSDataset.num_classes", false]], "num_classes (dgl.data.coauthorphysicsdataset attribute)": [[152, "dgl.data.CoauthorPhysicsDataset.num_classes", false]], "num_classes (dgl.data.corafulldataset attribute)": [[153, "dgl.data.CoraFullDataset.num_classes", false]], "num_classes (dgl.data.coragraphdataset attribute)": [[154, "dgl.data.CoraGraphDataset.num_classes", false]], "num_classes (dgl.data.cornelldataset attribute)": [[155, "dgl.data.CornellDataset.num_classes", false]], "num_classes (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_classes", false]], "num_classes (dgl.data.flickrdataset attribute)": [[160, "dgl.data.FlickrDataset.num_classes", false]], "num_classes (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.num_classes", false]], "num_classes (dgl.data.gindataset attribute)": [[165, "dgl.data.GINDataset.num_classes", false]], "num_classes (dgl.data.karateclubdataset attribute)": [[167, "dgl.data.KarateClubDataset.num_classes", false]], "num_classes (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_classes", false]], "num_classes (dgl.data.minesweeperdataset attribute)": [[171, "dgl.data.MinesweeperDataset.num_classes", false]], "num_classes (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_classes", false]], "num_classes (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.num_classes", false]], "num_classes (dgl.data.patterndataset attribute)": [[174, "dgl.data.PATTERNDataset.num_classes", false]], "num_classes (dgl.data.pubmedgraphdataset attribute)": [[176, "dgl.data.PubmedGraphDataset.num_classes", false]], "num_classes (dgl.data.questionsdataset attribute)": [[180, "dgl.data.QuestionsDataset.num_classes", false]], "num_classes (dgl.data.redditdataset attribute)": [[181, "dgl.data.RedditDataset.num_classes", false]], "num_classes (dgl.data.romanempiredataset attribute)": [[182, "dgl.data.RomanEmpireDataset.num_classes", false]], "num_classes (dgl.data.squirreldataset attribute)": [[185, "dgl.data.SquirrelDataset.num_classes", false]], "num_classes (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.num_classes", false]], "num_classes (dgl.data.texasdataset attribute)": [[187, "dgl.data.TexasDataset.num_classes", false]], "num_classes (dgl.data.tolokersdataset attribute)": [[188, "dgl.data.TolokersDataset.num_classes", false]], "num_classes (dgl.data.treecycledataset attribute)": [[189, "dgl.data.TreeCycleDataset.num_classes", false]], "num_classes (dgl.data.treegriddataset attribute)": [[190, "dgl.data.TreeGridDataset.num_classes", false]], "num_classes (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_classes", false]], "num_classes (dgl.data.wikicsdataset attribute)": [[192, "dgl.data.WikiCSDataset.num_classes", false]], "num_classes (dgl.data.wisconsindataset attribute)": [[193, "dgl.data.WisconsinDataset.num_classes", false]], "num_classes (dgl.data.yelpdataset attribute)": [[194, "dgl.data.YelpDataset.num_classes", false]], "num_dst_nodes() (dgl.dglgraph method)": [[79, "dgl.DGLGraph.num_dst_nodes", false]], "num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.num_edges", false]], "num_edges (dgl.graphbolt.samplinggraph property)": [[312, "dgl.graphbolt.SamplingGraph.num_edges", false]], "num_edges() (dgl.dglgraph method)": [[80, "dgl.DGLGraph.num_edges", false]], "num_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_edges", false]], "num_graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_graphs", false]], "num_graphs (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_graphs", false]], "num_items (dgl.graphbolt.itemset property)": [[302, "dgl.graphbolt.ItemSet.num_items", false]], "num_labels (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_labels", false]], "num_labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.num_labels", false]], "num_labels (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_labels", false]], "num_labels (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_labels", false]], "num_labels (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_labels", false]], "num_labels (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_labels", false]], "num_layers() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.num_layers", false]], "num_nodes (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_nodes", false]], "num_nodes (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_nodes", false]], "num_nodes (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_nodes", false]], "num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.num_nodes", false]], "num_nodes (dgl.graphbolt.samplinggraph property)": [[312, "dgl.graphbolt.SamplingGraph.num_nodes", false]], "num_nodes() (dgl.dglgraph method)": [[81, "dgl.DGLGraph.num_nodes", false]], "num_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_nodes", false]], "num_partitions() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.num_partitions", false]], "num_rels (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_rels", false]], "num_rels (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_rels", false]], "num_rels (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_rels", false]], "num_src_nodes() (dgl.dglgraph method)": [[82, "dgl.DGLGraph.num_src_nodes", false]], "num_tasks (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_tasks", false]], "num_tasks (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_tasks", false]], "num_tasks (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_tasks", false]], "num_tasks (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_tasks", false]], "number_of_dst_nodes() (dgl.dglgraph method)": [[83, "dgl.DGLGraph.number_of_dst_nodes", false]], "number_of_edges() (dgl.dglgraph method)": [[84, "dgl.DGLGraph.number_of_edges", false]], "number_of_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_edges", false]], "number_of_nodes() (dgl.dglgraph method)": [[85, "dgl.DGLGraph.number_of_nodes", false]], "number_of_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_nodes", false]], "number_of_src_nodes() (dgl.dglgraph method)": [[86, "dgl.DGLGraph.number_of_src_nodes", false]], "ondiskdataset (class in dgl.graphbolt)": [[309, "dgl.graphbolt.OnDiskDataset", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.original_column_node_ids", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.original_column_node_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.original_edge_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.original_edge_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.original_row_node_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.original_row_node_ids", false]], "out_degrees() (dgl.dglgraph method)": [[87, "dgl.DGLGraph.out_degrees", false]], "out_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.out_degrees", false]], "out_edges() (dgl.dglgraph method)": [[88, "dgl.DGLGraph.out_edges", false]], "out_subgraph() (in module dgl)": [[540, "dgl.out_subgraph", false]], "pack_traces() (in module dgl.sampling)": [[561, "dgl.sampling.pack_traces", false]], "part_id (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.part_id", false]], "part_policy (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.part_policy", false]], "partid (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.partid", false]], "partid2eids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2eids", false]], "partid2nids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2nids", false]], "partition_book (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.partition_book", false]], "partition_graph() (in module dgl.distributed)": [[240, "dgl.distributed.partition_graph", false]], "partition_graph_with_halo() (in module dgl)": [[541, "dgl.partition_graph_with_halo", false]], "partitionpolicy (class in dgl.distributed)": [[4, "dgl.distributed.PartitionPolicy", false]], "pathencoder (class in dgl.nn.pytorch.gt)": [[449, "dgl.nn.pytorch.gt.PathEncoder", false]], "patterndataset (class in dgl.data)": [[174, "dgl.data.PATTERNDataset", false]], "persourceuniform (class in dgl.dataloading.negative_sampler)": [[227, "dgl.dataloading.negative_sampler.PerSourceUniform", false]], "pgexplainer (class in dgl.nn.pytorch.explain)": [[430, "dgl.nn.pytorch.explain.PGExplainer", false]], "pin_memory() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.pin_memory", false]], "pin_memory() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.pin_memory", false]], "pin_memory_() (dgl.dglgraph method)": [[89, "dgl.DGLGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeaturestore method)": [[318, "dgl.graphbolt.TorchBasedFeatureStore.pin_memory_", false]], "pinsagesampler (class in dgl.sampling)": [[558, "dgl.sampling.PinSAGESampler", false]], "pnaconv (class in dgl.nn.pytorch.conv)": [[419, "dgl.nn.pytorch.conv.PNAConv", false]], "policy_str (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.policy_str", false]], "power() (in module dgl.sparse)": [[618, "dgl.sparse.power", false]], "ppidataset (class in dgl.data)": [[175, "dgl.data.PPIDataset", false]], "ppr (class in dgl.transforms)": [[664, "dgl.transforms.PPR", false]], "predecessors() (dgl.dglgraph method)": [[90, "dgl.DGLGraph.predecessors", false]], "predict_category (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.predict_category", false]], "predict_category (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.predict_category", false]], "predict_category (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.predict_category", false]], "predict_category (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.predict_category", false]], "pretrained_emb (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.pretrained_emb", false]], "prop_edges() (dgl.dglgraph method)": [[91, "dgl.DGLGraph.prop_edges", false]], "prop_edges() (in module dgl)": [[542, "dgl.prop_edges", false]], "prop_edges_dfs() (in module dgl)": [[543, "dgl.prop_edges_dfs", false]], "prop_nodes() (dgl.dglgraph method)": [[92, "dgl.DGLGraph.prop_nodes", false]], "prop_nodes() (in module dgl)": [[544, "dgl.prop_nodes", false]], "prop_nodes_bfs() (in module dgl)": [[545, "dgl.prop_nodes_bfs", false]], "prop_nodes_topo() (in module dgl)": [[546, "dgl.prop_nodes_topo", false]], "pubmedgraphdataset (class in dgl.data)": [[176, "dgl.data.PubmedGraphDataset", false]], "pull() (dgl.dglgraph method)": [[93, "dgl.DGLGraph.pull", false]], "push() (dgl.dglgraph method)": [[94, "dgl.DGLGraph.push", false]], "qm7bdataset (class in dgl.data)": [[177, "dgl.data.QM7bDataset", false]], "qm9dataset (class in dgl.data)": [[178, "dgl.data.QM9Dataset", false]], "qm9edgedataset (class in dgl.data)": [[179, "dgl.data.QM9EdgeDataset", false]], "questionsdataset (class in dgl.data)": [[180, "dgl.data.QuestionsDataset", false]], "radius_graph() (in module dgl)": [[547, "dgl.radius_graph", false]], "radiusgraph (class in dgl.nn.pytorch.factory)": [[433, "dgl.nn.pytorch.factory.RadiusGraph", false]], "rand_bipartite() (in module dgl)": [[548, "dgl.rand_bipartite", false]], "rand_graph() (in module dgl)": [[549, "dgl.rand_graph", false]], "random_walk() (in module dgl.sampling)": [[562, "dgl.sampling.random_walk", false]], "random_walk_pe() (in module dgl)": [[550, "dgl.random_walk_pe", false]], "randomwalkpe (class in dgl.transforms)": [[665, "dgl.transforms.RandomWalkPE", false]], "rank() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.rank", false]], "raw_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_dir", false]], "raw_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_path", false]], "read() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.read", false]], "read() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.read", false]], "read() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.read", false]], "read() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.read", false]], "read_async() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.read_async", false]], "read_async() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.read_async", false]], "read_async() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.read_async", false]], "read_async_num_stages() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.read_async_num_stages", false]], "readout_edges() (in module dgl)": [[551, "dgl.readout_edges", false]], "readout_nodes() (in module dgl)": [[552, "dgl.readout_nodes", false]], "redditdataset (class in dgl.data)": [[181, "dgl.data.RedditDataset", false]], "reduce() (dgl.sparse.sparsematrix method)": [[594, "dgl.sparse.SparseMatrix.reduce", false]], "rel_emb (dgl.nn.pytorch.link.transe attribute)": [[453, "dgl.nn.pytorch.link.TransE.rel_emb", false]], "rel_emb (dgl.nn.pytorch.link.transr attribute)": [[454, "dgl.nn.pytorch.link.TransR.rel_emb", false]], "rel_project (dgl.nn.pytorch.link.transr attribute)": [[454, "dgl.nn.pytorch.link.TransR.rel_project", false]], "relgraphconv (class in dgl.nn.mxnet.conv)": [[372, "dgl.nn.mxnet.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.pytorch.conv)": [[420, "dgl.nn.pytorch.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.tensorflow.conv)": [[465, "dgl.nn.tensorflow.conv.RelGraphConv", false]], "remove_edges() (dgl.dglgraph method)": [[95, "dgl.DGLGraph.remove_edges", false]], "remove_edges() (in module dgl)": [[553, "dgl.remove_edges", false]], "remove_nodes() (dgl.dglgraph method)": [[96, "dgl.DGLGraph.remove_nodes", false]], "remove_nodes() (in module dgl)": [[554, "dgl.remove_nodes", false]], "remove_self_loop() (dgl.dglgraph method)": [[97, "dgl.DGLGraph.remove_self_loop", false]], "remove_self_loop() (in module dgl)": [[555, "dgl.remove_self_loop", false]], "removeselfloop (class in dgl.transforms)": [[666, "dgl.transforms.RemoveSelfLoop", false]], "reorder_graph() (dgl.dglgraph method)": [[98, "dgl.DGLGraph.reorder_graph", false]], "reorder_graph() (in module dgl)": [[556, "dgl.reorder_graph", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[394, "dgl.nn.pytorch.conv.CuGraphGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[395, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[396, "dgl.nn.pytorch.conv.CuGraphSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densechebconv method)": [[398, "dgl.nn.pytorch.conv.DenseChebConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densegraphconv method)": [[399, "dgl.nn.pytorch.conv.DenseGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densesageconv method)": [[400, "dgl.nn.pytorch.conv.DenseSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.edgegatconv method)": [[405, "dgl.nn.pytorch.conv.EdgeGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.egatconv method)": [[402, "dgl.nn.pytorch.conv.EGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatconv method)": [[407, "dgl.nn.pytorch.conv.GATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[414, "dgl.nn.pytorch.conv.GatedGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatv2conv method)": [[408, "dgl.nn.pytorch.conv.GATv2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gcn2conv method)": [[409, "dgl.nn.pytorch.conv.GCN2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gmmconv method)": [[412, "dgl.nn.pytorch.conv.GMMConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.graphconv method)": [[415, "dgl.nn.pytorch.conv.GraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.nnconv method)": [[418, "dgl.nn.pytorch.conv.NNConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sageconv method)": [[421, "dgl.nn.pytorch.conv.SAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sgconv method)": [[422, "dgl.nn.pytorch.conv.SGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.tagconv method)": [[423, "dgl.nn.pytorch.conv.TAGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.deepwalk method)": [[383, "dgl.nn.pytorch.DeepWalk.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.glob.set2set method)": [[438, "dgl.nn.pytorch.glob.Set2Set.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.gt.biasedmha method)": [[444, "dgl.nn.pytorch.gt.BiasedMHA.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.heteroembedding method)": [[384, "dgl.nn.pytorch.HeteroEmbedding.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.edgepredictor method)": [[452, "dgl.nn.pytorch.link.EdgePredictor.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transe method)": [[453, "dgl.nn.pytorch.link.TransE.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transr method)": [[454, "dgl.nn.pytorch.link.TransR.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.metapath2vec method)": [[387, "dgl.nn.pytorch.MetaPath2Vec.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.typedlinear method)": [[388, "dgl.nn.pytorch.TypedLinear.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[456, "dgl.nn.pytorch.utils.JumpingKnowledge.reset_parameters", false]], "reverse() (dgl.dglgraph method)": [[99, "dgl.DGLGraph.reverse", false]], "reverse() (in module dgl)": [[557, "dgl.reverse", false]], "romanempiredataset (class in dgl.data)": [[182, "dgl.data.RomanEmpireDataset", false]], "row (dgl.sparse.sparsematrix property)": [[595, "dgl.sparse.SparseMatrix.row", false]], "rowfeatnormalizer (class in dgl.transforms)": [[667, "dgl.transforms.RowFeatNormalizer", false]], "sageconv (class in dgl.nn.mxnet.conv)": [[373, "dgl.nn.mxnet.conv.SAGEConv", false]], "sageconv (class in dgl.nn.pytorch.conv)": [[421, "dgl.nn.pytorch.conv.SAGEConv", false]], "sageconv (class in dgl.nn.tensorflow.conv)": [[466, "dgl.nn.tensorflow.conv.SAGEConv", false]], "saintsampler (class in dgl.dataloading)": [[217, "dgl.dataloading.SAINTSampler", false]], "sample_etype_neighbors() (in module dgl.distributed)": [[241, "dgl.distributed.sample_etype_neighbors", false]], "sample_labors() (in module dgl.sampling)": [[563, "dgl.sampling.sample_labors", false]], "sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.sample_layer_neighbors", false]], "sample_negative_edges_uniform() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.sample_negative_edges_uniform", false]], "sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.sample_neighbors", false]], "sample_neighbors() (in module dgl.distributed)": [[242, "dgl.distributed.sample_neighbors", false]], "sample_neighbors() (in module dgl.sampling)": [[564, "dgl.sampling.sample_neighbors", false]], "sample_neighbors_biased() (in module dgl.sampling)": [[565, "dgl.sampling.sample_neighbors_biased", false]], "sample_subgraphs() (dgl.graphbolt.insubgraphsampler method)": [[300, "dgl.graphbolt.InSubgraphSampler.sample_subgraphs", false]], "sample_subgraphs() (dgl.graphbolt.subgraphsampler method)": [[313, "dgl.graphbolt.SubgraphSampler.sample_subgraphs", false]], "sampled_csc (dgl.graphbolt.sampledsubgraph property)": [[310, "dgl.graphbolt.SampledSubgraph.sampled_csc", false]], "sampled_csc (dgl.graphbolt.sampledsubgraphimpl attribute)": [[311, "dgl.graphbolt.SampledSubgraphImpl.sampled_csc", false]], "sampled_subgraphs (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.sampled_subgraphs", false]], "sampledsubgraph (class in dgl.graphbolt)": [[310, "dgl.graphbolt.SampledSubgraph", false]], "sampledsubgraphimpl (class in dgl.graphbolt)": [[311, "dgl.graphbolt.SampledSubgraphImpl", false]], "sampler (class in dgl.dataloading)": [[218, "dgl.dataloading.Sampler", false]], "sampling_stages() (dgl.graphbolt.subgraphsampler method)": [[313, "dgl.graphbolt.SubgraphSampler.sampling_stages", false]], "samplinggraph (class in dgl.graphbolt)": [[312, "dgl.graphbolt.SamplingGraph", false]], "save() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.save", false]], "save() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.save", false]], "save_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_dir", false]], "save_graphs() (in module dgl)": [[567, "dgl.save_graphs", false]], "save_info (class in dgl.data.utils)": [[206, "dgl.data.utils.save_info", false]], "save_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_path", false]], "sbmmixturedataset (class in dgl.data)": [[183, "dgl.data.SBMMixtureDataset", false]], "sddmm() (in module dgl.sparse)": [[619, "dgl.sparse.sddmm", false]], "seed (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.seed", false]], "seed() (in module dgl)": [[568, "dgl.seed", false]], "seed() (in module dgl.graphbolt)": [[331, "dgl.graphbolt.seed", false]], "seeds (dgl.graphbolt.minibatch attribute)": [[305, "dgl.graphbolt.MiniBatch.seeds", false]], "segment_mm() (in module dgl.ops)": [[502, "dgl.ops.segment_mm", false]], "segment_reduce() (in module dgl.ops)": [[503, "dgl.ops.segment_reduce", false]], "segmented_knn_graph() (in module dgl)": [[569, "dgl.segmented_knn_graph", false]], "segmentedknngraph (class in dgl.nn.pytorch.factory)": [[434, "dgl.nn.pytorch.factory.SegmentedKNNGraph", false]], "select_topk() (in module dgl.sampling)": [[566, "dgl.sampling.select_topk", false]], "send_and_recv() (dgl.dglgraph method)": [[100, "dgl.DGLGraph.send_and_recv", false]], "sequential (class in dgl.nn.mxnet.utils)": [[382, "dgl.nn.mxnet.utils.Sequential", false]], "sequential (class in dgl.nn.pytorch.utils)": [[458, "dgl.nn.pytorch.utils.Sequential", false]], "set2set (class in dgl.nn.mxnet.glob)": [[379, "dgl.nn.mxnet.glob.Set2Set", false]], "set2set (class in dgl.nn.pytorch.glob)": [[438, "dgl.nn.pytorch.glob.Set2Set", false]], "set_batch_num_edges() (dgl.dglgraph method)": [[101, "dgl.DGLGraph.set_batch_num_edges", false]], "set_batch_num_nodes() (dgl.dglgraph method)": [[102, "dgl.DGLGraph.set_batch_num_nodes", false]], "set_dst_lazy_features (class in dgl.dataloading.base)": [[222, "dgl.dataloading.base.set_dst_lazy_features", false]], "set_edge_features() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.set_edge_features", false]], "set_edge_lazy_features (class in dgl.dataloading.base)": [[223, "dgl.dataloading.base.set_edge_lazy_features", false]], "set_node_features() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.set_node_features", false]], "set_node_lazy_features (class in dgl.dataloading.base)": [[224, "dgl.dataloading.base.set_node_lazy_features", false]], "set_src_lazy_features (class in dgl.dataloading.base)": [[225, "dgl.dataloading.base.set_src_lazy_features", false]], "settransformerdecoder (class in dgl.nn.pytorch.glob)": [[439, "dgl.nn.pytorch.glob.SetTransformerDecoder", false]], "settransformerencoder (class in dgl.nn.pytorch.glob)": [[440, "dgl.nn.pytorch.glob.SetTransformerEncoder", false]], "sgconv (class in dgl.nn.mxnet.conv)": [[374, "dgl.nn.mxnet.conv.SGConv", false]], "sgconv (class in dgl.nn.pytorch.conv)": [[422, "dgl.nn.pytorch.conv.SGConv", false]], "sgconv (class in dgl.nn.tensorflow.conv)": [[467, "dgl.nn.tensorflow.conv.SGConv", false]], "shadowkhopsampler (class in dgl.dataloading)": [[219, "dgl.dataloading.ShaDowKHopSampler", false]], "shape (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.shape", false]], "shape (dgl.sparse.sparsematrix property)": [[596, "dgl.sparse.SparseMatrix.shape", false]], "shared_memory() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.shared_memory", false]], "shared_tensor() (in module dgl.multiprocessing.pytorch)": [[356, "dgl.multiprocessing.pytorch.shared_tensor", false]], "shortest_dist() (in module dgl)": [[570, "dgl.shortest_dist", false]], "signdiffusion (class in dgl.transforms)": [[668, "dgl.transforms.SIGNDiffusion", false]], "size() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.size", false]], "size() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.size", false]], "size() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.size", false]], "size() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.size", false]], "slice_batch() (in module dgl)": [[571, "dgl.slice_batch", false]], "smax() (dgl.sparse.sparsematrix method)": [[597, "dgl.sparse.SparseMatrix.smax", false]], "smean() (dgl.sparse.sparsematrix method)": [[598, "dgl.sparse.SparseMatrix.smean", false]], "smin() (dgl.sparse.sparsematrix method)": [[599, "dgl.sparse.SparseMatrix.smin", false]], "softmax() (dgl.sparse.sparsematrix method)": [[600, "dgl.sparse.SparseMatrix.softmax", false]], "softmax() (in module dgl.sparse)": [[620, "dgl.sparse.softmax", false]], "softmax_edges() (in module dgl)": [[572, "dgl.softmax_edges", false]], "softmax_nodes() (in module dgl)": [[573, "dgl.softmax_nodes", false]], "sort_csc_by_tag() (in module dgl)": [[574, "dgl.sort_csc_by_tag", false]], "sort_csr_by_tag() (in module dgl)": [[575, "dgl.sort_csr_by_tag", false]], "sortpooling (class in dgl.nn.mxnet.glob)": [[380, "dgl.nn.mxnet.glob.SortPooling", false]], "sortpooling (class in dgl.nn.pytorch.glob)": [[441, "dgl.nn.pytorch.glob.SortPooling", false]], "sortpooling (class in dgl.nn.tensorflow.glob)": [[472, "dgl.nn.tensorflow.glob.SortPooling", false]], "sp_add_v() (in module dgl.sparse)": [[621, "dgl.sparse.sp_add_v", false]], "sp_broadcast_v() (in module dgl.sparse)": [[622, "dgl.sparse.sp_broadcast_v", false]], "sp_div_v() (in module dgl.sparse)": [[623, "dgl.sparse.sp_div_v", false]], "sp_mul_v() (in module dgl.sparse)": [[624, "dgl.sparse.sp_mul_v", false]], "sp_sub_v() (in module dgl.sparse)": [[625, "dgl.sparse.sp_sub_v", false]], "sparseadagrad (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdagrad", false]], "sparseadagrad (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdagrad", false]], "sparseadam (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdam", false]], "sparseadam (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdam", false]], "sparsematrix (class in dgl.sparse)": [[12, "dgl.sparse.SparseMatrix", false]], "spatialencoder (class in dgl.nn.pytorch.gt)": [[450, "dgl.nn.pytorch.gt.SpatialEncoder", false]], "spatialencoder3d (class in dgl.nn.pytorch.gt)": [[451, "dgl.nn.pytorch.gt.SpatialEncoder3d", false]], "split_dataset (class in dgl.data.utils)": [[207, "dgl.data.utils.split_dataset", false]], "spmatrix() (in module dgl.sparse)": [[626, "dgl.sparse.spmatrix", false]], "spmm() (in module dgl.sparse)": [[627, "dgl.sparse.spmm", false]], "spspmm() (in module dgl.sparse)": [[628, "dgl.sparse.spspmm", false]], "squirreldataset (class in dgl.data)": [[185, "dgl.data.SquirrelDataset", false]], "src (dgl.udf.edgebatch property)": [[676, "dgl.udf.EdgeBatch.src", false]], "srcdata (dgl.dglgraph property)": [[103, "dgl.DGLGraph.srcdata", false]], "srcnodes (dgl.dglgraph property)": [[104, "dgl.DGLGraph.srcnodes", false]], "srctypes (dgl.dglgraph property)": [[105, "dgl.DGLGraph.srctypes", false]], "sstdataset (class in dgl.data)": [[184, "dgl.data.SSTDataset", false]], "start_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.start_time", false]], "step() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.step", false]], "step() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.step", false]], "sub() (in module dgl.sparse)": [[629, "dgl.sparse.sub", false]], "subgraph() (dgl.dglgraph method)": [[106, "dgl.DGLGraph.subgraph", false]], "subgraphsampler (class in dgl.graphbolt)": [[313, "dgl.graphbolt.SubgraphSampler", false]], "subgraphx (class in dgl.nn.pytorch.explain)": [[431, "dgl.nn.pytorch.explain.SubgraphX", false]], "subset (class in dgl.data.utils)": [[196, "dgl.data.utils.Subset", false]], "successors() (dgl.dglgraph method)": [[107, "dgl.DGLGraph.successors", false]], "sum() (dgl.sparse.sparsematrix method)": [[601, "dgl.sparse.SparseMatrix.sum", false]], "sum() (in module dgl.function)": [[266, "dgl.function.sum", false]], "sum_edges() (in module dgl)": [[631, "dgl.sum_edges", false]], "sum_nodes() (in module dgl)": [[632, "dgl.sum_nodes", false]], "sumpooling (class in dgl.nn.mxnet.glob)": [[381, "dgl.nn.mxnet.glob.SumPooling", false]], "sumpooling (class in dgl.nn.pytorch.glob)": [[442, "dgl.nn.pytorch.glob.SumPooling", false]], "sumpooling (class in dgl.nn.tensorflow.glob)": [[473, "dgl.nn.tensorflow.glob.SumPooling", false]], "svd_pe() (in module dgl)": [[633, "dgl.svd_pe", false]], "svdpe (class in dgl.transforms)": [[669, "dgl.transforms.SVDPE", false]], "t (dgl.sparse.sparsematrix property)": [[576, "dgl.sparse.SparseMatrix.T", false]], "t() (dgl.sparse.sparsematrix method)": [[602, "dgl.sparse.SparseMatrix.t", false]], "tagconv (class in dgl.nn.mxnet.conv)": [[375, "dgl.nn.mxnet.conv.TAGConv", false]], "tagconv (class in dgl.nn.pytorch.conv)": [[423, "dgl.nn.pytorch.conv.TAGConv", false]], "task (class in dgl.graphbolt)": [[314, "dgl.graphbolt.Task", false]], "tasks (dgl.graphbolt.dataset property)": [[292, "dgl.graphbolt.Dataset.tasks", false]], "tasks (dgl.graphbolt.legacydataset property)": [[304, "dgl.graphbolt.LegacyDataset.tasks", false]], "tasks (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.tasks", false]], "temporal_sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_layer_neighbors", false]], "temporal_sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_neighbors", false]], "temporallayerneighborsampler (class in dgl.graphbolt)": [[315, "dgl.graphbolt.TemporalLayerNeighborSampler", false]], "temporalneighborsampler (class in dgl.graphbolt)": [[316, "dgl.graphbolt.TemporalNeighborSampler", false]], "test_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.test_edges", false]], "test_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.test_idx", false]], "test_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.test_idx", false]], "test_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.test_mask", false]], "test_set (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.test_set", false]], "texasdataset (class in dgl.data)": [[187, "dgl.data.TexasDataset", false]], "to() (dgl.dglgraph method)": [[108, "dgl.DGLGraph.to", false]], "to() (dgl.graphbolt.fusedcscsamplinggraph method)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.to", false]], "to() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.to", false]], "to() (dgl.graphbolt.sampledsubgraph method)": [[310, "dgl.graphbolt.SampledSubgraph.to", false]], "to() (dgl.graphbolt.samplinggraph method)": [[312, "dgl.graphbolt.SamplingGraph.to", false]], "to() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.to", false]], "to() (dgl.graphbolt.torchbasedfeaturestore method)": [[318, "dgl.graphbolt.TorchBasedFeatureStore.to", false]], "to() (dgl.sparse.sparsematrix method)": [[603, "dgl.sparse.SparseMatrix.to", false]], "to_bidirected() (in module dgl)": [[634, "dgl.to_bidirected", false]], "to_block() (in module dgl)": [[635, "dgl.to_block", false]], "to_canonical_etype() (dgl.dglgraph method)": [[109, "dgl.DGLGraph.to_canonical_etype", false]], "to_cugraph() (dgl.dglgraph method)": [[110, "dgl.DGLGraph.to_cugraph", false]], "to_cugraph() (in module dgl)": [[636, "dgl.to_cugraph", false]], "to_dense() (dgl.sparse.sparsematrix method)": [[604, "dgl.sparse.SparseMatrix.to_dense", false]], "to_double() (in module dgl)": [[637, "dgl.to_double", false]], "to_float() (in module dgl)": [[638, "dgl.to_float", false]], "to_half() (in module dgl)": [[639, "dgl.to_half", false]], "to_heterogeneous() (in module dgl)": [[640, "dgl.to_heterogeneous", false]], "to_homogeneous() (in module dgl)": [[641, "dgl.to_homogeneous", false]], "to_local() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_local", false]], "to_networkx() (in module dgl)": [[642, "dgl.to_networkx", false]], "to_partid() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_partid", false]], "to_pyg_data() (dgl.graphbolt.minibatch method)": [[305, "dgl.graphbolt.MiniBatch.to_pyg_data", false]], "to_simple() (dgl.dglgraph method)": [[111, "dgl.DGLGraph.to_simple", false]], "to_simple() (in module dgl)": [[643, "dgl.to_simple", false]], "to_simple_graph() (in module dgl)": [[644, "dgl.to_simple_graph", false]], "tolevi (class in dgl.transforms)": [[670, "dgl.transforms.ToLevi", false]], "tolokersdataset (class in dgl.data)": [[188, "dgl.data.TolokersDataset", false]], "topk_edges() (in module dgl)": [[645, "dgl.topk_edges", false]], "topk_nodes() (in module dgl)": [[646, "dgl.topk_nodes", false]], "topological_nodes_generator() (in module dgl)": [[647, "dgl.topological_nodes_generator", false]], "torchbasedfeature (class in dgl.graphbolt)": [[317, "dgl.graphbolt.TorchBasedFeature", false]], "torchbasedfeaturestore (class in dgl.graphbolt)": [[318, "dgl.graphbolt.TorchBasedFeatureStore", false]], "tosimple (class in dgl.transforms)": [[671, "dgl.transforms.ToSimple", false]], "total_num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_edges", false]], "total_num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_nodes", false]], "train_graph (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.train_graph", false]], "train_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.train_idx", false]], "train_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.train_idx", false]], "train_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.train_mask", false]], "train_set (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.train_set", false]], "train_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.train_size", false]], "train_step() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[428, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step", false]], "train_step() (dgl.nn.pytorch.explain.pgexplainer method)": [[430, "dgl.nn.pytorch.explain.PGExplainer.train_step", false]], "train_step_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[428, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step_node", false]], "train_step_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[430, "dgl.nn.pytorch.explain.PGExplainer.train_step_node", false]], "transe (class in dgl.nn.pytorch.link)": [[453, "dgl.nn.pytorch.link.TransE", false]], "transpose() (dgl.sparse.sparsematrix method)": [[605, "dgl.sparse.SparseMatrix.transpose", false]], "transr (class in dgl.nn.pytorch.link)": [[454, "dgl.nn.pytorch.link.TransR", false]], "treecycledataset (class in dgl.data)": [[189, "dgl.data.TreeCycleDataset", false]], "treegriddataset (class in dgl.data)": [[190, "dgl.data.TreeGridDataset", false]], "tudataset (class in dgl.data)": [[186, "dgl.data.TUDataset", false]], "twirlsconv (class in dgl.nn.pytorch.conv)": [[424, "dgl.nn.pytorch.conv.TWIRLSConv", false]], "twirlsunfoldingandattention (class in dgl.nn.pytorch.conv)": [[425, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", false]], "type_per_edge (dgl.graphbolt.fusedcscsamplinggraph property)": [[297, "dgl.graphbolt.FusedCSCSamplingGraph.type_per_edge", false]], "typedlinear (class in dgl.nn.pytorch)": [[388, "dgl.nn.pytorch.TypedLinear", false]], "u_add_e() (in module dgl.function)": [[267, "dgl.function.u_add_e", false]], "u_add_e() (in module dgl.ops)": [[504, "dgl.ops.u_add_e", false]], "u_add_e_max() (in module dgl.ops)": [[505, "dgl.ops.u_add_e_max", false]], "u_add_e_mean() (in module dgl.ops)": [[506, "dgl.ops.u_add_e_mean", false]], "u_add_e_min() (in module dgl.ops)": [[507, "dgl.ops.u_add_e_min", false]], "u_add_e_sum() (in module dgl.ops)": [[508, "dgl.ops.u_add_e_sum", false]], "u_add_v() (in module dgl.function)": [[268, "dgl.function.u_add_v", false]], "u_add_v() (in module dgl.ops)": [[509, "dgl.ops.u_add_v", false]], "u_div_e() (in module dgl.function)": [[269, "dgl.function.u_div_e", false]], "u_div_e() (in module dgl.ops)": [[510, "dgl.ops.u_div_e", false]], "u_div_e_max() (in module dgl.ops)": [[511, "dgl.ops.u_div_e_max", false]], "u_div_e_mean() (in module dgl.ops)": [[512, "dgl.ops.u_div_e_mean", false]], "u_div_e_min() (in module dgl.ops)": [[513, "dgl.ops.u_div_e_min", false]], "u_div_e_sum() (in module dgl.ops)": [[514, "dgl.ops.u_div_e_sum", false]], "u_div_v() (in module dgl.function)": [[270, "dgl.function.u_div_v", false]], "u_div_v() (in module dgl.ops)": [[515, "dgl.ops.u_div_v", false]], "u_dot_e() (in module dgl.function)": [[271, "dgl.function.u_dot_e", false]], "u_dot_e() (in module dgl.ops)": [[516, "dgl.ops.u_dot_e", false]], "u_dot_v() (in module dgl.function)": [[272, "dgl.function.u_dot_v", false]], "u_dot_v() (in module dgl.ops)": [[517, "dgl.ops.u_dot_v", false]], "u_mul_e() (in module dgl.function)": [[273, "dgl.function.u_mul_e", false]], "u_mul_e() (in module dgl.ops)": [[518, "dgl.ops.u_mul_e", false]], "u_mul_e_max() (in module dgl.ops)": [[519, "dgl.ops.u_mul_e_max", false]], "u_mul_e_mean() (in module dgl.ops)": [[520, "dgl.ops.u_mul_e_mean", false]], "u_mul_e_min() (in module dgl.ops)": [[521, "dgl.ops.u_mul_e_min", false]], "u_mul_e_sum() (in module dgl.ops)": [[522, "dgl.ops.u_mul_e_sum", false]], "u_mul_v() (in module dgl.function)": [[274, "dgl.function.u_mul_v", false]], "u_mul_v() (in module dgl.ops)": [[523, "dgl.ops.u_mul_v", false]], "u_sub_e() (in module dgl.function)": [[275, "dgl.function.u_sub_e", false]], "u_sub_e() (in module dgl.ops)": [[524, "dgl.ops.u_sub_e", false]], "u_sub_e_max() (in module dgl.ops)": [[525, "dgl.ops.u_sub_e_max", false]], "u_sub_e_mean() (in module dgl.ops)": [[526, "dgl.ops.u_sub_e_mean", false]], "u_sub_e_min() (in module dgl.ops)": [[527, "dgl.ops.u_sub_e_min", false]], "u_sub_e_sum() (in module dgl.ops)": [[528, "dgl.ops.u_sub_e_sum", false]], "u_sub_v() (in module dgl.function)": [[276, "dgl.function.u_sub_v", false]], "u_sub_v() (in module dgl.ops)": [[529, "dgl.ops.u_sub_v", false]], "unbatch() (in module dgl)": [[681, "dgl.unbatch", false]], "uniform (in module dgl.dataloading.negative_sampler)": [[228, "dgl.dataloading.negative_sampler.Uniform", false]], "uniformnegativesampler (class in dgl.graphbolt)": [[319, "dgl.graphbolt.UniformNegativeSampler", false]], "unique_and_compact() (in module dgl.graphbolt)": [[332, "dgl.graphbolt.unique_and_compact", false]], "unique_and_compact_csc_formats() (in module dgl.graphbolt)": [[333, "dgl.graphbolt.unique_and_compact_csc_formats", false]], "unpin_memory_() (dgl.dglgraph method)": [[112, "dgl.DGLGraph.unpin_memory_", false]], "update() (dgl.graphbolt.feature method)": [[294, "dgl.graphbolt.Feature.update", false]], "update() (dgl.graphbolt.featurestore method)": [[296, "dgl.graphbolt.FeatureStore.update", false]], "update() (dgl.graphbolt.gpucachedfeature method)": [[298, "dgl.graphbolt.GPUCachedFeature.update", false]], "update() (dgl.graphbolt.torchbasedfeature method)": [[317, "dgl.graphbolt.TorchBasedFeature.update", false]], "update_all() (dgl.dglgraph method)": [[113, "dgl.DGLGraph.update_all", false]], "url (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.url", false]], "use_libxsmm() (in module dgl)": [[682, "dgl.use_libxsmm", false]], "v_add_e() (in module dgl.function)": [[277, "dgl.function.v_add_e", false]], "v_add_e() (in module dgl.ops)": [[530, "dgl.ops.v_add_e", false]], "v_add_u() (in module dgl.function)": [[278, "dgl.function.v_add_u", false]], "v_add_u() (in module dgl.ops)": [[531, "dgl.ops.v_add_u", false]], "v_div_e() (in module dgl.function)": [[279, "dgl.function.v_div_e", false]], "v_div_e() (in module dgl.ops)": [[532, "dgl.ops.v_div_e", false]], "v_div_u() (in module dgl.function)": [[280, "dgl.function.v_div_u", false]], "v_div_u() (in module dgl.ops)": [[533, "dgl.ops.v_div_u", false]], "v_dot_e() (in module dgl.function)": [[281, "dgl.function.v_dot_e", false]], "v_dot_e() (in module dgl.ops)": [[534, "dgl.ops.v_dot_e", false]], "v_dot_u() (in module dgl.function)": [[282, "dgl.function.v_dot_u", false]], "v_dot_u() (in module dgl.ops)": [[535, "dgl.ops.v_dot_u", false]], "v_mul_e() (in module dgl.function)": [[283, "dgl.function.v_mul_e", false]], "v_mul_e() (in module dgl.ops)": [[536, "dgl.ops.v_mul_e", false]], "v_mul_u() (in module dgl.function)": [[284, "dgl.function.v_mul_u", false]], "v_mul_u() (in module dgl.ops)": [[537, "dgl.ops.v_mul_u", false]], "v_sub_e() (in module dgl.function)": [[285, "dgl.function.v_sub_e", false]], "v_sub_e() (in module dgl.ops)": [[538, "dgl.ops.v_sub_e", false]], "v_sub_u() (in module dgl.function)": [[286, "dgl.function.v_sub_u", false]], "v_sub_u() (in module dgl.ops)": [[539, "dgl.ops.v_sub_u", false]], "val (dgl.sparse.sparsematrix property)": [[606, "dgl.sparse.SparseMatrix.val", false]], "val_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.val_edges", false]], "val_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.val_idx", false]], "val_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.val_idx", false]], "val_like() (in module dgl.sparse)": [[630, "dgl.sparse.val_like", false]], "val_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.val_mask", false]], "val_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.val_size", false]], "validation_set (dgl.graphbolt.task property)": [[314, "dgl.graphbolt.Task.validation_set", false]], "verbose (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.verbose", false]], "vocab (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab", false]], "vocab_size (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab_size", false]], "weight (dgl.nn.pytorch.conv.graphconv attribute)": [[415, "dgl.nn.pytorch.conv.GraphConv.weight", false]], "weightandsum (class in dgl.nn.pytorch.glob)": [[443, "dgl.nn.pytorch.glob.WeightAndSum", false]], "weightbasis (class in dgl.nn.pytorch.utils)": [[459, "dgl.nn.pytorch.utils.WeightBasis", false]], "wikicsdataset (class in dgl.data)": [[192, "dgl.data.WikiCSDataset", false]], "wisconsindataset (class in dgl.data)": [[193, "dgl.data.WisconsinDataset", false]], "wn18dataset (class in dgl.data)": [[191, "dgl.data.WN18Dataset", false]], "yaml_data (dgl.graphbolt.ondiskdataset property)": [[309, "dgl.graphbolt.OnDiskDataset.yaml_data", false]], "yelpdataset (class in dgl.data)": [[194, "dgl.data.YelpDataset", false]], "zincdataset (class in dgl.data)": [[195, "dgl.data.ZINCDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "dgl"]], "dgl": [[1, 1, 1, "", "DGLGraph"], [114, 4, 1, "", "add_edges"], [115, 4, 1, "", "add_nodes"], [116, 4, 1, "", "add_reverse_edges"], [117, 4, 1, "", "add_self_loop"], [118, 4, 1, "", "adj_product_graph"], [119, 4, 1, "", "adj_sum_graph"], [120, 4, 1, "", "adjusted_homophily"], [121, 4, 1, "", "apply_each"], [122, 4, 1, "", "batch"], [123, 4, 1, "", "bfs_edges_generator"], [124, 4, 1, "", "bfs_nodes_generator"], [125, 4, 1, "", "bipartite_from_networkx"], [126, 4, 1, "", "bipartite_from_scipy"], [127, 4, 1, "", "block_to_graph"], [128, 4, 1, "", "broadcast_edges"], [129, 4, 1, "", "broadcast_nodes"], [130, 4, 1, "", "compact_graphs"], [131, 4, 1, "", "create_block"], [2, 0, 0, "-", "data"], [229, 4, 1, "", "dfs_edges_generator"], [230, 4, 1, "", "dfs_labeled_edges_generator"], [243, 4, 1, "", "double_radius_node_labeling"], [244, 4, 1, "", "edge_homophily"], [245, 4, 1, "", "edge_label_informativeness"], [246, 4, 1, "", "edge_subgraph"], [247, 4, 1, "", "edge_type_subgraph"], [248, 4, 1, "", "from_cugraph"], [249, 4, 1, "", "from_networkx"], [250, 4, 1, "", "from_scipy"], [6, 0, 0, "-", "geometry"], [287, 4, 1, "", "graph"], [334, 4, 1, "", "heterograph"], [335, 4, 1, "", "in_subgraph"], [336, 4, 1, "", "is_libxsmm_enabled"], [337, 4, 1, "", "khop_adj"], [338, 4, 1, "", "khop_graph"], [339, 4, 1, "", "khop_in_subgraph"], [340, 4, 1, "", "khop_out_subgraph"], [341, 4, 1, "", "knn_graph"], [342, 4, 1, "", "lap_pe"], [343, 4, 1, "", "laplacian_lambda_max"], [344, 4, 1, "", "line_graph"], [345, 4, 1, "", "linkx_homophily"], [346, 4, 1, "", "load_graphs"], [347, 4, 1, "", "max_edges"], [348, 4, 1, "", "max_nodes"], [349, 4, 1, "", "mean_edges"], [350, 4, 1, "", "mean_nodes"], [351, 4, 1, "", "merge"], [352, 4, 1, "", "metapath_reachable_graph"], [353, 4, 1, "", "metis_partition"], [354, 4, 1, "", "metis_partition_assignment"], [474, 4, 1, "", "node_homophily"], [475, 4, 1, "", "node_label_informativeness"], [476, 4, 1, "", "node_subgraph"], [477, 4, 1, "", "node_type_subgraph"], [478, 4, 1, "", "norm_by_dst"], [10, 0, 0, "-", "optim"], [540, 4, 1, "", "out_subgraph"], [541, 4, 1, "", "partition_graph_with_halo"], [542, 4, 1, "", "prop_edges"], [543, 4, 1, "", "prop_edges_dfs"], [544, 4, 1, "", "prop_nodes"], [545, 4, 1, "", "prop_nodes_bfs"], [546, 4, 1, "", "prop_nodes_topo"], [547, 4, 1, "", "radius_graph"], [548, 4, 1, "", "rand_bipartite"], [549, 4, 1, "", "rand_graph"], [550, 4, 1, "", "random_walk_pe"], [551, 4, 1, "", "readout_edges"], [552, 4, 1, "", "readout_nodes"], [553, 4, 1, "", "remove_edges"], [554, 4, 1, "", "remove_nodes"], [555, 4, 1, "", "remove_self_loop"], [556, 4, 1, "", "reorder_graph"], [557, 4, 1, "", "reverse"], [11, 0, 0, "-", "sampling"], [567, 4, 1, "", "save_graphs"], [568, 4, 1, "", "seed"], [569, 4, 1, "", "segmented_knn_graph"], [570, 4, 1, "", "shortest_dist"], [571, 4, 1, "", "slice_batch"], [572, 4, 1, "", "softmax_edges"], [573, 4, 1, "", "softmax_nodes"], [574, 4, 1, "", "sort_csc_by_tag"], [575, 4, 1, "", "sort_csr_by_tag"], [631, 4, 1, "", "sum_edges"], [632, 4, 1, "", "sum_nodes"], [633, 4, 1, "", "svd_pe"], [634, 4, 1, "", "to_bidirected"], [635, 4, 1, "", "to_block"], [636, 4, 1, "", "to_cugraph"], [637, 4, 1, "", "to_double"], [638, 4, 1, "", "to_float"], [639, 4, 1, "", "to_half"], [640, 4, 1, "", "to_heterogeneous"], [641, 4, 1, "", "to_homogeneous"], [642, 4, 1, "", "to_networkx"], [643, 4, 1, "", "to_simple"], [644, 4, 1, "", "to_simple_graph"], [645, 4, 1, "", "topk_edges"], [646, 4, 1, "", "topk_nodes"], [647, 4, 1, "", "topological_nodes_generator"], [19, 0, 0, "-", "transforms"], [681, 4, 1, "", "unbatch"], [682, 4, 1, "", "use_libxsmm"]], "dgl.DGLGraph": [[26, 2, 1, "", "__getitem__"], [27, 2, 1, "", "add_edges"], [28, 2, 1, "", "add_nodes"], [29, 2, 1, "", "add_self_loop"], [30, 2, 1, "", "adj"], [31, 2, 1, "", "adj_external"], [32, 2, 1, "", "adj_tensors"], [33, 2, 1, "", "adjacency_matrix"], [34, 2, 1, "", "apply_edges"], [35, 2, 1, "", "apply_nodes"], [36, 2, 1, "", "batch_num_edges"], [37, 2, 1, "", "batch_num_nodes"], [38, 3, 1, "", "batch_size"], [39, 3, 1, "", "canonical_etypes"], [40, 2, 1, "", "cpu"], [41, 2, 1, "", "create_formats_"], [42, 3, 1, "", "device"], [43, 3, 1, "", "dstdata"], [44, 3, 1, "", "dstnodes"], [45, 3, 1, "", "dsttypes"], [46, 3, 1, "", "edata"], [47, 2, 1, "", "edge_attr_schemes"], [48, 2, 1, "", "edge_ids"], [49, 2, 1, "", "edge_subgraph"], [50, 2, 1, "", "edge_type_subgraph"], [51, 3, 1, "", "edges"], [52, 3, 1, "", "etypes"], [53, 2, 1, "", "filter_edges"], [54, 2, 1, "", "filter_nodes"], [55, 2, 1, "", "find_edges"], [56, 2, 1, "", "formats"], [57, 2, 1, "", "has_edges_between"], [58, 2, 1, "", "has_nodes"], [59, 3, 1, "", "idtype"], [60, 2, 1, "", "in_degrees"], [61, 2, 1, "", "in_edges"], [62, 2, 1, "", "inc"], [63, 2, 1, "", "incidence_matrix"], [64, 2, 1, "", "int"], [65, 3, 1, "", "is_homogeneous"], [66, 3, 1, "", "is_multigraph"], [67, 2, 1, "", "is_pinned"], [68, 3, 1, "", "is_unibipartite"], [69, 2, 1, "", "line_graph"], [70, 2, 1, "", "local_scope"], [71, 2, 1, "", "long"], [72, 2, 1, "", "metagraph"], [73, 2, 1, "", "multi_update_all"], [74, 3, 1, "", "ndata"], [75, 2, 1, "", "node_attr_schemes"], [76, 2, 1, "", "node_type_subgraph"], [77, 3, 1, "", "nodes"], [78, 3, 1, "", "ntypes"], [79, 2, 1, "", "num_dst_nodes"], [80, 2, 1, "", "num_edges"], [81, 2, 1, "", "num_nodes"], [82, 2, 1, "", "num_src_nodes"], [83, 2, 1, "", "number_of_dst_nodes"], [84, 2, 1, "", "number_of_edges"], [85, 2, 1, "", "number_of_nodes"], [86, 2, 1, "", "number_of_src_nodes"], [87, 2, 1, "", "out_degrees"], [88, 2, 1, "", "out_edges"], [89, 2, 1, "", "pin_memory_"], [90, 2, 1, "", "predecessors"], [91, 2, 1, "", "prop_edges"], [92, 2, 1, "", "prop_nodes"], [93, 2, 1, "", "pull"], [94, 2, 1, "", "push"], [95, 2, 1, "", "remove_edges"], [96, 2, 1, "", "remove_nodes"], [97, 2, 1, "", "remove_self_loop"], [98, 2, 1, "", "reorder_graph"], [99, 2, 1, "", "reverse"], [100, 2, 1, "", "send_and_recv"], [101, 2, 1, "", "set_batch_num_edges"], [102, 2, 1, "", "set_batch_num_nodes"], [103, 3, 1, "", "srcdata"], [104, 3, 1, "", "srcnodes"], [105, 3, 1, "", "srctypes"], [106, 2, 1, "", "subgraph"], [107, 2, 1, "", "successors"], [108, 2, 1, "", "to"], [109, 2, 1, "", "to_canonical_etype"], [110, 2, 1, "", "to_cugraph"], [111, 2, 1, "", "to_simple"], [112, 2, 1, "", "unpin_memory_"], [113, 2, 1, "", "update_all"]], "dgl.data": [[132, 1, 1, "", "AIFBDataset"], [133, 1, 1, "", "AMDataset"], [134, 1, 1, "", "ActorDataset"], [135, 1, 1, "", "AmazonCoBuyComputerDataset"], [136, 1, 1, "", "AmazonCoBuyPhotoDataset"], [137, 1, 1, "", "AmazonRatingsDataset"], [138, 1, 1, "", "AsGraphPredDataset"], [139, 1, 1, "", "AsLinkPredDataset"], [140, 1, 1, "", "AsNodePredDataset"], [141, 1, 1, "", "BA2MotifDataset"], [142, 1, 1, "", "BACommunityDataset"], [143, 1, 1, "", "BAShapeDataset"], [144, 1, 1, "", "BGSDataset"], [145, 1, 1, "", "BitcoinOTCDataset"], [146, 1, 1, "", "CIFAR10SuperPixelDataset"], [147, 1, 1, "", "CLUSTERDataset"], [148, 1, 1, "", "CSVDataset"], [149, 1, 1, "", "ChameleonDataset"], [150, 1, 1, "", "CiteseerGraphDataset"], [151, 1, 1, "", "CoauthorCSDataset"], [152, 1, 1, "", "CoauthorPhysicsDataset"], [153, 1, 1, "", "CoraFullDataset"], [154, 1, 1, "", "CoraGraphDataset"], [155, 1, 1, "", "CornellDataset"], [156, 1, 1, "", "DGLDataset"], [157, 1, 1, "", "FB15k237Dataset"], [158, 1, 1, "", "FB15kDataset"], [159, 1, 1, "", "FakeNewsDataset"], [160, 1, 1, "", "FlickrDataset"], [161, 1, 1, "", "FraudAmazonDataset"], [162, 1, 1, "", "FraudDataset"], [163, 1, 1, "", "FraudYelpDataset"], [164, 1, 1, "", "GDELTDataset"], [165, 1, 1, "", "GINDataset"], [166, 1, 1, "", "ICEWS18Dataset"], [167, 1, 1, "", "KarateClubDataset"], [168, 1, 1, "", "LegacyTUDataset"], [169, 1, 1, "", "MNISTSuperPixelDataset"], [170, 1, 1, "", "MUTAGDataset"], [171, 1, 1, "", "MinesweeperDataset"], [172, 1, 1, "", "MiniGCDataset"], [173, 1, 1, "", "MovieLensDataset"], [174, 1, 1, "", "PATTERNDataset"], [175, 1, 1, "", "PPIDataset"], [176, 1, 1, "", "PubmedGraphDataset"], [177, 1, 1, "", "QM7bDataset"], [178, 1, 1, "", "QM9Dataset"], [179, 1, 1, "", "QM9EdgeDataset"], [180, 1, 1, "", "QuestionsDataset"], [181, 1, 1, "", "RedditDataset"], [182, 1, 1, "", "RomanEmpireDataset"], [183, 1, 1, "", "SBMMixtureDataset"], [184, 1, 1, "", "SSTDataset"], [185, 1, 1, "", "SquirrelDataset"], [186, 1, 1, "", "TUDataset"], [187, 1, 1, "", "TexasDataset"], [188, 1, 1, "", "TolokersDataset"], [189, 1, 1, "", "TreeCycleDataset"], [190, 1, 1, "", "TreeGridDataset"], [191, 1, 1, "", "WN18Dataset"], [192, 1, 1, "", "WikiCSDataset"], [193, 1, 1, "", "WisconsinDataset"], [194, 1, 1, "", "YelpDataset"], [195, 1, 1, "", "ZINCDataset"]], "dgl.data.AIFBDataset": [[132, 2, 1, "", "__getitem__"], [132, 2, 1, "", "__len__"], [132, 5, 1, "", "num_classes"], [132, 5, 1, "", "predict_category"]], "dgl.data.AMDataset": [[133, 2, 1, "", "__getitem__"], [133, 2, 1, "", "__len__"], [133, 5, 1, "", "num_classes"], [133, 5, 1, "", "predict_category"]], "dgl.data.ActorDataset": [[134, 2, 1, "", "__getitem__"], [134, 2, 1, "", "__len__"], [134, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyComputerDataset": [[135, 2, 1, "", "__getitem__"], [135, 2, 1, "", "__len__"], [135, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyPhotoDataset": [[136, 2, 1, "", "__getitem__"], [136, 2, 1, "", "__len__"], [136, 5, 1, "", "num_classes"]], "dgl.data.AmazonRatingsDataset": [[137, 2, 1, "", "__getitem__"], [137, 2, 1, "", "__len__"], [137, 5, 1, "", "num_classes"]], "dgl.data.AsGraphPredDataset": [[138, 2, 1, "", "__getitem__"], [138, 2, 1, "", "__len__"], [138, 5, 1, "", "edge_feat_size"], [138, 5, 1, "", "node_feat_size"], [138, 5, 1, "", "num_classes"], [138, 5, 1, "", "num_tasks"], [138, 5, 1, "", "test_idx"], [138, 5, 1, "", "train_idx"], [138, 5, 1, "", "val_idx"]], "dgl.data.AsLinkPredDataset": [[139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__len__"], [139, 5, 1, "", "feat_size"], [139, 5, 1, "", "test_edges"], [139, 5, 1, "", "train_graph"], [139, 5, 1, "", "val_edges"]], "dgl.data.AsNodePredDataset": [[140, 2, 1, "", "__getitem__"], [140, 2, 1, "", "__len__"], [140, 5, 1, "", "num_classes"], [140, 5, 1, "", "test_idx"], [140, 5, 1, "", "train_idx"], [140, 5, 1, "", "val_idx"]], "dgl.data.BA2MotifDataset": [[141, 2, 1, "", "__getitem__"], [141, 2, 1, "", "__len__"], [141, 5, 1, "", "num_classes"]], "dgl.data.BACommunityDataset": [[142, 2, 1, "", "__getitem__"], [142, 2, 1, "", "__len__"], [142, 5, 1, "", "num_classes"]], "dgl.data.BAShapeDataset": [[143, 2, 1, "", "__getitem__"], [143, 2, 1, "", "__len__"], [143, 5, 1, "", "num_classes"]], "dgl.data.BGSDataset": [[144, 2, 1, "", "__getitem__"], [144, 2, 1, "", "__len__"], [144, 5, 1, "", "num_classes"], [144, 5, 1, "", "predict_category"]], "dgl.data.BitcoinOTCDataset": [[145, 2, 1, "", "__getitem__"], [145, 2, 1, "", "__len__"], [145, 5, 1, "", "graphs"], [145, 5, 1, "", "is_temporal"]], "dgl.data.CIFAR10SuperPixelDataset": [[146, 2, 1, "", "__getitem__"], [146, 2, 1, "", "__len__"]], "dgl.data.CLUSTERDataset": [[147, 2, 1, "", "__getitem__"], [147, 2, 1, "", "__len__"], [147, 5, 1, "", "num_classes"]], "dgl.data.CSVDataset": [[148, 2, 1, "", "__getitem__"], [148, 2, 1, "", "__len__"], [148, 5, 1, "", "data"], [148, 5, 1, "", "graphs"]], "dgl.data.ChameleonDataset": [[149, 2, 1, "", "__getitem__"], [149, 2, 1, "", "__len__"], [149, 5, 1, "", "num_classes"]], "dgl.data.CiteseerGraphDataset": [[150, 2, 1, "", "__getitem__"], [150, 2, 1, "", "__len__"], [150, 5, 1, "", "num_classes"]], "dgl.data.CoauthorCSDataset": [[151, 2, 1, "", "__getitem__"], [151, 2, 1, "", "__len__"], [151, 5, 1, "", "num_classes"]], "dgl.data.CoauthorPhysicsDataset": [[152, 2, 1, "", "__getitem__"], [152, 2, 1, "", "__len__"], [152, 5, 1, "", "num_classes"]], "dgl.data.CoraFullDataset": [[153, 2, 1, "", "__getitem__"], [153, 2, 1, "", "__len__"], [153, 5, 1, "", "num_classes"]], "dgl.data.CoraGraphDataset": [[154, 2, 1, "", "__getitem__"], [154, 2, 1, "", "__len__"], [154, 5, 1, "", "num_classes"]], "dgl.data.CornellDataset": [[155, 2, 1, "", "__getitem__"], [155, 2, 1, "", "__len__"], [155, 5, 1, "", "num_classes"]], "dgl.data.DGLDataset": [[156, 2, 1, "", "__getitem__"], [156, 2, 1, "", "__len__"], [156, 5, 1, "", "hash"], [156, 5, 1, "", "name"], [156, 5, 1, "", "raw_dir"], [156, 5, 1, "", "raw_path"], [156, 5, 1, "", "save_dir"], [156, 5, 1, "", "save_path"], [156, 5, 1, "", "url"], [156, 5, 1, "", "verbose"]], "dgl.data.FB15k237Dataset": [[157, 2, 1, "", "__getitem__"], [157, 2, 1, "", "__len__"], [157, 5, 1, "", "num_nodes"], [157, 5, 1, "", "num_rels"]], "dgl.data.FB15kDataset": [[158, 2, 1, "", "__getitem__"], [158, 2, 1, "", "__len__"], [158, 5, 1, "", "num_nodes"], [158, 5, 1, "", "num_rels"]], "dgl.data.FakeNewsDataset": [[159, 2, 1, "", "__getitem__"], [159, 2, 1, "", "__len__"], [159, 5, 1, "", "feature"], [159, 5, 1, "", "feature_name"], [159, 5, 1, "", "graphs"], [159, 5, 1, "", "labels"], [159, 5, 1, "", "name"], [159, 5, 1, "", "num_classes"], [159, 5, 1, "", "num_graphs"], [159, 5, 1, "", "test_mask"], [159, 5, 1, "", "train_mask"], [159, 5, 1, "", "val_mask"]], "dgl.data.FlickrDataset": [[160, 2, 1, "", "__getitem__"], [160, 2, 1, "", "__len__"], [160, 5, 1, "", "num_classes"]], "dgl.data.FraudAmazonDataset": [[161, 2, 1, "", "__getitem__"], [161, 2, 1, "", "__len__"]], "dgl.data.FraudDataset": [[162, 2, 1, "", "__getitem__"], [162, 2, 1, "", "__len__"], [162, 5, 1, "", "graph"], [162, 5, 1, "", "num_classes"], [162, 5, 1, "", "seed"], [162, 5, 1, "", "train_size"], [162, 5, 1, "", "val_size"]], "dgl.data.FraudYelpDataset": [[163, 2, 1, "", "__getitem__"], [163, 2, 1, "", "__len__"]], "dgl.data.GDELTDataset": [[164, 2, 1, "", "__getitem__"], [164, 2, 1, "", "__len__"], [164, 5, 1, "", "end_time"], [164, 5, 1, "", "is_temporal"], [164, 5, 1, "", "start_time"]], "dgl.data.GINDataset": [[165, 2, 1, "", "__getitem__"], [165, 2, 1, "", "__len__"], [165, 5, 1, "", "num_classes"]], "dgl.data.ICEWS18Dataset": [[166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__len__"], [166, 5, 1, "", "is_temporal"]], "dgl.data.KarateClubDataset": [[167, 2, 1, "", "__getitem__"], [167, 2, 1, "", "__len__"], [167, 5, 1, "", "num_classes"]], "dgl.data.LegacyTUDataset": [[168, 2, 1, "", "__getitem__"], [168, 2, 1, "", "__len__"], [168, 5, 1, "", "max_num_node"], [168, 5, 1, "", "num_classes"], [168, 5, 1, "", "num_labels"]], "dgl.data.MNISTSuperPixelDataset": [[169, 2, 1, "", "__getitem__"], [169, 2, 1, "", "__len__"]], "dgl.data.MUTAGDataset": [[170, 2, 1, "", "__getitem__"], [170, 2, 1, "", "__len__"], [170, 5, 1, "", "graph"], [170, 5, 1, "", "num_classes"], [170, 5, 1, "", "predict_category"]], "dgl.data.MinesweeperDataset": [[171, 2, 1, "", "__getitem__"], [171, 2, 1, "", "__len__"], [171, 5, 1, "", "num_classes"]], "dgl.data.MiniGCDataset": [[172, 2, 1, "", "__getitem__"], [172, 2, 1, "", "__len__"], [172, 5, 1, "", "max_num_v"], [172, 5, 1, "", "min_num_v"], [172, 5, 1, "", "num_classes"], [172, 5, 1, "", "num_graphs"]], "dgl.data.MovieLensDataset": [[173, 2, 1, "", "__getitem__"], [173, 2, 1, "", "__len__"]], "dgl.data.PATTERNDataset": [[174, 2, 1, "", "__getitem__"], [174, 2, 1, "", "__len__"], [174, 5, 1, "", "num_classes"]], "dgl.data.PPIDataset": [[175, 2, 1, "", "__getitem__"], [175, 2, 1, "", "__len__"], [175, 5, 1, "", "features"], [175, 5, 1, "", "labels"], [175, 5, 1, "", "num_labels"]], "dgl.data.PubmedGraphDataset": [[176, 2, 1, "", "__getitem__"], [176, 2, 1, "", "__len__"], [176, 5, 1, "", "num_classes"]], "dgl.data.QM7bDataset": [[177, 2, 1, "", "__getitem__"], [177, 2, 1, "", "__len__"], [177, 5, 1, "", "num_labels"], [177, 5, 1, "", "num_tasks"]], "dgl.data.QM9Dataset": [[178, 2, 1, "", "__getitem__"], [178, 2, 1, "", "__len__"], [178, 5, 1, "", "num_labels"], [178, 5, 1, "", "num_tasks"]], "dgl.data.QM9EdgeDataset": [[179, 2, 1, "", "__getitem__"], [179, 2, 1, "", "__len__"], [179, 5, 1, "", "num_labels"], [179, 5, 1, "", "num_tasks"]], "dgl.data.QuestionsDataset": [[180, 2, 1, "", "__getitem__"], [180, 2, 1, "", "__len__"], [180, 5, 1, "", "num_classes"]], "dgl.data.RedditDataset": [[181, 2, 1, "", "__getitem__"], [181, 2, 1, "", "__len__"], [181, 5, 1, "", "num_classes"]], "dgl.data.RomanEmpireDataset": [[182, 2, 1, "", "__getitem__"], [182, 2, 1, "", "__len__"], [182, 5, 1, "", "num_classes"]], "dgl.data.SBMMixtureDataset": [[183, 2, 1, "", "__getitem__"], [183, 2, 1, "", "__len__"], [183, 2, 1, "", "collate_fn"]], "dgl.data.SSTDataset": [[184, 2, 1, "", "__getitem__"], [184, 2, 1, "", "__len__"], [184, 5, 1, "", "num_classes"], [184, 5, 1, "", "pretrained_emb"], [184, 5, 1, "", "vocab"], [184, 5, 1, "", "vocab_size"]], "dgl.data.SquirrelDataset": [[185, 2, 1, "", "__getitem__"], [185, 2, 1, "", "__len__"], [185, 5, 1, "", "num_classes"]], "dgl.data.TUDataset": [[186, 2, 1, "", "__getitem__"], [186, 2, 1, "", "__len__"], [186, 5, 1, "", "max_num_node"], [186, 5, 1, "", "num_classes"], [186, 5, 1, "", "num_labels"]], "dgl.data.TexasDataset": [[187, 2, 1, "", "__getitem__"], [187, 2, 1, "", "__len__"], [187, 5, 1, "", "num_classes"]], "dgl.data.TolokersDataset": [[188, 2, 1, "", "__getitem__"], [188, 2, 1, "", "__len__"], [188, 5, 1, "", "num_classes"]], "dgl.data.TreeCycleDataset": [[189, 2, 1, "", "__getitem__"], [189, 2, 1, "", "__len__"], [189, 5, 1, "", "num_classes"]], "dgl.data.TreeGridDataset": [[190, 2, 1, "", "__getitem__"], [190, 2, 1, "", "__len__"], [190, 5, 1, "", "num_classes"]], "dgl.data.WN18Dataset": [[191, 2, 1, "", "__getitem__"], [191, 2, 1, "", "__len__"], [191, 5, 1, "", "num_nodes"], [191, 5, 1, "", "num_rels"]], "dgl.data.WikiCSDataset": [[192, 2, 1, "", "__getitem__"], [192, 2, 1, "", "__len__"], [192, 5, 1, "", "num_classes"]], "dgl.data.WisconsinDataset": [[193, 2, 1, "", "__getitem__"], [193, 2, 1, "", "__len__"], [193, 5, 1, "", "num_classes"]], "dgl.data.YelpDataset": [[194, 2, 1, "", "__getitem__"], [194, 2, 1, "", "__len__"], [194, 5, 1, "", "num_classes"]], "dgl.data.ZINCDataset": [[195, 2, 1, "", "__getitem__"], [195, 2, 1, "", "__len__"], [195, 5, 1, "", "num_atom_types"], [195, 5, 1, "", "num_bond_types"]], "dgl.data.utils": [[196, 1, 1, "", "Subset"], [197, 1, 1, "", "add_node_property_split"], [198, 1, 1, "", "add_nodepred_split"], [199, 1, 1, "", "check_sha1"], [200, 1, 1, "", "download"], [201, 1, 1, "", "extract_archive"], [202, 1, 1, "", "get_download_dir"], [203, 1, 1, "", "load_info"], [204, 1, 1, "", "load_labels"], [205, 1, 1, "", "mask_nodes_by_property"], [206, 1, 1, "", "save_info"], [207, 1, 1, "", "split_dataset"]], "dgl.data.utils.Subset": [[196, 2, 1, "", "__getitem__"], [196, 2, 1, "", "__len__"]], "dgl.dataloading": [[208, 1, 1, "", "BlockSampler"], [209, 1, 1, "", "ClusterGCNSampler"], [210, 1, 1, "", "DataLoader"], [211, 1, 1, "", "DistEdgeDataLoader"], [212, 1, 1, "", "DistNodeDataLoader"], [213, 1, 1, "", "GraphDataLoader"], [214, 1, 1, "", "LaborSampler"], [215, 1, 1, "", "MultiLayerFullNeighborSampler"], [216, 1, 1, "", "NeighborSampler"], [217, 1, 1, "", "SAINTSampler"], [218, 1, 1, "", "Sampler"], [219, 1, 1, "", "ShaDowKHopSampler"], [220, 4, 1, "", "as_edge_prediction_sampler"]], "dgl.dataloading.BlockSampler": [[208, 2, 1, "", "__init__"]], "dgl.dataloading.base": [[221, 1, 1, "", "LazyFeature"], [222, 1, 1, "", "set_dst_lazy_features"], [223, 1, 1, "", "set_edge_lazy_features"], [224, 1, 1, "", "set_node_lazy_features"], [225, 1, 1, "", "set_src_lazy_features"]], "dgl.dataloading.negative_sampler": [[226, 1, 1, "", "GlobalUniform"], [227, 1, 1, "", "PerSourceUniform"], [228, 5, 1, "", "Uniform"]], "dgl.distributed": [[4, 1, 1, "", "DistDataLoader"], [4, 1, 1, "", "DistEmbedding"], [4, 1, 1, "", "DistGraph"], [4, 1, 1, "", "DistTensor"], [4, 1, 1, "", "GraphPartitionBook"], [4, 1, 1, "", "PartitionPolicy"], [231, 4, 1, "", "dgl_partition_to_graphbolt"], [232, 4, 1, "", "edge_split"], [233, 4, 1, "", "find_edges"], [234, 4, 1, "", "in_subgraph"], [235, 4, 1, "", "initialize"], [236, 4, 1, "", "load_partition"], [237, 4, 1, "", "load_partition_book"], [238, 4, 1, "", "load_partition_feats"], [239, 4, 1, "", "node_split"], [240, 4, 1, "", "partition_graph"], [241, 4, 1, "", "sample_etype_neighbors"], [242, 4, 1, "", "sample_neighbors"]], "dgl.distributed.DistGraph": [[4, 2, 1, "", "barrier"], [4, 3, 1, "", "device"], [4, 3, 1, "", "edata"], [4, 2, 1, "", "edge_attr_schemes"], [4, 3, 1, "", "edges"], [4, 3, 1, "", "etypes"], [4, 2, 1, "", "find_edges"], [4, 2, 1, "", "get_edge_partition_policy"], [4, 2, 1, "", "get_etype_id"], [4, 2, 1, "", "get_node_partition_policy"], [4, 2, 1, "", "get_ntype_id"], [4, 2, 1, "", "get_partition_book"], [4, 3, 1, "", "idtype"], [4, 2, 1, "", "in_degrees"], [4, 3, 1, "", "local_partition"], [4, 3, 1, "", "ndata"], [4, 2, 1, "", "node_attr_schemes"], [4, 3, 1, "", "nodes"], [4, 3, 1, "", "ntypes"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_nodes"], [4, 2, 1, "", "number_of_edges"], [4, 2, 1, "", "number_of_nodes"], [4, 2, 1, "", "out_degrees"], [4, 2, 1, "", "rank"]], "dgl.distributed.DistTensor": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "name"], [4, 3, 1, "", "part_policy"], [4, 3, 1, "", "shape"]], "dgl.distributed.GraphPartitionBook": [[4, 3, 1, "", "canonical_etypes"], [4, 2, 1, "", "eid2localeid"], [4, 2, 1, "", "eid2partid"], [4, 2, 1, "", "map_to_homo_eid"], [4, 2, 1, "", "map_to_homo_nid"], [4, 2, 1, "", "map_to_per_etype"], [4, 2, 1, "", "map_to_per_ntype"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "nid2localnid"], [4, 2, 1, "", "nid2partid"], [4, 2, 1, "", "num_partitions"], [4, 3, 1, "", "partid"], [4, 2, 1, "", "partid2eids"], [4, 2, 1, "", "partid2nids"], [4, 2, 1, "", "shared_memory"]], "dgl.distributed.PartitionPolicy": [[4, 2, 1, "", "get_part_size"], [4, 2, 1, "", "get_size"], [4, 3, 1, "", "part_id"], [4, 3, 1, "", "partition_book"], [4, 3, 1, "", "policy_str"], [4, 2, 1, "", "to_local"], [4, 2, 1, "", "to_partid"]], "dgl.distributed.optim": [[4, 1, 1, "", "SparseAdagrad"], [4, 1, 1, "", "SparseAdam"]], "dgl.distributed.optim.SparseAdagrad": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.distributed.optim.SparseAdam": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.function": [[251, 4, 1, "", "copy_e"], [252, 4, 1, "", "copy_u"], [253, 4, 1, "", "e_add_u"], [254, 4, 1, "", "e_add_v"], [255, 4, 1, "", "e_div_u"], [256, 4, 1, "", "e_div_v"], [257, 4, 1, "", "e_dot_u"], [258, 4, 1, "", "e_dot_v"], [259, 4, 1, "", "e_mul_u"], [260, 4, 1, "", "e_mul_v"], [261, 4, 1, "", "e_sub_u"], [262, 4, 1, "", "e_sub_v"], [263, 4, 1, "", "max"], [264, 4, 1, "", "mean"], [265, 4, 1, "", "min"], [266, 4, 1, "", "sum"], [267, 4, 1, "", "u_add_e"], [268, 4, 1, "", "u_add_v"], [269, 4, 1, "", "u_div_e"], [270, 4, 1, "", "u_div_v"], [271, 4, 1, "", "u_dot_e"], [272, 4, 1, "", "u_dot_v"], [273, 4, 1, "", "u_mul_e"], [274, 4, 1, "", "u_mul_v"], [275, 4, 1, "", "u_sub_e"], [276, 4, 1, "", "u_sub_v"], [277, 4, 1, "", "v_add_e"], [278, 4, 1, "", "v_add_u"], [279, 4, 1, "", "v_div_e"], [280, 4, 1, "", "v_div_u"], [281, 4, 1, "", "v_dot_e"], [282, 4, 1, "", "v_dot_u"], [283, 4, 1, "", "v_mul_e"], [284, 4, 1, "", "v_mul_u"], [285, 4, 1, "", "v_sub_e"], [286, 4, 1, "", "v_sub_u"]], "dgl.geometry": [[6, 1, 1, "", "farthest_point_sampler"], [6, 1, 1, "", "neighbor_matching"]], "dgl.graphbolt": [[288, 1, 1, "", "BasicFeatureStore"], [289, 1, 1, "", "BuiltinDataset"], [290, 1, 1, "", "CopyTo"], [291, 1, 1, "", "DataLoader"], [292, 1, 1, "", "Dataset"], [293, 1, 1, "", "DistributedItemSampler"], [294, 1, 1, "", "Feature"], [295, 1, 1, "", "FeatureFetcher"], [296, 1, 1, "", "FeatureStore"], [297, 1, 1, "", "FusedCSCSamplingGraph"], [298, 1, 1, "", "GPUCachedFeature"], [299, 1, 1, "", "HeteroItemSet"], [300, 1, 1, "", "InSubgraphSampler"], [301, 1, 1, "", "ItemSampler"], [302, 1, 1, "", "ItemSet"], [303, 1, 1, "", "LayerNeighborSampler"], [304, 1, 1, "", "LegacyDataset"], [305, 1, 1, "", "MiniBatch"], [306, 1, 1, "", "MiniBatchTransformer"], [307, 1, 1, "", "NegativeSampler"], [308, 1, 1, "", "NeighborSampler"], [309, 1, 1, "", "OnDiskDataset"], [310, 1, 1, "", "SampledSubgraph"], [311, 1, 1, "", "SampledSubgraphImpl"], [312, 1, 1, "", "SamplingGraph"], [313, 1, 1, "", "SubgraphSampler"], [314, 1, 1, "", "Task"], [315, 1, 1, "", "TemporalLayerNeighborSampler"], [316, 1, 1, "", "TemporalNeighborSampler"], [317, 1, 1, "", "TorchBasedFeature"], [318, 1, 1, "", "TorchBasedFeatureStore"], [319, 1, 1, "", "UniformNegativeSampler"], [320, 4, 1, "", "add_reverse_edges"], [321, 4, 1, "", "compact_csc_format"], [322, 4, 1, "", "etype_str_to_tuple"], [323, 4, 1, "", "etype_tuple_to_str"], [324, 4, 1, "", "exclude_seed_edges"], [325, 4, 1, "", "expand_indptr"], [326, 4, 1, "", "from_dglgraph"], [327, 4, 1, "", "fused_csc_sampling_graph"], [328, 4, 1, "", "index_select"], [329, 4, 1, "", "isin"], [330, 4, 1, "", "load_from_shared_memory"], [331, 4, 1, "", "seed"], [332, 4, 1, "", "unique_and_compact"], [333, 4, 1, "", "unique_and_compact_csc_formats"]], "dgl.graphbolt.BasicFeatureStore": [[288, 2, 1, "", "keys"]], "dgl.graphbolt.Dataset": [[292, 3, 1, "", "all_nodes_set"], [292, 3, 1, "", "dataset_name"], [292, 3, 1, "", "feature"], [292, 3, 1, "", "graph"], [292, 3, 1, "", "tasks"]], "dgl.graphbolt.Feature": [[294, 2, 1, "", "metadata"], [294, 2, 1, "", "read"], [294, 2, 1, "", "read_async"], [294, 2, 1, "", "read_async_num_stages"], [294, 2, 1, "", "size"], [294, 2, 1, "", "update"]], "dgl.graphbolt.FeatureStore": [[296, 2, 1, "", "keys"], [296, 2, 1, "", "metadata"], [296, 2, 1, "", "read"], [296, 2, 1, "", "size"], [296, 2, 1, "", "update"]], "dgl.graphbolt.FusedCSCSamplingGraph": [[297, 2, 1, "", "add_edge_attribute"], [297, 2, 1, "", "add_node_attribute"], [297, 2, 1, "", "copy_to_shared_memory"], [297, 3, 1, "", "csc_indptr"], [297, 2, 1, "", "edge_attribute"], [297, 3, 1, "", "edge_attributes"], [297, 3, 1, "", "edge_type_to_id"], [297, 2, 1, "", "in_subgraph"], [297, 3, 1, "", "indices"], [297, 2, 1, "", "node_attribute"], [297, 3, 1, "", "node_attributes"], [297, 3, 1, "", "node_type_offset"], [297, 3, 1, "", "node_type_to_id"], [297, 3, 1, "", "num_edges"], [297, 3, 1, "", "num_nodes"], [297, 2, 1, "", "pin_memory_"], [297, 2, 1, "", "sample_layer_neighbors"], [297, 2, 1, "", "sample_negative_edges_uniform"], [297, 2, 1, "", "sample_neighbors"], [297, 2, 1, "", "temporal_sample_layer_neighbors"], [297, 2, 1, "", "temporal_sample_neighbors"], [297, 2, 1, "", "to"], [297, 3, 1, "", "total_num_edges"], [297, 3, 1, "", "total_num_nodes"], [297, 3, 1, "", "type_per_edge"]], "dgl.graphbolt.GPUCachedFeature": [[298, 2, 1, "", "read"], [298, 2, 1, "", "read_async"], [298, 2, 1, "", "read_async_num_stages"], [298, 2, 1, "", "size"], [298, 2, 1, "", "update"]], "dgl.graphbolt.HeteroItemSet": [[299, 3, 1, "", "names"]], "dgl.graphbolt.InSubgraphSampler": [[300, 2, 1, "", "sample_subgraphs"]], "dgl.graphbolt.ItemSet": [[302, 3, 1, "", "names"], [302, 3, 1, "", "num_items"]], "dgl.graphbolt.LegacyDataset": [[304, 3, 1, "", "all_nodes_set"], [304, 3, 1, "", "dataset_name"], [304, 3, 1, "", "feature"], [304, 3, 1, "", "graph"], [304, 3, 1, "", "tasks"]], "dgl.graphbolt.MiniBatch": [[305, 3, 1, "", "blocks"], [305, 5, 1, "", "compacted_seeds"], [305, 2, 1, "", "compute_blocks"], [305, 5, 1, "", "edge_features"], [305, 2, 1, "", "edge_ids"], [305, 5, 1, "", "indexes"], [305, 5, 1, "", "input_nodes"], [305, 2, 1, "", "is_pinned"], [305, 5, 1, "", "labels"], [305, 5, 1, "", "node_features"], [305, 2, 1, "", "node_ids"], [305, 2, 1, "", "num_layers"], [305, 2, 1, "", "pin_memory"], [305, 5, 1, "", "sampled_subgraphs"], [305, 5, 1, "", "seeds"], [305, 2, 1, "", "set_edge_features"], [305, 2, 1, "", "set_node_features"], [305, 2, 1, "", "to"], [305, 2, 1, "", "to_pyg_data"]], "dgl.graphbolt.OnDiskDataset": [[309, 3, 1, "", "all_nodes_set"], [309, 3, 1, "", "dataset_name"], [309, 3, 1, "", "feature"], [309, 3, 1, "", "graph"], [309, 2, 1, "", "load"], [309, 3, 1, "", "tasks"], [309, 3, 1, "", "yaml_data"]], "dgl.graphbolt.SampledSubgraph": [[310, 2, 1, "", "exclude_edges"], [310, 2, 1, "", "is_pinned"], [310, 3, 1, "", "original_column_node_ids"], [310, 3, 1, "", "original_edge_ids"], [310, 3, 1, "", "original_row_node_ids"], [310, 2, 1, "", "pin_memory"], [310, 3, 1, "", "sampled_csc"], [310, 2, 1, "", "to"]], "dgl.graphbolt.SampledSubgraphImpl": [[311, 5, 1, "", "original_column_node_ids"], [311, 5, 1, "", "original_edge_ids"], [311, 5, 1, "", "original_row_node_ids"], [311, 5, 1, "", "sampled_csc"]], "dgl.graphbolt.SamplingGraph": [[312, 2, 1, "", "copy_to_shared_memory"], [312, 3, 1, "", "num_edges"], [312, 3, 1, "", "num_nodes"], [312, 2, 1, "", "to"]], "dgl.graphbolt.SubgraphSampler": [[313, 2, 1, "", "sample_subgraphs"], [313, 2, 1, "", "sampling_stages"]], "dgl.graphbolt.Task": [[314, 3, 1, "", "metadata"], [314, 3, 1, "", "test_set"], [314, 3, 1, "", "train_set"], [314, 3, 1, "", "validation_set"]], "dgl.graphbolt.TorchBasedFeature": [[317, 2, 1, "", "is_pinned"], [317, 2, 1, "", "metadata"], [317, 2, 1, "", "pin_memory_"], [317, 2, 1, "", "read"], [317, 2, 1, "", "read_async"], [317, 2, 1, "", "read_async_num_stages"], [317, 2, 1, "", "size"], [317, 2, 1, "", "to"], [317, 2, 1, "", "update"]], "dgl.graphbolt.TorchBasedFeatureStore": [[318, 2, 1, "", "is_pinned"], [318, 2, 1, "", "pin_memory_"], [318, 2, 1, "", "to"]], "dgl.multiprocessing.pytorch": [[355, 4, 1, "", "call_once_and_share"], [356, 4, 1, "", "shared_tensor"]], "dgl.nn": [[18, 0, 0, "-", "functional"]], "dgl.nn.functional": [[357, 4, 1, "", "edge_softmax"]], "dgl.nn.mxnet": [[358, 1, 1, "", "HeteroGraphConv"]], "dgl.nn.mxnet.conv": [[359, 1, 1, "", "AGNNConv"], [360, 1, 1, "", "APPNPConv"], [361, 1, 1, "", "ChebConv"], [362, 1, 1, "", "DenseChebConv"], [363, 1, 1, "", "DenseGraphConv"], [364, 1, 1, "", "DenseSAGEConv"], [365, 1, 1, "", "EdgeConv"], [366, 1, 1, "", "GATConv"], [367, 1, 1, "", "GINConv"], [368, 1, 1, "", "GMMConv"], [369, 1, 1, "", "GatedGraphConv"], [370, 1, 1, "", "GraphConv"], [371, 1, 1, "", "NNConv"], [372, 1, 1, "", "RelGraphConv"], [373, 1, 1, "", "SAGEConv"], [374, 1, 1, "", "SGConv"], [375, 1, 1, "", "TAGConv"]], "dgl.nn.mxnet.glob": [[376, 1, 1, "", "AvgPooling"], [377, 1, 1, "", "GlobalAttentionPooling"], [378, 1, 1, "", "MaxPooling"], [379, 1, 1, "", "Set2Set"], [380, 1, 1, "", "SortPooling"], [381, 1, 1, "", "SumPooling"]], "dgl.nn.mxnet.utils": [[382, 1, 1, "", "Sequential"]], "dgl.nn.pytorch": [[383, 1, 1, "", "DeepWalk"], [384, 1, 1, "", "HeteroEmbedding"], [385, 1, 1, "", "HeteroGraphConv"], [386, 1, 1, "", "HeteroLinear"], [387, 1, 1, "", "MetaPath2Vec"], [388, 1, 1, "", "TypedLinear"]], "dgl.nn.pytorch.DeepWalk": [[383, 2, 1, "", "forward"], [383, 5, 1, "", "node_embed"], [383, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroEmbedding": [[384, 2, 1, "", "forward"], [384, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroGraphConv": [[385, 2, 1, "", "forward"], [385, 5, 1, "", "mods"]], "dgl.nn.pytorch.HeteroLinear": [[386, 2, 1, "", "forward"]], "dgl.nn.pytorch.MetaPath2Vec": [[387, 2, 1, "", "forward"], [387, 5, 1, "", "local_to_global_nid"], [387, 5, 1, "", "node_embed"], [387, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.TypedLinear": [[388, 2, 1, "", "forward"], [388, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv": [[389, 1, 1, "", "AGNNConv"], [390, 1, 1, "", "APPNPConv"], [391, 1, 1, "", "AtomicConv"], [392, 1, 1, "", "CFConv"], [393, 1, 1, "", "ChebConv"], [394, 1, 1, "", "CuGraphGATConv"], [395, 1, 1, "", "CuGraphRelGraphConv"], [396, 1, 1, "", "CuGraphSAGEConv"], [397, 1, 1, "", "DGNConv"], [398, 1, 1, "", "DenseChebConv"], [399, 1, 1, "", "DenseGraphConv"], [400, 1, 1, "", "DenseSAGEConv"], [401, 1, 1, "", "DotGatConv"], [402, 1, 1, "", "EGATConv"], [403, 1, 1, "", "EGNNConv"], [404, 1, 1, "", "EdgeConv"], [405, 1, 1, "", "EdgeGATConv"], [406, 1, 1, "", "EdgeWeightNorm"], [407, 1, 1, "", "GATConv"], [408, 1, 1, "", "GATv2Conv"], [409, 1, 1, "", "GCN2Conv"], [410, 1, 1, "", "GINConv"], [411, 1, 1, "", "GINEConv"], [412, 1, 1, "", "GMMConv"], [413, 1, 1, "", "GatedGCNConv"], [414, 1, 1, "", "GatedGraphConv"], [415, 1, 1, "", "GraphConv"], [416, 1, 1, "", "GroupRevRes"], [417, 1, 1, "", "HGTConv"], [418, 1, 1, "", "NNConv"], [419, 1, 1, "", "PNAConv"], [420, 1, 1, "", "RelGraphConv"], [421, 1, 1, "", "SAGEConv"], [422, 1, 1, "", "SGConv"], [423, 1, 1, "", "TAGConv"], [424, 1, 1, "", "TWIRLSConv"], [425, 1, 1, "", "TWIRLSUnfoldingAndAttention"]], "dgl.nn.pytorch.conv.AGNNConv": [[389, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.APPNPConv": [[390, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.AtomicConv": [[391, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CFConv": [[392, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.ChebConv": [[393, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CuGraphGATConv": [[394, 2, 1, "", "forward"], [394, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphRelGraphConv": [[395, 2, 1, "", "forward"], [395, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphSAGEConv": [[396, 2, 1, "", "forward"], [396, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DGNConv": [[397, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.DenseChebConv": [[398, 2, 1, "", "forward"], [398, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseGraphConv": [[399, 2, 1, "", "forward"], [399, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseSAGEConv": [[400, 2, 1, "", "forward"], [400, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DotGatConv": [[401, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EGATConv": [[402, 2, 1, "", "forward"], [402, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EGNNConv": [[403, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeConv": [[404, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeGATConv": [[405, 2, 1, "", "forward"], [405, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EdgeWeightNorm": [[406, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GATConv": [[407, 2, 1, "", "forward"], [407, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GATv2Conv": [[408, 2, 1, "", "forward"], [408, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GCN2Conv": [[409, 2, 1, "", "forward"], [409, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GINConv": [[410, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GINEConv": [[411, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GMMConv": [[412, 2, 1, "", "forward"], [412, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GatedGCNConv": [[413, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GatedGraphConv": [[414, 2, 1, "", "forward"], [414, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GraphConv": [[415, 5, 1, "", "bias"], [415, 2, 1, "", "forward"], [415, 2, 1, "", "reset_parameters"], [415, 5, 1, "", "weight"]], "dgl.nn.pytorch.conv.GroupRevRes": [[416, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.HGTConv": [[417, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.NNConv": [[418, 2, 1, "", "forward"], [418, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.PNAConv": [[419, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.RelGraphConv": [[420, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.SAGEConv": [[421, 2, 1, "", "forward"], [421, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.SGConv": [[422, 2, 1, "", "forward"], [422, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TAGConv": [[423, 2, 1, "", "forward"], [423, 5, 1, "", "lin"], [423, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TWIRLSConv": [[424, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention": [[425, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain": [[426, 1, 1, "", "GNNExplainer"], [427, 1, 1, "", "HeteroGNNExplainer"], [428, 1, 1, "", "HeteroPGExplainer"], [429, 1, 1, "", "HeteroSubgraphX"], [430, 1, 1, "", "PGExplainer"], [431, 1, 1, "", "SubgraphX"]], "dgl.nn.pytorch.explain.GNNExplainer": [[426, 2, 1, "", "explain_graph"], [426, 2, 1, "", "explain_node"], [426, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroGNNExplainer": [[427, 2, 1, "", "explain_graph"], [427, 2, 1, "", "explain_node"], [427, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroPGExplainer": [[428, 2, 1, "", "explain_graph"], [428, 2, 1, "", "explain_node"], [428, 2, 1, "", "forward"], [428, 2, 1, "", "train_step"], [428, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.HeteroSubgraphX": [[429, 2, 1, "", "explain_graph"], [429, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.PGExplainer": [[430, 2, 1, "", "explain_graph"], [430, 2, 1, "", "explain_node"], [430, 2, 1, "", "forward"], [430, 2, 1, "", "train_step"], [430, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.SubgraphX": [[431, 2, 1, "", "explain_graph"], [431, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory": [[432, 1, 1, "", "KNNGraph"], [433, 1, 1, "", "RadiusGraph"], [434, 1, 1, "", "SegmentedKNNGraph"]], "dgl.nn.pytorch.factory.KNNGraph": [[432, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.RadiusGraph": [[433, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.SegmentedKNNGraph": [[434, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob": [[435, 1, 1, "", "AvgPooling"], [436, 1, 1, "", "GlobalAttentionPooling"], [437, 1, 1, "", "MaxPooling"], [438, 1, 1, "", "Set2Set"], [439, 1, 1, "", "SetTransformerDecoder"], [440, 1, 1, "", "SetTransformerEncoder"], [441, 1, 1, "", "SortPooling"], [442, 1, 1, "", "SumPooling"], [443, 1, 1, "", "WeightAndSum"]], "dgl.nn.pytorch.glob.AvgPooling": [[435, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.GlobalAttentionPooling": [[436, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.MaxPooling": [[437, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.Set2Set": [[438, 2, 1, "", "forward"], [438, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.glob.SetTransformerDecoder": [[439, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SetTransformerEncoder": [[440, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SortPooling": [[441, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SumPooling": [[442, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.WeightAndSum": [[443, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt": [[444, 1, 1, "", "BiasedMHA"], [445, 1, 1, "", "DegreeEncoder"], [446, 1, 1, "", "EGTLayer"], [447, 1, 1, "", "GraphormerLayer"], [448, 1, 1, "", "LapPosEncoder"], [449, 1, 1, "", "PathEncoder"], [450, 1, 1, "", "SpatialEncoder"], [451, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt.BiasedMHA": [[444, 2, 1, "", "forward"], [444, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.gt.DegreeEncoder": [[445, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.EGTLayer": [[446, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.GraphormerLayer": [[447, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.LapPosEncoder": [[448, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.PathEncoder": [[449, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder": [[450, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder3d": [[451, 2, 1, "", "forward"]], "dgl.nn.pytorch.link": [[452, 1, 1, "", "EdgePredictor"], [453, 1, 1, "", "TransE"], [454, 1, 1, "", "TransR"]], "dgl.nn.pytorch.link.EdgePredictor": [[452, 2, 1, "", "forward"], [452, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransE": [[453, 2, 1, "", "forward"], [453, 5, 1, "", "rel_emb"], [453, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransR": [[454, 2, 1, "", "forward"], [454, 5, 1, "", "rel_emb"], [454, 5, 1, "", "rel_project"], [454, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.sparse_emb": [[455, 1, 1, "", "NodeEmbedding"]], "dgl.nn.pytorch.utils": [[456, 1, 1, "", "JumpingKnowledge"], [457, 1, 1, "", "LabelPropagation"], [458, 1, 1, "", "Sequential"], [459, 1, 1, "", "WeightBasis"]], "dgl.nn.pytorch.utils.JumpingKnowledge": [[456, 2, 1, "", "forward"], [456, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.utils.LabelPropagation": [[457, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.Sequential": [[458, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.WeightBasis": [[459, 2, 1, "", "forward"]], "dgl.nn.tensorflow.conv": [[460, 1, 1, "", "APPNPConv"], [461, 1, 1, "", "ChebConv"], [462, 1, 1, "", "GATConv"], [463, 1, 1, "", "GINConv"], [464, 1, 1, "", "GraphConv"], [465, 1, 1, "", "RelGraphConv"], [466, 1, 1, "", "SAGEConv"], [467, 1, 1, "", "SGConv"]], "dgl.nn.tensorflow.glob": [[468, 1, 1, "", "AvgPooling"], [469, 1, 1, "", "GlobalAttentionPooling"], [470, 1, 1, "", "HeteroGraphConv"], [471, 1, 1, "", "MaxPooling"], [472, 1, 1, "", "SortPooling"], [473, 1, 1, "", "SumPooling"]], "dgl.ops": [[479, 4, 1, "", "copy_e_max"], [480, 4, 1, "", "copy_e_mean"], [481, 4, 1, "", "copy_e_min"], [482, 4, 1, "", "copy_e_sum"], [483, 4, 1, "", "copy_u"], [484, 4, 1, "", "copy_u_max"], [485, 4, 1, "", "copy_u_mean"], [486, 4, 1, "", "copy_u_min"], [487, 4, 1, "", "copy_u_sum"], [488, 4, 1, "", "copy_v"], [489, 4, 1, "", "e_add_u"], [490, 4, 1, "", "e_add_v"], [491, 4, 1, "", "e_div_u"], [492, 4, 1, "", "e_div_v"], [493, 4, 1, "", "e_dot_u"], [494, 4, 1, "", "e_dot_v"], [495, 4, 1, "", "e_mul_u"], [496, 4, 1, "", "e_mul_v"], [497, 4, 1, "", "e_sub_u"], [498, 4, 1, "", "e_sub_v"], [499, 4, 1, "", "gather_mm"], [500, 4, 1, "", "gsddmm"], [501, 4, 1, "", "gspmm"], [502, 4, 1, "", "segment_mm"], [503, 4, 1, "", "segment_reduce"], [504, 4, 1, "", "u_add_e"], [505, 4, 1, "", "u_add_e_max"], [506, 4, 1, "", "u_add_e_mean"], [507, 4, 1, "", "u_add_e_min"], [508, 4, 1, "", "u_add_e_sum"], [509, 4, 1, "", "u_add_v"], [510, 4, 1, "", "u_div_e"], [511, 4, 1, "", "u_div_e_max"], [512, 4, 1, "", "u_div_e_mean"], [513, 4, 1, "", "u_div_e_min"], [514, 4, 1, "", "u_div_e_sum"], [515, 4, 1, "", "u_div_v"], [516, 4, 1, "", "u_dot_e"], [517, 4, 1, "", "u_dot_v"], [518, 4, 1, "", "u_mul_e"], [519, 4, 1, "", "u_mul_e_max"], [520, 4, 1, "", "u_mul_e_mean"], [521, 4, 1, "", "u_mul_e_min"], [522, 4, 1, "", "u_mul_e_sum"], [523, 4, 1, "", "u_mul_v"], [524, 4, 1, "", "u_sub_e"], [525, 4, 1, "", "u_sub_e_max"], [526, 4, 1, "", "u_sub_e_mean"], [527, 4, 1, "", "u_sub_e_min"], [528, 4, 1, "", "u_sub_e_sum"], [529, 4, 1, "", "u_sub_v"], [530, 4, 1, "", "v_add_e"], [531, 4, 1, "", "v_add_u"], [532, 4, 1, "", "v_div_e"], [533, 4, 1, "", "v_div_u"], [534, 4, 1, "", "v_dot_e"], [535, 4, 1, "", "v_dot_u"], [536, 4, 1, "", "v_mul_e"], [537, 4, 1, "", "v_mul_u"], [538, 4, 1, "", "v_sub_e"], [539, 4, 1, "", "v_sub_u"]], "dgl.optim.pytorch": [[10, 1, 1, "", "SparseAdagrad"], [10, 1, 1, "", "SparseAdam"]], "dgl.sampling": [[558, 1, 1, "", "PinSAGESampler"], [559, 4, 1, "", "global_uniform_negative_sampling"], [560, 4, 1, "", "node2vec_random_walk"], [561, 4, 1, "", "pack_traces"], [562, 4, 1, "", "random_walk"], [563, 4, 1, "", "sample_labors"], [564, 4, 1, "", "sample_neighbors"], [565, 4, 1, "", "sample_neighbors_biased"], [566, 4, 1, "", "select_topk"]], "dgl.sampling.PinSAGESampler": [[558, 2, 1, "", "__init__"]], "dgl.sparse": [[12, 1, 1, "", "SparseMatrix"], [607, 4, 1, "", "add"], [608, 4, 1, "", "bsddmm"], [609, 4, 1, "", "bspmm"], [610, 4, 1, "", "diag"], [611, 4, 1, "", "div"], [612, 4, 1, "", "from_coo"], [613, 4, 1, "", "from_csc"], [614, 4, 1, "", "from_csr"], [615, 4, 1, "", "identity"], [616, 4, 1, "", "matmul"], [617, 4, 1, "", "mul"], [618, 4, 1, "", "power"], [619, 4, 1, "", "sddmm"], [620, 4, 1, "", "softmax"], [621, 4, 1, "", "sp_add_v"], [622, 4, 1, "", "sp_broadcast_v"], [623, 4, 1, "", "sp_div_v"], [624, 4, 1, "", "sp_mul_v"], [625, 4, 1, "", "sp_sub_v"], [626, 4, 1, "", "spmatrix"], [627, 4, 1, "", "spmm"], [628, 4, 1, "", "spspmm"], [629, 4, 1, "", "sub"], [630, 4, 1, "", "val_like"]], "dgl.sparse.SparseMatrix": [[576, 3, 1, "", "T"], [577, 2, 1, "", "coalesce"], [578, 3, 1, "", "col"], [579, 2, 1, "", "coo"], [580, 2, 1, "", "cpu"], [581, 2, 1, "", "csc"], [582, 2, 1, "", "csr"], [583, 2, 1, "", "cuda"], [584, 3, 1, "", "device"], [585, 2, 1, "", "double"], [586, 3, 1, "", "dtype"], [587, 2, 1, "", "float"], [588, 2, 1, "", "has_duplicate"], [589, 2, 1, "", "indices"], [590, 2, 1, "", "int"], [591, 2, 1, "", "long"], [592, 2, 1, "", "neg"], [593, 3, 1, "", "nnz"], [594, 2, 1, "", "reduce"], [595, 3, 1, "", "row"], [596, 3, 1, "", "shape"], [597, 2, 1, "", "smax"], [598, 2, 1, "", "smean"], [599, 2, 1, "", "smin"], [600, 2, 1, "", "softmax"], [601, 2, 1, "", "sum"], [602, 2, 1, "", "t"], [603, 2, 1, "", "to"], [604, 2, 1, "", "to_dense"], [605, 2, 1, "", "transpose"], [606, 3, 1, "", "val"]], "dgl.transforms": [[648, 1, 1, "", "AddEdge"], [649, 1, 1, "", "AddMetaPaths"], [650, 1, 1, "", "AddReverse"], [651, 1, 1, "", "AddSelfLoop"], [652, 1, 1, "", "BaseTransform"], [653, 1, 1, "", "Compose"], [654, 1, 1, "", "DropEdge"], [655, 1, 1, "", "DropNode"], [656, 1, 1, "", "FeatMask"], [657, 1, 1, "", "GCNNorm"], [658, 1, 1, "", "GDC"], [659, 1, 1, "", "HeatKernel"], [660, 1, 1, "", "KHopGraph"], [661, 1, 1, "", "LapPE"], [662, 1, 1, "", "LineGraph"], [663, 1, 1, "", "NodeShuffle"], [664, 1, 1, "", "PPR"], [665, 1, 1, "", "RandomWalkPE"], [666, 1, 1, "", "RemoveSelfLoop"], [667, 1, 1, "", "RowFeatNormalizer"], [668, 1, 1, "", "SIGNDiffusion"], [669, 1, 1, "", "SVDPE"], [670, 1, 1, "", "ToLevi"], [671, 1, 1, "", "ToSimple"]], "dgl.udf.EdgeBatch": [[672, 2, 1, "", "batch_size"], [673, 3, 1, "", "data"], [674, 3, 1, "", "dst"], [675, 2, 1, "", "edges"], [676, 3, 1, "", "src"]], "dgl.udf.NodeBatch": [[677, 2, 1, "", "batch_size"], [678, 3, 1, "", "data"], [679, 3, 1, "", "mailbox"], [680, 2, 1, "", "nodes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [4, 5, 8, 11, 22, 34, 35, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 73, 74, 87, 88, 90, 93, 94, 100, 103, 107, 113, 122, 125, 130, 131, 151, 152, 161, 163, 167, 168, 180, 182, 183, 188, 208, 210, 213, 220, 221, 230, 231, 233, 235, 240, 241, 242, 243, 245, 246, 287, 293, 297, 301, 305, 310, 319, 334, 335, 339, 340, 351, 352, 391, 399, 401, 405, 414, 415, 417, 438, 458, 475, 476, 500, 501, 540, 556, 563, 564, 565, 567, 570, 574, 575, 661, 688, 689, 691, 692, 693, 695, 697, 699, 702, 704, 707, 708, 709, 710, 712, 713, 720, 722, 723, 725, 727, 729, 730, 732, 754, 775, 782, 787, 796, 806, 807, 813, 818, 819, 820, 821, 822, 823, 824, 825, 828, 829, 830, 831, 834, 835, 841, 845, 848, 849, 852, 853, 854, 858, 861, 864, 865, 870, 871], "0": [0, 4, 5, 6, 9, 10, 14, 20, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 207, 210, 213, 214, 216, 217, 219, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 291, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 317, 319, 320, 321, 325, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 355, 357, 383, 384, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 455, 457, 458, 474, 475, 476, 477, 478, 502, 503, 540, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 580, 581, 582, 583, 585, 587, 588, 590, 591, 594, 597, 598, 599, 600, 601, 603, 607, 608, 609, 610, 611, 613, 614, 615, 616, 617, 618, 619, 620, 622, 627, 628, 629, 633, 634, 635, 636, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 689, 690, 691, 693, 694, 695, 696, 697, 701, 702, 703, 704, 705, 711, 713, 714, 715, 716, 717, 719, 721, 722, 725, 726, 727, 728, 730, 731, 732, 736, 737, 739, 740, 742, 745, 746, 747, 748, 749, 755, 757, 758, 759, 760, 762, 765, 766, 767, 768, 770, 771, 772, 776, 777, 779, 780, 781, 782, 783, 786, 787, 788, 789, 790, 797, 799, 800, 801, 802, 803, 805, 806, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 824, 826, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 845, 847, 848, 849, 851, 852, 853, 854, 855, 857, 858, 860, 861, 863, 864, 865, 867, 869, 870, 871, 873], "00": [25, 342, 633, 669, 820, 821, 824, 826, 829, 843, 847, 851, 857, 860, 863, 867, 869, 873], "000": [14, 146, 147, 169, 173, 174, 191, 195, 820, 826, 828, 847, 851, 867, 869], "0000": [9, 118, 173, 357, 391, 399, 410, 415, 420, 425, 478, 550, 594, 598, 600, 611, 620, 657, 661, 665, 819, 823, 828], "00000": [829, 852, 853, 855, 858], "000000": 819, "000007645": 845, "00001": [829, 852, 853, 855, 858], "00002": [829, 852, 853, 855, 858], "00003": [829, 852, 853, 855, 858], "00004": [829, 852, 853, 855, 858], "00005": [852, 853, 855, 858], "00006": [852, 853, 855, 858], "00007": [852, 853, 855, 858], "00008": [852, 853, 855, 858], "00009": [852, 853, 855, 858], "0000e": [342, 633, 669], "00010": [852, 853, 855], "00011": [852, 853, 855], "00012": [852, 853, 855], "00013": [852, 853, 855], "00014": [852, 853, 855], "00015": [852, 853, 855], "00016": [852, 853, 855], "00017": [852, 853, 855], "00018": [852, 853, 855], "00019": [852, 853, 855], "00020": [852, 853, 855], "00021": [852, 853, 855], "00022": [852, 853, 855], "00023": [852, 853, 855], "00024": [852, 853, 855], "00025": [852, 855], "00026": [852, 855], "00027": [852, 855], "00028": [852, 855], "00029": [852, 855], "00030": 852, "00031": 852, "00032": 852, "00033": 852, "00034": 852, "00035": 852, "00036": 852, "00037": 852, "00038": 852, "00039": 852, "00040": 852, "00041": 852, "00042": 852, "00043": 852, "00044": 852, "00045": 852, "00046": 852, "00047": 852, "00048": 852, "00049": 852, "0005": [428, 430], "001": [4, 10, 455, 565, 820, 821, 828, 829, 848, 849], "002": [14, 820, 828, 855], "002158116134429955": 689, "0028": 439, "003": [14, 558, 820, 838], "0039": 823, "004": [14, 820, 826, 838, 873], "0049": 852, "005": [426, 427, 820, 838], "0050": 852, "0051": 852, "0052": 852, "0053": 852, "0054": 852, "0056": 853, "006": [14, 820, 838, 855], "0069": 831, "007": [14, 820, 838], "00743445923710373": 689, "008": [14, 820, 838], "0080": 831, "0086": 831, "008790817766266334": 689, "0089": 410, "009": [14, 820, 838], "0091": 823, "0093": [820, 831], "00982": [146, 147, 169, 174, 195], "0099": 440, "01": [142, 143, 189, 342, 383, 426, 427, 428, 430, 633, 669, 717, 826, 834, 836, 838, 839, 840, 853, 857, 865, 870, 871], "010": [14, 820, 838], "011": [14, 820, 838], "0112": 835, "01168646": 835, "0117": 835, "0118": [410, 831], "012": [820, 838], "0121": 834, "01217200152200748": 689, "0129": 408, "013": [820, 838], "01315": 824, "0134": 458, "014": [14, 820], "01404": 162, "0142": [435, 436, 437, 438, 439, 440, 441, 442, 443], "0145": 438, "0148": 824, "015": [14, 820, 838], "0152": 824, "0155": 418, "0156": [439, 824], "016": [14, 820], "0162": 853, "0163": 664, "0164": 393, "0169": 458, "017": [14, 820, 838], "0173": 834, "0177": 820, "018": [820, 838], "0180": [600, 620], "0184": 395, "0185": 824, "019": [14, 820, 838], "0192": 824, "0194": 823, "01973": 558, "02": [826, 834, 860], "0200": 658, "0201": 820, "02026481": 834, "0203": 834, "0207": 410, "0216": 834, "0217": 664, "0219": 398, "022": 838, "02216": 721, "0225": 823, "023": [14, 838], "0232": 852, "0235": 438, "02355615": 834, "0239": 408, "0248": 852, "0249": 834, "025": [387, 855], "0255": 664, "026": 14, "0266": 852, "0268": [401, 407], "0269": 837, "0273": 823, "0276": 439, "0278": 661, "028": 838, "0285": [820, 852], "029": 838, "0291": 823, "0294": 823, "0297": [645, 646], "03": [826, 829, 843, 857], "030": 14, "0306": 852, "0311": 835, "0315": [401, 407], "0323": 831, "0324": 834, "03289692": 835, "0329": 835, "0330": 852, "0331": 820, "03348": 446, "034": 838, "0340": 820, "0341": 458, "03485196": 834, "0349": 834, "035": [826, 843], "0356": 852, "0357": 823, "0361": 820, "03671": 844, "0375": 415, "0376": 438, "0378": 837, "03819": 865, "0383": 664, "0385": 852, "0386": 689, "038622249776255946": 689, "039": 14, "0390": [401, 407], "03d": [820, 828], "03f": 831, "04": [14, 394, 395, 396, 817, 826, 834, 843, 867], "040": [173, 838], "0400": 658, "0401": 400, "0406": [414, 659], "04133991340612775": 689, "0417": 852, "0421": 831, "0425": 414, "0427": 831, "0428": 439, "0429": 820, "043": 136, "043591": 841, "0438": 834, "044": 838, "0442": 824, "0448": 458, "04486384200747007": 689, "045": 14, "0451": 820, "0452": 852, "04573": 430, "0461": 439, "0470": 439, "0475": 831, "0476": 828, "0477": 834, "0483": 438, "0483e": 342, "04878384701995819": 689, "0489": 820, "0491": 852, "0495": 831, "049629338970987646": 689, "04it": 820, "05": [458, 664, 668, 701, 745, 786, 855, 858], "0510": 664, "0511": 831, "05152": 431, "0523": 414, "0527": 398, "05287": 134, "0534": 852, "05354099924658973": 689, "0539": [645, 646], "054": [14, 159, 173], "054016385555202384": 689, "0541": [410, 659], "0543": [401, 407], "0544": [128, 129], "0553": 824, "0556": [458, 819, 828], "0578": 823, "058": [14, 824, 838], "0580": [414, 435, 436, 437, 438, 439, 440, 441, 442, 443], "0582": [834, 852], "0588": 819, "0591": [118, 831], "059172654879085296": 689, "0594": 853, "0596": 408, "0599": 823, "05d": [829, 852, 853, 855, 858, 871], "06": [25, 824, 865], "060": [14, 838], "0600": [173, 658], "0608": 442, "06241881": 834, "0630": 427, "0632": 853, "0634": 440, "0635": 852, "0638": 664, "064": 857, "0643": 820, "0654": 819, "0666": 834, "0673": [831, 834], "0675": 831, "0681": 834, "0686": 823, "0693": 852, "0699": [435, 436, 437, 438, 439, 440, 441, 442, 443], "07": [633, 669], "071": 836, "0711e": 342, "0712": 834, "0720": 837, "0724": [128, 129, 823], "0725": 834, "0729": 443, "073": 161, "0731": 819, "0734": 834, "074": 14, "07502571020414439": 689, "0753": 823, "0757": 852, "0758": 410, "0762": [401, 407], "0767": 819, "0769": 819, "077": 14, "0771": 831, "0772": 834, "07816474278491703": 689, "0783": [401, 407], "0798": 823, "08": [4, 10, 245, 475, 826, 843], "0800": 658, "0804": [645, 646], "0811": [820, 823], "0812": 659, "0818": 831, "0828": 852, "0832": 414, "0833": 9, "0835": [398, 837], "0836": 819, "0845": 439, "085": 838, "0852": 829, "08543289788089736": 689, "0857": [414, 645, 646, 837], "086": 14, "0868": 689, "08680051341900807": 689, "08691420300562658": 689, "08692": 162, "0876": 395, "0880": [645, 646], "0887": [823, 835], "0888": 421, "089": 838, "0891": 819, "08983": 865, "08it": 829, "09": [824, 829], "0901": 820, "0906": 852, "0908": 837, "0909": 819, "091": [826, 863], "0911194482288028": 689, "0912": 835, "0913": 440, "0915": 426, "0917": [819, 823], "0920": 440, "0928555079874982": 689, "0935": 408, "0937": 426, "0949": 820, "0950": 858, "0953": 819, "0959": 831, "097": 836, "0992": 852, "09937243": 834, "0994": 834, "0a0": 829, "0k": [178, 179], "0x7fec820937b8": [694, 740, 780], "0\ubd80\ud130": [782, 789, 790], "0\uc5d0": 782, "0\uc73c\ub85c": 801, "0\uc740": [781, 782], "0\uc744": 782, "0\uc774": [806, 809], "0\uc774\uace0": 782, "0\uc778": 809, "1": [1, 4, 5, 6, 9, 10, 12, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 139, 140, 142, 143, 146, 147, 148, 158, 161, 162, 163, 164, 165, 166, 168, 169, 172, 173, 174, 177, 183, 184, 186, 189, 190, 192, 195, 197, 198, 205, 207, 210, 214, 216, 217, 219, 226, 227, 229, 230, 231, 232, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 263, 264, 265, 266, 287, 291, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 317, 318, 319, 320, 321, 325, 327, 328, 329, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 351, 352, 354, 357, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 474, 475, 476, 477, 478, 499, 502, 503, 540, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 633, 634, 635, 636, 640, 641, 642, 643, 645, 646, 647, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 688, 689, 690, 691, 693, 694, 695, 696, 698, 706, 707, 709, 710, 712, 714, 715, 716, 717, 718, 721, 722, 723, 725, 726, 727, 728, 730, 731, 733, 735, 736, 737, 739, 740, 742, 743, 750, 751, 753, 754, 756, 757, 758, 759, 760, 761, 763, 765, 766, 767, 768, 770, 771, 773, 775, 776, 777, 779, 780, 783, 784, 792, 795, 796, 798, 799, 800, 801, 802, 803, 804, 806, 807, 809, 810, 811, 812, 813, 814, 817, 818, 819, 820, 821, 824, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 845, 848, 849, 852, 853, 854, 860, 863, 864, 865, 870, 871], "10": [4, 5, 6, 9, 10, 14, 20, 26, 130, 134, 135, 137, 142, 145, 146, 147, 149, 155, 159, 161, 163, 166, 168, 169, 171, 173, 174, 180, 182, 185, 187, 188, 192, 193, 195, 210, 214, 216, 219, 220, 246, 293, 298, 299, 301, 302, 303, 308, 309, 310, 311, 315, 316, 317, 321, 335, 338, 339, 340, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 453, 454, 455, 457, 476, 502, 503, 540, 548, 549, 556, 558, 607, 610, 611, 617, 618, 622, 629, 642, 654, 656, 659, 663, 668, 689, 693, 694, 695, 705, 713, 714, 717, 719, 720, 721, 727, 728, 730, 731, 732, 739, 740, 749, 757, 767, 768, 770, 771, 772, 779, 780, 790, 799, 811, 812, 813, 814, 815, 817, 818, 819, 821, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 848, 849, 852, 854, 855, 858, 861, 864, 865, 870, 871], "100": [9, 22, 172, 173, 174, 194, 287, 387, 388, 426, 427, 429, 431, 432, 434, 444, 446, 447, 451, 548, 549, 618, 691, 701, 722, 728, 731, 732, 737, 745, 768, 771, 772, 777, 786, 801, 806, 812, 814, 815, 818, 820, 821, 834, 835, 836, 838, 839, 855, 858, 861, 864, 865], "1000": [4, 9, 14, 141, 150, 154, 176, 205, 209, 217, 309, 387, 416, 611, 658, 671, 714, 715, 727, 728, 742, 767, 768, 783, 801, 811, 812, 818, 819, 820, 821, 834, 835, 836, 838, 839, 852, 854, 855, 865], "10000": [14, 132, 133, 144, 147, 170, 171, 174, 183, 195, 834, 835, 840], "100000": 173, "1000000": 240, "1002": 458, "1008": 400, "100k": 173, "100x100": 171, "101": [184, 432, 434, 699, 784, 834, 835, 858, 865], "1012": 852, "1014": [128, 129], "10150": 161, "102": [432, 434, 818, 834, 835, 858, 865], "1022": 558, "1023": 831, "1024": [168, 186, 210, 213, 214, 215, 216, 220, 685, 713, 716, 717, 719, 720, 721, 730, 757, 758, 760, 762, 770, 799, 800, 803, 805, 813, 829, 831, 848, 849, 871], "1025": 831, "103": [818, 834, 835, 858, 865], "1030": 837, "1037": 834, "10370349": 834, "1037097085190507": 689, "1038000": 188, "1039": 661, "104": [834, 835, 858, 865], "1041": 185, "1043": 823, "1043998": 782, "1044": 834, "1045": 831, "1046": [420, 831], "1047": 820, "1048": 819, "105": [828, 831, 834, 835, 838, 858, 865], "1052": 689, "10522806046048205": 689, "1055314": 831, "10556": [25, 154, 818, 819, 821, 828, 836, 838, 839, 852, 854, 855], "106": [828, 831, 834, 835, 840, 858, 865], "1060": 172, "1066": 118, "107": [828, 831, 834, 835, 858, 865], "1076": 823, "108": [14, 174, 834, 835, 858, 865], "1083": 659, "1086": [689, 852], "10864079337442234": 689, "1089": 558, "109": [834, 835, 858, 865], "10903": 769, "1092": 149, "1095": 824, "1099": 421, "10it": 829, "10m": 173, "11": [9, 14, 133, 161, 192, 293, 301, 310, 311, 426, 622, 642, 654, 655, 663, 722, 757, 799, 817, 818, 819, 820, 821, 823, 824, 828, 829, 831, 834, 835, 854, 858, 861, 865], "110": [834, 835, 838, 858, 865], "1101": 823, "1103": 834, "1107": [412, 831], "111": [834, 835, 858, 865], "1110": 831, "1112": 834, "1112103": 834, "1113": 25, "11158102039672668": 689, "112": [834, 835, 858, 865], "1123": 408, "1126": 439, "1127": 820, "113": [834, 835, 858, 865], "1130": 823, "1134649": 782, "1135": 392, "1136": 858, "1138": 394, "1139": 458, "114": [181, 722, 818, 834, 835, 836, 858, 865], "1140\uc5b5\uac1c\uc758": 806, "1141": 853, "11446843700743892": 689, "1145": [134, 163, 173, 426, 689], "114615892": 25, "11494": 831, "11495": 831, "11496": 831, "115": [834, 835, 838, 858, 865], "115272": 831, "1154897249106891": 689, "1155": [408, 689], "1156": 408, "1157": 408, "116": [834, 835, 858, 865], "1161": 828, "1163": 855, "11640": [137, 171, 180, 182, 188], "1165": 855, "1166": 421, "117": [144, 147, 834, 835, 858, 865], "11701": 192, "11758": 188, "1178": [25, 168, 186], "118": [834, 835, 836, 858, 865], "1187": 835, "1189": 834, "119": [136, 834, 835, 858, 865], "1190": 852, "1191": [558, 823], "1194614": 782, "1196": 855, "11d": 179, "11\ubc88": 799, "11\ubc88\uc5d0\uc11c": 799, "11\uc6d4": 791, "12": [9, 14, 79, 81, 178, 179, 293, 297, 300, 301, 310, 311, 402, 405, 412, 413, 426, 429, 431, 622, 654, 663, 722, 806, 817, 823, 824, 828, 829, 831, 834, 835, 854, 858, 865], "120": [150, 193, 834, 835, 838, 858, 865], "1200": [9, 834, 855], "1200923": 835, "1201": 835, "1202": 855, "1203": 697, "1203354": 782, "1205": 855, "1206": 855, "1208": 855, "1209": [392, 855], "121": [175, 823, 834, 835, 855, 858, 865], "1210": [828, 855], "1211": 855, "1212": 855, "1216": 855, "122": [834, 835, 858, 865], "1222": 855, "1225": 837, "1225e": 834, "1226": 855, "1227": 831, "123": [14, 146, 192, 834, 835, 858, 865], "1230": 558, "1232": 855, "12345": [829, 870, 871], "12346": 455, "1235": 837, "1237": 820, "123718280": [4, 240], "1238": 855, "1239": 855, "124": [25, 834, 835, 840, 858, 865], "12403": 303, "1241": 855, "12468987": 834, "1247": 834, "125": [834, 835, 838, 858, 865], "1250": [9, 855], "1252": 823, "126": [14, 153, 834, 835, 836, 838, 858, 865], "1261": 418, "1261310": 240, "1262": 440, "1265": 823, "1267": 823, "1269": 831, "127": [455, 828, 829, 831, 834, 835, 844, 858, 865, 870, 871], "128": [5, 165, 383, 387, 424, 431, 446, 714, 828, 834, 835, 858, 865], "1282": 558, "1283": 392, "1285": 828, "1286": 828, "12860": 697, "12861": 697, "1287": 828, "1288": 828, "12880999": 834, "1289": [558, 828], "129": [834, 835, 852, 855, 858, 865], "1290": 828, "1299": 834, "12k": 195, "13": [9, 135, 165, 194, 293, 301, 310, 311, 611, 654, 817, 820, 823, 828, 829, 831, 834, 835, 836, 854, 858, 865], "130": [178, 179, 834, 835, 838, 858, 865], "1304": 852, "130622": 25, "1309": [420, 828], "131": [834, 835, 858, 865], "1311": 426, "1313": 831, "1318": 823, "132": [161, 834, 835, 858, 865], "1320": 853, "1323": [645, 646], "1325": 831, "1328": 118, "133": [14, 834, 835, 858, 865], "1330": 427, "133760": 831, "134": [834, 835, 858, 865], "1341": 837, "1342": 414, "13426619": 834, "1349": 438, "135": [14, 834, 835, 836, 838, 858, 865], "1353": 659, "1358": 834, "136": [25, 145, 834, 835, 858, 865], "1361": [438, 661], "1364": [689, 834], "1364240150959487": 689, "137": [834, 835, 858, 865], "1371": 410, "13738957": 834, "1373e": [633, 669], "1374": 834, "13752": 25, "1376": 414, "1377": 412, "13774964202156292": 689, "137936": 831, "138": [834, 835, 858, 865], "1382": 834, "1388": 414, "139": [834, 835, 858, 865], "1393": 689, "1393107840629273": 689, "1395": 410, "14": [14, 158, 177, 293, 300, 310, 311, 655, 691, 737, 777, 823, 828, 829, 831, 834, 835, 840, 854, 858, 865], "140": [132, 154, 818, 819, 821, 828, 834, 835, 836, 838, 839, 852, 854, 855, 858, 865], "1400": 834, "14004631": 834, "1402": 834, "1408": 410, "141": [834, 835, 858, 865], "141442": 191, "1416": 828, "142": [834, 835, 858, 865], "1427": 837, "1428": 820, "1428571492433548": 120, "1429": 819, "143": [834, 835, 858, 865], "1430": [828, 852], "1431": 25, "1433": [154, 818, 819, 821, 835, 836, 838, 839, 852, 854, 855], "14381": 831, "14385": 831, "14389": 831, "144": [834, 835, 858, 865], "1440": [420, 835], "1446": 823, "145": [25, 834, 835, 838, 840, 858, 865], "14541": 157, "1458": [645, 646], "1459": 828, "146": [834, 835, 858, 865], "14627522432017592": 689, "147": [163, 818, 834, 835, 858, 865], "1478": [823, 834], "1479": [401, 407], "148": [14, 834, 835, 858, 865], "148100": 170, "148699": 831, "149": [834, 835, 838, 858, 865], "1496": 426, "15": [9, 14, 25, 151, 164, 177, 210, 214, 216, 219, 220, 293, 303, 308, 310, 311, 315, 316, 402, 405, 502, 651, 654, 664, 702, 713, 722, 806, 818, 823, 824, 828, 834, 835, 836, 838, 839, 841, 844, 854, 858, 865], "150": [834, 835, 838, 858, 864, 865], "1500": 664, "1505": 558, "1508034646": 841, "151": [834, 835, 858, 865], "1516": 414, "152": [834, 835, 858, 865], "1520": [134, 645, 646], "15218126307872892": 689, "1523": 831, "153": [181, 834, 835, 858, 865], "1533": 558, "154": [823, 834, 835, 858, 865], "155": [834, 835, 838, 858, 865], "1557019": 134, "1557108": 134, "1559": 412, "156": [25, 167, 834, 835, 841, 858, 865], "1560": 608, "1568": 852, "15694736": 782, "157": [159, 834, 835, 858, 865], "1576": 834, "158": [14, 818, 834, 835, 858, 865], "1586996": 831, "1589": 823, "159": [834, 835, 858, 865], "1592900": 831, "1594": [401, 407], "15k": [178, 179], "15\u884c\u547d\u540d\u4e3a": 746, "15\uc5d0\uc11c": 787, "16": [165, 168, 172, 183, 186, 195, 342, 443, 444, 445, 446, 447, 448, 449, 458, 550, 665, 698, 702, 722, 742, 783, 806, 817, 818, 820, 821, 823, 824, 826, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 844, 848, 852, 853, 854, 858, 861, 863, 865], "160": [834, 835, 838, 858, 865], "1601": 835, "1603": 865, "1607": 414, "161": [14, 834, 835, 858, 865], "1611": 834, "1616": 834, "162": [834, 835, 836, 838, 858, 865], "163": [136, 151, 834, 835, 858, 865], "1634": 834, "16342274": 834, "1639": 558, "164": [819, 834, 835, 858, 865], "1643": 853, "1646": 412, "165": [823, 834, 835, 838, 858, 865], "1658": 558, "166": [834, 835, 858, 865], "1664": 185, "1665": 837, "1667": 9, "167": [14, 834, 835, 858, 865], "16738734": 782, "1677": 834, "1678": 440, "168": [834, 835, 848, 858, 865], "1681403185591509": 689, "1682": 173, "16846068931179736": 689, "169": [834, 835, 858, 865], "1690": 396, "1695": 820, "1696": 427, "1697": 837, "16974127573016262": 689, "16gb": [14, 722, 806], "16\uc904": 787, "17": [14, 25, 182, 342, 655, 823, 828, 829, 831, 834, 835, 841, 854, 858, 865], "170": [14, 831, 834, 835, 838, 858, 865], "1701": 828, "1702": 823, "1706": 721, "171": [834, 835, 858, 865], "1710": 769, "1714": 828, "1719028": 831, "172": [697, 698, 742, 783, 834, 835, 858, 865], "1721": [831, 852], "1728": 823, "173": [14, 834, 835, 838, 858, 865], "1731": 823, "1735": [426, 608], "174": [834, 835, 858, 865], "1745": 558, "1749": 835, "175": [698, 742, 783, 834, 835, 838, 858, 865], "1752": [645, 646], "17535": 157, "17583413999295983": 689, "176": [834, 835, 858, 865], "1763": 853, "177": [834, 835, 858, 865], "1771": 834, "178": [834, 835, 858, 865], "1780": 442, "1784": 834, "1785": 427, "17865494": 835, "1787": 835, "1789": 439, "179": [14, 834, 835, 858, 865], "1799": 835, "18": [9, 14, 151, 182, 191, 502, 622, 654, 702, 823, 829, 834, 835, 840, 854, 858, 865], "180": [834, 835, 838, 858, 865], "1804": 410, "1806": 558, "1807": 865, "1809": 393, "181": [834, 835, 858, 865], "1818": [558, 611], "182": [14, 834, 835, 858, 865], "183": [155, 187, 834, 835, 858, 865], "18333": 25, "1835": 414, "18389137408509248": 689, "1839": 689, "184": [458, 834, 835, 858, 865], "1842": 823, "1843": [689, 834], "18431292077750894": 689, "1845": 831, "1847": 426, "1848": 823, "1848070": 831, "1849": 406, "185": [834, 835, 838, 858, 865], "1850": 408, "186": [834, 835, 858, 865], "186100": 137, "18626464175355095": 689, "187": [697, 834, 835, 858, 865], "1877": 458, "188": [25, 165, 174, 834, 835, 858, 865], "18820449": 834, "1888": 852, "189": [834, 835, 858, 865], "1893": 823, "18th": 182, "18\uc904\uc744": 787, "19": [138, 153, 179, 310, 311, 654, 697, 698, 742, 783, 823, 828, 829, 831, 834, 835, 854, 858, 865], "190": [147, 834, 835, 838, 858, 865], "1902": 439, "1907": 834, "1908": 408, "1909": 824, "191": [834, 835, 838, 858, 865], "1911": 834, "19117861103555467": 689, "192": [834, 835, 848, 858, 865], "1922": 828, "1925": 404, "192640": 25, "1929e": 834, "192it": 829, "193": [458, 834, 835, 858, 865], "193011360": 697, "1931": [645, 646], "1932390907048961": 689, "1934": 834, "1939": 427, "1939743": 782, "194": [834, 835, 858, 865], "1942": 823, "1943": 412, "195": [834, 835, 838, 858, 865], "1951": 558, "1952": 396, "19536": [184, 858], "1954": 661, "1959": 828, "196": [458, 834, 835, 840, 858, 865], "1966": 427, "197": [834, 835, 836, 858, 865], "19717": [25, 176], "19793": 25, "198": [133, 823, 834, 835, 858, 865], "1985": 823, "1987": 835, "199": [834, 835, 858, 865], "1992": 837, "1996": 440, "19982": 834, "1999": [834, 835], "19990": 834, "19999998807907104": 345, "1_gcn": [826, 854, 857], "1_gnn": [826, 857], "1_graph_classif": [826, 871, 873], "1_introduct": [826, 838, 839, 840, 841, 843], "1_node_classif": [826, 851], "1d": [48, 51, 53, 54, 61, 88, 122, 131, 214, 216, 219, 232, 239, 240, 287, 297, 303, 308, 315, 316, 325, 329, 334, 388, 395, 402, 407, 417, 420, 478, 541, 628], "1e": [4, 10, 245, 426, 430, 431, 475, 721, 722, 806, 818, 852, 854, 855, 858, 865], "1gb": [715, 801], "1m": 173, "1\u5b57\u7b26\u4e32": 735, "1\u8282": 743, "1\u8282\u4e2d": 759, "1\u8282\u4e2d\u5bf9\u5f02\u6784\u56fe\u7684\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": [768, 771], "1\u8282\u4e2d\u5bf9\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": 768, "1\u8282\u7684gnn\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a": [768, 771], "1\uc5d0": 782, "1\uc740": 782, "1\uc744": 782, "1\uc7a5": 791, "1\uc808\uc758": 784, "1\ucc28\uc6d0": 789, "2": [4, 5, 6, 9, 10, 12, 14, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 146, 147, 159, 161, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 183, 184, 186, 188, 189, 190, 197, 205, 207, 216, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 317, 318, 319, 320, 321, 327, 329, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 351, 352, 357, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 457, 458, 474, 475, 476, 477, 478, 499, 502, 540, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 633, 634, 635, 636, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 686, 689, 693, 694, 696, 699, 701, 702, 703, 705, 706, 712, 713, 715, 717, 718, 719, 720, 722, 723, 727, 730, 732, 733, 739, 741, 742, 743, 745, 746, 747, 749, 750, 751, 756, 757, 759, 760, 761, 762, 763, 767, 770, 771, 772, 773, 779, 782, 783, 784, 786, 787, 788, 790, 792, 798, 799, 801, 802, 803, 804, 805, 806, 807, 811, 813, 815, 816, 817, 818, 819, 820, 821, 824, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 847, 848, 849, 851, 852, 853, 854, 865, 867, 870, 871, 873], "20": [9, 25, 130, 161, 162, 171, 172, 174, 175, 181, 192, 209, 235, 301, 310, 311, 321, 402, 405, 411, 413, 416, 418, 428, 429, 430, 431, 439, 440, 550, 607, 617, 618, 622, 629, 648, 654, 655, 665, 667, 668, 695, 697, 728, 730, 731, 732, 768, 770, 771, 772, 812, 813, 814, 815, 817, 818, 820, 823, 826, 829, 834, 835, 836, 838, 839, 840, 854, 855, 858, 861, 864, 865], "200": [200, 558, 695, 781, 819, 824, 834, 835, 838, 858, 865], "2000": [4, 9, 126, 250, 671, 820, 834], "20000": 834, "2002": [118, 134, 167, 408], "2003": [146, 147, 169, 174, 195], "2005": 161, "2008": 162, "200\uac1c": 781, "201": [834, 835, 858, 865], "2010": 438, "2011": 430, "2014": 181, "2015": [135, 136, 408, 817, 858], "2016": [151, 152], "2017": [818, 820, 828, 829, 831, 834, 835, 838], "2018": [164, 166, 558, 689, 838, 865], "20181320245665535": 689, "2019": 817, "202": [834, 835, 858, 865], "2020": [820, 828, 831, 834, 835], "2020\u5e749\u6708": 750, "2021\ub144": 791, "2022": [828, 831, 834, 835], "2023": [214, 297, 303, 315, 563, 829], "2024": [828, 831, 834, 835], "2028": 834, "203": [834, 835, 858, 865], "2036": 831, "204": [834, 835, 858, 865], "2044": 853, "20466": 157, "2048": 447, "205": [697, 698, 742, 783, 826, 834, 835, 843, 858, 865], "2053": [435, 436, 437, 438, 439, 440, 441, 442, 443], "206": [834, 835, 841, 858, 865], "2062": 458, "207": [458, 834, 835, 858, 865], "2071": [823, 852], "2078": 834, "20782616": 834, "208": [458, 834, 835, 858, 865], "2080": 442, "2085": 404, "209": [173, 458, 834, 835, 858, 865], "2093": 835, "2095": 408, "2099": 834, "20gb": 235, "20x10": 864, "21": [14, 162, 310, 311, 622, 697, 823, 824, 828, 829, 831, 834, 835, 854, 858, 865], "210": [184, 834, 835, 858, 865], "2101": 404, "2102": [409, 431], "2104": 162, "2106": 414, "2108": 446, "211": [177, 834, 835, 858, 865], "2110": [558, 831], "2114": 823, "2117": 828, "2118": 828, "212": [834, 835, 858, 865], "21209": 25, "2125": 414, "213": [458, 834, 835, 858, 865], "2134": 410, "2136": 439, "21394654203489705": 689, "214": [834, 835, 858, 865], "2140": 823, "2141": 835, "21474836480": 235, "215": [834, 835, 858, 865], "2150": 834, "2154": 426, "2159": 399, "216": [161, 192, 818, 834, 835, 858, 865], "2162it": 829, "2167": 427, "217": [834, 835, 858, 865], "2170": 834, "217073": 185, "2175e": 834, "2178": 415, "218": [834, 835, 858, 865], "2182": [408, 823], "2187": 852, "219": [834, 835, 858, 865], "21937428942781778": 689, "2194": 443, "21st": 858, "22": [14, 25, 823, 834, 835, 840, 858, 865], "220": [458, 834, 835, 858, 865], "2204": 823, "2206": 831, "2208": 806, "2209": 806, "221": [834, 835, 858, 865], "22131880861864428": 689, "22155005": 782, "2216": 427, "222": [834, 835, 858, 865], "2222": 9, "22296293": 697, "223": [834, 835, 858, 865], "2235": 426, "2236": 828, "22366348": 835, "2237": 835, "224": [834, 835, 858, 865], "2240": [392, 823], "2245": 25, "2246": 831, "225": [458, 834, 835, 838, 858, 865], "226": [834, 835, 858], "2260": 823, "22662": 182, "227": [834, 835, 858], "2270": 852, "2272": 414, "2277": 149, "228": [14, 834, 835, 858], "2282": 442, "2284": 458, "2289": 392, "229": [834, 835, 858], "2291": [438, 439], "2294": 828, "23": [181, 195, 394, 395, 396, 697, 698, 701, 742, 745, 783, 786, 823, 829, 831, 834, 835, 858, 865], "230": [558, 834, 835, 858], "2302": [137, 171, 180, 182, 188], "2303": 414, "23033": [25, 166], "2304": 25, "231": [834, 835, 858], "2310": 303, "23142237259162102": 689, "232": [163, 181, 834, 835, 858], "2324": 438, "2326": 412, "232965": 25, "233": [834, 835, 858], "2330": 458, "23368113896545695": 689, "2337": 689, "2338": 392, "2339": 823, "234": [458, 834, 835, 858], "2340": 394, "2342": 404, "2344831": 831, "2347": 404, "2348": [427, 831], "235": [834, 835, 858], "2351": [435, 436, 437, 438, 439, 440, 441, 442, 443], "236": [834, 835, 858], "2360": 443, "2362": 426, "2363": 440, "23682038840665198": 689, "237": [157, 834, 835, 858], "2370": 393, "2372": [175, 855], "2373": 558, "238": [136, 834, 835, 858], "2384": 406, "2385": 853, "2387": 410, "239": [458, 834, 835, 858], "24": [166, 175, 434, 622, 648, 823, 829, 831, 834, 835, 855, 858, 865], "240": [25, 166, 458, 834, 835, 858], "2402": 844, "2403": 834, "2408": [558, 834], "241": [834, 835, 858], "2417": [436, 837], "2419e": 834, "242": [834, 835, 838, 858], "2426": [435, 436, 437, 438, 439, 440, 441, 442, 443], "24275978": 834, "2428": 834, "24285506608575758": 689, "243": [834, 835, 836, 838, 858], "2432": 134, "244": [25, 820, 834, 835, 858], "2449029": [4, 240], "24492": 137, "2449358": 831, "245": [135, 177, 834, 835, 858], "2450": 427, "2451": 409, "2453534": 831, "2455": 835, "245795339345932": 839, "246": [834, 835, 858], "2465e": 834, "2467": 458, "2469": [414, 834], "247": [152, 834, 835, 858], "2472495901894738": 689, "2473": 415, "248": [834, 835, 836, 858], "2481": 399, "2482": 823, "2486": 820, "249": [834, 835, 858], "2490": 852, "2496": 185, "2497": 426, "25": [9, 147, 161, 402, 405, 433, 434, 458, 547, 693, 694, 739, 740, 779, 780, 818, 820, 823, 826, 834, 835, 836, 838, 839, 843, 848, 849, 853, 858, 865], "250": [160, 458, 820, 834, 835, 858], "2500": [9, 611, 823], "2502": 421, "2509": 837, "250k": 195, "251": [193, 834, 835, 858], "2513": 427, "25177597999572754": 245, "252": [834, 835, 858], "2524": 414, "2528": 828, "253": [834, 835, 858], "2530": 661, "2533": [426, 828], "253458867276219": 689, "254": [834, 835, 858], "2541": 558, "255": [828, 834, 835, 848, 858], "25539042": 834, "2556": 458, "2558": 835, "256": [721, 722, 806, 819, 820, 828, 829, 834, 835, 848, 849, 858, 871], "257": [14, 834, 835, 858], "2576": 823, "2578": 834, "25782614": 834, "258": [834, 835, 858], "259": [834, 835, 858], "2597": 427, "26": [165, 823, 828, 829, 831, 834, 835, 858, 865], "260": [834, 835, 858], "2607": 427, "261": [834, 835, 858], "2611": 427, "2615": 835, "262": [159, 834, 835, 858], "2622": 426, "263": [834, 835, 858], "2634": 823, "2638": 426, "264": [834, 835, 858], "2643": 426, "2644": [414, 427], "2649": 426, "26499036865016423": 689, "265": [834, 835, 858], "2650": 689, "2652": 435, "2653": 823, "2654": [412, 438, 458], "2658": 427, "2659": 458, "266": [834, 835, 858], "2663": 427, "2666": 835, "2666226029396057": 839, "2669": 406, "267": [458, 834, 835, 858], "2675": 426, "268": [834, 835, 858], "2684": 427, "2687": [558, 835], "26872647": 835, "2688": [401, 407, 823], "2689": [600, 620, 823], "269": [834, 835, 858], "26905829596412556": 840, "2695": [645, 646], "27": [25, 629, 823, 831, 834, 835, 858, 865], "270": [834, 835, 858], "2703": 438, "2707": 853, "2708": [25, 154, 818, 819, 821, 828, 836, 838, 839, 852, 854, 855], "2709": [435, 436, 437, 438, 439, 440, 441, 442, 443], "271": [458, 834, 835, 858], "2716": 427, "27163": 170, "2719": 418, "272": [170, 834, 835, 858], "2721": [128, 129], "272115": 157, "273": [834, 835], "2730008213674695": 689, "2733": 426, "2734": [835, 852], "2738": [426, 427], "274": [834, 835, 838], "2743": 436, "2744": 823, "275": [834, 835, 854], "2757": 414, "276": [834, 835], "2761": 823, "2766": [645, 646], "277": [163, 834, 835], "2775": 118, "2778831166": 854, "278": [834, 835], "2780": 427, "2783258": 163, "2783370": 163, "2787": [458, 834], "27874796": 834, "2789": 458, "279": [834, 835], "2794": 426, "2796588354307046": 689, "2797": 415, "2798": 823, "28": [9, 169, 195, 425, 823, 824, 831, 834, 835, 839, 858, 865], "280": [834, 835], "2806e": 834, "281": [834, 835], "2816": 834, "282": [834, 835], "2820": 852, "282119": 841, "2823": [427, 558], "2826": 661, "2828": [433, 547], "283": [818, 834, 835], "28357022069634585": 689, "28367647637469273": 689, "284": [25, 834, 835], "2844": 834, "285": [834, 835], "2852": 404, "2855": 410, "286": [834, 835], "2861": 823, "2863627767733977": 689, "2863e": 834, "2864": 689, "287": [834, 835], "287326": 25, "2876": 427, "28763246536254883": 839, "288": [164, 818, 834, 835], "2881e": 834, "2882": 458, "2888": 837, "289": [834, 835], "2899": 834, "29": [144, 195, 622, 697, 698, 742, 783, 823, 824, 834, 835, 858, 865], "290": [834, 835], "2900": 834, "29000": 865, "2908": 427, "291": [834, 835], "2914": 858, "2918": 558, "292": [834, 835], "29233": 831, "2927": 458, "293": [834, 835], "2936": 853, "294": [834, 835, 838], "295": [834, 835], "29501": 844, "2950e": 834, "2953": 829, "2954": 831, "296": [820, 834, 835], "2962": 426, "2964": 835, "29640347": 835, "2965": 834, "29660083": 782, "297": [834, 835], "2973": 835, "2976": 427, "298": [155, 178, 179, 834, 835], "299": [834, 835], "2994": [415, 439], "2_capsul": [826, 867], "2_dglgraph": [826, 836, 841, 843], "2_link_predict": [826, 851], "2_node_classif": [826, 873], "2_small_graph": [826, 860], "2a240410": [828, 831, 834, 835], "2d": [297, 341, 388, 395, 417, 420, 451, 569], "2gb": [722, 806], "2k": 633, "2motif": 141, "2x3": 31, "2xlarg": 14, "2\uac1c\uc758": 782, "2\ub97c": 793, "2\ubc88\uc9f8": 799, "2\uc7a5": [791, 811, 815], "3": [4, 5, 6, 9, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 142, 143, 161, 169, 172, 173, 174, 176, 178, 179, 183, 190, 197, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 291, 292, 293, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 315, 317, 318, 319, 321, 327, 329, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 351, 352, 357, 384, 386, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 429, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 474, 475, 476, 477, 499, 502, 503, 540, 547, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 567, 569, 570, 571, 574, 575, 577, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 633, 635, 636, 640, 641, 642, 643, 645, 646, 647, 651, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 667, 669, 670, 671, 677, 678, 679, 680, 681, 686, 689, 693, 696, 699, 701, 703, 704, 705, 706, 707, 712, 714, 715, 718, 721, 722, 727, 730, 732, 733, 739, 740, 743, 745, 747, 748, 749, 750, 751, 756, 757, 763, 767, 770, 772, 773, 779, 780, 782, 784, 786, 788, 789, 790, 792, 798, 799, 806, 807, 811, 813, 815, 817, 819, 821, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 852, 853, 854, 865, 870, 871], "30": [25, 166, 181, 301, 402, 405, 413, 425, 453, 454, 458, 607, 617, 618, 622, 629, 722, 806, 818, 823, 834, 835, 836, 838, 839, 855, 858, 865], "300": [137, 142, 143, 159, 182, 192, 194, 834, 835], "3000": [4, 126, 250, 558, 658, 727, 767, 811, 865], "3003": 865, "30050": [698, 742, 783, 848, 849], "3007": 852, "301": [180, 834, 835], "302": [834, 835, 836], "3020": 435, "3024": 834, "30240067": 834, "3025": [401, 407], "3027939452162367": 689, "3028": 689, "303": [834, 835], "3030": [645, 646], "3039": [426, 823], "304": [164, 834, 835], "3043": 834, "305": [161, 834, 835], "3053": 399, "3056": 853, "306": [828, 834, 835], "3063": 414, "3064": 835, "3068": 820, "307": [834, 835], "3070736": 835, "307080": 180, "3071": 835, "3078": 438, "308": [159, 834, 835, 843], "3080": 415, "3082": 820, "30844661593437195": 839, "3087": 834, "309": [834, 835], "3092": 834, "30k": 865, "30x": 844, "31": [118, 119, 164, 166, 697, 698, 704, 742, 748, 783, 789, 824, 828, 829, 831, 834, 835, 840, 858, 865], "310": [159, 834, 835], "3105": 439, "311": [153, 834, 835], "312": [834, 835], "3120": 834, "3126": 458, "313": [834, 835], "31328748118329997": 689, "3134": [435, 436, 437, 438, 439, 440, 441, 442, 443], "3135": 427, "314": [159, 834, 835], "3148": 689, "3148264185956532": 689, "315": [834, 835], "316": [834, 835], "3161154827254189": 689, "3163": 421, "3168": [645, 646], "317": [14, 834, 835], "3174": [645, 646], "318": [834, 835], "3187": 831, "3189": 439, "319": [834, 835], "3191": 409, "32": [25, 146, 163, 172, 207, 337, 388, 416, 446, 458, 690, 704, 736, 748, 776, 789, 817, 824, 826, 834, 835, 857, 858, 865, 870], "320": [834, 835], "3202": 858, "3203": 440, "321": [834, 835], "3218": 834, "3219496197945605": 689, "322": [834, 835], "3224": 831, "3227": 834, "323": [834, 835], "3231": [439, 834], "32318397": 834, "3232": 834, "3235": 443, "3238": 853, "324": [834, 835], "3246e": [633, 669], "325": [187, 834, 835], "32595006": 834, "326": [834, 835], "3260": [834, 852], "327": [834, 835], "327576": 25, "328": [834, 835], "32805644": 834, "32890453934669495": 839, "329": [834, 835], "3295": 395, "32it": 829, "32x": 844, "33": [607, 622, 823, 834, 835, 855, 858, 865], "330": [165, 834, 835], "3303": 420, "3304": 423, "331": [834, 835], "3311": 852, "3316": 422, "332": [834, 835], "3322": 834, "33234211884156384": 689, "3326": 415, "3327": [25, 150], "333": [151, 818, 834, 835], "3330": [435, 436, 437, 438, 439, 440, 441, 442, 443], "3333": [9, 357, 572, 573, 598, 657], "3339": 823, "33391": 134, "334": [834, 835], "3342": 414, "3345": 834, "3346": [645, 646], "3347": 834, "335": [826, 834, 835, 843], "3352": 823, "336": [834, 835], "3361": 852, "3363": 835, "3364": 414, "337": [834, 835], "3370": 853, "3371": 410, "338": [834, 835], "3381872773170471": 475, "339": [834, 835], "3391": 806, "33929432608774135": 689, "3394": 806, "3399": 823, "34": [25, 152, 166, 167, 834, 835, 841, 854, 858, 865], "340": [834, 835], "3400": 608, "3408": 834, "3408e": 834, "341": [834, 835], "3419": 820, "342": [834, 835], "34270118": [696, 697], "3427e": 834, "343": [826, 834, 835, 843], "3439899477636117": 689, "344": [818, 834, 835], "3440": 834, "3447": 414, "34493": 25, "3449e": 834, "345": [14, 158, 834, 835], "3450": 834, "3455": [645, 646, 834], "346": [834, 835], "3462": 412, "3466": 404, "3468": 458, "347": [834, 835], "348": [834, 835], "3484559655189514": 839, "34846782265758314": 689, "3489": 661, "349": [834, 835], "3497": 415, "34it": 829, "35": [145, 147, 174, 818, 834, 835, 836, 838, 839, 858, 865], "350": [142, 834, 835], "3504": [852, 855], "35076354": 782, "351": [161, 834, 835], "3514": 406, "3516": 398, "352": [834, 835], "3523777809254057": 689, "353": [818, 834, 835], "354": [834, 835], "3541": 415, "355": [834, 835], "3556e": 834, "356": [172, 834, 835], "3565": 823, "3569": 410, "357": [834, 835], "358": [834, 835], "3581": 828, "3583": 828, "3584": 828, "3585": 828, "3586": 828, "359": [14, 834, 835], "36": [132, 834, 835, 858, 865], "360": [834, 835], "3607": 823, "361": [834, 835], "36101": 149, "3615": 834, "3616": 853, "362": [834, 835], "3623": 409, "363": [834, 835], "3630": 834, "3632": 831, "3635": 831, "3637": [435, 436, 437, 438, 439, 440, 441, 442, 443], "3638": 831, "364": [834, 835], "3643": [458, 834], "3648": 134, "365": [834, 835], "3652": 852, "3658": 406, "366": [834, 835], "3664": 393, "36649684241348557": 689, "3665": [443, 689, 835], "367": [834, 835], "3672": 118, "36728009581565857": 839, "3674": 853, "36784": 831, "36786902637778773": 689, "368": [834, 835], "3685": 399, "369": [834, 835], "37": [155, 187, 195, 834, 835, 858, 865], "370": [834, 835], "3700": 408, "370293": 841, "3703": 150, "371": [834, 835], "3717": 415, "372": [834, 835], "3724": 835, "37244025": 835, "373": [14, 834, 835], "3736": 458, "3737": 440, "374": [834, 835], "3741": 834, "375": [834, 835], "3758": 395, "3759": 835, "376": [834, 835], "3760": 828, "3765": 828, "3766": 828, "377": [834, 835, 836], "3770": 608, "3772": 458, "378": [834, 835], "3781": 414, "379": [14, 834, 835], "3793": 831, "3794": 831, "3795": 831, "3796": 219, "38": [834, 835, 858, 865], "380": [834, 835], "3803": 409, "3805": [401, 407], "3808": [645, 646], "3809": 414, "381": [834, 835], "3811": 835, "382": [834, 835], "3820": 439, "3825": [401, 407], "383": [834, 835], "3832": 835, "384": [164, 834, 835], "3840": 118, "3840e": 834, "3843": 835, "3847": 414, "385": [834, 835], "38538652658462524": 839, "3855": 834, "386": [834, 835], "3865": 853, "3866": [421, 853], "3868": 823, "387": [834, 835], "3872": [645, 646, 835], "388": [818, 834, 835], "389": [818, 834, 835], "3890": 834, "3891": [435, 436, 437, 438, 439, 440, 441, 442, 443], "3893": 414, "3896": 823, "39": [25, 163, 195, 458, 622, 828, 829, 831, 834, 835, 836, 837, 840, 841, 857, 858, 865], "390": [834, 835], "391": [834, 835], "3912": 834, "39161865931662243": 689, "392": [834, 835], "3924e": 834, "3928": 837, "393": [824, 834, 835], "3934": [645, 646], "3938": 661, "394": [834, 835], "3943": [401, 407], "3945": 835, "3949": 834, "395": [834, 835, 858], "39534097273254654": 689, "396": [834, 835], "397": [834, 835], "3977": 823, "398": [824, 834, 835], "3985": 458, "399": [824, 834, 835], "3996": 420, "39it": 829, "3_generative_model": [826, 863], "3_message_pass": [826, 836, 839, 843], "3_tree": [826, 860], "3d": [179, 341, 432, 434, 444, 446, 447, 451, 569], "3e": 819, "3f": [818, 819, 821, 828, 836, 838], "3x3": 823, "3\uac00\uc9c0": [777, 779, 803], "3\uac1c\uc758": [793, 802], "3\ub2e8\uacc4\ub85c": 809, "3\uc7a5": [791, 804, 811, 815], "4": [4, 5, 9, 12, 14, 20, 21, 22, 26, 27, 30, 34, 35, 36, 37, 46, 47, 51, 55, 56, 58, 60, 61, 73, 74, 75, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 107, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 132, 142, 143, 148, 172, 173, 195, 209, 210, 213, 214, 215, 216, 217, 219, 220, 229, 230, 240, 243, 244, 245, 246, 250, 287, 291, 293, 297, 298, 299, 300, 301, 302, 303, 308, 317, 318, 319, 321, 327, 329, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 351, 357, 384, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 448, 449, 450, 451, 452, 453, 454, 456, 458, 474, 475, 476, 503, 540, 547, 555, 556, 557, 560, 562, 563, 564, 567, 569, 574, 575, 577, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 607, 608, 610, 611, 612, 613, 614, 617, 618, 619, 620, 622, 626, 629, 630, 633, 640, 642, 643, 645, 646, 647, 656, 658, 659, 661, 663, 664, 667, 669, 670, 681, 693, 694, 697, 698, 699, 702, 703, 704, 705, 706, 712, 714, 715, 719, 721, 722, 727, 732, 733, 740, 741, 742, 743, 746, 747, 748, 749, 750, 756, 758, 760, 762, 767, 772, 773, 779, 780, 782, 784, 787, 788, 789, 790, 792, 798, 800, 803, 805, 806, 811, 815, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 845, 848, 849, 852, 853, 854, 857, 858, 861, 864, 865, 870, 871], "40": [138, 147, 159, 338, 383, 458, 617, 622, 818, 831, 834, 835, 836, 838, 839, 854, 858, 865], "400": [618, 695, 781, 834, 835, 861, 865], "4000": [173, 820, 823], "4000000": 210, "4007": 458, "400\uac1c\uc758": 781, "401": [834, 835, 838], "4010922": 835, "4011": [834, 835], "40117401": 835, "4012": 835, "402": [834, 835], "4022": 408, "4024": 852, "4028": 806, "403": [834, 835], "4032": 823, "4039921164512634": 839, "404": [834, 835], "4042": 439, "405": [834, 835], "40559906615287566": 689, "406": [558, 818, 834, 835], "4063": 414, "407": [834, 835], "40707309111756307": 689, "408": [834, 835], "4081642382536248": 689, "4087": 835, "40895299": 834, "409": [834, 835], "4090": 834, "40943": 191, "4096": 414, "41": [159, 191, 824, 834, 835, 840, 858, 865], "410": [168, 186, 818, 834, 835], "4102c744bb9d6fd7b40ac67a300e49cd87e28392": [691, 737, 777], "4104": 147, "411": [834, 835], "4111": [435, 436, 437, 438, 439, 440, 441, 442, 443], "41127": 138, "412": [834, 835], "4122": 829, "4126": 414, "4128": 823, "413": [834, 835], "4138": 823, "414": [834, 835], "415": [152, 834, 835], "41516080644186737": 689, "41527155506593394": 689, "4155": 854, "416": [834, 835], "4163": 834, "4167": 9, "417": [834, 835], "418": [834, 835, 836], "4186": 854, "419": [14, 834, 835], "41922": 831, "4197669213305396": 689, "41it": 829, "42": [25, 198, 820, 834, 835, 843, 858, 865], "420": [834, 835], "42005619": 834, "4201": 834, "421": [834, 835], "4216530595907526": 689, "4217": 834, "422": [834, 835], "4220": 458, "4221": 415, "42222014": 782, "423": [834, 835], "4239": 835, "42393485": 835, "424": [834, 835], "42426776": 834, "4243": 834, "4249": [435, 436, 437, 438, 439, 440, 441, 442, 443], "425": [834, 835], "4250772297382355": 839, "426": [834, 835], "4268": 689, "4268254673041745": 689, "427": [834, 835], "4270": 854, "4273": [408, 854], "4279": 414, "428": [834, 835], "4285": 854, "429": [834, 835, 838], "4293": 820, "42950378": 834, "42988138237505735": 689, "4299": 689, "43": [701, 745, 786, 834, 835, 858, 865], "430": [834, 835, 836], "431": [181, 192, 834, 835], "4318": [645, 646], "432": [14, 834, 835], "4323": 420, "4325": [128, 129], "433": [834, 835], "4331": 395, "4333": 834, "4335": 395, "4338": 442, "434": [834, 835], "4348": [834, 835], "4349": [435, 436, 437, 438, 439, 440, 441, 442, 443], "435": [834, 835, 858], "4353": 823, "4358e": 834, "436": [834, 835], "4362": 834, "437": [834, 835], "438": [834, 835], "4388": 854, "439": [834, 835], "4390": 823, "44": [174, 823, 824, 829, 834, 835, 858, 865], "440": [834, 835], "4400": 173, "4404": 835, "4407": 829, "441": [834, 835], "442": [834, 835], "4420": 834, "4426": 852, "443": [834, 835], "4430": 854, "444": [834, 835], "44412796119211184": 689, "44451993703842163": 839, "4448": 835, "445": [14, 828, 834, 835], "4451": [645, 646], "4457": 820, "4458": 414, "446": [834, 835], "44629317": 834, "4463": 834, "4465": 410, "447": [834, 835, 838], "4470617033458436": 689, "448": [834, 835], "4482": [415, 834], "449": [834, 835], "4495": 854, "4497": 440, "45": [163, 458, 818, 826, 834, 835, 836, 838, 839, 841, 844, 858, 865], "450": [818, 828, 834, 835], "4500": 834, "4500966": 865, "4508": 661, "451": [834, 835, 836, 858], "4511": 442, "452": [834, 835], "4523600060547709": 689, "4525": 854, "453": [834, 835], "454": [834, 835], "4542": [414, 458], "45441619816038514": 689, "4548": 835, "455": [834, 835], "4554": 852, "456": [149, 834, 835], "457": [14, 834, 835], "4570": [401, 407, 806], "4572": 820, "458": [834, 835], "459": [834, 835], "4590": 458, "4594": 823, "46": [426, 824, 834, 835, 858, 865], "460": [834, 835], "4600": 173, "4603": 834, "4609": 806, "461": [834, 835], "462": [834, 835], "4620": 458, "4621": 823, "4627": 854, "4629": [128, 129], "463": [834, 835], "4630": 458, "4631": 415, "4639": 834, "464": [159, 834, 835], "4643": 823, "4647410679872376": 689, "465": [834, 835], "4651e": 834, "4652": 414, "4653": 440, "4654086994009452": 689, "466": [834, 835], "4664": 118, "4665": 854, "4669": 823, "467": [834, 835], "4673": 415, "468": [834, 835], "4680367708206177": 839, "4682": 410, "4684": 820, "469": [834, 835], "4692371689047904": 689, "4698": 395, "47": [426, 558, 622, 834, 835, 858, 865], "470": [834, 835], "4707": 834, "471": [834, 835], "4711": 823, "4719": 828, "472": [818, 834, 835], "4721": 820, "47224962583565544": 689, "4728": 854, "47296": 831, "473": [834, 835, 836], "4731": 661, "47382": [168, 186], "474": [161, 826, 834, 835, 838, 857], "4743": 837, "4746": 854, "475": [834, 835], "4750": 834, "4755": [435, 436, 437, 438, 439, 440, 441, 442, 443], "4756": 689, "47562693094002173": 689, "476": [834, 835], "4760": [438, 835], "4762": 436, "477": [834, 835], "4770": 409, "4770019763881086": 689, "478": [14, 824, 826, 834, 835, 873], "479": [834, 835], "4792": 834, "4797": [398, 834], "48": [426, 834, 835, 840, 858, 865], "480": [834, 835], "4800": 173, "4801": [401, 407], "4805": 408, "481": [818, 834, 835], "4813": 854, "4814": 834, "4815": 854, "4817": 458, "482": [834, 835, 873], "4821": 410, "4828": 854, "483": [834, 835], "483142": 158, "4837": 435, "4838": 834, "484": [834, 835], "4847": 414, "485": [834, 835, 838], "4854": 820, "4858": 829, "486": [163, 834, 835], "4864": 834, "487": [14, 834, 835], "4871": 852, "4878": 834, "488": [834, 835], "48810": 132, "4883": [834, 837], "4884": 174, "4885": 440, "4887": 823, "4888": 4, "489": [818, 834, 835], "4890": 834, "48921": 180, "49": [25, 426, 834, 835, 858, 865], "490": [824, 834, 835], "4900": 852, "49037522512771525": 689, "4904": 440, "4909": 689, "490938012147181": 689, "491": [135, 824, 834, 835], "4910e": 342, "4919": 835, "492": [181, 834, 835], "4921e": 342, "4925": 854, "493": [152, 834, 835], "4936": 823, "4938": 834, "493888090726854": 689, "4939": 854, "49397782380750765": 689, "494": [834, 835], "4940": [440, 689], "4948": 414, "4949": 834, "495": [14, 152, 834, 835], "49524280428886414": 839, "4954": [645, 646], "496": [834, 835], "4964": 820, "497": [834, 835], "4977": 440, "498": [834, 835], "4983": 820, "49830531225880065": 831, "499": [834, 835], "4994": 820, "4_link_predict": [826, 836, 843], "4_old_win": [826, 867], "4_rgcn": [826, 857], "4d": 179, "4f": [820, 829, 852, 853, 854, 855, 858, 870, 871], "4m": [210, 715, 801], "4part_data": [848, 849], "4th": 722, "4\u6761\u8fb9": 746, "4\uac00\uc9c0": 778, "4\uac1c\uac00": 786, "4\uac1c\uc758": [789, 811], "4\uc7a5": [791, 811, 813, 815], "5": [5, 6, 9, 12, 14, 20, 22, 26, 27, 28, 34, 35, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 107, 113, 114, 115, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 137, 142, 143, 145, 146, 147, 148, 149, 152, 155, 156, 159, 161, 163, 172, 173, 174, 178, 184, 185, 187, 193, 197, 200, 205, 210, 214, 216, 219, 220, 229, 230, 243, 245, 246, 250, 293, 297, 298, 299, 300, 301, 302, 303, 308, 315, 316, 317, 318, 321, 327, 333, 334, 335, 338, 339, 340, 341, 342, 344, 351, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 457, 475, 476, 502, 503, 540, 547, 551, 552, 556, 557, 558, 561, 562, 563, 564, 565, 569, 574, 575, 594, 601, 607, 608, 610, 612, 613, 614, 615, 619, 626, 628, 629, 630, 640, 642, 643, 645, 646, 647, 648, 651, 654, 655, 656, 658, 659, 661, 663, 664, 667, 668, 681, 683, 685, 686, 689, 691, 693, 694, 696, 699, 700, 701, 702, 703, 704, 706, 707, 712, 713, 714, 715, 716, 717, 720, 722, 725, 733, 737, 740, 742, 743, 744, 745, 746, 747, 748, 750, 751, 756, 757, 760, 762, 765, 767, 773, 777, 780, 783, 784, 785, 786, 787, 788, 789, 792, 798, 799, 803, 805, 806, 809, 811, 817, 818, 819, 820, 821, 823, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "50": [146, 171, 174, 175, 181, 426, 432, 434, 458, 548, 558, 622, 818, 834, 835, 836, 838, 839, 852, 854, 855, 858, 865], "500": [150, 154, 160, 176, 701, 727, 728, 745, 767, 768, 786, 811, 812, 818, 819, 821, 834, 835, 836, 838, 839, 840, 852, 854, 855, 864], "5000": [4, 9, 25, 126, 191, 250, 357, 390, 391, 425, 478, 550, 558, 572, 573, 594, 598, 611, 657, 665, 727, 767, 811, 823], "50000": [14, 146, 158], "500000": 210, "5007": 834, "5009": 823, "500k": 210, "501": [834, 835], "5010": 820, "5011": 410, "502": [834, 835], "503": [834, 835], "5030": 414, "5034": 806, "5037": 834, "5039": 806, "504": [834, 835], "5041": [401, 407], "5042": 418, "5044": 834, "5047": 834, "505": [834, 835, 838], "5053": 393, "5054": 436, "506": [834, 835, 838], "5065": [645, 646], "507": [834, 835], "508": [834, 835], "509": [834, 835, 855], "5097": 458, "51": [193, 426, 834, 835, 858, 865], "510": [834, 835], "5101": 834, "5105": 854, "511": [834, 835], "5117": 661, "512": [444, 447, 683, 685, 834, 835, 838, 858], "513": [834, 835], "5137": 837, "514": [834, 835], "5142": 458, "515": [193, 834, 835], "5151": 834, "5155": 835, "5159": 410, "516": [834, 835], "5169": 414, "517": [834, 835], "5170": 835, "5171": [645, 646], "518": [834, 835], "5182": [645, 646], "519": [834, 835], "5191278830882644": 689, "5192": 398, "5197": [435, 436, 437, 438, 439, 440, 441, 442, 443, 645, 646, 689], "5197462471155317": 689, "52": [426, 820, 824, 834, 835, 858, 865], "520": [826, 834, 835, 843], "52000000": 240, "5201": 185, "5206": 835, "521": [834, 835], "5210": 823, "5215": 423, "5217": 425, "522": [834, 835], "5221": [440, 458], "5227": 689, "5227112950269823": 689, "523": [834, 835], "5230898857116699": 839, "5236": 410, "5237": 440, "5239": 834, "524": [14, 818, 834, 835, 836], "5243": 418, "525": [834, 835, 858], "5251800239734318": 689, "5257": 858, "5258": 823, "5259": 398, "526": [834, 835], "5266": 410, "527": [834, 835], "5278": [435, 436, 437, 438, 439, 440, 441, 442, 443], "52789281": 834, "5279": 834, "528": [834, 835], "5286": 406, "5287": 415, "529": [219, 834, 835, 855], "529195480661293": 689, "5292": 834, "5297": [645, 646], "5299": 820, "52it": 829, "53": [14, 426, 824, 834, 835, 858, 865], "530": [834, 835], "5303": [645, 646], "5306": 440, "531": [834, 835], "5312": 458, "532": [834, 835], "5322": 443, "5327": 398, "533": [834, 835], "5332": 835, "5333": 9, "5339": 835, "534": [834, 835, 838], "5340": 834, "53403875": 834, "5341": 820, "5347": [401, 407], "5348": 689, "534822233529295": 689, "535": [834, 835], "5352": 418, "5355": 834, "5357": 820, "536": [834, 835, 836], "5364": 834, "53643127": 834, "5365": 689, "5365210052235699": 689, "537": [834, 835], "538": [834, 835], "5382": 852, "539": [834, 835], "5398": 421, "54": [426, 828, 831, 834, 835, 858, 865], "540": [834, 835], "5400687466285844": 689, "5401": 689, "5406": 619, "5409": 820, "541": [834, 835], "541260302066803": 839, "5418": [645, 646], "542": [14, 834, 835], "5420": [442, 835], "5421": 408, "543": [834, 835], "544": [184, 834, 835], "5445": 435, "545": [834, 835], "5453": 835, "5454": [414, 661, 823], "5454703921677284": 689, "5455": 689, "5458": 858, "546": [834, 835], "547": [834, 835], "54729": 831, "5473e": 834, "5477868606453535": 689, "548": [834, 835], "5488": 835, "549": [834, 835], "5490": 423, "5495035052928215": 689, "55": [147, 181, 426, 818, 823, 834, 835, 836, 838, 839, 858, 865], "550": [834, 835], "551": [834, 835], "5511": 439, "5512": 408, "5513": 423, "5514": 820, "552": [834, 835], "5520": [458, 829], "5525": 835, "5527": 820, "5529": 438, "553": [834, 835], "5533": 835, "5538": 439, "5539e": 834, "554": [834, 835], "5540": 415, "5541": [128, 129], "5543": 820, "5548": 835, "555": [834, 835], "5551": 414, "556": [834, 835], "5561": 820, "5563827995742111": 689, "55638816": 835, "5564": [689, 835], "557": [834, 835], "558": [818, 834, 835], "5584": 834, "5584374": 834, "559": [834, 835], "5592": 834, "55it": 829, "56": [426, 834, 835, 858, 865], "560": [834, 835], "5604": 834, "5608": 835, "561": [834, 835], "5612": 661, "5614": 118, "5614197853127827": 689, "5615e": 834, "562": [818, 834, 835], "5628": 820, "5629": 837, "563": [834, 835], "564": [834, 835], "5643": 414, "5646": 829, "565": [834, 835], "5658": [435, 436, 437, 438, 439, 440, 441, 442, 443], "566": [558, 818, 834, 835, 840], "5668682": 133, "567": [834, 835], "5671": 458, "568": [169, 834, 835], "5684": 823, "569": [834, 835], "5692": [645, 646], "57": [426, 622, 821, 834, 835, 858, 865], "570": [834, 835], "5708": 834, "571": [834, 835], "5711": 414, "5712": 834, "572": [834, 835, 836, 838], "5721": 410, "5725": [435, 436, 437, 438, 439, 440, 441, 442, 443], "5725330322207948": 689, "573": [14, 818, 834, 835], "574": [834, 835], "574418": 25, "5746912787380253": 689, "5749": 689, "5749339182767451": 689, "575": [834, 835, 836], "576": [828, 834, 835], "5762": 835, "577": [834, 835], "5772": 854, "5778e": 834, "578": [834, 835], "5783": 834, "579": [834, 835, 838], "57928967": 835, "5793": 835, "58": [14, 829, 834, 835, 858, 865], "580": [834, 835], "5803": 823, "5805": 834, "581": [834, 835], "5816": 823, "582": [834, 835], "5822": 438, "583": [834, 835], "5838": 837, "584": [834, 835], "5840": 443, "5843484680693983": 831, "5845": 458, "5847": 435, "5849": 404, "585": [834, 835], "5854": 806, "5859": 829, "586": [834, 835], "587": [834, 835], "5873": 421, "5878": 414, "588": [14, 834, 835], "5887": 820, "589": [834, 835], "59": [25, 155, 187, 458, 834, 835, 858, 865], "590": [834, 835, 838], "5901": [645, 646], "5905": 834, "59071": 158, "5908": 806, "591": [834, 835], "5913335505943637": 689, "5916": 834, "5917699933052063": 839, "592": [145, 834, 835, 836], "5922": 852, "5923": 661, "5925": 834, "593": [834, 835, 838], "5930": 852, "5937": 835, "5937484188166621": 689, "594": [834, 835, 836], "5941": 823, "5942": 436, "5945": [401, 407], "595": [819, 834, 835], "596": [834, 835, 836], "5960": 438, "5962": 806, "5963": 852, "5967": 806, "597": [834, 835], "598": [834, 835], "599": [834, 835], "59943939": 834, "5_dgmg": [826, 863], "5_graph_classif": [826, 836, 843, 870], "5a0c40b": 861, "5e": [428, 430, 721, 722, 806, 818], "5f": 821, "5x4": 837, "5\uac1c\uc758": 803, "5\uc7a5": [791, 798], "6": [3, 6, 9, 11, 20, 26, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 107, 117, 118, 119, 122, 130, 131, 142, 147, 148, 150, 151, 156, 163, 172, 173, 189, 210, 214, 215, 216, 243, 293, 297, 298, 299, 301, 302, 303, 308, 317, 318, 321, 333, 334, 341, 342, 357, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 552, 556, 558, 564, 569, 617, 633, 635, 640, 642, 643, 655, 663, 669, 685, 686, 699, 702, 706, 711, 725, 727, 728, 730, 743, 746, 750, 755, 756, 767, 768, 770, 781, 784, 787, 797, 798, 811, 812, 813, 817, 819, 821, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 843, 852, 854, 855, 858, 861, 864, 865, 870, 871], "60": [169, 176, 189, 458, 617, 622, 818, 829, 834, 835, 836, 838, 839, 858, 865], "600": [25, 834, 835, 861], "6000": 217, "60000": 169, "6000000238418579": 474, "6005": 25, "6008": 414, "601": [834, 835], "6019": 823, "602": [181, 834, 835, 838], "603": [834, 835], "6032": 436, "604": [834, 835], "604045": 173, "604094": 173, "6044": [423, 858], "6045": 440, "605": [834, 835], "6059": 834, "606": [824, 834, 835], "6066": [401, 407], "607": [834, 835], "6073": 820, "6079": 834, "608": [824, 834, 835], "609": [834, 835], "6090": 835, "6095": 661, "61": [829, 834, 835, 858, 865], "610": [819, 834, 835], "6102": 834, "6106": 415, "611": [834, 835], "6114": [645, 646, 834], "61142803": 834, "6118": [435, 436, 437, 438, 439, 440, 441, 442, 443], "6118386331195641": 689, "61191552": 697, "61191553": 697, "61191556": 697, "612": [834, 835], "6128057988523105": 831, "613": [834, 835], "614": [818, 834, 835], "6143": 414, "6144": [291, 823], "6146": 436, "615": [181, 834, 835], "6156748364694707": 689, "6159": 835, "616": [834, 835], "6163": 393, "617": [834, 835], "618": [834, 835, 854], "6186113627974094": 831, "619": [834, 835], "6199": 440, "61gb": 14, "61m": [715, 801], "62": [829, 834, 835, 858, 865], "620": [834, 835], "620118223673067": 689, "621": [834, 835], "6211": 440, "6213": 458, "622": [834, 835], "6220": [414, 834], "62203716": 834, "6221": [458, 834], "6222": 435, "623": [826, 834, 835, 838], "6237": 834, "624": [834, 835], "625": [834, 835], "62539528": 240, "6254": 661, "6257": 823, "6258": 837, "626": [834, 835], "627": [834, 835], "628": [834, 835, 838], "629": [834, 835], "6295": 661, "63": [25, 704, 748, 834, 835, 858, 865], "630": [163, 834, 835, 838], "6305": 439, "631": [834, 835, 838], "6311": 834, "6317": 439, "6319": [458, 835], "632": [828, 834, 835, 838], "6321688647270043": 831, "6325": 661, "6328": 823, "633": [834, 835], "6330": 835, "6337": 823, "6338e": 834, "634": [834, 835], "6340": [414, 820], "634899790318452": 689, "635": [834, 835], "6355": [435, 823], "63563": 25, "636": [818, 834, 835, 838], "6365": [435, 436, 437, 438, 439, 440, 441, 442, 443], "6369": 834, "63693727": 834, "637": [834, 835], "6373": 423, "637482": 835, "6375": [404, 820, 835], "6375445528248924": 689, "6379": [645, 646], "638": [834, 835], "6385": 834, "639": [14, 834, 835], "6393": 414, "6399": 438, "64": [14, 172, 195, 388, 424, 426, 430, 431, 566, 704, 748, 789, 831, 834, 835, 844, 858, 865], "640": [819, 834, 835], "6408": 408, "641": [818, 834, 835], "6418": [458, 834], "642": [834, 835], "643": [834, 835], "6430752709822477": 831, "6430l": 844, "6436": 835, "644": [834, 835], "645": [834, 835, 838], "6450552031947381": 831, "6453746567017163": 689, "6458": 834, "6459009647369385": 839, "646": [834, 835], "6462162561249654": 689, "6468673445417632": 831, "647": [834, 835], "6477": 394, "648": [834, 835], "648874463": 697, "649": [834, 835], "6494437360242048": 689, "649719789254673": 831, "64d0f3f": 14, "65": [153, 818, 824, 834, 835, 836, 838, 839, 858, 865], "650": [136, 834, 835], "651": [834, 835], "6512e": [633, 669], "6515": [645, 646], "652": [14, 834, 835, 838], "6526403892728874": 689, "653": [834, 835, 838], "65331": 831, "653467": 831, "6537": 837, "654": [834, 835], "6541": 823, "6543": 834, "6544": 820, "65473004": 834, "6548877479110037": 831, "6549": 415, "655": [834, 835], "6557": [433, 547, 834], "6558": 458, "656": [819, 828, 834, 835], "6562": 806, "6568": [401, 407, 418], "657": [834, 835], "6570": 852, "658": [14, 834, 835], "6580": 689, "6580438064356824": 689, "6585": 619, "65854": 182, "659": [834, 835], "6594951663841697": 689, "6595": 689, "6597": 421, "6598715708878852": 689, "66": [823, 828, 829, 831, 834, 835, 858, 865], "660": [834, 835], "6601": 852, "6609": 829, "661": [834, 835], "662": [834, 835, 838], "6624186423087752": 689, "6628": 820, "663": [818, 834, 835], "6630": 823, "6635": 837, "664": [834, 835], "665": [834, 835], "6655": 806, "6657": 834, "666": [824, 834, 835], "6663": 834, "6667": [598, 657], "667": [834, 835], "6674": 823, "668": [834, 835], "6680": 835, "6684": 834, "669": [834, 835], "6694943496824788": 689, "67": [834, 835, 858, 865], "670": [834, 835, 838], "6702": [645, 646], "6708": 823, "671": [818, 834, 835], "6711": 823, "6717": [820, 823], "672": [834, 835, 836], "6725235282226365": 828, "6727": 835, "672884": 144, "673": [834, 835], "674": [824, 834, 835, 836, 838], "6746269314422184": 689, "6748": 823, "675": [834, 835], "6751": 820, "6754": 439, "6756": 835, "676": [834, 835], "6766": 834, "6766324": 834, "677": [163, 173, 834, 835], "6776417760682221": 689, "678": [834, 835, 838], "678909957408905": 839, "679": [834, 835], "6795": 820, "6796": 835, "67985810014162": 689, "6799": 689, "68": [170, 824, 829, 834, 835, 858, 865], "680": [834, 835], "681": [834, 835], "6810484348765842": 689, "6811": 820, "6817": 837, "682": [173, 834, 835], "6825": [435, 436, 437, 438, 439, 440, 441, 442, 443], "683": [818, 834, 835], "684": [818, 834, 835], "6845": 439, "685": [834, 835], "68527676": 835, "6853": 835, "686": [834, 835], "6865": 858, "687": [834, 835], "6871": 415, "6876": 438, "688": [14, 834, 835], "6881": 837, "6882": 458, "6886": 823, "689": [834, 835], "6893": [645, 646], "69": [173, 824, 834, 835, 855, 858, 865], "690": [819, 824, 834, 835], "6901745368284345": 689, "6906": 118, "6907": 440, "6908": [399, 835], "691": [834, 835], "6910": 661, "6911": 823, "692": [834, 835], "6924508810043335": 839, "6925": [435, 436, 437, 438, 439, 440, 441, 442, 443], "692873149428549": 689, "693": [834, 835], "6931": 414, "6937": 458, "694": [834, 835], "6943": 806, "695": [834, 835, 838], "6954": [458, 834], "6955": 440, "6959": 828, "696": [826, 834, 835, 860], "6960": [835, 858], "6961": 828, "6962": 435, "6964": 828, "697": [834, 835], "698": [14, 834, 835, 836], "6985674921582508": 689, "698592283371875": 689, "6986": 689, "699": [834, 835], "6992": [835, 858], "69920594": 835, "6994": 854, "6_line_graph": [826, 857], "6_load_data": [826, 836, 843], "6gb": 697, "6\u4e2a\u8282\u70b9": 746, "6\uc740": 781, "6\uc744": 799, "6\uc7a5": [791, 797, 809, 811], "7": [6, 9, 14, 20, 26, 79, 80, 81, 82, 122, 136, 142, 154, 160, 161, 162, 163, 165, 171, 172, 177, 179, 243, 293, 297, 298, 299, 300, 301, 302, 303, 308, 317, 327, 341, 342, 406, 434, 551, 552, 556, 561, 600, 620, 633, 640, 642, 654, 655, 663, 669, 702, 705, 706, 711, 712, 715, 730, 739, 746, 749, 750, 755, 757, 770, 779, 787, 790, 797, 798, 799, 813, 817, 818, 819, 821, 823, 824, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 852, 854, 855, 858, 861, 864, 865, 870, 871], "70": [25, 153, 184, 210, 818, 824, 829, 834, 835, 836, 838, 839, 858, 865], "700": [834, 835], "7000": [433, 547], "7002": 834, "70068218": 834, "7007": 834, "701": [192, 834, 835], "702": [834, 835], "7026": 806, "703": [181, 834, 835], "7031": 806, "704": [834, 835, 836], "7048": [401, 407], "705": [834, 835], "7050": 852, "7051530741717352": 689, "7052": 837, "7053": 414, "706": [173, 834, 835], "7066": 834, "70663655": 834, "707": [834, 835], "7071": 657, "708": [828, 834, 835], "709": [834, 835], "7091": 439, "7095": 458, "7099": 834, "70it": 821, "71": [169, 184, 834, 835, 858, 865], "710": [153, 834, 835, 836], "7100": 852, "7109": 823, "711": [834, 835, 836], "712": [819, 834, 835, 838], "713": [697, 818, 834, 835], "7130507826805115": 839, "7134": 834, "7138": 439, "714": [834, 835], "7141": 118, "715": [834, 835], "7150": 852, "7153": 118, "716": [194, 834, 835, 836, 838], "7160": 823, "7163": 806, "7168": 806, "717": [161, 162, 163, 834, 835, 836], "7174910641836348": 689, "7175": 834, "718": [834, 835], "719": [834, 835], "7190": 852, "7196969604886617": 689, "7197": 689, "7199": 858, "72": [834, 835, 858, 865], "720": [834, 835], "721": [834, 835], "7210": 834, "7211": 25, "7218": 835, "72184271": 835, "722": [135, 834, 835], "723": [834, 835, 838], "724": [819, 834, 835, 838], "7240": 852, "72437122": 834, "7244": 834, "7246": 835, "725": [834, 835], "726": [192, 818, 819, 834, 835, 838], "7262": 132, "7267": 823, "7269": [128, 129], "727": [834, 835], "728": [834, 835, 836, 838], "7280": 852, "7287": 440, "7287e": [633, 669], "7288": 852, "729": [149, 834, 835], "7291568018841328": 689, "73": [834, 835, 858, 865], "730": [819, 834, 835], "7303": 835, "730570": 841, "731": [834, 835], "7310": 852, "7311": [600, 620, 823], "7319": 820, "732": [159, 819, 834, 835], "7321742043493028": 689, "733": [834, 835, 836], "734": [819, 834, 835, 836], "735": [834, 835, 836], "7352138669985214": 689, "7356": [436, 820], "736": [834, 835], "7365": 458, "7368": 689, "736833152378035": 689, "737": [818, 834, 835], "738": [834, 835, 838], "73865212": 834, "7387": 834, "739": [834, 835], "74": [25, 834, 835, 858, 865], "740": [159, 818, 834, 835, 836, 838], "7405": 820, "741": [834, 835], "7410": 436, "742": [834, 835], "7426": 689, "7426272601929126": 689, "7427": 435, "743": [819, 834, 835, 838], "7432": 834, "744": [834, 835, 838], "745": [136, 819, 834, 835, 838], "7457985352827006": 689, "746": [819, 834, 835, 838], "7462": 823, "7465": 458, "747": [834, 835, 838], "7472": 835, "74724981": 835, "7475": 834, "7478": 854, "748": [165, 834, 835, 838], "7480": 852, "749": [834, 835, 836, 838], "7494": 834, "75": [14, 244, 433, 547, 717, 760, 803, 818, 834, 835, 836, 838, 839, 858, 865], "750": [834, 835, 836, 838], "7500": [550, 665], "7502": 837, "7507": [645, 646], "751": [818, 834, 835, 838], "7510": 852, "7514": 829, "752": [135, 824, 834, 835, 836, 838], "7520": 852, "7525": 406, "753": [819, 834, 835, 838], "7530": 852, "7535": 834, "754": [818, 834, 835, 838], "7540": [442, 852], "755": [14, 834, 835, 838], "7550": 852, "7556": 393, "7557": 823, "756": [160, 834, 835, 838], "7560": [438, 852], "75614879": 834, "7562": 854, "75655": 831, "7567": [435, 436, 437, 438, 439, 440, 441, 442, 443], "757": [834, 835], "7570": 835, "7573": 854, "758": [834, 835, 836, 838], "7580": 852, "7583372765843964": 689, "7586": 854, "7587": 414, "75877325": 834, "7588": [689, 834], "7588441197954202": 689, "759": [834, 835], "7590": 834, "7594": 834, "75943915": 834, "75it": 829, "76": [834, 835, 858, 865], "760": [818, 834, 835, 836, 838], "7600": [134, 852], "761": [834, 835], "7610": 852, "7613943085507672": 689, "7614": 689, "762": [818, 828, 834, 835, 838], "7620": 852, "763": [834, 835, 838], "7630": 852, "7635": 854, "764": [834, 835, 836, 838], "7640": 852, "765": [834, 835, 836, 838], "7650": [25, 852], "7651": 823, "76516515": 835, "7652": 835, "765544096939567": 689, "7656": 425, "766": [834, 835, 838], "7665": 410, "7667": 858, "767": [135, 834, 835], "768": [159, 818, 834, 835, 838, 858], "7684": 835, "769": [834, 835, 836, 838], "7692": 414, "7696e": 834, "7697": 689, "7697294432580938": 689, "77": [824, 834, 835, 858, 865], "770": [834, 835, 836, 838], "7704": 854, "7705": 823, "7709": 422, "771": [818, 834, 835, 838], "7710": [128, 129, 443], "7711": 415, "772": [818, 834, 835, 838], "7720": 806, "7721": 414, "7725": 854, "7728": 835, "77282356": 835, "773": [834, 835, 838], "7738": 823, "7739": 835, "774": [834, 835, 836, 838], "7743": 854, "775": [834, 835, 836, 838], "7752": 458, "77548271": 835, "7755": 835, "776": [818, 819, 834, 835, 836], "776002616178397": 689, "7762": 458, "7766": 458, "777": [834, 835, 836, 838], "7773": 410, "7774": 395, "778": [135, 834, 835, 836], "77800": 821, "7782": 834, "7787": 426, "779": [834, 835, 836], "77it": 820, "78": [829, 834, 835, 840, 858, 865], "780": [818, 834, 835, 836], "7801": 834, "7806": 823, "781": [818, 821, 834, 835, 836], "78100": 821, "7811": 854, "7819": 689, "7819383771535038": 689, "782": [834, 835, 836], "7821": 854, "7827": 806, "783": [834, 835, 836], "784": [14, 818, 834, 835, 836], "7845": 834, "7846": 458, "7849": 442, "785": [834, 835], "7854": 854, "78568545": 834, "7857": 834, "7859": 820, "786": [818, 834, 835], "7860": 853, "7861": 820, "7863421810531344": 689, "7865": 406, "787": [834, 835], "7872": 834, "78747142": 834, "7875": 858, "788": [151, 818, 834, 835], "78804": 171, "7884": 820, "7889": 835, "789": [834, 835], "7890": 853, "7891": 689, "7891429392727503": 689, "7893727601272978": 689, "7894": 458, "7896": 834, "79": [458, 824, 829, 834, 835, 858, 865], "790": [818, 834, 835], "7900": 834, "7901988878812207": 689, "7902": 689, "7905": 415, "791": [818, 834, 835], "792": [834, 835], "7923": 853, "7924": 440, "7925": 854, "7929": 854, "793": [153, 834, 835], "79309867": 834, "7938": 829, "794": [14, 834, 835], "7946": 414, "7949": [435, 436, 437, 438, 439, 440, 441, 442, 443], "795": [818, 834, 835], "7953": 854, "796": [834, 835], "7960": 853, "797": [834, 835], "7971": 854, "7973": 440, "7974": 834, "79744701": 834, "798": [159, 834, 835], "799": [834, 835], "7991": 854, "7993": 414, "7997": [645, 646], "7998": 834, "7_transform": [826, 865, 867], "7g": [722, 806], "7\u548c11": 757, "7\u884c": 739, "7\ubd80\ud130": 801, "7\uc7a5": 791, "8": [4, 6, 9, 10, 14, 20, 130, 136, 139, 140, 142, 152, 153, 172, 184, 189, 190, 198, 207, 245, 246, 293, 298, 299, 301, 302, 303, 308, 317, 327, 335, 339, 340, 341, 344, 394, 395, 396, 402, 405, 413, 444, 446, 447, 449, 450, 451, 452, 456, 458, 475, 476, 556, 558, 564, 622, 640, 642, 654, 663, 685, 701, 702, 704, 706, 712, 745, 748, 757, 786, 789, 799, 817, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 837, 838, 839, 840, 849, 854, 855, 858, 861, 864, 865, 870], "80": [142, 143, 161, 190, 193, 458, 818, 820, 829, 834, 835, 836, 838, 839, 858, 865, 870], "800": [834, 835], "8002": 853, "8006": 854, "801": [834, 835], "802": [133, 558, 826, 834, 835, 857], "8020": 823, "803": [834, 835, 838], "8030": 440, "804": [14, 834, 835], "8043": [439, 852], "805": [151, 163, 834, 835], "8051": 853, "8058": 414, "8059": 854, "806": [834, 835], "8065": 427, "8068": 421, "807": [819, 834, 835], "8076": 834, "808": [834, 835], "8080": 21, "8084": 854, "8086": 458, "80877576": 834, "8088": 834, "809": [834, 835], "8090": 661, "809016994374948": 343, "8094": 823, "8096": 835, "81": [151, 817, 824, 834, 835, 855, 858, 865], "810": [834, 835], "8103": 834, "811": [834, 835], "8110": 853, "8111": 436, "8113": 435, "811333": 25, "8117650553546695": 689, "812": [558, 834, 835, 836], "8127": 835, "813": [818, 834, 835], "8132": 426, "8134": 834, "8135": 408, "8137": [435, 436, 437, 438, 439, 440, 441, 442, 443], "814": [834, 835], "8146": 426, "8149": 689, "8149104951283953": 689, "815": [834, 835], "8157": 854, "8158": 858, "8159": 835, "81593141": 835, "816": [834, 835], "817": [834, 835], "8178": 853, "818": [161, 834, 835], "8180": 834, "8185": 834, "81853434": 834, "8187": 823, "8189658": 782, "819": [194, 834, 835], "8199": 438, "81ea7a4": 829, "82": [172, 834, 835, 855, 858, 865], "820": [834, 835], "8208": 423, "821": [161, 834, 835], "821187": 841, "8219": 823, "822": [818, 834, 835], "823": [14, 834, 835], "8235": 415, "824": [834, 835], "8245": 414, "825": [826, 834, 835, 857], "8250": 820, "8258": 853, "82591": 831, "826": [834, 835], "8262": 410, "8265": 834, "827": [834, 835], "828": [834, 835], "82849555": 834, "8285": 834, "8287": 426, "829": [14, 834, 835], "8294": 823, "82it": 829, "83": [195, 824, 834, 835, 855, 858, 865], "830": [834, 835], "8307": [645, 646], "831": [178, 179, 181, 834, 835], "8317": 834, "832": [834, 835], "8323": 406, "8325": 426, "8326": 409, "8326121496142408": 689, "833": [834, 835], "8336": 835, "83376683": 834, "8338": 834, "834": [819, 834, 835], "8348": 853, "835": [834, 835], "836": [834, 835], "837": [834, 835], "8371": 427, "8377": [435, 436, 437, 438, 439, 440, 441, 442, 443], "838": [834, 835], "8380h": 844, "8382": 853, "8387": 439, "839": [834, 835], "84": [195, 834, 835, 858, 865], "840": [834, 835], "8400": 608, "8407": 853, "841": [834, 835], "842": [153, 834, 835], "843": [834, 835], "8436": 853, "8437": 426, "844": [834, 835], "8442": 835, "845": [834, 835], "8450": 853, "8451870383322376": 689, "8453123358491914": 689, "8459": 834, "846": [834, 835], "8462": 858, "847": [194, 834, 835], "8470": 440, "8473": 853, "8474": 835, "8475": 858, "8478810655406659": 689, "848": [834, 835], "8480": 834, "8484": 835, "8487": 408, "8489": [645, 646], "849": [834, 835], "8494": 834, "8494919263589972": 689, "8495": 689, "849983324532477": 689, "85": [818, 834, 835, 836, 838, 839, 858, 865], "850": [834, 835], "851": [834, 835], "8514": 834, "85142303": 834, "8515": 426, "8517": 853, "8517481637878754": 839, "852": [834, 835], "8521": [435, 436, 437, 438, 439, 440, 441, 442, 443], "8524": 834, "8527": 835, "853": [834, 835], "8536": 390, "854": [834, 835], "8544": 184, "8547": 834, "8549": 458, "855": [834, 835], "8556": 829, "856": [834, 835], "8563": 853, "857": [834, 835], "8572": 853, "858": [834, 835], "8582": 406, "8586722047523594": 689, "859": [819, 834, 835], "8597": 458, "86": [834, 835, 858, 865], "860": [14, 834, 835], "861": [834, 835], "8613": 689, "8613368738351794": 689, "862": [834, 835], "8622": 834, "863": [834, 835], "8634": [401, 407], "8637": 853, "864": [834, 835], "8643238446466464": 689, "8648": 458, "865": [834, 835], "8654": 420, "86573472329756": 689, "8658": 837, "866": [834, 835], "8667": 442, "867": [834, 835], "8674": 406, "8679": 409, "868": [834, 835], "8681": 858, "869": [834, 835], "8693": [835, 853], "8695": 823, "87": [155, 187, 834, 835, 858, 865], "870": [826, 834, 835, 843], "871": [834, 835], "8710": 219, "8714": 853, "8715767748481147": 689, "872": [834, 835], "8726": 439, "873": [834, 835, 838], "8738": 828, "8739": 828, "874": [834, 835], "8742": 828, "8743": 828, "8744": 828, "8747e": 834, "875": [834, 835], "8753101998792645": 689, "8757520744192612": 689, "876": [834, 835], "8763": 834, "8764": 410, "8766": 834, "877": [834, 835], "8778998699783784": 689, "878": [14, 173, 818, 834, 835], "8788": 829, "8789e": 834, "879": [834, 835], "87it": 829, "88": [168, 186, 823, 824, 834, 835, 858, 865], "880": [819, 834, 835], "8800": 835, "8802": 853, "8805": 823, "881": [145, 834, 835], "8811": 834, "8813": 689, "8813472954005022": 689, "881680": 133, "882": [834, 835], "8820e": 834, "8825": 426, "883": [834, 835], "8834": 823, "884": [834, 835], "8843": 410, "8847": 853, "885": [834, 835], "8851294998284638": 689, "8852": 829, "8854": 440, "8857": 835, "886": [834, 835], "88651": [25, 176], "8869": 439, "887": [834, 835], "888": [834, 835], "8880": 823, "8881": 834, "889": [834, 835], "89": [145, 160, 168, 458, 829, 834, 835, 858, 865], "890": [834, 835], "8900": 853, "8901": 858, "8903": 852, "891": [834, 835], "8914": 823, "892": [181, 834, 835], "8920": [458, 829], "8921": 855, "8922": 427, "893": [834, 835, 836], "8938": [435, 436, 437, 438, 439, 440, 441, 442, 443], "894": [151, 834, 835], "8942": 855, "8943": 829, "8945": [435, 436, 437, 438, 439, 440, 441, 442, 443], "8948": [435, 436, 437, 438, 439, 440, 441, 442, 443], "895": [834, 835], "8954": [645, 646], "896": [834, 835, 836], "8962": 855, "8964": 689, "8964389655603473": 689, "897": [14, 834, 835], "8975": 689, "8975240205792763": 689, "898": [819, 834, 835], "8982": 855, "899": [160, 818, 834, 835], "8991": 823, "8g": [722, 806], "8\u548c": 757, "8\u548c11": 757, "8\uac1c\uc758": [782, 786], "8\uacfc": 787, "8\ubc88\uc774": 799, "8\uc5d0": 799, "8\uc758": 799, "8\uc7a5": 791, "9": [4, 9, 10, 20, 26, 138, 148, 163, 195, 246, 293, 297, 298, 299, 300, 301, 302, 317, 335, 339, 340, 342, 406, 426, 458, 476, 556, 617, 618, 640, 642, 663, 701, 702, 711, 712, 722, 745, 746, 755, 757, 786, 787, 797, 799, 817, 819, 821, 823, 824, 828, 829, 831, 834, 835, 837, 838, 839, 840, 844, 854, 858, 861, 865], "90": [458, 818, 834, 835, 836, 838, 839, 858, 865], "900": [14, 618, 834, 835], "9000": 865, "9002": [835, 855], "9009": 853, "901": [828, 834, 835], "9011": [426, 835], "9012": 835, "9016": [401, 407], "902": [14, 834, 835], "9021": 855, "9023": 834, "9027": [399, 834], "9028": [435, 436, 437, 438, 439, 440, 441, 442, 443], "903": [834, 835, 838], "9030": [435, 436, 437, 438, 439, 440, 441, 442, 443], "9036": 834, "9037": 823, "9038": 853, "904": [828, 834, 835, 838], "9041": 855, "9049": 834, "905": [834, 835], "906": [834, 835], "9061": 855, "907": [834, 835], "9072": 823, "908": [834, 835], "9080": 855, "9081": 440, "9089": 418, "909": [834, 835], "9091": 410, "9098": 835, "9099": 855, "91": [834, 835, 858, 865], "910": [834, 835], "9105": [608, 645, 646], "9108": 458, "9109": 835, "91091426": 835, "911": [834, 835], "91149488": 835, "9115": 835, "9118": 855, "912": [834, 835], "9128": 853, "913": [834, 835], "9137": [435, 436, 437, 438, 439, 440, 441, 442, 443, 855], "9137336384979067": 689, "914": [819, 834, 835], "9140": [645, 646], "915": [834, 835], "9156": [458, 855], "916": [834, 835], "9166": 427, "9167": 9, "9168191778828504": 689, "917": [834, 835], "9175": 855, "918": [834, 835], "919": [834, 835, 838], "9190": 823, "9194": 855, "92": [834, 835, 858, 861, 864, 865], "920": [834, 835], "9208": 835, "92080438": 835, "921": [818, 834, 835], "9212": 855, "9216977": 835, "9217": 835, "922": [834, 835], "9223": 834, "9226": 394, "9228": [25, 150], "923": [834, 835], "9230": 440, "9231": 855, "9232": 823, "924": [152, 834, 835], "9241": 414, "9249": [834, 855], "925": [834, 835], "926": [819, 834, 835], "9260": 853, "9261": 837, "9268": [390, 855], "927": [834, 835], "9273": 422, "9275": 834, "9276": 837, "928": [14, 834, 835], "9280": [645, 646], "9284": 853, "9286": 855, "9288e": 342, "929": [834, 835], "9294": 835, "9297": 422, "93": [25, 824, 834, 835, 858, 861, 865], "930": [834, 835], "9302": 394, "9304": [855, 858], "9307": 806, "931": [834, 835], "9310e": 834, "9315": 414, "932": [834, 835], "9323": 855, "933": [834, 835], "934": [834, 835], "9341": 855, "9343": 422, "935": [834, 835], "9359": 855, "936": [834, 835], "9364": 835, "936706701616337": 689, "9368": [128, 129], "937": [819, 834, 835], "9370": 834, "93701619": 834, "9370522452510665": 689, "9377": [834, 855], "9379": 852, "938": [834, 835], "93816437": 835, "9382": 835, "939": [834, 835], "9391": 835, "9395": 855, "9397636966928355": 689, "94": [834, 835, 858, 865], "940": [834, 835], "9404": 806, "941": [834, 835], "9413": [853, 855], "9418796835016118": 689, "9419": 689, "942": [834, 835], "9422093637539785": 689, "9427": 823, "943": [173, 834, 835], "9430": 458, "9431": 855, "944": [161, 834, 835], "9441": 422, "945": [834, 835], "9450": [835, 855], "94500187": 835, "946": [819, 824, 834, 835, 836], "946464": 835, "9465": 835, "9468": 855, "947": [834, 835], "9476": 834, "948": [834, 835, 838], "94806": 144, "949": [834, 835], "9490": 443, "949566683": 854, "95": [25, 818, 834, 835, 836, 838, 839, 858, 865], "950": [834, 835, 838], "9500": 853, "951": [158, 834, 835], "9511783938523962": 689, "9512": 689, "95165061": 834, "9517": 834, "952": [14, 834, 835], "953": [834, 835], "9539": [168, 186], "954": [163, 194, 818, 834, 835], "955": [834, 835], "956": [834, 835], "9560": 858, "957": [834, 835], "9571": 853, "9572": 409, "9573": 835, "958": [161, 834, 835], "9582": 823, "959": [834, 835], "9599": [408, 853], "96": [824, 834, 835, 858, 865], "960": [834, 835], "9600": 173, "9609": 443, "961": [834, 835], "9611e": 834, "9613": 853, "962": [152, 826, 834, 835, 857], "9624": 834, "96240851": 834, "9626": [834, 835], "963": [14, 834, 835], "9634": 390, "9637": [458, 823], "964": [834, 835], "9643": 853, "9648": 837, "965": [181, 834, 835], "966": [14, 834, 835], "966043": [696, 697], "9667": 837, "967": [834, 835], "968": [834, 835], "969": [834, 835], "9698": 393, "97": [834, 835, 858, 865], "970": [14, 834, 835], "971": [834, 835], "9714": [619, 853], "972": [558, 834, 835], "9720": 823, "9722": 853, "973": [14, 834, 835, 855], "974": [697, 834, 835], "97467462": 834, "9747": 834, "975": [834, 835, 855], "976": [834, 835], "9761": 823, "977": [14, 834, 835], "9774471538377553": 689, "978": [834, 835], "9784264442230887": 689, "979": [834, 835], "9794634290792008": 689, "98": [25, 163, 698, 742, 783, 824, 834, 835, 858, 865], "980": [834, 835], "981": [834, 835], "982": [834, 835], "9820": [600, 620], "983": [826, 834, 835, 867], "9830": 25, "984": [146, 834, 835], "9840": [440, 853], "9848072295736628": 689, "985": [14, 834, 835], "986": [834, 835], "9867": 835, "9868": 404, "987": [834, 835], "988": [834, 835], "989": [834, 835], "9890": 835, "9895": 852, "99": [834, 835, 858, 865], "990": [834, 835], "9900": 835, "991": [834, 835], "9915": 835, "991848": 25, "992": [834, 835], "9927": 423, "993": [834, 835], "994": [834, 835], "9944e": 834, "9949": 406, "995": [14, 834, 835], "9952376085297715": 689, "9953e": 834, "996": [818, 834, 835], "99610667": 834, "9967": 823, "997": [834, 835], "9971749359397111": 689, "9972": 440, "998": [834, 835], "9982": 835, "9986": 394, "999": [4, 10, 14, 834, 835], "9990": [435, 436, 437, 438, 439, 440, 441, 442, 443], "9991": 835, "9993": 834, "9995315": 834, "9_gat": [826, 857], "9\uc5d0\uc11c": 787, "A": [4, 6, 7, 12, 14, 20, 21, 22, 26, 27, 28, 31, 34, 35, 39, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 71, 75, 79, 82, 87, 88, 93, 94, 95, 96, 100, 105, 109, 110, 118, 119, 121, 127, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 203, 205, 206, 207, 220, 230, 232, 236, 239, 241, 242, 245, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 313, 315, 317, 318, 320, 321, 325, 329, 337, 338, 343, 344, 352, 353, 354, 384, 385, 386, 387, 388, 389, 390, 392, 393, 395, 398, 399, 401, 402, 404, 405, 406, 407, 408, 409, 412, 413, 415, 417, 419, 420, 422, 423, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 439, 440, 441, 444, 446, 447, 457, 458, 475, 476, 477, 499, 541, 558, 560, 561, 562, 563, 564, 565, 566, 574, 575, 577, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 607, 608, 609, 611, 612, 613, 614, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 633, 635, 636, 637, 638, 639, 640, 641, 642, 644, 645, 646, 650, 653, 658, 659, 664, 668, 683, 689, 691, 694, 695, 697, 698, 700, 702, 703, 705, 709, 721, 729, 730, 731, 788, 790, 818, 819, 820, 821, 823, 824, 827, 829, 832, 836, 838, 839, 841, 848, 852, 854, 855, 858, 865, 866, 868, 869], "AND": 21, "And": [168, 173, 186, 240, 297, 320, 321, 332, 333, 406, 434, 563, 564, 565, 823, 833, 834], "As": [14, 20, 22, 197, 231, 240, 563, 564, 565, 566, 635, 641, 691, 694, 696, 697, 720, 726, 829, 839, 840, 845, 848, 849, 854, 855, 865], "At": [231, 689, 724, 854, 861], "Be": [820, 855], "Being": [4, 10, 730], "But": [89, 293, 301, 720, 817, 821, 861], "By": [4, 31, 32, 41, 53, 54, 70, 122, 125, 126, 131, 200, 201, 207, 210, 220, 232, 239, 240, 249, 250, 293, 334, 353, 354, 357, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 548, 549, 641, 689, 694, 695, 704, 705, 716, 722, 730, 790, 817, 827, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 848, 861, 864, 865], "For": [4, 5, 9, 10, 20, 21, 22, 24, 43, 46, 51, 52, 55, 59, 60, 61, 66, 72, 74, 87, 88, 89, 90, 103, 107, 113, 114, 115, 116, 118, 119, 122, 128, 129, 165, 179, 195, 209, 214, 215, 216, 217, 220, 221, 226, 227, 234, 235, 240, 241, 242, 290, 294, 296, 297, 298, 305, 308, 309, 315, 316, 317, 318, 319, 344, 357, 383, 385, 388, 391, 438, 444, 447, 556, 558, 563, 564, 565, 566, 567, 572, 573, 574, 575, 613, 614, 634, 635, 640, 641, 643, 649, 650, 651, 657, 662, 666, 675, 683, 685, 689, 691, 692, 693, 694, 695, 696, 697, 700, 702, 704, 705, 708, 709, 711, 712, 713, 715, 718, 720, 721, 724, 725, 726, 728, 729, 730, 731, 732, 781, 790, 816, 817, 819, 820, 821, 823, 828, 830, 831, 833, 834, 835, 837, 838, 839, 840, 841, 845, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870], "If": [4, 6, 21, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 43, 44, 45, 46, 48, 51, 54, 56, 57, 58, 60, 64, 65, 70, 71, 73, 74, 79, 80, 81, 82, 87, 89, 90, 93, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 144, 145, 148, 156, 165, 168, 170, 177, 178, 179, 183, 184, 207, 210, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 246, 248, 249, 250, 287, 291, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 315, 316, 317, 318, 320, 321, 325, 328, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 346, 352, 353, 357, 383, 385, 386, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 431, 432, 434, 435, 437, 441, 442, 444, 445, 447, 448, 451, 455, 459, 476, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 545, 546, 551, 553, 554, 555, 556, 557, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 580, 583, 585, 587, 590, 591, 594, 597, 598, 599, 600, 601, 603, 610, 611, 612, 613, 614, 615, 616, 617, 620, 622, 626, 633, 634, 635, 640, 641, 643, 645, 646, 647, 649, 650, 651, 658, 659, 661, 662, 664, 667, 669, 681, 682, 688, 689, 694, 696, 697, 701, 704, 705, 708, 711, 712, 713, 714, 715, 717, 718, 719, 722, 727, 728, 729, 732, 789, 817, 818, 819, 820, 821, 823, 825, 828, 829, 831, 833, 837, 839, 840, 841, 845, 848, 861], "In": [4, 6, 8, 14, 21, 22, 27, 41, 51, 70, 140, 150, 181, 183, 186, 210, 214, 221, 231, 232, 235, 239, 240, 245, 246, 247, 297, 300, 303, 308, 310, 315, 316, 317, 318, 320, 335, 339, 340, 343, 352, 383, 387, 391, 399, 400, 416, 455, 458, 475, 476, 477, 540, 562, 565, 569, 574, 575, 608, 616, 619, 622, 640, 643, 683, 685, 689, 691, 693, 694, 695, 697, 698, 700, 701, 704, 705, 707, 708, 713, 716, 718, 719, 720, 721, 723, 724, 725, 727, 728, 729, 730, 731, 732, 817, 818, 819, 821, 823, 827, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 844, 845, 848, 849, 853, 854, 855, 856, 858, 861, 864, 865, 868, 870, 871], "It": [4, 6, 7, 8, 9, 20, 21, 22, 34, 35, 48, 60, 73, 87, 91, 92, 93, 94, 100, 113, 120, 125, 126, 128, 129, 130, 131, 132, 138, 139, 141, 142, 143, 158, 162, 178, 179, 189, 190, 191, 197, 198, 205, 208, 210, 211, 212, 217, 219, 220, 231, 235, 240, 241, 242, 247, 249, 250, 287, 293, 294, 295, 297, 298, 303, 305, 308, 310, 315, 316, 317, 319, 321, 333, 334, 339, 340, 341, 352, 384, 386, 387, 392, 394, 395, 396, 397, 404, 409, 411, 416, 420, 426, 427, 428, 429, 430, 431, 432, 433, 434, 441, 446, 452, 453, 454, 455, 456, 459, 478, 479, 480, 481, 482, 484, 485, 486, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 547, 548, 549, 558, 559, 565, 566, 567, 569, 570, 640, 668, 685, 687, 689, 691, 694, 695, 696, 697, 700, 705, 708, 709, 720, 721, 722, 816, 819, 827, 829, 831, 833, 839, 840, 841, 848, 852, 853, 855, 856, 858, 861, 862, 864, 865, 868, 870, 871], "Its": [53, 54, 142, 240, 416, 428, 429, 430, 431, 503, 565, 697, 861], "NOT": [5, 21, 22, 230, 415, 852, 853, 854, 855, 858, 861, 864, 865], "No": [388, 725, 829, 855, 870, 871], "Not": 845, "ON": 817, "Of": 707, "On": [22, 116, 429, 431, 707, 714, 722], "One": [20, 21, 43, 44, 46, 51, 73, 74, 77, 103, 104, 122, 130, 221, 229, 230, 234, 293, 297, 393, 451, 563, 641, 681, 687, 689, 691, 693, 694, 701, 703, 704, 705, 708, 714, 715, 716, 725, 728, 729, 730, 732, 821, 836, 840, 855, 858], "Or": [216, 562, 714, 719, 817], "Such": [720, 728, 731, 834, 835, 840, 864], "That": [4, 22, 26, 232, 239, 241, 303, 308, 315, 316, 694, 854, 861, 870], "The": [0, 2, 3, 4, 6, 8, 9, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 383, 384, 385, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 451, 452, 453, 454, 455, 456, 457, 458, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 580, 583, 584, 585, 587, 590, 591, 593, 594, 596, 597, 598, 599, 600, 601, 603, 604, 605, 608, 612, 613, 614, 615, 616, 620, 626, 627, 628, 630, 634, 635, 636, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 656, 657, 658, 659, 660, 662, 664, 665, 667, 668, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 701, 702, 704, 705, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 775, 790, 800, 801, 805, 817, 818, 819, 820, 821, 822, 823, 824, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 848, 849, 852, 854, 855, 859, 864, 865, 866, 868, 870, 871], "Then": [6, 113, 130, 174, 240, 341, 387, 391, 432, 434, 479, 480, 481, 482, 484, 485, 486, 487, 558, 569, 696, 719, 728, 848, 849, 854, 865], "There": [1, 22, 62, 63, 116, 126, 147, 217, 230, 232, 239, 292, 391, 457, 622, 689, 691, 695, 697, 701, 731, 823, 838, 855, 858, 861, 865], "These": [150, 162, 245, 475, 702, 719, 726, 817, 838, 866, 868], "To": [1, 4, 5, 14, 21, 22, 51, 68, 77, 89, 116, 122, 210, 213, 214, 215, 216, 219, 220, 240, 245, 313, 353, 354, 387, 415, 426, 427, 475, 548, 549, 562, 563, 564, 565, 643, 687, 689, 694, 695, 697, 704, 705, 713, 715, 719, 721, 726, 728, 731, 732, 790, 817, 819, 823, 824, 828, 829, 834, 835, 836, 845, 848, 853, 854, 855, 858, 861, 865, 870, 871], "Will": [200, 213], "With": [77, 209, 213, 388, 410, 561, 563, 564, 565, 642, 681, 712, 729, 730, 817, 836, 844, 852, 854, 861], "_": [0, 21, 245, 298, 300, 317, 405, 408, 409, 413, 417, 423, 426, 427, 429, 438, 446, 451, 475, 649, 675, 685, 696, 717, 718, 731, 732, 757, 760, 761, 771, 772, 799, 803, 804, 814, 815, 819, 820, 836, 837, 838, 839, 840, 841, 844, 845, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "_1": [397, 426, 427, 649], "_2": [452, 649], "_4": [757, 799], "_5": [757, 799, 830], "_7": [757, 799], "_8": [757, 799], "__": [137, 171, 180, 182, 188, 714, 721, 852, 853], "__all__": [4, 34, 35, 53, 54, 60, 87, 122, 357], "__call__": [653, 689, 760, 803], "__forward__": 854, "__getitem__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 687, 689, 691, 692, 734, 737, 738, 774, 777, 778, 841], "__init__": [21, 208, 218, 300, 313, 416, 426, 427, 428, 429, 430, 431, 458, 558, 687, 691, 695, 713, 714, 716, 717, 718, 719, 721, 722, 724, 726, 728, 730, 731, 732, 734, 737, 757, 758, 759, 760, 761, 762, 764, 766, 768, 770, 771, 772, 774, 777, 799, 800, 802, 803, 804, 805, 806, 808, 810, 812, 813, 814, 815, 818, 819, 820, 821, 823, 828, 829, 831, 836, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "__len__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 687, 691, 734, 737, 757, 774, 777, 799, 841], "__main__": [829, 861, 870, 871], "__name__": [829, 861, 870, 871], "__path__": 21, "__version__": [818, 819, 820, 821, 823, 828, 829, 831, 834, 835], "__\u4e2d\u7684\u505a\u6cd5": 769, "_aggre_typ": [724, 725, 764, 765, 808, 809], "_basenegativesampl": [226, 227], "_block": 305, "_collate_fn": [690, 736, 776], "_continu": 865, "_dgl_graph": [692, 738, 778], "_dist_train": 564, "_dst": 127, "_e": [4, 118, 125, 126, 232, 240, 401, 404, 412, 415, 418, 421, 635], "_etype_str_to_tupl": 322, "_etype_tuple_to_str": 323, "_extract_gz": [688, 735, 775], "_ffi": 22, "_ft": [708, 752, 793], "_g": [691, 737, 777], "_gener": 0, "_get_dgl_url": [691, 737, 777], "_get_next": 861, "_get_previ": 861, "_i": [389, 405, 649, 668, 708, 752, 793, 823, 858, 865], "_id": [168, 186, 219, 246, 335, 339, 340, 476, 540, 556, 640, 641, 696, 697, 837], "_in_dst_feat": [721, 724, 764, 808], "_in_src_feat": [721, 724, 764, 808], "_info": [692, 738, 778], "_ini_api": 22, "_init_api": 22, "_initialize_edge_repr": 861, "_initialize_node_repr": 861, "_j": [405, 708, 752, 793, 823, 855], "_k": [345, 435, 436, 437, 442], "_l": 858, "_label": [691, 737, 777], "_load_graph": [691, 737, 777], "_mean": [852, 855], "_method": [852, 855], "_n": [4, 239, 240, 401, 404, 412, 418, 421], "_name": [691, 737, 777], "_num_task": [691, 737, 777], "_out_feat": [721, 724, 764, 808], "_p": [453, 454], "_preprocess_featur": [691, 737, 777], "_sample_with_etyp": 717, "_sha1_str": [688, 691, 735, 737, 775, 777], "_src": 127, "_static": [836, 837, 838, 839, 840, 841], "_t": 438, "_tag": [574, 575], "_tag_offset": [565, 574, 575], "_type": [640, 641], "_type_kei": 22, "_u": [4, 125, 126, 415, 731, 757, 771, 799, 814, 852], "_url": [691, 737, 777], "_v": [125, 126, 415, 731, 757, 771, 799, 814, 823], "a1": [26, 823], "a2": [26, 823], "a_": [357, 388, 403, 414, 420, 423, 459, 708, 752, 793, 853, 854, 855, 861], "a_0": [178, 179], "a_1": [819, 861], "a_1x": 819, "a_2x": 819, "a_div": 721, "a_dst": 127, "a_hat": [818, 819, 823], "a_i": 819, "a_new": 823, "a_r": 819, "a_rx": 819, "a_src": 127, "a_t": 861, "a_tild": 819, "a_tre": 858, "ab": [118, 119, 127, 131, 134, 137, 146, 169, 171, 180, 182, 188, 352, 431, 558, 824, 844], "ab1": 26, "ab2": 26, "abil": 855, "abl": [697, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 841, 844], "about": [1, 20, 21, 22, 158, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 391, 475, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 635, 682, 687, 694, 697, 699, 701, 702, 717, 730, 819, 840, 853, 854, 855, 858, 865], "abov": [5, 22, 130, 142, 178, 179, 210, 220, 246, 251, 252, 263, 264, 265, 266, 335, 339, 340, 357, 390, 391, 397, 406, 408, 409, 414, 415, 422, 423, 452, 456, 476, 540, 574, 575, 635, 685, 688, 691, 702, 705, 707, 708, 709, 713, 717, 719, 725, 728, 730, 731, 732, 821, 823, 829, 830, 831, 848, 849, 852, 853, 855, 861, 864, 871], "absent": 319, "absolut": [201, 202, 697, 816], "abstract": [156, 292, 310, 314, 652, 687, 699, 713, 823], "abund": 730, "ac": 144, "academ": [151, 152, 159, 289, 697], "academi": 853, "acc": [732, 772, 815, 818, 819, 821, 829, 831, 836, 838, 852, 854, 858, 870, 871], "acc_perm1": 854, "acc_perm2": 854, "acceler": [394, 395, 396, 455, 697, 819, 845, 858, 865], "accept": [21, 22, 209, 309, 355, 395, 649, 703, 719, 788, 831, 837, 848], "access": [4, 22, 89, 108, 122, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 214, 288, 291, 292, 294, 296, 298, 303, 317, 318, 353, 356, 541, 691, 693, 697, 698, 702, 708, 714, 715, 719, 829, 871], "accompani": 343, "accomplish": 864, "accord": [9, 39, 52, 78, 91, 92, 139, 140, 141, 209, 214, 216, 220, 226, 227, 232, 239, 240, 243, 297, 341, 388, 397, 444, 451, 499, 502, 556, 558, 565, 567, 569, 645, 646, 681, 697, 717, 724, 725, 809, 820, 855, 865], "accordingli": [95, 96, 125, 249, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 556, 689, 696, 828, 831], "account": [120, 848], "accumul": [577, 865], "accur": 836, "accuraci": [21, 732, 815, 818, 819, 821, 824, 829, 831, 836, 838, 840, 848, 853, 854, 855, 864, 865, 871], "accuracy_scor": [831, 848], "achiev": [21, 22, 41, 387, 389, 399, 401, 404, 405, 407, 408, 409, 412, 415, 422, 709, 714, 720, 729, 731, 732, 820, 854, 864], "acl": 858, "acm": [134, 173], "acquaint": 816, "across": [22, 73, 113, 120, 128, 129, 130, 217, 245, 305, 416, 455, 456, 475, 641, 693, 694, 705, 725, 790, 845, 861, 870], "act": [235, 685, 865], "act_loss": 865, "act_loss_weight": 865, "action": [166, 429, 431], "action_step": 861, "activ": [151, 152, 180, 393, 394, 398, 399, 400, 405, 407, 408, 409, 410, 413, 415, 418, 420, 421, 422, 423, 446, 447, 633, 640, 669, 685, 722, 724, 725, 730, 764, 765, 806, 808, 809, 813, 818, 819, 852, 853, 855, 861, 864, 865], "actor": [134, 166], "actual": [4, 5, 22, 210, 221, 355, 559, 563, 564, 565, 725], "ad": [4, 10, 27, 28, 114, 115, 116, 142, 143, 150, 186, 189, 190, 289, 320, 351, 395, 420, 422, 457, 458, 651, 668, 689, 697, 704, 818, 833, 837, 844, 859, 861, 865, 868], "adagrad": [4, 10, 694, 780, 858], "adam": [4, 10, 426, 427, 428, 429, 430, 431, 693, 694, 714, 717, 719, 721, 722, 728, 730, 731, 732, 739, 740, 757, 758, 760, 762, 768, 770, 771, 772, 779, 780, 799, 800, 803, 805, 806, 812, 813, 814, 815, 818, 819, 820, 821, 828, 829, 831, 836, 838, 839, 840, 848, 849, 852, 853, 854, 855, 865, 870, 871], "adapt": [13, 165, 196, 409, 423, 427, 428, 429, 716, 864], "adavantag": 855, "add": [9, 21, 22, 27, 28, 114, 115, 116, 117, 125, 132, 133, 135, 136, 140, 142, 143, 144, 150, 151, 152, 153, 154, 157, 158, 165, 170, 176, 189, 190, 191, 192, 198, 249, 253, 254, 267, 268, 277, 278, 297, 315, 316, 342, 389, 393, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 444, 447, 489, 490, 500, 501, 504, 505, 506, 507, 508, 509, 530, 531, 622, 633, 648, 649, 650, 651, 661, 669, 681, 689, 691, 694, 708, 709, 713, 717, 752, 793, 821, 823, 833, 837, 841, 844, 845, 848, 852, 853, 855, 858, 865], "add_edg": [28, 95, 96, 115, 125, 249, 351, 458, 553, 554, 852, 861], "add_edge_ag": 861, "add_edge_attribut": 297, "add_edge_log_p": 861, "add_edge_or_not": 861, "add_edges_from": 861, "add_nod": [27, 95, 96, 114, 351, 458, 553, 554, 861], "add_node_ag": 861, "add_node_and_upd": 861, "add_node_attribut": 297, "add_node_log_p": 861, "add_nodes_from": [125, 249], "add_on": 301, "add_reverse_edg": 837, "add_self_loop": [389, 394, 396, 401, 404, 405, 406, 407, 408, 409, 412, 415, 418, 421, 422, 424, 425, 555, 806], "addbackward0": [393, 395, 398, 399, 406, 409, 412, 414, 415, 418, 420, 421], "addedg": [13, 861], "addit": [4, 8, 21, 121, 140, 148, 173, 179, 182, 229, 230, 240, 246, 247, 335, 339, 340, 357, 408, 409, 415, 416, 426, 427, 428, 429, 430, 431, 444, 445, 447, 476, 477, 540, 556, 607, 621, 683, 689, 691, 694, 697, 698, 705, 709, 713, 717, 725, 726, 729, 730, 817, 823, 848, 852, 855, 856, 861, 868], "addition": [220, 342, 560, 562, 642, 827, 865], "addmetapath": 13, "addmmbackward": [400, 410, 422, 423], "addmmbackward0": 396, "addnod": 861, "address": [210, 455, 698, 705, 715, 719, 722, 830, 848, 849, 861, 865], "addrevers": [13, 427, 428, 429, 653, 689], "addselfloop": [13, 722], "adj": [33, 118, 146, 169, 398, 399, 400, 839], "adj_extern": [574, 575], "adj_neg": 839, "adjac": [13, 30, 31, 32, 118, 119, 126, 131, 250, 287, 334, 337, 338, 344, 390, 398, 399, 400, 409, 422, 423, 457, 565, 574, 575, 649, 657, 658, 659, 664, 668, 696, 697, 729, 781, 818, 819, 820, 821, 823, 852, 854, 855], "adjust": [120, 732, 864, 865], "adopt": [428, 430, 693, 732, 836, 865], "advanc": [210, 293, 560, 562, 683, 693, 695, 697, 708, 712, 816, 845, 854, 858, 865], "advantag": [313, 697, 714, 715, 730, 819, 845, 855], "affect": 858, "affili": [697, 841], "affiliated_with": [697, 782], "affin": [391, 845, 865], "affinit": 845, "after": [4, 73, 91, 92, 93, 94, 95, 96, 100, 113, 167, 240, 291, 303, 308, 315, 316, 339, 340, 353, 354, 389, 401, 402, 404, 405, 407, 408, 409, 412, 415, 422, 424, 448, 457, 541, 553, 554, 558, 562, 574, 575, 641, 658, 659, 664, 667, 689, 691, 696, 697, 708, 720, 731, 817, 819, 829, 834, 835, 839, 844, 848, 849, 854, 858, 861, 865, 870], "afterward": [4, 426, 427, 428, 429, 430, 431, 447, 838, 844], "ag": [701, 745, 786, 841], "again": [21, 640, 641, 697, 714, 717, 848, 854, 855, 871], "against": [21, 329, 731, 732, 824], "agg": [726, 766, 810], "agg_fn": [726, 766, 810], "aggreg": [5, 9, 73, 91, 92, 93, 94, 100, 111, 113, 117, 263, 264, 265, 266, 385, 389, 391, 394, 395, 396, 397, 399, 400, 401, 404, 405, 407, 408, 409, 410, 412, 415, 417, 418, 419, 421, 422, 426, 427, 428, 430, 456, 479, 480, 481, 482, 484, 485, 486, 487, 501, 503, 505, 506, 507, 508, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 551, 552, 643, 651, 671, 707, 708, 710, 716, 718, 721, 724, 725, 726, 730, 732, 764, 765, 766, 770, 772, 796, 799, 808, 809, 810, 813, 815, 818, 820, 830, 836, 838, 840, 848, 852, 853, 854, 855], "aggregate_radiu": 854, "aggregate\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 772, "aggregate\ub418\uace0": 802, "aggregate\ub97c": 813, "aggregation\ub9cc": 804, "aggregation\uc744": [808, 810], "aggregator_typ": [396, 410, 412, 418, 421, 724, 732, 764, 772, 808, 815, 831, 870], "aggregator_type\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 772, "aggress": 824, "aggretate\ud558\ub294": 802, "agnn": 389, "agnost": [9, 21], "agre": 864, "agreement": 864, "ahead": [839, 858], "ai": [23, 818, 819, 820, 821, 823, 824, 828, 829, 831, 834, 835, 841, 861], "aifb": [132, 853], "aifbdataset": 853, "aim": [299, 852, 853, 854, 855, 858, 861, 864, 865], "aka": 708, "al": [72, 135, 136, 558, 818, 820, 830, 836, 838, 852, 858], "albert": [141, 142, 143], "algorithm": [0, 3, 4, 6, 10, 209, 240, 292, 341, 354, 424, 429, 431, 432, 434, 556, 558, 563, 569, 694, 695, 697, 712, 716, 730, 819, 848, 856, 861, 864, 865, 868, 871], "alia": [1, 4, 29, 33, 44, 49, 50, 69, 76, 83, 84, 85, 86, 97, 98, 99, 104, 106, 111, 156, 228, 576, 602, 823], "align": [5, 9, 302, 838, 839, 853, 854, 855, 858, 861, 865], "alist": [726, 766, 810], "aliv": 291, "all": [4, 5, 6, 9, 14, 20, 21, 22, 26, 30, 34, 35, 39, 41, 44, 45, 48, 51, 52, 53, 54, 56, 60, 61, 68, 70, 73, 77, 78, 79, 81, 82, 87, 88, 89, 95, 101, 102, 104, 105, 113, 117, 119, 121, 122, 126, 127, 128, 129, 130, 131, 133, 137, 143, 144, 146, 148, 156, 157, 158, 161, 164, 169, 179, 182, 184, 186, 189, 190, 191, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 226, 227, 232, 234, 239, 240, 241, 242, 243, 245, 247, 250, 289, 290, 292, 297, 304, 305, 309, 313, 318, 319, 321, 332, 333, 334, 335, 341, 346, 353, 356, 357, 387, 391, 399, 404, 405, 409, 415, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 450, 456, 457, 475, 477, 479, 481, 484, 486, 502, 505, 507, 511, 513, 519, 521, 525, 527, 540, 541, 548, 549, 553, 555, 560, 561, 562, 563, 564, 565, 566, 569, 570, 635, 641, 643, 645, 646, 651, 658, 659, 664, 667, 673, 683, 689, 691, 693, 694, 695, 696, 697, 698, 700, 703, 704, 705, 708, 710, 712, 715, 716, 718, 719, 720, 725, 727, 728, 729, 730, 731, 732, 748, 789, 790, 799, 812, 815, 816, 819, 820, 821, 822, 823, 826, 828, 829, 830, 831, 833, 834, 835, 837, 838, 839, 840, 841, 844, 848, 852, 853, 854, 855, 858, 861, 864, 870, 871], "all_acc": 854, "all_edg": [558, 563, 564, 757, 799], "all_logit": [838, 839], "all_loss": 854, "all_nodes_set": [292, 304, 309, 716], "alloc": 235, "allow": [4, 20, 22, 30, 31, 32, 34, 35, 41, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 126, 131, 146, 169, 246, 247, 249, 250, 287, 291, 334, 335, 339, 340, 385, 387, 476, 478, 503, 540, 551, 553, 555, 563, 569, 572, 574, 575, 640, 689, 694, 697, 701, 702, 705, 715, 720, 722, 824, 838, 844, 848, 856, 865, 868, 870], "allow_dupl": 651, "allow_zero_in_degre": [389, 401, 404, 405, 407, 408, 409, 412, 415, 422], "almost": [232, 239, 565, 691, 714, 717, 719, 721, 728, 829, 871], "alon": [836, 837], "along": [9, 20, 21, 48, 73, 91, 92, 93, 94, 100, 113, 165, 210, 300, 302, 303, 308, 315, 316, 328, 351, 385, 441, 449, 503, 561, 562, 563, 594, 597, 598, 599, 601, 645, 646, 649, 699, 732, 818, 819, 823, 838, 854, 856, 865, 868, 870], "alongsid": [231, 714, 816], "alp": [424, 425], "alpha": [178, 179, 390, 409, 424, 425, 446, 457, 664, 668, 855], "alpha1": [426, 427], "alpha2": [426, 427], "alpha_": [401, 405, 407, 408, 438, 855], "alpha_1": [426, 427], "alpha_2": [426, 427], "alpha_i": 456, "alreadi": [64, 71, 89, 108, 109, 117, 156, 159, 161, 162, 163, 200, 290, 297, 320, 351, 580, 583, 585, 587, 590, 591, 603, 634, 687, 688, 689, 691, 703, 719, 727, 774, 828, 829, 831, 834, 835, 838, 839, 841, 852, 865], "also": [0, 1, 2, 4, 5, 8, 14, 21, 22, 27, 28, 43, 44, 46, 70, 74, 101, 102, 103, 104, 114, 118, 119, 122, 130, 131, 144, 162, 174, 184, 214, 216, 220, 226, 227, 240, 241, 246, 247, 293, 297, 310, 320, 321, 328, 333, 334, 335, 339, 340, 357, 385, 417, 418, 420, 426, 427, 428, 430, 455, 476, 477, 540, 553, 554, 557, 559, 565, 574, 575, 581, 582, 635, 640, 642, 683, 685, 687, 690, 691, 693, 694, 695, 696, 697, 700, 701, 703, 704, 705, 708, 713, 714, 715, 717, 718, 719, 728, 730, 732, 788, 820, 823, 829, 830, 831, 832, 837, 838, 839, 840, 841, 844, 845, 848, 849, 853, 854, 855, 858, 861, 862, 864, 865, 868, 870, 871], "altern": [21, 22, 291, 295, 824, 848, 858, 864], "although": [4, 426, 427, 428, 429, 430, 431, 560, 562, 817, 819, 837, 838, 839], "alwai": [21, 101, 102, 142, 143, 183, 189, 190, 200, 201, 240, 293, 298, 346, 353, 354, 433, 547, 558, 689, 696, 701, 830, 837], "always_preserv": 130, "am": 133, "amazon": [14, 21, 25, 135, 136, 137, 161, 162, 289, 791, 845], "amazon_co_buy_comput": 140, "amazonaw": [23, 691, 737, 777], "amazoncobui": [25, 135, 136], "amazoncobuycomputerdataset": [140, 197, 198], "amazoncobuydata": [691, 737, 777], "ambigu": [48, 57, 80], "among": [4, 14, 120, 161, 305, 339, 340, 387, 693, 718, 730, 834, 835, 839, 853, 854, 856, 861, 865, 866, 868], "amount": [245, 291, 475, 696, 864], "amp": [722, 806], "amp_dtyp": 722, "amp_en": 722, "amper": [9, 708, 793], "amplif": [397, 419], "amx": 722, "an": [0, 1, 4, 6, 7, 9, 14, 20, 21, 22, 31, 32, 34, 36, 39, 44, 46, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 64, 71, 73, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 104, 107, 109, 112, 113, 116, 118, 119, 126, 128, 131, 138, 140, 147, 151, 152, 156, 162, 165, 167, 168, 172, 173, 180, 181, 182, 186, 188, 207, 209, 210, 211, 212, 217, 220, 233, 234, 235, 240, 241, 243, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292, 293, 295, 297, 300, 302, 303, 308, 309, 310, 312, 314, 315, 316, 327, 334, 335, 338, 341, 342, 343, 344, 352, 355, 357, 391, 394, 395, 396, 399, 400, 405, 407, 408, 409, 410, 413, 415, 416, 417, 420, 421, 423, 424, 425, 426, 427, 428, 430, 432, 433, 435, 441, 448, 475, 499, 502, 540, 551, 552, 556, 558, 559, 560, 561, 562, 563, 565, 569, 574, 575, 581, 582, 630, 633, 634, 635, 640, 641, 643, 645, 646, 649, 651, 652, 654, 657, 658, 659, 661, 662, 664, 669, 673, 675, 681, 683, 685, 688, 689, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 707, 708, 709, 710, 712, 713, 714, 716, 717, 718, 719, 722, 723, 724, 725, 726, 727, 729, 730, 731, 732, 735, 775, 799, 803, 810, 813, 817, 818, 820, 821, 827, 834, 835, 836, 837, 839, 840, 841, 844, 845, 848, 849, 852, 853, 855, 856, 858, 861, 865, 868, 870, 871], "analog": 855, "analogu": [183, 207, 565], "analysi": [134, 691, 858, 861], "analyz": 5, "andd": 120, "angl": [394, 405, 407, 408], "angstrom": 178, "ani": [4, 5, 20, 21, 22, 26, 70, 116, 121, 130, 131, 148, 207, 210, 214, 216, 219, 220, 231, 235, 240, 287, 293, 297, 300, 301, 313, 314, 334, 335, 338, 339, 340, 344, 352, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 385, 389, 390, 395, 403, 409, 415, 426, 427, 428, 429, 430, 431, 434, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 476, 477, 540, 557, 563, 564, 565, 566, 567, 594, 597, 598, 599, 634, 635, 637, 638, 639, 640, 641, 643, 656, 667, 683, 689, 694, 703, 705, 713, 722, 728, 730, 788, 790, 799, 819, 827, 830, 833, 834, 835, 838, 839, 848, 852, 853, 854, 855, 861, 864, 865, 870], "ani2": 864, "anim": [716, 819, 830, 854, 861, 864], "annot": [184, 858, 865], "anonym": [4, 145], "anoth": [4, 21, 48, 130, 142, 162, 179, 220, 303, 308, 315, 316, 344, 424, 558, 640, 703, 714, 721, 728, 731, 732, 819, 824, 834, 835, 837, 839, 853, 854, 855, 861], "answer": 180, "anyth": 21, "anywher": [164, 688], "apach": [23, 816, 817], "apart": 701, "api": [0, 4, 7, 8, 21, 22, 41, 56, 68, 101, 102, 231, 235, 241, 242, 292, 315, 316, 353, 565, 643, 687, 690, 691, 693, 696, 701, 702, 703, 704, 705, 707, 713, 719, 722, 725, 726, 741, 758, 762, 779, 782, 800, 805, 810, 816, 818, 819, 820, 821, 823, 824, 837, 838, 852, 854, 855, 859, 866, 868, 870], "apidata": 836, "apifunct": 838, "apigraph": 837, "apinn": [723, 732, 761, 763, 772, 807, 815, 836], "apiudf": 838, "api\u4e5f\u652f\u6301python\u7684\u53ef\u8fed\u4ee3\u7c7b\u578b": 748, "api\u4e5f\u80fd\u5904\u7406\u7279\u5f81\u6570\u636e\u548c\u56fe\u7ea7\u522b\u7684\u6807\u7b7e\u6570\u636e": 745, "api\u4ee5\u6613\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u52a0\u8f7d\u7684\u683c\u5f0f\u6784\u9020\u5212\u5206\u7ed3\u679c": 741, "api\u4ee5\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u4fe1\u606f\u65f6": 749, "api\u548c": 765, "api\u5c06": 747, "api\u5c06\u5f02\u6784\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 749, "api\u5c06\u65b0id\u5206\u914d\u7ed9\u8f93\u5165\u56fe\u7684\u8282\u70b9\u548c\u8fb9": 741, "api\u7684\u8f93\u5165": 748, "api\uac00": 782, "api\uacfc": 782, "api\ub294": [779, 780, 782, 789], "api\ub4e4": [780, 786, 787, 789, 790, 792], "api\ub4e4\uacfc": 792, "api\ub4e4\uc740": [780, 786], "api\ub4e4\uc744": [776, 780, 786, 789], "api\ub4e4\uc758": 780, "api\ub4e4\uc774": 774, "api\ub4e4\uc774\ub2e4": 780, "api\ub85c": 793, "api\ub97c": [777, 779, 780, 781, 782, 786, 788, 790, 806], "api\uc5d0": 782, "api\uc5d0\uc11c\ub294": 789, "api\uc640": 809, "api\uc740": 782, "api\uc758": 780, "appear": [36, 51, 52, 131, 219, 334, 635, 714], "append": [293, 300, 301, 313, 385, 683, 716, 717, 721, 722, 726, 766, 806, 810, 819, 820, 828, 829, 831, 838, 841, 848, 849, 852, 853, 854, 855, 861, 864, 865, 871], "appendix": [183, 303, 315], "appendix_c": 183, "appi": [389, 400, 401, 404, 405, 407, 409, 412, 415, 422], "appl": 22, "appli": [0, 1, 9, 20, 27, 28, 73, 91, 92, 93, 94, 100, 113, 116, 117, 121, 148, 220, 241, 297, 306, 351, 357, 385, 386, 388, 391, 394, 395, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 413, 415, 416, 417, 418, 420, 421, 422, 423, 426, 427, 435, 436, 437, 442, 447, 448, 449, 450, 451, 452, 456, 457, 458, 500, 501, 600, 620, 622, 651, 653, 657, 658, 659, 664, 666, 689, 705, 707, 709, 724, 725, 728, 730, 813, 820, 823, 837, 844, 852, 853, 854, 855, 858, 865], "applic": [14, 138, 220, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 438, 820, 839, 840, 858, 861], "apply_edg": [5, 9, 20, 35, 458, 672, 673, 674, 675, 676, 708, 709, 722, 728, 731, 752, 753, 758, 760, 768, 771, 793, 795, 800, 803, 806, 812, 814, 855, 865], "apply_func": [410, 411, 853], "apply_nod": [34, 865], "apply_node_func": [73, 91, 92, 93, 94, 100, 113, 542, 543, 544, 545, 546, 711, 755, 797, 858], "apply_norm": 395, "appnp": [390, 668], "appoint": 6, "appreci": 858, "approach": [131, 287, 303, 315, 334, 341, 432, 433, 434, 547, 569, 693, 697, 703, 705, 708, 709, 854, 862, 864, 868], "appropri": [120, 210, 213, 722, 865], "approv": 21, "approx": 409, "approxim": [14, 341, 390, 432, 434, 569, 668], "apt": [817, 848], "ar": [1, 4, 5, 6, 9, 10, 11, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 78, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 135, 136, 137, 140, 142, 143, 145, 147, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 163, 165, 171, 173, 174, 178, 179, 180, 182, 186, 187, 188, 191, 192, 193, 195, 197, 210, 213, 214, 216, 217, 219, 220, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 287, 288, 289, 292, 293, 294, 295, 296, 297, 298, 299, 300, 305, 309, 310, 313, 314, 317, 318, 319, 321, 332, 333, 334, 335, 338, 339, 340, 341, 345, 351, 352, 353, 357, 383, 385, 387, 388, 389, 391, 397, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 432, 433, 434, 444, 446, 447, 451, 455, 457, 458, 475, 476, 477, 478, 500, 503, 540, 541, 543, 547, 551, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 574, 575, 577, 603, 611, 613, 614, 616, 617, 622, 626, 634, 635, 637, 638, 639, 641, 643, 645, 646, 650, 651, 657, 667, 681, 683, 687, 689, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 749, 757, 774, 778, 789, 790, 796, 799, 800, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 848, 852, 853, 854, 855, 856, 858, 859, 861, 864, 865, 866, 868, 871], "arang": [9, 20, 95, 96, 117, 157, 158, 191, 209, 217, 219, 220, 246, 293, 298, 299, 301, 302, 317, 325, 335, 339, 340, 383, 387, 476, 540, 553, 554, 555, 556, 607, 608, 611, 617, 618, 619, 629, 651, 654, 655, 697, 713, 714, 758, 759, 800, 802, 834, 835, 839, 840, 849, 853, 864], "arbitrari": [4, 20, 48, 111, 125, 249, 302, 355, 416, 558, 643, 671, 685, 689, 697, 729, 731, 821, 837, 839, 861], "arbitrarili": 671, "arc": 700, "architectur": [9, 441, 685, 708, 820, 853, 854, 865], "archiv": 201, "archlinux": 848, "archwiki": 848, "area": 839, "arena": 845, "arg": [22, 121, 313, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 416, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 693, 717, 739, 757, 760, 779, 799, 803, 829, 844, 849, 870, 871], "argmax": [818, 819, 831, 836, 838, 840, 848, 853, 858], "argo_scal": 844, "argo_tutori": [826, 847], "argument": [4, 20, 22, 34, 36, 37, 51, 54, 73, 93, 94, 100, 108, 113, 117, 121, 122, 131, 140, 210, 211, 212, 213, 216, 220, 231, 240, 242, 246, 287, 291, 297, 313, 325, 334, 335, 339, 340, 346, 354, 355, 385, 414, 416, 426, 427, 428, 429, 430, 431, 456, 476, 503, 540, 556, 562, 563, 564, 566, 567, 574, 575, 635, 640, 643, 681, 697, 698, 703, 704, 708, 713, 715, 719, 729, 788, 800, 801, 818, 837, 839, 845, 848, 855], "argument\ub85c": 805, "ari": [821, 858], "arnold": 858, "around": [291, 829, 831, 871], "arr": [4, 317, 694, 740, 780], "arrai": [4, 7, 21, 101, 102, 125, 126, 148, 197, 198, 205, 207, 217, 220, 233, 240, 249, 250, 310, 317, 556, 560, 561, 562, 565, 574, 575, 581, 582, 689, 694, 697, 705, 782, 833, 834, 835, 841, 848, 854], "arrang": [556, 574, 575, 691], "array_lik": 207, "array\ub294": 782, "array\ub4e4\uc5d0": 780, "array\ub4e4\uc744": 780, "array\ub4e4\uc758": 780, "array\ub97c": 789, "arrow": [830, 854], "arrows": 858, "art": [696, 824, 865], "articl": [149, 182, 185, 192, 837, 845], "arxiv": [134, 137, 146, 147, 161, 162, 169, 171, 174, 180, 182, 188, 195, 289, 303, 430, 431, 446, 558, 719, 721, 769, 824, 831, 844, 865, 871], "as_edge_prediction_sampl": [214, 216], "as_tensor": 820, "as_tupl": [691, 737, 777, 782, 853, 854], "asarrai": [4, 694, 740, 780], "ascend": [197, 205, 287, 297, 441, 566], "asgraphpreddataset": 820, "aslinkpreddataset": 849, "aspect": [178, 179, 861], "aspirincod": 750, "assembl": [299, 861, 865], "assert": [89, 121, 219, 294, 298, 317, 691, 737, 757, 777, 799], "assign": [4, 27, 28, 39, 52, 78, 114, 115, 125, 141, 142, 143, 147, 173, 221, 222, 223, 224, 225, 232, 236, 239, 240, 241, 249, 353, 354, 541, 556, 565, 641, 694, 695, 696, 697, 702, 703, 704, 728, 732, 747, 788, 812, 838, 841, 848, 853, 854, 865], "associ": [43, 46, 47, 74, 75, 103, 197, 205, 241, 242, 299, 305, 385, 416, 427, 429, 560, 562, 563, 564, 565, 566, 694, 700, 705, 729, 790, 853, 854, 855, 864, 865], "assum": [48, 130, 207, 210, 214, 215, 216, 217, 219, 221, 241, 245, 297, 310, 325, 344, 426, 475, 560, 562, 563, 564, 565, 640, 689, 691, 693, 694, 697, 727, 728, 730, 731, 782, 836, 838, 841, 848, 849, 861, 865, 870, 871], "assume_num_node_within_int32": 310, "assumpt": [20, 698, 845, 854], "assur": 681, "astyp": [401, 402, 405, 407, 408, 418, 841], "asv": 824, "asym_a": 823, "asymmetr": 700, "asynchron": [210, 294, 295, 298, 317], "aten": 820, "atom": [177, 178, 179, 195, 391, 443], "atom_encod": 820, "atomencod": 820, "att": [417, 865], "att_anim": 865, "att_map": 865, "att_weight_map": 865, "attach": [4, 141, 142, 143, 189, 190, 694, 853, 864], "attempt": 200, "attend": [861, 865], "attent": [9, 357, 389, 394, 401, 402, 405, 407, 408, 417, 424, 425, 436, 439, 440, 444, 446, 447, 449, 450, 451, 456, 633, 649, 669, 685, 722, 823, 856, 866, 868], "attention_weight": 405, "attenu": [397, 419], "attn": [444, 820], "attn_aft": 425, "attn_bef": 424, "attn_bia": [444, 447, 685], "attn_bias_typ": [444, 447], "attn_drop": [405, 407, 408, 444], "attn_dropout": [424, 425, 446, 447], "attn_fc": 855, "attn_head": 855, "attn_mask": [444, 447, 683, 685], "attr": [165, 179, 426, 430, 431, 446, 600, 620, 730, 769, 770, 782, 813, 840, 870], "attract": [73, 113], "attribut": [22, 122, 125, 140, 149, 159, 165, 179, 185, 186, 248, 249, 290, 297, 302, 303, 308, 315, 316, 327, 642, 645, 646, 681, 695, 697, 710, 728, 782, 836, 837, 840, 841, 865], "attrvisitor": 22, "auc": [828, 839, 849], "augment": [446, 648, 654, 655, 656, 697, 818, 854], "auroc": 828, "aut": 865, "authent": 848, "author": [145, 151, 152, 177, 178, 179, 181, 309, 318, 391, 649, 688, 697, 700, 719, 782, 852, 853, 854, 855, 858, 861, 864, 865], "author___affiliated_with___institut": 697, "author___writes___pap": 697, "authorship": [151, 152], "auto": [21, 22, 816, 823, 828, 831, 844, 865, 871], "auto_cast_to_optimal_dtyp": 309, "autocast": [722, 806], "autoencod": 853, "autograd": [9, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 577, 824], "autom": 21, "automat": [4, 21, 22, 156, 221, 290, 417, 420, 424, 559, 640, 688, 694, 695, 697, 708, 713, 718, 722, 806, 823, 848, 849, 852], "auxiliari": [696, 697], "av": 397, "avail": [4, 21, 118, 119, 148, 168, 183, 186, 207, 231, 240, 289, 341, 432, 434, 567, 569, 689, 693, 718, 730, 732, 819, 824, 829, 845, 862, 865, 868], "averag": [4, 10, 137, 149, 175, 177, 181, 183, 185, 195, 245, 397, 399, 415, 435, 475, 643, 658, 659, 664, 730, 813, 823, 829, 838, 839, 840, 855, 865, 870, 871], "avg": 25, "avg_deg": 183, "avg_degre": [658, 659, 664], "avg_loss": [820, 865], "avgpool": [426, 431], "avoid": [21, 34, 70, 73, 89, 93, 94, 100, 113, 116, 130, 220, 325, 338, 344, 389, 399, 401, 404, 405, 407, 408, 409, 412, 415, 422, 444, 446, 447, 557, 563, 564, 565, 566, 634, 641, 643, 683, 694, 697, 701, 709, 720, 726, 829, 871], "aw": [289, 845], "awai": [4, 859, 868], "awar": [713, 730, 855], "awesom": 21, "ax": [819, 861, 864], "ax1x": 865, "axi": [404, 852, 854, 855, 864], "b": [6, 22, 26, 45, 79, 82, 105, 118, 119, 121, 127, 128, 129, 131, 179, 310, 311, 320, 352, 388, 393, 402, 405, 407, 408, 413, 415, 420, 428, 430, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 449, 450, 451, 459, 499, 502, 551, 552, 558, 607, 611, 616, 617, 628, 629, 635, 640, 645, 646, 650, 695, 725, 730, 757, 758, 760, 762, 765, 770, 799, 800, 803, 805, 809, 813, 821, 823, 853, 854, 858, 861, 864], "b_": [854, 861, 864], "b_dst": 127, "b_h": 865, "b_iou": 858, "b_oend": 865, "b_size": 844, "b_src": 127, "ba": [118, 127, 131, 141, 142, 143, 352, 558], "bachman": 841, "back": [21, 22, 44, 104, 122, 558, 640, 643, 695, 717, 802, 837], "backend": [3, 4, 6, 8, 9, 21, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 210, 214, 215, 216, 219, 246, 247, 248, 249, 250, 287, 334, 335, 339, 340, 341, 351, 357, 432, 433, 434, 435, 436, 437, 438, 442, 443, 458, 476, 477, 540, 547, 569, 571, 634, 636, 640, 641, 642, 650, 656, 662, 667, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 693, 694, 701, 703, 723, 727, 739, 740, 779, 780, 788, 820, 824, 829, 845, 848, 849, 855, 858, 870, 871], "backend_unittest": 21, "backprop": [722, 806], "backpropag": 719, "backpropagate\ub97c": 805, "backtrack": [69, 344, 662, 854], "backup": 693, "backward": [4, 9, 10, 118, 119, 383, 387, 426, 427, 428, 429, 430, 431, 455, 693, 694, 712, 713, 714, 717, 719, 721, 722, 728, 730, 731, 732, 739, 740, 757, 758, 760, 762, 768, 770, 771, 772, 779, 780, 799, 800, 803, 805, 806, 812, 813, 814, 815, 818, 819, 820, 821, 828, 829, 831, 836, 838, 839, 840, 848, 849, 852, 853, 854, 855, 858, 870, 871], "backwards\ub97c": 799, "bad": [21, 22, 444, 445, 447, 449, 450, 854], "bag": [135, 136, 155, 187, 193], "baidu": 21, "balanc": [189, 190, 240, 353, 354, 457, 696, 848], "balance_edg": [209, 240, 353, 354, 697, 741, 782, 848, 849], "balance_ntyp": [209, 240, 353, 354, 697, 741, 782, 848], "balkance_edg": 209, "ban": 188, "bandwidth": 291, "bar": [120, 818, 819, 823], "barab\u00e1si": [141, 142, 143], "barrier": [4, 844], "baryshnikov": 853, "base": [4, 6, 13, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 232, 239, 240, 243, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 478, 541, 558, 560, 562, 600, 610, 620, 633, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 685, 687, 694, 695, 704, 713, 725, 730, 731, 819, 824, 827, 834, 835, 839, 840, 841, 853, 854, 855, 864, 865], "base_dir": [309, 834, 835], "baselin": 824, "basenam": [834, 835], "basetransform": [13, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671], "bash": [21, 817], "basi": [388, 395, 420, 451, 459, 719, 853], "basic": [7, 9, 156, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 687, 690, 696, 699, 816, 822, 836, 838, 839, 841, 848, 849, 854, 861, 865, 871], "basicfeaturestor": [304, 318], "batch": [4, 6, 7, 13, 20, 22, 27, 28, 36, 37, 38, 53, 54, 95, 96, 101, 102, 114, 115, 116, 117, 128, 129, 130, 165, 168, 172, 183, 186, 208, 210, 213, 220, 246, 247, 293, 297, 301, 306, 335, 338, 341, 343, 344, 352, 383, 387, 388, 393, 404, 413, 424, 428, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 448, 449, 450, 451, 476, 477, 540, 551, 552, 553, 554, 555, 557, 563, 569, 571, 572, 573, 608, 609, 616, 634, 643, 644, 645, 646, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 690, 691, 693, 694, 708, 711, 712, 715, 719, 720, 725, 736, 739, 740, 742, 770, 776, 779, 780, 783, 802, 816, 820, 823, 827, 829, 844, 855, 861, 865], "batch_depend": [214, 303], "batch_f": [435, 436, 437, 438, 439, 440, 441, 442, 443], "batch_first": [445, 683, 724, 764, 808], "batch_g": [435, 436, 437, 438, 439, 440, 441, 442, 443], "batch_input": [693, 739, 779, 848, 849], "batch_label": [693, 739, 779, 848], "batch_norm": [404, 413, 448], "batch_num_edg": [95, 96, 122, 681, 730, 813, 840], "batch_num_nod": [96, 122, 681, 730, 813, 840], "batch_pr": [693, 739, 779, 848, 849], "batch_siz": [4, 122, 183, 209, 210, 213, 214, 215, 216, 219, 220, 293, 300, 301, 303, 308, 319, 383, 387, 426, 430, 431, 444, 446, 447, 690, 691, 693, 694, 713, 714, 715, 716, 717, 719, 720, 721, 730, 736, 737, 739, 740, 757, 758, 759, 760, 762, 770, 776, 777, 779, 780, 799, 800, 801, 802, 803, 805, 813, 820, 828, 829, 831, 840, 844, 848, 849, 854, 858, 865, 870, 871], "batch_tre": 858, "batch_walk": 383, "batched_g": 820, "batched_graph": [165, 168, 172, 186, 213, 730, 770, 813, 840, 854, 858], "batched_label": [165, 168, 172, 186, 854], "batched_pmpd": 854, "batchedgraph": 865, "batcher": 858, "batcher_dev": 858, "batchnorm": 416, "batchnorm1": 820, "batchnorm1d": [416, 820, 854], "batchnorm2": 820, "bbg": 122, "bc": 118, "bcewithlogitsloss": [820, 855], "bdd": [388, 420], "beam": 865, "beat": 21, "becam": 167, "becasu": 320, "becaus": [4, 9, 21, 22, 34, 73, 93, 94, 100, 113, 122, 131, 287, 334, 385, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 565, 694, 695, 696, 701, 709, 715, 716, 731, 821, 829, 838, 848, 854, 855, 862, 868, 871], "becom": [122, 126, 131, 249, 250, 287, 334, 421, 553, 619, 714, 865], "been": [4, 22, 120, 131, 162, 173, 188, 230, 287, 291, 334, 388, 417, 420, 565, 691, 698, 715, 719, 820, 834, 835, 854, 858, 865], "befor": [4, 21, 89, 108, 117, 126, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 223, 224, 225, 235, 250, 291, 293, 297, 300, 301, 313, 320, 353, 424, 425, 436, 447, 455, 541, 552, 559, 562, 565, 667, 683, 685, 694, 695, 696, 697, 715, 717, 720, 722, 823, 829, 836, 841, 844, 848, 854, 855, 858, 862, 865, 868, 870, 871], "begin": [352, 446, 757, 799, 821, 822, 838, 839, 848, 853, 854, 855, 858, 861, 865, 870], "beginn": 816, "behavior": [229, 230, 294, 298, 309, 317, 694, 701, 731, 841, 845, 861, 864, 865], "behaviour": 829, "behind": [694, 853, 870], "being": [21, 45, 79, 82, 105, 108, 122, 214, 216, 219, 246, 249, 291, 297, 303, 308, 315, 316, 335, 339, 340, 476, 540, 551, 552, 557, 563, 574, 575, 839, 854, 861, 864], "believ": 845, "belong": [4, 68, 116, 142, 143, 174, 181, 189, 190, 197, 205, 220, 229, 230, 232, 236, 239, 240, 305, 345, 353, 541, 634, 681, 696, 697, 728, 821, 841, 853, 854, 862, 868], "below": [4, 5, 22, 89, 131, 220, 240, 287, 293, 334, 338, 419, 420, 459, 569, 658, 659, 664, 689, 691, 693, 694, 695, 696, 697, 698, 702, 704, 705, 712, 713, 721, 725, 729, 818, 819, 820, 821, 823, 824, 834, 835, 844, 848, 849, 852, 854, 855, 861, 864, 865, 870], "benchmark": [22, 132, 135, 136, 146, 151, 152, 153, 159, 162, 169, 179, 192, 341, 342, 345, 413, 474, 661, 690, 697, 736, 776, 820, 829, 831], "benefici": [709, 848], "benefit": [691, 697, 827, 839, 848], "benign": 161, "bernoulli": [727, 728, 767, 768, 811, 812, 861], "bernoulli_": [757, 799], "bernoulli_action_log_prob": 861, "bert": [159, 865], "besid": [159, 346, 416, 567, 693, 709, 717, 724, 726, 861, 865], "best": [4, 14, 395, 550, 665, 687, 715, 720, 774, 823, 831, 836, 837, 839, 846, 855], "best_test_acc": [836, 838], "best_val_acc": [836, 838], "beta": [4, 10, 389, 392, 409, 865], "beta1": [4, 10, 426, 427], "beta2": [4, 10, 426, 427], "beta_": 451, "beta_1": [426, 427], "beta_2": [426, 427], "beta_l": 409, "better": [21, 633, 669, 691, 704, 716, 777, 821, 824, 837, 841, 844, 845, 854], "between": [4, 5, 26, 48, 56, 66, 72, 101, 102, 116, 118, 119, 142, 147, 149, 155, 166, 174, 178, 179, 182, 185, 187, 193, 195, 207, 226, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 297, 303, 308, 341, 391, 409, 412, 429, 431, 432, 434, 444, 449, 450, 451, 455, 457, 541, 559, 560, 563, 569, 570, 574, 575, 643, 685, 695, 697, 700, 705, 714, 720, 728, 730, 731, 820, 821, 823, 837, 839, 841, 852, 853, 854, 855, 861, 864, 865, 870], "bewteen": [401, 407, 408], "beyond": [120, 244, 245, 475, 697, 838, 839], "bf": 545, "bf16": 722, "bfs_nodes_gener": [0, 545], "bg": [36, 37, 38, 95, 96, 116, 122, 128, 129, 144, 426, 428, 430, 431, 551, 552, 571, 572, 573, 645, 646, 681, 704, 730, 748, 770, 789, 813, 870], "bg1": [116, 634], "bhg": [122, 681], "bi": [6, 343, 634, 865], "bi_part": 401, "bia": [386, 393, 394, 395, 396, 398, 399, 400, 402, 405, 406, 407, 408, 409, 412, 414, 415, 418, 420, 421, 422, 423, 444, 447, 449, 450, 451, 452, 565, 685, 721, 724, 764, 808, 852, 853, 855, 858], "bias": 451, "biasedmha": 685, "bidecod": [728, 768], "bidirect": [116, 162, 173, 220, 342, 433, 547, 558, 634, 661, 837], "big": [405, 730], "bigger": [840, 859, 868], "billion": [697, 712], "bilstm": 456, "bin": [204, 346, 567, 692, 696, 738, 778, 782, 841], "binar": 858, "binari": [5, 9, 161, 163, 171, 180, 186, 189, 190, 240, 457, 500, 501, 567, 683, 696, 697, 708, 782, 793, 821, 839, 855, 858], "binary_cross_entropy_with_logit": [717, 828, 839, 849], "binaryreducebackward": [389, 401, 407], "bind": [391, 817, 844], "bio": 845, "bipartit": [9, 26, 44, 45, 68, 79, 82, 104, 105, 116, 118, 119, 125, 126, 130, 352, 392, 394, 395, 396, 399, 400, 401, 402, 404, 405, 407, 408, 412, 415, 418, 421, 548, 558, 565, 635, 700, 705, 725, 726, 785, 790, 800, 809, 810, 830, 854, 864], "bipartite_from_networkx": 126, "bipartite_from_scipi": 125, "bisect": [353, 354, 695], "bisect_left": 695, "bit": [21, 22, 337, 704, 731, 861, 865], "bitcoin": 145, "bitcoinotc": [25, 145], "bitcoinotcdata": [691, 737, 777], "bitcoinotcdataset": [688, 735, 775], "bla": [14, 341, 432, 434, 569], "blitz": [816, 826, 843, 870], "blitz_1_introduct": 836, "blitz_2_dglgraph": 837, "blitz_3_message_pass": 838, "blitz_4_link_predict": 839, "blitz_5_graph_classif": 840, "blitz_6_load_data": 841, "bloat16": 722, "blob": [165, 210, 844], "block": [4, 10, 127, 131, 180, 183, 210, 214, 215, 216, 220, 290, 292, 301, 305, 388, 420, 440, 455, 635, 693, 694, 695, 713, 714, 716, 717, 718, 719, 721, 723, 725, 726, 739, 740, 757, 758, 759, 760, 761, 762, 765, 779, 780, 781, 799, 800, 802, 803, 804, 805, 807, 809, 820, 828, 829, 831, 844, 848, 849, 853, 854, 855, 861, 871], "block3": [757, 799], "block_diag": 854, "block_id": [757, 799], "block_typ": 440, "blocksampl": [214, 216, 715, 757, 799, 801], "blog": [825, 845], "blue": 819, "bmatrix": 821, "bmm": 853, "bn": 854, "board": 845, "bodi": 22, "boil": 852, "boldsymbol": [731, 757, 771, 799, 814], "bond": [177, 179, 195], "book": [137, 232, 237, 239, 696, 697, 825], "bool": [4, 6, 10, 31, 48, 57, 58, 65, 66, 67, 95, 96, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 207, 210, 213, 214, 216, 217, 219, 226, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 246, 287, 290, 291, 293, 295, 297, 301, 303, 305, 308, 309, 310, 315, 316, 324, 326, 335, 338, 339, 340, 341, 342, 344, 353, 354, 383, 386, 387, 388, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 444, 446, 447, 448, 452, 457, 476, 540, 541, 543, 545, 546, 547, 553, 554, 556, 557, 559, 560, 562, 563, 564, 565, 566, 569, 570, 571, 633, 634, 635, 641, 643, 645, 646, 647, 649, 650, 651, 661, 662, 667, 669, 687, 689, 691, 727, 728, 734, 757, 767, 768, 774, 777, 782, 799, 811, 812, 833, 841, 848, 849, 861], "boolean": [53, 54, 210, 213, 216, 232, 239, 246, 297, 303, 308, 315, 316, 329, 336, 476, 564, 682, 694, 728, 732, 780, 836, 848], "booltensor": 855, "boost": 720, "borrow": [22, 199, 200, 730], "both": [0, 9, 21, 22, 44, 56, 62, 63, 73, 89, 104, 116, 118, 119, 130, 134, 149, 155, 181, 185, 187, 193, 210, 216, 230, 297, 303, 308, 309, 315, 316, 320, 338, 344, 351, 352, 385, 399, 400, 401, 402, 405, 406, 407, 408, 415, 417, 418, 421, 445, 451, 476, 477, 557, 567, 594, 597, 598, 599, 601, 611, 616, 617, 634, 635, 640, 641, 643, 689, 693, 694, 697, 699, 704, 705, 707, 708, 716, 722, 728, 823, 824, 833, 836, 837, 839, 841, 848, 853, 854, 855, 856, 861, 865, 868], "bother": [688, 823], "bottom": [142, 143, 858], "bought": [135, 136, 137, 700, 715, 785], "bound": [235, 445, 450, 565, 722], "boundari": 819, "bpr": [731, 814], "branch": [21, 192, 696, 782], "brand": 22, "breadth": [123, 124, 560], "break": [51, 219, 865], "breviti": 691, "brew": 817, "brief": [699, 854], "briefli": 819, "bring": [20, 664, 720], "broadcast": [5, 9, 128, 129, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 321, 410, 421, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 608, 621, 622, 623, 624, 625, 708], "broadcast_edg": 129, "broadcast_nod": 128, "broken": [829, 855], "brook": 750, "brookhuang16211": 750, "bruteforc": [14, 341, 432, 434, 569], "bsddmm": 820, "bspmm": 820, "bucket": 13, "budget": 217, "buffer": [235, 341, 432, 434, 569, 720], "buffer_devic": 716, "bugfix": 21, "bui": [548, 700, 785], "build": [14, 22, 157, 158, 191, 214, 215, 216, 235, 303, 315, 435, 436, 437, 438, 439, 440, 441, 442, 443, 563, 684, 691, 694, 701, 705, 706, 712, 715, 718, 727, 730, 732, 777, 816, 817, 820, 821, 822, 836, 839, 840, 855, 858, 861], "build_dgl": 817, "build_ext": [21, 817], "build_hidden_lay": 853, "build_input_lay": 853, "build_model": 853, "build_output_lay": 853, "built": [3, 9, 13, 22, 34, 73, 91, 92, 93, 94, 100, 113, 162, 179, 181, 289, 694, 707, 709, 722, 725, 729, 730, 732, 752, 793, 806, 809, 816, 823, 824, 827, 838, 852, 855, 858, 861], "builtin": [9, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 691, 692, 717, 718, 819, 828, 838, 839, 852, 853, 855], "builtindataset": [719, 721, 828, 829, 831, 871], "builtinfunct": [34, 73, 91, 92, 93, 94, 100, 113], "bulit": [34, 73, 93, 94, 100, 113], "bunch": [697, 725], "busi": 194, "button": 21, "buyer": 700, "bwtype": 558, "byte": [235, 298], "c": [6, 21, 22, 25, 118, 119, 120, 121, 151, 152, 179, 183, 192, 289, 292, 345, 394, 395, 396, 403, 413, 416, 457, 499, 704, 789, 817, 819, 844, 858, 864, 865], "c_": [178, 179, 399, 406, 415, 853, 855, 858, 864], "c_csc_graph": 297, "c_etyp": [322, 323, 427, 429, 710, 754, 796], "c_etype_func_dict": [427, 429], "c_etype_str": [322, 323], "c_i": 853, "c_j": 858, "c_k": [345, 391], "cach": [23, 138, 139, 140, 142, 143, 148, 156, 189, 190, 209, 210, 217, 291, 298, 422, 692, 717, 803, 818, 819, 821, 836, 838, 839, 845, 852, 853, 854, 855], "cache_path": 209, "cache_s": 298, "caculatorgetbrand": 22, "cal": [178, 179], "calc": 22, "calcul": [4, 22, 314, 325, 394, 395, 396, 433, 478, 547, 572, 573, 574, 575, 600, 620, 641, 693, 697, 730, 813, 819, 823, 828, 829, 854, 855, 861, 864, 865, 871], "calculate_gain": [721, 724, 764, 808, 853, 855], "calculatorobject": 22, "call": [0, 4, 6, 9, 21, 22, 26, 45, 52, 66, 79, 82, 105, 108, 117, 118, 119, 131, 145, 156, 217, 240, 287, 293, 294, 297, 298, 301, 317, 334, 357, 385, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 424, 426, 427, 428, 429, 430, 431, 474, 557, 563, 565, 616, 640, 641, 645, 646, 681, 691, 694, 695, 696, 697, 700, 703, 704, 705, 708, 709, 710, 711, 719, 724, 725, 726, 728, 730, 731, 747, 788, 793, 820, 829, 830, 834, 835, 836, 837, 838, 848, 854, 855, 858, 861, 865, 866, 868, 871], "callabl": [4, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 121, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 220, 293, 301, 355, 385, 394, 399, 400, 405, 407, 408, 409, 410, 411, 413, 415, 418, 420, 421, 422, 423, 446, 447, 455, 542, 543, 544, 545, 546, 558, 653, 724], "came": 22, "can": [4, 5, 6, 7, 9, 12, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 73, 74, 75, 77, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 117, 118, 119, 120, 122, 125, 128, 129, 130, 131, 147, 156, 161, 163, 168, 186, 197, 207, 210, 213, 214, 216, 217, 220, 221, 229, 230, 232, 234, 235, 240, 241, 242, 245, 246, 247, 249, 287, 291, 293, 294, 297, 298, 301, 303, 305, 308, 309, 310, 315, 316, 317, 318, 334, 335, 339, 340, 341, 343, 353, 354, 357, 384, 385, 386, 387, 389, 391, 393, 394, 395, 396, 397, 399, 401, 402, 403, 404, 405, 407, 408, 409, 412, 414, 415, 418, 420, 421, 422, 424, 432, 433, 434, 436, 444, 448, 451, 452, 453, 454, 455, 456, 459, 475, 476, 478, 503, 540, 541, 547, 551, 552, 553, 554, 555, 556, 559, 562, 563, 564, 565, 566, 569, 572, 573, 574, 575, 619, 635, 640, 641, 643, 645, 646, 668, 682, 683, 685, 687, 688, 689, 691, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 775, 787, 816, 817, 819, 820, 821, 822, 823, 824, 827, 828, 829, 830, 831, 833, 836, 837, 838, 839, 840, 844, 845, 848, 849, 852, 853, 854, 855, 856, 858, 861, 862, 864, 865, 866, 868, 870], "candid": [341, 432, 434, 569], "cannot": [4, 20, 21, 210, 305, 335, 339, 340, 430, 476, 540, 694, 695, 697, 702, 703, 705, 708, 727, 747, 749, 788, 790], "canon": [4, 26, 36, 39, 46, 48, 51, 52, 57, 66, 80, 109, 131, 240, 322, 323, 334, 387, 427, 642, 650, 657, 705, 790, 827, 833, 834], "canonical_etyp": [4, 52, 66, 109, 385, 427, 428, 429, 650, 705, 710, 718, 726, 749, 754, 757, 758, 760, 761, 766, 790, 796, 799, 800, 803, 804, 810, 853], "cap": 844, "capabl": [210, 722, 865], "capac": [1, 9, 298, 569, 697, 708, 712, 855, 856, 868], "capav": [178, 179], "capsul": [357, 866, 868], "captur": [700, 710], "care": [162, 426, 427, 428, 429, 430, 431], "carlo": [429, 431], "carri": [696, 697, 730], "cartesian": 451, "case": [4, 5, 9, 14, 21, 22, 27, 32, 34, 41, 42, 44, 48, 51, 73, 93, 94, 100, 104, 108, 109, 113, 116, 125, 126, 131, 140, 181, 200, 210, 214, 232, 239, 249, 250, 287, 334, 343, 352, 357, 389, 392, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 412, 415, 418, 421, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 457, 458, 562, 570, 574, 575, 616, 622, 640, 681, 683, 688, 689, 692, 694, 697, 704, 705, 709, 713, 715, 718, 719, 725, 728, 809, 821, 823, 839, 841, 845, 848, 853, 854, 855, 858, 865], "case1": [452, 456, 594, 597, 598, 599, 600, 601, 610, 612, 613, 614, 615, 620, 626, 650, 651, 656, 657, 662, 666, 667, 671], "case2": [452, 456, 594, 597, 598, 599, 600, 601, 610, 612, 613, 614, 615, 620, 626, 650, 651, 656, 657, 662, 666, 667, 671], "case3": [452, 456, 600, 610, 612, 615, 620, 626, 650, 651], "case4": 452, "case\ub4e4\uc5d0": 782, "casio": 22, "cast": [64, 71, 131, 287, 309, 334, 395, 637, 638, 639, 820], "cat": [157, 158, 191, 220, 300, 313, 435, 436, 437, 438, 439, 440, 441, 442, 443, 449, 452, 456, 569, 683, 709, 714, 718, 728, 753, 758, 761, 768, 795, 800, 804, 812, 819, 820, 828, 829, 838, 839, 841, 849, 854, 855, 861, 864, 871], "cat_feat": [709, 753, 795], "catbackward": 438, "categor": [160, 194, 728, 837, 845, 853, 861], "categori": [5, 132, 133, 135, 136, 144, 150, 154, 155, 161, 170, 176, 187, 193, 717, 732, 823, 836, 839, 840, 841, 853], "category_id": 853, "caus": [291, 293, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 725, 844], "caution": 4, "cc": [22, 167, 696, 782], "cd": [21, 137, 817], "cdgnn": 854, "cdot": [116, 120, 186, 389, 393, 396, 397, 401, 404, 405, 416, 417, 418, 421, 438, 452, 557, 668, 725, 757, 765, 799, 809, 819, 838, 858, 861, 864, 865], "cedric": 864, "cell": 171, "center": [387, 426, 427, 428, 430, 451, 837], "cento": 817, "central": 838, "centric": [699, 824], "centuri": 858, "certain": [27, 150, 154, 176, 563, 564, 574, 575, 701, 710, 724, 840, 864], "certif": 200, "certifi": [828, 829, 831, 834, 835], "cetyp": 853, "chain": [182, 313, 701, 720, 786, 839, 852, 858, 861, 865], "chainer": 21, "challeng": [151, 152, 858, 859, 861, 862, 868], "chameleon": 149, "chang": [1, 6, 26, 64, 70, 71, 131, 145, 177, 178, 179, 287, 303, 334, 422, 574, 575, 688, 689, 691, 719, 722, 828, 831, 844, 848, 861, 870], "channel": [416, 854, 855, 865], "chapter": [1, 3, 5, 11, 20, 635, 687, 695, 696, 697, 706, 711, 718, 725, 730, 732, 844, 845], "char": 22, "charact": 861, "character": [120, 245, 475, 730, 821], "characterist": [245, 475, 710], "charg": 693, "charset": [828, 829, 831, 834, 835], "chart": 687, "cheatsheet": 5, "chebconv": 398, "chebnet": 393, "chebyshev": [393, 398], "check": [21, 22, 56, 65, 66, 67, 101, 102, 131, 156, 199, 305, 310, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 565, 687, 688, 691, 692, 696, 697, 711, 713, 722, 774, 775, 778, 816, 817, 818, 819, 820, 821, 824, 839, 853, 855, 861, 870], "check_eq_shap": [725, 765, 809], "check_sha1": [688, 735, 775], "checkout": 21, "checkpoint": [701, 844], "chee": 864, "chemic": 861, "chemistri": [179, 391, 418], "chen": 750, "child": 858, "children": [429, 431], "china": 23, "choic": [23, 457, 500, 548, 549, 696, 839, 840], "choos": [126, 131, 226, 227, 246, 249, 250, 287, 297, 334, 476, 548, 549, 560, 562, 565, 641, 695, 732, 817, 823, 830, 845], "choose_dest": 861, "choose_dest_ag": 861, "choose_dest_and_upd": 861, "choose_dest_log_p": 861, "choosedestandupd": 861, "chosen": [146, 169, 195, 226, 227, 241, 242, 297, 302, 319, 341, 428, 430, 563, 564, 565, 566, 817], "chrsmrr": [168, 186], "chunk": [695, 858], "chunk_graph": 697, "chunkfilespec": 697, "ci": 21, "cifar10": [146, 169], "cikm": 162, "circ": [392, 444, 820], "circl": 861, "circular": 172, "citat": [150, 153, 154, 176, 289, 664, 821, 836, 839, 854], "citation2": [289, 849], "citation_graph": [854, 855], "citationdata": [691, 737, 777], "citationgraphdataset": [25, 150, 154, 176, 691, 737, 777], "citationgraphdataset\u6e90\u4ee3\u7801": 737, "cite": [309, 697, 782, 821, 839, 853, 854], "citegrh": [854, 855], "cites": [25, 150, 691, 737, 777, 824], "citeseergraphdataset": [691, 722, 727, 732, 737, 767, 772, 777, 811, 815], "citizen": 22, "cla": [819, 861, 864], "clamp": [445, 450, 457, 683, 731, 771, 803, 814, 865], "clang": 817, "class": [0, 1, 4, 6, 8, 10, 13, 22, 31, 120, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 244, 245, 250, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 345, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 558, 609, 616, 627, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 686, 688, 689, 691, 694, 695, 713, 714, 716, 717, 718, 719, 721, 722, 724, 726, 728, 730, 731, 732, 734, 737, 757, 758, 759, 760, 761, 762, 764, 766, 768, 770, 771, 772, 774, 777, 799, 800, 802, 803, 804, 805, 806, 808, 810, 812, 813, 814, 815, 818, 819, 820, 821, 822, 823, 828, 829, 831, 832, 833, 836, 838, 839, 840, 845, 848, 849, 852, 853, 854, 855, 858, 861, 864, 870, 871], "classic": [424, 713, 816, 819, 864, 865], "classif": [2, 120, 122, 132, 133, 135, 136, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 159, 160, 161, 163, 165, 167, 168, 169, 170, 172, 175, 176, 181, 186, 189, 190, 192, 194, 209, 210, 211, 213, 214, 215, 216, 219, 220, 245, 289, 303, 305, 308, 315, 316, 399, 415, 426, 427, 428, 429, 430, 431, 441, 457, 475, 654, 657, 694, 697, 712, 717, 721, 727, 731, 812, 814, 818, 824, 827, 828, 838, 839, 842, 849, 850, 852, 853, 854, 855, 861, 872], "classifi": [149, 155, 185, 187, 193, 429, 431, 730, 731, 732, 770, 813, 852, 853, 854], "claud": 858, "clean": [21, 686, 705, 708], "clear": [855, 865], "clearli": [21, 855], "clf": [383, 864], "cli": 21, "click": [21, 220, 727, 728, 731, 767, 768, 771, 811, 812, 814, 819], "click_dst": [727, 767, 811], "click_src": [727, 767, 811], "client": [4, 235], "cliqu": 172, "clock": [183, 207], "clone": [21, 56, 64, 71, 89, 108, 416, 637, 638, 639, 696, 782, 817, 854, 861, 865], "cloner": 21, "close": [178, 383, 387, 691, 819, 855, 864, 865], "cloud": [6, 14, 21, 341, 404, 432, 434, 569], "club": [167, 701, 745, 786, 819, 841], "cluster": [4, 6, 147, 209, 556, 693, 694, 696, 697, 698, 824, 848, 849, 854], "cluster_gcn": 209, "cm": 819, "cmake": 817, "cmap": [819, 854], "cn": 23, "cnn": [404, 412, 837, 865], "cnt": 643, "co": [4, 134, 135, 136, 137, 151, 152, 289, 389, 391, 452, 649, 821, 823], "coalesc": [240, 588, 643, 671, 721, 823], "coarsen": 6, "coauthor": [25, 151, 152, 700], "coauthordata": [691, 737, 777], "code": [4, 22, 130, 145, 164, 166, 175, 177, 178, 179, 183, 184, 196, 199, 200, 209, 220, 235, 385, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 688, 690, 691, 693, 694, 695, 701, 702, 704, 705, 707, 708, 713, 714, 718, 719, 720, 721, 722, 723, 725, 728, 729, 730, 732, 742, 777, 783, 818, 819, 820, 821, 823, 824, 828, 829, 831, 836, 837, 838, 839, 841, 844, 845, 848, 849, 852, 853, 854, 855, 856, 858, 859, 861, 862, 864, 865, 866, 868, 871], "coef": [429, 431, 658], "coeffici": [4, 10, 388, 420, 425, 457, 459, 478, 658, 853, 864], "coff_budget": [428, 430], "coff_connect": [428, 430], "col": [612, 626, 823, 854], "col_sort": 287, "colab": 822, "collab": [25, 165, 168, 186], "collaps": 164, "collat": [183, 213, 683], "collate_dgl": 820, "collate_fn": [4, 183, 213, 383, 387, 690, 693, 694, 736, 739, 740, 776, 779, 780, 820, 854, 858], "collect": [5, 7, 22, 122, 133, 164, 241, 242, 297, 299, 391, 428, 430, 455, 690, 693, 694, 827, 829, 853, 854, 858, 861, 870, 871], "colon": 697, "color": [22, 819, 821, 830, 854, 855], "colorbar": 855, "column": [4, 31, 32, 118, 119, 131, 287, 310, 321, 325, 327, 334, 341, 398, 399, 400, 547, 578, 579, 581, 582, 594, 597, 598, 599, 600, 601, 612, 613, 614, 620, 622, 626, 656, 689, 705, 749, 790, 821, 823, 841, 848, 849, 854], "com": [21, 23, 135, 136, 151, 152, 153, 159, 162, 165, 210, 682, 691, 696, 737, 750, 777, 782, 791, 817, 829, 844, 845, 865], "combin": [20, 26, 231, 240, 388, 392, 419, 420, 425, 436, 452, 459, 567, 641, 697, 707, 708, 709, 716, 719, 728, 732, 819, 836, 840, 853, 855, 865], "combine_nam": 26, "come": [134, 149, 155, 185, 187, 193, 395, 420, 456, 641, 829, 839, 861, 865], "comma": 689, "command": [21, 694, 696, 698, 817, 818, 819, 820, 821, 823, 848, 854], "comment": [21, 181, 718], "commerc": 821, "commerci": 159, "commit": 21, "committ": 21, "committor": 21, "common": [14, 21, 26, 130, 160, 210, 213, 389, 399, 401, 404, 405, 407, 408, 409, 412, 415, 422, 701, 705, 708, 709, 711, 722, 725, 726, 728, 730, 810, 816, 827, 828, 837, 841, 848, 853, 855, 870], "commonli": [12, 128, 129, 387, 443, 551, 552, 558, 635, 659, 664, 668, 686, 694, 700, 708, 723, 724, 840, 852], "commun": [21, 142, 147, 167, 174, 181, 183, 235, 240, 354, 693, 694, 696, 697, 730, 856, 868, 870], "comp_cor": 844, "compact": [130, 297, 300, 303, 305, 308, 310, 315, 316, 321, 332, 333, 426, 427, 717, 721], "compact_graph": 715, "compacted_csc_format": [321, 333], "compacted_mat": 721, "compacted_node_list": 332, "compacted_pair": 717, "compacted_se": [301, 303, 305, 714, 717, 828, 831], "compani": 387, "companion": [854, 856, 868], "compar": [120, 156, 245, 297, 302, 475, 563, 569, 718, 725, 731, 732, 823, 848, 854, 855, 865], "comparison": [21, 824], "compat": [8, 21, 551, 552, 712, 722, 727, 730, 817, 823], "competit": [829, 864, 871], "compil": [9, 22, 696, 708], "complet": [13, 52, 341, 454, 685, 691, 696, 728, 732, 768, 812, 821, 823, 836, 839, 844, 853, 855, 858, 861, 864, 865, 870], "complex": [9, 341, 432, 434, 569, 689, 710, 820, 838, 839, 855, 861, 865], "complic": [338, 724, 728], "compon": [11, 122, 229, 230, 292, 305, 341, 569, 571, 685, 686, 693, 694, 699, 728, 730, 828, 829, 831, 840, 848, 865], "compos": [3, 13, 22, 159, 174, 246, 289, 335, 339, 340, 341, 387, 419, 459, 476, 540, 569, 820, 827, 853, 855], "composit": [22, 305, 320], "compress": [581, 582, 613, 614, 823], "comput": [0, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 60, 70, 87, 122, 126, 131, 135, 136, 151, 192, 210, 211, 212, 214, 215, 216, 220, 222, 223, 224, 225, 240, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 303, 310, 315, 334, 341, 342, 344, 357, 383, 385, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 457, 459, 475, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 550, 558, 563, 569, 570, 572, 573, 594, 597, 598, 599, 601, 616, 633, 643, 661, 665, 669, 677, 678, 679, 680, 683, 685, 691, 693, 694, 697, 699, 707, 708, 709, 710, 712, 714, 716, 717, 718, 719, 720, 722, 725, 728, 729, 731, 732, 782, 800, 802, 805, 812, 814, 815, 818, 819, 820, 821, 823, 824, 827, 828, 829, 830, 836, 837, 838, 839, 840, 845, 848, 849, 852, 853, 854, 855, 858, 861, 866, 868, 870, 871], "computation": 865, "compute_auc": 839, "compute_block": 305, "compute_cor": [844, 845], "compute_loss": [713, 714, 719, 731, 757, 758, 760, 762, 771, 799, 800, 803, 805, 814, 839], "compute_mod": [433, 547], "conan": 858, "conatin": 305, "concat": [396, 421, 725, 765, 809, 838, 855, 861, 865], "concat_message_funct": [709, 753, 795], "concat_typ": 561, "concat_vid": 561, "concat_vtyp": 561, "concaten": [26, 122, 297, 391, 416, 419, 435, 436, 437, 438, 439, 440, 441, 442, 443, 452, 456, 561, 641, 675, 705, 709, 714, 725, 728, 730, 749, 768, 790, 809, 812, 819, 831, 834, 835, 839, 840, 848, 854, 855, 858, 865], "concentr": [855, 864], "concept": [144, 214, 215, 216, 699, 714, 719, 816, 819, 838, 855], "concis": [9, 708], "conclus": 855, "concret": 89, "concurr": 694, "conda": [394, 395, 396, 828, 831, 834, 835, 844, 852, 855], "condit": [182, 245, 417, 420, 424, 425, 475, 705, 861], "conduct": [14, 161, 163, 303, 308, 315, 316, 499, 691, 696, 712, 730], "confid": 729, "config": [236, 237, 238, 556, 696, 697, 782, 817], "configur": [0, 4, 21, 217, 231, 240, 694, 696, 697, 698, 782, 817, 844, 845, 848, 849, 853, 861], "conflict": [167, 829], "confus": 861, "conjunct": 870, "connect": [1, 4, 96, 120, 130, 133, 137, 144, 151, 152, 161, 162, 163, 171, 173, 174, 178, 180, 181, 182, 188, 220, 229, 230, 235, 338, 341, 344, 352, 353, 391, 394, 397, 405, 407, 408, 412, 413, 416, 418, 419, 428, 430, 541, 554, 558, 569, 574, 575, 635, 649, 660, 681, 694, 700, 728, 729, 730, 731, 820, 821, 827, 836, 837, 840, 848, 849, 852, 853, 854, 855, 861, 864, 865], "consecut": [6, 32, 95, 96, 125, 131, 207, 249, 287, 303, 305, 334, 565, 574, 575, 695, 697, 705, 837], "consequ": [716, 837], "consid": [53, 54, 197, 205, 214, 216, 297, 302, 303, 308, 315, 316, 383, 387, 391, 558, 563, 570, 574, 575, 697, 709, 712, 716, 718, 729, 819, 821, 823, 828, 829, 831, 837, 838, 839, 845, 854, 858, 861, 864], "consider": 861, "consist": [164, 166, 173, 177, 178, 179, 192, 241, 242, 292, 305, 314, 343, 558, 565, 570, 635, 700, 714, 719, 723, 821, 828, 831, 836, 839, 841, 852, 854, 855, 865], "const": 22, "constant": [143, 168, 179, 189, 190, 245, 403, 412, 413, 475, 683, 731, 853, 855, 865], "constexpr": 22, "constitu": [184, 858], "constrain": [195, 428, 430, 865], "constraint": [72, 240, 300, 313, 353, 354, 705, 861], "constrant": [240, 353, 354], "construct": [0, 4, 125, 130, 131, 141, 142, 143, 189, 190, 196, 210, 240, 249, 287, 297, 305, 334, 341, 353, 354, 432, 433, 434, 547, 558, 569, 635, 689, 694, 697, 701, 703, 705, 709, 715, 723, 725, 731, 788, 818, 820, 821, 834, 835, 839, 848, 854, 865, 870], "construct_negative_graph": [731, 771, 814], "constructor": [4, 12, 458, 713], "consum": [291, 709, 722], "consumpt": [709, 715, 716, 722, 824], "contain": [0, 2, 4, 6, 11, 21, 27, 28, 53, 54, 57, 58, 73, 114, 115, 116, 121, 130, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 160, 164, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 186, 191, 192, 194, 195, 207, 220, 236, 240, 241, 242, 247, 287, 292, 294, 297, 298, 300, 303, 304, 305, 308, 309, 313, 315, 316, 317, 320, 328, 334, 341, 346, 351, 353, 384, 389, 392, 397, 400, 401, 402, 405, 407, 408, 410, 411, 412, 415, 421, 432, 433, 434, 451, 458, 477, 541, 547, 563, 564, 565, 566, 569, 574, 575, 588, 634, 635, 642, 683, 689, 690, 694, 696, 697, 698, 704, 710, 714, 719, 728, 731, 812, 814, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 848, 854, 858, 859, 861, 868], "containertyp": 22, "content": [26, 159, 199, 201, 356, 688, 689, 697, 718, 735, 775, 837, 845], "context": [4, 21, 31, 42, 62, 63, 70, 89, 108, 125, 126, 131, 210, 246, 247, 249, 250, 287, 293, 297, 303, 305, 308, 310, 315, 316, 334, 335, 339, 340, 357, 387, 476, 477, 540, 548, 549, 563, 564, 565, 566, 635, 693, 704, 710, 715, 819, 829, 837, 871], "context\ub97c": 801, "contigu": [4, 321, 332, 333, 353, 541, 569, 696, 716, 848], "continu": [297, 392, 641, 689, 712, 726, 766, 810, 824], "contrari": [116, 821], "contrast": [241, 648, 654, 655, 656, 700, 716, 731, 771, 814, 836, 853, 855, 864], "contrib": 865, "contribut": [297, 428, 430, 563, 723, 865], "control": [0, 4, 13, 93, 113, 309, 390, 429, 431, 548, 549, 560, 645, 646, 658, 659, 664, 689, 816, 845], "contruct": [732, 815], "conv": [13, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 430, 460, 461, 462, 463, 464, 465, 466, 467, 721, 723, 725, 732, 763, 772, 807, 809, 815, 852, 853, 855], "conv1": [409, 430, 431, 714, 719, 730, 732, 758, 759, 760, 762, 770, 772, 800, 802, 803, 805, 813, 815, 818, 831, 836, 838, 839, 840, 870], "conv2": [409, 430, 431, 714, 719, 730, 732, 758, 759, 760, 762, 770, 772, 800, 802, 803, 805, 813, 815, 818, 831, 836, 838, 839, 840, 870], "conveni": [9, 687, 728, 839, 870], "convent": [0, 5, 125, 133, 144, 708], "converg": [214, 303, 315, 563, 722, 819], "convers": [22, 231, 557, 603, 641, 696, 701, 704, 722, 823], "convert": [9, 22, 109, 110, 118, 119, 125, 126, 127, 138, 139, 140, 146, 148, 169, 231, 240, 248, 249, 250, 322, 323, 325, 326, 585, 587, 590, 591, 603, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 670, 671, 689, 695, 696, 697, 701, 704, 717, 721, 722, 789, 823, 828, 837, 841, 848, 849, 853, 854], "convert_partit": 782, "convnet": 855, "convolut": [134, 149, 155, 185, 187, 193, 209, 385, 388, 391, 392, 393, 395, 398, 399, 400, 403, 409, 410, 412, 413, 414, 415, 417, 418, 420, 421, 422, 423, 424, 446, 459, 474, 558, 633, 654, 657, 658, 669, 712, 718, 726, 728, 730, 732, 768, 798, 804, 812, 813, 815, 819, 822, 825, 838, 840, 854, 855, 856, 861, 864, 865, 868], "convolutin": 854, "convolution\uc740": 810, "convolution\uc744": 815, "convolution\uc758": 815, "coo": [31, 32, 41, 56, 126, 131, 231, 240, 250, 287, 325, 334, 567, 589, 612, 823, 854], "coo_matrix": [126, 250, 839, 854], "coolwarm": 854, "cooper": 166, "coord": 451, "coord_feat": 403, "coord_feat_out": 403, "coordin": [12, 31, 126, 178, 179, 250, 310, 341, 403, 412, 433, 451, 547, 569, 579, 589, 612, 626, 823], "coordint": 412, "copi": [5, 7, 9, 34, 40, 56, 64, 71, 73, 89, 93, 94, 100, 108, 113, 116, 126, 130, 131, 235, 246, 247, 249, 250, 287, 290, 291, 297, 305, 310, 312, 317, 318, 334, 335, 338, 339, 340, 344, 352, 416, 476, 477, 483, 484, 485, 486, 487, 488, 540, 556, 557, 563, 564, 565, 566, 574, 575, 604, 634, 637, 638, 639, 640, 642, 643, 650, 673, 674, 676, 696, 697, 703, 705, 708, 709, 715, 720, 747, 752, 788, 790, 793, 802, 820, 829, 831, 837, 838, 839, 841, 854, 858, 861, 865, 871], "copy_": [5, 20, 673, 858, 864, 865], "copy_edata": [99, 111, 116, 130, 557, 563, 564, 565, 566, 643, 650], "copy_fil": [742, 783], "copy_lh": [500, 501], "copy_ndata": [99, 111, 116, 130, 338, 557, 563, 564, 565, 566, 634, 643], "copy_rh": [500, 501], "copy_to": [290, 291, 713, 714, 716, 717, 719, 720, 721, 828, 829, 831, 871], "copy_to_shared_memori": [297, 312], "copy_u": [5, 73, 91, 92, 93, 94, 100, 113, 426, 427, 429, 458, 676, 677, 678, 679, 680, 710, 718, 722, 725, 729, 754, 761, 765, 769, 796, 804, 806, 809, 838, 852, 854, 858], "copy_u_sum": 9, "copy_v": 9, "copyreducebackward": 404, "cora": [25, 153, 154, 289, 691, 737, 777, 818, 819, 821, 824, 828, 839, 852], "cora_v2": [139, 691, 737, 777, 818, 819, 821], "corabinari": 854, "coraful": 25, "corafulldata": [691, 737, 777], "corafulldataset": 219, "coragraphdataset": [139, 383, 426, 430, 818, 819, 821, 828, 836, 838, 839, 852], "core": [8, 694, 699, 818, 823, 824, 845, 846, 852, 855, 858, 870], "cornel": 155, "corner": 725, "corpu": 865, "correct": [21, 22, 732, 772, 815, 852], "correctli": [220, 697, 817, 854], "correspond": [7, 20, 21, 22, 27, 43, 46, 53, 54, 74, 90, 101, 102, 103, 107, 109, 113, 117, 118, 119, 122, 134, 139, 147, 148, 156, 165, 178, 179, 182, 192, 205, 210, 213, 214, 216, 221, 232, 239, 240, 297, 302, 303, 305, 308, 310, 315, 316, 320, 321, 332, 333, 341, 344, 357, 385, 394, 395, 396, 405, 416, 425, 428, 432, 433, 434, 444, 447, 451, 452, 456, 547, 557, 559, 561, 570, 613, 614, 633, 641, 649, 651, 661, 662, 669, 689, 695, 697, 704, 705, 708, 717, 718, 719, 726, 729, 730, 732, 818, 819, 820, 821, 828, 831, 834, 835, 836, 838, 854, 855, 858, 865], "correspondenc": 388, "corrsepond": 4, "corrupt": [563, 564, 565, 566, 694, 780], "cosin": [341, 432, 434, 452, 569], "cost": [9, 14, 210, 641], "costli": [640, 716, 830], "could": [9, 21, 22, 32, 66, 216, 231, 240, 241, 242, 292, 293, 297, 301, 309, 320, 357, 389, 390, 435, 437, 441, 442, 500, 501, 558, 567, 574, 575, 640, 669, 689, 691, 695, 697, 709, 713, 717, 718, 730, 732, 823, 829, 834, 835, 839, 845, 848, 854, 858], "coulomb": 177, "count": [111, 231, 303, 315, 341, 432, 434, 569, 594, 597, 598, 599, 643, 671, 836, 845], "counter": 844, "counterpart": [211, 212, 293, 320, 694, 697, 848, 849], "coupl": 864, "cours": [155, 187, 193], "coustom": 785, "cout": 22, "covari": 412, "cover": [14, 21, 209, 693, 694, 695, 696, 697, 701, 712, 720, 816, 822, 830, 865], "cp": 387, "cpp": [820, 841, 854], "cpplint": 21, "cpu": [4, 9, 10, 14, 21, 31, 42, 62, 63, 89, 108, 112, 118, 119, 125, 126, 130, 131, 209, 210, 216, 217, 241, 242, 249, 250, 287, 292, 317, 334, 337, 341, 344, 352, 432, 433, 434, 547, 548, 549, 556, 560, 561, 563, 564, 565, 566, 569, 574, 575, 635, 642, 643, 697, 703, 714, 715, 716, 719, 720, 747, 759, 788, 801, 802, 816, 817, 819, 820, 823, 826, 828, 829, 831, 834, 835, 836, 847, 848, 849, 858, 865, 870], "cpu_best_practis": [826, 847], "cpu_count": [829, 871], "cpu\uc5d0\uc11c\ub9cc": 801, "cpu\uc758": 802, "crawlscript": 750, "creat": [1, 3, 4, 5, 9, 12, 13, 21, 22, 27, 28, 41, 42, 44, 48, 51, 55, 56, 57, 58, 60, 61, 64, 65, 70, 71, 77, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 104, 107, 109, 116, 118, 119, 125, 126, 128, 129, 131, 138, 139, 148, 156, 157, 158, 191, 197, 205, 220, 235, 246, 248, 249, 250, 287, 293, 297, 301, 302, 327, 334, 335, 339, 340, 351, 356, 357, 384, 385, 417, 420, 435, 436, 437, 438, 440, 441, 442, 443, 455, 540, 551, 552, 557, 558, 562, 567, 571, 572, 573, 610, 612, 613, 614, 615, 626, 630, 643, 645, 646, 653, 672, 675, 686, 688, 689, 691, 693, 694, 695, 697, 698, 699, 702, 703, 704, 711, 714, 719, 721, 722, 726, 728, 735, 775, 777, 779, 789, 790, 806, 817, 818, 819, 820, 829, 831, 834, 835, 836, 839, 840, 848, 849, 852, 854, 855, 858, 861, 864, 865, 871], "create_block": [127, 635], "create_dataload": [829, 831, 871], "create_dev_conda_env": 817, "create_featur": 853, "create_formats_": [56, 89, 715], "createcacul": 22, "createcalcul": 22, "creation": [4, 210, 693, 725, 831, 837, 841], "credit": [836, 837, 838, 839, 840, 841], "crisi": 166, "criteria": [713, 848], "criterion": [192, 426, 430, 431, 865, 870], "critic": [9, 21, 22, 137, 171, 180, 182, 188, 426, 427, 429, 431, 701, 855], "cross": [73, 101, 102, 696, 697, 710, 731, 796, 814, 839, 853, 854, 865], "cross_entropi": [427, 428, 429, 714, 721, 722, 728, 730, 732, 768, 770, 772, 806, 812, 813, 815, 819, 821, 829, 831, 836, 838, 840, 853, 854, 871], "cross_reduc": 73, "cross_sum": 73, "crossentropyloss": [426, 430, 431, 693, 722, 739, 779, 818, 848, 849, 870], "crowdsourc": 188, "crucial": [426, 427, 428, 430], "cs224w": 836, "csc": [32, 41, 56, 89, 131, 231, 240, 287, 297, 310, 321, 327, 333, 334, 565, 567, 574, 613, 823], "csc_format": [321, 333], "csc_indptr": [297, 325, 327, 721, 834, 835], "cscforamtbas": 311, "cscformatbas": [297, 300, 303, 308, 310, 311, 321, 333, 828, 831], "cscsamplinggraph": 311, "csr": [32, 41, 56, 118, 119, 126, 131, 240, 250, 287, 334, 565, 567, 574, 575, 614, 823], "csr_csc_g": 56, "csr_g": 56, "csr_matrix": [126, 250], "csrc": [841, 854], "csrmmbackward": 118, "csv": [148, 309, 686, 688, 697, 735, 775, 782, 833, 834, 835], "csvdataset": 689, "csvdatatset": 689, "csv\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u683c\u5f0f": 745, "csv\uac00": 786, "ctx": [31, 62, 63], "cu": 387, "cu118": [818, 819, 820, 821], "cu12": [828, 831, 834, 835], "cu121": [828, 829, 831, 834, 835], "cubla": [828, 831, 834, 835], "cuda": [4, 14, 89, 108, 110, 125, 126, 210, 248, 249, 250, 287, 290, 291, 295, 298, 317, 328, 334, 341, 394, 395, 396, 432, 434, 569, 580, 603, 636, 703, 714, 719, 722, 747, 757, 758, 760, 762, 788, 799, 800, 801, 803, 805, 806, 817, 818, 819, 820, 821, 828, 829, 831, 834, 835, 836, 865, 870, 871], "cuda_g": [703, 747, 788], "cuda\ub294": 801, "cudf": 248, "cudnn": [828, 831, 834, 835], "cufft": [828, 831, 834, 835], "cugraph": [13, 110, 248, 394, 395, 396, 636], "cugraph_g": [110, 248, 636], "cugraph_graph": 248, "cugraphbaseconv": [394, 395, 396], "cumsum": 695, "cup": [151, 152], "cupti": [828, 831, 834, 835], "cur": [695, 781], "curand": [828, 831, 834, 835], "current": [1, 4, 14, 20, 21, 27, 28, 56, 130, 138, 139, 144, 200, 220, 232, 236, 239, 240, 244, 293, 353, 354, 406, 409, 455, 556, 562, 603, 694, 713, 816, 817, 849, 858], "current_devic": [210, 298], "curv": [839, 855], "cusolv": [828, 831, 834, 835], "cuspars": [118, 119, 828, 831, 834, 835], "custom": [4, 194, 213, 385, 415, 556, 635, 685, 686, 687, 695, 697, 700, 712, 714, 715, 717, 719, 720, 721, 723, 726, 732, 774, 803, 827, 831, 841], "customgraphconv": [718, 761, 804], "customheterographconv": [718, 761, 804], "customiz": [302, 732], "customized_parser_dataset": 689, "customized_sample_neg": 717, "customized_sample_neighbor": 713, "customizednegativesampl": 717, "customizedneighborsampl": 713, "cut": [240, 354, 685, 697, 782], "cuthil": 556, "cutoff": [178, 391], "cutom": 721, "cv": [178, 179], "cycl": [141, 172, 189, 246, 335, 476, 540, 861], "cycle_s": 189, "cython": [21, 817], "d": [4, 9, 14, 21, 120, 138, 139, 140, 146, 169, 170, 178, 179, 233, 243, 328, 354, 388, 390, 393, 397, 404, 409, 413, 417, 419, 420, 422, 423, 425, 426, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 441, 442, 444, 445, 448, 449, 453, 454, 457, 499, 502, 551, 552, 600, 610, 612, 613, 614, 615, 617, 618, 619, 620, 622, 626, 630, 645, 646, 668, 678, 679, 680, 689, 704, 730, 770, 813, 818, 819, 820, 823, 839, 852, 854, 864, 870], "d1": [388, 499, 502, 823], "d2": [388, 499, 502, 823], "d_": [243, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 452, 854], "d_1": [707, 751, 792], "d_2": [707, 751, 792], "d_e": 821, "d_e_inv": 821, "d_ff": [439, 440], "d_hat": [721, 818, 819, 823], "d_hat_invsqrt": [818, 819], "d_head": [439, 440], "d_i": 9, "d_k": 865, "d_model": [439, 440], "d_t": [243, 427, 428, 429], "d_v": 821, "d_v_invsqrt": 821, "dada": [834, 835], "dadta": [834, 835], "dai": [21, 164, 181, 688], "damm": 858, "data": [0, 1, 3, 4, 5, 6, 7, 13, 14, 22, 26, 27, 28, 34, 35, 41, 43, 44, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 68, 70, 73, 74, 75, 77, 87, 88, 89, 91, 92, 93, 94, 100, 103, 104, 108, 112, 113, 114, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 232, 236, 238, 239, 240, 246, 247, 249, 250, 251, 287, 290, 291, 292, 293, 294, 300, 301, 303, 305, 308, 309, 310, 314, 315, 316, 334, 335, 339, 340, 341, 346, 351, 353, 355, 383, 385, 387, 388, 395, 402, 420, 426, 427, 428, 429, 430, 431, 432, 434, 451, 453, 455, 457, 459, 476, 477, 499, 540, 541, 548, 549, 556, 557, 567, 569, 574, 575, 585, 586, 587, 590, 591, 603, 613, 614, 615, 635, 637, 638, 639, 641, 642, 643, 670, 679, 684, 685, 687, 690, 693, 696, 698, 699, 701, 702, 703, 704, 705, 706, 708, 710, 712, 713, 716, 718, 721, 722, 724, 727, 728, 731, 732, 733, 734, 735, 736, 737, 738, 740, 742, 749, 752, 754, 757, 758, 761, 767, 768, 770, 771, 772, 773, 774, 775, 776, 777, 778, 780, 781, 782, 783, 788, 790, 791, 793, 796, 799, 800, 804, 806, 811, 812, 813, 814, 815, 817, 818, 819, 820, 823, 827, 833, 836, 837, 838, 839, 844, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865], "data0": 689, "data1": 689, "data_dict": [131, 334], "data_it": 865, "data_load": 293, "data_path": 148, "data_pip": 301, "data_root_dir": [240, 696, 697, 741, 782], "data_type_dict": [691, 737, 777], "databas": [164, 841], "dataflow": 854, "datafram": [148, 248, 689, 834, 835], "datail": 179, "dataload": [10, 11, 13, 183, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 293, 303, 313, 315, 383, 387, 426, 430, 431, 455, 683, 685, 690, 691, 693, 694, 713, 714, 715, 716, 717, 719, 720, 721, 730, 736, 737, 739, 740, 757, 758, 759, 760, 762, 770, 776, 777, 779, 780, 799, 800, 801, 802, 803, 805, 813, 820, 828, 829, 831, 840, 844, 845, 848, 849, 854, 858, 870, 871], "dataloader\u4e2d\u8fd0\u884c": 740, "dataloader\u5728\u6bcf\u4e2a\u8bad\u7ec3\u5468\u671f\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u91c7\u6837\u5de5\u4f5c\u8fdb\u7a0b": 740, "dataloader\u76f8\u540c\u7684\u63a5\u53e3": 740, "dataloader\ub294": 780, "dataloader\ub97c": [800, 805], "dataloader\uc5d0\uc11c": 780, "dataloader\uc640": 780, "datapars": 689, "datapip": [7, 290, 291, 293, 295, 300, 301, 303, 306, 307, 308, 313, 315, 316, 319, 713, 714, 716, 717, 719, 720, 721, 827, 828, 829, 831, 871], "datapoint": [196, 207], "dataset": [4, 13, 14, 21, 23, 25, 120, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 210, 213, 245, 289, 291, 304, 309, 383, 426, 428, 430, 431, 475, 683, 686, 687, 688, 692, 693, 694, 719, 721, 722, 727, 730, 732, 736, 737, 739, 740, 767, 770, 774, 776, 777, 779, 780, 811, 813, 818, 819, 820, 821, 824, 827, 829, 833, 834, 835, 838, 839, 840, 842, 852, 855, 870, 871], "dataset_nam": [292, 304, 309, 687, 689, 734, 774, 834, 835], "dataset\ub97c": 773, "datatyp": [722, 823], "dateset": 824, "dateutil": [828, 831, 834, 835], "datset": [25, 172], "dcmake_configuration_typ": 817, "dcmake_cxx_flag": 817, "dd": [25, 168, 186, 865], "ddgl_export": 817, "ddmlc_force_shared_crt": 817, "ddp": [293, 844, 870, 871], "ddp_seed": [210, 213], "de": 865, "deal": [122, 718, 730, 862, 868], "dealloc": 845, "debian": 817, "debug": [4, 23], "dec": 865, "dec_graph": [728, 768, 812], "decai": 409, "decid": [9, 22, 131, 334, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 424, 704, 861, 865], "declar": 694, "decod": [439, 865], "decompos": [388, 420, 858, 865], "decomposit": [388, 395, 420, 459, 719, 853], "decomposition\uc740": 805, "decor": [293, 301], "decreas": [426, 427], "dedic": 231, "dedupl": [303, 308], "deep": [4, 23, 209, 219, 409, 412, 428, 430, 441, 654, 725, 730, 732, 823, 824, 825, 837, 858, 861, 862, 868], "deepchem": [691, 737, 777], "deepcopi": 861, "deepset": 448, "deepset_encod": 448, "deepwalk": 836, "def": [4, 5, 10, 20, 22, 53, 54, 70, 73, 100, 218, 251, 252, 263, 264, 265, 266, 300, 301, 313, 385, 416, 418, 426, 427, 428, 429, 430, 431, 455, 458, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 687, 688, 689, 690, 691, 692, 694, 695, 708, 709, 713, 714, 716, 717, 718, 719, 721, 722, 724, 725, 726, 728, 730, 731, 732, 734, 735, 736, 737, 738, 740, 752, 753, 757, 758, 759, 760, 761, 762, 764, 765, 766, 768, 770, 771, 772, 774, 775, 776, 777, 778, 780, 793, 795, 799, 800, 802, 803, 804, 805, 806, 808, 809, 810, 812, 813, 814, 815, 818, 819, 820, 821, 823, 828, 829, 831, 836, 838, 839, 840, 841, 844, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "defalt": 444, "default": [4, 6, 9, 10, 14, 23, 27, 28, 31, 32, 34, 35, 41, 48, 51, 53, 54, 61, 62, 63, 79, 81, 82, 88, 89, 116, 117, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 205, 207, 208, 209, 210, 213, 214, 216, 219, 226, 231, 232, 235, 236, 239, 240, 245, 246, 247, 249, 250, 287, 289, 290, 291, 293, 295, 300, 309, 310, 313, 327, 334, 335, 338, 339, 340, 341, 342, 344, 346, 353, 354, 357, 383, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 444, 445, 446, 447, 448, 449, 450, 451, 455, 457, 475, 476, 477, 540, 542, 544, 547, 548, 549, 550, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 569, 570, 633, 634, 635, 640, 641, 642, 643, 651, 656, 661, 665, 667, 668, 669, 687, 689, 694, 695, 696, 697, 698, 704, 705, 708, 774, 789, 790, 817, 820, 823, 827, 828, 829, 831, 833, 834, 835, 845, 848, 849, 861, 865, 871], "defin": [4, 5, 7, 9, 13, 27, 28, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 120, 146, 156, 169, 210, 220, 243, 244, 245, 251, 252, 263, 264, 265, 266, 313, 314, 344, 345, 387, 391, 397, 409, 410, 415, 426, 427, 428, 429, 430, 431, 439, 453, 454, 474, 475, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 685, 686, 687, 689, 693, 694, 702, 705, 707, 708, 722, 728, 730, 731, 732, 752, 772, 779, 790, 793, 806, 812, 814, 815, 818, 819, 821, 823, 833, 852, 854, 855, 865, 870], "definit": [66, 72, 240, 391, 621, 623, 624, 625, 693, 699, 714, 717, 721, 732, 853, 854, 858], "deform": 864, "defus": [214, 297, 303, 315, 563], "deg": [725, 765, 809], "deg_emb": 685, "deg_g": 854, "deg_lg": 854, "deg_proj": 854, "degg_batch": 183, "deglg_batch": 183, "degrad": 214, "degre": [4, 13, 60, 87, 120, 130, 165, 181, 183, 217, 245, 389, 394, 395, 396, 397, 399, 401, 404, 405, 407, 408, 409, 412, 415, 419, 422, 423, 429, 431, 445, 475, 478, 658, 659, 664, 668, 683, 696, 697, 717, 721, 725, 818, 819, 821, 823, 837, 838, 852, 854, 855, 858], "degree_as_nlabel": 165, "degree_embed": 445, "degree_encod": [445, 685], "degreeencod": 685, "degree\uac00": 809, "degree\ub4e4": 782, "degree\uc758": 803, "del": 861, "delet": [21, 180, 303, 308, 553, 554], "delimit": 697, "deliv": 861, "delta": [178, 179, 397, 419], "demand": 291, "demo": 820, "demonstr": [42, 453, 454, 643, 689, 721, 727, 728, 822, 834, 835, 841, 848, 856, 858, 865, 868], "denomin": [4, 10, 406], "denot": [120, 243, 391, 405, 412, 423, 457, 667, 818, 819, 852, 853, 854, 855, 858], "dens": [9, 13, 226, 297, 337, 398, 399, 400, 444, 447, 499, 500, 502, 559, 604, 608, 609, 616, 619, 627, 685, 694, 714, 723, 763, 780, 800, 807, 819, 820, 823], "densiti": [183, 197, 559, 701, 745, 786, 854, 861], "departur": 858, "depend": [9, 21, 31, 89, 126, 131, 182, 210, 211, 212, 214, 215, 216, 220, 245, 249, 250, 287, 303, 305, 315, 334, 394, 395, 396, 455, 475, 551, 552, 563, 689, 697, 700, 710, 712, 714, 715, 716, 718, 719, 723, 798, 830, 845, 855, 858, 865], "dependency\ub4e4\uc744": 805, "dependency\uc5d0\uc11c": 800, "deploi": [856, 868], "deprec": [116, 144, 168, 177, 178, 179, 186, 231, 235, 634, 644, 854], "depth": [1, 229, 230, 560], "deriv": [397, 728, 819], "desc": 820, "descend": [645, 646], "descent": [14, 341, 432, 434, 569, 712, 798, 870], "describ": [5, 21, 43, 46, 47, 74, 75, 103, 167, 240, 303, 315, 318, 404, 420, 459, 635, 640, 648, 649, 654, 655, 656, 657, 697, 708, 712, 725, 727, 728, 731, 819, 821, 830, 831, 833, 834, 835, 836, 839, 841, 852, 854, 855, 861, 864], "descript": [61, 88, 131, 137, 160, 178, 179, 180, 287, 318, 334, 853, 865], "deserv": 855, "design": [4, 150, 154, 176, 244, 289, 305, 391, 565, 685, 694, 695, 697, 710, 716, 720, 730, 823, 827, 832, 854, 865], "desir": [20, 22, 120, 226, 559, 658, 659, 664, 696], "desktop": 845, "despit": 697, "dest": 861, "dest_list": 861, "destin": [4, 5, 9, 26, 27, 30, 31, 32, 34, 39, 43, 44, 45, 47, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 73, 79, 80, 82, 87, 88, 90, 91, 92, 93, 94, 100, 104, 105, 107, 109, 113, 114, 117, 118, 119, 123, 125, 126, 127, 131, 200, 214, 216, 220, 226, 227, 231, 233, 243, 247, 248, 250, 287, 293, 297, 301, 312, 319, 320, 321, 333, 334, 352, 357, 385, 392, 394, 395, 396, 398, 399, 400, 401, 402, 405, 407, 408, 418, 421, 452, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 492, 494, 496, 498, 500, 501, 505, 506, 507, 508, 509, 511, 512, 513, 514, 515, 517, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 548, 551, 553, 555, 556, 559, 565, 572, 574, 575, 635, 650, 651, 657, 666, 674, 689, 696, 697, 705, 708, 710, 717, 724, 725, 726, 790, 796, 799, 829, 830, 834, 837, 838, 839, 841, 854, 858, 865, 871], "destination_typ": [705, 749, 790], "destroi": [4, 694], "destroy_process_group": 870, "dests_prob": 861, "dests_scor": 861, "detach": [383, 820, 828, 829, 831, 838, 848, 854, 871], "detail": [4, 9, 21, 22, 91, 146, 169, 209, 214, 216, 217, 220, 222, 223, 224, 225, 230, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 558, 564, 621, 623, 624, 625, 682, 683, 685, 689, 691, 693, 694, 695, 697, 701, 708, 711, 713, 714, 715, 717, 719, 720, 721, 725, 732, 816, 817, 824, 834, 835, 838, 841, 848, 849, 855, 861, 865, 870, 871], "detect": [145, 161, 163, 181, 183, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 856, 868], "determin": [4, 26, 231, 241, 242, 291, 297, 397, 419, 451, 559, 563, 564, 565, 566, 641, 695, 697, 705, 722, 724, 725, 864], "determinist": [131, 198, 303, 315, 334, 385, 556], "dev": [183, 184, 207, 722, 817, 818, 819, 820, 821, 823, 858], "dev_data": 184, "devel": 817, "develop": [22, 27, 28, 30, 31, 41, 44, 45, 56, 82, 95, 96, 101, 102, 104, 105, 109, 114, 115, 357, 553, 554, 640, 641, 694, 712, 714, 719, 729, 817, 837, 845, 848], "deviat": [397, 419, 451], "devic": [4, 7, 13, 31, 34, 35, 43, 46, 48, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 74, 87, 88, 89, 93, 94, 100, 103, 108, 125, 126, 130, 131, 208, 209, 210, 211, 212, 214, 216, 217, 246, 247, 248, 249, 250, 287, 290, 294, 297, 298, 305, 310, 312, 317, 318, 325, 328, 334, 335, 339, 340, 341, 394, 395, 396, 432, 433, 434, 455, 476, 477, 540, 547, 548, 549, 556, 562, 563, 564, 565, 566, 569, 583, 603, 615, 683, 693, 703, 704, 713, 714, 715, 716, 717, 719, 720, 721, 722, 739, 747, 757, 758, 759, 760, 762, 779, 788, 799, 800, 801, 802, 803, 805, 806, 819, 820, 823, 828, 829, 831, 834, 835, 838, 844, 854, 858, 865, 870, 871], "device_count": [829, 870, 871], "device_id": 870, "device_typ": 722, "df": [229, 230, 248, 543, 689, 834, 835], "dfrac": [444, 820], "dfs_labeled_edg": 230, "dfs_labeled_edges_gener": 543, "dgl": [13, 14, 20, 23, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 707, 708, 709, 710, 712, 713, 714, 717, 718, 719, 722, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 746, 747, 748, 749, 750, 752, 753, 754, 757, 758, 759, 760, 761, 762, 763, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 781, 782, 787, 788, 789, 791, 793, 794, 795, 796, 799, 800, 802, 803, 804, 805, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 824, 827, 830, 838, 839, 844, 845, 848, 849, 856, 859, 861, 864, 866, 870, 871], "dgl_declare_object_type_info": 22, "dgl_doc_dev": [834, 835, 858, 861, 864], "dgl_download_dir": 23, "dgl_g": 819, "dgl_home": 21, "dgl_library_path": 21, "dgl_log_debug": 23, "dgl_mxnet_set_np_shap": 817, "dgl_partition_to_graphbolt": 848, "dgl_register_glob": 22, "dgl_repo": 23, "dgl_warn": [858, 861, 864], "dglarg": 22, "dglbackend": [21, 23, 817, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 858, 861, 864, 870, 871], "dglblock": [127, 131, 394, 395, 396, 635], "dglbuiltindataset": [134, 141, 142, 143, 145, 147, 159, 160, 162, 164, 165, 166, 168, 174, 175, 181, 184, 186, 189, 190, 192, 194, 195, 688, 691, 735, 737, 775, 777], "dgldataset": [138, 139, 140, 148, 167, 172, 173, 177, 178, 179, 183, 197, 198, 304, 686, 689, 691, 727, 733, 734, 737, 767, 773, 777, 811], "dgldataset\u7c7b": [733, 750], "dgldefaultdir": 23, "dglerror": [27, 28, 95, 96, 389, 401, 404, 405, 406, 407, 408, 409, 412, 415, 422, 635, 703, 705, 747, 749, 788, 790], "dglfunccal": 22, "dglgraph": [0, 4, 5, 6, 9, 13, 22, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 209, 210, 222, 223, 224, 225, 229, 230, 231, 234, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 293, 326, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 357, 383, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 457, 458, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 681, 683, 689, 690, 691, 692, 694, 695, 697, 699, 701, 702, 704, 705, 725, 730, 736, 737, 740, 743, 745, 746, 747, 748, 749, 757, 758, 760, 765, 770, 776, 777, 778, 780, 781, 782, 784, 786, 787, 789, 790, 799, 800, 803, 809, 813, 837, 838, 839, 840, 852, 853, 854, 855, 858, 861, 864, 865], "dglgraphinst": 326, "dglgraphproppreddataset": [138, 690, 736, 776, 820], "dglgraph\ub85c": 786, "dgllinkproppreddataset": [690, 736, 776, 849], "dglnn": [385, 714, 716, 717, 719, 730, 732, 758, 760, 762, 770, 772, 800, 803, 805, 813, 815, 820, 828, 848, 849, 871], "dglnodeproppreddataset": [690, 736, 776, 848], "dglretvalu": 22, "dglroutinglay": 864, "dglsp": [12, 577, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 721, 818, 819, 820, 821, 823], "dglwarn": [858, 861, 864], "dgl\u4e0d\u63d0\u4f9b\u5bf9\u6765\u81ea\u591a\u4e2a\u8bad\u7ec3\u5668\u7684\u5e76\u53d1\u5199\u5165\u7684\u4fdd\u62a4": 740, "dgl\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 761, "dgl\u4e2d\u7684": 760, "dgl\u4e3a\u5206\u5e03\u5f0f\u5f20\u91cf\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u5355\u673a\u666e\u901a\u5f20\u91cf\u7684\u63a5\u53e3": 740, "dgl\u4e5f\u4f1a\u6839\u636e\u8fb9\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f": 748, "dgl\u4e5f\u652f\u6301\u4ece\u5176\u4ed6\u7684\u6570\u636e\u6e90\u6765\u521b\u5efa\u56fe\u5bf9\u8c61": 748, "dgl\u4e5f\u652f\u6301\u76f4\u63a5\u4eces3": 745, "dgl\u4ec5\u5141\u8bb8\u521b\u5efa\u5355\u4e2adistgraph\u5bf9\u8c61": 740, "dgl\u4ec5\u652f\u6301\u5bc6\u96c6\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 740, "dgl\u4ee5\u540e\u5c06\u4e3a\u7a00\u758f\u5d4c\u5165\u6dfb\u52a0\u66f4\u591a\u7684\u4f18\u5316\u5668": 740, "dgl\u4f18\u5316\u4e86\u6d88\u606f\u4f20\u9012\u7684\u5185\u5b58\u6d88\u8017\u548c\u8ba1\u7b97\u901f\u5ea6": 753, "dgl\u4f1a\u5212\u5206\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 740, "dgl\u4f1a\u5728\u5185\u90e8\u5c061\u6761\u65e0\u5411\u8fb9\u8f6c\u6362\u4e3a2\u6761\u6709\u5411\u8fb9": 745, "dgl\u4f1a\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 739, "dgl\u4f1a\u5c06\u5b83\u4eec\u5206\u7247\u5e76\u5b58\u50a8\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u673a\u4e0a": 740, "dgl\u4f1a\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u6bcf\u6761\u8fb9": 746, "dgl\u4f1a\u68c0\u67e5\u8f93\u5165\u56fe\u4e2d\u662f\u5426\u6709\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9": 765, "dgl\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u7684\u6574\u578b\u5f20\u91cf": 748, "dgl\u4f7f\u7528\u4e00\u4e2a\u5305\u542b2\u4e2a\u8282\u70b9\u5f20\u91cf\u7684\u5143\u7ec4": 748, "dgl\u4f7f\u7528\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u6765\u8868\u793a\u4e00\u4e2a\u8282\u70b9": 748, "dgl\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684meti": 741, "dgl\u4fdd\u8bc1\u8fb9\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u4e0e\u751f\u6210\u7684\u5757\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u76f8\u540c": 758, "dgl\u5047\u5b9a\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7684\u9700\u8981\u5408\u5e76\u7684\u7279\u5f81\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u6570\u636e\u7c7b\u578b": 749, "dgl\u5185\u7f6e\u4e86\u5e38\u89c1\u7684\u56fe\u8bfb\u51fa\u51fd\u6570": 770, "dgl\u5185\u7f6e\u7684nn\u6a21\u5757\u5982\u679c\u5728forward\u51fd\u6570\u4e2d\u652f\u6301\u4e00\u4e2a\u53ef\u9009\u7684": 769, "dgl\u5185\u7f6e\u7684\u6d88\u606f": 765, "dgl\u53ef\u4ee5\u5904\u7406\u6700\u591a": 748, "dgl\u53ef\u4ee5\u95f4\u63a5\u5730\u4ece\u8fd9\u4e9b\u6765\u6e90\u521b\u5efa\u56fe": 745, "dgl\u540c\u6837\u652f\u6301\u5b83\u5728mxnet\u548ctensorflow\u540e\u7aef\u91cc\u7684\u5b9e\u73b0": [761, 770], "dgl\u548c\u8fd9\u4e9b\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u5176\u72ec\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c": 763, "dgl\u5728": 733, "dgl\u5728\u5185\u90e8\u5c06scipy\u77e9\u9635\u548cnetworkx\u56fe\u8f6c\u6362\u4e3a\u5f20\u91cf\u6765\u521b\u5efa\u56fe": 745, "dgl\u5728\u547d\u540d\u7a7a\u95f4": 752, "dgl\u5728\u96c6\u7fa4\u6240\u6709\u673a\u5668\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u8bad\u7ec3\u811a\u672c": 739, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6574\u56fe\u5206\u7c7b\u7684\u6837\u4f8b": 770, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5206\u5e03\u5f0f\u7ec4\u4ef6\u4ee5\u652f\u6301\u5206\u5e03\u5f0f\u8bad\u7ec3": 739, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7ba1\u9053": 756, "dgl\u5b9e\u73b0\u4e86\u591a\u4e2a\u53ef\u7528\u4e8e\u751f\u6210\u8fb9\u754c\u7684\u51fd\u6570": 757, "dgl\u5bf9\u8fb9\u754c\u5b50\u56fe\u505a\u4e86\u4e00\u4e2a\u8f6c\u6362": 757, "dgl\u5c06\u56fe\u5212\u5206\u7ed3\u679c\u5b58\u50a8\u5728\u8f93\u51fa\u76ee\u5f55\u4e2d\u7684\u591a\u4e2a\u6587\u4ef6\u4e2d": 741, "dgl\u5c06\u9700\u8981\u8ba1\u7b97gnn\u8f93\u51fa\u7684\u8282\u70b9\u79f0\u4e3a": 757, "dgl\u5df2\u7ecf\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528\u7684": 763, "dgl\u5efa\u8bae": 752, "dgl\u5efa\u8bae\u4f7f\u7528\u8282\u70b9\u63a9\u7801\u6765\u6307\u5b9a\u6570\u636e\u96c6\u7684\u5212\u5206": 737, "dgl\u5efa\u8bae\u7528\u6237\u5b9e\u73b0\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e\u7684\u51fd\u6570": 738, "dgl\u5efa\u8bae\u7528\u6237\u5c3d\u91cf\u51cf\u5c11\u8fb9\u7684\u7279\u5f81\u7ef4\u6570": 753, "dgl\u5efa\u8bae\u8ba9": 737, "dgl\u5efa\u8bae\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ece\u70b9\u5230\u8fb9\u7684\u5185\u5b58\u62f7\u8d1d": 753, "dgl\u63a8\u8350\u4f7f\u7528tensor\u4f5c\u4e3adgl": 748, "dgl\u63a8\u8350\u7528\u6237\u5c06\u56fe\u6570\u636e\u5904\u7406\u4e3a": 733, "dgl\u63a8\u8350\u91cd\u65b0\u6392\u5217\u56fe\u7684\u8282\u70b9": 737, "dgl\u63d0\u4f9b": 740, "dgl\u63d0\u4f9b\u4e86": [740, 749, 757, 766], "dgl\u63d0\u4f9b\u4e864\u4e2a\u51fd\u6570\u8ba9\u4efb\u52a1\u53d8\u5f97\u7b80\u5355": 738, "dgl\u63d0\u4f9b\u4e86api\u4ee5\u4ece\u78c1\u76d8\u4e2d\u52a0\u8f7d\u6216\u5411\u78c1\u76d8\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u56fe": 745, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2aapi\u4ee5\u6267\u884c\u8fd9\u4e24\u4e2a\u6b65\u9aa4": 741, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u529f\u80fd\u7684\u51fd\u6570": 769, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684rgcn\u7684\u7aef\u5230\u7aef\u7684\u4f8b\u5b50": 772, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a00\u758f\u7684adagrad\u4f18\u5316\u5668": 740, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u793a\u4f8b": 762, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u56fe\u5377\u79ef\u6a21\u5757": 772, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177": 739, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784": 740, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784\u548c\u591a\u79cdapi": 740, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7ea7\u522b\u7684api": 740, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u811a\u672c\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 742, "dgl\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b0\u7c7b\u578b\u7684\u8bed\u6cd5": 749, "dgl\u63d0\u4f9b\u4e86\u51e0\u4e2a\u90bb\u5c45\u91c7\u6837\u7c7b": 762, "dgl\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u7684api": 739, "dgl\u63d0\u4f9b\u4e86\u540d\u4e3a": 737, "dgl\u63d0\u4f9b\u4e86\u5728\u540c\u6784\u56fe\u4e0a\u505a\u94fe\u8def\u9884\u6d4b\u7684\u4e00\u4e2a\u793a\u4f8b": 760, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u91c7\u6837\u7684\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668": 740, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u542f\u52a8\u96c6\u7fa4\u4e2d\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684tool": 742, "dgl\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684": 762, "dgl\u63d0\u4f9b\u4e86\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5": 748, "dgl\u63d0\u4f9b\u7684\u4e00\u4e9b\u91c7\u6837\u65b9\u6cd5\u4e5f\u652f\u6301\u5f02\u6784\u56fe": 762, "dgl\u652f\u6301": 752, "dgl\u652f\u6301\u4f7f\u7528": 748, "dgl\u652f\u6301\u5185\u7f6e\u7684\u805a\u5408\u51fd\u6570": 752, "dgl\u73b0\u5728\u652f\u6301": 752, "dgl\u7684gin\u6837\u4f8b": 770, "dgl\u7684graphsage\u6837\u4f8b": 772, "dgl\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u5177\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u4ea4\u4e92\u8fdb\u7a0b": 739, "dgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u5c0f\u6279\u6b21\u751f\u6210\u4e09\u9879": 760, "dgl\u786e\u4fdd\u5757\u7684\u8f93\u51fa\u8282\u70b9\u5c06\u59cb\u7ec8\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 757, "dgl\u793e\u533a\u7684\u4e00\u7fa4\u70ed\u5fc3\u8d21\u732e\u8005\u628adgl\u7528\u6237\u6307\u5357\u8bd1\u6210\u4e86\u4e2d\u6587": 750, "dgl\u79f0\u4e4b\u4e3a": 748, "dgl\u79f0\u5b83\u4eec\u4e3a\u7ea2\u8272\u8282\u70b98\u5728\u7b2c\u4e8c\u4e2agnn\u5c42\u7684": 757, "dgl\u79f0\u5b83\u4eec\u4e3a\u89c4\u8303\u8fb9\u7c7b\u578b": 749, "dgl\u79f0\u8fd9\u79cd\u4ec5\u5305\u542b\u5fc5\u8981\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u4e8c\u5206\u56fe\u4e3a\u4e00\u4e2a": 757, "dgl\u8981\u6c42\u9884\u5904\u7406\u56fe\u6570\u636e\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 741, "dgl\u901a\u8fc7\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784": 743, "dgl\u91c7\u7528\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5": 739, "dgl\u91cc\u5bf9\u56fe\u8fdb\u884c\u53d8\u6362\u7684\u51fd\u6570\u4f1a\u53bb\u6389\u56fe\u4e0a\u7684\u6279\u6b21\u4fe1\u606f": 770, "dgl\u9ed8\u8ba4\u4f7f\u7528int64": 748, "dgl\ub294": [789, 805, 813], "dgl\uc5d0\uc11c": [781, 782, 785, 789, 790, 793, 800, 805, 809, 811], "dgl\uc5d0\uc11c\ub294": [777, 778, 789, 795, 799, 800, 803, 805], "dgl\uc740": [773, 774, 777, 778, 779, 780, 781, 782, 783, 784, 786, 789, 790, 793, 794, 795, 798, 799, 804, 806, 807, 812, 813, 815], "dgl\uc758": [777, 779, 780, 782, 790, 792, 793, 795, 803, 804, 805, 809], "dgl\uc774": [782, 799, 800, 805], "dgmg": [862, 868], "dgmg_cycl": 861, "dgmg_msg": 861, "dgmg_reduc": 861, "dgmgskeleton": 861, "dgn": 397, "dh": 820, "diag": [607, 611, 616, 617, 618, 629, 721, 818, 819, 821, 823], "diagmatrix": [590, 591], "diagon": [388, 399, 409, 420, 423, 610, 611, 615, 616, 617, 818, 819, 821, 854], "diagram": 697, "dichotomi": [120, 245, 475], "dict": [4, 20, 27, 28, 43, 46, 47, 56, 73, 74, 75, 103, 114, 115, 121, 130, 131, 148, 203, 204, 205, 206, 208, 210, 213, 214, 216, 219, 220, 222, 223, 224, 225, 234, 236, 237, 238, 240, 241, 242, 246, 288, 294, 295, 296, 297, 299, 300, 305, 309, 310, 311, 312, 313, 314, 317, 320, 321, 324, 327, 332, 333, 334, 335, 339, 340, 346, 353, 357, 384, 385, 386, 387, 426, 427, 428, 429, 430, 431, 476, 540, 541, 556, 563, 564, 566, 567, 635, 643, 649, 681, 692, 697, 762, 778, 799, 805, 839, 858, 861, 864, 865], "dict_kei": 385, "dictionari": [22, 43, 46, 47, 74, 75, 101, 102, 103, 121, 122, 131, 148, 210, 220, 236, 240, 242, 246, 295, 297, 299, 305, 310, 312, 320, 321, 332, 333, 334, 335, 339, 340, 346, 384, 427, 429, 476, 540, 563, 564, 566, 643, 681, 689, 697, 705, 710, 713, 714, 719, 726, 728, 732, 782, 796, 810, 836, 839, 841], "dictionary\uac00": 782, "dictionary\ub294": 782, "dictionary\ub4e4\uc744": 805, "dictionary\ub97c": [782, 803], "dictionary\uc5d0": 782, "dictionary\uc640": 803, "dict\u5bf9\u8c61": 738, "diff": 325, "differ": [4, 5, 11, 51, 61, 73, 88, 91, 92, 113, 116, 120, 126, 131, 135, 136, 138, 139, 140, 151, 152, 153, 158, 159, 172, 178, 179, 186, 192, 214, 216, 217, 219, 220, 229, 230, 235, 240, 243, 245, 249, 250, 287, 297, 299, 302, 303, 305, 321, 334, 339, 340, 353, 354, 384, 385, 387, 402, 419, 423, 428, 429, 430, 431, 434, 448, 458, 475, 563, 565, 569, 634, 640, 689, 691, 694, 697, 699, 700, 702, 705, 710, 712, 714, 716, 717, 719, 720, 721, 722, 723, 724, 725, 726, 730, 731, 732, 787, 790, 820, 821, 823, 828, 829, 834, 835, 837, 840, 845, 848, 853, 854, 855, 856, 858, 859, 861, 864, 865, 868, 870, 871], "differenti": [118, 119, 714, 855], "diffus": [658, 659, 664, 668, 822], "diffuse_op": 668, "digit": [199, 200], "digraph": [125, 249, 642, 701, 745, 786], "dii": 21, "dill": 829, "dim": [73, 263, 264, 265, 266, 328, 341, 385, 412, 448, 449, 569, 594, 597, 598, 599, 600, 601, 620, 645, 646, 675, 683, 708, 709, 732, 752, 753, 772, 793, 795, 815, 818, 819, 820, 823, 828, 838, 852, 853, 855, 861, 864], "dim_ff": 865, "dim_model": 865, "dim_nfeat": 840, "dimens": [4, 5, 9, 10, 14, 20, 139, 150, 154, 176, 302, 317, 328, 341, 357, 385, 393, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 425, 426, 432, 434, 441, 445, 449, 455, 503, 547, 569, 594, 597, 598, 599, 600, 601, 608, 616, 620, 622, 645, 646, 685, 695, 702, 708, 709, 710, 724, 730, 818, 820, 823, 836, 838, 840, 852, 853, 855, 865, 870], "dimension": [9, 159, 302, 305, 341, 404, 406, 410, 412, 432, 434, 560, 561, 562, 569, 702, 709, 819, 837, 840], "dipol": [178, 179], "dir": [397, 697, 782], "dir1": 397, "direct": [6, 123, 124, 126, 134, 149, 155, 159, 178, 185, 187, 193, 229, 230, 248, 249, 289, 294, 298, 317, 341, 343, 397, 445, 543, 545, 546, 548, 570, 634, 647, 670, 689, 700, 701, 704, 785, 830, 837, 838, 854, 861, 864], "direction": 700, "directli": [9, 21, 64, 71, 89, 108, 109, 112, 117, 131, 148, 210, 231, 246, 303, 305, 308, 315, 316, 335, 339, 340, 341, 346, 395, 432, 434, 476, 540, 567, 569, 650, 651, 689, 701, 821, 823, 838, 839, 841, 844, 848, 853], "directoractor": 134, "directori": [21, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 209, 289, 309, 687, 688, 692, 696, 698, 774, 775, 778, 817, 833, 834, 835, 844, 848, 865], "dirnam": 202, "disabl": [4, 9, 708, 817, 829, 845], "disable_shared_mem": 4, "disallow": 562, "disambigu": 705, "disappear": [4, 694], "disast": 854, "discard": [27, 28, 114, 115, 116, 117, 130, 246, 247, 335, 338, 344, 352, 476, 477, 540, 554, 557, 634, 643, 644, 730, 820], "discov": [865, 866, 868], "discoveri": 861, "discret": [659, 855], "disct": 635, "discuss": [21, 635, 727, 732, 854], "diseas": [563, 564, 705, 749, 790], "disease\u6cbb\u7597\u8fb9": 749, "disease\u8282\u70b9": 749, "disjoint": 122, "disk": [4, 138, 139, 140, 156, 203, 206, 292, 298, 309, 317, 318, 687, 688, 692, 697, 774, 832, 834, 835, 839, 841], "dislik": [727, 728, 767, 768, 811, 812], "dislike_dst": [727, 767, 811], "dislike_src": [727, 767, 811], "dispatch": [9, 696], "dispatch_data": 697, "displai": [56, 819, 858], "dist": [341, 432, 433, 434, 449, 450, 547, 569, 570, 683, 685, 820, 826, 829, 844, 851, 870, 871], "dist_anim": 864, "dist_graph": [694, 740, 780], "dist_list": 864, "dist_matrix": 864, "distanc": [6, 178, 179, 243, 341, 391, 432, 433, 434, 449, 450, 547, 569, 570, 683, 685, 861], "distdataload": [4, 211, 212, 693, 694, 739, 740, 779, 780], "distedgedataload": [694, 740, 849], "distembed": [4, 693, 739, 740, 779], "distgraph": [4, 211, 212, 233, 234, 240, 241, 242, 693, 695, 697, 739, 740, 741, 779, 781, 782, 848, 849], "distgraphserv": 4, "distgraph\u5c06\u56fe\u6570\u636e\u52a0\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u4e2d": 740, "distgraph\uc758": 780, "distinct": [142, 689, 856, 868], "distinguish": [68, 156, 640, 683, 689, 705, 823], "distmult": 853, "distnodedataload": [694, 740, 780, 848, 849], "distplot": 864, "distribut": [13, 120, 142, 174, 197, 205, 210, 211, 212, 213, 226, 227, 245, 293, 297, 319, 355, 356, 384, 412, 428, 430, 455, 475, 565, 696, 706, 717, 728, 731, 739, 740, 741, 779, 781, 782, 803, 829, 844, 855, 861, 864, 865, 871], "distributeddataparallel": [210, 213, 693, 739, 779, 829, 844, 848, 849, 870, 871], "distributeditemsampl": [829, 871], "distributedli": [293, 694], "distributedsampl": [210, 213], "disttenor": 4, "disttensor": [4, 232, 239, 693, 694, 695, 739, 740, 779, 780, 781], "disttensor\u4e2d\u7684\u884c\u6570\u5fc5\u987b\u4e0e\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u6216\u8fb9\u6570\u76f8\u540c": 740, "div": [9, 255, 256, 269, 270, 279, 280, 491, 492, 500, 501, 510, 511, 512, 513, 514, 515, 532, 533, 708, 752, 793, 823], "dive": [725, 825], "divers": 865, "divid": [45, 68, 79, 82, 105, 142, 143, 189, 190, 232, 239, 399, 415, 648, 718, 721, 725, 809, 839, 852, 855], "divis": [4, 397, 406, 419, 420, 444, 446, 447, 611, 623], "dl": [134, 173, 816], "dlg": 782, "dlg\uc758": 793, "dm": 864, "dmlc": [21, 817, 844], "dncoder": 865, "dnn": [723, 807], "do": [4, 9, 21, 22, 70, 89, 101, 102, 114, 116, 130, 140, 180, 240, 297, 332, 341, 351, 353, 385, 425, 432, 434, 444, 445, 447, 449, 450, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 555, 559, 564, 569, 635, 688, 694, 704, 705, 712, 713, 718, 719, 728, 731, 732, 799, 831, 832, 834, 835, 836, 839, 854, 855, 858, 861], "do_someth": 0, "doc": [9, 14, 168, 186, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 714, 726, 823, 836, 838, 839, 840, 841, 854, 870, 871], "docstr": 21, "document": [8, 22, 214, 216, 240, 833, 848], "doc\uc5d0\uc11c": 810, "doe": [4, 8, 21, 26, 27, 28, 64, 71, 93, 113, 116, 130, 131, 134, 149, 155, 164, 185, 187, 193, 293, 301, 334, 353, 455, 501, 541, 577, 594, 597, 598, 599, 616, 635, 658, 659, 664, 688, 694, 696, 697, 701, 705, 709, 715, 719, 725, 728, 735, 775, 790, 809, 823, 836, 838, 839, 840, 841, 842, 852, 854, 855, 858, 861, 865, 870], "doesn": [4, 56, 168, 200, 722, 854], "doi": [134, 163, 173], "domain": [288, 296, 309, 318, 833, 834, 835, 839, 845], "don": [21, 89, 241, 242, 560, 562, 563, 635, 716, 823, 865], "done": [6, 21, 156, 332, 683, 687, 694, 818, 819, 821, 836, 838, 839, 844, 845, 848, 852, 853, 854, 855], "donghuixu": 750, "donot_use_mm_for_euclid_dist": [433, 547], "dot": [9, 257, 258, 271, 272, 281, 282, 401, 452, 493, 494, 500, 516, 517, 534, 535, 708, 722, 728, 731, 752, 771, 793, 803, 806, 812, 814, 820, 839, 849, 854, 855, 858, 865], "dotpredictor": [728, 768, 812, 839], "dotproductpredictor": [728, 731, 768, 771, 812, 814], "doubl": [9, 22, 173, 243, 637, 689, 702, 708, 787, 793, 861], "down": [291, 303, 820, 852, 855], "download": [2, 21, 23, 132, 133, 134, 135, 136, 137, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 202, 289, 686, 687, 690, 734, 735, 774, 775, 817, 818, 819, 821, 823, 855, 861, 865], "downstream": [697, 728, 731, 732, 827, 848, 853], "doxygen": 21, "dozen": 22, "dpi": 864, "dramat": 855, "draw": [387, 828, 858, 861], "draw_circular": 861, "draw_networkx": 854, "draw_networkx_edg": [819, 864], "draw_networkx_nod": [819, 864], "drawn": [716, 821], "drive": 21, "driven": [862, 868], "drop": [4, 210, 213, 248, 293, 301, 303, 315, 649, 654, 655, 658, 659, 664, 829, 864, 871], "drop_last": [4, 209, 210, 213, 214, 215, 216, 219, 220, 293, 301, 693, 715, 730, 739, 757, 758, 759, 760, 762, 770, 779, 799, 800, 801, 802, 803, 805, 813, 829, 840, 844, 848, 849, 854, 871], "drop_uneven_input": [293, 829, 871], "dropbox": 21, "dropedg": 13, "dropnod": 13, "dropout": [390, 394, 395, 396, 397, 400, 405, 407, 408, 413, 416, 417, 419, 420, 421, 424, 425, 439, 440, 444, 446, 447, 685, 693, 716, 721, 722, 732, 739, 779, 815, 821, 829, 855, 858, 865, 871], "dropouta": [439, 440], "dropouth": [439, 440], "dropout\u6982\u7387": 772, "drug": [52, 122, 563, 564, 681, 705, 749, 790, 861], "drugai": 750, "drug\u76f8\u4e92\u4f5c\u7528\u8fb9": 749, "drug\u8282\u70b9": 749, "dst": [34, 62, 63, 68, 110, 220, 243, 357, 392, 401, 402, 405, 407, 408, 412, 415, 421, 452, 453, 454, 556, 559, 612, 635, 636, 640, 675, 691, 701, 708, 709, 714, 717, 722, 725, 726, 728, 731, 737, 745, 752, 753, 757, 758, 760, 765, 766, 768, 771, 777, 786, 793, 795, 799, 800, 803, 806, 809, 810, 812, 814, 829, 838, 839, 841, 855, 865, 871], "dst_dtype": [725, 765, 809], "dst_field": 865, "dst_id": [59, 126, 250, 287, 689, 696, 782], "dst_id_field": 689, "dst_input": [726, 766, 810], "dst_node": [321, 635, 799, 809], "dst_node_id": 696, "dst_timestamp": 321, "dst_type": [131, 334, 427, 429], "dst_x": 714, "dstdata": [4, 9, 44, 68, 208, 221, 222, 385, 574, 635, 693, 695, 709, 718, 721, 725, 726, 739, 753, 757, 761, 762, 765, 766, 779, 781, 795, 799, 804, 805, 809, 810], "dstnode": [43, 68, 208, 222, 635, 718, 757, 761, 799, 804], "dsttype": [26, 68, 105, 226, 227, 385, 710, 726, 754, 766, 796, 810], "dt": 689, "dtype": [4, 10, 21, 47, 64, 75, 95, 96, 117, 126, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 246, 247, 250, 297, 302, 309, 325, 335, 339, 340, 355, 356, 385, 450, 476, 477, 540, 553, 554, 555, 560, 562, 574, 575, 585, 590, 603, 615, 640, 654, 655, 662, 668, 681, 683, 689, 691, 694, 696, 697, 702, 705, 715, 716, 722, 726, 727, 728, 737, 740, 746, 749, 766, 767, 768, 777, 780, 782, 787, 790, 806, 810, 811, 812, 820, 823, 828, 829, 831, 834, 835, 837, 840, 841, 848, 849, 852, 854, 855, 865, 871], "due": [22, 118, 119, 192, 291, 293, 309, 556, 641, 704, 716, 852, 865], "dump": [782, 849], "duplic": [116, 135, 136, 151, 152, 153, 186, 192, 289, 335, 339, 340, 430, 476, 540, 588, 643, 651, 671, 696, 823, 858], "dur": [852, 855], "dure": [5, 21, 89, 231, 242, 293, 341, 344, 422, 432, 434, 559, 563, 564, 569, 633, 669, 694, 696, 697, 703, 708, 713, 719, 829, 834, 835, 837, 845, 848, 855, 858, 861, 864, 865], "duse_cuda": 817, "duse_libxsmm": 817, "duse_openmp": 817, "dvd": 137, "dwivedi": 820, "dx": [163, 397, 854, 865], "dynam": [404, 862, 864, 865, 866, 868], "e": [0, 4, 5, 9, 21, 22, 26, 41, 42, 48, 54, 62, 63, 70, 108, 112, 118, 119, 120, 122, 125, 126, 130, 131, 166, 174, 178, 186, 210, 213, 220, 240, 244, 245, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 291, 292, 334, 341, 343, 357, 385, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 426, 430, 432, 434, 449, 452, 453, 454, 458, 475, 500, 501, 548, 549, 556, 557, 561, 562, 567, 569, 572, 574, 575, 610, 612, 613, 614, 626, 641, 642, 658, 659, 664, 673, 674, 676, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 704, 707, 708, 709, 713, 714, 722, 728, 729, 730, 736, 744, 751, 752, 769, 776, 777, 785, 792, 793, 794, 817, 818, 819, 820, 821, 823, 824, 830, 836, 837, 838, 839, 845, 854, 855, 861, 865, 870], "e1": [297, 321, 327, 333], "e2": [297, 321, 327, 333], "e2d": 865, "e2n": 670, "e_": [391, 401, 402, 406, 407, 408, 410, 411, 413, 414, 415, 418, 419, 420, 421, 830, 838, 854, 855], "e_add_u": 5, "e_add_v": 5, "e_attr": 125, "e_div_u": 5, "e_div_v": 5, "e_dot_u": 5, "e_dot_v": 5, "e_feat": [164, 166, 458], "e_ij": 392, "e_mul_u": 5, "e_mul_v": 5, "e_sub_u": 5, "e_sub_v": [5, 9], "e_t": [427, 428], "e_typ": [157, 158, 191], "e_weight": 6, "each": [0, 4, 5, 6, 7, 14, 20, 22, 34, 35, 36, 37, 39, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 78, 87, 88, 92, 93, 94, 100, 101, 102, 116, 117, 122, 123, 124, 126, 130, 131, 135, 136, 141, 142, 147, 150, 151, 152, 153, 154, 157, 158, 171, 174, 175, 176, 178, 179, 181, 182, 183, 184, 191, 195, 197, 198, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 232, 235, 239, 240, 241, 242, 243, 246, 250, 287, 290, 293, 297, 299, 301, 302, 303, 305, 306, 308, 310, 315, 316, 319, 321, 327, 329, 332, 333, 334, 335, 339, 340, 341, 343, 353, 354, 357, 383, 384, 385, 387, 388, 389, 390, 391, 393, 397, 399, 401, 404, 405, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 421, 422, 424, 425, 432, 433, 434, 436, 438, 439, 440, 441, 445, 449, 450, 451, 455, 457, 459, 476, 502, 503, 540, 541, 547, 550, 551, 552, 555, 556, 558, 560, 561, 562, 563, 564, 565, 566, 569, 570, 572, 573, 574, 575, 635, 640, 641, 643, 647, 650, 651, 658, 666, 667, 672, 675, 677, 678, 679, 680, 681, 685, 686, 689, 691, 692, 693, 694, 695, 696, 697, 698, 700, 702, 704, 705, 707, 710, 712, 713, 714, 717, 719, 720, 722, 725, 726, 727, 728, 729, 730, 731, 732, 777, 782, 787, 805, 812, 814, 819, 820, 821, 823, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 845, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 871], "earli": [166, 192, 728, 812], "earlier": [291, 694, 853, 861], "eas": [21, 22, 305], "easi": [21, 22, 338, 561, 687, 697, 731, 816, 823], "easier": [70, 695, 697, 839], "easili": [122, 229, 230, 712, 717, 720, 728, 827, 830, 836, 855], "ec2": [14, 845], "ecosystem": 823, "ed": [858, 865], "edata": [4, 5, 9, 20, 27, 30, 34, 47, 51, 53, 70, 95, 96, 108, 114, 117, 118, 119, 122, 125, 126, 128, 145, 147, 157, 158, 164, 166, 174, 177, 179, 191, 195, 208, 214, 216, 219, 221, 223, 246, 249, 250, 335, 339, 340, 357, 426, 449, 458, 476, 540, 551, 553, 554, 555, 556, 557, 562, 563, 564, 565, 566, 567, 571, 572, 635, 640, 641, 642, 643, 645, 650, 651, 654, 655, 656, 657, 658, 659, 662, 664, 667, 668, 670, 671, 672, 673, 674, 675, 676, 681, 683, 689, 691, 694, 695, 696, 697, 702, 705, 709, 722, 728, 729, 731, 737, 740, 741, 746, 749, 753, 758, 760, 768, 769, 771, 777, 780, 781, 782, 787, 790, 794, 795, 800, 803, 806, 812, 814, 836, 837, 838, 839, 841, 852, 853, 864], "edata_develop": 357, "edata_dict": 357, "edata_follow": 357, "edata_pars": [148, 689], "edata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 246, 247, 335, 338, 339, 340, 344, 476, 477, 540, 549, 553, 554, 555, 571, 640, 654, 655, 662, 668, 681, 689, 696, 697, 701, 702, 704, 730, 745, 746, 748, 786, 787, 789, 813, 837, 840, 841], "edeg": [45, 79, 82, 105], "edg": [0, 4, 5, 6, 7, 9, 13, 21, 25, 26, 27, 30, 31, 32, 34, 36, 39, 41, 46, 47, 48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 295, 296, 297, 300, 303, 305, 308, 309, 310, 312, 313, 315, 316, 318, 319, 320, 321, 324, 327, 333, 334, 335, 338, 339, 340, 341, 343, 344, 351, 352, 353, 354, 357, 385, 387, 389, 390, 391, 392, 395, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 449, 452, 453, 454, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 574, 575, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 650, 651, 653, 654, 656, 657, 658, 659, 660, 662, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 676, 681, 683, 685, 689, 691, 693, 695, 696, 697, 699, 700, 707, 708, 709, 710, 712, 715, 717, 718, 720, 722, 724, 726, 727, 730, 731, 732, 737, 746, 748, 749, 750, 752, 753, 758, 760, 767, 768, 771, 777, 781, 782, 787, 789, 790, 792, 793, 794, 795, 799, 800, 803, 806, 811, 812, 813, 814, 816, 818, 819, 820, 821, 823, 827, 828, 829, 831, 833, 834, 835, 836, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 856, 858, 864, 868, 870], "edge_attent": 855, "edge_attr": [179, 249, 642], "edge_attr_dtyp": 782, "edge_attr_schem": [4, 75], "edge_attribut": [297, 327], "edge_classif": 309, "edge_color": 854, "edge_data": [309, 689, 697, 782], "edge_dir": [214, 216, 241, 242, 563, 564, 565, 566], "edge_drop": 390, "edge_feat": [177, 240, 392, 397, 402, 403, 405, 411, 413, 419, 696, 697, 741, 782], "edge_feat_0": 835, "edge_feat_0_path": 835, "edge_feat_1": 835, "edge_feat_1_path": 835, "edge_feat_nam": [29, 117, 651, 656, 667], "edge_feat_s": [138, 397, 403, 419, 446], "edge_featur": [295, 301, 305, 714, 828, 831, 841], "edge_feature_kei": 295, "edge_follow_feat_0": 834, "edge_follow_feat_0_path": 834, "edge_follow_feat_1": 834, "edge_follow_feat_1_path": 834, "edge_func": 418, "edge_gat": 405, "edge_id": [32, 233, 305], "edge_id_attr_nam": [125, 249], "edge_in_feat": 392, "edge_index": 697, "edge_label": [25, 318, 728, 758, 768, 800, 812], "edge_like_feat_0": 834, "edge_like_feat_0_path": 834, "edge_like_feat_1": 834, "edge_like_feat_1_path": 834, "edge_map": [240, 697, 741, 782], "edge_mask": [426, 427, 428, 757, 799], "edge_permute_algo": [98, 556], "edge_pred_graph": [728, 768, 812], "edge_predict": [758, 800], "edge_repr": 861, "edge_split": [681, 694, 740, 780, 849], "edge_subgraph": [157, 158, 191, 476, 715, 757, 758, 760, 799, 800, 803, 837], "edge_timestamp_attr_nam": [297, 315, 316], "edge_trainer_id": 232, "edge_typ": [131, 297, 305, 334, 695, 697, 705, 725, 749, 765, 782, 790, 809], "edge_type_id": 696, "edge_type_subgraph": [26, 477, 705, 749, 790], "edge_type_to_id": [297, 327, 834], "edge_udf": [20, 672, 673, 674, 675, 676], "edge_upd": 446, "edge_weight": [6, 145, 214, 390, 402, 406, 407, 409, 410, 415, 421, 422, 423, 428, 430, 729, 769], "edgebatch": [20, 53, 708, 752, 793], "edgedataload": [694, 740, 758, 760, 780, 800, 801, 803, 849], "edgedataview": 4, "edgelist": 864, "edgepredictor": 849, "edges1": 385, "edges2": 385, "edges3": 385, "edges_0": 689, "edges_1": 689, "edges_b": 864, "edges_data": 841, "edges_dst": 841, "edges_field": 865, "edges_gener": [91, 542], "edges_group": 841, "edges_of_id": 841, "edges_path": 835, "edges_perm": 556, "edges_src": 841, "edges_to_exclud": 310, "edges_with_feature_on": 53, "edgeweightnorm": [390, 409, 415, 422, 423, 729, 769], "edist": 391, "edu": [145, 175, 181, 184], "educ": 853, "ee": 865, "efeat": [392, 402, 405, 411, 418, 446, 696, 697], "effect": [10, 210, 213, 244, 287, 394, 395, 396, 420, 456, 570, 574, 575, 658, 659, 664, 692, 820, 865], "effici": [4, 5, 9, 22, 34, 73, 93, 94, 100, 113, 122, 126, 131, 209, 240, 249, 250, 287, 334, 341, 387, 429, 431, 432, 434, 565, 569, 641, 697, 704, 707, 718, 722, 725, 730, 827, 832, 838, 845, 852, 853, 854, 855, 858, 861, 864, 865], "effort": [853, 870], "eg": [705, 749, 790], "egat": 402, "egat_model": [402, 405], "egnn": 403, "egt": 446, "eid": [4, 20, 26, 51, 55, 61, 88, 89, 95, 96, 125, 130, 211, 223, 233, 234, 240, 241, 242, 246, 249, 335, 339, 340, 352, 357, 426, 476, 540, 553, 554, 556, 560, 562, 563, 564, 565, 566, 571, 635, 640, 643, 675, 695, 697, 705, 749, 757, 760, 781, 782, 790, 799, 803, 837, 839, 865], "eid2localeid": 4, "eid2partid": 4, "eid_attr": 642, "eid_het2hom": 695, "eid_hom2het": 695, "eid_offset": 695, "eid_rang": 782, "eids_dict": [760, 803], "eig": 397, "eig_vec": 397, "eigenvalu": [342, 343, 393, 398, 448, 661], "eigenvector": [342, 397, 448, 661], "eight": [171, 696], "eigval": [448, 661], "eigval_nam": [448, 661], "eigvec": [448, 661], "eisfischerh\u00fctt": 865, "either": [9, 21, 26, 32, 34, 62, 63, 73, 91, 92, 93, 94, 100, 113, 131, 182, 210, 214, 216, 220, 223, 241, 242, 305, 313, 317, 318, 334, 341, 385, 433, 547, 561, 563, 564, 565, 566, 569, 594, 597, 598, 599, 601, 635, 697, 700, 704, 718, 833, 836, 839, 848, 861], "el": [452, 708, 752, 793], "electron": [178, 179], "element": [0, 4, 5, 22, 31, 32, 34, 35, 36, 37, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 93, 94, 100, 119, 121, 122, 214, 216, 219, 220, 240, 241, 242, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 297, 303, 305, 308, 310, 315, 316, 327, 329, 334, 335, 339, 340, 342, 343, 353, 354, 388, 392, 434, 476, 502, 540, 541, 551, 552, 562, 563, 564, 566, 577, 578, 581, 582, 593, 594, 595, 600, 606, 613, 614, 620, 626, 630, 641, 645, 646, 694, 719, 720, 725, 820, 821, 839, 840], "elementwis": [452, 607, 608, 611, 617, 618, 619, 629], "elif": [718, 725, 761, 765, 804, 809], "elimin": 130, "ell": 649, "els": [73, 391, 424, 425, 426, 427, 428, 430, 683, 689, 714, 716, 718, 719, 722, 725, 726, 757, 759, 761, 765, 766, 799, 802, 804, 806, 809, 810, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 853, 855, 861, 865, 870, 871], "elsewher": 615, "elu": [446, 722, 806, 855], "emap": 848, "emb": [4, 10, 384, 428, 430, 455, 694, 740, 780, 853, 858, 861, 865], "emb_dim": [383, 387], "emb_stat": 4, "embed": [5, 13, 137, 149, 158, 180, 182, 184, 185, 191, 314, 383, 384, 387, 428, 430, 445, 446, 449, 450, 453, 454, 455, 685, 693, 694, 695, 697, 717, 731, 732, 815, 828, 848, 849, 852, 853, 854, 855, 858, 865], "embedding_dim": [4, 384, 445, 455, 685], "emit": [728, 861], "emphas": 839, "empir": [14, 120, 182], "emploi": [20, 303, 308, 315, 316, 429, 430, 431, 721, 820, 855, 865], "employ": 865, "empti": [32, 56, 131, 204, 236, 287, 303, 308, 315, 334, 346, 351, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 716, 725, 834, 835, 852, 855, 865], "en": [845, 865], "enabl": [9, 23, 290, 428, 430, 708, 715, 720, 722, 806, 817, 827, 829, 861, 865, 871], "enable_cpu_affin": [844, 845], "enc": 865, "encapsul": 726, "enclos": [243, 689], "encod": [13, 135, 136, 139, 159, 165, 171, 342, 440, 445, 448, 449, 450, 451, 457, 550, 633, 661, 665, 669, 700, 820, 837, 849, 853, 854, 856, 865, 866, 868], "encompass": [303, 305, 308, 315, 316], "encount": [852, 855], "encourag": [429, 431, 731], "end": [4, 20, 22, 27, 114, 164, 217, 240, 291, 342, 352, 387, 391, 441, 558, 570, 633, 661, 669, 675, 683, 697, 704, 719, 724, 728, 730, 732, 757, 789, 799, 805, 812, 813, 815, 821, 822, 828, 829, 830, 831, 834, 835, 837, 838, 839, 840, 841, 853, 854, 855, 858, 861, 865], "end_epoch_tim": 717, "end_tim": 164, "endl": 22, "endpoint": [4, 34, 48, 53, 100, 116, 476, 477, 634, 643, 854], "energi": [178, 179], "enforc": 848, "english": [149, 182, 185, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815], "enhanc": [21, 310, 819, 856, 866, 868], "enjoi": [9, 21, 820], "enough": [14, 697, 840], "enrich": 855, "ensur": [131, 305, 319, 409, 694, 696, 714, 848, 870], "entail": 861, "enter": 70, "enthalpi": [178, 179], "entir": [3, 9, 45, 79, 82, 105, 210, 294, 296, 298, 317, 693, 697, 714, 715, 718, 730, 827, 839, 840, 848, 855], "entiti": [132, 133, 144, 158, 161, 170, 305, 453, 454, 699, 700, 731, 784, 853, 856, 868], "entri": [126, 164, 177, 250, 328, 444, 447, 565, 615, 701, 729, 786, 821, 823, 854], "entropi": [245, 426, 427, 428, 430, 475, 731, 814, 839, 853, 855, 864], "entropy_list": 864, "enumer": [294, 298, 300, 317, 693, 695, 701, 716, 717, 721, 722, 739, 759, 779, 802, 806, 828, 829, 831, 848, 849, 858, 865, 871], "env": [828, 831, 834, 835, 852, 855], "environ": [14, 21, 293, 696, 817, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 844, 845, 852, 853, 854, 855, 858, 861, 864, 870, 871], "enzym": [25, 168, 186], "ep": [4, 10, 245, 406, 475, 658, 659, 664, 844, 865], "epoch": [4, 210, 213, 383, 426, 427, 428, 429, 430, 691, 693, 694, 717, 721, 722, 728, 730, 731, 732, 737, 739, 742, 768, 770, 771, 772, 777, 779, 780, 783, 806, 812, 813, 814, 815, 818, 819, 820, 821, 824, 828, 829, 831, 836, 838, 839, 840, 844, 848, 849, 852, 853, 854, 855, 858, 865, 870, 871], "epoch_end": [829, 871], "epoch_start": [829, 871], "epsilon": [178, 179, 397, 410, 411], "epsilon_": [178, 179], "eq": [425, 858], "equal": [128, 129, 139, 173, 182, 205, 219, 245, 297, 303, 308, 315, 316, 325, 357, 389, 424, 458, 475, 502, 503, 565, 610, 702, 757, 799, 845, 855, 864], "equat": [390, 391, 408, 409, 422, 423, 452, 456, 707, 821, 852, 853, 854, 858], "equip": 9, "equival": [26, 73, 222, 223, 224, 225, 246, 251, 252, 263, 264, 265, 266, 290, 297, 325, 328, 335, 385, 390, 399, 404, 409, 415, 422, 423, 433, 540, 547, 592, 607, 609, 611, 616, 617, 618, 627, 628, 629, 645, 646, 673, 676, 708, 709, 714, 719, 729, 823, 837, 838, 854, 858], "equivari": [403, 854], "er": [708, 752, 793], "erdos_renyi_graph": 458, "error": [48, 89, 109, 116, 131, 287, 293, 334, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 633, 634, 635, 669, 681, 697, 703, 747, 757, 788, 799, 828, 829, 831, 834, 835, 861, 871], "errorbar": 864, "especi": [21, 125, 249, 715, 716, 830, 853], "essenc": 855, "essenti": [20, 22, 240, 459, 718, 817, 820, 830, 838, 848, 852, 861], "establish": 4, "estim": [429, 431, 715, 731, 771, 814, 836, 837, 838, 839, 840, 841, 870], "et": [72, 135, 136, 558, 818, 820, 830, 836, 838, 852, 858], "eta": [245, 475], "etc": [0, 1, 4, 11, 21, 125, 162, 249, 357, 687, 696, 697, 708, 713, 714, 718, 720, 724, 730, 823, 839, 848, 864], "ether": 4, "etyp": [4, 26, 27, 29, 30, 31, 32, 33, 34, 36, 39, 47, 48, 50, 51, 53, 55, 57, 60, 61, 62, 63, 80, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 100, 107, 109, 113, 114, 117, 118, 125, 126, 128, 130, 208, 214, 216, 219, 220, 223, 226, 227, 232, 240, 241, 247, 297, 322, 323, 327, 347, 349, 385, 387, 395, 414, 417, 420, 427, 428, 429, 478, 548, 551, 553, 555, 557, 559, 563, 564, 566, 572, 631, 634, 635, 640, 641, 642, 643, 645, 649, 650, 651, 666, 671, 689, 691, 695, 696, 697, 705, 710, 714, 717, 718, 719, 726, 728, 730, 731, 732, 737, 749, 754, 757, 758, 760, 761, 762, 766, 768, 770, 771, 772, 777, 781, 782, 790, 796, 799, 800, 803, 804, 805, 810, 812, 813, 814, 815, 834, 853], "etype2id": 695, "etype2id_map": 695, "etype_attr": 642, "etype_count": 641, "etype_dict": 73, "etype_field": 640, "etype_id": 782, "etype_sort": 241, "etype_weight": [427, 429], "etypes_list": 240, "etypes\u662f\u4e00\u4e2a\u5217\u8868": 770, "eu": 48, "euclidean": [341, 432, 433, 434, 547, 569, 861], "ev": [48, 178, 179], "eval": [732, 772, 815, 819, 820, 821, 828, 829, 831, 852, 861, 865, 870, 871], "eval_dataload": 828, "evalu": [137, 171, 180, 182, 188, 197, 205, 697, 698, 712, 716, 732, 772, 815, 818, 819, 820, 824, 836, 839, 840, 852, 855, 861, 865, 870], "even": [4, 210, 303, 308, 315, 352, 553, 694, 712, 827, 854, 858], "evenli": [232, 239, 848], "event": [164, 166], "everi": [0, 4, 10, 21, 117, 119, 121, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 214, 215, 216, 219, 241, 242, 303, 308, 315, 334, 343, 357, 385, 408, 426, 427, 428, 429, 430, 431, 557, 562, 563, 564, 566, 694, 697, 701, 716, 728, 730, 824, 831, 837, 840, 848, 861, 862, 865, 868, 870], "everyth": [21, 291, 848], "evid": 855, "evolut": [861, 864], "evolv": 854, "eweight": [126, 250, 426, 427, 729, 767, 769, 794], "eweight_nam": [30, 126, 250, 550, 657, 658, 659, 664, 665, 668], "eweight\ub97c": 794, "exact": [712, 829, 871], "exactli": [8, 117, 297, 635, 694, 714, 722, 821, 839, 848, 849, 855, 861], "exampl": [0, 3, 4, 5, 6, 9, 10, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 205, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 235, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 327, 329, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 474, 475, 476, 477, 478, 503, 540, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 633, 634, 635, 636, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 687, 688, 689, 691, 692, 693, 694, 695, 696, 698, 700, 701, 702, 704, 705, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 723, 725, 726, 727, 728, 729, 730, 731, 732, 774, 777, 803, 813, 815, 816, 818, 819, 820, 821, 822, 826, 827, 828, 830, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 847, 848, 849, 851, 852, 853, 854, 855, 857, 858, 860, 861, 863, 864, 865, 867, 869, 870, 873], "examplelay": 458, "exceed": [449, 712], "except": [4, 171, 211, 212, 342, 404, 635, 640, 661, 694, 696, 714, 717, 718, 719, 732, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 855, 871], "exception": 827, "exchang": [305, 848], "exclud": [220, 226, 241, 242, 310, 320, 324, 559, 561, 563, 564, 714, 720, 758, 800], "exclude_edg": [241, 242, 310, 320, 563, 564, 713], "exclude_eid": 220, "exclude_seed_edg": [713, 714, 717, 720, 828], "exclude_self": [116, 341, 432, 434, 569], "exclude_self_loop": [226, 559], "excluded_edg": [563, 564], "exclus": [216, 220, 293, 562, 870], "execut": [89, 156, 293, 355, 694, 826, 829, 843, 847, 851, 857, 860, 863, 864, 867, 869, 871, 873], "exhaust": 731, "exhibit": 855, "exist": [0, 4, 21, 27, 28, 114, 115, 117, 142, 143, 186, 200, 226, 232, 239, 299, 320, 338, 351, 352, 553, 559, 583, 630, 634, 643, 648, 658, 659, 664, 683, 692, 694, 700, 714, 731, 738, 778, 816, 818, 819, 827, 834, 835, 836, 838, 839, 848, 853, 858, 861], "exist_ok": [834, 835], "exit": [70, 852], "exmapl": 6, "exp": [357, 391, 392, 412, 451, 572, 573, 823, 855, 861, 865], "expand": [339, 340, 429, 431, 725, 809, 861], "expand_as_pair": [724, 725, 764, 765, 808, 809], "expans": [339, 340], "expect": [109, 120, 199, 200, 313, 406, 422, 705, 790, 818, 852, 853, 865], "expens": 66, "experi": [14, 173, 550, 665, 722, 836, 841, 855], "experiment": [4, 6, 10, 394, 395, 396, 455], "explain": [141, 426, 427, 428, 429, 430, 431, 686, 707, 816, 852, 855], "explain_graph": [426, 427, 428, 429, 430, 431], "explain_nod": [426, 427, 428, 430], "explan": [1, 3, 11, 142, 143, 189, 190, 209, 217, 220, 222, 223, 224, 225, 426, 427, 428, 429, 430, 431, 696, 714, 719, 852, 853, 854, 855, 858, 861, 864, 865], "explanatori": [428, 430], "explic": 4, "explicit": [704, 823, 861], "explicitli": [287, 334, 694, 695, 704, 789, 823, 829, 834, 835, 861], "exploit": [22, 429, 431, 853], "explor": [429, 431, 685, 820, 859, 861, 868, 870], "explos": [214, 297, 303, 315, 563], "expon": 618, "exponenti": [618, 865], "export": [21, 696, 782, 817, 845, 848], "expos": [20, 22, 827], "express": [5, 699, 728, 731, 838, 856, 864, 868], "extend": [5, 153, 210, 391, 429, 431, 717, 731, 829, 853, 856, 858, 868], "extens": [183, 817, 828, 829, 831, 834, 835, 865], "extent": [178, 179], "extern": [2, 31, 415, 691, 699, 704], "extra": [22, 174, 385, 425, 557, 643, 689, 720, 820, 844, 848, 853], "extra_cached_hop": [353, 541], "extract": [1, 13, 95, 96, 159, 162, 173, 201, 220, 234, 246, 247, 289, 305, 335, 339, 340, 476, 477, 540, 553, 554, 571, 688, 697, 715, 726, 732, 757, 775, 799, 815, 818, 819, 821, 837, 853, 854], "extract_arch": [688, 735, 775], "extrem": 854, "ey": 839, "e\u662f\u8fb9\u7684\u6570\u91cf": 769, "f": [4, 9, 10, 293, 397, 402, 412, 413, 426, 427, 429, 431, 455, 691, 693, 695, 714, 716, 717, 718, 719, 721, 722, 725, 728, 730, 732, 737, 739, 758, 759, 760, 761, 762, 765, 768, 770, 772, 777, 779, 800, 802, 803, 804, 805, 806, 809, 812, 813, 815, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 836, 838, 839, 840, 848, 849, 852, 853, 855, 858, 861, 864, 865, 870, 871], "f1": [385, 681, 844, 845, 855], "f1_": 855, "f1r8cq": 865, "f1sgod": 865, "f2": [385, 681, 844, 845], "f3": [844, 845], "f4": [844, 845], "f5": 844, "f9065fa7": 156, "f_": [391, 397, 402, 410, 411, 416, 418, 436, 858, 861], "f_r": [726, 766, 810], "f_size": 864, "face": 22, "facilit": 305, "fact": [702, 714, 852, 861], "factor": [397, 419, 451, 722, 853], "factori": [432, 433, 434], "factor\ub97c": 806, "faculti": [155, 187, 193], "fail": [21, 819, 820, 821], "failur": 200, "faithfulli": 186, "fake": 159, "fakenew": 159, "fall": [4, 44, 104, 297, 300, 310, 313, 353, 541, 695], "fallback": 298, "fallback_featur": 298, "fals": [4, 10, 25, 31, 48, 57, 58, 65, 66, 69, 70, 95, 96, 99, 111, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 235, 236, 238, 240, 241, 242, 246, 287, 290, 291, 293, 297, 301, 303, 305, 308, 309, 310, 315, 316, 318, 319, 324, 326, 329, 335, 338, 341, 342, 344, 353, 354, 388, 389, 394, 395, 397, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 415, 417, 418, 419, 420, 422, 424, 425, 428, 429, 430, 431, 432, 433, 434, 436, 444, 447, 448, 450, 452, 457, 476, 540, 541, 543, 545, 546, 547, 553, 554, 557, 559, 560, 562, 563, 564, 565, 566, 569, 570, 571, 588, 633, 634, 635, 641, 643, 645, 646, 647, 650, 651, 661, 662, 667, 669, 685, 687, 689, 690, 691, 693, 695, 696, 697, 705, 715, 721, 730, 734, 736, 737, 739, 749, 757, 758, 759, 760, 762, 770, 774, 776, 777, 779, 781, 790, 799, 800, 801, 802, 803, 805, 813, 818, 819, 820, 821, 823, 828, 829, 831, 833, 834, 835, 836, 840, 844, 848, 849, 853, 854, 855, 858, 861, 864, 865, 870, 871], "famili": [816, 861, 862, 868], "familiar": [718, 731, 848], "famou": 819, "fanout": [214, 216, 219, 241, 242, 297, 300, 303, 308, 313, 315, 316, 394, 395, 396, 563, 564, 565, 694, 695, 713, 721, 740, 757, 780, 781, 799, 828], "faq": 817, "far": [722, 853, 855, 861], "farthest_point_sampl": 6, "fashion": [693, 828], "fast": [22, 125, 138, 139, 140, 249, 341, 393, 398, 432, 434, 569, 701], "fast_neg": 383, "faster": [148, 168, 210, 226, 341, 388, 417, 420, 432, 434, 559, 569, 722, 820, 834, 835], "favor": 839, "fb15k": [157, 158], "fb15k237": 157, "fb15k237dataset": [691, 737, 777], "fc": [405, 407, 408, 412, 428, 430, 855], "fc_neigh": [721, 724, 725, 764, 765, 808, 809], "fc_pool": [724, 725, 764, 765, 808, 809], "fc_self": [721, 724, 725, 764, 765, 808, 809], "feat": [4, 10, 25, 43, 46, 51, 64, 71, 74, 103, 128, 129, 135, 136, 137, 138, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 168, 169, 171, 173, 174, 175, 176, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 217, 219, 236, 309, 318, 347, 348, 349, 350, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 453, 454, 455, 458, 551, 552, 572, 573, 631, 632, 641, 645, 646, 651, 668, 683, 689, 691, 694, 695, 697, 709, 713, 714, 716, 717, 719, 720, 721, 722, 725, 730, 731, 732, 737, 740, 753, 765, 770, 771, 772, 777, 780, 781, 795, 806, 809, 813, 814, 815, 818, 819, 820, 821, 828, 829, 831, 834, 835, 836, 838, 839, 841, 848, 849, 852, 855, 870, 871], "feat0": 129, "feat1": [125, 128, 249, 651, 695, 781], "feat2": [125, 249], "feat3": 125, "feat_0": [409, 834, 835], "feat_1": [834, 835], "feat_a": 854, "feat_b": 854, "feat_data": 318, "feat_dict": [710, 754, 796], "feat_dim": [449, 685], "feat_drop": [394, 396, 400, 405, 407, 408, 421], "feat_dst": [709, 721, 725, 765, 809], "feat_dst\uc758": 795, "feat_list": 456, "feat_mask": [426, 427], "feat_nam": [288, 296, 397, 448, 661, 665, 669, 705, 749, 790], "feat_nn": 436, "feat_siz": [139, 426, 430, 431, 444, 446, 447, 685], "feat_src": [709, 721, 725, 765, 809], "feat_src\uc640": 795, "featmask": 13, "featur": [0, 4, 5, 9, 13, 19, 20, 26, 27, 28, 30, 34, 35, 43, 44, 46, 47, 51, 53, 54, 56, 64, 70, 71, 73, 74, 75, 77, 91, 92, 93, 94, 95, 96, 100, 103, 104, 108, 113, 114, 115, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 208, 210, 214, 216, 217, 219, 221, 222, 223, 224, 225, 234, 236, 238, 240, 241, 242, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 291, 292, 295, 296, 298, 304, 305, 309, 310, 314, 317, 318, 335, 338, 339, 340, 341, 344, 351, 352, 357, 385, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 452, 453, 454, 458, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 547, 551, 552, 553, 554, 556, 557, 558, 560, 562, 563, 564, 565, 566, 567, 569, 572, 573, 574, 575, 634, 635, 637, 638, 639, 640, 641, 642, 643, 645, 646, 650, 651, 656, 667, 668, 671, 672, 673, 674, 675, 676, 678, 679, 680, 681, 683, 685, 687, 691, 693, 694, 695, 696, 697, 699, 700, 701, 703, 705, 707, 708, 709, 710, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 726, 727, 728, 729, 730, 731, 732, 737, 747, 758, 760, 762, 767, 768, 771, 772, 777, 782, 787, 788, 790, 796, 800, 802, 803, 804, 805, 806, 809, 811, 812, 813, 814, 815, 818, 819, 820, 823, 827, 828, 829, 830, 831, 832, 833, 836, 838, 840, 841, 845, 848, 852, 853, 854, 855, 858, 861, 864, 866, 868, 870, 871], "feature_data": [309, 834, 835], "feature_nam": [159, 222, 223, 224, 225, 296, 305, 782], "feature_stor": [295, 318], "featurefetch": 291, "featureless": 697, "features_to_us": 391, "featurestor": [288, 292, 295], "febd69": 861, "fed": [108, 419, 428, 430], "fedora": 817, "feed": [439, 440, 683, 717, 719, 728, 820, 839, 853, 858, 865], "feed_forward": 865, "feedback": [731, 771, 814], "feedforward": [447, 685], "feel": [21, 823], "fell": 22, "fetch": [7, 21, 208, 222, 223, 224, 225, 291, 295, 717, 720, 721, 827, 831, 855], "fetch_featur": [295, 713, 714, 716, 717, 719, 720, 721, 828, 829, 831, 871], "fetcher": [7, 295, 827], "few": [1, 4, 14, 22, 635, 693, 694, 712, 718, 732, 848, 849, 861, 865], "fewer": [171, 293, 297, 303, 315, 563, 830, 864], "ffn": [439, 440, 865], "ffn1": 820, "ffn2": 820, "field": [21, 22, 25, 27, 28, 114, 115, 146, 151, 152, 168, 169, 184, 186, 192, 240, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 309, 310, 397, 551, 640, 645, 646, 689, 691, 696, 708, 833, 834, 835, 854, 858, 865], "field_of_studi": 782, "fig": [819, 861, 864], "fig2": 864, "figsiz": [854, 864], "figur": [693, 697, 705, 712, 820, 821, 854, 858, 864, 865], "file": [4, 21, 22, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 206, 209, 231, 235, 236, 237, 238, 240, 292, 309, 346, 567, 686, 688, 691, 694, 696, 697, 698, 705, 728, 732, 735, 775, 782, 817, 818, 819, 821, 826, 831, 833, 836, 838, 839, 841, 843, 844, 847, 848, 849, 851, 852, 853, 854, 855, 857, 860, 863, 867, 869, 873], "file_nam": 689, "file_path": [688, 735, 775], "file_system": [829, 871], "filelock": [828, 829, 831, 834, 835], "filenam": [199, 204, 346, 567], "filesystem": 236, "fill": [27, 28, 93, 113, 114, 115, 117, 449, 570, 612, 613, 614, 626, 651, 861], "fill_data": [29, 117, 651], "film": 134, "filter": [53, 54, 163, 297, 300, 313, 389, 391, 392, 393, 398, 401, 404, 405, 407, 408, 409, 412, 415, 422], "filter_edg": 865, "filter_nod": 865, "final": [6, 22, 132, 133, 144, 170, 240, 315, 316, 391, 419, 448, 452, 691, 708, 709, 712, 726, 730, 732, 752, 793, 817, 834, 835, 853, 854, 855, 858, 865, 870], "final_ft": [708, 752, 793], "final_tmp": [428, 430], "find": [14, 21, 26, 55, 130, 131, 320, 334, 429, 431, 559, 698, 725, 731, 818, 819, 820, 821, 837, 838, 839, 841, 853, 854, 855, 861, 865], "find_edg": [4, 89, 760, 803], "fine": [89, 313, 716, 823, 845, 858], "fingerprint": 848, "finish": [21, 818, 819, 821, 834, 835, 848, 870], "first": [4, 9, 21, 22, 27, 51, 56, 73, 118, 119, 121, 123, 124, 125, 126, 130, 131, 137, 139, 140, 141, 162, 171, 180, 181, 182, 184, 188, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 229, 230, 240, 245, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 297, 302, 328, 334, 339, 340, 341, 357, 385, 391, 404, 415, 422, 426, 432, 434, 441, 475, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 556, 560, 561, 562, 565, 569, 616, 626, 635, 640, 641, 651, 685, 690, 694, 695, 697, 705, 715, 716, 718, 724, 725, 730, 732, 817, 818, 819, 823, 829, 830, 834, 835, 837, 839, 840, 841, 844, 848, 849, 852, 853, 854, 855, 858, 861, 865, 866, 868, 870, 871], "first_label": 299, "first_se": 299, "firstli": 820, "fission": 167, "fit": [210, 309, 383, 410, 411, 418, 697, 712, 715, 727, 830, 832, 837, 838], "five": [137, 141, 142, 143, 155, 187, 193, 689, 833, 858], "fix": [197, 198, 205, 214, 216, 217, 353, 413, 541, 563, 713, 865], "flag": [31, 57, 58, 246, 336, 397, 419, 457, 476, 682, 817, 848], "flatten": [561, 722, 806], "flexibl": [20, 635, 689, 827, 865], "flickr": 160, "flickrdataset": 194, "flip": [633, 669], "flist": 73, "float": [4, 9, 10, 22, 95, 96, 117, 120, 138, 139, 140, 142, 143, 161, 162, 163, 178, 183, 189, 190, 198, 205, 241, 242, 244, 245, 297, 303, 308, 315, 316, 337, 343, 345, 357, 383, 389, 390, 391, 394, 395, 396, 397, 398, 400, 405, 406, 407, 408, 409, 410, 411, 413, 417, 419, 420, 421, 424, 425, 426, 427, 428, 429, 430, 431, 433, 439, 440, 444, 446, 447, 457, 474, 475, 547, 553, 554, 555, 559, 560, 562, 563, 564, 565, 608, 619, 637, 638, 639, 648, 651, 654, 655, 656, 658, 659, 664, 668, 675, 680, 689, 691, 702, 708, 721, 727, 760, 767, 777, 787, 793, 803, 811, 818, 819, 820, 829, 836, 838, 840, 854, 858, 865, 871], "float16": [9, 639, 708, 722, 793, 806], "float16\uc744": 793, "float32": [4, 9, 10, 47, 75, 95, 96, 117, 146, 147, 165, 168, 169, 174, 219, 247, 289, 356, 391, 401, 402, 405, 407, 408, 418, 477, 553, 554, 555, 566, 587, 638, 662, 668, 681, 691, 694, 695, 702, 705, 716, 737, 740, 746, 749, 777, 780, 781, 787, 790, 823, 837, 840], "float64": [126, 250, 585, 637, 689, 834, 835, 841], "floattensor": [443, 561, 562, 563, 564, 566, 709, 753, 795, 854], "flow": [127, 131, 167, 208, 210, 211, 212, 687, 714, 717, 719, 799, 800, 803, 805, 830, 831, 865], "flush": 722, "fly": [394, 395, 396, 861], "fmt": 32, "fn": [5, 9, 20, 21, 34, 73, 91, 92, 93, 94, 100, 113, 121, 426, 427, 429, 458, 672, 673, 674, 675, 676, 677, 678, 679, 680, 708, 709, 710, 718, 722, 725, 728, 729, 731, 752, 753, 754, 761, 765, 768, 769, 771, 793, 794, 795, 796, 804, 806, 809, 812, 814, 838, 839, 852, 853, 854, 858, 864, 865], "fn_": 855, "focu": [844, 845, 858, 861], "focus": [691, 853, 854, 856, 865, 868], "folder": [22, 156, 696, 697, 705, 790, 848], "follow": [0, 3, 4, 5, 6, 9, 20, 21, 22, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 140, 141, 142, 143, 148, 156, 178, 179, 182, 189, 190, 204, 209, 214, 216, 219, 220, 229, 230, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 295, 299, 301, 309, 334, 335, 339, 340, 341, 344, 345, 346, 351, 357, 384, 385, 386, 391, 402, 404, 406, 409, 415, 416, 417, 426, 427, 432, 433, 434, 435, 436, 437, 438, 442, 443, 453, 454, 457, 458, 474, 476, 477, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 543, 545, 546, 547, 555, 557, 561, 562, 563, 564, 565, 569, 571, 572, 573, 574, 575, 577, 613, 614, 634, 635, 636, 640, 641, 642, 647, 650, 651, 656, 662, 666, 667, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 700, 701, 702, 704, 705, 707, 709, 712, 713, 714, 715, 716, 717, 718, 719, 722, 724, 727, 728, 729, 730, 731, 732, 757, 758, 767, 799, 800, 811, 817, 820, 821, 823, 827, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 841, 844, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "follow_dst": [727, 767, 811], "follow_edg": 834, "follow_edges_path": 834, "follow_src": [727, 767, 811], "followed_bi": 714, "follows\uc640": 790, "foo": 70, "footnot": [844, 845], "footprint": [697, 709], "foral": [396, 412, 417, 421, 500, 725, 765, 809, 838], "forc": [232, 239, 309, 844, 861, 865], "force_even": [232, 239, 693, 739, 779, 849], "force_preprocess": 309, "force_reload": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 687, 691, 734, 737, 774, 777], "forcibli": [397, 419], "forg": 844, "fork": [8, 21, 844], "form": [20, 21, 22, 26, 51, 61, 88, 130, 131, 173, 208, 210, 246, 287, 297, 334, 335, 339, 340, 352, 383, 387, 406, 428, 429, 430, 431, 459, 476, 540, 548, 549, 558, 563, 564, 633, 643, 649, 669, 695, 697, 704, 730, 748, 760, 789, 803, 831, 838, 839, 840, 853, 854, 855, 864, 866, 868], "formal": [20, 72, 245, 475, 649, 697, 819, 853], "format": [0, 4, 12, 13, 30, 31, 32, 34, 35, 41, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 118, 119, 126, 131, 231, 240, 241, 246, 247, 249, 250, 287, 288, 295, 296, 297, 305, 309, 310, 318, 321, 325, 333, 334, 335, 339, 340, 476, 478, 540, 551, 553, 555, 567, 572, 574, 575, 604, 613, 614, 626, 641, 688, 689, 691, 695, 704, 715, 722, 724, 725, 735, 737, 764, 765, 775, 777, 781, 782, 806, 808, 809, 823, 831, 833, 834, 835, 838, 839, 848, 849, 852, 853, 855, 858, 861, 865, 870], "former": [357, 426, 427, 428, 429, 430, 431, 559, 694, 714], "formul": [404, 415, 608, 619, 726, 728, 830, 836, 839, 853, 854, 866, 868], "formula": [357, 389, 410, 411, 414, 418, 708, 725], "formular": 667, "forth": [22, 641], "forum": 21, "forward": [4, 70, 230, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 709, 714, 716, 717, 718, 719, 721, 722, 723, 726, 728, 729, 730, 731, 732, 758, 759, 760, 761, 762, 765, 766, 768, 770, 771, 772, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 814, 815, 818, 819, 820, 821, 823, 828, 829, 831, 836, 838, 839, 840, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "forward_infer": 861, "forward_train": 861, "found": [26, 48, 70, 320, 432, 434, 550, 562, 665, 682, 689, 691, 708, 726, 818, 823, 824, 828, 829, 831, 834, 835, 838, 852, 853, 865, 870, 871], "four": [502, 569, 668, 692, 695, 696, 704, 727, 833, 848, 854, 855], "fourth": 561, "fp16": [722, 806], "fp16\ub97c": 806, "fp16\uc744": 806, "fp_": 855, "frac": [120, 178, 179, 244, 245, 303, 345, 357, 391, 392, 397, 409, 412, 415, 417, 422, 435, 451, 452, 474, 475, 565, 572, 573, 667, 730, 770, 813, 818, 819, 820, 823, 852, 853, 854, 855, 861, 864, 865], "frac_list": [207, 870], "fraction": [207, 409], "fragment": 845, "frame": [9, 819, 861, 864], "framework": [4, 7, 9, 21, 23, 42, 59, 62, 63, 108, 125, 126, 131, 186, 235, 246, 247, 249, 250, 287, 334, 335, 339, 340, 341, 432, 434, 439, 440, 476, 477, 540, 548, 549, 563, 564, 565, 566, 569, 694, 701, 703, 705, 723, 788, 816, 824, 827, 834, 835, 838, 848, 858, 861, 865], "fraud": [145, 161, 162, 163], "frauddataset": [161, 163], "fraudul": [145, 161, 162], "free": [21, 178, 179, 816, 823, 830, 833, 855], "freebas": 158, "frequenc": 397, "frequent": [22, 135, 136, 137, 182, 291, 697], "friendship": [194, 700, 730], "from": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 22, 26, 27, 32, 45, 48, 68, 73, 79, 82, 89, 93, 94, 95, 96, 105, 112, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 229, 230, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 330, 332, 333, 334, 335, 338, 339, 340, 341, 343, 345, 346, 351, 352, 357, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 474, 475, 476, 477, 540, 547, 548, 549, 550, 554, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 574, 575, 610, 612, 613, 614, 626, 630, 634, 635, 640, 642, 643, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 674, 675, 676, 683, 686, 687, 688, 690, 691, 692, 693, 694, 695, 696, 697, 699, 703, 704, 708, 709, 710, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 730, 731, 732, 734, 735, 736, 737, 738, 764, 765, 770, 774, 775, 776, 777, 778, 782, 786, 788, 789, 800, 806, 808, 809, 812, 813, 814, 818, 819, 820, 821, 823, 826, 827, 828, 829, 830, 831, 834, 835, 836, 837, 838, 839, 840, 843, 844, 847, 848, 849, 851, 852, 853, 855, 857, 858, 860, 861, 863, 864, 865, 867, 869, 870, 871, 873], "from_coo": [818, 823], "from_csc": [721, 823], "from_csr": 823, "from_cudf_edgelist": 248, "from_networkx": [250, 287, 701, 745, 786], "from_numpi": [317, 841, 854], "from_scipi": [249, 287, 701, 745, 786], "fromnumer": [852, 855], "fromt": [146, 169], "front": 725, "frontier": [4, 91, 92, 123, 124, 229, 230, 542, 543, 544, 545, 546, 558, 647, 694, 695, 740, 757, 780, 781, 799], "frontier2": [757, 799], "fsspec": [828, 829, 831, 834, 835], "fstab": 848, "ft": [708, 729, 752, 769, 793, 794], "full": [4, 26, 153, 191, 293, 301, 309, 712, 716, 718, 719, 721, 728, 732, 805, 818, 819, 820, 828, 829, 832, 836, 848, 849, 852, 855, 858, 864, 865, 871], "fulli": [4, 21, 291, 693, 725, 823, 824, 852], "func": [34, 35, 53, 54, 355, 681, 708, 710, 754, 796, 837, 838, 858, 865, 870], "funcanim": [819, 861, 864], "function": [0, 1, 4, 13, 21, 26, 27, 28, 34, 35, 53, 54, 64, 70, 71, 73, 89, 91, 92, 93, 94, 95, 96, 100, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 130, 146, 156, 168, 169, 183, 197, 213, 232, 235, 236, 239, 241, 243, 245, 246, 247, 250, 290, 293, 294, 295, 297, 298, 300, 301, 303, 305, 306, 307, 308, 310, 313, 315, 316, 317, 319, 320, 335, 338, 341, 342, 343, 344, 352, 353, 355, 384, 385, 386, 389, 393, 394, 397, 398, 399, 400, 401, 404, 405, 407, 408, 409, 410, 412, 413, 415, 416, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 446, 447, 451, 452, 455, 458, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 551, 552, 553, 554, 555, 556, 557, 559, 562, 563, 564, 565, 567, 569, 574, 575, 577, 581, 582, 616, 633, 634, 636, 640, 641, 642, 643, 644, 645, 646, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 687, 688, 691, 692, 694, 696, 697, 701, 707, 709, 710, 713, 714, 717, 718, 719, 722, 723, 726, 728, 729, 730, 731, 732, 752, 753, 754, 760, 761, 762, 765, 768, 769, 770, 772, 792, 793, 794, 795, 796, 803, 804, 805, 806, 809, 810, 812, 813, 815, 818, 819, 820, 821, 824, 828, 830, 831, 836, 839, 840, 844, 848, 849, 852, 853, 854, 855, 856, 858, 861, 868, 871], "functional_datapip": [293, 300, 301, 313, 713, 717, 721], "functool": [714, 828, 853, 861, 865], "fundament": [853, 861], "further": [45, 66, 68, 73, 79, 82, 91, 92, 93, 94, 100, 105, 113, 210, 293, 301, 697, 709, 726, 728, 817, 823, 824, 855, 865], "furthermor": [125, 130, 696, 703, 853], "fuse": [9, 216, 501, 505, 506, 507, 508, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528], "fused_csc_sampling_graph": [231, 297, 300, 303, 308, 319], "fusedcscsamplinggraph": [231, 300, 303, 308, 309, 315, 316, 319, 326, 327, 330, 713, 721, 834, 835], "futur": [6, 21, 183, 231, 294, 298, 317, 689, 722, 861, 865], "fwtype": 558, "g": [0, 4, 5, 6, 9, 10, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 233, 234, 240, 241, 242, 243, 246, 247, 248, 249, 250, 287, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 353, 354, 357, 383, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 443, 448, 449, 452, 453, 454, 455, 457, 458, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 548, 549, 550, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 569, 570, 571, 574, 575, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 689, 690, 691, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 725, 726, 728, 730, 731, 736, 737, 739, 740, 741, 744, 746, 747, 748, 749, 753, 754, 755, 757, 758, 759, 760, 761, 762, 765, 766, 768, 770, 771, 776, 777, 779, 780, 781, 782, 785, 787, 788, 789, 790, 795, 796, 797, 799, 800, 801, 802, 803, 804, 805, 806, 809, 810, 812, 813, 814, 817, 818, 819, 820, 823, 824, 836, 837, 838, 839, 840, 841, 844, 845, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870], "g1": [36, 37, 38, 89, 101, 102, 108, 122, 128, 129, 346, 385, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 450, 458, 551, 552, 560, 562, 567, 571, 572, 573, 645, 646, 661, 681, 730, 770, 813, 854], "g1_node_feat": [435, 436, 437, 438, 439, 440, 441, 442, 443], "g2": [36, 37, 38, 95, 96, 101, 102, 122, 128, 129, 130, 346, 385, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 450, 458, 551, 552, 561, 562, 567, 571, 572, 573, 645, 646, 661, 681, 730, 770, 813], "g2_node_feat": [435, 436, 437, 438, 439, 440, 441, 442, 443], "g3": [458, 661, 681], "g32": [704, 748, 789], "g32_2": [704, 748, 789], "g64": [704, 748, 789], "g64_2": [704, 748, 789], "g_": [4, 10, 669], "g_2": 338, "g_atom": 179, "g_batch": 183, "g_edg": [563, 564], "g_int": 64, "g_l": 854, "g_layer": 854, "g_list": 567, "g_long": 71, "g_m": 861, "g_nodes_explain": 431, "g_r": [726, 766, 810], "g_sort": [565, 574, 575], "g_t": 861, "gai": [852, 854], "gain": [721, 724, 764, 808, 824, 852, 853, 854, 855, 858, 861, 864, 865], "galleri": [21, 826, 842, 846, 850, 868, 872], "game": [4, 27, 28, 30, 31, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 171, 214, 216, 219, 246, 247, 334, 335, 339, 340, 357, 385, 427, 428, 429, 476, 477, 540, 548, 553, 554, 555, 557, 640, 641, 642, 643, 650, 651, 656, 666, 667, 671, 681, 705, 749, 757, 790, 799], "gamma": [820, 854], "gamma_": [391, 451, 854], "gamma_k": 391, "gan": [852, 865], "gap": [178, 179, 436, 855], "gat": [357, 402, 722, 729, 794, 806, 823, 824, 856, 868], "gatconv": [394, 405, 709, 722, 753, 795, 806, 855], "gate": [413, 414, 436, 861], "gate_nn": 436, "gatedgcn": 413, "gatedgraphconv": 436, "gather": [9, 214, 215, 216, 303, 308, 315, 316, 499, 563, 719, 732, 757, 799, 831, 838, 854], "gathermm": 13, "gatlay": 855, "gatv2": 408, "gat\ub97c": 806, "gaussian": [14, 412, 451], "gb": [235, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 317, 318, 319, 320, 321, 333, 697, 713, 714, 716, 717, 719, 720, 721, 824, 828, 829, 831, 834, 835, 871], "gb_warn": [834, 835], "gbwarn": [834, 835], "gcc": [696, 782, 817], "gclass": [426, 430, 431, 840], "gcmc": [758, 800], "gcmclayer": [728, 768, 812], "gcn": [134, 149, 155, 185, 187, 193, 209, 400, 401, 406, 415, 421, 443, 474, 668, 714, 716, 719, 721, 722, 724, 725, 758, 760, 764, 765, 794, 800, 803, 808, 809, 817, 824, 840, 854, 856, 858, 868], "gcn_model": 818, "gcn_msg": 852, "gcn_reduc": 852, "gcnii": 409, "gcnlayer": [818, 852], "gcnnorm": 13, "gcn\uc744": [802, 805], "gdata_pars": 148, "gdc": 13, "gdelt": [25, 164], "gdeltdataset": [692, 738, 778], "ge": 434, "gender": 837, "gene": [563, 564, 705, 749, 790, 855], "gener": [0, 1, 3, 4, 5, 7, 9, 10, 20, 34, 73, 91, 92, 93, 94, 100, 113, 117, 123, 124, 128, 129, 138, 139, 140, 141, 142, 143, 172, 174, 183, 189, 190, 207, 210, 211, 212, 213, 217, 220, 226, 227, 229, 292, 293, 294, 297, 298, 301, 302, 307, 317, 319, 341, 385, 391, 394, 395, 396, 402, 405, 426, 427, 428, 430, 432, 434, 448, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 543, 544, 545, 546, 548, 549, 551, 552, 556, 558, 559, 560, 562, 563, 569, 633, 647, 651, 669, 685, 693, 694, 696, 697, 701, 704, 707, 708, 712, 714, 717, 718, 719, 720, 722, 724, 727, 728, 811, 820, 827, 830, 831, 837, 840, 841, 842, 845, 846, 848, 849, 850, 852, 853, 854, 858, 864, 865, 870, 871, 872], "generaliz": 855, "generic_join": 293, "gene\u76f8\u4e92\u4f5c\u7528\u8fb9": 749, "gene\u8282\u70b9": 749, "gentl": 852, "geom": [134, 149, 155, 185, 187, 193, 474], "geometr": [134, 149, 155, 185, 186, 187, 193, 412, 451, 474, 824], "geomgcndataset": [149, 155, 185, 187, 193], "get": [0, 1, 4, 22, 26, 30, 31, 42, 43, 44, 46, 48, 51, 56, 68, 70, 74, 77, 103, 104, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 209, 210, 232, 239, 245, 247, 288, 291, 293, 294, 296, 297, 298, 305, 317, 318, 336, 341, 384, 387, 422, 432, 434, 443, 475, 477, 559, 563, 565, 569, 571, 574, 575, 643, 681, 685, 687, 689, 690, 691, 693, 695, 697, 702, 705, 708, 714, 716, 717, 719, 726, 727, 730, 731, 766, 774, 776, 777, 787, 790, 799, 810, 817, 818, 819, 823, 828, 831, 845, 855, 861, 865, 870], "get_aggregate_fn": [726, 766, 810], "get_attent": [401, 402, 405, 407, 408, 436], "get_cmap": 854, "get_dataload": 870, "get_dataset": 865, "get_dist": [433, 547], "get_edge_partition_polici": 4, "get_edge_split": [690, 736, 776], "get_etype_id": [4, 641, 782], "get_group": 841, "get_idx_split": [690, 736, 776, 848], "get_log_prob": 861, "get_node_partition_polici": [4, 695, 781], "get_ntype_id": [4, 641, 782], "get_o": 865, "get_part_s": 4, "get_partition_book": [4, 693, 695, 739, 779, 781, 849], "get_seq_by_id": 865, "get_siz": 4, "ggnn": 436, "ghz": 179, "giant": 130, "gid": 571, "gif": 865, "gilmer": [830, 838], "gin": [730, 770, 813, 840, 870], "ginconv": [730, 770, 813, 870], "gindataset": [426, 430, 431, 691, 730, 737, 770, 777, 813, 840, 870], "girvan": 167, "git": [696, 782, 817], "github": [135, 136, 151, 152, 153, 159, 162, 165, 168, 186, 210, 682, 696, 750, 782, 816, 817, 844, 853, 854, 864, 865], "git\uc5d0\uc11c": 782, "give": [4, 11, 27, 114, 207, 245, 338, 475, 556, 570, 635, 680, 701, 702, 717, 787, 818, 828, 840], "given": [4, 5, 6, 9, 14, 22, 30, 31, 32, 35, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 79, 81, 82, 87, 88, 93, 109, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 148, 164, 183, 184, 197, 198, 200, 205, 208, 209, 213, 214, 216, 219, 220, 229, 230, 232, 233, 234, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 287, 290, 293, 297, 300, 303, 305, 308, 313, 315, 316, 320, 321, 325, 334, 335, 342, 344, 346, 352, 389, 392, 394, 395, 396, 398, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 415, 417, 418, 421, 428, 430, 433, 452, 458, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 547, 549, 551, 552, 556, 558, 559, 562, 563, 564, 565, 566, 570, 574, 575, 594, 597, 598, 599, 601, 630, 635, 640, 643, 647, 649, 651, 658, 659, 661, 662, 664, 667, 681, 689, 694, 697, 703, 704, 719, 728, 730, 731, 732, 789, 823, 827, 836, 839, 840, 841, 853, 855, 858, 861, 864, 865], "gklib": [696, 782], "gklib\uc744": 782, "glabel": 567, "glist": 346, "gloabl": 4, "glob": [376, 377, 378, 379, 380, 381, 435, 436, 437, 438, 439, 440, 441, 442, 443, 468, 469, 470, 471, 472, 473], "global": [4, 13, 128, 129, 164, 236, 237, 240, 297, 387, 436, 446, 563, 633, 669, 817, 848], "global_test_eid": 849, "global_valid_eid": 849, "gloo": [693, 694, 739, 740, 779, 780, 844, 848, 849, 870], "glorot": [400, 407, 408, 412, 414, 415, 418, 421, 423], "glove": [184, 858], "glove_emb": 184, "glove_embed_fil": 184, "gluon": [199, 200, 723, 807], "gluoncv": 817, "gluonnlp": 817, "gluon\u7684nn\u5757": 763, "gm_": [4, 10], "gml": [705, 790], "gnn": [4, 7, 12, 21, 135, 136, 137, 146, 151, 152, 153, 159, 162, 165, 169, 171, 180, 182, 188, 210, 213, 214, 215, 216, 219, 220, 297, 303, 315, 357, 416, 426, 427, 428, 429, 430, 431, 456, 458, 563, 706, 712, 716, 720, 727, 728, 729, 731, 732, 750, 761, 767, 772, 791, 794, 798, 799, 802, 806, 811, 812, 814, 815, 816, 824, 828, 829, 830, 831, 841, 842, 845, 852, 854, 855, 870, 871], "gnn_modul": 416, "gnnbenchmarkdataset": [135, 136, 151, 152, 153], "gnnexplain": [142, 143, 189, 190, 427], "gnnlayer": 416, "gnn\uc5d0": 805, "gnn\uc740": 798, "gnn\uc744": [799, 802, 812, 814], "gnu": [817, 845], "go": [14, 21, 22, 562, 816, 817, 837, 839, 848, 854, 858], "goal": 188, "goe": [4, 20, 21, 704, 714, 838, 839], "gone": 840, "good": [135, 136, 162, 839, 848, 855], "googl": [21, 822, 865], "gossipcop": 159, "goto": 156, "gp_": [4, 10], "gpb": [4, 240, 695, 781], "gpt": 865, "gpu": [6, 9, 10, 14, 21, 89, 108, 110, 112, 118, 119, 125, 126, 210, 249, 250, 287, 291, 298, 317, 334, 341, 344, 352, 433, 455, 547, 556, 558, 562, 563, 564, 569, 583, 635, 636, 699, 708, 712, 716, 719, 720, 722, 727, 788, 793, 798, 802, 806, 811, 816, 817, 819, 820, 824, 827, 828, 830, 831, 834, 835, 848, 852, 855, 858, 865], "gpu_0": [10, 455], "gpu_cach": 210, "gpu_cache_threshold": 291, "gpu\u56fe\u53ea\u63a5\u53d7gpu\u4e0a\u7684\u7279\u5f81\u6570\u636e": 747, "gpu\ub85c": [788, 800, 805], "gpu\ub97c": 802, "gpu\uc5d0": [788, 798, 801, 805], "gpu\uc5d0\uc11c": [784, 801], "graclu": 6, "grad": [9, 118, 119], "grad_fn": [9, 118, 389, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 404, 406, 407, 408, 409, 410, 412, 414, 415, 418, 420, 421, 422, 423, 436, 438, 439, 440, 443], "gradient": [4, 9, 10, 383, 387, 397, 416, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 693, 712, 722, 798, 806, 840, 848, 870], "gradscal": [722, 806], "gradual": [861, 864, 865], "graident\ub4e4\uc740": 806, "grain": [313, 823, 845, 858], "granular": [164, 166], "grapbolt": 721, "graph": [3, 6, 9, 11, 13, 14, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 289, 291, 292, 295, 296, 297, 299, 300, 303, 304, 305, 308, 309, 310, 312, 313, 314, 315, 316, 319, 320, 321, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 455, 456, 457, 458, 459, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 685, 687, 690, 692, 693, 698, 702, 703, 706, 707, 708, 709, 715, 720, 721, 722, 724, 726, 729, 736, 737, 738, 741, 742, 745, 746, 747, 748, 749, 752, 757, 765, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 781, 782, 783, 784, 785, 786, 787, 788, 789, 793, 794, 796, 798, 799, 800, 801, 803, 805, 806, 810, 811, 812, 813, 814, 815, 817, 821, 822, 823, 824, 825, 827, 828, 829, 830, 831, 832, 838, 842, 844, 858, 862, 864, 871, 872], "graph0": 689, "graph1": 689, "graph_data": [689, 705, 749, 790], "graph_degre": 183, "graph_edg": 841, "graph_emb": 861, "graph_embed_func": 861, "graph_feat": [128, 129, 430, 431], "graph_format": [231, 240], "graph_hidden_s": 861, "graph_id": [689, 841], "graph_id_field": 689, "graph_index": 21, "graph_label": 567, "graph_list": 346, "graph_nam": [4, 240, 693, 694, 695, 696, 697, 739, 740, 741, 779, 780, 781, 782, 848, 849], "graph_op": 861, "graph_path": [692, 738, 778], "graph_pool": 865, "graph_prop": 861, "graph_prop_func": 861, "graph_properti": 841, "graph_sampl": [210, 211, 212], "graph_train": 849, "graphbolt": [231, 235, 236, 240, 241, 242, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 713, 714, 715, 717, 719, 720, 721, 828, 829, 831, 832, 834, 835, 845, 871], "graphbolt_test": 309, "graphconv": [385, 390, 399, 406, 409, 416, 422, 423, 428, 430, 431, 714, 719, 722, 723, 725, 730, 732, 758, 759, 760, 762, 765, 770, 772, 800, 802, 803, 805, 807, 809, 813, 815, 836, 840, 852], "graphdataload": [426, 430, 431, 690, 691, 730, 736, 737, 770, 776, 777, 813, 820, 840, 870], "graphdataloader\uc758": 813, "graphemb": 861, "graphgp": 448, "graphic": 305, "graphmetadata": 297, "graphnet": 824, "graphorm": [447, 683], "graphormerlay": 685, "graphpartitionbook": [4, 232, 236, 237, 239, 241, 695], "graphpool": 865, "graphpr": 138, "graphprop": 861, "graphproppr": [138, 690, 736, 776, 820], "graphsag": [175, 181, 396, 400, 421, 693, 715, 716, 719, 721, 725, 732, 742, 759, 772, 783, 802, 803, 805, 809, 815, 828, 829, 831, 838, 848, 849, 855, 871], "graphsage\u4e2dgcn\u805a\u5408\u4e0d\u9700\u8981fc_self": 765, "graphsage\u7684\u5b9e\u73b0": 762, "graphsage\ub97c": 779, "graphsage\uc5d0\uc11c": 815, "graphsaint": [160, 194, 217], "graphtransform": 685, "graphviz_layout": 858, "graphwis": 440, "graph\uc5d0": 799, "graph\uc758": [800, 805, 815], "great": 854, "greater": [131, 197, 287, 317, 334, 563, 564, 565, 845, 858], "greatli": [856, 868], "greedi": 6, "green": 830, "grid": [171, 172, 190], "grid_siz": 190, "groud": 815, "ground": [150, 154, 167, 176, 732, 815, 829, 836, 849, 854, 861, 871], "group": [4, 20, 137, 166, 167, 182, 293, 355, 356, 416, 455, 683, 685, 693, 705, 717, 823, 834, 835, 838, 841, 854], "groupbi": 841, "grouplen": 173, "growth": 853, "grpah": 670, "gru": [414, 861], "grucel": 861, "gsddmm": 13, "gsddmmbackward": 9, "gspmm": 13, "gspmmbackward": [9, 408], "gt": [444, 445, 446, 447, 448, 449, 450, 451, 684, 820, 828, 829, 831, 834, 835], "gtlayer": 820, "gtmodel": 820, "guarante": [4, 101, 102, 226, 232, 239, 303, 559, 870], "guid": [1, 3, 11, 21, 209, 210, 214, 215, 216, 217, 220, 222, 223, 224, 225, 635, 691, 696, 715, 732, 741, 791, 816, 838, 841, 848, 858], "guide_cn": [750, 767], "guidelin": 816, "guo": [858, 865], "gz": [688, 735, 775], "gz_file_path": [688, 735, 775], "gz\u6216": 735, "gz\u6587\u4ef6": 735, "h": [4, 5, 22, 25, 27, 28, 30, 34, 35, 43, 44, 46, 51, 53, 54, 56, 70, 73, 74, 77, 91, 92, 93, 94, 100, 103, 104, 108, 113, 114, 115, 116, 121, 128, 129, 145, 177, 178, 179, 245, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 351, 389, 390, 393, 394, 402, 403, 405, 407, 408, 409, 417, 422, 423, 426, 427, 428, 429, 430, 431, 449, 450, 451, 452, 453, 454, 458, 475, 477, 551, 552, 556, 557, 572, 573, 641, 642, 643, 645, 646, 654, 655, 656, 662, 667, 668, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 703, 708, 710, 712, 718, 722, 725, 728, 730, 731, 732, 747, 752, 754, 756, 757, 759, 761, 765, 768, 770, 771, 772, 788, 793, 796, 798, 799, 802, 804, 806, 809, 812, 813, 814, 815, 817, 820, 821, 823, 830, 831, 836, 838, 839, 840, 849, 852, 853, 855, 858, 861, 865], "h1": [5, 47, 75, 385, 642, 663, 820], "h2": [5, 47, 70, 75, 385, 642, 663, 820], "h2h": 853, "h2o": 853, "h_": [120, 391, 396, 402, 407, 408, 413, 414, 418, 421, 427, 429, 725, 726, 765, 766, 809, 810, 821, 838, 852, 855, 858], "h_atom": 179, "h_cat": 858, "h_dict": [732, 772, 815], "h_dim": 853, "h_dst": [452, 718, 759, 761, 802, 804], "h_e": [397, 403, 419], "h_feat": [831, 836, 838, 839, 840], "h_g": [730, 770, 813], "h_head": [453, 454], "h_i": [389, 392, 393, 397, 398, 399, 400, 401, 403, 404, 407, 408, 410, 411, 412, 414, 415, 418, 419, 420, 421, 452, 456, 823, 853, 855, 865], "h_item": [732, 772, 815], "h_j": [389, 392, 397, 399, 401, 403, 404, 407, 408, 409, 410, 411, 415, 418, 419, 420, 421, 452, 853, 858], "h_jl": 858, "h_max": 5, "h_n": [397, 403, 419, 838], "h_neg_dst": 849, "h_neg_src": 849, "h_neigh": [718, 725, 761, 765, 804, 809], "h_new": 5, "h_pos_dst": 849, "h_pos_src": 849, "h_self": [725, 765, 809], "h_size": 858, "h_src": [452, 718, 761, 804], "h_sub_g": [705, 749, 790], "h_sum": [5, 128, 129], "h_t": 865, "h_tail": [453, 454], "h_total": 838, "h_u": [728, 768, 812, 830, 838, 839, 861], "h_user": [732, 772, 815], "h_v": [724, 728, 730, 764, 768, 770, 808, 812, 813, 830, 838, 839, 852], "h_x": 403, "ha": [4, 5, 9, 14, 22, 27, 28, 30, 31, 32, 34, 36, 37, 47, 48, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 107, 113, 114, 115, 117, 118, 119, 120, 122, 131, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 160, 162, 166, 167, 168, 170, 173, 175, 176, 184, 191, 192, 194, 220, 221, 230, 240, 246, 287, 290, 291, 293, 310, 328, 334, 335, 339, 340, 341, 344, 351, 353, 385, 406, 415, 432, 433, 434, 451, 455, 476, 478, 540, 547, 551, 553, 555, 556, 559, 561, 562, 565, 569, 572, 573, 574, 575, 608, 635, 640, 645, 646, 687, 689, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 705, 708, 714, 715, 716, 718, 722, 723, 725, 727, 728, 730, 777, 785, 817, 820, 821, 823, 824, 833, 834, 835, 837, 838, 839, 840, 848, 849, 852, 853, 854, 855, 858, 861, 862, 865, 866, 868], "hadamard": 820, "half": [9, 141, 639, 708, 709, 793, 865], "halo": [236, 240, 353, 541, 696, 697, 782], "halo_hop": 240, "halt": [562, 865], "halt_and_accum": 865, "halt_dec": 865, "halt_enc": 865, "haltingunit": 865, "hamilton": 838, "hand": 697, "handcraft": [161, 163], "handl": [210, 292, 389, 401, 402, 404, 405, 407, 408, 409, 412, 415, 422, 501, 688, 689, 696, 697, 699, 701, 704, 708, 725, 726, 832, 837, 840, 855, 861, 865], "hang": [293, 871], "hao": 855, "happen": [210, 226, 559, 854], "happend": 164, "har": [856, 868], "hard": [21, 245, 475, 861], "hardwar": [720, 845], "harm": [303, 315, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422], "harvard": 865, "has_cach": [156, 687, 692, 734, 738, 774, 778], "has_dupl": 823, "has_edges_between": [563, 564, 861], "has_nontree_edg": [230, 543], "has_reverse_edg": [230, 543], "has_top": 782, "hasattr": 139, "hash": [156, 199, 200, 243, 688, 735, 775], "hash_kei": 156, "hat": [409, 413, 426, 427, 839, 852, 854, 864], "have": [4, 6, 9, 10, 14, 21, 22, 26, 34, 35, 48, 53, 55, 56, 57, 58, 60, 61, 68, 87, 88, 93, 94, 100, 115, 116, 117, 118, 119, 122, 125, 126, 130, 131, 161, 165, 171, 174, 180, 186, 188, 197, 205, 210, 211, 212, 214, 216, 219, 220, 226, 227, 230, 234, 235, 241, 242, 246, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 296, 297, 298, 310, 317, 320, 328, 334, 335, 338, 339, 340, 343, 344, 352, 353, 357, 385, 387, 388, 404, 417, 420, 422, 428, 429, 430, 431, 435, 437, 441, 442, 456, 476, 540, 541, 557, 558, 560, 562, 563, 564, 565, 566, 574, 575, 594, 597, 598, 599, 616, 626, 630, 634, 635, 640, 641, 643, 689, 691, 693, 694, 695, 696, 697, 698, 700, 702, 705, 708, 710, 712, 714, 716, 718, 719, 721, 722, 726, 728, 730, 732, 787, 790, 799, 820, 823, 828, 829, 830, 831, 836, 837, 838, 839, 840, 841, 845, 848, 849, 853, 854, 855, 858, 859, 861, 865, 868, 870, 871], "hdf": [346, 567, 701], "hdfs\u4e2d\u52a0\u8f7d\u6216\u5411s3": 745, "hdfs\u4fdd\u5b58\u56fe": 745, "hdfs\uc5d0": 786, "he": [95, 96, 117, 553, 554, 555, 557, 643, 651, 705, 708, 749, 752, 790, 793, 858, 861], "head": [9, 394, 401, 402, 405, 407, 408, 417, 439, 440, 444, 446, 447, 448, 449, 450, 451, 453, 454, 685, 722, 806, 841, 856, 866, 868], "head_dim": 820, "head_out": 855, "head_siz": 417, "header": [689, 833, 834, 835], "head\uc758": 806, "heat": [178, 179, 659], "heatkernel": 13, "heavi": 195, "heavili": 708, "height": [189, 190], "height_in": 864, "height_in_i": 864, "height_out": 864, "height_out_i": 864, "held": 164, "help": [161, 293, 320, 641, 704, 705, 730, 832, 836, 854], "henc": [116, 126, 130, 135, 136, 151, 152, 153, 192, 250, 338, 344, 557, 634, 643, 701, 705, 790], "here": [5, 9, 21, 31, 145, 151, 152, 164, 166, 175, 177, 178, 179, 183, 184, 240, 313, 385, 682, 689, 690, 691, 695, 696, 709, 710, 714, 719, 722, 724, 727, 728, 731, 777, 782, 818, 819, 820, 821, 824, 828, 830, 837, 838, 839, 840, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865], "hereaft": 865, "hetergen": [246, 476], "hetero": [303, 308, 315, 696], "hetero_block": [757, 799], "hetero_fronti": [757, 799], "hetero_graph": [727, 728, 731, 732, 767, 768, 771, 772, 811, 812, 814, 815], "heteroclassifi": [730, 770, 813], "heterodotproductpredictor": [728, 731, 768, 771, 812, 814], "heterogen": [1, 4, 7, 13, 26, 27, 28, 31, 34, 35, 36, 37, 38, 42, 47, 51, 53, 54, 65, 66, 72, 75, 77, 79, 82, 93, 94, 95, 96, 100, 101, 102, 108, 113, 114, 115, 116, 117, 140, 214, 216, 219, 220, 221, 222, 223, 224, 225, 240, 242, 246, 289, 293, 297, 301, 305, 310, 312, 320, 321, 332, 333, 334, 335, 339, 340, 384, 385, 386, 387, 389, 401, 404, 405, 407, 408, 409, 412, 415, 417, 422, 427, 428, 429, 476, 540, 553, 554, 555, 563, 574, 575, 634, 635, 640, 641, 642, 643, 649, 650, 651, 656, 657, 666, 667, 670, 671, 693, 696, 697, 699, 700, 707, 723, 725, 779, 784, 785, 796, 801, 807, 809, 832, 833, 858], "heterogenen": [113, 557], "heterogeneous_graph_nc_lp": 834, "heterograph": [1, 4, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 122, 125, 126, 130, 220, 246, 247, 335, 339, 340, 352, 357, 385, 387, 401, 402, 404, 405, 407, 408, 412, 415, 418, 421, 427, 428, 429, 476, 477, 540, 553, 554, 555, 557, 558, 561, 562, 563, 564, 634, 635, 640, 641, 642, 643, 649, 650, 651, 656, 666, 667, 671, 681, 689, 710, 715, 726, 727, 731, 732, 749, 757, 767, 771, 772, 790, 799, 810, 811, 814, 815, 861, 864], "heterographconv": [428, 714, 717, 719, 730, 732, 758, 760, 762, 766, 770, 772, 800, 803, 805, 813, 815], "heterogrph": [91, 92], "heteroitemset": [292, 293, 301, 304, 309, 314, 713, 714, 719, 834], "heteromlppredictor": [728, 768, 812], "heterophili": [120, 137, 171, 180, 182, 188, 245, 475], "heterophilousgraphdataset": [137, 171, 180, 182, 188], "hexadecim": [199, 200], "hg": [51, 55, 60, 61, 77, 87, 88, 90, 101, 102, 107, 357, 427, 428, 429, 430, 640, 641, 705, 713, 730, 749, 770, 782, 790, 813], "hg1": [36, 37, 38, 122, 681], "hg2": [36, 37, 38, 122, 681], "hg_2": 640, "hhhiddleston": 750, "hid_feat": [428, 730, 732, 770, 772, 813, 815], "hid_siz": [721, 722], "hidden": [168, 392, 403, 424, 439, 440, 447, 685, 712, 724, 728, 732, 798, 808, 812, 853, 854, 855, 858, 865], "hidden_d": 424, "hidden_dim": [428, 431, 730, 770, 813, 821, 855], "hidden_feat": [392, 714, 719, 758, 760, 762, 800, 803, 805], "hidden_featur": [714, 719, 728, 731, 757, 758, 759, 760, 762, 768, 771, 799, 800, 802, 803, 805, 812, 814], "hidden_s": [168, 403, 447, 685, 716, 717, 818, 819, 820, 828, 829, 871], "hidden_x": [716, 717, 721, 828, 829, 871], "hierarch": 183, "high": [240, 245, 291, 429, 431, 453, 454, 475, 567, 694, 708, 709, 780, 817, 824, 827, 855, 864, 865], "high2low": [429, 431], "higher": [9, 214, 303, 426, 427, 428, 429, 430, 431, 731, 854, 855, 864, 866, 868], "highest": [178, 179, 855], "highli": [395, 396, 686, 816, 824, 827, 845, 848, 853], "highlight": [691, 721, 818, 819, 820, 821, 829, 854, 865, 871], "hing": 803, "hint": [710, 796], "histogram": [855, 864], "histor": 159, "hold": [6, 36, 37, 125, 182, 210, 217, 248, 249, 297, 302, 441, 650, 651, 671, 697, 705, 726, 838], "holist": 11, "home": [23, 139, 696, 782, 834, 835, 848, 858, 861, 864], "homebrew": 817, "homegen": [781, 813], "homo": [178, 179, 399, 400], "homogen": [1, 4, 6, 7, 9, 26, 27, 28, 34, 35, 36, 37, 38, 42, 47, 48, 53, 54, 55, 57, 60, 61, 65, 66, 75, 77, 79, 82, 87, 88, 90, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 122, 138, 139, 209, 210, 214, 215, 216, 219, 220, 222, 223, 224, 225, 240, 241, 246, 289, 295, 297, 305, 309, 310, 312, 320, 321, 332, 333, 335, 337, 339, 340, 341, 342, 343, 344, 352, 389, 401, 402, 404, 405, 407, 408, 409, 412, 415, 418, 421, 422, 426, 430, 431, 476, 540, 547, 550, 553, 554, 555, 556, 557, 558, 560, 562, 565, 570, 633, 635, 636, 640, 641, 642, 643, 650, 651, 656, 658, 659, 660, 661, 662, 664, 665, 666, 667, 668, 670, 671, 689, 695, 696, 697, 700, 714, 717, 719, 725, 728, 730, 731, 732, 781, 782, 785, 790, 799, 800, 803, 805, 809, 812, 813, 814, 815, 832, 833, 834], "homogeneous_graph_nc_lp": 835, "homogeneous\uc5ec\uc57c": 804, "homograph": [41, 56, 689], "homophil": [162, 345, 474], "homophili": [13, 120, 244, 245, 345, 474, 475], "hood": [693, 696, 852, 870], "hook": [426, 427, 428, 429, 430, 431], "hop": [219, 240, 303, 308, 338, 339, 340, 353, 422, 423, 426, 427, 428, 430, 541, 660, 819, 830, 854, 855], "hop2j_list": 854, "host": [1, 2, 5], "hostil": 166, "hot": [165, 168, 171, 457, 837, 861], "hotel": 163, "hour": 166, "hous": [141, 142, 143], "how": [4, 9, 11, 21, 139, 162, 165, 220, 245, 291, 399, 402, 408, 410, 415, 436, 438, 443, 475, 558, 559, 574, 575, 643, 685, 686, 687, 688, 689, 690, 691, 692, 694, 695, 696, 697, 698, 700, 707, 709, 712, 716, 718, 719, 721, 722, 723, 724, 727, 728, 732, 757, 799, 805, 817, 818, 819, 820, 821, 827, 828, 829, 830, 832, 834, 835, 836, 838, 839, 840, 841, 842, 844, 845, 848, 852, 853, 854, 855, 856, 861, 864, 866, 868, 870, 871], "howev": [4, 9, 21, 22, 171, 236, 293, 303, 308, 315, 316, 695, 697, 700, 704, 716, 725, 817, 829, 830, 839, 840, 844, 848, 854, 855, 858, 861, 865], "html": [9, 21, 145, 184, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 845], "http": [9, 21, 23, 133, 134, 135, 136, 137, 144, 145, 146, 147, 151, 152, 153, 159, 161, 162, 163, 165, 167, 168, 169, 171, 173, 174, 175, 177, 180, 181, 182, 184, 186, 188, 195, 210, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 430, 431, 446, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 558, 682, 691, 696, 721, 737, 750, 769, 777, 782, 817, 818, 819, 820, 821, 823, 824, 828, 829, 831, 834, 835, 841, 844, 845, 848, 861, 865], "hu": [708, 752, 793, 861], "huaiwen": 750, "huang": [750, 852, 854], "huge": 722, "hugectr": 210, "human": 855, "hundr": [697, 816], "hurt": 855, "hv": [96, 116, 117, 554, 557, 643, 705, 708, 749, 752, 790, 793, 861], "hv_init": 861, "hv_old": 861, "hx": [722, 806], "hy": [722, 806], "hyper": [4, 424, 855, 858], "hypercub": 172, "hyperedg": 821, "hyperedge_degre": 821, "hypergraph": 822, "hyperlink": [155, 187, 192, 193, 299, 302, 305], "hyperparamet": [192, 409, 429, 431, 558, 731, 855], "hyperthread": 845, "h\u662f\u4ece5": [768, 771], "h\u73b0\u5728\u662f\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u5f20\u91cf\u5bf9": 761, "i": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 200, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 328, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 356, 357, 383, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 474, 475, 476, 477, 479, 481, 484, 486, 499, 500, 501, 502, 505, 507, 511, 513, 519, 521, 525, 527, 540, 541, 547, 548, 549, 550, 551, 552, 554, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 580, 583, 584, 594, 597, 598, 599, 600, 601, 608, 610, 612, 613, 614, 616, 619, 620, 622, 626, 633, 634, 635, 637, 638, 639, 641, 643, 645, 646, 647, 649, 650, 651, 658, 659, 661, 662, 664, 667, 668, 669, 673, 674, 675, 676, 678, 679, 680, 681, 683, 684, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 735, 736, 748, 749, 752, 757, 765, 766, 771, 775, 776, 777, 781, 782, 785, 788, 789, 790, 793, 794, 799, 802, 804, 809, 810, 813, 814, 816, 817, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 845, 848, 849, 852, 853, 855, 858, 859, 861, 862, 864, 865, 866, 868, 870, 871], "i2h": 853, "i64": [696, 782], "i_": 417, "i_1": [116, 557], "i_2": 557, "i_j": 858, "i_n": 116, "ic": 865, "icew": 166, "icews18": [25, 166], "icon": 819, "id": [0, 4, 6, 13, 20, 26, 27, 32, 34, 35, 39, 44, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 77, 78, 87, 88, 90, 92, 93, 94, 95, 96, 100, 104, 107, 114, 115, 122, 123, 124, 125, 126, 130, 131, 133, 138, 140, 144, 184, 197, 205, 209, 220, 221, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 249, 250, 287, 293, 294, 296, 297, 298, 301, 305, 309, 310, 317, 320, 321, 325, 327, 332, 333, 334, 335, 339, 340, 341, 353, 354, 355, 357, 383, 384, 387, 426, 427, 428, 429, 430, 432, 433, 434, 451, 476, 540, 541, 547, 548, 549, 553, 554, 556, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 574, 575, 635, 640, 641, 642, 643, 647, 675, 680, 683, 689, 691, 693, 696, 704, 705, 711, 713, 714, 719, 721, 781, 789, 790, 799, 800, 803, 805, 821, 831, 834, 835, 837, 841, 853, 858, 865, 870], "id2etyp": 695, "id2ntyp": 695, "id_": 221, "id_tensor": 4, "idconvert": 695, "idea": [21, 22, 730, 731, 823, 839, 858, 865, 866, 868], "ideal": 855, "ident": [116, 220, 297, 397, 409, 419, 563, 635, 650, 657, 693, 714, 731, 818, 819, 821, 823, 828, 829, 871], "identifi": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 241, 247, 426, 427, 429, 431, 455, 478, 551, 553, 555, 572, 694, 695, 725, 728, 730], "idf": 161, "idna": [828, 829, 831, 834, 835], "ids_devic": [294, 298, 317], "idtyp": [4, 54, 64, 71, 125, 126, 131, 249, 250, 287, 334, 548, 549, 704, 715, 748, 789], "idx": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 687, 691, 692, 734, 737, 738, 774, 777, 778, 820], "idx_b": 499, "idx_list": 346, "id\uac00": 782, "id\uac12\ub4e4\uc744": 781, "id\uac12\ub4e4\uc774": 777, "id\uac12\uc744": 782, "id\ub294": [781, 782, 790, 799], "id\ub4e4\uacfc": 781, "id\ub4e4\ub85c": 781, "id\ub4e4\uc5d0": 789, "id\ub4e4\uc640": 799, "id\ub4e4\uc740": [782, 790], "id\ub4e4\uc744": [781, 782], "id\ub4e4\uc758": [800, 803, 805], "id\ub77c\uace0": 789, "id\ub85c": [781, 789], "id\ub97c": [781, 782, 789, 790, 797, 800], "id\ub9cc\uc744": 782, "id\uc5d0": 782, "id\uc640": [781, 782, 800], "id\uc758": [781, 782, 789], "id\uc774\ub2e4": 782, "ie": 164, "ignor": [116, 133, 144, 200, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 426, 427, 428, 429, 430, 431, 689], "ignore_bipartit": 116, "ii": [409, 423], "ij": [357, 389, 391, 399, 401, 402, 403, 407, 408, 409, 412, 413, 414, 418, 423, 752, 793, 821, 823, 855, 864, 865], "ik": 855, "illustr": [695, 697, 704, 715, 818, 819, 820, 821, 834, 848, 849, 854, 865], "imag": [146, 160, 169, 824, 837, 840, 865], "image0": [864, 865], "image1": [864, 865], "image10": 865, "image2": [855, 864, 865], "image3": [864, 865], "image4": [864, 865], "image5": [855, 864, 865], "image6": [855, 865], "image7": [855, 865], "image8": 865, "image9": 865, "imaginari": 820, "imbal": [162, 697], "imdb": 186, "imdbbinari": [165, 870], "imdbmulti": 165, "immedi": [22, 41, 560, 855], "immunolog": 855, "impact": [14, 559], "impl": [834, 835], "implement": [0, 4, 6, 7, 9, 10, 14, 21, 22, 23, 197, 290, 300, 303, 313, 315, 391, 415, 432, 433, 444, 455, 479, 481, 484, 486, 505, 507, 511, 513, 519, 521, 525, 527, 556, 653, 685, 686, 687, 688, 689, 691, 692, 693, 694, 695, 697, 707, 708, 709, 712, 714, 719, 720, 721, 725, 730, 732, 805, 816, 818, 819, 823, 827, 829, 836, 838, 841, 848, 855, 856, 858, 866, 868, 871], "impli": 853, "implicit": [89, 731, 771, 814, 823], "implicitli": [27, 114, 303, 308, 315, 316, 861], "import": [4, 5, 6, 9, 20, 21, 22, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 120, 122, 125, 126, 128, 129, 131, 137, 138, 141, 142, 143, 146, 147, 149, 155, 160, 169, 171, 173, 174, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 204, 214, 217, 218, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 310, 317, 318, 319, 321, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 345, 346, 351, 357, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 474, 475, 476, 477, 478, 503, 540, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 563, 567, 569, 570, 571, 572, 573, 574, 575, 610, 633, 634, 636, 640, 641, 642, 643, 645, 646, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 701, 702, 703, 704, 705, 708, 709, 710, 713, 714, 718, 719, 722, 724, 725, 726, 727, 728, 729, 730, 732, 734, 735, 736, 737, 738, 739, 740, 745, 746, 747, 748, 749, 752, 753, 754, 757, 761, 762, 764, 765, 766, 767, 768, 769, 770, 772, 774, 775, 776, 777, 778, 779, 780, 781, 786, 787, 788, 789, 790, 793, 794, 795, 796, 799, 804, 805, 806, 808, 809, 810, 811, 812, 813, 815, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870], "importance_sampl": [214, 563], "importerror": [818, 819, 820, 821, 823, 828, 829, 831, 834, 835], "imposs": [565, 828], "impress": 855, "improv": [4, 10, 21, 658, 691, 722, 845, 846, 848, 853, 858, 861, 862, 865, 868], "in_": [392, 401, 402, 405, 407, 408, 412, 415, 421], "in_degre": [4, 87, 89, 445, 683, 685, 703, 725, 747, 760, 765, 788, 803, 809, 837, 854], "in_dim": [427, 429, 431, 728, 730, 768, 770, 812, 813, 855], "in_dir": 697, "in_edg": [88, 703, 747, 788, 854], "in_edge_feat": 402, "in_feat": [386, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 411, 412, 414, 415, 418, 420, 421, 422, 423, 426, 428, 430, 443, 452, 456, 693, 714, 718, 719, 721, 722, 724, 730, 732, 739, 758, 760, 761, 762, 764, 770, 772, 779, 800, 803, 804, 805, 806, 808, 813, 815, 831, 836, 838, 839, 840, 848, 849, 852, 853, 854], "in_feat_nam": 668, "in_feats\u662f\u8f93\u5165\u7279\u5f81\u7684\u7ef4\u5ea6": 772, "in_featur": [714, 719, 728, 731, 757, 758, 759, 760, 762, 768, 771, 799, 800, 802, 803, 805, 812, 814, 852, 858], "in_indx": 864, "in_memori": [309, 318, 833, 834, 835], "in_nod": 864, "in_node_feat": 402, "in_siz": [386, 388, 397, 403, 417, 419, 716, 717, 721, 722, 818, 819, 821, 823, 828, 829, 831, 871], "in_subgraph": [297, 300, 339, 540, 715, 757, 799], "in_test_mask": [197, 205], "in_train_mask": [197, 205], "in_valid_mask": [197, 205], "inbound": [214, 216, 219, 234, 241, 242, 297, 300, 335, 563, 564, 565, 566, 635, 799], "inc": 63, "incept": [668, 819], "incid": [13, 62, 63, 220, 245, 246, 247, 475, 697, 707, 714, 728, 792, 800, 821, 828, 839, 854], "includ": [4, 21, 22, 48, 62, 63, 132, 133, 138, 139, 144, 157, 158, 161, 162, 163, 170, 179, 191, 197, 205, 214, 216, 219, 230, 236, 240, 289, 309, 314, 321, 339, 340, 395, 404, 413, 420, 432, 434, 543, 558, 635, 689, 693, 696, 697, 700, 701, 708, 711, 720, 724, 725, 726, 728, 730, 731, 821, 830, 833, 834, 835, 839, 844, 845, 855, 858, 861, 865], "include_dst_in_src": 635, "include_original_edge_id": [309, 326], "include_reverse_edg": [324, 714, 828], "inclus": [21, 207], "incom": [20, 61, 100, 117, 214, 216, 297, 335, 353, 357, 405, 479, 480, 481, 482, 484, 485, 486, 487, 505, 506, 507, 508, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 651, 707, 799, 838, 853, 855, 858, 865], "incomplet": [4, 210, 213, 688, 735, 775, 829], "inconsist": [162, 391], "incorpor": [173, 732], "increas": [309, 317, 318, 409, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 559, 693, 824, 844], "increment": [562, 677, 861, 865], "incur": [246, 247, 335, 339, 340, 476, 477, 540, 720], "inde": [22, 635, 640], "indent": 782, "independ": [120, 572, 573, 645, 646, 705], "index": [4, 6, 21, 22, 95, 96, 108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 287, 289, 294, 296, 298, 301, 302, 303, 305, 310, 317, 319, 328, 334, 391, 409, 581, 582, 645, 646, 687, 691, 694, 697, 703, 721, 725, 737, 747, 774, 777, 788, 823, 828, 829, 831, 833, 834, 835, 848, 853, 865], "indexes_follow": 301, "indexes_lik": 301, "indic": [4, 6, 9, 12, 30, 31, 32, 53, 54, 62, 63, 101, 102, 131, 135, 136, 139, 140, 142, 143, 145, 146, 149, 151, 152, 169, 171, 180, 183, 185, 189, 190, 196, 209, 210, 213, 218, 220, 232, 239, 240, 241, 246, 287, 293, 294, 295, 296, 297, 298, 300, 301, 303, 305, 308, 310, 311, 312, 315, 316, 317, 319, 321, 327, 328, 332, 333, 334, 343, 346, 353, 354, 398, 444, 446, 447, 457, 476, 499, 541, 558, 559, 561, 562, 577, 578, 579, 580, 581, 582, 583, 585, 587, 588, 590, 591, 592, 594, 595, 597, 598, 599, 600, 601, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 635, 643, 683, 691, 694, 696, 697, 700, 704, 705, 708, 719, 721, 726, 729, 732, 772, 815, 818, 819, 820, 821, 823, 828, 830, 831, 834, 835, 836, 841, 848, 852, 853, 854, 855, 858, 861], "indices1": [616, 628], "indices2": [616, 628], "indirectli": 701, "individu": [121, 122, 166, 297, 393, 438, 563, 697, 861], "indptr": [32, 297, 300, 303, 308, 310, 311, 319, 321, 325, 333, 581, 582, 613, 614, 823, 828, 831], "induc": [26, 134, 197, 209, 217, 219, 234, 246, 247, 297, 300, 303, 308, 315, 316, 335, 339, 340, 426, 427, 428, 430, 440, 476, 477, 540, 564, 565, 566, 635, 714, 837, 858, 865], "induced_dst": 635, "induced_src": 635, "induct": [160, 175, 194, 217, 396, 400, 421, 721, 855], "industri": 162, "ineffici": [14, 730], "inf": 446, "infeas": 716, "infer": [4, 131, 287, 290, 334, 457, 610, 612, 613, 614, 626, 640, 693, 697, 704, 712, 722, 759, 789, 802, 823, 845, 858, 861, 865], "inferenc": 845, "infin": [479, 481, 484, 486, 505, 507, 511, 513, 519, 521, 525, 527], "infinitesim": 397, "influenc": 134, "info": [203, 206], "info_path": [692, 738, 778], "inform": [4, 13, 22, 27, 28, 59, 95, 96, 101, 102, 114, 115, 116, 117, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 206, 220, 236, 237, 240, 245, 246, 247, 249, 250, 287, 292, 300, 303, 308, 314, 315, 316, 334, 335, 338, 344, 352, 391, 426, 427, 430, 455, 475, 476, 477, 540, 548, 549, 553, 554, 555, 557, 634, 641, 643, 644, 681, 682, 685, 687, 689, 691, 692, 694, 695, 696, 697, 704, 705, 713, 729, 730, 732, 774, 778, 817, 829, 833, 836, 838, 839, 840, 848, 853, 854, 855, 858, 861, 865, 871], "informat": 853, "infti": 424, "inher": [859, 868], "inherit": [310, 653, 687, 688, 694, 717, 723, 836, 841], "init": [4, 10, 384, 425, 428, 430, 455, 721, 724, 764, 808, 817, 820, 853, 855, 861, 864, 865], "init_att": 425, "init_beta": 389, "init_ep": [410, 411], "init_func": [4, 10, 455, 694, 740, 780], "init_graph": 864, "init_method": [829, 870, 871], "init_model": 870, "init_node_activ": 861, "init_process_group": [235, 693, 694, 739, 740, 779, 780, 829, 844, 848, 849, 870, 871], "init_tmp": [428, 430], "initi": [10, 13, 27, 28, 70, 118, 119, 128, 129, 168, 197, 205, 207, 293, 309, 317, 357, 391, 400, 405, 407, 408, 409, 410, 411, 412, 414, 415, 418, 421, 422, 423, 424, 428, 430, 431, 444, 453, 454, 455, 457, 551, 552, 567, 572, 573, 645, 646, 658, 659, 664, 693, 695, 724, 739, 740, 742, 779, 780, 783, 819, 827, 828, 829, 831, 844, 852, 853, 854, 858, 861, 864, 871], "initialize_hv": 861, "inner": [231, 716, 731, 802, 814, 854], "inner_edg": [240, 696, 697], "inner_nod": [240, 696, 697, 782], "innermost": [308, 315, 316], "innov": 854, "inp_dropout": 424, "inplac": [21, 27, 28, 70, 89, 112, 351, 817, 858], "input": [4, 5, 6, 9, 20, 21, 34, 53, 56, 57, 58, 60, 73, 87, 100, 109, 110, 116, 118, 119, 121, 122, 126, 130, 131, 132, 133, 135, 136, 138, 140, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 210, 214, 216, 220, 222, 223, 224, 225, 232, 234, 239, 240, 241, 243, 246, 247, 248, 249, 250, 287, 293, 297, 300, 301, 305, 313, 321, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 351, 352, 353, 354, 357, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 452, 453, 454, 457, 458, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 550, 551, 552, 553, 556, 557, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 594, 597, 598, 599, 600, 601, 608, 620, 634, 636, 640, 641, 642, 643, 644, 645, 646, 649, 650, 657, 658, 659, 662, 664, 668, 681, 685, 687, 694, 695, 697, 704, 708, 712, 713, 714, 717, 718, 719, 724, 725, 726, 728, 729, 730, 732, 766, 770, 772, 774, 781, 782, 802, 804, 809, 810, 813, 815, 819, 820, 823, 827, 828, 829, 830, 831, 838, 840, 844, 848, 849, 852, 853, 854, 855, 858, 861, 865, 870, 871], "input_": [725, 765, 809], "input_d": 424, "input_dict": 820, "input_dim": [427, 428, 429, 438], "input_dir": 782, "input_dst": [725, 765, 809], "input_feat": 413, "input_featur": [713, 719, 757, 758, 760, 762, 799, 800, 803, 805, 853], "input_id": [184, 384], "input_nod": [210, 214, 215, 216, 219, 220, 301, 305, 713, 716, 757, 758, 759, 760, 762, 799, 800, 802, 803, 805, 828, 831, 848, 849], "input_nodes_pre_time_window": 297, "input_nodes_timestamp": 297, "input_s": 870, "inputs\u662f\u8282\u70b9\u7684\u7279\u5f81": 770, "ins": 708, "insert": [300, 313, 694, 713, 721, 740, 780, 831], "insert_revers": [132, 133, 144, 170], "insid": [21, 201, 295, 297, 305, 310, 321, 332, 333, 404, 412, 424, 458, 697, 730], "insight": [852, 853, 854, 855, 858, 861, 864, 865], "inspect": [696, 697, 856, 858, 868], "inspir": [171, 424, 819, 838], "instal": [21, 394, 395, 396, 690, 736, 776, 782, 818, 819, 820, 821, 823, 845, 848], "instanc": [14, 20, 133, 144, 156, 162, 165, 168, 172, 186, 209, 291, 299, 310, 385, 426, 427, 428, 429, 430, 431, 697, 700, 708, 714, 718, 719, 728, 732, 821, 830, 837, 839, 840, 845, 854, 865, 870], "instanti": [31, 73, 91, 92, 247, 314, 477, 672, 673, 674, 675, 676, 677, 678, 679, 680], "instead": [4, 9, 21, 48, 57, 80, 116, 118, 168, 177, 178, 179, 186, 214, 216, 219, 221, 303, 315, 343, 426, 427, 428, 429, 430, 431, 440, 563, 564, 565, 566, 645, 646, 650, 694, 701, 705, 714, 716, 718, 730, 804, 821, 829, 830, 840, 854, 855, 861, 864, 866, 868, 871], "institut": [697, 782, 853], "instruct": [21, 696, 817, 848], "instructon": 722, "instrument": 161, "insubgraph_sampl": 300, "int": [4, 6, 22, 27, 28, 34, 35, 38, 48, 53, 54, 55, 57, 58, 59, 60, 61, 71, 79, 80, 81, 82, 87, 88, 90, 93, 94, 95, 96, 100, 107, 114, 115, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 287, 291, 293, 294, 297, 298, 301, 302, 303, 305, 307, 308, 312, 315, 316, 317, 319, 325, 327, 331, 334, 335, 337, 338, 339, 340, 341, 342, 346, 353, 354, 355, 356, 383, 384, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 434, 438, 439, 440, 441, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 476, 540, 541, 548, 549, 550, 553, 554, 558, 559, 560, 562, 563, 564, 565, 566, 568, 569, 570, 571, 593, 594, 596, 597, 598, 599, 600, 601, 610, 612, 613, 614, 615, 620, 626, 633, 641, 645, 646, 651, 658, 659, 660, 661, 664, 665, 668, 669, 672, 677, 689, 691, 702, 704, 721, 722, 732, 737, 748, 772, 777, 782, 787, 789, 806, 815, 833, 834, 835, 838, 839, 840, 841, 858, 861], "int16": [147, 174], "int32": [4, 59, 64, 71, 118, 119, 125, 126, 131, 249, 250, 287, 302, 310, 334, 395, 548, 549, 561, 566, 574, 575, 590, 603, 696, 697, 702, 704, 746, 748, 787, 789, 823, 828, 831, 834, 835], "int64": [4, 31, 59, 64, 71, 125, 126, 131, 138, 147, 165, 168, 174, 184, 186, 195, 219, 246, 249, 250, 287, 297, 334, 335, 339, 340, 476, 540, 548, 549, 561, 563, 640, 654, 655, 689, 696, 697, 704, 748, 782, 789, 837, 840, 841], "int8": [696, 697, 841], "integ": [22, 32, 39, 52, 78, 95, 96, 122, 125, 131, 138, 140, 142, 143, 189, 190, 200, 207, 210, 214, 216, 219, 240, 241, 249, 287, 297, 302, 305, 312, 315, 316, 327, 334, 388, 395, 403, 417, 420, 434, 499, 502, 556, 565, 574, 575, 640, 641, 689, 695, 696, 697, 702, 704, 705, 787, 817, 837, 870], "integr": [166, 696, 723, 729, 827, 866, 868], "intel": 722, "inter": [854, 862, 868], "interact": [52, 166, 175, 178, 392, 563, 564, 693, 700, 705, 749, 790, 841], "interaction_cutoff": 391, "interatom": 178, "interest": [689, 693, 861, 865], "interfac": [4, 6, 20, 165, 236, 500, 501, 694, 695, 699, 702, 705, 710, 719, 837, 865], "intermedi": [308, 315, 316, 428, 430, 670, 708, 712, 852], "intermediari": 855, "intern": [1, 4, 20, 22, 39, 52, 78, 126, 131, 178, 179, 249, 250, 287, 334, 384, 564, 565, 574, 575, 694, 695, 701, 704, 708, 726, 810, 820, 841, 854], "interpol": [297, 560], "intersect": [56, 197, 205], "interv": [819, 861, 864], "intimid": 854, "intra": [174, 854, 862, 868], "intra_src": 854, "introduc": [22, 77, 134, 158, 173, 191, 243, 342, 395, 397, 411, 416, 444, 445, 446, 447, 448, 449, 450, 451, 550, 633, 641, 658, 659, 661, 664, 665, 669, 683, 684, 686, 690, 699, 705, 707, 715, 716, 723, 727, 730, 819, 827, 828, 848, 854, 858, 865], "introduct": [699, 816, 838, 839, 840, 852], "introductori": 836, "inttensor": [565, 574, 575], "intuit": [22, 245, 475, 823, 870], "inv": 823, "inv_sigma": 412, "inv_vocab": 858, "invalid": [5, 173, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 444, 446, 447, 683, 695, 725, 852, 855], "invari": [439, 440], "invent": 838, "invers": [157, 821], "inverse_indic": [339, 340, 428, 430], "invert": [320, 858], "investig": 162, "invoc": [294, 298, 317], "invok": [4, 20, 22, 27, 34, 73, 93, 94, 100, 113, 114, 117, 126, 131, 156, 216, 235, 249, 250, 287, 334, 355, 385, 694, 695, 696, 697, 698, 705, 708, 722, 836, 848, 849, 870], "involv": [4, 21, 303, 305, 308, 315, 316, 320, 703, 713, 716, 717, 728, 730, 731, 732, 841, 852, 855, 870], "io": [162, 168, 186, 691, 737, 750, 777, 829], "iostream": 22, "iou": 858, "ip": [697, 698, 783, 848, 849], "ip_addr1": [848, 849], "ip_addr2": [848, 849], "ip_addr3": 848, "ip_addr4": 848, "ip_config": [235, 693, 694, 697, 698, 739, 740, 742, 779, 780, 783, 848, 849], "ipykernel_3129082": 841, "ipykernel_3130532": 854, "ipython": 819, "ip\u5730\u5740\u540e\u9762\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u7aef\u53e3": 742, "ip\u914d\u7f6e\u6587\u4ef6": 742, "irrespect": 865, "is_avail": [714, 719, 819, 829, 865, 870, 871], "is_bf16_support": 722, "is_block": [718, 725, 726, 761, 765, 766, 804, 809, 810], "is_cuda": 328, "is_gdata": 4, "is_homogen": 326, "is_input_lay": 853, "is_last_lay": [716, 717, 828, 829, 871], "is_libxsmm_en": 682, "is_pin": [89, 305, 310, 317, 318], "is_tempor": [145, 164, 166], "is_train": [829, 865, 871], "is_unibipartit": [44, 45, 79, 82, 104, 105], "is_valid": 861, "isab": 440, "isinst": [718, 721, 725, 726, 761, 765, 766, 804, 809, 810], "isn": 701, "isol": [130, 150, 246, 335, 339, 340, 540, 553, 704, 789, 799], "isomorph": [410, 411, 870], "isotrop": [178, 179], "issu": [21, 126, 131, 168, 249, 250, 287, 334, 688, 722, 735, 775, 830], "item": [4, 7, 22, 132, 133, 135, 136, 144, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 175, 176, 177, 178, 179, 181, 183, 191, 192, 194, 196, 220, 222, 223, 224, 225, 293, 299, 301, 302, 305, 322, 323, 343, 385, 428, 561, 562, 689, 691, 699, 700, 713, 714, 715, 717, 720, 721, 722, 725, 726, 727, 728, 730, 731, 732, 737, 760, 765, 766, 767, 768, 770, 771, 772, 777, 784, 803, 806, 809, 810, 811, 812, 813, 814, 815, 820, 827, 828, 829, 831, 834, 835, 839, 840, 852, 853, 854, 855, 858, 861, 870, 871], "item_feat": [728, 731, 732, 768, 771, 772, 812, 814, 815], "item_id": 834, "item_sampl": [293, 300, 301, 303, 319], "item_set": [293, 299, 300, 301, 302, 303, 308, 319, 713, 829, 871], "itemsampl": [293, 300, 303, 308, 319, 713, 714, 716, 717, 719, 720, 721, 828, 829, 831, 871], "itemset": [292, 293, 299, 300, 301, 303, 304, 308, 309, 314, 319, 713, 714, 717, 719, 720, 829, 831, 834, 835, 871], "item\uc744": 812, "iter": [0, 3, 4, 6, 7, 34, 35, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 92, 93, 94, 100, 114, 131, 165, 168, 172, 177, 178, 179, 186, 209, 210, 211, 212, 213, 220, 246, 287, 291, 293, 301, 303, 308, 315, 334, 335, 339, 340, 390, 424, 428, 430, 434, 438, 476, 540, 553, 554, 642, 685, 691, 704, 712, 714, 716, 717, 719, 720, 730, 762, 789, 799, 800, 802, 805, 819, 828, 831, 840, 861, 864], "iterabledatapip": 720, "iterate\ud558\uace0": [803, 805], "iterate\ud558\ub294": [802, 803, 805], "iterate\ud558\uba74\uc11c": [799, 813], "iterate\ud55c\ub2e4": [799, 813], "iterate\ud574\uc11c": 800, "iterating\ud558\ub294": 805, "iteration\ub9c8\ub2e4": 805, "iteration\uc744": 777, "iterator\ub294": 805, "iterator\ub97c": 805, "iterdatapip": [290, 301], "iterrow": 841, "itertool": 839, "ith": [196, 207], "its": [1, 4, 6, 10, 14, 22, 26, 45, 47, 68, 75, 79, 82, 105, 109, 138, 141, 146, 164, 165, 167, 168, 169, 172, 173, 182, 186, 209, 217, 245, 291, 294, 297, 298, 310, 317, 318, 321, 341, 357, 385, 409, 412, 415, 421, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 475, 563, 565, 569, 572, 573, 574, 575, 640, 641, 649, 670, 694, 695, 696, 697, 699, 704, 707, 713, 719, 722, 727, 728, 729, 730, 732, 819, 821, 823, 824, 830, 836, 840, 841, 848, 849, 852, 854, 855, 858, 861, 864, 865, 870], "itself": [21, 210, 432, 434, 550, 560, 562, 565, 570, 728, 821, 844, 852, 854, 865], "j": [4, 10, 21, 126, 250, 341, 357, 383, 387, 391, 392, 396, 397, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 420, 421, 423, 432, 434, 451, 562, 570, 574, 575, 634, 650, 708, 752, 793, 821, 823, 853, 854, 855, 858, 864, 865], "j4": 817, "j_1": [116, 557], "j_2": 557, "j_n": 116, "jake": [858, 864], "jean": 858, "ji": [406, 410, 415, 421, 708, 865], "jin": 855, "jinj": [864, 865], "jinja2": [828, 829, 831, 834, 835], "jinyang": 864, "jk": [406, 858], "jl": 858, "job": [21, 231, 697, 698, 870], "join": [142, 156, 293, 427, 429, 688, 692, 693, 697, 735, 738, 775, 778, 816, 829, 834, 835, 848, 871], "joint": 861, "json": [4, 231, 240, 693, 694, 695, 696, 697, 698, 705, 739, 740, 741, 742, 779, 780, 781, 782, 783, 817, 848], "json\u4e2d\u7684\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 741, "json\u6587\u4ef6\u5305\u542b\u6240\u6709\u5212\u5206\u7684\u914d\u7f6e": 741, "json\u7684json\u6587\u4ef6": 741, "json\uacfc": 790, "judici": [856, 868], "jump": [456, 855], "jupyt": [694, 780, 822], "jure": 838, "just": [21, 22, 45, 79, 82, 105, 235, 685, 695, 697, 705, 717, 730, 732, 831, 834, 835, 840, 848, 849, 855], "k": [14, 21, 120, 121, 122, 178, 179, 183, 209, 219, 221, 222, 223, 224, 225, 226, 227, 337, 338, 339, 340, 341, 342, 345, 353, 354, 390, 391, 393, 397, 398, 406, 412, 417, 422, 423, 426, 427, 428, 430, 432, 434, 435, 436, 437, 439, 441, 442, 444, 448, 451, 457, 550, 556, 566, 569, 608, 609, 616, 633, 645, 646, 660, 661, 665, 668, 669, 717, 725, 726, 730, 731, 732, 760, 765, 766, 770, 771, 772, 803, 809, 810, 813, 814, 815, 820, 823, 838, 839, 854, 855, 858, 861, 864, 865], "k_i": 865, "k_iend": 865, "k_j": 865, "k_proj": 820, "kai": 858, "kappa": 303, "karat": [167, 701, 745, 786, 819, 841], "karate_club": 841, "karateclub": 25, "karateclubdata": [691, 737, 777], "karateclubdataset": [819, 841], "karlsruh": 132, "karypislab": [696, 782], "kd": [14, 341, 432, 434, 569], "kdd": [151, 152], "kde": 864, "keep": [6, 22, 139, 140, 186, 234, 303, 315, 352, 397, 556, 649, 709, 720, 854, 858], "keep_orig_edg": 649, "keepdim": [722, 806, 861, 864, 865], "kei": [22, 26, 27, 28, 73, 108, 114, 115, 121, 122, 131, 148, 178, 179, 205, 210, 213, 221, 223, 240, 241, 242, 246, 288, 292, 295, 296, 297, 299, 305, 310, 321, 332, 333, 334, 335, 339, 340, 353, 384, 385, 386, 427, 428, 429, 476, 540, 541, 556, 567, 683, 689, 690, 691, 697, 710, 714, 719, 726, 736, 776, 820, 841, 848, 855, 858, 859, 861, 865, 866, 868], "kept": 130, "kera": [723, 807], "kernel": [5, 9, 34, 73, 93, 94, 100, 113, 168, 186, 391, 412, 439, 440, 451, 501, 505, 506, 507, 508, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 659, 722, 816, 824, 848, 852], "kevin": 750, "keyerror": [724, 725, 764, 765, 808, 809], "keyword": [121, 134, 151, 152, 240, 313], "kg": [432, 434], "kgdata": [691, 737, 777], "khop_in_subgraph": 340, "khop_out_subgraph": 339, "khopgraph": 13, "ki": [406, 865], "kick": [818, 819, 820], "kin": 855, "kind": [126, 210, 250, 314, 690, 855], "kipf": [818, 825, 836, 852], "kit": 845, "kl": 858, "knn": [341, 569], "knn_g": [341, 569], "knn_graph": [14, 569], "know": [21, 245, 475, 714, 731, 838, 841, 853, 871], "knowledg": [13, 21, 164, 166, 245, 454, 456, 475, 839, 853, 870], "knowledgegraphdataset": [157, 158, 191, 691, 737, 777], "known": [195, 457, 701, 858, 865], "known_host": 848, "konect": 167, "kv": 865, "kvstore": 4, "kwarg": [108, 121, 138, 139, 140, 210, 211, 212, 213, 215, 240, 313, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 426, 427, 428, 429, 430, 431, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 757, 799], "l": [243, 344, 388, 389, 390, 392, 393, 396, 397, 398, 399, 400, 401, 403, 404, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 421, 426, 427, 428, 430, 431, 449, 457, 570, 608, 609, 616, 619, 627, 628, 662, 668, 712, 722, 725, 726, 731, 756, 757, 759, 765, 766, 771, 798, 799, 802, 806, 809, 810, 814, 818, 821, 823, 830, 838, 839, 848, 849, 852, 853, 854, 855, 858, 865], "l1": [433, 547], "l2": [341, 432, 433, 434, 547, 569, 724, 808, 853], "l2norm": 853, "l_": 854, "label": [4, 6, 13, 21, 25, 120, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 208, 213, 214, 216, 217, 219, 220, 230, 243, 244, 245, 293, 299, 301, 302, 303, 305, 309, 318, 319, 335, 345, 346, 383, 426, 428, 430, 431, 457, 474, 475, 540, 543, 554, 556, 567, 687, 690, 691, 692, 697, 701, 713, 714, 717, 719, 721, 722, 727, 728, 730, 732, 736, 737, 738, 758, 762, 767, 768, 770, 772, 774, 776, 777, 778, 800, 805, 806, 811, 812, 813, 815, 818, 819, 820, 821, 828, 829, 831, 833, 834, 835, 836, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 858, 865, 870, 871], "label0_nod": 854, "label1": 854, "label_dict": [204, 346, 692, 738, 778, 841], "label_kei": [178, 179], "label_propag": 457, "labels_follow": [299, 301], "labels_item": 299, "labels_lik": [299, 301], "labels_us": 299, "labelsmooth": 865, "labl": 302, "labor": [214, 297, 303, 315, 563], "laborsampl": [303, 315], "lab\uc758": 791, "lacon": 819, "ladder": 172, "lake": 865, "lam": [424, 425], "lambda": [4, 34, 35, 409, 424, 425, 865], "lambda_": [393, 409], "lambda_max": [393, 398], "land": 550, "langl": [178, 179], "languag": [159, 164, 820, 837, 840, 858, 861, 865], "lapacian": 0, "laplacian": [342, 343, 393, 397, 424, 425, 448, 661, 820, 821], "laplacian_lambda_max": 393, "laplacian_p": 820, "laplacianp": [397, 448], "lapp": [13, 448], "larg": [3, 10, 11, 14, 22, 66, 123, 124, 125, 126, 131, 134, 168, 181, 209, 229, 230, 249, 250, 287, 309, 334, 341, 345, 396, 400, 416, 421, 432, 434, 455, 459, 474, 569, 635, 640, 647, 687, 692, 697, 706, 711, 715, 721, 725, 727, 730, 816, 817, 828, 830, 832, 833, 839, 840, 854, 865], "larger": [178, 240, 297, 305, 313, 428, 430, 459, 563, 709, 732, 830], "largest": [131, 287, 334, 343, 393, 398, 441, 566, 633, 645, 646, 669, 704, 789, 854], "last": [4, 5, 9, 208, 210, 213, 214, 216, 293, 297, 301, 409, 415, 608, 641, 646, 698, 707, 708, 714, 725, 820, 829, 844, 852, 855, 871], "latent": 858, "later": [149, 155, 185, 187, 193, 303, 389, 474, 694, 697, 817, 839], "latest": [697, 861], "latter": [357, 426, 427, 428, 429, 430, 431, 559, 694, 709, 714, 866, 868], "launch": [4, 455, 693, 694, 697, 721, 742, 780, 783, 829, 844, 870], "law": 697, "layer": [13, 208, 210, 214, 215, 216, 219, 220, 297, 303, 305, 308, 315, 316, 384, 386, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 446, 447, 448, 452, 456, 558, 563, 694, 709, 712, 713, 714, 716, 717, 719, 720, 721, 722, 723, 730, 731, 732, 759, 802, 805, 806, 807, 815, 823, 828, 829, 830, 831, 836, 838, 839, 840, 848, 849, 852, 855, 864, 866, 868, 871], "layer1": [852, 854, 855], "layer2": [852, 854, 855], "layer3": 854, "layer_depend": [214, 303], "layer_id": 305, "layer_idx": [716, 717, 721, 828, 829, 871], "layer_norm": 420, "layernorm": 865, "layer\uc640": 813, "layout": [31, 62, 63, 702], "lazi": [222, 223, 224, 225, 246, 247, 335, 339, 340, 476, 477, 540], "lazyfeatur": [222, 223, 224, 225], "lbrace": [186, 707, 751, 757, 792, 799], "ld_library_path": [696, 782], "ld_preload": 845, "ldot": [416, 456, 649], "lead": [389, 399, 401, 404, 405, 407, 408, 409, 412, 415, 422, 694, 702, 704, 725, 844], "leaf": [159, 184, 429, 431, 858], "leak": 4, "leakag": [220, 713], "leaky_relu": [823, 855], "leakyrelu": [394, 402, 405, 407, 408, 823, 855], "learn": [4, 10, 13, 14, 23, 160, 179, 194, 217, 345, 383, 386, 387, 389, 394, 396, 400, 404, 405, 407, 408, 412, 421, 422, 425, 426, 427, 428, 430, 441, 448, 454, 456, 457, 474, 560, 648, 654, 655, 656, 658, 691, 717, 721, 727, 728, 730, 732, 791, 803, 816, 817, 819, 820, 823, 825, 828, 829, 830, 831, 836, 837, 838, 839, 841, 852, 853, 854, 858, 859, 861, 864, 865, 868, 870, 871], "learn_beta": 389, "learn_ep": [410, 411], "learnabl": [4, 118, 119, 383, 387, 389, 391, 393, 394, 395, 396, 398, 399, 400, 402, 405, 407, 408, 409, 410, 411, 412, 414, 415, 418, 421, 422, 423, 424, 438, 445, 449, 450, 451, 452, 453, 454, 456, 550, 665, 685, 694, 724, 780, 808, 819, 855, 861], "least": [21, 119, 161, 182, 424, 444, 447, 635, 833, 854, 855], "leav": [708, 824, 837, 839, 858], "left": [118, 345, 390, 393, 396, 402, 405, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 421, 436, 437, 451, 456, 500, 501, 502, 633, 668, 669, 707, 709, 725, 730, 731, 751, 757, 765, 771, 792, 799, 809, 814, 823, 830, 838, 839, 853, 855, 858, 865], "leftarrow": [838, 865], "legaci": 304, "legitim": 163, "len": [73, 138, 145, 146, 147, 164, 165, 166, 168, 169, 172, 174, 184, 186, 195, 207, 220, 300, 309, 325, 385, 456, 499, 503, 562, 569, 587, 609, 610, 613, 614, 628, 683, 689, 691, 716, 717, 721, 722, 726, 728, 731, 732, 737, 757, 760, 766, 768, 771, 772, 777, 799, 803, 806, 810, 812, 814, 815, 819, 820, 828, 829, 839, 840, 841, 844, 848, 849, 852, 853, 854, 858, 861, 864, 865, 870, 871], "length": [36, 37, 142, 164, 182, 205, 207, 217, 232, 239, 240, 294, 296, 297, 298, 303, 308, 315, 316, 317, 328, 338, 357, 393, 449, 502, 503, 541, 560, 561, 562, 565, 570, 608, 609, 683, 685, 694, 700, 702, 787, 823, 837, 859, 864, 865, 868], "leq": [858, 865], "leskovec": 838, "less": [118, 119, 139, 161, 226, 341, 432, 434, 449, 559, 569, 697, 704, 715, 844, 855], "let": [43, 46, 74, 103, 126, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 499, 697, 707, 782, 819, 823, 828, 829, 831, 834, 835, 848, 849, 852, 854, 861, 870], "level": [0, 5, 23, 120, 128, 129, 148, 430, 551, 552, 567, 645, 646, 694, 695, 697, 701, 708, 726, 730, 780, 820, 838, 840, 841, 845, 852, 855, 858, 861, 864, 866, 868], "level\uc758": 780, "leverag": [387, 395, 396, 709, 722, 819, 824, 854, 858, 862, 868], "levi": 670, "lexicograph": [123, 577], "lexicon": 144, "lg": [344, 670, 854], "lg1": 854, "lg_batch": 183, "lg_layer": 854, "lg_x": 854, "lgnn": [856, 868], "lgnncore": 854, "lgnnlayer": 854, "lh": 500, "lhs_data": [500, 501], "lhs_field": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "lhs_target": 500, "li": [245, 402, 475, 659, 664, 668, 723, 750, 834, 835, 853, 855, 861, 864], "lib": [696, 782, 820, 828, 829, 831, 834, 835, 845, 848, 852, 855], "libgoogl": 845, "librari": [8, 12, 21, 22, 721, 817, 823, 824, 844, 845, 861], "libtcmalloc": 845, "libxsmm": 682, "licens": 816, "life": 4, "lifesci": [438, 443], "ligand": 391, "light": 22, "lightn": 829, "like": [9, 21, 22, 26, 116, 131, 162, 214, 216, 219, 226, 293, 299, 301, 303, 315, 322, 323, 416, 428, 430, 558, 559, 683, 685, 688, 689, 694, 697, 705, 709, 714, 716, 718, 719, 724, 725, 727, 728, 730, 749, 768, 780, 790, 817, 831, 834, 835, 836, 838, 840, 841, 852, 865, 870], "like_edg": 834, "like_edges_path": 834, "like_orig_eids_0": 697, "liked_bi": 714, "likelihood": [559, 560, 731, 814, 854], "limit": [22, 244, 291, 309, 716, 824, 829, 854, 871], "limits_": [405, 853], "lin": [410, 418, 423], "line": [22, 183, 344, 662, 694, 696, 697, 698, 702, 817, 836, 848, 856, 864, 868, 870], "line_graph": [183, 854], "line_graph_degre": 183, "linear": [386, 388, 400, 404, 410, 411, 413, 415, 417, 418, 419, 421, 423, 426, 427, 428, 429, 430, 436, 444, 452, 459, 709, 714, 717, 718, 719, 721, 724, 728, 730, 753, 758, 761, 764, 768, 770, 795, 800, 804, 808, 812, 813, 818, 819, 820, 821, 828, 838, 839, 852, 853, 854, 855, 858, 861, 865, 870], "linear_deg": 854, "linear_dst": [709, 753, 795], "linear_fus": 854, "linear_model": 383, "linear_prev": 854, "linear_radiu": 854, "linear_src": [709, 753, 795], "linearity\uc640": 805, "linearli": [388, 420, 818], "linegraph": 13, "lingfan": [853, 861], "link": [2, 13, 139, 149, 157, 158, 185, 191, 211, 214, 216, 220, 243, 303, 305, 308, 315, 316, 452, 453, 454, 690, 694, 712, 713, 727, 730, 732, 736, 760, 776, 777, 803, 820, 827, 829, 831, 836, 842, 850, 854], "link_predict": [309, 828, 834, 835], "linkpr": 139, "linkproppr": [690, 736, 776, 849], "linspac": 864, "lint": 21, "linux": 845, "list": [4, 10, 21, 22, 27, 36, 37, 39, 45, 52, 54, 56, 73, 78, 92, 95, 96, 105, 117, 119, 121, 122, 123, 124, 125, 130, 131, 145, 148, 159, 178, 179, 183, 196, 197, 205, 207, 208, 209, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 236, 240, 247, 249, 287, 288, 292, 293, 295, 296, 299, 300, 301, 302, 303, 304, 305, 308, 309, 313, 315, 316, 318, 332, 334, 343, 346, 351, 352, 385, 387, 393, 397, 419, 420, 456, 458, 477, 543, 545, 556, 562, 563, 565, 567, 569, 574, 575, 579, 589, 612, 635, 640, 641, 647, 649, 651, 653, 656, 658, 667, 681, 685, 689, 690, 691, 692, 696, 697, 704, 708, 713, 714, 719, 721, 725, 726, 730, 731, 732, 776, 777, 789, 813, 833, 836, 837, 841, 845, 848, 854, 858, 861, 864, 865], "listen": 694, "liter": [133, 144], "literatur": 728, "littl": [21, 22, 70, 714, 730, 865], "live": [4, 853], "ll": 840, "load": [0, 2, 3, 138, 139, 140, 142, 143, 148, 156, 166, 179, 181, 184, 189, 190, 203, 204, 213, 236, 237, 238, 289, 305, 309, 317, 318, 330, 346, 426, 428, 430, 431, 686, 687, 691, 693, 694, 696, 712, 719, 721, 722, 734, 738, 745, 774, 776, 777, 778, 786, 806, 818, 819, 820, 827, 829, 833, 834, 835, 838, 841, 844, 848, 849, 852, 853, 854, 855, 861, 870], "load_cor": 844, "load_cora": [854, 855], "load_cora_data": [852, 855], "load_data": 821, "load_edg": 238, "load_feat": 236, "load_graph": [204, 567, 692, 701, 705, 738, 745, 749, 778, 786, 790, 837], "load_info": [692, 738, 778], "load_nod": 238, "load_partit": [4, 240, 696, 697], "load_partition_book": [4, 696, 697], "load_partition_feat": [696, 697], "load_state_dict": [844, 861], "load_subtensor": [693, 739, 779], "load_tensor": 697, "load_url": 861, "loadcsv": 841, "loader": [41, 209, 210, 211, 212, 213, 291, 854, 871], "loader_cor": [844, 845], "local": [4, 23, 70, 197, 214, 232, 236, 239, 240, 297, 303, 346, 393, 398, 455, 563, 567, 687, 688, 691, 692, 693, 694, 696, 697, 774, 777, 782, 820, 829, 836, 845, 848, 852, 855, 865], "local_edg": 782, "local_nod": 782, "local_node_idx": 782, "local_partit": 4, "local_scop": [426, 427, 428, 429, 430, 458, 718, 725, 728, 730, 731, 758, 760, 761, 765, 768, 770, 771, 800, 803, 804, 809, 812, 813, 814, 838, 839, 852], "local_to_global_nid": 387, "local_var": 70, "localhost": 21, "localscratch": 829, "locat": [4, 146, 169, 232, 239, 608, 619, 687, 691, 696, 823], "lock": [10, 67, 89, 112, 845], "log": [23, 132, 133, 144, 170, 200, 392, 397, 409, 419, 426, 427, 429, 431, 731, 771, 814, 839, 854, 855, 861, 864], "log_prob": 861, "log_softmax": [852, 855, 858, 861], "logic": [156, 865], "logical_and": 782, "login": 848, "logisticregress": 383, "logit": [357, 426, 427, 428, 429, 430, 431, 717, 722, 728, 730, 732, 768, 770, 772, 806, 812, 813, 815, 818, 819, 820, 823, 828, 836, 838, 852, 853, 855, 858, 861], "logit\uc73c\ub85c": 812, "logn": 432, "logp": [852, 855, 858], "logsigmoid": 861, "lollipop": 172, "long": [4, 14, 22, 59, 64, 68, 118, 131, 287, 334, 450, 457, 587, 683, 697, 704, 715, 717, 748, 789, 854, 858, 865], "longer": [859, 861, 868], "longest": [182, 570], "longtensor": [4, 226, 297, 300, 303, 308, 319, 321, 333, 384, 387, 414, 453, 454, 457, 558, 635, 694, 721, 740, 757, 780, 799, 820, 821, 837, 841, 854, 861], "look": [9, 21, 137, 171, 180, 182, 188, 221, 716, 718, 719, 728, 828, 829, 831, 834, 835, 837, 858, 861, 865], "lookup": [22, 853], "loop": [21, 62, 63, 116, 117, 181, 226, 341, 389, 395, 399, 401, 404, 405, 407, 408, 409, 412, 415, 420, 422, 432, 433, 434, 547, 555, 559, 569, 651, 666, 693, 694, 696, 697, 700, 716, 779, 785, 805, 819, 821, 844, 845, 854, 855, 861, 865], "loopi": 854, "loss": [4, 10, 383, 387, 426, 427, 428, 429, 430, 431, 455, 693, 694, 713, 714, 717, 719, 721, 722, 728, 730, 731, 732, 739, 740, 757, 758, 760, 762, 768, 770, 771, 772, 779, 780, 799, 800, 803, 805, 806, 812, 813, 814, 815, 818, 819, 820, 821, 828, 829, 830, 831, 836, 838, 839, 840, 844, 848, 849, 852, 853, 854, 855, 858, 861, 865, 870, 871], "loss_comput": 865, "loss_fcn": [693, 722, 739, 779, 818, 820, 848, 849], "loss_perm1": 854, "loss_perm2": 854, "loss\uac00": 806, "loss\ub97c": [805, 814, 815], "loss\uc5d0": 806, "lot": [22, 168, 186, 692, 715, 716, 730, 731], "low": [5, 240, 245, 291, 341, 397, 429, 431, 432, 434, 453, 454, 475, 567, 569, 694, 695, 709, 780, 817, 844, 855], "low2high": [429, 431], "lower": [22, 425, 691, 694, 737, 777, 838, 855, 864, 866, 868], "lowest": [178, 179], "lp": [453, 454, 834, 835], "lp_task": [834, 835], "lp_test_follow_index": 834, "lp_test_follow_indexes_path": 834, "lp_test_follow_label": 834, "lp_test_follow_labels_path": 834, "lp_test_follow_neg_dst": 834, "lp_test_follow_neg_index": 834, "lp_test_follow_neg_se": 834, "lp_test_follow_neg_src": 834, "lp_test_follow_se": 834, "lp_test_follow_seeds_path": 834, "lp_test_index": 835, "lp_test_indexes_path": 835, "lp_test_label": 835, "lp_test_labels_path": 835, "lp_test_like_index": 834, "lp_test_like_indexes_path": 834, "lp_test_like_label": 834, "lp_test_like_labels_path": 834, "lp_test_like_neg_dst": 834, "lp_test_like_neg_index": 834, "lp_test_like_neg_se": 834, "lp_test_like_neg_src": 834, "lp_test_like_se": 834, "lp_test_like_seeds_path": 834, "lp_test_neg_dst": 835, "lp_test_neg_index": 835, "lp_test_neg_se": 835, "lp_test_neg_src": 835, "lp_test_se": 835, "lp_test_seeds_path": 835, "lp_train_follow_se": 834, "lp_train_follow_seeds_path": 834, "lp_train_like_se": 834, "lp_train_like_seeds_path": 834, "lp_train_se": 835, "lp_train_seeds_path": 835, "lp_val_follow_index": 834, "lp_val_follow_indexes_path": 834, "lp_val_follow_label": 834, "lp_val_follow_labels_path": 834, "lp_val_follow_neg_dst": 834, "lp_val_follow_neg_index": 834, "lp_val_follow_neg_se": 834, "lp_val_follow_neg_src": 834, "lp_val_follow_se": 834, "lp_val_follow_seeds_path": 834, "lp_val_index": 835, "lp_val_indexes_path": 835, "lp_val_label": 835, "lp_val_labels_path": 835, "lp_val_like_index": 834, "lp_val_like_indexes_path": 834, "lp_val_like_label": 834, "lp_val_like_labels_path": 834, "lp_val_like_neg_dst": 834, "lp_val_like_neg_index": 834, "lp_val_like_neg_se": 834, "lp_val_like_neg_src": 834, "lp_val_like_se": 834, "lp_val_like_seeds_path": 834, "lp_val_neg_dst": 835, "lp_val_neg_index": 835, "lp_val_neg_se": 835, "lp_val_neg_src": 835, "lp_val_se": 835, "lp_val_seeds_path": 835, "lpe": 448, "lr": [4, 10, 383, 387, 426, 427, 428, 430, 431, 455, 693, 694, 717, 721, 722, 739, 740, 742, 779, 780, 783, 806, 818, 819, 820, 821, 828, 829, 836, 838, 839, 840, 848, 849, 852, 853, 854, 855, 858, 865, 870, 871], "lr1": [694, 740, 780], "lr2": [694, 740, 780], "lr_schedul": 820, "lsc": 289, "lsc_2part": 697, "lsc_chunk": 697, "lstm": [421, 438, 456, 724, 764, 808, 826, 859, 860, 862, 865, 868], "lt": [14, 820, 821, 828, 829, 831, 834, 835], "lumo": [178, 179], "lut": 865, "lvert": [451, 724, 764, 808], "m": [5, 9, 21, 62, 63, 73, 91, 92, 93, 94, 100, 113, 126, 128, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 351, 388, 397, 403, 417, 419, 426, 427, 429, 432, 434, 440, 458, 565, 608, 609, 616, 619, 627, 628, 677, 678, 679, 680, 708, 710, 718, 722, 725, 729, 731, 752, 754, 761, 765, 769, 771, 793, 794, 796, 804, 806, 809, 814, 817, 821, 823, 829, 830, 838, 852, 854, 861, 864], "m_": [403, 707, 751, 792, 830, 838], "m_i": 403, "m_r": 454, "m_v": [830, 838], "machin": [4, 177, 178, 179, 211, 212, 232, 239, 240, 455, 691, 693, 694, 695, 696, 697, 698, 722, 791, 816, 824, 836, 841, 848, 849, 854, 858, 861, 862, 865, 868, 872], "machine_id": 4, "made": [181, 426, 427, 428, 430, 853, 865], "mag": [289, 697, 719, 782], "mag240m": 289, "mag_lsc_partit": 697, "maggi": 750, "magnitud": 855, "mag\uc758": 782, "mai": [4, 6, 20, 21, 41, 116, 186, 214, 220, 226, 236, 291, 293, 320, 353, 388, 417, 420, 541, 559, 640, 641, 688, 689, 691, 693, 694, 697, 705, 713, 724, 725, 726, 728, 729, 730, 731, 732, 735, 775, 817, 819, 829, 836, 837, 839, 841, 848, 853, 871], "mailbox": [5, 20, 100, 263, 264, 265, 266, 677, 678, 680, 708, 722, 725, 752, 765, 793, 806, 809, 838, 855, 858, 861, 865], "main": [4, 21, 210, 291, 693, 694, 720, 730, 770, 813, 823, 824, 829, 844, 845, 854, 855, 871], "mainland": 23, "mainli": [4, 231, 694], "maintain": [4, 6, 10, 27, 28, 114, 115, 116, 117, 126, 130, 131, 145, 246, 247, 249, 250, 287, 291, 334, 335, 338, 344, 352, 476, 477, 540, 554, 557, 634, 643, 644, 730, 848, 858, 865], "major": [144, 232, 239, 702, 721, 723, 730, 787, 829, 834, 848, 871], "make": [8, 20, 21, 22, 70, 120, 122, 137, 140, 162, 171, 180, 182, 188, 198, 210, 214, 215, 216, 226, 229, 230, 241, 242, 245, 293, 297, 384, 410, 416, 421, 426, 427, 435, 437, 441, 442, 444, 447, 475, 559, 563, 565, 667, 673, 683, 687, 688, 691, 692, 693, 694, 696, 698, 704, 708, 718, 719, 728, 730, 775, 782, 812, 817, 820, 836, 837, 839, 842, 858, 864, 865], "make_model": 865, "make_shar": 22, "makedir": [692, 738, 778, 834, 835], "manag": [288, 293, 296, 318, 694, 705, 817, 824, 829, 871], "mandatori": [21, 231, 833], "manhattan": [433, 547], "mani": [4, 22, 122, 214, 226, 291, 559, 563, 686, 689, 694, 698, 701, 713, 723, 725, 820, 836, 837, 838, 839, 848, 858, 861, 865], "manifold": 412, "manipul": [0, 13, 22, 306, 855], "manner": [829, 864], "manual": [4, 101, 102, 155, 168, 186, 187, 193, 291, 389, 401, 404, 405, 407, 408, 409, 412, 415, 417, 420, 422, 696, 701, 816, 829, 838, 845, 848, 871], "manual_se": 870, "map": [4, 5, 20, 26, 43, 46, 47, 74, 75, 101, 102, 103, 109, 121, 130, 131, 186, 220, 231, 234, 240, 297, 301, 305, 310, 320, 321, 324, 327, 332, 333, 334, 384, 386, 387, 409, 418, 427, 428, 432, 434, 436, 541, 635, 643, 649, 689, 695, 696, 714, 725, 726, 765, 781, 809, 837, 848, 854, 861, 865], "map_to_homo_eid": [4, 695, 781], "map_to_homo_nid": [4, 695, 781], "map_to_per_etyp": [4, 241, 695, 781], "map_to_per_ntyp": [4, 241, 695, 781], "mapper": 301, "mapperiterdatapip": 306, "margin": [731, 814], "mark": [144, 167, 222, 223, 224, 225, 243, 839], "marker": 864, "marketplac": 700, "markupsaf": [828, 829, 831, 834, 835], "mask": [22, 132, 133, 140, 144, 150, 154, 157, 158, 159, 160, 161, 162, 163, 170, 173, 176, 181, 184, 191, 192, 194, 197, 198, 205, 216, 231, 232, 239, 246, 426, 427, 428, 430, 444, 446, 447, 457, 476, 656, 683, 687, 691, 722, 727, 728, 732, 757, 772, 774, 777, 799, 811, 815, 841, 848, 852, 855, 858, 865], "massiv": [696, 697, 712], "master": [21, 165, 844], "master_addr": 844, "master_port": 844, "mat": [630, 688, 691, 735, 737, 775, 777, 854], "mat_path": [691, 737, 777], "match": [4, 5, 9, 118, 199, 200, 297, 310, 351, 352, 355, 430, 458, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 562, 688, 735, 775, 823], "materi": [9, 89, 715, 837, 861], "materialize_data": 108, "math": [245, 405, 475, 645, 646, 708, 725, 785, 799, 814, 852, 854, 855, 858, 865], "math_": 852, "mathbb": [707, 751, 792, 819, 820, 821, 861, 865], "mathbf": [405, 409, 414, 457], "mathcal": [244, 345, 357, 392, 395, 396, 397, 401, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 417, 418, 420, 421, 474, 500, 501, 572, 573, 649, 707, 708, 725, 726, 730, 731, 751, 752, 757, 765, 766, 770, 771, 792, 793, 799, 809, 810, 813, 814, 823, 830, 838, 839, 855, 858], "mathemat": [120, 244, 345, 394, 395, 406, 409, 415, 453, 454, 474, 608, 619, 709, 818, 819, 838, 852, 854], "mathrm": [118, 245, 389, 396, 401, 402, 405, 407, 408, 410, 411, 412, 414, 418, 421, 436, 438, 475, 725, 765, 809, 865], "matmul": [823, 853], "matplotlib": [819, 854, 858, 861, 864], "matric": [41, 62, 63, 118, 119, 183, 388, 405, 420, 444, 608, 611, 616, 617, 619, 628, 649, 701, 819, 822, 823, 852], "matrix": [0, 9, 13, 14, 30, 31, 32, 62, 63, 118, 119, 126, 131, 146, 169, 177, 250, 287, 334, 337, 338, 341, 344, 390, 398, 399, 400, 402, 408, 409, 412, 415, 422, 423, 432, 433, 434, 449, 454, 457, 459, 499, 500, 501, 502, 547, 565, 569, 574, 575, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594, 596, 597, 598, 599, 600, 601, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 649, 658, 659, 664, 668, 701, 709, 721, 728, 729, 768, 812, 816, 818, 819, 820, 821, 822, 837, 852, 853, 855, 856, 868], "matrix\uc774\ub2e4": 781, "matter": [21, 298, 438, 854, 855, 865], "mat\u6587\u4ef6\u4e0b\u8f7d\u5230\u76ee\u5f55": 735, "max": [5, 9, 73, 117, 231, 345, 347, 348, 385, 393, 396, 397, 410, 412, 418, 419, 437, 456, 479, 484, 501, 503, 505, 511, 519, 525, 551, 552, 574, 575, 612, 613, 614, 626, 651, 683, 704, 708, 710, 724, 725, 731, 732, 752, 754, 764, 765, 771, 772, 789, 793, 796, 808, 809, 814, 815, 823, 852, 854, 861, 864, 866, 868, 870], "max_": [404, 437], "max_allow_nod": 168, "max_cache_size_in_byt": 298, "max_degre": [445, 685], "max_depth": 865, "max_dist": [450, 685], "max_in_degre": [394, 395, 396], "max_len": [449, 683, 685], "max_node_typ": 451, "max_num_nod": [168, 186, 683, 685], "max_num_v": 172, "max_queue_s": 235, "max_uva_thread": 291, "maxim": [6, 232, 235, 239, 383, 697, 838, 845, 861], "maximum": [6, 118, 119, 168, 172, 186, 394, 395, 396, 397, 404, 419, 444, 445, 446, 447, 449, 450, 451, 558, 594, 597, 668, 685, 730, 731, 814, 855, 859, 865, 868], "mayb": 21, "mb": [697, 826, 843, 847, 851, 857, 860, 863, 867, 869, 873], "mcaulei": [135, 136], "mckee": 556, "mct": [429, 431], "md": [210, 817], "mean": [4, 5, 9, 10, 73, 117, 137, 147, 150, 154, 176, 177, 180, 210, 211, 212, 240, 291, 295, 297, 305, 308, 310, 315, 316, 321, 333, 349, 350, 357, 385, 396, 397, 409, 410, 412, 415, 418, 419, 421, 426, 427, 429, 432, 433, 434, 435, 436, 438, 439, 441, 442, 480, 485, 501, 503, 506, 512, 520, 526, 548, 549, 551, 552, 594, 598, 634, 635, 643, 651, 671, 694, 704, 708, 710, 716, 717, 718, 721, 722, 724, 725, 728, 731, 732, 752, 754, 761, 764, 765, 768, 771, 772, 780, 789, 793, 796, 803, 804, 806, 808, 809, 812, 814, 815, 818, 819, 820, 823, 828, 829, 831, 836, 838, 839, 841, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 871], "mean_nod": [427, 428, 429, 430, 730, 770, 813, 840], "mean_udf": 838, "meaning": 729, "meaningless": 116, "meant": [22, 701], "measur": [13, 120, 161, 244, 245, 341, 345, 429, 431, 432, 434, 453, 454, 474, 475, 569, 685, 829, 855, 865, 871], "mechan": [5, 20, 22, 449, 450, 451, 720, 729, 820, 854, 855, 861, 865, 866, 868, 871], "medium": 14, "meet": [390, 819], "mem": [10, 826, 843, 847, 851, 857, 860, 863, 867, 869, 873], "member": [21, 428, 430, 708, 838, 839, 841, 854, 870], "memmap": 697, "memo": 5, "memori": [4, 9, 10, 14, 67, 89, 112, 126, 131, 184, 210, 235, 249, 250, 287, 290, 292, 297, 298, 305, 310, 312, 317, 318, 328, 330, 334, 341, 356, 432, 434, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 559, 569, 641, 693, 697, 704, 709, 712, 715, 716, 722, 806, 817, 824, 832, 833, 834, 835, 839, 848, 858, 865], "meng": 750, "mention": [694, 696, 697, 716, 865], "merg": [21, 229, 230, 681, 705, 708, 710, 726, 728, 790, 840, 854, 855], "merit": 22, "merlin": 210, "messag": [1, 13, 53, 73, 91, 92, 93, 94, 100, 113, 127, 130, 131, 178, 179, 208, 210, 211, 212, 214, 215, 216, 219, 220, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 389, 390, 391, 392, 395, 397, 399, 401, 404, 405, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 429, 430, 431, 479, 480, 481, 482, 484, 485, 486, 487, 501, 505, 506, 507, 508, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 542, 543, 544, 545, 546, 563, 635, 672, 673, 674, 675, 676, 677, 678, 679, 680, 696, 706, 714, 716, 717, 718, 719, 723, 724, 726, 727, 730, 732, 750, 791, 796, 799, 800, 803, 805, 806, 811, 815, 816, 831, 837, 839, 852, 853, 855, 856, 859, 861, 866, 868], "message_func": [73, 91, 92, 93, 94, 100, 113, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 542, 543, 544, 545, 546, 708, 710, 711, 752, 754, 755, 793, 796, 797, 838, 853, 855, 858, 861, 865], "meta": [4, 148, 292, 314, 387, 455, 689, 695, 697, 858], "meta_g": 72, "metadata": [4, 236, 240, 294, 296, 297, 309, 314, 317, 689, 694, 695, 696, 697, 698, 721, 782, 828, 829, 831, 832, 833, 834, 835, 871], "metadata_path": [834, 835], "metagraph": [13, 26, 101, 102, 117, 119, 122, 127, 130, 131, 173, 220, 246, 334, 335, 339, 340, 427, 476, 540, 548, 557, 640, 643, 670, 681, 689, 705, 749, 790], "metapath": [352, 387, 558, 561, 562, 649], "meth": 858, "method": [1, 22, 89, 112, 160, 194, 208, 209, 210, 217, 218, 220, 221, 232, 239, 240, 290, 300, 303, 313, 341, 345, 384, 385, 388, 393, 405, 407, 408, 421, 432, 434, 474, 503, 542, 544, 558, 569, 641, 689, 701, 704, 712, 713, 716, 717, 727, 728, 829, 830, 836, 837, 839, 841, 845, 852, 853], "methodologi": [635, 716, 731], "meti": [4, 6, 209, 232, 239, 240, 353, 354, 556, 697, 741, 782, 848], "metirs\ub97c": 782, "metis_partition_assign": [209, 556], "metis\u4ec5\u5e73\u8861\u6bcf\u4e2a\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u6570": 741, "metis\u5212\u5206\u7684\u597d\u5904\u5728\u4e8e": 741, "metis\uc640": 782, "metis\uc740": 782, "metis\uc758": 782, "metric": [21, 341, 432, 433, 434, 547, 569, 716, 828, 831, 839, 848, 849], "metric\uc744": 802, "mf": [829, 871], "mfg": [127, 131, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 714, 717, 719, 800, 803, 805, 830, 831, 849], "mfg\uac00": 799, "mfg\ub4e4\ub85c": 799, "mfg\ub4e4\uc740": 799, "mfg\ub4e4\uc758": [799, 800, 805], "mfg\ub85c": 799, "mfg\ub97c": [799, 805], "mfg\uc5d0": 804, "mfg\uc5d0\uc11c": 804, "mfg\uc5d0\uc11c\uc758": 799, "mfg\uc758": [799, 800, 805], "mfg\uc778": 804, "mgf\uac00": 804, "mha": 820, "michal": 841, "michel": 167, "micro": 855, "microbenchmark": 824, "microsoft": [151, 152, 289, 697], "middl": [142, 143], "might": [352, 391, 700, 710, 730, 829, 845, 854], "migrat": 21, "mikhail": 853, "million": [455, 712, 722, 816, 829, 831], "min": [5, 9, 73, 117, 243, 385, 396, 397, 419, 481, 486, 501, 503, 507, 513, 521, 527, 551, 552, 610, 651, 683, 708, 710, 724, 731, 752, 754, 764, 771, 793, 796, 803, 808, 814, 823, 854], "min_num_v": 172, "mind": [693, 854], "mine": [132, 171], "minesweep": 171, "mini": [4, 7, 165, 168, 172, 186, 208, 210, 220, 306, 691, 693, 694, 711, 712, 715, 719, 725, 730, 779, 816, 827, 829, 840, 844], "mini_batch": [714, 719], "mini_cn": 739, "mini_feature_dataset": 689, "mini_featureless_dataset": 689, "mini_hetero_dataset": 689, "mini_multi_dataset": 689, "minibatch": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 290, 293, 301, 302, 303, 306, 308, 315, 319, 324, 712, 716, 720, 800, 827, 828, 829, 830, 831, 833, 840, 872], "minibatcher_default": [293, 301], "minibatchtransform": [295, 307, 313, 714], "minigcdataset": [691, 737, 777], "minim": [8, 21, 22, 240, 354, 383, 689, 696, 697, 719, 720, 731, 854, 855], "minimum": [6, 9, 172, 186, 297, 397, 419, 594, 599, 667, 708, 730, 854], "minji": [852, 854, 855, 858], "minkowski": [433, 547], "minst": 169, "minut": [164, 836, 837, 838, 839, 840, 841, 870], "misc": 13, "miss": [689, 853, 855], "mix": [9, 14, 307, 419, 706, 708, 791, 793, 854, 856, 868], "mixtur": [183, 412], "mkdir": [817, 848], "ml": 173, "mle": 861, "mlp": [403, 419, 424, 448, 728, 730, 770, 813, 839], "mlppredictor": [728, 768, 812, 839], "mlp\ub97c": 812, "mlsoar": 750, "mm": 854, "mmap": [834, 835], "mmap_mod": 317, "mnist": [14, 169, 864], "mod": [385, 726, 766, 810], "mod_arg": [385, 726, 766, 810], "mod_kwarg": [385, 428, 726, 766, 810], "mode": [4, 147, 164, 166, 174, 175, 184, 195, 209, 217, 235, 353, 354, 456, 458, 692, 738, 778, 817, 819, 858, 865], "model": [4, 7, 9, 12, 14, 23, 70, 120, 158, 159, 167, 183, 191, 197, 205, 210, 213, 222, 223, 224, 225, 293, 383, 387, 388, 392, 394, 395, 406, 412, 414, 415, 416, 418, 420, 422, 423, 426, 427, 428, 429, 430, 431, 439, 440, 448, 453, 456, 459, 558, 560, 683, 684, 691, 693, 694, 698, 700, 705, 710, 713, 715, 716, 720, 721, 722, 723, 725, 729, 731, 739, 740, 757, 758, 760, 762, 768, 770, 771, 772, 779, 780, 799, 800, 803, 805, 806, 812, 813, 814, 815, 816, 817, 818, 819, 821, 823, 824, 826, 836, 837, 838, 844, 854, 855, 856, 857, 858, 859, 860, 863, 865, 867, 869], "model_opt": 865, "model_state_dict": 844, "model_typ": 448, "model_zoo": 861, "modelnet": 14, "modif": [444, 447, 693, 848, 849], "modifi": [8, 148, 149, 155, 185, 187, 193, 198, 291, 297, 317, 318, 444, 447, 637, 638, 639, 719, 729, 816, 817, 844, 848], "modul": [4, 6, 8, 13, 18, 21, 235, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 658, 659, 660, 661, 662, 664, 665, 668, 684, 685, 693, 706, 712, 714, 716, 717, 719, 721, 722, 727, 728, 730, 731, 732, 758, 759, 760, 761, 762, 764, 766, 768, 770, 771, 772, 800, 802, 803, 804, 805, 806, 807, 808, 810, 812, 813, 814, 815, 818, 819, 820, 821, 823, 828, 829, 830, 831, 836, 839, 840, 842, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "modular": 697, "moduledict": [427, 429, 718, 726, 761, 766, 804, 810], "modulelist": [685, 716, 717, 721, 722, 806, 819, 820, 828, 829, 848, 849, 853, 854, 855, 861, 871], "mol": [178, 179], "mol_encod": 820, "molass": 750, "molecul": [177, 178, 179, 443], "molecular": [178, 179, 195, 391, 438, 443, 451, 840], "moleculenet": 179, "molhiv": [138, 690, 736, 776, 820], "moment": [178, 179, 397, 419, 556], "moment3": [397, 419], "moment4": [397, 419], "moment5": [397, 419], "monitor": 864, "mont": [429, 431], "month": [163, 181], "monthli": [149, 185], "more": [3, 4, 9, 20, 21, 22, 27, 28, 66, 91, 95, 96, 120, 122, 156, 161, 168, 214, 216, 226, 230, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 294, 298, 305, 317, 338, 391, 409, 426, 427, 428, 430, 455, 475, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 558, 559, 564, 565, 635, 641, 683, 689, 691, 692, 693, 694, 697, 701, 705, 709, 711, 712, 713, 714, 715, 719, 720, 721, 724, 726, 728, 730, 732, 749, 790, 816, 817, 819, 821, 823, 829, 834, 835, 840, 841, 844, 845, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870], "moreov": [118, 119], "most": [1, 14, 116, 126, 131, 147, 151, 152, 159, 182, 226, 249, 250, 287, 334, 429, 431, 558, 635, 691, 692, 694, 695, 704, 708, 713, 718, 722, 728, 729, 730, 732, 823, 836, 845, 865], "mostli": 22, "motif": [141, 142, 143, 189, 190, 855], "mount": 848, "move": [4, 89, 108, 580, 583, 688, 695, 719, 819, 829, 865, 871], "movement": [246, 247, 335, 339, 340, 476, 477, 540, 720], "movi": [43, 173, 854], "movielen": 173, "mp": [293, 829, 844, 870, 871], "mpicc": [696, 782], "mpirun": [696, 782], "mpmath": [828, 829, 831, 834, 835], "mpnn": [418, 438], "mq": 565, "msbuild": 817, "msg": [263, 264, 265, 266, 417, 852, 853, 854, 865], "mu": [178, 179, 412, 451], "mu_": 417, "mu_k": 412, "much": [4, 122, 139, 245, 297, 475, 559, 563, 709, 816, 824, 830, 834, 835, 848, 853, 855, 861, 865], "mufei": [853, 855, 861], "muhyun": 791, "mul": [9, 259, 260, 273, 274, 283, 284, 444, 447, 495, 496, 500, 501, 518, 519, 520, 521, 522, 523, 536, 537, 622, 708, 752, 793, 823], "mulbackward0": 9, "multi": [9, 41, 149, 158, 162, 185, 191, 194, 293, 302, 394, 401, 405, 406, 407, 408, 417, 444, 447, 449, 450, 451, 453, 455, 548, 549, 644, 685, 691, 697, 702, 715, 719, 731, 732, 816, 826, 827, 828, 831, 836, 837, 838, 846, 848, 853, 856, 866, 868, 872, 873], "multi30k": 865, "multi_update_al": [427, 429, 710, 726, 754, 766, 796, 810], "multiclass": [165, 428, 429, 430, 431, 457, 821, 829, 871], "multidigraph": [72, 640], "multigraph": [48, 66, 118, 119, 700, 785, 861], "multihead": 439, "multiheadattent": 865, "multiheadgatlay": 855, "multilabel": 457, "multilay": [214, 215, 216, 303, 315, 563, 719, 728], "multilayerdropoutsampl": [757, 799], "multilayerfullneighborsampl": [757, 758, 759, 760, 762, 799, 800, 802, 803, 805], "multilayerneighborsampl": [210, 694, 740, 757, 780, 799, 848, 849], "multilevel": [353, 354], "multinomi": [717, 760, 803], "multipl": [0, 4, 7, 9, 14, 22, 26, 27, 28, 36, 37, 41, 43, 46, 47, 48, 51, 52, 54, 55, 56, 57, 60, 61, 65, 74, 75, 77, 87, 88, 90, 91, 92, 95, 96, 103, 107, 118, 126, 128, 129, 130, 131, 229, 230, 240, 249, 250, 287, 288, 291, 292, 296, 297, 303, 308, 309, 315, 316, 318, 334, 341, 343, 346, 384, 385, 387, 392, 419, 428, 430, 432, 433, 434, 443, 444, 447, 455, 456, 499, 500, 501, 502, 547, 551, 552, 555, 558, 562, 563, 567, 569, 572, 573, 583, 608, 616, 617, 619, 634, 635, 643, 649, 653, 683, 685, 693, 694, 695, 697, 700, 704, 710, 715, 718, 720, 726, 730, 731, 732, 796, 817, 819, 820, 824, 829, 834, 835, 836, 839, 845, 848, 852, 853, 855, 856, 861, 865, 868, 870, 871], "multipli": [5, 183, 216, 397, 419, 426, 427, 551, 552, 608, 609, 616, 619, 624, 627, 628, 708, 722, 729, 818, 823, 853, 865], "multiprocess": [4, 291, 720, 829, 870, 871], "multiprocessor": 291, "multpli": 729, "music": [137, 161], "must": [4, 6, 9, 27, 28, 34, 35, 36, 37, 43, 46, 48, 51, 53, 54, 55, 57, 58, 60, 61, 73, 74, 87, 88, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 113, 118, 119, 122, 125, 130, 131, 138, 139, 140, 147, 164, 174, 175, 197, 198, 205, 209, 210, 211, 212, 214, 216, 218, 219, 220, 241, 242, 246, 249, 250, 287, 294, 296, 297, 298, 302, 303, 308, 315, 316, 317, 318, 334, 335, 337, 339, 340, 342, 343, 344, 355, 385, 389, 392, 397, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 415, 419, 420, 421, 427, 428, 429, 430, 431, 434, 457, 476, 502, 503, 540, 550, 551, 552, 553, 556, 560, 561, 562, 563, 564, 565, 566, 569, 570, 574, 575, 594, 597, 598, 599, 601, 610, 628, 633, 635, 643, 681, 687, 689, 691, 694, 695, 698, 702, 703, 705, 708, 715, 718, 749, 788, 790, 801, 823, 837, 853, 858], "mutag": [25, 165, 168, 170, 186, 426, 430, 431, 730, 770, 813], "mutat": [13, 70, 858, 861], "mutual": [149, 161, 185, 216, 220, 245, 475, 562, 700, 870], "mxnet": [4, 9, 13, 21, 23, 199, 200, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 691, 704, 718, 723, 730, 732, 763, 807, 813, 816, 824, 856, 868], "mxnet\uacfc": 815, "mxnet\uc5d0\uc11c\ub294": 777, "mxnet\uc758": 789, "mxnet\uc774\ub098": 804, "my": [697, 698], "my_agg_func": 385, "my_sample_subgraph": [300, 313], "my_train_script": 698, "myadd": 22, "mydata": 697, "mydatapars": 689, "mydataset": [687, 688, 734, 774, 775], "mygraph": [697, 698], "myrepo": 697, "mysubgraphsampl": [300, 313], "n": [6, 9, 14, 20, 21, 62, 63, 126, 129, 186, 190, 240, 243, 250, 297, 310, 320, 321, 332, 333, 341, 342, 345, 353, 354, 357, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 457, 474, 499, 502, 550, 565, 569, 570, 574, 575, 608, 609, 610, 613, 614, 616, 619, 626, 627, 628, 633, 642, 645, 646, 661, 669, 678, 679, 680, 683, 695, 708, 712, 721, 725, 752, 756, 757, 765, 793, 798, 799, 803, 809, 818, 819, 820, 821, 823, 824, 830, 834, 835, 838, 852, 854, 855, 858, 861, 864, 865, 869], "n0": 297, "n1": [297, 321, 327, 333, 450], "n2": [297, 321, 327, 333, 450], "n2e": 670, "n3": 327, "n_": [389, 392, 399, 400, 401, 402, 405, 407, 408, 410, 411, 412, 413, 415, 417, 421], "n_0": 122, "n_1": 122, "n_base": 853, "n_class": [431, 693, 722, 728, 730, 739, 768, 770, 779, 806, 812, 813, 848, 849], "n_click": [727, 767, 811], "n_commun": 183, "n_dislik": [727, 767, 811], "n_edg": [731, 758, 771, 800, 806, 814, 821, 865], "n_epoch": [210, 213, 853], "n_etyp": 414, "n_feat": 458, "n_featur": [731, 732, 771, 772, 814, 815], "n_follow": [727, 767, 811], "n_graph": 183, "n_head": [440, 448], "n_hetero_featur": [727, 732, 767, 772, 811, 815], "n_hidden": [722, 806, 848, 849, 853], "n_hidden_lay": 853, "n_i": [122, 435, 436, 437, 442, 853], "n_item": [727, 767, 811], "n_iter": 438, "n_job": 231, "n_k": 122, "n_kernel": 412, "n_label": [732, 772, 815], "n_layer": [438, 439, 440, 757, 759, 799, 802, 848, 849], "n_max_click": [727, 767, 811], "n_node": [183, 841, 865], "n_search": 844, "n_step": 414, "n_t": [427, 428, 429], "n_token": 865, "n_train": 841, "n_user": [727, 767, 811], "n_user_class": [727, 732, 767, 772, 811, 815], "n_val": 841, "naive_propagate_attent": 865, "name": [0, 4, 5, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 45, 46, 47, 48, 52, 53, 55, 57, 58, 60, 61, 62, 63, 68, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 133, 138, 156, 159, 162, 165, 168, 173, 178, 179, 186, 197, 200, 205, 208, 214, 216, 219, 220, 221, 222, 223, 224, 225, 236, 237, 240, 241, 242, 246, 247, 249, 250, 289, 290, 292, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 313, 315, 316, 318, 319, 330, 335, 339, 340, 346, 385, 397, 419, 455, 476, 477, 478, 501, 540, 548, 550, 551, 552, 553, 554, 555, 556, 558, 560, 562, 563, 564, 565, 566, 567, 571, 572, 573, 574, 575, 640, 642, 643, 649, 651, 656, 657, 658, 659, 661, 664, 665, 667, 668, 669, 671, 673, 687, 688, 689, 690, 691, 694, 695, 696, 697, 702, 705, 708, 713, 714, 719, 728, 730, 734, 735, 736, 737, 740, 742, 749, 774, 775, 776, 777, 780, 782, 783, 787, 790, 817, 823, 828, 831, 833, 834, 835, 838, 839, 841, 848, 849, 861, 865, 870], "namedrockunit": 144, "namedtupl": 858, "namespac": [1, 22, 133, 144, 708, 816], "name\u76ee\u5f55\u4e2d": 735, "nan": [342, 444, 447, 661, 852, 855], "narrow_row": [725, 765, 809], "nation": 166, "nativ": [8, 292, 693, 713, 817, 820, 823], "nativelayernormbackward": 440, "natur": [556, 729, 820, 854, 858, 864, 865], "nblink": 714, "nbsphinx": [854, 855, 858, 865], "nc": [834, 835], "nc_task": [834, 835], "nc_test_id": 835, "nc_test_ids_path": 835, "nc_test_item_id": 834, "nc_test_item_ids_path": 834, "nc_test_item_label": 834, "nc_test_item_labels_path": 834, "nc_test_label": 835, "nc_test_labels_path": 835, "nc_test_user_id": 834, "nc_test_user_ids_path": 834, "nc_test_user_label": 834, "nc_test_user_labels_path": 834, "nc_train_id": 835, "nc_train_ids_path": 835, "nc_train_item_id": 834, "nc_train_item_ids_path": 834, "nc_train_item_label": 834, "nc_train_item_labels_path": 834, "nc_train_label": 835, "nc_train_labels_path": 835, "nc_train_user_id": 834, "nc_train_user_ids_path": 834, "nc_train_user_label": 834, "nc_train_user_labels_path": 834, "nc_val_id": 835, "nc_val_ids_path": 835, "nc_val_item_id": 834, "nc_val_item_ids_path": 834, "nc_val_item_label": 834, "nc_val_item_labels_path": 834, "nc_val_label": 835, "nc_val_labels_path": 835, "nc_val_user_id": 834, "nc_val_user_ids_path": 834, "nc_val_user_label": 834, "nc_val_user_labels_path": 834, "nccl": [828, 829, 831, 834, 835, 870, 871], "nci1": 165, "ndarrai": [22, 27, 54, 95, 96, 125, 131, 183, 205, 249, 287, 334, 701, 704, 745, 786, 817, 854], "ndarraypartit": 455, "ndarray\u7c7b\u578b\u4f5c\u4e3aapi\u7684\u8f93\u5165": 748, "ndarri": 789, "ndata": [4, 5, 9, 28, 34, 35, 43, 54, 56, 64, 71, 75, 77, 93, 94, 95, 96, 100, 103, 108, 113, 115, 117, 122, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 167, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 217, 219, 221, 224, 240, 246, 249, 335, 339, 340, 351, 383, 397, 426, 427, 428, 429, 430, 431, 444, 448, 458, 476, 540, 552, 553, 554, 556, 557, 565, 571, 573, 574, 575, 640, 641, 642, 643, 646, 655, 656, 661, 662, 663, 665, 667, 668, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 689, 691, 693, 694, 696, 697, 702, 703, 705, 708, 709, 718, 722, 728, 729, 730, 731, 732, 737, 739, 740, 741, 746, 747, 749, 752, 753, 757, 758, 760, 761, 762, 768, 769, 770, 771, 772, 777, 779, 780, 782, 787, 788, 790, 793, 795, 799, 800, 803, 804, 805, 806, 812, 813, 814, 815, 818, 819, 820, 821, 836, 837, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870], "ndata_pars": [148, 689], "ndata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 246, 247, 335, 338, 339, 340, 344, 476, 477, 540, 549, 553, 554, 571, 640, 654, 655, 662, 668, 681, 689, 696, 697, 701, 702, 704, 730, 745, 746, 748, 786, 787, 789, 813, 837, 840, 841], "nearbi": [383, 387], "nearest": [14, 341, 432, 434, 569, 731, 814], "nearli": 865, "necessari": [4, 21, 41, 210, 214, 216, 220, 231, 565, 635, 709, 714, 715, 732, 802, 815, 830, 840, 844, 848, 865], "necessarili": [131, 334, 640, 718, 830, 838, 861], "need": [4, 5, 6, 21, 48, 57, 65, 77, 89, 118, 138, 139, 140, 145, 214, 229, 230, 240, 246, 247, 291, 293, 295, 303, 308, 310, 315, 316, 335, 339, 340, 341, 353, 354, 388, 416, 426, 427, 428, 429, 430, 431, 432, 434, 456, 476, 477, 540, 541, 569, 574, 575, 641, 688, 689, 694, 695, 696, 697, 698, 704, 705, 709, 710, 713, 716, 717, 718, 719, 720, 724, 725, 726, 728, 729, 730, 731, 732, 781, 789, 790, 817, 823, 828, 829, 830, 833, 834, 835, 836, 839, 840, 841, 848, 849, 861, 865, 870, 871], "needham": 839, "neg": [6, 7, 13, 120, 139, 161, 163, 184, 214, 216, 219, 220, 226, 227, 241, 242, 293, 297, 301, 303, 307, 308, 315, 316, 319, 383, 387, 394, 405, 407, 408, 479, 484, 505, 511, 519, 525, 559, 560, 562, 563, 564, 565, 667, 689, 720, 731, 760, 823, 827, 828, 834, 835, 849, 853, 854, 858], "neg_dst": [731, 771, 814, 849], "neg_eid": 839, "neg_featur": 849, "neg_g": [731, 771, 814], "neg_graph": 849, "neg_pair_graph": 220, "neg_ratio": 139, "neg_sampl": [220, 226, 227, 303, 319], "neg_scor": [731, 760, 771, 803, 814, 839, 849], "neg_src": [731, 771, 814, 849], "neg_u": 839, "neg_v": [387, 839], "neg_weight": 383, "negat": [592, 823], "negative_edge_dst": [139, 849], "negative_edge_src": [139, 849], "negative_graph": [731, 760, 771, 803, 814], "negative_ratio": [297, 307, 319], "negative_s": [383, 387], "negative_sampl": [220, 226, 227, 228, 760, 803], "negative_slop": [394, 405, 407, 408], "negativesampl": [319, 717, 720, 760, 803], "neghborhood": 828, "neglig": 22, "neigh": [725, 765, 809], "neighbor": [4, 13, 14, 171, 210, 214, 215, 216, 219, 220, 234, 241, 242, 245, 297, 300, 303, 308, 313, 315, 316, 338, 341, 352, 391, 394, 395, 396, 404, 405, 412, 415, 420, 432, 433, 434, 475, 547, 558, 560, 562, 563, 564, 565, 566, 569, 574, 575, 660, 691, 712, 713, 716, 719, 720, 721, 731, 732, 757, 799, 814, 823, 827, 836, 838, 839, 840, 852, 853, 855, 861], "neighbor_match": 6, "neighbor_sampling_overview": 714, "neighborhood": [1, 214, 220, 291, 297, 303, 315, 339, 340, 426, 427, 428, 430, 558, 563, 564, 635, 694, 716, 721, 732, 758, 762, 800, 805, 836, 853, 854, 855, 856, 868], "neighborsampl": [215, 220, 303, 315, 693, 714, 716, 719, 739, 779], "neighborsamplerimpl": [303, 308], "neighbor\ub4e4\uc5d0": 777, "neighbour": [397, 419], "neighbourhood": [419, 854], "neither": [168, 574, 575], "nelement": 861, "neo4j": 839, "neq": 854, "net": [419, 444, 446, 447, 458, 852, 855], "net_typ": 235, "network": [4, 13, 72, 134, 141, 142, 143, 145, 149, 150, 154, 155, 164, 165, 166, 167, 175, 176, 183, 185, 187, 189, 190, 192, 193, 209, 210, 219, 235, 243, 244, 289, 314, 342, 357, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 401, 403, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 436, 439, 440, 443, 456, 458, 459, 474, 550, 558, 560, 649, 654, 657, 661, 665, 668, 685, 693, 694, 696, 697, 698, 700, 701, 706, 710, 712, 718, 719, 724, 728, 729, 731, 745, 757, 786, 799, 816, 820, 822, 823, 824, 825, 837, 838, 840, 841, 842, 844, 858, 861, 866, 870, 871], "networkx": [72, 125, 230, 249, 458, 640, 642, 701, 745, 786, 819, 828, 829, 831, 834, 835, 854, 855, 858, 861, 864], "networkx\ub294": 786, "network\ub97c": 798, "neural": [4, 141, 142, 143, 165, 179, 183, 189, 190, 192, 210, 219, 243, 244, 314, 342, 389, 390, 392, 393, 398, 403, 410, 411, 413, 414, 416, 418, 424, 426, 427, 428, 429, 430, 431, 436, 439, 440, 458, 550, 558, 661, 665, 668, 685, 706, 710, 712, 718, 719, 724, 729, 731, 757, 799, 816, 820, 822, 823, 824, 836, 837, 838, 840, 842, 844, 852, 861, 866, 870, 871], "neurip": [214, 297, 303, 315, 563], "neuron": 854, "neutral": [184, 858], "never": [235, 433, 547, 714], "nevertheless": 695, "new": [0, 1, 3, 4, 26, 27, 28, 34, 40, 70, 89, 114, 115, 116, 117, 118, 119, 122, 138, 140, 142, 143, 159, 210, 231, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 297, 328, 335, 338, 339, 340, 345, 351, 352, 385, 387, 395, 402, 404, 417, 420, 426, 427, 430, 474, 540, 553, 554, 555, 556, 557, 561, 563, 564, 565, 566, 574, 575, 592, 630, 634, 635, 649, 650, 651, 666, 671, 694, 695, 697, 704, 705, 712, 715, 718, 790, 799, 823, 824, 825, 829, 836, 837, 838, 839, 840, 848, 852, 853, 858, 861, 865, 866, 868], "new_cent": [426, 427], "new_d": [139, 140], "new_dataset": 138, "new_edge_feat": [402, 413], "new_edges_mask": [757, 799], "new_etyp": 651, "new_g": [26, 130, 352, 648, 649, 650, 651, 653, 654, 655, 658, 659, 660, 662, 664, 666], "new_g1": 26, "new_g2": [26, 130], "new_label": 457, "new_node_feat": [402, 405, 413], "new_node_id": [426, 427], "new_val": 823, "newer": [300, 313], "newg": 837, "newh": 70, "newli": [114, 115, 844], "newman": 167, "next": [301, 303, 308, 560, 562, 641, 685, 689, 695, 697, 719, 762, 805, 828, 831, 839, 854, 858, 865], "next_lg_x": 854, "next_x": 854, "nf": [698, 783], "nfeat": [392, 402, 405, 411, 428, 429, 430, 431, 446, 447, 454, 696, 697], "ngc": 829, "nh": 820, "nice": [22, 730, 825], "nid": [4, 10, 26, 95, 96, 130, 212, 219, 221, 222, 224, 225, 240, 246, 335, 339, 340, 426, 455, 476, 540, 553, 554, 556, 571, 635, 640, 680, 693, 694, 695, 697, 705, 711, 739, 740, 749, 755, 757, 779, 780, 781, 782, 790, 797, 799, 831, 837, 849, 865], "nid2localnid": 4, "nid2partid": 4, "nid_het2hom": 695, "nid_hom2het": 695, "nid_offset": 695, "nid_rang": 782, "nightli": 824, "nine": 165, "niter": 854, "nk": [341, 432, 434, 569], "nl": 133, "nlh": [712, 756, 798], "nll_loss": [852, 855, 858], "nlp": [184, 865], "nmap": 848, "nn": [10, 13, 14, 21, 121, 210, 213, 341, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 569, 683, 685, 693, 694, 709, 714, 716, 717, 718, 719, 721, 722, 723, 726, 728, 730, 731, 732, 739, 753, 758, 759, 760, 761, 762, 764, 765, 766, 768, 770, 771, 772, 779, 780, 795, 800, 802, 803, 804, 805, 806, 807, 810, 812, 813, 814, 815, 818, 819, 820, 821, 823, 828, 829, 831, 836, 838, 839, 840, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "nnz": [12, 30, 31, 62, 63, 577, 580, 583, 585, 587, 589, 590, 591, 592, 600, 603, 605, 607, 608, 610, 611, 612, 613, 614, 615, 617, 618, 619, 620, 622, 626, 628, 629, 630, 823], "nn\u6a21\u5757": [763, 764, 766], "nn\u6a21\u5757\u4e2d": 763, "nn\u6a21\u5757\u53ef\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u8f93\u5165\u4e2d\u91cd\u590d\u4f7f\u7528": 765, "nn\u6a21\u5757\u662f\u7528\u6237\u6784\u5efagnn\u6a21\u578b\u7684\u57fa\u672c\u6a21\u5757": 763, "nn\u6a21\u5757\u7684api\u53c2\u8003": 762, "nn\u6a21\u5757\u7684forward\u51fd\u6570": [750, 763], "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [750, 763], "nn\u6a21\u5757\u7684\u7236\u7c7b\u53d6\u51b3\u4e8e\u540e\u7aef\u6240\u4f7f\u7528\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 763, "nn\u6a21\u5757\u76f8\u6bd4": 765, "nn\u6a21\u5757\u989d\u5916\u589e\u52a0\u4e861\u4e2a\u53c2\u6570": 765, "no_grad": [732, 772, 815, 820, 829, 831, 839, 848, 849, 852, 870, 871], "no_subtree_check": 848, "noam": 865, "noamopt": 865, "node": [0, 5, 6, 7, 9, 13, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 39, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 224, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 263, 264, 265, 266, 287, 289, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 312, 313, 315, 316, 318, 319, 320, 321, 325, 327, 332, 333, 334, 335, 338, 339, 340, 341, 342, 344, 345, 351, 352, 353, 354, 357, 383, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 457, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 633, 634, 635, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 649, 650, 651, 654, 655, 656, 657, 658, 659, 661, 662, 663, 664, 666, 667, 668, 669, 670, 674, 675, 676, 677, 678, 679, 681, 683, 685, 689, 690, 693, 695, 696, 697, 699, 700, 703, 705, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 720, 721, 722, 724, 725, 726, 727, 729, 730, 731, 736, 747, 748, 749, 752, 754, 757, 761, 765, 767, 768, 771, 772, 776, 777, 781, 782, 787, 788, 789, 790, 792, 793, 796, 799, 800, 802, 804, 806, 811, 812, 813, 814, 815, 816, 818, 819, 820, 821, 823, 827, 830, 833, 838, 839, 840, 842, 845, 850, 852, 853, 854, 855, 856, 858, 864, 865, 868, 870, 872], "node1": 854, "node2": 854, "node2vec": [560, 836], "node_activ": 861, "node_activation_hidden_s": 861, "node_attr": [25, 249, 642], "node_attr_dtyp": 782, "node_attr_schem": [4, 47], "node_attribut": [297, 327], "node_classif": [309, 831, 834, 835], "node_color": [819, 854, 858, 861, 864], "node_count_check": 131, "node_data": [309, 689, 697, 782], "node_degre": [717, 821], "node_emb": [383, 387, 697, 782, 848], "node_embed": [731, 771, 814], "node_feat": [240, 318, 392, 397, 402, 403, 405, 411, 413, 419, 683, 685, 696, 697, 741, 782], "node_feat_0": 835, "node_feat_0_path": 835, "node_feat_1": 835, "node_feat_1_path": 835, "node_feat_dim": [709, 753, 795], "node_feat_nam": [656, 667], "node_feat_out": 403, "node_feat_s": 138, "node_featur": [295, 301, 305, 713, 717, 719, 721, 728, 731, 732, 768, 771, 772, 812, 814, 815, 828, 829, 831, 841, 849, 871], "node_feature_kei": [295, 713, 714, 716, 717, 719, 720, 721, 828, 829, 831, 871], "node_g": 861, "node_gener": 544, "node_hidden_s": 861, "node_id": [302, 305, 325, 426, 427, 689, 696, 782, 853], "node_id_field": 689, "node_ids_item": 299, "node_ids_us": 299, "node_in_feat": 392, "node_input": 849, "node_item_feat_0": 834, "node_item_feat_0_path": 834, "node_item_feat_1": 834, "node_item_feat_1_path": 834, "node_label": [25, 168, 186, 697, 732, 772, 815, 841], "node_map": [240, 697, 741, 782], "node_min": [429, 431], "node_pair": 297, "node_part": 541, "node_permute_algo": [98, 556], "node_repr": 849, "node_s": [819, 854, 858, 864], "node_split": [681, 693, 694, 739, 740, 779, 780, 848, 849], "node_subgraph": [106, 246, 715], "node_timestamp_attr_nam": [297, 315, 316], "node_to_graph": 861, "node_trainer_id": 239, "node_typ": [240, 305, 451, 695, 697, 705, 749, 782, 790, 861], "node_type_emb": 861, "node_type_id": [695, 696, 781], "node_type_offset": [297, 327, 834], "node_type_offset_": 297, "node_type_subgraph": 247, "node_type_to_id": [297, 327, 834], "node_udf": [20, 677, 678, 679, 680], "node_update_func": 861, "node_user_feat_0": 834, "node_user_feat_0_path": 834, "node_user_feat_1": 834, "node_user_feat_1_path": 834, "node_weight_list": 696, "node_year": 697, "nodebatch": [20, 54, 708, 752, 793], "nodedataload": [694, 740, 757, 758, 759, 762, 780, 799, 800, 801, 802, 805, 848], "nodedataview": [4, 642], "nodeembed": 10, "nodelist": 864, "nodepr": 140, "nodeproppr": [690, 736, 776, 848], "nodes_": 865, "nodes_0": 689, "nodes_1": 689, "nodes_d": 865, "nodes_data": 841, "nodes_gener": [92, 544], "nodes_perm": 556, "nodes_with_feature_on": 54, "nodeshuffl": 13, "nodeview": 72, "nodewis": 440, "nois": [731, 771, 814], "noisi": 162, "non": [6, 9, 21, 27, 30, 114, 116, 162, 182, 184, 197, 200, 205, 210, 214, 216, 219, 241, 242, 297, 310, 313, 327, 342, 345, 357, 397, 406, 448, 474, 556, 560, 562, 563, 564, 565, 577, 578, 581, 582, 593, 594, 595, 597, 598, 599, 600, 601, 606, 608, 613, 614, 616, 620, 622, 626, 628, 630, 661, 667, 683, 689, 697, 703, 719, 729, 731, 788, 801, 805, 818, 827, 829, 839, 841, 852, 854, 858, 866, 868, 871], "non_block": [290, 305, 310], "none": [4, 6, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 113, 114, 115, 116, 117, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 231, 232, 235, 238, 239, 240, 241, 242, 246, 247, 249, 250, 287, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 305, 306, 308, 309, 310, 311, 313, 315, 316, 317, 320, 321, 324, 325, 327, 334, 335, 339, 340, 346, 347, 348, 349, 350, 353, 354, 385, 388, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 436, 440, 444, 446, 447, 449, 450, 451, 452, 455, 456, 457, 476, 477, 478, 500, 501, 540, 541, 543, 545, 546, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 564, 565, 566, 567, 570, 572, 573, 581, 582, 594, 597, 598, 599, 601, 603, 610, 612, 613, 614, 615, 626, 631, 632, 634, 635, 640, 641, 642, 645, 646, 651, 656, 658, 659, 661, 664, 665, 667, 668, 681, 683, 687, 691, 716, 717, 721, 724, 725, 726, 734, 737, 757, 764, 765, 766, 774, 777, 799, 808, 809, 810, 828, 829, 831, 835, 853, 858, 861, 865, 871], "nonlinear": [732, 819, 854], "nonneg": 183, "nontre": [230, 543], "nonzero": [126, 214, 250, 558, 574, 575, 592, 608, 619, 691, 701, 737, 777, 782, 786, 823, 853, 854], "norm": [341, 399, 400, 406, 415, 416, 417, 420, 421, 422, 424, 432, 433, 434, 453, 454, 547, 569, 714, 719, 724, 725, 758, 760, 762, 764, 765, 800, 803, 805, 808, 809, 820, 823, 853, 854, 865], "norm_": 413, "norm_bi": 357, "norm_by_dst": 853, "norm_edge_weight": 406, "norm_first": [447, 685], "norm_typ": 457, "norm_x": 865, "normal": [4, 128, 129, 142, 150, 154, 176, 245, 343, 357, 393, 395, 397, 399, 400, 403, 404, 405, 406, 412, 413, 415, 419, 420, 421, 422, 424, 425, 447, 448, 457, 475, 478, 562, 572, 573, 657, 667, 668, 685, 687, 697, 718, 724, 725, 729, 730, 809, 813, 818, 821, 823, 828, 829, 831, 834, 835, 836, 840, 841, 853, 854, 855, 864, 865], "normalis": 667, "normalization\uacfc": 774, "normalization\uc73c\ub85c": 808, "normalization\uc744": [808, 809], "normalization\uc774": 804, "normliz": 808, "north": 23, "nose": 21, "notabl": [693, 714], "notat": [819, 861], "note": [4, 6, 9, 10, 14, 21, 22, 26, 27, 28, 34, 39, 43, 46, 48, 52, 66, 68, 70, 73, 74, 78, 93, 94, 95, 96, 100, 101, 102, 103, 108, 110, 113, 114, 115, 116, 117, 118, 119, 126, 130, 131, 134, 135, 136, 149, 150, 151, 152, 153, 154, 155, 159, 168, 173, 176, 184, 185, 186, 187, 192, 193, 210, 214, 215, 216, 220, 226, 235, 246, 247, 249, 250, 287, 293, 297, 301, 305, 308, 315, 316, 317, 318, 319, 320, 321, 334, 335, 338, 339, 340, 344, 351, 352, 357, 385, 387, 395, 397, 399, 400, 401, 419, 420, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 455, 456, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 553, 554, 555, 556, 557, 560, 561, 563, 564, 565, 566, 574, 575, 634, 635, 636, 640, 641, 642, 643, 644, 645, 646, 687, 690, 691, 692, 693, 695, 701, 705, 710, 716, 718, 722, 725, 726, 727, 730, 732, 739, 740, 741, 742, 779, 780, 781, 782, 783, 796, 802, 818, 819, 820, 821, 830, 834, 835, 836, 837, 838, 839, 841, 844, 845, 848, 852, 853, 854, 855, 858, 861, 865, 870, 871], "notebook": [694, 714, 822, 829, 865], "notebook\u4e2d\u5f00\u53d1\u548c\u8fd0\u884c\u4ee3\u7801": 740, "notebook\u4e2d\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 740, "notebook\uc5d0\uc11c": 780, "noth": [555, 861], "notic": [635, 641, 829, 830, 839, 840], "notimplementederror": 861, "notion": [22, 854], "noun": [149, 185], "now": [183, 234, 351, 640, 694, 696, 714, 718, 719, 732, 804, 821, 829, 834, 835, 844, 848, 855, 861, 871], "np": [4, 125, 126, 205, 249, 250, 317, 318, 389, 390, 391, 392, 393, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 418, 420, 421, 422, 423, 428, 430, 565, 689, 694, 695, 696, 727, 728, 740, 767, 768, 780, 782, 811, 812, 831, 834, 835, 837, 839, 848, 849, 852, 854, 855, 864, 865], "npoint": 6, "nproc": [829, 870, 871], "npy": [240, 309, 317, 318, 697, 741, 782, 834, 835], "nty": [385, 726, 766, 810], "ntype": [4, 26, 28, 35, 37, 54, 58, 75, 76, 79, 81, 82, 83, 85, 86, 96, 115, 118, 129, 157, 158, 191, 198, 210, 214, 216, 221, 239, 240, 297, 327, 348, 350, 385, 417, 427, 428, 429, 477, 552, 554, 558, 573, 632, 640, 641, 642, 646, 689, 691, 695, 696, 697, 705, 710, 713, 717, 718, 730, 731, 737, 749, 754, 761, 770, 771, 777, 781, 782, 790, 796, 804, 813, 814, 853], "ntype2id": 695, "ntype2id_map": 695, "ntype_attr": 642, "ntype_count": 641, "ntype_field": 640, "ntype_id": 782, "ntype_output": 385, "ntypes_list": 240, "null": [120, 818, 819, 820, 821, 823, 833], "num": [28, 115, 302, 309, 742, 782, 783, 833, 834, 835], "num_atom_typ": 195, "num_bas": [388, 395, 420, 459, 853], "num_base_edges_per_nod": [142, 143], "num_base_nod": [142, 143], "num_bond_typ": 195, "num_child": [429, 431], "num_class": [132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 309, 426, 427, 428, 429, 430, 692, 697, 714, 721, 722, 738, 758, 760, 778, 800, 803, 806, 818, 819, 821, 829, 831, 833, 834, 835, 836, 838, 840, 853, 858, 870, 871], "num_correct": 840, "num_dst": 559, "num_dst_nod": [82, 83, 131, 548, 799, 828, 831], "num_edgnum_edges_per_chunk": [695, 697], "num_embed": [4, 384, 455], "num_epoch": [383, 426, 427, 693, 739, 779, 820, 844], "num_etyp": 417, "num_exampl": 840, "num_featur": [428, 430], "num_gpu": 870, "num_gpu_cached_edg": 291, "num_graph": [138, 139, 140, 159, 172, 683, 685], "num_head": [394, 401, 402, 405, 407, 408, 417, 439, 444, 446, 447, 449, 450, 451, 685, 820, 855], "num_hidden": [693, 739, 779, 848, 849], "num_hidden_lay": 853, "num_hop": [4, 240, 426, 427, 428, 429, 430, 431], "num_input_nod": 757, "num_inter_edg": 142, "num_it": 217, "num_item": 302, "num_kernel": 451, "num_label": [168, 175, 177, 178, 179, 186, 848, 849], "num_lay": [215, 305, 448, 456, 693, 739, 757, 779, 799, 820, 848, 849], "num_mlp_aft": 424, "num_mlp_befor": 424, "num_motif": [142, 143, 189, 190], "num_neighbor": 558, "num_nod": [4, 5, 10, 26, 27, 28, 85, 95, 96, 101, 102, 114, 115, 117, 122, 127, 138, 146, 147, 157, 158, 165, 168, 169, 172, 173, 174, 184, 186, 191, 192, 195, 205, 219, 240, 246, 247, 287, 297, 312, 334, 335, 338, 339, 340, 344, 383, 385, 387, 402, 405, 411, 413, 416, 427, 428, 429, 446, 447, 450, 452, 453, 454, 455, 456, 458, 476, 477, 540, 548, 549, 553, 554, 555, 556, 557, 571, 640, 641, 643, 654, 655, 656, 662, 667, 668, 670, 681, 683, 689, 694, 695, 696, 697, 701, 702, 704, 705, 718, 721, 730, 731, 740, 745, 746, 748, 749, 757, 759, 761, 771, 780, 781, 782, 786, 787, 789, 790, 799, 802, 804, 813, 814, 818, 819, 820, 834, 835, 837, 839, 840, 841, 848, 849, 853, 858, 861], "num_node_typ": 297, "num_node_weight": 782, "num_nodes_dict": [118, 119, 334, 731, 757, 771, 799, 814, 841], "num_nodes_per_chunk": [695, 697], "num_ntyp": 417, "num_of_class": 176, "num_output": 459, "num_output_nod": 757, "num_part": [209, 240, 697, 782, 848, 849], "num_partit": [4, 697], "num_positive_edg": 139, "num_post_lay": 448, "num_prop_round": 861, "num_random_walk": 558, "num_rel": [157, 158, 191, 395, 420, 453, 454, 853], "num_replica": 293, "num_rollout": [429, 431], "num_sampl": [559, 698, 742, 783, 848], "num_se": [560, 562], "num_serv": [698, 742, 783, 848], "num_split": 192, "num_src": 559, "num_src_nod": [79, 86, 131, 548, 799, 828, 831], "num_task": [138, 177, 178, 179, 691, 737, 777, 820], "num_test": [834, 835, 840], "num_test_item": [829, 871], "num_tow": [397, 419], "num_train": [698, 742, 783, 834, 835, 840, 848], "num_train_item": [829, 871], "num_trainers_per_machin": 240, "num_travers": 558, "num_trial": 861, "num_typ": 388, "num_val": [834, 835], "num_val_item": [829, 871], "num_valid": 861, "num_virtual_nod": 446, "num_vocab": 858, "num_work": [209, 210, 213, 214, 215, 216, 217, 219, 220, 291, 715, 742, 757, 758, 760, 762, 783, 799, 800, 801, 803, 805, 828, 844, 845, 858], "num_worker_thread": 235, "numa": 845, "number": [3, 4, 6, 9, 10, 14, 21, 22, 28, 36, 37, 38, 62, 63, 70, 79, 80, 81, 82, 101, 102, 113, 115, 118, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 231, 232, 235, 236, 239, 240, 241, 242, 243, 250, 287, 291, 293, 294, 297, 298, 302, 303, 305, 308, 312, 315, 316, 317, 328, 334, 339, 340, 341, 342, 345, 353, 354, 357, 383, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 541, 548, 549, 550, 553, 556, 558, 559, 563, 564, 565, 566, 569, 570, 574, 575, 593, 611, 613, 614, 617, 618, 633, 641, 643, 648, 658, 659, 660, 661, 664, 665, 668, 669, 672, 673, 674, 676, 677, 678, 679, 680, 681, 685, 687, 689, 691, 694, 695, 696, 697, 698, 702, 704, 705, 709, 710, 713, 715, 718, 722, 729, 732, 774, 777, 789, 790, 794, 801, 819, 821, 823, 829, 830, 831, 833, 834, 836, 837, 839, 840, 841, 844, 845, 848, 852, 853, 855, 861, 864, 865, 870, 871], "number_of_dst_nod": [635, 718, 725, 726, 757, 759, 761, 765, 766, 799, 802, 804, 809, 810], "number_of_edg": 4, "number_of_nod": 4, "number_of_src_nod": [718, 757, 761, 799, 804], "numclass": [818, 819, 821, 836, 838, 839, 852, 854, 855], "numedg": [818, 819, 821, 836, 838, 839, 852, 854, 855], "numer": [4, 10, 22, 245, 397, 413, 475, 689, 702, 837, 841, 861, 865], "numfeat": [818, 819, 821, 836, 838, 839, 852, 854, 855], "numnod": [818, 819, 821, 836, 838, 839, 852, 854, 855], "numpi": [5, 9, 21, 27, 31, 54, 95, 96, 125, 126, 128, 129, 131, 168, 183, 198, 205, 240, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 309, 317, 318, 334, 383, 389, 390, 391, 392, 393, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 418, 420, 421, 422, 423, 428, 430, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 689, 693, 695, 697, 701, 704, 705, 727, 739, 745, 767, 779, 782, 786, 789, 790, 811, 817, 820, 828, 829, 831, 833, 834, 835, 837, 839, 841, 848, 849, 852, 854, 855, 864, 865], "numpy_save_align": [317, 318], "numtestsampl": [818, 819, 821, 836, 838, 839, 852, 854, 855], "numtrainingsampl": [818, 819, 821, 836, 838, 839, 852, 854, 855], "numvalidationsampl": [818, 819, 821, 836, 838, 839, 852, 854, 855], "nutshel": 822, "nvidia": [210, 394, 395, 396, 722, 806, 828, 829, 831, 834, 835], "nvjitlink": [828, 831, 834, 835], "nvrtc": [828, 831, 834, 835], "nvtx": [828, 831, 834, 835], "nx": [125, 249, 458, 701, 745, 786, 819, 854, 855, 858, 861, 864], "nx_agraph": 858, "nx_g": [125, 249, 642, 701, 745, 786, 819, 861], "nx_g1": 854, "nx_graph": [125, 249], "nxg": [701, 745, 786], "nxn": [432, 433], "o": [4, 9, 22, 156, 341, 432, 434, 569, 688, 692, 712, 735, 738, 756, 775, 778, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 844, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "o1": 823, "o2": 823, "o3": 823, "o4": 823, "o5": 823, "o6": 823, "o7": 823, "o8": 823, "o_j": 858, "ob": 459, "obg": 776, "obj_": 22, "object": [4, 22, 26, 42, 53, 54, 59, 108, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 210, 218, 220, 221, 229, 230, 240, 246, 247, 248, 249, 250, 287, 292, 294, 296, 297, 298, 299, 302, 305, 310, 312, 314, 317, 318, 327, 330, 334, 335, 339, 340, 354, 355, 357, 385, 426, 427, 455, 476, 477, 540, 543, 545, 546, 548, 549, 551, 552, 563, 564, 565, 566, 567, 572, 573, 642, 645, 646, 647, 652, 653, 683, 689, 690, 691, 692, 693, 694, 695, 697, 701, 703, 713, 725, 760, 788, 803, 817, 818, 831, 833, 834, 835, 836, 837, 840, 853, 854], "objectbas": 22, "objectref": 22, "objtyp": [240, 354], "observ": [844, 854, 864], "obtain": [14, 245, 339, 340, 402, 405, 444, 447, 448, 456, 475, 561, 635, 649, 691, 714, 718, 728, 730, 731, 732, 777, 819, 829, 836, 837, 855, 858, 871], "occasion": [173, 841], "occup": 837, "occupi": [178, 179], "occur": [26, 240], "occurr": 134, "odot": [413, 452, 858], "ofev": 164, "off": [429, 431, 685, 817, 818, 819, 820, 845, 854, 855, 864, 865], "offer": [816, 827, 836, 844, 858, 864], "offic": 145, "offici": [21, 167, 184, 690, 852, 853, 854, 855, 858, 861, 864, 865], "offlin": [712, 802], "offset": [297, 325, 327, 406, 561, 565, 574, 575], "often": [21, 120, 689, 691, 830, 837, 841, 844], "ogb": [4, 138, 289, 686, 715, 736, 742, 773, 783, 801, 820, 829, 831, 848, 849], "ogb_exampl": 844, "ogb_example_argo": 844, "ogbg": [138, 690, 736, 776, 820], "ogbl": [289, 690, 736, 776, 849], "ogbn": [289, 690, 719, 721, 736, 776, 782, 829, 831, 848, 871], "ok": [5, 703, 788], "old": [27, 28, 114, 426, 643, 852], "old_step_count": 861, "omega": 819, "omit": [4, 27, 28, 30, 31, 32, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 117, 128, 129, 309, 478, 551, 552, 553, 554, 555, 559, 560, 562, 572, 573, 641, 645, 646, 683, 685, 732, 815, 837], "omp": 235, "omp_num_thread": [829, 871], "onc": [21, 131, 235, 287, 291, 294, 297, 298, 303, 308, 309, 315, 316, 317, 334, 696, 697, 730, 819, 861, 865, 870], "ondisk": 309, "ondisk_dataset": [834, 835], "ondisk_dataset_heterograph": 834, "ondisk_dataset_homograph": 835, "ondiskdataset": [289, 827, 833], "ondiskfeaturedata": 318, "ondiskfeaturedatadomain": [834, 835], "ondisktask": [834, 835], "one": [0, 4, 5, 6, 9, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 44, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 77, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 107, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 144, 147, 150, 154, 157, 158, 160, 161, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 180, 182, 183, 184, 188, 191, 192, 194, 195, 198, 205, 214, 216, 219, 220, 230, 234, 240, 241, 242, 246, 247, 249, 250, 287, 297, 303, 305, 308, 334, 335, 339, 340, 341, 352, 387, 388, 389, 404, 412, 414, 415, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 447, 457, 476, 478, 500, 501, 505, 506, 507, 508, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 540, 551, 552, 553, 554, 555, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 572, 573, 574, 575, 589, 594, 633, 635, 640, 643, 645, 646, 671, 672, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 701, 702, 704, 705, 708, 709, 710, 711, 712, 713, 716, 717, 718, 719, 721, 724, 725, 726, 727, 728, 729, 730, 731, 732, 736, 749, 774, 776, 777, 789, 790, 812, 817, 819, 821, 823, 824, 828, 830, 831, 836, 837, 838, 840, 845, 848, 849, 853, 854, 855, 858, 861, 864, 865, 866, 868, 870], "onehot_label": [691, 737, 777], "ones": [0, 1, 4, 9, 27, 28, 34, 35, 43, 44, 45, 46, 51, 56, 64, 70, 71, 74, 77, 79, 82, 93, 94, 100, 103, 104, 105, 108, 113, 114, 115, 116, 122, 125, 232, 239, 249, 310, 351, 357, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 406, 407, 408, 409, 410, 412, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 450, 456, 503, 557, 562, 567, 587, 610, 615, 616, 628, 630, 635, 641, 642, 643, 650, 656, 672, 676, 677, 678, 679, 680, 681, 683, 693, 695, 697, 701, 702, 705, 746, 749, 787, 790, 824, 838, 839, 849, 858, 861, 864, 865], "ones_lik": 849, "onli": [3, 4, 10, 14, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 41, 47, 48, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 125, 128, 129, 130, 132, 133, 134, 138, 139, 140, 144, 146, 147, 150, 154, 157, 158, 159, 160, 167, 169, 170, 176, 178, 191, 192, 194, 210, 213, 214, 216, 219, 220, 234, 235, 236, 240, 241, 242, 246, 247, 249, 287, 290, 294, 296, 297, 298, 300, 303, 305, 308, 309, 313, 315, 316, 317, 335, 338, 339, 340, 341, 342, 385, 394, 395, 396, 397, 400, 401, 402, 404, 405, 406, 407, 408, 414, 416, 422, 432, 434, 436, 446, 448, 452, 456, 476, 477, 540, 551, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 634, 635, 636, 640, 642, 643, 645, 646, 651, 657, 658, 659, 660, 661, 662, 664, 665, 666, 668, 670, 681, 685, 689, 690, 691, 693, 694, 695, 696, 697, 701, 702, 703, 705, 708, 711, 714, 716, 717, 718, 719, 722, 728, 729, 730, 732, 736, 776, 777, 802, 813, 817, 820, 823, 831, 836, 837, 838, 840, 841, 845, 852, 853, 854, 855, 858, 861, 864, 865, 870], "onlin": [160, 383], "onto": [26, 293, 715, 719, 829, 836, 861, 871], "ood": [197, 205], "oom": [722, 806, 824], "op": [1, 13, 347, 348, 349, 350, 394, 395, 396, 452, 551, 552, 622, 631, 632, 715, 722, 757, 799, 806, 823], "open": [21, 292, 690, 697, 736, 776, 782, 829, 831, 834, 835, 849], "openmp": 8, "opennmt": 865, "oper": [0, 5, 6, 9, 11, 21, 22, 70, 116, 128, 129, 130, 210, 214, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 294, 295, 298, 303, 308, 315, 316, 317, 318, 328, 338, 341, 344, 357, 391, 404, 432, 434, 438, 444, 447, 452, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 551, 552, 557, 563, 564, 565, 566, 569, 574, 575, 616, 622, 634, 641, 643, 666, 668, 681, 687, 694, 695, 703, 705, 708, 709, 713, 715, 721, 722, 723, 725, 729, 730, 731, 817, 818, 819, 820, 822, 831, 838, 844, 845, 855, 856, 861, 865, 866, 868], "operand": [9, 118, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539], "oplu": 419, "oplus_": [388, 419, 420], "opportun": [827, 836], "opposit": 838, "opt": [713, 714, 719, 728, 730, 731, 732, 757, 758, 760, 762, 768, 770, 771, 772, 799, 800, 803, 805, 812, 813, 814, 815, 828, 831, 834, 835, 852, 855], "optim": [13, 14, 214, 222, 223, 224, 225, 313, 314, 383, 387, 395, 396, 426, 427, 428, 429, 430, 431, 455, 563, 693, 694, 697, 708, 709, 714, 717, 719, 720, 721, 722, 725, 728, 730, 731, 732, 739, 740, 757, 758, 760, 762, 768, 770, 771, 772, 779, 780, 799, 800, 803, 805, 806, 812, 813, 814, 815, 816, 818, 819, 820, 821, 824, 827, 828, 829, 831, 836, 838, 839, 840, 844, 845, 848, 849, 852, 853, 854, 855, 858, 864, 865, 870, 871], "optimizer_exp": [428, 430], "optimizer_state_dict": 844, "optimizer\ub4e4\uc744": 780, "optimizer\ub97c": 806, "optimizer\uc5d0": 780, "option": [4, 6, 10, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 116, 117, 118, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 213, 214, 216, 217, 219, 220, 221, 226, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 249, 250, 287, 289, 291, 293, 294, 295, 296, 297, 298, 301, 302, 303, 308, 309, 315, 316, 317, 320, 321, 325, 327, 334, 335, 338, 339, 340, 341, 342, 344, 346, 355, 356, 357, 383, 385, 386, 387, 388, 389, 390, 393, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 475, 476, 477, 478, 499, 503, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 559, 560, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 594, 597, 598, 599, 601, 603, 610, 612, 613, 614, 615, 626, 633, 634, 635, 640, 641, 642, 643, 645, 646, 647, 648, 649, 650, 651, 654, 655, 656, 657, 658, 659, 661, 662, 664, 665, 667, 668, 669, 671, 681, 686, 689, 697, 698, 701, 724, 725, 728, 729, 773, 782, 817, 833, 834, 835, 848, 849], "optiona": 417, "oracl": 861, "orbit": [178, 179], "order": [0, 4, 9, 20, 51, 56, 91, 92, 95, 96, 123, 125, 130, 131, 141, 142, 143, 189, 190, 197, 205, 229, 230, 241, 249, 287, 297, 308, 315, 316, 334, 341, 352, 385, 387, 416, 433, 438, 441, 452, 456, 458, 476, 546, 547, 556, 563, 564, 565, 566, 569, 577, 581, 582, 635, 640, 653, 664, 694, 696, 697, 704, 705, 714, 719, 720, 730, 790, 823, 834, 835, 837, 848, 853, 854, 858, 861, 870], "ordereddict": 184, "ordinari": 726, "org": [9, 133, 134, 137, 146, 147, 161, 162, 163, 169, 171, 173, 174, 177, 178, 180, 182, 188, 195, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 430, 431, 446, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 558, 721, 769, 817, 823, 824, 829, 844, 848, 865], "organ": [21, 230, 240, 696, 697, 726, 816, 832], "organiz": 132, "orient": [570, 864], "orig": 697, "orig_dst_id": [696, 782], "orig_eid": 697, "orig_eids_0": 697, "orig_id": [353, 541, 696, 697, 741, 782], "orig_nid": 697, "orig_nids_0": 697, "orig_node_emb": [697, 782, 848], "orig_src_id": [696, 782], "orig_type_edge_id": 782, "orig_type_node_id": 782, "origianl": 697, "origin": [3, 21, 26, 56, 64, 70, 71, 100, 108, 116, 122, 125, 130, 135, 136, 142, 143, 146, 151, 152, 153, 169, 183, 186, 189, 190, 192, 208, 209, 220, 221, 231, 234, 240, 241, 242, 246, 249, 289, 293, 305, 309, 310, 320, 321, 324, 328, 335, 338, 339, 340, 344, 352, 353, 391, 404, 415, 426, 427, 429, 431, 444, 476, 540, 541, 556, 557, 561, 562, 563, 564, 565, 566, 572, 573, 580, 583, 585, 587, 590, 591, 592, 603, 634, 635, 637, 638, 639, 640, 642, 643, 649, 650, 660, 670, 671, 678, 679, 680, 688, 696, 697, 703, 705, 708, 718, 725, 728, 729, 730, 775, 788, 790, 799, 800, 819, 821, 823, 837, 839, 840, 841, 844, 848, 853, 854, 856, 865, 868], "original_column_node_id": [300, 303, 308, 310, 311, 828, 831], "original_edge_id": [303, 308, 310, 311, 828, 831], "original_row_node_id": [300, 303, 308, 310, 311, 321, 828, 831], "origini": 561, "ot": 289, "otc": 145, "other": [0, 1, 9, 21, 68, 120, 121, 180, 182, 186, 207, 210, 236, 240, 243, 245, 293, 301, 305, 309, 328, 355, 357, 383, 395, 424, 428, 430, 475, 558, 640, 658, 659, 664, 683, 685, 691, 692, 693, 694, 696, 697, 698, 700, 701, 704, 705, 709, 713, 714, 715, 727, 731, 732, 778, 817, 819, 821, 823, 824, 828, 830, 831, 833, 836, 837, 838, 839, 848, 852, 854, 855, 858, 861, 865, 870], "other_typ": 558, "otherwis": [4, 6, 31, 36, 37, 44, 51, 54, 56, 62, 63, 64, 71, 104, 108, 118, 165, 183, 184, 207, 210, 214, 216, 229, 230, 232, 239, 241, 242, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 297, 303, 308, 310, 315, 316, 317, 329, 335, 339, 340, 342, 352, 415, 429, 431, 445, 447, 451, 476, 540, 541, 551, 552, 560, 562, 563, 564, 565, 570, 594, 597, 598, 599, 601, 603, 610, 612, 613, 614, 615, 626, 635, 641, 649, 661, 681, 682, 688, 694, 714, 735, 775, 819, 821, 854, 870, 871], "ouptut": 865, "our": [3, 9, 21, 436, 558, 715, 716, 722, 731, 732, 816, 821, 824, 831, 848, 852, 853, 854, 855], "ourselv": 861, "out": [1, 4, 13, 14, 22, 62, 63, 70, 87, 130, 132, 133, 135, 136, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 197, 205, 214, 216, 217, 241, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 340, 389, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 420, 421, 422, 423, 440, 443, 444, 445, 446, 447, 449, 450, 451, 540, 563, 564, 565, 566, 575, 608, 619, 687, 696, 697, 709, 722, 726, 753, 774, 795, 806, 816, 817, 818, 819, 820, 823, 824, 837, 852, 853, 854, 855, 864], "out1": 9, "out2": 9, "out3": 9, "out4": 9, "out_1": 9, "out_2": 9, "out_3": 9, "out_class": [728, 768, 812], "out_degre": [4, 60, 445, 683, 685, 837], "out_dim": [709, 753, 795, 853, 855], "out_dir": 697, "out_dst": [709, 753, 795], "out_edg": 61, "out_edge_feat": 402, "out_feat": [386, 392, 393, 394, 395, 396, 398, 399, 400, 401, 404, 405, 407, 408, 409, 411, 412, 414, 415, 418, 420, 421, 422, 423, 426, 428, 430, 452, 668, 714, 718, 719, 721, 724, 730, 732, 758, 760, 761, 762, 764, 770, 772, 800, 803, 804, 805, 808, 813, 815, 838, 852, 853, 854], "out_feat_1": 668, "out_feat_2": 668, "out_feat_nam": 668, "out_feats\u662f\u8f93\u51fa\u7279\u5f81\u7684\u7ef4\u5ea6": 772, "out_featur": [714, 719, 728, 731, 757, 758, 759, 760, 762, 768, 771, 799, 800, 802, 803, 805, 812, 814, 852, 858], "out_field": 865, "out_indx": 864, "out_nod": 864, "out_node_feat": 402, "out_path": [4, 240, 848, 849], "out_proj": 820, "out_siz": [386, 388, 397, 403, 419, 716, 721, 722, 818, 819, 820, 821, 823, 829, 871], "out_src": [709, 753, 795], "out_subgraph": [335, 340, 715], "out_test_mask": [197, 205], "out_valid_mask": [197, 205], "outbound": [241, 242, 540, 560, 562, 563, 564, 565, 566, 635], "outcom": 540, "outdat": [688, 735, 775], "outer": [716, 802], "outermost": [305, 308, 315, 316], "outfil": 782, "outgo": [88, 357, 853], "outmultiedgedataview": [72, 642, 705, 749, 790], "output": [4, 5, 9, 21, 53, 54, 73, 133, 144, 174, 208, 209, 210, 214, 216, 217, 240, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 305, 325, 335, 339, 340, 341, 355, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 452, 456, 458, 459, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 563, 564, 565, 566, 569, 600, 616, 620, 685, 695, 697, 708, 709, 712, 714, 716, 718, 719, 724, 726, 730, 766, 782, 802, 804, 810, 823, 828, 830, 831, 838, 848, 852, 853, 854, 855, 864, 865], "output_d": 424, "output_devic": [49, 50, 76, 106, 208, 209, 214, 216, 217, 219, 246, 247, 335, 339, 340, 476, 477, 540, 563, 564, 565, 566, 870], "output_feat": 413, "output_featur": 853, "output_label": [713, 719, 757, 762, 799, 805], "output_nod": [210, 214, 215, 216, 219, 757, 759, 762, 802, 805, 849], "output_predict": [713, 719, 757, 762, 799, 805], "output_s": 325, "outsid": [687, 694, 697, 708, 793, 823], "over": [3, 7, 79, 82, 164, 166, 177, 178, 179, 209, 210, 211, 212, 213, 245, 291, 293, 301, 357, 397, 419, 435, 437, 442, 475, 551, 552, 572, 573, 574, 575, 645, 646, 671, 689, 714, 715, 716, 717, 719, 720, 730, 799, 802, 817, 819, 828, 831, 838, 840, 844, 845, 848, 852, 855, 858, 861, 864, 865], "overal": [432, 697, 730, 829, 839, 844, 855, 861, 865, 871], "overfit": 853, "overhead": [22, 70, 341, 395, 432, 434, 569, 720, 844, 845], "overlap": [291, 295, 303, 720], "overlap_fetch": 295, "overlap_graph_fetch": 291, "overrid": [210, 213, 218, 717], "overridden": [313, 426, 427, 428, 429, 430, 431], "overview": [701, 854, 871], "overwit": 156, "overwrit": [200, 201], "overwritten": 817, "own": [21, 156, 341, 415, 432, 434, 567, 569, 685, 694, 695, 696, 697, 709, 713, 714, 715, 717, 719, 732, 823, 824, 827, 831, 836, 839, 842, 845, 848, 849, 853, 855, 861, 865], "owner": 697, "ownership": 697, "p": [120, 147, 161, 174, 214, 216, 219, 389, 424, 425, 433, 434, 453, 454, 547, 560, 562, 565, 654, 655, 656, 696, 697, 757, 782, 799, 848, 858, 861, 865], "p1d": 683, "p3": 14, "p3d": 683, "p_": [389, 391], "p_n": [731, 771, 814], "p_p": 174, "pack": 561, "packag": [0, 2, 3, 6, 11, 21, 148, 394, 395, 396, 455, 686, 705, 722, 806, 816, 817, 818, 819, 820, 821, 823, 824, 838, 844, 845, 848, 852, 855, 858], "package\ub97c": 806, "packed_func": 22, "packed_func_ext": 22, "packedfunc": 22, "pad": [342, 445, 446, 448, 449, 450, 560, 561, 562, 570, 633, 645, 646, 661, 669, 683, 820, 829, 859, 865, 868, 871], "pad_id": 865, "pad_num_nod": 683, "pad_sequ": [445, 683], "pad_word": [184, 858], "padding_idx": 865, "page": [10, 21, 67, 89, 112, 134, 149, 155, 185, 187, 193, 713, 817, 818, 819, 820, 821, 828, 829, 831], "pagerank": [390, 664, 668, 819], "pai": 722, "pair": [6, 32, 48, 66, 178, 183, 220, 226, 227, 240, 241, 242, 293, 297, 301, 303, 308, 310, 315, 316, 319, 320, 321, 333, 341, 344, 383, 385, 387, 389, 392, 400, 401, 402, 404, 405, 407, 408, 410, 411, 412, 415, 418, 421, 432, 434, 449, 450, 451, 452, 548, 549, 559, 569, 570, 662, 683, 685, 695, 697, 700, 701, 704, 714, 717, 718, 730, 731, 786, 804, 820, 828, 839, 841, 849, 853, 854, 855, 865], "pair_graph": 220, "pairwis": [432, 433], "panda": [148, 168, 689, 701, 705, 786, 828, 831, 834, 835, 841], "pandas\uc640": 790, "papaer": 865, "paper": [137, 151, 152, 153, 154, 162, 165, 167, 171, 180, 182, 188, 214, 289, 297, 303, 309, 315, 318, 341, 391, 399, 415, 424, 425, 432, 434, 444, 474, 550, 560, 563, 569, 649, 665, 695, 697, 700, 719, 724, 781, 782, 816, 819, 821, 824, 836, 839, 840, 852, 853, 854, 855, 856, 858, 859, 861, 862, 864, 865, 866], "paper___cites___pap": 697, "papers100m": 289, "paradigm": [3, 693, 838, 858], "paral": 858, "parallel": [4, 48, 66, 122, 210, 213, 231, 241, 242, 293, 385, 443, 634, 643, 671, 693, 695, 697, 712, 739, 779, 820, 829, 844, 845, 848, 849, 855, 858, 859, 861, 862, 868, 870, 871], "param": [4, 6, 10, 32, 389, 390, 391, 392, 397, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 419, 421, 422, 423, 424, 425, 452, 453, 456], "paramet": [4, 6, 10, 14, 20, 26, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 594, 597, 598, 599, 600, 601, 603, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 633, 634, 635, 636, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 664, 665, 667, 668, 669, 671, 681, 682, 687, 691, 693, 694, 708, 709, 710, 714, 717, 719, 721, 722, 723, 724, 725, 726, 728, 730, 731, 732, 734, 737, 739, 740, 753, 757, 758, 760, 762, 768, 770, 771, 772, 774, 777, 779, 780, 795, 799, 800, 803, 805, 806, 808, 812, 813, 814, 815, 817, 818, 819, 820, 821, 823, 828, 829, 831, 836, 838, 839, 840, 844, 848, 849, 852, 853, 854, 855, 858, 861, 865, 870, 871], "parameter": [141, 428, 430, 728, 812, 853, 854, 861], "parametr": [861, 866, 868], "parent": [210, 213, 234, 246, 476, 864], "parit": [353, 354], "paritt": 455, "parmeti": [695, 697], "parmetis\uac00": 782, "parmetis\ub290": 782, "parmetis\ub294": 782, "parmetis\uc5d0": 782, "parmetis\uc758": 782, "parquet": 697, "pars": [148, 689, 697, 701, 705, 841, 858, 859, 868], "parser": 148, "part": [4, 21, 22, 135, 151, 152, 197, 205, 240, 297, 439, 440, 449, 563, 685, 691, 694, 697, 701, 707, 710, 714, 725, 782, 820, 834, 835, 838, 865], "part0": [240, 696, 697, 741, 782], "part1": [240, 696, 697, 741, 782], "part1_end": 240, "part1_start": 240, "part2": 697, "part2_end": 240, "part2_start": 240, "part_config": [4, 231, 236, 237, 238, 693, 694, 695, 698, 739, 740, 742, 779, 780, 781, 783, 848], "part_data": [696, 697], "part_graph": 240, "part_id": [4, 236, 237, 238, 353, 696, 697, 782], "part_method": [4, 240], "part_polici": [4, 695, 781], "part_ratio": [197, 205], "partial": [4, 714, 828, 853, 855, 861, 865], "particip": [210, 213], "particular": [4, 21, 90, 107, 149, 185, 197, 221, 240, 247, 416, 427, 571, 608, 619, 695, 705, 716, 823, 839, 840], "particularli": [245, 475, 701, 705, 821], "partid": 4, "partid2eid": 4, "partid2nid": 4, "partit": [13, 209, 231, 232, 236, 237, 238, 239, 240, 353, 354, 416, 455, 541, 556, 681, 687, 693, 694, 698, 782, 854, 870], "partiti": 865, "partitioend": [353, 541], "partition_algo": 697, "partition_book": [4, 232, 239, 696, 697], "partition_graph": [4, 694, 696, 697, 741, 780, 782, 848, 849], "partitionpolici": [4, 695, 781], "partmetis\ub97c": 782, "partx": [696, 697], "pascal": [9, 708, 793], "pass": [0, 1, 4, 5, 13, 22, 73, 91, 92, 121, 122, 130, 131, 178, 179, 208, 209, 210, 213, 214, 215, 220, 240, 246, 294, 297, 298, 313, 315, 316, 317, 335, 339, 340, 353, 354, 389, 390, 391, 392, 395, 401, 402, 404, 405, 407, 408, 409, 412, 415, 416, 418, 419, 422, 423, 425, 426, 427, 428, 429, 430, 431, 433, 452, 458, 476, 540, 563, 567, 635, 672, 673, 674, 675, 676, 677, 678, 679, 680, 687, 689, 691, 694, 696, 697, 703, 706, 713, 716, 718, 719, 723, 726, 727, 730, 732, 734, 737, 750, 774, 777, 791, 796, 806, 811, 815, 816, 831, 833, 834, 835, 839, 845, 848, 849, 852, 855, 856, 859, 861, 866, 868], "passwordless": [698, 783, 848], "pass\ub97c": 806, "path": [4, 21, 156, 184, 199, 200, 201, 202, 203, 206, 209, 235, 236, 237, 238, 240, 309, 318, 338, 346, 352, 387, 449, 450, 561, 562, 567, 570, 649, 683, 688, 689, 692, 696, 697, 698, 735, 738, 775, 778, 782, 833, 834, 835, 844, 848, 861], "path_data": [449, 683, 685], "path_encod": [449, 685], "path_graph": [701, 745, 786], "path_len": 683, "pathencod": 685, "pathlik": 4, "patit": 695, "pattern": [22, 120, 174, 837, 855], "pb": [693, 739, 779], "pc": 387, "pcgnn_www2021": 162, "pci": 291, "pcie": 720, "pd": [183, 689, 834, 835, 841, 854], "pdf": [147, 161, 162, 174, 195, 430, 446, 721, 769, 865], "pe": [397, 661, 665, 820], "peek": 828, "peocess": [308, 316], "peopl": [145, 700, 730], "pep8": 21, "per": [4, 101, 102, 138, 166, 175, 186, 214, 215, 216, 219, 220, 226, 227, 240, 241, 246, 297, 303, 312, 315, 321, 332, 333, 335, 339, 340, 341, 395, 432, 434, 476, 478, 540, 563, 569, 651, 678, 679, 680, 690, 695, 697, 705, 710, 781, 796, 819, 828, 845, 855, 870], "percent": [854, 855], "percentag": [145, 861], "perfetch": 720, "perform": [0, 1, 4, 5, 9, 21, 22, 91, 92, 118, 119, 122, 130, 131, 141, 142, 143, 162, 168, 188, 189, 190, 207, 210, 217, 219, 221, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 300, 302, 303, 308, 309, 315, 316, 317, 318, 319, 353, 354, 357, 385, 389, 391, 392, 395, 401, 404, 405, 407, 408, 409, 412, 415, 422, 426, 427, 428, 429, 430, 431, 443, 444, 445, 447, 449, 450, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 551, 559, 563, 564, 565, 566, 572, 573, 603, 645, 646, 668, 694, 695, 697, 699, 701, 703, 709, 712, 715, 716, 720, 722, 724, 725, 726, 728, 730, 731, 732, 819, 820, 823, 829, 830, 831, 838, 839, 844, 845, 848, 849, 852, 853, 854, 855, 858, 861, 862, 868, 870, 871], "perftools4": 845, "perhap": 855, "period": [297, 300, 313], "perman": 21, "permiss": [21, 829], "permut": [197, 205, 439, 440, 556, 839, 854], "permute_config": [98, 556], "persist": [4, 694], "persistent_work": 291, "person": [390, 649, 664, 668, 819, 853], "personen": 132, "persourceuniform": 228, "perspect": [852, 864, 865], "perturb": [142, 143, 189, 190], "perturb_ratio": [142, 143, 189, 190], "pgexplain": 428, "phase": [725, 858, 865], "phi": [404, 417, 500, 707, 731, 751, 757, 771, 792, 799, 814], "phi_e": 403, "phi_h": 403, "phi_x": 403, "photo": [25, 135, 136], "php": 848, "physic": [25, 151, 152, 697], "pi": [391, 451, 854], "pick": [6, 14, 214, 216, 219, 432, 433, 560, 562, 563, 565, 717, 839, 855], "pickl": 849, "pictur": 865, "piec": 838, "pin": [10, 67, 89, 112, 210, 290, 291, 297, 305, 310, 317, 318, 328, 562, 715, 829, 871], "pin_memori": [305, 310, 317, 716, 760, 803], "pin_memory_": [297, 317, 318, 715, 829, 871], "pin_prefetch": 210, "pinsag": 558, "pip": [690, 736, 776, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 844], "pipe": [720, 831], "pipelin": [3, 7, 291, 687, 695, 706, 712, 715, 717, 727, 730, 732, 827, 830, 831, 841, 849], "pixel": [146, 169], "pkl": [209, 692, 738, 778, 849], "place": [1, 21, 70, 116, 130, 210, 291, 297, 298, 317, 318, 328, 338, 344, 557, 563, 564, 565, 566, 634, 643, 703, 829, 844, 870, 871], "placehold": 221, "plai": [4, 27, 28, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 114, 115, 116, 117, 122, 130, 214, 216, 219, 246, 247, 334, 335, 339, 340, 385, 426, 427, 428, 429, 430, 431, 476, 477, 540, 553, 554, 555, 557, 642, 643, 650, 651, 656, 666, 667, 671, 681, 705, 749, 757, 790, 799, 819, 822], "plain": 832, "plan": 727, "platform": [145, 188], "player": [46, 74, 103, 656, 667], "pleas": [4, 9, 21, 22, 27, 28, 114, 115, 116, 117, 130, 148, 210, 214, 215, 216, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 293, 335, 338, 344, 352, 410, 421, 476, 477, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 554, 556, 557, 558, 565, 634, 635, 643, 644, 683, 685, 691, 696, 713, 714, 717, 719, 720, 721, 722, 730, 732, 821, 828, 829, 831, 834, 835, 838, 844, 845, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 871], "plenti": 837, "plot": [855, 858], "plot_tre": 858, "plt": [819, 854, 858, 861, 864], "plu": [131, 159, 287, 334, 709, 821, 824], "pm": [183, 854, 855], "pm_dglpart": [696, 782], "pm_pd": [183, 854], "pm_pd_batch": 183, "pm_pd_y": 854, "pma": 439, "pmpd": 854, "pmpd1": 854, "pn": 771, "pna": 419, "pnaconv": 397, "png": [836, 837, 838, 839, 840, 841, 844, 865], "po": [6, 179, 819, 834, 835, 854, 858, 864, 865], "point": [9, 14, 178, 179, 297, 303, 308, 315, 316, 341, 404, 432, 433, 434, 547, 569, 637, 638, 639, 708, 799, 821, 829, 854, 865], "point_idx": 6, "pointer": [22, 131, 287, 297, 327, 334, 613, 614, 701], "poisson": [303, 315], "polariz": [178, 179], "polici": [4, 695], "policy_str": 4, "polit": 166, "politifact": 159, "ponder": 865, "ponderli": 162, "pool": [6, 13, 391, 421, 426, 431, 435, 436, 437, 438, 439, 441, 442, 448, 456, 723, 724, 725, 763, 764, 765, 807, 808, 809, 858, 864, 865, 866, 868, 870], "pooler": 820, "poorli": 845, "pop": [428, 430, 431, 852, 853, 855, 858, 870], "popul": [21, 208, 325, 428, 430], "popular": [167, 197, 694, 705, 732, 817, 824, 836], "port": [698, 848, 849], "port1": [848, 849], "port2": [848, 849], "portion": [4, 10, 694, 830, 836], "pos_dst": 849, "pos_enc": [820, 865], "pos_enc_s": 820, "pos_encod": 448, "pos_featur": 849, "pos_graph": 849, "pos_linear": 820, "pos_pair_graph": 220, "pos_scor": [731, 760, 771, 803, 814, 839, 849], "pos_src": 849, "pos_u": 387, "pos_v": 387, "pose": 864, "posit": [6, 13, 120, 145, 150, 157, 158, 161, 163, 184, 191, 214, 220, 241, 242, 291, 297, 303, 307, 308, 315, 316, 319, 342, 383, 385, 387, 403, 406, 444, 446, 447, 448, 550, 560, 562, 563, 633, 661, 665, 669, 683, 689, 717, 803, 820, 823, 828, 849, 855, 858, 865], "positionwis": [439, 440], "positive_edge_dst": [139, 849], "positive_edge_src": [139, 849], "positive_graph": [760, 803], "possibl": [21, 137, 220, 226, 293, 309, 391, 548, 549, 559, 701, 708, 709, 715, 839, 840, 848, 853, 854, 861, 865], "possible_dest": 861, "possible_dests_emb": 861, "possibli": [300, 313, 730, 829], "post": [21, 24, 163, 181, 865], "post0": [828, 829, 831, 834, 835], "post_func": 865, "post_pair": 865, "postiv": 803, "potenti": [309, 317, 318, 714, 840, 844, 853], "power": [10, 22, 165, 410, 428, 430, 433, 448, 547, 658, 697, 717, 757, 799, 819, 823, 836, 840, 859, 868], "ppa": [690, 736, 776], "ppi": [25, 824], "ppidata": [691, 737, 777], "ppidataset": 25, "ppr": [13, 668], "pq": 183, "pr": 21, "practic": [302, 389, 399, 401, 404, 405, 407, 408, 409, 412, 415, 422, 474, 687, 711, 730, 820, 828, 839, 841, 846, 854, 855, 870], "practice\ub4e4\uc744": 774, "practis": [389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 709, 845], "pramet": 424, "pre": [4, 23, 125, 173, 249, 303, 308, 315, 316, 388, 411, 415, 417, 420, 424, 425, 819, 820, 828, 829, 831, 834, 835, 861, 865], "pre_func": 865, "pre_kv": 865, "pre_pair": 865, "pre_q": 865, "precis": [9, 637, 638, 639, 706, 708, 791, 793, 839, 855], "precomput": 397, "precond": [424, 425], "pred": [4, 430, 714, 728, 731, 758, 760, 768, 771, 800, 803, 812, 814, 818, 819, 836, 838, 839, 840, 854, 858, 870], "predction": 198, "predecessor": [93, 107, 339, 341, 345, 432, 434, 474, 569, 799], "predefin": [150, 154, 176, 732], "predic": [53, 54, 854, 865], "predict": [13, 132, 133, 137, 138, 139, 140, 144, 150, 154, 157, 158, 162, 170, 171, 173, 176, 177, 178, 179, 180, 188, 191, 197, 211, 214, 216, 220, 243, 245, 303, 305, 308, 315, 316, 390, 391, 426, 427, 428, 430, 431, 438, 443, 452, 475, 690, 694, 712, 713, 714, 719, 727, 730, 732, 736, 760, 776, 777, 803, 818, 819, 820, 827, 829, 831, 836, 838, 840, 842, 848, 850, 854, 855, 858, 861, 864], "predict_categori": [132, 133, 144, 170, 853], "prediction_": 853, "prediction\u6570\u636e\u96c6": 736, "prediction\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 736, "predictor": [443, 452, 714, 717, 728, 758, 760, 800, 803, 820, 828, 849], "prefer": [168, 186, 704, 838], "prefetch": [13, 208, 209, 214, 216, 217, 220, 221, 222, 223, 224, 225, 720], "prefetch_edata": [209, 217], "prefetch_edge_feat": [208, 214, 216, 219], "prefetch_label": [208, 214, 216, 220], "prefetch_ndata": [209, 217], "prefetch_node_feat": [208, 214, 216, 219], "prefix": [635, 696, 782], "preform": [297, 303, 308, 315, 316, 721], "prepar": [293, 684, 685, 697, 727, 730, 828, 831, 841, 848, 865], "prepare_for_train": 861, "prepare_train": 861, "prepend": 68, "preprocess": [132, 133, 144, 170, 179, 184, 693, 696, 818, 819, 821, 827, 828, 829, 831, 834, 835, 839, 871], "prerequisit": 696, "presenc": [149, 185], "present": [297, 310, 427, 429, 820, 853, 855, 864], "preserv": [95, 96, 127, 232, 234, 239, 241, 242, 553, 555, 563, 564, 565, 566, 658, 659, 664, 823, 852, 858], "presort": [417, 420], "pretrain": [159, 184, 817], "pretrained_emb": [184, 858], "prev_proj": 854, "prevent": [122, 145, 416, 444, 447, 651, 713, 722, 817, 853], "previou": [186, 290, 303, 389, 717, 720, 728, 730, 731, 814, 829, 830, 839, 841, 848, 854, 865, 871], "previous": [719, 721, 728], "price": 22, "primari": [292, 685], "prime": [402, 405], "primit": [3, 395, 396, 861], "princip": [419, 791], "principl": [701, 718], "print": [4, 6, 20, 21, 22, 42, 53, 54, 70, 108, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 219, 246, 293, 297, 300, 310, 311, 319, 320, 322, 323, 327, 333, 338, 384, 385, 386, 388, 390, 406, 409, 411, 415, 432, 434, 445, 449, 450, 451, 477, 478, 556, 570, 571, 640, 648, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 671, 687, 689, 690, 694, 696, 697, 704, 719, 722, 728, 731, 732, 736, 740, 748, 757, 762, 768, 771, 772, 774, 776, 780, 789, 799, 805, 806, 812, 814, 815, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 848, 852, 853, 854, 855, 858, 861, 865, 870, 871], "print_everi": [132, 133, 144, 170], "printcalcul": 22, "prior": [859, 868], "prioriti": [240, 567, 817], "prob": [214, 216, 219, 241, 242, 428, 430, 560, 562, 563, 564, 861, 865], "prob_nam": [303, 308, 315, 316], "probabl": [147, 174, 214, 216, 217, 219, 241, 242, 297, 303, 308, 315, 316, 390, 428, 430, 444, 446, 447, 550, 558, 560, 562, 563, 564, 565, 654, 655, 656, 664, 668, 717, 732, 799, 803, 828, 839, 854, 855, 861, 862, 864, 865, 868], "problem": [293, 722, 836, 839, 853, 854, 859, 865, 868, 871], "probs_nam": 297, "proc_id": 293, "proce": [705, 730, 852, 854, 865], "procedur": [6, 428, 430, 691, 865], "process": [0, 2, 4, 6, 8, 22, 41, 134, 137, 138, 139, 140, 142, 143, 149, 155, 156, 171, 173, 180, 182, 185, 187, 188, 189, 190, 193, 210, 213, 232, 235, 239, 291, 293, 301, 303, 305, 308, 315, 316, 355, 356, 387, 390, 409, 422, 423, 426, 427, 428, 430, 443, 455, 457, 577, 685, 686, 687, 689, 690, 692, 693, 694, 695, 696, 697, 698, 712, 715, 720, 730, 734, 737, 774, 777, 778, 819, 820, 827, 840, 841, 845, 848, 849, 853, 854, 855, 858, 861, 865], "prod_": 9, "produc": [230, 594, 597, 598, 599, 601, 697, 725, 839, 852, 855], "product": [4, 118, 135, 136, 137, 161, 163, 289, 387, 401, 415, 452, 594, 619, 700, 715, 721, 728, 731, 742, 783, 801, 814, 820, 821, 829, 839, 848, 849, 855, 864, 865], "product\ub85c": 803, "product\ub97c": [812, 814], "profil": [159, 188], "prog": 858, "program": [9, 21, 22, 293, 693, 699, 819, 841, 871], "progress": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 429, 431, 687, 774, 862, 868], "prohibit": 159, "proj": 865, "project": [22, 155, 187, 188, 193, 391, 444, 454, 714, 838, 852, 853, 854, 861], "project_initial_featur": 409, "prompt": 817, "prop": [425, 861], "prop_edg": 92, "prop_edges_yyi": 0, "prop_nod": [91, 858], "prop_nodes_topo": 858, "prop_nodes_xxx": 0, "prop_step": [424, 425], "propag": [13, 91, 92, 159, 390, 424, 425, 457, 543, 545, 546, 716, 732, 815, 819, 830, 854, 858], "propagagtion\uc744": 802, "propagate_attent": 865, "propagation\uc744": 815, "propagation\uc758": 802, "proper": [210, 845], "properli": [138, 139, 140], "properti": [4, 38, 39, 42, 43, 44, 45, 46, 51, 52, 59, 65, 66, 68, 74, 77, 78, 103, 104, 105, 120, 138, 160, 162, 177, 178, 179, 195, 197, 205, 292, 297, 299, 302, 304, 305, 309, 310, 312, 314, 438, 443, 576, 577, 578, 584, 586, 593, 595, 596, 606, 673, 674, 676, 678, 679, 690, 691, 702, 730, 736, 737, 776, 777, 820, 834, 835, 837, 840, 841, 853, 861, 864], "property_nam": 197, "property_valu": 205, "proport": [214, 216, 217, 219, 303, 307, 319, 696, 717], "propos": [162, 197, 205, 245, 388, 475, 633, 669, 836, 838, 853, 855, 858, 865], "protect": [694, 841], "protein": [25, 52, 165, 175, 391, 690, 736, 776, 840], "proteom": 861, "protest": 164, "prototyp": [22, 704], "proven": 820, "provid": [0, 3, 4, 5, 7, 8, 9, 21, 34, 35, 73, 80, 89, 93, 113, 131, 138, 139, 140, 165, 168, 178, 179, 205, 208, 209, 213, 214, 216, 219, 220, 287, 292, 293, 297, 300, 303, 308, 310, 313, 315, 316, 334, 341, 346, 385, 410, 415, 421, 428, 430, 432, 434, 455, 556, 567, 569, 574, 575, 603, 640, 668, 681, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 701, 704, 705, 711, 712, 714, 717, 718, 719, 722, 727, 728, 729, 730, 732, 823, 827, 828, 829, 831, 832, 836, 837, 838, 839, 840, 841, 844, 845, 848, 852, 853, 855, 858, 864, 865, 870, 871], "provis": [693, 698], "proxi": 133, "prune": [429, 431], "pseudo": [207, 385, 412], "pseudocod": 864, "psi": [451, 501, 707, 751, 792], "psi_": 501, "psutil": [828, 829, 831, 834, 835], "pt": [231, 318, 697, 834, 835, 844], "ptc": 165, "pth": 861, "pub": 162, "public": [22, 150, 176, 854], "publish": 824, "pubm": [25, 176, 691, 737, 777, 824], "pull": [0, 21, 92, 854, 858], "purchas": [135, 136, 137, 289, 758, 800, 821], "pure": [178, 179, 708, 724], "purl": 133, "purpos": [4, 240, 293, 301, 305, 565, 687, 689, 691, 705, 716, 728, 855], "push": [4, 21, 824], "put": [22, 240, 353, 354, 425, 446, 556, 685, 715, 719, 720, 834, 835, 836, 864, 870], "py": [21, 22, 199, 200, 697, 698, 730, 742, 770, 782, 783, 813, 817, 820, 826, 834, 835, 841, 842, 843, 844, 846, 847, 848, 850, 851, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 872, 873], "pyarrow": [697, 782], "pydant": 148, "pyg": [305, 824], "pygcn": 852, "pygraphviz": 858, "pylibcugraphop": [394, 395, 396], "pylint": 21, "pylintrc": 21, "pypa": 829, "pypi": 829, "pyplot": [819, 854, 858, 861, 864], "python": [0, 8, 21, 22, 34, 53, 92, 100, 203, 205, 206, 210, 394, 395, 396, 692, 693, 694, 697, 701, 704, 738, 778, 780, 786, 816, 817, 828, 829, 831, 834, 835, 844, 845, 853, 858, 861, 864, 865], "python3": [21, 698, 742, 783, 817, 820, 828, 829, 831, 834, 835, 848, 852, 855], "pythonpath": 21, "python\uc758": 778, "pytorch": [3, 4, 5, 6, 8, 9, 10, 13, 14, 21, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 186, 196, 210, 213, 214, 215, 216, 219, 235, 246, 247, 248, 249, 250, 263, 264, 265, 266, 287, 290, 293, 317, 318, 334, 335, 339, 340, 341, 351, 357, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 476, 477, 540, 547, 558, 569, 571, 634, 636, 640, 641, 642, 650, 656, 662, 667, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 683, 685, 691, 693, 694, 704, 718, 720, 722, 723, 724, 725, 727, 730, 732, 761, 763, 766, 770, 772, 779, 780, 800, 804, 805, 806, 807, 808, 813, 815, 816, 818, 819, 820, 821, 823, 824, 825, 827, 828, 829, 831, 834, 835, 836, 837, 838, 839, 840, 841, 844, 845, 848, 849, 852, 853, 854, 855, 856, 858, 859, 861, 862, 864, 865, 866, 868, 870, 871], "pytorchcaffe2": 845, "pytorch\u7684nn\u6a21\u5757": 763, "pytorch\u7684tensor\u7c7b": 748, "pytorch\ub294": 806, "pytorch\ub85c": 804, "pytorch\ub97c": 811, "pytorch\uc640": [777, 780], "pytorch\uc758": [789, 806, 809], "pytz": [828, 831, 834, 835], "pyyaml": 148, "py\u548claunch": 742, "py\u5e94\u8be5\u4f7f\u7528\u76f8\u540c\u7684ip\u914d\u7f6e\u6587\u4ef6": 742, "q": [147, 174, 180, 417, 438, 444, 560, 565, 820, 865], "q_": [388, 420], "q_i": 865, "q_j": 865, "q_p": 174, "q_proj": 820, "q_t": 438, "qi": [852, 854], "qingbiao": 750, "qingbiaoli": 750, "qipeng": [858, 865], "qk": [444, 820], "qkv": 865, "qm7b": [25, 177, 691, 737, 777], "qm7bdata": [691, 737, 777], "qm7bdataset": [688, 691, 735, 737, 775, 777], "qm7bdataset\u6e90\u4ee3\u7801": 737, "qm9": 178, "qm9dataset": 179, "qm9edg": 179, "qm9edgedataset": 178, "qquad": 854, "qualiti": [214, 865], "quan": [852, 865], "quantiti": [245, 475], "quantum": [177, 178, 179, 392, 418], "queri": [4, 13, 36, 37, 38, 45, 47, 48, 51, 54, 55, 56, 57, 58, 60, 61, 75, 77, 79, 80, 81, 82, 87, 88, 89, 90, 105, 107, 299, 305, 704, 820, 865], "question": [180, 854], "queue": [4, 235], "queue_siz": 4, "quick": [22, 704, 823], "quickli": 838, "quickstart": 822, "quit": [22, 692, 721, 855], "quot": [689, 837], "r": [14, 60, 87, 118, 119, 163, 178, 179, 317, 320, 388, 402, 405, 407, 408, 420, 433, 435, 436, 437, 442, 453, 454, 499, 502, 547, 650, 697, 707, 710, 721, 726, 751, 766, 792, 810, 819, 820, 821, 823, 861, 864, 865], "r0": [297, 695, 781], "r1": [297, 695, 781], "r2": [178, 179, 297, 695, 781], "r3": [297, 695, 781], "r_": [391, 649, 726, 766, 810, 823], "r_1": 649, "r_2": 649, "r_g": 547, "r_i": [395, 451], "r_j": [451, 649], "r_k": 391, "r_t": [214, 297, 438, 563], "radial": 391, "radiu": [243, 433, 547], "radius_proj": 854, "rais": [21, 48, 89, 109, 116, 131, 145, 177, 178, 179, 183, 287, 334, 342, 389, 401, 404, 405, 406, 407, 408, 409, 412, 415, 422, 633, 634, 635, 661, 669, 688, 695, 724, 725, 735, 764, 765, 775, 808, 809], "ram": [14, 309, 697], "rand": [6, 9, 128, 129, 214, 216, 219, 401, 402, 404, 405, 407, 408, 412, 413, 415, 418, 421, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 458, 645, 646, 701, 722, 745, 786, 806, 834, 835], "rand_bipartit": 549, "rand_graph": [9, 387, 402, 405, 413, 416, 435, 436, 437, 438, 439, 440, 441, 442, 443, 452, 453, 454, 457, 548, 648, 654, 655, 656, 667, 668, 722, 806], "randint": [388, 453, 454, 714, 727, 728, 731, 767, 768, 771, 811, 812, 814, 834, 835], "randn": [5, 47, 75, 118, 119, 121, 385, 386, 388, 411, 416, 427, 428, 429, 452, 453, 454, 609, 610, 616, 619, 627, 651, 667, 668, 670, 702, 703, 727, 728, 746, 747, 757, 767, 768, 787, 788, 799, 811, 812, 823, 837, 864], "random": [0, 6, 13, 142, 143, 161, 162, 163, 172, 173, 174, 183, 189, 190, 197, 198, 205, 207, 214, 217, 240, 245, 293, 297, 301, 303, 331, 383, 387, 401, 402, 405, 407, 408, 415, 418, 435, 436, 437, 438, 439, 440, 441, 442, 443, 475, 548, 549, 550, 558, 560, 561, 562, 563, 568, 665, 668, 697, 716, 721, 727, 728, 767, 768, 811, 812, 820, 834, 835, 839, 855, 870], "random_flip": [633, 669], "random_partit": 697, "random_se": [161, 162, 163, 197, 205, 297, 563], "random_st": [142, 143, 173, 189, 190, 207, 870], "random_walk": [561, 715], "random_walk_with_restart": 562, "randomli": [6, 142, 143, 147, 171, 174, 189, 190, 207, 209, 210, 213, 226, 227, 232, 239, 241, 242, 297, 453, 454, 563, 564, 565, 633, 648, 654, 655, 656, 663, 669, 697, 727, 799, 811, 827, 839], "randomst": [183, 207], "randomwalkp": 13, "rang": [4, 128, 129, 145, 164, 165, 168, 172, 186, 210, 213, 240, 298, 310, 317, 321, 332, 333, 353, 383, 426, 427, 428, 429, 430, 445, 450, 457, 541, 559, 565, 574, 575, 641, 683, 685, 691, 693, 695, 697, 721, 722, 728, 730, 731, 732, 737, 739, 768, 770, 771, 772, 777, 779, 806, 812, 813, 814, 815, 818, 819, 820, 828, 829, 831, 836, 838, 839, 840, 844, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "range_tensor": 302, "rangepartitionbook": 4, "rangl": [178, 179], "rank": [4, 232, 239, 355, 441, 664, 829, 838, 844, 870, 871], "rapid": 853, "rare": [226, 559], "rate": [4, 10, 14, 137, 161, 163, 173, 390, 394, 395, 396, 400, 405, 407, 408, 413, 417, 420, 421, 424, 425, 426, 427, 439, 440, 685, 728, 853], "rather": [142, 143, 189, 190, 821, 854, 861], "ratio": [138, 139, 140, 161, 163, 173, 197, 198, 205, 244, 297, 397, 419, 648], "raw": [0, 95, 96, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 246, 335, 339, 340, 448, 476, 540, 553, 554, 571, 668, 686, 687, 689, 691, 697, 729, 773, 774, 824, 827, 834, 835, 841], "raw_dir": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 687, 688, 691, 734, 735, 737, 774, 775, 777], "raw_dir\u4e0b\u7684self": 735, "raw_dir\u6307\u5b9a\u7684\u503c": 734, "raw_path": [156, 688, 691, 735, 737, 775, 777], "rb": [420, 849, 853], "rbf": 391, "rbf_kernel_mean": 391, "rbf_kernel_sc": 391, "rbrace": [186, 707, 751, 757, 792, 799], "rcmk": 556, "rcount": [852, 855], "rdf": [132, 133, 144, 170, 853], "rdfdata": [691, 737, 777], "rdfgraphdataset": [132, 133, 144, 170], "re": [6, 95, 96, 134, 137, 138, 139, 140, 148, 149, 155, 171, 173, 180, 182, 185, 187, 188, 193, 389, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 404, 406, 407, 408, 409, 410, 411, 412, 414, 415, 418, 420, 421, 422, 423, 424, 425, 554, 556, 691, 824, 829, 834, 835, 871], "reach": [712, 858, 865], "reachabl": 352, "read": [1, 3, 4, 5, 13, 21, 168, 183, 207, 294, 295, 296, 298, 309, 317, 385, 689, 694, 696, 697, 716, 816, 823, 824, 839, 841, 848, 849, 858, 865, 871], "read_async": [294, 298, 317], "read_async_num_stag": [294, 298, 317], "read_csv": 841, "reader": [852, 855], "readi": [713, 834, 835, 848, 861], "readm": [21, 210], "readonli": [116, 634], "readout": [440, 443, 551, 552, 840], "readout_edg": [347, 349, 552, 631], "readout_nod": [348, 350, 551, 632, 730, 770, 813], "real": [159, 162, 293, 683, 697, 782, 819, 820, 830, 837, 861, 865], "realiz": 20, "realli": [137, 171, 180, 182, 188, 320, 444, 445, 447, 449, 450], "reason": [21, 164, 166, 293, 694, 716], "reassign": 696, "recal": [14, 820, 830, 853, 855, 865], "receiv": [20, 53, 100, 221, 293, 390, 399, 415, 677, 678, 679, 680, 708, 838, 861], "recent": [162, 820, 865], "recip": [426, 427, 428, 429, 430, 431], "recogn": [725, 765, 809], "recognit": 174, "recommand": 27, "recommend": [5, 21, 22, 34, 73, 93, 94, 100, 113, 120, 125, 163, 173, 210, 249, 293, 398, 399, 400, 558, 641, 686, 687, 691, 692, 694, 696, 697, 700, 708, 709, 715, 728, 731, 817, 829, 833, 834, 835, 838, 839, 844, 845, 848, 852, 853, 854, 855, 858, 861, 864, 865, 870], "reconstruct": 853, "record": [56, 132, 145, 643, 819, 858, 861], "recov": [697, 840, 853], "recreat": 823, "recurr": [164, 166, 414, 438, 865, 866, 868], "recurs": [21, 353, 354, 817], "reddit": [25, 181, 722, 806, 824], "redditbinari": 165, "redditdata": [691, 737, 777], "redditdataset": [25, 722, 806], "redditmulti5k": 165, "redistribut": [816, 817], "reduc": [13, 20, 73, 91, 92, 93, 94, 100, 113, 245, 263, 264, 265, 266, 291, 309, 475, 501, 503, 542, 543, 544, 545, 546, 597, 598, 599, 601, 697, 707, 708, 710, 716, 722, 792, 793, 796, 806, 809, 829, 830, 838, 845, 852, 853, 855, 858, 865, 871], "reduce_func": [73, 91, 92, 93, 94, 100, 113, 263, 264, 265, 266, 542, 543, 544, 545, 546, 708, 710, 711, 752, 754, 755, 793, 796, 797, 838, 855, 858, 861, 865], "reduce_op": 501, "reduceop": [829, 871], "reducer\ub294": 796, "reduct": [9, 73, 91, 92, 93, 94, 100, 113, 214, 303, 503, 594, 597, 598, 599, 710, 726, 796, 810, 838, 858], "redund": [293, 559], "ref": [144, 741], "refer": [4, 9, 21, 22, 24, 44, 72, 104, 135, 136, 146, 147, 148, 151, 152, 153, 159, 162, 164, 166, 169, 174, 175, 177, 178, 179, 181, 183, 195, 210, 214, 215, 216, 240, 241, 293, 297, 319, 388, 420, 435, 436, 437, 438, 439, 441, 442, 446, 500, 501, 558, 564, 635, 683, 685, 691, 694, 701, 705, 713, 714, 715, 719, 720, 721, 731, 732, 758, 762, 800, 805, 816, 818, 819, 821, 828, 829, 831, 834, 835, 837, 838, 840, 845, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "refere": 865, "reflect": [22, 26, 70, 149, 185, 305, 310, 819], "refresh": [821, 831], "regard": [410, 415, 421, 479, 480, 481, 482, 622, 729, 823], "regardless": [4, 80, 117, 130, 234, 297, 310, 346, 352, 696, 697, 861], "regim": 716, "region": [23, 819], "regist": [22, 426, 427, 428, 429, 430, 431, 724], "register_object": 22, "registr": 723, "registri": 22, "regress": [2, 138, 177, 178, 179, 195, 211, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 691, 714, 725, 727, 731, 777, 811, 840], "regression\ub3c4": 815, "regular": [171, 388, 395, 402, 420, 428, 430, 459, 694, 853], "regularli": 870, "reiniti": [383, 387, 394, 395, 396, 398, 399, 400, 402, 405, 407, 408, 409, 412, 414, 415, 418, 421, 422, 423, 438, 452, 453, 454, 456, 724, 808, 855], "reject": [559, 649], "rel": [95, 96, 309, 428, 429, 431, 453, 454, 691, 697, 698, 714, 717, 719, 730, 732, 737, 758, 760, 762, 770, 772, 777, 800, 803, 805, 813, 815, 833, 834, 835], "rel_data_path": [742, 783], "rel_emb": [453, 454], "rel_graph": [726, 766, 810], "rel_nam": [428, 714, 717, 719, 728, 730, 731, 732, 758, 760, 762, 768, 770, 771, 772, 800, 803, 805, 812, 813, 814, 815], "rel_project": 454, "rel_typ": [25, 164, 166], "relabel": [4, 6, 122, 125, 240, 246, 249, 321, 335, 339, 340, 476, 540, 705, 721], "relabel_idx": 6, "relabel_nod": [49, 106, 157, 158, 191, 246, 335, 339, 340, 476, 540, 757, 799], "relat": [1, 13, 18, 21, 26, 52, 59, 113, 117, 122, 125, 126, 131, 132, 133, 144, 157, 158, 161, 162, 163, 170, 191, 203, 206, 220, 246, 249, 250, 287, 290, 297, 300, 310, 311, 313, 334, 335, 339, 340, 357, 385, 388, 395, 397, 419, 420, 451, 453, 454, 459, 476, 540, 548, 549, 649, 685, 689, 691, 697, 699, 700, 705, 710, 714, 725, 726, 790, 796, 823, 827, 855, 856, 865, 868], "relation_submodul": 385, "relationship": [150, 154, 176, 562, 714, 821, 839, 853, 854, 856, 868], "releas": [6, 817, 829], "relev": [683, 731], "relgraphconv": [395, 641, 853], "relgraphconvlay": [732, 772, 815], "reli": [722, 827, 848], "reliabl": 22, "reload": [132, 133, 135, 136, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 309, 687, 774], "relu": [121, 393, 398, 404, 410, 411, 413, 431, 447, 685, 693, 714, 716, 717, 718, 719, 721, 722, 724, 725, 730, 732, 739, 758, 759, 760, 761, 762, 764, 765, 770, 772, 779, 800, 802, 803, 804, 805, 808, 809, 813, 815, 818, 819, 820, 821, 823, 828, 829, 831, 836, 838, 839, 840, 848, 849, 852, 853, 854, 855, 870, 871], "relubackward0": 410, "remain": [100, 180, 181, 303, 308, 309, 554, 712, 721, 845, 855], "remaind": 865, "remap": 697, "remot": [21, 145, 177, 178, 179, 687, 688], "remov": [95, 96, 118, 119, 130, 135, 136, 151, 152, 153, 157, 168, 186, 192, 246, 289, 335, 339, 340, 540, 553, 554, 555, 561, 643, 651, 666, 718, 719, 834, 835, 839, 865], "remove_edg": [27, 28, 96, 114, 115, 554, 839], "remove_nod": [27, 28, 95, 114, 115, 553], "remove_self_loop": 117, "removeselfloop": 13, "renam": [127, 644], "render": 21, "reorder": [150, 154, 160, 176, 194, 417, 556, 565, 691, 777], "reorder_graph": [150, 154, 160, 176, 194, 417, 420, 691, 737, 777], "reparameter": 425, "repeat": [6, 128, 129, 142, 320, 321, 339, 340, 448, 732, 834, 835, 861, 864, 870], "repeat_interleav": [128, 129, 325, 717, 731, 760, 771, 803, 814], "repeatedli": [387, 731, 865], "replac": [21, 100, 131, 216, 219, 221, 226, 241, 242, 287, 297, 303, 308, 315, 316, 317, 318, 321, 332, 333, 334, 446, 479, 481, 484, 486, 505, 507, 511, 513, 519, 521, 525, 527, 548, 549, 559, 563, 564, 565, 633, 643, 669, 685, 694, 695, 697, 717, 718, 719, 740, 760, 780, 781, 803, 820, 823, 838, 839, 852, 864, 865, 866, 868], "replic": 236, "replica": [293, 829, 871], "repo": [21, 23, 688, 697, 735, 775, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 865], "report": [14, 855], "repositori": [21, 817, 824, 853], "repres": [3, 5, 21, 22, 26, 31, 32, 51, 61, 88, 118, 119, 126, 131, 134, 135, 136, 149, 151, 152, 153, 155, 159, 162, 173, 184, 185, 187, 188, 192, 193, 220, 250, 287, 289, 297, 300, 305, 310, 313, 321, 325, 329, 333, 334, 385, 391, 392, 398, 399, 400, 412, 415, 419, 421, 428, 429, 430, 431, 559, 565, 594, 641, 649, 689, 696, 700, 704, 708, 710, 714, 719, 721, 725, 726, 731, 821, 823, 830, 834, 835, 836, 838, 839, 840, 842, 853, 855, 858, 864], "represensit": 14, "represent": [0, 32, 62, 63, 131, 155, 187, 193, 214, 215, 216, 220, 287, 303, 305, 315, 327, 334, 383, 385, 387, 391, 392, 396, 400, 416, 421, 440, 443, 444, 445, 447, 449, 450, 452, 456, 550, 551, 552, 563, 579, 581, 582, 589, 645, 646, 665, 710, 712, 714, 716, 721, 725, 728, 730, 731, 732, 802, 803, 812, 813, 814, 820, 823, 830, 836, 838, 839, 840, 849, 852, 853, 854, 856, 858, 859, 861, 864, 865, 866, 868], "representation\ub4e4\uacfc": 812, "representation\ub4e4\ub85c": 812, "representation\ub4e4\ub85c\ubd80\ud130": 800, "representation\ub4e4\uc744": [799, 800, 802, 803, 813], "representation\ub4e4\uc758": [803, 812, 815], "representation\ub4e4\uc774": [799, 805], "representation\uc740": [809, 814], "representation\uc744": [798, 800, 802, 805, 812, 813], "representation\uc774\uace0": 813, "representation\uc774\ub2e4": 814, "reproduc": [293, 301], "repurpos": [138, 139, 140, 728], "reput": 145, "request": [21, 694, 828, 829, 831, 834, 835, 841], "requir": [4, 5, 9, 10, 21, 51, 55, 60, 61, 66, 87, 88, 90, 107, 122, 130, 148, 210, 216, 217, 220, 291, 292, 294, 298, 309, 317, 394, 395, 396, 397, 410, 411, 418, 421, 426, 427, 452, 456, 500, 501, 547, 556, 689, 693, 694, 695, 696, 697, 703, 704, 708, 712, 713, 719, 720, 722, 725, 809, 818, 819, 820, 821, 823, 828, 829, 830, 831, 833, 834, 835, 836, 839, 840, 848, 854, 858, 865, 871], "requires_grad": [9, 858], "requires_grad_": [9, 118, 119, 854], "research": [820, 853, 854, 855, 856, 858, 861, 865, 868], "reserv": 640, "reset": [388, 457, 724], "reset_paramet": [383, 384, 387, 388, 394, 395, 396, 398, 399, 400, 402, 405, 407, 408, 409, 412, 414, 415, 418, 421, 422, 423, 438, 444, 452, 453, 454, 456, 721, 724, 764, 808, 855], "reshap": [95, 96, 117, 298, 299, 301, 302, 317, 553, 554, 555, 651, 714, 820, 823, 834, 835, 864], "reshuffl": [4, 240, 353, 541, 782], "resid": [294, 298, 309, 317], "residu": [394, 397, 405, 407, 408, 409, 412, 413, 416, 418, 419, 820, 865], "resolv": 21, "resourc": [2, 309, 693, 712, 720, 829, 871], "respect": [5, 95, 96, 140, 147, 184, 214, 215, 216, 219, 240, 243, 303, 310, 314, 315, 383, 387, 403, 419, 427, 429, 500, 501, 553, 554, 556, 559, 571, 600, 620, 696, 697, 705, 708, 709, 718, 820, 833, 834, 835, 839, 844, 845, 854, 861, 865], "respons": [300, 303, 306, 308, 315, 316, 693, 694, 848], "rest": [6, 95, 96, 141, 240, 291, 295, 335, 339, 340, 540, 635, 687, 693, 725, 730, 822, 828, 839, 841], "restart": [562, 664, 668, 848], "restart_prob": [561, 562], "restaur": 163, "restrict": [44, 104, 118, 119, 126, 131, 249, 250, 287, 334, 845, 861], "resuffl": [353, 541], "result": [6, 9, 20, 21, 51, 56, 61, 70, 73, 88, 95, 96, 116, 118, 119, 122, 125, 126, 130, 197, 198, 209, 214, 226, 227, 240, 241, 242, 246, 247, 249, 250, 291, 294, 297, 298, 303, 310, 317, 328, 335, 338, 339, 340, 341, 344, 352, 355, 385, 391, 402, 422, 423, 452, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 548, 549, 551, 552, 553, 554, 556, 557, 560, 562, 563, 564, 565, 566, 570, 571, 572, 573, 594, 597, 598, 599, 608, 609, 616, 619, 627, 634, 635, 640, 641, 642, 643, 657, 658, 659, 664, 668, 677, 681, 694, 696, 697, 699, 700, 701, 703, 708, 710, 720, 721, 726, 730, 732, 793, 796, 819, 823, 824, 829, 838, 839, 841, 845, 848, 849, 854, 855, 865], "result_dict": [760, 803], "ret": [397, 419, 852, 855, 865], "retain": [56, 705, 790, 823], "retri": 200, "retriev": [22, 125, 126, 192, 234, 249, 250, 293, 384, 550, 571, 640, 657, 658, 659, 664, 665, 668, 673, 674, 675, 676, 730, 837, 839, 841, 854], "return": [0, 4, 5, 6, 10, 20, 22, 26, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 100, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 207, 209, 214, 217, 218, 219, 220, 221, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 288, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 320, 321, 325, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 651, 660, 662, 666, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 683, 689, 690, 691, 692, 694, 695, 697, 708, 709, 710, 713, 714, 716, 717, 718, 719, 721, 722, 725, 728, 730, 731, 732, 736, 737, 738, 740, 752, 753, 754, 757, 758, 759, 760, 761, 762, 765, 768, 770, 771, 772, 776, 777, 778, 780, 781, 793, 795, 796, 799, 800, 802, 803, 804, 805, 806, 809, 812, 813, 814, 815, 818, 819, 820, 821, 823, 828, 829, 831, 836, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "return_count": [111, 641, 643, 671], "return_eid": [560, 562], "return_eigv": 342, "return_label": 230, "return_map": [240, 697, 782, 848], "return_path": [449, 450, 570, 683], "return_uv": 48, "retweet": 159, "reuiqr": 452, "reus": [695, 714, 731, 831], "reusabl": 725, "rev": 782, "rev_plai": [427, 650], "rev_r": 650, "rev_rev_plai": 427, "reveal": [245, 475], "revers": [116, 123, 124, 130, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 170, 176, 191, 192, 220, 229, 230, 289, 300, 310, 313, 320, 324, 343, 416, 543, 545, 546, 556, 647, 650, 681, 689, 691, 697, 713, 714, 737, 777, 800, 837, 854], "reverse_edg": [150, 154, 176], "reverse_eid": [220, 758, 800], "reverse_etyp": [220, 758, 800], "reverse_etypes_map": [320, 324, 714], "reverse_id": [220, 758, 800], "reverse_typ": [220, 758, 800], "revert": 681, "review": [21, 135, 136, 137, 161, 162, 163, 194], "revis": 865, "revisit": 560, "reweight": 424, "rewond": 750, "rewrit": 718, "rfeat": 454, "rg": [433, 556, 557], "rgcn": [714, 716, 719, 728, 730, 731, 732, 758, 759, 760, 768, 770, 771, 772, 800, 802, 803, 805, 812, 813, 814, 815, 853], "rgcnlayer": 853, "rgcn\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u4e0e\u5b83\u975e\u5e38\u76f8\u4f3c": 762, "rgcn\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6": 772, "rgcn\u7684\u5b9e\u73b0": 762, "rh": 500, "rhel": 817, "rho": [425, 501, 707, 751, 757, 792, 799, 854], "rhs_data": [500, 501], "rhs_field": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "rhs_target": 500, "rich": 162, "richer": 864, "rid": 716, "right": [4, 5, 118, 150, 345, 390, 393, 396, 399, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 415, 417, 418, 421, 436, 437, 451, 456, 500, 501, 502, 633, 668, 669, 688, 694, 695, 707, 709, 713, 714, 719, 725, 730, 731, 751, 757, 758, 760, 762, 765, 771, 792, 799, 800, 803, 805, 809, 814, 823, 830, 838, 839, 853, 855, 858, 865], "rightarrow": [357, 854, 861], "riski": 145, "rng": 183, "rnn": [445, 683, 865, 866, 868], "robust": [197, 205], "roc_auc_scor": [828, 839, 849], "rocauc": 820, "rock": 858, "role": [182, 243, 426, 427, 428, 429, 430, 431], "roll": [297, 563], "rollout": [429, 431], "roman": 182, "room": 708, "root": [159, 217, 289, 406, 415, 449, 450, 570, 683, 817, 818, 819, 821, 829, 858], "rossmann": 402, "rotat": 179, "roughli": [191, 240, 391, 696, 848, 854], "round": [91, 92, 732, 861], "rout": [864, 866, 868], "routin": [22, 837], "routing_num": 864, "row": [4, 27, 31, 32, 118, 119, 131, 150, 154, 176, 287, 294, 296, 297, 298, 305, 310, 317, 321, 327, 334, 341, 384, 398, 399, 400, 444, 447, 457, 547, 551, 552, 569, 579, 581, 582, 587, 594, 597, 598, 599, 600, 601, 609, 612, 613, 614, 620, 622, 626, 645, 646, 667, 668, 694, 696, 702, 718, 782, 787, 804, 821, 823, 841, 848, 849, 854], "row1": 628, "row2": 628, "row_id": 721, "row_sort": 287, "rowfeatnorm": 13, "rpc": 4, "rr": [320, 750], "rst": [385, 721, 725, 726, 765, 766, 809, 810], "rtype": [389, 390, 391, 392, 397, 400, 404, 406, 409, 410, 412, 414, 415, 419, 421, 422, 423, 424, 425, 452, 453, 456, 594], "rule": [21, 220, 730, 854, 855, 861, 865], "run": [4, 10, 14, 21, 214, 231, 235, 240, 291, 297, 328, 424, 426, 427, 428, 429, 430, 431, 563, 565, 688, 693, 694, 697, 712, 720, 722, 726, 817, 820, 829, 844, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "run_epoch": 865, "runnabl": 21, "runtim": [0, 4, 14, 22, 156, 682, 694, 695, 697, 828, 831, 834, 835, 844, 845], "runtimeerror": 183, "runtimewarn": [852, 855], "russia": [164, 853], "rv": 22, "rvert": 451, "rvert_2": [724, 764, 808], "rw": [668, 848], "r\uc5d0": 796, "s1": 865, "s2": 438, "s3": [21, 23, 289, 346, 567, 691, 701, 737, 777, 786], "s_": 823, "s_c": 854, "s_i": 865, "s_j": [864, 865], "s_norm": 864, "sab": 440, "safe": [159, 705], "sage": [400, 693, 716, 717, 721, 728, 731, 732, 739, 768, 771, 772, 779, 812, 814, 815, 828, 829, 844, 848, 849, 871], "sageconv": [385, 400, 716, 717, 718, 721, 723, 724, 725, 732, 761, 763, 764, 765, 772, 804, 807, 808, 809, 815, 828, 829, 830, 831, 838, 839, 848, 849, 871], "sageconv\u7684\u6570\u5b66\u516c\u5f0f\u5982\u4e0b": 765, "sageconv\uc5d0\uc11c": 809, "sageconv\uc758": [808, 809], "sai": [21, 687, 712, 831], "said": [211, 212, 213], "same": [0, 3, 4, 5, 8, 9, 20, 28, 34, 35, 42, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 68, 70, 74, 87, 88, 91, 92, 93, 94, 100, 103, 108, 113, 116, 118, 119, 120, 121, 122, 130, 131, 134, 156, 161, 163, 181, 188, 197, 200, 205, 208, 209, 210, 211, 212, 214, 216, 219, 230, 232, 234, 239, 240, 241, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 296, 297, 298, 299, 302, 303, 308, 317, 318, 328, 329, 334, 335, 339, 340, 341, 344, 352, 353, 356, 385, 387, 389, 390, 397, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 415, 416, 418, 419, 421, 432, 433, 435, 437, 441, 442, 444, 451, 455, 456, 458, 476, 477, 540, 541, 547, 553, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 570, 572, 573, 574, 575, 577, 581, 582, 600, 620, 630, 634, 635, 640, 641, 643, 651, 666, 683, 688, 689, 691, 693, 694, 695, 696, 697, 700, 701, 702, 703, 704, 705, 710, 714, 715, 717, 719, 721, 722, 723, 725, 726, 728, 730, 731, 732, 747, 775, 788, 790, 796, 799, 802, 817, 820, 823, 829, 830, 834, 837, 838, 839, 841, 844, 848, 849, 852, 853, 854, 855, 858, 861, 865, 870, 871], "sampl": [3, 6, 7, 9, 13, 14, 122, 130, 139, 146, 147, 160, 165, 168, 169, 172, 173, 174, 175, 181, 184, 186, 194, 195, 198, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 231, 234, 235, 241, 242, 245, 292, 293, 297, 300, 301, 303, 307, 308, 310, 311, 312, 313, 315, 316, 319, 320, 324, 383, 387, 388, 428, 429, 430, 431, 438, 475, 500, 574, 575, 608, 619, 635, 687, 689, 693, 695, 716, 720, 721, 725, 730, 731, 740, 757, 780, 799, 800, 801, 820, 823, 827, 828, 829, 831, 833, 839, 840, 845, 853, 854, 858, 861, 862, 865, 868, 871], "sample_bia": [428, 430], "sample_block": [693, 694, 739, 740, 757, 779, 780, 799], "sample_fronti": [757, 799], "sample_in_subgraph": 300, "sample_layer_neighbor": [297, 303], "sample_log_prob": 861, "sample_neg": 307, "sample_negative_edges_uniform": 297, "sample_neighbor": [4, 214, 216, 241, 297, 300, 308, 313, 693, 694, 695, 713, 714, 715, 716, 717, 719, 720, 739, 740, 757, 779, 780, 781, 799, 801, 828, 829, 831, 871], "sample_neighbors_bias": [574, 575], "sample_point": 6, "sample_sparse_neighbor": 721, "sample_subgraph": [300, 313, 713, 721], "sample_uniform_neg": [308, 319, 717, 720, 828], "sampled_csc": [297, 300, 303, 308, 310, 311, 828, 831], "sampled_matric": 721, "sampled_matrix": 721, "sampled_subgraph": [300, 301, 303, 305, 308, 713, 721, 828, 831], "sampledsubgraph": [300, 305, 311, 313, 713], "sampledsubgraphimpl": [297, 303, 308, 310, 828, 831], "sampler": [7, 13, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 293, 300, 301, 303, 307, 308, 313, 315, 316, 394, 395, 396, 558, 559, 563, 693, 694, 698, 712, 715, 717, 721, 739, 740, 757, 758, 759, 760, 762, 779, 780, 799, 800, 801, 802, 803, 805, 827, 840, 844], "sampler1": 715, "sampler2": 715, "sampling_stag": 313, "samplinggraph": [292, 297, 304, 309, 714], "saniti": [131, 853], "satisfi": [53, 54, 417, 420, 577, 718, 828, 829, 831, 834, 835, 854, 865], "satisif": 120, "save": [0, 2, 4, 9, 23, 156, 206, 231, 240, 317, 318, 346, 567, 642, 657, 686, 687, 689, 696, 697, 701, 705, 708, 709, 710, 712, 722, 726, 728, 729, 732, 734, 738, 745, 774, 778, 782, 786, 796, 815, 818, 819, 821, 831, 834, 835, 836, 838, 839, 841, 844, 848, 861, 865], "save_dir": [156, 687, 734, 774], "save_graph": [172, 204, 346, 692, 701, 705, 738, 745, 749, 778, 786, 790, 837], "save_info": [692, 738, 778], "save_path": [138, 139, 140, 156, 687, 692, 734, 738, 774, 778], "save_tensor": 782, "sbm": [147, 174], "sbmdata": [691, 737, 777], "scalabl": [387, 448, 560, 668, 819, 824, 827, 846], "scalar": [6, 118, 119, 125, 214, 216, 219, 249, 302, 389, 401, 402, 405, 406, 407, 408, 415, 418, 421, 428, 430, 436, 594, 597, 598, 599, 601, 608, 611, 612, 613, 614, 617, 618, 626, 627, 700, 702, 729, 787, 803, 823, 839, 852, 854, 855, 864, 866, 868], "scalar_v": 823, "scale": [125, 134, 149, 185, 249, 345, 397, 415, 419, 451, 455, 474, 558, 697, 722, 806, 816, 820, 830, 839, 844, 845, 855, 865], "scale_const": 865, "scaled_exp": 865, "scaler": [397, 419, 610, 615, 722, 806], "scenario": [14, 22, 303, 308, 315, 316, 565, 695, 712, 730, 829], "scene": [405, 694], "schedul": [820, 827], "schema": [72, 234, 697, 705, 782], "scheme": [4, 47, 75, 95, 96, 117, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 246, 247, 335, 339, 340, 476, 477, 540, 553, 554, 555, 640, 654, 655, 662, 668, 681, 689, 696, 697, 702, 705, 746, 749, 787, 790, 837, 840, 841], "schnet": 392, "schwarzenegg": 858, "scienc": [151, 192, 289], "scientif": [150, 176, 854], "scientist\uac00": 791, "scikit": 844, "scipi": [9, 31, 118, 119, 126, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 556, 558, 701, 745, 786, 819, 823, 828, 829, 831, 834, 835, 839, 854], "scipy_fmt": [31, 574, 575], "scope": [70, 839, 852, 854], "score": [13, 383, 401, 402, 407, 408, 417, 436, 452, 453, 454, 456, 714, 728, 729, 731, 758, 760, 768, 771, 800, 803, 812, 814, 820, 823, 828, 831, 839, 849, 853, 855, 865], "score_neg": 849, "score_po": 849, "scorepredictor": [714, 758, 760, 800, 803], "scorer": [453, 454], "scrape": 191, "scratch": [142, 143, 189, 190, 383, 837, 852, 853, 855], "script": [4, 21, 693, 694, 697, 698, 817, 818, 819, 820, 865], "script_fold": [742, 783], "scriptobject": 297, "sddmm": [483, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 509, 510, 515, 516, 517, 518, 523, 524, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 608, 820, 823], "sdg\uc5d0\uc11c": 780, "seaborn": 864, "seal": 839, "seamlessli": [723, 827], "search": [123, 124, 229, 230, 341, 429, 431, 432, 434, 569, 731, 814, 816, 844, 855, 865], "search\uc640": 814, "second": [20, 130, 131, 210, 214, 215, 216, 219, 287, 297, 334, 342, 385, 458, 561, 562, 563, 569, 571, 616, 626, 635, 641, 697, 725, 730, 824, 830, 838, 840, 848, 849, 854, 855, 858, 861, 866, 868], "second_label": 299, "second_se": 299, "section": [14, 21, 210, 214, 215, 216, 681, 683, 685, 686, 690, 691, 693, 694, 696, 697, 701, 707, 712, 716, 718, 725, 727, 728, 731, 732, 812, 814, 836, 839, 844, 848, 849, 854, 855, 871], "sector": 166, "see": [1, 4, 9, 20, 21, 44, 61, 66, 88, 89, 91, 104, 130, 131, 146, 169, 209, 210, 211, 212, 214, 216, 217, 220, 222, 223, 224, 225, 230, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 294, 298, 317, 334, 341, 394, 395, 402, 417, 420, 426, 427, 436, 438, 443, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 574, 575, 579, 581, 582, 589, 612, 613, 614, 621, 623, 624, 625, 635, 641, 687, 689, 691, 694, 700, 701, 702, 704, 705, 708, 714, 716, 717, 718, 719, 727, 730, 732, 817, 819, 820, 828, 830, 837, 838, 839, 840, 841, 848, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "seed": [4, 142, 143, 161, 162, 163, 172, 173, 183, 189, 190, 197, 198, 205, 207, 208, 210, 213, 214, 216, 219, 242, 293, 297, 299, 300, 301, 302, 303, 305, 308, 309, 313, 315, 316, 319, 324, 439, 548, 549, 558, 562, 563, 564, 694, 695, 713, 714, 716, 717, 720, 721, 740, 780, 781, 820, 828, 831, 833, 834, 835, 848, 854, 870], "seed2_contribut": [297, 563], "seed_nod": [216, 299, 713, 757, 799], "seeds_follow": [299, 301], "seeds_label": 714, "seeds_lik": [299, 301], "seeds_pre_time_window": [300, 313], "seeds_timestamp": [300, 313], "seem": [391, 854, 855], "seen": [719, 732, 824, 852, 853, 854, 855, 865], "seg": [434, 503, 569], "segal": 858, "seglen": 503, "seglen_a": 502, "segment": [13, 122, 135, 136, 502, 503, 574, 575, 681], "segmentmm": 13, "segmentreducebackward": [436, 443], "select": [6, 21, 56, 142, 143, 147, 171, 174, 182, 189, 190, 209, 210, 217, 240, 241, 242, 297, 303, 308, 315, 316, 341, 397, 419, 428, 430, 432, 434, 441, 444, 445, 447, 558, 563, 564, 565, 566, 567, 569, 583, 643, 671, 712, 716, 722, 799, 817, 819, 823, 827, 830, 831, 861], "self": [26, 62, 63, 116, 117, 156, 162, 164, 165, 181, 218, 220, 226, 300, 310, 313, 341, 389, 395, 399, 401, 404, 405, 407, 408, 409, 412, 415, 416, 420, 422, 426, 427, 428, 429, 430, 431, 432, 433, 434, 443, 446, 458, 547, 555, 559, 569, 633, 651, 666, 669, 685, 687, 688, 689, 691, 692, 695, 696, 697, 700, 710, 713, 714, 716, 717, 718, 719, 721, 722, 724, 725, 726, 728, 730, 731, 732, 734, 735, 737, 738, 754, 757, 758, 759, 760, 761, 762, 764, 765, 766, 768, 770, 771, 772, 774, 775, 777, 778, 785, 796, 799, 800, 802, 803, 804, 805, 806, 808, 809, 810, 812, 813, 814, 815, 818, 819, 820, 821, 823, 828, 829, 831, 836, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "self_attn": 865, "self_loop": [165, 181, 389, 395, 401, 404, 405, 407, 408, 409, 412, 415, 420, 422, 426, 430, 431, 433, 547, 840, 870], "sell": [385, 700, 785], "seller": 700, "semant": [5, 9, 132, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 729, 858, 865], "semi": [140, 147, 389, 399, 415, 657, 697, 716, 782, 802, 836, 852, 854, 861], "send": [53, 73, 91, 94, 100, 113, 415, 417, 730, 855, 861, 865], "send_and_recv": [0, 91, 865], "send_sourc": 100, "sent": [415, 837, 838, 864, 865], "sentenc": [182, 184, 858, 859, 861, 865, 866, 868], "sentiment": [184, 858, 861], "separ": [4, 142, 143, 171, 180, 341, 392, 689, 696, 697, 720, 726, 730, 732, 817, 831, 834, 840, 845, 852], "septemb": 181, "sequenc": [54, 121, 131, 207, 287, 334, 351, 383, 387, 414, 436, 438, 653, 859, 861, 865, 868], "sequenti": [91, 92, 303, 315, 649, 717, 820, 828, 861], "seri": [705, 830, 831, 854], "serial": 449, "serv": [297, 685, 693, 718, 853], "server": [4, 21, 145, 177, 178, 179, 235, 687, 688, 693, 694, 695, 698, 849], "servic": [21, 159, 292, 693, 694], "set": [0, 1, 4, 6, 7, 10, 21, 23, 43, 44, 45, 46, 51, 68, 70, 72, 74, 77, 79, 82, 92, 101, 102, 103, 104, 105, 122, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 147, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 176, 181, 189, 190, 191, 194, 198, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 232, 239, 240, 243, 244, 246, 247, 291, 292, 293, 297, 303, 305, 309, 313, 314, 331, 334, 335, 339, 340, 341, 345, 352, 354, 357, 389, 393, 394, 395, 396, 397, 399, 401, 404, 405, 406, 407, 408, 409, 412, 415, 419, 420, 422, 424, 425, 428, 430, 432, 433, 434, 438, 439, 440, 444, 447, 451, 457, 474, 476, 477, 540, 547, 548, 549, 559, 562, 565, 568, 569, 635, 641, 643, 645, 646, 673, 674, 676, 678, 679, 680, 682, 684, 691, 693, 694, 696, 697, 700, 704, 705, 713, 714, 715, 716, 718, 719, 720, 722, 724, 725, 726, 728, 730, 731, 732, 777, 789, 790, 817, 818, 819, 822, 823, 827, 828, 829, 831, 833, 834, 835, 836, 838, 840, 841, 844, 853, 855, 858, 861, 864, 865, 870, 871], "set_batch_num_edg": [27, 28, 102, 114, 115, 116, 117, 130, 246, 247, 335, 338, 344, 352, 476, 477, 540, 554, 557, 634, 643, 644, 730, 770, 813], "set_batch_num_nod": [27, 28, 101, 114, 115, 116, 117, 130, 246, 247, 335, 338, 344, 352, 476, 477, 540, 554, 557, 634, 643, 644, 730, 770, 813], "set_bodi": 22, "set_default_backend": 817, "set_devic": [829, 870, 871], "set_e_initi": 861, "set_edge_featur": 305, "set_edgecolor": 819, "set_epoch": [213, 870], "set_grad_en": 865, "set_n_initi": [27, 28, 93, 113, 861], "set_node_featur": 305, "set_num_thread": 845, "set_postfix": [821, 831], "set_sharing_strategi": [829, 871], "set_start_method": 844, "set_titl": 864, "set_trans_dec": 439, "set_trans_enc": 440, "set_xlabel": 864, "settran": 440, "settransformerdecod": 440, "settransformerencod": 439, "setup": [4, 715, 844, 845, 864], "setuptool": 829, "seven": 854, "sever": [245, 292, 475, 687, 691, 702, 714, 719, 720, 725, 853, 865, 866, 868], "sg": [246, 335, 339, 340, 426, 427, 476, 540, 563, 564, 565, 566, 643, 671, 711, 713, 755, 757, 797, 799], "sg1": 837, "sg2": 837, "sgc": 422, "sgd": 694, "sh": [21, 817], "sha": [688, 735, 775], "sha1": [199, 200], "sha1_hash": [199, 200], "shall": [20, 681], "shallow": [64, 71, 219, 574, 575, 637, 638, 639], "shamelessli": 22, "shape": [4, 5, 6, 9, 12, 30, 47, 75, 95, 96, 117, 120, 126, 128, 129, 138, 143, 146, 147, 165, 168, 169, 174, 184, 186, 192, 195, 219, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 297, 299, 302, 325, 327, 329, 335, 339, 340, 341, 342, 345, 355, 356, 357, 383, 384, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 427, 428, 429, 430, 431, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 474, 475, 476, 477, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 550, 551, 552, 553, 554, 555, 560, 562, 569, 570, 572, 573, 574, 575, 577, 580, 583, 585, 587, 589, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 633, 640, 641, 645, 646, 651, 654, 655, 658, 659, 662, 664, 668, 670, 673, 674, 676, 678, 679, 680, 681, 683, 685, 689, 691, 694, 696, 697, 702, 705, 721, 722, 729, 730, 731, 732, 737, 740, 746, 749, 771, 772, 777, 780, 782, 787, 790, 794, 803, 806, 814, 815, 817, 818, 819, 820, 821, 823, 833, 834, 835, 836, 837, 838, 839, 840, 841, 848, 849, 852, 854, 858, 865], "shape\uc740": 813, "shaplei": [429, 431], "shapley_step": [429, 431], "shard": [4, 694, 780], "share": [4, 22, 26, 69, 116, 122, 130, 131, 247, 287, 292, 297, 312, 330, 334, 338, 341, 344, 355, 356, 385, 409, 432, 434, 455, 557, 565, 569, 574, 575, 634, 640, 643, 693, 696, 697, 698, 782, 817, 845, 848, 853, 854, 855, 865], "share_edata": [99, 557], "share_ndata": [99, 557], "share_weight": 408, "shared_memori": 4, "shared_memory_nam": [297, 312, 330], "sharemem": [14, 341, 432, 434, 569], "sharp": 855, "sharper": 855, "shchur": [135, 136, 151, 152, 153], "shelf": 855, "shell": 844, "shift": [197, 205, 392], "short": [388, 705, 710, 824, 838, 858], "shortcut": 182, "shortest": [243, 449, 450, 570, 683, 685], "shortest_dist": [449, 450, 683], "shortest_path": 683, "shot": [728, 812], "should": [4, 21, 42, 53, 54, 89, 91, 116, 125, 126, 128, 129, 130, 131, 146, 169, 173, 178, 179, 184, 195, 196, 210, 214, 216, 219, 220, 222, 223, 224, 225, 231, 241, 242, 249, 250, 287, 290, 293, 295, 297, 300, 302, 303, 305, 308, 310, 313, 315, 316, 317, 320, 321, 325, 332, 333, 334, 338, 343, 344, 389, 390, 394, 395, 396, 397, 398, 399, 400, 410, 411, 418, 419, 422, 426, 427, 428, 429, 430, 431, 434, 445, 446, 449, 451, 455, 458, 548, 549, 556, 557, 558, 562, 563, 564, 565, 566, 567, 611, 612, 613, 614, 616, 617, 626, 634, 640, 641, 643, 653, 658, 659, 664, 668, 689, 694, 696, 697, 698, 704, 713, 715, 716, 722, 725, 823, 829, 834, 835, 836, 837, 838, 839, 841, 845, 848, 853, 854, 861, 864, 870, 871], "show": [4, 9, 14, 118, 119, 220, 240, 245, 475, 683, 685, 686, 687, 688, 689, 690, 691, 692, 693, 695, 696, 697, 698, 712, 714, 716, 717, 722, 730, 731, 732, 818, 821, 828, 829, 830, 831, 832, 834, 835, 836, 839, 840, 848, 852, 853, 854, 855, 856, 858, 861, 865, 866, 868], "shown": [120, 691, 694, 704, 721, 725, 848, 849, 864, 865], "shuffl": [4, 168, 186, 207, 209, 210, 213, 214, 215, 216, 219, 220, 232, 239, 240, 293, 301, 383, 387, 426, 430, 431, 663, 690, 691, 693, 694, 697, 713, 714, 715, 716, 717, 719, 720, 730, 736, 737, 739, 740, 757, 758, 759, 760, 762, 770, 776, 777, 779, 780, 799, 800, 801, 802, 803, 805, 813, 820, 828, 829, 831, 834, 835, 844, 848, 849, 858, 870, 871], "shut": 291, "side": [22, 635, 830], "sigma": [413, 415, 417, 420, 421, 451, 725, 731, 765, 771, 809, 814, 818, 819, 821, 852, 853, 855, 865], "sigma_": 413, "sigma_k": 412, "sigmaleft": [855, 858], "sigmoid": [413, 823, 858, 861], "sign": [145, 633, 668, 669, 819], "sign_diffus": 819, "signal": [21, 174, 357, 819, 861], "signatur": [21, 53, 54, 855], "signdiffus": 13, "signifi": [297, 303, 308, 315, 316], "signific": [687, 715, 720, 827, 845, 855, 858], "significantli": [310, 722, 830], "silent": [389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 426, 427, 428, 429, 430, 431, 725], "sim": [731, 771, 814, 839], "similar": [4, 9, 26, 34, 53, 54, 100, 128, 129, 130, 161, 214, 221, 303, 315, 341, 383, 401, 432, 434, 452, 453, 454, 569, 635, 681, 690, 691, 693, 694, 695, 705, 714, 717, 718, 719, 721, 722, 731, 732, 749, 790, 817, 823, 824, 828, 829, 833, 836, 840, 848, 849, 853, 854, 855, 861, 864, 865, 870, 871], "similarli": [130, 221, 236, 240, 694, 696, 728, 821, 861, 866, 868], "simpl": [21, 22, 48, 118, 119, 345, 409, 474, 634, 643, 644, 671, 686, 692, 695, 722, 819, 829, 836, 840, 852, 854, 855, 856, 861, 864, 868], "simple_reduc": 100, "simplelosscomput": 865, "simplest": [719, 823], "simpli": [21, 22, 714, 717, 719, 720, 728, 730, 732, 836, 838, 839, 840, 852, 854, 855, 859, 861, 868], "simplic": [685, 697, 719, 834, 841, 855], "simplifi": [422, 718, 728, 819, 823, 852, 861, 865, 870], "simplifiedgat": 823, "simul": 854, "simultan": [291, 594, 597, 598, 599, 601, 693, 819, 858], "sin": 823, "sinc": [21, 27, 28, 56, 114, 115, 122, 145, 173, 182, 341, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 426, 427, 428, 429, 430, 431, 432, 434, 449, 450, 569, 574, 575, 635, 683, 687, 691, 705, 708, 715, 728, 730, 731, 818, 823, 828, 830, 839, 840, 841, 848, 852, 854, 855, 858, 861], "singl": [0, 4, 6, 22, 27, 28, 34, 35, 41, 43, 44, 46, 48, 51, 53, 55, 56, 57, 58, 60, 61, 73, 74, 77, 87, 88, 93, 94, 95, 96, 100, 101, 102, 103, 104, 128, 129, 131, 148, 164, 210, 211, 212, 214, 215, 216, 219, 220, 242, 297, 299, 302, 305, 309, 339, 340, 341, 343, 351, 355, 389, 412, 435, 436, 437, 438, 439, 440, 441, 442, 443, 455, 456, 478, 558, 562, 563, 564, 566, 638, 645, 646, 691, 693, 694, 697, 705, 708, 716, 718, 726, 727, 728, 730, 790, 802, 804, 824, 830, 831, 836, 840, 841, 848, 849, 854, 855, 858, 865, 872], "singular": [633, 669], "site": [184, 828, 831, 834, 835, 852, 855], "six": [828, 831, 834, 835], "size": [4, 5, 9, 20, 21, 22, 31, 62, 63, 120, 122, 128, 129, 135, 136, 138, 139, 146, 147, 151, 152, 153, 159, 160, 161, 162, 163, 168, 169, 174, 177, 181, 184, 192, 194, 196, 205, 210, 235, 293, 294, 296, 298, 301, 317, 325, 328, 383, 384, 386, 387, 388, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 551, 552, 609, 616, 627, 645, 646, 651, 670, 683, 695, 697, 705, 709, 712, 713, 720, 721, 730, 742, 753, 783, 790, 795, 813, 817, 823, 828, 829, 831, 834, 835, 838, 844, 845, 852, 853, 854, 855, 858, 859, 861, 865, 868, 870, 871], "skeleton": 861, "skip": [414, 691, 726, 777, 834, 835, 854, 855, 858], "sklearn": [383, 828, 831, 839, 848, 849], "skm": 849, "sleeplessai": 750, "slice": [4, 26, 210, 702, 718, 852, 855], "slightli": 214, "sln": 817, "slope": [394, 405, 407, 408], "slow": [22, 303, 716, 839, 854], "slower": [341, 432, 434, 569, 865], "sm_53": [9, 708, 793], "small": [4, 10, 14, 70, 123, 124, 126, 167, 226, 229, 230, 245, 250, 287, 341, 406, 413, 426, 427, 432, 434, 475, 559, 569, 647, 681, 693, 694, 697, 722, 727, 730, 830, 836, 839, 840, 841, 848, 854], "smaller": [4, 130, 297, 388, 391, 612, 613, 614, 626, 658, 659, 664, 817, 848, 853, 854], "smallest": [309, 342, 397, 432, 448, 566, 645, 646, 661], "smax": [594, 823], "smean": [594, 823], "smin": [594, 823], "smooth": [409, 425, 865], "sn": 864, "snap": [145, 175, 181], "snippet": [701, 704, 705, 729, 854], "so": [4, 5, 8, 9, 21, 22, 125, 130, 140, 186, 197, 226, 229, 230, 232, 239, 245, 249, 291, 294, 296, 297, 298, 317, 353, 395, 401, 475, 541, 556, 559, 563, 565, 574, 575, 637, 638, 639, 641, 689, 691, 692, 694, 695, 697, 713, 715, 719, 728, 732, 821, 831, 834, 835, 836, 837, 839, 840, 845, 848, 852, 853, 854, 855, 858, 861, 864, 870], "soc": 145, "social": [134, 167, 383, 700, 839], "socio": 166, "socket": 235, "soduku": 436, "softmax": [357, 389, 405, 417, 436, 438, 444, 447, 572, 573, 820, 838, 853, 855, 861, 864, 865], "softmax_edg": 573, "softmax_i": [401, 405, 407, 408], "softmax_nod": 572, "softwar": [816, 845], "solubl": 195, "solut": [22, 686, 715, 791, 848, 854], "solv": [293, 436, 816, 853, 854, 859, 868, 871], "some": [0, 4, 5, 9, 14, 21, 27, 28, 41, 43, 46, 48, 74, 93, 103, 113, 114, 115, 128, 129, 131, 134, 150, 168, 186, 236, 240, 247, 293, 334, 353, 354, 385, 389, 395, 401, 404, 405, 407, 408, 409, 412, 415, 422, 428, 430, 553, 556, 641, 685, 688, 689, 691, 695, 696, 697, 699, 701, 704, 705, 708, 709, 712, 713, 724, 731, 777, 817, 824, 830, 837, 839, 848, 855, 861, 864, 870], "some_complex_data": 689, "someth": 727, "sometim": [22, 709, 714, 727, 728, 730, 830, 838], "somewhat": 714, "song": 750, "soon": 697, "sophist": 730, "sort": [39, 51, 52, 78, 123, 168, 186, 197, 205, 241, 297, 388, 417, 420, 441, 556, 565, 574, 575, 577, 645, 646, 858, 865], "sort_csc_by_tag": 565, "sort_csr_by_tag": 565, "sortbi": [645, 646], "sorted_by_typ": 388, "sorted_feat": [645, 646], "sorted_idx": [645, 646], "sortpool": [645, 646], "sourc": [1, 4, 5, 6, 9, 10, 12, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 474, 475, 476, 477, 478, 483, 484, 485, 486, 487, 488, 489, 491, 493, 495, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 533, 535, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 602, 603, 604, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 675, 676, 677, 680, 681, 682, 689, 691, 696, 697, 699, 704, 705, 708, 717, 720, 724, 725, 777, 790, 799, 829, 830, 834, 837, 838, 839, 841, 853, 854, 855, 858, 865, 871], "source_typ": [705, 749, 790], "sourcetensor": 854, "sp": [701, 745, 786, 839, 854], "sp_": 823, "sp_add_v": 823, "sp_broadcast_v": [621, 623, 624, 625], "sp_mat": [126, 250], "space": [9, 332, 333, 451, 705, 853, 861, 865], "spaci": 159, "spam": 163, "span": 4, "spars": [4, 9, 10, 13, 31, 32, 41, 56, 62, 63, 89, 126, 131, 249, 250, 287, 334, 383, 387, 394, 426, 427, 455, 501, 558, 685, 694, 701, 712, 715, 745, 780, 786, 816, 819, 821, 839, 852, 856, 865, 868], "sparse2th": 854, "sparse_coo": [31, 62, 63], "sparse_coo_tensor": 854, "sparse_emb": 455, "sparse_matrix": 616, "sparse_optim": [694, 740, 780], "sparseadagrad": [4, 10, 455, 694, 740, 780], "sparseadam": [4, 10, 383, 387, 455], "sparseattn": 820, "sparsefloat": 854, "sparsematrix": [12, 30, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 721, 818, 823], "sparsemha": 820, "sparseneighborsampl": 721, "sparser": 865, "sparsetensor": [31, 62, 63, 854], "sparsif": [658, 659, 664], "sparsiti": [658, 659, 664, 820, 823], "spatial": [178, 179, 450, 451], "spatial_encod": [450, 451, 685], "spatialencod": 685, "spawn": [210, 293, 715, 870], "spd": 683, "speak": 854, "special": [184, 397, 700, 705, 714, 719, 722, 823, 827, 854, 858], "specif": [14, 21, 42, 59, 108, 125, 126, 131, 165, 235, 242, 246, 247, 249, 250, 287, 297, 305, 334, 335, 338, 339, 340, 384, 387, 427, 454, 476, 477, 540, 548, 549, 559, 563, 564, 565, 566, 635, 658, 659, 664, 668, 685, 691, 693, 702, 705, 716, 717, 720, 790, 800, 816, 832, 834, 835, 845, 854, 870], "specifi": [4, 5, 6, 27, 28, 31, 34, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 68, 72, 75, 77, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 113, 117, 122, 125, 131, 140, 146, 148, 156, 159, 161, 162, 163, 169, 173, 196, 200, 214, 216, 217, 219, 229, 230, 231, 240, 246, 249, 287, 294, 296, 297, 298, 303, 305, 309, 310, 312, 317, 318, 334, 339, 340, 341, 385, 388, 397, 401, 402, 405, 406, 407, 408, 418, 419, 421, 433, 451, 476, 541, 547, 553, 554, 556, 562, 567, 569, 574, 575, 610, 612, 613, 614, 626, 635, 640, 641, 643, 687, 689, 691, 694, 695, 697, 698, 704, 705, 708, 710, 714, 719, 725, 728, 731, 749, 774, 790, 796, 809, 817, 821, 823, 828, 829, 833, 834, 835, 837, 848, 858, 871], "specifici": 844, "spectral": [393, 398], "speed": [10, 21, 22, 303, 310, 315, 641, 704, 709, 715, 730, 816, 824, 839, 848, 858, 861, 864], "speedup": [697, 844, 855], "sphinx": [21, 842, 846, 850, 868, 872], "sphinx_gallery_thumbnail_path": [836, 837, 838, 839, 840, 841], "sphinx_rtd_them": 21, "sphx_glr_tutorials_blitz_1_introduct": [826, 842, 843], "sphx_glr_tutorials_blitz_2_dglgraph": [826, 842, 843], "sphx_glr_tutorials_blitz_3_message_pass": [826, 842, 843], "sphx_glr_tutorials_blitz_4_link_predict": [826, 842, 843], "sphx_glr_tutorials_blitz_5_graph_classif": [826, 842, 843], "sphx_glr_tutorials_blitz_6_load_data": [826, 842, 843], "sphx_glr_tutorials_cpu_argo_tutori": [826, 846, 847], "sphx_glr_tutorials_cpu_cpu_best_practis": [826, 846, 847], "sphx_glr_tutorials_dist_1_node_classif": [826, 850, 851], "sphx_glr_tutorials_dist_2_link_predict": [826, 850, 851], "sphx_glr_tutorials_models_1_gnn_1_gcn": [826, 856, 857, 868], "sphx_glr_tutorials_models_1_gnn_4_rgcn": [826, 856, 857, 868], "sphx_glr_tutorials_models_1_gnn_6_line_graph": [826, 856, 857, 868], "sphx_glr_tutorials_models_1_gnn_9_gat": [826, 856, 857, 868], "sphx_glr_tutorials_models_2_small_graph_3_tre": [826, 859, 860, 868], "sphx_glr_tutorials_models_3_generative_model_5_dgmg": [826, 862, 863, 868], "sphx_glr_tutorials_models_4_old_wines_2_capsul": [826, 866, 867, 868], "sphx_glr_tutorials_models_4_old_wines_7_transform": [826, 866, 867, 868], "sphx_glr_tutorials_multi_1_graph_classif": [826, 872, 873], "sphx_glr_tutorials_multi_2_node_classif": [826, 872, 873], "spilt": 192, "spinlock": 845, "splash": 858, "split": [13, 132, 133, 134, 137, 138, 139, 140, 144, 146, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 168, 169, 170, 171, 173, 176, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 205, 207, 209, 210, 213, 232, 239, 240, 293, 419, 541, 561, 640, 681, 687, 690, 691, 693, 695, 709, 710, 724, 725, 728, 732, 737, 774, 776, 777, 812, 831, 839, 848, 854, 870], "split_dataset": 870, "split_edg": [690, 736, 776], "split_idx": [690, 736, 776], "split_mask": 205, "split_ratio": [138, 139, 140], "splitted_idx": 848, "split\ub97c": 780, "spmat": [701, 745, 786], "spmatrix": [12, 31, 126, 250, 577, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 607, 608, 609, 611, 612, 616, 617, 618, 619, 620, 622, 627, 628, 629, 630, 818, 819, 820, 821, 823], "spmm": [479, 480, 481, 482, 484, 485, 486, 487, 505, 506, 507, 508, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 616], "spmv": 855, "spp": 392, "spring_layout": [819, 854], "sprod": 594, "spspmm": 616, "sq": 864, "sqrt": [4, 10, 341, 406, 415, 417, 432, 434, 444, 451, 569, 820, 855, 864, 865], "squar": [4, 10, 250, 406, 415, 821], "squash": 864, "squeez": [53, 54, 689, 691, 717, 737, 777, 828, 839, 853, 854], "squirrel": 185, "squre": 424, "src": [5, 22, 34, 62, 63, 68, 98, 100, 110, 220, 243, 252, 357, 392, 401, 402, 405, 407, 408, 412, 415, 421, 452, 453, 454, 556, 559, 612, 635, 636, 640, 675, 691, 701, 708, 709, 714, 717, 721, 722, 725, 726, 728, 731, 737, 745, 752, 753, 757, 758, 760, 765, 766, 768, 771, 777, 786, 793, 795, 799, 800, 803, 806, 809, 810, 812, 814, 820, 838, 839, 841, 853, 854, 855, 858, 861, 865], "src_dot_dst": 865, "src_emb": [861, 865], "src_embed_expand": 861, "src_field": 865, "src_id": [59, 126, 250, 287, 689, 696, 782], "src_id_field": 689, "src_input": [726, 766, 810], "src_label": 854, "src_list": 861, "src_mul_egd": 865, "src_node": [635, 799], "src_node_id": 696, "src_po": 865, "src_seq": 865, "src_timestamp": 321, "src_type": [131, 334, 427, 429, 725, 765, 809], "src_x": 714, "srcdata": [4, 9, 68, 104, 208, 221, 225, 575, 635, 693, 694, 695, 709, 718, 721, 725, 739, 740, 753, 757, 758, 760, 761, 762, 765, 779, 780, 781, 795, 799, 800, 803, 804, 805, 809, 831, 849], "srcdst": 51, "srcnode": [68, 103, 208, 225, 635, 718, 757, 761, 799, 804], "srctype": [26, 45, 68, 226, 227, 710, 713, 717, 754, 796], "srl": 853, "ssh": [698, 783], "ssl": 200, "ssp": 392, "sst": 858, "sstbatch": 858, "sstdata": [691, 737, 777], "sstdataset": 858, "stabil": [4, 10, 245, 413, 475, 855, 861, 865], "stabl": 397, "stack": [20, 73, 341, 385, 409, 445, 458, 589, 675, 683, 685, 690, 710, 720, 732, 736, 754, 776, 796, 818, 819, 820, 821, 836, 838, 853, 854, 855], "staff": [155, 187, 193], "stage": [7, 294, 298, 305, 313, 317, 709, 717, 720, 819, 827, 831, 834, 835, 849, 865], "stai": [581, 582, 722], "stand": [405, 561, 683, 823, 870], "standalon": [4, 824], "standard": [5, 7, 21, 138, 140, 397, 419, 451, 683, 685, 686, 687, 689, 691, 853, 858], "stanford": [145, 175, 181, 184, 836, 858], "star": [161, 163, 172, 837], "start": [6, 32, 114, 115, 125, 131, 164, 229, 230, 240, 249, 287, 305, 310, 327, 334, 339, 340, 387, 550, 558, 560, 562, 574, 575, 689, 694, 695, 696, 699, 704, 705, 712, 716, 722, 730, 817, 818, 819, 820, 821, 825, 828, 829, 831, 834, 835, 837, 848, 849, 853, 854, 858, 861, 864, 870], "start_epoch": [210, 213], "start_epoch_tim": 717, "start_idx": 6, "start_tim": 164, "state": [4, 10, 21, 142, 143, 166, 189, 190, 696, 712, 798, 824, 858, 861, 862, 864, 865, 868], "state_dict": [4, 844, 861], "statement": [718, 728, 823], "static": [22, 855, 864], "static_cast": 22, "staticmethod": [22, 864], "statist": [132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 696, 853, 854, 855], "statu": 56, "std": [22, 397, 419, 864], "steadili": [862, 868], "step": [4, 9, 10, 21, 92, 141, 142, 143, 156, 189, 190, 214, 240, 303, 308, 315, 316, 383, 387, 414, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 455, 457, 501, 505, 506, 507, 508, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 550, 556, 562, 563, 665, 693, 694, 695, 696, 707, 708, 712, 713, 714, 716, 717, 719, 721, 722, 724, 728, 730, 731, 732, 739, 740, 757, 758, 760, 762, 768, 770, 771, 772, 779, 780, 799, 800, 803, 805, 806, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 836, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 861, 865, 870, 871], "step_count": 861, "step_forward": 865, "step_siz": 820, "steplr": 820, "steven": 858, "still": [22, 70, 93, 108, 113, 232, 239, 689, 691, 714, 716, 717, 719, 722, 728, 730, 840, 865], "stochast": [3, 11, 183, 293, 301, 635, 706, 711, 714, 719, 725, 727, 730, 791, 797, 799, 800, 805, 809, 811, 813, 816, 830, 849, 861, 871], "stochastic_train": 714, "stochastical\ud558\uac8c": 798, "stochastictwolayergcn": [714, 719, 758, 759, 760, 762, 800, 802, 803, 805], "stochastictwolayerrgcn": [714, 719, 757, 758, 760, 762, 799, 800, 803, 805], "stop": [192, 560, 562, 728, 861], "stopping_mask": 192, "stopping\uc774\ub098": 812, "storag": [1, 4, 21, 116, 131, 211, 212, 287, 292, 295, 309, 334, 344, 556, 557, 689, 698, 704, 705, 824, 848], "store": [0, 1, 4, 7, 10, 31, 34, 53, 54, 59, 92, 95, 96, 100, 101, 102, 125, 126, 131, 134, 137, 138, 140, 141, 142, 143, 146, 149, 155, 156, 159, 161, 162, 163, 165, 168, 169, 171, 173, 180, 182, 184, 185, 186, 187, 188, 189, 190, 193, 200, 203, 204, 205, 206, 209, 220, 231, 232, 234, 239, 240, 241, 242, 246, 249, 250, 287, 288, 289, 292, 296, 310, 317, 318, 334, 335, 339, 340, 341, 346, 353, 357, 385, 388, 393, 432, 434, 455, 476, 503, 540, 541, 548, 549, 553, 554, 556, 558, 560, 562, 563, 564, 565, 566, 567, 569, 571, 574, 575, 612, 613, 614, 635, 640, 641, 642, 643, 657, 658, 659, 661, 664, 665, 668, 669, 687, 688, 689, 691, 693, 694, 695, 696, 697, 701, 702, 704, 705, 708, 712, 729, 732, 774, 775, 781, 782, 793, 823, 828, 831, 832, 834, 835, 836, 837, 841, 848, 849, 852, 858, 861, 865], "store_eid": 231, "store_id": [49, 95, 96, 98, 106, 246, 335, 339, 340, 476, 540, 553, 554, 556, 571], "store_inner_edg": 231, "store_inner_nod": 231, "store_typ": 641, "stori": 824, "str": [4, 20, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 292, 295, 296, 297, 299, 300, 302, 303, 304, 305, 308, 309, 310, 311, 312, 313, 315, 316, 320, 321, 324, 327, 330, 332, 333, 334, 335, 339, 340, 341, 346, 352, 353, 354, 357, 385, 387, 388, 395, 396, 397, 399, 406, 410, 412, 415, 418, 419, 420, 421, 424, 427, 428, 429, 432, 433, 434, 440, 444, 445, 447, 448, 452, 455, 456, 457, 476, 477, 478, 500, 501, 503, 540, 547, 548, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 562, 563, 564, 565, 566, 567, 569, 572, 573, 574, 575, 594, 622, 635, 640, 641, 642, 643, 645, 646, 649, 651, 656, 657, 658, 659, 661, 664, 665, 667, 668, 669, 671, 681, 687, 726, 734, 766, 774, 810, 829, 871], "straight": 709, "straightforward": [853, 854], "strategi": [197, 232, 239, 411, 429, 431, 560, 712, 827, 841, 848, 854], "stream": [210, 291, 295, 325], "streamlin": 827, "strength": [409, 700, 729], "strict": 697, "string": [4, 22, 23, 26, 39, 52, 109, 121, 122, 131, 183, 223, 297, 305, 309, 322, 323, 334, 384, 385, 386, 387, 688, 689, 697, 705, 708, 710, 730, 813, 833, 834, 837], "strong": [345, 474], "strongli": 21, "structur": [0, 4, 7, 13, 19, 21, 22, 56, 59, 67, 89, 101, 102, 108, 112, 125, 126, 131, 132, 141, 142, 143, 147, 150, 154, 159, 161, 162, 163, 167, 170, 173, 174, 175, 176, 181, 184, 197, 205, 210, 234, 236, 240, 248, 249, 250, 287, 305, 310, 314, 334, 426, 427, 428, 430, 444, 548, 549, 550, 557, 567, 635, 659, 665, 685, 693, 696, 697, 699, 700, 701, 703, 704, 713, 730, 782, 820, 823, 827, 833, 848, 853, 855, 856, 858, 859, 861, 862, 866, 868], "strucutr": 832, "strutur": [89, 112, 697], "stub": 21, "student": [155, 187, 193], "studi": [151, 152, 162, 816], "studio": 817, "style": [9, 854, 855], "stype": [385, 726, 766, 810], "sub": [9, 144, 261, 262, 275, 276, 285, 286, 385, 458, 497, 498, 500, 501, 524, 525, 526, 527, 528, 529, 538, 539, 622, 708, 719, 752, 793, 823, 829, 871], "sub_g": [246, 247, 335, 476, 477, 540, 705, 749, 790], "subbackward0": 392, "subclass": [3, 218, 300, 313, 426, 427, 428, 429, 430, 431, 686, 687, 691, 713, 715], "subg": [209, 217, 713, 782], "subgraph": [1, 3, 7, 13, 26, 134, 208, 209, 210, 214, 216, 217, 218, 219, 220, 221, 234, 241, 242, 243, 246, 247, 292, 297, 300, 303, 308, 310, 311, 313, 315, 316, 320, 324, 335, 339, 340, 353, 426, 427, 428, 429, 430, 431, 476, 477, 540, 541, 563, 564, 565, 566, 693, 695, 711, 713, 714, 715, 716, 717, 720, 725, 726, 755, 757, 797, 799, 809, 827, 828, 837, 839, 855, 861, 865], "subgraph_sampl": 303, "subgraphs_nod": [300, 313], "subgraphsampl": [218, 300, 713, 721], "subgraphx": 429, "subject": [6, 853], "sublay": [439, 440, 865], "sublist": 56, "submatrix": [341, 721], "submodul": [4, 385, 724, 817, 838], "subnet": 848, "suboptim": [697, 782], "subpackag": [5, 855], "subplot": [819, 861, 864], "subprocess": [291, 293], "subreddit": 181, "subsect": 719, "subsequ": [303, 308, 315, 316, 696, 697], "subset": [4, 14, 45, 79, 82, 105, 130, 146, 155, 157, 158, 169, 178, 179, 187, 193, 195, 197, 205, 207, 217, 232, 239, 247, 289, 293, 305, 384, 426, 427, 477, 694, 697, 702, 827, 830, 840, 861, 870], "subsetrandomsampl": 840, "subspac": 820, "substanc": 819, "substitut": [827, 855], "substract": [625, 823], "subtract": [629, 667], "subtract_min": 667, "subtre": 858, "succe": [4, 694], "success": 820, "successor": [90, 94, 340, 352, 861], "sudo": [817, 848], "suffer": 844, "suffici": 848, "suffix": [127, 688, 775], "sugar": [347, 348, 349, 350, 631, 632, 858], "suggest": [21, 23, 428, 430, 708, 709, 837, 845, 855], "suitabl": [341, 432, 434, 569, 692, 696, 697, 712], "sum": [4, 5, 9, 10, 20, 22, 73, 79, 82, 91, 92, 93, 94, 100, 113, 117, 118, 119, 122, 138, 139, 140, 173, 197, 198, 205, 241, 242, 385, 396, 397, 405, 410, 412, 418, 419, 423, 426, 427, 428, 429, 434, 442, 443, 446, 455, 458, 482, 487, 501, 503, 508, 514, 522, 528, 551, 552, 560, 562, 563, 569, 594, 631, 632, 643, 651, 667, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 694, 695, 708, 710, 718, 721, 722, 724, 725, 726, 729, 730, 732, 752, 754, 761, 764, 765, 766, 769, 770, 772, 780, 793, 794, 796, 804, 806, 808, 809, 810, 813, 815, 818, 819, 821, 823, 829, 830, 836, 838, 840, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "sum_": [120, 122, 341, 345, 357, 388, 391, 392, 393, 397, 401, 403, 406, 407, 408, 409, 411, 412, 414, 415, 416, 417, 420, 423, 432, 434, 435, 436, 438, 442, 456, 459, 474, 569, 572, 573, 708, 730, 731, 752, 770, 771, 793, 813, 814, 821, 823, 830, 838, 839, 853, 855, 858, 861, 865], "sum_edg": 128, "sum_i": [667, 864], "sum_nod": 129, "sum_p": 865, "sumlimits_": 865, "summar": [21, 730, 827, 855, 861], "summari": 827, "summat": [119, 128, 129, 385, 502, 503, 551, 577, 643, 730, 813, 830, 838, 854], "sumpool": [820, 870], "super": [146, 169, 218, 300, 313, 416, 426, 427, 428, 429, 430, 431, 458, 687, 691, 713, 714, 716, 717, 718, 719, 721, 722, 724, 726, 728, 730, 731, 732, 734, 737, 757, 758, 759, 760, 761, 762, 764, 766, 768, 770, 771, 772, 774, 777, 799, 800, 802, 803, 804, 805, 806, 808, 810, 812, 813, 814, 815, 818, 819, 820, 821, 823, 828, 829, 831, 836, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "superpixel": [146, 169], "superpixeldataset": [146, 169], "superscript": 852, "superset": 635, "supervis": [140, 147, 183, 389, 399, 415, 657, 697, 716, 782, 802, 836, 852, 861], "supplementari": 402, "support": [4, 5, 10, 13, 22, 110, 117, 122, 126, 138, 139, 146, 169, 210, 234, 240, 250, 291, 293, 295, 301, 305, 344, 346, 353, 354, 357, 388, 400, 406, 455, 457, 458, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 556, 558, 560, 562, 563, 564, 565, 567, 570, 577, 616, 636, 642, 651, 670, 681, 689, 693, 694, 695, 696, 697, 701, 704, 708, 719, 722, 724, 729, 730, 764, 808, 816, 817, 818, 819, 820, 821, 823, 829, 831, 834, 835, 836, 838, 841, 845, 865, 871], "suppos": [21, 231, 297, 319, 502, 729, 794, 830, 852, 865], "suppress": [389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 841], "sure": [6, 21, 22, 229, 230, 293, 410, 421, 435, 437, 441, 442, 444, 447, 565, 688, 696, 775, 820, 861], "surpass": 21, "svd": [633, 669], "svd_pe": 669, "svdpe": 13, "swap": 320, "switch": [817, 819], "sym": 457, "sym_new_etyp": 650, "symbol": [5, 689, 865], "symmetr": [183, 343, 415, 457, 657, 668, 700, 728, 812, 818, 823, 854], "sympi": [828, 829, 831, 834, 835], "sync": 848, "synchron": [4, 325, 694, 780, 829, 845, 861, 870, 871], "synset": 191, "syntact": [182, 858, 859, 868], "syntax": [347, 348, 349, 350, 631, 632, 705, 728, 790, 858], "synthet": [14, 141, 142, 143, 172, 189, 190, 689, 727, 728, 812, 840, 841], "syntheticdataset": 841, "system": [4, 22, 166, 173, 290, 455, 558, 700, 821, 829, 839, 844, 845, 848], "systemat": [428, 430], "systemctl": 848, "t": [4, 10, 21, 56, 60, 87, 89, 118, 119, 131, 163, 164, 168, 200, 214, 241, 242, 243, 292, 297, 334, 352, 388, 391, 401, 405, 407, 408, 412, 414, 417, 420, 424, 425, 427, 428, 429, 438, 444, 452, 453, 454, 456, 457, 558, 560, 562, 563, 635, 641, 653, 659, 668, 696, 697, 701, 707, 714, 716, 717, 721, 722, 751, 792, 820, 821, 823, 828, 834, 835, 848, 854, 855, 861, 865], "t0": [695, 781, 852, 855], "t1": [695, 781], "t_i": 865, "t_j": 865, "tabl": [178, 179, 383, 384, 387, 697, 824, 841, 855], "tabular": [697, 701], "tackl": [428, 429, 430, 431, 854], "tag": [21, 565, 574, 575], "tag_offset": [574, 575], "tag_offset_nam": [565, 574, 575], "tag_pos_nam": [574, 575], "tag_typ": [574, 575], "tail": [453, 454], "take": [20, 51, 118, 119, 120, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 210, 214, 215, 216, 219, 220, 241, 242, 287, 293, 301, 313, 343, 401, 402, 405, 407, 408, 416, 418, 419, 421, 426, 427, 428, 429, 430, 431, 559, 563, 564, 565, 566, 594, 600, 620, 622, 671, 685, 689, 691, 694, 697, 704, 705, 708, 710, 712, 713, 714, 715, 717, 719, 723, 725, 726, 727, 728, 729, 730, 732, 817, 819, 821, 829, 830, 838, 839, 841, 844, 845, 853, 854, 855, 858, 861, 865, 870], "taken": [161, 163, 854], "talk": 840, "tanh": [823, 858], "tape": 137, "tar": [688, 735, 775], "target": [108, 132, 133, 144, 170, 177, 178, 179, 201, 243, 320, 408, 417, 429, 431, 603, 697, 719, 720, 828, 831, 865], "target_class": [429, 431], "target_dir": 201, "target_idx": 853, "target_ntyp": 140, "task": [2, 7, 21, 122, 132, 133, 135, 136, 137, 138, 139, 140, 144, 146, 147, 150, 151, 152, 153, 154, 159, 160, 161, 163, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 188, 194, 195, 197, 198, 289, 292, 303, 304, 305, 308, 309, 315, 316, 690, 691, 694, 697, 713, 719, 721, 727, 728, 730, 731, 732, 777, 816, 820, 821, 824, 827, 828, 829, 831, 832, 836, 840, 848, 849, 855, 861, 870, 871], "task_lint": 21, "task_nam": [828, 831], "task_unit_test": 21, "tau": [417, 424, 425], "tb": 388, "tcmalloc": 845, "tcp": [829, 870, 871], "tcpstore": 455, "teach": 839, "teacher": 861, "team": [21, 865, 870], "techniqu": [387, 728, 858, 865], "technologi": 845, "teleport": 390, "tell": [5, 21, 130, 210, 213, 240, 689, 719, 837, 838, 840], "temperatur": [428, 430], "templat": [21, 156, 687, 774], "tempor": [25, 145, 164, 166, 214, 297, 300, 303, 313, 315, 316], "temporal_sample_layer_neighbor": [297, 315], "temporal_sample_neighbor": [297, 316], "temporalneighborsamplerimpl": [315, 316], "temporari": 25, "ten": 159, "tend": [120, 710], "tensor": [0, 1, 5, 6, 7, 9, 12, 13, 20, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 138, 139, 140, 146, 159, 165, 168, 169, 172, 173, 175, 177, 178, 179, 184, 186, 195, 210, 213, 220, 221, 226, 227, 229, 230, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 325, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 351, 352, 353, 354, 355, 356, 357, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 543, 545, 547, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 585, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 645, 646, 647, 649, 650, 651, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 689, 691, 695, 697, 701, 702, 703, 704, 705, 708, 713, 715, 718, 721, 722, 723, 725, 726, 729, 730, 732, 737, 740, 746, 747, 748, 749, 770, 777, 787, 788, 789, 790, 794, 804, 806, 813, 817, 819, 820, 821, 823, 824, 828, 829, 831, 834, 835, 836, 837, 838, 840, 841, 848, 853, 855, 856, 858, 861, 865, 868, 870, 871], "tensor_new": 854, "tensor_numpi": 841, "tensorcor": 722, "tensorcore\ub4e4\uc744": 806, "tensorflow": [9, 13, 21, 23, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 691, 704, 718, 723, 730, 732, 804, 807, 813, 816, 824], "tensorflow\u7684keras\u5c42": 763, "tensorflow\u7684tensor\u7c7b\u6216mxnet\u7684ndarray\u7c7b": 748, "tensorflow\uc5d0\uc11c\ub294": 777, "tensorflow\uc5d0\uc11c\ub3c4": 815, "tensorflow\uc758": 789, "term": [4, 10, 14, 144, 149, 185, 319, 383, 386, 394, 402, 405, 406, 407, 415, 425, 685, 816, 844, 854, 858, 861, 864], "termin": [558, 562], "termination_prob": 558, "tesla": 14, "test": [4, 9, 25, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 240, 292, 309, 314, 329, 690, 694, 697, 721, 728, 732, 736, 740, 741, 776, 780, 782, 812, 817, 818, 819, 820, 821, 823, 827, 828, 829, 831, 833, 834, 835, 836, 838, 840, 841, 848, 849, 852, 855, 865, 870, 871], "test_acc": [818, 819, 821, 829, 836, 838, 870, 871], "test_data": [164, 166, 184], "test_dataload": [820, 840], "test_edg": [139, 849], "test_edge_mask": [157, 158, 191], "test_el": 329, "test_idx": [138, 140, 820, 853], "test_label": [690, 736, 776, 849], "test_load": [690, 736, 776, 870], "test_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 383, 689, 691, 732, 737, 772, 777, 815, 818, 819, 821, 836, 838, 841, 848, 852, 853], "test_metr": 820, "test_neg_dst": 849, "test_neg_g": 839, "test_neg_src": 849, "test_neg_u": 839, "test_neg_v": 839, "test_nid": 848, "test_pos_dst": 849, "test_pos_g": 839, "test_pos_src": 849, "test_pos_u": 839, "test_pos_v": 839, "test_pr": 849, "test_rat": 173, "test_ratio": 173, "test_sampl": 840, "test_set": [309, 314, 828, 829, 831, 833, 834, 835, 870, 871], "test_siz": [820, 839], "texa": 187, "text": [161, 182, 392, 409, 415, 417, 424, 444, 697, 707, 727, 751, 792, 820, 838, 853, 855, 861, 864], "textbf": [861, 864], "textrm": [178, 179, 858, 865], "textur": 864, "tf": [4, 161, 824], "tf_force_gpu_allow_growth": 817, "tf_geometr": 824, "tgt": 865, "tgt_emb": 865, "tgt_po": 865, "tgt_seq": 865, "tgt_y": 865, "tgz": [688, 691, 737, 775, 777], "tgz\u6587\u4ef6": 735, "th": [4, 5, 9, 10, 27, 34, 36, 37, 48, 53, 55, 60, 87, 100, 114, 116, 122, 128, 129, 138, 146, 147, 157, 158, 165, 168, 169, 172, 174, 175, 186, 191, 214, 216, 219, 220, 246, 294, 298, 317, 341, 343, 357, 385, 389, 390, 391, 392, 393, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 476, 503, 547, 551, 552, 557, 561, 562, 567, 572, 573, 634, 641, 643, 645, 646, 670, 680, 681, 683, 685, 693, 694, 695, 696, 697, 701, 702, 703, 704, 705, 712, 730, 739, 740, 745, 746, 747, 748, 749, 779, 780, 781, 782, 786, 787, 788, 789, 790, 813, 820, 821, 823, 830, 841, 844, 848, 849, 852, 853, 854, 858, 864, 865], "than": [4, 21, 27, 28, 66, 95, 96, 118, 119, 120, 121, 131, 139, 142, 143, 161, 168, 178, 189, 190, 226, 287, 293, 294, 297, 298, 300, 305, 313, 317, 334, 341, 388, 391, 428, 430, 432, 434, 449, 459, 559, 563, 564, 565, 569, 612, 613, 614, 626, 658, 659, 664, 704, 705, 709, 715, 726, 728, 731, 749, 790, 817, 821, 824, 834, 835, 844, 845, 848, 853, 854, 855, 858, 861], "thei": [1, 4, 9, 11, 20, 21, 26, 56, 117, 119, 122, 130, 131, 138, 140, 151, 152, 188, 234, 241, 242, 245, 310, 321, 334, 351, 352, 391, 458, 475, 557, 560, 562, 563, 686, 687, 693, 694, 695, 697, 702, 703, 705, 708, 714, 718, 722, 725, 726, 727, 729, 820, 824, 833, 836, 838, 840, 848, 854, 855, 858, 861, 864], "them": [1, 4, 5, 9, 41, 48, 56, 68, 73, 93, 100, 113, 120, 130, 133, 142, 144, 148, 149, 155, 178, 185, 187, 193, 205, 221, 245, 246, 249, 320, 335, 339, 340, 341, 391, 426, 427, 428, 429, 430, 431, 436, 445, 452, 475, 476, 540, 555, 565, 567, 611, 617, 635, 643, 649, 689, 693, 694, 695, 697, 700, 701, 705, 707, 715, 720, 728, 730, 816, 823, 830, 832, 834, 835, 836, 837, 839, 848, 854, 858, 859, 861, 865, 868, 870], "themselv": [21, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 714, 830, 839], "theori": 854, "ther": 425, "therefor": [4, 26, 220, 293, 641, 694, 695, 714, 715, 821, 839, 849, 853, 854, 855, 858], "theta": [404, 405, 410, 411, 418, 422, 423, 819, 854], "theta_": [819, 854], "theta_0": 819, "theta_i": 854, "theta_k": 658, "theta_r": 819, "theta_x": 854, "thew": 26, "thi": [4, 5, 6, 7, 8, 10, 14, 21, 22, 24, 26, 27, 28, 34, 40, 41, 44, 45, 48, 51, 52, 59, 70, 73, 79, 82, 89, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 137, 140, 141, 142, 143, 145, 148, 156, 157, 158, 159, 160, 162, 164, 165, 166, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 197, 209, 210, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 231, 232, 235, 239, 240, 241, 242, 243, 245, 246, 247, 287, 291, 293, 294, 297, 298, 299, 300, 301, 303, 305, 308, 309, 310, 313, 315, 316, 317, 320, 325, 334, 335, 338, 339, 340, 341, 342, 344, 352, 353, 354, 357, 385, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 419, 422, 423, 426, 427, 428, 429, 430, 431, 432, 434, 436, 438, 445, 448, 449, 450, 451, 455, 456, 458, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 550, 553, 554, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 569, 574, 575, 581, 582, 605, 612, 613, 614, 616, 622, 626, 633, 634, 635, 637, 638, 639, 640, 641, 643, 644, 657, 658, 659, 660, 661, 662, 664, 665, 666, 668, 669, 670, 678, 679, 680, 681, 683, 684, 685, 686, 687, 690, 691, 692, 693, 694, 695, 696, 697, 698, 701, 704, 705, 707, 708, 709, 711, 712, 713, 714, 715, 716, 718, 719, 720, 721, 722, 723, 725, 726, 727, 728, 729, 730, 731, 732, 777, 782, 802, 815, 817, 818, 819, 820, 821, 823, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 845, 848, 849, 852, 853, 854, 855, 856, 858, 859, 861, 862, 864, 865, 866, 868, 870, 871], "thing": [210, 226, 559, 692, 714, 858], "third": [131, 210, 214, 215, 216, 219, 220, 287, 334, 561], "thoma": 825, "thorough": 635, "thoroughli": [854, 855], "those": [27, 28, 114, 116, 209, 220, 243, 293, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 432, 434, 708, 709, 712, 724, 830, 837, 855, 858, 861, 865], "though": [21, 22, 241, 242, 303, 308, 315, 563, 701, 854], "thought": [861, 865], "thousand": 831, "thre": 865, "thread": [21, 210, 235, 291, 829, 848, 871], "three": [14, 48, 62, 63, 80, 126, 131, 161, 163, 198, 217, 230, 240, 250, 287, 334, 385, 457, 569, 641, 689, 691, 693, 694, 696, 697, 708, 716, 721, 725, 829, 833, 838, 839, 841, 844, 853, 854, 858, 861, 865, 871], "threshold": [297, 425, 429, 431, 658, 659, 664], "through": [22, 236, 694, 730, 816, 840, 848, 849, 853], "throughout": [305, 704, 861], "throughput": 693, "throw": 681, "thrown": [859, 868], "thu": [4, 9, 14, 22, 70, 122, 182, 198, 245, 246, 303, 315, 335, 339, 340, 395, 422, 459, 475, 476, 540, 551, 552, 689, 694, 695, 697, 701, 703, 722, 819, 852, 853, 854, 855, 858, 861, 864, 865, 870], "thumb": 21, "thumbnail": [836, 837, 838, 839, 840, 841], "ti": 51, "tid": 695, "tild": [390, 393, 409, 417, 422, 423, 457, 819, 852, 854], "tile": 864, "time": [6, 113, 118, 164, 166, 200, 214, 231, 291, 297, 300, 303, 308, 313, 315, 316, 339, 340, 388, 415, 416, 432, 448, 559, 562, 563, 659, 668, 687, 692, 694, 697, 709, 716, 717, 722, 730, 753, 795, 819, 820, 821, 823, 824, 829, 836, 837, 838, 839, 840, 841, 844, 848, 852, 854, 855, 858, 861, 865, 870, 871], "time_enc": 865, "timestamp": [297, 300, 313, 315, 316, 321], "tini": [130, 184, 858], "tiny_data": 184, "tiny_sst": 858, "tip": [210, 712], "tissu": 855, "titl": [701, 745, 786], "tmp": [317, 318, 428, 430, 697, 741, 782, 841, 854], "to_add_edg": 861, "to_bfloat16": 722, "to_bidirect": [6, 116, 704, 748, 789], "to_block": [4, 131, 694, 695, 713, 715, 740, 757, 780, 781, 799, 801], "to_csv": [834, 835], "to_dens": [819, 821, 823], "to_direct": [248, 249], "to_heterogen": 641, "to_homogen": [417, 420, 640, 705, 749, 790, 853], "to_homogenen": 26, "to_jshtml": 819, "to_loc": 4, "to_networkx": [819, 854, 858, 864], "to_numpi": [689, 841], "to_partid": 4, "to_pyg_data": 305, "to_simpl": [118, 119, 186, 644], "to_undirect": 819, "tocoo": [126, 250], "todens": 839, "todo": [315, 316], "togeth": [11, 26, 91, 92, 101, 102, 130, 135, 136, 137, 214, 216, 240, 332, 342, 351, 423, 424, 425, 435, 437, 441, 442, 556, 697, 705, 720, 730, 821, 834, 835, 854, 870], "toi": [175, 865], "token": [858, 865, 866, 868], "tolevi": 13, "tolist": [561, 819, 858], "tolok": 188, "toloka": 188, "tone": 164, "too": [4, 22, 60, 87, 240, 291, 309, 697, 703, 715, 788, 823, 830, 865], "tool": [693, 694, 697, 742, 782, 783, 817, 823, 824, 831, 836, 848], "toolbox": 402, "top": [142, 143, 161, 417, 441, 645, 646, 694, 697, 816, 820, 821, 823, 827, 839, 844, 848, 853], "topic": [334, 642, 696, 712, 854], "topk": [341, 432, 434, 569, 645, 646], "topolog": [546, 647, 858], "topologi": [13, 292, 309, 391, 423, 729, 858, 859, 861, 868], "topological_nodes_gener": [546, 858], "torch": [4, 5, 6, 8, 9, 10, 12, 20, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 131, 138, 146, 147, 165, 168, 169, 172, 174, 183, 184, 186, 195, 209, 210, 213, 214, 216, 217, 219, 220, 226, 227, 244, 245, 246, 247, 249, 250, 263, 264, 265, 266, 287, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 325, 327, 328, 329, 332, 333, 334, 335, 339, 340, 341, 345, 351, 355, 356, 357, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 474, 475, 476, 477, 503, 540, 547, 548, 549, 551, 552, 553, 554, 555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 573, 574, 575, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 594, 595, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 634, 635, 636, 640, 641, 642, 643, 645, 646, 650, 651, 654, 655, 656, 657, 658, 659, 662, 663, 664, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 689, 690, 691, 693, 694, 696, 697, 701, 702, 703, 704, 705, 708, 709, 713, 714, 715, 716, 717, 718, 719, 721, 722, 724, 725, 726, 727, 728, 730, 731, 732, 736, 737, 739, 740, 745, 746, 747, 748, 749, 752, 753, 757, 758, 759, 760, 761, 762, 764, 765, 766, 767, 768, 770, 771, 772, 776, 777, 779, 780, 786, 787, 788, 789, 790, 793, 795, 799, 800, 801, 802, 803, 804, 805, 806, 808, 809, 810, 811, 812, 813, 814, 815, 818, 819, 820, 821, 823, 828, 829, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 848, 849, 852, 853, 854, 855, 858, 861, 864, 865, 870, 871], "torch_feat": [298, 317], "torch_featur": 317, "torchaudio": 823, "torchbasedfeatur": [298, 834, 835], "torchbasedfeaturestor": [309, 834, 835], "torchdata": [293, 301, 720, 828, 829, 831, 834, 835], "torchmetr": [821, 829, 871], "torchvis": 823, "tosimpl": [13, 653], "total": [4, 10, 80, 81, 181, 297, 303, 308, 312, 315, 316, 383, 388, 416, 434, 443, 691, 695, 696, 720, 826, 843, 847, 851, 854, 857, 860, 863, 867, 869, 870, 873], "total_correct": 870, "total_loss": [717, 721, 820, 828, 829, 870, 871], "total_node_weight": 696, "total_num_edg": [297, 327], "total_num_nod": [297, 327, 716, 834, 835], "touch": 21, "toward": 654, "tower": [397, 419], "tp_": 855, "tq": [821, 831], "tqdm": [716, 717, 820, 821, 828, 829, 831, 834, 835, 865, 871], "tr": 858, "trace": [560, 561, 562], "track": 858, "trade": [145, 429, 431, 865], "traffic": [149, 185], "train": [3, 4, 7, 9, 10, 11, 23, 25, 89, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 209, 210, 213, 214, 215, 216, 219, 220, 232, 235, 239, 240, 292, 293, 303, 309, 314, 315, 387, 397, 411, 416, 419, 422, 426, 427, 428, 429, 430, 431, 455, 633, 635, 669, 684, 685, 690, 691, 694, 695, 696, 697, 706, 708, 711, 713, 715, 716, 720, 725, 736, 739, 767, 770, 772, 776, 777, 779, 782, 793, 799, 800, 805, 806, 811, 812, 813, 815, 816, 817, 824, 828, 830, 833, 834, 835, 841, 842, 844, 845, 852, 855, 858, 859, 861, 862, 864, 868, 870], "train_acc": [836, 838, 853], "train_data": [164, 166, 184], "train_dataload": [820, 828, 831, 840, 848, 849], "train_dataset": [146, 169], "train_dataset_subset": [146, 169], "train_dist": [742, 783, 848], "train_edg": [157, 158, 191], "train_edge_mask": [157, 158, 191], "train_eid": [214, 216, 220, 758, 800, 849], "train_eid_dict": [758, 760, 800, 803], "train_g": [157, 158, 191, 839], "train_graph": 139, "train_idx": [138, 140, 691, 737, 777, 820, 853], "train_it": 865, "train_label": [690, 736, 776], "train_load": [690, 736, 776, 858, 870], "train_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 240, 383, 426, 689, 691, 693, 694, 697, 722, 727, 728, 732, 737, 739, 740, 741, 767, 768, 772, 777, 779, 780, 782, 806, 811, 812, 815, 818, 819, 821, 836, 838, 841, 848, 852, 853, 855], "train_neg_g": 839, "train_neg_u": 839, "train_neg_v": 839, "train_nid": [210, 214, 215, 216, 219, 693, 694, 715, 739, 740, 757, 762, 779, 780, 799, 801, 805, 844, 848, 849], "train_nid_dict": [762, 805], "train_on": [209, 210, 213, 214, 215, 216, 217, 220], "train_pos_g": 839, "train_pos_u": 839, "train_pos_v": 839, "train_rat": 173, "train_sampl": 840, "train_se": [760, 803], "train_set": [157, 158, 191, 309, 314, 713, 714, 719, 828, 829, 831, 833, 834, 835, 854, 870, 871], "train_siz": [161, 162, 163, 164, 166, 820, 839], "train_step": [428, 430], "train_step_nod": [428, 430], "trainabl": [4, 818, 823, 853], "trainer": [4, 232, 239, 240, 693, 694, 695, 697, 698, 848, 849], "trainer_id": 240, "trainer\uc5d0\uac8c": 779, "training_load": 854, "training_set": 195, "training\uc744": 793, "trainset": [147, 174, 858], "trang": [717, 821], "transact": 145, "transduct": [140, 197, 198, 422, 694, 740, 780], "transfer": [210, 290], "transform": [9, 13, 26, 27, 28, 114, 115, 116, 117, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 246, 247, 306, 335, 338, 341, 344, 352, 357, 386, 388, 391, 397, 401, 405, 417, 427, 428, 429, 432, 433, 434, 439, 440, 444, 445, 446, 447, 448, 449, 450, 451, 459, 476, 477, 540, 547, 554, 557, 565, 634, 643, 644, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 685, 689, 697, 701, 713, 714, 715, 717, 720, 722, 730, 818, 822, 828, 852, 853, 854, 855, 858, 861, 866, 868], "transform1": 661, "transform2": 661, "transform3": 661, "transformer_encod": 448, "transit": 562, "translat": [158, 191, 453, 865], "translationdataset": 865, "transmiss": 210, "transpar": [695, 720], "transpos": [31, 557, 574, 576, 602, 820, 823, 854], "travel": [819, 861], "travers": [13, 91, 92, 123, 124, 229, 230, 543, 545, 546, 558, 560, 562, 647], "traversal_ord": 858, "treat": [310, 321, 387, 563, 564, 643, 668, 705, 725, 749, 790, 837, 839, 840, 841, 854, 858, 859, 865, 868], "tree": [14, 21, 159, 182, 184, 189, 190, 230, 341, 429, 431, 432, 434, 569, 859, 862, 865, 868], "tree_height": [189, 190], "treebank": [184, 858], "treelstm": 858, "treelstmcel": 858, "tri": [4, 148, 240, 353, 354], "trick": [22, 852], "trigger": [0, 91, 92, 406, 710, 722, 796, 820, 824, 838, 841, 854, 855, 858], "tripl": [453, 454, 853], "triplet": [4, 30, 31, 32, 34, 39, 47, 48, 52, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 131, 223, 247, 334, 478, 551, 553, 555, 572, 640, 689, 705], "triton": [828, 831, 834, 835], "trivial": [9, 342, 397, 448, 661, 858], "troubl": 21, "true": [4, 6, 9, 10, 25, 31, 48, 49, 57, 58, 65, 66, 67, 69, 95, 96, 98, 99, 106, 111, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 197, 198, 200, 201, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 246, 248, 287, 291, 293, 295, 297, 303, 308, 309, 310, 315, 316, 317, 318, 328, 329, 335, 336, 338, 339, 340, 341, 342, 344, 383, 386, 387, 389, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 444, 445, 446, 447, 448, 449, 457, 476, 540, 541, 543, 545, 546, 547, 553, 554, 556, 557, 559, 560, 562, 563, 564, 565, 566, 569, 570, 571, 574, 588, 633, 634, 635, 641, 642, 643, 645, 646, 647, 649, 650, 651, 661, 662, 667, 669, 682, 683, 689, 690, 691, 693, 694, 696, 697, 713, 714, 715, 716, 717, 719, 720, 721, 722, 724, 730, 736, 737, 739, 740, 757, 758, 759, 760, 762, 764, 770, 776, 777, 779, 780, 782, 799, 800, 801, 802, 803, 805, 806, 808, 813, 817, 818, 819, 820, 821, 823, 828, 829, 831, 833, 834, 835, 836, 840, 841, 844, 848, 849, 852, 853, 854, 858, 861, 864, 865, 870, 871], "truediv": 622, "trueli": [696, 697], "truli": [240, 716], "truncat": 449, "trust": 145, "truth": [150, 154, 167, 176, 732, 815, 829, 836, 849, 854, 861, 871], "trv_a_tre": 858, "trv_graph": 858, "try": [116, 130, 207, 226, 240, 338, 344, 557, 558, 559, 634, 643, 696, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835, 840, 845], "tudata": [691, 737, 777], "tudataset": 25, "tune": [192, 291, 409, 722, 816, 844, 845, 855], "tupl": [4, 10, 22, 26, 27, 32, 36, 48, 51, 54, 61, 73, 88, 95, 123, 125, 131, 132, 133, 139, 144, 156, 170, 183, 196, 217, 240, 249, 287, 288, 296, 299, 302, 305, 321, 322, 323, 332, 333, 334, 352, 355, 356, 357, 384, 385, 386, 427, 459, 559, 562, 563, 579, 581, 582, 596, 610, 612, 613, 614, 615, 626, 690, 691, 695, 704, 718, 725, 726, 761, 765, 776, 804, 809], "tuple\uacfc": 781, "tuple\uc744": [777, 781], "tuple\uc758": 809, "ture": [9, 708, 793], "turn": [21, 210, 213, 303, 336, 353, 541, 722, 820, 830, 845, 848, 854, 861], "tutori": [9, 21, 210, 214, 215, 216, 293, 685, 701, 708, 714, 715, 718, 719, 721, 786, 799, 800, 805, 818, 819, 820, 821, 823, 825, 826, 827, 828, 829, 830, 831, 832, 834, 835, 836, 837, 838, 839, 840, 841, 843, 844, 847, 848, 849, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 873], "tvm": 22, "tvt": 314, "tweak": 21, "tweet": 159, "twirl": 424, "twitter": [159, 700], "two": [3, 4, 5, 9, 26, 34, 45, 48, 51, 52, 53, 58, 68, 77, 79, 81, 82, 100, 105, 116, 118, 119, 125, 126, 128, 129, 130, 135, 136, 141, 142, 159, 162, 163, 178, 180, 182, 188, 232, 239, 240, 245, 249, 297, 339, 340, 341, 352, 353, 354, 387, 388, 389, 391, 392, 397, 400, 401, 402, 403, 404, 405, 407, 408, 410, 411, 412, 415, 421, 455, 456, 458, 475, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 550, 551, 552, 556, 558, 559, 565, 572, 573, 574, 575, 608, 616, 619, 622, 628, 634, 635, 640, 641, 643, 645, 646, 649, 665, 681, 685, 689, 694, 695, 696, 697, 699, 700, 701, 702, 703, 705, 708, 709, 710, 714, 716, 718, 719, 722, 726, 728, 730, 731, 732, 800, 815, 821, 823, 830, 831, 833, 836, 839, 840, 841, 848, 852, 853, 854, 855, 856, 858, 861, 864, 865, 866, 868], "twolayergcn": [719, 762, 805], "tx": 668, "txt": [693, 694, 696, 697, 698, 739, 740, 742, 779, 780, 782, 783, 848, 849], "ty_a": 640, "ty_b": 640, "type": [4, 5, 6, 10, 13, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 288, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305, 308, 309, 310, 312, 315, 316, 317, 318, 320, 321, 324, 325, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 351, 352, 353, 354, 355, 356, 357, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 459, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 569, 571, 572, 573, 574, 575, 577, 578, 580, 583, 584, 585, 586, 587, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 657, 666, 672, 675, 677, 680, 681, 689, 691, 693, 695, 696, 697, 699, 700, 701, 702, 703, 704, 708, 710, 714, 717, 718, 719, 721, 722, 724, 726, 727, 730, 731, 732, 747, 749, 764, 765, 777, 781, 788, 790, 796, 799, 808, 812, 813, 814, 817, 823, 828, 829, 831, 833, 834, 835, 837, 840, 841, 852, 853, 855, 858, 861, 870], "type_": [222, 223, 224, 225], "type_edge_id": 782, "type_nam": [288, 296], "type_per_edg": [297, 327, 834], "type_wise_edge_id": 696, "type_wise_id": [695, 781], "type_wise_node_id": 696, "typestr": [62, 63], "typic": [1, 4, 11, 241, 388, 691, 698, 708, 722, 724, 725, 819, 845, 854, 861, 865], "typl": [128, 645], "tzdata": [828, 831, 834, 835], "u": [4, 5, 21, 27, 48, 51, 57, 61, 87, 88, 90, 94, 107, 114, 130, 131, 161, 163, 178, 179, 226, 227, 230, 244, 252, 253, 255, 257, 259, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 284, 286, 287, 297, 319, 334, 338, 344, 345, 352, 401, 402, 404, 405, 407, 408, 412, 415, 416, 418, 419, 421, 474, 500, 501, 557, 573, 634, 635, 643, 662, 675, 688, 691, 700, 703, 704, 705, 707, 708, 709, 720, 731, 737, 744, 747, 748, 749, 751, 752, 753, 757, 771, 777, 785, 788, 789, 790, 792, 793, 795, 799, 814, 816, 819, 830, 837, 838, 839, 845, 852, 854, 858, 861, 864, 865], "u0": [178, 179], "u0_atom": 179, "u_": [412, 858], "u_0": [178, 179], "u_add_": 5, "u_add_e_max": 9, "u_add_v": [5, 34, 458, 708, 709, 752, 753, 793, 795], "u_atom": 179, "u_attr": 125, "u_div_": 5, "u_div_v": [5, 9], "u_dot_": 5, "u_dot_v": [5, 9, 722, 728, 731, 760, 768, 771, 803, 806, 812, 814, 839], "u_f": 858, "u_fea": [404, 412, 415, 421], "u_feat": [401, 402, 405, 407, 408, 418], "u_hat": 864, "u_iou": 858, "u_j": 858, "u_l": 858, "u_mul_": [5, 9, 426, 427, 708, 722, 729, 752, 769, 793, 794, 806, 838, 865], "u_mul_e_sum": 9, "u_mul_e_udf": 838, "u_mul_v": 5, "u_sub_": 5, "u_sub_v": 5, "ubuntu": [14, 139, 817, 834, 835, 845, 858, 861, 864], "uc": 387, "ucidata": 167, "udf": [20, 694, 708, 722, 740, 793, 806, 855, 858], "udf_max": 5, "udf_u_mul_": 5, "udf\ub294": 793, "udf\uc640": 793, "udf\uc758": 793, "uint32": 817, "uint8": [694, 740, 780, 834, 865], "uk": 144, "un": [841, 855], "unari": [5, 708, 793], "unbatch": [101, 102, 122, 840, 858], "unblock": [389, 401, 404, 405, 407, 408, 409, 412, 415, 422], "uncertainti": [197, 205], "unchang": 109, "uncom": [818, 819, 820, 821, 823], "uncompress": 201, "uncov": 853, "undefin": [229, 230, 241, 242, 294, 298, 317, 335, 339, 340, 476, 540, 560, 562, 563, 564, 565, 694, 841], "under": [1, 5, 14, 22, 95, 96, 137, 161, 163, 171, 180, 182, 188, 197, 205, 240, 246, 335, 339, 340, 476, 540, 553, 554, 556, 565, 571, 643, 688, 689, 693, 696, 697, 698, 712, 775, 816, 817, 838, 839, 848, 852, 853, 855, 861, 870], "underflow": [722, 806], "underli": [428, 430, 694], "underset": [726, 766, 810, 854], "understand": [21, 443, 451, 696, 712, 819, 824, 830, 838, 840, 848, 854, 856, 868], "undirect": [6, 173, 220, 248, 249, 289, 700, 701, 704, 785, 800, 837, 861], "uneven": [829, 871], "unexist": [444, 447], "unfamiliar": 21, "uni": [44, 45, 68, 79, 82, 104, 105, 126, 404, 548], "unidirect": [116, 125, 352, 399, 400, 401, 402, 404, 405, 407, 408, 412, 415, 418, 421, 718, 804], "unifi": [21, 210, 305, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 715, 827], "uniform": [174, 205, 214, 216, 219, 220, 226, 227, 297, 319, 400, 407, 408, 412, 414, 415, 418, 421, 423, 562, 563, 565, 717, 731, 760, 801, 803, 855], "uniform_": [4, 694, 740, 780], "uniformli": [214, 216, 217, 226, 227, 245, 297, 319, 384, 416, 475, 548, 549, 560, 562, 563, 717, 828], "uniformnegativesampl": [303, 717, 828], "uniform\uc0d8\ud50c\ub9c1\uc740": 801, "uniniti": 356, "union": [4, 209, 220, 293, 297, 300, 301, 302, 310, 312, 313, 320, 321, 333, 432, 434, 858], "uniqu": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 162, 182, 216, 226, 241, 247, 297, 299, 300, 303, 308, 313, 315, 316, 321, 332, 333, 455, 478, 551, 553, 555, 559, 563, 572, 577, 694, 695, 697, 702, 704, 705, 723, 730, 848, 849], "unique_dst": 333, "unique_dst_nod": 333, "unique_nod": [332, 333], "unit": [7, 178, 179, 697, 853, 858, 870], "univers": [132, 167, 866, 868], "unknown": [147, 171], "unlabel": [161, 457, 697, 716], "unleash": 844, "unless": 210, "unlik": [118, 119, 303, 315, 854, 855, 862, 868], "unmark": 6, "unnam": 689, "unnecessari": [709, 726, 845], "unnorm": [241, 242, 297, 303, 308, 315, 316, 402, 406, 560, 562, 563, 564, 565], "unobserv": 855, "unoccupi": [178, 179], "unorm": 424, "unpack": [696, 697, 717], "unpin": 112, "unpin_memory_": 89, "unplug": 173, "unreach": [243, 449, 450, 570, 683], "unscal": [722, 806], "unsqueez": [128, 129, 449, 680, 725, 765, 771, 809, 853, 854, 858, 861], "unsupervis": [717, 803, 854], "until": [4, 6, 21, 214, 563, 712, 858, 865], "untyp": [853, 861], "unus": 21, "unvisit": [429, 431], "unweight": [289, 570, 657, 668, 700, 729, 785], "up": [4, 9, 22, 221, 241, 242, 291, 434, 560, 562, 563, 569, 641, 691, 697, 704, 708, 709, 730, 829, 836, 839, 844, 852, 853, 855, 858, 864, 871], "updat": [4, 10, 20, 21, 27, 28, 34, 35, 73, 91, 92, 93, 94, 100, 113, 222, 223, 224, 225, 294, 295, 296, 298, 317, 351, 385, 387, 391, 392, 394, 399, 400, 402, 405, 407, 408, 409, 410, 411, 413, 415, 421, 422, 423, 446, 455, 457, 542, 543, 544, 545, 546, 685, 693, 694, 707, 708, 709, 710, 711, 718, 722, 730, 753, 793, 795, 796, 806, 817, 823, 824, 829, 830, 838, 848, 854, 855, 858, 864, 865, 870], "update_al": [5, 9, 20, 426, 458, 672, 673, 674, 675, 676, 677, 678, 679, 680, 708, 709, 710, 711, 718, 722, 725, 729, 752, 753, 754, 755, 761, 765, 769, 793, 794, 795, 796, 797, 804, 806, 809, 838, 839, 852, 853, 854, 855, 861, 864], "update_all_exampl": [708, 752, 793], "update_graph": 865, "upgrad": [819, 829], "upload": [21, 848], "upon": [22, 162, 823], "upper": [235, 425, 445, 450], "upstream": [21, 858], "upward": 858, "urandom": [183, 207], "url": [23, 156, 200, 687, 688, 691, 734, 735, 737, 774, 775, 777, 823], "urllib": 841, "urllib3": [828, 829, 831, 834, 835], "urlretriev": 841, "us": [4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 142, 143, 144, 145, 148, 150, 154, 159, 160, 162, 165, 167, 168, 173, 176, 177, 178, 179, 181, 183, 184, 186, 189, 190, 194, 195, 197, 205, 207, 209, 210, 213, 214, 217, 220, 222, 223, 224, 225, 229, 232, 235, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 291, 292, 293, 294, 295, 297, 298, 303, 305, 306, 307, 308, 310, 313, 314, 315, 316, 317, 318, 320, 325, 328, 332, 334, 335, 338, 339, 340, 341, 342, 344, 351, 352, 353, 354, 357, 383, 384, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 408, 409, 410, 412, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 441, 442, 443, 444, 446, 447, 448, 450, 452, 453, 454, 455, 458, 459, 475, 476, 477, 540, 543, 545, 546, 547, 548, 549, 550, 551, 552, 554, 556, 557, 558, 562, 563, 564, 565, 566, 569, 571, 585, 587, 590, 591, 603, 630, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 650, 656, 661, 662, 665, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 682, 683, 685, 686, 688, 689, 691, 692, 693, 694, 695, 696, 697, 699, 700, 701, 704, 705, 707, 708, 710, 712, 713, 714, 716, 717, 719, 721, 722, 723, 724, 725, 726, 727, 728, 730, 731, 732, 775, 782, 789, 790, 806, 815, 817, 819, 821, 822, 823, 828, 829, 830, 831, 833, 834, 835, 836, 838, 840, 841, 842, 844, 845, 848, 849, 852, 853, 854, 855, 856, 858, 859, 861, 862, 864, 865, 868, 870, 871], "usag": [0, 1, 8, 9, 21, 25, 56, 126, 131, 210, 249, 250, 287, 294, 317, 334, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 690, 691, 701, 708, 711, 816, 822, 824, 845, 848], "use_alternate_stream": 210, "use_cpu_affin": 845, "use_ddp": [210, 213, 844, 870], "use_eta": [424, 425], "use_featur": [146, 169], "use_fp16": 806, "use_graphbolt": [235, 236, 240, 241, 242, 848], "use_int64_tensor_s": 817, "use_libxsmm": 336, "use_libxsmm_flag": 336, "use_mm_for_euclid_dist": [433, 547], "use_mm_for_euclid_dist_if_necessari": [433, 547], "use_norm": 417, "use_panda": 168, "use_prefetch_thread": 210, "use_uva": [10, 210, 715], "user": [1, 3, 4, 5, 9, 11, 13, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 140, 145, 156, 159, 161, 163, 173, 180, 181, 210, 214, 215, 216, 219, 220, 235, 240, 241, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 299, 301, 309, 314, 322, 323, 334, 335, 338, 339, 340, 344, 353, 354, 357, 384, 385, 386, 387, 389, 399, 401, 404, 405, 407, 408, 409, 412, 415, 422, 427, 428, 429, 476, 477, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 548, 553, 554, 555, 556, 557, 561, 562, 563, 564, 565, 566, 574, 575, 634, 635, 640, 641, 642, 643, 650, 651, 656, 666, 667, 671, 681, 689, 693, 694, 695, 696, 697, 698, 699, 700, 702, 705, 708, 713, 714, 715, 717, 720, 722, 727, 728, 731, 732, 749, 752, 757, 767, 768, 771, 772, 784, 790, 791, 793, 799, 806, 811, 812, 814, 815, 816, 817, 827, 829, 832, 833, 834, 845, 848, 858], "user_emb": 387, "user_feat": [728, 731, 732, 768, 771, 772, 812, 814, 815], "user_id": 834, "user_nid": 387, "user_orig_nids_0": 697, "usernam": 21, "userwarn": [145, 177, 178, 179, 688, 735, 775, 820, 841, 854], "user\uac00": 812, "user\uc640": [790, 812], "usr": [820, 829], "usual": [4, 10, 21, 332, 459, 558, 694, 698, 708, 712, 714, 716, 720, 724, 725, 730, 732, 821, 828, 831, 834, 835, 840, 852, 855], "util": [1, 4, 11, 13, 146, 169, 183, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 289, 291, 295, 303, 305, 308, 314, 315, 316, 346, 382, 383, 387, 445, 456, 457, 458, 459, 567, 683, 684, 685, 688, 691, 692, 693, 697, 701, 715, 720, 723, 724, 725, 729, 732, 735, 737, 738, 763, 764, 765, 775, 777, 778, 782, 807, 808, 809, 819, 824, 829, 840, 841, 844, 845, 854, 858, 861], "utransform": 865, "utyp": [125, 126, 387, 548, 635, 718, 731, 761, 771, 804, 814], "uv": [51, 61, 88, 558, 675], "uva": [210, 291, 295, 558, 562], "v": [4, 5, 21, 22, 27, 35, 48, 51, 57, 60, 61, 62, 63, 87, 88, 90, 93, 94, 107, 114, 120, 121, 131, 161, 178, 179, 226, 227, 230, 244, 245, 254, 256, 258, 260, 262, 268, 270, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 297, 319, 334, 338, 344, 345, 352, 391, 395, 401, 402, 404, 405, 407, 408, 412, 415, 417, 418, 420, 421, 474, 475, 500, 501, 557, 573, 621, 622, 623, 624, 625, 634, 635, 643, 649, 662, 675, 700, 703, 704, 705, 707, 708, 709, 718, 725, 726, 730, 731, 732, 744, 747, 748, 749, 751, 752, 753, 757, 761, 765, 766, 770, 771, 772, 785, 788, 789, 790, 792, 793, 795, 799, 804, 809, 810, 813, 814, 815, 820, 823, 830, 838, 839, 852, 854, 858, 861, 864, 865], "v0": 781, "v1": 823, "v100": [14, 722, 806], "v2": 823, "v3": 823, "v_": 854, "v_1": 823, "v_2": 823, "v_a": 695, "v_add_": 5, "v_add_u": 5, "v_attr": 125, "v_b": [388, 420, 459, 695, 853], "v_div_": 5, "v_div_u": 5, "v_dot_": 5, "v_dot_u": 5, "v_fea": [404, 412, 415, 421], "v_feat": [401, 402, 405, 407, 408, 418], "v_i": [405, 731, 771, 814, 855, 858, 865], "v_j": [864, 865], "v_k": [858, 865], "v_max": 861, "v_mul_": 5, "v_mul_u": 5, "v_p": 434, "v_proj": 820, "v_sub_": 5, "v_sub_u": 5, "vacabulari": 184, "vaganova": 853, "val": [101, 102, 134, 137, 138, 139, 140, 149, 155, 168, 171, 180, 182, 185, 186, 187, 188, 192, 193, 331, 503, 568, 577, 587, 588, 592, 594, 597, 598, 599, 600, 601, 605, 607, 608, 609, 610, 611, 612, 613, 614, 616, 617, 618, 619, 620, 622, 626, 627, 629, 630, 818, 819, 820, 821, 823, 834, 835, 836, 838, 849, 870], "val1": [616, 628], "val2": [616, 628], "val_acc": [818, 819, 821, 836, 838, 853, 870], "val_edg": [139, 157, 158, 191, 849], "val_edge_mask": [157, 158, 191], "val_g": [157, 158, 191], "val_idx": [138, 140, 820], "val_lik": 823, "val_load": 870, "val_loss": 853, "val_mask": [25, 137, 140, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 171, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 689, 691, 732, 737, 772, 777, 815, 818, 819, 821, 836, 838, 841, 848], "val_metr": 820, "val_nid": 848, "val_set": [157, 158, 191, 870], "val_siz": [161, 162, 163, 600, 608, 612, 613, 614, 615, 620, 622, 626, 820, 823], "valid": [5, 25, 91, 125, 131, 138, 139, 140, 147, 150, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173, 174, 175, 176, 181, 191, 192, 194, 195, 197, 198, 205, 207, 249, 292, 309, 314, 446, 681, 690, 694, 697, 716, 728, 732, 736, 776, 812, 815, 818, 819, 827, 828, 829, 831, 833, 834, 835, 836, 838, 839, 841, 853, 855, 858, 861, 865, 870, 871], "valid_data": [164, 166], "valid_dataload": [820, 831, 848], "valid_it": 865, "valid_label": [690, 736, 776], "valid_load": [690, 736, 776], "valid_mask": [173, 732, 772, 815], "valid_nid": 848, "valid_r": 173, "valid_ratio": 173, "valid_set": [829, 831, 871], "validation_set": [309, 314, 829, 831, 833, 834, 835, 871], "valu": [4, 9, 12, 22, 23, 30, 31, 34, 51, 57, 58, 61, 62, 63, 73, 88, 89, 93, 113, 114, 115, 117, 120, 121, 126, 131, 137, 147, 148, 156, 164, 174, 178, 179, 183, 184, 197, 205, 210, 214, 216, 219, 220, 240, 241, 242, 244, 245, 246, 250, 287, 291, 292, 294, 295, 296, 297, 298, 299, 302, 303, 305, 308, 310, 315, 316, 317, 321, 325, 329, 332, 333, 334, 335, 339, 340, 345, 353, 357, 383, 385, 387, 389, 393, 394, 395, 396, 398, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 415, 418, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 436, 441, 444, 446, 447, 455, 474, 475, 476, 479, 481, 484, 486, 503, 505, 507, 511, 513, 519, 521, 525, 527, 540, 541, 550, 556, 561, 563, 570, 577, 580, 581, 582, 583, 585, 587, 590, 591, 592, 594, 597, 598, 599, 600, 601, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 626, 627, 628, 629, 630, 633, 651, 665, 667, 669, 687, 689, 696, 697, 722, 725, 726, 729, 774, 819, 820, 823, 829, 841, 852, 854, 855, 858, 864, 865, 871], "valueerror": 695, "valueobject": 22, "van": 858, "vanilla": [820, 865], "vanillar": 820, "vanish": 416, "var": [397, 419], "vare": 186, "varepsilon": [413, 865], "vari": [689, 724, 725, 819, 834, 835], "variabl": [21, 245, 475, 696, 817, 837, 844, 845, 854], "varianc": [397, 419], "variant": [214, 245, 475, 563, 852, 855], "variat": [214, 297, 303, 563, 854], "varieti": [701, 861, 865], "variou": [4, 14, 221, 305, 419, 694, 720, 823, 834, 835, 837, 840, 864], "vast": 837, "vaswani": 820, "vcpu": 14, "ve": [823, 848], "vec": [150, 402, 407, 408, 819, 855], "vector": [128, 129, 159, 214, 216, 219, 232, 239, 240, 353, 354, 383, 384, 387, 397, 402, 405, 412, 418, 425, 439, 440, 445, 570, 594, 597, 598, 599, 601, 608, 609, 610, 612, 613, 614, 615, 619, 621, 622, 623, 624, 625, 626, 633, 669, 685, 689, 697, 702, 728, 818, 819, 821, 823, 836, 837, 839, 840, 848, 852, 855, 858, 861, 864, 865, 866, 868], "vector_v": 823, "venu": 649, "venv": 829, "verbos": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 430, 687, 691, 734, 737, 774, 777], "veri": [4, 10, 22, 122, 184, 694, 701, 714, 716, 717, 719, 728, 730, 731, 848, 849, 858, 862, 865, 868], "verifi": [21, 130, 200, 635, 725, 854], "verify_ssl": 200, "versa": [854, 855], "versatil": 816, "versin": 809, "version": [4, 10, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 216, 245, 401, 425, 475, 565, 689, 697, 728, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 817, 818, 819, 820, 821, 823, 824, 828, 829, 831, 834, 835, 852, 861, 864, 871], "vert": [416, 438, 452, 456], "vertex": [6, 214, 239, 291, 303, 315, 354, 412, 563], "vertic": [214, 303, 315, 353, 563, 700, 854], "vh": 137, "via": [5, 11, 22, 41, 93, 113, 122, 214, 216, 234, 297, 303, 309, 315, 394, 395, 396, 409, 429, 431, 457, 548, 549, 563, 567, 689, 693, 700, 702, 713, 714, 715, 716, 719, 722, 731, 816, 834, 835, 837, 838, 839, 840, 845, 848], "viabl": 697, "vibrat": [178, 179], "vice": [854, 855], "vid": [58, 561], "video": 137, "view": [4, 9, 43, 44, 46, 51, 74, 77, 103, 104, 246, 335, 339, 340, 458, 476, 540, 556, 561, 562, 574, 575, 608, 622, 673, 674, 676, 678, 679, 729, 731, 771, 803, 814, 820, 853, 855, 858, 861, 864, 865], "viewbackward": [391, 439], "viewbackward0": 394, "virtual": [10, 210, 446, 683, 715, 829], "visibl": [116, 130, 338, 344, 557, 634, 643], "vision": [820, 837, 866, 868], "visit": [0, 22, 217, 230, 558], "visitattr": 22, "visitor": 22, "visual": [817, 819, 858, 864], "viz_idx": 865, "vocab": [184, 858], "vocab_fil": 184, "vocab_s": [184, 858, 865], "vocabulari": [174, 184, 858], "void": 22, "vol": [240, 354], "volta": [9, 708, 793], "volum": [240, 354], "vote": 161, "vs2019": 817, "vtype": [125, 126, 387, 548, 561, 635, 718, 731, 761, 771, 804, 814], "w": [5, 21, 27, 28, 60, 87, 114, 115, 118, 119, 122, 126, 167, 250, 335, 339, 340, 344, 383, 387, 392, 393, 396, 400, 407, 408, 409, 415, 417, 420, 421, 426, 427, 540, 551, 552, 556, 650, 656, 657, 658, 659, 662, 664, 667, 668, 670, 671, 681, 702, 709, 714, 718, 722, 725, 728, 729, 746, 753, 758, 761, 765, 768, 769, 782, 787, 795, 800, 804, 806, 809, 812, 818, 819, 821, 823, 834, 835, 838, 852, 853, 855, 858, 861], "w1": [416, 821, 839], "w2": [821, 839], "w_": [408, 414, 707, 751, 792, 852, 865], "w_0": [420, 853], "w_comp": 853, "w_h": 865, "w_i": 401, "w_iou": 858, "w_j": 401, "w_k": [412, 865], "w_kcdot": 865, "w_l": [709, 753, 795], "w_new": 5, "w_o": [459, 865], "w_ocdot": 865, "w_q": 865, "w_qcdot": 865, "w_r": [420, 709, 753, 795, 853], "w_t": 388, "w_v": 865, "w_vcdot": 865, "wa": [9, 141, 158, 162, 182, 186, 191, 391, 443, 704, 819, 848, 853, 858, 865], "wai": [1, 4, 5, 126, 209, 232, 239, 250, 353, 354, 397, 402, 419, 455, 658, 659, 664, 671, 687, 691, 694, 704, 705, 712, 714, 716, 718, 723, 731, 821, 823, 837, 838, 848, 849, 855, 865], "wait": [21, 294, 298, 317], "walk": [13, 217, 383, 387, 415, 550, 558, 560, 561, 562, 665, 668, 848, 849], "walk_length": [383, 560], "walkthrough": [718, 823], "wang": [852, 854, 855, 858], "want": [4, 21, 22, 41, 210, 214, 216, 217, 219, 245, 297, 475, 563, 688, 689, 694, 697, 700, 705, 711, 713, 714, 717, 719, 720, 728, 729, 731, 732, 785, 828, 829, 831, 837, 839, 841, 848, 855], "warn": [166, 829, 841, 852, 853, 854, 855, 858, 861, 864, 865], "watch": [43, 864], "wayn": 167, "wb": 849, "wc": 416, "we": [4, 6, 9, 14, 21, 22, 27, 28, 31, 41, 45, 68, 79, 82, 105, 131, 133, 137, 144, 171, 179, 180, 181, 182, 188, 207, 210, 220, 234, 240, 241, 245, 297, 314, 339, 340, 341, 353, 354, 357, 387, 388, 391, 398, 399, 400, 409, 415, 420, 432, 434, 474, 475, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 558, 563, 569, 574, 575, 640, 683, 685, 689, 693, 694, 695, 696, 697, 705, 712, 713, 714, 715, 716, 719, 720, 721, 722, 723, 727, 728, 731, 732, 781, 816, 817, 818, 819, 820, 821, 823, 824, 828, 829, 831, 834, 835, 838, 839, 840, 844, 845, 848, 849, 852, 853, 854, 855, 861, 864, 865, 870, 871], "web": [132, 155, 187, 193, 558, 664], "webkb": [155, 187, 193], "websit": [145, 167, 180, 691, 737, 777, 817], "wedg": 244, "week": 161, "weight": [5, 6, 21, 118, 119, 120, 125, 126, 145, 245, 249, 250, 297, 303, 308, 315, 316, 347, 348, 349, 350, 357, 383, 384, 385, 387, 388, 390, 393, 395, 400, 402, 405, 406, 407, 408, 409, 410, 412, 415, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 443, 444, 457, 459, 475, 550, 551, 552, 558, 563, 564, 566, 631, 632, 657, 658, 659, 664, 665, 668, 696, 700, 701, 702, 710, 717, 721, 724, 727, 745, 746, 754, 760, 764, 782, 786, 787, 796, 803, 808, 818, 819, 821, 823, 838, 841, 852, 853, 855, 858, 861, 864, 865, 871], "weight1": 782, "weight2": 782, "weight_and_sum": 443, "weight_anim": 864, "weight_column": 558, "weight_decai": [721, 722, 806, 818, 853, 858], "weight_nam": [118, 119], "weighted_reduc": [829, 871], "weightedsageconv": 838, "weihua916": 165, "welcom": [21, 723, 865], "well": [4, 7, 21, 56, 96, 125, 126, 130, 173, 220, 236, 240, 328, 554, 635, 683, 687, 688, 689, 691, 697, 698, 703, 705, 712, 714, 716, 717, 727, 728, 730, 731, 790, 812, 821, 824, 830, 837, 841, 845, 848, 852, 855, 864, 865], "were": [137, 149, 180, 182, 185, 718, 817, 861, 865], "west": [691, 737, 777], "wh": [427, 429, 710, 754, 796], "wh_": [710, 754, 796], "what": [9, 21, 22, 240, 567, 720, 731, 732, 821, 823, 828, 830, 848, 852, 858, 861, 865], "whatev": 21, "wheel": [172, 818, 819, 820, 821, 823, 828, 829, 831, 834, 835], "when": [1, 4, 10, 14, 20, 21, 22, 31, 36, 41, 48, 51, 56, 57, 68, 70, 80, 89, 125, 130, 131, 146, 157, 158, 168, 169, 173, 191, 200, 210, 213, 214, 221, 222, 223, 224, 225, 232, 235, 239, 240, 241, 242, 246, 247, 249, 287, 290, 291, 293, 294, 297, 298, 303, 308, 310, 314, 315, 317, 328, 335, 339, 340, 341, 342, 353, 354, 388, 389, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 412, 414, 415, 420, 422, 425, 429, 431, 432, 433, 434, 436, 476, 477, 540, 547, 557, 559, 562, 563, 564, 565, 566, 569, 570, 633, 635, 641, 643, 661, 669, 689, 694, 695, 696, 697, 701, 705, 714, 716, 717, 719, 722, 725, 726, 730, 821, 823, 831, 834, 835, 839, 840, 844, 848, 852, 854, 861, 865], "whenev": [708, 839], "whenver": 861, "where": [4, 9, 10, 14, 21, 26, 34, 45, 48, 53, 57, 58, 62, 63, 73, 79, 82, 100, 105, 120, 128, 129, 130, 131, 135, 136, 157, 159, 162, 171, 186, 210, 214, 215, 216, 219, 226, 227, 240, 243, 244, 250, 297, 305, 310, 319, 321, 332, 333, 334, 337, 338, 341, 342, 343, 344, 345, 352, 357, 388, 389, 390, 392, 393, 394, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 474, 499, 500, 501, 547, 550, 558, 559, 560, 562, 565, 569, 570, 613, 614, 616, 626, 633, 645, 646, 658, 659, 662, 664, 667, 668, 669, 673, 674, 676, 678, 679, 680, 683, 689, 691, 695, 696, 697, 698, 700, 709, 712, 715, 726, 728, 729, 730, 731, 732, 794, 818, 819, 820, 821, 823, 830, 834, 835, 836, 837, 838, 839, 852, 853, 854, 855, 858, 861, 865, 870], "wherea": [854, 855], "whether": [4, 9, 10, 21, 48, 53, 54, 57, 58, 62, 63, 65, 66, 68, 117, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 210, 213, 214, 216, 219, 220, 226, 231, 234, 235, 236, 238, 240, 241, 242, 246, 287, 290, 297, 298, 303, 305, 308, 309, 310, 315, 316, 336, 344, 346, 352, 353, 354, 388, 397, 401, 402, 404, 405, 407, 408, 409, 413, 417, 419, 420, 430, 433, 436, 446, 452, 457, 476, 547, 559, 563, 564, 565, 566, 645, 646, 682, 685, 687, 692, 696, 697, 718, 719, 728, 731, 774, 778, 823, 833, 834, 835, 836, 839, 841, 854, 861, 865], "which": [0, 1, 4, 9, 10, 20, 21, 22, 32, 36, 41, 42, 51, 56, 61, 88, 92, 116, 120, 122, 130, 131, 140, 143, 146, 148, 158, 161, 162, 163, 169, 171, 178, 179, 180, 182, 183, 186, 188, 189, 190, 195, 197, 205, 210, 211, 212, 217, 219, 222, 223, 224, 225, 230, 231, 236, 240, 244, 245, 287, 289, 292, 293, 297, 300, 303, 305, 306, 308, 309, 310, 314, 315, 316, 319, 328, 334, 335, 338, 339, 340, 344, 345, 353, 357, 385, 388, 389, 391, 392, 394, 395, 396, 397, 399, 401, 404, 405, 407, 408, 409, 412, 415, 418, 420, 422, 426, 428, 430, 444, 445, 446, 447, 450, 453, 454, 458, 474, 475, 476, 540, 541, 548, 549, 556, 557, 558, 559, 560, 562, 565, 570, 574, 575, 612, 619, 626, 633, 634, 635, 640, 643, 645, 646, 649, 651, 656, 659, 664, 667, 668, 669, 673, 676, 681, 684, 685, 688, 689, 691, 693, 694, 696, 697, 698, 701, 702, 703, 704, 708, 709, 710, 713, 714, 715, 716, 717, 718, 719, 720, 722, 725, 726, 728, 729, 732, 796, 816, 817, 818, 823, 827, 830, 834, 835, 836, 838, 839, 844, 845, 848, 854, 855, 858, 861, 865, 870], "while": [5, 9, 22, 68, 73, 92, 114, 115, 147, 179, 197, 205, 210, 214, 240, 291, 297, 309, 320, 399, 400, 415, 426, 427, 428, 429, 430, 431, 446, 563, 565, 616, 685, 694, 695, 696, 697, 701, 709, 713, 722, 730, 821, 824, 831, 848, 854, 855, 861], "whitespac": 696, "whl": 823, "who": [21, 145, 159, 693, 712, 816, 848], "whole": [173, 210, 240, 667, 697, 708, 715, 717, 721, 725, 817, 854, 865], "whom": 145, "whose": [4, 10, 54, 116, 118, 119, 121, 125, 126, 131, 221, 240, 242, 297, 299, 300, 313, 334, 338, 341, 385, 426, 476, 477, 547, 559, 574, 575, 634, 657, 658, 659, 660, 664, 697, 712, 821, 854], "why": [22, 830, 855], "wi": 416, "wide": [1, 438, 689, 732, 836], "width": [854, 864], "wiki": [192, 848], "wikic": 192, "wikipedia": [134, 149, 182, 185, 192, 579, 581, 582, 589, 612, 613, 614, 837], "wildcard": 26, "win": [116, 634, 643], "window": [183, 207, 297, 300, 313, 845], "window_s": [383, 387], "wisconsin": 193, "wise": [4, 5, 13, 73, 113, 219, 220, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 392, 451, 551, 552, 572, 573, 600, 620, 645, 646, 695, 707, 708, 710, 781, 792, 796, 820, 839, 841, 855, 865], "wish": [21, 117, 130, 712, 714, 719, 728, 816], "with_label": [854, 858, 861], "within": [4, 20, 21, 161, 209, 287, 297, 300, 305, 310, 313, 353, 356, 383, 387, 426, 427, 428, 429, 430, 431, 433, 541, 547, 695, 710, 726, 802, 821, 854, 861, 865], "without": [5, 6, 21, 27, 28, 114, 115, 116, 131, 241, 242, 245, 246, 287, 290, 293, 297, 301, 303, 308, 315, 316, 324, 334, 415, 432, 434, 475, 548, 549, 552, 555, 563, 564, 565, 612, 613, 614, 626, 643, 671, 688, 689, 705, 708, 722, 730, 790, 830, 854, 858], "wm": 643, "wmt14": 865, "wn18": 191, "word": [21, 108, 135, 136, 137, 155, 180, 182, 184, 187, 193, 210, 213, 245, 385, 475, 640, 694, 836, 858, 861, 865], "word2vec": 159, "wordid": 858, "wordnet": 191, "work": [3, 4, 8, 9, 11, 21, 116, 118, 119, 188, 214, 216, 219, 293, 389, 401, 404, 405, 407, 408, 409, 412, 415, 422, 455, 558, 634, 658, 659, 660, 661, 662, 664, 665, 668, 686, 687, 698, 700, 712, 713, 715, 716, 727, 728, 732, 829, 837, 839, 841, 845, 854, 859, 861, 865, 868, 870, 871], "workaround": 855, "worker": [4, 188, 235, 291, 694, 698, 715, 740, 780, 783, 801, 845], "workflow": [836, 839], "workload": [13, 232, 239, 693, 697, 712, 725, 823, 845, 870], "workspac": [698, 742, 782, 783, 848], "workspace\ub294": 783, "workspace\uc758": 783, "world": [162, 164, 293, 697, 782, 830, 837, 861, 865], "world_siz": [829, 844, 870, 871], "would": [9, 21, 26, 89, 130, 131, 210, 214, 216, 219, 297, 302, 321, 352, 393, 401, 402, 405, 407, 408, 418, 421, 422, 440, 558, 563, 635, 645, 646, 709, 712, 714, 716, 718, 727, 728, 830, 838, 839, 841, 858, 861, 865], "wouldn": 861, "wrap": [131, 210, 211, 212, 298, 302, 717, 720, 722, 806, 829, 844, 865, 870, 871], "wrapper": [8, 21, 22, 294, 302, 317, 829, 844, 871], "writabl": 841, "write": [4, 21, 22, 309, 318, 385, 567, 643, 652, 694, 697, 707, 713, 725, 728, 782, 818, 821, 834, 835, 836, 839, 841, 842, 854, 858, 861], "write_t": 697, "writeback": 643, "writeback_map": [111, 643], "writer": 134, "written": [9, 708, 822, 828, 829, 831, 854, 865], "wrong": [21, 422], "wu": 750, "wv": 865, "www": [162, 750, 818, 819, 820, 821, 828, 829, 831, 838, 845], "x": [5, 6, 9, 21, 34, 35, 93, 94, 100, 113, 122, 132, 133, 144, 170, 183, 184, 246, 341, 351, 383, 388, 390, 392, 394, 395, 396, 397, 403, 416, 417, 419, 422, 423, 425, 432, 433, 434, 435, 436, 437, 442, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 547, 569, 609, 616, 627, 667, 668, 681, 685, 697, 702, 703, 714, 716, 717, 719, 721, 722, 728, 731, 746, 747, 757, 758, 759, 760, 762, 768, 771, 787, 788, 799, 800, 802, 803, 805, 806, 812, 814, 817, 818, 819, 820, 821, 823, 828, 829, 831, 837, 848, 849, 852, 858, 861, 864, 865, 871], "x1": [341, 569, 608, 619, 823], "x2": [341, 569, 608, 619, 823], "x64": 817, "x86_64": 845, "x_": [341, 416, 432, 434, 500, 569, 572, 823], "x_0": 416, "x_1": [416, 823], "x_2": [416, 823], "x_c": 416, "x_dst": [385, 759, 802], "x_e": [501, 572], "x_i": [403, 412, 414, 416, 438, 667, 823, 865], "x_j": [403, 412, 823, 858, 865], "x_sign": 819, "x_size": 858, "x_src": 385, "x_type": 388, "x_u": [500, 501, 573, 707, 751, 792], "x_uv": 861, "x_v": [500, 501, 573, 707, 751, 792], "xavier": [384, 405, 407, 408, 421, 422], "xavier_normal_": 855, "xavier_uniform_": [10, 428, 430, 455, 721, 724, 764, 808, 853], "xcode": 817, "xend": 865, "xeon": [722, 844], "xi": [245, 475, 819], "xlabel": 864, "xrightarrow": 649, "xtick": 864, "xuv": 861, "xv1": 823, "xv2": 823, "xw_t": 388, "xxx": [0, 696, 741, 782], "xxx_edg": [696, 782], "xxx_node": [696, 782], "xxx_note": 782, "xxx_stat": [696, 782], "xxx\ub294": 782, "y": [9, 21, 120, 184, 244, 245, 345, 383, 388, 426, 427, 444, 447, 457, 474, 475, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 702, 716, 717, 721, 722, 728, 746, 757, 759, 768, 787, 799, 802, 806, 812, 817, 819, 821, 823, 828, 829, 837, 839, 858, 864, 871], "y1": 9, "y_": [245, 341, 432, 434, 475, 569, 731, 771, 814, 839], "y_dst": 385, "y_hat": [714, 721, 820, 821, 829, 871], "y_i": [829, 871], "y_pred": 820, "y_true": 820, "y_u": [244, 345, 474], "y_v": [120, 244, 345, 474], "yaml": [148, 309, 314, 832], "yaml_cont": [834, 835], "yaml_data": 309, "yandex": 180, "ye": [858, 865], "year": [697, 700], "yellow": 830, "yelp": [162, 163, 194], "yet": [4, 715, 845], "yield": [220, 290, 294, 298, 317, 406, 416, 640, 641, 714, 719, 830, 831, 840, 855], "ying": 558, "yingtongd": 162, "yiran": 750, "yizhou": 72, "ylabel": 864, "you": [6, 9, 14, 21, 22, 26, 89, 114, 118, 119, 130, 131, 186, 210, 213, 214, 216, 217, 219, 287, 293, 317, 318, 334, 416, 422, 562, 563, 564, 565, 635, 685, 688, 689, 702, 708, 713, 714, 715, 717, 718, 719, 727, 728, 731, 732, 735, 775, 816, 817, 819, 822, 823, 825, 828, 829, 830, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 844, 845, 848, 849, 853, 854, 855, 856, 858, 861, 862, 864, 865, 868, 870, 871], "your": [6, 8, 9, 21, 118, 119, 145, 164, 166, 175, 177, 178, 179, 183, 184, 685, 691, 694, 708, 712, 713, 715, 716, 717, 718, 723, 727, 728, 732, 777, 830, 831, 836, 839, 842, 845, 861, 865], "yu": [852, 853, 854, 861], "yum": 817, "yyi": 0, "z": [9, 178, 393, 819, 854, 855, 865], "z2": 855, "z_": 357, "z_e": 572, "z_i": [391, 393, 855], "z_j": [391, 855], "z_list": 854, "z_v": [573, 854], "zachari": [167, 841], "zero": [4, 27, 28, 30, 43, 46, 70, 74, 89, 93, 103, 108, 113, 114, 115, 118, 119, 120, 122, 125, 130, 150, 178, 179, 210, 235, 240, 249, 297, 305, 310, 327, 342, 351, 389, 399, 401, 404, 405, 407, 408, 409, 412, 414, 415, 418, 422, 445, 449, 451, 455, 456, 457, 479, 480, 481, 482, 484, 485, 486, 487, 503, 505, 506, 507, 508, 511, 512, 513, 514, 519, 520, 521, 522, 525, 526, 527, 528, 557, 564, 565, 577, 578, 581, 582, 593, 594, 595, 597, 598, 599, 600, 601, 606, 608, 613, 614, 615, 616, 620, 622, 626, 628, 630, 633, 635, 641, 642, 643, 645, 646, 661, 669, 681, 683, 689, 694, 696, 697, 705, 715, 722, 725, 727, 728, 729, 740, 749, 757, 759, 767, 768, 780, 782, 790, 799, 802, 811, 812, 819, 823, 839, 841, 848, 854, 858, 861, 864, 865], "zero_grad": [383, 387, 426, 427, 428, 429, 430, 431, 693, 713, 714, 717, 719, 721, 722, 728, 730, 731, 732, 739, 757, 758, 760, 762, 768, 770, 771, 772, 779, 799, 800, 803, 805, 806, 812, 813, 814, 815, 818, 819, 820, 821, 828, 829, 831, 836, 838, 839, 840, 848, 849, 852, 853, 854, 855, 858, 870, 871], "zero_initi": 861, "zeros_lik": [757, 799, 849], "zhang": [750, 852, 853, 854, 855, 858, 861, 864, 865], "zhao": [858, 864], "zheng": [852, 853, 854, 855, 858, 861, 864, 865], "zhenkun": [315, 316], "zhiyu": 750, "zhiyuchen": 750, "zhjwy9343": 750, "zhou": [864, 865], "zihao": [858, 865], "zinc": 195, "zip": [165, 168, 172, 186, 688, 691, 716, 717, 721, 737, 775, 777, 818, 819, 821, 828, 829, 848, 849, 854, 864, 871], "zpve": [178, 179], "\u4e00\u4e2a\u4e8c\u5206\u56fe": 749, "\u4e00\u4e2a\u4ec5\u5e73\u8861\u56fe\u4e2d\u8282\u70b9": 741, "\u4e00\u4e2a\u53ef\u9009\u9879\u662f\u7528\u6237\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u793a\u4f8b\u68c0\u67e5\u4e0b\u8f7d\u540e\u6587\u4ef6\u7684sha": 735, "\u4e00\u4e2a\u540c\u6784\u56fe": 749, "\u4e00\u4e2a\u56fe\u6279\u6b21\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u5f20\u5927\u56fe": 770, "\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e0c\u671b": 771, "\u4e00\u4e2a\u5b50\u56fe\u5bf9\u5e94\u4e00\u79cd\u5173\u7cfb": 749, "\u4e00\u4e2a\u5e94\u7528\u4e8e": 753, "\u4e00\u4e2a\u5f02\u6784\u56fe\u7531\u4e00\u7cfb\u5217\u5b50\u56fe\u6784\u6210": 749, "\u4e00\u4e2a\u5f02\u6784\u56fe\u793a\u4f8b": 749, "\u4e00\u4e2a\u6279\u6b21\u4e2d\u4e0d\u540c\u7684\u56fe\u662f\u5b8c\u5168\u5206\u5f00\u7684": 770, "\u4e00\u4e2a\u662f\u8fb9\u7684\u96c6\u5408": 744, "\u4e00\u4e2a\u6709\u6548\u7684\u56fe\u540d\u79f0\u5e94\u8be5\u4ec5\u5305\u542b\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf": 741, "\u4e00\u4e2a\u6b63\u6837\u672c\u56fe": 760, "\u4e00\u4e2a\u6d88\u606f\u4f20\u9012\u8fd0\u7b97\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u51fd\u6570": 769, "\u4e00\u4e2a\u7528\u4e8e\u6307\u5b9a": 752, "\u4e00\u4e2a\u7528\u4e8e\u6307\u793a\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7684\u5b57\u6bb5\u540d": 752, "\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5d4c\u5165": 740, "\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b": 753, "\u4e00\u4e2a\u805a\u5408\u51fd\u6570\u548c\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570": 752, "\u4e00\u4e2a\u8d1f\u6837\u672c\u56fe": 760, "\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u805a\u5408\u64cd\u4f5c\u5305\u62ec": 752, "\u4e00\u4e9b\u6a21\u5757\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u805a\u5408\u51fd\u6570": 764, "\u4e00\u53f0\u673a\u5668\u53ef\u80fd\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b": 739, "\u4e00\u662f\u8282\u70b9\u7684\u96c6\u5408": 744, "\u4e00\u6761\u8fb9": 744, "\u4e00\u6761\u94fe\u8def0": 745, "\u4e00\u6837": 740, "\u4e00\u6b21\u6027\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684": 768, "\u4e00\u76f4\u5230\u8f93\u5165": 756, "\u4e00\u79cd\u5b58\u50a8\u5f02\u6784\u56fe\u7684\u5e38\u89c1\u65b9\u6cd5\u662f\u5728\u4e0d\u540c\u7684csv\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 749, "\u4e00\u822c\u6765\u8bf4": 752, "\u4e00\u822c\u6d41\u7a0b\u662f": 770, "\u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u591a\u5c42gnn\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 768, "\u4e0a\u56fe\u4e2d\u9690\u53bb\u4e86\u548c\u8ba1\u7b97\u4e0d\u76f8\u5173\u7684\u8fb9": 757, "\u4e0a\u7684\u5206\u5e03\u5f0f\u90bb\u5c45\u91c7\u6837\u63d0\u4f9b\u4e86": 740, "\u4e0a\u7684\u7279\u5f81\u4e3a": 751, "\u4e0a\u7684\u7684\u7279\u5f81\u4e3a": 751, "\u4e0a\u7684\u8282\u70b9": 757, "\u4e0a\u7684\u8bad\u7ec3\u53ea\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u6a21\u578b\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 772, "\u4e0a\u8c03\u7528\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570": 740, "\u4e0a\u8fd0\u884c": 740, "\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684for\u5faa\u73af\u4e3a\u5904\u7406\u5f02\u6784\u56fe\u8ba1\u7b97\u7684\u4e3b\u8981\u903b\u8f91": 766, "\u4e0a\u8ff0\u51fd\u6570\u7684\u6570\u5b66\u516c\u5f0f\u4e3a": 752, "\u4e0a\u9762\u4ee3\u7801\u91cc\u7684": 764, "\u4e0a\u9762\u7684dataloader\u4e00\u6b21\u8fed\u4ee3\u4f1a\u751f\u6210\u4e09\u4e2a\u8f93\u51fa": 762, "\u4e0a\u9762\u7684dgl": 762, "\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230": 735, "\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4e00\u4e2a": 735, "\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u4e86\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408\u7684\u8ba1\u7b97": 765, "\u4e0b\u4f8b\u7684\u8f93\u51fa\u8282\u70b9\u5305\u542b\u4e86\u6ca1\u6709\u5165\u8fb9\u7684\u5b64\u7acb\u8282\u70b9": 757, "\u4e0b\u56fe\u663e\u793a\u4e86\u4ee5\u8282\u70b98\u4e3a\u79cd\u5b50\u8282\u70b9\u65f6\u7b2c\u4e8c\u4e2agnn\u5c42\u6240\u9700\u7684\u5757": 757, "\u4e0b\u56fe\u663e\u793a\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\u53ca\u5b83\u4eec\u95f4\u7684\u76f8\u4e92\u4f5c\u7528": 739, "\u4e0b\u6587\u5c55\u793a\u4e86sageconv\u793a\u4f8b\u4e2d\u7684": 765, "\u4e0b\u6587\u662f\u5728\u4e00\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 771, "\u4e0b\u6587\u7ee7\u7eed\u4f7f\u7528\u4e0a\u8ff0\u7684\u4f8b\u5b50": 757, "\u4e0b\u7684\u76ee\u5f55": 735, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": [733, 750], "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e\u96c6\u7684url": 734, "\u4e0b\u8f7d\u6587\u4ef6": 735, "\u4e0b\u9762\u4e2d\u4f7f\u7528": 737, "\u4e0b\u9762\u4ee5": 737, "\u4e0b\u9762\u4f7f\u7528": 737, "\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684": 737, "\u4e0b\u9762\u5c55\u793a\u4e86\u5728\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684\u793a\u4f8b": 742, "\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50": 749, "\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u901a\u8fc7\u5bf9\u8282\u70b9\u7279\u5f81\u964d\u7ef4\u6765\u51cf\u5c11\u6d88\u606f\u7ef4\u5ea6\u7684\u793a\u4f8b": 753, "\u4e0b\u9762\u662f\u4f7f\u7528\u70b9\u79ef\u8ba1\u7b97\u8fb9\u5f97\u5206\u7684\u4f8b\u5b50": 771, "\u4e0b\u9762\u662f\u901a\u8fc7\u4f7f\u7528\u51c6\u786e\u6027\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u4e00\u4e2a\u4f8b\u5b50": 772, "\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u4e13\u95e8\u7528\u4e8e\u5728\u90bb\u5c45\u91c7\u6837\u65f6\u5220\u9664\u5c0f\u6279\u6b21\u7684\u4e00\u4e9b\u8fb9\u548c\u5b83\u4eec\u7684\u53cd\u5411\u8fb9": 758, "\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 772, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f": 761, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u5728dgl\u4e2d\u521b\u5efa\u5f02\u6784\u56fe\u7684\u793a\u4f8b": 749, "\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4f7f\u7528\u4e86": 748, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b": 734, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e00\u4e2a\u62e5\u6709": 768, "\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe": 771, "\u4e0b\u9762\u7684\u52a8\u753b\u5c55\u793a\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b": 759, "\u4e0b\u9762\u7684\u6d41\u7a0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6a21\u7248\u7684\u5de5\u4f5c\u65b9\u5f0f": 734, "\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u4fdd\u5b58\u548c\u8bfb\u53d6\u56fe\u548c\u6570\u636e\u96c6\u4fe1\u606f\u7684\u5217\u8868": 738, "\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8bad\u7ec3\u96c6\u62c6\u5206": 740, "\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5\u7684\u793a\u4f8b": 760, "\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e": [760, 762], "\u4e0d\u540c\u540d\u79f0\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u5f62\u72b6": 746, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u5355\u72ec\u7684id": 749, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e38\u5e38\u5177\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u5c5e\u6027": 754, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6216\u5927\u5c0f": 749, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6709\u5355\u72ec\u7684id": 749, "\u4e0d\u5fc5\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5": 749, "\u4e0d\u662fpytorch\u7684nn\u6a21\u5757": 740, "\u4e0d\u80fd\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u5b50\u96c6": 746, "\u4e0d\u8fc7": 748, "\u4e0d\u8fc7\u5927\u90e8\u5206\u7684dgl": 748, "\u4e0e": [739, 740], "\u4e0e\u4e0d\u5b58\u5728\u7684\u8fb9": 760, "\u4e0e\u4e4b\u524d\u7684\u4efb\u52a1\u7c7b\u4f3c": 770, "\u4e0e\u540c\u6784\u56fe\u7684\u60c5\u51b5\u7c7b\u4f3c": 749, "\u4e0e\u5f02\u6784\u56fe\u76f8\u5173\u8054\u7684": 749, "\u4e0e\u6574\u56fe\u5206\u7c7b\u4e0d\u540c": 737, "\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92": 739, "\u4e0e\u6b64\u540c\u65f6": 741, "\u4e0e\u8fb9\u7279\u5f81": 752, "\u4e0e\u901a\u5e38\u4ee5\u5f20\u91cf\u4e3a\u53c2\u6570\u7684pytorch": 765, "\u4e0e\u91c7\u6837\u5668\u8fdb\u884c\u4ea4\u4e92\u4ee5\u83b7\u5f97\u5c0f\u6279\u6b21\u6570\u636e": 739, "\u4e0e\u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5668\u8fde\u63a5\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u5b83\u4eec": 740, "\u4e14\u53ea\u8003\u8651\u5e73\u5747\u805a\u5408\u51fd\u6570\u7684\u60c5\u51b5": 761, "\u4e14\u663e\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u5b58\u50a8\u7684\u8bbe\u5907\u4fe1\u606f": 748, "\u4e24\u4e2a\u51fd\u6570\u5728\u53d8\u6362\u540e\u7684\u56fe\u4e0a\u91cd\u65b0\u52a0\u5165\u6279\u6b21\u4fe1\u606f": 770, "\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684numpy\u6570\u7ec4\u4f1a\u5f88\u5927": 741, "\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u8fb9\u7684\u8054\u7cfb": 758, "\u4e24\u540d\u4f5c\u8005\u53ef\u4ee5\u5728\u4e0d\u540c\u5e74\u4efd\u5171\u540c\u7f72\u540d\u6587\u7ae0": 744, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b": 768, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 768, "\u4e2a\u4eba\u59d3\u540d": 750, "\u4e2a\u4eba\u94fe\u63a5": 750, "\u4e2a\u5bf9\u5e94\u7684\u8d1f\u91c7\u6837\u6837\u672c": 771, "\u4e2a\u8282\u70b9\u6216\u8fb9": 748, "\u4e2a\u8282\u70b9\u7684\u56fe\u4e0a\u8fd0\u884c\u7684": 756, "\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 760, "\u4e2d": [735, 737, 738, 744, 745, 749, 762], "\u4e2d\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u6574\u56fe\u4e0a\u8bad\u7ec3\u4e00\u4e2a2\u5c42\u7684rgcn\u6a21\u578b": 762, "\u4e2d\u4ecb\u7ecd\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 767, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u65b9\u6cd5\u548c": 767, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236": 772, "\u4e2d\u521b\u5efa": 740, "\u4e2d\u53ef\u4ee5\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801": 737, "\u4e2d\u5904\u7406\u6bcf\u4e2a\u6570\u636e\u5b9e\u4f8b\u662f\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5": 738, "\u4e2d\u5b58\u50a8\u7ed3\u679c": 752, "\u4e2d\u5b9a\u4e49\u7684": 768, "\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u96c6\u7684\u57fa\u7c7b": 734, "\u4e2d\u5b9e\u73b0\u4e86\u5e38\u7528\u7684\u6d88\u606f\u51fd\u6570\u548c\u805a\u5408\u51fd\u6570\u4f5c\u4e3a": 752, "\u4e2d\u5df2\u7ecf\u6709\u4e86": 772, "\u4e2d\u6240\u4ecb\u7ecd\u7684": 760, "\u4e2d\u6240\u8ff0\u7684\u5168\u56fe\u8bad\u7ec3": 756, "\u4e2d\u6240\u8ff0\u7684\u8fb9\u56de\u5f52\u6a21\u578b\u76f8\u540c": 771, "\u4e2d\u6240\u91c7\u6837\u7684\u8282\u70b9": 771, "\u4e2d\u627e\u5230": 737, "\u4e2d\u6307\u5b9a": 741, "\u4e2d\u6307\u5b9a\u66f4\u65b0\u51fd\u6570": 752, "\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 742, "\u4e2d\u6587\u7248": [686, 687, 688, 690, 691, 692, 693, 694, 699, 700, 701, 702, 703, 704, 705, 707, 708, 709, 710, 711, 712, 714, 716, 717, 718, 719, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732], "\u4e2d\u6587\u7248\u94fe\u63a5": 816, "\u4e2d\u662f\u5426\u5b58\u6709\u5904\u7406\u540e\u7684\u6570\u636e": 734, "\u4e2d\u67e5\u770b\u5f02\u6784\u56fe\u5377\u79ef": 772, "\u4e2d\u6807\u8bc6\u8282\u70b9\u6570\u636e": 740, "\u4e2d\u7684": 740, "\u4e2d\u7684\u4e00\u4e2a": 754, "\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20": 762, "\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9": 749, "\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801": 737, "\u4e2d\u7684\u4f8b\u5b50": 772, "\u4e2d\u7684\u505a\u6cd5\u7c7b\u4f3c": 772, "\u4e2d\u7684\u5206\u533a\u6570\u636e\u548c\u76f8\u5173\u6587\u4ef6": 742, "\u4e2d\u7684\u5b57\u6bb5\u540d": 752, "\u4e2d\u7684\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 770, "\u4e2d\u7684\u7279\u5f81\u6765\u52a0\u8f7d\u6807\u7b7e": 762, "\u4e2d\u7684\u8fb9": 749, "\u4e2d\u8282\u70b9\u7684\u96c6\u5408": 770, "\u4e2d\u95f4\u67d0\u4e00\u5c42\u5bf9\u5e94\u7684\u8fb9\u754c\u9700\u8981\u5305\u542b\u8be5\u5c42\u53ca\u6240\u6709\u540e\u7eed\u5c42\u8ba1\u7b97\u6d89\u53ca\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 757, "\u4e2d\u95f4\u6d88\u606f": 752, "\u4e3a\u4e86\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3": 741, "\u4e3a\u4e86\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u83b7\u5f97\u5e73\u8861\u7684\u5de5\u4f5c\u8d1f\u8f7d": 741, "\u4e3a\u4e86\u5904\u7406\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u672c\u5730\u78c1\u76d8\u4e0a\u7684\u56fe\u6570\u636e\u96c6": 734, "\u4e3a\u4e86\u5b8c\u6210\u5355\u4e2a\u56fe\u7684\u9884\u6d4b": 770, "\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684": 749, "\u4e3a\u4e86\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u7c7b": 772, "\u4e3a\u4e86\u5e76\u884c\u5316\u8ba1\u7b97": 739, "\u4e3a\u4e86\u6307\u4ee3\u591a\u6761\u8fb9": 748, "\u4e3a\u4e86\u8bbe\u7f6e": 749, "\u4e3a\u4e86\u968f\u673a": 762, "\u4e3a\u4f8b": 737, "\u4e3a\u540e\u7eed\u5728\u56fe\u4e0a\u8fdb\u884c\u7684\u8ba1\u7b97\u4e0e\u5206\u6790\u7684\u6027\u80fd\u6539\u5584\u63d0\u4f9b\u53ef\u80fd": 737, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": [750, 756, 762], "\u4e3a\u5f02\u6784\u56fe\u4fee\u6539gnn\u6a21\u5757\u7684\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684": 761, "\u4e3a\u5f02\u6784\u56fe\u751f\u6210\u8fb9\u754c\u4e0e\u4e3a\u540c\u6784\u56fe\u751f\u6210\u8fb9\u754c\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c": 757, "\u4e3a\u63d0\u5347\u6570\u636e\u52a0\u8f7d\u901f\u5ea6": 770, "\u4e3a\u6709\u5411\u56fe": 757, "\u4e3a\u67d0\u4e00\u79cd\u8fb9\u7c7b\u578b": 771, "\u4e3a\u6b64": [757, 760], "\u4e3a\u7b80\u4fbf\u8d77\u89c1": 737, "\u4e3a\u7b80\u5355\u8d77\u89c1": 762, "\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0\u7684id": 741, "\u4e3b\u8981\u539f\u56e0\u662fpytorch": 740, "\u4e3b\u8981\u5e94\u7528\u573a\u666f\u662f\u8fd0\u884c\u91c7\u6837api\u4ee5\u652f\u6301\u5c0f\u6279\u91cf\u8bad\u7ec3": 740, "\u4e3b\u8ba1\u7b97\u673a": 742, "\u4e4b\u524d\u58f0\u660e\u5206\u5e03\u5f0f\u5d4c\u5165": 740, "\u4e4b\u524d\u88ab\u58f0\u660e": 740, "\u4e4b\u524d\u8c03\u7528": 740, "\u4e4b\u540e": 765, "\u4e4b\u95f4\u5206\u6570\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e0e": 771, "\u4e4b\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684": 771, "\u4e4b\u95f4\u7684\u5173\u7cfb": 744, "\u4e4b\u95f4\u7684\u5f97\u5206": 771, "\u4e4b\u95f4\u7684\u5f97\u5206\u8981\u9ad8\u4e8e": 771, "\u4e58\u4ee52\u5f97\u5230\u6700\u7ec8\u7ed3\u679c": 752, "\u4e5f\u53ef\u4ee5\u5728\u4e0d\u6d89\u53ca\u6d88\u606f\u4f20\u9012\u7684\u60c5\u51b5\u4e0b": 752, "\u4e5f\u53ef\u4ee5\u662f\u6709\u5411\u7684": 744, "\u4e5f\u5c06\u5728gpu\u4e0a": 747, "\u4e5f\u5c31\u662f\u8bf4": 740, "\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u7ea7\u522b\u7684\u91c7\u6837api": 740, "\u4e5f\u63d0\u4f9b\u4e86": 740, "\u4e5f\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 758, "\u4e5f\u79f0\u4e3a": 752, "\u4e86\u89e3\u4e86\u4e0a\u8ff0\u8ba1\u7b97\u89c4\u5219\u540e": 770, "\u4e8c\u5206\u56fe\u662f\u4e00\u7c7b\u7279\u6b8a\u7684": 744, "\u4e8c\u5206\u56fe\u7684\u60c5\u51b5": 765, "\u4ea4\u53c9\u71b5\u635f\u5931": 771, "\u4eba\u4eec\u81ea\u7136\u4f1a\u60f3\u8981\u5728\u6a21\u578b\u5f00\u53d1\u4e2d\u4f7f\u7528\u5b83\u4eec": 769, "\u4ec5\u4ec5\u4fdd\u7559\u4e86\u8f93\u51fa\u8282\u70b9\u6240\u9700\u8981\u6536\u96c6\u6d88\u606f\u7684\u8fb9": 757, "\u4ec5\u5141\u8bb8\u4f7f\u7528\u6570\u503c\u7c7b\u578b": 746, "\u4ec5\u6709\u7684\u4ee3\u7801\u4fee\u6539\u51fa\u73b0\u5728\u7b2c4": 739, "\u4ecd\u7136\u5177\u6709\u76f8\u540c\u7684\u7ed3\u679c": 770, "\u4ece": [734, 757], "\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230": 757, "\u4ece\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa": 757, "\u4ece\u5185\u5b58\u89d2\u5ea6\u6765\u8bf4\u662f\u9ad8\u6548\u7684": 753, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [737, 743, 748, 750], "\u4ece\u5de6\u81f3\u53f3": 770, "\u4ece\u6210\u5bf9\u7684\u8fb9": 745, "\u4ece\u7528\u4e8e\u56fe\u548c\u7a00\u758f\u77e9\u9635\u7684\u5916\u90e8python\u5e93": 745, "\u4ece\u76ee\u5f55": 738, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe\u6570\u636e": 745, "\u4ece\u800c\u4ea7\u751f\u5305\u542b\u8fb9\u5c0f\u6279\u6b21\u7684\u5b50\u56fe\u4ee5\u53ca\u4f9b\u4e0b\u6587\u4e2d\u6a21\u5757\u4f7f\u7528\u7684": 758, "\u4ece\u800c\u4ee5\u5c0f\u6279\u6b21\u904d\u5386\u6574\u4e2a\u56fe\u6570\u636e\u96c6": 770, "\u4ece\u800c\u51cf\u5c11\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u7f51\u7edc\u901a\u4fe1": 741, "\u4ece\u800c\u5b8c\u6210\u540e\u5411\u4f20\u64ad": 772, "\u4ece\u800c\u5bfc\u81f4\u591a\u6b21\u521b\u5efa\u548c\u5220\u9664": 740, "\u4ece\u800c\u8fdb\u4e00\u6b65\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u5e76\u8282\u7701\u5185\u5b58\u5360\u7528": 753, "\u4ece\u8f93\u51fa\u5f00\u59cb": 756, "\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u6d88\u606f\u4f20\u9012\u5747\u4f7f\u7528": 765, "\u4ee3\u7801\u5b9e\u73b0\u7684\u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u8c03\u7528": 758, "\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u8bfb": 761, "\u4ee3\u7801\u91cc\u79fb\u9664\u4e86\u5f52\u4e00\u5316": 761, "\u4ee3\u8868\u8ba1\u7b97": 762, "\u4ee5\u4e0a3\u79cd\u56fe\u7c7b\u578b\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u76f8\u540c\u7684": 765, "\u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u73b0\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684": 753, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u5f20\u91cf": 740, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e862\u4e2a\u8282\u70b9\u7279\u5f81": 746, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u6570\u636e\u52a0\u8f7d\u5668": 758, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u7684": 762, "\u4ee5\u4e0b\u4ee3\u7801\u5728\u6ce8\u91ca\u91cc\u4fdd\u7559\u4e86\u6574\u56fe\u5b9e\u73b0\u7684\u8bed\u53e5": 761, "\u4ee5\u4e0b\u4ee3\u7801\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f8b\u5b50": 769, "\u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5728": 735, "\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4e3a": 736, "\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5bf9\u6bcf\u79cd\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a\u53d6\u5e73\u5747\u503c\u5e76\u6c42\u548c": 770, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u4e3a\u4ecescipy\u7a00\u758f\u77e9\u9635\u548cnetworkx\u56fe\u521b\u5efadgl\u56fe\u7684\u793a\u4f8b": 745, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u5b9e\u73b0\u4e86\u901a\u8fc7\u5408\u5e76\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u5e76\u5c06\u5176\u6620\u5c04\u5230\u5168\u8fde\u63a5\u5c42\u6765\u9884\u6d4b\u8fb9\u7684\u5f97\u5206": 758, "\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210\u4e86\u4e00\u4e2a\u968f\u673a\u56fe\u7528\u4e8e\u6f14\u793a\u8fb9\u5206\u7c7b": 768, "\u4ee5\u4e0b\u4ee3\u7801\u7528\u4e86": 768, "\u4ee5\u4e0b\u4ee3\u7801\u7531\u4e8e\u8f93\u51fa\u8282\u70b9\u672a\u8986\u76d6\u6240\u6709\u8fd9\u4e9b\u8282\u70b9": 757, "\u4ee5\u4e0b\u4ee3\u7801\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u5206\u5e03\u5f0f\u65b9\u5f0f\u8bad\u7ec3graphsage\u7684\u793a\u4f8b": 739, "\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86": 770, "\u4ee5\u4e0b\u5185\u5bb9\u8bf4\u660e\u4e86\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f": 733, "\u4ee5\u4e0b\u56fe\u4e3a\u4f8b": 757, "\u4ee5\u4e0b\u5c0f\u8282\u5c06\u9010\u4e00\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4": 762, "\u4ee5\u4e0b\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9\u5747\u5300\u91c7\u68375\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 760, "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50": 754, "\u4ee5\u4e0b\u793a\u4f8b\u5c06\u8bad\u7ec3\u96c6\u5185\u548c\u8bad\u7ec3\u96c6\u5916\u7684\u8282\u70b9\u770b\u4f5c\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 741, "\u4ee5\u4e0b\u9762\u7528\u4e8e\u5168\u56fe\u7684gnn\u6a21\u5757\u4e3a\u4f8b": 761, "\u4ee5\u4e0b\u9762\u7684\u81ea\u5b9a\u4e49\u56fe\u5377\u79ef\u6a21\u5757\u4ee3\u7801\u4e3a\u4f8b": 761, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u5b50\u56fe\u7ed3\u6784": 741, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8282\u70b9\u7279\u5f81": 741, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8fb9\u7279\u5f81": 741, "\u4ee5\u4fbf\u533a\u5206": 758, "\u4ee5\u4fbf\u5b83\u4e5f\u53ef\u4ee5\u5728\u5f02\u6784\u56fe\u4e0a\u4f7f\u7528": 757, "\u4ee5\u4fbf\u6bcf\u4e2a\u8bad\u7ec3\u5668\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bad\u7ec3\u96c6\u5b50\u96c6": 740, "\u4ee5\u50a8\u5b58\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u5c5e\u6027": 746, "\u4ee5\u5145\u5206\u5229\u7528": 765, "\u4ee5\u5229\u7528\u66f4\u5927\u8303\u56f4\u7684\u90bb\u5c45\u4fe1\u606f": 772, "\u4ee5\u53ca": 739, "\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6267\u884c\u7684\u8ba1\u7b97": 743, "\u4ee5\u53ca\u53ef\u5b9a\u5236\u7684\u805a\u5408\u51fd\u6570\u548c\u975e\u7ebf\u6027\u51fd\u6570": 772, "\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5e26\u6709\u6d88\u606f\u4f20\u9012\u7684gnn\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282": 772, "\u4ee5\u53ca\u60f3\u8981\u4e86\u89e3\u5982\u4f55\u5728\u5c0f\u6279\u6b21\u6570\u636e\u4e0a\u8fdb\u884c\u8bc4\u4f30\u548c\u63a8\u7406\u6a21\u578b\u7684\u7528\u6237": 756, "\u4ee5\u53ca\u628a\u5b83\u4eec\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\u7684\u7c7b\u578b\u8fdb\u884c\u5408\u5e76\u540e\u7684\u5355\u4e00\u8fb9\u7c7b\u578b": 768, "\u4ee5\u53ca\u6765\u81ea\u8f93\u5165\u8282\u70b9\u7684\u8868\u793a\u5982\u4f55\u4f20\u64ad\u5230\u8f93\u51fa\u8282\u70b9": 762, "\u4ee5\u53ca\u7531\u5c0f\u6279\u6b21\u8fb9\u5bfc\u51fa\u7684\u539f\u59cb\u56fe\u7684\u5b50\u56fe": 758, "\u4ee5\u53ca\u8ba1\u7b97\u5176\u4e24\u7aef\u8282\u70b9\u8868\u793a\u6240\u9700\u7684\u5757\u5217\u8868": 758, "\u4ee5\u53ca\u8bf8\u5982\u7c7b\u522b\u6570": 734, "\u4ee5\u53ca\u8d1f\u91c7\u6837\u5668": 760, "\u4ee5\u53ca\u8fb9\u7684\u6807\u7b7e": 768, "\u4ee5\u591a\u5c42gcn\u4e3a\u4f8b": 762, "\u4ee5\u5bfc\u5165\u6570\u636e\u7684\u7279\u5b9a\u90e8\u5206": 737, "\u4ee5\u5c06\u4efb\u4f55\u8fb9\u754c\u8f6c\u6362\u4e3a\u5757": 757, "\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u7ec4\u8fb9\u8fdb\u884c\u8fed\u4ee3": 758, "\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u548c\u7f51\u7edc\u901a\u4fe1": 739, "\u4ee5\u652f\u6301\u9700\u8981\u8282\u70b9\u5d4c\u5165\u7684\u76f4\u63a8": 740, "\u4ee5\u67e5\u770b\u5982\u4f55\u4ece\u5916\u90e8\u6570\u636e\u6e90\u6784\u5efa\u56fe\u7684\u5b8c\u6574\u6307\u5357": 737, "\u4ee5\u6982\u7387p\u968f\u673a\u9009\u62e9\u8fb9": 757, "\u4ee5\u7a81\u51fa\u5c55\u793a\u7528\u4e8e\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 737, "\u4ee5\u83b7\u5f97": 737, "\u4ee5\u8868\u683c\u683c\u5f0f\u50a8\u5b58\u8282\u70b9": 745, "\u4ee5\u8bbf\u95ee\u7fa4\u96c6\u4e2d\u7684\u5206\u533a\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 740, "\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 740, "\u4ee5\u8fdb\u884c\u8fed\u4ee3": 737, "\u4ee5\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 757, "\u4ee5\u907f\u514d\u91c7\u6837\u6240\u5e26\u6765\u7684\u968f\u673a\u6027": 759, "\u4ee5\u9632\u4f5c\u8005\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u66f4\u6539\u4e86\u6587\u4ef6": 735, "\u4efb\u4f55\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u4ee5\u7528\u4f5c\u8fb9\u754c": 757, "\u4efb\u4f55\u6d89\u53cagpu\u56fe\u7684\u64cd\u4f5c\u90fd\u662f\u5728gpu\u4e0a\u8fd0\u884c\u7684": 747, "\u4efb\u52a1": 771, "\u4efb\u52a1\u52a0\u8f7d\u6570\u636e\u96c6": 736, "\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u4e00\u6b65\u805a\u5408": 766, "\u4f1a\u6839\u636eip\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u5bf9\u5e94\u7684\u8ba1\u7b97\u673a\u6765\u5b58\u50a8\u56fe\u5206\u533a": 742, "\u4f1a\u7ed3\u5408\u805a\u5408\u540e\u7684\u6d88\u606f\u548c\u8282\u70b9\u672c\u8eab\u7684\u7279\u5f81\u6765\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 751, "\u4f1a\u805a\u5408\u8282\u70b9\u63a5\u53d7\u5230\u7684\u6d88\u606f": 751, "\u4f1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684": 766, "\u4f1a\u975e\u5e38\u6d88\u8017\u8d44\u6e90": 759, "\u4f20\u7ed9": 741, "\u4f46\u4e0d\u540c\u7684\u662f": 770, "\u4f46\u4e0d\u652f\u6301\u4e00\u4e9b\u8ba1\u7b97\u8fd0\u7b97\u7b26": 740, "\u4f46\u5176\u57fa\u672c\u601d\u60f3\u548c\u672c\u7ae0\u63cf\u8ff0\u7684\u6d41\u7a0b\u662f\u4e00\u81f4\u7684": 768, "\u4f46\u53ea\u5bf9\u4e00\u5c42\u8fdb\u884c\u8ba1\u7b97": 759, "\u4f46\u5b83\u6bcf\u6b21\u53ea\u4e3a\u4e00\u5c42\u8fdb\u884c\u91c7\u6837": 759, "\u4f46\u662f": [757, 765], "\u4f46\u662f\u4efb\u4f55\u62e5\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u7528\u4f5c\u8fb9\u754c": 757, "\u4f46\u6709\u65f6\u7528\u6237\u8fd8\u662f\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u91c7\u6837\u5668": 757, "\u4f46\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u79cd\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe\u5bf9\u8c61": 736, "\u4f46\u8fd8\u662f\u6709\u4e00\u4e9b\u660e\u663e\u7684\u533a\u522b": 758, "\u4f4d\u4e8e\u8282\u70b9\u5217\u8868\u7684\u6700\u524d\u9762": 765, "\u4f4d\u6216": 748, "\u4f4d\u6574\u6570": 748, "\u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u8282\u70b9id\u548c\u8fb9id": 748, "\u4f5c\u4e3a\u4e00\u4e2a\u672a\u7ecf\u8fc7\u5f52\u4e00\u5316\u7684\u7c7b\u522b\u7684\u5206\u5e03": 768, "\u4f5c\u4e3a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u5982\u4f55\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684dgl": 763, "\u4f5c\u4e3a\u5165\u53c2": 760, "\u4f5c\u4e3a\u53c2\u6570": 762, "\u4f5c\u4e3a\u6f14\u793a\u7684\u6837\u4f8b\u4ee3\u7801": 772, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e": 740, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e\u4e4b\u4e00\u6dfb\u52a0\u5230": 740, "\u4f5c\u4e3a\u8282\u70b9\u8868\u793a\u8ba1\u7b97\u6a21\u578b\u4ee5\u53ca\u524d\u4e00\u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684": 768, "\u4f5c\u4e3a\u8f93\u5165": 757, "\u4f5c\u4e3a\u8fb9\u9884\u6d4b\u6a21\u578b": 768, "\u4f5c\u5f0a": 758, "\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9": 737, "\u4f7f\u7528": 740, "\u4f7f\u7528dgl": 770, "\u4f7f\u7528int32\u6784\u5efa\u56fe": 748, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": [733, 750], "\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 752, "\u4f7f\u7528\u5e73\u5747\u8bfb\u51fa\u8ba1\u7b97\u56fe\u8868\u793a": 770, "\u4f7f\u7528\u5e95\u5c42api\u65f6": 740, "\u4f7f\u7528\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 772, "\u4f7f\u7528\u6240\u6709\u8282\u70b9": 772, "\u4f7f\u7528\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 772, "\u4f7f\u7528\u6709\u5411\u7684networkx\u56fe": 745, "\u4f7f\u7528\u6a21\u578b\u65f6\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u8282\u70b9\u7c7b\u578b\u548c\u6570\u636e\u7279\u5f81\u7684\u5b57\u5178": 768, "\u4f7f\u7528\u8be5\u540d\u79f0\u6765\u8bc6\u522b\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u56fe": 741, "\u4f7f\u7528\u8d1f\u91c7\u6837\u65b9\u6cd5\u540e": 760, "\u4f7f\u7528\u8fd9\u6837\u7684": 740, "\u4f8b\u5982": [738, 740, 741, 742, 743, 744, 746, 749, 752, 755, 757, 758, 760, 761, 762, 764, 768, 769, 770, 771, 772], "\u4f8b\u5982nf": 742, "\u4f8b\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7fa4\u793e\u533a": 770, "\u4f8b\u5982\u4f7f\u7528": 770, "\u4f8b\u5982\u5728\u4e0b\u56fe\u4e2d": 749, "\u4f8b\u5982\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b": 740, "\u4f8b\u5982\u60f3\u5728\u67d0\u4e00\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u5206\u7c7b\u4efb\u52a1": 768, "\u4f8b\u5982\u6c42\u548c\u4ee5\u53ca\u6c42\u5747\u503c": 740, "\u4f8b\u5982\u8282\u70b9\u548c\u8fb9\u7684\u6570\u91cf": 740, "\u4f9d\u6279\u6b21\u5bf9\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3": 759, "\u4fdd\u5b58dglgraph\u5bf9\u8c61\u548c\u6807\u7b7e\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 738, "\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 738, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [733, 734, 750], "\u4fdd\u5b58\u56fe\u548c\u6807\u7b7e": 738, "\u4fdd\u5b58\u8bad\u7ec3\u597d\u7684\u6a21\u578b": 772, "\u4fdd\u7559\u5173\u7cfb": 749, "\u4fee\u6539\u6a21\u578b\u8bad\u7ec3\u5faa\u73af\u90e8\u5206": 762, "\u501f\u7528\u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u5c0f\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5": 770, "\u503c\u4e3a\u4e00\u7684\u5143\u7d20\u8868\u793a\u4e00\u6761\u8fb9": 769, "\u503c\u4e3a\u4f5c\u7528\u5728\u8be5\u5173\u7cfb\u4e0ann\u6a21\u5757\u5bf9\u8c61": 766, "\u503c\u5219\u4e3a\u5bf9\u5e94nn\u6a21\u5757\u7684\u81ea\u5b9a\u4e49\u53c2\u6570": 766, "\u503c\u662f\u8fd9\u79cd\u5173\u7cfb\u5bf9\u5e94": 754, "\u5047\u5b9agraph": 769, "\u5047\u8bbe\u6279\u6b21\u5927\u5c0f\u4e3a": 770, "\u5047\u8bbe\u6709\u5982\u4e0b\u7684\u8fb9\u754c": 757, "\u5047\u8bbe\u7ea2\u8272\u8282\u70b9\u4e3a\u9700\u8981\u66f4\u65b0\u7684\u76ee\u6807\u8282\u70b9": 757, "\u5047\u8bbe\u8282\u70b9": 751, "\u5047\u8bbe\u8981\u4f7f\u75282\u5c42gnn\u8ba1\u7b97\u79cd\u5b50\u8282\u70b98": 757, "\u5143\u7d20\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8fb9\u7c7b\u578b": 770, "\u5143\u7ec4\u4e2d\u7684\u7b2c1\u4e2a\u5143\u7d20\u4e3a\u6e90\u8282\u70b9\u7279\u5f81": 765, "\u5148\u6765\u770b\u4e00\u4e0b": 757, "\u5168\u56fe": 772, "\u51713\u4e2a\u6210\u5458\u5c5e\u6027": 752, "\u5173\u4e8e": 746, "\u5173\u4e8edgl\u5185\u7f6e\u56fe\u5377\u79ef\u6a21\u5757\u7684\u5b8c\u6574\u5217\u8868": 772, "\u5173\u4e8e\u5185\u7f6e\u51fd\u6570\u7684\u5217\u8868": 752, "\u5173\u4e8e\u5185\u7f6e\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5": 760, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [743, 750], "\u5173\u4e8e\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u8fdb\u9636\u7528\u6cd5": 752, "\u5173\u6ce8": [749, 758], "\u5173\u7cfb": 758, "\u5173\u7cfb\u53ef\u4ee5\u662f\u65e0\u5411\u7684": 744, "\u5173\u7cfb\u8868\u793a\u4e3a": 765, "\u5176\u4e2d": [741, 748, 753, 757, 766, 770, 771], "\u5176\u4e2dxxx\u662f\u63d0\u4f9b\u7ed9\u5212\u5206api\u7684\u56fe\u7684\u540d\u79f0": 741, "\u5176\u4e2d\u4e00\u4e9b\u4ee3\u7801\u6f14\u793a\u4e86\u67e5\u8be2\u56fe\u7ed3\u6784\u7684\u90e8\u5206api\u7684\u4f7f\u7528\u65b9\u6cd5": 748, "\u5176\u4e2d\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u6a21\u5757\u7ec4\u4ef6": 770, "\u5176\u4e2d\u5305\u542b\u6240\u6709\u8d1f\u91c7\u6837\u7684\u8282\u70b9\u5bf9\u4f5c\u4e3a\u8fb9": 771, "\u5176\u4e2d\u5305\u542b\u6709\u5173\u8f93\u5165\u56fe\u7684\u6240\u6709\u4fe1\u606f": 740, "\u5176\u4e2d\u5305\u542b\u7531\u8d1f\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u6240\u6709\u4e0d\u5b58\u5728\u7684\u8fb9": 760, "\u5176\u4e2d\u5305\u542b\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u5185\u6240\u6709\u7684\u8fb9": 760, "\u5176\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b": 740, "\u5176\u4e2d\u7684\u8fb9\u8fde\u63a5\u4e24\u7c7b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 744, "\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8fb9\u754c": 757, "\u5176\u4e2d\u7ea2\u8272\u548c\u7eff\u8272\u8282\u70b9": 757, "\u5176\u4e2d\u8282\u70b9\u548c\u8fb9\u53ef\u4ee5\u662f\u6709\u7c7b\u578b\u7684": 743, "\u5176\u4f59\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8": 739, "\u5176\u503c\u4e3a\u6bcf\u4e2a\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 766, "\u5176\u6570\u5b66\u5b9a\u4e49\u4e3a": 766, "\u5176\u6700\u7ec8\u8868\u793a\u5c06\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c": 756, "\u5176\u6b21": 770, "\u5176\u6d88\u606f\u4f20\u9012\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b": 757, "\u5176\u7ed3\u679c": 747, "\u5176\u7ed3\u679c\u662f": 759, "\u5176\u884c\u4e3a\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u975e\u5e38\u76f8\u4f3c": 740, "\u5176\u9002\u7528\u4e8e\u5355\u5411\u4e8c\u5206\u56fe": 761, "\u5176\u952e\u4e3a": 766, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 735, "\u5177\u4f53\u5982\u4e0b\u6240\u793a": 772, "\u5177\u4f53\u6765\u8bf4": [739, 759], "\u5177\u4f53\u884c\u4e3a\u5982\u4e0b": 749, "\u5177\u6709\u5bf9\u96c6\u7fa4\u5185\u6240\u6709\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u65e0\u5bc6\u7801ssh\u8bbf\u95ee\u6743\u9650": 742, "\u5177\u6709\u76f8\u540c\u7684\u952e": 766, "\u5185\u7f6e\u51fd\u6570": 752, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": [750, 751], "\u5185\u7f6e\u6d88\u606f\u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u5143\u51fd\u6570\u6216\u4e8c\u5143\u51fd\u6570": 752, "\u5185\u7f6e\u7684dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u7684\u8f93\u5165\u56fe\u53ca\u7279\u5f81\u5fc5\u987b\u6ee1\u8db3\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00": 761, "\u518d\u5c06": 752, "\u518d\u6784\u5efa\u4e00\u4e2a\u5173\u7cfb\u5b57\u5178": 749, "\u518d\u6b21\u63d0\u9192\u4e0b": 762, "\u518d\u7531\u8fb9\u754c\u8f6c\u6362\u6210\u5757": 757, "\u51c6\u5907\u4e00\u4e2a\u6279\u6b21\u7684\u56fe": 770, "\u51fa\u4e8e\u5efa\u6a21\u7684\u76ee\u7684": 749, "\u51fd\u6570": [737, 748, 749, 752, 765, 770], "\u51fd\u6570\u4e2d\u5b9e\u73b0\u6570\u636e\u5904\u7406": 737, "\u51fd\u6570\u6267\u884c\u4e86\u5b9e\u9645\u7684\u6d88\u606f\u4f20\u9012\u548c\u8ba1\u7b97": 765, "\u51fd\u6570\u662f\u57fa\u4e8e\u5747\u5300\u5206\u5e03\u7684\u91c7\u6837\u51fd\u6570": 760, "\u51fd\u6570\u6765\u5728\u8fd0\u884c\u65f6\u62c6\u5206\u8bad\u7ec3": 740, "\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684": 748, "\u51fd\u6570\u6765\u6784\u5efa\u4e00\u4e2a": 748, "\u51fd\u6570\u7684\u5185\u5bb9\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a3\u9879\u64cd\u4f5c": 765, "\u51fd\u6570\u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u5728\u5b8c\u6210\u6d88\u606f\u805a\u5408\u540e\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 765, "\u51fd\u6570\u7684\u8f93\u5165\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 768, "\u51fd\u6570\u7684\u8f93\u51fa\u4e0d\u4f1a\u5168\u4e3a0": 765, "\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u7684\u5bf9\u8c61": 766, "\u51fd\u6570\u805a\u5408\u6765\u81ea\u591a\u4e2a\u5173\u7cfb\u7684\u7ed3\u679c": 766, "\u51fd\u6570\u8fd8\u4f7f\u75282\u4e2a\u989d\u5916\u7684\u5b57\u5178\u53c2\u6570": 766, "\u51fd\u6570\u8fdb\u884c\u89e3\u538b\u7f29": 735, "\u51fd\u6570\u9700\u8981\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u8f93\u5165\u56fe\u7c7b\u578b": 766, "\u51fd\u6570\u9700\u8981\u5904\u7406\u8f93\u5165\u7684\u8bb8\u591a\u6781\u7aef\u60c5\u51b5": 765, "\u5206\u522b\u5728\u7b2c8": 746, "\u5206\u522b\u662f\u53ef\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u51fd\u6570\u4e0e\u805a\u5408\u51fd\u6570": 757, "\u5206\u522b\u662f\u77e9\u9635": 753, "\u5206\u522b\u7528\u4e8e\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5f02\u6784\u56fe\u548c\u52a0\u8f7d\u5b83\u4eec": 749, "\u5206\u522b\u7528\u4e8e\u8bbf\u95ee\u6e90\u8282\u70b9": 752, "\u5206\u533a": [739, 741], "\u5206\u533a0\u7684\u6570\u636e": 741, "\u5206\u533a1\u7684\u6570\u636e": 741, "\u5206\u533a\u6570\u636e\u548c\u8bad\u7ec3\u811a\u672c\u90fd\u5df2\u88ab\u590d\u5236\u5230\u96c6\u7fa4\u6216\u5b58\u5728\u96c6\u7fa4\u4e2d\u6240\u6709\u8ba1\u7b97\u673a\u5747\u53ef\u8bbf\u95ee\u7684\u5168\u5c40\u5b58\u50a8\u7a7a\u95f4": 742, "\u5206\u533a\u914d\u7f6e\u6587\u4ef6\u4ee5\u53ca\u56fe\u5206\u533a": 742, "\u5206\u5e03\u5f0f\u5d4c\u5165\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u5f20\u91cf\u4e4b\u4e0a": 740, "\u5206\u5e03\u5f0f\u5d4c\u5165\u7684\u521b\u5efa\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684\u521b\u5efa\u975e\u5e38\u76f8\u4f3c": 740, "\u5206\u5e03\u5f0f\u5f20\u91cf\u5fc5\u987b\u4e0e\u56fe\u7684\u8282\u70b9\u6216\u8fb9\u76f8\u5173\u8054": 740, "\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668\u5177\u6709\u4e0epytorch": 740, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u548c\u72ec\u7acb\u6a21\u5f0f": 740, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": [739, 750], "\u5206\u5e03\u5f0f\u8bad\u7ec3": 750, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u5c06\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u5206\u533a": 742, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [739, 750], "\u5206\u5e03\u5f0f\u91c7\u6837\u548c\u6570\u636e\u5206\u5272": 740, "\u5206\u5e03\u5f0f\u91c7\u6837\u6a21\u5757\u9075\u5faa\u76f8\u540c\u7684\u8bbe\u8ba1": 740, "\u5206\u914did\u540e": 741, "\u5206\u914d\u7ed9": 740, "\u5207\u7247\u53d6\u8f93\u5165\u7279\u5f81\u7684\u524d\u51e0\u884c": 761, "\u5207\u7247\u884c\u6570\u53ef\u4ee5\u901a\u8fc7": 761, "\u5212\u5206api\u901a\u8fc7\u5728": 741, "\u5212\u5206\u6216\u7279\u5f81\u5f52\u4e00\u5316\u7b49\u64cd\u4f5c\u5efa\u8bae\u5728": 734, "\u5212\u5206\u63a9\u7801": 737, "\u5217\u8868": 736, "\u5219": 740, "\u5219dgl\u4f1a\u81ea\u52a8\u5c06\u8f93\u5165\u8282\u70b9\u7279\u5f81\u524d\u4e00\u90e8\u5206\u8bbe\u4e3a\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 761, "\u5219dgl\u5141\u8bb8\u4f7f\u7528": 749, "\u5219\u4e0d\u9700\u8981\u6307\u5b9a\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b": 749, "\u5219\u53ea\u9700\u8981\u6309\u7167\u5982\u4e0b\u7684\u65b9\u6cd5\u91cd\u5199forward\u51fd\u6570": 761, "\u5219\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6d88\u606f\u6216\u805a\u5408\u51fd\u6570": 752, "\u5219\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u7b80\u5355\u5730\u5b9a\u4e49\u91c7\u6837\u5668": 757, "\u5219\u53ef\u4ee5\u6dfb\u52a0\u53c2\u6570": 737, "\u5219\u53ef\u4ee5\u901a\u8fc7": 762, "\u5219\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u76f4\u63a5\u8bfb\u53d6\u5757\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 757, "\u5219\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u51fd\u6570": 735, "\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee": 762, "\u5219\u56fe\u8bfb\u51fa\u7684\u5f20\u91cf\u5f62\u72b6\u4e3a": 770, "\u5219\u5b83\u4e5f\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55": 735, "\u5219\u6307\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u7ed3\u679c": 766, "\u5219\u6a21\u578b\u5728\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3\u65f6\u53ea\u9700\u505a\u5f88\u5c0f\u7684\u8c03\u6574": 762, "\u5219\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u8fb9\u7c7b\u578b\u53ca\u5176\u53cd\u5411\u8fb9\u7c7b\u578b\u4e4b\u95f4\u7684\u6620\u5c04": 758, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u5411\u4e8c\u5206\u56fe": 761, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u540c\u6784\u56fe": 761, "\u5219\u8fb9\u662f\u65e0\u5411\u7684": 744, "\u5219\u8fb9\u662f\u6709\u5411\u7684": 744, "\u5219\u901a\u5e38\u4e0d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7cbe\u786e\u7684\u79bb\u7ebf\u63a8\u65ad": 759, "\u5219\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u4f18\u5316\u5668": 740, "\u5219\u9ed8\u8ba4\u503c\u4e3a": 742, "\u521b\u5efa": 737, "\u521b\u5efa\u4e00\u4e2a": 748, "\u521b\u5efa\u4e00\u4e2a\u5177\u67093\u79cd\u8282\u70b9\u7c7b\u578b\u548c3\u79cd\u8fb9\u7c7b\u578b\u7684\u5f02\u6784\u56fe": 749, "\u521b\u5efa\u5206\u5e03\u5f0f\u56fe\u5bf9\u8c61": 739, "\u521b\u5efa\u5d4c\u5165\u65f6": 740, "\u521b\u5efa\u800c\u6765": 745, "\u521b\u5efa\u91c7\u6837\u5668": 739, "\u521b\u5efa\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u793a\u4f8b": 737, "\u521d\u59cb\u5316api\u5e94\u6309\u4ee5\u4e0b\u987a\u5e8f\u8c03\u7528": 740, "\u521d\u59cb\u5316dgl\u7684\u5206\u5e03\u5f0f\u6a21\u5757": 739, "\u521d\u59cb\u5316\u53c2\u6570": 764, "\u521d\u59cb\u56fe\u548c\u8981\u8ba1\u7b97\u8868\u793a\u7684\u8282\u70b9": 757, "\u5220\u9664\u5c0f\u6279\u6b21\u4e2d\u7684\u8fb9\u53ca\u5176\u53cd\u5411\u8fb9\u7684\u65b9\u6cd5\u5982\u4e0b": 758, "\u5229\u7528\u8282\u70b9\u81ea\u8eab\u7684\u7279\u5f81\u548c\u5176\u90bb\u8282\u70b9\u53ca\u8fb9\u7684\u7279\u5f81\u6765\u8ba1\u7b97\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 772, "\u5229\u7528\u8fd9\u4e9b\u4f18\u5316\u7684\u4e00\u4e2a\u5e38\u89c1\u5b9e\u8df5\u662f\u901a\u8fc7\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 753, "\u5230": [748, 768], "\u524d\u8005\u5728": 740, "\u524d\u9762\u7ae0\u8282\u91cc\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7528\u5728\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 757, "\u5269\u4f59\u90e8\u5206\u7684\u8bad\u7ec3\u4ee3\u7801\u548c\u540c\u6784\u56fe\u4ee3\u7801\u76f8\u540c": 770, "\u52a0\u6743\u7684": 744, "\u52a0\u6cd5\u53ef\u4ee5\u901a\u8fc7dgl\u7684\u5185\u7f6e\u51fd\u6570": 753, "\u52a0\u8f7d": 736, "\u5305\u542b\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b": 761, "\u5305\u542b\u4e86\u6bcf\u4e2agnn\u5c42\u8981\u8ba1\u7b97\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u51fa": 762, "\u5305\u542b\u4e86\u96c6\u7fa4\u4e2d\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 742, "\u5305\u542b\u591a\u4e2a\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u7c7b": 739, "\u5305\u542b\u90bb\u5c45\u91c7\u6837\u548c\u6d88\u606f\u4f20\u9012": 759, "\u5305\u62ec": [739, 745, 765], "\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e": 771, "\u5305\u62ec\u5206\u533a\u4e2d\u7684\u56fe\u7ed3\u6784": 740, "\u5305\u62ec\u81ea\u5faa\u73af\u7684\u8fb9": 744, "\u5305\u62ec\u8bbf\u95ee\u8282\u70b9": 740, "\u5305\u63d0\u4f9b\u4e86\u7528\u4e8e\u4e0b\u8f7d\u548c\u5904\u7406ogb\u6570\u636e\u96c6\u5230": 736, "\u533a\u522b\u53ea\u5728\u4e8e\u8282\u70b9\u88ab\u5212\u5206\u4e3a\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 761, "\u5355\u5411\u4e8c\u5206\u56fe": 761, "\u5355\u72ec\u8c03\u7528\u9010\u8fb9\u8ba1\u7b97": 752, "\u5373": [753, 757, 769], "\u5373\u4e00\u7ec4\u673a\u5668": 739, "\u5373\u4efb\u610f\u4e24\u4e2a\u56fe\u4e4b\u95f4\u6ca1\u6709\u8fb9\u8fde\u63a5": 770, "\u5373\u4f7f": 740, "\u5373\u6267\u884c": 753, "\u5373\u6839\u636e\u7ed3\u6784\u548c\u6574\u4f53\u4fe1\u606f\u5bf9\u56fe\u8fdb\u884c\u5206\u7c7b": 770, "\u5373\u6b63\u786e\u7684\u6807\u6ce8": 772, "\u5373\u6bcf\u4e2a\u884c\u5207\u7247\u50a8\u5b581\u4e2a\u8282\u70b9\u62161\u6761\u8fb9\u7684\u7279\u5f81": 746, "\u5373\u8282\u70b94": 757, "\u5373\u8fb9": 748, "\u5373\u9884\u6d4b\u4efb\u52a1\u6570": 737, "\u539f\u5219\u662f\u5c06": 761, "\u539f\u56e0\u662f\u6d88\u606f\u4f20\u9012\u540e\u7684\u7279\u5f81\u7ec4\u5408\u9700\u8981\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u8282\u70b9\u8868\u793a": 757, "\u539f\u56e0\u662f\u8fd9\u9700\u8981\u4e3a\u6bcf\u4e00\u5c42\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u8868\u793a": 759, "\u539f\u56fe\u4e0a\u7684\u5176\u4ed6\u8282\u70b9\u662f\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u7684": 757, "\u539f\u59cb\u7279\u5f81\u5728cpu\u4e0a": 747, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8282\u70b9id": 749, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8fb9id": 749, "\u539f\u59cb\u7684\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684id\u88ab\u5b58\u50a8\u5728": 749, "\u539f\u59cb\u8282\u70b9\u7c7b\u578b": 749, "\u539f\u59cb\u8fb9\u7c7b\u578b": 749, "\u53c2\u6570": 766, "\u53c2\u8003\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7b2c16\u548c18\u884c": 746, "\u53c2\u8003\u624b\u518c\u63d0\u4f9b\u4e86\u8be5\u7528\u6cd5\u7684\u66f4\u591a\u7ec6\u8282": 745, "\u53c2\u8003\u7528\u6237\u6307\u5357": 754, "\u53c2\u89c1": [752, 761], "\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u548c\u6574\u578b": 746, "\u53cd\u5411\u8fb9\u901a\u5e38\u5177\u6709\u4e0e\u6b63\u5411\u8fb9\u672c\u8eab\u4e0d\u540c\u7684\u8fb9\u7c7b\u578b": 758, "\u53d6\u5e73\u5747\u503c": 770, "\u53d8\u91cf": 769, "\u53e6\u4e00\u4e2a\u5e94\u7528\u4e8e": 753, "\u53e6\u4e00\u4e2a\u7528\u4e8e\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 740, "\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 747, "\u53e6\u5916": [740, 742, 753], "\u53e6\u89c1": 745, "\u53ea\u4f7f\u7528": 749, "\u53ea\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u5305\u62ec\u8282\u70b9\u8868\u793a\u7684\u5b57\u5178\u6765\u8ba1\u7b97\u9884\u6d4b\u503c": 772, "\u53ea\u8981\u4f7f\u8fd4\u56de\u7684\u56fe\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9": 757, "\u53ea\u9700\u8981\u6309\u4e0b\u4f8b\u7f16\u5199\u4ee3\u7801": 768, "\u53ea\u9700\u8981\u8282\u70b94": 757, "\u53ea\u9700\u8981\u9884\u6d4b\u6bcf\u4e2a\u8fb9\u7684\u6807\u91cf\u5206\u6570\u800c\u4e0d\u662f\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03": 760, "\u53ef\u4ee5\u4ece\u5916\u90e8\u6765\u6e90\u6784\u9020\u4e00\u4e2a": 745, "\u53ef\u4ee5\u4f7f\u7528": [748, 757], "\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u56fe\u8868\u793a": 744, "\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e0a\u8ff0\u8fb9\u754c\u8f6c\u6362\u4e3a\u8f93\u51fa\u8282\u70b9\u4e3a8\u7684\u5757": 757, "\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4ee5\u4e0b\u4ee3\u7801\u7684\u65b9\u6cd5\u83b7\u53d6\u5355\u4e2a\u56fe\u6570\u636e\u96c6\u7684\u56fe\u6570\u636e": 767, "\u53ef\u4ee5\u5148\u62bd\u53d6\u5f02\u6784\u56fe\u7684\u8fb9\u7c7b\u578b\u5b50\u56fe": 749, "\u53ef\u4ee5\u5148\u901a\u8fc7\u60f3\u8981\u56ca\u62ec\u7684\u8282\u70b9\u7f16\u53f7\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe": 755, "\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u7684\u5757": 757, "\u53ef\u4ee5\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c": 740, "\u53ef\u4ee5\u5982\u4e0b\u5b9a\u4e49\u94fe\u63a5\u9884\u6d4b\u6a21\u578b": 760, "\u53ef\u4ee5\u5b8c\u6210\u4e00\u8f6e\u6d88\u606f\u4f20\u9012\u8ba1\u7b97": 772, "\u53ef\u4ee5\u5c06\u5176\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4fee\u6539\u4ee5\u652f\u6301\u8fb9\u6743\u91cd": 769, "\u53ef\u4ee5\u5c06\u8be5\u7c7b\u578b\u6570\u636e\u52a0\u8f7d\u5230python\u5bf9\u8c61": 745, "\u53ef\u4ee5\u5f97\u5230\u591a\u5f20\u7528\u4e8e\u5206\u7c7b\u7684\u56fe": 770, "\u53ef\u4ee5\u627e\u5230": 765, "\u53ef\u4ee5\u63a5\u53d7\u975e\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570": 747, "\u53ef\u4ee5\u63d0\u9ad8\u8282\u70b9": 737, "\u53ef\u4ee5\u662f\u5f02\u6784\u56fe\u6216\u6765\u81ea\u5f02\u6784\u56fe\u7684\u5b50\u56fe\u533a\u5757": 766, "\u53ef\u4ee5\u7528\u4e8e\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u6a21\u5757": 740, "\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u8282\u70b9\u6536\u5230\u7684\u6d88\u606f": 752, "\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f": 735, "\u53ef\u4ee5\u8ba9\u7528\u6237\u4e0d\u7528\u4e00\u6b21\u6027\u628a\u6240\u6709\u8282\u70b9\u7279\u5f81\u62f7\u8d1d\u5230gpu\u4e0a": 756, "\u53ef\u4ee5\u901a\u8fc7": 757, "\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u552f\u4e00\u6807\u8bc6": 740, "\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u56fe\u5377\u79ef\u6a21\u5757\u6765\u5b9e\u73b0\u8fd9\u79cd\u7f51\u7edc\u67b6\u6784": 772, "\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c": 768, "\u53ef\u4ee5\u9075\u5faa\u76f8\u540c\u7684\u539f\u7406\u6765\u6784\u5efa\u56fe": 745, "\u53ef\u4ee5\u91cd\u5199\u4e0a\u9762\u7684": 757, "\u53ef\u547d\u540d\u7684\u7279\u5f81": 746, "\u53ef\u5c06\u6570\u636e\u548c\u8ba1\u7b97\u540c\u65f6\u5206\u5e03\u5728\u4e00\u7ec4\u8ba1\u7b97\u8d44\u6e90\u4e2d": 739, "\u53ef\u5c06\u6570\u636e\u590d\u5236\u5230\u96c6\u7fa4\u7684\u8ba1\u7b97\u673a\u4e0a": 739, "\u53ef\u6309\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u5b83\u7684\u4e24\u7aef\u8282\u70b9\u9690\u85cf\u8868\u793a\u7684\u70b9\u79ef\u6765\u4f5c\u4e3a\u5206\u6570": 768, "\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u5de5\u4f5c\u7684\u60f3\u6cd5\u90fd\u5f88\u7c7b\u4f3c": 771, "\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7ef4\u5ea6\u7684\u8868\u793a\u6765\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u5efa\u6a21": 754, "\u53ef\u9009": [733, 741, 750], "\u53ef\u907f\u514d\u8be5\u884c\u4e3a": 745, "\u5404\u79cd\u6570\u636e\u683c\u5f0f": 745, "\u5408\u5e76\u6210\u4e00\u79cd\u8fb9\u7684\u56fe": 768, "\u540c\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u53ef\u4ee5\u6709\u591a\u6761": 744, "\u540c\u65f6": [748, 757], "\u540c\u65f6dgl\u4e5f\u5efa\u8bae\u5b9e\u73b0\u4fdd\u5b58\u548c\u5bfc\u5165\u51fd\u6570": 734, "\u540c\u65f6\u4e5f\u652f\u6301\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u91c7\u6837\u7b56\u7565": 756, "\u540c\u65f6\u5c06\u8fb9id\u6620\u5c04\u5230\u5176\u53cd\u5411\u8fb9id": 758, "\u540c\u65f6\u5efa\u7acb\u53cd\u5411\u8fb9": 768, "\u540c\u65f6\u7701\u7565\u4e86\u8be6\u7ec6\u7684\u6570\u636e\u5904\u7406\u4ee3\u7801\u4ee5\u7a81\u51fa\u5c55\u793a\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 737, "\u540c\u6784\u56fe": 765, "\u540c\u6784\u56fe\u548c\u4e8c\u5206\u56fe\u53ea\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f02\u6784\u56fe": 749, "\u540c\u6784\u56fe\u548c\u5757": 761, "\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e4b\u95f4\u552f\u4e00\u7684\u5b9e\u73b0\u5dee\u5f02\u662f\u540e\u8005\u9700\u8981\u7528": 760, "\u540c\u6784\u56fe\u7684\u60c5\u51b5": 765, "\u540c\u6784\u7684": 744, "\u540c\u6837": [740, 762], "\u540c\u6837\u5730": 768, "\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 768, "\u540d\u79f0\u5c31\u5f88\u6709\u7528": 740, "\u540e": 770, "\u540e\u4e00\u79cd\u65b9\u6cd5\u6548\u7387\u9ad8\u5f97\u591a": 753, "\u540e\u7eed\u7ae0\u8282\u7684\u5185\u5bb9\u5747\u5047\u8bbe\u7528\u6237\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u56fe\u548c\u8282\u70b9": 767, "\u540e\u8005\u53ef\u4ee5\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u8fdb\u884c\u8fed\u4ee3": 762, "\u540e\u8005\u652f\u6301\u89e3\u538b\u7f29zip\u6587\u4ef6": 735, "\u5411\u524d": 758, "\u5411\u540e": 758, "\u5411\u91cf\u6216\u591a\u7ef4\u5f20\u91cf": 746, "\u5426\u5219": 758, "\u5426\u5219\u7528\u6237\u9700\u8981\u81ea\u5df1\u5b9e\u73b0": 735, "\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u7a7a\u95f4": 742, "\u542f\u52a8\u811a\u672c\u4f1a\u5728\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u6307\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u4efb\u52a1": 742, "\u542f\u52a8\u811a\u672c\u5728\u540e\u53f0\u542f\u52a8\u670d\u52a1\u5668": 740, "\u5434\u7d2b\u8587": 750, "\u548c": [734, 737, 738, 739, 740, 741, 743, 744, 745, 746, 748, 749, 752, 753, 754, 757, 758, 759, 763, 764, 765, 766, 768, 770, 771, 772], "\u548c1\u4e2a\u8fb9\u7279\u5f81": 746, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 759, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 759, "\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9": 749, "\u548c\u4ece\u4e00\u4e2a\u4efb\u610f\u7684\u566a\u58f0\u5206\u5e03": 771, "\u548c\u5305\u542b\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u5757": 761, "\u548c\u5b50\u56fe\u5757": 765, "\u548c\u5b83\u4eec\u7684\u5173\u7cfb": 743, "\u548c\u5c0f\u6279\u91cf\u7684\u8fb9id\u6570\u7ec4": 760, "\u548c\u666e\u901a\u7684nn\u6a21\u5757\u4e00\u6837": 766, "\u548c\u7528\u4e8e\u5206\u5e03\u5f0f\u53ef\u5b66\u4e60\u5d4c\u5165\u7684": 740, "\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81": 765, "\u548c\u8282\u70b9\u5206\u7c7b\u4e00\u6837\u7684\u90bb\u5c45\u91c7\u6837\u5668": 758, "\u552f\u4e00\u7684\u533a\u522b\u662f\u5728\u8c03\u7528": 768, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4e3a\u8bad\u7ec3\u96c6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u7684\u5b57\u5178": 762, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528": [740, 758], "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u63d0\u4f9b\u8d1f\u91c7\u6837\u65b9\u6cd5": 760, "\u5546\u54c1": 744, "\u5546\u5bb6": 744, "\u56de\u5f52": [737, 750, 767, 771], "\u56de\u5f52\u4e2d\u7684\u8282\u70b9\u8868\u793a\u6a21\u578b": 760, "\u56de\u5f52\u4e2d\u7684\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 760, "\u56de\u5f52\u4efb\u52a1": 768, "\u56de\u5f52\u6240\u9700\u7684\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 758, "\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u8fb9\u5f97\u5206\u6a21\u578b\u76f8\u540c": 771, "\u56de\u5f52\u7684\u6a21\u578b": 768, "\u56de\u5f52\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b": 758, "\u56de\u5f52\u7684\u8bad\u7ec3\u7c7b\u4f3c": 758, "\u56de\u5f52\u91cc\u7684\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c": 760, "\u56de\u60f3\u4e00\u4e0b\u5728": 757, "\u56e0\u4e3a": 753, "\u56e0\u4e3a\u4e0a\u8ff0\u7684\u5f97\u5206\u9884\u6d4b\u6a21\u578b\u5728\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 771, "\u56e0\u4e3a\u4e0d\u9700\u8981\u5728\u8fb9\u4e0a\u4fdd\u5b58feat_src\u548cfeat_dst": 753, "\u56e0\u4e3a\u53cb\u8c0a\u662f\u76f8\u4e92\u7684": 744, "\u56e0\u4e3a\u540c\u6b65sgd\u4f1a\u5047\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c0f\u6279\u6b21": 740, "\u56e0\u4e3a\u5b83\u4eec\u7ecf\u8fc7\u4e86\u5927\u91cf\u4f18\u5316": 752, "\u56e0\u4e3a\u5bf9\u4e8e\u5904\u7406\u540e\u7684\u5927\u578b\u6570\u636e\u96c6": 734, "\u56e0\u4e3a\u5d4c\u5165\u662f\u6a21\u578b\u7684\u4e00\u90e8\u5206": 740, "\u56e0\u4e3a\u7528\u6237\u9700\u8981\u6307\u5b9a\u5728\u54ea\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b": 771, "\u56e0\u4e3a\u9700\u8981\u4ece\u7b2c\u4e00\u5c42\u5f00\u59cb\u5bf9\u8282\u70b9\u8868\u793a\u9010\u5c42\u8ba1\u7b97": 759, "\u56e0\u6b64": [737, 740, 742, 745, 747, 749, 757, 758, 760], "\u56e0\u6b64\u5982\u679c\u4e00\u5f20\u56fe\u5f88\u5927": 741, "\u56e0\u6b64\u6570\u636e\u96c6\u7684\u5212\u5206\u662f\u5728\u56fe\u7684\u8282\u70b9\u96c6\u4e0a\u8fdb\u884c": 737, "\u56e0\u6b64\u672c\u793a\u4f8b\u8bf4\u660e\u4e86\u5982\u4f55\u4f7f\u7528\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5411\u91cf\u7684\u70b9\u79ef\u6765\u8ba1\u7b97\u5206\u6570": 760, "\u56e0\u6b64\u7528\u6237\u65e0\u6cd5\u4ecenn\u6a21\u5757\u7684\u53c2\u6570\u8bbf\u95ee\u5b83": 740, "\u56e0\u6b64\u76f4\u63a5\u5728\u8fb9\u754c\u5b50\u56fe\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012\u6709\u5f88\u5927\u5f00\u9500": 757, "\u56e0\u6b64\u901a\u5e38\u53ef\u4ee5\u5728\u968f\u673a\u62bd\u53d6\u7684\u5c0f\u6279\u6b21\u56fe\u4e0a\u8fdb\u884c\u9ad8\u6548\u7684\u8bad\u7ec3": 770, "\u56e0\u6b64\u9700\u8981\u5c06\u6240\u8981\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b": 768, "\u56fe": [737, 750], "\u56fe\u4e0a\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38\u6709\u4e09\u79cd\u7c7b\u578b": 737, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5b50\u56fe\u5bf9\u5e94\u4e00\u5f20\u539f\u59cb\u5c0f\u56fe": 770, "\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u662fdgl\u901a\u8fc7\u7ed9\u5b9a\u7684\u56fe\u7684\u8fb9\u5217\u8868\u4e2d\u6700\u5927\u7684\u70b9id\u63a8\u65ad\u6240\u5f97\u51fa\u7684": 748, "\u56fe\u5212\u5206api\u5f53\u524d\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c": 741, "\u56fe\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u4e8c\u5206\u56fe": 765, "\u56fe\u53ef\u4ee5\u662f": 744, "\u56fe\u540d\u79f0\u6807\u8bc6\u4e86\u96c6\u7fa4\u4e2d\u6240\u9700\u52a0\u8f7d\u7684\u56fe": 740, "\u56fe\u5c06\u4f1a\u88ab\u89c6\u4e3a\u4e8c\u5206\u56fe": 765, "\u56fe\u6216\u5f20\u91cf": 747, "\u56fe\u6570\u636e\u4e2d\u7684\u8bad\u7ec3": 772, "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [750, 767, 770, 772], "\u56fe\u662f\u7528\u4ee5\u8868\u793a\u5b9e\u4f53\u53ca\u5176\u5173\u7cfb\u7684\u7ed3\u6784": 744, "\u56fe\u6ce8\u610f\u529b\u7f51\u7edc": 769, "\u56fe\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210": 744, "\u56fe\u7684": 737, "\u56fe\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4e86": 772, "\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e2a\u5178\u578b\u9009\u9879\u662f\u805a\u5408\u7c7b\u578b": 764, "\u56fe\u8868\u793a\u5b9e\u4f53": 743, "\u5728": [737, 738, 740, 762, 765], "\u5728dgl": 763, "\u5728dgl\u4e2d": [749, 752, 754, 757], "\u5728dgl\u4e2d\u79f0\u4e4b\u4e3a": 762, "\u5728dgl\u7684\u56fe\u91cc": 748, "\u5728dgl\u91cc\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5b9e\u73b0\u8fd9\u4e00\u9700\u6c42": 769, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 743, "\u5728gpu\u4e0a\u8fdb\u884c\u5168\u56fe\u524d\u5411\u4f20\u64ad\u901a\u5e38\u7531\u4e8e\u663e\u5b58\u5927\u5c0f\u7684\u9650\u5236\u800c\u4e0d\u53ef\u884c": 759, "\u5728graph": 752, "\u5728jupyt": 740, "\u5728mxnet\u4e2d\u662ffloat\u5f20\u91cf": 737, "\u5728nn\u6a21\u5757\u4e2d": 765, "\u5728node": 736, "\u5728python\u5b57\u5178\u91cc\u4fdd\u5b58\u5176\u4ed6\u4fe1\u606f": 738, "\u5728sageconv\u4e2d": 764, "\u5728sageconv\u8bba\u6587\u91cc": 764, "\u5728update_all\u5916\u8c03\u7528\u66f4\u65b0\u51fd\u6570": 752, "\u5728user\u7c7b\u578b\u7684\u8282\u70b9\u548cclick\u7c7b\u578b\u7684\u8fb9\u4e0a\u968f\u673a\u751f\u6210\u8bad\u7ec3\u96c6\u7684\u63a9\u7801": 767, "\u5728\u4e00\u4e2a\u52a0\u6743\u56fe\u91cc": 769, "\u5728\u4e00\u4e2a\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 739, "\u5728\u4e00\u5c42\u4e2d": 759, "\u5728\u4e0a\u9762\u7684\u7b49\u5f0f\u4e2d": 751, "\u5728\u4ecb\u7ecddgl\u4e2d\u90bb\u5c45\u91c7\u6837\u7684\u7528\u6cd5\u4e4b\u524d": 757, "\u5728\u4f7f\u7528pytorch\u65f6": 740, "\u5728\u4f7f\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 754, "\u5728\u5185\u7f6e\u6570\u636e\u96c6": 738, "\u5728\u5185\u90e8": 740, "\u5728\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0b": 740, "\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e2d": 740, "\u5728\u521b\u5efa\u56fe\u7684\u65f6\u5019": 748, "\u5728\u521d\u6b65\u4e86\u89e3\u4e86\u5206\u5e03\u5f0f\u7ec4\u4ef6\u540e": 739, "\u5728\u52a0\u6743\u56fe\u4e2d": 744, "\u5728\u533a\u5757\u521b\u5efa\u7684\u9636\u6bb5": 765, "\u5728\u534a\u76d1\u7763\u8282\u70b9\u5206\u7c7b\u7684\u573a\u666f\u91cc": 741, "\u5728\u540c\u6784\u56fe\u4e2d": 744, "\u5728\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e0a\u505a\u8bc4\u5206\u9884\u6d4b\u65f6": 758, "\u5728\u56fe\u5212\u5206\u540e": 741, "\u5728\u56fe\u5212\u5206\u671f\u95f4\u7684\u56fe\u540d\u79f0": 740, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [750, 751], "\u5728\u57fa\u4e8e\u90bb\u5c45\u91c7\u6837\u7684\u8fb9\u5206\u7c7b\u4e2d": 758, "\u5728\u591a\u91cd\u56fe\u4e2d": 744, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": [750, 755, 765, 767], "\u5728\u5b58\u50a8\u56fe\u5206\u533a\u6570\u636e": 739, "\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u91c7\u6837\u5668\u540e": 757, "\u5728\u5bf9\u56fe\u8fdb\u884c\u5212\u5206\u65f6": 741, "\u5728\u5c0f\u6279\u6b21\u8bad\u7ec3\u4e2d": 765, "\u5728\u5f02\u6784\u56fe\u4e0a": 758, "\u5728\u5f02\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u548c\u5728\u540c\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u7565\u6709\u4e0d\u540c": 770, "\u5728\u5f02\u6784\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8282\u70b9\u5206\u7c7b\u7684\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684": 762, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [750, 751], "\u5728\u5f02\u6784\u56fe\u4e2d": 744, "\u5728\u5f02\u6784\u56fe\u7684\u60c5\u51b5\u4e0b": 765, "\u5728\u5f53\u524d\u5b9e\u73b0\u4e2d": 740, "\u5728\u5f97\u5230": 770, "\u5728\u6240\u6709\u8fb9\u7c7b\u578b\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012": 772, "\u5728\u63a8\u8350\u573a\u666f\u4e2d\u5f88\u5e38\u89c1": 768, "\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d": 744, "\u5728\u6574\u4e2a\u56fe\u6279\u6b21\u4e0a\u8fdb\u884c\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3": 770, "\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5": 753, "\u5728\u672c\u4f8b\u4e2d\u7701\u7565": 772, "\u5728\u672c\u8282\u4e2d": 739, "\u5728\u6784\u9020\u51fd\u6570\u4e2d": 764, "\u5728\u67d0\u4e9b\u573a\u666f\u4e2d": 771, "\u5728\u67d0\u79cd\u7c7b\u578b\u7684\u8fb9\u4e0a\u4e3a\u6bcf\u4e00\u6761\u8fb9\u9884\u6d4b\u7684\u7aef\u5230\u7aef\u6a21\u578b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a": 768, "\u5728\u6bcf\u4e2a\u5206\u533a\u7684\u6587\u4ef6\u5939\u5185": 741, "\u5728\u6bcf\u4e2a\u751f\u6210\u5757\u5217\u8868\u7684\u8fed\u4ee3\u4e2d": 762, "\u5728\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u4e2d\u7684\u8282\u70b9\u6570\u4e0a\u5b9e\u73b0\u5206\u533a\u95f4\u7684\u5e73\u8861": 741, "\u5728\u6d88\u606f\u4f20\u9012\u65f6": 752, "\u5728\u6d88\u606f\u51fd\u6570\u91cc": 769, "\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 740, "\u5728\u7528\u591a\u5c42\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 757, "\u5728\u7b2c9\u884c\u547d\u540d\u4e3a": 746, "\u5728\u7c7bdgldataset\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u5904\u7406\u6a21\u7248\u7684\u6d41\u7a0b\u56fe": 734, "\u5728\u7f16\u5199\u5b8c\u8fd9\u4e9b\u4ee3\u7801\u4e4b\u540e": 737, "\u5728\u8bad\u7ec3\u5668\u8fdb\u7a0b\u4e2d": 740, "\u5728\u8bad\u7ec3\u671f\u95f4": 741, "\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u63a9\u7801\u533a\u5206\u8bad\u7ec3": 768, "\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 757, "\u5728\u8fb9\u4e0a\u5c06\u4ee5\u4e0a\u4e24\u90e8\u5206\u7ebf\u6027\u64cd\u4f5c\u7684\u7ed3\u679c\u76f8\u52a0": 753, "\u5728\u8fb9\u96c6": 744, "\u5728\u8fd9\u4e2a\u573a\u666f\u91cc": 770, "\u5728\u8fd9\u4e2a\u6279\u6b21\u7684\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u4ee5\u66f4\u65b0\u8282\u70b9\u6216\u8fb9\u7684\u7279\u5f81": 770, "\u5728\u8fd9\u4e9b\u673a\u5668\u4e0a": 742, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": 765, "\u5728\u8fd9\u91cc\u53ef\u4ee5\u590d\u7528\u4e0a\u8ff0\u63d0\u5230\u7684": 768, "\u5728\u8fdb\u884c\u63a8\u65ad\u65f6": 759, "\u5757": [757, 758, 762], "\u5757\u4e5f\u53ef\u7528\u4e8e\u5f02\u6784\u56fe": 757, "\u5757\u7684\u8f93\u51fa\u8282\u70b9\u4e3a": 757, "\u578b\u8282\u70b9\u5230": 749, "\u578b\u8282\u70b9\u7684\u8fb9": 749, "\u57fa\u4e8egnn\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u9700\u9884\u6d4b\u7684\u8282\u70b9\u5bf9": 771, "\u5904\u7406\u548c\u4fdd\u5b58\u56fe\u6570\u636e\u63d0\u4f9b\u4e86\u7b80\u5355\u800c\u5e72\u51c0\u7684\u89e3\u51b3\u65b9\u6848": 733, "\u5904\u7406\u5b8c\u6210\u7684\u6570\u636e\u96c6\u7684\u4fdd\u5b58\u76ee\u5f55": 734, "\u5904\u7406\u6570\u636e": [733, 750], "\u5904\u7406\u8fc7\u7684\u6570\u636e\u6bd4\u8f83\u5927": 738, "\u590d\u5236\u5230": 742, "\u590d\u5236\u5230gpu": 747, "\u591a\u5c42\u611f\u77e5\u673a": 768, "\u5927\u90e8\u5206\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u9988\u8ba1\u7b97\u4e2d\u4ec5\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5f15\u5165\u56fe\u7ed3\u6784\u4fe1\u606f": 769, "\u5982": [745, 748, 760, 767, 768, 772], "\u5982panda": 745, "\u5982\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684": 746, "\u5982\u4e0b": 746, "\u5982\u4e0b\u4ee3\u7801\u6240\u6f14\u793a\u7684": 757, "\u5982\u4e0b\u4f8b\u6240\u793a": 748, "\u5982\u4e0b\u56fe\u6240\u793a": [756, 757], "\u5982\u4e0b\u6240\u793a": [757, 758], "\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u6240\u793a": 748, "\u5982\u4ee3\u7801\u6240\u793a": 737, "\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a": 740, "\u5982\u524d\u6240\u8ff0": 740, "\u5982\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b": 746, "\u5982\u63cf\u8ff0\u8282\u70b9\u4e4b\u95f4\u7684\u5bf9\u79f0\u5173\u7cfb": 744, "\u5982\u63cf\u8ff0\u975e\u5bf9\u79f0\u5173\u7cfb": 744, "\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684id\u76f8\u540c": 758, "\u5982\u679c\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u9002\u7528": 749, "\u5982\u679c\u4ee5\u6a21\u578b\u9009\u62e9\u4e3a\u76ee\u7684\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u8bc4\u4ef7\u6307\u6807": 759, "\u5982\u679c\u4f7f\u7528": 748, "\u5982\u679c\u5177\u6709\u6700\u5927id\u7684\u8282\u70b9\u6ca1\u6709\u8fb9": 748, "\u5982\u679c\u539f\u56fe\u5305\u542b\u591a\u79cd\u8282\u70b9\u7c7b\u578b": 761, "\u5982\u679c\u539f\u56fe\u53ea\u5305\u542b\u4e00\u79cd\u8282\u70b9\u7c7b\u578b": 761, "\u5982\u679c\u539f\u59cb\u6570\u636e\u5df2\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6": 737, "\u5982\u679c\u53ea\u9884\u6d4b": 772, "\u5982\u679c\u540e\u7aef\u6846\u67b6\u4e5f\u63d0\u4f9b\u4e86\u4ece\u78c1\u76d8\u4e2d\u4fdd\u5b58\u6216\u52a0\u8f7d\u5f20\u91cf\u7684\u5de5\u5177": 745, "\u5982\u679c\u56fe\u662f\u5f02\u6784\u7684": 772, "\u5982\u679c\u56fe\u91cc\u53ea\u6709\u4e00\u79cd\u8282\u70b9\u6216\u8fb9\u7c7b\u578b": 749, "\u5982\u679c\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8005\u8fb9\u7684\u6570\u91cf\u5c0f\u4e8e": 748, "\u5982\u679c\u5bf9\u901f\u5ea6\u4e0d\u592a\u5173\u6ce8\u7684\u8bdd": 745, "\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 762, "\u5982\u679c\u6570\u636e\u96c6\u662f\u4e00\u4e2azip\u6587\u4ef6": 735, "\u5982\u679c\u6587\u4ef6\u662f": 735, "\u5982\u679c\u662f\u4ece\u56fe\u4e2d\u5f97\u5230\u7684\u8fb9\u754c": 757, "\u5982\u679c\u672a\u63d0\u4f9b\u5177\u4f53\u7aef\u53e3": 742, "\u5982\u679c\u6a21\u578b\u540c\u65f6\u5177\u6709\u8282\u70b9\u5d4c\u5165\u548c\u89c4\u5219\u7684\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 740, "\u5982\u679c\u7279\u5f81\u5b58\u50a8\u5728": 762, "\u5982\u679c\u7528\u6237\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u7684\u6a21\u578b\u8ba1\u7b97\u4e86\u8282\u70b9\u7684\u8868\u793a": 768, "\u5982\u679c\u7528\u6237\u53ea\u60f3\u66f4\u65b0\u56fe\u4e2d\u7684\u90e8\u5206\u8282\u70b9": 755, "\u5982\u679c\u7528\u6237\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u4e00\u6b21\u4ec5\u4f7f\u7528\u4e00\u5f20\u56fe": 770, "\u5982\u679c\u7528\u6237\u5df2\u6709\u4e00\u4e2a\u7528\u4e8e\u6574\u4e2a\u56fe\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u4f20\u9012\u6a21\u5757": 761, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u6570\u636e\u96c6\u6216\u5176\u4ed6\u517c\u5bb9": 767, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5220\u9664\u5f02\u6784\u56fe\u4e2d\u7684\u53cd\u5411\u8fb9": 758, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5f00\u53d1\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 758, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 762, "\u5982\u679c\u7528\u6237\u60f3\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u4e00\u4e2a\u5206\u6570": 768, "\u5982\u679c\u7528\u6237\u60f3\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u4ee3\u7801\u800c\u53c8\u4e0d\u60f3\u81ea\u5df1\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u6b63\u786e\u7684\u76ee\u5f55\u4e2d": 735, "\u5982\u679c\u7528\u6237\u60f3\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 760, "\u5982\u679c\u7528\u6237\u60f3\u9884\u6d4b\u8fb9\u7c7b\u578b\u4e3a": 768, "\u5982\u679c\u7528\u6237\u6709\u5305\u542b\u6570\u767e\u4e07\u751a\u81f3\u6570\u5341\u4ebf\u4e2a\u8282\u70b9\u6216\u8fb9\u7684\u5927\u56fe": 756, "\u5982\u679c\u7528\u6237\u6a21\u578b\u5728\u5168\u56fe\u4e0a\u662f\u6309\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u7684": 762, "\u5982\u679c\u7528\u6237\u719f\u6089": 771, "\u5982\u679c\u7528\u6237\u719f\u6089\u5982\u4f55\u5b9a\u5236\u7528\u4e8e\u66f4\u65b0\u6574\u4e2a\u540c\u6784\u56fe\u6216\u5f02\u6784\u56fe\u7684gnn\u6a21\u5757": 761, "\u5982\u679c\u7528\u6237\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 735, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570\u65e0\u6cd5\u7528\u5185\u7f6e\u51fd\u6570\u5b9e\u73b0": 752, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757\u5168\u4f7f\u7528\u7684\u662fdgl\u5185\u7f6e\u6a21\u5757": 762, "\u5982\u679c\u7528\u6237\u8981\u5f15\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 740, "\u5982\u679c\u8981\u4ee5\u67d0\u79cd\u6982\u7387\u5c06\u79cd\u5b50\u8282\u70b9\u7684\u5165\u8fb9\u968f\u673a\u5254\u9664": 757, "\u5982\u679c\u8bad\u7ec3\u811a\u672c\u91cc\u5305\u542b\u9700\u8981\u5728\u670d\u52a1\u5668": 740, "\u5982\u679c\u8be5api\u6ca1\u6709\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0id": 741, "\u5982\u679c\u8be5\u7c7b\u7ee7\u627f\u81ea": 735, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u4e0d\u662f\u5757": 761, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u662f\u4e00\u4e2a\u5757": 761, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5f20\u91cf\u5bf9": 761, "\u5982\u679c\u9700\u8981\u7684\u8bdd": 772, "\u5b50\u56fe\u5728dgl\u4e2d\u79f0\u4e3a\u533a\u5757": 765, "\u5b50\u56fe\u5757\u7684\u60c5\u51b5": 765, "\u5b50\u56fe\u662f\u4ece\u76f8\u540c\u7684\u6570\u636e\u52a0\u8f7d\u5668\u4ea7\u751f\u7684": 758, "\u5b50\u56fe\u91c7\u6837\u548c\u90bb\u5c45\u91c7\u6837\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11\u7528gpu\u8bad\u7ec3gnn\u6a21\u578b\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6d88\u8017": 759, "\u5b50\u6a21\u5757\u6839\u636e\u805a\u5408\u7c7b\u578b\u800c\u6709\u6240\u4e0d\u540c": 764, "\u5b50\u7c7b\u4e4b\u5916\u5b8c\u6210": 734, "\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570": 734, "\u5b58\u50a8\u4e86\u5212\u5206\u63a9\u7801": 737, "\u5b58\u50a8\u4e86\u8f93\u5165\u8282\u70b9\u7279\u5f81": 769, "\u5b58\u50a8\u5206\u533a\u7684\u56fe\u7ed3\u6784\u4ee5\u53ca\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u4e00\u4e9b\u5143\u6570\u636e": 741, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u533aid": 741, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u7684\u5206\u533aid": 741, "\u5b58\u50a8\u5c5e\u4e8e\u8be5\u5206\u533a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u7279\u5f81": 741, "\u5b58\u50a8\u6587\u4ef6\u7684\u8def\u5f84": 735, "\u5b58\u50a8\u9690\u5c42\u8868\u793a\u9700\u8981": 756, "\u5b5f\u51e1\u8363": 750, "\u5b83\u4e3a": 740, "\u5b83\u4ece\u805a\u5408\u4e0e\u66f4\u65b0\u7684\u89d2\u5ea6\u5f52\u7eb3\u603b\u7ed3\u4e86\u591a\u79cdgnn\u6a21\u578b\u7684\u5b9e\u73b0": 751, "\u5b83\u4eec\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684api\u76f8\u4f3c": 739, "\u5b83\u4eec\u4e3b\u8981\u88ab\u7528\u6765\u63d0\u4f9b\u56fe\u4fe1\u606f": 740, "\u5b83\u4eec\u53ea\u5305\u62ec\u4e00\u79cd\u5173\u7cfb": 749, "\u5b83\u4eec\u5b58\u50a8\u8282\u70b9\u548c\u8fb9id\u4e0e\u5206\u533aid\u4e4b\u95f4\u7684\u6620\u5c04": 741, "\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e": 740, "\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f\u5b57\u7b26\u4e32": 752, "\u5b83\u4eec\u786e\u4fdd\u6240\u6709\u90e8\u5206\u90fd\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u548c\u8fb9": 740, "\u5b83\u4eec\u901a\u8fc7": 744, "\u5b83\u4eec\u9075\u5faa\u4e86\u7531": 733, "\u5b83\u4eec\u90fd\u662f\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9": 765, "\u5b83\u5141\u8bb8\u7528\u6237\u4e3a\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u90e8\u5206\u90bb\u5c45\u8282\u70b9\u4ee5\u6c47\u805a\u4fe1\u606f": 757, "\u5b83\u5177\u6709": 768, "\u5b83\u5177\u6709\u4e0e\u5e38\u89c4\u5f20\u91cf\u76f8\u540c\u7684api": 740, "\u5b83\u5206\u6279\u8fed\u4ee3\u8bad\u7ec3\u8282\u70b9id\u6570\u7ec4": 762, "\u5b83\u52a0\u8f7d\u5206\u533a\u6570\u636e": 740, "\u5b83\u5305\u62ec": 766, "\u5b83\u53ef\u4ee5\u7528\u6700\u5c11\u7684\u8fb9\u5206\u5272\u4ee5\u751f\u6210\u5206\u533a": 741, "\u5b83\u53ef\u83b7\u53d6\u8282\u70b9\u7684\u6240\u6709\u90bb\u5c45": 762, "\u5b83\u5728\u5355\u4e2aapi\u8c03\u7528\u91cc\u5408\u5e76\u4e86\u6d88\u606f\u751f\u6210": 752, "\u5b83\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6240\u6709\u8ba1\u7b97": 740, "\u5b83\u5b9e\u73b0\u4e86\u7528\u4e8e\u5904\u7406\u56fe\u6570\u636e\u7684\u57fa\u672c\u6a21\u7248": 734, "\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9": 760, "\u5b83\u5c06\u4ee5\u72ec\u7acb\u6a21\u5f0f\u8fd0\u884c": 740, "\u5b83\u5c06\u751f\u6210\u4e24\u4e2a\u989d\u5916\u7684numpy\u6587\u4ef6": 741, "\u5b83\u5e94\u5f53\u4ee5\u539f\u56fe": 760, "\u5b83\u5e94\u8be5\u7ee7\u627f": 763, "\u5b83\u6307\u5b9a\u8282\u70b9\u96c6\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u7c7b\u578b\u7ea6\u675f": 749, "\u5b83\u63a5\u53d7\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408\u4f5c\u4e3a\u8f93\u5165": 748, "\u5b83\u662fgraphsage\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u56fe\u5377\u79ef\u6a21\u5757": 772, "\u5b83\u662f\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 762, "\u5b83\u7528": 739, "\u5b83\u7ee7\u627f\u81ea": 734, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8282\u70b9": 752, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8fb9": 752, "\u5b83\u8fd4\u56de\u4ee5\u8fb9\u7c7b\u578b\u4e3a\u952e": 760, "\u5b83\u901a\u8fc7\u5c06\u8fb9\u4e0a\u7279\u5f81\u4e0e\u5176\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408\u6765\u751f\u6210\u6d88\u606f": 751, "\u5b8b\u6021\u7136": 750, "\u5b8c\u5168\u76f8\u540c": 758, "\u5b8c\u6574\u7684\u5185\u7f6e\u91c7\u6837\u65b9\u6cd5\u6e05\u5355": 762, "\u5b98\u65b9\u7684": 736, "\u5b9a\u4e49": [740, 749], "\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u9010\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u8ba1\u7b97": 751, "\u5b9a\u4e49\u6a21\u578b\u548c\u4f18\u5316\u5668": 739, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 762, "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [750, 756, 758, 762], "\u5b9e\u4f8b\u5316heterographconv": 772, "\u5b9e\u4f8b\u5316sageconv": 772, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad\u7684\u65b9\u6cd5\u4f9d\u7136\u9700\u8981\u4f7f\u7528": 759, "\u5b9e\u73b0\u903b\u8f91\u4e0e\u6d88\u606f\u4f20\u9012\u7ea7\u522b\u7684api": 766, "\u5b9e\u9645\u5e94\u7528\u4e2d": 771, "\u5bf9dataloader\u8fdb\u884c\u8fed\u4ee3": 762, "\u5bf9\u4e00\u6761\u8fb9\u8ba1\u7b97\u9884\u6d4b\u503c\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5c06\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u51fd\u6570": 768, "\u5bf9\u4e8e": 761, "\u5bf9\u4e8emxnet\u540e\u7aef": 763, "\u5bf9\u4e8epytorch\u540e\u7aef": 763, "\u5bf9\u4e8etensorflow\u540e\u7aef": 763, "\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26\u6743\u91cd\u7684\u56fe": 769, "\u5bf9\u4e8e\u4e00\u4e2a\u52a0\u6743\u56fe": 769, "\u5bf9\u4e8e\u4e00\u4e2a\u6307\u5b9a\u7684\u5c42": 759, "\u5bf9\u4e8e\u4e00\u5143\u51fd\u6570": 752, "\u5bf9\u4e8e\u4e00\u822c\u7684pytorch\u6a21\u5757": 764, "\u5bf9\u4e8e\u4e8c\u5143\u51fd\u6570": 752, "\u5bf9\u4e8e\u4e8c\u5206\u56fe": 766, "\u5bf9\u4e8e\u5168\u90bb\u5c45\u91c7\u6837": 762, "\u5bf9\u4e8e\u5177\u6709\u4e24\u4e2a\u5173\u7cfb": 749, "\u5bf9\u4e8e\u5177\u6709\u5341\u4ebf\u7ea7\u6570\u91cf\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 741, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3": 740, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u8bc4\u4f30": 740, "\u5bf9\u4e8e\u52a0\u6743\u56fe": 746, "\u5bf9\u4e8e\u540c\u6784\u56fe\u4e0a\u7684\u5168\u56fe\u8bad\u7ec3": 765, "\u5bf9\u4e8e\u56fe\u4e0a\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b": 772, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc": 764, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4": 772, "\u5bf9\u4e8e\u591a\u4e2a\u8282\u70b9": 748, "\u5bf9\u4e8e\u5e95\u5c42\u7684\u91c7\u6837api": 740, "\u5bf9\u4e8e\u5f97\u5206\u7684\u9884\u6d4b": 760, "\u5bf9\u4e8e\u65e0\u5411\u7684\u56fe": 748, "\u5bf9\u4e8e\u65e0\u6cd5\u5168\u90e8\u8f7d\u5165\u7684\u60c5\u51b5": 767, "\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5": 753, "\u5bf9\u4e8e\u6d88\u606f\u4f20\u9012": 752, "\u5bf9\u4e8e\u7279\u5b9a\u76ee\u6807\u8282\u70b9": 764, "\u5bf9\u4e8e\u79bb\u7ebf\u63a8\u65ad\u7684\u793a\u4f8b": 759, "\u5bf9\u4e8e\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 740, "\u5bf9\u4e8e\u8981\u62f7\u8d1d\u7684\u7279\u5f81": 749, "\u5bf9\u4e8e\u8bad\u7ec3\u811a\u672c": 739, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u6570\u91cf": 761, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u7279\u5f81": 761, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u6570\u91cf": 761, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 761, "\u5bf9\u4e8e\u8fb9\u56de\u5f52\u4efb\u52a1": 768, "\u5bf9\u4e8e\u8fd9\u4e2a\u5757": 757, "\u5bf9\u4e8e\u90bb\u5c45\u91c7\u6837": 757, "\u5bf9\u5176\u8fdb\u884c\u62c6\u5206": 740, "\u5bf9\u56fe\u8fdb\u884c\u5206\u533a\u7684\u8ba1\u7b97\u673a": 742, "\u5bf9\u5b83\u6240\u6709\u8282\u70b9\u7279\u5f81\u53d6\u5e73\u5747\u503c\u7684\u805a\u5408\u8bfb\u51fa\u516c\u5f0f\u5982\u4e0b": 770, "\u5bf9\u5e94\u4e8e\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b": 749, "\u5bf9\u5e94\u7740\u4e0b\u56fe\u6240\u793a\u7684\u5305\u542b4\u4e2a\u8282\u70b9\u7684\u56fe": 748, "\u5bf9\u5f02\u6784\u56fe\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u7684\u63a5\u53e3\u662f": 754, "\u5bf9\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u5408\u5e76\u7528\u6237\u6307\u5b9a\u7684\u7279\u5f81": 749, "\u5bf9\u6240\u6709\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u6c42\u548c": 770, "\u5bf9\u6bcf\u4e2a\u5173\u7cfb\u8ba1\u7b97\u548c\u805a\u5408\u6d88\u606f": 754, "\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u6d88\u606f": 754, "\u5bf9\u6bcf\u6761\u8fb9\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u8868\u793a": 768, "\u5bf9\u8c61": [740, 741, 745, 748], "\u5bf9\u8c61\u65f6": 745, "\u5bf9\u8c61\u67098\u6761\u8fb9": 745, "\u5bf9\u8c61\u6d88\u5931": 740, "\u5bf9\u8c61\u7684api": 736, "\u5bf9\u8c61\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 748, "\u5bf9\u8c61\u7684\u5217\u8868\u548c\u6807\u7b7e\u5f20\u91cf\u7684\u5217\u8868": 737, "\u5bf9\u8c61\u7684\u8282\u70b9\u548c\u8fb9\u53ef\u5177\u6709\u591a\u4e2a\u7528\u6237\u5b9a\u4e49\u7684": 746, "\u5bf9\u8f93\u5165\u8282\u70b9\u7279\u5f81": 761, "\u5bfc\u5165\u548c\u4fdd\u5b58": 734, "\u5bfc\u5165\u5904\u7406\u540e\u7684\u6570\u636e": 734, "\u5bfc\u5165\u6570\u636e": 737, "\u5c06": 761, "\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 741, "\u5c06\u4e00\u5f20\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u805a\u5408\u6210\u6574\u5f20\u56fe\u7684\u56fe\u8868\u793a": 770, "\u5c06\u4e0a\u8ff0\u56fe\u4f5c\u4e3a\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u8f93\u5165": 768, "\u5c06\u4e0e\u8f93\u5165\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u7279\u5f81\u52a0\u8f7d\u5230gpu\u4e0a": 762, "\u5c06\u4e0e\u8f93\u51fa\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u6807\u7b7e\u52a0\u8f7d\u5230gpu\u4e0a": 762, "\u5c06\u4e3a\u7a7a": 765, "\u5c06\u4ee5\u5206\u5e03\u5f0f\u6a21\u5f0f\u8fd0\u884c": 740, "\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u56fe\u7684\u5217\u8868": 762, "\u5c06\u4f1a\u62a5\u9519": 757, "\u5c06\u5176\u547d\u540d\u4e3a": 746, "\u5c06\u539f\u59cb\u6570\u636e\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8": 734, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe": 734, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 737, "\u5c06\u5757\u5217\u8868\u548c\u8f93\u5165\u8282\u70b9\u7279\u5f81\u4f20\u5165\u591a\u5c42gnn\u5e76\u83b7\u53d6\u8f93\u51fa": 762, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u4fdd\u5b58\u81f3": 734, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u7f13\u5b58\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 738, "\u5c06\u5f97\u5230\u7684\u56fe\u548c\u8f93\u5165\u7279\u5f81\u4f20\u5165\u4e0a\u8ff0\u6a21\u578b": 760, "\u5c06\u5fc5\u8981\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81\u590d\u5236\u5230gpu\u4e0a": 759, "\u5c06\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 737, "\u5c06\u6570\u636e\u96c6\u7684\u6709\u7528\u4fe1\u606f": 738, "\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55self": 735, "\u5c06\u6bcf\u4e2a\u7c7b\u578b\u6d88\u606f\u805a\u5408\u7684\u7ed3\u679c\u76f8\u52a0": 754, "\u5c06\u88ab\u6e05\u9664": 752, "\u5c06\u8ba1\u7b97\u673a": 742, "\u5c06\u8f93\u51fa\u590d\u5236\u56decpu": 759, "\u5c06\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 769, "\u5c0f\u6279\u6b21\u662f\u4e00\u4e2a\u5143\u7ec4": 736, "\u5c24\u5176\u662f\u5728\u5305\u542b\u5927\u91cf\u672a\u6807\u8bb0\u6570\u636e\u7684\u534a\u76d1\u7763\u7cfb\u7edf\u4e2d": 759, "\u5c31\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 757, "\u5c31\u597d\u50cf\u8fd9\u4e9b\u8fb9\u6839\u672c\u4e0d\u5b58\u5728\u4e00\u6837": 758, "\u5c31\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u7684\u5e73\u5747\u503c\u8bfb\u51fa\u8ba1\u7b97": 770, "\u5c31\u662f\u56fe\u7684\u6a21\u5f0f": 749, "\u5c3d\u53ef\u80fd": 752, "\u5c42\u56fe\u5377\u79ef\u7f51\u7edc": 756, "\u5c42\u8fdb\u884c\u8ba1\u7b97": 756, "\u5c42\u9009\u62e9\u8be5\u6279\u6b21\u8282\u70b9\u7684\u5168\u90e8\u6216\u90e8\u5206\u90bb\u5c45\u8282\u70b9": 756, "\u5c5e\u4e8e\u53e6\u4e00\u7c7b\u578b\u7684\u53cd\u5411\u8fb9": 758, "\u5d4c\u5165": 739, "\u5df2\u7ecf\u8d2d\u4e70": 744, "\u5e26\u6807\u7b7e\u548c\u672a\u5e26\u6807\u7b7e": 741, "\u5e38\u7528\u7684\u5f02\u6784\u56fe": 744, "\u5e38\u7528\u7684\u805a\u5408\u7c7b\u578b\u5305\u62ec": 764, "\u5e38\u89c1\u7684\u66f4\u65b0\u64cd\u4f5c\u662f\u6839\u636e\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u6765\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u548c\u8fdb\u884c\u5f52\u4e00\u5316": 765, "\u5e38\u89c1\u7684\u805a\u5408\u65b9\u6cd5\u5305\u62ec": 770, "\u5e76\u4e14\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u901a\u4fe1": 740, "\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u8c03\u7528\u5b83\u65f6": 740, "\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u7ef4\u5ea6\u5e7f\u64ad": 752, "\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7": 757, "\u5e76\u4e14\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 752, "\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8868\u793a\u8bad\u7ec3": 740, "\u5e76\u4e14\u60f3\u5c06\u5176\u7528\u4e8e\u5757": 761, "\u5e76\u4e14\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u7684\u5b57\u5178": [758, 760], "\u5e76\u4e14\u6709\u591a\u4e2a\u5df2\u6709\u7684api\u53ef\u4ee5\u7b80\u5316\u6b64\u64cd\u4f5c": 734, "\u5e76\u4e14\u7528\u6237\u4e0d\u5e0c\u671b\u5728\u5efa\u6a21\u4e2d\u533a\u5206\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b": 749, "\u5e76\u4e14\u7528\u6237\u5e0c\u671b\u5bf9\u5d4c\u5165\u6267\u884c\u7a00\u758f\u66f4\u65b0": 740, "\u5e76\u4e14\u805a\u5408\u51fd\u6570\u7684\u8f93\u51fa\u503c\u5168\u4e3a0": 765, "\u5e76\u4e14\u904d\u5386\u79cd\u5b50\u8282\u70b9\u751f\u6210\u4e00\u7cfb\u5217\u7684\u5757": 757, "\u5e76\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u51fa\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u53ef\u80fd\u5f97\u5206": 768, "\u5e76\u4e3a\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4f7f\u7528\u4e00\u79cd\u56fe\u5377\u79ef\u6a21\u5757": 772, "\u5e76\u4ece\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 768, "\u5e76\u4f5c\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u6700\u7ec8\u7ed3\u679c": 772, "\u5e76\u4f7f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8bad\u7ec3\u5668\u5747\u53ef\u8bbf\u95ee\u5b83\u4eec": 740, "\u5e76\u5411\u672c\u5730\u8bad\u7ec3\u5668\u8fd4\u56de\u4e00\u90e8\u5206": 740, "\u5e76\u5411\u672c\u5730\u8fdb\u7a0b\u8fd4\u56de\u8282\u70b9\u7684\u5b50\u96c6": 740, "\u5e76\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\u4f7f\u7528": 768, "\u5e76\u5728\u540c\u6837\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u5c06\u5206\u533a\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 739, "\u5e76\u5728\u6240\u6709\u673a\u5668\u4e0a\u542f\u52a8\u8bad\u7ec3\u4efb\u52a1": 739, "\u5e76\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u8981\u8fdb\u884c\u591a\u8f6e\u7684\u4fe1\u606f\u4f20\u9012": 772, "\u5e76\u5bf9\u5b83\u4eec\u5e94\u7528\u76f8\u540c\u7684\u64cd\u4f5c": 749, "\u5e76\u5bf9\u8282\u70b9\u548c\u8fb9\u91c7\u6837\u4ee5\u751f\u6210\u7528\u4e8e\u8bad\u7ec3\u7684\u5c0f\u6279\u6b21\u6570\u636e": 739, "\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5757": 757, "\u5e76\u5c06\u5206\u533a\u6570\u636e\u81ea\u52a8\u52a0\u8f7d\u5230\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e2d": 740, "\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u7a00\u758f\u4f18\u5316\u5668": 740, "\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d": 740, "\u5e76\u5c06\u751f\u6210\u7684\u5757\u5217\u8868\u653e\u5230gpu\u4e0a": 758, "\u5e76\u5c06\u751f\u6210\u7684\u5b50\u56fe\u5217\u8868\u653e\u5230gpu\u4e0a": 762, "\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728outputs\u5b57\u5178\u4e2d": 766, "\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237": 766, "\u5e76\u5c06\u8f93\u51fa\u4f5c\u4e3a\u8282\u70b9\u7684\u65b0\u7279\u5f81": 752, "\u5e76\u5c55\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u7ba1\u9053\u7684\u6bcf\u4e2a\u7ec4\u4ef6": 733, "\u5e76\u63d0\u53d6\u8f93\u51fa\u7684user\u8282\u70b9\u5d4c\u5165": 772, "\u5e76\u6709\u53ef\u80fd\u5229\u7528\u8fd9\u70b9": 758, "\u5e76\u7528\u5b83\u6784\u9020\u4e00\u4e2a\u5f02\u6784\u56fe": 749, "\u5e76\u7528\u5bf9\u5e94\u7684\u4e24\u4e2a\u7aef\u70b9id\u8868\u793a\u4e00\u6761\u8fb9": 748, "\u5e76\u8ba1\u7b97\u672c\u5730\u8fdb\u7a0b\u7684\u8282\u70b9": 739, "\u5e76\u8df3\u8fc7\u4ece\u6587\u4ef6\u6784\u5efa\u56fe\u7684\u5b9e\u73b0": 737, "\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u7684\u5b57\u5178": 772, "\u5e76\u8fd4\u56de\u6e90\u8282\u70b9id\u6570\u7ec4\u548c\u76ee\u6807\u8282\u70b9id\u6570\u7ec4": 760, "\u5e76\u901a\u8fc7\u5728\u8bad\u7ec3\u8282\u70b9\u4e0a\u6bd4\u8f83\u9884\u6d4b\u548c\u771f\u5b9e\u6807\u7b7e\u6765\u8ba1\u7b97\u635f\u5931": 772, "\u5e76\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u4e2d\u5177\u6709\u5e42\u5f8b\u5206\u5e03\u7684\u56fe\u8fdb\u884c\u4e86\u4f18\u5316": 741, "\u5e94\u7528\u56fe\u5377\u79ef\u548c\u6fc0\u6d3b\u51fd\u6570": 770, "\u5e95\u5c42api\u8981\u6c42\u7528\u6237\u7f16\u5199\u4ee3\u7801\u4ee5\u660e\u786e\u5b9a\u4e49\u5982\u4f55\u5bf9\u8282\u70b9\u5c42\u8fdb\u884c\u91c7\u6837": 740, "\u5efa\u7acb\u70b9\u548c\u8fb9\u7279\u5f81": 768, "\u5efa\u8bae\u7684\u5b9e\u73b0\u662f\u5c06\u7ebf\u6027\u64cd\u4f5c\u5206\u6210\u4e24\u90e8\u5206": 753, "\u5f02\u6784\u56fe": [743, 744, 750, 754, 765], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u540c\u6784\u56fe\u7684\u6a21\u578b\u8bad\u7ec3\u662f\u4e00\u6837\u7684": 772, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": [750, 763], "\u5f02\u6784\u56fe\u4e0a\u7684\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206": 754, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 762, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 771, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u548c\u540c\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6ca1\u6709\u592a\u5927\u533a\u522b": 771, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u6a21\u578b\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u51e0\u4e4e\u76f8\u540c": 760, "\u5f02\u6784\u56fe\u4e2d\u8282\u70b9\u7c7b\u578b\u7684\u987a\u5e8f": 749, "\u5f02\u6784\u56fe\u4e2d\u8fb9\u7c7b\u578b\u7684\u987a\u5e8f": 749, "\u5f02\u6784\u56fe\u4e3a\u7ba1\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u53ca\u5176\u76f8\u5173\u7279\u5f81\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u63a5\u53e3": 749, "\u5f02\u6784\u56fe\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u8fb9\u7684\u7c7b\u578b": 767, "\u5f02\u6784\u56fe\u7684\u5377\u79ef\u64cd\u4f5c\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u53c2\u6570": 766, "\u5f02\u6784\u56fe\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u51e0\u4e4e\u76f8\u540c": 758, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 772, "\u5f02\u6784\u56fe\u91cc\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 749, "\u5f02\u6784\u7684": 744, "\u5f20\u5efa": 750, "\u5f20\u6000\u6587": 750, "\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570\u5fc5\u987b\u5728gpu\u4e0a": 747, "\u5f52\u4e00\u5316": 765, "\u5f52\u4e00\u5316\u53ef\u4ee5\u662fl2\u5f52\u4e00\u5316": 764, "\u5f53": 756, "\u5f531\u4e2a\u8282\u70b9\u5165\u5ea6\u4e3a0\u65f6": 765, "\u5f53\u4e00\u53f0\u673a\u5668\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u65f6": 740, "\u5f53\u4f7f\u7528": 745, "\u5f53\u524d": 740, "\u5f53\u524d\u4ec5\u652f\u6301\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 740, "\u5f53\u524d\u7248\u672c\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3api\u4ec5\u652f\u6301pytorch\u540e\u7aef": 739, "\u5f53\u524d\u7248\u672c\u7684\u5b9e\u73b0\u4ec5\u652f\u6301\u5177\u6709\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 739, "\u5f53\u5f15\u5165\u591a\u79cd\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u540e": 749, "\u5f53\u7528\u6237\u4f7f\u7528\u542f\u52a8\u811a\u672c\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 740, "\u5f53\u7528\u6237\u5728python\u547d\u4ee4\u884c\u6216jupyt": 740, "\u5f53\u811a\u672c\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 740, "\u5f53\u8bad\u7ec3\u811a\u672c\u5728\u8bad\u7ec3\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 740, "\u5f53\u8f93\u5165\u7279\u5f81": 765, "\u5f53\u8fb9\u7c7b\u578b\u552f\u4e00\u5730\u786e\u5b9a\u4e86\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u7684\u7c7b\u578b\u65f6": 749, "\u5f90\u4e1c\u8f89": 750, "\u5f97\u5206": 771, "\u5f97\u5230": 768, "\u5f97\u5230\u5757\u4e2d\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u521d\u59cb\u8282\u70b9id": 757, "\u5f97\u5230\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 761, "\u5f97\u5230\u8fb9id\u5230\u8f93\u5165\u8fb9\u754c\u4e2d\u8fb9\u7684\u521d\u59cbid\u7684\u6620\u5c04": 757, "\u5fc5\u987b\u5728": 740, "\u5fc5\u987b\u5728dgl\u7684\u4efb\u4f55\u5176\u4ed6\u5206\u5e03\u5f0fapi\u4e4b\u524d": 740, "\u5fc5\u987b\u5728\u521d\u59cb\u5316": 740, "\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u7684\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8c03\u7528\u542f\u52a8\u811a\u672c": 742, "\u60c5\u51b5\u4f1a\u6709\u6240\u4e0d\u540c": 758, "\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f": 744, "\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570": 757, "\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u90bb\u5c45\u91c7\u6837\u7b56\u7565": 757, "\u60f3\u8981\u5b9e\u73b0\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u517c\u5bb9\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 756, "\u60f3\u8981\u7528dgl\u63d0\u4f9b\u7684\u90bb\u5c45\u91c7\u6837\u5668\u505a\u8fb9\u5206\u7c7b": 758, "\u60f3\u8d2d\u4e70": 744, "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528g": 766, "\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528\u4e00\u4e2a\u96c6\u7fa4\u7684\u73af\u5883\u8bbe\u7f6e": 739, "\u6216": [744, 749, 761], "\u6216numpi": 748, "\u6216\u4e3a\u76f8\u5173\u5b9e\u4f53\u63a8\u8350\u8fdb\u884c\u6700\u8fd1\u90bb\u641c\u7d22\u6216\u6700\u5927\u5185\u79ef\u641c\u7d22": 771, "\u6216\u65e0\u5411\u56fe\u4e2d\u7684\u90bb\u5c45": 757, "\u6216\u662f": 744, "\u6216\u8005\u60f3\u8981\u5173\u4e8e\u5757\u7684\u66f4\u6df1\u5165\u7684\u4ecb\u7ecd": 762, "\u6216\u8005\u60f3\u8981\u5bf9\u5757\u7684\u6982\u5ff5\u6709\u66f4\u8be6\u7ec6\u7684\u4e86\u89e3": 758, "\u6240\u4ee5dgl\u4e0d\u63a8\u8350\u5728": 752, "\u6240\u4ee5\u5f53\u5c06\u65e0\u5411\u7684networkx\u56fe\u8f6c\u6362\u4e3a": 745, "\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u5c06\u5176\u9644\u52a0\u5230\u4f18\u5316\u5668\u4e0a\u4ee5\u8fdb\u884c\u5c0f\u6279\u91cf\u8bad\u7ec3": 740, "\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019": 738, "\u6240\u4ee5\u8fd9\u91cc\u96be\u4ee5\u679a\u4e3e\u6240\u6709\u9009\u9879": 745, "\u6240\u6709\u6d88\u606f\u4f20\u9012\u51fd\u6570": 770, "\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6709\u65b9\u5411\u7684": 748, "\u6240\u6709\u8282\u70b9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5b9e\u4f53": 744, "\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u5fc5\u987b\u8c03\u7528\u521b\u5efa": 740, "\u6240\u6709\u8fb9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5173\u7cfb": 744, "\u6240\u8ff0": 767, "\u6267\u884c\u542f\u52a8\u811a\u672c\u7684\u8ba1\u7b97\u673a": 742, "\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u5bf9\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u64cd\u4f5c": 752, "\u6269\u5c55\u4e3a": 765, "\u6279\u6b21": [750, 755, 762, 765, 767], "\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u5f20\u91cf\u5747\u901a\u8fc7\u5c06\u6240\u6709\u56fe\u4e0a\u7684\u76f8\u5e94\u7279\u5f81\u62fc\u63a5\u5f97\u5230": 770, "\u6279\u6b21\u5316\u7684\u56fe": 770, "\u6279\u91cf\u5f52\u4e00\u5316\u7b49": 770, "\u628a\u5b83\u5b58\u5728\u56fe\u4e2d\u7528\u6765\u505a\u6d88\u606f\u4f20\u9012": 754, "\u628a\u5b83\u7684\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\u53d8\u6210\u4e86\u4e00\u4e2a\u5c0f\u7684\u4e8c\u5206\u56fe": 757, "\u628a\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 769, "\u62bd\u53d6\u51fa\u6765": 766, "\u62c6\u5206\u8bad\u7ec3\u96c6": 739, "\u62f7\u8d1d\u8282\u70b9\u7279\u5f81": 749, "\u62f7\u8d1d\u8fb9\u7684\u7279\u5f81": 749, "\u62fc\u63a5": 753, "\u6307\u4ee3\u4e00\u6761": 748, "\u6307\u5411\u8282\u70b9": 748, "\u6307\u5b9a\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55\u6216\u5df2\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55": 734, "\u6307\u5b9a\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 742, "\u6307\u5b9a\u56fe\u7c7b\u578b": 765, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u5206\u533a\u6570\u636e\u7684\u76f8\u5bf9\u8def\u5f84": 742, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u7528\u6237\u7684\u8bad\u7ec3\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84": 742, "\u6307\u5b9a\u6bcf\u4e2a\u5173\u7cfb\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570": 754, "\u6307\u5b9a\u8bad\u7ec3\u673a\u5668\u4e2d\u5b58\u50a8\u4e0e\u5206\u5e03\u5f0f\u8bad\u7ec3\u6709\u5173\u7684\u6240\u6709\u6570\u636e\u7684\u76ee\u5f55": 742, "\u6307\u5b9a\u96c6\u7fa4\u7684ip\u914d\u7f6e\u6587\u4ef6": 742, "\u6307\u793a\u76f8\u5e94\u8282\u70b9\u548c\u8fb9\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7279\u5f81\u5b57\u6bb5\u540d": 752, "\u6362\u53e5\u8bdd\u8bf4": 740, "\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570": 752, "\u63a5\u53d7\u4e00\u4e2a\u5982\u4e0a\u6240\u8ff0\u7684\u53c2\u6570": 752, "\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178": 754, "\u63a5\u53d7\u6765\u81ea\u540e\u7aef\u6846\u67b6\u7684\u4efb\u4f55\u8bbe\u5907\u5bf9\u8c61": 747, "\u63a5\u53e3\u53ef\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5f81": 746, "\u63a5\u53e3\u7684\u91cd\u8981\u8bf4\u660e": 746, "\u63a5\u6536\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u5f20\u91cf\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 772, "\u63a5\u7740\u8c03\u7528\u7528\u6237\u9884\u5148\u6ce8\u518c\u5728\u8be5\u5173\u7cfb\u4e0a\u7684nn\u6a21\u5757": 766, "\u63a8\u65ad": 740, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [739, 750], "\u63a8\u65ad\u7b97\u6cd5\u4e0d\u540c\u4e8e\u8bad\u7ec3\u7b97\u6cd5": 759, "\u63a8\u65ad\u7b97\u6cd5\u5c06\u5305\u542b\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 759, "\u63a8\u7406\u671f\u95f4\u5b9a\u4f4d\u8282\u70b9": 741, "\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5e03\u5c14\u6570\u7ec4\u8868\u793a\u8bad\u7ec3": 740, "\u63a9\u7801": 734, "\u63a9\u7801\u5728pytorch\u548ctensorflow\u4e2d\u662fbool\u5f20\u91cf": 737, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee5\u56fe\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u62bd\u8c61": 743, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u540c\u6784\u56fe\u8282\u70b9\u5206\u7c7b\u7684\u4f8b\u5b50": 772, "\u63d0\u4f9b\u4e86\u4e00\u4e9b\u529f\u80fd": 740, "\u63d0\u4f9b\u4e86\u4e00\u5c0f\u90e8\u5206": 740, "\u63d0\u4f9b\u4e86\u51e0\u4e2aapi\u6765\u8bbf\u95ee\u56fe\u7ed3\u6784": 740, "\u63d0\u4f9b\u4e86\u5bf9": 761, "\u63d0\u4f9b\u4e86\u63a5\u53e3\u4ee5\u5904\u7406\u56fe\u7684\u7ed3\u6784": 743, "\u63d0\u4f9b\u4e86\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 737, "\u63d0\u5230\u7684\u4e24\u5c42gcn\u4e3a\u4f8b": 759, "\u64cd\u4f5c": 752, "\u652f\u6301\u7d22\u5f15\u8bfb\u53d6\u548c\u5199\u5165": 740, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u975e\u5e38\u76f8\u4f3c": 758, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8fb9\u5206\u7c7b": 760, "\u6570\u636e\u5bfc\u5165": 737, "\u6570\u636e\u6587\u4ef6\u5939": 749, "\u6570\u636e\u6837\u672c\u7684\u6570\u91cf": 734, "\u6570\u636e\u96c6\u4e2d\u56fe\u7684\u6570\u91cf": 737, "\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u5f20\u56fe\u90fd\u6709\u5b83\u72ec\u7279\u7684\u7ed3\u6784\u548c\u8282\u70b9\u4e0e\u8fb9\u7684\u7279\u5f81": 770, "\u6570\u636e\u96c6\u4e2d\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u56fe": 737, "\u6570\u636e\u96c6\u4e5f\u53ea\u5305\u62ec\u4e00\u4e2a\u56fe": 736, "\u6570\u636e\u96c6\u7c7b\u4f3c": 736, "\u6574\u56fe\u5206\u7c7b": [737, 750, 767, 772], "\u6574\u56fe\u5206\u7c7b\u4e0e\u8282\u70b9\u5206\u7c7b\u6216\u94fe\u63a5\u9884\u6d4b\u7684\u4e3b\u8981\u533a\u522b\u662f": 770, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u8fd8\u9700\u8981\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u8868\u793a": 770, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u9700\u8981\u5728\u5f88\u591a\u56fe\u4e0a\u8fdb\u884c\u8bad\u7ec3": 770, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u4e0e\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u5178\u578b\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u7684\u5927\u591a\u6570\u6570\u636e\u96c6\u7c7b\u4f3c": 737, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u91cc\u7684\u6bcf\u4e2a\u6570\u636e\u70b9\u662f\u4e00\u4e2a\u56fe\u548c\u5b83\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4": 770, "\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u53ef\u4ee5\u8bc6\u522b\u793e\u533a\u7684\u7c7b\u578b": 770, "\u6574\u56fe\u5206\u7c7b\u6d41\u7a0b": 770, "\u6574\u56fe\u5206\u7c7b\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a": 770, "\u6587\u4ef6\u4e2d\u52a0\u8f7d": 745, "\u6587\u4ef6\u7684\u6240\u6709\u8def\u5f84\u90fd\u5e94\u6307\u5b9a\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u7684\u76f8\u5bf9\u8def\u5f84": 742, "\u65b9\u4fbf\u5e7f\u5927\u4e2d\u6587\u7528\u6237\u7fa4\u5b66\u4e60\u548c\u4f7f\u7528dgl": 750, "\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\u9a8c\u8bc1": 748, "\u65b9\u6cd5": [755, 757], "\u65b9\u6cd5\u4ece\u6700\u540e\u4e00\u5c42\u5f00\u59cb\u751f\u6210\u4e00\u4e2a\u5757\u7684\u5217\u8868": 757, "\u65b9\u6cd5\u8ba1\u7b97\u8fb9\u9884\u6d4b\u7684\u7ec4\u4ef6\u5373\u53ef\u8fdb\u884c\u8fb9\u5206\u7c7b": 768, "\u65b9\u6cd5\u8ba1\u7b97\u9884\u6d4b\u503c\u5373\u53ef": 768, "\u65e0\u5411\u7684": 744, "\u65e0\u76d1\u7763\u5b66\u4e60graphsag": 760, "\u65e0\u9700\u8fdb\u884c\u6b64\u7c7b\u68c0\u9a8c": 765, "\u65f6": 740, "\u65f6\u5206\u5e03\u5f0f\u91c7\u6837\u4ee3\u7801\u4e0e\u5355\u8fdb\u7a0b\u91c7\u6837\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c": 740, "\u65f6\u8bbe\u7f6e": 758, "\u65f6\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u8fed\u4ee3": 758, "\u65f6\u9700\u8981\u6307\u5b9a\u8fb9\u7684\u7c7b\u578b": 768, "\u662f": 741, "\u662f1\u4e2a\u5143\u7ec4\u65f6": 765, "\u662f\u4e00\u4e2apython\u7c7b": 740, "\u662f\u4e00\u4e2a\u56fe\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u51c6\u6570\u636e\u96c6": 736, "\u662f\u4e00\u4e2a\u5728\u4e8c\u5206\u56fe\u4e0a\u505a\u8fb9\u5206\u7c7b\u7684\u4ee3\u7801\u793a\u4f8b": 758, "\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u90bb\u5c45\u91c7\u6837\u5668\u7c7b": 757, "\u662f\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\u7684\u51fd\u6570": 757, "\u662f\u4e00\u4e2a\u9ad8\u7ea7api": 752, "\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 758, "\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 743, "\u662f\u4ece\u5747\u5300\u5206\u5e03\u4e2d\u91c7\u6837\u7684": 771, "\u662f\u4ee5\u8fb9\u7c7b\u578b\u5b57\u5178\u548c\u9884\u6d4b\u7ed3\u679c\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 760, "\u662f\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 754, "\u662f\u5426\u6253\u5370\u8fdb\u5ea6\u4fe1\u606f": 734, "\u662f\u5426\u91cd\u65b0\u5bfc\u5165\u6570\u636e\u96c6": 734, "\u662f\u56fe": 770, "\u662f\u5904\u7406": 734, "\u662f\u5b9a\u4e49\u5728\u6bcf\u6761\u8fb9\u4e0a\u7684\u6d88\u606f\u51fd\u6570": 751, "\u662f\u5bf9\u5e94\u6bcf\u4e2a\u5173\u7cfb": 766, "\u662f\u5e38\u6570\u9879\u8d85\u53c2\u6570": 771, "\u662f\u7528\u4e8e\u7279\u5f81\u5f52\u4e00\u5316\u7684\u53ef\u8c03\u7528\u51fd\u6570": 764, "\u662f\u805a\u5408\u51fd\u6570": 766, "\u662f\u8282\u70b9": 770, "\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55": 742, "\u662f\u987e\u5ba2": 744, "\u6635\u79f0": 750, "\u6682\u4e0d\u652f\u6301\u7a00\u758f\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 740, "\u66f4\u591a\u7ec6\u8282": 737, "\u66f4\u591a\u8be6\u7ec6\u7528\u6cd5\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357": 755, "\u66f4\u65b0\u51fd\u6570": [751, 752], "\u66f4\u65b0\u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u53c2\u6570": 752, "\u66ff\u6362\u4e3a": 761, "\u6700\u540e": [766, 770], "\u6700\u5e38\u89c1\u548c\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4efb\u52a1\u4e4b\u4e00\u5c31\u662f\u8282\u70b9\u5206\u7c7b": 772, "\u6700\u7b80\u5355\u7684\u90bb\u5c45\u91c7\u6837\u5668\u662f": 762, "\u6709": 752, "\u67093\u4e2a\u6587\u4ef6\u4ee5dgl\u683c\u5f0f\u5b58\u50a8\u5206\u533a\u6570\u636e": 741, "\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9002\u5408\u4fdd\u5b58\u5904\u7406\u8fc7\u7684\u6570\u636e": 738, "\u6709\u5173dgl\u7684\u5185\u7f6e\u91c7\u6837\u5668\u7684\u5b8c\u6574\u5217\u8868": 758, "\u6709\u5173dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u5982\u4f55\u5de5\u4f5c": 772, "\u6709\u5173\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 737, "\u6709\u5173\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 737, "\u6709\u5173\u8bad\u7ec3\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 737, "\u6709\u5173\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 737, "\u6709\u5206\u5e03\u5f0f\u7684\u7248\u672c": 740, "\u6709\u5411": 744, "\u6709\u5411\u7684": 744, "\u6709\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u53ef\u50a8\u5b58\u56fe": 745, "\u6709\u65f6\u5e0c\u671b\u4ece\u8ba1\u7b97\u4f9d\u8d56\u4e2d\u5220\u9664\u51fa\u73b0\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u8fb9": 758, "\u6709\u65f6\u7528\u6237\u4f1a\u60f3\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 767, "\u6709\u65f6\u7528\u6237\u5e0c\u671b\u9884\u6d4b\u56fe\u4e2d\u8fb9\u7684\u5c5e\u6027\u503c": 768, "\u6709\u65f6\u8fb9\u4e0a\u7684\u6d88\u606f\u53ef\u80fd\u662f\u9ad8\u7ef4\u7684": 753, "\u6709\u7740\u8bb8\u591a\u4f7f\u7528\u8282\u70b9\u5d4c\u5165\u7684\u65b9\u6cd5": 771, "\u670d\u52a1\u5668": 739, "\u670d\u52a1\u5668\u8fdb\u7a0b": 739, "\u670d\u52a1\u5668\u8fdb\u7a0b\u8d1f\u8d23\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570": 740, "\u672a\u52a0\u6743\u7684": 744, "\u672a\u6765dgl\u5c06\u652f\u6301\u5206\u5e03\u5f0f\u56fe\u5212\u5206": 741, "\u672c\u4f8b\u4e2d\u7701\u7565": 772, "\u672c\u7ae0\u4e2d\u9009\u62e9": 772, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5728\u5927\u56fe\u4e0a\u8fdb\u884c\u968f\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u65b9\u6cd5": 756, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4e3a\u7528\u6237\u81ea\u5df1\u7684\u56fe\u6570\u636e\u521b\u5efa\u4e00\u4e2adgl\u6570\u636e\u96c6": 733, "\u672c\u7ae0\u4ee3\u7801\u4f7f\u7528pytorch\u4f5c\u4e3adgl\u7684\u540e\u7aef\u6846\u67b6": 767, "\u672c\u7ae0\u4f1a\u4ee5\u4e0b\u9762\u4ee3\u7801\u6240\u521b\u5efa\u7684\u4e00\u4e2a\u5f02\u6784\u56fe\u4e3a\u4f8b": 767, "\u672c\u7ae0\u4f59\u4e0b\u7684\u5c0f\u8282\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4e3b\u9898": 756, "\u672c\u7ae0\u5047\u8bbe\u7528\u6237\u7684\u56fe\u4ee5\u53ca\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u90fd\u80fd\u5b58\u8fdbgpu": 767, "\u672c\u7ae0\u5171\u6709\u56db\u8282": 767, "\u672c\u7ae0\u5c06\u4f7f\u7528pytorch\u4f5c\u4e3a\u540e\u7aef": 763, "\u672c\u7ae0\u7684": 772, "\u672c\u7ae0\u7684\u524d\u534a\u90e8\u5206\u4ecb\u7ecd\u4e86\u4e0d\u540c\u573a\u666f\u4e0b\u5982\u4f55\u8fdb\u884c\u968f\u673a\u8bad\u7ec3\u7684\u65b9\u6cd5": 756, "\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u5206\u5e03\u5f0f\u7ec4\u4ef6": 739, "\u672c\u7ae0\u7684\u540e\u7eed\u90e8\u5206\u5c55\u793a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5": 734, "\u672c\u7ae0\u7684\u5f02\u6784\u56fe\u6837\u4f8b\u6570\u636e": 768, "\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u89e3\u91ca\u4e86\u5982\u4f55\u5728\u5f02\u6784\u56fe\u4e0a\u5b9e\u73b0\u6d88\u606f\u4f20\u9012": 751, "\u672c\u7ae0\u901a\u8fc7\u4f7f\u7528": 767, "\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u4e86dgl\u7684\u6d88\u606f\u4f20\u9012api": 751, "\u672c\u7ae0\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e86\u56fe\u7684\u5b9a\u4e49": 743, "\u672c\u8282\u4e0d\u6d89\u53ca\u901a\u8fc7\u8f6c\u6362\u5176\u4ed6\u56fe\u6765\u751f\u6210\u56fe\u7684\u51fd\u6570": 745, "\u672c\u8282\u4ec5\u7ed9\u51fa\u4e00\u4e9b\u5e38\u89c1\u683c\u5f0f\u7684\u4e00\u822c\u60c5\u51b5": 745, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728gpu\u663e\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u5c0f\u6279\u6b21\u5904\u7406\u548c\u90bb\u5c45\u91c7\u6837\u5b9e\u73b0\u5168\u56fe\u524d\u5411\u4f20\u64ad\u7684\u65b9\u6cd5": 759, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97api": 740, "\u672c\u8282\u4ee5\u5185\u7f6e\u6570\u636e\u96c6": 737, "\u672c\u8282\u4ee5\u5185\u7f6e\u7684\u6570\u636e\u96c6": 737, "\u672c\u8282\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u7684\u57fa\u672c\u7528\u6cd5": 736, "\u672c\u8282\u4f1a\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u7528\u6237\u81ea\u5df1\u7684\u91c7\u6837\u5668\u5e76\u5c06\u5176\u52a0\u5165\u5230gnn\u7684\u8bad\u7ec3\u6846\u67b6\u4e2d": 757, "\u672c\u8282\u4f7f\u7528dgl\u5185\u7f6e\u7684\u6570\u636e\u96c6": 772, "\u672c\u8282\u5c06\u5c55\u793a\u5982\u4f55\u5904\u7406\u4e0e\u8fd9\u4e9b\u4efb\u52a1\u76f8\u5173\u7684\u6570\u636e\u96c6": 737, "\u672c\u8282\u628a\u8282\u70b9": 771, "\u672c\u8282\u91cd\u70b9\u4ecb\u7ecd\u4e86\u5904\u7406\u56fe": 737, "\u672c\u8d28\u4e0a": 761, "\u673a\u5668\u96c6\u7fa4\u4e0a": 742, "\u674e\u5e86\u6807": 750, "\u6765\u4fdd\u5b58\u56fe\u7684\u70b9id": 748, "\u6765\u505a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u94fe\u8def\u9884\u6d4b\u7684\u6570\u636e\u96c6": 737, "\u6765\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u5757\u7684\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 762, "\u6765\u5904\u7406zip\u6587\u4ef6": 735, "\u6765\u5c55\u793a\u6a21\u578b\u7684\u8bad\u7ec3": 772, "\u6765\u5e73\u8861\u6bcf\u4e2a\u7c7b\u578b\u8282\u70b9\u5728\u5b50\u56fe\u4e2d\u7684\u5165\u5ea6": 741, "\u6765\u5f00\u53d1\u6d88\u606f\u4f20\u9012\u529f\u80fd": 753, "\u6765\u6307\u4ee3\u8fd9\u4e24\u4e2a\u5173\u7cfb\u662f\u53ef\u4ee5\u7684": 749, "\u6765\u6307\u5b9a\u6574\u5408\u4e0d\u540c\u5173\u7cfb\u805a\u5408\u7ed3\u679c\u7684\u65b9\u5f0f": 754, "\u6765\u6307\u793a\u6b64\u591a\u4efb\u52a1\u6570\u636e\u96c6\u4e2d\u7684\u9884\u6d4b\u4efb\u52a1\u603b\u6570": 737, "\u6765\u66ff\u6362\u56fe": 762, "\u6765\u67e5\u770bdgl\u7684\u5185\u7f6e\u6a21\u578b\u6a21\u5757\u662f\u5426\u652f\u6301\u63a5\u53d7": 762, "\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684\u6570\u636e\u96c6": 737, "\u6765\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 767, "\u6765\u81eanetworkx": 745, "\u6765\u81eascipi": 745, "\u6765\u81ea\u52a8\u5b8c\u6210": 735, "\u6765\u83b7\u53d6\u8282\u70b9": 739, "\u6765\u83b7\u53d6\u88ab\u5212\u5206\u7684\u56fe\u5206\u533a\u6570\u636e": 739, "\u6765\u83b7\u5f97\u5206\u7c7b\u8f93\u51fa": 770, "\u6765\u8ba1\u7b97\u8282\u70b9\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 771, "\u6765\u8ba1\u7b97\u8fb9\u7684\u5206\u6570": 760, "\u6765\u8bbf\u95ee\u8282\u70b9\u548c\u8fb9\u4e2d\u7684\u6570\u636e": 740, "\u6765\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 760, "\u6784\u5efa\u4e00\u4e2a2\u5c42\u7684gnn\u6a21\u578b": 772, "\u6784\u5efa\u4e86\u4e00\u4e2a\u65e0\u5411\u7684networkx\u56fe": 745, "\u6784\u5efa\u56fe": 737, "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": [750, 761, 767, 772], "\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u6ce8\u518c\u548c\u524d\u5411\u4f20\u64ad\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u5f20\u91cf\u64cd\u4f5c\u4e0e\u540e\u7aef\u6846\u67b6\u4e00\u6837": 763, "\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1": 764, "\u6784\u9020\u51fd\u6570\u7684\u6700\u540e\u8c03\u7528\u4e86": 764, "\u6807\u7b7e": [734, 737], "\u6807\u7b7e\u548c\u6570\u636e\u96c6\u5212\u5206\u7684\u63a9\u7801": 734, "\u6807\u7b7e\u6570\u7b49\u57fa\u672c\u4fe1\u606f": 734, "\u6807\u91cf\u6574\u578b\u7279\u5f81": 746, "\u6829\u6829\u7684\u590f\u5929": 750, "\u6839\u636e": 768, "\u6839\u636edgl\u6240\u4f7f\u7528\u7684\u540e\u7aef\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 763, "\u6839\u636e\u4efb\u52a1\u8bbe\u8ba1\u5206\u7c7b\u5c42": 770, "\u6839\u636e\u5176\u590d\u6742\u6027": 754, "\u6839\u636e\u5f53\u524d\u7684\u4efb\u52a1\u60c5\u51b5": 741, "\u6839\u636e\u8fd9\u4e2a\u826f\u597d\u7684\u6027\u8d28": 770, "\u6839\u636e\u9700\u8981\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u6765\u9009\u62e9": 761, "\u68c0\u67e5": 735, "\u68c0\u67e5\u5728": [734, 738], "\u68c0\u6d4b\u8f93\u5165\u56fe\u5bf9\u8c61\u662f\u5426\u7b26\u5408\u89c4\u8303": 765, "\u6a21\u5757": [750, 761, 767, 772], "\u6a21\u5757\u4e2d": 765, "\u6a21\u5757\u4f5c\u4e3a\u56fe\u5377\u79ef\u5c42": 770, "\u6a21\u5757\u63a5\u53d7\u7684\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684": 762, "\u6a21\u5757\u9996\u5148\u5bf9\u6bcf\u79cd\u8fb9\u7c7b\u578b\u8fdb\u884c\u5355\u72ec\u7684\u56fe\u5377\u79ef\u8ba1\u7b97": 772, "\u6a21\u578b": 740, "\u6a21\u578b\u4e2d\u5e94\u7279\u522b\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9": 770, "\u6a21\u578b\u5b9a\u4e49": 739, "\u6a21\u578b\u5b9a\u4e49\u5b8c\u6210\u540e": 770, "\u6a21\u578b\u5b9e\u73b0\u4f4d\u4e8e": 770, "\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6\u4e2d": 768, "\u6a21\u578b\u5c06": 758, "\u6a21\u578b\u63a5\u53d7\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868": 758, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u51e0\u4e4e\u76f8\u540c": 762, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c": 758, "\u6a21\u578b\u7684\u8f93\u5165\u662f\u5e26\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u7684\u6279\u6b21\u5316\u56fe": 770, "\u6a21\u578b\u8bad\u7ec3\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u4f4d\u4e8e": 770, "\u6a21\u578b\u8bad\u7ec3\u7684\u5faa\u73af": 739, "\u6b22\u8fce\u7ed9dgl\u8d21\u732e\u66f4\u591a\u7684\u6a21\u5757": 763, "\u6b63\u5728\u9500\u552e": 744, "\u6b63\u6837\u672c": 760, "\u6b64\u51fd\u6570\u5bf9": 752, "\u6b64\u521b\u5efa\u8fc7\u7a0b\u624d\u80fd\u6210\u529f": 740, "\u6b64\u5904\u53ea\u662f\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49gnn\u6a21\u5757\u7684\u4e00\u4e2a\u793a\u4f8b": 761, "\u6b64\u5916": [737, 747, 749], "\u6b64\u6a21\u5f0f\u4e3b\u8981\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5": 740, "\u6b64\u8c03\u7528\u901a\u8fc7\u5c06\u6e90\u8282\u70b9\u7279\u5f81": 752, "\u6bcf\u4e00\u6761\u8fb9": 771, "\u6bcf\u4e2a": 736, "\u6bcf\u4e2a\u5173\u7cfb\u4e0a\u7684dgl": 766, "\u6bcf\u4e2a\u5173\u7cfb\u7531\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4": 749, "\u6bcf\u4e2a\u56fe\u7684\u6807\u7b7e\u6570": 737, "\u6bcf\u4e2a\u8282\u70b9\u7279\u5f81\u5177\u6709\u552f\u4e00\u540d\u79f0": 746, "\u6bcf\u4e2a\u8fb9\u7279\u5f81\u4e5f\u5177\u6709\u552f\u4e00\u540d\u79f0": 746, "\u6bcf\u53f0\u8ba1\u7b97\u673a\u8d1f\u8d23\u4e00\u4e2a\u4e14\u53ea\u8d1f\u8d23\u4e00\u4e2a\u5206\u533a": 740, "\u6bcf\u5c42\u53ea\u5c55\u793a\u524d3\u4e2a\u5c0f\u6279\u6b21": 759, "\u6bcf\u6761\u8fb9\u7684\u6743\u91cd": 746, "\u6bcf\u6761\u8fb9\u90fd\u4e0e\u4e00\u4e2a\u6807\u91cf\u6743\u91cd\u503c\u76f8\u5173\u8054": 744, "\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u91cf\u6743\u91cd": 769, "\u6bcf\u6b21\u68af\u5ea6\u4e0b\u964d": 756, "\u6bcf\u79cd\u5173\u7cfb\u5bf9\u5e94\u4e00\u4e2a": 765, "\u6bcf\u8282\u5bf9\u5e94\u4e00\u79cd\u56fe\u5b66\u4e60\u4efb\u52a1": 767, "\u6bcf\u884c\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 742, "\u6bd4\u5982": [753, 764], "\u6bd4\u5982gml\u6216json": 749, "\u6bd4\u5982\u5217\u8868": 748, "\u6bd4\u5982\u5728": 765, "\u6c88\u6210": 750, "\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u8fb9": 757, "\u6ca1\u6709\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u5c31\u6ca1\u6709\u660e\u786e\u7684\u8fd4\u56de\u503c": 749, "\u6ce8\u518c\u53c2\u6570\u548c\u5b50\u6a21\u5757": 764, "\u6ce8\u518c\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u6216\u8005\u5b50\u6a21\u5757": 764, "\u6ce8\u610f": [745, 749, 759, 761, 767], "\u6ce8\u610f\u7ed3\u679c\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u7279\u5f81": 754, "\u6ce8\u610f\u8ba1\u7b97\u65b9\u6cd5\u662f\u4e00\u6837\u7684": 759, "\u6d4b\u8bd5\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u5bf9\u5e94\u8282\u70b9": 740, "\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u91cd\u590d\u591a\u8f6e": 772, "\u6d88\u606f\u4f20\u9012\u662f\u5b9e\u73b0gnn\u7684\u4e00\u79cd\u901a\u7528\u6846\u67b6\u548c\u7f16\u7a0b\u8303\u5f0f": 751, "\u6d88\u606f\u4f20\u9012\u7684\u5b9a\u4e49\u662f": 757, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [750, 767, 768, 772], "\u6d88\u606f\u4f20\u9012\u9700\u8981\u805a\u96c6\u5176\u90bb\u5c45": 757, "\u6d88\u606f\u51fd\u6570": 752, "\u6d88\u606f\u7684\u5185\u7f6e\u51fd\u6570\u7684\u547d\u540d\u7ea6\u5b9a\u662f": 752, "\u6d88\u606f\u805a\u5408\u548c\u8282\u70b9\u7279\u5f81\u66f4\u65b0": 752, "\u6e38\u620f": 749, "\u6e90": [752, 753], "\u6e90\u4ee3\u7801": 737, "\u6e90\u6587\u4ef6\u4e2d\u7684": 770, "\u6e90\u8282\u70b9": 760, "\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u76f8\u540c": 765, "\u6e90\u8282\u70b9\u7279\u5f81": 765, "\u6e90\u8282\u70b9\u7c7b\u578b": 749, "\u6fc0\u6d3b\u51fd\u6570": 765, "\u70b9\u4e0a\u8ba1\u7b97": 751, "\u7136\u540e": [762, 772], "\u7136\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e9b": 743, "\u7136\u540e\u540c\u6837\u901a\u8fc7\u8c03\u7528": 768, "\u7136\u540e\u5728\u5b50\u56fe\u4e0a\u8c03\u7528": 755, "\u7136\u540e\u5728\u7f51\u7edc\u7684\u7b2c": 756, "\u7136\u540e\u5bf9\u6240\u6709\u6d88\u606f\u6c42\u548c\u6765\u66f4\u65b0\u8282\u70b9\u7279\u5f81": 752, "\u7136\u540e\u5c06\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4e0a\u7684\u6d88\u606f\u805a\u5408\u7ed3\u679c\u518d\u76f8\u52a0": 772, "\u7136\u540e\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u8fb9\u7684": 752, "\u7136\u540e\u5c06\u8be5\u5b50\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 749, "\u7136\u540e\u5e94\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42": 753, "\u7136\u540e\u6839\u636e\u56fe\u7c7b\u578b\u6269\u5c55\u8f93\u5165\u7279\u5f81": 765, "\u7136\u540e\u8bb2\u89e3\u4e86\u5982\u4f55\u9ad8\u6548\u5730\u5728\u70b9\u548c\u8fb9\u4e0a\u4f7f\u7528\u8fd9\u4e9bapi": 751, "\u7136\u800c": 759, "\u7269\u54c1": [743, 744], "\u7279\u5f81": [734, 749], "\u7279\u5f81\u4e0a": 752, "\u7279\u5f81\u4e5f\u5fc5\u987b\u5728gpu\u4e0a": 747, "\u7279\u5f81\u548c\u5212\u5206\u63a9\u7801\u7684\u6807\u51c6\u65b9\u6cd5": 737, "\u7279\u5f81\u548c\u76ee\u6807\u8282\u70b9\u7684": 752, "\u7279\u5f81\u5c3a\u5bf8\u662f7": 770, "\u7279\u5f81\u5f20\u91cf\u4f7f\u7528": 746, "\u7279\u5f81\u6570\u636e\u4e5f\u62f7\u8d1d\u5230\u4e86gpu\u4e0a": 747, "\u7279\u5f81\u6c42\u548c": 752, "\u7279\u6b64\u81f4\u8c22\u4e0b\u8ff0\u8d21\u732e\u8005": 750, "\u72ec\u7acb\u6a21\u5f0f\u8981\u6c42\u8f93\u5165\u56fe\u4ec5\u5177\u6709\u4e00\u4e2a\u5206\u533a": 740, "\u738b\u5efa\u6c11": 750, "\u73a9": 749, "\u751f\u6210\u8fb9\u754c": 757, "\u7528": [739, 748, 763], "\u7528\u4e8e\u5206\u5e03\u5f0f\u56fe\u7684": 740, "\u7528\u4e8e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684": 740, "\u7528\u4e8e\u521d\u59cb\u5316": 740, "\u7528\u4e8e\u5728dgl\u4e2d\u81ea\u5b9a\u4e49\u56fe\u6570\u636e\u96c6\u7684\u6a21\u677f": 734, "\u7528\u4e8e\u5728\u673a\u5668\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1": 742, "\u7528\u4e8e\u5b9a\u4e49\u5f02\u6784\u56fe\u4e0agnn\u6a21\u5757": 766, "\u7528\u4e8e\u5bf9\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u91c7\u6837\u4ee5\u751f\u6210\u5c0f\u6279\u6b21\u8bad\u7ec3\u6570\u636e": 740, "\u7528\u4e8e\u5c06\u56fe\u5206\u533a\u590d\u5236\u5230\u96c6\u7fa4": 742, "\u7528\u4e8e\u6307\u5b9a\u56fe\u7c7b\u578b\u5e76\u5c06": 765, "\u7528\u4e8e\u8bbf\u95ee\u5176\u5143\u6570\u636e": 740, "\u7528\u4e8e\u8bbf\u95ee\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d\u7684\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 740, "\u7528\u4ece0\u5f00\u59cb\u7684\u8fde\u7eed\u6574\u6570\u91cd\u65b0\u6807\u8bb0\u6240\u6709\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 749, "\u7528\u4fdd\u5b58\u7684\u8fb9\u7279\u5f81\u4e0e\u5bf9\u5e94\u8fb9\u7684\u539f\u59cb\u6d88\u606f\u76f8\u4e58": 769, "\u7528\u6237": [743, 744, 749], "\u7528\u6237\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5b83": 752, "\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528mlp": 768, "\u7528\u6237\u4e5f\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a": 768, "\u7528\u6237\u4ec5\u9700\u5bf9\u5355\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u8bad\u7ec3": 739, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 757, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528": 762, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8282\u70b9": 760, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7": 741, "\u7528\u6237\u53ea\u9700\u4f7f\u7528\u65b0\u7684\u8282\u70b9\u548c\u8fb9\u7684id": 741, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 762, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u51fa\u8282\u70b9\u7684\u6807\u7b7e": 762, "\u7528\u6237\u53ea\u9700\u8981\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a": 768, "\u7528\u6237\u53ef\u4ee5\u4ece\u8fd4\u56de\u7684\u5b57\u5178\u4e2d\u63d0\u53d6": 772, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528": [758, 772], "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u50cfpandas\u8fd9\u6837\u7684\u5305\u5148\u5c06csv\u6587\u4ef6\u89e3\u6790\u4e3anumpy\u6570\u7ec4\u6216\u6846\u67b6\u5f20\u91cf": 749, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 752, "\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u52a0\u8f7d\u5668": 757, "\u7528\u6237\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5c06\u8bad\u7ec3\u96c6": 741, "\u7528\u6237\u53ef\u4ee5\u53c2\u7167": 759, "\u7528\u6237\u53ef\u4ee5\u53c2\u8003": [737, 757, 758, 760, 762], "\u7528\u6237\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u5185\u7f6e\u6570\u636e\u96c6": 737, "\u7528\u6237\u53ef\u4ee5\u53ea\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4\u6765\u6307\u5b9a\u8fb9\u7c7b\u578b": 749, "\u7528\u6237\u53ef\u4ee5\u5728": [737, 772], "\u7528\u6237\u53ef\u4ee5\u5728\u5b9e\u4f8b\u5316": 758, "\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u6709\u5173\u6570\u636e\u96c6\u7684\u56fe": 734, "\u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b": 770, "\u7528\u6237\u53ef\u4ee5\u5bf9\u8981\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b\u6784\u9020\u4e00\u4e2a\u8d1f\u91c7\u6837\u56fe": 771, "\u7528\u6237\u53ef\u4ee5\u5c06": 740, "\u7528\u6237\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u6cbf\u6240\u6709\u5165\u8fb9\u4f20\u9012\u6d88\u606f\u7684\u8fb9\u754c": 757, "\u7528\u6237\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u6807\u7b7e\u4f7f\u7528": 768, "\u7528\u6237\u53ef\u4ee5\u5c06\u6743\u91cd\u50a8\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 746, "\u7528\u6237\u53ef\u4ee5\u5c06\u7528\u4e8e\u5757\u7684\u8bed\u53e5\u548c\u539f\u5148\u7528\u4e8e\u6574\u56fe\u7684\u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83": 761, "\u7528\u6237\u53ef\u4ee5\u5c06\u91c7\u6837\u5668\u5bf9\u8c61\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668\u5bf9\u8c61": 757, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u62d3\u5c55\u4e3a\u5bf9\u591a\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 771, "\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u5173\u7cfb\u5207\u7247\u7684\u65b9\u5f0f\u521b\u5efa\u8fd9\u4e2a\u56fe": 768, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u4f7f\u7528": 737, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6a21\u578b\u7684\u8bad\u7ec3": 772, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199\u9884\u6d4b\u6a21\u5757": 768, "\u7528\u6237\u53ef\u4ee5\u6309\u8282\u70b9\u7c7b\u578b\u6765\u83b7\u53d6\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 757, "\u7528\u6237\u53ef\u4ee5\u67e5\u9605": 762, "\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027": 737, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u590d\u7528\u5b83": 758, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 772, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528": 758, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528graphdataload": 770, "\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u7f16\u5199\u5728\u6240\u6709\u8fb9\u4e0a\u8fdb\u884c\u9884\u6d4b\u7684\u5168\u56fe\u8bad\u7ec3\u4ee3\u7801": 768, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": [757, 770], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539nn\u6a21\u5757\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c\u6765\u7ed9nn\u6a21\u5757\u589e\u52a0\u8fb9\u6743\u91cd\u652f\u6301": 769, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u4f20\u5165\u4e24\u4e2agpu\u5f20\u91cf\u6765\u521b\u5efagpu\u4e0a\u7684": 747, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u8981\u4fdd\u7559\u7684\u5173\u7cfb\u6765\u521b\u5efa\u5f02\u6784\u56fe\u7684\u5b50\u56fe": 749, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u8fb9": 760, "\u7528\u6237\u53ef\u4ee5\u904d\u5386\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u83b7\u5f97\u7531\u5c0f\u6279\u6b21\u8fb9\u7ec4\u6210\u7684\u5b50\u56fe": 758, "\u7528\u6237\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528": 771, "\u7528\u6237\u53ef\u4ee5\u91cd\u7528\u5728\u8fb9\u5206\u7c7b": 760, "\u7528\u6237\u53ef\u5c06\u4e00\u7cfb\u5217\u7684\u56fe\u5efa\u7acb\u6210\u4e00\u4e2a\u56fe\u6279\u6b21": 770, "\u7528\u6237\u53ef\u5c06\u5176\u4f20\u7ed9\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a": 770, "\u7528\u6237\u53ef\u5c06\u591a\u5f20\u56fe\u7ec4\u6210\u4e00\u4e2a\u6279\u6b21": 770, "\u7528\u6237\u53ef\u7528\u5982\u4e0b\u4ee3\u7801\u83b7\u53d6": 772, "\u7528\u6237\u53ef\u80fd\u4f1a\u9700\u8981\u6807\u51c6\u5316\u539f\u59cb\u8fb9\u6743\u91cd": 769, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u6cbf\u7740\u6240\u6709\u8fb9\u7c7b\u578b\u4ece\u90bb\u5c45\u90a3\u91cc\u6536\u96c6\u6d88\u606f": 772, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u9884\u6d4b\u7ed9\u5b9a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9": 771, "\u7528\u6237\u53ef\u80fd\u9700\u8981\u5c06\u4e00\u4e9b\u5173\u7cfb\u5408\u5e76": 749, "\u7528\u6237\u5728\u8bad\u7ec3\u8fb9\u5206\u7c7b\u6a21\u578b\u65f6": 758, "\u7528\u6237\u5728\u8c03\u7528dglgraph": 749, "\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 752, "\u7528\u6237\u5c06\u9700\u8981\u4e00\u53f0\u5927\u5185\u5b58\u7684\u673a\u5668\u6765\u5bf9\u56fe\u8fdb\u884c\u5212\u5206": 741, "\u7528\u6237\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b": 770, "\u7528\u6237\u5e0c\u671b\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e94\u7528\u4e0d\u540c\u7684\u64cd\u4f5c": 749, "\u7528\u6237\u5fc5\u987b\u5b9e\u73b0": 737, "\u7528\u6237\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5757": 762, "\u7528\u6237\u6307\u5357\u5c06\u4ee5\u5185\u7f6e\u6570\u636e\u96c6\u4e3a\u4f8b": 737, "\u7528\u6237\u6700\u597d\u4f7f\u7528": 748, "\u7528\u6237\u6709\u65f6\u4f1a\u5e0c\u671b\u4ece\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u56fe\u4e2d\u5220\u53bb\u90e8\u5206\u8fb9\u53ca\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9": 758, "\u7528\u6237\u7684\u4efb\u52a1\u662f\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 768, "\u7528\u6237\u81ea\u5df1\u7684\u8bad\u7ec3\u4ee3\u7801": 737, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5411\u7c7b\u6dfb\u52a0\u5c5e\u6027\u4ee5\u6307\u793a\u4e00\u4e9b\u6709\u7528\u7684\u6570\u636e\u96c6\u4fe1\u606f": 737, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5c06\u65b0\u7684": 740, "\u7528\u6237\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u552f\u4e00\u7684\u5f20\u91cf\u540d\u79f0": 740, "\u7528\u6237\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 760, "\u7528\u6237\u8fd8\u5fc5\u987b\u5c06gnn\u7684\u5c42\u6570\u4f20\u9012\u7ed9\u7236\u7c7b": 757, "\u7528\u6237\u8fd8\u662f\u5728\u8282\u70b9\u6216\u8fb9\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 770, "\u7528\u6237\u8fd8\u9700\u8981\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5206\u5272\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 740, "\u7528\u6237\u9664\u4e86\u9700\u8981\u4f7f\u7528\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 770, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u6307\u5b9a\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf": 742, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u6761\u8fb9\u90fd\u521b\u5efa\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9": 748, "\u7528\u6237\u9700\u8981\u4ece\u6a21\u578b\u4e2d\u6536\u96c6\u6240\u6709\u5206\u5e03\u5f0f\u5d4c\u5165": 740, "\u7528\u6237\u9700\u8981\u5206\u5272\u8bad\u7ec3\u96c6": 740, "\u7528\u6237\u9700\u8981\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 760, "\u7528\u6237\u9700\u8981\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u53e6\u5916\u4e00\u4e2a\u56fe": 771, "\u7528\u6237\u9700\u8981\u63d0\u4f9b\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 740, "\u7528\u6237\u9700\u8981\u660e\u786e\u5730\u6307\u660e\u8282\u70b9\u7684\u6570\u91cf": 748, "\u7528\u6237\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8fb9\u5206\u7c7b": 768, "\u7528\u6237\u9996\u5148\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u7684\u7ef4\u5ea6": 764, "\u7528\u6765\u6307\u5b9a\u4e0d\u540c\u8bad\u7ec3\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u6240\u4f7f\u7528\u7684\u7aef\u53e3": 742, "\u7528\u8be5\u6a21\u5757\u8fdb\u884c\u79bb\u7ebf\u63a8\u65ad": 759, "\u7528\u8fb9\u4e24\u7aef\u8282\u70b9\u8868\u793a\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u6253\u5206": 758, "\u7531gpu\u5f20\u91cf\u6784\u9020\u7684\u56fe\u4e5f\u5728gpu\u4e0a": 747, "\u7531\u4e8etensor\u7c7b\u5185\u90e8\u4f7f\u7528c\u6765\u5b58\u50a8": 748, "\u7531\u4e8e\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\u5c06\u539f\u6765\u7684\u8fb9\u7c7b\u578b\u5b58\u6210\u8fb9\u7279\u5f81": 768, "\u7531\u4e8e\u6574\u56fe\u5206\u7c7b\u5904\u7406\u7684\u662f\u5f88\u591a\u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe": 770, "\u7531\u4e8e\u66f4\u65b0\u51fd\u6570\u901a\u5e38\u53ef\u4ee5\u7528\u7eaf\u5f20\u91cf\u64cd\u4f5c\u5b9e\u73b0": 752, "\u7531\u4e8e\u8fd9\u91cc\u7684\u5173\u7cfb\u5b9a\u4e49\u6d88\u9664\u4e86\u8fb9\u7c7b\u578b\u7684\u6b67\u4e49": 749, "\u7531\u591a\u5c42gnn\u8ba1\u7b97\u5f97\u51fa": 771, "\u7684": [748, 756], "\u7684api\u4ee5\u65b9\u4fbf\u6570\u636e\u8bbf\u95ee": 740, "\u7684api\u7528\u4e8e\u6b64\u4f18\u5316": 737, "\u7684nn\u6a21\u5757": 766, "\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u6240\u4e0d\u540c": 758, "\u7684\u5177\u4f53\u5b9a\u4e49": 772, "\u7684\u5178\u578b\u793a\u4f8b\u5982\u4e0b": 742, "\u7684\u5185\u5b58\u7a7a\u95f4": 756, "\u7684\u51fd\u6570\u662f": 765, "\u7684\u5212\u5206": 741, "\u7684\u5212\u5206\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba1\u7b97\u8d1f\u8f7d\u4e0d\u5e73\u8861": 741, "\u7684\u521b\u5efa\u662f\u4e00\u4e2a\u540c\u6b65\u64cd\u4f5c": 740, "\u7684\u521b\u5efa\u9700\u8981": 740, "\u7684\u524d\u9a71\u8282\u70b9": 757, "\u7684\u539f\u5219": 746, "\u7684\u53c2\u6570": 754, "\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6d88\u606f\u51fd\u6570": 752, "\u7684\u56fe\u540d\u79f0\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570": 741, "\u7684\u5b50\u7c7b": [733, 737], "\u7684\u5b9e\u4f8b": 752, "\u7684\u5b9e\u73b0\u4e5f\u53d1\u751f\u4e86\u53d8\u5316": 737, "\u7684\u5b9e\u73b0\u4f1a\u5305\u542b\u4e24\u4e2a\u5b57\u5178": 762, "\u7684\u5b9e\u73b0\u5982\u4e0b": 757, "\u7684\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206": 753, "\u7684\u5f02\u6784\u56fe": 749, "\u7684\u5f20\u91cf": 769, "\u7684\u5f97\u5206\u6765\u8bad\u7ec3\u94fe\u8def\u6a21\u578b": 760, "\u7684\u6210\u5458\u5c5e\u6027": 752, "\u7684\u6240\u6709\u5165\u8fb9": 757, "\u7684\u6559\u7a0b": 745, "\u7684\u6570\u636e": 767, "\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c": 739, "\u7684\u6d88\u606f": 757, "\u7684\u7236\u7c7b": 757, "\u7684\u7279\u5f81": [743, 746, 770, 772], "\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u4e14\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5bfc\u5165\u56fe\u6570\u636e": 734, "\u7684\u793a\u4f8b": 766, "\u7684\u7b80\u5316\u7248": 761, "\u7684\u805a\u5408\u7ed3\u679c\u8fdb\u884c\u64cd\u4f5c": 752, "\u7684\u8282\u70b9": 744, "\u7684\u8282\u70b9\u5d4c\u5165": 772, "\u7684\u8282\u70b9\u7279\u5f81": 757, "\u7684\u8282\u70b9\u8868\u793a": 771, "\u7684\u8282\u70b9\u8868\u793a\u6a21\u5757\u79f0\u4f5c": 768, "\u7684\u8868\u5f81": 770, "\u7684\u8868\u793a\u6240\u9700\u7684\u8282\u70b9": 762, "\u7684\u8ba1\u7b97": 770, "\u7684\u8bba\u6587\u4e2d": 757, "\u7684\u8be6\u7ec6\u4fe1\u606f": 737, "\u7684\u8bed\u6cd5\u4e0e\u5e38\u89c4\u56fe\u4e2d\u7684": 757, "\u7684\u8bed\u6cd5\u5c06\u53ea\u5305\u542b\u8be5\u5173\u7cfb\u7684\u5b50\u56fe": 766, "\u7684\u8f93\u51fa": 757, "\u7684\u8f93\u51fa\u5f20\u91cf\u7684\u5217\u8868": 766, "\u7684\u8fb9": [748, 771], "\u7684\u8fb9\u4e92\u76f8\u8fde\u63a5": 744, "\u7684\u8fb9\u603b\u662f\u6709\u5411\u7684": 745, "\u7684\u8fb9\u7684\u6807\u7b7e": 768, "\u7684\u8fb9\u7c7b\u578b": 768, "\u7684\u90e8\u5206": 737, "\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u5411\u540e\u8fed\u4ee3": 757, "\u76ee\u524d": 740, "\u76ee\u5f55\u4e2d": 737, "\u76ee\u6807": [752, 753], "\u76ee\u6807\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 752, "\u76ee\u6807\u8282\u70b9\u6570\u7ec4\u5bf9\u4e3a\u503c\u7684\u5b57\u5178": 760, "\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 749, "\u76f4\u5230\u5230\u8fbe\u8f93\u5165\u5c42": 756, "\u76f4\u5230\u8bad\u7ec3\u4efb\u52a1\u7ed3\u675f": 740, "\u76f8\u4e58\u751f\u6210\u6d88\u606f": 752, "\u76f8\u5173api": [745, 746, 748, 749], "\u76f8\u5173\u6982\u8ff0\u8bf7\u9605\u8bfbapi\u53c2\u8003\u624b\u518c": 745, "\u76f8\u5173\u7684\u6838\u5fc3\u6982\u5ff5": 743, "\u76f8\u5173\u7684\u7279\u5f81\u4e5f\u4f1a\u88ab\u62f7\u8d1d": 749, "\u76f8\u540c": [757, 766], "\u76f8\u540c\u540d\u79f0\u7684\u7279\u5f81\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b": 746, "\u76f8\u5bf9\u5730": 744, "\u76f8\u6bd4\u4e4b\u4e0b": 759, "\u76f8\u6bd4\u540c\u6784\u56fe": 749, "\u77e5\u9053": 758, "\u786e\u5b9a": 765, "\u793a\u4f8b\u5982\u4e0b\u6240\u793a": 760, "\u793e\u4ea4\u7f51\u7edc\u7684\u56fe\u7531\u8868\u793a\u540c\u4e00\u5b9e\u4f53\u7c7b\u578b\u7684\u4eba\u53ca\u5176\u76f8\u4e92\u4e4b\u95f4\u7684\u793e\u4ea4\u5173\u7cfb\u7ec4\u6210": 744, "\u79cd\u5b50\u8282\u70b9": 757, "\u79f0\u4e3a": 734, "\u79f0\u4e3a\u70b9id": 748, "\u79f0\u4e3a\u8fb9id": 748, "\u7ae0\u8282": 750, "\u7ae0\u8282\u4e2d\u4e5f\u4f1a\u63d0\u5230": 757, "\u7b2c1\u7ae0": 750, "\u7b2c2\u4e2a\u5143\u7d20\u4e3a\u76ee\u6807\u8282\u70b9\u7279\u5f81": 765, "\u7b2c2\u7ae0": [750, 767, 768, 772], "\u7b2c3\u7ae0": [750, 761, 767, 772], "\u7b2c4\u7ae0": [750, 767, 770, 772], "\u7b2c5\u7ae0": [750, 756], "\u7b2c6\u7ae0": [750, 755, 765, 767], "\u7b2c7\u7ae0": 750, "\u7b2c\u4e00\u90e8\u5206\u4e0e": 758, "\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8f93\u51fa\u8282\u70b9": 757, "\u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u8fb9\u4e0a\u7684\u9884\u6d4b\u503c": 768, "\u7b2c\u4e8c\u90e8\u5206\u7684\u8f93\u5165\u901a\u5e38\u662f\u524d\u4e00\u90e8\u5206\u7684\u8f93\u51fa": 758, "\u7b49": [752, 764], "\u7b49conv\u6a21\u5757\u4e2d": 765, "\u7b49\u4ef7\u4e8e\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u63a5\u6536\u5230\u6d88\u606f\u6c42\u548c\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 752, "\u7ba1\u7406\u5728\u591a\u4e2a\u8ba1\u7b97\u673a\u4e2d\u88ab\u5212\u5206\u548c\u5b58\u50a8\u7684\u5bc6\u96c6\u5f20\u91cf": 740, "\u7c7b": 735, "\u7c7b\u4e2d\u4e0b\u8f7d\u4e00\u4e2a": 735, "\u7c7b\u4e2d\u770b\u5230\u6a21\u578b\u5b9e\u73b0\u7684\u7ec6\u8282": 772, "\u7c7b\u4f3c": 739, "\u7c7b\u548c": 762, "\u7c7b\u578b\u7684\u8282\u70b9\u4e5f\u4f1a\u88ab\u4fdd\u7559": 749, "\u7c7b\u578b\u7684\u8282\u70b9\u7684": 749, "\u7c7b\u578b\u7684\u8fb9\u7684": 749, "\u7c7b\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u6570\u636e\u5904\u7406\u7ba1\u9053": 733, "\u7c7b\u6709\u62bd\u8c61\u51fd\u6570": 734, "\u7c7b\u8fdb\u884c\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 762, "\u7ea2\u8272\u70b9": 757, "\u7ec6\u8282\u5185\u5bb9\u53ef\u4ee5\u5728\u4e0b\u9762\u7684disttensor\u548cdistembedding\u7ae0\u8282\u91cc\u67e5\u770b": 740, "\u7ed3\u5408\u4e86\u8282\u70b9\u8868\u793a\u6a21\u5757\u548c\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u6a21\u578b\u5982\u4e0b\u6240\u793a": 768, "\u7ed3\u5408\u4f7f\u7528": [758, 762], "\u7ed9\u5b9agnn\u5c42": 757, "\u7ed9\u5b9a\u4e00\u5f20\u56fe": 770, "\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 771, "\u7ed9\u5b9a\u8ba1\u7b97\u8282\u70b9\u548c\u8fb9\u4e0a\u8868\u793a\u7684\u6a21\u578b\u540e": 768, "\u7ed9\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u7f16\u53f7": 748, "\u7ef4\u5ea6\u901a\u5e38\u5305\u62ec\u8f93\u5165\u7684\u7ef4\u5ea6": 764, "\u7eff\u8272\u548c\u7ea2\u8272\u8282\u70b9": 757, "\u7eff\u8272\u70b9": 757, "\u7eff\u8272\u8282\u70b9": 757, "\u7f13\u5b58\u6982\u7387\u5206\u5e03": 760, "\u7f16\u5199dgl": [750, 763], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [750, 751, 765], "\u7f16\u7801\u5e02\u573a\u7684\u56fe\u53ef\u4ee5\u6709\u8868\u793a": 744, "\u8003\u8651\u4ee5\u4e0b\u57fa\u4e8edgl\u7684\u6d88\u606f\u4f20\u9012\u793a\u4f8b": 769, "\u8003\u8651\u4ee5\u4e0b\u8fb9\u754c": 757, "\u8003\u8651\u5230\u67d0\u4e9b\u56fe\u8fb9\u7684\u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u8282\u70b9\u7684\u6570\u91cf": 753, "\u8003\u8651\u5728\u4e00\u4e2a\u6709": 756, "\u800c": 745, "\u800c\u4e0d\u662f": 758, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7279\u5f81\u5f20\u91cf": 761, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5927\u56fe": 770, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u6807\u7b7e": 762, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81": 762, "\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u5927\u56fe\u6570\u636e": 770, "\u800c\u4e0d\u662f\u5e95\u5c42\u6846\u67b6\u91cc\u7684\u5f20\u91cf": 740, "\u800c\u4e0d\u662f\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u5f20\u91cf\u7684\u5b57\u5178": [758, 760], "\u800c\u4e14\u4e24\u79cd\u8282\u70b9\u5177\u6709\u4e0d\u540c\u7684\u7279\u5f81": 749, "\u800c\u4ee5\u4e0b\u7528\u6237\u5b9a\u4e49\u6d88\u606f\u51fd\u6570\u4e0e\u6b64\u5185\u7f6e\u51fd\u6570\u7b49\u4ef7": 752, "\u800c\u540e\u8005\u5219\u6807\u8bc6dgl\u670d\u52a1\u5668\u4e2d\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 740, "\u800c\u5728cpu\u4e0a\u8fdb\u884c\u5219\u8ba1\u7b97\u901f\u5ea6\u5f88\u6162": 759, "\u800c\u65e0\u9700\u8bbe\u8ba1\u590d\u6742\u7684\u56fe\u91c7\u6837\u7b97\u6cd5": 770, "\u800c\u662f\u5728": 752, "\u800c\u7ebf\u6027\u5c42\u8f93\u51fa\u7ef4\u6570\u8f83\u4f4e": 753, "\u800c\u975e4\u6761": 745, "\u805a\u5408\u51fd\u6570": [751, 752], "\u805a\u5408\u51fd\u6570\u6765\u5b9e\u73b0": 765, "\u805a\u5408\u51fd\u6570\u901a\u5e38\u6709\u4e24\u4e2a\u53c2\u6570": 752, "\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u4e0a\u7684\u7ed3\u679c": 766, "\u805a\u5408\u7c7b\u578b": 764, "\u805a\u5408\u7c7b\u578b\u51b3\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u4e0d\u540c\u8fb9\u4e0a\u7684\u4fe1\u606f": 764, "\u80e1\u9a8f": 750, "\u8282\u70b9": [743, 752], "\u8282\u70b92": 757, "\u8282\u70b93": 757, "\u8282\u70b93\u662f\u4e00\u4e2a\u5b64\u7acb\u8282\u70b9": 757, "\u8282\u70b98": 757, "\u8282\u70b9\u5206\u7c7b": [737, 750, 767], "\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b": 737, "\u8282\u70b9\u5206\u7c7b\u7684rgcn\u6a21\u578b": 768, "\u8282\u70b9\u5206\u7c7b\u901a\u5e38\u5728\u5355\u4e2a\u56fe\u4e0a\u8fdb\u884c": 737, "\u8282\u70b9\u548c": [753, 768], "\u8282\u70b9\u548c\u8fb9": [743, 750], "\u8282\u70b9\u548c\u8fb9id\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4": 748, "\u8282\u70b9\u548c\u8fb9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u6784\u5efa\u7684": 748, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [743, 750], "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0": 746, "\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684": 744, "\u8282\u70b9\u56de\u5f52\u4efb\u52a1\u4e5f\u7c7b\u4f3c": 772, "\u8282\u70b9\u5f20\u91cf": 748, "\u8282\u70b9\u6570\u636e\u540d\u79f0\u548c\u5f20\u91cf\u540d\u79f0\u4e0d\u5fc5\u76f8\u540c": 740, "\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 740, "\u8282\u70b9\u6807\u7b7e\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u5668\u4e2d": 762, "\u8282\u70b9\u7279\u5f81": 753, "\u8282\u70b9\u7279\u5f81\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u4e2d": 762, "\u8282\u70b9\u7279\u5f81\u548c\u6807\u7b7e\u5b58\u50a8\u5728\u5176\u56fe\u4e0a": 772, "\u8282\u70b9\u7279\u5f81\u548c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u5b58\u50a8\u5728": 737, "\u8282\u70b9\u7279\u5f81\u7ef4\u6570\u8f83\u9ad8": 753, "\u8282\u70b9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u7684": 749, "\u8282\u70b9\u7684\u6807\u7b7e": 737, "\u8282\u70b9\u7684\u7279\u5f81": 737, "\u8282\u70b9\u7684\u7c7b\u522b": 772, "\u8282\u70b9\u7684\u8fb9": 768, "\u8282\u70b9\u7c7b\u578b": 737, "\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7ed3\u679c": 762, "\u8282\u70b9\u8868\u793a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6": 771, "\u82e5\u7528\u56fe\u5bf9twitter\u7528\u6237\u7684\u5173\u6ce8\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21": 744, "\u82e5\u7528\u56fe\u5bf9\u793e\u4ea4\u7f51\u7edc\u4e2d\u4eba\u4eec\u7684\u53cb\u8c0a\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21": 744, "\u83ab\u4f73\u5e05\u5b50": 750, "\u83b7\u53d6": [749, 757], "\u83b7\u53d6drug\u8282\u70b9\u7684\u6570\u91cf": 749, "\u83b7\u53d6\u5212\u5206\u7684\u63a9\u7801": 737, "\u83b7\u53d6\u5212\u5206\u7684\u6807\u7b7e": 736, "\u83b7\u53d6\u5355\u4e00\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81": 749, "\u83b7\u53d6\u539f\u59cbid": 741, "\u83b7\u53d6\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u91cf": 749, "\u83b7\u53d6\u6807\u7b7e": 737, "\u83b7\u53d6\u7279\u5b9a\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u7684\u7279\u5f81": 749, "\u83b7\u53d6\u79cd": 757, "\u83b7\u53d6\u805a\u5408\u51fd\u6570\u7684\u5185\u90e8\u51fd\u6570": 766, "\u83b7\u53d6\u8282\u70b91\u7684\u7279\u5f81": 746, "\u83b7\u53d6\u8282\u70b9\u7279\u5f81": 737, "\u83b7\u53d6\u8282\u70b9\u7684id": 748, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u8fb9\u7c7b\u578b": 737, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u63a9\u7801": 737, "\u83b7\u53d6\u8fb90\u548c3\u7684\u7279\u5f81": 746, "\u83b7\u53d6\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 758, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9": 748, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9\u548c\u8fb9id": 748, "\u83b7\u5f97": 761, "\u867d\u7136dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u90bb\u5c45\u91c7\u6837\u5668": 757, "\u867d\u7136\u4e0a\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u8fb9\u754c": 757, "\u867d\u7136\u8fd9\u4e24\u4e2a\u6a21\u5757\u90fd\u6bd4\u4e0a\u8ff0\u7684\u793a\u4f8b\u4ee3\u7801\u8981\u590d\u6742": 768, "\u884c\u4f18\u5148": 746, "\u8868\u660e\u4e24\u8282\u70b9\u95f4\u5b58\u5728\u5173\u7cfb": 744, "\u8868\u793a": 752, "\u8868\u793a\u5728\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u5b58\u5728\u4ece": 749, "\u8868\u793a\u5b83\u662f\u4ece\u8282\u70b9": 748, "\u8868\u793a\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u8ba1\u7b97\u7ed3\u679c": 766, "\u88ab\u4e70\u4e0b": 758, "\u88ab\u5173\u6ce8": 758, "\u88ab\u805a\u5408\u7684\u7279\u5f81\u5c06\u4f1a\u4e0e\u8282\u70b9\u7684\u521d\u59cb\u7279\u5f81\u62fc\u63a5\u8d77\u6765": 765, "\u8981\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u91c7\u6837\u5668": 762, "\u8981\u5bf9\u6e90\u8282\u70b9\u7684": 752, "\u8981\u5c06\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u5165": 762, "\u8981\u6267\u884c\u8d1f\u91c7\u6837": 771, "\u8981\u67e5\u627e\u7ed9\u5b9a\u8282\u70b9\u7c7b\u578b\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u6570\u91cf": 757, "\u8981\u805a\u5408\u7684\u7279\u5f81\u5927\u5c0f\u4e3a": 770, "\u8981\u8ba1\u7b97": 757, "\u89c11": 743, "\u8ba1\u7b97": [757, 771], "\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u94fe\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 771, "\u8ba1\u7b97\u5e94\u7528\u4e8e\u7ed9\u5b9a\u7684\u4e00\u5806\u76ee\u6807\u8282\u70b9\u6240\u91c7\u6837\u7684\u5b50\u56fe": 765, "\u8ba1\u7b97\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 760, "\u8ba1\u7b97\u5fc5\u987b\u5728\u8fb9\u4e0a\u4fdd\u5b58\u6d88\u606f": 753, "\u8ba1\u7b97\u635f\u5931\u503c": 772, "\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u63a5\u53d7\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7684\u4e24\u4e2a\u5b57\u5178": 758, "\u8ba1\u7b97\u635f\u5931\u5e76\u53cd\u5411\u4f20\u64ad": 762, "\u8ba1\u7b97\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 758, "\u8ba1\u7b97\u8f93\u51fa": 759, "\u8ba1\u7b97\u8fb9\u5b50\u56fe\u4e2d\u8fb9\u7684\u5f97\u5206": 758, "\u8ba1\u7b97\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u5ea6": 772, "\u8bad\u7ec3": [737, 750, 755, 765, 767, 772], "\u8bad\u7ec3\u4e00\u4e2a\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u6d89\u53ca\u5230\u6bd4\u5bf9\u4e24\u4e2a\u76f8\u8fde\u63a5\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u4e0e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u7684\u5dee\u5f02": 771, "\u8bad\u7ec3\u4e0b\u6e38\u4efb\u52a1\u7684\u5206\u7c7b\u5668": 771, "\u8bad\u7ec3\u540e": 771, "\u8bad\u7ec3\u5668": 739, "\u8bad\u7ec3\u5668\u4f1a\u5bf9\u5c40\u90e8\u5206\u533a\u4e2d\u5e26\u6807\u7b7e\u8282\u70b9\u7684\u5b50\u96c6\u8fdb\u884c\u8ba1\u7b97": 741, "\u8bad\u7ec3\u5668\u8fdb\u7a0b": 739, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [750, 756], "\u8bad\u7ec3\u5faa\u73af\u901a\u8fc7\u6570\u636e\u52a0\u8f7d\u5668\u53bb\u904d\u5386\u6570\u636e": 760, "\u8bad\u7ec3\u6548\u7387\u4f1a\u5f88\u4f4e": 770, "\u8bad\u7ec3\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357\u53ef\u4ee5\u5728": 737, "\u8bad\u7ec3\u6a21\u578b": 762, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u548c\u540c\u6784\u56fe\u65f6\u4e00\u81f4": 771, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u91cc\u4f1a\u91cd\u590d\u6784\u5efa\u8d1f\u91c7\u6837\u56fe\u5e76\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u503c": 771, "\u8bad\u7ec3\u7b97\u6cd5\u6709\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 759, "\u8bad\u7ec3\u811a\u672c": 742, "\u8bad\u7ec3\u8fc7\u7a0b\u5305\u62ec\u904d\u5386dataloader\u548c\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u90e8\u5206": 770, "\u8bad\u7ec3\u90e8\u5206\u548c\u540c\u6784\u56fe\u7684\u8bad\u7ec3\u57fa\u672c\u4e00\u81f4": 768, "\u8bad\u7ec3\u90e8\u5206\u5982\u4e0b\u6240\u793a": 768, "\u8bb0\u4e3a": 744, "\u8bb0\u4f5c": 771, "\u8bb2\u89e3\u4e86\u5982\u4f55\u5bf9\u5c0f\u89c4\u6a21\u7684\u56fe\u6570\u636e\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 767, "\u8bb8\u591a\u573a\u666f\u4e2d\u7684\u56fe\u6570\u636e\u662f\u7531\u591a\u4e2a\u56fe\u7ec4\u6210": 770, "\u8bb8\u591a\u635f\u5931\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807": 771, "\u8bb8\u591a\u77e5\u540dpython\u5e93": 745, "\u8bbe\u7f6e": 749, "\u8bbe\u7f6e\u9009\u9879": 764, "\u8bbf\u95ee\u5176\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 757, "\u8bbf\u95ee\u8be5\u5757\u7684\u8f93\u5165\u8282\u70b9\u7279\u5f81": 757, "\u8be5api\u4f1a\u76f8\u5e94\u5730\u6253\u4e71\u6240\u6709\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 741, "\u8be5api\u652f\u6301\u968f\u673a\u5212\u5206\u548c\u4e00\u4e2a\u57fa\u4e8e": 741, "\u8be5pytorch\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u6279\u7684\u5f62\u5f0f\u8fed\u4ee3\u8bad\u7ec3\u8fb9id\u7684\u6570\u7ec4": 758, "\u8be5\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\u5b9e\u73b0": 761, "\u8be5\u4f8b\u5b50\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u5355\u4e2a\u8282\u70b9": 757, "\u8be5\u4f8b\u5b50\u91cc\u7701\u7565\u4e86\u8bad\u7ec3\u65e9\u505c\u548c\u6a21\u578b\u4fdd\u5b58\u90e8\u5206\u7684\u4ee3\u7801": 768, "\u8be5\u505a\u6cd5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c": 753, "\u8be5\u51fd\u6570\u5047\u5b9a\u539f\u59cb\u6570\u636e\u5df2\u7ecf\u4f4d\u4e8e": 737, "\u8be5\u51fd\u6570\u7684\u7ec6\u8282\u5982\u4e0b\u6240\u793a": 765, "\u8be5\u540d\u79f0\u4ecd\u5b58\u5728\u4e8e\u7fa4\u96c6\u4e2d": 740, "\u8be5\u56fe\u5177\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 749, "\u8be5\u5b50\u56fe\u5305\u62ec\u521d\u59cb\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u548c\u6307\u5b9a\u8282\u70b9\u7684\u5165\u8fb9": 757, "\u8be5\u5f20\u91cf\u7684\u7b2c\u4e00\u7ef4\u5fc5\u987b\u4e0e\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u6570\u91cf\u4e00\u81f4": 746, "\u8be5\u6587\u4ef6\u5305\u542b\u672c\u5730\u8ba1\u7b97\u673a\u4e2d\u5206\u533a\u6570\u636e\u7684\u4fe1\u606f": 742, "\u8be5\u65b9\u6cd5\u80fd\u8282\u7701\u5728\u5927\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u9500\u548c\u8ba1\u7b97\u8d44\u6e90": 756, "\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4e3a\u5b83\u4eec\u751f\u6210\u8fb9\u754c": 757, "\u8be5\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u957f\u5ea6\u6216\u8fde\u63a5\u7684\u5f3a\u5ea6": 744, "\u8be5\u6a21\u578b\u4e0e\u5f02\u6784\u56fe\u4e0a\u8fb9\u5206\u7c7b\u7684\u6a21\u578b\u6709\u4e9b\u4e0d\u540c": 771, "\u8be5\u6a21\u578b\u7684\u8f93\u5165\u5305\u62ec\u4e0a\u8ff0\u4e09\u9879\u4ee5\u53ca\u8f93\u5165\u7684\u7279\u5f81": 760, "\u8be5\u7c7b\u4e3a\u5bfc\u5165": 733, "\u8be5\u811a\u672c\u5305\u542b\u56db\u4e2a\u53c2\u6570": 742, "\u8be5\u811a\u672c\u6709\u4ee5\u4e0b\u5047\u8bbe": 742, "\u8be5\u8fb9\u7c7b\u578b\u662f\u901a\u8fc7\u5408\u5e76\u6240\u6709\u4ece": 768, "\u8be5\u91c7\u6837\u65b9\u6cd5\u6839\u636e\u4e0e\u8282\u70b9\u7684\u5ea6\u7684\u5e42\u6210\u6b63\u6bd4\u7684\u6982\u7387\u5206\u5e03\u5bf9\u8d1f\u6837\u672c\u76ee\u6807\u8282\u70b9\u8fdb\u884c\u91c7\u6837": 760, "\u8be6\u7ec6\u7684\u5b9e\u73b0\u8bf7\u53c2\u8003": 737, "\u8be6\u7ec6\u89e3\u91ca": 741, "\u8bf4\u660e\u805a\u5408\u662f\u9010\u7c7b\u8fdb\u884c\u7684": 754, "\u8bf7\u4f7f\u7528": 735, "\u8bf7\u53c2\u8003": [737, 758, 772], "\u8bf7\u53c2\u8003dgl\u7684\u5185\u7f6e\u6570\u636e\u96c6": 737, "\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357\u7684": 767, "\u8bf7\u53c2\u89c1": [737, 741, 752], "\u8bf7\u53c2\u89c1\u542f\u52a8\u811a\u672c\u90e8\u5206": 740, "\u8bf7\u53c2\u9605": 734, "\u8bf7\u53c2\u9605\u4e0b\u6587\u91cc\u5206\u5e03\u5f0f\u56fe\u91c7\u6837\u90e8\u5206": 740, "\u8bf7\u53c2\u9605\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u7ae0\u8282": 740, "\u8bf7\u6ce8\u610f": [734, 737, 738, 739, 757, 762, 765, 772], "\u8bf7\u786e\u4fdd\u4f7f\u7528\u4e0e\u539f\u59cb\u6587\u4ef6\u540d\u76f8\u540c\u7684\u540e\u7f00": 735, "\u8bf7\u786e\u4fdd\u5b83\u88ab\u5b58\u653e\u5728\u76ee\u5f55": 735, "\u8bf8\u5982\u91c7\u6837": 734, "\u8bfb\u51fa": 770, "\u8bfb\u51fa\u51fd\u6570\u4f1a\u5206\u522b\u4f5c\u7528\u5728\u56fe\u6279\u6b21\u4e2d\u7684\u6bcf\u5f20\u56fe\u4e0a": 770, "\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528networkx\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u89e3\u6790": 745, "\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003": [762, 772], "\u8bfb\u8005\u53ef\u4ee5\u5728api\u6587\u6863\u4e2d\u627e\u5230": 766, "\u8bfb\u8005\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53c2\u8003": 768, "\u8bfb\u8005\u53ef\u53c2\u8003": [744, 748], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": 759, "\u8c03\u7528\u540e": 752, "\u8c03\u7528\u6b64api": 740, "\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u635f\u5931": 771, "\u8d1f\u6837\u672c": 760, "\u8d1f\u8d23\u4f7f\u7528": 757, "\u8d1f\u8d23\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684": 742, "\u8d1f\u91c7\u6837": 771, "\u8d2d\u4e70": 758, "\u8d4b\u503c": 768, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [750, 756], "\u8df3\u8fc7\u4e00\u4e9b\u5904\u7406\u7684\u4ee3\u7801": 737, "\u8df3\u8fc7\u6570\u636e\u5904\u7406": 737, "\u8f6c\u6362\u6210int32": 748, "\u8f6c\u6362\u6210int64": 748, "\u8f7d\u5165ogb\u7684graph": 736, "\u8f7d\u5165ogb\u7684link": 736, "\u8f7d\u5165ogb\u7684nod": 736, "\u8f7d\u5165\u6570\u636e\u96c6": 736, "\u8f83\u5927\u65f6": 756, "\u8f93\u5165": 766, "\u8f93\u5165\u4ecd\u7136\u662fdgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868\u548c\u8f93\u5165\u7279\u5f81": 758, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81": 772, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81\u5b57\u5178": 772, "\u8f93\u5165\u7279\u5f81\u5c06\u88ab\u7ec4\u7ec7\u4e3a\u5143\u7ec4": 766, "\u8f93\u5165\u7684user\u548cgame\u8282\u70b9": 757, "\u8f93\u5165\u7ef4\u5ea6\u53ef\u88ab\u5206\u4e3a\u6e90\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6": 764, "\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u5c06\u540c\u65f6\u5305\u542b\u8fd9\u4e9b\u5b64\u7acb\u8282\u70b9": 757, "\u8f93\u5165\u8fd8\u53ef\u4ee5\u5305\u62ec\u8fb9\u81ea\u8eab\u7684\u7279\u5f81": 768, "\u8f93\u51fa\u7684user\u548cgame\u8282\u70b9": 757, "\u8f93\u51fa\u7684\u7ef4\u5ea6\u548c\u9690\u5c42\u7684\u7ef4\u5ea6": 764, "\u8f93\u51fa\u76ee\u5f55\u91cc\u59cb\u7ec8\u5305\u542b\u4e00\u4e2a\u540d\u4e3axxx": 741, "\u8f93\u51fa\u8282\u70b9": 757, "\u8f93\u51fa\u8282\u70b9\u4e5f\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 757, "\u8f93\u51fa\u8282\u70b9\u53ef\u4ee5\u6bd4\u4ee5\u4e0a\u8282\u70b9\u5305\u542b\u66f4\u591a\u8282\u70b9": 757, "\u8f93\u51fa\u8282\u70b9\u7684id\u4f4d\u4e8e\u5176\u5b83\u8282\u70b9\u4e4b\u524d": 757, "\u8fb9": [737, 741, 743, 744, 746, 748, 751, 752], "\u8fb9\u4e0a\u8ba1\u7b97": 751, "\u8fb9\u5206\u7c7b": [750, 758, 767, 771, 772], "\u8fb9\u5206\u7c7b\u4e2d\u76f8\u540c\u7684\u90bb\u5c45\u91c7\u6837\u5668": 760, "\u8fb9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u7684\u8bad\u7ec3": 767, "\u8fb9\u5206\u7c7b\u6a21\u578b\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210": 758, "\u8fb9\u53ca\u5176\u7279\u5f81": 745, "\u8fb9\u5b50\u56fe\u4ee5\u53ca\u8f93\u5165\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad": 758, "\u8fb9\u6743\u91cd\u53ef\u4ee5\u662f\u8fde\u63a5\u5f3a\u5ea6\u6216\u8005\u4fe1\u5fc3\u6307\u6570": 769, "\u8fb9\u6743\u91cd\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a": 769, "\u8fb9\u7279\u5f81": [739, 740], "\u8fb9\u7279\u5f81\u548c\u56fe\u91c7\u6837": 740, "\u8fb9\u754c\u5b50\u56fe": 757, "\u8fb9\u7684id\u4f4d\u4e8e\u90bb\u8fd1\u533a\u95f4\u5185": 737, "\u8fb9\u7684\u7279\u5f81\u6570\u636e": 767, "\u8fb9\u7684\u90bb\u5c45\u7684\u5c40\u90e8\u6027": 737, "\u8fb9\u7c7b\u578b": [737, 749], "\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u79f0\u4f5c": 768, "\u8fb9\u7c7b\u578b\u9884\u6d4b\u7684\u7b2c\u4e00\u6b65\u4ecd\u7136\u662f\u8ba1\u7b97\u8282\u70b9\u8868\u793a": 768, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": [739, 750], "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u56fe\u4f5c\u4e3a\u8fb9\u754c": 757, "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u8fb9\u754c": 757, "\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178": 757, "\u8fd4\u56de\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\u7684\u5143\u7ec4": 737, "\u8fd4\u56de\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u7279\u5f81\u5b57\u5178": 754, "\u8fd4\u56de\u7684\u662f": 740, "\u8fd8\u5141\u8bb8\u901a\u8fc7\u6307\u5b9a": 741, "\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u4e0b\u6e38\u4efb\u52a1\u83b7\u53d6\u9690\u85cf\u8282\u70b9\u8868\u793a": 772, "\u8fd8\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\u8de8\u7c7b\u578b\u6574\u5408\u51fd\u6570": 754, "\u8fd8\u652f\u6301\u751f\u6210\u7528\u4e8e\u94fe\u63a5\u9884\u6d4b\u7684\u8d1f\u6837\u672c": 760, "\u8fd8\u662f": 768, "\u8fd8\u80fd\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528": 748, "\u8fd8\u9700\u8981\u5728\u8bfb\u51fa\u51fd\u6570\u4e2d\u805a\u5408\u4e0d\u540c\u7c7b\u522b\u7684\u8282\u70b9": 770, "\u8fd8\u9700\u8981\u5c06\u5176\u4e0e": 762, "\u8fd92\u4e2a\u5b57\u5178\u4e0e": 766, "\u8fd9\u4e00\u793a\u4f8b\u6765\u4e86\u89e3\u5982\u4f55\u9884\u6d4b\u5f02\u6784\u56fe\u4e2d\u7684\u8fb9\u7c7b\u578b": 768, "\u8fd9\u4e00\u7ae0\u4e2d\u63d0\u5230\u7684\u56fe\u5377\u79ef\u7f51\u7edc\u83b7\u5f97": 768, "\u8fd9\u4e0e\u5728": 772, "\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u5e03\u5c14\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165": 740, "\u8fd9\u4e2a": 767, "\u8fd9\u4e2aapi\u4f1a\u4e0edgl\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u5e76\u521b\u5efa\u91c7\u6837\u5668\u8fdb\u7a0b": 740, "\u8fd9\u4e2aapi\u5c06\u8fd0\u884c\u670d\u52a1\u5668\u4ee3\u7801": 740, "\u8fd9\u4e2a\u4f8b\u5b50\u662f\u8bc4\u5206\u9884\u6d4b\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 768, "\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u628a\u539f\u56fe\u8f6c\u6362\u6210\u4e00\u4e2a\u5305\u542b\u53cd\u5411\u8fb9\u7684\u56fe": 748, "\u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u53d8\u91cf\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u548c\u5176\u4ed6\u8f93\u5165\u7279\u5f81": 769, "\u8fd9\u4e2a\u5b57\u5178\u7684\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u91cc": 754, "\u8fd9\u4e2a\u5b57\u5178\u7684\u952e\u4e3a\u5173\u7cfb\u540d": 766, "\u8fd9\u4e2a\u63a5\u53e3\u5c06\u66f4\u65b0\u6240\u6709\u7684\u8fb9": 752, "\u8fd9\u4e2a\u6570\u636e\u52a0\u8f7d\u5668\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668": 757, "\u8fd9\u4e2a\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe": 737, "\u8fd9\u4e2a\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 737, "\u8fd9\u4e2a\u6574\u5408\u65b9\u5f0f\u53ef\u4ee5\u662f": 754, "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f02\u6784\u56fe": 768, "\u8fd9\u4e2a\u6a21\u578b\u4e0d\u4ec5\u53ef\u4ee5\u505a\u8282\u70b9\u5206\u7c7b": 772, "\u8fd9\u4e2a\u6a21\u578b\u5177\u6709\u53ef\u8c03\u8282\u7684\u5c42\u6570": 772, "\u8fd9\u4e2a\u8fc7\u7a0b": 737, "\u8fd9\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u4f1a\u6784\u5efa\u8ba1\u7b97\u7684\u4f9d\u8d56\u5173\u7cfb\u56fe": 756, "\u8fd9\u4e3a\u4ece\u6574\u4f53\u4e0a\u8fdb\u884c\u7cfb\u7edf\u4f18\u5316\u63d0\u4f9b\u4e86\u7a7a\u95f4": 752, "\u8fd9\u4e48\u505a\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4": 734, "\u8fd9\u4e9budf\u5fc5\u987b\u5728": 740, "\u8fd9\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u72ec\u7acb\u7684id\u7a7a\u95f4\u548c\u7279\u5f81": 749, "\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32": 752, "\u8fd9\u4e9b\u56fe\u8868\u793a\u6bcf\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56": 762, "\u8fd9\u4e9b\u5c5e\u6027\u65e8\u5728\u523b\u753b\u6bcf\u4e00\u79cd\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 754, "\u8fd9\u4e9b\u5e03\u5c14\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf": 740, "\u8fd9\u4e9b\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u548c\u6d88\u606f\u4f20\u9012\u4e2d\u7684\u503c\u65e0\u6548": 765, "\u8fd9\u4e9b\u670d\u52a1\u5668\u4e00\u8d77\u5de5\u4f5c\u4ee5\u5c06\u56fe\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 739, "\u8fd9\u4e9b\u6784\u5efa\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u91cd\u89c6\u6027\u80fd\u7684\u573a\u666f": 745, "\u8fd9\u4e9b\u6a21\u5757\u662f\u7eafpytorch": 764, "\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u662f\u6807\u91cf": 746, "\u8fd9\u4e9b\u7c7b\u4f1a\u751f\u6210\u9700\u8ba1\u7b97\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u8ba1\u7b97\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u56fe": 762, "\u8fd9\u4e9b\u8282\u70b9\u4e0e\u7528\u6237\u5e0c\u671b\u8ba1\u7b97\u6700\u7ec8\u8868\u793a\u7684\u8282\u70b9\u76f8\u540c": 762, "\u8fd9\u4e9b\u8282\u70b9\u662f\u8ba1\u7b97\u8282\u70b9\u6700\u7ec8\u8868\u793a\u6240\u9700\u7684\u6240\u6709\u5fc5\u9700\u7684\u8282\u70b9": 762, "\u8fd9\u4ec5\u662f\u4e2a\u4f8b\u5b50": 770, "\u8fd9\u4f1a\u5c06\u56fe\u7ed3\u6784\u548c\u7279\u5f81\u6570\u636e\u90fd\u62f7\u8d1d\u5230\u6307\u5b9a\u7684\u8bbe\u5907": 747, "\u8fd9\u4f1a\u975e\u5e38\u6d88\u8017\u5185\u5b58": 753, "\u8fd9\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4": 741, "\u8fd9\u5305\u62ec\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 739, "\u8fd9\u53d6\u51b3\u4e8e\u56fe\u4e2d\u8fb9\u7684\u65b9\u5411\u6027": 744, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u574f": 740, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u6027\u80fd\u4e0d\u4f73": 765, "\u8fd9\u53ef\u80fd\u5e26\u6765\u975e\u6700\u4f18\u7684\u914d\u7f6e": 741, "\u8fd9\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528": 749, "\u8fd9\u5bf9\u4e8e\u540c\u6b65sgd\u975e\u5e38\u91cd\u8981": 740, "\u8fd9\u5c31\u5e26\u6765\u4e86\u5177\u6709\u4e0d\u540c\u7279\u5f81\u7684\u591a\u6761\u8fb9": 744, "\u8fd9\u5e73\u8861\u4e86\u4e0d\u540c\u7c7b\u578b\u8282\u70b9\u7684\u8fde\u8fb9\u6570\u91cf": 741, "\u8fd9\u5f88\u5bb9\u6613\u8d85\u8fc7\u4e00\u5757gpu\u7684\u663e\u5b58\u9650\u5236": 756, "\u8fd9\u662f\u4e00\u4e2a": 752, "\u8fd9\u662f\u56e0\u4e3adgl\u8981\u5b9a\u4f4d\u5e76\u5220\u9664\u5305\u542b\u5728\u5c0f\u6279\u6b21\u4e2d\u7684\u53cd\u5411\u8fb9": 758, "\u8fd9\u662f\u56e0\u4e3a\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u8fb9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee": 741, "\u8fd9\u662f\u56e0\u4e3a\u5b83\u5bf9\u4e00\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u6d88\u606f\u7684\u805a\u5408\u548c\u7ed3\u5408": 759, "\u8fd9\u662f\u56e0\u4e3a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u53ea\u7528\u4e00\u4e2a\u56fe": 737, "\u8fd9\u662f\u5c0f\u6279\u91cf\u8bad\u7ec3\u4e2d\u7684\u5e38\u89c1\u7528\u6cd5": 755, "\u8fd9\u662f\u7531\u4e8e": 745, "\u8fd9\u6837\u4e0d\u4ec5\u80fd\u63d0\u5347\u901f\u5ea6": 748, "\u8fd9\u6837\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5e2e\u7528\u6237\u8282\u7701\u5927\u91cf\u7684\u6570\u636e\u5904\u7406\u65f6\u95f4": 738, "\u8fd9\u6837\u7684\u4efb\u52a1\u79f0\u4f5c": 771, "\u8fd9\u6837\u7684\u65b9\u6cd5\u79f0\u4f5c": 771, "\u8fd9\u70b9\u5728\u4e4b\u540e\u7684": 757, "\u8fd9\u79cd\u60c5\u51b5\u4e0b": 768, "\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97dgl\u7684\u4ee3\u7801\u53ef\u4ee5\u65e0\u7f1d\u5d4c\u5165\u5230\u540e\u7aef\u6846\u67b6\u7684\u4ee3\u7801\u4e2d": 763, "\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f": 749, "\u8fd9\u7b49\u4ef7\u4e8e\u628a\u6bcf\u6761\u6d88\u606f\u548c\u5bf9\u5e94\u7684\u8fb9\u6743\u91cd\u76f8\u4e58": 769, "\u8fd9\u7c7b\u64cd\u4f5c\u53eb\u505a": 770, "\u8fd9\u8981\u6c42\u6240\u6709\u5f20\u91cf\u53c2\u6570\u90fd\u5df2\u7ecf\u653e\u5728gpu\u4e0a": 747, "\u8fd9\u90e8\u5206\u4ee3\u7801\u4f1a\u56e0\u6a21\u5757\u800c\u5f02": 765, "\u8fd9\u91cc": 737, "\u8fd9\u91cc\u4ee56": 759, "\u8fd9\u91cc\u5148\u89e3\u91ca\u4e00\u4e0b\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 757, "\u8fd9\u91cc\u5220\u9664\u4e86\u81ea\u73af": 762, "\u8fd9\u91cc\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u5faa\u73af\u4ec5\u5305\u542b\u4f7f\u7528\u5b9a\u5236\u7684\u6279\u5904\u7406\u8fed\u4ee3\u5668\u904d\u5386\u6570\u636e\u96c6\u7684\u5185\u5bb9": 762, "\u8fd9\u91cc\u7684\u79bb\u7ebf\u63a8\u65ad\u88ab\u5b9e\u73b0\u4e3agnn\u6a21\u5757\u7684\u4e00\u4e2a\u65b9\u6cd5": 759, "\u8fd9\u91cc\u7701\u7565\u4e86": 737, "\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8f93\u5165\u7684\u56fe\u6570\u636e\u4e0d\u80fd\u5305\u542b\u8fb9\u7684\u7c7b\u578b\u4fe1\u606f": 768, "\u8fdb\u800c\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u6765\u6784\u5efadglgraph\u5bf9\u8c61": 745, "\u8fdb\u884c\u4f18\u5316": 753, "\u8fdb\u884c\u521b\u5efa\u65f6": 745, "\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 772, "\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97": 772, "\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316": 764, "\u8fdb\u884c\u8bad\u7ec3": 768, "\u8fde\u63a5\u4e00\u5bf9\u8282\u70b9": 744, "\u9009\u62e9\u4e00\u4e2a\u5c0f\u6279\u6b21\u7684\u56fe\u8282\u70b9": 756, "\u9010\u5143\u7d20\u6c42\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c": 770, "\u9010\u5c42\u8ba1\u7b97\u8868\u793a": 759, "\u901a\u5e38": [740, 761], "\u901a\u5e38\u4f1a\u805a\u5408\u5e76\u6c47\u603b\u5355\u4e2a\u56fe\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f": 770, "\u901a\u5e38\u5728\u6d88\u606f\u4f20\u9012\u7684\u6700\u540e\u4e00\u6b65\u5c06\u5176\u4e0e\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408": 752, "\u901a\u5e38\u65e0\u6cd5\u8fdb\u884c": 756, "\u901a\u5e38\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u90bb\u5c45\u8fdb\u884c\u771f\u6b63\u7684\u805a\u5408": 759, "\u901a\u5e38\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u91c7\u6837\u8fc7\u7a0b\u53d8\u6162\u5f88\u591a": 758, "\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u591a\u5c42\u7684\u56fe\u795e\u7ecf\u7f51\u7edc": 772, "\u901a\u8fc7": [746, 752], "\u901a\u8fc7idx\u5f97\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e00\u4e2a\u6837\u672c": 734, "\u901a\u8fc7idx\u83b7\u53d6\u5bf9\u5e94\u7684\u56fe\u548c\u6807\u7b7e": 737, "\u901a\u8fc7\u5173\u7cfb\u540d": 766, "\u901a\u8fc7\u5e73\u5747\u8bfb\u51fa\u503c\u6765\u8ba1\u7b97\u5355\u56fe\u7684\u8868\u5f81": 770, "\u901a\u8fc7\u5f20\u91cf\u5206\u914d\u521b\u5efa\u7279\u5f81\u65f6": 746, "\u901a\u8fc7\u7528\u56fe\u523b\u753b\u540c\u4e00\u793e\u533a\u91cc\u4eba\u4e0e\u4eba\u95f4\u7684\u53cb\u8c0a": 770, "\u901a\u8fc7\u7d22\u5f15": 765, "\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u5bf9\u8fb9\u5c5e\u6027\u7684\u9884\u6d4b": 768, "\u901a\u8fc7\u8c03\u7528": 766, "\u904d\u5386\u6240\u6709\u8fb9\u7684\u7c7b\u578b": 757, "\u90a3\u4e48\u5728\u5757\u4e0a\u8ba1\u7b97\u7684\u4ee3\u7801\u4e5f\u662f\u7c7b\u4f3c\u7684": 761, "\u90a3\u4e48\u5b83\u4eec\u5df2\u7ecf\u652f\u6301\u4e86\u8fb9\u6743\u91cd": 769, "\u90a3\u4e48\u7528\u6237\u53ea\u9700\u8981\u518d\u7f16\u5199\u4e00\u4e2a\u7528": 768, "\u90a3\u4e48\u7528\u6237\u5c31\u9700\u8981\u8c03\u7528\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 753, "\u90a3\u4e48\u8be5\u51fd\u6570\u5e94\u4ee5\u521d\u59cb\u56fe\u4ee5\u53ca\u7531\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u6784\u6210\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 760, "\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b\u901a\u5e38\u5982\u4e0b": 756, "\u90bb\u5c45\u91c7\u6837\u5728\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u66f4\u597d\u5730\u53d1\u6325\u4f5c\u7528": 759, "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u5757\u7684\u5217\u8868": 760, "\u90bb\u63a5\u77e9\u9635\u91cc\u7684\u5143\u7d20\u4e0d\u662f\u96f6\u5c31\u662f\u4e00": 769, "\u90fd\u662f\u540e\u7eed\u56fe\u795e\u7ecf\u7f51\u7edc\u5c42\u8ba1\u7b97\u4e2d\u67d0\u6761\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 757, "\u90fd\u6709": 771, "\u90fd\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 761, "\u914d\u7f6e\u6587\u4ef6": 742, "\u91c7\u6837": 760, "\u91c7\u6837\u4ee3\u7801\u7c7b\u4f3c\u4e8e\u5355\u8fdb\u7a0b\u91c7\u6837": 740, "\u91c7\u6837\u5668": 739, "\u91c7\u6837\u5668\u65e0\u6cd5\u5728\u5177\u6709\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7684pytorch": 740, "\u91c7\u6837\u5668\u8fdb\u7a0b": 739, "\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf\u5fc5\u987b\u5339\u914d": 742, "\u91cc\u5b9e\u73b0\u4e86\u5f88\u591a\u5e38\u7528\u7684\u56fe\u6570\u636e\u96c6": 733, "\u91cc\u6240\u4ecb\u7ecd\u7684\u6027\u80fd\u4f18\u5316": 765, "\u91cc\u662f\u5426\u6709\u5904\u7406\u8fc7\u7684\u6570\u636e\u6587\u4ef6": 738, "\u91cc\u7684": 771, "\u91cc\u8bfb\u53d6\u5904\u7406\u8fc7\u7684\u6570\u636e": 738, "\u91cc\u9762\u4fdd\u5b58\u4e86\u8bad\u7ec3\u811a\u672c": 742, "\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b": 756, "\u91cd\u6392\u56fe\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u5c40\u90e8\u6027": 737, "\u91cd\u65b0\u521d\u59cb\u5316\u53ef\u5b66\u4e60\u7684\u53c2\u6570": 764, "\u9488\u5bf9mxnet\u548cpytorch\u540e\u7aef\u4e5f\u6709\u5bf9\u5e94\u7684\u6a21\u5757": 772, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [750, 756], "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [750, 756], "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [750, 756], "\u94fe\u63a5\u9884\u6d4b": [737, 750, 760, 767, 772], "\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u4e5f\u5e94\u4f7f\u7528\u7c7b\u4f3c\u7684\u5e03\u5c14\u6570\u7ec4": 740, "\u94fe\u63a5\u9884\u6d4b\u548c\u6574\u56fe\u5206\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 767, "\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5904\u7406\u4e0e\u8282\u70b9\u5206\u7c7b\u76f8\u4f3c": 737, "\u9500\u6bc1distgraph\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0distgraph\u7684\u884c\u4e3a\u6ca1\u6709\u88ab\u5b9a\u4e49": 740, "\u952e\u662f\u4e00\u79cd\u5173\u7cfb": 754, "\u957f\u5ea6\u4e3a3\u7684\u8282\u70b9\u7279\u5f81": 746, "\u95f4\u9694\u635f\u5931": 771, "\u9648\u77e5\u96e8": 750, "\u9664\u4e86": 758, "\u9664\u4e86\u56fe\u7ed3\u6784": 745, "\u9664\u4e86\u5e73\u8861\u8282\u70b9\u7684\u7c7b\u578b\u4e4b\u5916": 741, "\u9664\u4e86\u5f20\u91cf\u7684\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b\u4e4b\u5916": 740, "\u9664\u4e86\u6570\u636e\u7ef4\u5ea6": 764, "\u9664\u4e86\u7528\u6237\u5728\u521b\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u65f6\u65e0\u6cd5\u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 740, "\u9664\u4e86\u8f93\u5165\u56fe\u548c\u8f93\u5165\u5f20\u91cf": 766, "\u9664\u4ee5\u5165\u5ea6": 765, "\u9664\u6b64\u4e4b\u5916": 753, "\u968f\u540e": 760, "\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b": 758, "\u9690\u5c42\u5927\u5c0f\u4e3a": 756, "\u96c6\u7fa4\u4e2d\u7684\u6bcf\u53f0\u673a\u5668\u5404\u81ea\u8d1f\u8d23\u4e00\u5f20\u5b50\u56fe": 739, "\u9700\u8981\u4e0b\u56fe\u4e2d\u7684\u6765\u81ea\u8282\u70b94": 757, "\u9700\u8981\u4ee5\u5c0f\u6279\u6b21\u7684\u65b9\u5f0f\u8ba1\u7b97\u8fd9\u4e2agnn\u5c42\u6240\u6709\u8282\u70b9\u7684\u8f93\u51fa\u8868\u793a": 759, "\u9700\u8981\u5411\u6570\u636e\u8f7d\u5165\u5668\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u5bf9\u5e94\u8fb9id\u7684\u5b57\u5178": 760, "\u9700\u8981\u5bf9\u7528\u4e8e\u6574\u56fe\u7684gnn\u6a21\u5757\u8fdb\u884c\u5982\u4e0b\u8c03\u6574\u4ee5\u5c06\u5176\u7528\u4e8e\u5757\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5": 761, "\u9700\u8981\u5c06\u5176\u4e0e": 758, "\u9700\u8981\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a": 737, "\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u8282\u70b9\u548c\u8fb9\u7c7b\u578b": 749, "\u9700\u8981\u6839\u636e\u56fe\u7c7b\u578b\u88ab\u6307\u5b9a": 765, "\u9700\u8981\u6ce8\u610f": 770, "\u9700\u8981\u6ce8\u610f\u7684\u662f\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u8282\u70b9\u548c\u8fb9\u5c5e\u6027\u6ca1\u6709\u6279\u6b21\u5927\u5c0f\u5bf9\u5e94\u7684\u7ef4\u5ea6": 770, "\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c": 762, "\u975e\u7ebf\u6027\u548c\u57fa\u5206\u89e3": 762, "\u975e\u96f6\u7684\u5143\u7d20\u53ef\u4ee5\u53d6\u4efb\u610f\u6807\u91cf\u503c": 769, "\u975e\u96f6\u9879": 745, "\u9762\u5411\u90a3\u4e9b\u60f3\u8981\u5f00\u53d1\u65b0\u7684\u91c7\u6837\u7b97\u6cd5": 756, "\u987e\u5ba2": 744, "\u9884\u6d4b\u56fe\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u8fb9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u4efb\u52a1\u7c7b\u578b": 768, "\u9884\u6d4b\u5b83\u7684\u7c7b\u578b\u662f": 768, "\u9884\u6d4b\u7ed3\u679c\u523b\u753b\u4e86\u6574\u4e2a\u8f93\u5165\u56fe\u7684\u5c5e\u6027": 770, "\u9884\u6d4b\u8fb9\u5f97\u5206\u7684\u6a21\u578b\u548c\u8fb9\u5206\u7c7b": 771, "\u9996\u5148": 770, "\u9996\u5148\u4f7f\u7528pip\u5b89\u88c5ogb\u5305": 736, "\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0a\u56fe\u6240\u793a\u7684dglgraph": 757, "\u9996\u5148\u6211\u4eec\u904d\u5386\u56fe\u4e2d\u6240\u6709\u7684\u5173\u7cfb": 766, "\u9a8c\u8bc1": 740, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u6570\u636e\u96c6": 768, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u7684\u5206\u5272\u4e5f\u4ee5\u5e03\u5c14\u63a9\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u56fe\u4e0a": 772, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 740, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4ece\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u7c7b\u522b\u4e2d\u5206\u914d\u7684\u4e00\u4e2a\u7c7b\u522b": 772, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u6807\u6ce8\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57": 772, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u5212\u5206": 768, "\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u8282\u70b9\u770b\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 741, "\u9ad8\u5c42\u91c7\u6837api\u4e3a\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u91c7\u6837\u7b97\u6cd5": 740, "\u9ec4\u5d1f": 750, "\u9ed8\u8ba4": 734, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [740, 741], "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u8fdb\u884c\u7279\u5f81\u5408\u5e76": 749, "\uac00": [777, 779, 780, 782, 792, 795, 796, 806, 809, 810, 813], "\uac00\uae4c\uc6b4": 777, "\uac00\ub2a5": 815, "\uac00\ub2a5\ub3c4": 814, "\uac00\ub2a5\ud558\ub2e4": [777, 782, 787, 793, 795, 797, 801, 803, 812, 813, 815], "\uac00\ub2a5\ud55c": [783, 793, 795, 815], "\uac00\uc774\ub4dc\ub294": 777, "\uac00\uc774\ub4dc\uc640": 801, "\uac00\uc7a5": [793, 804, 805, 809, 812, 815], "\uac00\uc815\ud558\uace0": [779, 814], "\uac00\uc815\ud558\ub294": 780, "\uac00\uc815\ud558\uba74": 812, "\uac00\uc815\ud558\uc790": 795, "\uac00\uc815\ud55c\ub2e4": [782, 783, 811, 812], "\uac00\uc838\ub2e4": 801, "\uac00\uc911\uce58": [782, 785, 787, 792], "\uac00\uc911\uce58\uace0": 794, "\uac00\uc911\uce58\ub294": [785, 794], "\uac00\uc911\uce58\ub4e4\uc744": 808, "\uac00\uc911\uce58\ub85c": 782, "\uac00\uc911\uce58\ub97c": [782, 785, 787, 794], "\uac00\uc911\uce58\uc640": 785, "\uac00\uc911\uce58\uc758": 782, "\uac00\uc911\uce58\uc774\ub2e4": 782, "\uac00\uc9c0": [779, 780, 782, 798, 800, 805, 814, 815], "\uac00\uc9c0\uace0": [805, 813, 815], "\uac01": [773, 778, 779, 780, 781, 782, 783, 785, 787, 789, 790, 792, 796, 798, 799, 801, 802, 803, 805, 806, 809, 810, 812, 813, 814, 815], "\uac01\uac01": [793, 795, 804], "\uac04\uacb0\ud558\uac8c": 793, "\uac04\ub2e8\ud558\uac8c": [778, 805, 812], "\uac04\ub2e8\ud558\uace0": 773, "\uac04\ub2e8\ud558\ub2e4": [782, 805, 812], "\uac04\ub2e8\ud55c": 784, "\uac04\ub2e8\ud788": 812, "\uac04\ub7b5\ud558\uac8c": 777, "\uac04\ub7b5\ud55c": 812, "\uac04\uc12d\uc774": 813, "\uac04\uc5d0": [781, 790], "\uac04\uc758": [785, 813, 814], "\uac12": 775, "\uac12\ub3c4": 782, "\uac12\ub4e4\uc744": 815, "\uac12\ub4e4\uc774\ub2e4": 782, "\uac12\ub4e4\uc778\ub370": 782, "\uac12\uc5d0": [800, 803, 806], "\uac12\uc73c\ub85c": [782, 806], "\uac12\uc740": [782, 796, 810, 812], "\uac12\uc744": [781, 782, 794, 809, 812], "\uac12\uc758": 781, "\uac12\uc774": 782, "\uac12\uc774\ub2e4": 782, "\uac12\uc778": 783, "\uac15\ub3c4\ub97c": 785, "\uac15\ub825\ud55c\uac00": 799, "\uac15\uc870\ud558\uae30": 777, "\uac15\ud558\uac8c": 773, "\uac16\uac70\ub098": 785, "\uac16\uac8c": 796, "\uac16\uace0": [776, 780, 781, 782, 787, 789, 790, 793, 801, 804, 812], "\uac16\uae30": [782, 796], "\uac16\ub294": [780, 781, 782, 784, 785, 786, 787, 789, 790, 796, 798, 799, 800, 804, 806, 812, 813], "\uac16\ub294\ub2e4": [779, 781, 782, 785, 787, 790, 793, 794, 801, 802, 811, 814], "\uac16\ub294\ub2e4\uace0": [780, 782], "\uac16\ub294\ub2e4\uba74": [782, 790, 800], "\uac16\ub294\ub370": [780, 782, 793, 806], "\uac16\ub3c4\ub85d": [780, 781, 782, 799], "\uac16\uc544\uc57c": 787, "\uac16\uc73c\uba70": 812, "\uac16\uc744": [784, 785, 787, 796, 810], "\uac16\uc74c": 804, "\uac16\uc9c0": [785, 809], "\uac19\uace0": 780, "\uac19\ub2e4": [774, 779, 780, 782, 783, 790, 793, 795, 796, 798, 799, 800, 801, 803, 805, 809, 812, 813, 814], "\uac19\ub3c4\ub85d": 782, "\uac19\uc544\uc57c": [783, 787, 789], "\uac19\uc544\uc57c\ub9cc": 780, "\uac19\uc740": [774, 779, 780, 781, 782, 783, 785, 787, 789, 790, 793, 794, 795, 799, 800, 801, 804, 805, 808, 809, 810, 811, 812, 813, 814, 815], "\uac19\uc744": 780, "\uac19\uc774": [777, 785, 792, 799, 800, 803, 804, 808, 810, 811, 812, 813, 814, 815], "\uac1c": 789, "\uac1c\uac00": 782, "\uac1c\uae4c\uc9c0": 789, "\uac1c\ub150\uc5d0": [800, 805], "\uac1c\ub150\uc740": [799, 800, 805], "\uac1c\ub150\uc744": 784, "\uac1c\ub97c": 780, "\uac1c\ub9cc": 780, "\uac1c\ubc1c": 780, "\uac1c\ubc1c\uc744": 789, "\uac1c\ubc1c\uc774": 801, "\uac1c\ubc1c\ud558\uace0": 780, "\uac1c\uc218": [774, 780, 783], "\uac1c\uc218\uac00": [782, 799], "\uac1c\uc218\uacfc": [780, 783], "\uac1c\uc218\ub294": [780, 783, 804], "\uac1c\uc218\ub97c": [780, 782], "\uac1c\uc218\uc5d0": [782, 801], "\uac1c\uc218\uc640": [780, 782, 787], "\uac1c\uc218\uc758": [780, 782], "\uac1c\uc22b\ub97c": 777, "\uac1c\uc758": [776, 780, 781, 782, 783, 803, 814], "\uac1c\uc778": 798, "\uac1d\uccb4": [778, 779, 786, 809], "\uac1d\uccb4\uac00": 780, "\uac1d\uccb4\ub294": 793, "\uac1d\uccb4\ub4e4\uc744": 780, "\uac1d\uccb4\ub4e4\uc758": 777, "\uac1d\uccb4\ub85c": [776, 782], "\uac1d\uccb4\ub97c": [780, 793, 800], "\uac1d\uccb4\ub9cc": 776, "\uac1d\uccb4\uc5d0": 780, "\uac1d\uccb4\uc640": 778, "\uac1d\uccb4\uc774\ub2e4": 793, "\uac2f\uc218\ub97c": 806, "\uac70\uafb8\ub85c": 798, "\uac70\ub4ed": 782, "\uac70\ub4ed\uc81c\uacf1\uc5d0": 803, "\uac70\uc758": [777, 800, 803, 805, 812], "\uac78\ub9ac\ub294": 802, "\uac78\uccd0\uc11c": [782, 790, 809], "\uac80\uc0c9\ud560": 781, "\uac80\uc99d": [780, 782, 802, 812, 815], "\uac80\uc99d\uacfc": 798, "\uac80\uc99d\uc744": 775, "\uac83": [800, 804, 805, 806], "\uac83\uacfc": [780, 782, 785, 800, 803, 807, 812], "\uac83\uacfc\ub294": 805, "\uac83\ub3c4": [775, 789, 793, 812], "\uac83\ub3e0": 801, "\uac83\ub4e4\uc5d0": 786, "\uac83\ub4e4\uc774\ub2e4": 782, "\uac83\ub9cc\uc774": 804, "\uac83\uc5d0": [782, 804], "\uac83\uc73c\ub85c": [782, 801, 805, 815], "\uac83\uc740": [777, 780, 787, 794, 799, 800, 802, 804, 805, 812, 813, 814, 815], "\uac83\uc744": [773, 774, 777, 778, 780, 781, 782, 790, 793, 795, 799, 803, 804, 813, 815], "\uac83\uc774": [776, 777, 778, 782, 795, 799, 800, 801, 802, 803, 805, 813, 814], "\uac83\uc774\uace0": [777, 780, 800], "\uac83\uc774\ub2e4": [774, 775, 777, 780, 782, 785, 787, 789, 790, 795, 798, 799, 800, 803, 804, 805, 809, 810, 812, 813, 814, 815], "\uac83\uc774\uc9c0\ub9cc": 806, "\uac83\uc778\ub2e4": 782, "\uac83\uc778\uc9c0": [799, 804], "\uac83\uc778\uc9c0\uc5d0": 804, "\uac83\uc77c": [803, 813], "\uac83\uc785\ub2c8\ub2e4": 791, "\uac83\uc9c0\ub9cc": 782, "\uac83\ucc98\ub7fc": [794, 800, 803], "\uacb0\uacfc": [788, 795, 799, 802, 810], "\uacb0\uacfc\uac00": 813, "\uacb0\uacfc\ub294": [782, 809, 810], "\uacb0\uacfc\ub4e4\uc740": 810, "\uacb0\uacfc\ub4e4\uc774": 782, "\uacb0\uacfc\ub77c\ub294": 805, "\uacb0\uacfc\ub85c": 800, "\uacb0\uacfc\ub85c\uc11c": 815, "\uacb0\uacfc\ub97c": [782, 784, 793, 795, 796, 799, 805, 810, 813], "\uacb0\uacfc\uc5d0": [780, 793], "\uacb0\uacfc\uc640": 793, "\uacb0\uacfc\uc758": 813, "\uacb0\uc815\ud55c\ub2e4": 808, "\uacb0\uc815\ud560": [781, 790], "\uacb0\ud569\ud558\uace0": 793, "\uacbd\ub85c\ub4e4\uc740": 783, "\uacbd\ub85c\ub85c": 783, "\uacbd\ub85c\ub97c": 783, "\uacbd\uc6b0": [775, 778, 780, 782, 783, 787, 790, 793, 797, 798, 799, 804, 806, 808, 809, 810, 813, 814], "\uacbd\uc6b0\uac00": [790, 812, 814], "\uacbd\uc6b0\ub294": 790, "\uacbd\uc6b0\ub3c4": [778, 799, 804, 811, 813], "\uacbd\uc6b0\ub4e4": 804, "\uacbd\uc6b0\ub77c\uba74": 793, "\uacbd\uc6b0\ub97c": 795, "\uacbd\uc6b0\uc5d0": [778, 780, 802, 809], "\uacbd\uc6b0\uc5d0\ub294": [777, 782, 789, 795, 798, 808], "\uacbd\uc6b0\uc5d0\ub9cc": 780, "\uacbd\uc6b0\uc640": [777, 790, 799, 813], "\uacbd\uc6b0\uc640\ub294": 813, "\uacc4\ub2e8\ub41c": 814, "\uacc4\uc0b0": [803, 806, 809, 812], "\uacc4\uc0b0\ub418\uc5b4\uc57c": [798, 805], "\uacc4\uc0b0\ub41c": 782, "\uacc4\uc0b0\uc740": 802, "\uacc4\uc0b0\uc744": [779, 781, 782], "\uacc4\uc0b0\uc774": 780, "\uacc4\uc0b0\uc801\uc778": 782, "\uacc4\uc0b0\ud558\uace0\uc790": 812, "\uacc4\uc0b0\ud558\uae30": [779, 799, 800, 803, 812], "\uacc4\uc0b0\ud558\uae30\ub97c": 805, "\uacc4\uc0b0\ud558\ub294": [799, 800, 802, 803, 812, 814, 815], "\uacc4\uc0b0\ud558\ub294\ub370": 805, "\uacc4\uc0b0\ud558\uba74": 812, "\uacc4\uc0b0\ud55c": 805, "\uacc4\uc0b0\ud55c\ub2e4": [800, 814], "\uacc4\uc0b0\ud55c\ub2e4\uace0": 812, "\uacc4\uc0b0\ud560": [799, 802, 805, 814, 815], "\uacc4\uc0b0\ud574\uc57c\ud558\uae30": 802, "\uacc4\uc0b0\ud574\uc57c\ud55c\ub2e4": 802, "\uacc4\uc18d": 806, "\uacc4\ud68d\uc774\ub77c\uba74": 811, "\uace0\uac1d": 785, "\uace0\uae09": [793, 798], "\uace0\ub824\ud558\uac8c": 782, "\uace0\ub824\ud558\uc790": 799, "\uace0\ub824\ud55c": 782, "\uace0\ub824\ud574\uc11c": 782, "\uace0\ub9bd": 799, "\uace0\ub9bd\ub41c": 799, "\uace0\uc720\uc758": 807, "\uace0\uc720\ud558\uac8c": [780, 790], "\uace0\uc720\ud558\ub2e4": 781, "\uace0\uc720\ud55c": [781, 782, 787, 789], "\uace0\uce58\uae30": 805, "\uacf1\ud558\uace0": [793, 806], "\uacf1\ud558\uae30": 794, "\uacf1\ud574\uc11c": 793, "\uacf3\uc5d0": [782, 786], "\uacf5\uac04\uacfc": 790, "\uacf5\ub3d9": 785, "\uacf5\ubc31": 782, "\uacf5\ubc31\uc73c\ub85c": 782, "\uacf5\uc2dd": 776, "\uacf5\uc2dd\uc5d0": 799, "\uacf5\uc2dd\uc73c\ub85c": [793, 810], "\uacf5\uc2dd\uc740": [799, 809], "\uacf5\ud1b5\uc801\uc778": 786, "\uacfc": [779, 780, 782, 783, 784, 785, 806, 808, 811], "\uacfc\uc815\uc5d0\uc11c": [782, 809], "\uacfc\uc81c": 814, "\uacfc\uc81c\ub4e4\uc758": 811, "\uacfc\uc81c\ub97c": 782, "\uad00\uacc4": [784, 785, 790, 796], "\uad00\uacc4\uac00": [785, 790, 810], "\uad00\uacc4\ub294": [785, 790, 809, 810], "\uad00\uacc4\ub2f9": [790, 809], "\uad00\uacc4\ub4e4\uc744": [790, 800], "\uad00\uacc4\ub4e4\uc758": 810, "\uad00\uacc4\ub85c": 810, "\uad00\uacc4\ub85c\ubd80\ud130": 810, "\uad00\uacc4\ub97c": [785, 790, 810, 813], "\uad00\uacc4\uc5d0": 810, "\uad00\uacc4\uc758": 796, "\uad00\uacc4\uc774\uace0": [796, 800], "\uad00\uacc4\uc778": 800, "\uad00\ub828": [783, 810], "\uad00\ub828\ub41c": [777, 783, 790, 793, 808, 814], "\uad00\ub828\uc5c6\uc774": 781, "\uad00\ub828\uc774": 801, "\uad00\ub9ac\ud558\ub294\ub370": 790, "\uad00\ub9ac\ud55c\ub2e4": 780, "\uad49\uc7a5\ud788": [778, 813], "\uad50\uccb4\ud558\ub294": 805, "\uad50\uccb4\ud55c\ub2e4": 804, "\uad6c\ub3d9\ud558\uace0": 780, "\uad6c\ub9e4\uc790": 785, "\uad6c\ubcc4\uc774": 790, "\uad6c\ubcc4\ud558\uace0": 780, "\uad6c\ubcc4\ud558\ub294": 782, "\uad6c\ubcc4\ud558\ub294\ub370": 780, "\uad6c\ubcc4\ud574\ubcfc": 813, "\uad6c\ubd84\ub418\ub294": 782, "\uad6c\ubd84\ub41c\ub2e4": 782, "\uad6c\ubd84\ub41c\ub2e4\uace0": 812, "\uad6c\ubd84\uc9c1\uae30": 800, "\uad6c\ubd84\ud55c\ub2e4\uba74": 781, "\uad6c\uc131": 782, "\uad6c\uc131\ub418\uc5b4": [807, 811], "\uad6c\uc131\ub418\uc5b4\uc57c": 782, "\uad6c\uc131\ub41c": [782, 785, 813, 814], "\uad6c\uc131\ub41c\ub2e4": [782, 785, 800, 805, 810, 815], "\uad6c\uc131\ud558\ub294": 782, "\uad6c\uc131\ud560": 782, "\uad6c\uc785": 785, "\uad6c\uc785\ud588\uc74c": 785, "\uad6c\uc870": 784, "\uad6c\uc870\ub294": 780, "\uad6c\uc870\ub85c": 784, "\uad6c\uc870\ub97c": [789, 813], "\uad6c\uc870\uc640": [779, 780, 782, 786, 788], "\uad6c\uc870\uc774\ub2e4": 785, "\uad6c\uccb4\uc801\uc778": 777, "\uad6c\ud558\uace0": 812, "\uad6c\ud558\uae30": [793, 815], "\uad6c\ud558\ub294\ub370": [800, 803], "\uad6c\ud574\uc9c4": 813, "\uad6c\ud604": [777, 805, 812, 815], "\uad6c\ud604\uacfc": [800, 803], "\uad6c\ud604\ub355\uc5d0": 807, "\uad6c\ud604\ub3c4": [800, 803], "\uad6c\ud604\ub418\uc5b4": [793, 809, 810, 815], "\uad6c\ud604\ub418\uc5b4\uc57c": 774, "\uad6c\ud604\ub41c\ub2e4": [809, 812], "\uad6c\ud604\ub41c\ub2e4\ub294": 802, "\uad6c\ud604\uc0c1\uc758": [800, 803], "\uad6c\ud604\uc5d0": 777, "\uad6c\ud604\uc5d0\uc11c": 805, "\uad6c\ud604\uc740": [777, 780, 795, 799, 804, 805, 813], "\uad6c\ud604\uc774": [777, 793, 800, 803, 804], "\uad6c\ud604\ud558\uace0": [773, 779, 780, 793, 798, 806, 813], "\uad6c\ud604\ud558\uae30": [778, 798, 805], "\uad6c\ud604\ud558\uae30\ub9cc": 799, "\uad6c\ud604\ud558\ub294": [773, 774, 802, 804, 805], "\uad6c\ud604\ud558\ub294\ub370": 774, "\uad6c\ud604\ud558\ub294\uc9c0": 792, "\uad6c\ud604\ud558\uba74": 795, "\uad6c\ud604\ud55c": [799, 804], "\uad6c\ud604\ud55c\ub2e4": [774, 775], "\uad6c\ud604\ud560": [775, 777, 778, 793, 815], "\uad6c\ud604\ud574\uc11c": 775, "\uad6c\ud604\ud574\uc57c": 777, "\uad8c\uc7a5\ud558\ub294\ub370": [774, 793], "\uad8c\uc7a5\ud55c\ub2e4": [773, 777, 778, 780, 795], "\uaddc\uce59\uc740": 793, "\uaddc\uce59\uc744": 813, "\uade0\ub4f1": 814, "\uade0\ub4f1\ud558\uac8c": 803, "\uade0\uc77c": 801, "\uade0\ud5dd\uc744": 782, "\uade0\ud615\uc744": 782, "\uade0\ud615\uc7a1\ud78c": 782, "\uadf8": [774, 780, 781, 782, 784, 786, 790, 792, 793, 795, 797, 798, 799, 802, 803, 805, 808, 809, 812, 813, 814, 815], "\uadf8\uac83\ub4e4\uc5d0": 790, "\uadf8\uac83\ub4e4\uc740": 780, "\uadf8\uac83\ub4e4\uc744": [780, 799], "\uadf8\uac83\ub4e4\uc758": [779, 782, 785, 786, 798, 800, 812], "\uadf8\uac83\uc740": 814, "\uadf8\uac83\uc758": [782, 805], "\uadf8\ub300\ub85c": [799, 803], "\uadf8\ub4e4\uc758": 785, "\uadf8\ub798\ub4e4": 813, "\uadf8\ub798\uc11c": [782, 786], "\uadf8\ub798\ud504": [774, 776, 779, 782, 783, 788, 791, 792, 796, 798, 799, 800, 802, 803, 805, 808, 810], "\uadf8\ub798\ud504\uac00": [780, 781, 782, 783, 785, 790, 799, 800, 804, 809, 812, 813, 815], "\uadf8\ub798\ud504\uac04\uc758": [800, 803], "\uadf8\ub798\ud504\ub098": 804, "\uadf8\ub798\ud504\ub294": [781, 782, 784, 785, 788, 790, 799, 800, 801, 804, 809, 813], "\uadf8\ub798\ud504\ub3c4": 799, "\uadf8\ub798\ud504\ub4e4": 777, "\uadf8\ub798\ud504\ub4e4\uacfc": 803, "\uadf8\ub798\ud504\ub4e4\ub85c": [779, 782], "\uadf8\ub798\ud504\ub4e4\uc5d0": [798, 803, 810, 811, 812, 813, 814], "\uadf8\ub798\ud504\ub4e4\uc5d0\uc11c": 814, "\uadf8\ub798\ud504\ub4e4\uc744": [781, 789, 813], "\uadf8\ub798\ud504\ub4e4\uc758": [777, 778, 782, 790, 800, 803, 805], "\uadf8\ub798\ud504\ub85c": [782, 783, 789, 799, 809, 813, 814], "\uadf8\ub798\ud504\ub85c\ubd80\ud130": [781, 786], "\uadf8\ub798\ud504\ub97c": [776, 777, 779, 780, 781, 782, 785, 786, 789, 799, 800, 801, 804, 805, 811, 812, 813, 814, 815], "\uadf8\ub798\ud504\ub9cc": 777, "\uadf8\ub798\ud504\ubcc4": 787, "\uadf8\ub798\ud504\uc5d0": [777, 780, 784, 788, 789, 791, 792, 797, 799, 802, 804, 805, 809, 811, 814, 815], "\uadf8\ub798\ud504\uc5d0\ub3c4": 799, "\uadf8\ub798\ud504\uc5d0\uc11c": [777, 782, 785, 796, 799, 810], "\uadf8\ub798\ud504\uc5d0\uc11c\ub294": 782, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": [792, 814], "\uadf8\ub798\ud504\uc640": [790, 799, 800, 801, 803, 804, 810, 811, 812, 813], "\uadf8\ub798\ud504\uc758": [777, 780, 781, 782, 784, 785, 787, 789, 790, 795, 799, 801, 804, 809, 810, 813], "\uadf8\ub798\ud504\uc774\uace0": 785, "\uadf8\ub798\ud504\uc774\uae30": 786, "\uadf8\ub798\ud504\uc774\ub2e4": [785, 796, 813, 814], "\uadf8\ub798\ud504\uc774\uc5b4\uc57c": 804, "\uadf8\ub798\ud504\uc774\uc790": 813, "\uadf8\ub798\ud504\uc778": [787, 798, 800], "\uadf8\ub798\ud504\uc77c": 790, "\uadf8\ub798\ud504\ud2d1": 781, "\uadf8\ub7a8\uc758": 790, "\uadf8\ub7a8\ud504\ub97c": 814, "\uadf8\ub7ec\uba74": 812, "\uadf8\ub7f0": 814, "\uadf8\ub807\uc9c0": [775, 800, 811], "\uadf8\ub8f9": 779, "\uadf8\ub8f9\uc73c\ub85c": 790, "\uadf8\ub9ac\uace0": [774, 777, 779, 780, 782, 783, 784, 785, 786, 790, 792, 793, 799, 800, 806, 807, 808, 811, 813, 815], "\uadf8\ub9bc\uc5d0\uc11c\uc640": 799, "\uadf8\ub9bc\uc740": [779, 781, 799], "\uadf8\ub9bc\uc758": 799, "\uadf8\uc5d0": [782, 796], "\uadf8\uc640": [785, 800], "\uae30\ub2a5": 786, "\uae30\ub2a5\uc740": 801, "\uae30\ub2a5\uc744": [782, 786, 793, 799], "\uae30\ubc18\uc73c\ub85c": [781, 783, 809], "\uae30\ubc18\uc758": [782, 814], "\uae30\ubc18\uc774\ub2e4": 799, "\uae30\ubc95\uc744": 812, "\uae30\ubc95\uc774\ub2e4": 794, "\uae30\ubcf8": [774, 780, 781, 782, 783, 793, 799], "\uae30\ubcf8\uc801\uc73c\ub85c": 804, "\uae30\ubcf8\uc801\uc778": [774, 776, 782, 784, 805], "\uae30\uc220\uc801\uc73c\ub85c\ub294": 799, "\uae30\uc5ec\ub97c": 807, "\uae30\uc900\uc758": 791, "\uae30\ud638\ub9cc\uc73c\ub85c": 782, "\uae38\uc774": 785, "\uae38\uc774\ub294": 780, "\uae40\ubb34\ud604": 791, "\uae54\ub054\ud55c": [773, 790], "\uae68\uc9d0": 780, "\uaf2d": [774, 782], "\ub05d\ub098\uba74": 782, "\ub098\ub204\uace0": [779, 780, 782], "\ub098\ub204\ub294": [780, 782, 795], "\ub098\ub208\ub2e4": 782, "\ub098\ub220\uc57c\ub9cc": 780, "\ub098\ub220\uc57c\ud55c\ub2e4": 780, "\ub098\ub220\uc838": 777, "\ub098\ub220\uc838\uc11c": [780, 781], "\ub098\ub220\uc9c4": 780, "\ub098\ub25c\ub2e4": [796, 808], "\ub098\ub25c\ub2e4\ub294": 804, "\ub098\ub260": 809, "\ub098\uba38\uc9c0": [779, 782, 813], "\ub098\uba38\uc9c0\ub294": 799, "\ub098\uba38\uc9c0\uc5d0\uc11c\ub294": [774, 779], "\ub098\uc544\uac00": [782, 788], "\ub098\uc5f4\ub418\uc5b4": 782, "\ub098\uc5f4\ud558\uace0": 782, "\ub098\uc5f4\ud558\uae30\ub294": 786, "\ub098\ud0c0\ub0b8\ub2e4": [785, 789], "\ub098\ud0c0\ub0b8\ub2e4\ub294": 813, "\ub0a8\uc544\uc788\ub2e4": 793, "\ub0ae\ub2e4\uace0": 795, "\ub0ae\ucd94\ub294": 795, "\ub0b4\ubcf4\ub0b4\ub294": 812, "\ub0b4\ubd80\uc801\uc73c\ub85c": [786, 793], "\ub0b4\ubd80\uc801\uc73c\ub85c\ub294": 780, "\ub0b4\uc5d0\uc11c": 782, "\ub0b4\uc6a9\uc73c\ub85c": 799, "\ub0b4\uc6a9\uc740": [777, 793], "\ub0b4\uc6a9\uc774": 786, "\ub0b8": 800, "\ub108\ubb34": [795, 801, 812], "\ub110\ub9ac": 815, "\ub118\uc744": 798, "\ub123\uae30": 801, "\ub124": [781, 782, 783], "\ub124\uac00\uc9c0": 781, "\ub124\uac00\ud2f0\ube0c": 814, "\ub124\uc784\uc2a4\ud328\uc774\uc2a4\uc5d0": 793, "\ub124\ud2b8\uc6cc\ud06c": [779, 782, 783, 791, 798, 804, 814], "\ub124\ud2b8\uc6cc\ud06c\uac00": [799, 815], "\ub124\ud2b8\uc6cc\ud06c\ub294": [785, 815], "\ub124\ud2b8\uc6cc\ud06c\ub4e4\uc5d0\uc11c": 796, "\ub124\ud2b8\uc6cc\ud06c\ub97c": [780, 805, 811, 812], "\ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c": 785, "\ub124\ud2b8\uc6cc\ud06c\uc758": 808, "\ub178\ub4dc": [779, 781, 784, 785, 786, 787, 790, 792, 793, 798, 799, 800, 803, 804, 809, 810, 811, 813, 814], "\ub178\ub4dc\uac00": [780, 782, 798, 805], "\ub178\ub4dc\uac04\uc758": 790, "\ub178\ub4dc\ub098": 796, "\ub178\ub4dc\ub294": [801, 815], "\ub178\ub4dc\ub4e4": [780, 782, 784, 798, 799, 800, 814], "\ub178\ub4dc\ub4e4\uac04\uc758": [784, 785], "\ub178\ub4dc\ub4e4\uacfc": [785, 787, 790, 799, 800, 801, 805], "\ub178\ub4dc\ub4e4\ub85c": 781, "\ub178\ub4dc\ub4e4\ub9cc\uc774": 799, "\ub178\ub4dc\ub4e4\uc5d0": [782, 799, 802, 805, 813, 814], "\ub178\ub4dc\ub4e4\uc5d0\uac8c": 793, "\ub178\ub4dc\ub4e4\uc5d0\uc11c": 799, "\ub178\ub4dc\ub4e4\uc640": 777, "\ub178\ub4dc\ub4e4\uc740": [781, 782, 785, 799, 805], "\ub178\ub4dc\ub4e4\uc744": [779, 782, 799, 803, 805, 809], "\ub178\ub4dc\ub4e4\uc758": [780, 782, 785, 795, 797, 798, 799, 802, 805, 809, 812, 813, 814, 815], "\ub178\ub4dc\ub4e4\uc774": [781, 785, 799, 800, 804], "\ub178\ub4dc\ub4e4\uc774\ub098": [782, 813], "\ub178\ub4dc\ub4e4\uc774\ub2e4": [784, 799, 809], "\ub178\ub4dc\ub85c": [795, 804, 805], "\ub178\ub4dc\ub97c": [781, 782, 785, 789, 793, 799, 803, 809, 815], "\ub178\ub4dc\ubcc4": 792, "\ub178\ub4dc\uc5d0": [782, 787, 789, 792, 803, 805, 808, 810, 812, 815], "\ub178\ub4dc\uc5d0\ub3c4": 799, "\ub178\ub4dc\uc5d0\uc11c": [777, 795], "\ub178\ub4dc\uc640": [779, 780, 781, 782, 784, 789, 790, 792, 793, 796, 799, 804, 809, 813], "\ub178\ub4dc\uc758": [777, 780, 782, 789, 790, 792, 793, 794, 797, 799, 800, 802, 804, 805, 808, 809, 812, 815], "\ub178\ub4e4\ub4e4": 799, "\ub178\ub4e4\ub4e4\uc744": 799, "\ub178\ub4e4\ub4e4\uc758": 802, "\ub178\ub4e4\uc5d0": 799, "\ub178\ub4e4\uc744": 799, "\ub178\ub4e4\uc758": [780, 782], "\ub178\uc774\uc988": 814, "\ub178\ud2b8": [782, 796, 799, 801, 812, 813], "\ub179\uc0c9": 799, "\ub179\uc0c9\uacfc": 799, "\ub179\uc0c9\uc73c\ub85c": 799, "\ub192\ub3c4\ub85d": 814, "\ub192\uc740": 795, "\ub193\uc774\uac8c": 809, "\ub208\uc5d0": 800, "\ub274\ub7f4": [791, 796, 798, 799, 804, 805, 808, 814], "\ub290\ub9b0": 802, "\ub294": [774, 776, 780, 782, 783, 785, 786, 789, 790, 792, 793, 796, 799, 800, 801, 803, 805, 806, 809, 810, 811, 813, 814, 815], "\ub298": 799, "\ub2a5\ub825\uc774": 793, "\ub2e4\ub8e8\uace0": 804, "\ub2e4\ub8e8\uae30": [775, 813], "\ub2e4\ub8e8\ub294": 801, "\ub2e4\ub8e8\ub294\ub370": 784, "\ub2e4\ub8e8\uc9c0": 786, "\ub2e4\ub8ec": 802, "\ub2e4\ub8ec\ub2e4": [779, 780, 798], "\ub2e4\ub8f0": [786, 789, 809, 810], "\ub2e4\ub974\uac8c": [777, 780, 805, 809], "\ub2e4\ub974\uae30": 799, "\ub2e4\ub974\uc9c0": [812, 813, 814], "\ub2e4\ub978": [780, 782, 783, 784, 785, 786, 788, 789, 790, 793, 795, 796, 800, 801, 805, 810, 811, 812, 813, 815], "\ub2e4\ub978\ub370": [802, 814], "\ub2e4\ub984\uc744": 776, "\ub2e4\uba74": 781, "\ub2e4\uc2dc": [780, 782, 790, 804], "\ub2e4\uc591\ud55c": [780, 786, 810, 814], "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0": 775, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 773, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294": 775, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c": 775, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c\ub2e4": 775, "\ub2e4\uc6b4\ub85c\ub4dc\ud574\uc11c": 776, "\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc": [782, 812, 814, 815], "\ub2e4\uc74c": [773, 775, 776, 777, 778, 780, 781, 782, 789, 790, 793, 799, 800, 801, 803, 804, 805, 806, 808, 812, 813, 814, 815], "\ub2e4\uc74c\uacfc": [774, 777, 779, 782, 783, 790, 792, 793, 794, 795, 796, 798, 799, 800, 803, 804, 805, 809, 810, 811, 812, 813, 814, 815], "\ub2e4\uc74c\uc5d0": 809, "\ub2e4\uc74c\uc5d0\ub294": 799, "\ub2e4\uc74c\uc73c\ub85c": 798, "\ub2e4\uc74c\uc73c\ub85c\ub294": [803, 808], "\ub2e4\uc74c\uc740": [782, 783, 803, 806, 814, 815], "\ub2e4\uc74c\uc744": [783, 810], "\ub2e4\uc911": [781, 785], "\ub2e4\uc911\uc758": 780, "\ub2e4\ucc28\uc6d0": 787, "\ub2e8": [778, 780, 782], "\ub2e8\uacc4\uac00": 780, "\ub2e8\uacc4\ub4e4\uc744": 808, "\ub2e8\uacc4\ub85c": 782, "\ub2e8\uacc4\ub97c": [782, 805], "\ub2e8\uacc4\ub9c8\ub2e4": 798, "\ub2e8\uacc4\uc5d0\uc11c": [792, 795, 809], "\ub2e8\ubc29\ud5a5": 804, "\ub2e8\uc21c\ud558\uac8c": [800, 804, 805, 813, 815], "\ub2e8\uc21c\ud55c": 805, "\ub2e8\uc21c\ud788": 799, "\ub2e8\uc704\ub85c": 813, "\ub2e8\uc77c": [777, 779, 780, 782, 793, 804, 810, 811, 812], "\ub2e8\uc885": 809, "\ub2e8\uc9c0": [790, 799, 804, 815], "\ub2e8\ud56d": 793, "\ub2e8\ud56d\uc758": 793, "\ub2ec\ub77c\uc9c4\ub2e4": [800, 808], "\ub2ec\uc131\ud558\uae30": 814, "\ub2ec\uc131\ud558\ub294": 795, "\ub2f4\uace0": [780, 782, 800, 805, 813], "\ub2f4\ub2f9\ud558\ub294": 796, "\ub2f4\ub2f9\ud55c\ub2e4": [780, 782, 799], "\ub300\ub7b5": 782, "\ub300\ubd80\ubd84": [780, 789, 806], "\ub300\ubd80\ubd84\uc758": [778, 813], "\ub300\uc0c1": 804, "\ub300\uc0c1\uc73c\ub85c": 804, "\ub300\uc2e0": [780, 790, 803], "\ub300\uc2e0\uc5d0": [800, 803], "\ub300\uce6d\uc801\uc778": 785, "\ub300\ud45c\ud558\ub3c4\ub85d": 805, "\ub300\ud55c": [773, 774, 775, 777, 778, 780, 781, 783, 784, 786, 787, 788, 789, 790, 791, 792, 793, 795, 796, 797, 799, 800, 802, 803, 804, 805, 806, 809, 810, 811, 813, 814, 815], "\ub300\ud574": [779, 805, 810], "\ub300\ud574\uc11c": [780, 782, 799, 802, 803, 805, 806, 808, 810, 811, 812, 813, 814, 815], "\ub300\ud578": 798, "\ub354": [777, 778, 780, 782, 788, 793, 795, 799, 802, 806, 815], "\ub354\ubd88\uc5b4": [782, 786, 810, 813], "\ub354\ubd88\uc5b4\uc11c": 781, "\ub354\ud55c\ub2e4": 795, "\ub354\ud560": 777, "\ub354\ud574\uc11c": [782, 793, 813], "\ub355\uc5d0": 813, "\ub370\uc774": 780, "\ub370\uc774\ud130": [774, 782, 786, 789, 790, 791, 793, 799, 806, 808, 811, 815], "\ub370\uc774\ud130\uac00": [777, 778, 783, 802, 813], "\ub370\uc774\ud130\ub294": [777, 782], "\ub370\uc774\ud130\ub3c4": [782, 786], "\ub370\uc774\ud130\ub85c": 781, "\ub370\uc774\ud130\ub85c\ub354\ub97c": 813, "\ub370\uc774\ud130\ub85c\uc11c": 780, "\ub370\uc774\ud130\ub97c": [773, 775, 778, 779, 780, 781, 782, 786, 788], "\ub370\uc774\ud130\ub9cc": 788, "\ub370\uc774\ud130\uc14b": [774, 776, 778, 806, 811, 815], "\ub370\uc774\ud130\uc14b\uacfc": 777, "\ub370\uc774\ud130\uc14b\ub4e4": 773, "\ub370\uc774\ud130\uc14b\ub4e4\uc740": 777, "\ub370\uc774\ud130\uc14b\ub4e4\uc744": 776, "\ub370\uc774\ud130\uc14b\uc5d0": [774, 776, 777, 778, 802], "\ub370\uc774\ud130\uc14b\uc740": [776, 777, 815], "\ub370\uc774\ud130\uc14b\uc744": [773, 774, 776, 777, 805, 811, 813], "\ub370\uc774\ud130\uc14b\uc758": [776, 777, 813], "\ub370\uc774\ud130\uc14b\uc774": 775, "\ub370\uc774\ud130\uc5d0": [780, 781, 782, 783, 800], "\ub370\uc774\ud130\uc640": [779, 780, 781, 782, 783, 786], "\ub370\uc774\ud130\uc758": [777, 780], "\ub370\uc774\ud14c\uc14b\uc744": 777, "\ub370\uc774\ud2b8\ub97c": 774, "\ub374\uc2a4": 780, "\ub3c4\uad6c\ub4e4\uc744": 779, "\ub3c4\uc6c0\uc774": 795, "\ub3c4\ucc29\uc9c0": 790, "\ub3c4\ucd9c\ud560": 812, "\ub3c5\ub9bd\uc801\uc778": 790, "\ub3d5\uae30": 782, "\ub3d5\ub294": 783, "\ub3d9\uae30\ud654": 780, "\ub3d9\uc2dc": 780, "\ub3d9\uc2dc\uc5d0": [779, 780], "\ub3d9\uc548": [782, 793], "\ub3d9\uc548\uc5d0": 780, "\ub3d9\uc77c\ud558\uac8c": 790, "\ub3d9\uc77c\ud558\uae30\uc5d0": 800, "\ub3d9\uc77c\ud558\ub2e4": [777, 782, 795, 799, 806, 807, 809, 814, 815], "\ub3d9\uc77c\ud558\ub3c4\ub85d": 800, "\ub3d9\uc77c\ud55c": [779, 780, 793], "\ub3d9\uc791\uc740": 809, "\ub3d9\uc791\ud558\uac8c": 804, "\ub3d9\uc791\ud558\ub294": [801, 812], "\ub3d9\uc791\ud558\ub294\uc9c0": [773, 804, 815], "\ub3d9\uc791\ud558\ub294\uc9c0\ub97c": 774, "\ub3d9\uc791\ud55c\ub2e4": [780, 801, 804], "\ub3d9\uc791\ud560": 799, "\ub3d9\uc791\ud568": 801, "\ub3d9\uc885": 785, "\ub418\uac8c": 779, "\ub418\uace0": 809, "\ub418\uae30": 809, "\ub418\uae30\ub3c4": 796, "\ub418\ub294": 799, "\ub418\ub3c4\ub85d": 805, "\ub418\ubc84\ub9bc": 806, "\ub41c\ub2e4": [777, 785, 790, 795, 796, 799, 800, 809, 812, 813, 814, 815], "\ub41c\ub2e4\ub294": 805, "\ub420": [782, 783, 799], "\ub450": [780, 782, 783, 785, 787, 788, 790, 795, 796, 800, 803, 806, 812, 813, 814], "\ub450\uac00\uc9c0": [780, 781, 790, 801, 810], "\ub450\uac1c": 804, "\ub450\uac1c\ub85c": 795, "\ub450\uac1c\uc758": [785, 786, 793, 805], "\ub450\ubc88\uc9f8": [782, 799, 800], "\ub450\ubc88\uc9f8\ub294": [800, 809], "\ub450\ubc88\uc9f8\ub85c": 813, "\ub458\uc740": 812, "\ub4a4\uc5d0": 783, "\ub4e4": [799, 813], "\ub4e4\uaca0\ub2e4": 777, "\ub4e4\ub9cc": 799, "\ub4e4\uba74": [780, 793, 794, 803, 812, 813, 814], "\ub4e4\uc5b4": [778, 780, 781, 782, 784, 785, 787, 793, 799, 801, 804, 805, 812, 813, 814, 815], "\ub4e4\uc5b4\uac08": [801, 811], "\ub4e4\uc5b4\ubcf4\uc790": [795, 799, 804, 805], "\ub4e4\uc744": [793, 800], "\ub4e4\uc758": [792, 800, 803, 805], "\ub4e4\uc790": 804, "\ub4ec\ub140": 790, "\ub4f1": 774, "\ub4f1\uacfc": 808, "\ub4f1\ub85d": 808, "\ub4f1\ub85d\uacfc": 807, "\ub4f1\ub85d\ud55c\ub2e4": 808, "\ub4f1\uc740": 782, "\ub4f1\uc758": 815, "\ub4f1\uc774": [793, 813], "\ub4f1\uc7a5\ud55c\ub2e4\ub294": 799, "\ub514\ub809\ud1a0\ub9ac": [775, 783], "\ub514\ub809\ud1a0\ub9ac\ub85c": [775, 783], "\ub514\ub809\ud1a0\ub9ac\ub97c": [782, 783], "\ub514\ub809\ud1a0\ub9ac\uc5d0": [775, 777, 782], "\ub514\ub809\ud1a0\ub9ac\uc640": 782, "\ub514\ub809\ud1a0\ub9ac\uc758": 782, "\ub514\ubc14\uc774\uc2a4": 789, "\ub514\ubc14\uc774\uc2a4\ub85c": 801, "\ub514\uc2a4\ud06c\ub85c": 778, "\ub514\uc2a4\ud06c\uc5d0": [774, 775, 778, 786], "\ub514\uc790\uc778\uc744": 780, "\ub525\ub7ec\ub2dd": 815, "\ub525\ub7ec\ub2dd\uc5d0\uc11c": 813, "\ub530\ub77c": [782, 789, 807, 808, 809, 814, 815], "\ub530\ub77c\uc11c": [777, 780, 781, 782, 783, 785, 786, 788, 799, 800, 801, 803, 804, 806, 809], "\ub530\ub974\uace0": 780, "\ub530\ub974\uba74": 799, "\ub530\ub978\ub2e4": [773, 787], "\ub54c": [779, 780, 781, 782, 790, 793, 795, 800, 802, 803, 805, 808, 810, 812, 813, 814], "\ub54c\uae4c\uc9c0": 798, "\ub54c\ub294": [781, 790, 806], "\ub54c\ub85c\ub294": [795, 800, 811], "\ub54c\ub860": 812, "\ub54c\ubb38\uc5d0": [777, 778, 780, 785, 790, 795, 799, 802, 803, 806, 809, 812, 813, 814], "\ub54c\ubb38\uc774\ub2e4": [773, 774, 780, 782, 786, 789, 793, 795, 799, 800, 801, 802, 814], "\ub54c\uc758": 806, "\ub5a0\uc62c\ub824": 799, "\ub610\ub294": [774, 775, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 793, 794, 796, 798, 799, 804, 808, 810, 811, 813, 814, 815], "\ub610\ud55c": [774, 777, 780, 782, 783, 789, 798, 805, 812, 815], "\ub611\uac19\uc774": 813, "\ub73b": 814, "\ub744\ub294": 800, "\ub77c\uace0": [789, 793, 799, 805, 812, 814], "\ub77c\ub294": [777, 781, 782, 793], "\ub77c\uc774\ube0c\ub7ec\ub9ac": 786, "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4": 786, "\ub77c\uc778": 787, "\ub77c\uc778\uc774\ub2e4": 779, "\ub798\ud551\ud558\uba74": 806, "\ub79c\ub364": 782, "\ub7ec\ud37c\ub7f0\uc2a4": 786, "\ub7f0\uce58": 783, "\ub7f0\uce6d\ud558\uae30": 779, "\ub808\uc774\ube14": [774, 777, 786, 813], "\ub808\uc774\ube14\uacfc": 815, "\ub808\uc774\ube14\ub4e4\uc758": 777, "\ub808\uc774\ube14\ub85c": 812, "\ub808\uc774\ube14\ub9cc": 805, "\ub808\uc774\ube14\uc740": [805, 815], "\ub808\uc774\ube14\uc744": [778, 790, 805, 812], "\ub808\uc774\ube14\uc774": [782, 802], "\ub808\uc774\uc544\uc6c3\uc744": 787, "\ub808\uc774\uc5b4": [795, 802, 805, 806, 812, 814, 815], "\ub808\uc774\uc5b4\uac00": 780, "\ub808\uc774\uc5b4\ub4e4": 802, "\ub808\uc774\uc5b4\ub4e4\uc744": 802, "\ub808\uc774\uc5b4\ub85c\ubd80\ud130": 799, "\ub808\uc774\uc5b4\ub97c": 799, "\ub808\uc774\uc5b4\ubd80\ud130": 802, "\ub808\uc774\uc5b4\uc5d0": [799, 800, 802, 805, 813], "\ub808\uc774\uc5b4\uc5d0\uc11c": [798, 805], "\ub808\uc774\uc5b4\uc758": [795, 798, 799, 802], "\ub808\uc774\uc774\ubcc4\ub85c": 802, "\ub85c": [781, 783, 784, 786, 789, 792, 804, 805, 806, 809, 810, 815], "\ub85c\ub354": 780, "\ub85c\ub354\uac00": [800, 805], "\ub85c\ub354\ub294": 803, "\ub85c\ub354\ub85c\ubd80\ud130": 800, "\ub85c\ub354\ub97c": [780, 799, 800, 803], "\ub85c\ub354\uc5d0": 803, "\ub85c\ub354\uc5d0\uc11c": 800, "\ub85c\ub4dc\ub420": [780, 781, 805], "\ub85c\ub4dc\uc548\ub2e4": 782, "\ub85c\ub4dc\uc5d0": 774, "\ub85c\ub4dc\ud558\uace0": [780, 782], "\ub85c\ub4dc\ud558\uae30": [773, 777], "\ub85c\ub4dc\ud558\ub294": 805, "\ub85c\ub4dc\ud558\uba74": 805, "\ub85c\ub4dc\ud55c\ub2e4": [780, 805], "\ub85c\ub4dc\ud55c\ub2e4\ub294": 805, "\ub85c\ub529": [773, 774, 776], "\ub85c\ub529\ub420": 782, "\ub85c\ub529\uc744": 774, "\ub85c\ub529\ud558\uace0": [773, 774, 786], "\ub85c\ub529\ud558\uae30": 782, "\ub85c\ub529\ud558\ub294": [776, 786, 801], "\ub85c\ub529\ud55c\ub2e4": 805, "\ub85c\ub529\ud568": 778, "\ub85c\ubd80\ud130": [780, 781, 786, 799], "\ub85c\uc11c": 792, "\ub85c\uc758": 789, "\ub85c\uc9c1\uc73c\ub85c": 810, "\ub85c\uceec": [774, 775, 778, 779, 780, 782, 783], "\ub8e8\ud504": 785, "\ub8f9\uacfc": [779, 800, 802, 814, 815], "\ub8f9\uc740": [800, 803, 805, 812, 813, 814, 815], "\ub8f9\uc744": [782, 802, 812, 815], "\ub8f9\uc774\ub791": 805, "\ub97c": [774, 775, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 809, 810, 811, 812, 813, 814, 815], "\ub9ac\uadf8\ub798\uc158": [777, 811], "\ub9ac\uadf8\ub808\uc158": [800, 811, 814, 815], "\ub9ac\uadf8\ub808\uc158\uacfc": 800, "\ub9ac\uadf8\ub808\uc158\uc5d0\uc11c": 803, "\ub9ac\uadf8\ub808\uc158\uc744": [800, 803, 812], "\ub9ac\ub4c0\uc154": 796, "\ub9ac\ub4dc\uc544\uc6c3\uc740": 813, "\ub9ac\uc14b": 808, "\ub9ac\uc18c\uc2a4\ub4e4\uc758": 779, "\ub9ac\uc18c\uc2a4\ub97c": 802, "\ub9ac\uc2a4\ud2b8": [803, 805], "\ub9ac\uc2a4\ud2b8\ub4e4\uc5d0": 810, "\ub9ac\uc2a4\ud2b8\ub85c": 777, "\ub9ac\uc2a4\ud2b8\ub85c\ubd80\ud130": 813, "\ub9ac\uc2a4\ud2b8\ub97c": [799, 800, 805, 813], "\ub9ac\uc2a4\ud2b8\uc5d0": 813, "\ub9ac\uc2a4\ud2b8\uc5d0\uc11c": 800, "\ub9ac\uc2a4\ud2b8\uc640": [777, 778, 800], "\ub9ac\uc2a4\ud2b8\uc758": 809, "\ub9ac\uc2a4\ud2b8\uc774\ub2e4": 810, "\ub9ac\ud134\ub418\uc9c0": 780, "\ub9ac\ud134\ub41c": [799, 815], "\ub9ac\ud134\ub41c\ub2e4": [782, 800], "\ub9ac\ud134\ud558\uae30": 812, "\ub9ac\ud134\ud558\ub3c4\ub85d": 777, "\ub9ac\ud134\ud55c\ub2e4": [780, 782, 800, 812, 815], "\ub9ac\ud134\ud55c\ub2e4\ub294": 780, "\ub9ac\ud134\ud574\uc57c": 803, "\ub9ac\ud134\ud574\uc57c\ud55c\ub2e4": 803, "\ub9b4\ub9ac\uc988\uc5d0\uc11c": 781, "\ub9c1\ud06c": [780, 798, 811, 813, 815], "\ub9c1\ud06c\ub97c": 777, "\ub9c8\ub2e4": [780, 803], "\ub9c8\uc2a4\ud06c": 777, "\ub9c8\uc2a4\ud06c\ub294": 777, "\ub9c8\uc2a4\ud06c\ub4e4\uc744": 777, "\ub9c8\uc2a4\ud06c\ub85c": 812, "\ub9c8\uc2a4\ud06c\ub85c\uc11c": 815, "\ub9c8\uc2a4\ud06c\ub97c": 777, "\ub9c8\uc2a4\ud130": 783, "\ub9c8\uc9c0\ub9c9": [792, 793, 795, 799, 800, 805, 809], "\ub9c8\uc9c0\ub9c9\uc5d0\ub294": 808, "\ub9c8\uc9c0\ub9c9\uc73c\ub85c": [793, 798, 810, 813], "\ub9c8\uce5c": 777, "\ub9cc": 801, "\ub9cc\ub4dc\ub294": [773, 777, 780, 782, 786, 789, 790, 792, 799, 800, 804, 805, 807, 814], "\ub9cc\ub4dc\ub294\ub370": [786, 807], "\ub9cc\ub4e0": [782, 797, 803, 811, 812], "\ub9cc\ub4e0\ub2e4": [782, 786, 800, 805, 812, 813], "\ub9cc\ub4e4": [780, 781, 782, 786, 788, 799, 800, 808, 809, 813], "\ub9cc\ub4e4\uac8c": 799, "\ub9cc\ub4e4\uace0": [780, 789, 790, 804, 814], "\ub9cc\ub4e4\uace0\uc790": [798, 812], "\ub9cc\ub4e4\uae30": [779, 781, 782, 789, 791, 793, 802, 804, 811, 815], "\ub9cc\ub4e4\uba74": 786, "\ub9cc\ub4e4\uc5b4": [780, 800], "\ub9cc\ub4e4\uc5b4\ub0b4\uae30": 813, "\ub9cc\ub4e4\uc5b4\ub0b4\ub294": 799, "\ub9cc\ub4e4\uc5b4\ub0b8\ub2e4": [803, 813], "\ub9cc\ub4e4\uc5b4\ub0bc": 809, "\ub9cc\ub4e4\uc5b4\uc11c": [795, 813], "\ub9cc\ub4e4\uc5b4\uc57c": [780, 782, 789], "\ub9cc\ub4e4\uc5b4\uc57c\ud560": 799, "\ub9cc\ub4e4\uc5b4\uc84c\ub2e4\uba74": 799, "\ub9cc\ub4e4\uc5b4\uc9c0\uba74": [780, 782], "\ub9cc\ub4e4\uc5b4\uc9c4\ub2e4": [780, 785, 787], "\ub9cc\ub4e4\uc5b4\uc9c8": [782, 800], "\ub9cc\ub4e4\uc5c8\ub2e4": 777, "\ub9cc\ub4e4\uc5c8\ub2e4\uba74": 812, "\ub9cc\ub4e4\uc790": 775, "\ub9cc\uc57d": [775, 777, 780, 781, 782, 786, 790, 793, 795, 798, 799, 800, 801, 803, 805, 806, 811, 815], "\ub9cc\uc744": [781, 815], "\ub9cc\uc871\ud558\uc9c0": 790, "\ub9cc\uc871\ud574\uc57c": 804, "\ub9ce\uc740": [777, 780, 782, 795, 799, 801, 802, 813], "\ub9ce\uc774": [773, 774, 795, 807, 813, 814], "\ub9d0\ud558\uc790\uba74": 780, "\ub9de\uac8c": 802, "\ub9de\ub3c4\ub85d": [782, 805], "\ub9de\ucd94\uac83\uc744": 782, "\ub9de\ucd94\ub294": 782, "\ub9de\ucd98\ub2e4": 782, "\ub9de\ucd9c": 782, "\ub9e4": [780, 805], "\ub9e4\ub274\uc5bc\uc758": 786, "\ub9e4\ubc88": 805, "\ub9e4\uc6b0": [795, 805], "\ub9e4\ud551": 800, "\ub9e4\ud551\uc740": 799, "\ub9e4\ud551\uc744": [782, 800], "\ub9e4\ud551\uc774\ub2e4": 782, "\ub9e4\ud551\ud558\ub294": 810, "\ub9f4\ubc84": 793, "\ub9f4\ubc84\ub97c": 793, "\uba04\uc57d": 782, "\uba38\uc2e0": 783, "\uba38\uc2e0\ub4e4\uc5d0": [780, 782], "\uba38\uc2e0\ub4e4\uc758": [780, 783], "\uba38\uc2e0\ub7ec\ub2dd": 777, "\uba38\uc2e0\ub7ec\ub2dd\uc5d0\ub294": 777, "\uba38\uc2e0\uc5d0": [781, 782, 783], "\uba38\uc2e0\uc5d0\uc11c": [780, 782, 783], "\uba38\uc2e0\uc740": 783, "\uba38\uc2e0\uc744": 783, "\uba38\uc2e0\uc758": [780, 783], "\uba38\uc2e0\uc774": [780, 783], "\uba3c\uc800": [780, 799], "\uba40\ud2f0": [777, 801, 805, 812, 814, 815], "\uba4b\uc9c4": 813, "\uba54\ub274\uc5bc\uc5d0": 786, "\uba54\ubaa8\ub9ac": [795, 801, 802, 806], "\uba54\ubaa8\ub9ac\uac00": [798, 806], "\uba54\ubaa8\ub9ac\ub098": 805, "\uba54\ubaa8\ub9ac\ub97c": [795, 801, 806], "\uba54\ubaa8\ub9ac\uc5d0": [801, 811], "\uba54\ubaa8\ub9ac\uc640": 802, "\uba54\uc18c\ub4dc": 799, "\uba54\uc18c\ub4dc\ub294": 799, "\uba54\uc18c\ub4dc\ub85c": [802, 812], "\uba54\uc18c\ub4dc\ub97c": [789, 799, 812], "\uba54\uc18c\ub4dc\uc5d0": 812, "\uba54\uc18c\uc2a4\ub4e4": 799, "\uba54\uc2dc\uc9c0": [792, 802, 804, 805, 807, 810, 811, 813, 815], "\uba54\uc2dc\uc9c0\ub4e4": 793, "\uba54\uc2dc\uc9c0\ub4e4\uc5b4": 802, "\uba54\uc2dc\uc9c0\ub4e4\uc744": [792, 793], "\uba54\uc2dc\uc9c0\ub4e4\uc774": 808, "\uba54\uc2dc\uc9c0\ub97c": [792, 795, 799, 805, 815], "\uba54\uc2dc\uc9c0\uc758": 795, "\uba54\uc9c0\uc2dc": [791, 796, 811, 815], "\uba54\ucf13\ud50c\ub798\uc774\uc2a4\ub97c": 785, "\uba54\ud0c0": 782, "\uba54\ud0c0\uadf8\ub798\ud504": 790, "\uba54\ud0c0\uadf8\ub798\ud504\uc758": 790, "\uba54\ud0c0\ub370\uc774\ud130\ub97c": 780, "\uba54\ud551\uc744": 782, "\uba64\uba38\ub97c": 799, "\uba85\ub839": 782, "\uba85\ub839\uc73c\ub85c": 776, "\uba85\ub839\uc740": 782, "\uba85\ub839\uc744": 782, "\uba85\ub839\uc758": 782, "\uba85\ub839\uc774": 782, "\uba85\ub839\ud589\uc774\ub098": 780, "\uba85\uc2dc\ub41c": [783, 809], "\uba85\uc2dc\ub41c\ub2e4\uba74": 782, "\uba85\uc2dc\uc801\uc73c\ub85c": 780, "\uba85\uc2dc\uc801\uc778": 789, "\uba85\uc2dc\ud558\uace0": 790, "\uba85\uc2dc\ud558\uae30\ub9cc": 812, "\uba85\uc2dc\ud558\ub294": 782, "\uba85\uc2dc\ud558\uc9c0": 782, "\uba85\uc2dc\ud55c\ub2e4": 782, "\uba85\uc2dc\ud560": [790, 800], "\uba85\uc2dc\ud574\uc57c": [781, 809], "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4": 790, "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4\ub294": 805, "\uba85\ud655\ud558\uac8c": 790, "\uba87": [779, 780, 782, 798, 800, 804, 805, 814, 815], "\uba87\uac00\uc9c0": [784, 814], "\uba87\uac1c\uc758": 804, "\ubaa8\ub378": [777, 779, 780, 798, 802, 809, 812], "\ubaa8\ub378\uacfc": 814, "\ubaa8\ub378\uacfc\ub294": 814, "\ubaa8\ub378\ub85c": [780, 812], "\ubaa8\ub378\ub9c1": [790, 796], "\ubaa8\ub378\ub9c1\uc5d0": 785, "\ubaa8\ub378\ub9c1\uc5d0\uc11c": [790, 794], "\ubaa8\ub378\ub9c1\ud558\ub294\ub370": 785, "\ubaa8\ub378\uc5d0": [777, 803, 812, 813, 815], "\ubaa8\ub378\uc5d0\uc11c\ub294": 815, "\ubaa8\ub378\uc740": [800, 803, 812, 814, 815], "\ubaa8\ub378\uc744": [780, 798, 802, 806, 807, 812, 813, 814, 815], "\ubaa8\ub378\uc758": [780, 798, 806, 813], "\ubaa8\ub378\uc774": [780, 801, 813], "\ubaa8\ub450": [782, 785, 790, 793, 799, 801, 802, 809, 813, 814], "\ubaa8\ub450\ub97c": 803, "\ubaa8\ub450\uc5d0": 799, "\ubaa8\ub4c8": [779, 791, 798, 805, 811, 815], "\ubaa8\ub4c8\uacfc": [809, 812], "\ubaa8\ub4c8\ub3c4": 780, "\ubaa8\ub4c8\ub4e4\uc740": [804, 805, 808], "\ubaa8\ub4c8\ub4e4\uc744": 815, "\ubaa8\ub4c8\ub9cc\uc744": 805, "\ubaa8\ub4c8\uc5d0": [809, 810, 813], "\ubaa8\ub4c8\uc5d0\uc11c": [800, 807, 809], "\ubaa8\ub4c8\uc740": [807, 808, 809, 812], "\ubaa8\ub4c8\uc744": [780, 798, 804, 805, 806, 807, 810, 811, 812, 815], "\ubaa8\ub4c8\uc758": [780, 802, 804, 807, 808, 812, 815], "\ubaa8\ub4c8\uc774": [780, 804, 805, 810, 815], "\ubaa8\ub4c8\uc774\uace0": 810, "\ubaa8\ub4c8\uc774\ub2e4": 808, "\ubaa8\ub4c8\uc778": 815, "\ubaa8\ub4c8\ucc98\ub7fc": 810, "\ubaa8\ub4dc\ub294": 780, "\ubaa8\ub4dc\ub85c": 780, "\ubaa8\ub4dc\uc5d0\uc11c\ub294": 780, "\ubaa8\ub4dc\uc640": 780, "\ubaa8\ub4e0": [779, 780, 781, 782, 783, 785, 786, 788, 789, 790, 793, 796, 798, 799, 801, 802, 803, 804, 805, 809, 812, 813, 815], "\ubaa8\uc544\uc11c": 790, "\ubaa8\uc74c\uc774\ub2e4": 776, "\ubaa9\ub85d": 813, "\ubaa9\ub85d\uc5d0": 813, "\ubaa9\ub85d\uc740": [793, 800, 805, 815], "\ubaa9\ub85d\uc744": [800, 805], "\ubaa9\ub85d\uc774": 799, "\ubaa9\uc801": 810, "\ubaa9\uc801\uc73c\ub85c": [790, 802], "\ubaa9\uc801\uc73c\ub85c\ub294": 802, "\ubaa9\uc801\uc740": 774, "\ubaa9\uc801\uc9c0": [782, 793, 799, 803, 805, 808, 809, 810], "\ubaa9\uc801\uc9c0\uac00": 799, "\ubaa9\uc801\uc9c0\uc640": 790, "\ubaa9\uc801\uc9c0\uc778": 799, "\ubb38\ubc95\uc744": 790, "\ubb38\uc790": 790, "\ubb38\uc790\ub4e4\uacfc": 782, "\ubb38\uc790\ub85c": 782, "\ubb38\uc790\ub9cc\ub4e4": 790, "\ubb38\uc790\uc5f4": 790, "\ubb38\uc790\uc5f4\uc774\ub2e4": [793, 796], "\ubb38\uc7a5\uc73c\ub85c": 812, "\ubb38\uc81c\ub294": 813, "\ubb38\uc81c\ub4e4\uacfc": 813, "\ubb38\uc81c\ub97c": [806, 809], "\ubb38\uc81c\uc640": 813, "\ubb38\uc81c\uc778": 812, "\ubbf8\ub2c8": [777, 779, 780, 797, 798, 802, 809, 813], "\ubbf8\ub2c8\ubc30\uce58": [780, 781, 803], "\ubbf8\ub2c8\ubc30\uce58\ub97c": 802, "\ubbf8\ub2c8\ubc30\uce58\ub9cc": 802, "\ubbf8\ub2c8\ubc30\uce58\uc5d0": [803, 805], "\ubbf8\ub2c8\ubc30\uce58\uc5d0\uc11c": 800, "\ubbf8\ub2c8\ubc30\uce58\uc640": 802, "\ubbf8\ub2c8\ubc30\uce58\uc758": [800, 802], "\ubbf8\ub798\uc758": 812, "\ubbf8\ub9ac": 815, "\ubbf8\ub9cc\uc758": 801, "\ubc0f": [777, 778, 780, 781, 784, 786, 787, 789, 790, 791, 792, 798, 799, 802, 806, 809, 811, 813, 815], "\ubc11\uc904": 782, "\ubc14\uafb8\uace0": 781, "\ubc14\uafb8\uae30\ub9cc": 799, "\ubc14\uafb8\ub294": 804, "\ubc14\uafb8\uba74": 806, "\ubc14\ub010": 777, "\ubc14\ub014": 781, "\ubc16\uc5d0\uc11c": [774, 793], "\ubc18\uacfc": 795, "\ubc18\ub300": 800, "\ubc18\ub300\ub85c": 785, "\ubc18\ub300\uc758": 782, "\ubc18\ub4dc\uc2dc": [793, 804], "\ubc18\uba74": 802, "\ubc18\uba74\uc5d0": 795, "\ubc18\ubcf5": 798, "\ubc18\ubcf5\ub41c\ub2e4": 798, "\ubc18\ubcf5\uc801\uc73c\ub85c": 814, "\ubc18\ubcf5\ud574\uc11c": 815, "\ubc18\uc774": 795, "\ubc18\ud658\ud558\ub294": 805, "\ubc1b\uace0": [780, 810, 815], "\ubc1b\ub294": [803, 809], "\ubc1b\ub294\ub2e4": [782, 789, 796, 805, 809, 810], "\ubc1b\ub294\ub2e4\ub294": [800, 803, 805], "\ubc1b\ub294\ub370": 793, "\ubc1b\uc544\ub4e4\uc778\ub2e4": 788, "\ubc1b\uc544\uc11c": 803, "\ubc1b\uc544\uc57c\ud558\uace0": 803, "\ubc1b\uc744": 805, "\ubc1c\ub824\uc640\uc11c": 813, "\ubc1c\uc0dd\uc2dc\ud0a4\ub294\ub370": 799, "\ubc1c\uc0dd\ud560": [780, 802], "\ubc25\ubc99\uc73c\ub85c": 794, "\ubc29\ubc95": [780, 789, 792, 809], "\ubc29\ubc95\uacfc": [799, 800, 805, 811], "\ubc29\ubc95\ub3c4": 798, "\ubc29\ubc95\ub4e4\uc5d0": 786, "\ubc29\ubc95\ub4e4\uc744": [789, 799], "\ubc29\ubc95\uc5d0": [777, 795, 811], "\ubc29\ubc95\uc73c\ub85c": [780, 782, 797, 801], "\ubc29\ubc95\uc73c\ub85c\ub294": 788, "\ubc29\ubc95\uc740": [777, 782, 786, 790, 795, 798, 802, 806, 812, 813, 814, 815], "\ubc29\ubc95\uc744": [773, 774, 776, 777, 782, 792, 793, 799, 802, 803, 806, 807, 812, 815], "\ubc29\ubc95\uc774\ub2e4": [777, 797, 801], "\ubc29\uc2dd\uc73c\ub85c": [792, 799], "\ubc29\uc2dd\uc744": 779, "\ubc29\uc2dd\uc758": 807, "\ubc29\uc9c0\ud558\ub294": 780, "\ubc29\ud5a5\uc131": [785, 799], "\ubc29\ud5a5\uc131\uc5d0": 785, "\ubc29\ud5a5\uc131\uc744": 785, "\ubc29\ud5a5\uc131\uc774": 785, "\ubc29\ud5a5\uc744": 789, "\ubc29\ud5a5\uc774": 786, "\ubc30\uc5f4": [790, 800, 803, 805], "\ubc30\uc5f4\uacfc": 803, "\ubc30\uc5f4\uc758": 803, "\ubc30\uc81c\ud558\uace0\uc790": 800, "\ubc30\uc81c\ud558\ub294": 800, "\ubc30\uce58": [777, 779, 780, 797, 798, 802, 809], "\ubc30\uce58\ub4e4\uc744": 780, "\ubc30\uce58\ub4e4\uc758": 805, "\ubc30\uce58\ub85c\ubd80\ud130": 800, "\ubc30\uce58\ub97c": [779, 780, 793, 798, 813], "\ubc30\uce58\uc548\uc5d0": 800, "\ubc30\uce58\uc5d0": [793, 813], "\ubc30\uce58\uc5d0\uc11c": 798, "\ubc31\uc564\ub4dc\ub9cc": 779, "\ubc31\uc5d4\ub4dc": [786, 807], "\ubc31\uc5d4\ub4dc\ub85c": [807, 811], "\ubc31\uc5d4\ub4dc\ub97c": 807, "\ubc84\ub9b0\ub2e4\ub294": 813, "\ubc84\uc804": 791, "\ubc84\uc804\ub3c4": [804, 813], "\ubc84\uc804\uc758": 782, "\ubc84\uc804\uc774\ub2e4": 812, "\ubc84\ud2f1\uc2a4\ub4e4": 785, "\ubc88": 815, "\ubc88\uc5ed\ud55c": 791, "\ubc88\ud638": 789, "\ubc88\ud638\uac00": [783, 789], "\ubc88\ud638\ub294": 789, "\ubc88\ud638\ub3c4": 783, "\ubc88\ud638\ub97c": 789, "\ubc94\uc704\ub3c4": 782, "\ubc94\uc704\ub97c": 782, "\ubc94\uc704\uc5d0": 777, "\ubc94\uc704\uc758": 815, "\ubc94\uc8fc\ud615": 812, "\ubc95\uc744": 798, "\ubc95\uce59\uc758": 782, "\ubca0\uce58\ub4e4\uc5d0": 800, "\ubca1\ud130": [787, 812], "\ubca1\ud130\ub294": 782, "\ubca1\ud130\ub4e4\uc758": 782, "\ubca1\ud130\ub97c": 782, "\ubca1\ud130\uc778": 782, "\ubca4\uce58\ub9c8\ud0b9": 776, "\ubcc0\uacbd\ub418\uc5c8\ub294\uc9c0": 775, "\ubcc0\uacbd\uc740": 779, "\ubcc0\uacbd\ud558\uae30": 805, "\ubcc0\uacbd\ud574\uc11c": 812, "\ubcc0\uacbd\ud574\uc57c\ud560": 805, "\ubcc0\uc218\ub4e4": 782, "\ubcc0\ud615": 794, "\ubcc0\ud658": [780, 813], "\ubcc0\ud658\ub41c": 813, "\ubcc0\ud658\ub41c\ub2e4": 777, "\ubcc0\ud658\uc740": 790, "\ubcc0\ud658\uc744": 789, "\ubcc0\ud658\ud558\uace0": 782, "\ubcc0\ud658\ud558\uae30": 786, "\ubcc0\ud658\ud558\ub294": [781, 799], "\ubcc0\ud658\ud558\ub294\ub370": 786, "\ubcc0\ud658\ud558\ub3c4\ub85d": 782, "\ubcc0\ud658\ud558\uba74": [777, 786], "\ubcc0\ud658\ud558\uba74\uc11c": 799, "\ubcc0\ud658\ud55c\ub2e4": [781, 786, 790], "\ubcc0\ud658\ud560": [789, 790], "\ubcc0\ud658\ud574\uc11c": 786, "\ubcc4\ub3c4\ub85c": 782, "\ubcc4\ub3c4\ub85d": 813, "\ubcc4\ub3c4\uc758": [790, 814, 815], "\ubcc4\ub85c\ub3c4": 810, "\ubcd1\ub82c\ub85c": 782, "\ubcd1\ub82c\ud654": 779, "\ubcd1\ub82c\ud654\uc2dc\ud0a4\uace0": 779, "\ubcd1\ud569": [793, 812], "\ubcd1\ud569\uc774\uc804\uc5d0": 794, "\ubcd1\ud569\ud558\ub294": 812, "\ubcf4\ub0b4\uc8fc\uc138\uc694": 791, "\ubcf4\ub2e4": [780, 798, 799, 800, 801, 805], "\ubcf4\ub77c": 782, "\ubcf4\uba74": 790, "\ubcf4\uc5ec\uc8fc\uace0": 802, "\ubcf4\uc5ec\uc8fc\uae30": 804, "\ubcf4\uc5ec\uc8fc\ub294": 781, "\ubcf4\uc5ec\uc900\ub2e4": [773, 774, 776, 778, 779, 781, 782, 783, 789, 799, 800, 806], "\ubcf4\uc790": [780, 787, 789, 799, 802, 804], "\ubcf4\uc874\ud558\uace0": 790, "\ubcf4\ud1b5": [793, 815], "\ubcf4\ud1b5\uc740": [780, 793, 794, 800, 802, 808, 813], "\ubcf4\ud1b5\uc758": [810, 813], "\ubcf4\ud1b5\uc774\ub2e4": 800, "\ubcf4\ud638\ub97c": 780, "\ubcf5\uc0ac": 783, "\ubcf5\uc0ac\ub41c\ub2e4": 783, "\ubcf5\uc0ac\ub97c": 795, "\ubcf5\uc0ac\ud558\uace0": 779, "\ubcf5\uc0ac\ud558\uba74\uc11c": 790, "\ubcf5\uc0ac\ud55c\ub2e4": [783, 788], "\ubcf5\uc0ac\ud560": 788, "\ubcf5\uc7a1\ud558\ub2c8": 812, "\ubcf5\uc7a1\ud55c": [796, 799, 808, 813], "\ubcf8\uac83\uacfc": 815, "\ubcfc": 777, "\ubd80\ub3d9\uc18c\uc218\uc810": 793, "\ubd80\ub978\ub2e4": [789, 799, 805, 813], "\ubd80\ubd84": [777, 800], "\ubd80\ubd84\ub4e4\uc774": 780, "\ubd80\ubd84\uc5d0": 800, "\ubd80\ubd84\uc73c\ub85c": 800, "\ubd80\ubd84\uc740": [800, 809], "\ubd80\ubd84\uc744": [777, 780], "\ubd80\ubd84\uc758": [800, 809], "\ubd80\uc0b0": 780, "\ubd80\uc18d": [792, 800, 803, 812], "\ubd80\uc18d\ub418\ub294": 782, "\ubd80\uc218\uc801\uc73c\ub85c": 812, "\ubd80\uc5ec": 782, "\ubd80\uc5ec\ub41c\ub2e4": [782, 789], "\ubd80\uc5ec\ud558\uace0": 789, "\ubd80\uc5ec\ud558\uae30": 782, "\ubd80\uc5ec\ud558\ub294\ub370": 789, "\ubd80\uc5ec\ud55c\ub2e4": [782, 790], "\ubd80\ud130": [777, 780, 810, 812], "\ubd84\ub4e4\uc744": 798, "\ubd84\ub958": [780, 798, 803, 811, 814], "\ubd84\ub958\uac00": 813, "\ubd84\ub958\uae30": 814, "\ubd84\ub958\ub098": 813, "\ubd84\ub958\ub294": [777, 812, 813], "\ubd84\ub958\ub418\uc5b4": 815, "\ubd84\ub958\ub97c": [799, 811, 812], "\ubd84\ub958\uc5d0": 800, "\ubd84\ub958\uc5d0\uc11c": [800, 803], "\ubd84\ub958\uc640\ub294": 777, "\ubd84\ub958\uc744": [800, 803], "\ubd84\ub958\uc758": [777, 782, 800, 812], "\ubd84\ub958\uc774\ub2e4": 815, "\ubd84\ub958\ud558\uae30": 815, "\ubd84\ub958\ud558\ub294": [812, 814], "\ubd84\ub958\ud55c\ub2e4": 813, "\ubd84\ub958\ud560": 813, "\ubd84\ub9ac\ub418\uc5b4": 813, "\ubd84\uc0b0": 791, "\ubd84\uc0b0\ud558\uace0": 782, "\ubd84\uc0b0\ud558\ub294": 779, "\ubd84\uc0b0\ud559\uc2b5\uc774": 780, "\ubd84\uc11d\uc744": 777, "\ubd84\ud3ec": 803, "\ubd84\ud3ec\ub97c": 782, "\ubd84\ud3ec\uc5d0": 803, "\ubd84\ud3ec\uc5d0\uc11c": 814, "\ubd84\ud45c": 814, "\ubd84\ud560": [777, 780, 815], "\ubd84\ud560\uc744": 777, "\ubd84\ud560\ud558\uae30": 777, "\ubd84\ud560\ud558\uc5ec": 795, "\ubd88\uac00\ub2a5\ud558\ub2e4": [786, 787], "\ubd88\uac00\ub2a5\ud558\ub2e4\uba74": 793, "\ubd88\uade0\ud615\ud558\uac8c": 782, "\ubd88\ub9b0\ub2e4": 812, "\ubd88\ud544\uc694\ud55c": 795, "\ubd99\uc5ec\uc918\uc57c": 780, "\ube0c\ub79c\uce58\ub97c": 782, "\ube0c\ub85c\ub4dc\uce90\uc2a4\ud305\uc744": 793, "\ube14\ub85d": 809, "\ube14\ub85d\ub4e4\ub85c": 807, "\ube14\ub85d\uc774": 809, "\ube14\ub85d\uc77c": 810, "\ube44\uad50\ud558\ub294": 803, "\ube44\uad50\ud558\uba74": 809, "\ube44\uad50\ud558\uba74\uc11c": 814, "\ube44\uad50\ud574": 804, "\ube44\uad50\ud574\uc11c": 815, "\ube44\ub300\uce6d\uc801\uc778": 785, "\ube44\ub840\ud558\ub294": 803, "\ube44\ubc29\ud5a5\uc131": [785, 789], "\ube44\uc120\ud615\uc131": 815, "\ube44\uc2b7\ud558\uac8c": [780, 782, 805, 812], "\ube44\uc2b7\ud558\ub2e4": [777, 780, 800, 803, 804, 805, 814, 815], "\ube44\uc2b7\ud558\ub2e4\ub294": 804, "\ube44\uc2b7\ud558\uc9c0\ub9cc": 776, "\ube44\uc2b7\ud55c": [779, 780, 782, 806], "\ube44\ud2b8": 789, "\ube44\ud2b8\ub97c": 789, "\ube44\ud574\uc11c": 801, "\ube44\ud65c\uc131\ud654\ub418\uc5b4": 793, "\ube44\ud65c\uc131\ud654\ub418\uc5c8\uc744": 806, "\ube44\ud6a8\uc728\uc801\uc774\ub2e4": 813, "\ube44\ud6a8\uc728\uc801\uc778": 795, "\ube4c\ub4dc\uc778": [803, 805, 813, 815], "\ube4c\ub529": 807, "\ube4c\ud2b8\uc778": [777, 778, 792, 795, 804, 806, 815], "\ube4c\ud2b8\uc778\uc73c\ub85c": 800, "\ube60\ub974\uac8c": [777, 813], "\ube60\ub974\uace0": [789, 795], "\ube60\ub974\ub2e4": 806, "\ube60\ub974\uc9c0\ub294": 786, "\ube60\ub978": 789, "\ube68\uac04": 799, "\ube68\uac04\uc0c9": 799, "\ubfd0\ub9cc": 815, "\ubfd0\ub9cc\uc544\ub2c8\ub77c": 780, "\ubfd0\uc774\ub2e4": [803, 804, 805, 813], "\ubfd0\uc784\uc744": 790, "\uc0ac\ub77c\uc838\ub3c4": 780, "\uc0ac\ub78c\ub4e4": 785, "\uc0ac\ub78c\ub4e4\uacfc": 785, "\uc0ac\ub78c\ub4e4\uc758": 813, "\uc0ac\uc2e4\ub4e4": 787, "\uc0ac\uc2e4\uc744": 800, "\uc0ac\uc6a9": [780, 806, 812, 815], "\uc0ac\uc6a9\uacfc": 795, "\uc0ac\uc6a9\ub418\uace0": 808, "\uc0ac\uc6a9\ub418\uae30": [777, 786, 799], "\uc0ac\uc6a9\ub418\ub294": [773, 777, 780, 785, 790, 793, 794, 795, 797, 807, 808, 809, 813, 815], "\uc0ac\uc6a9\ub418\ub294\ub370": 806, "\uc0ac\uc6a9\ub418\uc5b4\uc57c": 783, "\uc0ac\uc6a9\ub41c": [780, 782, 793], "\uc0ac\uc6a9\ub41c\ub2e4": [780, 782, 783, 786, 789, 799, 802, 810, 813], "\uc0ac\uc6a9\ub41c\ub2e4\uba74": 785, "\uc0ac\uc6a9\ub41c\uba70": 806, "\uc0ac\uc6a9\ub420": [779, 780, 782, 783, 799, 800, 803, 812, 815], "\uc0ac\uc6a9\ub7c9\uc744": [795, 806], "\uc0ac\uc6a9\ubc95\uc740": [797, 799], "\uc0ac\uc6a9\ubc95\uc744": [776, 793], "\uc0ac\uc6a9\uc790": [787, 793], "\uc0ac\uc6a9\uc790\uac00": [780, 782, 790], "\uc0ac\uc6a9\uc790\ub294": [780, 781, 782, 783, 793], "\uc0ac\uc6a9\uc790\ub4e4\uacfc": 785, "\uc0ac\uc6a9\uc790\ub4e4\uc740": 782, "\uc0ac\uc6a9\uc790\uc758": 783, "\uc0ac\uc6a9\ud558\uaca0\ub2e4": 811, "\uc0ac\uc6a9\ud558\uace0": [782, 794, 800, 805], "\uc0ac\uc6a9\ud558\uae30": [782, 784, 789, 798, 803, 805], "\uc0ac\uc6a9\ud558\uae30\ub97c": 803, "\uc0ac\uc6a9\ud558\ub294": [777, 782, 789, 793, 795, 799, 801, 803, 806, 812, 813, 814, 815], "\uc0ac\uc6a9\ud558\ub294\ub370": [777, 798], "\uc0ac\uc6a9\ud558\ub294\uc9c0\ub294": 785, "\uc0ac\uc6a9\ud558\ub824\uba74": 800, "\uc0ac\uc6a9\ud558\uba70": 803, "\uc0ac\uc6a9\ud558\uba74": [786, 789, 795, 798], "\uc0ac\uc6a9\ud558\uba74\uc11c": 806, "\uc0ac\uc6a9\ud558\uc790": 813, "\uc0ac\uc6a9\ud558\uc9c0": [782, 806, 813], "\uc0ac\uc6a9\ud558\uc9c0\ub9cc": 802, "\uc0ac\uc6a9\ud55c": [777, 780, 782, 784, 789, 798, 801, 802, 807, 815], "\uc0ac\uc6a9\ud55c\ub2e4": [777, 781, 782, 783, 789, 800, 801, 803, 804, 811, 812, 813, 815], "\uc0ac\uc6a9\ud55c\ub2e4\ub294": [780, 800, 803], "\uc0ac\uc6a9\ud55c\ub2e4\uba74": 785, "\uc0ac\uc6a9\ud560": [777, 780, 782, 786, 789, 790, 800, 801, 803, 805, 811, 812], "\uc0ac\uc6a9\ud574": 813, "\uc0ac\uc6a9\ud574\ub3c4": 790, "\uc0ac\uc6a9\ud574\uc11c": [773, 777, 780, 781, 782, 783, 784, 785, 788, 789, 790, 792, 793, 795, 797, 799, 800, 802, 805, 806, 810, 811, 812, 813, 814, 815], "\uc0ac\uc6a9\ud574\uc57c": [780, 781, 782], "\uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4": [789, 800], "\uc0ac\uc6a9\ud588\ub2e4\uba74": 775, "\uc0ac\uc6a9\ud588\ub358": 803, "\uc0ac\uc774\uc5d0": [785, 800, 813, 814], "\uc0ac\uc774\uc758": [782, 799, 814], "\uc0ac\uc804": [796, 800, 803, 810], "\uc0ac\uc804\ub4e4\uc744": [800, 803], "\uc0ac\uc804\uc5d0\uc11c": 815, "\uc0ac\uc804\uc744": [790, 800, 803, 805, 810, 812, 815], "\uc0ac\uc804\uc758": 796, "\uc0ad\uc81c\ud558\uac8c\ud558\uae30": 780, "\uc0ad\uc81c\ud558\uae30\ub3c4": 800, "\uc0ad\uc81c\ud558\uae30\ub97c": 799, "\uc0b4\ud3b4\ubcf4\uaca0\ub2e4": 809, "\uc0b4\ud3b4\ubcf4\uae30": 799, "\uc0b4\ud3b4\ubcf4\uc790": [777, 793, 799, 805, 806], "\uc0c1\uad00\ud558\uc9c0": 782, "\uc0c1\ub2f9\ud55c": 801, "\uc0c1\ub2f9\ud788": 778, "\uc0c1\ub300": 783, "\uc0c1\ub300\uc801\uc73c\ub85c": [782, 813], "\uc0c1\uc138\ud55c": [800, 805], "\uc0c1\uc18d\ud55c": 799, "\uc0c1\uc18d\ud55c\ub2e4": 807, "\uc0c1\uc18d\ud574\uc11c": [774, 775], "\uc0c1\uc218": 814, "\uc0c1\uc704": 799, "\uc0c1\ud0dc\ub97c": 798, "\uc0c1\ud488": 785, "\uc0c1\ud638\uad00\uacc4\ub97c": 785, "\uc0c1\ud638\uc791\uc6a9\uc744": 779, "\uc0c1\ud669\uc5d0\uc11c": 813, "\uc0c8\ub85c\uc6b4": [780, 781, 782, 790, 798, 804], "\uc0d8\ub4e4\ub85c": 814, "\uc0d8\ub4e4\uc740": 814, "\uc0d8\ud50c": 803, "\uc0d8\ud50c\ub41c": [800, 803, 809], "\uc0d8\ud50c\ub7ec": [779, 780, 783, 798], "\uc0d8\ud50c\ub7ec\uac00": [801, 803], "\uc0d8\ud50c\ub7ec\ub294": [780, 805], "\uc0d8\ud50c\ub7ec\ub2e4": 803, "\uc0d8\ud50c\ub7ec\ub4e4\uacfc": 798, "\uc0d8\ud50c\ub7ec\ub4e4\uc5d0": 800, "\uc0d8\ud50c\ub7ec\ub4e4\uc740": [803, 805], "\uc0d8\ud50c\ub7ec\ub4e4\uc758": 805, "\uc0d8\ud50c\ub7ec\ub85c": 799, "\uc0d8\ud50c\ub7ec\ub97c": [799, 800, 803, 805], "\uc0d8\ud50c\ub7ec\uc640": 779, "\uc0d8\ud50c\ub9c1": [774, 803, 813], "\uc0d8\ud50c\ub9c1\uacfc": [780, 802], "\uc0d8\ud50c\ub9c1\ub41c": 814, "\uc0d8\ud50c\ub9c1\ub41c\ub2e4": 814, "\uc0d8\ud50c\ub9c1\ub420\uc9c0\ub97c": 780, "\uc0d8\ud50c\ub9c1\uc5d0": 798, "\uc0d8\ud50c\ub9c1\uc5d0\uc11c": [781, 805], "\uc0d8\ud50c\ub9c1\uc73c\ub85c": 802, "\uc0d8\ud50c\ub9c1\uc740": [780, 800, 801, 802], "\uc0d8\ud50c\ub9c1\uc744": [780, 798, 799, 801, 802, 814], "\uc0d8\ud50c\ub9c1\uc774": 802, "\uc0d8\ud50c\ub9c1\ud558\ub294": 803, "\uc0d8\ud50c\ub9c1\ud55c\ub2e4": [779, 781, 803], "\uc0d8\ud50c\ud558\ub294": 799, "\uc0dd\uac01\ud574": [799, 802], "\uc0dd\uac01\ud574\ubcf4\uc790": [798, 799], "\uc0dd\uae38": 806, "\uc0dd\ub7b5\ud55c\ub2e4": [777, 812], "\uc0dd\ub7b5\ud574\uc11c": 777, "\uc0dd\ub7b5\ud588\ub2e4": 777, "\uc0dd\uc120\ud55c": 782, "\uc0dd\uc131": [779, 786, 793, 807, 809], "\uc0dd\uc131\ub418\ub294": 809, "\uc0dd\uc131\ub41c": [780, 786, 800, 805], "\uc0dd\uc131\ub41c\ub2e4": [782, 810], "\uc0dd\uc131\uc2dc": 788, "\uc0dd\uc131\uc740": 780, "\uc0dd\uc131\uc744": [780, 803], "\uc0dd\uc131\uc774": 780, "\uc0dd\uc131\ud558\uace0": [780, 781, 787, 793, 799], "\uc0dd\uc131\ud558\uae30": [777, 779, 780, 784, 789], "\uc0dd\uc131\ud558\ub294": [780, 786, 789, 799, 805], "\uc0dd\uc131\ud558\ub294\uac83\uc744": 799, "\uc0dd\uc131\ud558\ub294\ub370": [780, 782, 799], "\uc0dd\uc131\ud558\uba70": 798, "\uc0dd\uc131\ud558\uba74": 814, "\uc0dd\uc131\ud558\uc9c0\ub9cc": 799, "\uc0dd\uc131\ud55c": [782, 803, 805, 811], "\uc0dd\uc131\ud55c\ub2e4": [780, 783, 787, 793, 799, 805], "\uc0dd\uc131\ud560": [780, 781, 790, 799, 812, 813], "\uc0e4\ub4dc": 780, "\uc11c\ub85c": [777, 782, 784, 785, 790, 800, 815], "\uc11c\ubc84": [779, 780], "\uc11c\ubc84\ub4e4\uac04\uc758": 780, "\uc11c\ubc84\ub4e4\uacfc": [779, 780], "\uc11c\ubc84\ub4e4\uc5d0\uc11c": 780, "\uc11c\ubc84\ub4e4\uc740": 779, "\uc11c\ubc84\ub4e4\uc744": [779, 780], "\uc11c\ubc84\ub4e4\uc774": 780, "\uc11c\ubc84\uc5d0": 781, "\uc11c\ube0c": [775, 777, 779, 781, 782, 799, 800, 801, 802, 809], "\uc11c\ube0c\uadf8\ub798\ud504": [809, 810], "\uc11c\ube0c\uadf8\ub798\ud504\ub97c": [790, 797], "\uc11c\ube0c\uadf8\ub798\ud504\uc5d0": 797, "\uc11c\ube0c\ubaa8\ub4c8": 808, "\uc11c\ube0c\ubaa8\ub4c8\ub4e4\uc744": 808, "\uc11c\ube0c\ubaa8\ub4c8\uc740": 808, "\uc11c\ube0c\uc14b\uc5d0": 782, "\uc11c\ube0c\uc14b\uc744": 780, "\uc11c\ube0c\ud074\ub798\uc2a4": 774, "\uc11c\ube0c\ud074\ub798\uc2a4\ub85c": 773, "\uc11c\ube0c\ud074\ub798\uc2a4\uc5d0\uc11c": 774, "\uc11c\uce58\ud558\ub294": 774, "\uc11e\uace0": 782, "\uc11e\uae30\uc804\uc758": 782, "\uc11e\ub294\ub2e4": 782, "\uc11e\uc5b4\uc57c\ud55c\ub2e4": 782, "\uc11e\uc5b4\uc900\ub2e4": 782, "\uc11e\uc778": 782, "\uc120\uc5b8\ub418\uc57c": 780, "\uc120\ud0dd": 802, "\uc120\ud0dd\uc744": 802, "\uc120\ud0dd\uc801\uc73c\ub85c": 783, "\uc120\ud0dd\uc801\uc778": 782, "\uc120\ud0dd\ud55c\ub2e4": [781, 798, 803, 806], "\uc120\ud0dd\ud560\uc9c0": 812, "\uc120\ud0dd\ud560\uc9c0\ub97c": 812, "\uc120\ud589": 799, "\uc120\ud615": 795, "\uc124\uba85\ub41c": 809, "\uc124\uba85\uc740": 812, "\uc124\uba85\uc744": [782, 800, 805], "\uc124\uba85\ud558\uace0": 773, "\uc124\uba85\ud558\uae30": 811, "\uc124\uba85\ud558\uae30\uc5d0\ub294": 812, "\uc124\uba85\ud55c": [803, 814], "\uc124\uba85\ud55c\ub2e4": [776, 777, 792, 799, 805, 815], "\uc124\uba85\ud588\ub4ef\uc774": 799, "\uc124\uc815": [779, 780, 783, 808], "\uc124\uc815\ub41c": 809, "\uc124\uc815\ub4e4\uc744": 782, "\uc124\uc815\uc5d0\uc11c\ub294": 793, "\uc124\uc815\uc73c\ub85c": [781, 782], "\uc124\uc815\uc73c\ub85c\ub294": [780, 793], "\uc124\uc815\uc740": 782, "\uc124\uc815\uc744": 782, "\uc124\uc815\ud558\uace0": 790, "\uc124\uc815\ud558\uae30": 801, "\uc124\uc815\ud558\ub294": 782, "\uc124\uc815\ud55c\ub2e4": 810, "\uc124\uc815\ud574\uc57c": 782, "\uc124\uce58\ub294": 782, "\uc124\uce58\ud558\ub294": 782, "\uc124\uce58\ud558\uc790": 782, "\uc124\uce58\ud55c\ub2e4": [776, 782], "\uc131\ub2a5": [798, 809], "\uc131\ub2a5\uc740": 806, "\uc131\ub2a5\uc774": 786, "\uc131\ub9bd\ud558\uae30": 795, "\uc131\uc9c8": 813, "\uc138": 782, "\uc138\uac00\uc9c0": [780, 809], "\uc138\uac1c\uc758": 805, "\uc138\ud305\uc5d0\uc11c": 780, "\uc139\uc158": 780, "\uc140\ud504": 782, "\uc148\ud50c\ub4e4": 814, "\uc14b": 782, "\uc14b\ub3c4": 780, "\uc14b\uc5d0": [780, 782, 805], "\uc14b\uc73c\ub85c": 780, "\uc14b\uc744": [779, 780], "\uc14b\uc758": 815, "\uc14b\uc774": 812, "\uc18c\uac1c\ub294": 786, "\uc18c\uac1c\ub97c": 784, "\uc18c\uac1c\ud55c": [798, 811, 813, 815], "\uc18c\uac1c\ud55c\ub2e4": [773, 774, 782, 784, 786, 792, 802, 807], "\uc18c\uc15c": 785, "\uc18c\uc2a4": [777, 782, 793, 794, 799, 803, 805, 808, 809], "\uc18c\uc2a4\ub4e4\ub85c": 777, "\uc18c\uc2a4\ub4e4\ub85c\ubd80\ud130": 786, "\uc18c\uc2a4\ub85c\ubd80\ud130": 789, "\uc18c\uc2a4\ub97c": [777, 784, 789], "\uc18d\ub3c4": [801, 802], "\uc18d\ub3c4\ub3c4": 789, "\uc18d\ub3c4\ub97c": 782, "\uc18d\ub4dc\ub97c": 795, "\uc18d\uc131": 782, "\uc18d\uc131\ub4e4\uc744": 782, "\uc18d\uc131\ub4e4\uc758": 782, "\uc18d\uc131\uc744": [782, 787, 796, 812], "\uc18d\uc131\uc758": 782, "\uc18d\ud558\ub294": 782, "\uc18d\ud558\ub294\uc9c0\ub97c": 780, "\uc18d\ud55c": [782, 793, 799], "\uc18d\ud55c\ub2e4": 781, "\uc194\ub8e8\uc158\uc740": 782, "\uc194\ub8e8\uc158\uc744": 782, "\uc218": [774, 775, 777, 778, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 793, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815], "\uc218\uac00": [795, 815], "\uc218\ub3c4": [781, 803, 809, 812], "\uc218\ub834\ud55c\ub2e4": 806, "\uc218\ub97c": [782, 799], "\uc218\ubc31\ub9cc": 798, "\uc218\ubcf4\ub2e4": 795, "\uc218\uc2dd\uc5d0\uc11c": 792, "\uc218\uc2ed\uc5b5": 782, "\uc218\uc2ed\uc5b5\uac1c\uc758": 798, "\uc218\uc5d0": 782, "\uc218\uc640": 780, "\uc218\uc758": [780, 781, 783, 799, 813], "\uc218\uc815\ud558\uba74": 779, "\uc218\uc815\ud560": 805, "\uc218\uc900\uc758": [780, 786, 810, 813], "\uc218\uc9d1\ud558\uace0": 780, "\uc218\uc9d1\ud558\uae30\ub97c": 815, "\uc218\uc9d1\ud558\ub294": 799, "\uc218\uc9d1\ud558\ub3c4\ub85d": 805, "\uc218\uc9d1\ud560": 799, "\uc218\ud559": [793, 809], "\uc218\ud559\uc801\uc73c\ub85c": 795, "\uc218\ud589": 783, "\uc218\ud589\ub418\uace0": 780, "\uc218\ud589\ub418\ub294": 815, "\uc218\ud589\ub418\ub294\uc9c0": 798, "\uc218\ud589\ub418\uba74": 780, "\uc218\ud589\ub41c": [783, 784, 799], "\uc218\ud589\ub41c\ub2e4": [774, 780, 782, 788, 806, 809, 813], "\uc218\ud589\ub420": [780, 793], "\uc218\ud589\uc774": 782, "\uc218\ud589\uc774\ub2e4": 780, "\uc218\ud589\ud558\uace0": [780, 815], "\uc218\ud589\ud558\uae30": [799, 806, 814], "\uc218\ud589\ud558\ub294": [779, 780, 783, 798, 802, 809, 815], "\uc218\ud589\ud558\uba74\uc11c": [779, 782], "\uc218\ud589\ud558\uc790": 812, "\uc218\ud589\ud558\uc9c0": 775, "\uc218\ud589\ud558\uc9c0\ub9cc": 813, "\uc218\ud589\ud55c\ub2e4": [782, 792, 802, 805, 806, 808, 809, 815], "\uc218\ud589\ud55c\ub2e4\uace0": 814, "\uc218\ud589\ud55c\ub2e4\ub294": 799, "\uc218\ud589\ud560": [779, 780, 782, 799, 802, 810, 813, 814], "\uc218\ud589\ud560\uc9c0\ub97c": 799, "\uc218\ud589\ud574\uc11c": [775, 813, 815], "\uc21c\uc11c\ub300\ub85c": 813, "\uc21c\uc11c\ub3c4": 774, "\uc21c\uc11c\ub3c4\ub294": 774, "\uc21c\uc11c\ub85c": 780, "\uc21c\uc11c\uc5d0": 789, "\uc21c\uc218": 793, "\uc21c\uc218\ud55c": 808, "\uc22b\uc790": 787, "\uc27d\uac8c": [774, 782], "\uc27d\ub2e4": 814, "\uc27d\uc9c0": 802, "\uc2a4\uce7c\ub77c": [785, 787, 794], "\uc2a4\ud06c\ub9bd\ud2b8": [780, 782, 783], "\uc2a4\ud06c\ub9bd\ud2b8\uac00": [780, 783], "\uc2a4\ud06c\ub9bd\ud2b8\ub294": 783, "\uc2a4\ud06c\ub9bd\ud2b8\ub4e4\uc744": 783, "\uc2a4\ud06c\ub9bd\ud2b8\ub97c": [779, 780, 782], "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0": 780, "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c": 783, "\uc2a4\ud06c\ub9bd\ud2b8\uc774\ub2e4": 806, "\uc2a4\ud0a4\ub9c8": 782, "\uc2a4\ud0a4\ub9c8\ub97c": 782, "\uc2a4\ud0a4\ub9c8\uc774\ub2e4": 790, "\uc2a4\ud0ed\uc5d0\uc11c": 793, "\uc2a4\ud1a0\ub9ac\uc9c0": 783, "\uc2ac\ub77c\uc774\uc2a4\ub294": 787, "\uc2dc\uac01\ud654\ud558\uba74": 798, "\uc2dc\uac04": 806, "\uc2dc\uac04\uc744": [774, 778, 802], "\uc2dc\ub098\ub9ac\uc624\ub4e4\ub85c": 798, "\uc2dc\ub4dc": [781, 799], "\uc2dc\ub9ac\uc988\ub85c": 790, "\uc2dc\uc2a4\ud15c\uc5d0\uc11c": 785, "\uc2dc\uc791": 783, "\uc2dc\uc791\uc73c\ub85c": 784, "\uc2dc\uc791\ud558\uace0": 790, "\uc2dc\uc791\ud558\uae30": 783, "\uc2dc\uc791\ud558\ub294": [782, 790, 799], "\uc2dc\uc791\ud55c\ub2e4": [789, 798], "\uc2dc\uc791\ud560": 813, "\uc2dc\uc791\ud574\uc11c": 802, "\uc2dd\ubcc4\ub420": 780, "\uc2e4\uc81c": [782, 809], "\uc2e4\uc81c\ub85c": 809, "\uc2e4\ud589": 781, "\uc2e4\ud589\ub418\ub294": [782, 783, 793], "\uc2e4\ud589\ub418\uba74": 780, "\uc2e4\ud589\ub418\uc57c": 783, "\uc2e4\ud589\ub41c": 782, "\uc2e4\ud589\ub41c\ub2e4": [779, 780, 782, 815], "\uc2e4\ud589\ub420": [780, 782, 783], "\uc2e4\ud589\ud558\uace0": [775, 780, 809], "\uc2e4\ud589\ud558\ub294": [779, 780, 795], "\uc2e4\ud589\ud558\uba74": 780, "\uc2e4\ud589\ud55c\ub2e4": 779, "\uc2e4\ud589\ud560": 780, "\uc2e4\ud589\ud574\uc11c": [779, 782], "\uc2e4\ud589\ud574\uc57c\ud558\uace0": 780, "\uc2e4\ud5d8\uc801\uc73c\ub85c": 781, "\uc2e4\ud5d8\uc801\uc778": 801, "\uc2f1\uae00": 780, "\uc2f6\ub2e4": [782, 790], "\uc2f6\ub2e4\uba74": [775, 782, 804, 805, 815], "\uc2f6\uc73c\uba74": 793, "\uc2f6\uc740": [780, 790, 797, 798, 814], "\uc30d\ub4e4": 785, "\uc30d\ub4e4\ub85c\ub9cc": 814, "\uc30d\uc5d0": 814, "\uc30d\uc73c\ub85c": 789, "\uc30d\uc744": [785, 803], "\uc30d\uc758": 803, "\uc30d\uc774\ub2e4": 813, "\uc30d\uc778": 804, "\uc313\uc544\uc11c": 815, "\uc4f0\uae30\ub97c": 780, "\uc4f0\uc774\ub294": [812, 813], "\uc544\ub2c8\uae30": 809, "\uc544\ub2c8\ub2e4": [780, 806], "\uc544\ub2c8\ub77c": [786, 813, 815], "\uc544\ub2cc": [804, 813], "\uc544\ub2cc\uc9c0\ub97c": 814, "\uc544\ub2d8\uc744": 804, "\uc544\ub798": [774, 779, 780, 781, 782, 783, 786, 787, 789, 790, 793, 799, 800, 802, 803, 804, 812, 814, 815], "\uc544\ub798\uc640": [789, 800, 805, 812, 813], "\uc544\ub798\uc758": [775, 790], "\uc544\ub9c8\ub3c4": 813, "\uc544\ubb34\uac83\ub3c4": 809, "\uc544\uc6c3\ud48b\ub4e4\uc744": 810, "\uc544\uc6c3\ud48b\uc740": 782, "\uc544\uc774\ub514\uc5b4\ub294": 814, "\uc544\uc774\ub514\uc5b4\ub97c": 813, "\uc544\uc774\ud15c\ub4e4\uc744": 803, "\uc544\uc774\ud15c\ub4e4\uc758": 785, "\uc544\uc774\ud15c\uc640": 803, "\uc544\uc774\ud15c\uc740": 813, "\uc544\uc774\ud15c\uc744": 805, "\uc544\uc8fc": [779, 786, 800, 802, 803], "\uc544\uc9c1": 806, "\uc544\ud06c\ub4e4": 785, "\uc544\ud0a4\ud14d\ud0c0": 793, "\uc548\uc5d0\ub294": 782, "\uc548\uc5d0\uc11c": 810, "\uc54a\uaca0\ub2e4": 786, "\uc54a\uace0": [775, 782, 790, 793, 806, 813], "\uc54a\uae30": [799, 801], "\uc54a\ub294": [782, 793, 803, 806], "\uc54a\ub294\ub2e4": [780, 782, 785, 801, 812, 813], "\uc54a\ub294\ub2e4\uba74": [790, 801], "\uc54a\ub294\uc9c0": 809, "\uc54a\ub2e4": [780, 786, 802, 812, 813, 814], "\uc54a\ub2e4\uba74": 811, "\uc54a\uc558\ub358": 800, "\uc54a\uc73c\uba74": 800, "\uc54a\uc740": [775, 777, 778, 782, 783, 799, 809], "\uc54a\uc744": 782, "\uc54a\uc9c0\ub9cc": 786, "\uc54c": 804, "\uc54c\uace0": [793, 814], "\uc54c\uace0\ub9ac\uc998\uacfc\ub294": 802, "\uc54c\uace0\ub9ac\uc998\ub4e4": 798, "\uc54c\uace0\ub9ac\uc998\uc740": 802, "\uc54c\uace0\ub9ac\uc998\uc744": [780, 813], "\uc54c\ub824\uc8fc\uace0": 805, "\uc54c\ub824\uc900\ub2e4": [782, 790], "\uc54c\ub824\uc9c4": 786, "\uc54c\uc218": 799, "\uc54c\uc544\ub0bc": 799, "\uc54c\uc544\ub450\uc790": [777, 790, 805, 815], "\uc54c\uc544\ubcf8\ub2e4": [777, 798, 811], "\uc54c\uc544\ubd24\ub2e4": 812, "\uc54c\ud30c\ubcb3": 782, "\uc55e": 812, "\uc55e\uc5d0": 809, "\uc55e\uc5d0\uc11c": [780, 805, 814], "\uc55e\uc73c\ub85c": 781, "\uc55e\uc73c\ub85c\uc758": 806, "\uc560\ub2c8\ub9e4\uc774\uc158\uc740": 802, "\uc564\ud2f0\ud2f0\ub4e4": 784, "\uc57d": 801, "\uc57d\uac04": [800, 813, 814], "\uc591\ubc29\ud5a5\uc5d0": 789, "\uc591\ubc29\ud5a5\uc758": 789, "\uc591\ubc29\ud5a5\uc774\uae30": 785, "\uc5b4\ub290\uc815\ub3c4": 800, "\uc5b4\ub514\uc11c\ub098": 775, "\uc5b4\ub5a4": [780, 782, 796, 799, 800, 805, 808, 814], "\uc5b4\ub5bb\uac8c": [773, 774, 780, 781, 782, 785, 792, 798, 799, 802, 804, 805, 808, 815], "\uc5b4\ub824\uc6b8": 798, "\uc5b8\uae09\ud55c": 793, "\uc5b8\uae09\ud588\ub4ef\uc774": 780, "\uc5b8\ub354\ud50c\ub85c\uc6b0": 806, "\uc5b8\uc5b4\uc5d0\uc11c": 789, "\uc5bb\uae30": [779, 782, 812], "\uc5bb\ub294": [781, 800], "\uc5bb\ub294\ub2e4": [800, 804, 805, 813], "\uc5bb\uc5b4\uc9c4": 810, "\uc5bb\uc740": [800, 810], "\uc5bb\uc744": [790, 799, 805, 811, 814], "\uc5bc\ub9c8\ub098": 799, "\uc5c5\ub370\uc774\ud2b8": [792, 793], "\uc5c5\ub370\uc774\ud2b8\ub97c": [780, 793, 797, 801, 806], "\uc5c5\ub370\uc774\ud2b8\ud558\uace0": 793, "\uc5c5\ub370\uc774\ud2b8\ud558\ub294": [799, 804, 806, 809, 813], "\uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4": [792, 793, 813], "\uc5c6\uac70\ub098": 785, "\uc5c6\uac8c": 809, "\uc5c6\uace0": 781, "\uc5c6\uae30": 795, "\uc5c6\ub294": [782, 786, 798, 802], "\uc5c6\ub294\uc9c0\ub97c": 805, "\uc5c6\ub2e4": [780, 781, 790, 799, 809, 813], "\uc5c6\ub2e4\ub294": [780, 802], "\uc5c6\uc560\uace0": 780, "\uc5c6\uc5b4\uc57c": 782, "\uc5c6\uc744": 785, "\uc5c6\uc774": 783, "\uc5d0": [777, 779, 780, 781, 782, 783, 790, 793, 796, 799, 800, 805, 806, 809, 810, 812, 813, 814, 815], "\uc5d0\ub294": [800, 805], "\uc5d0\ub7ec\ub97c": 799, "\uc5d0\uc11c": [773, 774, 775, 778, 780, 781, 782, 783, 785, 789, 794, 798, 799, 802, 803, 805, 809, 811, 813, 815], "\uc5d0\uc11c\ub294": [785, 812], "\uc5d0\uc11c\uc758": 804, "\uc5d0\uc9c0": [779, 781, 784, 785, 787, 792, 793, 795, 796, 798, 799, 803, 804, 811, 813, 814, 815], "\uc5d0\uc9c0\uac00": [782, 785, 789, 790, 800, 812, 813, 814], "\uc5d0\uc9c0\ub098": 782, "\uc5d0\uc9c0\ub294": [781, 785, 789, 790], "\uc5d0\uc9c0\ub3c4": 799, "\uc5d0\uc9c0\ub4e4\uacfc": 800, "\uc5d0\uc9c0\ub4e4\ub3c4": [785, 800], "\uc5d0\uc9c0\ub4e4\ub9cc\uc744": 799, "\uc5d0\uc9c0\ub4e4\uc5d0": [782, 800, 813], "\uc5d0\uc9c0\ub4e4\uc740": [787, 789, 800], "\uc5d0\uc9c0\ub4e4\uc744": [780, 784, 785, 789, 798, 800, 801, 803], "\uc5d0\uc9c0\ub4e4\uc758": [782, 785, 787, 790, 795, 799, 800, 803, 812, 814], "\uc5d0\uc9c0\ub4e4\uc774": [777, 782, 785, 796, 800, 814], "\uc5d0\uc9c0\ub85c": [785, 786, 814], "\uc5d0\uc9c0\ub85c\uc758": 795, "\uc5d0\uc9c0\ub97c": [779, 780, 781, 782, 786, 789, 790, 796, 799, 800, 803, 806], "\uc5d0\uc9c0\ubcc4": [792, 793], "\uc5d0\uc9c0\uc5d0": [782, 787, 789, 790, 792, 795, 812], "\uc5d0\uc9c0\uc5d0\ub294": 789, "\uc5d0\uc9c0\uc640": [780, 782, 790], "\uc5d0\uc9c0\uc640\ub294": 800, "\uc5d0\uc9c0\uc744": 799, "\uc5d0\uc9c0\uc758": [779, 780, 782, 784, 785, 790, 792, 793, 794, 796, 799, 800, 801, 803, 808, 812, 813, 814, 815], "\uc5d0\uc9c0\uc774\ub2e4": 789, "\uc5d0\uce58": [780, 786, 813], "\uc5d4\ud130\ub9ac": 814, "\uc5d4\ud2b8\ub9ac\ub97c": 782, "\uc5ec\uae30\uc11c": [781, 782, 799, 805, 808, 810, 812, 813, 814, 815], "\uc5ec\uae30\uc11c\ub294": [782, 811], "\uc5ec\uae30\uc11c\ubd80\ud130\ub294": 782, "\uc5ec\ub7ec": [777, 779, 780, 781, 782, 785, 786, 789, 790, 796, 798, 799, 804, 808, 809, 810, 813, 814, 815], "\uc5ec\ub7ec\uac00\uc9c0\uac00": 814, "\uc5ec\ub7ec\uac1c\uac00": 810, "\uc5ec\ub7ec\ubc88": 780, "\uc5ec\ub7ec\ubd84": 805, "\uc5ec\ub7ec\ubd84\ub9cc\uc758": [800, 805], "\uc5ec\ub7ec\ubd84\uc740": 815, "\uc5ec\ub7ec\ubd84\uc758": [793, 807], "\uc5ec\ubd80\ub97c": 782, "\uc5ec\uc804\ud788": [799, 802, 805], "\uc5ec\uc9c0\uac00": 793, "\uc5ed": 800, "\uc5ed\ubc29\ud5a5": 800, "\uc5ed\ubc29\ud5a5\uc758": 800, "\uc5ed\uc2dc": [776, 788, 805], "\uc5ed\ud560\uc744": [782, 792, 799], "\uc5f0\uacb0": [785, 809, 814], "\uc5f0\uacb0\ub418\ub294": 799, "\uc5f0\uacb0\ub418\uc5b4": [780, 782, 785], "\uc5f0\uacb0\ub418\uc9c0": 799, "\uc5f0\uacb0\ub41c": [789, 810, 814], "\uc5f0\uacb0\ub41c\ub2e4": 785, "\uc5f0\uacb0\ub85c": 785, "\uc5f0\uacb0\uc744": 780, "\uc5f0\uacb0\ud558\uace0": [795, 800, 812], "\uc5f0\uacb0\ud558\ub294": [785, 812, 813], "\uc5f0\uacb0\ud55c\ub2e4": [780, 785], "\uc5f0\uacb0\ud574\uc11c": 813, "\uc5f0\uad00\ub41c": [781, 790, 800, 810], "\uc5f0\uc0b0": [777, 780, 784, 788, 795, 798, 806, 813], "\uc5f0\uc0b0\uacfc": [779, 796], "\uc5f0\uc0b0\ub4e4\uc740": [806, 809, 813], "\uc5f0\uc0b0\ub4e4\uc744": 813, "\uc5f0\uc0b0\ub9cc": 793, "\uc5f0\uc0b0\uc18d\ub3c4\uac00": 795, "\uc5f0\uc0b0\uc5d0": 807, "\uc5f0\uc0b0\uc73c\ub85c": 793, "\uc5f0\uc0b0\uc740": [788, 807, 809], "\uc5f0\uc0b0\uc744": [779, 790, 792, 793, 795, 804, 809, 813], "\uc5f0\uc0b0\uc758": 795, "\uc5f0\uc0b0\uc774": [802, 809], "\uc5f0\uc18d\ub41c": [781, 782], "\uc5fc\ub450\ud574\ub450\uace0": 779, "\uc5fc\ub450\ud574\uc11c": 813, "\uc601\ubb38": 791, "\uc601\uc18d\uc801\uc778": 780, "\uc601\uc5ed\uc5d0\uc11c\ub294": 802, "\uc608": [780, 783, 786, 787, 789, 790, 806, 812], "\uc608\ub294": [777, 778, 783, 814], "\uc608\ub4e4": 785, "\uc608\ub4e4\ub85c": 802, "\uc608\ub4e4\uc744": 777, "\uc608\ub85c": [774, 777, 799, 804, 805], "\uc608\ub97c": [778, 780, 781, 782, 783, 784, 785, 787, 790, 793, 794, 799, 800, 801, 803, 804, 805, 812, 813, 814, 815], "\uc608\ub97c\ub4e4\uba74": 790, "\uc608\uc758": 787, "\uc608\uc774\ub2e4": [775, 782, 803], "\uc608\uc804\uacfc": 799, "\uc608\uc815\uc774\ub2e4": 780, "\uc608\uc81c": [803, 805, 812, 815], "\uc608\uc81c\uac00": 815, "\uc608\uc81c\ub294": [780, 781, 782, 794, 796, 800, 803, 805, 806, 813, 814], "\uc608\uc81c\ub4e4\uc740": 811, "\uc608\uc81c\ub4e4\uc744": [777, 778, 815], "\uc608\uc81c\ub4e4\uc774": 810, "\uc608\uc81c\ub85c": [777, 803, 807, 812], "\uc608\uc81c\ub97c": [789, 795, 811, 815], "\uc608\uc81c\uc5d0": 812, "\uc608\uc81c\uc5d0\uc11c": 812, "\uc608\uc81c\uc5d0\uc11c\uc640": 777, "\uc608\uc81c\uc640": 805, "\uc608\uc81c\uc758": [777, 787, 799], "\uc608\uc81c\uc774\ub2e4": [779, 782, 786, 790, 795, 800, 813, 814], "\uc608\uc81c\uc778": [803, 805], "\uc608\uc81c\ucc98\ub7fc": 775, "\uc608\uce21": [780, 798, 800, 805, 811, 812, 813, 815], "\uc608\uce21\uac12\uc744": 812, "\uc608\uce21\uacfc": 814, "\uc608\uce21\ub97c": 803, "\uc608\uce21\uc740": [803, 812, 814], "\uc608\uce21\uc744": [803, 812, 813, 814, 815], "\uc608\uce21\uc758": [803, 812], "\uc608\uce21\ud558\uace0": [812, 814, 815], "\uc608\uce21\ud558\uae30": [800, 803], "\uc608\uce21\ud558\uae30\ub9cc": 803, "\uc608\uce21\ud558\ub294": [800, 812, 814], "\uc608\uce21\ud558\uba74": 812, "\uc608\uce21\ud560": 812, "\uc624\ub958": 791, "\uc624\ub978\ucabd": 795, "\uc624\ub978\ucabd\uc73c\ub85c": 813, "\uc624\uc9c1": [776, 790], "\uc624\ud37c\ub808\uc774\ud130\ub294": 780, "\uc624\ud504\ub77c\uc778": 798, "\uc62c\ub824\uc11c": 801, "\uc62c\ub824\uc57c\ud560": 798, "\uc62e\uaca8\ub193\ub294\ub2e4": 800, "\uc62e\uae30\ub294": [775, 805], "\uc635\uc158": 808, "\uc635\uc158\ub4e4": 786, "\uc635\uc158\ub4e4\uc744": 786, "\uc635\uc158\uc5d0": 809, "\uc635\uc158\uc73c\ub85c": 808, "\uc640": [774, 777, 778, 779, 780, 781, 782, 784, 785, 787, 790, 793, 795, 799, 800, 801, 803, 805, 806, 807, 809, 810, 812, 813, 814, 815], "\uc644\ub8cc\ub418\uba74": [782, 793], "\uc644\ub8cc\ub41c\ub2e4": 780, "\uc644\ubcbd\ud55c": 777, "\uc644\uc804\ud558\uac8c": 801, "\uc644\uc804\ud55c": 779, "\uc644\uc804\ud788": [800, 813], "\uc678\ubd80": [777, 784, 789, 805], "\uc678\uc5d0": 782, "\uc67c\ucabd": 795, "\uc67c\ucabd\ubd80\ud130": 813, "\uc694\uad6c\ub418\uae30": 793, "\uc694\uad6c\ub7c9\uc740": 801, "\uc694\uc18c\ub294": 809, "\uc694\uc57d\ud55c\ub2e4": 813, "\uc6a9\ub3c4\ub97c": 812, "\uc6a9\ub7c9\uc744": 798, "\uc6b0\ub9ac\ub294": [780, 782, 802, 812, 815], "\uc6b0\uc120": [776, 780, 781, 790, 799, 812], "\uc6cc\ud06c\ub85c\ub4dc": 798, "\uc6cc\ud06c\ub85c\ub4dc\ub97c": 782, "\uc6d0\uaca9": 774, "\uc6d0\ub798": 793, "\uc6d0\ub798\uc758": [790, 809, 812, 813], "\uc6d0\ubcf8": [782, 799, 803, 804], "\uc6d0\ubcf8\uc758": 799, "\uc6d0\uc18c\ub4e4\uc740": 780, "\uc6d0\uc18c\ub97c": 805, "\uc6d0\uce59\uc740": 804, "\uc6d0\ud558\ub294": [797, 805, 812], "\uc6d0\ud55c\ub2e4\uba74": [799, 803], "\uc6d0\ud560": 815, "\uc6d0\ud568": 785, "\uc6d0\ud65c\ud558\uac8c": 807, "\uc704": [775, 777, 782, 787, 790, 792, 793, 795, 799, 801, 805, 812, 813, 815], "\uc704\ub97c": 814, "\uc704\uc5d0\uc11c": [793, 814, 815], "\uc704\uc758": [777, 799, 813], "\uc704\uc8fc": 787, "\uc704\uce58\uc774\ub2e4": 783, "\uc704\uce58\ud55c": 788, "\uc704\uce58\ud55c\ub2e4": 799, "\uc704\ud55c": [774, 776, 778, 779, 780, 781, 785, 786, 789, 790, 793, 798, 800, 802, 803, 805, 810, 811, 812, 814, 815], "\uc704\ud568\uc774\ub2e4": 777, "\uc704\ud568\uc774\uc9c0": 804, "\uc704\ud574": [773, 777, 778, 780, 781, 800], "\uc704\ud574\uc11c": [774, 775, 777, 779, 780, 781, 782, 783, 785, 787, 789, 790, 793, 796, 799, 802, 803, 805, 806, 808, 810, 811, 812, 813, 814, 815], "\uc704\ud574\uc11c\ub294": [782, 789, 793, 799, 803, 804, 805], "\uc704\ud574\uc11c\uc774\ub2e4": [800, 809], "\uc704\ud578": 780, "\uc720\ub3c4\ub41c": 800, "\uc720\ub3c4\ud558\ub294": 799, "\uc720\uba85\ud558\uace0": 815, "\uc720\uba85\ud55c": [780, 790], "\uc720\uc0ac\ud558\ub2e4": [805, 812], "\uc720\uc6a9\ud558\ub2e4": [780, 790], "\uc720\uc6a9\ud55c": [777, 778], "\uc720\uc758\ud558\uc790": [776, 786, 799, 805], "\uc720\uc77c\ud55c": [779, 780, 800, 803, 813], "\uc720\uc9c0\ud558\uae30": 813, "\uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744": 786, "\uc720\ud6a8\ud558\uc9c0": 809, "\uc73c\ub85c": [781, 791, 793, 810], "\uc740": [776, 777, 780, 781, 782, 783, 784, 792, 800, 803, 804, 805, 808, 814], "\uc740\ub2c9": 808, "\uc744": [774, 777, 779, 780, 781, 782, 783, 785, 786, 791, 793, 796, 799, 804, 805, 810, 812, 814, 815], "\uc758": [773, 774, 777, 778, 780, 781, 782, 783, 784, 785, 787, 792, 793, 799, 800, 801, 803, 805, 809, 810, 812, 813, 814, 815], "\uc758\ubbf8\ud558\ub294\ub370": 808, "\uc758\ubbf8\ud55c\ub2e4": [782, 793, 799, 805, 810], "\uc758\ubbf8\ud560": 785, "\uc758\uc874\uc131": 798, "\uc758\uc874\ud558\uae30": 802, "\uc758\ud574": 782, "\uc758\ud574\uc11c": 800, "\uc774": [773, 774, 776, 777, 779, 780, 782, 783, 784, 785, 786, 787, 789, 790, 791, 792, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815], "\uc774\uac83\ub4e4\uc740": [773, 805, 809, 810], "\uc774\uac83\ub4e4\uc744": [780, 790, 805], "\uc774\uac83\uc740": [790, 793, 800, 802], "\uc774\uac83\uc744": 790, "\uc774\uace0": [777, 813], "\uc774\ub098": [781, 806, 812, 814], "\uc774\ub294": [773, 774, 778, 779, 780, 781, 782, 786, 788, 789, 793, 797, 799, 800, 801, 809, 810, 812, 815], "\uc774\ub2e4": [777, 780, 790, 793, 796], "\uc774\ub4e4": [785, 799], "\uc774\ub4e4\uc740": 785, "\uc774\ub4e4\uc744": 782, "\uc774\ub54c": 777, "\uc774\ub77c\uace0": [774, 809, 813], "\uc774\ub77c\ub294": 812, "\uc774\ub77c\uba74": [775, 815], "\uc774\ub7f0": [776, 786, 799, 807, 809, 813], "\uc774\ub904\uc9c4\ub2e4": [777, 790, 814], "\uc774\ub97c": [773, 774, 775, 777, 778, 780, 781, 782, 786, 789, 790, 793, 794, 795, 798, 799, 800, 803, 804, 805, 806, 812, 813, 814], "\uc774\ub984": [787, 793], "\uc774\ub984\uacfc": 780, "\uc774\ub984\ub4e4\uc744": 782, "\uc774\ub984\uc740": [780, 782], "\uc774\ub984\uc744": [780, 782, 787, 793], "\uc774\ub984\uc758": [782, 787, 812], "\uc774\ub984\uc774": 780, "\uc774\ub984\uc774\uace0": 793, "\uc774\ub984\uc774\ub2e4": [782, 793], "\uc774\ubbf8": [775, 788, 811, 815], "\uc774\ubd84": [785, 790, 800, 809, 810], "\uc774\uc0c1": 793, "\uc774\uc288\uac00": 806, "\uc774\uc5b4\uc9c4": 789, "\uc774\uc640": [777, 793], "\uc774\uc678\uc758": [801, 808], "\uc774\uc6a9\ud55c": [812, 815], "\uc774\uc6a9\ud560": [786, 800], "\uc774\uc6a9\ud574\uc11c": [787, 790, 809, 813], "\uc774\uc6c3": [780, 802, 815], "\uc774\uc6c3\ub4e4\ub85c\ubd80\ud130": [805, 815], "\uc774\uc6c3\ub4e4\uc5d0": [802, 815], "\uc774\uc720\ub294": [774, 780, 782, 786, 789, 793, 795, 799, 814], "\uc774\uc804": [799, 800, 812, 813], "\uc774\uc804\uc5d0": 812, "\uc774\uc81c": [794, 803, 805], "\uc774\uc81c\uc758": 787, "\uc774\uc885": [784, 785, 792, 809, 815], "\uc774\uc9c4": [812, 815], "\uc774\ud130\ub808\uc774\uc158\uc5d0": 813, "\uc774\ud558\uc778": 789, "\uc774\ud56d": 793, "\uc774\ud574\ud558\uace0": 798, "\uc775\uc219\ud558\ub2e4\uba74": 804, "\uc778": [782, 798, 810, 813], "\uc778\ub371\uc2a4\ub97c": [780, 809], "\uc778\ubc14\uc6b4\ub4dc": 799, "\uc778\uc2a4\ud134\uc2a4\ub97c": 785, "\uc778\uc2a4\ud134\uc2a4\uc5d0": 815, "\uc778\uc790": 793, "\uc778\uc790\ub294": 799, "\uc778\uc790\ub4e4\uc740": 801, "\uc778\uc790\ub4e4\uc744": 782, "\uc778\uc790\ub4e4\uc774": 788, "\uc778\uc790\ub85c": [782, 789, 793, 796, 800, 803, 805, 810], "\uc778\uc790\ub97c": [783, 801], "\uc778\uc790\uc774\ub2e4": 782, "\uc778\uc9c0": 800, "\uc778\ucea1\uc290\ub808\uc774\uc158\uc774\ub2e4": 810, "\uc778\ucf54\ub529\ud55c": 785, "\uc778\ud130\uc5d1\uc158\uc744": 779, "\uc778\ud130\ud328\uc774\uc2a4\ub97c": 780, "\uc778\ud130\ud398\uc774\uc2a4\ub294": 796, "\uc778\ud130\ud398\uc774\uc2a4\ub97c": [780, 784, 787, 790], "\uc778\ud130\ud398\uc774\uc2a4\uc758": 787, "\uc778\ud2f0\ud2f0\ub4e4\uacfc": 785, "\uc77c": [785, 795], "\uc77c\ub3c4": 812, "\uc77c\ub4e4\uc5d0": 777, "\uc77c\ubc18": [780, 799], "\uc77c\ubc18\uc801": 813, "\uc77c\ubc18\uc801\uc73c\ub85c": [773, 777, 780, 789, 793, 795, 798, 804, 807, 809], "\uc77c\ubc18\uc801\uc778": [786, 790, 808, 809, 812, 813], "\uc77c\ubc88\uc801\uc73c\ub85c": 777, "\uc77c\ubd80": [794, 805], "\uc77c\ubd80\ub294": 777, "\uc77c\ubd80\ub97c": 798, "\uc77c\ubd80\ub9cc": 797, "\uc77c\ubd80\uc5d0": 792, "\uc77c\ubd80\uc5d0\ub9cc": 787, "\uc77c\ubd80\uc774\uae30": 780, "\uc77c\uc5b4\ub098\ub294\uc9c0\ub97c": 802, "\uc77c\uc5b4\ub09c\ub2e4": [777, 780], "\uc77c\uc744": [775, 805, 815], "\uc77c\uc774": 777, "\uc77c\uc774\ud0ac": 809, "\uc77d\uae30": 790, "\uc77d\uae30\uc640": 780, "\uc77d\ub294": 786, "\uc77d\uc744": 799, "\uc784\ubc30\ub529\uc740": 780, "\uc784\ubca0\ub529": 781, "\uc784\ubca0\ub529\uacfc": 780, "\uc784\ubca0\ub529\ub4e4\uc5d0": 780, "\uc784\ubca0\ub529\ub4e4\uc740": 781, "\uc784\ubca0\ub529\ub4e4\uc744": [780, 782], "\uc784\ubca0\ub529\uc744": [779, 780, 781, 782, 814, 815], "\uc784\ubca0\ub529\uc774": 780, "\uc784\uc2dc\ub85c": 778, "\uc784\uc758\ub85c": [799, 811], "\uc784\uc758\uc131\uc744": 802, "\uc784\uc758\uc758": [782, 799, 812, 814], "\uc785\ub825": [774, 780, 800, 803, 804, 805, 808, 809, 810, 813], "\uc785\ub825\uacfc": [793, 799], "\uc785\ub825\uae4c\uc9c0\uc758": 798, "\uc785\ub825\uc5d0": [798, 809], "\uc785\ub825\uc73c\ub85c": [780, 789, 799, 805, 812, 815], "\uc785\ub825\uc740": [800, 813], "\uc785\ub825\ud558\ub294": 803, "\uc785\ub825\ud558\uba74": 812, "\uc785\ub825\ud574\uc11c": [800, 805], "\uc788\uac8c\ud55c\ub2e4": 778, "\uc788\uace0": [774, 780, 782, 793, 799, 804, 806, 807, 810, 813, 814, 815], "\uc788\uae30": [774, 777, 793, 799, 800], "\uc788\ub294": [773, 774, 779, 780, 782, 785, 786, 788, 795, 800, 801, 802, 803, 805, 808, 809, 810, 811, 812, 813, 815], "\uc788\ub294\ub370": [782, 786, 809, 814], "\uc788\ub294\uc9c0": [782, 805], "\uc788\ub2e4": [773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 793, 794, 795, 796, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815], "\uc788\ub2e4\uace0": 811, "\uc788\ub2e4\ub294": [782, 790], "\uc788\ub2e4\uba74": [782, 790, 805, 814], "\uc788\ub3c4\ub85d": [777, 780, 799], "\uc788\ub4ef\uc774": [777, 799], "\uc788\uc5b4\uc11c": 806, "\uc788\uc5b4\uc57c": [775, 777, 782, 809, 810], "\uc788\uc5b4\uc57c\ub9cc": 780, "\uc788\uc73c\ub2c8": 786, "\uc788\uc73c\uba70": [777, 782, 808], "\uc788\uc744": [777, 790, 805], "\uc788\uc74c": 813, "\uc788\uc74c\uc744": [785, 802, 810, 815], "\uc788\uc9c0": 780, "\uc788\uc9c0\ub9cc": [799, 800], "\uc790\ub3d9\uc73c\ub85c": [775, 780, 781, 793, 804, 806], "\uc790\ub3d9\uc744": 775, "\uc790\ub3d9\ud654\ud560": 775, "\uc790\ub8cc": [780, 784, 785], "\uc790\uc138\ud558\uac8c": 809, "\uc790\uc138\ud55c": [777, 786, 793, 797, 812], "\uc790\uc138\ud788": 804, "\uc790\uc2e0\uc758": [805, 815], "\uc790\uc6d0\uc744": 798, "\uc790\uccb4": 785, "\uc791\ub3d9\uc744": 801, "\uc791\ub3d9\ud558\uac8c": 799, "\uc791\ub3d9\ud558\ub3c4\ub85d": 804, "\uc791\ub3d9\ud558\uba74\uc11c": 779, "\uc791\uc131": [792, 809], "\uc791\uc131\ud558\uace0\uc790": 812, "\uc791\uc131\ud558\ub294": [804, 815], "\uc791\uc131\ud558\uba74": 812, "\uc791\uc131\ud55c\ub2e4": 812, "\uc791\uc131\ud560": [812, 815], "\uc791\uc131\ud574\uc57c\ud55c\ub2e4": 780, "\uc791\uc5c5": 783, "\uc791\uc5c5\uc740": 774, "\uc791\uc740": [780, 782, 799, 806, 811, 813], "\uc798": 786, "\uc798\ub77c\uc11c": 804, "\uc7a0\uc7ac\uc801\uc73c\ub85c": 800, "\uc7a0\uc7ac\uc801\uc73c\ub85c\ub294": 782, "\uc7a0\uc7ac\uc801\uc778": 809, "\uc7a1": 783, "\uc7a1\ub294": [782, 799], "\uc7a1\uc744": [779, 783], "\uc7a1\uc774": 783, "\uc7a5\ub294": 792, "\uc7a5\uc5d0\uc11c\ub294": [807, 811], "\uc7a5\uc740": [773, 784, 798, 811], "\uc7a5\uc758": [774, 811], "\uc7a5\uc810\uc740": 782, "\uc7a5\uc810\uc744": 813, "\uc7ac\ubc30\uc5f4\ud558\ub294": 777, "\uc7ac\uc0ac\uc6a9\ub420": 809, "\uc7ac\uc0ac\uc6a9\ud55c\ub2e4": 803, "\uc7ac\uc0ac\uc6a9\ud560": 800, "\uc7ac\uc791\uc131\ud574\uc11c": 799, "\uc7ac\ud560\ub2f9": 782, "\uc7ac\ud560\ub2f9\uc774": 782, "\uc7ac\ud560\ub2f9\ud55c\ub2e4": 782, "\uc7ac\ud65c\uc6a9\ud574\uc11c": 814, "\uc800\uc790\uac00": 785, "\uc800\uc791\uc744": 785, "\uc800\uc7a5": [778, 794], "\uc800\uc7a5\uacf5\uac04\ub3c4": 789, "\uc800\uc7a5\uacfc": [773, 774], "\uc800\uc7a5\ub418\ub294": [783, 789], "\uc800\uc7a5\ub418\uc5b4": [780, 799, 805, 815], "\uc800\uc7a5\ub418\uc5b4\uc57c": 782, "\uc800\uc7a5\ub41c": [782, 805], "\uc800\uc7a5\ub41c\ub2e4": [780, 781, 782, 788, 790, 810], "\uc800\uc7a5\ub420": [782, 783], "\uc800\uc7a5\uc18c\ub97c": 790, "\uc800\uc7a5\uc18c\uc5d0": 805, "\uc800\uc7a5\uc740": 812, "\uc800\uc7a5\uc774": 795, "\uc800\uc7a5\ud558\uace0": [779, 782, 786, 790], "\uc800\uc7a5\ud558\uae30": [774, 778, 786, 787, 810], "\uc800\uc7a5\ud558\ub294": [778, 780, 782, 783, 790, 793], "\uc800\uc7a5\ud558\ub294\ub370": [773, 782, 789, 798], "\uc800\uc7a5\ud55c\ub2e4": [780, 781, 782, 783, 786, 787, 793], "\uc800\uc7a5\ud560": [774, 782, 783, 787, 795], "\uc801\uac8c": 789, "\uc801\ub2e4": 805, "\uc801\uc6a9\ub418\uace0": 815, "\uc801\uc6a9\ub418\uae30": 814, "\uc801\uc6a9\ub418\ub294": 804, "\uc801\uc6a9\ub418\ub294\ub370": 793, "\uc801\uc6a9\ub418\uc5b4": 813, "\uc801\uc6a9\ub41c\ub2e4": [790, 809], "\uc801\uc6a9\ub429\ub2c8\ub2e4": 799, "\uc801\uc6a9\ud558\uace0": [790, 795, 809], "\uc801\uc6a9\ud558\uae30": [792, 798, 810], "\uc801\uc6a9\ud558\uae30\ub3c4": 808, "\uc801\uc6a9\ud558\ub294": [792, 794, 795], "\uc801\uc6a9\ud55c\ub2e4": [795, 812], "\uc801\uc6a9\ud574\ubcf4\uba74": 812, "\uc801\uc740": [780, 799, 801], "\uc801\uc808\ud55c": [781, 806], "\uc801\ud569\ud558\uc9c0": [778, 786], "\uc804\ub2ec": [791, 804, 805, 807, 809, 810, 811, 813, 815], "\uc804\ub2ec\ub418\ub294": 782, "\uc804\ub2ec\ub41c": [792, 793], "\uc804\ub2ec\uc5d0": [792, 795], "\uc804\ub2ec\uc740": [796, 799, 809, 815], "\uc804\ub2ec\uc744": [792, 793, 796, 802, 806, 813, 815], "\uc804\ub2ec\uc774": [793, 815], "\uc804\ub2ec\ud55c\ub2e4": 803, "\uc804\ub2ec\ud560": 799, "\uc804\ub2ec\ud574\uc11c": [788, 813], "\uc804\ub2ec\ud574\uc57c": [780, 799], "\uc804\ub7b5\uc740": 782, "\uc804\ub7b5\uc744": [798, 799], "\uc804\ubc18\uc801\uc73c\ub85c": 793, "\uc804\ubd80\uc774\ub2e4": 805, "\uc804\uc5d0": [780, 782, 806], "\uc804\uc790\ub294": 780, "\uc804\ucc98\ub9ac": 779, "\uc804\ucc98\ub9ac\uac00": 782, "\uc804\ucc98\ub9ac\ub294": 782, "\uc804\uccb4": [777, 782, 798, 799, 800, 801, 802, 804, 805, 809, 812, 813, 815], "\uc804\uccb4\ub97c": [798, 809], "\uc804\uccb4\uc5d0": 805, "\uc804\ud30c\ub418\uc5b4\uc57c": 805, "\uc804\ud615\uc801\uc778": [777, 783, 808, 809], "\uc804\ud658\ud558\ub294": 799, "\uc808\ub300\ub85c": 780, "\uc808\ub4e4\uc5d0\uc11c": 773, "\uc808\ub4e4\uc5d0\uc11c\ub294": 798, "\uc808\ub85c": 811, "\uc808\uc57d\ud560": [778, 798, 806], "\uc808\uc5d0\uc11c": [777, 798, 812], "\uc808\uc5d0\uc11c\ub294": [777, 779, 786, 792, 799, 809], "\uc808\uc740": [776, 780, 802, 815], "\uc808\uc744": 782, "\uc808\uc758": 779, "\uc808\ucc28\ub294": [777, 798], "\uc808\ucc98\ub85c": 790, "\uc810\uac80\uc740": 809, "\uc810\uc218": 803, "\uc810\uc218\uac00": 814, "\uc810\uc218\ub97c": [800, 803, 812, 814], "\uc810\uc218\ubcf4\ub2e4": 814, "\uc810\uc218\uc640": [803, 814], "\uc810\uc740": [780, 805], "\uc810\uc744": [777, 786, 799, 800, 802, 803, 805, 813], "\uc810\uc774\ub2e4": [780, 782, 800, 803], "\uc811\uadfc": [783, 793], "\uc811\uadfc\uc131\uc744": 777, "\uc811\uadfc\uc744": [780, 783], "\uc811\uadfc\ud558\uae30": [779, 780], "\uc811\uadfc\ud558\ub294": 780, "\uc811\uadfc\ud560": [780, 781, 787, 799], "\uc811\uadfc\ud574\uc11c": 805, "\uc815\ub82c\ud55c\ub2e4": 781, "\uc815\ubcf4": [774, 778, 789], "\uc815\ubcf4\ub4e4\uc744": [777, 782, 813], "\uc815\ubcf4\ub97c": [778, 780, 782, 783, 790, 800, 813, 815], "\uc815\ubcf4\uc640": 800, "\uc815\uc0c1\uc801\uc778": 780, "\uc815\uc218": [782, 789], "\uc815\uc218\ub85c": 790, "\uc815\uc218\ub97c": 789, "\uc815\uc758": [779, 784, 787, 793], "\uc815\uc758\ub294": 815, "\uc815\uc758\ub418\uc5b4": 780, "\uc815\uc758\ub418\uc5c8\ub2e4\uba74": 813, "\uc815\uc758\ub41c": [774, 815], "\uc815\uc758\ub41c\ub2e4": [799, 813], "\uc815\uc758\uc5d0": 784, "\uc815\uc758\ud558\uace0": 773, "\uc815\uc758\ud558\ub098": 774, "\uc815\uc758\ud558\ub294": 780, "\uc815\uc758\ud558\ub294\ub370": 815, "\uc815\uc758\ud55c": [803, 812], "\uc815\uc758\ud55c\ub2e4": [792, 799, 804, 813], "\uc815\uc758\ud560": [799, 803], "\uc815\ucc45\uc740": 781, "\uc815\ucc45\uc744": 781, "\uc815\ud574\uc57c": 783, "\uc815\ud574\uc9c4": [809, 815], "\uc815\ud655\ub3c4": 815, "\uc815\ud655\ud558\uac8c": 780, "\uc815\ud655\ud55c": 798, "\uc81c\uac70\ub418\uc5b4": 804, "\uc81c\uac70\ud558\uae30": 802, "\uc81c\uac70\ud558\ub294": 800, "\uc81c\uac70\ud55c\ub2e4": 793, "\uc81c\uac70\ud588\ub2e4": 805, "\uc81c\uacf1": 782, "\uc81c\uacf5\ub418\ub294": [805, 811], "\uc81c\uacf5\ud558\uae30": [773, 779], "\uc81c\uacf5\ud558\ub294": [774, 782, 800, 805], "\uc81c\uacf5\ud558\ub294\ub370": 786, "\uc81c\uacf5\ud558\uc9c0\ub9cc": 799, "\uc81c\uacf5\ud55c\ub2e4": [776, 777, 778, 779, 780, 781, 782, 783, 784, 786, 789, 790, 793, 798, 799, 803, 805, 806, 812, 815], "\uc81c\uacf5\ud55c\ub2e4\uba74": 786, "\uc81c\uacf5\ud560": 777, "\uc81c\uacf5\ud568": [804, 815], "\uc81c\uacf5\ud574\uc57c": 780, "\uc81c\uacf5\ud574\uc57c\ud55c\ub2e4": 803, "\uc81c\uc548\ud558\ub294": 795, "\uc81c\uc57d": 790, "\uc81c\uc57d\uc774\ub098": 802, "\uc81c\uc678\ud558\uace0\ub294": 815, "\uc81c\uc678\ud558\uba74": [800, 803], "\uc81c\ud55c\uc801\uc778": 802, "\uc870\uac74\uc744": [790, 801], "\uc870\uae08\ub9cc": 779, "\uc870\uc815\uac00\ub2a5": 815, "\uc874\uc7ac\ud558\ub294": [780, 814], "\uc874\uc7ac\ud558\ub294\uc9c0": 814, "\uc874\uc7ac\ud558\uc9c0": [800, 803, 813], "\uc874\uc7ac\ud55c\ub2e4": 807, "\uc874\uc7ac\ud55c\ub2e4\ub294": [776, 800], "\uc874\uc7ac\ud55c\ub2e4\uba74": 775, "\uc874\uc7ac\ud574\uc57c\ud558\uba70": 788, "\uc880\ub354": 808, "\uc885\ub8cc\ub418\uba74": 814, "\uc885\ub958": 813, "\uc885\ub958\ub97c": 813, "\uc885\ub958\uc5d0": 815, "\uc885\ub958\uc758": [776, 777, 779, 804, 809, 810, 813], "\uc885\uc885": [812, 813], "\uc88b\ub2e4": 802, "\uc88b\uc740": 782, "\uc8fc\ub85c": [777, 780], "\uc8fc\ubaa9\ud558\uc790": 802, "\uc8fc\uc11d": 804, "\uc8fc\uc18c": 783, "\uc8fc\uc18c\ub4e4\uc744": 783, "\uc8fc\uc18c\uc774\ub2e4": 783, "\uc8fc\uc5b4\uc84c\uc744": 812, "\uc8fc\uc5b4\uc9c0\uba74": 799, "\uc8fc\uc5b4\uc9c4": [782, 799, 812], "\uc8fc\uc694": [777, 780, 807, 813], "\uc8fc\uc758": 811, "\uc8fc\uc758\ud558\uc790": [802, 804, 813], "\uc900\ub2e4": [780, 801], "\uc900\ube44\ud558\uace0": 782, "\uc900\ube44\ud55c\ub2e4": 813, "\uc904\ub9cc": 782, "\uc904\uc5ec\uc900\ub2e4": 782, "\uc904\uc740": 783, "\uc904\uc774\uae30": 802, "\uc904\uc778": 795, "\uc904\uc77c": 774, "\uc911": 778, "\uc911\uac04": [782, 798], "\uc911\uac04\uc5d0": 793, "\uc911\ubcf5\ub41c": 782, "\uc911\uc2ec\uc758": 784, "\uc911\uc5d0": [780, 781, 783, 796, 804, 815], "\uc911\uc694\ud558\ub2e4": [780, 782], "\uc911\uc694\ud55c": [777, 782, 786, 787], "\uc911\uc758": 789, "\uc911\uc774\ub2e4": 801, "\uc989": [777, 780, 782, 787, 793, 795, 799, 800, 803, 805, 809, 812, 813, 814], "\uc9c0\uae08\uc740": 780, "\uc9c0\ub2c8\uace0": 813, "\uc9c0\uc5b4\ubcf8\ub2e4\uba74": 813, "\uc9c0\uc6d0\ub418\ub294": [793, 800, 805], "\uc9c0\uc6d0\uc740": 793, "\uc9c0\uc6d0\uc744": [782, 806], "\uc9c0\uc6d0\ud558\uace0": [789, 794], "\uc9c0\uc6d0\ud558\uae30": [779, 780, 789, 793], "\uc9c0\uc6d0\ud558\ub294": 806, "\uc9c0\uc6d0\ud558\ub294\ub370": 801, "\uc9c0\uc6d0\ud558\uc9c0": [780, 801], "\uc9c0\uc6d0\ud558\uc9c0\ub9cc": 780, "\uc9c0\uc6d0\ud55c\ub2e4": [779, 780, 781, 782, 789, 793, 798, 801, 803, 805, 813], "\uc9c0\uc6d0\ud568": 801, "\uc9c0\uc815\ub418\uace0": 781, "\uc9c0\uc815\ub418\uba74": 803, "\uc9c0\uc815\ub418\uc5b4\uc57c": 783, "\uc9c0\uc815\ub418\uc9c0": 783, "\uc9c0\uc815\ub41c": 783, "\uc9c0\uc815\ub420": 781, "\uc9c0\uc815\ud558\uae30": [777, 790], "\uc9c0\uc815\ud558\ub294": 777, "\uc9c0\uc815\ud558\ub294\ub370": 782, "\uc9c0\uc815\ud558\uc9c0": 793, "\uc9c0\uc815\ud55c": 790, "\uc9c0\uc815\ud55c\ub2e4": [780, 781, 782, 783, 790], "\uc9c0\uc815\ud560": [780, 783, 800], "\uc9c0\uc815\ud574\uc57c": [781, 808], "\uc9c0\uc815\ud574\uc57c\ud558\uae30": 814, "\uc9c0\uce6d\ud558\ub294": 793, "\uc9c0\ucf1c\ubcf4\uc790": [801, 806], "\uc9c1\uad00\uc801\uc73c\ub85c": 795, "\uc9c1\uc811": [775, 780, 781, 782, 786, 793, 795, 803, 804], "\uc9c4\ub2e4": 779, "\uc9c4\uc785": 799, "\uc9c4\ud589": [801, 813], "\uc9c8\ubb38\uc740": 791, "\uc9d1\uacc4": [793, 796], "\uc9d1\uacc4\ub41c\ub2e4": 810, "\uc9d1\uacc4\ud558\ub294": 810, "\uc9d1\uc911\ud574\uc11c": 777, "\uc9d1\ud55c\uc740": 805, "\uc9d1\ud569": [785, 813], "\uc9d1\ud569\ub418\uc5b4\uc57c": 808, "\uc9d1\ud569\ub4e4\uc5d0": 779, "\uc9d1\ud569\uc5d0": 790, "\uc9d1\ud569\uc73c\ub85c": 785, "\uc9d1\ud569\uc744": [789, 799, 800], "\uc9e7\uac8c": 790, "\ucc28\ub840": 815, "\ucc28\uc6d0": [781, 787, 793, 808], "\ucc28\uc6d0\uacfc": 808, "\ucc28\uc6d0\ub4e4": 808, "\ucc28\uc6d0\ub4e4\uc744": 796, "\ucc28\uc6d0\uc73c\ub85c": 808, "\ucc28\uc6d0\uc740": [787, 795, 808], "\ucc28\uc6d0\uc744": [795, 808], "\ucc28\uc6d0\uc758": 801, "\ucc28\uc6d0\uc774": [795, 813], "\ucc28\uc6d0\uc774\ub780": 808, "\ucc28\uc774\uac00": 813, "\ucc28\uc774\ub97c": 806, "\ucc28\uc774\uc810\uc740": [780, 782, 800, 803, 804, 807, 813], "\ucc28\uc774\uc810\uc774": 800, "\ucc28\uc9c0\ud558\uace0": 801, "\ucc28\uc9c0\ud558\uae30\ub3c4": 795, "\ucc28\uc9c0\ud558\uc9c0": 801, "\ucc38\uace0": [774, 793], "\ucc38\uace0\ud558\uace0\uc790": 780, "\ucc38\uace0\ud558\uba74": 777, "\ucc38\uace0\ud558\uc790": [777, 782, 785, 786, 789, 793, 797, 799, 800, 801, 802, 805, 811, 813, 815], "\ucc38\uace0\ud560": [786, 787, 789, 790], "\ucc38\uc870": 780, "\ucc38\uc870\ub9cc": 786, "\ucc38\uc870\ud558\uae30": 786, "\ucc38\uc870\ud558\uc790": 786, "\ucc3e\ub294\ub2e4": 783, "\ucc3e\uc544\ub0b4\uc57c\ud55c\ub2e4": 813, "\ucc3e\uc544\ub0bc": 809, "\ucc3e\uc544\ubcfc": 805, "\ucc44\ud0dd\ud558\uace0": 779, "\ucc45\uc784\uc744": 779, "\ucc98\ub7fc": [775, 780, 800], "\ucc98\ub9ac": [774, 777], "\ucc98\ub9ac\ub418\uc9c0": 777, "\ucc98\ub9ac\ub97c": 804, "\ucc98\ub9ac\ud558\uace0": 773, "\ucc98\ub9ac\ud558\uae30": 774, "\ucc98\ub9ac\ud558\ub294": [777, 778], "\uccab": [781, 802, 804], "\uccab\ubc88\uc9f8": [782, 787, 799, 800, 802, 805, 809], "\uccab\ubc88\uc9f8\ub294": 800, "\uccab\uc9f8\ub85c": 813, "\uccb4\ud06c": 809, "\uccb4\ud06c\uac00": 809, "\uccb4\ud06c\ud3ec\uc778\ud2b8\ub97c": 786, "\ucd08\uae30\ud654\ub41c\ub2e4": 781, "\ucd08\uae30\ud654\ud558\uae30": 779, "\ucd08\uae30\ud654\ud55c\ub2e4": [780, 808], "\ucd1d": [777, 781], "\ucd5c\ub300": 813, "\ucd5c\uc120\uc758": 801, "\ucd5c\uc18c\ub4e4\uc774": 813, "\ucd5c\uc18c\uc758": 782, "\ucd5c\uc18c\ud55c\uc758": 793, "\ucd5c\uc2e0": 782, "\ucd5c\uc801\uc740": 806, "\ucd5c\uc801\uc774\uc9c0": 782, "\ucd5c\uc801\ud654\ub418\uc5b4": 782, "\ucd5c\uc801\ud654\ub41c": 793, "\ucd5c\uc801\ud654\ub420": 795, "\ucd5c\uc801\ud654\ub4e4\uc744": 795, "\ucd5c\uc801\ud654\ub97c": 809, "\ucd5c\uc801\ud654\ud558\uace0": 795, "\ucd5c\uc801\ud654\ud560": 793, "\ucd5c\uc885": [798, 805], "\ucd94\uac00": [801, 809], "\ucd94\uac00\ub41c": 789, "\ucd94\uac00\ub85c": [777, 782, 790, 795], "\ucd94\uac00\uc801\uc73c\ub85c": [775, 782], "\ucd94\uac00\uc801\uc778": 810, "\ucd94\uac00\ud558\ub294": 777, "\ucd94\uac00\ud55c\ub2e4": 777, "\ucd94\uac00\ud560": [777, 780], "\ucd94\ub860": 798, "\ucd94\ub860\uc5d0": 780, "\ucd94\ub860\uc5d0\uc11c": 782, "\ucd94\ub860\uc740": 802, "\ucd94\ub860\uc744": [779, 802], "\ucd94\ub860\uc758": 802, "\ucd94\ub860\uc774": [782, 798], "\ucd94\uc0c1\ud654\ub97c": 784, "\ucd94\ucc9c": 785, "\ucd94\ucc9c\uc5d0\uc11c": 812, "\ucd94\ucc9c\uc744": 814, "\ucd94\ucd9c\ub420": 775, "\ucd94\ucd9c\uc744": 775, "\ucd94\ucd9c\ud558\uace0": 790, "\ucd94\ucd9c\ud558\uba74": 815, "\ucd94\ucd9c\ud558\uc790": 775, "\ucd94\ucd9c\ud55c\ub2e4": 775, "\ucd94\ucd9c\ud560": 810, "\ucd95\uc18c": [792, 793], "\ucd95\uc57d": [793, 796, 810], "\ucd9c\ub825": [782, 793, 799, 800, 802, 804, 805, 808], "\ucd9c\ub825\uacfc": 800, "\ucd9c\ub825\uc2dc\uc791\ud574\uc11c": 798, "\ucd9c\ub825\uc73c\ub85c": 805, "\ucd9c\ub825\uc73c\ub85c\ub294": 799, "\ucd9c\ub825\uc758": 799, "\ucda9\ubd84\ud558\ub2e4": 802, "\ucda9\ubd84\ud558\uc9c0": 782, "\ucda9\uc871\ud558\uba74": 801, "\ucde8\uae09\ud55c\ub2e4": 809, "\ucde8\ud558\uac8c\ud558\uba74": 812, "\uce58\uc6d0\uc744": 808, "\uce5c\uad6c": 785, "\uce5c\ubaa9": 813, "\uce5c\uc219\ud560": 814, "\uce74\ud14c\uace0\ub9ac\ub85c": 815, "\uce74\ud14c\ub85c\uae30\ub4e4\ub85c": 815, "\uce90\ub178\ub2c8\uceec": 790, "\ucee4\ub110\uc758": 806, "\ucee4\ub2e4\ub780": 813, "\ucee4\ubba4\ub2c8\ud2f0\uc5d0": 813, "\ucee4\ubba4\ub2c8\ud2f0\uc758": 813, "\ucee4\uc11c": 795, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ub41c": 810, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c": 805, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\uc774": 815, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [798, 800, 805], "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\ub294": 798, "\ucee4\uc2a4\ud140": [773, 798, 801, 805, 807, 815], "\ucee4\uc9c8": 782, "\ucee8\ud0dd\uc2a4\ud2b8": 789, "\ucef4\ud30c\uc77c\uacfc": 782, "\ucef4\ud30c\uc77c\uc744": 793, "\ucef4\ud30c\uc77c\ud558\uace0": 782, "\ucef4\ud30c\uc77c\ud55c\ub2e4": 782, "\ucef4\ud3ec\ub10c\ub4dc\ub4e4\uc744": 779, "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uacfc": [779, 813], "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uc744": [779, 784], "\ucef4\ud3ec\ub10c\ud2b8\ub97c": [773, 779, 813], "\ucef4\ud3ec\ub10c\ud2b8\ub9cc": 812, "\ucef4\ud4e8\ud130": 779, "\ucef4\ud4e8\ud130\ub294": [779, 780], "\ucef4\ud4e8\ud130\ub4e4\uc5d0": 779, "\ucef4\ud4e8\ud130\ub4e4\uc758": [779, 782], "\ucef4\ud4e8\ud130\ub97c": 782, "\ucef4\ud4e8\ud130\uc5d0": 780, "\ucef4\ud4e8\ud130\uc5d0\uc11c": [779, 782, 806], "\ucef4\ud4e8\ud305": 793, "\ucef7": 782, "\ucf00\uc774\uc2a4\ub294": 780, "\ucf00\uc774\uc2a4\ub4e4\uc744": 809, "\ucf54\ub4dc": [777, 779, 782, 792, 800, 803, 806, 809, 813], "\ucf54\ub4dc\ub294": [775, 776, 777, 779, 780, 781, 782, 786, 787, 789, 790, 799, 800, 803, 804, 805, 807, 809, 812, 813, 814, 815], "\ucf54\ub4dc\ub3c4": 804, "\ucf54\ub4dc\ub4e4\uacfc": 804, "\ucf54\ub4dc\ub97c": [775, 777, 779, 780, 793], "\ucf54\ub4dc\uc5d0\uc11c": [777, 799], "\ucf54\ub4dc\uc640": [780, 807, 812], "\ucf54\ub4dc\uc758": [777, 809], "\ucf54\ub4dc\uc774\ub2e4": 815, "\ucf54\ub4dc\ucc98\ub7fc": 815, "\ucffc\ub9ac\ud558\ub294": 789, "\ud06c\uac8c": 812, "\ud06c\uae30": 778, "\ud06c\uae30\uac00": [798, 813], "\ud06c\uae30\ub77c\uace0": 811, "\ud06c\uae30\ub97c": [781, 790], "\ud06c\uae30\uc758": 780, "\ud06c\uae30\uc774\uace0": 801, "\ud06c\ub85c\uc2a4": 796, "\ud070": [774, 782, 791, 797, 809, 811, 813, 815], "\ud074\ub798\uc2a4": [773, 805], "\ud074\ub798\uc2a4\ub294": [780, 799], "\ud074\ub798\uc2a4\ub4e4\uc744": 805, "\ud074\ub798\uc2a4\ub97c": [774, 775, 779, 805], "\ud074\ub798\uc2a4\uc5d0": [774, 777, 799, 815], "\ud074\ub798\uc2a4\uc5d0\ub294": 774, "\ud074\ub798\uc2a4\uc5d0\uc11c": 773, "\ud074\ub798\uc2a4\uc774\uace0": 801, "\ud074\ub798\uc2a4\uc774\ub2e4": [774, 780], "\ud074\ub798\uc2a4\uc778": [777, 799], "\ud074\ub7ec\uc2a4\ud130": [779, 783], "\ud074\ub7ec\uc2a4\ud130\uc5d0": [780, 783], "\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c": [779, 780, 782, 783], "\ud074\ub7ec\uc2a4\ud130\uc758": [779, 780, 782, 783], "\ud074\ub7ec\uc2a4\ud130\uc774": 779, "\ud074\ub85c\ubc8c": 783, "\ud074\ub860\ud558\uace0": 782, "\ud074\ub860\ud55c\ub2e4": 782, "\ud0a4\uac12\ub294": 796, "\ud0a4\ub85c": [782, 810], "\ud0c0\uc785": [781, 782, 787, 789, 796, 808, 810], "\ud0c0\uc785\uac04\uc758": 800, "\ud0c0\uc785\uacfc": [780, 781, 790, 800, 803, 812, 815], "\ud0c0\uc785\ub4e4\uacfc": [781, 782, 800, 803, 805, 815], "\ud0c0\uc785\ub4e4\uc5d0": [790, 809, 815], "\ud0c0\uc785\ub4e4\uc640": [803, 805], "\ud0c0\uc785\ub4e4\uc740": 796, "\ud0c0\uc785\ub4e4\uc744": [782, 799, 800, 803, 810], "\ud0c0\uc785\ub4e4\uc758": 782, "\ud0c0\uc785\ub4e4\uc774": 782, "\ud0c0\uc785\ub9cc": 812, "\ud0c0\uc785\ub9cc\uc744": 780, "\ud0c0\uc785\ubcc4": [781, 790], "\ud0c0\uc785\ubcc4\ub85c": [782, 799, 815], "\ud0c0\uc785\uc5d0": [781, 782, 790, 793, 796, 808, 809, 810, 812, 813, 814, 815], "\ud0c0\uc785\uc5d0\uc11c": 781, "\ud0c0\uc785\uc5d0\uc11c\uc758": 782, "\ud0c0\uc785\uc73c\ub85c": [785, 810, 812, 814], "\ud0c0\uc785\uc73c\ub85c\ub294": 808, "\ud0c0\uc785\uc740": [781, 789, 808], "\ud0c0\uc785\uc744": [781, 782, 784, 785, 787, 793, 796, 800, 804, 806, 811, 812, 814], "\ud0c0\uc785\uc758": [781, 782, 784, 785, 790, 796, 799, 800, 812], "\ud0c0\uc785\uc774": [781, 782, 789, 790, 809, 810], "\ud0c0\uc785\uc774\ub098": 781, "\ud0c0\uc785\uc774\ub2e4": 782, "\ud0c0\uc785\uc774\ub77c\uace0": 790, "\ud134\uc11c": 787, "\ud14c\uc2a4\ud06c": 777, "\ud14c\uc2a4\ud06c\ub4e4\uc5d0": 812, "\ud14c\uc2a4\ud06c\ub4e4\uc744": 815, "\ud14c\uc2a4\ud06c\ub97c": [776, 811], "\ud14c\uc2a4\ud06c\uc5d0": 782, "\ud14c\uc2a4\ud06c\uc5d0\ub3c4": 780, "\ud14c\uc2a4\ud06c\uc5d0\uc11c": 777, "\ud14c\uc2a4\ud06c\uc758": 780, "\ud14c\uc2a4\ud2b8": [780, 782, 812, 815], "\ud14c\uc2a4\ud2b8\ub97c": 780, "\ud14c\uc2a4\ud2b8\uc758": 777, "\ud14c\uc774\ube14": 786, "\ud14c\uc785\ub4e4\uc758": 782, "\ud150\uc11c": [781, 788, 789, 793, 807], "\ud150\uc11c\uac00": [780, 787], "\ud150\uc11c\ub294": [780, 787, 806], "\ud150\uc11c\ub4e4\uacfc": [781, 810], "\ud150\uc11c\ub4e4\uc5d0": 790, "\ud150\uc11c\ub4e4\uc744": [780, 809], "\ud150\uc11c\ub4e4\uc758": [777, 782, 800, 803, 804, 815], "\ud150\uc11c\ub85c": 786, "\ud150\uc11c\ub97c": [780, 781, 786, 788, 789, 810], "\ud150\uc11c\uc5d0": 806, "\ud150\uc11c\uc5ec\uc57c\ub9cc": 793, "\ud150\uc11c\uc640": 780, "\ud150\uc11c\uc758": [787, 789], "\ud150\uc11c\uc774\uace0": 804, "\ud15c\ud50c\ub9bf\uc740": 774, "\ud1a0\uc774": 782, "\ud1a0\ud53d\ub4e4\uc744": 798, "\ud1b5\uacc4\ub4e4\uc744": 782, "\ud1b5\uc2e0\uc5d0": 783, "\ud1b5\uc2e0\uc744": [779, 782], "\ud1b5\uc2e0\uc774": 780, "\ud1b5\ud569\ub420": 807, "\ud1b5\ud569\ud558\ub294": [792, 810], "\ud1b5\ud574\uc11c": [780, 781, 782, 786, 793, 799, 802, 803, 810, 814], "\ud1b5\ud574\uc11c\ub294": 799, "\ud234\ub4e4": 779, "\ud234\uc740": 780, "\ud29c\ud1a0\ub9ac\uc5bc": 793, "\ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c": 801, "\ud29c\ud50c": 789, "\ud2b8\ub808\uc774\ub108": [779, 780], "\ud2b8\ub808\uc774\ub108\uac00": 780, "\ud2b8\ub808\uc774\ub108\ub294": 782, "\ud2b8\ub808\uc774\ub108\ub4e4\uc740": [779, 780], "\ud2b8\ub808\uc774\ub108\ub4e4\uc758": 783, "\ud2b8\ub808\uc774\ub108\ub4e4\uc774": 780, "\ud2b8\ub808\uc774\ub108\uc5d0": 783, "\ud2b8\ub808\uc774\ub108\uc5d0\uac8c": [779, 780], "\ud2b8\ub9ac\ud50c": 790, "\ud2b8\uc704\ud130\uc758": 785, "\ud2b9\ubcc4\ud558\uac8c": 805, "\ud2b9\ubcc4\ud55c": [785, 790, 809], "\ud2b9\ubcc4\ud788": 786, "\ud2b9\uc131\uc744": 813, "\ud2b9\uc815": [775, 777, 781, 782, 790, 799, 802, 808, 812], "\ud2b9\uc9d5\uacfc": 789, "\ud2b9\uc9d5\uc744": [796, 813], "\ud2b9\ud788": [779, 790, 802], "\ud2f0\uc555\uc5d0": 812, "\ud2f0\uc785\uc5d0": 782, "\ud301\uc744": 798, "\ud30c\ub77c\uba54\ud130": [807, 808], "\ud30c\ub77c\uba54\ud130\ub4e4": 810, "\ud30c\ub77c\uba54\ud130\ub4e4\uacfc": 808, "\ud30c\ub77c\uba54\ud130\ub4e4\ub85c\uc368": 810, "\ud30c\ub77c\uba54\ud130\ub4e4\uc740": 793, "\ud30c\ub77c\uba54\ud130\ub4e4\uc744": [780, 796, 806], "\ud30c\ub77c\uba54\ud130\ub85c": [795, 809], "\ud30c\ub77c\uba54\ud130\ub97c": [777, 793, 799], "\ud30c\ub77c\uba54\ud130\uc774\ub2e4": 814, "\ud30c\ub77c\ubbf8\ud130\ub4e4\uc740": 793, "\ud30c\ub77c\ubbf8\ud130\ub85c": 793, "\ud30c\uc2f1\ud558\uace0": 790, "\ud30c\uc2f1\ud558\ub294": 786, "\ud30c\uc774\uc120": 789, "\ud30c\uc774\ud504\ub77c\uc778": [791, 811, 813, 815], "\ud30c\uc774\ud504\ub77c\uc778\uc5d0": 774, "\ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c": 774, "\ud30c\uc774\ud504\ub77c\uc778\uc740": 813, "\ud30c\uc774\ud504\ub77c\uc778\uc744": [773, 774, 798], "\ud30c\uc774\ud504\ub77c\uc778\uc758": 773, "\ud30c\uc774\ud504\ub77c\uc778\uc774": [773, 774], "\ud30c\uc77c": [775, 782, 783, 812, 815], "\ud30c\uc77c\ub4e4": [782, 783], "\ud30c\uc77c\ub4e4\ub85c": 777, "\ud30c\uc77c\ub4e4\uc5d0": 782, "\ud30c\uc77c\ub4e4\uc740": [775, 782], "\ud30c\uc77c\ub4e4\uc744": [775, 790], "\ud30c\uc77c\ub4e4\uc758": [782, 783], "\ud30c\uc77c\ub4e4\uc774": 782, "\ud30c\uc77c\ub85c": [777, 782], "\ud30c\uc77c\ub85c\uc11c": 782, "\ud30c\uc77c\uc5d0": [775, 782, 790], "\ud30c\uc77c\uc5d0\uc11c": 782, "\ud30c\uc77c\uc740": 782, "\ud30c\uc77c\uc744": [775, 780, 782, 783], "\ud30c\uc77c\uc758": 782, "\ud30c\uc77c\uc774": [775, 782, 783], "\ud30c\uc77c\uc774\ub2e4": 782, "\ud30c\uccd0": 774, "\ud30c\ud0c0\uc154\ub2dd": 782, "\ud30c\ud0c0\uc158\uacfc": 780, "\ud30c\ud0c0\uc158\ub41c": 783, "\ud30c\ud0c0\uc158\uc5d0": 782, "\ud30c\ud130\uc158\ud558\uae30": 780, "\ud30c\ud2b8\ub85c": 796, "\ud30c\ud2f0\uc154\ub2dd": [774, 780], "\ud30c\ud2f0\uc154\ub2dd\uc740": 782, "\ud30c\ud2f0\uc154\ub2dd\uc744": 782, "\ud30c\ud2f0\uc154\ub2dd\uc758": 782, "\ud30c\ud2f0\uc154\ub2dd\ud55c\ub2e4": 782, "\ud30c\ud2f0\uc154\ub2dd\ud560": 782, "\ud30c\ud2f0\uc158": [779, 780, 781, 782, 783], "\ud30c\ud2f0\uc158\uacfc": 782, "\ud30c\ud2f0\uc158\ub418\uc5b4": 780, "\ud30c\ud2f0\uc158\ub41c": [779, 780, 782, 783], "\ud30c\ud2f0\uc158\ub4e4\uc5d0": 782, "\ud30c\ud2f0\uc158\ub4e4\uc744": [782, 783], "\ud30c\ud2f0\uc158\ub4e4\uc758": 782, "\ud30c\ud2f0\uc158\ub4e4\uc774": [782, 783], "\ud30c\ud2f0\uc158\uc5d0": 782, "\ud30c\ud2f0\uc158\uc5d0\uc11c": 780, "\ud30c\ud2f0\uc158\uc73c\ub85c": 782, "\ud30c\ud2f0\uc158\uc740": 782, "\ud30c\ud2f0\uc158\uc744": [780, 781, 782, 783], "\ud30c\ud2f0\uc158\uc758": [780, 782], "\ud30c\ud2f0\uc158\uc774": [782, 783], "\ud30c\ud2f0\uc158\uc774\ub2e4": 780, "\ud30c\ud2f0\uc158\ud558\uae30": 782, "\ud310\ub9e4\uc790": 785, "\ud310\ub9e4\ud568": 785, "\ud314\ub85c\uc6b0": 785, "\ud328\uc2a4": 806, "\ud328\uc2a4\uc6cc\ub4dc": 783, "\ud328\ud0a4\uc9c0": 776, "\ud328\ud0a4\uc9c0\ub4e4\uc744": 790, "\ud328\ud0a4\uc9c0\ub97c": [773, 782], "\ud398\uc774\ud37c\uc5d0\uc11c\ub294": 808, "\ud3b8\ub9ac\ud558\uace0": 774, "\ud3c9\uac00": [802, 812], "\ud3c9\uac00\ud558\ub294": 815, "\ud3c9\uade0": 813, "\ud3c9\uade0\uc744": 813, "\ud3ec\uba67\ub4e4\uc5d0\ub3c4": 790, "\ud3ec\uba67\ub4e4\uc774": 786, "\ud3ec\uba67\uc73c\ub85c": [782, 786, 790], "\ud3ec\uba67\uc744": 789, "\ud3ec\uba67\uc758": 806, "\ud3ec\uba67\uc774": 775, "\ud3ec\uba67\uc778": 775, "\ud3ec\ud2b8": 783, "\ud3ec\ud568": [779, 806], "\ud3ec\ud568\ub418\uc5b4": [782, 815], "\ud3ec\ud568\ub41c": 782, "\ud3ec\ud568\ub41c\ub2e4\ub294": 782, "\ud3ec\ud568\ub420": 799, "\ud3ec\ud568\ud558\uace0": [777, 779, 782, 799, 807], "\ud3ec\ud568\ud558\ub294": 799, "\ud3ec\ud568\ud558\ub294\ub370": 782, "\ud3ec\ud568\ud558\uc9c0": [799, 812], "\ud3ec\ud568\ud558\uc9c0\ub9cc": 799, "\ud3ec\ud568\ud55c": [785, 799, 803], "\ud3ec\ud568\ud55c\ub2e4": [782, 810], "\ud3ec\ud568\ud560": 799, "\ud3ec\ud568\ud574\uc57c": 799, "\ud3f4\ub354\ub294": 782, "\ud45c\uc2dc\ub41c": 799, "\ud45c\uc900": [773, 777], "\ud45c\uc900\uc801\uc778": 774, "\ud45c\ud604\ub418\uace0": 802, "\ud45c\ud604\ub418\uba70": 784, "\ud45c\ud604\ub418\uc5b4\uc57c": 814, "\ud45c\ud604\ub41c\ub2e4": [789, 790, 809, 810], "\ud45c\ud604\uc744": 815, "\ud45c\ud604\ud558\uace0": 785, "\ud45c\ud604\ud558\uae30": [785, 789, 793, 796], "\ud45c\ud604\ud558\ub294": [782, 785, 812], "\ud45c\ud604\ud558\ub294\ub370": 814, "\ud45c\ud604\ud558\uba74": 793, "\ud45c\ud604\ud560": 785, "\ud48d\ubd80\ud55c": 813, "\ud504\ub798\ud504\uc5d0\uc11c": 799, "\ud504\ub808\uc784\uc6cc\ud06c": 807, "\ud504\ub808\uc784\uc6cc\ud06c\uac00": 786, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0": 807, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c": 799, "\ud504\ub808\uc784\uc6cc\ud06c\uc758": [780, 790, 807], "\ud504\ub85c\uadf8\ub798\ubc0d": 784, "\ud504\ub85c\uc138\uc2a4": [780, 813], "\ud504\ub85c\uc138\uc2a4\ub294": [779, 780, 782, 798], "\ud504\ub85c\uc138\uc2a4\ub41c": 778, "\ud504\ub85c\uc138\uc2a4\ub4e4\uacfc\uc758": 780, "\ud504\ub85c\uc138\uc2a4\ub4e4\uc740": [779, 780], "\ud504\ub85c\uc138\uc2a4\ub4e4\uc744": [779, 780], "\ud504\ub85c\uc138\uc2a4\ub97c": [779, 780, 782, 801, 813], "\ud504\ub85c\uc138\uc2a4\ub9cc": 780, "\ud504\ub85c\uc138\uc2a4\uc5d0": 780, "\ud504\ub85c\uc138\uc2a4\uc5d0\uc11c": 780, "\ud504\ub85c\uc138\uc2a4\uc758": [780, 783], "\ud504\ub85c\uc138\uc2f1": [773, 778], "\ud504\ub85c\uc138\uc2f1\ub418\uc5b4": 811, "\ud504\ub85c\uc138\uc2f1\ub41c": 778, "\ud504\ub85c\uc138\uc2f1\uc758": 777, "\ud504\ub85c\uc138\uc2f1\ud558\uace0": 774, "\ud504\ub85c\uc138\uc2f1\ud558\ub294": [773, 776, 777], "\ud504\ub85c\ud1a0\ud0c0\uc785": 789, "\ud504\ub85c\ud2f0\uc5b4\uac00": 799, "\ud504\ub85c\ud37c\ud2f0\ub4e4\uc744": 777, "\ud504\ub85c\ud37c\ud2f0\ub97c": 777, "\ud504\ub860\ud2f0\uc5b4": 799, "\ud504\ub860\ud2f0\uc5b4\uac00": 799, "\ud504\ub860\ud2f0\uc5b4\ub294": 799, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uacfc": 799, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uc744": 799, "\ud504\ub860\ud2f0\uc5b4\ub85c": 799, "\ud504\ub860\ud2f0\uc5b4\ub97c": 799, "\ud504\ub860\ud2f0\uc5b4\uc5d0\uc11c": 799, "\ud504\ub860\ud2f0\uc5b4\uc758": 799, "\ud504\ub860\ud2f0\uc5b4\uc774\uace0": 799, "\ud53c\ucc98": [784, 786, 788, 790, 793, 795, 808, 813, 815], "\ud53c\ucc98\uac00": [787, 790, 805], "\ud53c\ucc98\ub294": 787, "\ud53c\ucc98\ub4e4\uacfc": 784, "\ud53c\ucc98\ub4e4\ub9cc": 787, "\ud53c\ucc98\ub4e4\uc740": 787, "\ud53c\ucc98\ub4e4\uc744": [785, 786, 790, 800, 805], "\ud53c\ucc98\ub77c\uace0": 792, "\ud53c\ucc98\ub85c": [787, 793, 812], "\ud53c\ucc98\ub97c": [779, 787, 792, 793, 799, 804, 805], "\ud53c\ucc98\ub9cc": 805, "\ud53c\ucc98\uc5d0": 795, "\ud53c\ucc98\uc640": [792, 793], "\ud53c\ucc98\uc758": [793, 804], "\ud53c\ucc98\uc774\uace0": [792, 809], "\ud53c\ucc98\uc774\ub2e4": 809, "\ud53c\uccd0": [774, 779, 780, 782, 788, 813, 815], "\ud53c\uccd0\uac00": [790, 804], "\ud53c\uccd0\ub294": [787, 799, 804, 810, 813], "\ud53c\uccd0\ub3c4": [782, 787, 815], "\ud53c\uccd0\ub4e4": [777, 805, 813], "\ud53c\uccd0\ub4e4\uacfc": [782, 813], "\ud53c\uccd0\ub4e4\ub85c\ubd80\ud130": 804, "\ud53c\uccd0\ub4e4\ub9cc": 780, "\ud53c\uccd0\ub4e4\uc5d0": [806, 812, 813], "\ud53c\uccd0\ub4e4\uc740": [793, 805, 811], "\ud53c\uccd0\ub4e4\uc744": [780, 782, 787, 790, 799, 800, 801, 803, 805, 813], "\ud53c\uccd0\ub4e4\uc758": 812, "\ud53c\uccd0\ub4e4\uc774": [800, 801, 805, 811], "\ud53c\uccd0\ub85c": 794, "\ud53c\uccd0\ub97c": [787, 790, 793, 794, 795, 798, 801, 804, 809, 813, 815], "\ud53c\uccd0\uc5d0": [795, 799, 806], "\ud53c\uccd0\uc640": [794, 795, 809], "\ud53c\uccd0\uc758": [795, 804, 815], "\ud53c\uccd0\uc774\ub2e4": 813, "\ud53c\ud558\ub294": 795, "\ud53c\ud560": 786, "\ud544\ub4dc": 793, "\ud544\ub4dc\ub294": 782, "\ud544\ub4dc\ub4e4\ub85c": 782, "\ud544\ub4dc\ub4e4\uc740": 782, "\ud544\ub4dc\ub4e4\uc744": 782, "\ud544\ub4dc\ub4e4\uc774\ub2e4": 782, "\ud544\ub4dc\ub97c": 782, "\ud544\ub4dc\uc5d0": [777, 782, 793], "\ud544\ub4dc\uc778": 782, "\ud544\uc694": 809, "\ud544\uc694\uac00": [782, 790, 795, 798, 799, 802], "\ud544\uc694\ub294": 780, "\ud544\uc694\ub85c": [780, 782], "\ud544\uc694\ub85c\ud558\uae30": 802, "\ud544\uc694\ud558\uace0": [798, 799], "\ud544\uc694\ud558\ub2e4": [780, 782, 799, 800, 804, 805, 812, 815], "\ud544\uc694\ud558\uc9c0": 790, "\ud544\uc694\ud55c": [774, 784, 798, 805, 807], "\ud544\uc694\ud55c\ub370": 802, "\ud544\uc694\ud55c\uc9c0": 805, "\ud558\uac70\ub098": 798, "\ud558\uac8c\ub41c\ub2e4": 812, "\ud558\uace0": [789, 797, 799, 800, 812], "\ud558\uae30": [777, 779, 790, 797, 799, 805, 813], "\ud558\ub098\uac00": [796, 815], "\ud558\ub098\ub294": [780, 789, 793, 795], "\ud558\ub098\ub85c": 780, "\ud558\ub098\ub85c\uc11c": 780, "\ud558\ub098\ub97c": [804, 815], "\ud558\ub098\uc529": 805, "\ud558\ub098\uc5d0\uc11c": 783, "\ud558\ub098\uc758": [777, 780, 782, 783, 790, 798, 802, 804, 809, 812, 813, 814], "\ud558\ub294": [774, 779, 780, 782, 793, 800, 801, 805, 806, 814], "\ud558\ub294\ub370": 799, "\ud558\ub294\uc9c0": 782, "\ud558\ub294\uc9c0\ub97c": [805, 808], "\ud558\uba70": 789, "\ud558\uba74": [799, 812], "\ud558\uba74\ub418\uae30": 803, "\ud558\uba74\ub41c\ub2e4": 799, "\ud558\uba74\uc11c": [779, 805], "\ud558\uc774\ub808\ubca8": 793, "\ud558\uc774\ud37c": 814, "\ud558\uc790": [774, 792], "\ud558\uc9c0\ub9cc": [777, 781, 782, 785, 789, 799, 802, 809], "\ud559\uc2b5": [780, 782, 791, 797, 799, 802, 809, 811], "\ud559\uc2b5\uacfc": [779, 798], "\ud559\uc2b5\ub420": 803, "\ud559\uc2b5\uc2dc": 782, "\ud559\uc2b5\uc2dc\ud0a4\ub294": [809, 814], "\ud559\uc2b5\uc5d0": [777, 779, 783, 802, 806], "\ud559\uc2b5\uc5d0\ub3c4": 805, "\ud559\uc2b5\uc5d0\uc11c": [797, 805], "\ud559\uc2b5\uc5d0\uc11c\ub294": [780, 781], "\ud559\uc2b5\uc740": [779, 806, 815], "\ud559\uc2b5\uc744": [779, 780, 781, 783, 798, 805, 806, 813], "\ud559\uc2b5\uc758": [809, 813], "\ud559\uc2b5\uc774": [777, 782, 783, 805, 814], "\ud559\uc2b5\uc774\ub2e4": 814, "\ud559\uc2b5\ud558\uae30": [779, 780, 791, 798, 813], "\ud559\uc2b5\ud558\ub294": [779, 798, 800, 805, 811], "\ud559\uc2b5\ud558\ub294\ub370": [798, 802], "\ud559\uc2b5\ud560": [800, 806, 808, 813], "\ud55c": [776, 779, 780, 781, 782, 783, 787, 790, 804, 810, 814, 815], "\ud55c\uac00\uc9c0": 793, "\ud55c\uac1c\uac00": 813, "\ud55c\uac1c\ub97c": 806, "\ud55c\uac1c\uc529": 813, "\ud55c\uac1c\uc5d0": 799, "\ud55c\uac1c\uc758": [776, 779, 782, 787, 790, 793, 813], "\ud55c\uae00": 791, "\ud55c\ub2e4": [775, 777, 779, 780, 781, 782, 783, 787, 789, 790, 793, 795, 796, 799, 800, 803, 804, 805, 806, 808, 809, 810, 812, 814], "\ud55c\ub2e4\uba74": [800, 812], "\ud55c\ubc88\uc5d0": 802, "\ud55c\ubc88\uc758": 813, "\ud560": [780, 782, 783, 786, 798, 799, 800, 805, 814], "\ud560\ub2f9\ub418\uc5b4": [782, 815], "\ud560\ub2f9\ub418\uc5c8\ub2e4\uba74": 782, "\ud560\ub2f9\ub41c": 782, "\ud560\ub2f9\ub41c\ub2e4": 782, "\ud560\ub2f9\uc73c\ub85c": 787, "\ud560\ub2f9\uc744": 781, "\ud560\ub2f9\ud558\ub294": 787, "\ud560\ub2f9\ud558\uc9c0": 782, "\ud560\ub2f9\ud55c": 782, "\ud560\ub2f9\ud560": 780, "\ud560\ub2f9\ud574\uc57c": 780, "\ud560\uc9c0\ub97c": 781, "\ud568\uaed8": [779, 780, 782, 786, 788, 795, 800, 815], "\ud568\uc218": [777, 789, 790, 792, 795, 806, 807, 815], "\ud568\uc218\uac00": [780, 793, 814], "\ud568\uc218\ub294": [780, 793, 799, 803, 808, 809, 810, 812, 813], "\ud568\uc218\ub4e4": [774, 801], "\ud568\uc218\ub4e4\uacfc": 793, "\ud568\uc218\ub4e4\ub85c": 809, "\ud568\uc218\ub4e4\uc5d0": 793, "\ud568\uc218\ub4e4\uc740": [786, 793, 801, 813], "\ud568\uc218\ub4e4\uc744": [780, 793], "\ud568\uc218\ub4e4\uc774": 799, "\ud568\uc218\ub85c": [775, 793, 812, 813, 814], "\ud568\uc218\ub85c\ub294": 793, "\ud568\uc218\ub97c": [774, 775, 778, 789, 793, 795, 799, 803, 804, 808, 809, 810, 812], "\ud568\uc218\uc548\uc5d0": 813, "\ud568\uc218\uc5d0": 777, "\ud568\uc218\uc5d0\uc11c": [777, 794, 807, 813], "\ud568\uc218\uc5d0\uc11c\uc758": 807, "\ud568\uc218\uc640": 795, "\ud568\uc218\uc758": [777, 793, 799, 808, 809], "\ud568\uc218\uc774\uace0": 799, "\ud568\uc218\uc774\ub2e4": [793, 799, 803, 808, 809, 810], "\ud569": 813, "\ud569\uc0b0\ud558\ub294": 813, "\ud569\uc740": 795, "\ud569\uccd0\uc11c": [792, 813], "\ud569\uccd0\uc57c\ud55c\ub2e4": [799, 805], "\ud569\uccd0\uc9c0\ub294\uc9c0\uc5d0": 802, "\ud569\ucce4\ub294\ub370": 793, "\ud569\uce58\uace0": 813, "\ud569\uce58\ub294": 796, "\ud569\uce58\ub294\ub370": 799, "\ud569\uce5c": 812, "\ud569\uce5c\ub2e4": 790, "\ud569\ud558\ub294": [793, 815], "\ud569\ud574\uc11c": 801, "\ud56d\uc0c1": [782, 786, 793, 799, 809], "\ud574\uacb0\ud558\uae30": 806, "\ud574\ub2f9": [783, 812, 815], "\ud574\ub2f9\ud558\ub294": [789, 805], "\ud574\ub2f9\ud55c\ub2e4": 790, "\ud574\uc11c": [780, 799], "\ud574\uc57c\ud55c\ub2e4": [804, 813], "\ud574\uc5d0": 785, "\ud574\uc8fc\uae30": 793, "\ud574\uc8fc\ub294": [775, 803], "\ud574\uc900\ub2e4": [779, 780, 805], "\ud575\uc2ec": 784, "\ud588\ub2e4\uba74": 785, "\ud588\uc73c\ub2c8": 804, "\ud589": [780, 782, 787], "\ud589\ub4e4": 804, "\ud589\ub82c\uacfc": 786, "\ud589\ub82c\uc744": 786, "\ud589\ub82c\uc758": 795, "\ud589\uc73c\ub85c": 804, "\ud589\uc740": 782, "\ud589\uc758": [780, 804], "\ud5a5\uc0c1\uc2dc\ucf1c\uc11c": 777, "\ud5a5\uc0c1\uc744": 801, "\ud5a5\uc0c1\ud558\uace0": 806, "\ud5a5\ud6c4": 782, "\ud5c8\uc6a9\ub41c\ub2e4": 787, "\ud5c8\uc6a9\ud55c\ub2e4": 806, "\ud5e4\ud14c\ub85c\uadf8\ub798\ud504\ub294": 796, "\ud604\uc0c1\uc744": 786, "\ud604\uc7ac": [779, 780], "\ud604\uc7ac\ub294": [780, 801], "\ud611\uccd0\uc9c4": 813, "\ud615\uc2dd\uc73c\ub85c": 782, "\ud615\ud0dc\ub85c": [779, 782, 785, 786, 793], "\ud615\ud0dc\uc758": [786, 790], "\ud615\ud0dc\uc774\uace0": 782, "\ud638\ucd9c\ub418\uace0": 810, "\ud638\ucd9c\ub418\uc5b4\uc57c": 780, "\ud638\ucd9c\ub41c\ub2e4": 780, "\ud638\ucd9c\ub420": 808, "\ud638\ucd9c\ub85c": [793, 808], "\ud638\ucd9c\uc2dc": 795, "\ud638\ucd9c\uc774": 793, "\ud638\ucd9c\ud558\uae30": 780, "\ud638\ucd9c\ud558\ub294": [793, 797], "\ud638\ucd9c\ud558\uc9c0": 793, "\ud638\ucd9c\ud55c": 780, "\ud638\ucd9c\ud55c\ub2e4": 813, "\ud638\ucd9c\ud560": [790, 793, 800, 803], "\ud638\ucd9c\ud574\uc57c": 795, "\ud638\ud658\ub418\ub294": [798, 811, 813], "\ud638\ud658\ub41c\ub2e4": 806, "\ud655\ub960": 803, "\ud655\ub960\ub4e4": 815, "\ud655\ub960\uc5d0": 799, "\ud655\uc778\ub418\uba74": 809, "\ud655\uc778\ud558\ub294": [775, 809], "\ud655\uc778\ud558\uc790": [777, 803], "\ud655\uc778\ud55c\ub2e4": 800, "\ud655\uc778\ud560": [777, 815], "\ud655\uc7a5\ud558\ub294": [809, 814], "\ud655\uc7a5\ud574\uc11c": 782, "\ud658\uacbd": 782, "\ud658\uc601\ud55c\ub2e4": 807, "\ud65c\uc131\ud654": [806, 809], "\ud65c\uc131\ud654\uc2dc\ud0ac": 793, "\ud65c\uc131\ud654\ud558\uba74": 806, "\ud65c\uc131\ud654\ud574\uc11c": 782, "\ud65c\uc6a9\ud558\uae30": [806, 809], "\ud65c\uc6a9\ud558\ub294": 795, "\ud65c\uc6a9\ud55c": 815, "\ud65c\uc6a9\ud55c\ub2e4": 815, "\ud65c\uc6a9\ud560": 815, "\ud65c\uc6a9\ud574\uc11c": 782, "\ud68c": 815, "\ud68c\uc18c": 786, "\ud6a8\uacfc\uc801\uc73c\ub85c": 813, "\ud6a8\uc728\uc801\uc73c\ub85c": [789, 792], "\ud6a8\uc728\uc801\uc774\uace0": 806, "\ud6a8\uc728\uc801\uc774\ub2e4": 778, "\ud6a8\uc728\uc801\uc778": [792, 804, 809], "\ud6a8\uc728\uc801\uc778\ub370": 795, "\ud6c4": [782, 795, 797, 798, 805, 813], "\ud6c4\uc5d0": [777, 799], "\ud6c4\uc5d0\ub294": 809, "\ud6c4\uc758": [777, 782], "\ud6c4\uc790\uac00": 795, "\ud6c4\uc790\ub294": 780, "\ud6e8\uc52c": [795, 798], "\ud754\ud558\uac8c": 794, "\ud754\ud55c": 793, "\ud754\ud788": [785, 797, 808, 812, 813], "\ud76c\uc18c\ud589\ub82c\uacfc": 786, "\ud788\ub4e0": 815, "\ud835\udc3e": 823}, "titles": ["dgl", "dgl.DGLGraph", "dgl.data", "dgl.dataloading", "dgl.distributed", "dgl.function", "dgl.geometry", "\ud83c\udd95 dgl.graphbolt", "dgl.multiprocessing", "dgl.ops", "dgl.optim", "dgl.sampling", "dgl.sparse", "API Reference", "Benchmark the performance of KNN algorithms", "dgl.nn (MXNet)", "dgl.nn (PyTorch)", "dgl.nn (TensorFlow)", "dgl.nn.functional", "dgl.transforms", "User-defined Functions", "Contribute to DGL", "DGL Foreign Function Interface (FFI)", "Environment Variables", "Frequently Asked Questions (FAQ)", "&lt;no title&gt;", "dgl.DGLGraph.__getitem__", "dgl.DGLGraph.add_edges", "dgl.DGLGraph.add_nodes", "dgl.DGLGraph.add_self_loop", "dgl.DGLGraph.adj", "dgl.DGLGraph.adj_external", "dgl.DGLGraph.adj_tensors", "dgl.DGLGraph.adjacency_matrix", "dgl.DGLGraph.apply_edges", "dgl.DGLGraph.apply_nodes", "dgl.DGLGraph.batch_num_edges", "dgl.DGLGraph.batch_num_nodes", "dgl.DGLGraph.batch_size", "dgl.DGLGraph.canonical_etypes", "dgl.DGLGraph.cpu", "dgl.DGLGraph.create_formats_", "dgl.DGLGraph.device", "dgl.DGLGraph.dstdata", "dgl.DGLGraph.dstnodes", "dgl.DGLGraph.dsttypes", "dgl.DGLGraph.edata", "dgl.DGLGraph.edge_attr_schemes", "dgl.DGLGraph.edge_ids", "dgl.DGLGraph.edge_subgraph", "dgl.DGLGraph.edge_type_subgraph", "dgl.DGLGraph.edges", "dgl.DGLGraph.etypes", "dgl.DGLGraph.filter_edges", "dgl.DGLGraph.filter_nodes", "dgl.DGLGraph.find_edges", "dgl.DGLGraph.formats", "dgl.DGLGraph.has_edges_between", "dgl.DGLGraph.has_nodes", "dgl.DGLGraph.idtype", "dgl.DGLGraph.in_degrees", "dgl.DGLGraph.in_edges", "dgl.DGLGraph.inc", "dgl.DGLGraph.incidence_matrix", "dgl.DGLGraph.int", "dgl.DGLGraph.is_homogeneous", "dgl.DGLGraph.is_multigraph", "dgl.DGLGraph.is_pinned", "dgl.DGLGraph.is_unibipartite", "dgl.DGLGraph.line_graph", "dgl.DGLGraph.local_scope", "dgl.DGLGraph.long", "dgl.DGLGraph.metagraph", "dgl.DGLGraph.multi_update_all", "dgl.DGLGraph.ndata", "dgl.DGLGraph.node_attr_schemes", "dgl.DGLGraph.node_type_subgraph", "dgl.DGLGraph.nodes", "dgl.DGLGraph.ntypes", "dgl.DGLGraph.num_dst_nodes", "dgl.DGLGraph.num_edges", "dgl.DGLGraph.num_nodes", "dgl.DGLGraph.num_src_nodes", "dgl.DGLGraph.number_of_dst_nodes", "dgl.DGLGraph.number_of_edges", "dgl.DGLGraph.number_of_nodes", "dgl.DGLGraph.number_of_src_nodes", "dgl.DGLGraph.out_degrees", "dgl.DGLGraph.out_edges", "dgl.DGLGraph.pin_memory_", "dgl.DGLGraph.predecessors", "dgl.DGLGraph.prop_edges", "dgl.DGLGraph.prop_nodes", "dgl.DGLGraph.pull", "dgl.DGLGraph.push", "dgl.DGLGraph.remove_edges", "dgl.DGLGraph.remove_nodes", "dgl.DGLGraph.remove_self_loop", "dgl.DGLGraph.reorder_graph", "dgl.DGLGraph.reverse", "dgl.DGLGraph.send_and_recv", "dgl.DGLGraph.set_batch_num_edges", "dgl.DGLGraph.set_batch_num_nodes", "dgl.DGLGraph.srcdata", "dgl.DGLGraph.srcnodes", "dgl.DGLGraph.srctypes", "dgl.DGLGraph.subgraph", "dgl.DGLGraph.successors", "dgl.DGLGraph.to", "dgl.DGLGraph.to_canonical_etype", "dgl.DGLGraph.to_cugraph", "dgl.DGLGraph.to_simple", "dgl.DGLGraph.unpin_memory_", "dgl.DGLGraph.update_all", "dgl.add_edges", "dgl.add_nodes", "dgl.add_reverse_edges", "dgl.add_self_loop", "dgl.adj_product_graph", "dgl.adj_sum_graph", "dgl.adjusted_homophily", "dgl.apply_each", "dgl.batch", "dgl.bfs_edges_generator", "dgl.bfs_nodes_generator", "dgl.bipartite_from_networkx", "dgl.bipartite_from_scipy", "dgl.block_to_graph", "dgl.broadcast_edges", "dgl.broadcast_nodes", "dgl.compact_graphs", "dgl.create_block", "AIFBDataset", "AMDataset", "ActorDataset", "AmazonCoBuyComputerDataset", "AmazonCoBuyPhotoDataset", "AmazonRatingsDataset", "AsGraphPredDataset", "AsLinkPredDataset", "AsNodePredDataset", "BA2MotifDataset", "BACommunityDataset", "BAShapeDataset", "BGSDataset", "BitcoinOTCDataset", "CIFAR10SuperPixelDataset", "CLUSTERDataset", "CSVDataset", "ChameleonDataset", "CiteseerGraphDataset", "CoauthorCSDataset", "CoauthorPhysicsDataset", "CoraFullDataset", "CoraGraphDataset", "CornellDataset", "DGLDataset", "FB15k237Dataset", "FB15kDataset", "FakeNewsDataset", "FlickrDataset", "FraudAmazonDataset", "FraudDataset", "FraudYelpDataset", "GDELTDataset", "GINDataset", "ICEWS18Dataset", "KarateClubDataset", "LegacyTUDataset", "MNISTSuperPixelDataset", "MUTAGDataset", "MinesweeperDataset", "MiniGCDataset", "MovieLensDataset", "PATTERNDataset", "PPIDataset", "PubmedGraphDataset", "QM7bDataset", "QM9Dataset", "QM9EdgeDataset", "QuestionsDataset", "RedditDataset", "RomanEmpireDataset", "SBMMixtureDataset", "SSTDataset", "SquirrelDataset", "TUDataset", "TexasDataset", "TolokersDataset", "TreeCycleDataset", "TreeGridDataset", "WN18Dataset", "WikiCSDataset", "WisconsinDataset", "YelpDataset", "ZINCDataset", "Subset", "add_node_property_split", "add_nodepred_split", "check_sha1", "download", "extract_archive", "get_download_dir", "load_info", "load_labels", "mask_nodes_by_property", "save_info", "split_dataset", "dgl.dataloading.BlockSampler", "ClusterGCNSampler", "DataLoader", "DistEdgeDataLoader", "DistNodeDataLoader", "GraphDataLoader", "LaborSampler", "MultiLayerFullNeighborSampler", "NeighborSampler", "SAINTSampler", "Sampler", "ShaDowKHopSampler", "dgl.dataloading.as_edge_prediction_sampler", "LazyFeature", "set_dst_lazy_features", "set_edge_lazy_features", "set_node_lazy_features", "set_src_lazy_features", "GlobalUniform", "PerSourceUniform", "Uniform", "dgl.dfs_edges_generator", "dgl.dfs_labeled_edges_generator", "dgl.distributed.dgl_partition_to_graphbolt", "dgl.distributed.edge_split", "dgl.distributed.find_edges", "dgl.distributed.in_subgraph", "dgl.distributed.initialize", "dgl.distributed.load_partition", "dgl.distributed.load_partition_book", "dgl.distributed.load_partition_feats", "dgl.distributed.node_split", "dgl.distributed.partition_graph", "dgl.distributed.sample_etype_neighbors", "dgl.distributed.sample_neighbors", "dgl.double_radius_node_labeling", "dgl.edge_homophily", "dgl.edge_label_informativeness", "dgl.edge_subgraph", "dgl.edge_type_subgraph", "dgl.from_cugraph", "dgl.from_networkx", "dgl.from_scipy", "dgl.function.copy_e", "dgl.function.copy_u", "dgl.function.e_add_u", "dgl.function.e_add_v", "dgl.function.e_div_u", "dgl.function.e_div_v", "dgl.function.e_dot_u", "dgl.function.e_dot_v", "dgl.function.e_mul_u", "dgl.function.e_mul_v", "dgl.function.e_sub_u", "dgl.function.e_sub_v", "dgl.function.max", "dgl.function.mean", "dgl.function.min", "dgl.function.sum", "dgl.function.u_add_e", "dgl.function.u_add_v", "dgl.function.u_div_e", "dgl.function.u_div_v", "dgl.function.u_dot_e", "dgl.function.u_dot_v", "dgl.function.u_mul_e", "dgl.function.u_mul_v", "dgl.function.u_sub_e", "dgl.function.u_sub_v", "dgl.function.v_add_e", "dgl.function.v_add_u", "dgl.function.v_div_e", "dgl.function.v_div_u", "dgl.function.v_dot_e", "dgl.function.v_dot_u", "dgl.function.v_mul_e", "dgl.function.v_mul_u", "dgl.function.v_sub_e", "dgl.function.v_sub_u", "dgl.graph", "BasicFeatureStore", "BuiltinDataset", "CopyTo", "DataLoader", "Dataset", "DistributedItemSampler", "Feature", "FeatureFetcher", "FeatureStore", "FusedCSCSamplingGraph", "GPUCachedFeature", "HeteroItemSet", "InSubgraphSampler", "ItemSampler", "ItemSet", "LayerNeighborSampler", "LegacyDataset", "MiniBatch", "MiniBatchTransformer", "NegativeSampler", "NeighborSampler", "OnDiskDataset", "SampledSubgraph", "SampledSubgraphImpl", "SamplingGraph", "SubgraphSampler", "Task", "TemporalLayerNeighborSampler", "TemporalNeighborSampler", "TorchBasedFeature", "TorchBasedFeatureStore", "UniformNegativeSampler", "dgl.graphbolt.add_reverse_edges", "dgl.graphbolt.compact_csc_format", "dgl.graphbolt.etype_str_to_tuple", "dgl.graphbolt.etype_tuple_to_str", "dgl.graphbolt.exclude_seed_edges", "dgl.graphbolt.expand_indptr", "dgl.graphbolt.from_dglgraph", "dgl.graphbolt.fused_csc_sampling_graph", "dgl.graphbolt.index_select", "dgl.graphbolt.isin", "dgl.graphbolt.load_from_shared_memory", "dgl.graphbolt.seed", "dgl.graphbolt.unique_and_compact", "dgl.graphbolt.unique_and_compact_csc_formats", "dgl.heterograph", "dgl.in_subgraph", "dgl.is_libxsmm_enabled", "dgl.khop_adj", "dgl.khop_graph", "dgl.khop_in_subgraph", "dgl.khop_out_subgraph", "dgl.knn_graph", "dgl.lap_pe", "dgl.laplacian_lambda_max", "dgl.line_graph", "dgl.linkx_homophily", "dgl.load_graphs", "dgl.max_edges", "dgl.max_nodes", "dgl.mean_edges", "dgl.mean_nodes", "dgl.merge", "dgl.metapath_reachable_graph", "dgl.metis_partition", "dgl.metis_partition_assignment", "dgl.multiprocessing.pytorch.call_once_and_share", "dgl.multiprocessing.pytorch.shared_tensor", "dgl.nn.functional.edge_softmax", "HeteroGraphConv", "AGNNConv", "APPNPConv", "ChebConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "EdgeConv", "GATConv", "GINConv", "GMMConv", "GatedGraphConv", "GraphConv", "NNConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SortPooling", "SumPooling", "Sequential", "DeepWalk", "HeteroEmbedding", "HeteroGraphConv", "HeteroLinear", "MetaPath2Vec", "TypedLinear", "AGNNConv", "APPNPConv", "AtomicConv", "CFConv", "ChebConv", "CuGraphGATConv", "CuGraphRelGraphConv", "CuGraphSAGEConv", "DGNConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "DotGatConv", "EGATConv", "EGNNConv", "EdgeConv", "EdgeGATConv", "EdgeWeightNorm", "GATConv", "GATv2Conv", "GCN2Conv", "GINConv", "GINEConv", "GMMConv", "GatedGCNConv", "GatedGraphConv", "GraphConv", "GroupRevRes", "HGTConv", "NNConv", "PNAConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "TWIRLSConv", "TWIRLSUnfoldingAndAttention", "GNNExplainer", "HeteroGNNExplainer", "HeteroPGExplainer", "HeteroSubgraphX", "PGExplainer", "SubgraphX", "KNNGraph", "RadiusGraph", "SegmentedKNNGraph", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SetTransformerDecoder", "SetTransformerEncoder", "SortPooling", "SumPooling", "WeightAndSum", "BiasedMHA", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "LapPosEncoder", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "EdgePredictor", "TransE", "TransR", "NodeEmbedding", "JumpingKnowledge", "LabelPropagation", "Sequential", "WeightBasis", "APPNPConv", "ChebConv", "GATConv", "GINConv", "GraphConv", "RelGraphConv", "SAGEConv", "SGConv", "AvgPooling", "GlobalAttentionPooling", "HeteroGraphConv", "MaxPooling", "SortPooling", "SumPooling", "dgl.node_homophily", "dgl.node_label_informativeness", "dgl.node_subgraph", "dgl.node_type_subgraph", "dgl.norm_by_dst", "dgl.ops.copy_e_max", "dgl.ops.copy_e_mean", "dgl.ops.copy_e_min", "dgl.ops.copy_e_sum", "dgl.ops.copy_u", "dgl.ops.copy_u_max", "dgl.ops.copy_u_mean", "dgl.ops.copy_u_min", "dgl.ops.copy_u_sum", "dgl.ops.copy_v", "dgl.ops.e_add_u", "dgl.ops.e_add_v", "dgl.ops.e_div_u", "dgl.ops.e_div_v", "dgl.ops.e_dot_u", "dgl.ops.e_dot_v", "dgl.ops.e_mul_u", "dgl.ops.e_mul_v", "dgl.ops.e_sub_u", "dgl.ops.e_sub_v", "dgl.ops.gather_mm", "dgl.ops.gsddmm", "dgl.ops.gspmm", "dgl.ops.segment_mm", "dgl.ops.segment_reduce", "dgl.ops.u_add_e", "dgl.ops.u_add_e_max", "dgl.ops.u_add_e_mean", "dgl.ops.u_add_e_min", "dgl.ops.u_add_e_sum", "dgl.ops.u_add_v", "dgl.ops.u_div_e", "dgl.ops.u_div_e_max", "dgl.ops.u_div_e_mean", "dgl.ops.u_div_e_min", "dgl.ops.u_div_e_sum", "dgl.ops.u_div_v", "dgl.ops.u_dot_e", "dgl.ops.u_dot_v", "dgl.ops.u_mul_e", "dgl.ops.u_mul_e_max", "dgl.ops.u_mul_e_mean", "dgl.ops.u_mul_e_min", "dgl.ops.u_mul_e_sum", "dgl.ops.u_mul_v", "dgl.ops.u_sub_e", "dgl.ops.u_sub_e_max", "dgl.ops.u_sub_e_mean", "dgl.ops.u_sub_e_min", "dgl.ops.u_sub_e_sum", "dgl.ops.u_sub_v", "dgl.ops.v_add_e", "dgl.ops.v_add_u", "dgl.ops.v_div_e", "dgl.ops.v_div_u", "dgl.ops.v_dot_e", "dgl.ops.v_dot_u", "dgl.ops.v_mul_e", "dgl.ops.v_mul_u", "dgl.ops.v_sub_e", "dgl.ops.v_sub_u", "dgl.out_subgraph", "dgl.partition_graph_with_halo", "dgl.prop_edges", "dgl.prop_edges_dfs", "dgl.prop_nodes", "dgl.prop_nodes_bfs", "dgl.prop_nodes_topo", "dgl.radius_graph", "dgl.rand_bipartite", "dgl.rand_graph", "dgl.random_walk_pe", "dgl.readout_edges", "dgl.readout_nodes", "dgl.remove_edges", "dgl.remove_nodes", "dgl.remove_self_loop", "dgl.reorder_graph", "dgl.reverse", "dgl.sampling.PinSAGESampler", "dgl.sampling.global_uniform_negative_sampling", "dgl.sampling.node2vec_random_walk", "dgl.sampling.pack_traces", "dgl.sampling.random_walk", "dgl.sampling.sample_labors", "dgl.sampling.sample_neighbors", "dgl.sampling.sample_neighbors_biased", "dgl.sampling.select_topk", "dgl.save_graphs", "dgl.seed", "dgl.segmented_knn_graph", "dgl.shortest_dist", "dgl.slice_batch", "dgl.softmax_edges", "dgl.softmax_nodes", "dgl.sort_csc_by_tag", "dgl.sort_csr_by_tag", "dgl.sparse.SparseMatrix.T", "dgl.sparse.SparseMatrix.coalesce", "dgl.sparse.SparseMatrix.col", "dgl.sparse.SparseMatrix.coo", "dgl.sparse.SparseMatrix.cpu", "dgl.sparse.SparseMatrix.csc", "dgl.sparse.SparseMatrix.csr", "dgl.sparse.SparseMatrix.cuda", "dgl.sparse.SparseMatrix.device", "dgl.sparse.SparseMatrix.double", "dgl.sparse.SparseMatrix.dtype", "dgl.sparse.SparseMatrix.float", "dgl.sparse.SparseMatrix.has_duplicate", "dgl.sparse.SparseMatrix.indices", "dgl.sparse.SparseMatrix.int", "dgl.sparse.SparseMatrix.long", "dgl.sparse.SparseMatrix.neg", "dgl.sparse.SparseMatrix.nnz", "dgl.sparse.SparseMatrix.reduce", "dgl.sparse.SparseMatrix.row", "dgl.sparse.SparseMatrix.shape", "dgl.sparse.SparseMatrix.smax", "dgl.sparse.SparseMatrix.smean", "dgl.sparse.SparseMatrix.smin", "dgl.sparse.SparseMatrix.softmax", "dgl.sparse.SparseMatrix.sum", "dgl.sparse.SparseMatrix.t", "dgl.sparse.SparseMatrix.to", "dgl.sparse.SparseMatrix.to_dense", "dgl.sparse.SparseMatrix.transpose", "dgl.sparse.SparseMatrix.val", "dgl.sparse.add", "dgl.sparse.bsddmm", "dgl.sparse.bspmm", "dgl.sparse.diag", "dgl.sparse.div", "dgl.sparse.from_coo", "dgl.sparse.from_csc", "dgl.sparse.from_csr", "dgl.sparse.identity", "dgl.sparse.matmul", "dgl.sparse.mul", "dgl.sparse.power", "dgl.sparse.sddmm", "dgl.sparse.softmax", "dgl.sparse.sp_add_v", "dgl.sparse.sp_broadcast_v", "dgl.sparse.sp_div_v", "dgl.sparse.sp_mul_v", "dgl.sparse.sp_sub_v", "dgl.sparse.spmatrix", "dgl.sparse.spmm", "dgl.sparse.spspmm", "dgl.sparse.sub", "dgl.sparse.val_like", "dgl.sum_edges", "dgl.sum_nodes", "dgl.svd_pe", "dgl.to_bidirected", "dgl.to_block", "dgl.to_cugraph", "dgl.to_double", "dgl.to_float", "dgl.to_half", "dgl.to_heterogeneous", "dgl.to_homogeneous", "dgl.to_networkx", "dgl.to_simple", "dgl.to_simple_graph", "dgl.topk_edges", "dgl.topk_nodes", "dgl.topological_nodes_generator", "AddEdge", "AddMetaPaths", "AddReverse", "AddSelfLoop", "BaseTransform", "Compose", "DropEdge", "DropNode", "FeatMask", "GCNNorm", "GDC", "HeatKernel", "KHopGraph", "LapPE", "LineGraph", "NodeShuffle", "PPR", "RandomWalkPE", "RemoveSelfLoop", "RowFeatNormalizer", "SIGNDiffusion", "SVDPE", "ToLevi", "ToSimple", "dgl.udf.EdgeBatch.batch_size", "dgl.udf.EdgeBatch.data", "dgl.udf.EdgeBatch.dst", "dgl.udf.EdgeBatch.edges", "dgl.udf.EdgeBatch.src", "dgl.udf.NodeBatch.batch_size", "dgl.udf.NodeBatch.data", "dgl.udf.NodeBatch.mailbox", "dgl.udf.NodeBatch.nodes", "dgl.unbatch", "dgl.use_libxsmm", "Prepare Data", "\ud83c\udd95 Tutorial: Graph Transformer", "Build Model", "Chapter 4: Graph Data Pipeline", "4.1 DGLDataset class", "4.2 Download raw data (optional)", "4.6 Loading data from CSV files", "4.5 Loading OGB datasets using <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> package", "4.3 Process data", "4.4 Save and load data", "Chapter 7: Distributed Training", "7.3 Programming APIs", "7.5 Heterogeneous Graph Under The Hood", "7.4 Advanced Graph Partitioning", "7.1 Data Preprocessing", "7.2 Tools for launching distributed training/inference", "Chapter 1: Graph", "1.1 Some Basic Definitions about Graphs (Graphs 101)", "1.4 Creating Graphs from External Sources", "1.3 Node and Edge Features", "1.6 Using DGLGraph on a GPU", "1.2 Graphs, Nodes, and Edges", "1.5 Heterogeneous Graphs", "User Guide", "Chapter 2: Message Passing", "2.1 Built-in Functions and Message Passing APIs", "2.2 Writing Efficient Message Passing Code", "2.5 Message Passing on Heterogeneous Graph", "2.3 Apply Message Passing On Part Of The Graph", "Chapter 6: Stochastic Training on Large Graphs", "6.4 Implementing Custom Graph Samplers", "6.2 Training GNN for Edge Classification with Neighborhood Sampling", "6.8 Using GPU for Neighborhood Sampling", "6.7 Exact Offline Inference on Large Graphs", "6.3 Training GNN for Link Prediction with Neighborhood Sampling", "6.6 Implementing Custom GNN Module for Mini-batch Training", "6.1 Training GNN for Node Classification with Neighborhood Sampling", "6.9 Data Loading Parallelism", "6.5 Training GNN with DGL sparse", "Chapter 8: Mixed Precision Training", "Chapter 3: Building GNN Modules", "3.1 DGL NN Module Construction Function", "3.2 DGL NN Module Forward Function", "3.3 Heterogeneous GraphConv Module", "Chapter 5: Training Graph Neural Networks", "5.2 Edge Classification/Regression", "5.5 Use of Edge Weights", "5.4 Graph Classification", "5.3 Link Prediction", "5.1 Node Classification/Regression", "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053", "4.1 DGLDataset\u7c7b", "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09", "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6", "4.3 \u5904\u7406\u6570\u636e", "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e", "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3", "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API", "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406", "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177", "\u7b2c1\u7ae0\uff1a\u56fe", "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5", "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe", "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81", "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph", "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9", "1.5 \u5f02\u6784\u56fe", "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011", "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f", "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API", "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801", "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3", "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668", "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad", "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757", "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757", "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570", "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570", "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757", "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc", "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52", "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd", "5.4 \u6574\u56fe\u5206\u7c7b", "5.3 \u94fe\u63a5\u9884\u6d4b", "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52", "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778", "4.1 DGLDataset \ud074\ub798\uc2a4", "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)", "4.5 <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30", "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1", "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529", "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5", "7.2 \ubd84\uc0b0 APIs", "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30", "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac", "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4", "1\uc7a5: \uadf8\ub798\ud504", "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)", "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30", "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98", "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30", "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0", "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)", "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]", "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)", "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4", "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30", "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95", "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec", "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30", "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5", "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30", "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30", "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860", "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30", "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "8\uc7a5: Mixed Precision \ud559\uc2b5", "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30", "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218", "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218", "3.3 Heterogeneous GraphConv \ubaa8\ub4c8", "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30", "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)", "5.4 \uadf8\ub798\ud504 \ubd84\ub958", "5.3 \ub9c1\ud06c \uc608\uce21", "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)", "Welcome to Deep Graph Library Tutorials and Documentation", "Install and Setup", "Building a Graph Convolutional Network Using Sparse Matrices", "Graph Diffusion in Graph Neural Networks", "Graph Transformer in a Nutshell", "Hypergraph Neural Networks", "Tutorials: dgl.sparse", "Quickstart", "Performance Benchmarks", "Resources", "Computation times", "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt", "Link Prediction", "Multi-GPU Node Classification", "Neighbor Sampling Overview", "Node Classification", "Composing OnDiskDataset from raw data", "YAML specification", "OnDiskDataset for Heterogeneous Graph", "OnDiskDataset for Homogeneous Graph", "Node Classification with DGL", "How Does DGL Represent A Graph?", "Write your own GNN module", "Link Prediction using Graph Neural Networks", "Training a GNN for Graph Classification", "Make Your Own Dataset", "A Blitz Introduction to DGL", "Computation times", "Improve Scalability on Multi-Core CPUs", "CPU Best Practices", "Training on CPUs", "Computation times", "Distributed Node Classification", "Distributed Link Prediction", "Distributed training", "Computation times", "Graph Convolutional Network", "Relational Graph Convolutional Network", "Line Graph Neural Network", "Understand Graph Attention Network", "Graph neural networks and its variants", "Computation times", "Tree-LSTM in DGL", "Batching many small graphs", "Computation times", "Generative Models of Graphs", "Generative models", "Computation times", "Capsule Network", "Transformer as a Graph Neural Network", "Revisit classic models from a graph perspective", "Computation times", "Paper Study with DGL", "Computation times", "Single Machine Multi-GPU Minibatch Graph Classification", "Single Machine Multi-GPU Minibatch Node Classification", "Training on Multiple GPUs", "Computation times"], "titleterms": {"": [836, 837, 838, 840, 855], "1": [687, 697, 699, 700, 701, 702, 703, 704, 705, 708, 719, 724, 732, 734, 741, 744, 745, 746, 747, 748, 749, 752, 762, 764, 772, 774, 781, 782, 785, 786, 787, 788, 789, 790, 793, 805, 808, 815, 823, 844, 855, 858, 861], "101": [700, 785], "1\uc7a5": 784, "2": [688, 697, 698, 704, 707, 708, 709, 710, 711, 714, 725, 728, 735, 740, 748, 752, 753, 754, 755, 758, 765, 768, 775, 780, 781, 789, 793, 794, 795, 796, 797, 800, 809, 812, 823, 844, 855, 858, 861, 864], "2\uc7a5": 792, "3": [691, 694, 702, 711, 717, 723, 724, 725, 726, 731, 737, 742, 746, 755, 760, 764, 765, 766, 771, 777, 781, 787, 797, 803, 808, 809, 810, 814, 824, 844, 855, 858, 861, 864], "3\uc7a5": 807, "4": [686, 687, 688, 689, 690, 691, 692, 696, 701, 713, 730, 734, 735, 736, 737, 738, 745, 757, 770, 774, 775, 776, 777, 778, 783, 786, 794, 799, 813, 824, 844, 855], "4\uc7a5": 773, "5": [690, 695, 705, 710, 721, 727, 728, 729, 730, 731, 732, 736, 749, 754, 761, 768, 769, 770, 771, 772, 776, 790, 796, 804, 812, 813, 814, 815, 824, 844], "5\uc7a5": 811, "6": [689, 703, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 747, 757, 758, 759, 760, 761, 762, 788, 799, 800, 801, 802, 803, 804, 805, 824, 844], "6\uc7a5": 798, "7": [693, 694, 695, 696, 697, 698, 716, 740, 741, 742, 780, 781, 782, 783, 801, 844], "7\uc7a5": 779, "8": [715, 722, 844], "8\uc7a5": 806, "9": 720, "A": [837, 840, 842, 853], "For": [714, 717, 719], "Of": 711, "On": 711, "One": 854, "The": [695, 711, 853, 858, 861], "__getitem__": 26, "about": 700, "abstract": 854, "access": [694, 695, 848], "across": 829, "action": 861, "activ": [12, 823], "actordataset": 134, "adapt": [2, 714, 719, 865], "add": [607, 861], "add_edg": [27, 114], "add_nod": [28, 115], "add_node_property_split": 197, "add_nodepred_split": 198, "add_reverse_edg": [116, 320], "add_self_loop": [29, 117], "addedg": 648, "addmetapath": 649, "addrevers": 650, "addselfloop": 651, "adj": 30, "adj_extern": 31, "adj_product_graph": 118, "adj_sum_graph": 119, "adj_tensor": 32, "adjac": [0, 1], "adjacency_matrix": 33, "adjusted_homophili": 120, "advanc": 696, "after": [695, 713, 725], "aggreg": 865, "agnnconv": [359, 389], "aifbdataset": 132, "algorithm": [14, 696, 854], "all": 865, "alloc": 845, "altern": 845, "amazoncobuycomputerdataset": 135, "amazoncobuyphotodataset": 136, "amazonratingsdataset": 137, "amdataset": 133, "an": [728, 854], "api": [9, 13, 694, 697, 708, 780, 858], "api\ub4e4": 793, "appli": 711, "apply_each": 121, "apply_edg": [34, 839], "apply_nod": 35, "appnpconv": [360, 390, 460], "approach": 712, "argo": 844, "as_edge_prediction_sampl": 220, "asgraphpreddataset": 138, "ask": 24, "aslinkpreddataset": 139, "asnodepreddataset": 140, "assign": 837, "atomicconv": 391, "attent": [820, 855, 865], "attribut": [12, 823], "avgpool": [376, 435, 468], "ba2motifdataset": 141, "backend": [23, 817], "bacommunitydataset": 142, "balanc": 697, "base": [2, 715], "basetransform": 652, "bashapedataset": 143, "basic": 700, "basicfeaturestor": 288, "batch": [0, 1, 122, 718, 730, 813, 840, 848, 849, 854, 858, 859, 868, 871], "batch_num_edg": 36, "batch_num_nod": 37, "batch_siz": [38, 672, 677], "benchmark": [14, 824], "best": [838, 845], "bfloat16": 722, "bfs_edges_gener": 123, "bfs_nodes_gener": 124, "bgsdataset": 144, "biasedmha": 444, "binari": [701, 705, 854], "bipartit": [718, 799, 804], "bipartite_from_networkx": 125, "bipartite_from_scipi": 126, "bitcoinotcdataset": 145, "blitz": 842, "block_to_graph": 127, "blocksampl": 208, "book": 4, "brief": 853, "broadcast": [12, 823], "broadcast_edg": 128, "broadcast_nod": 129, "bsddmm": 608, "bspmm": 609, "bucket": 20, "build": [21, 685, 723, 818, 865], "built": [5, 708, 865], "builtindataset": 289, "call_once_and_shar": 355, "canonical_etyp": 39, "capsul": 864, "cell": 858, "cfconv": 392, "chain": 854, "chameleondataset": 149, "chang": 21, "chapter": [686, 693, 699, 707, 712, 722, 723, 727], "chebconv": [361, 393, 461], "check": 725, "check_sha1": 199, "choos": 861, "chunk": 697, "cifar10superpixeldataset": 146, "citeseergraphdataset": 150, "class": [2, 3, 12, 687, 841, 865], "classic": [866, 868], "classif": [691, 714, 719, 728, 730, 732, 829, 831, 834, 835, 836, 840, 841, 848, 870, 871], "client": 848, "clusterdataset": 147, "clustergcnsampl": 209, "coalesc": 577, "coauthorcsdataset": 151, "coauthorphysicsdataset": 152, "code": [21, 709], "col": 578, "comma": [701, 705, 786, 790], "commun": [848, 849, 854], "compact_csc_format": 321, "compact_graph": 130, "complet": [16, 854], "compos": [653, 832], "comput": [1, 730, 826, 831, 843, 847, 851, 857, 860, 863, 865, 867, 869, 873], "conclus": [14, 828, 831], "conda": 817, "configur": 23, "construct": [724, 837], "contain": 22, "contribut": [21, 816], "control": 1, "conv": [15, 16, 17], "convers": 695, "convert": 705, "convolut": [818, 836, 852, 853], "coo": 579, "copy_": 251, "copy_e_max": 479, "copy_e_mean": 480, "copy_e_min": 481, "copy_e_sum": 482, "copy_u": [252, 483], "copy_u_max": 484, "copy_u_mean": 485, "copy_u_min": 486, "copy_u_sum": 487, "copy_v": 488, "copyto": [7, 290], "cora": [836, 854, 855], "corafulldataset": 153, "coragraphdataset": 154, "core": [21, 844], "cornelldataset": 155, "cpu": [40, 580, 722, 844, 845, 846], "creat": [0, 701, 705, 823, 841, 853], "create_block": 131, "create_formats_": 41, "creation": [12, 694], "csc": 581, "csr": 582, "csv": [689, 701, 705, 745, 749, 786, 790, 841], "csvdataset": [148, 841], "cuda": [583, 715], "cugraph": 16, "cugraphgatconv": 394, "cugraphrelgraphconv": 395, "cugraphsageconv": 396, "custom": [689, 713, 718, 838], "data": [2, 9, 21, 23, 673, 678, 683, 686, 688, 689, 691, 692, 694, 695, 697, 714, 715, 717, 719, 720, 730, 821, 828, 829, 831, 832, 834, 835, 840, 841, 870, 871], "dataload": [3, 4, 7, 208, 210, 220, 291], "dataset": [2, 7, 292, 689, 690, 691, 828, 831, 836, 841, 853, 854, 858, 865], "dataset_nam": 833, "deep": 816, "deepwalk": 383, "defin": [20, 22, 714, 717, 719, 828, 829, 831, 836, 838, 839, 840, 848, 849, 853, 858, 864, 871], "definit": [700, 730], "deg": 854, "degre": [20, 685], "degreeencod": 445, "dens": [15, 16], "densechebconv": [362, 398], "densegraphconv": [363, 399], "densesageconv": [364, 400], "depend": [829, 831], "descript": [6, 389, 390, 391, 392, 397, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 412, 413, 414, 415, 418, 419, 421, 422, 423, 424, 425, 452, 453, 454, 456], "destin": 861, "detect": 854, "develop": 21, "devic": [1, 42, 584], "dfs_edges_gener": 229, "dfs_labeled_edges_gener": 230, "dgl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 208, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 694, 701, 705, 715, 721, 724, 725, 745, 764, 780, 786, 790, 801, 808, 809, 822, 823, 828, 829, 831, 834, 835, 836, 837, 840, 841, 842, 852, 853, 854, 855, 858, 865, 868], "dgl_partition_to_graphbolt": 231, "dgldataset": [156, 687, 774, 841], "dgldataset\u7c7b": 734, "dglgraph": [1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 703, 788], "dglgraph\ub85c": 782, "dgl\u4e8c\u8fdb\u5236\u683c\u5f0f": 749, "dgl\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": 740, "dgmg": 861, "dgnconv": 397, "diag": 610, "diagon": 823, "differ": [728, 817], "diffus": 819, "disk": [701, 705], "dispatch": 697, "distedgedataload": 211, "distembed": [694, 780], "distgraph": [694, 780], "distnodedataload": 212, "distribut": [4, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 693, 694, 695, 697, 698, 780, 848, 849, 850, 870], "distributeditemsampl": 293, "div": 611, "doc": 21, "document": [21, 816], "doe": 837, "dotgatconv": 401, "doubl": 585, "double_radius_node_label": 243, "download": [200, 688], "dropedg": 654, "dropnod": 655, "dst": 674, "dstdata": 43, "dstnode": 44, "dsttype": 45, "dtype": 586, "dure": 695, "dynam": 861, "e_add_u": [253, 489], "e_add_v": [254, 490], "e_div_u": [255, 491], "e_div_v": [256, 492], "e_dot_u": [257, 493], "e_dot_v": [258, 494], "e_mul_u": [259, 495], "e_mul_v": [260, 496], "e_sub_u": [261, 497], "e_sub_v": [262, 498], "each": 870, "edata": 46, "edg": [1, 2, 20, 51, 675, 694, 701, 702, 704, 705, 713, 714, 728, 729, 745, 786, 837, 861, 865], "edge_attr_schem": 47, "edge_homophili": 244, "edge_id": 48, "edge_label_inform": 245, "edge_softmax": 357, "edge_split": 232, "edge_subgraph": [49, 246], "edge_type_subgraph": [50, 247], "edgebatch": [672, 673, 674, 675, 676], "edgeconv": [365, 404], "edgedata": 689, "edgegatconv": 405, "edgepredictor": 452, "edgeweightnorm": 406, "editori": 21, "effici": 709, "egatconv": 402, "egnnconv": 403, "egtlay": 446, "element": 823, "elementwis": [12, 823], "embed": [4, 10, 16, 861], "enabl": [844, 848], "encod": [0, 685, 861], "end": [722, 806], "environ": [23, 848, 849], "equat": 855, "etyp": 52, "etype_str_to_tupl": 322, "etype_tuple_to_str": 323, "evalu": [821, 828, 829, 871], "even": 838, "everyth": 855, "exact": 716, "exampl": [21, 357, 697, 722], "exclud": 713, "exclude_seed_edg": 324, "execut": 865, "exercis": 823, "exist": 728, "expand_indptr": 325, "extern": 701, "extract": 0, "extract_arch": 201, "f": 854, "fakenewsdataset": 159, "faq": 24, "farthest": 6, "fb15k237dataset": 157, "fb15kdataset": 158, "featmask": 656, "featur": [1, 3, 7, 21, 294, 689, 702, 725, 834, 835, 837, 839], "feature_data": 833, "featurefetch": [7, 295], "featurestor": [7, 296], "ffi": 22, "file": [689, 834, 835], "filter_edg": 53, "filter_nod": 54, "find_edg": [55, 233], "flickrdataset": 160, "float": 587, "flow": 861, "folder": 689, "foreign": 22, "format": [1, 56, 696, 697, 701, 705], "formula": 852, "forward": [685, 725, 809], "fraudamazondataset": 161, "frauddataset": 162, "fraudyelpdataset": 163, "frequent": 24, "from": [689, 701, 705, 714, 728, 817, 832, 841, 854, 866, 868], "from_coo": 612, "from_csc": 613, "from_csr": 614, "from_cugraph": 248, "from_dglgraph": 326, "from_networkx": 249, "from_scipi": 250, "full": [689, 853], "function": [3, 5, 9, 12, 18, 20, 22, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 357, 708, 715, 724, 725, 823, 829, 838, 864, 865, 870], "fuse": 854, "fused_csc_sampling_graph": 327, "fusedcscsamplinggraph": 297, "gat": 855, "gatconv": [366, 407, 462], "gatedgcnconv": 413, "gatedgraphconv": [369, 414], "gather_mm": 499, "gathermm": 9, "gatv2conv": 408, "gcn": [818, 836, 852, 853, 855], "gcn2conv": 409, "gcnnorm": 657, "gdc": 658, "gdeltdataset": 164, "gener": [21, 834, 835, 861, 862, 868], "geometri": 6, "get": [816, 848, 849], "get_download_dir": 202, "ginconv": [367, 410, 463], "gindataset": 165, "gineconv": 411, "git": 21, "github": 21, "global": [15, 16, 17, 23], "global_uniform_negative_sampl": 559, "globalattentionpool": [377, 436, 469], "globaluniform": 226, "gml": [701, 745, 786], "gmmconv": [368, 412], "gnn": [714, 717, 718, 719, 721, 723, 763, 800, 803, 804, 805, 807, 819, 827, 836, 838, 839, 840, 844, 848, 849], "gnnexplain": 426, "gpu": [703, 715, 801, 829, 836, 870, 871, 872], "gpucachedfeatur": 298, "gpu\uc5d0\uc11c": 788, "graph": [0, 1, 2, 4, 7, 16, 287, 357, 684, 686, 689, 691, 694, 695, 696, 697, 699, 700, 701, 704, 705, 710, 711, 712, 713, 714, 716, 717, 718, 719, 725, 727, 728, 730, 731, 732, 790, 804, 809, 816, 818, 819, 820, 833, 834, 835, 836, 837, 839, 840, 841, 848, 849, 852, 853, 854, 855, 856, 859, 861, 865, 866, 868, 870], "graphbolt": [7, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 827, 848], "graphconv": [370, 415, 464, 726, 810], "graphdata": 689, "graphdataload": 213, "graphorm": 685, "graphormerlay": 447, "graphsag": [717, 839], "group": 870, "grouprevr": 416, "gsddmm": [9, 500], "gspmm": [9, 501], "guid": 706, "half": [722, 806], "handl": [831, 853], "has_dupl": 588, "has_edges_between": 57, "has_nod": 58, "head": [820, 855, 865], "heatkernel": 659, "heteroembed": 384, "heterogen": [15, 16, 17, 357, 689, 695, 705, 710, 713, 714, 717, 718, 719, 726, 727, 728, 730, 731, 732, 781, 782, 790, 799, 800, 803, 804, 805, 810, 811, 812, 813, 814, 815, 834], "heterognnexplain": 427, "heterograph": [334, 705], "heterographconv": [358, 385, 470, 726, 810], "heterographconv\u7684\u5b9e\u73b0\u903b\u8f91": 766, "heteroitemset": 299, "heterolinear": 386, "heteropgexplain": 428, "heterosubgraphx": 429, "hgnn": 821, "hgtconv": 417, "homogen": [357, 705, 718, 804, 835], "homophili": 0, "hood": 695, "host": 21, "how": [831, 837, 865], "hyper": 845, "hypergraph": 821, "i": 854, "icews18dataset": 166, "id": [1, 695, 697, 782, 848, 849], "idea": [853, 854, 864], "ident": 615, "idtyp": 59, "implement": [713, 716, 718, 726, 728, 852, 853, 854, 861, 864, 865], "import": 871, "improv": 844, "in_degre": 60, "in_edg": 61, "in_subgraph": [234, 335], "inc": 62, "incid": 1, "incidence_matrix": 63, "index": 816, "index_select": 328, "indic": 589, "infer": [698, 716, 849, 854], "inform": [0, 1], "initi": [4, 235, 694, 823, 848, 849, 870], "input": 696, "instal": [696, 817, 828, 829, 831, 834, 835, 844], "instanti": [834, 835], "insubgraphsampl": 300, "int": [64, 590], "integr": 824, "intel": 845, "interact": 855, "interfac": [21, 22], "introduc": 855, "introduct": [842, 853, 861], "is_homogen": 65, "is_libxsmm_en": 336, "is_multigraph": 66, "is_pin": 67, "is_unibipartit": 68, "isin": 329, "itemsampl": [7, 301], "itemset": [7, 302], "its": [856, 868], "job": 848, "json": [701, 745, 786], "jumpingknowledg": 456, "karateclubdataset": 167, "kei": [853, 854, 864], "khop_adj": 337, "khop_graph": 338, "khop_in_subgraph": 339, "khop_out_subgraph": 340, "khopgraph": 660, "knn": 14, "knn_graph": 341, "knngraph": 432, "knowledg": 16, "label": [0, 689], "labelpropag": 457, "laborsampl": 214, "lap_p": 342, "laplacian_lambda_max": 343, "lapp": 661, "lapposencod": 448, "larg": [712, 716], "launch": [698, 848], "layer": [15, 16, 17, 685, 818, 820, 821, 853, 854, 865], "layerneighborsampl": 303, "lazyfeatur": 221, "learn": [15, 16, 17, 855], "legacydataset": 304, "legacytudataset": 168, "less": 689, "level": 689, "lgnn": 854, "librari": [701, 816], "line": 854, "line_graph": [69, 344], "linear": [12, 823], "linegraph": 662, "link": [3, 16, 691, 717, 731, 828, 834, 835, 839, 841, 849, 853], "linkx_homophili": 345, "linux": 817, "load": [4, 689, 690, 692, 695, 697, 701, 705, 720, 730, 821, 828, 831, 836, 837, 839, 840, 871], "load_from_shared_memori": 330, "load_graph": 346, "load_info": 203, "load_label": 204, "load_partit": 236, "load_partition_book": 237, "load_partition_feat": 238, "loader": [714, 715, 717, 719, 828, 829, 831, 840, 870], "local": 21, "local_scop": 70, "logic": 726, "long": [71, 591], "loop": [714, 717, 719, 728, 730, 731, 732, 812, 815, 828, 829, 831, 838, 839, 840, 848, 849, 853, 858, 871], "lsc": 697, "lstm": 858, "machin": [870, 871], "maco": 817, "mag240m": 697, "mailbox": 679, "main": [858, 861, 865, 870], "make": [697, 841], "mani": [859, 868], "manipul": 1, "map": 697, "mask_nodes_by_properti": 205, "match": 6, "matmul": 616, "matric": 818, "matrix": [1, 12, 823, 854], "max": 263, "max_edg": 347, "max_nod": 348, "maxpool": [378, 437, 471], "mean": 264, "mean_edg": 349, "mean_nod": 350, "measur": 0, "memori": 845, "merg": 351, "messag": [0, 5, 9, 20, 707, 708, 709, 710, 711, 722, 725, 729, 792, 830, 838, 854, 858, 864, 865], "metagraph": [1, 72], "metapath2vec": 387, "metapath_reachable_graph": 352, "method": [12, 823], "meti": 696, "metis_partit": 353, "metis_partition_assign": 354, "mfg": 718, "mfg\ub97c": 804, "min": 265, "minesweeperdataset": 171, "mini": [718, 848, 849, 871], "minibatch": [7, 305, 714, 717, 719, 870, 871], "minibatchtransform": 306, "minigcdataset": 172, "misc": 1, "mix": [722, 806], "mnistsuperpixeldataset": 169, "mode": 694, "model": [21, 685, 714, 717, 719, 728, 730, 732, 820, 828, 829, 831, 839, 840, 848, 849, 852, 853, 861, 862, 864, 866, 868, 870, 871], "modul": [9, 15, 16, 17, 694, 718, 723, 724, 725, 726, 729, 838], "more": 838, "movielensdataset": 173, "mul": 617, "multi": [820, 829, 844, 855, 865, 870, 871], "multi_update_al": 73, "multilayerfullneighborsampl": 215, "multipl": [12, 21, 689, 705, 823, 854, 872], "multiprocess": [8, 355, 356], "mutagdataset": 170, "mutat": 1, "mxnet": [15, 817], "ndata": 74, "neg": [3, 11, 592, 717, 803, 839], "negativesampl": [7, 307], "neighbor": [6, 11, 714, 715, 717, 828, 829, 830, 831, 848], "neighborhood": [712, 714, 715, 717, 719, 798], "neighborsampl": [216, 308], "network": [16, 727, 730, 732, 818, 819, 821, 836, 839, 848, 849, 852, 853, 854, 855, 856, 864, 865, 868], "neural": [727, 730, 732, 819, 821, 839, 854, 856, 865, 868], "new": [21, 22], "next": [836, 837, 838, 840, 855], "nf": 848, "nn": [15, 16, 17, 18, 357, 724, 725, 729, 808, 809], "nnconv": [371, 418], "nnz": 593, "nn\u6a21\u5757\u7684forward\u51fd\u6570": 765, "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": 764, "node": [1, 2, 4, 10, 20, 77, 680, 691, 694, 701, 702, 704, 719, 728, 732, 745, 786, 828, 829, 831, 834, 835, 836, 837, 841, 848, 849, 861, 871], "node2vec_random_walk": 560, "node_attr_schem": 75, "node_homophili": 474, "node_label_inform": 475, "node_split": 239, "node_subgraph": 476, "node_type_subgraph": [76, 477], "nodebatch": [677, 678, 679, 680], "nodedata": 689, "nodeembed": 455, "nodeshuffl": 663, "non": [12, 823], "norm_by_dst": 478, "ntype": 78, "num_dst_nod": 79, "num_edg": 80, "num_nod": 81, "num_src_nod": 82, "number_of_dst_nod": 83, "number_of_edg": 84, "number_of_nod": 85, "number_of_src_nod": 86, "nutshel": 820, "object": [841, 861], "offlin": 716, "ogb": [690, 776], "ondiskdataset": [309, 832, 834, 835], "one": 852, "onli": 848, "op": [0, 9, 12, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539], "openmp": 845, "oper": [4, 12, 823, 854], "optim": [4, 10, 861], "option": [23, 688, 775], "organ": [834, 835], "origin": 714, "other": 829, "out": 0, "out_degre": 87, "out_edg": 88, "out_subgraph": 540, "output": [696, 725], "overview": [712, 727, 728, 730, 731, 732, 827, 830, 836, 839, 840, 841, 852], "own": [838, 841, 844], "pack_trac": 561, "packag": [690, 828, 829, 831, 834, 835, 871], "paper": 868, "paradigm": [707, 792], "parallel": [696, 720, 854], "parmeti": [696, 782], "parmetis\ub97c": 782, "parser": 689, "part": 711, "partit": [0, 4, 695, 696, 697, 848, 849], "partition_graph": 240, "partition_graph_with_halo": 541, "pass": [9, 20, 707, 708, 709, 710, 711, 722, 725, 729, 792, 830, 838, 854, 858, 864, 865], "path": 685, "pathencod": 449, "patterndataset": 174, "perform": [14, 824, 828], "persourceuniform": 227, "perspect": [866, 868], "pgexplain": 430, "pin_memory_": 89, "pinsagesampl": [558, 715], "pip": 817, "pipelin": [686, 697], "platform": 21, "pnaconv": 419, "point": 6, "pool": [15, 16, 17], "posit": [0, 839], "postprocess": 865, "power": 618, "ppi": 855, "ppidataset": 175, "ppr": 664, "practic": [838, 845], "precis": [722, 806], "precision\uc744": 806, "predecessor": 90, "predict": [2, 3, 16, 691, 717, 728, 731, 828, 834, 835, 839, 841, 849, 853], "prefetch": 3, "prepar": [683, 834, 835, 839, 870], "preprocess": [695, 697, 865], "prev": 854, "procedur": [829, 871], "process": [21, 691, 829, 870, 871], "program": [694, 844], "progress": 854, "prop_edg": [91, 542], "prop_edges_df": 543, "prop_nod": [92, 544], "prop_nodes_bf": 545, "prop_nodes_topo": 546, "propag": [0, 861], "protein": 855, "pubmedgraphdataset": 176, "pull": 93, "push": 94, "put": [855, 858, 861, 865], "pytorch": [16, 355, 356, 817], "qm7bdataset": 177, "qm9dataset": 178, "qm9edgedataset": 179, "queri": [1, 837], "question": 24, "questionsdataset": 180, "quickstart": 823, "r": 853, "radiu": 854, "radius_graph": 547, "radiusgraph": 433, "rand_bipartit": 548, "rand_graph": 549, "random": 11, "random_walk": 562, "random_walk_p": 550, "randomwalkneighborsampl": 715, "randomwalkp": 665, "raw": [688, 775, 832], "read": 0, "readout": [730, 813], "readout_edg": 551, "readout_nod": 552, "redditdataset": 181, "reduc": [5, 9, 594, 725, 823], "reduct": 829, "refer": [13, 848, 849], "regress": [728, 732, 812, 815], "relat": [0, 9, 853], "relgraphconv": [372, 420, 465], "remov": 714, "remove_edg": [95, 553], "remove_nod": [96, 554], "remove_self_loop": [97, 555], "removeselfloop": 666, "reorder_graph": [98, 556], "repositori": 23, "repres": 837, "represent": 828, "requir": 817, "resourc": 825, "result": 14, "revers": [99, 557], "review": 830, "revisit": [866, 868], "roadmap": [686, 699, 707, 712, 723, 727], "romanempiredataset": 182, "row": 595, "rowfeatnorm": 667, "run": 696, "sageconv": [373, 421, 466], "saintsampl": 217, "sampl": [4, 11, 558, 559, 560, 561, 562, 563, 564, 565, 566, 694, 712, 713, 714, 715, 717, 719, 798, 830, 848], "sample_etype_neighbor": 241, "sample_labor": 563, "sample_neighbor": [242, 564], "sample_neighbors_bias": 565, "sampledsubgraph": 310, "sampledsubgraphimpl": 311, "sampler": [3, 6, 218, 713, 714, 719, 828, 829, 831, 848, 849], "samplinggraph": 312, "save": [692, 837], "save_graph": 567, "save_info": 206, "sbmmixturedataset": 183, "scalabl": 844, "scenario": 827, "score": 16, "script": [848, 849], "sddmm": 619, "second": 853, "seed": [331, 568], "segment": 9, "segment_mm": 502, "segment_reduc": 503, "segmented_knn_graph": 569, "segmentedknngraph": 434, "segmentmm": 9, "select_topk": 566, "send_and_recv": 100, "separ": [701, 705, 786, 790], "sequenti": [382, 458], "server": 848, "set": [839, 845, 848, 849, 854], "set2set": [379, 438], "set_batch_num_edg": 101, "set_batch_num_nod": 102, "set_dst_lazy_featur": 222, "set_edge_lazy_featur": 223, "set_node_lazy_featur": 224, "set_src_lazy_featur": 225, "settransformerdecod": 439, "settransformerencod": 440, "setup": [21, 817, 848], "sgconv": [374, 422, 467], "shadowkhopsampl": 219, "shape": 596, "shared_tensor": 356, "shortest_dist": 570, "side": 848, "signdiffus": 668, "simpl": 865, "singl": [689, 870, 871], "slice_batch": 571, "small": [859, 868], "smax": 597, "smean": 598, "smin": 599, "softmax": [600, 620, 823], "softmax_edg": 572, "softmax_nod": 573, "some": 700, "sort_csc_by_tag": 574, "sort_csr_by_tag": 575, "sortpool": [380, 441, 472], "sourc": [701, 817], "sp_add_v": 621, "sp_broadcast_v": 622, "sp_div_v": 623, "sp_mul_v": 624, "sp_sub_v": 625, "spars": [1, 12, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 721, 818, 820, 822, 823, 854], "sparsematrix": [576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606], "spatial": 685, "spatialencod": 450, "spatialencoder3d": 451, "spawn": [829, 871], "specif": [689, 697, 725, 809, 833, 865], "speed": 865, "split": [4, 694, 780], "split_dataset": 207, "spmatrix": 626, "spmm": 627, "spspmm": 628, "squirreldataset": 185, "src": 676, "srcdata": 103, "srcnode": 104, "srctype": 105, "ssh": 848, "sstdataset": 184, "standalon": [694, 780], "start": 816, "step": [697, 844, 858, 864], "stochast": [712, 798, 827], "structur": [1, 689, 694, 799, 834, 835, 837, 854, 865], "studi": 868, "style": 21, "sub": 629, "subgraph": [0, 106, 705, 854], "subgraphsampl": [7, 313], "subgraphx": 431, "subset": 196, "successor": 107, "sum": [266, 601], "sum_edg": 631, "sum_nod": 632, "sumpool": [381, 442, 473], "supervis": 854, "support": [9, 21, 715], "svd_pe": 633, "svdpe": 669, "system": 817, "t": [576, 602], "tagconv": [375, 423], "task": [314, 833, 834, 835, 853, 854, 858, 865], "temporallayerneighborsampl": 315, "temporalneighborsampl": 316, "tensor": [4, 694, 780, 854], "tensorflow": [17, 817], "test": [21, 839, 854, 864], "texasdataset": 187, "text": 854, "thread": 845, "time": [826, 843, 847, 851, 857, 860, 863, 867, 869, 873], "tip": 697, "to_bidirect": 634, "to_block": 635, "to_canonical_etyp": 109, "to_cugraph": [110, 636], "to_dens": 604, "to_doubl": 637, "to_float": 638, "to_half": 639, "to_heterogen": 640, "to_homogen": 641, "to_networkx": 642, "to_simpl": [111, 643], "to_simple_graph": 644, "togeth": [855, 858, 861, 865], "tolevi": 670, "tolokersdataset": 188, "tool": 698, "top": 689, "topk_edg": 645, "topk_nod": 646, "topologi": 1, "topological_nodes_gener": 647, "torchbasedfeatur": 317, "torchbasedfeaturestor": 318, "tosimpl": 671, "tra": 828, "train": [693, 698, 712, 714, 717, 718, 719, 721, 722, 727, 728, 730, 731, 732, 818, 819, 820, 821, 827, 829, 831, 836, 838, 839, 840, 846, 848, 849, 850, 853, 854, 865, 871, 872], "trainer": [829, 871], "trane": 871, "trans": 453, "transform": [0, 1, 3, 16, 19, 684, 820, 823, 837, 865], "transpos": 605, "transr": 454, "travers": [0, 858], "tree": 858, "treecycledataset": 189, "treegriddataset": 190, "tudataset": 186, "tutori": [684, 816, 822], "twirlsconv": 424, "twirlsunfoldingandattent": 425, "type": [1, 9, 22, 705, 725, 728, 809], "typedlinear": 388, "u_add_": [267, 504], "u_add_e_max": 505, "u_add_e_mean": 506, "u_add_e_min": 507, "u_add_e_sum": 508, "u_add_v": [268, 509], "u_div_": [269, 510], "u_div_e_max": 511, "u_div_e_mean": 512, "u_div_e_min": 513, "u_div_e_sum": 514, "u_div_v": [270, 515], "u_dot_": [271, 516], "u_dot_v": [272, 517], "u_mul_": [273, 518], "u_mul_e_max": 519, "u_mul_e_mean": 520, "u_mul_e_min": 521, "u_mul_e_sum": 522, "u_mul_v": [274, 523], "u_sub_": [275, 524], "u_sub_e_max": 525, "u_sub_e_mean": 526, "u_sub_e_min": 527, "u_sub_e_sum": 528, "u_sub_v": [276, 529], "ubuntu": 848, "udf": [672, 673, 674, 675, 676, 677, 678, 679, 680], "unbatch": 681, "under": 695, "understand": 855, "uniform": 228, "uniformnegativesampl": 319, "unique_and_compact": 332, "unique_and_compact_csc_format": 333, "unit": 21, "univers": 865, "unpin_memory_": 112, "up": [848, 849, 854, 865], "updat": [725, 861], "update_al": 113, "us": [1, 690, 703, 715, 729, 818, 839], "use_libxsmm": 682, "user": [20, 706, 838], "util": [0, 2, 3, 7, 15, 16, 695], "uva": 715, "v": [694, 780], "v0": 824, "v_add_": [277, 530], "v_add_u": [278, 531], "v_div_": [279, 532], "v_div_u": [280, 533], "v_dot_": [281, 534], "v_dot_u": [282, 535], "v_mul_": [283, 536], "v_mul_u": [284, 537], "v_sub_": [285, 538], "v_sub_u": [286, 539], "val": 606, "val_lik": 630, "valid": [848, 849], "valu": [701, 705, 786, 790], "variabl": 23, "variant": [856, 868], "via": [21, 841, 861], "visual": [854, 855, 865], "walk": 11, "web": 21, "weight": [729, 829], "weightandsum": 443, "weightbasi": 459, "welcom": 816, "what": [836, 837, 838, 840, 854, 855], "wikicsdataset": 192, "window": 817, "wisconsindataset": 193, "wise": [20, 823], "wn18dataset": 191, "work": [705, 718, 817], "workload": [4, 694, 780], "write": [709, 718, 730, 732, 838], "x": 854, "y": 854, "yaml": [689, 833, 834, 835], "yelpdataset": 194, "your": [714, 719, 838, 841, 844], "zincdataset": 195, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": 735, "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": 768, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": 761, "\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": 761, "\u4e8c\u8fdb\u5236\u683c\u5f0f": 745, "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": 745, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": 745, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": 745, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": 749, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": 736, "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": 749, "\u4f7f\u7528\u8fb9\u6743\u91cd": 769, "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": 769, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": 738, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": 744, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": 752, "\u5206\u5272\u6570\u636e\u96c6": 740, "\u5206\u5e03\u5f0f\u56fe": 740, "\u5206\u5e03\u5f0f\u5d4c\u5165": 740, "\u5206\u5e03\u5f0f\u5f20\u91cf": 740, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": 740, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": 740, "\u5206\u5e03\u5f0f\u8bad\u7ec3": 739, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": 741, "\u5206\u5e03\u5f0f\u91c7\u6837": 740, "\u521b\u5efadistgraph": 740, "\u521b\u5efa\u5f02\u6784\u56fe": 749, "\u5305\u542b\u8fc7\u65f6\u4fe1\u606f": 750, "\u53ef\u9009": 735, "\u56de\u5f52": [768, 772], "\u56fe": [743, 748], "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": 733, "\u56fe\u8bfb\u51fa": 770, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 747, "\u5728nn\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": 769, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 755, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": 756, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 754, "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": 768, "\u5904\u7406\u6570\u636e": 737, "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 737, "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": 737, "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": 737, "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": 757, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [758, 762], "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 757, "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 757, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": 759, "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 761, "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": 749, "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": 758, "\u5f02\u6784\u56fe": 749, "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": 762, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": 766, "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 770, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": 761, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": 758, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 772, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 768, "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": 757, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 771, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 760, "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": 757, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 767, "\u6279\u6b21": 756, "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": 770, "\u6279\u6b21\u7684\u56fe": 770, "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": 757, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": 742, "\u6570\u636e\u52a0\u8f7d": 770, "\u6574\u56fe\u5206\u7c7b": 770, "\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": 765, "\u672c\u7ae0\u8def\u7ebf\u56fe": [733, 743, 751, 756, 763, 767], "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": 763, "\u683c\u5f0f": 745, "\u6982\u8ff0": [767, 768, 770, 771, 772], "\u6a21\u5757": 763, "\u6a21\u578b\u5b9a\u4e49": 770, "\u6a21\u578b\u7684\u8bad\u7ec3": [758, 760, 762, 768, 770, 771, 772], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": 765, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": 751, "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 757, "\u7528\u6237\u6307\u5357": 750, "\u7b2c1\u7ae0": 743, "\u7b2c2\u7ae0": 751, "\u7b2c3\u7ae0": 763, "\u7b2c4\u7ae0": 733, "\u7b2c5\u7ae0": 767, "\u7b2c6\u7ae0": 756, "\u7b2c7\u7ae0": 739, "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": 760, "\u7f16\u5199dgl": 765, "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [770, 772], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": 753, "\u805a\u5408\u540e": 765, "\u8282\u70b9\u5206\u7c7b": 772, "\u8282\u70b9\u548c\u8fb9": 748, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 746, "\u8bad\u7ec3": 756, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": 767, "\u8bbf\u95ee\u56fe\u7ed3\u6784": 740, "\u8bbf\u95ee\u8282\u70b9": 740, "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [760, 762], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": 758, "\u8d1f\u8f7d\u5747\u8861": 741, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": 759, "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": 765, "\u8fb9\u5206\u7c7b": 768, "\u8fb9\u6570\u636e": 740, "\u8fb9\u7c7b\u578b\u5b50\u56fe": 749, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 742, "\u9017\u53f7\u5206\u9694\u503c": [745, 749], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": 756, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 762, "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 758, "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 760, "\u94fe\u63a5\u9884\u6d4b": 771, "\uac00\uc774\ub4dc": 791, "\uac00\uc911\uce58": 794, "\uac1c\uc694": [798, 811, 812, 813, 814, 815], "\uacb0\uacfc": 782, "\uacb0\uacfc\ub4e4\uc744": 782, "\uacbd\uc6b0": [800, 803, 805], "\uad6c\uc870": [780, 799], "\uad6c\ud604": 810, "\uad6c\ud604\uc0c1\uc758": 812, "\uad6c\ud604\ud558\uae30": [799, 802, 804], "\uadf8\ub798\ud504": [773, 777, 780, 781, 784, 785, 786, 789, 790, 797, 804, 809, 811, 812, 813, 815], "\uadf8\ub798\ud504\ub4e4": [799, 804, 814], "\uadf8\ub798\ud504\ub4e4\uc5d0": 802, "\uadf8\ub798\ud504\ub4e4\uc758": 813, "\uadf8\ub798\ud504\ub85c": 790, "\uadf8\ub798\ud504\ub97c": 790, "\uadf8\ub798\ud504\uc5d0": [782, 785, 798, 813], "\uadf8\ub798\ud504\uc5d0\uc11c": 800, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": 796, "\uadf8\ub798\ud504\uc758": [800, 803, 805, 812], "\uadf8\ub9ac\uace0": [789, 804], "\uae30\ubc18\uc758": 801, "\uae30\ubcf8\uc801\uc778": 785, "\ub098\ub204\uae30": 780, "\ub124\ud2b8\uc6cc\ud06c": [811, 813, 815], "\ub178\ub4dc": [777, 780, 782, 789, 805, 812, 815], "\ub178\ub4dc\uc640": 787, "\ub274\ub7f4": [811, 813, 815], "\ub2e4\ub8e8\uae30": 790, "\ub2e4\uc591\ud55c": 790, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 775, "\ub2e8\ub3c5": 780, "\ub300\ud55c": [782, 785, 798, 812], "\ub300\ud578": 802, "\ub370\uc774\ud130": [773, 775, 777, 778, 780, 781, 800, 801, 803, 805, 813], "\ub370\uc774\ud130\uc14b": 777, "\ub370\uc774\ud130\uc14b\ub4e4": 776, "\ub3d9\uc885": 790, "\ub4a4\uccd0\uc9c4": 791, "\ub514\uc2a4\ud06c\uc5d0\uc11c": [786, 790], "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c": 786, "\ub7f0\uce6d\ud558\uae30": 783, "\ub808\uc774\uc5b4": 799, "\ub85c\ub354": [800, 803, 805], "\ub85c\ub354\uc5d0\uc11c": 801, "\ub85c\ub4dc": 782, "\ub85c\ub4dc\ub9f5": [773, 784, 792, 798, 807, 811], "\ub85c\ub4dc\ud558\uae30": 776, "\ub85c\ub529": [778, 813], "\ub85c\ub529\ud558\uae30": [786, 790], "\ub85c\uc9c1": 810, "\ub8f9": [800, 803, 805, 812, 813, 814, 815], "\ub9ac\uadf8\ub798\uc158": 815, "\ub9ac\uadf8\ub808\uc158": 812, "\ub9ac\ub4dc\uc544\uc6c3": 813, "\ub9c1\ud06c": [777, 803, 814], "\ub9cc\ub4e4\uae30": [800, 803, 805, 807], "\ub9de\uac8c": [800, 803, 805], "\ub9e4\ud551": 782, "\uba40\ud2f0": 799, "\uba54\uc2dc\uc9c0": [793, 794, 795, 796, 799, 806, 809], "\uba54\uc9c0\uc2dc": [792, 797], "\uba85\uc138\ud654": 809, "\uba87\uac00\uc9c0": 785, "\ubaa8\ub378": [800, 803, 805, 813, 815], "\ubaa8\ub378\uacfc": 812, "\ubaa8\ub378\uc744": [800, 803, 805], "\ubaa8\ub4c8": [780, 804, 807, 808, 810], "\ubaa8\ub4c8\uc758": 809, "\ubaa8\ub4dc": 780, "\ubbf8\ub2c8": [800, 803, 804, 805], "\ubbf8\ub2c8\ubc30\uce58": 799, "\ubc0f": [782, 793, 800, 803, 805, 812], "\ubc14\uc774\ub108\ub9ac": [786, 790], "\ubc29\ubc95": [795, 798], "\ubc30\uce58": [800, 803, 804, 805, 813], "\ubc30\uce58\uc758": 800, "\ubc38\ub7f0\uc2f1": 782, "\ubcc0\ud658\ud558\uae30": [782, 790], "\ubd84\ub958": [777, 800, 805, 812, 813, 815], "\ubd84\uc0b0": [779, 780, 781, 782, 783], "\ube4c\ud2b8\uc778": 793, "\uc0ac\uc6a9\uc790": 791, "\uc0ac\uc6a9\ud558\uae30": [788, 801], "\uc0ac\uc6a9\ud55c": [786, 800, 803, 805, 806], "\uc0ac\uc6a9\ud574\uc11c": [776, 786], "\uc0d8\ud50c\ub7ec": [799, 800, 803, 805], "\uc0d8\ud50c\ub7ec\ub97c": 801, "\uc0d8\ud50c\ub9c1": [780, 781, 798, 799, 801], "\uc0d8\ud50c\ub9c1\uc5d0": 801, "\uc0d8\ud50c\ub9c1\uc744": [800, 803, 805], "\uc0dd\uc131": [780, 808], "\uc0dd\uc131\ud558\uae30": [782, 786, 790], "\uc11c\ube0c\uadf8\ub798\ud504": 790, "\uc124\uce58": 782, "\uc18c\uc2a4\ub97c": 786, "\uc2dc\ub300\uc5d0": 791, "\uc2e4\ud589\ud558\uae30": 782, "\uc5c5\ub370\uc774\ud2b8": 809, "\uc5d0\uc9c0": [780, 782, 789, 790, 794, 800, 812], "\uc5d0\uc9c0\ub4e4": 800, "\uc5d0\uc9c0\ub4e4\uc5d0": 812, "\uc5d0\uc9c0\uc758": 787, "\uc5f0\uc0b0\ud558\uae30": 813, "\uc608\uce21": [777, 803, 814], "\uc608\uce21\ud558\uae30": 812, "\uc624\ud504\ub77c\uc778": 802, "\uc678\ubd80": 786, "\uc6cc\ud06c\ub85c\ub4dc": 780, "\uc6d0\ubcf8": 800, "\uc704\ud55c": [782, 783, 799, 804, 809], "\uc704\ud574\uc11c": 800, "\uc758\uc874\uc131": 799, "\uc774\ubd84": [799, 804], "\uc774\uc6c3": [798, 799, 800, 801, 803, 805], "\uc774\uc885": [790, 796], "\uc77c\ubd80\uc5d0": 797, "\uc785\ub825": 782, "\uc791\uc131": 795, "\uc791\uc131\ud558\uae30": [804, 813, 815], "\uc800\uc7a5\uacfc": 778, "\uc801\uc6a9\ud558\uae30": [794, 797], "\uc804\ub2ec": [792, 793, 795, 796, 797, 799, 806], "\uc804\ub2ec\uacfc": 809, "\uc804\ub2ec\uc5d0": 794, "\uc804\ub2ec\uc744": 799, "\uc804\ucc98\ub9ac": 782, "\uc811\uadfc": 780, "\uc811\uadfc\ud558\uae30": 781, "\uc815\uc758": 785, "\uc815\uc758\ud558\uae30": [800, 803, 805, 813], "\uc815\ud655\ud55c": 802, "\uc81c\uac70\ud558\uae30": 800, "\uc9c1\uc811": 799, "\ucc28\uc774\uc810": 812, "\ucc3e\uae30": 799, "\uccb4\ud06c\uc640": 809, "\ucd08\uae30\ud654": 780, "\ucd94\ub860": 802, "\ucd94\ub860\uc744": 783, "\ucd95\uc57d": 809, "\ucd9c\ub825\uac12\uc744": 809, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": 799, "\ucee4\uc2a4\ud140": [799, 804], "\ucf54\ub4dc": 795, "\ud070": [798, 802], "\ud074\ub798\uc2a4": 774, "\ud0c0\uc785": [790, 809, 812], "\ud0c0\uc785\uc744": 790, "\ud150\uc11c": 780, "\ud234\ub4e4": 783, "\ud30c\uc774\ud504\ub77c\uc778": 773, "\ud30c\ud2f0\uc154\ub2dd": 782, "\ud328\ub7ec\ub2e4\uc784": 792, "\ud328\ud0a4\uc9c0\ub97c": 776, "\ud3ec\uba67": [782, 786, 790], "\ud3ec\uba67\ub4e4": 782, "\ud504\ub85c\uc138\uc2f1": 777, "\ud53c\ucc98": 787, "\ud53c\ucc98\ub4e4": 782, "\ud53c\uccd0": 809, "\ud559\uc2b5": [779, 783, 798, 800, 803, 805, 806, 812, 813, 814, 815], "\ud559\uc2b5\uc5d0": [800, 803, 805], "\ud559\uc2b5\uc744": [782, 804], "\ud559\uc2b5\ud558\uae30": [781, 800, 803, 805, 811], "\ud568\uaed8": 801, "\ud568\uc218": [793, 808, 809], "\ud568\uc218\uc640": 801, "\ud574\ubcf4\uae30": 799, "\ud6a8\uc728\uc801\uc778": 795, "\ud6c4": 809}})