Search.setIndex({"alltitles": {"1.1 Some Basic Definitions about Graphs (Graphs 101)": [[702, null]], "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [[746, null]], "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)": [[787, null]], "1.2 Graphs, Nodes, and Edges": [[706, null]], "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9": [[750, null]], "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0": [[791, null]], "1.3 Node and Edge Features": [[704, null]], "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [[748, null]], "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98": [[789, null]], "1.4 Creating Graphs from External Sources": [[703, null]], "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [[747, null]], "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[788, null]], "1.5 Heterogeneous Graphs": [[707, null]], "1.5 \u5f02\u6784\u56fe": [[751, null]], "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)": [[792, null]], "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30": [[790, null]], "1.6 Using DGLGraph on a GPU": [[705, null]], "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph": [[749, null]], "1\uc7a5: \uadf8\ub798\ud504": [[786, null]], "2.1 Built-in Functions and Message Passing APIs": [[710, null]], "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API": [[754, null]], "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4": [[795, null]], "2.2 Writing Efficient Message Passing Code": [[711, null]], "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [[755, null]], "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95": [[797, null]], "2.3 Apply Message Passing On Part Of The Graph": [[713, null]], "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[757, null]], "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30": [[799, null]], "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30": [[796, null]], "2.5 Message Passing on Heterogeneous Graph": [[712, null]], "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [[756, null]], "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[798, null]], "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)": [[794, null]], "3.1 DGL NN Module Construction Function": [[726, null]], "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218": [[810, null]], "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [[766, null]], "3.2 DGL NN Module Forward Function": [[727, null]], "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218": [[811, null]], "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570": [[767, null]], "3.3 Heterogeneous GraphConv Module": [[728, null]], "3.3 Heterogeneous GraphConv \ubaa8\ub4c8": [[812, null]], "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757": [[768, null]], "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30": [[809, null]], "4.1 DGLDataset class": [[689, null]], "4.1 DGLDataset \ud074\ub798\uc2a4": [[776, null]], "4.1 DGLDataset\u7c7b": [[736, null]], "4.2 Download raw data (optional)": [[690, null]], "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)": [[777, null]], "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09": [[737, null]], "4.3 Process data": [[693, null]], "4.3 \u5904\u7406\u6570\u636e": [[739, null]], "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1": [[779, null]], "4.4 Save and load data": [[694, null]], "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [[740, null]], "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529": [[780, null]], "4.5 Loading OGB datasets using ogb package": [[692, null]], "4.5 ogb \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30": [[778, null]], "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6": [[738, null]], "4.6 Loading data from CSV files": [[691, null]], "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778": [[775, null]], "5.1 Node Classification/Regression": [[734, null]], "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52": [[774, null]], "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)": [[817, null]], "5.2 Edge Classification/Regression": [[730, null]], "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52": [[770, null]], "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)": [[814, null]], "5.3 Link Prediction": [[733, null]], "5.3 \u94fe\u63a5\u9884\u6d4b": [[773, null]], "5.3 \ub9c1\ud06c \uc608\uce21": [[816, null]], "5.4 Graph Classification": [[732, null]], "5.4 \u6574\u56fe\u5206\u7c7b": [[772, null]], "5.4 \uadf8\ub798\ud504 \ubd84\ub958": [[815, null]], "5.5 Use of Edge Weights": [[731, null]], "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd": [[771, null]], "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30": [[813, null]], "6.1 Training GNN for Node Classification with Neighborhood Sampling": [[721, null]], "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[764, null]], "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[807, null]], "6.2 Training GNN for Edge Classification with Neighborhood Sampling": [[716, null]], "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[760, null]], "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[802, null]], "6.3 Training GNN for Link Prediction with Neighborhood Sampling": [[719, null]], "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [[762, null]], "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30": [[805, null]], "6.4 Implementing Custom Graph Samplers": [[715, null]], "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [[759, null]], "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [[801, null]], "6.5 Training GNN with DGL sparse": [[723, null]], "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757": [[763, null]], "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30": [[806, null]], "6.6 Implementing Custom GNN Module for Mini-batch Training": [[720, null]], "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [[761, null]], "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860": [[804, null]], "6.7 Exact Offline Inference on Large Graphs": [[718, null]], "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30": [[803, null]], "6.8 Using GPU for Neighborhood Sampling": [[717, null]], "6.9 Data Loading Parallelism": [[722, null]], "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5": [[800, null]], "7.1 Data Preprocessing": [[699, null]], "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [[743, null]], "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac": [[784, null]], "7.1.1 Partitioning API": [[699, "partitioning-api"]], "7.1.1 \ubd84\uc0b0 \ud30c\ud2f0\uc154\ub2dd": [[784, "id3"]], "7.1.2 Distributed Graph Partitioning Pipeline": [[699, "distributed-graph-partitioning-pipeline"]], "7.2 Tools for launching distributed training/inference": [[700, null]], "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API": [[742, null]], "7.2 \ubd84\uc0b0 APIs": [[782, null]], "7.3 Programming APIs": [[696, null]], "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [[744, null]], "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30": [[783, null]], "7.3.1 \ubd84\uc0b0 \uadf8\ub798\ud504 \ub370\uc774\ud130 \uc811\uadfc\ud558\uae30": [[783, "id1"]], "7.3.2 \ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[783, "id2"]], "7.4 Advanced Graph Partitioning": [[698, null]], "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4": [[785, null]], "7.5 Heterogeneous Graph Under The Hood": [[697, null]], "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5": [[781, null]], "8\uc7a5: Mixed Precision \ud559\uc2b5": [[808, null]], "A Batched Graph in DGL": [[842, "a-batched-graph-in-dgl"]], "A Blitz Introduction to DGL": [[844, null]], "A brief introduction to R-GCN": [[855, "a-brief-introduction-to-r-gcn"]], "AGNNConv": [[361, null], [391, null]], "AIFBDataset": [[132, null]], "AMDataset": [[133, null]], "API Reference": [[13, null]], "APPNPConv": [[362, null], [392, null], [462, null]], "Access distributed graph data": [[697, "access-distributed-graph-data"]], "Access node/edge data": [[696, "access-node-edge-data"]], "Accessing graph structure": [[696, "accessing-graph-structure"]], "Action 1: Add nodes": [[863, "action-1-add-nodes"]], "Action 2: Add edges": [[863, "action-2-add-edges"]], "Action 3: Choose a destination": [[863, "action-3-choose-a-destination"]], "Actions": [[863, "actions"]], "ActorDataset": [[134, null]], "Adapt your model for minibatch training": [[716, "adapt-your-model-for-minibatch-training"], [721, "adapt-your-model-for-minibatch-training"]], "Adaptive Universal Transformer": [[867, "adaptive-universal-transformer"]], "AddEdge": [[650, null]], "AddMetaPaths": [[651, null]], "AddReverse": [[652, null]], "AddSelfLoop": [[653, null]], "Adjacency Related Utilities": [[0, "adjacency-related-utilities"]], "Adjacency and incidence matrix": [[1, "adjacency-and-incidence-matrix"]], "After Partition Loading": [[697, "after-partition-loading"]], "Alternative memory allocators": [[847, "alternative-memory-allocators"]], "AmazonCoBuyComputerDataset": [[135, null]], "AmazonCoBuyPhotoDataset": [[136, null]], "AmazonRatingsDataset": [[137, null]], "AsGraphPredDataset": [[138, null]], "AsLinkPredDataset": [[139, null]], "AsNodePredDataset": [[140, null]], "Assigning Node and Edge Features to Graph": [[839, "assigning-node-and-edge-features-to-graph"]], "AtomicConv": [[393, null]], "Attention layer of Transformer": [[867, "attention-layer-of-transformer"]], "Attributes and methods": [[12, "attributes-and-methods"]], "Attributes and methods of a DGL Sparse Matrix": [[825, "Attributes-and-methods-of-a-DGL-Sparse-Matrix"]], "AvgPooling": [[378, null], [437, null], [470, null]], "BA2MotifDataset": [[141, null]], "BACommunityDataset": [[142, null]], "BAShapeDataset": [[143, null]], "BFloat16 CPU example": [[724, "bfloat16-cpu-example"]], "BGSDataset": [[144, null]], "Backend Options": [[23, "backend-options"]], "Base Class": [[2, "base-class"]], "BaseTransform": [[654, null]], "BasicFeatureStore": [[288, null]], "Batch of Graphs": [[732, "batch-of-graphs"]], "Batching and Reading Out Ops": [[0, "batching-and-reading-out-ops"]], "Batching graphs for parallelism": [[856, "batching-graphs-for-parallelism"]], "Batching many small graphs": [[861, null], [870, "batching-many-small-graphs"]], "Benchmark the performance of KNN algorithms": [[14, null]], "Best practice of writing custom GNN modules": [[840, "best-practice-of-writing-custom-gnn-modules"]], "BiasedMHA": [[446, null]], "Binary community subgraph from Cora with a test dataset": [[856, "binary-community-subgraph-from-cora-with-a-test-dataset"]], "BitcoinOTCDataset": [[145, null]], "Broadcast operations": [[825, "Broadcast-operations"]], "Broadcast operators": [[12, "broadcast-operators"]], "Build Model": [[687, null]], "Building Docs Locally": [[21, "building-docs-locally"]], "Building a Graph Convolutional Network Using Sparse Matrices": [[820, null]], "Building and Testing": [[21, "building-and-testing"]], "BuiltinDataset": [[289, null]], "CFConv": [[394, null]], "CIFAR10SuperPixelDataset": [[146, null]], "CLUSTERDataset": [[147, null]], "CPU Best Practices": [[847, null]], "CPUCachedFeature": [[290, null]], "CSVDataset": [[148, null]], "Capsule Network": [[866, null]], "Chain-up LGNN abstractions as an LGNN layer": [[856, "chain-up-lgnn-abstractions-as-an-lgnn-layer"]], "Chain-up LGNN layers": [[856, "chain-up-lgnn-layers"]], "ChameleonDataset": [[149, null]], "Chapter 1: Graph": [[701, null]], "Chapter 2: Message Passing": [[709, null]], "Chapter 3: Building GNN Modules": [[725, null]], "Chapter 4: Graph Data Pipeline": [[688, null]], "Chapter 5: Training Graph Neural Networks": [[729, null]], "Chapter 6: Stochastic Training on Large Graphs": [[714, null]], "Chapter 7: Distributed Training": [[695, null]], "Chapter 8: Mixed Precision Training": [[724, null]], "ChebConv": [[363, null], [395, null], [463, null]], "Chunked Graph Format": [[699, "chunked-graph-format"]], "CiteseerGraphDataset": [[150, null]], "ClusterGCNSampler": [[209, null]], "CoauthorCSDataset": [[151, null]], "CoauthorPhysicsDataset": [[152, null]], "Coding styles": [[21, "coding-styles"]], "Comma Separated Values (CSV)": [[703, "comma-separated-values-csv"], [707, "comma-separated-values-csv"], [788, "comma-separated-values-csv"], [792, "comma-separated-values-csv"]], "Community detection": [[856, "community-detection"]], "Community detection in a supervised setting": [[856, "community-detection-in-a-supervised-setting"]], "Completing f(x, y)": [[856, "completing-f-x-y"]], "Compose": [[655, null]], "Composing OnDiskDataset from raw data": [[834, null]], "Computation on a Batched Graph": [[732, "computation-on-a-batched-graph"]], "Computation times": [[828, null], [845, null], [849, null], [853, null], [859, null], [862, null], [865, null], [869, null], [871, null], [875, null]], "Computing with DGLGraph": [[1, "computing-with-dglgraph"]], "Conclusion": [[14, "conclusion"], [830, "Conclusion"], [833, "Conclusion"]], "Containers": [[22, "containers"]], "Contribute to DGL": [[21, null]], "Contributing Code Changes": [[21, "contributing-code-changes"]], "Contributing Core Features": [[21, "contributing-core-features"]], "Contributing Documentations": [[21, "contributing-documentations"]], "Contributing Editorial Changes via GitHub Web Interface": [[21, "contributing-editorial-changes-via-github-web-interface"]], "Contributing New Models as Examples": [[21, "contributing-new-models-as-examples"]], "Contribution": [[818, "contribution"]], "Conv Layers": [[15, "conv-layers"], [16, "conv-layers"], [17, "conv-layers"]], "Converting Heterogeneous Graphs to Homogeneous Graphs": [[707, "converting-heterogeneous-graphs-to-homogeneous-graphs"]], "CopyTo": [[7, "copyto"], [291, null]], "Cora": [[857, "cora"]], "Cora dataset": [[856, "cora-dataset"]], "CoraFullDataset": [[153, null]], "CoraGraphDataset": [[154, null]], "CornellDataset": [[155, null]], "Create graph and model": [[855, "create-graph-and-model"]], "Creating Dataset from CSV via CSVDataset": [[843, "creating-dataset-from-csv-via-csvdataset"]], "Creating Graphs from External Libraries": [[703, "creating-graphs-from-external-libraries"]], "Creating a DGL Sparse Matrix": [[825, "Creating-a-DGL-Sparse-Matrix"]], "Creating a Dataset for Graph Classification from CSV": [[843, "creating-a-dataset-for-graph-classification-from-csv"]], "Creating a Dataset for Node Classification or Link Prediction from CSV": [[843, "creating-a-dataset-for-node-classification-or-link-prediction-from-csv"]], "Creating a Heterogeneous Graph": [[707, "creating-a-heterogeneous-graph"]], "Creation Ops": [[12, "creation-ops"]], "CuGraph Conv Layers": [[16, "cugraph-conv-layers"]], "CuGraphGATConv": [[396, null]], "CuGraphRelGraphConv": [[397, null]], "CuGraphSAGEConv": [[398, null]], "Custom Data Parser": [[691, "custom-data-parser"]], "DGL Binary Format": [[703, "dgl-binary-format"], [707, "dgl-binary-format"]], "DGL Built-in Function": [[5, "dgl-built-in-function"]], "DGL Foreign Function Interface (FFI)": [[22, null]], "DGL Graph Construction": [[839, "dgl-graph-construction"]], "DGL \u4e8c\u8fdb\u5236\u683c\u5f0f": [[747, "dgl"]], "DGL \ub370\uc774\ud130 \ub85c\ub354\uc5d0\uc11c GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc0ac\uc6a9\ud558\uae30": [[803, "dgl-gpu"]], "DGL \ubc14\uc774\ub108\ub9ac \ud3ec\uba67": [[788, "dgl"], [792, "dgl"]], "DGL \ubd84\uc0b0 \ubaa8\ub4c8 \ucd08\uae30\ud654": [[782, "dgl"]], "DGLDataset": [[156, null]], "DGLDataset Object Overview": [[843, "dgldataset-object-overview"]], "DGL\u4e8c\u8fdb\u5236\u683c\u5f0f": [[751, "dgl"]], "DGL\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": [[742, "dgl"]], "DGMG: Optimization objective": [[863, "dgmg-optimization-objective"]], "DGMG: The implementation": [[863, "dgmg-the-implementation"]], "DGMG: The main flow": [[863, "dgmg-the-main-flow"]], "DGNConv": [[399, null]], "Data Loader Preparation": [[872, "data-loader-preparation"]], "Data Loading": [[732, "data-loading"]], "Data Repository": [[23, "data-repository"]], "Data folder structure": [[691, "data-folder-structure"]], "Data hosting": [[21, "data-hosting"]], "Data preparation": [[836, "Data-preparation"], [837, "Data-preparation"]], "DataLoader": [[7, "dataloader"], [210, null], [292, null]], "DataLoaders": [[3, "dataloaders"]], "Dataset": [[7, "dataset"], [293, null]], "Dataset adapters": [[2, "dataset-adapters"]], "Dataset of a single feature-less graph": [[691, "dataset-of-a-single-feature-less-graph"]], "Dataset of a single graph with features and labels": [[691, "dataset-of-a-single-graph-with-features-and-labels"]], "Dataset of a single heterogeneous graph": [[691, "dataset-of-a-single-heterogeneous-graph"]], "Dataset of multiple graphs": [[691, "dataset-of-multiple-graphs"]], "DeepWalk": [[385, null]], "Define Model": [[842, "define-model"]], "Define a GNN model": [[850, "define-a-gnn-model"], [851, "define-a-gnn-model"]], "Define a GraphSAGE model": [[841, "define-a-graphsage-model"]], "Define a GraphSAGE model for minibatch training": [[719, "define-a-graphsage-model-for-minibatch-training"]], "Define a data loader with neighbor and negative sampling": [[719, "define-a-data-loader-with-neighbor-and-negative-sampling"]], "Define a neighborhood sampler and data loader": [[716, "define-a-neighborhood-sampler-and-data-loader"], [721, "define-a-neighborhood-sampler-and-data-loader"]], "Defining Data Loader": [[842, "defining-data-loader"]], "Defining Model": [[831, "Defining-Model"], [833, "Defining-Model"], [873, "defining-model"]], "Defining Model for Node Representation": [[830, "Defining-Model-for-Node-Representation"]], "Defining Neighbor Sampler and Data Loader in DGL": [[830, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [831, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"], [833, "Defining-Neighbor-Sampler-and-Data-Loader-in-DGL"]], "Defining Traing Loop": [[830, "Defining-Traing-Loop"]], "Defining Training Loop": [[833, "Defining-Training-Loop"]], "Defining Training and Evaluation Procedures": [[831, "Defining-Training-and-Evaluation-Procedures"]], "Defining Traning and Evaluation Procedures": [[873, "defining-traning-and-evaluation-procedures"]], "Defining a Graph Convolutional Network (GCN)": [[838, "defining-a-graph-convolutional-network-gcn"]], "Defining new types": [[22, "defining-new-types"]], "Degree Bucketing for Message Passing with User Defined Functions": [[20, "degree-bucketing-for-message-passing-with-user-defined-functions"]], "Degree Encoding": [[687, "degree-encoding"]], "DegreeEncoder": [[447, null]], "Dense Conv Layers": [[15, "dense-conv-layers"], [16, "dense-conv-layers"]], "DenseChebConv": [[364, null], [400, null]], "DenseGraphConv": [[365, null], [401, null]], "DenseSAGEConv": [[366, null], [402, null]], "Description": [[6, "description"], [391, "description"], [392, "description"], [393, "description"], [394, "description"], [399, "description"], [402, "description"], [402, "id1"], [403, "description"], [405, "description"], [406, "description"], [407, "description"], [407, "id1"], [408, "description"], [409, "description"], [409, "id1"], [410, "description"], [410, "id1"], [411, "description"], [411, "id1"], [412, "description"], [414, "description"], [414, "id1"], [415, "description"], [416, "description"], [416, "id1"], [417, "description"], [417, "id1"], [420, "description"], [421, "description"], [423, "description"], [423, "id1"], [424, "description"], [424, "id1"], [425, "description"], [425, "id1"], [426, "description"], [427, "description"], [427, "id1"], [454, "description"], [454, "id1"], [455, "description"], [455, "id1"], [456, "description"], [458, "description"], [458, "id1"]], "Device Control": [[1, "device-control"]], "Diagonal Matrix": [[825, "Diagonal-Matrix"]], "DiskBasedFeature": [[294, null]], "DistEdgeDataLoader": [[211, null]], "DistGraph creation": [[696, "distgraph-creation"]], "DistGraph \uc0dd\uc131": [[782, "distgraph"]], "DistNodeDataLoader": [[212, null]], "Distributed DataLoader": [[4, "distributed-dataloader"]], "Distributed DistEmbedding": [[696, "distributed-distembedding"]], "Distributed Graph": [[4, "distributed-graph"]], "Distributed Graph Sampling Operators": [[4, "distributed-graph-sampling-operators"]], "Distributed Link Prediction": [[851, null]], "Distributed Node Classification": [[850, null]], "Distributed Node Embedding": [[4, "distributed-node-embedding"]], "Distributed Process Group Initialization": [[872, "distributed-process-group-initialization"]], "Distributed Sampling": [[4, "distributed-sampling"]], "Distributed Tensor": [[4, "distributed-tensor"], [696, "distributed-tensor"]], "Distributed embedding optimizer": [[4, "distributed-embedding-optimizer"]], "Distributed graph": [[696, "distributed-graph"]], "Distributed mini-batch sampler": [[850, "distributed-mini-batch-sampler"], [851, "distributed-mini-batch-sampler"]], "Distributed mode vs. standalone mode": [[696, "distributed-mode-vs-standalone-mode"]], "Distributed sampling": [[696, "distributed-sampling"]], "Distributed training": [[852, null]], "Distributed training script": [[850, "distributed-training-script"], [851, "distributed-training-script"]], "Distributed workload split": [[4, "distributed-workload-split"]], "Distributed \uadf8\ub798\ud504": [[782, "distributed"]], "DistributedItemSampler": [[295, null]], "DotGatConv": [[403, null]], "DropEdge": [[656, null]], "DropNode": [[657, null]], "During Preprocessing": [[697, "during-preprocessing"]], "EGATConv": [[404, null]], "EGNNConv": [[405, null]], "EGTLayer": [[448, null]], "Edge Prediction Datasets": [[2, "edge-prediction-datasets"]], "Edge Type Subgraph": [[707, "edge-type-subgraph"]], "Edge-wise User-defined Function": [[20, "edge-wise-user-defined-function"]], "EdgeConv": [[367, null], [406, null]], "EdgeData": [[691, "edgedata"]], "EdgeGATConv": [[407, null]], "EdgePredictor": [[454, null]], "EdgeWeightNorm": [[408, null]], "Element-wise functions": [[825, "Element-wise-functions"]], "Elementwise Operators": [[12, "elementwise-operators"]], "Elementwise operations": [[825, "Elementwise-operations"]], "Enable GraphBolt sampling in the training script": [[850, "enable-graphbolt-sampling-in-the-training-script"]], "Enabling ARGO on your own GNN program": [[846, "enabling-argo-on-your-own-gnn-program"]], "Encoding a dynamic graph": [[863, "encoding-a-dynamic-graph"]], "End-to-End Mixed Precision Training": [[724, "end-to-end-mixed-precision-training"]], "End-to-End Mixed Precision \ud559\uc2b5": [[808, "end-to-end-mixed-precision"]], "Environment Variables": [[23, null]], "Equation (1)": [[857, "equation-1"]], "Equation (2)": [[857, "equation-2"]], "Equation (3) & (4)": [[857, "equation-3-4"]], "Evaluating Performance with Link Prediction": [[830, "Evaluating-Performance-with-Link-Prediction"]], "Evaluation Loop": [[873, "evaluation-loop"]], "Evaluation function": [[831, "Evaluation-function"]], "Even more customization by user-defined function": [[840, "even-more-customization-by-user-defined-function"]], "Example: MAG240M-LSC": [[699, "example-mag240m-lsc"]], "Examples on a heterogeneous graph": [[359, "examples-on-a-heterogeneous-graph"]], "Examples on a homogeneous graph": [[359, "examples-on-a-homogeneous-graph"]], "Exclude Edges After Sampling": [[715, "exclude-edges-after-sampling"]], "Execute on specific edges": [[867, "execute-on-specific-edges"]], "Exercise #1": [[825, "Exercise-#1"]], "Exercise #2": [[825, "Exercise-#2"]], "FB15k237Dataset": [[157, null]], "FB15kDataset": [[158, null]], "FakeNewsDataset": [[159, null]], "Farthest Point Sampler": [[6, "farthest-point-sampler"]], "FeatMask": [[658, null]], "Feature": [[296, null]], "Feature and FeatureStore": [[7, "feature-and-featurestore"]], "FeatureFetcher": [[7, "featurefetcher"], [297, null]], "FeatureStore": [[298, null]], "FlickrDataset": [[160, null]], "For heterogeneous graphs": [[716, "for-heterogeneous-graphs"], [719, "for-heterogeneous-graphs"], [721, "for-heterogeneous-graphs"]], "FraudAmazonDataset": [[161, null]], "FraudDataset": [[162, null]], "FraudYelpDataset": [[163, null]], "Frequently Asked Questions (FAQ)": [[24, null]], "Full R-GCN model defined": [[855, "full-r-gcn-model-defined"]], "Full YAML Specification": [[691, "full-yaml-specification"]], "FusedCSCSamplingGraph": [[299, null]], "GAT in DGL": [[857, "gat-in-dgl"]], "GATConv": [[368, null], [409, null], [464, null]], "GATv2Conv": [[410, null]], "GCN from the perspective of message passing": [[854, "gcn-from-the-perspective-of-message-passing"]], "GCN implementation with DGL": [[854, "gcn-implementation-with-dgl"]], "GCN in one formula": [[854, "gcn-in-one-formula"]], "GCN2Conv": [[411, null]], "GCNNorm": [[659, null]], "GDC": [[660, null]], "GDELTDataset": [[164, null]], "GINConv": [[369, null], [412, null], [465, null]], "GINDataset": [[165, null]], "GINEConv": [[413, null]], "GMMConv": [[370, null], [414, null]], "GNNExplainer": [[428, null]], "GPU \uae30\ubc18\uc758 \uc774\uc6c3 \uc0d8\ud50c\ub7ec\ub97c DGL \ud568\uc218\uc640 \ud568\uaed8 \uc0ac\uc6a9\ud558\uae30": [[803, "gpu-dgl"]], "GPUCachedFeature": [[300, null]], "GSDDMM functions": [[9, "gsddmm-functions"]], "GSpMM functions": [[9, "gspmm-functions"]], "GatedGCNConv": [[415, null]], "GatedGraphConv": [[371, null], [416, null]], "GatherMM and SegmentMM Module": [[9, "gathermm-and-segmentmm-module"]], "General development process": [[21, "general-development-process"]], "Generate feature data for graph": [[836, "Generate-feature-data-for-graph"], [837, "Generate-feature-data-for-graph"]], "Generate graph structure data": [[836, "Generate-graph-structure-data"], [837, "Generate-graph-structure-data"]], "Generate tasks": [[836, "Generate-tasks"], [837, "Generate-tasks"]], "Generative Models of Graphs": [[863, null]], "Generative models": [[864, null], [870, "generative-models"]], "Get training and validation node IDs": [[850, "get-training-and-validation-node-ids"], [851, "get-training-and-validation-node-ids"]], "Getting Started": [[818, "getting-started"]], "Git setup (for developers)": [[21, "git-setup-for-developers"]], "Global Configurations": [[23, "global-configurations"]], "Global Pooling Layers": [[15, "global-pooling-layers"], [16, "global-pooling-layers"], [17, "global-pooling-layers"]], "GlobalAttentionPooling": [[379, null], [438, null], [471, null]], "GlobalUniform": [[226, null]], "Graph": [[7, "graph"]], "Graph Convolutional Layer": [[820, "Graph-Convolutional-Layer"]], "Graph Convolutional Network": [[854, null]], "Graph Create Ops": [[0, "graph-create-ops"]], "Graph Diffusion": [[821, "Graph-Diffusion"]], "Graph Diffusion in GNNs": [[821, "Graph-Diffusion-in-GNNs"]], "Graph Diffusion in Graph Neural Networks": [[821, null]], "Graph Partition Utilities": [[0, "graph-partition-utilities"]], "Graph Positional Encoding Ops:": [[0, "graph-positional-encoding-ops"]], "Graph Prediction Datasets": [[2, "graph-prediction-datasets"]], "Graph Readout": [[732, "graph-readout"]], "Graph Transform Ops": [[0, "graph-transform-ops"]], "Graph Transformations": [[839, "graph-transformations"]], "Graph Transformer Layer": [[822, "Graph-Transformer-Layer"]], "Graph Transformer Model": [[822, "Graph-Transformer-Model"]], "Graph Transformer in a Nutshell": [[822, null]], "Graph Traversal & Message Propagation": [[0, "graph-traversal-message-propagation"]], "Graph building": [[867, "graph-building"]], "Graph checking and graph type specification": [[727, "graph-checking-and-graph-type-specification"]], "Graph embedding": [[863, "graph-embedding"]], "Graph neural networks and its variants": [[858, null], [870, "graph-neural-networks-and-its-variants"]], "Graph partition book": [[4, "graph-partition-book"]], "Graph partitioning": [[850, "graph-partitioning"]], "Graph structure": [[867, "graph-structure"]], "GraphConv": [[372, null], [417, null], [466, null]], "GraphData": [[691, "graphdata"]], "GraphDataLoader": [[213, null]], "Graphormer Layer": [[687, "graphormer-layer"]], "GraphormerLayer": [[449, null]], "GroupRevRes": [[418, null]], "HGTConv": [[419, null]], "Half precision\uc744 \uc0ac\uc6a9\ud55c \uba54\uc2dc\uc9c0 \uc804\ub2ec": [[808, "half-precision"]], "Handle dataset": [[855, "handle-dataset"]], "HeatKernel": [[661, null]], "HeteroEmbedding": [[386, null]], "HeteroGNNExplainer": [[429, null]], "HeteroGraphConv": [[360, null], [387, null], [472, null]], "HeteroGraphConv implementation logic:": [[728, "heterographconv-implementation-logic"]], "HeteroGraphConv \uad6c\ud604 \ub85c\uc9c1:": [[812, "heterographconv"]], "HeteroGraphConv\u7684\u5b9e\u73b0\u903b\u8f91": [[768, "heterographconv"]], "HeteroItemSet": [[301, null]], "HeteroLinear": [[388, null]], "HeteroPGExplainer": [[430, null]], "HeteroSubgraphX": [[431, null]], "Heterogeneous Graphs": [[729, "heterogeneous-graphs"]], "Heterogeneous Learning Modules": [[15, "heterogeneous-learning-modules"], [16, "heterogeneous-learning-modules"], [17, "heterogeneous-learning-modules"]], "Heterogeneous graph": [[730, "heterogeneous-graph"], [732, "heterogeneous-graph"], [734, "heterogeneous-graph"]], "Heterogeneous graphs": [[720, "heterogeneous-graphs"], [733, "heterogeneous-graphs"]], "Heterogeneous \uadf8\ub798\ud504": [[813, "heterogeneous"], [814, "heterogeneous"], [815, "heterogeneous"], [817, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\ub4e4": [[801, "heterogeneous"], [801, "id5"], [806, "heterogeneous"], [816, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \ub178\ub4dc/\uc5d0\uc9c0 \ud53c\ucc98\ub4e4 \uc0dd\uc131\ud558\uae30": [[784, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uacbd\uc6b0": [[802, "heterogeneous"], [805, "heterogeneous"], [807, "heterogeneous"]], "Heterogeneous \uadf8\ub798\ud504\uc758 \uc5d0\uc9c0\ub4e4\uc5d0 \ub300\ud55c \uc5d0\uc9c0 \ud0c0\uc785 \uc608\uce21\ud558\uae30": [[814, "id3"]], "Homogeneous \uadf8\ub798\ud504, \uc774\ubd84 \uadf8\ub798\ud504(bipartite graph), \uadf8\ub9ac\uace0 MFG\ub97c \uc704\ud55c \ubaa8\ub4c8 \uc791\uc131\ud558\uae30": [[806, "homogeneous-bipartite-graph-mfg"]], "Homophily Measures": [[0, "homophily-measures"]], "How DGL Handles Computation Dependency\u00b6": [[833, "How-DGL-Handles-Computation-Dependency\u00b6"]], "How DGL implements Transformer with a graph neural network": [[867, "how-dgl-implements-transformer-with-a-graph-neural-network"]], "How Does DGL Represent A Graph?": [[839, null]], "Hyper-threading": [[847, "hyper-threading"]], "Hypergraph Neural Network (HGNN) Layer": [[823, "Hypergraph-Neural-Network-(HGNN)-Layer"]], "Hypergraph Neural Networks": [[823, null]], "Hypergraphs": [[823, "Hypergraphs"]], "ICEWS18Dataset": [[166, null]], "ID Conversion Utilities": [[697, "id-conversion-utilities"]], "ID mapping": [[699, "id-mapping"]], "ID \ub9e4\ud551": [[784, "id"]], "Implement LGNN in DGL": [[856, "implement-lgnn-in-dgl"]], "Implement R-GCN in DGL": [[855, "implement-r-gcn-in-dgl"]], "Implementing Offline Inference": [[718, "implementing-offline-inference"]], "Implementing \\text{fuse} as sparse matrix multiplication": [[856, "implementing-text-fuse-as-sparse-matrix-multiplication"]], "Implementing \\text{prev} and \\text{deg} as tensor operation": [[856, "implementing-text-prev-and-text-deg-as-tensor-operation"]], "Implementing \\text{radius} as message passing in DGL": [[856, "implementing-text-radius-as-message-passing-in-dgl"]], "Importing Packages": [[873, "importing-packages"]], "Improve Scalability on Multi-Core CPUs": [[846, null]], "InSubgraphSampler": [[302, null]], "Index": [[818, "index"]], "Inference": [[851, "inference"]], "Initialization": [[4, "initialization"]], "Initialization of the DGL distributed module": [[696, "initialization-of-the-dgl-distributed-module"]], "Initialize network communication": [[850, "initialize-network-communication"], [851, "initialize-network-communication"]], "Initializing a DGL Diagonal Sparse Matrix": [[825, "Initializing-a-DGL-Diagonal-Sparse-Matrix"]], "Input format": [[698, "input-format"]], "Install DGL package": [[830, "Install-DGL-package"], [833, "Install-DGL-package"], [836, "Install-DGL-package"], [837, "Install-DGL-package"]], "Install DGL package and other dependencies": [[831, "Install-DGL-package-and-other-dependencies"]], "Install and Setup": [[819, null]], "Install from Conda or Pip": [[819, "install-from-conda-or-pip"]], "Install from source": [[819, "install-from-source"]], "Installation": [[846, "installation"]], "Instantiate OnDiskDataset": [[836, "Instantiate-OnDiskDataset"], [837, "Instantiate-OnDiskDataset"]], "Integrated Benchmarks": [[826, "integrated-benchmarks"]], "Intel": [[847, "intel"]], "Introducing attention to GCN": [[857, "introducing-attention-to-gcn"]], "Introduction": [[863, "introduction"]], "ItemSampler": [[7, "itemsampler"], [303, null]], "ItemSet": [[7, "itemset"], [304, null]], "JSON/GML Format": [[703, "json-gml-format"]], "JSON/GML \u683c\u5f0f": [[747, "json-gml"]], "JSON/GML \ud3ec\uba67": [[788, "json-gml"]], "JumpingKnowledge": [[458, null]], "KHopGraph": [[662, null]], "KNNGraph": [[434, null]], "KarateClubDataset": [[167, null]], "Key ideas of Capsule": [[866, "key-ideas-of-capsule"]], "Key ideas of R-GCN": [[855, "key-ideas-of-r-gcn"]], "Label Informativeness Measures": [[0, "label-informativeness-measures"]], "LabelPropagation": [[459, null]], "LaborSampler": [[214, null]], "LapPE": [[663, null]], "LapPosEncoder": [[450, null]], "Launch the distributed training job": [[850, "launch-the-distributed-training-job"]], "LayerNeighborSampler": [[305, null]], "LazyFeature": [[221, null]], "LegacyDataset": [[306, null]], "LegacyTUDataset": [[168, null]], "Line Graph Neural Network": [[856, null]], "Line graph neural network key ideas": [[856, "line-graph-neural-network-key-ideas"]], "LineGraph": [[664, null]], "Link Prediction": [[830, null]], "Link Prediction Task": [[836, "Link-Prediction-Task"], [837, "Link-Prediction-Task"]], "Link Prediction using Graph Neural Networks": [[841, null]], "Linux": [[819, "linux"]], "Load balancing": [[699, "load-balancing"]], "Load partitioned graphs": [[699, "load-partitioned-graphs"]], "Loading Cora Dataset": [[838, "loading-cora-dataset"]], "Loading Data": [[823, "Loading-Data"], [842, "loading-data"]], "Loading Dataset": [[830, "Loading-Dataset"], [833, "Loading-Dataset"]], "Loading Graphs from Disk": [[703, "loading-graphs-from-disk"]], "Loading Heterographs from Disk": [[707, "loading-heterographs-from-disk"]], "Loading and Saving Graphs": [[839, "loading-and-saving-graphs"]], "Loading graph and features": [[841, "loading-graph-and-features"]], "METIS partition algorithm": [[698, "metis-partition-algorithm"]], "MNISTSuperPixelDataset": [[169, null]], "MUTAGDataset": [[170, null]], "MXNet backend": [[819, "mxnet-backend"]], "Main Function for Each Process": [[872, "main-function-for-each-process"]], "Main Loop": [[860, "main-loop"]], "Main class of Transformer graph": [[867, "main-class-of-transformer-graph"]], "Make Your Own Dataset": [[843, null]], "Matrix Multiplication": [[12, "matrix-multiplication"]], "Matrix multiplication": [[825, "Matrix-multiplication"]], "Matrix transformations": [[825, "Matrix-transformations"]], "MaxPooling": [[380, null], [439, null], [473, null]], "Message Passing Paradigm": [[709, "message-passing-paradigm"]], "Message Passing Review": [[832, "Message-Passing-Review"]], "Message Passing with Edge Weights": [[731, "message-passing-with-edge-weights"]], "Message aggregation": [[867, "message-aggregation"]], "Message computation": [[867, "message-computation"]], "Message functions": [[5, "message-functions"]], "Message passing": [[867, "message-passing"]], "Message passing and GNNs": [[840, "message-passing-and-gnns"]], "Message passing and reducing": [[727, "message-passing-and-reducing"]], "Message-Passing with Half Precision": [[724, "message-passing-with-half-precision"]], "MetaPath2Vec": [[389, null]], "MinesweeperDataset": [[171, null]], "Mini-batch Data Loading": [[873, "mini-batch-data-loading"]], "MiniBatch": [[7, "minibatch"], [307, null]], "MiniBatchTransformer": [[308, null]], "MiniGCDataset": [[172, null]], "Misc": [[1, "misc"]], "Model Definition": [[732, "model-definition"]], "Model Forward": [[687, "model-forward"]], "Model Implementation Difference from Node Classification": [[730, "model-implementation-difference-from-node-classification"]], "Model Initialization": [[872, "model-initialization"]], "Model Overview": [[854, "model-overview"]], "Model implementation": [[866, "model-implementation"]], "More customization": [[840, "more-customization"]], "MovieLensDataset": [[173, null]], "Multi-GPU Node Classification": [[831, null]], "Multi-head attention": [[857, "multi-head-attention"], [867, "multi-head-attention"]], "Multi-head attention layer": [[867, "multi-head-attention-layer"]], "MultiLayerFullNeighborSampler": [[215, null]], "Mutating topology": [[1, "mutating-topology"]], "NFS client side setup (ubuntu only)": [[850, "nfs-client-side-setup-ubuntu-only"]], "NFS server side setup (ubuntu only)": [[850, "nfs-server-side-setup-ubuntu-only"]], "NNConv": [[373, null], [420, null]], "Negative Samplers for Link Prediction": [[3, "negative-samplers-for-link-prediction"]], "Negative sampling": [[11, "negative-sampling"]], "Negative \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[805, "negative"]], "NegativeSampler": [[7, "negativesampler"], [309, null]], "Neighbor Matching": [[6, "neighbor-matching"]], "Neighbor Sampling Overview": [[832, null], [832, "id1"]], "Neighbor sampling": [[11, "neighbor-sampling"]], "NeighborSampler": [[216, null], [310, null]], "Network Embedding Modules": [[16, "network-embedding-modules"]], "Node Classification": [[833, null]], "Node Classification Task": [[836, "Node-Classification-Task"], [837, "Node-Classification-Task"]], "Node Classification with DGL": [[838, null]], "Node Prediction Datasets": [[2, "node-prediction-datasets"]], "Node embedding optimizer": [[10, "node-embedding-optimizer"]], "Node-wise User-defined Function": [[20, "node-wise-user-defined-function"]], "NodeData": [[691, "nodedata"]], "NodeEmbedding": [[457, null]], "NodeShuffle": [[665, null]], "Non-linear activation functions": [[12, "non-linear-activation-functions"], [825, "Non-linear-activation-functions"]], "OnDiskDataset": [[311, null]], "OnDiskDataset for Heterogeneous Graph": [[836, null]], "OnDiskDataset for Homogeneous Graph": [[837, null]], "One layer in LGNN, algorithm structure": [[856, "one-layer-in-lgnn-algorithm-structure"]], "OpenMP settings": [[847, "openmp-settings"]], "Operations on Sparse Matrix": [[825, "Operations-on-Sparse-Matrix"]], "Operators": [[12, "operators"]], "Organize Data into YAML File": [[836, "Organize-Data-into-YAML-File"], [837, "Organize-Data-into-YAML-File"]], "Output format": [[698, "output-format"]], "Overview": [[729, "overview"], [730, "overview"], [732, "overview"], [733, "overview"], [734, "overview"], [829, "overview"]], "Overview of Graph Classification with GNN": [[842, "overview-of-graph-classification-with-gnn"]], "Overview of Link Prediction with GNN": [[841, "overview-of-link-prediction-with-gnn"]], "Overview of Neighborhood Sampling Approaches": [[714, "overview-of-neighborhood-sampling-approaches"]], "Overview of Node Classification with GNN": [[838, "overview-of-node-classification-with-gnn"]], "PATTERNDataset": [[174, null]], "PGExplainer": [[432, null]], "PNAConv": [[421, null]], "PPIDataset": [[175, null]], "PPR": [[666, null]], "Paper Study with DGL": [[870, null]], "ParMETIS Installation": [[698, "parmetis-installation"]], "ParMETIS \uacb0\uacfc\ub4e4\uc744 DGLGraph\ub85c \ubcc0\ud658\ud558\uae30": [[784, "parmetis-dglgraph"]], "ParMETIS \uc124\uce58": [[784, "parmetis"]], "ParMETIS \uc2e4\ud589\ud558\uae30 \ubc0f \uacb0\uacfc \ud3ec\uba67\ub4e4": [[784, "id9"]], "ParMETIS\ub97c \uc704\ud55c \uc785\ub825 \ud3ec\uba67": [[784, "id8"]], "Parallel METIS partitioning": [[698, "parallel-metis-partitioning"]], "Partition": [[4, "partition"]], "Partition a graph": [[850, "partition-a-graph"], [851, "partition-a-graph"]], "Path Encoding": [[687, "path-encoding"]], "PathEncoder": [[451, null]], "PerSourceUniform": [[227, null]], "Performance Benchmarks": [[826, null]], "Positive graph, negative graph, and apply_edges": [[841, "positive-graph-negative-graph-and-apply-edges"]], "Predicting Edge Type of an Existing Edge on a Heterogeneous Graph": [[730, "predicting-edge-type-of-an-existing-edge-on-a-heterogeneous-graph"]], "Prepare Data": [[685, null]], "Prepare training and testing sets": [[841, "prepare-training-and-testing-sets"]], "Preprocessing and postprocessing": [[867, "preprocessing-and-postprocessing"]], "Processing Graph Classification datasets": [[693, "processing-graph-classification-datasets"]], "Processing Node Classification datasets": [[693, "processing-node-classification-datasets"]], "Processing dataset for Link Prediction datasets": [[693, "processing-dataset-for-link-prediction-datasets"]], "Protein-protein interaction (PPI) networks": [[857, "protein-protein-interaction-ppi-networks"]], "PubmedGraphDataset": [[176, null]], "Put everything together": [[857, "put-everything-together"]], "Put it all together": [[867, "put-it-all-together"]], "Putting it together": [[860, "putting-it-together"], [863, "putting-it-together"]], "PyTorch backend": [[819, "pytorch-backend"]], "QM7bDataset": [[177, null]], "QM9Dataset": [[178, null]], "QM9EdgeDataset": [[179, null]], "Querying Graph Structures": [[839, "querying-graph-structures"]], "Querying and manipulating batch information": [[1, "querying-and-manipulating-batch-information"]], "Querying and manipulating node/edge ID type": [[1, "querying-and-manipulating-node-edge-id-type"]], "Querying and manipulating sparse format": [[1, "querying-and-manipulating-sparse-format"]], "Querying graph structure": [[1, "querying-graph-structure"]], "Querying metagraph structure": [[1, "querying-metagraph-structure"]], "QuestionsDataset": [[180, null]], "Quickstart": [[825, null]], "R-GCN layers": [[855, "r-gcn-layers"]], "RadiusGraph": [[435, null]], "Random walk": [[11, "random-walk"]], "RandomWalkPE": [[667, null]], "RedditDataset": [[181, null]], "Reduce functions": [[5, "reduce-functions"]], "Reduce operations": [[825, "Reduce-operations"]], "Reference to the distributed graph": [[850, "reference-to-the-distributed-graph"], [851, "reference-to-the-distributed-graph"]], "RelGraphConv": [[374, null], [422, null], [467, null]], "Relation with Message Passing APIs": [[9, "relation-with-message-passing-apis"]], "Relational Graph Convolutional Network": [[855, null]], "RemoveSelfLoop": [[668, null]], "Removing edges in the minibatch from the original graph for neighbor sampling": [[716, "removing-edges-in-the-minibatch-from-the-original-graph-for-neighbor-sampling"]], "Resources": [[827, null]], "Results": [[14, "results"]], "Revisit classic models from a graph perspective": [[868, null], [870, "revisit-classic-models-from-a-graph-perspective"]], "Roadmap": [[688, "roadmap"], [701, "roadmap"], [709, "roadmap"], [714, "roadmap"], [725, "roadmap"], [729, "roadmap"]], "RomanEmpireDataset": [[182, null]], "RowFeatNormalizer": [[669, null]], "Run ParMETIS and output format": [[698, "run-parmetis-and-output-format"]], "SAGEConv": [[375, null], [423, null], [468, null]], "SAINTSampler": [[217, null]], "SBMMixtureDataset": [[183, null]], "SGConv": [[376, null], [424, null], [469, null]], "SIGNDiffusion": [[670, null]], "SSH Access": [[850, "ssh-access"]], "SSTDataset": [[184, null]], "SVDPE": [[671, null]], "Sample neighbors with GraphBolt": [[850, "sample-neighbors-with-graphbolt"]], "SampledSubgraph": [[312, null]], "SampledSubgraphImpl": [[313, null]], "Sampler": [[218, null]], "Sampler Transformations": [[3, "sampler-transformations"]], "Sampler for Heterogeneous Graphs": [[715, "sampler-for-heterogeneous-graphs"]], "Samplers": [[3, "samplers"]], "SamplingGraph": [[314, null]], "Scenarios": [[829, "scenarios"]], "Score Modules for Link Prediction and Knowledge Graph Completion": [[16, "score-modules-for-link-prediction-and-knowledge-graph-completion"]], "Segment Reduce Module": [[9, "segment-reduce-module"]], "SegmentedKNNGraph": [[436, null]], "Sequential": [[384, null], [460, null]], "Set up distributed training environment": [[850, "set-up-distributed-training-environment"], [851, "set-up-distributed-training-environment"]], "Set2Set": [[381, null], [440, null]], "SetTransformerDecoder": [[441, null]], "SetTransformerEncoder": [[442, null]], "ShaDowKHopSampler": [[219, null]], "Simple implementation": [[867, "simple-implementation"]], "Single Machine Multi-GPU Minibatch Graph Classification": [[872, null]], "Single Machine Multi-GPU Minibatch Node Classification": [[873, null]], "Softmax": [[825, "Softmax"]], "SortPooling": [[382, null], [443, null], [474, null]], "Sparse Matrix": [[825, "Sparse-Matrix"]], "Sparse Multi-head Attention": [[822, "Sparse-Multi-head-Attention"]], "Sparse matrix class": [[12, "sparse-matrix-class"]], "Spatial Encoding": [[687, "spatial-encoding"]], "SpatialEncoder": [[452, null]], "SpatialEncoder3d": [[453, null]], "Spawning Trainer Processes": [[831, "Spawning-Trainer-Processes"], [873, "spawning-trainer-processes"]], "Specification": [[699, "specification"]], "Speeding up with built-in functions": [[867, "speeding-up-with-built-in-functions"]], "Split and Load Partitions": [[4, "split-and-load-partitions"]], "Split workloads": [[696, "split-workloads"]], "SquirrelDataset": [[185, null]], "Step 1": [[846, "step-1"]], "Step 1: Batching": [[860, "step-1-batching"]], "Step 1: Setup and graph initialization": [[866, "step-1-setup-and-graph-initialization"]], "Step 2": [[846, "step-2"]], "Step 2: Define message passing functions": [[866, "step-2-define-message-passing-functions"]], "Step 2: Tree-LSTM cell with message-passing APIs": [[860, "step-2-tree-lstm-cell-with-message-passing-apis"]], "Step 3": [[846, "step-3"]], "Step 3: Define traversal": [[860, "step-3-define-traversal"]], "Step 3: Testing": [[866, "step-3-testing"]], "Step 4": [[846, "step-4"]], "Step 5": [[846, "step-5"]], "Step 6": [[846, "step-6"]], "Step 7": [[846, "step-7"]], "Step 8": [[846, "step-8"]], "Step.1 Graph Partitioning": [[699, "step-1-graph-partitioning"]], "Step.2 Data Dispatching": [[699, "step-2-data-dispatching"]], "Subgraph Extraction Ops": [[0, "subgraph-extraction-ops"]], "SubgraphSampler": [[7, "subgraphsampler"], [315, null]], "SubgraphX": [[433, null]], "Subset": [[196, null]], "SumPooling": [[383, null], [444, null], [475, null]], "Supervised community detection task with the Cora dataset": [[856, "supervised-community-detection-task-with-the-cora-dataset"]], "Supported Data types": [[9, "supported-data-types"]], "Supporting Multiple Platforms": [[21, "supporting-multiple-platforms"]], "System requirements": [[819, "system-requirements"]], "TAGConv": [[377, null], [425, null]], "TUDataset": [[186, null]], "TWIRLSConv": [[426, null]], "TWIRLSUnfoldingAndAttention": [[427, null]], "Task": [[316, null]], "Task and the dataset": [[867, "task-and-the-dataset"]], "TemporalLayerNeighborSampler": [[317, null]], "TemporalNeighborSampler": [[318, null]], "Tensorflow backend": [[819, "tensorflow-backend"]], "TexasDataset": [[187, null]], "The DGMG class": [[863, "the-dgmg-class"]], "The second task, link prediction": [[855, "the-second-task-link-prediction"]], "The task and the dataset": [[860, "the-task-and-the-dataset"]], "Tips for making chunked graph data": [[699, "tips-for-making-chunked-graph-data"]], "ToLevi": [[672, null]], "ToSimple": [[673, null]], "TolokersDataset": [[188, null]], "Top-level": [[691, "top-level"]], "TorchBasedFeature": [[319, null]], "TorchBasedFeatureStore": [[320, null]], "Training": [[821, "Training"], [822, "Training"], [867, "training"]], "Training Loop": [[716, "training-loop"], [721, "training-loop"], [732, "training-loop"], [831, "Training-Loop"], [842, "training-loop"], [873, "training-loop"]], "Training a GNN for Graph Classification": [[842, null]], "Training and Evaluation": [[823, "Training-and-Evaluation"]], "Training and inference": [[856, "training-and-inference"]], "Training loop": [[719, "training-loop"], [730, "training-loop"], [733, "training-loop"], [734, "training-loop"], [840, "training-loop"], [841, "training-loop"], [850, "training-loop"], [851, "training-loop"], [855, "training-loop"]], "Training on CPUs": [[848, null]], "Training on GPU": [[838, "training-on-gpu"]], "Training on Multiple GPUs": [[874, null]], "Training the GCN": [[820, "Training-the-GCN"], [838, "training-the-gcn"]], "TransE": [[455, null]], "TransR": [[456, null]], "Transformer as a Graph Neural Network": [[867, null]], "Transforming graph": [[1, "transforming-graph"]], "Tree-LSTM in DGL": [[860, null]], "TreeCycleDataset": [[189, null]], "TreeGridDataset": [[190, null]], "Tutorials: dgl.sparse": [[824, null]], "TypedLinear": [[390, null]], "UVA and GPU support for PinSAGESampler/RandomWalkNeighborSampler": [[717, "uva-and-gpu-support-for-pinsagesampler-randomwalkneighborsampler"]], "Understand Graph Attention Network": [[857, null]], "Uniform": [[228, null]], "UniformNegativeSampler": [[321, null]], "Unit tests": [[21, "unit-tests"]], "Update feature after reducing for output": [[727, "update-feature-after-reducing-for-output"]], "Update node embeddings via graph propagation": [[863, "update-node-embeddings-via-graph-propagation"]], "User Guide": [[708, null]], "User-defined Functions": [[20, null]], "Using CUDA UVA-based neighborhood sampling in DGL data loaders": [[717, "using-cuda-uva-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using GPU-based neighbor sampling with DGL functions": [[717, "using-gpu-based-neighbor-sampling-with-dgl-functions"]], "Using GPU-based neighborhood sampling in DGL data loaders": [[717, "using-gpu-based-neighborhood-sampling-in-dgl-data-loaders"]], "Using NN Modules with Edge Weights": [[731, "using-nn-modules-with-edge-weights"]], "Using Node/edge features": [[1, "using-node-edge-features"]], "Utilities": [[0, "utilities"], [2, "utilities"], [7, "utilities"]], "Utility Class and Functions for Feature Prefetching": [[3, "utility-class-and-functions-for-feature-prefetching"]], "Utility Modules": [[15, "utility-modules"], [16, "utility-modules"]], "Utility Modules for Graph Transformer": [[16, "utility-modules-for-graph-transformer"]], "Visualization": [[867, "visualization"]], "Visualize training progress": [[856, "visualize-training-progress"]], "Visualizing and understanding attention learned": [[857, "visualizing-and-understanding-attention-learned"]], "WN18Dataset": [[191, null]], "WeightAndSum": [[445, null]], "WeightBasis": [[461, null]], "Weighted reduction across GPUs": [[831, "Weighted-reduction-across-GPUs"]], "Welcome to Deep Graph Library Tutorials and Documentation": [[818, null]], "What is a line-graph?": [[856, "what-is-a-line-graph"]], "What\u2019s next": [[842, "whats-next"]], "What\u2019s next?": [[838, "whats-next"], [839, "whats-next"], [840, "whats-next"], [857, "what-s-next"]], "WikiCSDataset": [[192, null]], "Windows": [[819, "windows"]], "WisconsinDataset": [[193, null]], "Working with Multiple Types": [[707, "working-with-multiple-types"]], "Working with different backends": [[819, "working-with-different-backends"]], "Write your own GNN module": [[840, null]], "Writing Neural Network Model": [[732, "writing-neural-network-model"]], "Writing modules that work on homogeneous graphs, bipartite graphs, and MFGs": [[720, "writing-modules-that-work-on-homogeneous-graphs-bipartite-graphs-and-mfgs"]], "Writing neural network model": [[734, "writing-neural-network-model"]], "YAML specification": [[835, null]], "YelpDataset": [[194, null]], "ZINCDataset": [[195, null]], "add_node_property_split": [[197, null]], "add_nodepred_split": [[198, null]], "check_sha1": [[199, null]], "dataset_name": [[835, "dataset-name"]], "dgl": [[0, null]], "dgl.DGLGraph": [[1, null]], "dgl.DGLGraph.__getitem__": [[26, null]], "dgl.DGLGraph.add_edges": [[27, null]], "dgl.DGLGraph.add_nodes": [[28, null]], "dgl.DGLGraph.add_self_loop": [[29, null]], "dgl.DGLGraph.adj": [[30, null]], "dgl.DGLGraph.adj_external": [[31, null]], "dgl.DGLGraph.adj_tensors": [[32, null]], "dgl.DGLGraph.adjacency_matrix": [[33, null]], "dgl.DGLGraph.apply_edges": [[34, null]], "dgl.DGLGraph.apply_nodes": [[35, null]], "dgl.DGLGraph.batch_num_edges": [[36, null]], "dgl.DGLGraph.batch_num_nodes": [[37, null]], "dgl.DGLGraph.batch_size": [[38, null]], "dgl.DGLGraph.canonical_etypes": [[39, null]], "dgl.DGLGraph.cpu": [[40, null]], "dgl.DGLGraph.create_formats_": [[41, null]], "dgl.DGLGraph.device": [[42, null]], "dgl.DGLGraph.dstdata": [[43, null]], "dgl.DGLGraph.dstnodes": [[44, null]], "dgl.DGLGraph.dsttypes": [[45, null]], "dgl.DGLGraph.edata": [[46, null]], "dgl.DGLGraph.edge_attr_schemes": [[47, null]], "dgl.DGLGraph.edge_ids": [[48, null]], "dgl.DGLGraph.edge_subgraph": [[49, null]], "dgl.DGLGraph.edge_type_subgraph": [[50, null]], "dgl.DGLGraph.edges": [[51, null]], "dgl.DGLGraph.etypes": [[52, null]], "dgl.DGLGraph.filter_edges": [[53, null]], "dgl.DGLGraph.filter_nodes": [[54, null]], "dgl.DGLGraph.find_edges": [[55, null]], "dgl.DGLGraph.formats": [[56, null]], "dgl.DGLGraph.has_edges_between": [[57, null]], "dgl.DGLGraph.has_nodes": [[58, null]], "dgl.DGLGraph.idtype": [[59, null]], "dgl.DGLGraph.in_degrees": [[60, null]], "dgl.DGLGraph.in_edges": [[61, null]], "dgl.DGLGraph.inc": [[62, null]], "dgl.DGLGraph.incidence_matrix": [[63, null]], "dgl.DGLGraph.int": [[64, null]], "dgl.DGLGraph.is_homogeneous": [[65, null]], "dgl.DGLGraph.is_multigraph": [[66, null]], "dgl.DGLGraph.is_pinned": [[67, null]], "dgl.DGLGraph.is_unibipartite": [[68, null]], "dgl.DGLGraph.line_graph": [[69, null]], "dgl.DGLGraph.local_scope": [[70, null]], "dgl.DGLGraph.long": [[71, null]], "dgl.DGLGraph.metagraph": [[72, null]], "dgl.DGLGraph.multi_update_all": [[73, null]], "dgl.DGLGraph.ndata": [[74, null]], "dgl.DGLGraph.node_attr_schemes": [[75, null]], "dgl.DGLGraph.node_type_subgraph": [[76, null]], "dgl.DGLGraph.nodes": [[77, null]], "dgl.DGLGraph.ntypes": [[78, null]], "dgl.DGLGraph.num_dst_nodes": [[79, null]], "dgl.DGLGraph.num_edges": [[80, null]], "dgl.DGLGraph.num_nodes": [[81, null]], "dgl.DGLGraph.num_src_nodes": [[82, null]], "dgl.DGLGraph.number_of_dst_nodes": [[83, null]], "dgl.DGLGraph.number_of_edges": [[84, null]], "dgl.DGLGraph.number_of_nodes": [[85, null]], "dgl.DGLGraph.number_of_src_nodes": [[86, null]], "dgl.DGLGraph.out_degrees": [[87, null]], "dgl.DGLGraph.out_edges": [[88, null]], "dgl.DGLGraph.pin_memory_": [[89, null]], "dgl.DGLGraph.predecessors": [[90, null]], "dgl.DGLGraph.prop_edges": [[91, null]], "dgl.DGLGraph.prop_nodes": [[92, null]], "dgl.DGLGraph.pull": [[93, null]], "dgl.DGLGraph.push": [[94, null]], "dgl.DGLGraph.remove_edges": [[95, null]], "dgl.DGLGraph.remove_nodes": [[96, null]], "dgl.DGLGraph.remove_self_loop": [[97, null]], "dgl.DGLGraph.reorder_graph": [[98, null]], "dgl.DGLGraph.reverse": [[99, null]], "dgl.DGLGraph.send_and_recv": [[100, null]], "dgl.DGLGraph.set_batch_num_edges": [[101, null]], "dgl.DGLGraph.set_batch_num_nodes": [[102, null]], "dgl.DGLGraph.srcdata": [[103, null]], "dgl.DGLGraph.srcnodes": [[104, null]], "dgl.DGLGraph.srctypes": [[105, null]], "dgl.DGLGraph.subgraph": [[106, null]], "dgl.DGLGraph.successors": [[107, null]], "dgl.DGLGraph.to": [[108, null]], "dgl.DGLGraph.to_canonical_etype": [[109, null]], "dgl.DGLGraph.to_cugraph": [[110, null]], "dgl.DGLGraph.to_simple": [[111, null]], "dgl.DGLGraph.unpin_memory_": [[112, null]], "dgl.DGLGraph.update_all": [[113, null]], "dgl.add_edges": [[114, null]], "dgl.add_nodes": [[115, null]], "dgl.add_reverse_edges": [[116, null]], "dgl.add_self_loop": [[117, null]], "dgl.adj_product_graph": [[118, null]], "dgl.adj_sum_graph": [[119, null]], "dgl.adjusted_homophily": [[120, null]], "dgl.apply_each": [[121, null]], "dgl.batch": [[122, null]], "dgl.bfs_edges_generator": [[123, null]], "dgl.bfs_nodes_generator": [[124, null]], "dgl.bipartite_from_networkx": [[125, null]], "dgl.bipartite_from_scipy": [[126, null]], "dgl.block_to_graph": [[127, null]], "dgl.broadcast_edges": [[128, null]], "dgl.broadcast_nodes": [[129, null]], "dgl.compact_graphs": [[130, null]], "dgl.create_block": [[131, null]], "dgl.data": [[2, null]], "dgl.dataloading": [[3, null]], "dgl.dataloading.BlockSampler": [[208, null]], "dgl.dataloading.as_edge_prediction_sampler": [[220, null]], "dgl.dfs_edges_generator": [[229, null]], "dgl.dfs_labeled_edges_generator": [[230, null]], "dgl.distributed": [[4, null]], "dgl.distributed.dgl_partition_to_graphbolt": [[231, null]], "dgl.distributed.edge_split": [[232, null]], "dgl.distributed.find_edges": [[233, null]], "dgl.distributed.in_subgraph": [[234, null]], "dgl.distributed.initialize": [[235, null]], "dgl.distributed.load_partition": [[236, null]], "dgl.distributed.load_partition_book": [[237, null]], "dgl.distributed.load_partition_feats": [[238, null]], "dgl.distributed.node_split": [[239, null]], "dgl.distributed.partition_graph": [[240, null]], "dgl.distributed.sample_etype_neighbors": [[241, null]], "dgl.distributed.sample_neighbors": [[242, null]], "dgl.double_radius_node_labeling": [[243, null]], "dgl.edge_homophily": [[244, null]], "dgl.edge_label_informativeness": [[245, null]], "dgl.edge_subgraph": [[246, null]], "dgl.edge_type_subgraph": [[247, null]], "dgl.from_cugraph": [[248, null]], "dgl.from_networkx": [[249, null]], "dgl.from_scipy": [[250, null]], "dgl.function": [[5, null]], "dgl.function.copy_e": [[251, null]], "dgl.function.copy_u": [[252, null]], "dgl.function.e_add_u": [[253, null]], "dgl.function.e_add_v": [[254, null]], "dgl.function.e_div_u": [[255, null]], "dgl.function.e_div_v": [[256, null]], "dgl.function.e_dot_u": [[257, null]], "dgl.function.e_dot_v": [[258, null]], "dgl.function.e_mul_u": [[259, null]], "dgl.function.e_mul_v": [[260, null]], "dgl.function.e_sub_u": [[261, null]], "dgl.function.e_sub_v": [[262, null]], "dgl.function.max": [[263, null]], "dgl.function.mean": [[264, null]], "dgl.function.min": [[265, null]], "dgl.function.sum": [[266, null]], "dgl.function.u_add_e": [[267, null]], "dgl.function.u_add_v": [[268, null]], "dgl.function.u_div_e": [[269, null]], "dgl.function.u_div_v": [[270, null]], "dgl.function.u_dot_e": [[271, null]], "dgl.function.u_dot_v": [[272, null]], "dgl.function.u_mul_e": [[273, null]], "dgl.function.u_mul_v": [[274, null]], "dgl.function.u_sub_e": [[275, null]], "dgl.function.u_sub_v": [[276, null]], "dgl.function.v_add_e": [[277, null]], "dgl.function.v_add_u": [[278, null]], "dgl.function.v_div_e": [[279, null]], "dgl.function.v_div_u": [[280, null]], "dgl.function.v_dot_e": [[281, null]], "dgl.function.v_dot_u": [[282, null]], "dgl.function.v_mul_e": [[283, null]], "dgl.function.v_mul_u": [[284, null]], "dgl.function.v_sub_e": [[285, null]], "dgl.function.v_sub_u": [[286, null]], "dgl.geometry": [[6, null]], "dgl.graph": [[287, null]], "dgl.graphbolt.add_reverse_edges": [[322, null]], "dgl.graphbolt.compact_csc_format": [[323, null]], "dgl.graphbolt.etype_str_to_tuple": [[324, null]], "dgl.graphbolt.etype_tuple_to_str": [[325, null]], "dgl.graphbolt.exclude_seed_edges": [[326, null]], "dgl.graphbolt.expand_indptr": [[327, null]], "dgl.graphbolt.from_dglgraph": [[328, null]], "dgl.graphbolt.fused_csc_sampling_graph": [[329, null]], "dgl.graphbolt.index_select": [[330, null]], "dgl.graphbolt.isin": [[331, null]], "dgl.graphbolt.load_from_shared_memory": [[332, null]], "dgl.graphbolt.seed": [[333, null]], "dgl.graphbolt.unique_and_compact": [[334, null]], "dgl.graphbolt.unique_and_compact_csc_formats": [[335, null]], "dgl.heterograph": [[336, null]], "dgl.in_subgraph": [[337, null]], "dgl.is_libxsmm_enabled": [[338, null]], "dgl.khop_adj": [[339, null]], "dgl.khop_graph": [[340, null]], "dgl.khop_in_subgraph": [[341, null]], "dgl.khop_out_subgraph": [[342, null]], "dgl.knn_graph": [[343, null]], "dgl.lap_pe": [[344, null]], "dgl.laplacian_lambda_max": [[345, null]], "dgl.line_graph": [[346, null]], "dgl.linkx_homophily": [[347, null]], "dgl.load_graphs": [[348, null]], "dgl.max_edges": [[349, null]], "dgl.max_nodes": [[350, null]], "dgl.mean_edges": [[351, null]], "dgl.mean_nodes": [[352, null]], "dgl.merge": [[353, null]], "dgl.metapath_reachable_graph": [[354, null]], "dgl.metis_partition": [[355, null]], "dgl.metis_partition_assignment": [[356, null]], "dgl.multiprocessing": [[8, null]], "dgl.multiprocessing.pytorch.call_once_and_share": [[357, null]], "dgl.multiprocessing.pytorch.shared_tensor": [[358, null]], "dgl.nn (MXNet)": [[15, null]], "dgl.nn (PyTorch)": [[16, null]], "dgl.nn (TensorFlow)": [[17, null]], "dgl.nn.functional": [[18, null]], "dgl.nn.functional.edge_softmax": [[359, null]], "dgl.node_homophily": [[476, null]], "dgl.node_label_informativeness": [[477, null]], "dgl.node_subgraph": [[478, null]], "dgl.node_type_subgraph": [[479, null]], "dgl.norm_by_dst": [[480, null]], "dgl.ops": [[9, null]], "dgl.ops.copy_e_max": [[481, null]], "dgl.ops.copy_e_mean": [[482, null]], "dgl.ops.copy_e_min": [[483, null]], "dgl.ops.copy_e_sum": [[484, null]], "dgl.ops.copy_u": [[485, null]], "dgl.ops.copy_u_max": [[486, null]], "dgl.ops.copy_u_mean": [[487, null]], "dgl.ops.copy_u_min": [[488, null]], "dgl.ops.copy_u_sum": [[489, null]], "dgl.ops.copy_v": [[490, null]], "dgl.ops.e_add_u": [[491, null]], "dgl.ops.e_add_v": [[492, null]], "dgl.ops.e_div_u": [[493, null]], "dgl.ops.e_div_v": [[494, null]], "dgl.ops.e_dot_u": [[495, null]], "dgl.ops.e_dot_v": [[496, null]], "dgl.ops.e_mul_u": [[497, null]], "dgl.ops.e_mul_v": [[498, null]], "dgl.ops.e_sub_u": [[499, null]], "dgl.ops.e_sub_v": [[500, null]], "dgl.ops.gather_mm": [[501, null]], "dgl.ops.gsddmm": [[502, null]], "dgl.ops.gspmm": [[503, null]], "dgl.ops.segment_mm": [[504, null]], "dgl.ops.segment_reduce": [[505, null]], "dgl.ops.u_add_e": [[506, null]], "dgl.ops.u_add_e_max": [[507, null]], "dgl.ops.u_add_e_mean": [[508, null]], "dgl.ops.u_add_e_min": [[509, null]], "dgl.ops.u_add_e_sum": [[510, null]], "dgl.ops.u_add_v": [[511, null]], "dgl.ops.u_div_e": [[512, null]], "dgl.ops.u_div_e_max": [[513, null]], "dgl.ops.u_div_e_mean": [[514, null]], "dgl.ops.u_div_e_min": [[515, null]], "dgl.ops.u_div_e_sum": [[516, null]], "dgl.ops.u_div_v": [[517, null]], "dgl.ops.u_dot_e": [[518, null]], "dgl.ops.u_dot_v": [[519, null]], "dgl.ops.u_mul_e": [[520, null]], "dgl.ops.u_mul_e_max": [[521, null]], "dgl.ops.u_mul_e_mean": [[522, null]], "dgl.ops.u_mul_e_min": [[523, null]], "dgl.ops.u_mul_e_sum": [[524, null]], "dgl.ops.u_mul_v": [[525, null]], "dgl.ops.u_sub_e": [[526, null]], "dgl.ops.u_sub_e_max": [[527, null]], "dgl.ops.u_sub_e_mean": [[528, null]], "dgl.ops.u_sub_e_min": [[529, null]], "dgl.ops.u_sub_e_sum": [[530, null]], "dgl.ops.u_sub_v": [[531, null]], "dgl.ops.v_add_e": [[532, null]], "dgl.ops.v_add_u": [[533, null]], "dgl.ops.v_div_e": [[534, null]], "dgl.ops.v_div_u": [[535, null]], "dgl.ops.v_dot_e": [[536, null]], "dgl.ops.v_dot_u": [[537, null]], "dgl.ops.v_mul_e": [[538, null]], "dgl.ops.v_mul_u": [[539, null]], "dgl.ops.v_sub_e": [[540, null]], "dgl.ops.v_sub_u": [[541, null]], "dgl.optim": [[10, null]], "dgl.out_subgraph": [[542, null]], "dgl.partition_graph_with_halo": [[543, null]], "dgl.prop_edges": [[544, null]], "dgl.prop_edges_dfs": [[545, null]], "dgl.prop_nodes": [[546, null]], "dgl.prop_nodes_bfs": [[547, null]], "dgl.prop_nodes_topo": [[548, null]], "dgl.radius_graph": [[549, null]], "dgl.rand_bipartite": [[550, null]], "dgl.rand_graph": [[551, null]], "dgl.random_walk_pe": [[552, null]], "dgl.readout_edges": [[553, null]], "dgl.readout_nodes": [[554, null]], "dgl.remove_edges": [[555, null]], "dgl.remove_nodes": [[556, null]], "dgl.remove_self_loop": [[557, null]], "dgl.reorder_graph": [[558, null]], "dgl.reverse": [[559, null]], "dgl.sampling": [[11, null]], "dgl.sampling.PinSAGESampler": [[560, null]], "dgl.sampling.global_uniform_negative_sampling": [[561, null]], "dgl.sampling.node2vec_random_walk": [[562, null]], "dgl.sampling.pack_traces": [[563, null]], "dgl.sampling.random_walk": [[564, null]], "dgl.sampling.sample_labors": [[565, null]], "dgl.sampling.sample_neighbors": [[566, null]], "dgl.sampling.sample_neighbors_biased": [[567, null]], "dgl.sampling.select_topk": [[568, null]], "dgl.save_graphs": [[569, null]], "dgl.seed": [[570, null]], "dgl.segmented_knn_graph": [[571, null]], "dgl.shortest_dist": [[572, null]], "dgl.slice_batch": [[573, null]], "dgl.softmax_edges": [[574, null]], "dgl.softmax_nodes": [[575, null]], "dgl.sort_csc_by_tag": [[576, null]], "dgl.sort_csr_by_tag": [[577, null]], "dgl.sparse": [[12, null]], "dgl.sparse.SparseMatrix.T": [[578, null]], "dgl.sparse.SparseMatrix.coalesce": [[579, null]], "dgl.sparse.SparseMatrix.col": [[580, null]], "dgl.sparse.SparseMatrix.coo": [[581, null]], "dgl.sparse.SparseMatrix.cpu": [[582, null]], "dgl.sparse.SparseMatrix.csc": [[583, null]], "dgl.sparse.SparseMatrix.csr": [[584, null]], "dgl.sparse.SparseMatrix.cuda": [[585, null]], "dgl.sparse.SparseMatrix.device": [[586, null]], "dgl.sparse.SparseMatrix.double": [[587, null]], "dgl.sparse.SparseMatrix.dtype": [[588, null]], "dgl.sparse.SparseMatrix.float": [[589, null]], "dgl.sparse.SparseMatrix.has_duplicate": [[590, null]], "dgl.sparse.SparseMatrix.indices": [[591, null]], "dgl.sparse.SparseMatrix.int": [[592, null]], "dgl.sparse.SparseMatrix.long": [[593, null]], "dgl.sparse.SparseMatrix.neg": [[594, null]], "dgl.sparse.SparseMatrix.nnz": [[595, null]], "dgl.sparse.SparseMatrix.reduce": [[596, null]], "dgl.sparse.SparseMatrix.row": [[597, null]], "dgl.sparse.SparseMatrix.shape": [[598, null]], "dgl.sparse.SparseMatrix.smax": [[599, null]], "dgl.sparse.SparseMatrix.smean": [[600, null]], "dgl.sparse.SparseMatrix.smin": [[601, null]], "dgl.sparse.SparseMatrix.softmax": [[602, null]], "dgl.sparse.SparseMatrix.sum": [[603, null]], "dgl.sparse.SparseMatrix.t": [[604, null]], "dgl.sparse.SparseMatrix.to": [[605, null]], "dgl.sparse.SparseMatrix.to_dense": [[606, null]], "dgl.sparse.SparseMatrix.transpose": [[607, null]], "dgl.sparse.SparseMatrix.val": [[608, null]], "dgl.sparse.add": [[609, null]], "dgl.sparse.bsddmm": [[610, null]], "dgl.sparse.bspmm": [[611, null]], "dgl.sparse.diag": [[612, null]], "dgl.sparse.div": [[613, null]], "dgl.sparse.from_coo": [[614, null]], "dgl.sparse.from_csc": [[615, null]], "dgl.sparse.from_csr": [[616, null]], "dgl.sparse.identity": [[617, null]], "dgl.sparse.matmul": [[618, null]], "dgl.sparse.mul": [[619, null]], "dgl.sparse.power": [[620, null]], "dgl.sparse.sddmm": [[621, null]], "dgl.sparse.softmax": [[622, null]], "dgl.sparse.sp_add_v": [[623, null]], "dgl.sparse.sp_broadcast_v": [[624, null]], "dgl.sparse.sp_div_v": [[625, null]], "dgl.sparse.sp_mul_v": [[626, null]], "dgl.sparse.sp_sub_v": [[627, null]], "dgl.sparse.spmatrix": [[628, null]], "dgl.sparse.spmm": [[629, null]], "dgl.sparse.spspmm": [[630, null]], "dgl.sparse.sub": [[631, null]], "dgl.sparse.val_like": [[632, null]], "dgl.sum_edges": [[633, null]], "dgl.sum_nodes": [[634, null]], "dgl.svd_pe": [[635, null]], "dgl.to_bidirected": [[636, null]], "dgl.to_block": [[637, null]], "dgl.to_cugraph": [[638, null]], "dgl.to_double": [[639, null]], "dgl.to_float": [[640, null]], "dgl.to_half": [[641, null]], "dgl.to_heterogeneous": [[642, null]], "dgl.to_homogeneous": [[643, null]], "dgl.to_networkx": [[644, null]], "dgl.to_simple": [[645, null]], "dgl.to_simple_graph": [[646, null]], "dgl.topk_edges": [[647, null]], "dgl.topk_nodes": [[648, null]], "dgl.topological_nodes_generator": [[649, null]], "dgl.transforms": [[19, null]], "dgl.udf.EdgeBatch.batch_size": [[674, null]], "dgl.udf.EdgeBatch.data": [[675, null]], "dgl.udf.EdgeBatch.dst": [[676, null]], "dgl.udf.EdgeBatch.edges": [[677, null]], "dgl.udf.EdgeBatch.src": [[678, null]], "dgl.udf.NodeBatch.batch_size": [[679, null]], "dgl.udf.NodeBatch.data": [[680, null]], "dgl.udf.NodeBatch.mailbox": [[681, null]], "dgl.udf.NodeBatch.nodes": [[682, null]], "dgl.unbatch": [[683, null]], "dgl.use_libxsmm": [[684, null]], "download": [[200, null]], "edges.csv": [[703, "id2"], [747, "id6"], [788, "id6"]], "extract_archive": [[201, null]], "feature_data": [[835, "feature-data"]], "get_download_dir": [[202, null]], "graph": [[835, "graph"]], "load_info": [[203, null]], "load_labels": [[204, null]], "macOS": [[819, "macos"]], "mask_nodes_by_property": [[205, null]], "nodes.csv": [[703, "id1"], [747, "id5"], [788, "id5"]], "save_info": [[206, null]], "set_dst_lazy_features": [[222, null]], "set_edge_lazy_features": [[223, null]], "set_node_lazy_features": [[224, null]], "set_src_lazy_features": [[225, null]], "split_dataset": [[207, null]], "tasks": [[835, "tasks"]], "v0.4.3 Benchmarks": [[826, "v0-4-3-benchmarks"]], "v0.5 Benchmarks": [[826, "v0-5-benchmarks"]], "v0.6 Benchmarks": [[826, "v0-6-benchmarks"]], "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": [[770, "id3"]], "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": [[747, "id2"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": [[747, "id3"]], "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": [[751, "id4"]], "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": [[751, "id3"]], "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": [[771, "id2"]], "\u5206\u5272\u6570\u636e\u96c6": [[742, "id8"]], "\u5206\u5e03\u5f0f\u56fe": [[742, "id1"]], "\u5206\u5e03\u5f0f\u5d4c\u5165": [[742, "id6"]], "\u5206\u5e03\u5f0f\u5f20\u91cf": [[742, "id5"]], "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": [[742, "id2"]], "\u5206\u5e03\u5f0f\u91c7\u6837": [[742, "id7"]], "\u521b\u5efaDistGraph": [[742, "distgraph"]], "\u521b\u5efa\u5f02\u6784\u56fe": [[751, "id2"]], "\u56fe\u8bfb\u51fa": [[772, "id4"]], "\u5728NN\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": [[771, "nn"]], "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": [[770, "id6"]], "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": [[739, "id2"]], "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": [[739, "id3"]], "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": [[739, "id4"]], "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": [[759, "id4"]], "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[760, "id2"], [764, "id2"]], "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": [[759, "guide-cn-minibatch-customizing-neighborhood-sampler-impl"]], "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": [[761, "id2"]], "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe\u3001\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": [[763, "id2"]], "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": [[751, "id6"]], "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": [[760, "id3"]], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": [[764, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[772, "id10"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": [[763, "id1"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": [[760, "id6"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": [[774, "guide-cn-training-rgcn-node-classification"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[770, "guide-cn-training-edge-classification-heterogeneous-graph"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": [[759, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": [[773, "id4"]], "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": [[762, "id5"]], "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": [[759, "id7"]], "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": [[769, "guide-cn-training-heterogeneous-graph-example"]], "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": [[772, "id6"]], "\u6279\u6b21\u7684\u56fe": [[772, "id3"]], "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": [[759, "id3"]], "\u6570\u636e\u52a0\u8f7d": [[772, "id9"]], "\u672c\u7ae0\u8def\u7ebf\u56fe": [[735, "id2"], [745, "id2"], [753, "id3"], [758, "id3"], [765, "id1"], [769, "id4"]], "\u6982\u8ff0": [[769, "id2"], [770, "id2"], [772, "id2"], [773, "id2"], [774, "id2"]], "\u6a21\u578b\u5b9a\u4e49": [[772, "id7"]], "\u6a21\u578b\u7684\u8bad\u7ec3": [[760, "id5"], [762, "id4"], [764, "id4"], [770, "id4"], [772, "id8"], [773, "id3"], [774, "id4"]], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": [[767, "id2"]], "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[753, "id2"]], "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": [[759, "id2"]], "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011": [[752, null]], "\u7b2c1\u7ae0\uff1a\u56fe": [[745, null]], "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [[753, null]], "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757": [[765, null]], "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [[735, null]], "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [[769, null]], "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3": [[758, null]], "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3": [[741, null]], "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [[762, "id2"]], "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [[772, "id5"], [774, "id3"]], "\u805a\u5408\u540e\uff0c\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": [[767, "id3"]], "\u8bbf\u95ee\u56fe\u7ed3\u6784": [[742, "id3"]], "\u8bbf\u95ee\u8282\u70b9/\u8fb9\u6570\u636e": [[742, "id4"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [[762, "id3"], [764, "guide-cn-minibatch-node-classification-model"]], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": [[760, "id4"]], "\u8d1f\u8f7d\u5747\u8861": [[743, "id2"]], "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": [[767, "id1"]], "\u8fb9\u7c7b\u578b\u5b50\u56fe": [[751, "id5"]], "\u9017\u53f7\u5206\u9694\u503c\uff08CSV\uff09": [[747, "csv"], [751, "csv"]], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": [[758, "id2"]], "\uac1c\uc694": [[813, "id2"], [814, "id1"], [815, "id2"], [816, "id2"], [817, "id1"]], "\uadf8\ub798\ud504 \uad6c\uc870 \uc811\uadfc": [[782, "id1"]], "\uadf8\ub798\ud504 \ub9ac\ub4dc\uc544\uc6c3(readout)": [[815, "readout"]], "\uadf8\ub798\ud504 \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[779, "id2"]], "\uadf8\ub798\ud504 \uccb4\ud06c\uc640 \uadf8\ub798\ud504 \ud0c0\uc785 \uba85\uc138\ud654(graph type specification)": [[811, "graph-type-specification"]], "\uadf8\ub798\ud504\ub4e4\uc758 \ubc30\uce58(batch)": [[815, "batch"]], "\ub178\ub4dc \ubd84\ub958 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[779, "id3"]], "\ub178\ub4dc \ubd84\ub958 \ubaa8\ub378\uacfc \uad6c\ud604\uc0c1\uc758 \ucc28\uc774\uc810": [[814, "id2"]], "\ub178\ub4dc/\uc5d0\uc9c0 \ub370\uc774\ud130 \uc811\uadfc": [[782, "id2"]], "\ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ubaa8\ub378 \uc791\uc131\ud558\uae30": [[815, "id3"], [817, "id2"]], "\ub2e4\uc591\ud55c \ud0c0\uc785\uc744 \ub2e4\ub8e8\uae30": [[792, "id2"]], "\ub370\uc774\ud130 \ub85c\ub529": [[815, "id7"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[788, "id3"]], "\ub514\uc2a4\ud06c\uc5d0\uc11c \uc774\uc885 \uadf8\ub798\ud504 \ub85c\ub529\ud558\uae30": [[792, "id3"]], "\ub85c\ub4dc \ubc38\ub7f0\uc2f1": [[784, "id2"]], "\ub85c\ub4dc\ub9f5": [[775, "id2"], [786, "id2"], [794, "id1"], [800, "id1"], [809, "id1"], [813, "id3"]], "\ub9c1\ud06c \uc608\uce21 \ub370\uc774\ud130\uc14b \ud504\ub85c\uc138\uc2f1": [[779, "id4"]], "\uba40\ud2f0-\ub808\uc774\uc5b4 \ubbf8\ub2c8\ubc30\uce58 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc744 \uc704\ud55c \uc774\ubd84 \uad6c\uc870(Bipartite Structure)": [[801, "bipartite-structure"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec \uc758\uc874\uc131 \ucc3e\uae30": [[801, "id3"]], "\uba54\uc2dc\uc9c0 \uc804\ub2ec\uacfc \ucd95\uc57d": [[811, "id1"]], "\uba54\uc9c0\uc2dc \uc804\ub2ec \ud328\ub7ec\ub2e4\uc784(Message Passing Paradigm)": [[794, "message-passing-paradigm"]], "\ubaa8\ub378 \uc815\uc758\ud558\uae30": [[815, "id5"]], "\ubaa8\ub378\uc744 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc5d0 \ub9de\uac8c \ub9cc\ub4e4\uae30": [[802, "id3"], [805, "id1"], [807, "guide-ko-minibatch-node-classification-model"]], "\ubc30\uce58 \uadf8\ub798\ud504\uc5d0 \uc5f0\uc0b0\ud558\uae30": [[815, "id4"]], "\ubd84\uc0b0 DistEmbedding": [[782, "distembedding"]], "\ubd84\uc0b0 \ubaa8\ub4dc vs. \ub2e8\ub3c5(standalone) \ubaa8\ub4dc": [[782, "vs-standalone"]], "\ubd84\uc0b0 \uc0d8\ud50c\ub9c1": [[782, "id3"]], "\ubd84\uc0b0 \ud150\uc11c(Distributed Tensor)": [[782, "distributed-tensor"]], "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]": [[793, null]], "\uc5d0\uc9c0 \ud0c0\uc785 \uc11c\ube0c\uadf8\ub798\ud504": [[792, "id4"]], "\uc624\ud504\ub77c\uc778 \ucd94\ub860 \uad6c\ud604\ud558\uae30": [[804, "id2"]], "\uc678\ubd80 \ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c \uc0ac\uc6a9\ud574\uc11c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[788, "id2"]], "\uc6cc\ud06c\ub85c\ub4dc \ub098\ub204\uae30(Split workloads)": [[782, "split-workloads"]], "\uc774\uc6c3 \uc0d8\ud50c\ub7ec \ubc0f \ub370\uc774\ud130 \ub85c\ub354 \uc815\uc758\ud558\uae30": [[802, "id1"], [807, "id1"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1 \uc9c1\uc811 \ud574\ubcf4\uae30": [[801, "id2"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1(Neighborhood Sampling) \ubc29\ubc95 \uac1c\uc694": [[800, "neighborhood-sampling"]], "\uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc704\ud574\uc11c \uc6d0\ubcf8 \uadf8\ub798\ud504\uc5d0\uc11c \ubbf8\ub2c8 \ubc30\uce58\uc758 \uc5d0\uc9c0\ub4e4 \uc81c\uac70\ud558\uae30": [[802, "id2"]], "\uc774\uc885 \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30": [[792, "id1"]], "\uc774\uc885 \uadf8\ub798\ud504\ub97c \ub3d9\uc885 \uadf8\ub798\ud504\ub85c \ubcc0\ud658\ud558\uae30": [[792, "id5"]], "\ucd9c\ub825\uac12\uc744 \uc704\ud55c \ucd95\uc57d \ud6c4 \ud53c\uccd0 \uc5c5\ub370\uc774\ud2b8": [[811, "id2"]], "\ucee4\uc2a4\ud140 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \uad6c\ud604\ud558\uae30": [[801, "guide-ko-minibatch-customizing-neighborhood-sampler-impl"]], "\ud559\uc2b5 \ub8f9": [[802, "id4"], [805, "id2"], [807, "id3"], [815, "id6"], [816, "id3"]], "\ud559\uc2b5 \ub8f9(loop)": [[814, "loop"], [817, "loop"]], "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt": [[829, null]], "\ud83c\udd95 Tutorial: Graph Transformer": [[686, null]], "\ud83c\udd95 dgl.graphbolt": [[7, null]]}, "docnames": ["api/python/dgl", "api/python/dgl.DGLGraph", "api/python/dgl.data", "api/python/dgl.dataloading", "api/python/dgl.distributed", "api/python/dgl.function", "api/python/dgl.geometry", "api/python/dgl.graphbolt", "api/python/dgl.multiprocessing", "api/python/dgl.ops", "api/python/dgl.optim", "api/python/dgl.sampling", "api/python/dgl.sparse_v0", "api/python/index", "api/python/knn_benchmark", "api/python/nn-mxnet", "api/python/nn-pytorch", "api/python/nn-tensorflow", "api/python/nn.functional", "api/python/transforms", "api/python/udf", "contribute", "developer/ffi", "env_var", "faq", "features/dataset", "generated/dgl.DGLGraph.__getitem__", "generated/dgl.DGLGraph.add_edges", "generated/dgl.DGLGraph.add_nodes", "generated/dgl.DGLGraph.add_self_loop", "generated/dgl.DGLGraph.adj", "generated/dgl.DGLGraph.adj_external", "generated/dgl.DGLGraph.adj_tensors", "generated/dgl.DGLGraph.adjacency_matrix", "generated/dgl.DGLGraph.apply_edges", "generated/dgl.DGLGraph.apply_nodes", "generated/dgl.DGLGraph.batch_num_edges", "generated/dgl.DGLGraph.batch_num_nodes", "generated/dgl.DGLGraph.batch_size", "generated/dgl.DGLGraph.canonical_etypes", "generated/dgl.DGLGraph.cpu", "generated/dgl.DGLGraph.create_formats_", "generated/dgl.DGLGraph.device", "generated/dgl.DGLGraph.dstdata", "generated/dgl.DGLGraph.dstnodes", "generated/dgl.DGLGraph.dsttypes", "generated/dgl.DGLGraph.edata", "generated/dgl.DGLGraph.edge_attr_schemes", "generated/dgl.DGLGraph.edge_ids", "generated/dgl.DGLGraph.edge_subgraph", "generated/dgl.DGLGraph.edge_type_subgraph", "generated/dgl.DGLGraph.edges", "generated/dgl.DGLGraph.etypes", "generated/dgl.DGLGraph.filter_edges", "generated/dgl.DGLGraph.filter_nodes", "generated/dgl.DGLGraph.find_edges", "generated/dgl.DGLGraph.formats", "generated/dgl.DGLGraph.has_edges_between", "generated/dgl.DGLGraph.has_nodes", "generated/dgl.DGLGraph.idtype", "generated/dgl.DGLGraph.in_degrees", "generated/dgl.DGLGraph.in_edges", "generated/dgl.DGLGraph.inc", "generated/dgl.DGLGraph.incidence_matrix", "generated/dgl.DGLGraph.int", "generated/dgl.DGLGraph.is_homogeneous", "generated/dgl.DGLGraph.is_multigraph", "generated/dgl.DGLGraph.is_pinned", "generated/dgl.DGLGraph.is_unibipartite", "generated/dgl.DGLGraph.line_graph", "generated/dgl.DGLGraph.local_scope", "generated/dgl.DGLGraph.long", "generated/dgl.DGLGraph.metagraph", "generated/dgl.DGLGraph.multi_update_all", "generated/dgl.DGLGraph.ndata", "generated/dgl.DGLGraph.node_attr_schemes", "generated/dgl.DGLGraph.node_type_subgraph", "generated/dgl.DGLGraph.nodes", "generated/dgl.DGLGraph.ntypes", "generated/dgl.DGLGraph.num_dst_nodes", "generated/dgl.DGLGraph.num_edges", "generated/dgl.DGLGraph.num_nodes", "generated/dgl.DGLGraph.num_src_nodes", "generated/dgl.DGLGraph.number_of_dst_nodes", "generated/dgl.DGLGraph.number_of_edges", "generated/dgl.DGLGraph.number_of_nodes", "generated/dgl.DGLGraph.number_of_src_nodes", "generated/dgl.DGLGraph.out_degrees", "generated/dgl.DGLGraph.out_edges", "generated/dgl.DGLGraph.pin_memory_", "generated/dgl.DGLGraph.predecessors", "generated/dgl.DGLGraph.prop_edges", "generated/dgl.DGLGraph.prop_nodes", "generated/dgl.DGLGraph.pull", "generated/dgl.DGLGraph.push", "generated/dgl.DGLGraph.remove_edges", "generated/dgl.DGLGraph.remove_nodes", "generated/dgl.DGLGraph.remove_self_loop", "generated/dgl.DGLGraph.reorder_graph", "generated/dgl.DGLGraph.reverse", "generated/dgl.DGLGraph.send_and_recv", "generated/dgl.DGLGraph.set_batch_num_edges", "generated/dgl.DGLGraph.set_batch_num_nodes", "generated/dgl.DGLGraph.srcdata", "generated/dgl.DGLGraph.srcnodes", "generated/dgl.DGLGraph.srctypes", "generated/dgl.DGLGraph.subgraph", "generated/dgl.DGLGraph.successors", "generated/dgl.DGLGraph.to", "generated/dgl.DGLGraph.to_canonical_etype", "generated/dgl.DGLGraph.to_cugraph", "generated/dgl.DGLGraph.to_simple", "generated/dgl.DGLGraph.unpin_memory_", "generated/dgl.DGLGraph.update_all", "generated/dgl.add_edges", "generated/dgl.add_nodes", "generated/dgl.add_reverse_edges", "generated/dgl.add_self_loop", "generated/dgl.adj_product_graph", "generated/dgl.adj_sum_graph", "generated/dgl.adjusted_homophily", "generated/dgl.apply_each", "generated/dgl.batch", "generated/dgl.bfs_edges_generator", "generated/dgl.bfs_nodes_generator", "generated/dgl.bipartite_from_networkx", "generated/dgl.bipartite_from_scipy", "generated/dgl.block_to_graph", "generated/dgl.broadcast_edges", "generated/dgl.broadcast_nodes", "generated/dgl.compact_graphs", "generated/dgl.create_block", "generated/dgl.data.AIFBDataset", "generated/dgl.data.AMDataset", "generated/dgl.data.ActorDataset", "generated/dgl.data.AmazonCoBuyComputerDataset", "generated/dgl.data.AmazonCoBuyPhotoDataset", "generated/dgl.data.AmazonRatingsDataset", "generated/dgl.data.AsGraphPredDataset", "generated/dgl.data.AsLinkPredDataset", "generated/dgl.data.AsNodePredDataset", "generated/dgl.data.BA2MotifDataset", "generated/dgl.data.BACommunityDataset", "generated/dgl.data.BAShapeDataset", "generated/dgl.data.BGSDataset", "generated/dgl.data.BitcoinOTCDataset", "generated/dgl.data.CIFAR10SuperPixelDataset", "generated/dgl.data.CLUSTERDataset", "generated/dgl.data.CSVDataset", "generated/dgl.data.ChameleonDataset", "generated/dgl.data.CiteseerGraphDataset", "generated/dgl.data.CoauthorCSDataset", "generated/dgl.data.CoauthorPhysicsDataset", "generated/dgl.data.CoraFullDataset", "generated/dgl.data.CoraGraphDataset", "generated/dgl.data.CornellDataset", "generated/dgl.data.DGLDataset", "generated/dgl.data.FB15k237Dataset", "generated/dgl.data.FB15kDataset", "generated/dgl.data.FakeNewsDataset", "generated/dgl.data.FlickrDataset", "generated/dgl.data.FraudAmazonDataset", "generated/dgl.data.FraudDataset", "generated/dgl.data.FraudYelpDataset", "generated/dgl.data.GDELTDataset", "generated/dgl.data.GINDataset", "generated/dgl.data.ICEWS18Dataset", "generated/dgl.data.KarateClubDataset", "generated/dgl.data.LegacyTUDataset", "generated/dgl.data.MNISTSuperPixelDataset", "generated/dgl.data.MUTAGDataset", "generated/dgl.data.MinesweeperDataset", "generated/dgl.data.MiniGCDataset", "generated/dgl.data.MovieLensDataset", "generated/dgl.data.PATTERNDataset", "generated/dgl.data.PPIDataset", "generated/dgl.data.PubmedGraphDataset", "generated/dgl.data.QM7bDataset", "generated/dgl.data.QM9Dataset", "generated/dgl.data.QM9EdgeDataset", "generated/dgl.data.QuestionsDataset", "generated/dgl.data.RedditDataset", "generated/dgl.data.RomanEmpireDataset", "generated/dgl.data.SBMMixtureDataset", "generated/dgl.data.SSTDataset", "generated/dgl.data.SquirrelDataset", "generated/dgl.data.TUDataset", "generated/dgl.data.TexasDataset", "generated/dgl.data.TolokersDataset", "generated/dgl.data.TreeCycleDataset", "generated/dgl.data.TreeGridDataset", "generated/dgl.data.WN18Dataset", "generated/dgl.data.WikiCSDataset", "generated/dgl.data.WisconsinDataset", "generated/dgl.data.YelpDataset", "generated/dgl.data.ZINCDataset", "generated/dgl.data.utils.Subset", "generated/dgl.data.utils.add_node_property_split", "generated/dgl.data.utils.add_nodepred_split", "generated/dgl.data.utils.check_sha1", "generated/dgl.data.utils.download", "generated/dgl.data.utils.extract_archive", "generated/dgl.data.utils.get_download_dir", "generated/dgl.data.utils.load_info", "generated/dgl.data.utils.load_labels", "generated/dgl.data.utils.mask_nodes_by_property", "generated/dgl.data.utils.save_info", "generated/dgl.data.utils.split_dataset", "generated/dgl.dataloading.BlockSampler", "generated/dgl.dataloading.ClusterGCNSampler", "generated/dgl.dataloading.DataLoader", "generated/dgl.dataloading.DistEdgeDataLoader", "generated/dgl.dataloading.DistNodeDataLoader", "generated/dgl.dataloading.GraphDataLoader", "generated/dgl.dataloading.LaborSampler", "generated/dgl.dataloading.MultiLayerFullNeighborSampler", "generated/dgl.dataloading.NeighborSampler", "generated/dgl.dataloading.SAINTSampler", "generated/dgl.dataloading.Sampler", "generated/dgl.dataloading.ShaDowKHopSampler", "generated/dgl.dataloading.as_edge_prediction_sampler", "generated/dgl.dataloading.base.LazyFeature", "generated/dgl.dataloading.base.set_dst_lazy_features", "generated/dgl.dataloading.base.set_edge_lazy_features", "generated/dgl.dataloading.base.set_node_lazy_features", "generated/dgl.dataloading.base.set_src_lazy_features", "generated/dgl.dataloading.negative_sampler.GlobalUniform", "generated/dgl.dataloading.negative_sampler.PerSourceUniform", "generated/dgl.dataloading.negative_sampler.Uniform", "generated/dgl.dfs_edges_generator", "generated/dgl.dfs_labeled_edges_generator", "generated/dgl.distributed.dgl_partition_to_graphbolt", "generated/dgl.distributed.edge_split", "generated/dgl.distributed.find_edges", "generated/dgl.distributed.in_subgraph", "generated/dgl.distributed.initialize", "generated/dgl.distributed.load_partition", "generated/dgl.distributed.load_partition_book", "generated/dgl.distributed.load_partition_feats", "generated/dgl.distributed.node_split", "generated/dgl.distributed.partition_graph", "generated/dgl.distributed.sample_etype_neighbors", "generated/dgl.distributed.sample_neighbors", "generated/dgl.double_radius_node_labeling", "generated/dgl.edge_homophily", "generated/dgl.edge_label_informativeness", "generated/dgl.edge_subgraph", "generated/dgl.edge_type_subgraph", "generated/dgl.from_cugraph", "generated/dgl.from_networkx", "generated/dgl.from_scipy", "generated/dgl.function.copy_e", "generated/dgl.function.copy_u", "generated/dgl.function.e_add_u", "generated/dgl.function.e_add_v", "generated/dgl.function.e_div_u", "generated/dgl.function.e_div_v", "generated/dgl.function.e_dot_u", "generated/dgl.function.e_dot_v", "generated/dgl.function.e_mul_u", "generated/dgl.function.e_mul_v", "generated/dgl.function.e_sub_u", "generated/dgl.function.e_sub_v", "generated/dgl.function.max", "generated/dgl.function.mean", "generated/dgl.function.min", "generated/dgl.function.sum", "generated/dgl.function.u_add_e", "generated/dgl.function.u_add_v", "generated/dgl.function.u_div_e", "generated/dgl.function.u_div_v", "generated/dgl.function.u_dot_e", "generated/dgl.function.u_dot_v", "generated/dgl.function.u_mul_e", "generated/dgl.function.u_mul_v", "generated/dgl.function.u_sub_e", "generated/dgl.function.u_sub_v", "generated/dgl.function.v_add_e", "generated/dgl.function.v_add_u", "generated/dgl.function.v_div_e", "generated/dgl.function.v_div_u", "generated/dgl.function.v_dot_e", "generated/dgl.function.v_dot_u", "generated/dgl.function.v_mul_e", "generated/dgl.function.v_mul_u", "generated/dgl.function.v_sub_e", "generated/dgl.function.v_sub_u", "generated/dgl.graph", "generated/dgl.graphbolt.BasicFeatureStore", "generated/dgl.graphbolt.BuiltinDataset", "generated/dgl.graphbolt.CPUCachedFeature", "generated/dgl.graphbolt.CopyTo", "generated/dgl.graphbolt.DataLoader", "generated/dgl.graphbolt.Dataset", "generated/dgl.graphbolt.DiskBasedFeature", "generated/dgl.graphbolt.DistributedItemSampler", "generated/dgl.graphbolt.Feature", "generated/dgl.graphbolt.FeatureFetcher", "generated/dgl.graphbolt.FeatureStore", "generated/dgl.graphbolt.FusedCSCSamplingGraph", "generated/dgl.graphbolt.GPUCachedFeature", "generated/dgl.graphbolt.HeteroItemSet", "generated/dgl.graphbolt.InSubgraphSampler", "generated/dgl.graphbolt.ItemSampler", "generated/dgl.graphbolt.ItemSet", "generated/dgl.graphbolt.LayerNeighborSampler", "generated/dgl.graphbolt.LegacyDataset", "generated/dgl.graphbolt.MiniBatch", "generated/dgl.graphbolt.MiniBatchTransformer", "generated/dgl.graphbolt.NegativeSampler", "generated/dgl.graphbolt.NeighborSampler", "generated/dgl.graphbolt.OnDiskDataset", "generated/dgl.graphbolt.SampledSubgraph", "generated/dgl.graphbolt.SampledSubgraphImpl", "generated/dgl.graphbolt.SamplingGraph", "generated/dgl.graphbolt.SubgraphSampler", "generated/dgl.graphbolt.Task", "generated/dgl.graphbolt.TemporalLayerNeighborSampler", "generated/dgl.graphbolt.TemporalNeighborSampler", "generated/dgl.graphbolt.TorchBasedFeature", "generated/dgl.graphbolt.TorchBasedFeatureStore", "generated/dgl.graphbolt.UniformNegativeSampler", "generated/dgl.graphbolt.add_reverse_edges", "generated/dgl.graphbolt.compact_csc_format", "generated/dgl.graphbolt.etype_str_to_tuple", "generated/dgl.graphbolt.etype_tuple_to_str", "generated/dgl.graphbolt.exclude_seed_edges", "generated/dgl.graphbolt.expand_indptr", "generated/dgl.graphbolt.from_dglgraph", "generated/dgl.graphbolt.fused_csc_sampling_graph", "generated/dgl.graphbolt.index_select", "generated/dgl.graphbolt.isin", "generated/dgl.graphbolt.load_from_shared_memory", "generated/dgl.graphbolt.seed", "generated/dgl.graphbolt.unique_and_compact", "generated/dgl.graphbolt.unique_and_compact_csc_formats", "generated/dgl.heterograph", "generated/dgl.in_subgraph", "generated/dgl.is_libxsmm_enabled", "generated/dgl.khop_adj", "generated/dgl.khop_graph", "generated/dgl.khop_in_subgraph", "generated/dgl.khop_out_subgraph", "generated/dgl.knn_graph", "generated/dgl.lap_pe", "generated/dgl.laplacian_lambda_max", "generated/dgl.line_graph", "generated/dgl.linkx_homophily", "generated/dgl.load_graphs", "generated/dgl.max_edges", "generated/dgl.max_nodes", "generated/dgl.mean_edges", "generated/dgl.mean_nodes", "generated/dgl.merge", "generated/dgl.metapath_reachable_graph", "generated/dgl.metis_partition", "generated/dgl.metis_partition_assignment", "generated/dgl.multiprocessing.pytorch.call_once_and_share", "generated/dgl.multiprocessing.pytorch.shared_tensor", "generated/dgl.nn.functional.edge_softmax", "generated/dgl.nn.mxnet.HeteroGraphConv", "generated/dgl.nn.mxnet.conv.AGNNConv", "generated/dgl.nn.mxnet.conv.APPNPConv", "generated/dgl.nn.mxnet.conv.ChebConv", "generated/dgl.nn.mxnet.conv.DenseChebConv", "generated/dgl.nn.mxnet.conv.DenseGraphConv", "generated/dgl.nn.mxnet.conv.DenseSAGEConv", "generated/dgl.nn.mxnet.conv.EdgeConv", "generated/dgl.nn.mxnet.conv.GATConv", "generated/dgl.nn.mxnet.conv.GINConv", "generated/dgl.nn.mxnet.conv.GMMConv", "generated/dgl.nn.mxnet.conv.GatedGraphConv", "generated/dgl.nn.mxnet.conv.GraphConv", "generated/dgl.nn.mxnet.conv.NNConv", "generated/dgl.nn.mxnet.conv.RelGraphConv", "generated/dgl.nn.mxnet.conv.SAGEConv", "generated/dgl.nn.mxnet.conv.SGConv", "generated/dgl.nn.mxnet.conv.TAGConv", "generated/dgl.nn.mxnet.glob.AvgPooling", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling", "generated/dgl.nn.mxnet.glob.MaxPooling", "generated/dgl.nn.mxnet.glob.Set2Set", "generated/dgl.nn.mxnet.glob.SortPooling", "generated/dgl.nn.mxnet.glob.SumPooling", "generated/dgl.nn.mxnet.utils.Sequential", "generated/dgl.nn.pytorch.DeepWalk", "generated/dgl.nn.pytorch.HeteroEmbedding", "generated/dgl.nn.pytorch.HeteroGraphConv", "generated/dgl.nn.pytorch.HeteroLinear", "generated/dgl.nn.pytorch.MetaPath2Vec", "generated/dgl.nn.pytorch.TypedLinear", "generated/dgl.nn.pytorch.conv.AGNNConv", "generated/dgl.nn.pytorch.conv.APPNPConv", "generated/dgl.nn.pytorch.conv.AtomicConv", "generated/dgl.nn.pytorch.conv.CFConv", "generated/dgl.nn.pytorch.conv.ChebConv", "generated/dgl.nn.pytorch.conv.CuGraphGATConv", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv", "generated/dgl.nn.pytorch.conv.DGNConv", "generated/dgl.nn.pytorch.conv.DenseChebConv", "generated/dgl.nn.pytorch.conv.DenseGraphConv", "generated/dgl.nn.pytorch.conv.DenseSAGEConv", "generated/dgl.nn.pytorch.conv.DotGatConv", "generated/dgl.nn.pytorch.conv.EGATConv", "generated/dgl.nn.pytorch.conv.EGNNConv", "generated/dgl.nn.pytorch.conv.EdgeConv", "generated/dgl.nn.pytorch.conv.EdgeGATConv", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm", "generated/dgl.nn.pytorch.conv.GATConv", "generated/dgl.nn.pytorch.conv.GATv2Conv", "generated/dgl.nn.pytorch.conv.GCN2Conv", "generated/dgl.nn.pytorch.conv.GINConv", "generated/dgl.nn.pytorch.conv.GINEConv", "generated/dgl.nn.pytorch.conv.GMMConv", "generated/dgl.nn.pytorch.conv.GatedGCNConv", "generated/dgl.nn.pytorch.conv.GatedGraphConv", "generated/dgl.nn.pytorch.conv.GraphConv", "generated/dgl.nn.pytorch.conv.GroupRevRes", "generated/dgl.nn.pytorch.conv.HGTConv", "generated/dgl.nn.pytorch.conv.NNConv", "generated/dgl.nn.pytorch.conv.PNAConv", "generated/dgl.nn.pytorch.conv.RelGraphConv", "generated/dgl.nn.pytorch.conv.SAGEConv", "generated/dgl.nn.pytorch.conv.SGConv", "generated/dgl.nn.pytorch.conv.TAGConv", "generated/dgl.nn.pytorch.conv.TWIRLSConv", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", "generated/dgl.nn.pytorch.explain.GNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX", "generated/dgl.nn.pytorch.explain.PGExplainer", "generated/dgl.nn.pytorch.explain.SubgraphX", "generated/dgl.nn.pytorch.factory.KNNGraph", "generated/dgl.nn.pytorch.factory.RadiusGraph", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph", "generated/dgl.nn.pytorch.glob.AvgPooling", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling", "generated/dgl.nn.pytorch.glob.MaxPooling", "generated/dgl.nn.pytorch.glob.Set2Set", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder", "generated/dgl.nn.pytorch.glob.SortPooling", "generated/dgl.nn.pytorch.glob.SumPooling", "generated/dgl.nn.pytorch.glob.WeightAndSum", "generated/dgl.nn.pytorch.gt.BiasedMHA", "generated/dgl.nn.pytorch.gt.DegreeEncoder", "generated/dgl.nn.pytorch.gt.EGTLayer", "generated/dgl.nn.pytorch.gt.GraphormerLayer", "generated/dgl.nn.pytorch.gt.LapPosEncoder", "generated/dgl.nn.pytorch.gt.PathEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d", "generated/dgl.nn.pytorch.link.EdgePredictor", "generated/dgl.nn.pytorch.link.TransE", "generated/dgl.nn.pytorch.link.TransR", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding", "generated/dgl.nn.pytorch.utils.JumpingKnowledge", "generated/dgl.nn.pytorch.utils.LabelPropagation", "generated/dgl.nn.pytorch.utils.Sequential", "generated/dgl.nn.pytorch.utils.WeightBasis", "generated/dgl.nn.tensorflow.conv.APPNPConv", "generated/dgl.nn.tensorflow.conv.ChebConv", "generated/dgl.nn.tensorflow.conv.GATConv", "generated/dgl.nn.tensorflow.conv.GINConv", "generated/dgl.nn.tensorflow.conv.GraphConv", "generated/dgl.nn.tensorflow.conv.RelGraphConv", "generated/dgl.nn.tensorflow.conv.SAGEConv", "generated/dgl.nn.tensorflow.conv.SGConv", "generated/dgl.nn.tensorflow.glob.AvgPooling", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv", "generated/dgl.nn.tensorflow.glob.MaxPooling", "generated/dgl.nn.tensorflow.glob.SortPooling", "generated/dgl.nn.tensorflow.glob.SumPooling", "generated/dgl.node_homophily", "generated/dgl.node_label_informativeness", "generated/dgl.node_subgraph", "generated/dgl.node_type_subgraph", "generated/dgl.norm_by_dst", "generated/dgl.ops.copy_e_max", "generated/dgl.ops.copy_e_mean", "generated/dgl.ops.copy_e_min", "generated/dgl.ops.copy_e_sum", "generated/dgl.ops.copy_u", "generated/dgl.ops.copy_u_max", "generated/dgl.ops.copy_u_mean", "generated/dgl.ops.copy_u_min", "generated/dgl.ops.copy_u_sum", "generated/dgl.ops.copy_v", "generated/dgl.ops.e_add_u", "generated/dgl.ops.e_add_v", "generated/dgl.ops.e_div_u", "generated/dgl.ops.e_div_v", "generated/dgl.ops.e_dot_u", "generated/dgl.ops.e_dot_v", "generated/dgl.ops.e_mul_u", "generated/dgl.ops.e_mul_v", "generated/dgl.ops.e_sub_u", "generated/dgl.ops.e_sub_v", "generated/dgl.ops.gather_mm", "generated/dgl.ops.gsddmm", "generated/dgl.ops.gspmm", "generated/dgl.ops.segment_mm", "generated/dgl.ops.segment_reduce", "generated/dgl.ops.u_add_e", "generated/dgl.ops.u_add_e_max", "generated/dgl.ops.u_add_e_mean", "generated/dgl.ops.u_add_e_min", "generated/dgl.ops.u_add_e_sum", "generated/dgl.ops.u_add_v", "generated/dgl.ops.u_div_e", "generated/dgl.ops.u_div_e_max", "generated/dgl.ops.u_div_e_mean", "generated/dgl.ops.u_div_e_min", "generated/dgl.ops.u_div_e_sum", "generated/dgl.ops.u_div_v", "generated/dgl.ops.u_dot_e", "generated/dgl.ops.u_dot_v", "generated/dgl.ops.u_mul_e", "generated/dgl.ops.u_mul_e_max", "generated/dgl.ops.u_mul_e_mean", "generated/dgl.ops.u_mul_e_min", "generated/dgl.ops.u_mul_e_sum", "generated/dgl.ops.u_mul_v", "generated/dgl.ops.u_sub_e", "generated/dgl.ops.u_sub_e_max", "generated/dgl.ops.u_sub_e_mean", "generated/dgl.ops.u_sub_e_min", "generated/dgl.ops.u_sub_e_sum", "generated/dgl.ops.u_sub_v", "generated/dgl.ops.v_add_e", "generated/dgl.ops.v_add_u", "generated/dgl.ops.v_div_e", "generated/dgl.ops.v_div_u", "generated/dgl.ops.v_dot_e", "generated/dgl.ops.v_dot_u", "generated/dgl.ops.v_mul_e", "generated/dgl.ops.v_mul_u", "generated/dgl.ops.v_sub_e", "generated/dgl.ops.v_sub_u", "generated/dgl.out_subgraph", "generated/dgl.partition_graph_with_halo", "generated/dgl.prop_edges", "generated/dgl.prop_edges_dfs", "generated/dgl.prop_nodes", "generated/dgl.prop_nodes_bfs", "generated/dgl.prop_nodes_topo", "generated/dgl.radius_graph", "generated/dgl.rand_bipartite", "generated/dgl.rand_graph", "generated/dgl.random_walk_pe", "generated/dgl.readout_edges", "generated/dgl.readout_nodes", "generated/dgl.remove_edges", "generated/dgl.remove_nodes", "generated/dgl.remove_self_loop", "generated/dgl.reorder_graph", "generated/dgl.reverse", "generated/dgl.sampling.PinSAGESampler", "generated/dgl.sampling.global_uniform_negative_sampling", "generated/dgl.sampling.node2vec_random_walk", "generated/dgl.sampling.pack_traces", "generated/dgl.sampling.random_walk", "generated/dgl.sampling.sample_labors", "generated/dgl.sampling.sample_neighbors", "generated/dgl.sampling.sample_neighbors_biased", "generated/dgl.sampling.select_topk", "generated/dgl.save_graphs", "generated/dgl.seed", "generated/dgl.segmented_knn_graph", "generated/dgl.shortest_dist", "generated/dgl.slice_batch", "generated/dgl.softmax_edges", "generated/dgl.softmax_nodes", "generated/dgl.sort_csc_by_tag", "generated/dgl.sort_csr_by_tag", "generated/dgl.sparse.SparseMatrix.T", "generated/dgl.sparse.SparseMatrix.coalesce", "generated/dgl.sparse.SparseMatrix.col", "generated/dgl.sparse.SparseMatrix.coo", "generated/dgl.sparse.SparseMatrix.cpu", "generated/dgl.sparse.SparseMatrix.csc", "generated/dgl.sparse.SparseMatrix.csr", "generated/dgl.sparse.SparseMatrix.cuda", "generated/dgl.sparse.SparseMatrix.device", "generated/dgl.sparse.SparseMatrix.double", "generated/dgl.sparse.SparseMatrix.dtype", "generated/dgl.sparse.SparseMatrix.float", "generated/dgl.sparse.SparseMatrix.has_duplicate", "generated/dgl.sparse.SparseMatrix.indices", "generated/dgl.sparse.SparseMatrix.int", "generated/dgl.sparse.SparseMatrix.long", "generated/dgl.sparse.SparseMatrix.neg", "generated/dgl.sparse.SparseMatrix.nnz", "generated/dgl.sparse.SparseMatrix.reduce", "generated/dgl.sparse.SparseMatrix.row", "generated/dgl.sparse.SparseMatrix.shape", "generated/dgl.sparse.SparseMatrix.smax", "generated/dgl.sparse.SparseMatrix.smean", "generated/dgl.sparse.SparseMatrix.smin", "generated/dgl.sparse.SparseMatrix.softmax", "generated/dgl.sparse.SparseMatrix.sum", "generated/dgl.sparse.SparseMatrix.t", "generated/dgl.sparse.SparseMatrix.to", "generated/dgl.sparse.SparseMatrix.to_dense", "generated/dgl.sparse.SparseMatrix.transpose", "generated/dgl.sparse.SparseMatrix.val", "generated/dgl.sparse.add", "generated/dgl.sparse.bsddmm", "generated/dgl.sparse.bspmm", "generated/dgl.sparse.diag", "generated/dgl.sparse.div", "generated/dgl.sparse.from_coo", "generated/dgl.sparse.from_csc", "generated/dgl.sparse.from_csr", "generated/dgl.sparse.identity", "generated/dgl.sparse.matmul", "generated/dgl.sparse.mul", "generated/dgl.sparse.power", "generated/dgl.sparse.sddmm", "generated/dgl.sparse.softmax", "generated/dgl.sparse.sp_add_v", "generated/dgl.sparse.sp_broadcast_v", "generated/dgl.sparse.sp_div_v", "generated/dgl.sparse.sp_mul_v", "generated/dgl.sparse.sp_sub_v", "generated/dgl.sparse.spmatrix", "generated/dgl.sparse.spmm", "generated/dgl.sparse.spspmm", "generated/dgl.sparse.sub", "generated/dgl.sparse.val_like", "generated/dgl.sum_edges", "generated/dgl.sum_nodes", "generated/dgl.svd_pe", "generated/dgl.to_bidirected", "generated/dgl.to_block", "generated/dgl.to_cugraph", "generated/dgl.to_double", "generated/dgl.to_float", "generated/dgl.to_half", "generated/dgl.to_heterogeneous", "generated/dgl.to_homogeneous", "generated/dgl.to_networkx", "generated/dgl.to_simple", "generated/dgl.to_simple_graph", "generated/dgl.topk_edges", "generated/dgl.topk_nodes", "generated/dgl.topological_nodes_generator", "generated/dgl.transforms.AddEdge", "generated/dgl.transforms.AddMetaPaths", "generated/dgl.transforms.AddReverse", "generated/dgl.transforms.AddSelfLoop", "generated/dgl.transforms.BaseTransform", "generated/dgl.transforms.Compose", "generated/dgl.transforms.DropEdge", "generated/dgl.transforms.DropNode", "generated/dgl.transforms.FeatMask", "generated/dgl.transforms.GCNNorm", "generated/dgl.transforms.GDC", "generated/dgl.transforms.HeatKernel", "generated/dgl.transforms.KHopGraph", "generated/dgl.transforms.LapPE", "generated/dgl.transforms.LineGraph", "generated/dgl.transforms.NodeShuffle", "generated/dgl.transforms.PPR", "generated/dgl.transforms.RandomWalkPE", "generated/dgl.transforms.RemoveSelfLoop", "generated/dgl.transforms.RowFeatNormalizer", "generated/dgl.transforms.SIGNDiffusion", "generated/dgl.transforms.SVDPE", "generated/dgl.transforms.ToLevi", "generated/dgl.transforms.ToSimple", "generated/dgl.udf.EdgeBatch.batch_size", "generated/dgl.udf.EdgeBatch.data", "generated/dgl.udf.EdgeBatch.dst", "generated/dgl.udf.EdgeBatch.edges", "generated/dgl.udf.EdgeBatch.src", "generated/dgl.udf.NodeBatch.batch_size", "generated/dgl.udf.NodeBatch.data", "generated/dgl.udf.NodeBatch.mailbox", "generated/dgl.udf.NodeBatch.nodes", "generated/dgl.unbatch", "generated/dgl.use_libxsmm", "graphtransformer/data", "graphtransformer/index", "graphtransformer/model", "guide/data", "guide/data-dataset", "guide/data-download", "guide/data-loadcsv", "guide/data-loadogb", "guide/data-process", "guide/data-savenload", "guide/distributed", "guide/distributed-apis", "guide/distributed-hetero", "guide/distributed-partition", "guide/distributed-preprocessing", "guide/distributed-tools", "guide/graph", "guide/graph-basic", "guide/graph-external", "guide/graph-feature", "guide/graph-gpu", "guide/graph-graphs-nodes-edges", "guide/graph-heterogeneous", "guide/index", "guide/message", "guide/message-api", "guide/message-efficient", "guide/message-heterograph", "guide/message-part", "guide/minibatch", "guide/minibatch-custom-sampler", "guide/minibatch-edge", "guide/minibatch-gpu-sampling", "guide/minibatch-inference", "guide/minibatch-link", "guide/minibatch-nn", "guide/minibatch-node", "guide/minibatch-parallelism", "guide/minibatch-sparse", "guide/mixed_precision", "guide/nn", "guide/nn-construction", "guide/nn-forward", "guide/nn-heterograph", "guide/training", "guide/training-edge", "guide/training-eweight", "guide/training-graph", "guide/training-link", "guide/training-node", "guide_cn/data", "guide_cn/data-dataset", "guide_cn/data-download", "guide_cn/data-loadogb", "guide_cn/data-process", "guide_cn/data-savenload", "guide_cn/distributed", "guide_cn/distributed-apis", "guide_cn/distributed-preprocessing", "guide_cn/distributed-tools", "guide_cn/graph", "guide_cn/graph-basic", "guide_cn/graph-external", "guide_cn/graph-feature", "guide_cn/graph-gpu", "guide_cn/graph-graphs-nodes-edges", "guide_cn/graph-heterogeneous", "guide_cn/index", "guide_cn/message", "guide_cn/message-api", "guide_cn/message-efficient", "guide_cn/message-heterograph", "guide_cn/message-part", "guide_cn/minibatch", "guide_cn/minibatch-custom-sampler", "guide_cn/minibatch-edge", "guide_cn/minibatch-inference", "guide_cn/minibatch-link", "guide_cn/minibatch-nn", "guide_cn/minibatch-node", "guide_cn/nn", "guide_cn/nn-construction", "guide_cn/nn-forward", "guide_cn/nn-heterograph", "guide_cn/training", "guide_cn/training-edge", "guide_cn/training-eweight", "guide_cn/training-graph", "guide_cn/training-link", "guide_cn/training-node", "guide_ko/data", "guide_ko/data-dataset", "guide_ko/data-download", "guide_ko/data-loadogb", "guide_ko/data-process", "guide_ko/data-savenload", "guide_ko/distributed", "guide_ko/distributed-apis", "guide_ko/distributed-hetero", "guide_ko/distributed-preprocessing", "guide_ko/distributed-tools", "guide_ko/graph", "guide_ko/graph-basic", "guide_ko/graph-external", "guide_ko/graph-feature", "guide_ko/graph-gpu", "guide_ko/graph-graphs-nodes-edges", "guide_ko/graph-heterogeneous", "guide_ko/index", "guide_ko/message", "guide_ko/message-api", "guide_ko/message-edge", "guide_ko/message-efficient", "guide_ko/message-heterograph", "guide_ko/message-part", "guide_ko/minibatch", "guide_ko/minibatch-custom-sampler", "guide_ko/minibatch-edge", "guide_ko/minibatch-gpu-sampling", "guide_ko/minibatch-inference", "guide_ko/minibatch-link", "guide_ko/minibatch-nn", "guide_ko/minibatch-node", "guide_ko/mixed_precision", "guide_ko/nn", "guide_ko/nn-construction", "guide_ko/nn-forward", "guide_ko/nn-heterograph", "guide_ko/training", "guide_ko/training-edge", "guide_ko/training-graph", "guide_ko/training-link", "guide_ko/training-node", "index", "install/index", "notebooks/sparse/gcn", "notebooks/sparse/graph_diffusion", "notebooks/sparse/graph_transformer", "notebooks/sparse/hgnn", "notebooks/sparse/index", "notebooks/sparse/quickstart", "performance", "resources", "sg_execution_times", "stochastic_training/index", "stochastic_training/link_prediction", "stochastic_training/multigpu_node_classification", "stochastic_training/neighbor_sampling_overview", "stochastic_training/node_classification", "stochastic_training/ondisk-dataset", "stochastic_training/ondisk-dataset-specification", "stochastic_training/ondisk_dataset_heterograph", "stochastic_training/ondisk_dataset_homograph", "tutorials/blitz/1_introduction", "tutorials/blitz/2_dglgraph", "tutorials/blitz/3_message_passing", "tutorials/blitz/4_link_predict", "tutorials/blitz/5_graph_classification", "tutorials/blitz/6_load_data", "tutorials/blitz/index", "tutorials/blitz/sg_execution_times", "tutorials/cpu/argo_tutorial", "tutorials/cpu/cpu_best_practises", "tutorials/cpu/index", "tutorials/cpu/sg_execution_times", "tutorials/dist/1_node_classification", "tutorials/dist/2_link_prediction", "tutorials/dist/index", "tutorials/dist/sg_execution_times", "tutorials/models/1_gnn/1_gcn", "tutorials/models/1_gnn/4_rgcn", "tutorials/models/1_gnn/6_line_graph", "tutorials/models/1_gnn/9_gat", "tutorials/models/1_gnn/index", "tutorials/models/1_gnn/sg_execution_times", "tutorials/models/2_small_graph/3_tree-lstm", "tutorials/models/2_small_graph/index", "tutorials/models/2_small_graph/sg_execution_times", "tutorials/models/3_generative_model/5_dgmg", "tutorials/models/3_generative_model/index", "tutorials/models/3_generative_model/sg_execution_times", "tutorials/models/4_old_wines/2_capsule", "tutorials/models/4_old_wines/7_transformer", "tutorials/models/4_old_wines/index", "tutorials/models/4_old_wines/sg_execution_times", "tutorials/models/index", "tutorials/models/sg_execution_times", "tutorials/multi/1_graph_classification", "tutorials/multi/2_node_classification", "tutorials/multi/index", "tutorials/multi/sg_execution_times"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api/python/dgl.rst", "api/python/dgl.DGLGraph.rst", "api/python/dgl.data.rst", "api/python/dgl.dataloading.rst", "api/python/dgl.distributed.rst", "api/python/dgl.function.rst", "api/python/dgl.geometry.rst", "api/python/dgl.graphbolt.rst", "api/python/dgl.multiprocessing.rst", "api/python/dgl.ops.rst", "api/python/dgl.optim.rst", "api/python/dgl.sampling.rst", "api/python/dgl.sparse_v0.rst", "api/python/index.rst", "api/python/knn_benchmark.rst", "api/python/nn-mxnet.rst", "api/python/nn-pytorch.rst", "api/python/nn-tensorflow.rst", "api/python/nn.functional.rst", "api/python/transforms.rst", "api/python/udf.rst", "contribute.rst", "developer/ffi.rst", "env_var.rst", "faq.rst", "features/dataset.rst", "generated/dgl.DGLGraph.__getitem__.rst", "generated/dgl.DGLGraph.add_edges.rst", "generated/dgl.DGLGraph.add_nodes.rst", "generated/dgl.DGLGraph.add_self_loop.rst", "generated/dgl.DGLGraph.adj.rst", "generated/dgl.DGLGraph.adj_external.rst", "generated/dgl.DGLGraph.adj_tensors.rst", "generated/dgl.DGLGraph.adjacency_matrix.rst", "generated/dgl.DGLGraph.apply_edges.rst", "generated/dgl.DGLGraph.apply_nodes.rst", "generated/dgl.DGLGraph.batch_num_edges.rst", "generated/dgl.DGLGraph.batch_num_nodes.rst", "generated/dgl.DGLGraph.batch_size.rst", "generated/dgl.DGLGraph.canonical_etypes.rst", "generated/dgl.DGLGraph.cpu.rst", "generated/dgl.DGLGraph.create_formats_.rst", "generated/dgl.DGLGraph.device.rst", "generated/dgl.DGLGraph.dstdata.rst", "generated/dgl.DGLGraph.dstnodes.rst", "generated/dgl.DGLGraph.dsttypes.rst", "generated/dgl.DGLGraph.edata.rst", "generated/dgl.DGLGraph.edge_attr_schemes.rst", "generated/dgl.DGLGraph.edge_ids.rst", "generated/dgl.DGLGraph.edge_subgraph.rst", "generated/dgl.DGLGraph.edge_type_subgraph.rst", "generated/dgl.DGLGraph.edges.rst", "generated/dgl.DGLGraph.etypes.rst", "generated/dgl.DGLGraph.filter_edges.rst", "generated/dgl.DGLGraph.filter_nodes.rst", "generated/dgl.DGLGraph.find_edges.rst", "generated/dgl.DGLGraph.formats.rst", "generated/dgl.DGLGraph.has_edges_between.rst", "generated/dgl.DGLGraph.has_nodes.rst", "generated/dgl.DGLGraph.idtype.rst", "generated/dgl.DGLGraph.in_degrees.rst", "generated/dgl.DGLGraph.in_edges.rst", "generated/dgl.DGLGraph.inc.rst", "generated/dgl.DGLGraph.incidence_matrix.rst", "generated/dgl.DGLGraph.int.rst", "generated/dgl.DGLGraph.is_homogeneous.rst", "generated/dgl.DGLGraph.is_multigraph.rst", "generated/dgl.DGLGraph.is_pinned.rst", "generated/dgl.DGLGraph.is_unibipartite.rst", "generated/dgl.DGLGraph.line_graph.rst", "generated/dgl.DGLGraph.local_scope.rst", "generated/dgl.DGLGraph.long.rst", "generated/dgl.DGLGraph.metagraph.rst", "generated/dgl.DGLGraph.multi_update_all.rst", "generated/dgl.DGLGraph.ndata.rst", "generated/dgl.DGLGraph.node_attr_schemes.rst", "generated/dgl.DGLGraph.node_type_subgraph.rst", "generated/dgl.DGLGraph.nodes.rst", "generated/dgl.DGLGraph.ntypes.rst", "generated/dgl.DGLGraph.num_dst_nodes.rst", "generated/dgl.DGLGraph.num_edges.rst", "generated/dgl.DGLGraph.num_nodes.rst", "generated/dgl.DGLGraph.num_src_nodes.rst", "generated/dgl.DGLGraph.number_of_dst_nodes.rst", "generated/dgl.DGLGraph.number_of_edges.rst", "generated/dgl.DGLGraph.number_of_nodes.rst", "generated/dgl.DGLGraph.number_of_src_nodes.rst", "generated/dgl.DGLGraph.out_degrees.rst", "generated/dgl.DGLGraph.out_edges.rst", "generated/dgl.DGLGraph.pin_memory_.rst", "generated/dgl.DGLGraph.predecessors.rst", "generated/dgl.DGLGraph.prop_edges.rst", "generated/dgl.DGLGraph.prop_nodes.rst", "generated/dgl.DGLGraph.pull.rst", "generated/dgl.DGLGraph.push.rst", "generated/dgl.DGLGraph.remove_edges.rst", "generated/dgl.DGLGraph.remove_nodes.rst", "generated/dgl.DGLGraph.remove_self_loop.rst", "generated/dgl.DGLGraph.reorder_graph.rst", "generated/dgl.DGLGraph.reverse.rst", "generated/dgl.DGLGraph.send_and_recv.rst", "generated/dgl.DGLGraph.set_batch_num_edges.rst", "generated/dgl.DGLGraph.set_batch_num_nodes.rst", "generated/dgl.DGLGraph.srcdata.rst", "generated/dgl.DGLGraph.srcnodes.rst", "generated/dgl.DGLGraph.srctypes.rst", "generated/dgl.DGLGraph.subgraph.rst", "generated/dgl.DGLGraph.successors.rst", "generated/dgl.DGLGraph.to.rst", "generated/dgl.DGLGraph.to_canonical_etype.rst", "generated/dgl.DGLGraph.to_cugraph.rst", "generated/dgl.DGLGraph.to_simple.rst", "generated/dgl.DGLGraph.unpin_memory_.rst", "generated/dgl.DGLGraph.update_all.rst", "generated/dgl.add_edges.rst", "generated/dgl.add_nodes.rst", "generated/dgl.add_reverse_edges.rst", "generated/dgl.add_self_loop.rst", "generated/dgl.adj_product_graph.rst", "generated/dgl.adj_sum_graph.rst", "generated/dgl.adjusted_homophily.rst", "generated/dgl.apply_each.rst", "generated/dgl.batch.rst", "generated/dgl.bfs_edges_generator.rst", "generated/dgl.bfs_nodes_generator.rst", "generated/dgl.bipartite_from_networkx.rst", "generated/dgl.bipartite_from_scipy.rst", "generated/dgl.block_to_graph.rst", "generated/dgl.broadcast_edges.rst", "generated/dgl.broadcast_nodes.rst", "generated/dgl.compact_graphs.rst", "generated/dgl.create_block.rst", "generated/dgl.data.AIFBDataset.rst", "generated/dgl.data.AMDataset.rst", "generated/dgl.data.ActorDataset.rst", "generated/dgl.data.AmazonCoBuyComputerDataset.rst", "generated/dgl.data.AmazonCoBuyPhotoDataset.rst", "generated/dgl.data.AmazonRatingsDataset.rst", "generated/dgl.data.AsGraphPredDataset.rst", "generated/dgl.data.AsLinkPredDataset.rst", "generated/dgl.data.AsNodePredDataset.rst", "generated/dgl.data.BA2MotifDataset.rst", "generated/dgl.data.BACommunityDataset.rst", "generated/dgl.data.BAShapeDataset.rst", "generated/dgl.data.BGSDataset.rst", "generated/dgl.data.BitcoinOTCDataset.rst", "generated/dgl.data.CIFAR10SuperPixelDataset.rst", "generated/dgl.data.CLUSTERDataset.rst", "generated/dgl.data.CSVDataset.rst", "generated/dgl.data.ChameleonDataset.rst", "generated/dgl.data.CiteseerGraphDataset.rst", "generated/dgl.data.CoauthorCSDataset.rst", "generated/dgl.data.CoauthorPhysicsDataset.rst", "generated/dgl.data.CoraFullDataset.rst", "generated/dgl.data.CoraGraphDataset.rst", "generated/dgl.data.CornellDataset.rst", "generated/dgl.data.DGLDataset.rst", "generated/dgl.data.FB15k237Dataset.rst", "generated/dgl.data.FB15kDataset.rst", "generated/dgl.data.FakeNewsDataset.rst", "generated/dgl.data.FlickrDataset.rst", "generated/dgl.data.FraudAmazonDataset.rst", "generated/dgl.data.FraudDataset.rst", "generated/dgl.data.FraudYelpDataset.rst", "generated/dgl.data.GDELTDataset.rst", "generated/dgl.data.GINDataset.rst", "generated/dgl.data.ICEWS18Dataset.rst", "generated/dgl.data.KarateClubDataset.rst", "generated/dgl.data.LegacyTUDataset.rst", "generated/dgl.data.MNISTSuperPixelDataset.rst", "generated/dgl.data.MUTAGDataset.rst", "generated/dgl.data.MinesweeperDataset.rst", "generated/dgl.data.MiniGCDataset.rst", "generated/dgl.data.MovieLensDataset.rst", "generated/dgl.data.PATTERNDataset.rst", "generated/dgl.data.PPIDataset.rst", "generated/dgl.data.PubmedGraphDataset.rst", "generated/dgl.data.QM7bDataset.rst", "generated/dgl.data.QM9Dataset.rst", "generated/dgl.data.QM9EdgeDataset.rst", "generated/dgl.data.QuestionsDataset.rst", "generated/dgl.data.RedditDataset.rst", "generated/dgl.data.RomanEmpireDataset.rst", "generated/dgl.data.SBMMixtureDataset.rst", "generated/dgl.data.SSTDataset.rst", "generated/dgl.data.SquirrelDataset.rst", "generated/dgl.data.TUDataset.rst", "generated/dgl.data.TexasDataset.rst", "generated/dgl.data.TolokersDataset.rst", "generated/dgl.data.TreeCycleDataset.rst", "generated/dgl.data.TreeGridDataset.rst", "generated/dgl.data.WN18Dataset.rst", "generated/dgl.data.WikiCSDataset.rst", "generated/dgl.data.WisconsinDataset.rst", "generated/dgl.data.YelpDataset.rst", "generated/dgl.data.ZINCDataset.rst", "generated/dgl.data.utils.Subset.rst", "generated/dgl.data.utils.add_node_property_split.rst", "generated/dgl.data.utils.add_nodepred_split.rst", "generated/dgl.data.utils.check_sha1.rst", "generated/dgl.data.utils.download.rst", "generated/dgl.data.utils.extract_archive.rst", "generated/dgl.data.utils.get_download_dir.rst", "generated/dgl.data.utils.load_info.rst", "generated/dgl.data.utils.load_labels.rst", "generated/dgl.data.utils.mask_nodes_by_property.rst", "generated/dgl.data.utils.save_info.rst", "generated/dgl.data.utils.split_dataset.rst", "generated/dgl.dataloading.BlockSampler.rst", "generated/dgl.dataloading.ClusterGCNSampler.rst", "generated/dgl.dataloading.DataLoader.rst", "generated/dgl.dataloading.DistEdgeDataLoader.rst", "generated/dgl.dataloading.DistNodeDataLoader.rst", "generated/dgl.dataloading.GraphDataLoader.rst", "generated/dgl.dataloading.LaborSampler.rst", "generated/dgl.dataloading.MultiLayerFullNeighborSampler.rst", "generated/dgl.dataloading.NeighborSampler.rst", "generated/dgl.dataloading.SAINTSampler.rst", "generated/dgl.dataloading.Sampler.rst", "generated/dgl.dataloading.ShaDowKHopSampler.rst", "generated/dgl.dataloading.as_edge_prediction_sampler.rst", "generated/dgl.dataloading.base.LazyFeature.rst", "generated/dgl.dataloading.base.set_dst_lazy_features.rst", "generated/dgl.dataloading.base.set_edge_lazy_features.rst", "generated/dgl.dataloading.base.set_node_lazy_features.rst", "generated/dgl.dataloading.base.set_src_lazy_features.rst", "generated/dgl.dataloading.negative_sampler.GlobalUniform.rst", "generated/dgl.dataloading.negative_sampler.PerSourceUniform.rst", "generated/dgl.dataloading.negative_sampler.Uniform.rst", "generated/dgl.dfs_edges_generator.rst", "generated/dgl.dfs_labeled_edges_generator.rst", "generated/dgl.distributed.dgl_partition_to_graphbolt.rst", "generated/dgl.distributed.edge_split.rst", "generated/dgl.distributed.find_edges.rst", "generated/dgl.distributed.in_subgraph.rst", "generated/dgl.distributed.initialize.rst", "generated/dgl.distributed.load_partition.rst", "generated/dgl.distributed.load_partition_book.rst", "generated/dgl.distributed.load_partition_feats.rst", "generated/dgl.distributed.node_split.rst", "generated/dgl.distributed.partition_graph.rst", "generated/dgl.distributed.sample_etype_neighbors.rst", "generated/dgl.distributed.sample_neighbors.rst", "generated/dgl.double_radius_node_labeling.rst", "generated/dgl.edge_homophily.rst", "generated/dgl.edge_label_informativeness.rst", "generated/dgl.edge_subgraph.rst", "generated/dgl.edge_type_subgraph.rst", "generated/dgl.from_cugraph.rst", "generated/dgl.from_networkx.rst", "generated/dgl.from_scipy.rst", "generated/dgl.function.copy_e.rst", "generated/dgl.function.copy_u.rst", "generated/dgl.function.e_add_u.rst", "generated/dgl.function.e_add_v.rst", "generated/dgl.function.e_div_u.rst", "generated/dgl.function.e_div_v.rst", "generated/dgl.function.e_dot_u.rst", "generated/dgl.function.e_dot_v.rst", "generated/dgl.function.e_mul_u.rst", "generated/dgl.function.e_mul_v.rst", "generated/dgl.function.e_sub_u.rst", "generated/dgl.function.e_sub_v.rst", "generated/dgl.function.max.rst", "generated/dgl.function.mean.rst", "generated/dgl.function.min.rst", "generated/dgl.function.sum.rst", "generated/dgl.function.u_add_e.rst", "generated/dgl.function.u_add_v.rst", "generated/dgl.function.u_div_e.rst", "generated/dgl.function.u_div_v.rst", "generated/dgl.function.u_dot_e.rst", "generated/dgl.function.u_dot_v.rst", "generated/dgl.function.u_mul_e.rst", "generated/dgl.function.u_mul_v.rst", "generated/dgl.function.u_sub_e.rst", "generated/dgl.function.u_sub_v.rst", "generated/dgl.function.v_add_e.rst", "generated/dgl.function.v_add_u.rst", "generated/dgl.function.v_div_e.rst", "generated/dgl.function.v_div_u.rst", "generated/dgl.function.v_dot_e.rst", "generated/dgl.function.v_dot_u.rst", "generated/dgl.function.v_mul_e.rst", "generated/dgl.function.v_mul_u.rst", "generated/dgl.function.v_sub_e.rst", "generated/dgl.function.v_sub_u.rst", "generated/dgl.graph.rst", "generated/dgl.graphbolt.BasicFeatureStore.rst", "generated/dgl.graphbolt.BuiltinDataset.rst", "generated/dgl.graphbolt.CPUCachedFeature.rst", "generated/dgl.graphbolt.CopyTo.rst", "generated/dgl.graphbolt.DataLoader.rst", "generated/dgl.graphbolt.Dataset.rst", "generated/dgl.graphbolt.DiskBasedFeature.rst", "generated/dgl.graphbolt.DistributedItemSampler.rst", "generated/dgl.graphbolt.Feature.rst", "generated/dgl.graphbolt.FeatureFetcher.rst", "generated/dgl.graphbolt.FeatureStore.rst", "generated/dgl.graphbolt.FusedCSCSamplingGraph.rst", "generated/dgl.graphbolt.GPUCachedFeature.rst", "generated/dgl.graphbolt.HeteroItemSet.rst", "generated/dgl.graphbolt.InSubgraphSampler.rst", "generated/dgl.graphbolt.ItemSampler.rst", "generated/dgl.graphbolt.ItemSet.rst", "generated/dgl.graphbolt.LayerNeighborSampler.rst", "generated/dgl.graphbolt.LegacyDataset.rst", "generated/dgl.graphbolt.MiniBatch.rst", "generated/dgl.graphbolt.MiniBatchTransformer.rst", "generated/dgl.graphbolt.NegativeSampler.rst", "generated/dgl.graphbolt.NeighborSampler.rst", "generated/dgl.graphbolt.OnDiskDataset.rst", "generated/dgl.graphbolt.SampledSubgraph.rst", "generated/dgl.graphbolt.SampledSubgraphImpl.rst", "generated/dgl.graphbolt.SamplingGraph.rst", "generated/dgl.graphbolt.SubgraphSampler.rst", "generated/dgl.graphbolt.Task.rst", "generated/dgl.graphbolt.TemporalLayerNeighborSampler.rst", "generated/dgl.graphbolt.TemporalNeighborSampler.rst", "generated/dgl.graphbolt.TorchBasedFeature.rst", "generated/dgl.graphbolt.TorchBasedFeatureStore.rst", "generated/dgl.graphbolt.UniformNegativeSampler.rst", "generated/dgl.graphbolt.add_reverse_edges.rst", "generated/dgl.graphbolt.compact_csc_format.rst", "generated/dgl.graphbolt.etype_str_to_tuple.rst", "generated/dgl.graphbolt.etype_tuple_to_str.rst", "generated/dgl.graphbolt.exclude_seed_edges.rst", "generated/dgl.graphbolt.expand_indptr.rst", "generated/dgl.graphbolt.from_dglgraph.rst", "generated/dgl.graphbolt.fused_csc_sampling_graph.rst", "generated/dgl.graphbolt.index_select.rst", "generated/dgl.graphbolt.isin.rst", "generated/dgl.graphbolt.load_from_shared_memory.rst", "generated/dgl.graphbolt.seed.rst", "generated/dgl.graphbolt.unique_and_compact.rst", "generated/dgl.graphbolt.unique_and_compact_csc_formats.rst", "generated/dgl.heterograph.rst", "generated/dgl.in_subgraph.rst", "generated/dgl.is_libxsmm_enabled.rst", "generated/dgl.khop_adj.rst", "generated/dgl.khop_graph.rst", "generated/dgl.khop_in_subgraph.rst", "generated/dgl.khop_out_subgraph.rst", "generated/dgl.knn_graph.rst", "generated/dgl.lap_pe.rst", "generated/dgl.laplacian_lambda_max.rst", "generated/dgl.line_graph.rst", "generated/dgl.linkx_homophily.rst", "generated/dgl.load_graphs.rst", "generated/dgl.max_edges.rst", "generated/dgl.max_nodes.rst", "generated/dgl.mean_edges.rst", "generated/dgl.mean_nodes.rst", "generated/dgl.merge.rst", "generated/dgl.metapath_reachable_graph.rst", "generated/dgl.metis_partition.rst", "generated/dgl.metis_partition_assignment.rst", "generated/dgl.multiprocessing.pytorch.call_once_and_share.rst", "generated/dgl.multiprocessing.pytorch.shared_tensor.rst", "generated/dgl.nn.functional.edge_softmax.rst", "generated/dgl.nn.mxnet.HeteroGraphConv.rst", "generated/dgl.nn.mxnet.conv.AGNNConv.rst", "generated/dgl.nn.mxnet.conv.APPNPConv.rst", "generated/dgl.nn.mxnet.conv.ChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseChebConv.rst", "generated/dgl.nn.mxnet.conv.DenseGraphConv.rst", "generated/dgl.nn.mxnet.conv.DenseSAGEConv.rst", "generated/dgl.nn.mxnet.conv.EdgeConv.rst", "generated/dgl.nn.mxnet.conv.GATConv.rst", "generated/dgl.nn.mxnet.conv.GINConv.rst", "generated/dgl.nn.mxnet.conv.GMMConv.rst", "generated/dgl.nn.mxnet.conv.GatedGraphConv.rst", "generated/dgl.nn.mxnet.conv.GraphConv.rst", "generated/dgl.nn.mxnet.conv.NNConv.rst", "generated/dgl.nn.mxnet.conv.RelGraphConv.rst", "generated/dgl.nn.mxnet.conv.SAGEConv.rst", "generated/dgl.nn.mxnet.conv.SGConv.rst", "generated/dgl.nn.mxnet.conv.TAGConv.rst", "generated/dgl.nn.mxnet.glob.AvgPooling.rst", "generated/dgl.nn.mxnet.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.mxnet.glob.MaxPooling.rst", "generated/dgl.nn.mxnet.glob.Set2Set.rst", "generated/dgl.nn.mxnet.glob.SortPooling.rst", "generated/dgl.nn.mxnet.glob.SumPooling.rst", "generated/dgl.nn.mxnet.utils.Sequential.rst", "generated/dgl.nn.pytorch.DeepWalk.rst", "generated/dgl.nn.pytorch.HeteroEmbedding.rst", "generated/dgl.nn.pytorch.HeteroGraphConv.rst", "generated/dgl.nn.pytorch.HeteroLinear.rst", "generated/dgl.nn.pytorch.MetaPath2Vec.rst", "generated/dgl.nn.pytorch.TypedLinear.rst", "generated/dgl.nn.pytorch.conv.AGNNConv.rst", "generated/dgl.nn.pytorch.conv.APPNPConv.rst", "generated/dgl.nn.pytorch.conv.AtomicConv.rst", "generated/dgl.nn.pytorch.conv.CFConv.rst", "generated/dgl.nn.pytorch.conv.ChebConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphGATConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphRelGraphConv.rst", "generated/dgl.nn.pytorch.conv.CuGraphSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DGNConv.rst", "generated/dgl.nn.pytorch.conv.DenseChebConv.rst", "generated/dgl.nn.pytorch.conv.DenseGraphConv.rst", "generated/dgl.nn.pytorch.conv.DenseSAGEConv.rst", "generated/dgl.nn.pytorch.conv.DotGatConv.rst", "generated/dgl.nn.pytorch.conv.EGATConv.rst", "generated/dgl.nn.pytorch.conv.EGNNConv.rst", "generated/dgl.nn.pytorch.conv.EdgeConv.rst", "generated/dgl.nn.pytorch.conv.EdgeGATConv.rst", "generated/dgl.nn.pytorch.conv.EdgeWeightNorm.rst", "generated/dgl.nn.pytorch.conv.GATConv.rst", "generated/dgl.nn.pytorch.conv.GATv2Conv.rst", "generated/dgl.nn.pytorch.conv.GCN2Conv.rst", "generated/dgl.nn.pytorch.conv.GINConv.rst", "generated/dgl.nn.pytorch.conv.GINEConv.rst", "generated/dgl.nn.pytorch.conv.GMMConv.rst", "generated/dgl.nn.pytorch.conv.GatedGCNConv.rst", "generated/dgl.nn.pytorch.conv.GatedGraphConv.rst", "generated/dgl.nn.pytorch.conv.GraphConv.rst", "generated/dgl.nn.pytorch.conv.GroupRevRes.rst", "generated/dgl.nn.pytorch.conv.HGTConv.rst", "generated/dgl.nn.pytorch.conv.NNConv.rst", "generated/dgl.nn.pytorch.conv.PNAConv.rst", "generated/dgl.nn.pytorch.conv.RelGraphConv.rst", "generated/dgl.nn.pytorch.conv.SAGEConv.rst", "generated/dgl.nn.pytorch.conv.SGConv.rst", "generated/dgl.nn.pytorch.conv.TAGConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSConv.rst", "generated/dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.rst", "generated/dgl.nn.pytorch.explain.GNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroGNNExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroPGExplainer.rst", "generated/dgl.nn.pytorch.explain.HeteroSubgraphX.rst", "generated/dgl.nn.pytorch.explain.PGExplainer.rst", "generated/dgl.nn.pytorch.explain.SubgraphX.rst", "generated/dgl.nn.pytorch.factory.KNNGraph.rst", "generated/dgl.nn.pytorch.factory.RadiusGraph.rst", "generated/dgl.nn.pytorch.factory.SegmentedKNNGraph.rst", "generated/dgl.nn.pytorch.glob.AvgPooling.rst", "generated/dgl.nn.pytorch.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.pytorch.glob.MaxPooling.rst", "generated/dgl.nn.pytorch.glob.Set2Set.rst", "generated/dgl.nn.pytorch.glob.SetTransformerDecoder.rst", "generated/dgl.nn.pytorch.glob.SetTransformerEncoder.rst", "generated/dgl.nn.pytorch.glob.SortPooling.rst", "generated/dgl.nn.pytorch.glob.SumPooling.rst", "generated/dgl.nn.pytorch.glob.WeightAndSum.rst", "generated/dgl.nn.pytorch.gt.BiasedMHA.rst", "generated/dgl.nn.pytorch.gt.DegreeEncoder.rst", "generated/dgl.nn.pytorch.gt.EGTLayer.rst", "generated/dgl.nn.pytorch.gt.GraphormerLayer.rst", "generated/dgl.nn.pytorch.gt.LapPosEncoder.rst", "generated/dgl.nn.pytorch.gt.PathEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder.rst", "generated/dgl.nn.pytorch.gt.SpatialEncoder3d.rst", "generated/dgl.nn.pytorch.link.EdgePredictor.rst", "generated/dgl.nn.pytorch.link.TransE.rst", "generated/dgl.nn.pytorch.link.TransR.rst", "generated/dgl.nn.pytorch.sparse_emb.NodeEmbedding.rst", "generated/dgl.nn.pytorch.utils.JumpingKnowledge.rst", "generated/dgl.nn.pytorch.utils.LabelPropagation.rst", "generated/dgl.nn.pytorch.utils.Sequential.rst", "generated/dgl.nn.pytorch.utils.WeightBasis.rst", "generated/dgl.nn.tensorflow.conv.APPNPConv.rst", "generated/dgl.nn.tensorflow.conv.ChebConv.rst", "generated/dgl.nn.tensorflow.conv.GATConv.rst", "generated/dgl.nn.tensorflow.conv.GINConv.rst", "generated/dgl.nn.tensorflow.conv.GraphConv.rst", "generated/dgl.nn.tensorflow.conv.RelGraphConv.rst", "generated/dgl.nn.tensorflow.conv.SAGEConv.rst", "generated/dgl.nn.tensorflow.conv.SGConv.rst", "generated/dgl.nn.tensorflow.glob.AvgPooling.rst", "generated/dgl.nn.tensorflow.glob.GlobalAttentionPooling.rst", "generated/dgl.nn.tensorflow.glob.HeteroGraphConv.rst", "generated/dgl.nn.tensorflow.glob.MaxPooling.rst", "generated/dgl.nn.tensorflow.glob.SortPooling.rst", "generated/dgl.nn.tensorflow.glob.SumPooling.rst", "generated/dgl.node_homophily.rst", "generated/dgl.node_label_informativeness.rst", "generated/dgl.node_subgraph.rst", "generated/dgl.node_type_subgraph.rst", "generated/dgl.norm_by_dst.rst", "generated/dgl.ops.copy_e_max.rst", "generated/dgl.ops.copy_e_mean.rst", "generated/dgl.ops.copy_e_min.rst", "generated/dgl.ops.copy_e_sum.rst", "generated/dgl.ops.copy_u.rst", "generated/dgl.ops.copy_u_max.rst", "generated/dgl.ops.copy_u_mean.rst", "generated/dgl.ops.copy_u_min.rst", "generated/dgl.ops.copy_u_sum.rst", "generated/dgl.ops.copy_v.rst", "generated/dgl.ops.e_add_u.rst", "generated/dgl.ops.e_add_v.rst", "generated/dgl.ops.e_div_u.rst", "generated/dgl.ops.e_div_v.rst", "generated/dgl.ops.e_dot_u.rst", "generated/dgl.ops.e_dot_v.rst", "generated/dgl.ops.e_mul_u.rst", "generated/dgl.ops.e_mul_v.rst", "generated/dgl.ops.e_sub_u.rst", "generated/dgl.ops.e_sub_v.rst", "generated/dgl.ops.gather_mm.rst", "generated/dgl.ops.gsddmm.rst", "generated/dgl.ops.gspmm.rst", "generated/dgl.ops.segment_mm.rst", "generated/dgl.ops.segment_reduce.rst", "generated/dgl.ops.u_add_e.rst", "generated/dgl.ops.u_add_e_max.rst", "generated/dgl.ops.u_add_e_mean.rst", "generated/dgl.ops.u_add_e_min.rst", "generated/dgl.ops.u_add_e_sum.rst", "generated/dgl.ops.u_add_v.rst", "generated/dgl.ops.u_div_e.rst", "generated/dgl.ops.u_div_e_max.rst", "generated/dgl.ops.u_div_e_mean.rst", "generated/dgl.ops.u_div_e_min.rst", "generated/dgl.ops.u_div_e_sum.rst", "generated/dgl.ops.u_div_v.rst", "generated/dgl.ops.u_dot_e.rst", "generated/dgl.ops.u_dot_v.rst", "generated/dgl.ops.u_mul_e.rst", "generated/dgl.ops.u_mul_e_max.rst", "generated/dgl.ops.u_mul_e_mean.rst", "generated/dgl.ops.u_mul_e_min.rst", "generated/dgl.ops.u_mul_e_sum.rst", "generated/dgl.ops.u_mul_v.rst", "generated/dgl.ops.u_sub_e.rst", "generated/dgl.ops.u_sub_e_max.rst", "generated/dgl.ops.u_sub_e_mean.rst", "generated/dgl.ops.u_sub_e_min.rst", "generated/dgl.ops.u_sub_e_sum.rst", "generated/dgl.ops.u_sub_v.rst", "generated/dgl.ops.v_add_e.rst", "generated/dgl.ops.v_add_u.rst", "generated/dgl.ops.v_div_e.rst", "generated/dgl.ops.v_div_u.rst", "generated/dgl.ops.v_dot_e.rst", "generated/dgl.ops.v_dot_u.rst", "generated/dgl.ops.v_mul_e.rst", "generated/dgl.ops.v_mul_u.rst", "generated/dgl.ops.v_sub_e.rst", "generated/dgl.ops.v_sub_u.rst", "generated/dgl.out_subgraph.rst", "generated/dgl.partition_graph_with_halo.rst", "generated/dgl.prop_edges.rst", "generated/dgl.prop_edges_dfs.rst", "generated/dgl.prop_nodes.rst", "generated/dgl.prop_nodes_bfs.rst", "generated/dgl.prop_nodes_topo.rst", "generated/dgl.radius_graph.rst", "generated/dgl.rand_bipartite.rst", "generated/dgl.rand_graph.rst", "generated/dgl.random_walk_pe.rst", "generated/dgl.readout_edges.rst", "generated/dgl.readout_nodes.rst", "generated/dgl.remove_edges.rst", "generated/dgl.remove_nodes.rst", "generated/dgl.remove_self_loop.rst", "generated/dgl.reorder_graph.rst", "generated/dgl.reverse.rst", "generated/dgl.sampling.PinSAGESampler.rst", "generated/dgl.sampling.global_uniform_negative_sampling.rst", "generated/dgl.sampling.node2vec_random_walk.rst", "generated/dgl.sampling.pack_traces.rst", "generated/dgl.sampling.random_walk.rst", "generated/dgl.sampling.sample_labors.rst", "generated/dgl.sampling.sample_neighbors.rst", "generated/dgl.sampling.sample_neighbors_biased.rst", "generated/dgl.sampling.select_topk.rst", "generated/dgl.save_graphs.rst", "generated/dgl.seed.rst", "generated/dgl.segmented_knn_graph.rst", "generated/dgl.shortest_dist.rst", "generated/dgl.slice_batch.rst", "generated/dgl.softmax_edges.rst", "generated/dgl.softmax_nodes.rst", "generated/dgl.sort_csc_by_tag.rst", "generated/dgl.sort_csr_by_tag.rst", "generated/dgl.sparse.SparseMatrix.T.rst", "generated/dgl.sparse.SparseMatrix.coalesce.rst", "generated/dgl.sparse.SparseMatrix.col.rst", "generated/dgl.sparse.SparseMatrix.coo.rst", "generated/dgl.sparse.SparseMatrix.cpu.rst", "generated/dgl.sparse.SparseMatrix.csc.rst", "generated/dgl.sparse.SparseMatrix.csr.rst", "generated/dgl.sparse.SparseMatrix.cuda.rst", "generated/dgl.sparse.SparseMatrix.device.rst", "generated/dgl.sparse.SparseMatrix.double.rst", "generated/dgl.sparse.SparseMatrix.dtype.rst", "generated/dgl.sparse.SparseMatrix.float.rst", "generated/dgl.sparse.SparseMatrix.has_duplicate.rst", "generated/dgl.sparse.SparseMatrix.indices.rst", "generated/dgl.sparse.SparseMatrix.int.rst", "generated/dgl.sparse.SparseMatrix.long.rst", "generated/dgl.sparse.SparseMatrix.neg.rst", "generated/dgl.sparse.SparseMatrix.nnz.rst", "generated/dgl.sparse.SparseMatrix.reduce.rst", "generated/dgl.sparse.SparseMatrix.row.rst", "generated/dgl.sparse.SparseMatrix.shape.rst", "generated/dgl.sparse.SparseMatrix.smax.rst", "generated/dgl.sparse.SparseMatrix.smean.rst", "generated/dgl.sparse.SparseMatrix.smin.rst", "generated/dgl.sparse.SparseMatrix.softmax.rst", "generated/dgl.sparse.SparseMatrix.sum.rst", "generated/dgl.sparse.SparseMatrix.t.rst", "generated/dgl.sparse.SparseMatrix.to.rst", "generated/dgl.sparse.SparseMatrix.to_dense.rst", "generated/dgl.sparse.SparseMatrix.transpose.rst", "generated/dgl.sparse.SparseMatrix.val.rst", "generated/dgl.sparse.add.rst", "generated/dgl.sparse.bsddmm.rst", "generated/dgl.sparse.bspmm.rst", "generated/dgl.sparse.diag.rst", "generated/dgl.sparse.div.rst", "generated/dgl.sparse.from_coo.rst", "generated/dgl.sparse.from_csc.rst", "generated/dgl.sparse.from_csr.rst", "generated/dgl.sparse.identity.rst", "generated/dgl.sparse.matmul.rst", "generated/dgl.sparse.mul.rst", "generated/dgl.sparse.power.rst", "generated/dgl.sparse.sddmm.rst", "generated/dgl.sparse.softmax.rst", "generated/dgl.sparse.sp_add_v.rst", "generated/dgl.sparse.sp_broadcast_v.rst", "generated/dgl.sparse.sp_div_v.rst", "generated/dgl.sparse.sp_mul_v.rst", "generated/dgl.sparse.sp_sub_v.rst", "generated/dgl.sparse.spmatrix.rst", "generated/dgl.sparse.spmm.rst", "generated/dgl.sparse.spspmm.rst", "generated/dgl.sparse.sub.rst", "generated/dgl.sparse.val_like.rst", "generated/dgl.sum_edges.rst", "generated/dgl.sum_nodes.rst", "generated/dgl.svd_pe.rst", "generated/dgl.to_bidirected.rst", "generated/dgl.to_block.rst", "generated/dgl.to_cugraph.rst", "generated/dgl.to_double.rst", "generated/dgl.to_float.rst", "generated/dgl.to_half.rst", "generated/dgl.to_heterogeneous.rst", "generated/dgl.to_homogeneous.rst", "generated/dgl.to_networkx.rst", "generated/dgl.to_simple.rst", "generated/dgl.to_simple_graph.rst", "generated/dgl.topk_edges.rst", "generated/dgl.topk_nodes.rst", "generated/dgl.topological_nodes_generator.rst", "generated/dgl.transforms.AddEdge.rst", "generated/dgl.transforms.AddMetaPaths.rst", "generated/dgl.transforms.AddReverse.rst", "generated/dgl.transforms.AddSelfLoop.rst", "generated/dgl.transforms.BaseTransform.rst", "generated/dgl.transforms.Compose.rst", "generated/dgl.transforms.DropEdge.rst", "generated/dgl.transforms.DropNode.rst", "generated/dgl.transforms.FeatMask.rst", "generated/dgl.transforms.GCNNorm.rst", "generated/dgl.transforms.GDC.rst", "generated/dgl.transforms.HeatKernel.rst", "generated/dgl.transforms.KHopGraph.rst", "generated/dgl.transforms.LapPE.rst", "generated/dgl.transforms.LineGraph.rst", "generated/dgl.transforms.NodeShuffle.rst", "generated/dgl.transforms.PPR.rst", "generated/dgl.transforms.RandomWalkPE.rst", "generated/dgl.transforms.RemoveSelfLoop.rst", "generated/dgl.transforms.RowFeatNormalizer.rst", "generated/dgl.transforms.SIGNDiffusion.rst", "generated/dgl.transforms.SVDPE.rst", "generated/dgl.transforms.ToLevi.rst", "generated/dgl.transforms.ToSimple.rst", "generated/dgl.udf.EdgeBatch.batch_size.rst", "generated/dgl.udf.EdgeBatch.data.rst", "generated/dgl.udf.EdgeBatch.dst.rst", "generated/dgl.udf.EdgeBatch.edges.rst", "generated/dgl.udf.EdgeBatch.src.rst", "generated/dgl.udf.NodeBatch.batch_size.rst", "generated/dgl.udf.NodeBatch.data.rst", "generated/dgl.udf.NodeBatch.mailbox.rst", "generated/dgl.udf.NodeBatch.nodes.rst", "generated/dgl.unbatch.rst", "generated/dgl.use_libxsmm.rst", "graphtransformer/data.rst", "graphtransformer/index.rst", "graphtransformer/model.rst", "guide/data.rst", "guide/data-dataset.rst", "guide/data-download.rst", "guide/data-loadcsv.rst", "guide/data-loadogb.rst", "guide/data-process.rst", "guide/data-savenload.rst", "guide/distributed.rst", "guide/distributed-apis.rst", "guide/distributed-hetero.rst", "guide/distributed-partition.rst", "guide/distributed-preprocessing.rst", "guide/distributed-tools.rst", "guide/graph.rst", "guide/graph-basic.rst", "guide/graph-external.rst", "guide/graph-feature.rst", "guide/graph-gpu.rst", "guide/graph-graphs-nodes-edges.rst", "guide/graph-heterogeneous.rst", "guide/index.rst", "guide/message.rst", "guide/message-api.rst", "guide/message-efficient.rst", "guide/message-heterograph.rst", "guide/message-part.rst", "guide/minibatch.rst", "guide/minibatch-custom-sampler.rst", "guide/minibatch-edge.rst", "guide/minibatch-gpu-sampling.rst", "guide/minibatch-inference.rst", "guide/minibatch-link.rst", "guide/minibatch-nn.rst", "guide/minibatch-node.rst", "guide/minibatch-parallelism.rst", "guide/minibatch-sparse.rst", "guide/mixed_precision.rst", "guide/nn.rst", "guide/nn-construction.rst", "guide/nn-forward.rst", "guide/nn-heterograph.rst", "guide/training.rst", "guide/training-edge.rst", "guide/training-eweight.rst", "guide/training-graph.rst", "guide/training-link.rst", "guide/training-node.rst", "guide_cn/data.rst", "guide_cn/data-dataset.rst", "guide_cn/data-download.rst", "guide_cn/data-loadogb.rst", "guide_cn/data-process.rst", "guide_cn/data-savenload.rst", "guide_cn/distributed.rst", "guide_cn/distributed-apis.rst", "guide_cn/distributed-preprocessing.rst", "guide_cn/distributed-tools.rst", "guide_cn/graph.rst", "guide_cn/graph-basic.rst", "guide_cn/graph-external.rst", "guide_cn/graph-feature.rst", "guide_cn/graph-gpu.rst", "guide_cn/graph-graphs-nodes-edges.rst", "guide_cn/graph-heterogeneous.rst", "guide_cn/index.rst", "guide_cn/message.rst", "guide_cn/message-api.rst", "guide_cn/message-efficient.rst", "guide_cn/message-heterograph.rst", "guide_cn/message-part.rst", "guide_cn/minibatch.rst", "guide_cn/minibatch-custom-sampler.rst", "guide_cn/minibatch-edge.rst", "guide_cn/minibatch-inference.rst", "guide_cn/minibatch-link.rst", "guide_cn/minibatch-nn.rst", "guide_cn/minibatch-node.rst", "guide_cn/nn.rst", "guide_cn/nn-construction.rst", "guide_cn/nn-forward.rst", "guide_cn/nn-heterograph.rst", "guide_cn/training.rst", "guide_cn/training-edge.rst", "guide_cn/training-eweight.rst", "guide_cn/training-graph.rst", "guide_cn/training-link.rst", "guide_cn/training-node.rst", "guide_ko/data.rst", "guide_ko/data-dataset.rst", "guide_ko/data-download.rst", "guide_ko/data-loadogb.rst", "guide_ko/data-process.rst", "guide_ko/data-savenload.rst", "guide_ko/distributed.rst", "guide_ko/distributed-apis.rst", "guide_ko/distributed-hetero.rst", "guide_ko/distributed-preprocessing.rst", "guide_ko/distributed-tools.rst", "guide_ko/graph.rst", "guide_ko/graph-basic.rst", "guide_ko/graph-external.rst", "guide_ko/graph-feature.rst", "guide_ko/graph-gpu.rst", "guide_ko/graph-graphs-nodes-edges.rst", "guide_ko/graph-heterogeneous.rst", "guide_ko/index.rst", "guide_ko/message.rst", "guide_ko/message-api.rst", "guide_ko/message-edge.rst", "guide_ko/message-efficient.rst", "guide_ko/message-heterograph.rst", "guide_ko/message-part.rst", "guide_ko/minibatch.rst", "guide_ko/minibatch-custom-sampler.rst", "guide_ko/minibatch-edge.rst", "guide_ko/minibatch-gpu-sampling.rst", "guide_ko/minibatch-inference.rst", "guide_ko/minibatch-link.rst", "guide_ko/minibatch-nn.rst", "guide_ko/minibatch-node.rst", "guide_ko/mixed_precision.rst", "guide_ko/nn.rst", "guide_ko/nn-construction.rst", "guide_ko/nn-forward.rst", "guide_ko/nn-heterograph.rst", "guide_ko/training.rst", "guide_ko/training-edge.rst", "guide_ko/training-graph.rst", "guide_ko/training-link.rst", "guide_ko/training-node.rst", "index.rst", "install/index.rst", "notebooks/sparse/gcn.nblink", "notebooks/sparse/graph_diffusion.nblink", "notebooks/sparse/graph_transformer.nblink", "notebooks/sparse/hgnn.nblink", "notebooks/sparse/index.rst", "notebooks/sparse/quickstart.nblink", "performance.rst", "resources.rst", "sg_execution_times.rst", "stochastic_training/index.rst", "stochastic_training/link_prediction.nblink", "stochastic_training/multigpu_node_classification.nblink", "stochastic_training/neighbor_sampling_overview.nblink", "stochastic_training/node_classification.nblink", "stochastic_training/ondisk-dataset.rst", "stochastic_training/ondisk-dataset-specification.rst", "stochastic_training/ondisk_dataset_heterograph.nblink", "stochastic_training/ondisk_dataset_homograph.nblink", "tutorials/blitz/1_introduction.rst", "tutorials/blitz/2_dglgraph.rst", "tutorials/blitz/3_message_passing.rst", "tutorials/blitz/4_link_predict.rst", "tutorials/blitz/5_graph_classification.rst", "tutorials/blitz/6_load_data.rst", "tutorials/blitz/index.rst", "tutorials/blitz/sg_execution_times.rst", "tutorials/cpu/argo_tutorial.rst", "tutorials/cpu/cpu_best_practises.rst", "tutorials/cpu/index.rst", "tutorials/cpu/sg_execution_times.rst", "tutorials/dist/1_node_classification.rst", "tutorials/dist/2_link_prediction.rst", "tutorials/dist/index.rst", "tutorials/dist/sg_execution_times.rst", "tutorials/models/1_gnn/1_gcn.rst", "tutorials/models/1_gnn/4_rgcn.rst", "tutorials/models/1_gnn/6_line_graph.rst", "tutorials/models/1_gnn/9_gat.rst", "tutorials/models/1_gnn/index.rst", "tutorials/models/1_gnn/sg_execution_times.rst", "tutorials/models/2_small_graph/3_tree-lstm.rst", "tutorials/models/2_small_graph/index.rst", "tutorials/models/2_small_graph/sg_execution_times.rst", "tutorials/models/3_generative_model/5_dgmg.rst", "tutorials/models/3_generative_model/index.rst", "tutorials/models/3_generative_model/sg_execution_times.rst", "tutorials/models/4_old_wines/2_capsule.rst", "tutorials/models/4_old_wines/7_transformer.rst", "tutorials/models/4_old_wines/index.rst", "tutorials/models/4_old_wines/sg_execution_times.rst", "tutorials/models/index.rst", "tutorials/models/sg_execution_times.rst", "tutorials/multi/1_graph_classification.rst", "tutorials/multi/2_node_classification.rst", "tutorials/multi/index.rst", "tutorials/multi/sg_execution_times.rst"], "indexentries": {"__getitem__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__getitem__", false]], "__getitem__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__getitem__", false]], "__getitem__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__getitem__", false]], "__getitem__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__getitem__", false]], "__getitem__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__getitem__", false]], "__getitem__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__getitem__", false]], "__getitem__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__getitem__", false]], "__getitem__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__getitem__", false]], "__getitem__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__getitem__", false]], "__getitem__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__getitem__", false]], "__getitem__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__getitem__", false]], "__getitem__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__getitem__", false]], "__getitem__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__getitem__", false]], "__getitem__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__getitem__", false]], "__getitem__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__getitem__", false]], "__getitem__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__getitem__", false]], "__getitem__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__getitem__", false]], "__getitem__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__getitem__", false]], "__getitem__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__getitem__", false]], "__getitem__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__getitem__", false]], "__getitem__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__getitem__", false]], "__getitem__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__getitem__", false]], "__getitem__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__getitem__", false]], "__getitem__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__getitem__", false]], "__getitem__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__getitem__", false]], "__getitem__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__getitem__", false]], "__getitem__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__getitem__", false]], "__getitem__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__getitem__", false]], "__getitem__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__getitem__", false]], "__getitem__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__getitem__", false]], "__getitem__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__getitem__", false]], "__getitem__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__getitem__", false]], "__getitem__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__getitem__", false]], "__getitem__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__getitem__", false]], "__getitem__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__getitem__", false]], "__getitem__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__getitem__", false]], "__getitem__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__getitem__", false]], "__getitem__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__getitem__", false]], "__getitem__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__getitem__", false]], "__getitem__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__getitem__", false]], "__getitem__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__getitem__", false]], "__getitem__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__getitem__", false]], "__getitem__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__getitem__", false]], "__getitem__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__getitem__", false]], "__getitem__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__getitem__", false]], "__getitem__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__getitem__", false]], "__getitem__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__getitem__", false]], "__getitem__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__getitem__", false]], "__getitem__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__getitem__", false]], "__getitem__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__getitem__", false]], "__getitem__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__getitem__", false]], "__getitem__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__getitem__", false]], "__getitem__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__getitem__", false]], "__getitem__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__getitem__", false]], "__getitem__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__getitem__", false]], "__getitem__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__getitem__", false]], "__getitem__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__getitem__", false]], "__getitem__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__getitem__", false]], "__getitem__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__getitem__", false]], "__getitem__() (dgl.dglgraph method)": [[26, "dgl.DGLGraph.__getitem__", false]], "__init__() (dgl.dataloading.blocksampler method)": [[208, "dgl.dataloading.BlockSampler.__init__", false]], "__init__() (dgl.sampling.pinsagesampler method)": [[560, "dgl.sampling.PinSAGESampler.__init__", false]], "__len__() (dgl.data.actordataset method)": [[134, "dgl.data.ActorDataset.__len__", false]], "__len__() (dgl.data.aifbdataset method)": [[132, "dgl.data.AIFBDataset.__len__", false]], "__len__() (dgl.data.amazoncobuycomputerdataset method)": [[135, "dgl.data.AmazonCoBuyComputerDataset.__len__", false]], "__len__() (dgl.data.amazoncobuyphotodataset method)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.__len__", false]], "__len__() (dgl.data.amazonratingsdataset method)": [[137, "dgl.data.AmazonRatingsDataset.__len__", false]], "__len__() (dgl.data.amdataset method)": [[133, "dgl.data.AMDataset.__len__", false]], "__len__() (dgl.data.asgraphpreddataset method)": [[138, "dgl.data.AsGraphPredDataset.__len__", false]], "__len__() (dgl.data.aslinkpreddataset method)": [[139, "dgl.data.AsLinkPredDataset.__len__", false]], "__len__() (dgl.data.asnodepreddataset method)": [[140, "dgl.data.AsNodePredDataset.__len__", false]], "__len__() (dgl.data.ba2motifdataset method)": [[141, "dgl.data.BA2MotifDataset.__len__", false]], "__len__() (dgl.data.bacommunitydataset method)": [[142, "dgl.data.BACommunityDataset.__len__", false]], "__len__() (dgl.data.bashapedataset method)": [[143, "dgl.data.BAShapeDataset.__len__", false]], "__len__() (dgl.data.bgsdataset method)": [[144, "dgl.data.BGSDataset.__len__", false]], "__len__() (dgl.data.bitcoinotcdataset method)": [[145, "dgl.data.BitcoinOTCDataset.__len__", false]], "__len__() (dgl.data.chameleondataset method)": [[149, "dgl.data.ChameleonDataset.__len__", false]], "__len__() (dgl.data.cifar10superpixeldataset method)": [[146, "dgl.data.CIFAR10SuperPixelDataset.__len__", false]], "__len__() (dgl.data.citeseergraphdataset method)": [[150, "dgl.data.CiteseerGraphDataset.__len__", false]], "__len__() (dgl.data.clusterdataset method)": [[147, "dgl.data.CLUSTERDataset.__len__", false]], "__len__() (dgl.data.coauthorcsdataset method)": [[151, "dgl.data.CoauthorCSDataset.__len__", false]], "__len__() (dgl.data.coauthorphysicsdataset method)": [[152, "dgl.data.CoauthorPhysicsDataset.__len__", false]], "__len__() (dgl.data.corafulldataset method)": [[153, "dgl.data.CoraFullDataset.__len__", false]], "__len__() (dgl.data.coragraphdataset method)": [[154, "dgl.data.CoraGraphDataset.__len__", false]], "__len__() (dgl.data.cornelldataset method)": [[155, "dgl.data.CornellDataset.__len__", false]], "__len__() (dgl.data.csvdataset method)": [[148, "dgl.data.CSVDataset.__len__", false]], "__len__() (dgl.data.dgldataset method)": [[156, "dgl.data.DGLDataset.__len__", false]], "__len__() (dgl.data.fakenewsdataset method)": [[159, "dgl.data.FakeNewsDataset.__len__", false]], "__len__() (dgl.data.fb15k237dataset method)": [[157, "dgl.data.FB15k237Dataset.__len__", false]], "__len__() (dgl.data.fb15kdataset method)": [[158, "dgl.data.FB15kDataset.__len__", false]], "__len__() (dgl.data.flickrdataset method)": [[160, "dgl.data.FlickrDataset.__len__", false]], "__len__() (dgl.data.fraudamazondataset method)": [[161, "dgl.data.FraudAmazonDataset.__len__", false]], "__len__() (dgl.data.frauddataset method)": [[162, "dgl.data.FraudDataset.__len__", false]], "__len__() (dgl.data.fraudyelpdataset method)": [[163, "dgl.data.FraudYelpDataset.__len__", false]], "__len__() (dgl.data.gdeltdataset method)": [[164, "dgl.data.GDELTDataset.__len__", false]], "__len__() (dgl.data.gindataset method)": [[165, "dgl.data.GINDataset.__len__", false]], "__len__() (dgl.data.icews18dataset method)": [[166, "dgl.data.ICEWS18Dataset.__len__", false]], "__len__() (dgl.data.karateclubdataset method)": [[167, "dgl.data.KarateClubDataset.__len__", false]], "__len__() (dgl.data.legacytudataset method)": [[168, "dgl.data.LegacyTUDataset.__len__", false]], "__len__() (dgl.data.minesweeperdataset method)": [[171, "dgl.data.MinesweeperDataset.__len__", false]], "__len__() (dgl.data.minigcdataset method)": [[172, "dgl.data.MiniGCDataset.__len__", false]], "__len__() (dgl.data.mnistsuperpixeldataset method)": [[169, "dgl.data.MNISTSuperPixelDataset.__len__", false]], "__len__() (dgl.data.movielensdataset method)": [[173, "dgl.data.MovieLensDataset.__len__", false]], "__len__() (dgl.data.mutagdataset method)": [[170, "dgl.data.MUTAGDataset.__len__", false]], "__len__() (dgl.data.patterndataset method)": [[174, "dgl.data.PATTERNDataset.__len__", false]], "__len__() (dgl.data.ppidataset method)": [[175, "dgl.data.PPIDataset.__len__", false]], "__len__() (dgl.data.pubmedgraphdataset method)": [[176, "dgl.data.PubmedGraphDataset.__len__", false]], "__len__() (dgl.data.qm7bdataset method)": [[177, "dgl.data.QM7bDataset.__len__", false]], "__len__() (dgl.data.qm9dataset method)": [[178, "dgl.data.QM9Dataset.__len__", false]], "__len__() (dgl.data.qm9edgedataset method)": [[179, "dgl.data.QM9EdgeDataset.__len__", false]], "__len__() (dgl.data.questionsdataset method)": [[180, "dgl.data.QuestionsDataset.__len__", false]], "__len__() (dgl.data.redditdataset method)": [[181, "dgl.data.RedditDataset.__len__", false]], "__len__() (dgl.data.romanempiredataset method)": [[182, "dgl.data.RomanEmpireDataset.__len__", false]], "__len__() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.__len__", false]], "__len__() (dgl.data.squirreldataset method)": [[185, "dgl.data.SquirrelDataset.__len__", false]], "__len__() (dgl.data.sstdataset method)": [[184, "dgl.data.SSTDataset.__len__", false]], "__len__() (dgl.data.texasdataset method)": [[187, "dgl.data.TexasDataset.__len__", false]], "__len__() (dgl.data.tolokersdataset method)": [[188, "dgl.data.TolokersDataset.__len__", false]], "__len__() (dgl.data.treecycledataset method)": [[189, "dgl.data.TreeCycleDataset.__len__", false]], "__len__() (dgl.data.treegriddataset method)": [[190, "dgl.data.TreeGridDataset.__len__", false]], "__len__() (dgl.data.tudataset method)": [[186, "dgl.data.TUDataset.__len__", false]], "__len__() (dgl.data.utils.subset method)": [[196, "dgl.data.utils.Subset.__len__", false]], "__len__() (dgl.data.wikicsdataset method)": [[192, "dgl.data.WikiCSDataset.__len__", false]], "__len__() (dgl.data.wisconsindataset method)": [[193, "dgl.data.WisconsinDataset.__len__", false]], "__len__() (dgl.data.wn18dataset method)": [[191, "dgl.data.WN18Dataset.__len__", false]], "__len__() (dgl.data.yelpdataset method)": [[194, "dgl.data.YelpDataset.__len__", false]], "__len__() (dgl.data.zincdataset method)": [[195, "dgl.data.ZINCDataset.__len__", false]], "actordataset (class in dgl.data)": [[134, "dgl.data.ActorDataset", false]], "add() (in module dgl.sparse)": [[609, "dgl.sparse.add", false]], "add_edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.add_edge_attribute", false]], "add_edges() (dgl.dglgraph method)": [[27, "dgl.DGLGraph.add_edges", false]], "add_edges() (in module dgl)": [[114, "dgl.add_edges", false]], "add_node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.add_node_attribute", false]], "add_node_property_split (class in dgl.data.utils)": [[197, "dgl.data.utils.add_node_property_split", false]], "add_nodepred_split (class in dgl.data.utils)": [[198, "dgl.data.utils.add_nodepred_split", false]], "add_nodes() (dgl.dglgraph method)": [[28, "dgl.DGLGraph.add_nodes", false]], "add_nodes() (in module dgl)": [[115, "dgl.add_nodes", false]], "add_reverse_edges() (in module dgl)": [[116, "dgl.add_reverse_edges", false]], "add_reverse_edges() (in module dgl.graphbolt)": [[322, "dgl.graphbolt.add_reverse_edges", false]], "add_self_loop() (dgl.dglgraph method)": [[29, "dgl.DGLGraph.add_self_loop", false]], "add_self_loop() (in module dgl)": [[117, "dgl.add_self_loop", false]], "addedge (class in dgl.transforms)": [[650, "dgl.transforms.AddEdge", false]], "addmetapaths (class in dgl.transforms)": [[651, "dgl.transforms.AddMetaPaths", false]], "addreverse (class in dgl.transforms)": [[652, "dgl.transforms.AddReverse", false]], "addselfloop (class in dgl.transforms)": [[653, "dgl.transforms.AddSelfLoop", false]], "adj() (dgl.dglgraph method)": [[30, "dgl.DGLGraph.adj", false]], "adj_external() (dgl.dglgraph method)": [[31, "dgl.DGLGraph.adj_external", false]], "adj_product_graph() (in module dgl)": [[118, "dgl.adj_product_graph", false]], "adj_sum_graph() (in module dgl)": [[119, "dgl.adj_sum_graph", false]], "adj_tensors() (dgl.dglgraph method)": [[32, "dgl.DGLGraph.adj_tensors", false]], "adjacency_matrix() (dgl.dglgraph method)": [[33, "dgl.DGLGraph.adjacency_matrix", false]], "adjusted_homophily() (in module dgl)": [[120, "dgl.adjusted_homophily", false]], "agnnconv (class in dgl.nn.mxnet.conv)": [[361, "dgl.nn.mxnet.conv.AGNNConv", false]], "agnnconv (class in dgl.nn.pytorch.conv)": [[391, "dgl.nn.pytorch.conv.AGNNConv", false]], "aifbdataset (class in dgl.data)": [[132, "dgl.data.AIFBDataset", false]], "all_nodes_set (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.all_nodes_set", false]], "all_nodes_set (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.all_nodes_set", false]], "amazoncobuycomputerdataset (class in dgl.data)": [[135, "dgl.data.AmazonCoBuyComputerDataset", false]], "amazoncobuyphotodataset (class in dgl.data)": [[136, "dgl.data.AmazonCoBuyPhotoDataset", false]], "amazonratingsdataset (class in dgl.data)": [[137, "dgl.data.AmazonRatingsDataset", false]], "amdataset (class in dgl.data)": [[133, "dgl.data.AMDataset", false]], "apply_each() (in module dgl)": [[121, "dgl.apply_each", false]], "apply_edges() (dgl.dglgraph method)": [[34, "dgl.DGLGraph.apply_edges", false]], "apply_nodes() (dgl.dglgraph method)": [[35, "dgl.DGLGraph.apply_nodes", false]], "appnpconv (class in dgl.nn.mxnet.conv)": [[362, "dgl.nn.mxnet.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.pytorch.conv)": [[392, "dgl.nn.pytorch.conv.APPNPConv", false]], "appnpconv (class in dgl.nn.tensorflow.conv)": [[462, "dgl.nn.tensorflow.conv.APPNPConv", false]], "as_edge_prediction_sampler() (in module dgl.dataloading)": [[220, "dgl.dataloading.as_edge_prediction_sampler", false]], "asgraphpreddataset (class in dgl.data)": [[138, "dgl.data.AsGraphPredDataset", false]], "aslinkpreddataset (class in dgl.data)": [[139, "dgl.data.AsLinkPredDataset", false]], "asnodepreddataset (class in dgl.data)": [[140, "dgl.data.AsNodePredDataset", false]], "atomicconv (class in dgl.nn.pytorch.conv)": [[393, "dgl.nn.pytorch.conv.AtomicConv", false]], "avgpooling (class in dgl.nn.mxnet.glob)": [[378, "dgl.nn.mxnet.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.pytorch.glob)": [[437, "dgl.nn.pytorch.glob.AvgPooling", false]], "avgpooling (class in dgl.nn.tensorflow.glob)": [[470, "dgl.nn.tensorflow.glob.AvgPooling", false]], "ba2motifdataset (class in dgl.data)": [[141, "dgl.data.BA2MotifDataset", false]], "bacommunitydataset (class in dgl.data)": [[142, "dgl.data.BACommunityDataset", false]], "barrier() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.barrier", false]], "basetransform (class in dgl.transforms)": [[654, "dgl.transforms.BaseTransform", false]], "bashapedataset (class in dgl.data)": [[143, "dgl.data.BAShapeDataset", false]], "basicfeaturestore (class in dgl.graphbolt)": [[288, "dgl.graphbolt.BasicFeatureStore", false]], "batch() (in module dgl)": [[122, "dgl.batch", false]], "batch_num_edges() (dgl.dglgraph method)": [[36, "dgl.DGLGraph.batch_num_edges", false]], "batch_num_nodes() (dgl.dglgraph method)": [[37, "dgl.DGLGraph.batch_num_nodes", false]], "batch_size (dgl.dglgraph property)": [[38, "dgl.DGLGraph.batch_size", false]], "batch_size() (dgl.udf.edgebatch method)": [[674, "dgl.udf.EdgeBatch.batch_size", false]], "batch_size() (dgl.udf.nodebatch method)": [[679, "dgl.udf.NodeBatch.batch_size", false]], "bfs_edges_generator() (in module dgl)": [[123, "dgl.bfs_edges_generator", false]], "bfs_nodes_generator() (in module dgl)": [[124, "dgl.bfs_nodes_generator", false]], "bgsdataset (class in dgl.data)": [[144, "dgl.data.BGSDataset", false]], "bias (dgl.nn.pytorch.conv.graphconv attribute)": [[417, "dgl.nn.pytorch.conv.GraphConv.bias", false]], "biasedmha (class in dgl.nn.pytorch.gt)": [[446, "dgl.nn.pytorch.gt.BiasedMHA", false]], "bipartite_from_networkx() (in module dgl)": [[125, "dgl.bipartite_from_networkx", false]], "bipartite_from_scipy() (in module dgl)": [[126, "dgl.bipartite_from_scipy", false]], "bitcoinotcdataset (class in dgl.data)": [[145, "dgl.data.BitcoinOTCDataset", false]], "block_to_graph() (in module dgl)": [[127, "dgl.block_to_graph", false]], "blocks (dgl.graphbolt.minibatch property)": [[307, "dgl.graphbolt.MiniBatch.blocks", false]], "blocksampler (class in dgl.dataloading)": [[208, "dgl.dataloading.BlockSampler", false]], "broadcast_edges() (in module dgl)": [[128, "dgl.broadcast_edges", false]], "broadcast_nodes() (in module dgl)": [[129, "dgl.broadcast_nodes", false]], "bsddmm() (in module dgl.sparse)": [[610, "dgl.sparse.bsddmm", false]], "bspmm() (in module dgl.sparse)": [[611, "dgl.sparse.bspmm", false]], "builtindataset (class in dgl.graphbolt)": [[289, "dgl.graphbolt.BuiltinDataset", false]], "call_once_and_share() (in module dgl.multiprocessing.pytorch)": [[357, "dgl.multiprocessing.pytorch.call_once_and_share", false]], "canonical_etypes (dgl.dglgraph property)": [[39, "dgl.DGLGraph.canonical_etypes", false]], "canonical_etypes (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.canonical_etypes", false]], "cfconv (class in dgl.nn.pytorch.conv)": [[394, "dgl.nn.pytorch.conv.CFConv", false]], "chameleondataset (class in dgl.data)": [[149, "dgl.data.ChameleonDataset", false]], "chebconv (class in dgl.nn.mxnet.conv)": [[363, "dgl.nn.mxnet.conv.ChebConv", false]], "chebconv (class in dgl.nn.pytorch.conv)": [[395, "dgl.nn.pytorch.conv.ChebConv", false]], "chebconv (class in dgl.nn.tensorflow.conv)": [[463, "dgl.nn.tensorflow.conv.ChebConv", false]], "check_sha1 (class in dgl.data.utils)": [[199, "dgl.data.utils.check_sha1", false]], "cifar10superpixeldataset (class in dgl.data)": [[146, "dgl.data.CIFAR10SuperPixelDataset", false]], "citeseergraphdataset (class in dgl.data)": [[150, "dgl.data.CiteseerGraphDataset", false]], "clusterdataset (class in dgl.data)": [[147, "dgl.data.CLUSTERDataset", false]], "clustergcnsampler (class in dgl.dataloading)": [[209, "dgl.dataloading.ClusterGCNSampler", false]], "coalesce() (dgl.sparse.sparsematrix method)": [[579, "dgl.sparse.SparseMatrix.coalesce", false]], "coauthorcsdataset (class in dgl.data)": [[151, "dgl.data.CoauthorCSDataset", false]], "coauthorphysicsdataset (class in dgl.data)": [[152, "dgl.data.CoauthorPhysicsDataset", false]], "col (dgl.sparse.sparsematrix property)": [[580, "dgl.sparse.SparseMatrix.col", false]], "collate_fn() (dgl.data.sbmmixturedataset method)": [[183, "dgl.data.SBMMixtureDataset.collate_fn", false]], "compact_csc_format() (in module dgl.graphbolt)": [[323, "dgl.graphbolt.compact_csc_format", false]], "compact_graphs() (in module dgl)": [[130, "dgl.compact_graphs", false]], "compacted_seeds (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.compacted_seeds", false]], "compose (class in dgl.transforms)": [[655, "dgl.transforms.Compose", false]], "compute_blocks() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.compute_blocks", false]], "coo() (dgl.sparse.sparsematrix method)": [[581, "dgl.sparse.SparseMatrix.coo", false]], "copy_e() (in module dgl.function)": [[251, "dgl.function.copy_e", false]], "copy_e_max() (in module dgl.ops)": [[481, "dgl.ops.copy_e_max", false]], "copy_e_mean() (in module dgl.ops)": [[482, "dgl.ops.copy_e_mean", false]], "copy_e_min() (in module dgl.ops)": [[483, "dgl.ops.copy_e_min", false]], "copy_e_sum() (in module dgl.ops)": [[484, "dgl.ops.copy_e_sum", false]], "copy_to_shared_memory() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.copy_to_shared_memory", false]], "copy_to_shared_memory() (dgl.graphbolt.samplinggraph method)": [[314, "dgl.graphbolt.SamplingGraph.copy_to_shared_memory", false]], "copy_u() (in module dgl.function)": [[252, "dgl.function.copy_u", false]], "copy_u() (in module dgl.ops)": [[485, "dgl.ops.copy_u", false]], "copy_u_max() (in module dgl.ops)": [[486, "dgl.ops.copy_u_max", false]], "copy_u_mean() (in module dgl.ops)": [[487, "dgl.ops.copy_u_mean", false]], "copy_u_min() (in module dgl.ops)": [[488, "dgl.ops.copy_u_min", false]], "copy_u_sum() (in module dgl.ops)": [[489, "dgl.ops.copy_u_sum", false]], "copy_v() (in module dgl.ops)": [[490, "dgl.ops.copy_v", false]], "copyto (class in dgl.graphbolt)": [[291, "dgl.graphbolt.CopyTo", false]], "corafulldataset (class in dgl.data)": [[153, "dgl.data.CoraFullDataset", false]], "coragraphdataset (class in dgl.data)": [[154, "dgl.data.CoraGraphDataset", false]], "cornelldataset (class in dgl.data)": [[155, "dgl.data.CornellDataset", false]], "cpu() (dgl.dglgraph method)": [[40, "dgl.DGLGraph.cpu", false]], "cpu() (dgl.sparse.sparsematrix method)": [[582, "dgl.sparse.SparseMatrix.cpu", false]], "cpucachedfeature (class in dgl.graphbolt)": [[290, "dgl.graphbolt.CPUCachedFeature", false]], "create_block() (in module dgl)": [[131, "dgl.create_block", false]], "create_formats_() (dgl.dglgraph method)": [[41, "dgl.DGLGraph.create_formats_", false]], "csc() (dgl.sparse.sparsematrix method)": [[583, "dgl.sparse.SparseMatrix.csc", false]], "csc_indptr (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.csc_indptr", false]], "csr() (dgl.sparse.sparsematrix method)": [[584, "dgl.sparse.SparseMatrix.csr", false]], "csvdataset (class in dgl.data)": [[148, "dgl.data.CSVDataset", false]], "cuda() (dgl.sparse.sparsematrix method)": [[585, "dgl.sparse.SparseMatrix.cuda", false]], "cugraphgatconv (class in dgl.nn.pytorch.conv)": [[396, "dgl.nn.pytorch.conv.CuGraphGATConv", false]], "cugraphrelgraphconv (class in dgl.nn.pytorch.conv)": [[397, "dgl.nn.pytorch.conv.CuGraphRelGraphConv", false]], "cugraphsageconv (class in dgl.nn.pytorch.conv)": [[398, "dgl.nn.pytorch.conv.CuGraphSAGEConv", false]], "data (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.data", false]], "data (dgl.udf.edgebatch property)": [[675, "dgl.udf.EdgeBatch.data", false]], "data (dgl.udf.nodebatch property)": [[680, "dgl.udf.NodeBatch.data", false]], "dataloader (class in dgl.dataloading)": [[210, "dgl.dataloading.DataLoader", false]], "dataloader (class in dgl.graphbolt)": [[292, "dgl.graphbolt.DataLoader", false]], "dataset (class in dgl.graphbolt)": [[293, "dgl.graphbolt.Dataset", false]], "dataset_name (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.dataset_name", false]], "dataset_name (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.dataset_name", false]], "dataset_name (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.dataset_name", false]], "deepwalk (class in dgl.nn.pytorch)": [[385, "dgl.nn.pytorch.DeepWalk", false]], "degreeencoder (class in dgl.nn.pytorch.gt)": [[447, "dgl.nn.pytorch.gt.DegreeEncoder", false]], "densechebconv (class in dgl.nn.mxnet.conv)": [[364, "dgl.nn.mxnet.conv.DenseChebConv", false]], "densechebconv (class in dgl.nn.pytorch.conv)": [[400, "dgl.nn.pytorch.conv.DenseChebConv", false]], "densegraphconv (class in dgl.nn.mxnet.conv)": [[365, "dgl.nn.mxnet.conv.DenseGraphConv", false]], "densegraphconv (class in dgl.nn.pytorch.conv)": [[401, "dgl.nn.pytorch.conv.DenseGraphConv", false]], "densesageconv (class in dgl.nn.mxnet.conv)": [[366, "dgl.nn.mxnet.conv.DenseSAGEConv", false]], "densesageconv (class in dgl.nn.pytorch.conv)": [[402, "dgl.nn.pytorch.conv.DenseSAGEConv", false]], "device (dgl.dglgraph property)": [[42, "dgl.DGLGraph.device", false]], "device (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.device", false]], "device (dgl.sparse.sparsematrix property)": [[586, "dgl.sparse.SparseMatrix.device", false]], "dfs_edges_generator() (in module dgl)": [[229, "dgl.dfs_edges_generator", false]], "dfs_labeled_edges_generator() (in module dgl)": [[230, "dgl.dfs_labeled_edges_generator", false]], "dgl": [[0, "module-dgl", false]], "dgl.data": [[2, "module-dgl.data", false]], "dgl.geometry": [[6, "module-dgl.geometry", false]], "dgl.nn.functional": [[18, "module-dgl.nn.functional", false]], "dgl.optim": [[10, "module-dgl.optim", false]], "dgl.sampling": [[11, "module-dgl.sampling", false]], "dgl.transforms": [[19, "module-dgl.transforms", false]], "dgl_partition_to_graphbolt() (in module dgl.distributed)": [[231, "dgl.distributed.dgl_partition_to_graphbolt", false]], "dgldataset (class in dgl.data)": [[156, "dgl.data.DGLDataset", false]], "dglgraph (class in dgl)": [[1, "dgl.DGLGraph", false]], "dgnconv (class in dgl.nn.pytorch.conv)": [[399, "dgl.nn.pytorch.conv.DGNConv", false]], "diag() (in module dgl.sparse)": [[612, "dgl.sparse.diag", false]], "diskbasedfeature (class in dgl.graphbolt)": [[294, "dgl.graphbolt.DiskBasedFeature", false]], "distdataloader (class in dgl.distributed)": [[4, "dgl.distributed.DistDataLoader", false]], "distedgedataloader (class in dgl.dataloading)": [[211, "dgl.dataloading.DistEdgeDataLoader", false]], "distembedding (class in dgl.distributed)": [[4, "dgl.distributed.DistEmbedding", false]], "distgraph (class in dgl.distributed)": [[4, "dgl.distributed.DistGraph", false]], "distnodedataloader (class in dgl.dataloading)": [[212, "dgl.dataloading.DistNodeDataLoader", false]], "distributeditemsampler (class in dgl.graphbolt)": [[295, "dgl.graphbolt.DistributedItemSampler", false]], "disttensor (class in dgl.distributed)": [[4, "dgl.distributed.DistTensor", false]], "div() (in module dgl.sparse)": [[613, "dgl.sparse.div", false]], "dotgatconv (class in dgl.nn.pytorch.conv)": [[403, "dgl.nn.pytorch.conv.DotGatConv", false]], "double() (dgl.sparse.sparsematrix method)": [[587, "dgl.sparse.SparseMatrix.double", false]], "double_radius_node_labeling() (in module dgl)": [[243, "dgl.double_radius_node_labeling", false]], "download (class in dgl.data.utils)": [[200, "dgl.data.utils.download", false]], "dropedge (class in dgl.transforms)": [[656, "dgl.transforms.DropEdge", false]], "dropnode (class in dgl.transforms)": [[657, "dgl.transforms.DropNode", false]], "dst (dgl.udf.edgebatch property)": [[676, "dgl.udf.EdgeBatch.dst", false]], "dstdata (dgl.dglgraph property)": [[43, "dgl.DGLGraph.dstdata", false]], "dstnodes (dgl.dglgraph property)": [[44, "dgl.DGLGraph.dstnodes", false]], "dsttypes (dgl.dglgraph property)": [[45, "dgl.DGLGraph.dsttypes", false]], "dtype (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.dtype", false]], "dtype (dgl.sparse.sparsematrix property)": [[588, "dgl.sparse.SparseMatrix.dtype", false]], "e_add_u() (in module dgl.function)": [[253, "dgl.function.e_add_u", false]], "e_add_u() (in module dgl.ops)": [[491, "dgl.ops.e_add_u", false]], "e_add_v() (in module dgl.function)": [[254, "dgl.function.e_add_v", false]], "e_add_v() (in module dgl.ops)": [[492, "dgl.ops.e_add_v", false]], "e_div_u() (in module dgl.function)": [[255, "dgl.function.e_div_u", false]], "e_div_u() (in module dgl.ops)": [[493, "dgl.ops.e_div_u", false]], "e_div_v() (in module dgl.function)": [[256, "dgl.function.e_div_v", false]], "e_div_v() (in module dgl.ops)": [[494, "dgl.ops.e_div_v", false]], "e_dot_u() (in module dgl.function)": [[257, "dgl.function.e_dot_u", false]], "e_dot_u() (in module dgl.ops)": [[495, "dgl.ops.e_dot_u", false]], "e_dot_v() (in module dgl.function)": [[258, "dgl.function.e_dot_v", false]], "e_dot_v() (in module dgl.ops)": [[496, "dgl.ops.e_dot_v", false]], "e_mul_u() (in module dgl.function)": [[259, "dgl.function.e_mul_u", false]], "e_mul_u() (in module dgl.ops)": [[497, "dgl.ops.e_mul_u", false]], "e_mul_v() (in module dgl.function)": [[260, "dgl.function.e_mul_v", false]], "e_mul_v() (in module dgl.ops)": [[498, "dgl.ops.e_mul_v", false]], "e_sub_u() (in module dgl.function)": [[261, "dgl.function.e_sub_u", false]], "e_sub_u() (in module dgl.ops)": [[499, "dgl.ops.e_sub_u", false]], "e_sub_v() (in module dgl.function)": [[262, "dgl.function.e_sub_v", false]], "e_sub_v() (in module dgl.ops)": [[500, "dgl.ops.e_sub_v", false]], "edata (dgl.dglgraph property)": [[46, "dgl.DGLGraph.edata", false]], "edata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edata", false]], "edge_attr_schemes() (dgl.dglgraph method)": [[47, "dgl.DGLGraph.edge_attr_schemes", false]], "edge_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.edge_attr_schemes", false]], "edge_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attribute", false]], "edge_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.edge_attributes", false]], "edge_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.edge_feat_size", false]], "edge_features (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.edge_features", false]], "edge_homophily() (in module dgl)": [[244, "dgl.edge_homophily", false]], "edge_ids() (dgl.dglgraph method)": [[48, "dgl.DGLGraph.edge_ids", false]], "edge_ids() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.edge_ids", false]], "edge_label_informativeness() (in module dgl)": [[245, "dgl.edge_label_informativeness", false]], "edge_softmax() (in module dgl.nn.functional)": [[359, "dgl.nn.functional.edge_softmax", false]], "edge_split() (in module dgl.distributed)": [[232, "dgl.distributed.edge_split", false]], "edge_subgraph() (dgl.dglgraph method)": [[49, "dgl.DGLGraph.edge_subgraph", false]], "edge_subgraph() (in module dgl)": [[246, "dgl.edge_subgraph", false]], "edge_type_subgraph() (dgl.dglgraph method)": [[50, "dgl.DGLGraph.edge_type_subgraph", false]], "edge_type_subgraph() (in module dgl)": [[247, "dgl.edge_type_subgraph", false]], "edge_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.edge_type_to_id", false]], "edgeconv (class in dgl.nn.mxnet.conv)": [[367, "dgl.nn.mxnet.conv.EdgeConv", false]], "edgeconv (class in dgl.nn.pytorch.conv)": [[406, "dgl.nn.pytorch.conv.EdgeConv", false]], "edgegatconv (class in dgl.nn.pytorch.conv)": [[407, "dgl.nn.pytorch.conv.EdgeGATConv", false]], "edgepredictor (class in dgl.nn.pytorch.link)": [[454, "dgl.nn.pytorch.link.EdgePredictor", false]], "edges (dgl.dglgraph property)": [[51, "dgl.DGLGraph.edges", false]], "edges (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.edges", false]], "edges() (dgl.udf.edgebatch method)": [[677, "dgl.udf.EdgeBatch.edges", false]], "edgeweightnorm (class in dgl.nn.pytorch.conv)": [[408, "dgl.nn.pytorch.conv.EdgeWeightNorm", false]], "egatconv (class in dgl.nn.pytorch.conv)": [[404, "dgl.nn.pytorch.conv.EGATConv", false]], "egnnconv (class in dgl.nn.pytorch.conv)": [[405, "dgl.nn.pytorch.conv.EGNNConv", false]], "egtlayer (class in dgl.nn.pytorch.gt)": [[448, "dgl.nn.pytorch.gt.EGTLayer", false]], "eid2localeid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2localeid", false]], "eid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.eid2partid", false]], "end_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.end_time", false]], "etype_str_to_tuple() (in module dgl.graphbolt)": [[324, "dgl.graphbolt.etype_str_to_tuple", false]], "etype_tuple_to_str() (in module dgl.graphbolt)": [[325, "dgl.graphbolt.etype_tuple_to_str", false]], "etypes (dgl.dglgraph property)": [[52, "dgl.DGLGraph.etypes", false]], "etypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.etypes", false]], "exclude_edges() (dgl.graphbolt.sampledsubgraph method)": [[312, "dgl.graphbolt.SampledSubgraph.exclude_edges", false]], "exclude_seed_edges() (in module dgl.graphbolt)": [[326, "dgl.graphbolt.exclude_seed_edges", false]], "expand_indptr() (in module dgl.graphbolt)": [[327, "dgl.graphbolt.expand_indptr", false]], "explain_graph() (dgl.nn.pytorch.explain.gnnexplainer method)": [[428, "dgl.nn.pytorch.explain.GNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[429, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[430, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[431, "dgl.nn.pytorch.explain.HeteroSubgraphX.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.pgexplainer method)": [[432, "dgl.nn.pytorch.explain.PGExplainer.explain_graph", false]], "explain_graph() (dgl.nn.pytorch.explain.subgraphx method)": [[433, "dgl.nn.pytorch.explain.SubgraphX.explain_graph", false]], "explain_node() (dgl.nn.pytorch.explain.gnnexplainer method)": [[428, "dgl.nn.pytorch.explain.GNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[429, "dgl.nn.pytorch.explain.HeteroGNNExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[430, "dgl.nn.pytorch.explain.HeteroPGExplainer.explain_node", false]], "explain_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[432, "dgl.nn.pytorch.explain.PGExplainer.explain_node", false]], "extract_archive (class in dgl.data.utils)": [[201, "dgl.data.utils.extract_archive", false]], "fakenewsdataset (class in dgl.data)": [[159, "dgl.data.FakeNewsDataset", false]], "farthest_point_sampler (class in dgl.geometry)": [[6, "dgl.geometry.farthest_point_sampler", false]], "fb15k237dataset (class in dgl.data)": [[157, "dgl.data.FB15k237Dataset", false]], "fb15kdataset (class in dgl.data)": [[158, "dgl.data.FB15kDataset", false]], "feat_size (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.feat_size", false]], "featmask (class in dgl.transforms)": [[658, "dgl.transforms.FeatMask", false]], "feature (class in dgl.graphbolt)": [[296, "dgl.graphbolt.Feature", false]], "feature (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature", false]], "feature (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.feature", false]], "feature (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.feature", false]], "feature (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.feature", false]], "feature_name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.feature_name", false]], "featurefetcher (class in dgl.graphbolt)": [[297, "dgl.graphbolt.FeatureFetcher", false]], "features (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.features", false]], "featurestore (class in dgl.graphbolt)": [[298, "dgl.graphbolt.FeatureStore", false]], "filter_edges() (dgl.dglgraph method)": [[53, "dgl.DGLGraph.filter_edges", false]], "filter_nodes() (dgl.dglgraph method)": [[54, "dgl.DGLGraph.filter_nodes", false]], "find_edges() (dgl.dglgraph method)": [[55, "dgl.DGLGraph.find_edges", false]], "find_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.find_edges", false]], "find_edges() (in module dgl.distributed)": [[233, "dgl.distributed.find_edges", false]], "flickrdataset (class in dgl.data)": [[160, "dgl.data.FlickrDataset", false]], "float() (dgl.sparse.sparsematrix method)": [[589, "dgl.sparse.SparseMatrix.float", false]], "formats() (dgl.dglgraph method)": [[56, "dgl.DGLGraph.formats", false]], "forward() (dgl.nn.pytorch.conv.agnnconv method)": [[391, "dgl.nn.pytorch.conv.AGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.appnpconv method)": [[392, "dgl.nn.pytorch.conv.APPNPConv.forward", false]], "forward() (dgl.nn.pytorch.conv.atomicconv method)": [[393, "dgl.nn.pytorch.conv.AtomicConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cfconv method)": [[394, "dgl.nn.pytorch.conv.CFConv.forward", false]], "forward() (dgl.nn.pytorch.conv.chebconv method)": [[395, "dgl.nn.pytorch.conv.ChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[396, "dgl.nn.pytorch.conv.CuGraphGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[397, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[398, "dgl.nn.pytorch.conv.CuGraphSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densechebconv method)": [[400, "dgl.nn.pytorch.conv.DenseChebConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densegraphconv method)": [[401, "dgl.nn.pytorch.conv.DenseGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.densesageconv method)": [[402, "dgl.nn.pytorch.conv.DenseSAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dgnconv method)": [[399, "dgl.nn.pytorch.conv.DGNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.dotgatconv method)": [[403, "dgl.nn.pytorch.conv.DotGatConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeconv method)": [[406, "dgl.nn.pytorch.conv.EdgeConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgegatconv method)": [[407, "dgl.nn.pytorch.conv.EdgeGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.edgeweightnorm method)": [[408, "dgl.nn.pytorch.conv.EdgeWeightNorm.forward", false]], "forward() (dgl.nn.pytorch.conv.egatconv method)": [[404, "dgl.nn.pytorch.conv.EGATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.egnnconv method)": [[405, "dgl.nn.pytorch.conv.EGNNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatconv method)": [[409, "dgl.nn.pytorch.conv.GATConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgcnconv method)": [[415, "dgl.nn.pytorch.conv.GatedGCNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[416, "dgl.nn.pytorch.conv.GatedGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gatv2conv method)": [[410, "dgl.nn.pytorch.conv.GATv2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.gcn2conv method)": [[411, "dgl.nn.pytorch.conv.GCN2Conv.forward", false]], "forward() (dgl.nn.pytorch.conv.ginconv method)": [[412, "dgl.nn.pytorch.conv.GINConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gineconv method)": [[413, "dgl.nn.pytorch.conv.GINEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.gmmconv method)": [[414, "dgl.nn.pytorch.conv.GMMConv.forward", false]], "forward() (dgl.nn.pytorch.conv.graphconv method)": [[417, "dgl.nn.pytorch.conv.GraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.grouprevres method)": [[418, "dgl.nn.pytorch.conv.GroupRevRes.forward", false]], "forward() (dgl.nn.pytorch.conv.hgtconv method)": [[419, "dgl.nn.pytorch.conv.HGTConv.forward", false]], "forward() (dgl.nn.pytorch.conv.nnconv method)": [[420, "dgl.nn.pytorch.conv.NNConv.forward", false]], "forward() (dgl.nn.pytorch.conv.pnaconv method)": [[421, "dgl.nn.pytorch.conv.PNAConv.forward", false]], "forward() (dgl.nn.pytorch.conv.relgraphconv method)": [[422, "dgl.nn.pytorch.conv.RelGraphConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sageconv method)": [[423, "dgl.nn.pytorch.conv.SAGEConv.forward", false]], "forward() (dgl.nn.pytorch.conv.sgconv method)": [[424, "dgl.nn.pytorch.conv.SGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.tagconv method)": [[425, "dgl.nn.pytorch.conv.TAGConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsconv method)": [[426, "dgl.nn.pytorch.conv.TWIRLSConv.forward", false]], "forward() (dgl.nn.pytorch.conv.twirlsunfoldingandattention method)": [[427, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention.forward", false]], "forward() (dgl.nn.pytorch.deepwalk method)": [[385, "dgl.nn.pytorch.DeepWalk.forward", false]], "forward() (dgl.nn.pytorch.explain.gnnexplainer method)": [[428, "dgl.nn.pytorch.explain.GNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterognnexplainer method)": [[429, "dgl.nn.pytorch.explain.HeteroGNNExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[430, "dgl.nn.pytorch.explain.HeteroPGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.heterosubgraphx method)": [[431, "dgl.nn.pytorch.explain.HeteroSubgraphX.forward", false]], "forward() (dgl.nn.pytorch.explain.pgexplainer method)": [[432, "dgl.nn.pytorch.explain.PGExplainer.forward", false]], "forward() (dgl.nn.pytorch.explain.subgraphx method)": [[433, "dgl.nn.pytorch.explain.SubgraphX.forward", false]], "forward() (dgl.nn.pytorch.factory.knngraph method)": [[434, "dgl.nn.pytorch.factory.KNNGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.radiusgraph method)": [[435, "dgl.nn.pytorch.factory.RadiusGraph.forward", false]], "forward() (dgl.nn.pytorch.factory.segmentedknngraph method)": [[436, "dgl.nn.pytorch.factory.SegmentedKNNGraph.forward", false]], "forward() (dgl.nn.pytorch.glob.avgpooling method)": [[437, "dgl.nn.pytorch.glob.AvgPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.globalattentionpooling method)": [[438, "dgl.nn.pytorch.glob.GlobalAttentionPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.maxpooling method)": [[439, "dgl.nn.pytorch.glob.MaxPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.set2set method)": [[440, "dgl.nn.pytorch.glob.Set2Set.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerdecoder method)": [[441, "dgl.nn.pytorch.glob.SetTransformerDecoder.forward", false]], "forward() (dgl.nn.pytorch.glob.settransformerencoder method)": [[442, "dgl.nn.pytorch.glob.SetTransformerEncoder.forward", false]], "forward() (dgl.nn.pytorch.glob.sortpooling method)": [[443, "dgl.nn.pytorch.glob.SortPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.sumpooling method)": [[444, "dgl.nn.pytorch.glob.SumPooling.forward", false]], "forward() (dgl.nn.pytorch.glob.weightandsum method)": [[445, "dgl.nn.pytorch.glob.WeightAndSum.forward", false]], "forward() (dgl.nn.pytorch.gt.biasedmha method)": [[446, "dgl.nn.pytorch.gt.BiasedMHA.forward", false]], "forward() (dgl.nn.pytorch.gt.degreeencoder method)": [[447, "dgl.nn.pytorch.gt.DegreeEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.egtlayer method)": [[448, "dgl.nn.pytorch.gt.EGTLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.graphormerlayer method)": [[449, "dgl.nn.pytorch.gt.GraphormerLayer.forward", false]], "forward() (dgl.nn.pytorch.gt.lapposencoder method)": [[450, "dgl.nn.pytorch.gt.LapPosEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.pathencoder method)": [[451, "dgl.nn.pytorch.gt.PathEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder method)": [[452, "dgl.nn.pytorch.gt.SpatialEncoder.forward", false]], "forward() (dgl.nn.pytorch.gt.spatialencoder3d method)": [[453, "dgl.nn.pytorch.gt.SpatialEncoder3d.forward", false]], "forward() (dgl.nn.pytorch.heteroembedding method)": [[386, "dgl.nn.pytorch.HeteroEmbedding.forward", false]], "forward() (dgl.nn.pytorch.heterographconv method)": [[387, "dgl.nn.pytorch.HeteroGraphConv.forward", false]], "forward() (dgl.nn.pytorch.heterolinear method)": [[388, "dgl.nn.pytorch.HeteroLinear.forward", false]], "forward() (dgl.nn.pytorch.link.edgepredictor method)": [[454, "dgl.nn.pytorch.link.EdgePredictor.forward", false]], "forward() (dgl.nn.pytorch.link.transe method)": [[455, "dgl.nn.pytorch.link.TransE.forward", false]], "forward() (dgl.nn.pytorch.link.transr method)": [[456, "dgl.nn.pytorch.link.TransR.forward", false]], "forward() (dgl.nn.pytorch.metapath2vec method)": [[389, "dgl.nn.pytorch.MetaPath2Vec.forward", false]], "forward() (dgl.nn.pytorch.typedlinear method)": [[390, "dgl.nn.pytorch.TypedLinear.forward", false]], "forward() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[458, "dgl.nn.pytorch.utils.JumpingKnowledge.forward", false]], "forward() (dgl.nn.pytorch.utils.labelpropagation method)": [[459, "dgl.nn.pytorch.utils.LabelPropagation.forward", false]], "forward() (dgl.nn.pytorch.utils.sequential method)": [[460, "dgl.nn.pytorch.utils.Sequential.forward", false]], "forward() (dgl.nn.pytorch.utils.weightbasis method)": [[461, "dgl.nn.pytorch.utils.WeightBasis.forward", false]], "fraudamazondataset (class in dgl.data)": [[161, "dgl.data.FraudAmazonDataset", false]], "frauddataset (class in dgl.data)": [[162, "dgl.data.FraudDataset", false]], "fraudyelpdataset (class in dgl.data)": [[163, "dgl.data.FraudYelpDataset", false]], "from_coo() (in module dgl.sparse)": [[614, "dgl.sparse.from_coo", false]], "from_csc() (in module dgl.sparse)": [[615, "dgl.sparse.from_csc", false]], "from_csr() (in module dgl.sparse)": [[616, "dgl.sparse.from_csr", false]], "from_cugraph() (in module dgl)": [[248, "dgl.from_cugraph", false]], "from_dglgraph() (in module dgl.graphbolt)": [[328, "dgl.graphbolt.from_dglgraph", false]], "from_networkx() (in module dgl)": [[249, "dgl.from_networkx", false]], "from_scipy() (in module dgl)": [[250, "dgl.from_scipy", false]], "fused_csc_sampling_graph() (in module dgl.graphbolt)": [[329, "dgl.graphbolt.fused_csc_sampling_graph", false]], "fusedcscsamplinggraph (class in dgl.graphbolt)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph", false]], "gatconv (class in dgl.nn.mxnet.conv)": [[368, "dgl.nn.mxnet.conv.GATConv", false]], "gatconv (class in dgl.nn.pytorch.conv)": [[409, "dgl.nn.pytorch.conv.GATConv", false]], "gatconv (class in dgl.nn.tensorflow.conv)": [[464, "dgl.nn.tensorflow.conv.GATConv", false]], "gatedgcnconv (class in dgl.nn.pytorch.conv)": [[415, "dgl.nn.pytorch.conv.GatedGCNConv", false]], "gatedgraphconv (class in dgl.nn.mxnet.conv)": [[371, "dgl.nn.mxnet.conv.GatedGraphConv", false]], "gatedgraphconv (class in dgl.nn.pytorch.conv)": [[416, "dgl.nn.pytorch.conv.GatedGraphConv", false]], "gather_mm() (in module dgl.ops)": [[501, "dgl.ops.gather_mm", false]], "gatv2conv (class in dgl.nn.pytorch.conv)": [[410, "dgl.nn.pytorch.conv.GATv2Conv", false]], "gcn2conv (class in dgl.nn.pytorch.conv)": [[411, "dgl.nn.pytorch.conv.GCN2Conv", false]], "gcnnorm (class in dgl.transforms)": [[659, "dgl.transforms.GCNNorm", false]], "gdc (class in dgl.transforms)": [[660, "dgl.transforms.GDC", false]], "gdeltdataset (class in dgl.data)": [[164, "dgl.data.GDELTDataset", false]], "get_download_dir (class in dgl.data.utils)": [[202, "dgl.data.utils.get_download_dir", false]], "get_edge_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_edge_partition_policy", false]], "get_etype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_etype_id", false]], "get_node_partition_policy() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_node_partition_policy", false]], "get_ntype_id() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_ntype_id", false]], "get_part_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_part_size", false]], "get_partition_book() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.get_partition_book", false]], "get_size() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.get_size", false]], "ginconv (class in dgl.nn.mxnet.conv)": [[369, "dgl.nn.mxnet.conv.GINConv", false]], "ginconv (class in dgl.nn.pytorch.conv)": [[412, "dgl.nn.pytorch.conv.GINConv", false]], "ginconv (class in dgl.nn.tensorflow.conv)": [[465, "dgl.nn.tensorflow.conv.GINConv", false]], "gindataset (class in dgl.data)": [[165, "dgl.data.GINDataset", false]], "gineconv (class in dgl.nn.pytorch.conv)": [[413, "dgl.nn.pytorch.conv.GINEConv", false]], "global_uniform_negative_sampling() (in module dgl.sampling)": [[561, "dgl.sampling.global_uniform_negative_sampling", false]], "globalattentionpooling (class in dgl.nn.mxnet.glob)": [[379, "dgl.nn.mxnet.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.pytorch.glob)": [[438, "dgl.nn.pytorch.glob.GlobalAttentionPooling", false]], "globalattentionpooling (class in dgl.nn.tensorflow.glob)": [[471, "dgl.nn.tensorflow.glob.GlobalAttentionPooling", false]], "globaluniform (class in dgl.dataloading.negative_sampler)": [[226, "dgl.dataloading.negative_sampler.GlobalUniform", false]], "gmmconv (class in dgl.nn.mxnet.conv)": [[370, "dgl.nn.mxnet.conv.GMMConv", false]], "gmmconv (class in dgl.nn.pytorch.conv)": [[414, "dgl.nn.pytorch.conv.GMMConv", false]], "gnnexplainer (class in dgl.nn.pytorch.explain)": [[428, "dgl.nn.pytorch.explain.GNNExplainer", false]], "gpucachedfeature (class in dgl.graphbolt)": [[300, "dgl.graphbolt.GPUCachedFeature", false]], "graph (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.graph", false]], "graph (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.graph", false]], "graph (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.graph", false]], "graph (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.graph", false]], "graph (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.graph", false]], "graph() (in module dgl)": [[287, "dgl.graph", false]], "graphconv (class in dgl.nn.mxnet.conv)": [[372, "dgl.nn.mxnet.conv.GraphConv", false]], "graphconv (class in dgl.nn.pytorch.conv)": [[417, "dgl.nn.pytorch.conv.GraphConv", false]], "graphconv (class in dgl.nn.tensorflow.conv)": [[466, "dgl.nn.tensorflow.conv.GraphConv", false]], "graphdataloader (class in dgl.dataloading)": [[213, "dgl.dataloading.GraphDataLoader", false]], "graphormerlayer (class in dgl.nn.pytorch.gt)": [[449, "dgl.nn.pytorch.gt.GraphormerLayer", false]], "graphpartitionbook (class in dgl.distributed)": [[4, "dgl.distributed.GraphPartitionBook", false]], "graphs (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.graphs", false]], "graphs (dgl.data.csvdataset attribute)": [[148, "dgl.data.CSVDataset.graphs", false]], "graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.graphs", false]], "grouprevres (class in dgl.nn.pytorch.conv)": [[418, "dgl.nn.pytorch.conv.GroupRevRes", false]], "gsddmm() (in module dgl.ops)": [[502, "dgl.ops.gsddmm", false]], "gspmm() (in module dgl.ops)": [[503, "dgl.ops.gspmm", false]], "has_duplicate() (dgl.sparse.sparsematrix method)": [[590, "dgl.sparse.SparseMatrix.has_duplicate", false]], "has_edges_between() (dgl.dglgraph method)": [[57, "dgl.DGLGraph.has_edges_between", false]], "has_nodes() (dgl.dglgraph method)": [[58, "dgl.DGLGraph.has_nodes", false]], "hash (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.hash", false]], "heatkernel (class in dgl.transforms)": [[661, "dgl.transforms.HeatKernel", false]], "heteroembedding (class in dgl.nn.pytorch)": [[386, "dgl.nn.pytorch.HeteroEmbedding", false]], "heterognnexplainer (class in dgl.nn.pytorch.explain)": [[429, "dgl.nn.pytorch.explain.HeteroGNNExplainer", false]], "heterograph() (in module dgl)": [[336, "dgl.heterograph", false]], "heterographconv (class in dgl.nn.mxnet)": [[360, "dgl.nn.mxnet.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.pytorch)": [[387, "dgl.nn.pytorch.HeteroGraphConv", false]], "heterographconv (class in dgl.nn.tensorflow.glob)": [[472, "dgl.nn.tensorflow.glob.HeteroGraphConv", false]], "heteroitemset (class in dgl.graphbolt)": [[301, "dgl.graphbolt.HeteroItemSet", false]], "heterolinear (class in dgl.nn.pytorch)": [[388, "dgl.nn.pytorch.HeteroLinear", false]], "heteropgexplainer (class in dgl.nn.pytorch.explain)": [[430, "dgl.nn.pytorch.explain.HeteroPGExplainer", false]], "heterosubgraphx (class in dgl.nn.pytorch.explain)": [[431, "dgl.nn.pytorch.explain.HeteroSubgraphX", false]], "hgtconv (class in dgl.nn.pytorch.conv)": [[419, "dgl.nn.pytorch.conv.HGTConv", false]], "icews18dataset (class in dgl.data)": [[166, "dgl.data.ICEWS18Dataset", false]], "identity() (in module dgl.sparse)": [[617, "dgl.sparse.identity", false]], "idtype (dgl.dglgraph property)": [[59, "dgl.DGLGraph.idtype", false]], "idtype (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.idtype", false]], "in_degrees() (dgl.dglgraph method)": [[60, "dgl.DGLGraph.in_degrees", false]], "in_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.in_degrees", false]], "in_edges() (dgl.dglgraph method)": [[61, "dgl.DGLGraph.in_edges", false]], "in_subgraph() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.in_subgraph", false]], "in_subgraph() (in module dgl)": [[337, "dgl.in_subgraph", false]], "in_subgraph() (in module dgl.distributed)": [[234, "dgl.distributed.in_subgraph", false]], "inc() (dgl.dglgraph method)": [[62, "dgl.DGLGraph.inc", false]], "incidence_matrix() (dgl.dglgraph method)": [[63, "dgl.DGLGraph.incidence_matrix", false]], "index_select() (in module dgl.graphbolt)": [[330, "dgl.graphbolt.index_select", false]], "indexes (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.indexes", false]], "indices (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.indices", false]], "indices() (dgl.sparse.sparsematrix method)": [[591, "dgl.sparse.SparseMatrix.indices", false]], "initialize() (in module dgl.distributed)": [[235, "dgl.distributed.initialize", false]], "input_nodes (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.input_nodes", false]], "insubgraphsampler (class in dgl.graphbolt)": [[302, "dgl.graphbolt.InSubgraphSampler", false]], "int() (dgl.dglgraph method)": [[64, "dgl.DGLGraph.int", false]], "int() (dgl.sparse.sparsematrix method)": [[592, "dgl.sparse.SparseMatrix.int", false]], "is_homogeneous (dgl.dglgraph property)": [[65, "dgl.DGLGraph.is_homogeneous", false]], "is_libxsmm_enabled() (in module dgl)": [[338, "dgl.is_libxsmm_enabled", false]], "is_multigraph (dgl.dglgraph property)": [[66, "dgl.DGLGraph.is_multigraph", false]], "is_pinned() (dgl.dglgraph method)": [[67, "dgl.DGLGraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.is_pinned", false]], "is_pinned() (dgl.graphbolt.sampledsubgraph method)": [[312, "dgl.graphbolt.SampledSubgraph.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.is_pinned", false]], "is_pinned() (dgl.graphbolt.torchbasedfeaturestore method)": [[320, "dgl.graphbolt.TorchBasedFeatureStore.is_pinned", false]], "is_temporal (dgl.data.bitcoinotcdataset attribute)": [[145, "dgl.data.BitcoinOTCDataset.is_temporal", false]], "is_temporal (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.is_temporal", false]], "is_temporal (dgl.data.icews18dataset attribute)": [[166, "dgl.data.ICEWS18Dataset.is_temporal", false]], "is_unibipartite (dgl.dglgraph property)": [[68, "dgl.DGLGraph.is_unibipartite", false]], "isin() (in module dgl.graphbolt)": [[331, "dgl.graphbolt.isin", false]], "itemsampler (class in dgl.graphbolt)": [[303, "dgl.graphbolt.ItemSampler", false]], "itemset (class in dgl.graphbolt)": [[304, "dgl.graphbolt.ItemSet", false]], "jumpingknowledge (class in dgl.nn.pytorch.utils)": [[458, "dgl.nn.pytorch.utils.JumpingKnowledge", false]], "karateclubdataset (class in dgl.data)": [[167, "dgl.data.KarateClubDataset", false]], "keys() (dgl.graphbolt.basicfeaturestore method)": [[288, "dgl.graphbolt.BasicFeatureStore.keys", false]], "keys() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.keys", false]], "khop_adj() (in module dgl)": [[339, "dgl.khop_adj", false]], "khop_graph() (in module dgl)": [[340, "dgl.khop_graph", false]], "khop_in_subgraph() (in module dgl)": [[341, "dgl.khop_in_subgraph", false]], "khop_out_subgraph() (in module dgl)": [[342, "dgl.khop_out_subgraph", false]], "khopgraph (class in dgl.transforms)": [[662, "dgl.transforms.KHopGraph", false]], "knn_graph() (in module dgl)": [[343, "dgl.knn_graph", false]], "knngraph (class in dgl.nn.pytorch.factory)": [[434, "dgl.nn.pytorch.factory.KNNGraph", false]], "labelpropagation (class in dgl.nn.pytorch.utils)": [[459, "dgl.nn.pytorch.utils.LabelPropagation", false]], "labels (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.labels", false]], "labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.labels", false]], "labels (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.labels", false]], "laborsampler (class in dgl.dataloading)": [[214, "dgl.dataloading.LaborSampler", false]], "lap_pe() (in module dgl)": [[344, "dgl.lap_pe", false]], "laplacian_lambda_max() (in module dgl)": [[345, "dgl.laplacian_lambda_max", false]], "lappe (class in dgl.transforms)": [[663, "dgl.transforms.LapPE", false]], "lapposencoder (class in dgl.nn.pytorch.gt)": [[450, "dgl.nn.pytorch.gt.LapPosEncoder", false]], "layerneighborsampler (class in dgl.graphbolt)": [[305, "dgl.graphbolt.LayerNeighborSampler", false]], "lazyfeature (class in dgl.dataloading.base)": [[221, "dgl.dataloading.base.LazyFeature", false]], "legacydataset (class in dgl.graphbolt)": [[306, "dgl.graphbolt.LegacyDataset", false]], "legacytudataset (class in dgl.data)": [[168, "dgl.data.LegacyTUDataset", false]], "lin (dgl.nn.pytorch.conv.tagconv attribute)": [[425, "dgl.nn.pytorch.conv.TAGConv.lin", false]], "line_graph() (dgl.dglgraph method)": [[69, "dgl.DGLGraph.line_graph", false]], "line_graph() (in module dgl)": [[346, "dgl.line_graph", false]], "linegraph (class in dgl.transforms)": [[664, "dgl.transforms.LineGraph", false]], "linkx_homophily() (in module dgl)": [[347, "dgl.linkx_homophily", false]], "load() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.load", false]], "load() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.load", false]], "load() (dgl.graphbolt.ondiskdataset method)": [[311, "dgl.graphbolt.OnDiskDataset.load", false]], "load_from_shared_memory() (in module dgl.graphbolt)": [[332, "dgl.graphbolt.load_from_shared_memory", false]], "load_graphs() (in module dgl)": [[348, "dgl.load_graphs", false]], "load_info (class in dgl.data.utils)": [[203, "dgl.data.utils.load_info", false]], "load_labels (class in dgl.data.utils)": [[204, "dgl.data.utils.load_labels", false]], "load_partition() (in module dgl.distributed)": [[236, "dgl.distributed.load_partition", false]], "load_partition_book() (in module dgl.distributed)": [[237, "dgl.distributed.load_partition_book", false]], "load_partition_feats() (in module dgl.distributed)": [[238, "dgl.distributed.load_partition_feats", false]], "local_partition (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.local_partition", false]], "local_scope() (dgl.dglgraph method)": [[70, "dgl.DGLGraph.local_scope", false]], "local_to_global_nid (dgl.nn.pytorch.metapath2vec attribute)": [[389, "dgl.nn.pytorch.MetaPath2Vec.local_to_global_nid", false]], "long() (dgl.dglgraph method)": [[71, "dgl.DGLGraph.long", false]], "long() (dgl.sparse.sparsematrix method)": [[593, "dgl.sparse.SparseMatrix.long", false]], "mailbox (dgl.udf.nodebatch property)": [[681, "dgl.udf.NodeBatch.mailbox", false]], "map_to_homo_eid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_eid", false]], "map_to_homo_nid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_homo_nid", false]], "map_to_per_etype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_etype", false]], "map_to_per_ntype() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.map_to_per_ntype", false]], "mask_nodes_by_property (class in dgl.data.utils)": [[205, "dgl.data.utils.mask_nodes_by_property", false]], "matmul() (in module dgl.sparse)": [[618, "dgl.sparse.matmul", false]], "max() (in module dgl.function)": [[263, "dgl.function.max", false]], "max_edges() (in module dgl)": [[349, "dgl.max_edges", false]], "max_nodes() (in module dgl)": [[350, "dgl.max_nodes", false]], "max_num_node (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.max_num_node", false]], "max_num_node (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.max_num_node", false]], "max_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.max_num_v", false]], "maxpooling (class in dgl.nn.mxnet.glob)": [[380, "dgl.nn.mxnet.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.pytorch.glob)": [[439, "dgl.nn.pytorch.glob.MaxPooling", false]], "maxpooling (class in dgl.nn.tensorflow.glob)": [[473, "dgl.nn.tensorflow.glob.MaxPooling", false]], "mean() (in module dgl.function)": [[264, "dgl.function.mean", false]], "mean_edges() (in module dgl)": [[351, "dgl.mean_edges", false]], "mean_nodes() (in module dgl)": [[352, "dgl.mean_nodes", false]], "merge() (in module dgl)": [[353, "dgl.merge", false]], "metadata (dgl.graphbolt.task property)": [[316, "dgl.graphbolt.Task.metadata", false]], "metadata() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.metadata", false]], "metadata() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.metadata", false]], "metadata() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.metadata", false]], "metadata() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.metadata", false]], "metadata() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.metadata", false]], "metagraph() (dgl.dglgraph method)": [[72, "dgl.DGLGraph.metagraph", false]], "metapath2vec (class in dgl.nn.pytorch)": [[389, "dgl.nn.pytorch.MetaPath2Vec", false]], "metapath_reachable_graph() (in module dgl)": [[354, "dgl.metapath_reachable_graph", false]], "metis_partition() (in module dgl)": [[355, "dgl.metis_partition", false]], "metis_partition_assignment() (in module dgl)": [[356, "dgl.metis_partition_assignment", false]], "min() (in module dgl.function)": [[265, "dgl.function.min", false]], "min_num_v (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.min_num_v", false]], "minesweeperdataset (class in dgl.data)": [[171, "dgl.data.MinesweeperDataset", false]], "minibatch (class in dgl.graphbolt)": [[307, "dgl.graphbolt.MiniBatch", false]], "minibatchtransformer (class in dgl.graphbolt)": [[308, "dgl.graphbolt.MiniBatchTransformer", false]], "minigcdataset (class in dgl.data)": [[172, "dgl.data.MiniGCDataset", false]], "miss_rate (dgl.graphbolt.cpucachedfeature property)": [[290, "dgl.graphbolt.CPUCachedFeature.miss_rate", false]], "miss_rate (dgl.graphbolt.gpucachedfeature property)": [[300, "dgl.graphbolt.GPUCachedFeature.miss_rate", false]], "mnistsuperpixeldataset (class in dgl.data)": [[169, "dgl.data.MNISTSuperPixelDataset", false]], "mods (dgl.nn.pytorch.heterographconv attribute)": [[387, "dgl.nn.pytorch.HeteroGraphConv.mods", false]], "module": [[0, "module-dgl", false], [2, "module-dgl.data", false], [6, "module-dgl.geometry", false], [10, "module-dgl.optim", false], [11, "module-dgl.sampling", false], [18, "module-dgl.nn.functional", false], [19, "module-dgl.transforms", false]], "movielensdataset (class in dgl.data)": [[173, "dgl.data.MovieLensDataset", false]], "mul() (in module dgl.sparse)": [[619, "dgl.sparse.mul", false]], "multi_update_all() (dgl.dglgraph method)": [[73, "dgl.DGLGraph.multi_update_all", false]], "multilayerfullneighborsampler (class in dgl.dataloading)": [[215, "dgl.dataloading.MultiLayerFullNeighborSampler", false]], "mutagdataset (class in dgl.data)": [[170, "dgl.data.MUTAGDataset", false]], "name (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.name", false]], "name (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.name", false]], "name (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.name", false]], "names (dgl.graphbolt.heteroitemset property)": [[301, "dgl.graphbolt.HeteroItemSet.names", false]], "names (dgl.graphbolt.itemset property)": [[304, "dgl.graphbolt.ItemSet.names", false]], "ndata (dgl.dglgraph property)": [[74, "dgl.DGLGraph.ndata", false]], "ndata (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ndata", false]], "neg() (dgl.sparse.sparsematrix method)": [[594, "dgl.sparse.SparseMatrix.neg", false]], "negativesampler (class in dgl.graphbolt)": [[309, "dgl.graphbolt.NegativeSampler", false]], "neighbor_matching (class in dgl.geometry)": [[6, "dgl.geometry.neighbor_matching", false]], "neighborsampler (class in dgl.dataloading)": [[216, "dgl.dataloading.NeighborSampler", false]], "neighborsampler (class in dgl.graphbolt)": [[310, "dgl.graphbolt.NeighborSampler", false]], "nid2localnid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2localnid", false]], "nid2partid() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.nid2partid", false]], "nnconv (class in dgl.nn.mxnet.conv)": [[373, "dgl.nn.mxnet.conv.NNConv", false]], "nnconv (class in dgl.nn.pytorch.conv)": [[420, "dgl.nn.pytorch.conv.NNConv", false]], "nnz (dgl.sparse.sparsematrix property)": [[595, "dgl.sparse.SparseMatrix.nnz", false]], "node2vec_random_walk() (in module dgl.sampling)": [[562, "dgl.sampling.node2vec_random_walk", false]], "node_attr_schemes() (dgl.dglgraph method)": [[75, "dgl.DGLGraph.node_attr_schemes", false]], "node_attr_schemes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.node_attr_schemes", false]], "node_attribute() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.node_attribute", false]], "node_attributes (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.node_attributes", false]], "node_embed (dgl.nn.pytorch.deepwalk attribute)": [[385, "dgl.nn.pytorch.DeepWalk.node_embed", false]], "node_embed (dgl.nn.pytorch.metapath2vec attribute)": [[389, "dgl.nn.pytorch.MetaPath2Vec.node_embed", false]], "node_feat_size (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.node_feat_size", false]], "node_features (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.node_features", false]], "node_homophily() (in module dgl)": [[476, "dgl.node_homophily", false]], "node_ids() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.node_ids", false]], "node_label_informativeness() (in module dgl)": [[477, "dgl.node_label_informativeness", false]], "node_split() (in module dgl.distributed)": [[239, "dgl.distributed.node_split", false]], "node_subgraph() (in module dgl)": [[478, "dgl.node_subgraph", false]], "node_type_offset (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_offset", false]], "node_type_subgraph() (dgl.dglgraph method)": [[76, "dgl.DGLGraph.node_type_subgraph", false]], "node_type_subgraph() (in module dgl)": [[479, "dgl.node_type_subgraph", false]], "node_type_to_id (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.node_type_to_id", false]], "nodeembedding (class in dgl.nn.pytorch.sparse_emb)": [[457, "dgl.nn.pytorch.sparse_emb.NodeEmbedding", false]], "nodes (dgl.dglgraph property)": [[77, "dgl.DGLGraph.nodes", false]], "nodes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.nodes", false]], "nodes() (dgl.udf.nodebatch method)": [[682, "dgl.udf.NodeBatch.nodes", false]], "nodeshuffle (class in dgl.transforms)": [[665, "dgl.transforms.NodeShuffle", false]], "norm_by_dst() (in module dgl)": [[480, "dgl.norm_by_dst", false]], "ntypes (dgl.dglgraph property)": [[78, "dgl.DGLGraph.ntypes", false]], "ntypes (dgl.distributed.distgraph property)": [[4, "dgl.distributed.DistGraph.ntypes", false]], "num_atom_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_atom_types", false]], "num_bond_types (dgl.data.zincdataset attribute)": [[195, "dgl.data.ZINCDataset.num_bond_types", false]], "num_classes (dgl.data.actordataset attribute)": [[134, "dgl.data.ActorDataset.num_classes", false]], "num_classes (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuycomputerdataset attribute)": [[135, "dgl.data.AmazonCoBuyComputerDataset.num_classes", false]], "num_classes (dgl.data.amazoncobuyphotodataset attribute)": [[136, "dgl.data.AmazonCoBuyPhotoDataset.num_classes", false]], "num_classes (dgl.data.amazonratingsdataset attribute)": [[137, "dgl.data.AmazonRatingsDataset.num_classes", false]], "num_classes (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.num_classes", false]], "num_classes (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_classes", false]], "num_classes (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.num_classes", false]], "num_classes (dgl.data.ba2motifdataset attribute)": [[141, "dgl.data.BA2MotifDataset.num_classes", false]], "num_classes (dgl.data.bacommunitydataset attribute)": [[142, "dgl.data.BACommunityDataset.num_classes", false]], "num_classes (dgl.data.bashapedataset attribute)": [[143, "dgl.data.BAShapeDataset.num_classes", false]], "num_classes (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.num_classes", false]], "num_classes (dgl.data.chameleondataset attribute)": [[149, "dgl.data.ChameleonDataset.num_classes", false]], "num_classes (dgl.data.citeseergraphdataset attribute)": [[150, "dgl.data.CiteseerGraphDataset.num_classes", false]], "num_classes (dgl.data.clusterdataset attribute)": [[147, "dgl.data.CLUSTERDataset.num_classes", false]], "num_classes (dgl.data.coauthorcsdataset attribute)": [[151, "dgl.data.CoauthorCSDataset.num_classes", false]], "num_classes (dgl.data.coauthorphysicsdataset attribute)": [[152, "dgl.data.CoauthorPhysicsDataset.num_classes", false]], "num_classes (dgl.data.corafulldataset attribute)": [[153, "dgl.data.CoraFullDataset.num_classes", false]], "num_classes (dgl.data.coragraphdataset attribute)": [[154, "dgl.data.CoraGraphDataset.num_classes", false]], "num_classes (dgl.data.cornelldataset attribute)": [[155, "dgl.data.CornellDataset.num_classes", false]], "num_classes (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_classes", false]], "num_classes (dgl.data.flickrdataset attribute)": [[160, "dgl.data.FlickrDataset.num_classes", false]], "num_classes (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.num_classes", false]], "num_classes (dgl.data.gindataset attribute)": [[165, "dgl.data.GINDataset.num_classes", false]], "num_classes (dgl.data.karateclubdataset attribute)": [[167, "dgl.data.KarateClubDataset.num_classes", false]], "num_classes (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_classes", false]], "num_classes (dgl.data.minesweeperdataset attribute)": [[171, "dgl.data.MinesweeperDataset.num_classes", false]], "num_classes (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_classes", false]], "num_classes (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.num_classes", false]], "num_classes (dgl.data.patterndataset attribute)": [[174, "dgl.data.PATTERNDataset.num_classes", false]], "num_classes (dgl.data.pubmedgraphdataset attribute)": [[176, "dgl.data.PubmedGraphDataset.num_classes", false]], "num_classes (dgl.data.questionsdataset attribute)": [[180, "dgl.data.QuestionsDataset.num_classes", false]], "num_classes (dgl.data.redditdataset attribute)": [[181, "dgl.data.RedditDataset.num_classes", false]], "num_classes (dgl.data.romanempiredataset attribute)": [[182, "dgl.data.RomanEmpireDataset.num_classes", false]], "num_classes (dgl.data.squirreldataset attribute)": [[185, "dgl.data.SquirrelDataset.num_classes", false]], "num_classes (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.num_classes", false]], "num_classes (dgl.data.texasdataset attribute)": [[187, "dgl.data.TexasDataset.num_classes", false]], "num_classes (dgl.data.tolokersdataset attribute)": [[188, "dgl.data.TolokersDataset.num_classes", false]], "num_classes (dgl.data.treecycledataset attribute)": [[189, "dgl.data.TreeCycleDataset.num_classes", false]], "num_classes (dgl.data.treegriddataset attribute)": [[190, "dgl.data.TreeGridDataset.num_classes", false]], "num_classes (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_classes", false]], "num_classes (dgl.data.wikicsdataset attribute)": [[192, "dgl.data.WikiCSDataset.num_classes", false]], "num_classes (dgl.data.wisconsindataset attribute)": [[193, "dgl.data.WisconsinDataset.num_classes", false]], "num_classes (dgl.data.yelpdataset attribute)": [[194, "dgl.data.YelpDataset.num_classes", false]], "num_dst_nodes() (dgl.dglgraph method)": [[79, "dgl.DGLGraph.num_dst_nodes", false]], "num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.num_edges", false]], "num_edges (dgl.graphbolt.samplinggraph property)": [[314, "dgl.graphbolt.SamplingGraph.num_edges", false]], "num_edges() (dgl.dglgraph method)": [[80, "dgl.DGLGraph.num_edges", false]], "num_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_edges", false]], "num_graphs (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.num_graphs", false]], "num_graphs (dgl.data.minigcdataset attribute)": [[172, "dgl.data.MiniGCDataset.num_graphs", false]], "num_items (dgl.graphbolt.itemset property)": [[304, "dgl.graphbolt.ItemSet.num_items", false]], "num_labels (dgl.data.legacytudataset attribute)": [[168, "dgl.data.LegacyTUDataset.num_labels", false]], "num_labels (dgl.data.ppidataset attribute)": [[175, "dgl.data.PPIDataset.num_labels", false]], "num_labels (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_labels", false]], "num_labels (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_labels", false]], "num_labels (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_labels", false]], "num_labels (dgl.data.tudataset attribute)": [[186, "dgl.data.TUDataset.num_labels", false]], "num_layers() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.num_layers", false]], "num_nodes (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_nodes", false]], "num_nodes (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_nodes", false]], "num_nodes (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_nodes", false]], "num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.num_nodes", false]], "num_nodes (dgl.graphbolt.samplinggraph property)": [[314, "dgl.graphbolt.SamplingGraph.num_nodes", false]], "num_nodes() (dgl.dglgraph method)": [[81, "dgl.DGLGraph.num_nodes", false]], "num_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.num_nodes", false]], "num_partitions() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.num_partitions", false]], "num_rels (dgl.data.fb15k237dataset attribute)": [[157, "dgl.data.FB15k237Dataset.num_rels", false]], "num_rels (dgl.data.fb15kdataset attribute)": [[158, "dgl.data.FB15kDataset.num_rels", false]], "num_rels (dgl.data.wn18dataset attribute)": [[191, "dgl.data.WN18Dataset.num_rels", false]], "num_src_nodes() (dgl.dglgraph method)": [[82, "dgl.DGLGraph.num_src_nodes", false]], "num_tasks (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.num_tasks", false]], "num_tasks (dgl.data.qm7bdataset attribute)": [[177, "dgl.data.QM7bDataset.num_tasks", false]], "num_tasks (dgl.data.qm9dataset attribute)": [[178, "dgl.data.QM9Dataset.num_tasks", false]], "num_tasks (dgl.data.qm9edgedataset attribute)": [[179, "dgl.data.QM9EdgeDataset.num_tasks", false]], "number_of_dst_nodes() (dgl.dglgraph method)": [[83, "dgl.DGLGraph.number_of_dst_nodes", false]], "number_of_edges() (dgl.dglgraph method)": [[84, "dgl.DGLGraph.number_of_edges", false]], "number_of_edges() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_edges", false]], "number_of_nodes() (dgl.dglgraph method)": [[85, "dgl.DGLGraph.number_of_nodes", false]], "number_of_nodes() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.number_of_nodes", false]], "number_of_src_nodes() (dgl.dglgraph method)": [[86, "dgl.DGLGraph.number_of_src_nodes", false]], "ondiskdataset (class in dgl.graphbolt)": [[311, "dgl.graphbolt.OnDiskDataset", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraph property)": [[312, "dgl.graphbolt.SampledSubgraph.original_column_node_ids", false]], "original_column_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[313, "dgl.graphbolt.SampledSubgraphImpl.original_column_node_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraph property)": [[312, "dgl.graphbolt.SampledSubgraph.original_edge_ids", false]], "original_edge_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[313, "dgl.graphbolt.SampledSubgraphImpl.original_edge_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraph property)": [[312, "dgl.graphbolt.SampledSubgraph.original_row_node_ids", false]], "original_row_node_ids (dgl.graphbolt.sampledsubgraphimpl attribute)": [[313, "dgl.graphbolt.SampledSubgraphImpl.original_row_node_ids", false]], "out_degrees() (dgl.dglgraph method)": [[87, "dgl.DGLGraph.out_degrees", false]], "out_degrees() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.out_degrees", false]], "out_edges() (dgl.dglgraph method)": [[88, "dgl.DGLGraph.out_edges", false]], "out_subgraph() (in module dgl)": [[542, "dgl.out_subgraph", false]], "pack_traces() (in module dgl.sampling)": [[563, "dgl.sampling.pack_traces", false]], "part_id (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.part_id", false]], "part_policy (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.part_policy", false]], "partid (dgl.distributed.graphpartitionbook property)": [[4, "dgl.distributed.GraphPartitionBook.partid", false]], "partid2eids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2eids", false]], "partid2nids() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.partid2nids", false]], "partition_book (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.partition_book", false]], "partition_graph() (in module dgl.distributed)": [[240, "dgl.distributed.partition_graph", false]], "partition_graph_with_halo() (in module dgl)": [[543, "dgl.partition_graph_with_halo", false]], "partitionpolicy (class in dgl.distributed)": [[4, "dgl.distributed.PartitionPolicy", false]], "pathencoder (class in dgl.nn.pytorch.gt)": [[451, "dgl.nn.pytorch.gt.PathEncoder", false]], "patterndataset (class in dgl.data)": [[174, "dgl.data.PATTERNDataset", false]], "persourceuniform (class in dgl.dataloading.negative_sampler)": [[227, "dgl.dataloading.negative_sampler.PerSourceUniform", false]], "pgexplainer (class in dgl.nn.pytorch.explain)": [[432, "dgl.nn.pytorch.explain.PGExplainer", false]], "pin_memory() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.pin_memory", false]], "pin_memory() (dgl.graphbolt.sampledsubgraph method)": [[312, "dgl.graphbolt.SampledSubgraph.pin_memory", false]], "pin_memory_() (dgl.dglgraph method)": [[89, "dgl.DGLGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.pin_memory_", false]], "pin_memory_() (dgl.graphbolt.torchbasedfeaturestore method)": [[320, "dgl.graphbolt.TorchBasedFeatureStore.pin_memory_", false]], "pinsagesampler (class in dgl.sampling)": [[560, "dgl.sampling.PinSAGESampler", false]], "pnaconv (class in dgl.nn.pytorch.conv)": [[421, "dgl.nn.pytorch.conv.PNAConv", false]], "policy_str (dgl.distributed.partitionpolicy property)": [[4, "dgl.distributed.PartitionPolicy.policy_str", false]], "power() (in module dgl.sparse)": [[620, "dgl.sparse.power", false]], "ppidataset (class in dgl.data)": [[175, "dgl.data.PPIDataset", false]], "ppr (class in dgl.transforms)": [[666, "dgl.transforms.PPR", false]], "predecessors() (dgl.dglgraph method)": [[90, "dgl.DGLGraph.predecessors", false]], "predict_category (dgl.data.aifbdataset attribute)": [[132, "dgl.data.AIFBDataset.predict_category", false]], "predict_category (dgl.data.amdataset attribute)": [[133, "dgl.data.AMDataset.predict_category", false]], "predict_category (dgl.data.bgsdataset attribute)": [[144, "dgl.data.BGSDataset.predict_category", false]], "predict_category (dgl.data.mutagdataset attribute)": [[170, "dgl.data.MUTAGDataset.predict_category", false]], "pretrained_emb (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.pretrained_emb", false]], "prop_edges() (dgl.dglgraph method)": [[91, "dgl.DGLGraph.prop_edges", false]], "prop_edges() (in module dgl)": [[544, "dgl.prop_edges", false]], "prop_edges_dfs() (in module dgl)": [[545, "dgl.prop_edges_dfs", false]], "prop_nodes() (dgl.dglgraph method)": [[92, "dgl.DGLGraph.prop_nodes", false]], "prop_nodes() (in module dgl)": [[546, "dgl.prop_nodes", false]], "prop_nodes_bfs() (in module dgl)": [[547, "dgl.prop_nodes_bfs", false]], "prop_nodes_topo() (in module dgl)": [[548, "dgl.prop_nodes_topo", false]], "pubmedgraphdataset (class in dgl.data)": [[176, "dgl.data.PubmedGraphDataset", false]], "pull() (dgl.dglgraph method)": [[93, "dgl.DGLGraph.pull", false]], "push() (dgl.dglgraph method)": [[94, "dgl.DGLGraph.push", false]], "qm7bdataset (class in dgl.data)": [[177, "dgl.data.QM7bDataset", false]], "qm9dataset (class in dgl.data)": [[178, "dgl.data.QM9Dataset", false]], "qm9edgedataset (class in dgl.data)": [[179, "dgl.data.QM9EdgeDataset", false]], "questionsdataset (class in dgl.data)": [[180, "dgl.data.QuestionsDataset", false]], "radius_graph() (in module dgl)": [[549, "dgl.radius_graph", false]], "radiusgraph (class in dgl.nn.pytorch.factory)": [[435, "dgl.nn.pytorch.factory.RadiusGraph", false]], "rand_bipartite() (in module dgl)": [[550, "dgl.rand_bipartite", false]], "rand_graph() (in module dgl)": [[551, "dgl.rand_graph", false]], "random_walk() (in module dgl.sampling)": [[564, "dgl.sampling.random_walk", false]], "random_walk_pe() (in module dgl)": [[552, "dgl.random_walk_pe", false]], "randomwalkpe (class in dgl.transforms)": [[667, "dgl.transforms.RandomWalkPE", false]], "rank() (dgl.distributed.distgraph method)": [[4, "dgl.distributed.DistGraph.rank", false]], "raw_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_dir", false]], "raw_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.raw_path", false]], "read() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.read", false]], "read() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.read", false]], "read() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.read", false]], "read() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.read", false]], "read() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.read", false]], "read() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.read", false]], "read_async() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.read_async", false]], "read_async() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.read_async", false]], "read_async() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.read_async", false]], "read_async() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.read_async", false]], "read_async() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.read_async", false]], "read_async_num_stages() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.read_async_num_stages", false]], "read_async_num_stages() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.read_async_num_stages", false]], "read_into_memory() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.read_into_memory", false]], "readout_edges() (in module dgl)": [[553, "dgl.readout_edges", false]], "readout_nodes() (in module dgl)": [[554, "dgl.readout_nodes", false]], "redditdataset (class in dgl.data)": [[181, "dgl.data.RedditDataset", false]], "reduce() (dgl.sparse.sparsematrix method)": [[596, "dgl.sparse.SparseMatrix.reduce", false]], "rel_emb (dgl.nn.pytorch.link.transe attribute)": [[455, "dgl.nn.pytorch.link.TransE.rel_emb", false]], "rel_emb (dgl.nn.pytorch.link.transr attribute)": [[456, "dgl.nn.pytorch.link.TransR.rel_emb", false]], "rel_project (dgl.nn.pytorch.link.transr attribute)": [[456, "dgl.nn.pytorch.link.TransR.rel_project", false]], "relgraphconv (class in dgl.nn.mxnet.conv)": [[374, "dgl.nn.mxnet.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.pytorch.conv)": [[422, "dgl.nn.pytorch.conv.RelGraphConv", false]], "relgraphconv (class in dgl.nn.tensorflow.conv)": [[467, "dgl.nn.tensorflow.conv.RelGraphConv", false]], "remove_edges() (dgl.dglgraph method)": [[95, "dgl.DGLGraph.remove_edges", false]], "remove_edges() (in module dgl)": [[555, "dgl.remove_edges", false]], "remove_nodes() (dgl.dglgraph method)": [[96, "dgl.DGLGraph.remove_nodes", false]], "remove_nodes() (in module dgl)": [[556, "dgl.remove_nodes", false]], "remove_self_loop() (dgl.dglgraph method)": [[97, "dgl.DGLGraph.remove_self_loop", false]], "remove_self_loop() (in module dgl)": [[557, "dgl.remove_self_loop", false]], "removeselfloop (class in dgl.transforms)": [[668, "dgl.transforms.RemoveSelfLoop", false]], "reorder_graph() (dgl.dglgraph method)": [[98, "dgl.DGLGraph.reorder_graph", false]], "reorder_graph() (in module dgl)": [[558, "dgl.reorder_graph", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphgatconv method)": [[396, "dgl.nn.pytorch.conv.CuGraphGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphrelgraphconv method)": [[397, "dgl.nn.pytorch.conv.CuGraphRelGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.cugraphsageconv method)": [[398, "dgl.nn.pytorch.conv.CuGraphSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densechebconv method)": [[400, "dgl.nn.pytorch.conv.DenseChebConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densegraphconv method)": [[401, "dgl.nn.pytorch.conv.DenseGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.densesageconv method)": [[402, "dgl.nn.pytorch.conv.DenseSAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.edgegatconv method)": [[407, "dgl.nn.pytorch.conv.EdgeGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.egatconv method)": [[404, "dgl.nn.pytorch.conv.EGATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatconv method)": [[409, "dgl.nn.pytorch.conv.GATConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatedgraphconv method)": [[416, "dgl.nn.pytorch.conv.GatedGraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gatv2conv method)": [[410, "dgl.nn.pytorch.conv.GATv2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gcn2conv method)": [[411, "dgl.nn.pytorch.conv.GCN2Conv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.gmmconv method)": [[414, "dgl.nn.pytorch.conv.GMMConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.graphconv method)": [[417, "dgl.nn.pytorch.conv.GraphConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.nnconv method)": [[420, "dgl.nn.pytorch.conv.NNConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sageconv method)": [[423, "dgl.nn.pytorch.conv.SAGEConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.sgconv method)": [[424, "dgl.nn.pytorch.conv.SGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.conv.tagconv method)": [[425, "dgl.nn.pytorch.conv.TAGConv.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.deepwalk method)": [[385, "dgl.nn.pytorch.DeepWalk.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.glob.set2set method)": [[440, "dgl.nn.pytorch.glob.Set2Set.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.gt.biasedmha method)": [[446, "dgl.nn.pytorch.gt.BiasedMHA.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.heteroembedding method)": [[386, "dgl.nn.pytorch.HeteroEmbedding.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.edgepredictor method)": [[454, "dgl.nn.pytorch.link.EdgePredictor.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transe method)": [[455, "dgl.nn.pytorch.link.TransE.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.link.transr method)": [[456, "dgl.nn.pytorch.link.TransR.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.metapath2vec method)": [[389, "dgl.nn.pytorch.MetaPath2Vec.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.typedlinear method)": [[390, "dgl.nn.pytorch.TypedLinear.reset_parameters", false]], "reset_parameters() (dgl.nn.pytorch.utils.jumpingknowledge method)": [[458, "dgl.nn.pytorch.utils.JumpingKnowledge.reset_parameters", false]], "reverse() (dgl.dglgraph method)": [[99, "dgl.DGLGraph.reverse", false]], "reverse() (in module dgl)": [[559, "dgl.reverse", false]], "romanempiredataset (class in dgl.data)": [[182, "dgl.data.RomanEmpireDataset", false]], "row (dgl.sparse.sparsematrix property)": [[597, "dgl.sparse.SparseMatrix.row", false]], "rowfeatnormalizer (class in dgl.transforms)": [[669, "dgl.transforms.RowFeatNormalizer", false]], "sageconv (class in dgl.nn.mxnet.conv)": [[375, "dgl.nn.mxnet.conv.SAGEConv", false]], "sageconv (class in dgl.nn.pytorch.conv)": [[423, "dgl.nn.pytorch.conv.SAGEConv", false]], "sageconv (class in dgl.nn.tensorflow.conv)": [[468, "dgl.nn.tensorflow.conv.SAGEConv", false]], "saintsampler (class in dgl.dataloading)": [[217, "dgl.dataloading.SAINTSampler", false]], "sample_etype_neighbors() (in module dgl.distributed)": [[241, "dgl.distributed.sample_etype_neighbors", false]], "sample_labors() (in module dgl.sampling)": [[565, "dgl.sampling.sample_labors", false]], "sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.sample_layer_neighbors", false]], "sample_negative_edges_uniform() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.sample_negative_edges_uniform", false]], "sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.sample_neighbors", false]], "sample_neighbors() (in module dgl.distributed)": [[242, "dgl.distributed.sample_neighbors", false]], "sample_neighbors() (in module dgl.sampling)": [[566, "dgl.sampling.sample_neighbors", false]], "sample_neighbors_biased() (in module dgl.sampling)": [[567, "dgl.sampling.sample_neighbors_biased", false]], "sample_subgraphs() (dgl.graphbolt.insubgraphsampler method)": [[302, "dgl.graphbolt.InSubgraphSampler.sample_subgraphs", false]], "sample_subgraphs() (dgl.graphbolt.subgraphsampler method)": [[315, "dgl.graphbolt.SubgraphSampler.sample_subgraphs", false]], "sampled_csc (dgl.graphbolt.sampledsubgraph property)": [[312, "dgl.graphbolt.SampledSubgraph.sampled_csc", false]], "sampled_csc (dgl.graphbolt.sampledsubgraphimpl attribute)": [[313, "dgl.graphbolt.SampledSubgraphImpl.sampled_csc", false]], "sampled_subgraphs (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.sampled_subgraphs", false]], "sampledsubgraph (class in dgl.graphbolt)": [[312, "dgl.graphbolt.SampledSubgraph", false]], "sampledsubgraphimpl (class in dgl.graphbolt)": [[313, "dgl.graphbolt.SampledSubgraphImpl", false]], "sampler (class in dgl.dataloading)": [[218, "dgl.dataloading.Sampler", false]], "sampling_stages() (dgl.graphbolt.subgraphsampler method)": [[315, "dgl.graphbolt.SubgraphSampler.sampling_stages", false]], "samplinggraph (class in dgl.graphbolt)": [[314, "dgl.graphbolt.SamplingGraph", false]], "save() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.save", false]], "save() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.save", false]], "save_dir (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_dir", false]], "save_graphs() (in module dgl)": [[569, "dgl.save_graphs", false]], "save_info (class in dgl.data.utils)": [[206, "dgl.data.utils.save_info", false]], "save_path (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.save_path", false]], "sbmmixturedataset (class in dgl.data)": [[183, "dgl.data.SBMMixtureDataset", false]], "sddmm() (in module dgl.sparse)": [[621, "dgl.sparse.sddmm", false]], "seed (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.seed", false]], "seed() (in module dgl)": [[570, "dgl.seed", false]], "seed() (in module dgl.graphbolt)": [[333, "dgl.graphbolt.seed", false]], "seeds (dgl.graphbolt.minibatch attribute)": [[307, "dgl.graphbolt.MiniBatch.seeds", false]], "segment_mm() (in module dgl.ops)": [[504, "dgl.ops.segment_mm", false]], "segment_reduce() (in module dgl.ops)": [[505, "dgl.ops.segment_reduce", false]], "segmented_knn_graph() (in module dgl)": [[571, "dgl.segmented_knn_graph", false]], "segmentedknngraph (class in dgl.nn.pytorch.factory)": [[436, "dgl.nn.pytorch.factory.SegmentedKNNGraph", false]], "select_topk() (in module dgl.sampling)": [[568, "dgl.sampling.select_topk", false]], "send_and_recv() (dgl.dglgraph method)": [[100, "dgl.DGLGraph.send_and_recv", false]], "sequential (class in dgl.nn.mxnet.utils)": [[384, "dgl.nn.mxnet.utils.Sequential", false]], "sequential (class in dgl.nn.pytorch.utils)": [[460, "dgl.nn.pytorch.utils.Sequential", false]], "set2set (class in dgl.nn.mxnet.glob)": [[381, "dgl.nn.mxnet.glob.Set2Set", false]], "set2set (class in dgl.nn.pytorch.glob)": [[440, "dgl.nn.pytorch.glob.Set2Set", false]], "set_batch_num_edges() (dgl.dglgraph method)": [[101, "dgl.DGLGraph.set_batch_num_edges", false]], "set_batch_num_nodes() (dgl.dglgraph method)": [[102, "dgl.DGLGraph.set_batch_num_nodes", false]], "set_dst_lazy_features (class in dgl.dataloading.base)": [[222, "dgl.dataloading.base.set_dst_lazy_features", false]], "set_edge_features() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.set_edge_features", false]], "set_edge_lazy_features (class in dgl.dataloading.base)": [[223, "dgl.dataloading.base.set_edge_lazy_features", false]], "set_node_features() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.set_node_features", false]], "set_node_lazy_features (class in dgl.dataloading.base)": [[224, "dgl.dataloading.base.set_node_lazy_features", false]], "set_src_lazy_features (class in dgl.dataloading.base)": [[225, "dgl.dataloading.base.set_src_lazy_features", false]], "settransformerdecoder (class in dgl.nn.pytorch.glob)": [[441, "dgl.nn.pytorch.glob.SetTransformerDecoder", false]], "settransformerencoder (class in dgl.nn.pytorch.glob)": [[442, "dgl.nn.pytorch.glob.SetTransformerEncoder", false]], "sgconv (class in dgl.nn.mxnet.conv)": [[376, "dgl.nn.mxnet.conv.SGConv", false]], "sgconv (class in dgl.nn.pytorch.conv)": [[424, "dgl.nn.pytorch.conv.SGConv", false]], "sgconv (class in dgl.nn.tensorflow.conv)": [[469, "dgl.nn.tensorflow.conv.SGConv", false]], "shadowkhopsampler (class in dgl.dataloading)": [[219, "dgl.dataloading.ShaDowKHopSampler", false]], "shape (dgl.distributed.disttensor property)": [[4, "dgl.distributed.DistTensor.shape", false]], "shape (dgl.sparse.sparsematrix property)": [[598, "dgl.sparse.SparseMatrix.shape", false]], "shared_memory() (dgl.distributed.graphpartitionbook method)": [[4, "dgl.distributed.GraphPartitionBook.shared_memory", false]], "shared_tensor() (in module dgl.multiprocessing.pytorch)": [[358, "dgl.multiprocessing.pytorch.shared_tensor", false]], "shortest_dist() (in module dgl)": [[572, "dgl.shortest_dist", false]], "signdiffusion (class in dgl.transforms)": [[670, "dgl.transforms.SIGNDiffusion", false]], "size() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.size", false]], "size() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.size", false]], "size() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.size", false]], "size() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.size", false]], "size() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.size", false]], "size() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.size", false]], "slice_batch() (in module dgl)": [[573, "dgl.slice_batch", false]], "smax() (dgl.sparse.sparsematrix method)": [[599, "dgl.sparse.SparseMatrix.smax", false]], "smean() (dgl.sparse.sparsematrix method)": [[600, "dgl.sparse.SparseMatrix.smean", false]], "smin() (dgl.sparse.sparsematrix method)": [[601, "dgl.sparse.SparseMatrix.smin", false]], "softmax() (dgl.sparse.sparsematrix method)": [[602, "dgl.sparse.SparseMatrix.softmax", false]], "softmax() (in module dgl.sparse)": [[622, "dgl.sparse.softmax", false]], "softmax_edges() (in module dgl)": [[574, "dgl.softmax_edges", false]], "softmax_nodes() (in module dgl)": [[575, "dgl.softmax_nodes", false]], "sort_csc_by_tag() (in module dgl)": [[576, "dgl.sort_csc_by_tag", false]], "sort_csr_by_tag() (in module dgl)": [[577, "dgl.sort_csr_by_tag", false]], "sortpooling (class in dgl.nn.mxnet.glob)": [[382, "dgl.nn.mxnet.glob.SortPooling", false]], "sortpooling (class in dgl.nn.pytorch.glob)": [[443, "dgl.nn.pytorch.glob.SortPooling", false]], "sortpooling (class in dgl.nn.tensorflow.glob)": [[474, "dgl.nn.tensorflow.glob.SortPooling", false]], "sp_add_v() (in module dgl.sparse)": [[623, "dgl.sparse.sp_add_v", false]], "sp_broadcast_v() (in module dgl.sparse)": [[624, "dgl.sparse.sp_broadcast_v", false]], "sp_div_v() (in module dgl.sparse)": [[625, "dgl.sparse.sp_div_v", false]], "sp_mul_v() (in module dgl.sparse)": [[626, "dgl.sparse.sp_mul_v", false]], "sp_sub_v() (in module dgl.sparse)": [[627, "dgl.sparse.sp_sub_v", false]], "sparseadagrad (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdagrad", false]], "sparseadagrad (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdagrad", false]], "sparseadam (class in dgl.distributed.optim)": [[4, "dgl.distributed.optim.SparseAdam", false]], "sparseadam (class in dgl.optim.pytorch)": [[10, "dgl.optim.pytorch.SparseAdam", false]], "sparsematrix (class in dgl.sparse)": [[12, "dgl.sparse.SparseMatrix", false]], "spatialencoder (class in dgl.nn.pytorch.gt)": [[452, "dgl.nn.pytorch.gt.SpatialEncoder", false]], "spatialencoder3d (class in dgl.nn.pytorch.gt)": [[453, "dgl.nn.pytorch.gt.SpatialEncoder3d", false]], "split_dataset (class in dgl.data.utils)": [[207, "dgl.data.utils.split_dataset", false]], "spmatrix() (in module dgl.sparse)": [[628, "dgl.sparse.spmatrix", false]], "spmm() (in module dgl.sparse)": [[629, "dgl.sparse.spmm", false]], "spspmm() (in module dgl.sparse)": [[630, "dgl.sparse.spspmm", false]], "squirreldataset (class in dgl.data)": [[185, "dgl.data.SquirrelDataset", false]], "src (dgl.udf.edgebatch property)": [[678, "dgl.udf.EdgeBatch.src", false]], "srcdata (dgl.dglgraph property)": [[103, "dgl.DGLGraph.srcdata", false]], "srcnodes (dgl.dglgraph property)": [[104, "dgl.DGLGraph.srcnodes", false]], "srctypes (dgl.dglgraph property)": [[105, "dgl.DGLGraph.srctypes", false]], "sstdataset (class in dgl.data)": [[184, "dgl.data.SSTDataset", false]], "start_time (dgl.data.gdeltdataset attribute)": [[164, "dgl.data.GDELTDataset.start_time", false]], "step() (dgl.distributed.optim.sparseadagrad method)": [[4, "dgl.distributed.optim.SparseAdagrad.step", false]], "step() (dgl.distributed.optim.sparseadam method)": [[4, "dgl.distributed.optim.SparseAdam.step", false]], "sub() (in module dgl.sparse)": [[631, "dgl.sparse.sub", false]], "subgraph() (dgl.dglgraph method)": [[106, "dgl.DGLGraph.subgraph", false]], "subgraphsampler (class in dgl.graphbolt)": [[315, "dgl.graphbolt.SubgraphSampler", false]], "subgraphx (class in dgl.nn.pytorch.explain)": [[433, "dgl.nn.pytorch.explain.SubgraphX", false]], "subset (class in dgl.data.utils)": [[196, "dgl.data.utils.Subset", false]], "successors() (dgl.dglgraph method)": [[107, "dgl.DGLGraph.successors", false]], "sum() (dgl.sparse.sparsematrix method)": [[603, "dgl.sparse.SparseMatrix.sum", false]], "sum() (in module dgl.function)": [[266, "dgl.function.sum", false]], "sum_edges() (in module dgl)": [[633, "dgl.sum_edges", false]], "sum_nodes() (in module dgl)": [[634, "dgl.sum_nodes", false]], "sumpooling (class in dgl.nn.mxnet.glob)": [[383, "dgl.nn.mxnet.glob.SumPooling", false]], "sumpooling (class in dgl.nn.pytorch.glob)": [[444, "dgl.nn.pytorch.glob.SumPooling", false]], "sumpooling (class in dgl.nn.tensorflow.glob)": [[475, "dgl.nn.tensorflow.glob.SumPooling", false]], "svd_pe() (in module dgl)": [[635, "dgl.svd_pe", false]], "svdpe (class in dgl.transforms)": [[671, "dgl.transforms.SVDPE", false]], "t (dgl.sparse.sparsematrix property)": [[578, "dgl.sparse.SparseMatrix.T", false]], "t() (dgl.sparse.sparsematrix method)": [[604, "dgl.sparse.SparseMatrix.t", false]], "tagconv (class in dgl.nn.mxnet.conv)": [[377, "dgl.nn.mxnet.conv.TAGConv", false]], "tagconv (class in dgl.nn.pytorch.conv)": [[425, "dgl.nn.pytorch.conv.TAGConv", false]], "task (class in dgl.graphbolt)": [[316, "dgl.graphbolt.Task", false]], "tasks (dgl.graphbolt.dataset property)": [[293, "dgl.graphbolt.Dataset.tasks", false]], "tasks (dgl.graphbolt.legacydataset property)": [[306, "dgl.graphbolt.LegacyDataset.tasks", false]], "tasks (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.tasks", false]], "temporal_sample_layer_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_layer_neighbors", false]], "temporal_sample_neighbors() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.temporal_sample_neighbors", false]], "temporallayerneighborsampler (class in dgl.graphbolt)": [[317, "dgl.graphbolt.TemporalLayerNeighborSampler", false]], "temporalneighborsampler (class in dgl.graphbolt)": [[318, "dgl.graphbolt.TemporalNeighborSampler", false]], "test_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.test_edges", false]], "test_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.test_idx", false]], "test_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.test_idx", false]], "test_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.test_mask", false]], "test_set (dgl.graphbolt.task property)": [[316, "dgl.graphbolt.Task.test_set", false]], "texasdataset (class in dgl.data)": [[187, "dgl.data.TexasDataset", false]], "to() (dgl.dglgraph method)": [[108, "dgl.DGLGraph.to", false]], "to() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.to", false]], "to() (dgl.graphbolt.fusedcscsamplinggraph method)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.to", false]], "to() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.to", false]], "to() (dgl.graphbolt.sampledsubgraph method)": [[312, "dgl.graphbolt.SampledSubgraph.to", false]], "to() (dgl.graphbolt.samplinggraph method)": [[314, "dgl.graphbolt.SamplingGraph.to", false]], "to() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.to", false]], "to() (dgl.graphbolt.torchbasedfeaturestore method)": [[320, "dgl.graphbolt.TorchBasedFeatureStore.to", false]], "to() (dgl.sparse.sparsematrix method)": [[605, "dgl.sparse.SparseMatrix.to", false]], "to_bidirected() (in module dgl)": [[636, "dgl.to_bidirected", false]], "to_block() (in module dgl)": [[637, "dgl.to_block", false]], "to_canonical_etype() (dgl.dglgraph method)": [[109, "dgl.DGLGraph.to_canonical_etype", false]], "to_cugraph() (dgl.dglgraph method)": [[110, "dgl.DGLGraph.to_cugraph", false]], "to_cugraph() (in module dgl)": [[638, "dgl.to_cugraph", false]], "to_dense() (dgl.sparse.sparsematrix method)": [[606, "dgl.sparse.SparseMatrix.to_dense", false]], "to_double() (in module dgl)": [[639, "dgl.to_double", false]], "to_float() (in module dgl)": [[640, "dgl.to_float", false]], "to_half() (in module dgl)": [[641, "dgl.to_half", false]], "to_heterogeneous() (in module dgl)": [[642, "dgl.to_heterogeneous", false]], "to_homogeneous() (in module dgl)": [[643, "dgl.to_homogeneous", false]], "to_local() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_local", false]], "to_networkx() (in module dgl)": [[644, "dgl.to_networkx", false]], "to_partid() (dgl.distributed.partitionpolicy method)": [[4, "dgl.distributed.PartitionPolicy.to_partid", false]], "to_pyg_data() (dgl.graphbolt.minibatch method)": [[307, "dgl.graphbolt.MiniBatch.to_pyg_data", false]], "to_simple() (dgl.dglgraph method)": [[111, "dgl.DGLGraph.to_simple", false]], "to_simple() (in module dgl)": [[645, "dgl.to_simple", false]], "to_simple_graph() (in module dgl)": [[646, "dgl.to_simple_graph", false]], "tolevi (class in dgl.transforms)": [[672, "dgl.transforms.ToLevi", false]], "tolokersdataset (class in dgl.data)": [[188, "dgl.data.TolokersDataset", false]], "topk_edges() (in module dgl)": [[647, "dgl.topk_edges", false]], "topk_nodes() (in module dgl)": [[648, "dgl.topk_nodes", false]], "topological_nodes_generator() (in module dgl)": [[649, "dgl.topological_nodes_generator", false]], "torchbasedfeature (class in dgl.graphbolt)": [[319, "dgl.graphbolt.TorchBasedFeature", false]], "torchbasedfeaturestore (class in dgl.graphbolt)": [[320, "dgl.graphbolt.TorchBasedFeatureStore", false]], "tosimple (class in dgl.transforms)": [[673, "dgl.transforms.ToSimple", false]], "total_num_edges (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_edges", false]], "total_num_nodes (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.total_num_nodes", false]], "train_graph (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.train_graph", false]], "train_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.train_idx", false]], "train_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.train_idx", false]], "train_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.train_mask", false]], "train_set (dgl.graphbolt.task property)": [[316, "dgl.graphbolt.Task.train_set", false]], "train_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.train_size", false]], "train_step() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[430, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step", false]], "train_step() (dgl.nn.pytorch.explain.pgexplainer method)": [[432, "dgl.nn.pytorch.explain.PGExplainer.train_step", false]], "train_step_node() (dgl.nn.pytorch.explain.heteropgexplainer method)": [[430, "dgl.nn.pytorch.explain.HeteroPGExplainer.train_step_node", false]], "train_step_node() (dgl.nn.pytorch.explain.pgexplainer method)": [[432, "dgl.nn.pytorch.explain.PGExplainer.train_step_node", false]], "transe (class in dgl.nn.pytorch.link)": [[455, "dgl.nn.pytorch.link.TransE", false]], "transpose() (dgl.sparse.sparsematrix method)": [[607, "dgl.sparse.SparseMatrix.transpose", false]], "transr (class in dgl.nn.pytorch.link)": [[456, "dgl.nn.pytorch.link.TransR", false]], "treecycledataset (class in dgl.data)": [[189, "dgl.data.TreeCycleDataset", false]], "treegriddataset (class in dgl.data)": [[190, "dgl.data.TreeGridDataset", false]], "tudataset (class in dgl.data)": [[186, "dgl.data.TUDataset", false]], "twirlsconv (class in dgl.nn.pytorch.conv)": [[426, "dgl.nn.pytorch.conv.TWIRLSConv", false]], "twirlsunfoldingandattention (class in dgl.nn.pytorch.conv)": [[427, "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention", false]], "type_per_edge (dgl.graphbolt.fusedcscsamplinggraph property)": [[299, "dgl.graphbolt.FusedCSCSamplingGraph.type_per_edge", false]], "typedlinear (class in dgl.nn.pytorch)": [[390, "dgl.nn.pytorch.TypedLinear", false]], "u_add_e() (in module dgl.function)": [[267, "dgl.function.u_add_e", false]], "u_add_e() (in module dgl.ops)": [[506, "dgl.ops.u_add_e", false]], "u_add_e_max() (in module dgl.ops)": [[507, "dgl.ops.u_add_e_max", false]], "u_add_e_mean() (in module dgl.ops)": [[508, "dgl.ops.u_add_e_mean", false]], "u_add_e_min() (in module dgl.ops)": [[509, "dgl.ops.u_add_e_min", false]], "u_add_e_sum() (in module dgl.ops)": [[510, "dgl.ops.u_add_e_sum", false]], "u_add_v() (in module dgl.function)": [[268, "dgl.function.u_add_v", false]], "u_add_v() (in module dgl.ops)": [[511, "dgl.ops.u_add_v", false]], "u_div_e() (in module dgl.function)": [[269, "dgl.function.u_div_e", false]], "u_div_e() (in module dgl.ops)": [[512, "dgl.ops.u_div_e", false]], "u_div_e_max() (in module dgl.ops)": [[513, "dgl.ops.u_div_e_max", false]], "u_div_e_mean() (in module dgl.ops)": [[514, "dgl.ops.u_div_e_mean", false]], "u_div_e_min() (in module dgl.ops)": [[515, "dgl.ops.u_div_e_min", false]], "u_div_e_sum() (in module dgl.ops)": [[516, "dgl.ops.u_div_e_sum", false]], "u_div_v() (in module dgl.function)": [[270, "dgl.function.u_div_v", false]], "u_div_v() (in module dgl.ops)": [[517, "dgl.ops.u_div_v", false]], "u_dot_e() (in module dgl.function)": [[271, "dgl.function.u_dot_e", false]], "u_dot_e() (in module dgl.ops)": [[518, "dgl.ops.u_dot_e", false]], "u_dot_v() (in module dgl.function)": [[272, "dgl.function.u_dot_v", false]], "u_dot_v() (in module dgl.ops)": [[519, "dgl.ops.u_dot_v", false]], "u_mul_e() (in module dgl.function)": [[273, "dgl.function.u_mul_e", false]], "u_mul_e() (in module dgl.ops)": [[520, "dgl.ops.u_mul_e", false]], "u_mul_e_max() (in module dgl.ops)": [[521, "dgl.ops.u_mul_e_max", false]], "u_mul_e_mean() (in module dgl.ops)": [[522, "dgl.ops.u_mul_e_mean", false]], "u_mul_e_min() (in module dgl.ops)": [[523, "dgl.ops.u_mul_e_min", false]], "u_mul_e_sum() (in module dgl.ops)": [[524, "dgl.ops.u_mul_e_sum", false]], "u_mul_v() (in module dgl.function)": [[274, "dgl.function.u_mul_v", false]], "u_mul_v() (in module dgl.ops)": [[525, "dgl.ops.u_mul_v", false]], "u_sub_e() (in module dgl.function)": [[275, "dgl.function.u_sub_e", false]], "u_sub_e() (in module dgl.ops)": [[526, "dgl.ops.u_sub_e", false]], "u_sub_e_max() (in module dgl.ops)": [[527, "dgl.ops.u_sub_e_max", false]], "u_sub_e_mean() (in module dgl.ops)": [[528, "dgl.ops.u_sub_e_mean", false]], "u_sub_e_min() (in module dgl.ops)": [[529, "dgl.ops.u_sub_e_min", false]], "u_sub_e_sum() (in module dgl.ops)": [[530, "dgl.ops.u_sub_e_sum", false]], "u_sub_v() (in module dgl.function)": [[276, "dgl.function.u_sub_v", false]], "u_sub_v() (in module dgl.ops)": [[531, "dgl.ops.u_sub_v", false]], "unbatch() (in module dgl)": [[683, "dgl.unbatch", false]], "uniform (in module dgl.dataloading.negative_sampler)": [[228, "dgl.dataloading.negative_sampler.Uniform", false]], "uniformnegativesampler (class in dgl.graphbolt)": [[321, "dgl.graphbolt.UniformNegativeSampler", false]], "unique_and_compact() (in module dgl.graphbolt)": [[334, "dgl.graphbolt.unique_and_compact", false]], "unique_and_compact_csc_formats() (in module dgl.graphbolt)": [[335, "dgl.graphbolt.unique_and_compact_csc_formats", false]], "unpin_memory_() (dgl.dglgraph method)": [[112, "dgl.DGLGraph.unpin_memory_", false]], "update() (dgl.graphbolt.cpucachedfeature method)": [[290, "dgl.graphbolt.CPUCachedFeature.update", false]], "update() (dgl.graphbolt.diskbasedfeature method)": [[294, "dgl.graphbolt.DiskBasedFeature.update", false]], "update() (dgl.graphbolt.feature method)": [[296, "dgl.graphbolt.Feature.update", false]], "update() (dgl.graphbolt.featurestore method)": [[298, "dgl.graphbolt.FeatureStore.update", false]], "update() (dgl.graphbolt.gpucachedfeature method)": [[300, "dgl.graphbolt.GPUCachedFeature.update", false]], "update() (dgl.graphbolt.torchbasedfeature method)": [[319, "dgl.graphbolt.TorchBasedFeature.update", false]], "update_all() (dgl.dglgraph method)": [[113, "dgl.DGLGraph.update_all", false]], "url (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.url", false]], "use_libxsmm() (in module dgl)": [[684, "dgl.use_libxsmm", false]], "v_add_e() (in module dgl.function)": [[277, "dgl.function.v_add_e", false]], "v_add_e() (in module dgl.ops)": [[532, "dgl.ops.v_add_e", false]], "v_add_u() (in module dgl.function)": [[278, "dgl.function.v_add_u", false]], "v_add_u() (in module dgl.ops)": [[533, "dgl.ops.v_add_u", false]], "v_div_e() (in module dgl.function)": [[279, "dgl.function.v_div_e", false]], "v_div_e() (in module dgl.ops)": [[534, "dgl.ops.v_div_e", false]], "v_div_u() (in module dgl.function)": [[280, "dgl.function.v_div_u", false]], "v_div_u() (in module dgl.ops)": [[535, "dgl.ops.v_div_u", false]], "v_dot_e() (in module dgl.function)": [[281, "dgl.function.v_dot_e", false]], "v_dot_e() (in module dgl.ops)": [[536, "dgl.ops.v_dot_e", false]], "v_dot_u() (in module dgl.function)": [[282, "dgl.function.v_dot_u", false]], "v_dot_u() (in module dgl.ops)": [[537, "dgl.ops.v_dot_u", false]], "v_mul_e() (in module dgl.function)": [[283, "dgl.function.v_mul_e", false]], "v_mul_e() (in module dgl.ops)": [[538, "dgl.ops.v_mul_e", false]], "v_mul_u() (in module dgl.function)": [[284, "dgl.function.v_mul_u", false]], "v_mul_u() (in module dgl.ops)": [[539, "dgl.ops.v_mul_u", false]], "v_sub_e() (in module dgl.function)": [[285, "dgl.function.v_sub_e", false]], "v_sub_e() (in module dgl.ops)": [[540, "dgl.ops.v_sub_e", false]], "v_sub_u() (in module dgl.function)": [[286, "dgl.function.v_sub_u", false]], "v_sub_u() (in module dgl.ops)": [[541, "dgl.ops.v_sub_u", false]], "val (dgl.sparse.sparsematrix property)": [[608, "dgl.sparse.SparseMatrix.val", false]], "val_edges (dgl.data.aslinkpreddataset attribute)": [[139, "dgl.data.AsLinkPredDataset.val_edges", false]], "val_idx (dgl.data.asgraphpreddataset attribute)": [[138, "dgl.data.AsGraphPredDataset.val_idx", false]], "val_idx (dgl.data.asnodepreddataset attribute)": [[140, "dgl.data.AsNodePredDataset.val_idx", false]], "val_like() (in module dgl.sparse)": [[632, "dgl.sparse.val_like", false]], "val_mask (dgl.data.fakenewsdataset attribute)": [[159, "dgl.data.FakeNewsDataset.val_mask", false]], "val_size (dgl.data.frauddataset attribute)": [[162, "dgl.data.FraudDataset.val_size", false]], "validation_set (dgl.graphbolt.task property)": [[316, "dgl.graphbolt.Task.validation_set", false]], "verbose (dgl.data.dgldataset attribute)": [[156, "dgl.data.DGLDataset.verbose", false]], "vocab (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab", false]], "vocab_size (dgl.data.sstdataset attribute)": [[184, "dgl.data.SSTDataset.vocab_size", false]], "weight (dgl.nn.pytorch.conv.graphconv attribute)": [[417, "dgl.nn.pytorch.conv.GraphConv.weight", false]], "weightandsum (class in dgl.nn.pytorch.glob)": [[445, "dgl.nn.pytorch.glob.WeightAndSum", false]], "weightbasis (class in dgl.nn.pytorch.utils)": [[461, "dgl.nn.pytorch.utils.WeightBasis", false]], "wikicsdataset (class in dgl.data)": [[192, "dgl.data.WikiCSDataset", false]], "wisconsindataset (class in dgl.data)": [[193, "dgl.data.WisconsinDataset", false]], "wn18dataset (class in dgl.data)": [[191, "dgl.data.WN18Dataset", false]], "yaml_data (dgl.graphbolt.ondiskdataset property)": [[311, "dgl.graphbolt.OnDiskDataset.yaml_data", false]], "yelpdataset (class in dgl.data)": [[194, "dgl.data.YelpDataset", false]], "zincdataset (class in dgl.data)": [[195, "dgl.data.ZINCDataset", false]]}, "objects": {"": [[0, 0, 0, "-", "dgl"]], "dgl": [[1, 1, 1, "", "DGLGraph"], [114, 4, 1, "", "add_edges"], [115, 4, 1, "", "add_nodes"], [116, 4, 1, "", "add_reverse_edges"], [117, 4, 1, "", "add_self_loop"], [118, 4, 1, "", "adj_product_graph"], [119, 4, 1, "", "adj_sum_graph"], [120, 4, 1, "", "adjusted_homophily"], [121, 4, 1, "", "apply_each"], [122, 4, 1, "", "batch"], [123, 4, 1, "", "bfs_edges_generator"], [124, 4, 1, "", "bfs_nodes_generator"], [125, 4, 1, "", "bipartite_from_networkx"], [126, 4, 1, "", "bipartite_from_scipy"], [127, 4, 1, "", "block_to_graph"], [128, 4, 1, "", "broadcast_edges"], [129, 4, 1, "", "broadcast_nodes"], [130, 4, 1, "", "compact_graphs"], [131, 4, 1, "", "create_block"], [2, 0, 0, "-", "data"], [229, 4, 1, "", "dfs_edges_generator"], [230, 4, 1, "", "dfs_labeled_edges_generator"], [243, 4, 1, "", "double_radius_node_labeling"], [244, 4, 1, "", "edge_homophily"], [245, 4, 1, "", "edge_label_informativeness"], [246, 4, 1, "", "edge_subgraph"], [247, 4, 1, "", "edge_type_subgraph"], [248, 4, 1, "", "from_cugraph"], [249, 4, 1, "", "from_networkx"], [250, 4, 1, "", "from_scipy"], [6, 0, 0, "-", "geometry"], [287, 4, 1, "", "graph"], [336, 4, 1, "", "heterograph"], [337, 4, 1, "", "in_subgraph"], [338, 4, 1, "", "is_libxsmm_enabled"], [339, 4, 1, "", "khop_adj"], [340, 4, 1, "", "khop_graph"], [341, 4, 1, "", "khop_in_subgraph"], [342, 4, 1, "", "khop_out_subgraph"], [343, 4, 1, "", "knn_graph"], [344, 4, 1, "", "lap_pe"], [345, 4, 1, "", "laplacian_lambda_max"], [346, 4, 1, "", "line_graph"], [347, 4, 1, "", "linkx_homophily"], [348, 4, 1, "", "load_graphs"], [349, 4, 1, "", "max_edges"], [350, 4, 1, "", "max_nodes"], [351, 4, 1, "", "mean_edges"], [352, 4, 1, "", "mean_nodes"], [353, 4, 1, "", "merge"], [354, 4, 1, "", "metapath_reachable_graph"], [355, 4, 1, "", "metis_partition"], [356, 4, 1, "", "metis_partition_assignment"], [476, 4, 1, "", "node_homophily"], [477, 4, 1, "", "node_label_informativeness"], [478, 4, 1, "", "node_subgraph"], [479, 4, 1, "", "node_type_subgraph"], [480, 4, 1, "", "norm_by_dst"], [10, 0, 0, "-", "optim"], [542, 4, 1, "", "out_subgraph"], [543, 4, 1, "", "partition_graph_with_halo"], [544, 4, 1, "", "prop_edges"], [545, 4, 1, "", "prop_edges_dfs"], [546, 4, 1, "", "prop_nodes"], [547, 4, 1, "", "prop_nodes_bfs"], [548, 4, 1, "", "prop_nodes_topo"], [549, 4, 1, "", "radius_graph"], [550, 4, 1, "", "rand_bipartite"], [551, 4, 1, "", "rand_graph"], [552, 4, 1, "", "random_walk_pe"], [553, 4, 1, "", "readout_edges"], [554, 4, 1, "", "readout_nodes"], [555, 4, 1, "", "remove_edges"], [556, 4, 1, "", "remove_nodes"], [557, 4, 1, "", "remove_self_loop"], [558, 4, 1, "", "reorder_graph"], [559, 4, 1, "", "reverse"], [11, 0, 0, "-", "sampling"], [569, 4, 1, "", "save_graphs"], [570, 4, 1, "", "seed"], [571, 4, 1, "", "segmented_knn_graph"], [572, 4, 1, "", "shortest_dist"], [573, 4, 1, "", "slice_batch"], [574, 4, 1, "", "softmax_edges"], [575, 4, 1, "", "softmax_nodes"], [576, 4, 1, "", "sort_csc_by_tag"], [577, 4, 1, "", "sort_csr_by_tag"], [633, 4, 1, "", "sum_edges"], [634, 4, 1, "", "sum_nodes"], [635, 4, 1, "", "svd_pe"], [636, 4, 1, "", "to_bidirected"], [637, 4, 1, "", "to_block"], [638, 4, 1, "", "to_cugraph"], [639, 4, 1, "", "to_double"], [640, 4, 1, "", "to_float"], [641, 4, 1, "", "to_half"], [642, 4, 1, "", "to_heterogeneous"], [643, 4, 1, "", "to_homogeneous"], [644, 4, 1, "", "to_networkx"], [645, 4, 1, "", "to_simple"], [646, 4, 1, "", "to_simple_graph"], [647, 4, 1, "", "topk_edges"], [648, 4, 1, "", "topk_nodes"], [649, 4, 1, "", "topological_nodes_generator"], [19, 0, 0, "-", "transforms"], [683, 4, 1, "", "unbatch"], [684, 4, 1, "", "use_libxsmm"]], "dgl.DGLGraph": [[26, 2, 1, "", "__getitem__"], [27, 2, 1, "", "add_edges"], [28, 2, 1, "", "add_nodes"], [29, 2, 1, "", "add_self_loop"], [30, 2, 1, "", "adj"], [31, 2, 1, "", "adj_external"], [32, 2, 1, "", "adj_tensors"], [33, 2, 1, "", "adjacency_matrix"], [34, 2, 1, "", "apply_edges"], [35, 2, 1, "", "apply_nodes"], [36, 2, 1, "", "batch_num_edges"], [37, 2, 1, "", "batch_num_nodes"], [38, 3, 1, "", "batch_size"], [39, 3, 1, "", "canonical_etypes"], [40, 2, 1, "", "cpu"], [41, 2, 1, "", "create_formats_"], [42, 3, 1, "", "device"], [43, 3, 1, "", "dstdata"], [44, 3, 1, "", "dstnodes"], [45, 3, 1, "", "dsttypes"], [46, 3, 1, "", "edata"], [47, 2, 1, "", "edge_attr_schemes"], [48, 2, 1, "", "edge_ids"], [49, 2, 1, "", "edge_subgraph"], [50, 2, 1, "", "edge_type_subgraph"], [51, 3, 1, "", "edges"], [52, 3, 1, "", "etypes"], [53, 2, 1, "", "filter_edges"], [54, 2, 1, "", "filter_nodes"], [55, 2, 1, "", "find_edges"], [56, 2, 1, "", "formats"], [57, 2, 1, "", "has_edges_between"], [58, 2, 1, "", "has_nodes"], [59, 3, 1, "", "idtype"], [60, 2, 1, "", "in_degrees"], [61, 2, 1, "", "in_edges"], [62, 2, 1, "", "inc"], [63, 2, 1, "", "incidence_matrix"], [64, 2, 1, "", "int"], [65, 3, 1, "", "is_homogeneous"], [66, 3, 1, "", "is_multigraph"], [67, 2, 1, "", "is_pinned"], [68, 3, 1, "", "is_unibipartite"], [69, 2, 1, "", "line_graph"], [70, 2, 1, "", "local_scope"], [71, 2, 1, "", "long"], [72, 2, 1, "", "metagraph"], [73, 2, 1, "", "multi_update_all"], [74, 3, 1, "", "ndata"], [75, 2, 1, "", "node_attr_schemes"], [76, 2, 1, "", "node_type_subgraph"], [77, 3, 1, "", "nodes"], [78, 3, 1, "", "ntypes"], [79, 2, 1, "", "num_dst_nodes"], [80, 2, 1, "", "num_edges"], [81, 2, 1, "", "num_nodes"], [82, 2, 1, "", "num_src_nodes"], [83, 2, 1, "", "number_of_dst_nodes"], [84, 2, 1, "", "number_of_edges"], [85, 2, 1, "", "number_of_nodes"], [86, 2, 1, "", "number_of_src_nodes"], [87, 2, 1, "", "out_degrees"], [88, 2, 1, "", "out_edges"], [89, 2, 1, "", "pin_memory_"], [90, 2, 1, "", "predecessors"], [91, 2, 1, "", "prop_edges"], [92, 2, 1, "", "prop_nodes"], [93, 2, 1, "", "pull"], [94, 2, 1, "", "push"], [95, 2, 1, "", "remove_edges"], [96, 2, 1, "", "remove_nodes"], [97, 2, 1, "", "remove_self_loop"], [98, 2, 1, "", "reorder_graph"], [99, 2, 1, "", "reverse"], [100, 2, 1, "", "send_and_recv"], [101, 2, 1, "", "set_batch_num_edges"], [102, 2, 1, "", "set_batch_num_nodes"], [103, 3, 1, "", "srcdata"], [104, 3, 1, "", "srcnodes"], [105, 3, 1, "", "srctypes"], [106, 2, 1, "", "subgraph"], [107, 2, 1, "", "successors"], [108, 2, 1, "", "to"], [109, 2, 1, "", "to_canonical_etype"], [110, 2, 1, "", "to_cugraph"], [111, 2, 1, "", "to_simple"], [112, 2, 1, "", "unpin_memory_"], [113, 2, 1, "", "update_all"]], "dgl.data": [[132, 1, 1, "", "AIFBDataset"], [133, 1, 1, "", "AMDataset"], [134, 1, 1, "", "ActorDataset"], [135, 1, 1, "", "AmazonCoBuyComputerDataset"], [136, 1, 1, "", "AmazonCoBuyPhotoDataset"], [137, 1, 1, "", "AmazonRatingsDataset"], [138, 1, 1, "", "AsGraphPredDataset"], [139, 1, 1, "", "AsLinkPredDataset"], [140, 1, 1, "", "AsNodePredDataset"], [141, 1, 1, "", "BA2MotifDataset"], [142, 1, 1, "", "BACommunityDataset"], [143, 1, 1, "", "BAShapeDataset"], [144, 1, 1, "", "BGSDataset"], [145, 1, 1, "", "BitcoinOTCDataset"], [146, 1, 1, "", "CIFAR10SuperPixelDataset"], [147, 1, 1, "", "CLUSTERDataset"], [148, 1, 1, "", "CSVDataset"], [149, 1, 1, "", "ChameleonDataset"], [150, 1, 1, "", "CiteseerGraphDataset"], [151, 1, 1, "", "CoauthorCSDataset"], [152, 1, 1, "", "CoauthorPhysicsDataset"], [153, 1, 1, "", "CoraFullDataset"], [154, 1, 1, "", "CoraGraphDataset"], [155, 1, 1, "", "CornellDataset"], [156, 1, 1, "", "DGLDataset"], [157, 1, 1, "", "FB15k237Dataset"], [158, 1, 1, "", "FB15kDataset"], [159, 1, 1, "", "FakeNewsDataset"], [160, 1, 1, "", "FlickrDataset"], [161, 1, 1, "", "FraudAmazonDataset"], [162, 1, 1, "", "FraudDataset"], [163, 1, 1, "", "FraudYelpDataset"], [164, 1, 1, "", "GDELTDataset"], [165, 1, 1, "", "GINDataset"], [166, 1, 1, "", "ICEWS18Dataset"], [167, 1, 1, "", "KarateClubDataset"], [168, 1, 1, "", "LegacyTUDataset"], [169, 1, 1, "", "MNISTSuperPixelDataset"], [170, 1, 1, "", "MUTAGDataset"], [171, 1, 1, "", "MinesweeperDataset"], [172, 1, 1, "", "MiniGCDataset"], [173, 1, 1, "", "MovieLensDataset"], [174, 1, 1, "", "PATTERNDataset"], [175, 1, 1, "", "PPIDataset"], [176, 1, 1, "", "PubmedGraphDataset"], [177, 1, 1, "", "QM7bDataset"], [178, 1, 1, "", "QM9Dataset"], [179, 1, 1, "", "QM9EdgeDataset"], [180, 1, 1, "", "QuestionsDataset"], [181, 1, 1, "", "RedditDataset"], [182, 1, 1, "", "RomanEmpireDataset"], [183, 1, 1, "", "SBMMixtureDataset"], [184, 1, 1, "", "SSTDataset"], [185, 1, 1, "", "SquirrelDataset"], [186, 1, 1, "", "TUDataset"], [187, 1, 1, "", "TexasDataset"], [188, 1, 1, "", "TolokersDataset"], [189, 1, 1, "", "TreeCycleDataset"], [190, 1, 1, "", "TreeGridDataset"], [191, 1, 1, "", "WN18Dataset"], [192, 1, 1, "", "WikiCSDataset"], [193, 1, 1, "", "WisconsinDataset"], [194, 1, 1, "", "YelpDataset"], [195, 1, 1, "", "ZINCDataset"]], "dgl.data.AIFBDataset": [[132, 2, 1, "", "__getitem__"], [132, 2, 1, "", "__len__"], [132, 5, 1, "", "num_classes"], [132, 5, 1, "", "predict_category"]], "dgl.data.AMDataset": [[133, 2, 1, "", "__getitem__"], [133, 2, 1, "", "__len__"], [133, 5, 1, "", "num_classes"], [133, 5, 1, "", "predict_category"]], "dgl.data.ActorDataset": [[134, 2, 1, "", "__getitem__"], [134, 2, 1, "", "__len__"], [134, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyComputerDataset": [[135, 2, 1, "", "__getitem__"], [135, 2, 1, "", "__len__"], [135, 5, 1, "", "num_classes"]], "dgl.data.AmazonCoBuyPhotoDataset": [[136, 2, 1, "", "__getitem__"], [136, 2, 1, "", "__len__"], [136, 5, 1, "", "num_classes"]], "dgl.data.AmazonRatingsDataset": [[137, 2, 1, "", "__getitem__"], [137, 2, 1, "", "__len__"], [137, 5, 1, "", "num_classes"]], "dgl.data.AsGraphPredDataset": [[138, 2, 1, "", "__getitem__"], [138, 2, 1, "", "__len__"], [138, 5, 1, "", "edge_feat_size"], [138, 5, 1, "", "node_feat_size"], [138, 5, 1, "", "num_classes"], [138, 5, 1, "", "num_tasks"], [138, 5, 1, "", "test_idx"], [138, 5, 1, "", "train_idx"], [138, 5, 1, "", "val_idx"]], "dgl.data.AsLinkPredDataset": [[139, 2, 1, "", "__getitem__"], [139, 2, 1, "", "__len__"], [139, 5, 1, "", "feat_size"], [139, 5, 1, "", "test_edges"], [139, 5, 1, "", "train_graph"], [139, 5, 1, "", "val_edges"]], "dgl.data.AsNodePredDataset": [[140, 2, 1, "", "__getitem__"], [140, 2, 1, "", "__len__"], [140, 5, 1, "", "num_classes"], [140, 5, 1, "", "test_idx"], [140, 5, 1, "", "train_idx"], [140, 5, 1, "", "val_idx"]], "dgl.data.BA2MotifDataset": [[141, 2, 1, "", "__getitem__"], [141, 2, 1, "", "__len__"], [141, 5, 1, "", "num_classes"]], "dgl.data.BACommunityDataset": [[142, 2, 1, "", "__getitem__"], [142, 2, 1, "", "__len__"], [142, 5, 1, "", "num_classes"]], "dgl.data.BAShapeDataset": [[143, 2, 1, "", "__getitem__"], [143, 2, 1, "", "__len__"], [143, 5, 1, "", "num_classes"]], "dgl.data.BGSDataset": [[144, 2, 1, "", "__getitem__"], [144, 2, 1, "", "__len__"], [144, 5, 1, "", "num_classes"], [144, 5, 1, "", "predict_category"]], "dgl.data.BitcoinOTCDataset": [[145, 2, 1, "", "__getitem__"], [145, 2, 1, "", "__len__"], [145, 5, 1, "", "graphs"], [145, 5, 1, "", "is_temporal"]], "dgl.data.CIFAR10SuperPixelDataset": [[146, 2, 1, "", "__getitem__"], [146, 2, 1, "", "__len__"]], "dgl.data.CLUSTERDataset": [[147, 2, 1, "", "__getitem__"], [147, 2, 1, "", "__len__"], [147, 5, 1, "", "num_classes"]], "dgl.data.CSVDataset": [[148, 2, 1, "", "__getitem__"], [148, 2, 1, "", "__len__"], [148, 5, 1, "", "data"], [148, 5, 1, "", "graphs"]], "dgl.data.ChameleonDataset": [[149, 2, 1, "", "__getitem__"], [149, 2, 1, "", "__len__"], [149, 5, 1, "", "num_classes"]], "dgl.data.CiteseerGraphDataset": [[150, 2, 1, "", "__getitem__"], [150, 2, 1, "", "__len__"], [150, 5, 1, "", "num_classes"]], "dgl.data.CoauthorCSDataset": [[151, 2, 1, "", "__getitem__"], [151, 2, 1, "", "__len__"], [151, 5, 1, "", "num_classes"]], "dgl.data.CoauthorPhysicsDataset": [[152, 2, 1, "", "__getitem__"], [152, 2, 1, "", "__len__"], [152, 5, 1, "", "num_classes"]], "dgl.data.CoraFullDataset": [[153, 2, 1, "", "__getitem__"], [153, 2, 1, "", "__len__"], [153, 5, 1, "", "num_classes"]], "dgl.data.CoraGraphDataset": [[154, 2, 1, "", "__getitem__"], [154, 2, 1, "", "__len__"], [154, 5, 1, "", "num_classes"]], "dgl.data.CornellDataset": [[155, 2, 1, "", "__getitem__"], [155, 2, 1, "", "__len__"], [155, 5, 1, "", "num_classes"]], "dgl.data.DGLDataset": [[156, 2, 1, "", "__getitem__"], [156, 2, 1, "", "__len__"], [156, 5, 1, "", "hash"], [156, 5, 1, "", "name"], [156, 5, 1, "", "raw_dir"], [156, 5, 1, "", "raw_path"], [156, 5, 1, "", "save_dir"], [156, 5, 1, "", "save_path"], [156, 5, 1, "", "url"], [156, 5, 1, "", "verbose"]], "dgl.data.FB15k237Dataset": [[157, 2, 1, "", "__getitem__"], [157, 2, 1, "", "__len__"], [157, 5, 1, "", "num_nodes"], [157, 5, 1, "", "num_rels"]], "dgl.data.FB15kDataset": [[158, 2, 1, "", "__getitem__"], [158, 2, 1, "", "__len__"], [158, 5, 1, "", "num_nodes"], [158, 5, 1, "", "num_rels"]], "dgl.data.FakeNewsDataset": [[159, 2, 1, "", "__getitem__"], [159, 2, 1, "", "__len__"], [159, 5, 1, "", "feature"], [159, 5, 1, "", "feature_name"], [159, 5, 1, "", "graphs"], [159, 5, 1, "", "labels"], [159, 5, 1, "", "name"], [159, 5, 1, "", "num_classes"], [159, 5, 1, "", "num_graphs"], [159, 5, 1, "", "test_mask"], [159, 5, 1, "", "train_mask"], [159, 5, 1, "", "val_mask"]], "dgl.data.FlickrDataset": [[160, 2, 1, "", "__getitem__"], [160, 2, 1, "", "__len__"], [160, 5, 1, "", "num_classes"]], "dgl.data.FraudAmazonDataset": [[161, 2, 1, "", "__getitem__"], [161, 2, 1, "", "__len__"]], "dgl.data.FraudDataset": [[162, 2, 1, "", "__getitem__"], [162, 2, 1, "", "__len__"], [162, 5, 1, "", "graph"], [162, 5, 1, "", "num_classes"], [162, 5, 1, "", "seed"], [162, 5, 1, "", "train_size"], [162, 5, 1, "", "val_size"]], "dgl.data.FraudYelpDataset": [[163, 2, 1, "", "__getitem__"], [163, 2, 1, "", "__len__"]], "dgl.data.GDELTDataset": [[164, 2, 1, "", "__getitem__"], [164, 2, 1, "", "__len__"], [164, 5, 1, "", "end_time"], [164, 5, 1, "", "is_temporal"], [164, 5, 1, "", "start_time"]], "dgl.data.GINDataset": [[165, 2, 1, "", "__getitem__"], [165, 2, 1, "", "__len__"], [165, 5, 1, "", "num_classes"]], "dgl.data.ICEWS18Dataset": [[166, 2, 1, "", "__getitem__"], [166, 2, 1, "", "__len__"], [166, 5, 1, "", "is_temporal"]], "dgl.data.KarateClubDataset": [[167, 2, 1, "", "__getitem__"], [167, 2, 1, "", "__len__"], [167, 5, 1, "", "num_classes"]], "dgl.data.LegacyTUDataset": [[168, 2, 1, "", "__getitem__"], [168, 2, 1, "", "__len__"], [168, 5, 1, "", "max_num_node"], [168, 5, 1, "", "num_classes"], [168, 5, 1, "", "num_labels"]], "dgl.data.MNISTSuperPixelDataset": [[169, 2, 1, "", "__getitem__"], [169, 2, 1, "", "__len__"]], "dgl.data.MUTAGDataset": [[170, 2, 1, "", "__getitem__"], [170, 2, 1, "", "__len__"], [170, 5, 1, "", "graph"], [170, 5, 1, "", "num_classes"], [170, 5, 1, "", "predict_category"]], "dgl.data.MinesweeperDataset": [[171, 2, 1, "", "__getitem__"], [171, 2, 1, "", "__len__"], [171, 5, 1, "", "num_classes"]], "dgl.data.MiniGCDataset": [[172, 2, 1, "", "__getitem__"], [172, 2, 1, "", "__len__"], [172, 5, 1, "", "max_num_v"], [172, 5, 1, "", "min_num_v"], [172, 5, 1, "", "num_classes"], [172, 5, 1, "", "num_graphs"]], "dgl.data.MovieLensDataset": [[173, 2, 1, "", "__getitem__"], [173, 2, 1, "", "__len__"]], "dgl.data.PATTERNDataset": [[174, 2, 1, "", "__getitem__"], [174, 2, 1, "", "__len__"], [174, 5, 1, "", "num_classes"]], "dgl.data.PPIDataset": [[175, 2, 1, "", "__getitem__"], [175, 2, 1, "", "__len__"], [175, 5, 1, "", "features"], [175, 5, 1, "", "labels"], [175, 5, 1, "", "num_labels"]], "dgl.data.PubmedGraphDataset": [[176, 2, 1, "", "__getitem__"], [176, 2, 1, "", "__len__"], [176, 5, 1, "", "num_classes"]], "dgl.data.QM7bDataset": [[177, 2, 1, "", "__getitem__"], [177, 2, 1, "", "__len__"], [177, 5, 1, "", "num_labels"], [177, 5, 1, "", "num_tasks"]], "dgl.data.QM9Dataset": [[178, 2, 1, "", "__getitem__"], [178, 2, 1, "", "__len__"], [178, 5, 1, "", "num_labels"], [178, 5, 1, "", "num_tasks"]], "dgl.data.QM9EdgeDataset": [[179, 2, 1, "", "__getitem__"], [179, 2, 1, "", "__len__"], [179, 5, 1, "", "num_labels"], [179, 5, 1, "", "num_tasks"]], "dgl.data.QuestionsDataset": [[180, 2, 1, "", "__getitem__"], [180, 2, 1, "", "__len__"], [180, 5, 1, "", "num_classes"]], "dgl.data.RedditDataset": [[181, 2, 1, "", "__getitem__"], [181, 2, 1, "", "__len__"], [181, 5, 1, "", "num_classes"]], "dgl.data.RomanEmpireDataset": [[182, 2, 1, "", "__getitem__"], [182, 2, 1, "", "__len__"], [182, 5, 1, "", "num_classes"]], "dgl.data.SBMMixtureDataset": [[183, 2, 1, "", "__getitem__"], [183, 2, 1, "", "__len__"], [183, 2, 1, "", "collate_fn"]], "dgl.data.SSTDataset": [[184, 2, 1, "", "__getitem__"], [184, 2, 1, "", "__len__"], [184, 5, 1, "", "num_classes"], [184, 5, 1, "", "pretrained_emb"], [184, 5, 1, "", "vocab"], [184, 5, 1, "", "vocab_size"]], "dgl.data.SquirrelDataset": [[185, 2, 1, "", "__getitem__"], [185, 2, 1, "", "__len__"], [185, 5, 1, "", "num_classes"]], "dgl.data.TUDataset": [[186, 2, 1, "", "__getitem__"], [186, 2, 1, "", "__len__"], [186, 5, 1, "", "max_num_node"], [186, 5, 1, "", "num_classes"], [186, 5, 1, "", "num_labels"]], "dgl.data.TexasDataset": [[187, 2, 1, "", "__getitem__"], [187, 2, 1, "", "__len__"], [187, 5, 1, "", "num_classes"]], "dgl.data.TolokersDataset": [[188, 2, 1, "", "__getitem__"], [188, 2, 1, "", "__len__"], [188, 5, 1, "", "num_classes"]], "dgl.data.TreeCycleDataset": [[189, 2, 1, "", "__getitem__"], [189, 2, 1, "", "__len__"], [189, 5, 1, "", "num_classes"]], "dgl.data.TreeGridDataset": [[190, 2, 1, "", "__getitem__"], [190, 2, 1, "", "__len__"], [190, 5, 1, "", "num_classes"]], "dgl.data.WN18Dataset": [[191, 2, 1, "", "__getitem__"], [191, 2, 1, "", "__len__"], [191, 5, 1, "", "num_nodes"], [191, 5, 1, "", "num_rels"]], "dgl.data.WikiCSDataset": [[192, 2, 1, "", "__getitem__"], [192, 2, 1, "", "__len__"], [192, 5, 1, "", "num_classes"]], "dgl.data.WisconsinDataset": [[193, 2, 1, "", "__getitem__"], [193, 2, 1, "", "__len__"], [193, 5, 1, "", "num_classes"]], "dgl.data.YelpDataset": [[194, 2, 1, "", "__getitem__"], [194, 2, 1, "", "__len__"], [194, 5, 1, "", "num_classes"]], "dgl.data.ZINCDataset": [[195, 2, 1, "", "__getitem__"], [195, 2, 1, "", "__len__"], [195, 5, 1, "", "num_atom_types"], [195, 5, 1, "", "num_bond_types"]], "dgl.data.utils": [[196, 1, 1, "", "Subset"], [197, 1, 1, "", "add_node_property_split"], [198, 1, 1, "", "add_nodepred_split"], [199, 1, 1, "", "check_sha1"], [200, 1, 1, "", "download"], [201, 1, 1, "", "extract_archive"], [202, 1, 1, "", "get_download_dir"], [203, 1, 1, "", "load_info"], [204, 1, 1, "", "load_labels"], [205, 1, 1, "", "mask_nodes_by_property"], [206, 1, 1, "", "save_info"], [207, 1, 1, "", "split_dataset"]], "dgl.data.utils.Subset": [[196, 2, 1, "", "__getitem__"], [196, 2, 1, "", "__len__"]], "dgl.dataloading": [[208, 1, 1, "", "BlockSampler"], [209, 1, 1, "", "ClusterGCNSampler"], [210, 1, 1, "", "DataLoader"], [211, 1, 1, "", "DistEdgeDataLoader"], [212, 1, 1, "", "DistNodeDataLoader"], [213, 1, 1, "", "GraphDataLoader"], [214, 1, 1, "", "LaborSampler"], [215, 1, 1, "", "MultiLayerFullNeighborSampler"], [216, 1, 1, "", "NeighborSampler"], [217, 1, 1, "", "SAINTSampler"], [218, 1, 1, "", "Sampler"], [219, 1, 1, "", "ShaDowKHopSampler"], [220, 4, 1, "", "as_edge_prediction_sampler"]], "dgl.dataloading.BlockSampler": [[208, 2, 1, "", "__init__"]], "dgl.dataloading.base": [[221, 1, 1, "", "LazyFeature"], [222, 1, 1, "", "set_dst_lazy_features"], [223, 1, 1, "", "set_edge_lazy_features"], [224, 1, 1, "", "set_node_lazy_features"], [225, 1, 1, "", "set_src_lazy_features"]], "dgl.dataloading.negative_sampler": [[226, 1, 1, "", "GlobalUniform"], [227, 1, 1, "", "PerSourceUniform"], [228, 5, 1, "", "Uniform"]], "dgl.distributed": [[4, 1, 1, "", "DistDataLoader"], [4, 1, 1, "", "DistEmbedding"], [4, 1, 1, "", "DistGraph"], [4, 1, 1, "", "DistTensor"], [4, 1, 1, "", "GraphPartitionBook"], [4, 1, 1, "", "PartitionPolicy"], [231, 4, 1, "", "dgl_partition_to_graphbolt"], [232, 4, 1, "", "edge_split"], [233, 4, 1, "", "find_edges"], [234, 4, 1, "", "in_subgraph"], [235, 4, 1, "", "initialize"], [236, 4, 1, "", "load_partition"], [237, 4, 1, "", "load_partition_book"], [238, 4, 1, "", "load_partition_feats"], [239, 4, 1, "", "node_split"], [240, 4, 1, "", "partition_graph"], [241, 4, 1, "", "sample_etype_neighbors"], [242, 4, 1, "", "sample_neighbors"]], "dgl.distributed.DistGraph": [[4, 2, 1, "", "barrier"], [4, 3, 1, "", "device"], [4, 3, 1, "", "edata"], [4, 2, 1, "", "edge_attr_schemes"], [4, 3, 1, "", "edges"], [4, 3, 1, "", "etypes"], [4, 2, 1, "", "find_edges"], [4, 2, 1, "", "get_edge_partition_policy"], [4, 2, 1, "", "get_etype_id"], [4, 2, 1, "", "get_node_partition_policy"], [4, 2, 1, "", "get_ntype_id"], [4, 2, 1, "", "get_partition_book"], [4, 3, 1, "", "idtype"], [4, 2, 1, "", "in_degrees"], [4, 3, 1, "", "local_partition"], [4, 3, 1, "", "ndata"], [4, 2, 1, "", "node_attr_schemes"], [4, 3, 1, "", "nodes"], [4, 3, 1, "", "ntypes"], [4, 2, 1, "", "num_edges"], [4, 2, 1, "", "num_nodes"], [4, 2, 1, "", "number_of_edges"], [4, 2, 1, "", "number_of_nodes"], [4, 2, 1, "", "out_degrees"], [4, 2, 1, "", "rank"]], "dgl.distributed.DistTensor": [[4, 3, 1, "", "dtype"], [4, 3, 1, "", "name"], [4, 3, 1, "", "part_policy"], [4, 3, 1, "", "shape"]], "dgl.distributed.GraphPartitionBook": [[4, 3, 1, "", "canonical_etypes"], [4, 2, 1, "", "eid2localeid"], [4, 2, 1, "", "eid2partid"], [4, 2, 1, "", "map_to_homo_eid"], [4, 2, 1, "", "map_to_homo_nid"], [4, 2, 1, "", "map_to_per_etype"], [4, 2, 1, "", "map_to_per_ntype"], [4, 2, 1, "", "metadata"], [4, 2, 1, "", "nid2localnid"], [4, 2, 1, "", "nid2partid"], [4, 2, 1, "", "num_partitions"], [4, 3, 1, "", "partid"], [4, 2, 1, "", "partid2eids"], [4, 2, 1, "", "partid2nids"], [4, 2, 1, "", "shared_memory"]], "dgl.distributed.PartitionPolicy": [[4, 2, 1, "", "get_part_size"], [4, 2, 1, "", "get_size"], [4, 3, 1, "", "part_id"], [4, 3, 1, "", "partition_book"], [4, 3, 1, "", "policy_str"], [4, 2, 1, "", "to_local"], [4, 2, 1, "", "to_partid"]], "dgl.distributed.optim": [[4, 1, 1, "", "SparseAdagrad"], [4, 1, 1, "", "SparseAdam"]], "dgl.distributed.optim.SparseAdagrad": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.distributed.optim.SparseAdam": [[4, 2, 1, "", "load"], [4, 2, 1, "", "save"], [4, 2, 1, "", "step"]], "dgl.function": [[251, 4, 1, "", "copy_e"], [252, 4, 1, "", "copy_u"], [253, 4, 1, "", "e_add_u"], [254, 4, 1, "", "e_add_v"], [255, 4, 1, "", "e_div_u"], [256, 4, 1, "", "e_div_v"], [257, 4, 1, "", "e_dot_u"], [258, 4, 1, "", "e_dot_v"], [259, 4, 1, "", "e_mul_u"], [260, 4, 1, "", "e_mul_v"], [261, 4, 1, "", "e_sub_u"], [262, 4, 1, "", "e_sub_v"], [263, 4, 1, "", "max"], [264, 4, 1, "", "mean"], [265, 4, 1, "", "min"], [266, 4, 1, "", "sum"], [267, 4, 1, "", "u_add_e"], [268, 4, 1, "", "u_add_v"], [269, 4, 1, "", "u_div_e"], [270, 4, 1, "", "u_div_v"], [271, 4, 1, "", "u_dot_e"], [272, 4, 1, "", "u_dot_v"], [273, 4, 1, "", "u_mul_e"], [274, 4, 1, "", "u_mul_v"], [275, 4, 1, "", "u_sub_e"], [276, 4, 1, "", "u_sub_v"], [277, 4, 1, "", "v_add_e"], [278, 4, 1, "", "v_add_u"], [279, 4, 1, "", "v_div_e"], [280, 4, 1, "", "v_div_u"], [281, 4, 1, "", "v_dot_e"], [282, 4, 1, "", "v_dot_u"], [283, 4, 1, "", "v_mul_e"], [284, 4, 1, "", "v_mul_u"], [285, 4, 1, "", "v_sub_e"], [286, 4, 1, "", "v_sub_u"]], "dgl.geometry": [[6, 1, 1, "", "farthest_point_sampler"], [6, 1, 1, "", "neighbor_matching"]], "dgl.graphbolt": [[288, 1, 1, "", "BasicFeatureStore"], [289, 1, 1, "", "BuiltinDataset"], [290, 1, 1, "", "CPUCachedFeature"], [291, 1, 1, "", "CopyTo"], [292, 1, 1, "", "DataLoader"], [293, 1, 1, "", "Dataset"], [294, 1, 1, "", "DiskBasedFeature"], [295, 1, 1, "", "DistributedItemSampler"], [296, 1, 1, "", "Feature"], [297, 1, 1, "", "FeatureFetcher"], [298, 1, 1, "", "FeatureStore"], [299, 1, 1, "", "FusedCSCSamplingGraph"], [300, 1, 1, "", "GPUCachedFeature"], [301, 1, 1, "", "HeteroItemSet"], [302, 1, 1, "", "InSubgraphSampler"], [303, 1, 1, "", "ItemSampler"], [304, 1, 1, "", "ItemSet"], [305, 1, 1, "", "LayerNeighborSampler"], [306, 1, 1, "", "LegacyDataset"], [307, 1, 1, "", "MiniBatch"], [308, 1, 1, "", "MiniBatchTransformer"], [309, 1, 1, "", "NegativeSampler"], [310, 1, 1, "", "NeighborSampler"], [311, 1, 1, "", "OnDiskDataset"], [312, 1, 1, "", "SampledSubgraph"], [313, 1, 1, "", "SampledSubgraphImpl"], [314, 1, 1, "", "SamplingGraph"], [315, 1, 1, "", "SubgraphSampler"], [316, 1, 1, "", "Task"], [317, 1, 1, "", "TemporalLayerNeighborSampler"], [318, 1, 1, "", "TemporalNeighborSampler"], [319, 1, 1, "", "TorchBasedFeature"], [320, 1, 1, "", "TorchBasedFeatureStore"], [321, 1, 1, "", "UniformNegativeSampler"], [322, 4, 1, "", "add_reverse_edges"], [323, 4, 1, "", "compact_csc_format"], [324, 4, 1, "", "etype_str_to_tuple"], [325, 4, 1, "", "etype_tuple_to_str"], [326, 4, 1, "", "exclude_seed_edges"], [327, 4, 1, "", "expand_indptr"], [328, 4, 1, "", "from_dglgraph"], [329, 4, 1, "", "fused_csc_sampling_graph"], [330, 4, 1, "", "index_select"], [331, 4, 1, "", "isin"], [332, 4, 1, "", "load_from_shared_memory"], [333, 4, 1, "", "seed"], [334, 4, 1, "", "unique_and_compact"], [335, 4, 1, "", "unique_and_compact_csc_formats"]], "dgl.graphbolt.BasicFeatureStore": [[288, 2, 1, "", "keys"]], "dgl.graphbolt.CPUCachedFeature": [[290, 3, 1, "", "miss_rate"], [290, 2, 1, "", "read"], [290, 2, 1, "", "read_async"], [290, 2, 1, "", "read_async_num_stages"], [290, 2, 1, "", "size"], [290, 2, 1, "", "update"]], "dgl.graphbolt.Dataset": [[293, 3, 1, "", "all_nodes_set"], [293, 3, 1, "", "dataset_name"], [293, 3, 1, "", "feature"], [293, 3, 1, "", "graph"], [293, 3, 1, "", "tasks"]], "dgl.graphbolt.DiskBasedFeature": [[294, 2, 1, "", "metadata"], [294, 2, 1, "", "pin_memory_"], [294, 2, 1, "", "read"], [294, 2, 1, "", "read_async"], [294, 2, 1, "", "read_async_num_stages"], [294, 2, 1, "", "read_into_memory"], [294, 2, 1, "", "size"], [294, 2, 1, "", "to"], [294, 2, 1, "", "update"]], "dgl.graphbolt.Feature": [[296, 2, 1, "", "metadata"], [296, 2, 1, "", "read"], [296, 2, 1, "", "read_async"], [296, 2, 1, "", "read_async_num_stages"], [296, 2, 1, "", "size"], [296, 2, 1, "", "update"]], "dgl.graphbolt.FeatureStore": [[298, 2, 1, "", "keys"], [298, 2, 1, "", "metadata"], [298, 2, 1, "", "read"], [298, 2, 1, "", "size"], [298, 2, 1, "", "update"]], "dgl.graphbolt.FusedCSCSamplingGraph": [[299, 2, 1, "", "add_edge_attribute"], [299, 2, 1, "", "add_node_attribute"], [299, 2, 1, "", "copy_to_shared_memory"], [299, 3, 1, "", "csc_indptr"], [299, 2, 1, "", "edge_attribute"], [299, 3, 1, "", "edge_attributes"], [299, 3, 1, "", "edge_type_to_id"], [299, 2, 1, "", "in_subgraph"], [299, 3, 1, "", "indices"], [299, 2, 1, "", "node_attribute"], [299, 3, 1, "", "node_attributes"], [299, 3, 1, "", "node_type_offset"], [299, 3, 1, "", "node_type_to_id"], [299, 3, 1, "", "num_edges"], [299, 3, 1, "", "num_nodes"], [299, 2, 1, "", "pin_memory_"], [299, 2, 1, "", "sample_layer_neighbors"], [299, 2, 1, "", "sample_negative_edges_uniform"], [299, 2, 1, "", "sample_neighbors"], [299, 2, 1, "", "temporal_sample_layer_neighbors"], [299, 2, 1, "", "temporal_sample_neighbors"], [299, 2, 1, "", "to"], [299, 3, 1, "", "total_num_edges"], [299, 3, 1, "", "total_num_nodes"], [299, 3, 1, "", "type_per_edge"]], "dgl.graphbolt.GPUCachedFeature": [[300, 3, 1, "", "miss_rate"], [300, 2, 1, "", "read"], [300, 2, 1, "", "read_async"], [300, 2, 1, "", "read_async_num_stages"], [300, 2, 1, "", "size"], [300, 2, 1, "", "update"]], "dgl.graphbolt.HeteroItemSet": [[301, 3, 1, "", "names"]], "dgl.graphbolt.InSubgraphSampler": [[302, 2, 1, "", "sample_subgraphs"]], "dgl.graphbolt.ItemSet": [[304, 3, 1, "", "names"], [304, 3, 1, "", "num_items"]], "dgl.graphbolt.LegacyDataset": [[306, 3, 1, "", "all_nodes_set"], [306, 3, 1, "", "dataset_name"], [306, 3, 1, "", "feature"], [306, 3, 1, "", "graph"], [306, 3, 1, "", "tasks"]], "dgl.graphbolt.MiniBatch": [[307, 3, 1, "", "blocks"], [307, 5, 1, "", "compacted_seeds"], [307, 2, 1, "", "compute_blocks"], [307, 5, 1, "", "edge_features"], [307, 2, 1, "", "edge_ids"], [307, 5, 1, "", "indexes"], [307, 5, 1, "", "input_nodes"], [307, 2, 1, "", "is_pinned"], [307, 5, 1, "", "labels"], [307, 5, 1, "", "node_features"], [307, 2, 1, "", "node_ids"], [307, 2, 1, "", "num_layers"], [307, 2, 1, "", "pin_memory"], [307, 5, 1, "", "sampled_subgraphs"], [307, 5, 1, "", "seeds"], [307, 2, 1, "", "set_edge_features"], [307, 2, 1, "", "set_node_features"], [307, 2, 1, "", "to"], [307, 2, 1, "", "to_pyg_data"]], "dgl.graphbolt.OnDiskDataset": [[311, 3, 1, "", "all_nodes_set"], [311, 3, 1, "", "dataset_name"], [311, 3, 1, "", "feature"], [311, 3, 1, "", "graph"], [311, 2, 1, "", "load"], [311, 3, 1, "", "tasks"], [311, 3, 1, "", "yaml_data"]], "dgl.graphbolt.SampledSubgraph": [[312, 2, 1, "", "exclude_edges"], [312, 2, 1, "", "is_pinned"], [312, 3, 1, "", "original_column_node_ids"], [312, 3, 1, "", "original_edge_ids"], [312, 3, 1, "", "original_row_node_ids"], [312, 2, 1, "", "pin_memory"], [312, 3, 1, "", "sampled_csc"], [312, 2, 1, "", "to"]], "dgl.graphbolt.SampledSubgraphImpl": [[313, 5, 1, "", "original_column_node_ids"], [313, 5, 1, "", "original_edge_ids"], [313, 5, 1, "", "original_row_node_ids"], [313, 5, 1, "", "sampled_csc"]], "dgl.graphbolt.SamplingGraph": [[314, 2, 1, "", "copy_to_shared_memory"], [314, 3, 1, "", "num_edges"], [314, 3, 1, "", "num_nodes"], [314, 2, 1, "", "to"]], "dgl.graphbolt.SubgraphSampler": [[315, 2, 1, "", "sample_subgraphs"], [315, 2, 1, "", "sampling_stages"]], "dgl.graphbolt.Task": [[316, 3, 1, "", "metadata"], [316, 3, 1, "", "test_set"], [316, 3, 1, "", "train_set"], [316, 3, 1, "", "validation_set"]], "dgl.graphbolt.TorchBasedFeature": [[319, 2, 1, "", "is_pinned"], [319, 2, 1, "", "metadata"], [319, 2, 1, "", "pin_memory_"], [319, 2, 1, "", "read"], [319, 2, 1, "", "read_async"], [319, 2, 1, "", "read_async_num_stages"], [319, 2, 1, "", "size"], [319, 2, 1, "", "to"], [319, 2, 1, "", "update"]], "dgl.graphbolt.TorchBasedFeatureStore": [[320, 2, 1, "", "is_pinned"], [320, 2, 1, "", "pin_memory_"], [320, 2, 1, "", "to"]], "dgl.multiprocessing.pytorch": [[357, 4, 1, "", "call_once_and_share"], [358, 4, 1, "", "shared_tensor"]], "dgl.nn": [[18, 0, 0, "-", "functional"]], "dgl.nn.functional": [[359, 4, 1, "", "edge_softmax"]], "dgl.nn.mxnet": [[360, 1, 1, "", "HeteroGraphConv"]], "dgl.nn.mxnet.conv": [[361, 1, 1, "", "AGNNConv"], [362, 1, 1, "", "APPNPConv"], [363, 1, 1, "", "ChebConv"], [364, 1, 1, "", "DenseChebConv"], [365, 1, 1, "", "DenseGraphConv"], [366, 1, 1, "", "DenseSAGEConv"], [367, 1, 1, "", "EdgeConv"], [368, 1, 1, "", "GATConv"], [369, 1, 1, "", "GINConv"], [370, 1, 1, "", "GMMConv"], [371, 1, 1, "", "GatedGraphConv"], [372, 1, 1, "", "GraphConv"], [373, 1, 1, "", "NNConv"], [374, 1, 1, "", "RelGraphConv"], [375, 1, 1, "", "SAGEConv"], [376, 1, 1, "", "SGConv"], [377, 1, 1, "", "TAGConv"]], "dgl.nn.mxnet.glob": [[378, 1, 1, "", "AvgPooling"], [379, 1, 1, "", "GlobalAttentionPooling"], [380, 1, 1, "", "MaxPooling"], [381, 1, 1, "", "Set2Set"], [382, 1, 1, "", "SortPooling"], [383, 1, 1, "", "SumPooling"]], "dgl.nn.mxnet.utils": [[384, 1, 1, "", "Sequential"]], "dgl.nn.pytorch": [[385, 1, 1, "", "DeepWalk"], [386, 1, 1, "", "HeteroEmbedding"], [387, 1, 1, "", "HeteroGraphConv"], [388, 1, 1, "", "HeteroLinear"], [389, 1, 1, "", "MetaPath2Vec"], [390, 1, 1, "", "TypedLinear"]], "dgl.nn.pytorch.DeepWalk": [[385, 2, 1, "", "forward"], [385, 5, 1, "", "node_embed"], [385, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroEmbedding": [[386, 2, 1, "", "forward"], [386, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.HeteroGraphConv": [[387, 2, 1, "", "forward"], [387, 5, 1, "", "mods"]], "dgl.nn.pytorch.HeteroLinear": [[388, 2, 1, "", "forward"]], "dgl.nn.pytorch.MetaPath2Vec": [[389, 2, 1, "", "forward"], [389, 5, 1, "", "local_to_global_nid"], [389, 5, 1, "", "node_embed"], [389, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.TypedLinear": [[390, 2, 1, "", "forward"], [390, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv": [[391, 1, 1, "", "AGNNConv"], [392, 1, 1, "", "APPNPConv"], [393, 1, 1, "", "AtomicConv"], [394, 1, 1, "", "CFConv"], [395, 1, 1, "", "ChebConv"], [396, 1, 1, "", "CuGraphGATConv"], [397, 1, 1, "", "CuGraphRelGraphConv"], [398, 1, 1, "", "CuGraphSAGEConv"], [399, 1, 1, "", "DGNConv"], [400, 1, 1, "", "DenseChebConv"], [401, 1, 1, "", "DenseGraphConv"], [402, 1, 1, "", "DenseSAGEConv"], [403, 1, 1, "", "DotGatConv"], [404, 1, 1, "", "EGATConv"], [405, 1, 1, "", "EGNNConv"], [406, 1, 1, "", "EdgeConv"], [407, 1, 1, "", "EdgeGATConv"], [408, 1, 1, "", "EdgeWeightNorm"], [409, 1, 1, "", "GATConv"], [410, 1, 1, "", "GATv2Conv"], [411, 1, 1, "", "GCN2Conv"], [412, 1, 1, "", "GINConv"], [413, 1, 1, "", "GINEConv"], [414, 1, 1, "", "GMMConv"], [415, 1, 1, "", "GatedGCNConv"], [416, 1, 1, "", "GatedGraphConv"], [417, 1, 1, "", "GraphConv"], [418, 1, 1, "", "GroupRevRes"], [419, 1, 1, "", "HGTConv"], [420, 1, 1, "", "NNConv"], [421, 1, 1, "", "PNAConv"], [422, 1, 1, "", "RelGraphConv"], [423, 1, 1, "", "SAGEConv"], [424, 1, 1, "", "SGConv"], [425, 1, 1, "", "TAGConv"], [426, 1, 1, "", "TWIRLSConv"], [427, 1, 1, "", "TWIRLSUnfoldingAndAttention"]], "dgl.nn.pytorch.conv.AGNNConv": [[391, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.APPNPConv": [[392, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.AtomicConv": [[393, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CFConv": [[394, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.ChebConv": [[395, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.CuGraphGATConv": [[396, 2, 1, "", "forward"], [396, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphRelGraphConv": [[397, 2, 1, "", "forward"], [397, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.CuGraphSAGEConv": [[398, 2, 1, "", "forward"], [398, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DGNConv": [[399, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.DenseChebConv": [[400, 2, 1, "", "forward"], [400, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseGraphConv": [[401, 2, 1, "", "forward"], [401, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DenseSAGEConv": [[402, 2, 1, "", "forward"], [402, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.DotGatConv": [[403, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EGATConv": [[404, 2, 1, "", "forward"], [404, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EGNNConv": [[405, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeConv": [[406, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.EdgeGATConv": [[407, 2, 1, "", "forward"], [407, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.EdgeWeightNorm": [[408, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GATConv": [[409, 2, 1, "", "forward"], [409, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GATv2Conv": [[410, 2, 1, "", "forward"], [410, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GCN2Conv": [[411, 2, 1, "", "forward"], [411, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GINConv": [[412, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GINEConv": [[413, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GMMConv": [[414, 2, 1, "", "forward"], [414, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GatedGCNConv": [[415, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.GatedGraphConv": [[416, 2, 1, "", "forward"], [416, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.GraphConv": [[417, 5, 1, "", "bias"], [417, 2, 1, "", "forward"], [417, 2, 1, "", "reset_parameters"], [417, 5, 1, "", "weight"]], "dgl.nn.pytorch.conv.GroupRevRes": [[418, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.HGTConv": [[419, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.NNConv": [[420, 2, 1, "", "forward"], [420, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.PNAConv": [[421, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.RelGraphConv": [[422, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.SAGEConv": [[423, 2, 1, "", "forward"], [423, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.SGConv": [[424, 2, 1, "", "forward"], [424, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TAGConv": [[425, 2, 1, "", "forward"], [425, 5, 1, "", "lin"], [425, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.conv.TWIRLSConv": [[426, 2, 1, "", "forward"]], "dgl.nn.pytorch.conv.TWIRLSUnfoldingAndAttention": [[427, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain": [[428, 1, 1, "", "GNNExplainer"], [429, 1, 1, "", "HeteroGNNExplainer"], [430, 1, 1, "", "HeteroPGExplainer"], [431, 1, 1, "", "HeteroSubgraphX"], [432, 1, 1, "", "PGExplainer"], [433, 1, 1, "", "SubgraphX"]], "dgl.nn.pytorch.explain.GNNExplainer": [[428, 2, 1, "", "explain_graph"], [428, 2, 1, "", "explain_node"], [428, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroGNNExplainer": [[429, 2, 1, "", "explain_graph"], [429, 2, 1, "", "explain_node"], [429, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.HeteroPGExplainer": [[430, 2, 1, "", "explain_graph"], [430, 2, 1, "", "explain_node"], [430, 2, 1, "", "forward"], [430, 2, 1, "", "train_step"], [430, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.HeteroSubgraphX": [[431, 2, 1, "", "explain_graph"], [431, 2, 1, "", "forward"]], "dgl.nn.pytorch.explain.PGExplainer": [[432, 2, 1, "", "explain_graph"], [432, 2, 1, "", "explain_node"], [432, 2, 1, "", "forward"], [432, 2, 1, "", "train_step"], [432, 2, 1, "", "train_step_node"]], "dgl.nn.pytorch.explain.SubgraphX": [[433, 2, 1, "", "explain_graph"], [433, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory": [[434, 1, 1, "", "KNNGraph"], [435, 1, 1, "", "RadiusGraph"], [436, 1, 1, "", "SegmentedKNNGraph"]], "dgl.nn.pytorch.factory.KNNGraph": [[434, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.RadiusGraph": [[435, 2, 1, "", "forward"]], "dgl.nn.pytorch.factory.SegmentedKNNGraph": [[436, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob": [[437, 1, 1, "", "AvgPooling"], [438, 1, 1, "", "GlobalAttentionPooling"], [439, 1, 1, "", "MaxPooling"], [440, 1, 1, "", "Set2Set"], [441, 1, 1, "", "SetTransformerDecoder"], [442, 1, 1, "", "SetTransformerEncoder"], [443, 1, 1, "", "SortPooling"], [444, 1, 1, "", "SumPooling"], [445, 1, 1, "", "WeightAndSum"]], "dgl.nn.pytorch.glob.AvgPooling": [[437, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.GlobalAttentionPooling": [[438, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.MaxPooling": [[439, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.Set2Set": [[440, 2, 1, "", "forward"], [440, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.glob.SetTransformerDecoder": [[441, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SetTransformerEncoder": [[442, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SortPooling": [[443, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.SumPooling": [[444, 2, 1, "", "forward"]], "dgl.nn.pytorch.glob.WeightAndSum": [[445, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt": [[446, 1, 1, "", "BiasedMHA"], [447, 1, 1, "", "DegreeEncoder"], [448, 1, 1, "", "EGTLayer"], [449, 1, 1, "", "GraphormerLayer"], [450, 1, 1, "", "LapPosEncoder"], [451, 1, 1, "", "PathEncoder"], [452, 1, 1, "", "SpatialEncoder"], [453, 1, 1, "", "SpatialEncoder3d"]], "dgl.nn.pytorch.gt.BiasedMHA": [[446, 2, 1, "", "forward"], [446, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.gt.DegreeEncoder": [[447, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.EGTLayer": [[448, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.GraphormerLayer": [[449, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.LapPosEncoder": [[450, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.PathEncoder": [[451, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder": [[452, 2, 1, "", "forward"]], "dgl.nn.pytorch.gt.SpatialEncoder3d": [[453, 2, 1, "", "forward"]], "dgl.nn.pytorch.link": [[454, 1, 1, "", "EdgePredictor"], [455, 1, 1, "", "TransE"], [456, 1, 1, "", "TransR"]], "dgl.nn.pytorch.link.EdgePredictor": [[454, 2, 1, "", "forward"], [454, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransE": [[455, 2, 1, "", "forward"], [455, 5, 1, "", "rel_emb"], [455, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.link.TransR": [[456, 2, 1, "", "forward"], [456, 5, 1, "", "rel_emb"], [456, 5, 1, "", "rel_project"], [456, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.sparse_emb": [[457, 1, 1, "", "NodeEmbedding"]], "dgl.nn.pytorch.utils": [[458, 1, 1, "", "JumpingKnowledge"], [459, 1, 1, "", "LabelPropagation"], [460, 1, 1, "", "Sequential"], [461, 1, 1, "", "WeightBasis"]], "dgl.nn.pytorch.utils.JumpingKnowledge": [[458, 2, 1, "", "forward"], [458, 2, 1, "", "reset_parameters"]], "dgl.nn.pytorch.utils.LabelPropagation": [[459, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.Sequential": [[460, 2, 1, "", "forward"]], "dgl.nn.pytorch.utils.WeightBasis": [[461, 2, 1, "", "forward"]], "dgl.nn.tensorflow.conv": [[462, 1, 1, "", "APPNPConv"], [463, 1, 1, "", "ChebConv"], [464, 1, 1, "", "GATConv"], [465, 1, 1, "", "GINConv"], [466, 1, 1, "", "GraphConv"], [467, 1, 1, "", "RelGraphConv"], [468, 1, 1, "", "SAGEConv"], [469, 1, 1, "", "SGConv"]], "dgl.nn.tensorflow.glob": [[470, 1, 1, "", "AvgPooling"], [471, 1, 1, "", "GlobalAttentionPooling"], [472, 1, 1, "", "HeteroGraphConv"], [473, 1, 1, "", "MaxPooling"], [474, 1, 1, "", "SortPooling"], [475, 1, 1, "", "SumPooling"]], "dgl.ops": [[481, 4, 1, "", "copy_e_max"], [482, 4, 1, "", "copy_e_mean"], [483, 4, 1, "", "copy_e_min"], [484, 4, 1, "", "copy_e_sum"], [485, 4, 1, "", "copy_u"], [486, 4, 1, "", "copy_u_max"], [487, 4, 1, "", "copy_u_mean"], [488, 4, 1, "", "copy_u_min"], [489, 4, 1, "", "copy_u_sum"], [490, 4, 1, "", "copy_v"], [491, 4, 1, "", "e_add_u"], [492, 4, 1, "", "e_add_v"], [493, 4, 1, "", "e_div_u"], [494, 4, 1, "", "e_div_v"], [495, 4, 1, "", "e_dot_u"], [496, 4, 1, "", "e_dot_v"], [497, 4, 1, "", "e_mul_u"], [498, 4, 1, "", "e_mul_v"], [499, 4, 1, "", "e_sub_u"], [500, 4, 1, "", "e_sub_v"], [501, 4, 1, "", "gather_mm"], [502, 4, 1, "", "gsddmm"], [503, 4, 1, "", "gspmm"], [504, 4, 1, "", "segment_mm"], [505, 4, 1, "", "segment_reduce"], [506, 4, 1, "", "u_add_e"], [507, 4, 1, "", "u_add_e_max"], [508, 4, 1, "", "u_add_e_mean"], [509, 4, 1, "", "u_add_e_min"], [510, 4, 1, "", "u_add_e_sum"], [511, 4, 1, "", "u_add_v"], [512, 4, 1, "", "u_div_e"], [513, 4, 1, "", "u_div_e_max"], [514, 4, 1, "", "u_div_e_mean"], [515, 4, 1, "", "u_div_e_min"], [516, 4, 1, "", "u_div_e_sum"], [517, 4, 1, "", "u_div_v"], [518, 4, 1, "", "u_dot_e"], [519, 4, 1, "", "u_dot_v"], [520, 4, 1, "", "u_mul_e"], [521, 4, 1, "", "u_mul_e_max"], [522, 4, 1, "", "u_mul_e_mean"], [523, 4, 1, "", "u_mul_e_min"], [524, 4, 1, "", "u_mul_e_sum"], [525, 4, 1, "", "u_mul_v"], [526, 4, 1, "", "u_sub_e"], [527, 4, 1, "", "u_sub_e_max"], [528, 4, 1, "", "u_sub_e_mean"], [529, 4, 1, "", "u_sub_e_min"], [530, 4, 1, "", "u_sub_e_sum"], [531, 4, 1, "", "u_sub_v"], [532, 4, 1, "", "v_add_e"], [533, 4, 1, "", "v_add_u"], [534, 4, 1, "", "v_div_e"], [535, 4, 1, "", "v_div_u"], [536, 4, 1, "", "v_dot_e"], [537, 4, 1, "", "v_dot_u"], [538, 4, 1, "", "v_mul_e"], [539, 4, 1, "", "v_mul_u"], [540, 4, 1, "", "v_sub_e"], [541, 4, 1, "", "v_sub_u"]], "dgl.optim.pytorch": [[10, 1, 1, "", "SparseAdagrad"], [10, 1, 1, "", "SparseAdam"]], "dgl.sampling": [[560, 1, 1, "", "PinSAGESampler"], [561, 4, 1, "", "global_uniform_negative_sampling"], [562, 4, 1, "", "node2vec_random_walk"], [563, 4, 1, "", "pack_traces"], [564, 4, 1, "", "random_walk"], [565, 4, 1, "", "sample_labors"], [566, 4, 1, "", "sample_neighbors"], [567, 4, 1, "", "sample_neighbors_biased"], [568, 4, 1, "", "select_topk"]], "dgl.sampling.PinSAGESampler": [[560, 2, 1, "", "__init__"]], "dgl.sparse": [[12, 1, 1, "", "SparseMatrix"], [609, 4, 1, "", "add"], [610, 4, 1, "", "bsddmm"], [611, 4, 1, "", "bspmm"], [612, 4, 1, "", "diag"], [613, 4, 1, "", "div"], [614, 4, 1, "", "from_coo"], [615, 4, 1, "", "from_csc"], [616, 4, 1, "", "from_csr"], [617, 4, 1, "", "identity"], [618, 4, 1, "", "matmul"], [619, 4, 1, "", "mul"], [620, 4, 1, "", "power"], [621, 4, 1, "", "sddmm"], [622, 4, 1, "", "softmax"], [623, 4, 1, "", "sp_add_v"], [624, 4, 1, "", "sp_broadcast_v"], [625, 4, 1, "", "sp_div_v"], [626, 4, 1, "", "sp_mul_v"], [627, 4, 1, "", "sp_sub_v"], [628, 4, 1, "", "spmatrix"], [629, 4, 1, "", "spmm"], [630, 4, 1, "", "spspmm"], [631, 4, 1, "", "sub"], [632, 4, 1, "", "val_like"]], "dgl.sparse.SparseMatrix": [[578, 3, 1, "", "T"], [579, 2, 1, "", "coalesce"], [580, 3, 1, "", "col"], [581, 2, 1, "", "coo"], [582, 2, 1, "", "cpu"], [583, 2, 1, "", "csc"], [584, 2, 1, "", "csr"], [585, 2, 1, "", "cuda"], [586, 3, 1, "", "device"], [587, 2, 1, "", "double"], [588, 3, 1, "", "dtype"], [589, 2, 1, "", "float"], [590, 2, 1, "", "has_duplicate"], [591, 2, 1, "", "indices"], [592, 2, 1, "", "int"], [593, 2, 1, "", "long"], [594, 2, 1, "", "neg"], [595, 3, 1, "", "nnz"], [596, 2, 1, "", "reduce"], [597, 3, 1, "", "row"], [598, 3, 1, "", "shape"], [599, 2, 1, "", "smax"], [600, 2, 1, "", "smean"], [601, 2, 1, "", "smin"], [602, 2, 1, "", "softmax"], [603, 2, 1, "", "sum"], [604, 2, 1, "", "t"], [605, 2, 1, "", "to"], [606, 2, 1, "", "to_dense"], [607, 2, 1, "", "transpose"], [608, 3, 1, "", "val"]], "dgl.transforms": [[650, 1, 1, "", "AddEdge"], [651, 1, 1, "", "AddMetaPaths"], [652, 1, 1, "", "AddReverse"], [653, 1, 1, "", "AddSelfLoop"], [654, 1, 1, "", "BaseTransform"], [655, 1, 1, "", "Compose"], [656, 1, 1, "", "DropEdge"], [657, 1, 1, "", "DropNode"], [658, 1, 1, "", "FeatMask"], [659, 1, 1, "", "GCNNorm"], [660, 1, 1, "", "GDC"], [661, 1, 1, "", "HeatKernel"], [662, 1, 1, "", "KHopGraph"], [663, 1, 1, "", "LapPE"], [664, 1, 1, "", "LineGraph"], [665, 1, 1, "", "NodeShuffle"], [666, 1, 1, "", "PPR"], [667, 1, 1, "", "RandomWalkPE"], [668, 1, 1, "", "RemoveSelfLoop"], [669, 1, 1, "", "RowFeatNormalizer"], [670, 1, 1, "", "SIGNDiffusion"], [671, 1, 1, "", "SVDPE"], [672, 1, 1, "", "ToLevi"], [673, 1, 1, "", "ToSimple"]], "dgl.udf.EdgeBatch": [[674, 2, 1, "", "batch_size"], [675, 3, 1, "", "data"], [676, 3, 1, "", "dst"], [677, 2, 1, "", "edges"], [678, 3, 1, "", "src"]], "dgl.udf.NodeBatch": [[679, 2, 1, "", "batch_size"], [680, 3, 1, "", "data"], [681, 3, 1, "", "mailbox"], [682, 2, 1, "", "nodes"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "terms": {"": [4, 5, 8, 11, 22, 34, 35, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 73, 74, 87, 88, 90, 93, 94, 100, 103, 107, 113, 122, 125, 130, 131, 151, 152, 161, 163, 167, 168, 180, 182, 183, 188, 208, 210, 213, 220, 221, 230, 231, 233, 235, 240, 241, 242, 243, 245, 246, 287, 295, 299, 303, 307, 312, 321, 336, 337, 341, 342, 353, 354, 393, 401, 403, 407, 416, 417, 419, 440, 460, 477, 478, 502, 503, 542, 558, 565, 566, 567, 569, 572, 576, 577, 663, 690, 691, 693, 694, 695, 697, 699, 701, 704, 706, 709, 710, 711, 712, 714, 715, 722, 724, 725, 727, 729, 731, 732, 734, 756, 777, 784, 789, 798, 808, 809, 815, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 833, 836, 837, 843, 847, 850, 851, 854, 855, 856, 860, 863, 866, 867, 872, 873], "0": [0, 4, 5, 6, 9, 10, 14, 20, 22, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 167, 169, 170, 171, 172, 173, 174, 176, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 207, 210, 213, 214, 216, 217, 219, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 290, 292, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 315, 319, 321, 322, 323, 327, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 357, 359, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 455, 456, 457, 459, 460, 476, 477, 478, 479, 480, 504, 505, 542, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 579, 582, 583, 584, 585, 587, 589, 590, 592, 593, 596, 599, 600, 601, 602, 603, 605, 609, 610, 611, 612, 613, 615, 616, 617, 618, 619, 620, 621, 622, 624, 629, 630, 631, 635, 636, 637, 638, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 691, 692, 693, 695, 696, 697, 698, 699, 703, 704, 705, 706, 707, 713, 715, 716, 717, 718, 719, 721, 723, 724, 727, 728, 729, 730, 732, 733, 734, 738, 739, 741, 742, 744, 747, 748, 749, 750, 751, 757, 759, 760, 761, 762, 764, 767, 768, 769, 770, 772, 773, 774, 778, 779, 781, 782, 783, 784, 785, 788, 789, 790, 791, 792, 799, 801, 802, 803, 804, 805, 807, 808, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 826, 828, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 849, 850, 851, 853, 854, 855, 856, 857, 859, 860, 862, 863, 865, 866, 867, 869, 871, 872, 873, 875], "00": [25, 344, 635, 671, 822, 823, 825, 826, 828, 831, 845, 849, 853, 859, 862, 865, 869, 871, 875], "000": [14, 146, 147, 169, 173, 174, 191, 195, 822, 828, 830, 846, 847, 849, 850, 851, 853, 867, 869, 871], "0000": [9, 118, 173, 359, 393, 401, 412, 417, 422, 427, 480, 552, 596, 600, 602, 613, 622, 659, 663, 667, 821, 825, 830], "00000": [831, 854, 855, 857, 860], "000000": 821, "000007645": 847, "00001": [831, 854, 855, 857, 860], "00002": [831, 854, 855, 857, 860], "00003": [831, 854, 855, 857, 860], "00004": [831, 854, 855, 857, 860], "00005": [854, 855, 857, 860], "00006": [854, 855, 857, 860], "00007": [854, 855, 857, 860], "00008": [854, 855, 857, 860], "00009": [854, 855, 857, 860], "0000e": [344, 635, 671], "00010": [854, 855, 857], "00011": [854, 855, 857], "00012": [854, 855, 857], "00013": [854, 855, 857], "00014": [854, 855, 857], "00015": [854, 855, 857], "00016": [854, 855, 857], "00017": [854, 855, 857], "00018": [854, 855, 857], "00019": [854, 855, 857], "0002": 825, "00020": [854, 855, 857], "00021": [854, 855, 857], "00022": [854, 855, 857], "00023": [854, 855, 857], "00024": [854, 855, 857], "00025": [854, 857], "00026": [854, 857], "00027": [854, 857], "00028": [854, 857], "00029": [854, 857], "0003": 833, "00030": 854, "00031": 854, "00032": 854, "00033": 854, "00034": 854, "00035": 854, "00036": 854, "00037": 854, "00038": 854, "00039": 854, "00040": 854, "00041": 854, "00042": 854, "00043": 854, "00044": 854, "00045": 854, "00046": 854, "00047": 854, "00048": 854, "00049": 854, "0005": [430, 432], "0006": 839, "001": [4, 10, 457, 567, 822, 823, 830, 831, 850, 851], "002": [14, 822, 830, 857], "002158116134429955": 691, "0026e": 825, "0028": 441, "0028e": 825, "003": [14, 560, 822, 828, 840, 872, 875], "0033": 833, "004": [14, 822, 840], "005": [428, 429, 822, 840], "006": [14, 822, 840, 857], "0068": 833, "007": [14, 822, 840], "0073": 833, "00743445923710373": 691, "0077": 833, "008": [14, 822, 840], "008790817766266334": 691, "0089": 412, "009": [14, 822, 840], "0093": 822, "0097": 833, "00982": [146, 147, 169, 174, 195], "0099": 442, "01": [142, 143, 189, 344, 385, 428, 429, 430, 432, 635, 671, 719, 825, 828, 838, 840, 841, 842, 855, 859, 867, 872, 873], "010": [14, 822, 840], "0100e": 825, "011": [14, 822, 840], "0118": 412, "012": [822, 840], "01217200152200748": 691, "0128": 833, "0129": 410, "013": [822, 840], "01315": 826, "0134": 460, "0135": 825, "014": [14, 822], "01404": 162, "0142": [437, 438, 439, 440, 441, 442, 443, 444, 445], "0145": 440, "0148": 826, "015": [14, 822, 828, 839, 840, 845], "0152": 826, "0155": 420, "0156": [441, 826], "016": [14, 822], "0163": 666, "0164": 395, "0169": 460, "017": [14, 822], "0174": 833, "0176": 855, "0177": 822, "018": [822, 840], "0180": [602, 622], "0184": 397, "0185": 826, "019": [14, 822, 840], "0192": 826, "0194902": 837, "0195": 837, "01973": 560, "02": [825, 828, 845, 859], "0200": [660, 837], "0201": 822, "0207": 412, "0208": 837, "0217": 666, "0218": 836, "0219": 400, "022": 840, "02216": 723, "0226": 839, "023": [14, 840], "0235": 440, "0236": 837, "02360348": 837, "0239": 410, "025": [389, 857], "0254": 854, "0255": 666, "026": 14, "0261": 860, "0265": 837, "0268": [403, 409], "0269e": 825, "0271": 854, "0275": 825, "0276": [441, 836], "0278": 663, "0279": 837, "0283": 833, "0285": 822, "029": 840, "0290": 854, "0297": [647, 648], "03": [831, 859], "030": 14, "0309": 836, "031": 840, "0311": 854, "0315": [403, 409], "0321": 836, "0331": 822, "0334": 854, "03348": 448, "0335": 837, "0340": 822, "0341": 460, "0342": 837, "0359": 854, "03596674": 837, "0360": 837, "0361": [822, 825], "0364": 836, "0366": 836, "0366331": 836, "03671": 846, "0368": 839, "0375": 417, "0376": 440, "0381": 836, "03810212": 836, "03819": 867, "0383": 666, "0385": 836, "0386": 691, "038622249776255946": 691, "0387": 854, "039": 14, "0390": [403, 409, 825], "0394": 855, "0395": 836, "03d": [822, 830], "03f": 833, "04": [14, 396, 397, 398, 819, 825, 845], "040": [173, 840], "0400": 660, "0401": 402, "0406": [416, 661, 825], "0407": 833, "04133991340612775": 691, "0418": 854, "0419": 825, "0425": 416, "0428": [441, 836], "0429": 822, "043": [136, 840], "0432": 825, "043591": 843, "0442": 826, "0447": 825, "0448": 460, "04486384200747007": 691, "045": 14, "0451": 822, "0452": 854, "0454": 825, "04573": 432, "0461": 441, "0462": 825, "0463": 854, "0464": 836, "0470": [441, 836], "0483": 440, "0483e": 344, "04878384701995819": 691, "0489": [822, 854], "0493": 836, "049629338970987646": 691, "0498": 825, "04it": 822, "05": [460, 666, 670, 703, 747, 788, 857, 860], "0504": 836, "05041444": 836, "0510": 666, "0515": 836, "05152": 433, "05153982": 836, "0522": 836, "0523": 416, "0526": 830, "0527": 400, "05287": 134, "0531": 854, "0535": 833, "05354099924658973": 691, "0538": 833, "0539": [647, 648], "054": [14, 159, 173], "054016385555202384": 691, "0541": [412, 661], "0542": 855, "0543": [403, 409], "0544": [128, 129], "0550": 833, "05528253": 836, "0553": [826, 836], "0556": [460, 821], "0559": [833, 836], "0562": 839, "0570": 836, "05702172": 836, "0577": 854, "058": [14, 826], "0580": [416, 437, 438, 439, 440, 441, 442, 443, 444, 445], "0585": 836, "05854139": 836, "0588": 821, "0591": 118, "059172654879085296": 691, "0596": [410, 833], "05d": [831, 854, 855, 857, 860, 873], "06": [25, 826], "060": [14, 840], "0600": [173, 660], "0605": 836, "06054232": 836, "0608": 444, "0619": 833, "0628": 854, "063": 840, "0630": 429, "0634": 442, "0638": 666, "0643": 822, "0652": 833, "0654": 821, "0662": 837, "0665": 833, "067": [828, 860, 862], "0670": 836, "06701349": 836, "0673": 833, "0684": 854, "0699": [437, 438, 439, 440, 441, 442, 443, 444, 445], "07": [635, 671], "0703": 837, "07030047": 837, "0707": 825, "0711": 825, "0711e": 344, "0721": 837, "0724": [128, 129], "0729": 445, "073": 161, "0731": 821, "074": 14, "0747": 854, "0748": 836, "0748495": 836, "07502571020414439": 691, "0756": 836, "0758": 412, "0762": [403, 409], "0767": [821, 839], "0769": 821, "077": 14, "0774": 833, "07816474278491703": 691, "0783": [403, 409], "08": [4, 10, 245, 477, 828], "0800": 660, "0804": [647, 648], "0808e": 825, "0809": 837, "081": [828, 873, 875], "0811": 822, "0812": 661, "0816": 854, "0832": [416, 825], "0833": 9, "0835": 400, "0836": 821, "0845": 441, "085": 875, "0850": 836, "0852": 831, "08543289788089736": 691, "0856": 833, "0857": [416, 647, 648], "086": 14, "0868": [691, 833], "08680051341900807": 691, "08691420300562658": 691, "08692": 162, "0876": 397, "0880": [647, 648], "0888": 423, "0891": [821, 833], "0893": 854, "0896": 836, "08983": 867, "08it": 831, "09": [826, 828, 831], "0901": 822, "0909": 821, "0911194482288028": 691, "0913": [442, 825], "0915": 428, "0917": 821, "0920": 442, "0928555079874982": 691, "0935": 410, "0937": 428, "0939": 836, "0949": [822, 836], "0953": 821, "0957": 837, "0958": [833, 836], "096": 840, "0978": [825, 854], "0985": 855, "0988": 860, "0a0": 831, "0k": [178, 179], "0x7fec820937b8": [696, 742, 782], "0\ubd80\ud130": [784, 791, 792], "0\uc5d0": 784, "0\uc73c\ub85c": 803, "0\uc740": [783, 784], "0\uc744": 784, "0\uc774": [808, 811], "0\uc774\uace0": 784, "0\uck": 173, "100x100": 171, "101": [184, 434, 436, 701, 786, 836, 837, 860, 867], "1014": [128, 129], "10150": 161, "102": [434, 436, 820, 836, 837, 856, 860, 867], "10203": 830, "1022": 560, "1023": 833, "1024": [168, 186, 210, 213, 214, 215, 216, 220, 687, 715, 718, 719, 721, 722, 723, 732, 759, 760, 762, 764, 772, 801, 802, 805, 807, 815, 831, 833, 850, 851, 873], "10240": 292, "1025": 833, "1026": 833, "103": [820, 836, 837, 860, 867], "10320": 830, "10321": 830, "1037097085190507": 691, "1038000": 188, "1039": 663, "104": [836, 837, 860, 867], "1040": 836, "1041": 185, "1043998": 784, "1046": 422, "1047": 822, "1048": 821, "105": [836, 837, 840, 860, 867], "1052": 691, "10522806046048205": 691, "10556": [25, 154, 820, 821, 823, 830, 838, 840, 841, 854, 856, 857], "106": [830, 836, 837, 843, 860, 867], "1060": 172, "1061": 836, "1066": 118, "1067": 825, "107": [836, 837, 860, 867], "1073": 854, "108": [14, 174, 836, 837, 860, 867], "1083": 661, "1086": 691, "10864079337442234": 691, "1089": 560, "109": [836, 837, 838, 860, 867], "10903": 771, "1092": 149, "1093": 825, "1095": 826, "1098": 825, "1099": 423, "10it": 831, "10m": 173, "11": [9, 14, 133, 161, 192, 295, 303, 312, 313, 428, 624, 644, 656, 657, 665, 724, 759, 801, 819, 820, 821, 822, 823, 825, 826, 831, 836, 837, 856, 860, 867], "110": [836, 837, 840, 860, 867], "1103": 833, "1107": 414, "111": [836, 837, 860, 867], "1110547": 836, "1111": 836, "1113": 25, "1114": 830, "11158102039672668": 691, "1118": 839, "112": [836, 837, 860, 867], "1123": 410, "1126": 441, "1127": 822, "113": [836, 837, 838, 860, 867], "1131": 836, "1134649": 784, "1135": [394, 837], "1137": 833, "1138": 396, "1139": 460, "114": [181, 724, 820, 836, 837, 860, 867], "1140\uc5b5\uac1c\uc758": 808, "11446843700743892": 691, "1145": [134, 163, 173, 428, 691], "114615892": 25, "115": [836, 837, 840, 860, 867], "1154897249106891": 691, "1155": [410, 691, 825], "1156": 410, "1157": 410, "116": [836, 837, 860, 867], "1160": 830, "11640": [137, 171, 180, 182, 188], "1166": 423, "117": [144, 147, 836, 837, 860, 867], "11701": 192, "11758": 188, "1177e": 825, "1178": [25, 168, 186, 830], "1179": 854, "118": [836, 837, 860, 867], "1182": 825, "1186": 842, "1188": 825, "119": [136, 836, 837, 860, 867], "1191": [560, 825], "1194614": 784, "11955": 833, "11956": 833, "11957": 833, "11958": 833, "11d": 179, "11\ubc88": 801, "11\ubc88\uc5d0\uc11c": 801, "11\uc6d4": 793, "12": [9, 14, 79, 81, 178, 179, 295, 299, 302, 303, 312, 313, 404, 407, 414, 415, 428, 431, 433, 624, 656, 665, 724, 808, 819, 825, 826, 830, 831, 833, 836, 837, 856, 860, 867], "120": [150, 193, 836, 837, 840, 860, 867], "1200": 9, "1203": 699, "1203354": 784, "1209": 394, "121": [175, 825, 836, 837, 857, 860, 867], "1216": 825, "122": [836, 837, 860, 867], "1220": 825, "1221": 836, "123": [14, 146, 192, 836, 837, 860, 867], "1230": 560, "12345": [831, 872, 873], "12346": 457, "1237": 822, "123718280": [4, 240], "124": [25, 836, 837, 860, 867], "12403": 305, "125": [836, 837, 840, 842, 860, 867], "1250": 9, "1254": 837, "126": [14, 153, 836, 837, 860, 867], "1261": 420, "1261310": 240, "1262": 442, "1264": 836, "127": [457, 831, 836, 837, 838, 846, 860, 867, 872, 873], "1272": 830, "1276": 830, "1278": [830, 833], "1279": [830, 837], "1279108": 837, "128": [5, 165, 385, 389, 426, 433, 448, 716, 830, 836, 837, 860, 867], "1282": [560, 836], "1283": 394, "12860": 699, "12861": 699, "1289": 560, "129": [836, 837, 860, 867], "1296": 854, "12k": 195, "13": [9, 135, 165, 194, 295, 303, 312, 313, 613, 656, 819, 822, 825, 830, 831, 833, 836, 837, 838, 856, 860, 867], "130": [178, 179, 836, 837, 840, 860, 867], "1304": 836, "130622": 25, "1307": 830, "1309": 422, "131": [836, 837, 860, 867], "1311": 428, "132": [161, 836, 837, 860, 867], "1321": 830, "1323": [647, 648], "132477": 833, "1328": 118, "133": [14, 836, 837, 860, 867], "1330": 429, "1338": 837, "134": [836, 837, 860, 867], "1342": 416, "1349": 440, "135": [14, 836, 837, 840, 860, 867], "1353": 661, "1354": 837, "1358": 839, "136": [25, 145, 836, 837, 860, 867], "1361": [440, 663], "1363": 837, "13630908": 837, "1364": 691, "1364240150959487": 691, "137": [836, 837, 860, 867], "1371": 412, "1373e": [635, 671], "1375": 836, "13752": 25, "1376": [416, 837], "1377": 414, "13774964202156292": 691, "138": [836, 837, 854, 857, 860, 867], "1388": 416, "139": [836, 837, 860, 867], "1393": 691, "1393107840629273": 691, "1394": 836, "1395": [412, 825], "14": [14, 158, 177, 295, 302, 312, 313, 657, 693, 739, 779, 825, 830, 831, 833, 836, 837, 856, 860, 867], "140": [132, 154, 820, 821, 823, 836, 837, 838, 840, 841, 854, 856, 857, 860, 867], "1405": 839, "1408": 412, "141": [836, 837, 860, 867], "141442": 191, "142": [836, 837, 860, 867], "1421": 836, "1425": 854, "1428": 822, "1428571492433548": 120, "1429": 821, "143": [836, 837, 860, 867], "1431": 25, "1433": [154, 820, 821, 823, 838, 840, 841, 854, 856, 857], "144": [836, 837, 860, 867], "1440": 422, "1442": 836, "145": [25, 836, 837, 840, 860, 867], "1450": 854, "14541": 157, "1455": 833, "1458": [647, 648], "1459": 830, "146": [836, 837, 860, 867], "14627522432017592": 691, "147": [163, 820, 836, 837, 860, 867], "1473": 837, "1479": [403, 409], "148": [14, 836, 837, 860, 867], "14803": 833, "14807": 833, "148100": 170, "14811": 833, "149": [836, 837, 840, 860, 867], "1492": 836, "1492376": 836, "1496": 428, "1498": 825, "15": [9, 14, 25, 151, 164, 177, 210, 214, 216, 219, 220, 295, 305, 310, 312, 313, 317, 318, 404, 407, 504, 653, 656, 666, 704, 715, 724, 808, 820, 825, 826, 830, 833, 836, 837, 838, 840, 841, 843, 846, 856, 860, 867], "150": [836, 837, 840, 860, 866, 867], "1500": 666, "1505": 560, "1509": [825, 837, 855], "151": [836, 837, 838, 860, 867], "1516": 416, "152": [836, 837, 860, 867], "1520": [134, 647, 648], "15218126307872892": 691, "1529": 825, "152967": 833, "153": [181, 836, 837, 860, 867], "1531": 836, "15314516": 836, "1533": 560, "154": [825, 836, 837, 860, 867], "155": [836, 837, 840, 842, 860, 867], "1554e": 825, "1557019": 134, "1557108": 134, "1559": 414, "156": [25, 167, 836, 837, 843, 860, 867], "1560": 610, "1567": 854, "15694736": 784, "157": [159, 836, 837, 860, 867], "1570": 837, "15702041": 837, "1575": 836, "158": [14, 820, 836, 837, 860, 867], "158329": 833, "1586": 860, "1588": 837, "15881465": 837, "159": [836, 837, 860, 867], "1590": 833, "1594": [403, 409], "1598": 830, "15k": [178, 179], "15\u884c\u547d\u540d\u4e3a": 748, "15\uc5d0\uc11c": 789, "16": [165, 168, 172, 183, 186, 195, 344, 445, 446, 447, 448, 449, 450, 451, 460, 552, 667, 700, 704, 724, 744, 785, 808, 819, 820, 822, 823, 825, 826, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 846, 850, 854, 855, 856, 860, 863, 867], "160": [836, 837, 840, 860, 867], "1603": 867, "1607": 416, "161": [14, 836, 837, 840, 860, 867], "1618": 836, "16181809": 836, "162": [836, 837, 840, 860, 867], "1627": 839, "163": [136, 151, 836, 837, 860, 867], "1639": 560, "164": [821, 836, 837, 840, 860, 867], "1646": 414, "1646311": 833, "1647": 836, "165": [825, 830, 836, 837, 840, 860, 867], "1658": 560, "166": [836, 837, 860, 867], "166386": 833, "1664": 185, "1667": 9, "167": [14, 836, 837, 860, 867], "16738734": 784, "1678": 442, "168": [836, 837, 850, 860, 867], "1680": 836, "1681403185591509": 691, "1682": 173, "16846068931179736": 691, "1686": 836, "169": [836, 837, 860, 867], "1690": 398, "1695": 822, "1696": 429, "16974127573016262": 691, "1698": 825, "16gb": [14, 724, 808], "16\uc904": 789, "17": [14, 25, 182, 344, 657, 825, 830, 831, 833, 836, 837, 856, 860, 867], "170": [14, 833, 836, 837, 840, 860, 867], "1706": 723, "171": [836, 837, 860, 867], "1710": 771, "1713": 855, "172": [699, 700, 744, 785, 836, 837, 860, 867], "1723": 830, "1724": [830, 854], "173": [14, 836, 837, 860, 867], "1735": [428, 610], "1739": 836, "174": [836, 837, 860, 867], "1745": 560, "175": [700, 744, 785, 836, 837, 840, 860, 867], "1752": [647, 648], "17535": 157, "1757": 825, "17583413999295983": 691, "176": [836, 837, 842, 860, 867], "177": [836, 837, 860, 867], "1773": 830, "1775": 836, "178": [836, 837, 840, 860, 867], "1780": 444, "1785": 429, "1789": 441, "179": [14, 836, 837, 860, 867], "1794": 825, "18": [9, 14, 151, 182, 191, 504, 624, 656, 704, 825, 828, 831, 836, 837, 842, 856, 860, 863, 865, 867], "180": [836, 837, 840, 860, 867], "1804": 412, "1806": 560, "1807": 867, "1809": 395, "181": [836, 837, 838, 860, 867], "1818": [560, 613], "1819e": 825, "182": [14, 836, 837, 860, 867], "183": [155, 187, 836, 837, 860, 867], "18333": 25, "1835": 416, "18389137408509248": 691, "1839": 691, "18395323": 836, "184": [460, 836, 837, 860, 867], "1840": 836, "1843": 691, "18431292077750894": 691, "1845": 830, "1847": 428, "1849": 408, "185": [836, 837, 840, 860, 867], "1850": 410, "186": [836, 837, 860, 867], "186100": 137, "18626464175355095": 691, "1864": 860, "187": [699, 836, 837, 860, 867], "1874": 839, "1877": 460, "188": [25, 165, 174, 836, 837, 838, 860, 867], "189": [836, 837, 860, 867], "1894": 854, "18th": 182, "18\uc904\uc744": 789, "19": [138, 153, 179, 312, 313, 656, 699, 700, 744, 785, 825, 830, 831, 833, 836, 837, 856, 860, 867], "190": [147, 836, 837, 840, 860, 867], "1900": 836, "1902": 441, "1908": 410, "1909": 826, "191": [836, 837, 860, 867], "19117861103555467": 691, "192": [836, 837, 850, 860, 867], "1925": 406, "192640": 25, "192it": 831, "193": [460, 836, 837, 860, 867], "193011360": 699, "1931": [647, 648], "1932390907048961": 691, "1938": 839, "1939": 429, "1939743": 784, "194": [836, 837, 860, 867], "1943": 414, "1947": 833, "195": [836, 837, 840, 860, 867], "1951": 560, "1952": 398, "19536": [184, 860], "1954": 663, "196": [460, 836, 837, 840, 860, 867], "1966": 429, "197": [836, 837, 860, 867], "19717": [25, 176], "19730941704035873": 842, "19735685": 837, "1974": 837, "19793": 25, "198": [133, 825, 836, 837, 860, 867], "199": [836, 837, 860, 867], "1991": 854, "1996": 442, "1998": 833, "19981": 836, "1999": [836, 837], "19990": 836, "19999998807907104": 347, "1_gcn": [828, 854, 859], "1_gnn": [828, 856, 859], "1_graph_classif": [828, 872, 875], "1_introduct": [828, 838, 845], "1_node_classif": [828, 850, 853], "1d": [48, 51, 53, 54, 61, 88, 122, 131, 214, 216, 219, 232, 239, 240, 287, 299, 305, 310, 317, 318, 327, 331, 336, 390, 397, 404, 409, 419, 422, 480, 543, 630], "1e": [4, 10, 245, 428, 432, 433, 477, 723, 724, 808, 820, 854, 856, 857, 860, 867], "1gb": [717, 803], "1m": 173, "1\u5b57\u7b26\u4e32": 737, "1\u8282": 745, "1\u8282\u4e2d": 761, "1\u8282\u4e2d\u5bf9\u5f02\u6784\u56fe\u7684\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": [770, 773], "1\u8282\u4e2d\u5bf9\u6bcf\u79cd\u7c7b\u578b\u7684\u8fb9\u6240\u8ba1\u7b97\u7684\u8282\u70b9\u8868\u793a": 770, "1\u8282\u7684gnn\u6a21\u578b\u4e2d\u8ba1\u7b97\u51fa\u7684\u8282\u70b9\u8868\u793a": [770, 773], "1\uc5d0": 784, "1\uc740": 784, "1\uc744": 784, "1\uc7a5": 793, "1\uc808\uc758": 786, "1\ucc28\uc6d0": 791, "2": [4, 5, 6, 9, 10, 12, 14, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 142, 143, 144, 146, 147, 159, 161, 164, 167, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 183, 184, 186, 188, 189, 190, 197, 205, 207, 216, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 319, 320, 321, 322, 323, 329, 331, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 354, 359, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 459, 460, 476, 477, 478, 479, 480, 501, 504, 542, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 688, 691, 695, 696, 698, 701, 703, 704, 705, 707, 708, 714, 715, 717, 719, 720, 721, 722, 724, 725, 729, 732, 734, 735, 741, 743, 744, 745, 747, 748, 749, 751, 752, 753, 758, 759, 761, 762, 763, 764, 765, 769, 772, 773, 774, 775, 781, 784, 785, 786, 788, 789, 790, 792, 794, 800, 801, 803, 804, 805, 806, 807, 808, 809, 813, 815, 817, 818, 819, 820, 821, 822, 823, 826, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 847, 849, 850, 851, 853, 854, 855, 856, 867, 869, 872, 873, 875], "20": [9, 25, 130, 161, 162, 171, 172, 174, 175, 181, 192, 209, 235, 303, 312, 313, 323, 404, 407, 413, 415, 418, 420, 430, 431, 432, 433, 441, 442, 552, 609, 619, 620, 624, 631, 650, 656, 657, 667, 669, 670, 697, 699, 730, 732, 733, 734, 770, 772, 773, 774, 814, 815, 816, 817, 819, 820, 822, 825, 828, 831, 836, 837, 838, 840, 841, 842, 845, 854, 856, 857, 859, 860, 863, 866, 867], "200": [200, 560, 697, 783, 821, 826, 836, 837, 838, 840, 860, 867], "2000": [4, 9, 126, 250, 673, 822, 836, 837], "20000": 836, "2002": [118, 134, 167, 410], "2003": [146, 147, 169, 174, 195], "2005": [161, 836], "20053732": 836, "2008": 162, "200\uac1c": 783, "201": [836, 837, 860, 867], "2010": 440, "2011": 432, "2014": [181, 825], "2015": [135, 136, 410, 819, 860], "2016": [151, 152], "2017": [820, 822, 830, 831, 833, 836, 837, 840], "2018": [164, 166, 560, 691, 840], "20181320245665535": 691, "2019": 819, "202": [836, 837, 860, 867], "2020": [822, 830, 833, 836, 837], "2020\u5e749\u6708": 752, "2021\ub144": 793, "2022": [830, 833, 836, 837], "2023": [214, 299, 305, 317, 565, 831], "2024": [830, 833, 836, 837, 854], "203": [836, 837, 860, 867], "2034": 836, "204": [836, 837, 860, 867], "20466": 157, "2047": 836, "2048": 449, "2049": 837, "204902": 837, "205": [699, 700, 744, 785, 836, 837, 860, 867], "2053": [437, 438, 439, 440, 441, 442, 443, 444, 445], "2055": 836, "2059": 854, "206": [836, 837, 843, 860, 867], "2062": 460, "207": [460, 836, 837, 860, 867], "208": [460, 836, 837, 860, 867], "2080": 444, "2081": 854, "2082": 825, "2085": 406, "209": [173, 460, 836, 837, 860, 867], "2095": 410, "20gb": 235, "20x10": 866, "21": [14, 162, 312, 313, 624, 699, 825, 826, 830, 831, 833, 836, 837, 856, 860, 867], "210": [184, 836, 837, 860, 867], "2101": 406, "2102": [411, 433, 854, 855], "2104": 162, "2106": [416, 833], "2108": 448, "211": [177, 836, 837, 860, 867], "2110": 560, "2115": 836, "212": [836, 837, 860, 867], "21209": 25, "2124": 830, "21249204874038696": 841, "2125": 416, "2129": 836, "213": [460, 836, 837, 860, 867], "2134": 412, "2135": 836, "2136": 441, "21394654203489705": 691, "214": [836, 837, 860, 867], "2144": 854, "21474836480": 235, "215": [836, 837, 860, 867], "2154": 428, "2159": 401, "216": [161, 192, 820, 836, 837, 840, 860, 867], "2160": 854, "2162it": 831, "2164886": 833, "2167": 429, "217": [836, 837, 860, 867], "217073": 185, "2172": 854, "2178": 417, "218": [836, 837, 860, 867], "2182": 410, "2188": 854, "219": [836, 837, 838, 860, 867], "21937428942781778": 691, "2194": 445, "21st": 860, "22": [14, 25, 825, 836, 837, 860, 867], "220": [460, 836, 837, 860, 867], "2208": 808, "2209": 808, "221": [830, 836, 837, 860, 867], "22131880861864428": 691, "22155005": 784, "2216": [429, 854], "2219": 854, "222": [836, 837, 860, 867], "2221": 854, "2222": [9, 825], "2224": 837, "22296293": 699, "223": [836, 837, 860, 867], "2230": 837, "2232": 854, "2233": 854, "2235": 428, "2236": 854, "2237": 854, "224": [836, 837, 860, 867], "2240": 394, "2243": 854, "2245": [25, 854], "225": [460, 836, 837, 860, 867], "2250": 854, "2251": 830, "2254": 854, "2256": 854, "2257": 836, "2258": 854, "2259": 854, "226": [836, 837, 860], "2260": 854, "2261": 854, "2264": 854, "22662": 182, "227": [830, 836, 837, 860], "2270": 854, "2272": [416, 854], "2273178": 833, "2276": 854, "2277": 149, "228": [14, 836, 837, 860], "2282": [444, 854], "2284": 460, "2285": 836, "2286": [854, 855], "2287": 854, "2289": 394, "229": [836, 837, 860], "2291": [440, 441, 854], "2295": 837, "22982": 833, "23": [181, 195, 396, 397, 398, 699, 700, 703, 744, 747, 785, 788, 825, 831, 836, 837, 860, 867], "230": [560, 836, 837, 840, 860], "2302": [137, 171, 180, 182, 188], "2303": 416, "23033": [25, 166], "2304": [25, 825], "231": [828, 836, 837, 860, 863, 865], "2310": 305, "23142237259162102": 691, "2316": 836, "232": [163, 181, 836, 837, 842, 860], "2323": 830, "2323073446750641": 841, "2324": [440, 854], "2326": 414, "232965": 25, "233": [836, 837, 860], "2330": 460, "2333e": 825, "2336": 836, "23368113896545695": 691, "2337": [691, 854], "2338": [394, 854], "2339": 854, "234": [460, 836, 837, 860], "2340": 396, "2341": 854, "2342": 406, "2343": 854, "2347": 406, "2348": [429, 854], "235": [836, 837, 860], "2351": [437, 438, 439, 440, 441, 442, 443, 444, 445], "236": [836, 837, 860], "2360": 445, "2361": 854, "2362": 428, "2363": 442, "23682038840665198": 691, "237": [157, 836, 837, 860], "2370": 395, "2372": [175, 857], "2373": 560, "2379": 854, "238": [136, 836, 837, 860], "2384": 408, "2387": 412, "239": [460, 836, 837, 860], "2392": 825, "24": [166, 175, 436, 624, 650, 825, 831, 833, 836, 837, 857, 860, 867], "240": [25, 166, 460, 836, 837, 860], "2402": 846, "2408": 560, "241": [836, 837, 860], "2415": 836, "2416": 833, "2417": 438, "242": [836, 837, 860], "2426": [437, 438, 439, 440, 441, 442, 443, 444, 445], "24285506608575758": 691, "243": [836, 837, 860], "2432": 134, "2436": 839, "2439": [836, 855], "244": [25, 822, 836, 837, 860], "2449029": [4, 240], "24492": 137, "245": [135, 177, 836, 837, 859, 860], "2450": 429, "2451": 411, "246": [830, 836, 837, 860], "2467": 460, "2468565": 833, "2469": 416, "247": [152, 836, 837, 860], "2472495901894738": 691, "2473": 417, "248": [836, 837, 860], "2481": 401, "24849": 833, "2486": 822, "2489": 825, "249": [836, 837, 860], "2495": 836, "2496": 185, "2497": 428, "2498772": 836, "2499": [830, 836], "25": [9, 147, 161, 404, 407, 435, 436, 460, 549, 695, 696, 741, 742, 781, 782, 820, 822, 825, 836, 837, 838, 840, 841, 850, 851, 855, 860, 867], "250": [160, 460, 822, 836, 837, 860], "2500": [9, 613, 825, 855], "2502": 423, "250k": 195, "251": [193, 836, 837, 860], "2512": 854, "2513": 429, "25168276": 837, "2517": 837, "25177597999572754": 245, "252": [836, 837, 860], "2524": 416, "25244230031967163": 841, "2525": 854, "2527": 837, "253": [836, 837, 860], "2530": 663, "2533": 428, "253458867276219": 691, "2536": 830, "254": [836, 837, 860], "2541": 560, "2543": 836, "255": [830, 836, 837, 850, 860], "2556": 460, "256": [723, 724, 808, 821, 822, 830, 831, 836, 837, 850, 851, 860, 873], "2561": 837, "2563e": 825, "257": [14, 836, 837, 860], "258": [830, 836, 837, 860], "2585": 837, "259": [836, 837, 860], "2591": 830, "2597": 429, "26": [165, 825, 830, 831, 833, 836, 837, 860, 867], "260": [836, 837, 860], "2607": 429, "261": [836, 837, 860], "2611": 429, "262": [159, 836, 837, 860], "2622": 428, "263": [836, 837, 860], "2636": 825, "2638": 428, "264": [836, 837, 860], "2643": 428, "2644": [416, 429], "2649": 428, "26499036865016423": 691, "265": [836, 837, 860], "2650": 691, "2652": 437, "2654": [414, 440, 460], "2658": 429, "2659": 460, "266": [836, 837, 860], "2663": [429, 836], "2669": 408, "267": [460, 836, 837, 860], "2674": 860, "2675": 428, "2679": 836, "268": [836, 837, 860], "2684": 429, "2687": 560, "2688": [403, 409, 836, 839], "2689": [602, 622, 825], "269": [836, 837, 838, 860], "2695": [647, 648], "27": [25, 631, 825, 836, 837, 842, 860, 867], "270": [836, 837, 840, 860], "2702": 836, "2703": 440, "2706": 855, "2708": [25, 154, 820, 821, 823, 830, 838, 840, 841, 854, 856, 857], "2709": [437, 438, 439, 440, 441, 442, 443, 444, 445], "271": [460, 836, 837, 860], "2716": 429, "27163": 170, "2719": 420, "272": [170, 836, 837, 860], "2721": [128, 129], "272115": 157, "27265567": 837, "2726917862892151": 841, "2727": 837, "273": [836, 837], "2730008213674695": 691, "2733": 428, "2738": [428, 429], "274": [836, 837, 840, 856], "2743": 438, "275": [836, 837], "2751": 836, "2757": 416, "276": [836, 837], "2762": 854, "2766": [647, 648], "2767": 836, "277": [163, 836, 837], "2771": 839, "2775": 118, "278": [836, 837], "2780": 429, "2783258": 163, "2783370": 163, "2787": 460, "2789": 460, "2789902": 837, "279": [836, 837], "2790": 837, "2794": 428, "2796588354307046": 691, "2797": 417, "28": [9, 169, 195, 427, 825, 826, 833, 836, 837, 841, 860, 867], "280": [836, 837, 860], "281": [836, 837], "282": [836, 837], "282119": 843, "2823": [429, 560], "2826": 663, "2828": [435, 549], "283": [820, 836, 837], "2833": 825, "28357022069634585": 691, "28367647637469273": 691, "284": [25, 836, 837, 838], "285": [836, 837], "2852": 406, "2855": 412, "2855e": 825, "286": [836, 837], "2863627767733977": 691, "2864": 691, "287": [836, 837], "287326": 25, "2876": 429, "288": [164, 820, 836, 837], "2882": 460, "289": [836, 837], "29": [144, 195, 624, 699, 700, 744, 785, 825, 826, 828, 836, 837, 842, 845, 860, 867], "290": [836, 837], "29000": 867, "2908": 429, "291": [828, 836, 837, 857, 859], "2918": 560, "292": [836, 837], "29252520203590393": 841, "2927": [460, 836], "293": [836, 837], "2935": 836, "2938": 837, "294": [836, 837], "29426213": 836, "2943": 836, "295": [836, 837], "29501": 846, "2953": 831, "296": [822, 836, 837], "2962": 428, "29660083": 784, "297": [836, 837], "2976": 429, "298": [155, 178, 179, 836, 837], "299": [836, 837], "2994": [417, 441], "2_capsul": [828, 866, 869], "2_dglgraph": [828, 839, 845], "2_link_predict": [828, 851, 853], "2_node_classif": [828, 873, 875], "2_small_graph": [828, 862], "2a240410": [830, 833, 836, 837], "2d": [299, 343, 390, 397, 419, 422, 453, 571], "2gb": [724, 808], "2k": 635, "2motif": 141, "2x3": 31, "2xlarg": 14, "2\uac1c\uc758": 784, "2\ub97c": 795, "2\ubc88\uc9f8": 801, "2\uc7a5": [793, 813, 817], "3": [4, 5, 6, 9, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 138, 139, 142, 143, 161, 169, 172, 173, 174, 176, 178, 179, 183, 190, 197, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 240, 243, 244, 245, 246, 247, 248, 249, 250, 287, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 317, 319, 320, 321, 323, 329, 331, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 354, 359, 386, 388, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 431, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 476, 477, 478, 479, 501, 504, 505, 542, 549, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 571, 572, 573, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 637, 638, 642, 643, 644, 645, 647, 648, 649, 653, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 669, 671, 672, 673, 679, 680, 681, 682, 683, 688, 691, 695, 698, 701, 703, 705, 706, 707, 708, 709, 714, 716, 717, 720, 723, 724, 729, 732, 734, 735, 741, 742, 745, 747, 749, 750, 751, 752, 753, 758, 759, 765, 769, 772, 774, 775, 781, 782, 784, 786, 788, 790, 791, 792, 794, 800, 801, 808, 809, 813, 815, 817, 819, 821, 823, 825, 830, 831, 833, 836, 837, 838, 839, 841, 842, 843, 847, 854, 855, 856, 867], "30": [25, 166, 181, 303, 404, 407, 415, 427, 455, 456, 460, 609, 619, 620, 624, 631, 724, 808, 820, 825, 836, 837, 838, 840, 841, 857, 860, 867], "300": [137, 142, 143, 159, 182, 192, 194, 836, 837], "3000": [4, 126, 250, 560, 660, 729, 769, 813, 867], "3003": 867, "30050": [700, 744, 785, 850, 851], "301": [180, 836, 837, 860], "3014": 825, "3015": 836, "3016": 836, "3019": 836, "302": [836, 837], "3020": 437, "3021e": 825, "3025": [403, 409], "3027": 836, "3027939452162367": 691, "3028": 691, "303": [836, 837], "3030": [647, 648], "3038": 854, "3039": 428, "304": [164, 836, 837], "3044": 836, "305": [161, 830, 836, 837], "3053": 401, "3055": 833, "3059": 836, "306": [836, 837], "3063": 416, "3068": 822, "307": [836, 837], "307080": 180, "3076": 855, "3077": 825, "3078": 440, "308": [159, 836, 837], "3080": 417, "3082": 822, "309": [828, 836, 837, 866, 869], "30k": 867, "30x": 846, "31": [118, 119, 164, 166, 699, 700, 706, 744, 750, 785, 791, 826, 831, 836, 837, 860, 867], "310": [159, 836, 837], "3100": 836, "3105": 441, "311": [153, 836, 837], "3111": 836, "3114": 836, "3115": 839, "3118624985218048": 841, "312": [836, 837], "3122": 836, "3126": 460, "313": [836, 837, 840], "31328748118329997": 691, "3134": [437, 438, 439, 440, 441, 442, 443, 444, 445], "313468": 833, "3135": 429, "314": [159, 836, 837], "3148": 691, "3148264185956532": 691, "315": [836, 837], "3155": 825, "316": [836, 837], "3161154827254189": 691, "3163": 423, "3168": [647, 648], "317": [14, 836, 837], "3174": [647, 648, 836], "318": [836, 837], "3187": 825, "3189": 441, "319": [836, 837], "3191": 411, "3194": 825, "32": [25, 146, 163, 172, 207, 339, 390, 418, 448, 460, 692, 706, 738, 750, 778, 791, 819, 826, 830, 833, 836, 837, 860, 867, 872], "320": [836, 837], "3203": 442, "321": [836, 837], "3210": 825, "3219496197945605": 691, "322": [836, 837], "3223e": 825, "3229": 855, "323": [836, 837], "3231": 441, "3235": 445, "324": [836, 837], "3246e": [635, 671], "325": [187, 836, 837], "3253": 836, "326": [836, 837], "327": [836, 837], "327576": 25, "328": [836, 837], "3283": 836, "329": [836, 837], "3295": 397, "32it": 831, "32x": 846, "33": [609, 624, 825, 833, 836, 837, 842, 857, 860, 867], "330": [165, 836, 837], "3303": 422, "3304": 425, "3305": 837, "3309304714202881": 841, "331": [836, 837], "3314": 839, "3316": 424, "332": [836, 837, 838], "33234211884156384": 691, "3326": 417, "3327": [25, 150, 825], "333": [151, 820, 836, 837], "3330": [437, 438, 439, 440, 441, 442, 443, 444, 445, 836], "3333": [9, 359, 574, 575, 600, 659], "33391": 134, "334": [836, 837], "3342": 416, "3344": 854, "3346": [647, 648], "335": [836, 837], "3355": 836, "3357": [825, 837], "336": [836, 837, 840], "3364": 416, "337": [836, 837], "3370": 836, "3371": 412, "338": [828, 836, 837, 855, 859], "3381": 836, "3381872773170471": 477, "339": [836, 837], "3391": 808, "339264": 833, "33929432608774135": 691, "3394": 808, "3397": 837, "34": [25, 152, 166, 167, 836, 837, 843, 860, 867], "340": [836, 837], "3400": 610, "3402": 836, "34021791": 836, "341": [836, 837], "3419": 822, "342": [836, 837], "3422": 836, "34270118": [698, 699], "343": [836, 837], "3439899477636117": 691, "344": [820, 830, 836, 837], "3447": 416, "34493": 25, "345": [14, 158, 836, 837], "3451e": 825, "3455": [647, 648], "34598515": 836, "346": [836, 837], "3460": 836, "3462": 414, "3466": 406, "3468": 460, "347": [836, 837], "3479": 837, "348": [836, 837], "34846782265758314": 691, "3489": 663, "349": [836, 837, 840], "3493606150150299": 841, "3497": 417, "34it": 831, "35": [145, 147, 174, 820, 836, 837, 838, 840, 841, 845, 860, 867], "350": [142, 836, 837], "3502": 830, "3503": 830, "3504": 830, "35076354": 784, "351": [161, 836, 837], "3513": 837, "3514": 408, "3516": 400, "35179482": 836, "3518": 836, "35188138": 836, "3519": 836, "352": [836, 837, 842], "3523777809254057": 691, "3525": 836, "353": [820, 836, 837], "3533": 836, "354": [836, 837], "3541": 417, "355": [836, 837], "3552": 855, "356": [172, 836, 837], "3569": 412, "357": [836, 837], "358": [836, 837], "359": [14, 836, 837], "3596": [854, 857], "36": [132, 828, 836, 837, 842, 860, 862, 867], "360": [836, 837], "361": [836, 837], "36101": 149, "3615": 855, "362": [836, 837], "3623": 411, "363": [836, 837], "3637": [437, 438, 439, 440, 441, 442, 443, 444, 445], "364": [836, 837], "3643": 460, "3648": 134, "365": [836, 837], "3653": 837, "3658": 408, "366": [836, 837], "3663": 833, "3664": 395, "36649684241348557": 691, "3665": [445, 691], "3667": 833, "3669": 833, "367": [836, 837], "3672": 118, "3677": [825, 836], "3677457": 836, "36786902637778773": 691, "36789679527282715": 841, "368": [836, 837], "3684": 854, "3685": 401, "369": [836, 837], "3697": 836, "37": [155, 187, 195, 836, 837, 860, 867], "370": [836, 837], "3700": 410, "370293": 843, "3703": [150, 836], "371": [836, 837], "3717": [417, 854], "372": [836, 837], "3720": 836, "373": [14, 836, 837], "3736": 460, "3737": 442, "374": [836, 837], "375": [836, 837], "3758": [397, 837], "376": [836, 837], "377": [836, 837], "3770": 610, "3772": 460, "3776": 830, "378": [836, 837, 842], "3780": 830, "3781": 416, "3785": 830, "3788": 860, "379": [14, 836, 837], "3796": 219, "38": [836, 837, 859, 860, 867], "380": [836, 837], "3803": 411, "3805": [403, 409], "3807": 837, "3808": [647, 648], "3809": 416, "381": [836, 837], "382": [836, 837], "3820": 441, "3825": [403, 409], "383": [836, 837], "3837": 825, "384": [164, 836, 837], "3840": 118, "3847": 416, "385": [836, 837], "3858654499053955": 841, "386": [836, 837], "3860": 837, "3861": 855, "3863": 855, "3865": 825, "3866": 423, "3868": 836, "387": [836, 837], "3872": [647, 648], "388": [820, 836, 837], "3886": 833, "3887": 833, "3888": 833, "389": [820, 836, 837], "3891": [437, 438, 439, 440, 441, 442, 443, 444, 445], "3893": [416, 825], "3896": [825, 836], "39": [25, 163, 195, 460, 624, 830, 831, 833, 836, 837, 860, 867], "390": [836, 837], "391": [836, 837], "39161865931662243": 691, "392": [836, 837], "3920": 854, "3929": 836, "39294038": 836, "393": [826, 836, 837], "3934": [647, 648], "3938": 663, "394": [836, 837], "3943": [403, 409], "395": [836, 837], "39534097273254654": 691, "39545326": 836, "3955": 836, "396": [836, 837], "397": [836, 837], "3975": 836, "398": [826, 836, 837], "3982": 837, "3985": 460, "3988": [836, 837], "399": [826, 836, 837], "3995679": 837, "3996": [422, 837], "39it": 831, "3_generative_model": [828, 865], "3_message_pass": [828, 840, 845], "3_tree": [828, 860, 862], "3d": [179, 343, 434, 436, 446, 448, 449, 453, 571], "3e": 821, "3f": [820, 821, 823, 830, 838, 840], "3x3": 825, "3\uac00\uc9c0": [779, 781, 805], "3\uac1c\uc758": [795, 804], "3\ub2e8\uacc4\ub85c": 811, "3\uc7a5": [793, 806, 813, 817], "4": [4, 5, 9, 12, 14, 20, 21, 22, 26, 27, 30, 34, 35, 36, 37, 46, 47, 51, 55, 56, 58, 60, 61, 73, 74, 75, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 107, 113, 114, 116, 118, 119, 120, 122, 123, 124, 125, 126, 127, 131, 132, 142, 143, 148, 172, 173, 195, 209, 210, 213, 214, 215, 216, 217, 219, 220, 229, 230, 240, 243, 244, 245, 246, 250, 287, 294, 295, 299, 300, 301, 302, 303, 304, 305, 310, 319, 320, 321, 323, 329, 331, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 353, 359, 386, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458, 460, 476, 477, 478, 505, 542, 549, 557, 558, 559, 562, 564, 565, 566, 569, 571, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 612, 613, 614, 615, 616, 619, 620, 621, 622, 624, 628, 631, 632, 635, 642, 644, 645, 647, 648, 649, 658, 660, 661, 663, 665, 666, 669, 671, 672, 683, 695, 696, 699, 700, 701, 704, 705, 706, 707, 708, 714, 716, 717, 721, 723, 724, 729, 734, 735, 742, 743, 744, 745, 748, 749, 750, 751, 752, 758, 760, 762, 764, 769, 774, 775, 781, 782, 784, 786, 789, 790, 791, 792, 794, 800, 802, 805, 807, 808, 813, 817, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 838, 839, 841, 843, 847, 850, 851, 856, 859, 860, 866, 867], "40": [138, 147, 159, 340, 385, 460, 619, 624, 820, 833, 836, 837, 838, 840, 841, 856, 860, 867], "400": [620, 697, 783, 836, 837, 840, 863, 867], "4000": [173, 822, 825], "4000000": 210, "4001": 825, "4007": 460, "400\uac1c\uc758": 783, "401": [836, 837], "4014": 836, "402": [836, 837], "4022": 410, "4028": 808, "403": [836, 837], "404": [836, 837], "4041532278060913": 841, "4042": [441, 856], "4045": 839, "405": [836, 837], "4051": 836, "4055": 836, "40559906615287566": 691, "406": [560, 820, 836, 837], "4061": 854, "4063": 416, "407": [836, 837], "40707309111756307": 691, "4074e": 825, "4079": 836, "40794455": 836, "408": [836, 837], "4081642382536248": 691, "409": [836, 837], "4090": 856, "40943": 191, "4096": 416, "409782": 837, "4098": 837, "41": [159, 191, 826, 836, 837, 860, 867], "410": [168, 186, 820, 836, 837], "4102c744bb9d6fd7b40ac67a300e49cd87e28392": [693, 739, 779], "4104": 147, "411": [836, 837], "4111": [437, 438, 439, 440, 441, 442, 443, 444, 445], "41127": 138, "412": [836, 837], "4122": 831, "4126": 416, "413": [836, 837, 838], "414": [836, 837], "4141": 836, "415": [152, 836, 837], "41516080644186737": 691, "41527155506593394": 691, "416": [836, 837], "4167": 9, "417": [836, 837], "4173": 836, "4177": 856, "418": [836, 837], "419": [14, 836, 837], "4196": 856, "4197": 856, "4197669213305396": 691, "41it": 831, "42": [25, 198, 822, 836, 837, 860, 867], "420": [836, 837, 840], "4202": 837, "421": [836, 837], "4215": 825, "4216530595907526": 691, "422": [836, 837], "4220": 460, "42208659648895264": 841, "4221": [417, 837], "42222014": 784, "42287485": 836, "4229": 836, "423": [836, 837], "42315516": 836, "4232": 836, "42320884": 836, "4239": 856, "424": [836, 837], "4244": 825, "4249": [437, 438, 439, 440, 441, 442, 443, 444, 445], "425": [836, 837], "426": [836, 837], "4261": 856, "4268": 691, "4268254673041745": 691, "427": [836, 837], "4273": 410, "4279": 416, "428": [836, 837], "4280": 837, "429": [836, 837], "4293": 822, "4296e": 825, "42988138237505735": 691, "4299": 691, "43": [703, 747, 788, 836, 837, 860, 867], "430": [836, 837], "431": [181, 192, 836, 837], "4313": 825, "4318": [647, 648], "432": [14, 836, 837], "4323": 422, "4325": [128, 129], "433": [836, 837, 860], "4331": 397, "4335": 397, "4337": 860, "4338": 444, "434": [836, 837, 840], "4347": 856, "4349": [437, 438, 439, 440, 441, 442, 443, 444, 445], "435": [836, 837], "436": [836, 837], "4368": 856, "43689871": 837, "4369": 837, "437": [836, 837], "438": [836, 837], "43835112": 837, "4384": 837, "439": [836, 837], "44": [174, 825, 826, 828, 831, 836, 837, 840, 845, 860, 867], "440": [836, 837], "4400": 173, "4407": 831, "441": [836, 837], "4412": 836, "44128847122192383": 841, "442": [836, 837], "4424e": 825, "4427": 856, "443": [836, 837], "4432": 837, "4436": 837, "444": [836, 837], "44412796119211184": 691, "445": [14, 830, 836, 837, 838], "4451": [647, 648], "4457": 822, "4458": 416, "446": [836, 837], "4465": 412, "447": [836, 837], "4470": 837, "4470617033458436": 691, "4475": 854, "448": [836, 837], "4482": 417, "4488": 825, "449": [828, 830, 836, 837, 840, 845], "4491": 836, "4492": 856, "4497": 442, "45": [163, 460, 820, 836, 837, 838, 840, 841, 843, 846, 860, 867], "450": [820, 836, 837], "4500966": 867, "4508": 663, "451": [836, 837], "4511": 444, "4512": 836, "4513": 836, "452": [836, 837], "4523600060547709": 691, "45259908050605724": 833, "4527": 836, "453": [836, 837], "4534": 856, "4535e": 825, "454": [836, 837], "4542": [416, 460], "45441619816038514": 691, "455": [836, 837, 840], "4553": 856, "4556": 856, "45579974": 836, "4558": 836, "456": [149, 836, 837], "4568": 856, "457": [14, 836, 837], "4570": [403, 409, 808, 837], "4571": 836, "4572": 822, "458": [836, 837], "459": [836, 837], "4590": 460, "46": [428, 826, 836, 837, 860, 867], "460": [836, 837], "4600": 173, "4602": 825, "4609": 808, "461": [836, 837], "4614": 836, "46141073": 836, "462": [836, 837], "4620": 460, "4629": [128, 129], "463": [836, 837], "4630": 460, "4631": 417, "464": [159, 836, 837], "4642": 856, "4647410679872376": 691, "465": [836, 837], "4652": 416, "46526044607162476": 841, "4653": 442, "4654086994009452": 691, "466": [836, 837], "4664": 118, "467": [836, 837], "4673": 417, "4675": 825, "468": [836, 837], "4682": 412, "4684": 822, "469": [836, 837], "4692371689047904": 691, "4698": 397, "47": [428, 560, 624, 836, 837, 860, 867], "470": [836, 837], "4702": 836, "471": [836, 837], "4719": 825, "472": [820, 836, 837], "4721": 822, "4722": 856, "47224962583565544": 691, "473": [836, 837], "4731": [663, 825], "47382": [168, 186], "474": [161, 836, 837], "475": [836, 837], "4755": [437, 438, 439, 440, 441, 442, 443, 444, 445], "4756": 691, "47562693094002173": 691, "476": [836, 837], "4760": 440, "4762": 438, "477": [836, 837], "4770": 411, "4770019763881086": 691, "478": [14, 826, 836, 837], "479": [836, 837], "4793": [836, 856], "4794": 836, "47941436": 836, "4797": 400, "48": [428, 836, 837, 860, 867], "480": [836, 837], "4800": 173, "4801": [403, 409], "4805": 410, "4809e": 825, "481": [820, 836, 837], "4817": [460, 836], "482": [836, 837], "4821": 412, "483": [836, 837], "483142": 158, "4837": 437, "484": [836, 837], "4840": 839, "4847": 416, "485": [836, 837], "4854": 822, "4858": 831, "486": [163, 836, 837, 840], "487": [14, 836, 837], "488": [836, 837], "4880": 825, "48810": 132, "4883": 825, "4884": 174, "4885": 442, "4888": 4, "489": [820, 836, 837], "48921": 180, "49": [25, 428, 836, 837, 860, 867], "490": [826, 836, 837], "49037522512771525": 691, "4904": 442, "4909": 691, "490938012147181": 691, "491": [135, 826, 836, 837], "4910e": 344, "492": [181, 836, 837], "4921e": 344, "4922": 837, "4924": 854, "4928e": 825, "493": [152, 836, 837], "493888090726854": 691, "49397782380750765": 691, "494": [836, 837], "4940": [442, 691], "4948": 416, "495": [14, 152, 836, 837], "4954": [647, 648, 836], "496": [836, 837, 840], "4960576295852661": 841, "4961": 856, "4964": 822, "497": [836, 837], "4977": 442, "498": [836, 837, 840], "4983": [822, 836], "499": [836, 837], "4994": 822, "4998": 836, "4999": 837, "4_link_predict": [828, 841, 845], "4_old_win": [828, 869], "4_rgcn": [828, 855, 859], "4d": 179, "4f": [822, 831, 854, 855, 856, 857, 860, 872, 873], "4m": [210, 717, 803], "4part_data": [850, 851], "4th": 724, "4\u6761\u8fb9": 748, "4\uac00\uc9c0": 780, "4\uac1c\uac00": 788, "4\uac1c\uc758": [791, 813], "4\uc7a5": [793, 813, 815, 817], "5": [5, 6, 9, 12, 14, 20, 22, 26, 27, 28, 34, 35, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 91, 92, 93, 94, 96, 100, 101, 102, 107, 113, 114, 115, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 137, 142, 143, 145, 146, 147, 148, 149, 152, 155, 156, 159, 161, 163, 172, 173, 174, 178, 184, 185, 187, 193, 197, 200, 205, 210, 214, 216, 219, 220, 229, 230, 243, 245, 246, 250, 292, 294, 295, 299, 300, 301, 302, 303, 304, 305, 310, 317, 318, 319, 320, 323, 329, 335, 336, 337, 340, 341, 342, 343, 344, 346, 353, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 459, 477, 478, 504, 505, 542, 549, 553, 554, 558, 559, 560, 563, 564, 565, 566, 567, 571, 576, 577, 596, 603, 609, 610, 612, 614, 615, 616, 617, 621, 628, 630, 631, 632, 642, 644, 645, 647, 648, 649, 650, 653, 656, 657, 658, 660, 661, 663, 665, 666, 669, 670, 683, 685, 687, 688, 691, 693, 695, 696, 698, 701, 702, 703, 704, 705, 706, 708, 709, 714, 715, 716, 717, 718, 719, 722, 724, 727, 735, 739, 742, 744, 745, 746, 747, 748, 749, 750, 752, 753, 758, 759, 762, 764, 767, 769, 775, 779, 782, 785, 786, 787, 788, 789, 790, 791, 794, 800, 801, 805, 807, 808, 811, 813, 819, 820, 821, 822, 823, 825, 830, 831, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 856, 857, 860, 866, 867, 872, 873], "50": [146, 171, 174, 175, 181, 428, 434, 436, 460, 550, 560, 624, 820, 836, 837, 838, 840, 841, 854, 856, 857, 860, 867], "500": [150, 154, 160, 176, 703, 729, 730, 747, 769, 770, 788, 813, 814, 820, 821, 823, 836, 837, 838, 840, 841, 842, 854, 856, 857, 866], "5000": [4, 9, 25, 126, 191, 250, 359, 392, 393, 427, 480, 552, 560, 574, 575, 596, 600, 613, 659, 667, 729, 769, 813, 825], "50000": [14, 146, 158], "500000": 210, "500k": 210, "501": [836, 837], "5010": [822, 854], "5011": 412, "502": [836, 837], "5021": 836, "503": [836, 837], "5030": 416, "5034": 808, "5039": 808, "504": [836, 837, 840], "5040": 839, "5041": [403, 409], "5042": 420, "5048": 836, "5049877": 836, "505": [836, 837], "5050": 836, "5053": 395, "5054": 438, "506": [836, 837, 840], "5065": [647, 648], "507": [836, 837], "508": [836, 837], "509": [836, 837, 857], "5097": 460, "51": [193, 428, 836, 837, 860, 867], "510": [836, 837], "5102": 825, "511": [836, 837], "5117": 663, "5119e": 825, "512": [446, 449, 685, 687, 836, 837, 860], "513": [836, 837], "514": [836, 837, 838], "5142": 460, "515": [193, 836, 837], "5159": 412, "516": [836, 837], "5169": 416, "517": [836, 837], "5171": [647, 648], "518": [836, 837], "5182": [647, 648], "5183": 836, "519": [828, 836, 837], "5191278830882644": 691, "5192": 400, "5196": 825, "5197": [437, 438, 439, 440, 441, 442, 443, 444, 445, 647, 648, 691], "5197462471155317": 691, "52": [428, 822, 826, 836, 837, 860, 867], "520": [836, 837], "52000000": 240, "5201": 185, "521": [836, 837], "5215": 425, "5217": 427, "522": [836, 837], "5221": [442, 460], "5227": 691, "5227112950269823": 691, "523": [836, 837], "52306461": 836, "5231": 836, "5232988595962524": 841, "5236": 412, "5237": 442, "524": [14, 820, 836, 837], "5243": 420, "525": [836, 837], "5251800239734318": 691, "5259": 400, "526": [836, 837], "5260": 839, "5262": 839, "5266": 412, "5267": 825, "527": [836, 837], "52707121": 836, "5271": 836, "5278": [437, 438, 439, 440, 441, 442, 443, 444, 445], "528": [836, 837], "5286": 408, "5287": 417, "529": [219, 836, 837, 857, 860], "529195480661293": 691, "5297": [647, 648], "5299": 822, "52it": 831, "53": [14, 428, 826, 836, 837, 860, 867], "530": [836, 837], "5303": [647, 648], "5306": 442, "531": [836, 837], "5312": [460, 836], "532": [836, 837], "5322": 445, "5327": 400, "533": [836, 837], "5333": 9, "534": [836, 837], "5341": 822, "5347": [403, 409], "5348": 691, "534822233529295": 691, "535": [836, 837], "5352": 420, "5357": 822, "536": [836, 837], "5365": 691, "5365210052235699": 691, "537": [836, 837], "538": [836, 837], "5382": 836, "53822751": 836, "539": [836, 837], "5391": 839, "5392": 825, "5398": 423, "54": [428, 836, 837, 860, 867], "540": [836, 837], "5400687466285844": 691, "5401": 691, "5406": 621, "5409": 822, "541": [836, 837], "5410": 854, "5413": 836, "5418": [647, 648], "542": [14, 836, 837], "5420": 444, "5421": 410, "543": [836, 837], "544": [184, 836, 837], "5443": 836, "5445": 437, "545": [836, 837], "5454": [416, 663], "5454703921677284": 691, "5455": 691, "546": [836, 837], "547": [836, 837], "5477868606453535": 691, "548": [830, 836, 837], "549": [836, 837], "5490": 425, "5491": 837, "5495035052928215": 691, "5499": 837, "55": [147, 181, 428, 820, 825, 828, 836, 837, 838, 840, 841, 856, 859, 860, 867], "550": [836, 837], "551": [836, 837, 840], "5511": 441, "5512": 410, "5513": 425, "5514": 822, "5519": 836, "552": [836, 837], "5520": [460, 831], "5527": 822, "5529": 440, "553": [836, 837], "5538": 441, "554": [836, 837], "5540": 417, "5541": [128, 129], "5543": [822, 836], "5546": 836, "555": [836, 837], "5551": 416, "556": [836, 837, 840], "5561": 822, "5563827995742111": 691, "5564": 691, "557": [836, 837], "5575": [825, 836], "558": [820, 836, 837], "559": [836, 837], "5593": 856, "55it": 831, "56": [428, 836, 837, 860, 867], "560": [836, 837], "561": [836, 837, 856], "56106263": 837, "5611": 837, "5612": 663, "5614": 118, "5614197853127827": 691, "562": [820, 836, 837, 856], "5628": 822, "563": [836, 837], "564": [836, 837], "5643": 416, "5646": 831, "565": [836, 837], "5651": 837, "5655": 837, "5658": [437, 438, 439, 440, 441, 442, 443, 444, 445], "566": [560, 820, 836, 837], "5661": 825, "5668682": 133, "567": [836, 837], "5671": 460, "5673": 837, "5678": 860, "56790": 833, "568": [169, 836, 837], "5684754521963824": 833, "56898159": 836, "569": [836, 837], "5690": 836, "5692": [647, 648], "57": [428, 624, 823, 836, 837, 860, 867], "570": [836, 837], "5707": 836, "571": [836, 837], "5711": 416, "5715": 837, "572": [836, 837], "5721": 412, "5725": [437, 438, 439, 440, 441, 442, 443, 444, 445], "5725330322207948": 691, "573": [14, 820, 836, 837], "574": [836, 837], "574418": 25, "5746575593948364": 841, "5746912787380253": 691, "5749": 691, "5749339182767451": 691, "575": [836, 837, 840], "576": [836, 837], "577": [836, 837], "578": [836, 837], "579": [836, 837], "5799": 836, "58": [14, 831, 836, 837, 860, 867], "580": [836, 837], "581": [836, 837], "5813": 836, "582": [836, 837], "5822": 440, "583": [836, 837, 845], "584": [836, 837], "5840": 445, "5845": 460, "5847": 437, "5849": 406, "585": [836, 837], "5854": 808, "5859": 831, "586": [836, 837], "587": [836, 837], "5870": 854, "5873": 423, "5874": 836, "5878": 416, "5879": 825, "588": [14, 836, 837], "5887": 822, "589": [836, 837], "5896": [836, 837], "58987": 833, "59": [25, 155, 187, 460, 828, 836, 837, 841, 845, 860, 867], "590": [836, 837, 838], "5901": [647, 648, 836], "59071": 158, "5908": 808, "591": [836, 837], "5913335505943637": 691, "5917": 825, "592": [145, 836, 837], "5923": 663, "5929": 836, "593": [836, 837], "5932": 836, "5937484188166621": 691, "59375881": 837, "5938": 837, "594": [836, 837], "5942": 438, "5943": 854, "5945": [403, 409], "595": [821, 836, 837], "596": [836, 837], "5960": 440, "5962": 808, "5967": 808, "597": [836, 837, 840], "598": [836, 837], "599": [836, 837], "5993": 837, "5_dgmg": [828, 863, 865], "5_graph_classif": [828, 842, 845], "5a0c40b": 863, "5e": [430, 432, 723, 724, 808, 820], "5f": 823, "5x4": 839, "5\uac1c\uc758": 805, "5\uc7a5": [793, 800], "6": [3, 6, 9, 11, 20, 26, 47, 51, 55, 60, 61, 77, 79, 81, 82, 87, 88, 90, 107, 117, 118, 119, 122, 130, 131, 142, 147, 148, 150, 151, 156, 163, 172, 173, 189, 210, 214, 215, 216, 243, 295, 299, 300, 301, 303, 304, 305, 310, 319, 320, 323, 335, 336, 343, 344, 359, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 411, 412, 414, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 554, 558, 560, 566, 571, 619, 635, 637, 642, 644, 645, 657, 665, 671, 687, 688, 701, 704, 708, 713, 727, 729, 730, 732, 745, 748, 752, 757, 758, 769, 770, 772, 783, 786, 789, 799, 800, 813, 814, 815, 819, 821, 823, 825, 830, 831, 833, 836, 837, 839, 843, 845, 856, 860, 866, 867], "60": [169, 176, 189, 460, 619, 624, 820, 831, 836, 837, 838, 840, 841, 860, 867], "600": [25, 836, 837, 863], "6000": 217, "60000": 169, "6000000238418579": 476, "6005": 25, "6008": 416, "601": [836, 837], "602": [181, 836, 837, 838], "6029732541360449": 833, "603": [836, 837], "6032": 438, "6035": 860, "604": [836, 837, 838], "604045": 173, "604094": 173, "6044": 425, "6044638": 836, "6045": [442, 836], "6048": 837, "605": [836, 837], "6052": 837, "606": [826, 836, 837], "6066": [403, 409], "607": [836, 837], "6073": 822, "608": [826, 836, 837, 838], "6080": 836, "609": [836, 837], "6090": 836, "6095": 663, "61": [831, 836, 837, 860, 867], "610": [821, 836, 837], "61048": 833, "6106": 417, "611": [836, 837], "6114": [647, 648], "6118": [437, 438, 439, 440, 441, 442, 443, 444, 445], "6118386331195641": 691, "61191552": 699, "61191553": 699, "61191556": 699, "612": [836, 837], "613": [836, 837], "6135": 825, "614": [820, 836, 837], "6143": 416, "6146": 438, "615": [181, 836, 837], "6156748364694707": 691, "616": [836, 837, 838], "6163": 395, "617": [836, 837], "618": [836, 837, 838], "619": [836, 837], "6199": 442, "61gb": 14, "61m": [717, 803], "62": [831, 836, 837, 860, 867], "620": [836, 837], "620118223673067": 691, "621": [836, 837, 838, 840, 856], "6211": 442, "6213": 460, "6219": 825, "622": [836, 837], "6220": 416, "6221": 460, "6222": 437, "6229739252995067": 833, "623": [836, 837], "624": [836, 837], "625": [836, 837], "6251": 839, "62539528": 240, "6254": 663, "626": [836, 837], "627": [836, 837], "6271e": 825, "628": [836, 837], "629": [836, 837], "6295": 663, "63": [25, 706, 750, 836, 837, 860, 867], "630": [163, 836, 837, 840], "6305": 441, "631": [836, 837], "6317": [441, 825], "6319": 460, "632": [836, 837], "6321": 836, "6325": 663, "633": [836, 837], "6330413772274237": 833, "634": [836, 837], "6340": [416, 822], "6341152387664015": 833, "6344": 837, "634899790318452": 691, "635": [836, 837], "63548679": 837, "6355": [437, 837], "63563": 25, "636": [820, 836, 837], "6363": 825, "6365": [437, 438, 439, 440, 441, 442, 443, 444, 445], "637": [836, 837], "6373": 425, "6375": [406, 822], "6375445528248924": 691, "6376": 836, "6379": [647, 648], "638": [836, 837, 838], "6388": 836, "639": [14, 836, 837], "6390": 854, "6393": 416, "6399": 440, "64": [14, 172, 195, 390, 426, 428, 432, 433, 568, 706, 750, 791, 833, 836, 837, 846, 860, 867], "640": [821, 836, 837, 840], "6408": 410, "641": [820, 836, 837, 840], "6418": 460, "642": [836, 837], "6424041075203866": 833, "6427ed9": [830, 833, 836, 837], "6429410382898755": 833, "643": [836, 837], "6430l": 846, "643287": 836, "6433": 836, "644": [828, 836, 837, 842, 845], "6441": 836, "645": [836, 837], "6453746567017163": 691, "64538": 833, "646": [836, 837], "6462": 836, "6462162561249654": 691, "6467": 837, "647": [836, 837], "6477": 396, "648": [836, 837, 838], "648874463": 699, "649": [836, 837], "6491157421389979": 833, "64915733": 836, "6492": 836, "6494437360242048": 691, "64d0f3f": 14, "65": [153, 820, 826, 836, 837, 838, 840, 841, 860, 867], "650": [136, 836, 837, 840], "6500": 836, "651": [836, 837], "6512e": [635, 671], "6515": [647, 648], "6515654887747911": 833, "652": [14, 836, 837], "6525": 854, "6526": 825, "6526403892728874": 691, "653": [836, 837], "6536504030227661": 841, "654": [830, 836, 837, 838], "6544": 822, "6549": 417, "655": [836, 837], "6557": [435, 549], "6558": 460, "656": [821, 836, 837], "6562": 808, "6568": [403, 409, 420], "657": [836, 837], "6578": 839, "65789451": 836, "6579": 836, "658": [14, 836, 837], "6580": [691, 836], "6580438064356824": 691, "6585": 621, "65854": 182, "659": [836, 837], "6594951663841697": 691, "6595": 691, "6597": 423, "6598": 837, "6598715708878852": 691, "66": [825, 830, 831, 833, 836, 837, 842, 860, 867], "660": [836, 837, 840], "6600": 854, "6605": 836, "66052308": 836, "6609": 831, "661": [836, 837], "6614": 836, "6618": 837, "662": [836, 837], "6624186423087752": 691, "6628": 822, "663": [820, 836, 837], "6634": 836, "664": [836, 837], "665": [836, 837], "6655": 808, "666": [826, 836, 837], "6667": [600, 659], "667": [836, 837, 840], "6677": 836, "6677e": 825, "668": [836, 837], "669": [836, 837], "6694943496824788": 691, "67": [836, 837, 860, 867], "670": [836, 837], "6702": [647, 648], "671": [820, 836, 837], "6717": 822, "672": [836, 837], "6722": 836, "6724697": 836, "6725": 836, "672884": 144, "673": [836, 837], "6732": 836, "67368": 833, "674": [826, 836, 837], "6746269314422184": 691, "675": [836, 837], "6751": 822, "6754": 441, "676": [836, 837, 840], "677": [163, 173, 836, 837], "6776417760682221": 691, "6779": 836, "678": [836, 837], "6782": 857, "679": [836, 837], "6795": 822, "67985810014162": 691, "6799": 691, "68": [170, 826, 831, 836, 837, 860, 867], "680": [836, 837], "6803": 825, "681": [836, 837], "6810484348765842": 691, "6811": [822, 857], "6818": 837, "682": [173, 836, 837], "6825": [437, 438, 439, 440, 441, 442, 443, 444, 445], "6829": 857, "683": [820, 836, 837], "6832": 857, "6835": 857, "6838336964578513": 830, "684": [820, 828, 836, 837, 854, 859], "6840": 857, "6845": [441, 857], "685": [836, 837], "6855": 857, "6857": [836, 857], "686": [836, 837], "6869": 836, "687": [836, 837], "6870": 825, "6871": 417, "6875": 837, "6876": 440, "6878": 857, "6879": 857, "688": [14, 836, 837], "6880353689193726": 841, "6882": 460, "6888": 857, "689": [836, 837], "68909946": 836, "6891": [836, 857], "6893": [647, 648], "69": [173, 826, 836, 837, 857, 860, 867], "690": [821, 826, 836, 837], "6901": 837, "6901745368284345": 691, "6902": 857, "6903": 857, "6906": [118, 839], "6907": 442, "6908": 401, "691": [836, 837], "6910": [663, 854], "692": [836, 837], "6923": 836, "6925": [437, 438, 439, 440, 441, 442, 443, 444, 445], "6927": [857, 860], "692873149428549": 691, "693": [836, 837], "6930": 836, "69304921": 836, "6931": 416, "6933": 857, "6935": [825, 836], "6937": 460, "694": [830, 836, 837], "6943": [808, 857], "6947": 857, "695": [836, 837], "6954": 460, "6955": 442, "696": [836, 837], "6962": [437, 837], "6963": 857, "6964": 857, "697": [836, 837, 840], "698": [14, 836, 837], "6985674921582508": 691, "698592283371875": 691, "6986": [691, 857], "699": [836, 837, 840], "6994": 856, "6996": 825, "6997": 856, "6_line_graph": [828, 856, 859], "6_load_data": [828, 843, 845], "6gb": 699, "6\u4e2a\u8282\u70b9": 748, "6\uc740": 783, "6\uc744": 801, "6\uc7a5": [793, 799, 811, 813], "7": [6, 9, 14, 20, 26, 79, 80, 81, 82, 122, 136, 142, 154, 160, 161, 162, 163, 165, 171, 172, 177, 179, 243, 292, 295, 299, 300, 301, 302, 303, 304, 305, 310, 319, 329, 343, 344, 408, 436, 553, 554, 558, 563, 602, 622, 635, 642, 644, 656, 657, 665, 671, 704, 707, 708, 713, 714, 717, 732, 741, 748, 751, 752, 757, 759, 772, 781, 789, 792, 799, 800, 801, 815, 819, 820, 821, 823, 825, 826, 830, 831, 833, 836, 837, 838, 840, 841, 854, 856, 857, 860, 866, 867], "70": [25, 153, 184, 210, 820, 826, 831, 836, 837, 838, 840, 841, 842, 860, 867], "700": [836, 837], "7000": [435, 549], "701": [192, 836, 837], "702": [836, 837], "7026": 808, "703": [181, 836, 837], "7031": 808, "7039": 857, "704": [836, 837], "7040": 854, "7043": 836, "7046": 830, "7048": [403, 409, 830], "7049": 830, "705": [836, 837], "7051249146461487": 841, "7051530741717352": 691, "7053": 416, "706": [173, 836, 837], "7060e": 825, "707": [836, 837], "7071": 659, "708": [836, 837], "7081": 836, "709": [836, 837, 840], "7091": 441, "7095": 460, "70it": 823, "71": [169, 184, 836, 837, 860, 867], "710": [153, 836, 837, 838, 840], "711": [836, 837], "7115": 837, "712": [821, 836, 837, 840], "7128": 839, "713": [699, 820, 836, 837], "7138": 441, "714": [836, 837, 838], "7141": 118, "715": [836, 837, 840], "7153": 118, "7154": 857, "7158": 860, "716": [194, 836, 837, 838], "7163": 808, "7166": 836, "71661889": 836, "7167": 854, "7168": 808, "717": [161, 162, 163, 836, 837], "7174910641836348": 691, "7179": 860, "718": [836, 837], "719": [836, 837], "7196969604886617": 691, "7197": 691, "7199": 836, "72": [836, 837, 860, 867], "720": [836, 837], "7200": [836, 854], "7204": 837, "72041373": 837, "7208": 857, "721": [836, 837, 840], "7211": 25, "72157742": 836, "7216": 836, "722": [135, 836, 837, 838], "7223": 836, "723": [836, 837, 840], "724": [821, 836, 837], "7240": 854, "72479": 833, "725": [836, 837], "726": [192, 820, 821, 836, 837], "7260": 854, "7260e": 825, "7262": 132, "7269": [128, 129], "727": [836, 837], "728": [836, 837, 838], "7280": 854, "7287": 442, "7287e": [635, 671], "729": [149, 836, 837], "7290": 825, "7291568018841328": 691, "73": [836, 837, 860, 867], "730": [821, 836, 837, 840], "730570": 843, "731": [836, 837, 840], "7310": 854, "7311": [602, 622, 825], "7319": 822, "732": [159, 821, 836, 837, 838], "7320": 854, "7321742043493028": 691, "7326": 860, "733": [836, 837, 840], "7330": 854, "734": [821, 836, 837], "7340": 854, "7346e": 825, "7348": 837, "735": [836, 837], "7350": 854, "7352138669985214": 691, "7356": [438, 822], "736": [836, 837, 838], "7365": 460, "7368": 691, "736833152378035": 691, "737": [820, 836, 837], "7370": 854, "738": [836, 837, 840], "7380": 854, "739": [836, 837, 840], "7390": 854, "74": [25, 836, 837, 860, 867], "740": [159, 820, 828, 836, 837, 838, 841, 845], "7400": 854, "7405": 822, "741": [836, 837, 838, 840], "7410": [438, 854], "7414": 839, "74178515": 836, "7418": 836, "742": [836, 837, 838, 840], "7420": 854, "7426": [691, 836], "7426272601929126": 691, "7427": 437, "743": [821, 828, 836, 837, 843, 845], "7430": 854, "7438": 836, "74386369": 836, "7439": 836, "744": [836, 837, 840], "7440": 854, "745": [136, 821, 836, 837, 838], "7450": 854, "7457985352827006": 691, "7458": 836, "746": [821, 836, 837, 840], "7460": 854, "7465": [460, 837], "747": [836, 837, 840], "748": [165, 836, 837, 838, 840], "7481": 837, "749": [836, 837], "7490": [837, 854], "75": [14, 244, 435, 549, 719, 762, 805, 820, 836, 837, 838, 840, 841, 860, 867], "750": [836, 837, 840], "7500": [552, 667, 854], "7502": 857, "7507": [647, 648], "751": [820, 836, 837, 838, 840], "7510": 854, "7514": 831, "752": [135, 826, 836, 837, 840], "7520": 854, "7523": 825, "7525": 408, "753": [821, 836, 837, 840], "7534": 836, "754": [820, 836, 837, 838, 840], "7540": [444, 854], "755": [14, 836, 837, 840], "7550": 854, "7556": 395, "756": [160, 836, 837, 838, 840], "7560": 440, "7567": [437, 438, 439, 440, 441, 442, 443, 444, 445], "757": [836, 837, 840], "758": [836, 837, 838, 840], "7583372765843964": 691, "7587": 416, "7588": 691, "7588441197954202": 691, "759": [836, 837, 840], "7593": 825, "7596": 836, "75it": 831, "76": [836, 837, 860, 867], "760": [820, 836, 837, 840], "7600": 134, "7606": 836, "7607": 836, "7609": 839, "761": [836, 837, 838], "7613943085507672": 691, "7614": 691, "762": [820, 836, 837, 840], "7624": 836, "76241361": 836, "7624e": 825, "763": [836, 837], "764": [836, 837, 838], "7646": 837, "765": [836, 837, 838, 840], "7650": [25, 836], "765544096939567": 691, "7656": 427, "766": [836, 837, 840], "7660": 856, "7665": [412, 839], "767": [135, 836, 837, 840], "768": [159, 820, 836, 837, 838, 840, 860], "7682516": 837, "7683": 837, "7684": 837, "769": [836, 837, 838, 840], "7692": 416, "7697": [691, 856], "7697294432580938": 691, "77": [826, 836, 837, 860, 867], "770": [836, 837, 838, 840], "7709": 424, "771": [820, 836, 837, 838, 840], "7710": [128, 129, 445], "7711": 417, "772": [820, 836, 837, 838], "7720": 808, "7721": 416, "7729": 839, "773": [836, 837, 838], "77365544": 837, "7737": 837, "774": [836, 837, 838], "7749": 836, "775": [836, 837, 838], "7752": 460, "776": [820, 821, 836, 837, 838], "776002616178397": 691, "7762": 460, "7766": 460, "777": [836, 837], "7773": 412, "7774": 397, "7776": 836, "7778": 855, "778": [135, 836, 837, 838], "77800": 823, "7787": 428, "779": [836, 837], "7792": 836, "77it": 822, "78": [831, 836, 837, 860, 867], "780": [820, 836, 837, 838], "781": [820, 823, 836, 837], "78100": 823, "7819": 691, "7819383771535038": 691, "782": [836, 837, 838], "7826": 836, "7827": 808, "783": [836, 837], "7834": 856, "784": [14, 820, 836, 837], "7845": 836, "7846": 460, "7849": 444, "785": [836, 837], "7859": 822, "786": [820, 836, 837], "7860": 856, "7861": 822, "7863421810531344": 691, "7865": [408, 855], "787": [836, 837], "7872": 825, "7874": 856, "7879": 856, "788": [151, 820, 836, 837], "78804": 171, "7884": 822, "7885": 854, "789": [836, 837], "7891": [691, 855], "7891429392727503": 691, "7893727601272978": 691, "7894": 460, "79": [460, 826, 831, 836, 837, 860, 867], "790": [820, 836, 837], "7901988878812207": 691, "7902": 691, "7905": 417, "791": [820, 836, 837], "7915": 825, "7917": 855, "792": [836, 837], "7924": 442, "793": [153, 836, 837], "7931": [825, 856], "7932": 856, "7938": 831, "7939": 836, "794": [14, 836, 837], "7945": 855, "7946": [416, 856], "7949": [437, 438, 439, 440, 441, 442, 443, 444, 445], "795": [820, 836, 837], "7959": 839, "796": [836, 837], "7966": 837, "797": [836, 837], "7972": 856, "7973": 442, "7975": 855, "7978": 837, "79782915": 837, "798": [159, 836, 837], "7988": 856, "799": [836, 837], "7993": 416, "7997": [647, 648], "7_transform": [828, 867, 869], "7g": [724, 808], "7\u548c11": 759, "7\u884c": 741, "7\ubd80\ud130": 803, "7\uc7a5": 793, "8": [4, 6, 9, 10, 14, 20, 130, 136, 139, 140, 142, 152, 153, 172, 184, 189, 190, 198, 207, 245, 246, 295, 300, 301, 303, 304, 305, 310, 319, 329, 337, 341, 342, 343, 346, 396, 397, 398, 404, 407, 415, 446, 448, 449, 451, 452, 453, 454, 458, 460, 477, 478, 558, 560, 566, 624, 642, 644, 656, 665, 687, 703, 704, 706, 708, 714, 747, 750, 759, 788, 791, 801, 819, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 842, 851, 856, 857, 860, 866, 867, 872], "80": [142, 143, 161, 190, 193, 460, 820, 822, 831, 836, 837, 838, 840, 841, 860, 867, 872], "800": [836, 837], "8005": 856, "801": [836, 837], "8011": 855, "8017": 856, "802": [133, 560, 836, 837], "8020": 836, "8022": 860, "803": [836, 837], "8030": 442, "804": [14, 836, 837], "8040": 856, "8043": [441, 856], "805": [151, 163, 836, 837], "8054": 855, "8058": 416, "806": [836, 837], "8063": 836, "8065": 429, "8068": 423, "807": [821, 836, 837], "808": [836, 837], "8080": 21, "8082": 856, "8086": 460, "809": [836, 837], "8090": 663, "809016994374948": 345, "8091": 825, "809245": 833, "8099": 825, "81": [151, 819, 826, 836, 837, 857, 860, 867], "810": [836, 837], "8108": [855, 856], "811": [836, 837], "8111": 438, "8113": 437, "811333": 25, "8117": 837, "8117650553546695": 691, "812": [560, 836, 837], "8126": 836, "813": [820, 836, 837], "8132": 428, "8135": 410, "8137": [437, 438, 439, 440, 441, 442, 443, 444, 445], "814": [836, 837], "8146": 428, "8149": [691, 836], "8149104951283953": 691, "815": [836, 837, 838], "8154": 856, "8159": 836, "816": [836, 837], "8168": 860, "817": [836, 837], "8173": 854, "8176": 855, "8179e": 825, "818": [161, 836, 837], "8188": 825, "8189658": 784, "819": [194, 836, 837], "8199": 440, "81ea7a4": 831, "82": [172, 836, 837, 857, 860, 867], "820": [836, 837], "8203": 837, "8206": 836, "8208": [425, 856], "821": [161, 836, 837], "821187": 843, "821418": 833, "822": [820, 836, 837], "8223": 825, "823": [14, 836, 837], "8235": 417, "824": [836, 837], "8245": 416, "8246": 837, "825": [836, 837], "8250": 822, "826": [836, 837], "8260": 855, "8262": 412, "827": [836, 837], "8275": 836, "82751438": 836, "828": [836, 837], "8286": 855, "8287": 428, "829": [14, 836, 837], "82it": 831, "83": [195, 826, 836, 837, 857, 860, 867], "830": [836, 837], "8307": [647, 648], "831": [178, 179, 181, 836, 837], "832": [836, 837], "8323": 408, "8325": 428, "8326": 411, "8326121496142408": 691, "833": [836, 837], "8332": 839, "8336": 837, "834": [821, 836, 837], "835": [836, 837], "836": [836, 837], "8361": [837, 855], "8365": 839, "837": [836, 837], "8371": 429, "8377": [437, 438, 439, 440, 441, 442, 443, 444, 445], "838": [836, 837], "8380h": 846, "8387": 441, "839": [836, 837], "84": [195, 836, 837, 860, 867], "840": [836, 837], "8400": 610, "841": [836, 837], "8418": 855, "842": [153, 836, 837], "8421": 836, "843": [836, 837], "8437": 428, "844": [836, 837], "8440": 855, "845": [836, 837], "8450e": 825, "8451870383322376": 691, "8453123358491914": 691, "846": [836, 837], "8462": 860, "8465": 855, "847": [194, 836, 837], "8470": 442, "8478": 855, "8478810655406659": 691, "848": [836, 837], "8480": 836, "8487": 410, "8489": [647, 648], "849": [836, 837], "8494919263589972": 691, "8495": [691, 855], "849983324532477": 691, "85": [820, 836, 837, 838, 840, 841, 860, 867], "850": [836, 837], "851": [836, 837], "8515": 428, "852": [836, 837], "8521": [437, 438, 439, 440, 441, 442, 443, 444, 445], "853": [836, 837], "8531": 855, "8535": 836, "8536": 392, "854": [836, 837], "8544": 184, "8549": 460, "855": [836, 837], "8556": [825, 831], "856": [836, 837], "857": [836, 837], "8575": 855, "858": [836, 837], "8582": 408, "8583": 839, "8586722047523594": 691, "859": [821, 836, 837], "8593": 837, "8597": 460, "86": [836, 837, 860, 867], "860": [14, 836, 837], "861": [836, 837], "8613": 691, "8613368738351794": 691, "8615": 855, "862": [836, 837], "862308573482177": 841, "8627": 836, "86272772": 836, "8629": 855, "863": [836, 837], "8630": 836, "8634": [403, 409], "864": [836, 837], "8642": 836, "8643238446466464": 691, "8645": 860, "8648": 460, "865": [836, 837], "8654": 422, "86573472329756": 691, "8658": 837, "86583232": 837, "866": [836, 837], "8667": 444, "867": [836, 837], "8670": 825, "8674": 408, "8677": 854, "8679": 411, "868": [836, 837], "8686": 836, "869": [836, 837], "8695": 855, "8698": 825, "87": [155, 187, 836, 837, 860, 867], "870": [836, 837], "871": [836, 837, 840], "8710": 219, "8715767748481147": 691, "872": [836, 837], "8726": 441, "873": [836, 837], "8733": 836, "87334935": 836, "8737": 837, "874": [836, 837], "875": [836, 837], "8753101998792645": 691, "8757520744192612": 691, "876": [836, 837], "8764": 412, "8766": 837, "87675074": 836, "8768": 836, "877": [836, 837], "8771": 830, "8772": 830, "8774": 855, "8776": [830, 855], "8778998699783784": 691, "878": [14, 173, 820, 836, 837], "8780": 836, "8788": 831, "879": [836, 837], "87it": 831, "88": [168, 186, 825, 826, 836, 837, 860, 867], "880": [821, 836, 837], "881": [145, 836, 837], "8811": 836, "8813": 691, "8813472954005022": 691, "881680": 133, "882": [836, 837], "8825": 428, "883": [830, 836, 837], "884": [836, 837], "8843": 412, "885": [836, 837], "8851294998284638": 691, "8852": 831, "8854": 442, "886": [836, 837], "8863": 836, "88651": [25, 176], "8869": 441, "887": [836, 837], "8871": 855, "888": [836, 837], "8887": 836, "8889": 855, "889": [836, 837], "89": [145, 160, 168, 460, 831, 836, 837, 860, 867], "890": [836, 837], "891": [836, 837, 840], "892": [181, 836, 837, 838], "8920": [460, 831], "8922": 429, "8926": 837, "8929": 855, "893": [836, 837], "8938": [437, 438, 439, 440, 441, 442, 443, 444, 445], "894": [151, 836, 837], "8943": 831, "8945": [437, 438, 439, 440, 441, 442, 443, 444, 445], "8948": [437, 438, 439, 440, 441, 442, 443, 444, 445], "895": [836, 837], "8954": [647, 648], "896": [836, 837], "8964": [691, 857], "8964389655603473": 691, "8965": 855, "897": [14, 836, 837], "8974": 860, "8975": 691, "8975240205792763": 691, "898": [821, 836, 837], "8982": [855, 857], "899": [160, 820, 836, 837], "8g": [724, 808], "8\u548c": 759, "8\u548c11": 759, "8\uac1c\uc758": [784, 788], "8\uacfc": 789, "8\ubc88\uc774": 801, "8\uc5d0": 801, "8\uc758": 801, "8\uc7a5": 793, "9": [4, 9, 10, 20, 26, 138, 148, 163, 195, 246, 295, 299, 300, 301, 302, 303, 304, 319, 337, 341, 342, 344, 408, 428, 460, 478, 558, 619, 620, 642, 644, 665, 703, 704, 713, 714, 724, 747, 748, 757, 759, 788, 789, 799, 801, 819, 821, 823, 825, 826, 830, 831, 833, 836, 837, 846, 856, 860, 867], "90": [460, 820, 836, 837, 838, 840, 841, 860, 867], "900": [14, 620, 836, 837], "9000": 867, "9001": 857, "9002e": 825, "901": [836, 837], "9011": 428, "9016": [403, 409], "902": [14, 836, 837], "9020": 857, "9027": 401, "9028": [437, 438, 439, 440, 441, 442, 443, 444, 445], "903": [836, 837], "9030": [437, 438, 439, 440, 441, 442, 443, 444, 445], "9038": 857, "904": [836, 837], "905": [836, 837], "9056": 857, "906": [836, 837], "9063": 836, "90633258": 836, "907": [836, 837], "9074": 857, "9078": 860, "908": [836, 837], "9081": 442, "9089": 420, "909": [836, 837], "9091": 412, "9092": 857, "91": [836, 837, 860, 867], "910": [836, 837], "9105": [610, 647, 648], "9108": 460, "9109": 855, "911": [836, 837], "9110": 857, "912": [836, 837], "91208308": 837, "9121": 837, "9128": 857, "913": [836, 837], "91305698": 837, "9131": 837, "9137": [437, 438, 439, 440, 441, 442, 443, 444, 445], "9137336384979067": 691, "914": [821, 836, 837], "9140": [647, 648], "9146": 857, "915": [836, 837], "9152": 836, "91521664": 836, "9156": 460, "916": [836, 837], "9161": 837, "9163": 857, "9166": 429, "9167": 9, "9168191778828504": 691, "917": [836, 837], "918": [836, 837], "9181": 857, "919": [836, 837], "9198": 857, "92": [836, 837, 860, 863, 866, 867], "920": [836, 837], "9203": 855, "921": [820, 836, 837], "9214": 855, "9216": 857, "922": [836, 837], "9226": 396, "9228": [25, 150], "923": [836, 837], "9230": 442, "9233": 857, "924": [152, 836, 837], "9241": 416, "9242": 836, "925": [836, 837], "9250": 857, "9256": 855, "926": [821, 836, 837], "9267": [857, 860], "9268": 392, "927": [836, 837], "9273": 424, "9278": 836, "928": [14, 836, 837], "9280": [647, 648], "9284": 857, "9288e": 344, "929": [836, 837], "92909964": 837, "9291": 837, "9297": 424, "93": [25, 826, 836, 837, 860, 867], "930": [836, 837], "9301": 857, "9302": 396, "9307": 808, "931": [836, 837], "9315": 416, "9318": 857, "932": [828, 836, 837, 856, 859], "933": [836, 837], "9335": 857, "934": [836, 837], "9341": 836, "93410922": 836, "9343": 424, "935": [836, 837, 840], "9352": 857, "936": [836, 837], "936706701616337": 691, "9368": [128, 129], "9369": 857, "937": [821, 836, 837], "9370522452510665": 691, "938": [836, 837], "9386": 857, "939": [836, 837], "9397636966928355": 691, "94": [836, 837, 860, 867], "940": [836, 837], "9402": 857, "9404": 808, "941": [836, 837], "9418796835016118": 691, "9419": [691, 857], "942": [836, 837], "9422093637539785": 691, "9427": 855, "943": [173, 836, 837, 838], "9430": 460, "9436": 857, "944": [161, 836, 837], "9441": 424, "9442": 837, "9444": 855, "94498149": 837, "945": [836, 837], "9450": 837, "9453": 857, "946": [821, 826, 836, 837, 838], "9464": 825, "947": [836, 837, 840], "9470": 857, "948": [836, 837], "94806": 144, "949": [836, 837, 840], "9490": 445, "95": [25, 820, 836, 837, 838, 840, 841, 860, 863, 867], "950": [836, 837], "9507": 855, "951": [158, 836, 837], "9511783938523962": 691, "9512": 691, "9515": 836, "952": [14, 836, 837], "9526": 854, "953": [836, 837], "9539": [168, 186, 854], "954": [163, 194, 820, 836, 837], "955": [836, 837], "956": [836, 837], "957": [836, 837], "9571": 855, "9572": 411, "958": [161, 836, 837], "959": [836, 837], "9599": 410, "96": [826, 836, 837, 860, 867], "960": [836, 837], "9600": 173, "9609": 445, "961": [836, 837], "962": [152, 836, 837], "963": [14, 836, 837], "9630": 855, "9631": 837, "9634": 392, "9637": 460, "964": [836, 837], "9643": 855, "9646": 837, "965": [181, 836, 837], "9657": 836, "96571066": 836, "9658": 837, "966": [14, 836, 837], "966043": [698, 699], "9662": 825, "967": [836, 837], "9670": 825, "968": [836, 837], "969": [836, 837], "9698": 395, "97": [836, 837, 860, 867], "970": [14, 836, 837], "9700": 836, "971": [836, 837], "9714": [621, 855], "972": [560, 836, 837], "9722": 855, "973": [14, 836, 837, 857], "974": [699, 836, 837], "975": [836, 837, 857], "976": [836, 837], "9766": 836, "9768": 836, "977": [14, 836, 837], "9771": 837, "97712271": 837, "9774471538377553": 691, "978": [836, 837], "9784264442230887": 691, "9787": 836, "979": [836, 837], "9794634290792008": 691, "98": [25, 163, 700, 744, 785, 826, 836, 837, 860, 867], "980": [836, 837], "9806": 836, "981": [836, 837], "9816": 825, "982": [830, 836, 837], "9820": [602, 622], "9825": 825, "9829": 837, "983": [836, 837], "9830": 25, "9837": 839, "984": [146, 836, 837], "9840": 442, "9848072295736628": 691, "985": [14, 836, 837], "9859": [836, 837], "986": [836, 837], "9863": 837, "9868": 406, "987": [836, 837], "9876": 855, "9877": 837, "988": [836, 837], "98885929": 836, "9889": 836, "989": [836, 837], "9898": 855, "99": [836, 837, 860, 867], "990": [836, 837], "991": [836, 837], "991848": 25, "992": [828, 836, 837, 838, 845], "9927": 425, "993": [836, 837], "9935": 836, "99350545": 836, "9939": 836, "994": [836, 837], "9945": 837, "9949": 408, "995": [14, 836, 837], "9952376085297715": 691, "996": [820, 836, 837], "997": [836, 837], "9971749359397111": 691, "9972": 442, "998": [836, 837], "9985": 837, "9986": 396, "999": [4, 10, 14, 836, 837], "9990": [437, 438, 439, 440, 441, 442, 443, 444, 445], "9991": 837, "9_gat": [828, 857, 859], "9\uc5d0\uc11c": 789, "A": [4, 6, 7, 12, 14, 20, 21, 22, 26, 27, 28, 31, 34, 35, 39, 41, 45, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 71, 75, 79, 82, 87, 88, 93, 94, 95, 96, 100, 105, 109, 110, 118, 119, 121, 127, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 203, 205, 206, 207, 220, 230, 232, 236, 239, 241, 242, 245, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 317, 319, 320, 322, 323, 327, 331, 339, 340, 345, 346, 354, 355, 356, 386, 387, 388, 389, 390, 391, 392, 394, 395, 397, 400, 401, 403, 404, 406, 407, 408, 409, 410, 411, 414, 415, 417, 419, 421, 422, 424, 425, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 446, 448, 449, 459, 460, 477, 478, 479, 501, 543, 560, 562, 563, 564, 565, 566, 567, 568, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 613, 614, 615, 616, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 637, 638, 639, 640, 641, 642, 643, 644, 646, 647, 648, 652, 655, 660, 661, 666, 670, 685, 691, 693, 696, 697, 699, 700, 702, 704, 705, 707, 711, 723, 731, 732, 733, 790, 792, 820, 821, 822, 823, 825, 826, 828, 829, 831, 834, 838, 840, 841, 843, 845, 850, 854, 856, 857, 860, 867, 868, 870, 871], "AND": 21, "And": [168, 173, 186, 240, 299, 322, 323, 334, 335, 408, 436, 565, 566, 567, 825, 835, 836], "As": [14, 20, 22, 197, 231, 240, 565, 566, 567, 568, 637, 643, 693, 696, 698, 699, 722, 728, 831, 841, 842, 847, 850, 851, 856, 857, 867], "At": [231, 691, 726, 856, 863], "Be": [822, 857], "Being": [4, 10, 732], "But": [89, 295, 303, 722, 819, 823, 863], "By": [4, 31, 32, 41, 53, 54, 70, 122, 125, 126, 131, 200, 201, 207, 210, 220, 232, 239, 240, 249, 250, 295, 336, 355, 356, 359, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 550, 551, 643, 691, 696, 697, 706, 707, 718, 724, 732, 792, 819, 829, 830, 831, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 850, 863, 866, 867], "For": [4, 5, 9, 10, 20, 21, 22, 24, 43, 46, 51, 52, 55, 59, 60, 61, 66, 72, 74, 87, 88, 89, 90, 103, 107, 113, 114, 115, 116, 118, 119, 122, 128, 129, 165, 179, 195, 209, 214, 215, 216, 217, 220, 221, 226, 227, 234, 235, 240, 241, 242, 290, 291, 296, 298, 299, 300, 307, 310, 311, 317, 318, 319, 320, 321, 346, 359, 385, 387, 390, 393, 440, 446, 449, 558, 560, 565, 566, 567, 568, 569, 574, 575, 576, 577, 615, 616, 636, 637, 642, 643, 645, 651, 652, 653, 659, 664, 668, 677, 685, 687, 691, 693, 694, 695, 696, 697, 698, 699, 702, 704, 706, 707, 710, 711, 713, 714, 715, 717, 720, 722, 723, 726, 727, 728, 730, 731, 732, 733, 734, 783, 792, 818, 819, 821, 822, 823, 825, 830, 832, 833, 835, 836, 837, 839, 840, 841, 842, 843, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872], "If": [4, 6, 21, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 43, 44, 45, 46, 48, 51, 54, 56, 57, 58, 60, 64, 65, 70, 71, 73, 74, 79, 80, 81, 82, 87, 89, 90, 93, 95, 96, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 132, 133, 138, 139, 140, 144, 145, 148, 156, 165, 168, 170, 177, 178, 179, 183, 184, 207, 210, 213, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 246, 248, 249, 250, 287, 290, 292, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 310, 311, 312, 314, 315, 317, 318, 319, 320, 322, 323, 327, 330, 334, 335, 336, 337, 340, 341, 342, 343, 344, 345, 346, 348, 354, 355, 359, 385, 387, 388, 389, 391, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 433, 434, 436, 437, 439, 443, 444, 446, 447, 449, 450, 453, 457, 461, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 547, 548, 553, 555, 556, 557, 558, 559, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 582, 585, 587, 589, 592, 593, 596, 599, 600, 601, 602, 603, 605, 612, 613, 614, 615, 616, 617, 618, 619, 622, 624, 628, 635, 636, 637, 642, 643, 645, 647, 648, 649, 651, 652, 653, 660, 661, 663, 664, 666, 669, 671, 683, 684, 690, 691, 696, 698, 699, 703, 706, 707, 710, 713, 714, 715, 716, 717, 719, 720, 721, 724, 729, 730, 731, 734, 791, 819, 820, 821, 822, 823, 825, 827, 830, 831, 833, 835, 839, 841, 842, 843, 847, 850, 863], "In": [4, 6, 8, 14, 21, 22, 27, 41, 51, 70, 140, 150, 181, 183, 186, 210, 214, 221, 231, 232, 235, 239, 240, 245, 246, 247, 299, 302, 305, 310, 312, 317, 318, 319, 320, 322, 337, 341, 342, 345, 354, 385, 389, 393, 401, 402, 418, 457, 460, 477, 478, 479, 542, 564, 567, 571, 576, 577, 610, 618, 621, 624, 642, 645, 685, 687, 691, 693, 695, 696, 697, 699, 700, 702, 703, 706, 707, 709, 710, 715, 718, 720, 721, 722, 723, 725, 726, 727, 729, 730, 731, 732, 733, 734, 819, 820, 821, 823, 825, 829, 830, 831, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 855, 856, 857, 858, 860, 863, 866, 867, 870, 872, 873], "It": [4, 6, 7, 8, 9, 20, 21, 22, 34, 35, 48, 60, 73, 87, 91, 92, 93, 94, 100, 113, 120, 125, 126, 128, 129, 130, 131, 132, 138, 139, 141, 142, 143, 158, 162, 178, 179, 189, 190, 191, 197, 198, 205, 208, 210, 211, 212, 217, 219, 220, 231, 235, 240, 241, 242, 247, 249, 250, 287, 290, 294, 295, 296, 297, 299, 300, 305, 307, 310, 312, 317, 318, 319, 321, 323, 335, 336, 341, 342, 343, 354, 386, 388, 389, 394, 396, 397, 398, 399, 406, 411, 413, 418, 422, 428, 429, 430, 431, 432, 433, 434, 435, 436, 443, 448, 454, 455, 456, 457, 458, 461, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 549, 550, 551, 560, 561, 567, 568, 569, 571, 572, 642, 670, 687, 689, 691, 693, 696, 697, 698, 699, 702, 707, 710, 711, 722, 723, 724, 818, 821, 829, 831, 833, 835, 841, 842, 843, 850, 854, 855, 857, 858, 860, 863, 864, 866, 867, 870, 872, 873], "Its": [53, 54, 142, 240, 418, 430, 431, 432, 433, 505, 567, 699, 863], "NOT": [5, 21, 22, 230, 417, 854, 855, 856, 857, 860, 863, 866, 867], "No": [390, 727, 831, 857, 872, 873], "Not": 847, "ON": 819, "Of": 709, "On": [22, 116, 431, 433, 709, 716, 724], "One": [20, 21, 43, 44, 46, 51, 73, 74, 77, 103, 104, 122, 130, 221, 229, 230, 234, 295, 299, 395, 453, 565, 643, 683, 689, 691, 693, 695, 696, 703, 705, 706, 707, 710, 716, 717, 718, 727, 730, 731, 732, 734, 823, 838, 842, 857, 860], "Or": [216, 564, 716, 721, 819], "Such": [722, 730, 733, 836, 837, 842, 866], "That": [4, 22, 26, 232, 239, 241, 305, 310, 317, 318, 696, 856, 863, 872], "The": [0, 2, 3, 4, 6, 8, 9, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 329, 330, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 385, 386, 387, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 453, 454, 455, 456, 457, 458, 459, 460, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 582, 585, 586, 587, 589, 592, 593, 595, 596, 598, 599, 600, 601, 602, 603, 605, 606, 607, 610, 614, 615, 616, 617, 618, 622, 628, 629, 630, 632, 636, 637, 638, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 658, 659, 660, 661, 662, 664, 666, 667, 669, 670, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 701, 702, 703, 704, 706, 707, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 777, 792, 802, 803, 807, 819, 820, 821, 822, 823, 824, 825, 826, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 850, 851, 854, 856, 857, 861, 866, 867, 868, 870, 872, 873], "Then": [6, 113, 130, 174, 240, 343, 389, 393, 434, 436, 481, 482, 483, 484, 486, 487, 488, 489, 560, 571, 698, 721, 730, 850, 851, 856, 867], "There": [1, 22, 62, 63, 116, 126, 147, 217, 230, 232, 239, 293, 393, 459, 624, 691, 693, 697, 699, 703, 733, 825, 840, 857, 860, 863, 867], "These": [150, 162, 245, 477, 704, 721, 728, 819, 840, 868, 870], "To": [1, 4, 5, 14, 21, 22, 51, 68, 77, 89, 116, 122, 210, 213, 214, 215, 216, 219, 220, 240, 245, 315, 355, 356, 389, 417, 428, 429, 477, 550, 551, 564, 565, 566, 567, 645, 689, 691, 696, 697, 699, 706, 707, 715, 717, 721, 723, 728, 730, 733, 734, 792, 819, 821, 825, 826, 830, 831, 836, 837, 838, 847, 850, 855, 856, 857, 860, 863, 867, 872, 873], "Will": [200, 213], "With": [77, 209, 213, 390, 412, 563, 565, 566, 567, 644, 683, 714, 731, 732, 819, 838, 846, 854, 856, 863], "_": [0, 21, 245, 294, 300, 302, 319, 407, 410, 411, 415, 419, 425, 428, 429, 431, 440, 448, 453, 477, 651, 677, 687, 698, 719, 720, 733, 734, 759, 762, 763, 773, 774, 801, 805, 806, 816, 817, 821, 822, 839, 841, 843, 846, 854, 855, 856, 857, 863, 866, 867, 872], "_1": [399, 428, 429, 651], "_2": [454, 651], "_4": [759, 801], "_5": [759, 801, 832], "_7": [759, 801], "_8": [759, 801], "__": [137, 171, 180, 182, 188, 716, 723], "__all__": [4, 34, 35, 53, 54, 60, 87, 122, 359], "__call__": [655, 691, 762, 805], "__forward__": 856, "__getitem__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 689, 691, 693, 694, 736, 739, 740, 776, 779, 780, 843], "__init__": [21, 208, 218, 302, 315, 418, 428, 429, 430, 431, 432, 433, 460, 560, 689, 693, 697, 715, 716, 718, 719, 720, 721, 723, 724, 726, 728, 730, 732, 733, 734, 736, 739, 759, 760, 761, 762, 763, 764, 766, 768, 770, 772, 773, 774, 776, 779, 801, 802, 804, 805, 806, 807, 808, 810, 812, 814, 815, 816, 817, 820, 821, 822, 823, 825, 830, 831, 833, 838, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "__len__": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 689, 693, 736, 739, 759, 776, 779, 801, 843], "__main__": [831, 863, 872, 873], "__name__": [831, 863, 872, 873], "__path__": 21, "__version__": [820, 821, 822, 823, 825, 830, 831, 833, 836, 837], "__\u4e2d\u7684\u505a\u6cd5": 771, "_aggre_typ": [726, 727, 766, 767, 810, 811], "_basenegativesampl": [226, 227], "_block": 307, "_collate_fn": [692, 738, 778], "_continu": 867, "_core": [854, 857], "_dgl_graph": [694, 740, 780], "_dist_train": 566, "_dst": 127, "_e": [4, 118, 125, 126, 232, 240, 403, 406, 414, 417, 420, 423, 637], "_edge_ids_in_fused_csc_sampling_graph": [299, 313], "_etype_str_to_tupl": 324, "_etype_tuple_to_str": 325, "_extract_gz": [690, 737, 777], "_ffi": 22, "_ft": [710, 754, 795], "_g": [693, 739, 779], "_gener": 0, "_get_dgl_url": [693, 739, 779], "_get_next": 863, "_get_previ": 863, "_i": [391, 407, 651, 670, 710, 754, 795, 825, 860, 867], "_id": [168, 186, 219, 246, 337, 341, 342, 478, 542, 558, 642, 643, 698, 699, 839], "_in_dst_feat": [723, 726, 766, 810], "_in_src_feat": [723, 726, 766, 810], "_info": [694, 740, 780], "_ini_api": 22, "_init_api": 22, "_initialize_edge_repr": 863, "_initialize_node_repr": 863, "_j": [407, 710, 754, 795, 825, 857, 867], "_k": [347, 437, 438, 439, 444], "_l": 860, "_label": [693, 739, 779], "_load_graph": [693, 739, 779], "_mean": [854, 857], "_method": [854, 857], "_n": [4, 239, 240, 403, 406, 414, 420, 423], "_name": [693, 739, 779], "_num_task": [693, 739, 779], "_out_feat": [723, 726, 766, 810], "_p": [455, 456], "_preprocess_featur": [693, 739, 779], "_sample_with_etyp": 719, "_sha1_str": [690, 693, 737, 739, 777, 779], "_src": 127, "_static": [838, 839, 840, 841, 842, 843], "_t": 440, "_tag": [576, 577], "_tag_offset": [567, 576, 577], "_type": [642, 643], "_type_kei": 22, "_u": [4, 125, 126, 417, 733, 759, 773, 801, 816, 854], "_url": [693, 739, 779], "_v": [125, 126, 417, 733, 759, 773, 801, 816, 825], "a1": [26, 825], "a2": [26, 825], "a_": [359, 390, 405, 416, 422, 425, 461, 710, 754, 795, 855, 856, 857, 863], "a_0": [178, 179], "a_1": [821, 863], "a_1x": 821, "a_2x": 821, "a_div": 723, "a_dst": 127, "a_hat": [820, 821, 825], "a_i": 821, "a_new": 825, "a_r": 821, "a_rx": 821, "a_src": 127, "a_t": 863, "a_tild": 821, "a_tre": 860, "ab": [118, 119, 127, 131, 134, 137, 146, 169, 171, 180, 182, 188, 354, 433, 560, 826, 846], "ab1": 26, "ab2": 26, "abil": 857, "abl": [699, 830, 831, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846], "about": [1, 20, 21, 22, 158, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 393, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 637, 684, 689, 696, 699, 701, 703, 704, 719, 732, 821, 842, 855, 856, 857, 860, 867], "abov": [5, 22, 130, 142, 178, 179, 210, 220, 246, 251, 252, 263, 264, 265, 266, 337, 341, 342, 359, 392, 393, 399, 408, 410, 411, 416, 417, 424, 425, 454, 458, 478, 542, 576, 577, 637, 687, 690, 693, 704, 707, 709, 710, 711, 715, 719, 721, 727, 730, 732, 733, 734, 823, 825, 831, 832, 833, 850, 851, 854, 855, 857, 863, 866, 873], "absent": 321, "absolut": [201, 202, 699, 818], "abstract": [156, 293, 312, 316, 654, 689, 701, 715, 825], "abund": 732, "ac": 144, "academ": [151, 152, 159, 289, 699], "academi": 855, "acc": [734, 774, 817, 820, 821, 823, 831, 833, 838, 840, 854, 856, 860, 872, 873], "acc_perm1": 856, "acc_perm2": 856, "acceler": [396, 397, 398, 457, 699, 821, 847, 860, 867], "accept": [21, 22, 209, 311, 357, 397, 651, 705, 721, 790, 833, 839, 850], "access": [4, 22, 89, 108, 122, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 214, 288, 290, 293, 294, 296, 298, 300, 305, 310, 319, 320, 355, 358, 543, 693, 695, 699, 700, 704, 710, 716, 717, 721, 831, 873], "accompani": 345, "accomplish": 866, "accord": [9, 39, 52, 78, 91, 92, 139, 140, 141, 209, 214, 216, 220, 226, 227, 232, 239, 240, 243, 299, 343, 390, 399, 446, 453, 501, 504, 558, 560, 567, 569, 571, 647, 648, 683, 699, 719, 726, 727, 811, 822, 857, 867], "accordingli": [95, 96, 125, 249, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 558, 691, 698, 830, 833], "account": [120, 850], "accumul": [579, 867], "accur": 838, "accuraci": [21, 734, 817, 820, 821, 823, 826, 831, 833, 838, 840, 842, 850, 855, 856, 857, 866, 867, 873], "accuracy_scor": [833, 850], "achiev": [21, 22, 41, 389, 391, 401, 403, 406, 407, 409, 410, 411, 414, 417, 424, 711, 716, 722, 731, 733, 734, 822, 856, 866], "acl": 860, "acm": [134, 173], "acquaint": 818, "across": [22, 73, 113, 120, 128, 129, 130, 217, 245, 307, 418, 457, 458, 477, 643, 695, 696, 707, 727, 792, 847, 863, 872], "act": [235, 687, 867], "act_loss": 867, "act_loss_weight": 867, "action": [166, 431, 433], "action_step": 863, "activ": [151, 152, 180, 395, 396, 400, 401, 402, 407, 409, 410, 411, 412, 415, 417, 420, 422, 423, 424, 425, 448, 449, 635, 642, 671, 687, 724, 726, 727, 732, 766, 767, 808, 810, 811, 815, 820, 821, 854, 855, 857, 863, 866, 867], "actor": [134, 166], "actual": [4, 5, 22, 210, 221, 357, 561, 565, 566, 567, 727], "ad": [4, 10, 27, 28, 114, 115, 116, 142, 143, 150, 186, 189, 190, 289, 322, 353, 397, 422, 424, 459, 460, 653, 670, 691, 699, 706, 820, 835, 839, 846, 861, 863, 867, 870], "adagrad": [4, 10, 696, 782, 860], "adam": [4, 10, 428, 429, 430, 431, 432, 433, 695, 696, 716, 719, 721, 723, 724, 730, 732, 733, 734, 741, 742, 759, 760, 762, 764, 770, 772, 773, 774, 781, 782, 801, 802, 805, 807, 808, 814, 815, 816, 817, 820, 821, 822, 823, 830, 831, 833, 838, 840, 841, 842, 850, 851, 854, 855, 856, 857, 867, 872, 873], "adapt": [13, 165, 196, 411, 425, 429, 430, 431, 718, 866], "adavantag": 857, "add": [9, 21, 22, 27, 28, 114, 115, 116, 117, 125, 132, 133, 135, 136, 140, 142, 143, 144, 150, 151, 152, 153, 154, 157, 158, 165, 170, 176, 189, 190, 191, 192, 198, 249, 253, 254, 267, 268, 277, 278, 299, 317, 318, 344, 391, 395, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 414, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 446, 449, 491, 492, 502, 503, 506, 507, 508, 509, 510, 511, 532, 533, 624, 635, 650, 651, 652, 653, 663, 671, 683, 691, 693, 696, 710, 711, 715, 719, 754, 795, 823, 825, 835, 839, 843, 846, 847, 850, 854, 855, 857, 860, 867], "add_edg": [28, 95, 96, 115, 125, 249, 353, 460, 555, 556, 854, 863], "add_edge_ag": 863, "add_edge_attribut": 299, "add_edge_log_p": 863, "add_edge_or_not": 863, "add_edges_from": 863, "add_nod": [27, 95, 96, 114, 353, 460, 555, 556, 863], "add_node_ag": 863, "add_node_and_upd": 863, "add_node_attribut": 299, "add_node_log_p": 863, "add_nodes_from": [125, 249], "add_on": 303, "add_reverse_edg": 839, "add_self_loop": [391, 396, 398, 403, 406, 407, 408, 409, 410, 411, 414, 417, 420, 423, 424, 426, 427, 557, 808], "addbackward0": [395, 397, 400, 401, 408, 411, 414, 416, 417, 420, 422, 423], "addedg": [13, 863], "addit": [4, 8, 21, 121, 140, 148, 173, 179, 182, 229, 230, 240, 246, 247, 337, 341, 342, 359, 410, 411, 417, 418, 428, 429, 430, 431, 432, 433, 446, 447, 449, 478, 479, 542, 558, 609, 623, 685, 691, 693, 696, 699, 700, 707, 711, 715, 719, 727, 728, 731, 732, 819, 825, 850, 854, 857, 858, 863, 870], "addition": [220, 344, 562, 564, 644, 829, 867], "addmetapath": 13, "addmmbackward": [402, 412, 424, 425], "addmmbackward0": 398, "addnod": 863, "address": [210, 457, 700, 707, 717, 721, 724, 832, 850, 851, 863, 867], "addrevers": [13, 429, 430, 431, 655, 691], "addselfloop": [13, 724], "adj": [33, 118, 146, 169, 400, 401, 402, 841], "adj_extern": [576, 577], "adj_neg": 841, "adjac": [13, 30, 31, 32, 118, 119, 126, 131, 250, 287, 336, 339, 340, 346, 392, 400, 401, 402, 411, 424, 425, 459, 567, 576, 577, 651, 659, 660, 661, 666, 670, 698, 699, 731, 783, 820, 821, 822, 823, 825, 854, 856, 857], "adjust": [120, 734, 866, 867], "adopt": [430, 432, 695, 734, 838, 867], "advanc": [210, 295, 562, 564, 685, 695, 697, 699, 710, 714, 818, 847, 856, 860, 867], "advantag": [315, 699, 716, 717, 732, 821, 847, 857], "affect": 860, "affili": [699, 843], "affiliated_with": [699, 784], "affin": [393, 847, 867], "affinit": 847, "after": [4, 73, 91, 92, 93, 94, 95, 96, 100, 113, 167, 240, 292, 305, 310, 317, 318, 341, 342, 355, 356, 391, 403, 404, 406, 407, 409, 410, 411, 414, 417, 424, 426, 450, 459, 543, 555, 556, 560, 564, 576, 577, 643, 660, 661, 666, 669, 691, 693, 698, 699, 710, 722, 733, 819, 821, 831, 836, 837, 841, 846, 850, 851, 856, 860, 863, 867, 872], "afterward": [4, 428, 429, 430, 431, 432, 433, 449, 840, 846], "ag": [703, 747, 788, 843], "again": [21, 642, 643, 699, 716, 719, 850, 856, 857, 873], "against": [21, 331, 733, 734, 826], "agg": [728, 768, 812], "agg_fn": [728, 768, 812], "aggreg": [5, 9, 73, 91, 92, 93, 94, 100, 111, 113, 117, 263, 264, 265, 266, 387, 391, 393, 396, 397, 398, 399, 401, 402, 403, 406, 407, 409, 410, 411, 412, 414, 417, 419, 420, 421, 423, 424, 428, 429, 430, 432, 458, 481, 482, 483, 484, 486, 487, 488, 489, 503, 505, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 553, 554, 645, 653, 673, 709, 710, 712, 718, 720, 723, 726, 727, 728, 732, 734, 766, 767, 768, 772, 774, 798, 801, 810, 811, 812, 815, 817, 820, 822, 832, 838, 840, 842, 850, 854, 855, 856, 857], "aggregate_radiu": 856, "aggregate\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 774, "aggregate\ub418\uace0": 804, "aggregate\ub97c": 815, "aggregation\ub9cc": 806, "aggregation\uc744": [810, 812], "aggregator_typ": [398, 412, 414, 420, 423, 726, 734, 766, 774, 810, 817, 833, 872], "aggregator_type\u662f\u805a\u5408\u51fd\u6570\u7684\u7c7b\u578b": 774, "aggress": 826, "aggretate\ud558\ub294": 804, "agnn": 391, "agnost": [9, 21], "agre": 866, "agreement": 866, "ahead": [841, 860], "ai": [23, 820, 821, 822, 823, 825, 826, 830, 831, 833, 836, 837, 843, 863], "aifb": [132, 855], "aifbdataset": 855, "aim": [301, 854, 855, 856, 857, 860, 863, 866, 867], "aka": 710, "al": [72, 135, 136, 560, 820, 822, 832, 838, 840, 854, 860], "albert": [141, 142, 143], "algorithm": [0, 3, 4, 6, 10, 209, 240, 290, 293, 300, 343, 356, 426, 431, 433, 434, 436, 558, 560, 565, 571, 696, 697, 699, 714, 718, 732, 821, 850, 858, 863, 866, 867, 870, 873], "alia": [1, 4, 29, 33, 44, 49, 50, 69, 76, 83, 84, 85, 86, 97, 98, 99, 104, 106, 111, 156, 228, 578, 604, 825], "align": [5, 9, 304, 857], "alist": [728, 768, 812], "aliv": 292, "all": [4, 5, 6, 9, 14, 20, 21, 22, 26, 30, 34, 35, 39, 41, 44, 45, 48, 51, 52, 53, 54, 56, 60, 61, 68, 70, 73, 77, 78, 79, 81, 82, 87, 88, 89, 95, 101, 102, 104, 105, 113, 117, 119, 121, 122, 126, 127, 128, 129, 130, 131, 133, 137, 143, 144, 146, 148, 156, 157, 158, 161, 164, 169, 179, 182, 184, 186, 189, 190, 191, 208, 209, 211, 212, 214, 215, 216, 218, 219, 220, 221, 226, 227, 232, 234, 239, 240, 241, 242, 243, 245, 247, 250, 289, 290, 291, 293, 299, 306, 307, 311, 315, 320, 321, 323, 334, 335, 336, 337, 343, 348, 355, 358, 359, 389, 393, 401, 406, 407, 411, 417, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 452, 458, 459, 477, 479, 481, 483, 486, 488, 504, 507, 509, 513, 515, 521, 523, 527, 529, 542, 543, 550, 551, 555, 557, 562, 563, 564, 565, 566, 567, 568, 571, 572, 637, 643, 645, 647, 648, 653, 660, 661, 666, 669, 675, 685, 691, 693, 695, 696, 697, 698, 699, 700, 702, 705, 706, 707, 710, 712, 714, 717, 718, 720, 721, 722, 727, 729, 730, 731, 732, 733, 734, 750, 791, 792, 801, 814, 817, 818, 821, 822, 823, 824, 825, 828, 830, 831, 832, 833, 835, 836, 837, 839, 840, 841, 842, 843, 846, 850, 854, 855, 856, 857, 860, 863, 866, 872, 873], "all_acc": 856, "all_edg": [560, 565, 566, 759, 801], "all_logit": [840, 841], "all_loss": 856, "all_nodes_set": [293, 306, 311, 718], "alloc": [235, 290], "allow": [4, 20, 22, 30, 31, 32, 34, 35, 41, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 126, 131, 146, 169, 246, 247, 249, 250, 287, 292, 336, 337, 341, 342, 387, 389, 478, 480, 505, 542, 553, 555, 557, 565, 571, 574, 576, 577, 642, 691, 696, 699, 703, 704, 707, 717, 722, 724, 826, 840, 846, 850, 858, 867, 870, 872], "allow_dupl": 653, "allow_zero_in_degre": [391, 403, 406, 407, 409, 410, 411, 414, 417, 424], "almost": [232, 239, 567, 693, 716, 719, 721, 723, 730, 831, 873], "alon": [838, 839], "along": [9, 20, 21, 48, 73, 91, 92, 93, 94, 100, 113, 165, 210, 302, 304, 305, 310, 317, 318, 330, 353, 387, 443, 451, 505, 563, 564, 565, 596, 599, 600, 601, 603, 647, 648, 651, 701, 734, 820, 821, 825, 840, 856, 858, 867, 870, 872], "alongsid": [231, 716, 818], "alp": [426, 427], "alpha": [178, 179, 392, 411, 426, 427, 448, 459, 666, 670, 857], "alpha1": [428, 429], "alpha2": [428, 429], "alpha_": [403, 407, 409, 410, 440, 857], "alpha_1": [428, 429], "alpha_2": [428, 429], "alpha_i": 458, "alreadi": [64, 71, 89, 108, 109, 117, 156, 159, 161, 162, 163, 200, 291, 299, 322, 353, 582, 585, 587, 589, 592, 593, 605, 636, 689, 690, 691, 693, 705, 721, 729, 776, 830, 831, 833, 836, 837, 840, 841, 843, 854, 867], "also": [0, 1, 2, 4, 5, 8, 14, 21, 22, 27, 28, 43, 44, 46, 70, 74, 101, 102, 103, 104, 114, 118, 119, 122, 130, 131, 144, 162, 174, 184, 214, 216, 220, 226, 227, 240, 241, 246, 247, 295, 299, 312, 322, 323, 330, 335, 336, 337, 341, 342, 359, 387, 419, 420, 422, 428, 429, 430, 432, 457, 478, 479, 542, 555, 556, 559, 561, 567, 576, 577, 583, 584, 637, 642, 644, 685, 687, 689, 692, 693, 695, 696, 697, 698, 699, 702, 703, 705, 706, 707, 710, 715, 716, 717, 719, 720, 721, 730, 732, 734, 790, 822, 825, 831, 832, 833, 834, 839, 840, 841, 842, 843, 846, 847, 850, 851, 855, 856, 857, 860, 863, 864, 866, 867, 870, 872, 873], "altern": [21, 22, 297, 305, 310, 826, 850, 860, 866], "although": [4, 428, 429, 430, 431, 432, 433, 562, 564, 819, 821, 839, 840, 841], "alwai": [21, 101, 102, 142, 143, 183, 189, 190, 200, 201, 240, 295, 300, 348, 355, 356, 435, 549, 560, 691, 698, 703, 832, 839], "always_preserv": 130, "am": 133, "amazon": [14, 21, 25, 135, 136, 137, 161, 162, 289, 793, 847], "amazon_co_buy_comput": 140, "amazonaw": [23, 693, 739, 779], "amazoncobui": [25, 135, 136], "amazoncobuycomputerdataset": [140, 197, 198], "amazoncobuydata": [693, 739, 779], "ambigu": [48, 57, 80], "among": [4, 14, 120, 161, 307, 341, 342, 389, 695, 720, 732, 836, 837, 841, 855, 856, 858, 863, 867, 868, 870], "amount": [245, 292, 477, 698, 866], "amp": [724, 808], "amp_dtyp": 724, "amp_en": 724, "amper": [9, 710, 795], "amplif": [399, 421], "amx": 724, "an": [0, 1, 4, 6, 7, 9, 14, 20, 21, 22, 31, 32, 34, 36, 39, 44, 46, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 64, 71, 73, 78, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 104, 107, 109, 112, 113, 116, 118, 119, 126, 128, 131, 138, 140, 147, 151, 152, 156, 162, 165, 167, 168, 172, 173, 180, 181, 182, 186, 188, 207, 209, 210, 211, 212, 217, 220, 233, 234, 235, 240, 241, 243, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 295, 297, 299, 302, 304, 305, 310, 311, 312, 314, 316, 317, 318, 329, 336, 337, 340, 343, 344, 345, 346, 354, 357, 359, 393, 396, 397, 398, 401, 402, 407, 409, 410, 411, 412, 415, 417, 418, 419, 422, 423, 425, 426, 427, 428, 429, 430, 432, 434, 435, 437, 443, 450, 477, 501, 504, 542, 553, 554, 558, 560, 561, 562, 563, 564, 565, 567, 571, 576, 577, 583, 584, 632, 635, 636, 637, 642, 643, 645, 647, 648, 651, 653, 654, 656, 659, 660, 661, 663, 664, 666, 671, 675, 677, 683, 685, 687, 690, 691, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 709, 710, 711, 712, 714, 715, 716, 718, 719, 720, 721, 724, 725, 726, 727, 728, 729, 731, 732, 733, 734, 737, 777, 801, 805, 812, 815, 819, 820, 822, 823, 829, 836, 837, 838, 839, 841, 842, 843, 846, 847, 850, 851, 854, 855, 857, 858, 860, 863, 867, 870, 872, 873], "analog": 857, "analogu": [183, 207, 567], "analysi": [134, 693, 860, 863], "analyz": 5, "andd": 120, "angl": [396, 407, 409, 410], "angstrom": 178, "ani": [4, 5, 20, 21, 22, 26, 70, 116, 121, 130, 131, 148, 207, 210, 214, 216, 219, 220, 231, 235, 240, 287, 295, 299, 302, 303, 315, 316, 336, 337, 340, 341, 342, 346, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 387, 391, 392, 397, 405, 411, 417, 428, 429, 430, 431, 432, 433, 436, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 478, 479, 542, 559, 565, 566, 567, 568, 569, 596, 599, 600, 601, 636, 637, 639, 640, 641, 642, 643, 645, 658, 669, 685, 691, 696, 705, 707, 715, 724, 730, 732, 790, 792, 801, 821, 829, 832, 835, 836, 837, 840, 841, 850, 854, 855, 856, 857, 863, 866, 867, 872], "ani2": 866, "anim": [718, 821, 832, 856, 863, 866], "annot": [184, 860, 867], "anonym": [4, 145], "anoth": [4, 21, 48, 130, 142, 162, 179, 220, 305, 310, 317, 318, 346, 426, 560, 642, 705, 716, 723, 730, 733, 734, 821, 826, 836, 837, 839, 841, 855, 856, 857, 863], "answer": 180, "anyth": 21, "anywher": [164, 690], "apach": [23, 818, 819], "apart": 703, "api": [0, 4, 7, 8, 21, 22, 41, 56, 68, 101, 102, 231, 235, 241, 242, 293, 317, 318, 355, 567, 645, 689, 692, 693, 695, 698, 703, 704, 705, 706, 707, 709, 715, 721, 724, 727, 728, 743, 760, 764, 781, 784, 802, 807, 812, 818, 820, 821, 822, 823, 825, 826, 839, 840, 854, 856, 857, 861, 868, 870, 872], "apinn": [725, 734, 763, 765, 774, 809, 817], "api\u4e5f\u652f\u6301python\u7684\u53ef\u8fed\u4ee3\u7c7b\u578b": 750, "api\u4e5f\u80fd\u5904\u7406\u7279\u5f81\u6570\u636e\u548c\u56fe\u7ea7\u522b\u7684\u6807\u7b7e\u6570\u636e": 747, "api\u4ee5\u6613\u4e8e\u5728\u8bad\u7ec3\u671f\u95f4\u52a0\u8f7d\u7684\u683c\u5f0f\u6784\u9020\u5212\u5206\u7ed3\u679c": 743, "api\u4ee5\u83b7\u53d6\u7279\u5b9a\u7c7b\u578b\u7684\u4fe1\u606f\u65f6": 751, "api\u548c": 767, "api\u5c06": 749, "api\u5c06\u5f02\u6784\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 751, "api\u5c06\u65b0id\u5206\u914d\u7ed9\u8f93\u5165\u56fe\u7684\u8282\u70b9\u548c\u8fb9": 743, "api\u7684\u8f93\u5165": 750, "api\uac00": 784, "api\uacfc": 784, "api\ub294": [781, 782, 784, 791], "api\ub4e4": [782, 788, 789, 791, 792, 794], "api\ub4e4\uacfc": 794, "api\ub4e4\uc740": [782, 788], "api\ub4e4\uc744": [778, 782, 788, 791], "api\ub4e4\uc758": 782, "api\ub4e4\uc774": 776, "api\ub4e4\uc774\ub2e4": 782, "api\ub85c": 795, "api\ub97c": [779, 781, 782, 783, 784, 788, 790, 792, 808], "api\uc5d0": 784, "api\uc5d0\uc11c\ub294": 791, "api\uc640": 811, "api\uc740": 784, "api\uc758": 782, "appear": [36, 51, 52, 131, 219, 336, 637, 716], "append": [295, 302, 303, 315, 387, 685, 718, 719, 723, 724, 728, 768, 808, 812, 821, 822, 830, 831, 833, 840, 843, 850, 851, 854, 855, 856, 857, 863, 866, 867, 873], "appendix": [183, 305, 317], "appendix_c": 183, "appi": [391, 402, 403, 406, 407, 409, 411, 414, 417, 424], "appl": 22, "appli": [0, 1, 9, 20, 27, 28, 73, 91, 92, 93, 94, 100, 113, 116, 117, 121, 148, 220, 241, 299, 308, 353, 359, 387, 388, 390, 393, 396, 397, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 413, 415, 417, 418, 419, 420, 422, 423, 424, 425, 428, 429, 437, 438, 439, 444, 449, 450, 451, 452, 453, 454, 458, 459, 460, 502, 503, 602, 622, 624, 653, 655, 659, 660, 661, 666, 668, 691, 707, 709, 711, 726, 727, 730, 732, 815, 822, 825, 839, 846, 854, 855, 856, 857, 860, 867], "applic": [14, 138, 220, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 440, 822, 841, 842, 860, 863], "apply_edg": [5, 9, 20, 35, 460, 674, 675, 676, 677, 678, 710, 711, 724, 730, 733, 754, 755, 760, 762, 770, 773, 795, 797, 802, 805, 808, 814, 816, 857, 867], "apply_func": [412, 413, 855], "apply_nod": [34, 867], "apply_node_func": [73, 91, 92, 93, 94, 100, 113, 544, 545, 546, 547, 548, 713, 757, 799, 860], "apply_norm": 397, "appnp": [392, 670], "appoint": 6, "appreci": 860, "approach": [131, 287, 305, 317, 336, 343, 434, 435, 436, 549, 571, 695, 699, 705, 707, 710, 711, 856, 864, 866, 870], "appropri": [120, 210, 213, 724, 867], "approv": 21, "approx": 411, "approxim": [14, 343, 392, 434, 436, 571, 670], "apt": [819, 850], "ar": [1, 4, 5, 6, 9, 10, 11, 12, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 73, 78, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 105, 107, 108, 113, 114, 115, 116, 117, 118, 120, 121, 122, 125, 126, 130, 131, 135, 136, 137, 140, 142, 143, 145, 147, 148, 150, 151, 152, 155, 157, 158, 159, 161, 162, 163, 165, 171, 173, 174, 178, 179, 180, 182, 186, 187, 188, 191, 192, 193, 195, 197, 210, 213, 214, 216, 217, 219, 220, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 307, 311, 312, 315, 316, 319, 320, 321, 323, 334, 335, 336, 337, 340, 341, 342, 343, 347, 353, 354, 355, 359, 385, 387, 389, 390, 391, 393, 399, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 434, 435, 436, 446, 448, 449, 453, 457, 459, 460, 477, 478, 479, 480, 502, 505, 542, 543, 545, 549, 553, 555, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 576, 577, 579, 605, 613, 615, 616, 618, 619, 624, 628, 636, 637, 639, 640, 641, 643, 645, 647, 648, 652, 653, 659, 669, 683, 685, 689, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 751, 759, 776, 780, 791, 792, 798, 801, 802, 817, 819, 820, 821, 822, 823, 824, 825, 826, 827, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 850, 854, 855, 856, 857, 858, 860, 861, 863, 866, 867, 868, 870, 873], "arang": [9, 20, 95, 96, 117, 157, 158, 191, 209, 217, 219, 220, 246, 294, 295, 300, 301, 303, 304, 319, 327, 337, 341, 342, 385, 389, 478, 542, 555, 556, 557, 558, 609, 610, 613, 619, 620, 621, 631, 653, 656, 657, 699, 715, 716, 760, 761, 802, 804, 836, 837, 841, 842, 851, 855, 866], "arbitrari": [4, 20, 48, 111, 125, 249, 304, 357, 418, 560, 645, 673, 687, 691, 699, 731, 733, 823, 839, 841, 863], "arbitrarili": 673, "arc": 702, "architectur": [9, 443, 687, 710, 822, 855, 856, 867], "archiv": 201, "archlinux": 850, "archwiki": 850, "area": 841, "arena": 847, "arg": [22, 121, 315, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 418, 460, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 695, 719, 741, 759, 762, 781, 801, 805, 831, 846, 851, 872, 873], "argmax": [820, 821, 833, 838, 840, 842, 850, 855, 860], "argo_scal": 846, "argo_tutori": [828, 846, 849], "argument": [4, 20, 22, 34, 36, 37, 51, 54, 73, 93, 94, 100, 108, 113, 117, 121, 122, 131, 140, 210, 211, 212, 213, 216, 220, 231, 240, 242, 246, 287, 292, 299, 315, 327, 336, 337, 341, 342, 348, 356, 357, 387, 416, 418, 428, 429, 430, 431, 432, 433, 458, 478, 505, 542, 558, 564, 565, 566, 568, 569, 576, 577, 637, 642, 645, 683, 699, 700, 705, 706, 710, 715, 717, 721, 731, 790, 802, 803, 820, 839, 841, 847, 850, 857], "argument\ub85c": 807, "ari": [823, 860], "arnold": 860, "around": [292, 831, 833, 873], "arr": [4, 319, 696, 742, 782], "arrai": [4, 7, 21, 101, 102, 125, 126, 148, 197, 198, 205, 207, 217, 220, 233, 240, 249, 250, 312, 319, 558, 562, 563, 564, 567, 576, 577, 583, 584, 691, 696, 699, 707, 784, 835, 836, 837, 843, 850, 856], "arrang": [558, 576, 577, 693], "array_lik": 207, "array\ub294": 784, "array\ub4e4\uc5d0": 782, "array\ub4e4\uc744": 782, "array\ub4e4\uc758": 782, "array\ub97c": 791, "arrow": [832, 856], "arrows": 860, "art": [698, 826, 867], "articl": [149, 182, 185, 192, 839, 847], "arxiv": [134, 137, 146, 147, 161, 162, 169, 171, 174, 180, 182, 188, 195, 289, 305, 432, 433, 448, 560, 721, 723, 771, 826, 833, 846, 867, 873], "as_edge_prediction_sampl": [214, 216], "as_tensor": 822, "as_tupl": [693, 739, 779, 784, 855, 856], "asarrai": [4, 696, 742, 782], "ascend": [197, 205, 287, 299, 443, 568], "asgraphpreddataset": 822, "aslinkpreddataset": 851, "aspect": [178, 179, 863], "aspirincod": 752, "assembl": [301, 863, 867], "assert": [89, 121, 219, 290, 294, 296, 300, 319, 693, 739, 759, 779, 801], "assign": [4, 27, 28, 39, 52, 78, 114, 115, 125, 141, 142, 143, 147, 173, 221, 222, 223, 224, 225, 232, 236, 239, 240, 241, 249, 355, 356, 543, 558, 567, 643, 696, 697, 698, 699, 704, 705, 706, 730, 734, 749, 790, 814, 840, 843, 850, 855, 856, 867], "associ": [43, 46, 47, 74, 75, 103, 197, 205, 241, 242, 301, 307, 387, 418, 429, 431, 562, 564, 565, 566, 567, 568, 696, 702, 707, 731, 792, 855, 856, 857, 866, 867], "assum": [48, 130, 207, 210, 214, 215, 216, 217, 219, 221, 241, 245, 299, 312, 327, 346, 428, 477, 562, 564, 565, 566, 567, 642, 691, 693, 695, 696, 699, 729, 730, 732, 733, 784, 838, 840, 843, 850, 851, 863, 867, 872, 873], "assume_num_node_within_int32": 312, "assumpt": [20, 700, 847, 856], "assur": 683, "astyp": [403, 404, 407, 409, 410, 420, 843], "asv": 826, "asym_a": 825, "asymmetr": 702, "async_op": [299, 335], "asynchron": [210, 290, 294, 296, 297, 299, 300, 305, 310, 319, 335], "aten": 822, "atom": [177, 178, 179, 195, 393, 445], "atom_encod": 822, "atomencod": 822, "att": [419, 867], "att_anim": 867, "att_map": 867, "att_weight_map": 867, "attach": [4, 141, 142, 143, 189, 190, 696, 855, 866], "attempt": 200, "attend": [863, 867], "attent": [9, 359, 391, 396, 403, 404, 407, 409, 410, 419, 426, 427, 438, 441, 442, 446, 448, 449, 451, 452, 453, 458, 635, 651, 671, 687, 724, 825, 828, 858, 859, 868, 870], "attention_weight": 407, "attenu": [399, 421], "attn": [446, 822], "attn_aft": 427, "attn_bef": 426, "attn_bia": [446, 449, 687], "attn_bias_typ": [446, 449], "attn_drop": [407, 409, 410, 446], "attn_dropout": [426, 427, 448, 449], "attn_fc": 857, "attn_head": 857, "attn_mask": [446, 449, 685, 687], "attr": [165, 179, 428, 432, 433, 448, 602, 622, 732, 771, 772, 784, 815, 842, 872], "attract": [73, 113], "attribut": [22, 122, 125, 140, 149, 159, 165, 179, 185, 186, 248, 249, 291, 299, 304, 305, 310, 317, 318, 329, 644, 647, 648, 683, 697, 699, 712, 730, 784, 838, 839, 842, 843, 867], "attrvisitor": 22, "auc": [830, 841, 851], "augment": [448, 650, 656, 657, 658, 699, 820, 856], "auroc": 830, "aut": 867, "authent": 850, "author": [145, 151, 152, 177, 178, 179, 181, 311, 320, 393, 651, 690, 699, 702, 721, 784, 854, 855, 856, 857, 860, 863, 866, 867], "author___affiliated_with___institut": 699, "author___writes___pap": 699, "authorship": [151, 152], "auto": [21, 22, 818, 825, 830, 833, 846, 867, 873], "auto_cast_to_optimal_dtyp": 311, "autocast": [724, 808], "autoencod": 855, "autograd": [9, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 579, 826], "autom": 21, "automat": [4, 21, 22, 156, 221, 291, 419, 422, 426, 561, 642, 690, 696, 697, 699, 710, 715, 720, 724, 808, 825, 850, 851, 854], "auxiliari": [698, 699], "av": 399, "avail": [4, 21, 118, 119, 148, 168, 183, 186, 207, 231, 240, 289, 290, 343, 434, 436, 569, 571, 691, 695, 720, 732, 734, 821, 826, 831, 847, 864, 867, 870], "averag": [4, 10, 137, 149, 175, 177, 181, 183, 185, 195, 245, 399, 401, 417, 437, 477, 645, 660, 661, 666, 732, 815, 825, 831, 840, 841, 842, 857, 867, 872, 873], "avg": 25, "avg_deg": 183, "avg_degre": [660, 661, 666], "avg_loss": [822, 867], "avgpool": [428, 433], "avoid": [21, 34, 70, 73, 89, 93, 94, 100, 113, 116, 130, 220, 327, 340, 346, 391, 401, 403, 406, 407, 409, 410, 411, 414, 417, 424, 446, 448, 449, 559, 565, 566, 567, 568, 636, 643, 645, 685, 696, 699, 703, 711, 722, 728, 831, 873], "aw": [289, 847], "awai": [4, 861, 870], "awar": [715, 732, 857], "awesom": 21, "ax": [821, 863, 866], "axi": [406, 854, 856, 857, 866], "b": [6, 22, 26, 45, 79, 82, 105, 118, 119, 121, 127, 128, 129, 131, 179, 312, 313, 322, 354, 390, 395, 404, 407, 409, 410, 415, 417, 422, 430, 432, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 451, 452, 453, 461, 501, 504, 553, 554, 560, 609, 613, 618, 619, 630, 631, 637, 642, 647, 648, 652, 697, 727, 732, 759, 760, 762, 764, 767, 772, 801, 802, 805, 807, 811, 815, 823, 825, 855, 856, 860, 863, 866], "b_": [856, 863, 866], "b_dst": 127, "b_h": 867, "b_iou": 860, "b_o": 867, "b_size": 846, "b_src": 127, "ba": [118, 127, 131, 141, 142, 143, 354, 560], "bachman": 843, "back": [21, 22, 44, 104, 122, 560, 642, 645, 697, 719, 804, 839], "backend": [3, 4, 6, 8, 9, 21, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 210, 214, 215, 216, 219, 246, 247, 248, 249, 250, 287, 336, 337, 341, 342, 343, 353, 359, 434, 435, 436, 437, 438, 439, 440, 444, 445, 460, 478, 479, 542, 549, 571, 573, 636, 638, 642, 643, 644, 652, 658, 664, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 695, 696, 703, 705, 725, 729, 741, 742, 781, 782, 790, 822, 826, 831, 847, 850, 851, 857, 860, 872, 873], "backend_unittest": 21, "background": [305, 310], "backprop": [724, 808], "backpropag": 721, "backpropagate\ub97c": 807, "backtrack": [69, 346, 664, 856], "backup": 695, "backward": [4, 9, 10, 118, 119, 385, 389, 428, 429, 430, 431, 432, 433, 457, 695, 696, 714, 715, 716, 719, 721, 723, 724, 730, 732, 733, 734, 741, 742, 759, 760, 762, 764, 770, 772, 773, 774, 781, 782, 801, 802, 805, 807, 808, 814, 815, 816, 817, 820, 821, 822, 823, 830, 831, 833, 838, 840, 841, 842, 850, 851, 854, 855, 856, 857, 860, 872, 873], "backwards\ub97c": 801, "bad": [21, 22, 446, 447, 449, 451, 452, 856], "bag": [135, 136, 155, 187, 193], "baidu": 21, "balanc": [189, 190, 240, 355, 356, 459, 698, 850], "balance_edg": [209, 240, 355, 356, 699, 743, 784, 850, 851], "balance_ntyp": [209, 240, 355, 356, 699, 743, 784, 850], "balkance_edg": 209, "ban": 188, "bandwidth": [292, 305, 310], "bar": [120, 820, 821, 825], "barab\u00e1si": [141, 142, 143], "barrier": [4, 846], "baryshnikov": 855, "base": [4, 6, 13, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 232, 239, 240, 243, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 480, 543, 560, 562, 564, 602, 612, 622, 635, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 687, 689, 696, 697, 706, 715, 727, 732, 733, 821, 826, 829, 836, 837, 841, 842, 843, 855, 856, 857, 866, 867], "base_dir": [311, 836, 837], "baselin": 826, "basenam": [836, 837], "basetransform": [13, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673], "bash": [21, 819], "basi": [390, 397, 422, 453, 461, 721, 855], "basic": [7, 9, 156, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 689, 692, 698, 701, 818, 824, 838, 840, 841, 843, 850, 851, 856, 863, 867, 873], "basicfeaturestor": [306, 320], "batch": [4, 6, 7, 13, 20, 22, 27, 28, 36, 37, 38, 53, 54, 95, 96, 101, 102, 114, 115, 116, 117, 128, 129, 130, 165, 168, 172, 183, 186, 208, 210, 213, 220, 246, 247, 295, 299, 303, 308, 337, 340, 343, 345, 346, 354, 385, 389, 390, 395, 406, 415, 426, 430, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 451, 452, 453, 478, 479, 542, 553, 554, 555, 556, 557, 559, 565, 571, 573, 574, 575, 610, 611, 618, 636, 645, 646, 647, 648, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 692, 693, 695, 696, 710, 713, 714, 717, 721, 722, 727, 738, 741, 742, 744, 772, 778, 781, 782, 785, 804, 818, 822, 825, 829, 831, 846, 857, 863, 867], "batch_depend": [214, 305], "batch_f": [437, 438, 439, 440, 441, 442, 443, 444, 445], "batch_first": [447, 685, 726, 766, 810], "batch_g": [437, 438, 439, 440, 441, 442, 443, 444, 445], "batch_input": [695, 741, 781, 850, 851], "batch_label": [695, 741, 781, 850], "batch_norm": [406, 415, 450], "batch_num_edg": [95, 96, 122, 683, 732, 815, 842], "batch_num_nod": [96, 122, 683, 732, 815, 842], "batch_pr": [695, 741, 781, 850, 851], "batch_siz": [4, 122, 183, 209, 210, 213, 214, 215, 216, 219, 220, 295, 302, 303, 305, 310, 321, 385, 389, 428, 432, 433, 446, 448, 449, 692, 693, 695, 696, 715, 716, 717, 718, 719, 721, 722, 723, 732, 738, 739, 741, 742, 759, 760, 761, 762, 764, 772, 778, 779, 781, 782, 801, 802, 803, 804, 805, 807, 815, 822, 830, 831, 833, 842, 846, 850, 851, 856, 860, 867, 872, 873], "batch_tre": 860, "batch_walk": 385, "batched_g": 822, "batched_graph": [165, 168, 172, 186, 213, 732, 772, 815, 842, 856, 860], "batched_label": [165, 168, 172, 186, 856], "batched_pmpd": 856, "batchedgraph": 867, "batcher": 860, "batcher_dev": 860, "batchnorm": 418, "batchnorm1": 822, "batchnorm1d": [418, 822, 856], "batchnorm2": 822, "bbg": 122, "bc": 118, "bcewithlogitsloss": [822, 857], "bdd": [390, 422], "beam": 867, "beat": 21, "becam": 167, "becasu": 322, "becaus": [4, 9, 21, 22, 34, 73, 93, 94, 100, 113, 122, 131, 287, 336, 387, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 567, 696, 697, 698, 703, 711, 717, 718, 733, 823, 831, 840, 850, 856, 857, 864, 870, 873], "becom": [122, 126, 131, 249, 250, 287, 336, 423, 555, 621, 716, 867], "been": [4, 22, 120, 131, 162, 173, 188, 230, 287, 292, 336, 390, 419, 422, 567, 693, 700, 717, 721, 822, 856, 860, 867], "befor": [4, 21, 89, 108, 117, 126, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 223, 224, 225, 235, 250, 292, 295, 299, 302, 303, 305, 310, 315, 322, 355, 426, 427, 438, 449, 457, 543, 554, 561, 564, 567, 669, 685, 687, 696, 697, 698, 699, 717, 719, 722, 724, 825, 831, 838, 843, 846, 850, 856, 857, 860, 864, 867, 870, 872, 873], "begin": [354, 448, 759, 801, 823, 824, 850, 856, 857, 863, 872], "beginn": 818, "behavior": [229, 230, 290, 294, 296, 300, 311, 319, 696, 703, 733, 843, 847, 863, 866, 867], "behaviour": 831, "behind": [696, 855, 872], "being": [21, 45, 79, 82, 105, 108, 122, 214, 216, 219, 246, 249, 290, 299, 305, 310, 317, 318, 337, 341, 342, 478, 542, 553, 554, 559, 565, 576, 577, 841, 856, 863, 866], "believ": 847, "belong": [4, 68, 116, 142, 143, 174, 181, 189, 190, 197, 205, 220, 229, 230, 232, 236, 239, 240, 307, 347, 355, 543, 636, 683, 698, 699, 730, 823, 843, 855, 856, 864, 870], "below": [4, 5, 22, 89, 131, 220, 240, 287, 295, 336, 340, 421, 422, 461, 571, 660, 661, 666, 691, 693, 695, 696, 697, 698, 699, 700, 704, 706, 707, 714, 715, 723, 727, 731, 820, 821, 822, 823, 825, 826, 836, 837, 846, 850, 851, 854, 856, 857, 863, 866, 867, 872], "benchmark": [22, 132, 135, 136, 146, 151, 152, 153, 159, 162, 169, 179, 192, 343, 344, 347, 415, 476, 663, 692, 699, 738, 778, 822, 831, 833], "benefici": [711, 850], "benefit": [693, 699, 829, 841, 850], "benign": 161, "bernoulli": [729, 730, 769, 770, 813, 814, 863], "bernoulli_": [759, 801], "bernoulli_action_log_prob": 863, "bert": [159, 867], "besid": [159, 348, 418, 569, 695, 711, 719, 726, 728, 863, 867], "best": [4, 14, 397, 552, 667, 689, 717, 722, 776, 825, 828, 833, 838, 839, 841, 848, 849, 857], "best_test_acc": [838, 840], "best_val_acc": [838, 840], "beta": [4, 10, 391, 394, 411, 867], "beta1": [4, 10, 428, 429], "beta2": [4, 10, 428, 429], "beta_": 453, "beta_1": [428, 429], "beta_2": [428, 429], "beta_l": 411, "better": [21, 635, 671, 693, 706, 718, 779, 823, 826, 839, 843, 846, 847, 856], "between": [4, 5, 26, 48, 56, 66, 72, 101, 102, 116, 118, 119, 142, 147, 149, 155, 166, 174, 178, 179, 182, 185, 187, 193, 195, 207, 226, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 299, 305, 310, 343, 393, 411, 414, 431, 433, 434, 436, 446, 451, 452, 453, 457, 459, 543, 561, 562, 565, 571, 572, 576, 577, 645, 687, 697, 699, 702, 707, 716, 722, 730, 732, 733, 822, 823, 825, 839, 841, 843, 854, 855, 856, 857, 863, 866, 867, 872], "bewteen": [403, 409, 410], "beyond": [120, 244, 245, 477, 699, 840, 841], "bf": 547, "bf16": 724, "bfs_nodes_gener": [0, 547], "bg": [36, 37, 38, 95, 96, 116, 122, 128, 129, 144, 428, 430, 432, 433, 553, 554, 573, 574, 575, 647, 648, 683, 706, 732, 750, 772, 791, 815, 872], "bg1": [116, 636], "bhg": [122, 683], "bi": [6, 345, 636, 867], "bi_part": 403, "bia": [388, 395, 396, 397, 398, 400, 401, 402, 404, 407, 408, 409, 410, 411, 414, 416, 417, 420, 422, 423, 424, 425, 446, 449, 451, 452, 453, 454, 567, 687, 723, 726, 766, 810, 854, 855, 857, 860], "bias": 453, "biasedmha": 687, "bidecod": [730, 770], "bidirect": [116, 162, 173, 220, 344, 435, 549, 560, 636, 663, 839], "big": [407, 732], "bigger": [842, 861, 870], "billion": [699, 714], "bilstm": 458, "bin": [204, 348, 569, 694, 698, 740, 780, 784, 843], "binar": 860, "binari": [5, 9, 161, 163, 171, 180, 186, 189, 190, 240, 459, 502, 503, 569, 685, 698, 699, 710, 784, 795, 823, 841, 857, 860], "binary_cross_entropy_with_logit": [719, 830, 841, 851], "binaryreducebackward": [391, 403, 409], "bind": [393, 819, 846], "bio": 847, "bipartit": [9, 26, 44, 45, 68, 79, 82, 104, 105, 116, 118, 119, 125, 126, 130, 354, 394, 396, 397, 398, 401, 402, 403, 404, 406, 407, 409, 410, 414, 417, 420, 423, 550, 560, 567, 637, 702, 707, 727, 728, 787, 792, 802, 811, 812, 832, 856, 866], "bipartite_from_networkx": 126, "bipartite_from_scipi": 125, "bisect": [355, 356, 697], "bisect_left": 697, "bit": [21, 22, 339, 706, 733, 863, 867], "bitcoin": 145, "bitcoinotc": [25, 145], "bitcoinotcdata": [693, 739, 779], "bitcoinotcdataset": [690, 737, 777], "bla": [14, 343, 434, 436, 571], "blitz": [818, 828, 843, 845], "blitz_1_introduct": 838, "blitz_2_dglgraph": 839, "blitz_3_message_pass": 840, "blitz_4_link_predict": 841, "blitz_5_graph_classif": 842, "blitz_6_load_data": 843, "bloat16": 724, "blob": [165, 210, 846], "block": [4, 10, 127, 131, 180, 183, 210, 214, 215, 216, 220, 291, 293, 303, 307, 390, 422, 442, 457, 637, 695, 696, 697, 715, 716, 718, 719, 720, 721, 723, 725, 727, 728, 741, 742, 759, 760, 761, 762, 763, 764, 767, 781, 782, 783, 801, 802, 804, 805, 806, 807, 809, 811, 822, 830, 831, 833, 846, 850, 851, 855, 856, 857, 863, 873], "block3": [759, 801], "block_diag": 856, "block_id": [759, 801], "block_typ": 442, "blocksampl": [214, 216, 717, 759, 801, 803], "blog": [827, 847], "blue": 821, "bmatrix": 823, "bmm": 855, "bn": 856, "board": 847, "bodi": 22, "boil": 854, "boldsymbol": [733, 759, 773, 801, 816], "bond": [177, 179, 195], "book": [137, 232, 237, 239, 698, 699, 827], "bool": [4, 6, 10, 31, 48, 57, 58, 65, 66, 67, 95, 96, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 207, 210, 213, 214, 216, 217, 219, 226, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 246, 287, 290, 291, 292, 295, 297, 299, 303, 305, 307, 310, 311, 312, 317, 318, 326, 328, 335, 337, 340, 341, 342, 343, 344, 346, 355, 356, 385, 388, 389, 390, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 446, 448, 449, 450, 454, 459, 478, 542, 543, 545, 547, 548, 549, 555, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 571, 572, 573, 635, 636, 637, 643, 645, 647, 648, 649, 651, 652, 653, 663, 664, 669, 671, 689, 691, 693, 729, 730, 736, 759, 769, 770, 776, 779, 784, 801, 813, 814, 835, 843, 850, 851, 863], "boolean": [53, 54, 210, 213, 216, 232, 239, 246, 299, 305, 310, 317, 318, 331, 335, 338, 478, 566, 684, 696, 730, 734, 782, 838, 850], "booltensor": 857, "boost": 722, "borrow": [22, 199, 200, 732], "both": [0, 9, 21, 22, 44, 56, 62, 63, 73, 89, 104, 116, 118, 119, 130, 134, 149, 155, 181, 185, 187, 193, 210, 216, 230, 299, 305, 310, 311, 317, 318, 322, 340, 346, 353, 354, 387, 401, 402, 403, 404, 407, 408, 409, 410, 417, 419, 420, 423, 447, 453, 478, 479, 559, 569, 596, 599, 600, 601, 603, 613, 618, 619, 636, 637, 642, 643, 645, 691, 695, 696, 699, 701, 706, 707, 709, 710, 718, 724, 730, 825, 826, 835, 838, 839, 841, 843, 850, 855, 856, 857, 858, 863, 867, 870], "bother": [690, 825], "bottom": [142, 143, 860], "bought": [135, 136, 137, 702, 717, 787], "bound": [235, 447, 452, 567, 724], "boundari": 821, "bpr": [733, 816], "branch": [21, 192, 698, 784], "brand": 22, "breadth": [123, 124, 562], "break": [51, 219, 867], "breviti": 693, "brew": 819, "brief": [701, 856], "briefli": 821, "bring": [20, 666, 722], "broadcast": [5, 9, 128, 129, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 323, 412, 423, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 610, 623, 624, 625, 626, 627, 710], "broadcast_edg": 129, "broadcast_nod": 128, "broken": [831, 857], "brook": 752, "brookhuang16211": 752, "bruteforc": [14, 343, 434, 436, 571], "bsddmm": 822, "bspmm": 822, "bucket": 13, "budget": 217, "buffer": [235, 343, 434, 436, 571, 722], "buffer_devic": 718, "bugfix": 21, "bui": [550, 702, 787], "build": [14, 22, 157, 158, 191, 214, 215, 216, 235, 305, 317, 437, 438, 439, 440, 441, 442, 443, 444, 445, 565, 686, 693, 696, 703, 707, 708, 714, 717, 720, 729, 732, 734, 779, 818, 819, 822, 823, 824, 838, 841, 842, 857, 860, 863], "build_artifact": [843, 856], "build_dgl": 819, "build_ext": [21, 819], "build_hidden_lay": 855, "build_input_lay": 855, "build_model": 855, "build_output_lay": 855, "built": [3, 9, 13, 22, 34, 73, 91, 92, 93, 94, 100, 113, 162, 179, 181, 289, 696, 709, 711, 724, 727, 731, 732, 734, 754, 795, 808, 811, 818, 825, 826, 829, 840, 854, 857, 860, 863], "builtin": [9, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 289, 693, 694, 719, 720, 821, 830, 840, 841, 854, 855, 857], "builtindataset": [721, 723, 830, 831, 833, 873], "builtinfunct": [34, 73, 91, 92, 93, 94, 100, 113], "bulit": [34, 73, 93, 94, 100, 113], "bunch": [699, 727], "busi": 194, "button": 21, "buyer": 702, "bwtype": 560, "byte": [235, 290, 300], "c": [6, 21, 22, 25, 118, 119, 120, 121, 151, 152, 179, 183, 192, 289, 293, 347, 396, 397, 398, 405, 415, 418, 459, 501, 706, 791, 819, 821, 846, 860, 866, 867], "c_": [178, 179, 401, 408, 417, 855, 857, 860, 866], "c_csc_graph": 299, "c_etyp": [324, 325, 429, 431, 712, 756, 798], "c_etype_func_dict": [429, 431], "c_etype_str": [324, 325], "c_i": 855, "c_j": 860, "c_k": [347, 393], "cach": [23, 138, 139, 140, 142, 143, 148, 156, 189, 190, 209, 210, 217, 290, 300, 305, 310, 424, 694, 719, 805, 820, 821, 823, 838, 840, 841, 847, 854, 855, 856, 857], "cache_path": 209, "cache_s": 300, "caculatorgetbrand": 22, "cal": [178, 179], "calc": 22, "calcul": [4, 22, 316, 327, 396, 397, 398, 435, 480, 549, 574, 575, 576, 577, 602, 622, 643, 695, 699, 732, 815, 821, 825, 830, 831, 856, 857, 863, 866, 867, 873], "calculate_gain": [723, 726, 766, 810, 855, 857], "calculatorobject": 22, "call": [0, 4, 6, 9, 21, 22, 26, 45, 52, 66, 79, 82, 105, 108, 117, 118, 119, 131, 145, 156, 217, 240, 287, 290, 294, 295, 296, 299, 300, 303, 319, 335, 336, 359, 387, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 426, 428, 429, 430, 431, 432, 433, 476, 559, 565, 567, 618, 642, 643, 647, 648, 683, 693, 696, 697, 698, 699, 702, 705, 706, 707, 710, 711, 712, 713, 721, 726, 727, 728, 730, 732, 733, 749, 790, 795, 822, 831, 832, 836, 837, 838, 839, 840, 850, 856, 857, 860, 863, 867, 868, 870, 873], "callabl": [4, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 121, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 220, 295, 303, 357, 387, 396, 401, 402, 407, 409, 410, 411, 412, 413, 415, 417, 420, 422, 423, 424, 425, 448, 449, 457, 544, 545, 546, 547, 548, 560, 655, 726], "came": 22, "can": [4, 5, 6, 7, 9, 12, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 73, 74, 75, 77, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 117, 118, 119, 120, 122, 125, 128, 129, 130, 131, 147, 156, 161, 163, 168, 186, 197, 207, 210, 213, 214, 216, 217, 220, 221, 229, 230, 232, 234, 235, 240, 241, 242, 245, 246, 247, 249, 287, 290, 292, 294, 295, 296, 299, 300, 303, 305, 307, 310, 311, 312, 317, 318, 319, 320, 335, 336, 337, 341, 342, 343, 345, 355, 356, 359, 386, 387, 388, 389, 391, 393, 395, 396, 397, 398, 399, 401, 403, 404, 405, 406, 407, 409, 410, 411, 414, 416, 417, 420, 422, 423, 424, 426, 434, 435, 436, 438, 446, 450, 453, 454, 455, 456, 457, 458, 461, 477, 478, 480, 505, 542, 543, 549, 553, 554, 555, 556, 557, 558, 561, 564, 565, 566, 567, 568, 571, 574, 575, 576, 577, 621, 637, 642, 643, 645, 647, 648, 670, 684, 685, 687, 689, 690, 691, 693, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 777, 789, 818, 819, 821, 822, 823, 824, 825, 826, 829, 830, 831, 832, 833, 835, 838, 839, 840, 841, 842, 846, 847, 850, 851, 854, 855, 856, 857, 858, 860, 863, 864, 866, 867, 868, 870, 872], "candid": [343, 434, 436, 571], "cannot": [4, 20, 21, 210, 307, 337, 341, 342, 432, 478, 542, 696, 697, 699, 704, 705, 707, 710, 729, 749, 751, 790, 792], "canon": [4, 26, 36, 39, 46, 48, 51, 52, 57, 66, 80, 109, 131, 240, 324, 325, 336, 389, 429, 644, 652, 659, 707, 792, 829, 835, 836], "canonical_etyp": [4, 52, 66, 109, 387, 429, 430, 431, 652, 707, 712, 720, 728, 751, 756, 759, 760, 762, 763, 768, 792, 798, 801, 802, 805, 806, 812, 855], "cap": 846, "capabl": [210, 724, 867], "capac": [1, 9, 290, 300, 571, 699, 710, 714, 857, 858, 870], "capav": [178, 179], "capsul": [359, 828, 868, 869, 870], "captur": [702, 712], "care": [162, 428, 429, 430, 431, 432, 433], "carlo": [431, 433], "carri": [698, 699, 732], "cartesian": 453, "case": [4, 5, 9, 14, 21, 22, 27, 32, 34, 41, 42, 44, 48, 51, 73, 93, 94, 100, 104, 108, 109, 113, 116, 125, 126, 131, 140, 181, 200, 210, 214, 232, 239, 249, 250, 287, 299, 336, 345, 354, 359, 391, 394, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 414, 417, 420, 423, 424, 437, 438, 439, 440, 441, 442, 443, 444, 445, 459, 460, 564, 572, 576, 577, 618, 624, 642, 683, 685, 690, 691, 694, 696, 699, 706, 707, 711, 715, 717, 720, 721, 727, 730, 811, 823, 825, 841, 843, 847, 850, 855, 856, 857, 860, 867], "case1": [454, 458, 596, 599, 600, 601, 602, 603, 612, 614, 615, 616, 617, 622, 628, 652, 653, 658, 659, 664, 668, 669, 673], "case2": [454, 458, 596, 599, 600, 601, 602, 603, 612, 614, 615, 616, 617, 622, 628, 652, 653, 658, 659, 664, 668, 669, 673], "case3": [454, 458, 602, 612, 614, 617, 622, 628, 652, 653], "case4": 454, "case\ub4e4\uc5d0": 784, "casio": 22, "cast": [64, 71, 131, 287, 311, 336, 397, 639, 640, 641, 822], "cat": [157, 158, 191, 220, 302, 315, 437, 438, 439, 440, 441, 442, 443, 444, 445, 451, 454, 458, 571, 685, 711, 716, 720, 730, 755, 760, 763, 770, 797, 802, 806, 814, 821, 822, 830, 831, 840, 841, 843, 851, 856, 857, 863, 866, 873], "cat_feat": [711, 755, 797], "catbackward": 440, "categor": [160, 194, 730, 839, 847, 855, 863], "categori": [5, 132, 133, 135, 136, 144, 150, 154, 155, 161, 170, 176, 187, 193, 719, 734, 825, 838, 841, 842, 843, 855], "category_id": 855, "caus": [292, 295, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 727, 846], "caution": 4, "cc": [22, 167, 698, 784], "cd": [21, 137, 819], "cdgnn": 856, "cdot": [116, 120, 186, 391, 395, 398, 399, 403, 406, 407, 418, 419, 420, 423, 440, 454, 559, 670, 727, 759, 767, 801, 811, 821, 840, 860, 863, 866, 867], "cedric": 866, "cell": 171, "center": [389, 428, 429, 430, 432, 453, 839], "cento": 819, "central": 840, "centric": [701, 826], "centuri": 860, "certain": [27, 150, 154, 176, 565, 566, 576, 577, 703, 712, 726, 842, 866], "certif": 200, "certifi": [830, 831, 833, 836, 837], "cetyp": 855, "chain": [182, 315, 703, 722, 788, 841, 854, 860, 863, 867], "chainer": 21, "challeng": [151, 152, 860, 861, 863, 864, 870], "chameleon": 149, "chang": [1, 6, 26, 64, 70, 71, 131, 145, 177, 178, 179, 287, 294, 305, 336, 424, 576, 577, 690, 691, 693, 721, 724, 830, 833, 846, 850, 863, 872], "channel": [418, 856, 857, 867], "chapter": [1, 3, 5, 11, 20, 637, 689, 697, 698, 699, 708, 713, 720, 727, 732, 734, 846, 847], "char": 22, "charact": 863, "character": [120, 245, 477, 732, 823], "characterist": [245, 477, 712], "charg": 695, "charset": [830, 831, 833, 836, 837], "chart": 689, "cheatsheet": 5, "chebconv": 400, "chebnet": 395, "chebyshev": [395, 400], "check": [21, 22, 56, 65, 66, 67, 101, 102, 131, 156, 199, 307, 312, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 567, 689, 690, 693, 694, 698, 699, 713, 715, 724, 776, 777, 780, 818, 819, 820, 821, 822, 823, 826, 841, 855, 857, 863, 872], "check_eq_shap": [727, 767, 811], "check_sha1": [690, 737, 777], "checkout": 21, "checkpoint": [703, 846], "chee": 866, "chemic": 863, "chemistri": [179, 393, 420], "chen": 752, "child": 860, "children": [431, 433], "china": 23, "choic": [23, 459, 502, 550, 551, 698, 841, 842], "choos": [126, 131, 226, 227, 246, 249, 250, 287, 299, 336, 478, 550, 551, 562, 564, 567, 643, 697, 734, 819, 825, 832, 847], "choose_dest": 863, "choose_dest_ag": 863, "choose_dest_and_upd": 863, "choose_dest_log_p": 863, "choosedestandupd": 863, "chosen": [146, 169, 195, 226, 227, 241, 242, 299, 304, 321, 343, 430, 432, 565, 566, 567, 568, 819], "chrsmrr": [168, 186], "chunk": [697, 860], "chunk_graph": 699, "chunkfilespec": 699, "ci": 21, "cifar10": [146, 169], "cikm": 162, "circ": [394, 446, 822], "circl": 863, "circular": 172, "citat": [150, 153, 154, 176, 289, 666, 823, 838, 841, 856], "citation2": [289, 851], "citation_graph": [856, 857], "citationdata": [693, 739, 779], "citationgraphdataset": [25, 150, 154, 176, 693, 739, 779], "citationgraphdataset\u6e90\u4ee3\u7801": 739, "cite": [311, 699, 784, 823, 841, 855, 856], "citegrh": [856, 857], "cites": [25, 150, 693, 739, 779, 826], "citeseergraphdataset": [693, 724, 729, 734, 739, 769, 774, 779, 813, 817], "citizen": 22, "cla": [821, 863, 866], "clamp": [447, 452, 459, 685, 733, 773, 805, 816, 867], "clang": 819, "class": [0, 1, 4, 6, 8, 10, 13, 22, 31, 120, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 244, 245, 250, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 347, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 560, 611, 618, 629, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 688, 690, 691, 693, 696, 697, 715, 716, 718, 719, 720, 721, 723, 724, 726, 728, 730, 732, 733, 734, 736, 739, 759, 760, 761, 762, 763, 764, 766, 768, 770, 772, 773, 774, 776, 779, 801, 802, 804, 805, 806, 807, 808, 810, 812, 814, 815, 816, 817, 820, 821, 822, 823, 824, 825, 830, 831, 833, 834, 835, 838, 840, 841, 842, 843, 847, 850, 851, 854, 855, 856, 857, 860, 866, 872, 873], "classic": [426, 715, 818, 821, 866, 867], "classif": [2, 120, 122, 132, 133, 135, 136, 141, 142, 143, 144, 146, 150, 151, 152, 153, 154, 159, 160, 161, 163, 165, 167, 168, 169, 170, 172, 175, 176, 181, 186, 189, 190, 192, 194, 209, 210, 211, 213, 214, 215, 216, 219, 220, 245, 289, 305, 307, 310, 317, 318, 401, 417, 428, 429, 430, 431, 432, 433, 443, 459, 477, 656, 659, 696, 699, 714, 719, 723, 729, 733, 814, 816, 820, 826, 828, 829, 830, 840, 841, 844, 845, 851, 852, 853, 854, 855, 856, 857, 863, 874, 875], "classifi": [149, 155, 185, 187, 193, 431, 433, 732, 733, 734, 772, 815, 854, 855, 856], "claud": 860, "clean": [21, 688, 707, 710], "clear": [857, 867], "clearli": [21, 857], "clf": [385, 866], "cli": 21, "click": [21, 220, 729, 730, 733, 769, 770, 773, 813, 814, 816, 821], "click_dst": [729, 769, 813], "click_src": [729, 769, 813], "client": [4, 235], "cliqu": 172, "clock": [183, 207, 290], "clone": [21, 56, 64, 71, 89, 108, 418, 639, 640, 641, 698, 784, 819, 856, 863, 867], "cloner": 21, "close": [178, 385, 389, 693, 821, 857, 866, 867], "cloud": [6, 14, 21, 343, 406, 434, 436, 571], "club": [167, 703, 747, 788, 821, 843], "cluster": [4, 6, 147, 209, 558, 695, 696, 698, 699, 700, 826, 850, 851, 856], "cluster_gcn": 209, "cm": 821, "cmake": 819, "cmap": [821, 856], "cn": 23, "cnn": [406, 414, 839, 867], "cnt": 645, "co": [4, 134, 135, 136, 137, 151, 152, 289, 391, 393, 454, 651, 823, 825], "coalesc": [240, 590, 645, 673, 723, 825], "coarsen": 6, "coauthor": [25, 151, 152, 702], "coauthordata": [693, 739, 779], "code": [4, 22, 130, 145, 164, 166, 175, 177, 178, 179, 183, 184, 196, 199, 200, 209, 220, 235, 387, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 690, 692, 693, 695, 696, 697, 703, 704, 706, 707, 709, 710, 715, 716, 720, 721, 722, 723, 724, 725, 727, 730, 731, 732, 734, 744, 779, 785, 820, 821, 822, 823, 825, 826, 830, 831, 833, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 858, 860, 861, 863, 864, 866, 867, 868, 870, 872, 873], "coef": [431, 433, 660], "coeffici": [4, 10, 390, 422, 427, 459, 461, 480, 660, 855, 866], "coff_budget": [430, 432], "coff_connect": [430, 432], "col": [614, 628, 825, 856], "col_sort": 287, "colab": 824, "collab": [25, 165, 168, 186], "collaps": 164, "collat": [183, 213, 685], "collate_dgl": 822, "collate_fn": [4, 183, 213, 385, 389, 692, 695, 696, 738, 741, 742, 778, 781, 782, 822, 856, 860], "collect": [5, 7, 22, 122, 133, 164, 241, 242, 299, 301, 393, 430, 432, 457, 692, 695, 696, 829, 831, 855, 856, 860, 863, 872, 873], "colon": 699, "color": [22, 821, 823, 832, 856, 857], "colorbar": 857, "column": [4, 31, 32, 118, 119, 131, 287, 312, 323, 327, 329, 336, 343, 400, 401, 402, 549, 580, 581, 583, 584, 596, 599, 600, 601, 602, 603, 614, 615, 616, 622, 624, 628, 658, 691, 707, 751, 792, 823, 825, 843, 850, 851, 856], "com": [21, 23, 135, 136, 151, 152, 153, 159, 162, 165, 210, 684, 693, 698, 739, 752, 779, 784, 793, 819, 831, 846, 847], "combin": [20, 26, 231, 240, 390, 394, 421, 422, 427, 438, 454, 461, 569, 643, 699, 709, 710, 711, 718, 721, 730, 734, 821, 838, 842, 855, 857, 867], "combine_nam": 26, "come": [134, 149, 155, 185, 187, 193, 397, 422, 458, 643, 831, 841, 863, 867], "comma": 691, "command": [21, 696, 698, 700, 819, 820, 821, 822, 823, 825, 850, 856], "comment": [21, 181, 720], "commerc": 823, "commerci": 159, "commit": 21, "committ": 21, "committor": 21, "common": [14, 21, 26, 130, 160, 210, 213, 391, 401, 403, 406, 407, 409, 410, 411, 414, 417, 424, 703, 707, 710, 711, 713, 724, 727, 728, 730, 732, 812, 818, 829, 830, 839, 843, 850, 855, 857, 872], "commonli": [12, 128, 129, 389, 445, 553, 554, 560, 637, 661, 666, 670, 688, 696, 702, 710, 725, 726, 842, 854], "commun": [21, 142, 147, 167, 174, 181, 183, 235, 240, 356, 695, 696, 698, 699, 732, 858, 870, 872], "comp_cor": 846, "compact": [130, 299, 302, 305, 307, 310, 312, 317, 318, 323, 334, 335, 428, 429, 719, 723], "compact_graph": 717, "compacted_csc_format": [323, 335], "compacted_mat": 723, "compacted_node_list": 334, "compacted_pair": 719, "compacted_se": [303, 305, 307, 716, 719, 830, 833], "compani": 389, "companion": [856, 858, 870], "compar": [120, 156, 245, 299, 304, 477, 565, 571, 720, 727, 733, 734, 825, 850, 856, 857, 867], "comparison": [21, 826], "compat": [8, 21, 553, 554, 714, 724, 729, 732, 819, 825], "competit": [831, 866, 873], "compil": [9, 22, 698, 710], "complet": [13, 52, 343, 456, 687, 693, 698, 730, 734, 770, 814, 823, 825, 838, 841, 846, 855, 857, 860, 863, 866, 867, 872], "complex": [9, 343, 434, 436, 571, 691, 712, 822, 840, 841, 857, 863, 867], "complic": [340, 726, 730], "compon": [11, 122, 229, 230, 293, 307, 343, 571, 573, 687, 688, 695, 696, 701, 730, 732, 830, 831, 833, 842, 850, 867], "compos": [3, 13, 22, 159, 174, 246, 289, 337, 341, 342, 343, 389, 421, 461, 478, 542, 571, 822, 829, 855, 857], "composit": [22, 307, 322], "compress": [583, 584, 615, 616, 825], "comput": [0, 4, 5, 6, 9, 10, 13, 14, 20, 21, 25, 60, 70, 87, 122, 126, 131, 135, 136, 151, 192, 210, 211, 212, 214, 215, 216, 220, 222, 223, 224, 225, 240, 243, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 305, 312, 317, 336, 343, 344, 346, 359, 385, 387, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 459, 461, 477, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 552, 560, 565, 571, 572, 574, 575, 596, 599, 600, 601, 603, 618, 635, 645, 663, 667, 671, 679, 680, 681, 682, 685, 687, 693, 695, 696, 699, 701, 709, 710, 711, 712, 714, 716, 718, 719, 720, 721, 722, 724, 727, 730, 731, 733, 734, 784, 802, 804, 807, 814, 816, 817, 820, 821, 822, 823, 825, 826, 829, 830, 831, 832, 838, 839, 840, 841, 842, 847, 850, 851, 854, 855, 856, 857, 860, 863, 868, 870, 872, 873], "computation": 867, "compute_auc": 841, "compute_block": 307, "compute_cor": [846, 847], "compute_loss": [715, 716, 721, 733, 759, 760, 762, 764, 773, 801, 802, 805, 807, 816, 841], "compute_mod": [435, 549], "conan": 860, "conatin": 307, "concat": [398, 423, 727, 767, 811, 840, 857, 863, 867], "concat_message_funct": [711, 755, 797], "concat_typ": 563, "concat_vid": 563, "concat_vtyp": 563, "concaten": [26, 122, 299, 393, 418, 421, 437, 438, 439, 440, 441, 442, 443, 444, 445, 454, 458, 563, 643, 677, 707, 711, 716, 727, 730, 732, 751, 770, 792, 811, 814, 821, 833, 836, 837, 841, 842, 850, 856, 857, 860, 867], "concentr": [857, 866], "concept": [144, 214, 215, 216, 701, 716, 721, 818, 821, 840, 857], "concis": [9, 710], "conclus": 857, "concret": 89, "concurr": 696, "conda": [396, 397, 398, 830, 833, 836, 837, 843, 846, 854, 856, 857], "condit": [182, 245, 419, 422, 426, 427, 477, 707, 863], "conduct": [14, 161, 163, 305, 310, 317, 318, 501, 693, 698, 714, 732], "confid": 731, "config": [236, 237, 238, 558, 698, 699, 784, 819], "configur": [0, 4, 21, 217, 231, 240, 696, 698, 699, 700, 784, 819, 846, 847, 850, 851, 855, 863], "conflict": [167, 831], "confus": 863, "conjunct": 872, "connect": [1, 4, 96, 120, 130, 133, 137, 144, 151, 152, 161, 162, 163, 171, 173, 174, 178, 180, 181, 182, 188, 220, 229, 230, 235, 340, 343, 346, 354, 355, 393, 396, 399, 407, 409, 410, 414, 415, 418, 420, 421, 430, 432, 543, 556, 560, 571, 576, 577, 637, 651, 662, 683, 696, 702, 730, 731, 732, 733, 822, 823, 829, 838, 839, 842, 850, 851, 854, 855, 856, 857, 863, 866, 867], "consecut": [6, 32, 95, 96, 125, 131, 207, 249, 287, 305, 307, 336, 567, 576, 577, 697, 699, 707, 839], "consequ": [718, 839], "consid": [53, 54, 197, 205, 214, 216, 299, 304, 305, 310, 317, 318, 385, 389, 393, 560, 565, 572, 576, 577, 699, 711, 714, 718, 720, 731, 821, 823, 825, 830, 831, 833, 839, 840, 841, 847, 856, 860, 863, 866], "consider": 863, "consist": [164, 166, 173, 177, 178, 179, 192, 241, 242, 293, 307, 316, 345, 560, 567, 572, 637, 702, 716, 721, 725, 823, 830, 833, 838, 841, 843, 854, 856, 857, 867], "const": 22, "constant": [143, 168, 179, 189, 190, 245, 405, 414, 415, 477, 685, 733, 855, 857, 867], "constexpr": 22, "constitu": [184, 860], "constrain": [195, 430, 432, 867], "constraint": [72, 240, 302, 315, 355, 356, 707, 863], "constrant": [240, 355, 356], "construct": [0, 4, 125, 130, 131, 141, 142, 143, 189, 190, 196, 210, 240, 249, 287, 299, 307, 336, 343, 355, 356, 434, 435, 436, 549, 560, 571, 637, 691, 696, 699, 703, 705, 707, 711, 717, 725, 727, 733, 790, 820, 822, 823, 836, 837, 841, 850, 856, 867, 872], "construct_negative_graph": [733, 773, 816], "constructor": [4, 12, 460, 715], "consum": [292, 711, 724], "consumpt": [711, 717, 718, 724, 826], "contain": [0, 2, 4, 6, 11, 21, 27, 28, 53, 54, 57, 58, 73, 114, 115, 116, 121, 130, 131, 132, 133, 135, 136, 140, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 157, 158, 160, 164, 166, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 181, 183, 184, 186, 191, 192, 194, 195, 207, 220, 236, 240, 241, 242, 247, 287, 290, 293, 294, 296, 299, 300, 302, 305, 306, 307, 310, 311, 315, 317, 318, 319, 322, 330, 336, 343, 348, 353, 355, 386, 391, 394, 399, 402, 403, 404, 407, 409, 410, 412, 413, 414, 417, 423, 434, 435, 436, 453, 460, 479, 543, 549, 565, 566, 567, 568, 571, 576, 577, 590, 636, 637, 644, 685, 691, 692, 696, 698, 699, 700, 706, 712, 716, 721, 730, 733, 814, 816, 825, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 843, 850, 856, 860, 861, 863, 870], "containertyp": 22, "content": [26, 159, 199, 201, 358, 690, 691, 699, 720, 737, 777, 839, 847], "context": [4, 21, 31, 42, 62, 63, 70, 89, 108, 125, 126, 131, 210, 246, 247, 249, 250, 287, 295, 299, 305, 307, 310, 312, 317, 318, 336, 337, 341, 342, 359, 389, 478, 479, 542, 550, 551, 565, 566, 567, 568, 637, 695, 706, 712, 717, 821, 831, 839, 873], "context\ub97c": 803, "contigu": [4, 323, 334, 335, 355, 543, 571, 698, 718, 850], "continu": [299, 394, 643, 691, 714, 728, 768, 812, 826], "contrari": [116, 823], "contrast": [241, 650, 656, 657, 658, 702, 718, 733, 773, 816, 838, 855, 857, 866], "contrib": 867, "contribut": [299, 430, 432, 565, 725, 867], "control": [0, 4, 13, 93, 113, 311, 392, 431, 433, 550, 551, 562, 647, 648, 660, 661, 666, 691, 818, 847], "contruct": [734, 817], "conv": [13, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 430, 432, 462, 463, 464, 465, 466, 467, 468, 469, 723, 725, 727, 734, 765, 774, 809, 811, 817], "conv1": [411, 432, 433, 716, 721, 732, 734, 760, 761, 762, 764, 772, 774, 802, 804, 805, 807, 815, 817, 820, 833, 838, 840, 841, 842, 872], "conv2": [411, 432, 433, 716, 721, 732, 734, 760, 761, 762, 764, 772, 774, 802, 804, 805, 807, 815, 817, 820, 833, 838, 840, 841, 842, 872], "conveni": [9, 689, 730, 841, 872], "convent": [0, 5, 125, 133, 144, 710], "converg": [214, 305, 317, 565, 724, 821], "convers": [22, 231, 559, 605, 643, 698, 703, 706, 724, 825], "convert": [9, 22, 109, 110, 118, 119, 125, 126, 127, 138, 139, 140, 146, 148, 169, 231, 240, 248, 249, 250, 324, 325, 327, 328, 587, 589, 592, 593, 605, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 672, 673, 691, 697, 698, 699, 703, 706, 719, 723, 724, 791, 825, 830, 839, 843, 850, 851, 855, 856], "convert_partit": 784, "convnet": 857, "convolut": [134, 149, 155, 185, 187, 193, 209, 387, 390, 393, 394, 395, 397, 400, 401, 402, 405, 411, 412, 414, 415, 416, 417, 419, 420, 422, 423, 424, 425, 426, 448, 461, 476, 560, 635, 656, 659, 660, 671, 714, 720, 728, 730, 732, 734, 770, 800, 806, 814, 815, 817, 821, 824, 827, 828, 840, 842, 856, 857, 858, 859, 863, 866, 867, 870], "convolutin": 856, "convolution\uc740": 812, "convolution\uc744": 817, "convolution\uc758": 817, "coo": [31, 32, 41, 56, 126, 131, 231, 240, 250, 287, 327, 336, 569, 591, 614, 825, 856], "coo_matrix": [126, 250, 841, 856], "coolwarm": 856, "cooper": 166, "coord": 453, "coord_feat": 405, "coord_feat_out": 405, "coordin": [12, 31, 126, 178, 179, 250, 312, 343, 405, 414, 435, 453, 549, 571, 581, 591, 614, 628, 825], "coordint": 414, "copi": [5, 7, 9, 34, 40, 56, 64, 71, 73, 89, 93, 94, 100, 108, 113, 116, 126, 130, 131, 235, 246, 247, 249, 250, 287, 291, 292, 299, 307, 312, 314, 319, 320, 336, 337, 340, 341, 342, 346, 354, 418, 478, 479, 485, 486, 487, 488, 489, 490, 542, 558, 559, 565, 566, 567, 568, 576, 577, 606, 636, 639, 640, 641, 642, 644, 645, 652, 675, 676, 678, 698, 699, 705, 707, 710, 711, 717, 722, 749, 754, 790, 792, 795, 804, 822, 831, 833, 839, 840, 841, 843, 856, 860, 863, 867, 873], "copy_": [5, 20, 675, 860, 866, 867], "copy_edata": [99, 111, 116, 130, 559, 565, 566, 567, 568, 645, 652], "copy_fil": [744, 785], "copy_lh": [502, 503], "copy_ndata": [99, 111, 116, 130, 340, 559, 565, 566, 567, 568, 636, 645], "copy_rh": [502, 503], "copy_to": [291, 292, 715, 716, 718, 719, 721, 722, 723, 830, 831, 833, 873], "copy_to_shared_memori": [299, 314], "copy_u": [5, 73, 91, 92, 93, 94, 100, 113, 428, 429, 431, 460, 678, 679, 680, 681, 682, 712, 720, 724, 727, 731, 756, 763, 767, 771, 798, 806, 808, 811, 840, 854, 856, 860], "copy_u_sum": 9, "copy_v": 9, "copyreducebackward": 406, "cora": [25, 153, 154, 289, 693, 739, 779, 820, 821, 823, 826, 830, 841, 854], "cora_v2": [139, 693, 739, 779, 820, 821, 823], "corabinari": 856, "coraful": 25, "corafulldata": [693, 739, 779], "corafulldataset": 219, "coragraphdataset": [139, 385, 428, 432, 820, 821, 823, 830, 838, 840, 841, 854], "core": [8, 696, 701, 820, 825, 826, 828, 847, 848, 849, 860, 872], "cornel": 155, "corner": 727, "corpu": 867, "correct": [21, 22, 734, 774, 817, 854], "correctli": [220, 699, 819, 856], "correspond": [7, 20, 21, 22, 27, 43, 46, 53, 54, 74, 90, 101, 102, 103, 107, 109, 113, 117, 118, 119, 122, 134, 139, 147, 148, 156, 165, 178, 179, 182, 192, 205, 210, 213, 214, 216, 221, 232, 239, 240, 299, 304, 305, 307, 310, 312, 317, 318, 322, 323, 334, 335, 343, 346, 359, 387, 396, 397, 398, 407, 418, 427, 430, 434, 435, 436, 446, 449, 453, 454, 458, 549, 559, 561, 563, 572, 615, 616, 635, 643, 651, 653, 663, 664, 671, 691, 697, 699, 706, 707, 710, 719, 720, 721, 728, 731, 732, 734, 820, 821, 822, 823, 830, 833, 836, 837, 838, 840, 856, 857, 860, 867], "correspondenc": 390, "corrsepond": 4, "corrupt": [565, 566, 567, 568, 696, 782], "cosin": [343, 434, 436, 454, 571], "cost": [9, 14, 210, 643], "costli": [642, 718, 832], "could": [9, 21, 22, 32, 66, 216, 231, 240, 241, 242, 293, 295, 299, 303, 311, 322, 359, 391, 392, 437, 439, 443, 444, 502, 503, 560, 569, 576, 577, 642, 671, 691, 693, 697, 699, 711, 715, 719, 720, 732, 734, 825, 831, 836, 837, 841, 847, 850, 856, 860], "coulomb": 177, "count": [111, 231, 305, 317, 343, 434, 436, 571, 596, 599, 600, 601, 645, 673, 838, 847], "counter": 846, "counterpart": [211, 212, 295, 322, 696, 699, 850, 851], "coupl": 866, "cours": [155, 187, 193], "coustom": 787, "cout": 22, "covari": 414, "cover": [14, 21, 209, 695, 696, 697, 698, 699, 703, 714, 722, 818, 824, 832, 867], "cp": 389, "cpp": [822, 843, 856], "cpplint": 21, "cpu": [4, 9, 10, 14, 21, 31, 42, 62, 63, 89, 108, 112, 118, 119, 125, 126, 130, 131, 209, 210, 216, 217, 241, 242, 249, 250, 287, 290, 293, 294, 305, 310, 319, 336, 339, 343, 346, 354, 434, 435, 436, 549, 550, 551, 558, 562, 563, 565, 566, 567, 568, 571, 576, 577, 637, 644, 645, 699, 705, 716, 717, 718, 721, 722, 749, 761, 790, 803, 804, 818, 819, 821, 822, 825, 828, 830, 831, 833, 836, 837, 838, 849, 850, 851, 854, 857, 860, 867, 872], "cpu_best_practis": [828, 847, 849], "cpu_count": [831, 873], "cpu\uc5d0\uc11c\ub9cc": 803, "cpu\uc758": 804, "crawlscript": 752, "creat": [1, 3, 4, 5, 9, 12, 13, 21, 22, 27, 28, 41, 42, 44, 48, 51, 55, 56, 57, 58, 60, 61, 64, 65, 70, 71, 77, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 104, 107, 109, 116, 118, 119, 125, 126, 128, 129, 131, 138, 139, 148, 156, 157, 158, 191, 197, 205, 220, 235, 246, 248, 249, 250, 287, 295, 299, 303, 304, 329, 336, 337, 341, 342, 353, 358, 359, 386, 387, 419, 422, 437, 438, 439, 440, 442, 443, 444, 445, 457, 542, 553, 554, 559, 560, 564, 569, 573, 574, 575, 612, 614, 615, 616, 617, 628, 632, 645, 647, 648, 655, 674, 677, 688, 690, 691, 693, 695, 696, 697, 699, 700, 701, 704, 705, 706, 713, 716, 721, 723, 724, 728, 730, 737, 777, 779, 781, 791, 792, 808, 819, 820, 821, 822, 831, 833, 836, 837, 838, 841, 842, 850, 851, 854, 856, 857, 860, 863, 866, 867, 873], "create_block": [127, 637], "create_dataload": [831, 833, 873], "create_dev_conda_env": 819, "create_featur": 855, "create_formats_": [56, 89, 717], "createcacul": 22, "createcalcul": 22, "creation": [4, 210, 290, 300, 695, 727, 833, 839, 843], "credit": [838, 839, 840, 841, 842, 843], "crisi": 166, "criteria": [715, 850], "criterion": [192, 428, 432, 433, 867, 872], "critic": [9, 21, 22, 137, 171, 180, 182, 188, 428, 429, 431, 433, 703, 857], "cross": [73, 101, 102, 698, 699, 712, 733, 798, 816, 841, 855, 856, 867], "cross_entropi": [429, 430, 431, 716, 723, 724, 730, 732, 734, 770, 772, 774, 808, 814, 815, 817, 821, 823, 831, 833, 838, 840, 842, 855, 856, 873], "cross_reduc": 73, "cross_sum": 73, "crossentropyloss": [428, 432, 433, 695, 724, 741, 781, 820, 850, 851, 872], "crowdsourc": 188, "crucial": [428, 429, 430, 432], "cs224w": 838, "csc": [32, 41, 56, 89, 131, 231, 240, 287, 299, 312, 323, 329, 335, 336, 567, 569, 576, 615, 825], "csc_format": [323, 335], "csc_indptr": [299, 327, 329, 723, 836, 837], "cscforamtbas": 313, "cscformatbas": [299, 302, 305, 310, 312, 313, 323, 335, 830, 833], "cscsamplinggraph": 313, "csr": [32, 41, 56, 118, 119, 126, 131, 240, 250, 287, 336, 567, 569, 576, 577, 616, 825], "csr_csc_g": 56, "csr_g": 56, "csr_matrix": [126, 250], "csrc": [843, 856], "csrmmbackward": 118, "csv": [148, 311, 688, 690, 699, 737, 777, 784, 835, 836, 837], "csvdataset": 691, "csvdatatset": 691, "csv\u662f\u4e00\u79cd\u5e38\u89c1\u7684\u683c\u5f0f": 747, "csv\uac00": 788, "ctx": [31, 62, 63], "cu": 389, "cu118": [820, 821, 822, 823], "cu121": 831, "cuda": [4, 14, 89, 108, 110, 125, 126, 210, 248, 249, 250, 287, 291, 292, 297, 300, 305, 310, 319, 330, 336, 343, 396, 397, 398, 434, 436, 571, 582, 605, 638, 705, 716, 721, 724, 749, 759, 760, 762, 764, 790, 801, 802, 803, 805, 807, 808, 819, 820, 821, 822, 823, 830, 831, 833, 838, 867, 872, 873], "cuda_g": [705, 749, 790], "cuda\ub294": 803, "cudf": 248, "cugraph": [13, 110, 248, 396, 397, 398, 638], "cugraph_g": [110, 248, 638], "cugraph_graph": 248, "cugraphbaseconv": [396, 397, 398], "cumsum": 697, "cup": [151, 152], "cur": [697, 783], "current": [1, 4, 14, 20, 21, 27, 28, 56, 130, 138, 139, 144, 200, 220, 232, 236, 239, 240, 244, 295, 355, 356, 408, 411, 457, 558, 564, 605, 696, 715, 818, 819, 851, 860], "current_devic": [210, 300], "curv": [841, 857], "cuspars": [118, 119], "custom": [4, 194, 213, 387, 417, 558, 637, 687, 688, 689, 697, 699, 702, 714, 716, 717, 719, 721, 722, 723, 725, 728, 734, 776, 805, 829, 833, 843], "customgraphconv": [720, 763, 806], "customheterographconv": [720, 763, 806], "customiz": [304, 734], "customized_parser_dataset": 691, "customized_sample_neg": 719, "customized_sample_neighbor": 715, "customizednegativesampl": 719, "customizedneighborsampl": 715, "cut": [240, 356, 687, 699, 784], "cuthil": 558, "cutoff": [178, 393], "cutom": 723, "cv": [178, 179], "cycl": [141, 172, 189, 246, 337, 478, 542, 863], "cycle_s": 189, "cython": [21, 819], "d": [4, 9, 14, 21, 120, 138, 139, 140, 146, 169, 170, 178, 179, 233, 243, 330, 356, 390, 392, 395, 399, 406, 411, 415, 419, 421, 422, 424, 425, 427, 428, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 446, 447, 450, 451, 455, 456, 459, 501, 504, 553, 554, 602, 612, 614, 615, 616, 617, 619, 620, 621, 622, 624, 628, 632, 647, 648, 670, 680, 681, 682, 691, 706, 732, 772, 815, 820, 821, 822, 825, 841, 854, 856, 866, 872], "d1": [390, 501, 504, 825], "d2": [390, 501, 504, 825], "d_": [243, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 454, 856], "d_1": [709, 753, 794], "d_2": [709, 753, 794], "d_e": 823, "d_e_inv": 823, "d_ff": [441, 442], "d_hat": [723, 820, 821, 825], "d_hat_invsqrt": [820, 821], "d_head": [441, 442], "d_i": 9, "d_k": 867, "d_model": [441, 442], "d_t": [243, 429, 430, 431], "d_v": 823, "d_v_invsqrt": 823, "dada": [836, 837], "dadta": [836, 837], "dai": [21, 164, 181, 690], "damm": 860, "data": [0, 1, 3, 4, 5, 6, 7, 13, 14, 22, 26, 27, 28, 34, 35, 41, 43, 44, 46, 47, 48, 51, 53, 54, 55, 57, 58, 59, 60, 61, 68, 70, 73, 74, 75, 77, 87, 88, 89, 91, 92, 93, 94, 100, 103, 104, 108, 112, 113, 114, 115, 116, 121, 122, 125, 126, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 232, 236, 238, 239, 240, 246, 247, 249, 250, 251, 287, 291, 292, 293, 295, 296, 302, 303, 305, 307, 310, 311, 312, 316, 317, 318, 336, 337, 341, 342, 343, 348, 353, 355, 357, 385, 387, 389, 390, 397, 404, 422, 428, 429, 430, 431, 432, 433, 434, 436, 453, 455, 457, 459, 461, 478, 479, 501, 542, 543, 550, 551, 558, 559, 569, 571, 576, 577, 587, 588, 589, 592, 593, 605, 615, 616, 617, 637, 639, 640, 641, 643, 644, 645, 672, 681, 686, 687, 689, 692, 695, 698, 700, 701, 703, 704, 705, 706, 707, 708, 710, 712, 714, 715, 718, 720, 723, 724, 726, 729, 730, 733, 734, 735, 736, 737, 738, 739, 740, 742, 744, 751, 754, 756, 759, 760, 763, 769, 770, 772, 773, 774, 775, 776, 777, 778, 779, 780, 782, 783, 784, 785, 790, 792, 793, 795, 798, 801, 802, 806, 808, 813, 814, 815, 816, 817, 819, 820, 821, 822, 825, 829, 835, 838, 839, 840, 841, 843, 846, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867], "data0": 691, "data1": 691, "data_dict": [131, 336], "data_it": 867, "data_load": 295, "data_path": 148, "data_pip": 303, "data_root_dir": [240, 698, 699, 743, 784], "data_type_dict": [693, 739, 779], "databas": [164, 843], "dataflow": 856, "datafram": [148, 248, 691, 836, 837], "datail": 179, "dataload": [10, 11, 13, 183, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 295, 305, 315, 317, 385, 389, 428, 432, 433, 457, 685, 687, 692, 693, 695, 696, 715, 716, 717, 718, 719, 721, 722, 723, 732, 738, 739, 741, 742, 759, 760, 761, 762, 764, 772, 778, 779, 781, 782, 801, 802, 803, 804, 805, 807, 815, 822, 830, 831, 833, 842, 846, 847, 850, 851, 856, 860, 872, 873], "dataloader\u4e2d\u8fd0\u884c": 742, "dataloader\u5728\u6bcf\u4e2a\u8bad\u7ec3\u5468\u671f\u90fd\u4f1a\u521b\u5efa\u65b0\u7684\u91c7\u6837\u5de5\u4f5c\u8fdb\u7a0b": 742, "dataloader\u76f8\u540c\u7684\u63a5\u53e3": 742, "dataloader\ub294": 782, "dataloader\ub97c": [802, 807], "dataloader\uc5d0\uc11c": 782, "dataloader\uc640": 782, "datapars": 691, "datapip": [7, 291, 292, 295, 297, 302, 303, 305, 308, 309, 310, 315, 317, 318, 321, 715, 716, 718, 719, 721, 722, 723, 829, 830, 831, 833, 873], "datapoint": [196, 207], "dataset": [4, 13, 14, 21, 23, 25, 120, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 210, 213, 245, 289, 292, 306, 311, 385, 428, 430, 432, 433, 477, 685, 688, 689, 690, 694, 695, 696, 721, 723, 724, 729, 732, 734, 738, 739, 741, 742, 769, 772, 776, 778, 779, 781, 782, 813, 815, 820, 821, 822, 823, 826, 828, 829, 831, 835, 836, 837, 840, 841, 842, 844, 845, 854, 857, 872, 873], "dataset_nam": [293, 306, 311, 689, 691, 736, 776, 836, 837], "dataset\ub97c": 775, "datatyp": [724, 825], "dateset": 826, "dateutil": [830, 833, 836, 837], "datset": [25, 172], "dcmake_configuration_typ": 819, "dcmake_cxx_flag": 819, "dd": [25, 168, 186, 867], "ddgl_export": 819, "ddmlc_force_shared_crt": 819, "ddp": [295, 846, 872, 873], "ddp_seed": [210, 213], "de": 867, "deadlock": 290, "deal": [122, 720, 732, 864, 870], "dealloc": 847, "debian": 819, "debug": [4, 23], "dec": 867, "dec_graph": [730, 770, 814], "decai": 411, "decid": [9, 22, 131, 336, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 426, 706, 863, 867], "declar": 696, "decod": [441, 867], "decompos": [390, 422, 860, 867], "decomposit": [390, 397, 422, 461, 721, 855], "decomposition\uc740": 807, "decor": [295, 303], "decreas": [428, 429], "dedic": 231, "dedupl": [305, 310], "deep": [4, 23, 209, 219, 411, 414, 430, 432, 443, 656, 727, 732, 734, 825, 826, 827, 839, 860, 863, 864, 870], "deepchem": [693, 739, 779], "deepcopi": 863, "deepset": 450, "deepset_encod": 450, "deepwalk": 838, "def": [4, 5, 10, 20, 22, 53, 54, 70, 73, 100, 218, 251, 252, 263, 264, 265, 266, 302, 303, 315, 387, 418, 420, 428, 429, 430, 431, 432, 433, 457, 460, 674, 675, 676, 677, 678, 679, 680, 681, 682, 685, 689, 690, 691, 692, 693, 694, 696, 697, 710, 711, 715, 716, 718, 719, 720, 721, 723, 724, 726, 727, 728, 730, 732, 733, 734, 736, 737, 738, 739, 740, 742, 754, 755, 759, 760, 761, 762, 763, 764, 766, 767, 768, 770, 772, 773, 774, 776, 777, 778, 779, 780, 782, 795, 797, 801, 802, 804, 805, 806, 807, 808, 810, 811, 812, 814, 815, 816, 817, 820, 821, 822, 823, 825, 830, 831, 833, 838, 840, 841, 842, 843, 846, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "defalt": 446, "default": [4, 6, 9, 10, 14, 23, 27, 28, 31, 32, 34, 35, 41, 48, 51, 53, 54, 61, 62, 63, 79, 81, 82, 88, 89, 116, 117, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 205, 207, 208, 209, 210, 213, 214, 216, 219, 226, 231, 232, 235, 236, 239, 240, 245, 246, 247, 249, 250, 287, 289, 290, 291, 292, 295, 297, 302, 305, 310, 311, 312, 315, 329, 336, 337, 340, 341, 342, 343, 344, 346, 348, 355, 356, 359, 385, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 446, 447, 448, 449, 450, 451, 452, 453, 457, 459, 477, 478, 479, 542, 544, 546, 549, 550, 551, 552, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 571, 572, 635, 636, 637, 642, 643, 644, 645, 653, 658, 663, 667, 669, 670, 671, 689, 691, 696, 697, 698, 699, 700, 706, 707, 710, 776, 791, 792, 819, 822, 825, 829, 830, 831, 833, 835, 836, 837, 847, 850, 851, 863, 867, 873], "defin": [4, 5, 7, 9, 13, 27, 28, 34, 35, 53, 54, 73, 91, 92, 93, 94, 100, 113, 120, 146, 156, 169, 210, 220, 243, 244, 245, 251, 252, 263, 264, 265, 266, 315, 316, 346, 347, 389, 393, 399, 411, 412, 417, 428, 429, 430, 431, 432, 433, 441, 455, 456, 476, 477, 674, 675, 676, 677, 678, 679, 680, 681, 682, 685, 687, 688, 689, 691, 695, 696, 704, 707, 709, 710, 724, 730, 732, 733, 734, 754, 774, 781, 792, 795, 808, 814, 816, 817, 820, 821, 823, 825, 835, 854, 856, 857, 867, 872], "definit": [66, 72, 240, 393, 623, 625, 626, 627, 695, 701, 716, 719, 723, 734, 855, 856, 860], "deform": 866, "defus": [214, 299, 305, 317, 565], "deg": [727, 767, 811], "deg_emb": 687, "deg_g": 856, "deg_lg": 856, "deg_proj": 856, "degg_batch": 183, "deglg_batch": 183, "degrad": 214, "degre": [4, 13, 60, 87, 120, 130, 165, 181, 183, 217, 245, 391, 396, 397, 398, 399, 401, 403, 406, 407, 409, 410, 411, 414, 417, 421, 424, 425, 431, 433, 447, 477, 480, 660, 661, 666, 670, 685, 698, 699, 719, 723, 727, 820, 821, 823, 825, 839, 840, 854, 856, 857, 860], "degree_as_nlabel": 165, "degree_embed": 447, "degree_encod": [447, 687], "degreeencod": 687, "degree\uac00": 811, "degree\ub4e4": 784, "degree\uc758": 805, "del": 863, "delet": [21, 180, 305, 310, 555, 556], "delimit": 699, "deliv": 863, "delta": [178, 179, 399, 421], "demand": [305, 310], "demo": 822, "demonstr": [42, 455, 456, 645, 691, 723, 729, 730, 824, 836, 837, 843, 850, 858, 860, 867, 870], "denomin": [4, 10, 408], "denot": [120, 243, 393, 407, 414, 425, 459, 669, 820, 821, 854, 855, 856, 857, 860], "dens": [9, 13, 226, 299, 339, 400, 401, 402, 446, 449, 501, 502, 504, 561, 606, 610, 611, 618, 621, 629, 687, 696, 716, 725, 765, 782, 802, 809, 821, 822, 825], "densiti": [183, 197, 561, 703, 747, 788, 856, 863], "departur": 860, "depend": [9, 21, 31, 89, 126, 131, 182, 210, 211, 212, 214, 215, 216, 220, 245, 249, 250, 287, 305, 307, 317, 336, 396, 397, 398, 457, 477, 553, 554, 565, 691, 699, 702, 712, 714, 716, 717, 718, 720, 721, 725, 800, 832, 847, 857, 860, 867], "dependency\ub4e4\uc744": 807, "dependency\uc5d0\uc11c": 802, "deploi": [858, 870], "deprec": [116, 144, 168, 177, 178, 179, 186, 231, 235, 636, 646, 856], "depth": [1, 229, 230, 562], "deriv": [399, 730, 821], "desc": 822, "descend": [647, 648], "descent": [14, 343, 434, 436, 571, 714, 800, 872], "describ": [5, 21, 43, 46, 47, 74, 75, 103, 167, 240, 305, 317, 320, 406, 422, 461, 637, 642, 650, 651, 656, 657, 658, 659, 699, 710, 714, 727, 729, 730, 733, 821, 823, 832, 833, 835, 836, 837, 838, 841, 843, 854, 856, 857, 863, 866], "descript": [61, 88, 131, 137, 160, 178, 179, 180, 287, 320, 336, 855, 867], "deserv": 857, "design": [4, 150, 154, 176, 244, 289, 307, 393, 567, 687, 696, 697, 699, 712, 718, 722, 732, 825, 829, 834, 856, 867], "desir": [20, 22, 120, 226, 561, 660, 661, 666, 698], "desktop": 847, "despit": 699, "dest": 863, "dest_list": 863, "destin": [4, 5, 9, 26, 27, 30, 31, 32, 34, 39, 43, 44, 45, 47, 48, 51, 52, 53, 55, 57, 60, 61, 62, 63, 73, 79, 80, 82, 87, 88, 90, 91, 92, 93, 94, 100, 104, 105, 107, 109, 113, 114, 117, 118, 119, 123, 125, 126, 127, 131, 200, 214, 216, 220, 226, 227, 231, 233, 243, 247, 248, 250, 287, 295, 299, 303, 314, 321, 322, 323, 335, 336, 354, 359, 387, 394, 396, 397, 398, 400, 401, 402, 403, 404, 407, 409, 410, 420, 423, 454, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 494, 496, 498, 500, 502, 503, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 519, 521, 522, 523, 524, 525, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 550, 553, 555, 557, 558, 561, 567, 574, 576, 577, 637, 652, 653, 659, 668, 676, 691, 698, 699, 707, 710, 712, 719, 726, 727, 728, 792, 798, 801, 831, 832, 836, 839, 840, 841, 843, 856, 860, 867, 873], "destination_typ": [707, 751, 792], "destroi": [4, 696], "destroy_process_group": 872, "dests_prob": 863, "dests_scor": 863, "detach": [385, 822, 830, 831, 833, 840, 850, 856, 873], "detail": [4, 9, 21, 22, 91, 146, 169, 209, 214, 216, 217, 220, 222, 223, 224, 225, 230, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 566, 623, 625, 626, 627, 684, 685, 687, 691, 693, 695, 696, 697, 699, 703, 710, 713, 715, 716, 717, 719, 721, 722, 723, 727, 734, 818, 819, 826, 836, 837, 840, 843, 850, 851, 857, 863, 867, 872, 873], "detect": [145, 161, 163, 181, 183, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 858, 870], "determin": [4, 26, 231, 241, 242, 299, 305, 310, 399, 421, 453, 561, 565, 566, 567, 568, 643, 697, 699, 707, 724, 726, 727, 866], "determinist": [131, 198, 305, 317, 336, 387, 558], "dev": [183, 184, 207, 724, 819, 820, 821, 822, 823, 825, 830, 833, 836, 837, 854, 857, 860], "dev_data": 184, "devel": 819, "develop": [22, 27, 28, 30, 31, 41, 44, 45, 56, 82, 95, 96, 101, 102, 104, 105, 109, 114, 115, 359, 555, 556, 642, 643, 696, 714, 716, 721, 731, 819, 839, 847, 850], "deviat": [399, 421, 453], "devic": [4, 7, 13, 31, 34, 35, 43, 46, 48, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 74, 87, 88, 89, 93, 94, 100, 103, 108, 125, 126, 130, 131, 208, 209, 210, 211, 212, 214, 216, 217, 246, 247, 248, 249, 250, 287, 290, 291, 294, 296, 299, 300, 307, 312, 314, 319, 320, 327, 330, 336, 337, 341, 342, 343, 396, 397, 398, 434, 435, 436, 457, 478, 479, 542, 549, 550, 551, 558, 564, 565, 566, 567, 568, 571, 585, 605, 617, 685, 695, 705, 706, 715, 716, 717, 718, 719, 721, 722, 723, 724, 741, 749, 759, 760, 761, 762, 764, 781, 790, 801, 802, 803, 804, 805, 807, 808, 821, 822, 825, 830, 831, 833, 836, 837, 840, 846, 856, 860, 867, 872, 873], "device_count": [831, 872, 873], "device_id": 872, "device_typ": 724, "df": [229, 230, 248, 545, 691, 836, 837], "dfrac": [446, 822], "dfs_labeled_edg": 230, "dfs_labeled_edges_gener": 545, "dgl": [13, 14, 20, 23, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 701, 702, 704, 705, 706, 709, 710, 711, 712, 714, 715, 716, 719, 720, 721, 724, 725, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 748, 749, 750, 751, 752, 754, 755, 756, 759, 760, 761, 762, 763, 764, 765, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 783, 784, 789, 790, 791, 793, 795, 796, 797, 798, 801, 802, 804, 805, 806, 807, 808, 809, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 826, 828, 829, 832, 840, 841, 843, 845, 846, 847, 850, 851, 858, 861, 862, 863, 866, 868, 872, 873], "dgl_declare_object_type_info": 22, "dgl_download_dir": 23, "dgl_g": 821, "dgl_home": 21, "dgl_library_path": 21, "dgl_log_debug": 23, "dgl_mxnet_set_np_shap": 819, "dgl_partition_to_graphbolt": 850, "dgl_register_glob": 22, "dgl_repo": 23, "dgl_warn": [860, 863, 866], "dglarg": 22, "dglbackend": [21, 23, 819, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 860, 863, 866, 872, 873], "dglblock": [127, 131, 396, 397, 398, 637], "dglbuiltindataset": [134, 141, 142, 143, 145, 147, 159, 160, 162, 164, 165, 166, 168, 174, 175, 181, 184, 186, 189, 190, 192, 194, 195, 690, 693, 737, 739, 777, 779], "dgldataset": [138, 139, 140, 148, 167, 172, 173, 177, 178, 179, 183, 197, 198, 306, 688, 691, 693, 729, 735, 736, 739, 769, 775, 779, 813], "dgldataset\u7c7b": [735, 752], "dgldefaultdir": 23, "dglerror": [27, 28, 95, 96, 391, 403, 406, 407, 408, 409, 410, 411, 414, 417, 424, 637, 705, 707, 749, 751, 790, 792], "dglfunccal": 22, "dglgraph": [0, 4, 5, 6, 9, 13, 22, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 209, 210, 222, 223, 224, 225, 229, 230, 231, 234, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 295, 328, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 359, 385, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 459, 460, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 683, 685, 691, 692, 693, 694, 696, 697, 699, 701, 703, 704, 706, 707, 727, 732, 738, 739, 742, 745, 747, 748, 749, 750, 751, 759, 760, 762, 767, 772, 778, 779, 780, 782, 783, 784, 786, 788, 789, 791, 792, 801, 802, 805, 811, 815, 839, 841, 842, 854, 855, 856, 857, 860, 863, 866], "dglgraphinst": 328, "dglgraphproppreddataset": [138, 692, 738, 778, 822], "dglgraph\ub85c": 788, "dgllinkproppreddataset": [692, 738, 778, 851], "dglnn": [387, 716, 718, 719, 721, 732, 734, 760, 762, 764, 772, 774, 802, 805, 807, 815, 817, 822, 830, 850, 851, 873], "dglnodeproppreddataset": [692, 738, 778, 850], "dglretvalu": 22, "dglroutinglay": 866, "dglsp": [12, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 723, 820, 821, 822, 823, 825], "dglwarn": [860, 863, 866], "dgl\u4e0d\u63d0\u4f9b\u5bf9\u6765\u81ea\u591a\u4e2a\u8bad\u7ec3\u5668\u7684\u5e76\u53d1\u5199\u5165\u7684\u4fdd\u62a4": 742, "dgl\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 763, "dgl\u4e2d\u7684": 762, "dgl\u4e3a\u5206\u5e03\u5f0f\u5f20\u91cf\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u5355\u673a\u666e\u901a\u5f20\u91cf\u7684\u63a5\u53e3": 742, "dgl\u4e5f\u4f1a\u6839\u636e\u8fb9\u88ab\u6dfb\u52a0\u7684\u987a\u5e8f": 750, "dgl\u4e5f\u652f\u6301\u4ece\u5176\u4ed6\u7684\u6570\u636e\u6e90\u6765\u521b\u5efa\u56fe\u5bf9\u8c61": 750, "dgl\u4e5f\u652f\u6301\u76f4\u63a5\u4eces3": 747, "dgl\u4ec5\u5141\u8bb8\u521b\u5efa\u5355\u4e2adistgraph\u5bf9\u8c61": 742, "dgl\u4ec5\u652f\u6301\u5bc6\u96c6\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 742, "dgl\u4ee5\u540e\u5c06\u4e3a\u7a00\u758f\u5d4c\u5165\u6dfb\u52a0\u66f4\u591a\u7684\u4f18\u5316\u5668": 742, "dgl\u4f18\u5316\u4e86\u6d88\u606f\u4f20\u9012\u7684\u5185\u5b58\u6d88\u8017\u548c\u8ba1\u7b97\u901f\u5ea6": 755, "dgl\u4f1a\u5212\u5206\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 742, "dgl\u4f1a\u5728\u5185\u90e8\u5c061\u6761\u65e0\u5411\u8fb9\u8f6c\u6362\u4e3a2\u6761\u6709\u5411\u8fb9": 747, "dgl\u4f1a\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 741, "dgl\u4f1a\u5c06\u5b83\u4eec\u5206\u7247\u5e76\u5b58\u50a8\u5728\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8ba1\u7b97\u673a\u4e0a": 742, "dgl\u4f1a\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u6bcf\u6761\u8fb9": 748, "dgl\u4f1a\u68c0\u67e5\u8f93\u5165\u56fe\u4e2d\u662f\u5426\u6709\u5165\u5ea6\u4e3a0\u7684\u8282\u70b9": 767, "dgl\u4f7f\u7528\u4e00\u4e2a\u4e00\u7ef4\u7684\u6574\u578b\u5f20\u91cf": 750, "dgl\u4f7f\u7528\u4e00\u4e2a\u5305\u542b2\u4e2a\u8282\u70b9\u5f20\u91cf\u7684\u5143\u7ec4": 750, "dgl\u4f7f\u7528\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u6765\u8868\u793a\u4e00\u4e2a\u8282\u70b9": 750, "dgl\u4f7f\u7528\u6700\u65b0\u7248\u672c\u7684meti": 743, "dgl\u4fdd\u8bc1\u8fb9\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u4e0e\u751f\u6210\u7684\u5757\u5217\u8868\u4e2d\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u76f8\u540c": 760, "dgl\u5047\u5b9a\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7684\u9700\u8981\u5408\u5e76\u7684\u7279\u5f81\u5177\u6709\u76f8\u540c\u7684\u5927\u5c0f\u548c\u6570\u636e\u7c7b\u578b": 751, "dgl\u5185\u7f6e\u4e86\u5e38\u89c1\u7684\u56fe\u8bfb\u51fa\u51fd\u6570": 772, "dgl\u5185\u7f6e\u7684nn\u6a21\u5757\u5982\u679c\u5728forward\u51fd\u6570\u4e2d\u652f\u6301\u4e00\u4e2a\u53ef\u9009\u7684": 771, "dgl\u5185\u7f6e\u7684\u6d88\u606f": 767, "dgl\u53ef\u4ee5\u5904\u7406\u6700\u591a": 750, "dgl\u53ef\u4ee5\u95f4\u63a5\u5730\u4ece\u8fd9\u4e9b\u6765\u6e90\u521b\u5efa\u56fe": 747, "dgl\u540c\u6837\u652f\u6301\u5b83\u5728mxnet\u548ctensorflow\u540e\u7aef\u91cc\u7684\u5b9e\u73b0": [763, 772], "dgl\u548c\u8fd9\u4e9b\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6\u7684\u4e3b\u8981\u5dee\u5f02\u662f\u5176\u72ec\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c": 765, "dgl\u5728": 735, "dgl\u5728\u5185\u90e8\u5c06scipy\u77e9\u9635\u548cnetworkx\u56fe\u8f6c\u6362\u4e3a\u5f20\u91cf\u6765\u521b\u5efa\u56fe": 747, "dgl\u5728\u547d\u540d\u7a7a\u95f4": 754, "dgl\u5728\u96c6\u7fa4\u6240\u6709\u673a\u5668\u4e0a\u8fd0\u884c\u76f8\u540c\u7684\u8bad\u7ec3\u811a\u672c": 741, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6574\u56fe\u5206\u7c7b\u7684\u6837\u4f8b": 772, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u5206\u5e03\u5f0f\u7ec4\u4ef6\u4ee5\u652f\u6301\u5206\u5e03\u5f0f\u8bad\u7ec3": 741, "dgl\u5b9e\u73b0\u4e86\u4e00\u4e9b\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u65b9\u6cd5\u548c\u4f7f\u7528\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u7ba1\u9053": 758, "dgl\u5b9e\u73b0\u4e86\u591a\u4e2a\u53ef\u7528\u4e8e\u751f\u6210\u8fb9\u754c\u7684\u51fd\u6570": 759, "dgl\u5bf9\u8fb9\u754c\u5b50\u56fe\u505a\u4e86\u4e00\u4e2a\u8f6c\u6362": 759, "dgl\u5c06\u56fe\u5212\u5206\u7ed3\u679c\u5b58\u50a8\u5728\u8f93\u51fa\u76ee\u5f55\u4e2d\u7684\u591a\u4e2a\u6587\u4ef6\u4e2d": 743, "dgl\u5c06\u9700\u8981\u8ba1\u7b97gnn\u8f93\u51fa\u7684\u8282\u70b9\u79f0\u4e3a": 759, "dgl\u5df2\u7ecf\u96c6\u6210\u4e86\u5f88\u591a\u5e38\u7528\u7684": 765, "dgl\u5efa\u8bae": 754, "dgl\u5efa\u8bae\u4f7f\u7528\u8282\u70b9\u63a9\u7801\u6765\u6307\u5b9a\u6570\u636e\u96c6\u7684\u5212\u5206": 739, "dgl\u5efa\u8bae\u7528\u6237\u5b9e\u73b0\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e\u7684\u51fd\u6570": 740, "dgl\u5efa\u8bae\u7528\u6237\u5c3d\u91cf\u51cf\u5c11\u8fb9\u7684\u7279\u5f81\u7ef4\u6570": 755, "dgl\u5efa\u8bae\u8ba9": 739, "dgl\u5efa\u8bae\u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ece\u70b9\u5230\u8fb9\u7684\u5185\u5b58\u62f7\u8d1d": 755, "dgl\u63a8\u8350\u4f7f\u7528tensor\u4f5c\u4e3adgl": 750, "dgl\u63a8\u8350\u7528\u6237\u5c06\u56fe\u6570\u636e\u5904\u7406\u4e3a": 735, "dgl\u63a8\u8350\u91cd\u65b0\u6392\u5217\u56fe\u7684\u8282\u70b9": 739, "dgl\u63d0\u4f9b": 742, "dgl\u63d0\u4f9b\u4e86": [742, 751, 759, 768], "dgl\u63d0\u4f9b\u4e864\u4e2a\u51fd\u6570\u8ba9\u4efb\u52a1\u53d8\u5f97\u7b80\u5355": 740, "dgl\u63d0\u4f9b\u4e86api\u4ee5\u4ece\u78c1\u76d8\u4e2d\u52a0\u8f7d\u6216\u5411\u78c1\u76d8\u91cc\u4fdd\u5b58\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u56fe": 747, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2aapi\u4ee5\u6267\u884c\u8fd9\u4e24\u4e2a\u6b65\u9aa4": 743, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6ee1\u8db3\u8fd9\u4e2a\u529f\u80fd\u7684\u51fd\u6570": 771, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684rgcn\u7684\u7aef\u5230\u7aef\u7684\u4f8b\u5b50": 774, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a00\u758f\u7684adagrad\u4f18\u5316\u5668": 742, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u793a\u4f8b": 764, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5185\u7f6e\u7684\u56fe\u5377\u79ef\u6a21\u5757": 774, "dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5de5\u5177": 741, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784": 742, "dgl\u63d0\u4f9b\u4e86\u4e09\u79cd\u5206\u5e03\u5f0f\u6570\u636e\u7ed3\u6784\u548c\u591a\u79cdapi": 742, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u7ea7\u522b\u7684api": 742, "dgl\u63d0\u4f9b\u4e86\u4e24\u4e2a\u811a\u672c\u6765\u5e2e\u52a9\u7528\u6237\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 744, "dgl\u63d0\u4f9b\u4e86\u4e24\u79cd\u65b0\u7c7b\u578b\u7684\u8bed\u6cd5": 751, "dgl\u63d0\u4f9b\u4e86\u51e0\u4e2a\u90bb\u5c45\u91c7\u6837\u7c7b": 764, "dgl\u63d0\u4f9b\u4e86\u5206\u5e03\u5f0f\u7684api": 741, "dgl\u63d0\u4f9b\u4e86\u540d\u4e3a": 739, "dgl\u63d0\u4f9b\u4e86\u5728\u540c\u6784\u56fe\u4e0a\u505a\u94fe\u8def\u9884\u6d4b\u7684\u4e00\u4e2a\u793a\u4f8b": 762, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u91c7\u6837\u7684\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668": 742, "dgl\u63d0\u4f9b\u4e86\u7528\u4e8e\u542f\u52a8\u96c6\u7fa4\u4e2d\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684tool": 744, "dgl\u63d0\u4f9b\u4e86\u7aef\u5230\u7aef\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684": 764, "dgl\u63d0\u4f9b\u4e86\u8fdb\u884c\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u7684\u65b9\u6cd5": 750, "dgl\u63d0\u4f9b\u7684\u4e00\u4e9b\u91c7\u6837\u65b9\u6cd5\u4e5f\u652f\u6301\u5f02\u6784\u56fe": 764, "dgl\u652f\u6301": 754, "dgl\u652f\u6301\u4f7f\u7528": 750, "dgl\u652f\u6301\u5185\u7f6e\u7684\u805a\u5408\u51fd\u6570": 754, "dgl\u73b0\u5728\u652f\u6301": 754, "dgl\u7684gin\u6837\u4f8b": 772, "dgl\u7684graphsage\u6837\u4f8b": 774, "dgl\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3\u5177\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u4ea4\u4e92\u8fdb\u7a0b": 741, "dgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u5c0f\u6279\u6b21\u751f\u6210\u4e09\u9879": 762, "dgl\u786e\u4fdd\u5757\u7684\u8f93\u51fa\u8282\u70b9\u5c06\u59cb\u7ec8\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 759, "dgl\u793e\u533a\u7684\u4e00\u7fa4\u70ed\u5fc3\u8d21\u732e\u8005\u628adgl\u7528\u6237\u6307\u5357\u8bd1\u6210\u4e86\u4e2d\u6587": 752, "dgl\u79f0\u4e4b\u4e3a": 750, "dgl\u79f0\u5b83\u4eec\u4e3a\u7ea2\u8272\u8282\u70b98\u5728\u7b2c\u4e8c\u4e2agnn\u5c42\u7684": 759, "dgl\u79f0\u5b83\u4eec\u4e3a\u89c4\u8303\u8fb9\u7c7b\u578b": 751, "dgl\u79f0\u8fd9\u79cd\u4ec5\u5305\u542b\u5fc5\u8981\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u4e8c\u5206\u56fe\u4e3a\u4e00\u4e2a": 759, "dgl\u8981\u6c42\u9884\u5904\u7406\u56fe\u6570\u636e\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 743, "dgl\u901a\u8fc7\u5176\u6838\u5fc3\u6570\u636e\u7ed3\u6784": 745, "dgl\u91c7\u7528\u5b8c\u5168\u5206\u5e03\u5f0f\u7684\u65b9\u6cd5": 741, "dgl\u91cc\u5bf9\u56fe\u8fdb\u884c\u53d8\u6362\u7684\u51fd\u6570\u4f1a\u53bb\u6389\u56fe\u4e0a\u7684\u6279\u6b21\u4fe1\u606f": 772, "dgl\u9ed8\u8ba4\u4f7f\u7528int64": 750, "dgl\ub294": [791, 807, 815], "dgl\uc5d0\uc11c": [783, 784, 787, 791, 792, 795, 802, 807, 811, 813], "dgl\uc5d0\uc11c\ub294": [779, 780, 791, 797, 801, 802, 805, 807], "dgl\uc740": [775, 776, 779, 780, 781, 782, 783, 784, 785, 786, 788, 791, 792, 795, 796, 797, 800, 801, 806, 808, 809, 814, 815, 817], "dgl\uc758": [779, 781, 782, 784, 792, 794, 795, 797, 805, 806, 807, 811], "dgl\uc774": [784, 801, 802, 807], "dgmg": [864, 870], "dgmg_cycl": 863, "dgmg_msg": 863, "dgmg_reduc": 863, "dgmgskeleton": 863, "dgn": 399, "dh": 822, "diag": [609, 613, 618, 619, 620, 631, 723, 820, 821, 823, 825], "diagmatrix": [592, 593], "diagon": [390, 401, 411, 422, 425, 612, 613, 617, 618, 619, 820, 821, 823, 856], "diagram": 699, "dichotomi": [120, 245, 477], "dict": [4, 20, 27, 28, 43, 46, 47, 56, 73, 74, 75, 103, 114, 115, 121, 130, 131, 148, 203, 204, 205, 206, 208, 210, 213, 214, 216, 219, 220, 222, 223, 224, 225, 234, 236, 237, 238, 240, 241, 242, 246, 288, 294, 296, 297, 298, 299, 301, 302, 307, 311, 312, 313, 314, 315, 316, 319, 322, 323, 326, 329, 334, 335, 336, 337, 341, 342, 348, 355, 359, 386, 387, 388, 389, 428, 429, 430, 431, 432, 433, 478, 542, 543, 558, 565, 566, 568, 569, 637, 645, 651, 683, 694, 699, 764, 780, 801, 807, 841, 860, 863, 866, 867], "dict_kei": 387, "dictionari": [22, 43, 46, 47, 74, 75, 101, 102, 103, 121, 122, 131, 148, 210, 220, 236, 240, 242, 246, 297, 299, 301, 307, 312, 314, 322, 323, 334, 335, 336, 337, 341, 342, 348, 386, 429, 431, 478, 542, 565, 566, 568, 645, 683, 691, 699, 707, 712, 715, 716, 721, 728, 730, 734, 784, 798, 812, 838, 841, 843], "dictionary\uac00": 784, "dictionary\ub294": 784, "dictionary\ub4e4\uc744": 807, "dictionary\ub97c": [784, 805], "dictionary\uc5d0": 784, "dictionary\uc640": 805, "dict\u5bf9\u8c61": 740, "diff": 327, "differ": [4, 5, 11, 51, 61, 73, 88, 91, 92, 113, 116, 120, 126, 131, 135, 136, 138, 139, 140, 151, 152, 153, 158, 159, 172, 178, 179, 186, 192, 214, 216, 217, 219, 220, 229, 230, 235, 240, 243, 245, 249, 250, 287, 299, 301, 304, 305, 307, 323, 336, 341, 342, 355, 356, 386, 387, 389, 404, 421, 425, 430, 431, 432, 433, 436, 450, 460, 477, 565, 567, 571, 636, 642, 691, 693, 696, 699, 701, 702, 704, 707, 712, 714, 716, 718, 719, 721, 722, 723, 724, 725, 726, 727, 728, 732, 733, 734, 789, 792, 822, 823, 825, 830, 831, 836, 837, 839, 842, 847, 850, 855, 856, 857, 858, 860, 861, 863, 866, 867, 870, 872, 873], "differenti": [118, 119, 716, 857], "diffus": [660, 661, 666, 670, 824], "diffuse_op": 670, "digit": [199, 200], "digraph": [125, 249, 644, 703, 747, 788], "dii": 21, "dill": 831, "dim": [73, 263, 264, 265, 266, 330, 343, 387, 414, 450, 451, 571, 596, 599, 600, 601, 602, 603, 622, 647, 648, 677, 685, 710, 711, 734, 754, 755, 774, 795, 797, 817, 820, 821, 822, 825, 830, 840, 854, 855, 857, 863, 866], "dim_ff": 867, "dim_model": 867, "dim_nfeat": 842, "dimens": [4, 5, 9, 10, 14, 20, 139, 150, 154, 176, 294, 304, 319, 330, 343, 359, 387, 395, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 434, 436, 443, 447, 451, 457, 505, 549, 571, 596, 599, 600, 601, 602, 603, 610, 618, 622, 624, 647, 648, 687, 697, 704, 710, 711, 712, 726, 732, 820, 822, 825, 838, 840, 842, 854, 855, 857, 867, 872], "dimension": [9, 159, 304, 307, 343, 406, 408, 412, 414, 434, 436, 562, 563, 564, 571, 704, 711, 821, 839, 842], "dipol": [178, 179], "dir": [399, 699, 784], "dir1": 399, "direct": [6, 123, 124, 126, 134, 149, 155, 159, 178, 185, 187, 193, 229, 230, 248, 249, 289, 290, 294, 296, 300, 319, 343, 345, 399, 447, 545, 547, 548, 550, 572, 636, 649, 672, 691, 702, 703, 706, 787, 832, 839, 840, 856, 863, 866], "direction": 702, "directli": [9, 21, 64, 71, 89, 108, 109, 112, 117, 131, 148, 210, 231, 246, 305, 307, 310, 317, 318, 337, 341, 342, 343, 348, 397, 434, 436, 478, 542, 569, 571, 652, 653, 691, 703, 823, 825, 840, 841, 843, 846, 850, 855], "directoractor": 134, "directori": [21, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 209, 289, 311, 689, 690, 694, 698, 700, 776, 777, 780, 819, 835, 836, 837, 846, 850, 867], "dirnam": 202, "disabl": [4, 9, 710, 819, 831, 847], "disable_shared_mem": 4, "disallow": 564, "disambigu": 707, "disappear": [4, 696], "disast": 856, "discard": [27, 28, 114, 115, 116, 117, 130, 246, 247, 337, 340, 346, 354, 478, 479, 542, 556, 559, 636, 645, 646, 732, 822], "discov": [867, 868, 870], "discoveri": 863, "discret": [661, 857], "disct": 637, "discuss": [21, 637, 729, 734, 856], "diseas": [565, 566, 707, 751, 792], "disease\u6cbb\u7597\u8fb9": 751, "disease\u8282\u70b9": 751, "disjoint": 122, "disk": [4, 138, 139, 140, 156, 203, 206, 293, 294, 300, 311, 319, 320, 689, 690, 694, 699, 776, 830, 834, 836, 837, 841, 843], "dislik": [729, 730, 769, 770, 813, 814], "dislike_dst": [729, 769, 813], "dislike_src": [729, 769, 813], "dispatch": [9, 698], "dispatch_data": 699, "displai": [56, 821, 860], "dist": [343, 434, 435, 436, 451, 452, 549, 571, 572, 685, 687, 822, 828, 831, 846, 853, 872, 873], "dist_anim": 866, "dist_graph": [696, 742, 782], "dist_list": 866, "dist_matrix": 866, "distanc": [6, 178, 179, 243, 343, 393, 434, 435, 436, 451, 452, 549, 571, 572, 685, 687, 863], "distdataload": [4, 211, 212, 695, 696, 741, 742, 781, 782], "distedgedataload": [696, 742, 851], "distembed": [4, 695, 741, 742, 781], "distgraph": [4, 211, 212, 233, 234, 240, 241, 242, 695, 697, 699, 741, 742, 743, 781, 783, 784, 850, 851], "distgraphserv": 4, "distgraph\u5c06\u56fe\u6570\u636e\u52a0\u8f7d\u5230\u672c\u5730\u8ba1\u7b97\u673a\u4e2d": 742, "distgraph\uc758": 782, "distinct": [142, 691, 858, 870], "distinguish": [68, 156, 642, 685, 691, 707, 825], "distmult": 855, "distnodedataload": [696, 742, 782, 850, 851], "distplot": 866, "distribut": [13, 120, 142, 174, 197, 205, 210, 211, 212, 213, 226, 227, 245, 295, 299, 321, 357, 358, 386, 414, 430, 432, 457, 477, 567, 698, 708, 719, 730, 733, 741, 742, 743, 781, 783, 784, 805, 828, 831, 846, 853, 857, 863, 866, 867, 873], "distributeddataparallel": [210, 213, 695, 741, 781, 831, 846, 850, 851, 872, 873], "distributeditemsampl": [831, 873], "distributedli": [295, 696], "distributedsampl": [210, 213], "disttenor": 4, "disttensor": [4, 232, 239, 695, 696, 697, 741, 742, 781, 782, 783], "disttensor\u4e2d\u7684\u884c\u6570\u5fc5\u987b\u4e0e\u56fe\u4e2d\u7684\u8282\u70b9\u6570\u6216\u8fb9\u6570\u76f8\u540c": 742, "div": [9, 255, 256, 269, 270, 279, 280, 493, 494, 502, 503, 512, 513, 514, 515, 516, 517, 534, 535, 710, 754, 795, 825], "dive": [727, 827], "divers": 867, "divid": [45, 68, 79, 82, 105, 142, 143, 189, 190, 232, 239, 401, 417, 650, 720, 723, 727, 811, 841, 854, 857], "divis": [4, 399, 408, 421, 422, 446, 448, 449, 613, 625], "dl": [134, 173, 818], "dlg": 784, "dlg\uc758": 795, "dm": 866, "dmlc": [21, 819, 846], "dncoder": 867, "dnn": [725, 809], "do": [4, 9, 21, 22, 70, 89, 101, 102, 114, 116, 130, 140, 180, 240, 299, 334, 343, 353, 355, 387, 427, 434, 436, 446, 447, 449, 451, 452, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 557, 561, 566, 571, 637, 690, 696, 706, 707, 714, 715, 720, 721, 730, 733, 734, 801, 833, 834, 836, 837, 838, 841, 856, 857, 860, 863], "do_someth": 0, "doc": [9, 14, 168, 186, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 716, 728, 825, 840], "docstr": 21, "document": [8, 22, 214, 216, 240, 835, 850], "doc\uc5d0\uc11c": 812, "doe": [4, 8, 21, 26, 27, 28, 64, 71, 93, 113, 116, 130, 131, 134, 149, 155, 164, 185, 187, 193, 294, 295, 303, 336, 355, 457, 503, 543, 579, 596, 599, 600, 601, 618, 637, 660, 661, 666, 690, 696, 698, 699, 703, 707, 711, 717, 721, 727, 730, 737, 777, 792, 811, 825, 828, 838, 840, 841, 842, 843, 844, 845, 854, 856, 857, 860, 863, 867, 872], "doesn": [4, 56, 168, 200, 724, 856], "doi": [134, 163, 173], "domain": [288, 298, 311, 320, 835, 836, 837, 841, 847], "don": [21, 89, 241, 242, 562, 564, 565, 637, 718, 825, 867], "done": [6, 21, 156, 334, 685, 689, 696, 820, 821, 823, 838, 840, 841, 846, 847, 850, 854, 855, 856, 857], "donghuixu": 752, "donot_use_mm_for_euclid_dist": [435, 549], "dot": [9, 257, 258, 271, 272, 281, 282, 403, 454, 495, 496, 502, 518, 519, 536, 537, 710, 724, 730, 733, 754, 773, 795, 805, 808, 814, 816, 822, 841, 851, 856, 857, 860, 867], "dotpredictor": [730, 770, 814, 841], "dotproductpredictor": [730, 733, 770, 773, 814, 816], "doubl": [9, 22, 173, 243, 639, 691, 704, 710, 789, 795, 863], "down": [292, 305, 822, 854, 857], "download": [2, 21, 23, 132, 133, 134, 135, 136, 137, 141, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 202, 289, 688, 689, 692, 736, 737, 776, 777, 819, 820, 821, 823, 825, 830, 833, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "downstream": [699, 730, 733, 734, 829, 850, 855], "doxygen": 21, "dozen": 22, "dpi": 866, "dramat": 857, "draw": [389, 830, 860, 863], "draw_circular": 863, "draw_networkx": 856, "draw_networkx_edg": [821, 866], "draw_networkx_nod": [821, 866], "drawn": [718, 823], "drive": [21, 294], "driven": [864, 870], "drop": [4, 210, 213, 248, 295, 303, 305, 317, 651, 656, 657, 660, 661, 666, 831, 866, 873], "drop_last": [4, 209, 210, 213, 214, 215, 216, 219, 220, 295, 303, 695, 717, 732, 741, 759, 760, 761, 762, 764, 772, 781, 801, 802, 803, 804, 805, 807, 815, 831, 842, 846, 850, 851, 856, 873], "drop_uneven_input": [295, 831, 873], "dropbox": 21, "dropedg": 13, "dropnod": 13, "dropout": [392, 396, 397, 398, 399, 402, 407, 409, 410, 415, 418, 419, 421, 422, 423, 426, 427, 441, 442, 446, 448, 449, 687, 695, 718, 723, 724, 734, 741, 781, 817, 823, 831, 857, 860, 867, 873], "dropouta": [441, 442], "dropouth": [441, 442], "dropout\u6982\u7387": 774, "drug": [52, 122, 565, 566, 683, 707, 751, 792, 863], "drugai": 752, "drug\u76f8\u4e92\u4f5c\u7528\u8fb9": 751, "drug\u8282\u70b9": 751, "dst": [34, 62, 63, 68, 110, 220, 243, 359, 394, 403, 404, 407, 409, 410, 414, 417, 423, 454, 455, 456, 558, 561, 614, 637, 638, 642, 677, 693, 703, 710, 711, 716, 719, 724, 727, 728, 730, 733, 739, 747, 754, 755, 759, 760, 762, 767, 768, 770, 773, 779, 788, 795, 797, 801, 802, 805, 808, 811, 812, 814, 816, 831, 840, 841, 843, 857, 867, 873], "dst_dtype": [727, 767, 811], "dst_field": 867, "dst_id": [59, 126, 250, 287, 691, 698, 784], "dst_id_field": 691, "dst_input": [728, 768, 812], "dst_node": [323, 637, 801, 811], "dst_node_id": 698, "dst_timestamp": 323, "dst_type": [131, 336, 429, 431], "dst_x": 716, "dstdata": [4, 9, 44, 68, 208, 221, 222, 387, 576, 637, 695, 697, 711, 720, 723, 727, 728, 741, 755, 759, 763, 764, 767, 768, 781, 783, 797, 801, 806, 807, 811, 812], "dstnode": [43, 68, 208, 222, 637, 720, 759, 763, 801, 806], "dsttype": [26, 68, 105, 226, 227, 387, 712, 728, 756, 768, 798, 812], "dt": 691, "dtype": [4, 10, 21, 47, 64, 75, 95, 96, 117, 126, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 246, 247, 250, 299, 304, 311, 327, 337, 341, 342, 357, 358, 387, 452, 478, 479, 542, 555, 556, 557, 562, 564, 576, 577, 587, 592, 605, 617, 642, 656, 657, 664, 670, 683, 685, 691, 693, 696, 698, 699, 704, 707, 717, 718, 724, 728, 729, 730, 739, 742, 748, 751, 768, 769, 770, 779, 782, 784, 789, 792, 808, 812, 813, 814, 822, 825, 830, 831, 833, 836, 837, 839, 842, 843, 850, 851, 854, 856, 857, 867, 873], "due": [22, 118, 119, 192, 290, 295, 305, 310, 311, 558, 643, 706, 718, 854, 867], "dump": [784, 851], "duplic": [116, 135, 136, 151, 152, 153, 186, 192, 289, 337, 341, 342, 432, 478, 542, 590, 645, 653, 673, 698, 825, 860], "dur": [854, 857], "dure": [5, 21, 89, 231, 242, 295, 343, 346, 424, 434, 436, 561, 565, 566, 571, 635, 671, 696, 698, 699, 705, 710, 715, 721, 831, 836, 837, 839, 847, 850, 857, 860, 863, 866, 867], "duse_cuda": 819, "duse_libxsmm": 819, "duse_openmp": 819, "dvd": 137, "dwivedi": 822, "dx": [163, 399, 856, 867], "dynam": [406, 864, 866, 867, 868, 870], "e": [0, 4, 5, 9, 21, 22, 26, 41, 42, 48, 54, 62, 63, 70, 108, 112, 118, 119, 120, 122, 125, 126, 130, 131, 166, 174, 178, 186, 210, 213, 220, 240, 244, 245, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 269, 271, 273, 275, 277, 279, 281, 283, 285, 287, 292, 293, 305, 310, 336, 343, 345, 359, 387, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 432, 434, 436, 451, 454, 455, 456, 460, 477, 502, 503, 550, 551, 558, 559, 563, 564, 569, 571, 574, 576, 577, 612, 614, 615, 616, 628, 643, 644, 660, 661, 666, 675, 676, 678, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 706, 709, 710, 711, 715, 716, 724, 730, 731, 732, 738, 746, 753, 754, 771, 778, 779, 787, 794, 795, 796, 819, 820, 821, 822, 823, 825, 826, 832, 838, 839, 840, 841, 847, 856, 857, 863, 867, 872], "e1": [299, 323, 329, 335], "e2": [299, 323, 329, 335], "e2d": 867, "e2n": 672, "e_": [393, 403, 404, 408, 409, 410, 412, 413, 415, 416, 417, 420, 421, 422, 423, 832, 840, 856, 857], "e_add_u": 5, "e_add_v": 5, "e_attr": 125, "e_div_u": 5, "e_div_v": 5, "e_dot_u": 5, "e_dot_v": 5, "e_feat": [164, 166, 460], "e_ij": 394, "e_mul_u": 5, "e_mul_v": 5, "e_sub_u": 5, "e_sub_v": [5, 9], "e_t": [429, 430], "e_typ": [157, 158, 191], "e_weight": 6, "each": [0, 4, 5, 6, 7, 14, 20, 22, 34, 35, 36, 37, 39, 48, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 78, 87, 88, 92, 93, 94, 100, 101, 102, 116, 117, 122, 123, 124, 126, 130, 131, 135, 136, 141, 142, 147, 150, 151, 152, 153, 154, 157, 158, 171, 174, 175, 176, 178, 179, 181, 182, 183, 184, 191, 195, 197, 198, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 232, 235, 239, 240, 241, 242, 243, 246, 250, 287, 290, 291, 295, 299, 301, 303, 304, 305, 307, 308, 310, 312, 317, 318, 321, 323, 329, 331, 334, 335, 336, 337, 341, 342, 343, 345, 355, 356, 359, 385, 386, 387, 389, 390, 391, 392, 393, 395, 399, 401, 403, 406, 407, 408, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 423, 424, 426, 427, 434, 435, 436, 438, 440, 441, 442, 443, 447, 451, 452, 453, 457, 459, 461, 478, 504, 505, 542, 543, 549, 552, 553, 554, 557, 558, 560, 562, 563, 564, 565, 566, 567, 568, 571, 572, 574, 575, 576, 577, 637, 642, 643, 645, 649, 652, 653, 660, 668, 669, 674, 677, 679, 680, 681, 682, 683, 687, 688, 691, 693, 694, 695, 696, 697, 698, 699, 700, 702, 704, 706, 707, 709, 712, 714, 715, 716, 719, 721, 722, 724, 727, 728, 729, 730, 731, 732, 733, 734, 779, 784, 789, 807, 814, 816, 821, 822, 823, 825, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 873], "earli": [166, 192, 730, 814], "earlier": [292, 696, 855, 863], "eas": [21, 22, 307], "easi": [21, 22, 340, 563, 689, 699, 733, 818, 825], "easier": [70, 697, 699, 841], "easili": [122, 229, 230, 714, 719, 722, 730, 829, 832, 838, 857], "ec2": [14, 847], "ecosystem": 825, "ed": [860, 867], "edata": [4, 5, 9, 20, 27, 30, 34, 47, 51, 53, 70, 95, 96, 108, 114, 117, 118, 119, 122, 125, 126, 128, 145, 147, 157, 158, 164, 166, 174, 177, 179, 191, 195, 208, 214, 216, 219, 221, 223, 246, 249, 250, 337, 341, 342, 359, 428, 451, 460, 478, 542, 553, 555, 556, 557, 558, 559, 564, 565, 566, 567, 568, 569, 573, 574, 637, 642, 643, 644, 645, 647, 652, 653, 656, 657, 658, 659, 660, 661, 664, 666, 669, 670, 672, 673, 674, 675, 676, 677, 678, 683, 685, 691, 693, 696, 697, 698, 699, 704, 707, 711, 724, 730, 731, 733, 739, 742, 743, 748, 751, 755, 760, 762, 770, 771, 773, 779, 782, 783, 784, 789, 792, 796, 797, 802, 805, 808, 814, 816, 838, 839, 840, 841, 843, 854, 855, 866], "edata_develop": 359, "edata_dict": 359, "edata_follow": 359, "edata_pars": [148, 691], "edata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 246, 247, 337, 340, 341, 342, 346, 478, 479, 542, 551, 555, 556, 557, 573, 642, 656, 657, 664, 670, 683, 691, 698, 699, 703, 704, 706, 732, 747, 748, 750, 788, 789, 791, 815, 839, 842, 843], "edeg": [45, 79, 82, 105], "edg": [0, 4, 5, 6, 7, 9, 13, 21, 25, 26, 27, 30, 31, 32, 34, 36, 39, 41, 46, 47, 48, 49, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 297, 298, 299, 302, 305, 307, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 326, 329, 335, 336, 337, 340, 341, 342, 343, 345, 346, 353, 354, 355, 356, 359, 387, 389, 391, 392, 393, 394, 397, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 451, 454, 455, 456, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 547, 548, 549, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 576, 577, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 649, 650, 651, 652, 653, 655, 656, 658, 659, 660, 661, 662, 664, 666, 667, 668, 669, 670, 672, 673, 674, 675, 676, 678, 683, 685, 687, 691, 693, 695, 697, 698, 699, 701, 702, 709, 710, 711, 712, 714, 717, 719, 720, 722, 724, 726, 728, 729, 732, 733, 734, 739, 748, 750, 751, 752, 754, 755, 760, 762, 769, 770, 773, 779, 783, 784, 789, 791, 792, 794, 795, 796, 797, 801, 802, 805, 808, 813, 814, 815, 816, 818, 820, 821, 822, 823, 825, 829, 830, 831, 833, 835, 836, 837, 838, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 858, 860, 866, 870, 872], "edge_attent": 857, "edge_attr": [179, 249, 644], "edge_attr_dtyp": 784, "edge_attr_schem": [4, 75], "edge_attribut": [299, 329], "edge_classif": 311, "edge_color": 856, "edge_data": [311, 691, 699, 784], "edge_dir": [214, 216, 241, 242, 565, 566, 567, 568], "edge_drop": 392, "edge_feat": [177, 240, 394, 399, 404, 405, 407, 413, 415, 421, 698, 699, 743, 784], "edge_feat_0": 837, "edge_feat_0_path": 837, "edge_feat_1": 837, "edge_feat_1_path": 837, "edge_feat_nam": [29, 117, 653, 658, 669], "edge_feat_s": [138, 399, 405, 421, 448], "edge_featur": [297, 303, 307, 716, 830, 833, 843], "edge_feature_kei": 297, "edge_follow_feat_0": 836, "edge_follow_feat_0_path": 836, "edge_follow_feat_1": 836, "edge_follow_feat_1_path": 836, "edge_func": 420, "edge_gat": 407, "edge_id": [32, 233, 307], "edge_id_attr_nam": [125, 249], "edge_in_feat": 394, "edge_index": 699, "edge_label": [25, 320, 730, 760, 770, 802, 814], "edge_like_feat_0": 836, "edge_like_feat_0_path": 836, "edge_like_feat_1": 836, "edge_like_feat_1_path": 836, "edge_map": [240, 699, 743, 784], "edge_mask": [428, 429, 430, 759, 801], "edge_permute_algo": [98, 558], "edge_pred_graph": [730, 770, 814], "edge_predict": [760, 802], "edge_repr": 863, "edge_split": [683, 696, 742, 782, 851], "edge_subgraph": [157, 158, 191, 478, 717, 759, 760, 762, 801, 802, 805, 839], "edge_timestamp_attr_nam": [299, 317, 318], "edge_trainer_id": 232, "edge_typ": [131, 299, 307, 336, 697, 699, 707, 727, 751, 767, 784, 792, 811], "edge_type_id": 698, "edge_type_subgraph": [26, 479, 707, 751, 792], "edge_type_to_id": [299, 329, 836], "edge_udf": [20, 674, 675, 676, 677, 678], "edge_upd": 448, "edge_weight": [6, 145, 214, 392, 404, 408, 409, 411, 412, 417, 423, 424, 425, 430, 432, 731, 771], "edgebatch": [20, 53, 710, 754, 795], "edgedataload": [696, 742, 760, 762, 782, 802, 803, 805, 851], "edgedataview": 4, "edgelist": 866, "edgepredictor": 851, "edges1": 387, "edges2": 387, "edges3": 387, "edges_0": 691, "edges_1": 691, "edges_b": 866, "edges_data": 843, "edges_dst": 843, "edges_field": 867, "edges_gener": [91, 544], "edges_group": 843, "edges_of_id": 843, "edges_path": 837, "edges_perm": 558, "edges_src": 843, "edges_to_exclud": 312, "edges_with_feature_on": 53, "edgeweightnorm": [392, 411, 417, 424, 425, 731, 771], "edist": 393, "edu": [145, 175, 181, 184], "educ": 855, "ee": 867, "efeat": [394, 404, 407, 413, 420, 448, 698, 699], "effect": [10, 210, 213, 244, 287, 396, 397, 398, 422, 458, 572, 576, 577, 660, 661, 666, 694, 822, 867], "effici": [4, 5, 9, 22, 34, 73, 93, 94, 100, 113, 122, 126, 131, 209, 240, 249, 250, 287, 336, 343, 389, 431, 433, 434, 436, 567, 571, 643, 699, 706, 709, 720, 724, 727, 732, 829, 834, 840, 847, 854, 855, 856, 857, 860, 863, 866, 867], "effort": [855, 872], "eg": [707, 751, 792], "egat": 404, "egat_model": [404, 407], "egnn": 405, "egt": 448, "eid": [4, 20, 26, 51, 55, 61, 88, 89, 95, 96, 125, 130, 211, 223, 233, 234, 240, 241, 242, 246, 249, 337, 341, 342, 354, 359, 428, 478, 542, 555, 556, 558, 562, 564, 565, 566, 567, 568, 573, 637, 642, 645, 677, 697, 699, 707, 751, 759, 762, 783, 784, 792, 801, 805, 839, 841, 867], "eid2localeid": 4, "eid2partid": 4, "eid_attr": 644, "eid_het2hom": 697, "eid_hom2het": 697, "eid_offset": 697, "eid_rang": 784, "eids_dict": [762, 805], "eig": 399, "eig_vec": 399, "eigenvalu": [344, 345, 395, 400, 450, 663], "eigenvector": [344, 399, 450, 663], "eight": [171, 698], "eigval": [450, 663], "eigval_nam": [450, 663], "eigvec": [450, 663], "eisfischerh\u00fctt": 867, "either": [9, 21, 26, 32, 34, 62, 63, 73, 91, 92, 93, 94, 100, 113, 131, 182, 210, 214, 216, 220, 223, 241, 242, 299, 307, 315, 319, 320, 336, 343, 387, 435, 549, 563, 565, 566, 567, 568, 571, 596, 599, 600, 601, 603, 637, 699, 702, 706, 720, 835, 838, 841, 850, 863], "el": [454, 710, 754, 795], "electron": [178, 179], "element": [0, 4, 5, 22, 31, 32, 34, 35, 36, 37, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 93, 94, 100, 119, 121, 122, 214, 216, 219, 220, 240, 241, 242, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 299, 305, 307, 310, 312, 317, 318, 329, 331, 336, 337, 341, 342, 344, 345, 355, 356, 390, 394, 436, 478, 504, 542, 543, 553, 554, 564, 565, 566, 568, 579, 580, 583, 584, 595, 596, 597, 602, 608, 615, 616, 622, 628, 632, 643, 647, 648, 696, 721, 722, 727, 822, 823, 841, 842], "elementwis": [454, 609, 610, 613, 619, 620, 621, 631], "elif": [720, 727, 763, 767, 806, 811], "elimin": 130, "ell": 651, "els": [73, 393, 426, 427, 428, 429, 430, 432, 685, 691, 716, 718, 720, 721, 724, 727, 728, 759, 761, 763, 767, 768, 801, 804, 806, 808, 811, 812, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 855, 857, 863, 867, 872, 873], "elsewher": 617, "elu": [448, 724, 808, 857], "emap": 850, "emb": [4, 10, 386, 430, 432, 457, 696, 742, 782, 855, 860, 863, 867], "emb_dim": [385, 389], "emb_stat": 4, "embed": [5, 13, 137, 149, 158, 180, 182, 184, 185, 191, 316, 385, 386, 389, 430, 432, 447, 448, 451, 452, 455, 456, 457, 687, 695, 696, 697, 699, 719, 733, 734, 817, 830, 850, 851, 854, 855, 856, 857, 860, 867], "embedding_dim": [4, 386, 447, 457, 687], "emit": [730, 863], "emphas": 841, "empir": [14, 120, 182], "emploi": [20, 305, 310, 317, 318, 431, 432, 433, 723, 822, 857, 867], "employ": 867, "empti": [32, 56, 131, 204, 236, 287, 305, 310, 317, 336, 348, 353, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 718, 727, 836, 837, 854, 857, 867], "en": [847, 867], "enabl": [9, 23, 291, 305, 310, 430, 432, 710, 717, 722, 724, 808, 819, 829, 831, 863, 867, 873], "enable_cpu_affin": [846, 847], "enc": 867, "encapsul": 728, "enclos": [243, 691], "encod": [13, 135, 136, 139, 159, 165, 171, 344, 442, 447, 450, 451, 452, 453, 459, 552, 635, 663, 667, 671, 702, 822, 839, 851, 855, 856, 858, 867, 868, 870], "encompass": [305, 307, 310, 317, 318], "encount": [854, 857], "encourag": [431, 433, 733], "end": [4, 20, 22, 27, 114, 164, 217, 240, 305, 310, 344, 354, 389, 393, 443, 560, 572, 635, 663, 671, 677, 685, 699, 706, 721, 726, 730, 732, 734, 759, 791, 801, 807, 814, 815, 817, 823, 824, 830, 831, 832, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "end_epoch_tim": 719, "end_tim": 164, "endl": 22, "endpoint": [4, 34, 48, 53, 100, 116, 478, 479, 636, 645, 856], "energi": [178, 179], "enforc": 850, "english": [149, 182, 185, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "enhanc": [21, 312, 821, 858, 868, 870], "enjoi": [9, 21, 822], "enough": [14, 699, 842], "enrich": 857, "ensur": [131, 307, 321, 411, 696, 698, 716, 850, 872], "entail": 863, "enter": 70, "enthalpi": [178, 179], "entir": [3, 9, 45, 79, 82, 105, 210, 290, 296, 298, 300, 319, 695, 699, 716, 717, 720, 732, 829, 841, 842, 850, 857], "entiti": [132, 133, 144, 158, 161, 170, 307, 455, 456, 701, 702, 733, 786, 855, 858, 870], "entri": [126, 164, 177, 250, 290, 330, 446, 449, 567, 617, 703, 731, 788, 823, 825, 856], "entropi": [245, 428, 429, 430, 432, 477, 733, 816, 841, 855, 857, 866], "entropy_list": 866, "enumer": [290, 294, 296, 300, 302, 319, 695, 697, 703, 718, 719, 723, 724, 741, 761, 781, 804, 808, 830, 831, 833, 850, 851, 860, 867, 873], "env": [830, 833, 836, 837, 854, 857], "environ": [14, 21, 295, 698, 819, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 854, 855, 856, 857, 860, 863, 866, 872, 873], "enzym": [25, 168, 186], "ep": [4, 10, 245, 408, 477, 660, 661, 666, 846, 867], "epoch": [4, 210, 213, 385, 428, 429, 430, 431, 432, 693, 695, 696, 719, 723, 724, 730, 732, 733, 734, 739, 741, 744, 770, 772, 773, 774, 779, 781, 782, 785, 808, 814, 815, 816, 817, 820, 821, 822, 823, 826, 830, 831, 833, 838, 840, 841, 842, 846, 850, 851, 854, 855, 856, 857, 860, 867, 872, 873], "epoch_end": [831, 873], "epoch_start": [831, 873], "epsilon": [178, 179, 399, 412, 413], "epsilon_": [178, 179], "eq": [427, 860], "equal": [128, 129, 139, 173, 182, 205, 219, 245, 299, 305, 310, 317, 318, 327, 359, 391, 426, 460, 477, 504, 505, 567, 612, 704, 759, 801, 847, 857, 866], "equat": [392, 393, 410, 411, 424, 425, 454, 458, 709, 823, 854, 855, 856, 860], "equip": 9, "equival": [26, 73, 222, 223, 224, 225, 246, 251, 252, 263, 264, 265, 266, 291, 299, 327, 330, 337, 387, 392, 401, 406, 411, 417, 424, 425, 435, 542, 549, 594, 609, 611, 613, 618, 619, 620, 629, 630, 631, 647, 648, 675, 678, 710, 711, 716, 721, 731, 825, 839, 840, 856, 860], "equivari": [405, 856], "er": [710, 754, 795], "erdos_renyi_graph": 460, "error": [48, 89, 109, 116, 131, 287, 295, 336, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 635, 636, 637, 671, 683, 699, 705, 749, 759, 790, 801, 830, 831, 833, 836, 837, 863, 873], "errorbar": 866, "especi": [21, 125, 249, 717, 718, 832, 855], "essenc": 857, "essenti": [20, 22, 240, 461, 720, 819, 822, 832, 840, 850, 854, 863], "establish": 4, "estim": [431, 433, 717, 733, 773, 816, 838, 839, 840, 841, 842, 843, 872], "et": [72, 135, 136, 560, 820, 822, 832, 838, 840, 854, 860], "eta": [245, 477], "etc": [0, 1, 4, 11, 21, 125, 162, 249, 359, 689, 698, 699, 710, 715, 716, 720, 722, 726, 732, 825, 841, 850, 866], "ether": 4, "etyp": [4, 26, 27, 29, 30, 31, 32, 33, 34, 36, 39, 47, 48, 50, 51, 53, 55, 57, 60, 61, 62, 63, 80, 84, 87, 88, 90, 91, 92, 93, 94, 95, 97, 100, 107, 109, 113, 114, 117, 118, 125, 126, 128, 130, 208, 214, 216, 219, 220, 223, 226, 227, 232, 240, 241, 247, 299, 324, 325, 329, 349, 351, 387, 389, 397, 416, 419, 422, 429, 430, 431, 480, 550, 553, 555, 557, 559, 561, 565, 566, 568, 574, 633, 636, 637, 642, 643, 644, 645, 647, 651, 652, 653, 668, 673, 691, 693, 697, 698, 699, 707, 712, 716, 719, 720, 721, 728, 730, 732, 733, 734, 739, 751, 756, 759, 760, 762, 763, 764, 768, 770, 772, 773, 774, 779, 783, 784, 792, 798, 801, 802, 805, 806, 807, 812, 814, 815, 816, 817, 836, 855], "etype2id": 697, "etype2id_map": 697, "etype_attr": 644, "etype_count": 643, "etype_dict": 73, "etype_field": 642, "etype_id": 784, "etype_sort": 241, "etype_weight": [429, 431], "etypes_list": 240, "etypes\u662f\u4e00\u4e2a\u5217\u8868": 772, "eu": 48, "euclidean": [343, 434, 435, 436, 549, 571, 863], "ev": [48, 178, 179], "eval": [734, 774, 817, 821, 822, 823, 830, 831, 833, 854, 863, 867, 872, 873], "eval_dataload": 830, "evalu": [137, 171, 180, 182, 188, 197, 205, 699, 700, 714, 718, 734, 774, 817, 820, 821, 822, 826, 838, 841, 842, 854, 857, 863, 867, 872], "even": [4, 210, 305, 310, 317, 354, 555, 696, 714, 829, 856, 860], "evenli": [232, 239, 850], "event": [164, 166], "everi": [0, 4, 10, 21, 117, 119, 121, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208, 214, 215, 216, 219, 241, 242, 305, 310, 317, 336, 345, 359, 387, 410, 428, 429, 430, 431, 432, 433, 559, 564, 565, 566, 568, 696, 699, 703, 718, 730, 732, 826, 833, 839, 842, 850, 863, 864, 867, 870, 872], "everyth": [21, 292, 850], "evict": [290, 300], "evid": 857, "evolut": [863, 866], "evolv": 856, "eweight": [126, 250, 428, 429, 731, 769, 771, 796], "eweight_nam": [30, 126, 250, 552, 659, 660, 661, 666, 667, 670], "eweight\ub97c": 796, "exact": [714, 831, 873], "exactli": [8, 117, 299, 637, 696, 716, 724, 823, 841, 850, 851, 857, 863], "exampl": [0, 3, 4, 5, 6, 9, 10, 20, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 204, 205, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 227, 229, 230, 235, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 329, 331, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 476, 477, 478, 479, 480, 505, 542, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 689, 690, 691, 693, 694, 695, 696, 697, 698, 700, 702, 703, 704, 706, 707, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 725, 727, 728, 729, 730, 731, 732, 733, 734, 776, 779, 805, 815, 817, 818, 820, 821, 822, 823, 824, 828, 829, 830, 832, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 849, 850, 851, 853, 854, 855, 856, 857, 859, 860, 862, 863, 865, 866, 867, 869, 871, 872, 873, 875], "examplelay": 460, "exceed": [451, 714], "except": [4, 171, 211, 212, 344, 406, 637, 642, 663, 696, 698, 716, 719, 720, 721, 734, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 857, 873], "exception": 829, "exchang": [307, 850], "exclud": [220, 226, 241, 242, 312, 322, 326, 561, 563, 565, 566, 716, 722, 760, 802], "exclude_edg": [241, 242, 312, 322, 565, 566, 715], "exclude_eid": 220, "exclude_seed_edg": [715, 716, 719, 722, 830], "exclude_self": [116, 343, 434, 436, 571], "exclude_self_loop": [226, 561], "excluded_edg": [565, 566], "exclus": [216, 220, 295, 564, 872], "execut": [89, 156, 295, 357, 696, 828, 831, 845, 849, 853, 859, 862, 865, 866, 869, 871, 873, 875], "exhaust": 733, "exhibit": 857, "exist": [0, 4, 21, 27, 28, 114, 115, 117, 142, 143, 186, 200, 226, 232, 239, 301, 322, 340, 353, 354, 555, 561, 585, 632, 636, 645, 650, 660, 661, 666, 685, 694, 696, 702, 716, 733, 740, 780, 818, 820, 821, 829, 838, 840, 841, 850, 855, 860, 863], "exist_ok": [836, 837], "exit": [70, 854], "exmapl": 6, "exp": [359, 393, 394, 414, 453, 574, 575, 825, 857, 863, 867], "expand": [341, 342, 431, 433, 727, 811, 863], "expand_as_pair": [726, 727, 766, 767, 810, 811], "expans": [341, 342], "expect": [109, 120, 199, 200, 315, 408, 424, 707, 792, 820, 854, 855, 867], "expens": 66, "experi": [14, 173, 552, 667, 724, 838, 843, 857], "experiment": [4, 6, 10, 396, 397, 398, 457], "explain": [141, 428, 429, 430, 431, 432, 433, 688, 709, 818, 854, 857], "explain_graph": [428, 429, 430, 431, 432, 433], "explain_nod": [428, 429, 430, 432], "explan": [1, 3, 11, 142, 143, 189, 190, 209, 217, 220, 222, 223, 224, 225, 428, 429, 430, 431, 432, 433, 698, 716, 721, 854, 855, 856, 857, 860, 863, 866, 867], "explanatori": [430, 432], "explic": 4, "explicit": [706, 825, 863], "explicitli": [287, 336, 696, 697, 706, 791, 825, 831, 836, 837, 863], "exploit": [22, 431, 433, 855], "explor": [431, 433, 687, 822, 861, 863, 870, 872], "explos": [214, 299, 305, 317, 565], "expon": 620, "exponenti": [620, 867], "export": [21, 698, 784, 819, 847, 850], "expos": [20, 22, 829], "express": [5, 701, 730, 733, 840, 858, 866, 870], "extend": [5, 153, 210, 393, 431, 433, 719, 733, 831, 855, 858, 860, 870], "extens": [183, 819, 830, 831, 833, 836, 837, 867], "extent": [178, 179], "extern": [2, 31, 417, 693, 701, 706], "extra": [22, 174, 387, 427, 559, 645, 691, 722, 822, 846, 850, 855], "extra_cached_hop": [355, 543], "extract": [1, 13, 95, 96, 159, 162, 173, 201, 220, 234, 246, 247, 289, 307, 337, 341, 342, 478, 479, 542, 555, 556, 573, 690, 699, 717, 728, 734, 759, 777, 801, 817, 820, 821, 823, 830, 833, 839, 855, 856], "extract_arch": [690, 737, 777], "extrem": 856, "ey": 841, "e\u662f\u8fb9\u7684\u6570\u91cf": 771, "f": [4, 9, 10, 295, 399, 404, 414, 415, 428, 429, 431, 433, 457, 693, 695, 697, 716, 718, 719, 720, 721, 723, 724, 727, 730, 732, 734, 739, 741, 760, 761, 762, 763, 764, 767, 770, 772, 774, 779, 781, 802, 804, 805, 806, 807, 808, 811, 814, 815, 817, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 838, 840, 841, 842, 850, 851, 854, 855, 857, 860, 863, 866, 867, 872, 873], "f1": [387, 683, 857], "f1_": 857, "f2": [387, 683], "f4": 846, "f9065fa7": 156, "f_": [393, 399, 404, 412, 413, 418, 420, 438, 860, 863], "f_r": [728, 768, 812], "f_size": 866, "face": 22, "facilit": 307, "fact": [704, 716, 854, 863], "factor": [290, 399, 421, 453, 724, 855], "factori": [434, 435, 436], "factor\ub97c": 808, "faculti": [155, 187, 193], "fail": [21, 821, 822, 823], "failur": 200, "faithfulli": 186, "fake": 159, "fakenew": 159, "fall": [4, 44, 104, 299, 302, 312, 315, 355, 543, 697], "fallback": [290, 300], "fallback_featur": [290, 300], "fals": [4, 10, 25, 31, 48, 57, 58, 65, 66, 69, 70, 95, 96, 99, 111, 116, 123, 124, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 235, 236, 238, 240, 241, 242, 246, 287, 290, 291, 295, 299, 303, 305, 307, 310, 311, 312, 317, 318, 320, 321, 326, 328, 331, 335, 337, 340, 343, 344, 346, 355, 356, 390, 391, 396, 397, 399, 403, 404, 406, 407, 409, 410, 411, 412, 413, 414, 417, 419, 420, 421, 422, 424, 426, 427, 430, 431, 432, 433, 434, 435, 436, 438, 446, 449, 450, 452, 454, 459, 478, 542, 543, 545, 547, 548, 549, 555, 556, 559, 561, 562, 564, 565, 566, 567, 568, 571, 572, 573, 590, 635, 636, 637, 643, 645, 647, 648, 649, 652, 653, 663, 664, 669, 671, 687, 689, 691, 692, 693, 695, 697, 698, 699, 707, 717, 723, 732, 736, 738, 739, 741, 751, 759, 760, 761, 762, 764, 772, 776, 778, 779, 781, 783, 792, 801, 802, 803, 804, 805, 807, 815, 820, 821, 822, 823, 825, 830, 831, 833, 835, 836, 837, 838, 842, 846, 850, 851, 855, 856, 857, 860, 863, 866, 867, 872, 873], "famili": [818, 863, 864, 870], "familiar": [720, 733, 850], "famou": 821, "fanout": [214, 216, 219, 241, 242, 299, 302, 305, 310, 315, 317, 318, 396, 397, 398, 565, 566, 567, 696, 697, 715, 723, 742, 759, 782, 783, 801, 830], "faq": 819, "far": [724, 855, 857, 863], "farthest_point_sampl": 6, "fashion": [695, 830], "fast": [22, 125, 138, 139, 140, 249, 343, 395, 400, 434, 436, 571, 703], "fast_neg": 385, "faster": [148, 168, 210, 226, 343, 390, 419, 422, 434, 436, 561, 571, 724, 822, 836, 837], "favor": 841, "fb15k": [157, 158], "fb15k237": 157, "fb15k237dataset": [693, 739, 779], "fc": [407, 409, 410, 414, 430, 432, 857], "fc_neigh": [723, 726, 727, 766, 767, 810, 811], "fc_pool": [726, 727, 766, 767, 810, 811], "fc_self": [723, 726, 727, 766, 767, 810, 811], "feat": [4, 10, 25, 43, 46, 51, 64, 71, 74, 103, 128, 129, 135, 136, 137, 138, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 168, 169, 171, 173, 174, 175, 176, 180, 181, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 217, 219, 236, 294, 311, 320, 349, 350, 351, 352, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 455, 456, 457, 460, 553, 554, 574, 575, 633, 634, 643, 647, 648, 653, 670, 685, 691, 693, 696, 697, 699, 711, 715, 716, 718, 719, 721, 722, 723, 724, 727, 732, 733, 734, 739, 742, 755, 767, 772, 773, 774, 779, 782, 783, 797, 808, 811, 815, 816, 817, 820, 821, 822, 823, 830, 831, 833, 836, 837, 838, 840, 841, 843, 850, 851, 854, 857, 872, 873], "feat0": 129, "feat1": [125, 128, 249, 653, 697, 783], "feat2": [125, 249], "feat3": 125, "feat_0": [411, 836, 837], "feat_1": [836, 837], "feat_a": 856, "feat_b": 856, "feat_data": 320, "feat_dict": [712, 756, 798], "feat_dim": [451, 687], "feat_drop": [396, 398, 402, 407, 409, 410, 423], "feat_dst": [711, 723, 727, 767, 811], "feat_dst\uc758": 797, "feat_list": 458, "feat_mask": [428, 429], "feat_nam": [288, 298, 399, 450, 663, 667, 671, 707, 751, 792], "feat_nn": 438, "feat_siz": [139, 428, 432, 433, 446, 448, 449, 687], "feat_src": [711, 723, 727, 767, 811], "feat_src\uc640": 797, "featmask": 13, "featur": [0, 4, 5, 9, 13, 19, 20, 26, 27, 28, 30, 34, 35, 43, 44, 46, 47, 51, 53, 54, 56, 64, 70, 71, 73, 74, 75, 77, 91, 92, 93, 94, 95, 96, 100, 103, 104, 108, 113, 114, 115, 116, 117, 118, 119, 122, 125, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 208, 210, 214, 216, 217, 219, 221, 222, 223, 224, 225, 234, 236, 238, 240, 241, 242, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 292, 293, 294, 297, 298, 300, 306, 307, 311, 312, 316, 319, 320, 337, 340, 341, 342, 343, 346, 353, 354, 359, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 454, 455, 456, 460, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 549, 553, 554, 555, 556, 558, 559, 560, 562, 564, 565, 566, 567, 568, 569, 571, 574, 575, 576, 577, 636, 637, 639, 640, 641, 642, 643, 644, 645, 647, 648, 652, 653, 658, 669, 670, 673, 674, 675, 676, 677, 678, 680, 681, 682, 683, 685, 687, 689, 693, 695, 696, 697, 698, 699, 701, 702, 703, 705, 707, 709, 710, 711, 712, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 728, 729, 730, 731, 732, 733, 734, 739, 749, 760, 762, 764, 769, 770, 773, 774, 779, 784, 789, 790, 792, 798, 802, 804, 805, 806, 807, 808, 811, 813, 814, 815, 816, 817, 820, 821, 822, 825, 829, 830, 831, 832, 833, 834, 835, 838, 840, 842, 843, 847, 850, 854, 855, 856, 857, 860, 863, 866, 868, 870, 872, 873], "feature_data": [311, 836, 837], "feature_nam": [159, 222, 223, 224, 225, 298, 307, 784], "feature_stor": [297, 320], "featurefetch": 292, "featureless": 699, "features_to_us": 393, "featurestor": [288, 293, 297], "febd69": 863, "fed": [108, 421, 430, 432], "fedora": 819, "feed": [441, 442, 685, 719, 721, 730, 822, 841, 855, 860, 867], "feed_forward": 867, "feedback": [733, 773, 816], "feedforward": [449, 687], "feedstock_root": [843, 856], "feel": [21, 825], "fell": 22, "fetch": [7, 21, 208, 222, 223, 224, 225, 292, 297, 305, 310, 719, 722, 723, 829, 833, 857], "fetch_featur": [297, 715, 716, 718, 719, 721, 722, 723, 830, 831, 833, 873], "fetcher": [7, 294, 297, 829], "few": [1, 4, 14, 22, 290, 637, 695, 696, 714, 720, 734, 850, 851, 863, 867], "fewer": [171, 295, 299, 305, 317, 565, 832, 866], "ffn": [441, 442, 867], "ffn1": 822, "ffn2": 822, "field": [21, 22, 25, 27, 28, 114, 115, 146, 151, 152, 168, 169, 184, 186, 192, 240, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 311, 312, 399, 553, 642, 647, 648, 691, 693, 698, 710, 835, 836, 837, 856, 860, 867], "field_of_studi": 784, "fifo": 290, "fig": [821, 863, 866], "fig2": 866, "figsiz": [856, 866], "figur": [695, 699, 707, 714, 822, 823, 856, 860, 866, 867], "file": [4, 21, 22, 23, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 206, 209, 231, 235, 236, 237, 238, 240, 293, 294, 311, 348, 569, 688, 690, 693, 696, 698, 699, 700, 707, 730, 734, 737, 777, 784, 819, 820, 821, 823, 828, 830, 833, 835, 838, 840, 841, 843, 845, 846, 849, 850, 851, 853, 854, 855, 856, 857, 859, 862, 865, 869, 871, 875], "file_nam": 691, "file_path": [690, 737, 777], "file_system": [831, 873], "filelock": [830, 831, 833, 836, 837], "filenam": [199, 204, 348, 569], "filesystem": 236, "fill": [27, 28, 93, 113, 114, 115, 117, 451, 572, 614, 615, 616, 628, 653, 863], "fill_data": [29, 117, 653], "film": 134, "filter": [53, 54, 163, 299, 302, 315, 391, 393, 394, 395, 400, 403, 406, 407, 409, 410, 411, 414, 417, 424], "filter_edg": 867, "filter_nod": 867, "final": [6, 22, 132, 133, 144, 170, 240, 317, 318, 393, 421, 450, 454, 693, 710, 711, 714, 728, 732, 734, 754, 795, 819, 836, 837, 855, 856, 857, 860, 867, 872], "final_ft": [710, 754, 795], "final_tmp": [430, 432], "find": [14, 21, 26, 55, 130, 131, 322, 336, 431, 433, 561, 700, 727, 733, 820, 821, 822, 823, 839, 840, 841, 843, 855, 856, 857, 863, 867], "find_edg": [4, 89, 762, 805], "fine": [89, 315, 718, 825, 847, 860], "fingerprint": 850, "finish": [21, 820, 821, 823, 830, 836, 837, 850, 872], "first": [4, 9, 21, 22, 27, 51, 56, 73, 118, 119, 121, 123, 124, 125, 126, 130, 131, 137, 139, 140, 141, 162, 171, 180, 181, 182, 184, 188, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 229, 230, 240, 245, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 295, 299, 304, 330, 336, 341, 342, 343, 359, 387, 393, 406, 417, 424, 428, 434, 436, 443, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 558, 562, 563, 564, 567, 571, 618, 628, 637, 642, 643, 653, 687, 692, 696, 697, 699, 707, 717, 718, 720, 726, 727, 732, 734, 819, 820, 821, 825, 831, 832, 836, 837, 839, 841, 842, 843, 846, 850, 851, 854, 855, 856, 857, 860, 863, 867, 868, 870, 872, 873], "first_label": 301, "first_se": 301, "firstli": 822, "fission": 167, "fit": [210, 311, 385, 412, 413, 420, 699, 714, 717, 729, 832, 834, 839, 840], "five": [137, 141, 142, 143, 155, 187, 193, 691, 835, 860], "fix": [197, 198, 205, 214, 216, 217, 355, 415, 543, 565, 715, 867], "flag": [31, 57, 58, 246, 338, 399, 421, 459, 478, 684, 819, 850], "flatten": [563, 724, 808], "flexibl": [20, 637, 691, 829, 867], "flickr": 160, "flickrdataset": 194, "flip": [635, 671], "flist": 73, "float": [4, 9, 10, 22, 95, 96, 117, 120, 138, 139, 140, 142, 143, 161, 162, 163, 178, 183, 189, 190, 198, 205, 241, 242, 244, 245, 299, 305, 310, 317, 318, 339, 345, 347, 359, 385, 391, 392, 393, 396, 397, 398, 399, 400, 402, 407, 408, 409, 410, 411, 412, 413, 415, 419, 421, 422, 423, 426, 427, 428, 429, 430, 431, 432, 433, 435, 441, 442, 446, 448, 449, 459, 476, 477, 549, 555, 556, 557, 561, 562, 564, 565, 566, 567, 610, 621, 639, 640, 641, 650, 653, 656, 657, 658, 660, 661, 666, 670, 677, 682, 691, 693, 704, 710, 723, 729, 762, 769, 779, 789, 795, 805, 813, 820, 821, 822, 831, 838, 840, 842, 856, 860, 867, 873], "float16": [9, 641, 710, 724, 795, 808], "float16\uc744": 795, "float32": [4, 9, 10, 47, 75, 95, 96, 117, 146, 147, 165, 168, 169, 174, 219, 247, 289, 358, 393, 403, 404, 407, 409, 410, 420, 479, 555, 556, 557, 568, 589, 640, 664, 670, 683, 693, 696, 697, 704, 707, 718, 739, 742, 748, 751, 779, 782, 783, 789, 792, 825, 839, 842], "float64": [126, 250, 587, 639, 691, 836, 837, 843], "floattensor": [445, 563, 564, 565, 566, 568, 711, 755, 797, 856], "flow": [127, 131, 167, 208, 210, 211, 212, 689, 716, 719, 721, 801, 802, 805, 807, 832, 833, 867], "flush": 724, "fly": [396, 397, 398, 863], "fmt": 32, "fn": [5, 9, 20, 21, 34, 73, 91, 92, 93, 94, 100, 113, 121, 428, 429, 431, 460, 674, 675, 676, 677, 678, 679, 680, 681, 682, 710, 711, 712, 720, 724, 727, 730, 731, 733, 754, 755, 756, 763, 767, 770, 771, 773, 795, 796, 797, 798, 806, 808, 811, 814, 816, 840, 841, 854, 855, 856, 860, 866, 867], "fn_": 857, "focu": [846, 847, 860, 863], "focus": [693, 855, 856, 858, 867, 870], "folder": [22, 156, 698, 699, 707, 792, 850], "follow": [0, 3, 4, 5, 6, 9, 20, 21, 22, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 130, 131, 140, 141, 142, 143, 148, 156, 178, 179, 182, 189, 190, 204, 209, 214, 216, 219, 220, 229, 230, 240, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 295, 297, 301, 303, 311, 336, 337, 341, 342, 343, 346, 347, 348, 353, 359, 386, 387, 388, 393, 404, 406, 408, 411, 417, 418, 419, 428, 429, 434, 435, 436, 437, 438, 439, 440, 444, 445, 455, 456, 459, 460, 476, 478, 479, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 547, 548, 549, 557, 559, 563, 564, 565, 566, 567, 571, 573, 574, 575, 576, 577, 579, 615, 616, 636, 637, 638, 642, 643, 644, 649, 652, 653, 658, 664, 668, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 698, 699, 700, 702, 703, 704, 706, 707, 709, 711, 714, 715, 716, 717, 718, 719, 720, 721, 724, 726, 729, 730, 731, 732, 733, 734, 759, 760, 769, 801, 802, 813, 819, 822, 823, 825, 829, 830, 831, 832, 833, 836, 837, 838, 839, 840, 841, 843, 846, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "follow_dst": [729, 769, 813], "follow_edg": 836, "follow_edges_path": 836, "follow_src": [729, 769, 813], "followed_bi": 716, "follows\uc640": 792, "foo": 70, "footnot": [846, 847], "footprint": [699, 711], "foral": [398, 414, 419, 423, 502, 727, 767, 811, 840], "forc": [232, 239, 311, 846, 863, 867], "force_even": [232, 239, 695, 741, 781, 851], "force_preprocess": 311, "force_reload": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 689, 693, 736, 739, 776, 779], "forcibli": [399, 421], "forg": 846, "fork": [8, 21, 846], "form": [20, 21, 22, 26, 51, 61, 88, 130, 131, 173, 208, 210, 246, 287, 299, 336, 337, 341, 342, 354, 385, 389, 408, 430, 431, 432, 433, 461, 478, 542, 550, 551, 560, 565, 566, 635, 645, 651, 671, 697, 699, 706, 732, 750, 762, 791, 805, 833, 840, 841, 842, 855, 856, 857, 866, 868, 870], "formal": [20, 72, 245, 477, 651, 699, 821, 855], "format": [0, 4, 12, 13, 30, 31, 32, 34, 35, 41, 47, 48, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 80, 87, 88, 89, 90, 91, 92, 93, 94, 100, 107, 113, 114, 117, 118, 119, 126, 131, 231, 240, 241, 246, 247, 249, 250, 287, 288, 297, 298, 299, 307, 311, 312, 320, 323, 327, 335, 336, 337, 341, 342, 478, 480, 542, 553, 555, 557, 569, 574, 576, 577, 606, 615, 616, 628, 643, 690, 691, 693, 697, 706, 717, 724, 726, 727, 737, 739, 766, 767, 777, 779, 783, 784, 808, 810, 811, 825, 833, 835, 836, 837, 840, 841, 850, 851, 854, 855, 857, 860, 863, 867, 872], "former": [359, 428, 429, 430, 431, 432, 433, 561, 696, 716], "formul": [406, 417, 610, 621, 728, 730, 832, 838, 841, 855, 856, 868, 870], "formula": [359, 391, 412, 413, 416, 420, 710, 727], "formular": 669, "forth": [22, 643], "forum": 21, "forward": [4, 70, 230, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 711, 716, 718, 719, 720, 721, 723, 724, 725, 728, 730, 731, 732, 733, 734, 760, 761, 762, 763, 764, 767, 768, 770, 772, 773, 774, 802, 804, 805, 806, 807, 808, 809, 812, 814, 815, 816, 817, 820, 821, 822, 823, 825, 830, 831, 833, 838, 840, 841, 842, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "forward_infer": 863, "forward_train": 863, "found": [26, 48, 70, 322, 434, 436, 552, 564, 667, 684, 691, 693, 710, 728, 820, 825, 826, 830, 831, 833, 836, 837, 840, 854, 855, 867, 872, 873], "four": [504, 571, 670, 694, 697, 698, 706, 729, 835, 850, 856, 857], "fourth": 563, "fp16": [724, 808], "fp16\ub97c": 808, "fp16\uc744": 808, "fp_": 857, "frac": [120, 178, 179, 244, 245, 305, 347, 359, 393, 394, 399, 411, 414, 417, 419, 424, 437, 453, 454, 476, 477, 567, 574, 575, 669, 732, 772, 815, 820, 821, 822, 825, 854, 855, 856, 857, 863, 866, 867], "frac_list": [207, 872], "fraction": [207, 411], "fragment": 847, "frame": [9, 821, 863, 866], "framework": [4, 7, 9, 21, 23, 42, 59, 62, 63, 108, 125, 126, 131, 186, 235, 246, 247, 249, 250, 287, 336, 337, 341, 342, 343, 434, 436, 441, 442, 478, 479, 542, 550, 551, 565, 566, 567, 568, 571, 696, 703, 705, 707, 725, 790, 818, 826, 829, 836, 837, 840, 850, 860, 863, 867], "fraud": [145, 161, 162, 163], "frauddataset": [161, 163], "fraudul": [145, 161, 162], "free": [21, 178, 179, 818, 825, 832, 835, 857], "freebas": 158, "frequenc": 399, "frequent": [22, 135, 136, 137, 182, 305, 310, 699], "friendship": [194, 702, 732], "from": [0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 12, 14, 21, 22, 26, 27, 32, 45, 48, 68, 73, 79, 82, 89, 93, 94, 95, 96, 105, 112, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 130, 131, 134, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 151, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 169, 171, 173, 174, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 207, 208, 209, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 229, 230, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 289, 291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 332, 334, 335, 336, 337, 340, 341, 342, 343, 345, 347, 348, 353, 354, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 476, 477, 478, 479, 542, 549, 550, 551, 552, 556, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 576, 577, 612, 614, 615, 616, 628, 632, 636, 637, 642, 644, 645, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 676, 677, 678, 685, 688, 689, 690, 692, 693, 694, 695, 696, 697, 698, 699, 701, 705, 706, 710, 711, 712, 714, 715, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 732, 733, 734, 736, 737, 738, 739, 740, 766, 767, 772, 776, 777, 778, 779, 780, 784, 788, 790, 791, 802, 808, 810, 811, 814, 815, 816, 820, 821, 822, 823, 825, 828, 829, 830, 831, 832, 833, 836, 837, 838, 839, 840, 841, 842, 845, 846, 849, 850, 851, 853, 855, 857, 859, 860, 862, 863, 865, 866, 867, 869, 871, 872, 873, 875], "from_coo": [820, 825], "from_csc": [723, 825], "from_csr": 825, "from_cudf_edgelist": 248, "from_networkx": [250, 287, 703, 747, 788], "from_numpi": [319, 843, 856], "from_scipi": [249, 287, 703, 747, 788], "fromnumer": [854, 857], "fromt": [146, 169], "front": 727, "frontier": [4, 91, 92, 123, 124, 229, 230, 544, 545, 546, 547, 548, 560, 649, 696, 697, 742, 759, 782, 783, 801], "frontier2": [759, 801], "fsspec": [830, 831, 833, 836, 837], "fstab": 850, "ft": [710, 731, 754, 771, 795, 796], "full": [4, 26, 153, 191, 295, 303, 311, 714, 718, 720, 721, 723, 730, 734, 807, 820, 821, 822, 830, 831, 834, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 856, 857, 860, 863, 866, 867, 872, 873], "fulli": [4, 21, 292, 695, 727, 825, 826, 854], "func": [34, 35, 53, 54, 357, 683, 710, 712, 756, 798, 860, 867], "funcanim": [821, 863, 866], "function": [0, 1, 4, 13, 21, 26, 27, 28, 34, 35, 53, 54, 64, 70, 71, 73, 89, 91, 92, 93, 94, 95, 96, 100, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 130, 146, 156, 168, 169, 183, 197, 213, 232, 235, 236, 239, 241, 243, 245, 246, 247, 250, 290, 291, 294, 295, 296, 297, 299, 300, 302, 303, 305, 307, 308, 309, 310, 312, 315, 317, 318, 319, 321, 322, 337, 340, 343, 344, 345, 346, 354, 355, 357, 386, 387, 388, 391, 395, 396, 399, 400, 401, 402, 403, 406, 407, 409, 410, 411, 412, 414, 415, 417, 418, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 448, 449, 453, 454, 457, 460, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 552, 553, 554, 555, 556, 557, 558, 559, 561, 564, 565, 566, 567, 569, 571, 576, 577, 579, 583, 584, 618, 635, 636, 638, 642, 643, 644, 645, 646, 647, 648, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 689, 690, 693, 694, 696, 698, 699, 703, 709, 711, 712, 715, 716, 719, 720, 721, 724, 725, 728, 730, 731, 732, 733, 734, 754, 755, 756, 762, 763, 764, 767, 770, 771, 772, 774, 794, 795, 796, 797, 798, 805, 806, 807, 808, 811, 812, 814, 815, 817, 820, 821, 822, 823, 826, 830, 832, 833, 838, 841, 842, 846, 850, 851, 854, 855, 856, 857, 858, 860, 863, 870, 873], "functional_datapip": [295, 302, 303, 315, 715, 719, 723], "functool": [716, 830, 855, 863, 867], "fundament": [855, 863], "further": [45, 66, 68, 73, 79, 82, 91, 92, 93, 94, 100, 105, 113, 210, 295, 303, 699, 711, 728, 730, 819, 825, 826, 857, 867], "furthermor": [125, 130, 698, 705, 855], "fuse": [9, 216, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530], "fused_csc_sampling_graph": [231, 299, 302, 305, 310, 321], "fusedcscsamplinggraph": [231, 302, 305, 310, 311, 317, 318, 321, 328, 329, 332, 715, 723, 836, 837], "futur": [6, 21, 183, 231, 290, 294, 296, 299, 300, 319, 335, 691, 724, 863, 867], "fwtype": 560, "g": [0, 4, 5, 6, 9, 10, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 229, 230, 233, 234, 240, 241, 242, 243, 246, 247, 248, 249, 250, 287, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 359, 385, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 445, 450, 451, 454, 455, 456, 457, 459, 460, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 550, 551, 552, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 571, 572, 573, 576, 577, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 691, 692, 693, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 727, 728, 730, 732, 733, 738, 739, 741, 742, 743, 746, 748, 749, 750, 751, 755, 756, 757, 759, 760, 761, 762, 763, 764, 767, 768, 770, 772, 773, 778, 779, 781, 782, 783, 784, 787, 789, 790, 791, 792, 797, 798, 799, 801, 802, 803, 804, 805, 806, 807, 808, 811, 812, 814, 815, 816, 819, 820, 821, 822, 825, 826, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872], "g1": [36, 37, 38, 89, 101, 102, 108, 122, 128, 129, 348, 387, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 452, 460, 553, 554, 562, 564, 569, 573, 574, 575, 647, 648, 663, 683, 732, 772, 815, 856], "g1_node_feat": [437, 438, 439, 440, 441, 442, 443, 444, 445], "g2": [36, 37, 38, 95, 96, 101, 102, 122, 128, 129, 130, 348, 387, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 452, 460, 553, 554, 563, 564, 569, 573, 574, 575, 647, 648, 663, 683, 732, 772, 815], "g2_node_feat": [437, 438, 439, 440, 441, 442, 443, 444, 445], "g3": [460, 663, 683], "g32": [706, 750, 791], "g32_2": [706, 750, 791], "g64": [706, 750, 791], "g64_2": [706, 750, 791], "g_": [4, 10, 671], "g_2": 340, "g_atom": 179, "g_batch": 183, "g_edg": [565, 566], "g_int": 64, "g_l": 856, "g_layer": 856, "g_list": 569, "g_long": 71, "g_m": 863, "g_nodes_explain": 433, "g_r": [728, 768, 812], "g_sort": [567, 576, 577], "g_t": 863, "gai": [854, 856], "gain": [723, 726, 766, 810, 826, 854, 855, 856, 857, 860, 863, 866, 867], "galleri": [21, 828, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 850, 851, 852, 854, 855, 856, 857, 860, 863, 866, 867, 870, 872, 873, 874], "game": [4, 27, 28, 30, 31, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 171, 214, 216, 219, 246, 247, 336, 337, 341, 342, 359, 387, 429, 430, 431, 478, 479, 542, 550, 555, 556, 557, 559, 642, 643, 644, 645, 652, 653, 658, 668, 669, 673, 683, 707, 751, 759, 792, 801], "gamma": [822, 856], "gamma_": [393, 453, 856], "gamma_k": 393, "gan": [854, 867], "gap": [178, 179, 438, 857], "gat": [359, 404, 724, 731, 796, 808, 825, 826, 858, 870], "gatconv": [396, 407, 711, 724, 755, 797, 808, 857], "gate": [415, 416, 438, 863], "gate_nn": 438, "gatedgcn": 415, "gatedgraphconv": 438, "gather": [9, 214, 215, 216, 299, 305, 310, 317, 318, 501, 565, 721, 734, 759, 801, 833, 840, 856], "gathermm": 13, "gatlay": 857, "gatv2": 410, "gat\ub97c": 808, "gaussian": [14, 414, 453], "gb": [235, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 319, 320, 321, 322, 323, 335, 699, 715, 716, 718, 719, 721, 722, 723, 826, 830, 831, 833, 836, 837, 873], "gb_warn": [836, 837], "gbwarn": [836, 837], "gcc": [698, 784, 819], "gclass": [428, 432, 433, 842], "gcmc": [760, 802], "gcmclayer": [730, 770, 814], "gcn": [134, 149, 155, 185, 187, 193, 209, 402, 403, 408, 417, 423, 445, 476, 670, 716, 718, 721, 723, 724, 726, 727, 760, 762, 766, 767, 796, 802, 805, 810, 811, 819, 826, 842, 856, 858, 860, 870], "gcn_model": 820, "gcn_msg": 854, "gcn_reduc": 854, "gcnii": 411, "gcnlayer": [820, 854], "gcnnorm": 13, "gcn\uc744": [804, 807], "gdata_pars": 148, "gdc": 13, "gdelt": [25, 164], "gdeltdataset": [694, 740, 780], "ge": 436, "gender": 839, "gene": [565, 566, 707, 751, 792, 857], "gener": [0, 1, 3, 4, 5, 7, 9, 10, 20, 34, 73, 91, 92, 93, 94, 100, 113, 117, 123, 124, 128, 129, 138, 139, 140, 141, 142, 143, 172, 174, 183, 189, 190, 207, 210, 211, 212, 213, 217, 220, 226, 227, 229, 290, 293, 294, 295, 296, 299, 300, 303, 304, 309, 319, 321, 343, 387, 393, 396, 397, 398, 404, 407, 428, 429, 430, 432, 434, 436, 450, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 544, 545, 546, 547, 548, 550, 551, 553, 554, 558, 560, 561, 562, 564, 565, 571, 635, 649, 653, 671, 687, 695, 696, 698, 699, 703, 706, 709, 710, 714, 716, 719, 720, 721, 722, 724, 726, 729, 730, 813, 822, 828, 829, 832, 833, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 850, 851, 852, 854, 855, 856, 857, 860, 865, 866, 867, 872, 873, 874], "generaliz": 857, "generic_join": 295, "gene\u76f8\u4e92\u4f5c\u7528\u8fb9": 751, "gene\u8282\u70b9": 751, "gentl": 854, "geom": [134, 149, 155, 185, 187, 193, 476], "geometr": [134, 149, 155, 185, 186, 187, 193, 414, 453, 476, 826], "geomgcndataset": [149, 155, 185, 187, 193], "get": [0, 1, 4, 22, 26, 30, 31, 42, 43, 44, 46, 48, 51, 56, 68, 70, 74, 77, 103, 104, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 202, 209, 210, 232, 239, 245, 247, 288, 290, 292, 294, 295, 296, 298, 299, 300, 307, 319, 320, 338, 343, 386, 389, 424, 434, 436, 445, 477, 479, 561, 565, 567, 571, 573, 576, 577, 645, 683, 687, 689, 691, 692, 693, 695, 697, 699, 704, 707, 710, 716, 718, 719, 721, 728, 729, 732, 733, 768, 776, 778, 779, 789, 792, 801, 812, 819, 820, 821, 825, 830, 833, 847, 857, 863, 867, 872], "get_aggregate_fn": [728, 768, 812], "get_attent": [403, 404, 407, 409, 410, 438], "get_cmap": 856, "get_dataload": 872, "get_dataset": 867, "get_dist": [435, 549], "get_edge_partition_polici": 4, "get_edge_split": [692, 738, 778], "get_etype_id": [4, 643, 784], "get_group": 843, "get_idx_split": [692, 738, 778, 850], "get_log_prob": 863, "get_node_partition_polici": [4, 697, 783], "get_ntype_id": [4, 643, 784], "get_o": 867, "get_part_s": 4, "get_partition_book": [4, 695, 697, 741, 781, 783, 851], "get_seq_by_id": 867, "get_siz": 4, "ggnn": 438, "ghz": 179, "giant": 130, "gid": 573, "gilmer": [832, 840], "gin": [732, 772, 815, 842, 872], "ginconv": [732, 772, 815, 872], "gindataset": [428, 432, 433, 693, 732, 739, 772, 779, 815, 842, 872], "girvan": 167, "git": [698, 784, 819], "github": [135, 136, 151, 152, 153, 159, 162, 165, 168, 186, 210, 684, 698, 752, 784, 818, 819, 846, 855, 856, 866, 867], "git\uc5d0\uc11c": 784, "give": [4, 11, 27, 114, 207, 245, 340, 477, 558, 572, 637, 682, 703, 704, 719, 789, 820, 830, 842], "given": [4, 5, 6, 9, 14, 22, 30, 31, 32, 35, 48, 53, 54, 55, 57, 58, 60, 61, 62, 63, 79, 81, 82, 87, 88, 93, 109, 114, 115, 117, 118, 119, 121, 123, 124, 125, 126, 130, 131, 135, 136, 137, 138, 139, 140, 148, 164, 183, 184, 197, 198, 200, 205, 208, 209, 213, 214, 216, 219, 220, 229, 230, 232, 233, 234, 239, 240, 241, 242, 243, 245, 246, 247, 249, 250, 287, 291, 295, 299, 302, 305, 307, 310, 315, 317, 318, 322, 323, 327, 336, 337, 344, 346, 348, 354, 391, 394, 396, 397, 398, 400, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 417, 419, 420, 423, 430, 432, 435, 454, 460, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 551, 553, 554, 558, 560, 561, 564, 565, 566, 567, 568, 572, 576, 577, 596, 599, 600, 601, 603, 632, 637, 642, 645, 649, 651, 653, 660, 661, 663, 664, 666, 669, 683, 691, 696, 699, 705, 706, 721, 730, 732, 733, 734, 791, 825, 829, 838, 841, 842, 843, 855, 857, 860, 863, 866, 867], "gklib": [698, 784], "gklib\uc744": 784, "glabel": 569, "glist": 348, "gloabl": 4, "glob": [378, 379, 380, 381, 382, 383, 437, 438, 439, 440, 441, 442, 443, 444, 445, 470, 471, 472, 473, 474, 475], "global": [4, 13, 128, 129, 164, 236, 237, 240, 299, 389, 438, 448, 565, 635, 671, 819, 850], "global_test_eid": 851, "global_valid_eid": 851, "gloo": [695, 696, 741, 742, 781, 782, 846, 850, 851, 872], "glorot": [402, 409, 410, 414, 416, 417, 420, 423, 425], "glove": [184, 860], "glove_emb": 184, "glove_embed_fil": 184, "gluon": [199, 200, 725, 809], "gluoncv": 819, "gluonnlp": 819, "gluon\u7684nn\u5757": 765, "gm_": [4, 10], "gml": [707, 792], "gnn": [4, 7, 12, 21, 135, 136, 137, 146, 151, 152, 153, 159, 162, 165, 169, 171, 180, 182, 188, 210, 213, 214, 215, 216, 219, 220, 299, 305, 317, 359, 418, 428, 429, 430, 431, 432, 433, 458, 460, 565, 708, 714, 718, 722, 729, 730, 731, 733, 734, 752, 763, 769, 774, 793, 796, 800, 801, 804, 808, 813, 814, 816, 817, 818, 826, 828, 830, 831, 832, 833, 843, 844, 845, 847, 854, 856, 857, 872, 873], "gnn_modul": 418, "gnnbenchmarkdataset": [135, 136, 151, 152, 153], "gnnexplain": [142, 143, 189, 190, 429], "gnnlayer": 418, "gnn\uc5d0": 807, "gnn\uc740": 800, "gnn\uc744": [801, 804, 814, 816], "gnu": [819, 847], "go": [14, 21, 22, 564, 818, 819, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "goal": 188, "goe": [4, 20, 21, 706, 716, 840, 841], "gone": 842, "good": [135, 136, 162, 841, 850, 857], "googl": [21, 824, 867], "gossipcop": 159, "goto": 156, "gp_": [4, 10], "gpb": [4, 240, 697, 783], "gpt": 867, "gpu": [6, 9, 10, 14, 21, 89, 108, 110, 112, 118, 119, 125, 126, 210, 249, 250, 287, 300, 305, 310, 319, 336, 343, 346, 354, 435, 457, 549, 558, 560, 564, 565, 566, 571, 585, 637, 638, 701, 710, 714, 718, 721, 722, 724, 729, 790, 795, 800, 804, 808, 813, 818, 819, 821, 822, 826, 828, 829, 832, 833, 850, 860, 867, 875], "gpu_0": [10, 457], "gpu_cach": 210, "gpu_cache_threshold": [305, 310], "gpu\u56fe\u53ea\u63a5\u53d7gpu\u4e0a\u7684\u7279\u5f81\u6570\u636e": 749, "gpu\ub85c": [790, 802, 807], "gpu\ub97c": 804, "gpu\uc5d0": [790, 800, 803, 807], "gpu\uc5d0\uc11c": [786, 803], "graclu": 6, "grad": [9, 118, 119], "grad_fn": [9, 118, 391, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 414, 416, 417, 420, 422, 423, 424, 425, 438, 440, 441, 442, 445], "gradient": [4, 9, 10, 385, 389, 399, 418, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 695, 714, 724, 800, 808, 842, 850, 872], "gradscal": [724, 808], "gradual": [863, 866, 867], "graident\ub4e4\uc740": 808, "grain": [315, 825, 847, 860], "granular": [164, 166], "grapbolt": 723, "graph": [3, 6, 9, 11, 13, 14, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 289, 293, 297, 298, 299, 301, 302, 305, 306, 307, 310, 311, 312, 314, 315, 316, 317, 318, 321, 322, 323, 329, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 687, 689, 692, 694, 695, 700, 704, 705, 708, 709, 710, 711, 717, 722, 723, 724, 726, 728, 731, 738, 739, 740, 743, 744, 747, 748, 749, 750, 751, 754, 759, 767, 769, 770, 771, 772, 773, 774, 776, 778, 779, 780, 783, 784, 785, 786, 787, 788, 789, 790, 791, 795, 796, 798, 800, 801, 802, 803, 805, 807, 808, 812, 813, 814, 815, 816, 817, 819, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 840, 844, 845, 846, 859, 860, 864, 865, 869, 873, 874, 875], "graph0": 691, "graph1": 691, "graph_data": [691, 707, 751, 792], "graph_degre": 183, "graph_edg": 843, "graph_emb": 863, "graph_embed_func": 863, "graph_feat": [128, 129, 432, 433], "graph_format": [231, 240], "graph_hidden_s": 863, "graph_id": [691, 843], "graph_id_field": 691, "graph_index": 21, "graph_label": 569, "graph_list": 348, "graph_nam": [4, 240, 695, 696, 697, 698, 699, 741, 742, 743, 781, 782, 783, 784, 850, 851], "graph_op": 863, "graph_path": [694, 740, 780], "graph_pool": 867, "graph_prop": 863, "graph_prop_func": 863, "graph_properti": 843, "graph_sampl": [210, 211, 212], "graph_train": 851, "graphbolt": [231, 235, 236, 240, 241, 242, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 715, 716, 717, 719, 721, 722, 723, 830, 831, 833, 834, 836, 837, 847, 873], "graphbolt_test": 311, "graphconv": [387, 392, 401, 408, 411, 418, 424, 425, 430, 432, 433, 716, 721, 724, 725, 727, 732, 734, 760, 761, 762, 764, 767, 772, 774, 802, 804, 805, 807, 809, 811, 815, 817, 838, 842, 854], "graphdataload": [428, 432, 433, 692, 693, 732, 738, 739, 772, 778, 779, 815, 822, 842, 872], "graphdataloader\uc758": 815, "graphemb": 863, "graphgp": 450, "graphic": 307, "graphmetadata": 299, "graphnet": 826, "graphorm": [449, 685], "graphormerlay": 687, "graphpartitionbook": [4, 232, 236, 237, 239, 241, 697], "graphpool": 867, "graphpr": 138, "graphprop": 863, "graphproppr": [138, 692, 738, 778, 822], "graphsag": [175, 181, 398, 402, 423, 695, 717, 718, 721, 723, 727, 734, 744, 761, 774, 785, 804, 805, 807, 811, 817, 830, 831, 833, 840, 850, 851, 857, 873], "graphsage\u4e2dgcn\u805a\u5408\u4e0d\u9700\u8981fc_self": 767, "graphsage\u7684\u5b9e\u73b0": 764, "graphsage\ub97c": 781, "graphsage\uc5d0\uc11c": 817, "graphsaint": [160, 194, 217], "graphtransform": 687, "graphviz_layout": 860, "graphwis": 442, "graph\uc5d0": 801, "graph\uc758": [802, 807, 817], "great": 856, "greater": [131, 197, 287, 294, 319, 336, 565, 566, 567, 847, 860], "greatli": [858, 870], "greedi": 6, "green": 832, "grid": [171, 172, 190], "grid_siz": 190, "groud": 817, "ground": [150, 154, 167, 176, 734, 817, 831, 838, 851, 856, 863, 873], "group": [4, 20, 137, 166, 167, 182, 295, 357, 358, 418, 457, 685, 687, 695, 707, 719, 825, 836, 837, 840, 843, 856], "groupbi": 843, "grouplen": 173, "growth": 855, "grpah": 672, "gru": [416, 863], "grucel": 863, "gsddmm": 13, "gsddmmbackward": 9, "gspmm": 13, "gspmmbackward": [9, 410], "gt": [446, 447, 448, 449, 450, 451, 452, 453, 686, 822, 830, 831, 833, 836, 837], "gtlayer": 822, "gtmodel": 822, "guarante": [4, 101, 102, 226, 232, 239, 305, 561, 872], "guid": [1, 3, 11, 21, 209, 210, 214, 215, 216, 217, 220, 222, 223, 224, 225, 637, 693, 698, 717, 734, 743, 793, 818, 850, 860], "guide_cn": [752, 769], "guidelin": 818, "guo": [860, 867], "gz": [690, 737, 777], "gz_file_path": [690, 737, 777], "gz\u6216": 737, "gz\u6587\u4ef6": 737, "h": [4, 5, 22, 25, 27, 28, 30, 34, 35, 43, 44, 46, 51, 53, 54, 56, 70, 73, 74, 77, 91, 92, 93, 94, 100, 103, 104, 108, 113, 114, 115, 116, 121, 128, 129, 145, 177, 178, 179, 245, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 353, 391, 392, 395, 396, 404, 405, 407, 409, 410, 411, 419, 424, 425, 428, 429, 430, 431, 432, 433, 451, 452, 453, 454, 455, 456, 460, 477, 479, 553, 554, 558, 559, 574, 575, 643, 644, 645, 647, 648, 656, 657, 658, 664, 669, 670, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 705, 710, 712, 714, 720, 724, 727, 730, 732, 733, 734, 749, 754, 756, 758, 759, 761, 763, 767, 770, 772, 773, 774, 790, 795, 798, 800, 801, 804, 806, 808, 811, 814, 815, 816, 817, 819, 822, 823, 825, 832, 833, 838, 840, 841, 842, 851, 854, 855, 857, 860, 863, 867], "h1": [5, 47, 75, 387, 644, 665, 822], "h2": [5, 47, 70, 75, 387, 644, 665, 822], "h2h": 855, "h2o": 855, "h_": [120, 393, 398, 404, 409, 410, 415, 416, 420, 423, 429, 431, 727, 728, 767, 768, 811, 812, 823, 840, 854, 857, 860], "h_atom": 179, "h_cat": 860, "h_dict": [734, 774, 817], "h_dim": 855, "h_dst": [454, 720, 761, 763, 804, 806], "h_e": [399, 405, 421], "h_feat": [833, 838, 840, 841, 842], "h_g": [732, 772, 815], "h_head": [455, 456], "h_i": [391, 394, 395, 399, 400, 401, 402, 403, 405, 406, 409, 410, 412, 413, 414, 416, 417, 420, 421, 422, 423, 454, 458, 825, 855, 857, 867], "h_item": [734, 774, 817], "h_j": [391, 394, 399, 401, 403, 405, 406, 409, 410, 411, 412, 413, 417, 420, 421, 422, 423, 454, 855, 860], "h_jl": 860, "h_max": 5, "h_n": [399, 405, 421, 840], "h_neg_dst": 851, "h_neg_src": 851, "h_neigh": [720, 727, 763, 767, 806, 811], "h_new": 5, "h_pos_dst": 851, "h_pos_src": 851, "h_self": [727, 767, 811], "h_size": 860, "h_src": [454, 720, 763, 806], "h_sub_g": [707, 751, 792], "h_sum": [5, 128, 129], "h_t": 867, "h_tail": [455, 456], "h_total": 840, "h_u": [730, 770, 814, 832, 840, 841, 863], "h_user": [734, 774, 817], "h_v": [726, 730, 732, 766, 770, 772, 810, 814, 815, 832, 840, 841, 854], "h_x": 405, "ha": [4, 5, 9, 14, 22, 27, 28, 30, 31, 32, 34, 36, 37, 47, 48, 51, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 70, 71, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 107, 113, 114, 115, 117, 118, 119, 120, 122, 131, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 160, 162, 166, 167, 168, 170, 173, 175, 176, 184, 191, 192, 194, 220, 221, 230, 240, 246, 287, 291, 292, 295, 312, 330, 336, 337, 341, 342, 343, 346, 353, 355, 387, 408, 417, 434, 435, 436, 453, 457, 478, 480, 542, 549, 553, 555, 557, 558, 561, 563, 564, 567, 571, 574, 575, 576, 577, 610, 637, 642, 647, 648, 689, 691, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 707, 710, 716, 717, 718, 720, 724, 725, 727, 729, 730, 732, 779, 787, 819, 822, 823, 825, 826, 835, 836, 839, 840, 841, 842, 850, 851, 854, 855, 856, 857, 860, 863, 864, 867, 868, 870], "hadamard": 822, "half": [9, 141, 641, 710, 711, 795, 867], "halo": [236, 240, 355, 543, 698, 699, 784], "halo_hop": 240, "halt": [564, 867], "halt_and_accum": 867, "halt_dec": 867, "halt_enc": 867, "haltingunit": 867, "hamilton": 840, "hand": 699, "handcraft": [161, 163], "handl": [210, 293, 391, 403, 404, 406, 407, 409, 410, 411, 414, 417, 424, 503, 690, 691, 698, 699, 701, 703, 706, 710, 727, 728, 834, 839, 842, 857, 863, 867], "hang": [290, 295, 873], "hao": 857, "happen": [210, 226, 561, 856], "happend": 164, "har": [858, 870], "hard": [21, 245, 477, 863], "hardwar": [722, 847], "harm": [305, 317, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424], "harvard": 867, "has_cach": [156, 689, 694, 736, 740, 776, 780], "has_dupl": 825, "has_edges_between": [565, 566, 863], "has_nontree_edg": [230, 545], "has_reverse_edg": [230, 545], "has_top": 784, "hasattr": 139, "hash": [156, 199, 200, 243, 690, 737, 777], "hash_kei": 156, "hat": [411, 415, 428, 429, 841, 854, 856, 866], "have": [4, 6, 9, 10, 14, 21, 22, 26, 34, 35, 48, 53, 55, 56, 57, 58, 60, 61, 68, 87, 88, 93, 94, 100, 115, 116, 117, 118, 119, 122, 125, 126, 130, 131, 161, 165, 171, 174, 180, 186, 188, 197, 205, 210, 211, 212, 214, 216, 219, 220, 226, 227, 230, 234, 235, 241, 242, 246, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 293, 295, 296, 298, 299, 300, 305, 310, 312, 319, 322, 330, 336, 337, 340, 341, 342, 345, 346, 354, 355, 359, 387, 389, 390, 406, 419, 422, 424, 430, 431, 432, 433, 437, 439, 443, 444, 458, 478, 542, 543, 559, 560, 562, 564, 565, 566, 567, 568, 576, 577, 596, 599, 600, 601, 618, 628, 632, 636, 637, 642, 643, 645, 691, 693, 695, 696, 697, 698, 699, 700, 702, 704, 707, 710, 712, 714, 716, 718, 720, 721, 723, 724, 728, 730, 732, 734, 789, 792, 801, 822, 825, 830, 831, 832, 833, 838, 839, 840, 841, 842, 843, 847, 850, 851, 855, 856, 857, 860, 861, 863, 867, 870, 872, 873], "hdf": [348, 569, 703], "hdfs\u4e2d\u52a0\u8f7d\u6216\u5411s3": 747, "hdfs\u4fdd\u5b58\u56fe": 747, "hdfs\uc5d0": 788, "he": [95, 96, 117, 555, 556, 557, 559, 645, 653, 707, 710, 751, 754, 792, 795, 860, 863], "head": [9, 396, 403, 404, 407, 409, 410, 419, 441, 442, 446, 448, 449, 450, 451, 452, 453, 455, 456, 687, 724, 808, 843, 858, 868, 870], "head_dim": 822, "head_out": 857, "head_siz": 419, "header": [691, 835, 836, 837], "head\uc758": 808, "heat": [178, 179, 661], "heatkernel": 13, "heavi": 195, "heavili": 710, "height": [189, 190], "height_in": 866, "height_in_i": 866, "height_out": 866, "height_out_i": 866, "held": 164, "help": [161, 295, 322, 643, 706, 707, 732, 834, 838, 856], "henc": [116, 126, 130, 135, 136, 151, 152, 153, 192, 250, 340, 346, 559, 636, 645, 703, 707, 792], "here": [5, 9, 21, 31, 145, 151, 152, 164, 166, 175, 177, 178, 179, 183, 184, 240, 315, 387, 684, 691, 692, 693, 697, 698, 711, 712, 716, 721, 724, 726, 729, 730, 733, 779, 784, 820, 821, 822, 823, 826, 830, 832, 839, 840, 841, 842, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867], "hereaft": 867, "hetergen": [246, 478], "hetero": [305, 310, 317, 698], "hetero_block": [759, 801], "hetero_fronti": [759, 801], "hetero_graph": [729, 730, 733, 734, 769, 770, 773, 774, 813, 814, 816, 817], "heteroclassifi": [732, 772, 815], "heterodotproductpredictor": [730, 733, 770, 773, 814, 816], "heterogen": [1, 4, 7, 13, 26, 27, 28, 31, 34, 35, 36, 37, 38, 42, 47, 51, 53, 54, 65, 66, 72, 75, 77, 79, 82, 93, 94, 95, 96, 100, 101, 102, 108, 113, 114, 115, 116, 117, 140, 214, 216, 219, 220, 221, 222, 223, 224, 225, 240, 242, 246, 289, 295, 299, 303, 307, 312, 314, 322, 323, 334, 335, 336, 337, 341, 342, 386, 387, 388, 389, 391, 403, 406, 407, 409, 410, 411, 414, 417, 419, 424, 429, 430, 431, 478, 542, 555, 556, 557, 565, 576, 577, 636, 637, 642, 643, 644, 645, 651, 652, 653, 658, 659, 668, 669, 672, 673, 695, 698, 699, 701, 702, 709, 725, 727, 781, 786, 787, 798, 803, 809, 811, 834, 835, 860], "heterogenen": [113, 559], "heterogeneous_graph_nc_lp": 836, "heterograph": [1, 4, 26, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 68, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 118, 119, 122, 125, 126, 130, 220, 246, 247, 337, 341, 342, 354, 359, 387, 389, 403, 404, 406, 407, 409, 410, 414, 417, 420, 423, 429, 430, 431, 478, 479, 542, 555, 556, 557, 559, 560, 563, 564, 565, 566, 636, 637, 642, 643, 644, 645, 651, 652, 653, 658, 668, 669, 673, 683, 691, 712, 717, 728, 729, 733, 734, 751, 759, 769, 773, 774, 792, 801, 812, 813, 816, 817, 863, 866], "heterographconv": [430, 716, 719, 721, 732, 734, 760, 762, 764, 768, 772, 774, 802, 805, 807, 815, 817], "heterogrph": [91, 92], "heteroitemset": [293, 295, 303, 306, 311, 316, 715, 716, 721, 836], "heteromlppredictor": [730, 770, 814], "heterophili": [120, 137, 171, 180, 182, 188, 245, 477], "heterophilousgraphdataset": [137, 171, 180, 182, 188], "hexadecim": [199, 200], "hg": [51, 55, 60, 61, 77, 87, 88, 90, 101, 102, 107, 359, 429, 430, 431, 432, 642, 643, 707, 715, 732, 751, 772, 784, 792, 815], "hg1": [36, 37, 38, 122, 683], "hg2": [36, 37, 38, 122, 683], "hg_2": 642, "hhhiddleston": 752, "hid_feat": [430, 732, 734, 772, 774, 815, 817], "hid_siz": [723, 724], "hidden": [168, 394, 405, 426, 441, 442, 449, 687, 714, 726, 730, 734, 800, 810, 814, 855, 856, 857, 860, 867], "hidden_d": 426, "hidden_dim": [430, 433, 732, 772, 815, 823, 857], "hidden_feat": [394, 716, 721, 760, 762, 764, 802, 805, 807], "hidden_featur": [716, 721, 730, 733, 759, 760, 761, 762, 764, 770, 773, 801, 802, 804, 805, 807, 814, 816], "hidden_s": [168, 405, 449, 687, 718, 719, 820, 821, 822, 830, 831, 873], "hidden_x": [718, 719, 723, 830, 831, 873], "hide": [305, 310], "hierarch": 183, "high": [240, 245, 292, 431, 433, 455, 456, 477, 569, 696, 710, 711, 782, 819, 826, 829, 857, 866, 867], "high2low": [431, 433], "higher": [9, 214, 305, 428, 429, 430, 431, 432, 433, 733, 856, 857, 866, 868, 870], "highest": [178, 179, 857], "highli": [397, 398, 688, 818, 826, 829, 847, 850, 855], "highlight": [693, 723, 820, 821, 822, 823, 831, 856, 867, 873], "hing": 805, "hint": [712, 798], "histogram": [857, 866], "histor": 159, "hold": [6, 36, 37, 125, 182, 210, 217, 248, 249, 299, 304, 443, 652, 653, 673, 699, 707, 728, 840], "holist": 11, "home": [23, 139, 698, 784, 836, 837, 843, 850, 856, 860, 863, 866], "homebrew": 819, "homegen": [783, 815], "homo": [178, 179, 401, 402], "homogen": [1, 4, 6, 7, 9, 26, 27, 28, 34, 35, 36, 37, 38, 42, 47, 48, 53, 54, 55, 57, 60, 61, 65, 66, 75, 77, 79, 82, 87, 88, 90, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 122, 138, 139, 209, 210, 214, 215, 216, 219, 220, 222, 223, 224, 225, 240, 241, 246, 289, 297, 299, 307, 311, 312, 314, 322, 323, 334, 335, 337, 339, 341, 342, 343, 344, 345, 346, 354, 391, 403, 404, 406, 407, 409, 410, 411, 414, 417, 420, 423, 424, 428, 432, 433, 478, 542, 549, 552, 555, 556, 557, 558, 559, 560, 562, 564, 567, 572, 635, 637, 638, 642, 643, 644, 645, 652, 653, 658, 660, 661, 662, 663, 664, 666, 667, 668, 669, 670, 672, 673, 691, 697, 698, 699, 702, 716, 719, 721, 727, 730, 732, 733, 734, 783, 784, 787, 792, 801, 802, 805, 807, 811, 814, 815, 816, 817, 834, 835, 836], "homogeneous_graph_nc_lp": 837, "homogeneous\uc5ec\uc57c": 806, "homograph": [41, 56, 691], "homophil": [162, 347, 476], "homophili": [13, 120, 244, 245, 347, 476, 477], "hood": [695, 698, 854, 872], "hook": [428, 429, 430, 431, 432, 433], "hop": [219, 240, 305, 310, 340, 341, 342, 355, 424, 425, 428, 429, 430, 432, 543, 662, 821, 832, 856, 857], "hop2j_list": 856, "host": [1, 2, 5], "hostil": 166, "hot": [165, 168, 171, 459, 839, 863], "hotel": 163, "hour": 166, "hous": [141, 142, 143], "how": [4, 9, 11, 21, 139, 162, 165, 220, 245, 305, 310, 401, 404, 410, 412, 417, 438, 440, 445, 477, 560, 561, 576, 577, 645, 687, 688, 689, 690, 691, 692, 693, 694, 696, 697, 698, 699, 700, 702, 709, 711, 714, 718, 720, 721, 723, 724, 725, 726, 729, 730, 734, 759, 801, 807, 819, 820, 821, 822, 823, 828, 829, 830, 831, 832, 834, 836, 837, 838, 840, 841, 842, 843, 844, 845, 846, 847, 850, 854, 855, 856, 857, 858, 863, 866, 868, 870, 872, 873], "howev": [4, 9, 21, 22, 171, 236, 295, 305, 310, 317, 318, 697, 699, 702, 706, 718, 727, 819, 831, 832, 841, 842, 846, 850, 856, 857, 860, 863, 867], "html": [9, 21, 145, 184, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 847], "http": [9, 21, 23, 133, 134, 135, 136, 137, 144, 145, 146, 147, 151, 152, 153, 159, 161, 162, 163, 165, 167, 168, 169, 171, 173, 174, 175, 177, 180, 181, 182, 184, 186, 188, 195, 210, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 432, 433, 448, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 684, 693, 698, 723, 739, 752, 771, 779, 784, 819, 820, 821, 822, 823, 825, 826, 830, 831, 833, 836, 837, 843, 846, 847, 850, 863, 867], "hu": [710, 754, 795, 863], "huaiwen": 752, "huang": [752, 854, 856], "huge": 724, "hugectr": 210, "human": 857, "hundr": [699, 818], "hurt": 857, "hv": [96, 116, 117, 556, 559, 645, 707, 710, 751, 754, 792, 795, 863], "hv_init": 863, "hv_old": 863, "hx": [724, 808], "hy": [724, 808], "hyper": [4, 426, 857, 860], "hypercub": 172, "hyperedg": 823, "hyperedge_degre": 823, "hypergraph": 824, "hyperlink": [155, 187, 192, 193, 301, 304, 307], "hyperparamet": [192, 411, 431, 433, 560, 733, 857], "hyperthread": 847, "h\u662f\u4ece5": [770, 773], "h\u73b0\u5728\u662f\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u5f20\u91cf\u5bf9": 763, "i": [0, 1, 4, 5, 6, 7, 8, 9, 10, 12, 14, 20, 21, 22, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 48, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 70, 73, 74, 75, 79, 80, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 194, 195, 196, 197, 200, 205, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 327, 330, 331, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 358, 359, 385, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 481, 483, 486, 488, 501, 502, 503, 504, 507, 509, 513, 515, 521, 523, 527, 529, 542, 543, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 582, 585, 586, 596, 599, 600, 601, 602, 603, 610, 612, 614, 615, 616, 618, 621, 622, 624, 628, 635, 636, 637, 639, 640, 641, 643, 645, 647, 648, 649, 651, 652, 653, 660, 661, 663, 664, 666, 669, 670, 671, 675, 676, 677, 678, 680, 681, 682, 683, 685, 686, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 734, 737, 738, 750, 751, 754, 759, 767, 768, 773, 777, 778, 779, 783, 784, 787, 790, 791, 792, 795, 796, 801, 804, 806, 811, 812, 815, 816, 818, 819, 820, 821, 822, 823, 825, 826, 827, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 857, 860, 861, 863, 864, 866, 867, 868, 870, 872, 873], "i2h": 855, "i64": [698, 784], "i_": 419, "i_1": [116, 559], "i_2": 559, "i_j": 860, "i_n": 116, "ic": 867, "icew": 166, "icews18": [25, 166], "icon": 821, "id": [0, 4, 6, 13, 20, 26, 27, 32, 34, 35, 39, 44, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 77, 78, 87, 88, 90, 92, 93, 94, 95, 96, 100, 104, 107, 114, 115, 122, 123, 124, 125, 126, 130, 131, 133, 138, 140, 144, 184, 197, 205, 209, 220, 221, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 246, 249, 250, 287, 290, 294, 295, 296, 298, 299, 300, 303, 307, 311, 312, 319, 322, 323, 327, 329, 334, 335, 336, 337, 341, 342, 343, 355, 356, 357, 359, 385, 386, 389, 428, 429, 430, 431, 432, 434, 435, 436, 453, 478, 542, 543, 549, 550, 551, 555, 556, 558, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 576, 577, 637, 642, 643, 644, 645, 649, 677, 682, 685, 691, 693, 695, 698, 706, 707, 713, 715, 716, 721, 723, 783, 791, 792, 801, 802, 805, 807, 823, 833, 836, 837, 839, 843, 855, 860, 867, 872], "id2etyp": 697, "id2ntyp": 697, "id_": 221, "id_tensor": 4, "idconvert": 697, "idea": [21, 22, 732, 733, 825, 841, 860, 867, 868, 870], "ideal": 857, "ident": [116, 220, 299, 399, 411, 421, 565, 637, 652, 659, 695, 716, 733, 820, 821, 823, 825, 830, 831, 873], "identifi": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 241, 247, 428, 429, 431, 433, 457, 480, 553, 555, 557, 574, 696, 697, 727, 730, 732], "idf": 161, "idna": [830, 831, 833, 836, 837], "ids_devic": [290, 294, 296, 300, 319], "idtyp": [4, 54, 64, 71, 125, 126, 131, 249, 250, 287, 336, 550, 551, 706, 717, 750, 791], "idx": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 689, 693, 694, 736, 739, 740, 776, 779, 780, 822], "idx_b": 501, "idx_list": 348, "id\uac00": 784, "id\uac12\ub4e4\uc744": 783, "id\uac12\ub4e4\uc774": 779, "id\uac12\uc744": 784, "id\ub294": [783, 784, 792, 801], "id\ub4e4\uacfc": 783, "id\ub4e4\ub85c": 783, "id\ub4e4\uc5d0": 791, "id\ub4e4\uc640": 801, "id\ub4e4\uc740": [784, 792], "id\ub4e4\uc744": [783, 784], "id\ub4e4\uc758": [802, 805, 807], "id\ub77c\uace0": 791, "id\ub85c": [783, 791], "id\ub97c": [783, 784, 791, 792, 799, 802], "id\ub9cc\uc744": 784, "id\uc5d0": 784, "id\uc640": [783, 784, 802], "id\uc758": [783, 784, 791], "id\uc774\ub2e4": 784, "ie": 164, "ignor": [116, 133, 144, 200, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 428, 429, 430, 431, 432, 433, 691], "ignore_bipartit": 116, "ii": [411, 425], "ij": [359, 391, 393, 401, 403, 404, 405, 409, 410, 411, 414, 415, 416, 420, 425, 754, 795, 823, 825, 857, 866, 867], "ik": 857, "illustr": [697, 699, 706, 717, 820, 821, 822, 823, 836, 850, 851, 856, 867], "imag": [146, 160, 169, 826, 839, 842], "imaginari": 822, "imbal": [162, 699], "imdb": 186, "imdbbinari": [165, 872], "imdbmulti": 165, "immedi": [22, 41, 562, 857], "immunolog": 857, "impact": [14, 561], "impl": [836, 837], "implement": [0, 4, 6, 7, 9, 10, 14, 21, 22, 23, 197, 291, 294, 302, 305, 315, 317, 393, 417, 434, 435, 446, 457, 481, 483, 486, 488, 507, 509, 513, 515, 521, 523, 527, 529, 558, 655, 687, 688, 689, 690, 691, 693, 694, 695, 696, 697, 699, 709, 710, 711, 714, 716, 721, 722, 723, 727, 732, 734, 807, 818, 820, 821, 825, 829, 831, 838, 840, 843, 850, 857, 858, 860, 868, 870, 873], "impli": 855, "implicit": [89, 733, 773, 816, 825], "implicitli": [27, 114, 305, 310, 317, 318, 863], "import": [4, 5, 6, 9, 20, 21, 22, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 120, 122, 125, 126, 128, 129, 131, 137, 138, 141, 142, 143, 146, 147, 149, 155, 160, 169, 171, 173, 174, 180, 182, 183, 185, 186, 187, 188, 189, 190, 192, 193, 195, 204, 214, 217, 218, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 294, 295, 296, 299, 300, 301, 302, 303, 304, 305, 310, 312, 319, 320, 321, 323, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 347, 348, 353, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 476, 477, 478, 479, 480, 505, 542, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 565, 569, 571, 572, 573, 574, 575, 576, 577, 612, 635, 636, 638, 642, 643, 644, 645, 647, 648, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 687, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 703, 704, 705, 706, 707, 710, 711, 712, 715, 716, 720, 721, 724, 726, 727, 728, 729, 730, 731, 732, 734, 736, 737, 738, 739, 740, 741, 742, 747, 748, 749, 750, 751, 754, 755, 756, 759, 763, 764, 766, 767, 768, 769, 770, 771, 772, 774, 776, 777, 778, 779, 780, 781, 782, 783, 788, 789, 790, 791, 792, 795, 796, 797, 798, 801, 806, 807, 808, 810, 811, 812, 813, 814, 815, 817, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872], "importance_sampl": [214, 565], "importerror": [820, 821, 822, 823, 825, 830, 831, 833, 836, 837], "imposs": [567, 830], "impress": 857, "improv": [4, 10, 21, 660, 693, 724, 828, 847, 848, 849, 850, 855, 860, 863, 864, 867, 870], "in_": [394, 403, 404, 407, 409, 410, 414, 417, 423], "in_degre": [4, 87, 89, 447, 685, 687, 705, 727, 749, 762, 767, 790, 805, 811, 839, 856], "in_dim": [429, 431, 433, 730, 732, 770, 772, 814, 815, 857], "in_dir": 699, "in_edg": [88, 705, 749, 790, 856], "in_edge_feat": 404, "in_feat": [388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 413, 414, 416, 417, 420, 422, 423, 424, 425, 428, 430, 432, 445, 454, 458, 695, 716, 720, 721, 723, 724, 726, 732, 734, 741, 760, 762, 763, 764, 766, 772, 774, 781, 802, 805, 806, 807, 808, 810, 815, 817, 833, 838, 840, 841, 842, 850, 851, 854, 855, 856], "in_feat_nam": 670, "in_feats\u662f\u8f93\u5165\u7279\u5f81\u7684\u7ef4\u5ea6": 774, "in_featur": [716, 721, 730, 733, 759, 760, 761, 762, 764, 770, 773, 801, 802, 804, 805, 807, 814, 816, 854, 860], "in_indx": 866, "in_memori": [311, 320, 835, 836, 837], "in_nod": 866, "in_node_feat": 404, "in_siz": [388, 390, 399, 405, 419, 421, 718, 719, 723, 724, 820, 821, 823, 825, 830, 831, 833, 873], "in_subgraph": [299, 302, 341, 542, 717, 759, 801], "in_test_mask": [197, 205], "in_train_mask": [197, 205], "in_valid_mask": [197, 205], "inbound": [214, 216, 219, 234, 241, 242, 299, 302, 337, 565, 566, 567, 568, 637, 801], "inc": 63, "incept": [670, 821], "incid": [13, 62, 63, 220, 245, 246, 247, 477, 699, 709, 716, 730, 794, 802, 823, 830, 841, 856], "includ": [4, 21, 22, 48, 62, 63, 132, 133, 138, 139, 144, 157, 158, 161, 162, 163, 170, 179, 191, 197, 205, 214, 216, 219, 230, 236, 240, 289, 311, 316, 323, 341, 342, 397, 406, 415, 422, 434, 436, 545, 560, 637, 691, 695, 698, 699, 702, 703, 710, 713, 722, 726, 727, 728, 730, 732, 733, 823, 832, 835, 836, 837, 841, 846, 847, 857, 860, 863, 867], "include_dst_in_src": 637, "include_original_edge_id": [311, 328], "include_reverse_edg": [326, 716, 830], "inclus": [21, 207], "incom": [20, 61, 100, 117, 214, 216, 299, 337, 355, 359, 407, 481, 482, 483, 484, 486, 487, 488, 489, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 653, 709, 801, 840, 855, 857, 860, 867], "incomplet": [4, 210, 213, 690, 737, 777, 831], "inconsist": [162, 393], "incorpor": [173, 734], "increas": [294, 311, 319, 320, 411, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 561, 695, 826, 846], "increment": [564, 679, 863, 867], "incur": [246, 247, 337, 341, 342, 478, 479, 542, 722], "inde": [22, 637, 642], "indent": 784, "independ": [120, 574, 575, 647, 648, 707], "index": [4, 6, 21, 22, 95, 96, 108, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 287, 289, 290, 294, 296, 298, 300, 303, 304, 305, 307, 312, 319, 321, 330, 336, 393, 411, 583, 584, 647, 648, 689, 693, 696, 699, 705, 723, 727, 739, 749, 776, 779, 790, 825, 830, 831, 833, 835, 836, 837, 850, 855, 867], "indexes_follow": 303, "indexes_lik": 303, "indic": [4, 6, 9, 12, 30, 31, 32, 53, 54, 62, 63, 101, 102, 131, 135, 136, 139, 140, 142, 143, 145, 146, 149, 151, 152, 169, 171, 180, 183, 185, 189, 190, 196, 209, 210, 213, 218, 220, 232, 239, 240, 241, 246, 287, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 307, 310, 312, 313, 314, 317, 318, 319, 321, 323, 329, 330, 334, 335, 336, 345, 348, 355, 356, 400, 446, 448, 449, 459, 478, 501, 543, 560, 561, 563, 564, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 637, 645, 685, 693, 696, 698, 699, 702, 706, 707, 710, 721, 723, 728, 731, 734, 774, 817, 820, 821, 822, 823, 825, 830, 832, 833, 836, 837, 838, 843, 850, 854, 855, 856, 857, 860, 863], "indices1": [618, 630], "indices2": [618, 630], "indirectli": 703, "individu": [121, 122, 166, 299, 395, 440, 565, 699, 863], "indptr": [32, 299, 302, 305, 310, 312, 313, 321, 323, 327, 335, 583, 584, 615, 616, 825, 830, 833], "induc": [26, 134, 197, 209, 217, 219, 234, 246, 247, 299, 302, 305, 310, 317, 318, 337, 341, 342, 428, 429, 430, 432, 442, 478, 479, 542, 566, 567, 568, 637, 716, 839, 860, 867], "induced_dst": 637, "induced_src": 637, "induct": [160, 175, 194, 217, 398, 402, 423, 723, 857], "industri": 162, "ineffici": [14, 732], "inf": 448, "infeas": 718, "infer": [4, 131, 287, 291, 336, 459, 612, 614, 615, 616, 628, 642, 695, 699, 706, 714, 724, 761, 791, 804, 825, 847, 860, 863, 867], "inferenc": 847, "infin": [481, 483, 486, 488, 507, 509, 513, 515, 521, 523, 527, 529], "infinitesim": 399, "influenc": 134, "info": [203, 206], "info_path": [694, 740, 780], "inform": [4, 13, 22, 27, 28, 59, 95, 96, 101, 102, 114, 115, 116, 117, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 206, 220, 236, 237, 240, 245, 246, 247, 249, 250, 287, 293, 302, 305, 310, 316, 317, 318, 336, 337, 340, 346, 354, 393, 428, 429, 432, 457, 477, 478, 479, 542, 550, 551, 555, 556, 557, 559, 636, 643, 645, 646, 683, 684, 687, 689, 691, 693, 694, 696, 697, 698, 699, 706, 707, 715, 731, 732, 734, 776, 780, 819, 831, 835, 838, 840, 841, 842, 850, 855, 856, 857, 860, 863, 867, 873], "informat": 855, "infti": 426, "inher": [861, 870], "inherit": [312, 655, 689, 690, 696, 719, 725, 838, 843], "init": [4, 10, 386, 427, 430, 432, 457, 723, 726, 766, 810, 819, 822, 855, 857, 863, 866, 867], "init_att": 427, "init_beta": 391, "init_ep": [412, 413], "init_func": [4, 10, 457, 696, 742, 782], "init_graph": 866, "init_method": [831, 872, 873], "init_model": 872, "init_node_activ": 863, "init_process_group": [235, 695, 696, 741, 742, 781, 782, 831, 846, 850, 851, 872, 873], "init_tmp": [430, 432], "initi": [10, 13, 27, 28, 70, 118, 119, 128, 129, 168, 197, 205, 207, 294, 295, 311, 319, 359, 393, 402, 407, 409, 410, 411, 412, 413, 414, 416, 417, 420, 423, 424, 425, 426, 430, 432, 433, 446, 455, 456, 457, 459, 553, 554, 569, 574, 575, 647, 648, 660, 661, 666, 695, 697, 726, 741, 742, 744, 781, 782, 785, 821, 829, 830, 831, 833, 846, 854, 855, 856, 860, 863, 873], "initialize_hv": 863, "inner": [231, 718, 733, 804, 816, 856], "inner_edg": [240, 698, 699], "inner_nod": [240, 698, 699, 784], "innermost": [310, 317, 318], "innov": 856, "inp_dropout": 426, "inplac": [21, 27, 28, 70, 89, 112, 353, 819, 860], "input": [4, 5, 6, 9, 20, 21, 34, 53, 56, 57, 58, 60, 73, 87, 100, 109, 110, 116, 118, 119, 121, 122, 126, 130, 131, 132, 133, 135, 136, 138, 140, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 210, 214, 216, 220, 222, 223, 224, 225, 232, 234, 239, 240, 241, 243, 246, 247, 248, 249, 250, 287, 295, 299, 302, 303, 307, 315, 323, 330, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 353, 354, 355, 356, 359, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 456, 459, 460, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 552, 553, 554, 555, 558, 559, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 596, 599, 600, 601, 602, 603, 610, 622, 636, 638, 642, 643, 644, 645, 646, 647, 648, 651, 652, 659, 660, 661, 664, 666, 670, 683, 687, 689, 696, 697, 699, 706, 710, 714, 715, 716, 719, 720, 721, 726, 727, 728, 730, 731, 732, 734, 768, 772, 774, 776, 783, 784, 804, 806, 811, 812, 815, 817, 821, 822, 825, 829, 830, 831, 832, 833, 840, 842, 846, 850, 851, 854, 855, 856, 857, 860, 863, 867, 872, 873], "input_": [727, 767, 811], "input_d": 426, "input_dict": 822, "input_dim": [429, 430, 431, 440], "input_dir": 784, "input_dst": [727, 767, 811], "input_feat": 415, "input_featur": [715, 721, 759, 760, 762, 764, 801, 802, 805, 807, 855], "input_id": [184, 386], "input_nod": [210, 214, 215, 216, 219, 220, 303, 307, 715, 718, 759, 760, 761, 762, 764, 801, 802, 804, 805, 807, 830, 833, 850, 851], "input_s": 872, "inputs\u662f\u8282\u70b9\u7684\u7279\u5f81": 772, "ins": 710, "insert": [302, 315, 696, 715, 723, 742, 782, 833], "insert_revers": [132, 133, 144, 170], "insid": [21, 201, 297, 299, 307, 312, 323, 334, 335, 406, 414, 426, 460, 699, 732], "insight": [854, 855, 856, 857, 860, 863, 866, 867], "inspect": [698, 699, 858, 860, 870], "inspir": [171, 426, 821, 840], "instal": [21, 396, 397, 398, 692, 738, 778, 784, 820, 821, 822, 823, 825, 847, 850], "instanc": [14, 20, 133, 144, 156, 162, 165, 168, 172, 186, 209, 292, 301, 312, 387, 428, 429, 430, 431, 432, 433, 699, 702, 710, 716, 720, 721, 730, 734, 823, 832, 839, 841, 842, 847, 856, 867, 872], "instanti": [31, 73, 91, 92, 247, 316, 479, 674, 675, 676, 677, 678, 679, 680, 681, 682], "instead": [4, 9, 21, 48, 57, 80, 116, 118, 168, 177, 178, 179, 186, 214, 216, 219, 221, 305, 317, 345, 428, 429, 430, 431, 432, 433, 442, 565, 566, 567, 568, 647, 648, 652, 696, 703, 707, 716, 718, 720, 732, 806, 823, 831, 832, 842, 856, 857, 863, 866, 868, 870, 873], "institut": [699, 784, 855], "instruct": [21, 698, 819, 850], "instructon": 724, "instrument": 161, "insubgraph_sampl": 302, "int": [4, 6, 22, 27, 28, 34, 35, 38, 48, 53, 54, 55, 57, 58, 59, 60, 61, 71, 79, 80, 81, 82, 87, 88, 90, 93, 94, 95, 96, 100, 107, 114, 115, 117, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 287, 290, 292, 294, 295, 296, 299, 300, 303, 304, 305, 307, 309, 310, 314, 317, 318, 319, 321, 327, 329, 333, 336, 337, 339, 340, 341, 342, 343, 344, 348, 355, 356, 357, 358, 385, 386, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 478, 542, 543, 550, 551, 552, 555, 556, 560, 561, 562, 564, 565, 566, 567, 568, 570, 571, 572, 573, 595, 596, 598, 599, 600, 601, 602, 603, 612, 614, 615, 616, 617, 622, 628, 635, 643, 647, 648, 653, 660, 661, 662, 663, 666, 667, 670, 671, 674, 679, 691, 693, 704, 706, 723, 724, 734, 739, 750, 774, 779, 784, 789, 791, 808, 817, 835, 836, 837, 840, 841, 842, 843, 860, 863], "int16": [147, 174], "int32": [4, 59, 64, 71, 118, 119, 125, 126, 131, 249, 250, 287, 304, 312, 336, 397, 550, 551, 563, 568, 576, 577, 592, 605, 698, 699, 704, 706, 748, 750, 789, 791, 825, 830, 833, 836, 837], "int64": [4, 31, 59, 64, 71, 125, 126, 131, 138, 147, 165, 168, 174, 184, 186, 195, 219, 246, 249, 250, 287, 299, 336, 337, 341, 342, 478, 542, 550, 551, 563, 565, 642, 656, 657, 691, 698, 699, 706, 750, 784, 791, 839, 842, 843], "int8": [698, 699, 843], "integ": [22, 32, 39, 52, 78, 95, 96, 122, 125, 131, 138, 140, 142, 143, 189, 190, 200, 207, 210, 214, 216, 219, 240, 241, 249, 287, 299, 304, 307, 314, 317, 318, 329, 336, 390, 397, 405, 419, 422, 436, 501, 504, 558, 567, 576, 577, 642, 643, 691, 697, 698, 699, 704, 706, 707, 789, 819, 839, 872], "integr": [166, 698, 725, 731, 829, 868, 870], "intel": 724, "inter": [856, 864, 870], "interact": [52, 166, 175, 178, 394, 565, 566, 695, 702, 707, 751, 792, 843], "interaction_cutoff": 393, "interatom": 178, "interest": [691, 695, 863, 867], "interfac": [4, 6, 20, 165, 236, 502, 503, 696, 697, 701, 704, 707, 712, 721, 839, 867], "intermedi": [310, 317, 318, 430, 432, 672, 710, 714, 854], "intermediari": 857, "intern": [1, 4, 20, 22, 39, 52, 78, 126, 131, 178, 179, 249, 250, 287, 336, 386, 566, 567, 576, 577, 696, 697, 703, 706, 710, 728, 812, 822, 843, 856], "interpol": [299, 562], "intersect": [56, 197, 205], "interv": [821, 863, 866], "intimid": 856, "intra": [174, 856, 864, 870], "intra_src": 856, "introduc": [22, 77, 134, 158, 173, 191, 243, 344, 397, 399, 413, 418, 446, 447, 448, 449, 450, 451, 452, 453, 552, 635, 643, 660, 661, 663, 666, 667, 671, 685, 686, 688, 692, 701, 707, 709, 717, 718, 725, 729, 732, 821, 829, 830, 850, 856, 860, 867], "introduct": [701, 818, 840, 841, 842, 854], "introductori": 838, "inttensor": [567, 576, 577], "intuit": [22, 245, 477, 825, 872], "inv": 825, "inv_sigma": 414, "inv_vocab": 860, "invalid": [5, 173, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 446, 448, 449, 685, 697, 727, 854, 857], "invari": [441, 442], "invent": 840, "invers": [157, 823], "inverse_indic": [341, 342, 430, 432], "invert": [322, 860], "investig": 162, "invoc": [290, 294, 296, 300, 319], "invok": [4, 20, 22, 27, 34, 73, 93, 94, 100, 113, 114, 117, 126, 131, 156, 216, 235, 249, 250, 287, 336, 357, 387, 696, 697, 698, 699, 700, 707, 710, 724, 838, 850, 851, 872], "involv": [4, 21, 305, 307, 310, 317, 318, 322, 705, 715, 718, 719, 730, 732, 733, 734, 843, 854, 857, 872], "io": [162, 168, 186, 693, 739, 752, 779, 831], "io_ur": 294, "iostream": 22, "iou": 860, "ip": [699, 700, 785, 850, 851], "ip_addr1": [850, 851], "ip_addr2": [850, 851], "ip_addr3": 850, "ip_addr4": 850, "ip_config": [235, 695, 696, 699, 700, 741, 742, 744, 781, 782, 785, 850, 851], "ipynb": [838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "ipython": 821, "ip\u5730\u5740\u540e\u9762\u8fd8\u53ef\u4ee5\u6709\u4e00\u4e2a\u7aef\u53e3": 744, "ip\u914d\u7f6e\u6587\u4ef6": 744, "irrespect": 867, "is_avail": [716, 721, 821, 831, 867, 872, 873], "is_bf16_support": 724, "is_block": [720, 727, 728, 763, 767, 768, 806, 811, 812], "is_cuda": 330, "is_gdata": 4, "is_homogen": 328, "is_input_lay": 855, "is_last_lay": [718, 719, 830, 831, 873], "is_libxsmm_en": 684, "is_pin": [89, 307, 312, 319, 320], "is_tempor": [145, 164, 166], "is_train": [831, 867, 873], "is_unibipartit": [44, 45, 79, 82, 104, 105], "is_valid": 863, "isab": 442, "isinst": [720, 723, 727, 728, 763, 767, 768, 806, 811, 812], "isn": 703, "isol": [130, 150, 246, 337, 341, 342, 542, 555, 706, 791, 801], "isomorph": [412, 413, 872], "isotrop": [178, 179], "issu": [21, 126, 131, 168, 249, 250, 287, 336, 690, 724, 737, 777, 832], "item": [4, 7, 22, 132, 133, 135, 136, 144, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 175, 176, 177, 178, 179, 181, 183, 191, 192, 194, 196, 220, 222, 223, 224, 225, 295, 301, 303, 304, 307, 324, 325, 345, 387, 430, 563, 564, 691, 693, 701, 702, 715, 716, 717, 719, 722, 723, 724, 727, 728, 729, 730, 732, 733, 734, 739, 762, 767, 768, 769, 770, 772, 773, 774, 779, 786, 805, 808, 811, 812, 813, 814, 815, 816, 817, 822, 829, 830, 831, 833, 836, 837, 841, 842, 854, 855, 856, 857, 860, 863, 872, 873], "item_feat": [730, 733, 734, 770, 773, 774, 814, 816, 817], "item_id": 836, "item_sampl": [295, 302, 303, 305, 321], "item_set": [295, 301, 302, 303, 304, 305, 310, 321, 715, 831, 873], "itemsampl": [295, 302, 305, 310, 321, 715, 716, 718, 719, 721, 722, 723, 830, 831, 833, 873], "itemset": [293, 295, 301, 302, 303, 305, 306, 310, 311, 316, 321, 715, 716, 719, 721, 722, 831, 833, 836, 837, 873], "item\uc744": 814, "iter": [0, 3, 4, 6, 7, 34, 35, 48, 53, 54, 55, 57, 58, 60, 61, 87, 88, 92, 93, 94, 100, 114, 131, 165, 168, 172, 177, 178, 179, 186, 209, 210, 211, 212, 213, 220, 246, 287, 292, 295, 303, 305, 310, 317, 336, 337, 341, 342, 392, 426, 430, 432, 436, 440, 478, 542, 555, 556, 644, 687, 693, 706, 714, 716, 718, 719, 721, 722, 732, 764, 791, 801, 802, 804, 807, 821, 830, 833, 842, 863, 866], "iterabledatapip": 722, "iterate\ud558\uace0": [805, 807], "iterate\ud558\ub294": [804, 805, 807], "iterate\ud558\uba74\uc11c": [801, 815], "iterate\ud55c\ub2e4": [801, 815], "iterate\ud574\uc11c": 802, "iterating\ud558\ub294": 807, "iteration\ub9c8\ub2e4": 807, "iteration\uc744": 779, "iterator\ub294": 807, "iterator\ub97c": 807, "iterdatapip": [291, 303], "iterrow": 843, "itertool": 841, "ith": [196, 207], "its": [1, 4, 6, 10, 14, 22, 26, 45, 47, 68, 75, 79, 82, 105, 109, 138, 141, 146, 164, 165, 167, 168, 169, 172, 173, 182, 186, 209, 217, 245, 290, 294, 296, 299, 300, 305, 310, 312, 319, 320, 323, 343, 359, 387, 411, 414, 417, 423, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 477, 565, 567, 571, 574, 575, 576, 577, 642, 643, 651, 672, 696, 697, 698, 699, 701, 706, 709, 715, 721, 724, 729, 730, 731, 732, 734, 821, 823, 825, 826, 832, 838, 842, 843, 850, 851, 854, 856, 857, 860, 863, 866, 867, 872], "itself": [21, 210, 434, 436, 552, 562, 564, 567, 572, 730, 823, 846, 854, 856, 867], "j": [4, 10, 21, 126, 250, 343, 359, 385, 389, 393, 394, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 422, 423, 425, 434, 436, 453, 564, 572, 576, 577, 636, 652, 710, 754, 795, 823, 825, 855, 856, 857, 860, 866, 867], "j4": 819, "j_1": [116, 559], "j_2": 559, "j_n": 116, "jake": [860, 866], "jean": 860, "ji": [408, 412, 417, 423, 710, 867], "jinj": [866, 867], "jinja2": [830, 831, 833, 836, 837], "jinyang": 866, "jk": [408, 860], "jl": 860, "job": [21, 231, 699, 700, 872], "join": [142, 156, 295, 429, 431, 690, 694, 695, 699, 737, 740, 777, 780, 818, 831, 836, 837, 850, 873], "joint": 863, "json": [4, 231, 240, 695, 696, 697, 698, 699, 700, 707, 741, 742, 743, 744, 781, 782, 783, 784, 785, 819, 850], "json\u4e2d\u7684\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 743, "json\u6587\u4ef6\u5305\u542b\u6240\u6709\u5212\u5206\u7684\u914d\u7f6e": 743, "json\u7684json\u6587\u4ef6": 743, "json\uacfc": 792, "judici": [858, 870], "jump": [458, 857], "jupyt": [696, 782, 824, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "jure": 840, "just": [21, 22, 45, 79, 82, 105, 235, 687, 697, 699, 707, 719, 732, 734, 833, 836, 837, 842, 850, 851, 857], "k": [14, 21, 120, 121, 122, 178, 179, 183, 209, 219, 221, 222, 223, 224, 225, 226, 227, 339, 340, 341, 342, 343, 344, 347, 355, 356, 392, 393, 395, 399, 400, 408, 414, 419, 424, 425, 428, 429, 430, 432, 434, 436, 437, 438, 439, 441, 443, 444, 446, 450, 453, 459, 552, 558, 568, 571, 610, 611, 618, 635, 647, 648, 662, 663, 667, 670, 671, 719, 727, 728, 732, 733, 734, 762, 767, 768, 772, 773, 774, 805, 811, 812, 815, 816, 817, 822, 825, 840, 841, 856, 857, 860, 863, 866, 867], "k_i": 867, "k_j": 867, "k_proj": 822, "kai": 860, "kappa": 305, "karat": [167, 703, 747, 788, 821, 843], "karate_club": 843, "karateclub": 25, "karateclubdata": [693, 739, 779], "karateclubdataset": [821, 843], "karlsruh": 132, "karypislab": [698, 784], "kd": [14, 343, 434, 436, 571], "kdd": [151, 152], "kde": 866, "keep": [6, 22, 139, 140, 186, 234, 305, 317, 354, 399, 558, 651, 711, 722, 856, 860], "keep_orig_edg": 651, "keepdim": [724, 808, 863, 866, 867], "kei": [22, 26, 27, 28, 73, 108, 114, 115, 121, 122, 131, 148, 178, 179, 205, 210, 213, 221, 223, 240, 241, 242, 246, 288, 293, 297, 298, 299, 301, 307, 312, 323, 334, 335, 336, 337, 341, 342, 355, 386, 387, 388, 429, 430, 431, 478, 542, 543, 558, 569, 685, 691, 692, 693, 699, 712, 716, 721, 728, 738, 778, 822, 843, 850, 857, 860, 861, 863, 867, 868, 870], "kept": 130, "kera": [725, 809], "kernel": [5, 9, 34, 73, 93, 94, 100, 113, 168, 186, 393, 414, 441, 442, 453, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 661, 724, 818, 826, 850, 854], "kevin": 752, "keyerror": [726, 727, 766, 767, 810, 811], "keyword": [121, 134, 151, 152, 240, 315], "kg": [434, 436], "kgdata": [693, 739, 779], "khop_in_subgraph": 342, "khop_out_subgraph": 341, "khopgraph": 13, "ki": [408, 867], "kick": [820, 821, 822], "kind": [126, 210, 250, 316, 692, 857], "kipf": [820, 827, 838, 854], "kit": 847, "kl": 860, "knn": [343, 571], "knn_g": [343, 571], "knn_graph": [14, 571], "know": [21, 245, 477, 716, 733, 840, 843, 855, 873], "knowledg": [13, 21, 164, 166, 245, 456, 458, 477, 841, 855, 872], "knowledgegraphdataset": [157, 158, 191, 693, 739, 779], "known": [195, 459, 703, 860, 867], "known_host": 850, "konect": 167, "kv": 867, "kvstore": 4, "kwarg": [108, 121, 138, 139, 140, 210, 211, 212, 213, 215, 240, 315, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 428, 429, 430, 431, 432, 433, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 759, 801], "l": [243, 346, 390, 391, 392, 394, 395, 398, 399, 400, 401, 402, 403, 405, 406, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 421, 422, 423, 428, 429, 430, 432, 433, 451, 459, 572, 610, 611, 618, 621, 629, 630, 664, 670, 714, 724, 727, 728, 733, 758, 759, 761, 767, 768, 773, 800, 801, 804, 808, 811, 812, 816, 820, 823, 825, 832, 840, 841, 850, 851, 854, 855, 856, 857, 860, 867], "l1": [435, 549], "l2": [343, 434, 435, 436, 549, 571, 726, 810, 855], "l2norm": 855, "l_": 856, "label": [4, 6, 13, 21, 25, 120, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 208, 213, 214, 216, 217, 219, 220, 230, 243, 244, 245, 295, 301, 303, 304, 305, 307, 311, 320, 321, 337, 347, 348, 385, 428, 430, 432, 433, 459, 476, 477, 542, 545, 556, 558, 569, 689, 692, 693, 694, 699, 703, 715, 716, 719, 721, 723, 724, 729, 730, 732, 734, 738, 739, 740, 760, 764, 769, 770, 772, 774, 776, 778, 779, 780, 802, 807, 808, 813, 814, 815, 817, 820, 821, 822, 823, 830, 831, 833, 835, 836, 837, 838, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 860, 867, 872, 873], "label0_nod": 856, "label1": 856, "label_dict": [204, 348, 694, 740, 780, 843], "label_kei": [178, 179], "label_propag": 459, "labels_follow": [301, 303], "labels_item": 301, "labels_lik": [301, 303], "labels_us": 301, "labelsmooth": 867, "labl": 304, "labor": [214, 299, 305, 317, 565], "laborsampl": [305, 317], "lab\uc758": 793, "lacon": 821, "ladder": 172, "lake": 867, "lam": [426, 427], "lambda": [4, 34, 35, 411, 426, 427, 867], "lambda_": [395, 411], "lambda_max": [395, 400], "land": 552, "langl": [178, 179], "languag": [159, 164, 822, 839, 842, 860, 863, 867], "lapacian": 0, "laplacian": [344, 345, 395, 399, 426, 427, 450, 663, 822, 823], "laplacian_lambda_max": 395, "laplacian_p": 822, "laplacianp": [399, 450], "lapp": [13, 450], "larg": [3, 10, 11, 14, 22, 66, 123, 124, 125, 126, 131, 134, 168, 181, 209, 229, 230, 249, 250, 287, 311, 336, 343, 347, 398, 402, 418, 423, 434, 436, 457, 461, 476, 571, 637, 642, 649, 689, 694, 699, 708, 713, 717, 723, 727, 729, 732, 818, 819, 830, 832, 834, 835, 841, 842, 856, 867], "larger": [178, 240, 290, 299, 307, 315, 430, 432, 461, 565, 711, 734, 832], "largest": [131, 287, 336, 345, 395, 400, 443, 568, 635, 647, 648, 671, 706, 791, 856], "last": [4, 5, 9, 208, 210, 213, 214, 216, 295, 299, 303, 411, 417, 610, 643, 648, 700, 709, 710, 716, 727, 822, 831, 846, 854, 857, 873], "latenc": [305, 310], "latent": 860, "later": [149, 155, 185, 187, 193, 305, 391, 476, 696, 699, 819, 841], "latest": [699, 863], "latter": [359, 428, 429, 430, 431, 432, 433, 561, 696, 711, 716, 868, 870], "launch": [4, 457, 695, 696, 699, 723, 744, 782, 785, 831, 846, 872], "law": 699, "layer": [13, 208, 210, 214, 215, 216, 219, 220, 299, 305, 307, 310, 317, 318, 386, 388, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 448, 449, 450, 454, 458, 560, 565, 696, 711, 714, 715, 716, 718, 719, 721, 722, 723, 724, 725, 732, 733, 734, 761, 804, 807, 808, 809, 817, 825, 830, 831, 832, 833, 838, 840, 841, 842, 850, 851, 854, 857, 866, 868, 870, 873], "layer1": [854, 856, 857], "layer2": [854, 856, 857], "layer3": 856, "layer_depend": [214, 305], "layer_id": 307, "layer_idx": [718, 719, 723, 830, 831, 873], "layer_norm": 422, "layernorm": 867, "layer\uc640": 815, "layout": [31, 62, 63, 704], "lazi": [222, 223, 224, 225, 246, 247, 337, 341, 342, 478, 479, 542], "lazyfeatur": [222, 223, 224, 225], "lbrace": [186, 709, 753, 759, 794, 801], "ld_library_path": [698, 784], "ld_preload": 847, "ldot": [418, 458, 651], "lead": [391, 401, 403, 406, 407, 409, 410, 411, 414, 417, 424, 696, 704, 706, 727, 846], "leaf": [159, 184, 431, 433, 860], "leak": 4, "leakag": [220, 715], "leaky_relu": [825, 857], "leakyrelu": [396, 404, 407, 409, 410, 825, 857], "learn": [4, 10, 13, 14, 23, 160, 179, 194, 217, 347, 385, 388, 389, 391, 396, 398, 402, 406, 407, 409, 410, 414, 423, 424, 427, 428, 429, 430, 432, 443, 450, 456, 458, 459, 476, 562, 650, 656, 657, 658, 660, 693, 719, 723, 729, 730, 732, 734, 793, 805, 818, 819, 821, 822, 825, 827, 830, 831, 832, 833, 838, 839, 840, 841, 843, 854, 855, 856, 860, 861, 863, 866, 867, 870, 872, 873], "learn_beta": 391, "learn_ep": [412, 413], "learnabl": [4, 118, 119, 385, 389, 391, 393, 395, 396, 397, 398, 400, 401, 402, 404, 407, 409, 410, 411, 412, 413, 414, 416, 417, 420, 423, 424, 425, 426, 440, 447, 451, 452, 453, 454, 455, 456, 458, 552, 667, 687, 696, 726, 782, 810, 821, 857, 863], "least": [21, 119, 161, 182, 300, 426, 446, 449, 637, 835, 856, 857], "leav": [299, 710, 826, 839, 841, 860], "left": [118, 347, 392, 395, 398, 404, 407, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 423, 438, 439, 453, 458, 502, 503, 504, 635, 670, 671, 709, 711, 727, 732, 733, 753, 759, 767, 773, 794, 801, 811, 816, 825, 832, 840, 841, 855, 857, 860, 867], "leftarrow": [840, 867], "legaci": 306, "legitim": 163, "len": [73, 138, 145, 146, 147, 164, 165, 166, 168, 169, 172, 174, 184, 186, 195, 207, 220, 302, 311, 327, 387, 458, 501, 505, 564, 571, 589, 611, 612, 615, 616, 630, 685, 691, 693, 718, 719, 723, 724, 728, 730, 733, 734, 739, 759, 762, 768, 770, 773, 774, 779, 801, 805, 808, 812, 814, 816, 817, 821, 822, 830, 831, 841, 842, 843, 846, 850, 851, 854, 855, 856, 860, 863, 866, 867, 872, 873], "length": [36, 37, 142, 164, 182, 205, 207, 217, 232, 239, 240, 290, 296, 298, 299, 300, 305, 310, 317, 318, 319, 330, 340, 359, 395, 451, 504, 505, 543, 562, 563, 564, 567, 572, 610, 611, 685, 687, 696, 702, 704, 789, 825, 839, 861, 866, 867, 870], "leq": [860, 867], "leskovec": 840, "less": [118, 119, 139, 161, 226, 343, 434, 436, 451, 561, 571, 699, 706, 717, 846, 857], "let": [43, 46, 74, 103, 126, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 501, 699, 709, 784, 821, 825, 830, 831, 833, 836, 837, 850, 851, 854, 856, 863, 872], "level": [0, 5, 23, 120, 128, 129, 148, 432, 553, 554, 569, 647, 648, 696, 697, 699, 703, 710, 728, 732, 782, 822, 840, 842, 843, 847, 854, 857, 860, 863, 866, 868, 870], "level\uc758": 782, "leverag": [389, 397, 398, 711, 724, 821, 826, 856, 860, 864, 870], "levi": 672, "lexicograph": [123, 579], "lexicon": 144, "lg": [346, 672, 856], "lg1": 856, "lg_batch": 183, "lg_layer": 856, "lg_x": 856, "lgnn": [858, 870], "lgnncore": 856, "lgnnlayer": 856, "lh": 502, "lhs_data": [502, 503], "lhs_field": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "lhs_target": 502, "li": [245, 404, 477, 661, 666, 670, 725, 752, 836, 837, 855, 857, 863, 866], "lib": [698, 784, 822, 830, 831, 833, 836, 837, 847, 850, 854, 857], "libgoogl": 847, "librari": [8, 12, 21, 22, 723, 819, 825, 826, 846, 847, 863], "libtcmalloc": 847, "libtorch_1718618105212": [843, 856], "libxsmm": 684, "licens": 818, "life": 4, "lifesci": [440, 445], "ligand": 393, "light": 22, "lightn": 831, "like": [9, 21, 22, 26, 116, 131, 162, 214, 216, 219, 226, 295, 301, 303, 305, 317, 324, 325, 418, 430, 432, 560, 561, 685, 687, 690, 691, 696, 699, 707, 711, 716, 718, 720, 721, 726, 727, 729, 730, 732, 751, 770, 782, 792, 819, 833, 836, 837, 838, 840, 842, 843, 854, 867, 872], "like_edg": 836, "like_edges_path": 836, "like_orig_eids_0": 699, "liked_bi": 716, "likelihood": [561, 562, 733, 816, 856], "limit": [22, 244, 292, 311, 718, 826, 831, 856, 873], "limits_": [407, 855, 867], "lin": [412, 420, 425], "line": [22, 183, 346, 664, 696, 698, 699, 700, 704, 819, 828, 838, 850, 858, 859, 866, 870, 872], "line_graph": [183, 856], "line_graph_degre": 183, "linear": [388, 390, 402, 406, 412, 413, 415, 417, 419, 420, 421, 423, 425, 428, 429, 430, 431, 432, 438, 446, 454, 461, 711, 716, 719, 720, 721, 723, 726, 730, 732, 755, 760, 763, 766, 770, 772, 797, 802, 806, 810, 814, 815, 820, 821, 822, 823, 830, 840, 841, 854, 855, 856, 857, 860, 863, 867, 872], "linear_deg": 856, "linear_dst": [711, 755, 797], "linear_fus": 856, "linear_model": 385, "linear_prev": 856, "linear_radiu": 856, "linear_src": [711, 755, 797], "linearity\uc640": 807, "linearli": [390, 422, 820], "linegraph": 13, "lingfan": [855, 863], "link": [2, 13, 139, 149, 157, 158, 185, 191, 211, 214, 216, 220, 243, 305, 307, 310, 317, 318, 454, 455, 456, 692, 696, 714, 715, 729, 732, 734, 738, 762, 778, 779, 805, 822, 828, 829, 831, 833, 838, 844, 845, 852, 853, 856], "link_predict": [311, 830, 836, 837], "linkpr": 139, "linkproppr": [692, 738, 778, 851], "linspac": 866, "lint": 21, "linux": 847, "list": [4, 10, 21, 22, 27, 36, 37, 39, 45, 52, 54, 56, 73, 78, 92, 95, 96, 105, 117, 119, 121, 122, 123, 124, 125, 130, 131, 145, 148, 159, 178, 179, 183, 196, 197, 205, 207, 208, 209, 211, 212, 214, 216, 217, 219, 220, 222, 223, 224, 225, 229, 230, 231, 236, 240, 247, 249, 287, 288, 293, 295, 297, 298, 301, 302, 303, 304, 305, 306, 307, 310, 311, 315, 317, 318, 320, 334, 336, 345, 348, 353, 354, 387, 389, 395, 399, 421, 422, 458, 460, 479, 545, 547, 558, 564, 565, 567, 569, 571, 576, 577, 581, 591, 614, 637, 642, 643, 649, 651, 653, 655, 658, 660, 669, 683, 687, 691, 692, 693, 694, 698, 699, 706, 710, 715, 716, 721, 723, 727, 728, 732, 733, 734, 778, 779, 791, 815, 835, 838, 839, 843, 847, 850, 856, 860, 863, 866, 867], "listen": 696, "liter": [133, 144], "literatur": 730, "littl": [21, 22, 70, 716, 732, 867], "live": [4, 855], "ll": 842, "load": [0, 2, 3, 138, 139, 140, 142, 143, 148, 156, 166, 179, 181, 184, 189, 190, 203, 204, 213, 236, 237, 238, 289, 307, 311, 319, 320, 332, 348, 428, 430, 432, 433, 688, 689, 693, 695, 696, 698, 714, 721, 723, 724, 736, 740, 747, 776, 778, 779, 780, 788, 808, 820, 821, 822, 829, 831, 835, 836, 837, 840, 843, 846, 850, 851, 854, 855, 856, 857, 863, 872], "load_cor": 846, "load_cora": [856, 857], "load_cora_data": [854, 857], "load_data": 823, "load_edg": 238, "load_feat": 236, "load_graph": [204, 569, 694, 703, 707, 740, 747, 751, 780, 788, 792, 839], "load_info": [694, 740, 780], "load_nod": 238, "load_partit": [4, 240, 698, 699], "load_partition_book": [4, 698, 699], "load_partition_feat": [698, 699], "load_state_dict": [846, 863], "load_subtensor": [695, 741, 781], "load_tensor": 699, "load_url": 863, "loader": [41, 209, 210, 211, 212, 213, 292, 305, 310, 856, 873], "loader_cor": [846, 847], "local": [4, 23, 70, 197, 214, 232, 236, 239, 240, 299, 305, 348, 395, 400, 457, 565, 569, 689, 690, 693, 694, 695, 696, 698, 699, 776, 779, 784, 822, 831, 838, 847, 850, 854, 857, 867], "local_edg": 784, "local_nod": 784, "local_node_idx": 784, "local_partit": 4, "local_scop": [428, 429, 430, 431, 432, 460, 720, 727, 730, 732, 733, 760, 762, 763, 767, 770, 772, 773, 802, 805, 806, 811, 814, 815, 816, 840, 841, 854], "local_to_global_nid": 389, "local_var": 70, "localhost": 21, "localscratch": 831, "locat": [4, 146, 169, 232, 239, 610, 621, 689, 693, 698, 825], "lock": [10, 67, 89, 112, 290, 847], "log": [23, 132, 133, 144, 170, 200, 394, 399, 411, 421, 428, 429, 431, 433, 733, 773, 816, 841, 856, 857, 863, 866], "log_prob": 863, "log_softmax": [854, 857, 860, 863], "logic": [156, 867], "logical_and": 784, "login": 850, "logisticregress": 385, "logit": [359, 428, 429, 430, 431, 432, 433, 719, 724, 730, 732, 734, 770, 772, 774, 808, 814, 815, 817, 820, 821, 822, 825, 830, 838, 840, 854, 855, 857, 860, 863], "logit\uc73c\ub85c": 814, "logn": 434, "logp": [854, 857, 860], "logsigmoid": 863, "lollipop": 172, "long": [4, 14, 22, 59, 64, 68, 118, 131, 287, 336, 452, 459, 589, 685, 699, 706, 717, 719, 750, 791, 856, 860, 867], "longer": [861, 863, 870], "longest": [182, 572], "longtensor": [4, 226, 299, 302, 305, 310, 321, 323, 335, 386, 389, 416, 455, 456, 459, 560, 637, 696, 723, 742, 759, 782, 801, 822, 823, 839, 843, 856, 863], "look": [9, 21, 137, 171, 180, 182, 188, 221, 718, 720, 721, 730, 830, 831, 833, 836, 837, 839, 860, 863, 867], "lookup": [22, 855], "loop": [21, 62, 63, 116, 117, 181, 226, 343, 391, 397, 401, 403, 406, 407, 409, 410, 411, 414, 417, 422, 424, 434, 435, 436, 549, 557, 561, 571, 653, 668, 695, 696, 698, 699, 702, 718, 781, 787, 807, 821, 823, 846, 847, 856, 857, 863, 867], "loopi": 856, "loss": [4, 10, 385, 389, 428, 429, 430, 431, 432, 433, 457, 695, 696, 715, 716, 719, 721, 723, 724, 730, 732, 733, 734, 741, 742, 759, 760, 762, 764, 770, 772, 773, 774, 781, 782, 801, 802, 805, 807, 808, 814, 815, 816, 817, 820, 821, 822, 823, 830, 831, 832, 833, 838, 840, 841, 842, 846, 850, 851, 854, 855, 856, 857, 860, 863, 867, 872, 873], "loss_comput": 867, "loss_fcn": [695, 724, 741, 781, 820, 822, 850, 851], "loss_perm1": 856, "loss_perm2": 856, "loss\uac00": 808, "loss\ub97c": [807, 816, 817], "loss\uc5d0": 808, "lot": [22, 168, 186, 694, 717, 718, 732, 733], "low": [5, 240, 245, 292, 343, 399, 431, 433, 434, 436, 455, 456, 477, 569, 571, 696, 697, 711, 782, 819, 846, 857], "low2high": [431, 433], "lower": [22, 427, 693, 696, 739, 779, 840, 857, 866, 868, 870], "lowest": [178, 179], "lp": [455, 456, 836, 837], "lp_task": [836, 837], "lp_test_follow_index": 836, "lp_test_follow_indexes_path": 836, "lp_test_follow_label": 836, "lp_test_follow_labels_path": 836, "lp_test_follow_neg_dst": 836, "lp_test_follow_neg_index": 836, "lp_test_follow_neg_se": 836, "lp_test_follow_neg_src": 836, "lp_test_follow_se": 836, "lp_test_follow_seeds_path": 836, "lp_test_index": 837, "lp_test_indexes_path": 837, "lp_test_label": 837, "lp_test_labels_path": 837, "lp_test_like_index": 836, "lp_test_like_indexes_path": 836, "lp_test_like_label": 836, "lp_test_like_labels_path": 836, "lp_test_like_neg_dst": 836, "lp_test_like_neg_index": 836, "lp_test_like_neg_se": 836, "lp_test_like_neg_src": 836, "lp_test_like_se": 836, "lp_test_like_seeds_path": 836, "lp_test_neg_dst": 837, "lp_test_neg_index": 837, "lp_test_neg_se": 837, "lp_test_neg_src": 837, "lp_test_se": 837, "lp_test_seeds_path": 837, "lp_train_follow_se": 836, "lp_train_follow_seeds_path": 836, "lp_train_like_se": 836, "lp_train_like_seeds_path": 836, "lp_train_se": 837, "lp_train_seeds_path": 837, "lp_val_follow_index": 836, "lp_val_follow_indexes_path": 836, "lp_val_follow_label": 836, "lp_val_follow_labels_path": 836, "lp_val_follow_neg_dst": 836, "lp_val_follow_neg_index": 836, "lp_val_follow_neg_se": 836, "lp_val_follow_neg_src": 836, "lp_val_follow_se": 836, "lp_val_follow_seeds_path": 836, "lp_val_index": 837, "lp_val_indexes_path": 837, "lp_val_label": 837, "lp_val_labels_path": 837, "lp_val_like_index": 836, "lp_val_like_indexes_path": 836, "lp_val_like_label": 836, "lp_val_like_labels_path": 836, "lp_val_like_neg_dst": 836, "lp_val_like_neg_index": 836, "lp_val_like_neg_se": 836, "lp_val_like_neg_src": 836, "lp_val_like_se": 836, "lp_val_like_seeds_path": 836, "lp_val_neg_dst": 837, "lp_val_neg_index": 837, "lp_val_neg_se": 837, "lp_val_neg_src": 837, "lp_val_se": 837, "lp_val_seeds_path": 837, "lpe": 450, "lr": [4, 10, 385, 389, 428, 429, 430, 432, 433, 457, 695, 696, 719, 723, 724, 741, 742, 744, 781, 782, 785, 808, 820, 821, 822, 823, 830, 831, 838, 840, 841, 842, 850, 851, 854, 855, 856, 857, 860, 867, 872, 873], "lr1": [696, 742, 782], "lr2": [696, 742, 782], "lr_schedul": 822, "lru": [290, 300], "lsc": 289, "lsc_2part": 699, "lsc_chunk": 699, "lstm": [423, 440, 458, 726, 766, 810, 828, 861, 862, 864, 867, 870], "lt": [14, 822, 823, 830, 831, 833, 836, 837], "lumo": [178, 179], "lut": 867, "lvert": [453, 726, 766, 810], "m": [5, 9, 21, 62, 63, 73, 91, 92, 93, 94, 100, 113, 126, 128, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 353, 390, 399, 405, 419, 421, 428, 429, 431, 434, 436, 442, 460, 567, 610, 611, 618, 621, 629, 630, 679, 680, 681, 682, 710, 712, 720, 724, 727, 731, 733, 754, 756, 763, 767, 771, 773, 795, 796, 798, 806, 808, 811, 816, 819, 823, 825, 831, 832, 840, 854, 856, 863, 866], "m_": [405, 709, 753, 794, 832, 840], "m_i": 405, "m_r": 456, "m_v": [832, 840], "machin": [4, 177, 178, 179, 211, 212, 232, 239, 240, 457, 693, 695, 696, 697, 698, 699, 700, 724, 793, 818, 826, 828, 838, 843, 850, 851, 856, 860, 863, 864, 867, 870, 874, 875], "machine_id": 4, "made": [181, 428, 429, 430, 432, 855, 867], "mag": [289, 699, 721, 784], "mag240m": 289, "mag_lsc_partit": 699, "maggi": 752, "magnitud": 857, "mag\uc758": 784, "mai": [4, 6, 20, 21, 41, 116, 186, 214, 220, 226, 236, 292, 295, 322, 355, 390, 419, 422, 543, 561, 642, 643, 690, 691, 693, 695, 696, 699, 707, 715, 726, 727, 728, 730, 731, 732, 733, 734, 737, 777, 819, 821, 831, 838, 839, 841, 843, 850, 855, 873], "mailbox": [5, 20, 100, 263, 264, 265, 266, 679, 680, 682, 710, 724, 727, 754, 767, 795, 808, 811, 840, 857, 860, 863, 867], "main": [4, 21, 210, 292, 695, 696, 722, 732, 772, 815, 825, 826, 831, 846, 847, 856, 857, 873], "mainland": 23, "mainli": [4, 231, 696], "maintain": [4, 6, 10, 27, 28, 114, 115, 116, 117, 126, 130, 131, 145, 246, 247, 249, 250, 287, 292, 336, 337, 340, 346, 354, 478, 479, 542, 556, 559, 636, 645, 646, 732, 850, 860, 867], "major": [144, 232, 239, 704, 723, 725, 732, 789, 831, 836, 850, 873], "make": [8, 20, 21, 22, 70, 120, 122, 137, 140, 162, 171, 180, 182, 188, 198, 210, 214, 215, 216, 226, 229, 230, 241, 242, 245, 295, 299, 386, 412, 418, 423, 428, 429, 437, 439, 443, 444, 446, 449, 477, 561, 565, 567, 669, 675, 685, 689, 690, 693, 694, 695, 696, 698, 700, 706, 710, 720, 721, 730, 732, 777, 784, 814, 819, 822, 828, 838, 839, 841, 844, 845, 860, 866, 867], "make_model": 867, "make_shar": 22, "makedir": [694, 740, 780, 836, 837], "manag": [288, 295, 298, 320, 696, 707, 819, 826, 831, 873], "mandatori": [21, 231, 835], "manhattan": [435, 549], "mani": [4, 22, 122, 214, 226, 305, 310, 561, 565, 688, 691, 696, 700, 703, 715, 725, 727, 822, 838, 839, 840, 841, 850, 860, 863, 867], "manifold": 414, "manipul": [0, 13, 22, 308, 857], "manner": [831, 866], "manual": [4, 101, 102, 155, 168, 186, 187, 193, 292, 391, 403, 406, 407, 409, 410, 411, 414, 417, 419, 422, 424, 698, 703, 818, 831, 840, 847, 850, 873], "manual_se": 872, "map": [4, 5, 20, 26, 43, 46, 47, 74, 75, 101, 102, 103, 109, 121, 130, 131, 186, 220, 231, 234, 240, 299, 303, 307, 312, 322, 323, 326, 329, 334, 335, 336, 386, 388, 389, 411, 420, 429, 430, 434, 436, 438, 543, 637, 645, 651, 691, 697, 698, 716, 727, 728, 767, 783, 811, 839, 850, 856, 863, 867], "map_to_homo_eid": [4, 697, 783], "map_to_homo_nid": [4, 697, 783], "map_to_per_etyp": [4, 241, 697, 783], "map_to_per_ntyp": [4, 241, 697, 783], "mapper": 303, "mapperiterdatapip": 308, "margin": [733, 816], "mark": [144, 167, 222, 223, 224, 225, 243, 841], "marker": 866, "marketplac": 702, "markupsaf": [830, 831, 833, 836, 837], "mask": [22, 132, 133, 140, 144, 150, 154, 157, 158, 159, 160, 161, 162, 163, 170, 173, 176, 181, 184, 191, 192, 194, 197, 198, 205, 216, 231, 232, 239, 246, 428, 429, 430, 432, 446, 448, 449, 459, 478, 658, 685, 689, 693, 724, 729, 730, 734, 759, 774, 776, 779, 801, 813, 817, 843, 850, 854, 857, 860, 867], "massiv": [698, 699, 714], "master": [21, 165, 846], "master_addr": 846, "master_port": 846, "mat": [632, 690, 693, 737, 739, 777, 779, 856], "mat_path": [693, 739, 779], "match": [4, 5, 9, 118, 199, 200, 299, 312, 353, 354, 357, 432, 460, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 564, 690, 737, 777, 825], "materi": [9, 89, 717, 839, 863], "materialize_data": 108, "math": [245, 407, 477, 647, 648, 710, 727, 787, 801, 816, 854, 856, 860], "mathbb": [709, 753, 794, 821, 822, 823, 863, 867], "mathbf": [407, 411, 416, 459], "mathcal": [244, 347, 359, 394, 397, 398, 399, 403, 405, 406, 407, 408, 409, 410, 412, 413, 414, 416, 417, 419, 420, 422, 423, 476, 502, 503, 574, 575, 651, 709, 710, 727, 728, 732, 733, 753, 754, 759, 767, 768, 772, 773, 794, 795, 801, 811, 812, 815, 816, 825, 832, 840, 841, 857, 860], "mathemat": [120, 244, 347, 396, 397, 408, 411, 417, 455, 456, 476, 610, 621, 711, 820, 821, 840, 854, 856], "mathrm": [118, 245, 391, 398, 403, 404, 407, 409, 410, 412, 413, 414, 416, 420, 423, 438, 440, 477, 727, 767, 811, 867], "matmul": [825, 855], "matplotlib": [821, 856, 860, 863, 866], "matric": [41, 62, 63, 118, 119, 183, 390, 407, 422, 446, 610, 613, 618, 619, 621, 630, 651, 703, 821, 824, 825, 854], "matrix": [0, 9, 13, 14, 30, 31, 32, 62, 63, 118, 119, 126, 131, 146, 169, 177, 250, 287, 336, 339, 340, 343, 346, 392, 400, 401, 402, 404, 410, 411, 414, 417, 424, 425, 434, 435, 436, 451, 456, 459, 461, 501, 502, 503, 504, 549, 567, 571, 576, 577, 579, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 592, 593, 594, 595, 596, 598, 599, 600, 601, 602, 603, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 651, 660, 661, 666, 670, 703, 711, 723, 730, 731, 770, 814, 818, 820, 821, 822, 823, 824, 839, 854, 855, 857, 858, 870], "matrix\uc774\ub2e4": 783, "matter": [21, 300, 440, 856, 857, 867], "mat\u6587\u4ef6\u4e0b\u8f7d\u5230\u76ee\u5f55": 737, "max": [5, 9, 73, 117, 231, 347, 349, 350, 387, 395, 398, 399, 412, 414, 420, 421, 439, 458, 481, 486, 503, 505, 507, 513, 521, 527, 553, 554, 576, 577, 614, 615, 616, 628, 653, 685, 706, 710, 712, 726, 727, 733, 734, 754, 756, 766, 767, 773, 774, 791, 795, 798, 810, 811, 816, 817, 825, 854, 856, 863, 866, 868, 870, 872], "max_": [406, 439], "max_allow_nod": 168, "max_cache_size_in_byt": [290, 300], "max_degre": [447, 687], "max_depth": 867, "max_dist": [452, 687], "max_in_degre": [396, 397, 398], "max_len": [451, 685, 687], "max_node_typ": 453, "max_num_nod": [168, 186, 685, 687], "max_num_v": 172, "max_queue_s": 235, "max_uva_thread": 292, "maxim": [6, 232, 235, 239, 385, 699, 840, 847, 863], "maximum": [6, 118, 119, 168, 172, 186, 396, 397, 398, 399, 406, 421, 446, 447, 448, 449, 451, 452, 453, 560, 596, 599, 670, 687, 732, 733, 816, 857, 861, 867, 870], "mayb": 21, "mb": [699, 828, 845, 849, 853, 859, 862, 865, 869, 871, 875], "mcaulei": [135, 136], "mckee": 558, "mct": [431, 433], "md": [210, 819], "mean": [4, 5, 9, 10, 73, 117, 137, 147, 150, 154, 176, 177, 180, 210, 211, 212, 240, 292, 297, 299, 307, 310, 312, 317, 318, 323, 335, 351, 352, 359, 387, 398, 399, 411, 412, 414, 417, 420, 421, 423, 428, 429, 431, 434, 435, 436, 437, 438, 440, 441, 443, 444, 482, 487, 503, 505, 508, 514, 522, 528, 550, 551, 553, 554, 596, 600, 636, 637, 645, 653, 673, 696, 706, 710, 712, 718, 719, 720, 723, 724, 726, 727, 730, 733, 734, 754, 756, 763, 766, 767, 770, 773, 774, 782, 791, 795, 798, 805, 806, 808, 810, 811, 814, 816, 817, 820, 821, 822, 825, 830, 831, 833, 838, 840, 841, 843, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 873], "mean_nod": [429, 430, 431, 432, 732, 772, 815, 842], "mean_udf": 840, "meaning": 731, "meaningless": 116, "meant": [22, 703], "measur": [13, 120, 161, 244, 245, 343, 347, 431, 433, 434, 436, 455, 456, 476, 477, 571, 687, 831, 857, 867, 873], "mechan": [5, 20, 22, 451, 452, 453, 722, 731, 822, 856, 857, 863, 867, 868, 870, 873], "medium": 14, "meet": [392, 821], "mem": [10, 828, 845, 849, 853, 859, 862, 865, 869, 871, 875], "member": [21, 430, 432, 710, 840, 841, 843, 856, 872], "memmap": 699, "memo": 5, "memori": [4, 9, 10, 14, 67, 89, 112, 126, 131, 184, 210, 235, 249, 250, 287, 290, 291, 293, 299, 300, 305, 307, 310, 312, 314, 319, 320, 330, 332, 336, 343, 358, 434, 436, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 561, 571, 643, 695, 699, 706, 711, 714, 717, 718, 724, 808, 819, 826, 834, 835, 836, 837, 841, 850, 860, 867], "meng": 752, "mention": [696, 698, 699, 718, 867], "merg": [21, 229, 230, 683, 707, 710, 712, 728, 730, 792, 842, 856, 857], "merit": 22, "merlin": 210, "messag": [1, 13, 53, 73, 91, 92, 93, 94, 100, 113, 127, 130, 131, 178, 179, 208, 210, 211, 212, 214, 215, 216, 219, 220, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 391, 392, 393, 394, 397, 399, 401, 403, 406, 407, 409, 410, 411, 412, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 431, 432, 433, 481, 482, 483, 484, 486, 487, 488, 489, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 544, 545, 546, 547, 548, 565, 637, 674, 675, 676, 677, 678, 679, 680, 681, 682, 698, 708, 716, 718, 719, 720, 721, 725, 726, 728, 729, 732, 734, 752, 793, 798, 801, 802, 805, 807, 808, 813, 817, 818, 833, 839, 841, 855, 857, 858, 861, 863, 868, 870], "message_func": [73, 91, 92, 93, 94, 100, 113, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 544, 545, 546, 547, 548, 710, 712, 713, 754, 756, 757, 795, 798, 799, 840, 855, 857, 860, 863, 867], "meta": [4, 148, 293, 316, 389, 457, 691, 697, 699, 860], "meta_g": 72, "metadata": [4, 236, 240, 294, 296, 298, 299, 311, 316, 319, 691, 696, 697, 698, 699, 700, 723, 784, 830, 831, 833, 834, 835, 836, 837, 873], "metadata_path": [836, 837], "metagraph": [13, 26, 101, 102, 117, 119, 122, 127, 130, 131, 173, 220, 246, 336, 337, 341, 342, 429, 478, 542, 550, 559, 642, 645, 672, 683, 691, 707, 751, 792], "metapath": [354, 389, 560, 563, 564, 651], "method": [1, 22, 89, 112, 160, 194, 208, 209, 210, 217, 218, 220, 221, 232, 239, 240, 291, 302, 305, 315, 343, 347, 386, 387, 390, 395, 407, 409, 410, 423, 434, 436, 476, 505, 544, 546, 560, 571, 643, 691, 703, 706, 714, 715, 718, 719, 729, 730, 831, 832, 838, 839, 841, 843, 847, 854, 855], "methodologi": [637, 718, 733], "meti": [4, 6, 209, 232, 239, 240, 355, 356, 558, 699, 743, 784, 850], "metirs\ub97c": 784, "metis_partition_assign": [209, 558], "metis\u4ec5\u5e73\u8861\u6bcf\u4e2a\u5b50\u56fe\u4e2d\u7684\u8282\u70b9\u6570": 743, "metis\u5212\u5206\u7684\u597d\u5904\u5728\u4e8e": 743, "metis\uc640": 784, "metis\uc740": 784, "metis\uc758": 784, "metric": [21, 343, 434, 435, 436, 549, 571, 718, 830, 833, 841, 850, 851], "metric\uc744": 804, "mf": [831, 873], "mfg": [127, 131, 208, 209, 210, 211, 212, 214, 215, 216, 220, 221, 716, 719, 721, 802, 805, 807, 832, 833, 851], "mfg\uac00": 801, "mfg\ub4e4\ub85c": 801, "mfg\ub4e4\uc740": 801, "mfg\ub4e4\uc758": [801, 802, 807], "mfg\ub85c": 801, "mfg\ub97c": [801, 807], "mfg\uc5d0": 806, "mfg\uc5d0\uc11c": 806, "mfg\uc5d0\uc11c\uc758": 801, "mfg\uc758": [801, 802, 807], "mfg\uc778": 806, "mgf\uac00": 806, "mha": 822, "michal": 843, "michel": 167, "micro": 857, "microbenchmark": 826, "microsoft": [151, 152, 289, 699], "middl": [142, 143], "might": [354, 393, 702, 712, 732, 831, 847, 856], "migrat": 21, "mikhail": 855, "million": [457, 714, 724, 818, 831, 833], "min": [5, 9, 73, 117, 243, 387, 398, 399, 421, 483, 488, 503, 505, 509, 515, 523, 529, 553, 554, 612, 653, 685, 710, 712, 726, 733, 754, 756, 766, 773, 795, 798, 805, 810, 816, 825, 856], "min_num_v": 172, "mind": [695, 856], "mine": [132, 171], "minesweep": 171, "mini": [4, 7, 165, 168, 172, 186, 208, 210, 220, 308, 693, 695, 696, 713, 714, 717, 721, 727, 732, 781, 818, 829, 831, 842, 846], "mini_batch": [716, 721], "mini_cn": 741, "mini_feature_dataset": 691, "mini_featureless_dataset": 691, "mini_hetero_dataset": 691, "mini_multi_dataset": 691, "minibatch": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 220, 222, 223, 224, 225, 291, 295, 303, 304, 305, 308, 310, 317, 321, 326, 714, 718, 722, 802, 828, 829, 830, 831, 832, 833, 835, 842, 874, 875], "minibatcher_default": [295, 303], "minibatchtransform": [297, 309, 315, 716], "minigcdataset": [693, 739, 779], "minim": [8, 21, 22, 240, 356, 385, 691, 698, 699, 721, 722, 733, 856, 857], "minimum": [6, 9, 172, 186, 299, 399, 421, 596, 601, 669, 710, 732, 856], "minji": [854, 856, 857, 860], "minkowski": [435, 549], "minst": 169, "minut": [164, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "misc": 13, "miss": [290, 299, 300, 691, 855, 857], "miss_rat": [290, 300], "mix": [9, 14, 309, 421, 708, 710, 793, 795, 856, 858, 870], "mixtur": [183, 414], "mkdir": [819, 850], "ml": 173, "mle": 863, "mlp": [405, 421, 426, 450, 730, 732, 772, 815, 841], "mlppredictor": [730, 770, 814, 841], "mlp\ub97c": 814, "mlsoar": 752, "mm": 856, "mmap": [836, 837], "mmap_mod": 319, "mnist": [14, 169, 866], "mod": [387, 728, 768, 812], "mod_arg": [387, 728, 768, 812], "mod_kwarg": [387, 430, 728, 768, 812], "mode": [4, 147, 164, 166, 174, 175, 184, 195, 209, 217, 235, 355, 356, 458, 460, 694, 740, 780, 819, 821, 860, 867], "model": [4, 7, 9, 12, 14, 23, 70, 120, 158, 159, 167, 183, 191, 197, 205, 210, 213, 222, 223, 224, 225, 295, 385, 389, 390, 394, 396, 397, 408, 414, 416, 417, 418, 420, 422, 424, 425, 428, 429, 430, 431, 432, 433, 441, 442, 450, 455, 458, 461, 560, 562, 685, 686, 693, 695, 696, 700, 702, 707, 712, 715, 717, 718, 722, 723, 724, 725, 727, 731, 733, 741, 742, 759, 760, 762, 764, 770, 772, 773, 774, 781, 782, 801, 802, 805, 807, 808, 814, 815, 816, 817, 818, 819, 820, 821, 823, 825, 826, 828, 838, 839, 840, 846, 856, 857, 858, 859, 860, 861, 862, 865, 867, 869, 871], "model_opt": 867, "model_state_dict": 846, "model_typ": 450, "model_zoo": 863, "modelnet": 14, "modif": [446, 449, 695, 850, 851], "modifi": [8, 148, 149, 155, 185, 187, 193, 198, 292, 299, 319, 320, 446, 449, 639, 640, 641, 721, 731, 818, 819, 846, 850], "modul": [4, 6, 8, 13, 18, 21, 235, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 660, 661, 662, 663, 664, 666, 667, 670, 686, 687, 695, 708, 714, 716, 718, 719, 721, 723, 724, 729, 730, 732, 733, 734, 760, 761, 762, 763, 764, 766, 768, 770, 772, 773, 774, 802, 804, 805, 806, 807, 808, 809, 810, 812, 814, 815, 816, 817, 820, 821, 822, 823, 825, 828, 830, 831, 832, 833, 838, 841, 842, 844, 845, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "modular": 699, "moduledict": [429, 431, 720, 728, 763, 768, 806, 812], "modulelist": [687, 718, 719, 723, 724, 808, 821, 822, 830, 831, 850, 851, 855, 856, 857, 863, 873], "mol": [178, 179], "mol_encod": 822, "molass": 752, "molecul": [177, 178, 179, 445], "molecular": [178, 179, 195, 393, 440, 445, 453, 842], "moleculenet": 179, "molhiv": [138, 692, 738, 778, 822], "moment": [178, 179, 399, 421, 558], "moment3": [399, 421], "moment4": [399, 421], "moment5": [399, 421], "monitor": 866, "mont": [431, 433], "month": [163, 181], "monthli": [149, 185], "more": [3, 4, 9, 20, 21, 22, 27, 28, 66, 91, 95, 96, 120, 122, 156, 161, 168, 214, 216, 226, 230, 245, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 294, 295, 296, 300, 307, 319, 340, 393, 411, 428, 429, 430, 432, 457, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 561, 566, 567, 637, 643, 685, 691, 693, 694, 695, 696, 699, 703, 707, 711, 713, 714, 715, 716, 717, 721, 722, 723, 726, 728, 730, 732, 734, 751, 792, 818, 819, 821, 823, 825, 831, 836, 837, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872], "moreov": [118, 119], "most": [1, 14, 116, 126, 131, 147, 151, 152, 159, 182, 226, 249, 250, 287, 336, 431, 433, 560, 637, 693, 694, 696, 697, 706, 710, 715, 720, 724, 730, 731, 732, 734, 825, 838, 847, 867], "mostli": 22, "motif": [141, 142, 143, 189, 190, 857], "mount": 850, "move": [4, 89, 108, 305, 310, 582, 585, 690, 697, 721, 821, 831, 867, 873], "movement": [246, 247, 337, 341, 342, 478, 479, 542, 722], "movi": [43, 173, 856], "movielen": 173, "mp": [295, 831, 846, 872, 873], "mpicc": [698, 784], "mpirun": [698, 784], "mpmath": [830, 831, 833, 836, 837], "mpnn": [420, 440], "mq": 567, "msbuild": 819, "msg": [263, 264, 265, 266, 419, 854, 855, 856, 867], "mu": [178, 179, 414, 453], "mu_": 419, "mu_k": 414, "much": [4, 122, 139, 245, 299, 477, 561, 565, 711, 818, 826, 832, 836, 837, 850, 855, 857, 863, 867], "mufei": [855, 857, 863], "muhyun": 793, "mul": [9, 259, 260, 273, 274, 283, 284, 446, 449, 497, 498, 502, 503, 520, 521, 522, 523, 524, 525, 538, 539, 624, 710, 754, 795, 825], "mulbackward0": 9, "multi": [9, 41, 149, 158, 162, 185, 191, 194, 295, 304, 396, 403, 407, 408, 409, 410, 419, 446, 449, 451, 452, 453, 455, 457, 550, 551, 646, 687, 693, 699, 704, 717, 721, 733, 734, 818, 828, 829, 830, 833, 838, 839, 840, 848, 849, 850, 855, 858, 868, 870, 874, 875], "multi30k": 867, "multi_update_al": [429, 431, 712, 728, 756, 768, 798, 812], "multiclass": [165, 430, 431, 432, 433, 459, 823, 831, 873], "multidigraph": [72, 642], "multigraph": [48, 66, 118, 119, 702, 787, 863], "multihead": 441, "multiheadattent": 867, "multiheadgatlay": 857, "multilabel": 459, "multilay": [214, 215, 216, 305, 317, 565, 721, 730], "multilayerdropoutsampl": [759, 801], "multilayerfullneighborsampl": [759, 760, 761, 762, 764, 801, 802, 804, 805, 807], "multilayerneighborsampl": [210, 696, 742, 759, 782, 801, 850, 851], "multilevel": [355, 356], "multinomi": [719, 762, 805], "multipl": [0, 4, 7, 9, 14, 22, 26, 27, 28, 36, 37, 41, 43, 46, 47, 48, 51, 52, 54, 55, 56, 57, 60, 61, 65, 74, 75, 77, 87, 88, 90, 91, 92, 95, 96, 103, 107, 118, 126, 128, 129, 130, 131, 229, 230, 240, 249, 250, 287, 288, 292, 293, 298, 299, 305, 310, 311, 317, 318, 320, 336, 343, 345, 348, 386, 387, 389, 394, 421, 430, 432, 434, 435, 436, 445, 446, 449, 457, 458, 501, 502, 503, 504, 549, 553, 554, 557, 560, 564, 565, 569, 571, 574, 575, 585, 610, 618, 619, 621, 636, 637, 645, 651, 655, 685, 687, 695, 696, 697, 699, 702, 706, 712, 717, 720, 722, 728, 732, 733, 734, 798, 819, 821, 822, 826, 831, 836, 837, 838, 841, 847, 850, 854, 855, 857, 858, 863, 867, 870, 872, 873], "multipli": [5, 183, 216, 399, 421, 428, 429, 553, 554, 610, 611, 618, 621, 626, 629, 630, 710, 724, 731, 820, 825, 855, 867], "multiprocess": [4, 292, 722, 831, 872, 873], "multiprocessor": 292, "multpli": 731, "music": [137, 161], "must": [4, 6, 9, 27, 28, 34, 35, 36, 37, 43, 46, 48, 51, 53, 54, 55, 57, 58, 60, 61, 73, 74, 87, 88, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 113, 118, 119, 122, 125, 130, 131, 138, 139, 140, 147, 164, 174, 175, 197, 198, 205, 209, 210, 211, 212, 214, 216, 218, 219, 220, 241, 242, 246, 249, 250, 287, 290, 296, 298, 299, 300, 304, 305, 310, 317, 318, 319, 320, 336, 337, 339, 341, 342, 344, 345, 346, 357, 387, 391, 394, 399, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 417, 421, 422, 423, 429, 430, 431, 432, 433, 436, 459, 478, 504, 505, 542, 552, 553, 554, 555, 558, 562, 563, 564, 565, 566, 567, 568, 571, 572, 576, 577, 596, 599, 600, 601, 603, 612, 630, 635, 637, 645, 683, 689, 691, 693, 696, 697, 700, 704, 705, 707, 710, 717, 720, 751, 790, 792, 803, 825, 839, 855, 860], "mutag": [25, 165, 168, 170, 186, 428, 432, 433, 732, 772, 815], "mutat": [13, 70, 860, 863], "mutual": [149, 161, 185, 216, 220, 245, 477, 564, 702, 872], "mxnet": [4, 9, 13, 21, 23, 199, 200, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 693, 706, 720, 725, 732, 734, 765, 809, 815, 818, 826, 858, 870], "mxnet\uacfc": 817, "mxnet\uc5d0\uc11c\ub294": 779, "mxnet\uc758": 791, "mxnet\uc774\ub098": 806, "my": [699, 700], "my_agg_func": 387, "my_sample_subgraph": [302, 315], "my_train_script": 700, "myadd": 22, "mydata": 699, "mydatapars": 691, "mydataset": [689, 690, 736, 776, 777], "mygraph": [699, 700], "myrepo": 699, "mysubgraphsampl": [302, 315], "n": [6, 9, 14, 20, 21, 62, 63, 126, 129, 186, 190, 240, 243, 250, 299, 312, 322, 323, 334, 335, 343, 344, 347, 355, 356, 359, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 459, 476, 501, 504, 552, 567, 571, 572, 576, 577, 610, 611, 612, 615, 616, 618, 621, 628, 629, 630, 635, 644, 647, 648, 663, 671, 680, 681, 682, 685, 697, 710, 714, 723, 727, 754, 758, 759, 767, 795, 800, 801, 805, 811, 820, 821, 822, 823, 825, 826, 832, 836, 837, 840, 854, 856, 857, 860, 863, 866, 867, 871], "n0": 299, "n1": [299, 323, 329, 335, 452], "n2": [299, 323, 329, 335, 452], "n2e": 672, "n3": 329, "n_": [391, 394, 401, 402, 403, 404, 407, 409, 410, 412, 413, 414, 415, 417, 419, 423], "n_0": 122, "n_1": 122, "n_base": 855, "n_class": [433, 695, 724, 730, 732, 741, 770, 772, 781, 808, 814, 815, 850, 851], "n_click": [729, 769, 813], "n_commun": 183, "n_dislik": [729, 769, 813], "n_edg": [733, 760, 773, 802, 808, 816, 823, 867], "n_epoch": [210, 213, 855], "n_etyp": 416, "n_feat": 460, "n_featur": [733, 734, 773, 774, 816, 817], "n_follow": [729, 769, 813], "n_graph": 183, "n_head": [442, 450], "n_hetero_featur": [729, 734, 769, 774, 813, 817], "n_hidden": [724, 808, 850, 851, 855], "n_hidden_lay": 855, "n_i": [122, 437, 438, 439, 444, 855], "n_item": [729, 769, 813], "n_iter": 440, "n_job": 231, "n_k": 122, "n_kernel": 414, "n_label": [734, 774, 817], "n_layer": [440, 441, 442, 759, 761, 801, 804, 850, 851], "n_max_click": [729, 769, 813], "n_node": [183, 843, 867], "n_search": 846, "n_step": 416, "n_t": [429, 430, 431], "n_token": 867, "n_train": 843, "n_user": [729, 769, 813], "n_user_class": [729, 734, 769, 774, 813, 817], "n_val": 843, "naive_propagate_attent": 867, "name": [0, 4, 5, 20, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 39, 43, 45, 46, 47, 48, 52, 53, 55, 57, 58, 60, 61, 62, 63, 68, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 133, 138, 156, 159, 162, 165, 168, 173, 178, 179, 186, 197, 200, 205, 208, 214, 216, 219, 220, 221, 222, 223, 224, 225, 236, 237, 240, 241, 242, 246, 247, 249, 250, 289, 290, 291, 293, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 317, 318, 320, 321, 332, 337, 341, 342, 348, 387, 399, 421, 457, 478, 479, 480, 503, 542, 550, 552, 553, 554, 555, 556, 557, 558, 560, 562, 564, 565, 566, 567, 568, 569, 573, 574, 575, 576, 577, 642, 644, 645, 651, 653, 658, 659, 660, 661, 663, 666, 667, 669, 670, 671, 673, 675, 689, 690, 691, 692, 693, 696, 697, 698, 699, 704, 707, 710, 715, 716, 721, 730, 732, 736, 737, 738, 739, 742, 744, 751, 776, 777, 778, 779, 782, 784, 785, 789, 792, 819, 825, 830, 833, 835, 836, 837, 840, 841, 843, 850, 851, 863, 867, 872], "namedrockunit": 144, "namedtupl": 860, "namespac": [1, 22, 133, 144, 710, 818], "name\u76ee\u5f55\u4e2d": 737, "nan": [344, 446, 449, 663, 854, 857], "narrow_row": [727, 767, 811], "nation": 166, "nativ": [8, 293, 695, 715, 819, 822, 825], "nativelayernormbackward": 442, "natur": [558, 731, 822, 856, 860, 866, 867], "nblink": 716, "nc": [836, 837], "nc_task": [836, 837], "nc_test_id": 837, "nc_test_ids_path": 837, "nc_test_item_id": 836, "nc_test_item_ids_path": 836, "nc_test_item_label": 836, "nc_test_item_labels_path": 836, "nc_test_label": 837, "nc_test_labels_path": 837, "nc_test_user_id": 836, "nc_test_user_ids_path": 836, "nc_test_user_label": 836, "nc_test_user_labels_path": 836, "nc_train_id": 837, "nc_train_ids_path": 837, "nc_train_item_id": 836, "nc_train_item_ids_path": 836, "nc_train_item_label": 836, "nc_train_item_labels_path": 836, "nc_train_label": 837, "nc_train_labels_path": 837, "nc_train_user_id": 836, "nc_train_user_ids_path": 836, "nc_train_user_label": 836, "nc_train_user_labels_path": 836, "nc_val_id": 837, "nc_val_ids_path": 837, "nc_val_item_id": 836, "nc_val_item_ids_path": 836, "nc_val_item_label": 836, "nc_val_item_labels_path": 836, "nc_val_label": 837, "nc_val_labels_path": 837, "nc_val_user_id": 836, "nc_val_user_ids_path": 836, "nc_val_user_label": 836, "nc_val_user_labels_path": 836, "nccl": [831, 872, 873], "nci1": 165, "ndarrai": [22, 27, 54, 95, 96, 125, 131, 183, 205, 249, 287, 336, 703, 706, 747, 788, 819, 856], "ndarraypartit": 457, "ndarray\u7c7b\u578b\u4f5c\u4e3aapi\u7684\u8f93\u5165": 750, "ndarri": 791, "ndata": [4, 5, 9, 28, 34, 35, 43, 54, 56, 64, 71, 75, 77, 93, 94, 95, 96, 100, 103, 108, 113, 115, 117, 122, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160, 161, 162, 163, 165, 167, 170, 171, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 217, 219, 221, 224, 240, 246, 249, 337, 341, 342, 353, 385, 399, 428, 429, 430, 431, 432, 433, 446, 450, 460, 478, 542, 554, 555, 556, 558, 559, 567, 573, 575, 576, 577, 642, 643, 644, 645, 648, 657, 658, 663, 664, 665, 667, 669, 670, 671, 672, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 691, 693, 695, 696, 698, 699, 704, 705, 707, 710, 711, 720, 724, 730, 731, 732, 733, 734, 739, 741, 742, 743, 748, 749, 751, 754, 755, 759, 760, 762, 763, 764, 770, 771, 772, 773, 774, 779, 781, 782, 784, 789, 790, 792, 795, 797, 801, 802, 805, 806, 807, 808, 814, 815, 816, 817, 820, 821, 822, 823, 838, 839, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872], "ndata_pars": [148, 691], "ndata_schem": [95, 96, 101, 102, 117, 122, 138, 146, 147, 165, 168, 169, 172, 174, 184, 186, 195, 219, 246, 247, 337, 340, 341, 342, 346, 478, 479, 542, 551, 555, 556, 573, 642, 656, 657, 664, 670, 683, 691, 698, 699, 703, 704, 706, 732, 747, 748, 750, 788, 789, 791, 815, 839, 842, 843], "nearbi": [385, 389], "nearest": [14, 343, 434, 436, 571, 733, 816], "nearli": 867, "necessari": [4, 21, 41, 210, 214, 216, 220, 231, 567, 637, 711, 716, 717, 734, 804, 817, 832, 842, 846, 850, 867], "necessarili": [131, 336, 642, 720, 832, 840, 863], "need": [4, 5, 6, 21, 48, 57, 65, 77, 89, 118, 138, 139, 140, 145, 214, 229, 230, 240, 246, 247, 295, 297, 305, 310, 312, 317, 318, 337, 341, 342, 343, 355, 356, 390, 418, 428, 429, 430, 431, 432, 433, 434, 436, 458, 478, 479, 542, 543, 571, 576, 577, 643, 690, 691, 696, 697, 698, 699, 700, 706, 707, 711, 712, 715, 718, 719, 720, 721, 722, 726, 727, 728, 730, 731, 732, 733, 734, 783, 791, 792, 819, 825, 830, 831, 832, 835, 836, 837, 838, 841, 842, 843, 850, 851, 863, 867, 872, 873], "needham": 841, "neg": [6, 7, 13, 120, 139, 161, 163, 184, 214, 216, 219, 220, 226, 227, 241, 242, 295, 299, 303, 305, 309, 310, 317, 318, 321, 385, 389, 396, 407, 409, 410, 481, 486, 507, 513, 521, 527, 561, 562, 564, 565, 566, 567, 669, 691, 722, 733, 762, 825, 829, 830, 836, 837, 851, 855, 856, 860], "neg_dst": [733, 773, 816, 851], "neg_eid": 841, "neg_featur": 851, "neg_g": [733, 773, 816], "neg_graph": 851, "neg_pair_graph": 220, "neg_ratio": 139, "neg_sampl": [220, 226, 227, 305, 321], "neg_scor": [733, 762, 773, 805, 816, 841, 851], "neg_src": [733, 773, 816, 851], "neg_u": 841, "neg_v": [389, 841], "neg_weight": 385, "negat": [594, 825], "negative_edge_dst": [139, 851], "negative_edge_src": [139, 851], "negative_graph": [733, 762, 773, 805, 816], "negative_ratio": [299, 309, 321], "negative_s": [385, 389], "negative_sampl": [220, 226, 227, 228, 762, 805], "negative_slop": [396, 407, 409, 410], "negativesampl": [321, 719, 722, 762, 805], "neghborhood": 830, "neglig": 22, "neigh": [727, 767, 811], "neighbor": [4, 13, 14, 171, 210, 214, 215, 216, 219, 220, 234, 241, 242, 245, 299, 302, 305, 310, 315, 317, 318, 340, 343, 354, 393, 396, 397, 398, 406, 407, 414, 417, 422, 434, 435, 436, 477, 549, 560, 562, 564, 565, 566, 567, 568, 571, 576, 577, 662, 693, 714, 715, 718, 721, 722, 723, 733, 734, 759, 801, 816, 825, 829, 838, 840, 841, 842, 854, 855, 857, 863], "neighbor_match": 6, "neighbor_sampling_overview": 716, "neighborhood": [1, 214, 220, 299, 305, 310, 317, 341, 342, 428, 429, 430, 432, 560, 565, 566, 637, 696, 718, 723, 734, 760, 764, 802, 807, 838, 855, 856, 857, 858, 870], "neighborsampl": [215, 220, 305, 317, 695, 716, 718, 721, 741, 781], "neighborsamplerimpl": [305, 310], "neighbor\ub4e4\uc5d0": 779, "neighbour": [399, 421], "neighbourhood": [421, 856], "neither": [168, 576, 577], "nelement": 863, "neo4j": 841, "neq": 856, "net": [421, 446, 448, 449, 460, 854, 857], "net_typ": 235, "network": [4, 13, 72, 134, 141, 142, 143, 145, 149, 150, 154, 155, 164, 165, 166, 167, 175, 176, 183, 185, 187, 189, 190, 192, 193, 209, 210, 219, 235, 243, 244, 289, 316, 344, 359, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 405, 407, 409, 410, 411, 412, 413, 415, 416, 417, 418, 422, 424, 425, 426, 428, 429, 430, 431, 432, 433, 438, 441, 442, 445, 458, 460, 461, 476, 552, 560, 562, 651, 656, 659, 663, 667, 670, 687, 695, 696, 698, 699, 700, 702, 703, 708, 712, 714, 720, 721, 726, 730, 731, 733, 747, 759, 788, 801, 818, 822, 824, 825, 826, 827, 828, 839, 840, 842, 843, 844, 845, 846, 859, 860, 863, 868, 869, 872, 873], "networkx": [72, 125, 230, 249, 460, 642, 644, 703, 747, 788, 821, 830, 831, 833, 836, 837, 856, 857, 860, 863, 866], "networkx\ub294": 788, "network\ub97c": 800, "neural": [4, 141, 142, 143, 165, 179, 183, 189, 190, 192, 210, 219, 243, 244, 316, 344, 391, 392, 394, 395, 400, 405, 412, 413, 415, 416, 418, 420, 426, 428, 429, 430, 431, 432, 433, 438, 441, 442, 460, 552, 560, 663, 667, 670, 687, 708, 712, 714, 720, 721, 726, 731, 733, 759, 801, 818, 822, 824, 825, 826, 828, 838, 839, 840, 842, 844, 845, 846, 854, 859, 863, 868, 869, 872, 873], "neurip": [214, 299, 305, 317, 565], "neuron": 856, "neutral": [184, 860], "never": [235, 435, 549, 716], "nevertheless": 697, "new": [0, 1, 3, 4, 26, 27, 28, 34, 40, 70, 89, 114, 115, 116, 117, 118, 119, 122, 138, 140, 142, 143, 159, 210, 231, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 299, 330, 337, 340, 341, 342, 347, 353, 354, 387, 389, 397, 404, 406, 419, 422, 428, 429, 432, 476, 542, 555, 556, 557, 558, 559, 563, 565, 566, 567, 568, 576, 577, 594, 632, 636, 637, 651, 652, 653, 668, 673, 696, 697, 699, 706, 707, 714, 717, 720, 792, 801, 825, 826, 827, 831, 838, 839, 840, 841, 842, 850, 854, 855, 860, 863, 867, 868, 870], "new_cent": [428, 429], "new_d": [139, 140], "new_dataset": 138, "new_edge_feat": [404, 415], "new_edges_mask": [759, 801], "new_etyp": 653, "new_g": [26, 130, 354, 650, 651, 652, 653, 655, 656, 657, 660, 661, 662, 664, 666, 668], "new_g1": 26, "new_g2": [26, 130], "new_label": 459, "new_node_feat": [404, 407, 415], "new_node_id": [428, 429], "new_val": 825, "newer": [302, 315], "newg": 839, "newh": 70, "newli": [114, 115, 846], "newman": 167, "next": [303, 305, 310, 562, 564, 643, 687, 691, 697, 699, 721, 764, 807, 830, 833, 841, 856, 860, 867], "next_lg_x": 856, "next_x": 856, "nf": [700, 785], "nfeat": [394, 404, 407, 413, 430, 431, 432, 433, 448, 449, 456, 698, 699], "ngc": 831, "nh": 822, "nice": [22, 732, 827], "nid": [4, 10, 26, 95, 96, 130, 212, 219, 221, 222, 224, 225, 240, 246, 337, 341, 342, 428, 457, 478, 542, 555, 556, 558, 573, 637, 642, 682, 695, 696, 697, 699, 707, 713, 741, 742, 751, 757, 759, 781, 782, 783, 784, 792, 799, 801, 833, 839, 851, 867], "nid2localnid": 4, "nid2partid": 4, "nid_het2hom": 697, "nid_hom2het": 697, "nid_offset": 697, "nid_rang": 784, "nightli": 826, "nine": 165, "niter": 856, "nk": [343, 434, 436, 571], "nl": 133, "nlh": [714, 758, 800], "nll_loss": [854, 857, 860], "nlp": [184, 867], "nmap": 850, "nn": [10, 13, 14, 21, 121, 210, 213, 343, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 571, 685, 687, 695, 696, 711, 716, 718, 719, 720, 721, 723, 724, 725, 728, 730, 732, 733, 734, 741, 755, 760, 761, 762, 763, 764, 766, 767, 768, 770, 772, 773, 774, 781, 782, 797, 802, 804, 805, 806, 807, 808, 809, 812, 814, 815, 816, 817, 820, 821, 822, 823, 825, 830, 831, 833, 838, 840, 841, 842, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "nnz": [12, 30, 31, 62, 63, 579, 582, 585, 587, 589, 591, 592, 593, 594, 602, 605, 607, 609, 610, 612, 613, 614, 615, 616, 617, 619, 620, 621, 622, 624, 628, 630, 631, 632, 825], "nn\u6a21\u5757": [765, 766, 768], "nn\u6a21\u5757\u4e2d": 765, "nn\u6a21\u5757\u53ef\u5728\u4e0d\u540c\u7c7b\u578b\u7684\u56fe\u8f93\u5165\u4e2d\u91cd\u590d\u4f7f\u7528": 767, "nn\u6a21\u5757\u662f\u7528\u6237\u6784\u5efagnn\u6a21\u578b\u7684\u57fa\u672c\u6a21\u5757": 765, "nn\u6a21\u5757\u7684api\u53c2\u8003": 764, "nn\u6a21\u5757\u7684forward\u51fd\u6570": [752, 765], "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": [752, 765], "nn\u6a21\u5757\u7684\u7236\u7c7b\u53d6\u51b3\u4e8e\u540e\u7aef\u6240\u4f7f\u7528\u7684\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 765, "nn\u6a21\u5757\u76f8\u6bd4": 767, "nn\u6a21\u5757\u989d\u5916\u589e\u52a0\u4e861\u4e2a\u53c2\u6570": 767, "no_grad": [734, 774, 817, 822, 831, 833, 841, 850, 851, 854, 872, 873], "no_subtree_check": 850, "noam": 867, "noamopt": 867, "node": [0, 5, 6, 7, 9, 13, 21, 25, 26, 27, 28, 30, 31, 32, 34, 35, 37, 39, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 68, 70, 72, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 205, 208, 209, 210, 212, 214, 215, 216, 217, 219, 220, 221, 224, 226, 227, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 263, 264, 265, 266, 287, 289, 293, 295, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 310, 311, 312, 314, 315, 317, 318, 320, 321, 322, 323, 327, 329, 334, 335, 336, 337, 340, 341, 342, 343, 344, 346, 347, 353, 354, 355, 356, 359, 385, 387, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 459, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 635, 636, 637, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 656, 657, 658, 659, 660, 661, 663, 664, 665, 666, 668, 669, 670, 671, 672, 676, 677, 678, 679, 680, 681, 683, 685, 687, 691, 692, 695, 697, 698, 699, 701, 702, 705, 707, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 722, 723, 724, 726, 727, 728, 729, 731, 732, 733, 738, 749, 750, 751, 754, 756, 759, 763, 767, 769, 770, 773, 774, 778, 779, 783, 784, 789, 790, 791, 792, 794, 795, 798, 801, 802, 804, 806, 808, 813, 814, 815, 816, 817, 818, 820, 821, 822, 823, 825, 828, 829, 832, 835, 840, 841, 842, 844, 845, 847, 852, 853, 854, 855, 856, 857, 858, 860, 866, 867, 870, 872, 874, 875], "node1": 856, "node2": 856, "node2vec": [562, 838], "node_activ": 863, "node_activation_hidden_s": 863, "node_attr": [25, 249, 644], "node_attr_dtyp": 784, "node_attr_schem": [4, 47], "node_attribut": [299, 329], "node_classif": [311, 833, 836, 837], "node_color": [821, 856, 860, 863, 866], "node_count_check": 131, "node_data": [311, 691, 699, 784], "node_degre": [719, 823], "node_emb": [385, 389, 699, 784, 850], "node_embed": [733, 773, 816], "node_feat": [240, 320, 394, 399, 404, 405, 407, 413, 415, 421, 685, 687, 698, 699, 743, 784], "node_feat_0": 837, "node_feat_0_path": 837, "node_feat_1": 837, "node_feat_1_path": 837, "node_feat_dim": [711, 755, 797], "node_feat_nam": [658, 669], "node_feat_out": 405, "node_feat_s": 138, "node_featur": [297, 303, 307, 715, 719, 721, 723, 730, 733, 734, 770, 773, 774, 814, 816, 817, 830, 831, 833, 843, 851, 873], "node_feature_kei": [297, 715, 716, 718, 719, 721, 722, 723, 830, 831, 833, 873], "node_g": 863, "node_gener": 546, "node_hidden_s": 863, "node_id": [304, 307, 327, 428, 429, 691, 698, 784, 855], "node_id_field": 691, "node_ids_item": 301, "node_ids_us": 301, "node_in_feat": 394, "node_input": 851, "node_item_feat_0": 836, "node_item_feat_0_path": 836, "node_item_feat_1": 836, "node_item_feat_1_path": 836, "node_label": [25, 168, 186, 699, 734, 774, 817, 843], "node_map": [240, 699, 743, 784], "node_min": [431, 433], "node_pair": 299, "node_part": 543, "node_permute_algo": [98, 558], "node_repr": 851, "node_s": [821, 856, 860, 866], "node_split": [683, 695, 696, 741, 742, 781, 782, 850, 851], "node_subgraph": [106, 246, 717], "node_timestamp_attr_nam": [299, 317, 318], "node_to_graph": 863, "node_trainer_id": 239, "node_typ": [240, 307, 453, 697, 699, 707, 751, 784, 792, 863], "node_type_emb": 863, "node_type_id": [697, 698, 783], "node_type_offset": [299, 329, 836], "node_type_offset_": 299, "node_type_subgraph": 247, "node_type_to_id": [299, 329, 836], "node_udf": [20, 679, 680, 681, 682], "node_update_func": 863, "node_user_feat_0": 836, "node_user_feat_0_path": 836, "node_user_feat_1": 836, "node_user_feat_1_path": 836, "node_weight_list": 698, "node_year": 699, "nodebatch": [20, 54, 710, 754, 795], "nodedataload": [696, 742, 759, 760, 761, 764, 782, 801, 802, 803, 804, 807, 850], "nodedataview": [4, 644], "nodeembed": 10, "nodelist": 866, "nodepr": 140, "nodeproppr": [692, 738, 778, 850], "nodes_": 867, "nodes_0": 691, "nodes_1": 691, "nodes_d": 867, "nodes_data": 843, "nodes_gener": [92, 546], "nodes_perm": 558, "nodes_with_feature_on": 54, "nodeshuffl": 13, "nodeview": 72, "nodewis": 442, "nois": [733, 773, 816], "noisi": 162, "non": [6, 9, 21, 27, 30, 114, 116, 162, 182, 184, 197, 200, 205, 210, 214, 216, 219, 241, 242, 299, 312, 315, 329, 344, 347, 359, 399, 408, 450, 476, 558, 562, 564, 565, 566, 567, 579, 580, 583, 584, 595, 596, 597, 599, 600, 601, 602, 603, 608, 610, 615, 616, 618, 622, 624, 628, 630, 632, 663, 669, 685, 691, 699, 705, 721, 731, 733, 790, 803, 807, 820, 829, 831, 841, 843, 854, 856, 860, 868, 870, 873], "non_block": [291, 307, 312], "none": [4, 6, 10, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 113, 114, 115, 116, 117, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 219, 220, 221, 231, 232, 235, 238, 239, 240, 241, 242, 246, 247, 249, 250, 287, 290, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 307, 308, 310, 311, 312, 313, 315, 317, 318, 319, 322, 323, 326, 327, 329, 336, 337, 341, 342, 348, 349, 350, 351, 352, 355, 356, 387, 390, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 438, 442, 446, 448, 449, 451, 452, 453, 454, 457, 458, 459, 478, 479, 480, 502, 503, 542, 543, 545, 547, 548, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 572, 574, 575, 583, 584, 596, 599, 600, 601, 603, 605, 612, 614, 615, 616, 617, 628, 633, 634, 636, 637, 642, 643, 644, 647, 648, 653, 658, 660, 661, 663, 666, 667, 669, 670, 683, 685, 689, 693, 718, 719, 723, 726, 727, 728, 736, 739, 759, 766, 767, 768, 776, 779, 801, 810, 811, 812, 830, 831, 833, 837, 855, 860, 863, 867, 873], "nonlinear": [734, 821, 856], "nonneg": 183, "nontre": [230, 545], "nonzero": [126, 214, 250, 560, 576, 577, 594, 610, 621, 693, 703, 739, 779, 784, 788, 825, 855, 856], "norm": [343, 401, 402, 408, 417, 418, 419, 422, 423, 424, 426, 434, 435, 436, 455, 456, 549, 571, 716, 721, 726, 727, 760, 762, 764, 766, 767, 802, 805, 807, 810, 811, 822, 825, 855, 856, 867], "norm_": 415, "norm_bi": 359, "norm_by_dst": 855, "norm_edge_weight": 408, "norm_first": [449, 687], "norm_typ": 459, "norm_x": 867, "normal": [4, 128, 129, 142, 150, 154, 176, 245, 345, 359, 395, 397, 399, 401, 402, 405, 406, 407, 408, 414, 415, 417, 421, 422, 423, 424, 426, 427, 449, 450, 459, 477, 480, 564, 574, 575, 659, 669, 670, 687, 689, 699, 720, 726, 727, 731, 732, 811, 815, 820, 823, 825, 830, 831, 833, 836, 837, 838, 842, 843, 855, 856, 857, 866, 867], "normalis": 669, "normalization\uacfc": 776, "normalization\uc73c\ub85c": 810, "normalization\uc744": [810, 811], "normalization\uc774": 806, "normliz": 810, "north": 23, "nose": 21, "notabl": [695, 716], "notat": [821, 863], "note": [4, 6, 9, 10, 14, 21, 22, 26, 27, 28, 34, 39, 43, 46, 48, 52, 66, 68, 70, 73, 74, 78, 93, 94, 95, 96, 100, 101, 102, 103, 108, 110, 113, 114, 115, 116, 117, 118, 119, 126, 130, 131, 134, 135, 136, 149, 150, 151, 152, 153, 154, 155, 159, 168, 173, 176, 184, 185, 186, 187, 192, 193, 210, 214, 215, 216, 220, 226, 235, 246, 247, 249, 250, 287, 294, 295, 299, 303, 307, 310, 317, 318, 319, 320, 321, 322, 323, 336, 337, 340, 341, 342, 346, 353, 354, 359, 387, 389, 397, 399, 401, 402, 403, 421, 422, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 448, 449, 457, 458, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 555, 556, 557, 558, 559, 562, 563, 565, 566, 567, 568, 576, 577, 636, 637, 638, 642, 643, 644, 645, 646, 647, 648, 689, 692, 693, 694, 695, 697, 703, 707, 712, 718, 720, 724, 727, 728, 729, 732, 734, 741, 742, 743, 744, 781, 782, 783, 784, 785, 798, 804, 820, 821, 822, 823, 832, 836, 837, 838, 839, 840, 846, 850, 854, 856, 857, 860, 867], "notebook": [696, 716, 824, 831, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "notebook\u4e2d\u5f00\u53d1\u548c\u8fd0\u884c\u4ee3\u7801": 742, "notebook\u4e2d\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 742, "notebook\uc5d0\uc11c": 782, "noth": [557, 863], "notic": [637, 643, 831, 832, 841, 842], "notimplementederror": 863, "notion": [22, 856], "noun": [149, 185], "now": [183, 234, 294, 353, 642, 696, 698, 716, 720, 721, 734, 806, 823, 831, 836, 837, 846, 850, 857, 863, 873], "np": [4, 125, 126, 205, 249, 250, 294, 319, 320, 391, 392, 393, 394, 395, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 420, 422, 423, 424, 425, 430, 432, 567, 691, 696, 697, 698, 729, 730, 742, 769, 770, 782, 784, 813, 814, 833, 836, 837, 839, 841, 850, 851, 854, 856, 857, 866, 867], "npoint": 6, "nproc": [831, 872, 873], "npy": [240, 294, 311, 319, 320, 699, 743, 784, 836, 837], "nty": [387, 728, 768, 812], "ntype": [4, 26, 28, 35, 37, 54, 58, 75, 76, 79, 81, 82, 83, 85, 86, 96, 115, 118, 129, 157, 158, 191, 198, 210, 214, 216, 221, 239, 240, 299, 329, 350, 352, 387, 419, 429, 430, 431, 479, 554, 556, 560, 575, 634, 642, 643, 644, 648, 691, 693, 697, 698, 699, 707, 712, 715, 719, 720, 732, 733, 739, 751, 756, 763, 772, 773, 779, 783, 784, 792, 798, 806, 815, 816, 855], "ntype2id": 697, "ntype2id_map": 697, "ntype_attr": 644, "ntype_count": 643, "ntype_field": 642, "ntype_id": 784, "ntype_output": 387, "ntypes_list": 240, "null": [120, 820, 821, 822, 823, 825, 835], "num": [28, 115, 304, 311, 744, 784, 785, 835, 836, 837], "num_atom_typ": 195, "num_bas": [390, 397, 422, 461, 855], "num_base_edges_per_nod": [142, 143], "num_base_nod": [142, 143], "num_bond_typ": 195, "num_child": [431, 433], "num_class": [132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 165, 167, 168, 170, 171, 172, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 311, 428, 429, 430, 431, 432, 694, 699, 716, 723, 724, 740, 760, 762, 780, 802, 805, 808, 820, 821, 823, 831, 833, 835, 836, 837, 838, 840, 842, 855, 860, 872, 873], "num_correct": 842, "num_dst": 561, "num_dst_nod": [82, 83, 131, 550, 801, 830, 833], "num_edgnum_edges_per_chunk": [697, 699], "num_embed": [4, 386, 457], "num_epoch": [385, 428, 429, 695, 741, 781, 822, 846], "num_etyp": 419, "num_exampl": 842, "num_featur": [430, 432], "num_gpu": 872, "num_gpu_cached_edg": [305, 310], "num_graph": [138, 139, 140, 159, 172, 685, 687], "num_head": [396, 403, 404, 407, 409, 410, 419, 441, 446, 448, 449, 451, 452, 453, 687, 822, 857], "num_hidden": [695, 741, 781, 850, 851], "num_hidden_lay": 855, "num_hop": [4, 240, 428, 429, 430, 431, 432, 433], "num_input_nod": 759, "num_inter_edg": 142, "num_it": 217, "num_item": 304, "num_kernel": 453, "num_label": [168, 175, 177, 178, 179, 186, 850, 851], "num_lay": [215, 307, 450, 458, 695, 741, 759, 781, 801, 822, 850, 851], "num_mlp_aft": 426, "num_mlp_befor": 426, "num_motif": [142, 143, 189, 190], "num_neighbor": 560, "num_nod": [4, 5, 10, 26, 27, 28, 85, 95, 96, 101, 102, 114, 115, 117, 122, 127, 138, 146, 147, 157, 158, 165, 168, 169, 172, 173, 174, 184, 186, 191, 192, 195, 205, 219, 240, 246, 247, 287, 299, 314, 336, 337, 340, 341, 342, 346, 385, 387, 389, 404, 407, 413, 415, 418, 429, 430, 431, 448, 449, 452, 454, 455, 456, 457, 458, 460, 478, 479, 542, 550, 551, 555, 556, 557, 558, 559, 573, 642, 643, 645, 656, 657, 658, 664, 669, 670, 672, 683, 685, 691, 696, 697, 698, 699, 703, 704, 706, 707, 720, 723, 732, 733, 742, 747, 748, 750, 751, 759, 761, 763, 773, 782, 783, 784, 788, 789, 791, 792, 801, 804, 806, 815, 816, 820, 821, 822, 836, 837, 839, 841, 842, 843, 850, 851, 855, 860, 863], "num_node_typ": 299, "num_node_weight": 784, "num_nodes_dict": [118, 119, 336, 733, 759, 773, 801, 816, 843], "num_nodes_per_chunk": [697, 699], "num_ntyp": 419, "num_of_class": 176, "num_output": 461, "num_output_nod": 759, "num_part": [209, 240, 699, 784, 850, 851], "num_partit": [4, 699], "num_positive_edg": 139, "num_post_lay": 450, "num_prop_round": 863, "num_random_walk": 560, "num_rel": [157, 158, 191, 397, 422, 455, 456, 855], "num_replica": 295, "num_rollout": [431, 433], "num_sampl": [561, 700, 744, 785, 850], "num_se": [562, 564], "num_serv": [700, 744, 785, 850], "num_split": 192, "num_src": 561, "num_src_nod": [79, 86, 131, 550, 801, 830, 833], "num_task": [138, 177, 178, 179, 693, 739, 779, 822], "num_test": [836, 837, 842], "num_test_item": [831, 873], "num_thread": 294, "num_tow": [399, 421], "num_train": [700, 744, 785, 836, 837, 842, 850], "num_train_item": [831, 873], "num_trainers_per_machin": 240, "num_travers": 560, "num_trial": 863, "num_typ": 390, "num_val": [836, 837], "num_val_item": [831, 873], "num_valid": 863, "num_virtual_nod": 448, "num_vocab": 860, "num_work": [209, 210, 213, 214, 215, 216, 217, 219, 220, 292, 717, 744, 759, 760, 762, 764, 785, 801, 802, 803, 805, 807, 830, 846, 847, 860], "num_worker_thread": 235, "numa": 847, "number": [3, 4, 6, 9, 10, 14, 21, 22, 28, 36, 37, 38, 62, 63, 70, 79, 80, 81, 82, 101, 102, 113, 115, 118, 119, 120, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 226, 227, 231, 232, 235, 236, 239, 240, 241, 242, 243, 250, 287, 290, 292, 294, 295, 296, 299, 300, 304, 305, 307, 310, 314, 317, 318, 319, 330, 336, 341, 342, 343, 344, 347, 355, 356, 359, 385, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 543, 550, 551, 552, 555, 558, 560, 561, 565, 566, 567, 568, 571, 572, 576, 577, 595, 613, 615, 616, 619, 620, 635, 643, 645, 650, 660, 661, 662, 663, 666, 667, 670, 671, 674, 675, 676, 678, 679, 680, 681, 682, 683, 687, 689, 691, 693, 696, 697, 698, 699, 700, 704, 706, 707, 711, 712, 715, 717, 720, 724, 731, 734, 776, 779, 791, 792, 796, 803, 821, 823, 825, 831, 832, 833, 835, 836, 838, 839, 841, 842, 843, 846, 847, 850, 854, 855, 857, 863, 866, 867, 872, 873], "number_of_dst_nod": [637, 720, 727, 728, 759, 761, 763, 767, 768, 801, 804, 806, 811, 812], "number_of_edg": 4, "number_of_nod": 4, "number_of_src_nod": [720, 759, 763, 801, 806], "numclass": [820, 821, 823, 838, 840, 841, 854, 856, 857], "numedg": [820, 821, 823, 838, 840, 841, 854, 856, 857], "numer": [4, 10, 22, 245, 399, 415, 477, 691, 704, 839, 843, 863, 867], "numfeat": [820, 821, 823, 838, 840, 841, 854, 856, 857], "numnod": [820, 821, 823, 838, 840, 841, 854, 856, 857], "numpi": [5, 9, 21, 27, 31, 54, 95, 96, 125, 126, 128, 129, 131, 168, 183, 198, 205, 240, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 294, 311, 319, 320, 336, 385, 391, 392, 393, 394, 395, 400, 401, 402, 403, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 420, 422, 423, 424, 425, 430, 432, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 691, 695, 697, 699, 703, 706, 707, 729, 741, 747, 769, 781, 784, 788, 791, 792, 813, 819, 822, 830, 831, 833, 835, 836, 837, 839, 841, 843, 850, 851, 854, 856, 857, 866, 867], "numpy_save_align": [294, 319, 320], "numtestsampl": [820, 821, 823, 838, 840, 841, 854, 856, 857], "numtrainingsampl": [820, 821, 823, 838, 840, 841, 854, 856, 857], "numvalidationsampl": [820, 821, 823, 838, 840, 841, 854, 856, 857], "nutshel": 824, "nvidia": [210, 396, 397, 398, 724, 808, 831], "nx": [125, 249, 460, 703, 747, 788, 821, 856, 857, 860, 863, 866], "nx_agraph": 860, "nx_g": [125, 249, 644, 703, 747, 788, 821, 863], "nx_g1": 856, "nx_graph": [125, 249], "nxg": [703, 747, 788], "nxn": [434, 435], "o": [4, 9, 22, 156, 343, 434, 436, 571, 690, 694, 714, 737, 740, 758, 777, 780, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "o1": 825, "o2": 825, "o3": 825, "o4": 825, "o5": 825, "o6": 825, "o7": 825, "o8": 825, "o_j": 860, "ob": 461, "obg": 778, "obj_": 22, "object": [4, 22, 26, 42, 53, 54, 59, 108, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 210, 218, 220, 221, 229, 230, 240, 246, 247, 248, 249, 250, 287, 290, 293, 294, 296, 298, 299, 300, 301, 304, 307, 312, 314, 316, 319, 320, 329, 332, 336, 337, 341, 342, 356, 357, 359, 387, 428, 429, 457, 478, 479, 542, 545, 547, 548, 550, 551, 553, 554, 565, 566, 567, 568, 569, 574, 575, 644, 647, 648, 649, 654, 655, 685, 691, 692, 693, 694, 695, 696, 697, 699, 703, 705, 715, 727, 762, 790, 805, 819, 820, 833, 835, 836, 837, 838, 839, 842, 855, 856], "objectbas": 22, "objectref": 22, "objtyp": [240, 356], "observ": [846, 856, 866], "obtain": [14, 245, 299, 335, 341, 342, 404, 407, 446, 449, 450, 458, 477, 563, 637, 651, 693, 716, 720, 730, 732, 733, 734, 779, 821, 831, 838, 839, 857, 860, 873], "occasion": [173, 843], "occup": 839, "occupi": [178, 179], "occur": [26, 240], "occurr": 134, "odot": [415, 454, 860], "ofev": 164, "off": [431, 433, 687, 819, 820, 821, 822, 847, 856, 857, 866, 867], "offer": [818, 829, 838, 846, 860, 866], "offic": 145, "offici": [21, 167, 184, 692, 854, 855, 856, 857, 860, 863, 866, 867], "offlin": [714, 804], "offset": [299, 327, 329, 408, 563, 567, 576, 577], "often": [21, 120, 691, 693, 832, 839, 843, 846], "ogb": [4, 138, 289, 688, 717, 738, 744, 775, 785, 803, 822, 831, 833, 850, 851], "ogb_exampl": 846, "ogb_example_argo": 846, "ogbg": [138, 692, 738, 778, 822], "ogbl": [289, 692, 738, 778, 851], "ogbn": [289, 692, 721, 723, 738, 778, 784, 831, 833, 850, 873], "ok": [5, 705, 790], "okai": 299, "old": [27, 28, 114, 428, 645, 854], "old_step_count": 863, "omega": 821, "omit": [4, 27, 28, 30, 31, 32, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 117, 128, 129, 311, 480, 553, 554, 555, 556, 557, 561, 562, 564, 574, 575, 643, 647, 648, 685, 687, 734, 817, 839], "omp": 235, "omp_num_thread": [831, 873], "onc": [21, 131, 235, 287, 290, 292, 294, 296, 299, 300, 305, 310, 311, 317, 318, 319, 336, 698, 699, 732, 821, 863, 867, 872], "ondisk": 311, "ondisk_dataset": [836, 837], "ondisk_dataset_heterograph": 836, "ondisk_dataset_homograph": 837, "ondiskdataset": [289, 829, 835], "ondiskfeaturedata": 320, "ondiskfeaturedatadomain": [836, 837], "ondisktask": [836, 837], "one": [0, 4, 5, 6, 9, 14, 20, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 44, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 71, 73, 75, 77, 80, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 104, 107, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 144, 147, 150, 154, 157, 158, 160, 161, 164, 165, 166, 167, 168, 170, 171, 174, 175, 176, 180, 182, 183, 184, 188, 191, 192, 194, 195, 198, 205, 214, 216, 219, 220, 230, 234, 240, 241, 242, 246, 247, 249, 250, 287, 299, 305, 307, 310, 336, 337, 341, 342, 343, 354, 389, 390, 391, 406, 414, 416, 417, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 459, 478, 480, 502, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 542, 553, 554, 555, 556, 557, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 574, 575, 576, 577, 591, 596, 635, 637, 642, 645, 647, 648, 673, 674, 689, 690, 691, 692, 693, 695, 696, 697, 698, 699, 700, 702, 703, 704, 706, 707, 710, 711, 712, 713, 714, 715, 718, 719, 720, 721, 723, 726, 727, 728, 729, 730, 731, 732, 733, 734, 738, 751, 776, 778, 779, 791, 792, 814, 819, 821, 823, 825, 826, 830, 832, 833, 838, 839, 840, 842, 847, 850, 851, 855, 856, 857, 860, 863, 866, 867, 868, 870, 872], "onehot_label": [693, 739, 779], "ones": [0, 1, 4, 9, 27, 28, 34, 35, 43, 44, 45, 46, 51, 56, 64, 70, 71, 74, 77, 79, 82, 93, 94, 100, 103, 104, 105, 108, 113, 114, 115, 116, 122, 125, 232, 239, 249, 312, 353, 359, 387, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 408, 409, 410, 411, 412, 414, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 452, 458, 505, 559, 564, 569, 589, 612, 617, 618, 630, 632, 637, 643, 644, 645, 652, 658, 674, 678, 679, 680, 681, 682, 683, 685, 695, 697, 699, 703, 704, 707, 748, 751, 789, 792, 826, 840, 841, 851, 860, 863, 866, 867], "ones_lik": 851, "onli": [3, 4, 10, 14, 21, 22, 26, 27, 28, 30, 31, 32, 34, 35, 41, 47, 48, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 75, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 125, 128, 129, 130, 132, 133, 134, 138, 139, 140, 144, 146, 147, 150, 154, 157, 158, 159, 160, 167, 169, 170, 176, 178, 191, 192, 194, 210, 213, 214, 216, 219, 220, 234, 235, 236, 240, 241, 242, 246, 247, 249, 287, 290, 291, 294, 296, 298, 299, 300, 302, 305, 307, 310, 311, 315, 317, 318, 319, 337, 340, 341, 342, 343, 344, 387, 396, 397, 398, 399, 402, 403, 404, 406, 407, 408, 409, 410, 416, 418, 424, 434, 436, 438, 448, 450, 454, 458, 478, 479, 542, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 636, 637, 638, 642, 644, 645, 647, 648, 653, 659, 660, 661, 662, 663, 664, 666, 667, 668, 670, 672, 683, 687, 691, 692, 693, 695, 696, 697, 698, 699, 703, 704, 705, 707, 710, 713, 716, 718, 719, 720, 721, 724, 730, 731, 732, 734, 738, 778, 779, 804, 815, 819, 822, 825, 833, 838, 839, 840, 842, 843, 847, 854, 855, 856, 857, 860, 863, 866, 867, 872], "onlin": [160, 385], "onto": [26, 295, 717, 721, 831, 838, 863, 873], "ood": [197, 205], "oom": [724, 808, 826], "op": [1, 13, 294, 349, 350, 351, 352, 396, 397, 398, 454, 553, 554, 624, 633, 634, 717, 724, 759, 801, 808, 825], "open": [21, 293, 692, 699, 738, 778, 784, 831, 833, 836, 837, 851], "openmp": 8, "opennmt": 867, "oper": [0, 5, 6, 9, 11, 21, 22, 70, 116, 128, 129, 130, 210, 214, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 292, 294, 296, 297, 300, 305, 310, 317, 318, 319, 320, 330, 340, 343, 346, 359, 393, 406, 434, 436, 440, 446, 449, 454, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 553, 554, 559, 565, 566, 567, 568, 571, 576, 577, 618, 624, 636, 643, 645, 668, 670, 683, 689, 696, 697, 705, 707, 710, 711, 715, 717, 723, 724, 725, 727, 731, 732, 733, 819, 820, 821, 822, 824, 833, 840, 846, 847, 857, 858, 863, 867, 868, 870], "operand": [9, 118, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541], "oplu": 421, "oplus_": [390, 421, 422], "opportun": [829, 838], "opposit": 840, "opt": [715, 716, 721, 730, 732, 733, 734, 759, 760, 762, 764, 770, 772, 773, 774, 801, 802, 805, 807, 814, 815, 816, 817, 830, 833, 836, 837, 854, 857], "optim": [13, 14, 214, 222, 223, 224, 225, 305, 310, 315, 316, 385, 389, 397, 398, 428, 429, 430, 431, 432, 433, 457, 565, 695, 696, 699, 710, 711, 716, 719, 721, 722, 723, 724, 727, 730, 732, 733, 734, 741, 742, 759, 760, 762, 764, 770, 772, 773, 774, 781, 782, 801, 802, 805, 807, 808, 814, 815, 816, 817, 818, 820, 821, 822, 823, 826, 829, 830, 831, 833, 838, 840, 841, 842, 846, 847, 850, 851, 854, 855, 856, 857, 860, 866, 867, 872, 873], "optimizer_exp": [430, 432], "optimizer_state_dict": 846, "optimizer\ub4e4\uc744": 782, "optimizer\ub97c": 808, "optimizer\uc5d0": 782, "option": [4, 6, 10, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 51, 53, 54, 55, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 107, 113, 114, 115, 116, 117, 118, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 207, 208, 209, 210, 213, 214, 216, 217, 219, 220, 221, 226, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 245, 246, 247, 249, 250, 287, 289, 290, 292, 295, 296, 297, 298, 299, 300, 303, 304, 305, 310, 311, 317, 318, 319, 322, 323, 327, 329, 336, 337, 340, 341, 342, 343, 344, 346, 348, 357, 358, 359, 385, 387, 388, 389, 390, 391, 392, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 477, 478, 479, 480, 501, 505, 542, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 596, 599, 600, 601, 603, 605, 612, 614, 615, 616, 617, 628, 635, 636, 637, 642, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 656, 657, 658, 659, 660, 661, 663, 664, 666, 667, 669, 670, 671, 673, 683, 688, 691, 699, 700, 703, 726, 727, 730, 731, 775, 784, 819, 835, 836, 837, 850, 851], "optiona": 419, "oracl": 863, "orbit": [178, 179], "order": [0, 4, 9, 20, 51, 56, 91, 92, 95, 96, 123, 125, 130, 131, 141, 142, 143, 189, 190, 197, 205, 229, 230, 241, 249, 287, 299, 310, 317, 318, 336, 343, 354, 387, 389, 418, 435, 440, 443, 454, 458, 460, 478, 548, 549, 558, 565, 566, 567, 568, 571, 579, 583, 584, 637, 642, 655, 666, 696, 698, 699, 706, 707, 716, 721, 722, 732, 792, 825, 836, 837, 839, 850, 855, 856, 860, 863, 872], "ordereddict": 184, "ordinari": 728, "org": [9, 133, 134, 137, 146, 147, 161, 162, 163, 169, 171, 173, 174, 177, 178, 180, 182, 188, 195, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 432, 433, 448, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 723, 771, 819, 825, 826, 831, 846, 850, 867], "organ": [21, 230, 240, 698, 699, 728, 818, 834], "organiz": 132, "orient": [572, 866], "orig": 699, "orig_dst_id": [698, 784], "orig_eid": 699, "orig_eids_0": 699, "orig_id": [355, 543, 698, 699, 743, 784], "orig_nid": 699, "orig_nids_0": 699, "orig_node_emb": [699, 784, 850], "orig_src_id": [698, 784], "orig_type_edge_id": 784, "orig_type_node_id": 784, "origianl": 699, "origin": [3, 21, 26, 56, 64, 70, 71, 100, 108, 116, 122, 125, 130, 135, 136, 142, 143, 146, 151, 152, 153, 169, 183, 186, 189, 190, 192, 208, 209, 220, 221, 231, 234, 240, 241, 242, 246, 249, 289, 295, 299, 307, 311, 312, 322, 323, 326, 330, 337, 340, 341, 342, 346, 354, 355, 393, 406, 417, 428, 429, 431, 433, 446, 478, 542, 543, 558, 559, 563, 564, 565, 566, 567, 568, 574, 575, 582, 585, 587, 589, 592, 593, 594, 605, 636, 637, 639, 640, 641, 642, 644, 645, 651, 652, 662, 672, 673, 680, 681, 682, 690, 698, 699, 705, 707, 710, 720, 727, 730, 731, 732, 777, 790, 792, 801, 802, 821, 823, 825, 839, 841, 842, 843, 846, 850, 855, 856, 858, 867, 870], "original_column_node_id": [302, 305, 310, 312, 313, 830, 833], "original_edge_id": [305, 310, 312, 313, 830, 833], "original_row_node_id": [302, 305, 310, 312, 313, 323, 830, 833], "origini": 563, "ot": 289, "otc": 145, "other": [0, 1, 9, 21, 68, 120, 121, 180, 182, 186, 207, 210, 236, 240, 243, 245, 295, 303, 307, 311, 330, 357, 359, 385, 397, 426, 430, 432, 477, 560, 642, 660, 661, 666, 685, 687, 693, 694, 695, 696, 698, 699, 700, 702, 703, 706, 707, 711, 715, 716, 717, 729, 733, 734, 780, 819, 821, 823, 825, 826, 830, 832, 833, 835, 838, 839, 840, 841, 850, 854, 856, 857, 860, 863, 867, 872], "other_typ": 560, "otherwis": [4, 6, 31, 36, 37, 44, 51, 54, 56, 62, 63, 64, 71, 104, 108, 118, 165, 183, 184, 207, 210, 214, 216, 229, 230, 232, 239, 241, 242, 246, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 290, 295, 299, 305, 310, 312, 317, 318, 319, 331, 337, 341, 342, 344, 354, 417, 431, 433, 447, 449, 453, 478, 542, 543, 553, 554, 562, 564, 565, 566, 567, 572, 596, 599, 600, 601, 603, 605, 612, 614, 615, 616, 617, 628, 637, 643, 651, 663, 683, 684, 690, 696, 716, 737, 777, 821, 823, 856, 872, 873], "ouptut": 867, "our": [3, 9, 21, 438, 560, 717, 718, 724, 733, 734, 818, 823, 826, 833, 850, 854, 855, 856, 857], "ourselv": 863, "out": [1, 4, 13, 14, 22, 62, 63, 70, 87, 130, 132, 133, 135, 136, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 173, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 197, 205, 214, 216, 217, 241, 242, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 342, 391, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 442, 445, 446, 447, 448, 449, 451, 452, 453, 542, 565, 566, 567, 568, 577, 610, 621, 689, 698, 699, 711, 724, 728, 755, 776, 797, 808, 818, 819, 820, 821, 822, 825, 826, 839, 854, 855, 856, 857, 866], "out1": 9, "out2": 9, "out3": 9, "out4": 9, "out_1": 9, "out_2": 9, "out_3": 9, "out_class": [730, 770, 814], "out_degre": [4, 60, 447, 685, 687, 839], "out_dim": [711, 755, 797, 855, 857], "out_dir": 699, "out_dst": [711, 755, 797], "out_edg": 61, "out_edge_feat": 404, "out_feat": [388, 394, 395, 396, 397, 398, 400, 401, 402, 403, 406, 407, 409, 410, 411, 413, 414, 416, 417, 420, 422, 423, 424, 425, 428, 430, 432, 454, 670, 716, 720, 721, 723, 726, 732, 734, 760, 762, 763, 764, 766, 772, 774, 802, 805, 806, 807, 810, 815, 817, 840, 854, 855, 856], "out_feat_1": 670, "out_feat_2": 670, "out_feat_nam": 670, "out_feats\u662f\u8f93\u51fa\u7279\u5f81\u7684\u7ef4\u5ea6": 774, "out_featur": [716, 721, 730, 733, 759, 760, 761, 762, 764, 770, 773, 801, 802, 804, 805, 807, 814, 816, 854, 860], "out_field": 867, "out_indx": 866, "out_nod": 866, "out_node_feat": 404, "out_path": [4, 240, 850, 851], "out_proj": 822, "out_siz": [388, 390, 399, 405, 421, 718, 723, 724, 820, 821, 822, 823, 825, 831, 873], "out_src": [711, 755, 797], "out_subgraph": [337, 342, 717], "out_test_mask": [197, 205], "out_valid_mask": [197, 205], "outbound": [241, 242, 542, 562, 564, 565, 566, 567, 568, 637], "outcom": 542, "outdat": [690, 737, 777], "outer": [718, 804], "outermost": [307, 310, 317, 318], "outfil": 784, "outgo": [88, 359, 855], "outmultiedgedataview": [72, 644, 707, 751, 792], "output": [4, 5, 9, 21, 53, 54, 73, 133, 144, 174, 208, 209, 210, 214, 216, 217, 240, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 307, 327, 337, 341, 342, 343, 357, 387, 388, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 454, 458, 460, 461, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 565, 566, 567, 568, 571, 602, 618, 622, 687, 697, 699, 710, 711, 714, 716, 718, 720, 721, 726, 728, 732, 768, 784, 804, 806, 812, 825, 830, 832, 833, 840, 850, 854, 855, 856, 857, 866, 867], "output_d": 426, "output_devic": [49, 50, 76, 106, 208, 209, 214, 216, 217, 219, 246, 247, 337, 341, 342, 478, 479, 542, 565, 566, 567, 568, 872], "output_feat": 415, "output_featur": 855, "output_label": [715, 721, 759, 764, 801, 807], "output_nod": [210, 214, 215, 216, 219, 759, 761, 764, 804, 807, 851], "output_predict": [715, 721, 759, 764, 801, 807], "output_s": 327, "outsid": [689, 696, 699, 710, 795, 825], "over": [3, 7, 79, 82, 164, 166, 177, 178, 179, 209, 210, 211, 212, 213, 245, 292, 295, 303, 359, 399, 421, 437, 439, 444, 477, 553, 554, 574, 575, 576, 577, 647, 648, 673, 691, 716, 717, 718, 719, 721, 722, 732, 801, 804, 819, 821, 830, 833, 840, 842, 846, 847, 850, 854, 857, 860, 863, 866, 867], "overal": [434, 699, 732, 831, 841, 846, 857, 863, 867, 873], "overfit": 855, "overhead": [22, 70, 343, 397, 434, 436, 571, 722, 846, 847], "overlap": [292, 297, 305, 310, 722], "overlap_fetch": [297, 305, 310], "overlap_graph_fetch": [305, 310], "overrid": [210, 213, 218, 719], "overridden": [315, 428, 429, 430, 431, 432, 433], "overview": [703, 856, 873], "overwit": 156, "overwrit": [200, 201], "overwritten": 819, "own": [21, 156, 343, 417, 434, 436, 569, 571, 687, 696, 697, 698, 699, 711, 715, 716, 717, 719, 721, 734, 825, 826, 828, 829, 833, 838, 841, 844, 845, 847, 850, 851, 855, 857, 863, 867], "owner": 699, "ownership": 699, "p": [120, 147, 161, 174, 214, 216, 219, 391, 426, 427, 435, 436, 455, 456, 549, 562, 564, 567, 656, 657, 658, 698, 699, 759, 784, 801, 850, 860, 863, 867], "p1d": 685, "p3": 14, "p3d": 685, "p_": [391, 393], "p_n": [733, 773, 816], "p_p": 174, "pack": 563, "packag": [0, 2, 3, 6, 11, 21, 148, 396, 397, 398, 457, 688, 707, 724, 808, 818, 819, 820, 821, 822, 823, 825, 826, 840, 846, 847, 850, 854, 857, 860], "package\ub97c": 808, "packed_func": 22, "packed_func_ext": 22, "packedfunc": 22, "pad": [344, 447, 448, 450, 451, 452, 562, 563, 564, 572, 635, 647, 648, 663, 671, 685, 822, 831, 861, 867, 870, 873], "pad_id": 867, "pad_num_nod": 685, "pad_sequ": [447, 685], "pad_word": [184, 860], "padding_idx": 867, "page": [10, 21, 67, 89, 112, 134, 149, 155, 185, 187, 193, 715, 819, 820, 821, 822, 823, 830, 831, 833], "pagerank": [392, 666, 670, 821], "pai": 724, "pair": [6, 32, 48, 66, 178, 183, 220, 226, 227, 240, 241, 242, 295, 299, 303, 305, 310, 312, 317, 318, 321, 322, 323, 335, 343, 346, 385, 387, 389, 391, 394, 402, 403, 404, 406, 407, 409, 410, 412, 413, 414, 417, 420, 423, 434, 436, 451, 452, 453, 454, 550, 551, 561, 571, 572, 664, 685, 687, 697, 699, 702, 703, 706, 716, 719, 720, 732, 733, 788, 806, 822, 830, 841, 843, 851, 855, 856, 857, 867], "pair_graph": 220, "pairwis": [434, 435], "panda": [148, 168, 691, 703, 707, 788, 830, 833, 836, 837, 843], "pandas\uc640": 792, "papaer": 867, "paper": [137, 151, 152, 153, 154, 162, 165, 167, 171, 180, 182, 188, 214, 289, 299, 305, 311, 317, 320, 343, 393, 401, 417, 426, 427, 434, 436, 446, 476, 552, 562, 565, 571, 651, 667, 697, 699, 702, 721, 726, 783, 784, 818, 821, 823, 826, 838, 841, 842, 854, 855, 856, 857, 858, 860, 861, 863, 864, 866, 867, 868], "paper___cites___pap": 699, "papers100m": 289, "paradigm": [3, 695, 840, 860], "paral": 860, "parallel": [4, 48, 66, 122, 210, 213, 231, 241, 242, 295, 387, 445, 636, 645, 673, 695, 697, 699, 714, 741, 781, 822, 831, 846, 847, 850, 851, 857, 860, 861, 863, 864, 870, 872, 873], "param": [4, 6, 10, 32, 294, 391, 392, 393, 394, 399, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 421, 423, 424, 425, 426, 427, 454, 455, 458], "paramet": [4, 6, 10, 14, 20, 26, 27, 28, 30, 31, 34, 35, 36, 37, 47, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 75, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 596, 599, 600, 601, 602, 603, 605, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 666, 667, 669, 670, 671, 673, 683, 684, 689, 693, 695, 696, 710, 711, 712, 716, 719, 721, 723, 724, 725, 726, 727, 728, 730, 732, 733, 734, 736, 739, 741, 742, 755, 759, 760, 762, 764, 770, 772, 773, 774, 776, 779, 781, 782, 797, 801, 802, 805, 807, 808, 810, 814, 815, 816, 817, 819, 820, 821, 822, 823, 825, 830, 831, 833, 838, 840, 841, 842, 846, 850, 851, 854, 855, 856, 857, 860, 863, 867, 872, 873], "parameter": [141, 430, 432, 730, 814, 855, 856, 863], "parametr": [863, 868, 870], "parent": [210, 213, 234, 246, 478, 866], "parit": [355, 356], "paritt": 457, "parmeti": [697, 699], "parmetis\uac00": 784, "parmetis\ub290": 784, "parmetis\ub294": 784, "parmetis\uc5d0": 784, "parmetis\uc758": 784, "parquet": 699, "pars": [148, 691, 699, 703, 707, 843, 860, 861, 870], "parser": 148, "part": [4, 21, 22, 135, 151, 152, 197, 205, 240, 299, 441, 442, 451, 565, 687, 693, 696, 699, 703, 709, 712, 716, 727, 784, 822, 836, 837, 840, 867], "part0": [240, 698, 699, 743, 784], "part1": [240, 698, 699, 743, 784], "part1_end": 240, "part1_start": 240, "part2": 699, "part2_end": 240, "part2_start": 240, "part_config": [4, 231, 236, 237, 238, 695, 696, 697, 700, 741, 742, 744, 781, 782, 783, 785, 850], "part_data": [698, 699], "part_graph": 240, "part_id": [4, 236, 237, 238, 355, 698, 699, 784], "part_method": [4, 240], "part_polici": [4, 697, 783], "part_ratio": [197, 205], "partial": [4, 716, 830, 855, 857, 863, 867], "particip": [210, 213], "particular": [4, 21, 90, 107, 149, 185, 197, 221, 240, 247, 418, 429, 573, 610, 621, 697, 707, 718, 825, 841, 842], "particularli": [245, 477, 703, 707, 823], "partid": 4, "partid2eid": 4, "partid2nid": 4, "partit": [13, 209, 231, 232, 236, 237, 238, 239, 240, 355, 356, 418, 457, 543, 558, 683, 689, 695, 696, 700, 784, 856, 872], "partiti": 867, "partitioend": [355, 543], "partition_algo": 699, "partition_book": [4, 232, 239, 698, 699], "partition_graph": [4, 696, 698, 699, 743, 782, 784, 850, 851], "partitionpolici": [4, 697, 783], "partmetis\ub97c": 784, "partx": [698, 699], "pascal": [9, 710, 795], "pass": [0, 1, 4, 5, 13, 22, 73, 91, 92, 121, 122, 130, 131, 178, 179, 208, 209, 210, 213, 214, 215, 220, 240, 246, 290, 294, 296, 299, 300, 315, 317, 318, 319, 337, 341, 342, 355, 356, 391, 392, 393, 394, 397, 403, 404, 406, 407, 409, 410, 411, 414, 417, 418, 420, 421, 424, 425, 427, 428, 429, 430, 431, 432, 433, 435, 454, 460, 478, 542, 565, 569, 637, 674, 675, 676, 677, 678, 679, 680, 681, 682, 689, 691, 693, 696, 698, 699, 705, 708, 715, 718, 720, 721, 725, 728, 729, 732, 734, 736, 739, 752, 776, 779, 793, 798, 808, 813, 817, 818, 833, 835, 836, 837, 841, 847, 850, 851, 857, 858, 861, 863, 868, 870], "passwordless": [700, 785, 850], "pass\ub97c": 808, "path": [4, 21, 156, 184, 199, 200, 201, 202, 203, 206, 209, 235, 236, 237, 238, 240, 294, 311, 320, 340, 348, 354, 389, 451, 452, 563, 564, 569, 572, 651, 685, 690, 691, 694, 698, 699, 700, 737, 740, 777, 780, 784, 835, 836, 837, 846, 850, 863], "path_data": [451, 685, 687], "path_encod": [451, 687], "path_graph": [703, 747, 788], "path_len": 685, "pathencod": 687, "pathlik": 4, "patit": 697, "pattern": [22, 120, 174, 839, 857], "pb": [695, 741, 781], "pc": 389, "pcgnn_www2021": 162, "pci": [292, 305, 310], "pcie": 722, "pd": [183, 691, 836, 837, 843, 856], "pdf": [147, 161, 162, 174, 195, 432, 448, 723, 771, 867], "pe": [399, 663, 667, 822], "peek": 830, "peocess": [310, 318], "peopl": [145, 702, 732], "pep8": 21, "per": [4, 101, 102, 138, 166, 175, 186, 214, 215, 216, 219, 220, 226, 227, 240, 241, 246, 299, 305, 314, 317, 323, 334, 335, 337, 341, 342, 343, 397, 434, 436, 478, 480, 542, 565, 571, 653, 680, 681, 682, 692, 697, 699, 707, 712, 783, 798, 821, 830, 847, 857, 872], "percent": [856, 857], "percentag": [145, 863], "perfetch": 722, "perform": [0, 1, 4, 5, 9, 21, 22, 91, 92, 118, 119, 122, 130, 131, 141, 142, 143, 162, 168, 188, 189, 190, 207, 210, 217, 219, 221, 240, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 291, 294, 302, 304, 305, 310, 311, 317, 318, 319, 320, 321, 355, 356, 359, 387, 391, 393, 394, 397, 403, 406, 407, 409, 410, 411, 414, 417, 424, 428, 429, 430, 431, 432, 433, 445, 446, 447, 449, 451, 452, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 553, 561, 565, 566, 567, 568, 574, 575, 605, 647, 648, 670, 696, 697, 699, 701, 703, 705, 711, 714, 717, 718, 722, 724, 726, 727, 728, 730, 732, 733, 734, 821, 822, 825, 831, 832, 833, 840, 841, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 864, 870, 872, 873], "perftools4": 847, "perhap": 857, "period": [299, 302, 315], "perman": 21, "permiss": [21, 831], "permut": [197, 205, 441, 442, 558, 841, 856], "permute_config": [98, 558], "persist": [4, 696], "persistent_work": 292, "person": [392, 651, 666, 670, 821, 855], "personen": 132, "persourceuniform": 228, "perspect": [866, 867], "perturb": [142, 143, 189, 190], "perturb_ratio": [142, 143, 189, 190], "pgexplain": 430, "phase": [727, 860, 867], "phi": [406, 419, 502, 709, 733, 753, 759, 773, 794, 801, 816], "phi_e": 405, "phi_h": 405, "phi_x": 405, "photo": [25, 135, 136], "php": 850, "physic": [25, 151, 152, 699], "pi": [393, 453, 856], "pick": [6, 14, 214, 216, 219, 434, 435, 562, 564, 565, 567, 719, 841, 857], "pickl": 851, "pictur": 867, "piec": 840, "pin": [10, 67, 89, 112, 210, 290, 291, 299, 305, 307, 310, 312, 319, 320, 330, 564, 717, 831, 873], "pin_memori": [290, 307, 312, 319, 718, 762, 805], "pin_memory_": [294, 299, 319, 320, 717, 831, 873], "pin_prefetch": 210, "pinsag": 560, "pip": [692, 738, 778, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 846], "pipe": [722, 833], "pipelin": [3, 7, 292, 689, 697, 708, 714, 717, 719, 729, 732, 734, 829, 832, 833, 851], "pixel": [146, 169], "pkl": [209, 694, 740, 780, 851], "place": [1, 21, 70, 116, 130, 210, 292, 299, 300, 319, 320, 330, 340, 346, 559, 565, 566, 567, 568, 636, 645, 705, 831, 846, 872, 873], "placehold": [221, 294], "plai": [4, 27, 28, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 93, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 114, 115, 116, 117, 122, 130, 214, 216, 219, 246, 247, 336, 337, 341, 342, 387, 428, 429, 430, 431, 432, 433, 478, 479, 542, 555, 556, 557, 559, 644, 645, 652, 653, 658, 668, 669, 673, 683, 707, 751, 759, 792, 801, 821, 824], "plain": 834, "plan": 729, "platform": [145, 188], "player": [46, 74, 103, 658, 669], "pleas": [4, 9, 21, 22, 27, 28, 114, 115, 116, 117, 130, 148, 210, 214, 215, 216, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 295, 337, 340, 346, 354, 412, 423, 478, 479, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 556, 558, 559, 560, 567, 636, 637, 645, 646, 685, 687, 693, 698, 715, 716, 719, 721, 722, 723, 724, 732, 734, 823, 830, 831, 833, 836, 837, 840, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 873], "plenti": 839, "plot": [857, 860], "plot_tre": 860, "plt": [821, 856, 860, 863, 866], "plu": [131, 159, 287, 336, 711, 823, 826], "pm": [183, 856, 857], "pm_dglpart": [698, 784], "pm_pd": [183, 856], "pm_pd_batch": 183, "pm_pd_y": 856, "pma": 441, "pmpd": 856, "pmpd1": 856, "pn": 773, "pna": 421, "pnaconv": 399, "png": [838, 839, 840, 841, 842, 843, 846], "po": [6, 179, 821, 836, 837, 856, 860, 866, 867], "point": [9, 14, 178, 179, 299, 305, 310, 317, 318, 343, 406, 434, 435, 436, 549, 571, 639, 640, 641, 710, 801, 823, 831, 856, 867], "point_idx": 6, "pointer": [22, 131, 287, 299, 329, 336, 615, 616, 703], "poisson": [305, 317], "polariz": [178, 179], "polici": [4, 290, 300, 697], "policy_str": 4, "polit": 166, "politifact": 159, "ponder": 867, "ponderli": 162, "pool": [6, 13, 393, 423, 428, 433, 437, 438, 439, 440, 441, 443, 444, 450, 458, 725, 726, 727, 765, 766, 767, 809, 810, 811, 860, 866, 867, 868, 870, 872], "pooler": 822, "poorli": 847, "pop": [430, 432, 433, 854, 855, 857, 860, 872], "popul": [21, 208, 327, 430, 432], "popular": [167, 197, 696, 707, 734, 819, 826, 838], "port": [700, 850, 851], "port1": [850, 851], "port2": [850, 851], "portion": [4, 10, 696, 832, 838], "pos_dst": 851, "pos_enc": [822, 867], "pos_enc_s": 822, "pos_encod": 450, "pos_featur": 851, "pos_graph": 851, "pos_linear": 822, "pos_pair_graph": 220, "pos_scor": [733, 762, 773, 805, 816, 841, 851], "pos_src": 851, "pos_u": 389, "pos_v": 389, "pose": 866, "posit": [6, 13, 120, 145, 150, 157, 158, 161, 163, 184, 191, 214, 220, 241, 242, 299, 305, 309, 310, 317, 318, 321, 344, 385, 387, 389, 405, 408, 446, 448, 449, 450, 552, 562, 564, 565, 635, 663, 667, 671, 685, 691, 719, 805, 822, 825, 830, 851, 857, 860, 867], "positionwis": [441, 442], "positive_edge_dst": [139, 851], "positive_edge_src": [139, 851], "positive_graph": [762, 805], "possibl": [21, 137, 220, 226, 295, 311, 393, 550, 551, 561, 703, 710, 711, 717, 841, 842, 850, 855, 856, 863, 867], "possible_dest": 863, "possible_dests_emb": 863, "possibli": [302, 315, 732, 831], "post": [21, 24, 163, 181, 867], "post0": [830, 831, 833, 836, 837], "post_func": 867, "post_pair": 867, "postiv": 805, "potenti": [294, 311, 319, 320, 716, 842, 846, 855], "power": [10, 22, 165, 412, 430, 432, 435, 450, 549, 660, 699, 719, 759, 801, 821, 825, 838, 842, 861, 870], "ppa": [692, 738, 778], "ppi": [25, 826], "ppidata": [693, 739, 779], "ppidataset": 25, "ppr": [13, 670], "pq": 183, "pr": 21, "practic": [304, 391, 401, 403, 406, 407, 409, 410, 411, 414, 417, 424, 476, 689, 713, 732, 822, 828, 830, 841, 843, 848, 849, 856, 857, 872], "practice\ub4e4\uc744": 776, "practis": [391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 711, 847], "pramet": 426, "pre": [4, 23, 125, 173, 249, 305, 310, 317, 318, 390, 413, 417, 419, 422, 426, 427, 821, 822, 830, 831, 833, 836, 837, 863, 867], "pre_func": 867, "pre_kv": 867, "pre_pair": 867, "pre_q": 867, "precis": [9, 639, 640, 641, 708, 710, 793, 795, 841, 857], "precomput": 399, "precond": [426, 427], "pred": [4, 432, 716, 730, 733, 760, 762, 770, 773, 802, 805, 814, 816, 820, 821, 838, 840, 841, 842, 856, 860, 872], "predction": 198, "predecessor": [93, 107, 341, 343, 347, 434, 436, 476, 571, 801], "predefin": [150, 154, 176, 734], "predic": [53, 54, 856, 867], "predict": [13, 132, 133, 137, 138, 139, 140, 144, 150, 154, 157, 158, 162, 170, 171, 173, 176, 177, 178, 179, 180, 188, 191, 197, 211, 214, 216, 220, 243, 245, 305, 307, 310, 317, 318, 392, 393, 428, 429, 430, 432, 433, 440, 445, 454, 477, 692, 696, 714, 715, 716, 721, 729, 732, 734, 738, 762, 778, 779, 805, 820, 821, 822, 828, 829, 831, 833, 838, 840, 842, 844, 845, 850, 852, 853, 856, 857, 860, 863, 866], "predict_categori": [132, 133, 144, 170, 855], "prediction\u6570\u636e\u96c6": 738, "prediction\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 738, "predictor": [445, 454, 716, 719, 730, 760, 762, 802, 805, 822, 830, 851], "prefer": [168, 186, 706, 840], "prefetch": [13, 208, 209, 214, 216, 217, 220, 221, 222, 223, 224, 225, 722], "prefetch_edata": [209, 217], "prefetch_edge_feat": [208, 214, 216, 219], "prefetch_label": [208, 214, 216, 220], "prefetch_ndata": [209, 217], "prefetch_node_feat": [208, 214, 216, 219], "prefix": [637, 698, 784], "preform": [299, 305, 310, 317, 318, 723], "prepar": [295, 686, 687, 699, 729, 732, 830, 833, 843, 850, 867], "prepare_for_train": 863, "prepare_train": 863, "prepend": 68, "preprocess": [132, 133, 144, 170, 179, 184, 695, 698, 820, 821, 823, 829, 830, 831, 833, 836, 837, 841, 873], "prerequisit": 698, "presenc": [149, 185], "present": [299, 312, 429, 431, 822, 855, 857, 866], "preserv": [95, 96, 127, 232, 234, 239, 241, 242, 555, 557, 565, 566, 567, 568, 660, 661, 666, 825, 854, 860], "presort": [419, 422], "pretrain": [159, 184, 819], "pretrained_emb": [184, 860], "prev_proj": 856, "prevent": [122, 145, 418, 446, 449, 653, 715, 724, 819, 855], "previou": [186, 291, 305, 391, 719, 722, 730, 732, 733, 816, 831, 832, 841, 843, 850, 856, 867, 873], "previous": [721, 723, 730], "price": 22, "primari": [293, 687], "prime": [404, 407], "primit": [3, 397, 398, 863], "princip": [421, 793], "principl": [703, 720], "print": [4, 6, 20, 21, 22, 42, 53, 54, 70, 108, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 205, 219, 246, 295, 299, 302, 312, 313, 321, 322, 324, 325, 329, 335, 340, 386, 387, 388, 390, 392, 408, 411, 413, 417, 434, 436, 447, 451, 452, 453, 479, 480, 558, 572, 573, 642, 650, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 673, 689, 691, 692, 696, 698, 699, 706, 721, 724, 730, 733, 734, 738, 742, 750, 759, 764, 770, 773, 774, 776, 778, 782, 791, 801, 807, 808, 814, 816, 817, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 843, 850, 854, 855, 856, 857, 860, 863, 867, 872, 873], "print_everi": [132, 133, 144, 170], "printcalcul": 22, "prior": [861, 870], "prioriti": [240, 569, 819], "prob": [214, 216, 219, 241, 242, 430, 432, 562, 564, 565, 566, 863, 867], "prob_nam": [305, 310, 317, 318], "probabl": [147, 174, 214, 216, 217, 219, 241, 242, 299, 305, 310, 317, 318, 392, 430, 432, 446, 448, 449, 552, 560, 562, 564, 565, 566, 567, 656, 657, 658, 666, 670, 719, 734, 801, 805, 830, 841, 856, 857, 863, 864, 866, 867, 870], "problem": [295, 724, 838, 841, 855, 856, 861, 867, 870, 873], "probs_nam": 299, "proc_id": 295, "proce": [707, 732, 854, 856, 867], "procedur": [6, 430, 432, 693, 867], "process": [0, 2, 4, 6, 8, 22, 41, 134, 137, 138, 139, 140, 142, 143, 149, 155, 156, 171, 173, 180, 182, 185, 187, 188, 189, 190, 193, 210, 213, 232, 235, 239, 292, 295, 303, 305, 307, 310, 317, 318, 357, 358, 389, 392, 411, 424, 425, 428, 429, 430, 432, 445, 457, 459, 579, 687, 688, 689, 691, 692, 694, 695, 696, 697, 698, 699, 700, 714, 717, 722, 732, 736, 739, 776, 779, 780, 821, 822, 829, 842, 843, 847, 850, 851, 855, 856, 857, 860, 863, 867], "prod_": 9, "produc": [230, 596, 599, 600, 601, 603, 699, 727, 841, 854, 857], "product": [4, 118, 135, 136, 137, 161, 163, 289, 389, 403, 417, 454, 596, 621, 702, 717, 723, 730, 733, 744, 785, 803, 816, 822, 823, 831, 841, 850, 851, 857, 866, 867], "product\ub85c": 805, "product\ub97c": [814, 816], "profil": [159, 188], "prog": 860, "program": [9, 21, 22, 295, 695, 701, 821, 843, 873], "progress": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 431, 433, 689, 776, 864, 870], "prohibit": 159, "proj": 867, "project": [22, 155, 187, 188, 193, 393, 446, 456, 716, 840, 854, 855, 856, 863], "project_initial_featur": 411, "prompt": 819, "prop": [427, 863], "prop_edg": 92, "prop_edges_yyi": 0, "prop_nod": [91, 860], "prop_nodes_topo": 860, "prop_nodes_xxx": 0, "prop_step": [426, 427], "propag": [13, 91, 92, 159, 392, 426, 427, 459, 545, 547, 548, 718, 734, 817, 821, 832, 856, 860], "propagagtion\uc744": 804, "propagate_attent": 867, "propagation\uc744": 817, "propagation\uc758": 804, "proper": [210, 847], "properli": [138, 139, 140], "properti": [4, 38, 39, 42, 43, 44, 45, 46, 51, 52, 59, 65, 66, 68, 74, 77, 78, 103, 104, 105, 120, 138, 160, 162, 177, 178, 179, 195, 197, 205, 290, 293, 299, 300, 301, 304, 306, 307, 311, 312, 314, 316, 440, 445, 578, 579, 580, 586, 588, 595, 597, 598, 608, 675, 676, 678, 680, 681, 692, 693, 704, 732, 738, 739, 778, 779, 822, 836, 837, 839, 842, 843, 855, 863, 866], "property_nam": 197, "property_valu": 205, "proport": [214, 216, 217, 219, 305, 309, 321, 698, 719], "propos": [162, 197, 205, 245, 390, 477, 635, 671, 838, 840, 855, 857, 860, 867], "protect": [696, 843], "protein": [25, 52, 165, 175, 393, 692, 738, 778, 842], "proteom": 863, "protest": 164, "prototyp": [22, 706], "proven": 822, "provid": [0, 3, 4, 5, 7, 8, 9, 21, 34, 35, 73, 80, 89, 93, 113, 131, 138, 139, 140, 165, 168, 178, 179, 205, 208, 209, 213, 214, 216, 219, 220, 287, 293, 295, 299, 302, 305, 310, 312, 315, 317, 318, 336, 343, 348, 387, 412, 417, 423, 430, 432, 434, 436, 457, 558, 569, 571, 576, 577, 605, 642, 670, 683, 688, 689, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 706, 707, 713, 714, 716, 719, 720, 721, 724, 729, 730, 731, 732, 734, 825, 829, 830, 831, 833, 834, 838, 839, 840, 841, 842, 843, 846, 847, 850, 854, 855, 857, 860, 866, 867, 872, 873], "provis": [695, 700], "proxi": 133, "prune": [431, 433], "pseudo": [207, 387, 414], "pseudocod": 866, "psi": [453, 503, 709, 753, 794], "psi_": 503, "psutil": [830, 831, 833, 836, 837], "pt": [231, 320, 699, 836, 837, 846], "ptc": 165, "pth": [294, 863], "pub": 162, "public": [22, 150, 176, 856], "publish": 826, "pubm": [25, 176, 693, 739, 779, 826], "pull": [0, 21, 92, 856, 860], "purchas": [135, 136, 137, 289, 760, 802, 823], "pure": [178, 179, 710, 726], "purl": 133, "purpos": [4, 240, 295, 303, 307, 567, 689, 691, 693, 707, 718, 730, 857], "push": [4, 21, 826], "put": [22, 240, 355, 356, 427, 448, 558, 687, 717, 721, 722, 836, 837, 838, 866, 872], "py": [21, 22, 199, 200, 699, 700, 732, 744, 772, 784, 785, 815, 819, 822, 828, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 847, 849, 850, 851, 853, 854, 855, 856, 857, 859, 860, 862, 863, 865, 866, 867, 869, 872, 873, 875], "pyarrow": [699, 784], "pydant": 148, "pyg": [307, 826], "pygcn": 854, "pygraphviz": 860, "pylibcugraphop": [396, 397, 398], "pylint": 21, "pylintrc": 21, "pypa": 831, "pypi": 831, "pyplot": [821, 856, 860, 863, 866], "python": [0, 8, 21, 22, 34, 53, 92, 100, 203, 205, 206, 210, 396, 397, 398, 694, 695, 696, 699, 703, 706, 740, 780, 782, 788, 818, 819, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "python3": [21, 700, 744, 785, 819, 822, 830, 831, 833, 836, 837, 850, 854, 857], "pythonpath": 21, "python\uc758": 780, "pytorch": [3, 4, 5, 6, 8, 9, 10, 13, 14, 21, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 101, 102, 103, 104, 105, 107, 108, 109, 110, 114, 115, 125, 126, 131, 186, 196, 210, 213, 214, 215, 216, 219, 235, 246, 247, 248, 249, 250, 263, 264, 265, 266, 287, 291, 295, 319, 320, 336, 337, 341, 342, 343, 353, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 478, 479, 542, 549, 560, 571, 573, 636, 638, 642, 643, 644, 652, 658, 664, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 685, 687, 693, 695, 696, 706, 720, 722, 724, 725, 726, 727, 729, 732, 734, 763, 765, 768, 772, 774, 781, 782, 802, 806, 807, 808, 809, 810, 815, 817, 818, 820, 821, 822, 823, 825, 826, 827, 829, 830, 831, 833, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 858, 860, 861, 863, 864, 866, 867, 868, 870, 872, 873], "pytorchcaffe2": 847, "pytorch\u7684nn\u6a21\u5757": 765, "pytorch\u7684tensor\u7c7b": 750, "pytorch\ub294": 808, "pytorch\ub85c": 806, "pytorch\ub97c": 813, "pytorch\uc640": [779, 782], "pytorch\uc758": [791, 808, 811], "pytz": [830, 833, 836, 837], "pyyaml": 148, "py\u548claunch": 744, "py\u5e94\u8be5\u4f7f\u7528\u76f8\u540c\u7684ip\u914d\u7f6e\u6587\u4ef6": 744, "q": [147, 174, 180, 419, 440, 446, 562, 567, 822, 867], "q_": [390, 422], "q_i": 867, "q_j": 867, "q_p": 174, "q_proj": 822, "q_t": 440, "qi": [854, 856], "qingbiao": 752, "qingbiaoli": 752, "qipeng": [860, 867], "qk": [446, 822], "qkv": 867, "qm7b": [25, 177, 693, 739, 779], "qm7bdata": [693, 739, 779], "qm7bdataset": [690, 693, 737, 739, 777, 779], "qm7bdataset\u6e90\u4ee3\u7801": 739, "qm9": 178, "qm9dataset": 179, "qm9edg": 179, "qm9edgedataset": 178, "qquad": 856, "qualiti": [214, 867], "quan": [854, 867], "quantiti": [245, 477], "quantum": [177, 178, 179, 394, 420], "queri": [4, 13, 36, 37, 38, 45, 47, 48, 51, 54, 55, 56, 57, 58, 60, 61, 75, 77, 79, 80, 81, 82, 87, 88, 89, 90, 105, 107, 301, 307, 706, 822, 867], "question": [180, 856], "queue": [4, 235, 294], "queue_siz": 4, "quick": [22, 706, 825], "quickli": 840, "quickstart": 824, "quit": [22, 694, 723, 857], "quot": [691, 839], "r": [14, 60, 87, 118, 119, 163, 178, 179, 319, 322, 390, 404, 407, 409, 410, 422, 435, 437, 438, 439, 444, 455, 456, 501, 504, 549, 652, 699, 709, 712, 723, 728, 753, 768, 794, 812, 821, 822, 823, 825, 863, 866, 867], "r0": [299, 697, 783], "r1": [299, 697, 783], "r2": [178, 179, 299, 697, 783], "r3": [299, 697, 783], "r_": [393, 651, 728, 768, 812, 825], "r_1": 651, "r_2": 651, "r_g": 549, "r_i": [397, 453], "r_j": [453, 651], "r_k": 393, "r_t": [214, 299, 440, 565], "radial": 393, "radiu": [243, 435, 549], "radius_proj": 856, "rais": [21, 48, 89, 109, 116, 131, 145, 177, 178, 179, 183, 287, 336, 344, 391, 403, 406, 407, 408, 409, 410, 411, 414, 417, 424, 635, 636, 637, 663, 671, 690, 697, 726, 727, 737, 766, 767, 777, 810, 811], "ram": [14, 311, 699], "rand": [6, 9, 128, 129, 214, 216, 219, 403, 404, 406, 407, 409, 410, 414, 415, 417, 420, 423, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 451, 453, 460, 647, 648, 703, 724, 747, 788, 808, 836, 837], "rand_bipartit": 551, "rand_graph": [9, 389, 404, 407, 415, 418, 437, 438, 439, 440, 441, 442, 443, 444, 445, 454, 455, 456, 459, 550, 650, 656, 657, 658, 669, 670, 724, 808], "randint": [390, 455, 456, 716, 729, 730, 733, 769, 770, 773, 813, 814, 816, 836, 837], "randn": [5, 47, 75, 118, 119, 121, 387, 388, 390, 413, 418, 429, 430, 431, 454, 455, 456, 611, 612, 618, 621, 629, 653, 669, 670, 672, 704, 705, 729, 730, 748, 749, 759, 769, 770, 789, 790, 801, 813, 814, 825, 839, 866], "random": [0, 6, 13, 142, 143, 161, 162, 163, 172, 173, 174, 183, 189, 190, 197, 198, 205, 207, 214, 217, 240, 245, 295, 299, 303, 305, 333, 385, 389, 403, 404, 407, 409, 410, 417, 420, 437, 438, 439, 440, 441, 442, 443, 444, 445, 477, 550, 551, 552, 560, 562, 563, 564, 565, 570, 667, 670, 699, 718, 723, 729, 730, 769, 770, 813, 814, 822, 836, 837, 841, 857, 872], "random_flip": [635, 671], "random_partit": 699, "random_se": [161, 162, 163, 197, 205, 299, 565], "random_st": [142, 143, 173, 189, 190, 207, 872], "random_walk": [563, 717], "random_walk_with_restart": 564, "randomli": [6, 142, 143, 147, 171, 174, 189, 190, 207, 209, 210, 213, 226, 227, 232, 239, 241, 242, 299, 455, 456, 565, 566, 567, 635, 650, 656, 657, 658, 665, 671, 699, 729, 801, 813, 829, 841], "randomst": [183, 207], "randomwalkp": 13, "rang": [4, 128, 129, 145, 164, 165, 168, 172, 186, 210, 213, 240, 300, 312, 319, 323, 334, 335, 355, 385, 428, 429, 430, 431, 432, 447, 452, 459, 543, 561, 567, 576, 577, 643, 685, 687, 693, 695, 697, 699, 723, 724, 730, 732, 733, 734, 739, 741, 770, 772, 773, 774, 779, 781, 808, 814, 815, 816, 817, 820, 821, 822, 830, 831, 833, 838, 840, 841, 842, 846, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "range_tensor": 304, "rangepartitionbook": 4, "rangl": [178, 179], "rank": [4, 232, 239, 357, 443, 666, 831, 840, 846, 872, 873], "rapid": 855, "rare": [226, 561], "rate": [4, 10, 14, 137, 161, 163, 173, 290, 300, 392, 396, 397, 398, 402, 407, 409, 410, 415, 419, 422, 423, 426, 427, 428, 429, 441, 442, 687, 730, 855], "rather": [142, 143, 189, 190, 823, 856, 863], "ratio": [138, 139, 140, 161, 163, 173, 197, 198, 205, 244, 299, 399, 421, 650], "raw": [0, 95, 96, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 246, 337, 341, 342, 450, 478, 542, 555, 556, 573, 670, 688, 689, 691, 693, 699, 731, 775, 776, 826, 829, 836, 837, 843], "raw_dir": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 689, 690, 693, 736, 737, 739, 776, 777, 779], "raw_dir\u4e0b\u7684self": 737, "raw_dir\u6307\u5b9a\u7684\u503c": 736, "raw_path": [156, 690, 693, 737, 739, 777, 779], "rb": [422, 851, 855], "rbf": 393, "rbf_kernel_mean": 393, "rbf_kernel_sc": 393, "rbrace": [186, 709, 753, 759, 794, 801], "rcmk": 558, "rcount": [854, 857], "rdf": [132, 133, 144, 170, 855], "rdfdata": [693, 739, 779], "rdfgraphdataset": [132, 133, 144, 170], "re": [6, 95, 96, 134, 137, 138, 139, 140, 148, 149, 155, 171, 173, 180, 182, 185, 187, 188, 193, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 420, 422, 423, 424, 425, 426, 427, 556, 558, 693, 826, 831, 836, 837, 873], "reach": [714, 860, 867], "reachabl": 354, "read": [1, 3, 4, 5, 13, 21, 168, 183, 207, 290, 294, 296, 297, 298, 300, 311, 319, 387, 691, 696, 698, 699, 718, 818, 825, 826, 841, 843, 850, 851, 860, 867, 873], "read_async": [290, 294, 296, 300, 319], "read_async_num_stag": [290, 294, 296, 300, 319], "read_csv": 843, "read_into_memori": 294, "reader": [854, 857], "readi": [715, 836, 837, 850, 863], "readm": [21, 210], "readonli": [116, 636], "readout": [442, 445, 553, 554, 842], "readout_edg": [349, 351, 554, 633], "readout_nod": [350, 352, 553, 634, 732, 772, 815], "real": [159, 162, 295, 685, 699, 784, 821, 822, 832, 839, 863, 867], "realiz": 20, "realli": [137, 171, 180, 182, 188, 322, 446, 447, 449, 451, 452], "reason": [21, 164, 166, 295, 696, 718], "reassign": 698, "recal": [14, 822, 832, 855, 857, 867], "receiv": [20, 53, 100, 221, 295, 392, 401, 417, 679, 680, 681, 682, 710, 840, 863], "recent": [162, 300, 822, 867], "recip": [428, 429, 430, 431, 432, 433], "recogn": [727, 767, 811], "recognit": 174, "recommand": 27, "recommend": [5, 21, 22, 34, 73, 93, 94, 100, 113, 120, 125, 163, 173, 210, 249, 295, 400, 401, 402, 560, 643, 688, 689, 693, 694, 696, 698, 699, 702, 710, 711, 717, 730, 733, 819, 831, 835, 836, 837, 840, 841, 846, 847, 850, 854, 855, 856, 857, 860, 863, 866, 867, 872], "reconstruct": 855, "record": [56, 132, 145, 645, 821, 860, 863], "recov": [699, 842, 855], "recreat": 825, "recurr": [164, 166, 416, 440, 867, 868, 870], "recurs": [21, 355, 356, 819], "reddit": [25, 181, 724, 808, 826], "redditbinari": 165, "redditdata": [693, 739, 779], "redditdataset": [25, 724, 808], "redditmulti5k": 165, "redistribut": [818, 819], "reduc": [13, 20, 73, 91, 92, 93, 94, 100, 113, 245, 263, 264, 265, 266, 305, 310, 311, 477, 503, 505, 544, 545, 546, 547, 548, 599, 600, 601, 603, 699, 709, 710, 712, 718, 724, 794, 795, 798, 808, 811, 831, 832, 840, 847, 854, 855, 857, 860, 867, 873], "reduce_func": [73, 91, 92, 93, 94, 100, 113, 263, 264, 265, 266, 544, 545, 546, 547, 548, 710, 712, 713, 754, 756, 757, 795, 798, 799, 840, 857, 860, 863, 867], "reduce_op": 503, "reduceop": [831, 873], "reducer\ub294": 798, "reduct": [9, 73, 91, 92, 93, 94, 100, 113, 214, 305, 505, 596, 599, 600, 601, 712, 728, 798, 812, 840, 860], "redund": [295, 561], "ref": [144, 743], "refer": [4, 9, 21, 22, 24, 44, 72, 104, 135, 136, 146, 147, 148, 151, 152, 153, 159, 162, 164, 166, 169, 174, 175, 177, 178, 179, 181, 183, 195, 210, 214, 215, 216, 240, 241, 295, 299, 321, 390, 422, 437, 438, 439, 440, 441, 443, 444, 448, 502, 503, 560, 566, 637, 685, 687, 693, 696, 703, 707, 715, 716, 717, 721, 722, 723, 733, 734, 760, 764, 802, 807, 818, 820, 821, 823, 830, 831, 833, 836, 837, 839, 840, 842, 847, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "refere": 867, "reflect": [22, 26, 70, 149, 185, 307, 312, 821], "refresh": [823, 833], "regard": [412, 417, 423, 481, 482, 483, 484, 624, 731, 825], "regardless": [4, 80, 117, 130, 234, 299, 312, 348, 354, 698, 699, 863], "regim": 718, "region": [23, 821], "regist": [22, 428, 429, 430, 431, 432, 433, 726], "register_object": 22, "registr": 725, "registri": 22, "regress": [2, 138, 177, 178, 179, 195, 211, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 693, 716, 727, 729, 733, 779, 813, 842], "regression_test": [836, 837, 843, 856, 860, 863, 866], "regression\ub3c4": 817, "regular": [171, 390, 397, 404, 422, 430, 432, 461, 696, 855], "regularli": 872, "reiniti": [385, 389, 396, 397, 398, 400, 401, 402, 404, 407, 409, 410, 411, 414, 416, 417, 420, 423, 424, 425, 440, 454, 455, 456, 458, 726, 810, 857], "reject": [561, 651], "rel": [95, 96, 311, 430, 431, 433, 455, 456, 693, 699, 700, 716, 719, 721, 732, 734, 739, 760, 762, 764, 772, 774, 779, 802, 805, 807, 815, 817, 835, 836, 837], "rel_data_path": [744, 785], "rel_emb": [455, 456], "rel_graph": [728, 768, 812], "rel_nam": [430, 716, 719, 721, 730, 732, 733, 734, 760, 762, 764, 770, 772, 773, 774, 802, 805, 807, 814, 815, 816, 817], "rel_project": 456, "rel_typ": [25, 164, 166], "relabel": [4, 6, 122, 125, 240, 246, 249, 323, 337, 341, 342, 478, 542, 707, 723], "relabel_idx": 6, "relabel_nod": [49, 106, 157, 158, 191, 246, 337, 341, 342, 478, 542, 759, 801], "relat": [1, 13, 18, 21, 26, 52, 59, 113, 117, 122, 125, 126, 131, 132, 133, 144, 157, 158, 161, 162, 163, 170, 191, 203, 206, 220, 246, 249, 250, 287, 291, 299, 302, 312, 313, 315, 336, 337, 341, 342, 359, 387, 390, 397, 399, 421, 422, 453, 455, 456, 461, 478, 542, 550, 551, 651, 687, 691, 693, 699, 701, 702, 707, 712, 716, 727, 728, 792, 798, 825, 828, 829, 857, 858, 859, 867, 870], "relation_submodul": 387, "relationship": [150, 154, 176, 564, 716, 823, 841, 855, 856, 858, 870], "releas": [6, 819, 831], "relev": [685, 733], "relgraphconv": [397, 643], "relgraphconvlay": [734, 774, 817], "reli": [724, 829, 850], "reliabl": 22, "reload": [132, 133, 135, 136, 141, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 174, 175, 176, 177, 178, 179, 181, 184, 191, 192, 194, 195, 311, 689, 776], "relu": [121, 395, 400, 406, 412, 413, 415, 433, 449, 687, 695, 716, 718, 719, 720, 721, 723, 724, 726, 727, 732, 734, 741, 760, 761, 762, 763, 764, 766, 767, 772, 774, 781, 802, 804, 805, 806, 807, 810, 811, 815, 817, 820, 821, 822, 823, 825, 830, 831, 833, 838, 840, 841, 842, 850, 851, 854, 855, 856, 857, 872, 873], "relubackward0": 412, "remain": [100, 180, 181, 305, 310, 311, 556, 714, 723, 847, 857], "remaind": 867, "remap": 699, "remot": [21, 145, 177, 178, 179, 689, 690], "remov": [95, 96, 118, 119, 130, 135, 136, 151, 152, 153, 157, 168, 186, 192, 246, 289, 337, 341, 342, 542, 555, 556, 557, 563, 645, 653, 668, 720, 721, 841, 867], "remove_edg": [27, 28, 96, 114, 115, 556, 841], "remove_nod": [27, 28, 95, 114, 115, 555], "remove_self_loop": 117, "removeselfloop": 13, "renam": [127, 646], "render": 21, "reorder": [150, 154, 160, 176, 194, 419, 558, 567, 693, 779], "reorder_graph": [150, 154, 160, 176, 194, 419, 422, 693, 739, 779], "reparameter": 427, "repeat": [6, 128, 129, 142, 322, 323, 341, 342, 450, 734, 836, 837, 863, 866, 872], "repeat_interleav": [128, 129, 327, 719, 733, 762, 773, 805, 816], "repeatedli": [389, 733, 867], "replac": [21, 100, 131, 216, 219, 221, 226, 241, 242, 287, 294, 299, 305, 310, 317, 318, 319, 320, 323, 334, 335, 336, 448, 481, 483, 486, 488, 507, 509, 513, 515, 521, 523, 527, 529, 550, 551, 561, 565, 566, 567, 635, 645, 671, 687, 696, 697, 699, 719, 720, 721, 742, 762, 782, 783, 805, 822, 825, 840, 841, 854, 866, 867, 868, 870], "replic": 236, "replica": [295, 831, 873], "repo": [21, 23, 690, 699, 737, 777, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 867], "report": [14, 857], "repositori": [21, 819, 826, 855], "repres": [3, 5, 21, 22, 26, 31, 32, 51, 61, 88, 118, 119, 126, 131, 134, 135, 136, 149, 151, 152, 153, 155, 159, 162, 173, 184, 185, 187, 188, 192, 193, 220, 250, 287, 289, 299, 302, 307, 312, 315, 323, 327, 331, 335, 336, 387, 393, 394, 400, 401, 402, 414, 417, 421, 423, 430, 431, 432, 433, 561, 567, 596, 643, 651, 691, 698, 702, 706, 710, 712, 716, 721, 723, 727, 728, 733, 823, 825, 828, 832, 836, 837, 838, 840, 841, 842, 844, 845, 855, 857, 860, 866], "represensit": 14, "represent": [0, 32, 62, 63, 131, 155, 187, 193, 214, 215, 216, 220, 287, 305, 307, 317, 329, 336, 385, 387, 389, 393, 394, 398, 402, 418, 423, 442, 445, 446, 447, 449, 451, 452, 454, 458, 552, 553, 554, 565, 581, 583, 584, 591, 647, 648, 667, 712, 714, 716, 718, 723, 727, 730, 732, 733, 734, 804, 805, 814, 815, 816, 822, 825, 832, 838, 840, 841, 842, 851, 854, 855, 856, 858, 860, 861, 863, 866, 867, 868, 870], "representation\ub4e4\uacfc": 814, "representation\ub4e4\ub85c": 814, "representation\ub4e4\ub85c\ubd80\ud130": 802, "representation\ub4e4\uc744": [801, 802, 804, 805, 815], "representation\ub4e4\uc758": [805, 814, 817], "representation\ub4e4\uc774": [801, 807], "representation\uc740": [811, 816], "representation\uc744": [800, 802, 804, 807, 814, 815], "representation\uc774\uace0": 815, "representation\uc774\ub2e4": 816, "reproduc": [295, 303], "repurpos": [138, 139, 140, 730], "reput": 145, "request": [21, 290, 696, 830, 831, 833, 836, 837, 843], "requir": [4, 5, 9, 10, 21, 51, 55, 60, 61, 66, 87, 88, 90, 107, 122, 130, 148, 210, 216, 217, 220, 290, 292, 293, 294, 296, 300, 311, 319, 396, 397, 398, 399, 412, 413, 420, 423, 428, 429, 454, 458, 502, 503, 549, 558, 691, 695, 696, 697, 698, 699, 705, 706, 710, 714, 715, 721, 722, 724, 727, 811, 820, 821, 822, 823, 825, 830, 831, 832, 833, 835, 836, 837, 838, 841, 842, 850, 856, 860, 867, 873], "requires_grad": [9, 860], "requires_grad_": [9, 118, 119, 856], "research": [822, 855, 856, 857, 858, 860, 863, 867, 870], "reserv": 642, "reset": [390, 459, 726], "reset_paramet": [385, 386, 389, 390, 396, 397, 398, 400, 401, 402, 404, 407, 409, 410, 411, 414, 416, 417, 420, 423, 424, 425, 440, 446, 454, 455, 456, 458, 723, 726, 766, 810, 857], "reshap": [95, 96, 117, 294, 300, 301, 303, 304, 319, 555, 556, 557, 653, 716, 822, 825, 836, 837, 866], "reshuffl": [4, 240, 355, 543, 784], "resid": [290, 294, 296, 300, 311, 319], "residu": [396, 399, 407, 409, 410, 411, 414, 415, 418, 420, 421, 822, 867], "resolv": 21, "resourc": [2, 311, 695, 714, 722, 831, 873], "respect": [5, 95, 96, 140, 147, 184, 214, 215, 216, 219, 240, 243, 305, 312, 316, 317, 385, 389, 405, 421, 429, 431, 502, 503, 555, 556, 558, 561, 573, 602, 622, 698, 699, 707, 710, 711, 720, 822, 835, 836, 837, 841, 846, 847, 856, 863, 867], "respons": [299, 302, 305, 308, 310, 317, 318, 695, 696, 850], "rest": [6, 95, 96, 141, 240, 292, 297, 305, 310, 337, 341, 342, 542, 637, 689, 695, 727, 732, 824, 830, 841, 843], "restart": [564, 666, 670, 850], "restart_prob": [563, 564], "restaur": 163, "restrict": [44, 104, 118, 119, 126, 131, 249, 250, 287, 336, 847, 863], "resuffl": [355, 543], "result": [6, 9, 20, 21, 51, 56, 61, 70, 73, 88, 95, 96, 116, 118, 119, 122, 125, 126, 130, 197, 198, 209, 214, 226, 227, 240, 241, 242, 246, 247, 249, 250, 290, 292, 294, 296, 299, 300, 305, 312, 319, 330, 335, 337, 340, 341, 342, 343, 346, 354, 357, 387, 393, 404, 424, 425, 454, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 550, 551, 553, 554, 555, 556, 558, 559, 562, 564, 565, 566, 567, 568, 572, 573, 574, 575, 596, 599, 600, 601, 610, 611, 618, 621, 629, 636, 637, 642, 643, 644, 645, 659, 660, 661, 666, 670, 679, 683, 696, 698, 699, 701, 702, 703, 705, 710, 712, 722, 723, 728, 732, 734, 795, 798, 821, 825, 826, 831, 840, 841, 843, 847, 850, 851, 856, 857, 867], "result_dict": [762, 805], "ret": [399, 421, 854, 857, 867], "retain": [56, 707, 792, 825], "retri": 200, "retriev": [22, 125, 126, 192, 234, 249, 250, 295, 386, 552, 573, 642, 659, 660, 661, 666, 667, 670, 675, 676, 677, 678, 732, 839, 841, 843, 856], "return": [0, 4, 5, 6, 10, 20, 22, 26, 30, 31, 32, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 100, 103, 104, 105, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 202, 203, 204, 205, 207, 209, 214, 217, 218, 219, 220, 221, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 288, 290, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 327, 329, 330, 331, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 653, 662, 664, 668, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 685, 691, 692, 693, 694, 696, 697, 699, 710, 711, 712, 715, 716, 718, 719, 720, 721, 723, 724, 727, 730, 732, 733, 734, 738, 739, 740, 742, 754, 755, 756, 759, 760, 761, 762, 763, 764, 767, 770, 772, 773, 774, 778, 779, 780, 782, 783, 795, 797, 798, 801, 802, 804, 805, 806, 807, 808, 811, 814, 815, 816, 817, 820, 821, 822, 823, 825, 830, 831, 833, 838, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "return_count": [111, 643, 645, 673], "return_eid": [562, 564], "return_eigv": 344, "return_label": 230, "return_map": [240, 699, 784, 850], "return_path": [451, 452, 572, 685], "return_uv": 48, "returning_indices_and_original_edge_ids_are_opt": 299, "retweet": 159, "reuiqr": 454, "reus": [697, 716, 733, 833], "reusabl": 727, "rev": 784, "rev_plai": [429, 652], "rev_r": 652, "rev_rev_plai": 429, "reveal": [245, 477], "revers": [116, 123, 124, 130, 132, 133, 135, 136, 144, 150, 151, 152, 153, 154, 157, 158, 170, 176, 191, 192, 220, 229, 230, 289, 302, 312, 315, 322, 326, 345, 418, 545, 547, 548, 558, 649, 652, 683, 691, 693, 699, 715, 716, 739, 779, 802, 839, 856], "reverse_edg": [150, 154, 176], "reverse_eid": [220, 760, 802], "reverse_etyp": [220, 760, 802], "reverse_etypes_map": [322, 326, 716], "reverse_id": [220, 760, 802], "reverse_typ": [220, 760, 802], "revert": 683, "review": [21, 135, 136, 137, 161, 162, 163, 194], "revis": 867, "revisit": 562, "reweight": 426, "rewond": 752, "rewrit": 720, "rfeat": 456, "rg": [435, 558, 559], "rgcn": [716, 718, 721, 730, 732, 733, 734, 760, 761, 762, 770, 772, 773, 774, 802, 804, 805, 807, 814, 815, 816, 817, 855], "rgcnlayer": 855, "rgcn\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u4e0e\u5b83\u975e\u5e38\u76f8\u4f3c": 764, "rgcn\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6": 774, "rgcn\u7684\u5b9e\u73b0": 764, "rh": 502, "rhel": 819, "rho": [427, 503, 709, 753, 759, 794, 801, 856], "rhs_data": [502, 503], "rhs_field": [253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286], "rhs_target": 502, "rich": 162, "richer": 866, "rid": 718, "right": [4, 5, 118, 150, 347, 392, 395, 398, 401, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 419, 420, 423, 438, 439, 453, 458, 502, 503, 504, 635, 670, 671, 690, 696, 697, 709, 711, 715, 716, 721, 727, 732, 733, 753, 759, 760, 762, 764, 767, 773, 794, 801, 802, 805, 807, 811, 816, 825, 832, 840, 841, 855, 857, 860, 867], "rightarrow": [359, 856, 863], "riski": 145, "rng": 183, "rnn": [447, 685, 867, 868, 870], "robust": [197, 205], "roc_auc_scor": [830, 841, 851], "rocauc": 822, "rock": 860, "role": [182, 243, 428, 429, 430, 431, 432, 433], "roll": [299, 565], "rollout": [431, 433], "roman": 182, "room": 710, "root": [159, 217, 289, 408, 417, 451, 452, 572, 685, 819, 820, 821, 823, 831, 860], "rossmann": 404, "rotat": 179, "roughli": [191, 240, 393, 698, 850, 856], "round": [91, 92, 734, 863], "rout": [866, 868, 870], "routin": [22, 839], "routing_num": 866, "row": [4, 27, 31, 32, 118, 119, 131, 150, 154, 176, 287, 290, 296, 298, 299, 300, 307, 312, 319, 323, 329, 336, 343, 386, 400, 401, 402, 446, 449, 459, 549, 553, 554, 571, 581, 583, 584, 589, 596, 599, 600, 601, 602, 603, 611, 614, 615, 616, 622, 624, 628, 647, 648, 669, 670, 696, 698, 704, 720, 784, 789, 806, 823, 825, 843, 850, 851, 856], "row1": 630, "row2": 630, "row_id": 723, "row_sort": 287, "rowfeatnorm": 13, "rpc": 4, "rr": [322, 752], "rst": [387, 723, 727, 728, 767, 768, 811, 812], "rtype": [294, 391, 392, 393, 394, 399, 402, 406, 408, 411, 412, 414, 416, 417, 421, 423, 424, 425, 426, 427, 454, 455, 458, 596], "rule": [21, 220, 732, 856, 857, 863, 867], "run": [4, 10, 14, 21, 214, 231, 235, 240, 292, 299, 305, 310, 330, 426, 428, 429, 430, 431, 432, 433, 565, 567, 690, 695, 696, 699, 714, 722, 724, 728, 819, 822, 831, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "run_epoch": 867, "runnabl": 21, "runtim": [0, 4, 14, 22, 156, 684, 696, 697, 699, 830, 833, 846, 847], "runtimeerror": 183, "runtimewarn": [854, 857], "russia": [164, 855], "rv": 22, "rvert": 453, "rvert_2": [726, 766, 810], "rw": [670, 850], "r\uc5d0": 798, "s2": 440, "s3": [21, 23, 289, 290, 348, 569, 693, 703, 739, 779, 788], "s_": 825, "s_c": 856, "s_i": 867, "s_j": [866, 867], "s_norm": 866, "sab": 442, "safe": [159, 707], "sage": [402, 695, 718, 719, 723, 730, 733, 734, 741, 770, 773, 774, 781, 814, 816, 817, 830, 831, 846, 850, 851, 873], "sageconv": [387, 402, 718, 719, 720, 723, 725, 726, 727, 734, 763, 765, 766, 767, 774, 806, 809, 810, 811, 817, 830, 831, 832, 833, 840, 841, 850, 851, 873], "sageconv\u7684\u6570\u5b66\u516c\u5f0f\u5982\u4e0b": 767, "sageconv\uc5d0\uc11c": 811, "sageconv\uc758": [810, 811], "sai": [21, 689, 714, 833], "said": [211, 212, 213], "same": [0, 3, 4, 5, 8, 9, 20, 28, 34, 35, 42, 43, 46, 48, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 66, 68, 70, 74, 87, 88, 91, 92, 93, 94, 100, 103, 108, 113, 116, 118, 119, 120, 121, 122, 130, 131, 134, 156, 161, 163, 181, 188, 197, 200, 205, 208, 209, 210, 211, 212, 214, 216, 219, 230, 232, 234, 239, 240, 241, 246, 247, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 295, 296, 298, 299, 300, 301, 304, 305, 310, 319, 320, 330, 331, 336, 337, 341, 342, 343, 346, 354, 355, 358, 387, 389, 391, 392, 399, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 417, 418, 420, 421, 423, 434, 435, 437, 439, 443, 444, 446, 453, 457, 458, 460, 478, 479, 542, 543, 549, 555, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 572, 574, 575, 576, 577, 579, 583, 584, 602, 622, 632, 636, 637, 642, 643, 645, 653, 668, 685, 690, 691, 693, 695, 696, 697, 698, 699, 702, 703, 704, 705, 706, 707, 712, 716, 717, 719, 721, 723, 724, 725, 727, 728, 730, 732, 733, 734, 749, 777, 790, 792, 798, 801, 804, 819, 822, 825, 831, 832, 836, 839, 840, 841, 843, 846, 850, 851, 854, 855, 856, 857, 860, 863, 867, 872, 873], "sampl": [3, 6, 7, 9, 13, 14, 122, 130, 139, 146, 147, 160, 165, 168, 169, 172, 173, 174, 175, 181, 184, 186, 194, 195, 198, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 226, 227, 231, 234, 235, 241, 242, 245, 293, 295, 299, 302, 303, 305, 309, 310, 312, 313, 314, 315, 317, 318, 321, 322, 326, 385, 389, 390, 430, 431, 432, 433, 440, 477, 502, 576, 577, 610, 621, 637, 689, 691, 695, 697, 718, 722, 723, 727, 732, 733, 742, 759, 782, 801, 802, 803, 822, 825, 829, 830, 831, 833, 835, 841, 842, 847, 855, 856, 860, 863, 864, 867, 870, 873], "sample_bia": [430, 432], "sample_block": [695, 696, 741, 742, 759, 781, 782, 801], "sample_fronti": [759, 801], "sample_in_subgraph": 302, "sample_layer_neighbor": [299, 305], "sample_log_prob": 863, "sample_neg": 309, "sample_negative_edges_uniform": 299, "sample_neighbor": [4, 214, 216, 241, 299, 302, 310, 315, 695, 696, 697, 715, 716, 717, 718, 719, 721, 722, 741, 742, 759, 781, 782, 783, 801, 803, 830, 831, 833, 873], "sample_neighbors_bias": [576, 577], "sample_point": 6, "sample_sparse_neighbor": 723, "sample_subgraph": [302, 315, 715, 723], "sample_uniform_neg": [310, 321, 719, 722, 830], "sampled_csc": [299, 302, 305, 310, 312, 313, 830, 833], "sampled_matric": 723, "sampled_matrix": 723, "sampled_subgraph": [302, 303, 305, 307, 310, 715, 723, 830, 833], "sampledsubgraph": [302, 307, 313, 315, 715], "sampledsubgraphimpl": [299, 305, 310, 312, 830, 833], "sampler": [7, 13, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 295, 302, 303, 305, 309, 310, 315, 317, 318, 396, 397, 398, 560, 561, 565, 695, 696, 700, 714, 717, 719, 723, 741, 742, 759, 760, 761, 762, 764, 781, 782, 801, 802, 803, 804, 805, 807, 829, 842, 846], "sampler1": 717, "sampler2": 717, "sampling_stag": 315, "samplinggraph": [293, 299, 306, 311, 716], "saniti": [131, 855], "satisfi": [53, 54, 419, 422, 579, 720, 830, 831, 833, 836, 837, 856, 867], "satisif": 120, "save": [0, 2, 4, 9, 23, 156, 206, 231, 240, 294, 319, 320, 348, 569, 644, 659, 688, 689, 691, 698, 699, 703, 707, 710, 711, 712, 714, 724, 728, 730, 731, 734, 736, 740, 747, 776, 780, 784, 788, 798, 817, 820, 821, 823, 833, 836, 837, 838, 840, 841, 843, 846, 850, 863, 867], "save_dir": [156, 689, 736, 776], "save_graph": [172, 204, 348, 694, 703, 707, 740, 747, 751, 780, 788, 792, 839], "save_info": [694, 740, 780], "save_path": [138, 139, 140, 156, 689, 694, 736, 740, 776, 780], "save_tensor": 784, "sbm": [147, 174], "sbmdata": [693, 739, 779], "scalabl": [389, 450, 562, 670, 821, 826, 828, 829, 848, 849], "scalar": [6, 118, 119, 125, 214, 216, 219, 249, 304, 391, 403, 404, 407, 408, 409, 410, 417, 420, 423, 430, 432, 438, 596, 599, 600, 601, 603, 610, 613, 614, 615, 616, 619, 620, 628, 629, 702, 704, 731, 789, 805, 825, 841, 854, 856, 857, 866, 868, 870], "scalar_v": 825, "scale": [125, 134, 149, 185, 249, 347, 399, 417, 421, 453, 457, 476, 560, 699, 724, 808, 818, 822, 832, 841, 846, 847, 857, 867], "scale_const": 867, "scaled_exp": 867, "scaler": [399, 421, 612, 617, 724, 808], "scenario": [14, 22, 305, 310, 317, 318, 567, 697, 714, 732, 831], "scene": [407, 696], "schedul": [822, 829], "schema": [72, 234, 699, 707, 784], "scheme": [4, 47, 75, 95, 96, 117, 138, 146, 147, 165, 168, 169, 174, 184, 186, 195, 219, 246, 247, 337, 341, 342, 478, 479, 542, 555, 556, 557, 642, 656, 657, 664, 670, 683, 691, 698, 699, 704, 707, 748, 751, 789, 792, 839, 842, 843], "schnet": 394, "schwarzenegg": 860, "scienc": [151, 192, 289], "scientif": [150, 176, 856], "scientist\uac00": 793, "scikit": 846, "scipi": [9, 31, 118, 119, 126, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 558, 560, 703, 747, 788, 821, 825, 830, 831, 833, 836, 837, 841, 856], "scipy_fmt": [31, 576, 577], "scope": [70, 841, 854, 856], "score": [13, 385, 403, 404, 409, 410, 419, 438, 454, 455, 456, 458, 716, 730, 731, 733, 760, 762, 770, 773, 802, 805, 814, 816, 822, 825, 830, 833, 841, 851, 855, 857, 867], "score_neg": 851, "score_po": 851, "scorepredictor": [716, 760, 762, 802, 805], "scorer": [455, 456], "scrape": 191, "scratch": [142, 143, 189, 190, 385, 839, 854, 855, 857], "script": [4, 21, 695, 696, 699, 700, 819, 820, 821, 822, 838, 839, 840, 841, 842, 843, 846, 847, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "script_fold": [744, 785], "scriptobject": 299, "sddmm": [485, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 511, 512, 517, 518, 519, 520, 525, 526, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 610, 822, 825], "sdg\uc5d0\uc11c": 782, "seaborn": 866, "seal": 841, "seamlessli": [725, 829], "search": [123, 124, 229, 230, 343, 431, 433, 434, 436, 571, 733, 816, 818, 846, 857, 867], "search\uc640": 816, "second": [20, 130, 131, 210, 214, 215, 216, 219, 287, 299, 336, 344, 387, 460, 563, 564, 565, 571, 573, 618, 628, 637, 643, 699, 727, 732, 826, 832, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 856, 857, 860, 863, 866, 867, 868, 870, 872, 873], "second_label": 301, "second_se": 301, "section": [14, 21, 210, 214, 215, 216, 683, 685, 687, 688, 692, 693, 695, 696, 698, 699, 703, 709, 714, 718, 720, 727, 729, 730, 733, 734, 814, 816, 838, 841, 846, 850, 851, 856, 857, 873], "sector": 166, "see": [1, 4, 9, 20, 21, 44, 61, 66, 88, 89, 91, 104, 130, 131, 146, 169, 209, 210, 211, 212, 214, 216, 217, 220, 222, 223, 224, 225, 230, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 294, 296, 300, 319, 336, 343, 396, 397, 404, 419, 422, 428, 429, 438, 440, 445, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 576, 577, 581, 583, 584, 591, 614, 615, 616, 623, 625, 626, 627, 637, 643, 689, 691, 693, 696, 702, 703, 704, 706, 707, 710, 716, 718, 719, 720, 721, 729, 732, 734, 819, 821, 822, 830, 832, 839, 840, 841, 842, 843, 850, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "seed": [4, 142, 143, 161, 162, 163, 172, 173, 183, 189, 190, 197, 198, 205, 207, 208, 210, 213, 214, 216, 219, 242, 295, 299, 301, 302, 303, 304, 305, 307, 310, 311, 315, 317, 318, 321, 326, 441, 550, 551, 560, 564, 565, 566, 696, 697, 715, 716, 718, 719, 722, 723, 742, 782, 783, 822, 830, 833, 835, 836, 837, 850, 856, 872], "seed2_contribut": [299, 565], "seed_nod": [216, 301, 715, 759, 801], "seeds_follow": [301, 303], "seeds_label": 716, "seeds_lik": [301, 303], "seeds_pre_time_window": [299, 302, 315], "seeds_timestamp": [299, 302, 315], "seem": [393, 856, 857], "seen": [721, 734, 826, 854, 855, 856, 857, 867], "seg": [436, 505, 571], "segal": 860, "seglen": 505, "seglen_a": 504, "segment": [13, 122, 135, 136, 504, 505, 576, 577, 683], "segmentmm": 13, "segmentreducebackward": [438, 445], "select": [6, 21, 56, 142, 143, 147, 171, 174, 182, 189, 190, 209, 210, 217, 240, 241, 242, 299, 305, 310, 317, 318, 343, 399, 421, 430, 432, 434, 436, 443, 446, 447, 449, 560, 565, 566, 567, 568, 569, 571, 585, 645, 673, 714, 718, 724, 801, 819, 821, 825, 829, 832, 833, 863], "self": [26, 62, 63, 116, 117, 156, 162, 164, 165, 181, 218, 220, 226, 302, 312, 315, 343, 391, 397, 401, 403, 406, 407, 409, 410, 411, 414, 417, 418, 422, 424, 428, 429, 430, 431, 432, 433, 434, 435, 436, 445, 448, 460, 549, 557, 561, 571, 635, 653, 668, 671, 687, 689, 690, 691, 693, 694, 697, 698, 699, 702, 712, 715, 716, 718, 719, 720, 721, 723, 724, 726, 727, 728, 730, 732, 733, 734, 736, 737, 739, 740, 756, 759, 760, 761, 762, 763, 764, 766, 767, 768, 770, 772, 773, 774, 776, 777, 779, 780, 787, 798, 801, 802, 804, 805, 806, 807, 808, 810, 811, 812, 814, 815, 816, 817, 820, 821, 822, 823, 825, 830, 831, 833, 838, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "self_attn": 867, "self_loop": [165, 181, 391, 397, 403, 406, 407, 409, 410, 411, 414, 417, 422, 424, 428, 432, 433, 435, 549, 842, 872], "sell": [387, 702, 787], "seller": 702, "semant": [5, 9, 132, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 731, 860, 867], "semi": [140, 147, 391, 401, 417, 659, 699, 718, 784, 804, 838, 854, 856, 863], "send": [53, 73, 91, 94, 100, 113, 417, 419, 732, 857, 863, 867], "send_and_recv": [0, 91, 867], "send_sourc": 100, "sent": [417, 839, 840, 866, 867], "sentenc": [182, 184, 860, 861, 863, 867, 868, 870], "sentiment": [184, 860, 863], "separ": [4, 142, 143, 171, 180, 343, 394, 691, 698, 699, 722, 728, 732, 734, 819, 833, 836, 842, 847, 854], "septemb": 181, "sequenc": [54, 121, 131, 207, 287, 336, 353, 385, 389, 416, 438, 440, 655, 861, 863, 867, 870], "sequenti": [91, 92, 305, 317, 651, 719, 822, 830, 863], "seri": [707, 832, 833, 856], "serial": 451, "serv": [299, 687, 695, 720, 855], "server": [4, 21, 145, 177, 178, 179, 235, 689, 690, 695, 696, 697, 700, 851], "servic": [21, 159, 293, 695, 696], "set": [0, 1, 4, 6, 7, 10, 21, 23, 43, 44, 45, 46, 51, 68, 70, 72, 74, 77, 79, 82, 92, 101, 102, 103, 104, 105, 122, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 147, 150, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 176, 181, 189, 190, 191, 194, 198, 207, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 226, 232, 239, 240, 243, 244, 246, 247, 292, 293, 295, 299, 305, 307, 311, 315, 316, 333, 336, 337, 341, 342, 343, 347, 354, 356, 359, 391, 395, 396, 397, 398, 399, 401, 403, 406, 407, 408, 409, 410, 411, 414, 417, 421, 422, 424, 426, 427, 430, 432, 434, 435, 436, 440, 441, 442, 446, 449, 453, 459, 476, 478, 479, 542, 549, 550, 551, 561, 564, 567, 570, 571, 637, 643, 645, 647, 648, 675, 676, 678, 680, 681, 682, 684, 686, 693, 695, 696, 698, 699, 702, 706, 707, 715, 716, 717, 718, 720, 721, 722, 724, 726, 727, 728, 730, 732, 733, 734, 779, 791, 792, 819, 820, 821, 824, 825, 829, 830, 831, 833, 835, 836, 837, 838, 840, 842, 843, 846, 855, 857, 860, 863, 866, 867, 872, 873], "set_batch_num_edg": [27, 28, 102, 114, 115, 116, 117, 130, 246, 247, 337, 340, 346, 354, 478, 479, 542, 556, 559, 636, 645, 646, 732, 772, 815], "set_batch_num_nod": [27, 28, 101, 114, 115, 116, 117, 130, 246, 247, 337, 340, 346, 354, 478, 479, 542, 556, 559, 636, 645, 646, 732, 772, 815], "set_bodi": 22, "set_default_backend": 819, "set_devic": [831, 872, 873], "set_e_initi": 863, "set_edge_featur": 307, "set_edgecolor": 821, "set_epoch": [213, 872], "set_grad_en": 867, "set_n_initi": [27, 28, 93, 113, 863], "set_node_featur": 307, "set_num_thread": 847, "set_postfix": [823, 833], "set_sharing_strategi": [831, 873], "set_start_method": 846, "set_titl": 866, "set_trans_dec": 441, "set_trans_enc": 442, "set_xlabel": 866, "settran": 442, "settransformerdecod": 442, "settransformerencod": 441, "setup": [4, 717, 846, 847], "setuptool": 831, "seven": 856, "sever": [245, 293, 477, 689, 693, 704, 716, 721, 722, 727, 855, 867, 868, 870], "sg": [246, 337, 341, 342, 428, 429, 478, 542, 565, 566, 567, 568, 645, 673, 713, 715, 757, 759, 799, 801], "sg1": 839, "sg2": 839, "sgc": 424, "sgd": 696, "sh": [21, 819], "sha": [690, 737, 777], "sha1": [199, 200], "sha1_hash": [199, 200], "shall": [20, 683], "shallow": [64, 71, 219, 576, 577, 639, 640, 641], "shamelessli": 22, "shape": [4, 5, 6, 9, 12, 30, 47, 75, 95, 96, 117, 120, 126, 128, 129, 138, 143, 146, 147, 165, 168, 169, 174, 184, 186, 192, 195, 219, 243, 244, 245, 246, 247, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 299, 301, 304, 327, 329, 331, 337, 341, 342, 343, 344, 347, 357, 358, 359, 385, 386, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 476, 477, 478, 479, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 552, 553, 554, 555, 556, 557, 562, 564, 571, 572, 574, 575, 576, 577, 579, 582, 585, 587, 589, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 642, 643, 647, 648, 653, 656, 657, 660, 661, 664, 666, 670, 672, 675, 676, 678, 680, 681, 682, 683, 685, 687, 691, 693, 696, 698, 699, 704, 707, 723, 724, 731, 732, 733, 734, 739, 742, 748, 751, 773, 774, 779, 782, 784, 789, 792, 796, 805, 808, 816, 817, 819, 820, 821, 822, 823, 825, 835, 836, 837, 838, 839, 840, 841, 842, 843, 850, 851, 854, 856, 860, 867], "shape\uc740": 815, "shaplei": [431, 433], "shapley_step": [431, 433], "shard": [4, 696, 782], "share": [4, 22, 26, 69, 116, 122, 130, 131, 247, 287, 293, 299, 314, 332, 336, 340, 343, 346, 357, 358, 387, 411, 434, 436, 457, 559, 567, 571, 576, 577, 636, 642, 645, 695, 698, 699, 700, 784, 819, 847, 850, 855, 856, 857, 867], "share_edata": [99, 559], "share_ndata": [99, 559], "share_weight": 410, "shared_memori": 4, "shared_memory_nam": [299, 314, 332], "sharemem": [14, 343, 434, 436, 571], "sharp": 857, "sharper": 857, "shchur": [135, 136, 151, 152, 153], "shelf": 857, "shell": 846, "shift": [197, 205, 394], "short": [390, 707, 712, 826, 840, 860], "shortcut": 182, "shortest": [243, 451, 452, 572, 685, 687], "shortest_dist": [451, 452, 685], "shortest_path": 685, "shot": [730, 814], "should": [4, 21, 42, 53, 54, 89, 91, 116, 125, 126, 128, 129, 130, 131, 146, 169, 173, 178, 179, 184, 195, 196, 210, 214, 216, 219, 220, 222, 223, 224, 225, 231, 241, 242, 249, 250, 287, 290, 291, 294, 295, 297, 299, 302, 304, 305, 307, 310, 312, 315, 317, 318, 319, 322, 323, 327, 334, 335, 336, 340, 345, 346, 391, 392, 396, 397, 398, 399, 400, 401, 402, 412, 413, 420, 421, 424, 428, 429, 430, 431, 432, 433, 436, 447, 448, 451, 453, 457, 460, 550, 551, 558, 559, 560, 564, 565, 566, 567, 568, 569, 613, 614, 615, 616, 618, 619, 628, 636, 642, 643, 645, 655, 660, 661, 666, 670, 691, 696, 698, 699, 700, 706, 715, 717, 718, 724, 727, 825, 831, 836, 837, 838, 839, 840, 841, 843, 847, 850, 855, 856, 863, 866, 872, 873], "show": [4, 9, 14, 118, 119, 220, 240, 245, 477, 685, 687, 688, 689, 690, 691, 692, 693, 694, 695, 697, 698, 699, 700, 714, 716, 718, 719, 724, 732, 733, 734, 820, 823, 830, 831, 832, 833, 834, 836, 837, 838, 841, 842, 850, 854, 855, 856, 857, 858, 860, 863, 867, 868, 870], "shown": [120, 693, 696, 706, 723, 727, 850, 851, 866, 867], "shuffl": [4, 168, 186, 207, 209, 210, 213, 214, 215, 216, 219, 220, 232, 239, 240, 295, 303, 385, 389, 428, 432, 433, 665, 692, 693, 695, 696, 699, 715, 716, 717, 718, 719, 721, 722, 732, 738, 739, 741, 742, 759, 760, 761, 762, 764, 772, 778, 779, 781, 782, 801, 802, 803, 804, 805, 807, 815, 822, 830, 831, 833, 836, 837, 846, 850, 851, 860, 872, 873], "shut": 292, "side": [22, 637, 832], "siev": 290, "sigma": [415, 417, 419, 422, 423, 453, 727, 733, 767, 773, 811, 816, 820, 821, 823, 854, 855, 857, 860, 867], "sigma_": 415, "sigma_k": 414, "sigmoid": [415, 825, 860, 863], "sign": [145, 635, 670, 671, 821], "sign_diffus": 821, "signal": [21, 174, 359, 821, 863], "signatur": [21, 53, 54, 857], "signdiffus": 13, "signifi": [299, 305, 310, 317, 318], "signific": [689, 717, 722, 829, 847, 857, 860], "significantli": [312, 724, 832], "silent": [391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 428, 429, 430, 431, 432, 433, 727], "sim": [733, 773, 816, 841], "similar": [4, 9, 26, 34, 53, 54, 100, 128, 129, 130, 161, 214, 221, 305, 317, 343, 385, 403, 434, 436, 454, 455, 456, 571, 637, 683, 692, 693, 695, 696, 697, 707, 716, 719, 720, 721, 723, 724, 733, 734, 751, 792, 819, 825, 826, 830, 831, 835, 838, 842, 850, 851, 855, 856, 857, 863, 866, 867, 872, 873], "similarli": [130, 221, 236, 240, 696, 698, 730, 823, 863, 868, 870], "simpl": [21, 22, 48, 118, 119, 347, 411, 476, 636, 645, 646, 673, 688, 694, 697, 724, 821, 831, 838, 842, 854, 856, 857, 858, 863, 866, 870], "simple_reduc": 100, "simplelosscomput": 867, "simplest": [721, 825], "simpli": [21, 22, 716, 719, 721, 722, 730, 732, 734, 838, 840, 841, 842, 854, 856, 857, 861, 863, 870], "simplic": [687, 699, 721, 836, 843, 857], "simplifi": [424, 720, 730, 821, 825, 854, 863, 867, 872], "simplifiedgat": 825, "simul": 856, "simultan": [292, 596, 599, 600, 601, 603, 695, 821, 860], "sin": 825, "sinc": [21, 27, 28, 56, 114, 115, 122, 145, 173, 182, 290, 300, 343, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 428, 429, 430, 431, 432, 433, 434, 436, 451, 452, 571, 576, 577, 637, 685, 689, 693, 707, 710, 717, 730, 732, 733, 820, 825, 830, 832, 841, 842, 843, 850, 854, 856, 857, 860, 863], "singl": [0, 4, 6, 22, 27, 28, 34, 35, 41, 43, 44, 46, 48, 51, 53, 55, 56, 57, 58, 60, 61, 73, 74, 77, 87, 88, 93, 94, 95, 96, 100, 101, 102, 103, 104, 128, 129, 131, 148, 164, 210, 211, 212, 214, 215, 216, 219, 220, 242, 299, 301, 304, 307, 311, 341, 342, 343, 345, 353, 357, 391, 414, 437, 438, 439, 440, 441, 442, 443, 444, 445, 457, 458, 480, 560, 564, 565, 566, 568, 640, 647, 648, 693, 695, 696, 699, 707, 710, 718, 720, 728, 729, 730, 732, 792, 804, 806, 826, 828, 832, 833, 838, 842, 843, 850, 851, 856, 857, 860, 867, 874, 875], "singular": [635, 671], "site": [184, 830, 833, 836, 837, 854, 857], "six": [830, 833, 836, 837], "size": [4, 5, 9, 20, 21, 22, 31, 62, 63, 120, 122, 128, 129, 135, 136, 138, 139, 146, 147, 151, 152, 153, 159, 160, 161, 162, 163, 168, 169, 174, 177, 181, 184, 192, 194, 196, 205, 210, 235, 290, 294, 295, 296, 298, 300, 303, 319, 327, 330, 385, 386, 388, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 553, 554, 611, 618, 629, 647, 648, 653, 672, 685, 697, 699, 707, 711, 714, 715, 722, 723, 732, 744, 755, 785, 792, 797, 815, 819, 825, 830, 831, 833, 836, 837, 840, 846, 847, 854, 855, 856, 857, 860, 861, 863, 867, 870, 872, 873], "skeleton": 863, "skip": [416, 693, 728, 779, 836, 837, 856, 857, 860], "sklearn": [385, 830, 833, 841, 850, 851], "skm": 851, "sleeplessai": 752, "slice": [4, 26, 210, 704, 720, 854, 857], "slightli": 214, "sln": 819, "slope": [396, 407, 409, 410], "slow": [22, 305, 718, 841, 856], "slower": [343, 434, 436, 571, 867], "sm_53": [9, 710, 795], "small": [4, 10, 14, 70, 123, 124, 126, 167, 226, 229, 230, 245, 250, 287, 343, 408, 415, 428, 429, 434, 436, 477, 561, 571, 649, 683, 695, 696, 699, 724, 729, 732, 832, 838, 841, 842, 843, 850, 856], "smaller": [4, 130, 299, 390, 393, 614, 615, 616, 628, 660, 661, 666, 819, 850, 855, 856], "smallest": [311, 344, 399, 434, 450, 568, 647, 648, 663], "smax": [596, 825], "smean": [596, 825], "smin": [596, 825], "smooth": [411, 427, 867], "sn": 866, "snap": [145, 175, 181], "snippet": [703, 706, 707, 731, 856], "so": [4, 5, 8, 9, 21, 22, 125, 130, 140, 186, 197, 226, 229, 230, 232, 239, 245, 249, 290, 292, 296, 298, 299, 300, 319, 335, 355, 397, 403, 477, 543, 558, 561, 565, 567, 576, 577, 639, 640, 641, 643, 691, 693, 694, 696, 697, 699, 715, 717, 721, 730, 734, 823, 833, 838, 839, 841, 842, 847, 850, 854, 855, 856, 857, 860, 863, 866, 872], "soc": 145, "social": [134, 167, 385, 702, 841], "socio": 166, "socket": 235, "soduku": 438, "softmax": [359, 391, 407, 419, 438, 440, 446, 449, 574, 575, 822, 840, 855, 857, 863, 866, 867], "softmax_edg": 575, "softmax_i": [403, 407, 409, 410], "softmax_nod": 574, "softwar": [818, 847], "solubl": 195, "solut": [22, 688, 717, 793, 850, 856], "solv": [295, 438, 818, 855, 856, 861, 870, 873], "some": [0, 4, 5, 9, 14, 21, 27, 28, 41, 43, 46, 48, 74, 93, 103, 113, 114, 115, 128, 129, 131, 134, 150, 168, 186, 236, 240, 247, 295, 336, 355, 356, 387, 391, 397, 403, 406, 407, 409, 410, 411, 414, 417, 424, 430, 432, 555, 558, 643, 687, 690, 691, 693, 697, 698, 699, 701, 703, 706, 707, 710, 711, 714, 715, 726, 733, 779, 819, 826, 832, 839, 841, 850, 857, 863, 866, 872], "some_complex_data": 691, "someth": 729, "sometim": [22, 711, 716, 729, 730, 732, 832, 840], "somewhat": 716, "song": 752, "soon": 699, "sophist": 732, "sort": [39, 51, 52, 78, 123, 168, 186, 197, 205, 241, 299, 390, 419, 422, 443, 558, 567, 576, 577, 579, 647, 648, 860, 867], "sort_csc_by_tag": 567, "sort_csr_by_tag": 567, "sortbi": [647, 648], "sorted_by_typ": 390, "sorted_feat": [647, 648], "sorted_idx": [647, 648], "sortpool": [647, 648], "sourc": [1, 4, 5, 6, 9, 10, 12, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 70, 71, 72, 73, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 480, 485, 486, 487, 488, 489, 490, 491, 493, 495, 497, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 535, 537, 539, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 604, 605, 606, 607, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 677, 678, 679, 682, 683, 684, 691, 693, 698, 699, 701, 706, 707, 710, 719, 722, 726, 727, 779, 792, 801, 831, 832, 836, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "source_typ": [707, 751, 792], "sourcetensor": 856, "sp": [703, 747, 788, 841, 856], "sp_": 825, "sp_add_v": 825, "sp_broadcast_v": [623, 625, 626, 627], "sp_mat": [126, 250], "space": [9, 334, 335, 453, 707, 855, 863, 867], "spaci": 159, "spam": 163, "span": 4, "spars": [4, 9, 10, 13, 31, 32, 41, 56, 62, 63, 89, 126, 131, 249, 250, 287, 336, 385, 389, 396, 428, 429, 457, 503, 560, 687, 696, 703, 714, 717, 747, 782, 788, 818, 821, 823, 841, 854, 858, 867, 870], "sparse2th": 856, "sparse_coo": [31, 62, 63], "sparse_coo_tensor": 856, "sparse_emb": 457, "sparse_matrix": 618, "sparse_optim": [696, 742, 782], "sparseadagrad": [4, 10, 457, 696, 742, 782], "sparseadam": [4, 10, 385, 389, 457], "sparseattn": 822, "sparsefloat": 856, "sparsematrix": [12, 30, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 723, 820, 825], "sparsemha": 822, "sparseneighborsampl": 723, "sparser": 867, "sparsetensor": [31, 62, 63, 856], "sparsif": [660, 661, 666], "sparsiti": [660, 661, 666, 822, 825], "spatial": [178, 179, 452, 453], "spatial_encod": [452, 453, 687], "spatialencod": 687, "spawn": [210, 295, 717, 872], "spd": 685, "speak": 856, "special": [184, 399, 702, 707, 716, 721, 724, 825, 829, 856, 860], "specif": [14, 21, 42, 59, 108, 125, 126, 131, 165, 235, 242, 246, 247, 249, 250, 287, 299, 307, 336, 337, 340, 341, 342, 386, 389, 429, 456, 478, 479, 542, 550, 551, 561, 565, 566, 567, 568, 637, 660, 661, 666, 670, 687, 693, 695, 704, 707, 718, 719, 722, 792, 802, 818, 834, 836, 837, 847, 856, 872], "specifi": [4, 5, 6, 27, 28, 31, 34, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 68, 72, 75, 77, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 107, 108, 113, 117, 122, 125, 131, 140, 146, 148, 156, 159, 161, 162, 163, 169, 173, 196, 200, 214, 216, 217, 219, 229, 230, 231, 240, 246, 249, 287, 290, 294, 296, 298, 299, 300, 305, 307, 311, 312, 314, 319, 320, 336, 341, 342, 343, 387, 390, 399, 403, 404, 407, 408, 409, 410, 420, 421, 423, 435, 453, 478, 543, 549, 555, 556, 558, 564, 569, 571, 576, 577, 612, 614, 615, 616, 628, 637, 642, 643, 645, 689, 691, 693, 696, 697, 699, 700, 706, 707, 710, 712, 716, 721, 727, 730, 733, 751, 776, 792, 798, 811, 819, 823, 825, 830, 831, 835, 836, 837, 839, 850, 860, 873], "specifici": 846, "spectral": [395, 400], "speed": [10, 21, 22, 305, 312, 317, 643, 706, 711, 717, 732, 818, 826, 841, 850, 860, 863, 866], "speedup": [699, 846, 857], "sphinx": [21, 838, 839, 840, 841, 842, 843, 844, 846, 847, 848, 850, 851, 852, 854, 855, 856, 857, 860, 863, 866, 867, 870, 872, 873, 874], "sphinx_gallery_thumbnail_path": [838, 839, 840, 841, 842, 843], "sphinx_rtd_them": 21, "spilt": 192, "spinlock": 847, "splash": 860, "split": [13, 132, 133, 134, 137, 138, 139, 140, 144, 146, 149, 150, 154, 155, 157, 158, 160, 161, 162, 163, 168, 169, 170, 171, 173, 176, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 197, 198, 205, 207, 209, 210, 213, 232, 239, 240, 295, 421, 543, 563, 642, 683, 689, 692, 693, 695, 697, 711, 712, 726, 727, 730, 734, 739, 776, 778, 779, 814, 833, 841, 850, 856, 872], "split_dataset": 872, "split_edg": [692, 738, 778], "split_idx": [692, 738, 778], "split_mask": 205, "split_ratio": [138, 139, 140], "splitted_idx": 850, "split\ub97c": 782, "spmat": [703, 747, 788], "spmatrix": [12, 31, 126, 250, 579, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 609, 610, 611, 613, 614, 618, 619, 620, 621, 622, 624, 629, 630, 631, 632, 820, 821, 822, 823, 825], "spmm": [481, 482, 483, 484, 486, 487, 488, 489, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 618], "spmv": 857, "spp": 394, "spring_layout": [821, 856], "sprod": 596, "spspmm": 618, "sq": 866, "sqrt": [4, 10, 343, 408, 417, 419, 434, 436, 446, 453, 571, 822, 857, 866, 867], "squar": [4, 10, 250, 408, 417, 823], "squash": 866, "squeez": [53, 54, 691, 693, 719, 739, 779, 830, 841, 855, 856], "squirrel": 185, "squre": 426, "src": [5, 22, 34, 62, 63, 68, 98, 100, 110, 220, 243, 252, 359, 394, 403, 404, 407, 409, 410, 414, 417, 423, 454, 455, 456, 558, 561, 614, 637, 638, 642, 677, 693, 703, 710, 711, 716, 719, 723, 724, 727, 728, 730, 733, 739, 747, 754, 755, 759, 760, 762, 767, 768, 770, 773, 779, 788, 795, 797, 801, 802, 805, 808, 811, 812, 814, 816, 822, 840, 841, 843, 855, 856, 857, 860, 863, 867], "src_dot_dst": 867, "src_emb": [863, 867], "src_embed_expand": 863, "src_field": 867, "src_id": [59, 126, 250, 287, 691, 698, 784], "src_id_field": 691, "src_input": [728, 768, 812], "src_label": 856, "src_list": 863, "src_mul_egd": 867, "src_node": [637, 801], "src_node_id": 698, "src_po": 867, "src_seq": 867, "src_timestamp": 323, "src_type": [131, 336, 429, 431, 727, 767, 811], "src_x": 716, "srcdata": [4, 9, 68, 104, 208, 221, 225, 577, 637, 695, 696, 697, 711, 720, 723, 727, 741, 742, 755, 759, 760, 762, 763, 764, 767, 781, 782, 783, 797, 801, 802, 805, 806, 807, 811, 833, 851], "srcdst": 51, "srcnode": [68, 103, 208, 225, 637, 720, 759, 763, 801, 806], "srctype": [26, 45, 68, 226, 227, 712, 715, 719, 756, 798], "srl": 855, "ssh": [700, 785], "ssl": 200, "ssp": 394, "sst": 860, "sstbatch": 860, "sstdata": [693, 739, 779], "sstdataset": 860, "stabil": [4, 10, 245, 415, 477, 857, 863, 867], "stabl": 399, "stack": [20, 73, 343, 387, 411, 447, 460, 591, 677, 685, 687, 692, 712, 722, 734, 738, 756, 778, 798, 820, 821, 822, 823, 838, 840, 855, 856, 857], "staff": [155, 187, 193], "stage": [7, 290, 294, 296, 300, 305, 307, 310, 315, 319, 711, 719, 722, 821, 829, 833, 836, 837, 851, 867], "stai": [583, 584, 724], "stand": [407, 563, 685, 825, 872], "standalon": [4, 826], "standard": [5, 7, 21, 138, 140, 399, 421, 453, 685, 687, 688, 689, 691, 693, 855, 860], "stanford": [145, 175, 181, 184, 838, 860], "star": [161, 163, 172, 839], "start": [6, 32, 114, 115, 125, 131, 164, 229, 230, 240, 249, 287, 307, 312, 329, 336, 341, 342, 389, 552, 560, 562, 564, 576, 577, 691, 696, 697, 698, 701, 706, 707, 714, 718, 724, 732, 819, 820, 821, 822, 823, 827, 830, 831, 833, 836, 837, 839, 850, 851, 855, 856, 860, 863, 866, 872], "start_epoch": [210, 213], "start_epoch_tim": 719, "start_idx": 6, "start_tim": 164, "state": [4, 10, 21, 142, 143, 166, 189, 190, 698, 714, 800, 826, 860, 863, 864, 866, 867, 870], "state_dict": [4, 846, 863], "statement": [720, 730, 825], "static": [22, 857, 866], "static_cast": 22, "staticmethod": [22, 866], "statist": [132, 133, 134, 135, 136, 137, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 163, 164, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 698, 855, 856, 857], "statu": 56, "std": [22, 399, 421, 866], "steadili": [864, 870], "step": [4, 9, 10, 21, 92, 141, 142, 143, 156, 189, 190, 214, 240, 305, 310, 317, 318, 385, 389, 416, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 457, 459, 503, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 552, 558, 564, 565, 667, 695, 696, 697, 698, 709, 710, 714, 715, 716, 718, 719, 721, 723, 724, 726, 730, 732, 733, 734, 741, 742, 759, 760, 762, 764, 770, 772, 773, 774, 781, 782, 801, 802, 805, 807, 808, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 838, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 863, 867, 872, 873], "step_count": 863, "step_forward": 867, "step_siz": 822, "steplr": 822, "steven": 860, "still": [22, 70, 93, 108, 113, 232, 239, 691, 693, 716, 718, 719, 721, 724, 730, 732, 842, 867], "stochast": [3, 11, 183, 295, 303, 637, 708, 713, 716, 721, 727, 729, 732, 793, 799, 801, 802, 807, 811, 813, 815, 818, 832, 851, 863, 873], "stochastic_train": 716, "stochastical\ud558\uac8c": 800, "stochastictwolayergcn": [716, 721, 760, 761, 762, 764, 802, 804, 805, 807], "stochastictwolayerrgcn": [716, 721, 759, 760, 762, 764, 801, 802, 805, 807], "stop": [192, 562, 564, 730, 863], "stopping_mask": 192, "stopping\uc774\ub098": 814, "storag": [1, 4, 21, 116, 131, 211, 212, 287, 290, 293, 297, 311, 336, 346, 558, 559, 691, 700, 706, 707, 826, 850], "store": [0, 1, 4, 7, 10, 31, 34, 53, 54, 59, 92, 95, 96, 100, 101, 102, 125, 126, 131, 134, 137, 138, 140, 141, 142, 143, 146, 149, 155, 156, 159, 161, 162, 163, 165, 168, 169, 171, 173, 180, 182, 184, 185, 186, 187, 188, 189, 190, 193, 200, 203, 204, 205, 206, 209, 220, 231, 232, 234, 239, 240, 241, 242, 246, 249, 250, 287, 288, 289, 293, 298, 312, 319, 320, 336, 337, 341, 342, 343, 348, 355, 359, 387, 390, 395, 434, 436, 457, 478, 505, 542, 543, 550, 551, 555, 556, 558, 560, 562, 564, 565, 566, 567, 568, 569, 571, 573, 576, 577, 614, 615, 616, 637, 642, 643, 644, 645, 659, 660, 661, 663, 666, 667, 670, 671, 689, 690, 691, 693, 695, 696, 697, 698, 699, 703, 704, 706, 707, 710, 714, 731, 734, 776, 777, 783, 784, 795, 825, 830, 833, 834, 836, 837, 838, 839, 843, 850, 851, 854, 860, 863, 867], "store_eid": 231, "store_id": [49, 95, 96, 98, 106, 246, 337, 341, 342, 478, 542, 555, 556, 558, 573], "store_inner_edg": 231, "store_inner_nod": 231, "store_typ": 643, "stori": 826, "str": [4, 20, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 39, 43, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 73, 74, 75, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 105, 107, 109, 113, 114, 115, 117, 118, 119, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 214, 216, 217, 219, 220, 221, 222, 223, 224, 225, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 293, 294, 297, 298, 299, 301, 302, 304, 305, 306, 307, 310, 311, 312, 313, 314, 315, 317, 318, 322, 323, 326, 329, 332, 334, 335, 336, 337, 341, 342, 343, 348, 354, 355, 356, 359, 387, 389, 390, 397, 398, 399, 401, 408, 412, 414, 417, 420, 421, 422, 423, 426, 429, 430, 431, 434, 435, 436, 442, 446, 447, 449, 450, 454, 457, 458, 459, 478, 479, 480, 502, 503, 505, 542, 549, 550, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 574, 575, 576, 577, 596, 624, 637, 642, 643, 644, 645, 647, 648, 651, 653, 658, 659, 660, 661, 663, 666, 667, 669, 670, 671, 673, 683, 689, 728, 736, 768, 776, 812, 831, 873], "straight": 711, "straightforward": [855, 856], "strategi": [197, 232, 239, 413, 431, 433, 562, 714, 829, 843, 850, 856], "stream": [210, 292, 297, 305, 310, 327], "streamlin": 829, "strength": [411, 702, 731], "strict": 699, "string": [4, 22, 23, 26, 39, 52, 109, 121, 122, 131, 183, 223, 294, 299, 307, 311, 324, 325, 336, 386, 387, 388, 389, 690, 691, 699, 707, 710, 712, 732, 815, 835, 836, 839], "strong": [347, 476], "strongli": 21, "structur": [0, 4, 7, 13, 19, 21, 22, 56, 59, 67, 89, 101, 102, 108, 112, 125, 126, 131, 132, 141, 142, 143, 147, 150, 154, 159, 161, 162, 163, 167, 170, 173, 174, 175, 176, 181, 184, 197, 205, 210, 234, 236, 240, 248, 249, 250, 287, 307, 312, 316, 336, 428, 429, 430, 432, 446, 550, 551, 552, 559, 569, 637, 661, 667, 687, 695, 698, 699, 701, 702, 703, 705, 706, 715, 732, 784, 822, 825, 829, 835, 850, 855, 857, 858, 860, 861, 863, 864, 868, 870], "strucutr": 834, "strutur": [89, 112, 699], "stub": 21, "student": [155, 187, 193], "studi": [151, 152, 162, 818], "studio": 819, "style": [9, 856, 857], "stype": [387, 728, 768, 812], "sub": [9, 144, 261, 262, 275, 276, 285, 286, 387, 460, 499, 500, 502, 503, 526, 527, 528, 529, 530, 531, 540, 541, 624, 710, 721, 754, 795, 825, 831, 873], "sub_g": [246, 247, 337, 478, 479, 542, 707, 751, 792], "subbackward0": 394, "subclass": [3, 218, 302, 315, 428, 429, 430, 431, 432, 433, 688, 689, 693, 715, 717], "subg": [209, 217, 715, 784], "subgraph": [1, 3, 7, 13, 26, 134, 208, 209, 210, 214, 216, 217, 218, 219, 220, 221, 234, 241, 242, 243, 246, 247, 293, 299, 302, 305, 310, 312, 313, 315, 317, 318, 322, 326, 337, 341, 342, 355, 428, 429, 430, 431, 432, 433, 478, 479, 542, 543, 565, 566, 567, 568, 695, 697, 713, 715, 716, 717, 718, 719, 722, 727, 728, 757, 759, 799, 801, 811, 829, 830, 839, 841, 857, 863, 867], "subgraph_sampl": 305, "subgraphs_nod": [302, 315], "subgraphsampl": [218, 302, 715, 723], "subgraphx": 431, "subject": [6, 855], "sublay": [441, 442, 867], "sublist": 56, "submatrix": [343, 723], "submodul": [4, 387, 726, 819, 840], "subnet": 850, "suboptim": [699, 784], "subpackag": [5, 857], "subplot": [821, 863, 866], "subprocess": [292, 295], "subreddit": 181, "subsect": 721, "subsequ": [305, 310, 317, 318, 698, 699], "subset": [4, 14, 45, 79, 82, 105, 130, 146, 155, 157, 158, 169, 178, 179, 187, 193, 195, 197, 205, 207, 217, 232, 239, 247, 289, 295, 307, 386, 428, 429, 479, 696, 699, 704, 829, 832, 842, 863, 872], "subsetrandomsampl": 842, "subspac": 822, "substanc": 821, "substitut": [829, 857], "substract": [627, 825], "subtract": [631, 669], "subtract_min": 669, "subtre": 860, "succe": [4, 696], "success": 822, "successor": [90, 94, 342, 354, 863], "sudo": [819, 850], "suffer": 846, "suffici": 850, "suffix": [127, 690, 777], "sugar": [349, 350, 351, 352, 633, 634, 860], "suggest": [21, 23, 430, 432, 710, 711, 839, 847, 857], "suitabl": [343, 434, 436, 571, 694, 698, 699, 714], "sum": [4, 5, 9, 10, 20, 22, 73, 79, 82, 91, 92, 93, 94, 100, 113, 117, 118, 119, 122, 138, 139, 140, 173, 197, 198, 205, 241, 242, 387, 398, 399, 407, 412, 414, 420, 421, 425, 428, 429, 430, 431, 436, 444, 445, 448, 457, 460, 484, 489, 503, 505, 510, 516, 524, 530, 553, 554, 562, 564, 565, 571, 596, 633, 634, 645, 653, 669, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 696, 697, 710, 712, 720, 723, 724, 726, 727, 728, 731, 732, 734, 754, 756, 763, 766, 767, 768, 771, 772, 774, 782, 795, 796, 798, 806, 808, 810, 811, 812, 815, 817, 820, 821, 823, 825, 831, 832, 838, 840, 842, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "sum_": [120, 122, 343, 347, 359, 390, 393, 394, 395, 399, 403, 405, 408, 409, 410, 411, 413, 414, 416, 417, 418, 419, 422, 425, 434, 436, 437, 438, 440, 444, 458, 461, 476, 571, 574, 575, 710, 732, 733, 754, 772, 773, 795, 815, 816, 823, 825, 832, 840, 841, 855, 857, 860, 863, 867], "sum_edg": 128, "sum_i": [669, 866], "sum_nod": 129, "sum_p": 867, "summar": [21, 732, 829, 857, 863], "summari": 829, "summat": [119, 128, 129, 387, 504, 505, 553, 579, 645, 732, 815, 832, 840, 856], "sumpool": [822, 872], "super": [146, 169, 218, 302, 315, 418, 428, 429, 430, 431, 432, 433, 460, 689, 693, 715, 716, 718, 719, 720, 721, 723, 724, 726, 728, 730, 732, 733, 734, 736, 739, 759, 760, 761, 762, 763, 764, 766, 768, 770, 772, 773, 774, 776, 779, 801, 802, 804, 805, 806, 807, 808, 810, 812, 814, 815, 816, 817, 820, 821, 822, 823, 825, 830, 831, 833, 838, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "superpixel": [146, 169], "superpixeldataset": [146, 169], "superscript": 854, "superset": 637, "supervis": [140, 147, 183, 391, 401, 417, 659, 699, 718, 784, 804, 838, 854, 863], "supplementari": 404, "support": [4, 5, 10, 13, 22, 110, 117, 122, 126, 138, 139, 146, 169, 210, 234, 240, 250, 292, 294, 295, 297, 303, 307, 346, 348, 355, 356, 359, 390, 402, 408, 457, 459, 460, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 558, 560, 562, 564, 565, 566, 567, 569, 572, 579, 618, 638, 644, 653, 672, 683, 691, 695, 696, 697, 698, 699, 703, 706, 710, 721, 724, 726, 731, 732, 766, 810, 818, 819, 820, 821, 822, 823, 825, 831, 833, 836, 837, 838, 840, 843, 847, 867, 873], "suppos": [21, 231, 299, 321, 504, 731, 796, 832, 854, 867], "suppress": [391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 843], "sure": [6, 21, 22, 229, 230, 295, 412, 423, 437, 439, 443, 444, 446, 449, 567, 690, 698, 777, 822, 863], "surpass": 21, "svd": [635, 671], "svd_pe": 671, "svdpe": 13, "swap": 322, "switch": [819, 821], "sym": 459, "sym_new_etyp": 652, "symbol": [5, 691, 867], "symmetr": [183, 345, 417, 459, 659, 670, 702, 730, 814, 820, 825, 856], "sympi": [830, 831, 833, 836, 837], "sync": 850, "synchron": [4, 305, 310, 327, 696, 782, 831, 847, 863, 872, 873], "synset": 191, "syntact": [182, 860, 861, 870], "syntax": [349, 350, 351, 352, 633, 634, 707, 730, 792, 860], "synthet": [14, 141, 142, 143, 172, 189, 190, 691, 729, 730, 814, 842, 843], "syntheticdataset": 843, "system": [4, 22, 166, 173, 290, 291, 457, 560, 702, 823, 831, 841, 846, 847, 850], "systemat": [430, 432], "systemctl": 850, "t": [4, 10, 21, 56, 60, 87, 89, 118, 119, 131, 163, 164, 168, 200, 214, 241, 242, 243, 293, 299, 336, 354, 390, 393, 403, 407, 409, 410, 414, 416, 419, 422, 426, 427, 429, 430, 431, 440, 446, 454, 455, 456, 458, 459, 560, 562, 564, 565, 637, 643, 655, 661, 670, 698, 699, 703, 709, 716, 718, 719, 723, 724, 753, 794, 822, 823, 825, 830, 836, 837, 850, 856, 857, 863, 867], "t0": [697, 783, 854, 857], "t1": [697, 783], "t_i": 867, "t_j": 867, "tabl": [178, 179, 385, 386, 389, 699, 826, 843, 857], "tabular": [699, 703], "tackl": [430, 431, 432, 433, 856], "tag": [21, 567, 576, 577], "tag_offset": [576, 577], "tag_offset_nam": [567, 576, 577], "tag_pos_nam": [576, 577], "tag_typ": [576, 577], "tail": [455, 456], "take": [20, 51, 118, 119, 120, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 210, 214, 215, 216, 219, 220, 241, 242, 287, 295, 303, 315, 345, 403, 404, 407, 409, 410, 418, 420, 421, 423, 428, 429, 430, 431, 432, 433, 561, 565, 566, 567, 568, 596, 602, 622, 624, 673, 687, 691, 693, 696, 699, 706, 707, 710, 712, 714, 715, 716, 717, 719, 721, 725, 727, 728, 729, 730, 731, 732, 734, 819, 821, 823, 831, 832, 840, 841, 843, 846, 847, 855, 856, 857, 860, 863, 867, 872], "taken": [161, 163, 856], "talk": 842, "tanh": [825, 860], "tape": 137, "tar": [690, 737, 777], "target": [108, 132, 133, 144, 170, 177, 178, 179, 201, 243, 322, 410, 419, 431, 433, 605, 699, 721, 722, 830, 833, 867], "target_class": [431, 433], "target_dir": 201, "target_idx": 855, "target_ntyp": 140, "task": [2, 7, 21, 122, 132, 133, 135, 136, 137, 138, 139, 140, 144, 146, 147, 150, 151, 152, 153, 154, 159, 160, 161, 163, 169, 170, 171, 173, 174, 176, 177, 178, 179, 180, 188, 194, 195, 197, 198, 289, 293, 305, 306, 307, 310, 311, 317, 318, 692, 693, 696, 699, 715, 721, 723, 729, 730, 732, 733, 734, 779, 818, 822, 823, 826, 829, 830, 831, 833, 834, 838, 842, 850, 851, 857, 863, 872, 873], "task_lint": 21, "task_nam": [830, 833], "task_unit_test": 21, "tau": [419, 426, 427], "tb": 390, "tcmalloc": 847, "tcp": [831, 872, 873], "tcpstore": 457, "teach": 841, "teacher": 863, "team": [21, 867, 872], "techniqu": [389, 730, 860, 867], "technologi": 847, "teleport": 392, "tell": [5, 21, 130, 210, 213, 240, 691, 721, 839, 840, 842], "temperatur": [430, 432], "templat": [21, 156, 689, 776], "tempor": [25, 145, 164, 166, 214, 299, 302, 305, 315, 317, 318], "temporal_sample_layer_neighbor": [299, 317], "temporal_sample_neighbor": [299, 318], "temporalneighborsamplerimpl": [317, 318], "temporari": 25, "ten": 159, "tend": [120, 712], "tensor": [0, 1, 5, 6, 7, 9, 12, 13, 20, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 138, 139, 140, 146, 159, 165, 168, 169, 172, 173, 175, 177, 178, 179, 184, 186, 195, 210, 213, 220, 221, 226, 227, 229, 230, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 290, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 327, 329, 330, 331, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 346, 347, 348, 353, 354, 355, 356, 357, 358, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 547, 549, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 647, 648, 649, 651, 652, 653, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 691, 693, 697, 699, 703, 704, 705, 706, 707, 710, 715, 717, 720, 723, 724, 725, 727, 728, 731, 732, 734, 739, 742, 748, 749, 750, 751, 772, 779, 789, 790, 791, 792, 796, 806, 808, 815, 819, 821, 822, 823, 825, 826, 830, 831, 833, 836, 837, 838, 839, 840, 842, 843, 850, 855, 857, 858, 860, 863, 867, 870, 872, 873], "tensor_new": 856, "tensor_numpi": 843, "tensorcor": 724, "tensorcore\ub4e4\uc744": 808, "tensorflow": [9, 13, 21, 23, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 693, 706, 720, 725, 732, 734, 806, 809, 815, 818, 826], "tensorflow\u7684keras\u5c42": 765, "tensorflow\u7684tensor\u7c7b\u6216mxnet\u7684ndarray\u7c7b": 750, "tensorflow\uc5d0\uc11c\ub294": 779, "tensorflow\uc5d0\uc11c\ub3c4": 817, "tensorflow\uc758": 791, "term": [4, 10, 14, 144, 149, 185, 321, 385, 388, 396, 404, 407, 408, 409, 417, 427, 687, 818, 846, 856, 860, 863, 866], "termin": [560, 564], "termination_prob": 560, "tesla": 14, "test": [4, 9, 25, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 180, 181, 182, 184, 185, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 240, 293, 311, 316, 331, 692, 696, 699, 723, 730, 734, 738, 742, 743, 778, 782, 784, 814, 819, 820, 821, 822, 823, 825, 829, 830, 831, 833, 835, 836, 837, 838, 840, 842, 843, 850, 851, 854, 857, 867, 872, 873], "test_acc": [820, 821, 823, 831, 838, 840, 872, 873], "test_data": [164, 166, 184], "test_dataload": [822, 842], "test_edg": [139, 851], "test_edge_mask": [157, 158, 191], "test_el": 331, "test_idx": [138, 140, 822, 855], "test_label": [692, 738, 778, 851], "test_load": [692, 738, 778, 872], "test_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 385, 691, 693, 734, 739, 774, 779, 817, 820, 821, 823, 838, 840, 843, 850, 854, 855], "test_metr": 822, "test_neg_dst": 851, "test_neg_g": 841, "test_neg_src": 851, "test_neg_u": 841, "test_neg_v": 841, "test_nid": 850, "test_pos_dst": 851, "test_pos_g": 841, "test_pos_src": 851, "test_pos_u": 841, "test_pos_v": 841, "test_pr": 851, "test_rat": 173, "test_ratio": 173, "test_sampl": 842, "test_set": [311, 316, 830, 831, 833, 835, 836, 837, 872, 873], "test_siz": [822, 841], "texa": 187, "text": [161, 182, 394, 411, 417, 419, 426, 446, 699, 709, 729, 753, 794, 822, 840, 855, 857, 863, 866], "textbf": [863, 866], "textrm": [178, 179, 860, 867], "textur": 866, "tf": [4, 161, 826], "tf_force_gpu_allow_growth": 819, "tf_geometr": 826, "tgt": 867, "tgt_emb": 867, "tgt_po": 867, "tgt_seq": 867, "tgt_y": 867, "tgz": [690, 693, 739, 777, 779], "tgz\u6587\u4ef6": 737, "th": [4, 5, 9, 10, 27, 34, 36, 37, 48, 53, 55, 60, 87, 100, 114, 116, 122, 128, 129, 138, 146, 147, 157, 158, 165, 168, 169, 172, 174, 175, 186, 191, 214, 216, 219, 220, 246, 290, 294, 296, 300, 319, 343, 345, 359, 387, 391, 392, 393, 394, 395, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 460, 478, 505, 549, 553, 554, 559, 563, 564, 569, 574, 575, 636, 643, 645, 647, 648, 672, 682, 683, 685, 687, 695, 696, 697, 698, 699, 703, 704, 705, 706, 707, 714, 732, 741, 742, 747, 748, 749, 750, 751, 781, 782, 783, 784, 788, 789, 790, 791, 792, 815, 822, 823, 825, 832, 843, 846, 850, 851, 854, 855, 856, 860, 866, 867], "than": [4, 21, 27, 28, 66, 95, 96, 118, 119, 120, 121, 131, 139, 142, 143, 161, 168, 178, 189, 190, 226, 287, 290, 294, 295, 296, 299, 300, 302, 307, 315, 319, 336, 343, 390, 393, 430, 432, 434, 436, 451, 461, 561, 565, 566, 567, 571, 614, 615, 616, 628, 660, 661, 666, 706, 707, 711, 717, 728, 730, 733, 751, 792, 819, 823, 826, 836, 837, 846, 847, 850, 855, 856, 857, 860, 863], "thei": [1, 4, 9, 11, 20, 21, 26, 56, 117, 119, 122, 130, 131, 138, 140, 151, 152, 188, 234, 241, 242, 245, 312, 323, 336, 353, 354, 393, 460, 477, 559, 562, 564, 565, 688, 689, 695, 696, 697, 699, 704, 705, 707, 710, 716, 720, 724, 727, 728, 729, 731, 822, 826, 835, 838, 840, 842, 850, 856, 857, 860, 863, 866], "them": [1, 4, 5, 9, 41, 48, 56, 68, 73, 93, 100, 113, 120, 130, 133, 142, 144, 148, 149, 155, 178, 185, 187, 193, 205, 221, 245, 246, 249, 299, 322, 337, 341, 342, 343, 393, 428, 429, 430, 431, 432, 433, 438, 447, 454, 477, 478, 542, 557, 567, 569, 613, 619, 637, 645, 651, 691, 695, 696, 697, 699, 702, 703, 707, 709, 717, 722, 730, 732, 818, 825, 832, 834, 836, 837, 838, 839, 841, 850, 856, 860, 861, 863, 867, 870, 872], "themselv": [21, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 716, 832, 841], "theori": 856, "ther": 427, "therefor": [4, 26, 220, 295, 643, 696, 697, 716, 717, 823, 841, 851, 855, 856, 857, 860], "theta": [406, 407, 412, 413, 420, 424, 425, 821, 856], "theta_": [821, 856], "theta_0": 821, "theta_i": 856, "theta_k": 660, "theta_r": 821, "theta_x": 856, "thew": 26, "thi": [4, 5, 6, 7, 8, 10, 14, 21, 22, 24, 26, 27, 28, 34, 40, 41, 44, 45, 48, 51, 52, 59, 70, 73, 79, 82, 89, 93, 94, 95, 96, 100, 101, 102, 104, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 122, 130, 131, 137, 140, 141, 142, 143, 145, 148, 156, 157, 158, 159, 160, 162, 164, 165, 166, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 188, 189, 190, 191, 194, 197, 209, 210, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 231, 232, 235, 239, 240, 241, 242, 243, 245, 246, 247, 287, 290, 292, 294, 295, 296, 299, 300, 301, 302, 303, 305, 307, 310, 311, 312, 315, 317, 318, 319, 322, 327, 336, 337, 340, 341, 342, 343, 344, 346, 354, 355, 356, 359, 387, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 414, 416, 417, 421, 424, 425, 428, 429, 430, 431, 432, 433, 434, 436, 438, 440, 447, 450, 451, 452, 453, 457, 458, 460, 477, 478, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 552, 555, 556, 557, 558, 559, 560, 561, 564, 565, 566, 567, 568, 571, 576, 577, 583, 584, 607, 614, 615, 616, 618, 624, 628, 635, 636, 637, 639, 640, 641, 642, 643, 645, 646, 659, 660, 661, 662, 663, 664, 666, 667, 668, 670, 671, 672, 680, 681, 682, 683, 685, 686, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 700, 703, 706, 707, 709, 710, 711, 713, 714, 715, 716, 717, 718, 720, 721, 722, 723, 724, 725, 727, 728, 729, 730, 731, 732, 733, 734, 779, 784, 804, 817, 819, 820, 821, 822, 823, 825, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 858, 860, 861, 863, 864, 866, 867, 868, 870, 872, 873], "thing": [210, 226, 561, 694, 716, 860], "third": [131, 210, 214, 215, 216, 219, 220, 287, 336, 563], "thoma": 827, "thorough": 637, "thoroughli": [856, 857], "those": [27, 28, 114, 116, 209, 220, 243, 295, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 434, 436, 710, 711, 714, 726, 832, 839, 857, 860, 863, 867], "though": [21, 22, 241, 242, 305, 310, 317, 565, 703, 856], "thought": [863, 867], "thousand": 833, "thre": 867, "thread": [21, 210, 235, 292, 294, 305, 310, 831, 850, 873], "three": [14, 48, 62, 63, 80, 126, 131, 161, 163, 198, 217, 230, 240, 250, 287, 336, 387, 459, 571, 643, 691, 693, 695, 696, 698, 699, 710, 718, 723, 727, 831, 835, 840, 841, 843, 846, 855, 856, 860, 863, 867, 873], "threshold": [299, 427, 431, 433, 660, 661, 666], "through": [22, 236, 696, 732, 818, 842, 850, 851, 855], "throughout": [307, 706, 863], "throughput": 695, "throw": 683, "thrown": [861, 870], "thu": [4, 9, 14, 22, 70, 122, 182, 198, 245, 246, 305, 317, 337, 341, 342, 397, 424, 461, 477, 478, 542, 553, 554, 691, 696, 697, 699, 703, 705, 724, 821, 854, 855, 856, 857, 860, 863, 866, 867, 872], "thumb": 21, "thumbnail": [838, 839, 840, 841, 842, 843], "ti": 51, "tid": 697, "tild": [392, 395, 411, 419, 424, 425, 459, 821, 854, 856], "tile": 866, "time": [6, 113, 118, 164, 166, 200, 214, 231, 299, 302, 305, 310, 315, 317, 318, 341, 342, 390, 417, 418, 434, 450, 561, 564, 565, 661, 670, 689, 694, 696, 699, 711, 718, 719, 724, 732, 755, 797, 821, 822, 823, 825, 826, 831, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "time_enc": 867, "timestamp": [299, 302, 315, 317, 318, 323], "tini": [130, 184, 860], "tiny_data": 184, "tiny_sst": 860, "tip": [210, 714], "tissu": 857, "titl": [703, 747, 788], "tmp": [319, 320, 430, 432, 699, 743, 784], "to_add_edg": 863, "to_bfloat16": 724, "to_bidirect": [6, 116, 706, 750, 791], "to_block": [4, 131, 696, 697, 715, 717, 742, 759, 782, 783, 801, 803], "to_csv": [836, 837], "to_dens": [821, 823, 825], "to_direct": [248, 249], "to_heterogen": 643, "to_homogen": [419, 422, 642, 707, 751, 792, 855], "to_homogenen": 26, "to_jshtml": 821, "to_loc": 4, "to_networkx": [821, 856, 860, 866], "to_numpi": [691, 843], "to_partid": 4, "to_pyg_data": 307, "to_simpl": [118, 119, 186, 646], "to_undirect": 821, "tocoo": [126, 250], "todens": 841, "todo": [317, 318], "togeth": [11, 26, 91, 92, 101, 102, 130, 135, 136, 137, 214, 216, 240, 334, 344, 353, 425, 426, 427, 437, 439, 443, 444, 558, 699, 707, 722, 732, 823, 836, 837, 856, 872], "toi": [175, 867], "token": [860, 867, 868, 870], "tolevi": 13, "tolist": [563, 821, 860], "tolok": 188, "toloka": 188, "tone": 164, "too": [4, 22, 60, 87, 240, 292, 311, 699, 705, 717, 790, 825, 832, 867], "tool": [695, 696, 699, 744, 784, 785, 819, 825, 826, 833, 838, 850], "toolbox": 404, "top": [142, 143, 161, 419, 443, 647, 648, 696, 699, 818, 822, 823, 825, 829, 841, 846, 850, 855], "topic": [336, 644, 698, 714, 856], "topk": [343, 434, 436, 571, 647, 648], "topolog": [548, 649, 860], "topologi": [13, 293, 311, 393, 425, 731, 860, 861, 863, 870], "topological_nodes_gener": [548, 860], "torch": [4, 5, 6, 8, 9, 10, 12, 20, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 131, 138, 146, 147, 165, 168, 169, 172, 174, 183, 184, 186, 195, 209, 210, 213, 214, 216, 217, 219, 220, 226, 227, 244, 245, 246, 247, 249, 250, 263, 264, 265, 266, 287, 290, 291, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 327, 329, 330, 331, 334, 335, 336, 337, 341, 342, 343, 347, 353, 357, 358, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 476, 477, 478, 479, 505, 542, 549, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 563, 564, 565, 566, 567, 568, 569, 571, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 596, 597, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 636, 637, 638, 642, 643, 644, 645, 647, 648, 652, 653, 656, 657, 658, 659, 660, 661, 664, 665, 666, 669, 670, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 691, 692, 693, 695, 696, 698, 699, 703, 704, 705, 706, 707, 710, 711, 715, 716, 717, 718, 719, 720, 721, 723, 724, 726, 727, 728, 729, 730, 732, 733, 734, 738, 739, 741, 742, 747, 748, 749, 750, 751, 754, 755, 759, 760, 761, 762, 763, 764, 766, 767, 768, 769, 770, 772, 773, 774, 778, 779, 781, 782, 788, 789, 790, 791, 792, 795, 797, 801, 802, 803, 804, 805, 806, 807, 808, 810, 811, 812, 813, 814, 815, 816, 817, 820, 821, 822, 823, 825, 830, 831, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "torch_feat": [294, 300, 319], "torch_featur": 319, "torchaudio": 825, "torchbasedfeatur": [294, 300, 836, 837], "torchbasedfeaturestor": [311, 836, 837], "torchdata": [722, 830, 831, 833, 836, 837], "torchmetr": [823, 831, 873], "torchvis": 825, "tosimpl": [13, 655], "total": [4, 10, 80, 81, 181, 299, 305, 310, 314, 317, 318, 385, 390, 418, 436, 445, 693, 697, 698, 722, 828, 838, 839, 840, 841, 842, 843, 845, 846, 847, 849, 850, 851, 853, 854, 855, 856, 857, 859, 860, 862, 863, 865, 866, 867, 869, 871, 872, 873, 875], "total_correct": 872, "total_loss": [719, 723, 822, 830, 831, 872, 873], "total_node_weight": 698, "total_num_edg": [299, 329], "total_num_nod": [299, 329, 718, 836, 837], "touch": 21, "toward": 656, "tower": [399, 421], "tp_": 857, "tq": [823, 833], "tqdm": [718, 719, 822, 823, 830, 831, 833, 836, 837, 867, 873], "tr": 860, "trace": [562, 563, 564], "track": 860, "trade": [145, 431, 433, 867], "traffic": [149, 185], "train": [3, 4, 7, 9, 10, 11, 23, 25, 89, 132, 133, 134, 137, 138, 139, 140, 144, 146, 147, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 197, 198, 205, 207, 209, 210, 213, 214, 215, 216, 219, 220, 232, 235, 239, 240, 293, 295, 305, 311, 316, 317, 389, 399, 413, 418, 421, 424, 428, 429, 430, 431, 432, 433, 457, 635, 637, 671, 686, 687, 692, 693, 696, 697, 698, 699, 708, 710, 713, 715, 717, 718, 722, 727, 738, 741, 769, 772, 774, 778, 779, 781, 784, 795, 801, 802, 807, 808, 813, 814, 815, 817, 818, 819, 826, 828, 830, 832, 835, 836, 837, 843, 844, 845, 846, 847, 854, 857, 860, 861, 863, 864, 866, 870, 872], "train_acc": [838, 840, 855], "train_data": [164, 166, 184], "train_dataload": [822, 830, 833, 842, 850, 851], "train_dataset": [146, 169], "train_dataset_subset": [146, 169], "train_dist": [744, 785, 850], "train_edg": [157, 158, 191], "train_edge_mask": [157, 158, 191], "train_eid": [214, 216, 220, 760, 802, 851], "train_eid_dict": [760, 762, 802, 805], "train_g": [157, 158, 191, 841], "train_graph": 139, "train_idx": [138, 140, 693, 739, 779, 822, 855], "train_it": 867, "train_label": [692, 738, 778], "train_load": [692, 738, 778, 860, 872], "train_mask": [25, 132, 133, 137, 140, 144, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 170, 171, 173, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 240, 385, 428, 691, 693, 695, 696, 699, 724, 729, 730, 734, 739, 741, 742, 743, 769, 770, 774, 779, 781, 782, 784, 808, 813, 814, 817, 820, 821, 823, 838, 840, 843, 850, 854, 855, 857], "train_neg_g": 841, "train_neg_u": 841, "train_neg_v": 841, "train_nid": [210, 214, 215, 216, 219, 695, 696, 717, 741, 742, 759, 764, 781, 782, 801, 803, 807, 846, 850, 851], "train_nid_dict": [764, 807], "train_on": [209, 210, 213, 214, 215, 216, 217, 220], "train_pos_g": 841, "train_pos_u": 841, "train_pos_v": 841, "train_rat": 173, "train_sampl": 842, "train_se": [762, 805], "train_set": [157, 158, 191, 311, 316, 715, 716, 721, 830, 831, 833, 835, 836, 837, 856, 872, 873], "train_siz": [161, 162, 163, 164, 166, 822, 841], "train_step": [430, 432], "train_step_nod": [430, 432], "trainabl": [4, 820, 825, 855], "trainer": [4, 232, 239, 240, 695, 696, 697, 699, 700, 850, 851], "trainer_id": 240, "trainer\uc5d0\uac8c": 781, "training_load": 856, "training_set": 195, "training\uc744": 795, "trainset": [147, 174, 860], "trang": [719, 823], "transact": 145, "transduct": [140, 197, 198, 424, 696, 742, 782], "transfer": [210, 291], "transform": [9, 13, 26, 27, 28, 114, 115, 116, 117, 130, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 246, 247, 308, 337, 340, 343, 346, 354, 359, 388, 390, 393, 399, 403, 407, 419, 429, 430, 431, 434, 435, 436, 441, 442, 446, 447, 448, 449, 450, 451, 452, 453, 461, 478, 479, 542, 549, 556, 559, 567, 636, 645, 646, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 687, 691, 699, 703, 715, 716, 717, 719, 722, 724, 732, 820, 824, 828, 830, 854, 855, 856, 857, 860, 863, 868, 869, 870], "transform1": 663, "transform2": 663, "transform3": 663, "transformer_encod": 450, "transit": 564, "translat": [158, 191, 455, 867], "translationdataset": 867, "transmiss": 210, "transpar": [697, 722], "transpos": [31, 559, 576, 578, 604, 822, 825, 856], "travel": [821, 863], "travers": [13, 91, 92, 123, 124, 229, 230, 545, 547, 548, 560, 562, 564, 649], "traversal_ord": 860, "treat": [312, 323, 389, 565, 566, 645, 670, 707, 727, 751, 792, 839, 841, 842, 843, 856, 860, 861, 867, 870], "tree": [14, 21, 159, 182, 184, 189, 190, 230, 343, 431, 433, 434, 436, 571, 828, 861, 862, 864, 867, 870], "tree_height": [189, 190], "treebank": [184, 860], "treelstm": 860, "treelstmcel": 860, "tri": [4, 148, 240, 355, 356], "trick": [22, 854], "trigger": [0, 91, 92, 408, 712, 724, 798, 822, 826, 840, 843, 856, 857, 860], "tripl": [455, 456, 855], "triplet": [4, 30, 31, 32, 34, 39, 47, 48, 52, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 131, 223, 247, 336, 480, 553, 555, 557, 574, 642, 691, 707], "trivial": [9, 344, 399, 450, 663, 860], "troubl": 21, "true": [4, 6, 9, 10, 25, 31, 48, 49, 57, 58, 65, 66, 67, 69, 95, 96, 98, 99, 106, 111, 116, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 197, 198, 200, 201, 205, 207, 209, 210, 213, 214, 215, 216, 217, 219, 220, 226, 229, 230, 231, 232, 236, 238, 239, 240, 241, 242, 246, 248, 287, 292, 295, 297, 299, 305, 310, 311, 312, 317, 318, 319, 320, 330, 331, 337, 338, 340, 341, 342, 343, 344, 346, 385, 388, 389, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 446, 447, 448, 449, 450, 451, 459, 478, 542, 543, 545, 547, 548, 549, 555, 556, 558, 559, 561, 562, 564, 565, 566, 567, 568, 571, 572, 573, 576, 590, 635, 636, 637, 643, 644, 645, 647, 648, 649, 651, 652, 653, 663, 664, 669, 671, 684, 685, 691, 692, 693, 695, 696, 698, 699, 715, 716, 717, 718, 719, 721, 722, 723, 724, 726, 732, 738, 739, 741, 742, 759, 760, 761, 762, 764, 766, 772, 778, 779, 781, 782, 784, 801, 802, 803, 804, 805, 807, 808, 810, 815, 819, 820, 821, 822, 823, 825, 830, 831, 833, 835, 836, 837, 838, 842, 843, 846, 850, 851, 854, 855, 856, 860, 863, 866, 867, 872, 873], "truediv": 624, "trueli": [698, 699], "truli": [240, 718], "truncat": 451, "trust": 145, "truth": [150, 154, 167, 176, 734, 817, 831, 838, 851, 856, 863, 873], "trv_a_tre": 860, "trv_graph": 860, "try": [116, 130, 207, 226, 240, 340, 346, 559, 560, 561, 636, 645, 698, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837, 842, 847], "tudata": [693, 739, 779], "tudataset": 25, "tune": [192, 292, 411, 724, 818, 846, 847, 857], "tupl": [4, 10, 22, 26, 27, 32, 36, 48, 51, 54, 61, 73, 88, 95, 123, 125, 131, 132, 133, 139, 144, 156, 170, 183, 196, 217, 240, 249, 287, 288, 298, 301, 304, 307, 323, 324, 325, 334, 335, 336, 354, 357, 358, 359, 386, 387, 388, 429, 461, 561, 564, 565, 581, 583, 584, 598, 612, 614, 615, 616, 617, 628, 692, 693, 697, 706, 720, 727, 728, 763, 767, 778, 806, 811], "tuple\uacfc": 783, "tuple\uc744": [779, 783], "tuple\uc758": 811, "ture": [9, 710, 795], "turn": [21, 210, 213, 305, 338, 355, 543, 724, 822, 832, 847, 850, 856, 863], "tutori": [9, 21, 210, 214, 215, 216, 295, 687, 703, 710, 716, 717, 720, 721, 723, 788, 801, 802, 807, 820, 821, 822, 823, 825, 827, 828, 829, 830, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 843, 845, 846, 849, 850, 851, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875], "tvm": 22, "tvt": 316, "tweak": 21, "tweet": 159, "twirl": 426, "twitter": [159, 702], "two": [3, 4, 5, 9, 26, 34, 45, 48, 51, 52, 53, 58, 68, 77, 79, 81, 82, 100, 105, 116, 118, 119, 125, 126, 128, 129, 130, 135, 136, 141, 142, 159, 162, 163, 178, 180, 182, 188, 232, 239, 240, 245, 249, 299, 341, 342, 343, 354, 355, 356, 389, 390, 391, 393, 394, 399, 402, 403, 404, 405, 406, 407, 409, 410, 412, 413, 414, 417, 423, 457, 458, 460, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 552, 553, 554, 558, 560, 561, 567, 574, 575, 576, 577, 610, 618, 621, 624, 630, 636, 637, 642, 643, 645, 647, 648, 651, 667, 683, 687, 691, 696, 697, 698, 699, 701, 702, 703, 704, 705, 707, 710, 711, 712, 716, 718, 720, 721, 724, 728, 730, 732, 733, 734, 802, 817, 823, 825, 832, 833, 835, 838, 841, 842, 843, 850, 854, 855, 856, 857, 858, 860, 863, 866, 867, 868, 870], "twolayergcn": [721, 764, 807], "tx": 670, "txt": [695, 696, 698, 699, 700, 741, 742, 744, 781, 782, 784, 785, 850, 851], "ty_a": 642, "ty_b": 642, "type": [4, 5, 6, 10, 13, 21, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 203, 204, 205, 207, 210, 214, 215, 216, 219, 220, 226, 227, 229, 230, 232, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 287, 288, 290, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 307, 310, 311, 312, 314, 317, 318, 319, 320, 322, 323, 326, 327, 329, 330, 332, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 354, 355, 356, 357, 358, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 461, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 571, 573, 574, 575, 576, 577, 579, 580, 582, 585, 586, 587, 588, 589, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 651, 652, 653, 659, 668, 674, 677, 679, 682, 683, 691, 693, 695, 697, 698, 699, 701, 702, 703, 704, 705, 706, 710, 712, 716, 719, 720, 721, 723, 724, 726, 728, 729, 732, 733, 734, 749, 751, 766, 767, 779, 783, 790, 792, 798, 801, 810, 814, 815, 816, 819, 825, 830, 831, 833, 835, 836, 837, 839, 842, 843, 854, 855, 857, 860, 863, 872], "type_": [222, 223, 224, 225], "type_edge_id": 784, "type_nam": [288, 298], "type_per_edg": [299, 329, 836], "type_wise_edge_id": 698, "type_wise_id": [697, 783], "type_wise_node_id": 698, "typestr": [62, 63], "typic": [1, 4, 11, 241, 390, 693, 700, 710, 724, 726, 727, 821, 847, 856, 863, 867], "typl": [128, 647], "tzdata": [830, 833, 836, 837], "u": [4, 5, 21, 27, 48, 51, 57, 61, 87, 88, 90, 94, 107, 114, 130, 131, 161, 163, 178, 179, 226, 227, 230, 244, 252, 253, 255, 257, 259, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 284, 286, 287, 299, 321, 336, 340, 346, 347, 354, 403, 404, 406, 407, 409, 410, 414, 417, 418, 420, 421, 423, 476, 502, 503, 559, 575, 636, 637, 645, 664, 677, 690, 693, 702, 705, 706, 707, 709, 710, 711, 722, 733, 739, 746, 749, 750, 751, 753, 754, 755, 759, 773, 779, 787, 790, 791, 792, 794, 795, 797, 801, 816, 818, 821, 832, 839, 840, 841, 847, 854, 856, 860, 863, 866, 867], "u0": [178, 179], "u0_atom": 179, "u_": [414, 860], "u_0": [178, 179], "u_add_": 5, "u_add_e_max": 9, "u_add_v": [5, 34, 460, 710, 711, 754, 755, 795, 797], "u_atom": 179, "u_attr": 125, "u_div_": 5, "u_div_v": [5, 9], "u_dot_": 5, "u_dot_v": [5, 9, 724, 730, 733, 762, 770, 773, 805, 808, 814, 816, 841], "u_f": 860, "u_fea": [406, 414, 417, 423], "u_feat": [403, 404, 407, 409, 410, 420], "u_hat": 866, "u_iou": 860, "u_j": 860, "u_l": 860, "u_mul_": [5, 9, 428, 429, 710, 724, 731, 754, 771, 795, 796, 808, 840, 867], "u_mul_e_sum": 9, "u_mul_e_udf": 840, "u_mul_v": 5, "u_sub_": 5, "u_sub_v": 5, "ubuntu": [14, 139, 819, 836, 837, 843, 847, 856, 860, 863, 866], "uc": 389, "ucidata": 167, "udf": [20, 696, 710, 724, 742, 795, 808, 857, 860], "udf_max": 5, "udf_u_mul_": 5, "udf\ub294": 795, "udf\uc640": 795, "udf\uc758": 795, "uint32": 819, "uint8": [696, 742, 782, 836, 867], "uk": 144, "un": [843, 857], "unari": [5, 710, 795], "unbatch": [101, 102, 122, 842, 860], "unblock": [391, 403, 406, 407, 409, 410, 411, 414, 417, 424], "uncertainti": [197, 205], "unchang": 109, "uncom": [820, 821, 822, 823, 825], "uncompress": 201, "uncov": 855, "undefin": [229, 230, 241, 242, 290, 294, 296, 300, 319, 337, 341, 342, 478, 542, 562, 564, 565, 566, 567, 696, 843], "under": [1, 5, 14, 22, 95, 96, 137, 161, 163, 171, 180, 182, 188, 197, 205, 240, 246, 337, 341, 342, 478, 542, 555, 556, 558, 567, 573, 645, 690, 691, 695, 698, 699, 700, 714, 777, 818, 819, 840, 841, 850, 854, 855, 857, 863, 872], "underflow": [724, 808], "underli": [430, 432, 696], "underset": [728, 768, 812, 856], "understand": [21, 445, 453, 698, 714, 821, 826, 828, 832, 840, 842, 850, 856, 858, 859, 870], "undirect": [6, 173, 220, 248, 249, 289, 702, 703, 706, 787, 802, 839, 863], "uneven": [831, 873], "unexist": [446, 449], "unfamiliar": 21, "uni": [44, 45, 68, 79, 82, 104, 105, 126, 406, 550], "unidirect": [116, 125, 354, 401, 402, 403, 404, 406, 407, 409, 410, 414, 417, 420, 423, 720, 806], "unifi": [21, 210, 307, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 717, 829], "uniform": [174, 205, 214, 216, 219, 220, 226, 227, 299, 321, 402, 409, 410, 414, 416, 417, 420, 423, 425, 564, 565, 567, 719, 733, 762, 803, 805, 857], "uniform_": [4, 696, 742, 782], "uniformli": [214, 216, 217, 226, 227, 245, 299, 321, 386, 418, 477, 550, 551, 562, 564, 565, 719, 830], "uniformnegativesampl": [305, 719, 830], "uniform\uc0d8\ud50c\ub9c1\uc740": 803, "uniniti": [299, 358], "union": [4, 209, 220, 295, 299, 302, 303, 304, 312, 314, 315, 322, 323, 335, 434, 436, 860], "uniqu": [4, 30, 31, 32, 34, 47, 48, 53, 55, 57, 60, 61, 62, 63, 73, 80, 87, 88, 90, 91, 92, 93, 94, 100, 107, 109, 113, 114, 117, 162, 182, 216, 226, 241, 247, 299, 301, 302, 305, 310, 315, 317, 318, 323, 334, 335, 457, 480, 553, 555, 557, 561, 565, 574, 579, 696, 697, 699, 704, 706, 707, 725, 732, 850, 851], "unique_dst": 335, "unique_dst_nod": 335, "unique_nod": [334, 335], "unit": [7, 178, 179, 699, 855, 860, 872], "univers": [132, 167, 868, 870], "unknown": [147, 171], "unlabel": [161, 459, 699, 718], "unleash": 846, "unless": 210, "unlik": [118, 119, 305, 317, 856, 857, 864, 870], "unmark": 6, "unnam": 691, "unnecessari": [711, 728, 847], "unnorm": [241, 242, 299, 305, 310, 317, 318, 404, 408, 562, 564, 565, 566, 567], "unobserv": 857, "unoccupi": [178, 179], "unorm": 426, "unpack": [698, 699, 719], "unpin": 112, "unpin_memory_": 89, "unplug": 173, "unreach": [243, 451, 452, 572, 685], "unscal": [724, 808], "unsqueez": [128, 129, 451, 682, 727, 767, 773, 811, 855, 856, 860, 863], "unsupervis": [719, 805, 856], "until": [4, 6, 21, 214, 565, 714, 860, 867], "untyp": [855, 863], "unus": 21, "unvisit": [431, 433], "unweight": [289, 572, 659, 670, 702, 731, 787], "up": [4, 9, 22, 221, 241, 242, 305, 310, 436, 562, 564, 565, 571, 643, 693, 699, 706, 710, 711, 732, 831, 838, 841, 846, 854, 855, 857, 860, 866, 873], "updat": [4, 10, 20, 21, 27, 28, 34, 35, 73, 91, 92, 93, 94, 100, 113, 222, 223, 224, 225, 290, 294, 296, 297, 298, 300, 319, 353, 387, 389, 393, 394, 396, 401, 402, 404, 407, 409, 410, 411, 412, 413, 415, 417, 423, 424, 425, 448, 457, 459, 544, 545, 546, 547, 548, 687, 695, 696, 709, 710, 711, 712, 713, 720, 724, 732, 755, 795, 797, 798, 808, 819, 825, 826, 831, 832, 840, 850, 856, 857, 860, 866, 867, 872], "update_al": [5, 9, 20, 428, 460, 674, 675, 676, 677, 678, 679, 680, 681, 682, 710, 711, 712, 713, 720, 724, 727, 731, 754, 755, 756, 757, 763, 767, 771, 795, 796, 797, 798, 799, 806, 808, 811, 840, 841, 854, 855, 856, 857, 863, 866], "update_all_exampl": [710, 754, 795], "update_graph": 867, "upgrad": [821, 831], "upload": [21, 850], "upon": [22, 162, 825], "upper": [235, 427, 447, 452], "upstream": [21, 860], "upward": 860, "urandom": [183, 207], "url": [23, 156, 200, 689, 690, 693, 736, 737, 739, 776, 777, 779, 825], "urllib": 843, "urllib3": [830, 831, 833, 836, 837], "urlretriev": 843, "us": [4, 5, 6, 9, 10, 11, 12, 13, 14, 20, 21, 22, 23, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 113, 114, 115, 116, 117, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 142, 143, 144, 145, 148, 150, 154, 159, 160, 162, 165, 167, 168, 173, 176, 177, 178, 179, 181, 183, 184, 186, 189, 190, 194, 195, 197, 205, 207, 209, 210, 213, 214, 217, 220, 222, 223, 224, 225, 229, 232, 235, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 263, 264, 265, 266, 287, 290, 292, 293, 294, 295, 296, 297, 299, 300, 305, 307, 308, 309, 310, 312, 315, 316, 317, 318, 319, 320, 322, 327, 330, 334, 336, 337, 340, 341, 342, 343, 344, 346, 353, 354, 355, 356, 359, 385, 386, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 406, 407, 409, 410, 411, 412, 414, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 443, 444, 445, 446, 448, 449, 450, 452, 454, 455, 456, 457, 460, 461, 477, 478, 479, 542, 545, 547, 548, 549, 550, 551, 552, 553, 554, 556, 558, 559, 560, 564, 565, 566, 567, 568, 571, 573, 587, 589, 592, 593, 605, 632, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 652, 658, 663, 664, 667, 669, 670, 671, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 684, 685, 687, 688, 690, 691, 693, 694, 695, 696, 697, 698, 699, 701, 702, 703, 706, 707, 709, 710, 712, 714, 715, 716, 718, 719, 721, 723, 724, 725, 726, 727, 728, 729, 730, 732, 733, 734, 777, 784, 791, 792, 808, 817, 819, 821, 823, 824, 825, 828, 830, 831, 832, 833, 835, 836, 837, 838, 840, 842, 843, 844, 845, 846, 847, 850, 851, 854, 855, 856, 857, 858, 860, 861, 863, 864, 866, 867, 870, 872, 873], "usag": [0, 1, 8, 9, 21, 25, 56, 126, 131, 210, 249, 250, 287, 296, 336, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 692, 693, 703, 710, 713, 818, 824, 826, 847, 850], "use_alternate_stream": 210, "use_cpu_affin": 847, "use_ddp": [210, 213, 846, 872], "use_eta": [426, 427], "use_featur": [146, 169], "use_fp16": 808, "use_graphbolt": [235, 236, 240, 241, 242, 850], "use_int64_tensor_s": 819, "use_libxsmm": 338, "use_libxsmm_flag": 338, "use_mm_for_euclid_dist": [435, 549], "use_mm_for_euclid_dist_if_necessari": [435, 549], "use_norm": 419, "use_panda": 168, "use_prefetch_thread": 210, "use_uva": [10, 210, 717], "user": [1, 3, 4, 5, 9, 11, 13, 27, 28, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 66, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 87, 88, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 107, 109, 113, 114, 115, 116, 117, 122, 130, 140, 145, 156, 159, 161, 163, 173, 180, 181, 210, 214, 215, 216, 219, 220, 235, 240, 241, 246, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 299, 301, 303, 311, 316, 324, 325, 336, 337, 340, 341, 342, 346, 355, 356, 359, 386, 387, 388, 389, 391, 401, 403, 406, 407, 409, 410, 411, 414, 417, 424, 429, 430, 431, 478, 479, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 550, 555, 556, 557, 558, 559, 563, 564, 565, 566, 567, 568, 576, 577, 636, 637, 642, 643, 644, 645, 652, 653, 658, 668, 669, 673, 683, 691, 695, 696, 697, 698, 699, 700, 701, 702, 704, 707, 710, 715, 716, 717, 719, 722, 724, 729, 730, 733, 734, 751, 754, 759, 769, 770, 773, 774, 786, 792, 793, 795, 801, 808, 813, 814, 816, 817, 818, 819, 829, 831, 834, 835, 836, 847, 850, 860], "user_emb": 389, "user_feat": [730, 733, 734, 770, 773, 774, 814, 816, 817], "user_id": 836, "user_nid": 389, "user_orig_nids_0": 699, "usernam": 21, "userwarn": [145, 177, 178, 179, 690, 737, 777, 822, 843, 856], "user\uac00": 814, "user\uc640": [792, 814], "usr": [822, 831], "usual": [4, 10, 21, 334, 461, 560, 696, 700, 710, 714, 716, 718, 722, 726, 727, 732, 734, 823, 830, 833, 836, 837, 842, 854, 857], "util": [1, 4, 11, 13, 146, 169, 183, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 289, 292, 295, 297, 303, 305, 307, 310, 316, 317, 318, 348, 384, 385, 389, 447, 458, 459, 460, 461, 569, 685, 686, 687, 690, 693, 694, 695, 699, 703, 717, 722, 725, 726, 727, 731, 734, 737, 739, 740, 765, 766, 767, 777, 779, 780, 784, 809, 810, 811, 821, 826, 831, 842, 843, 846, 847, 856, 860, 863], "utransform": 867, "utyp": [125, 126, 389, 550, 637, 720, 733, 763, 773, 806, 816], "uv": [51, 61, 88, 560, 677], "uva": [210, 292, 297, 305, 310, 560, 564], "v": [4, 5, 21, 22, 27, 35, 48, 51, 57, 60, 61, 62, 63, 87, 88, 90, 93, 94, 107, 114, 120, 121, 131, 161, 178, 179, 226, 227, 230, 244, 245, 254, 256, 258, 260, 262, 268, 270, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 299, 321, 336, 340, 346, 347, 354, 393, 397, 403, 404, 406, 407, 409, 410, 414, 417, 419, 420, 422, 423, 476, 477, 502, 503, 559, 575, 623, 624, 625, 626, 627, 636, 637, 645, 651, 664, 677, 702, 705, 706, 707, 709, 710, 711, 720, 727, 728, 732, 733, 734, 746, 749, 750, 751, 753, 754, 755, 759, 763, 767, 768, 772, 773, 774, 787, 790, 791, 792, 794, 795, 797, 801, 806, 811, 812, 815, 816, 817, 822, 825, 832, 840, 841, 854, 856, 860, 863, 866, 867], "v0": 783, "v1": 825, "v100": [14, 724, 808], "v2": 825, "v3": 825, "v_": 856, "v_1": 825, "v_2": 825, "v_a": 697, "v_add_": 5, "v_add_u": 5, "v_attr": 125, "v_b": [390, 422, 461, 697, 855], "v_div_": 5, "v_div_u": 5, "v_dot_": 5, "v_dot_u": 5, "v_fea": [406, 414, 417, 423], "v_feat": [403, 404, 407, 409, 410, 420], "v_i": [407, 733, 773, 816, 857, 860, 867], "v_j": [866, 867], "v_k": [860, 867], "v_max": 863, "v_mul_": 5, "v_mul_u": 5, "v_p": 436, "v_proj": 822, "v_sub_": 5, "v_sub_u": 5, "vacabulari": 184, "vaganova": 855, "val": [101, 102, 134, 137, 138, 139, 140, 149, 155, 168, 171, 180, 182, 185, 186, 187, 188, 192, 193, 333, 505, 570, 579, 589, 590, 594, 596, 599, 600, 601, 602, 603, 607, 609, 610, 611, 612, 613, 614, 615, 616, 618, 619, 620, 621, 622, 624, 628, 629, 631, 632, 820, 821, 822, 823, 825, 836, 837, 838, 840, 851, 872], "val1": [618, 630], "val2": [618, 630], "val_acc": [820, 821, 823, 838, 840, 855, 872], "val_edg": [139, 157, 158, 191, 851], "val_edge_mask": [157, 158, 191], "val_g": [157, 158, 191], "val_idx": [138, 140, 822], "val_lik": 825, "val_load": 872, "val_loss": 855, "val_mask": [25, 137, 140, 149, 150, 154, 155, 157, 158, 159, 160, 161, 162, 163, 171, 176, 180, 181, 182, 185, 187, 188, 191, 192, 193, 194, 198, 691, 693, 734, 739, 774, 779, 817, 820, 821, 823, 838, 840, 843, 850], "val_metr": 822, "val_nid": 850, "val_set": [157, 158, 191, 872], "val_siz": [161, 162, 163, 602, 610, 614, 615, 616, 617, 622, 624, 628, 822, 825], "valid": [5, 25, 91, 125, 131, 138, 139, 140, 147, 150, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 173, 174, 175, 176, 181, 191, 192, 194, 195, 197, 198, 205, 207, 249, 293, 311, 316, 448, 683, 692, 696, 699, 718, 730, 734, 738, 778, 814, 817, 820, 821, 829, 830, 831, 833, 835, 836, 837, 838, 840, 841, 843, 855, 857, 860, 863, 867, 872, 873], "valid_data": [164, 166], "valid_dataload": [822, 833, 850], "valid_it": 867, "valid_label": [692, 738, 778], "valid_load": [692, 738, 778], "valid_mask": [173, 734, 774, 817], "valid_nid": 850, "valid_r": 173, "valid_ratio": 173, "valid_set": [831, 833, 873], "validation_set": [311, 316, 831, 833, 835, 836, 837, 873], "valu": [4, 9, 12, 22, 23, 30, 31, 34, 51, 57, 58, 61, 62, 63, 73, 88, 89, 93, 113, 114, 115, 117, 120, 121, 126, 131, 137, 147, 148, 156, 164, 174, 178, 179, 183, 184, 197, 205, 210, 214, 216, 219, 220, 240, 241, 242, 244, 245, 246, 250, 287, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 304, 305, 307, 310, 312, 317, 318, 319, 323, 327, 331, 334, 335, 336, 337, 341, 342, 347, 355, 359, 385, 387, 389, 391, 395, 396, 397, 398, 400, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 417, 420, 422, 423, 424, 426, 427, 428, 429, 430, 431, 432, 433, 438, 443, 446, 448, 449, 457, 476, 477, 478, 481, 483, 486, 488, 505, 507, 509, 513, 515, 521, 523, 527, 529, 542, 543, 552, 558, 563, 565, 572, 579, 582, 583, 584, 585, 587, 589, 592, 593, 594, 596, 599, 600, 601, 602, 603, 605, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 624, 628, 629, 630, 631, 632, 635, 653, 667, 669, 671, 689, 691, 698, 699, 724, 727, 728, 731, 776, 821, 822, 825, 831, 843, 854, 856, 857, 860, 866, 867, 873], "valueerror": 697, "valueobject": 22, "van": 860, "vanilla": [822, 867], "vanillar": 822, "vanish": 418, "var": [399, 421], "vare": 186, "varepsilon": [415, 867], "vari": [691, 726, 727, 821, 836, 837], "variabl": [21, 245, 477, 698, 819, 839, 846, 847, 856], "varianc": [399, 421], "variant": [214, 245, 477, 565, 854, 857], "variat": [214, 299, 305, 565, 856], "varieti": [703, 863, 867], "variou": [4, 14, 221, 307, 421, 696, 722, 825, 836, 837, 839, 842, 866], "vast": 839, "vaswani": 822, "vcpu": 14, "ve": [825, 850], "vec": [150, 404, 409, 410, 821, 857], "vector": [128, 129, 159, 214, 216, 219, 232, 239, 240, 355, 356, 385, 386, 389, 399, 404, 407, 414, 420, 427, 441, 442, 447, 572, 596, 599, 600, 601, 603, 610, 611, 612, 614, 615, 616, 617, 621, 623, 624, 625, 626, 627, 628, 635, 671, 687, 691, 699, 704, 730, 820, 821, 823, 825, 838, 839, 841, 842, 850, 854, 857, 860, 863, 866, 867, 868, 870], "vector_v": 825, "venu": 651, "venv": 831, "verbos": [132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 432, 689, 693, 736, 739, 776, 779], "veri": [4, 10, 22, 122, 184, 696, 703, 716, 718, 719, 721, 730, 732, 733, 850, 851, 860, 864, 867, 870], "verifi": [21, 130, 200, 637, 727, 856], "verify_ssl": 200, "versa": [856, 857], "versatil": 818, "versin": 811, "version": [4, 10, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 216, 245, 403, 427, 477, 567, 691, 699, 730, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 812, 813, 814, 815, 816, 817, 819, 820, 821, 822, 823, 825, 826, 830, 831, 833, 836, 837, 854, 863, 866, 873], "vert": [418, 440, 454, 458], "vertex": [6, 214, 239, 305, 310, 317, 356, 414, 565], "vertic": [214, 305, 317, 355, 565, 702, 856], "vh": 137, "via": [5, 11, 22, 41, 93, 113, 122, 214, 216, 234, 299, 305, 311, 317, 396, 397, 398, 411, 431, 433, 459, 550, 551, 565, 569, 691, 695, 702, 704, 715, 716, 717, 718, 721, 724, 733, 818, 836, 837, 839, 840, 841, 842, 847, 850], "viabl": 699, "vibrat": [178, 179], "vice": [856, 857], "vid": [58, 563], "video": 137, "view": [4, 9, 43, 44, 46, 51, 74, 77, 103, 104, 246, 337, 341, 342, 460, 478, 542, 558, 563, 564, 576, 577, 610, 624, 675, 676, 678, 680, 681, 731, 733, 773, 805, 816, 822, 855, 857, 860, 863, 866, 867], "viewbackward": [393, 441], "viewbackward0": 396, "virtual": [10, 210, 448, 685, 717, 831], "visibl": [116, 130, 340, 346, 559, 636, 645], "vision": [822, 839, 868, 870], "visit": [0, 22, 217, 230, 560], "visitattr": 22, "visitor": 22, "visual": [819, 821, 860, 866], "viz_idx": 867, "vocab": [184, 860], "vocab_fil": 184, "vocab_s": [184, 860, 867], "vocabulari": [174, 184, 860], "void": 22, "vol": [240, 356], "volta": [9, 710, 795], "volum": [240, 356], "vote": 161, "vs2019": 819, "vtype": [125, 126, 389, 550, 563, 637, 720, 733, 763, 773, 806, 816], "w": [5, 21, 27, 28, 60, 87, 114, 115, 118, 119, 122, 126, 167, 250, 337, 341, 342, 346, 385, 389, 394, 395, 398, 402, 409, 410, 411, 417, 419, 422, 423, 428, 429, 542, 553, 554, 558, 652, 658, 659, 660, 661, 664, 666, 669, 670, 672, 673, 683, 704, 711, 716, 720, 724, 727, 730, 731, 748, 755, 760, 763, 767, 770, 771, 784, 789, 797, 802, 806, 808, 811, 814, 820, 821, 823, 825, 836, 837, 840, 854, 855, 857, 860, 863], "w1": [418, 823, 841], "w2": [823, 841], "w_": [410, 416, 709, 753, 794, 854, 867], "w_0": [422, 855], "w_comp": 855, "w_h": 867, "w_i": 403, "w_iou": 860, "w_j": 403, "w_k": [414, 867], "w_l": [711, 755, 797], "w_new": 5, "w_o": [461, 867], "w_q": 867, "w_r": [422, 711, 755, 797, 855], "w_t": 390, "w_v": 867, "wa": [9, 141, 158, 162, 182, 186, 191, 393, 445, 706, 821, 850, 855, 860, 867], "wai": [1, 4, 5, 126, 209, 232, 239, 250, 355, 356, 399, 404, 421, 457, 660, 661, 666, 673, 689, 693, 696, 706, 707, 714, 716, 718, 720, 725, 733, 823, 825, 839, 840, 850, 851, 857, 867], "wait": [21, 290, 294, 296, 299, 300, 319, 335], "walk": [13, 217, 385, 389, 417, 552, 560, 562, 563, 564, 667, 670, 850, 851], "walk_length": [385, 562], "walkthrough": [720, 825], "wang": [854, 856, 857, 860], "want": [4, 21, 22, 41, 210, 214, 216, 217, 219, 245, 299, 477, 565, 690, 691, 696, 699, 702, 707, 713, 715, 716, 719, 721, 722, 730, 731, 733, 734, 787, 830, 831, 833, 839, 841, 843, 850, 857], "warn": [166, 831, 843], "watch": [43, 866], "wayn": 167, "wb": 851, "wc": 418, "we": [4, 6, 9, 14, 21, 22, 27, 28, 31, 41, 45, 68, 79, 82, 105, 131, 133, 137, 144, 171, 179, 180, 181, 182, 188, 207, 210, 220, 234, 240, 241, 245, 299, 316, 341, 342, 343, 355, 356, 359, 389, 390, 393, 400, 401, 402, 411, 417, 422, 434, 436, 476, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 560, 565, 571, 576, 577, 642, 685, 687, 691, 695, 696, 697, 698, 699, 707, 714, 715, 716, 717, 718, 721, 722, 723, 724, 725, 729, 730, 733, 734, 783, 818, 819, 820, 821, 822, 823, 825, 826, 830, 831, 833, 836, 837, 840, 841, 842, 846, 847, 850, 851, 854, 855, 856, 857, 863, 866, 867, 872, 873], "web": [132, 155, 187, 193, 560, 666], "webkb": [155, 187, 193], "websit": [145, 167, 180, 693, 739, 779, 819], "wedg": 244, "week": 161, "weight": [5, 6, 21, 118, 119, 120, 125, 126, 145, 245, 249, 250, 299, 305, 310, 317, 318, 349, 350, 351, 352, 359, 385, 386, 387, 389, 390, 392, 395, 397, 402, 404, 407, 408, 409, 410, 411, 412, 414, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 445, 446, 459, 461, 477, 552, 553, 554, 560, 565, 566, 568, 633, 634, 659, 660, 661, 666, 667, 670, 698, 702, 703, 704, 712, 719, 723, 726, 729, 747, 748, 756, 762, 766, 784, 788, 789, 798, 805, 810, 820, 821, 823, 825, 840, 843, 854, 855, 857, 860, 863, 866, 867, 873], "weight1": 784, "weight2": 784, "weight_and_sum": 445, "weight_anim": 866, "weight_column": 560, "weight_decai": [723, 724, 808, 820, 855, 860], "weight_nam": [118, 119], "weighted_reduc": [831, 873], "weightedsageconv": 840, "weihua916": 165, "welcom": [21, 725, 867], "well": [4, 7, 21, 56, 96, 125, 126, 130, 173, 220, 236, 240, 330, 556, 637, 685, 689, 690, 691, 693, 699, 700, 705, 707, 714, 716, 718, 719, 729, 730, 732, 733, 792, 814, 823, 826, 832, 839, 843, 847, 850, 854, 857, 866, 867], "were": [137, 149, 180, 182, 185, 720, 819, 863, 867], "west": [693, 739, 779], "wh": [429, 431, 712, 756, 798], "wh_": [712, 756, 798], "what": [9, 21, 22, 240, 569, 722, 733, 734, 823, 825, 830, 832, 850, 854, 860, 863, 867], "whatev": 21, "wheel": [172, 820, 821, 822, 823, 825, 830, 831, 833, 836, 837], "when": [1, 4, 10, 14, 20, 21, 22, 31, 36, 41, 48, 51, 56, 57, 68, 70, 80, 89, 125, 130, 131, 146, 157, 158, 168, 169, 173, 191, 200, 210, 213, 214, 221, 222, 223, 224, 225, 232, 235, 239, 240, 241, 242, 246, 247, 249, 287, 290, 291, 292, 294, 295, 296, 299, 300, 305, 310, 312, 316, 317, 319, 330, 337, 341, 342, 343, 344, 355, 356, 390, 391, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 409, 410, 411, 414, 416, 417, 422, 424, 427, 431, 433, 434, 435, 436, 438, 478, 479, 542, 549, 559, 561, 564, 565, 566, 567, 568, 571, 572, 635, 637, 643, 645, 663, 671, 691, 696, 697, 698, 699, 703, 707, 716, 718, 719, 721, 724, 727, 728, 732, 823, 825, 833, 836, 837, 841, 842, 846, 850, 854, 856, 863, 867], "whenev": [710, 841], "whenver": 863, "where": [4, 9, 10, 14, 21, 26, 34, 45, 48, 53, 57, 58, 62, 63, 73, 79, 82, 100, 105, 120, 128, 129, 130, 131, 135, 136, 157, 159, 162, 171, 186, 210, 214, 215, 216, 219, 226, 227, 240, 243, 244, 250, 299, 307, 312, 321, 323, 334, 335, 336, 339, 340, 343, 344, 345, 346, 347, 354, 359, 390, 391, 392, 394, 395, 396, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 459, 476, 501, 502, 503, 549, 552, 560, 561, 562, 564, 567, 571, 572, 615, 616, 618, 628, 635, 647, 648, 660, 661, 664, 666, 669, 670, 671, 675, 676, 678, 680, 681, 682, 685, 691, 693, 697, 698, 699, 700, 702, 711, 714, 717, 728, 730, 731, 732, 733, 734, 796, 820, 821, 822, 823, 825, 832, 836, 837, 838, 839, 840, 841, 854, 855, 856, 857, 860, 863, 867, 872], "wherea": [856, 857], "whether": [4, 9, 10, 21, 48, 53, 54, 57, 58, 62, 63, 65, 66, 68, 117, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 166, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 210, 213, 214, 216, 219, 220, 226, 231, 234, 235, 236, 238, 240, 241, 242, 246, 287, 290, 291, 299, 300, 305, 307, 310, 311, 312, 317, 318, 335, 338, 346, 348, 354, 355, 356, 390, 399, 403, 404, 406, 407, 409, 410, 411, 415, 419, 421, 422, 432, 435, 438, 448, 454, 459, 478, 549, 561, 565, 566, 567, 568, 647, 648, 684, 687, 689, 694, 698, 699, 720, 721, 730, 733, 776, 780, 825, 835, 836, 837, 838, 841, 843, 856, 863, 867], "which": [0, 1, 4, 9, 10, 20, 21, 22, 32, 36, 41, 42, 51, 56, 61, 88, 92, 116, 120, 122, 130, 131, 140, 143, 146, 148, 158, 161, 162, 163, 169, 171, 178, 179, 180, 182, 183, 186, 188, 189, 190, 195, 197, 205, 210, 211, 212, 217, 219, 222, 223, 224, 225, 230, 231, 236, 240, 244, 245, 287, 289, 293, 295, 299, 302, 305, 307, 308, 310, 311, 312, 316, 317, 318, 321, 330, 336, 337, 340, 341, 342, 346, 347, 355, 359, 387, 390, 391, 393, 394, 396, 397, 398, 399, 401, 403, 406, 407, 409, 410, 411, 414, 417, 420, 422, 424, 428, 430, 432, 446, 447, 448, 449, 452, 455, 456, 460, 476, 477, 478, 542, 543, 550, 551, 558, 559, 560, 561, 562, 564, 567, 572, 576, 577, 614, 621, 628, 635, 636, 637, 642, 645, 647, 648, 651, 653, 658, 661, 666, 669, 670, 671, 675, 678, 683, 686, 687, 690, 691, 693, 695, 696, 698, 699, 700, 703, 704, 705, 706, 710, 711, 712, 715, 716, 717, 718, 719, 720, 721, 722, 724, 727, 728, 730, 731, 734, 798, 818, 819, 820, 825, 829, 832, 836, 837, 838, 840, 841, 846, 847, 850, 856, 857, 860, 863, 867, 872], "while": [5, 9, 22, 68, 73, 92, 114, 115, 147, 179, 197, 205, 210, 214, 240, 292, 299, 311, 322, 401, 402, 417, 428, 429, 430, 431, 432, 433, 448, 565, 567, 618, 687, 696, 697, 698, 699, 703, 711, 715, 724, 732, 823, 826, 833, 850, 856, 857, 863], "whitespac": 698, "whl": 825, "who": [21, 145, 159, 695, 714, 818, 850], "whole": [173, 210, 240, 669, 699, 710, 717, 719, 723, 727, 819, 856, 867], "whom": 145, "whose": [4, 10, 54, 116, 118, 119, 121, 125, 126, 131, 221, 240, 242, 299, 301, 302, 315, 336, 340, 343, 387, 428, 478, 479, 549, 561, 576, 577, 636, 659, 660, 661, 662, 666, 699, 714, 823, 856], "why": [22, 832, 857], "wi": 418, "wide": [1, 440, 691, 734, 838], "width": [856, 866], "wiki": [192, 850], "wikic": 192, "wikipedia": [134, 149, 182, 185, 192, 581, 583, 584, 591, 614, 615, 616, 839], "wildcard": 26, "win": [116, 636, 645], "window": [183, 207, 299, 302, 315, 847], "window_s": [385, 389], "wisconsin": 193, "wise": [4, 5, 13, 73, 113, 219, 220, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 394, 453, 553, 554, 574, 575, 602, 622, 647, 648, 697, 709, 710, 712, 783, 794, 798, 822, 841, 843, 857, 867], "wish": [21, 117, 130, 714, 716, 721, 730, 818], "with_label": [856, 860, 863], "within": [4, 20, 21, 161, 209, 287, 299, 302, 307, 312, 315, 355, 358, 385, 389, 428, 429, 430, 431, 432, 433, 435, 543, 549, 697, 712, 728, 804, 823, 856, 863, 867], "without": [5, 6, 21, 27, 28, 114, 115, 116, 131, 241, 242, 245, 246, 287, 291, 295, 299, 303, 305, 310, 317, 318, 326, 336, 417, 434, 436, 477, 550, 551, 554, 557, 565, 566, 567, 614, 615, 616, 628, 645, 673, 690, 691, 707, 710, 724, 732, 792, 832, 856, 860], "wm": 645, "wmt14": 867, "wn18": 191, "word": [21, 108, 135, 136, 137, 155, 180, 182, 184, 187, 193, 210, 213, 245, 387, 477, 642, 696, 838, 860, 863, 867], "word2vec": 159, "wordid": 860, "wordnet": 191, "work": [3, 4, 8, 9, 11, 21, 116, 118, 119, 188, 214, 216, 219, 295, 391, 403, 406, 407, 409, 410, 411, 414, 417, 424, 457, 560, 636, 660, 661, 662, 663, 664, 666, 667, 670, 688, 689, 700, 702, 714, 715, 717, 718, 729, 730, 734, 831, 839, 841, 843, 847, 856, 861, 863, 867, 870, 872, 873], "workaround": 857, "worker": [4, 188, 235, 292, 696, 700, 717, 742, 782, 785, 803, 847], "workflow": [838, 841], "workload": [13, 232, 239, 695, 699, 714, 727, 825, 847, 872], "workspac": [700, 744, 784, 785, 850], "workspace\ub294": 785, "workspace\uc758": 785, "world": [162, 164, 295, 699, 784, 832, 839, 863, 867], "world_siz": [831, 846, 872, 873], "would": [9, 21, 26, 89, 130, 131, 210, 214, 216, 219, 299, 304, 323, 354, 395, 403, 404, 407, 409, 410, 420, 423, 424, 442, 560, 565, 637, 647, 648, 711, 714, 716, 718, 720, 729, 730, 832, 840, 841, 843, 860, 863, 867], "wouldn": 863, "wrap": [131, 210, 211, 212, 290, 300, 304, 719, 722, 724, 808, 831, 846, 867, 872, 873], "wrapper": [8, 21, 22, 294, 296, 304, 319, 831, 846, 873], "writabl": 843, "write": [4, 21, 22, 290, 311, 320, 387, 569, 645, 654, 696, 699, 709, 715, 727, 730, 784, 820, 823, 828, 836, 837, 838, 841, 843, 844, 845, 856, 860, 863], "write_t": 699, "writeback": 645, "writeback_map": [111, 645], "writer": 134, "written": [9, 710, 824, 830, 831, 833, 856, 867], "wrong": [21, 424], "wu": 752, "wv": 867, "www": [162, 752, 820, 821, 822, 823, 830, 831, 833, 840, 847], "x": [5, 6, 9, 21, 34, 35, 93, 94, 100, 113, 122, 132, 133, 144, 170, 183, 184, 246, 343, 353, 385, 390, 392, 394, 396, 397, 398, 399, 405, 418, 419, 421, 424, 425, 427, 434, 435, 436, 437, 438, 439, 444, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 549, 571, 611, 618, 629, 669, 670, 683, 687, 699, 704, 705, 716, 718, 719, 721, 723, 724, 730, 733, 748, 749, 759, 760, 761, 762, 764, 770, 773, 789, 790, 801, 802, 804, 805, 807, 808, 814, 816, 819, 820, 821, 822, 823, 825, 830, 831, 833, 839, 850, 851, 854, 860, 863, 866, 867, 873], "x1": [343, 571, 610, 621, 825], "x2": [343, 571, 610, 621, 825], "x64": 819, "x86_64": 847, "x_": [343, 418, 434, 436, 502, 571, 574, 825], "x_0": 418, "x_1": [418, 825], "x_2": [418, 825], "x_c": 418, "x_dst": [387, 761, 804], "x_e": [503, 574], "x_i": [405, 414, 416, 418, 440, 669, 825, 867], "x_j": [405, 414, 825, 860, 867], "x_sign": 821, "x_size": 860, "x_src": 387, "x_type": 390, "x_u": [502, 503, 575, 709, 753, 794], "x_uv": 863, "x_v": [502, 503, 575, 709, 753, 794], "xavier": [386, 407, 409, 410, 423, 424], "xavier_normal_": 857, "xavier_uniform_": [10, 430, 432, 457, 723, 726, 766, 810, 855], "xcode": 819, "xeon": [724, 846], "xi": [245, 477, 821], "xlabel": 866, "xrightarrow": 651, "xtick": 866, "xuv": 863, "xv1": 825, "xv2": 825, "xw_t": 390, "xxx": [0, 698, 743, 784], "xxx_edg": [698, 784], "xxx_node": [698, 784], "xxx_note": 784, "xxx_stat": [698, 784], "xxx\ub294": 784, "y": [9, 21, 120, 184, 244, 245, 347, 385, 390, 428, 429, 446, 449, 459, 476, 477, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 704, 718, 719, 723, 724, 730, 748, 759, 761, 770, 789, 801, 804, 808, 814, 819, 821, 823, 825, 830, 831, 839, 841, 860, 866, 873], "y1": 9, "y_": [245, 343, 434, 436, 477, 571, 733, 773, 816, 841], "y_dst": 387, "y_hat": [716, 723, 822, 823, 831, 873], "y_i": [831, 873], "y_pred": 822, "y_true": 822, "y_u": [244, 347, 476], "y_v": [120, 244, 347, 476], "yaml": [148, 311, 316, 834], "yaml_cont": [836, 837], "yaml_data": 311, "yandex": 180, "ye": [860, 867], "year": [699, 702], "yellow": 832, "yelp": [162, 163, 194], "yet": [4, 717, 847], "yield": [220, 290, 291, 294, 296, 300, 319, 408, 418, 642, 643, 716, 721, 832, 833, 842, 857], "ying": 560, "yingtongd": 162, "yiran": 752, "yizhou": 72, "ylabel": 866, "you": [6, 9, 14, 21, 22, 26, 89, 114, 118, 119, 130, 131, 186, 210, 213, 214, 216, 217, 219, 287, 294, 295, 305, 310, 319, 320, 336, 418, 424, 564, 565, 566, 567, 637, 687, 690, 691, 704, 710, 715, 716, 717, 719, 720, 721, 729, 730, 733, 734, 737, 777, 818, 819, 821, 824, 825, 827, 830, 831, 832, 833, 835, 836, 837, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 855, 856, 857, 858, 860, 863, 864, 866, 867, 870, 872, 873], "your": [6, 8, 9, 21, 118, 119, 145, 164, 166, 175, 177, 178, 179, 183, 184, 305, 310, 687, 693, 696, 710, 714, 715, 717, 718, 719, 720, 725, 729, 730, 734, 779, 828, 832, 833, 838, 841, 844, 845, 847, 863, 867], "your_cod": 846, "yu": [854, 855, 856, 863], "yum": 819, "yyi": 0, "z": [9, 178, 395, 821, 856, 857, 867], "z2": 857, "z_": 359, "z_e": 574, "z_i": [393, 395, 857], "z_j": [393, 857], "z_list": 856, "z_v": [575, 856], "zachari": [167, 843], "zero": [4, 27, 28, 30, 43, 46, 70, 74, 89, 93, 103, 108, 113, 114, 115, 118, 119, 120, 122, 125, 130, 150, 178, 179, 210, 235, 240, 249, 299, 307, 312, 329, 344, 353, 391, 401, 403, 406, 407, 409, 410, 411, 414, 416, 417, 420, 424, 447, 451, 453, 457, 458, 459, 481, 482, 483, 484, 486, 487, 488, 489, 505, 507, 508, 509, 510, 513, 514, 515, 516, 521, 522, 523, 524, 527, 528, 529, 530, 559, 566, 567, 579, 580, 583, 584, 595, 596, 597, 599, 600, 601, 602, 603, 608, 610, 615, 616, 617, 618, 622, 624, 628, 630, 632, 635, 637, 643, 644, 645, 647, 648, 663, 671, 683, 685, 691, 696, 698, 699, 707, 717, 724, 727, 729, 730, 731, 742, 751, 759, 761, 769, 770, 782, 784, 792, 801, 804, 813, 814, 821, 825, 841, 843, 850, 856, 860, 863, 866, 867], "zero_grad": [385, 389, 428, 429, 430, 431, 432, 433, 695, 715, 716, 719, 721, 723, 724, 730, 732, 733, 734, 741, 759, 760, 762, 764, 770, 772, 773, 774, 781, 801, 802, 805, 807, 808, 814, 815, 816, 817, 820, 821, 822, 823, 830, 831, 833, 838, 840, 841, 842, 850, 851, 854, 855, 856, 857, 860, 872, 873], "zero_initi": 863, "zeros_lik": [759, 801, 851], "zhang": [752, 854, 855, 856, 857, 860, 863, 866, 867], "zhao": [860, 866], "zheng": [854, 855, 856, 857, 860, 863, 866, 867], "zhenkun": [317, 318], "zhiyu": 752, "zhiyuchen": 752, "zhjwy9343": 752, "zhou": [866, 867], "zihao": [860, 867], "zinc": 195, "zip": [165, 168, 172, 186, 690, 693, 718, 719, 723, 739, 777, 779, 820, 821, 823, 830, 831, 833, 838, 839, 840, 841, 842, 843, 846, 847, 850, 851, 854, 855, 856, 857, 860, 863, 866, 867, 872, 873], "zpve": [178, 179], "\u4e00\u4e2a\u4e8c\u5206\u56fe": 751, "\u4e00\u4e2a\u4ec5\u5e73\u8861\u56fe\u4e2d\u8282\u70b9": 743, "\u4e00\u4e2a\u53ef\u9009\u9879\u662f\u7528\u6237\u53ef\u4ee5\u6309\u7167\u4e0a\u9762\u7684\u793a\u4f8b\u68c0\u67e5\u4e0b\u8f7d\u540e\u6587\u4ef6\u7684sha": 737, "\u4e00\u4e2a\u540c\u6784\u56fe": 751, "\u4e00\u4e2a\u56fe\u6279\u6b21\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u4e00\u5f20\u5927\u56fe": 772, "\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e0c\u671b": 773, "\u4e00\u4e2a\u5b50\u56fe\u5bf9\u5e94\u4e00\u79cd\u5173\u7cfb": 751, "\u4e00\u4e2a\u5e94\u7528\u4e8e": 755, "\u4e00\u4e2a\u5f02\u6784\u56fe\u7531\u4e00\u7cfb\u5217\u5b50\u56fe\u6784\u6210": 751, "\u4e00\u4e2a\u5f02\u6784\u56fe\u793a\u4f8b": 751, "\u4e00\u4e2a\u6279\u6b21\u4e2d\u4e0d\u540c\u7684\u56fe\u662f\u5b8c\u5168\u5206\u5f00\u7684": 772, "\u4e00\u4e2a\u662f\u8fb9\u7684\u96c6\u5408": 746, "\u4e00\u4e2a\u6709\u6548\u7684\u56fe\u540d\u79f0\u5e94\u8be5\u4ec5\u5305\u542b\u5b57\u6bcd\u548c\u4e0b\u5212\u7ebf": 743, "\u4e00\u4e2a\u6b63\u6837\u672c\u56fe": 762, "\u4e00\u4e2a\u6d88\u606f\u4f20\u9012\u8fd0\u7b97\u53ef\u4ee5\u89c6\u4e3a\u4e00\u4e2a\u51fd\u6570": 771, "\u4e00\u4e2a\u7528\u4e8e\u6307\u5b9a": 754, "\u4e00\u4e2a\u7528\u4e8e\u6307\u793a\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7684\u5b57\u6bb5\u540d": 754, "\u4e00\u4e2a\u7528\u4e8e\u8282\u70b9\u5d4c\u5165": 742, "\u4e00\u4e2a\u76f4\u622a\u4e86\u5f53\u7684\u5b9e\u73b0\u65b9\u5f0f\u5982\u4e0b": 755, "\u4e00\u4e2a\u805a\u5408\u51fd\u6570\u548c\u4e00\u4e2a\u66f4\u65b0\u51fd\u6570": 754, "\u4e00\u4e2a\u8d1f\u6837\u672c\u56fe": 762, "\u4e00\u4e9b\u6700\u5e38\u89c1\u7684\u805a\u5408\u64cd\u4f5c\u5305\u62ec": 754, "\u4e00\u4e9b\u6a21\u5757\u53ef\u80fd\u4f1a\u4f7f\u7528\u66f4\u52a0\u590d\u6742\u7684\u805a\u5408\u51fd\u6570": 766, "\u4e00\u53f0\u673a\u5668\u53ef\u80fd\u540c\u65f6\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u8fdb\u7a0b": 741, "\u4e00\u662f\u8282\u70b9\u7684\u96c6\u5408": 746, "\u4e00\u6761\u8fb9": 746, "\u4e00\u6761\u94fe\u8def0": 747, "\u4e00\u6837": 742, "\u4e00\u6b21\u6027\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684": 770, "\u4e00\u76f4\u5230\u8f93\u5165": 758, "\u4e00\u79cd\u5b58\u50a8\u5f02\u6784\u56fe\u7684\u5e38\u89c1\u65b9\u6cd5\u662f\u5728\u4e0d\u540c\u7684csv\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 751, "\u4e00\u822c\u6765\u8bf4": 754, "\u4e00\u822c\u6d41\u7a0b\u662f": 772, "\u4e0a\u4e00\u8282\u4ecb\u7ecd\u4e86\u5982\u4f55\u4f7f\u7528\u591a\u5c42gnn\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 770, "\u4e0a\u56fe\u4e2d\u9690\u53bb\u4e86\u548c\u8ba1\u7b97\u4e0d\u76f8\u5173\u7684\u8fb9": 759, "\u4e0a\u7684\u5206\u5e03\u5f0f\u90bb\u5c45\u91c7\u6837\u63d0\u4f9b\u4e86": 742, "\u4e0a\u7684\u7279\u5f81\u4e3a": 753, "\u4e0a\u7684\u7684\u7279\u5f81\u4e3a": 753, "\u4e0a\u7684\u8282\u70b9": 759, "\u4e0a\u7684\u8bad\u7ec3\u53ea\u9700\u8981\u4f7f\u7528\u4e0a\u9762\u5b9a\u4e49\u7684\u6a21\u578b\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 774, "\u4e0a\u8c03\u7528\u7684\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570": 742, "\u4e0a\u8fd0\u884c": 742, "\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u7684for\u5faa\u73af\u4e3a\u5904\u7406\u5f02\u6784\u56fe\u8ba1\u7b97\u7684\u4e3b\u8981\u903b\u8f91": 768, "\u4e0a\u8ff0\u51fd\u6570\u7684\u6570\u5b66\u516c\u5f0f\u4e3a": 754, "\u4e0a\u9762\u4ee3\u7801\u91cc\u7684": 766, "\u4e0a\u9762\u7684dataloader\u4e00\u6b21\u8fed\u4ee3\u4f1a\u751f\u6210\u4e09\u4e2a\u8f93\u51fa": 764, "\u4e0a\u9762\u7684dgl": 764, "\u4e0a\u9762\u7684\u4ee3\u7801\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230": 737, "\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4e00\u4e2a": 737, "\u4e0a\u9762\u7684\u4ee3\u7801\u6267\u884c\u4e86\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408\u7684\u8ba1\u7b97": 767, "\u4e0b\u4f8b\u7684\u8f93\u51fa\u8282\u70b9\u5305\u542b\u4e86\u6ca1\u6709\u5165\u8fb9\u7684\u5b64\u7acb\u8282\u70b9": 759, "\u4e0b\u56fe\u663e\u793a\u4e86\u4ee5\u8282\u70b98\u4e3a\u79cd\u5b50\u8282\u70b9\u65f6\u7b2c\u4e8c\u4e2agnn\u5c42\u6240\u9700\u7684\u5757": 759, "\u4e0b\u56fe\u663e\u793a\u4e86\u8fd9\u4e9b\u7ec4\u4ef6\u53ca\u5b83\u4eec\u95f4\u7684\u76f8\u4e92\u4f5c\u7528": 741, "\u4e0b\u6587\u5c55\u793a\u4e86sageconv\u793a\u4f8b\u4e2d\u7684": 767, "\u4e0b\u6587\u662f\u5728\u4e00\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 773, "\u4e0b\u6587\u7ee7\u7eed\u4f7f\u7528\u4e0a\u8ff0\u7684\u4f8b\u5b50": 759, "\u4e0b\u7684\u76ee\u5f55": 737, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": [735, 752], "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e\u96c6\u7684url": 736, "\u4e0b\u8f7d\u6587\u4ef6": 737, "\u4e0b\u9762\u4e2d\u4f7f\u7528": 739, "\u4e0b\u9762\u4ee5": 739, "\u4e0b\u9762\u4f7f\u7528": 739, "\u4e0b\u9762\u4f8b\u5b50\u4e2d\u7684": 739, "\u4e0b\u9762\u5c55\u793a\u4e86\u5728\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1\u7684\u793a\u4f8b": 744, "\u4e0b\u9762\u662f\u4e00\u4e2a\u4f8b\u5b50": 751, "\u4e0b\u9762\u662f\u4e00\u4e2a\u5982\u4f55\u901a\u8fc7\u5bf9\u8282\u70b9\u7279\u5f81\u964d\u7ef4\u6765\u51cf\u5c11\u6d88\u606f\u7ef4\u5ea6\u7684\u793a\u4f8b": 755, "\u4e0b\u9762\u662f\u4f7f\u7528\u70b9\u79ef\u8ba1\u7b97\u8fb9\u5f97\u5206\u7684\u4f8b\u5b50": 773, "\u4e0b\u9762\u662f\u901a\u8fc7\u4f7f\u7528\u51c6\u786e\u6027\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u4e00\u4e2a\u4f8b\u5b50": 774, "\u4e0b\u9762\u7684\u4e24\u4e2a\u53c2\u6570\u4e13\u95e8\u7528\u4e8e\u5728\u90bb\u5c45\u91c7\u6837\u65f6\u5220\u9664\u5c0f\u6279\u6b21\u7684\u4e00\u4e9b\u8fb9\u548c\u5b83\u4eec\u7684\u53cd\u5411\u8fb9": 760, "\u4e0b\u9762\u7684\u4ee3\u7801\u5b9a\u4e49\u4e86\u4e00\u4e2a\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 774, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f": 763, "\u4e0b\u9762\u7684\u4ee3\u7801\u662f\u4e00\u4e2a\u5728dgl\u4e2d\u521b\u5efa\u5f02\u6784\u56fe\u7684\u793a\u4f8b": 751, "\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u4f7f\u7528\u4e86": 750, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\u5b9a\u4e49\u4e86\u4e00\u4e2a\u7c7b": 736, "\u4e0b\u9762\u7684\u4f8b\u5b50\u4f7f\u7528\u4e00\u4e2a\u62e5\u6709": 770, "\u4e0b\u9762\u7684\u4f8b\u5b50\u5c55\u793a\u4e86\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u4e00\u4e2a\u56fe": 773, "\u4e0b\u9762\u7684\u52a8\u753b\u5c55\u793a\u4e86\u8ba1\u7b97\u7684\u8fc7\u7a0b": 761, "\u4e0b\u9762\u7684\u6d41\u7a0b\u56fe\u5c55\u793a\u4e86\u8fd9\u4e2a\u6a21\u7248\u7684\u5de5\u4f5c\u65b9\u5f0f": 736, "\u4e0b\u9762\u7684\u793a\u4f8b\u663e\u793a\u4e86\u5982\u4f55\u4fdd\u5b58\u548c\u8bfb\u53d6\u56fe\u548c\u6570\u636e\u96c6\u4fe1\u606f\u7684\u5217\u8868": 740, "\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u8bad\u7ec3\u96c6\u62c6\u5206": 742, "\u4e0b\u9762\u7ed9\u51fa\u4e86\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5\u7684\u793a\u4f8b": 762, "\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e": [762, 764], "\u4e0d\u540c\u540d\u79f0\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u4e0d\u540c\u5f62\u72b6": 748, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u5355\u72ec\u7684id": 751, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e38\u5e38\u5177\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u5c5e\u6027": 756, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u5177\u6709\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6216\u5927\u5c0f": 751, "\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u6709\u5355\u72ec\u7684id": 751, "\u4e0d\u5fc5\u4f7f\u7528\u65b0\u7684\u8bed\u6cd5": 751, "\u4e0d\u662fpytorch\u7684nn\u6a21\u5757": 742, "\u4e0d\u80fd\u5c06\u7279\u5f81\u8d4b\u7ed9\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u5b50\u96c6": 748, "\u4e0d\u8fc7": 750, "\u4e0d\u8fc7\u5927\u90e8\u5206\u7684dgl": 750, "\u4e0e": [741, 742], "\u4e0e\u4e0d\u5b58\u5728\u7684\u8fb9": 762, "\u4e0e\u4e4b\u524d\u7684\u4efb\u52a1\u7c7b\u4f3c": 772, "\u4e0e\u540c\u6784\u56fe\u7684\u60c5\u51b5\u7c7b\u4f3c": 751, "\u4e0e\u5f02\u6784\u56fe\u76f8\u5173\u8054\u7684": 751, "\u4e0e\u6574\u56fe\u5206\u7c7b\u4e0d\u540c": 739, "\u4e0e\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92": 741, "\u4e0e\u6b64\u540c\u65f6": 743, "\u4e0e\u8fb9\u7279\u5f81": 754, "\u4e0e\u901a\u5e38\u4ee5\u5f20\u91cf\u4e3a\u53c2\u6570\u7684pytorch": 767, "\u4e0e\u91c7\u6837\u5668\u8fdb\u884c\u4ea4\u4e92\u4ee5\u83b7\u5f97\u5c0f\u6279\u6b21\u6570\u636e": 741, "\u4e0e\u96c6\u7fa4\u4e2d\u7684\u670d\u52a1\u5668\u8fde\u63a5\u5e76\u901a\u8fc7\u7f51\u7edc\u8bbf\u95ee\u5b83\u4eec": 742, "\u4e14\u53ea\u8003\u8651\u5e73\u5747\u805a\u5408\u51fd\u6570\u7684\u60c5\u51b5": 763, "\u4e14\u663e\u6027\u5b9a\u4e49\u4e86\u6570\u636e\u7c7b\u578b\u4ee5\u53ca\u5b58\u50a8\u7684\u8bbe\u5907\u4fe1\u606f": 750, "\u4e24\u4e2a\u51fd\u6570\u5728\u53d8\u6362\u540e\u7684\u56fe\u4e0a\u91cd\u65b0\u52a0\u5165\u6279\u6b21\u4fe1\u606f": 772, "\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684numpy\u6570\u7ec4\u4f1a\u5f88\u5927": 743, "\u4e24\u4e2a\u8282\u70b9\u4e4b\u95f4\u5b58\u5728\u8fb9\u7684\u8054\u7cfb": 760, "\u4e24\u540d\u4f5c\u8005\u53ef\u4ee5\u5728\u4e0d\u540c\u5e74\u4efd\u5171\u540c\u7f72\u540d\u6587\u7ae0": 746, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b": 770, "\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 770, "\u4e2a\u4eba\u59d3\u540d": 752, "\u4e2a\u4eba\u94fe\u63a5": 752, "\u4e2a\u5bf9\u5e94\u7684\u8d1f\u91c7\u6837\u6837\u672c": 773, "\u4e2a\u8282\u70b9\u6216\u8fb9": 750, "\u4e2a\u8282\u70b9\u7684\u56fe\u4e0a\u8fd0\u884c\u7684": 758, "\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 762, "\u4e2d": [737, 739, 740, 746, 747, 751, 764], "\u4e2d\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728\u6574\u56fe\u4e0a\u8bad\u7ec3\u4e00\u4e2a2\u5c42\u7684rgcn\u6a21\u578b": 764, "\u4e2d\u4ecb\u7ecd\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 769, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u65b9\u6cd5\u548c": 769, "\u4e2d\u4ecb\u7ecd\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236": 774, "\u4e2d\u521b\u5efa": 742, "\u4e2d\u53ef\u4ee5\u67e5\u770b\u5b8c\u6574\u7684\u4ee3\u7801": 739, "\u4e2d\u5904\u7406\u6bcf\u4e2a\u6570\u636e\u5b9e\u4f8b\u662f\u66f4\u9ad8\u6548\u7684\u65b9\u6cd5": 740, "\u4e2d\u5b58\u50a8\u7ed3\u679c": 754, "\u4e2d\u5b9a\u4e49\u7684": 770, "\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u96c6\u7684\u57fa\u7c7b": 736, "\u4e2d\u5b9e\u73b0\u4e86\u5e38\u7528\u7684\u6d88\u606f\u51fd\u6570\u548c\u805a\u5408\u51fd\u6570\u4f5c\u4e3a": 754, "\u4e2d\u5df2\u7ecf\u6709\u4e86": 774, "\u4e2d\u6240\u4ecb\u7ecd\u7684": 762, "\u4e2d\u6240\u8ff0\u7684\u5168\u56fe\u8bad\u7ec3": 758, "\u4e2d\u6240\u8ff0\u7684\u8fb9\u56de\u5f52\u6a21\u578b\u76f8\u540c": 773, "\u4e2d\u6240\u91c7\u6837\u7684\u8282\u70b9": 773, "\u4e2d\u627e\u5230": 739, "\u4e2d\u6307\u5b9a": 743, "\u4e2d\u6307\u5b9a\u66f4\u65b0\u51fd\u6570": 754, "\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 744, "\u4e2d\u6587\u7248": [688, 689, 690, 692, 693, 694, 695, 696, 701, 702, 703, 704, 705, 706, 707, 709, 710, 711, 712, 713, 714, 716, 718, 719, 720, 721, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734], "\u4e2d\u6587\u7248\u94fe\u63a5": 818, "\u4e2d\u662f\u5426\u5b58\u6709\u5904\u7406\u540e\u7684\u6570\u636e": 736, "\u4e2d\u67e5\u770b\u5f02\u6784\u56fe\u5377\u79ef": 774, "\u4e2d\u6807\u8bc6\u8282\u70b9\u6570\u636e": 742, "\u4e2d\u7684": 742, "\u4e2d\u7684\u4e00\u4e2a": 756, "\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20": 764, "\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9": 751, "\u4e2d\u7684\u4e00\u4e9b\u4ee3\u7801": 739, "\u4e2d\u7684\u4f8b\u5b50": 774, "\u4e2d\u7684\u505a\u6cd5\u7c7b\u4f3c": 774, "\u4e2d\u7684\u5206\u533a\u6570\u636e\u548c\u76f8\u5173\u6587\u4ef6": 744, "\u4e2d\u7684\u5b57\u6bb5\u540d": 754, "\u4e2d\u7684\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 772, "\u4e2d\u7684\u7279\u5f81\u6765\u52a0\u8f7d\u6807\u7b7e": 764, "\u4e2d\u7684\u8fb9": 751, "\u4e2d\u8282\u70b9\u7684\u96c6\u5408": 772, "\u4e2d\u95f4\u67d0\u4e00\u5c42\u5bf9\u5e94\u7684\u8fb9\u754c\u9700\u8981\u5305\u542b\u8be5\u5c42\u53ca\u6240\u6709\u540e\u7eed\u5c42\u8ba1\u7b97\u6d89\u53ca\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 759, "\u4e2d\u95f4\u6d88\u606f": 754, "\u4e3a\u4e86\u5728\u5206\u5e03\u5f0f\u8bad\u7ec3": 743, "\u4e3a\u4e86\u5728\u6bcf\u4e2a\u5206\u533a\u4e2d\u83b7\u5f97\u5e73\u8861\u7684\u5de5\u4f5c\u8d1f\u8f7d": 743, "\u4e3a\u4e86\u5904\u7406\u4f4d\u4e8e\u8fdc\u7a0b\u670d\u52a1\u5668\u6216\u672c\u5730\u78c1\u76d8\u4e0a\u7684\u56fe\u6570\u636e\u96c6": 736, "\u4e3a\u4e86\u5b8c\u6210\u5355\u4e2a\u56fe\u7684\u9884\u6d4b": 772, "\u4e3a\u4e86\u5b9e\u73b0\u8fd9\u4e00\u76ee\u7684": 751, "\u4e3a\u4e86\u5bf9\u8282\u70b9\u8fdb\u884c\u5206\u7c7b": 774, "\u4e3a\u4e86\u5e76\u884c\u5316\u8ba1\u7b97": 741, "\u4e3a\u4e86\u6307\u4ee3\u591a\u6761\u8fb9": 750, "\u4e3a\u4e86\u8bbe\u7f6e": 751, "\u4e3a\u4e86\u968f\u673a": 764, "\u4e3a\u4f8b": 739, "\u4e3a\u540e\u7eed\u5728\u56fe\u4e0a\u8fdb\u884c\u7684\u8ba1\u7b97\u4e0e\u5206\u6790\u7684\u6027\u80fd\u6539\u5584\u63d0\u4f9b\u53ef\u80fd": 739, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": [752, 758, 764], "\u4e3a\u5f02\u6784\u56fe\u4fee\u6539gnn\u6a21\u5757\u7684\u65b9\u6cd5\u662f\u7c7b\u4f3c\u7684": 763, "\u4e3a\u5f02\u6784\u56fe\u751f\u6210\u8fb9\u754c\u4e0e\u4e3a\u540c\u6784\u56fe\u751f\u6210\u8fb9\u754c\u6ca1\u6709\u4ec0\u4e48\u4e0d\u540c": 759, "\u4e3a\u63d0\u5347\u6570\u636e\u52a0\u8f7d\u901f\u5ea6": 772, "\u4e3a\u6709\u5411\u56fe": 759, "\u4e3a\u67d0\u4e00\u79cd\u8fb9\u7c7b\u578b": 773, "\u4e3a\u6b64": [759, 762], "\u4e3a\u7b80\u4fbf\u8d77\u89c1": 739, "\u4e3a\u7b80\u5355\u8d77\u89c1": 764, "\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0\u7684id": 743, "\u4e3b\u8981\u539f\u56e0\u662fpytorch": 742, "\u4e3b\u8981\u5e94\u7528\u573a\u666f\u662f\u8fd0\u884c\u91c7\u6837api\u4ee5\u652f\u6301\u5c0f\u6279\u91cf\u8bad\u7ec3": 742, "\u4e3b\u8ba1\u7b97\u673a": 744, "\u4e4b\u524d\u58f0\u660e\u5206\u5e03\u5f0f\u5d4c\u5165": 742, "\u4e4b\u524d\u88ab\u58f0\u660e": 742, "\u4e4b\u524d\u8c03\u7528": 742, "\u4e4b\u540e": 767, "\u4e4b\u95f4\u5206\u6570\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u4e0e": 773, "\u4e4b\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684": 773, "\u4e4b\u95f4\u7684\u5173\u7cfb": 746, "\u4e4b\u95f4\u7684\u5f97\u5206": 773, "\u4e4b\u95f4\u7684\u5f97\u5206\u8981\u9ad8\u4e8e": 773, "\u4e58\u4ee52\u5f97\u5230\u6700\u7ec8\u7ed3\u679c": 754, "\u4e5f\u53ef\u4ee5\u5728\u4e0d\u6d89\u53ca\u6d88\u606f\u4f20\u9012\u7684\u60c5\u51b5\u4e0b": 754, "\u4e5f\u53ef\u4ee5\u662f\u6709\u5411\u7684": 746, "\u4e5f\u5c06\u5728gpu\u4e0a": 749, "\u4e5f\u5c31\u662f\u8bf4": 742, "\u4e5f\u63d0\u4f9b\u4e24\u4e2a\u7ea7\u522b\u7684\u91c7\u6837api": 742, "\u4e5f\u63d0\u4f9b\u4e86": 742, "\u4e5f\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 760, "\u4e5f\u79f0\u4e3a": 754, "\u4e86\u89e3\u4e86\u4e0a\u8ff0\u8ba1\u7b97\u89c4\u5219\u540e": 772, "\u4e8c\u5206\u56fe\u662f\u4e00\u7c7b\u7279\u6b8a\u7684": 746, "\u4e8c\u5206\u56fe\u7684\u60c5\u51b5": 767, "\u4ea4\u53c9\u71b5\u635f\u5931": 773, "\u4eba\u4eec\u81ea\u7136\u4f1a\u60f3\u8981\u5728\u6a21\u578b\u5f00\u53d1\u4e2d\u4f7f\u7528\u5b83\u4eec": 771, "\u4ec5\u4ec5\u4fdd\u7559\u4e86\u8f93\u51fa\u8282\u70b9\u6240\u9700\u8981\u6536\u96c6\u6d88\u606f\u7684\u8fb9": 759, "\u4ec5\u5141\u8bb8\u4f7f\u7528\u6570\u503c\u7c7b\u578b": 748, "\u4ec5\u6709\u7684\u4ee3\u7801\u4fee\u6539\u51fa\u73b0\u5728\u7b2c4": 741, "\u4ecd\u7136\u5177\u6709\u76f8\u540c\u7684\u7ed3\u679c": 772, "\u4ece": [736, 759], "\u4ece\u4e0a\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230": 759, "\u4ece\u516c\u5f0f\u4e2d\u53ef\u4ee5\u770b\u51fa": 759, "\u4ece\u5185\u5b58\u89d2\u5ea6\u6765\u8bf4\u662f\u9ad8\u6548\u7684": 755, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": [739, 745, 750, 752], "\u4ece\u5de6\u81f3\u53f3": 772, "\u4ece\u6210\u5bf9\u7684\u8fb9": 747, "\u4ece\u7528\u4e8e\u56fe\u548c\u7a00\u758f\u77e9\u9635\u7684\u5916\u90e8python\u5e93": 747, "\u4ece\u76ee\u5f55": 740, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe\u6570\u636e": 747, "\u4ece\u800c\u4ea7\u751f\u5305\u542b\u8fb9\u5c0f\u6279\u6b21\u7684\u5b50\u56fe\u4ee5\u53ca\u4f9b\u4e0b\u6587\u4e2d\u6a21\u5757\u4f7f\u7528\u7684": 760, "\u4ece\u800c\u4ee5\u5c0f\u6279\u6b21\u904d\u5386\u6574\u4e2a\u56fe\u6570\u636e\u96c6": 772, "\u4ece\u800c\u51cf\u5c11\u4e86\u7528\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u63a8\u7406\u7684\u7f51\u7edc\u901a\u4fe1": 743, "\u4ece\u800c\u5b8c\u6210\u540e\u5411\u4f20\u64ad": 774, "\u4ece\u800c\u5bfc\u81f4\u591a\u6b21\u521b\u5efa\u548c\u5220\u9664": 742, "\u4ece\u800c\u8fdb\u4e00\u6b65\u52a0\u5feb\u8ba1\u7b97\u901f\u5ea6\u5e76\u8282\u7701\u5185\u5b58\u5360\u7528": 755, "\u4ece\u8f93\u51fa\u5f00\u59cb": 758, "\u4ee3\u7801\u4e2d\u7684\u6240\u6709\u6d88\u606f\u4f20\u9012\u5747\u4f7f\u7528": 767, "\u4ee3\u7801\u5b9e\u73b0\u7684\u552f\u4e00\u4e0d\u540c\u5728\u4e8e\u8c03\u7528": 760, "\u4ee3\u7801\u7684\u8be6\u7ec6\u89e3\u8bfb": 763, "\u4ee3\u7801\u91cc\u79fb\u9664\u4e86\u5f52\u4e00\u5316": 763, "\u4ee3\u8868\u8ba1\u7b97": 764, "\u4ee5\u4e0a3\u79cd\u56fe\u7c7b\u578b\u7684\u8ba1\u7b97\u65b9\u6cd5\u662f\u76f8\u540c\u7684": 767, "\u4ee5\u4e0a\u4e24\u4e2a\u5b9e\u73b0\u5728\u6570\u5b66\u4e0a\u662f\u7b49\u4ef7\u7684": 755, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u5f20\u91cf": 742, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e862\u4e2a\u8282\u70b9\u7279\u5f81": 748, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u6570\u636e\u52a0\u8f7d\u5668": 760, "\u4ee5\u4e0b\u4ee3\u7801\u521b\u5efa\u4e86\u4e00\u4e2apytorch\u7684": 764, "\u4ee5\u4e0b\u4ee3\u7801\u5728\u6ce8\u91ca\u91cc\u4fdd\u7559\u4e86\u6574\u56fe\u5b9e\u73b0\u7684\u8bed\u53e5": 763, "\u4ee5\u4e0b\u4ee3\u7801\u5757\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4f8b\u5b50": 771, "\u4ee5\u4e0b\u4ee3\u7801\u5c55\u793a\u4e86\u5982\u4f55\u5728": 737, "\u4ee5\u4e0b\u4ee3\u7801\u663e\u793a\u4e86\u5982\u4f55\u4e3a": 738, "\u4ee5\u4e0b\u4ee3\u7801\u6f14\u793a\u4e86\u5982\u4f55\u5bf9\u6bcf\u79cd\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a\u53d6\u5e73\u5747\u503c\u5e76\u6c42\u548c": 772, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u4e3a\u4ecescipy\u7a00\u758f\u77e9\u9635\u548cnetworkx\u56fe\u521b\u5efadgl\u56fe\u7684\u793a\u4f8b": 747, "\u4ee5\u4e0b\u4ee3\u7801\u7247\u6bb5\u5b9e\u73b0\u4e86\u901a\u8fc7\u5408\u5e76\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u5e76\u5c06\u5176\u6620\u5c04\u5230\u5168\u8fde\u63a5\u5c42\u6765\u9884\u6d4b\u8fb9\u7684\u5f97\u5206": 760, "\u4ee5\u4e0b\u4ee3\u7801\u751f\u6210\u4e86\u4e00\u4e2a\u968f\u673a\u56fe\u7528\u4e8e\u6f14\u793a\u8fb9\u5206\u7c7b": 770, "\u4ee5\u4e0b\u4ee3\u7801\u7528\u4e86": 770, "\u4ee5\u4e0b\u4ee3\u7801\u7531\u4e8e\u8f93\u51fa\u8282\u70b9\u672a\u8986\u76d6\u6240\u6709\u8fd9\u4e9b\u8282\u70b9": 759, "\u4ee5\u4e0b\u4ee3\u7801\u7ed9\u51fa\u4e86\u4e00\u4e2a\u7528\u5206\u5e03\u5f0f\u65b9\u5f0f\u8bad\u7ec3graphsage\u7684\u793a\u4f8b": 741, "\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4f7f\u7528\u4e86": 772, "\u4ee5\u4e0b\u5185\u5bb9\u8bf4\u660e\u4e86\u7ba1\u9053\u7684\u5de5\u4f5c\u65b9\u5f0f": 735, "\u4ee5\u4e0b\u56fe\u4e3a\u4f8b": 759, "\u4ee5\u4e0b\u5c0f\u8282\u5c06\u9010\u4e00\u4ecb\u7ecd\u8fd9\u4e9b\u6b65\u9aa4": 764, "\u4ee5\u4e0b\u6570\u636e\u52a0\u8f7d\u5668\u5c06\u4e3a\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9\u5747\u5300\u91c7\u68375\u4e2a\u8d1f\u6837\u672c\u7684\u76ee\u6807\u8282\u70b9": 762, "\u4ee5\u4e0b\u662f\u4e00\u4e2a\u4f8b\u5b50": 756, "\u4ee5\u4e0b\u793a\u4f8b\u5c06\u8bad\u7ec3\u96c6\u5185\u548c\u8bad\u7ec3\u96c6\u5916\u7684\u8282\u70b9\u770b\u4f5c\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 743, "\u4ee5\u4e0b\u9762\u7528\u4e8e\u5168\u56fe\u7684gnn\u6a21\u5757\u4e3a\u4f8b": 763, "\u4ee5\u4e0b\u9762\u7684\u81ea\u5b9a\u4e49\u56fe\u5377\u79ef\u6a21\u5757\u4ee3\u7801\u4e3a\u4f8b": 763, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u5b50\u56fe\u7ed3\u6784": 743, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8282\u70b9\u7279\u5f81": 743, "\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u5b58\u50a8\u7684\u8fb9\u7279\u5f81": 743, "\u4ee5\u4fbf\u533a\u5206": 760, "\u4ee5\u4fbf\u5b83\u4e5f\u53ef\u4ee5\u5728\u5f02\u6784\u56fe\u4e0a\u4f7f\u7528": 759, "\u4ee5\u4fbf\u6bcf\u4e2a\u8bad\u7ec3\u5668\u90fd\u53ef\u4ee5\u4f7f\u7528\u81ea\u5df1\u7684\u8bad\u7ec3\u96c6\u5b50\u96c6": 742, "\u4ee5\u50a8\u5b58\u56fe\u7684\u8282\u70b9\u548c\u8fb9\u7684\u5c5e\u6027": 748, "\u4ee5\u5145\u5206\u5229\u7528": 767, "\u4ee5\u5229\u7528\u66f4\u5927\u8303\u56f4\u7684\u90bb\u5c45\u4fe1\u606f": 774, "\u4ee5\u53ca": 741, "\u4ee5\u53ca\u4f7f\u7528\u8fd9\u4e9b\u7ec4\u4ef6\u53ef\u4ee5\u6267\u884c\u7684\u8ba1\u7b97": 745, "\u4ee5\u53ca\u53ef\u5b9a\u5236\u7684\u805a\u5408\u51fd\u6570\u548c\u975e\u7ebf\u6027\u51fd\u6570": 774, "\u4ee5\u53ca\u5982\u4f55\u7f16\u5199\u4e00\u4e2a\u81ea\u5b9a\u4e49\u7684\u5e26\u6709\u6d88\u606f\u4f20\u9012\u7684gnn\u6a21\u5757\u7684\u66f4\u591a\u7ec6\u8282": 774, "\u4ee5\u53ca\u60f3\u8981\u4e86\u89e3\u5982\u4f55\u5728\u5c0f\u6279\u6b21\u6570\u636e\u4e0a\u8fdb\u884c\u8bc4\u4f30\u548c\u63a8\u7406\u6a21\u578b\u7684\u7528\u6237": 758, "\u4ee5\u53ca\u628a\u5b83\u4eec\u4e4b\u95f4\u7684\u6240\u6709\u8fb9\u7684\u7c7b\u578b\u8fdb\u884c\u5408\u5e76\u540e\u7684\u5355\u4e00\u8fb9\u7c7b\u578b": 770, "\u4ee5\u53ca\u6765\u81ea\u8f93\u5165\u8282\u70b9\u7684\u8868\u793a\u5982\u4f55\u4f20\u64ad\u5230\u8f93\u51fa\u8282\u70b9": 764, "\u4ee5\u53ca\u7531\u5c0f\u6279\u6b21\u8fb9\u5bfc\u51fa\u7684\u539f\u59cb\u56fe\u7684\u5b50\u56fe": 760, "\u4ee5\u53ca\u8ba1\u7b97\u5176\u4e24\u7aef\u8282\u70b9\u8868\u793a\u6240\u9700\u7684\u5757\u5217\u8868": 760, "\u4ee5\u53ca\u8bf8\u5982\u7c7b\u522b\u6570": 736, "\u4ee5\u53ca\u8d1f\u91c7\u6837\u5668": 762, "\u4ee5\u53ca\u8fb9\u7684\u6807\u7b7e": 770, "\u4ee5\u591a\u5c42gcn\u4e3a\u4f8b": 764, "\u4ee5\u5bfc\u5165\u6570\u636e\u7684\u7279\u5b9a\u90e8\u5206": 739, "\u4ee5\u5c06\u4efb\u4f55\u8fb9\u754c\u8f6c\u6362\u4e3a\u5757": 759, "\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u7ec4\u8fb9\u8fdb\u884c\u8fed\u4ee3": 760, "\u4ee5\u5e76\u884c\u5316\u8ba1\u7b97\u548c\u7f51\u7edc\u901a\u4fe1": 741, "\u4ee5\u652f\u6301\u9700\u8981\u8282\u70b9\u5d4c\u5165\u7684\u76f4\u63a8": 742, "\u4ee5\u67e5\u770b\u5982\u4f55\u4ece\u5916\u90e8\u6570\u636e\u6e90\u6784\u5efa\u56fe\u7684\u5b8c\u6574\u6307\u5357": 739, "\u4ee5\u6982\u7387p\u968f\u673a\u9009\u62e9\u8fb9": 759, "\u4ee5\u7a81\u51fa\u5c55\u793a\u7528\u4e8e\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 739, "\u4ee5\u83b7\u5f97": 739, "\u4ee5\u8868\u683c\u683c\u5f0f\u50a8\u5b58\u8282\u70b9": 747, "\u4ee5\u8bbf\u95ee\u7fa4\u96c6\u4e2d\u7684\u5206\u533a\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 742, "\u4ee5\u8fdb\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 742, "\u4ee5\u8fdb\u884c\u8fed\u4ee3": 739, "\u4ee5\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 759, "\u4ee5\u907f\u514d\u91c7\u6837\u6240\u5e26\u6765\u7684\u968f\u673a\u6027": 761, "\u4ee5\u9632\u4f5c\u8005\u5728\u8fdc\u7a0b\u670d\u52a1\u5668\u4e0a\u66f4\u6539\u4e86\u6587\u4ef6": 737, "\u4efb\u4f55\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u4ee5\u7528\u4f5c\u8fb9\u754c": 759, "\u4efb\u4f55\u6d89\u53cagpu\u56fe\u7684\u64cd\u4f5c\u90fd\u662f\u5728gpu\u4e0a\u8fd0\u884c\u7684": 749, "\u4efb\u52a1": 773, "\u4efb\u52a1\u52a0\u8f7d\u6570\u636e\u96c6": 738, "\u4f1a\u5bf9\u8fd9\u4e2a\u5217\u8868\u8fdb\u4e00\u6b65\u805a\u5408": 768, "\u4f1a\u6839\u636eip\u914d\u7f6e\u6587\u4ef6\u627e\u5230\u5bf9\u5e94\u7684\u8ba1\u7b97\u673a\u6765\u5b58\u50a8\u56fe\u5206\u533a": 744, "\u4f1a\u7ed3\u5408\u805a\u5408\u540e\u7684\u6d88\u606f\u548c\u8282\u70b9\u672c\u8eab\u7684\u7279\u5f81\u6765\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 753, "\u4f1a\u805a\u5408\u8282\u70b9\u63a5\u53d7\u5230\u7684\u6d88\u606f": 753, "\u4f1a\u8c03\u7528\u7528\u6237\u6ce8\u518c\u7684": 768, "\u4f1a\u975e\u5e38\u6d88\u8017\u8d44\u6e90": 761, "\u4f20\u7ed9": 743, "\u4f46\u4e0d\u540c\u7684\u662f": 772, "\u4f46\u4e0d\u652f\u6301\u4e00\u4e9b\u8ba1\u7b97\u8fd0\u7b97\u7b26": 742, "\u4f46\u5176\u57fa\u672c\u601d\u60f3\u548c\u672c\u7ae0\u63cf\u8ff0\u7684\u6d41\u7a0b\u662f\u4e00\u81f4\u7684": 770, "\u4f46\u53ea\u5bf9\u4e00\u5c42\u8fdb\u884c\u8ba1\u7b97": 761, "\u4f46\u5b83\u6bcf\u6b21\u53ea\u4e3a\u4e00\u5c42\u8fdb\u884c\u91c7\u6837": 761, "\u4f46\u662f": [759, 767], "\u4f46\u662f\u4efb\u4f55\u62e5\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u8282\u70b9\u7684\u56fe\u90fd\u53ef\u7528\u4f5c\u8fb9\u754c": 759, "\u4f46\u6709\u65f6\u7528\u6237\u8fd8\u662f\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u91c7\u6837\u5668": 759, "\u4f46\u8981\u6ce8\u610f\u7684\u662f\u8fd9\u79cd\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe\u5bf9\u8c61": 738, "\u4f46\u8fd8\u662f\u6709\u4e00\u4e9b\u660e\u663e\u7684\u533a\u522b": 760, "\u4f4d\u4e8e\u8282\u70b9\u5217\u8868\u7684\u6700\u524d\u9762": 767, "\u4f4d\u6216": 750, "\u4f4d\u6574\u6570": 750, "\u4f4d\u7684\u6574\u6570\u4f5c\u4e3a\u8282\u70b9id\u548c\u8fb9id": 750, "\u4f5c\u4e3a\u4e00\u4e2a\u672a\u7ecf\u8fc7\u5f52\u4e00\u5316\u7684\u7c7b\u522b\u7684\u5206\u5e03": 770, "\u4f5c\u4e3a\u4f8b\u5b50\u6765\u4ecb\u7ecd\u5982\u4f55\u6784\u5efa\u7528\u6237\u81ea\u5df1\u7684dgl": 765, "\u4f5c\u4e3a\u5165\u53c2": 762, "\u4f5c\u4e3a\u53c2\u6570": 764, "\u4f5c\u4e3a\u6f14\u793a\u7684\u6837\u4f8b\u4ee3\u7801": 774, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e": 742, "\u4f5c\u4e3a\u8282\u70b9\u6570\u636e\u6216\u8fb9\u6570\u636e\u4e4b\u4e00\u6dfb\u52a0\u5230": 742, "\u4f5c\u4e3a\u8282\u70b9\u8868\u793a\u8ba1\u7b97\u6a21\u578b\u4ee5\u53ca\u524d\u4e00\u5c0f\u8282\u4e2d\u5b9a\u4e49\u7684": 770, "\u4f5c\u4e3a\u8f93\u5165": 759, "\u4f5c\u4e3a\u8fb9\u9884\u6d4b\u6a21\u578b": 770, "\u4f5c\u5f0a": 760, "\u4f7f\u5f97\u76f8\u90bb\u8282\u70b9": 739, "\u4f7f\u7528": 742, "\u4f7f\u7528dgl": 772, "\u4f7f\u7528int32\u6784\u5efa\u56fe": 750, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": [735, 752], "\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 754, "\u4f7f\u7528\u5e73\u5747\u8bfb\u51fa\u8ba1\u7b97\u56fe\u8868\u793a": 772, "\u4f7f\u7528\u5e95\u5c42api\u65f6": 742, "\u4f7f\u7528\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 774, "\u4f7f\u7528\u6240\u6709\u8282\u70b9": 774, "\u4f7f\u7528\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 774, "\u4f7f\u7528\u6709\u5411\u7684networkx\u56fe": 747, "\u4f7f\u7528\u6a21\u578b\u65f6\u53ea\u9700\u8981\u7b80\u5355\u5730\u5411\u6a21\u578b\u63d0\u4f9b\u4e00\u4e2a\u5305\u542b\u8282\u70b9\u7c7b\u578b\u548c\u6570\u636e\u7279\u5f81\u7684\u5b57\u5178": 770, "\u4f7f\u7528\u8be5\u540d\u79f0\u6765\u8bc6\u522b\u4e00\u4e2a\u5206\u5e03\u5f0f\u7684\u56fe": 743, "\u4f7f\u7528\u8d1f\u91c7\u6837\u65b9\u6cd5\u540e": 762, "\u4f7f\u7528\u8fd9\u6837\u7684": 742, "\u4f8b\u5982": [740, 742, 743, 744, 745, 746, 748, 751, 754, 757, 759, 760, 762, 763, 764, 766, 770, 771, 772, 773, 774], "\u4f8b\u5982nf": 744, "\u4f8b\u5982\u4e0d\u540c\u7c7b\u578b\u7684\u4eba\u7fa4\u793e\u533a": 772, "\u4f8b\u5982\u4f7f\u7528": 772, "\u4f8b\u5982\u5728\u4e0b\u56fe\u4e2d": 751, "\u4f8b\u5982\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b": 742, "\u4f8b\u5982\u60f3\u5728\u67d0\u4e00\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u5206\u7c7b\u4efb\u52a1": 770, "\u4f8b\u5982\u6c42\u548c\u4ee5\u53ca\u6c42\u5747\u503c": 742, "\u4f8b\u5982\u8282\u70b9\u548c\u8fb9\u7684\u6570\u91cf": 742, "\u4f9d\u6279\u6b21\u5bf9\u8282\u70b9\u8fdb\u884c\u8fed\u4ee3": 761, "\u4fdd\u5b58dglgraph\u5bf9\u8c61\u548c\u6807\u7b7e\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 740, "\u4fdd\u5b58\u5230\u672c\u5730\u78c1\u76d8\u548c\u4ece\u672c\u5730\u78c1\u76d8\u8bfb\u53d6\u5b83\u4eec": 740, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": [735, 736, 752], "\u4fdd\u5b58\u56fe\u548c\u6807\u7b7e": 740, "\u4fdd\u5b58\u8bad\u7ec3\u597d\u7684\u6a21\u578b": 774, "\u4fdd\u7559\u5173\u7cfb": 751, "\u4fee\u6539\u6a21\u578b\u8bad\u7ec3\u5faa\u73af\u90e8\u5206": 764, "\u501f\u7528\u6df1\u5ea6\u5b66\u4e60\u5b9e\u8df5\u4e2d\u5e38\u7528\u7684\u5c0f\u6279\u6b21\u8bad\u7ec3\u65b9\u6cd5": 772, "\u503c\u4e3a\u4e00\u7684\u5143\u7d20\u8868\u793a\u4e00\u6761\u8fb9": 771, "\u503c\u4e3a\u4f5c\u7528\u5728\u8be5\u5173\u7cfb\u4e0ann\u6a21\u5757\u5bf9\u8c61": 768, "\u503c\u5219\u4e3a\u5bf9\u5e94nn\u6a21\u5757\u7684\u81ea\u5b9a\u4e49\u53c2\u6570": 768, "\u503c\u662f\u8fd9\u79cd\u5173\u7cfb\u5bf9\u5e94": 756, "\u5047\u5b9agraph": 771, "\u5047\u8bbe\u6279\u6b21\u5927\u5c0f\u4e3a": 772, "\u5047\u8bbe\u6709\u5982\u4e0b\u7684\u8fb9\u754c": 759, "\u5047\u8bbe\u7ea2\u8272\u8282\u70b9\u4e3a\u9700\u8981\u66f4\u65b0\u7684\u76ee\u6807\u8282\u70b9": 759, "\u5047\u8bbe\u8282\u70b9": 753, "\u5047\u8bbe\u8981\u4f7f\u75282\u5c42gnn\u8ba1\u7b97\u79cd\u5b50\u8282\u70b98": 759, "\u5143\u7d20\u662f\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u8fb9\u7c7b\u578b": 772, "\u5143\u7ec4\u4e2d\u7684\u7b2c1\u4e2a\u5143\u7d20\u4e3a\u6e90\u8282\u70b9\u7279\u5f81": 767, "\u5148\u6765\u770b\u4e00\u4e0b": 759, "\u5168\u56fe": 774, "\u51713\u4e2a\u6210\u5458\u5c5e\u6027": 754, "\u5173\u4e8e": 748, "\u5173\u4e8edgl\u5185\u7f6e\u56fe\u5377\u79ef\u6a21\u5757\u7684\u5b8c\u6574\u5217\u8868": 774, "\u5173\u4e8e\u5185\u7f6e\u51fd\u6570\u7684\u5217\u8868": 754, "\u5173\u4e8e\u5185\u7f6e\u7684\u8d1f\u91c7\u6837\u65b9\u6cd5": 762, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": [745, 752], "\u5173\u4e8e\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u8fdb\u9636\u7528\u6cd5": 754, "\u5173\u6ce8": [751, 760], "\u5173\u7cfb": 760, "\u5173\u7cfb\u53ef\u4ee5\u662f\u65e0\u5411\u7684": 746, "\u5173\u7cfb\u8868\u793a\u4e3a": 767, "\u5176\u4e2d": [743, 750, 755, 759, 768, 772, 773], "\u5176\u4e2dxxx\u662f\u63d0\u4f9b\u7ed9\u5212\u5206api\u7684\u56fe\u7684\u540d\u79f0": 743, "\u5176\u4e2d\u4e00\u4e9b\u4ee3\u7801\u6f14\u793a\u4e86\u67e5\u8be2\u56fe\u7ed3\u6784\u7684\u90e8\u5206api\u7684\u4f7f\u7528\u65b9\u6cd5": 750, "\u5176\u4e2d\u4f7f\u7528\u4e86\u66f4\u591a\u7684\u6a21\u5757\u7ec4\u4ef6": 772, "\u5176\u4e2d\u5305\u542b\u6240\u6709\u8d1f\u91c7\u6837\u7684\u8282\u70b9\u5bf9\u4f5c\u4e3a\u8fb9": 773, "\u5176\u4e2d\u5305\u542b\u6709\u5173\u8f93\u5165\u56fe\u7684\u6240\u6709\u4fe1\u606f": 742, "\u5176\u4e2d\u5305\u542b\u7531\u8d1f\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u6240\u6709\u4e0d\u5b58\u5728\u7684\u8fb9": 762, "\u5176\u4e2d\u5305\u542b\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u5185\u6240\u6709\u7684\u8fb9": 762, "\u5176\u4e2d\u7684\u5de5\u4f5c\u8fdb\u7a0b": 742, "\u5176\u4e2d\u7684\u8fb9\u8fde\u63a5\u4e24\u7c7b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 746, "\u5176\u4e2d\u7b2c\u4e00\u4e2a\u53c2\u6570\u6307\u5b9a\u8fb9\u754c": 759, "\u5176\u4e2d\u7ea2\u8272\u548c\u7eff\u8272\u8282\u70b9": 759, "\u5176\u4e2d\u8282\u70b9\u548c\u8fb9\u53ef\u4ee5\u662f\u6709\u7c7b\u578b\u7684": 745, "\u5176\u4f59\u4ee3\u7801\u4fdd\u6301\u4e0d\u53d8": 741, "\u5176\u503c\u4e3a\u6bcf\u4e2a\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 768, "\u5176\u6570\u5b66\u5b9a\u4e49\u4e3a": 768, "\u5176\u6700\u7ec8\u8868\u793a\u5c06\u5728\u795e\u7ecf\u7f51\u7edc\u7684\u7b2c": 758, "\u5176\u6b21": 772, "\u5176\u6d88\u606f\u4f20\u9012\u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b": 759, "\u5176\u7ed3\u679c": 749, "\u5176\u7ed3\u679c\u662f": 761, "\u5176\u884c\u4e3a\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u975e\u5e38\u76f8\u4f3c": 742, "\u5176\u9002\u7528\u4e8e\u5355\u5411\u4e8c\u5206\u56fe": 763, "\u5176\u952e\u4e3a": 768, "\u5177\u4f53\u53ef\u4ee5\u53c2\u8003": 737, "\u5177\u4f53\u5982\u4e0b\u6240\u793a": 774, "\u5177\u4f53\u6765\u8bf4": [741, 761], "\u5177\u4f53\u884c\u4e3a\u5982\u4e0b": 751, "\u5177\u6709\u5bf9\u96c6\u7fa4\u5185\u6240\u6709\u5176\u4ed6\u8ba1\u7b97\u673a\u7684\u65e0\u5bc6\u7801ssh\u8bbf\u95ee\u6743\u9650": 744, "\u5177\u6709\u76f8\u540c\u7684\u952e": 768, "\u5185\u7f6e\u51fd\u6570": 754, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": [752, 753], "\u5185\u7f6e\u6d88\u606f\u51fd\u6570\u53ef\u4ee5\u662f\u4e00\u5143\u51fd\u6570\u6216\u4e8c\u5143\u51fd\u6570": 754, "\u5185\u7f6e\u7684dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u7684\u8f93\u5165\u56fe\u53ca\u7279\u5f81\u5fc5\u987b\u6ee1\u8db3\u4e0b\u5217\u60c5\u51b5\u4e4b\u4e00": 763, "\u518d\u5c06": 754, "\u518d\u6784\u5efa\u4e00\u4e2a\u5173\u7cfb\u5b57\u5178": 751, "\u518d\u6b21\u63d0\u9192\u4e0b": 764, "\u518d\u7531\u8fb9\u754c\u8f6c\u6362\u6210\u5757": 759, "\u51c6\u5907\u4e00\u4e2a\u6279\u6b21\u7684\u56fe": 772, "\u51fa\u4e8e\u5efa\u6a21\u7684\u76ee\u7684": 751, "\u51fd\u6570": [739, 750, 751, 754, 767, 772], "\u51fd\u6570\u4e2d\u5b9e\u73b0\u6570\u636e\u5904\u7406": 739, "\u51fd\u6570\u6267\u884c\u4e86\u5b9e\u9645\u7684\u6d88\u606f\u4f20\u9012\u548c\u8ba1\u7b97": 767, "\u51fd\u6570\u662f\u57fa\u4e8e\u5747\u5300\u5206\u5e03\u7684\u91c7\u6837\u51fd\u6570": 762, "\u51fd\u6570\u6765\u5728\u8fd0\u884c\u65f6\u62c6\u5206\u8bad\u7ec3": 742, "\u51fd\u6570\u6765\u5b9e\u73b0\u8fd9\u4e2a\u76ee\u7684": 750, "\u51fd\u6570\u6765\u6784\u5efa\u4e00\u4e2a": 750, "\u51fd\u6570\u7684\u5185\u5bb9\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a3\u9879\u64cd\u4f5c": 767, "\u51fd\u6570\u7684\u6700\u540e\u4e00\u90e8\u5206\u662f\u5728\u5b8c\u6210\u6d88\u606f\u805a\u5408\u540e\u66f4\u65b0\u8282\u70b9\u7684\u7279\u5f81": 767, "\u51fd\u6570\u7684\u8f93\u5165\u4e3a\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 770, "\u51fd\u6570\u7684\u8f93\u51fa\u4e0d\u4f1a\u5168\u4e3a0": 767, "\u51fd\u6570\u7684\u8f93\u51fa\u7ed3\u679c\u4e5f\u662f\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u7684\u5bf9\u8c61": 768, "\u51fd\u6570\u805a\u5408\u6765\u81ea\u591a\u4e2a\u5173\u7cfb\u7684\u7ed3\u679c": 768, "\u51fd\u6570\u8fd8\u4f7f\u75282\u4e2a\u989d\u5916\u7684\u5b57\u5178\u53c2\u6570": 768, "\u51fd\u6570\u8fdb\u884c\u89e3\u538b\u7f29": 737, "\u51fd\u6570\u9700\u8981\u5206\u522b\u5904\u7406\u4e0d\u540c\u7684\u8f93\u5165\u56fe\u7c7b\u578b": 768, "\u51fd\u6570\u9700\u8981\u5904\u7406\u8f93\u5165\u7684\u8bb8\u591a\u6781\u7aef\u60c5\u51b5": 767, "\u5206\u522b\u5728\u7b2c8": 748, "\u5206\u522b\u662f\u53ef\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u51fd\u6570\u4e0e\u805a\u5408\u51fd\u6570": 759, "\u5206\u522b\u662f\u77e9\u9635": 755, "\u5206\u522b\u7528\u4e8e\u4ee5\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u5f02\u6784\u56fe\u548c\u52a0\u8f7d\u5b83\u4eec": 751, "\u5206\u522b\u7528\u4e8e\u8bbf\u95ee\u6e90\u8282\u70b9": 754, "\u5206\u533a": [741, 743], "\u5206\u533a0\u7684\u6570\u636e": 743, "\u5206\u533a1\u7684\u6570\u636e": 743, "\u5206\u533a\u6570\u636e\u548c\u8bad\u7ec3\u811a\u672c\u90fd\u5df2\u88ab\u590d\u5236\u5230\u96c6\u7fa4\u6216\u5b58\u5728\u96c6\u7fa4\u4e2d\u6240\u6709\u8ba1\u7b97\u673a\u5747\u53ef\u8bbf\u95ee\u7684\u5168\u5c40\u5b58\u50a8\u7a7a\u95f4": 744, "\u5206\u533a\u914d\u7f6e\u6587\u4ef6\u4ee5\u53ca\u56fe\u5206\u533a": 744, "\u5206\u5e03\u5f0f\u5d4c\u5165\u5efa\u7acb\u5728\u5206\u5e03\u5f0f\u5f20\u91cf\u4e4b\u4e0a": 742, "\u5206\u5e03\u5f0f\u5d4c\u5165\u7684\u521b\u5efa\u4e0e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684\u521b\u5efa\u975e\u5e38\u76f8\u4f3c": 742, "\u5206\u5e03\u5f0f\u5f20\u91cf\u5fc5\u987b\u4e0e\u56fe\u7684\u8282\u70b9\u6216\u8fb9\u76f8\u5173\u8054": 742, "\u5206\u5e03\u5f0f\u6570\u636e\u52a0\u8f7d\u5668\u5177\u6709\u4e0epytorch": 742, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u548c\u72ec\u7acb\u6a21\u5f0f": 742, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": [741, 752], "\u5206\u5e03\u5f0f\u8bad\u7ec3": 752, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u5c06\u9700\u8981\u7528\u5230\u8fd9\u4e9b\u5206\u533a": 744, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": [741, 752], "\u5206\u5e03\u5f0f\u91c7\u6837\u548c\u6570\u636e\u5206\u5272": 742, "\u5206\u5e03\u5f0f\u91c7\u6837\u6a21\u5757\u9075\u5faa\u76f8\u540c\u7684\u8bbe\u8ba1": 742, "\u5206\u914did\u540e": 743, "\u5206\u914d\u7ed9": 742, "\u5207\u7247\u53d6\u8f93\u5165\u7279\u5f81\u7684\u524d\u51e0\u884c": 763, "\u5207\u7247\u884c\u6570\u53ef\u4ee5\u901a\u8fc7": 763, "\u5212\u5206api\u901a\u8fc7\u5728": 743, "\u5212\u5206\u6216\u7279\u5f81\u5f52\u4e00\u5316\u7b49\u64cd\u4f5c\u5efa\u8bae\u5728": 736, "\u5212\u5206\u63a9\u7801": 739, "\u5217\u8868": 738, "\u5219": 742, "\u5219dgl\u4f1a\u81ea\u52a8\u5c06\u8f93\u5165\u8282\u70b9\u7279\u5f81\u524d\u4e00\u90e8\u5206\u8bbe\u4e3a\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 763, "\u5219dgl\u5141\u8bb8\u4f7f\u7528": 751, "\u5219\u4e0d\u9700\u8981\u6307\u5b9a\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b": 751, "\u5219\u53ea\u9700\u8981\u6309\u7167\u5982\u4e0b\u7684\u65b9\u6cd5\u91cd\u5199forward\u51fd\u6570": 763, "\u5219\u53ef\u4ee5\u5b9e\u73b0\u81ea\u5df1\u7684\u6d88\u606f\u6216\u805a\u5408\u51fd\u6570": 754, "\u5219\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u65b9\u5f0f\u7b80\u5355\u5730\u5b9a\u4e49\u91c7\u6837\u5668": 759, "\u5219\u53ef\u4ee5\u6dfb\u52a0\u53c2\u6570": 739, "\u5219\u53ef\u4ee5\u901a\u8fc7": 764, "\u5219\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u76f4\u63a5\u8bfb\u53d6\u5757\u7684\u8f93\u5165\u548c\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 759, "\u5219\u53ef\u4ee5\u901a\u8fc7\u5b9e\u73b0\u51fd\u6570": 737, "\u5219\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95ee": 764, "\u5219\u56fe\u8bfb\u51fa\u7684\u5f20\u91cf\u5f62\u72b6\u4e3a": 772, "\u5219\u5b83\u4e5f\u4f1a\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55": 737, "\u5219\u6307\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u7ed3\u679c": 768, "\u5219\u6a21\u578b\u5728\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3\u65f6\u53ea\u9700\u505a\u5f88\u5c0f\u7684\u8c03\u6574": 764, "\u5219\u7528\u6237\u53ef\u4ee5\u6307\u5b9a\u8fb9\u7c7b\u578b\u53ca\u5176\u53cd\u5411\u8fb9\u7c7b\u578b\u4e4b\u95f4\u7684\u6620\u5c04": 760, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u4e00\u4e2a\u5355\u5411\u4e8c\u5206\u56fe": 763, "\u5219\u8f93\u5165\u56fe\u5fc5\u987b\u662f\u540c\u6784\u56fe": 763, "\u5219\u8fb9\u662f\u65e0\u5411\u7684": 746, "\u5219\u8fb9\u662f\u6709\u5411\u7684": 746, "\u5219\u901a\u5e38\u4e0d\u9700\u8981\u8fdb\u884c\u8ba1\u7b97\u7cbe\u786e\u7684\u79bb\u7ebf\u63a8\u65ad": 761, "\u5219\u9700\u8981\u521b\u5efa\u4e24\u4e2a\u4f18\u5316\u5668": 742, "\u5219\u9ed8\u8ba4\u503c\u4e3a": 744, "\u521b\u5efa": 739, "\u521b\u5efa\u4e00\u4e2a": 750, "\u521b\u5efa\u4e00\u4e2a\u5177\u67093\u79cd\u8282\u70b9\u7c7b\u578b\u548c3\u79cd\u8fb9\u7c7b\u578b\u7684\u5f02\u6784\u56fe": 751, "\u521b\u5efa\u5206\u5e03\u5f0f\u56fe\u5bf9\u8c61": 741, "\u521b\u5efa\u5d4c\u5165\u65f6": 742, "\u521b\u5efa\u800c\u6765": 747, "\u521b\u5efa\u91c7\u6837\u5668": 741, "\u521b\u5efa\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u793a\u4f8b": 739, "\u521d\u59cb\u5316api\u5e94\u6309\u4ee5\u4e0b\u987a\u5e8f\u8c03\u7528": 742, "\u521d\u59cb\u5316dgl\u7684\u5206\u5e03\u5f0f\u6a21\u5757": 741, "\u521d\u59cb\u5316\u53c2\u6570": 766, "\u521d\u59cb\u56fe\u548c\u8981\u8ba1\u7b97\u8868\u793a\u7684\u8282\u70b9": 759, "\u5220\u9664\u5c0f\u6279\u6b21\u4e2d\u7684\u8fb9\u53ca\u5176\u53cd\u5411\u8fb9\u7684\u65b9\u6cd5\u5982\u4e0b": 760, "\u5229\u7528\u8282\u70b9\u81ea\u8eab\u7684\u7279\u5f81\u548c\u5176\u90bb\u8282\u70b9\u53ca\u8fb9\u7684\u7279\u5f81\u6765\u8ba1\u7b97\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 774, "\u5229\u7528\u8fd9\u4e9b\u4f18\u5316\u7684\u4e00\u4e2a\u5e38\u89c1\u5b9e\u8df5\u662f\u901a\u8fc7\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 755, "\u5230": [750, 770], "\u524d\u8005\u5728": 742, "\u524d\u9762\u7ae0\u8282\u91cc\u7ed9\u51fa\u4e86\u4ee5\u4e0b\u7528\u5728\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 759, "\u5269\u4f59\u90e8\u5206\u7684\u8bad\u7ec3\u4ee3\u7801\u548c\u540c\u6784\u56fe\u4ee3\u7801\u76f8\u540c": 772, "\u52a0\u6743\u7684": 746, "\u52a0\u6cd5\u53ef\u4ee5\u901a\u8fc7dgl\u7684\u5185\u7f6e\u51fd\u6570": 755, "\u52a0\u8f7d": 738, "\u5305\u542b\u4e24\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b": 763, "\u5305\u542b\u4e86\u6bcf\u4e2agnn\u5c42\u8981\u8ba1\u7b97\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u51fa": 764, "\u5305\u542b\u4e86\u96c6\u7fa4\u4e2d\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 744, "\u5305\u542b\u591a\u4e2a\u4e0e\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u7c7b": 741, "\u5305\u542b\u90bb\u5c45\u91c7\u6837\u548c\u6d88\u606f\u4f20\u9012": 761, "\u5305\u62ec": [741, 747, 767], "\u5305\u62ec\u4f46\u4e0d\u9650\u4e8e": 773, "\u5305\u62ec\u5206\u533a\u4e2d\u7684\u56fe\u7ed3\u6784": 742, "\u5305\u62ec\u81ea\u5faa\u73af\u7684\u8fb9": 746, "\u5305\u62ec\u8bbf\u95ee\u8282\u70b9": 742, "\u5305\u63d0\u4f9b\u4e86\u7528\u4e8e\u4e0b\u8f7d\u548c\u5904\u7406ogb\u6570\u636e\u96c6\u5230": 738, "\u533a\u522b\u53ea\u5728\u4e8e\u8282\u70b9\u88ab\u5212\u5206\u4e3a\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 763, "\u5355\u5411\u4e8c\u5206\u56fe": 763, "\u5355\u72ec\u8c03\u7528\u9010\u8fb9\u8ba1\u7b97": 754, "\u5373": [755, 759, 771], "\u5373\u4e00\u7ec4\u673a\u5668": 741, "\u5373\u4efb\u610f\u4e24\u4e2a\u56fe\u4e4b\u95f4\u6ca1\u6709\u8fb9\u8fde\u63a5": 772, "\u5373\u4f7f": 742, "\u5373\u6267\u884c": 755, "\u5373\u6839\u636e\u7ed3\u6784\u548c\u6574\u4f53\u4fe1\u606f\u5bf9\u56fe\u8fdb\u884c\u5206\u7c7b": 772, "\u5373\u6b63\u786e\u7684\u6807\u6ce8": 774, "\u5373\u6bcf\u4e2a\u884c\u5207\u7247\u50a8\u5b581\u4e2a\u8282\u70b9\u62161\u6761\u8fb9\u7684\u7279\u5f81": 748, "\u5373\u8282\u70b94": 759, "\u5373\u8fb9": 750, "\u5373\u9884\u6d4b\u4efb\u52a1\u6570": 739, "\u539f\u5219\u662f\u5c06": 763, "\u539f\u56e0\u662f\u6d88\u606f\u4f20\u9012\u540e\u7684\u7279\u5f81\u7ec4\u5408\u9700\u8981\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u8282\u70b9\u8868\u793a": 759, "\u539f\u56e0\u662f\u8fd9\u9700\u8981\u4e3a\u6bcf\u4e00\u5c42\u4e0a\u7684\u6bcf\u4e2a\u8282\u70b9\u8ba1\u7b97\u8868\u793a": 761, "\u539f\u56fe\u4e0a\u7684\u5176\u4ed6\u8282\u70b9\u662f\u4e0d\u53c2\u4e0e\u8ba1\u7b97\u7684": 759, "\u539f\u59cb\u7279\u5f81\u5728cpu\u4e0a": 749, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8282\u70b9id": 751, "\u539f\u59cb\u7684\u7279\u5b9a\u7c7b\u578b\u8fb9id": 751, "\u539f\u59cb\u7684\u8282\u70b9\u6216\u8fb9\u7684\u7c7b\u578b\u548c\u5bf9\u5e94\u7684id\u88ab\u5b58\u50a8\u5728": 751, "\u539f\u59cb\u8282\u70b9\u7c7b\u578b": 751, "\u539f\u59cb\u8fb9\u7c7b\u578b": 751, "\u53c2\u6570": 768, "\u53c2\u8003\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u7684\u7b2c16\u548c18\u884c": 748, "\u53c2\u8003\u624b\u518c\u63d0\u4f9b\u4e86\u8be5\u7528\u6cd5\u7684\u66f4\u591a\u7ec6\u8282": 747, "\u53c2\u8003\u7528\u6237\u6307\u5357": 756, "\u53c2\u89c1": [754, 763], "\u53cc\u7cbe\u5ea6\u6d6e\u70b9\u578b\u548c\u6574\u578b": 748, "\u53cd\u5411\u8fb9\u901a\u5e38\u5177\u6709\u4e0e\u6b63\u5411\u8fb9\u672c\u8eab\u4e0d\u540c\u7684\u8fb9\u7c7b\u578b": 760, "\u53d6\u5e73\u5747\u503c": 772, "\u53d8\u91cf": 771, "\u53e6\u4e00\u4e2a\u5e94\u7528\u4e8e": 755, "\u53e6\u4e00\u4e2a\u7528\u4e8e\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 742, "\u53e6\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 749, "\u53e6\u5916": [742, 744, 755], "\u53e6\u89c1": 747, "\u53ea\u4f7f\u7528": 751, "\u53ea\u662f\u8fd9\u91cc\u4f7f\u7528\u4e86\u4e00\u4e2a\u5305\u62ec\u8282\u70b9\u8868\u793a\u7684\u5b57\u5178\u6765\u8ba1\u7b97\u9884\u6d4b\u503c": 774, "\u53ea\u8981\u4f7f\u8fd4\u56de\u7684\u56fe\u5177\u6709\u4e0e\u521d\u59cb\u56fe\u76f8\u540c\u7684\u8282\u70b9": 759, "\u53ea\u9700\u8981\u6309\u4e0b\u4f8b\u7f16\u5199\u4ee3\u7801": 770, "\u53ea\u9700\u8981\u8282\u70b94": 759, "\u53ea\u9700\u8981\u9884\u6d4b\u6bcf\u4e2a\u8fb9\u7684\u6807\u91cf\u5206\u6570\u800c\u4e0d\u662f\u7c7b\u522b\u7684\u6982\u7387\u5206\u5e03": 762, "\u53ef\u4ee5\u4ece\u5916\u90e8\u6765\u6e90\u6784\u9020\u4e00\u4e2a": 747, "\u53ef\u4ee5\u4f7f\u7528": [750, 759], "\u53ef\u4ee5\u4f7f\u7528\u4e8c\u5206\u56fe\u8868\u793a": 746, "\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\u5c06\u4e0a\u8ff0\u8fb9\u754c\u8f6c\u6362\u4e3a\u8f93\u51fa\u8282\u70b9\u4e3a8\u7684\u5757": 759, "\u53ef\u4ee5\u4f7f\u7528\u7c7b\u4f3c\u4ee5\u4e0b\u4ee3\u7801\u7684\u65b9\u6cd5\u83b7\u53d6\u5355\u4e2a\u56fe\u6570\u636e\u96c6\u7684\u56fe\u6570\u636e": 769, "\u53ef\u4ee5\u5148\u62bd\u53d6\u5f02\u6784\u56fe\u7684\u8fb9\u7c7b\u578b\u5b50\u56fe": 751, "\u53ef\u4ee5\u5148\u901a\u8fc7\u60f3\u8981\u56ca\u62ec\u7684\u8282\u70b9\u7f16\u53f7\u521b\u5efa\u4e00\u4e2a\u5b50\u56fe": 757, "\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5982\u4e0b\u7684\u5757": 759, "\u53ef\u4ee5\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u8fd0\u884c": 742, "\u53ef\u4ee5\u5982\u4e0b\u5b9a\u4e49\u94fe\u63a5\u9884\u6d4b\u6a21\u578b": 762, "\u53ef\u4ee5\u5b8c\u6210\u4e00\u8f6e\u6d88\u606f\u4f20\u9012\u8ba1\u7b97": 774, "\u53ef\u4ee5\u5c06\u5176\u6309\u4ee5\u4e0b\u65b9\u5f0f\u4fee\u6539\u4ee5\u652f\u6301\u8fb9\u6743\u91cd": 771, "\u53ef\u4ee5\u5c06\u8be5\u7c7b\u578b\u6570\u636e\u52a0\u8f7d\u5230python\u5bf9\u8c61": 747, "\u53ef\u4ee5\u5f97\u5230\u591a\u5f20\u7528\u4e8e\u5206\u7c7b\u7684\u56fe": 772, "\u53ef\u4ee5\u627e\u5230": 767, "\u53ef\u4ee5\u63a5\u53d7\u975e\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570": 749, "\u53ef\u4ee5\u63d0\u9ad8\u8282\u70b9": 739, "\u53ef\u4ee5\u662f\u5f02\u6784\u56fe\u6216\u6765\u81ea\u5f02\u6784\u56fe\u7684\u5b50\u56fe\u533a\u5757": 768, "\u53ef\u4ee5\u7528\u4e8e\u521d\u59cb\u5316\u5206\u5e03\u5f0f\u6a21\u5757": 742, "\u53ef\u4ee5\u7528\u6765\u8bbf\u95ee\u8282\u70b9\u6536\u5230\u7684\u6d88\u606f": 754, "\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627f": 737, "\u53ef\u4ee5\u8ba9\u7528\u6237\u4e0d\u7528\u4e00\u6b21\u6027\u628a\u6240\u6709\u8282\u70b9\u7279\u5f81\u62f7\u8d1d\u5230gpu\u4e0a": 758, "\u53ef\u4ee5\u901a\u8fc7": 759, "\u53ef\u4ee5\u901a\u8fc7\u540d\u79f0\u552f\u4e00\u6807\u8bc6": 742, "\u53ef\u4ee5\u901a\u8fc7\u5806\u53e0\u56fe\u5377\u79ef\u6a21\u5757\u6765\u5b9e\u73b0\u8fd9\u79cd\u7f51\u7edc\u67b6\u6784": 774, "\u53ef\u4ee5\u901a\u8fc7\u7c7b\u4f3c": 770, "\u53ef\u4ee5\u9075\u5faa\u76f8\u540c\u7684\u539f\u7406\u6765\u6784\u5efa\u56fe": 747, "\u53ef\u4ee5\u91cd\u5199\u4e0a\u9762\u7684": 759, "\u53ef\u547d\u540d\u7684\u7279\u5f81": 748, "\u53ef\u5c06\u6570\u636e\u548c\u8ba1\u7b97\u540c\u65f6\u5206\u5e03\u5728\u4e00\u7ec4\u8ba1\u7b97\u8d44\u6e90\u4e2d": 741, "\u53ef\u5c06\u6570\u636e\u590d\u5236\u5230\u96c6\u7fa4\u7684\u8ba1\u7b97\u673a\u4e0a": 741, "\u53ef\u6309\u4e0b\u9762\u7684\u4ee3\u7801\u5bf9\u6bcf\u4e00\u6761\u8fb9\u8ba1\u7b97\u5b83\u7684\u4e24\u7aef\u8282\u70b9\u9690\u85cf\u8868\u793a\u7684\u70b9\u79ef\u6765\u4f5c\u4e3a\u5206\u6570": 770, "\u53ef\u80fd\u4f1a\u53d1\u73b0\u8fd9\u4e9b\u5de5\u4f5c\u7684\u60f3\u6cd5\u90fd\u5f88\u7c7b\u4f3c": 773, "\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u4e0d\u540c\u7ef4\u5ea6\u7684\u8868\u793a\u6765\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u5efa\u6a21": 756, "\u53ef\u9009": [735, 743, 752], "\u53ef\u907f\u514d\u8be5\u884c\u4e3a": 747, "\u5404\u79cd\u6570\u636e\u683c\u5f0f": 747, "\u5408\u5e76\u6210\u4e00\u79cd\u8fb9\u7684\u56fe": 770, "\u540c\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u53ef\u4ee5\u6709\u591a\u6761": 746, "\u540c\u65f6": [750, 759], "\u540c\u65f6dgl\u4e5f\u5efa\u8bae\u5b9e\u73b0\u4fdd\u5b58\u548c\u5bfc\u5165\u51fd\u6570": 736, "\u540c\u65f6\u4e5f\u652f\u6301\u8ba9\u7528\u6237\u81ea\u5b9a\u4e49\u91c7\u6837\u7b56\u7565": 758, "\u540c\u65f6\u5c06\u8fb9id\u6620\u5c04\u5230\u5176\u53cd\u5411\u8fb9id": 760, "\u540c\u65f6\u5efa\u7acb\u53cd\u5411\u8fb9": 770, "\u540c\u65f6\u7701\u7565\u4e86\u8be6\u7ec6\u7684\u6570\u636e\u5904\u7406\u4ee3\u7801\u4ee5\u7a81\u51fa\u5c55\u793a\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5173\u952e\u90e8\u5206": 739, "\u540c\u6784\u56fe": 767, "\u540c\u6784\u56fe\u548c\u4e8c\u5206\u56fe\u53ea\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5f02\u6784\u56fe": 751, "\u540c\u6784\u56fe\u548c\u5757": 763, "\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e4b\u95f4\u552f\u4e00\u7684\u5b9e\u73b0\u5dee\u5f02\u662f\u540e\u8005\u9700\u8981\u7528": 762, "\u540c\u6784\u56fe\u7684\u60c5\u51b5": 767, "\u540c\u6784\u7684": 746, "\u540c\u6837": [742, 764], "\u540c\u6837\u5730": 770, "\u540c\u6837\u7684\u65b9\u6cd5\u4e5f\u53ef\u4ee5\u88ab\u7528\u4e8e\u8ba1\u7b97\u4efb\u4f55\u8282\u70b9\u7684\u9690\u85cf\u8868\u793a": 770, "\u540d\u79f0\u5c31\u5f88\u6709\u7528": 742, "\u540e": 772, "\u540e\u4e00\u79cd\u65b9\u6cd5\u6548\u7387\u9ad8\u5f97\u591a": 755, "\u540e\u7eed\u7ae0\u8282\u7684\u5185\u5bb9\u5747\u5047\u8bbe\u7528\u6237\u5df2\u7ecf\u51c6\u5907\u597d\u4e86\u56fe\u548c\u8282\u70b9": 769, "\u540e\u8005\u53ef\u4ee5\u4ee5\u5c0f\u6279\u6b21\u7684\u5f62\u5f0f\u5bf9\u4e00\u4e2a\u8282\u70b9\u7684\u96c6\u5408\u8fdb\u884c\u8fed\u4ee3": 764, "\u540e\u8005\u652f\u6301\u89e3\u538b\u7f29zip\u6587\u4ef6": 737, "\u5411\u524d": 760, "\u5411\u540e": 760, "\u5411\u91cf\u6216\u591a\u7ef4\u5f20\u91cf": 748, "\u5426\u5219": 760, "\u5426\u5219\u7528\u6237\u9700\u8981\u81ea\u5df1\u5b9e\u73b0": 737, "\u542f\u52a8\u811a\u672c\u4e2d\u6307\u5b9a\u7684\u5de5\u4f5c\u7a7a\u95f4": 744, "\u542f\u52a8\u811a\u672c\u4f1a\u5728\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u6307\u5b9a\u6570\u91cf\u7684\u8bad\u7ec3\u4efb\u52a1": 744, "\u542f\u52a8\u811a\u672c\u5728\u540e\u53f0\u542f\u52a8\u670d\u52a1\u5668": 742, "\u5434\u7d2b\u8587": 752, "\u548c": [736, 739, 740, 741, 742, 743, 745, 746, 747, 748, 750, 751, 754, 755, 756, 759, 760, 761, 765, 766, 767, 768, 770, 772, 773, 774], "\u548c1\u4e2a\u8fb9\u7279\u5f81": 748, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 761, "\u548c\u4e00\u4e2a\u5185\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 761, "\u548c\u4e24\u79cd\u7c7b\u578b\u7684\u8fb9": 751, "\u548c\u4ece\u4e00\u4e2a\u4efb\u610f\u7684\u566a\u58f0\u5206\u5e03": 773, "\u548c\u5305\u542b\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u5757": 763, "\u548c\u5b50\u56fe\u5757": 767, "\u548c\u5b83\u4eec\u7684\u5173\u7cfb": 745, "\u548c\u5c0f\u6279\u91cf\u7684\u8fb9id\u6570\u7ec4": 762, "\u548c\u666e\u901a\u7684nn\u6a21\u5757\u4e00\u6837": 768, "\u548c\u7528\u4e8e\u5206\u5e03\u5f0f\u53ef\u5b66\u4e60\u5d4c\u5165\u7684": 742, "\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81": 767, "\u548c\u8282\u70b9\u5206\u7c7b\u4e00\u6837\u7684\u90bb\u5c45\u91c7\u6837\u5668": 760, "\u552f\u4e00\u7684\u533a\u522b\u662f\u5728\u8c03\u7528": 770, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4e3a\u8bad\u7ec3\u96c6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u7684\u5b57\u5178": 764, "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u4f7f\u7528": [742, 760], "\u552f\u4e00\u7684\u533a\u522b\u662f\u7528\u6237\u9700\u8981\u63d0\u4f9b\u8d1f\u91c7\u6837\u65b9\u6cd5": 762, "\u5546\u54c1": 746, "\u5546\u5bb6": 746, "\u56de\u5f52": [739, 752, 769, 773], "\u56de\u5f52\u4e2d\u7684\u8282\u70b9\u8868\u793a\u6a21\u578b": 762, "\u56de\u5f52\u4e2d\u7684\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 762, "\u56de\u5f52\u4efb\u52a1": 770, "\u56de\u5f52\u6240\u9700\u7684\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 760, "\u56de\u5f52\u6a21\u578b\u4e2d\u7684\u9884\u6d4b\u8fb9\u5f97\u5206\u6a21\u578b\u76f8\u540c": 773, "\u56de\u5f52\u7684\u6a21\u578b": 770, "\u56de\u5f52\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b": 760, "\u56de\u5f52\u7684\u8bad\u7ec3\u7c7b\u4f3c": 760, "\u56de\u5f52\u91cc\u7684\u5b9a\u4e49\u975e\u5e38\u76f8\u4f3c": 762, "\u56de\u60f3\u4e00\u4e0b\u5728": 759, "\u56e0\u4e3a": 755, "\u56e0\u4e3a\u4e0a\u8ff0\u7684\u5f97\u5206\u9884\u6d4b\u6a21\u578b\u5728\u56fe\u4e0a\u8fdb\u884c\u8ba1\u7b97": 773, "\u56e0\u4e3a\u4e0d\u9700\u8981\u5728\u8fb9\u4e0a\u4fdd\u5b58feat_src\u548cfeat_dst": 755, "\u56e0\u4e3a\u53cb\u8c0a\u662f\u76f8\u4e92\u7684": 746, "\u56e0\u4e3a\u540c\u6b65sgd\u4f1a\u5047\u5b9a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u5c0f\u6279\u6b21": 742, "\u56e0\u4e3a\u5b83\u4eec\u7ecf\u8fc7\u4e86\u5927\u91cf\u4f18\u5316": 754, "\u56e0\u4e3a\u5bf9\u4e8e\u5904\u7406\u540e\u7684\u5927\u578b\u6570\u636e\u96c6": 736, "\u56e0\u4e3a\u5d4c\u5165\u662f\u6a21\u578b\u7684\u4e00\u90e8\u5206": 742, "\u56e0\u4e3a\u7528\u6237\u9700\u8981\u6307\u5b9a\u5728\u54ea\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b": 773, "\u56e0\u4e3a\u9700\u8981\u4ece\u7b2c\u4e00\u5c42\u5f00\u59cb\u5bf9\u8282\u70b9\u8868\u793a\u9010\u5c42\u8ba1\u7b97": 761, "\u56e0\u6b64": [739, 742, 744, 747, 749, 751, 759, 760, 762], "\u56e0\u6b64\u5982\u679c\u4e00\u5f20\u56fe\u5f88\u5927": 743, "\u56e0\u6b64\u6570\u636e\u96c6\u7684\u5212\u5206\u662f\u5728\u56fe\u7684\u8282\u70b9\u96c6\u4e0a\u8fdb\u884c": 739, "\u56e0\u6b64\u672c\u793a\u4f8b\u8bf4\u660e\u4e86\u5982\u4f55\u4f7f\u7528\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u5411\u91cf\u7684\u70b9\u79ef\u6765\u8ba1\u7b97\u5206\u6570": 762, "\u56e0\u6b64\u7528\u6237\u65e0\u6cd5\u4ecenn\u6a21\u5757\u7684\u53c2\u6570\u8bbf\u95ee\u5b83": 742, "\u56e0\u6b64\u76f4\u63a5\u5728\u8fb9\u754c\u5b50\u56fe\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012\u6709\u5f88\u5927\u5f00\u9500": 759, "\u56e0\u6b64\u901a\u5e38\u53ef\u4ee5\u5728\u968f\u673a\u62bd\u53d6\u7684\u5c0f\u6279\u6b21\u56fe\u4e0a\u8fdb\u884c\u9ad8\u6548\u7684\u8bad\u7ec3": 772, "\u56e0\u6b64\u9700\u8981\u5c06\u6240\u8981\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b": 770, "\u56fe": [739, 752], "\u56fe\u4e0a\u7684\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u901a\u5e38\u6709\u4e09\u79cd\u7c7b\u578b": 739, "\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8fde\u901a\u5b50\u56fe\u5bf9\u5e94\u4e00\u5f20\u539f\u59cb\u5c0f\u56fe": 772, "\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf\u662fdgl\u901a\u8fc7\u7ed9\u5b9a\u7684\u56fe\u7684\u8fb9\u5217\u8868\u4e2d\u6700\u5927\u7684\u70b9id\u63a8\u65ad\u6240\u5f97\u51fa\u7684": 750, "\u56fe\u5212\u5206api\u5f53\u524d\u5728\u4e00\u53f0\u673a\u5668\u4e0a\u8fd0\u884c": 743, "\u56fe\u53ef\u4ee5\u5206\u4e3a\u51e0\u4e2a\u4e8c\u5206\u56fe": 767, "\u56fe\u53ef\u4ee5\u662f": 746, "\u56fe\u540d\u79f0\u6807\u8bc6\u4e86\u96c6\u7fa4\u4e2d\u6240\u9700\u52a0\u8f7d\u7684\u56fe": 742, "\u56fe\u5c06\u4f1a\u88ab\u89c6\u4e3a\u4e8c\u5206\u56fe": 767, "\u56fe\u6216\u5f20\u91cf": 749, "\u56fe\u6570\u636e\u4e2d\u7684\u8bad\u7ec3": 774, "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": [752, 769, 772, 774], "\u56fe\u662f\u7528\u4ee5\u8868\u793a\u5b9e\u4f53\u53ca\u5176\u5173\u7cfb\u7684\u7ed3\u6784": 746, "\u56fe\u6ce8\u610f\u529b\u7f51\u7edc": 771, "\u56fe\u7531\u4e24\u4e2a\u96c6\u5408\u7ec4\u6210": 746, "\u56fe\u7684": 739, "\u56fe\u795e\u7ecf\u7f51\u7edc\u6267\u884c\u4e86": 774, "\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u4e00\u4e2a\u5178\u578b\u9009\u9879\u662f\u805a\u5408\u7c7b\u578b": 766, "\u56fe\u8868\u793a\u5b9e\u4f53": 745, "\u5728": [739, 740, 742, 764, 767], "\u5728dgl": 765, "\u5728dgl\u4e2d": [751, 754, 756, 759], "\u5728dgl\u4e2d\u79f0\u4e4b\u4e3a": 764, "\u5728dgl\u7684\u56fe\u91cc": 750, "\u5728dgl\u91cc\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u6b65\u9aa4\u5b9e\u73b0\u8fd9\u4e00\u9700\u6c42": 771, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 745, "\u5728gpu\u4e0a\u8fdb\u884c\u5168\u56fe\u524d\u5411\u4f20\u64ad\u901a\u5e38\u7531\u4e8e\u663e\u5b58\u5927\u5c0f\u7684\u9650\u5236\u800c\u4e0d\u53ef\u884c": 761, "\u5728graph": 754, "\u5728jupyt": 742, "\u5728mxnet\u4e2d\u662ffloat\u5f20\u91cf": 739, "\u5728nn\u6a21\u5757\u4e2d": 767, "\u5728node": 738, "\u5728python\u5b57\u5178\u91cc\u4fdd\u5b58\u5176\u4ed6\u4fe1\u606f": 740, "\u5728sageconv\u4e2d": 766, "\u5728sageconv\u8bba\u6587\u91cc": 766, "\u5728update_all\u5916\u8c03\u7528\u66f4\u65b0\u51fd\u6570": 754, "\u5728user\u7c7b\u578b\u7684\u8282\u70b9\u548cclick\u7c7b\u578b\u7684\u8fb9\u4e0a\u968f\u673a\u751f\u6210\u8bad\u7ec3\u96c6\u7684\u63a9\u7801": 769, "\u5728\u4e00\u4e2a\u52a0\u6743\u56fe\u91cc": 771, "\u5728\u4e00\u4e2a\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 741, "\u5728\u4e00\u5c42\u4e2d": 761, "\u5728\u4e0a\u9762\u7684\u7b49\u5f0f\u4e2d": 753, "\u5728\u4ecb\u7ecddgl\u4e2d\u90bb\u5c45\u91c7\u6837\u7684\u7528\u6cd5\u4e4b\u524d": 759, "\u5728\u4f7f\u7528pytorch\u65f6": 742, "\u5728\u4f7f\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 756, "\u5728\u5185\u7f6e\u6570\u636e\u96c6": 740, "\u5728\u5185\u90e8": 742, "\u5728\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0b": 742, "\u5728\u5206\u5e03\u5f0f\u8bbe\u7f6e\u4e2d": 742, "\u5728\u521b\u5efa\u56fe\u7684\u65f6\u5019": 750, "\u5728\u521d\u6b65\u4e86\u89e3\u4e86\u5206\u5e03\u5f0f\u7ec4\u4ef6\u540e": 741, "\u5728\u52a0\u6743\u56fe\u4e2d": 746, "\u5728\u533a\u5757\u521b\u5efa\u7684\u9636\u6bb5": 767, "\u5728\u534a\u76d1\u7763\u8282\u70b9\u5206\u7c7b\u7684\u573a\u666f\u91cc": 743, "\u5728\u540c\u6784\u56fe\u4e2d": 746, "\u5728\u540c\u6784\u56fe\u548c\u5f02\u6784\u56fe\u4e0a\u505a\u8bc4\u5206\u9884\u6d4b\u65f6": 760, "\u5728\u56fe\u5212\u5206\u540e": 743, "\u5728\u56fe\u5212\u5206\u671f\u95f4\u7684\u56fe\u540d\u79f0": 742, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [752, 753], "\u5728\u57fa\u4e8e\u90bb\u5c45\u91c7\u6837\u7684\u8fb9\u5206\u7c7b\u4e2d": 760, "\u5728\u591a\u91cd\u56fe\u4e2d": 746, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": [752, 757, 767, 769], "\u5728\u5b58\u50a8\u56fe\u5206\u533a\u6570\u636e": 741, "\u5728\u5b9e\u73b0\u81ea\u5b9a\u4e49\u91c7\u6837\u5668\u540e": 759, "\u5728\u5bf9\u56fe\u8fdb\u884c\u5212\u5206\u65f6": 743, "\u5728\u5c0f\u6279\u6b21\u8bad\u7ec3\u4e2d": 767, "\u5728\u5f02\u6784\u56fe\u4e0a": 760, "\u5728\u5f02\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u548c\u5728\u540c\u6784\u56fe\u4e0a\u505a\u6574\u56fe\u5206\u7c7b\u7565\u6709\u4e0d\u540c": 772, "\u5728\u5f02\u6784\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u8fdb\u884c\u8282\u70b9\u5206\u7c7b\u7684\u65b9\u6cd5\u4e5f\u662f\u7c7b\u4f3c\u7684": 764, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": [752, 753], "\u5728\u5f02\u6784\u56fe\u4e2d": 746, "\u5728\u5f02\u6784\u56fe\u7684\u60c5\u51b5\u4e0b": 767, "\u5728\u5f53\u524d\u5b9e\u73b0\u4e2d": 742, "\u5728\u5f97\u5230": 772, "\u5728\u6240\u6709\u8fb9\u7c7b\u578b\u4e0a\u6267\u884c\u6d88\u606f\u4f20\u9012": 774, "\u5728\u63a8\u8350\u573a\u666f\u4e2d\u5f88\u5e38\u89c1": 770, "\u5728\u63a8\u8350\u7cfb\u7edf\u4e2d": 746, "\u5728\u6574\u4e2a\u56fe\u6279\u6b21\u4e0a\u8fdb\u884c\u4e00\u6b21\u8bad\u7ec3\u8fed\u4ee3": 772, "\u5728\u6700\u540e\u4e00\u4e2a\u9636\u6bb5": 755, "\u5728\u672c\u4f8b\u4e2d\u7701\u7565": 774, "\u5728\u672c\u8282\u4e2d": 741, "\u5728\u6784\u9020\u51fd\u6570\u4e2d": 766, "\u5728\u67d0\u4e9b\u573a\u666f\u4e2d": 773, "\u5728\u67d0\u79cd\u7c7b\u578b\u7684\u8fb9\u4e0a\u4e3a\u6bcf\u4e00\u6761\u8fb9\u9884\u6d4b\u7684\u7aef\u5230\u7aef\u6a21\u578b\u7684\u5b9a\u4e49\u5982\u4e0b\u6240\u793a": 770, "\u5728\u6bcf\u4e2a\u5206\u533a\u7684\u6587\u4ef6\u5939\u5185": 743, "\u5728\u6bcf\u4e2a\u751f\u6210\u5757\u5217\u8868\u7684\u8fed\u4ee3\u4e2d": 764, "\u5728\u6bcf\u4e2a\u8282\u70b9\u7c7b\u578b\u4e2d\u7684\u8282\u70b9\u6570\u4e0a\u5b9e\u73b0\u5206\u533a\u95f4\u7684\u5e73\u8861": 743, "\u5728\u6d88\u606f\u4f20\u9012\u65f6": 754, "\u5728\u6d88\u606f\u51fd\u6570\u91cc": 771, "\u5728\u72ec\u7acb\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 742, "\u5728\u7528\u591a\u5c42\u56fe\u795e\u7ecf\u7f51\u7edc\u65f6": 759, "\u5728\u7b2c9\u884c\u547d\u540d\u4e3a": 748, "\u5728\u7c7bdgldataset\u4e2d\u5b9a\u4e49\u7684\u56fe\u6570\u636e\u5904\u7406\u6a21\u7248\u7684\u6d41\u7a0b\u56fe": 736, "\u5728\u7f16\u5199\u5b8c\u8fd9\u4e9b\u4ee3\u7801\u4e4b\u540e": 739, "\u5728\u8bad\u7ec3\u5668\u8fdb\u7a0b\u4e2d": 742, "\u5728\u8bad\u7ec3\u671f\u95f4": 743, "\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u53ef\u4ee5\u4f7f\u7528\u5e03\u5c14\u63a9\u7801\u533a\u5206\u8bad\u7ec3": 770, "\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 759, "\u5728\u8fb9\u4e0a\u5c06\u4ee5\u4e0a\u4e24\u90e8\u5206\u7ebf\u6027\u64cd\u4f5c\u7684\u7ed3\u679c\u76f8\u52a0": 755, "\u5728\u8fb9\u96c6": 746, "\u5728\u8fd9\u4e2a\u573a\u666f\u91cc": 772, "\u5728\u8fd9\u4e2a\u6279\u6b21\u7684\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u4ee5\u66f4\u65b0\u8282\u70b9\u6216\u8fb9\u7684\u7279\u5f81": 772, "\u5728\u8fd9\u4e9b\u673a\u5668\u4e0a": 744, "\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b": 767, "\u5728\u8fd9\u91cc\u53ef\u4ee5\u590d\u7528\u4e0a\u8ff0\u63d0\u5230\u7684": 770, "\u5728\u8fdb\u884c\u63a8\u65ad\u65f6": 761, "\u5757": [759, 760, 764], "\u5757\u4e5f\u53ef\u7528\u4e8e\u5f02\u6784\u56fe": 759, "\u5757\u7684\u8f93\u51fa\u8282\u70b9\u4e3a": 759, "\u578b\u8282\u70b9\u5230": 751, "\u578b\u8282\u70b9\u7684\u8fb9": 751, "\u57fa\u4e8egnn\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u4f7f\u7528\u6240\u9700\u9884\u6d4b\u7684\u8282\u70b9\u5bf9": 773, "\u5904\u7406\u548c\u4fdd\u5b58\u56fe\u6570\u636e\u63d0\u4f9b\u4e86\u7b80\u5355\u800c\u5e72\u51c0\u7684\u89e3\u51b3\u65b9\u6848": 735, "\u5904\u7406\u5b8c\u6210\u7684\u6570\u636e\u96c6\u7684\u4fdd\u5b58\u76ee\u5f55": 736, "\u5904\u7406\u6570\u636e": [735, 752], "\u5904\u7406\u8fc7\u7684\u6570\u636e\u6bd4\u8f83\u5927": 740, "\u590d\u5236\u5230": 744, "\u590d\u5236\u5230gpu": 749, "\u591a\u5c42\u611f\u77e5\u673a": 770, "\u5927\u90e8\u5206\u56fe\u795e\u7ecf\u7f51\u7edc\u5728\u524d\u9988\u8ba1\u7b97\u4e2d\u4ec5\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u5f15\u5165\u56fe\u7ed3\u6784\u4fe1\u606f": 771, "\u5982": [747, 750, 762, 769, 770, 774], "\u5982panda": 747, "\u5982\u4e0a\u8ff0\u793a\u4f8b\u4ee3\u7801\u4e2d\u7684": 748, "\u5982\u4e0b": 748, "\u5982\u4e0b\u4ee3\u7801\u6240\u6f14\u793a\u7684": 759, "\u5982\u4e0b\u4f8b\u6240\u793a": 750, "\u5982\u4e0b\u56fe\u6240\u793a": [758, 759], "\u5982\u4e0b\u6240\u793a": [759, 760], "\u5982\u4e0b\u9762\u7684\u4ee3\u7801\u6bb5\u6240\u793a": 750, "\u5982\u4ee3\u7801\u6240\u793a": 739, "\u5982\u4ee5\u4e0b\u4ee3\u7801\u6240\u793a": 742, "\u5982\u524d\u6240\u8ff0": 742, "\u5982\u5355\u7cbe\u5ea6\u6d6e\u70b9\u578b": 748, "\u5982\u63cf\u8ff0\u8282\u70b9\u4e4b\u95f4\u7684\u5bf9\u79f0\u5173\u7cfb": 746, "\u5982\u63cf\u8ff0\u975e\u5bf9\u79f0\u5173\u7cfb": 746, "\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5bf9\u5e94\u7684id\u76f8\u540c": 760, "\u5982\u679c\u4e0a\u8ff0\u60c5\u51b5\u4e0d\u9002\u7528": 751, "\u5982\u679c\u4ee5\u6a21\u578b\u9009\u62e9\u4e3a\u76ee\u7684\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8ba1\u7b97\u8bc4\u4ef7\u6307\u6807": 761, "\u5982\u679c\u4f7f\u7528": 750, "\u5982\u679c\u5177\u6709\u6700\u5927id\u7684\u8282\u70b9\u6ca1\u6709\u8fb9": 750, "\u5982\u679c\u539f\u56fe\u5305\u542b\u591a\u79cd\u8282\u70b9\u7c7b\u578b": 763, "\u5982\u679c\u539f\u56fe\u53ea\u5305\u542b\u4e00\u79cd\u8282\u70b9\u7c7b\u578b": 763, "\u5982\u679c\u539f\u59cb\u6570\u636e\u5df2\u88ab\u62c6\u5206\u4e3a\u591a\u4e2a\u6587\u4ef6": 739, "\u5982\u679c\u53ea\u9884\u6d4b": 774, "\u5982\u679c\u540e\u7aef\u6846\u67b6\u4e5f\u63d0\u4f9b\u4e86\u4ece\u78c1\u76d8\u4e2d\u4fdd\u5b58\u6216\u52a0\u8f7d\u5f20\u91cf\u7684\u5de5\u5177": 747, "\u5982\u679c\u56fe\u662f\u5f02\u6784\u7684": 774, "\u5982\u679c\u56fe\u91cc\u53ea\u6709\u4e00\u79cd\u8282\u70b9\u6216\u8fb9\u7c7b\u578b": 751, "\u5982\u679c\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8005\u8fb9\u7684\u6570\u91cf\u5c0f\u4e8e": 750, "\u5982\u679c\u5bf9\u901f\u5ea6\u4e0d\u592a\u5173\u6ce8\u7684\u8bdd": 747, "\u5982\u679c\u5e0c\u671b\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757": 764, "\u5982\u679c\u6570\u636e\u96c6\u662f\u4e00\u4e2azip\u6587\u4ef6": 737, "\u5982\u679c\u6587\u4ef6\u662f": 737, "\u5982\u679c\u662f\u4ece\u56fe\u4e2d\u5f97\u5230\u7684\u8fb9\u754c": 759, "\u5982\u679c\u672a\u63d0\u4f9b\u5177\u4f53\u7aef\u53e3": 744, "\u5982\u679c\u6a21\u578b\u540c\u65f6\u5177\u6709\u8282\u70b9\u5d4c\u5165\u548c\u89c4\u5219\u7684\u5bc6\u96c6\u6a21\u578b\u53c2\u6570": 742, "\u5982\u679c\u7279\u5f81\u5b58\u50a8\u5728": 764, "\u5982\u679c\u7528\u6237\u4f7f\u7528\u4e0a\u4e00\u8282\u4e2d\u7684\u6a21\u578b\u8ba1\u7b97\u4e86\u8282\u70b9\u7684\u8868\u793a": 770, "\u5982\u679c\u7528\u6237\u53ea\u60f3\u66f4\u65b0\u56fe\u4e2d\u7684\u90e8\u5206\u8282\u70b9": 757, "\u5982\u679c\u7528\u6237\u5728\u8bad\u7ec3\u6a21\u578b\u65f6\u4e00\u6b21\u4ec5\u4f7f\u7528\u4e00\u5f20\u56fe": 772, "\u5982\u679c\u7528\u6237\u5df2\u6709\u4e00\u4e2a\u7528\u4e8e\u6574\u4e2a\u56fe\u7684\u81ea\u5b9a\u4e49\u6d88\u606f\u4f20\u9012\u6a21\u5757": 763, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u6570\u636e\u96c6\u6216\u5176\u4ed6\u517c\u5bb9": 769, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5220\u9664\u5f02\u6784\u56fe\u4e2d\u7684\u53cd\u5411\u8fb9": 760, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u5f00\u53d1\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 760, "\u5982\u679c\u7528\u6237\u5e0c\u671b\u7f16\u5199\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 764, "\u5982\u679c\u7528\u6237\u60f3\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u4e00\u4e2a\u5206\u6570": 770, "\u5982\u679c\u7528\u6237\u60f3\u5728\u4efb\u4f55\u5730\u65b9\u8fd0\u884c\u4ee3\u7801\u800c\u53c8\u4e0d\u60f3\u81ea\u5df1\u4e0b\u8f7d\u6570\u636e\u5e76\u5c06\u5176\u79fb\u52a8\u5230\u6b63\u786e\u7684\u76ee\u5f55\u4e2d": 737, "\u5982\u679c\u7528\u6237\u60f3\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 762, "\u5982\u679c\u7528\u6237\u60f3\u9884\u6d4b\u8fb9\u7c7b\u578b\u4e3a": 770, "\u5982\u679c\u7528\u6237\u6709\u5305\u542b\u6570\u767e\u4e07\u751a\u81f3\u6570\u5341\u4ebf\u4e2a\u8282\u70b9\u6216\u8fb9\u7684\u5927\u56fe": 758, "\u5982\u679c\u7528\u6237\u6a21\u578b\u5728\u5168\u56fe\u4e0a\u662f\u6309\u4ee5\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u7684": 764, "\u5982\u679c\u7528\u6237\u719f\u6089": 773, "\u5982\u679c\u7528\u6237\u719f\u6089\u5982\u4f55\u5b9a\u5236\u7528\u4e8e\u66f4\u65b0\u6574\u4e2a\u540c\u6784\u56fe\u6216\u5f02\u6784\u56fe\u7684gnn\u6a21\u5757": 763, "\u5982\u679c\u7528\u6237\u7684\u6570\u636e\u96c6\u5df2\u7ecf\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 737, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570\u65e0\u6cd5\u7528\u5185\u7f6e\u51fd\u6570\u5b9e\u73b0": 754, "\u5982\u679c\u7528\u6237\u7684\u6d88\u606f\u4f20\u9012\u6a21\u5757\u5168\u4f7f\u7528\u7684\u662fdgl\u5185\u7f6e\u6a21\u5757": 764, "\u5982\u679c\u7528\u6237\u8981\u5f15\u7528\u4e00\u4e2a\u56fa\u5b9a\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 742, "\u5982\u679c\u8981\u4ee5\u67d0\u79cd\u6982\u7387\u5c06\u79cd\u5b50\u8282\u70b9\u7684\u5165\u8fb9\u968f\u673a\u5254\u9664": 759, "\u5982\u679c\u8bad\u7ec3\u811a\u672c\u91cc\u5305\u542b\u9700\u8981\u5728\u670d\u52a1\u5668": 742, "\u5982\u679c\u8be5api\u6ca1\u6709\u4e3a\u8282\u70b9\u548c\u8fb9\u5206\u914d\u65b0id": 743, "\u5982\u679c\u8be5\u7c7b\u7ee7\u627f\u81ea": 737, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u4e0d\u662f\u5757": 763, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u5f20\u91cf\u4e14\u8f93\u5165\u56fe\u662f\u4e00\u4e2a\u5757": 763, "\u5982\u679c\u8f93\u5165\u7279\u5f81\u662f\u4e00\u4e2a\u5f20\u91cf\u5bf9": 763, "\u5982\u679c\u9700\u8981\u7684\u8bdd": 774, "\u5b50\u56fe\u5728dgl\u4e2d\u79f0\u4e3a\u533a\u5757": 767, "\u5b50\u56fe\u5757\u7684\u60c5\u51b5": 767, "\u5b50\u56fe\u662f\u4ece\u76f8\u540c\u7684\u6570\u636e\u52a0\u8f7d\u5668\u4ea7\u751f\u7684": 760, "\u5b50\u56fe\u91c7\u6837\u548c\u90bb\u5c45\u91c7\u6837\u90fd\u662f\u4e3a\u4e86\u51cf\u5c11\u7528gpu\u8bad\u7ec3gnn\u6a21\u578b\u7684\u5185\u5b58\u548c\u65f6\u95f4\u6d88\u8017": 761, "\u5b50\u6a21\u5757\u6839\u636e\u805a\u5408\u7c7b\u578b\u800c\u6709\u6240\u4e0d\u540c": 766, "\u5b50\u7c7b\u4e4b\u5916\u5b8c\u6210": 736, "\u5b50\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570": 736, "\u5b58\u50a8\u4e86\u5212\u5206\u63a9\u7801": 739, "\u5b58\u50a8\u4e86\u8f93\u5165\u8282\u70b9\u7279\u5f81": 771, "\u5b58\u50a8\u5206\u533a\u7684\u56fe\u7ed3\u6784\u4ee5\u53ca\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u4e00\u4e9b\u5143\u6570\u636e": 743, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u533aid": 743, "\u5b58\u50a8\u5728numpy\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u8fb9\u7684\u5206\u533aid": 743, "\u5b58\u50a8\u5c5e\u4e8e\u8be5\u5206\u533a\u7684\u8282\u70b9\u548c\u8fb9\u7684\u6240\u6709\u7279\u5f81": 743, "\u5b58\u50a8\u6587\u4ef6\u7684\u8def\u5f84": 737, "\u5b58\u50a8\u9690\u5c42\u8868\u793a\u9700\u8981": 758, "\u5b5f\u51e1\u8363": 752, "\u5b83\u4e3a": 742, "\u5b83\u4ece\u805a\u5408\u4e0e\u66f4\u65b0\u7684\u89d2\u5ea6\u5f52\u7eb3\u603b\u7ed3\u4e86\u591a\u79cdgnn\u6a21\u578b\u7684\u5b9e\u73b0": 753, "\u5b83\u4eec\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684api\u76f8\u4f3c": 741, "\u5b83\u4eec\u4e3b\u8981\u88ab\u7528\u6765\u63d0\u4f9b\u56fe\u4fe1\u606f": 742, "\u5b83\u4eec\u53ea\u5305\u62ec\u4e00\u79cd\u5173\u7cfb": 751, "\u5b83\u4eec\u5b58\u50a8\u8282\u70b9\u548c\u8fb9id\u4e0e\u5206\u533aid\u4e4b\u95f4\u7684\u6620\u5c04": 743, "\u5b83\u4eec\u7684\u533a\u522b\u5728\u4e8e": 742, "\u5b83\u4eec\u7684\u7c7b\u578b\u90fd\u662f\u5b57\u7b26\u4e32": 754, "\u5b83\u4eec\u786e\u4fdd\u6240\u6709\u90e8\u5206\u90fd\u5177\u6709\u76f8\u540c\u6570\u91cf\u7684\u8282\u70b9\u548c\u8fb9": 742, "\u5b83\u4eec\u901a\u8fc7": 746, "\u5b83\u4eec\u9075\u5faa\u4e86\u7531": 735, "\u5b83\u4eec\u90fd\u662f\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9": 767, "\u5b83\u5141\u8bb8\u7528\u6237\u4e3a\u6bcf\u4e2a\u8282\u70b9\u91c7\u6837\u90e8\u5206\u90bb\u5c45\u8282\u70b9\u4ee5\u6c47\u805a\u4fe1\u606f": 759, "\u5b83\u5177\u6709": 770, "\u5b83\u5177\u6709\u4e0e\u5e38\u89c4\u5f20\u91cf\u76f8\u540c\u7684api": 742, "\u5b83\u5206\u6279\u8fed\u4ee3\u8bad\u7ec3\u8282\u70b9id\u6570\u7ec4": 764, "\u5b83\u52a0\u8f7d\u5206\u533a\u6570\u636e": 742, "\u5b83\u5305\u62ec": 768, "\u5b83\u53ef\u4ee5\u7528\u6700\u5c11\u7684\u8fb9\u5206\u5272\u4ee5\u751f\u6210\u5206\u533a": 743, "\u5b83\u53ef\u83b7\u53d6\u8282\u70b9\u7684\u6240\u6709\u90bb\u5c45": 764, "\u5b83\u5728\u5355\u4e2aapi\u8c03\u7528\u91cc\u5408\u5e76\u4e86\u6d88\u606f\u751f\u6210": 754, "\u5b83\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u6240\u6709\u8ba1\u7b97": 742, "\u5b83\u5b9e\u73b0\u4e86\u7528\u4e8e\u5904\u7406\u56fe\u6570\u636e\u7684\u57fa\u672c\u6a21\u7248": 736, "\u5b83\u5bf9\u4e8e\u6bcf\u4e2a\u8fb9\u7684\u6e90\u8282\u70b9": 762, "\u5b83\u5c06\u4ee5\u72ec\u7acb\u6a21\u5f0f\u8fd0\u884c": 742, "\u5b83\u5c06\u751f\u6210\u4e24\u4e2a\u989d\u5916\u7684numpy\u6587\u4ef6": 743, "\u5b83\u5e94\u5f53\u4ee5\u539f\u56fe": 762, "\u5b83\u5e94\u8be5\u7ee7\u627f": 765, "\u5b83\u6307\u5b9a\u8282\u70b9\u96c6\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u8fb9\u7684\u7c7b\u578b\u7ea6\u675f": 751, "\u5b83\u63a5\u53d7\u4e00\u4e2a\u8fb9\u7684\u96c6\u5408\u4f5c\u4e3a\u8f93\u5165": 750, "\u5b83\u662fgraphsage\u6a21\u578b\u4e2d\u4f7f\u7528\u7684\u56fe\u5377\u79ef\u6a21\u5757": 774, "\u5b83\u662f\u6700\u540e\u4e00\u4e2a\u5757\u7684\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 764, "\u5b83\u7528": 741, "\u5b83\u7ee7\u627f\u81ea": 736, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8282\u70b9": 754, "\u5b83\u88abdgl\u5728\u5185\u90e8\u751f\u6210\u4ee5\u8868\u793a\u4e00\u6279\u8fb9": 754, "\u5b83\u8fd4\u56de\u4ee5\u8fb9\u7c7b\u578b\u4e3a\u952e": 762, "\u5b83\u901a\u8fc7\u5c06\u8fb9\u4e0a\u7279\u5f81\u4e0e\u5176\u4e24\u7aef\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408\u6765\u751f\u6210\u6d88\u606f": 753, "\u5b8b\u6021\u7136": 752, "\u5b8c\u5168\u76f8\u540c": 760, "\u5b8c\u6574\u7684\u5185\u7f6e\u91c7\u6837\u65b9\u6cd5\u6e05\u5355": 764, "\u5b98\u65b9\u7684": 738, "\u5b9a\u4e49": [742, 751], "\u5b9a\u4e49\u4e86\u4ee5\u4e0b\u9010\u8282\u70b9\u548c\u8fb9\u4e0a\u7684\u8ba1\u7b97": 753, "\u5b9a\u4e49\u6a21\u578b\u548c\u4f18\u5316\u5668": 741, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 764, "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": [752, 758, 760, 764], "\u5b9e\u4f8b\u5316heterographconv": 774, "\u5b9e\u4f8b\u5316sageconv": 774, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad\u7684\u65b9\u6cd5\u4f9d\u7136\u9700\u8981\u4f7f\u7528": 761, "\u5b9e\u73b0\u903b\u8f91\u4e0e\u6d88\u606f\u4f20\u9012\u7ea7\u522b\u7684api": 768, "\u5b9e\u9645\u5e94\u7528\u4e2d": 773, "\u5bf9dataloader\u8fdb\u884c\u8fed\u4ee3": 764, "\u5bf9\u4e00\u6761\u8fb9\u8ba1\u7b97\u9884\u6d4b\u503c\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\u5c06\u9884\u6d4b\u8868\u793a\u4e3a\u4e00\u4e2a\u51fd\u6570": 770, "\u5bf9\u4e8e": 763, "\u5bf9\u4e8emxnet\u540e\u7aef": 765, "\u5bf9\u4e8epytorch\u540e\u7aef": 765, "\u5bf9\u4e8etensorflow\u540e\u7aef": 765, "\u5bf9\u4e8e\u4e00\u4e2a\u4e0d\u5e26\u6743\u91cd\u7684\u56fe": 771, "\u5bf9\u4e8e\u4e00\u4e2a\u52a0\u6743\u56fe": 771, "\u5bf9\u4e8e\u4e00\u4e2a\u6307\u5b9a\u7684\u5c42": 761, "\u5bf9\u4e8e\u4e00\u5143\u51fd\u6570": 754, "\u5bf9\u4e8e\u4e00\u822c\u7684pytorch\u6a21\u5757": 766, "\u5bf9\u4e8e\u4e8c\u5143\u51fd\u6570": 754, "\u5bf9\u4e8e\u4e8c\u5206\u56fe": 768, "\u5bf9\u4e8e\u5168\u90bb\u5c45\u91c7\u6837": 764, "\u5bf9\u4e8e\u5177\u6709\u4e24\u4e2a\u5173\u7cfb": 751, "\u5bf9\u4e8e\u5177\u6709\u5341\u4ebf\u7ea7\u6570\u91cf\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 743, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3": 742, "\u5bf9\u4e8e\u5206\u5e03\u5f0f\u8bad\u7ec3\u548c\u8bc4\u4f30": 742, "\u5bf9\u4e8e\u52a0\u6743\u56fe": 748, "\u5bf9\u4e8e\u540c\u6784\u56fe\u4e0a\u7684\u5168\u56fe\u8bad\u7ec3": 767, "\u5bf9\u4e8e\u56fe\u4e0a\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b": 774, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc": 766, "\u5bf9\u4e8e\u56fe\u795e\u7ecf\u7f51\u7edc\u6765\u8bf4": 774, "\u5bf9\u4e8e\u591a\u4e2a\u8282\u70b9": 750, "\u5bf9\u4e8e\u5e95\u5c42\u7684\u91c7\u6837api": 742, "\u5bf9\u4e8e\u5f97\u5206\u7684\u9884\u6d4b": 762, "\u5bf9\u4e8e\u65e0\u5411\u7684\u56fe": 750, "\u5bf9\u4e8e\u65e0\u6cd5\u5168\u90e8\u8f7d\u5165\u7684\u60c5\u51b5": 769, "\u5bf9\u4e8e\u67d0\u4e9b\u60c5\u51b5": 755, "\u5bf9\u4e8e\u6d88\u606f\u4f20\u9012": 754, "\u5bf9\u4e8e\u7279\u5b9a\u76ee\u6807\u8282\u70b9": 766, "\u5bf9\u4e8e\u79bb\u7ebf\u63a8\u65ad\u7684\u793a\u4f8b": 761, "\u5bf9\u4e8e\u8282\u70b9\u5206\u7c7b\u4efb\u52a1": 742, "\u5bf9\u4e8e\u8981\u62f7\u8d1d\u7684\u7279\u5f81": 751, "\u5bf9\u4e8e\u8bad\u7ec3\u811a\u672c": 741, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u6570\u91cf": 763, "\u5bf9\u4e8e\u8f93\u5165\u8282\u70b9\u7279\u5f81": 763, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u6570\u91cf": 763, "\u5bf9\u4e8e\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 763, "\u5bf9\u4e8e\u8fb9\u56de\u5f52\u4efb\u52a1": 770, "\u5bf9\u4e8e\u8fd9\u4e2a\u5757": 759, "\u5bf9\u4e8e\u90bb\u5c45\u91c7\u6837": 759, "\u5bf9\u5176\u8fdb\u884c\u62c6\u5206": 742, "\u5bf9\u56fe\u8fdb\u884c\u5206\u533a\u7684\u8ba1\u7b97\u673a": 744, "\u5bf9\u5b83\u6240\u6709\u8282\u70b9\u7279\u5f81\u53d6\u5e73\u5747\u503c\u7684\u805a\u5408\u8bfb\u51fa\u516c\u5f0f\u5982\u4e0b": 772, "\u5bf9\u5e94\u4e8e\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b": 751, "\u5bf9\u5e94\u7740\u4e0b\u56fe\u6240\u793a\u7684\u5305\u542b4\u4e2a\u8282\u70b9\u7684\u56fe": 750, "\u5bf9\u5f02\u6784\u56fe\u8fdb\u884c\u6d88\u606f\u4f20\u9012\u7684\u63a5\u53e3\u662f": 756, "\u5bf9\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u5408\u5e76\u7528\u6237\u6307\u5b9a\u7684\u7279\u5f81": 751, "\u5bf9\u6240\u6709\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u6c42\u548c": 772, "\u5bf9\u6bcf\u4e2a\u5173\u7cfb\u8ba1\u7b97\u548c\u805a\u5408\u6d88\u606f": 756, "\u5bf9\u6bcf\u4e2a\u7ed3\u70b9\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u6d88\u606f": 756, "\u5bf9\u6bcf\u6761\u8fb9\u751f\u6210\u4e00\u4e2a\u5411\u91cf\u8868\u793a": 770, "\u5bf9\u8c61": [742, 743, 747, 750], "\u5bf9\u8c61\u65f6": 747, "\u5bf9\u8c61\u67098\u6761\u8fb9": 747, "\u5bf9\u8c61\u6d88\u5931": 742, "\u5bf9\u8c61\u7684api": 738, "\u5bf9\u8c61\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528": 750, "\u5bf9\u8c61\u7684\u5217\u8868\u548c\u6807\u7b7e\u5f20\u91cf\u7684\u5217\u8868": 739, "\u5bf9\u8c61\u7684\u8282\u70b9\u548c\u8fb9\u53ef\u5177\u6709\u591a\u4e2a\u7528\u6237\u5b9a\u4e49\u7684": 748, "\u5bf9\u8f93\u5165\u8282\u70b9\u7279\u5f81": 763, "\u5bfc\u5165\u548c\u4fdd\u5b58": 736, "\u5bfc\u5165\u5904\u7406\u540e\u7684\u6570\u636e": 736, "\u5bfc\u5165\u6570\u636e": 739, "\u5c06": 763, "\u5c06\u4e00\u5f20\u56fe\u5212\u5206\u4e3a\u591a\u5f20\u5b50\u56fe": 743, "\u5c06\u4e00\u5f20\u56fe\u91cc\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u805a\u5408\u6210\u6574\u5f20\u56fe\u7684\u56fe\u8868\u793a": 772, "\u5c06\u4e0a\u8ff0\u56fe\u4f5c\u4e3a\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u8f93\u5165": 770, "\u5c06\u4e0e\u8f93\u5165\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u7279\u5f81\u52a0\u8f7d\u5230gpu\u4e0a": 764, "\u5c06\u4e0e\u8f93\u51fa\u8282\u70b9\u76f8\u5bf9\u5e94\u7684\u8282\u70b9\u6807\u7b7e\u52a0\u8f7d\u5230gpu\u4e0a": 764, "\u5c06\u4e3a\u7a7a": 767, "\u5c06\u4ee5\u5206\u5e03\u5f0f\u6a21\u5f0f\u8fd0\u884c": 742, "\u5c06\u4f1a\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u56fe\u7684\u5217\u8868": 764, "\u5c06\u4f1a\u62a5\u9519": 759, "\u5c06\u5176\u547d\u540d\u4e3a": 748, "\u5c06\u539f\u59cb\u6570\u636e\u4e0b\u8f7d\u5230\u672c\u5730\u78c1\u76d8": 736, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe": 736, "\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 739, "\u5c06\u5757\u5217\u8868\u548c\u8f93\u5165\u8282\u70b9\u7279\u5f81\u4f20\u5165\u591a\u5c42gnn\u5e76\u83b7\u53d6\u8f93\u51fa": 764, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u4fdd\u5b58\u81f3": 736, "\u5c06\u5904\u7406\u540e\u7684\u6570\u636e\u7f13\u5b58\u5728\u672c\u5730\u78c1\u76d8\u4e2d": 740, "\u5c06\u5f97\u5230\u7684\u56fe\u548c\u8f93\u5165\u7279\u5f81\u4f20\u5165\u4e0a\u8ff0\u6a21\u578b": 762, "\u5c06\u5fc5\u8981\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81\u590d\u5236\u5230gpu\u4e0a": 761, "\u5c06\u6570\u636e\u5904\u7406\u4e3a\u56fe\u5217\u8868\u548c\u6807\u7b7e\u5217\u8868": 739, "\u5c06\u6570\u636e\u96c6\u7684\u6709\u7528\u4fe1\u606f": 740, "\u5c06\u6587\u4ef6\u89e3\u538b\u7f29\u5230\u76ee\u5f55self": 737, "\u5c06\u6bcf\u4e2a\u7c7b\u578b\u6d88\u606f\u805a\u5408\u7684\u7ed3\u679c\u76f8\u52a0": 756, "\u5c06\u88ab\u6e05\u9664": 754, "\u5c06\u8ba1\u7b97\u673a": 744, "\u5c06\u8f93\u51fa\u590d\u5236\u56decpu": 761, "\u5c06\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 771, "\u5c0f\u6279\u6b21\u662f\u4e00\u4e2a\u5143\u7ec4": 738, "\u5c24\u5176\u662f\u5728\u5305\u542b\u5927\u91cf\u672a\u6807\u8bb0\u6570\u636e\u7684\u534a\u76d1\u7763\u7cfb\u7edf\u4e2d": 761, "\u5c31\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c": 759, "\u5c31\u597d\u50cf\u8fd9\u4e9b\u8fb9\u6839\u672c\u4e0d\u5b58\u5728\u4e00\u6837": 760, "\u5c31\u5b9e\u73b0\u4e86\u4e0a\u8ff0\u7684\u5e73\u5747\u503c\u8bfb\u51fa\u8ba1\u7b97": 772, "\u5c31\u662f\u56fe\u7684\u6a21\u5f0f": 751, "\u5c3d\u53ef\u80fd": 754, "\u5c42\u56fe\u5377\u79ef\u7f51\u7edc": 758, "\u5c42\u8fdb\u884c\u8ba1\u7b97": 758, "\u5c42\u9009\u62e9\u8be5\u6279\u6b21\u8282\u70b9\u7684\u5168\u90e8\u6216\u90e8\u5206\u90bb\u5c45\u8282\u70b9": 758, "\u5c5e\u4e8e\u53e6\u4e00\u7c7b\u578b\u7684\u53cd\u5411\u8fb9": 760, "\u5d4c\u5165": 741, "\u5df2\u7ecf\u8d2d\u4e70": 746, "\u5e26\u6807\u7b7e\u548c\u672a\u5e26\u6807\u7b7e": 743, "\u5e38\u7528\u7684\u5f02\u6784\u56fe": 746, "\u5e38\u7528\u7684\u805a\u5408\u7c7b\u578b\u5305\u62ec": 766, "\u5e38\u89c1\u7684\u66f4\u65b0\u64cd\u4f5c\u662f\u6839\u636e\u6784\u9020\u51fd\u6570\u4e2d\u8bbe\u7f6e\u7684\u9009\u9879\u6765\u5e94\u7528\u6fc0\u6d3b\u51fd\u6570\u548c\u8fdb\u884c\u5f52\u4e00\u5316": 767, "\u5e38\u89c1\u7684\u805a\u5408\u65b9\u6cd5\u5305\u62ec": 772, "\u5e76\u4e14\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u8fdb\u7a0b\u901a\u4fe1": 742, "\u5e76\u4e14\u53ea\u6709\u5f53\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u8c03\u7528\u5b83\u65f6": 742, "\u5e76\u4e14\u53ef\u4ee5\u81ea\u52a8\u5904\u7406\u7ef4\u5ea6\u5e7f\u64ad": 754, "\u5e76\u4e14\u53ef\u4ee5\u901a\u8fc7": 759, "\u5e76\u4e14\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b": 754, "\u5e76\u4e14\u5b83\u4eec\u7684\u6bcf\u4e2a\u5143\u7d20\u90fd\u8868\u793a\u8bad\u7ec3": 742, "\u5e76\u4e14\u60f3\u5c06\u5176\u7528\u4e8e\u5757": 763, "\u5e76\u4e14\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u7684\u5b57\u5178": [760, 762], "\u5e76\u4e14\u6709\u591a\u4e2a\u5df2\u6709\u7684api\u53ef\u4ee5\u7b80\u5316\u6b64\u64cd\u4f5c": 736, "\u5e76\u4e14\u7528\u6237\u4e0d\u5e0c\u671b\u5728\u5efa\u6a21\u4e2d\u533a\u5206\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b": 751, "\u5e76\u4e14\u7528\u6237\u5e0c\u671b\u5bf9\u5d4c\u5165\u6267\u884c\u7a00\u758f\u66f4\u65b0": 742, "\u5e76\u4e14\u805a\u5408\u51fd\u6570\u7684\u8f93\u51fa\u503c\u5168\u4e3a0": 767, "\u5e76\u4e14\u904d\u5386\u79cd\u5b50\u8282\u70b9\u751f\u6210\u4e00\u7cfb\u5217\u7684\u5757": 759, "\u5e76\u4e3a\u6bcf\u6761\u8fb9\u8ba1\u7b97\u51fa\u6bcf\u79cd\u8fb9\u7c7b\u578b\u7684\u53ef\u80fd\u5f97\u5206": 770, "\u5e76\u4e3a\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4f7f\u7528\u4e00\u79cd\u56fe\u5377\u79ef\u6a21\u5757": 774, "\u5e76\u4ece\u8fb9\u7684\u4e24\u4e2a\u7aef\u70b9\u7684\u8868\u793a": 770, "\u5e76\u4f5c\u4e3a\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u6700\u7ec8\u7ed3\u679c": 774, "\u5e76\u4f7f\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8bad\u7ec3\u5668\u5747\u53ef\u8bbf\u95ee\u5b83\u4eec": 742, "\u5e76\u5411\u672c\u5730\u8bad\u7ec3\u5668\u8fd4\u56de\u4e00\u90e8\u5206": 742, "\u5e76\u5411\u672c\u5730\u8fdb\u7a0b\u8fd4\u56de\u8282\u70b9\u7684\u5b50\u96c6": 742, "\u5e76\u5728\u4e0b\u6e38\u4efb\u52a1\u4e2d\u4f7f\u7528": 770, "\u5e76\u5728\u540c\u6837\u7684\u673a\u5668\u4e0a\u8fd0\u884c\u670d\u52a1\u5668\u4ee5\u5c06\u5206\u533a\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 741, "\u5e76\u5728\u6240\u6709\u673a\u5668\u4e0a\u542f\u52a8\u8bad\u7ec3\u4efb\u52a1": 741, "\u5e76\u5728\u8fd9\u4e2a\u7f51\u7edc\u4e2d\u8981\u8fdb\u884c\u591a\u8f6e\u7684\u4fe1\u606f\u4f20\u9012": 774, "\u5e76\u5bf9\u5b83\u4eec\u5e94\u7528\u76f8\u540c\u7684\u64cd\u4f5c": 751, "\u5e76\u5bf9\u8282\u70b9\u548c\u8fb9\u91c7\u6837\u4ee5\u751f\u6210\u7528\u4e8e\u8bad\u7ec3\u7684\u5c0f\u6279\u6b21\u6570\u636e": 741, "\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u5757": 759, "\u5e76\u5c06\u5206\u533a\u6570\u636e\u81ea\u52a8\u52a0\u8f7d\u5230\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e2d": 742, "\u5e76\u5c06\u5b83\u4eec\u4f20\u9012\u7ed9\u7a00\u758f\u4f18\u5316\u5668": 742, "\u5e76\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d": 742, "\u5e76\u5c06\u751f\u6210\u7684\u5757\u5217\u8868\u653e\u5230gpu\u4e0a": 760, "\u5e76\u5c06\u751f\u6210\u7684\u5b50\u56fe\u5217\u8868\u653e\u5230gpu\u4e0a": 764, "\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728outputs\u5b57\u5178\u4e2d": 768, "\u5e76\u5c06\u7ed3\u679c\u8fd4\u56de\u7ed9\u7528\u6237": 768, "\u5e76\u5c06\u8f93\u51fa\u4f5c\u4e3a\u8282\u70b9\u7684\u65b0\u7279\u5f81": 754, "\u5e76\u5c55\u793a\u4e86\u5982\u4f55\u5b9e\u73b0\u7ba1\u9053\u7684\u6bcf\u4e2a\u7ec4\u4ef6": 735, "\u5e76\u63d0\u53d6\u8f93\u51fa\u7684user\u8282\u70b9\u5d4c\u5165": 774, "\u5e76\u6709\u53ef\u80fd\u5229\u7528\u8fd9\u70b9": 760, "\u5e76\u7528\u5b83\u6784\u9020\u4e00\u4e2a\u5f02\u6784\u56fe": 751, "\u5e76\u7528\u5bf9\u5e94\u7684\u4e24\u4e2a\u7aef\u70b9id\u8868\u793a\u4e00\u6761\u8fb9": 750, "\u5e76\u8ba1\u7b97\u672c\u5730\u8fdb\u7a0b\u7684\u8282\u70b9": 741, "\u5e76\u8df3\u8fc7\u4ece\u6587\u4ef6\u6784\u5efa\u56fe\u7684\u5b9e\u73b0": 739, "\u5e76\u8fd4\u56de\u53e6\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u7684\u5b57\u5178": 774, "\u5e76\u8fd4\u56de\u6e90\u8282\u70b9id\u6570\u7ec4\u548c\u76ee\u6807\u8282\u70b9id\u6570\u7ec4": 762, "\u5e76\u901a\u8fc7\u5728\u8bad\u7ec3\u8282\u70b9\u4e0a\u6bd4\u8f83\u9884\u6d4b\u548c\u771f\u5b9e\u6807\u7b7e\u6765\u8ba1\u7b97\u635f\u5931": 774, "\u5e76\u9488\u5bf9\u771f\u5b9e\u4e16\u754c\u4e2d\u5177\u6709\u5e42\u5f8b\u5206\u5e03\u7684\u56fe\u8fdb\u884c\u4e86\u4f18\u5316": 743, "\u5e94\u7528\u56fe\u5377\u79ef\u548c\u6fc0\u6d3b\u51fd\u6570": 772, "\u5e95\u5c42api\u8981\u6c42\u7528\u6237\u7f16\u5199\u4ee3\u7801\u4ee5\u660e\u786e\u5b9a\u4e49\u5982\u4f55\u5bf9\u8282\u70b9\u5c42\u8fdb\u884c\u91c7\u6837": 742, "\u5efa\u7acb\u70b9\u548c\u8fb9\u7279\u5f81": 770, "\u5efa\u8bae\u7684\u5b9e\u73b0\u662f\u5c06\u7ebf\u6027\u64cd\u4f5c\u5206\u6210\u4e24\u90e8\u5206": 755, "\u5f02\u6784\u56fe": [745, 746, 752, 756, 767], "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3\u548c\u540c\u6784\u56fe\u7684\u6a21\u578b\u8bad\u7ec3\u662f\u4e00\u6837\u7684": 774, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": [752, 765], "\u5f02\u6784\u56fe\u4e0a\u7684\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206": 756, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 764, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 773, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u548c\u540c\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6ca1\u6709\u592a\u5927\u533a\u522b": 773, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u6a21\u578b\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u51e0\u4e4e\u76f8\u540c": 762, "\u5f02\u6784\u56fe\u4e2d\u8282\u70b9\u7c7b\u578b\u7684\u987a\u5e8f": 751, "\u5f02\u6784\u56fe\u4e2d\u8fb9\u7c7b\u578b\u7684\u987a\u5e8f": 751, "\u5f02\u6784\u56fe\u4e3a\u7ba1\u7406\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u53ca\u5176\u76f8\u5173\u7279\u5f81\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6e05\u6670\u7684\u63a5\u53e3": 751, "\u5f02\u6784\u56fe\u6709\u4ee5\u4e0b\u8fd9\u4e9b\u8fb9\u7684\u7c7b\u578b": 769, "\u5f02\u6784\u56fe\u7684\u5377\u79ef\u64cd\u4f5c\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178\u7c7b\u578b\u53c2\u6570": 768, "\u5f02\u6784\u56fe\u7684\u8bad\u7ec3\u5faa\u73af\u4e0e\u540c\u6784\u56fe\u4e2d\u7684\u8bad\u7ec3\u5faa\u73af\u51e0\u4e4e\u76f8\u540c": 760, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 774, "\u5f02\u6784\u56fe\u91cc\u53ef\u4ee5\u6709\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 751, "\u5f02\u6784\u7684": 746, "\u5f20\u5efa": 752, "\u5f20\u6000\u6587": 752, "\u5f20\u91cf\u7c7b\u578b\u7684\u53c2\u6570\u5fc5\u987b\u5728gpu\u4e0a": 749, "\u5f52\u4e00\u5316": 767, "\u5f52\u4e00\u5316\u53ef\u4ee5\u662fl2\u5f52\u4e00\u5316": 766, "\u5f53": 758, "\u5f531\u4e2a\u8282\u70b9\u5165\u5ea6\u4e3a0\u65f6": 767, "\u5f53\u4e00\u53f0\u673a\u5668\u8fd0\u884c\u591a\u4e2a\u670d\u52a1\u5668\u65f6": 742, "\u5f53\u4f7f\u7528": 747, "\u5f53\u524d": 742, "\u5f53\u524d\u4ec5\u652f\u6301\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 742, "\u5f53\u524d\u7248\u672c\u7684\u5206\u5e03\u5f0f\u8bad\u7ec3api\u4ec5\u652f\u6301pytorch\u540e\u7aef": 741, "\u5f53\u524d\u7248\u672c\u7684\u5b9e\u73b0\u4ec5\u652f\u6301\u5177\u6709\u4e00\u79cd\u8282\u70b9\u7c7b\u578b\u548c\u4e00\u79cd\u8fb9\u7c7b\u578b\u7684\u56fe": 741, "\u5f53\u5f15\u5165\u591a\u79cd\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u540e": 751, "\u5f53\u7528\u6237\u4f7f\u7528\u542f\u52a8\u811a\u672c\u6267\u884c\u8bad\u7ec3\u811a\u672c\u65f6": 742, "\u5f53\u7528\u6237\u5728python\u547d\u4ee4\u884c\u6216jupyt": 742, "\u5f53\u811a\u672c\u5728\u670d\u52a1\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 742, "\u5f53\u8bad\u7ec3\u811a\u672c\u5728\u8bad\u7ec3\u5668\u6a21\u5f0f\u4e0b\u8fd0\u884c\u65f6": 742, "\u5f53\u8f93\u5165\u7279\u5f81": 767, "\u5f53\u8fb9\u7c7b\u578b\u552f\u4e00\u5730\u786e\u5b9a\u4e86\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u7684\u7c7b\u578b\u65f6": 751, "\u5f90\u4e1c\u8f89": 752, "\u5f97\u5206": 773, "\u5f97\u5230": 770, "\u5f97\u5230\u5757\u4e2d\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u521d\u59cb\u8282\u70b9id": 759, "\u5f97\u5230\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81": 763, "\u5f97\u5230\u8fb9id\u5230\u8f93\u5165\u8fb9\u754c\u4e2d\u8fb9\u7684\u521d\u59cbid\u7684\u6620\u5c04": 759, "\u5fc5\u987b\u5728": 742, "\u5fc5\u987b\u5728dgl\u7684\u4efb\u4f55\u5176\u4ed6\u5206\u5e03\u5f0fapi\u4e4b\u524d": 742, "\u5fc5\u987b\u5728\u521d\u59cb\u5316": 742, "\u5fc5\u987b\u5728\u96c6\u7fa4\u4e2d\u7684\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u8c03\u7528\u542f\u52a8\u811a\u672c": 744, "\u60c5\u51b5\u4f1a\u6709\u6240\u4e0d\u540c": 760, "\u60f3\u4e86\u89e3\u66f4\u591a\u4fe1\u606f": 746, "\u60f3\u4e86\u89e3\u66f4\u591a\u7684\u76f8\u5173\u51fd\u6570": 759, "\u60f3\u5b9e\u73b0\u81ea\u5b9a\u4e49\u7684\u90bb\u5c45\u91c7\u6837\u7b56\u7565": 759, "\u60f3\u8981\u5b9e\u73b0\u4e0e\u5c0f\u6279\u6b21\u8bad\u7ec3\u517c\u5bb9\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u6a21\u5757": 758, "\u60f3\u8981\u7528dgl\u63d0\u4f9b\u7684\u90bb\u5c45\u91c7\u6837\u5668\u505a\u8fb9\u5206\u7c7b": 760, "\u60f3\u8d2d\u4e70": 746, "\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528g": 768, "\u6211\u4eec\u9ed8\u8ba4\u4f7f\u7528\u4e00\u4e2a\u96c6\u7fa4\u7684\u73af\u5883\u8bbe\u7f6e": 741, "\u6216": [746, 751, 763], "\u6216numpi": 750, "\u6216\u4e3a\u76f8\u5173\u5b9e\u4f53\u63a8\u8350\u8fdb\u884c\u6700\u8fd1\u90bb\u641c\u7d22\u6216\u6700\u5927\u5185\u79ef\u641c\u7d22": 773, "\u6216\u65e0\u5411\u56fe\u4e2d\u7684\u90bb\u5c45": 759, "\u6216\u662f": 746, "\u6216\u8005\u60f3\u8981\u5173\u4e8e\u5757\u7684\u66f4\u6df1\u5165\u7684\u4ecb\u7ecd": 764, "\u6216\u8005\u60f3\u8981\u5bf9\u5757\u7684\u6982\u5ff5\u6709\u66f4\u8be6\u7ec6\u7684\u4e86\u89e3": 760, "\u6240\u4ee5dgl\u4e0d\u63a8\u8350\u5728": 754, "\u6240\u4ee5\u5f53\u5c06\u65e0\u5411\u7684networkx\u56fe\u8f6c\u6362\u4e3a": 747, "\u6240\u4ee5\u7528\u6237\u5fc5\u987b\u5c06\u5176\u9644\u52a0\u5230\u4f18\u5316\u5668\u4e0a\u4ee5\u8fdb\u884c\u5c0f\u6279\u91cf\u8bad\u7ec3": 742, "\u6240\u4ee5\u8fd9\u4e2a\u65f6\u5019": 740, "\u6240\u4ee5\u8fd9\u91cc\u96be\u4ee5\u679a\u4e3e\u6240\u6709\u9009\u9879": 747, "\u6240\u6709\u6d88\u606f\u4f20\u9012\u51fd\u6570": 772, "\u6240\u6709\u7684\u8fb9\u90fd\u662f\u6709\u65b9\u5411\u7684": 750, "\u6240\u6709\u8282\u70b9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5b9e\u4f53": 746, "\u6240\u6709\u8bad\u7ec3\u5668\u90fd\u5fc5\u987b\u8c03\u7528\u521b\u5efa": 742, "\u6240\u6709\u8fb9\u8868\u793a\u540c\u4e00\u7c7b\u578b\u7684\u5173\u7cfb": 746, "\u6240\u8ff0": 769, "\u6267\u884c\u542f\u52a8\u811a\u672c\u7684\u8ba1\u7b97\u673a": 744, "\u6267\u884c\u5b8c\u540e\u76f4\u63a5\u5bf9\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u64cd\u4f5c": 754, "\u6269\u5c55\u4e3a": 767, "\u6279\u6b21": [752, 757, 764, 767, 769], "\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u6216\u8fb9\u7279\u5f81\u5f20\u91cf\u5747\u901a\u8fc7\u5c06\u6240\u6709\u56fe\u4e0a\u7684\u76f8\u5e94\u7279\u5f81\u62fc\u63a5\u5f97\u5230": 772, "\u6279\u6b21\u5316\u7684\u56fe": 772, "\u6279\u91cf\u5f52\u4e00\u5316\u7b49": 772, "\u628a\u5b83\u5b58\u5728\u56fe\u4e2d\u7528\u6765\u505a\u6d88\u606f\u4f20\u9012": 756, "\u628a\u5b83\u7684\u8ba1\u7b97\u4f9d\u8d56\u5173\u7cfb\u53d8\u6210\u4e86\u4e00\u4e2a\u5c0f\u7684\u4e8c\u5206\u56fe": 759, "\u628a\u8fb9\u6743\u91cd\u4fdd\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 771, "\u62bd\u53d6\u51fa\u6765": 768, "\u62c6\u5206\u8bad\u7ec3\u96c6": 741, "\u62f7\u8d1d\u8282\u70b9\u7279\u5f81": 751, "\u62f7\u8d1d\u8fb9\u7684\u7279\u5f81": 751, "\u62fc\u63a5": 755, "\u6307\u4ee3\u4e00\u6761": 750, "\u6307\u5411\u8282\u70b9": 750, "\u6307\u5b9a\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55\u6216\u5df2\u4e0b\u8f7d\u6570\u636e\u7684\u5b58\u50a8\u76ee\u5f55": 736, "\u6307\u5b9a\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 744, "\u6307\u5b9a\u56fe\u7c7b\u578b": 767, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u5206\u533a\u6570\u636e\u7684\u76f8\u5bf9\u8def\u5f84": 744, "\u6307\u5b9a\u5de5\u4f5c\u7a7a\u95f4\u76ee\u5f55\u4e0b\u5b58\u50a8\u7528\u6237\u7684\u8bad\u7ec3\u811a\u672c\u7684\u76f8\u5bf9\u8def\u5f84": 744, "\u6307\u5b9a\u6bcf\u4e2a\u5173\u7cfb\u7684\u6d88\u606f\u4f20\u9012\u51fd\u6570": 756, "\u6307\u5b9a\u8bad\u7ec3\u673a\u5668\u4e2d\u5b58\u50a8\u4e0e\u5206\u5e03\u5f0f\u8bad\u7ec3\u6709\u5173\u7684\u6240\u6709\u6570\u636e\u7684\u76ee\u5f55": 744, "\u6307\u5b9a\u96c6\u7fa4\u7684ip\u914d\u7f6e\u6587\u4ef6": 744, "\u6307\u793a\u76f8\u5e94\u8282\u70b9\u548c\u8fb9\u7684\u8f93\u5165\u548c\u8f93\u51fa\u7279\u5f81\u5b57\u6bb5\u540d": 754, "\u6362\u53e5\u8bdd\u8bf4": 742, "\u63a5\u53d7\u4e00\u4e2a\u53c2\u6570": 754, "\u63a5\u53d7\u4e00\u4e2a\u5982\u4e0a\u6240\u8ff0\u7684\u53c2\u6570": 754, "\u63a5\u53d7\u4e00\u4e2a\u5b57\u5178": 756, "\u63a5\u53d7\u6765\u81ea\u540e\u7aef\u6846\u67b6\u7684\u4efb\u4f55\u8bbe\u5907\u5bf9\u8c61": 749, "\u63a5\u53e3\u53ef\u8bbf\u95ee\u8fd9\u4e9b\u7279\u5f81": 748, "\u63a5\u53e3\u7684\u91cd\u8981\u8bf4\u660e": 748, "\u63a5\u6536\u4e00\u4e2a\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9\u7279\u5f81\u5f20\u91cf\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 774, "\u63a5\u7740\u8c03\u7528\u7528\u6237\u9884\u5148\u6ce8\u518c\u5728\u8be5\u5173\u7cfb\u4e0a\u7684nn\u6a21\u5757": 768, "\u63a8\u65ad": 742, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": [741, 752], "\u63a8\u65ad\u7b97\u6cd5\u4e0d\u540c\u4e8e\u8bad\u7ec3\u7b97\u6cd5": 761, "\u63a8\u65ad\u7b97\u6cd5\u5c06\u5305\u542b\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u6267\u884c\u5404\u5c42": 761, "\u63a8\u7406\u671f\u95f4\u5b9a\u4f4d\u8282\u70b9": 743, "\u63a8\u8350\u7684\u65b9\u6cd5\u662f\u4f7f\u7528\u5e03\u5c14\u6570\u7ec4\u8868\u793a\u8bad\u7ec3": 742, "\u63a9\u7801": 736, "\u63a9\u7801\u5728pytorch\u548ctensorflow\u4e2d\u662fbool\u5f20\u91cf": 739, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u4ee5\u56fe\u4e3a\u4e2d\u5fc3\u7684\u7f16\u7a0b\u62bd\u8c61": 745, "\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u540c\u6784\u56fe\u8282\u70b9\u5206\u7c7b\u7684\u4f8b\u5b50": 774, "\u63d0\u4f9b\u4e86\u4e00\u4e9b\u529f\u80fd": 742, "\u63d0\u4f9b\u4e86\u4e00\u5c0f\u90e8\u5206": 742, "\u63d0\u4f9b\u4e86\u51e0\u4e2aapi\u6765\u8bbf\u95ee\u56fe\u7ed3\u6784": 742, "\u63d0\u4f9b\u4e86\u5bf9": 763, "\u63d0\u4f9b\u4e86\u63a5\u53e3\u4ee5\u5904\u7406\u56fe\u7684\u7ed3\u6784": 745, "\u63d0\u4f9b\u4e86\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 739, "\u63d0\u5230\u7684\u4e24\u5c42gcn\u4e3a\u4f8b": 761, "\u64cd\u4f5c": 754, "\u652f\u6301\u7d22\u5f15\u8bfb\u53d6\u548c\u5199\u5165": 742, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u975e\u5e38\u76f8\u4f3c": 760, "\u6570\u636e\u52a0\u8f7d\u5668\u7684\u5b9a\u4e49\u4e5f\u4e0e\u8fb9\u5206\u7c7b": 762, "\u6570\u636e\u5bfc\u5165": 739, "\u6570\u636e\u6587\u4ef6\u5939": 751, "\u6570\u636e\u6837\u672c\u7684\u6570\u91cf": 736, "\u6570\u636e\u96c6\u4e2d\u56fe\u7684\u6570\u91cf": 739, "\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u5f20\u56fe\u90fd\u6709\u5b83\u72ec\u7279\u7684\u7ed3\u6784\u548c\u8282\u70b9\u4e0e\u8fb9\u7684\u7279\u5f81": 772, "\u6570\u636e\u96c6\u4e2d\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u56fe": 739, "\u6570\u636e\u96c6\u4e5f\u53ea\u5305\u62ec\u4e00\u4e2a\u56fe": 738, "\u6570\u636e\u96c6\u7c7b\u4f3c": 738, "\u6574\u56fe\u5206\u7c7b": [739, 752, 769, 774], "\u6574\u56fe\u5206\u7c7b\u4e0e\u8282\u70b9\u5206\u7c7b\u6216\u94fe\u63a5\u9884\u6d4b\u7684\u4e3b\u8981\u533a\u522b\u662f": 772, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u8fd8\u9700\u8981\u5f97\u5230\u6574\u4e2a\u56fe\u7684\u8868\u793a": 772, "\u6574\u56fe\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u9700\u8981\u5728\u5f88\u591a\u56fe\u4e0a\u8fdb\u884c\u8bad\u7ec3": 772, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u4e0e\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u5178\u578b\u673a\u5668\u5b66\u4e60\u4efb\u52a1\u4e2d\u7684\u5927\u591a\u6570\u6570\u636e\u96c6\u7c7b\u4f3c": 739, "\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u91cc\u7684\u6bcf\u4e2a\u6570\u636e\u70b9\u662f\u4e00\u4e2a\u56fe\u548c\u5b83\u5bf9\u5e94\u6807\u7b7e\u7684\u5143\u7ec4": 772, "\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u53ef\u4ee5\u8bc6\u522b\u793e\u533a\u7684\u7c7b\u578b": 772, "\u6574\u56fe\u5206\u7c7b\u6d41\u7a0b": 772, "\u6574\u56fe\u5206\u7c7b\u7684\u5904\u7406\u6d41\u7a0b\u5982\u4e0b\u56fe\u6240\u793a": 772, "\u6587\u4ef6\u4e2d\u52a0\u8f7d": 747, "\u6587\u4ef6\u7684\u6240\u6709\u8def\u5f84\u90fd\u5e94\u6307\u5b9a\u4e3a\u5de5\u4f5c\u7a7a\u95f4\u7684\u76f8\u5bf9\u8def\u5f84": 744, "\u65b9\u4fbf\u5e7f\u5927\u4e2d\u6587\u7528\u6237\u7fa4\u5b66\u4e60\u548c\u4f7f\u7528dgl": 752, "\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u8fdb\u884c\u5f00\u53d1\u9a8c\u8bc1": 750, "\u65b9\u6cd5": [757, 759], "\u65b9\u6cd5\u4ece\u6700\u540e\u4e00\u5c42\u5f00\u59cb\u751f\u6210\u4e00\u4e2a\u5757\u7684\u5217\u8868": 759, "\u65b9\u6cd5\u8ba1\u7b97\u8fb9\u9884\u6d4b\u7684\u7ec4\u4ef6\u5373\u53ef\u8fdb\u884c\u8fb9\u5206\u7c7b": 770, "\u65b9\u6cd5\u8ba1\u7b97\u9884\u6d4b\u503c\u5373\u53ef": 770, "\u65e0\u5411\u7684": 746, "\u65e0\u76d1\u7763\u5b66\u4e60graphsag": 762, "\u65e0\u9700\u8fdb\u884c\u6b64\u7c7b\u68c0\u9a8c": 767, "\u65f6": 742, "\u65f6\u5206\u5e03\u5f0f\u91c7\u6837\u4ee3\u7801\u4e0e\u5355\u8fdb\u7a0b\u91c7\u6837\u51e0\u4e4e\u5b8c\u5168\u76f8\u540c": 742, "\u65f6\u8bbe\u7f6e": 760, "\u65f6\u9700\u8981\u5728\u7279\u5b9a\u7c7b\u578b\u7684\u8fb9\u4e0a\u8fdb\u884c\u8fed\u4ee3": 760, "\u65f6\u9700\u8981\u6307\u5b9a\u8fb9\u7684\u7c7b\u578b": 770, "\u662f": 743, "\u662f1\u4e2a\u5143\u7ec4\u65f6": 767, "\u662f\u4e00\u4e2apython\u7c7b": 742, "\u662f\u4e00\u4e2a\u56fe\u6df1\u5ea6\u5b66\u4e60\u7684\u57fa\u51c6\u6570\u636e\u96c6": 738, "\u662f\u4e00\u4e2a\u5728\u4e8c\u5206\u56fe\u4e0a\u505a\u8fb9\u5206\u7c7b\u7684\u4ee3\u7801\u793a\u4f8b": 760, "\u662f\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u90bb\u5c45\u91c7\u6837\u5668\u7c7b": 759, "\u662f\u4e00\u4e2a\u751f\u6210\u5b50\u56fe\u7684\u51fd\u6570": 759, "\u662f\u4e00\u4e2a\u9ad8\u7ea7api": 754, "\u662f\u4e00\u5bf9\u76f8\u53cd\u7684\u5173\u7cfb": 760, "\u662f\u4e24\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 745, "\u662f\u4ece\u5747\u5300\u5206\u5e03\u4e2d\u91c7\u6837\u7684": 773, "\u662f\u4ee5\u8fb9\u7c7b\u578b\u5b57\u5178\u548c\u9884\u6d4b\u7ed3\u679c\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 762, "\u662f\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u7684\u56fe": 756, "\u662f\u5426\u6253\u5370\u8fdb\u5ea6\u4fe1\u606f": 736, "\u662f\u5426\u91cd\u65b0\u5bfc\u5165\u6570\u636e\u96c6": 736, "\u662f\u56fe": 772, "\u662f\u5904\u7406": 736, "\u662f\u5b9a\u4e49\u5728\u6bcf\u6761\u8fb9\u4e0a\u7684\u6d88\u606f\u51fd\u6570": 753, "\u662f\u5bf9\u5e94\u6bcf\u4e2a\u5173\u7cfb": 768, "\u662f\u5e38\u6570\u9879\u8d85\u53c2\u6570": 773, "\u662f\u7528\u4e8e\u7279\u5f81\u5f52\u4e00\u5316\u7684\u53ef\u8c03\u7528\u51fd\u6570": 766, "\u662f\u805a\u5408\u51fd\u6570": 768, "\u662f\u8282\u70b9": 772, "\u662f\u8ba1\u7b97\u673a\u4e2d\u7684\u5de5\u4f5c\u76ee\u5f55": 744, "\u662f\u987e\u5ba2": 746, "\u6635\u79f0": 752, "\u6682\u4e0d\u652f\u6301\u7a00\u758f\u8282\u70b9\u548c\u8fb9\u7279\u5f81": 742, "\u66f4\u591a\u7ec6\u8282": 739, "\u66f4\u591a\u8be6\u7ec6\u7528\u6cd5\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357": 757, "\u66f4\u65b0\u51fd\u6570": [753, 754], "\u66f4\u65b0\u51fd\u6570\u662f\u4e00\u4e2a\u53ef\u9009\u62e9\u7684\u53c2\u6570": 754, "\u66ff\u6362\u4e3a": 763, "\u6700\u540e": [768, 772], "\u6700\u5e38\u89c1\u548c\u88ab\u5e7f\u6cdb\u4f7f\u7528\u7684\u4efb\u52a1\u4e4b\u4e00\u5c31\u662f\u8282\u70b9\u5206\u7c7b": 774, "\u6700\u7b80\u5355\u7684\u90bb\u5c45\u91c7\u6837\u5668\u662f": 764, "\u6709": 754, "\u67093\u4e2a\u6587\u4ef6\u4ee5dgl\u683c\u5f0f\u5b58\u50a8\u5206\u533a\u6570\u636e": 743, "\u6709\u4e9b\u60c5\u51b5\u4e0b\u4e0d\u9002\u5408\u4fdd\u5b58\u5904\u7406\u8fc7\u7684\u6570\u636e": 740, "\u6709\u5173dgl\u7684\u5185\u7f6e\u91c7\u6837\u5668\u7684\u5b8c\u6574\u5217\u8868": 760, "\u6709\u5173dgl\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u5982\u4f55\u5de5\u4f5c": 774, "\u6709\u5173\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 739, "\u6709\u5173\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 739, "\u6709\u5173\u8bad\u7ec3\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357": 739, "\u6709\u5173\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u66f4\u591a\u793a\u4f8b": 739, "\u6709\u5206\u5e03\u5f0f\u7684\u7248\u672c": 742, "\u6709\u5411": 746, "\u6709\u5411\u7684": 746, "\u6709\u591a\u79cd\u6587\u4ef6\u683c\u5f0f\u53ef\u50a8\u5b58\u56fe": 747, "\u6709\u65f6\u5e0c\u671b\u4ece\u8ba1\u7b97\u4f9d\u8d56\u4e2d\u5220\u9664\u51fa\u73b0\u5728\u8bad\u7ec3\u6570\u636e\u4e2d\u7684\u8fb9": 760, "\u6709\u65f6\u7528\u6237\u4f1a\u60f3\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 769, "\u6709\u65f6\u7528\u6237\u5e0c\u671b\u9884\u6d4b\u56fe\u4e2d\u8fb9\u7684\u5c5e\u6027\u503c": 770, "\u6709\u65f6\u8fb9\u4e0a\u7684\u6d88\u606f\u53ef\u80fd\u662f\u9ad8\u7ef4\u7684": 755, "\u6709\u7740\u8bb8\u591a\u4f7f\u7528\u8282\u70b9\u5d4c\u5165\u7684\u65b9\u6cd5": 773, "\u670d\u52a1\u5668": 741, "\u670d\u52a1\u5668\u8fdb\u7a0b": 741, "\u670d\u52a1\u5668\u8fdb\u7a0b\u8d1f\u8d23\u8c03\u7528\u521d\u59cb\u5316\u51fd\u6570": 742, "\u672a\u52a0\u6743\u7684": 746, "\u672a\u6765dgl\u5c06\u652f\u6301\u5206\u5e03\u5f0f\u56fe\u5212\u5206": 743, "\u672c\u4f8b\u4e2d\u7701\u7565": 774, "\u672c\u7ae0\u4e2d\u9009\u62e9": 774, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u4e00\u79cd\u5728\u5927\u56fe\u4e0a\u8fdb\u884c\u968f\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u65b9\u6cd5": 758, "\u672c\u7ae0\u4ecb\u7ecd\u4e86\u5982\u4f55\u4e3a\u7528\u6237\u81ea\u5df1\u7684\u56fe\u6570\u636e\u521b\u5efa\u4e00\u4e2adgl\u6570\u636e\u96c6": 735, "\u672c\u7ae0\u4ee3\u7801\u4f7f\u7528pytorch\u4f5c\u4e3adgl\u7684\u540e\u7aef\u6846\u67b6": 769, "\u672c\u7ae0\u4f1a\u4ee5\u4e0b\u9762\u4ee3\u7801\u6240\u521b\u5efa\u7684\u4e00\u4e2a\u5f02\u6784\u56fe\u4e3a\u4f8b": 769, "\u672c\u7ae0\u4f59\u4e0b\u7684\u5c0f\u8282\u4ecb\u7ecd\u4e86\u66f4\u591a\u7684\u9ad8\u7ea7\u4e3b\u9898": 758, "\u672c\u7ae0\u5047\u8bbe\u7528\u6237\u7684\u56fe\u4ee5\u53ca\u6240\u6709\u7684\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u90fd\u80fd\u5b58\u8fdbgpu": 769, "\u672c\u7ae0\u5171\u6709\u56db\u8282": 769, "\u672c\u7ae0\u5c06\u4f7f\u7528pytorch\u4f5c\u4e3a\u540e\u7aef": 765, "\u672c\u7ae0\u7684": 774, "\u672c\u7ae0\u7684\u524d\u534a\u90e8\u5206\u4ecb\u7ecd\u4e86\u4e0d\u540c\u573a\u666f\u4e0b\u5982\u4f55\u8fdb\u884c\u968f\u673a\u8bad\u7ec3\u7684\u65b9\u6cd5": 758, "\u672c\u7ae0\u7684\u5269\u4f59\u90e8\u5206\u5c06\u4ecb\u7ecd\u4ee5\u4e0b\u5206\u5e03\u5f0f\u7ec4\u4ef6": 741, "\u672c\u7ae0\u7684\u540e\u7eed\u90e8\u5206\u5c55\u793a\u4e86\u5b9e\u73b0\u8fd9\u4e9b\u51fd\u6570\u7684\u6700\u4f73\u5b9e\u8df5": 736, "\u672c\u7ae0\u7684\u5f02\u6784\u56fe\u6837\u4f8b\u6570\u636e": 770, "\u672c\u7ae0\u7684\u6700\u540e\u4e00\u8282\u89e3\u91ca\u4e86\u5982\u4f55\u5728\u5f02\u6784\u56fe\u4e0a\u5b9e\u73b0\u6d88\u606f\u4f20\u9012": 753, "\u672c\u7ae0\u901a\u8fc7\u4f7f\u7528": 769, "\u672c\u7ae0\u9996\u5148\u4ecb\u7ecd\u4e86dgl\u7684\u6d88\u606f\u4f20\u9012api": 753, "\u672c\u7ae0\u9996\u5148\u7b80\u8981\u4ecb\u7ecd\u4e86\u56fe\u7684\u5b9a\u4e49": 745, "\u672c\u8282\u4e0d\u6d89\u53ca\u901a\u8fc7\u8f6c\u6362\u5176\u4ed6\u56fe\u6765\u751f\u6210\u56fe\u7684\u51fd\u6570": 747, "\u672c\u8282\u4ec5\u7ed9\u51fa\u4e00\u4e9b\u5e38\u89c1\u683c\u5f0f\u7684\u4e00\u822c\u60c5\u51b5": 747, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728gpu\u663e\u5b58\u6709\u9650\u7684\u60c5\u51b5\u4e0b\u901a\u8fc7\u5c0f\u6279\u6b21\u5904\u7406\u548c\u90bb\u5c45\u91c7\u6837\u5b9e\u73b0\u5168\u56fe\u524d\u5411\u4f20\u64ad\u7684\u65b9\u6cd5": 761, "\u672c\u8282\u4ecb\u7ecd\u4e86\u5728\u8bad\u7ec3\u811a\u672c\u4e2d\u4f7f\u7528\u7684\u5206\u5e03\u5f0f\u8ba1\u7b97api": 742, "\u672c\u8282\u4ee5\u5185\u7f6e\u6570\u636e\u96c6": 739, "\u672c\u8282\u4ee5\u5185\u7f6e\u7684\u6570\u636e\u96c6": 739, "\u672c\u8282\u4f1a\u4ecb\u7ecd\u5b83\u4eec\u7684\u57fa\u672c\u7528\u6cd5": 738, "\u672c\u8282\u4f1a\u8bf4\u660e\u5982\u4f55\u7f16\u5199\u7528\u6237\u81ea\u5df1\u7684\u91c7\u6837\u5668\u5e76\u5c06\u5176\u52a0\u5165\u5230gnn\u7684\u8bad\u7ec3\u6846\u67b6\u4e2d": 759, "\u672c\u8282\u4f7f\u7528dgl\u5185\u7f6e\u7684\u6570\u636e\u96c6": 774, "\u672c\u8282\u5c06\u5c55\u793a\u5982\u4f55\u5904\u7406\u4e0e\u8fd9\u4e9b\u4efb\u52a1\u76f8\u5173\u7684\u6570\u636e\u96c6": 739, "\u672c\u8282\u628a\u8282\u70b9": 773, "\u672c\u8282\u91cd\u70b9\u4ecb\u7ecd\u4e86\u5904\u7406\u56fe": 739, "\u672c\u8d28\u4e0a": 763, "\u673a\u5668\u96c6\u7fa4\u4e0a": 744, "\u674e\u5e86\u6807": 752, "\u6765\u4fdd\u5b58\u56fe\u7684\u70b9id": 750, "\u6765\u505a\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u94fe\u8def\u9884\u6d4b\u7684\u6570\u636e\u96c6": 739, "\u6765\u52a0\u8f7d\u7b2c\u4e00\u4e2a\u5757\u7684\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 764, "\u6765\u5904\u7406zip\u6587\u4ef6": 737, "\u6765\u5c55\u793a\u6a21\u578b\u7684\u8bad\u7ec3": 774, "\u6765\u5e73\u8861\u6bcf\u4e2a\u7c7b\u578b\u8282\u70b9\u5728\u5b50\u56fe\u4e2d\u7684\u5165\u5ea6": 743, "\u6765\u5f00\u53d1\u6d88\u606f\u4f20\u9012\u529f\u80fd": 755, "\u6765\u6307\u4ee3\u8fd9\u4e24\u4e2a\u5173\u7cfb\u662f\u53ef\u4ee5\u7684": 751, "\u6765\u6307\u5b9a\u6574\u5408\u4e0d\u540c\u5173\u7cfb\u805a\u5408\u7ed3\u679c\u7684\u65b9\u5f0f": 756, "\u6765\u6307\u793a\u6b64\u591a\u4efb\u52a1\u6570\u636e\u96c6\u4e2d\u7684\u9884\u6d4b\u4efb\u52a1\u603b\u6570": 739, "\u6765\u66ff\u6362\u56fe": 764, "\u6765\u67e5\u770bdgl\u7684\u5185\u7f6e\u6a21\u578b\u6a21\u5757\u662f\u5426\u652f\u6301\u63a5\u53d7": 764, "\u6765\u6f14\u793a\u5982\u4f55\u4f7f\u7528\u7528\u4e8e\u8282\u70b9\u5206\u7c7b\u7684\u6570\u636e\u96c6": 739, "\u6765\u6f14\u793a\u5982\u4f55\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 769, "\u6765\u81eanetworkx": 747, "\u6765\u81eascipi": 747, "\u6765\u81ea\u52a8\u5b8c\u6210": 737, "\u6765\u83b7\u53d6\u8282\u70b9": 741, "\u6765\u83b7\u53d6\u88ab\u5212\u5206\u7684\u56fe\u5206\u533a\u6570\u636e": 741, "\u6765\u83b7\u5f97\u5206\u7c7b\u8f93\u51fa": 772, "\u6765\u8ba1\u7b97\u8282\u70b9\u95f4\u5b58\u5728\u8fde\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 773, "\u6765\u8ba1\u7b97\u8fb9\u7684\u5206\u6570": 762, "\u6765\u8bbf\u95ee\u8282\u70b9\u548c\u8fb9\u4e2d\u7684\u6570\u636e": 742, "\u6765\u904d\u5386\u6240\u6709\u7684\u8fb9\u7c7b\u578b": 762, "\u6784\u5efa\u4e00\u4e2a2\u5c42\u7684gnn\u6a21\u578b": 774, "\u6784\u5efa\u4e86\u4e00\u4e2a\u65e0\u5411\u7684networkx\u56fe": 747, "\u6784\u5efa\u56fe": 739, "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": [752, 763, 769, 774], "\u6784\u9020\u51fd\u6570\u4e2d\u7684\u53c2\u6570\u6ce8\u518c\u548c\u524d\u5411\u4f20\u64ad\u51fd\u6570\u4e2d\u4f7f\u7528\u7684\u5f20\u91cf\u64cd\u4f5c\u4e0e\u540e\u7aef\u6846\u67b6\u4e00\u6837": 765, "\u6784\u9020\u51fd\u6570\u5b8c\u6210\u4ee5\u4e0b\u51e0\u4e2a\u4efb\u52a1": 766, "\u6784\u9020\u51fd\u6570\u7684\u6700\u540e\u8c03\u7528\u4e86": 766, "\u6807\u7b7e": [736, 739], "\u6807\u7b7e\u548c\u6570\u636e\u96c6\u5212\u5206\u7684\u63a9\u7801": 736, "\u6807\u7b7e\u6570\u7b49\u57fa\u672c\u4fe1\u606f": 736, "\u6807\u91cf\u6574\u578b\u7279\u5f81": 748, "\u6829\u6829\u7684\u590f\u5929": 752, "\u6839\u636e": 770, "\u6839\u636edgl\u6240\u4f7f\u7528\u7684\u540e\u7aef\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6846\u67b6": 765, "\u6839\u636e\u4efb\u52a1\u8bbe\u8ba1\u5206\u7c7b\u5c42": 772, "\u6839\u636e\u5176\u590d\u6742\u6027": 756, "\u6839\u636e\u5f53\u524d\u7684\u4efb\u52a1\u60c5\u51b5": 743, "\u6839\u636e\u8fd9\u4e2a\u826f\u597d\u7684\u6027\u8d28": 772, "\u6839\u636e\u9700\u8981\u8f93\u5165\u8fd8\u662f\u8f93\u51fa\u8282\u70b9\u7684\u7279\u5f81\u6765\u9009\u62e9": 763, "\u68c0\u67e5": 737, "\u68c0\u67e5\u5728": [736, 740], "\u68c0\u6d4b\u8f93\u5165\u56fe\u5bf9\u8c61\u662f\u5426\u7b26\u5408\u89c4\u8303": 767, "\u6a21\u5757": [752, 763, 769, 774], "\u6a21\u5757\u4e2d": 767, "\u6a21\u5757\u4f5c\u4e3a\u56fe\u5377\u79ef\u5c42": 772, "\u6a21\u5757\u63a5\u53d7\u7684\u4e00\u4e2a\u53c2\u6570\u662f\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684": 764, "\u6a21\u5757\u9996\u5148\u5bf9\u6bcf\u79cd\u8fb9\u7c7b\u578b\u8fdb\u884c\u5355\u72ec\u7684\u56fe\u5377\u79ef\u8ba1\u7b97": 774, "\u6a21\u578b": 742, "\u6a21\u578b\u4e2d\u5e94\u7279\u522b\u6ce8\u610f\u4ee5\u4e0b\u51e0\u70b9": 772, "\u6a21\u578b\u5b9a\u4e49": 741, "\u6a21\u578b\u5b9a\u4e49\u5b8c\u6210\u540e": 772, "\u6a21\u578b\u5b9e\u73b0\u4f4d\u4e8e": 772, "\u6a21\u578b\u5b9e\u73b0\u6587\u4ef6\u4e2d": 770, "\u6a21\u578b\u5c06": 760, "\u6a21\u578b\u63a5\u53d7\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868": 760, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u540c\u6784\u56fe\u51e0\u4e4e\u76f8\u540c": 764, "\u6a21\u578b\u7684\u8bad\u7ec3\u4e0e\u8282\u70b9\u5206\u7c7b\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u7684\u60c5\u51b5\u975e\u5e38\u76f8\u4f3c": 760, "\u6a21\u578b\u7684\u8f93\u5165\u662f\u5e26\u8282\u70b9\u548c\u8fb9\u7279\u5f81\u7684\u6279\u6b21\u5316\u56fe": 772, "\u6a21\u578b\u8bad\u7ec3\u7684\u4ee3\u7801\u8bf7\u53c2\u8003\u4f4d\u4e8e": 772, "\u6a21\u578b\u8bad\u7ec3\u7684\u5faa\u73af": 741, "\u6b22\u8fce\u7ed9dgl\u8d21\u732e\u66f4\u591a\u7684\u6a21\u5757": 765, "\u6b63\u5728\u9500\u552e": 746, "\u6b63\u6837\u672c": 762, "\u6b64\u51fd\u6570\u5bf9": 754, "\u6b64\u521b\u5efa\u8fc7\u7a0b\u624d\u80fd\u6210\u529f": 742, "\u6b64\u5904\u53ea\u662f\u5c06\u5176\u4f5c\u4e3a\u81ea\u5b9a\u4e49gnn\u6a21\u5757\u7684\u4e00\u4e2a\u793a\u4f8b": 763, "\u6b64\u5916": [739, 749, 751], "\u6b64\u6a21\u5f0f\u4e3b\u8981\u7528\u4e8e\u5f00\u53d1\u548c\u6d4b\u8bd5": 742, "\u6b64\u8c03\u7528\u901a\u8fc7\u5c06\u6e90\u8282\u70b9\u7279\u5f81": 754, "\u6bcf\u4e00\u6761\u8fb9": 773, "\u6bcf\u4e2a": 738, "\u6bcf\u4e2a\u5173\u7cfb\u4e0a\u7684dgl": 768, "\u6bcf\u4e2a\u5173\u7cfb\u7531\u4e00\u4e2a\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4": 751, "\u6bcf\u4e2a\u56fe\u7684\u6807\u7b7e\u6570": 739, "\u6bcf\u4e2a\u8282\u70b9\u7279\u5f81\u5177\u6709\u552f\u4e00\u540d\u79f0": 748, "\u6bcf\u4e2a\u8fb9\u7279\u5f81\u4e5f\u5177\u6709\u552f\u4e00\u540d\u79f0": 748, "\u6bcf\u53f0\u8ba1\u7b97\u673a\u8d1f\u8d23\u4e00\u4e2a\u4e14\u53ea\u8d1f\u8d23\u4e00\u4e2a\u5206\u533a": 742, "\u6bcf\u5c42\u53ea\u5c55\u793a\u524d3\u4e2a\u5c0f\u6279\u6b21": 761, "\u6bcf\u6761\u8fb9\u7684\u6743\u91cd": 748, "\u6bcf\u6761\u8fb9\u90fd\u4e0e\u4e00\u4e2a\u6807\u91cf\u6743\u91cd\u503c\u76f8\u5173\u8054": 746, "\u6bcf\u6761\u8fb9\u90fd\u6709\u4e00\u4e2a\u6709\u610f\u4e49\u7684\u6807\u91cf\u6743\u91cd": 771, "\u6bcf\u6b21\u68af\u5ea6\u4e0b\u964d": 758, "\u6bcf\u79cd\u5173\u7cfb\u5bf9\u5e94\u4e00\u4e2a": 767, "\u6bcf\u8282\u5bf9\u5e94\u4e00\u79cd\u56fe\u5b66\u4e60\u4efb\u52a1": 769, "\u6bcf\u884c\u662f\u4e00\u4e2a\u8ba1\u7b97\u673a\u7684ip\u5730\u5740": 744, "\u6bd4\u5982": [755, 766], "\u6bd4\u5982gml\u6216json": 751, "\u6bd4\u5982\u5217\u8868": 750, "\u6bd4\u5982\u5728": 767, "\u6c88\u6210": 752, "\u6ca1\u6709\u4efb\u4f55\u6307\u5411\u5b83\u7684\u8fb9": 759, "\u6ca1\u6709\u6307\u5b9a\u8282\u70b9\u7c7b\u578b\u5c31\u6ca1\u6709\u660e\u786e\u7684\u8fd4\u56de\u503c": 751, "\u6ce8\u518c\u53c2\u6570\u548c\u5b50\u6a21\u5757": 766, "\u6ce8\u518c\u53ef\u5b66\u4e60\u7684\u53c2\u6570\u6216\u8005\u5b50\u6a21\u5757": 766, "\u6ce8\u610f": [747, 751, 761, 763, 769], "\u6ce8\u610f\u7ed3\u679c\u4fdd\u5b58\u5728\u540c\u4e00\u4e2a\u76ee\u6807\u7279\u5f81": 756, "\u6ce8\u610f\u8ba1\u7b97\u65b9\u6cd5\u662f\u4e00\u6837\u7684": 761, "\u6d4b\u8bd5\u96c6\u4e2d\u662f\u5426\u5b58\u5728\u5bf9\u5e94\u8282\u70b9": 742, "\u6d88\u606f\u4f20\u9012\u53ef\u4ee5\u91cd\u590d\u591a\u8f6e": 774, "\u6d88\u606f\u4f20\u9012\u662f\u5b9e\u73b0gnn\u7684\u4e00\u79cd\u901a\u7528\u6846\u67b6\u548c\u7f16\u7a0b\u8303\u5f0f": 753, "\u6d88\u606f\u4f20\u9012\u7684\u5b9a\u4e49\u662f": 759, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": [752, 769, 770, 774], "\u6d88\u606f\u4f20\u9012\u9700\u8981\u805a\u96c6\u5176\u90bb\u5c45": 759, "\u6d88\u606f\u51fd\u6570": 754, "\u6d88\u606f\u7684\u5185\u7f6e\u51fd\u6570\u7684\u547d\u540d\u7ea6\u5b9a\u662f": 754, "\u6d88\u606f\u805a\u5408\u548c\u8282\u70b9\u7279\u5f81\u66f4\u65b0": 754, "\u6e38\u620f": 751, "\u6e90": [754, 755], "\u6e90\u4ee3\u7801": 739, "\u6e90\u6587\u4ef6\u4e2d\u7684": 772, "\u6e90\u8282\u70b9": 762, "\u6e90\u8282\u70b9\u548c\u76ee\u6807\u8282\u70b9\u76f8\u540c": 767, "\u6e90\u8282\u70b9\u7279\u5f81": 767, "\u6e90\u8282\u70b9\u7c7b\u578b": 751, "\u6fc0\u6d3b\u51fd\u6570": 767, "\u70b9\u4e0a\u8ba1\u7b97": 753, "\u7136\u540e": [764, 774], "\u7136\u540e\u4ecb\u7ecd\u4e86\u4e00\u4e9b": 745, "\u7136\u540e\u540c\u6837\u901a\u8fc7\u8c03\u7528": 770, "\u7136\u540e\u5728\u5b50\u56fe\u4e0a\u8c03\u7528": 757, "\u7136\u540e\u5728\u7f51\u7edc\u7684\u7b2c": 758, "\u7136\u540e\u5bf9\u6240\u6709\u6d88\u606f\u6c42\u548c\u6765\u66f4\u65b0\u8282\u70b9\u7279\u5f81": 754, "\u7136\u540e\u5c06\u6bcf\u79cd\u8fb9\u7c7b\u578b\u4e0a\u7684\u6d88\u606f\u805a\u5408\u7ed3\u679c\u518d\u76f8\u52a0": 774, "\u7136\u540e\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u8fb9\u7684": 754, "\u7136\u540e\u5c06\u8be5\u5b50\u56fe\u8f6c\u6362\u4e3a\u540c\u6784\u56fe": 751, "\u7136\u540e\u5e94\u7528\u4e00\u4e2a\u7ebf\u6027\u5c42": 755, "\u7136\u540e\u6839\u636e\u56fe\u7c7b\u578b\u6269\u5c55\u8f93\u5165\u7279\u5f81": 767, "\u7136\u540e\u8bb2\u89e3\u4e86\u5982\u4f55\u9ad8\u6548\u5730\u5728\u70b9\u548c\u8fb9\u4e0a\u4f7f\u7528\u8fd9\u4e9bapi": 753, "\u7136\u800c": 761, "\u7269\u54c1": [745, 746], "\u7279\u5f81": [736, 751], "\u7279\u5f81\u4e0a": 754, "\u7279\u5f81\u4e5f\u5fc5\u987b\u5728gpu\u4e0a": 749, "\u7279\u5f81\u548c\u5212\u5206\u63a9\u7801\u7684\u6807\u51c6\u65b9\u6cd5": 739, "\u7279\u5f81\u548c\u76ee\u6807\u8282\u70b9\u7684": 754, "\u7279\u5f81\u5c3a\u5bf8\u662f7": 772, "\u7279\u5f81\u5f20\u91cf\u4f7f\u7528": 748, "\u7279\u5f81\u6570\u636e\u4e5f\u62f7\u8d1d\u5230\u4e86gpu\u4e0a": 749, "\u7279\u5f81\u6c42\u548c": 754, "\u7279\u6b64\u81f4\u8c22\u4e0b\u8ff0\u8d21\u732e\u8005": 752, "\u72ec\u7acb\u6a21\u5f0f\u8981\u6c42\u8f93\u5165\u56fe\u4ec5\u5177\u6709\u4e00\u4e2a\u5206\u533a": 742, "\u738b\u5efa\u6c11": 752, "\u73a9": 751, "\u751f\u6210\u8fb9\u754c": 759, "\u7528": [741, 750, 765], "\u7528\u4e8e\u5206\u5e03\u5f0f\u56fe\u7684": 742, "\u7528\u4e8e\u5206\u5e03\u5f0f\u5f20\u91cf\u7684": 742, "\u7528\u4e8e\u521d\u59cb\u5316": 742, "\u7528\u4e8e\u5728dgl\u4e2d\u81ea\u5b9a\u4e49\u56fe\u6570\u636e\u96c6\u7684\u6a21\u677f": 736, "\u7528\u4e8e\u5728\u673a\u5668\u96c6\u7fa4\u4e2d\u542f\u52a8\u5206\u5e03\u5f0f\u8bad\u7ec3\u4efb\u52a1": 744, "\u7528\u4e8e\u5b9a\u4e49\u5f02\u6784\u56fe\u4e0agnn\u6a21\u5757": 768, "\u7528\u4e8e\u5bf9\u8282\u70b9\u548c\u8fb9\u8fdb\u884c\u91c7\u6837\u4ee5\u751f\u6210\u5c0f\u6279\u6b21\u8bad\u7ec3\u6570\u636e": 742, "\u7528\u4e8e\u5c06\u56fe\u5206\u533a\u590d\u5236\u5230\u96c6\u7fa4": 744, "\u7528\u4e8e\u6307\u5b9a\u56fe\u7c7b\u578b\u5e76\u5c06": 767, "\u7528\u4e8e\u8bbf\u95ee\u5176\u5143\u6570\u636e": 742, "\u7528\u4e8e\u8bbf\u95ee\u8ba1\u7b97\u673a\u96c6\u7fa4\u4e2d\u7684\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 742, "\u7528\u4ece0\u5f00\u59cb\u7684\u8fde\u7eed\u6574\u6570\u91cd\u65b0\u6807\u8bb0\u6240\u6709\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9": 751, "\u7528\u4fdd\u5b58\u7684\u8fb9\u7279\u5f81\u4e0e\u5bf9\u5e94\u8fb9\u7684\u539f\u59cb\u6d88\u606f\u76f8\u4e58": 771, "\u7528\u6237": [745, 746, 751], "\u7528\u6237\u4e5f\u53ef\u4ee5\u4e0d\u4f7f\u7528\u5b83": 754, "\u7528\u6237\u4e5f\u53ef\u4ee5\u4f7f\u7528mlp": 770, "\u7528\u6237\u4e5f\u53ef\u4ee5\u7f16\u5199\u4e00\u4e2a": 770, "\u7528\u6237\u4ec5\u9700\u5bf9\u5355\u673a\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u4ee3\u7801\u7a0d\u4f5c\u4fee\u6539\u5c31\u53ef\u5b9e\u73b0\u5206\u5e03\u5f0f\u8bad\u7ec3": 741, "\u7528\u6237\u4ec5\u9700\u8981\u5b9e\u73b0": 759, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528": 764, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u4e0e\u8282\u70b9": 762, "\u7528\u6237\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7": 743, "\u7528\u6237\u53ea\u9700\u4f7f\u7528\u65b0\u7684\u8282\u70b9\u548c\u8fb9\u7684id": 743, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u5165\u8282\u70b9\u7684\u7279\u5f81": 764, "\u7528\u6237\u53ea\u9700\u8981\u52a0\u8f7d\u8f93\u51fa\u8282\u70b9\u7684\u6807\u7b7e": 764, "\u7528\u6237\u53ea\u9700\u8981\u8ba1\u7b97\u6240\u6709\u8282\u70b9\u7c7b\u578b\u7684\u8282\u70b9\u8868\u793a": 770, "\u7528\u6237\u53ef\u4ee5\u4ece\u8fd4\u56de\u7684\u5b57\u5178\u4e2d\u63d0\u53d6": 774, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528": [760, 774], "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u50cfpandas\u8fd9\u6837\u7684\u5305\u5148\u5c06csv\u6587\u4ef6\u89e3\u6790\u4e3anumpy\u6570\u7ec4\u6216\u6846\u67b6\u5f20\u91cf": 751, "\u7528\u6237\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u51fd\u6570": 754, "\u7528\u6237\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6570\u636e\u52a0\u8f7d\u5668": 759, "\u7528\u6237\u53ef\u4ee5\u5229\u7528\u8fd9\u4e00\u70b9\u5c06\u8bad\u7ec3\u96c6": 743, "\u7528\u6237\u53ef\u4ee5\u53c2\u7167": 761, "\u7528\u6237\u53ef\u4ee5\u53c2\u8003": [739, 759, 760, 762, 764], "\u7528\u6237\u53ef\u4ee5\u53c2\u8003\u4ee5\u4e0b\u5185\u7f6e\u6570\u636e\u96c6": 739, "\u7528\u6237\u53ef\u4ee5\u53ea\u4f7f\u7528\u4e00\u4e2a\u5b57\u7b26\u4e32\u800c\u4e0d\u662f\u5b57\u7b26\u4e32\u4e09\u5143\u7ec4\u6765\u6307\u5b9a\u8fb9\u7c7b\u578b": 751, "\u7528\u6237\u53ef\u4ee5\u5728": [739, 774], "\u7528\u6237\u53ef\u4ee5\u5728\u5b9e\u4f8b\u5316": 760, "\u7528\u6237\u53ef\u4ee5\u5b58\u50a8\u6709\u5173\u6570\u636e\u96c6\u7684\u56fe": 736, "\u7528\u6237\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u6a21\u578b": 772, "\u7528\u6237\u53ef\u4ee5\u5bf9\u8981\u8fdb\u884c\u94fe\u63a5\u9884\u6d4b\u7684\u8fb9\u7c7b\u578b\u6784\u9020\u4e00\u4e2a\u8d1f\u91c7\u6837\u56fe": 773, "\u7528\u6237\u53ef\u4ee5\u5c06": 742, "\u7528\u6237\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u6cbf\u6240\u6709\u5165\u8fb9\u4f20\u9012\u6d88\u606f\u7684\u8fb9\u754c": 759, "\u7528\u6237\u53ef\u4ee5\u5c06\u5b83\u4f5c\u4e3a\u6807\u7b7e\u4f7f\u7528": 770, "\u7528\u6237\u53ef\u4ee5\u5c06\u6743\u91cd\u50a8\u5b58\u4e3a\u4e00\u4e2a\u8fb9\u7279\u5f81": 748, "\u7528\u6237\u53ef\u4ee5\u5c06\u7528\u4e8e\u5757\u7684\u8bed\u53e5\u548c\u539f\u5148\u7528\u4e8e\u6574\u56fe\u7684\u8bed\u53e5\u8fdb\u884c\u6bd4\u8f83": 763, "\u7528\u6237\u53ef\u4ee5\u5c06\u91c7\u6837\u5668\u5bf9\u8c61\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668\u5bf9\u8c61": 759, "\u7528\u6237\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u5176\u62d3\u5c55\u4e3a\u5bf9\u591a\u79cd\u8fb9\u7c7b\u578b\u4e0a\u8fdb\u884c\u9884\u6d4b": 773, "\u7528\u6237\u53ef\u4ee5\u5f88\u65b9\u4fbf\u5730\u7528\u5173\u7cfb\u5207\u7247\u7684\u65b9\u5f0f\u521b\u5efa\u8fd9\u4e2a\u56fe": 770, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u6240\u793a\u7684\u65b9\u5f0f\u6765\u4f7f\u7528": 739, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u5b9e\u73b0\u6a21\u578b\u7684\u8bad\u7ec3": 774, "\u7528\u6237\u53ef\u4ee5\u6309\u5982\u4e0b\u65b9\u5f0f\u7f16\u5199\u9884\u6d4b\u6a21\u5757": 770, "\u7528\u6237\u53ef\u4ee5\u6309\u8282\u70b9\u7c7b\u578b\u6765\u83b7\u53d6\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9": 759, "\u7528\u6237\u53ef\u4ee5\u67e5\u9605": 764, "\u7528\u6237\u53ef\u4ee5\u6dfb\u52a0\u5c5e\u6027": 739, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u590d\u7528\u5b83": 760, "\u7528\u6237\u53ef\u4ee5\u7b80\u5355\u5730\u6309\u5982\u4e0b\u5f62\u5f0f\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 774, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528": 760, "\u7528\u6237\u53ef\u4ee5\u8c03\u7528graphdataload": 772, "\u7528\u6237\u53ef\u4ee5\u8f7b\u677e\u5730\u7f16\u5199\u5728\u6240\u6709\u8fb9\u4e0a\u8fdb\u884c\u9884\u6d4b\u7684\u5168\u56fe\u8bad\u7ec3\u4ee3\u7801": 770, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7": [759, 772], "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u4fee\u6539nn\u6a21\u5757\u4e2d\u6240\u6709\u7684\u6d88\u606f\u4f20\u9012\u64cd\u4f5c\u6765\u7ed9nn\u6a21\u5757\u589e\u52a0\u8fb9\u6743\u91cd\u652f\u6301": 771, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u8fc7\u7a0b\u4e2d\u4f20\u5165\u4e24\u4e2agpu\u5f20\u91cf\u6765\u521b\u5efagpu\u4e0a\u7684": 749, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6307\u5b9a\u8981\u4fdd\u7559\u7684\u5173\u7cfb\u6765\u521b\u5efa\u5f02\u6784\u56fe\u7684\u5b50\u56fe": 751, "\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6bd4\u8f83\u8fb9": 762, "\u7528\u6237\u53ef\u4ee5\u904d\u5386\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u83b7\u5f97\u7531\u5c0f\u6279\u6b21\u8fb9\u7ec4\u6210\u7684\u5b50\u56fe": 760, "\u7528\u6237\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528": 773, "\u7528\u6237\u53ef\u4ee5\u91cd\u7528\u5728\u8fb9\u5206\u7c7b": 762, "\u7528\u6237\u53ef\u5c06\u4e00\u7cfb\u5217\u7684\u56fe\u5efa\u7acb\u6210\u4e00\u4e2a\u56fe\u6279\u6b21": 772, "\u7528\u6237\u53ef\u5c06\u5176\u4f20\u7ed9\u4e00\u4e2a\u591a\u5c42\u611f\u77e5\u673a": 772, "\u7528\u6237\u53ef\u5c06\u591a\u5f20\u56fe\u7ec4\u6210\u4e00\u4e2a\u6279\u6b21": 772, "\u7528\u6237\u53ef\u7528\u5982\u4e0b\u4ee3\u7801\u83b7\u53d6": 774, "\u7528\u6237\u53ef\u80fd\u4f1a\u9700\u8981\u6807\u51c6\u5316\u539f\u59cb\u8fb9\u6743\u91cd": 771, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u6cbf\u7740\u6240\u6709\u8fb9\u7c7b\u578b\u4ece\u90bb\u5c45\u90a3\u91cc\u6536\u96c6\u6d88\u606f": 774, "\u7528\u6237\u53ef\u80fd\u5e0c\u671b\u9884\u6d4b\u7ed9\u5b9a\u8282\u70b9\u4e4b\u95f4\u662f\u5426\u5b58\u5728\u8fb9": 773, "\u7528\u6237\u53ef\u80fd\u9700\u8981\u5c06\u4e00\u4e9b\u5173\u7cfb\u5408\u5e76": 751, "\u7528\u6237\u5728\u8bad\u7ec3\u8fb9\u5206\u7c7b\u6a21\u578b\u65f6": 760, "\u7528\u6237\u5728\u8c03\u7528dglgraph": 751, "\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 754, "\u7528\u6237\u5c06\u9700\u8981\u4e00\u53f0\u5927\u5185\u5b58\u7684\u673a\u5668\u6765\u5bf9\u56fe\u8fdb\u884c\u5212\u5206": 743, "\u7528\u6237\u5c31\u53ef\u4ee5\u5f00\u59cb\u8bad\u7ec3\u6a21\u578b": 772, "\u7528\u6237\u5e0c\u671b\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5e94\u7528\u4e0d\u540c\u7684\u64cd\u4f5c": 751, "\u7528\u6237\u5fc5\u987b\u5b9e\u73b0": 739, "\u7528\u6237\u6240\u9700\u8981\u505a\u7684\u5c31\u662f\u7528\u4e0a\u9762\u751f\u6210\u7684\u5757": 764, "\u7528\u6237\u6307\u5357\u5c06\u4ee5\u5185\u7f6e\u6570\u636e\u96c6\u4e3a\u4f8b": 739, "\u7528\u6237\u6700\u597d\u4f7f\u7528": 750, "\u7528\u6237\u6709\u65f6\u4f1a\u5e0c\u671b\u4ece\u91c7\u6837\u5f97\u5230\u7684\u5c0f\u6279\u6b21\u56fe\u4e2d\u5220\u53bb\u90e8\u5206\u8fb9\u53ca\u5176\u5bf9\u5e94\u7684\u53cd\u5411\u8fb9": 760, "\u7528\u6237\u7684\u4efb\u52a1\u662f\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 770, "\u7528\u6237\u81ea\u5df1\u7684\u8bad\u7ec3\u4ee3\u7801": 739, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5411\u7c7b\u6dfb\u52a0\u5c5e\u6027\u4ee5\u6307\u793a\u4e00\u4e9b\u6709\u7528\u7684\u6570\u636e\u96c6\u4fe1\u606f": 739, "\u7528\u6237\u8fd8\u53ef\u4ee5\u5c06\u65b0\u7684": 742, "\u7528\u6237\u8fd8\u53ef\u4ee5\u63d0\u4f9b\u552f\u4e00\u7684\u5f20\u91cf\u540d\u79f0": 742, "\u7528\u6237\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 762, "\u7528\u6237\u8fd8\u5fc5\u987b\u5c06gnn\u7684\u5c42\u6570\u4f20\u9012\u7ed9\u7236\u7c7b": 759, "\u7528\u6237\u8fd8\u662f\u5728\u8282\u70b9\u6216\u8fb9\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 772, "\u7528\u6237\u8fd8\u9700\u8981\u4ee5\u76f8\u540c\u7684\u65b9\u5f0f\u5206\u5272\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 742, "\u7528\u6237\u9664\u4e86\u9700\u8981\u4f7f\u7528\u5f02\u6784\u56fe\u5377\u79ef\u6a21\u5757": 772, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u4e2a\u8bad\u7ec3\u5668\u6307\u5b9a\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf": 744, "\u7528\u6237\u9700\u8981\u4e3a\u6bcf\u6761\u8fb9\u90fd\u521b\u5efa\u4e24\u4e2a\u65b9\u5411\u7684\u8fb9": 750, "\u7528\u6237\u9700\u8981\u4ece\u6a21\u578b\u4e2d\u6536\u96c6\u6240\u6709\u5206\u5e03\u5f0f\u5d4c\u5165": 742, "\u7528\u6237\u9700\u8981\u5206\u5272\u8bad\u7ec3\u96c6": 742, "\u7528\u6237\u9700\u8981\u5b9a\u4e49\u8d1f\u91c7\u6837\u51fd\u6570": 762, "\u7528\u6237\u9700\u8981\u5c06\u8d1f\u91c7\u6837\u7684\u6837\u672c\u8868\u793a\u4e3a\u53e6\u5916\u4e00\u4e2a\u56fe": 773, "\u7528\u6237\u9700\u8981\u63d0\u4f9b\u5206\u533a\u914d\u7f6e\u6587\u4ef6": 742, "\u7528\u6237\u9700\u8981\u660e\u786e\u5730\u6307\u660e\u8282\u70b9\u7684\u6570\u91cf": 750, "\u7528\u6237\u9700\u8981\u6784\u5efa\u4e00\u4e2a\u8fb9\u5206\u7c7b": 770, "\u7528\u6237\u9996\u5148\u9700\u8981\u8bbe\u7f6e\u6570\u636e\u7684\u7ef4\u5ea6": 766, "\u7528\u6765\u6307\u5b9a\u4e0d\u540c\u8bad\u7ec3\u5668\u4e4b\u95f4\u7684\u7f51\u7edc\u901a\u4fe1\u6240\u4f7f\u7528\u7684\u7aef\u53e3": 744, "\u7528\u8be5\u6a21\u5757\u8fdb\u884c\u79bb\u7ebf\u63a8\u65ad": 761, "\u7528\u8fb9\u4e24\u7aef\u8282\u70b9\u8868\u793a\u4e3a\u6bcf\u4e2a\u7c7b\u522b\u6253\u5206": 760, "\u7531gpu\u5f20\u91cf\u6784\u9020\u7684\u56fe\u4e5f\u5728gpu\u4e0a": 749, "\u7531\u4e8etensor\u7c7b\u5185\u90e8\u4f7f\u7528c\u6765\u5b58\u50a8": 750, "\u7531\u4e8e\u4e0a\u9762\u8fd9\u884c\u4ee3\u7801\u5c06\u539f\u6765\u7684\u8fb9\u7c7b\u578b\u5b58\u6210\u8fb9\u7279\u5f81": 770, "\u7531\u4e8e\u6574\u56fe\u5206\u7c7b\u5904\u7406\u7684\u662f\u5f88\u591a\u76f8\u5bf9\u8f83\u5c0f\u7684\u56fe": 772, "\u7531\u4e8e\u66f4\u65b0\u51fd\u6570\u901a\u5e38\u53ef\u4ee5\u7528\u7eaf\u5f20\u91cf\u64cd\u4f5c\u5b9e\u73b0": 754, "\u7531\u4e8e\u8fd9\u91cc\u7684\u5173\u7cfb\u5b9a\u4e49\u6d88\u9664\u4e86\u8fb9\u7c7b\u578b\u7684\u6b67\u4e49": 751, "\u7531\u591a\u5c42gnn\u8ba1\u7b97\u5f97\u51fa": 773, "\u7684": [750, 758], "\u7684api\u4ee5\u65b9\u4fbf\u6570\u636e\u8bbf\u95ee": 742, "\u7684api\u7528\u4e8e\u6b64\u4f18\u5316": 739, "\u7684nn\u6a21\u5757": 768, "\u7684\u4ee3\u7801\u5b9e\u73b0\u6709\u6240\u4e0d\u540c": 760, "\u7684\u5177\u4f53\u5b9a\u4e49": 774, "\u7684\u5178\u578b\u793a\u4f8b\u5982\u4e0b": 744, "\u7684\u5185\u5b58\u7a7a\u95f4": 758, "\u7684\u51fd\u6570\u662f": 767, "\u7684\u5212\u5206": 743, "\u7684\u5212\u5206\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8ba1\u7b97\u8d1f\u8f7d\u4e0d\u5e73\u8861": 743, "\u7684\u521b\u5efa\u662f\u4e00\u4e2a\u540c\u6b65\u64cd\u4f5c": 742, "\u7684\u521b\u5efa\u9700\u8981": 742, "\u7684\u524d\u9a71\u8282\u70b9": 759, "\u7684\u539f\u5219": 748, "\u7684\u53c2\u6570": 756, "\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6d88\u606f\u51fd\u6570": 754, "\u7684\u56fe\u540d\u79f0\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u53c2\u6570": 743, "\u7684\u5b50\u7c7b": [735, 739], "\u7684\u5b9e\u4f8b": 754, "\u7684\u5b9e\u73b0\u4e5f\u53d1\u751f\u4e86\u53d8\u5316": 739, "\u7684\u5b9e\u73b0\u4f1a\u5305\u542b\u4e24\u4e2a\u5b57\u5178": 764, "\u7684\u5b9e\u73b0\u5982\u4e0b": 759, "\u7684\u5de6\u534a\u90e8\u5206\u548c\u53f3\u534a\u90e8\u5206": 755, "\u7684\u5f02\u6784\u56fe": 751, "\u7684\u5f20\u91cf": 771, "\u7684\u5f97\u5206\u6765\u8bad\u7ec3\u94fe\u8def\u6a21\u578b": 762, "\u7684\u6210\u5458\u5c5e\u6027": 754, "\u7684\u6240\u6709\u5165\u8fb9": 759, "\u7684\u6559\u7a0b": 747, "\u7684\u6570\u636e": 769, "\u7684\u6bcf\u53f0\u8ba1\u7b97\u673a\u4e0a\u8fd0\u884c": 741, "\u7684\u6d88\u606f": 759, "\u7684\u7236\u7c7b": 759, "\u7684\u7279\u5f81": [745, 748, 772, 774], "\u7684\u76ee\u7684\u662f\u63d0\u4f9b\u4e00\u79cd\u6807\u51c6\u4e14\u65b9\u4fbf\u7684\u65b9\u5f0f\u6765\u5bfc\u5165\u56fe\u6570\u636e": 736, "\u7684\u793a\u4f8b": 768, "\u7684\u7b80\u5316\u7248": 763, "\u7684\u805a\u5408\u7ed3\u679c\u8fdb\u884c\u64cd\u4f5c": 754, "\u7684\u8282\u70b9": 746, "\u7684\u8282\u70b9\u5d4c\u5165": 774, "\u7684\u8282\u70b9\u7279\u5f81": 759, "\u7684\u8282\u70b9\u8868\u793a": 773, "\u7684\u8282\u70b9\u8868\u793a\u6a21\u5757\u79f0\u4f5c": 770, "\u7684\u8868\u5f81": 772, "\u7684\u8868\u793a\u6240\u9700\u7684\u8282\u70b9": 764, "\u7684\u8ba1\u7b97": 772, "\u7684\u8bba\u6587\u4e2d": 759, "\u7684\u8be6\u7ec6\u4fe1\u606f": 739, "\u7684\u8bed\u6cd5\u4e0e\u5e38\u89c4\u56fe\u4e2d\u7684": 759, "\u7684\u8bed\u6cd5\u5c06\u53ea\u5305\u542b\u8be5\u5173\u7cfb\u7684\u5b50\u56fe": 768, "\u7684\u8f93\u51fa": 759, "\u7684\u8f93\u51fa\u5f20\u91cf\u7684\u5217\u8868": 768, "\u7684\u8fb9": [750, 773], "\u7684\u8fb9\u4e92\u76f8\u8fde\u63a5": 746, "\u7684\u8fb9\u603b\u662f\u6709\u5411\u7684": 747, "\u7684\u8fb9\u7684\u6807\u7b7e": 770, "\u7684\u8fb9\u7c7b\u578b": 770, "\u7684\u90e8\u5206": 739, "\u7684\u9ed8\u8ba4\u5b9e\u73b0\u662f\u5411\u540e\u8fed\u4ee3": 759, "\u76ee\u524d": 742, "\u76ee\u5f55\u4e2d": 739, "\u76ee\u6807": [754, 755], "\u76ee\u6807\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 754, "\u76ee\u6807\u8282\u70b9\u6570\u7ec4\u5bf9\u4e3a\u503c\u7684\u5b57\u5178": 762, "\u76ee\u6807\u8282\u70b9\u7c7b\u578b": 751, "\u76f4\u5230\u5230\u8fbe\u8f93\u5165\u5c42": 758, "\u76f4\u5230\u8bad\u7ec3\u4efb\u52a1\u7ed3\u675f": 742, "\u76f8\u4e58\u751f\u6210\u6d88\u606f": 754, "\u76f8\u5173api": [747, 748, 750, 751], "\u76f8\u5173\u6982\u8ff0\u8bf7\u9605\u8bfbapi\u53c2\u8003\u624b\u518c": 747, "\u76f8\u5173\u7684\u6838\u5fc3\u6982\u5ff5": 745, "\u76f8\u5173\u7684\u7279\u5f81\u4e5f\u4f1a\u88ab\u62f7\u8d1d": 751, "\u76f8\u540c": [759, 768], "\u76f8\u540c\u540d\u79f0\u7684\u7279\u5f81\u5fc5\u987b\u5177\u6709\u76f8\u540c\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b": 748, "\u76f8\u5bf9\u5730": 746, "\u76f8\u6bd4\u4e4b\u4e0b": 761, "\u76f8\u6bd4\u540c\u6784\u56fe": 751, "\u77e5\u9053": 760, "\u786e\u5b9a": 767, "\u793a\u4f8b\u5982\u4e0b\u6240\u793a": 762, "\u793e\u4ea4\u7f51\u7edc\u7684\u56fe\u7531\u8868\u793a\u540c\u4e00\u5b9e\u4f53\u7c7b\u578b\u7684\u4eba\u53ca\u5176\u76f8\u4e92\u4e4b\u95f4\u7684\u793e\u4ea4\u5173\u7cfb\u7ec4\u6210": 746, "\u79cd\u5b50\u8282\u70b9": 759, "\u79f0\u4e3a": 736, "\u79f0\u4e3a\u70b9id": 750, "\u79f0\u4e3a\u8fb9id": 750, "\u7ae0\u8282": 752, "\u7ae0\u8282\u4e2d\u4e5f\u4f1a\u63d0\u5230": 759, "\u7b2c1\u7ae0": 752, "\u7b2c2\u4e2a\u5143\u7d20\u4e3a\u76ee\u6807\u8282\u70b9\u7279\u5f81": 767, "\u7b2c2\u7ae0": [752, 769, 770, 774], "\u7b2c3\u7ae0": [752, 763, 769, 774], "\u7b2c4\u7ae0": [752, 769, 772, 774], "\u7b2c5\u7ae0": [752, 758], "\u7b2c6\u7ae0": [752, 757, 767, 769], "\u7b2c7\u7ae0": 752, "\u7b2c\u4e00\u90e8\u5206\u4e0e": 760, "\u7b2c\u4e8c\u4e2a\u53c2\u6570\u6307\u5b9a\u8f93\u51fa\u8282\u70b9": 759, "\u7b2c\u4e8c\u6b65\u662f\u8ba1\u7b97\u8fb9\u4e0a\u7684\u9884\u6d4b\u503c": 770, "\u7b2c\u4e8c\u90e8\u5206\u7684\u8f93\u5165\u901a\u5e38\u662f\u524d\u4e00\u90e8\u5206\u7684\u8f93\u51fa": 760, "\u7b49": [754, 766], "\u7b49conv\u6a21\u5757\u4e2d": 767, "\u7b49\u4ef7\u4e8e\u5982\u4e0b\u6240\u793a\u7684\u5bf9\u63a5\u6536\u5230\u6d88\u606f\u6c42\u548c\u7684\u7528\u6237\u5b9a\u4e49\u51fd\u6570": 754, "\u7ba1\u7406\u5728\u591a\u4e2a\u8ba1\u7b97\u673a\u4e2d\u88ab\u5212\u5206\u548c\u5b58\u50a8\u7684\u5bc6\u96c6\u5f20\u91cf": 742, "\u7c7b": 737, "\u7c7b\u4e2d\u4e0b\u8f7d\u4e00\u4e2a": 737, "\u7c7b\u4e2d\u770b\u5230\u6a21\u578b\u5b9e\u73b0\u7684\u7ec6\u8282": 774, "\u7c7b\u4f3c": 741, "\u7c7b\u548c": 764, "\u7c7b\u578b\u7684\u8282\u70b9\u4e5f\u4f1a\u88ab\u4fdd\u7559": 751, "\u7c7b\u578b\u7684\u8282\u70b9\u7684": 751, "\u7c7b\u578b\u7684\u8fb9\u7684": 751, "\u7c7b\u5b9a\u4e49\u7684\u6807\u51c6\u7684\u6570\u636e\u5904\u7406\u7ba1\u9053": 735, "\u7c7b\u6709\u62bd\u8c61\u51fd\u6570": 736, "\u7c7b\u8fdb\u884c\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 764, "\u7ea2\u8272\u70b9": 759, "\u7ec6\u8282\u5185\u5bb9\u53ef\u4ee5\u5728\u4e0b\u9762\u7684disttensor\u548cdistembedding\u7ae0\u8282\u91cc\u67e5\u770b": 742, "\u7ed3\u5408\u4e86\u8282\u70b9\u8868\u793a\u6a21\u5757\u548c\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u7684\u6a21\u578b\u5982\u4e0b\u6240\u793a": 770, "\u7ed3\u5408\u4f7f\u7528": [760, 764], "\u7ed9\u5b9agnn\u5c42": 759, "\u7ed9\u5b9a\u4e00\u5f20\u56fe": 772, "\u7ed9\u5b9a\u4e00\u6761\u8fde\u63a5": 773, "\u7ed9\u5b9a\u8ba1\u7b97\u8282\u70b9\u548c\u8fb9\u4e0a\u8868\u793a\u7684\u6a21\u578b\u540e": 770, "\u7ed9\u6bcf\u6761\u8fb9\u5206\u914d\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\u7f16\u53f7": 750, "\u7ef4\u5ea6\u901a\u5e38\u5305\u62ec\u8f93\u5165\u7684\u7ef4\u5ea6": 766, "\u7eff\u8272\u548c\u7ea2\u8272\u8282\u70b9": 759, "\u7eff\u8272\u70b9": 759, "\u7eff\u8272\u8282\u70b9": 759, "\u7f13\u5b58\u6982\u7387\u5206\u5e03": 762, "\u7f16\u5199dgl": [752, 765], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": [752, 753, 767], "\u7f16\u7801\u5e02\u573a\u7684\u56fe\u53ef\u4ee5\u6709\u8868\u793a": 746, "\u8003\u8651\u4ee5\u4e0b\u57fa\u4e8edgl\u7684\u6d88\u606f\u4f20\u9012\u793a\u4f8b": 771, "\u8003\u8651\u4ee5\u4e0b\u8fb9\u754c": 759, "\u8003\u8651\u5230\u67d0\u4e9b\u56fe\u8fb9\u7684\u6570\u91cf\u8fdc\u8fdc\u5927\u4e8e\u8282\u70b9\u7684\u6570\u91cf": 755, "\u8003\u8651\u5728\u4e00\u4e2a\u6709": 758, "\u800c": 747, "\u800c\u4e0d\u662f": 760, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u7279\u5f81\u5f20\u91cf": 763, "\u800c\u4e0d\u662f\u4e00\u4e2a\u5927\u56fe": 772, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u6807\u7b7e": 764, "\u800c\u4e0d\u662f\u50cf\u6574\u56fe\u8bad\u7ec3\u90a3\u6837\u52a0\u8f7d\u6240\u6709\u8282\u70b9\u7684\u7279\u5f81": 764, "\u800c\u4e0d\u662f\u5355\u4e2a\u7684\u5927\u56fe\u6570\u636e": 772, "\u800c\u4e0d\u662f\u5e95\u5c42\u6846\u67b6\u91cc\u7684\u5f20\u91cf": 742, "\u800c\u4e0d\u662f\u8282\u70b9\u7c7b\u578b\u548c\u8282\u70b9id\u5f20\u91cf\u7684\u5b57\u5178": [760, 762], "\u800c\u4e14\u4e24\u79cd\u8282\u70b9\u5177\u6709\u4e0d\u540c\u7684\u7279\u5f81": 751, "\u800c\u4ee5\u4e0b\u7528\u6237\u5b9a\u4e49\u6d88\u606f\u51fd\u6570\u4e0e\u6b64\u5185\u7f6e\u51fd\u6570\u7b49\u4ef7": 754, "\u800c\u540e\u8005\u5219\u6807\u8bc6dgl\u670d\u52a1\u5668\u4e2d\u7684\u5206\u5e03\u5f0f\u5f20\u91cf": 742, "\u800c\u5728cpu\u4e0a\u8fdb\u884c\u5219\u8ba1\u7b97\u901f\u5ea6\u5f88\u6162": 761, "\u800c\u65e0\u9700\u8bbe\u8ba1\u590d\u6742\u7684\u56fe\u91c7\u6837\u7b97\u6cd5": 772, "\u800c\u662f\u5728": 754, "\u800c\u7ebf\u6027\u5c42\u8f93\u51fa\u7ef4\u6570\u8f83\u4f4e": 755, "\u800c\u975e4\u6761": 747, "\u805a\u5408\u51fd\u6570": [753, 754], "\u805a\u5408\u51fd\u6570\u6765\u5b9e\u73b0": 767, "\u805a\u5408\u51fd\u6570\u901a\u5e38\u6709\u4e24\u4e2a\u53c2\u6570": 754, "\u805a\u5408\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u4e0a\u7684\u7ed3\u679c": 768, "\u805a\u5408\u7c7b\u578b": 766, "\u805a\u5408\u7c7b\u578b\u51b3\u5b9a\u4e86\u5982\u4f55\u805a\u5408\u4e0d\u540c\u8fb9\u4e0a\u7684\u4fe1\u606f": 766, "\u80e1\u9a8f": 752, "\u8282\u70b9": [745, 754], "\u8282\u70b92": 759, "\u8282\u70b93": 759, "\u8282\u70b93\u662f\u4e00\u4e2a\u5b64\u7acb\u8282\u70b9": 759, "\u8282\u70b98": 759, "\u8282\u70b9\u5206\u7c7b": [739, 752, 769], "\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b": 739, "\u8282\u70b9\u5206\u7c7b\u7684rgcn\u6a21\u578b": 770, "\u8282\u70b9\u5206\u7c7b\u901a\u5e38\u5728\u5355\u4e2a\u56fe\u4e0a\u8fdb\u884c": 739, "\u8282\u70b9\u548c": [755, 770], "\u8282\u70b9\u548c\u8fb9": [745, 752], "\u8282\u70b9\u548c\u8fb9id\u7684\u6570\u636e\u7c7b\u578b\u5fc5\u987b\u4e00\u81f4": 750, "\u8282\u70b9\u548c\u8fb9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u6784\u5efa\u7684": 750, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": [745, 752], "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81\u53ef\u4ee5\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0": 748, "\u8282\u70b9\u548c\u8fb9\u7684\u7c7b\u578b\u53ef\u4ee5\u662f\u4e0d\u540c\u7684": 746, "\u8282\u70b9\u56de\u5f52\u4efb\u52a1\u4e5f\u7c7b\u4f3c": 774, "\u8282\u70b9\u5f20\u91cf": 750, "\u8282\u70b9\u6570\u636e\u540d\u79f0\u548c\u5f20\u91cf\u540d\u79f0\u4e0d\u5fc5\u76f8\u540c": 742, "\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 742, "\u8282\u70b9\u6807\u7b7e\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u5668\u4e2d": 764, "\u8282\u70b9\u7279\u5f81": 755, "\u8282\u70b9\u7279\u5f81\u53ef\u4ee5\u5b58\u50a8\u5728\u5185\u5b58\u6216\u5916\u90e8\u5b58\u50a8\u4e2d": 764, "\u8282\u70b9\u7279\u5f81\u548c\u6807\u7b7e\u5b58\u50a8\u5728\u5176\u56fe\u4e0a": 774, "\u8282\u70b9\u7279\u5f81\u548c\u8282\u70b9\u7684\u6807\u7b7e\u88ab\u5b58\u50a8\u5728": 739, "\u8282\u70b9\u7279\u5f81\u7ef4\u6570\u8f83\u9ad8": 755, "\u8282\u70b9\u7684id\u90fd\u662f\u4ece0\u5f00\u59cb\u7684": 751, "\u8282\u70b9\u7684\u6807\u7b7e": 739, "\u8282\u70b9\u7684\u7279\u5f81": 739, "\u8282\u70b9\u7684\u7c7b\u522b": 774, "\u8282\u70b9\u7684\u8fb9": 770, "\u8282\u70b9\u7c7b\u578b": 739, "\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7ed3\u679c": 764, "\u8282\u70b9\u8868\u793a\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801\u83b7\u53d6": 773, "\u82e5\u7528\u56fe\u5bf9twitter\u7528\u6237\u7684\u5173\u6ce8\u884c\u4e3a\u8fdb\u884c\u5efa\u6a21": 746, "\u82e5\u7528\u56fe\u5bf9\u793e\u4ea4\u7f51\u7edc\u4e2d\u4eba\u4eec\u7684\u53cb\u8c0a\u5173\u7cfb\u8fdb\u884c\u5efa\u6a21": 746, "\u83ab\u4f73\u5e05\u5b50": 752, "\u83b7\u53d6": [751, 759], "\u83b7\u53d6drug\u8282\u70b9\u7684\u6570\u91cf": 751, "\u83b7\u53d6\u5212\u5206\u7684\u63a9\u7801": 739, "\u83b7\u53d6\u5212\u5206\u7684\u6807\u7b7e": 738, "\u83b7\u53d6\u5355\u4e00\u7c7b\u578b\u7684\u8282\u70b9\u6216\u8fb9\u7279\u5f81": 751, "\u83b7\u53d6\u539f\u59cbid": 743, "\u83b7\u53d6\u56fe\u4e2d\u6240\u6709\u8282\u70b9\u7684\u6570\u91cf": 751, "\u83b7\u53d6\u6807\u7b7e": 739, "\u83b7\u53d6\u7279\u5b9a\u8282\u70b9\u548c\u8fb9\u7c7b\u578b\u7684\u7279\u5f81": 751, "\u83b7\u53d6\u79cd": 759, "\u83b7\u53d6\u805a\u5408\u51fd\u6570\u7684\u5185\u90e8\u51fd\u6570": 768, "\u83b7\u53d6\u8282\u70b91\u7684\u7279\u5f81": 748, "\u83b7\u53d6\u8282\u70b9\u7279\u5f81": 739, "\u83b7\u53d6\u8282\u70b9\u7684id": 750, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u4e2d\u7684\u8fb9\u7c7b\u578b": 739, "\u83b7\u53d6\u8bad\u7ec3\u96c6\u63a9\u7801": 739, "\u83b7\u53d6\u8fb90\u548c3\u7684\u7279\u5f81": 748, "\u83b7\u53d6\u8fb9\u4e24\u7aef\u8282\u70b9\u7684\u8868\u793a": 760, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9": 750, "\u83b7\u53d6\u8fb9\u7684\u5bf9\u5e94\u7aef\u70b9\u548c\u8fb9id": 750, "\u83b7\u5f97": 763, "\u867d\u7136dgl\u63d0\u4f9b\u4e86\u4e00\u4e9b\u90bb\u5c45\u91c7\u6837\u5668": 759, "\u867d\u7136\u4e0a\u9762\u7684\u51fd\u6570\u53ef\u4ee5\u751f\u6210\u8fb9\u754c": 759, "\u867d\u7136\u8fd9\u4e24\u4e2a\u6a21\u5757\u90fd\u6bd4\u4e0a\u8ff0\u7684\u793a\u4f8b\u4ee3\u7801\u8981\u590d\u6742": 770, "\u884c\u4f18\u5148": 748, "\u8868\u660e\u4e24\u8282\u70b9\u95f4\u5b58\u5728\u5173\u7cfb": 746, "\u8868\u793a": 754, "\u8868\u793a\u5728\u76f8\u5173\u5f02\u6784\u56fe\u4e2d\u5b58\u5728\u4ece": 751, "\u8868\u793a\u5b83\u662f\u4ece\u8282\u70b9": 750, "\u8868\u793a\u6765\u81ea\u4e0d\u540c\u5173\u7cfb\u7684\u8ba1\u7b97\u7ed3\u679c": 768, "\u88ab\u4e70\u4e0b": 760, "\u88ab\u5173\u6ce8": 760, "\u88ab\u805a\u5408\u7684\u7279\u5f81\u5c06\u4f1a\u4e0e\u8282\u70b9\u7684\u521d\u59cb\u7279\u5f81\u62fc\u63a5\u8d77\u6765": 767, "\u8981\u4f7f\u7528dgl\u63d0\u4f9b\u7684\u91c7\u6837\u5668": 764, "\u8981\u5bf9\u6e90\u8282\u70b9\u7684": 754, "\u8981\u5c06\u54ea\u4e9b\u8282\u70b9\u8868\u793a\u4f5c\u4e3a\u8f93\u5165": 764, "\u8981\u6267\u884c\u8d1f\u91c7\u6837": 773, "\u8981\u67e5\u627e\u7ed9\u5b9a\u8282\u70b9\u7c7b\u578b\u7684\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u7684\u6570\u91cf": 759, "\u8981\u805a\u5408\u7684\u7279\u5f81\u5927\u5c0f\u4e3a": 772, "\u8981\u8ba1\u7b97": 759, "\u89c11": 745, "\u8ba1\u7b97": [759, 773], "\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u94fe\u63a5\u53ef\u80fd\u6027\u7684\u5f97\u5206": 773, "\u8ba1\u7b97\u5e94\u7528\u4e8e\u7ed9\u5b9a\u7684\u4e00\u5806\u76ee\u6807\u8282\u70b9\u6240\u91c7\u6837\u7684\u5b50\u56fe": 767, "\u8ba1\u7b97\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 762, "\u8ba1\u7b97\u5fc5\u987b\u5728\u8fb9\u4e0a\u4fdd\u5b58\u6d88\u606f": 755, "\u8ba1\u7b97\u635f\u5931\u503c": 774, "\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u63a5\u53d7\u8282\u70b9\u7c7b\u578b\u548c\u9884\u6d4b\u7684\u4e24\u4e2a\u5b57\u5178": 760, "\u8ba1\u7b97\u635f\u5931\u5e76\u53cd\u5411\u4f20\u64ad": 764, "\u8ba1\u7b97\u8282\u70b9\u8868\u793a\u7684\u6a21\u578b\u4e5f\u53ef\u4ee5\u7528\u4e8e\u8ba1\u7b97\u8fb9\u5206\u7c7b": 760, "\u8ba1\u7b97\u8f93\u51fa": 761, "\u8ba1\u7b97\u8fb9\u5b50\u56fe\u4e2d\u8fb9\u7684\u5f97\u5206": 760, "\u8ba1\u7b97\u9a8c\u8bc1\u96c6\u7684\u51c6\u786e\u5ea6": 774, "\u8bad\u7ec3": [739, 752, 757, 767, 769, 774], "\u8bad\u7ec3\u4e00\u4e2a\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u6d89\u53ca\u5230\u6bd4\u5bf9\u4e24\u4e2a\u76f8\u8fde\u63a5\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u4e0e\u4efb\u610f\u4e00\u5bf9\u8282\u70b9\u4e4b\u95f4\u7684\u5f97\u5206\u7684\u5dee\u5f02": 773, "\u8bad\u7ec3\u4e0b\u6e38\u4efb\u52a1\u7684\u5206\u7c7b\u5668": 773, "\u8bad\u7ec3\u540e": 773, "\u8bad\u7ec3\u5668": 741, "\u8bad\u7ec3\u5668\u4f1a\u5bf9\u5c40\u90e8\u5206\u533a\u4e2d\u5e26\u6807\u7b7e\u8282\u70b9\u7684\u5b50\u96c6\u8fdb\u884c\u8ba1\u7b97": 743, "\u8bad\u7ec3\u5668\u8fdb\u7a0b": 741, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": [752, 758], "\u8bad\u7ec3\u5faa\u73af\u901a\u8fc7\u6570\u636e\u52a0\u8f7d\u5668\u53bb\u904d\u5386\u6570\u636e": 762, "\u8bad\u7ec3\u6548\u7387\u4f1a\u5f88\u4f4e": 772, "\u8bad\u7ec3\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u5b8c\u6574\u6307\u5357\u53ef\u4ee5\u5728": 739, "\u8bad\u7ec3\u6a21\u578b": 764, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u548c\u540c\u6784\u56fe\u65f6\u4e00\u81f4": 773, "\u8bad\u7ec3\u7684\u5faa\u73af\u90e8\u5206\u91cc\u4f1a\u91cd\u590d\u6784\u5efa\u8d1f\u91c7\u6837\u56fe\u5e76\u8ba1\u7b97\u635f\u5931\u51fd\u6570\u503c": 773, "\u8bad\u7ec3\u7b97\u6cd5\u6709\u4e00\u4e2a\u5916\u5faa\u73af\u4ee5\u8fed\u4ee3\u5904\u7406\u5404\u4e2a\u8282\u70b9\u5c0f\u6279\u6b21": 761, "\u8bad\u7ec3\u811a\u672c": 744, "\u8bad\u7ec3\u8fc7\u7a0b\u5305\u62ec\u904d\u5386dataloader\u548c\u66f4\u65b0\u6a21\u578b\u53c2\u6570\u7684\u90e8\u5206": 772, "\u8bad\u7ec3\u90e8\u5206\u548c\u540c\u6784\u56fe\u7684\u8bad\u7ec3\u57fa\u672c\u4e00\u81f4": 770, "\u8bad\u7ec3\u90e8\u5206\u5982\u4e0b\u6240\u793a": 770, "\u8bb0\u4e3a": 746, "\u8bb0\u4f5c": 773, "\u8bb2\u89e3\u4e86\u5982\u4f55\u5bf9\u5c0f\u89c4\u6a21\u7684\u56fe\u6570\u636e\u8fdb\u884c\u8282\u70b9\u5206\u7c7b": 769, "\u8bb8\u591a\u573a\u666f\u4e2d\u7684\u56fe\u6570\u636e\u662f\u7531\u591a\u4e2a\u56fe\u7ec4\u6210": 772, "\u8bb8\u591a\u635f\u5931\u51fd\u6570\u90fd\u53ef\u4ee5\u5b9e\u73b0\u4e0a\u8ff0\u76ee\u6807": 773, "\u8bb8\u591a\u77e5\u540dpython\u5e93": 747, "\u8bbe\u7f6e": 751, "\u8bbe\u7f6e\u9009\u9879": 766, "\u8bbf\u95ee\u5176\u8f93\u51fa\u8282\u70b9\u7279\u5f81": 759, "\u8bbf\u95ee\u8be5\u5757\u7684\u8f93\u5165\u8282\u70b9\u7279\u5f81": 759, "\u8be5api\u4f1a\u76f8\u5e94\u5730\u6253\u4e71\u6240\u6709\u8282\u70b9\u6570\u636e\u548c\u8fb9\u6570\u636e": 743, "\u8be5api\u652f\u6301\u968f\u673a\u5212\u5206\u548c\u4e00\u4e2a\u57fa\u4e8e": 743, "\u8be5pytorch\u6570\u636e\u52a0\u8f7d\u5668\u4ee5\u6279\u7684\u5f62\u5f0f\u8fed\u4ee3\u8bad\u7ec3\u8fb9id\u7684\u6570\u7ec4": 760, "\u8be5\u4ee3\u7801\u5e76\u4e0d\u4e00\u5b9a\u662f\u6700\u9ad8\u6548\u7684\u5b9e\u73b0": 763, "\u8be5\u4f8b\u5b50\u7684\u76ee\u6807\u662f\u8ba1\u7b97\u5355\u4e2a\u8282\u70b9": 759, "\u8be5\u4f8b\u5b50\u91cc\u7701\u7565\u4e86\u8bad\u7ec3\u65e9\u505c\u548c\u6a21\u578b\u4fdd\u5b58\u90e8\u5206\u7684\u4ee3\u7801": 770, "\u8be5\u505a\u6cd5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c": 755, "\u8be5\u51fd\u6570\u5047\u5b9a\u539f\u59cb\u6570\u636e\u5df2\u7ecf\u4f4d\u4e8e": 739, "\u8be5\u51fd\u6570\u7684\u7ec6\u8282\u5982\u4e0b\u6240\u793a": 767, "\u8be5\u540d\u79f0\u4ecd\u5b58\u5728\u4e8e\u7fa4\u96c6\u4e2d": 742, "\u8be5\u56fe\u5177\u6709\u4e24\u79cd\u7c7b\u578b\u7684\u8282\u70b9": 751, "\u8be5\u5b50\u56fe\u5305\u62ec\u521d\u59cb\u56fe\u4e2d\u7684\u6240\u6709\u8282\u70b9\u548c\u6307\u5b9a\u8282\u70b9\u7684\u5165\u8fb9": 759, "\u8be5\u5f20\u91cf\u7684\u7b2c\u4e00\u7ef4\u5fc5\u987b\u4e0e\u56fe\u4e2d\u8282\u70b9\u6216\u8fb9\u7684\u6570\u91cf\u4e00\u81f4": 748, "\u8be5\u6587\u4ef6\u5305\u542b\u672c\u5730\u8ba1\u7b97\u673a\u4e2d\u5206\u533a\u6570\u636e\u7684\u4fe1\u606f": 744, "\u8be5\u65b9\u6cd5\u80fd\u8282\u7701\u5728\u5927\u56fe\u4e0a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u5f00\u9500\u548c\u8ba1\u7b97\u8d44\u6e90": 758, "\u8be5\u65b9\u6cd5\u8d1f\u8d23\u4e3a\u5b83\u4eec\u751f\u6210\u8fb9\u754c": 759, "\u8be5\u6743\u91cd\u53ef\u4ee5\u8868\u793a\u957f\u5ea6\u6216\u8fde\u63a5\u7684\u5f3a\u5ea6": 746, "\u8be5\u6a21\u578b\u4e0e\u5f02\u6784\u56fe\u4e0a\u8fb9\u5206\u7c7b\u7684\u6a21\u578b\u6709\u4e9b\u4e0d\u540c": 773, "\u8be5\u6a21\u578b\u7684\u8f93\u5165\u5305\u62ec\u4e0a\u8ff0\u4e09\u9879\u4ee5\u53ca\u8f93\u5165\u7684\u7279\u5f81": 762, "\u8be5\u7c7b\u4e3a\u5bfc\u5165": 735, "\u8be5\u811a\u672c\u5305\u542b\u56db\u4e2a\u53c2\u6570": 744, "\u8be5\u811a\u672c\u6709\u4ee5\u4e0b\u5047\u8bbe": 744, "\u8be5\u8fb9\u7c7b\u578b\u662f\u901a\u8fc7\u5408\u5e76\u6240\u6709\u4ece": 770, "\u8be5\u91c7\u6837\u65b9\u6cd5\u6839\u636e\u4e0e\u8282\u70b9\u7684\u5ea6\u7684\u5e42\u6210\u6b63\u6bd4\u7684\u6982\u7387\u5206\u5e03\u5bf9\u8d1f\u6837\u672c\u76ee\u6807\u8282\u70b9\u8fdb\u884c\u91c7\u6837": 762, "\u8be6\u7ec6\u7684\u5b9e\u73b0\u8bf7\u53c2\u8003": 739, "\u8be6\u7ec6\u89e3\u91ca": 743, "\u8bf4\u660e\u805a\u5408\u662f\u9010\u7c7b\u8fdb\u884c\u7684": 756, "\u8bf7\u4f7f\u7528": 737, "\u8bf7\u53c2\u8003": [739, 760, 774], "\u8bf7\u53c2\u8003dgl\u7684\u5185\u7f6e\u6570\u636e\u96c6": 739, "\u8bf7\u53c2\u8003\u7528\u6237\u6307\u5357\u7684": 769, "\u8bf7\u53c2\u89c1": [739, 743, 754], "\u8bf7\u53c2\u89c1\u542f\u52a8\u811a\u672c\u90e8\u5206": 742, "\u8bf7\u53c2\u9605": 736, "\u8bf7\u53c2\u9605\u4e0b\u6587\u91cc\u5206\u5e03\u5f0f\u56fe\u91c7\u6837\u90e8\u5206": 742, "\u8bf7\u53c2\u9605\u5c0f\u6279\u6b21\u8bad\u7ec3\u7684\u7ae0\u8282": 742, "\u8bf7\u6ce8\u610f": [736, 739, 740, 741, 759, 764, 767, 774], "\u8bf7\u786e\u4fdd\u4f7f\u7528\u4e0e\u539f\u59cb\u6587\u4ef6\u540d\u76f8\u540c\u7684\u540e\u7f00": 737, "\u8bf7\u786e\u4fdd\u5b83\u88ab\u5b58\u653e\u5728\u76ee\u5f55": 737, "\u8bf8\u5982\u91c7\u6837": 736, "\u8bfb\u51fa": 772, "\u8bfb\u51fa\u51fd\u6570\u4f1a\u5206\u522b\u4f5c\u7528\u5728\u56fe\u6279\u6b21\u4e2d\u7684\u6bcf\u5f20\u56fe\u4e0a": 772, "\u8bfb\u8005\u53ef\u4ee5\u4f7f\u7528networkx\u63d0\u4f9b\u7684\u5de5\u5177\u6765\u89e3\u6790": 747, "\u8bfb\u8005\u53ef\u4ee5\u53c2\u8003": [764, 774], "\u8bfb\u8005\u53ef\u4ee5\u5728api\u6587\u6863\u4e2d\u627e\u5230": 768, "\u8bfb\u8005\u53ef\u4ee5\u8fdb\u4e00\u6b65\u53c2\u8003": 770, "\u8bfb\u8005\u53ef\u53c2\u8003": [746, 750], "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": 761, "\u8c03\u7528\u540e": 754, "\u8c03\u7528\u6b64api": 742, "\u8d1d\u53f6\u65af\u4e2a\u6027\u5316\u6392\u5e8f\u635f\u5931": 773, "\u8d1f\u6837\u672c": 762, "\u8d1f\u8d23\u4f7f\u7528": 759, "\u8d1f\u8d23\u5206\u5e03\u5f0f\u8bad\u7ec3\u7684": 744, "\u8d1f\u91c7\u6837": 773, "\u8d2d\u4e70": 760, "\u8d4b\u503c": 770, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": [752, 758], "\u8df3\u8fc7\u4e00\u4e9b\u5904\u7406\u7684\u4ee3\u7801": 739, "\u8df3\u8fc7\u6570\u636e\u5904\u7406": 739, "\u8f6c\u6362\u6210int32": 750, "\u8f6c\u6362\u6210int64": 750, "\u8f7d\u5165ogb\u7684graph": 738, "\u8f7d\u5165ogb\u7684link": 738, "\u8f7d\u5165ogb\u7684nod": 738, "\u8f7d\u5165\u6570\u636e\u96c6": 738, "\u8f83\u5927\u65f6": 758, "\u8f93\u5165": 768, "\u8f93\u5165\u4ecd\u7136\u662fdgl\u7684\u6570\u636e\u52a0\u8f7d\u5668\u751f\u6210\u7684\u5757\u5217\u8868\u548c\u8f93\u5165\u7279\u5f81": 760, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81": 774, "\u8f93\u5165\u662f\u8282\u70b9\u7684\u7279\u5f81\u5b57\u5178": 774, "\u8f93\u5165\u7279\u5f81\u5c06\u88ab\u7ec4\u7ec7\u4e3a\u5143\u7ec4": 768, "\u8f93\u5165\u7684user\u548cgame\u8282\u70b9": 759, "\u8f93\u5165\u7ef4\u5ea6\u53ef\u88ab\u5206\u4e3a\u6e90\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6\u548c\u76ee\u6807\u8282\u70b9\u7279\u5f81\u7ef4\u5ea6": 766, "\u8f93\u5165\u8282\u70b9\u548c\u8f93\u51fa\u8282\u70b9\u5c06\u540c\u65f6\u5305\u542b\u8fd9\u4e9b\u5b64\u7acb\u8282\u70b9": 759, "\u8f93\u5165\u8fd8\u53ef\u4ee5\u5305\u62ec\u8fb9\u81ea\u8eab\u7684\u7279\u5f81": 770, "\u8f93\u51fa\u7684user\u548cgame\u8282\u70b9": 759, "\u8f93\u51fa\u7684\u7ef4\u5ea6\u548c\u9690\u5c42\u7684\u7ef4\u5ea6": 766, "\u8f93\u51fa\u76ee\u5f55\u91cc\u59cb\u7ec8\u5305\u542b\u4e00\u4e2a\u540d\u4e3axxx": 743, "\u8f93\u51fa\u8282\u70b9": 759, "\u8f93\u51fa\u8282\u70b9\u4e5f\u51fa\u73b0\u5728\u8f93\u5165\u8282\u70b9\u4e2d": 759, "\u8f93\u51fa\u8282\u70b9\u53ef\u4ee5\u6bd4\u4ee5\u4e0a\u8282\u70b9\u5305\u542b\u66f4\u591a\u8282\u70b9": 759, "\u8f93\u51fa\u8282\u70b9\u7684id\u4f4d\u4e8e\u5176\u5b83\u8282\u70b9\u4e4b\u524d": 759, "\u8fb9": [739, 743, 745, 746, 748, 750, 753, 754], "\u8fb9\u4e0a\u8ba1\u7b97": 753, "\u8fb9\u5206\u7c7b": [752, 760, 769, 773, 774], "\u8fb9\u5206\u7c7b\u4e2d\u76f8\u540c\u7684\u90bb\u5c45\u91c7\u6837\u5668": 762, "\u8fb9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u7684\u8bad\u7ec3": 769, "\u8fb9\u5206\u7c7b\u6a21\u578b\u901a\u5e38\u7531\u4e24\u90e8\u5206\u7ec4\u6210": 760, "\u8fb9\u53ca\u5176\u7279\u5f81": 747, "\u8fb9\u5b50\u56fe\u4ee5\u53ca\u8f93\u5165\u8282\u70b9\u7279\u5f81\u8fdb\u884c\u524d\u5411\u4f20\u64ad": 760, "\u8fb9\u6743\u91cd\u53ef\u4ee5\u662f\u8fde\u63a5\u5f3a\u5ea6\u6216\u8005\u4fe1\u5fc3\u6307\u6570": 771, "\u8fb9\u6743\u91cd\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a": 771, "\u8fb9\u7279\u5f81": [741, 742], "\u8fb9\u7279\u5f81\u548c\u56fe\u91c7\u6837": 742, "\u8fb9\u754c\u5b50\u56fe": 759, "\u8fb9\u7684id\u4f4d\u4e8e\u90bb\u8fd1\u533a\u95f4\u5185": 739, "\u8fb9\u7684\u7279\u5f81\u6570\u636e": 769, "\u8fb9\u7684\u90bb\u5c45\u7684\u5c40\u90e8\u6027": 739, "\u8fb9\u7c7b\u578b": [739, 751], "\u8fb9\u7c7b\u578b\u9884\u6d4b\u6a21\u5757\u79f0\u4f5c": 770, "\u8fb9\u7c7b\u578b\u9884\u6d4b\u7684\u7b2c\u4e00\u6b65\u4ecd\u7136\u662f\u8ba1\u7b97\u8282\u70b9\u8868\u793a": 770, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": [741, 752], "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u56fe\u4f5c\u4e3a\u8fb9\u754c": 759, "\u8fd4\u56de\u4e00\u4e2a\u4e0e\u521d\u59cb\u56fe\u6709\u76f8\u540c\u8282\u70b9\u7684\u8fb9\u754c": 759, "\u8fd4\u56de\u4e00\u4e2a\u5b57\u5178": 759, "\u8fd4\u56de\u5982\u4e0a\u9762\u4ee3\u7801\u6240\u793a\u7684\u5143\u7ec4": 739, "\u8fd4\u56de\u66f4\u65b0\u8fc7\u7684\u8282\u70b9\u7279\u5f81\u5b57\u5178": 756, "\u8fd4\u56de\u7684\u662f": 742, "\u8fd8\u5141\u8bb8\u901a\u8fc7\u6307\u5b9a": 743, "\u8fd8\u53ef\u4ee5\u4e3a\u5176\u4ed6\u4e0b\u6e38\u4efb\u52a1\u83b7\u53d6\u9690\u85cf\u8282\u70b9\u8868\u793a": 774, "\u8fd8\u63a5\u53d7\u4e00\u4e2a\u5b57\u7b26\u4e32\u6765\u8868\u793a\u8de8\u7c7b\u578b\u6574\u5408\u51fd\u6570": 756, "\u8fd8\u652f\u6301\u751f\u6210\u7528\u4e8e\u94fe\u63a5\u9884\u6d4b\u7684\u8d1f\u6837\u672c": 762, "\u8fd8\u662f": 770, "\u8fd8\u80fd\u51cf\u5c11\u5185\u5b58\u7684\u4f7f\u7528": 750, "\u8fd8\u9700\u8981\u5728\u8bfb\u51fa\u51fd\u6570\u4e2d\u805a\u5408\u4e0d\u540c\u7c7b\u522b\u7684\u8282\u70b9": 772, "\u8fd8\u9700\u8981\u5c06\u5176\u4e0e": 764, "\u8fd92\u4e2a\u5b57\u5178\u4e0e": 768, "\u8fd9\u4e00\u793a\u4f8b\u6765\u4e86\u89e3\u5982\u4f55\u9884\u6d4b\u5f02\u6784\u56fe\u4e2d\u7684\u8fb9\u7c7b\u578b": 770, "\u8fd9\u4e00\u7ae0\u4e2d\u63d0\u5230\u7684\u56fe\u5377\u79ef\u7f51\u7edc\u83b7\u5f97": 770, "\u8fd9\u4e0e\u5728": 774, "\u8fd9\u4e24\u4e2a\u51fd\u6570\u5c06\u5e03\u5c14\u6570\u7ec4\u4f5c\u4e3a\u8f93\u5165": 742, "\u8fd9\u4e2a": 769, "\u8fd9\u4e2aapi\u4f1a\u4e0edgl\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5\u5e76\u521b\u5efa\u91c7\u6837\u5668\u8fdb\u7a0b": 742, "\u8fd9\u4e2aapi\u5c06\u8fd0\u884c\u670d\u52a1\u5668\u4ee3\u7801": 742, "\u8fd9\u4e2a\u4f8b\u5b50\u662f\u8bc4\u5206\u9884\u6d4b\u7684\u4e00\u4e2a\u7b80\u5316\u7248\u672c": 770, "\u8fd9\u4e2a\u51fd\u6570\u53ef\u4ee5\u628a\u539f\u56fe\u8f6c\u6362\u6210\u4e00\u4e2a\u5305\u542b\u53cd\u5411\u8fb9\u7684\u56fe": 750, "\u8fd9\u4e2a\u51fd\u6570\u7684\u8f93\u5165\u53d8\u91cf\u662f\u4e00\u4e2a\u90bb\u63a5\u77e9\u9635\u548c\u5176\u4ed6\u8f93\u5165\u7279\u5f81": 771, "\u8fd9\u4e2a\u5b57\u5178\u7684\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u91cc": 756, "\u8fd9\u4e2a\u5b57\u5178\u7684\u952e\u4e3a\u5173\u7cfb\u540d": 768, "\u8fd9\u4e2a\u63a5\u53e3\u5c06\u66f4\u65b0\u6240\u6709\u7684\u8fb9": 754, "\u8fd9\u4e2a\u6570\u636e\u52a0\u8f7d\u5668\u4f7f\u7528\u7528\u6237\u81ea\u5b9a\u4e49\u7684\u91c7\u6837\u5668": 759, "\u8fd9\u4e2a\u6570\u636e\u96c6\u53ea\u6709\u4e00\u4e2a\u56fe": 739, "\u8fd9\u4e2a\u6570\u636e\u96c6\u91cc\u53ea\u6709\u4e00\u4e2a\u56fe": 739, "\u8fd9\u4e2a\u6574\u5408\u65b9\u5f0f\u53ef\u4ee5\u662f": 756, "\u8fd9\u4e2a\u65b9\u6cd5\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5f02\u6784\u56fe": 770, "\u8fd9\u4e2a\u6a21\u578b\u4e0d\u4ec5\u53ef\u4ee5\u505a\u8282\u70b9\u5206\u7c7b": 774, "\u8fd9\u4e2a\u6a21\u578b\u5177\u6709\u53ef\u8c03\u8282\u7684\u5c42\u6570": 774, "\u8fd9\u4e2a\u8fc7\u7a0b": 739, "\u8fd9\u4e2a\u8fed\u4ee3\u8fc7\u7a0b\u4f1a\u6784\u5efa\u8ba1\u7b97\u7684\u4f9d\u8d56\u5173\u7cfb\u56fe": 758, "\u8fd9\u4e3a\u4ece\u6574\u4f53\u4e0a\u8fdb\u884c\u7cfb\u7edf\u4f18\u5316\u63d0\u4f9b\u4e86\u7a7a\u95f4": 754, "\u8fd9\u4e48\u505a\u53ef\u4ee5\u8282\u7701\u5927\u91cf\u7684\u65f6\u95f4": 736, "\u8fd9\u4e9budf\u5fc5\u987b\u5728": 742, "\u8fd9\u4e9b\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9\u548c\u8fb9\u5177\u6709\u72ec\u7acb\u7684id\u7a7a\u95f4\u548c\u7279\u5f81": 751, "\u8fd9\u4e9b\u51fd\u6570\u7684\u53c2\u6570\u662f\u5b57\u7b26\u4e32": 754, "\u8fd9\u4e9b\u56fe\u8868\u793a\u6bcf\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56": 764, "\u8fd9\u4e9b\u5c5e\u6027\u65e8\u5728\u523b\u753b\u6bcf\u4e00\u79cd\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 756, "\u8fd9\u4e9b\u5e03\u5c14\u6570\u7ec4\u7684\u957f\u5ea6\u662f\u56fe\u4e2d\u8282\u70b9\u7684\u6570\u91cf": 742, "\u8fd9\u4e9b\u60c5\u51b5\u53ef\u80fd\u5bfc\u81f4\u8ba1\u7b97\u548c\u6d88\u606f\u4f20\u9012\u4e2d\u7684\u503c\u65e0\u6548": 767, "\u8fd9\u4e9b\u670d\u52a1\u5668\u4e00\u8d77\u5de5\u4f5c\u4ee5\u5c06\u56fe\u6570\u636e\u63d0\u4f9b\u7ed9\u8bad\u7ec3\u5668": 741, "\u8fd9\u4e9b\u6784\u5efa\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u91cd\u89c6\u6027\u80fd\u7684\u573a\u666f": 747, "\u8fd9\u4e9b\u6a21\u5757\u662f\u7eafpytorch": 766, "\u8fd9\u4e9b\u7279\u5f81\u53ef\u4ee5\u662f\u6807\u91cf": 748, "\u8fd9\u4e9b\u7c7b\u4f1a\u751f\u6210\u9700\u8ba1\u7b97\u7684\u8282\u70b9\u5728\u6bcf\u4e00\u5c42\u8ba1\u7b97\u65f6\u6240\u9700\u7684\u4f9d\u8d56\u56fe": 764, "\u8fd9\u4e9b\u8282\u70b9\u4e0e\u7528\u6237\u5e0c\u671b\u8ba1\u7b97\u6700\u7ec8\u8868\u793a\u7684\u8282\u70b9\u76f8\u540c": 764, "\u8fd9\u4e9b\u8282\u70b9\u662f\u8ba1\u7b97\u8282\u70b9\u6700\u7ec8\u8868\u793a\u6240\u9700\u7684\u6240\u6709\u5fc5\u9700\u7684\u8282\u70b9": 764, "\u8fd9\u4ec5\u662f\u4e2a\u4f8b\u5b50": 772, "\u8fd9\u4f1a\u5c06\u56fe\u7ed3\u6784\u548c\u7279\u5f81\u6570\u636e\u90fd\u62f7\u8d1d\u5230\u6307\u5b9a\u7684\u8bbe\u5907": 749, "\u8fd9\u4f1a\u975e\u5e38\u6d88\u8017\u5185\u5b58": 755, "\u8fd9\u5305\u62ec\u4e24\u4e2a\u6b65\u9aa4": 743, "\u8fd9\u5305\u62ec\u56fe\u7ed3\u6784\u548c\u8282\u70b9": 741, "\u8fd9\u53d6\u51b3\u4e8e\u56fe\u4e2d\u8fb9\u7684\u65b9\u5411\u6027": 746, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6570\u636e\u635f\u574f": 742, "\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6a21\u578b\u6027\u80fd\u4e0d\u4f73": 767, "\u8fd9\u53ef\u80fd\u5e26\u6765\u975e\u6700\u4f18\u7684\u914d\u7f6e": 743, "\u8fd9\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u5c24\u5176\u6709\u7528": 751, "\u8fd9\u5bf9\u4e8e\u540c\u6b65sgd\u975e\u5e38\u91cd\u8981": 742, "\u8fd9\u5c31\u5e26\u6765\u4e86\u5177\u6709\u4e0d\u540c\u7279\u5f81\u7684\u591a\u6761\u8fb9": 746, "\u8fd9\u5e73\u8861\u4e86\u4e0d\u540c\u7c7b\u578b\u8282\u70b9\u7684\u8fde\u8fb9\u6570\u91cf": 743, "\u8fd9\u5f88\u5bb9\u6613\u8d85\u8fc7\u4e00\u5757gpu\u7684\u663e\u5b58\u9650\u5236": 758, "\u8fd9\u662f\u4e00\u4e2a": 754, "\u8fd9\u662f\u56e0\u4e3adgl\u8981\u5b9a\u4f4d\u5e76\u5220\u9664\u5305\u542b\u5728\u5c0f\u6279\u6b21\u4e2d\u7684\u53cd\u5411\u8fb9": 760, "\u8fd9\u662f\u56e0\u4e3a\u56fe\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u548c\u8fb9\u90fd\u5bf9\u5e94\u4e00\u4e2a\u6761\u76ee": 743, "\u8fd9\u662f\u56e0\u4e3a\u5b83\u5bf9\u4e00\u5c42\u7684\u8ba1\u7b97\u4f9d\u8d56\u4e8e\u6d88\u606f\u7684\u805a\u5408\u548c\u7ed3\u5408": 761, "\u8fd9\u662f\u56e0\u4e3a\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u901a\u5e38\u53ea\u7528\u4e00\u4e2a\u56fe": 739, "\u8fd9\u662f\u5c0f\u6279\u91cf\u8bad\u7ec3\u4e2d\u7684\u5e38\u89c1\u7528\u6cd5": 757, "\u8fd9\u662f\u7531\u4e8e": 747, "\u8fd9\u6837\u4e0d\u4ec5\u80fd\u63d0\u5347\u901f\u5ea6": 750, "\u8fd9\u6837\u5728\u591a\u6570\u60c5\u51b5\u4e0b\u53ef\u4ee5\u5e2e\u7528\u6237\u8282\u7701\u5927\u91cf\u7684\u6570\u636e\u5904\u7406\u65f6\u95f4": 740, "\u8fd9\u6837\u7684\u4efb\u52a1\u79f0\u4f5c": 773, "\u8fd9\u6837\u7684\u65b9\u6cd5\u79f0\u4f5c": 773, "\u8fd9\u70b9\u5728\u4e4b\u540e\u7684": 759, "\u8fd9\u79cd\u60c5\u51b5\u4e0b": 770, "\u8fd9\u79cd\u65b9\u5f0f\u4f7f\u5f97dgl\u7684\u4ee3\u7801\u53ef\u4ee5\u65e0\u7f1d\u5d4c\u5165\u5230\u540e\u7aef\u6846\u67b6\u7684\u4ee3\u7801\u4e2d": 765, "\u8fd9\u79cd\u65b9\u6cd5\u4e5f\u9002\u7528\u4e8e\u5176\u4ed6\u6d41\u884c\u7684\u6587\u4ef6\u683c\u5f0f": 751, "\u8fd9\u7b49\u4ef7\u4e8e\u628a\u6bcf\u6761\u6d88\u606f\u548c\u5bf9\u5e94\u7684\u8fb9\u6743\u91cd\u76f8\u4e58": 771, "\u8fd9\u7c7b\u64cd\u4f5c\u53eb\u505a": 772, "\u8fd9\u8981\u6c42\u6240\u6709\u5f20\u91cf\u53c2\u6570\u90fd\u5df2\u7ecf\u653e\u5728gpu\u4e0a": 749, "\u8fd9\u90e8\u5206\u4ee3\u7801\u4f1a\u56e0\u6a21\u5757\u800c\u5f02": 767, "\u8fd9\u91cc": 739, "\u8fd9\u91cc\u4ee56": 761, "\u8fd9\u91cc\u5148\u89e3\u91ca\u4e00\u4e0b\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 759, "\u8fd9\u91cc\u5220\u9664\u4e86\u81ea\u73af": 764, "\u8fd9\u91cc\u7684\u6a21\u578b\u7684\u8bad\u7ec3\u5faa\u73af\u4ec5\u5305\u542b\u4f7f\u7528\u5b9a\u5236\u7684\u6279\u5904\u7406\u8fed\u4ee3\u5668\u904d\u5386\u6570\u636e\u96c6\u7684\u5185\u5bb9": 764, "\u8fd9\u91cc\u7684\u79bb\u7ebf\u63a8\u65ad\u88ab\u5b9e\u73b0\u4e3agnn\u6a21\u5757\u7684\u4e00\u4e2a\u65b9\u6cd5": 761, "\u8fd9\u91cc\u7701\u7565\u4e86": 739, "\u8fd9\u91cc\u9700\u8981\u6ce8\u610f\u7684\u662f\u8f93\u5165\u7684\u56fe\u6570\u636e\u4e0d\u80fd\u5305\u542b\u8fb9\u7684\u7c7b\u578b\u4fe1\u606f": 770, "\u8fdb\u800c\u4f7f\u7528\u8fd9\u4e9b\u5bf9\u8c61\u6765\u6784\u5efadglgraph\u5bf9\u8c61": 747, "\u8fdb\u884c\u4f18\u5316": 755, "\u8fdb\u884c\u521b\u5efa\u65f6": 747, "\u8fdb\u884c\u524d\u5411\u4f20\u64ad\u8ba1\u7b97": 774, "\u8fdb\u884c\u53cd\u5411\u4f20\u64ad\u8ba1\u7b97": 774, "\u8fdb\u884c\u6743\u91cd\u521d\u59cb\u5316": 766, "\u8fdb\u884c\u8bad\u7ec3": 770, "\u8fde\u63a5\u4e00\u5bf9\u8282\u70b9": 746, "\u9009\u62e9\u4e00\u4e2a\u5c0f\u6279\u6b21\u7684\u56fe\u8282\u70b9": 758, "\u9010\u5143\u7d20\u6c42\u6700\u5927\u503c\u6216\u6700\u5c0f\u503c": 772, "\u9010\u5c42\u8ba1\u7b97\u8868\u793a": 761, "\u901a\u5e38": [742, 763], "\u901a\u5e38\u4f1a\u805a\u5408\u5e76\u6c47\u603b\u5355\u4e2a\u56fe\u5c3d\u53ef\u80fd\u591a\u7684\u4fe1\u606f": 772, "\u901a\u5e38\u5728\u6d88\u606f\u4f20\u9012\u7684\u6700\u540e\u4e00\u6b65\u5c06\u5176\u4e0e\u8282\u70b9\u7684\u7279\u5f81\u76f8\u7ed3\u5408": 754, "\u901a\u5e38\u65e0\u6cd5\u8fdb\u884c": 758, "\u901a\u5e38\u66f4\u597d\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u90bb\u5c45\u8fdb\u884c\u771f\u6b63\u7684\u805a\u5408": 761, "\u901a\u5e38\u8fd9\u6837\u505a\u4f1a\u5bfc\u81f4\u91c7\u6837\u8fc7\u7a0b\u53d8\u6162\u5f88\u591a": 760, "\u901a\u5e38\u9700\u8981\u4e00\u4e2a\u591a\u5c42\u7684\u56fe\u795e\u7ecf\u7f51\u7edc": 774, "\u901a\u8fc7": [748, 754], "\u901a\u8fc7idx\u5f97\u5230\u4e0e\u4e4b\u5bf9\u5e94\u7684\u4e00\u4e2a\u6837\u672c": 736, "\u901a\u8fc7idx\u83b7\u53d6\u5bf9\u5e94\u7684\u56fe\u548c\u6807\u7b7e": 739, "\u901a\u8fc7\u5173\u7cfb\u540d": 768, "\u901a\u8fc7\u5e73\u5747\u8bfb\u51fa\u503c\u6765\u8ba1\u7b97\u5355\u56fe\u7684\u8868\u5f81": 772, "\u901a\u8fc7\u5f20\u91cf\u5206\u914d\u521b\u5efa\u7279\u5f81\u65f6": 748, "\u901a\u8fc7\u7528\u56fe\u523b\u753b\u540c\u4e00\u793e\u533a\u91cc\u4eba\u4e0e\u4eba\u95f4\u7684\u53cb\u8c0a": 772, "\u901a\u8fc7\u7d22\u5f15": 767, "\u901a\u8fc7\u8ba1\u7b97\u5f97\u51fa\u5bf9\u8fb9\u5c5e\u6027\u7684\u9884\u6d4b": 770, "\u901a\u8fc7\u8c03\u7528": 768, "\u904d\u5386\u6240\u6709\u8fb9\u7684\u7c7b\u578b": 759, "\u90a3\u4e48\u5728\u5757\u4e0a\u8ba1\u7b97\u7684\u4ee3\u7801\u4e5f\u662f\u7c7b\u4f3c\u7684": 763, "\u90a3\u4e48\u5b83\u4eec\u5df2\u7ecf\u652f\u6301\u4e86\u8fb9\u6743\u91cd": 771, "\u90a3\u4e48\u7528\u6237\u53ea\u9700\u8981\u518d\u7f16\u5199\u4e00\u4e2a\u7528": 770, "\u90a3\u4e48\u7528\u6237\u5c31\u9700\u8981\u8c03\u7528\u57fa\u4e8e\u5185\u7f6e\u51fd\u6570\u7684": 755, "\u90a3\u4e48\u8be5\u51fd\u6570\u5e94\u4ee5\u521d\u59cb\u56fe\u4ee5\u53ca\u7531\u8fb9\u7c7b\u578b\u548c\u8fb9id\u5f20\u91cf\u6784\u6210\u7684\u5b57\u5178\u4f5c\u4e3a\u8f93\u5165": 762, "\u90bb\u5c45\u8282\u70b9\u91c7\u6837\u7684\u5de5\u4f5c\u6d41\u7a0b\u901a\u5e38\u5982\u4e0b": 758, "\u90bb\u5c45\u91c7\u6837\u5728\u8fd9\u4e2a\u65f6\u5019\u53ef\u4ee5\u66f4\u597d\u5730\u53d1\u6325\u4f5c\u7528": 761, "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u751f\u6210\u7684\u5757\u7684\u5217\u8868": 762, "\u90bb\u63a5\u77e9\u9635\u91cc\u7684\u5143\u7d20\u4e0d\u662f\u96f6\u5c31\u662f\u4e00": 771, "\u90fd\u662f\u540e\u7eed\u56fe\u795e\u7ecf\u7f51\u7edc\u5c42\u8ba1\u7b97\u4e2d\u67d0\u6761\u8fb9\u7684\u76ee\u6807\u8282\u70b9": 759, "\u90fd\u6709": 773, "\u90fd\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 763, "\u914d\u7f6e\u6587\u4ef6": 744, "\u91c7\u6837": 762, "\u91c7\u6837\u4ee3\u7801\u7c7b\u4f3c\u4e8e\u5355\u8fdb\u7a0b\u91c7\u6837": 742, "\u91c7\u6837\u5668": 741, "\u91c7\u6837\u5668\u65e0\u6cd5\u5728\u5177\u6709\u591a\u4e2a\u5de5\u4f5c\u8fdb\u7a0b\u7684pytorch": 742, "\u91c7\u6837\u5668\u8fdb\u7a0b": 741, "\u91c7\u6837\u5668\u8fdb\u7a0b\u7684\u6570\u91cf\u5fc5\u987b\u5339\u914d": 744, "\u91cc\u5b9e\u73b0\u4e86\u5f88\u591a\u5e38\u7528\u7684\u56fe\u6570\u636e\u96c6": 735, "\u91cc\u6240\u4ecb\u7ecd\u7684\u6027\u80fd\u4f18\u5316": 767, "\u91cc\u662f\u5426\u6709\u5904\u7406\u8fc7\u7684\u6570\u636e\u6587\u4ef6": 740, "\u91cc\u7684": 773, "\u91cc\u8bfb\u53d6\u5904\u7406\u8fc7\u7684\u6570\u636e": 740, "\u91cc\u9762\u4fdd\u5b58\u4e86\u8bad\u7ec3\u811a\u672c": 744, "\u91cd\u590d\u8fd9\u4e2a\u8fc7\u7a0b": 758, "\u91cd\u6392\u56fe\u4ee5\u83b7\u5f97\u66f4\u4f18\u7684\u5c40\u90e8\u6027": 739, "\u91cd\u65b0\u521d\u59cb\u5316\u53ef\u5b66\u4e60\u7684\u53c2\u6570": 766, "\u9488\u5bf9mxnet\u548cpytorch\u540e\u7aef\u4e5f\u6709\u5bf9\u5e94\u7684\u6a21\u5757": 774, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [752, 758], "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [752, 758], "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": [752, 758], "\u94fe\u63a5\u9884\u6d4b": [739, 752, 762, 769, 774], "\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u4e5f\u5e94\u4f7f\u7528\u7c7b\u4f3c\u7684\u5e03\u5c14\u6570\u7ec4": 742, "\u94fe\u63a5\u9884\u6d4b\u548c\u6574\u56fe\u5206\u7c7b\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u8bad\u7ec3": 769, "\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6\u7684\u5904\u7406\u4e0e\u8282\u70b9\u5206\u7c7b\u76f8\u4f3c": 739, "\u9500\u6bc1distgraph\u5e76\u521b\u5efa\u4e00\u4e2a\u65b0distgraph\u7684\u884c\u4e3a\u6ca1\u6709\u88ab\u5b9a\u4e49": 742, "\u952e\u662f\u4e00\u79cd\u5173\u7cfb": 756, "\u957f\u5ea6\u4e3a3\u7684\u8282\u70b9\u7279\u5f81": 748, "\u95f4\u9694\u635f\u5931": 773, "\u9648\u77e5\u96e8": 752, "\u9664\u4e86": 760, "\u9664\u4e86\u56fe\u7ed3\u6784": 747, "\u9664\u4e86\u5e73\u8861\u8282\u70b9\u7684\u7c7b\u578b\u4e4b\u5916": 743, "\u9664\u4e86\u5f20\u91cf\u7684\u5f62\u72b6\u548c\u6570\u636e\u7c7b\u578b\u4e4b\u5916": 742, "\u9664\u4e86\u6570\u636e\u7ef4\u5ea6": 766, "\u9664\u4e86\u7528\u6237\u5728\u521b\u5efa\u6570\u636e\u52a0\u8f7d\u5668\u65f6\u65e0\u6cd5\u6307\u5b9a\u5de5\u4f5c\u8fdb\u7a0b\u7684\u6570\u91cf": 742, "\u9664\u4e86\u8f93\u5165\u56fe\u548c\u8f93\u5165\u5f20\u91cf": 768, "\u9664\u4ee5\u5165\u5ea6": 767, "\u9664\u6b64\u4e4b\u5916": 755, "\u968f\u540e": 762, "\u968f\u673a\u6279\u6b21\u8bad\u7ec3\u8282\u70b9\u5206\u7c7b": 760, "\u9690\u5c42\u5927\u5c0f\u4e3a": 758, "\u96c6\u7fa4\u4e2d\u7684\u6bcf\u53f0\u673a\u5668\u5404\u81ea\u8d1f\u8d23\u4e00\u5f20\u5b50\u56fe": 741, "\u9700\u8981\u4e0b\u56fe\u4e2d\u7684\u6765\u81ea\u8282\u70b94": 759, "\u9700\u8981\u4ee5\u5c0f\u6279\u6b21\u7684\u65b9\u5f0f\u8ba1\u7b97\u8fd9\u4e2agnn\u5c42\u6240\u6709\u8282\u70b9\u7684\u8f93\u51fa\u8868\u793a": 761, "\u9700\u8981\u5411\u6570\u636e\u8f7d\u5165\u5668\u63d0\u4f9b\u8fb9\u7c7b\u578b\u548c\u5bf9\u5e94\u8fb9id\u7684\u5b57\u5178": 762, "\u9700\u8981\u5bf9\u7528\u4e8e\u6574\u56fe\u7684gnn\u6a21\u5757\u8fdb\u884c\u5982\u4e0b\u8c03\u6574\u4ee5\u5c06\u5176\u7528\u4e8e\u5757\u4f5c\u4e3a\u8f93\u5165\u7684\u60c5\u51b5": 763, "\u9700\u8981\u5c06\u5176\u4e0e": 760, "\u9700\u8981\u5c06\u539f\u59cb\u6570\u636e\u5904\u7406\u4e3a": 739, "\u9700\u8981\u6307\u5b9a\u5177\u4f53\u7684\u8282\u70b9\u548c\u8fb9\u7c7b\u578b": 751, "\u9700\u8981\u6839\u636e\u56fe\u7c7b\u578b\u88ab\u6307\u5b9a": 767, "\u9700\u8981\u6ce8\u610f": 772, "\u9700\u8981\u6ce8\u610f\u7684\u662f\u6279\u6b21\u5316\u56fe\u4e2d\u7684\u8282\u70b9\u548c\u8fb9\u5c5e\u6027\u6ca1\u6709\u6279\u6b21\u5927\u5c0f\u5bf9\u5e94\u7684\u7ef4\u5ea6": 772, "\u9700\u8981\u8fdb\u884c\u4ee5\u4e0b\u64cd\u4f5c": 764, "\u975e\u7ebf\u6027\u548c\u57fa\u5206\u89e3": 764, "\u975e\u96f6\u7684\u5143\u7d20\u53ef\u4ee5\u53d6\u4efb\u610f\u6807\u91cf\u503c": 771, "\u975e\u96f6\u9879": 747, "\u9762\u5411\u90a3\u4e9b\u60f3\u8981\u5f00\u53d1\u65b0\u7684\u91c7\u6837\u7b97\u6cd5": 758, "\u987e\u5ba2": 746, "\u9884\u6d4b\u56fe\u4e2d\u5df2\u7ecf\u5b58\u5728\u7684\u8fb9\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u578b\u662f\u4e00\u4e2a\u975e\u5e38\u5e38\u89c1\u7684\u4efb\u52a1\u7c7b\u578b": 770, "\u9884\u6d4b\u5b83\u7684\u7c7b\u578b\u662f": 770, "\u9884\u6d4b\u7ed3\u679c\u523b\u753b\u4e86\u6574\u4e2a\u8f93\u5165\u56fe\u7684\u5c5e\u6027": 772, "\u9884\u6d4b\u8fb9\u5f97\u5206\u7684\u6a21\u578b\u548c\u8fb9\u5206\u7c7b": 773, "\u9996\u5148": 772, "\u9996\u5148\u4f7f\u7528pip\u5b89\u88c5ogb\u5305": 738, "\u9996\u5148\u5b9a\u4e49\u4e00\u4e2a\u5982\u4e0a\u56fe\u6240\u793a\u7684dglgraph": 759, "\u9996\u5148\u6211\u4eec\u904d\u5386\u56fe\u4e2d\u6240\u6709\u7684\u5173\u7cfb": 768, "\u9a8c\u8bc1": 742, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u6570\u636e\u96c6": 770, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u7684\u5206\u5272\u4e5f\u4ee5\u5e03\u5c14\u63a9\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u5728\u56fe\u4e0a": 774, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6": 742, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u5177\u6709\u4ece\u4e00\u7ec4\u9884\u5b9a\u4e49\u7684\u7c7b\u522b\u4e2d\u5206\u914d\u7684\u4e00\u4e2a\u7c7b\u522b": 774, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u88ab\u6807\u6ce8\u4e86\u4e00\u4e2a\u6b63\u786e\u7684\u6570\u5b57": 774, "\u9a8c\u8bc1\u548c\u6d4b\u8bd5\u96c6\u5212\u5206": 770, "\u9a8c\u8bc1\u96c6\u548c\u6d4b\u8bd5\u96c6\u4e2d\u7684\u8282\u70b9\u770b\u4f5c\u4e0d\u540c\u7c7b\u578b\u7684\u8282\u70b9": 743, "\u9ad8\u5c42\u91c7\u6837api\u4e3a\u8282\u70b9\u5206\u7c7b\u548c\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u5b9e\u73b0\u4e86\u4e00\u4e9b\u6d41\u884c\u7684\u91c7\u6837\u7b97\u6cd5": 742, "\u9ec4\u5d1f": 752, "\u9ed8\u8ba4": 736, "\u9ed8\u8ba4\u60c5\u51b5\u4e0b": [742, 743], "\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u8fdb\u884c\u7279\u5f81\u5408\u5e76": 751, "\uac00": [779, 781, 782, 784, 794, 797, 798, 808, 811, 812, 815], "\uac00\uae4c\uc6b4": 779, "\uac00\ub2a5": 817, "\uac00\ub2a5\ub3c4": 816, "\uac00\ub2a5\ud558\ub2e4": [779, 784, 789, 795, 797, 799, 803, 805, 814, 815, 817], "\uac00\ub2a5\ud55c": [785, 795, 797, 817], "\uac00\uc774\ub4dc\ub294": 779, "\uac00\uc774\ub4dc\uc640": 803, "\uac00\uc7a5": [795, 806, 807, 811, 814, 817], "\uac00\uc815\ud558\uace0": [781, 816], "\uac00\uc815\ud558\ub294": 782, "\uac00\uc815\ud558\uba74": 814, "\uac00\uc815\ud558\uc790": 797, "\uac00\uc815\ud55c\ub2e4": [784, 785, 813, 814], "\uac00\uc838\ub2e4": 803, "\uac00\uc911\uce58": [784, 787, 789, 794], "\uac00\uc911\uce58\uace0": 796, "\uac00\uc911\uce58\ub294": [787, 796], "\uac00\uc911\uce58\ub4e4\uc744": 810, "\uac00\uc911\uce58\ub85c": 784, "\uac00\uc911\uce58\ub97c": [784, 787, 789, 796], "\uac00\uc911\uce58\uc640": 787, "\uac00\uc911\uce58\uc758": 784, "\uac00\uc911\uce58\uc774\ub2e4": 784, "\uac00\uc9c0": [781, 782, 784, 800, 802, 807, 816, 817], "\uac00\uc9c0\uace0": [807, 815, 817], "\uac01": [775, 780, 781, 782, 783, 784, 785, 787, 789, 791, 792, 794, 798, 800, 801, 803, 804, 805, 807, 808, 811, 812, 814, 815, 816, 817], "\uac01\uac01": [795, 797, 806], "\uac04\uacb0\ud558\uac8c": 795, "\uac04\ub2e8\ud558\uac8c": [780, 807, 814], "\uac04\ub2e8\ud558\uace0": 775, "\uac04\ub2e8\ud558\ub2e4": [784, 807, 814], "\uac04\ub2e8\ud55c": 786, "\uac04\ub2e8\ud788": 814, "\uac04\ub7b5\ud558\uac8c": 779, "\uac04\ub7b5\ud55c": 814, "\uac04\uc12d\uc774": 815, "\uac04\uc5d0": [783, 792], "\uac04\uc758": [787, 815, 816], "\uac12": 777, "\uac12\ub3c4": 784, "\uac12\ub4e4\uc744": 817, "\uac12\ub4e4\uc774\ub2e4": 784, "\uac12\ub4e4\uc778\ub370": 784, "\uac12\uc5d0": [802, 805, 808], "\uac12\uc73c\ub85c": [784, 808], "\uac12\uc740": [784, 798, 812, 814], "\uac12\uc744": [783, 784, 796, 811, 814], "\uac12\uc758": 783, "\uac12\uc774": 784, "\uac12\uc774\ub2e4": 784, "\uac12\uc778": 785, "\uac15\ub3c4\ub97c": 787, "\uac15\ub825\ud55c\uac00": 801, "\uac15\uc870\ud558\uae30": 779, "\uac15\ud558\uac8c": 775, "\uac16\uac70\ub098": 787, "\uac16\uac8c": 798, "\uac16\uace0": [778, 782, 783, 784, 789, 791, 792, 795, 803, 806, 814], "\uac16\uae30": [784, 798], "\uac16\ub294": [782, 783, 784, 786, 787, 788, 789, 791, 792, 798, 800, 801, 802, 806, 808, 814, 815], "\uac16\ub294\ub2e4": [781, 783, 784, 787, 789, 792, 795, 796, 803, 804, 813, 816], "\uac16\ub294\ub2e4\uace0": [782, 784], "\uac16\ub294\ub2e4\uba74": [784, 792, 802], "\uac16\ub294\ub370": [782, 784, 795, 808], "\uac16\ub3c4\ub85d": [782, 783, 784, 801], "\uac16\uc544\uc57c": 789, "\uac16\uc73c\uba70": 814, "\uac16\uc744": [786, 787, 789, 798, 812], "\uac16\uc74c": 806, "\uac16\uc9c0": [787, 811], "\uac19\uace0": 782, "\uac19\ub2e4": [776, 781, 782, 784, 785, 792, 795, 797, 798, 800, 801, 802, 803, 805, 807, 811, 814, 815, 816], "\uac19\ub3c4\ub85d": 784, "\uac19\uc544\uc57c": [785, 789, 791], "\uac19\uc544\uc57c\ub9cc": 782, "\uac19\uc740": [776, 781, 782, 783, 784, 785, 787, 789, 791, 792, 795, 796, 797, 801, 802, 803, 806, 807, 810, 811, 812, 813, 814, 815, 816, 817], "\uac19\uc744": 782, "\uac19\uc774": [779, 787, 794, 801, 802, 805, 806, 810, 812, 813, 814, 815, 816, 817], "\uac1c": 791, "\uac1c\uac00": 784, "\uac1c\uae4c\uc9c0": 791, "\uac1c\ub150\uc5d0": [802, 807], "\uac1c\ub150\uc740": [801, 802, 807], "\uac1c\ub150\uc744": 786, "\uac1c\ub97c": 782, "\uac1c\ub9cc": 782, "\uac1c\ubc1c": 782, "\uac1c\ubc1c\uc744": 791, "\uac1c\ubc1c\uc774": 803, "\uac1c\ubc1c\ud558\uace0": 782, "\uac1c\uc218": [776, 782, 785], "\uac1c\uc218\uac00": [784, 801], "\uac1c\uc218\uacfc": [782, 785], "\uac1c\uc218\ub294": [782, 785, 806], "\uac1c\uc218\ub97c": [782, 784], "\uac1c\uc218\uc5d0": [784, 803], "\uac1c\uc218\uc640": [782, 784, 789], "\uac1c\uc218\uc758": [782, 784], "\uac1c\uc22b\ub97c": 779, "\uac1c\uc758": [778, 782, 783, 784, 785, 805, 816], "\uac1c\uc778": 800, "\uac1d\uccb4": [780, 781, 788, 811], "\uac1d\uccb4\uac00": 782, "\uac1d\uccb4\ub294": 795, "\uac1d\uccb4\ub4e4\uc744": 782, "\uac1d\uccb4\ub4e4\uc758": 779, "\uac1d\uccb4\ub85c": [778, 784], "\uac1d\uccb4\ub97c": [782, 795, 802], "\uac1d\uccb4\ub9cc": 778, "\uac1d\uccb4\uc5d0": 782, "\uac1d\uccb4\uc640": 780, "\uac1d\uccb4\uc774\ub2e4": 795, "\uac2f\uc218\ub97c": 808, "\uac70\uafb8\ub85c": 800, "\uac70\ub4ed": 784, "\uac70\ub4ed\uc81c\uacf1\uc5d0": 805, "\uac70\uc758": [779, 802, 805, 807, 814], "\uac78\ub9ac\ub294": 804, "\uac78\uccd0\uc11c": [784, 792, 811], "\uac80\uc0c9\ud560": 783, "\uac80\uc99d": [782, 784, 804, 814, 817], "\uac80\uc99d\uacfc": 800, "\uac80\uc99d\uc744": 777, "\uac83": [802, 806, 807, 808], "\uac83\uacfc": [782, 784, 787, 802, 805, 809, 814], "\uac83\uacfc\ub294": 807, "\uac83\ub3c4": [777, 791, 795, 814], "\uac83\ub3e0": 803, "\uac83\ub4e4\uc5d0": 788, "\uac83\ub4e4\uc774\ub2e4": 784, "\uac83\ub9cc\uc774": 806, "\uac83\uc5d0": [784, 806], "\uac83\uc73c\ub85c": [784, 803, 807, 817], "\uac83\uc740": [779, 782, 789, 796, 801, 802, 804, 806, 807, 814, 815, 816, 817], "\uac83\uc744": [775, 776, 779, 780, 782, 783, 784, 792, 795, 797, 801, 805, 806, 815, 817], "\uac83\uc774": [778, 779, 780, 784, 797, 801, 802, 803, 804, 805, 807, 815, 816], "\uac83\uc774\uace0": [779, 782, 802], "\uac83\uc774\ub2e4": [776, 777, 779, 782, 784, 787, 789, 791, 792, 797, 800, 801, 802, 805, 806, 807, 811, 812, 814, 815, 816, 817], "\uac83\uc774\uc9c0\ub9cc": 808, "\uac83\uc778\ub2e4": 784, "\uac83\uc778\uc9c0": [801, 806], "\uac83\uc778\uc9c0\uc5d0": 806, "\uac83\uc77c": [805, 815], "\uac83\uc785\ub2c8\ub2e4": 793, "\uac83\uc9c0\ub9cc": 784, "\uac83\ucc98\ub7fc": [796, 802, 805], "\uacb0\uacfc": [790, 797, 801, 804, 812], "\uacb0\uacfc\uac00": 815, "\uacb0\uacfc\ub294": [784, 811, 812], "\uacb0\uacfc\ub4e4\uc740": 812, "\uacb0\uacfc\ub4e4\uc774": 784, "\uacb0\uacfc\ub77c\ub294": 807, "\uacb0\uacfc\ub85c": 802, "\uacb0\uacfc\ub85c\uc11c": 817, "\uacb0\uacfc\ub97c": [784, 786, 795, 797, 798, 801, 807, 812, 815], "\uacb0\uacfc\uc5d0": [782, 795], "\uacb0\uacfc\uc640": 795, "\uacb0\uacfc\uc758": 815, "\uacb0\uc815\ud55c\ub2e4": 810, "\uacb0\uc815\ud560": [783, 792], "\uacb0\ud569\ud558\uace0": 795, "\uacbd\ub85c\ub4e4\uc740": 785, "\uacbd\ub85c\ub85c": 785, "\uacbd\ub85c\ub97c": 785, "\uacbd\uc6b0": [777, 780, 782, 784, 785, 789, 792, 795, 799, 800, 801, 806, 808, 810, 811, 812, 815, 816], "\uacbd\uc6b0\uac00": [792, 814, 816], "\uacbd\uc6b0\ub294": 792, "\uacbd\uc6b0\ub3c4": [780, 801, 806, 813, 815], "\uacbd\uc6b0\ub4e4": 806, "\uacbd\uc6b0\ub77c\uba74": 795, "\uacbd\uc6b0\ub97c": 797, "\uacbd\uc6b0\uc5d0": [780, 782, 804, 811], "\uacbd\uc6b0\uc5d0\ub294": [779, 784, 791, 797, 800, 810], "\uacbd\uc6b0\uc5d0\ub9cc": 782, "\uacbd\uc6b0\uc640": [779, 792, 801, 815], "\uacbd\uc6b0\uc640\ub294": 815, "\uacc4\ub2e8\ub41c": 816, "\uacc4\uc0b0": [805, 808, 811, 814], "\uacc4\uc0b0\ub418\uc5b4\uc57c": [800, 807], "\uacc4\uc0b0\ub41c": 784, "\uacc4\uc0b0\uc740": 804, "\uacc4\uc0b0\uc744": [781, 783, 784], "\uacc4\uc0b0\uc774": 782, "\uacc4\uc0b0\uc801\uc778": 784, "\uacc4\uc0b0\ud558\uace0\uc790": 814, "\uacc4\uc0b0\ud558\uae30": [781, 801, 802, 805, 814], "\uacc4\uc0b0\ud558\uae30\ub97c": 807, "\uacc4\uc0b0\ud558\ub294": [801, 802, 804, 805, 814, 816, 817], "\uacc4\uc0b0\ud558\ub294\ub370": 807, "\uacc4\uc0b0\ud558\uba74": 814, "\uacc4\uc0b0\ud55c": 807, "\uacc4\uc0b0\ud55c\ub2e4": [802, 816], "\uacc4\uc0b0\ud55c\ub2e4\uace0": 814, "\uacc4\uc0b0\ud560": [801, 804, 807, 816, 817], "\uacc4\uc0b0\ud574\uc57c\ud558\uae30": 804, "\uacc4\uc0b0\ud574\uc57c\ud55c\ub2e4": 804, "\uacc4\uc18d": 808, "\uacc4\ud68d\uc774\ub77c\uba74": 813, "\uace0\uac1d": 787, "\uace0\uae09": [795, 800], "\uace0\ub824\ud558\uac8c": 784, "\uace0\ub824\ud558\uc790": 801, "\uace0\ub824\ud55c": 784, "\uace0\ub824\ud574\uc11c": 784, "\uace0\ub9bd": 801, "\uace0\ub9bd\ub41c": 801, "\uace0\uc720\uc758": 809, "\uace0\uc720\ud558\uac8c": [782, 792], "\uace0\uc720\ud558\ub2e4": 783, "\uace0\uc720\ud55c": [783, 784, 789, 791], "\uace0\uce58\uae30": 807, "\uacf1\ud558\uace0": [795, 808], "\uacf1\ud558\uae30": 796, "\uacf1\ud574\uc11c": 795, "\uacf3\uc5d0": [784, 788], "\uacf5\uac04\uacfc": 792, "\uacf5\ub3d9": 787, "\uacf5\ubc31": 784, "\uacf5\ubc31\uc73c\ub85c": 784, "\uacf5\uc2dd": 778, "\uacf5\uc2dd\uc5d0": 801, "\uacf5\uc2dd\uc73c\ub85c": [795, 812], "\uacf5\uc2dd\uc740": [801, 811], "\uacf5\ud1b5\uc801\uc778": 788, "\uacfc": [781, 782, 784, 785, 786, 787, 808, 810, 813], "\uacfc\uc815\uc5d0\uc11c": [784, 811], "\uacfc\uc81c": 816, "\uacfc\uc81c\ub4e4\uc758": 813, "\uacfc\uc81c\ub97c": 784, "\uad00\uacc4": [786, 787, 792, 798], "\uad00\uacc4\uac00": [787, 792, 812], "\uad00\uacc4\ub294": [787, 792, 811, 812], "\uad00\uacc4\ub2f9": [792, 811], "\uad00\uacc4\ub4e4\uc744": [792, 802], "\uad00\uacc4\ub4e4\uc758": 812, "\uad00\uacc4\ub85c": 812, "\uad00\uacc4\ub85c\ubd80\ud130": 812, "\uad00\uacc4\ub97c": [787, 792, 812, 815], "\uad00\uacc4\uc5d0": 812, "\uad00\uacc4\uc758": 798, "\uad00\uacc4\uc774\uace0": [798, 802], "\uad00\uacc4\uc778": 802, "\uad00\ub828": [785, 812], "\uad00\ub828\ub41c": [779, 785, 792, 795, 810, 816], "\uad00\ub828\uc5c6\uc774": 783, "\uad00\ub828\uc774": 803, "\uad00\ub9ac\ud558\ub294\ub370": 792, "\uad00\ub9ac\ud55c\ub2e4": 782, "\uad49\uc7a5\ud788": [780, 815], "\uad50\uccb4\ud558\ub294": 807, "\uad50\uccb4\ud55c\ub2e4": 806, "\uad6c\ub3d9\ud558\uace0": 782, "\uad6c\ub9e4\uc790": 787, "\uad6c\ubcc4\uc774": 792, "\uad6c\ubcc4\ud558\uace0": 782, "\uad6c\ubcc4\ud558\ub294": 784, "\uad6c\ubcc4\ud558\ub294\ub370": 782, "\uad6c\ubcc4\ud574\ubcfc": 815, "\uad6c\ubd84\ub418\ub294": 784, "\uad6c\ubd84\ub41c\ub2e4": 784, "\uad6c\ubd84\ub41c\ub2e4\uace0": 814, "\uad6c\ubd84\uc9c1\uae30": 802, "\uad6c\ubd84\ud55c\ub2e4\uba74": 783, "\uad6c\uc131": 784, "\uad6c\uc131\ub418\uc5b4": [809, 813], "\uad6c\uc131\ub418\uc5b4\uc57c": 784, "\uad6c\uc131\ub41c": [784, 787, 815, 816], "\uad6c\uc131\ub41c\ub2e4": [784, 787, 802, 807, 812, 817], "\uad6c\uc131\ud558\ub294": 784, "\uad6c\uc131\ud560": 784, "\uad6c\uc785": 787, "\uad6c\uc785\ud588\uc74c": 787, "\uad6c\uc870": 786, "\uad6c\uc870\ub294": 782, "\uad6c\uc870\ub85c": 786, "\uad6c\uc870\ub97c": [791, 815], "\uad6c\uc870\uc640": [781, 782, 784, 788, 790], "\uad6c\uc870\uc774\ub2e4": 787, "\uad6c\uccb4\uc801\uc778": 779, "\uad6c\ud558\uace0": 814, "\uad6c\ud558\uae30": [795, 817], "\uad6c\ud558\ub294\ub370": [802, 805], "\uad6c\ud574\uc9c4": 815, "\uad6c\ud604": [779, 807, 814, 817], "\uad6c\ud604\uacfc": [802, 805], "\uad6c\ud604\ub355\uc5d0": 809, "\uad6c\ud604\ub3c4": [802, 805], "\uad6c\ud604\ub418\uc5b4": [795, 811, 812, 817], "\uad6c\ud604\ub418\uc5b4\uc57c": 776, "\uad6c\ud604\ub41c\ub2e4": [811, 814], "\uad6c\ud604\ub41c\ub2e4\ub294": 804, "\uad6c\ud604\uc0c1\uc758": [802, 805], "\uad6c\ud604\uc5d0": 779, "\uad6c\ud604\uc5d0\uc11c": 807, "\uad6c\ud604\uc740": [779, 782, 797, 801, 806, 807, 815], "\uad6c\ud604\uc774": [779, 795, 802, 805, 806], "\uad6c\ud604\ud558\uace0": [775, 781, 782, 795, 800, 808, 815], "\uad6c\ud604\ud558\uae30": [780, 800, 807], "\uad6c\ud604\ud558\uae30\ub9cc": 801, "\uad6c\ud604\ud558\ub294": [775, 776, 804, 806, 807], "\uad6c\ud604\ud558\ub294\ub370": 776, "\uad6c\ud604\ud558\ub294\uc9c0": 794, "\uad6c\ud604\ud558\uba74": 797, "\uad6c\ud604\ud55c": [801, 806], "\uad6c\ud604\ud55c\ub2e4": [776, 777], "\uad6c\ud604\ud560": [777, 779, 780, 795, 817], "\uad6c\ud604\ud574\uc11c": 777, "\uad6c\ud604\ud574\uc57c": 779, "\uad8c\uc7a5\ud558\ub294\ub370": [776, 795], "\uad8c\uc7a5\ud55c\ub2e4": [775, 779, 780, 782, 797], "\uaddc\uce59\uc740": 795, "\uaddc\uce59\uc744": 815, "\uade0\ub4f1": 816, "\uade0\ub4f1\ud558\uac8c": 805, "\uade0\uc77c": 803, "\uade0\ud5dd\uc744": 784, "\uade0\ud615\uc744": 784, "\uade0\ud615\uc7a1\ud78c": 784, "\uadf8": [776, 782, 783, 784, 786, 788, 792, 794, 795, 797, 799, 800, 801, 804, 805, 807, 810, 811, 814, 815, 816, 817], "\uadf8\uac83\ub4e4\uc5d0": 792, "\uadf8\uac83\ub4e4\uc740": 782, "\uadf8\uac83\ub4e4\uc744": [782, 801], "\uadf8\uac83\ub4e4\uc758": [781, 784, 787, 788, 800, 802, 814], "\uadf8\uac83\uc740": 816, "\uadf8\uac83\uc758": [784, 807], "\uadf8\ub300\ub85c": [801, 805], "\uadf8\ub4e4\uc758": 787, "\uadf8\ub798\ub4e4": 815, "\uadf8\ub798\uc11c": [784, 788], "\uadf8\ub798\ud504": [776, 778, 781, 784, 785, 790, 793, 794, 798, 800, 801, 802, 804, 805, 807, 810, 812], "\uadf8\ub798\ud504\uac00": [782, 783, 784, 785, 787, 792, 801, 802, 806, 811, 814, 815, 817], "\uadf8\ub798\ud504\uac04\uc758": [802, 805], "\uadf8\ub798\ud504\ub098": 806, "\uadf8\ub798\ud504\ub294": [783, 784, 786, 787, 790, 792, 801, 802, 803, 806, 811, 815], "\uadf8\ub798\ud504\ub3c4": 801, "\uadf8\ub798\ud504\ub4e4": 779, "\uadf8\ub798\ud504\ub4e4\uacfc": 805, "\uadf8\ub798\ud504\ub4e4\ub85c": [781, 784], "\uadf8\ub798\ud504\ub4e4\uc5d0": [800, 805, 812, 813, 814, 815, 816], "\uadf8\ub798\ud504\ub4e4\uc5d0\uc11c": 816, "\uadf8\ub798\ud504\ub4e4\uc744": [783, 791, 815], "\uadf8\ub798\ud504\ub4e4\uc758": [779, 780, 784, 792, 802, 805, 807], "\uadf8\ub798\ud504\ub85c": [784, 785, 791, 801, 811, 815, 816], "\uadf8\ub798\ud504\ub85c\ubd80\ud130": [783, 788], "\uadf8\ub798\ud504\ub97c": [778, 779, 781, 782, 783, 784, 787, 788, 791, 801, 802, 803, 806, 807, 813, 814, 815, 816, 817], "\uadf8\ub798\ud504\ub9cc": 779, "\uadf8\ub798\ud504\ubcc4": 789, "\uadf8\ub798\ud504\uc5d0": [779, 782, 786, 790, 791, 793, 794, 799, 801, 804, 806, 807, 811, 813, 816, 817], "\uadf8\ub798\ud504\uc5d0\ub3c4": 801, "\uadf8\ub798\ud504\uc5d0\uc11c": [779, 784, 787, 798, 801, 812], "\uadf8\ub798\ud504\uc5d0\uc11c\ub294": 784, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": [794, 816], "\uadf8\ub798\ud504\uc640": [792, 801, 802, 803, 805, 806, 812, 813, 814, 815], "\uadf8\ub798\ud504\uc758": [779, 782, 783, 784, 786, 787, 789, 791, 792, 797, 801, 803, 806, 811, 812, 815], "\uadf8\ub798\ud504\uc774\uace0": 787, "\uadf8\ub798\ud504\uc774\uae30": 788, "\uadf8\ub798\ud504\uc774\ub2e4": [787, 798, 815, 816], "\uadf8\ub798\ud504\uc774\uc5b4\uc57c": 806, "\uadf8\ub798\ud504\uc774\uc790": 815, "\uadf8\ub798\ud504\uc778": [789, 800, 802], "\uadf8\ub798\ud504\uc77c": 792, "\uadf8\ub798\ud504\ud2d1": 783, "\uadf8\ub7a8\uc758": 792, "\uadf8\ub7a8\ud504\ub97c": 816, "\uadf8\ub7ec\uba74": 814, "\uadf8\ub7f0": 816, "\uadf8\ub807\uc9c0": [777, 802, 813], "\uadf8\ub8f9": 781, "\uadf8\ub8f9\uc73c\ub85c": 792, "\uadf8\ub9ac\uace0": [776, 779, 781, 782, 784, 785, 786, 787, 788, 792, 794, 795, 801, 802, 808, 809, 810, 813, 815, 817], "\uadf8\ub9bc\uc5d0\uc11c\uc640": 801, "\uadf8\ub9bc\uc740": [781, 783, 801], "\uadf8\ub9bc\uc758": 801, "\uadf8\uc5d0": [784, 798], "\uadf8\uc640": [787, 802], "\uae30\ub2a5": 788, "\uae30\ub2a5\uc740": 803, "\uae30\ub2a5\uc744": [784, 788, 795, 801], "\uae30\ubc18\uc73c\ub85c": [783, 785, 811], "\uae30\ubc18\uc758": [784, 816], "\uae30\ubc18\uc774\ub2e4": 801, "\uae30\ubc95\uc744": 814, "\uae30\ubc95\uc774\ub2e4": 796, "\uae30\ubcf8": [776, 782, 783, 784, 785, 795, 801], "\uae30\ubcf8\uc801\uc73c\ub85c": 806, "\uae30\ubcf8\uc801\uc778": [776, 778, 784, 786, 807], "\uae30\uc220\uc801\uc73c\ub85c\ub294": 801, "\uae30\uc5ec\ub97c": 809, "\uae30\uc900\uc758": 793, "\uae30\ud638\ub9cc\uc73c\ub85c": 784, "\uae38\uc774": 787, "\uae38\uc774\ub294": 782, "\uae40\ubb34\ud604": 793, "\uae54\ub054\ud55c": [775, 792], "\uae68\uc9d0": 782, "\uaf2d": [776, 784], "\ub05d\ub098\uba74": 784, "\ub098\ub204\uace0": [781, 782, 784], "\ub098\ub204\ub294": [782, 784, 797], "\ub098\ub208\ub2e4": 784, "\ub098\ub220\uc57c\ub9cc": 782, "\ub098\ub220\uc57c\ud55c\ub2e4": 782, "\ub098\ub220\uc838": 779, "\ub098\ub220\uc838\uc11c": [782, 783], "\ub098\ub220\uc9c4": 782, "\ub098\ub25c\ub2e4": [798, 810], "\ub098\ub25c\ub2e4\ub294": 806, "\ub098\ub260": 811, "\ub098\uba38\uc9c0": [781, 784, 815], "\ub098\uba38\uc9c0\ub294": 801, "\ub098\uba38\uc9c0\uc5d0\uc11c\ub294": [776, 781], "\ub098\uc544\uac00": [784, 790], "\ub098\uc5f4\ub418\uc5b4": 784, "\ub098\uc5f4\ud558\uace0": 784, "\ub098\uc5f4\ud558\uae30\ub294": 788, "\ub098\ud0c0\ub0b8\ub2e4": [787, 791], "\ub098\ud0c0\ub0b8\ub2e4\ub294": 815, "\ub0a8\uc544\uc788\ub2e4": 795, "\ub0ae\ub2e4\uace0": 797, "\ub0ae\ucd94\ub294": 797, "\ub0b4\ubcf4\ub0b4\ub294": 814, "\ub0b4\ubd80\uc801\uc73c\ub85c": [788, 795], "\ub0b4\ubd80\uc801\uc73c\ub85c\ub294": 782, "\ub0b4\uc5d0\uc11c": 784, "\ub0b4\uc6a9\uc73c\ub85c": 801, "\ub0b4\uc6a9\uc740": [779, 795], "\ub0b4\uc6a9\uc774": 788, "\ub0b8": 802, "\ub108\ubb34": [797, 803, 814], "\ub110\ub9ac": 817, "\ub118\uc744": 800, "\ub123\uae30": 803, "\ub124": [783, 784, 785], "\ub124\uac00\uc9c0": 783, "\ub124\uac00\ud2f0\ube0c": 816, "\ub124\uc784\uc2a4\ud328\uc774\uc2a4\uc5d0": 795, "\ub124\ud2b8\uc6cc\ud06c": [781, 784, 785, 793, 800, 806, 816], "\ub124\ud2b8\uc6cc\ud06c\uac00": [801, 817], "\ub124\ud2b8\uc6cc\ud06c\ub294": [787, 817], "\ub124\ud2b8\uc6cc\ud06c\ub4e4\uc5d0\uc11c": 798, "\ub124\ud2b8\uc6cc\ud06c\ub97c": [782, 807, 813, 814], "\ub124\ud2b8\uc6cc\ud06c\uc5d0\uc11c": 787, "\ub124\ud2b8\uc6cc\ud06c\uc758": 810, "\ub178\ub4dc": [781, 783, 786, 787, 788, 789, 792, 794, 795, 800, 801, 802, 805, 806, 811, 812, 813, 815, 816], "\ub178\ub4dc\uac00": [782, 784, 800, 807], "\ub178\ub4dc\uac04\uc758": 792, "\ub178\ub4dc\ub098": 798, "\ub178\ub4dc\ub294": [803, 817], "\ub178\ub4dc\ub4e4": [782, 784, 786, 800, 801, 802, 816], "\ub178\ub4dc\ub4e4\uac04\uc758": [786, 787], "\ub178\ub4dc\ub4e4\uacfc": [787, 789, 792, 801, 802, 803, 807], "\ub178\ub4dc\ub4e4\ub85c": 783, "\ub178\ub4dc\ub4e4\ub9cc\uc774": 801, "\ub178\ub4dc\ub4e4\uc5d0": [784, 801, 804, 807, 815, 816], "\ub178\ub4dc\ub4e4\uc5d0\uac8c": 795, "\ub178\ub4dc\ub4e4\uc5d0\uc11c": 801, "\ub178\ub4dc\ub4e4\uc640": 779, "\ub178\ub4dc\ub4e4\uc740": [783, 784, 787, 801, 807], "\ub178\ub4dc\ub4e4\uc744": [781, 784, 801, 805, 807, 811], "\ub178\ub4dc\ub4e4\uc758": [782, 784, 787, 797, 799, 800, 801, 804, 807, 811, 814, 815, 816, 817], "\ub178\ub4dc\ub4e4\uc774": [783, 787, 801, 802, 806], "\ub178\ub4dc\ub4e4\uc774\ub098": [784, 815], "\ub178\ub4dc\ub4e4\uc774\ub2e4": [786, 801, 811], "\ub178\ub4dc\ub85c": [797, 806, 807], "\ub178\ub4dc\ub97c": [783, 784, 787, 791, 795, 801, 805, 811, 817], "\ub178\ub4dc\ubcc4": 794, "\ub178\ub4dc\uc5d0": [784, 789, 791, 794, 805, 807, 810, 812, 814, 817], "\ub178\ub4dc\uc5d0\ub3c4": 801, "\ub178\ub4dc\uc5d0\uc11c": [779, 797], "\ub178\ub4dc\uc640": [781, 782, 783, 784, 786, 791, 792, 794, 795, 798, 801, 806, 811, 815], "\ub178\ub4dc\uc758": [779, 782, 784, 791, 792, 794, 795, 796, 799, 801, 802, 804, 806, 807, 810, 811, 814, 817], "\ub178\ub4e4\ub4e4": 801, "\ub178\ub4e4\ub4e4\uc744": 801, "\ub178\ub4e4\ub4e4\uc758": 804, "\ub178\ub4e4\uc5d0": 801, "\ub178\ub4e4\uc744": 801, "\ub178\ub4e4\uc758": [782, 784], "\ub178\uc774\uc988": 816, "\ub178\ud2b8": [784, 798, 801, 803, 814, 815], "\ub179\uc0c9": 801, "\ub179\uc0c9\uacfc": 801, "\ub179\uc0c9\uc73c\ub85c": 801, "\ub192\ub3c4\ub85d": 816, "\ub192\uc740": 797, "\ub193\uc774\uac8c": 811, "\ub208\uc5d0": 802, "\ub274\ub7f4": [793, 798, 800, 801, 806, 807, 810, 816], "\ub290\ub9b0": 804, "\ub294": [776, 778, 782, 784, 785, 787, 788, 791, 792, 794, 795, 798, 801, 802, 803, 805, 807, 808, 811, 812, 813, 815, 816, 817], "\ub298": 801, "\ub2a5\ub825\uc774": 795, "\ub2e4\ub8e8\uace0": 806, "\ub2e4\ub8e8\uae30": [777, 815], "\ub2e4\ub8e8\ub294": 803, "\ub2e4\ub8e8\ub294\ub370": 786, "\ub2e4\ub8e8\uc9c0": 788, "\ub2e4\ub8ec": 804, "\ub2e4\ub8ec\ub2e4": [781, 782, 800], "\ub2e4\ub8f0": [788, 791, 811, 812], "\ub2e4\ub974\uac8c": [779, 782, 807, 811], "\ub2e4\ub974\uae30": 801, "\ub2e4\ub974\uc9c0": [814, 815, 816], "\ub2e4\ub978": [782, 784, 785, 786, 787, 788, 790, 791, 792, 795, 797, 798, 802, 803, 807, 812, 813, 814, 815, 817], "\ub2e4\ub978\ub370": [804, 816], "\ub2e4\ub984\uc744": 778, "\ub2e4\uba74": 783, "\ub2e4\uc2dc": [782, 784, 792, 806], "\ub2e4\uc591\ud55c": [782, 788, 812, 816], "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uace0": 777, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 775, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\ub294": 777, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c": 777, "\ub2e4\uc6b4\ub85c\ub4dc\ud55c\ub2e4": 777, "\ub2e4\uc6b4\ub85c\ub4dc\ud574\uc11c": 778, "\ub2e4\uc6b4\uc2a4\ud2b8\ub9bc": [784, 814, 816, 817], "\ub2e4\uc74c": [775, 777, 778, 779, 780, 782, 783, 784, 791, 792, 795, 801, 802, 803, 805, 806, 807, 808, 810, 814, 815, 816, 817], "\ub2e4\uc74c\uacfc": [776, 779, 781, 784, 785, 792, 794, 795, 796, 797, 798, 800, 801, 802, 805, 806, 807, 811, 812, 813, 814, 815, 816, 817], "\ub2e4\uc74c\uc5d0": 811, "\ub2e4\uc74c\uc5d0\ub294": 801, "\ub2e4\uc74c\uc73c\ub85c": 800, "\ub2e4\uc74c\uc73c\ub85c\ub294": [805, 810], "\ub2e4\uc74c\uc740": [784, 785, 805, 808, 816, 817], "\ub2e4\uc74c\uc744": [785, 812], "\ub2e4\uc911": [783, 787], "\ub2e4\uc911\uc758": 782, "\ub2e4\ucc28\uc6d0": 789, "\ub2e8": [780, 782, 784], "\ub2e8\uacc4\uac00": 782, "\ub2e8\uacc4\ub4e4\uc744": 810, "\ub2e8\uacc4\ub85c": 784, "\ub2e8\uacc4\ub97c": [784, 807], "\ub2e8\uacc4\ub9c8\ub2e4": 800, "\ub2e8\uacc4\uc5d0\uc11c": [794, 797, 811], "\ub2e8\ubc29\ud5a5": 806, "\ub2e8\uc21c\ud558\uac8c": [802, 806, 807, 815, 817], "\ub2e8\uc21c\ud55c": 807, "\ub2e8\uc21c\ud788": 801, "\ub2e8\uc704\ub85c": 815, "\ub2e8\uc77c": [779, 781, 782, 784, 795, 806, 812, 813, 814], "\ub2e8\uc885": 811, "\ub2e8\uc9c0": [792, 801, 806, 817], "\ub2e8\ud56d": 795, "\ub2e8\ud56d\uc758": 795, "\ub2ec\ub77c\uc9c4\ub2e4": [802, 810], "\ub2ec\uc131\ud558\uae30": 816, "\ub2ec\uc131\ud558\ub294": 797, "\ub2f4\uace0": [782, 784, 802, 807, 815], "\ub2f4\ub2f9\ud558\ub294": 798, "\ub2f4\ub2f9\ud55c\ub2e4": [782, 784, 801], "\ub300\ub7b5": 784, "\ub300\ubd80\ubd84": [782, 791, 808], "\ub300\ubd80\ubd84\uc758": [780, 815], "\ub300\uc0c1": 806, "\ub300\uc0c1\uc73c\ub85c": 806, "\ub300\uc2e0": [782, 792, 805], "\ub300\uc2e0\uc5d0": [802, 805], "\ub300\uce6d\uc801\uc778": 787, "\ub300\ud45c\ud558\ub3c4\ub85d": 807, "\ub300\ud55c": [775, 776, 777, 779, 780, 782, 783, 785, 786, 788, 789, 790, 791, 792, 793, 794, 795, 797, 798, 799, 801, 802, 804, 805, 806, 807, 808, 811, 812, 813, 815, 816, 817], "\ub300\ud574": [781, 807, 812], "\ub300\ud574\uc11c": [782, 784, 801, 804, 805, 807, 808, 810, 812, 813, 814, 815, 816, 817], "\ub300\ud578": 800, "\ub354": [779, 780, 782, 784, 790, 795, 797, 801, 804, 808, 817], "\ub354\ubd88\uc5b4": [784, 788, 812, 815], "\ub354\ubd88\uc5b4\uc11c": 783, "\ub354\ud55c\ub2e4": 797, "\ub354\ud560": 779, "\ub354\ud574\uc11c": [784, 795, 815], "\ub355\uc5d0": 815, "\ub370\uc774": 782, "\ub370\uc774\ud130": [776, 784, 788, 791, 792, 793, 795, 801, 808, 810, 813, 817], "\ub370\uc774\ud130\uac00": [779, 780, 785, 804, 815], "\ub370\uc774\ud130\ub294": [779, 784], "\ub370\uc774\ud130\ub3c4": [784, 788], "\ub370\uc774\ud130\ub85c": 783, "\ub370\uc774\ud130\ub85c\ub354\ub97c": 815, "\ub370\uc774\ud130\ub85c\uc11c": 782, "\ub370\uc774\ud130\ub97c": [775, 777, 780, 781, 782, 783, 784, 788, 790], "\ub370\uc774\ud130\ub9cc": 790, "\ub370\uc774\ud130\uc14b": [776, 778, 780, 808, 813, 817], "\ub370\uc774\ud130\uc14b\uacfc": 779, "\ub370\uc774\ud130\uc14b\ub4e4": 775, "\ub370\uc774\ud130\uc14b\ub4e4\uc740": 779, "\ub370\uc774\ud130\uc14b\ub4e4\uc744": 778, "\ub370\uc774\ud130\uc14b\uc5d0": [776, 778, 779, 780, 804], "\ub370\uc774\ud130\uc14b\uc740": [778, 779, 817], "\ub370\uc774\ud130\uc14b\uc744": [775, 776, 778, 779, 807, 813, 815], "\ub370\uc774\ud130\uc14b\uc758": [778, 779, 815], "\ub370\uc774\ud130\uc14b\uc774": 777, "\ub370\uc774\ud130\uc5d0": [782, 783, 784, 785, 802], "\ub370\uc774\ud130\uc640": [781, 782, 783, 784, 785, 788], "\ub370\uc774\ud130\uc758": [779, 782], "\ub370\uc774\ud14c\uc14b\uc744": 779, "\ub370\uc774\ud2b8\ub97c": 776, "\ub374\uc2a4": 782, "\ub3c4\uad6c\ub4e4\uc744": 781, "\ub3c4\uc6c0\uc774": 797, "\ub3c4\ucc29\uc9c0": 792, "\ub3c4\ucd9c\ud560": 814, "\ub3c5\ub9bd\uc801\uc778": 792, "\ub3d5\uae30": 784, "\ub3d5\ub294": 785, "\ub3d9\uae30\ud654": 782, "\ub3d9\uc2dc": 782, "\ub3d9\uc2dc\uc5d0": [781, 782], "\ub3d9\uc548": [784, 795], "\ub3d9\uc548\uc5d0": 782, "\ub3d9\uc77c\ud558\uac8c": 792, "\ub3d9\uc77c\ud558\uae30\uc5d0": 802, "\ub3d9\uc77c\ud558\ub2e4": [779, 784, 797, 801, 808, 809, 811, 816, 817], "\ub3d9\uc77c\ud558\ub3c4\ub85d": 802, "\ub3d9\uc77c\ud55c": [781, 782, 795], "\ub3d9\uc791\uc740": 811, "\ub3d9\uc791\ud558\uac8c": 806, "\ub3d9\uc791\ud558\ub294": [803, 814], "\ub3d9\uc791\ud558\ub294\uc9c0": [775, 806, 817], "\ub3d9\uc791\ud558\ub294\uc9c0\ub97c": 776, "\ub3d9\uc791\ud55c\ub2e4": [782, 803, 806], "\ub3d9\uc791\ud560": 801, "\ub3d9\uc791\ud568": 803, "\ub3d9\uc885": 787, "\ub418\uac8c": 781, "\ub418\uace0": 811, "\ub418\uae30": 811, "\ub418\uae30\ub3c4": 798, "\ub418\ub294": 801, "\ub418\ub3c4\ub85d": 807, "\ub418\ubc84\ub9bc": 808, "\ub41c\ub2e4": [779, 787, 792, 797, 798, 801, 802, 811, 814, 815, 816, 817], "\ub41c\ub2e4\ub294": 807, "\ub420": [784, 785, 801], "\ub450": [782, 784, 785, 787, 789, 790, 792, 797, 798, 802, 805, 808, 814, 815, 816], "\ub450\uac00\uc9c0": [782, 783, 792, 803, 812], "\ub450\uac1c": 806, "\ub450\uac1c\ub85c": 797, "\ub450\uac1c\uc758": [787, 788, 795, 807], "\ub450\ubc88\uc9f8": [784, 801, 802], "\ub450\ubc88\uc9f8\ub294": [802, 811], "\ub450\ubc88\uc9f8\ub85c": 815, "\ub458\uc740": 814, "\ub4a4\uc5d0": 785, "\ub4e4": [801, 815], "\ub4e4\uaca0\ub2e4": 779, "\ub4e4\ub9cc": 801, "\ub4e4\uba74": [782, 795, 796, 805, 814, 815, 816], "\ub4e4\uc5b4": [780, 782, 783, 784, 786, 787, 789, 795, 801, 803, 806, 807, 814, 815, 816, 817], "\ub4e4\uc5b4\uac08": [803, 813], "\ub4e4\uc5b4\ubcf4\uc790": [797, 801, 806, 807], "\ub4e4\uc744": [795, 802], "\ub4e4\uc758": [794, 802, 805, 807], "\ub4e4\uc790": 806, "\ub4ec\ub140": 792, "\ub4f1": 776, "\ub4f1\uacfc": 810, "\ub4f1\ub85d": 810, "\ub4f1\ub85d\uacfc": 809, "\ub4f1\ub85d\ud55c\ub2e4": 810, "\ub4f1\uc740": 784, "\ub4f1\uc758": 817, "\ub4f1\uc774": [795, 815], "\ub4f1\uc7a5\ud55c\ub2e4\ub294": 801, "\ub514\ub809\ud1a0\ub9ac": [777, 785], "\ub514\ub809\ud1a0\ub9ac\ub85c": [777, 785], "\ub514\ub809\ud1a0\ub9ac\ub97c": [784, 785], "\ub514\ub809\ud1a0\ub9ac\uc5d0": [777, 779, 784], "\ub514\ub809\ud1a0\ub9ac\uc640": 784, "\ub514\ub809\ud1a0\ub9ac\uc758": 784, "\ub514\ubc14\uc774\uc2a4": 791, "\ub514\ubc14\uc774\uc2a4\ub85c": 803, "\ub514\uc2a4\ud06c\ub85c": 780, "\ub514\uc2a4\ud06c\uc5d0": [776, 777, 780, 788], "\ub514\uc790\uc778\uc744": 782, "\ub525\ub7ec\ub2dd": 817, "\ub525\ub7ec\ub2dd\uc5d0\uc11c": 815, "\ub530\ub77c": [784, 791, 809, 810, 811, 816, 817], "\ub530\ub77c\uc11c": [779, 782, 783, 784, 785, 787, 788, 790, 801, 802, 803, 805, 806, 808, 811], "\ub530\ub974\uace0": 782, "\ub530\ub974\uba74": 801, "\ub530\ub978\ub2e4": [775, 789], "\ub54c": [781, 782, 783, 784, 792, 795, 797, 802, 804, 805, 807, 810, 812, 814, 815, 816], "\ub54c\uae4c\uc9c0": 800, "\ub54c\ub294": [783, 792, 808], "\ub54c\ub85c\ub294": [797, 802, 813], "\ub54c\ub860": 814, "\ub54c\ubb38\uc5d0": [779, 780, 782, 787, 792, 797, 801, 804, 805, 808, 811, 814, 815, 816], "\ub54c\ubb38\uc774\ub2e4": [775, 776, 782, 784, 788, 791, 795, 797, 801, 802, 803, 804, 816], "\ub54c\uc758": 808, "\ub5a0\uc62c\ub824": 801, "\ub610\ub294": [776, 777, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 798, 800, 801, 806, 810, 812, 813, 815, 816, 817], "\ub610\ud55c": [776, 779, 782, 784, 785, 791, 800, 807, 814, 817], "\ub611\uac19\uc774": 815, "\ub73b": 816, "\ub744\ub294": 802, "\ub77c\uace0": [791, 795, 801, 807, 814, 816], "\ub77c\ub294": [779, 783, 784, 795], "\ub77c\uc774\ube0c\ub7ec\ub9ac": 788, "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub4e4": 788, "\ub77c\uc778": 789, "\ub77c\uc778\uc774\ub2e4": 781, "\ub798\ud551\ud558\uba74": 808, "\ub79c\ub364": 784, "\ub7ec\ud37c\ub7f0\uc2a4": 788, "\ub7f0\uce58": 785, "\ub7f0\uce6d\ud558\uae30": 781, "\ub808\uc774\ube14": [776, 779, 788, 815], "\ub808\uc774\ube14\uacfc": 817, "\ub808\uc774\ube14\ub4e4\uc758": 779, "\ub808\uc774\ube14\ub85c": 814, "\ub808\uc774\ube14\ub9cc": 807, "\ub808\uc774\ube14\uc740": [807, 817], "\ub808\uc774\ube14\uc744": [780, 792, 807, 814], "\ub808\uc774\ube14\uc774": [784, 804], "\ub808\uc774\uc544\uc6c3\uc744": 789, "\ub808\uc774\uc5b4": [797, 804, 807, 808, 814, 816, 817], "\ub808\uc774\uc5b4\uac00": 782, "\ub808\uc774\uc5b4\ub4e4": 804, "\ub808\uc774\uc5b4\ub4e4\uc744": 804, "\ub808\uc774\uc5b4\ub85c\ubd80\ud130": 801, "\ub808\uc774\uc5b4\ub97c": 801, "\ub808\uc774\uc5b4\ubd80\ud130": 804, "\ub808\uc774\uc5b4\uc5d0": [801, 802, 804, 807, 815], "\ub808\uc774\uc5b4\uc5d0\uc11c": [800, 807], "\ub808\uc774\uc5b4\uc758": [797, 800, 801, 804], "\ub808\uc774\uc774\ubcc4\ub85c": 804, "\ub85c": [783, 785, 786, 788, 791, 794, 806, 807, 808, 811, 812, 817], "\ub85c\ub354": 782, "\ub85c\ub354\uac00": [802, 807], "\ub85c\ub354\ub294": 805, "\ub85c\ub354\ub85c\ubd80\ud130": 802, "\ub85c\ub354\ub97c": [782, 801, 802, 805], "\ub85c\ub354\uc5d0": 805, "\ub85c\ub354\uc5d0\uc11c": 802, "\ub85c\ub4dc\ub420": [782, 783, 807], "\ub85c\ub4dc\uc548\ub2e4": 784, "\ub85c\ub4dc\uc5d0": 776, "\ub85c\ub4dc\ud558\uace0": [782, 784], "\ub85c\ub4dc\ud558\uae30": [775, 779], "\ub85c\ub4dc\ud558\ub294": 807, "\ub85c\ub4dc\ud558\uba74": 807, "\ub85c\ub4dc\ud55c\ub2e4": [782, 807], "\ub85c\ub4dc\ud55c\ub2e4\ub294": 807, "\ub85c\ub529": [775, 776, 778], "\ub85c\ub529\ub420": 784, "\ub85c\ub529\uc744": 776, "\ub85c\ub529\ud558\uace0": [775, 776, 788], "\ub85c\ub529\ud558\uae30": 784, "\ub85c\ub529\ud558\ub294": [778, 788, 803], "\ub85c\ub529\ud55c\ub2e4": 807, "\ub85c\ub529\ud568": 780, "\ub85c\ubd80\ud130": [782, 783, 788, 801], "\ub85c\uc11c": 794, "\ub85c\uc758": 791, "\ub85c\uc9c1\uc73c\ub85c": 812, "\ub85c\uceec": [776, 777, 780, 781, 782, 784, 785], "\ub8e8\ud504": 787, "\ub8f9\uacfc": [781, 802, 804, 816, 817], "\ub8f9\uc740": [802, 805, 807, 814, 815, 816, 817], "\ub8f9\uc744": [784, 804, 814, 817], "\ub8f9\uc774\ub791": 807, "\ub97c": [776, 777, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 794, 795, 797, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 811, 812, 813, 814, 815, 816, 817], "\ub9ac\uadf8\ub798\uc158": [779, 813], "\ub9ac\uadf8\ub808\uc158": [802, 813, 816, 817], "\ub9ac\uadf8\ub808\uc158\uacfc": 802, "\ub9ac\uadf8\ub808\uc158\uc5d0\uc11c": 805, "\ub9ac\uadf8\ub808\uc158\uc744": [802, 805, 814], "\ub9ac\ub4c0\uc154": 798, "\ub9ac\ub4dc\uc544\uc6c3\uc740": 815, "\ub9ac\uc14b": 810, "\ub9ac\uc18c\uc2a4\ub4e4\uc758": 781, "\ub9ac\uc18c\uc2a4\ub97c": 804, "\ub9ac\uc2a4\ud2b8": [805, 807], "\ub9ac\uc2a4\ud2b8\ub4e4\uc5d0": 812, "\ub9ac\uc2a4\ud2b8\ub85c": 779, "\ub9ac\uc2a4\ud2b8\ub85c\ubd80\ud130": 815, "\ub9ac\uc2a4\ud2b8\ub97c": [801, 802, 807, 815], "\ub9ac\uc2a4\ud2b8\uc5d0": 815, "\ub9ac\uc2a4\ud2b8\uc5d0\uc11c": 802, "\ub9ac\uc2a4\ud2b8\uc640": [779, 780, 802], "\ub9ac\uc2a4\ud2b8\uc758": 811, "\ub9ac\uc2a4\ud2b8\uc774\ub2e4": 812, "\ub9ac\ud134\ub418\uc9c0": 782, "\ub9ac\ud134\ub41c": [801, 817], "\ub9ac\ud134\ub41c\ub2e4": [784, 802], "\ub9ac\ud134\ud558\uae30": 814, "\ub9ac\ud134\ud558\ub3c4\ub85d": 779, "\ub9ac\ud134\ud55c\ub2e4": [782, 784, 802, 814, 817], "\ub9ac\ud134\ud55c\ub2e4\ub294": 782, "\ub9ac\ud134\ud574\uc57c": 805, "\ub9ac\ud134\ud574\uc57c\ud55c\ub2e4": 805, "\ub9b4\ub9ac\uc988\uc5d0\uc11c": 783, "\ub9c1\ud06c": [782, 800, 813, 815, 817], "\ub9c1\ud06c\ub97c": 779, "\ub9c8\ub2e4": [782, 805], "\ub9c8\uc2a4\ud06c": 779, "\ub9c8\uc2a4\ud06c\ub294": 779, "\ub9c8\uc2a4\ud06c\ub4e4\uc744": 779, "\ub9c8\uc2a4\ud06c\ub85c": 814, "\ub9c8\uc2a4\ud06c\ub85c\uc11c": 817, "\ub9c8\uc2a4\ud06c\ub97c": 779, "\ub9c8\uc2a4\ud130": 785, "\ub9c8\uc9c0\ub9c9": [794, 795, 797, 801, 802, 807, 811], "\ub9c8\uc9c0\ub9c9\uc5d0\ub294": 810, "\ub9c8\uc9c0\ub9c9\uc73c\ub85c": [795, 800, 812, 815], "\ub9c8\uce5c": 779, "\ub9cc": 803, "\ub9cc\ub4dc\ub294": [775, 779, 782, 784, 788, 791, 792, 794, 801, 802, 806, 807, 809, 816], "\ub9cc\ub4dc\ub294\ub370": [788, 809], "\ub9cc\ub4e0": [784, 799, 805, 813, 814], "\ub9cc\ub4e0\ub2e4": [784, 788, 802, 807, 814, 815], "\ub9cc\ub4e4": [782, 783, 784, 788, 790, 801, 802, 810, 811, 815], "\ub9cc\ub4e4\uac8c": 801, "\ub9cc\ub4e4\uace0": [782, 791, 792, 806, 816], "\ub9cc\ub4e4\uace0\uc790": [800, 814], "\ub9cc\ub4e4\uae30": [781, 783, 784, 791, 793, 795, 804, 806, 813, 817], "\ub9cc\ub4e4\uba74": 788, "\ub9cc\ub4e4\uc5b4": [782, 802], "\ub9cc\ub4e4\uc5b4\ub0b4\uae30": 815, "\ub9cc\ub4e4\uc5b4\ub0b4\ub294": 801, "\ub9cc\ub4e4\uc5b4\ub0b8\ub2e4": [805, 815], "\ub9cc\ub4e4\uc5b4\ub0bc": 811, "\ub9cc\ub4e4\uc5b4\uc11c": [797, 815], "\ub9cc\ub4e4\uc5b4\uc57c": [782, 784, 791], "\ub9cc\ub4e4\uc5b4\uc57c\ud560": 801, "\ub9cc\ub4e4\uc5b4\uc84c\ub2e4\uba74": 801, "\ub9cc\ub4e4\uc5b4\uc9c0\uba74": [782, 784], "\ub9cc\ub4e4\uc5b4\uc9c4\ub2e4": [782, 787, 789], "\ub9cc\ub4e4\uc5b4\uc9c8": [784, 802], "\ub9cc\ub4e4\uc5c8\ub2e4": 779, "\ub9cc\ub4e4\uc5c8\ub2e4\uba74": 814, "\ub9cc\ub4e4\uc790": 777, "\ub9cc\uc57d": [777, 779, 782, 783, 784, 788, 792, 795, 797, 800, 801, 802, 803, 805, 807, 808, 813, 817], "\ub9cc\uc744": [783, 817], "\ub9cc\uc871\ud558\uc9c0": 792, "\ub9cc\uc871\ud574\uc57c": 806, "\ub9ce\uc740": [779, 782, 784, 797, 801, 803, 804, 815], "\ub9ce\uc774": [775, 776, 797, 809, 815, 816], "\ub9d0\ud558\uc790\uba74": 782, "\ub9de\uac8c": 804, "\ub9de\ub3c4\ub85d": [784, 807], "\ub9de\ucd94\uac83\uc744": 784, "\ub9de\ucd94\ub294": 784, "\ub9de\ucd98\ub2e4": 784, "\ub9de\ucd9c": 784, "\ub9e4": [782, 807], "\ub9e4\ub274\uc5bc\uc758": 788, "\ub9e4\ubc88": 807, "\ub9e4\uc6b0": [797, 807], "\ub9e4\ud551": 802, "\ub9e4\ud551\uc740": 801, "\ub9e4\ud551\uc744": [784, 802], "\ub9e4\ud551\uc774\ub2e4": 784, "\ub9e4\ud551\ud558\ub294": 812, "\ub9f4\ubc84": 795, "\ub9f4\ubc84\ub97c": 795, "\uba04\uc57d": 784, "\uba38\uc2e0": 785, "\uba38\uc2e0\ub4e4\uc5d0": [782, 784], "\uba38\uc2e0\ub4e4\uc758": [782, 785], "\uba38\uc2e0\ub7ec\ub2dd": 779, "\uba38\uc2e0\ub7ec\ub2dd\uc5d0\ub294": 779, "\uba38\uc2e0\uc5d0": [783, 784, 785], "\uba38\uc2e0\uc5d0\uc11c": [782, 784, 785], "\uba38\uc2e0\uc740": 785, "\uba38\uc2e0\uc744": 785, "\uba38\uc2e0\uc758": [782, 785], "\uba38\uc2e0\uc774": [782, 785], "\uba3c\uc800": [782, 801], "\uba40\ud2f0": [779, 803, 807, 814, 816, 817], "\uba4b\uc9c4": 815, "\uba54\ub274\uc5bc\uc5d0": 788, "\uba54\ubaa8\ub9ac": [797, 803, 804, 808], "\uba54\ubaa8\ub9ac\uac00": [800, 808], "\uba54\ubaa8\ub9ac\ub098": 807, "\uba54\ubaa8\ub9ac\ub97c": [797, 803, 808], "\uba54\ubaa8\ub9ac\uc5d0": [803, 813], "\uba54\ubaa8\ub9ac\uc640": 804, "\uba54\uc18c\ub4dc": 801, "\uba54\uc18c\ub4dc\ub294": 801, "\uba54\uc18c\ub4dc\ub85c": [804, 814], "\uba54\uc18c\ub4dc\ub97c": [791, 801, 814], "\uba54\uc18c\ub4dc\uc5d0": 814, "\uba54\uc18c\uc2a4\ub4e4": 801, "\uba54\uc2dc\uc9c0": [794, 804, 806, 807, 809, 812, 813, 815, 817], "\uba54\uc2dc\uc9c0\ub4e4": 795, "\uba54\uc2dc\uc9c0\ub4e4\uc5b4": 804, "\uba54\uc2dc\uc9c0\ub4e4\uc744": [794, 795], "\uba54\uc2dc\uc9c0\ub4e4\uc774": 810, "\uba54\uc2dc\uc9c0\ub97c": [794, 797, 801, 807, 817], "\uba54\uc2dc\uc9c0\uc758": 797, "\uba54\uc9c0\uc2dc": [793, 798, 813, 817], "\uba54\ucf13\ud50c\ub798\uc774\uc2a4\ub97c": 787, "\uba54\ud0c0": 784, "\uba54\ud0c0\uadf8\ub798\ud504": 792, "\uba54\ud0c0\uadf8\ub798\ud504\uc758": 792, "\uba54\ud0c0\ub370\uc774\ud130\ub97c": 782, "\uba54\ud551\uc744": 784, "\uba64\uba38\ub97c": 801, "\uba85\ub839": 784, "\uba85\ub839\uc73c\ub85c": 778, "\uba85\ub839\uc740": 784, "\uba85\ub839\uc744": 784, "\uba85\ub839\uc758": 784, "\uba85\ub839\uc774": 784, "\uba85\ub839\ud589\uc774\ub098": 782, "\uba85\uc2dc\ub41c": [785, 811], "\uba85\uc2dc\ub41c\ub2e4\uba74": 784, "\uba85\uc2dc\uc801\uc73c\ub85c": 782, "\uba85\uc2dc\uc801\uc778": 791, "\uba85\uc2dc\ud558\uace0": 792, "\uba85\uc2dc\ud558\uae30\ub9cc": 814, "\uba85\uc2dc\ud558\ub294": 784, "\uba85\uc2dc\ud558\uc9c0": 784, "\uba85\uc2dc\ud55c\ub2e4": 784, "\uba85\uc2dc\ud560": [792, 802], "\uba85\uc2dc\ud574\uc57c": [783, 811], "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4": 792, "\uba85\uc2dc\ud574\uc57c\ud55c\ub2e4\ub294": 807, "\uba85\ud655\ud558\uac8c": 792, "\uba87": [781, 782, 784, 800, 802, 806, 807, 816, 817], "\uba87\uac00\uc9c0": [786, 816], "\uba87\uac1c\uc758": 806, "\ubaa8\ub378": [779, 781, 782, 800, 804, 811, 814], "\ubaa8\ub378\uacfc": 816, "\ubaa8\ub378\uacfc\ub294": 816, "\ubaa8\ub378\ub85c": [782, 814], "\ubaa8\ub378\ub9c1": [792, 798], "\ubaa8\ub378\ub9c1\uc5d0": 787, "\ubaa8\ub378\ub9c1\uc5d0\uc11c": [792, 796], "\ubaa8\ub378\ub9c1\ud558\ub294\ub370": 787, "\ubaa8\ub378\uc5d0": [779, 805, 814, 815, 817], "\ubaa8\ub378\uc5d0\uc11c\ub294": 817, "\ubaa8\ub378\uc740": [802, 805, 814, 816, 817], "\ubaa8\ub378\uc744": [782, 800, 804, 808, 809, 814, 815, 816, 817], "\ubaa8\ub378\uc758": [782, 800, 808, 815], "\ubaa8\ub378\uc774": [782, 803, 815], "\ubaa8\ub450": [784, 787, 792, 795, 801, 803, 804, 811, 815, 816], "\ubaa8\ub450\ub97c": 805, "\ubaa8\ub450\uc5d0": 801, "\ubaa8\ub4c8": [781, 793, 800, 807, 813, 817], "\ubaa8\ub4c8\uacfc": [811, 814], "\ubaa8\ub4c8\ub3c4": 782, "\ubaa8\ub4c8\ub4e4\uc740": [806, 807, 810], "\ubaa8\ub4c8\ub4e4\uc744": 817, "\ubaa8\ub4c8\ub9cc\uc744": 807, "\ubaa8\ub4c8\uc5d0": [811, 812, 815], "\ubaa8\ub4c8\uc5d0\uc11c": [802, 809, 811], "\ubaa8\ub4c8\uc740": [809, 810, 811, 814], "\ubaa8\ub4c8\uc744": [782, 800, 806, 807, 808, 809, 812, 813, 814, 817], "\ubaa8\ub4c8\uc758": [782, 804, 806, 809, 810, 814, 817], "\ubaa8\ub4c8\uc774": [782, 806, 807, 812, 817], "\ubaa8\ub4c8\uc774\uace0": 812, "\ubaa8\ub4c8\uc774\ub2e4": 810, "\ubaa8\ub4c8\uc778": 817, "\ubaa8\ub4c8\ucc98\ub7fc": 812, "\ubaa8\ub4dc\ub294": 782, "\ubaa8\ub4dc\ub85c": 782, "\ubaa8\ub4dc\uc5d0\uc11c\ub294": 782, "\ubaa8\ub4dc\uc640": 782, "\ubaa8\ub4e0": [781, 782, 783, 784, 785, 787, 788, 790, 791, 792, 795, 798, 800, 801, 803, 804, 805, 806, 807, 811, 814, 815, 817], "\ubaa8\uc544\uc11c": 792, "\ubaa8\uc74c\uc774\ub2e4": 778, "\ubaa9\ub85d": 815, "\ubaa9\ub85d\uc5d0": 815, "\ubaa9\ub85d\uc740": [795, 802, 807, 817], "\ubaa9\ub85d\uc744": [802, 807], "\ubaa9\ub85d\uc774": 801, "\ubaa9\uc801": 812, "\ubaa9\uc801\uc73c\ub85c": [792, 804], "\ubaa9\uc801\uc73c\ub85c\ub294": 804, "\ubaa9\uc801\uc740": 776, "\ubaa9\uc801\uc9c0": [784, 795, 801, 805, 807, 810, 811, 812], "\ubaa9\uc801\uc9c0\uac00": 801, "\ubaa9\uc801\uc9c0\uc640": 792, "\ubaa9\uc801\uc9c0\uc778": 801, "\ubb38\ubc95\uc744": 792, "\ubb38\uc790": 792, "\ubb38\uc790\ub4e4\uacfc": 784, "\ubb38\uc790\ub85c": 784, "\ubb38\uc790\ub9cc\ub4e4": 792, "\ubb38\uc790\uc5f4": 792, "\ubb38\uc790\uc5f4\uc774\ub2e4": [795, 798], "\ubb38\uc7a5\uc73c\ub85c": 814, "\ubb38\uc81c\ub294": 815, "\ubb38\uc81c\ub4e4\uacfc": 815, "\ubb38\uc81c\ub97c": [808, 811], "\ubb38\uc81c\uc640": 815, "\ubb38\uc81c\uc778": 814, "\ubbf8\ub2c8": [779, 781, 782, 799, 800, 804, 811, 815], "\ubbf8\ub2c8\ubc30\uce58": [782, 783, 805], "\ubbf8\ub2c8\ubc30\uce58\ub97c": 804, "\ubbf8\ub2c8\ubc30\uce58\ub9cc": 804, "\ubbf8\ub2c8\ubc30\uce58\uc5d0": [805, 807], "\ubbf8\ub2c8\ubc30\uce58\uc5d0\uc11c": 802, "\ubbf8\ub2c8\ubc30\uce58\uc640": 804, "\ubbf8\ub2c8\ubc30\uce58\uc758": [802, 804], "\ubbf8\ub798\uc758": 814, "\ubbf8\ub9ac": 817, "\ubbf8\ub9cc\uc758": 803, "\ubc0f": [779, 780, 782, 783, 786, 788, 789, 791, 792, 793, 794, 800, 801, 804, 808, 811, 813, 815, 817], "\ubc11\uc904": 784, "\ubc14\uafb8\uace0": 783, "\ubc14\uafb8\uae30\ub9cc": 801, "\ubc14\uafb8\ub294": 806, "\ubc14\uafb8\uba74": 808, "\ubc14\ub010": 779, "\ubc14\ub014": 783, "\ubc16\uc5d0\uc11c": [776, 795], "\ubc18\uacfc": 797, "\ubc18\ub300": 802, "\ubc18\ub300\ub85c": 787, "\ubc18\ub300\uc758": 784, "\ubc18\ub4dc\uc2dc": [795, 806], "\ubc18\uba74": 804, "\ubc18\uba74\uc5d0": 797, "\ubc18\ubcf5": 800, "\ubc18\ubcf5\ub41c\ub2e4": 800, "\ubc18\ubcf5\uc801\uc73c\ub85c": 816, "\ubc18\ubcf5\ud574\uc11c": 817, "\ubc18\uc774": 797, "\ubc18\ud658\ud558\ub294": 807, "\ubc1b\uace0": [782, 812, 817], "\ubc1b\ub294": [805, 811], "\ubc1b\ub294\ub2e4": [784, 791, 798, 807, 811, 812], "\ubc1b\ub294\ub2e4\ub294": [802, 805, 807], "\ubc1b\ub294\ub370": 795, "\ubc1b\uc544\ub4e4\uc778\ub2e4": 790, "\ubc1b\uc544\uc11c": 805, "\ubc1b\uc544\uc57c\ud558\uace0": 805, "\ubc1b\uc744": 807, "\ubc1c\ub824\uc640\uc11c": 815, "\ubc1c\uc0dd\uc2dc\ud0a4\ub294\ub370": 801, "\ubc1c\uc0dd\ud560": [782, 804], "\ubc25\ubc99\uc73c\ub85c": 796, "\ubc29\ubc95": [782, 791, 794, 811], "\ubc29\ubc95\uacfc": [801, 802, 807, 813], "\ubc29\ubc95\ub3c4": 800, "\ubc29\ubc95\ub4e4\uc5d0": 788, "\ubc29\ubc95\ub4e4\uc744": [791, 801], "\ubc29\ubc95\uc5d0": [779, 797, 813], "\ubc29\ubc95\uc73c\ub85c": [782, 784, 799, 803], "\ubc29\ubc95\uc73c\ub85c\ub294": 790, "\ubc29\ubc95\uc740": [779, 784, 788, 792, 797, 800, 804, 808, 814, 815, 816, 817], "\ubc29\ubc95\uc744": [775, 776, 778, 779, 784, 794, 795, 801, 804, 805, 808, 809, 814, 817], "\ubc29\ubc95\uc774\ub2e4": [779, 799, 803], "\ubc29\uc2dd\uc73c\ub85c": [794, 801], "\ubc29\uc2dd\uc744": 781, "\ubc29\uc2dd\uc758": 809, "\ubc29\uc9c0\ud558\ub294": 782, "\ubc29\ud5a5\uc131": [787, 801], "\ubc29\ud5a5\uc131\uc5d0": 787, "\ubc29\ud5a5\uc131\uc744": 787, "\ubc29\ud5a5\uc131\uc774": 787, "\ubc29\ud5a5\uc744": 791, "\ubc29\ud5a5\uc774": 788, "\ubc30\uc5f4": [792, 802, 805, 807], "\ubc30\uc5f4\uacfc": 805, "\ubc30\uc5f4\uc758": 805, "\ubc30\uc81c\ud558\uace0\uc790": 802, "\ubc30\uc81c\ud558\ub294": 802, "\ubc30\uce58": [779, 781, 782, 799, 800, 804, 811], "\ubc30\uce58\ub4e4\uc744": 782, "\ubc30\uce58\ub4e4\uc758": 807, "\ubc30\uce58\ub85c\ubd80\ud130": 802, "\ubc30\uce58\ub97c": [781, 782, 795, 800, 815], "\ubc30\uce58\uc548\uc5d0": 802, "\ubc30\uce58\uc5d0": [795, 815], "\ubc30\uce58\uc5d0\uc11c": 800, "\ubc31\uc564\ub4dc\ub9cc": 781, "\ubc31\uc5d4\ub4dc": [788, 809], "\ubc31\uc5d4\ub4dc\ub85c": [809, 813], "\ubc31\uc5d4\ub4dc\ub97c": 809, "\ubc84\ub9b0\ub2e4\ub294": 815, "\ubc84\uc804": 793, "\ubc84\uc804\ub3c4": [806, 815], "\ubc84\uc804\uc758": 784, "\ubc84\uc804\uc774\ub2e4": 814, "\ubc84\ud2f1\uc2a4\ub4e4": 787, "\ubc88": 817, "\ubc88\uc5ed\ud55c": 793, "\ubc88\ud638": 791, "\ubc88\ud638\uac00": [785, 791], "\ubc88\ud638\ub294": 791, "\ubc88\ud638\ub3c4": 785, "\ubc88\ud638\ub97c": 791, "\ubc94\uc704\ub3c4": 784, "\ubc94\uc704\ub97c": 784, "\ubc94\uc704\uc5d0": 779, "\ubc94\uc704\uc758": 817, "\ubc94\uc8fc\ud615": 814, "\ubc95\uc744": 800, "\ubc95\uce59\uc758": 784, "\ubca0\uce58\ub4e4\uc5d0": 802, "\ubca1\ud130": [789, 814], "\ubca1\ud130\ub294": 784, "\ubca1\ud130\ub4e4\uc758": 784, "\ubca1\ud130\ub97c": 784, "\ubca1\ud130\uc778": 784, "\ubca4\uce58\ub9c8\ud0b9": 778, "\ubcc0\uacbd\ub418\uc5c8\ub294\uc9c0": 777, "\ubcc0\uacbd\uc740": 781, "\ubcc0\uacbd\ud558\uae30": 807, "\ubcc0\uacbd\ud574\uc11c": 814, "\ubcc0\uacbd\ud574\uc57c\ud560": 807, "\ubcc0\uc218\ub4e4": 784, "\ubcc0\ud615": 796, "\ubcc0\ud658": [782, 815], "\ubcc0\ud658\ub41c": 815, "\ubcc0\ud658\ub41c\ub2e4": 779, "\ubcc0\ud658\uc740": 792, "\ubcc0\ud658\uc744": 791, "\ubcc0\ud658\ud558\uace0": 784, "\ubcc0\ud658\ud558\uae30": 788, "\ubcc0\ud658\ud558\ub294": [783, 801], "\ubcc0\ud658\ud558\ub294\ub370": 788, "\ubcc0\ud658\ud558\ub3c4\ub85d": 784, "\ubcc0\ud658\ud558\uba74": [779, 788], "\ubcc0\ud658\ud558\uba74\uc11c": 801, "\ubcc0\ud658\ud55c\ub2e4": [783, 788, 792], "\ubcc0\ud658\ud560": [791, 792], "\ubcc0\ud658\ud574\uc11c": 788, "\ubcc4\ub3c4\ub85c": 784, "\ubcc4\ub3c4\ub85d": 815, "\ubcc4\ub3c4\uc758": [792, 816, 817], "\ubcc4\ub85c\ub3c4": 812, "\ubcd1\ub82c\ub85c": 784, "\ubcd1\ub82c\ud654": 781, "\ubcd1\ub82c\ud654\uc2dc\ud0a4\uace0": 781, "\ubcd1\ud569": [795, 814], "\ubcd1\ud569\uc774\uc804\uc5d0": 796, "\ubcd1\ud569\ud558\ub294": 814, "\ubcf4\ub0b4\uc8fc\uc138\uc694": 793, "\ubcf4\ub2e4": [782, 800, 801, 802, 803, 807], "\ubcf4\ub77c": 784, "\ubcf4\uba74": 792, "\ubcf4\uc5ec\uc8fc\uace0": 804, "\ubcf4\uc5ec\uc8fc\uae30": 806, "\ubcf4\uc5ec\uc8fc\ub294": 783, "\ubcf4\uc5ec\uc900\ub2e4": [775, 776, 778, 780, 781, 783, 784, 785, 791, 801, 802, 808], "\ubcf4\uc790": [782, 789, 791, 801, 804, 806], "\ubcf4\uc874\ud558\uace0": 792, "\ubcf4\ud1b5": [795, 817], "\ubcf4\ud1b5\uc740": [782, 795, 796, 802, 804, 810, 815], "\ubcf4\ud1b5\uc758": [812, 815], "\ubcf4\ud1b5\uc774\ub2e4": 802, "\ubcf4\ud638\ub97c": 782, "\ubcf5\uc0ac": 785, "\ubcf5\uc0ac\ub41c\ub2e4": 785, "\ubcf5\uc0ac\ub97c": 797, "\ubcf5\uc0ac\ud558\uace0": 781, "\ubcf5\uc0ac\ud558\uba74\uc11c": 792, "\ubcf5\uc0ac\ud55c\ub2e4": [785, 790], "\ubcf5\uc0ac\ud560": 790, "\ubcf5\uc7a1\ud558\ub2c8": 814, "\ubcf5\uc7a1\ud55c": [798, 801, 810, 815], "\ubcf8\uac83\uacfc": 817, "\ubcfc": 779, "\ubd80\ub3d9\uc18c\uc218\uc810": 795, "\ubd80\ub978\ub2e4": [791, 801, 807, 815], "\ubd80\ubd84": [779, 802], "\ubd80\ubd84\ub4e4\uc774": 782, "\ubd80\ubd84\uc5d0": 802, "\ubd80\ubd84\uc73c\ub85c": 802, "\ubd80\ubd84\uc740": [802, 811], "\ubd80\ubd84\uc744": [779, 782], "\ubd80\ubd84\uc758": [802, 811], "\ubd80\uc0b0": 782, "\ubd80\uc18d": [794, 802, 805, 814], "\ubd80\uc18d\ub418\ub294": 784, "\ubd80\uc218\uc801\uc73c\ub85c": 814, "\ubd80\uc5ec": 784, "\ubd80\uc5ec\ub41c\ub2e4": [784, 791], "\ubd80\uc5ec\ud558\uace0": 791, "\ubd80\uc5ec\ud558\uae30": 784, "\ubd80\uc5ec\ud558\ub294\ub370": 791, "\ubd80\uc5ec\ud55c\ub2e4": [784, 792], "\ubd80\ud130": [779, 782, 812, 814], "\ubd84\ub4e4\uc744": 800, "\ubd84\ub958": [782, 800, 805, 813, 816], "\ubd84\ub958\uac00": 815, "\ubd84\ub958\uae30": 816, "\ubd84\ub958\ub098": 815, "\ubd84\ub958\ub294": [779, 814, 815], "\ubd84\ub958\ub418\uc5b4": 817, "\ubd84\ub958\ub97c": [801, 813, 814], "\ubd84\ub958\uc5d0": 802, "\ubd84\ub958\uc5d0\uc11c": [802, 805], "\ubd84\ub958\uc640\ub294": 779, "\ubd84\ub958\uc744": [802, 805], "\ubd84\ub958\uc758": [779, 784, 802, 814], "\ubd84\ub958\uc774\ub2e4": 817, "\ubd84\ub958\ud558\uae30": 817, "\ubd84\ub958\ud558\ub294": [814, 816], "\ubd84\ub958\ud55c\ub2e4": 815, "\ubd84\ub958\ud560": 815, "\ubd84\ub9ac\ub418\uc5b4": 815, "\ubd84\uc0b0": 793, "\ubd84\uc0b0\ud558\uace0": 784, "\ubd84\uc0b0\ud558\ub294": 781, "\ubd84\uc0b0\ud559\uc2b5\uc774": 782, "\ubd84\uc11d\uc744": 779, "\ubd84\ud3ec": 805, "\ubd84\ud3ec\ub97c": 784, "\ubd84\ud3ec\uc5d0": 805, "\ubd84\ud3ec\uc5d0\uc11c": 816, "\ubd84\ud45c": 816, "\ubd84\ud560": [779, 782, 817], "\ubd84\ud560\uc744": 779, "\ubd84\ud560\ud558\uae30": 779, "\ubd84\ud560\ud558\uc5ec": 797, "\ubd88\uac00\ub2a5\ud558\ub2e4": [788, 789], "\ubd88\uac00\ub2a5\ud558\ub2e4\uba74": 795, "\ubd88\uade0\ud615\ud558\uac8c": 784, "\ubd88\ub9b0\ub2e4": 814, "\ubd88\ud544\uc694\ud55c": 797, "\ubd99\uc5ec\uc918\uc57c": 782, "\ube0c\ub79c\uce58\ub97c": 784, "\ube0c\ub85c\ub4dc\uce90\uc2a4\ud305\uc744": 795, "\ube14\ub85d": 811, "\ube14\ub85d\ub4e4\ub85c": 809, "\ube14\ub85d\uc774": 811, "\ube14\ub85d\uc77c": 812, "\ube44\uad50\ud558\ub294": 805, "\ube44\uad50\ud558\uba74": 811, "\ube44\uad50\ud558\uba74\uc11c": 816, "\ube44\uad50\ud574": 806, "\ube44\uad50\ud574\uc11c": 817, "\ube44\ub300\uce6d\uc801\uc778": 787, "\ube44\ub840\ud558\ub294": 805, "\ube44\ubc29\ud5a5\uc131": [787, 791], "\ube44\uc120\ud615\uc131": 817, "\ube44\uc2b7\ud558\uac8c": [782, 784, 807, 814], "\ube44\uc2b7\ud558\ub2e4": [779, 782, 802, 805, 806, 807, 816, 817], "\ube44\uc2b7\ud558\ub2e4\ub294": 806, "\ube44\uc2b7\ud558\uc9c0\ub9cc": 778, "\ube44\uc2b7\ud55c": [781, 782, 784, 808], "\ube44\ud2b8": 791, "\ube44\ud2b8\ub97c": 791, "\ube44\ud574\uc11c": 803, "\ube44\ud65c\uc131\ud654\ub418\uc5b4": 795, "\ube44\ud65c\uc131\ud654\ub418\uc5c8\uc744": 808, "\ube44\ud6a8\uc728\uc801\uc774\ub2e4": 815, "\ube44\ud6a8\uc728\uc801\uc778": 797, "\ube4c\ub4dc\uc778": [805, 807, 815, 817], "\ube4c\ub529": 809, "\ube4c\ud2b8\uc778": [779, 780, 794, 797, 806, 808, 817], "\ube4c\ud2b8\uc778\uc73c\ub85c": 802, "\ube60\ub974\uac8c": [779, 815], "\ube60\ub974\uace0": [791, 797], "\ube60\ub974\ub2e4": 808, "\ube60\ub974\uc9c0\ub294": 788, "\ube60\ub978": 791, "\ube68\uac04": 801, "\ube68\uac04\uc0c9": 801, "\ubfd0\ub9cc": 817, "\ubfd0\ub9cc\uc544\ub2c8\ub77c": 782, "\ubfd0\uc774\ub2e4": [805, 806, 807, 815], "\ubfd0\uc784\uc744": 792, "\uc0ac\ub77c\uc838\ub3c4": 782, "\uc0ac\ub78c\ub4e4": 787, "\uc0ac\ub78c\ub4e4\uacfc": 787, "\uc0ac\ub78c\ub4e4\uc758": 815, "\uc0ac\uc2e4\ub4e4": 789, "\uc0ac\uc2e4\uc744": 802, "\uc0ac\uc6a9": [782, 808, 814, 817], "\uc0ac\uc6a9\uacfc": 797, "\uc0ac\uc6a9\ub418\uace0": 810, "\uc0ac\uc6a9\ub418\uae30": [779, 788, 801], "\uc0ac\uc6a9\ub418\ub294": [775, 779, 782, 787, 792, 795, 796, 797, 799, 809, 810, 811, 815, 817], "\uc0ac\uc6a9\ub418\ub294\ub370": 808, "\uc0ac\uc6a9\ub418\uc5b4\uc57c": 785, "\uc0ac\uc6a9\ub41c": [782, 784, 795], "\uc0ac\uc6a9\ub41c\ub2e4": [782, 784, 785, 788, 791, 801, 804, 812, 815], "\uc0ac\uc6a9\ub41c\ub2e4\uba74": 787, "\uc0ac\uc6a9\ub41c\uba70": 808, "\uc0ac\uc6a9\ub420": [781, 782, 784, 785, 801, 802, 805, 814, 817], "\uc0ac\uc6a9\ub7c9\uc744": [797, 808], "\uc0ac\uc6a9\ubc95\uc740": [799, 801], "\uc0ac\uc6a9\ubc95\uc744": [778, 795], "\uc0ac\uc6a9\uc790": [789, 795], "\uc0ac\uc6a9\uc790\uac00": [782, 784, 792], "\uc0ac\uc6a9\uc790\ub294": [782, 783, 784, 785, 795], "\uc0ac\uc6a9\uc790\ub4e4\uacfc": 787, "\uc0ac\uc6a9\uc790\ub4e4\uc740": 784, "\uc0ac\uc6a9\uc790\uc758": 785, "\uc0ac\uc6a9\ud558\uaca0\ub2e4": 813, "\uc0ac\uc6a9\ud558\uace0": [784, 796, 802, 807], "\uc0ac\uc6a9\ud558\uae30": [784, 786, 791, 800, 805, 807], "\uc0ac\uc6a9\ud558\uae30\ub97c": 805, "\uc0ac\uc6a9\ud558\ub294": [779, 784, 791, 795, 797, 801, 803, 805, 808, 814, 815, 816, 817], "\uc0ac\uc6a9\ud558\ub294\ub370": [779, 800], "\uc0ac\uc6a9\ud558\ub294\uc9c0\ub294": 787, "\uc0ac\uc6a9\ud558\ub824\uba74": 802, "\uc0ac\uc6a9\ud558\uba70": 805, "\uc0ac\uc6a9\ud558\uba74": [788, 791, 797, 800], "\uc0ac\uc6a9\ud558\uba74\uc11c": 808, "\uc0ac\uc6a9\ud558\uc790": 815, "\uc0ac\uc6a9\ud558\uc9c0": [784, 808, 815], "\uc0ac\uc6a9\ud558\uc9c0\ub9cc": 804, "\uc0ac\uc6a9\ud55c": [779, 782, 784, 786, 791, 800, 803, 804, 809, 817], "\uc0ac\uc6a9\ud55c\ub2e4": [779, 783, 784, 785, 791, 802, 803, 805, 806, 813, 814, 815, 817], "\uc0ac\uc6a9\ud55c\ub2e4\ub294": [782, 802, 805], "\uc0ac\uc6a9\ud55c\ub2e4\uba74": 787, "\uc0ac\uc6a9\ud560": [779, 782, 784, 788, 791, 792, 802, 803, 805, 807, 813, 814], "\uc0ac\uc6a9\ud574": 815, "\uc0ac\uc6a9\ud574\ub3c4": 792, "\uc0ac\uc6a9\ud574\uc11c": [775, 779, 782, 783, 784, 785, 786, 787, 790, 791, 792, 794, 795, 797, 799, 801, 802, 804, 807, 808, 812, 813, 814, 815, 816, 817], "\uc0ac\uc6a9\ud574\uc57c": [782, 783, 784], "\uc0ac\uc6a9\ud574\uc57c\ud55c\ub2e4": [791, 802], "\uc0ac\uc6a9\ud588\ub2e4\uba74": 777, "\uc0ac\uc6a9\ud588\ub358": 805, "\uc0ac\uc774\uc5d0": [787, 802, 815, 816], "\uc0ac\uc774\uc758": [784, 801, 816], "\uc0ac\uc804": [798, 802, 805, 812], "\uc0ac\uc804\ub4e4\uc744": [802, 805], "\uc0ac\uc804\uc5d0\uc11c": 817, "\uc0ac\uc804\uc744": [792, 802, 805, 807, 812, 814, 817], "\uc0ac\uc804\uc758": 798, "\uc0ad\uc81c\ud558\uac8c\ud558\uae30": 782, "\uc0ad\uc81c\ud558\uae30\ub3c4": 802, "\uc0ad\uc81c\ud558\uae30\ub97c": 801, "\uc0b4\ud3b4\ubcf4\uaca0\ub2e4": 811, "\uc0b4\ud3b4\ubcf4\uae30": 801, "\uc0b4\ud3b4\ubcf4\uc790": [779, 795, 801, 807, 808], "\uc0c1\uad00\ud558\uc9c0": 784, "\uc0c1\ub2f9\ud55c": 803, "\uc0c1\ub2f9\ud788": 780, "\uc0c1\ub300": 785, "\uc0c1\ub300\uc801\uc73c\ub85c": [784, 815], "\uc0c1\uc138\ud55c": [802, 807], "\uc0c1\uc18d\ud55c": 801, "\uc0c1\uc18d\ud55c\ub2e4": 809, "\uc0c1\uc18d\ud574\uc11c": [776, 777], "\uc0c1\uc218": 816, "\uc0c1\uc704": 801, "\uc0c1\ud0dc\ub97c": 800, "\uc0c1\ud488": 787, "\uc0c1\ud638\uad00\uacc4\ub97c": 787, "\uc0c1\ud638\uc791\uc6a9\uc744": 781, "\uc0c1\ud669\uc5d0\uc11c": 815, "\uc0c8\ub85c\uc6b4": [782, 783, 784, 792, 800, 806], "\uc0d8\ub4e4\ub85c": 816, "\uc0d8\ub4e4\uc740": 816, "\uc0d8\ud50c": 805, "\uc0d8\ud50c\ub41c": [802, 805, 811], "\uc0d8\ud50c\ub7ec": [781, 782, 785, 800], "\uc0d8\ud50c\ub7ec\uac00": [803, 805], "\uc0d8\ud50c\ub7ec\ub294": [782, 807], "\uc0d8\ud50c\ub7ec\ub2e4": 805, "\uc0d8\ud50c\ub7ec\ub4e4\uacfc": 800, "\uc0d8\ud50c\ub7ec\ub4e4\uc5d0": 802, "\uc0d8\ud50c\ub7ec\ub4e4\uc740": [805, 807], "\uc0d8\ud50c\ub7ec\ub4e4\uc758": 807, "\uc0d8\ud50c\ub7ec\ub85c": 801, "\uc0d8\ud50c\ub7ec\ub97c": [801, 802, 805, 807], "\uc0d8\ud50c\ub7ec\uc640": 781, "\uc0d8\ud50c\ub9c1": [776, 805, 815], "\uc0d8\ud50c\ub9c1\uacfc": [782, 804], "\uc0d8\ud50c\ub9c1\ub41c": 816, "\uc0d8\ud50c\ub9c1\ub41c\ub2e4": 816, "\uc0d8\ud50c\ub9c1\ub420\uc9c0\ub97c": 782, "\uc0d8\ud50c\ub9c1\uc5d0": 800, "\uc0d8\ud50c\ub9c1\uc5d0\uc11c": [783, 807], "\uc0d8\ud50c\ub9c1\uc73c\ub85c": 804, "\uc0d8\ud50c\ub9c1\uc740": [782, 802, 803, 804], "\uc0d8\ud50c\ub9c1\uc744": [782, 800, 801, 803, 804, 816], "\uc0d8\ud50c\ub9c1\uc774": 804, "\uc0d8\ud50c\ub9c1\ud558\ub294": 805, "\uc0d8\ud50c\ub9c1\ud55c\ub2e4": [781, 783, 805], "\uc0d8\ud50c\ud558\ub294": 801, "\uc0dd\uac01\ud574": [801, 804], "\uc0dd\uac01\ud574\ubcf4\uc790": [800, 801], "\uc0dd\uae38": 808, "\uc0dd\ub7b5\ud55c\ub2e4": [779, 814], "\uc0dd\ub7b5\ud574\uc11c": 779, "\uc0dd\ub7b5\ud588\ub2e4": 779, "\uc0dd\uc120\ud55c": 784, "\uc0dd\uc131": [781, 788, 795, 809, 811], "\uc0dd\uc131\ub418\ub294": 811, "\uc0dd\uc131\ub41c": [782, 788, 802, 807], "\uc0dd\uc131\ub41c\ub2e4": [784, 812], "\uc0dd\uc131\uc2dc": 790, "\uc0dd\uc131\uc740": 782, "\uc0dd\uc131\uc744": [782, 805], "\uc0dd\uc131\uc774": 782, "\uc0dd\uc131\ud558\uace0": [782, 783, 789, 795, 801], "\uc0dd\uc131\ud558\uae30": [779, 781, 782, 786, 791], "\uc0dd\uc131\ud558\ub294": [782, 788, 791, 801, 807], "\uc0dd\uc131\ud558\ub294\uac83\uc744": 801, "\uc0dd\uc131\ud558\ub294\ub370": [782, 784, 801], "\uc0dd\uc131\ud558\uba70": 800, "\uc0dd\uc131\ud558\uba74": 816, "\uc0dd\uc131\ud558\uc9c0\ub9cc": 801, "\uc0dd\uc131\ud55c": [784, 805, 807, 813], "\uc0dd\uc131\ud55c\ub2e4": [782, 785, 789, 795, 801, 807], "\uc0dd\uc131\ud560": [782, 783, 792, 801, 814, 815], "\uc0e4\ub4dc": 782, "\uc11c\ub85c": [779, 784, 786, 787, 792, 802, 817], "\uc11c\ubc84": [781, 782], "\uc11c\ubc84\ub4e4\uac04\uc758": 782, "\uc11c\ubc84\ub4e4\uacfc": [781, 782], "\uc11c\ubc84\ub4e4\uc5d0\uc11c": 782, "\uc11c\ubc84\ub4e4\uc740": 781, "\uc11c\ubc84\ub4e4\uc744": [781, 782], "\uc11c\ubc84\ub4e4\uc774": 782, "\uc11c\ubc84\uc5d0": 783, "\uc11c\ube0c": [777, 779, 781, 783, 784, 801, 802, 803, 804, 811], "\uc11c\ube0c\uadf8\ub798\ud504": [811, 812], "\uc11c\ube0c\uadf8\ub798\ud504\ub97c": [792, 799], "\uc11c\ube0c\uadf8\ub798\ud504\uc5d0": 799, "\uc11c\ube0c\ubaa8\ub4c8": 810, "\uc11c\ube0c\ubaa8\ub4c8\ub4e4\uc744": 810, "\uc11c\ube0c\ubaa8\ub4c8\uc740": 810, "\uc11c\ube0c\uc14b\uc5d0": 784, "\uc11c\ube0c\uc14b\uc744": 782, "\uc11c\ube0c\ud074\ub798\uc2a4": 776, "\uc11c\ube0c\ud074\ub798\uc2a4\ub85c": 775, "\uc11c\ube0c\ud074\ub798\uc2a4\uc5d0\uc11c": 776, "\uc11c\uce58\ud558\ub294": 776, "\uc11e\uace0": 784, "\uc11e\uae30\uc804\uc758": 784, "\uc11e\ub294\ub2e4": 784, "\uc11e\uc5b4\uc57c\ud55c\ub2e4": 784, "\uc11e\uc5b4\uc900\ub2e4": 784, "\uc11e\uc778": 784, "\uc120\uc5b8\ub418\uc57c": 782, "\uc120\ud0dd": 804, "\uc120\ud0dd\uc744": 804, "\uc120\ud0dd\uc801\uc73c\ub85c": 785, "\uc120\ud0dd\uc801\uc778": 784, "\uc120\ud0dd\ud55c\ub2e4": [783, 800, 805, 808], "\uc120\ud0dd\ud560\uc9c0": 814, "\uc120\ud0dd\ud560\uc9c0\ub97c": 814, "\uc120\ud589": 801, "\uc120\ud615": 797, "\uc124\uba85\ub41c": 811, "\uc124\uba85\uc740": 814, "\uc124\uba85\uc744": [784, 802, 807], "\uc124\uba85\ud558\uace0": 775, "\uc124\uba85\ud558\uae30": 813, "\uc124\uba85\ud558\uae30\uc5d0\ub294": 814, "\uc124\uba85\ud55c": [805, 816], "\uc124\uba85\ud55c\ub2e4": [778, 779, 794, 801, 807, 817], "\uc124\uba85\ud588\ub4ef\uc774": 801, "\uc124\uc815": [781, 782, 785, 810], "\uc124\uc815\ub41c": 811, "\uc124\uc815\ub4e4\uc744": 784, "\uc124\uc815\uc5d0\uc11c\ub294": 795, "\uc124\uc815\uc73c\ub85c": [783, 784], "\uc124\uc815\uc73c\ub85c\ub294": [782, 795], "\uc124\uc815\uc740": 784, "\uc124\uc815\uc744": 784, "\uc124\uc815\ud558\uace0": 792, "\uc124\uc815\ud558\uae30": 803, "\uc124\uc815\ud558\ub294": 784, "\uc124\uc815\ud55c\ub2e4": 812, "\uc124\uc815\ud574\uc57c": 784, "\uc124\uce58\ub294": 784, "\uc124\uce58\ud558\ub294": 784, "\uc124\uce58\ud558\uc790": 784, "\uc124\uce58\ud55c\ub2e4": [778, 784], "\uc131\ub2a5": [800, 811], "\uc131\ub2a5\uc740": 808, "\uc131\ub2a5\uc774": 788, "\uc131\ub9bd\ud558\uae30": 797, "\uc131\uc9c8": 815, "\uc138": 784, "\uc138\uac00\uc9c0": [782, 811], "\uc138\uac1c\uc758": 807, "\uc138\ud305\uc5d0\uc11c": 782, "\uc139\uc158": 782, "\uc140\ud504": 784, "\uc148\ud50c\ub4e4": 816, "\uc14b": 784, "\uc14b\ub3c4": 782, "\uc14b\uc5d0": [782, 784, 807], "\uc14b\uc73c\ub85c": 782, "\uc14b\uc744": [781, 782], "\uc14b\uc758": 817, "\uc14b\uc774": 814, "\uc18c\uac1c\ub294": 788, "\uc18c\uac1c\ub97c": 786, "\uc18c\uac1c\ud55c": [800, 813, 815, 817], "\uc18c\uac1c\ud55c\ub2e4": [775, 776, 784, 786, 788, 794, 804, 809], "\uc18c\uc15c": 787, "\uc18c\uc2a4": [779, 784, 795, 796, 801, 805, 807, 810, 811], "\uc18c\uc2a4\ub4e4\ub85c": 779, "\uc18c\uc2a4\ub4e4\ub85c\ubd80\ud130": 788, "\uc18c\uc2a4\ub85c\ubd80\ud130": 791, "\uc18c\uc2a4\ub97c": [779, 786, 791], "\uc18d\ub3c4": [803, 804], "\uc18d\ub3c4\ub3c4": 791, "\uc18d\ub3c4\ub97c": 784, "\uc18d\ub4dc\ub97c": 797, "\uc18d\uc131": 784, "\uc18d\uc131\ub4e4\uc744": 784, "\uc18d\uc131\ub4e4\uc758": 784, "\uc18d\uc131\uc744": [784, 789, 798, 814], "\uc18d\uc131\uc758": 784, "\uc18d\ud558\ub294": 784, "\uc18d\ud558\ub294\uc9c0\ub97c": 782, "\uc18d\ud55c": [784, 795, 801], "\uc18d\ud55c\ub2e4": 783, "\uc194\ub8e8\uc158\uc740": 784, "\uc194\ub8e8\uc158\uc744": 784, "\uc218": [776, 777, 779, 780, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "\uc218\uac00": [797, 817], "\uc218\ub3c4": [783, 805, 811, 814], "\uc218\ub834\ud55c\ub2e4": 808, "\uc218\ub97c": [784, 801], "\uc218\ubc31\ub9cc": 800, "\uc218\ubcf4\ub2e4": 797, "\uc218\uc2dd\uc5d0\uc11c": 794, "\uc218\uc2ed\uc5b5": 784, "\uc218\uc2ed\uc5b5\uac1c\uc758": 800, "\uc218\uc5d0": 784, "\uc218\uc640": 782, "\uc218\uc758": [782, 783, 785, 801, 815], "\uc218\uc815\ud558\uba74": 781, "\uc218\uc815\ud560": 807, "\uc218\uc900\uc758": [782, 788, 812, 815], "\uc218\uc9d1\ud558\uace0": 782, "\uc218\uc9d1\ud558\uae30\ub97c": 817, "\uc218\uc9d1\ud558\ub294": 801, "\uc218\uc9d1\ud558\ub3c4\ub85d": 807, "\uc218\uc9d1\ud560": 801, "\uc218\ud559": [795, 811], "\uc218\ud559\uc801\uc73c\ub85c": 797, "\uc218\ud589": 785, "\uc218\ud589\ub418\uace0": 782, "\uc218\ud589\ub418\ub294": 817, "\uc218\ud589\ub418\ub294\uc9c0": 800, "\uc218\ud589\ub418\uba74": 782, "\uc218\ud589\ub41c": [785, 786, 801], "\uc218\ud589\ub41c\ub2e4": [776, 782, 784, 790, 808, 811, 815], "\uc218\ud589\ub420": [782, 795], "\uc218\ud589\uc774": 784, "\uc218\ud589\uc774\ub2e4": 782, "\uc218\ud589\ud558\uace0": [782, 817], "\uc218\ud589\ud558\uae30": [801, 808, 816], "\uc218\ud589\ud558\ub294": [781, 782, 785, 800, 804, 811, 817], "\uc218\ud589\ud558\uba74\uc11c": [781, 784], "\uc218\ud589\ud558\uc790": 814, "\uc218\ud589\ud558\uc9c0": 777, "\uc218\ud589\ud558\uc9c0\ub9cc": 815, "\uc218\ud589\ud55c\ub2e4": [784, 794, 804, 807, 808, 810, 811, 817], "\uc218\ud589\ud55c\ub2e4\uace0": 816, "\uc218\ud589\ud55c\ub2e4\ub294": 801, "\uc218\ud589\ud560": [781, 782, 784, 801, 804, 812, 815, 816], "\uc218\ud589\ud560\uc9c0\ub97c": 801, "\uc218\ud589\ud574\uc11c": [777, 815, 817], "\uc21c\uc11c\ub300\ub85c": 815, "\uc21c\uc11c\ub3c4": 776, "\uc21c\uc11c\ub3c4\ub294": 776, "\uc21c\uc11c\ub85c": 782, "\uc21c\uc11c\uc5d0": 791, "\uc21c\uc218": 795, "\uc21c\uc218\ud55c": 810, "\uc22b\uc790": 789, "\uc27d\uac8c": [776, 784], "\uc27d\ub2e4": 816, "\uc27d\uc9c0": 804, "\uc2a4\uce7c\ub77c": [787, 789, 796], "\uc2a4\ud06c\ub9bd\ud2b8": [782, 784, 785], "\uc2a4\ud06c\ub9bd\ud2b8\uac00": [782, 785], "\uc2a4\ud06c\ub9bd\ud2b8\ub294": 785, "\uc2a4\ud06c\ub9bd\ud2b8\ub4e4\uc744": 785, "\uc2a4\ud06c\ub9bd\ud2b8\ub97c": [781, 782, 784], "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0": 782, "\uc2a4\ud06c\ub9bd\ud2b8\uc5d0\uc11c": 785, "\uc2a4\ud06c\ub9bd\ud2b8\uc774\ub2e4": 808, "\uc2a4\ud0a4\ub9c8": 784, "\uc2a4\ud0a4\ub9c8\ub97c": 784, "\uc2a4\ud0a4\ub9c8\uc774\ub2e4": 792, "\uc2a4\ud0ed\uc5d0\uc11c": 795, "\uc2a4\ud1a0\ub9ac\uc9c0": 785, "\uc2ac\ub77c\uc774\uc2a4\ub294": 789, "\uc2dc\uac01\ud654\ud558\uba74": 800, "\uc2dc\uac04": 808, "\uc2dc\uac04\uc744": [776, 780, 804], "\uc2dc\ub098\ub9ac\uc624\ub4e4\ub85c": 800, "\uc2dc\ub4dc": [783, 801], "\uc2dc\ub9ac\uc988\ub85c": 792, "\uc2dc\uc2a4\ud15c\uc5d0\uc11c": 787, "\uc2dc\uc791": 785, "\uc2dc\uc791\uc73c\ub85c": 786, "\uc2dc\uc791\ud558\uace0": 792, "\uc2dc\uc791\ud558\uae30": 785, "\uc2dc\uc791\ud558\ub294": [784, 792, 801], "\uc2dc\uc791\ud55c\ub2e4": [791, 800], "\uc2dc\uc791\ud560": 815, "\uc2dc\uc791\ud574\uc11c": 804, "\uc2dd\ubcc4\ub420": 782, "\uc2e4\uc81c": [784, 811], "\uc2e4\uc81c\ub85c": 811, "\uc2e4\ud589": 783, "\uc2e4\ud589\ub418\ub294": [784, 785, 795], "\uc2e4\ud589\ub418\uba74": 782, "\uc2e4\ud589\ub418\uc57c": 785, "\uc2e4\ud589\ub41c": 784, "\uc2e4\ud589\ub41c\ub2e4": [781, 782, 784, 817], "\uc2e4\ud589\ub420": [782, 784, 785], "\uc2e4\ud589\ud558\uace0": [777, 782, 811], "\uc2e4\ud589\ud558\ub294": [781, 782, 797], "\uc2e4\ud589\ud558\uba74": 782, "\uc2e4\ud589\ud55c\ub2e4": 781, "\uc2e4\ud589\ud560": 782, "\uc2e4\ud589\ud574\uc11c": [781, 784], "\uc2e4\ud589\ud574\uc57c\ud558\uace0": 782, "\uc2e4\ud5d8\uc801\uc73c\ub85c": 783, "\uc2e4\ud5d8\uc801\uc778": 803, "\uc2f1\uae00": 782, "\uc2f6\ub2e4": [784, 792], "\uc2f6\ub2e4\uba74": [777, 784, 806, 807, 817], "\uc2f6\uc73c\uba74": 795, "\uc2f6\uc740": [782, 792, 799, 800, 816], "\uc30d\ub4e4": 787, "\uc30d\ub4e4\ub85c\ub9cc": 816, "\uc30d\uc5d0": 816, "\uc30d\uc73c\ub85c": 791, "\uc30d\uc744": [787, 805], "\uc30d\uc758": 805, "\uc30d\uc774\ub2e4": 815, "\uc30d\uc778": 806, "\uc313\uc544\uc11c": 817, "\uc4f0\uae30\ub97c": 782, "\uc4f0\uc774\ub294": [814, 815], "\uc544\ub2c8\uae30": 811, "\uc544\ub2c8\ub2e4": [782, 808], "\uc544\ub2c8\ub77c": [788, 815, 817], "\uc544\ub2cc": [806, 815], "\uc544\ub2cc\uc9c0\ub97c": 816, "\uc544\ub2d8\uc744": 806, "\uc544\ub798": [776, 781, 782, 783, 784, 785, 788, 789, 791, 792, 795, 801, 802, 804, 805, 806, 814, 816, 817], "\uc544\ub798\uc640": [791, 802, 807, 814, 815], "\uc544\ub798\uc758": [777, 792], "\uc544\ub9c8\ub3c4": 815, "\uc544\ubb34\uac83\ub3c4": 811, "\uc544\uc6c3\ud48b\ub4e4\uc744": 812, "\uc544\uc6c3\ud48b\uc740": 784, "\uc544\uc774\ub514\uc5b4\ub294": 816, "\uc544\uc774\ub514\uc5b4\ub97c": 815, "\uc544\uc774\ud15c\ub4e4\uc744": 805, "\uc544\uc774\ud15c\ub4e4\uc758": 787, "\uc544\uc774\ud15c\uc640": 805, "\uc544\uc774\ud15c\uc740": 815, "\uc544\uc774\ud15c\uc744": 807, "\uc544\uc8fc": [781, 788, 802, 804, 805], "\uc544\uc9c1": 808, "\uc544\ud06c\ub4e4": 787, "\uc544\ud0a4\ud14d\ud0c0": 795, "\uc548\uc5d0\ub294": 784, "\uc548\uc5d0\uc11c": 812, "\uc54a\uaca0\ub2e4": 788, "\uc54a\uace0": [777, 784, 792, 795, 808, 815], "\uc54a\uae30": [801, 803], "\uc54a\ub294": [784, 795, 805, 808], "\uc54a\ub294\ub2e4": [782, 784, 787, 803, 814, 815], "\uc54a\ub294\ub2e4\uba74": [792, 803], "\uc54a\ub294\uc9c0": 811, "\uc54a\ub2e4": [782, 788, 804, 814, 815, 816], "\uc54a\ub2e4\uba74": 813, "\uc54a\uc558\ub358": 802, "\uc54a\uc73c\uba74": 802, "\uc54a\uc740": [777, 779, 780, 784, 785, 801, 811], "\uc54a\uc744": 784, "\uc54a\uc9c0\ub9cc": 788, "\uc54c": 806, "\uc54c\uace0": [795, 816], "\uc54c\uace0\ub9ac\uc998\uacfc\ub294": 804, "\uc54c\uace0\ub9ac\uc998\ub4e4": 800, "\uc54c\uace0\ub9ac\uc998\uc740": 804, "\uc54c\uace0\ub9ac\uc998\uc744": [782, 815], "\uc54c\ub824\uc8fc\uace0": 807, "\uc54c\ub824\uc900\ub2e4": [784, 792], "\uc54c\ub824\uc9c4": 788, "\uc54c\uc218": 801, "\uc54c\uc544\ub0bc": 801, "\uc54c\uc544\ub450\uc790": [779, 792, 807, 817], "\uc54c\uc544\ubcf8\ub2e4": [779, 800, 813], "\uc54c\uc544\ubd24\ub2e4": 814, "\uc54c\ud30c\ubcb3": 784, "\uc55e": 814, "\uc55e\uc5d0": 811, "\uc55e\uc5d0\uc11c": [782, 807, 816], "\uc55e\uc73c\ub85c": 783, "\uc55e\uc73c\ub85c\uc758": 808, "\uc560\ub2c8\ub9e4\uc774\uc158\uc740": 804, "\uc564\ud2f0\ud2f0\ub4e4": 786, "\uc57d": 803, "\uc57d\uac04": [802, 815, 816], "\uc591\ubc29\ud5a5\uc5d0": 791, "\uc591\ubc29\ud5a5\uc758": 791, "\uc591\ubc29\ud5a5\uc774\uae30": 787, "\uc5b4\ub290\uc815\ub3c4": 802, "\uc5b4\ub514\uc11c\ub098": 777, "\uc5b4\ub5a4": [782, 784, 798, 801, 802, 807, 810, 816], "\uc5b4\ub5bb\uac8c": [775, 776, 782, 783, 784, 787, 794, 800, 801, 804, 806, 807, 810, 817], "\uc5b4\ub824\uc6b8": 800, "\uc5b8\uae09\ud55c": 795, "\uc5b8\uae09\ud588\ub4ef\uc774": 782, "\uc5b8\ub354\ud50c\ub85c\uc6b0": 808, "\uc5b8\uc5b4\uc5d0\uc11c": 791, "\uc5bb\uae30": [781, 784, 814], "\uc5bb\ub294": [783, 802], "\uc5bb\ub294\ub2e4": [802, 806, 807, 815], "\uc5bb\uc5b4\uc9c4": 812, "\uc5bb\uc740": [802, 812], "\uc5bb\uc744": [792, 801, 807, 813, 816], "\uc5bc\ub9c8\ub098": 801, "\uc5c5\ub370\uc774\ud2b8": [794, 795], "\uc5c5\ub370\uc774\ud2b8\ub97c": [782, 795, 799, 803, 808], "\uc5c5\ub370\uc774\ud2b8\ud558\uace0": 795, "\uc5c5\ub370\uc774\ud2b8\ud558\ub294": [801, 806, 808, 811, 815], "\uc5c5\ub370\uc774\ud2b8\ud55c\ub2e4": [794, 795, 815], "\uc5c6\uac70\ub098": 787, "\uc5c6\uac8c": 811, "\uc5c6\uace0": 783, "\uc5c6\uae30": 797, "\uc5c6\ub294": [784, 788, 800, 804], "\uc5c6\ub294\uc9c0\ub97c": 807, "\uc5c6\ub2e4": [782, 783, 792, 801, 811, 815], "\uc5c6\ub2e4\ub294": [782, 804], "\uc5c6\uc560\uace0": 782, "\uc5c6\uc5b4\uc57c": 784, "\uc5c6\uc744": 787, "\uc5c6\uc774": 785, "\uc5d0": [779, 781, 782, 783, 784, 785, 792, 795, 798, 801, 802, 807, 808, 811, 812, 814, 815, 816, 817], "\uc5d0\ub294": [802, 807], "\uc5d0\ub7ec\ub97c": 801, "\uc5d0\uc11c": [775, 776, 777, 780, 782, 783, 784, 785, 787, 791, 796, 800, 801, 804, 805, 807, 811, 813, 815, 817], "\uc5d0\uc11c\ub294": [787, 814], "\uc5d0\uc11c\uc758": 806, "\uc5d0\uc9c0": [781, 783, 786, 787, 789, 794, 795, 797, 798, 800, 801, 805, 806, 813, 815, 816, 817], "\uc5d0\uc9c0\uac00": [784, 787, 791, 792, 802, 814, 815, 816], "\uc5d0\uc9c0\ub098": 784, "\uc5d0\uc9c0\ub294": [783, 787, 791, 792], "\uc5d0\uc9c0\ub3c4": 801, "\uc5d0\uc9c0\ub4e4\uacfc": 802, "\uc5d0\uc9c0\ub4e4\ub3c4": [787, 802], "\uc5d0\uc9c0\ub4e4\ub9cc\uc744": 801, "\uc5d0\uc9c0\ub4e4\uc5d0": [784, 802, 815], "\uc5d0\uc9c0\ub4e4\uc740": [789, 791, 802], "\uc5d0\uc9c0\ub4e4\uc744": [782, 786, 787, 791, 800, 802, 803, 805], "\uc5d0\uc9c0\ub4e4\uc758": [784, 787, 789, 792, 797, 801, 802, 805, 814, 816], "\uc5d0\uc9c0\ub4e4\uc774": [779, 784, 787, 798, 802, 816], "\uc5d0\uc9c0\ub85c": [787, 788, 816], "\uc5d0\uc9c0\ub85c\uc758": 797, "\uc5d0\uc9c0\ub97c": [781, 782, 783, 784, 788, 791, 792, 798, 801, 802, 805, 808], "\uc5d0\uc9c0\ubcc4": [794, 795], "\uc5d0\uc9c0\uc5d0": [784, 789, 791, 792, 794, 797, 814], "\uc5d0\uc9c0\uc5d0\ub294": 791, "\uc5d0\uc9c0\uc640": [782, 784, 792], "\uc5d0\uc9c0\uc640\ub294": 802, "\uc5d0\uc9c0\uc744": 801, "\uc5d0\uc9c0\uc758": [781, 782, 784, 786, 787, 792, 794, 795, 796, 798, 801, 802, 803, 805, 810, 814, 815, 816, 817], "\uc5d0\uc9c0\uc774\ub2e4": 791, "\uc5d0\uce58": [782, 788, 815], "\uc5d4\ud130\ub9ac": 816, "\uc5d4\ud2b8\ub9ac\ub97c": 784, "\uc5ec\uae30\uc11c": [783, 784, 801, 807, 810, 812, 814, 815, 816, 817], "\uc5ec\uae30\uc11c\ub294": [784, 813], "\uc5ec\uae30\uc11c\ubd80\ud130\ub294": 784, "\uc5ec\ub7ec": [779, 781, 782, 783, 784, 787, 788, 791, 792, 798, 800, 801, 806, 810, 811, 812, 815, 816, 817], "\uc5ec\ub7ec\uac00\uc9c0\uac00": 816, "\uc5ec\ub7ec\uac1c\uac00": 812, "\uc5ec\ub7ec\ubc88": 782, "\uc5ec\ub7ec\ubd84": 807, "\uc5ec\ub7ec\ubd84\ub9cc\uc758": [802, 807], "\uc5ec\ub7ec\ubd84\uc740": 817, "\uc5ec\ub7ec\ubd84\uc758": [795, 809], "\uc5ec\ubd80\ub97c": 784, "\uc5ec\uc804\ud788": [801, 804, 807], "\uc5ec\uc9c0\uac00": 795, "\uc5ed": 802, "\uc5ed\ubc29\ud5a5": 802, "\uc5ed\ubc29\ud5a5\uc758": 802, "\uc5ed\uc2dc": [778, 790, 807], "\uc5ed\ud560\uc744": [784, 794, 801], "\uc5f0\uacb0": [787, 811, 816], "\uc5f0\uacb0\ub418\ub294": 801, "\uc5f0\uacb0\ub418\uc5b4": [782, 784, 787], "\uc5f0\uacb0\ub418\uc9c0": 801, "\uc5f0\uacb0\ub41c": [791, 812, 816], "\uc5f0\uacb0\ub41c\ub2e4": 787, "\uc5f0\uacb0\ub85c": 787, "\uc5f0\uacb0\uc744": 782, "\uc5f0\uacb0\ud558\uace0": [797, 802, 814], "\uc5f0\uacb0\ud558\ub294": [787, 814, 815], "\uc5f0\uacb0\ud55c\ub2e4": [782, 787], "\uc5f0\uacb0\ud574\uc11c": 815, "\uc5f0\uad00\ub41c": [783, 792, 802, 812], "\uc5f0\uc0b0": [779, 782, 786, 790, 797, 800, 808, 815], "\uc5f0\uc0b0\uacfc": [781, 798], "\uc5f0\uc0b0\ub4e4\uc740": [808, 811, 815], "\uc5f0\uc0b0\ub4e4\uc744": 815, "\uc5f0\uc0b0\ub9cc": 795, "\uc5f0\uc0b0\uc18d\ub3c4\uac00": 797, "\uc5f0\uc0b0\uc5d0": 809, "\uc5f0\uc0b0\uc73c\ub85c": 795, "\uc5f0\uc0b0\uc740": [790, 809, 811], "\uc5f0\uc0b0\uc744": [781, 792, 794, 795, 797, 806, 811, 815], "\uc5f0\uc0b0\uc758": 797, "\uc5f0\uc0b0\uc774": [804, 811], "\uc5f0\uc18d\ub41c": [783, 784], "\uc5fc\ub450\ud574\ub450\uace0": 781, "\uc5fc\ub450\ud574\uc11c": 815, "\uc601\ubb38": 793, "\uc601\uc18d\uc801\uc778": 782, "\uc601\uc5ed\uc5d0\uc11c\ub294": 804, "\uc608": [782, 785, 788, 789, 791, 792, 808, 814], "\uc608\ub294": [779, 780, 785, 816], "\uc608\ub4e4": 787, "\uc608\ub4e4\ub85c": 804, "\uc608\ub4e4\uc744": 779, "\uc608\ub85c": [776, 779, 801, 806, 807], "\uc608\ub97c": [780, 782, 783, 784, 785, 786, 787, 789, 792, 795, 796, 801, 802, 803, 805, 806, 807, 814, 815, 816, 817], "\uc608\ub97c\ub4e4\uba74": 792, "\uc608\uc758": 789, "\uc608\uc774\ub2e4": [777, 784, 805], "\uc608\uc804\uacfc": 801, "\uc608\uc815\uc774\ub2e4": 782, "\uc608\uc81c": [805, 807, 814, 817], "\uc608\uc81c\uac00": 817, "\uc608\uc81c\ub294": [782, 783, 784, 796, 798, 802, 805, 807, 808, 815, 816], "\uc608\uc81c\ub4e4\uc740": 813, "\uc608\uc81c\ub4e4\uc744": [779, 780, 817], "\uc608\uc81c\ub4e4\uc774": 812, "\uc608\uc81c\ub85c": [779, 805, 809, 814], "\uc608\uc81c\ub97c": [791, 797, 813, 817], "\uc608\uc81c\uc5d0": 814, "\uc608\uc81c\uc5d0\uc11c": 814, "\uc608\uc81c\uc5d0\uc11c\uc640": 779, "\uc608\uc81c\uc640": 807, "\uc608\uc81c\uc758": [779, 789, 801], "\uc608\uc81c\uc774\ub2e4": [781, 784, 788, 792, 797, 802, 815, 816], "\uc608\uc81c\uc778": [805, 807], "\uc608\uc81c\ucc98\ub7fc": 777, "\uc608\uce21": [782, 800, 802, 807, 813, 814, 815, 817], "\uc608\uce21\uac12\uc744": 814, "\uc608\uce21\uacfc": 816, "\uc608\uce21\ub97c": 805, "\uc608\uce21\uc740": [805, 814, 816], "\uc608\uce21\uc744": [805, 814, 815, 816, 817], "\uc608\uce21\uc758": [805, 814], "\uc608\uce21\ud558\uace0": [814, 816, 817], "\uc608\uce21\ud558\uae30": [802, 805], "\uc608\uce21\ud558\uae30\ub9cc": 805, "\uc608\uce21\ud558\ub294": [802, 814, 816], "\uc608\uce21\ud558\uba74": 814, "\uc608\uce21\ud560": 814, "\uc624\ub958": 793, "\uc624\ub978\ucabd": 797, "\uc624\ub978\ucabd\uc73c\ub85c": 815, "\uc624\uc9c1": [778, 792], "\uc624\ud37c\ub808\uc774\ud130\ub294": 782, "\uc624\ud504\ub77c\uc778": 800, "\uc62c\ub824\uc11c": 803, "\uc62c\ub824\uc57c\ud560": 800, "\uc62e\uaca8\ub193\ub294\ub2e4": 802, "\uc62e\uae30\ub294": [777, 807], "\uc635\uc158": 810, "\uc635\uc158\ub4e4": 788, "\uc635\uc158\ub4e4\uc744": 788, "\uc635\uc158\uc5d0": 811, "\uc635\uc158\uc73c\ub85c": 810, "\uc640": [776, 779, 780, 781, 782, 783, 784, 786, 787, 789, 792, 795, 797, 801, 802, 803, 805, 807, 808, 809, 811, 812, 814, 815, 816, 817], "\uc644\ub8cc\ub418\uba74": [784, 795], "\uc644\ub8cc\ub41c\ub2e4": 782, "\uc644\ubcbd\ud55c": 779, "\uc644\uc804\ud558\uac8c": 803, "\uc644\uc804\ud55c": 781, "\uc644\uc804\ud788": [802, 815], "\uc678\ubd80": [779, 786, 791, 807], "\uc678\uc5d0": 784, "\uc67c\ucabd": 797, "\uc67c\ucabd\ubd80\ud130": 815, "\uc694\uad6c\ub418\uae30": 795, "\uc694\uad6c\ub7c9\uc740": 803, "\uc694\uc18c\ub294": 811, "\uc694\uc57d\ud55c\ub2e4": 815, "\uc6a9\ub3c4\ub97c": 814, "\uc6a9\ub7c9\uc744": 800, "\uc6b0\ub9ac\ub294": [782, 784, 804, 814, 817], "\uc6b0\uc120": [778, 782, 783, 792, 801, 814], "\uc6cc\ud06c\ub85c\ub4dc": 800, "\uc6cc\ud06c\ub85c\ub4dc\ub97c": 784, "\uc6d0\uaca9": 776, "\uc6d0\ub798": 795, "\uc6d0\ub798\uc758": [792, 811, 814, 815], "\uc6d0\ubcf8": [784, 801, 805, 806], "\uc6d0\ubcf8\uc758": 801, "\uc6d0\uc18c\ub4e4\uc740": 782, "\uc6d0\uc18c\ub97c": 807, "\uc6d0\uce59\uc740": 806, "\uc6d0\ud558\ub294": [799, 807, 814], "\uc6d0\ud55c\ub2e4\uba74": [801, 805], "\uc6d0\ud560": 817, "\uc6d0\ud568": 787, "\uc6d0\ud65c\ud558\uac8c": 809, "\uc704": [777, 779, 784, 789, 792, 794, 795, 797, 801, 803, 807, 814, 815, 817], "\uc704\ub97c": 816, "\uc704\uc5d0\uc11c": [795, 816, 817], "\uc704\uc758": [779, 801, 815], "\uc704\uc8fc": 789, "\uc704\uce58\uc774\ub2e4": 785, "\uc704\uce58\ud55c": 790, "\uc704\uce58\ud55c\ub2e4": 801, "\uc704\ud55c": [776, 778, 780, 781, 782, 783, 787, 788, 791, 792, 795, 800, 802, 804, 805, 807, 812, 813, 814, 816, 817], "\uc704\ud568\uc774\ub2e4": 779, "\uc704\ud568\uc774\uc9c0": 806, "\uc704\ud574": [775, 779, 780, 782, 783, 802], "\uc704\ud574\uc11c": [776, 777, 779, 781, 782, 783, 784, 785, 787, 789, 791, 792, 795, 798, 801, 804, 805, 807, 808, 810, 812, 813, 814, 815, 816, 817], "\uc704\ud574\uc11c\ub294": [784, 791, 795, 801, 805, 806, 807], "\uc704\ud574\uc11c\uc774\ub2e4": [802, 811], "\uc704\ud578": 782, "\uc720\ub3c4\ub41c": 802, "\uc720\ub3c4\ud558\ub294": 801, "\uc720\uba85\ud558\uace0": 817, "\uc720\uba85\ud55c": [782, 792], "\uc720\uc0ac\ud558\ub2e4": [807, 814], "\uc720\uc6a9\ud558\ub2e4": [782, 792], "\uc720\uc6a9\ud55c": [779, 780], "\uc720\uc758\ud558\uc790": [778, 788, 801, 807], "\uc720\uc77c\ud55c": [781, 782, 802, 805, 815], "\uc720\uc9c0\ud558\uae30": 815, "\uc720\ud2f8\ub9ac\ud2f0\ub4e4\uc744": 788, "\uc720\ud6a8\ud558\uc9c0": 811, "\uc73c\ub85c": [783, 793, 795, 812], "\uc740": [778, 779, 782, 783, 784, 785, 786, 794, 802, 805, 806, 807, 810, 816], "\uc740\ub2c9": 810, "\uc744": [776, 779, 781, 782, 783, 784, 785, 787, 788, 793, 795, 798, 801, 806, 807, 812, 814, 816, 817], "\uc758": [775, 776, 779, 780, 782, 783, 784, 785, 786, 787, 789, 794, 795, 801, 802, 803, 805, 807, 811, 812, 814, 815, 816, 817], "\uc758\ubbf8\ud558\ub294\ub370": 810, "\uc758\ubbf8\ud55c\ub2e4": [784, 795, 801, 807, 812], "\uc758\ubbf8\ud560": 787, "\uc758\uc874\uc131": 800, "\uc758\uc874\ud558\uae30": 804, "\uc758\ud574": 784, "\uc758\ud574\uc11c": 802, "\uc774": [775, 776, 778, 779, 781, 782, 784, 785, 786, 787, 788, 789, 791, 792, 793, 794, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "\uc774\uac83\ub4e4\uc740": [775, 807, 811, 812], "\uc774\uac83\ub4e4\uc744": [782, 792, 807], "\uc774\uac83\uc740": [792, 795, 802, 804], "\uc774\uac83\uc744": 792, "\uc774\uace0": [779, 815], "\uc774\ub098": [783, 808, 814, 816], "\uc774\ub294": [775, 776, 780, 781, 782, 783, 784, 788, 790, 791, 795, 799, 801, 802, 803, 811, 812, 814, 817], "\uc774\ub2e4": [779, 782, 792, 795, 798], "\uc774\ub4e4": [787, 801], "\uc774\ub4e4\uc740": 787, "\uc774\ub4e4\uc744": 784, "\uc774\ub54c": 779, "\uc774\ub77c\uace0": [776, 811, 815], "\uc774\ub77c\ub294": 814, "\uc774\ub77c\uba74": [777, 817], "\uc774\ub7f0": [778, 788, 801, 809, 811, 815], "\uc774\ub904\uc9c4\ub2e4": [779, 792, 816], "\uc774\ub97c": [775, 776, 777, 779, 780, 782, 783, 784, 788, 791, 792, 795, 796, 797, 800, 801, 802, 805, 806, 807, 808, 814, 815, 816], "\uc774\ub984": [789, 795], "\uc774\ub984\uacfc": 782, "\uc774\ub984\ub4e4\uc744": 784, "\uc774\ub984\uc740": [782, 784], "\uc774\ub984\uc744": [782, 784, 789, 795], "\uc774\ub984\uc758": [784, 789, 814], "\uc774\ub984\uc774": 782, "\uc774\ub984\uc774\uace0": 795, "\uc774\ub984\uc774\ub2e4": [784, 795], "\uc774\ubbf8": [777, 790, 813, 817], "\uc774\ubd84": [787, 792, 802, 811, 812], "\uc774\uc0c1": 795, "\uc774\uc288\uac00": 808, "\uc774\uc5b4\uc9c4": 791, "\uc774\uc640": [779, 795], "\uc774\uc678\uc758": [803, 810], "\uc774\uc6a9\ud55c": [814, 817], "\uc774\uc6a9\ud560": [788, 802], "\uc774\uc6a9\ud574\uc11c": [789, 792, 811, 815], "\uc774\uc6c3": [782, 804, 817], "\uc774\uc6c3\ub4e4\ub85c\ubd80\ud130": [807, 817], "\uc774\uc6c3\ub4e4\uc5d0": [804, 817], "\uc774\uc720\ub294": [776, 782, 784, 788, 791, 795, 797, 801, 816], "\uc774\uc804": [801, 802, 814, 815], "\uc774\uc804\uc5d0": 814, "\uc774\uc81c": [796, 805, 807], "\uc774\uc81c\uc758": 789, "\uc774\uc885": [786, 787, 794, 811, 817], "\uc774\uc9c4": [814, 817], "\uc774\ud130\ub808\uc774\uc158\uc5d0": 815, "\uc774\ud558\uc778": 791, "\uc774\ud56d": 795, "\uc774\ud574\ud558\uace0": 800, "\uc775\uc219\ud558\ub2e4\uba74": 806, "\uc778": [784, 800, 812, 815], "\uc778\ub371\uc2a4\ub97c": [782, 811], "\uc778\ubc14\uc6b4\ub4dc": 801, "\uc778\uc2a4\ud134\uc2a4\ub97c": 787, "\uc778\uc2a4\ud134\uc2a4\uc5d0": 817, "\uc778\uc790": 795, "\uc778\uc790\ub294": 801, "\uc778\uc790\ub4e4\uc740": 803, "\uc778\uc790\ub4e4\uc744": 784, "\uc778\uc790\ub4e4\uc774": 790, "\uc778\uc790\ub85c": [784, 791, 795, 798, 802, 805, 807, 812], "\uc778\uc790\ub97c": [785, 803], "\uc778\uc790\uc774\ub2e4": 784, "\uc778\uc9c0": 802, "\uc778\ucea1\uc290\ub808\uc774\uc158\uc774\ub2e4": 812, "\uc778\ucf54\ub529\ud55c": 787, "\uc778\ud130\uc5d1\uc158\uc744": 781, "\uc778\ud130\ud328\uc774\uc2a4\ub97c": 782, "\uc778\ud130\ud398\uc774\uc2a4\ub294": 798, "\uc778\ud130\ud398\uc774\uc2a4\ub97c": [782, 786, 789, 792], "\uc778\ud130\ud398\uc774\uc2a4\uc758": 789, "\uc778\ud2f0\ud2f0\ub4e4\uacfc": 787, "\uc77c": [787, 797], "\uc77c\ub3c4": 814, "\uc77c\ub4e4\uc5d0": 779, "\uc77c\ubc18": [782, 801], "\uc77c\ubc18\uc801": 815, "\uc77c\ubc18\uc801\uc73c\ub85c": [775, 779, 782, 791, 795, 797, 800, 806, 809, 811], "\uc77c\ubc18\uc801\uc778": [788, 792, 810, 811, 814, 815], "\uc77c\ubc88\uc801\uc73c\ub85c": 779, "\uc77c\ubd80": [796, 807], "\uc77c\ubd80\ub294": 779, "\uc77c\ubd80\ub97c": 800, "\uc77c\ubd80\ub9cc": 799, "\uc77c\ubd80\uc5d0": 794, "\uc77c\ubd80\uc5d0\ub9cc": 789, "\uc77c\ubd80\uc774\uae30": 782, "\uc77c\uc5b4\ub098\ub294\uc9c0\ub97c": 804, "\uc77c\uc5b4\ub09c\ub2e4": [779, 782], "\uc77c\uc744": [777, 807, 817], "\uc77c\uc774": 779, "\uc77c\uc774\ud0ac": 811, "\uc77d\uae30": 792, "\uc77d\uae30\uc640": 782, "\uc77d\ub294": 788, "\uc77d\uc744": 801, "\uc784\ubc30\ub529\uc740": 782, "\uc784\ubca0\ub529": 783, "\uc784\ubca0\ub529\uacfc": 782, "\uc784\ubca0\ub529\ub4e4\uc5d0": 782, "\uc784\ubca0\ub529\ub4e4\uc740": 783, "\uc784\ubca0\ub529\ub4e4\uc744": [782, 784], "\uc784\ubca0\ub529\uc744": [781, 782, 783, 784, 816, 817], "\uc784\ubca0\ub529\uc774": 782, "\uc784\uc2dc\ub85c": 780, "\uc784\uc758\ub85c": [801, 813], "\uc784\uc758\uc131\uc744": 804, "\uc784\uc758\uc758": [784, 801, 814, 816], "\uc785\ub825": [776, 782, 802, 805, 806, 807, 810, 811, 812, 815], "\uc785\ub825\uacfc": [795, 801], "\uc785\ub825\uae4c\uc9c0\uc758": 800, "\uc785\ub825\uc5d0": [800, 811], "\uc785\ub825\uc73c\ub85c": [782, 791, 801, 807, 814, 817], "\uc785\ub825\uc740": [802, 815], "\uc785\ub825\ud558\ub294": 805, "\uc785\ub825\ud558\uba74": 814, "\uc785\ub825\ud574\uc11c": [802, 807], "\uc788\uac8c\ud55c\ub2e4": 780, "\uc788\uace0": [776, 782, 784, 795, 801, 806, 808, 809, 812, 815, 816, 817], "\uc788\uae30": [776, 779, 795, 801, 802], "\uc788\ub294": [775, 776, 781, 782, 784, 787, 788, 790, 797, 802, 803, 804, 805, 807, 810, 811, 812, 813, 814, 815, 817], "\uc788\ub294\ub370": [784, 788, 811, 816], "\uc788\ub294\uc9c0": [784, 807], "\uc788\ub2e4": [775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 795, 796, 797, 798, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817], "\uc788\ub2e4\uace0": 813, "\uc788\ub2e4\ub294": [784, 792], "\uc788\ub2e4\uba74": [784, 792, 807, 816], "\uc788\ub3c4\ub85d": [779, 782, 801], "\uc788\ub4ef\uc774": [779, 801], "\uc788\uc5b4\uc11c": 808, "\uc788\uc5b4\uc57c": [777, 779, 784, 811, 812], "\uc788\uc5b4\uc57c\ub9cc": 782, "\uc788\uc73c\ub2c8": 788, "\uc788\uc73c\uba70": [779, 784, 810], "\uc788\uc744": [779, 792, 807], "\uc788\uc74c": 815, "\uc788\uc74c\uc744": [787, 804, 812, 817], "\uc788\uc9c0": 782, "\uc788\uc9c0\ub9cc": [801, 802], "\uc790\ub3d9\uc73c\ub85c": [777, 782, 783, 795, 806, 808], "\uc790\ub3d9\uc744": 777, "\uc790\ub3d9\ud654\ud560": 777, "\uc790\ub8cc": [782, 786, 787], "\uc790\uc138\ud558\uac8c": 811, "\uc790\uc138\ud55c": [779, 788, 795, 799, 814], "\uc790\uc138\ud788": 806, "\uc790\uc2e0\uc758": [807, 817], "\uc790\uc6d0\uc744": 800, "\uc790\uccb4": 787, "\uc791\ub3d9\uc744": 803, "\uc791\ub3d9\ud558\uac8c": 801, "\uc791\ub3d9\ud558\ub3c4\ub85d": 806, "\uc791\ub3d9\ud558\uba74\uc11c": 781, "\uc791\uc131": [794, 811], "\uc791\uc131\ud558\uace0\uc790": 814, "\uc791\uc131\ud558\ub294": [806, 817], "\uc791\uc131\ud558\uba74": 814, "\uc791\uc131\ud55c\ub2e4": 814, "\uc791\uc131\ud560": [814, 817], "\uc791\uc131\ud574\uc57c\ud55c\ub2e4": 782, "\uc791\uc5c5": 785, "\uc791\uc5c5\uc740": 776, "\uc791\uc740": [782, 784, 801, 808, 813, 815], "\uc798": 788, "\uc798\ub77c\uc11c": 806, "\uc7a0\uc7ac\uc801\uc73c\ub85c": 802, "\uc7a0\uc7ac\uc801\uc73c\ub85c\ub294": 784, "\uc7a0\uc7ac\uc801\uc778": 811, "\uc7a1": 785, "\uc7a1\ub294": [784, 801], "\uc7a1\uc744": [781, 785], "\uc7a1\uc774": 785, "\uc7a5\ub294": 794, "\uc7a5\uc5d0\uc11c\ub294": [809, 813], "\uc7a5\uc740": [775, 786, 800, 813], "\uc7a5\uc758": [776, 813], "\uc7a5\uc810\uc740": 784, "\uc7a5\uc810\uc744": 815, "\uc7ac\ubc30\uc5f4\ud558\ub294": 779, "\uc7ac\uc0ac\uc6a9\ub420": 811, "\uc7ac\uc0ac\uc6a9\ud55c\ub2e4": 805, "\uc7ac\uc0ac\uc6a9\ud560": 802, "\uc7ac\uc791\uc131\ud574\uc11c": 801, "\uc7ac\ud560\ub2f9": 784, "\uc7ac\ud560\ub2f9\uc774": 784, "\uc7ac\ud560\ub2f9\ud55c\ub2e4": 784, "\uc7ac\ud65c\uc6a9\ud574\uc11c": 816, "\uc800\uc790\uac00": 787, "\uc800\uc791\uc744": 787, "\uc800\uc7a5": [780, 796], "\uc800\uc7a5\uacf5\uac04\ub3c4": 791, "\uc800\uc7a5\uacfc": [775, 776], "\uc800\uc7a5\ub418\ub294": [785, 791], "\uc800\uc7a5\ub418\uc5b4": [782, 801, 807, 817], "\uc800\uc7a5\ub418\uc5b4\uc57c": 784, "\uc800\uc7a5\ub41c": [784, 807], "\uc800\uc7a5\ub41c\ub2e4": [782, 783, 784, 790, 792, 812], "\uc800\uc7a5\ub420": [784, 785], "\uc800\uc7a5\uc18c\ub97c": 792, "\uc800\uc7a5\uc18c\uc5d0": 807, "\uc800\uc7a5\uc740": 814, "\uc800\uc7a5\uc774": 797, "\uc800\uc7a5\ud558\uace0": [781, 784, 788, 792], "\uc800\uc7a5\ud558\uae30": [776, 780, 788, 789, 812], "\uc800\uc7a5\ud558\ub294": [780, 782, 784, 785, 792, 795], "\uc800\uc7a5\ud558\ub294\ub370": [775, 784, 791, 800], "\uc800\uc7a5\ud55c\ub2e4": [782, 783, 784, 785, 788, 789, 795], "\uc800\uc7a5\ud560": [776, 784, 785, 789, 797], "\uc801\uac8c": 791, "\uc801\ub2e4": 807, "\uc801\uc6a9\ub418\uace0": 817, "\uc801\uc6a9\ub418\uae30": 816, "\uc801\uc6a9\ub418\ub294": 806, "\uc801\uc6a9\ub418\ub294\ub370": 795, "\uc801\uc6a9\ub418\uc5b4": 815, "\uc801\uc6a9\ub41c\ub2e4": [792, 811], "\uc801\uc6a9\ub429\ub2c8\ub2e4": 801, "\uc801\uc6a9\ud558\uace0": [792, 797, 811], "\uc801\uc6a9\ud558\uae30": [794, 800, 812], "\uc801\uc6a9\ud558\uae30\ub3c4": 810, "\uc801\uc6a9\ud558\ub294": [794, 796, 797], "\uc801\uc6a9\ud55c\ub2e4": [797, 814], "\uc801\uc6a9\ud574\ubcf4\uba74": 814, "\uc801\uc740": [782, 801, 803], "\uc801\uc808\ud55c": [783, 808], "\uc801\ud569\ud558\uc9c0": [780, 788], "\uc804\ub2ec": [793, 806, 807, 809, 811, 812, 813, 815, 817], "\uc804\ub2ec\ub418\ub294": 784, "\uc804\ub2ec\ub41c": [794, 795], "\uc804\ub2ec\uc5d0": [794, 797], "\uc804\ub2ec\uc740": [798, 801, 811, 817], "\uc804\ub2ec\uc744": [794, 795, 798, 804, 808, 815, 817], "\uc804\ub2ec\uc774": [795, 817], "\uc804\ub2ec\ud55c\ub2e4": 805, "\uc804\ub2ec\ud560": 801, "\uc804\ub2ec\ud574\uc11c": [790, 815], "\uc804\ub2ec\ud574\uc57c": [782, 801], "\uc804\ub7b5\uc740": 784, "\uc804\ub7b5\uc744": [800, 801], "\uc804\ubc18\uc801\uc73c\ub85c": 795, "\uc804\ubd80\uc774\ub2e4": 807, "\uc804\uc5d0": [782, 784, 808], "\uc804\uc790\ub294": 782, "\uc804\ucc98\ub9ac": 781, "\uc804\ucc98\ub9ac\uac00": 784, "\uc804\ucc98\ub9ac\ub294": 784, "\uc804\uccb4": [779, 784, 800, 801, 802, 803, 804, 806, 807, 811, 814, 815, 817], "\uc804\uccb4\ub97c": [800, 811], "\uc804\uccb4\uc5d0": 807, "\uc804\ud30c\ub418\uc5b4\uc57c": 807, "\uc804\ud615\uc801\uc778": [779, 785, 810, 811], "\uc804\ud658\ud558\ub294": 801, "\uc808\ub300\ub85c": 782, "\uc808\ub4e4\uc5d0\uc11c": 775, "\uc808\ub4e4\uc5d0\uc11c\ub294": 800, "\uc808\ub85c": 813, "\uc808\uc57d\ud560": [780, 800, 808], "\uc808\uc5d0\uc11c": [779, 800, 814], "\uc808\uc5d0\uc11c\ub294": [779, 781, 788, 794, 801, 811], "\uc808\uc740": [778, 782, 804, 817], "\uc808\uc744": 784, "\uc808\uc758": 781, "\uc808\ucc28\ub294": [779, 800], "\uc808\ucc98\ub85c": 792, "\uc810\uac80\uc740": 811, "\uc810\uc218": 805, "\uc810\uc218\uac00": 816, "\uc810\uc218\ub97c": [802, 805, 814, 816], "\uc810\uc218\ubcf4\ub2e4": 816, "\uc810\uc218\uc640": [805, 816], "\uc810\uc740": [782, 807], "\uc810\uc744": [779, 788, 801, 802, 804, 805, 807, 815], "\uc810\uc774\ub2e4": [782, 784, 802, 805], "\uc811\uadfc": [785, 795], "\uc811\uadfc\uc131\uc744": 779, "\uc811\uadfc\uc744": [782, 785], "\uc811\uadfc\ud558\uae30": [781, 782], "\uc811\uadfc\ud558\ub294": 782, "\uc811\uadfc\ud560": [782, 783, 789, 801], "\uc811\uadfc\ud574\uc11c": 807, "\uc815\ub82c\ud55c\ub2e4": 783, "\uc815\ubcf4": [776, 780, 791], "\uc815\ubcf4\ub4e4\uc744": [779, 784, 815], "\uc815\ubcf4\ub97c": [780, 782, 784, 785, 792, 802, 815, 817], "\uc815\ubcf4\uc640": 802, "\uc815\uc0c1\uc801\uc778": 782, "\uc815\uc218": [784, 791], "\uc815\uc218\ub85c": 792, "\uc815\uc218\ub97c": 791, "\uc815\uc758": [781, 786, 789, 795], "\uc815\uc758\ub294": 817, "\uc815\uc758\ub418\uc5b4": 782, "\uc815\uc758\ub418\uc5c8\ub2e4\uba74": 815, "\uc815\uc758\ub41c": [776, 817], "\uc815\uc758\ub41c\ub2e4": [801, 815], "\uc815\uc758\uc5d0": 786, "\uc815\uc758\ud558\uace0": 775, "\uc815\uc758\ud558\ub098": 776, "\uc815\uc758\ud558\ub294": 782, "\uc815\uc758\ud558\ub294\ub370": 817, "\uc815\uc758\ud55c": [805, 814], "\uc815\uc758\ud55c\ub2e4": [794, 801, 806, 815], "\uc815\uc758\ud560": [801, 805], "\uc815\ucc45\uc740": 783, "\uc815\ucc45\uc744": 783, "\uc815\ud574\uc57c": 785, "\uc815\ud574\uc9c4": [811, 817], "\uc815\ud655\ub3c4": 817, "\uc815\ud655\ud558\uac8c": 782, "\uc815\ud655\ud55c": 800, "\uc81c\uac70\ub418\uc5b4": 806, "\uc81c\uac70\ud558\uae30": 804, "\uc81c\uac70\ud558\ub294": 802, "\uc81c\uac70\ud55c\ub2e4": 795, "\uc81c\uac70\ud588\ub2e4": 807, "\uc81c\uacf1": 784, "\uc81c\uacf5\ub418\ub294": [807, 813], "\uc81c\uacf5\ud558\uae30": [775, 781], "\uc81c\uacf5\ud558\ub294": [776, 784, 802, 807], "\uc81c\uacf5\ud558\ub294\ub370": 788, "\uc81c\uacf5\ud558\uc9c0\ub9cc": 801, "\uc81c\uacf5\ud55c\ub2e4": [778, 779, 780, 781, 782, 783, 784, 785, 786, 788, 791, 792, 795, 800, 801, 805, 807, 808, 814, 817], "\uc81c\uacf5\ud55c\ub2e4\uba74": 788, "\uc81c\uacf5\ud560": 779, "\uc81c\uacf5\ud568": [806, 817], "\uc81c\uacf5\ud574\uc57c": 782, "\uc81c\uacf5\ud574\uc57c\ud55c\ub2e4": 805, "\uc81c\uc548\ud558\ub294": 797, "\uc81c\uc57d": 792, "\uc81c\uc57d\uc774\ub098": 804, "\uc81c\uc678\ud558\uace0\ub294": 817, "\uc81c\uc678\ud558\uba74": [802, 805], "\uc81c\ud55c\uc801\uc778": 804, "\uc870\uac74\uc744": [792, 803], "\uc870\uae08\ub9cc": 781, "\uc870\uc815\uac00\ub2a5": 817, "\uc874\uc7ac\ud558\ub294": [782, 816], "\uc874\uc7ac\ud558\ub294\uc9c0": 816, "\uc874\uc7ac\ud558\uc9c0": [802, 805, 815], "\uc874\uc7ac\ud55c\ub2e4": 809, "\uc874\uc7ac\ud55c\ub2e4\ub294": [778, 802], "\uc874\uc7ac\ud55c\ub2e4\uba74": 777, "\uc874\uc7ac\ud574\uc57c\ud558\uba70": 790, "\uc880\ub354": 810, "\uc885\ub8cc\ub418\uba74": 816, "\uc885\ub958": 815, "\uc885\ub958\ub97c": 815, "\uc885\ub958\uc5d0": 817, "\uc885\ub958\uc758": [778, 779, 781, 806, 811, 812, 815], "\uc885\uc885": [814, 815], "\uc88b\ub2e4": 804, "\uc88b\uc740": 784, "\uc8fc\ub85c": [779, 782], "\uc8fc\ubaa9\ud558\uc790": 804, "\uc8fc\uc11d": 806, "\uc8fc\uc18c": 785, "\uc8fc\uc18c\ub4e4\uc744": 785, "\uc8fc\uc18c\uc774\ub2e4": 785, "\uc8fc\uc5b4\uc84c\uc744": 814, "\uc8fc\uc5b4\uc9c0\uba74": 801, "\uc8fc\uc5b4\uc9c4": [784, 801, 814], "\uc8fc\uc694": [779, 782, 809, 815], "\uc8fc\uc758": 813, "\uc8fc\uc758\ud558\uc790": [804, 806, 815], "\uc900\ub2e4": [782, 803], "\uc900\ube44\ud558\uace0": 784, "\uc900\ube44\ud55c\ub2e4": 815, "\uc904\ub9cc": 784, "\uc904\uc5ec\uc900\ub2e4": 784, "\uc904\uc740": 785, "\uc904\uc774\uae30": 804, "\uc904\uc778": 797, "\uc904\uc77c": 776, "\uc911": 780, "\uc911\uac04": [784, 800], "\uc911\uac04\uc5d0": 795, "\uc911\ubcf5\ub41c": 784, "\uc911\uc2ec\uc758": 786, "\uc911\uc5d0": [782, 783, 785, 798, 806, 817], "\uc911\uc694\ud558\ub2e4": [782, 784], "\uc911\uc694\ud55c": [779, 784, 788, 789], "\uc911\uc758": 791, "\uc911\uc774\ub2e4": 803, "\uc989": [779, 782, 784, 789, 795, 797, 801, 802, 805, 807, 811, 814, 815, 816], "\uc9c0\uae08\uc740": 782, "\uc9c0\ub2c8\uace0": 815, "\uc9c0\uc5b4\ubcf8\ub2e4\uba74": 815, "\uc9c0\uc6d0\ub418\ub294": [795, 802, 807], "\uc9c0\uc6d0\uc740": 795, "\uc9c0\uc6d0\uc744": [784, 808], "\uc9c0\uc6d0\ud558\uace0": [791, 796], "\uc9c0\uc6d0\ud558\uae30": [781, 782, 791, 795], "\uc9c0\uc6d0\ud558\ub294": 808, "\uc9c0\uc6d0\ud558\ub294\ub370": 803, "\uc9c0\uc6d0\ud558\uc9c0": [782, 803], "\uc9c0\uc6d0\ud558\uc9c0\ub9cc": 782, "\uc9c0\uc6d0\ud55c\ub2e4": [781, 782, 783, 784, 791, 795, 800, 803, 805, 807, 815], "\uc9c0\uc6d0\ud568": 803, "\uc9c0\uc815\ub418\uace0": 783, "\uc9c0\uc815\ub418\uba74": 805, "\uc9c0\uc815\ub418\uc5b4\uc57c": 785, "\uc9c0\uc815\ub418\uc9c0": 785, "\uc9c0\uc815\ub41c": 785, "\uc9c0\uc815\ub420": 783, "\uc9c0\uc815\ud558\uae30": [779, 792], "\uc9c0\uc815\ud558\ub294": 779, "\uc9c0\uc815\ud558\ub294\ub370": 784, "\uc9c0\uc815\ud558\uc9c0": 795, "\uc9c0\uc815\ud55c": 792, "\uc9c0\uc815\ud55c\ub2e4": [782, 783, 784, 785, 792], "\uc9c0\uc815\ud560": [782, 785, 802], "\uc9c0\uc815\ud574\uc57c": [783, 810], "\uc9c0\uc815\ud574\uc57c\ud558\uae30": 816, "\uc9c0\uce6d\ud558\ub294": 795, "\uc9c0\ucf1c\ubcf4\uc790": [803, 808], "\uc9c1\uad00\uc801\uc73c\ub85c": 797, "\uc9c1\uc811": [777, 782, 783, 784, 788, 795, 797, 805, 806], "\uc9c4\ub2e4": 781, "\uc9c4\uc785": 801, "\uc9c4\ud589": [803, 815], "\uc9c8\ubb38\uc740": 793, "\uc9d1\uacc4": [795, 798], "\uc9d1\uacc4\ub41c\ub2e4": 812, "\uc9d1\uacc4\ud558\ub294": 812, "\uc9d1\uc911\ud574\uc11c": 779, "\uc9d1\ud55c\uc740": 807, "\uc9d1\ud569": [787, 815], "\uc9d1\ud569\ub418\uc5b4\uc57c": 810, "\uc9d1\ud569\ub4e4\uc5d0": 781, "\uc9d1\ud569\uc5d0": 792, "\uc9d1\ud569\uc73c\ub85c": 787, "\uc9d1\ud569\uc744": [791, 801, 802], "\uc9e7\uac8c": 792, "\ucc28\ub840": 817, "\ucc28\uc6d0": [783, 789, 795, 810], "\ucc28\uc6d0\uacfc": 810, "\ucc28\uc6d0\ub4e4": 810, "\ucc28\uc6d0\ub4e4\uc744": 798, "\ucc28\uc6d0\uc73c\ub85c": 810, "\ucc28\uc6d0\uc740": [789, 797, 810], "\ucc28\uc6d0\uc744": [797, 810], "\ucc28\uc6d0\uc758": 803, "\ucc28\uc6d0\uc774": [797, 815], "\ucc28\uc6d0\uc774\ub780": 810, "\ucc28\uc774\uac00": 815, "\ucc28\uc774\ub97c": 808, "\ucc28\uc774\uc810\uc740": [782, 784, 802, 805, 806, 809, 815], "\ucc28\uc774\uc810\uc774": 802, "\ucc28\uc9c0\ud558\uace0": 803, "\ucc28\uc9c0\ud558\uae30\ub3c4": 797, "\ucc28\uc9c0\ud558\uc9c0": 803, "\ucc38\uace0": [776, 795], "\ucc38\uace0\ud558\uace0\uc790": 782, "\ucc38\uace0\ud558\uba74": 779, "\ucc38\uace0\ud558\uc790": [779, 784, 787, 788, 791, 795, 799, 801, 802, 803, 804, 807, 813, 815, 817], "\ucc38\uace0\ud560": [788, 789, 791, 792], "\ucc38\uc870": 782, "\ucc38\uc870\ub9cc": 788, "\ucc38\uc870\ud558\uae30": 788, "\ucc38\uc870\ud558\uc790": 788, "\ucc3e\ub294\ub2e4": 785, "\ucc3e\uc544\ub0b4\uc57c\ud55c\ub2e4": 815, "\ucc3e\uc544\ub0bc": 811, "\ucc3e\uc544\ubcfc": 807, "\ucc44\ud0dd\ud558\uace0": 781, "\ucc45\uc784\uc744": 781, "\ucc98\ub7fc": [777, 782, 802], "\ucc98\ub9ac": [776, 779], "\ucc98\ub9ac\ub418\uc9c0": 779, "\ucc98\ub9ac\ub97c": 806, "\ucc98\ub9ac\ud558\uace0": 775, "\ucc98\ub9ac\ud558\uae30": 776, "\ucc98\ub9ac\ud558\ub294": [779, 780], "\uccab": [783, 804, 806], "\uccab\ubc88\uc9f8": [784, 789, 801, 802, 804, 807, 811], "\uccab\ubc88\uc9f8\ub294": 802, "\uccab\uc9f8\ub85c": 815, "\uccb4\ud06c": 811, "\uccb4\ud06c\uac00": 811, "\uccb4\ud06c\ud3ec\uc778\ud2b8\ub97c": 788, "\ucd08\uae30\ud654\ub41c\ub2e4": 783, "\ucd08\uae30\ud654\ud558\uae30": 781, "\ucd08\uae30\ud654\ud55c\ub2e4": [782, 810], "\ucd1d": [779, 783], "\ucd5c\ub300": 815, "\ucd5c\uc120\uc758": 803, "\ucd5c\uc18c\ub4e4\uc774": 815, "\ucd5c\uc18c\uc758": 784, "\ucd5c\uc18c\ud55c\uc758": 795, "\ucd5c\uc2e0": 784, "\ucd5c\uc801\uc740": 808, "\ucd5c\uc801\uc774\uc9c0": 784, "\ucd5c\uc801\ud654\ub418\uc5b4": 784, "\ucd5c\uc801\ud654\ub41c": 795, "\ucd5c\uc801\ud654\ub420": 797, "\ucd5c\uc801\ud654\ub4e4\uc744": 797, "\ucd5c\uc801\ud654\ub97c": 811, "\ucd5c\uc801\ud654\ud558\uace0": 797, "\ucd5c\uc801\ud654\ud560": 795, "\ucd5c\uc885": [800, 807], "\ucd94\uac00": [803, 811], "\ucd94\uac00\ub41c": 791, "\ucd94\uac00\ub85c": [779, 784, 792, 797], "\ucd94\uac00\uc801\uc73c\ub85c": [777, 784], "\ucd94\uac00\uc801\uc778": 812, "\ucd94\uac00\ud558\ub294": 779, "\ucd94\uac00\ud55c\ub2e4": 779, "\ucd94\uac00\ud560": [779, 782], "\ucd94\ub860": 800, "\ucd94\ub860\uc5d0": 782, "\ucd94\ub860\uc5d0\uc11c": 784, "\ucd94\ub860\uc740": 804, "\ucd94\ub860\uc744": [781, 804], "\ucd94\ub860\uc758": 804, "\ucd94\ub860\uc774": [784, 800], "\ucd94\uc0c1\ud654\ub97c": 786, "\ucd94\ucc9c": 787, "\ucd94\ucc9c\uc5d0\uc11c": 814, "\ucd94\ucc9c\uc744": 816, "\ucd94\ucd9c\ub420": 777, "\ucd94\ucd9c\uc744": 777, "\ucd94\ucd9c\ud558\uace0": 792, "\ucd94\ucd9c\ud558\uba74": 817, "\ucd94\ucd9c\ud558\uc790": 777, "\ucd94\ucd9c\ud55c\ub2e4": 777, "\ucd94\ucd9c\ud560": 812, "\ucd95\uc18c": [794, 795], "\ucd95\uc57d": [795, 798, 812], "\ucd9c\ub825": [784, 795, 801, 802, 804, 806, 807, 810], "\ucd9c\ub825\uacfc": 802, "\ucd9c\ub825\uc2dc\uc791\ud574\uc11c": 800, "\ucd9c\ub825\uc73c\ub85c": 807, "\ucd9c\ub825\uc73c\ub85c\ub294": 801, "\ucd9c\ub825\uc758": 801, "\ucda9\ubd84\ud558\ub2e4": 804, "\ucda9\ubd84\ud558\uc9c0": 784, "\ucda9\uc871\ud558\uba74": 803, "\ucde8\uae09\ud55c\ub2e4": 811, "\ucde8\ud558\uac8c\ud558\uba74": 814, "\uce58\uc6d0\uc744": 810, "\uce5c\uad6c": 787, "\uce5c\ubaa9": 815, "\uce5c\uc219\ud560": 816, "\uce74\ud14c\uace0\ub9ac\ub85c": 817, "\uce74\ud14c\ub85c\uae30\ub4e4\ub85c": 817, "\uce90\ub178\ub2c8\uceec": 792, "\ucee4\ub110\uc758": 808, "\ucee4\ub2e4\ub780": 815, "\ucee4\ubba4\ub2c8\ud2f0\uc5d0": 815, "\ucee4\ubba4\ub2c8\ud2f0\uc758": 815, "\ucee4\uc11c": 797, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc988\ub41c": 812, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ub41c": 807, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\uc774": 817, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": [800, 802, 807], "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\ub294": 800, "\ucee4\uc2a4\ud140": [775, 800, 803, 807, 809, 817], "\ucee4\uc9c8": 784, "\ucee8\ud0dd\uc2a4\ud2b8": 791, "\ucef4\ud30c\uc77c\uacfc": 784, "\ucef4\ud30c\uc77c\uc744": 795, "\ucef4\ud30c\uc77c\ud558\uace0": 784, "\ucef4\ud30c\uc77c\ud55c\ub2e4": 784, "\ucef4\ud3ec\ub10c\ub4dc\ub4e4\uc744": 781, "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uacfc": [781, 815], "\ucef4\ud3ec\ub10c\ud2b8\ub4e4\uc744": [781, 786], "\ucef4\ud3ec\ub10c\ud2b8\ub97c": [775, 781, 815], "\ucef4\ud3ec\ub10c\ud2b8\ub9cc": 814, "\ucef4\ud4e8\ud130": 781, "\ucef4\ud4e8\ud130\ub294": [781, 782], "\ucef4\ud4e8\ud130\ub4e4\uc5d0": 781, "\ucef4\ud4e8\ud130\ub4e4\uc758": [781, 784], "\ucef4\ud4e8\ud130\ub97c": 784, "\ucef4\ud4e8\ud130\uc5d0": 782, "\ucef4\ud4e8\ud130\uc5d0\uc11c": [781, 784, 808], "\ucef4\ud4e8\ud305": 795, "\ucef7": 784, "\ucf00\uc774\uc2a4\ub294": 782, "\ucf00\uc774\uc2a4\ub4e4\uc744": 811, "\ucf54\ub4dc": [779, 781, 784, 794, 802, 805, 808, 811, 815], "\ucf54\ub4dc\ub294": [777, 778, 779, 781, 782, 783, 784, 788, 789, 791, 792, 801, 802, 805, 806, 807, 809, 811, 814, 815, 816, 817], "\ucf54\ub4dc\ub3c4": 806, "\ucf54\ub4dc\ub4e4\uacfc": 806, "\ucf54\ub4dc\ub97c": [777, 779, 781, 782, 795], "\ucf54\ub4dc\uc5d0\uc11c": [779, 801], "\ucf54\ub4dc\uc640": [782, 809, 814], "\ucf54\ub4dc\uc758": [779, 811], "\ucf54\ub4dc\uc774\ub2e4": 817, "\ucf54\ub4dc\ucc98\ub7fc": 817, "\ucffc\ub9ac\ud558\ub294": 791, "\ud06c\uac8c": 814, "\ud06c\uae30": 780, "\ud06c\uae30\uac00": [800, 815], "\ud06c\uae30\ub77c\uace0": 813, "\ud06c\uae30\ub97c": [783, 792], "\ud06c\uae30\uc758": 782, "\ud06c\uae30\uc774\uace0": 803, "\ud06c\ub85c\uc2a4": 798, "\ud070": [776, 784, 793, 799, 811, 813, 815, 817], "\ud074\ub798\uc2a4": [775, 807], "\ud074\ub798\uc2a4\ub294": [782, 801], "\ud074\ub798\uc2a4\ub4e4\uc744": 807, "\ud074\ub798\uc2a4\ub97c": [776, 777, 781, 807], "\ud074\ub798\uc2a4\uc5d0": [776, 779, 801, 817], "\ud074\ub798\uc2a4\uc5d0\ub294": 776, "\ud074\ub798\uc2a4\uc5d0\uc11c": 775, "\ud074\ub798\uc2a4\uc774\uace0": 803, "\ud074\ub798\uc2a4\uc774\ub2e4": [776, 782], "\ud074\ub798\uc2a4\uc778": [779, 801], "\ud074\ub7ec\uc2a4\ud130": [781, 785], "\ud074\ub7ec\uc2a4\ud130\uc5d0": [782, 785], "\ud074\ub7ec\uc2a4\ud130\uc5d0\uc11c": [781, 782, 784, 785], "\ud074\ub7ec\uc2a4\ud130\uc758": [781, 782, 784, 785], "\ud074\ub7ec\uc2a4\ud130\uc774": 781, "\ud074\ub85c\ubc8c": 785, "\ud074\ub860\ud558\uace0": 784, "\ud074\ub860\ud55c\ub2e4": 784, "\ud0a4\uac12\ub294": 798, "\ud0a4\ub85c": [784, 812], "\ud0c0\uc785": [783, 784, 789, 791, 798, 810, 812], "\ud0c0\uc785\uac04\uc758": 802, "\ud0c0\uc785\uacfc": [782, 783, 792, 802, 805, 814, 817], "\ud0c0\uc785\ub4e4\uacfc": [783, 784, 802, 805, 807, 817], "\ud0c0\uc785\ub4e4\uc5d0": [792, 811, 817], "\ud0c0\uc785\ub4e4\uc640": [805, 807], "\ud0c0\uc785\ub4e4\uc740": 798, "\ud0c0\uc785\ub4e4\uc744": [784, 801, 802, 805, 812], "\ud0c0\uc785\ub4e4\uc758": 784, "\ud0c0\uc785\ub4e4\uc774": 784, "\ud0c0\uc785\ub9cc": 814, "\ud0c0\uc785\ub9cc\uc744": 782, "\ud0c0\uc785\ubcc4": [783, 792], "\ud0c0\uc785\ubcc4\ub85c": [784, 801, 817], "\ud0c0\uc785\uc5d0": [783, 784, 792, 795, 798, 810, 811, 812, 814, 815, 816, 817], "\ud0c0\uc785\uc5d0\uc11c": 783, "\ud0c0\uc785\uc5d0\uc11c\uc758": 784, "\ud0c0\uc785\uc73c\ub85c": [787, 812, 814, 816], "\ud0c0\uc785\uc73c\ub85c\ub294": 810, "\ud0c0\uc785\uc740": [783, 791, 810], "\ud0c0\uc785\uc744": [783, 784, 786, 787, 789, 795, 798, 802, 806, 808, 813, 814, 816], "\ud0c0\uc785\uc758": [783, 784, 786, 787, 792, 798, 801, 802, 814], "\ud0c0\uc785\uc774": [783, 784, 791, 792, 811, 812], "\ud0c0\uc785\uc774\ub098": 783, "\ud0c0\uc785\uc774\ub2e4": 784, "\ud0c0\uc785\uc774\ub77c\uace0": 792, "\ud134\uc11c": 789, "\ud14c\uc2a4\ud06c": 779, "\ud14c\uc2a4\ud06c\ub4e4\uc5d0": 814, "\ud14c\uc2a4\ud06c\ub4e4\uc744": 817, "\ud14c\uc2a4\ud06c\ub97c": [778, 813], "\ud14c\uc2a4\ud06c\uc5d0": 784, "\ud14c\uc2a4\ud06c\uc5d0\ub3c4": 782, "\ud14c\uc2a4\ud06c\uc5d0\uc11c": 779, "\ud14c\uc2a4\ud06c\uc758": 782, "\ud14c\uc2a4\ud2b8": [782, 784, 814, 817], "\ud14c\uc2a4\ud2b8\ub97c": 782, "\ud14c\uc2a4\ud2b8\uc758": 779, "\ud14c\uc774\ube14": 788, "\ud14c\uc785\ub4e4\uc758": 784, "\ud150\uc11c": [783, 790, 791, 795, 809], "\ud150\uc11c\uac00": [782, 789], "\ud150\uc11c\ub294": [782, 789, 808], "\ud150\uc11c\ub4e4\uacfc": [783, 812], "\ud150\uc11c\ub4e4\uc5d0": 792, "\ud150\uc11c\ub4e4\uc744": [782, 811], "\ud150\uc11c\ub4e4\uc758": [779, 784, 802, 805, 806, 817], "\ud150\uc11c\ub85c": 788, "\ud150\uc11c\ub97c": [782, 783, 788, 790, 791, 812], "\ud150\uc11c\uc5d0": 808, "\ud150\uc11c\uc5ec\uc57c\ub9cc": 795, "\ud150\uc11c\uc640": 782, "\ud150\uc11c\uc758": [789, 791], "\ud150\uc11c\uc774\uace0": 806, "\ud15c\ud50c\ub9bf\uc740": 776, "\ud1a0\uc774": 784, "\ud1a0\ud53d\ub4e4\uc744": 800, "\ud1b5\uacc4\ub4e4\uc744": 784, "\ud1b5\uc2e0\uc5d0": 785, "\ud1b5\uc2e0\uc744": [781, 784], "\ud1b5\uc2e0\uc774": 782, "\ud1b5\ud569\ub420": 809, "\ud1b5\ud569\ud558\ub294": [794, 812], "\ud1b5\ud574\uc11c": [782, 783, 784, 788, 795, 801, 804, 805, 812, 816], "\ud1b5\ud574\uc11c\ub294": 801, "\ud234\ub4e4": 781, "\ud234\uc740": 782, "\ud29c\ud1a0\ub9ac\uc5bc": 795, "\ud29c\ud1a0\ub9ac\uc5bc\uc5d0\uc11c": 803, "\ud29c\ud50c": 791, "\ud2b8\ub808\uc774\ub108": [781, 782], "\ud2b8\ub808\uc774\ub108\uac00": 782, "\ud2b8\ub808\uc774\ub108\ub294": 784, "\ud2b8\ub808\uc774\ub108\ub4e4\uc740": [781, 782], "\ud2b8\ub808\uc774\ub108\ub4e4\uc758": 785, "\ud2b8\ub808\uc774\ub108\ub4e4\uc774": 782, "\ud2b8\ub808\uc774\ub108\uc5d0": 785, "\ud2b8\ub808\uc774\ub108\uc5d0\uac8c": [781, 782], "\ud2b8\ub9ac\ud50c": 792, "\ud2b8\uc704\ud130\uc758": 787, "\ud2b9\ubcc4\ud558\uac8c": 807, "\ud2b9\ubcc4\ud55c": [787, 792, 811], "\ud2b9\ubcc4\ud788": 788, "\ud2b9\uc131\uc744": 815, "\ud2b9\uc815": [777, 779, 783, 784, 792, 801, 804, 810, 814], "\ud2b9\uc9d5\uacfc": 791, "\ud2b9\uc9d5\uc744": [798, 815], "\ud2b9\ud788": [781, 792, 804], "\ud2f0\uc555\uc5d0": 814, "\ud2f0\uc785\uc5d0": 784, "\ud301\uc744": 800, "\ud30c\ub77c\uba54\ud130": [809, 810], "\ud30c\ub77c\uba54\ud130\ub4e4": 812, "\ud30c\ub77c\uba54\ud130\ub4e4\uacfc": 810, "\ud30c\ub77c\uba54\ud130\ub4e4\ub85c\uc368": 812, "\ud30c\ub77c\uba54\ud130\ub4e4\uc740": 795, "\ud30c\ub77c\uba54\ud130\ub4e4\uc744": [782, 798, 808], "\ud30c\ub77c\uba54\ud130\ub85c": [797, 811], "\ud30c\ub77c\uba54\ud130\ub97c": [779, 795, 801], "\ud30c\ub77c\uba54\ud130\uc774\ub2e4": 816, "\ud30c\ub77c\ubbf8\ud130\ub4e4\uc740": 795, "\ud30c\ub77c\ubbf8\ud130\ub85c": 795, "\ud30c\uc2f1\ud558\uace0": 792, "\ud30c\uc2f1\ud558\ub294": 788, "\ud30c\uc774\uc120": 791, "\ud30c\uc774\ud504\ub77c\uc778": [793, 813, 815, 817], "\ud30c\uc774\ud504\ub77c\uc778\uc5d0": 776, "\ud30c\uc774\ud504\ub77c\uc778\uc5d0\uc11c": 776, "\ud30c\uc774\ud504\ub77c\uc778\uc740": 815, "\ud30c\uc774\ud504\ub77c\uc778\uc744": [775, 776, 800], "\ud30c\uc774\ud504\ub77c\uc778\uc758": 775, "\ud30c\uc774\ud504\ub77c\uc778\uc774": [775, 776], "\ud30c\uc77c": [777, 784, 785, 814, 817], "\ud30c\uc77c\ub4e4": [784, 785], "\ud30c\uc77c\ub4e4\ub85c": 779, "\ud30c\uc77c\ub4e4\uc5d0": 784, "\ud30c\uc77c\ub4e4\uc740": [777, 784], "\ud30c\uc77c\ub4e4\uc744": [777, 792], "\ud30c\uc77c\ub4e4\uc758": [784, 785], "\ud30c\uc77c\ub4e4\uc774": 784, "\ud30c\uc77c\ub85c": [779, 784], "\ud30c\uc77c\ub85c\uc11c": 784, "\ud30c\uc77c\uc5d0": [777, 784, 792], "\ud30c\uc77c\uc5d0\uc11c": 784, "\ud30c\uc77c\uc740": 784, "\ud30c\uc77c\uc744": [777, 782, 784, 785], "\ud30c\uc77c\uc758": 784, "\ud30c\uc77c\uc774": [777, 784, 785], "\ud30c\uc77c\uc774\ub2e4": 784, "\ud30c\uccd0": 776, "\ud30c\ud0c0\uc154\ub2dd": 784, "\ud30c\ud0c0\uc158\uacfc": 782, "\ud30c\ud0c0\uc158\ub41c": 785, "\ud30c\ud0c0\uc158\uc5d0": 784, "\ud30c\ud130\uc158\ud558\uae30": 782, "\ud30c\ud2b8\ub85c": 798, "\ud30c\ud2f0\uc154\ub2dd": [776, 782], "\ud30c\ud2f0\uc154\ub2dd\uc740": 784, "\ud30c\ud2f0\uc154\ub2dd\uc744": 784, "\ud30c\ud2f0\uc154\ub2dd\uc758": 784, "\ud30c\ud2f0\uc154\ub2dd\ud55c\ub2e4": 784, "\ud30c\ud2f0\uc154\ub2dd\ud560": 784, "\ud30c\ud2f0\uc158": [781, 782, 783, 784, 785], "\ud30c\ud2f0\uc158\uacfc": 784, "\ud30c\ud2f0\uc158\ub418\uc5b4": 782, "\ud30c\ud2f0\uc158\ub41c": [781, 782, 784, 785], "\ud30c\ud2f0\uc158\ub4e4\uc5d0": 784, "\ud30c\ud2f0\uc158\ub4e4\uc744": [784, 785], "\ud30c\ud2f0\uc158\ub4e4\uc758": 784, "\ud30c\ud2f0\uc158\ub4e4\uc774": [784, 785], "\ud30c\ud2f0\uc158\uc5d0": 784, "\ud30c\ud2f0\uc158\uc5d0\uc11c": 782, "\ud30c\ud2f0\uc158\uc73c\ub85c": 784, "\ud30c\ud2f0\uc158\uc740": 784, "\ud30c\ud2f0\uc158\uc744": [782, 783, 784, 785], "\ud30c\ud2f0\uc158\uc758": [782, 784], "\ud30c\ud2f0\uc158\uc774": [784, 785], "\ud30c\ud2f0\uc158\uc774\ub2e4": 782, "\ud30c\ud2f0\uc158\ud558\uae30": 784, "\ud310\ub9e4\uc790": 787, "\ud310\ub9e4\ud568": 787, "\ud314\ub85c\uc6b0": 787, "\ud328\uc2a4": 808, "\ud328\uc2a4\uc6cc\ub4dc": 785, "\ud328\ud0a4\uc9c0": 778, "\ud328\ud0a4\uc9c0\ub4e4\uc744": 792, "\ud328\ud0a4\uc9c0\ub97c": [775, 784], "\ud398\uc774\ud37c\uc5d0\uc11c\ub294": 810, "\ud3b8\ub9ac\ud558\uace0": 776, "\ud3c9\uac00": [804, 814], "\ud3c9\uac00\ud558\ub294": 817, "\ud3c9\uade0": 815, "\ud3c9\uade0\uc744": 815, "\ud3ec\uba67\ub4e4\uc5d0\ub3c4": 792, "\ud3ec\uba67\ub4e4\uc774": 788, "\ud3ec\uba67\uc73c\ub85c": [784, 788, 792], "\ud3ec\uba67\uc744": 791, "\ud3ec\uba67\uc758": 808, "\ud3ec\uba67\uc774": 777, "\ud3ec\uba67\uc778": 777, "\ud3ec\ud2b8": 785, "\ud3ec\ud568": [781, 808], "\ud3ec\ud568\ub418\uc5b4": [784, 817], "\ud3ec\ud568\ub41c": 784, "\ud3ec\ud568\ub41c\ub2e4\ub294": 784, "\ud3ec\ud568\ub420": 801, "\ud3ec\ud568\ud558\uace0": [779, 781, 784, 801, 809], "\ud3ec\ud568\ud558\ub294": 801, "\ud3ec\ud568\ud558\ub294\ub370": 784, "\ud3ec\ud568\ud558\uc9c0": [801, 814], "\ud3ec\ud568\ud558\uc9c0\ub9cc": 801, "\ud3ec\ud568\ud55c": [787, 801, 805], "\ud3ec\ud568\ud55c\ub2e4": [784, 812], "\ud3ec\ud568\ud560": 801, "\ud3ec\ud568\ud574\uc57c": 801, "\ud3f4\ub354\ub294": 784, "\ud45c\uc2dc\ub41c": 801, "\ud45c\uc900": [775, 779], "\ud45c\uc900\uc801\uc778": 776, "\ud45c\ud604\ub418\uace0": 804, "\ud45c\ud604\ub418\uba70": 786, "\ud45c\ud604\ub418\uc5b4\uc57c": 816, "\ud45c\ud604\ub41c\ub2e4": [791, 792, 811, 812], "\ud45c\ud604\uc744": 817, "\ud45c\ud604\ud558\uace0": 787, "\ud45c\ud604\ud558\uae30": [787, 791, 795, 798], "\ud45c\ud604\ud558\ub294": [784, 787, 814], "\ud45c\ud604\ud558\ub294\ub370": 816, "\ud45c\ud604\ud558\uba74": 795, "\ud45c\ud604\ud560": 787, "\ud48d\ubd80\ud55c": 815, "\ud504\ub798\ud504\uc5d0\uc11c": 801, "\ud504\ub808\uc784\uc6cc\ud06c": 809, "\ud504\ub808\uc784\uc6cc\ud06c\uac00": 788, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0": 809, "\ud504\ub808\uc784\uc6cc\ud06c\uc5d0\uc11c": 801, "\ud504\ub808\uc784\uc6cc\ud06c\uc758": [782, 792, 809], "\ud504\ub85c\uadf8\ub798\ubc0d": 786, "\ud504\ub85c\uc138\uc2a4": [782, 815], "\ud504\ub85c\uc138\uc2a4\ub294": [781, 782, 784, 800], "\ud504\ub85c\uc138\uc2a4\ub41c": 780, "\ud504\ub85c\uc138\uc2a4\ub4e4\uacfc\uc758": 782, "\ud504\ub85c\uc138\uc2a4\ub4e4\uc740": [781, 782], "\ud504\ub85c\uc138\uc2a4\ub4e4\uc744": [781, 782], "\ud504\ub85c\uc138\uc2a4\ub97c": [781, 782, 784, 803, 815], "\ud504\ub85c\uc138\uc2a4\ub9cc": 782, "\ud504\ub85c\uc138\uc2a4\uc5d0": 782, "\ud504\ub85c\uc138\uc2a4\uc5d0\uc11c": 782, "\ud504\ub85c\uc138\uc2a4\uc758": [782, 785], "\ud504\ub85c\uc138\uc2f1": [775, 780], "\ud504\ub85c\uc138\uc2f1\ub418\uc5b4": 813, "\ud504\ub85c\uc138\uc2f1\ub41c": 780, "\ud504\ub85c\uc138\uc2f1\uc758": 779, "\ud504\ub85c\uc138\uc2f1\ud558\uace0": 776, "\ud504\ub85c\uc138\uc2f1\ud558\ub294": [775, 778, 779], "\ud504\ub85c\ud1a0\ud0c0\uc785": 791, "\ud504\ub85c\ud2f0\uc5b4\uac00": 801, "\ud504\ub85c\ud37c\ud2f0\ub4e4\uc744": 779, "\ud504\ub85c\ud37c\ud2f0\ub97c": 779, "\ud504\ub860\ud2f0\uc5b4": 801, "\ud504\ub860\ud2f0\uc5b4\uac00": 801, "\ud504\ub860\ud2f0\uc5b4\ub294": 801, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uacfc": 801, "\ud504\ub860\ud2f0\uc5b4\ub4e4\uc744": 801, "\ud504\ub860\ud2f0\uc5b4\ub85c": 801, "\ud504\ub860\ud2f0\uc5b4\ub97c": 801, "\ud504\ub860\ud2f0\uc5b4\uc5d0\uc11c": 801, "\ud504\ub860\ud2f0\uc5b4\uc758": 801, "\ud504\ub860\ud2f0\uc5b4\uc774\uace0": 801, "\ud53c\ucc98": [786, 788, 790, 792, 795, 797, 810, 815, 817], "\ud53c\ucc98\uac00": [789, 792, 807], "\ud53c\ucc98\ub294": 789, "\ud53c\ucc98\ub4e4\uacfc": 786, "\ud53c\ucc98\ub4e4\ub9cc": 789, "\ud53c\ucc98\ub4e4\uc740": 789, "\ud53c\ucc98\ub4e4\uc744": [787, 788, 792, 802, 807], "\ud53c\ucc98\ub77c\uace0": 794, "\ud53c\ucc98\ub85c": [789, 795, 814], "\ud53c\ucc98\ub97c": [781, 789, 794, 795, 801, 806, 807], "\ud53c\ucc98\ub9cc": 807, "\ud53c\ucc98\uc5d0": 797, "\ud53c\ucc98\uc640": [794, 795], "\ud53c\ucc98\uc758": [795, 806], "\ud53c\ucc98\uc774\uace0": [794, 811], "\ud53c\ucc98\uc774\ub2e4": 811, "\ud53c\uccd0": [776, 781, 782, 784, 790, 815, 817], "\ud53c\uccd0\uac00": [792, 806], "\ud53c\uccd0\ub294": [789, 801, 806, 812, 815], "\ud53c\uccd0\ub3c4": [784, 789, 817], "\ud53c\uccd0\ub4e4": [779, 807, 815], "\ud53c\uccd0\ub4e4\uacfc": [784, 815], "\ud53c\uccd0\ub4e4\ub85c\ubd80\ud130": 806, "\ud53c\uccd0\ub4e4\ub9cc": 782, "\ud53c\uccd0\ub4e4\uc5d0": [808, 814, 815], "\ud53c\uccd0\ub4e4\uc740": [795, 807, 813], "\ud53c\uccd0\ub4e4\uc744": [782, 784, 789, 792, 801, 802, 803, 805, 807, 815], "\ud53c\uccd0\ub4e4\uc758": 814, "\ud53c\uccd0\ub4e4\uc774": [802, 803, 807, 813], "\ud53c\uccd0\ub85c": 796, "\ud53c\uccd0\ub97c": [789, 792, 795, 796, 797, 800, 803, 806, 811, 815, 817], "\ud53c\uccd0\uc5d0": [797, 801, 808], "\ud53c\uccd0\uc640": [796, 797, 811], "\ud53c\uccd0\uc758": [797, 806, 817], "\ud53c\uccd0\uc774\ub2e4": 815, "\ud53c\ud558\ub294": 797, "\ud53c\ud560": 788, "\ud544\ub4dc": 795, "\ud544\ub4dc\ub294": 784, "\ud544\ub4dc\ub4e4\ub85c": 784, "\ud544\ub4dc\ub4e4\uc740": 784, "\ud544\ub4dc\ub4e4\uc744": 784, "\ud544\ub4dc\ub4e4\uc774\ub2e4": 784, "\ud544\ub4dc\ub97c": 784, "\ud544\ub4dc\uc5d0": [779, 784, 795], "\ud544\ub4dc\uc778": 784, "\ud544\uc694": 811, "\ud544\uc694\uac00": [784, 792, 797, 800, 801, 804], "\ud544\uc694\ub294": 782, "\ud544\uc694\ub85c": [782, 784], "\ud544\uc694\ub85c\ud558\uae30": 804, "\ud544\uc694\ud558\uace0": [800, 801], "\ud544\uc694\ud558\ub2e4": [782, 784, 801, 802, 806, 807, 814, 817], "\ud544\uc694\ud558\uc9c0": 792, "\ud544\uc694\ud55c": [776, 786, 800, 807, 809], "\ud544\uc694\ud55c\ub370": 804, "\ud544\uc694\ud55c\uc9c0": 807, "\ud558\uac70\ub098": 800, "\ud558\uac8c\ub41c\ub2e4": 814, "\ud558\uace0": [791, 799, 801, 802, 814], "\ud558\uae30": [779, 781, 792, 799, 801, 807, 815], "\ud558\ub098\uac00": [798, 817], "\ud558\ub098\ub294": [782, 791, 795, 797], "\ud558\ub098\ub85c": 782, "\ud558\ub098\ub85c\uc11c": 782, "\ud558\ub098\ub97c": [806, 817], "\ud558\ub098\uc529": 807, "\ud558\ub098\uc5d0\uc11c": 785, "\ud558\ub098\uc758": [779, 782, 784, 785, 792, 800, 804, 806, 811, 814, 815, 816], "\ud558\ub294": [776, 781, 782, 784, 795, 802, 803, 807, 808, 816], "\ud558\ub294\ub370": 801, "\ud558\ub294\uc9c0": 784, "\ud558\ub294\uc9c0\ub97c": [807, 810], "\ud558\uba70": 791, "\ud558\uba74": [801, 814], "\ud558\uba74\ub418\uae30": 805, "\ud558\uba74\ub41c\ub2e4": 801, "\ud558\uba74\uc11c": [781, 807], "\ud558\uc774\ub808\ubca8": 795, "\ud558\uc774\ud37c": 816, "\ud558\uc790": [776, 794], "\ud558\uc9c0\ub9cc": [779, 783, 784, 787, 791, 801, 804, 811], "\ud559\uc2b5": [782, 784, 793, 799, 801, 804, 811, 813], "\ud559\uc2b5\uacfc": [781, 800], "\ud559\uc2b5\ub420": 805, "\ud559\uc2b5\uc2dc": 784, "\ud559\uc2b5\uc2dc\ud0a4\ub294": [811, 816], "\ud559\uc2b5\uc5d0": [779, 781, 785, 804, 808], "\ud559\uc2b5\uc5d0\ub3c4": 807, "\ud559\uc2b5\uc5d0\uc11c": [799, 807], "\ud559\uc2b5\uc5d0\uc11c\ub294": [782, 783], "\ud559\uc2b5\uc740": [781, 808, 817], "\ud559\uc2b5\uc744": [781, 782, 783, 785, 800, 807, 808, 815], "\ud559\uc2b5\uc758": [811, 815], "\ud559\uc2b5\uc774": [779, 784, 785, 807, 816], "\ud559\uc2b5\uc774\ub2e4": 816, "\ud559\uc2b5\ud558\uae30": [781, 782, 793, 800, 815], "\ud559\uc2b5\ud558\ub294": [781, 800, 802, 807, 813], "\ud559\uc2b5\ud558\ub294\ub370": [800, 804], "\ud559\uc2b5\ud560": [802, 808, 810, 815], "\ud55c": [778, 781, 782, 783, 784, 785, 789, 792, 806, 812, 816, 817], "\ud55c\uac00\uc9c0": 795, "\ud55c\uac1c\uac00": 815, "\ud55c\uac1c\ub97c": 808, "\ud55c\uac1c\uc529": 815, "\ud55c\uac1c\uc5d0": 801, "\ud55c\uac1c\uc758": [778, 781, 784, 789, 792, 795, 815], "\ud55c\uae00": 793, "\ud55c\ub2e4": [777, 779, 781, 782, 783, 784, 785, 789, 791, 792, 795, 797, 798, 801, 802, 805, 806, 807, 808, 810, 811, 812, 814, 816], "\ud55c\ub2e4\uba74": [802, 814], "\ud55c\ubc88\uc5d0": 804, "\ud55c\ubc88\uc758": 815, "\ud560": [782, 784, 785, 788, 800, 801, 802, 807, 816], "\ud560\ub2f9\ub418\uc5b4": [784, 817], "\ud560\ub2f9\ub418\uc5c8\ub2e4\uba74": 784, "\ud560\ub2f9\ub41c": 784, "\ud560\ub2f9\ub41c\ub2e4": 784, "\ud560\ub2f9\uc73c\ub85c": 789, "\ud560\ub2f9\uc744": 783, "\ud560\ub2f9\ud558\ub294": 789, "\ud560\ub2f9\ud558\uc9c0": 784, "\ud560\ub2f9\ud55c": 784, "\ud560\ub2f9\ud560": 782, "\ud560\ub2f9\ud574\uc57c": 782, "\ud560\uc9c0\ub97c": 783, "\ud568\uaed8": [781, 782, 784, 788, 790, 797, 802, 817], "\ud568\uc218": [779, 791, 792, 794, 797, 808, 809, 817], "\ud568\uc218\uac00": [782, 795, 816], "\ud568\uc218\ub294": [782, 795, 801, 805, 810, 811, 812, 814, 815], "\ud568\uc218\ub4e4": [776, 803], "\ud568\uc218\ub4e4\uacfc": 795, "\ud568\uc218\ub4e4\ub85c": 811, "\ud568\uc218\ub4e4\uc5d0": 795, "\ud568\uc218\ub4e4\uc740": [788, 795, 803, 815], "\ud568\uc218\ub4e4\uc744": [782, 795], "\ud568\uc218\ub4e4\uc774": 801, "\ud568\uc218\ub85c": [777, 795, 814, 815, 816], "\ud568\uc218\ub85c\ub294": 795, "\ud568\uc218\ub97c": [776, 777, 780, 791, 795, 797, 801, 805, 806, 810, 811, 812, 814], "\ud568\uc218\uc548\uc5d0": 815, "\ud568\uc218\uc5d0": 779, "\ud568\uc218\uc5d0\uc11c": [779, 796, 809, 815], "\ud568\uc218\uc5d0\uc11c\uc758": 809, "\ud568\uc218\uc640": 797, "\ud568\uc218\uc758": [779, 795, 801, 810, 811], "\ud568\uc218\uc774\uace0": 801, "\ud568\uc218\uc774\ub2e4": [795, 801, 805, 810, 811, 812], "\ud569": 815, "\ud569\uc0b0\ud558\ub294": 815, "\ud569\uc740": 797, "\ud569\uccd0\uc11c": [794, 815], "\ud569\uccd0\uc57c\ud55c\ub2e4": [801, 807], "\ud569\uccd0\uc9c0\ub294\uc9c0\uc5d0": 804, "\ud569\ucce4\ub294\ub370": 795, "\ud569\uce58\uace0": 815, "\ud569\uce58\ub294": 798, "\ud569\uce58\ub294\ub370": 801, "\ud569\uce5c": 814, "\ud569\uce5c\ub2e4": 792, "\ud569\ud558\ub294": [795, 817], "\ud569\ud574\uc11c": 803, "\ud56d\uc0c1": [784, 788, 795, 801, 811], "\ud574\uacb0\ud558\uae30": 808, "\ud574\ub2f9": [785, 814, 817], "\ud574\ub2f9\ud558\ub294": [791, 807], "\ud574\ub2f9\ud55c\ub2e4": 792, "\ud574\uc11c": [782, 801], "\ud574\uc57c\ud55c\ub2e4": [806, 815], "\ud574\uc5d0": 787, "\ud574\uc8fc\uae30": 795, "\ud574\uc8fc\ub294": [777, 805], "\ud574\uc900\ub2e4": [781, 782, 807], "\ud575\uc2ec": 786, "\ud588\ub2e4\uba74": 787, "\ud588\uc73c\ub2c8": 806, "\ud589": [782, 784, 789], "\ud589\ub4e4": 806, "\ud589\ub82c\uacfc": 788, "\ud589\ub82c\uc744": 788, "\ud589\ub82c\uc758": 797, "\ud589\uc73c\ub85c": 806, "\ud589\uc740": 784, "\ud589\uc758": [782, 806], "\ud5a5\uc0c1\uc2dc\ucf1c\uc11c": 779, "\ud5a5\uc0c1\uc744": 803, "\ud5a5\uc0c1\ud558\uace0": 808, "\ud5a5\ud6c4": 784, "\ud5c8\uc6a9\ub41c\ub2e4": 789, "\ud5c8\uc6a9\ud55c\ub2e4": 808, "\ud5e4\ud14c\ub85c\uadf8\ub798\ud504\ub294": 798, "\ud604\uc0c1\uc744": 788, "\ud604\uc7ac": [781, 782], "\ud604\uc7ac\ub294": [782, 803], "\ud611\uccd0\uc9c4": 815, "\ud615\uc2dd\uc73c\ub85c": 784, "\ud615\ud0dc\ub85c": [781, 784, 787, 788, 795], "\ud615\ud0dc\uc758": [788, 792], "\ud615\ud0dc\uc774\uace0": 784, "\ud638\ucd9c\ub418\uace0": 812, "\ud638\ucd9c\ub418\uc5b4\uc57c": 782, "\ud638\ucd9c\ub41c\ub2e4": 782, "\ud638\ucd9c\ub420": 810, "\ud638\ucd9c\ub85c": [795, 810], "\ud638\ucd9c\uc2dc": 797, "\ud638\ucd9c\uc774": 795, "\ud638\ucd9c\ud558\uae30": 782, "\ud638\ucd9c\ud558\ub294": [795, 799], "\ud638\ucd9c\ud558\uc9c0": 795, "\ud638\ucd9c\ud55c": 782, "\ud638\ucd9c\ud55c\ub2e4": 815, "\ud638\ucd9c\ud560": [792, 795, 802, 805], "\ud638\ucd9c\ud574\uc57c": 797, "\ud638\ud658\ub418\ub294": [800, 813, 815], "\ud638\ud658\ub41c\ub2e4": 808, "\ud655\ub960": 805, "\ud655\ub960\ub4e4": 817, "\ud655\ub960\uc5d0": 801, "\ud655\uc778\ub418\uba74": 811, "\ud655\uc778\ud558\ub294": [777, 811], "\ud655\uc778\ud558\uc790": [779, 805], "\ud655\uc778\ud55c\ub2e4": 802, "\ud655\uc778\ud560": [779, 817], "\ud655\uc7a5\ud558\ub294": [811, 816], "\ud655\uc7a5\ud574\uc11c": 784, "\ud658\uacbd": 784, "\ud658\uc601\ud55c\ub2e4": 809, "\ud65c\uc131\ud654": [808, 811], "\ud65c\uc131\ud654\uc2dc\ud0ac": 795, "\ud65c\uc131\ud654\ud558\uba74": 808, "\ud65c\uc131\ud654\ud574\uc11c": 784, "\ud65c\uc6a9\ud558\uae30": [808, 811], "\ud65c\uc6a9\ud558\ub294": 797, "\ud65c\uc6a9\ud55c": 817, "\ud65c\uc6a9\ud55c\ub2e4": 817, "\ud65c\uc6a9\ud560": 817, "\ud65c\uc6a9\ud574\uc11c": 784, "\ud68c": 817, "\ud68c\uc18c": 788, "\ud6a8\uacfc\uc801\uc73c\ub85c": 815, "\ud6a8\uc728\uc801\uc73c\ub85c": [791, 794], "\ud6a8\uc728\uc801\uc774\uace0": 808, "\ud6a8\uc728\uc801\uc774\ub2e4": 780, "\ud6a8\uc728\uc801\uc778": [794, 806, 811], "\ud6a8\uc728\uc801\uc778\ub370": 797, "\ud6c4": [784, 797, 799, 800, 807, 815], "\ud6c4\uc5d0": [779, 801], "\ud6c4\uc5d0\ub294": 811, "\ud6c4\uc758": [779, 784], "\ud6c4\uc790\uac00": 797, "\ud6c4\uc790\ub294": 782, "\ud6e8\uc52c": [797, 800], "\ud754\ud558\uac8c": 796, "\ud754\ud55c": 795, "\ud754\ud788": [787, 799, 810, 814, 815], "\ud76c\uc18c\ud589\ub82c\uacfc": 788, "\ud788\ub4e0": 817, "\ud835\udc3e": 825}, "titles": ["dgl", "dgl.DGLGraph", "dgl.data", "dgl.dataloading", "dgl.distributed", "dgl.function", "dgl.geometry", "\ud83c\udd95 dgl.graphbolt", "dgl.multiprocessing", "dgl.ops", "dgl.optim", "dgl.sampling", "dgl.sparse", "API Reference", "Benchmark the performance of KNN algorithms", "dgl.nn (MXNet)", "dgl.nn (PyTorch)", "dgl.nn (TensorFlow)", "dgl.nn.functional", "dgl.transforms", "User-defined Functions", "Contribute to DGL", "DGL Foreign Function Interface (FFI)", "Environment Variables", "Frequently Asked Questions (FAQ)", "&lt;no title&gt;", "dgl.DGLGraph.__getitem__", "dgl.DGLGraph.add_edges", "dgl.DGLGraph.add_nodes", "dgl.DGLGraph.add_self_loop", "dgl.DGLGraph.adj", "dgl.DGLGraph.adj_external", "dgl.DGLGraph.adj_tensors", "dgl.DGLGraph.adjacency_matrix", "dgl.DGLGraph.apply_edges", "dgl.DGLGraph.apply_nodes", "dgl.DGLGraph.batch_num_edges", "dgl.DGLGraph.batch_num_nodes", "dgl.DGLGraph.batch_size", "dgl.DGLGraph.canonical_etypes", "dgl.DGLGraph.cpu", "dgl.DGLGraph.create_formats_", "dgl.DGLGraph.device", "dgl.DGLGraph.dstdata", "dgl.DGLGraph.dstnodes", "dgl.DGLGraph.dsttypes", "dgl.DGLGraph.edata", "dgl.DGLGraph.edge_attr_schemes", "dgl.DGLGraph.edge_ids", "dgl.DGLGraph.edge_subgraph", "dgl.DGLGraph.edge_type_subgraph", "dgl.DGLGraph.edges", "dgl.DGLGraph.etypes", "dgl.DGLGraph.filter_edges", "dgl.DGLGraph.filter_nodes", "dgl.DGLGraph.find_edges", "dgl.DGLGraph.formats", "dgl.DGLGraph.has_edges_between", "dgl.DGLGraph.has_nodes", "dgl.DGLGraph.idtype", "dgl.DGLGraph.in_degrees", "dgl.DGLGraph.in_edges", "dgl.DGLGraph.inc", "dgl.DGLGraph.incidence_matrix", "dgl.DGLGraph.int", "dgl.DGLGraph.is_homogeneous", "dgl.DGLGraph.is_multigraph", "dgl.DGLGraph.is_pinned", "dgl.DGLGraph.is_unibipartite", "dgl.DGLGraph.line_graph", "dgl.DGLGraph.local_scope", "dgl.DGLGraph.long", "dgl.DGLGraph.metagraph", "dgl.DGLGraph.multi_update_all", "dgl.DGLGraph.ndata", "dgl.DGLGraph.node_attr_schemes", "dgl.DGLGraph.node_type_subgraph", "dgl.DGLGraph.nodes", "dgl.DGLGraph.ntypes", "dgl.DGLGraph.num_dst_nodes", "dgl.DGLGraph.num_edges", "dgl.DGLGraph.num_nodes", "dgl.DGLGraph.num_src_nodes", "dgl.DGLGraph.number_of_dst_nodes", "dgl.DGLGraph.number_of_edges", "dgl.DGLGraph.number_of_nodes", "dgl.DGLGraph.number_of_src_nodes", "dgl.DGLGraph.out_degrees", "dgl.DGLGraph.out_edges", "dgl.DGLGraph.pin_memory_", "dgl.DGLGraph.predecessors", "dgl.DGLGraph.prop_edges", "dgl.DGLGraph.prop_nodes", "dgl.DGLGraph.pull", "dgl.DGLGraph.push", "dgl.DGLGraph.remove_edges", "dgl.DGLGraph.remove_nodes", "dgl.DGLGraph.remove_self_loop", "dgl.DGLGraph.reorder_graph", "dgl.DGLGraph.reverse", "dgl.DGLGraph.send_and_recv", "dgl.DGLGraph.set_batch_num_edges", "dgl.DGLGraph.set_batch_num_nodes", "dgl.DGLGraph.srcdata", "dgl.DGLGraph.srcnodes", "dgl.DGLGraph.srctypes", "dgl.DGLGraph.subgraph", "dgl.DGLGraph.successors", "dgl.DGLGraph.to", "dgl.DGLGraph.to_canonical_etype", "dgl.DGLGraph.to_cugraph", "dgl.DGLGraph.to_simple", "dgl.DGLGraph.unpin_memory_", "dgl.DGLGraph.update_all", "dgl.add_edges", "dgl.add_nodes", "dgl.add_reverse_edges", "dgl.add_self_loop", "dgl.adj_product_graph", "dgl.adj_sum_graph", "dgl.adjusted_homophily", "dgl.apply_each", "dgl.batch", "dgl.bfs_edges_generator", "dgl.bfs_nodes_generator", "dgl.bipartite_from_networkx", "dgl.bipartite_from_scipy", "dgl.block_to_graph", "dgl.broadcast_edges", "dgl.broadcast_nodes", "dgl.compact_graphs", "dgl.create_block", "AIFBDataset", "AMDataset", "ActorDataset", "AmazonCoBuyComputerDataset", "AmazonCoBuyPhotoDataset", "AmazonRatingsDataset", "AsGraphPredDataset", "AsLinkPredDataset", "AsNodePredDataset", "BA2MotifDataset", "BACommunityDataset", "BAShapeDataset", "BGSDataset", "BitcoinOTCDataset", "CIFAR10SuperPixelDataset", "CLUSTERDataset", "CSVDataset", "ChameleonDataset", "CiteseerGraphDataset", "CoauthorCSDataset", "CoauthorPhysicsDataset", "CoraFullDataset", "CoraGraphDataset", "CornellDataset", "DGLDataset", "FB15k237Dataset", "FB15kDataset", "FakeNewsDataset", "FlickrDataset", "FraudAmazonDataset", "FraudDataset", "FraudYelpDataset", "GDELTDataset", "GINDataset", "ICEWS18Dataset", "KarateClubDataset", "LegacyTUDataset", "MNISTSuperPixelDataset", "MUTAGDataset", "MinesweeperDataset", "MiniGCDataset", "MovieLensDataset", "PATTERNDataset", "PPIDataset", "PubmedGraphDataset", "QM7bDataset", "QM9Dataset", "QM9EdgeDataset", "QuestionsDataset", "RedditDataset", "RomanEmpireDataset", "SBMMixtureDataset", "SSTDataset", "SquirrelDataset", "TUDataset", "TexasDataset", "TolokersDataset", "TreeCycleDataset", "TreeGridDataset", "WN18Dataset", "WikiCSDataset", "WisconsinDataset", "YelpDataset", "ZINCDataset", "Subset", "add_node_property_split", "add_nodepred_split", "check_sha1", "download", "extract_archive", "get_download_dir", "load_info", "load_labels", "mask_nodes_by_property", "save_info", "split_dataset", "dgl.dataloading.BlockSampler", "ClusterGCNSampler", "DataLoader", "DistEdgeDataLoader", "DistNodeDataLoader", "GraphDataLoader", "LaborSampler", "MultiLayerFullNeighborSampler", "NeighborSampler", "SAINTSampler", "Sampler", "ShaDowKHopSampler", "dgl.dataloading.as_edge_prediction_sampler", "LazyFeature", "set_dst_lazy_features", "set_edge_lazy_features", "set_node_lazy_features", "set_src_lazy_features", "GlobalUniform", "PerSourceUniform", "Uniform", "dgl.dfs_edges_generator", "dgl.dfs_labeled_edges_generator", "dgl.distributed.dgl_partition_to_graphbolt", "dgl.distributed.edge_split", "dgl.distributed.find_edges", "dgl.distributed.in_subgraph", "dgl.distributed.initialize", "dgl.distributed.load_partition", "dgl.distributed.load_partition_book", "dgl.distributed.load_partition_feats", "dgl.distributed.node_split", "dgl.distributed.partition_graph", "dgl.distributed.sample_etype_neighbors", "dgl.distributed.sample_neighbors", "dgl.double_radius_node_labeling", "dgl.edge_homophily", "dgl.edge_label_informativeness", "dgl.edge_subgraph", "dgl.edge_type_subgraph", "dgl.from_cugraph", "dgl.from_networkx", "dgl.from_scipy", "dgl.function.copy_e", "dgl.function.copy_u", "dgl.function.e_add_u", "dgl.function.e_add_v", "dgl.function.e_div_u", "dgl.function.e_div_v", "dgl.function.e_dot_u", "dgl.function.e_dot_v", "dgl.function.e_mul_u", "dgl.function.e_mul_v", "dgl.function.e_sub_u", "dgl.function.e_sub_v", "dgl.function.max", "dgl.function.mean", "dgl.function.min", "dgl.function.sum", "dgl.function.u_add_e", "dgl.function.u_add_v", "dgl.function.u_div_e", "dgl.function.u_div_v", "dgl.function.u_dot_e", "dgl.function.u_dot_v", "dgl.function.u_mul_e", "dgl.function.u_mul_v", "dgl.function.u_sub_e", "dgl.function.u_sub_v", "dgl.function.v_add_e", "dgl.function.v_add_u", "dgl.function.v_div_e", "dgl.function.v_div_u", "dgl.function.v_dot_e", "dgl.function.v_dot_u", "dgl.function.v_mul_e", "dgl.function.v_mul_u", "dgl.function.v_sub_e", "dgl.function.v_sub_u", "dgl.graph", "BasicFeatureStore", "BuiltinDataset", "CPUCachedFeature", "CopyTo", "DataLoader", "Dataset", "DiskBasedFeature", "DistributedItemSampler", "Feature", "FeatureFetcher", "FeatureStore", "FusedCSCSamplingGraph", "GPUCachedFeature", "HeteroItemSet", "InSubgraphSampler", "ItemSampler", "ItemSet", "LayerNeighborSampler", "LegacyDataset", "MiniBatch", "MiniBatchTransformer", "NegativeSampler", "NeighborSampler", "OnDiskDataset", "SampledSubgraph", "SampledSubgraphImpl", "SamplingGraph", "SubgraphSampler", "Task", "TemporalLayerNeighborSampler", "TemporalNeighborSampler", "TorchBasedFeature", "TorchBasedFeatureStore", "UniformNegativeSampler", "dgl.graphbolt.add_reverse_edges", "dgl.graphbolt.compact_csc_format", "dgl.graphbolt.etype_str_to_tuple", "dgl.graphbolt.etype_tuple_to_str", "dgl.graphbolt.exclude_seed_edges", "dgl.graphbolt.expand_indptr", "dgl.graphbolt.from_dglgraph", "dgl.graphbolt.fused_csc_sampling_graph", "dgl.graphbolt.index_select", "dgl.graphbolt.isin", "dgl.graphbolt.load_from_shared_memory", "dgl.graphbolt.seed", "dgl.graphbolt.unique_and_compact", "dgl.graphbolt.unique_and_compact_csc_formats", "dgl.heterograph", "dgl.in_subgraph", "dgl.is_libxsmm_enabled", "dgl.khop_adj", "dgl.khop_graph", "dgl.khop_in_subgraph", "dgl.khop_out_subgraph", "dgl.knn_graph", "dgl.lap_pe", "dgl.laplacian_lambda_max", "dgl.line_graph", "dgl.linkx_homophily", "dgl.load_graphs", "dgl.max_edges", "dgl.max_nodes", "dgl.mean_edges", "dgl.mean_nodes", "dgl.merge", "dgl.metapath_reachable_graph", "dgl.metis_partition", "dgl.metis_partition_assignment", "dgl.multiprocessing.pytorch.call_once_and_share", "dgl.multiprocessing.pytorch.shared_tensor", "dgl.nn.functional.edge_softmax", "HeteroGraphConv", "AGNNConv", "APPNPConv", "ChebConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "EdgeConv", "GATConv", "GINConv", "GMMConv", "GatedGraphConv", "GraphConv", "NNConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SortPooling", "SumPooling", "Sequential", "DeepWalk", "HeteroEmbedding", "HeteroGraphConv", "HeteroLinear", "MetaPath2Vec", "TypedLinear", "AGNNConv", "APPNPConv", "AtomicConv", "CFConv", "ChebConv", "CuGraphGATConv", "CuGraphRelGraphConv", "CuGraphSAGEConv", "DGNConv", "DenseChebConv", "DenseGraphConv", "DenseSAGEConv", "DotGatConv", "EGATConv", "EGNNConv", "EdgeConv", "EdgeGATConv", "EdgeWeightNorm", "GATConv", "GATv2Conv", "GCN2Conv", "GINConv", "GINEConv", "GMMConv", "GatedGCNConv", "GatedGraphConv", "GraphConv", "GroupRevRes", "HGTConv", "NNConv", "PNAConv", "RelGraphConv", "SAGEConv", "SGConv", "TAGConv", "TWIRLSConv", "TWIRLSUnfoldingAndAttention", "GNNExplainer", "HeteroGNNExplainer", "HeteroPGExplainer", "HeteroSubgraphX", "PGExplainer", "SubgraphX", "KNNGraph", "RadiusGraph", "SegmentedKNNGraph", "AvgPooling", "GlobalAttentionPooling", "MaxPooling", "Set2Set", "SetTransformerDecoder", "SetTransformerEncoder", "SortPooling", "SumPooling", "WeightAndSum", "BiasedMHA", "DegreeEncoder", "EGTLayer", "GraphormerLayer", "LapPosEncoder", "PathEncoder", "SpatialEncoder", "SpatialEncoder3d", "EdgePredictor", "TransE", "TransR", "NodeEmbedding", "JumpingKnowledge", "LabelPropagation", "Sequential", "WeightBasis", "APPNPConv", "ChebConv", "GATConv", "GINConv", "GraphConv", "RelGraphConv", "SAGEConv", "SGConv", "AvgPooling", "GlobalAttentionPooling", "HeteroGraphConv", "MaxPooling", "SortPooling", "SumPooling", "dgl.node_homophily", "dgl.node_label_informativeness", "dgl.node_subgraph", "dgl.node_type_subgraph", "dgl.norm_by_dst", "dgl.ops.copy_e_max", "dgl.ops.copy_e_mean", "dgl.ops.copy_e_min", "dgl.ops.copy_e_sum", "dgl.ops.copy_u", "dgl.ops.copy_u_max", "dgl.ops.copy_u_mean", "dgl.ops.copy_u_min", "dgl.ops.copy_u_sum", "dgl.ops.copy_v", "dgl.ops.e_add_u", "dgl.ops.e_add_v", "dgl.ops.e_div_u", "dgl.ops.e_div_v", "dgl.ops.e_dot_u", "dgl.ops.e_dot_v", "dgl.ops.e_mul_u", "dgl.ops.e_mul_v", "dgl.ops.e_sub_u", "dgl.ops.e_sub_v", "dgl.ops.gather_mm", "dgl.ops.gsddmm", "dgl.ops.gspmm", "dgl.ops.segment_mm", "dgl.ops.segment_reduce", "dgl.ops.u_add_e", "dgl.ops.u_add_e_max", "dgl.ops.u_add_e_mean", "dgl.ops.u_add_e_min", "dgl.ops.u_add_e_sum", "dgl.ops.u_add_v", "dgl.ops.u_div_e", "dgl.ops.u_div_e_max", "dgl.ops.u_div_e_mean", "dgl.ops.u_div_e_min", "dgl.ops.u_div_e_sum", "dgl.ops.u_div_v", "dgl.ops.u_dot_e", "dgl.ops.u_dot_v", "dgl.ops.u_mul_e", "dgl.ops.u_mul_e_max", "dgl.ops.u_mul_e_mean", "dgl.ops.u_mul_e_min", "dgl.ops.u_mul_e_sum", "dgl.ops.u_mul_v", "dgl.ops.u_sub_e", "dgl.ops.u_sub_e_max", "dgl.ops.u_sub_e_mean", "dgl.ops.u_sub_e_min", "dgl.ops.u_sub_e_sum", "dgl.ops.u_sub_v", "dgl.ops.v_add_e", "dgl.ops.v_add_u", "dgl.ops.v_div_e", "dgl.ops.v_div_u", "dgl.ops.v_dot_e", "dgl.ops.v_dot_u", "dgl.ops.v_mul_e", "dgl.ops.v_mul_u", "dgl.ops.v_sub_e", "dgl.ops.v_sub_u", "dgl.out_subgraph", "dgl.partition_graph_with_halo", "dgl.prop_edges", "dgl.prop_edges_dfs", "dgl.prop_nodes", "dgl.prop_nodes_bfs", "dgl.prop_nodes_topo", "dgl.radius_graph", "dgl.rand_bipartite", "dgl.rand_graph", "dgl.random_walk_pe", "dgl.readout_edges", "dgl.readout_nodes", "dgl.remove_edges", "dgl.remove_nodes", "dgl.remove_self_loop", "dgl.reorder_graph", "dgl.reverse", "dgl.sampling.PinSAGESampler", "dgl.sampling.global_uniform_negative_sampling", "dgl.sampling.node2vec_random_walk", "dgl.sampling.pack_traces", "dgl.sampling.random_walk", "dgl.sampling.sample_labors", "dgl.sampling.sample_neighbors", "dgl.sampling.sample_neighbors_biased", "dgl.sampling.select_topk", "dgl.save_graphs", "dgl.seed", "dgl.segmented_knn_graph", "dgl.shortest_dist", "dgl.slice_batch", "dgl.softmax_edges", "dgl.softmax_nodes", "dgl.sort_csc_by_tag", "dgl.sort_csr_by_tag", "dgl.sparse.SparseMatrix.T", "dgl.sparse.SparseMatrix.coalesce", "dgl.sparse.SparseMatrix.col", "dgl.sparse.SparseMatrix.coo", "dgl.sparse.SparseMatrix.cpu", "dgl.sparse.SparseMatrix.csc", "dgl.sparse.SparseMatrix.csr", "dgl.sparse.SparseMatrix.cuda", "dgl.sparse.SparseMatrix.device", "dgl.sparse.SparseMatrix.double", "dgl.sparse.SparseMatrix.dtype", "dgl.sparse.SparseMatrix.float", "dgl.sparse.SparseMatrix.has_duplicate", "dgl.sparse.SparseMatrix.indices", "dgl.sparse.SparseMatrix.int", "dgl.sparse.SparseMatrix.long", "dgl.sparse.SparseMatrix.neg", "dgl.sparse.SparseMatrix.nnz", "dgl.sparse.SparseMatrix.reduce", "dgl.sparse.SparseMatrix.row", "dgl.sparse.SparseMatrix.shape", "dgl.sparse.SparseMatrix.smax", "dgl.sparse.SparseMatrix.smean", "dgl.sparse.SparseMatrix.smin", "dgl.sparse.SparseMatrix.softmax", "dgl.sparse.SparseMatrix.sum", "dgl.sparse.SparseMatrix.t", "dgl.sparse.SparseMatrix.to", "dgl.sparse.SparseMatrix.to_dense", "dgl.sparse.SparseMatrix.transpose", "dgl.sparse.SparseMatrix.val", "dgl.sparse.add", "dgl.sparse.bsddmm", "dgl.sparse.bspmm", "dgl.sparse.diag", "dgl.sparse.div", "dgl.sparse.from_coo", "dgl.sparse.from_csc", "dgl.sparse.from_csr", "dgl.sparse.identity", "dgl.sparse.matmul", "dgl.sparse.mul", "dgl.sparse.power", "dgl.sparse.sddmm", "dgl.sparse.softmax", "dgl.sparse.sp_add_v", "dgl.sparse.sp_broadcast_v", "dgl.sparse.sp_div_v", "dgl.sparse.sp_mul_v", "dgl.sparse.sp_sub_v", "dgl.sparse.spmatrix", "dgl.sparse.spmm", "dgl.sparse.spspmm", "dgl.sparse.sub", "dgl.sparse.val_like", "dgl.sum_edges", "dgl.sum_nodes", "dgl.svd_pe", "dgl.to_bidirected", "dgl.to_block", "dgl.to_cugraph", "dgl.to_double", "dgl.to_float", "dgl.to_half", "dgl.to_heterogeneous", "dgl.to_homogeneous", "dgl.to_networkx", "dgl.to_simple", "dgl.to_simple_graph", "dgl.topk_edges", "dgl.topk_nodes", "dgl.topological_nodes_generator", "AddEdge", "AddMetaPaths", "AddReverse", "AddSelfLoop", "BaseTransform", "Compose", "DropEdge", "DropNode", "FeatMask", "GCNNorm", "GDC", "HeatKernel", "KHopGraph", "LapPE", "LineGraph", "NodeShuffle", "PPR", "RandomWalkPE", "RemoveSelfLoop", "RowFeatNormalizer", "SIGNDiffusion", "SVDPE", "ToLevi", "ToSimple", "dgl.udf.EdgeBatch.batch_size", "dgl.udf.EdgeBatch.data", "dgl.udf.EdgeBatch.dst", "dgl.udf.EdgeBatch.edges", "dgl.udf.EdgeBatch.src", "dgl.udf.NodeBatch.batch_size", "dgl.udf.NodeBatch.data", "dgl.udf.NodeBatch.mailbox", "dgl.udf.NodeBatch.nodes", "dgl.unbatch", "dgl.use_libxsmm", "Prepare Data", "\ud83c\udd95 Tutorial: Graph Transformer", "Build Model", "Chapter 4: Graph Data Pipeline", "4.1 DGLDataset class", "4.2 Download raw data (optional)", "4.6 Loading data from CSV files", "4.5 Loading OGB datasets using <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> package", "4.3 Process data", "4.4 Save and load data", "Chapter 7: Distributed Training", "7.3 Programming APIs", "7.5 Heterogeneous Graph Under The Hood", "7.4 Advanced Graph Partitioning", "7.1 Data Preprocessing", "7.2 Tools for launching distributed training/inference", "Chapter 1: Graph", "1.1 Some Basic Definitions about Graphs (Graphs 101)", "1.4 Creating Graphs from External Sources", "1.3 Node and Edge Features", "1.6 Using DGLGraph on a GPU", "1.2 Graphs, Nodes, and Edges", "1.5 Heterogeneous Graphs", "User Guide", "Chapter 2: Message Passing", "2.1 Built-in Functions and Message Passing APIs", "2.2 Writing Efficient Message Passing Code", "2.5 Message Passing on Heterogeneous Graph", "2.3 Apply Message Passing On Part Of The Graph", "Chapter 6: Stochastic Training on Large Graphs", "6.4 Implementing Custom Graph Samplers", "6.2 Training GNN for Edge Classification with Neighborhood Sampling", "6.8 Using GPU for Neighborhood Sampling", "6.7 Exact Offline Inference on Large Graphs", "6.3 Training GNN for Link Prediction with Neighborhood Sampling", "6.6 Implementing Custom GNN Module for Mini-batch Training", "6.1 Training GNN for Node Classification with Neighborhood Sampling", "6.9 Data Loading Parallelism", "6.5 Training GNN with DGL sparse", "Chapter 8: Mixed Precision Training", "Chapter 3: Building GNN Modules", "3.1 DGL NN Module Construction Function", "3.2 DGL NN Module Forward Function", "3.3 Heterogeneous GraphConv Module", "Chapter 5: Training Graph Neural Networks", "5.2 Edge Classification/Regression", "5.5 Use of Edge Weights", "5.4 Graph Classification", "5.3 Link Prediction", "5.1 Node Classification/Regression", "\u7b2c4\u7ae0\uff1a\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053", "4.1 DGLDataset\u7c7b", "4.2 \u4e0b\u8f7d\u539f\u59cb\u6570\u636e\uff08\u53ef\u9009\uff09", "4.5 \u4f7f\u7528ogb\u5305\u5bfc\u5165OGB\u6570\u636e\u96c6", "4.3 \u5904\u7406\u6570\u636e", "4.4 \u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e", "\u7b2c7\u7ae0\uff1a\u5206\u5e03\u5f0f\u8bad\u7ec3", "7.2 \u5206\u5e03\u5f0f\u8ba1\u7b97\u7684API", "7.1 \u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406", "7.3 \u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3/\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177", "\u7b2c1\u7ae0\uff1a\u56fe", "1.1 \u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5", "1.4 \u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe", "1.3 \u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81", "1.6 \u5728GPU\u4e0a\u4f7f\u7528DGLGraph", "1.2 \u56fe\u3001\u8282\u70b9\u548c\u8fb9", "1.5 \u5f02\u6784\u56fe", "\u7528\u6237\u6307\u5357\u3010\u5305\u542b\u8fc7\u65f6\u4fe1\u606f\u3011", "\u7b2c2\u7ae0\uff1a\u6d88\u606f\u4f20\u9012\u8303\u5f0f", "2.1 \u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012API", "2.2 \u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801", "2.5 \u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "2.3 \u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012", "\u7b2c6\u7ae0\uff1a\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a\uff08\u6279\u6b21\uff09\u8bad\u7ec3", "6.4 \u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668", "6.2 \u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.6 \u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad", "6.3 \u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "6.5 \u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684GNN\u6a21\u5757", "6.1 \u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5", "\u7b2c3\u7ae0\uff1a\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc\uff08GNN\uff09\u6a21\u5757", "3.1 DGL NN\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570", "3.2 \u7f16\u5199DGL NN\u6a21\u5757\u7684forward\u51fd\u6570", "3.3 \u5f02\u6784\u56fe\u4e0a\u7684GraphConv\u6a21\u5757", "\u7b2c5\u7ae0\uff1a\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc", "5.2 \u8fb9\u5206\u7c7b/\u56de\u5f52", "5.5 \u4f7f\u7528\u8fb9\u6743\u91cd", "5.4 \u6574\u56fe\u5206\u7c7b", "5.3 \u94fe\u63a5\u9884\u6d4b", "5.1 \u8282\u70b9\u5206\u7c7b/\u56de\u5f52", "4\uc7a5: \uadf8\ub798\ud504 \ub370\uc774\ud130 \ud30c\uc774\ud504\ub77c\uc778", "4.1 DGLDataset \ud074\ub798\uc2a4", "4.2 Raw \ub370\uc774\ud130 \ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30 (optional)", "4.5 <code class=\"docutils literal notranslate\"><span class=\"pre\">ogb</span></code> \ud328\ud0a4\uc9c0\ub97c \uc0ac\uc6a9\ud574\uc11c OGB \ub370\uc774\ud130\uc14b\ub4e4 \ub85c\ub4dc\ud558\uae30", "4.3 \ub370\uc774\ud130 \ud504\ub85c\uc138\uc2f1", "4.4 \ub370\uc774\ud130 \uc800\uc7a5\uacfc \ub85c\ub529", "7\uc7a5: \ubd84\uc0b0 \ud559\uc2b5", "7.2 \ubd84\uc0b0 APIs", "7.3 \ubd84\uc0b0 heterogeneous \uadf8\ub798\ud504 \ud559\uc2b5\ud558\uae30", "7.1 \ubd84\uc0b0 \ud559\uc2b5\uc744 \uc704\ud55c \uc804\ucc98\ub9ac", "7.4 \ubd84\uc0b0 \ud559\uc2b5/\ucd94\ub860\uc744 \ub7f0\uce6d\ud558\uae30 \uc704\ud55c \ud234\ub4e4", "1\uc7a5: \uadf8\ub798\ud504", "1.1 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c \uba87\uac00\uc9c0 \uae30\ubcf8\uc801\uc778 \uc815\uc758 (\uadf8\ub798\ud504 101)", "1.4 \uc678\ubd80 \uc18c\uc2a4\ub97c \uc0ac\uc6a9\ud55c \uadf8\ub798\ud504 \uc0dd\uc131\ud558\uae30", "1.3 \ub178\ub4dc\uc640 \uc5d0\uc9c0\uc758 \ud53c\ucc98", "1.6 GPU\uc5d0\uc11c DGLGraph \uc0ac\uc6a9\ud558\uae30", "1.2 \uadf8\ub798\ud504, \ub178\ub4dc, \uadf8\ub9ac\uace0 \uc5d0\uc9c0", "1.5 \uc774\uc885 \uadf8\ub798\ud504 (Heterogeneous Graph)", "\uc0ac\uc6a9\uc790 \uac00\uc774\ub4dc[\uc2dc\ub300\uc5d0 \ub4a4\uccd0\uc9c4]", "2\uc7a5: \uba54\uc9c0\uc2dc \uc804\ub2ec(Message Passing)", "2.1 \ube4c\ud2b8\uc778 \ud568\uc218 \ubc0f \uba54\uc2dc\uc9c0 \uc804\ub2ec API\ub4e4", "2.4 \uba54\uc2dc\uc9c0 \uc804\ub2ec\uc5d0 \uc5d0\uc9c0 \uac00\uc911\uce58 \uc801\uc6a9\ud558\uae30", "2.2 \ud6a8\uc728\uc801\uc778 \uba54\uc2dc\uc9c0 \uc804\ub2ec \ucf54\ub4dc \uc791\uc131 \ubc29\ubc95", "2.5 \uc774\uc885 \uadf8\ub798\ud504\uc5d0\uc11c\uc758 \uba54\uc2dc\uc9c0 \uc804\ub2ec", "2.3 \uadf8\ub798\ud504 \uc77c\ubd80\uc5d0 \uba54\uc9c0\uc2dc \uc804\ub2ec \uc801\uc6a9\ud558\uae30", "6\uc7a5: \ud070 \uadf8\ub798\ud504\uc5d0 \ub300\ud55c stochastic \ud559\uc2b5", "6.4 \uc774\uc6c3 \uc0d8\ud50c\ub7ec \ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30", "6.2 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \uc5d0\uc9c0 \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.7 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc5d0 GPU \uc0ac\uc6a9\ud558\uae30", "6.6 \ud070 \uadf8\ub798\ud504\ub4e4\uc5d0 \ub300\ud578 \uc815\ud655\ud55c \uc624\ud504\ub77c\uc778 \ucd94\ub860", "6.3 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub9c1\ud06c \uc608\uce21 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "6.5 \ubbf8\ub2c8-\ubc30\uce58 \ud559\uc2b5\uc744 \uc704\ud55c \ucee4\uc2a4\ud140 GNN \ubaa8\ub4c8 \uad6c\ud604\ud558\uae30", "6.1 \uc774\uc6c3 \uc0d8\ud50c\ub9c1\uc744 \uc0ac\uc6a9\ud55c \ub178\ub4dc \ubd84\ub958 GNN \ubaa8\ub378 \ud559\uc2b5\ud558\uae30", "8\uc7a5: Mixed Precision \ud559\uc2b5", "3\uc7a5: GNN \ubaa8\ub4c8 \ub9cc\ub4e4\uae30", "3.1 DGL NN \ubaa8\ub4c8 \uc0dd\uc131 \ud568\uc218", "3.2 DGL NN \ubaa8\ub4c8\uc758 Forward \ud568\uc218", "3.3 Heterogeneous GraphConv \ubaa8\ub4c8", "5\uc7a5: \uadf8\ub798\ud504 \ub274\ub7f4 \ub124\ud2b8\uc6cc\ud06c \ud559\uc2b5\ud558\uae30", "5.2 \uc5d0\uc9c0 \ubd84\ub958 \ubc0f \ub9ac\uadf8\ub808\uc158(Regression)", "5.4 \uadf8\ub798\ud504 \ubd84\ub958", "5.3 \ub9c1\ud06c \uc608\uce21", "5.1 \ub178\ub4dc \ubd84\ub958/\ub9ac\uadf8\ub798\uc158(Regression)", "Welcome to Deep Graph Library Tutorials and Documentation", "Install and Setup", "Building a Graph Convolutional Network Using Sparse Matrices", "Graph Diffusion in Graph Neural Networks", "Graph Transformer in a Nutshell", "Hypergraph Neural Networks", "Tutorials: dgl.sparse", "Quickstart", "Performance Benchmarks", "Resources", "Computation times", "\ud83c\udd95 Stochastic Training of GNNs with GraphBolt", "Link Prediction", "Multi-GPU Node Classification", "Neighbor Sampling Overview", "Node Classification", "Composing OnDiskDataset from raw data", "YAML specification", "OnDiskDataset for Heterogeneous Graph", "OnDiskDataset for Homogeneous Graph", "Node Classification with DGL", "How Does DGL Represent A Graph?", "Write your own GNN module", "Link Prediction using Graph Neural Networks", "Training a GNN for Graph Classification", "Make Your Own Dataset", "A Blitz Introduction to DGL", "Computation times", "Improve Scalability on Multi-Core CPUs", "CPU Best Practices", "Training on CPUs", "Computation times", "Distributed Node Classification", "Distributed Link Prediction", "Distributed training", "Computation times", "Graph Convolutional Network", "Relational Graph Convolutional Network", "Line Graph Neural Network", "Understand Graph Attention Network", "Graph neural networks and its variants", "Computation times", "Tree-LSTM in DGL", "Batching many small graphs", "Computation times", "Generative Models of Graphs", "Generative models", "Computation times", "Capsule Network", "Transformer as a Graph Neural Network", "Revisit classic models from a graph perspective", "Computation times", "Paper Study with DGL", "Computation times", "Single Machine Multi-GPU Minibatch Graph Classification", "Single Machine Multi-GPU Minibatch Node Classification", "Training on Multiple GPUs", "Computation times"], "titleterms": {"": [838, 839, 840, 842, 857], "1": [689, 699, 701, 702, 703, 704, 705, 706, 707, 710, 721, 726, 734, 736, 743, 746, 747, 748, 749, 750, 751, 754, 764, 766, 774, 776, 783, 784, 787, 788, 789, 790, 791, 792, 795, 807, 810, 817, 825, 846, 857, 860, 863, 866], "101": [702, 787], "1\uc7a5": 786, "2": [690, 699, 700, 706, 709, 710, 711, 712, 713, 716, 727, 730, 737, 742, 750, 754, 755, 756, 757, 760, 767, 770, 777, 782, 783, 791, 795, 796, 797, 798, 799, 802, 811, 814, 825, 846, 857, 860, 863, 866], "2\uc7a5": 794, "3": [693, 696, 704, 713, 719, 725, 726, 727, 728, 733, 739, 744, 748, 757, 762, 766, 767, 768, 773, 779, 783, 789, 799, 805, 810, 811, 812, 816, 826, 846, 857, 860, 863, 866], "3\uc7a5": 809, "4": [688, 689, 690, 691, 692, 693, 694, 698, 703, 715, 732, 736, 737, 738, 739, 740, 747, 759, 772, 776, 777, 778, 779, 780, 785, 788, 796, 801, 815, 826, 846, 857], "4\uc7a5": 775, "5": [692, 697, 707, 712, 723, 729, 730, 731, 732, 733, 734, 738, 751, 756, 763, 770, 771, 772, 773, 774, 778, 792, 798, 806, 814, 815, 816, 817, 826, 846], "5\uc7a5": 813, "6": [691, 705, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 749, 759, 760, 761, 762, 763, 764, 790, 801, 802, 803, 804, 805, 806, 807, 826, 846], "6\uc7a5": 800, "7": [695, 696, 697, 698, 699, 700, 718, 742, 743, 744, 782, 783, 784, 785, 803, 846], "7\uc7a5": 781, "8": [717, 724, 846], "8\uc7a5": 808, "9": 722, "A": [839, 842, 844, 855], "For": [716, 719, 721], "Of": 713, "On": 713, "One": 856, "The": [697, 713, 855, 860, 863], "__getitem__": 26, "about": 702, "abstract": 856, "access": [696, 697, 850], "across": 831, "action": 863, "activ": [12, 825], "actordataset": 134, "adapt": [2, 716, 721, 867], "add": [609, 863], "add_edg": [27, 114], "add_nod": [28, 115], "add_node_property_split": 197, "add_nodepred_split": 198, "add_reverse_edg": [116, 322], "add_self_loop": [29, 117], "addedg": 650, "addmetapath": 651, "addrevers": 652, "addselfloop": 653, "adj": 30, "adj_extern": 31, "adj_product_graph": 118, "adj_sum_graph": 119, "adj_tensor": 32, "adjac": [0, 1], "adjacency_matrix": 33, "adjusted_homophili": 120, "advanc": 698, "after": [697, 715, 727], "aggreg": 867, "agnnconv": [361, 391], "aifbdataset": 132, "algorithm": [14, 698, 856], "all": 867, "alloc": 847, "altern": 847, "amazoncobuycomputerdataset": 135, "amazoncobuyphotodataset": 136, "amazonratingsdataset": 137, "amdataset": 133, "an": [730, 856], "api": [9, 13, 696, 699, 710, 782, 860], "api\ub4e4": 795, "appli": 713, "apply_each": 121, "apply_edg": [34, 841], "apply_nod": 35, "appnpconv": [362, 392, 462], "approach": 714, "argo": 846, "as_edge_prediction_sampl": 220, "asgraphpreddataset": 138, "ask": 24, "aslinkpreddataset": 139, "asnodepreddataset": 140, "assign": 839, "atomicconv": 393, "attent": [822, 857, 867], "attribut": [12, 825], "avgpool": [378, 437, 470], "ba2motifdataset": 141, "backend": [23, 819], "bacommunitydataset": 142, "balanc": 699, "base": [2, 717], "basetransform": 654, "bashapedataset": 143, "basic": 702, "basicfeaturestor": 288, "batch": [0, 1, 122, 720, 732, 815, 842, 850, 851, 856, 860, 861, 870, 873], "batch_num_edg": 36, "batch_num_nod": 37, "batch_siz": [38, 674, 679], "benchmark": [14, 826], "best": [840, 847], "bfloat16": 724, "bfs_edges_gener": 123, "bfs_nodes_gener": 124, "bgsdataset": 144, "biasedmha": 446, "binari": [703, 707, 856], "bipartit": [720, 801, 806], "bipartite_from_networkx": 125, "bipartite_from_scipi": 126, "bitcoinotcdataset": 145, "blitz": 844, "block_to_graph": 127, "blocksampl": 208, "book": 4, "brief": 855, "broadcast": [12, 825], "broadcast_edg": 128, "broadcast_nod": 129, "bsddmm": 610, "bspmm": 611, "bucket": 20, "build": [21, 687, 725, 820, 867], "built": [5, 710, 867], "builtindataset": 289, "call_once_and_shar": 357, "canonical_etyp": 39, "capsul": 866, "cell": 860, "cfconv": 394, "chain": 856, "chameleondataset": 149, "chang": 21, "chapter": [688, 695, 701, 709, 714, 724, 725, 729], "chebconv": [363, 395, 463], "check": 727, "check_sha1": 199, "choos": 863, "chunk": 699, "cifar10superpixeldataset": 146, "citeseergraphdataset": 150, "class": [2, 3, 12, 689, 863, 867], "classic": [868, 870], "classif": [693, 716, 721, 730, 732, 734, 831, 833, 836, 837, 838, 842, 843, 850, 872, 873], "client": 850, "clusterdataset": 147, "clustergcnsampl": 209, "coalesc": 579, "coauthorcsdataset": 151, "coauthorphysicsdataset": 152, "code": [21, 711], "col": 580, "comma": [703, 707, 788, 792], "commun": [850, 851, 856], "compact_csc_format": 323, "compact_graph": 130, "complet": [16, 856], "compos": [655, 834], "comput": [1, 732, 828, 833, 845, 849, 853, 859, 862, 865, 867, 869, 871, 875], "conclus": [14, 830, 833], "conda": 819, "configur": 23, "construct": [726, 839], "contain": 22, "contribut": [21, 818], "control": 1, "conv": [15, 16, 17], "convers": 697, "convert": 707, "convolut": [820, 838, 854, 855], "coo": 581, "copy_": 251, "copy_e_max": 481, "copy_e_mean": 482, "copy_e_min": 483, "copy_e_sum": 484, "copy_u": [252, 485], "copy_u_max": 486, "copy_u_mean": 487, "copy_u_min": 488, "copy_u_sum": 489, "copy_v": 490, "copyto": [7, 291], "cora": [838, 856, 857], "corafulldataset": 153, "coragraphdataset": 154, "core": [21, 846], "cornelldataset": 155, "cpu": [40, 582, 724, 846, 847, 848], "cpucachedfeatur": 290, "creat": [0, 703, 707, 825, 843, 855], "create_block": 131, "create_formats_": 41, "creation": [12, 696], "csc": 583, "csr": 584, "csv": [691, 703, 707, 747, 751, 788, 792, 843], "csvdataset": [148, 843], "cuda": [585, 717], "cugraph": 16, "cugraphgatconv": 396, "cugraphrelgraphconv": 397, "cugraphsageconv": 398, "custom": [691, 715, 720, 840], "data": [2, 9, 21, 23, 675, 680, 685, 688, 690, 691, 693, 694, 696, 697, 699, 716, 717, 719, 721, 722, 732, 823, 830, 831, 833, 834, 836, 837, 842, 872, 873], "dataload": [3, 4, 7, 208, 210, 220, 292], "dataset": [2, 7, 293, 691, 692, 693, 830, 833, 838, 843, 855, 856, 860, 867], "dataset_nam": 835, "deep": 818, "deepwalk": 385, "defin": [20, 22, 716, 719, 721, 830, 831, 833, 838, 840, 841, 842, 850, 851, 855, 860, 866, 873], "definit": [702, 732], "deg": 856, "degre": [20, 687], "degreeencod": 447, "dens": [15, 16], "densechebconv": [364, 400], "densegraphconv": [365, 401], "densesageconv": [366, 402], "depend": [831, 833], "descript": [6, 391, 392, 393, 394, 399, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 420, 421, 423, 424, 425, 426, 427, 454, 455, 456, 458], "destin": 863, "detect": 856, "develop": 21, "devic": [1, 42, 586], "dfs_edges_gener": 229, "dfs_labeled_edges_gener": 230, "dgl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 208, 220, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 696, 703, 707, 717, 723, 726, 727, 747, 766, 782, 788, 792, 803, 810, 811, 824, 825, 830, 831, 833, 836, 837, 838, 839, 842, 844, 854, 855, 856, 857, 860, 867, 870], "dgl_partition_to_graphbolt": 231, "dgldataset": [156, 689, 776, 843], "dgldataset\u7c7b": 736, "dglgraph": [1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 705, 790], "dglgraph\ub85c": 784, "dgl\u4e8c\u8fdb\u5236\u683c\u5f0f": 751, "dgl\u5206\u5e03\u5f0f\u6a21\u5757\u7684\u521d\u59cb\u5316": 742, "dgmg": 863, "dgnconv": 399, "diag": 612, "diagon": 825, "differ": [730, 819], "diffus": 821, "disk": [703, 707], "diskbasedfeatur": 294, "dispatch": 699, "distedgedataload": 211, "distembed": [696, 782], "distgraph": [696, 782], "distnodedataload": 212, "distribut": [4, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 695, 696, 697, 699, 700, 782, 850, 851, 852, 872], "distributeditemsampl": 295, "div": 613, "doc": 21, "document": [21, 818], "doe": 839, "dotgatconv": 403, "doubl": 587, "double_radius_node_label": 243, "download": [200, 690], "dropedg": 656, "dropnod": 657, "dst": 676, "dstdata": 43, "dstnode": 44, "dsttype": 45, "dtype": 588, "dure": 697, "dynam": 863, "e_add_u": [253, 491], "e_add_v": [254, 492], "e_div_u": [255, 493], "e_div_v": [256, 494], "e_dot_u": [257, 495], "e_dot_v": [258, 496], "e_mul_u": [259, 497], "e_mul_v": [260, 498], "e_sub_u": [261, 499], "e_sub_v": [262, 500], "each": 872, "edata": 46, "edg": [1, 2, 20, 51, 677, 696, 703, 704, 706, 707, 715, 716, 730, 731, 747, 788, 839, 863, 867], "edge_attr_schem": 47, "edge_homophili": 244, "edge_id": 48, "edge_label_inform": 245, "edge_softmax": 359, "edge_split": 232, "edge_subgraph": [49, 246], "edge_type_subgraph": [50, 247], "edgebatch": [674, 675, 676, 677, 678], "edgeconv": [367, 406], "edgedata": 691, "edgegatconv": 407, "edgepredictor": 454, "edgeweightnorm": 408, "editori": 21, "effici": 711, "egatconv": 404, "egnnconv": 405, "egtlay": 448, "element": 825, "elementwis": [12, 825], "embed": [4, 10, 16, 863], "enabl": [846, 850], "encod": [0, 687, 863], "end": [724, 808], "environ": [23, 850, 851], "equat": 857, "etyp": 52, "etype_str_to_tupl": 324, "etype_tuple_to_str": 325, "evalu": [823, 830, 831, 873], "even": 840, "everyth": 857, "exact": 718, "exampl": [21, 359, 699, 724], "exclud": 715, "exclude_seed_edg": 326, "execut": 867, "exercis": 825, "exist": 730, "expand_indptr": 327, "extern": 703, "extract": 0, "extract_arch": 201, "f": 856, "fakenewsdataset": 159, "faq": 24, "farthest": 6, "fb15k237dataset": 157, "fb15kdataset": 158, "featmask": 658, "featur": [1, 3, 7, 21, 296, 691, 704, 727, 836, 837, 839, 841], "feature_data": 835, "featurefetch": [7, 297], "featurestor": [7, 298], "ffi": 22, "file": [691, 836, 837], "filter_edg": 53, "filter_nod": 54, "find_edg": [55, 233], "flickrdataset": 160, "float": 589, "flow": 863, "folder": 691, "foreign": 22, "format": [1, 56, 698, 699, 703, 707], "formula": 854, "forward": [687, 727, 811], "fraudamazondataset": 161, "frauddataset": 162, "fraudyelpdataset": 163, "frequent": 24, "from": [691, 703, 707, 716, 730, 819, 834, 843, 854, 856, 868, 870], "from_coo": 614, "from_csc": 615, "from_csr": 616, "from_cugraph": 248, "from_dglgraph": 328, "from_networkx": 249, "from_scipi": 250, "full": [691, 855], "function": [3, 5, 9, 12, 18, 20, 22, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 359, 710, 717, 726, 727, 825, 831, 840, 866, 867, 872], "fuse": 856, "fused_csc_sampling_graph": 329, "fusedcscsamplinggraph": 299, "gat": 857, "gatconv": [368, 409, 464], "gatedgcnconv": 415, "gatedgraphconv": [371, 416], "gather_mm": 501, "gathermm": 9, "gatv2conv": 410, "gcn": [820, 838, 854, 855, 857], "gcn2conv": 411, "gcnnorm": 659, "gdc": 660, "gdeltdataset": 164, "gener": [21, 836, 837, 863, 864, 870], "geometri": 6, "get": [818, 850, 851], "get_download_dir": 202, "ginconv": [369, 412, 465], "gindataset": 165, "gineconv": 413, "git": 21, "github": 21, "global": [15, 16, 17, 23], "global_uniform_negative_sampl": 561, "globalattentionpool": [379, 438, 471], "globaluniform": 226, "gml": [703, 747, 788], "gmmconv": [370, 414], "gnn": [716, 719, 720, 721, 723, 725, 765, 802, 805, 806, 807, 809, 821, 829, 838, 840, 841, 842, 846, 850, 851], "gnnexplain": 428, "gpu": [705, 717, 803, 831, 838, 872, 873, 874], "gpucachedfeatur": 300, "gpu\uc5d0\uc11c": 790, "graph": [0, 1, 2, 4, 7, 16, 287, 359, 686, 688, 691, 693, 696, 697, 698, 699, 701, 702, 703, 706, 707, 712, 713, 714, 715, 716, 718, 719, 720, 721, 727, 729, 730, 732, 733, 734, 792, 806, 811, 818, 820, 821, 822, 835, 836, 837, 838, 839, 841, 842, 843, 850, 851, 854, 855, 856, 857, 858, 861, 863, 866, 867, 868, 870, 872], "graphbolt": [7, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 829, 850], "graphconv": [372, 417, 466, 728, 812], "graphdata": 691, "graphdataload": 213, "graphorm": 687, "graphormerlay": 449, "graphsag": [719, 841], "group": 872, "grouprevr": 418, "gsddmm": [9, 502], "gspmm": [9, 503], "guid": 708, "half": [724, 808], "handl": [833, 855], "has_dupl": 590, "has_edges_between": 57, "has_nod": 58, "head": [822, 857, 867], "heatkernel": 661, "heteroembed": 386, "heterogen": [15, 16, 17, 359, 691, 697, 707, 712, 715, 716, 719, 720, 721, 728, 729, 730, 732, 733, 734, 783, 784, 792, 801, 802, 805, 806, 807, 812, 813, 814, 815, 816, 817, 836], "heterognnexplain": 429, "heterograph": [336, 707], "heterographconv": [360, 387, 472, 728, 812], "heterographconv\u7684\u5b9e\u73b0\u903b\u8f91": 768, "heteroitemset": 301, "heterolinear": 388, "heteropgexplain": 430, "heterosubgraphx": 431, "hgnn": 823, "hgtconv": 419, "homogen": [359, 707, 720, 806, 837], "homophili": 0, "hood": 697, "host": 21, "how": [833, 839, 867], "hyper": 847, "hypergraph": 823, "i": 856, "icews18dataset": 166, "id": [1, 697, 699, 784, 850, 851], "idea": [855, 856, 866], "ident": 617, "idtyp": 59, "implement": [715, 718, 720, 728, 730, 854, 855, 856, 863, 866, 867], "import": 873, "improv": 846, "in_degre": 60, "in_edg": 61, "in_subgraph": [234, 337], "inc": 62, "incid": 1, "incidence_matrix": 63, "index": 818, "index_select": 330, "indic": 591, "infer": [700, 718, 851, 856], "inform": [0, 1], "initi": [4, 235, 696, 825, 850, 851, 866, 872], "input": 698, "instal": [698, 819, 830, 831, 833, 836, 837, 846], "instanti": [836, 837], "insubgraphsampl": 302, "int": [64, 592], "integr": 826, "intel": 847, "interact": 857, "interfac": [21, 22], "introduc": 857, "introduct": [844, 855, 863], "is_homogen": 65, "is_libxsmm_en": 338, "is_multigraph": 66, "is_pin": 67, "is_unibipartit": 68, "isin": 331, "itemsampl": [7, 303], "itemset": [7, 304], "its": [858, 870], "job": 850, "json": [703, 747, 788], "jumpingknowledg": 458, "karateclubdataset": 167, "kei": [855, 856, 866], "khop_adj": 339, "khop_graph": 340, "khop_in_subgraph": 341, "khop_out_subgraph": 342, "khopgraph": 662, "knn": 14, "knn_graph": 343, "knngraph": 434, "knowledg": 16, "label": [0, 691], "labelpropag": 459, "laborsampl": 214, "lap_p": 344, "laplacian_lambda_max": 345, "lapp": 663, "lapposencod": 450, "larg": [714, 718], "launch": [700, 850], "layer": [15, 16, 17, 687, 820, 822, 823, 855, 856, 867], "layerneighborsampl": 305, "lazyfeatur": 221, "learn": [15, 16, 17, 857], "legacydataset": 306, "legacytudataset": 168, "less": 691, "level": 691, "lgnn": 856, "librari": [703, 818], "line": 856, "line_graph": [69, 346], "linear": [12, 825], "linegraph": 664, "link": [3, 16, 693, 719, 733, 830, 836, 837, 841, 843, 851, 855], "linkx_homophili": 347, "linux": 819, "load": [4, 691, 692, 694, 697, 699, 703, 707, 722, 732, 823, 830, 833, 838, 839, 841, 842, 873], "load_from_shared_memori": 332, "load_graph": 348, "load_info": 203, "load_label": 204, "load_partit": 236, "load_partition_book": 237, "load_partition_feat": 238, "loader": [716, 717, 719, 721, 830, 831, 833, 842, 872], "local": 21, "local_scop": 70, "logic": 728, "long": [71, 593], "loop": [716, 719, 721, 730, 732, 733, 734, 814, 817, 830, 831, 833, 840, 841, 842, 850, 851, 855, 860, 873], "lsc": 699, "lstm": 860, "machin": [872, 873], "maco": 819, "mag240m": 699, "mailbox": 681, "main": [860, 863, 867, 872], "make": [699, 843], "mani": [861, 870], "manipul": 1, "map": 699, "mask_nodes_by_properti": 205, "match": 6, "matmul": 618, "matric": 820, "matrix": [1, 12, 825, 856], "max": 263, "max_edg": 349, "max_nod": 350, "maxpool": [380, 439, 473], "mean": 264, "mean_edg": 351, "mean_nod": 352, "measur": 0, "memori": 847, "merg": 353, "messag": [0, 5, 9, 20, 709, 710, 711, 712, 713, 724, 727, 731, 794, 832, 840, 854, 856, 860, 866, 867], "metagraph": [1, 72], "metapath2vec": 389, "metapath_reachable_graph": 354, "method": [12, 825], "meti": 698, "metis_partit": 355, "metis_partition_assign": 356, "mfg": 720, "mfg\ub97c": 806, "min": 265, "minesweeperdataset": 171, "mini": [720, 850, 851, 873], "minibatch": [7, 307, 716, 719, 721, 872, 873], "minibatchtransform": 308, "minigcdataset": 172, "misc": 1, "mix": [724, 808], "mnistsuperpixeldataset": 169, "mode": 696, "model": [21, 687, 716, 719, 721, 730, 732, 734, 822, 830, 831, 833, 841, 842, 850, 851, 854, 855, 863, 864, 866, 868, 870, 872, 873], "modul": [9, 15, 16, 17, 696, 720, 725, 726, 727, 728, 731, 840], "more": 840, "movielensdataset": 173, "mul": 619, "multi": [822, 831, 846, 857, 867, 872, 873], "multi_update_al": 73, "multilayerfullneighborsampl": 215, "multipl": [12, 21, 691, 707, 825, 856, 874], "multiprocess": [8, 357, 358], "mutagdataset": 170, "mutat": 1, "mxnet": [15, 819], "ndata": 74, "neg": [3, 11, 594, 719, 805, 841], "negativesampl": [7, 309], "neighbor": [6, 11, 716, 717, 719, 830, 831, 832, 833, 850], "neighborhood": [714, 716, 717, 719, 721, 800], "neighborsampl": [216, 310], "network": [16, 729, 732, 734, 820, 821, 823, 838, 841, 850, 851, 854, 855, 856, 857, 858, 866, 867, 870], "neural": [729, 732, 734, 821, 823, 841, 856, 858, 867, 870], "new": [21, 22], "next": [838, 839, 840, 842, 857], "nf": 850, "nn": [15, 16, 17, 18, 359, 726, 727, 731, 810, 811], "nnconv": [373, 420], "nnz": 595, "nn\u6a21\u5757\u7684forward\u51fd\u6570": 767, "nn\u6a21\u5757\u7684\u6784\u9020\u51fd\u6570": 766, "node": [1, 2, 4, 10, 20, 77, 682, 693, 696, 703, 704, 706, 721, 730, 734, 747, 788, 830, 831, 833, 836, 837, 838, 839, 843, 850, 851, 863, 873], "node2vec_random_walk": 562, "node_attr_schem": 75, "node_homophili": 476, "node_label_inform": 477, "node_split": 239, "node_subgraph": 478, "node_type_subgraph": [76, 479], "nodebatch": [679, 680, 681, 682], "nodedata": 691, "nodeembed": 457, "nodeshuffl": 665, "non": [12, 825], "norm_by_dst": 480, "ntype": 78, "num_dst_nod": 79, "num_edg": 80, "num_nod": 81, "num_src_nod": 82, "number_of_dst_nod": 83, "number_of_edg": 84, "number_of_nod": 85, "number_of_src_nod": 86, "nutshel": 822, "object": [843, 863], "offlin": 718, "ogb": [692, 778], "ondiskdataset": [311, 834, 836, 837], "one": 854, "onli": 850, "op": [0, 9, 12, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541], "openmp": 847, "oper": [4, 12, 825, 856], "optim": [4, 10, 863], "option": [23, 690, 777], "organ": [836, 837], "origin": 716, "other": 831, "out": 0, "out_degre": 87, "out_edg": 88, "out_subgraph": 542, "output": [698, 727], "overview": [714, 729, 730, 732, 733, 734, 829, 832, 838, 841, 842, 843, 854], "own": [840, 843, 846], "pack_trac": 563, "packag": [692, 830, 831, 833, 836, 837, 873], "paper": 870, "paradigm": [709, 794], "parallel": [698, 722, 856], "parmeti": [698, 784], "parmetis\ub97c": 784, "parser": 691, "part": 713, "partit": [0, 4, 697, 698, 699, 850, 851], "partition_graph": 240, "partition_graph_with_halo": 543, "pass": [9, 20, 709, 710, 711, 712, 713, 724, 727, 731, 794, 832, 840, 854, 856, 860, 866, 867], "path": 687, "pathencod": 451, "patterndataset": 174, "perform": [14, 826, 830], "persourceuniform": 227, "perspect": [854, 868, 870], "pgexplain": 432, "pin_memory_": 89, "pinsagesampl": [560, 717], "pip": 819, "pipelin": [688, 699], "platform": 21, "pnaconv": 421, "point": 6, "pool": [15, 16, 17], "posit": [0, 841], "postprocess": 867, "power": 620, "ppi": 857, "ppidataset": 175, "ppr": 666, "practic": [840, 847], "precis": [724, 808], "precision\uc744": 808, "predecessor": 90, "predict": [2, 3, 16, 693, 719, 730, 733, 830, 836, 837, 841, 843, 851, 855], "prefetch": 3, "prepar": [685, 836, 837, 841, 872], "preprocess": [697, 699, 867], "prev": 856, "procedur": [831, 873], "process": [21, 693, 831, 872, 873], "program": [696, 846], "progress": 856, "prop_edg": [91, 544], "prop_edges_df": 545, "prop_nod": [92, 546], "prop_nodes_bf": 547, "prop_nodes_topo": 548, "propag": [0, 863], "protein": 857, "pubmedgraphdataset": 176, "pull": 93, "push": 94, "put": [857, 860, 863, 867], "pytorch": [16, 357, 358, 819], "qm7bdataset": 177, "qm9dataset": 178, "qm9edgedataset": 179, "queri": [1, 839], "question": 24, "questionsdataset": 180, "quickstart": 825, "r": 855, "radiu": 856, "radius_graph": 549, "radiusgraph": 435, "rand_bipartit": 550, "rand_graph": 551, "random": 11, "random_walk": 564, "random_walk_p": 552, "randomwalkneighborsampl": 717, "randomwalkp": 667, "raw": [690, 777, 834], "read": 0, "readout": [732, 815], "readout_edg": 553, "readout_nod": 554, "redditdataset": 181, "reduc": [5, 9, 596, 727, 825], "reduct": 831, "refer": [13, 850, 851], "regress": [730, 734, 814, 817], "relat": [0, 9, 855], "relgraphconv": [374, 422, 467], "remov": 716, "remove_edg": [95, 555], "remove_nod": [96, 556], "remove_self_loop": [97, 557], "removeselfloop": 668, "reorder_graph": [98, 558], "repositori": 23, "repres": 839, "represent": 830, "requir": 819, "resourc": 827, "result": 14, "revers": [99, 559], "review": 832, "revisit": [868, 870], "roadmap": [688, 701, 709, 714, 725, 729], "romanempiredataset": 182, "row": 597, "rowfeatnorm": 669, "run": 698, "sageconv": [375, 423, 468], "saintsampl": 217, "sampl": [4, 11, 560, 561, 562, 563, 564, 565, 566, 567, 568, 696, 714, 715, 716, 717, 719, 721, 800, 832, 850], "sample_etype_neighbor": 241, "sample_labor": 565, "sample_neighbor": [242, 566], "sample_neighbors_bias": 567, "sampledsubgraph": 312, "sampledsubgraphimpl": 313, "sampler": [3, 6, 218, 715, 716, 721, 830, 831, 833, 850, 851], "samplinggraph": 314, "save": [694, 839], "save_graph": 569, "save_info": 206, "sbmmixturedataset": 183, "scalabl": 846, "scenario": 829, "score": 16, "script": [850, 851], "sddmm": 621, "second": 855, "seed": [333, 570], "segment": 9, "segment_mm": 504, "segment_reduc": 505, "segmented_knn_graph": 571, "segmentedknngraph": 436, "segmentmm": 9, "select_topk": 568, "send_and_recv": 100, "separ": [703, 707, 788, 792], "sequenti": [384, 460], "server": 850, "set": [841, 847, 850, 851, 856], "set2set": [381, 440], "set_batch_num_edg": 101, "set_batch_num_nod": 102, "set_dst_lazy_featur": 222, "set_edge_lazy_featur": 223, "set_node_lazy_featur": 224, "set_src_lazy_featur": 225, "settransformerdecod": 441, "settransformerencod": 442, "setup": [21, 819, 850, 866], "sgconv": [376, 424, 469], "shadowkhopsampl": 219, "shape": 598, "shared_tensor": 358, "shortest_dist": 572, "side": 850, "signdiffus": 670, "simpl": 867, "singl": [691, 872, 873], "slice_batch": 573, "small": [861, 870], "smax": 599, "smean": 600, "smin": 601, "softmax": [602, 622, 825], "softmax_edg": 574, "softmax_nod": 575, "some": 702, "sort_csc_by_tag": 576, "sort_csr_by_tag": 577, "sortpool": [382, 443, 474], "sourc": [703, 819], "sp_add_v": 623, "sp_broadcast_v": 624, "sp_div_v": 625, "sp_mul_v": 626, "sp_sub_v": 627, "spars": [1, 12, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 723, 820, 822, 824, 825, 856], "sparsematrix": [578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608], "spatial": 687, "spatialencod": 452, "spatialencoder3d": 453, "spawn": [831, 873], "specif": [691, 699, 727, 811, 835, 867], "speed": 867, "split": [4, 696, 782], "split_dataset": 207, "spmatrix": 628, "spmm": 629, "spspmm": 630, "squirreldataset": 185, "src": 678, "srcdata": 103, "srcnode": 104, "srctype": 105, "ssh": 850, "sstdataset": 184, "standalon": [696, 782], "start": 818, "step": [699, 846, 860, 866], "stochast": [714, 800, 829], "structur": [1, 691, 696, 801, 836, 837, 839, 856, 867], "studi": 870, "style": 21, "sub": 631, "subgraph": [0, 106, 707, 856], "subgraphsampl": [7, 315], "subgraphx": 433, "subset": 196, "successor": 107, "sum": [266, 603], "sum_edg": 633, "sum_nod": 634, "sumpool": [383, 444, 475], "supervis": 856, "support": [9, 21, 717], "svd_pe": 635, "svdpe": 671, "system": 819, "t": [578, 604], "tagconv": [377, 425], "task": [316, 835, 836, 837, 855, 856, 860, 867], "temporallayerneighborsampl": 317, "temporalneighborsampl": 318, "tensor": [4, 696, 782, 856], "tensorflow": [17, 819], "test": [21, 841, 856, 866], "texasdataset": 187, "text": 856, "thread": 847, "time": [828, 845, 849, 853, 859, 862, 865, 869, 871, 875], "tip": 699, "to_bidirect": 636, "to_block": 637, "to_canonical_etyp": 109, "to_cugraph": [110, 638], "to_dens": 606, "to_doubl": 639, "to_float": 640, "to_half": 641, "to_heterogen": 642, "to_homogen": 643, "to_networkx": 644, "to_simpl": [111, 645], "to_simple_graph": 646, "togeth": [857, 860, 863, 867], "tolevi": 672, "tolokersdataset": 188, "tool": 700, "top": 691, "topk_edg": 647, "topk_nod": 648, "topologi": 1, "topological_nodes_gener": 649, "torchbasedfeatur": 319, "torchbasedfeaturestor": 320, "tosimpl": 673, "tra": 830, "train": [695, 700, 714, 716, 719, 720, 721, 723, 724, 729, 730, 732, 733, 734, 820, 821, 822, 823, 829, 831, 833, 838, 840, 841, 842, 848, 850, 851, 852, 855, 856, 867, 873, 874], "trainer": [831, 873], "trane": 873, "trans": 455, "transform": [0, 1, 3, 16, 19, 686, 822, 825, 839, 867], "transpos": 607, "transr": 456, "travers": [0, 860], "tree": 860, "treecycledataset": 189, "treegriddataset": 190, "tudataset": 186, "tutori": [686, 818, 824], "twirlsconv": 426, "twirlsunfoldingandattent": 427, "type": [1, 9, 22, 707, 727, 730, 811], "typedlinear": 390, "u_add_": [267, 506], "u_add_e_max": 507, "u_add_e_mean": 508, "u_add_e_min": 509, "u_add_e_sum": 510, "u_add_v": [268, 511], "u_div_": [269, 512], "u_div_e_max": 513, "u_div_e_mean": 514, "u_div_e_min": 515, "u_div_e_sum": 516, "u_div_v": [270, 517], "u_dot_": [271, 518], "u_dot_v": [272, 519], "u_mul_": [273, 520], "u_mul_e_max": 521, "u_mul_e_mean": 522, "u_mul_e_min": 523, "u_mul_e_sum": 524, "u_mul_v": [274, 525], "u_sub_": [275, 526], "u_sub_e_max": 527, "u_sub_e_mean": 528, "u_sub_e_min": 529, "u_sub_e_sum": 530, "u_sub_v": [276, 531], "ubuntu": 850, "udf": [674, 675, 676, 677, 678, 679, 680, 681, 682], "unbatch": 683, "under": 697, "understand": 857, "uniform": 228, "uniformnegativesampl": 321, "unique_and_compact": 334, "unique_and_compact_csc_format": 335, "unit": 21, "univers": 867, "unpin_memory_": 112, "up": [850, 851, 856, 867], "updat": [727, 863], "update_al": 113, "us": [1, 692, 705, 717, 731, 820, 841], "use_libxsmm": 684, "user": [20, 708, 840], "util": [0, 2, 3, 7, 15, 16, 697], "uva": 717, "v": [696, 782], "v0": 826, "v_add_": [277, 532], "v_add_u": [278, 533], "v_div_": [279, 534], "v_div_u": [280, 535], "v_dot_": [281, 536], "v_dot_u": [282, 537], "v_mul_": [283, 538], "v_mul_u": [284, 539], "v_sub_": [285, 540], "v_sub_u": [286, 541], "val": 608, "val_lik": 632, "valid": [850, 851], "valu": [703, 707, 788, 792], "variabl": 23, "variant": [858, 870], "via": [21, 843, 863], "visual": [856, 857, 867], "walk": 11, "web": 21, "weight": [731, 831], "weightandsum": 445, "weightbasi": 461, "welcom": 818, "what": [838, 839, 840, 842, 856, 857], "wikicsdataset": 192, "window": 819, "wisconsindataset": 193, "wise": [20, 825], "wn18dataset": 191, "work": [707, 720, 819], "workload": [4, 696, 782], "write": [711, 720, 732, 734, 840], "x": 856, "y": 856, "yaml": [691, 835, 836, 837], "yelpdataset": 194, "your": [716, 721, 840, 843, 846], "zincdataset": 195, "\u4e0b\u8f7d\u539f\u59cb\u6570\u636e": 737, "\u4e0e\u8282\u70b9\u5206\u7c7b\u5728\u6a21\u578b\u5b9e\u73b0\u4e0a\u7684\u5dee\u522b": 770, "\u4e3a\u5c0f\u6279\u6b21\u8bad\u7ec3\u5b9e\u73b0\u5b9a\u5236\u5316\u7684gnn\u6a21\u5757": 763, "\u4e8c\u5206\u56fe\u548c\u5757\u7684\u6a21\u5757": 763, "\u4e8c\u8fdb\u5236\u683c\u5f0f": 747, "\u4ece\u5916\u90e8\u5e93\u521b\u5efa\u56fe": 747, "\u4ece\u5916\u90e8\u6e90\u521b\u5efa\u56fe": 747, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u56fe": 747, "\u4ece\u78c1\u76d8\u52a0\u8f7d\u5f02\u6784\u56fe": 751, "\u4f7f\u7528ogb\u5305\u5bfc\u5165ogb\u6570\u636e\u96c6": 738, "\u4f7f\u7528\u591a\u79cd\u7c7b\u578b": 751, "\u4f7f\u7528\u8fb9\u6743\u91cd": 771, "\u4f7f\u7528\u8fb9\u6743\u91cd\u7684\u6d88\u606f\u4f20\u9012": 771, "\u4fdd\u5b58\u548c\u52a0\u8f7d\u6570\u636e": 740, "\u5173\u4e8e\u56fe\u7684\u57fa\u672c\u6982\u5ff5": 746, "\u5185\u7f6e\u51fd\u6570\u548c\u6d88\u606f\u4f20\u9012api": 754, "\u5206\u5272\u6570\u636e\u96c6": 742, "\u5206\u5e03\u5f0f\u56fe": 742, "\u5206\u5e03\u5f0f\u5d4c\u5165": 742, "\u5206\u5e03\u5f0f\u5f20\u91cf": 742, "\u5206\u5e03\u5f0f\u6a21\u5f0f\u4e0e\u72ec\u7acb\u6a21\u5f0f": 742, "\u5206\u5e03\u5f0f\u8ba1\u7b97\u7684api": 742, "\u5206\u5e03\u5f0f\u8bad\u7ec3": 741, "\u5206\u5e03\u5f0f\u8bad\u7ec3\u6240\u9700\u7684\u56fe\u6570\u636e\u9884\u5904\u7406": 743, "\u5206\u5e03\u5f0f\u91c7\u6837": 742, "\u521b\u5efadistgraph": 742, "\u521b\u5efa\u5f02\u6784\u56fe": 751, "\u5305\u542b\u8fc7\u65f6\u4fe1\u606f": 752, "\u53ef\u9009": 737, "\u56de\u5f52": [770, 774], "\u56fe": [745, 750], "\u56fe\u6570\u636e\u5904\u7406\u7ba1\u9053": 735, "\u56fe\u8bfb\u51fa": 772, "\u5728gpu\u4e0a\u4f7f\u7528dglgraph": 749, "\u5728nn\u6a21\u5757\u4e2d\u4f7f\u7528\u8fb9\u6743\u91cd": 771, "\u5728\u56fe\u7684\u4e00\u90e8\u5206\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 757, "\u5728\u5927\u56fe\u4e0a\u7684\u968f\u673a": 758, "\u5728\u5f02\u6784\u56fe\u4e0a\u8fdb\u884c\u6d88\u606f\u4f20\u9012": 756, "\u5728\u5f02\u6784\u56fe\u4e2d\u9884\u6d4b\u5df2\u6709\u8fb9\u7684\u7c7b\u578b": 770, "\u5904\u7406\u6570\u636e": 739, "\u5904\u7406\u6574\u56fe\u5206\u7c7b\u6570\u636e\u96c6": 739, "\u5904\u7406\u8282\u70b9\u5206\u7c7b\u6570\u636e\u96c6": 739, "\u5904\u7406\u94fe\u63a5\u9884\u6d4b\u6570\u636e\u96c6": 739, "\u591a\u5c42\u5c0f\u6279\u91cf\u6d88\u606f\u4f20\u9012\u7684\u4e8c\u5206\u8ba1\u7b97\u56fe": 759, "\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": [760, 764], "\u5b9a\u5236\u7528\u6237\u81ea\u5df1\u7684\u90bb\u5c45\u91c7\u6837\u5668": 759, "\u5b9e\u73b0\u4e00\u4e2a\u81ea\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668": 759, "\u5b9e\u73b0\u79bb\u7ebf\u63a8\u65ad": 761, "\u5b9e\u73b0\u80fd\u591f\u5904\u7406\u540c\u6784\u56fe": 763, "\u5c06\u5f02\u6784\u56fe\u8f6c\u5316\u4e3a\u540c\u6784\u56fe": 751, "\u5c0f\u6279\u6b21\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65f6\u5220\u8fb9": 760, "\u5f02\u6784\u56fe": 751, "\u5f02\u6784\u56fe\u4e0a\u6a21\u578b\u7684\u8bad\u7ec3": 764, "\u5f02\u6784\u56fe\u4e0a\u7684graphconv\u6a21\u5757": 768, "\u5f02\u6784\u56fe\u4e0a\u7684\u6574\u56fe\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 772, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u5b9a\u5236": 763, "\u5f02\u6784\u56fe\u4e0a\u7684\u6a21\u578b\u8bad\u7ec3": 760, "\u5f02\u6784\u56fe\u4e0a\u7684\u8282\u70b9\u5206\u7c7b\u6a21\u578b\u7684\u8bad\u7ec3": 774, "\u5f02\u6784\u56fe\u4e0a\u7684\u8fb9\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 770, "\u5f02\u6784\u56fe\u4e0a\u7684\u91c7\u6837": 759, "\u5f02\u6784\u56fe\u4e0a\u7684\u94fe\u63a5\u9884\u6d4b\u6a21\u578b\u7684\u8bad\u7ec3": 773, "\u5f02\u6784\u56fe\u4e0a\u7684\u968f\u673a\u6279\u6b21\u8bad\u7ec3": 762, "\u5f02\u6784\u56fe\u4e0a\u81ea\u5b9a\u4e49\u91c7\u6837\u5668": 759, "\u5f02\u6784\u56fe\u8bad\u7ec3\u7684\u6837\u4f8b\u6570\u636e": 769, "\u6279\u6b21": 758, "\u6279\u6b21\u5316\u56fe\u4e0a\u7684\u8ba1\u7b97": 772, "\u6279\u6b21\u7684\u56fe": 772, "\u627e\u51fa\u6d88\u606f\u4f20\u9012\u7684\u4f9d\u8d56": 759, "\u63a8\u65ad\u6240\u9700\u7684\u5de5\u5177": 744, "\u6570\u636e\u52a0\u8f7d": 772, "\u6574\u56fe\u5206\u7c7b": 772, "\u66f4\u65b0\u7279\u5f81\u4f5c\u4e3a\u8f93\u51fa": 767, "\u672c\u7ae0\u8def\u7ebf\u56fe": [735, 745, 753, 758, 765, 769], "\u6784\u5efa\u56fe\u795e\u7ecf\u7f51\u7edc": 765, "\u683c\u5f0f": 747, "\u6982\u8ff0": [769, 770, 772, 773, 774], "\u6a21\u5757": 765, "\u6a21\u578b\u5b9a\u4e49": 772, "\u6a21\u578b\u7684\u8bad\u7ec3": [760, 762, 764, 770, 772, 773, 774], "\u6d88\u606f\u4f20\u9012\u548c\u805a\u5408": 767, "\u6d88\u606f\u4f20\u9012\u8303\u5f0f": 753, "\u7406\u89e3\u90bb\u5c45\u91c7\u6837\u7684\u5de5\u4f5c\u539f\u7406": 759, "\u7528\u6237\u6307\u5357": 752, "\u7b2c1\u7ae0": 745, "\u7b2c2\u7ae0": 753, "\u7b2c3\u7ae0": 765, "\u7b2c4\u7ae0": 735, "\u7b2c5\u7ae0": 769, "\u7b2c6\u7ae0": 758, "\u7b2c7\u7ae0": 741, "\u7ed3\u5408\u8d1f\u91c7\u6837\u6765\u5b9a\u4e49\u90bb\u5c45\u91c7\u6837\u5668\u548c\u6570\u636e\u52a0\u8f7d\u5668": 762, "\u7f16\u5199dgl": 767, "\u7f16\u5199\u795e\u7ecf\u7f51\u7edc\u6a21\u578b": [772, 774], "\u7f16\u5199\u9ad8\u6548\u7684\u6d88\u606f\u4f20\u9012\u4ee3\u7801": 755, "\u805a\u5408\u540e": 767, "\u8282\u70b9\u5206\u7c7b": 774, "\u8282\u70b9\u548c\u8fb9": 750, "\u8282\u70b9\u548c\u8fb9\u7684\u7279\u5f81": 748, "\u8bad\u7ec3": 758, "\u8bad\u7ec3\u56fe\u795e\u7ecf\u7f51\u7edc": 769, "\u8bbf\u95ee\u56fe\u7ed3\u6784": 742, "\u8bbf\u95ee\u8282\u70b9": 742, "\u8c03\u6574\u6a21\u578b\u4ee5\u8fdb\u884c\u5c0f\u6279\u6b21\u8bad\u7ec3": [762, 764], "\u8c03\u6574\u6a21\u578b\u4ee5\u9002\u7528\u5c0f\u6279\u6b21\u8bad\u7ec3": 760, "\u8d1f\u8f7d\u5747\u8861": 743, "\u8d85\u5927\u56fe\u4e0a\u7684\u7cbe\u51c6\u79bb\u7ebf\u63a8\u65ad": 761, "\u8f93\u5165\u56fe\u5bf9\u8c61\u7684\u89c4\u8303\u68c0\u6d4b": 767, "\u8fb9\u5206\u7c7b": 770, "\u8fb9\u6570\u636e": 742, "\u8fb9\u7c7b\u578b\u5b50\u56fe": 751, "\u8fd0\u884c\u5206\u5e03\u5f0f\u8bad\u7ec3": 744, "\u9017\u53f7\u5206\u9694\u503c": [747, 751], "\u90bb\u5c45\u91c7\u6837\u65b9\u6cd5\u6982\u8ff0": 758, "\u9488\u5bf9\u8282\u70b9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 764, "\u9488\u5bf9\u8fb9\u5206\u7c7b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 760, "\u9488\u5bf9\u94fe\u63a5\u9884\u6d4b\u4efb\u52a1\u7684\u90bb\u5c45\u91c7\u6837\u8bad\u7ec3\u65b9\u6cd5": 762, "\u94fe\u63a5\u9884\u6d4b": 773, "\uac00\uc774\ub4dc": 793, "\uac00\uc911\uce58": 796, "\uac1c\uc694": [800, 813, 814, 815, 816, 817], "\uacb0\uacfc": 784, "\uacb0\uacfc\ub4e4\uc744": 784, "\uacbd\uc6b0": [802, 805, 807], "\uad6c\uc870": [782, 801], "\uad6c\ud604": 812, "\uad6c\ud604\uc0c1\uc758": 814, "\uad6c\ud604\ud558\uae30": [801, 804, 806], "\uadf8\ub798\ud504": [775, 779, 782, 783, 786, 787, 788, 791, 792, 799, 806, 811, 813, 814, 815, 817], "\uadf8\ub798\ud504\ub4e4": [801, 806, 816], "\uadf8\ub798\ud504\ub4e4\uc5d0": 804, "\uadf8\ub798\ud504\ub4e4\uc758": 815, "\uadf8\ub798\ud504\ub85c": 792, "\uadf8\ub798\ud504\ub97c": 792, "\uadf8\ub798\ud504\uc5d0": [784, 787, 800, 815], "\uadf8\ub798\ud504\uc5d0\uc11c": 802, "\uadf8\ub798\ud504\uc5d0\uc11c\uc758": 798, "\uadf8\ub798\ud504\uc758": [802, 805, 807, 814], "\uadf8\ub9ac\uace0": [791, 806], "\uae30\ubc18\uc758": 803, "\uae30\ubcf8\uc801\uc778": 787, "\ub098\ub204\uae30": 782, "\ub124\ud2b8\uc6cc\ud06c": [813, 815, 817], "\ub178\ub4dc": [779, 782, 784, 791, 807, 814, 817], "\ub178\ub4dc\uc640": 789, "\ub274\ub7f4": [813, 815, 817], "\ub2e4\ub8e8\uae30": 792, "\ub2e4\uc591\ud55c": 792, "\ub2e4\uc6b4\ub85c\ub4dc\ud558\uae30": 777, "\ub2e8\ub3c5": 782, "\ub300\ud55c": [784, 787, 800, 814], "\ub300\ud578": 804, "\ub370\uc774\ud130": [775, 777, 779, 780, 782, 783, 802, 803, 805, 807, 815], "\ub370\uc774\ud130\uc14b": 779, "\ub370\uc774\ud130\uc14b\ub4e4": 778, "\ub3d9\uc885": 792, "\ub4a4\uccd0\uc9c4": 793, "\ub514\uc2a4\ud06c\uc5d0\uc11c": [788, 792], "\ub77c\uc774\ube0c\ub7ec\ub9ac\ub97c": 788, "\ub7f0\uce6d\ud558\uae30": 785, "\ub808\uc774\uc5b4": 801, "\ub85c\ub354": [802, 805, 807], "\ub85c\ub354\uc5d0\uc11c": 803, "\ub85c\ub4dc": 784, "\ub85c\ub4dc\ub9f5": [775, 786, 794, 800, 809, 813], "\ub85c\ub4dc\ud558\uae30": 778, "\ub85c\ub529": [780, 815], "\ub85c\ub529\ud558\uae30": [788, 792], "\ub85c\uc9c1": 812, "\ub8f9": [802, 805, 807, 814, 815, 816, 817], "\ub9ac\uadf8\ub798\uc158": 817, "\ub9ac\uadf8\ub808\uc158": 814, "\ub9ac\ub4dc\uc544\uc6c3": 815, "\ub9c1\ud06c": [779, 805, 816], "\ub9cc\ub4e4\uae30": [802, 805, 807, 809], "\ub9de\uac8c": [802, 805, 807], "\ub9e4\ud551": 784, "\uba40\ud2f0": 801, "\uba54\uc2dc\uc9c0": [795, 796, 797, 798, 801, 808, 811], "\uba54\uc9c0\uc2dc": [794, 799], "\uba85\uc138\ud654": 811, "\uba87\uac00\uc9c0": 787, "\ubaa8\ub378": [802, 805, 807, 815, 817], "\ubaa8\ub378\uacfc": 814, "\ubaa8\ub378\uc744": [802, 805, 807], "\ubaa8\ub4c8": [782, 806, 809, 810, 812], "\ubaa8\ub4c8\uc758": 811, "\ubaa8\ub4dc": 782, "\ubbf8\ub2c8": [802, 805, 806, 807], "\ubbf8\ub2c8\ubc30\uce58": 801, "\ubc0f": [784, 795, 802, 805, 807, 814], "\ubc14\uc774\ub108\ub9ac": [788, 792], "\ubc29\ubc95": [797, 800], "\ubc30\uce58": [802, 805, 806, 807, 815], "\ubc30\uce58\uc758": 802, "\ubc38\ub7f0\uc2f1": 784, "\ubcc0\ud658\ud558\uae30": [784, 792], "\ubd84\ub958": [779, 802, 807, 814, 815, 817], "\ubd84\uc0b0": [781, 782, 783, 784, 785], "\ube4c\ud2b8\uc778": 795, "\uc0ac\uc6a9\uc790": 793, "\uc0ac\uc6a9\ud558\uae30": [790, 803], "\uc0ac\uc6a9\ud55c": [788, 802, 805, 807, 808], "\uc0ac\uc6a9\ud574\uc11c": [778, 788], "\uc0d8\ud50c\ub7ec": [801, 802, 805, 807], "\uc0d8\ud50c\ub7ec\ub97c": 803, "\uc0d8\ud50c\ub9c1": [782, 783, 800, 801, 803], "\uc0d8\ud50c\ub9c1\uc5d0": 803, "\uc0d8\ud50c\ub9c1\uc744": [802, 805, 807], "\uc0dd\uc131": [782, 810], "\uc0dd\uc131\ud558\uae30": [784, 788, 792], "\uc11c\ube0c\uadf8\ub798\ud504": 792, "\uc124\uce58": 784, "\uc18c\uc2a4\ub97c": 788, "\uc2dc\ub300\uc5d0": 793, "\uc2e4\ud589\ud558\uae30": 784, "\uc5c5\ub370\uc774\ud2b8": 811, "\uc5d0\uc9c0": [782, 784, 791, 792, 796, 802, 814], "\uc5d0\uc9c0\ub4e4": 802, "\uc5d0\uc9c0\ub4e4\uc5d0": 814, "\uc5d0\uc9c0\uc758": 789, "\uc5f0\uc0b0\ud558\uae30": 815, "\uc608\uce21": [779, 805, 816], "\uc608\uce21\ud558\uae30": 814, "\uc624\ud504\ub77c\uc778": 804, "\uc678\ubd80": 788, "\uc6cc\ud06c\ub85c\ub4dc": 782, "\uc6d0\ubcf8": 802, "\uc704\ud55c": [784, 785, 801, 806, 811], "\uc704\ud574\uc11c": 802, "\uc758\uc874\uc131": 801, "\uc774\ubd84": [801, 806], "\uc774\uc6c3": [800, 801, 802, 803, 805, 807], "\uc774\uc885": [792, 798], "\uc77c\ubd80\uc5d0": 799, "\uc785\ub825": 784, "\uc791\uc131": 797, "\uc791\uc131\ud558\uae30": [806, 815, 817], "\uc800\uc7a5\uacfc": 780, "\uc801\uc6a9\ud558\uae30": [796, 799], "\uc804\ub2ec": [794, 795, 797, 798, 799, 801, 808], "\uc804\ub2ec\uacfc": 811, "\uc804\ub2ec\uc5d0": 796, "\uc804\ub2ec\uc744": 801, "\uc804\ucc98\ub9ac": 784, "\uc811\uadfc": 782, "\uc811\uadfc\ud558\uae30": 783, "\uc815\uc758": 787, "\uc815\uc758\ud558\uae30": [802, 805, 807, 815], "\uc815\ud655\ud55c": 804, "\uc81c\uac70\ud558\uae30": 802, "\uc9c1\uc811": 801, "\ucc28\uc774\uc810": 814, "\ucc3e\uae30": 801, "\uccb4\ud06c\uc640": 811, "\ucd08\uae30\ud654": 782, "\ucd94\ub860": 804, "\ucd94\ub860\uc744": 785, "\ucd95\uc57d": 811, "\ucd9c\ub825\uac12\uc744": 811, "\ucee4\uc2a4\ud130\ub9c8\uc774\uc9d5\ud558\uae30": 801, "\ucee4\uc2a4\ud140": [801, 806], "\ucf54\ub4dc": 797, "\ud070": [800, 804], "\ud074\ub798\uc2a4": 776, "\ud0c0\uc785": [792, 811, 814], "\ud0c0\uc785\uc744": 792, "\ud150\uc11c": 782, "\ud234\ub4e4": 785, "\ud30c\uc774\ud504\ub77c\uc778": 775, "\ud30c\ud2f0\uc154\ub2dd": 784, "\ud328\ub7ec\ub2e4\uc784": 794, "\ud328\ud0a4\uc9c0\ub97c": 778, "\ud3ec\uba67": [784, 788, 792], "\ud3ec\uba67\ub4e4": 784, "\ud504\ub85c\uc138\uc2f1": 779, "\ud53c\ucc98": 789, "\ud53c\ucc98\ub4e4": 784, "\ud53c\uccd0": 811, "\ud559\uc2b5": [781, 785, 800, 802, 805, 807, 808, 814, 815, 816, 817], "\ud559\uc2b5\uc5d0": [802, 805, 807], "\ud559\uc2b5\uc744": [784, 806], "\ud559\uc2b5\ud558\uae30": [783, 802, 805, 807, 813], "\ud568\uaed8": 803, "\ud568\uc218": [795, 810, 811], "\ud568\uc218\uc640": 803, "\ud574\ubcf4\uae30": 801, "\ud6a8\uc728\uc801\uc778": 797, "\ud6c4": 811}})